1
00:00:06,160 --> 00:00:09,200
so

2
00:00:06,960 --> 00:00:10,480
hello everybody welcome to my talk about

3
00:00:09,200 --> 00:00:13,200
libre pcb

4
00:00:10,480 --> 00:00:14,160
um maybe first a quick question who

5
00:00:13,200 --> 00:00:17,680
knows already

6
00:00:14,160 --> 00:00:20,800
libre pcb okay maybe

7
00:00:17,680 --> 00:00:24,080
a third and so i was here

8
00:00:20,800 --> 00:00:27,760
uh two years ago um with my

9
00:00:24,080 --> 00:00:30,400
talk introduction to libre pcb

10
00:00:27,760 --> 00:00:31,359
and now i want to give a short update

11
00:00:30,400 --> 00:00:34,640
what's

12
00:00:31,359 --> 00:00:38,160
happening with libre pcb so

13
00:00:34,640 --> 00:00:41,360
for those who don't already know

14
00:00:38,160 --> 00:00:42,398
libre pcb is a free open open source edi

15
00:00:41,360 --> 00:00:45,760
suite

16
00:00:42,399 --> 00:00:48,960
it runs on linux windows and mac and

17
00:00:45,760 --> 00:00:52,160
yet development started already in 2013

18
00:00:48,960 --> 00:00:54,640
and there is a slow but continuous

19
00:00:52,160 --> 00:00:57,519
progress

20
00:00:54,640 --> 00:01:00,320
um and what happened since my last talk

21
00:00:57,520 --> 00:01:03,359
in 2018

22
00:01:00,320 --> 00:01:08,000
in november 2018 there was

23
00:01:03,359 --> 00:01:08,000
our first official stable release

24
00:01:08,119 --> 00:01:13,360
0.1.0 and

25
00:01:10,479 --> 00:01:14,159
after that every few months a new

26
00:01:13,360 --> 00:01:17,520
release was

27
00:01:14,159 --> 00:01:19,840
published and i don't like to

28
00:01:17,520 --> 00:01:21,119
mention every feature implemented in

29
00:01:19,840 --> 00:01:24,320
this time

30
00:01:21,119 --> 00:01:25,520
but just want to focus on some specific

31
00:01:24,320 --> 00:01:28,158
features

32
00:01:25,520 --> 00:01:31,039
and one of these features is the library

33
00:01:28,159 --> 00:01:33,520
editor rule check

34
00:01:31,040 --> 00:01:34,560
probably every hardware designer knows

35
00:01:33,520 --> 00:01:38,399
the problem

36
00:01:34,560 --> 00:01:41,840
you create a package or a symbol

37
00:01:38,400 --> 00:01:44,799
in your library editor then you add it

38
00:01:41,840 --> 00:01:48,000
to your design to your pcb or whatever

39
00:01:44,799 --> 00:01:50,720
and then you realize oh no

40
00:01:48,000 --> 00:01:52,560
designator label for forgotten in the

41
00:01:50,720 --> 00:01:55,119
library editor or oh no

42
00:01:52,560 --> 00:01:56,719
silk screen is overlapping with the pad

43
00:01:55,119 --> 00:02:00,799
or something like that

44
00:01:56,719 --> 00:02:03,280
and then i ask myself why do we have

45
00:02:00,799 --> 00:02:04,079
a design rule check in the board editor

46
00:02:03,280 --> 00:02:06,799
but no

47
00:02:04,079 --> 00:02:07,520
rule check in the library editor because

48
00:02:06,799 --> 00:02:09,759
a lot of

49
00:02:07,520 --> 00:02:11,440
issues you can already catch in the

50
00:02:09,758 --> 00:02:14,640
library editor actually

51
00:02:11,440 --> 00:02:17,920
so in libre pcb we implemented

52
00:02:14,640 --> 00:02:22,000
a pretty simple actually check

53
00:02:17,920 --> 00:02:24,160
with a few rules defined and if you

54
00:02:22,000 --> 00:02:25,360
violate some of these rules you get for

55
00:02:24,160 --> 00:02:27,920
example the

56
00:02:25,360 --> 00:02:29,040
big scary yellow warning there is

57
00:02:27,920 --> 00:02:32,480
something really wrong

58
00:02:29,040 --> 00:02:35,679
with your item you have created and

59
00:02:32,480 --> 00:02:36,000
in the right bottom corner you have a

60
00:02:35,680 --> 00:02:39,440
list

61
00:02:36,000 --> 00:02:42,080
of messages and what's wrong

62
00:02:39,440 --> 00:02:43,680
with this element so you can already fix

63
00:02:42,080 --> 00:02:46,640
it in the library editor

64
00:02:43,680 --> 00:02:48,959
and you're happy when you add it to your

65
00:02:46,640 --> 00:02:48,958
board

66
00:02:49,120 --> 00:02:55,200
and another thing is the liver pcb cli

67
00:02:53,280 --> 00:02:56,720
actually for most users not that

68
00:02:55,200 --> 00:03:01,200
important but

69
00:02:56,720 --> 00:03:04,800
i asked myself in software development

70
00:03:01,200 --> 00:03:07,518
we today we use continuous integration

71
00:03:04,800 --> 00:03:10,720
static code analysis

72
00:03:07,519 --> 00:03:13,920
pull requests for code reviews and so on

73
00:03:10,720 --> 00:03:17,440
but for pcb tools we

74
00:03:13,920 --> 00:03:20,000
for libraries or projects probably

75
00:03:17,440 --> 00:03:21,120
almost nobody uses such tools for

76
00:03:20,000 --> 00:03:24,640
example on github

77
00:03:21,120 --> 00:03:27,120
and continuous integration so

78
00:03:24,640 --> 00:03:27,920
but what's what's needed to make this

79
00:03:27,120 --> 00:03:30,640
possible

80
00:03:27,920 --> 00:03:33,359
we need a cli so you can run checks

81
00:03:30,640 --> 00:03:36,480
automatically on continuous integration

82
00:03:33,360 --> 00:03:38,400
and for example we have a cli which is

83
00:03:36,480 --> 00:03:41,440
able to check libraries

84
00:03:38,400 --> 00:03:41,920
and if they are valid and yeah more

85
00:03:41,440 --> 00:03:46,159
checks

86
00:03:41,920 --> 00:03:49,760
will be added in future and

87
00:03:46,159 --> 00:03:52,959
in for the base libraries of libre pcb

88
00:03:49,760 --> 00:03:54,720
uh those are uh hosted on github we use

89
00:03:52,959 --> 00:03:58,000
github actions to

90
00:03:54,720 --> 00:04:01,120
run these checks so if a pull requests

91
00:03:58,000 --> 00:04:02,000
a pull request adds an issue to the

92
00:04:01,120 --> 00:04:05,280
library

93
00:04:02,000 --> 00:04:05,280
the ci will fail

94
00:04:05,920 --> 00:04:09,760
the same we have for projects and so you

95
00:04:09,200 --> 00:04:12,879
can

96
00:04:09,760 --> 00:04:14,000
use the cli or continuous integration to

97
00:04:12,879 --> 00:04:17,199
run the cli to

98
00:04:14,000 --> 00:04:20,880
check your project if there are directly

99
00:04:17,199 --> 00:04:24,479
for example electrical rule check issues

100
00:04:20,880 --> 00:04:26,719
and um if you want you can also automate

101
00:04:24,479 --> 00:04:28,479
the generation of care profiles boom

102
00:04:26,720 --> 00:04:32,160
export and so on

103
00:04:28,479 --> 00:04:35,599
and actually probably the most important

104
00:04:32,160 --> 00:04:38,320
user of this tool is azler

105
00:04:35,600 --> 00:04:39,919
because now you can upload your libre

106
00:04:38,320 --> 00:04:42,560
pcb project

107
00:04:39,919 --> 00:04:42,960
directly to azler.net if you want to

108
00:04:42,560 --> 00:04:46,960
order

109
00:04:42,960 --> 00:04:49,120
your pcb and aisler runs our cli

110
00:04:46,960 --> 00:04:51,280
to generate the gerber files so you

111
00:04:49,120 --> 00:04:54,880
don't have to generate them

112
00:04:51,280 --> 00:04:57,840
locally on your computer and

113
00:04:54,880 --> 00:05:00,000
the best thing is of course for every

114
00:04:57,840 --> 00:05:03,119
order of a liver pcb project

115
00:05:00,000 --> 00:05:04,000
azler makes a donation to libre pcb so

116
00:05:03,120 --> 00:05:10,479
you can support

117
00:05:04,000 --> 00:05:13,600
libre pcb by ordering your pcbs at azler

118
00:05:10,479 --> 00:05:16,960
um how to get started

119
00:05:13,600 --> 00:05:20,560
with libre pcb um we have

120
00:05:16,960 --> 00:05:24,000
a lot of binaries or packages available

121
00:05:20,560 --> 00:05:26,320
for example for windows for

122
00:05:24,000 --> 00:05:28,080
various linux distributions for arch

123
00:05:26,320 --> 00:05:30,400
linux for nyx os

124
00:05:28,080 --> 00:05:31,758
even for open pandora if someone knows

125
00:05:30,400 --> 00:05:34,719
this thing it's an

126
00:05:31,759 --> 00:05:36,400
arm processor inside and libre pcb runs

127
00:05:34,720 --> 00:05:41,120
pretty nice there

128
00:05:36,400 --> 00:05:44,320
and of course for mac os and bsd

129
00:05:41,120 --> 00:05:48,320
so now i want to give a short demo

130
00:05:44,320 --> 00:05:51,599
to see lever pcb in action

131
00:05:48,320 --> 00:05:54,560
and so let's start libre pcb

132
00:05:51,600 --> 00:05:55,919
if you when you start liver pcb the very

133
00:05:54,560 --> 00:05:59,280
first time

134
00:05:55,919 --> 00:06:01,758
um you get the short wizard which

135
00:05:59,280 --> 00:06:03,440
just asks for for a path where to store

136
00:06:01,759 --> 00:06:07,199
your libraries and so on

137
00:06:03,440 --> 00:06:10,400
just click through you're ready

138
00:06:07,199 --> 00:06:12,479
then the control panel says you don't

139
00:06:10,400 --> 00:06:13,039
have any library installed so it's not

140
00:06:12,479 --> 00:06:16,479
pretty

141
00:06:13,039 --> 00:06:18,479
not very useful yet the tool so you can

142
00:06:16,479 --> 00:06:21,599
just open the library manager

143
00:06:18,479 --> 00:06:25,120
which fetches the library list from

144
00:06:21,600 --> 00:06:28,319
our api server and so

145
00:06:25,120 --> 00:06:30,240
this tool is also able to update your

146
00:06:28,319 --> 00:06:32,560
already installed library

147
00:06:30,240 --> 00:06:33,280
so you can just say oh i want the base

148
00:06:32,560 --> 00:06:36,479
library

149
00:06:33,280 --> 00:06:39,198
let's install that one it downloads the

150
00:06:36,479 --> 00:06:42,719
library from the internet

151
00:06:39,199 --> 00:06:43,039
and installs the library you see already

152
00:06:42,720 --> 00:06:45,520
the

153
00:06:43,039 --> 00:06:47,280
the warning disappeared because now you

154
00:06:45,520 --> 00:06:51,280
have libraries

155
00:06:47,280 --> 00:06:52,799
and yeah we can check what's inside this

156
00:06:51,280 --> 00:06:54,719
library

157
00:06:52,800 --> 00:06:55,840
and the library is scanned in the

158
00:06:54,720 --> 00:06:58,560
background

159
00:06:55,840 --> 00:07:00,239
because there are many files so it takes

160
00:06:58,560 --> 00:07:03,599
a few seconds to

161
00:07:00,240 --> 00:07:06,080
create the index and now

162
00:07:03,599 --> 00:07:06,880
we have the the library elements

163
00:07:06,080 --> 00:07:10,318
download

164
00:07:06,880 --> 00:07:13,680
we just downloaded symbols

165
00:07:10,319 --> 00:07:16,960
packages whatever okay

166
00:07:13,680 --> 00:07:22,160
so now what's a typical use case you

167
00:07:16,960 --> 00:07:22,159
also need a your own local library

168
00:07:22,319 --> 00:07:29,280
so let's create one for example because

169
00:07:26,319 --> 00:07:30,080
some transistor is missing in the other

170
00:07:29,280 --> 00:07:32,318
libraries

171
00:07:30,080 --> 00:07:34,719
then you just need a device for example

172
00:07:32,319 --> 00:07:38,960
so let's add the device

173
00:07:34,720 --> 00:07:38,960
and whatever

174
00:07:39,280 --> 00:07:45,198
and it asks for choosing a component

175
00:07:42,479 --> 00:07:48,240
which we want to implement so let's say

176
00:07:45,199 --> 00:07:48,240
it's a mosfet

177
00:07:49,039 --> 00:07:53,199
and channel and which package you want

178
00:07:52,400 --> 00:07:57,120
to use

179
00:07:53,199 --> 00:07:59,199
maybe to 220.

180
00:07:57,120 --> 00:08:00,400
these library elements the package and

181
00:07:59,199 --> 00:08:02,160
the component is

182
00:08:00,400 --> 00:08:04,479
contained in the base library we just

183
00:08:02,160 --> 00:08:07,599
downloaded

184
00:08:04,479 --> 00:08:08,960
okay so now you have the device and you

185
00:08:07,599 --> 00:08:12,719
only

186
00:08:08,960 --> 00:08:15,359
need to create the pin map basically

187
00:08:12,720 --> 00:08:17,280
open the data sheet assign package pad

188
00:08:15,360 --> 00:08:20,560
one to

189
00:08:17,280 --> 00:08:23,280
drain to to gate

190
00:08:20,560 --> 00:08:25,199
and source maybe and the pad is

191
00:08:23,280 --> 00:08:28,719
unconnected maybe

192
00:08:25,199 --> 00:08:30,160
okay so now we have a warning because we

193
00:08:28,720 --> 00:08:33,360
didn't assign

194
00:08:30,160 --> 00:08:34,479
this device to a category and the cool

195
00:08:33,360 --> 00:08:37,680
thing is

196
00:08:34,479 --> 00:08:39,519
this warning has a a lot of warnings

197
00:08:37,679 --> 00:08:42,159
have a fix button so you can

198
00:08:39,519 --> 00:08:43,200
or even a help button which gives some

199
00:08:42,159 --> 00:08:46,480
context what's

200
00:08:43,200 --> 00:08:48,000
wrong and many warnings have a fix

201
00:08:46,480 --> 00:08:51,040
button and in this case

202
00:08:48,000 --> 00:08:52,080
it opens the category chooser and so you

203
00:08:51,040 --> 00:08:55,599
can assign

204
00:08:52,080 --> 00:08:58,800
a category what else and

205
00:08:55,600 --> 00:09:02,399
or title k title is not

206
00:08:58,800 --> 00:09:06,399
title case because the f is lowercase

207
00:09:02,399 --> 00:09:09,760
can just fix check uppercase finished

208
00:09:06,399 --> 00:09:13,200
no warnings okay so

209
00:09:09,760 --> 00:09:22,560
now we have our library elements ready

210
00:09:13,200 --> 00:09:26,080
so let's create a new project

211
00:09:22,560 --> 00:09:30,319
okay and we start with the schematic

212
00:09:26,080 --> 00:09:30,320
with for example the schematic frame

213
00:09:33,360 --> 00:09:40,640
and of course we want to add our um

214
00:09:37,120 --> 00:09:42,959
our mosfet i added it to the

215
00:09:40,640 --> 00:09:45,439
i don't know where i added it but we can

216
00:09:42,959 --> 00:09:45,439
find it

217
00:09:48,839 --> 00:09:55,200
um

218
00:09:50,880 --> 00:09:58,560
oh here it is under discrete transistors

219
00:09:55,200 --> 00:10:02,399
mosfet and channel here it is

220
00:09:58,560 --> 00:10:02,399
okay so let's add this one

221
00:10:03,120 --> 00:10:11,120
maybe a resistor what else

222
00:10:06,720 --> 00:10:11,120
let's just connect them

223
00:10:11,440 --> 00:10:14,640
something very useful

224
00:10:12,860 --> 00:10:17,200
[Laughter]

225
00:10:14,640 --> 00:10:19,199
that's our schematic so let's switch to

226
00:10:17,200 --> 00:10:21,839
the board editor

227
00:10:19,200 --> 00:10:23,680
and the board editor says we have two

228
00:10:21,839 --> 00:10:26,399
unplaced devices

229
00:10:23,680 --> 00:10:27,599
so let's place them and you can choose

230
00:10:26,399 --> 00:10:29,760
your exact

231
00:10:27,600 --> 00:10:30,839
device here so maybe

232
00:10:29,760 --> 00:10:34,959
[Music]

233
00:10:30,839 --> 00:10:34,959
smd whatever

234
00:10:35,120 --> 00:10:39,920
and our mosfet we just created in the

235
00:10:37,440 --> 00:10:39,920
library

236
00:10:40,560 --> 00:10:46,719
and the cool thing is we didn't

237
00:10:44,000 --> 00:10:49,360
create the package because someone else

238
00:10:46,720 --> 00:10:52,480
already created it for our mosfet

239
00:10:49,360 --> 00:10:55,360
and this package contains multiple

240
00:10:52,480 --> 00:11:00,720
footprint so we can just switch to a

241
00:10:55,360 --> 00:11:03,760
different mounting variant for example

242
00:11:00,720 --> 00:11:07,920
um yeah so let's create some traces

243
00:11:03,760 --> 00:11:10,319
maybe something very simple

244
00:11:07,920 --> 00:11:10,319
okay

245
00:11:11,839 --> 00:11:16,720
now we want to create gerber files and

246
00:11:16,800 --> 00:11:22,319
fabrication data there you can make

247
00:11:19,920 --> 00:11:23,839
some settings but defaults are fine so

248
00:11:22,320 --> 00:11:26,320
let's just generate it

249
00:11:23,839 --> 00:11:28,880
open the directory and we have gerber

250
00:11:26,320 --> 00:11:34,399
files here let's open it

251
00:11:28,880 --> 00:11:38,480
with the gear view and here we are

252
00:11:34,399 --> 00:11:41,360
so simple piece we made in a few minutes

253
00:11:38,480 --> 00:11:43,040
and that's actually the main goal of

254
00:11:41,360 --> 00:11:46,000
libre pcb it should be

255
00:11:43,040 --> 00:11:48,640
easy to create pcbs you don't have to

256
00:11:46,000 --> 00:11:51,680
spend hours and hours and hours

257
00:11:48,640 --> 00:11:55,600
just to know the tool and it's

258
00:11:51,680 --> 00:11:58,479
that easy yeah um

259
00:11:55,600 --> 00:11:59,760
what's the current status of the project

260
00:11:58,480 --> 00:12:03,040
um

261
00:11:59,760 --> 00:12:04,959
basically everything is um working nice

262
00:12:03,040 --> 00:12:08,240
so far so you can

263
00:12:04,959 --> 00:12:10,800
create your pcbs there are already a lot

264
00:12:08,240 --> 00:12:12,240
of pcbs created with libre pcb and order

265
00:12:10,800 --> 00:12:14,319
it

266
00:12:12,240 --> 00:12:16,320
the main issue currently is the board

267
00:12:14,320 --> 00:12:19,200
editor which

268
00:12:16,320 --> 00:12:20,000
needs a lot of usability improvements

269
00:12:19,200 --> 00:12:23,760
and

270
00:12:20,000 --> 00:12:27,519
a lot of features are still missing

271
00:12:23,760 --> 00:12:30,959
and so the priority for the next steps

272
00:12:27,519 --> 00:12:32,160
um highest pro priorities uh add the

273
00:12:30,959 --> 00:12:35,439
missing features like

274
00:12:32,160 --> 00:12:38,959
custom paired shape blind buried wires

275
00:12:35,440 --> 00:12:42,000
slotted holes pads and so on and

276
00:12:38,959 --> 00:12:45,599
improved the board editor to yeah

277
00:12:42,000 --> 00:12:46,800
to be much more powerful also clipboard

278
00:12:45,600 --> 00:12:49,600
cut copy paste

279
00:12:46,800 --> 00:12:51,599
is not available yet in the schematic

280
00:12:49,600 --> 00:12:53,839
and port editors

281
00:12:51,600 --> 00:12:54,639
and of course extending the port

282
00:12:53,839 --> 00:12:58,639
libraries

283
00:12:54,639 --> 00:12:58,639
requires quite some effort

284
00:12:59,360 --> 00:13:06,800
um and priority two is

285
00:13:02,959 --> 00:13:10,160
adding part management for mpns

286
00:13:06,800 --> 00:13:13,680
assembly variants 3d models

287
00:13:10,160 --> 00:13:16,880
is not implemented yet mcat

288
00:13:13,680 --> 00:13:19,920
export hierarchical sheets and so on

289
00:13:16,880 --> 00:13:21,040
and you see many things are still

290
00:13:19,920 --> 00:13:24,560
missing but for

291
00:13:21,040 --> 00:13:27,760
at least for simpler pcbs it's

292
00:13:24,560 --> 00:13:27,760
pretty usable

293
00:13:27,839 --> 00:13:34,399
and yeah if you want to

294
00:13:31,200 --> 00:13:37,760
contribute i would be happy there are

295
00:13:34,399 --> 00:13:40,399
several ways to contribute to libre pcb

296
00:13:37,760 --> 00:13:42,720
just check out the website or the github

297
00:13:40,399 --> 00:13:49,839
repository

298
00:13:42,720 --> 00:13:49,839
yeah that's it

299
00:13:54,000 --> 00:14:00,079
so questions please why did you decide

300
00:13:57,839 --> 00:14:01,600
to make a new project instead of

301
00:14:00,079 --> 00:14:04,880
contributing

302
00:14:01,600 --> 00:14:05,060
very good question i have a slide for

303
00:14:04,880 --> 00:14:10,639
that

304
00:14:05,060 --> 00:14:12,160
[Laughter]

305
00:14:10,639 --> 00:14:14,079
yeah the question was why not

306
00:14:12,160 --> 00:14:17,680
contributing to kitkat and

307
00:14:14,079 --> 00:14:20,880
instead creating a new software and

308
00:14:17,680 --> 00:14:21,199
basically the main reasons are i think

309
00:14:20,880 --> 00:14:23,360
the

310
00:14:21,199 --> 00:14:24,399
underlying a lot of the underlying

311
00:14:23,360 --> 00:14:26,639
concepts are

312
00:14:24,399 --> 00:14:28,160
pretty different so i think i have

313
00:14:26,639 --> 00:14:30,800
different opinions

314
00:14:28,160 --> 00:14:32,079
how an eda tool should work and should

315
00:14:30,800 --> 00:14:35,519
be designed

316
00:14:32,079 --> 00:14:36,399
and usually you as a as a contributor

317
00:14:35,519 --> 00:14:39,519
you can't

318
00:14:36,399 --> 00:14:40,639
completely change the the mindset or the

319
00:14:39,519 --> 00:14:44,000
opinions

320
00:14:40,639 --> 00:14:47,839
of a different project and

321
00:14:44,000 --> 00:14:50,560
the the other thing is um changing

322
00:14:47,839 --> 00:14:51,440
if you uh make it happen to change

323
00:14:50,560 --> 00:14:54,319
fundamental

324
00:14:51,440 --> 00:14:56,000
things it's very hard to keep the

325
00:14:54,320 --> 00:14:59,279
backwards compatibility to

326
00:14:56,000 --> 00:14:59,920
older kiket or whatever projects and so

327
00:14:59,279 --> 00:15:03,040
on

328
00:14:59,920 --> 00:15:05,439
and users wouldn't be happy if

329
00:15:03,040 --> 00:15:07,199
if they can't migrate to the new

330
00:15:05,440 --> 00:15:09,120
software version

331
00:15:07,199 --> 00:15:11,439
and it's much easier to create a new

332
00:15:09,120 --> 00:15:12,079
tool then you don't have legacy things

333
00:15:11,440 --> 00:15:15,839
you don't

334
00:15:12,079 --> 00:15:19,599
have to provide migration paths to

335
00:15:15,839 --> 00:15:22,480
crappy file format or whatever and

336
00:15:19,600 --> 00:15:24,480
the other thing is the target audience

337
00:15:22,480 --> 00:15:27,680
and the priorities is quite different

338
00:15:24,480 --> 00:15:29,920
i think and kitkat is very

339
00:15:27,680 --> 00:15:32,479
feature rich it's professional great

340
00:15:29,920 --> 00:15:36,000
it's very flexible you can basically do

341
00:15:32,480 --> 00:15:39,120
everything with that tool and that's not

342
00:15:36,000 --> 00:15:41,040
the primary goal of libre pcb libre pcb

343
00:15:39,120 --> 00:15:44,720
focus on usability

344
00:15:41,040 --> 00:15:47,759
and intuitive user interface so you can

345
00:15:44,720 --> 00:15:50,959
get started with liverp very quickly

346
00:15:47,759 --> 00:15:55,440
and also portability stability

347
00:15:50,959 --> 00:15:55,758
and the files i would like to put files

348
00:15:55,440 --> 00:15:57,440
uh

349
00:15:55,759 --> 00:15:59,279
projects and so on on the version

350
00:15:57,440 --> 00:16:03,040
control and

351
00:15:59,279 --> 00:16:05,759
this is also a goal of libre pcb2 and

352
00:16:03,040 --> 00:16:08,639
yeah to make it possible much better

353
00:16:05,759 --> 00:16:10,560
than with other tools

354
00:16:08,639 --> 00:16:11,680
when you're working behind the corporate

355
00:16:10,560 --> 00:16:13,599
firewall

356
00:16:11,680 --> 00:16:14,880
applications aren't allowed to access

357
00:16:13,600 --> 00:16:17,279
the internet network

358
00:16:14,880 --> 00:16:18,320
and is it possible to update your

359
00:16:17,279 --> 00:16:21,759
libraries

360
00:16:18,320 --> 00:16:23,759
for a browser um

361
00:16:21,759 --> 00:16:25,839
the question is when working behind

362
00:16:23,759 --> 00:16:31,199
corporate firewalls is it possible

363
00:16:25,839 --> 00:16:31,199
to get the libraries through the browser

364
00:16:32,240 --> 00:16:35,440
because applications are blocked um i

365
00:16:34,800 --> 00:16:38,240
mean

366
00:16:35,440 --> 00:16:39,120
basically the library manager of libre

367
00:16:38,240 --> 00:16:41,040
pcb

368
00:16:39,120 --> 00:16:43,199
just downloads a zip file in the

369
00:16:41,040 --> 00:16:44,079
background and extracts it to a

370
00:16:43,199 --> 00:16:46,000
directory

371
00:16:44,079 --> 00:16:47,120
you can get the zip file directly on

372
00:16:46,000 --> 00:16:49,680
github

373
00:16:47,120 --> 00:16:50,800
you can clone it with git it's no

374
00:16:49,680 --> 00:16:53,040
problem

375
00:16:50,800 --> 00:16:55,599
you just can't use the library manager

376
00:16:53,040 --> 00:16:55,599
in that case

377
00:17:00,639 --> 00:17:06,000
the question was can we import kitkat

378
00:17:03,759 --> 00:17:08,000
files

379
00:17:06,000 --> 00:17:09,599
no at the moment there is no kickhead

380
00:17:08,000 --> 00:17:12,880
import at all

381
00:17:09,599 --> 00:17:15,599
there is a very simple eagle library

382
00:17:12,880 --> 00:17:15,919
import but it's a standalone application

383
00:17:15,599 --> 00:17:19,678
not

384
00:17:15,919 --> 00:17:22,240
integrated into libre pcb yet

385
00:17:19,679 --> 00:17:23,839
yeah how many active contributors on the

386
00:17:22,240 --> 00:17:26,799
project or is it mainly

387
00:17:23,839 --> 00:17:30,079
just you so the question was how many

388
00:17:26,799 --> 00:17:30,079
active contributors we have

389
00:17:30,720 --> 00:17:34,400
i think on if you watch on github i

390
00:17:33,280 --> 00:17:36,879
think it's

391
00:17:34,400 --> 00:17:37,440
20 or 30 contributors or something like

392
00:17:36,880 --> 00:17:41,120
that

393
00:17:37,440 --> 00:17:42,320
but the the main part of libre pcb is

394
00:17:41,120 --> 00:17:45,439
actually implemented by

395
00:17:42,320 --> 00:18:01,840
myself so the contributions are

396
00:17:45,440 --> 00:18:01,840
rather small usually

397
00:18:12,720 --> 00:18:15,919
but then to manage it to change it and

398
00:18:15,200 --> 00:18:18,720
to

399
00:18:15,919 --> 00:18:19,200
keep it updated so could you uh give

400
00:18:18,720 --> 00:18:22,559
some

401
00:18:19,200 --> 00:18:23,600
more overview of how this could be

402
00:18:22,559 --> 00:18:26,399
achieving

403
00:18:23,600 --> 00:18:28,000
libra pcb i mean there's no part of

404
00:18:26,400 --> 00:18:29,840
creating pcb but then

405
00:18:28,000 --> 00:18:31,039
changing something how for example the

406
00:18:29,840 --> 00:18:34,799
libraries

407
00:18:31,039 --> 00:18:37,919
if they change and i download them

408
00:18:34,799 --> 00:18:39,520
will i won't i have any problems with

409
00:18:37,919 --> 00:18:42,960
that i had

410
00:18:39,520 --> 00:18:42,960
some bad experiences with that

411
00:18:54,840 --> 00:19:00,399
um

412
00:18:57,120 --> 00:19:03,120
so i'm not sure how to

413
00:19:00,400 --> 00:19:04,320
so let me summarize the question uh how

414
00:19:03,120 --> 00:19:07,039
do how do you focus

415
00:19:04,320 --> 00:19:08,080
on version control yeah can you repeat

416
00:19:07,039 --> 00:19:11,919
that

417
00:19:08,080 --> 00:19:14,720
yeah how we focus on version control

418
00:19:11,919 --> 00:19:16,640
um of libre pcb projects and libraries

419
00:19:14,720 --> 00:19:20,240
so basically um

420
00:19:16,640 --> 00:19:23,280
the most important thing i think is that

421
00:19:20,240 --> 00:19:25,280
files should not contain any crap for

422
00:19:23,280 --> 00:19:26,240
example which changes everything you

423
00:19:25,280 --> 00:19:28,559
open the project

424
00:19:26,240 --> 00:19:30,640
close it and files are changed that's

425
00:19:28,559 --> 00:19:33,840
horrible for version control

426
00:19:30,640 --> 00:19:36,960
and thus in libre pcb and

427
00:19:33,840 --> 00:19:38,159
we strictly separate information which

428
00:19:36,960 --> 00:19:40,240
needs to be checked in

429
00:19:38,160 --> 00:19:41,600
because it is important for the project

430
00:19:40,240 --> 00:19:44,480
or for the libraries

431
00:19:41,600 --> 00:19:45,360
and information which is not that

432
00:19:44,480 --> 00:19:47,919
important

433
00:19:45,360 --> 00:19:48,559
for example which layer is visible or

434
00:19:47,919 --> 00:19:51,520
hidden

435
00:19:48,559 --> 00:19:52,320
or what zoom level you have and so on

436
00:19:51,520 --> 00:19:54,799
that's not

437
00:19:52,320 --> 00:19:56,320
part of the repository in the end that's

438
00:19:54,799 --> 00:20:00,080
stored only locally

439
00:19:56,320 --> 00:20:00,799
so you don't have um changes you you

440
00:20:00,080 --> 00:20:04,840
don't want

441
00:20:00,799 --> 00:20:07,840
in the in the git log basically thank

442
00:20:04,840 --> 00:20:07,840
you

