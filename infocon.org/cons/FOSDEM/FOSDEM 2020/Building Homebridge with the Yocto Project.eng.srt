1
00:00:06,960 --> 00:00:10,400
hello everybody

2
00:00:08,000 --> 00:00:11,679
thank you for joining um i'm super

3
00:00:10,400 --> 00:00:13,360
excited to be here

4
00:00:11,679 --> 00:00:15,280
my name is lona novi this is not my

5
00:00:13,360 --> 00:00:17,359
first time on fosdem but i'm in love and

6
00:00:15,280 --> 00:00:18,160
false them so every time i'm on stage it

7
00:00:17,359 --> 00:00:20,720
follows them

8
00:00:18,160 --> 00:00:22,720
i'm super super excited uh first of all

9
00:00:20,720 --> 00:00:23,599
thank you very much to philip who has

10
00:00:22,720 --> 00:00:26,080
been running the

11
00:00:23,600 --> 00:00:28,000
embedded dev room for 15 years in a row

12
00:00:26,080 --> 00:00:28,639
there was a gap last year and now thanks

13
00:00:28,000 --> 00:00:31,840
to this

14
00:00:28,640 --> 00:00:35,120
wonderful team thanks to which we have

15
00:00:31,840 --> 00:00:35,120
the embedded dev room again

16
00:00:38,239 --> 00:00:42,078
they're a great team and they deserve it

17
00:00:40,480 --> 00:00:44,559
uh so my name is

18
00:00:42,079 --> 00:00:46,079
i'm working for a consultancy company

19
00:00:44,559 --> 00:00:48,239
called consulko group

20
00:00:46,079 --> 00:00:49,760
the company specialized in embedded

21
00:00:48,239 --> 00:00:50,640
development in various open source

22
00:00:49,760 --> 00:00:53,440
software

23
00:00:50,640 --> 00:00:55,760
and today i'll be showing you some of

24
00:00:53,440 --> 00:00:58,160
the technologies that i

25
00:00:55,760 --> 00:00:59,599
use in my everyday work like the yocto

26
00:00:58,160 --> 00:01:01,519
project and open embedded

27
00:00:59,600 --> 00:01:03,520
to build a makers project and this

28
00:01:01,520 --> 00:01:06,240
project is home bridge

29
00:01:03,520 --> 00:01:07,520
this is the agenda for today i have the

30
00:01:06,240 --> 00:01:10,399
ambitious goal

31
00:01:07,520 --> 00:01:11,119
to go through 30 slides in approximately

32
00:01:10,400 --> 00:01:13,360
20 to

33
00:01:11,119 --> 00:01:15,200
23 minutes i have a few minutes for

34
00:01:13,360 --> 00:01:17,840
questions we'll see if it work out

35
00:01:15,200 --> 00:01:19,680
or maybe not first we're going to talk

36
00:01:17,840 --> 00:01:21,520
about home bridge

37
00:01:19,680 --> 00:01:24,159
home bridge is an open source software

38
00:01:21,520 --> 00:01:25,679
that enables various third-party devices

39
00:01:24,159 --> 00:01:28,560
to apple home

40
00:01:25,680 --> 00:01:30,079
how many of you are using iphone apple

41
00:01:28,560 --> 00:01:31,680
iphone

42
00:01:30,079 --> 00:01:33,600
i'm not using an iphone that's why i'm

43
00:01:31,680 --> 00:01:34,079
not raising my hand all right just a few

44
00:01:33,600 --> 00:01:36,399
of you

45
00:01:34,079 --> 00:01:38,000
don't worry guys the focus is actually

46
00:01:36,400 --> 00:01:38,720
on the open source side of things and

47
00:01:38,000 --> 00:01:40,960
building

48
00:01:38,720 --> 00:01:43,360
a custom new linux distribution that

49
00:01:40,960 --> 00:01:44,798
incorporates home bridge

50
00:01:43,360 --> 00:01:47,280
using the yocto project and open

51
00:01:44,799 --> 00:01:49,040
embedded we'll explore

52
00:01:47,280 --> 00:01:50,799
certain features of the distribution

53
00:01:49,040 --> 00:01:52,560
that i built

54
00:01:50,799 --> 00:01:54,479
a lot of ideas for improvements because

55
00:01:52,560 --> 00:01:56,000
this is a hobby project that i have been

56
00:01:54,479 --> 00:01:57,600
doing in the past few months

57
00:01:56,000 --> 00:01:59,200
and there is room for a lot of

58
00:01:57,600 --> 00:02:00,798
improvements and

59
00:01:59,200 --> 00:02:02,240
finally um there will be some

60
00:02:00,799 --> 00:02:05,280
conclusions

61
00:02:02,240 --> 00:02:05,280
so um

62
00:02:05,520 --> 00:02:09,840
why why i'm doing this obviously the

63
00:02:07,520 --> 00:02:11,519
first answer to anyone on stage should

64
00:02:09,840 --> 00:02:13,040
foster them is that we're doing these

65
00:02:11,520 --> 00:02:14,480
things because because we can

66
00:02:13,040 --> 00:02:16,640
and because it's cool and it's open

67
00:02:14,480 --> 00:02:18,959
source however

68
00:02:16,640 --> 00:02:20,958
the story in this case has another

69
00:02:18,959 --> 00:02:22,560
aspect i have a very good friend from

70
00:02:20,959 --> 00:02:23,280
high school who is an electrical

71
00:02:22,560 --> 00:02:26,959
engineer

72
00:02:23,280 --> 00:02:28,959
and as part of his job uh he did a

73
00:02:26,959 --> 00:02:31,200
very complex setup with very expensive

74
00:02:28,959 --> 00:02:34,239
proprietary tool for a customer of

75
00:02:31,200 --> 00:02:38,160
his and the customer asked him hey can i

76
00:02:34,239 --> 00:02:39,840
do this and that from from my iphone

77
00:02:38,160 --> 00:02:41,760
and the answer was that actually this

78
00:02:39,840 --> 00:02:43,280
expensive proprietary two at that moment

79
00:02:41,760 --> 00:02:44,079
according to my friend was not able to

80
00:02:43,280 --> 00:02:46,319
do it

81
00:02:44,080 --> 00:02:47,920
so he called me for help to do something

82
00:02:46,319 --> 00:02:50,079
with free and open source software

83
00:02:47,920 --> 00:02:51,280
which is obviously better in this case

84
00:02:50,080 --> 00:02:54,800
and the answer was

85
00:02:51,280 --> 00:02:57,200
home bridge that's how we started

86
00:02:54,800 --> 00:02:58,720
he bought a raspberry pi of course this

87
00:02:57,200 --> 00:03:00,000
is one of my favorite single board

88
00:02:58,720 --> 00:03:03,519
computers

89
00:03:00,000 --> 00:03:05,680
and he asked me at his

90
00:03:03,519 --> 00:03:07,680
office at night to set it up we spent a

91
00:03:05,680 --> 00:03:09,840
couple of hours to install raspbian

92
00:03:07,680 --> 00:03:11,680
to enable everything on raspbian

93
00:03:09,840 --> 00:03:12,640
raspbian as i'm sure you know this is

94
00:03:11,680 --> 00:03:14,720
the default

95
00:03:12,640 --> 00:03:16,480
uh linux distribution recommended by the

96
00:03:14,720 --> 00:03:17,280
raspberry pi foundation after that we've

97
00:03:16,480 --> 00:03:19,599
installed

98
00:03:17,280 --> 00:03:21,519
node.js home bridge all plugins all all

99
00:03:19,599 --> 00:03:24,000
dependencies so

100
00:03:21,519 --> 00:03:25,599
honestly this is a little bit annoying

101
00:03:24,000 --> 00:03:27,840
and time-consuming process

102
00:03:25,599 --> 00:03:29,200
it's pretty much going through a list of

103
00:03:27,840 --> 00:03:32,640
steps that you install

104
00:03:29,200 --> 00:03:33,119
things and you are spending some time

105
00:03:32,640 --> 00:03:36,319
just

106
00:03:33,120 --> 00:03:38,159
um waiting for the downloads and the

107
00:03:36,319 --> 00:03:40,560
installation to complete

108
00:03:38,159 --> 00:03:41,280
and for me it's a little bit annoying

109
00:03:40,560 --> 00:03:44,560
but for

110
00:03:41,280 --> 00:03:48,480
non-user uh non-linux users it

111
00:03:44,560 --> 00:03:51,360
could be even a little bit tricky so

112
00:03:48,480 --> 00:03:52,640
after doing this i proposed hey let's do

113
00:03:51,360 --> 00:03:54,400
a distribution that

114
00:03:52,640 --> 00:03:56,480
kind of works out of the box or at least

115
00:03:54,400 --> 00:03:58,560
try to make it work out of the box

116
00:03:56,480 --> 00:04:01,200
i wanted to to have something similar

117
00:03:58,560 --> 00:04:04,239
for other

118
00:04:01,200 --> 00:04:05,920
complementary open source project that i

119
00:04:04,239 --> 00:04:07,360
for home automation that i wanted to run

120
00:04:05,920 --> 00:04:09,760
at home

121
00:04:07,360 --> 00:04:11,040
i have numerous years of professional

122
00:04:09,760 --> 00:04:12,560
experience at consuco group

123
00:04:11,040 --> 00:04:14,560
working with the yorktok project and

124
00:04:12,560 --> 00:04:16,478
open embedded so this was my choice to

125
00:04:14,560 --> 00:04:20,000
build distribution

126
00:04:16,478 --> 00:04:21,599
so in this case i wanted to test the

127
00:04:20,000 --> 00:04:24,160
octoproject in open embedded in the

128
00:04:21,600 --> 00:04:26,960
aspect of maker

129
00:04:24,160 --> 00:04:28,880
a few few words about home bridge it's a

130
00:04:26,960 --> 00:04:32,479
lightweight server that emulates

131
00:04:28,880 --> 00:04:35,440
apple ios homekit api

132
00:04:32,479 --> 00:04:37,360
it's written in node.js and it supports

133
00:04:35,440 --> 00:04:38,320
numerous plugins with this plugins you

134
00:04:37,360 --> 00:04:41,440
can attach

135
00:04:38,320 --> 00:04:42,159
various third-party devices internet of

136
00:04:41,440 --> 00:04:44,800
things or

137
00:04:42,160 --> 00:04:47,360
your do-it-yourself devices that are not

138
00:04:44,800 --> 00:04:49,680
officially supported by apple

139
00:04:47,360 --> 00:04:51,280
nowadays uh the apple ecosystem is

140
00:04:49,680 --> 00:04:53,280
becoming more open

141
00:04:51,280 --> 00:04:55,440
however homebreach has been a while for

142
00:04:53,280 --> 00:04:58,400
uh for several years

143
00:04:55,440 --> 00:05:00,639
it can be installed by mac os windows

144
00:04:58,400 --> 00:05:02,320
and of course glue linux distributions

145
00:05:00,639 --> 00:05:04,880
in our case we we're going to build a

146
00:05:02,320 --> 00:05:06,960
custom glue linux distribution

147
00:05:04,880 --> 00:05:08,400
it's entirely open source it's available

148
00:05:06,960 --> 00:05:11,758
at github

149
00:05:08,400 --> 00:05:13,198
and our apache license and this is the

150
00:05:11,759 --> 00:05:15,759
web page of home bridge where you can

151
00:05:13,199 --> 00:05:15,759
get started

152
00:05:15,919 --> 00:05:22,000
over these years home bridge has

153
00:05:18,960 --> 00:05:23,919
has established a huge community it

154
00:05:22,000 --> 00:05:25,039
was started by nick farina who is based

155
00:05:23,919 --> 00:05:27,758
in the us

156
00:05:25,039 --> 00:05:29,039
i have never personally met this

157
00:05:27,759 --> 00:05:30,720
developer but he

158
00:05:29,039 --> 00:05:32,639
seems extremely skillful and very

159
00:05:30,720 --> 00:05:34,400
helpful he's in twitter so we can

160
00:05:32,639 --> 00:05:36,560
find him follow him and say thanks for

161
00:05:34,400 --> 00:05:38,320
this great project that he has done

162
00:05:36,560 --> 00:05:40,160
there are thousands of plugins developed

163
00:05:38,320 --> 00:05:43,599
by various contributors

164
00:05:40,160 --> 00:05:44,000
and um there are a lot of contributors

165
00:05:43,600 --> 00:05:46,320
to

166
00:05:44,000 --> 00:05:47,600
the core home bridge node.js

167
00:05:46,320 --> 00:05:49,919
implementation

168
00:05:47,600 --> 00:05:52,880
and this is based on the work of a lot

169
00:05:49,919 --> 00:05:55,120
of people through the years

170
00:05:52,880 --> 00:05:56,240
this is a short list of some of the home

171
00:05:55,120 --> 00:06:00,400
bridge plugins which

172
00:05:56,240 --> 00:06:02,400
i think are useful to to have

173
00:06:00,400 --> 00:06:04,239
of course each plugin depends on the

174
00:06:02,400 --> 00:06:07,758
type of device that you have

175
00:06:04,240 --> 00:06:11,759
and the way you want to set it up

176
00:06:07,759 --> 00:06:14,080
this is a very user-friendly plug-in

177
00:06:11,759 --> 00:06:15,680
because this is a web interface which

178
00:06:14,080 --> 00:06:19,840
allows you to

179
00:06:15,680 --> 00:06:21,199
modify home bridge from your web browser

180
00:06:19,840 --> 00:06:24,239
and this is just the list

181
00:06:21,199 --> 00:06:26,080
of uh lists of other plugins i'm listing

182
00:06:24,240 --> 00:06:28,160
impudity here because in our linux

183
00:06:26,080 --> 00:06:31,599
distribution that we're going to build

184
00:06:28,160 --> 00:06:34,639
i've included an imputed broker

185
00:06:31,600 --> 00:06:35,919
um so

186
00:06:34,639 --> 00:06:38,080
let's build an embedded linux

187
00:06:35,919 --> 00:06:39,840
distribution how to do it how many of

188
00:06:38,080 --> 00:06:41,440
you have built a linux distribution from

189
00:06:39,840 --> 00:06:44,318
scratch

190
00:06:41,440 --> 00:06:45,919
all right that's fantastic uh pretty

191
00:06:44,319 --> 00:06:48,720
much the whole room

192
00:06:45,919 --> 00:06:50,000
um there's a lot of different ways how

193
00:06:48,720 --> 00:06:52,880
to approach this

194
00:06:50,000 --> 00:06:54,000
um one of the ways is the yocto project

195
00:06:52,880 --> 00:06:56,400
and open embedded

196
00:06:54,000 --> 00:06:57,440
which i'll be using uh for the rest of

197
00:06:56,400 --> 00:06:59,440
the slides here

198
00:06:57,440 --> 00:07:00,639
of course other popular projects are

199
00:06:59,440 --> 00:07:03,759
build root

200
00:07:00,639 --> 00:07:04,560
pdx desk which is having a talk later on

201
00:07:03,759 --> 00:07:07,199
today

202
00:07:04,560 --> 00:07:09,039
open wrt which is more for wi-fi routers

203
00:07:07,199 --> 00:07:09,840
but can be used for other projects as

204
00:07:09,039 --> 00:07:13,759
well

205
00:07:09,840 --> 00:07:16,239
and the most popular in my opinion

206
00:07:13,759 --> 00:07:17,280
maker approach is to grab a debian

207
00:07:16,240 --> 00:07:19,520
derivative

208
00:07:17,280 --> 00:07:20,719
and to you know change the route fs this

209
00:07:19,520 --> 00:07:22,960
is a

210
00:07:20,720 --> 00:07:24,160
fast way to do it however it has some

211
00:07:22,960 --> 00:07:26,560
disadvantages

212
00:07:24,160 --> 00:07:28,080
and chris who's over there had an

213
00:07:26,560 --> 00:07:29,280
excellent talk that i would like to

214
00:07:28,080 --> 00:07:31,359
recommend you

215
00:07:29,280 --> 00:07:33,440
it was for at embedded linux conference

216
00:07:31,360 --> 00:07:34,720
in lyon he was comparing

217
00:07:33,440 --> 00:07:36,960
what are the advantages and the

218
00:07:34,720 --> 00:07:37,759
disadvantages when you proceed with the

219
00:07:36,960 --> 00:07:42,159
octo project

220
00:07:37,759 --> 00:07:45,759
or use a debian distribution

221
00:07:42,160 --> 00:07:47,919
so um what to include in our

222
00:07:45,759 --> 00:07:49,360
distribution

223
00:07:47,919 --> 00:07:51,359
when you start building an embedded

224
00:07:49,360 --> 00:07:52,639
linux distribution you need a board

225
00:07:51,360 --> 00:07:54,479
support package

226
00:07:52,639 --> 00:07:56,479
in general the board support package as

227
00:07:54,479 --> 00:07:57,039
the name suggests is provided by the

228
00:07:56,479 --> 00:07:59,440
vendor

229
00:07:57,039 --> 00:08:00,318
the people that are manufacturing the

230
00:07:59,440 --> 00:08:02,960
boards

231
00:08:00,319 --> 00:08:03,360
however in reality it's not always like

232
00:08:02,960 --> 00:08:05,520
this

233
00:08:03,360 --> 00:08:06,960
but often there are community supported

234
00:08:05,520 --> 00:08:07,599
board support packages that are pretty

235
00:08:06,960 --> 00:08:09,280
good

236
00:08:07,599 --> 00:08:11,199
the board support package includes a

237
00:08:09,280 --> 00:08:15,359
bootloader for example ubud

238
00:08:11,199 --> 00:08:15,360
a linux kernel device three drivers

239
00:08:15,680 --> 00:08:22,400
after uh having the bsp

240
00:08:18,960 --> 00:08:25,520
ready we need a neat system system d

241
00:08:22,400 --> 00:08:27,039
was my choice i personally like it

242
00:08:25,520 --> 00:08:29,198
i know that a lot of people don't like

243
00:08:27,039 --> 00:08:32,399
it but yeah that's my choice

244
00:08:29,199 --> 00:08:35,440
um we we needed something to

245
00:08:32,399 --> 00:08:37,839
for connectivity um and

246
00:08:35,440 --> 00:08:38,719
interfacing the board one of the

247
00:08:37,839 --> 00:08:40,399
problems that

248
00:08:38,719 --> 00:08:42,080
i've experienced setting up raspbian

249
00:08:40,399 --> 00:08:42,479
with my friend for very first time is

250
00:08:42,080 --> 00:08:44,880
that

251
00:08:42,479 --> 00:08:46,480
raspbian is not intended for the things

252
00:08:44,880 --> 00:08:48,560
out of the box we wanted to do

253
00:08:46,480 --> 00:08:50,880
so we had to go to raspy config and

254
00:08:48,560 --> 00:08:54,560
manually enable ssh vnc

255
00:08:50,880 --> 00:08:57,760
serial communication and so on and

256
00:08:54,560 --> 00:08:59,839
in my distribution i wanted everything

257
00:08:57,760 --> 00:09:01,360
all those interfaces to be enabled by

258
00:08:59,839 --> 00:09:05,279
default out of the box

259
00:09:01,360 --> 00:09:08,080
we need node.js and npm uh because

260
00:09:05,279 --> 00:09:09,760
homebreach is written in node.js i

261
00:09:08,080 --> 00:09:12,000
wanted to add a mosquito broker

262
00:09:09,760 --> 00:09:14,480
this is for my personal use but i'm sure

263
00:09:12,000 --> 00:09:15,920
that a lot of you are already familiar

264
00:09:14,480 --> 00:09:16,800
with the machine to machine protocol

265
00:09:15,920 --> 00:09:19,199
impurity

266
00:09:16,800 --> 00:09:20,479
it's a really cool thing to have in

267
00:09:19,200 --> 00:09:23,600
anything related to

268
00:09:20,480 --> 00:09:26,240
home automation we needed an

269
00:09:23,600 --> 00:09:27,760
x11 window links we needed a windowing

270
00:09:26,240 --> 00:09:30,160
system and i decided to

271
00:09:27,760 --> 00:09:32,720
use x11 although i'm a huge fan of way

272
00:09:30,160 --> 00:09:34,480
one but for this project i said okay x11

273
00:09:32,720 --> 00:09:38,000
is okay

274
00:09:34,480 --> 00:09:41,279
i put the open box as a compositor

275
00:09:38,000 --> 00:09:43,440
and a few uh basic applications so

276
00:09:41,279 --> 00:09:44,720
even if there is a user without

277
00:09:43,440 --> 00:09:48,080
experience in linux

278
00:09:44,720 --> 00:09:49,120
if he starts the the distribution he has

279
00:09:48,080 --> 00:09:52,320
the basic things

280
00:09:49,120 --> 00:09:52,320
already installed there

281
00:09:53,120 --> 00:09:56,160
one of the things that is interesting is

282
00:09:54,880 --> 00:09:58,160
the surf

283
00:09:56,160 --> 00:09:59,760
web browser very minimalistic web

284
00:09:58,160 --> 00:10:01,199
browser that is controlled only by

285
00:09:59,760 --> 00:10:05,839
keyboard shortcuts

286
00:10:01,200 --> 00:10:05,839
and as soon as the distribution turns on

287
00:10:05,920 --> 00:10:11,519
serv presents the web ui

288
00:10:08,959 --> 00:10:12,000
provided by the plugin for home bridge

289
00:10:11,519 --> 00:10:15,200
and

290
00:10:12,000 --> 00:10:17,519
i wanted to add a low-cost

291
00:10:15,200 --> 00:10:19,760
oled display for some basic information

292
00:10:17,519 --> 00:10:21,760
because the idea of this thing is that

293
00:10:19,760 --> 00:10:23,200
you're going to use in most of the cases

294
00:10:21,760 --> 00:10:26,880
the strip distribution

295
00:10:23,200 --> 00:10:29,120
without a proper hdmi monitor

296
00:10:26,880 --> 00:10:31,040
so let's get started now with the yoko

297
00:10:29,120 --> 00:10:33,680
project and open but how many of you

298
00:10:31,040 --> 00:10:36,560
have been using the octoproject and open

299
00:10:33,680 --> 00:10:38,880
embedded are and are familiar with this

300
00:10:36,560 --> 00:10:39,920
all right that's good so now comes the

301
00:10:38,880 --> 00:10:42,160
really hard part

302
00:10:39,920 --> 00:10:44,079
yoktu is great thing but it's very hard

303
00:10:42,160 --> 00:10:46,399
to explain the terminology

304
00:10:44,079 --> 00:10:48,000
without messing the words so forgive me

305
00:10:46,399 --> 00:10:50,320
if i make a mistake

306
00:10:48,000 --> 00:10:51,920
so the yocto project is an open source

307
00:10:50,320 --> 00:10:53,360
collaborative project of the linux

308
00:10:51,920 --> 00:10:56,880
foundation

309
00:10:53,360 --> 00:10:58,480
um it is it is designed to build custom

310
00:10:56,880 --> 00:11:01,760
gnu linux distribution

311
00:10:58,480 --> 00:11:04,240
uh used in variety of industries

312
00:11:01,760 --> 00:11:06,000
the yocto project has chosen the open

313
00:11:04,240 --> 00:11:08,079
embedded build system

314
00:11:06,000 --> 00:11:09,440
which includes bit bake and open

315
00:11:08,079 --> 00:11:12,640
embedded core

316
00:11:09,440 --> 00:11:14,800
pokey is the reference distribution

317
00:11:12,640 --> 00:11:16,319
of the yocto project it provides

318
00:11:14,800 --> 00:11:18,240
metadata so you

319
00:11:16,320 --> 00:11:20,399
don't actually start from scratch but

320
00:11:18,240 --> 00:11:21,360
you already have a list of recipes and

321
00:11:20,399 --> 00:11:23,360
layers

322
00:11:21,360 --> 00:11:25,200
on which you can you know have a quick

323
00:11:23,360 --> 00:11:27,839
start and after that you can continue

324
00:11:25,200 --> 00:11:30,560
customizing

325
00:11:27,839 --> 00:11:32,880
the yocto project has releases twice per

326
00:11:30,560 --> 00:11:32,880
year

327
00:11:33,519 --> 00:11:41,760
these are the recent releases

328
00:11:38,160 --> 00:11:44,160
the octoproject and open embedded have

329
00:11:41,760 --> 00:11:45,680
a lot of um contributors working on

330
00:11:44,160 --> 00:11:47,680
those projects there is so there are

331
00:11:45,680 --> 00:11:50,800
wiki pages with a lot of information

332
00:11:47,680 --> 00:11:53,599
also mating lists so for the releases

333
00:11:50,800 --> 00:11:54,639
the current stable release is zeus which

334
00:11:53,600 --> 00:11:57,760
was released

335
00:11:54,639 --> 00:11:59,920
in october and in april we are expecting

336
00:11:57,760 --> 00:12:02,560
the next the next release

337
00:11:59,920 --> 00:12:04,560
as of today it's recommended to use the

338
00:12:02,560 --> 00:12:05,279
latest stable that's why i've based what

339
00:12:04,560 --> 00:12:08,800
i do

340
00:12:05,279 --> 00:12:10,399
on version 3 0 zeus and

341
00:12:08,800 --> 00:12:11,920
if you follow the steps that you're

342
00:12:10,399 --> 00:12:14,000
going to see on the next slide

343
00:12:11,920 --> 00:12:15,439
you'll get an image based on this uh

344
00:12:14,000 --> 00:12:18,639
yocto project release

345
00:12:15,440 --> 00:12:21,040
in long term i plan to keep updating

346
00:12:18,639 --> 00:12:21,760
the um the versions of the project and

347
00:12:21,040 --> 00:12:23,680
to keep

348
00:12:21,760 --> 00:12:25,360
up to date with the latest releases of

349
00:12:23,680 --> 00:12:28,800
the octo project

350
00:12:25,360 --> 00:12:31,440
so in general the yoctu

351
00:12:28,800 --> 00:12:32,880
project way of doing things is that you

352
00:12:31,440 --> 00:12:36,160
have various

353
00:12:32,880 --> 00:12:37,200
meta layers and often when you are

354
00:12:36,160 --> 00:12:39,199
starting

355
00:12:37,200 --> 00:12:41,279
as a developer to make something you

356
00:12:39,200 --> 00:12:44,480
need to put a list of

357
00:12:41,279 --> 00:12:47,040
and to to download the list of layers

358
00:12:44,480 --> 00:12:48,560
after that to set up some configurations

359
00:12:47,040 --> 00:12:50,719
to avoid doing this

360
00:12:48,560 --> 00:12:52,079
over and over again i have used the

361
00:12:50,720 --> 00:12:55,279
google repo tool

362
00:12:52,079 --> 00:12:58,959
which is a software tool for managing

363
00:12:55,279 --> 00:13:02,240
a collection of git repositories and

364
00:12:58,959 --> 00:13:04,239
with this command you can get the

365
00:13:02,240 --> 00:13:06,560
manifest of the

366
00:13:04,240 --> 00:13:08,480
the repo that i have created after that

367
00:13:06,560 --> 00:13:11,839
to run repo sync

368
00:13:08,480 --> 00:13:14,399
and using a template you can initialize

369
00:13:11,839 --> 00:13:15,279
the build environment the build

370
00:13:14,399 --> 00:13:17,600
environment

371
00:13:15,279 --> 00:13:18,720
setup includes bb layers file which is a

372
00:13:17,600 --> 00:13:21,360
description a list

373
00:13:18,720 --> 00:13:22,160
of all meta layers used for building the

374
00:13:21,360 --> 00:13:24,800
project

375
00:13:22,160 --> 00:13:25,839
and local.conf is another file where you

376
00:13:24,800 --> 00:13:27,599
set the machine

377
00:13:25,839 --> 00:13:29,680
because the octa project and open

378
00:13:27,600 --> 00:13:32,399
embedded allow you with the same

379
00:13:29,680 --> 00:13:33,199
metadata and various board support

380
00:13:32,399 --> 00:13:36,079
packages

381
00:13:33,200 --> 00:13:36,880
to have the same image built for various

382
00:13:36,079 --> 00:13:39,599
hardware

383
00:13:36,880 --> 00:13:41,360
in this case uh for the moment this

384
00:13:39,600 --> 00:13:42,639
distribution is supporting only

385
00:13:41,360 --> 00:13:45,120
raspberry pi

386
00:13:42,639 --> 00:13:46,160
by default we are building a 64-bit

387
00:13:45,120 --> 00:13:49,600
version of

388
00:13:46,160 --> 00:13:52,560
for raspberry pi 4 however since we have

389
00:13:49,600 --> 00:13:55,680
the meta raspberry pi

390
00:13:52,560 --> 00:13:58,959
layer included you can manually switch

391
00:13:55,680 --> 00:14:02,000
the machine id to

392
00:13:58,959 --> 00:14:04,638
raspberry pi 3 or previous model

393
00:14:02,000 --> 00:14:06,560
after that you have to type in bit bake

394
00:14:04,639 --> 00:14:10,160
it will take a while so please be

395
00:14:06,560 --> 00:14:13,199
passionate have some spend some time

396
00:14:10,160 --> 00:14:14,560
drinking a cup of coffee or tea and in a

397
00:14:13,199 --> 00:14:16,880
few hours you have the image

398
00:14:14,560 --> 00:14:18,479
alternatively if you don't have a linux

399
00:14:16,880 --> 00:14:19,439
machine don't want to build the source

400
00:14:18,480 --> 00:14:21,680
from scratch

401
00:14:19,440 --> 00:14:23,760
or and if you want to act like a regular

402
00:14:21,680 --> 00:14:26,319
user yes there is a binary

403
00:14:23,760 --> 00:14:28,160
release in github you can just go there

404
00:14:26,320 --> 00:14:30,240
download the image

405
00:14:28,160 --> 00:14:32,800
and flash it on a micro sd card and use

406
00:14:30,240 --> 00:14:35,839
it to flash it on a micro sd card

407
00:14:32,800 --> 00:14:37,839
um the recommended way for people that

408
00:14:35,839 --> 00:14:40,079
are feeling more comfortable

409
00:14:37,839 --> 00:14:41,199
with graphical user interfaces is balena

410
00:14:40,079 --> 00:14:44,479
etcher

411
00:14:41,199 --> 00:14:45,279
um blennature is free and open source

412
00:14:44,480 --> 00:14:48,079
software

413
00:14:45,279 --> 00:14:48,800
you select the the image the drive and

414
00:14:48,079 --> 00:14:51,760
just

415
00:14:48,800 --> 00:14:52,719
flash it that that's all uh

416
00:14:51,760 --> 00:14:56,720
alternatively

417
00:14:52,720 --> 00:14:58,800
for those of you who are more uh who are

418
00:14:56,720 --> 00:15:00,800
feeling more comfortable in a linux

419
00:14:58,800 --> 00:15:02,959
terminal you can do it with dd from the

420
00:15:00,800 --> 00:15:05,199
linux terminal as well

421
00:15:02,959 --> 00:15:06,239
so let's have a look a quick look at

422
00:15:05,199 --> 00:15:09,599
what's

423
00:15:06,240 --> 00:15:13,120
inside the the image this is home bridge

424
00:15:09,600 --> 00:15:15,199
config ui x um open in a serv

425
00:15:13,120 --> 00:15:16,240
web browser i've have taken these

426
00:15:15,199 --> 00:15:18,399
screenshots

427
00:15:16,240 --> 00:15:19,519
uh this is what you want what you get as

428
00:15:18,399 --> 00:15:22,399
a user interface

429
00:15:19,519 --> 00:15:23,920
when you start these are qr codes due to

430
00:15:22,399 --> 00:15:25,920
security reasons i've just

431
00:15:23,920 --> 00:15:27,599
wiped out parts of the code so hopefully

432
00:15:25,920 --> 00:15:29,439
i'm secure now

433
00:15:27,600 --> 00:15:32,000
but this is what we're going to get when

434
00:15:29,440 --> 00:15:35,040
you turn on

435
00:15:32,000 --> 00:15:36,800
the the distribution for very first time

436
00:15:35,040 --> 00:15:38,880
it's a web browser that shows you this

437
00:15:36,800 --> 00:15:40,079
this if you have an hdmi monitor

438
00:15:38,880 --> 00:15:40,800
attached this is what you're going to

439
00:15:40,079 --> 00:15:43,279
see

440
00:15:40,800 --> 00:15:45,199
or if you connect via vnc you'll see

441
00:15:43,279 --> 00:15:47,120
again this thing

442
00:15:45,199 --> 00:15:48,880
there are various connectivity and

443
00:15:47,120 --> 00:15:52,000
interfacing options

444
00:15:48,880 --> 00:15:53,600
enabled by default ssh

445
00:15:52,000 --> 00:15:55,519
for the moment there is no password you

446
00:15:53,600 --> 00:15:57,040
just log in as root and it's up to you

447
00:15:55,519 --> 00:15:59,360
to change the password to

448
00:15:57,040 --> 00:16:00,240
something secure there is also vnc

449
00:15:59,360 --> 00:16:03,440
running

450
00:16:00,240 --> 00:16:06,240
uh so you can use you can use

451
00:16:03,440 --> 00:16:07,440
vnc viewer to remotely connect to to the

452
00:16:06,240 --> 00:16:09,600
device

453
00:16:07,440 --> 00:16:11,839
and of course serial console so if you

454
00:16:09,600 --> 00:16:13,440
have a usb to ur debug cable you can get

455
00:16:11,839 --> 00:16:15,920
some output

456
00:16:13,440 --> 00:16:17,600
one of the things that is really cool

457
00:16:15,920 --> 00:16:20,479
about home automation projects

458
00:16:17,600 --> 00:16:21,360
is the ability to put them in a nice

459
00:16:20,480 --> 00:16:24,399
case

460
00:16:21,360 --> 00:16:27,120
and box and this is um this is a

461
00:16:24,399 --> 00:16:29,440
din rail case there are several din rail

462
00:16:27,120 --> 00:16:32,079
cases available for raspberry pi

463
00:16:29,440 --> 00:16:32,639
uh i bought both of those i ended up

464
00:16:32,079 --> 00:16:34,880
using

465
00:16:32,639 --> 00:16:37,120
more this joy it cases they are

466
00:16:34,880 --> 00:16:41,279
available as well as for raspberry pi 3

467
00:16:37,120 --> 00:16:44,160
and 4. i designed

468
00:16:41,279 --> 00:16:45,680
a raspberry pi hardware touch on top

469
00:16:44,160 --> 00:16:47,199
this is another board that you plug on

470
00:16:45,680 --> 00:16:48,800
top of the raspberry pi

471
00:16:47,199 --> 00:16:50,719
several years ago i had a talk

472
00:16:48,800 --> 00:16:52,800
explaining how to design these

473
00:16:50,720 --> 00:16:54,560
these boards it's a very straightforward

474
00:16:52,800 --> 00:16:56,160
process actually it's quite easy

475
00:16:54,560 --> 00:16:57,920
i'm doing it with a free and open source

476
00:16:56,160 --> 00:16:59,439
software kick-ass and this is open

477
00:16:57,920 --> 00:17:00,479
source hardware because it's available

478
00:16:59,440 --> 00:17:02,399
at github

479
00:17:00,480 --> 00:17:03,600
super simple board with three buttons

480
00:17:02,399 --> 00:17:05,199
and a few

481
00:17:03,600 --> 00:17:08,799
slots for attaching chi squared c

482
00:17:05,199 --> 00:17:11,679
devices one of which is the display

483
00:17:08,799 --> 00:17:12,959
and here is the mini display those are

484
00:17:11,679 --> 00:17:14,640
low cost super cheap

485
00:17:12,959 --> 00:17:16,400
mini oled displays that i've attached on

486
00:17:14,640 --> 00:17:18,640
top of the raspberry pi

487
00:17:16,400 --> 00:17:20,079
put it in the case so if you mount this

488
00:17:18,640 --> 00:17:22,000
case on a din rail

489
00:17:20,079 --> 00:17:24,159
you have some basic information like

490
00:17:22,000 --> 00:17:26,880
what is the ip address of this

491
00:17:24,160 --> 00:17:28,079
uh of this box and statuses of the

492
00:17:26,880 --> 00:17:30,000
system this services

493
00:17:28,079 --> 00:17:31,120
that are more interesting home bridge

494
00:17:30,000 --> 00:17:35,039
and impunity

495
00:17:31,120 --> 00:17:38,399
this is the impurity broker mosquito

496
00:17:35,039 --> 00:17:40,640
so how does it work when you turn on

497
00:17:38,400 --> 00:17:41,919
the image for very first time system

498
00:17:40,640 --> 00:17:44,480
disservices

499
00:17:41,919 --> 00:17:47,919
starts a home bridge and its plugins

500
00:17:44,480 --> 00:17:47,919
open box which is um

501
00:17:48,640 --> 00:17:53,120
compositor on top of x 11 starts serve

502
00:17:51,840 --> 00:17:55,439
this is the web browser

503
00:17:53,120 --> 00:17:56,799
and serve automatically loads the web

504
00:17:55,440 --> 00:18:00,559
interface of

505
00:17:56,799 --> 00:18:02,799
the plugin provided for home bridge

506
00:18:00,559 --> 00:18:04,240
also there is a python script which is

507
00:18:02,799 --> 00:18:06,480
showing information on the

508
00:18:04,240 --> 00:18:08,240
mini oled display which is attached over

509
00:18:06,480 --> 00:18:10,320
i squared c

510
00:18:08,240 --> 00:18:11,840
these are the layers that we are using

511
00:18:10,320 --> 00:18:12,799
in this distribution as i told you it's

512
00:18:11,840 --> 00:18:14,720
based on poki

513
00:18:12,799 --> 00:18:17,039
meta raspberry pi is the boar support

514
00:18:14,720 --> 00:18:21,600
package layer those are standard

515
00:18:17,039 --> 00:18:24,320
layers that you can find in every

516
00:18:21,600 --> 00:18:26,080
in meta open embedded like metaop

517
00:18:24,320 --> 00:18:28,480
embedded meta python

518
00:18:26,080 --> 00:18:30,159
metagnome and meta networking we we're

519
00:18:28,480 --> 00:18:31,760
using recipes from all those layers

520
00:18:30,160 --> 00:18:33,360
that's why they're included

521
00:18:31,760 --> 00:18:34,960
and this is meta home bridge layer that

522
00:18:33,360 --> 00:18:38,159
i have created and i put there

523
00:18:34,960 --> 00:18:39,840
some new um new recipes

524
00:18:38,160 --> 00:18:42,960
this is the surf web browser how many of

525
00:18:39,840 --> 00:18:45,199
you are familiar with serve

526
00:18:42,960 --> 00:18:46,000
all right it's pretty cool uh give it a

527
00:18:45,200 --> 00:18:48,240
try

528
00:18:46,000 --> 00:18:50,240
it's just keyboard shortcuts a web

529
00:18:48,240 --> 00:18:51,760
browser that opens in full screen and

530
00:18:50,240 --> 00:18:54,960
you only have

531
00:18:51,760 --> 00:18:56,160
uh keyboard shortcuts pretty cool and

532
00:18:54,960 --> 00:18:58,400
pretty convenient

533
00:18:56,160 --> 00:18:59,360
so uh this is what you get when when it

534
00:18:58,400 --> 00:19:02,640
starts

535
00:18:59,360 --> 00:19:07,120
if you press alt plus f4 it will just

536
00:19:02,640 --> 00:19:10,160
close and you have uh um open box

537
00:19:07,120 --> 00:19:12,799
uh so open box is highly configurable

538
00:19:10,160 --> 00:19:13,600
and very simple windowing manager for

539
00:19:12,799 --> 00:19:15,360
x11

540
00:19:13,600 --> 00:19:17,840
there are a few just a few configuration

541
00:19:15,360 --> 00:19:18,719
files and with those configuration files

542
00:19:17,840 --> 00:19:20,959
you can make

543
00:19:18,720 --> 00:19:23,200
a lot of customizations so on the next

544
00:19:20,960 --> 00:19:25,280
slide you see how i have customized it

545
00:19:23,200 --> 00:19:27,120
and what you get if you turn off surf

546
00:19:25,280 --> 00:19:29,120
this is uh this is the screen that you

547
00:19:27,120 --> 00:19:31,439
get in the in the distribution that

548
00:19:29,120 --> 00:19:33,520
i've explained you how to build uh as

549
00:19:31,440 --> 00:19:34,160
you can see it's just a black dark

550
00:19:33,520 --> 00:19:37,200
screen

551
00:19:34,160 --> 00:19:40,320
with a few icons i believe these are

552
00:19:37,200 --> 00:19:41,039
the minimal viable applications needed

553
00:19:40,320 --> 00:19:44,320
for even

554
00:19:41,039 --> 00:19:46,080
non-linux experienced user to configure

555
00:19:44,320 --> 00:19:48,399
home bridge and to

556
00:19:46,080 --> 00:19:50,159
feel comfortable with this this

557
00:19:48,400 --> 00:19:51,919
distribution

558
00:19:50,160 --> 00:19:53,840
i promise you to show you how to build

559
00:19:51,919 --> 00:19:55,840
uh home bridge with the octo project in

560
00:19:53,840 --> 00:19:57,678
open embedded this is a recipe

561
00:19:55,840 --> 00:19:59,039
um it's a standard recipe that's

562
00:19:57,679 --> 00:20:02,159
inheriting uh

563
00:19:59,039 --> 00:20:04,720
mpm uh so in yocto

564
00:20:02,159 --> 00:20:06,000
there there's there there there are a

565
00:20:04,720 --> 00:20:07,919
lot of classes that you can

566
00:20:06,000 --> 00:20:09,440
reuse this is just a cold snippet not

567
00:20:07,919 --> 00:20:12,559
the whole recipe so we are

568
00:20:09,440 --> 00:20:15,919
inheriting mpm here this is

569
00:20:12,559 --> 00:20:19,120
the name of the recipe which is in green

570
00:20:15,919 --> 00:20:21,120
this is the version of the recipe and

571
00:20:19,120 --> 00:20:23,360
uh after that bit bakes takes care of

572
00:20:21,120 --> 00:20:26,239
the rest to build it

573
00:20:23,360 --> 00:20:26,719
this is home bridge at npm gas so you if

574
00:20:26,240 --> 00:20:28,640
you

575
00:20:26,720 --> 00:20:30,320
if you want to install it manually this

576
00:20:28,640 --> 00:20:31,760
is uh how to proceed

577
00:20:30,320 --> 00:20:34,000
for those of you who are familiar with

578
00:20:31,760 --> 00:20:37,919
node.js and

579
00:20:34,000 --> 00:20:39,440
i'm using the same url to build it

580
00:20:37,919 --> 00:20:41,280
this is the home bridge system disk

581
00:20:39,440 --> 00:20:42,640
service which takes care of

582
00:20:41,280 --> 00:20:45,120
starting home bridge when the

583
00:20:42,640 --> 00:20:47,039
application starts i'm not going to too

584
00:20:45,120 --> 00:20:48,000
much details the slides are available at

585
00:20:47,039 --> 00:20:50,080
slideshare as well

586
00:20:48,000 --> 00:20:52,320
as on the faucet page i'll make sure to

587
00:20:50,080 --> 00:20:55,520
update them right after them

588
00:20:52,320 --> 00:20:58,480
after this presentation so

589
00:20:55,520 --> 00:21:00,000
what's next obviously what i did for um

590
00:20:58,480 --> 00:21:01,360
over a couple of weekends it's not

591
00:21:00,000 --> 00:21:03,520
enough and there's plenty of things

592
00:21:01,360 --> 00:21:04,799
to be done one of the things that i

593
00:21:03,520 --> 00:21:05,918
would like to have is continuous

594
00:21:04,799 --> 00:21:08,000
integration

595
00:21:05,919 --> 00:21:09,200
and support future releases of the yocto

596
00:21:08,000 --> 00:21:11,360
project to build a few

597
00:21:09,200 --> 00:21:13,520
images binary images so eventually

598
00:21:11,360 --> 00:21:14,080
people can start using what i have been

599
00:21:13,520 --> 00:21:16,240
done

600
00:21:14,080 --> 00:21:17,918
i have done uh for the moment there are

601
00:21:16,240 --> 00:21:20,480
just a few of us using it if

602
00:21:17,919 --> 00:21:21,520
of course it's a very new product i want

603
00:21:20,480 --> 00:21:24,320
to support

604
00:21:21,520 --> 00:21:25,360
more hardware uh platforms especially

605
00:21:24,320 --> 00:21:29,360
stm32

606
00:21:25,360 --> 00:21:32,559
mp1 which i think is a very interesting

607
00:21:29,360 --> 00:21:33,360
new system on a chip and uh would fit

608
00:21:32,559 --> 00:21:36,720
well

609
00:21:33,360 --> 00:21:38,479
for um more you know industrial

610
00:21:36,720 --> 00:21:40,159
environment where there is dust and so

611
00:21:38,480 --> 00:21:43,679
on raspberry pi

612
00:21:40,159 --> 00:21:46,240
is not the perfect hardware for this um

613
00:21:43,679 --> 00:21:46,720
for this environment software dates over

614
00:21:46,240 --> 00:21:49,679
the year

615
00:21:46,720 --> 00:21:51,280
either with mender or os3 both have

616
00:21:49,679 --> 00:21:53,360
advantages and disadvantages

617
00:21:51,280 --> 00:21:55,039
both are great actually uh and this is

618
00:21:53,360 --> 00:21:55,840
something that is on my to-do list to

619
00:21:55,039 --> 00:21:59,200
integrate

620
00:21:55,840 --> 00:22:01,360
uh both of those um open source software

621
00:21:59,200 --> 00:22:02,720
solutions support uh yogto project and

622
00:22:01,360 --> 00:22:04,639
open embedded

623
00:22:02,720 --> 00:22:06,799
integration of more home bridge plugins

624
00:22:04,640 --> 00:22:07,679
out of the box once you start this image

625
00:22:06,799 --> 00:22:09,440
you can

626
00:22:07,679 --> 00:22:10,799
install manually various home bridge

627
00:22:09,440 --> 00:22:12,640
plugins however i would like to

628
00:22:10,799 --> 00:22:16,000
integrate more

629
00:22:12,640 --> 00:22:16,720
more of them so hopefully you've enjoyed

630
00:22:16,000 --> 00:22:18,640
this talk

631
00:22:16,720 --> 00:22:20,640
but even if you haven't enjoyed it there

632
00:22:18,640 --> 00:22:21,919
are some benefits for the ecosystem

633
00:22:20,640 --> 00:22:25,200
because

634
00:22:21,919 --> 00:22:27,919
during the way during my work

635
00:22:25,200 --> 00:22:29,360
i was able to upstream some

636
00:22:27,919 --> 00:22:32,080
contributions to

637
00:22:29,360 --> 00:22:32,959
meta open embedded which are for surf

638
00:22:32,080 --> 00:22:35,678
recipe

639
00:22:32,960 --> 00:22:37,200
stallone tray and update mosquito and

640
00:22:35,679 --> 00:22:38,880
open box

641
00:22:37,200 --> 00:22:40,880
and at the end of this talk i would like

642
00:22:38,880 --> 00:22:44,159
to share some conclusions

643
00:22:40,880 --> 00:22:44,799
so first of all it's something that i

644
00:22:44,159 --> 00:22:46,720
knew

645
00:22:44,799 --> 00:22:48,720
and i'm sure you also knew before the

646
00:22:46,720 --> 00:22:51,440
start of this talk homebreach is a great

647
00:22:48,720 --> 00:22:55,120
open source platform if you are an

648
00:22:51,440 --> 00:22:56,799
ios apple ios user and want to integrate

649
00:22:55,120 --> 00:22:58,799
various devices

650
00:22:56,799 --> 00:23:00,320
with the apple ecosystem and it's an

651
00:22:58,799 --> 00:23:01,760
open source solution for various

652
00:23:00,320 --> 00:23:04,480
third-party devices

653
00:23:01,760 --> 00:23:05,520
the yocto project and open embedded are

654
00:23:04,480 --> 00:23:07,760
a great

655
00:23:05,520 --> 00:23:08,639
way to build custom embedded linux

656
00:23:07,760 --> 00:23:10,879
distributions

657
00:23:08,640 --> 00:23:13,039
it's a de facto and industry standard

658
00:23:10,880 --> 00:23:13,520
used in automotive in medical industries

659
00:23:13,039 --> 00:23:15,440
in

660
00:23:13,520 --> 00:23:17,039
in networking in various internet of

661
00:23:15,440 --> 00:23:19,440
things however

662
00:23:17,039 --> 00:23:20,158
uh the the last conclusion is about

663
00:23:19,440 --> 00:23:22,240
makers

664
00:23:20,159 --> 00:23:24,240
the octo project and open embedded still

665
00:23:22,240 --> 00:23:26,480
have a steep learning curve you have to

666
00:23:24,240 --> 00:23:28,720
learn a lot of things to get started

667
00:23:26,480 --> 00:23:30,720
and when you build an image from scratch

668
00:23:28,720 --> 00:23:33,520
it's take a significant amount of time

669
00:23:30,720 --> 00:23:35,919
even if you have a powerful hardware so

670
00:23:33,520 --> 00:23:38,320
still for maker projects

671
00:23:35,919 --> 00:23:40,000
it will take some time for you to get

672
00:23:38,320 --> 00:23:41,600
started with the octa project and open

673
00:23:40,000 --> 00:23:42,640
embedded especially if you don't have

674
00:23:41,600 --> 00:23:44,559
previous knowledge

675
00:23:42,640 --> 00:23:45,679
but the octa project has a wonderful

676
00:23:44,559 --> 00:23:48,000
documentation and

677
00:23:45,679 --> 00:23:50,320
i encourage you to give it a try thank

678
00:23:48,000 --> 00:23:52,559
you very much

679
00:23:50,320 --> 00:23:53,490
and we have like one or two minutes for

680
00:23:52,559 --> 00:24:01,360
questions

681
00:23:53,490 --> 00:24:05,840
[Applause]

682
00:24:01,360 --> 00:24:05,840
any questions yeah

683
00:24:07,679 --> 00:24:12,880
why should someone choose yocto over

684
00:24:09,760 --> 00:24:12,879
something like build route

685
00:24:13,039 --> 00:24:17,440
excellent question so i also have some

686
00:24:15,760 --> 00:24:18,400
upstream contributions to build root and

687
00:24:17,440 --> 00:24:21,440
i like build root

688
00:24:18,400 --> 00:24:21,919
however i personally use the yocto

689
00:24:21,440 --> 00:24:23,840
project

690
00:24:21,919 --> 00:24:25,120
as on a daily basis at my work at

691
00:24:23,840 --> 00:24:26,879
kensuku group

692
00:24:25,120 --> 00:24:29,199
so i'm feeling more comfortable with the

693
00:24:26,880 --> 00:24:30,720
okto i think

694
00:24:29,200 --> 00:24:33,200
just a personal opinion it's a very

695
00:24:30,720 --> 00:24:36,240
sensitive topic i think it's more

696
00:24:33,200 --> 00:24:36,960
customizable and more powerful in

697
00:24:36,240 --> 00:24:38,559
certain ways

698
00:24:36,960 --> 00:24:41,440
however build root is a great choice as

699
00:24:38,559 --> 00:24:46,559
well and there was another

700
00:24:41,440 --> 00:24:50,080
can you please pass it

701
00:24:46,559 --> 00:24:50,879
thank you for your talk um you said that

702
00:24:50,080 --> 00:24:54,240
you

703
00:24:50,880 --> 00:24:57,600
first did did it on raspbian then

704
00:24:54,240 --> 00:24:59,520
did your distribution using yokto um do

705
00:24:57,600 --> 00:25:00,080
you have an estimation of how long it

706
00:24:59,520 --> 00:25:02,639
took you

707
00:25:00,080 --> 00:25:03,279
to do it on raspbian versus how long it

708
00:25:02,640 --> 00:25:06,960
took

709
00:25:03,279 --> 00:25:06,960
to do it on yokto

710
00:25:10,240 --> 00:25:13,279
all right thank you that's an excellent

711
00:25:11,520 --> 00:25:14,480
question so the initial setup with

712
00:25:13,279 --> 00:25:16,559
raspbian was a matter of

713
00:25:14,480 --> 00:25:18,559
like couple of hours which included a

714
00:25:16,559 --> 00:25:20,320
quick crash course to my friend who was

715
00:25:18,559 --> 00:25:22,240
non-linux user

716
00:25:20,320 --> 00:25:23,840
for my distribution it takes a

717
00:25:22,240 --> 00:25:25,919
significant amount of time to build

718
00:25:23,840 --> 00:25:27,918
this distribution from scratch but once

719
00:25:25,919 --> 00:25:28,720
you have it to get started it's a matter

720
00:25:27,919 --> 00:25:30,720
of like

721
00:25:28,720 --> 00:25:31,919
15 minutes to download the image flash

722
00:25:30,720 --> 00:25:34,640
it and get started

723
00:25:31,919 --> 00:25:35,600
so from user's perspective this is a

724
00:25:34,640 --> 00:25:37,279
very fast way

725
00:25:35,600 --> 00:25:39,039
to approach because it's a distribution

726
00:25:37,279 --> 00:25:40,400
made for this time is up so thank you

727
00:25:39,039 --> 00:25:43,840
very much for joining i hope you've

728
00:25:40,400 --> 00:25:43,840
enjoyed it

