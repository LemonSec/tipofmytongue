1
00:00:13,840 --> 00:00:17,840
hi

2
00:00:14,920 --> 00:00:20,240
um thanks for coming to my talk

3
00:00:17,840 --> 00:00:22,960
um who have you only here for the matrix

4
00:00:20,240 --> 00:00:22,959
talk afterwards

5
00:00:23,920 --> 00:00:27,760
don't worry i'll be talking about matrix

6
00:00:25,680 --> 00:00:30,640
a bit as well

7
00:00:27,760 --> 00:00:32,800
so hi i'm marcus i'm a free software

8
00:00:30,640 --> 00:00:34,880
developer from berlin

9
00:00:32,800 --> 00:00:35,839
i've been working on the free android

10
00:00:34,880 --> 00:00:38,879
ecosystem

11
00:00:35,840 --> 00:00:40,000
for the last two or three years what

12
00:00:38,879 --> 00:00:42,160
does it mean

13
00:00:40,000 --> 00:00:44,160
it means i'm using an android phone but

14
00:00:42,160 --> 00:00:45,919
without any google services or google

15
00:00:44,160 --> 00:00:48,319
play store

16
00:00:45,920 --> 00:00:50,879
and i want to make that a more pleasant

17
00:00:48,320 --> 00:00:53,760
experience

18
00:00:50,879 --> 00:00:55,199
so i'm an astroid core contributor and

19
00:00:53,760 --> 00:00:58,320
app maintainer

20
00:00:55,199 --> 00:01:00,559
also for a while um

21
00:00:58,320 --> 00:01:02,160
so who are you here is using an android

22
00:01:00,559 --> 00:01:05,759
phone

23
00:01:02,160 --> 00:01:07,280
oh wow and who views using the google

24
00:01:05,760 --> 00:01:09,600
play store apps from the google play

25
00:01:07,280 --> 00:01:09,600
store

26
00:01:10,000 --> 00:01:17,840
but half or something like that

27
00:01:14,080 --> 00:01:20,960
um yeah so that's what i'm

28
00:01:17,840 --> 00:01:22,560
trying to improve um so push

29
00:01:20,960 --> 00:01:24,798
notifications

30
00:01:22,560 --> 00:01:26,080
um they turn out to be one of the key

31
00:01:24,799 --> 00:01:28,960
missing pieces

32
00:01:26,080 --> 00:01:30,640
for free android apps apps that want to

33
00:01:28,960 --> 00:01:33,919
be published on f droid

34
00:01:30,640 --> 00:01:36,320
because currently there's

35
00:01:33,920 --> 00:01:39,439
if you google how to do push

36
00:01:36,320 --> 00:01:39,439
notifications on android you

37
00:01:39,520 --> 00:01:43,119
get that yeah use those google service

38
00:01:42,320 --> 00:01:45,279
um

39
00:01:43,119 --> 00:01:46,799
get into that later um so push

40
00:01:45,280 --> 00:01:49,280
notifications are when a

41
00:01:46,799 --> 00:01:50,399
server a web app web server sends

42
00:01:49,280 --> 00:01:52,479
unsolicited

43
00:01:50,399 --> 00:01:54,079
unsolicited content to an app on your

44
00:01:52,479 --> 00:01:56,000
phone

45
00:01:54,079 --> 00:01:57,600
that is wizard the app specifically

46
00:01:56,000 --> 00:02:02,399
asking for

47
00:01:57,600 --> 00:02:05,039
give me this update it's also used for

48
00:02:02,399 --> 00:02:06,000
marketing purposes by proprietary apps a

49
00:02:05,040 --> 00:02:09,440
lot so

50
00:02:06,000 --> 00:02:10,878
all of those cnn whatever applications

51
00:02:09,440 --> 00:02:13,680
do

52
00:02:10,878 --> 00:02:14,879
um not really really helpful um push

53
00:02:13,680 --> 00:02:17,760
notifications

54
00:02:14,879 --> 00:02:19,599
a lot of the time um but it's also like

55
00:02:17,760 --> 00:02:20,720
a requirement for doing instant

56
00:02:19,599 --> 00:02:24,640
messaging

57
00:02:20,720 --> 00:02:26,720
um or voiceover ip apps on your phone

58
00:02:24,640 --> 00:02:28,480
because it's it's really no use if

59
00:02:26,720 --> 00:02:29,920
somebody calls you and your phone

60
00:02:28,480 --> 00:02:31,840
tells you half an hour later oh you got

61
00:02:29,920 --> 00:02:35,200
a call um

62
00:02:31,840 --> 00:02:39,680
so we need push notifications um

63
00:02:35,200 --> 00:02:39,679
so how how do you send

64
00:02:40,239 --> 00:02:43,760
information from a server to a client

65
00:02:41,840 --> 00:02:48,000
without the client asking for it

66
00:02:43,760 --> 00:02:49,760
uh well we cheat we ask beforehand

67
00:02:48,000 --> 00:02:52,080
give me new information at some point

68
00:02:49,760 --> 00:02:55,200
later so we keep an open connection

69
00:02:52,080 --> 00:02:58,720
which the server then can use to send

70
00:02:55,200 --> 00:02:59,599
those updates to the client the problem

71
00:02:58,720 --> 00:03:03,120
is keeping

72
00:02:59,599 --> 00:03:05,119
a connection open does require

73
00:03:03,120 --> 00:03:07,920
maintenance of those connections

74
00:03:05,120 --> 00:03:10,400
um and that means battery power on

75
00:03:07,920 --> 00:03:12,319
mobile

76
00:03:10,400 --> 00:03:13,599
um even more so under varying network

77
00:03:12,319 --> 00:03:18,640
conditions um

78
00:03:13,599 --> 00:03:22,079
flaky wi-fi flaky gsm network

79
00:03:18,640 --> 00:03:24,640
um so that means in turn

80
00:03:22,080 --> 00:03:26,400
that keeping it one connection open for

81
00:03:24,640 --> 00:03:28,319
every app on your phone that wants to

82
00:03:26,400 --> 00:03:30,840
receive push notifications

83
00:03:28,319 --> 00:03:33,599
to every one of their different web

84
00:03:30,840 --> 00:03:35,519
services

85
00:03:33,599 --> 00:03:38,879
well that works but it's going to drain

86
00:03:35,519 --> 00:03:38,879
your battery really really fast

87
00:03:39,280 --> 00:03:43,519
that's why google introduced well google

88
00:03:41,840 --> 00:03:46,159
cloud messaging and later

89
00:03:43,519 --> 00:03:47,840
firebase cloud messaging which bundles

90
00:03:46,159 --> 00:03:51,359
all those push notifications

91
00:03:47,840 --> 00:03:53,519
into one connection um which goes to

92
00:03:51,360 --> 00:03:55,040
google servers so your phone is

93
00:03:53,519 --> 00:03:58,000
connecting to

94
00:03:55,040 --> 00:04:00,000
the firebase service where justice for

95
00:03:58,000 --> 00:04:02,080
receiving push notifications

96
00:04:00,000 --> 00:04:06,000
and all those web services send their

97
00:04:02,080 --> 00:04:06,000
push notifications to google service

98
00:04:06,640 --> 00:04:12,319
which then forwards it to your device

99
00:04:10,000 --> 00:04:14,000
but there's a number of drawbacks for

100
00:04:12,319 --> 00:04:15,679
once it requires google

101
00:04:14,000 --> 00:04:17,199
play services being present on the

102
00:04:15,680 --> 00:04:22,000
device which is

103
00:04:17,199 --> 00:04:24,320
uh the non-free part of android um

104
00:04:22,000 --> 00:04:26,160
it also requires every app that wants to

105
00:04:24,320 --> 00:04:29,840
register for push notifications

106
00:04:26,160 --> 00:04:29,840
to include a proprietary library

107
00:04:30,160 --> 00:04:37,199
distributed by google so

108
00:04:33,199 --> 00:04:39,360
that actually means when you get free or

109
00:04:37,199 --> 00:04:40,720
um apps you thought you were free on the

110
00:04:39,360 --> 00:04:43,600
google play service

111
00:04:40,720 --> 00:04:45,120
which do google cloud messaging they're

112
00:04:43,600 --> 00:04:46,960
not actually free software

113
00:04:45,120 --> 00:04:49,919
because they include a proprietary

114
00:04:46,960 --> 00:04:52,960
library or multiple ones

115
00:04:49,919 --> 00:04:55,520
um well that means

116
00:04:52,960 --> 00:04:58,239
all your push messages are sent through

117
00:04:55,520 --> 00:04:58,240
google servers

118
00:04:58,479 --> 00:05:02,719
your foss apps aren't actually poss

119
00:05:00,240 --> 00:05:02,720
anymore

120
00:05:03,039 --> 00:05:10,080
that includes riot conversations firefox

121
00:05:06,560 --> 00:05:11,440
jamie nextcloud rocketchat

122
00:05:10,080 --> 00:05:15,758
if you get them from the google play

123
00:05:11,440 --> 00:05:18,800
service from the google play store

124
00:05:15,759 --> 00:05:21,840
and there's also one other key drawback

125
00:05:18,800 --> 00:05:24,160
because well

126
00:05:21,840 --> 00:05:26,719
matrix and xmpp and rocketchatternextdot

127
00:05:24,160 --> 00:05:29,120
are decentralized by design so

128
00:05:26,720 --> 00:05:29,759
you can host your own instance or people

129
00:05:29,120 --> 00:05:32,880
you can use

130
00:05:29,759 --> 00:05:32,880
instances of other people

131
00:05:33,919 --> 00:05:40,320
but when

132
00:05:37,440 --> 00:05:41,120
the developers of the app built the apk

133
00:05:40,320 --> 00:05:43,360
of that app

134
00:05:41,120 --> 00:05:44,560
they register for the google cloud

135
00:05:43,360 --> 00:05:46,400
messaging service

136
00:05:44,560 --> 00:05:48,000
and they get a key from google to send

137
00:05:46,400 --> 00:05:50,239
those push notifications through those

138
00:05:48,000 --> 00:05:53,759
google servers to your device

139
00:05:50,240 --> 00:05:56,080
and that key is tied to the apk so

140
00:05:53,759 --> 00:05:58,000
um and you can't make it public because

141
00:05:56,080 --> 00:06:00,479
otherwise google would just block it

142
00:05:58,000 --> 00:06:02,560
so now you have to send your push

143
00:06:00,479 --> 00:06:06,000
receive your personal messages through

144
00:06:02,560 --> 00:06:07,680
two hops from your next instance you

145
00:06:06,000 --> 00:06:10,639
send a push notification

146
00:06:07,680 --> 00:06:12,160
to a server hosted by the next cloud app

147
00:06:10,639 --> 00:06:13,120
developers who forwards it to google

148
00:06:12,160 --> 00:06:15,520
cloud messaging

149
00:06:13,120 --> 00:06:17,520
who forwards it to your device so now

150
00:06:15,520 --> 00:06:18,719
for an actually decentralized systems

151
00:06:17,520 --> 00:06:22,719
you introduce

152
00:06:18,720 --> 00:06:26,240
two centralized hops which is not good

153
00:06:22,720 --> 00:06:28,560
um yeah

154
00:06:26,240 --> 00:06:30,479
or the alternative to that would be if

155
00:06:28,560 --> 00:06:31,680
you host the next.instance you have to

156
00:06:30,479 --> 00:06:35,360
distribute your own

157
00:06:31,680 --> 00:06:38,880
apks or the next.apps which works but is

158
00:06:35,360 --> 00:06:42,240
a real hassle

159
00:06:38,880 --> 00:06:43,520
um so what are the alternatives if you

160
00:06:42,240 --> 00:06:46,080
don't want to use firebase cloud

161
00:06:43,520 --> 00:06:48,719
messaging well everybody builds their

162
00:06:46,080 --> 00:06:50,479
own more or less reliable solutions

163
00:06:48,720 --> 00:06:52,479
some protocols can do it better than

164
00:06:50,479 --> 00:06:54,639
others like xmpp they can do

165
00:06:52,479 --> 00:06:56,880
in-band push notifications because they

166
00:06:54,639 --> 00:06:59,199
have a persistent

167
00:06:56,880 --> 00:07:00,960
persistent connection anyway that works

168
00:06:59,199 --> 00:07:04,479
reasonably well

169
00:07:00,960 --> 00:07:07,758
um but android makes it uh

170
00:07:04,479 --> 00:07:10,479
quite hard to run background tasks so

171
00:07:07,759 --> 00:07:12,240
um it's a struggle and the battery life

172
00:07:10,479 --> 00:07:14,840
is still horrible if you have all the

173
00:07:12,240 --> 00:07:16,639
different apps with all their persistent

174
00:07:14,840 --> 00:07:20,479
connections

175
00:07:16,639 --> 00:07:21,919
so um what do we want to do differently

176
00:07:20,479 --> 00:07:23,680
well first of all it's going to be free

177
00:07:21,919 --> 00:07:27,440
software including

178
00:07:23,680 --> 00:07:29,840
server client client library parts

179
00:07:27,440 --> 00:07:33,199
it's got to be decentralized because we

180
00:07:29,840 --> 00:07:36,638
want people to run their own instances

181
00:07:33,199 --> 00:07:39,599
and then we want users to be in control

182
00:07:36,639 --> 00:07:42,319
which means the user of a smartphone can

183
00:07:39,599 --> 00:07:45,360
choose a push server instance

184
00:07:42,319 --> 00:07:48,560
they want to register with they trust to

185
00:07:45,360 --> 00:07:50,879
handle their data and metadata

186
00:07:48,560 --> 00:07:52,800
and this push server instance is then

187
00:07:50,879 --> 00:07:54,800
communicated to

188
00:07:52,800 --> 00:07:56,160
all the different servers for

189
00:07:54,800 --> 00:07:59,840
corresponding to all the different apps

190
00:07:56,160 --> 00:07:59,840
on their phones

191
00:08:00,319 --> 00:08:05,840
and we can also do away with this

192
00:08:02,639 --> 00:08:08,639
developer key requirement

193
00:08:05,840 --> 00:08:10,318
because it's actually only used for

194
00:08:08,639 --> 00:08:12,639
accounting by google

195
00:08:10,319 --> 00:08:14,960
and as we are want to be accountable to

196
00:08:12,639 --> 00:08:18,560
the user not to app developers

197
00:08:14,960 --> 00:08:22,318
um we don't actually need

198
00:08:18,560 --> 00:08:24,840
apk to account push account pairing

199
00:08:22,319 --> 00:08:26,000
um so you don't need this intermediary

200
00:08:24,840 --> 00:08:28,960
hub

201
00:08:26,000 --> 00:08:31,440
um so how does the architecture of this

202
00:08:28,960 --> 00:08:31,440
look like

203
00:08:31,680 --> 00:08:34,959
um well we have android apps on your

204
00:08:34,159 --> 00:08:37,439
phone

205
00:08:34,958 --> 00:08:38,640
installed by user they want to receive

206
00:08:37,440 --> 00:08:41,360
push notifications

207
00:08:38,640 --> 00:08:42,319
and they talk to some web service which

208
00:08:41,360 --> 00:08:43,440
notifies them

209
00:08:42,320 --> 00:08:45,680
or which they want to receive

210
00:08:43,440 --> 00:08:50,080
notifications from

211
00:08:45,680 --> 00:08:50,079
um the web service

212
00:08:51,120 --> 00:08:55,200
it receives well when the app registers

213
00:08:53,760 --> 00:08:58,080
for push notifications

214
00:08:55,200 --> 00:08:58,880
it gets a token it's called push token

215
00:08:58,080 --> 00:09:01,440
um

216
00:08:58,880 --> 00:09:02,000
it sends us to this to the web service

217
00:09:01,440 --> 00:09:03,760
um

218
00:09:02,000 --> 00:09:05,440
and the web services saves this push

219
00:09:03,760 --> 00:09:07,360
saves this push token

220
00:09:05,440 --> 00:09:09,360
and whenever it wants to send them push

221
00:09:07,360 --> 00:09:13,600
notification to one specific app

222
00:09:09,360 --> 00:09:16,640
instance it uses a push token

223
00:09:13,600 --> 00:09:16,640
as authentication

224
00:09:17,120 --> 00:09:21,760
the web services sends this push

225
00:09:19,519 --> 00:09:24,399
notification through the push server

226
00:09:21,760 --> 00:09:26,319
which is part of the open push project

227
00:09:24,399 --> 00:09:29,839
um

228
00:09:26,320 --> 00:09:33,839
so the push server has an api

229
00:09:29,839 --> 00:09:35,760
um for the push client

230
00:09:33,839 --> 00:09:38,160
which we'll come to in a second to

231
00:09:35,760 --> 00:09:41,200
register for push notifications

232
00:09:38,160 --> 00:09:44,399
um it generates those push tokens and

233
00:09:41,200 --> 00:09:47,920
um stores the matching of a

234
00:09:44,399 --> 00:09:51,920
phone or push client to the push token

235
00:09:47,920 --> 00:09:53,439
and um then it provides the api to the

236
00:09:51,920 --> 00:09:56,880
server to the web services

237
00:09:53,440 --> 00:09:58,720
for receiving incoming pushes and then

238
00:09:56,880 --> 00:10:01,920
it forwards them to

239
00:09:58,720 --> 00:10:05,680
the push client the push client in this

240
00:10:01,920 --> 00:10:08,319
model is the synapse running on your

241
00:10:05,680 --> 00:10:08,319
android phone

242
00:10:08,880 --> 00:10:15,439
it handles the registrations for

243
00:10:12,399 --> 00:10:17,120
pushes by other apps at registers with a

244
00:10:15,440 --> 00:10:19,040
push service

245
00:10:17,120 --> 00:10:20,320
it's a part where you can choose which

246
00:10:19,040 --> 00:10:23,680
push server

247
00:10:20,320 --> 00:10:25,120
to use um and it's responsible for

248
00:10:23,680 --> 00:10:28,079
keeping the open connection

249
00:10:25,120 --> 00:10:28,079
to the push server

250
00:10:28,160 --> 00:10:32,240
and whenever it receives the push

251
00:10:30,160 --> 00:10:34,079
notification it distributes it to the

252
00:10:32,240 --> 00:10:37,600
other apps which have previously

253
00:10:34,079 --> 00:10:40,719
registered with it um

254
00:10:37,600 --> 00:10:44,160
so does it look um on a picture

255
00:10:40,720 --> 00:10:47,839
so the green parts are

256
00:10:44,160 --> 00:10:50,399
the things from the open push project um

257
00:10:47,839 --> 00:10:51,360
and the red parts are basically the

258
00:10:50,399 --> 00:10:55,839
users

259
00:10:51,360 --> 00:10:57,360
of this system so um this is your phone

260
00:10:55,839 --> 00:11:00,079
these are the apps on your phone and

261
00:10:57,360 --> 00:11:03,920
these every app talks to one

262
00:11:00,079 --> 00:11:06,160
server um

263
00:11:03,920 --> 00:11:07,279
so now when it when you install an app

264
00:11:06,160 --> 00:11:09,600
um

265
00:11:07,279 --> 00:11:10,640
it registers to the push client on your

266
00:11:09,600 --> 00:11:14,240
phone

267
00:11:10,640 --> 00:11:16,160
um ask it for a push token

268
00:11:14,240 --> 00:11:17,920
the push client registers with a push

269
00:11:16,160 --> 00:11:20,880
server the server

270
00:11:17,920 --> 00:11:22,160
generates a token sends it to the client

271
00:11:20,880 --> 00:11:26,320
send it to the app

272
00:11:22,160 --> 00:11:31,600
which then sends to the app server

273
00:11:26,320 --> 00:11:31,600
and when then you wanna um

274
00:11:32,240 --> 00:11:36,000
when the app server then generates a

275
00:11:34,240 --> 00:11:38,800
push notification

276
00:11:36,000 --> 00:11:40,240
um it sends it the other way around to

277
00:11:38,800 --> 00:11:42,959
the push server

278
00:11:40,240 --> 00:11:43,680
which um sends it to the push client on

279
00:11:42,959 --> 00:11:45,119
your phone

280
00:11:43,680 --> 00:11:48,479
which forwards it to the app on your

281
00:11:45,120 --> 00:11:48,480
phone um

282
00:11:48,640 --> 00:11:52,079
this connection here from the push

283
00:11:50,000 --> 00:11:56,320
client is a push server is the one that

284
00:11:52,079 --> 00:11:58,800
is kept alive by your phone and so

285
00:11:56,320 --> 00:12:00,000
when you receive a push notification

286
00:11:58,800 --> 00:12:02,560
from it

287
00:12:00,000 --> 00:12:03,519
it wakes up the app and the app then can

288
00:12:02,560 --> 00:12:05,439
then

289
00:12:03,519 --> 00:12:07,120
talk to the app server again and get

290
00:12:05,440 --> 00:12:12,160
more information

291
00:12:07,120 --> 00:12:16,480
or whatever so what's the current status

292
00:12:12,160 --> 00:12:19,760
um there's the an open api

293
00:12:16,480 --> 00:12:22,399
specification of the server part um

294
00:12:19,760 --> 00:12:22,880
that's roughly done probably pending a

295
00:12:22,399 --> 00:12:27,200
few

296
00:12:22,880 --> 00:12:28,399
changes at the as we go along

297
00:12:27,200 --> 00:12:30,720
it's this corresponding server

298
00:12:28,399 --> 00:12:33,600
implementation python which is kind of

299
00:12:30,720 --> 00:12:37,600
meant as a positive prototype

300
00:12:33,600 --> 00:12:38,320
for seeing if this whole thing is viable

301
00:12:37,600 --> 00:12:40,160
um

302
00:12:38,320 --> 00:12:43,519
it's relatively thin so implementing the

303
00:12:40,160 --> 00:12:46,800
same api in a different language

304
00:12:43,519 --> 00:12:46,800
would not be that hard

305
00:12:47,120 --> 00:12:50,480
then there's an android client

306
00:12:48,320 --> 00:12:54,480
implementation which is

307
00:12:50,480 --> 00:12:57,440
still work in progress uh android is

308
00:12:54,480 --> 00:12:58,800
not or especially android ipc talking

309
00:12:57,440 --> 00:13:01,279
different apps talking to each other is

310
00:12:58,800 --> 00:13:04,399
not the easiest to work with iphone so

311
00:13:01,279 --> 00:13:06,000
this is still ongoing and then there's

312
00:13:04,399 --> 00:13:08,480
the corresponding client library

313
00:13:06,000 --> 00:13:09,200
which other apps would use to register

314
00:13:08,480 --> 00:13:11,600
with push

315
00:13:09,200 --> 00:13:12,399
for push notifications on your phone

316
00:13:11,600 --> 00:13:15,120
this is

317
00:13:12,399 --> 00:13:16,480
developed alongside the android push

318
00:13:15,120 --> 00:13:19,920
client

319
00:13:16,480 --> 00:13:20,399
it's also still work in progress um and

320
00:13:19,920 --> 00:13:22,560
then we

321
00:13:20,399 --> 00:13:23,440
when we have the system we need to of

322
00:13:22,560 --> 00:13:27,518
course

323
00:13:23,440 --> 00:13:30,720
integrate another um communication

324
00:13:27,519 --> 00:13:31,920
platforms systems um and well this is a

325
00:13:30,720 --> 00:13:33,519
to do for

326
00:13:31,920 --> 00:13:35,550
after the client implementation are

327
00:13:33,519 --> 00:13:38,000
finished

328
00:13:35,550 --> 00:13:42,160
[Music]

329
00:13:38,000 --> 00:13:42,160
so how does it work in more detail

330
00:13:43,279 --> 00:13:46,480
the connection between the push client

331
00:13:44,959 --> 00:13:48,719
and the push server

332
00:13:46,480 --> 00:13:49,680
is currently using servers and events

333
00:13:48,720 --> 00:13:52,720
which

334
00:13:49,680 --> 00:13:54,479
has been tried out for custom bulk push

335
00:13:52,720 --> 00:13:58,160
notifications on android

336
00:13:54,480 --> 00:13:59,920
servers and events are part of http

337
00:13:58,160 --> 00:14:02,480
following a very simple text based

338
00:13:59,920 --> 00:14:04,000
protocol which you can send then json

339
00:14:02,480 --> 00:14:06,720
blobs over

340
00:14:04,000 --> 00:14:07,760
um it's really simple it works

341
00:14:06,720 --> 00:14:11,279
reasonably well in

342
00:14:07,760 --> 00:14:12,959
um first tests um

343
00:14:11,279 --> 00:14:15,199
but the choice of the protocol is

344
00:14:12,959 --> 00:14:16,319
deliberately transparent to all users of

345
00:14:15,199 --> 00:14:18,959
the system

346
00:14:16,320 --> 00:14:19,760
so we can experiment with having a

347
00:14:18,959 --> 00:14:22,800
different

348
00:14:19,760 --> 00:14:23,519
transport protocol later on without

349
00:14:22,800 --> 00:14:28,560
impacting

350
00:14:23,519 --> 00:14:28,560
like any third-party implementations

351
00:14:29,040 --> 00:14:32,240
the push client is currently a

352
00:14:30,480 --> 00:14:35,519
standalone android app

353
00:14:32,240 --> 00:14:37,440
um it's possible to integrate it maybe

354
00:14:35,519 --> 00:14:38,880
in micro g later on

355
00:14:37,440 --> 00:14:41,519
if people don't know what micro g is

356
00:14:38,880 --> 00:14:42,240
micro g is an open source implementation

357
00:14:41,519 --> 00:14:45,120
of the google

358
00:14:42,240 --> 00:14:46,240
play services on your phone which does

359
00:14:45,120 --> 00:14:49,760
allow you to

360
00:14:46,240 --> 00:14:51,519
use google cloud messaging

361
00:14:49,760 --> 00:14:53,279
without using google play services on

362
00:14:51,519 --> 00:14:54,240
your phone but it's still using google

363
00:14:53,279 --> 00:14:56,240
servers and still

364
00:14:54,240 --> 00:14:57,600
requiring the property app library so

365
00:14:56,240 --> 00:15:00,639
it's

366
00:14:57,600 --> 00:15:02,880
not a very good solution for uh from a

367
00:15:00,639 --> 00:15:05,440
privacy standpoint

368
00:15:02,880 --> 00:15:07,439
or from a free software standpoint um

369
00:15:05,440 --> 00:15:07,920
but micro g is already integrated in

370
00:15:07,440 --> 00:15:10,720
some

371
00:15:07,920 --> 00:15:12,319
android drum builds so having this

372
00:15:10,720 --> 00:15:16,560
integrated in micro g would

373
00:15:12,320 --> 00:15:19,199
maybe make sense in the future um

374
00:15:16,560 --> 00:15:19,920
and i said earlier that it's getting

375
00:15:19,199 --> 00:15:23,199
pretty

376
00:15:19,920 --> 00:15:25,360
tricky hard to keep um background

377
00:15:23,199 --> 00:15:28,560
connections alive or any doing any kind

378
00:15:25,360 --> 00:15:28,560
of background work on android

379
00:15:30,320 --> 00:15:36,000
so for this i choose the easy

380
00:15:34,079 --> 00:15:37,199
option which is running a foreground

381
00:15:36,000 --> 00:15:39,120
service

382
00:15:37,199 --> 00:15:42,639
which has a persistent notification for

383
00:15:39,120 --> 00:15:46,639
the user which you can hide but

384
00:15:42,639 --> 00:15:50,000
this is i think um this is okay for

385
00:15:46,639 --> 00:15:52,160
when it's one app that does it

386
00:15:50,000 --> 00:15:54,320
and it gets annoying when 20 different

387
00:15:52,160 --> 00:15:56,000
apps do it

388
00:15:54,320 --> 00:15:57,519
the alternative would be running it as a

389
00:15:56,000 --> 00:15:58,800
system service like microchip does

390
00:15:57,519 --> 00:16:01,360
currently

391
00:15:58,800 --> 00:16:02,880
then you have the same permissions as

392
00:16:01,360 --> 00:16:06,000
running as a foreground service without

393
00:16:02,880 --> 00:16:06,000
needing the notification

394
00:16:06,639 --> 00:16:10,480
and the client library communicates with

395
00:16:09,120 --> 00:16:13,600
this push client

396
00:16:10,480 --> 00:16:15,519
via android ipc um that's using a bound

397
00:16:13,600 --> 00:16:16,240
servers and then for incoming push it it

398
00:16:15,519 --> 00:16:19,759
sends

399
00:16:16,240 --> 00:16:21,759
it broadcast events um this is basically

400
00:16:19,759 --> 00:16:25,470
modeled after what google

401
00:16:21,759 --> 00:16:28,320
does for us for their own push messaging

402
00:16:25,470 --> 00:16:32,079
[Music]

403
00:16:28,320 --> 00:16:36,480
so where do we go from here

404
00:16:32,079 --> 00:16:39,120
um well we need to integrate it in

405
00:16:36,480 --> 00:16:40,160
for example matrix clients and servers

406
00:16:39,120 --> 00:16:42,320
rocket chat

407
00:16:40,160 --> 00:16:44,399
next cloud and see how it performs in

408
00:16:42,320 --> 00:16:47,600
practice under

409
00:16:44,399 --> 00:16:50,720
interesting network conditions um

410
00:16:47,600 --> 00:16:52,720
it's going to be interesting uh

411
00:16:50,720 --> 00:16:54,399
one thing i've thought about is adding

412
00:16:52,720 --> 00:16:56,560
end-to-end encryption

413
00:16:54,399 --> 00:16:57,600
um and to end encryption in this case

414
00:16:56,560 --> 00:16:59,920
would mean

415
00:16:57,600 --> 00:17:01,680
from the web service to your phone the

416
00:16:59,920 --> 00:17:05,839
message being encrypted so

417
00:17:01,680 --> 00:17:05,839
operators of push services are not

418
00:17:06,079 --> 00:17:09,839
so for them it's not possible to read

419
00:17:08,000 --> 00:17:12,000
the content of the messages

420
00:17:09,839 --> 00:17:14,240
they'd still get all the metadata but

421
00:17:12,000 --> 00:17:16,480
that's what google gets at the moment as

422
00:17:14,240 --> 00:17:16,480
well

423
00:17:16,880 --> 00:17:21,760
but actually we we already have less

424
00:17:19,599 --> 00:17:25,198
metadata than google because

425
00:17:21,760 --> 00:17:26,480
apps register with um with google cloud

426
00:17:25,199 --> 00:17:29,520
messaging with their

427
00:17:26,480 --> 00:17:32,160
like with their identity as an app um

428
00:17:29,520 --> 00:17:33,280
and open push doesn't do that so you

429
00:17:32,160 --> 00:17:35,200
would just

430
00:17:33,280 --> 00:17:38,240
the operator's push server would just

431
00:17:35,200 --> 00:17:41,600
see there's a message and then it would

432
00:17:38,240 --> 00:17:44,400
also be encrypted in the future

433
00:17:41,600 --> 00:17:46,000
so there's less metadata and i don't

434
00:17:44,400 --> 00:17:47,679
think it would be that hard to add

435
00:17:46,000 --> 00:17:49,200
famous last words because we only

436
00:17:47,679 --> 00:17:51,200
sending unidirection messages and we

437
00:17:49,200 --> 00:17:53,440
don't want to keep any history so it's

438
00:17:51,200 --> 00:17:55,840
just encrypt one with a key the client

439
00:17:53,440 --> 00:17:58,240
can use to decrypt it

440
00:17:55,840 --> 00:17:59,760
um i also want to experiment with

441
00:17:58,240 --> 00:18:02,160
different transports and service and

442
00:17:59,760 --> 00:18:02,160
events

443
00:18:02,480 --> 00:18:08,000
just that goes hand in hand to seeing

444
00:18:04,720 --> 00:18:10,880
how it works in practice with

445
00:18:08,000 --> 00:18:10,880
actual networks

446
00:18:11,120 --> 00:18:15,678
and one other interesting thing that

447
00:18:13,360 --> 00:18:19,439
came up is

448
00:18:15,679 --> 00:18:21,840
having existing systems be easy push

449
00:18:19,440 --> 00:18:23,919
provider for your phone so if you're

450
00:18:21,840 --> 00:18:24,480
already running an xmpp client on your

451
00:18:23,919 --> 00:18:25,760
phone

452
00:18:24,480 --> 00:18:27,600
you already have this persistent

453
00:18:25,760 --> 00:18:28,000
connection to your xmpp server because

454
00:18:27,600 --> 00:18:31,600
that's how

455
00:18:28,000 --> 00:18:34,559
xmpp works so

456
00:18:31,600 --> 00:18:34,879
why couldn't we use this connection and

457
00:18:34,559 --> 00:18:37,440
just

458
00:18:34,880 --> 00:18:39,840
implement the the push server api on

459
00:18:37,440 --> 00:18:42,240
your xmpp server as a plugin

460
00:18:39,840 --> 00:18:42,959
and include a library in your xmpp

461
00:18:42,240 --> 00:18:44,640
client

462
00:18:42,960 --> 00:18:46,559
that would allow other apps to register

463
00:18:44,640 --> 00:18:50,160
for push notifications

464
00:18:46,559 --> 00:18:53,200
um using the same apis

465
00:18:50,160 --> 00:18:54,880
and then well you have one less

466
00:18:53,200 --> 00:18:57,840
connection and hopefully the longer

467
00:18:54,880 --> 00:18:57,840
battery life

468
00:18:58,400 --> 00:19:01,679
the interesting thing about that is then

469
00:19:00,080 --> 00:19:02,879
how to figure out if the user has

470
00:19:01,679 --> 00:19:04,720
multiple

471
00:19:02,880 --> 00:19:07,200
apps installed that could act as a push

472
00:19:04,720 --> 00:19:10,960
provider which one gets selected

473
00:19:07,200 --> 00:19:13,940
and so he'll tricky

474
00:19:10,960 --> 00:19:15,440
user experience to figure out um

475
00:19:13,940 --> 00:19:18,640
[Music]

476
00:19:15,440 --> 00:19:20,480
i think that's it um this project

477
00:19:18,640 --> 00:19:22,080
i've worked on this for six months last

478
00:19:20,480 --> 00:19:25,120
year funded by

479
00:19:22,080 --> 00:19:29,120
german government institute

480
00:19:25,120 --> 00:19:30,799
through the prototype fund and

481
00:19:29,120 --> 00:19:39,840
you can find more information on this

482
00:19:30,799 --> 00:19:39,840
website thank you

483
00:19:40,000 --> 00:19:43,360
thank you for your talk we have time for

484
00:19:42,799 --> 00:19:46,879
uh

485
00:19:43,360 --> 00:19:46,879
we have about five minutes for questions

486
00:19:46,960 --> 00:19:50,960
yeah hi thanks for the talk um i would

487
00:19:50,240 --> 00:19:54,000
think the

488
00:19:50,960 --> 00:19:56,640
number one worry that i would have uh

489
00:19:54,000 --> 00:19:58,320
is that you won't get away forever with

490
00:19:56,640 --> 00:20:00,160
the foreground service

491
00:19:58,320 --> 00:20:01,918
you said another option would be being i

492
00:20:00,160 --> 00:20:03,360
mean the the thing you technically would

493
00:20:01,919 --> 00:20:05,200
want to be is a systems

494
00:20:03,360 --> 00:20:07,520
system app right so you wouldn't have

495
00:20:05,200 --> 00:20:10,799
that problem um i'm not sure but

496
00:20:07,520 --> 00:20:13,600
are you worried as well or uh there's no

497
00:20:10,799 --> 00:20:17,280
way to become a system app right

498
00:20:13,600 --> 00:20:20,399
so what can you um

499
00:20:17,280 --> 00:20:23,918
yeah i don't didn't get the exact

500
00:20:20,400 --> 00:20:25,679
question ah the um yeah i'd be i i know

501
00:20:23,919 --> 00:20:26,880
right now the solution for you is to be

502
00:20:25,679 --> 00:20:29,280
your foreground service and

503
00:20:26,880 --> 00:20:29,919
and you get the annoying uh notification

504
00:20:29,280 --> 00:20:32,080
if you don't

505
00:20:29,919 --> 00:20:34,320
configure it away but but i but i'd be

506
00:20:32,080 --> 00:20:36,399
worried as android is becoming more

507
00:20:34,320 --> 00:20:38,399
restrictive with background tasks that

508
00:20:36,400 --> 00:20:39,120
you know two versions of android from

509
00:20:38,400 --> 00:20:42,000
here

510
00:20:39,120 --> 00:20:42,959
uh you might uh this might no longer be

511
00:20:42,000 --> 00:20:45,039
the solution so

512
00:20:42,960 --> 00:20:48,000
if i i would have thought that's the

513
00:20:45,039 --> 00:20:49,200
main worry that you will one day fail at

514
00:20:48,000 --> 00:20:51,280
keeping alive in the background and

515
00:20:49,200 --> 00:20:55,039
providing a good service yes um

516
00:20:51,280 --> 00:20:57,918
so i think the only solution to that is

517
00:20:55,039 --> 00:20:59,200
being integrated on a system level which

518
00:20:57,919 --> 00:21:02,640
either means

519
00:20:59,200 --> 00:21:03,120
custom roms and people figuring out how

520
00:21:02,640 --> 00:21:06,159
to

521
00:21:03,120 --> 00:21:07,199
pseudo move some apks around but more

522
00:21:06,159 --> 00:21:12,480
ideally it would

523
00:21:07,200 --> 00:21:16,000
mean that actually phone vendors would

524
00:21:12,480 --> 00:21:20,720
distribute non-google android phones

525
00:21:16,000 --> 00:21:20,720
which we are severely lacking right now

526
00:21:22,559 --> 00:21:26,960
hi um i wanted to ask it's by the way

527
00:21:25,679 --> 00:21:29,280
it's great presentation

528
00:21:26,960 --> 00:21:31,200
and thank you thank you i wonder how

529
00:21:29,280 --> 00:21:34,158
easy it would be for google to make your

530
00:21:31,200 --> 00:21:37,520
solution impossible to use on android

531
00:21:34,159 --> 00:21:38,320
um again yeah how how easy would it be

532
00:21:37,520 --> 00:21:40,080
for google

533
00:21:38,320 --> 00:21:44,158
to make your solution impossible to use

534
00:21:40,080 --> 00:21:44,500
on android

535
00:21:44,159 --> 00:21:47,720
um

536
00:21:44,500 --> 00:21:47,720
[Music]

537
00:21:49,200 --> 00:21:53,840
well we if say block foreground services

538
00:21:52,720 --> 00:21:57,600
running forever

539
00:21:53,840 --> 00:21:58,399
that's then makes it somewhat impossible

540
00:21:57,600 --> 00:22:01,678
if you

541
00:21:58,400 --> 00:22:05,840
depend on the stock android

542
00:22:01,679 --> 00:22:05,840
from a bot in the store

543
00:22:07,360 --> 00:22:12,559
there can still be workarounds for doing

544
00:22:10,640 --> 00:22:15,120
smart things with checking in every

545
00:22:12,559 --> 00:22:17,440
15 minutes however often you're allowed

546
00:22:15,120 --> 00:22:17,439
um

547
00:22:17,520 --> 00:22:19,679
but

548
00:22:20,559 --> 00:22:24,000
they they only can do things through the

549
00:22:22,559 --> 00:22:25,760
normal android distribution if you're

550
00:22:24,000 --> 00:22:27,120
not using any google play services and

551
00:22:25,760 --> 00:22:28,799
you're not getting your apps from the

552
00:22:27,120 --> 00:22:31,918
google play store

553
00:22:28,799 --> 00:22:32,799
they can't really enforce any anyone not

554
00:22:31,919 --> 00:22:36,320
using this

555
00:22:32,799 --> 00:22:36,320
system through other means

556
00:22:37,360 --> 00:22:41,360
there's the web api for push

557
00:22:40,159 --> 00:22:43,360
notifications

558
00:22:41,360 --> 00:22:44,559
have you thought about using the same

559
00:22:43,360 --> 00:22:48,799
api for the

560
00:22:44,559 --> 00:22:48,799
push server connection um

561
00:22:49,039 --> 00:22:57,600
i haven't really looked into web push

562
00:22:52,880 --> 00:23:01,360
which i think is partly because

563
00:22:57,600 --> 00:23:04,480
it's a different problem domain because

564
00:23:01,360 --> 00:23:09,840
on desktop you can get away with a lot

565
00:23:04,480 --> 00:23:09,840
less battery saving solutions

566
00:23:10,000 --> 00:23:14,559
so what this is modeled after is

567
00:23:12,400 --> 00:23:18,400
google's solution for push measures

568
00:23:14,559 --> 00:23:18,399
only decentralized and free

569
00:23:19,600 --> 00:23:25,520
because well they have thought about

570
00:23:22,240 --> 00:23:25,520
this probably a long time

571
00:23:26,480 --> 00:23:33,360
i once heard that uh that mobile isps

572
00:23:30,720 --> 00:23:34,720
have have special contracts with uh push

573
00:23:33,360 --> 00:23:37,360
service providers like uh

574
00:23:34,720 --> 00:23:38,400
like google or apple that uh their tcp

575
00:23:37,360 --> 00:23:40,479
connections are not

576
00:23:38,400 --> 00:23:41,440
terminated uh relatively quickly like

577
00:23:40,480 --> 00:23:44,559
all the others

578
00:23:41,440 --> 00:23:46,080
so uh have you done any uh any

579
00:23:44,559 --> 00:23:49,360
measurements any

580
00:23:46,080 --> 00:23:51,918
benchmarks on uh how yeah

581
00:23:49,360 --> 00:23:52,399
on how efficient uh your services uh how

582
00:23:51,919 --> 00:23:54,960
often

583
00:23:52,400 --> 00:23:56,320
do do uh connections get terminated and

584
00:23:54,960 --> 00:23:59,440
is this different from

585
00:23:56,320 --> 00:24:02,720
the uh yeah google implementation

586
00:23:59,440 --> 00:24:06,240
um i've not yet done any measurements

587
00:24:02,720 --> 00:24:09,840
at least not with this i've heard this

588
00:24:06,240 --> 00:24:13,520
quite often as well i have never

589
00:24:09,840 --> 00:24:16,559
seen or heard anyone actually providing

590
00:24:13,520 --> 00:24:21,360
any data to back this app

591
00:24:16,559 --> 00:24:23,360
so i consider this a rumor to know

592
00:24:21,360 --> 00:24:25,600
it might be different in in the u.s i

593
00:24:23,360 --> 00:24:29,600
don't think it's the case

594
00:24:25,600 --> 00:24:30,959
it's we could we could ask

595
00:24:29,600 --> 00:24:32,879
people they may know something about

596
00:24:30,960 --> 00:24:35,919
that um

597
00:24:32,880 --> 00:24:36,400
yeah let's just i'd be happy to to hear

598
00:24:35,919 --> 00:24:40,720
input

599
00:24:36,400 --> 00:24:43,520
for that so how does the push client

600
00:24:40,720 --> 00:24:43,919
here so how does the push client check

601
00:24:43,520 --> 00:24:46,158
for

602
00:24:43,919 --> 00:24:48,159
broken connections because i tried to do

603
00:24:46,159 --> 00:24:51,200
something similar a few months ago using

604
00:24:48,159 --> 00:24:53,440
autobahn and crossbar and

605
00:24:51,200 --> 00:24:54,960
or that as well running as a foreground

606
00:24:53,440 --> 00:24:58,320
service in android

607
00:24:54,960 --> 00:24:59,760
and ultimately i had to send these pings

608
00:24:58,320 --> 00:25:01,360
after every few

609
00:24:59,760 --> 00:25:02,799
minutes just to make sure the connection

610
00:25:01,360 --> 00:25:05,039
was alive

611
00:25:02,799 --> 00:25:07,120
and the android would complain that it's

612
00:25:05,039 --> 00:25:09,279
killing the battery so the user would

613
00:25:07,120 --> 00:25:10,239
end up uninstalling that so that was my

614
00:25:09,279 --> 00:25:13,840
biggest fear

615
00:25:10,240 --> 00:25:16,720
so have you found a solution for that

616
00:25:13,840 --> 00:25:18,320
no well the solution is check every x

617
00:25:16,720 --> 00:25:20,980
minutes where you can be a bit

618
00:25:18,320 --> 00:25:22,480
smart about how big x is um

619
00:25:20,980 --> 00:25:24,960
[Music]

620
00:25:22,480 --> 00:25:26,000
i don't think android would complain

621
00:25:24,960 --> 00:25:28,240
more than

622
00:25:26,000 --> 00:25:29,760
well this notification you get with the

623
00:25:28,240 --> 00:25:31,919
foreground service as well

624
00:25:29,760 --> 00:25:33,120
it's a bit well on android you can hide

625
00:25:31,919 --> 00:25:34,720
notifications by

626
00:25:33,120 --> 00:25:36,399
long pressing on them if you do that

627
00:25:34,720 --> 00:25:38,000
with a foreground service that is still

628
00:25:36,400 --> 00:25:38,960
running you get another notification by

629
00:25:38,000 --> 00:25:40,640
the system which

630
00:25:38,960 --> 00:25:43,200
actually tells you this app is killing

631
00:25:40,640 --> 00:25:45,679
your battery

632
00:25:43,200 --> 00:25:47,679
user education is the solution for this

633
00:25:45,679 --> 00:25:52,400
right now

634
00:25:47,679 --> 00:25:52,400
this is how we we can work

635
00:25:52,799 --> 00:25:57,840
okay thank you very much we are running

636
00:25:54,640 --> 00:25:57,840
out of time

