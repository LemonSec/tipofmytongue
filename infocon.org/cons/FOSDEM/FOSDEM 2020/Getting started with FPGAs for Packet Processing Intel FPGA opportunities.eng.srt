1
00:00:07,120 --> 00:00:10,080
okay

2
00:00:07,520 --> 00:00:12,239
so we have another lightning talk now on

3
00:00:10,080 --> 00:00:14,799
getting started with fpgas for packet

4
00:00:12,240 --> 00:00:14,799
processing

5
00:00:15,440 --> 00:00:18,480
okay thank you for joining this lighting

6
00:00:17,920 --> 00:00:23,119
talk

7
00:00:18,480 --> 00:00:24,880
uh i want to talk with you about

8
00:00:23,119 --> 00:00:27,039
some mystery of the hardware

9
00:00:24,880 --> 00:00:30,560
acceleration for the data plane

10
00:00:27,039 --> 00:00:33,840
and let me talk introduce myself

11
00:00:30,560 --> 00:00:35,440
who am i uh i am my name is mirag

12
00:00:33,840 --> 00:00:38,079
valukevich

13
00:00:35,440 --> 00:00:40,239
i am work as the solution architect in

14
00:00:38,079 --> 00:00:42,879
the programmable solution group in intel

15
00:00:40,239 --> 00:00:44,718
and my daily job is to working with the

16
00:00:42,879 --> 00:00:48,000
customers and

17
00:00:44,719 --> 00:00:50,559
optimizing by workloads especially in

18
00:00:48,000 --> 00:00:55,280
the networking space

19
00:00:50,559 --> 00:00:55,280
it's a short introduction about me

20
00:00:56,840 --> 00:01:01,440
that

21
00:00:58,000 --> 00:01:04,000
what is a data plan yes uh some time ago

22
00:01:01,440 --> 00:01:04,878
i visited the computer history museum in

23
00:01:04,000 --> 00:01:07,439
the mountain view

24
00:01:04,879 --> 00:01:08,479
in california and i find very

25
00:01:07,439 --> 00:01:12,000
interesting

26
00:01:08,479 --> 00:01:16,479
things which is the first network card

27
00:01:12,000 --> 00:01:18,960
which was designed over the world and

28
00:01:16,479 --> 00:01:20,240
it looks like that you have the cables

29
00:01:18,960 --> 00:01:24,240
which connected

30
00:01:20,240 --> 00:01:26,080
and currently wares intel are making the

31
00:01:24,240 --> 00:01:28,479
very similar thing maybe a bit more

32
00:01:26,080 --> 00:01:32,158
complex which is called the

33
00:01:28,479 --> 00:01:35,360
fpga card with the what we call the pac

34
00:01:32,159 --> 00:01:38,640
programmable acceleration card

35
00:01:35,360 --> 00:01:40,960
n3000 which is designed especially for

36
00:01:38,640 --> 00:01:43,360
the data plane acceleration yes

37
00:01:40,960 --> 00:01:45,520
i want to introduce you and making the

38
00:01:43,360 --> 00:01:46,799
very very short introduction someone to

39
00:01:45,520 --> 00:01:49,840
a 101

40
00:01:46,799 --> 00:01:51,360
session that how to use this card and

41
00:01:49,840 --> 00:01:54,880
how to

42
00:01:51,360 --> 00:01:56,640
make a good solution uh

43
00:01:54,880 --> 00:01:59,119
using that kind of the hardware

44
00:01:56,640 --> 00:02:02,880
acceleration

45
00:01:59,119 --> 00:02:05,920
let's start from your problem uh that

46
00:02:02,880 --> 00:02:07,360
i work many many years as the software

47
00:02:05,920 --> 00:02:10,720
designer yes

48
00:02:07,360 --> 00:02:13,840
my work was to finding the

49
00:02:10,720 --> 00:02:14,640
optimizing the software and finding the

50
00:02:13,840 --> 00:02:18,000
goods

51
00:02:14,640 --> 00:02:20,000
finding the good solutions it is

52
00:02:18,000 --> 00:02:21,200
the problems in the software could

53
00:02:20,000 --> 00:02:24,959
happens

54
00:02:21,200 --> 00:02:24,958
could have many many

55
00:02:25,200 --> 00:02:29,200
sources yes we could think about the

56
00:02:27,599 --> 00:02:31,200
hardware acceleration you could think

57
00:02:29,200 --> 00:02:33,359
for example okay encryption is the first

58
00:02:31,200 --> 00:02:34,160
one yes but it's not only the encryption

59
00:02:33,360 --> 00:02:37,120
yes

60
00:02:34,160 --> 00:02:38,000
you could have uh different problems yes

61
00:02:37,120 --> 00:02:40,319
you can have

62
00:02:38,000 --> 00:02:41,760
problems with the jumps you can have a

63
00:02:40,319 --> 00:02:43,839
problem with the loops you can have

64
00:02:41,760 --> 00:02:45,599
problems with the pci access

65
00:02:43,840 --> 00:02:48,000
and first of all you can have the for

66
00:02:45,599 --> 00:02:51,200
example the problems with the

67
00:02:48,000 --> 00:02:54,400
cache using on the cpu and

68
00:02:51,200 --> 00:02:56,399
how to do how to make first step to

69
00:02:54,400 --> 00:02:59,120
optimize the software yes or

70
00:02:56,400 --> 00:03:00,000
to use the hardware yes the first step

71
00:02:59,120 --> 00:03:04,080
is

72
00:03:00,000 --> 00:03:07,120
to find the hotspot it is and understand

73
00:03:04,080 --> 00:03:10,400
how your system works uh it is

74
00:03:07,120 --> 00:03:10,800
uh finding the hotspot is very important

75
00:03:10,400 --> 00:03:15,120
thing

76
00:03:10,800 --> 00:03:15,680
to uh to find a problem what you want to

77
00:03:15,120 --> 00:03:18,800
solve

78
00:03:15,680 --> 00:03:20,080
uh using the fpgas the fpga has the

79
00:03:18,800 --> 00:03:23,280
limited size

80
00:03:20,080 --> 00:03:25,440
and it can solve not every problem could

81
00:03:23,280 --> 00:03:28,640
be solved

82
00:03:25,440 --> 00:03:31,359
that this is uh

83
00:03:28,640 --> 00:03:33,839
example of your problem yes so you are

84
00:03:31,360 --> 00:03:34,959
the engineer or you are the designer and

85
00:03:33,840 --> 00:03:38,080
you want to

86
00:03:34,959 --> 00:03:40,959
find some issues

87
00:03:38,080 --> 00:03:43,120
or to make sure that your system which

88
00:03:40,959 --> 00:03:45,280
is the very very complex is working

89
00:03:43,120 --> 00:03:47,519
correctly yes don't try to put

90
00:03:45,280 --> 00:03:48,959
everything inside of the hardware yes

91
00:03:47,519 --> 00:03:51,120
don't try to put

92
00:03:48,959 --> 00:03:52,239
all the problem or the complexity in the

93
00:03:51,120 --> 00:03:55,519
hardware yes it is

94
00:03:52,239 --> 00:03:57,840
today it is impossible and making for

95
00:03:55,519 --> 00:03:58,560
example the linux kernel maybe some guys

96
00:03:57,840 --> 00:04:00,159
can

97
00:03:58,560 --> 00:04:02,400
explain you that it will be in some

98
00:04:00,159 --> 00:04:04,319
future it will be possible

99
00:04:02,400 --> 00:04:06,879
because we have new languages for the

100
00:04:04,319 --> 00:04:09,200
programming of the fpgas yes

101
00:04:06,879 --> 00:04:11,040
don't believe them it is impossible to

102
00:04:09,200 --> 00:04:13,359
to put such complex

103
00:04:11,040 --> 00:04:14,159
what is possible you can get some part

104
00:04:13,360 --> 00:04:17,759
of the

105
00:04:14,159 --> 00:04:18,639
hardware and some part of the problem

106
00:04:17,759 --> 00:04:20,320
and put this

107
00:04:18,639 --> 00:04:21,759
into the heart put this into the

108
00:04:20,320 --> 00:04:25,040
hardware yes

109
00:04:21,759 --> 00:04:25,840
and keep everything around of this

110
00:04:25,040 --> 00:04:30,080
problem

111
00:04:25,840 --> 00:04:34,320
in the software what are the tricks here

112
00:04:30,080 --> 00:04:38,000
to optimize solution yes

113
00:04:34,320 --> 00:04:39,360
the first of all be careful how the data

114
00:04:38,000 --> 00:04:42,000
processing

115
00:04:39,360 --> 00:04:44,560
between the hardware and your software

116
00:04:42,000 --> 00:04:46,639
application looks like this

117
00:04:44,560 --> 00:04:48,320
in the having the hardware working with

118
00:04:46,639 --> 00:04:49,680
the hardware you have to

119
00:04:48,320 --> 00:04:52,400
really you have the two hardware

120
00:04:49,680 --> 00:04:53,360
components one is your cpu when your

121
00:04:52,400 --> 00:04:57,120
program works

122
00:04:53,360 --> 00:04:59,759
when this mind problem is execute

123
00:04:57,120 --> 00:05:00,960
and another hardware component is the

124
00:04:59,759 --> 00:05:04,639
fpga

125
00:05:00,960 --> 00:05:07,840
which you try to find or to accelerate

126
00:05:04,639 --> 00:05:10,080
some part of the problem yes

127
00:05:07,840 --> 00:05:12,000
let's think about what could be the

128
00:05:10,080 --> 00:05:14,560
bottleneck yes

129
00:05:12,000 --> 00:05:16,720
let me provide you some example yes some

130
00:05:14,560 --> 00:05:17,759
time ago we try to accelerate some

131
00:05:16,720 --> 00:05:19,840
machine learning

132
00:05:17,759 --> 00:05:22,240
function you know that the machine

133
00:05:19,840 --> 00:05:25,758
learning of the deep learning

134
00:05:22,240 --> 00:05:26,639
is just the you have the small number of

135
00:05:25,759 --> 00:05:30,080
the data

136
00:05:26,639 --> 00:05:31,759
and this data passes through enormous

137
00:05:30,080 --> 00:05:35,039
set of the tables yes

138
00:05:31,759 --> 00:05:36,320
which contain which uses the very very

139
00:05:35,039 --> 00:05:39,520
big

140
00:05:36,320 --> 00:05:41,520
memory size and you make the

141
00:05:39,520 --> 00:05:43,520
big number of the lookups you have the

142
00:05:41,520 --> 00:05:45,758
big numbers of the

143
00:05:43,520 --> 00:05:47,039
changes going through the stables yes

144
00:05:45,759 --> 00:05:48,560
and every step

145
00:05:47,039 --> 00:05:50,479
in the machine learning the number of

146
00:05:48,560 --> 00:05:53,280
the tables

147
00:05:50,479 --> 00:05:54,960
explodes yes so you can have even in

148
00:05:53,280 --> 00:05:56,080
some application we can have even the

149
00:05:54,960 --> 00:05:58,400
hundred tables

150
00:05:56,080 --> 00:06:00,560
your data your data going through the

151
00:05:58,400 --> 00:06:04,000
hundreds of the tables yes

152
00:06:00,560 --> 00:06:07,520
and uh designing the fpga

153
00:06:04,000 --> 00:06:08,479
for this model we provided some simple

154
00:06:07,520 --> 00:06:10,560
approaches

155
00:06:08,479 --> 00:06:11,919
okay we know uh the most of the

156
00:06:10,560 --> 00:06:13,360
operation on the tables is the

157
00:06:11,919 --> 00:06:15,280
multiplication yes

158
00:06:13,360 --> 00:06:17,039
you know that okay multiplication the

159
00:06:15,280 --> 00:06:18,000
hardware must be faster than the

160
00:06:17,039 --> 00:06:20,159
multiplication

161
00:06:18,000 --> 00:06:21,680
multiplication in the software yes

162
00:06:20,160 --> 00:06:24,720
because the machine learning is the

163
00:06:21,680 --> 00:06:27,520
multiplication yes we implemented the

164
00:06:24,720 --> 00:06:29,039
very very good multipliers yes in the

165
00:06:27,520 --> 00:06:31,919
hardware for the data

166
00:06:29,039 --> 00:06:32,880
and what we saw software still works

167
00:06:31,919 --> 00:06:36,560
faster than the

168
00:06:32,880 --> 00:06:37,840
subtropus hardware yes why this happens

169
00:06:36,560 --> 00:06:40,960
yes

170
00:06:37,840 --> 00:06:44,000
it happens because uh the

171
00:06:40,960 --> 00:06:45,198
killing factor was the access of that

172
00:06:44,000 --> 00:06:47,360
moving the data

173
00:06:45,199 --> 00:06:49,039
between the software and the hardware is

174
00:06:47,360 --> 00:06:52,720
over the pci

175
00:06:49,039 --> 00:06:54,159
our hard work is connecting to the car

176
00:06:52,720 --> 00:06:55,840
hardware is connecting to the card

177
00:06:54,160 --> 00:06:58,000
through the pcis

178
00:06:55,840 --> 00:06:59,119
and imagine that for example you have a

179
00:06:58,000 --> 00:07:01,919
tensorflow

180
00:06:59,120 --> 00:07:04,000
and you imagine that you have a packet

181
00:07:01,919 --> 00:07:04,479
and first of all the software has the

182
00:07:04,000 --> 00:07:07,759
packet

183
00:07:04,479 --> 00:07:09,360
software has a data to be passed and

184
00:07:07,759 --> 00:07:11,759
it must be moved to the hardware

185
00:07:09,360 --> 00:07:13,840
accelerator it changes the location the

186
00:07:11,759 --> 00:07:16,960
data changes the location yes

187
00:07:13,840 --> 00:07:19,440
and look very carefully

188
00:07:16,960 --> 00:07:21,198
what how the data is going yes for

189
00:07:19,440 --> 00:07:23,280
example the transport of the data

190
00:07:21,199 --> 00:07:24,080
between the host and the accelerator

191
00:07:23,280 --> 00:07:26,719
could be

192
00:07:24,080 --> 00:07:31,840
slower than the moving of this data

193
00:07:26,720 --> 00:07:35,039
inside of the cpu using the caches

194
00:07:31,840 --> 00:07:37,280
additional kind of the problems yes for

195
00:07:35,039 --> 00:07:40,240
example in the data plane processing

196
00:07:37,280 --> 00:07:42,400
uh i am the guy who works mostly with

197
00:07:40,240 --> 00:07:44,720
the telco guys yes

198
00:07:42,400 --> 00:07:46,799
telco guys as the crazy for the counters

199
00:07:44,720 --> 00:07:47,280
yes you know everyone knows the mobile

200
00:07:46,800 --> 00:07:49,759
phone

201
00:07:47,280 --> 00:07:51,440
and uh the most important part of the

202
00:07:49,759 --> 00:07:53,919
telco job is to charging you

203
00:07:51,440 --> 00:07:54,560
yes can thank you can't think you can

204
00:07:53,919 --> 00:07:57,680
thank you

205
00:07:54,560 --> 00:07:59,360
yes and counting your data yes and it is

206
00:07:57,680 --> 00:08:02,479
the very very big problem

207
00:07:59,360 --> 00:08:03,039
what they have yes and making for

208
00:08:02,479 --> 00:08:05,199
example

209
00:08:03,039 --> 00:08:06,800
the accounting problem of the statistics

210
00:08:05,199 --> 00:08:08,960
problem in the software

211
00:08:06,800 --> 00:08:10,960
is the terrible job because of the

212
00:08:08,960 --> 00:08:13,758
software architecture yes

213
00:08:10,960 --> 00:08:15,280
to make sure that for example you want

214
00:08:13,759 --> 00:08:19,360
to make a counters

215
00:08:15,280 --> 00:08:19,359
you must create the counters

216
00:08:19,520 --> 00:08:23,840
pair for example your mobile phone you'd

217
00:08:22,000 --> 00:08:27,039
which could be accessed

218
00:08:23,840 --> 00:08:27,919
from the many course from the cpu point

219
00:08:27,039 --> 00:08:30,639
of view yes

220
00:08:27,919 --> 00:08:32,559
it creates um many critical sections

221
00:08:30,639 --> 00:08:33,839
here so i hope that everyone is the

222
00:08:32,559 --> 00:08:36,559
software guy so

223
00:08:33,839 --> 00:08:37,279
and maybe i'm not the one who is making

224
00:08:36,559 --> 00:08:42,159
the hardware

225
00:08:37,279 --> 00:08:44,959
yes so but and this critical sections

226
00:08:42,159 --> 00:08:46,480
which means uh the implementation of the

227
00:08:44,959 --> 00:08:48,959
critical sections

228
00:08:46,480 --> 00:08:49,600
means that you should implement tons of

229
00:08:48,959 --> 00:08:52,000
the

230
00:08:49,600 --> 00:08:53,279
atomic operation which are the terrible

231
00:08:52,000 --> 00:08:56,640
for the cash access

232
00:08:53,279 --> 00:08:58,480
and you can lose all your parallelism in

233
00:08:56,640 --> 00:09:02,640
the cpu

234
00:08:58,480 --> 00:09:05,360
using uh that kind of massive of the

235
00:09:02,640 --> 00:09:06,319
critical section operation is solving

236
00:09:05,360 --> 00:09:09,200
this problem

237
00:09:06,320 --> 00:09:11,440
is to for example moving some data some

238
00:09:09,200 --> 00:09:13,600
counters which are the most painful

239
00:09:11,440 --> 00:09:14,880
not all counters yes but counters which

240
00:09:13,600 --> 00:09:16,880
are more painful

241
00:09:14,880 --> 00:09:18,320
we call them sometimes the aggregate

242
00:09:16,880 --> 00:09:20,320
counters

243
00:09:18,320 --> 00:09:22,640
which can must be handed by the many

244
00:09:20,320 --> 00:09:24,720
cores to the hardware yes

245
00:09:22,640 --> 00:09:28,480
which can solve the problem that the

246
00:09:24,720 --> 00:09:31,760
hardware is processing the data parallel

247
00:09:28,480 --> 00:09:33,120
serially but the software do not have

248
00:09:31,760 --> 00:09:36,480
this problem

249
00:09:33,120 --> 00:09:37,519
again and the software can make most of

250
00:09:36,480 --> 00:09:39,600
the processing

251
00:09:37,519 --> 00:09:43,279
uh in the parallel way yes using the

252
00:09:39,600 --> 00:09:45,680
cache very very efficiently yes

253
00:09:43,279 --> 00:09:46,800
this is the kind some kind of the

254
00:09:45,680 --> 00:09:51,760
problems yes

255
00:09:46,800 --> 00:09:56,399
additional problem uh what is uh

256
00:09:51,760 --> 00:10:00,640
to try to put it is additional

257
00:09:56,399 --> 00:10:03,680
thick trick what you can do try to

258
00:10:00,640 --> 00:10:06,319
do not resolve do not try do not

259
00:10:03,680 --> 00:10:08,800
put the part of the problem into the

260
00:10:06,320 --> 00:10:11,200
hardware yes to the fpga try to solve as

261
00:10:08,800 --> 00:10:14,399
much as possible

262
00:10:11,200 --> 00:10:16,240
inside of the hardware yes for example

263
00:10:14,399 --> 00:10:18,160
going back to the our example with the

264
00:10:16,240 --> 00:10:21,200
machine learning

265
00:10:18,160 --> 00:10:24,560
we found a very very good result

266
00:10:21,200 --> 00:10:27,440
when we just put some operation of the

267
00:10:24,560 --> 00:10:28,000
multiple tables and we were able to put

268
00:10:27,440 --> 00:10:30,800
them

269
00:10:28,000 --> 00:10:32,160
into the fpga and making for example the

270
00:10:30,800 --> 00:10:34,399
most of the processing

271
00:10:32,160 --> 00:10:35,760
or all the processing inside of the fpga

272
00:10:34,399 --> 00:10:38,480
is

273
00:10:35,760 --> 00:10:39,279
but of course it requires that not every

274
00:10:38,480 --> 00:10:42,800
machine learning

275
00:10:39,279 --> 00:10:45,920
algorithm is possible to put

276
00:10:42,800 --> 00:10:46,719
to be put inside of the fpgas you must

277
00:10:45,920 --> 00:10:50,719
look to the

278
00:10:46,720 --> 00:10:50,720
special algorithms which are

279
00:10:50,800 --> 00:10:55,279
let me say matching the hardware

280
00:10:52,959 --> 00:10:58,319
capacity yes

281
00:10:55,279 --> 00:11:01,120
the normally you the in the university

282
00:10:58,320 --> 00:11:04,480
when you are learning the programming

283
00:11:01,120 --> 00:11:06,720
that the people thinks that for example

284
00:11:04,480 --> 00:11:10,959
the resources the memory

285
00:11:06,720 --> 00:11:13,839
of the cpu cycles are infinite yes

286
00:11:10,959 --> 00:11:15,920
it is just you whatever you make that

287
00:11:13,839 --> 00:11:17,920
you make a tables which is the gigabyte

288
00:11:15,920 --> 00:11:19,040
you make a tables which is 10 gigabytes

289
00:11:17,920 --> 00:11:20,800
no problem yes

290
00:11:19,040 --> 00:11:22,560
in the hardware it's not the case yes in

291
00:11:20,800 --> 00:11:25,199
the hardware you can have maybe

292
00:11:22,560 --> 00:11:27,839
six mega memory of the very fast memory

293
00:11:25,200 --> 00:11:30,880
you have maybe a few gigabytes of the

294
00:11:27,839 --> 00:11:34,399
some smaller memory like a ddr yes

295
00:11:30,880 --> 00:11:37,760
and it is that

296
00:11:34,399 --> 00:11:38,720
something what is possible to you is it

297
00:11:37,760 --> 00:11:42,319
changes your

298
00:11:38,720 --> 00:11:45,839
way of the thinking

299
00:11:42,320 --> 00:11:46,480
what else you can do yes uh additional

300
00:11:45,839 --> 00:11:50,399
thick

301
00:11:46,480 --> 00:11:52,079
trick is to make sure that your fpga on

302
00:11:50,399 --> 00:11:54,240
your hardware is invisible to your

303
00:11:52,079 --> 00:11:58,000
application yes

304
00:11:54,240 --> 00:12:02,880
here this is example of the

305
00:11:58,000 --> 00:12:04,639
uh uh segment routing v6 acceleration i

306
00:12:02,880 --> 00:12:06,800
was talking yesterday about mark

307
00:12:04,639 --> 00:12:07,760
uh detailed way about what is the

308
00:12:06,800 --> 00:12:10,240
problem uh

309
00:12:07,760 --> 00:12:11,680
i don't want to go into details how it

310
00:12:10,240 --> 00:12:13,920
works

311
00:12:11,680 --> 00:12:14,959
but imagine that for example the

312
00:12:13,920 --> 00:12:17,920
situation is

313
00:12:14,959 --> 00:12:19,839
on this left side you have the not

314
00:12:17,920 --> 00:12:21,519
accelerated part yes

315
00:12:19,839 --> 00:12:22,959
everything happens inside of the

316
00:12:21,519 --> 00:12:26,560
software yes

317
00:12:22,959 --> 00:12:29,920
and really this blue part is the part

318
00:12:26,560 --> 00:12:34,160
which is uh is the part which

319
00:12:29,920 --> 00:12:36,639
creates some router or the switch inside

320
00:12:34,160 --> 00:12:40,079
a software switch and this blue part is

321
00:12:36,639 --> 00:12:44,320
visible to the user yes

322
00:12:40,079 --> 00:12:47,120
in our acceleration solution we put

323
00:12:44,320 --> 00:12:48,000
the hardware acceleration inside of the

324
00:12:47,120 --> 00:12:52,320
hardware

325
00:12:48,000 --> 00:12:54,480
but we keep this invisible to the user

326
00:12:52,320 --> 00:12:56,959
yes order to the application yes

327
00:12:54,480 --> 00:12:58,800
you see for example in the model uh the

328
00:12:56,959 --> 00:13:01,279
most important part which is the

329
00:12:58,800 --> 00:13:02,880
application that vm on the top of this

330
00:13:01,279 --> 00:13:06,320
uh on the top

331
00:13:02,880 --> 00:13:09,839
it do not see the fpga and is not aware

332
00:13:06,320 --> 00:13:12,480
that the fpga is used at all yes

333
00:13:09,839 --> 00:13:14,880
it is the most important part uh because

334
00:13:12,480 --> 00:13:18,240
you can see for example i can make the

335
00:13:14,880 --> 00:13:19,839
perfect solution with the fpga but a big

336
00:13:18,240 --> 00:13:22,240
problem what we have is the how to

337
00:13:19,839 --> 00:13:23,200
deploy this one yes how to make the user

338
00:13:22,240 --> 00:13:25,920
using this one

339
00:13:23,200 --> 00:13:27,600
yes and imagine for example that you

340
00:13:25,920 --> 00:13:28,959
want to go to the data center you have

341
00:13:27,600 --> 00:13:31,200
the million servers

342
00:13:28,959 --> 00:13:33,119
and you will say okay i want to change

343
00:13:31,200 --> 00:13:34,160
the millions of the applications yes

344
00:13:33,120 --> 00:13:37,760
running because

345
00:13:34,160 --> 00:13:41,120
i have created my one smart

346
00:13:37,760 --> 00:13:42,319
fpga application and my application can

347
00:13:41,120 --> 00:13:44,480
use the fpga

348
00:13:42,320 --> 00:13:45,839
it won't work yes you must hide your

349
00:13:44,480 --> 00:13:47,360
fpga inside

350
00:13:45,839 --> 00:13:49,199
somewhere in the system to make sure

351
00:13:47,360 --> 00:13:51,920
that it is invisible and

352
00:13:49,199 --> 00:13:54,560
everything a part of the fpga is not

353
00:13:51,920 --> 00:13:54,560
changed yes

354
00:13:56,240 --> 00:14:02,639
okay uh let me some short and uh

355
00:13:59,440 --> 00:14:06,399
what we can achieve using the fpga yes

356
00:14:02,639 --> 00:14:08,160
that we are using fpga for the data plan

357
00:14:06,399 --> 00:14:10,560
to get the better performance

358
00:14:08,160 --> 00:14:12,560
what means the better performance yes uh

359
00:14:10,560 --> 00:14:13,920
in the software solution for the data

360
00:14:12,560 --> 00:14:16,638
plan using the course

361
00:14:13,920 --> 00:14:18,560
for the packet processing yes and we

362
00:14:16,639 --> 00:14:20,079
have the course and for example the

363
00:14:18,560 --> 00:14:23,279
software solution

364
00:14:20,079 --> 00:14:25,040
in some cases is can use the 14 courses

365
00:14:23,279 --> 00:14:26,560
it is for example the half of the course

366
00:14:25,040 --> 00:14:28,880
used by the server yes

367
00:14:26,560 --> 00:14:31,199
with our accelerator we can do this

368
00:14:28,880 --> 00:14:33,760
using the four courses

369
00:14:31,199 --> 00:14:34,639
it is the three times or the four times

370
00:14:33,760 --> 00:14:36,880
less course

371
00:14:34,639 --> 00:14:38,800
and having the more course for you for

372
00:14:36,880 --> 00:14:40,639
the processing yes it is just the

373
00:14:38,800 --> 00:14:42,479
example what you can achieve

374
00:14:40,639 --> 00:14:43,680
and without any change of the

375
00:14:42,480 --> 00:14:45,839
application it is

376
00:14:43,680 --> 00:14:47,199
just the solution made by our partner

377
00:14:45,839 --> 00:14:49,920
the hcl

378
00:14:47,199 --> 00:14:53,359
with the some our customer who was

379
00:14:49,920 --> 00:14:54,959
making the real deployments yes and

380
00:14:53,360 --> 00:14:57,519
they achieved that result with the

381
00:14:54,959 --> 00:14:59,040
customers yes everyone is happy and so

382
00:14:57,519 --> 00:15:01,120
we have the better performance and the

383
00:14:59,040 --> 00:15:03,199
customer can run the application without

384
00:15:01,120 --> 00:15:04,480
any changes thank you very much we have

385
00:15:03,199 --> 00:15:07,120
the few seconds to the

386
00:15:04,480 --> 00:15:07,120
one question

387
00:15:09,199 --> 00:15:20,260
any questions yeah okay thank you very

388
00:15:12,930 --> 00:15:20,260
[Applause]

389
00:15:21,320 --> 00:15:24,320
much

