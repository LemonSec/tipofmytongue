1
00:00:05,440 --> 00:00:09,440
hello

2
00:00:06,560 --> 00:00:11,440
uh so uh this talk is an introduction to

3
00:00:09,440 --> 00:00:13,599
the tools available in build root

4
00:00:11,440 --> 00:00:14,959
for compliance with the open source

5
00:00:13,599 --> 00:00:17,520
licensing

6
00:00:14,960 --> 00:00:18,160
i'm luca cherizzoli i love open source

7
00:00:17,520 --> 00:00:20,080
and

8
00:00:18,160 --> 00:00:22,720
for my daily job i design embedded linux

9
00:00:20,080 --> 00:00:25,598
system at iim sportline for

10
00:00:22,720 --> 00:00:26,000
motorsport applications uh so first

11
00:00:25,599 --> 00:00:28,640
thing

12
00:00:26,000 --> 00:00:30,000
uh let's have a super quick introduction

13
00:00:28,640 --> 00:00:31,920
to bid root

14
00:00:30,000 --> 00:00:33,200
build root is an embedded linux build

15
00:00:31,920 --> 00:00:35,760
system so

16
00:00:33,200 --> 00:00:37,200
you want to design an embedded device

17
00:00:35,760 --> 00:00:39,040
running linux on it

18
00:00:37,200 --> 00:00:41,440
you have to put together lots of

19
00:00:39,040 --> 00:00:45,039
packages for it to work

20
00:00:41,440 --> 00:00:47,039
and so this is a complex task and

21
00:00:45,039 --> 00:00:48,879
there are tools to help you which are

22
00:00:47,039 --> 00:00:49,360
the build systems build root is one of

23
00:00:48,879 --> 00:00:52,559
them

24
00:00:49,360 --> 00:00:55,440
it takes a lot of packages from

25
00:00:52,559 --> 00:00:56,239
from the sources it extracts them

26
00:00:55,440 --> 00:01:00,079
patches

27
00:00:56,239 --> 00:01:02,160
to fix problems uh compile them

28
00:01:00,079 --> 00:01:03,920
cross-compile them and the output

29
00:01:02,160 --> 00:01:06,000
product is images

30
00:01:03,920 --> 00:01:07,119
that are able to be run on the embedded

31
00:01:06,000 --> 00:01:09,760
device so

32
00:01:07,119 --> 00:01:12,320
uh in the end what happens is the end

33
00:01:09,760 --> 00:01:15,040
user will receive

34
00:01:12,320 --> 00:01:16,559
those open source packages in a binary

35
00:01:15,040 --> 00:01:18,960
form

36
00:01:16,560 --> 00:01:20,960
another thing it produces is host tools

37
00:01:18,960 --> 00:01:23,039
meaning tools that are not

38
00:01:20,960 --> 00:01:25,919
really meant to run on the device but

39
00:01:23,040 --> 00:01:27,040
they are natively compiled for the host

40
00:01:25,920 --> 00:01:30,079
such as for example

41
00:01:27,040 --> 00:01:32,400
image creation utilities

42
00:01:30,079 --> 00:01:34,320
let's have a quick look at how build

43
00:01:32,400 --> 00:01:35,040
root works it is based on two main

44
00:01:34,320 --> 00:01:38,079
pillars

45
00:01:35,040 --> 00:01:40,159
one is the make program to

46
00:01:38,079 --> 00:01:41,119
actually run the build but before that

47
00:01:40,159 --> 00:01:44,079
you configure it

48
00:01:41,119 --> 00:01:45,280
using the kconfig configuration system

49
00:01:44,079 --> 00:01:49,119
from the linux kernel

50
00:01:45,280 --> 00:01:52,320
so uh you can do the usual things

51
00:01:49,119 --> 00:01:55,520
like make help build root has

52
00:01:52,320 --> 00:01:57,119
a list of default configurations for

53
00:01:55,520 --> 00:01:58,880
well-known boards so let's load one

54
00:01:57,119 --> 00:02:00,560
configuration uh

55
00:01:58,880 --> 00:02:02,320
when it is loaded here ready to build

56
00:02:00,560 --> 00:02:05,600
but first we can

57
00:02:02,320 --> 00:02:08,000
do make menu config

58
00:02:05,600 --> 00:02:09,359
and modify something we have a lot of

59
00:02:08,000 --> 00:02:11,440
parameters to tweak

60
00:02:09,360 --> 00:02:12,720
let's just have a look at one we can add

61
00:02:11,440 --> 00:02:14,640
packages to be

62
00:02:12,720 --> 00:02:15,760
on the target on the root file system so

63
00:02:14,640 --> 00:02:18,399
we can add an

64
00:02:15,760 --> 00:02:19,120
in audio video application we can add a

65
00:02:18,400 --> 00:02:22,239
test

66
00:02:19,120 --> 00:02:24,319
as a test in the help we can see it

67
00:02:22,239 --> 00:02:26,239
depends on some other libraries so it

68
00:02:24,319 --> 00:02:29,679
will pull in other dependencies

69
00:02:26,239 --> 00:02:31,760
in our build let's save and exit

70
00:02:29,680 --> 00:02:33,680
and then we can run the bid by simply

71
00:02:31,760 --> 00:02:34,720
typing make so it will start fetching

72
00:02:33,680 --> 00:02:37,040
the sources

73
00:02:34,720 --> 00:02:38,000
extracting and building everything so

74
00:02:37,040 --> 00:02:41,280
what it builds

75
00:02:38,000 --> 00:02:44,879
we can go on with um

76
00:02:41,280 --> 00:02:47,280
an introduction to open source licensing

77
00:02:44,879 --> 00:02:48,720
the open source doesn't mean you grab

78
00:02:47,280 --> 00:02:50,080
something from the internet you use it

79
00:02:48,720 --> 00:02:52,239
you're okay

80
00:02:50,080 --> 00:02:53,599
you have rights and obligations with

81
00:02:52,239 --> 00:02:56,080
open source

82
00:02:53,599 --> 00:02:58,720
so uh most of the open source software

83
00:02:56,080 --> 00:03:00,239
falls into two main categories

84
00:02:58,720 --> 00:03:02,400
those with a permissive license and

85
00:03:00,239 --> 00:03:05,440
those with a copyleft license

86
00:03:02,400 --> 00:03:08,720
permissive license including the bsd uh

87
00:03:05,440 --> 00:03:10,959
licenses mit x11 um

88
00:03:08,720 --> 00:03:12,879
allow you to use re modify and

89
00:03:10,959 --> 00:03:15,920
redistribute the source code

90
00:03:12,879 --> 00:03:16,959
redistribute the program and they

91
00:03:15,920 --> 00:03:20,559
require you to

92
00:03:16,959 --> 00:03:23,040
provide the license text to your users

93
00:03:20,560 --> 00:03:24,640
so uh in this way that the original

94
00:03:23,040 --> 00:03:26,560
author is acknowledged

95
00:03:24,640 --> 00:03:28,640
you can provide it either in a printed

96
00:03:26,560 --> 00:03:30,239
manual or in the program output or in

97
00:03:28,640 --> 00:03:31,518
the display or somewhere but you have to

98
00:03:30,239 --> 00:03:35,120
provide it

99
00:03:31,519 --> 00:03:38,319
the other family is the copyleft family

100
00:03:35,120 --> 00:03:40,400
the gpl licenses are the most famous

101
00:03:38,319 --> 00:03:42,159
representative in this category

102
00:03:40,400 --> 00:03:43,760
you have pretty much the same rights to

103
00:03:42,159 --> 00:03:45,280
use modify and redistribute

104
00:03:43,760 --> 00:03:46,879
you also have to provide the license

105
00:03:45,280 --> 00:03:49,519
text but additionally

106
00:03:46,879 --> 00:03:50,798
you have to provide the source code for

107
00:03:49,519 --> 00:03:52,480
the software

108
00:03:50,799 --> 00:03:55,040
if you modify it you have to provide the

109
00:03:52,480 --> 00:03:57,040
modified version so uh you have an extra

110
00:03:55,040 --> 00:04:00,599
obligation which makes those two family

111
00:03:57,040 --> 00:04:01,760
very different of course this is an

112
00:04:00,599 --> 00:04:03,599
oversimplifications

113
00:04:01,760 --> 00:04:05,120
there are many more more details there

114
00:04:03,599 --> 00:04:06,879
are different variations and different

115
00:04:05,120 --> 00:04:08,799
versions of each license

116
00:04:06,879 --> 00:04:10,399
and there are licenses that are

117
00:04:08,799 --> 00:04:12,879
incompatible with each other

118
00:04:10,400 --> 00:04:14,560
so you have to take care of not using

119
00:04:12,879 --> 00:04:15,359
two incompatible packages in the same

120
00:04:14,560 --> 00:04:18,639
program

121
00:04:15,360 --> 00:04:20,959
and when looking for a program you

122
00:04:18,639 --> 00:04:23,919
wonder what license it has

123
00:04:20,959 --> 00:04:25,919
beware sometimes the websites have

124
00:04:23,919 --> 00:04:29,120
incorrect or incomplete information

125
00:04:25,919 --> 00:04:31,280
the only auditory authoritative place

126
00:04:29,120 --> 00:04:32,639
for the license text is the source code

127
00:04:31,280 --> 00:04:33,198
so have a look in the source code if you

128
00:04:32,639 --> 00:04:35,120
want to be

129
00:04:33,199 --> 00:04:36,479
absolutely sure even your build system

130
00:04:35,120 --> 00:04:38,240
might be wrong so

131
00:04:36,479 --> 00:04:40,039
in that case you're welcome to send the

132
00:04:38,240 --> 00:04:42,400
patch and fix the information in big

133
00:04:40,040 --> 00:04:44,639
system uh so

134
00:04:42,400 --> 00:04:46,320
in the practical uh in a practical

135
00:04:44,639 --> 00:04:47,199
scenario what do you have to do to be

136
00:04:46,320 --> 00:04:49,280
compliant

137
00:04:47,199 --> 00:04:50,400
uh first you have to as i said to

138
00:04:49,280 --> 00:04:52,960
provide the license tech

139
00:04:50,400 --> 00:04:53,599
for all of the packages that acquire it

140
00:04:52,960 --> 00:04:56,638
uh

141
00:04:53,600 --> 00:04:57,520
in any form that is suitable but you

142
00:04:56,639 --> 00:05:00,240
also should

143
00:04:57,520 --> 00:05:01,039
store the source code archives for all

144
00:05:00,240 --> 00:05:02,160
the packages

145
00:05:01,039 --> 00:05:05,039
you don't have to provide them

146
00:05:02,160 --> 00:05:05,680
beforehand differently from the license

147
00:05:05,039 --> 00:05:08,800
text

148
00:05:05,680 --> 00:05:11,199
but you have to provide a written offer

149
00:05:08,800 --> 00:05:12,560
to release the source code to anybody

150
00:05:11,199 --> 00:05:14,160
who asked so it's a good idea to have

151
00:05:12,560 --> 00:05:17,600
saved them beforehand

152
00:05:14,160 --> 00:05:20,479
when you're sure you have them by the

153
00:05:17,600 --> 00:05:22,479
new gpl wording you have to also include

154
00:05:20,479 --> 00:05:24,560
the scripts used to control compilation

155
00:05:22,479 --> 00:05:26,880
installation which is they make files he

156
00:05:24,560 --> 00:05:29,360
make list or configuracy whatever

157
00:05:26,880 --> 00:05:29,919
but if you're using a build system it is

158
00:05:29,360 --> 00:05:31,600
also

159
00:05:29,919 --> 00:05:32,960
uh something that controls the

160
00:05:31,600 --> 00:05:35,759
compilation so um

161
00:05:32,960 --> 00:05:37,520
this is a bit debated but um according

162
00:05:35,759 --> 00:05:38,080
to at least the official interpretation

163
00:05:37,520 --> 00:05:40,960
of the

164
00:05:38,080 --> 00:05:41,758
developers the build system is included

165
00:05:40,960 --> 00:05:45,039
in the scripts

166
00:05:41,759 --> 00:05:47,680
you should provide okay uh so

167
00:05:45,039 --> 00:05:48,240
um what does build root offer you to

168
00:05:47,680 --> 00:05:52,160
help

169
00:05:48,240 --> 00:05:54,000
in this bit complex task it offers uh

170
00:05:52,160 --> 00:05:56,479
some tools uh in addition to

171
00:05:54,000 --> 00:05:57,199
building the images and host tools build

172
00:05:56,479 --> 00:06:00,318
root also

173
00:05:57,199 --> 00:06:01,520
can generate so-called legal info these

174
00:06:00,319 --> 00:06:04,160
include the license text

175
00:06:01,520 --> 00:06:05,520
and the source code that have to be

176
00:06:04,160 --> 00:06:07,919
released in some form to

177
00:06:05,520 --> 00:06:10,000
the end user and also some additional

178
00:06:07,919 --> 00:06:12,960
information material

179
00:06:10,000 --> 00:06:13,440
and so we can have a look with a simple

180
00:06:12,960 --> 00:06:15,198
demo

181
00:06:13,440 --> 00:06:17,759
uh actually it's very simple you just

182
00:06:15,199 --> 00:06:19,840
have to run the command make legal info

183
00:06:17,759 --> 00:06:21,600
and so let's have a look the build has

184
00:06:19,840 --> 00:06:24,638
finished so we have

185
00:06:21,600 --> 00:06:25,199
our images here already and we can do

186
00:06:24,639 --> 00:06:28,400
make

187
00:06:25,199 --> 00:06:30,160
legal info and now we will

188
00:06:28,400 --> 00:06:32,239
collect all of the material from all the

189
00:06:30,160 --> 00:06:34,800
packages uh you don't need to have

190
00:06:32,240 --> 00:06:37,199
a completed a build to run it you can

191
00:06:34,800 --> 00:06:40,240
run it anyway just to investigate

192
00:06:37,199 --> 00:06:43,360
what licenses would i use if i

193
00:06:40,240 --> 00:06:47,199
i used that package

194
00:06:43,360 --> 00:06:50,960
so the result is in output legal info

195
00:06:47,199 --> 00:06:54,639
can you read can you read the text okay

196
00:06:50,960 --> 00:06:57,440
uh so first we have a readme file which

197
00:06:54,639 --> 00:06:58,160
tells you this is what i have saved for

198
00:06:57,440 --> 00:07:00,400
you

199
00:06:58,160 --> 00:07:01,440
with the brief description it might have

200
00:07:00,400 --> 00:07:04,400
warnings

201
00:07:01,440 --> 00:07:06,560
to say i was unable to save these and

202
00:07:04,400 --> 00:07:11,840
that

203
00:07:06,560 --> 00:07:11,840
then you have well the build root

204
00:07:14,639 --> 00:07:18,240
the build root configuration which has

205
00:07:16,240 --> 00:07:19,199
been used to to run the build so of

206
00:07:18,240 --> 00:07:22,000
course it affects

207
00:07:19,199 --> 00:07:24,080
the the final result so uh it it's

208
00:07:22,000 --> 00:07:27,440
something you might want to release for

209
00:07:24,080 --> 00:07:30,880
helping reducing the build um

210
00:07:27,440 --> 00:07:32,479
then you have well um something maybe

211
00:07:30,880 --> 00:07:37,039
more interesting

212
00:07:32,479 --> 00:07:39,440
a manifest file it is a csv file that

213
00:07:37,039 --> 00:07:40,560
basically uh lists all of the packages

214
00:07:39,440 --> 00:07:43,520
with name

215
00:07:40,560 --> 00:07:45,440
version license and license files and

216
00:07:43,520 --> 00:07:47,440
also the source archive name

217
00:07:45,440 --> 00:07:48,479
and the the website where it has been

218
00:07:47,440 --> 00:07:51,280
downloaded from

219
00:07:48,479 --> 00:07:53,280
finally it lost also this the recursive

220
00:07:51,280 --> 00:07:54,000
dependencies so for for example for the

221
00:07:53,280 --> 00:07:58,159
package

222
00:07:54,000 --> 00:08:01,039
a test which we enable manually

223
00:07:58,160 --> 00:08:03,280
we can see it depends on al salib which

224
00:08:01,039 --> 00:08:05,280
is released under these licenses

225
00:08:03,280 --> 00:08:06,559
and it also depends on libev which has

226
00:08:05,280 --> 00:08:09,119
these other licenses

227
00:08:06,560 --> 00:08:10,160
so we can easily check the if for

228
00:08:09,120 --> 00:08:12,479
example our

229
00:08:10,160 --> 00:08:13,360
application depends on a ton of

230
00:08:12,479 --> 00:08:16,240
libraries with

231
00:08:13,360 --> 00:08:18,479
dependencies and we can see if there are

232
00:08:16,240 --> 00:08:20,879
incompatible license here

233
00:08:18,479 --> 00:08:22,318
there is a similar file saved that

234
00:08:20,879 --> 00:08:24,639
called host manifest

235
00:08:22,319 --> 00:08:27,360
which is pretty much the same but for

236
00:08:24,639 --> 00:08:30,160
host packages

237
00:08:27,360 --> 00:08:31,360
so it has exactly the same structure

238
00:08:30,160 --> 00:08:35,120
then you can

239
00:08:31,360 --> 00:08:37,279
look at the licenses directory which

240
00:08:35,120 --> 00:08:39,120
has a subdirectory for each package with

241
00:08:37,279 --> 00:08:40,080
the license files containing license

242
00:08:39,120 --> 00:08:42,240
text

243
00:08:40,080 --> 00:08:43,279
which is what you should provide to the

244
00:08:42,240 --> 00:08:46,399
user

245
00:08:43,279 --> 00:08:48,240
and also the sources

246
00:08:46,399 --> 00:08:49,920
also here a subdirectory for each

247
00:08:48,240 --> 00:08:51,760
package with the turbo

248
00:08:49,920 --> 00:08:54,560
and any patches that have been applied

249
00:08:51,760 --> 00:08:58,240
to the package with the series file

250
00:08:54,560 --> 00:09:00,959
so you have pretty much close to all the

251
00:08:58,240 --> 00:09:03,360
material that you need here

252
00:09:00,959 --> 00:09:04,160
and so it makes it easy for you to do

253
00:09:03,360 --> 00:09:06,240
the rest you

254
00:09:04,160 --> 00:09:07,760
you should post process that too to be

255
00:09:06,240 --> 00:09:08,000
compliant but all of the material has

256
00:09:07,760 --> 00:09:11,600
been

257
00:09:08,000 --> 00:09:14,959
collected here okay uh

258
00:09:11,600 --> 00:09:17,440
that's it and now um

259
00:09:14,959 --> 00:09:18,719
this is how it works uh will root

260
00:09:17,440 --> 00:09:21,760
there's no magic to

261
00:09:18,720 --> 00:09:24,640
understand what package what license

262
00:09:21,760 --> 00:09:25,360
package is listen standard uh it would

263
00:09:24,640 --> 00:09:28,720
not be

264
00:09:25,360 --> 00:09:32,320
quite feasible uh but it uh

265
00:09:28,720 --> 00:09:35,440
it uses a simple mechanism where the

266
00:09:32,320 --> 00:09:38,160
the package um maintainer or

267
00:09:35,440 --> 00:09:39,279
or the person who writes the package has

268
00:09:38,160 --> 00:09:42,000
to uh

269
00:09:39,279 --> 00:09:43,439
insert this info uh let's take the vlc

270
00:09:42,000 --> 00:09:46,480
package as an example

271
00:09:43,440 --> 00:09:49,519
uh here are two variables vlc license uh

272
00:09:46,480 --> 00:09:50,399
so this is the name of the licenses and

273
00:09:49,519 --> 00:09:52,240
uh

274
00:09:50,399 --> 00:09:54,080
in this case there are two licenses in

275
00:09:52,240 --> 00:09:57,760
for for different parts of

276
00:09:54,080 --> 00:09:58,640
of the software or uh it is do a dual uh

277
00:09:57,760 --> 00:10:01,120
license

278
00:09:58,640 --> 00:10:01,920
and then vlc license files so the name

279
00:10:01,120 --> 00:10:04,399
of the files

280
00:10:01,920 --> 00:10:05,920
that contain the text and that should be

281
00:10:04,399 --> 00:10:08,240
uh copied into the

282
00:10:05,920 --> 00:10:09,599
output directory uh there are also

283
00:10:08,240 --> 00:10:12,880
hashes for these files

284
00:10:09,600 --> 00:10:13,440
so that should the uh version the the

285
00:10:12,880 --> 00:10:15,040
license

286
00:10:13,440 --> 00:10:16,720
change in a future version of the

287
00:10:15,040 --> 00:10:18,480
package the package will not build

288
00:10:16,720 --> 00:10:21,120
anymore and so you will notice

289
00:10:18,480 --> 00:10:21,839
and maybe it's really a license change

290
00:10:21,120 --> 00:10:25,760
and you have to

291
00:10:21,839 --> 00:10:25,760
update the the above fields

292
00:10:26,000 --> 00:10:30,320
you probably have your own proprietal

293
00:10:27,839 --> 00:10:32,720
application on top of

294
00:10:30,320 --> 00:10:34,240
open source libraries in your embedded

295
00:10:32,720 --> 00:10:37,760
device and in this case

296
00:10:34,240 --> 00:10:40,800
you uh you can uh handle it by

297
00:10:37,760 --> 00:10:43,120
adding license sql proprietary or my

298
00:10:40,800 --> 00:10:44,640
company proprietary license whatever

299
00:10:43,120 --> 00:10:46,399
and you probably want to set

300
00:10:44,640 --> 00:10:49,839
redistribute equal no

301
00:10:46,399 --> 00:10:50,560
meaning the source code will not be

302
00:10:49,839 --> 00:10:52,640
saved

303
00:10:50,560 --> 00:10:54,560
into the output directory so you do not

304
00:10:52,640 --> 00:10:56,560
risk to release your proprietary

305
00:10:54,560 --> 00:11:00,560
software accidentally

306
00:10:56,560 --> 00:11:03,599
okay um finally keep in mind that uh

307
00:11:00,560 --> 00:11:05,680
if you use the override source tier or

308
00:11:03,600 --> 00:11:07,680
local site method of build root the

309
00:11:05,680 --> 00:11:10,160
source code will not be saved

310
00:11:07,680 --> 00:11:11,599
those two features are useful when

311
00:11:10,160 --> 00:11:15,439
developing

312
00:11:11,600 --> 00:11:17,600
your your software and uh

313
00:11:15,440 --> 00:11:20,160
it's okay if you use them but i would

314
00:11:17,600 --> 00:11:23,120
suggest not to use them when releasing

315
00:11:20,160 --> 00:11:23,760
uh but release with traditional methods

316
00:11:23,120 --> 00:11:25,360
because

317
00:11:23,760 --> 00:11:26,880
you run the risk to not save some

318
00:11:25,360 --> 00:11:29,839
important material that you

319
00:11:26,880 --> 00:11:29,839
have to release

320
00:11:29,920 --> 00:11:34,319
okay uh finally well there is a very

321
00:11:33,120 --> 00:11:37,120
special case

322
00:11:34,320 --> 00:11:38,640
where uh some packages have a source

323
00:11:37,120 --> 00:11:40,720
variable that points to a

324
00:11:38,640 --> 00:11:42,160
turbo which does not contain the source

325
00:11:40,720 --> 00:11:45,600
code but the but

326
00:11:42,160 --> 00:11:46,240
a binary uh and this is this only

327
00:11:45,600 --> 00:11:48,880
applies

328
00:11:46,240 --> 00:11:50,000
with um external preview two chains

329
00:11:48,880 --> 00:11:51,839
actually so it's a very

330
00:11:50,000 --> 00:11:53,839
special corner case but in that case

331
00:11:51,839 --> 00:11:54,399
there is an additional variable actual

332
00:11:53,839 --> 00:11:56,399
source

333
00:11:54,399 --> 00:11:58,480
that can point to a different arbol

334
00:11:56,399 --> 00:12:00,399
which is released at time by

335
00:11:58,480 --> 00:12:02,240
chain author where all the source code

336
00:12:00,399 --> 00:12:03,279
is you probably don't need that but you

337
00:12:02,240 --> 00:12:06,639
should be aware

338
00:12:03,279 --> 00:12:07,439
uh okay so as you have seen build root

339
00:12:06,639 --> 00:12:09,440
has

340
00:12:07,440 --> 00:12:10,720
a tool to help you in license compliance

341
00:12:09,440 --> 00:12:13,680
it does not do everything

342
00:12:10,720 --> 00:12:16,079
for example it cannot block you from

343
00:12:13,680 --> 00:12:18,399
using packages with an undesired license

344
00:12:16,079 --> 00:12:19,760
or it cannot block you if you use an

345
00:12:18,399 --> 00:12:22,320
incompatible licenses

346
00:12:19,760 --> 00:12:23,360
but it provides basically the raw data

347
00:12:22,320 --> 00:12:25,920
that you can

348
00:12:23,360 --> 00:12:26,880
quite easily use to you can maybe

349
00:12:25,920 --> 00:12:30,160
process that

350
00:12:26,880 --> 00:12:31,200
to uh to check for any issues in your

351
00:12:30,160 --> 00:12:34,160
licensing

352
00:12:31,200 --> 00:12:37,279
um the tool is pretty simple to use so

353
00:12:34,160 --> 00:12:39,680
there is really no reason to not use it

354
00:12:37,279 --> 00:12:40,959
okay there are a few links here if you

355
00:12:39,680 --> 00:12:44,399
want additional details

356
00:12:40,959 --> 00:12:45,279
on this feature uh the manual uh has all

357
00:12:44,399 --> 00:12:48,079
the details

358
00:12:45,279 --> 00:12:50,560
so you you can click on those links uh

359
00:12:48,079 --> 00:12:52,399
everything is well documented in manual

360
00:12:50,560 --> 00:12:53,760
also i suggest i have interviewed the

361
00:12:52,399 --> 00:12:56,880
video for this talk

362
00:12:53,760 --> 00:12:58,480
by paul barker uh it is about license

363
00:12:56,880 --> 00:12:59,839
compliance with the octo but actually

364
00:12:58,480 --> 00:13:00,639
most of the talk is built system

365
00:12:59,839 --> 00:13:03,279
agnostic

366
00:13:00,639 --> 00:13:04,639
and so it's a more detailed version of

367
00:13:03,279 --> 00:13:07,600
what i have said

368
00:13:04,639 --> 00:13:08,160
about open source licensing in general

369
00:13:07,600 --> 00:13:11,760
okay

370
00:13:08,160 --> 00:13:21,839
that's all we have almost two minutes

371
00:13:11,760 --> 00:13:21,839
any questions

372
00:13:26,320 --> 00:13:30,000
so either it was very clear or everybody

373
00:13:29,200 --> 00:13:35,839
was sleeping

374
00:13:30,000 --> 00:13:35,839
i'm sure it was very clear thank you

375
00:13:46,000 --> 00:13:50,959
uh no you mean if you have some yeah the

376
00:13:49,040 --> 00:13:54,319
question is is there any limitation

377
00:13:50,959 --> 00:13:56,959
about the programming languages used no

378
00:13:54,320 --> 00:13:58,720
uh if you have a package using i don't

379
00:13:56,959 --> 00:14:01,359
know rust or

380
00:13:58,720 --> 00:14:02,160
or whatever language it is supported by

381
00:14:01,360 --> 00:14:06,320
build root

382
00:14:02,160 --> 00:14:08,319
no problem licensing is not really about

383
00:14:06,320 --> 00:14:09,839
the technical aspects of programming

384
00:14:08,320 --> 00:14:17,760
languages so it's

385
00:14:09,839 --> 00:14:31,839
quite orthogonal

386
00:14:17,760 --> 00:14:31,839
okay once again thank you thank you

