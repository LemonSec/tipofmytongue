1
00:00:05,200 --> 00:00:10,080
uh so next up we got

2
00:00:07,120 --> 00:00:11,840
giacomo here old timer from the room as

3
00:00:10,080 --> 00:00:13,599
well

4
00:00:11,840 --> 00:00:15,120
and he's going to tell us about modern

5
00:00:13,599 --> 00:00:18,960
voip infrastructures

6
00:00:15,120 --> 00:00:21,198
take it away yes thanks so this is um

7
00:00:18,960 --> 00:00:22,800
a sort of back chat that we've been

8
00:00:21,199 --> 00:00:23,840
having for a couple of years with

9
00:00:22,800 --> 00:00:27,039
federico

10
00:00:23,840 --> 00:00:30,560
and we've been working on this concept

11
00:00:27,039 --> 00:00:32,880
for some time now and federico did a

12
00:00:30,560 --> 00:00:35,519
presentation a little bit more extended

13
00:00:32,880 --> 00:00:37,920
than this in september januscon

14
00:00:35,520 --> 00:00:40,960
and uh today we will see something like

15
00:00:37,920 --> 00:00:44,640
a light version which is more focused on

16
00:00:40,960 --> 00:00:47,039
on signaling and the other

17
00:00:44,640 --> 00:00:47,680
the other parts that we typically cover

18
00:00:47,039 --> 00:00:51,199
are more

19
00:00:47,680 --> 00:00:52,320
related to media handling qos debugging

20
00:00:51,199 --> 00:00:55,199
tools and

21
00:00:52,320 --> 00:00:56,800
security so i've been in the voip area

22
00:00:55,199 --> 00:01:00,160
for some time now

23
00:00:56,800 --> 00:01:01,358
and i've been in various companies that

24
00:01:00,160 --> 00:01:03,839
use open source

25
00:01:01,359 --> 00:01:05,439
components and uh involved with the

26
00:01:03,840 --> 00:01:07,680
kamaeli projects

27
00:01:05,438 --> 00:01:08,798
and other projects in the in the in the

28
00:01:07,680 --> 00:01:11,520
area like

29
00:01:08,799 --> 00:01:12,320
janus asterisk can freeze which an rtp

30
00:01:11,520 --> 00:01:15,360
engine

31
00:01:12,320 --> 00:01:17,439
and so on and um

32
00:01:15,360 --> 00:01:19,280
so let's let's see the overview as i

33
00:01:17,439 --> 00:01:22,479
mentioned uh we will

34
00:01:19,280 --> 00:01:24,479
cover mainly signaling today and we will

35
00:01:22,479 --> 00:01:26,000
we'll see a little bit about the

36
00:01:24,479 --> 00:01:29,039
evolution of the infrastructures

37
00:01:26,000 --> 00:01:32,640
where voip is actually deployed nowadays

38
00:01:29,040 --> 00:01:35,200
and which bits of voip are impacted

39
00:01:32,640 --> 00:01:36,720
and some workarounds so what you

40
00:01:35,200 --> 00:01:40,000
typically see together

41
00:01:36,720 --> 00:01:43,280
today and possibly something

42
00:01:40,000 --> 00:01:45,439
some thoughts for for the future so

43
00:01:43,280 --> 00:01:46,320
why the cloud and why we are developing

44
00:01:45,439 --> 00:01:49,119
deploying

45
00:01:46,320 --> 00:01:50,479
voip platforms in cloud infrastructure

46
00:01:49,119 --> 00:01:53,520
is easy to sell

47
00:01:50,479 --> 00:01:54,960
there are many um there are many

48
00:01:53,520 --> 00:01:56,798
advantages

49
00:01:54,960 --> 00:01:58,079
sometimes even the customers or the

50
00:01:56,799 --> 00:02:01,680
partners some

51
00:01:58,079 --> 00:02:04,240
somehow we expect it ha is definitely

52
00:02:01,680 --> 00:02:05,119
more reasonable more easy to to achieve

53
00:02:04,240 --> 00:02:08,878
and

54
00:02:05,119 --> 00:02:11,280
scalability comes in an easier way

55
00:02:08,878 --> 00:02:13,440
and the if you're starting small it's

56
00:02:11,280 --> 00:02:17,520
easier to then grow and have a

57
00:02:13,440 --> 00:02:20,560
small upfront upfront investment

58
00:02:17,520 --> 00:02:24,080
geographic distribution which is very

59
00:02:20,560 --> 00:02:27,599
valuable it's easy to um to achieve any

60
00:02:24,080 --> 00:02:30,319
even if with small small implementations

61
00:02:27,599 --> 00:02:32,079
and sometimes you get for for the

62
00:02:30,319 --> 00:02:34,238
easiest things you you get

63
00:02:32,080 --> 00:02:36,800
tools that are just there off the shelf

64
00:02:34,239 --> 00:02:40,000
like http load balancers or

65
00:02:36,800 --> 00:02:43,920
caching systems like redis and

66
00:02:40,000 --> 00:02:46,080
dns already there and so on

67
00:02:43,920 --> 00:02:47,440
so there are some challenges though

68
00:02:46,080 --> 00:02:50,720
because when you choose a

69
00:02:47,440 --> 00:02:52,959
cloud cloud provider then

70
00:02:50,720 --> 00:02:53,840
you if you already have a system you

71
00:02:52,959 --> 00:02:56,080
most probably

72
00:02:53,840 --> 00:02:57,200
need to redesign either the entire

73
00:02:56,080 --> 00:02:59,519
infrastructure

74
00:02:57,200 --> 00:03:01,359
the entire architecture or parts of it

75
00:02:59,519 --> 00:03:04,080
and instead if you are

76
00:03:01,360 --> 00:03:05,840
starting from a specific cloud provider

77
00:03:04,080 --> 00:03:07,040
you probably need to take some decisions

78
00:03:05,840 --> 00:03:09,440
that you will

79
00:03:07,040 --> 00:03:10,560
you will need to cover in the future and

80
00:03:09,440 --> 00:03:14,079
you may pay

81
00:03:10,560 --> 00:03:16,560
if uh if you decide just to

82
00:03:14,080 --> 00:03:18,080
to move uh to another provider and

83
00:03:16,560 --> 00:03:20,879
sometimes you don't have

84
00:03:18,080 --> 00:03:22,560
shared dedicated resources and it's

85
00:03:20,879 --> 00:03:24,798
difficult to assess the impact in the

86
00:03:22,560 --> 00:03:29,040
real time

87
00:03:24,799 --> 00:03:29,040
in in a real-time context

88
00:03:29,120 --> 00:03:34,560
and so it's not easy if you if you

89
00:03:32,319 --> 00:03:37,599
instead decide to spread a little

90
00:03:34,560 --> 00:03:39,200
your your strategy and not relying on a

91
00:03:37,599 --> 00:03:41,518
single cloud provider

92
00:03:39,200 --> 00:03:44,000
you may have part of the infrastructure

93
00:03:41,519 --> 00:03:47,200
in a cloud provider in part in another

94
00:03:44,000 --> 00:03:48,640
and there is no standard simple solution

95
00:03:47,200 --> 00:03:52,079
that works every time

96
00:03:48,640 --> 00:03:55,200
typically you need to either

97
00:03:52,080 --> 00:03:57,040
do something specific like vpns or

98
00:03:55,200 --> 00:03:58,238
discuss with the providers for a

99
00:03:57,040 --> 00:03:59,679
specific solution but

100
00:03:58,239 --> 00:04:02,640
there isn't anything that you can just

101
00:03:59,680 --> 00:04:05,439
use and sometimes you have the

102
00:04:02,640 --> 00:04:06,238
tools that are just specific for from

103
00:04:05,439 --> 00:04:09,280
from

104
00:04:06,239 --> 00:04:10,400
from those cloud providers so just in

105
00:04:09,280 --> 00:04:14,000
general

106
00:04:10,400 --> 00:04:17,120
we we moved so starting from 2001 and so

107
00:04:14,000 --> 00:04:18,238
on i think we moved from the server side

108
00:04:17,120 --> 00:04:21,120
where

109
00:04:18,238 --> 00:04:21,518
max up time was a reasonable goal and

110
00:04:21,120 --> 00:04:24,639
was

111
00:04:21,519 --> 00:04:27,280
considered the positive achievement

112
00:04:24,639 --> 00:04:29,280
but now what we focus on is the maximum

113
00:04:27,280 --> 00:04:32,080
possible resilience to restart

114
00:04:29,280 --> 00:04:34,080
of the applications and we moved from

115
00:04:32,080 --> 00:04:37,599
configuration updates just uh

116
00:04:34,080 --> 00:04:38,159
maybe more recently to an infrastructure

117
00:04:37,600 --> 00:04:40,320
that it

118
00:04:38,160 --> 00:04:41,919
can be called immutable where when you

119
00:04:40,320 --> 00:04:43,759
want to change something you don't

120
00:04:41,919 --> 00:04:45,359
change the configuration you change the

121
00:04:43,759 --> 00:04:47,759
components

122
00:04:45,360 --> 00:04:51,520
that are that are involved like for

123
00:04:47,759 --> 00:04:55,360
example deploying new container images

124
00:04:51,520 --> 00:04:57,758
and so we grew up in our voip

125
00:04:55,360 --> 00:04:59,280
experience with a very simple

126
00:04:57,759 --> 00:05:02,800
infrastructure where

127
00:04:59,280 --> 00:05:05,198
everything was under our control uh

128
00:05:02,800 --> 00:05:05,919
provision wasn't that simple things

129
00:05:05,199 --> 00:05:10,000
didn't move

130
00:05:05,919 --> 00:05:13,758
they didn't move fast but we had

131
00:05:10,000 --> 00:05:15,440
we could know everything ip addresses

132
00:05:13,759 --> 00:05:16,960
we could have public ap addresses

133
00:05:15,440 --> 00:05:20,240
directly on the machines

134
00:05:16,960 --> 00:05:22,560
and we have full control on firewall and

135
00:05:20,240 --> 00:05:24,720
what what now are called typically

136
00:05:22,560 --> 00:05:27,360
security groups

137
00:05:24,720 --> 00:05:28,320
but then if you look back so we stumbled

138
00:05:27,360 --> 00:05:30,880
upon this uh

139
00:05:28,320 --> 00:05:32,719
tweet from rosenberg last year and he

140
00:05:30,880 --> 00:05:34,880
said well you know

141
00:05:32,720 --> 00:05:36,000
this is our time how much time has

142
00:05:34,880 --> 00:05:39,440
passed since

143
00:05:36,000 --> 00:05:42,880
this work on this protocol started so

144
00:05:39,440 --> 00:05:45,600
if you see just the rtp and sip

145
00:05:42,880 --> 00:05:47,280
we're talking more than 20 years and but

146
00:05:45,600 --> 00:05:50,560
if you compare it with the

147
00:05:47,280 --> 00:05:51,679
evolution of the of the infrastructure

148
00:05:50,560 --> 00:05:54,000
instead you

149
00:05:51,680 --> 00:05:55,039
you see that most of the protocols were

150
00:05:54,000 --> 00:05:56,639
actually designed

151
00:05:55,039 --> 00:05:58,080
when the infrastructure was different

152
00:05:56,639 --> 00:06:01,199
than today

153
00:05:58,080 --> 00:06:02,159
and i think this is uh this is probably

154
00:06:01,199 --> 00:06:05,280
also visible

155
00:06:02,160 --> 00:06:07,759
in some in some aspects and we're going

156
00:06:05,280 --> 00:06:11,599
to to take a look

157
00:06:07,759 --> 00:06:13,520
so this is more

158
00:06:11,600 --> 00:06:16,400
similar to what we would like to see not

159
00:06:13,520 --> 00:06:20,080
care that much about

160
00:06:16,400 --> 00:06:22,960
the or better being able to

161
00:06:20,080 --> 00:06:23,359
have our systems provided by containers

162
00:06:22,960 --> 00:06:26,719
so

163
00:06:23,360 --> 00:06:27,280
any uh orchestration system generically

164
00:06:26,720 --> 00:06:30,400
even

165
00:06:27,280 --> 00:06:32,080
kubernetes possibly but then

166
00:06:30,400 --> 00:06:34,080
in particular for the inbound part

167
00:06:32,080 --> 00:06:36,880
having a component like this

168
00:06:34,080 --> 00:06:37,520
this blue load balancer thing that we

169
00:06:36,880 --> 00:06:40,560
draw

170
00:06:37,520 --> 00:06:44,080
a component that is

171
00:06:40,560 --> 00:06:46,000
voip aware and is able to manage the

172
00:06:44,080 --> 00:06:48,479
incoming the incoming and possibly

173
00:06:46,000 --> 00:06:50,479
also the outgoing traffic but with

174
00:06:48,479 --> 00:06:52,560
minimum

175
00:06:50,479 --> 00:06:54,560
configuration and with minimum with

176
00:06:52,560 --> 00:06:57,599
minimum work

177
00:06:54,560 --> 00:07:00,560
as you can do for example with http

178
00:06:57,599 --> 00:07:01,360
the problem is what we typically end up

179
00:07:00,560 --> 00:07:03,360
working now

180
00:07:01,360 --> 00:07:05,599
is more likely something like this so

181
00:07:03,360 --> 00:07:07,360
you have elastic aps or static aps

182
00:07:05,599 --> 00:07:10,800
depending on the cloud infrastructure

183
00:07:07,360 --> 00:07:12,720
so floating ips in general you need to

184
00:07:10,800 --> 00:07:15,120
take care of their location and

185
00:07:12,720 --> 00:07:17,919
associate them to

186
00:07:15,120 --> 00:07:18,960
your virtual machines or to your

187
00:07:17,919 --> 00:07:21,840
containers

188
00:07:18,960 --> 00:07:22,719
and manage the relationship with the

189
00:07:21,840 --> 00:07:24,799
service that

190
00:07:22,720 --> 00:07:26,319
that's behind those floating ip

191
00:07:24,800 --> 00:07:28,240
addresses

192
00:07:26,319 --> 00:07:29,520
sometimes if you want to maximize

193
00:07:28,240 --> 00:07:33,039
reliability you

194
00:07:29,520 --> 00:07:33,919
typically have a a virtual machine or a

195
00:07:33,039 --> 00:07:36,000
container in

196
00:07:33,919 --> 00:07:38,159
active mode and another one in standby

197
00:07:36,000 --> 00:07:41,599
mode but then you have

198
00:07:38,160 --> 00:07:44,000
constraints on how the standby can

199
00:07:41,599 --> 00:07:45,919
check can do the health checks for the

200
00:07:44,000 --> 00:07:49,120
for the active one for example

201
00:07:45,919 --> 00:07:52,318
in aws you can you can do

202
00:07:49,120 --> 00:07:53,759
level three checks only inside the same

203
00:07:52,319 --> 00:07:57,440
availability zone

204
00:07:53,759 --> 00:08:01,199
and you need to take care of all these

205
00:07:57,440 --> 00:08:05,039
details by by yourself

206
00:08:01,199 --> 00:08:08,400
so in general something that

207
00:08:05,039 --> 00:08:10,240
that impacts the the the architecture is

208
00:08:08,400 --> 00:08:13,280
that the eip addresses

209
00:08:10,240 --> 00:08:14,560
in when you are in particular with

210
00:08:13,280 --> 00:08:17,280
containers that can be

211
00:08:14,560 --> 00:08:18,960
can can be brought up and down the ap

212
00:08:17,280 --> 00:08:20,878
addresses change and not only the

213
00:08:18,960 --> 00:08:23,680
relationship with the

214
00:08:20,879 --> 00:08:25,680
the public interface but also the if you

215
00:08:23,680 --> 00:08:27,039
redeploy a container you may have a

216
00:08:25,680 --> 00:08:29,280
different ip address

217
00:08:27,039 --> 00:08:31,199
this doesn't work well with in general

218
00:08:29,280 --> 00:08:35,519
with

219
00:08:31,199 --> 00:08:37,919
signaling and typically you don't get

220
00:08:35,519 --> 00:08:38,719
a you only get a one to one nothing

221
00:08:37,919 --> 00:08:41,760
because

222
00:08:38,719 --> 00:08:43,680
between your machines and a public

223
00:08:41,760 --> 00:08:46,160
a public interface and you you don't

224
00:08:43,679 --> 00:08:49,839
have a direct visibility of

225
00:08:46,160 --> 00:08:52,560
your public ap addresses um

226
00:08:49,839 --> 00:08:54,240
so slightly related but not for this

227
00:08:52,560 --> 00:08:55,760
session is also the

228
00:08:54,240 --> 00:08:57,519
the difference between the bandwidth

229
00:08:55,760 --> 00:08:59,680
that the cloud providers

230
00:08:57,519 --> 00:09:01,920
tell you that you have and instead the

231
00:08:59,680 --> 00:09:04,079
packet rate that you actually have

232
00:09:01,920 --> 00:09:06,800
and also the typically you don't even

233
00:09:04,080 --> 00:09:08,320
know what your maximum packet raise is

234
00:09:06,800 --> 00:09:10,160
because the bandwidth is computed the

235
00:09:08,320 --> 00:09:14,240
jumbo packets and not with

236
00:09:10,160 --> 00:09:17,040
the small packets that come with codec

237
00:09:14,240 --> 00:09:19,200
optimization and also containers are

238
00:09:17,040 --> 00:09:21,680
ephemeral so they can

239
00:09:19,200 --> 00:09:22,320
be brought up and die and then you need

240
00:09:21,680 --> 00:09:25,680
to

241
00:09:22,320 --> 00:09:28,880
do something for the calls that do have

242
00:09:25,680 --> 00:09:30,640
a state and other things that are less

243
00:09:28,880 --> 00:09:32,320
important but still critical for

244
00:09:30,640 --> 00:09:36,000
operations which is related to

245
00:09:32,320 --> 00:09:39,600
logs and other information like

246
00:09:36,000 --> 00:09:40,560
traces for example so the the main

247
00:09:39,600 --> 00:09:44,000
difference between

248
00:09:40,560 --> 00:09:47,119
an http based or web-based world and

249
00:09:44,000 --> 00:09:47,519
voip is that you may say voip sessions

250
00:09:47,120 --> 00:09:50,880
are

251
00:09:47,519 --> 00:09:55,279
are sticky they are not part of the

252
00:09:50,880 --> 00:09:57,680
request and response paradigm and um

253
00:09:55,279 --> 00:09:59,040
it this is this doesn't cope well with

254
00:09:57,680 --> 00:10:01,359
an architecture that

255
00:09:59,040 --> 00:10:04,079
adds components but at the same time can

256
00:10:01,360 --> 00:10:06,240
remove components which may be even

257
00:10:04,079 --> 00:10:07,680
more tricky so you you need to find a

258
00:10:06,240 --> 00:10:10,880
balance between

259
00:10:07,680 --> 00:10:12,560
the immutability of the

260
00:10:10,880 --> 00:10:14,480
the state of the calls but also the

261
00:10:12,560 --> 00:10:16,959
volatility of the components that are

262
00:10:14,480 --> 00:10:20,160
serving

263
00:10:16,959 --> 00:10:21,760
there are providing the service um

264
00:10:20,160 --> 00:10:23,600
as we mentioned the ap addresses are

265
00:10:21,760 --> 00:10:26,319
ephemeral so one

266
00:10:23,600 --> 00:10:28,240
time ago you could you could decide this

267
00:10:26,320 --> 00:10:28,880
is your your box it will have a long

268
00:10:28,240 --> 00:10:30,880
time

269
00:10:28,880 --> 00:10:33,120
it will have a public ap address

270
00:10:30,880 --> 00:10:36,880
possibly one or more

271
00:10:33,120 --> 00:10:39,839
private ap addresses and it

272
00:10:36,880 --> 00:10:42,240
signalling for ongoing calls could rely

273
00:10:39,839 --> 00:10:45,600
on those ip addresses for correct

274
00:10:42,240 --> 00:10:48,000
routing this is the

275
00:10:45,600 --> 00:10:49,040
this is difficult to achieve now with

276
00:10:48,000 --> 00:10:52,240
the

277
00:10:49,040 --> 00:10:55,040
volatility of ip addresses and

278
00:10:52,240 --> 00:10:56,959
so you need to shift the develop the

279
00:10:55,040 --> 00:11:00,079
design of the architecture

280
00:10:56,959 --> 00:11:03,199
more towards dns in general so

281
00:11:00,079 --> 00:11:05,199
even for example to work with console

282
00:11:03,200 --> 00:11:08,399
and be assured that routing is done with

283
00:11:05,200 --> 00:11:11,839
dns and not with ap addresses which is

284
00:11:08,399 --> 00:11:13,120
an additional an additional complexity

285
00:11:11,839 --> 00:11:16,720
and it doesn't really provide the

286
00:11:13,120 --> 00:11:19,760
solution for for rtp and we'll see later

287
00:11:16,720 --> 00:11:22,399
um a little bit what um

288
00:11:19,760 --> 00:11:24,079
rosenberg has been proposing recently in

289
00:11:22,399 --> 00:11:26,399
relation to this

290
00:11:24,079 --> 00:11:28,079
so in general we have a lack of native

291
00:11:26,399 --> 00:11:30,560
components for voip in

292
00:11:28,079 --> 00:11:32,079
in cloud infrastructure and in

293
00:11:30,560 --> 00:11:33,518
particular we don't have what we would

294
00:11:32,079 --> 00:11:36,079
like to have which is

295
00:11:33,519 --> 00:11:38,160
basically just a sip load balancer so

296
00:11:36,079 --> 00:11:38,880
what typically happens is that you you

297
00:11:38,160 --> 00:11:40,480
talk with

298
00:11:38,880 --> 00:11:43,040
people in your team and they say well

299
00:11:40,480 --> 00:11:45,920
okay just use a load balancer just pick

300
00:11:43,040 --> 00:11:47,839
up a load balancer but then

301
00:11:45,920 --> 00:11:49,120
i'm having these conversations over and

302
00:11:47,839 --> 00:11:51,040
over this is

303
00:11:49,120 --> 00:11:52,160
this is just doesn't work so first of

304
00:11:51,040 --> 00:11:55,439
all aws

305
00:11:52,160 --> 00:11:58,240
elastic load balancer work only for http

306
00:11:55,440 --> 00:11:59,040
so the network load balancer are are

307
00:11:58,240 --> 00:12:00,639
very nice and

308
00:11:59,040 --> 00:12:03,199
and they are powerful but at the same

309
00:12:00,639 --> 00:12:04,880
time first of all for tcp and tls which

310
00:12:03,200 --> 00:12:07,760
is the best scenario

311
00:12:04,880 --> 00:12:09,600
they are based on on the stream so they

312
00:12:07,760 --> 00:12:11,680
they don't do load balancing they do

313
00:12:09,600 --> 00:12:12,480
stream balancing between a source of the

314
00:12:11,680 --> 00:12:15,439
stream

315
00:12:12,480 --> 00:12:16,480
and a target group and for udp it just

316
00:12:15,440 --> 00:12:19,200
doesn't

317
00:12:16,480 --> 00:12:20,160
it just doesn't work we will see quickly

318
00:12:19,200 --> 00:12:22,880
an example

319
00:12:20,160 --> 00:12:25,519
and the same can be can be exactly say

320
00:12:22,880 --> 00:12:28,959
at this level of abstraction with the

321
00:12:25,519 --> 00:12:32,079
google cloud platform

322
00:12:28,959 --> 00:12:32,719
um so just to give an example so as long

323
00:12:32,079 --> 00:12:35,120
as you have

324
00:12:32,720 --> 00:12:35,760
udp traffic coming in if you use just an

325
00:12:35,120 --> 00:12:38,800
aws

326
00:12:35,760 --> 00:12:39,839
and lb it will choose one target and

327
00:12:38,800 --> 00:12:42,160
will

328
00:12:39,839 --> 00:12:43,519
root the requests to that target but

329
00:12:42,160 --> 00:12:46,639
also it will root back

330
00:12:43,519 --> 00:12:49,200
the responses which is very useful but

331
00:12:46,639 --> 00:12:51,360
if the call is long enough that is there

332
00:12:49,200 --> 00:12:52,000
are requests from the server like a

333
00:12:51,360 --> 00:12:54,560
reinvite

334
00:12:52,000 --> 00:12:56,560
or respond or a buy from the server

335
00:12:54,560 --> 00:12:57,599
after some time you may end up in the in

336
00:12:56,560 --> 00:13:01,199
the

337
00:12:57,600 --> 00:13:03,279
scenario on on the right where

338
00:13:01,200 --> 00:13:04,720
there's no more trapped connection in

339
00:13:03,279 --> 00:13:06,880
the load balancer and the

340
00:13:04,720 --> 00:13:08,000
basically the requests go directly from

341
00:13:06,880 --> 00:13:11,680
the target

342
00:13:08,000 --> 00:13:13,600
to the client and it's more likely

343
00:13:11,680 --> 00:13:17,279
than not the the client will not even

344
00:13:13,600 --> 00:13:20,880
accept those those packages

345
00:13:17,279 --> 00:13:22,320
um so i was of course we've been reading

346
00:13:20,880 --> 00:13:25,200
during these months and we were

347
00:13:22,320 --> 00:13:26,880
looking at the suggestions and

348
00:13:25,200 --> 00:13:28,320
recommendations and then

349
00:13:26,880 --> 00:13:31,279
i don't know you can pick up for example

350
00:13:28,320 --> 00:13:33,120
this aws white paper about

351
00:13:31,279 --> 00:13:34,399
the all the solutions for real-time

352
00:13:33,120 --> 00:13:36,399
communication then

353
00:13:34,399 --> 00:13:38,399
you start getting more and more excited

354
00:13:36,399 --> 00:13:41,279
as you read but then you find

355
00:13:38,399 --> 00:13:43,440
this eventually when you when you need

356
00:13:41,279 --> 00:13:44,720
to find a real solution for sip networks

357
00:13:43,440 --> 00:13:47,279
you find something like this

358
00:13:44,720 --> 00:13:48,000
that says if you really want to do level

359
00:13:47,279 --> 00:13:50,480
four

360
00:13:48,000 --> 00:13:51,199
load balancing and udp is involved and

361
00:13:50,480 --> 00:13:53,839
in your

362
00:13:51,199 --> 00:13:56,000
zip then you need to search for an

363
00:13:53,839 --> 00:13:58,639
application in the marketplace basically

364
00:13:56,000 --> 00:13:59,360
and use it which is not what we want

365
00:13:58,639 --> 00:14:01,680
because

366
00:13:59,360 --> 00:14:02,639
more or less it's what we are all

367
00:14:01,680 --> 00:14:06,319
redesigning

368
00:14:02,639 --> 00:14:07,040
each one of one in our own in our own

369
00:14:06,320 --> 00:14:10,079
case

370
00:14:07,040 --> 00:14:10,480
this is the media i'm going to to cover

371
00:14:10,079 --> 00:14:13,680
it

372
00:14:10,480 --> 00:14:16,240
not uh not this one and not debug

373
00:14:13,680 --> 00:14:18,239
so this is part of a bigger a bigger

374
00:14:16,240 --> 00:14:19,360
conversation so as we said there's no

375
00:14:18,240 --> 00:14:21,839
interconnecting

376
00:14:19,360 --> 00:14:22,880
the no standard interconnection with

377
00:14:21,839 --> 00:14:25,839
with clouds

378
00:14:22,880 --> 00:14:27,120
so and these are the the workarounds

379
00:14:25,839 --> 00:14:28,880
that we see today

380
00:14:27,120 --> 00:14:30,560
everybody is rebuilding their own load

381
00:14:28,880 --> 00:14:32,000
balancer so we are not doing a common

382
00:14:30,560 --> 00:14:34,479
work from this point of view

383
00:14:32,000 --> 00:14:35,440
of course we can use camellia we can use

384
00:14:34,480 --> 00:14:38,800
open sips

385
00:14:35,440 --> 00:14:42,720
or dracti or other solutions then we are

386
00:14:38,800 --> 00:14:44,399
more or less duplicating the work and

387
00:14:42,720 --> 00:14:46,000
there are still around drain scripts

388
00:14:44,399 --> 00:14:50,079
there's nothing automatic

389
00:14:46,000 --> 00:14:53,600
in the in the uh in the infrastructure

390
00:14:50,079 --> 00:14:55,839
themselves and so quickly to conclude uh

391
00:14:53,600 --> 00:14:57,839
if you take a look at this proposal this

392
00:14:55,839 --> 00:14:59,360
is a proposal for changing the way

393
00:14:57,839 --> 00:15:03,360
trunking is made

394
00:14:59,360 --> 00:15:06,160
in between voip providers

395
00:15:03,360 --> 00:15:07,600
it doesn't cover this client to server

396
00:15:06,160 --> 00:15:10,079
communication but

397
00:15:07,600 --> 00:15:12,079
in our opinion it can it can be extended

398
00:15:10,079 --> 00:15:15,839
to cover that and basically it's

399
00:15:12,079 --> 00:15:18,880
a way of setting up trunks using http

400
00:15:15,839 --> 00:15:19,920
3 and also having the media flowing

401
00:15:18,880 --> 00:15:22,639
through

402
00:15:19,920 --> 00:15:23,680
parallel quick connections rather than

403
00:15:22,639 --> 00:15:25,600
using rtp

404
00:15:23,680 --> 00:15:28,239
so this could be something that at

405
00:15:25,600 --> 00:15:31,279
community level we can

406
00:15:28,240 --> 00:15:35,440
we we we can discuss so just

407
00:15:31,279 --> 00:15:36,240
very very quickly uh it can rtp just as

408
00:15:35,440 --> 00:15:39,519
an example

409
00:15:36,240 --> 00:15:41,759
do are old at the same time even webrtc

410
00:15:39,519 --> 00:15:44,800
is dragging more and more

411
00:15:41,759 --> 00:15:47,600
usage of these protocols because they

412
00:15:44,800 --> 00:15:50,399
they made the bridging between all the

413
00:15:47,600 --> 00:15:53,680
new webrtc applications that are

414
00:15:50,399 --> 00:15:56,639
being designed and the good old pstn

415
00:15:53,680 --> 00:15:58,719
world so for the long term what we would

416
00:15:56,639 --> 00:16:00,160
like to have is a voip load balancer a

417
00:15:58,720 --> 00:16:03,279
concept that can

418
00:16:00,160 --> 00:16:06,959
scale up internally that is

419
00:16:03,279 --> 00:16:10,000
aware of the target servers

420
00:16:06,959 --> 00:16:10,880
that can distribute calls and proper

421
00:16:10,000 --> 00:16:14,639
managing

422
00:16:10,880 --> 00:16:17,920
the dialogues and

423
00:16:14,639 --> 00:16:19,680
in the voip sessions avoiding

424
00:16:17,920 --> 00:16:21,680
vendor lock-ins so we can move more

425
00:16:19,680 --> 00:16:22,560
easily from a cloud provider to another

426
00:16:21,680 --> 00:16:26,160
and have some

427
00:16:22,560 --> 00:16:37,279
best practices and possibly refine the

428
00:16:26,160 --> 00:16:39,519
other protocols and that's all

429
00:16:37,279 --> 00:16:40,639
yeah thank you thank you maybe we have

430
00:16:39,519 --> 00:16:45,519
time for one question

431
00:16:40,639 --> 00:16:45,519
until it's all set up one question

432
00:16:47,600 --> 00:16:51,839
no question

433
00:16:52,880 --> 00:17:06,959
okay okay thank you thanks

434
00:17:04,880 --> 00:17:06,959
you

