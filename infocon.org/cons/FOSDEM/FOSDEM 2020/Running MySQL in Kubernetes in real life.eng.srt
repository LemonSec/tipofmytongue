1
00:00:04,540 --> 00:00:10,860
I would like to thank you all for coming

2
00:00:08,440 --> 00:00:13,450
amazing how many people just showed up I

3
00:00:10,860 --> 00:00:18,970
guess everybody is interested in running

4
00:00:13,450 --> 00:00:20,140
my sequel and kubernetes that is

5
00:00:18,970 --> 00:00:22,479
unfortunate

6
00:00:20,140 --> 00:00:28,590
does this help I can try a bit louder

7
00:00:22,480 --> 00:00:31,720
but I'm not a very loud person good or

8
00:00:28,590 --> 00:00:37,090
okay so I just have to try yelling at

9
00:00:31,720 --> 00:00:39,160
you yes great where was I I want to talk

10
00:00:37,090 --> 00:00:46,840
about running my sequel and kubernetes

11
00:00:39,160 --> 00:00:50,050
and just before we get to that my name

12
00:00:46,840 --> 00:00:52,180
is Samuel rose I work at percona as a

13
00:00:50,050 --> 00:00:55,660
support engineer been doing that since

14
00:00:52,180 --> 00:01:01,410
last April would you mind not leaning on

15
00:00:55,660 --> 00:01:01,410
the lights which kind of confusing me I

16
00:01:01,829 --> 00:01:07,360
have been working with all sorts of open

17
00:01:05,049 --> 00:01:12,460
source technologies since well almost

18
00:01:07,360 --> 00:01:14,500
all of my career since 1995 or so I got

19
00:01:12,460 --> 00:01:18,130
in touch with my sequel for the first

20
00:01:14,500 --> 00:01:24,310
time pretty much when it became

21
00:01:18,130 --> 00:01:26,860
available around 96 97 and yeah I think

22
00:01:24,310 --> 00:01:32,740
that's enough about me we want to talk

23
00:01:26,860 --> 00:01:35,979
about something more interesting what we

24
00:01:32,740 --> 00:01:38,199
are going to cover is what would be the

25
00:01:35,979 --> 00:01:42,940
point of putting my sequel on kubernetes

26
00:01:38,200 --> 00:01:49,119
and how would we get started doing that

27
00:01:42,940 --> 00:01:52,240
and as a support engineer I just find

28
00:01:49,119 --> 00:01:56,700
backups and restoring super interesting

29
00:01:52,240 --> 00:01:56,699
so I want to talk to you about that and

30
00:01:57,000 --> 00:02:03,159
scaling a database up and down while

31
00:02:00,369 --> 00:02:06,780
it's running how that would work when

32
00:02:03,159 --> 00:02:06,780
running my sequel on kubernetes

33
00:02:08,959 --> 00:02:21,480
do even more yeah but I am and I'm just

34
00:02:19,319 --> 00:02:24,208
a quiet person sorry about that maybe

35
00:02:21,480 --> 00:02:27,238
come closer if you can't hear me and

36
00:02:24,209 --> 00:02:33,739
finally I want to talk a bit about

37
00:02:27,239 --> 00:02:36,780
monitoring my my sequel in kubernetes so

38
00:02:33,739 --> 00:02:39,659
actually before explaining what I think

39
00:02:36,780 --> 00:02:42,959
is the point I would like to ask who of

40
00:02:39,659 --> 00:02:44,608
you is using kubernetes I don't mean for

41
00:02:42,959 --> 00:02:48,060
running database but for running

42
00:02:44,609 --> 00:02:51,269
anything at all like applications or

43
00:02:48,060 --> 00:02:55,530
other stuff you might be roughly Hulk

44
00:02:51,269 --> 00:02:57,659
ish and follow-up question who is

45
00:02:55,530 --> 00:03:05,400
actually using Cooper native for running

46
00:02:57,659 --> 00:03:09,709
databases see about five ish hands good

47
00:03:05,400 --> 00:03:09,709
it's to be honest it's what I expected

48
00:03:10,609 --> 00:03:19,139
so the point in my opinion is like we

49
00:03:16,590 --> 00:03:21,989
just saw a lot a lot of you are using

50
00:03:19,139 --> 00:03:23,879
kubernetes for on your applications but

51
00:03:21,989 --> 00:03:28,139
not putting your databases in there but

52
00:03:23,879 --> 00:03:30,448
it could make sense to run your database

53
00:03:28,139 --> 00:03:33,870
on the same infrastructure on the same

54
00:03:30,449 --> 00:03:37,290
stack as the application deployed both

55
00:03:33,870 --> 00:03:42,209
together keep it simple and it can be

56
00:03:37,290 --> 00:03:44,489
simple like I guess the ones who did not

57
00:03:42,209 --> 00:03:47,099
raise their hand a moment ago have the

58
00:03:44,489 --> 00:03:50,040
databases on dedicated machines or on

59
00:03:47,099 --> 00:03:55,459
dedicated virtual machines and those

60
00:03:50,040 --> 00:03:59,578
make their special care and feeding and

61
00:03:55,459 --> 00:04:04,379
yeah maybe we can make it simpler by

62
00:03:59,579 --> 00:04:08,359
putting both in one place kubernetes

63
00:04:04,379 --> 00:04:09,709
is really good at resource allocation

64
00:04:08,359 --> 00:04:13,379
right

65
00:04:09,709 --> 00:04:18,810
you can configure limits on this

66
00:04:13,379 --> 00:04:20,519
database may use 1.3 CPUs and 1 gigabyte

67
00:04:18,810 --> 00:04:25,099
of RAM or whatever

68
00:04:20,519 --> 00:04:28,280
you can also configure current ease this

69
00:04:25,099 --> 00:04:32,240
database will always get at least four

70
00:04:28,280 --> 00:04:35,729
CPU and you can configure first limits

71
00:04:32,240 --> 00:04:38,069
which ya don't want to get too much into

72
00:04:35,729 --> 00:04:42,419
details about what kubernetes can do but

73
00:04:38,069 --> 00:04:44,599
those would be how do you say yeah

74
00:04:42,419 --> 00:04:47,580
good things to have could make

75
00:04:44,599 --> 00:04:52,020
management more oh yeah creative

76
00:04:47,580 --> 00:04:57,680
interesting and another cool thing about

77
00:04:52,020 --> 00:05:00,150
kubernetes is affinity anti affinity say

78
00:04:57,680 --> 00:05:02,699
you have a database cluster you don't

79
00:05:00,150 --> 00:05:05,250
ever want to database cluster notes on

80
00:05:02,699 --> 00:05:07,470
one physical hardware you can tell

81
00:05:05,250 --> 00:05:11,490
co-panelist make sure these two ports

82
00:05:07,470 --> 00:05:13,889
never run on the same server or since we

83
00:05:11,490 --> 00:05:17,550
will be I'm spoiling here we will be

84
00:05:13,889 --> 00:05:21,900
using cholera replication here you could

85
00:05:17,550 --> 00:05:24,960
configure kubernetes to keep all nodes

86
00:05:21,900 --> 00:05:27,960
of a cluster in one availability zone to

87
00:05:24,960 --> 00:05:29,818
keep cholera happy but still on separate

88
00:05:27,960 --> 00:05:32,969
hardware you can do all that in Cooper

89
00:05:29,819 --> 00:05:36,750
native so yeah lots of possibilities

90
00:05:32,969 --> 00:05:39,960
there and kubernetes

91
00:05:36,750 --> 00:05:44,430
is really good at scaling things up and

92
00:05:39,960 --> 00:05:47,960
down I will show you in a bit and there

93
00:05:44,430 --> 00:05:52,349
is even an auto scaling in Cooper netis

94
00:05:47,960 --> 00:05:58,130
mmm try it out before using it on your

95
00:05:52,349 --> 00:06:00,900
database but it is possible and finally

96
00:05:58,130 --> 00:06:03,630
automation that's kind of what

97
00:06:00,900 --> 00:06:07,349
kubernetes was made for orchestrating

98
00:06:03,630 --> 00:06:11,389
automating your things and we can

99
00:06:07,349 --> 00:06:11,389
actually use that for our databases

100
00:06:12,740 --> 00:06:20,909
actually one more question

101
00:06:15,620 --> 00:06:25,770
who thinks kubernetes is complicated no

102
00:06:20,909 --> 00:06:26,889
I've been you know maybe half or almost

103
00:06:25,770 --> 00:06:29,859
health

104
00:06:26,889 --> 00:06:31,870
there is a learning curve I admit I'm

105
00:06:29,860 --> 00:06:34,599
far from an expert but you can actually

106
00:06:31,870 --> 00:06:36,509
get used to it pretty quickly and it

107
00:06:34,599 --> 00:06:42,759
starts to make sense at some point I

108
00:06:36,509 --> 00:06:45,969
promise and actually I'm going to say

109
00:06:42,759 --> 00:06:52,319
running my sequel on kubernetes can be

110
00:06:45,969 --> 00:06:55,960
surprisingly easy you will see so

111
00:06:52,319 --> 00:07:00,789
getting started how would we go about

112
00:06:55,960 --> 00:07:04,270
getting started well as I spoke with one

113
00:07:00,789 --> 00:07:06,550
of you earlier you can start some puts

114
00:07:04,270 --> 00:07:09,779
in kubernetes and fight some scripts for

115
00:07:06,550 --> 00:07:12,990
setting up replication and it may work

116
00:07:09,779 --> 00:07:16,240
but it can also be pretty complex and

117
00:07:12,990 --> 00:07:20,849
it's not fun and I have done did this

118
00:07:16,240 --> 00:07:24,580
and you have done this and yeah but

119
00:07:20,849 --> 00:07:28,748
there is a piece of software that can

120
00:07:24,580 --> 00:07:32,409
make it fun a lot more fun and that is

121
00:07:28,749 --> 00:07:33,520
called the percona kubernetes operator

122
00:07:32,409 --> 00:07:36,250
for percona

123
00:07:33,520 --> 00:07:40,120
extra DP cluster now try saying that

124
00:07:36,250 --> 00:07:42,610
quickly since I absolutely cannot say

125
00:07:40,120 --> 00:07:45,279
that quickly I'm just going to call it

126
00:07:42,610 --> 00:07:47,379
the operator and if I'm talking about

127
00:07:45,279 --> 00:07:51,039
the percona xrdp cluster then I'm just

128
00:07:47,379 --> 00:07:53,289
going to say Exe anything else is yeah

129
00:07:51,039 --> 00:07:55,030
taking too long we only have 20 minutes

130
00:07:53,289 --> 00:07:56,938
after all

131
00:07:55,030 --> 00:08:00,250
[Music]

132
00:07:56,939 --> 00:08:03,789
so yeah the operator it's free open

133
00:08:00,250 --> 00:08:10,149
source and you can clone it from github

134
00:08:03,789 --> 00:08:13,270
and get going easy what is an operator

135
00:08:10,149 --> 00:08:17,199
just very shortly with an operator you

136
00:08:13,270 --> 00:08:20,799
can basically extend kubernetes you can

137
00:08:17,199 --> 00:08:25,449
define the so-called custom resources

138
00:08:20,800 --> 00:08:27,279
and in our example a database is a

139
00:08:25,449 --> 00:08:29,729
custom resource or a cluster of

140
00:08:27,279 --> 00:08:29,729
databases

141
00:08:32,669 --> 00:08:42,478
so the operator deploys pericana extra

142
00:08:38,799 --> 00:08:46,508
TP clusters like I said a PXE I think

143
00:08:42,479 --> 00:08:49,779
most of you have heard of PXE so I'm not

144
00:08:46,509 --> 00:08:52,000
actually getting into too much detail

145
00:08:49,779 --> 00:08:53,949
there but more free and open source I

146
00:08:52,000 --> 00:08:57,310
obviously would not talk about anything

147
00:08:53,949 --> 00:09:00,130
else at first them with the perk

148
00:08:57,310 --> 00:09:05,018
owner/operator you get Percona server

149
00:09:00,130 --> 00:09:07,029
for my sequel 5.7 there is no 8o yet we

150
00:09:05,019 --> 00:09:11,040
are working on it there will be one at

151
00:09:07,029 --> 00:09:11,040
some point but I cannot tell you when

152
00:09:12,180 --> 00:09:17,949
and yeah requirements for running my

153
00:09:15,040 --> 00:09:21,160
sequel on kubernetes a kubernetes

154
00:09:17,949 --> 00:09:24,370
cluster is required can't be kubernetes

155
00:09:21,160 --> 00:09:27,009
engine can be open shift was fine too

156
00:09:24,370 --> 00:09:28,930
there are some version constraints which

157
00:09:27,009 --> 00:09:31,360
I did not write down but you will find

158
00:09:28,930 --> 00:09:34,388
them in the documentation or if you just

159
00:09:31,360 --> 00:09:38,380
want to try this out you can get it up

160
00:09:34,389 --> 00:09:41,230
and running in mini cube and if you have

161
00:09:38,380 --> 00:09:43,750
mini cube set up I promise you can have

162
00:09:41,230 --> 00:09:49,209
your database running in less than half

163
00:09:43,750 --> 00:09:51,519
an hour in kubernetes so yeah I think I

164
00:09:49,209 --> 00:09:54,790
mentioned that you can get the operator

165
00:09:51,519 --> 00:10:00,069
from github clone it you deploy a couple

166
00:09:54,790 --> 00:10:03,730
of files and you will have your first

167
00:10:00,069 --> 00:10:08,500
database running in kubernetes is this

168
00:10:03,730 --> 00:10:12,610
readable at all I guess in the front row

169
00:10:08,500 --> 00:10:15,339
maybe I hope I was going to do this life

170
00:10:12,610 --> 00:10:17,740
but somebody told me to not rely on the

171
00:10:15,339 --> 00:10:21,250
internet here and turns out my old

172
00:10:17,740 --> 00:10:24,730
laptop doesn't handle lots of lots of

173
00:10:21,250 --> 00:10:26,529
kubernetes clusters not very well so we

174
00:10:24,730 --> 00:10:28,870
get screenshots today I guess I could

175
00:10:26,529 --> 00:10:32,279
have selected better colors sorry about

176
00:10:28,870 --> 00:10:32,279
that it looked fine on my screen

177
00:10:32,970 --> 00:10:42,889
the thing with kubernetes is cube GTL

178
00:10:38,109 --> 00:10:48,319
kubernetes control is what you used to

179
00:10:42,889 --> 00:10:53,029
yeah control things we apply the so

180
00:10:48,319 --> 00:10:57,289
called bundle Jamal which came with from

181
00:10:53,029 --> 00:11:00,729
the PDF repository we cloned and we

182
00:10:57,289 --> 00:11:04,129
apply yeah to EML files like I mentioned

183
00:11:00,729 --> 00:11:09,439
bundle llamo and C are yellow CR stands

184
00:11:04,129 --> 00:11:14,059
for custom resource and that file looks

185
00:11:09,439 --> 00:11:19,969
terrible on the screen I promise next

186
00:11:14,059 --> 00:11:22,909
time I will make black on white the

187
00:11:19,970 --> 00:11:25,789
thing is you can define name for your

188
00:11:22,909 --> 00:11:28,429
cluster size for your cluster which

189
00:11:25,789 --> 00:11:31,249
reminds me the slides are of course in

190
00:11:28,429 --> 00:11:33,049
the FOSDEM program so you can download

191
00:11:31,249 --> 00:11:35,239
them there and look at them on your

192
00:11:33,049 --> 00:11:39,348
phone so that might help might make

193
00:11:35,239 --> 00:11:42,979
these more readable define the size of

194
00:11:39,349 --> 00:11:45,769
your cluster what how much memory your

195
00:11:42,979 --> 00:11:48,939
cluster nodes are getting limits for

196
00:11:45,769 --> 00:11:52,069
those what kind of disk SSD disk here

197
00:11:48,939 --> 00:11:54,879
which size of six gigabytes you can

198
00:11:52,069 --> 00:11:59,449
define a lot of things in the CR

199
00:11:54,879 --> 00:12:02,419
document a small sample of that you

200
00:11:59,449 --> 00:12:06,608
apply that after modifying it and you

201
00:12:02,419 --> 00:12:10,939
wait a bit and you do keep CTL get ports

202
00:12:06,609 --> 00:12:15,199
to see what's running so the operator

203
00:12:10,939 --> 00:12:16,939
went and started 3 proxy sequel puts for

204
00:12:15,199 --> 00:12:21,289
us because that's what I can't be good

205
00:12:16,939 --> 00:12:24,618
and three PXE ports and the cluster

206
00:12:21,289 --> 00:12:27,889
operator itself is running actually I

207
00:12:24,619 --> 00:12:30,859
see the last proxy sequel put is still

208
00:12:27,889 --> 00:12:37,279
pending but it will be started at some

209
00:12:30,859 --> 00:12:41,659
point so that's how easy it was to have

210
00:12:37,279 --> 00:12:44,629
proxy sequel and Birkenau server exe

211
00:12:41,659 --> 00:12:48,200
running in copernicus deploy two files

212
00:12:44,629 --> 00:12:52,890
assuming you have a working cluster

213
00:12:48,200 --> 00:12:55,440
the operator also sets up a few Koopa

214
00:12:52,890 --> 00:12:57,569
needed services I guess for people who

215
00:12:55,440 --> 00:13:04,020
have not had exposure to kubernetes a

216
00:12:57,570 --> 00:13:06,750
service doesn't mean a lot but what you

217
00:13:04,020 --> 00:13:08,370
need to know is we have our cluster 1

218
00:13:06,750 --> 00:13:12,390
which is what I named my cluster of

219
00:13:08,370 --> 00:13:21,170
proxy sequel it has an IP I can point my

220
00:13:12,390 --> 00:13:23,510
applications at that at that service and

221
00:13:21,170 --> 00:13:25,740
my application will actually work

222
00:13:23,510 --> 00:13:27,890
assuming it's running in the same

223
00:13:25,740 --> 00:13:31,650
company this cluster can reach the

224
00:13:27,890 --> 00:13:34,110
service just to demonstrate that it

225
00:13:31,650 --> 00:13:37,350
works which I guess you cannot see very

226
00:13:34,110 --> 00:13:40,170
well I started out my sequel client

227
00:13:37,350 --> 00:13:42,870
inside the cluster pointed it at the

228
00:13:40,170 --> 00:13:46,890
cluster 1 proxy sequel created a

229
00:13:42,870 --> 00:13:50,130
database and table and it just works

230
00:13:46,890 --> 00:13:53,280
proxy sequel does it's magic sends my

231
00:13:50,130 --> 00:13:58,260
connection to where it belongs and I

232
00:13:53,280 --> 00:14:01,709
have my sequel in kubernetes looks

233
00:13:58,260 --> 00:14:06,569
simple doesn't it or does somebody not

234
00:14:01,710 --> 00:14:10,110
agree everybody agrees fantastic so I

235
00:14:06,570 --> 00:14:12,390
told you I promised to talk about

236
00:14:10,110 --> 00:14:17,040
backups because I find backups

237
00:14:12,390 --> 00:14:19,230
interesting so the operator actually

238
00:14:17,040 --> 00:14:22,469
offers us a way to make back take

239
00:14:19,230 --> 00:14:25,200
backups you get to backup destinations

240
00:14:22,470 --> 00:14:29,340
out of box you can send your backups to

241
00:14:25,200 --> 00:14:34,260
an s3 compatible storage or you can use

242
00:14:29,340 --> 00:14:35,190
a competitor's persistent volume you

243
00:14:34,260 --> 00:14:38,310
just

244
00:14:35,190 --> 00:14:41,040
in the CR custom resource Gemmell you

245
00:14:38,310 --> 00:14:43,489
can define a that looks much nicer than

246
00:14:41,040 --> 00:14:48,750
the previous inserts just define a

247
00:14:43,490 --> 00:14:50,400
schedule like a cron job tell it what

248
00:14:48,750 --> 00:14:59,040
should be backed up where should the

249
00:14:50,400 --> 00:15:03,290
backups go easy and if you happen to

250
00:14:59,040 --> 00:15:07,910
think of taking a backup on demand just

251
00:15:03,290 --> 00:15:13,050
apply a file like this to the operator

252
00:15:07,910 --> 00:15:16,560
says go and create a backup called

253
00:15:13,050 --> 00:15:20,520
backup one from cluster one store it on

254
00:15:16,560 --> 00:15:26,880
my kubernetes persistent volume apply

255
00:15:20,520 --> 00:15:32,610
that and wait a bit and run keep CTL get

256
00:15:26,880 --> 00:15:35,400
PXE backups and we will see my backup

257
00:15:32,610 --> 00:15:39,840
has been created dr. ten minutes

258
00:15:35,400 --> 00:15:45,090
the six hours old whatever backups

259
00:15:39,840 --> 00:15:49,500
happened yeah super easily so how do we

260
00:15:45,090 --> 00:15:53,130
restore a backup almost as easy when we

261
00:15:49,500 --> 00:15:56,880
clone the repository we got a script

262
00:15:53,130 --> 00:16:01,130
called copy backup top SH think what

263
00:15:56,880 --> 00:16:05,070
that does is pretty obvious we tell it

264
00:16:01,130 --> 00:16:08,970
which backup we want backup one is from

265
00:16:05,070 --> 00:16:13,380
that get PXE backups output we tell it

266
00:16:08,970 --> 00:16:16,380
where to put the backup and we wait a

267
00:16:13,380 --> 00:16:18,330
bit and we have a local copy of the

268
00:16:16,380 --> 00:16:21,180
backup and the script actually tells me

269
00:16:18,330 --> 00:16:22,940
which commands to run to start a local

270
00:16:21,180 --> 00:16:26,310
instance with that backup

271
00:16:22,940 --> 00:16:29,000
so I can do whatever I want with my pack

272
00:16:26,310 --> 00:16:33,500
up like verify it's healthy

273
00:16:29,000 --> 00:16:33,500
use it for whatever you do with backups

274
00:16:36,139 --> 00:16:44,190
yeah scaling up scaling down is what I

275
00:16:40,139 --> 00:16:48,089
promise to tell you about scaling up

276
00:16:44,190 --> 00:16:50,310
database cluster is traditionally not

277
00:16:48,089 --> 00:16:54,089
always trivial I mean it can be if you

278
00:16:50,310 --> 00:16:56,329
have proper tooling and with kubernetes

279
00:16:54,089 --> 00:17:00,569
you basically have the proper tooling

280
00:16:56,329 --> 00:17:04,109
right there in your hands so like we

281
00:17:00,569 --> 00:17:11,399
started earlier or cluster with three

282
00:17:04,109 --> 00:17:13,678
proxies equal notes three PXE notes my

283
00:17:11,400 --> 00:17:17,579
backups are there as well let's ignore

284
00:17:13,679 --> 00:17:20,730
those I go and edit the custom resource

285
00:17:17,579 --> 00:17:26,730
ml file set the cluster size from three

286
00:17:20,730 --> 00:17:31,470
to five apply this file wait a moment

287
00:17:26,730 --> 00:17:38,160
and I have my PXE notes from zero to

288
00:17:31,470 --> 00:17:40,169
four up and running scaling a database

289
00:17:38,160 --> 00:17:43,070
cluster up in Copernicus is step

290
00:17:40,169 --> 00:17:45,299
difficult ok mmm

291
00:17:43,070 --> 00:17:49,678
kinda seems there might be a few more

292
00:17:45,299 --> 00:17:55,260
details but but in a simple case that is

293
00:17:49,679 --> 00:17:59,659
how it works and well scaling down I

294
00:17:55,260 --> 00:18:03,270
think no big surprise go back to the

295
00:17:59,659 --> 00:18:06,770
Yamal file change the cluster size apply

296
00:18:03,270 --> 00:18:10,379
the foil and we see kubernetes has

297
00:18:06,770 --> 00:18:14,070
already terminated my exe for node which

298
00:18:10,380 --> 00:18:19,770
is terminating VX III now so the cluster

299
00:18:14,070 --> 00:18:21,928
will be three notes again and we have

300
00:18:19,770 --> 00:18:24,840
five minutes time which is perfect

301
00:18:21,929 --> 00:18:28,860
because I only have one more topic left

302
00:18:24,840 --> 00:18:31,949
to pretty explain about how would we go

303
00:18:28,860 --> 00:18:35,178
and monitor our database or PXE cluster

304
00:18:31,950 --> 00:18:35,179
running in kubernetes

305
00:18:36,540 --> 00:18:43,899
we could use Percona monitoring and

306
00:18:39,670 --> 00:18:49,330
management or pmm for short another yeah

307
00:18:43,900 --> 00:18:51,700
free open-source piece of software it's

308
00:18:49,330 --> 00:18:57,610
built on prefer narpro materials click

309
00:18:51,700 --> 00:19:00,850
house you can use it to monitor not only

310
00:18:57,610 --> 00:19:04,199
my sequel per corner server maria DP but

311
00:19:00,850 --> 00:19:09,669
also mono DP Postgres it's a pretty

312
00:19:04,200 --> 00:19:12,070
flexible piece of software and you can

313
00:19:09,670 --> 00:19:14,950
even install it inside your kubernetes

314
00:19:12,070 --> 00:19:16,899
cluster I mean like we just established

315
00:19:14,950 --> 00:19:22,000
running everything inside kubernetes

316
00:19:16,900 --> 00:19:26,280
could make sense you get a so called

317
00:19:22,000 --> 00:19:29,890
helm chart I will have a link for you

318
00:19:26,280 --> 00:19:33,480
the home chart helm is a package manager

319
00:19:29,890 --> 00:19:37,120
for kubernetes photos who who don't know

320
00:19:33,480 --> 00:19:40,770
it's literally two commands to install

321
00:19:37,120 --> 00:19:43,600
the package inside your kubernetes and

322
00:19:40,770 --> 00:19:45,960
it will just ya home installed pmm

323
00:19:43,600 --> 00:19:49,480
server and a couple of parameters and

324
00:19:45,960 --> 00:19:54,400
that will actually work most of the time

325
00:19:49,480 --> 00:19:58,240
and to enable monitoring on the database

326
00:19:54,400 --> 00:20:03,940
nodes you go back to the custom resource

327
00:19:58,240 --> 00:20:09,130
general set pmm enabled and you will

328
00:20:03,940 --> 00:20:14,230
have the PMM client running in a sidecar

329
00:20:09,130 --> 00:20:18,580
on or all your PXE and proxy sequel

330
00:20:14,230 --> 00:20:25,480
notes and you will have monitoring set

331
00:20:18,580 --> 00:20:27,970
up that easily and just a screenshot of

332
00:20:25,480 --> 00:20:32,730
how pmm could look like after it's been

333
00:20:27,970 --> 00:20:35,740
running for a while on my PXE cluster

334
00:20:32,730 --> 00:20:37,420
PXE is a very powerful piece of

335
00:20:35,740 --> 00:20:40,120
monitoring software but we are not going

336
00:20:37,420 --> 00:20:42,430
to get into that that would be like talk

337
00:20:40,120 --> 00:20:45,479
all three of its own I think there might

338
00:20:42,430 --> 00:20:45,480
have been one today

339
00:20:46,570 --> 00:20:52,639
but that is actually all I wanted to

340
00:20:50,600 --> 00:21:00,309
tell you about running my sequel on

341
00:20:52,640 --> 00:21:04,039
kubernetes how are we time wise perfect

342
00:21:00,309 --> 00:21:06,950
so like I said um the slides have all

343
00:21:04,039 --> 00:21:08,390
the interesting links or I find them

344
00:21:06,950 --> 00:21:15,890
interesting I hope you find them

345
00:21:08,390 --> 00:21:23,000
interesting and yeah with that any

346
00:21:15,890 --> 00:21:25,700
questions so in the front you're going

347
00:21:23,000 --> 00:21:28,250
to have problems with that do it

348
00:21:25,700 --> 00:21:32,360
do I have any problems with preemption

349
00:21:28,250 --> 00:21:35,750
of my MySQL pots which can turn into a

350
00:21:32,360 --> 00:21:45,049
problem indeed yes it's again about

351
00:21:35,750 --> 00:21:47,690
resource allocation I do not have a way

352
00:21:45,049 --> 00:21:50,779
for you to solve it off the top of my

353
00:21:47,690 --> 00:21:53,240
head we'll be happy to talk to you about

354
00:21:50,779 --> 00:21:57,649
this later on because I would need to

355
00:21:53,240 --> 00:21:59,419
think on the dissipate sorry so next

356
00:21:57,649 --> 00:22:01,689
question I think I saw the gentleman

357
00:21:59,419 --> 00:22:01,690
over there

358
00:22:05,710 --> 00:22:15,010
so so basically two questions would I

359
00:22:12,190 --> 00:22:20,340
use yeah so would I use persistent

360
00:22:15,010 --> 00:22:22,510
volumes for datasets general years and

361
00:22:20,340 --> 00:22:31,570
the next question how do I deal with

362
00:22:22,510 --> 00:22:33,760
large datasets well with running your

363
00:22:31,570 --> 00:22:39,520
stuff in Cooper netis a large state

364
00:22:33,760 --> 00:22:40,059
database can get clumsy like say it

365
00:22:39,520 --> 00:22:43,059
scelera

366
00:22:40,059 --> 00:22:46,408
so a new node joins it does a full SSD

367
00:22:43,059 --> 00:22:50,500
and if you have terabytes and petabytes

368
00:22:46,409 --> 00:22:55,059
it can take pretty long bring patients

369
00:22:50,500 --> 00:22:57,279
or bring smaller databases so yeah

370
00:22:55,059 --> 00:23:00,658
starting for example will work

371
00:22:57,279 --> 00:23:00,659
yep back there

372
00:23:15,620 --> 00:23:37,280
I'm sorry are having couple okay so how

373
00:23:33,990 --> 00:23:39,990
would the operator handle running a

374
00:23:37,280 --> 00:23:42,350
database cluster spread across multiple

375
00:23:39,990 --> 00:23:45,480
kubernetes clusters possibly

376
00:23:42,350 --> 00:23:52,320
geographically spread the operator does

377
00:23:45,480 --> 00:23:56,090
not handle that for you at all not off

378
00:23:52,320 --> 00:23:56,090
the top of my head No

379
00:24:10,970 --> 00:24:17,640
so what would be the benefit of running

380
00:24:13,620 --> 00:24:21,330
per corner it's the corner operator or

381
00:24:17,640 --> 00:24:22,770
Vitesse I feel like I'm saying I don't

382
00:24:21,330 --> 00:24:39,179
know a lot but I don't know enough about

383
00:24:22,770 --> 00:24:46,379
with us to compare how this is I haven't

384
00:24:39,180 --> 00:24:49,230
compared to - I only have used to

385
00:24:46,380 --> 00:24:52,380
Percona operator and I know it works

386
00:24:49,230 --> 00:25:02,270
pretty nicely I haven't had a chance to

387
00:24:52,380 --> 00:25:05,450
work on the on the other one so how does

388
00:25:02,270 --> 00:25:09,840
running on kubernetes affect latency of

389
00:25:05,450 --> 00:25:14,460
kata place it depends it depends a lot I

390
00:25:09,840 --> 00:25:16,530
mean if you have your nothing else

391
00:25:14,460 --> 00:25:19,320
running on your copernicus notes opening

392
00:25:16,530 --> 00:25:22,980
this itself doesn't do much there right

393
00:25:19,320 --> 00:25:25,620
I mean docker containers they are pretty

394
00:25:22,980 --> 00:25:28,830
lightweight so a few percent might be

395
00:25:25,620 --> 00:25:32,159
but try it out with your your workload

396
00:25:28,830 --> 00:25:46,439
to know for sure and tell me if it tests

397
00:25:32,160 --> 00:25:49,410
it I think I saw a question so did I do

398
00:25:46,440 --> 00:25:52,860
benchmarking of my sequel on kubernetes

399
00:25:49,410 --> 00:25:56,250
versus pure metal I have not done such

400
00:25:52,860 --> 00:25:59,610
benchmarking I mean there will be an

401
00:25:56,250 --> 00:26:01,740
overhead I don't think I have heard of

402
00:25:59,610 --> 00:26:03,570
such benchmarking either and it also

403
00:26:01,740 --> 00:26:07,590
depends a lot on what's going on in your

404
00:26:03,570 --> 00:26:13,850
cluster so it's a very open-ended

405
00:26:07,590 --> 00:26:13,850
question really try it out sorry

406
00:26:15,620 --> 00:26:24,290
well Cooper enters itself that's barely

407
00:26:18,620 --> 00:26:26,389
any load dr. das at some so I'm going to

408
00:26:24,290 --> 00:26:31,790
go with five to ten percent but please

409
00:26:26,390 --> 00:26:32,380
don't take it to the bank yet we are

410
00:26:31,790 --> 00:26:40,240
done

411
00:26:32,380 --> 00:26:40,240
[Applause]

