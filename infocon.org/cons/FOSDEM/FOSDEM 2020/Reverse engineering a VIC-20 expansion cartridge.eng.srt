1
00:00:06,879 --> 00:00:12,000
okay are we good

2
00:00:08,080 --> 00:00:15,440
to go yep good

3
00:00:12,000 --> 00:00:17,680
right good afternoon uh i'm ben dukes

4
00:00:15,440 --> 00:00:18,560
uh i work for a company called coping

5
00:00:17,680 --> 00:00:22,000
but that's not really

6
00:00:18,560 --> 00:00:24,320
important for this uh presentation

7
00:00:22,000 --> 00:00:25,198
uh i'm gonna go through a little bit

8
00:00:24,320 --> 00:00:28,160
about

9
00:00:25,199 --> 00:00:28,960
some old computer system that i used to

10
00:00:28,160 --> 00:00:31,359
have

11
00:00:28,960 --> 00:00:31,359
and

12
00:00:34,320 --> 00:00:36,960
presentation

13
00:00:40,000 --> 00:00:44,640
i'm going to be releasing this all under

14
00:00:41,600 --> 00:00:46,960
cc by sa4

15
00:00:44,640 --> 00:00:47,760
the slides will and everything else will

16
00:00:46,960 --> 00:00:51,280
be put up on

17
00:00:47,760 --> 00:00:51,519
a github account by hopefully by before

18
00:00:51,280 --> 00:00:54,559
i

19
00:00:51,520 --> 00:00:58,000
return home we'll get the brexit joke in

20
00:00:54,559 --> 00:00:59,519
first i'm going back because i am in

21
00:00:58,000 --> 00:01:02,559
mourning for our country's

22
00:00:59,520 --> 00:01:05,360
uh extremely stupid decision

23
00:01:02,559 --> 00:01:06,560
um and uh if you i'm just hoping that

24
00:01:05,360 --> 00:01:08,159
i'm going to get through

25
00:01:06,560 --> 00:01:10,720
this presentation without losing my

26
00:01:08,159 --> 00:01:14,560
voice because i haven't been very well

27
00:01:10,720 --> 00:01:14,560
no i haven't been to china recently

28
00:01:16,000 --> 00:01:19,759
so so the first first thing a little bit

29
00:01:18,960 --> 00:01:21,919
of history

30
00:01:19,759 --> 00:01:23,439
now i don't know if any anybody else

31
00:01:21,920 --> 00:01:25,840
knows about the vic-20

32
00:01:23,439 --> 00:01:27,439
it's a lesser-known brother of the

33
00:01:25,840 --> 00:01:29,600
commodore 64.

34
00:01:27,439 --> 00:01:31,360
uh it's a think it was released around

35
00:01:29,600 --> 00:01:34,320
the 1980s so

36
00:01:31,360 --> 00:01:36,000
even i was young at that point it had 20

37
00:01:34,320 --> 00:01:38,720
kilobytes of rom

38
00:01:36,000 --> 00:01:39,759
uh five and a half kilobytes of ram i've

39
00:01:38,720 --> 00:01:43,360
missed out a half

40
00:01:39,759 --> 00:01:45,520
on this and that was about 299

41
00:01:43,360 --> 00:01:47,280
when it was released i think that's

42
00:01:45,520 --> 00:01:49,679
about

43
00:01:47,280 --> 00:01:50,880
seven or eight hundred euros now

44
00:01:49,680 --> 00:01:52,479
nowadays

45
00:01:50,880 --> 00:01:54,479
so it wasn't exactly cheap for saying

46
00:01:52,479 --> 00:01:56,880
that thing um

47
00:01:54,479 --> 00:01:58,799
it was one of the first computers i had

48
00:01:56,880 --> 00:02:01,600
um obviously i didn't get it new i got

49
00:01:58,799 --> 00:02:06,880
mine secondhand because i really

50
00:02:01,600 --> 00:02:10,720
um i wasn't not quite that old

51
00:02:06,880 --> 00:02:11,519
anyway and the second thing is i came

52
00:02:10,720 --> 00:02:14,720
across

53
00:02:11,520 --> 00:02:15,680
did a bit of nostalgia searching across

54
00:02:14,720 --> 00:02:18,800
the internet a

55
00:02:15,680 --> 00:02:22,720
year or so ago and i came across uh

56
00:02:18,800 --> 00:02:24,560
a 16k ram expansion now um

57
00:02:22,720 --> 00:02:27,040
that pretty much filled out your system

58
00:02:24,560 --> 00:02:27,760
ram and i would have loved to have one

59
00:02:27,040 --> 00:02:30,879
of these

60
00:02:27,760 --> 00:02:32,720
if when i was yet much younger i had i

61
00:02:30,879 --> 00:02:33,840
think a three kilobyte ram expansion i

62
00:02:32,720 --> 00:02:36,560
really love that

63
00:02:33,840 --> 00:02:37,519
because whilst it says five and a half k

64
00:02:36,560 --> 00:02:40,800
of

65
00:02:37,519 --> 00:02:42,800
ram about three k

66
00:02:40,800 --> 00:02:44,160
by three kilobytes that is available to

67
00:02:42,800 --> 00:02:46,800
the user for programming

68
00:02:44,160 --> 00:02:47,359
by default uh the rest is used by the

69
00:02:46,800 --> 00:02:51,200
screen

70
00:02:47,360 --> 00:02:53,519
and the operating system so

71
00:02:51,200 --> 00:02:54,238
there wasn't really much much chance for

72
00:02:53,519 --> 00:02:57,680
writing

73
00:02:54,239 --> 00:02:59,200
your own code and because of the

74
00:02:57,680 --> 00:03:00,959
limitations a lot of the games would

75
00:02:59,200 --> 00:03:01,679
come on rom cartridges which would fit

76
00:03:00,959 --> 00:03:04,560
in

77
00:03:01,680 --> 00:03:05,360
to the slot which was like this edge

78
00:03:04,560 --> 00:03:09,200
connector

79
00:03:05,360 --> 00:03:09,200
which i'm assuming most people are

80
00:03:09,440 --> 00:03:16,319
familiar with so

81
00:03:13,519 --> 00:03:18,879
why does this talk exist well i said

82
00:03:16,319 --> 00:03:22,238
earlier this is my second ever computer

83
00:03:18,879 --> 00:03:24,319
and i was browsing around the

84
00:03:22,239 --> 00:03:26,400
this board i came across this upgrade

85
00:03:24,319 --> 00:03:29,280
and i was thinking

86
00:03:26,400 --> 00:03:32,159
do i have enough information from this

87
00:03:29,280 --> 00:03:36,000
to work out how it worked

88
00:03:32,159 --> 00:03:36,000
because i was actually slightly

89
00:03:36,400 --> 00:03:40,000
interested in what was going on i

90
00:03:39,040 --> 00:03:42,400
thought this was actually

91
00:03:40,000 --> 00:03:45,519
simple and i'm going to go through some

92
00:03:42,400 --> 00:03:47,680
of the technologies involved

93
00:03:45,519 --> 00:03:50,080
in the next few slides which might

94
00:03:47,680 --> 00:03:53,519
explain to people who don't know

95
00:03:50,080 --> 00:03:53,519
about the details of the hardware

96
00:03:54,239 --> 00:03:57,920
what was going on so

97
00:03:59,760 --> 00:04:02,959
there's two types of ram from this sort

98
00:04:01,920 --> 00:04:06,958
of era there's the

99
00:04:02,959 --> 00:04:09,040
static and dynamic ram um so

100
00:04:06,959 --> 00:04:11,599
nowadays it's pretty much now dynamic

101
00:04:09,040 --> 00:04:13,840
because that's the stuff that's won

102
00:04:11,599 --> 00:04:16,238
but in this this space most of the

103
00:04:13,840 --> 00:04:18,478
expansions use the static ram

104
00:04:16,238 --> 00:04:19,599
and this this one from looking at the

105
00:04:18,478 --> 00:04:22,479
picture

106
00:04:19,600 --> 00:04:23,440
was using dynamic ram and i was thinking

107
00:04:22,479 --> 00:04:27,120
that circuit looks

108
00:04:23,440 --> 00:04:27,120
a bit too simple and i'll

109
00:04:27,199 --> 00:04:33,759
go through so

110
00:04:30,479 --> 00:04:34,800
as i say two types of the ram so the

111
00:04:33,759 --> 00:04:38,080
dynamic ram was a bit

112
00:04:34,800 --> 00:04:41,600
faster but

113
00:04:38,080 --> 00:04:44,240
it comes with a couple of downsides the

114
00:04:41,600 --> 00:04:44,800
address bus is multiplex so you have to

115
00:04:44,240 --> 00:04:48,000
give it

116
00:04:44,800 --> 00:04:50,400
address in two parts um

117
00:04:48,000 --> 00:04:52,560
whereas sram just had a standard address

118
00:04:50,400 --> 00:04:56,000
bus you just gave it an address

119
00:04:52,560 --> 00:04:59,040
and i read and write dynamic

120
00:04:56,000 --> 00:05:03,600
ram requires a refresh

121
00:04:59,040 --> 00:05:07,199
so every in this case it's 128 rows

122
00:05:03,600 --> 00:05:08,560
requires one ax every single row to be

123
00:05:07,199 --> 00:05:13,120
accessed

124
00:05:08,560 --> 00:05:14,880
within a 60 so a four millisecond window

125
00:05:13,120 --> 00:05:16,960
otherwise the contents of the ram will

126
00:05:14,880 --> 00:05:20,159
start decaying

127
00:05:16,960 --> 00:05:23,599
now the bit here that i think

128
00:05:20,160 --> 00:05:26,080
made the dram more interesting to

129
00:05:23,600 --> 00:05:29,039
manufacturers is it was actually cheaper

130
00:05:26,080 --> 00:05:30,880
now i haven't got exact prices from this

131
00:05:29,039 --> 00:05:33,919
this point in time

132
00:05:30,880 --> 00:05:36,479
but it's about four or five times

133
00:05:33,919 --> 00:05:38,159
cheaper to go with the dram and when

134
00:05:36,479 --> 00:05:40,479
you're talking about

135
00:05:38,160 --> 00:05:41,919
what was about 50 or 60 dollars worth of

136
00:05:40,479 --> 00:05:45,758
memory

137
00:05:41,919 --> 00:05:48,000
spending that money on making it simpler

138
00:05:45,759 --> 00:05:50,720
but adding extra components around it

139
00:05:48,000 --> 00:05:50,720
was worth it

140
00:05:51,600 --> 00:05:55,120
um i say this is sort of a state machine

141
00:05:54,080 --> 00:05:58,159
of how you go about

142
00:05:55,120 --> 00:06:00,319
a dram access um

143
00:05:58,160 --> 00:06:01,520
i'll explain a bit more about that but

144
00:06:00,319 --> 00:06:03,919
this is obviously this is a bit

145
00:06:01,520 --> 00:06:04,639
more complicated than simple logic

146
00:06:03,919 --> 00:06:09,840
decode

147
00:06:04,639 --> 00:06:09,840
that was used on static ram

148
00:06:12,080 --> 00:06:17,520
so the vic-20 has

149
00:06:15,520 --> 00:06:19,120
a rear expansion port which is where

150
00:06:17,520 --> 00:06:21,440
this cartridge plugs in

151
00:06:19,120 --> 00:06:22,240
it's a really is a base a really simple

152
00:06:21,440 --> 00:06:26,560
extension

153
00:06:22,240 --> 00:06:28,960
of the 6502 cpu main bus

154
00:06:26,560 --> 00:06:31,680
as a brings out the eight data lines and

155
00:06:28,960 --> 00:06:34,239
13 of the 16 address

156
00:06:31,680 --> 00:06:36,639
you get the read and write there's some

157
00:06:34,240 --> 00:06:38,319
pre-decoded chip selects because

158
00:06:36,639 --> 00:06:40,240
they'd already done some of the work for

159
00:06:38,319 --> 00:06:41,039
you of working out which areas were

160
00:06:40,240 --> 00:06:44,240
being

161
00:06:41,039 --> 00:06:45,039
accessed a cpu clock which is running at

162
00:06:44,240 --> 00:06:47,600
about

163
00:06:45,039 --> 00:06:49,840
one megahertz it varied slightly

164
00:06:47,600 --> 00:06:52,400
depending whether you had a palo ntsc

165
00:06:49,840 --> 00:06:53,280
version because they used the video

166
00:06:52,400 --> 00:06:55,280
reference

167
00:06:53,280 --> 00:06:56,638
to divide down for the cpu reference

168
00:06:55,280 --> 00:06:57,919
clock um

169
00:06:56,639 --> 00:07:00,000
because they were trying to make a very

170
00:06:57,919 --> 00:07:00,560
cheap machine and there's a few other

171
00:07:00,000 --> 00:07:03,599
things like

172
00:07:00,560 --> 00:07:08,560
the soft and hard introvert

173
00:07:03,599 --> 00:07:11,759
now unlike the z80 the 6502

174
00:07:08,560 --> 00:07:13,599
doesn't have an inbuilt refresh

175
00:07:11,759 --> 00:07:15,120
at least for the z8000 there was

176
00:07:13,599 --> 00:07:17,599
actually some help for

177
00:07:15,120 --> 00:07:18,160
building dram based systems where they

178
00:07:17,599 --> 00:07:22,639
had

179
00:07:18,160 --> 00:07:25,599
a cpu refresh in there but it's a basic

180
00:07:22,639 --> 00:07:27,039
uh parallel bus in this diagram i mean

181
00:07:25,599 --> 00:07:30,880
this is a simplified

182
00:07:27,039 --> 00:07:33,440
timing diagram you get an address set up

183
00:07:30,880 --> 00:07:34,319
during the low cycle of the clock you

184
00:07:33,440 --> 00:07:37,360
get some data

185
00:07:34,319 --> 00:07:39,120
roughly in the high cycle and by the

186
00:07:37,360 --> 00:07:40,479
time it's ended this it's expected the

187
00:07:39,120 --> 00:07:42,840
data to be valid

188
00:07:40,479 --> 00:07:44,080
for read or it's been written for the

189
00:07:42,840 --> 00:07:47,359
right

190
00:07:44,080 --> 00:07:48,639
now as i say it's about one megahertz

191
00:07:47,360 --> 00:07:50,000
and this so

192
00:07:48,639 --> 00:07:53,520
we're about talking about 1000

193
00:07:50,000 --> 00:07:53,520
nanoseconds for a cycle

194
00:07:56,240 --> 00:08:03,680
and going with a

195
00:07:59,919 --> 00:08:05,680
how the dram would work is that

196
00:08:03,680 --> 00:08:07,599
you have a you start with the row

197
00:08:05,680 --> 00:08:11,199
address of the row you want

198
00:08:07,599 --> 00:08:14,400
and that's sampled roughly on the

199
00:08:11,199 --> 00:08:14,960
active edge of the raz signal a column

200
00:08:14,400 --> 00:08:18,239
address

201
00:08:14,960 --> 00:08:20,719
is again on the active edge of the

202
00:08:18,240 --> 00:08:21,759
column address and then at some point

203
00:08:20,720 --> 00:08:26,000
pretty soon after you

204
00:08:21,759 --> 00:08:29,280
you either read or write the data um

205
00:08:26,000 --> 00:08:31,520
and again just below this is a

206
00:08:29,280 --> 00:08:34,319
refresh cycle where all you need to do

207
00:08:31,520 --> 00:08:37,120
is just give the dram

208
00:08:34,320 --> 00:08:37,120
the row address

209
00:08:38,839 --> 00:08:42,719
so that's a little bit of an

210
00:08:41,440 --> 00:08:46,320
introduction about

211
00:08:42,719 --> 00:08:50,399
how the dram works let's go back to what

212
00:08:46,320 --> 00:08:51,920
i was thinking when i saw the picture

213
00:08:50,399 --> 00:08:54,240
so i'm thinking actually there's

214
00:08:51,920 --> 00:08:55,519
probably enough information from just

215
00:08:54,240 --> 00:08:59,360
looking at the picture

216
00:08:55,519 --> 00:09:01,519
to tell me roughly what's going on um

217
00:08:59,360 --> 00:09:03,440
i say it's all pretty much standard

218
00:09:01,519 --> 00:09:05,600
logic gates we're not talking

219
00:09:03,440 --> 00:09:07,519
any sort of fpga type stuff that wasn't

220
00:09:05,600 --> 00:09:10,240
available back then

221
00:09:07,519 --> 00:09:10,800
the best you'd find is programmable

222
00:09:10,240 --> 00:09:13,200
logic

223
00:09:10,800 --> 00:09:15,120
arrays that were fairly simple you're

224
00:09:13,200 --> 00:09:18,399
talking and or

225
00:09:15,120 --> 00:09:21,360
gates probably 14 cells

226
00:09:18,399 --> 00:09:24,240
and we're talking and we there's

227
00:09:21,360 --> 00:09:25,440
definitely no pll in this because

228
00:09:24,240 --> 00:09:28,080
if you're doing a state machine you

229
00:09:25,440 --> 00:09:28,480
often for modern fpga would require pll

230
00:09:28,080 --> 00:09:31,440
to get

231
00:09:28,480 --> 00:09:36,800
your 8 or 16 times clock and there's

232
00:09:31,440 --> 00:09:39,519
definitely no room for that

233
00:09:36,800 --> 00:09:40,000
um that's a quick list of what there is

234
00:09:39,519 --> 00:09:41,519
there

235
00:09:40,000 --> 00:09:43,360
i'm not going to go through it too much

236
00:09:41,519 --> 00:09:44,800
there is a counter so i'm i'm thinking

237
00:09:43,360 --> 00:09:46,480
that the first point

238
00:09:44,800 --> 00:09:48,000
the counter is probably the refresh

239
00:09:46,480 --> 00:09:49,680
counter so

240
00:09:48,000 --> 00:09:51,279
i've already got some clue as what's

241
00:09:49,680 --> 00:09:55,040
going on and there's some

242
00:09:51,279 --> 00:09:56,800
mux chips that select one of two inputs

243
00:09:55,040 --> 00:09:59,040
so i'm thinking wonderfully drawn

244
00:09:56,800 --> 00:10:01,760
diagram

245
00:09:59,040 --> 00:10:03,519
the probably the dress is coming in the

246
00:10:01,760 --> 00:10:04,079
first marks would probably select

247
00:10:03,519 --> 00:10:06,240
whether i'm

248
00:10:04,079 --> 00:10:07,680
taking the row or the column and there's

249
00:10:06,240 --> 00:10:09,839
probably another select for

250
00:10:07,680 --> 00:10:13,199
what i'm doing for the refresh and that

251
00:10:09,839 --> 00:10:16,240
gets presented to the dram

252
00:10:13,200 --> 00:10:17,680
now i'm still not sure how on earth

253
00:10:16,240 --> 00:10:18,000
they're actually working out when they

254
00:10:17,680 --> 00:10:19,519
can

255
00:10:18,000 --> 00:10:21,120
refresh because usually you would hold

256
00:10:19,519 --> 00:10:22,959
off and access

257
00:10:21,120 --> 00:10:24,959
do your refresh you can then let the

258
00:10:22,959 --> 00:10:26,239
processor back

259
00:10:24,959 --> 00:10:29,599
so i was reading through the data sheets

260
00:10:26,240 --> 00:10:31,519
and i came to realization

261
00:10:29,600 --> 00:10:33,279
the refresh cycle is only 400

262
00:10:31,519 --> 00:10:36,560
nanoseconds

263
00:10:33,279 --> 00:10:39,920
um i have a 500 nanosecond

264
00:10:36,560 --> 00:10:40,479
inactive window on the bus cycle because

265
00:10:39,920 --> 00:10:43,519
it's not

266
00:10:40,480 --> 00:10:47,279
faster it's not the fastest 6402

267
00:10:43,519 --> 00:10:49,839
you could get you could just refresh

268
00:10:47,279 --> 00:10:51,600
when it's not doing access this

269
00:10:49,839 --> 00:10:53,040
simplifies this would simplify the state

270
00:10:51,600 --> 00:10:57,040
machine

271
00:10:53,040 --> 00:10:59,199
i mean the

272
00:10:57,040 --> 00:11:01,279
problem with that is that you're going

273
00:10:59,200 --> 00:11:03,839
to use a bit more power

274
00:11:01,279 --> 00:11:05,200
but when each of the two dram chips that

275
00:11:03,839 --> 00:11:08,320
on the board are drawing

276
00:11:05,200 --> 00:11:10,720
26 milliamps in refresh and a normal

277
00:11:08,320 --> 00:11:12,000
vic-20 is drawing about 16 watts of

278
00:11:10,720 --> 00:11:13,920
power anyway

279
00:11:12,000 --> 00:11:16,640
designs are not really caring too much

280
00:11:13,920 --> 00:11:16,640
about the power

281
00:11:17,440 --> 00:11:20,480
so i've driven the new state machine so

282
00:11:19,440 --> 00:11:23,360
i know i'm now

283
00:11:20,480 --> 00:11:24,240
working out that there's a probably

284
00:11:23,360 --> 00:11:27,200
clock high

285
00:11:24,240 --> 00:11:28,079
for an access clock low do a refresh

286
00:11:27,200 --> 00:11:30,880
that will simplify

287
00:11:28,079 --> 00:11:31,359
my thing now i'm just going to skip i

288
00:11:30,880 --> 00:11:34,079
did a

289
00:11:31,360 --> 00:11:37,200
drop some schematics thinking this is

290
00:11:34,079 --> 00:11:39,680
now a fort experiment for me

291
00:11:37,200 --> 00:11:43,360
so i mean what what would i do next you

292
00:11:39,680 --> 00:11:46,560
know i could just leave this alone

293
00:11:43,360 --> 00:11:47,680
no i go on ebay so the first start of

294
00:11:46,560 --> 00:11:49,920
this madness

295
00:11:47,680 --> 00:11:53,120
is that i actually buy one i find one on

296
00:11:49,920 --> 00:11:54,719
ebay i spend about 30 euros

297
00:11:53,120 --> 00:11:56,399
take it out of its cartridge and i'll

298
00:11:54,720 --> 00:12:00,000
show you later i've got it here

299
00:11:56,399 --> 00:12:01,279
and i take photo and this is the first

300
00:12:00,000 --> 00:12:03,839
stage of actually

301
00:12:01,279 --> 00:12:04,399
a full reverse engineering of this sort

302
00:12:03,839 --> 00:12:07,440
of thing

303
00:12:04,399 --> 00:12:10,240
i've got a photo of this and i've got a

304
00:12:07,440 --> 00:12:12,560
photo of the underside of the board now

305
00:12:10,240 --> 00:12:14,480
so pretty much unfortunately you can't

306
00:12:12,560 --> 00:12:16,399
really see

307
00:12:14,480 --> 00:12:18,160
on this projector but you've got two

308
00:12:16,399 --> 00:12:21,920
dram chips

309
00:12:18,160 --> 00:12:24,000
the counter there's got this state the

310
00:12:21,920 --> 00:12:26,479
two to one muxes for the address and

311
00:12:24,000 --> 00:12:28,399
some logic

312
00:12:26,480 --> 00:12:29,920
so i can photo i can use that to look at

313
00:12:28,399 --> 00:12:32,959
the the board

314
00:12:29,920 --> 00:12:35,360
i can use a multimeter to check whether

315
00:12:32,959 --> 00:12:36,880
a pin is connected to another pin or not

316
00:12:35,360 --> 00:12:38,880
and fairly obviously the power pins are

317
00:12:36,880 --> 00:12:42,480
all connected um

318
00:12:38,880 --> 00:12:45,040
but what do i also see there's actually

319
00:12:42,480 --> 00:12:46,000
but hidden behind the capacitor that was

320
00:12:45,040 --> 00:12:48,480
in the picture here

321
00:12:46,000 --> 00:12:50,000
there's another capacitor there's

322
00:12:48,480 --> 00:12:53,360
actually

323
00:12:50,000 --> 00:12:54,639
more capacity thought now

324
00:12:53,360 --> 00:12:57,040
coming back to the fact of state

325
00:12:54,639 --> 00:12:58,880
machines actually

326
00:12:57,040 --> 00:13:01,040
resistors and capacitors make a fairly

327
00:12:58,880 --> 00:13:02,320
good delay

328
00:13:01,040 --> 00:13:04,240
um if you've done electronics you can

329
00:13:02,320 --> 00:13:04,880
use them to make delays so i can

330
00:13:04,240 --> 00:13:08,160
actually do

331
00:13:04,880 --> 00:13:11,279
a state machine by a series of delays

332
00:13:08,160 --> 00:13:13,920
so i'm very sure actually this is going

333
00:13:11,279 --> 00:13:15,439
to work quite nicely and

334
00:13:13,920 --> 00:13:18,839
i've got a really good idea now how this

335
00:13:15,440 --> 00:13:22,079
works i can actually draw a schematic

336
00:13:18,839 --> 00:13:23,279
and i can use the tools i have to

337
00:13:22,079 --> 00:13:26,399
actually trace out and

338
00:13:23,279 --> 00:13:28,880
verify what i've done

339
00:13:26,399 --> 00:13:30,399
so this is the underside of the board

340
00:13:28,880 --> 00:13:31,839
and this next part of the technique of

341
00:13:30,399 --> 00:13:35,920
reverse engineering

342
00:13:31,839 --> 00:13:39,120
is that i can draw so i can flip it over

343
00:13:35,920 --> 00:13:42,479
i can draw with marker on it saying

344
00:13:39,120 --> 00:13:46,000
what everything is the edge connector

345
00:13:42,480 --> 00:13:49,839
i actually work out definitely how it

346
00:13:46,000 --> 00:13:49,839
is all connected

347
00:13:52,720 --> 00:13:54,880
so

348
00:13:56,399 --> 00:14:01,600
i've actually gone a step further now

349
00:13:59,519 --> 00:14:03,360
so i've i actually used eagle for this

350
00:14:01,600 --> 00:14:04,480
i'm very sorry it's not an open source

351
00:14:03,360 --> 00:14:06,560
product

352
00:14:04,480 --> 00:14:07,600
um i had a few problems getting my

353
00:14:06,560 --> 00:14:08,880
eagles key cad

354
00:14:07,600 --> 00:14:13,120
conversion working that i've been

355
00:14:08,880 --> 00:14:16,240
working on um i will actually be moving

356
00:14:13,120 --> 00:14:19,600
to this so i drew it out

357
00:14:16,240 --> 00:14:22,399
i had a board i've had five boards made

358
00:14:19,600 --> 00:14:23,519
and it actually works i was quite

359
00:14:22,399 --> 00:14:25,760
impressed with that

360
00:14:23,519 --> 00:14:25,760
um

361
00:14:29,120 --> 00:14:32,560
you can very much if you can just see

362
00:14:30,720 --> 00:14:34,000
down there there is a piece of bodge

363
00:14:32,560 --> 00:14:37,359
wire

364
00:14:34,000 --> 00:14:38,399
um somehow i missed the cpu reading

365
00:14:37,360 --> 00:14:39,820
write line which is just

366
00:14:38,399 --> 00:14:43,279
fairly blooming obviously

367
00:14:39,820 --> 00:14:47,120
[Laughter]

368
00:14:43,279 --> 00:14:48,959
now i would have brought my vic-20

369
00:14:47,120 --> 00:14:50,639
along with me but unfortunately i don't

370
00:14:48,959 --> 00:14:54,160
have a power supply for

371
00:14:50,639 --> 00:14:56,240
european plugs and um i wasn't sure how

372
00:14:54,160 --> 00:14:58,399
easy it was to get get through customs

373
00:14:56,240 --> 00:14:58,399
so

374
00:14:58,639 --> 00:15:03,519
anyway so i've actually built this and

375
00:15:01,440 --> 00:15:05,760
it yeah it does work as standard so i'm

376
00:15:03,519 --> 00:15:08,160
quite amazed that something that simple

377
00:15:05,760 --> 00:15:09,839
could actually make a very good

378
00:15:08,160 --> 00:15:13,040
implementation of a state machine

379
00:15:09,839 --> 00:15:15,839
now it works

380
00:15:13,040 --> 00:15:17,360
very well because the vic-20 is slower

381
00:15:15,839 --> 00:15:20,639
if it had been

382
00:15:17,360 --> 00:15:23,199
faster you couldn't have got the refresh

383
00:15:20,639 --> 00:15:25,680
into the into the inactive part of the

384
00:15:23,199 --> 00:15:25,680
cycle

385
00:15:25,920 --> 00:15:31,439
so i was almost right on my first go i

386
00:15:30,240 --> 00:15:33,279
mean

387
00:15:31,440 --> 00:15:35,199
i if i'd had that extra component i'd

388
00:15:33,279 --> 00:15:37,519
have probably got the circuit

389
00:15:35,199 --> 00:15:39,439
initial circuit right but as i said i

390
00:15:37,519 --> 00:15:42,880
got month i've got the refresh

391
00:15:39,440 --> 00:15:44,320
thank you um i say i'm probably going to

392
00:15:42,880 --> 00:15:46,320
actually get through my time slotted a

393
00:15:44,320 --> 00:15:48,639
bit faster than i intended

394
00:15:46,320 --> 00:15:50,079
because i i forgot that my original

395
00:15:48,639 --> 00:15:53,360
presentation actually had a

396
00:15:50,079 --> 00:15:53,359
demo in it so

397
00:15:53,680 --> 00:15:59,439
as i might have said i going back to

398
00:15:56,959 --> 00:16:01,199
the earlier statement i know that this

399
00:15:59,440 --> 00:16:05,040
board works now i ended up actually

400
00:16:01,199 --> 00:16:07,519
buying two vic-20s to go with this so my

401
00:16:05,040 --> 00:16:09,920
this little um adventure in reverse

402
00:16:07,519 --> 00:16:12,000
engineering which started out as a

403
00:16:09,920 --> 00:16:13,120
fort experiment has ended up actually

404
00:16:12,000 --> 00:16:15,440
costing me

405
00:16:13,120 --> 00:16:16,320
about 100 euros of money and buying

406
00:16:15,440 --> 00:16:18,560
comparts

407
00:16:16,320 --> 00:16:19,680
because of course the first one turned

408
00:16:18,560 --> 00:16:23,199
up

409
00:16:19,680 --> 00:16:26,239
and didn't work so i got another one to

410
00:16:23,199 --> 00:16:26,240
get the other one working

411
00:16:26,880 --> 00:16:31,199
so i've gone through some of the

412
00:16:30,320 --> 00:16:35,680
techniques i

413
00:16:31,199 --> 00:16:37,279
did use now i had an actual thought of

414
00:16:35,680 --> 00:16:38,959
which would have actually saved me some

415
00:16:37,279 --> 00:16:42,240
time and money

416
00:16:38,959 --> 00:16:42,239
in the

417
00:16:42,399 --> 00:16:46,570
long in the long term i could have

418
00:16:44,320 --> 00:16:48,320
actually just simulated this

419
00:16:46,570 --> 00:16:50,399
[Music]

420
00:16:48,320 --> 00:16:52,000
i was actually so in intend on actually

421
00:16:50,399 --> 00:16:54,560
building a physical

422
00:16:52,000 --> 00:16:56,000
implementation that i forgot that

423
00:16:54,560 --> 00:16:58,479
simulators exist now

424
00:16:56,000 --> 00:16:59,040
back when i started you'd pay good money

425
00:16:58,480 --> 00:17:00,959
for

426
00:16:59,040 --> 00:17:03,279
something which would do this but this

427
00:17:00,959 --> 00:17:05,438
is actually a

428
00:17:03,279 --> 00:17:07,839
open uh not sure it's open source

429
00:17:05,439 --> 00:17:09,679
directly but this is circuit js

430
00:17:07,839 --> 00:17:11,760
and you just put your circuit in here

431
00:17:09,679 --> 00:17:13,760
and you can put

432
00:17:11,760 --> 00:17:16,959
stuff in and it will just show you a

433
00:17:13,760 --> 00:17:22,559
waveform and it's like yep that worked

434
00:17:16,959 --> 00:17:22,559
um so that was uh

435
00:17:23,439 --> 00:17:27,919
a thought which would save me some some

436
00:17:25,679 --> 00:17:27,919
time

437
00:17:30,160 --> 00:17:37,760
so i mean going forwards

438
00:17:34,480 --> 00:17:39,360
i might try and optimize the design but

439
00:17:37,760 --> 00:17:41,679
i think it's actually with the amount of

440
00:17:39,360 --> 00:17:42,959
components there it's fairly optimal

441
00:17:41,679 --> 00:17:46,000
already

442
00:17:42,960 --> 00:17:48,799
um now i was thinking

443
00:17:46,000 --> 00:17:49,840
that i said earlier that plls weren't

444
00:17:48,799 --> 00:17:51,679
really around

445
00:17:49,840 --> 00:17:55,280
now there were some chips that you could

446
00:17:51,679 --> 00:17:57,280
use for a pll and you could probably

447
00:17:55,280 --> 00:17:59,280
actually build a very simple logic based

448
00:17:57,280 --> 00:18:00,720
state machine

449
00:17:59,280 --> 00:18:03,039
whether that's worth doing or not is

450
00:18:00,720 --> 00:18:05,679
another another point of am i wasting my

451
00:18:03,039 --> 00:18:05,679
time on this

452
00:18:06,320 --> 00:18:09,760
um so

453
00:18:10,640 --> 00:18:16,559
to sort of wrap up this

454
00:18:14,080 --> 00:18:18,240
presentation i'm going to put i'm

455
00:18:16,559 --> 00:18:21,280
putting the project files

456
00:18:18,240 --> 00:18:24,640
um for the pcb the presentation

457
00:18:21,280 --> 00:18:26,160
uh the simulation um and the other

458
00:18:24,640 --> 00:18:27,440
little

459
00:18:26,160 --> 00:18:28,880
things i've used to produce the

460
00:18:27,440 --> 00:18:29,679
presentation i'm going to put those up

461
00:18:28,880 --> 00:18:33,600
on

462
00:18:29,679 --> 00:18:36,720
a github um which i've put url

463
00:18:33,600 --> 00:18:38,240
i put there um i say there's some very

464
00:18:36,720 --> 00:18:40,720
nice stuff like the um

465
00:18:38,240 --> 00:18:43,280
the waveforms i've all been done in wave

466
00:18:40,720 --> 00:18:44,160
drum which is another way of just taking

467
00:18:43,280 --> 00:18:46,559
some

468
00:18:44,160 --> 00:18:47,520
text and producing a nice diagram out of

469
00:18:46,559 --> 00:18:51,200
it

470
00:18:47,520 --> 00:18:53,600
um and

471
00:18:51,200 --> 00:18:54,640
at that point thank you very much all

472
00:18:53,600 --> 00:18:56,639
for attending

473
00:18:54,640 --> 00:18:58,880
now there's i think i've got plenty of

474
00:18:56,640 --> 00:19:02,559
time for questions

475
00:18:58,880 --> 00:19:05,200
for about 10 minutes hi um

476
00:19:02,559 --> 00:19:07,200
you've taken a really honest approach to

477
00:19:05,200 --> 00:19:08,400
reverse engineering have you considered

478
00:19:07,200 --> 00:19:11,600
taking a

479
00:19:08,400 --> 00:19:14,640
usb logic analyzer for a few euros

480
00:19:11,600 --> 00:19:16,080
and just clip it on the lines while the

481
00:19:14,640 --> 00:19:18,160
machine is running so then you could

482
00:19:16,080 --> 00:19:20,399
just so let's look at the

483
00:19:18,160 --> 00:19:22,799
the question is about putting a usb

484
00:19:20,400 --> 00:19:24,960
logic analyzer on the machine

485
00:19:22,799 --> 00:19:26,559
and using that to work out what's going

486
00:19:24,960 --> 00:19:28,320
on now i did think about that but that

487
00:19:26,559 --> 00:19:31,520
would have required me to have

488
00:19:28,320 --> 00:19:33,120
up front bought the machine which i

489
00:19:31,520 --> 00:19:35,039
wasn't intending on doing in the first

490
00:19:33,120 --> 00:19:37,439
place

491
00:19:35,039 --> 00:19:38,960
this was basically a i found this one

492
00:19:37,440 --> 00:19:39,760
evening and i thought well that looks

493
00:19:38,960 --> 00:19:43,360
simple

494
00:19:39,760 --> 00:19:45,039
how is this working so yes nowadays

495
00:19:43,360 --> 00:19:47,120
a simple logic analyzer would have

496
00:19:45,039 --> 00:19:48,480
probably given me the same thing i could

497
00:19:47,120 --> 00:19:49,199
have probably got a lot of information

498
00:19:48,480 --> 00:19:51,679
out of

499
00:19:49,200 --> 00:19:52,320
attaching a logic analyzer the real

500
00:19:51,679 --> 00:19:54,240
thing

501
00:19:52,320 --> 00:19:57,039
and actually looking at it but as soon

502
00:19:54,240 --> 00:19:59,679
as you've got that it's fairly easy with

503
00:19:57,039 --> 00:20:01,440
these sort of systems to actually just

504
00:19:59,679 --> 00:20:03,600
trace it because

505
00:20:01,440 --> 00:20:05,039
it's two layer pcbs you don't have

506
00:20:03,600 --> 00:20:07,840
anything really

507
00:20:05,039 --> 00:20:09,679
hidden within the board whereas a lot of

508
00:20:07,840 --> 00:20:10,080
complex modern systems you might have

509
00:20:09,679 --> 00:20:13,520
six

510
00:20:10,080 --> 00:20:16,480
eight ten layers and once something

511
00:20:13,520 --> 00:20:18,840
once a signal vanishes into the board

512
00:20:16,480 --> 00:20:22,320
you've lost it

513
00:20:18,840 --> 00:20:23,600
so yeah the the the vixen board is a

514
00:20:22,320 --> 00:20:27,360
switchable 16k

515
00:20:23,600 --> 00:20:28,320
ram yeah um i saw you replace the the

516
00:20:27,360 --> 00:20:32,479
original

517
00:20:28,320 --> 00:20:35,600
switches for the 3k or 8k or 16k

518
00:20:32,480 --> 00:20:37,440
with jumpers yes could you please

519
00:20:35,600 --> 00:20:38,959
maybe if we have time enough a little

520
00:20:37,440 --> 00:20:42,960
bit more how is this

521
00:20:38,960 --> 00:20:44,640
uh scheme working and why is the 3k

522
00:20:42,960 --> 00:20:46,159
okay so there's a couple of questions

523
00:20:44,640 --> 00:20:48,480
here firstly about

524
00:20:46,159 --> 00:20:49,440
how this um the the module that i've

525
00:20:48,480 --> 00:20:51,679
chosen has a

526
00:20:49,440 --> 00:20:52,559
certain amount of selection for the

527
00:20:51,679 --> 00:20:54,480
memory

528
00:20:52,559 --> 00:20:55,678
and that there's a where it says it's a

529
00:20:54,480 --> 00:20:58,799
16k there's a

530
00:20:55,679 --> 00:21:00,480
3k module mode um

531
00:20:58,799 --> 00:21:02,720
so the first easy bit is i couldn't get

532
00:21:00,480 --> 00:21:04,640
the switches so i just usually jump jump

533
00:21:02,720 --> 00:21:08,080
headers to replace them

534
00:21:04,640 --> 00:21:10,799
now the memory map of the vic 20

535
00:21:08,080 --> 00:21:12,240
has a already has five kilobytes of

536
00:21:10,799 --> 00:21:15,440
memory in it

537
00:21:12,240 --> 00:21:17,600
there's two 8k selectable areas

538
00:21:15,440 --> 00:21:18,799
and the jumpers just change which of the

539
00:21:17,600 --> 00:21:22,559
chip select lines

540
00:21:18,799 --> 00:21:25,440
are fed into the logic of the vixen

541
00:21:22,559 --> 00:21:26,480
so depending on which one you select you

542
00:21:25,440 --> 00:21:29,760
may just end up

543
00:21:26,480 --> 00:21:33,600
overlapping an original 8k section

544
00:21:29,760 --> 00:21:36,080
however some of the original

545
00:21:33,600 --> 00:21:37,678
system original programs you get would

546
00:21:36,080 --> 00:21:41,360
assume you'd extend

547
00:21:37,679 --> 00:21:43,679
that extra three kilobytes because

548
00:21:41,360 --> 00:21:45,600
that's part of what you could get and

549
00:21:43,679 --> 00:21:48,799
some of the really small

550
00:21:45,600 --> 00:21:49,760
expansions were simply three 1ksrams

551
00:21:48,799 --> 00:21:52,879
that would

552
00:21:49,760 --> 00:21:56,158
sit there so that's why there's the as

553
00:21:52,880 --> 00:21:58,960
option so basically the

554
00:21:56,159 --> 00:21:59,760
16 kilobytes is two 8k blocks and some

555
00:21:58,960 --> 00:22:01,600
of that

556
00:21:59,760 --> 00:22:05,120
depending on which way the switches are

557
00:22:01,600 --> 00:22:09,439
selected could overlap an existing

558
00:22:05,120 --> 00:22:12,320
uh ram area okay

559
00:22:09,440 --> 00:22:13,520
so at the back there yeah so the

560
00:22:12,320 --> 00:22:16,720
original car

561
00:22:13,520 --> 00:22:19,760
and our team are free uh

562
00:22:16,720 --> 00:22:19,760
a resistor capacitor

563
00:22:20,400 --> 00:22:24,960
for implementing the states yeah you

564
00:22:23,600 --> 00:22:27,760
proposed

565
00:22:24,960 --> 00:22:28,400
we can use in cll to multiply the clock

566
00:22:27,760 --> 00:22:31,120
and something

567
00:22:28,400 --> 00:22:33,360
registers yeah did you think about the

568
00:22:31,120 --> 00:22:34,239
technology that was used in between

569
00:22:33,360 --> 00:22:37,600
simple rc

570
00:22:34,240 --> 00:22:40,080
logic and the pll and fifth registers

571
00:22:37,600 --> 00:22:41,840
they're out in the zip form fact for

572
00:22:40,080 --> 00:22:45,120
delay line chips where you

573
00:22:41,840 --> 00:22:49,600
put the piles in and get the same powers

574
00:22:45,120 --> 00:22:52,399
like 50 100 150 and so on

575
00:22:49,600 --> 00:22:54,240
like five caps on an lc uh thing with

576
00:22:52,400 --> 00:22:54,720
schmidt bring us integrated in one tip

577
00:22:54,240 --> 00:22:57,200
did you

578
00:22:54,720 --> 00:22:58,799
think about that no so the question was

579
00:22:57,200 --> 00:22:59,919
uh there are uh

580
00:22:58,799 --> 00:23:03,200
there's so there's other there's a

581
00:22:59,919 --> 00:23:07,200
technology like um between the simple rc

582
00:23:03,200 --> 00:23:09,200
and a pll using a delay line

583
00:23:07,200 --> 00:23:10,559
now i didn't actually think about using

584
00:23:09,200 --> 00:23:11,840
delay lines because i haven't actually

585
00:23:10,559 --> 00:23:14,799
come across

586
00:23:11,840 --> 00:23:16,000
those very much in any of the standard

587
00:23:14,799 --> 00:23:17,200
computing

588
00:23:16,000 --> 00:23:20,080
stuff so i think delay lines of

589
00:23:17,200 --> 00:23:23,520
technology i've not seen

590
00:23:20,080 --> 00:23:25,120
used so i don't know about um but it's

591
00:23:23,520 --> 00:23:27,120
very interesting idea it's like

592
00:23:25,120 --> 00:23:29,120
how there are a number of ways of doing

593
00:23:27,120 --> 00:23:32,799
this and which one would have been

594
00:23:29,120 --> 00:23:32,799
possible or cost effective

595
00:23:35,200 --> 00:23:41,200
pc solar main boards and

596
00:23:38,240 --> 00:23:42,080
memory expanding costs so from between

597
00:23:41,200 --> 00:23:45,200
85

598
00:23:42,080 --> 00:23:46,799
and 95. okay so yes um

599
00:23:45,200 --> 00:23:48,640
so the comment is that these these have

600
00:23:46,799 --> 00:23:52,158
been used on a

601
00:23:48,640 --> 00:23:53,440
certain pc expansion and motherboards

602
00:23:52,159 --> 00:23:56,400
between like the 85

603
00:23:53,440 --> 00:23:57,360
95 now that is about the time frame we

604
00:23:56,400 --> 00:23:59,840
are talking about

605
00:23:57,360 --> 00:24:01,520
i can't remember exactly when this

606
00:23:59,840 --> 00:24:03,600
cartridge was

607
00:24:01,520 --> 00:24:04,879
first put in i think the copyright

608
00:24:03,600 --> 00:24:08,799
online

609
00:24:04,880 --> 00:24:08,799
was 82 and

610
00:24:09,679 --> 00:24:14,880
i have actually bought something to show

611
00:24:12,559 --> 00:24:14,879
people

612
00:24:15,919 --> 00:24:21,440
so here is the original that's it's

613
00:24:19,039 --> 00:24:21,440
boxed

614
00:24:24,080 --> 00:24:27,360
and this is the sort of this is what

615
00:24:25,760 --> 00:24:30,240
we're looking at

616
00:24:27,360 --> 00:24:32,719
now i was trying to get some of the

617
00:24:30,240 --> 00:24:34,080
values of the components on here

618
00:24:32,720 --> 00:24:35,679
and i've actually destroyed one of the

619
00:24:34,080 --> 00:24:37,520
capacitors in doing it so it's actually

620
00:24:35,679 --> 00:24:40,799
got a replacement on there

621
00:24:37,520 --> 00:24:45,120
um it turns out that

622
00:24:40,799 --> 00:24:48,080
so it's valuable so i think

623
00:24:45,120 --> 00:24:48,799
it was that was a two to three hundred

624
00:24:48,080 --> 00:24:53,039
three point

625
00:24:48,799 --> 00:24:55,600
three nano farad i think so

626
00:24:53,039 --> 00:24:58,480
um but yeah the these boards are not

627
00:24:55,600 --> 00:25:01,439
exactly easy to deal with

628
00:24:58,480 --> 00:25:02,559
um because they're they're not actually

629
00:25:01,440 --> 00:25:04,240
um

630
00:25:02,559 --> 00:25:06,320
very desperately well made and they

631
00:25:04,240 --> 00:25:08,400
certainly don't have any nice features

632
00:25:06,320 --> 00:25:11,279
like solder masks

633
00:25:08,400 --> 00:25:12,640
um but anyway that was i can show people

634
00:25:11,279 --> 00:25:13,200
that close up if they want to look at

635
00:25:12,640 --> 00:25:14,960
the

636
00:25:13,200 --> 00:25:17,600
later i say this got a slightly

637
00:25:14,960 --> 00:25:20,880
different switch on it

638
00:25:17,600 --> 00:25:20,879
and i say

639
00:25:22,640 --> 00:25:28,000
and this is the one i actually built um

640
00:25:26,240 --> 00:25:42,559
i say i don't know why enough i ended up

641
00:25:28,000 --> 00:25:45,120
with five of them

642
00:25:42,559 --> 00:25:46,639
yes so i mean the question is why only

643
00:25:45,120 --> 00:25:49,600
16 kilobytes

644
00:25:46,640 --> 00:25:50,559
so i mean i was just recreating this

645
00:25:49,600 --> 00:25:53,678
pretty much

646
00:25:50,559 --> 00:25:57,120
chip for chip um these are

647
00:25:53,679 --> 00:25:59,840
for 16k by four

648
00:25:57,120 --> 00:26:00,959
dram chips so i'd need more chips to get

649
00:25:59,840 --> 00:26:05,439
more memory

650
00:26:00,960 --> 00:26:07,840
um if i put 32 kilobytes on

651
00:26:05,440 --> 00:26:09,600
the expansion i'd fill the pretty much

652
00:26:07,840 --> 00:26:11,199
the entire spare memory map of the

653
00:26:09,600 --> 00:26:12,639
vic-20

654
00:26:11,200 --> 00:26:14,640
anything more and i'm looking into

655
00:26:12,640 --> 00:26:17,679
having to do

656
00:26:14,640 --> 00:26:18,640
memory paging and that is getting to the

657
00:26:17,679 --> 00:26:21,440
point of

658
00:26:18,640 --> 00:26:23,120
um there's probably even weirder ways

659
00:26:21,440 --> 00:26:25,360
that i could build memory expansions at

660
00:26:23,120 --> 00:26:27,039
this point

661
00:26:25,360 --> 00:26:28,639
and this this way is getting to the

662
00:26:27,039 --> 00:26:31,919
point that is

663
00:26:28,640 --> 00:26:33,360
probably not worth my time

664
00:26:31,919 --> 00:26:35,120
yeah i'm just curious you said the big

665
00:26:33,360 --> 00:26:35,840
20 was your second computer what was

666
00:26:35,120 --> 00:26:37,918
your first

667
00:26:35,840 --> 00:26:39,279
so okay so the question is that the

668
00:26:37,919 --> 00:26:42,240
victory was my second

669
00:26:39,279 --> 00:26:44,080
so i had a zx81 as my first and if if

670
00:26:42,240 --> 00:26:46,880
anybody remembers the zx81

671
00:26:44,080 --> 00:26:49,039
that had even worse ram expansions

672
00:26:46,880 --> 00:26:51,440
because those would actually fall

673
00:26:49,039 --> 00:26:55,039
fall off the back of the computer so the

674
00:26:51,440 --> 00:26:59,520
v20 at least had a proper case

675
00:26:55,039 --> 00:26:59,520
um so yeah this

676
00:27:00,720 --> 00:27:04,799
i mean this is probably spent i suppose

677
00:27:03,840 --> 00:27:07,039
something about 10

678
00:27:04,799 --> 00:27:08,559
12 days of my time from last year on

679
00:27:07,039 --> 00:27:10,960
this and i don't know whether this is

680
00:27:08,559 --> 00:27:13,918
really a good use of my time

681
00:27:10,960 --> 00:27:16,159
um it certainly made an interesting talk

682
00:27:13,919 --> 00:27:18,720
i hope

683
00:27:16,159 --> 00:27:20,559
well yeah i've actually repaired so the

684
00:27:18,720 --> 00:27:21,760
comment was i've got two vic-20s out of

685
00:27:20,559 --> 00:27:24,158
this now

686
00:27:21,760 --> 00:27:25,600
one vic-20 was probably one vic-20 more

687
00:27:24,159 --> 00:27:28,000
than i needed

688
00:27:25,600 --> 00:27:29,039
um i've actually repaired the second one

689
00:27:28,000 --> 00:27:31,600
as well because i could probably sell

690
00:27:29,039 --> 00:27:33,039
that back on

691
00:27:31,600 --> 00:27:34,480
it turned out the vic chip on it had

692
00:27:33,039 --> 00:27:35,840
died so that's why i wasn't getting any

693
00:27:34,480 --> 00:27:38,399
anything out of it

694
00:27:35,840 --> 00:27:40,240
that was another evening of why on earth

695
00:27:38,399 --> 00:27:42,879
is this not working

696
00:27:40,240 --> 00:27:43,760
and it was a side track of probing

697
00:27:42,880 --> 00:27:45,440
through

698
00:27:43,760 --> 00:27:49,840
finding out what was wrong and the fact

699
00:27:45,440 --> 00:27:49,840
that china still sells vic-20 chips

700
00:27:50,240 --> 00:27:53,679
sorry didn't you have any problems

701
00:27:52,480 --> 00:27:56,559
getting the old chip

702
00:27:53,679 --> 00:27:58,080
the old memory chips nowadays so

703
00:27:56,559 --> 00:28:00,480
question is did i have any problems

704
00:27:58,080 --> 00:28:02,960
getting any of the old chips now

705
00:28:00,480 --> 00:28:04,159
it turns out that ebay is a fountain of

706
00:28:02,960 --> 00:28:07,039
all knowledge

707
00:28:04,159 --> 00:28:08,080
or supplies on this and there are people

708
00:28:07,039 --> 00:28:11,679
still selling these

709
00:28:08,080 --> 00:28:15,520
um dram chips i think it was

710
00:28:11,679 --> 00:28:17,760
cost me about three euros for a pack of

711
00:28:15,520 --> 00:28:19,279
uh three years three euros each for a

712
00:28:17,760 --> 00:28:21,919
pack of four

713
00:28:19,279 --> 00:28:23,760
um i say there's still people with

714
00:28:21,919 --> 00:28:27,279
stocks of these things

715
00:28:23,760 --> 00:28:27,840
sitting around um i don't know i felt

716
00:28:27,279 --> 00:28:32,080
the same

717
00:28:27,840 --> 00:28:34,799
date code this is an 84

718
00:28:32,080 --> 00:28:37,678
45 what do they both of them say have

719
00:28:34,799 --> 00:28:37,679
same date code

720
00:28:38,720 --> 00:28:43,360
so the two two so the question was do

721
00:28:41,200 --> 00:28:44,080
both the dram chips have the same date

722
00:28:43,360 --> 00:28:47,840
code and yes

723
00:28:44,080 --> 00:28:52,080
actually they do probably fake yeah

724
00:28:47,840 --> 00:28:55,439
who knows who cares it works

725
00:28:52,080 --> 00:28:59,678
but they they put they rub

726
00:28:55,440 --> 00:29:02,080
rub they rub uh uh

727
00:28:59,679 --> 00:29:03,120
eating out of it and make the same date

728
00:29:02,080 --> 00:29:06,240
called because

729
00:29:03,120 --> 00:29:08,080
those are not making for 20 or 30 years

730
00:29:06,240 --> 00:29:09,919
so there is no way there is all stock

731
00:29:08,080 --> 00:29:12,080
anymore well it could because it is

732
00:29:09,919 --> 00:29:15,200
actually it's a date code 84.

733
00:29:12,080 --> 00:29:15,199
so that's 19 that's nice

734
00:29:15,360 --> 00:29:18,639
but yeah the comment was that it could

735
00:29:16,720 --> 00:29:20,960
be the stock could well be fake who

736
00:29:18,640 --> 00:29:20,960
knows

737
00:29:22,120 --> 00:29:28,799
um

738
00:29:25,120 --> 00:29:32,000
and they are selling them out

739
00:29:28,799 --> 00:29:32,879
yeah i know so i think the question

740
00:29:32,000 --> 00:29:35,440
i don't know if it's going to be

741
00:29:32,880 --> 00:29:38,880
reliable or not but i mean

742
00:29:35,440 --> 00:29:41,600
as i say aliexpress on china is still

743
00:29:38,880 --> 00:29:43,279
selling the video interface chip that's

744
00:29:41,600 --> 00:29:46,879
used in the center of the vic

745
00:29:43,279 --> 00:29:48,399
as old new new old stock

746
00:29:46,880 --> 00:29:50,320
and i was quite surprised it's like you

747
00:29:48,399 --> 00:29:52,959
just go online order it and a month

748
00:29:50,320 --> 00:29:55,279
later a chip turns up

749
00:29:52,960 --> 00:29:56,720
anyway well hopefully this was

750
00:29:55,279 --> 00:30:09,840
interesting to people

751
00:29:56,720 --> 00:30:09,840
thank you for attending

752
00:30:10,720 --> 00:30:12,799
you

