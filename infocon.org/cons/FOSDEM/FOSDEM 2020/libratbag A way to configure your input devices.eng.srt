1
00:00:06,560 --> 00:00:10,399
uh

2
00:00:07,120 --> 00:00:13,679
hello uh i'm going to

3
00:00:10,400 --> 00:00:15,040
talk about libratbike which is a demand

4
00:00:13,679 --> 00:00:18,960
to configure

5
00:00:15,040 --> 00:00:21,680
input devices so who am i

6
00:00:18,960 --> 00:00:22,960
my name is philippe lynch i like beer

7
00:00:21,680 --> 00:00:25,439
i'm a student

8
00:00:22,960 --> 00:00:26,000
i'm one of the maintainers of libratbuck

9
00:00:25,439 --> 00:00:30,400
and i

10
00:00:26,000 --> 00:00:33,519
package some stuff for arch linux

11
00:00:30,400 --> 00:00:36,079
so the table of contents of content

12
00:00:33,520 --> 00:00:37,120
content i'm going to explain a bit

13
00:00:36,079 --> 00:00:39,520
better what

14
00:00:37,120 --> 00:00:40,800
is the red bug then i'm going to talk

15
00:00:39,520 --> 00:00:43,680
about the current

16
00:00:40,800 --> 00:00:44,000
the current status what we have planned

17
00:00:43,680 --> 00:00:46,559
for

18
00:00:44,000 --> 00:00:47,200
for the future and uh a really really

19
00:00:46,559 --> 00:00:50,239
quick

20
00:00:47,200 --> 00:00:51,440
overview of the it protocol then how you

21
00:00:50,239 --> 00:00:54,879
can define your

22
00:00:51,440 --> 00:00:58,079
own uh library driver then some

23
00:00:54,879 --> 00:01:01,120
questions so

24
00:00:58,079 --> 00:01:04,239
what is library attack library back is a

25
00:01:01,120 --> 00:01:05,199
device demand demand to configure the

26
00:01:04,239 --> 00:01:08,560
hardware of

27
00:01:05,199 --> 00:01:11,759
input devices so for example some

28
00:01:08,560 --> 00:01:13,280
ion devices like this one you can change

29
00:01:11,760 --> 00:01:16,479
the sensibility and

30
00:01:13,280 --> 00:01:19,600
other aspects of the order

31
00:01:16,479 --> 00:01:22,720
but they often the

32
00:01:19,600 --> 00:01:25,360
manufacturer often only provides

33
00:01:22,720 --> 00:01:26,158
official drivers for like windows and

34
00:01:25,360 --> 00:01:29,520
sometimes

35
00:01:26,159 --> 00:01:33,200
maybe mac but never linux really

36
00:01:29,520 --> 00:01:37,840
so if you buy such

37
00:01:33,200 --> 00:01:39,920
an expensive mice like this one you

38
00:01:37,840 --> 00:01:41,360
you want to to be able to change the

39
00:01:39,920 --> 00:01:44,640
those settings

40
00:01:41,360 --> 00:01:48,640
and that's what libra pack allows you

41
00:01:44,640 --> 00:01:52,159
to do we we are vendor agnostic so

42
00:01:48,640 --> 00:01:54,079
we our api is not tied to

43
00:01:52,159 --> 00:01:55,439
any particular winner so you can define

44
00:01:54,079 --> 00:01:59,360
your own driver for

45
00:01:55,439 --> 00:02:03,600
your for any mouse or any

46
00:01:59,360 --> 00:02:03,600
other kind of input device and

47
00:02:04,960 --> 00:02:10,878
and have it work so right now we

48
00:02:08,479 --> 00:02:11,599
mainly support logitech because they

49
00:02:10,878 --> 00:02:14,000
actually use

50
00:02:11,599 --> 00:02:15,200
a standard protocol between all of their

51
00:02:14,000 --> 00:02:17,840
devices so it's

52
00:02:15,200 --> 00:02:17,839
really easy to

53
00:02:18,879 --> 00:02:23,840
not necessarily maintain but to

54
00:02:24,000 --> 00:02:29,599
to have

55
00:02:27,200 --> 00:02:31,599
do the same code work for different

56
00:02:29,599 --> 00:02:34,839
models

57
00:02:31,599 --> 00:02:36,720
while other other vendors like steel

58
00:02:34,840 --> 00:02:40,000
series

59
00:02:36,720 --> 00:02:43,440
f like a different protocol for each uh

60
00:02:40,000 --> 00:02:45,840
hardware so it's a bit of a mess and

61
00:02:43,440 --> 00:02:47,760
libra pack was created in 2015 by

62
00:02:45,840 --> 00:02:51,599
benjamin

63
00:02:47,760 --> 00:02:52,079
which with uh one of the maintainers of

64
00:02:51,599 --> 00:02:55,359
the

65
00:02:52,080 --> 00:02:56,560
the subtree of the kernel and uh peter

66
00:02:55,360 --> 00:02:58,879
utterer

67
00:02:56,560 --> 00:02:59,760
which is uh who is the maintainer of

68
00:02:58,879 --> 00:03:02,879
leave input

69
00:02:59,760 --> 00:03:06,000
and most of the

70
00:03:02,879 --> 00:03:06,000
linux input stack

71
00:03:06,319 --> 00:03:10,879
so what can you configure with libra

72
00:03:09,519 --> 00:03:13,920
back so you can

73
00:03:10,879 --> 00:03:16,480
change the the resolutions so the dpi

74
00:03:13,920 --> 00:03:19,679
settings you can change the report right

75
00:03:16,480 --> 00:03:22,799
you can remap buttons you can do

76
00:03:19,680 --> 00:03:26,799
hardware macros and you can change the

77
00:03:22,800 --> 00:03:26,799
effects of of the leds

78
00:03:27,200 --> 00:03:34,640
so for clients we

79
00:03:30,400 --> 00:03:37,920
currently have ratbak ctl which is uh

80
00:03:34,640 --> 00:03:41,599
a sli client which is

81
00:03:37,920 --> 00:03:45,440
cli client but it's mostly intended for

82
00:03:41,599 --> 00:03:48,319
the bug and we have piper which is a

83
00:03:45,440 --> 00:03:50,720
gtk client which is mainly which is

84
00:03:48,319 --> 00:03:53,359
intended to be like a proper client for

85
00:03:50,720 --> 00:03:53,359
end users

86
00:03:53,840 --> 00:04:01,519
so the status of

87
00:03:57,920 --> 00:04:04,079
libra mac so it works you can change

88
00:04:01,519 --> 00:04:05,360
our settings for for the supported

89
00:04:04,080 --> 00:04:08,400
devices

90
00:04:05,360 --> 00:04:11,840
but we don't have any

91
00:04:08,400 --> 00:04:16,000
we don't have a stable client api yet

92
00:04:11,840 --> 00:04:19,120
so because of several issues like

93
00:04:16,000 --> 00:04:22,479
we have limited time we are not

94
00:04:19,120 --> 00:04:25,919
uh we don't want to

95
00:04:22,479 --> 00:04:28,560
define a stable api yet because we

96
00:04:25,919 --> 00:04:29,680
we will have to if we do it we will have

97
00:04:28,560 --> 00:04:33,680
to maintain it

98
00:04:29,680 --> 00:04:37,120
and we we

99
00:04:33,680 --> 00:04:41,360
hope to to be able to do it soon but

100
00:04:37,120 --> 00:04:44,639
uh it's not there yet

101
00:04:41,360 --> 00:04:46,160
so the issues that we currently have

102
00:04:44,639 --> 00:04:48,400
with libra attacks like i said

103
00:04:46,160 --> 00:04:50,400
we have limited time uh we don't have

104
00:04:48,400 --> 00:04:54,159
that many maintainers

105
00:04:50,400 --> 00:04:56,000
or that many contributors most the the

106
00:04:54,160 --> 00:04:57,600
people that contribute to libra lag

107
00:04:56,000 --> 00:05:00,720
mostly uh

108
00:04:57,600 --> 00:05:04,080
make their device work and

109
00:05:00,720 --> 00:05:06,080
don't really uh

110
00:05:04,080 --> 00:05:07,520
contribute to the rest of the code so

111
00:05:06,080 --> 00:05:10,159
you can have

112
00:05:07,520 --> 00:05:11,359
uh some part of the code for some device

113
00:05:10,160 --> 00:05:14,880
that works

114
00:05:11,360 --> 00:05:17,039
uh perfectly fine but

115
00:05:14,880 --> 00:05:18,960
for other hardware it can be a little

116
00:05:17,039 --> 00:05:22,080
bit buggy because

117
00:05:18,960 --> 00:05:24,479
uh because

118
00:05:22,080 --> 00:05:26,000
the the people that contribute to that

119
00:05:24,479 --> 00:05:29,520
code

120
00:05:26,000 --> 00:05:33,280
uh are not that that uh active

121
00:05:29,520 --> 00:05:36,080
so it's uh one of the issues is

122
00:05:33,280 --> 00:05:37,119
can be ultimately so something some of

123
00:05:36,080 --> 00:05:40,800
the code if you

124
00:05:37,120 --> 00:05:43,759
if you don't have some

125
00:05:40,800 --> 00:05:47,120
previous knowledge of the hit protocol

126
00:05:43,759 --> 00:05:47,120
which is the protocol used by

127
00:05:48,400 --> 00:05:55,440
by input devices it can be a little bit

128
00:05:52,320 --> 00:05:58,800
complex in some parts but you usually

129
00:05:55,440 --> 00:06:01,120
have to deal with it we uh we me and the

130
00:05:58,800 --> 00:06:04,319
other maintainers have to deal with it

131
00:06:01,120 --> 00:06:04,800
and i think the the most important thing

132
00:06:04,319 --> 00:06:08,000
is that

133
00:06:04,800 --> 00:06:11,199
we have limited access to hardware

134
00:06:08,000 --> 00:06:14,560
so i don't do not own all of

135
00:06:11,199 --> 00:06:17,840
the order that we support and

136
00:06:14,560 --> 00:06:21,199
neither do the other maintainers we have

137
00:06:17,840 --> 00:06:23,440
between all of us i think we have a

138
00:06:21,199 --> 00:06:25,360
a good portion of the ardor but we don't

139
00:06:23,440 --> 00:06:30,080
have all of it

140
00:06:25,360 --> 00:06:30,080
and that can really uh

141
00:06:32,160 --> 00:06:38,160
that can really prevent us from

142
00:06:35,199 --> 00:06:39,440
fixing stuff because we don't have data

143
00:06:38,160 --> 00:06:44,160
um

144
00:06:39,440 --> 00:06:48,719
so what the the the future

145
00:06:44,160 --> 00:06:51,840
we want to set up a ci but

146
00:06:48,720 --> 00:06:55,039
to to test the hardware drivers

147
00:06:51,840 --> 00:06:55,919
real because they coming communicate

148
00:06:55,039 --> 00:07:00,000
with hardware

149
00:06:55,919 --> 00:07:02,880
we we need the only way for us to

150
00:07:00,000 --> 00:07:03,599
to test them is actually emulates the

151
00:07:02,880 --> 00:07:06,159
ardor

152
00:07:03,599 --> 00:07:06,719
otherwise we don't have in any way to we

153
00:07:06,160 --> 00:07:10,720
will

154
00:07:06,720 --> 00:07:12,639
have to have like a physical ci which is

155
00:07:10,720 --> 00:07:14,479
which is not great because like i said

156
00:07:12,639 --> 00:07:17,680
we don't have a lot of devices and

157
00:07:14,479 --> 00:07:18,880
it's hard to maintain so what we want to

158
00:07:17,680 --> 00:07:23,520
do is to have a

159
00:07:18,880 --> 00:07:27,680
device simulation so this summer

160
00:07:23,520 --> 00:07:27,680
logitech was kind enough to

161
00:07:27,840 --> 00:07:32,638
give me a internship where during the

162
00:07:31,039 --> 00:07:35,680
summer i

163
00:07:32,639 --> 00:07:38,960
worked on open source software and

164
00:07:35,680 --> 00:07:42,400
one of the most one of

165
00:07:38,960 --> 00:07:46,080
the the principle the main

166
00:07:42,400 --> 00:07:49,198
projects of the internship was to

167
00:07:46,080 --> 00:07:49,758
to create a device simulator so we right

168
00:07:49,199 --> 00:07:51,520
now

169
00:07:49,759 --> 00:07:53,680
right now we have a device simulator

170
00:07:51,520 --> 00:07:56,479
that works we have a prototype

171
00:07:53,680 --> 00:07:57,680
and we have a prototype ci for the

172
00:07:56,479 --> 00:08:01,120
broadback

173
00:07:57,680 --> 00:08:04,560
but it's only a prototype i'm

174
00:08:01,120 --> 00:08:05,440
i am rewriting the uh device simulator

175
00:08:04,560 --> 00:08:08,560
it should be

176
00:08:05,440 --> 00:08:10,240
ready soon so hopefully soon we will

177
00:08:08,560 --> 00:08:12,800
have like a proper ci that

178
00:08:10,240 --> 00:08:14,319
can can emulate the all of the order

179
00:08:12,800 --> 00:08:17,360
even if

180
00:08:14,319 --> 00:08:20,240
we don't have it and can actually

181
00:08:17,360 --> 00:08:21,199
make proper regression testing make sure

182
00:08:20,240 --> 00:08:24,720
that

183
00:08:21,199 --> 00:08:28,160
new changes don't break existing

184
00:08:24,720 --> 00:08:32,159
code and things like that

185
00:08:28,160 --> 00:08:33,919
one other uh thing i wanted to

186
00:08:32,159 --> 00:08:36,240
to play around with is color

187
00:08:33,919 --> 00:08:37,120
synchronization so for example if you

188
00:08:36,240 --> 00:08:40,640
have

189
00:08:37,120 --> 00:08:44,000
a device like a mouse and a keyboard

190
00:08:40,640 --> 00:08:46,720
you could actually have the the the

191
00:08:44,000 --> 00:08:47,040
the light effects sync up between them

192
00:08:46,720 --> 00:08:48,959
or

193
00:08:47,040 --> 00:08:50,160
if you have like other kind of devices

194
00:08:48,959 --> 00:08:53,279
that we

195
00:08:50,160 --> 00:08:56,399
could support you you could

196
00:08:53,279 --> 00:08:56,640
have everything nice and synced up you

197
00:08:56,399 --> 00:08:58,399
have

198
00:08:56,640 --> 00:08:59,839
the same color effects between

199
00:08:58,399 --> 00:09:03,120
everything

200
00:08:59,839 --> 00:09:03,600
so i'm going to talk just a little bit

201
00:09:03,120 --> 00:09:05,200
about

202
00:09:03,600 --> 00:09:07,279
it protocol which is the product called

203
00:09:05,200 --> 00:09:09,600
used by input devices

204
00:09:07,279 --> 00:09:10,640
this is supposed to be like just an

205
00:09:09,600 --> 00:09:14,480
entry point for

206
00:09:10,640 --> 00:09:18,160
for people that want to understand

207
00:09:14,480 --> 00:09:18,959
how these input devices interact with

208
00:09:18,160 --> 00:09:23,279
the

209
00:09:18,959 --> 00:09:26,959
with the computer and

210
00:09:23,279 --> 00:09:30,480
how they operate and on top of

211
00:09:26,959 --> 00:09:31,540
on top of that how the the

212
00:09:30,480 --> 00:09:34,630
the protocol for

213
00:09:31,540 --> 00:09:34,630
[Music]

214
00:09:34,640 --> 00:09:38,399
how the protocol to configure these

215
00:09:36,959 --> 00:09:42,000
devices

216
00:09:38,399 --> 00:09:45,040
uh relates to

217
00:09:42,000 --> 00:09:45,040
so uh

218
00:09:45,680 --> 00:09:51,599
so you have uh advice

219
00:09:48,959 --> 00:09:52,640
this is the one of the most common

220
00:09:51,600 --> 00:09:55,279
examples is it

221
00:09:52,640 --> 00:09:56,560
for example you have a mouse and every

222
00:09:55,279 --> 00:09:59,760
time the hardware changes

223
00:09:56,560 --> 00:10:00,640
the hardware state changes you send a

224
00:09:59,760 --> 00:10:04,480
report to the

225
00:10:00,640 --> 00:10:07,600
to the host telling okay so

226
00:10:04,480 --> 00:10:11,440
i moved uh x uh

227
00:10:07,600 --> 00:10:14,560
dot in the x axis

228
00:10:11,440 --> 00:10:18,240
so but the the

229
00:10:14,560 --> 00:10:22,160
the it protocol is

230
00:10:18,240 --> 00:10:25,200
designed to to work with

231
00:10:22,160 --> 00:10:28,880
all kinds of input devices and

232
00:10:25,200 --> 00:10:30,959
they have different hardware properties

233
00:10:28,880 --> 00:10:32,000
so we can cannot have like a

234
00:10:30,959 --> 00:10:35,279
standardized

235
00:10:32,000 --> 00:10:38,959
uh uh report

236
00:10:35,279 --> 00:10:40,079
structure so the packet that the device

237
00:10:38,959 --> 00:10:43,760
sends to the

238
00:10:40,079 --> 00:10:47,120
computer to tell it

239
00:10:43,760 --> 00:10:49,760
what changed in the uh

240
00:10:47,120 --> 00:10:50,640
sorry to tell it what changed it cannot

241
00:10:49,760 --> 00:10:52,640
be standardized

242
00:10:50,640 --> 00:10:54,720
otherwise we will have like a really

243
00:10:52,640 --> 00:10:58,000
really big packet because we need to

244
00:10:54,720 --> 00:11:01,200
send everything that is possible so

245
00:10:58,000 --> 00:11:04,160
to prevent this uh the id

246
00:11:01,200 --> 00:11:04,720
protocol defined report descriptors

247
00:11:04,160 --> 00:11:08,560
which are

248
00:11:04,720 --> 00:11:11,680
basically structures that um

249
00:11:08,560 --> 00:11:14,959
describe how the

250
00:11:11,680 --> 00:11:16,319
the the packet is structured so for

251
00:11:14,959 --> 00:11:21,119
example in this simple

252
00:11:16,320 --> 00:11:24,240
uh example we do have a mouse and

253
00:11:21,120 --> 00:11:28,000
every time the the hardware side

254
00:11:24,240 --> 00:11:30,880
changes it will send three bytes to the

255
00:11:28,000 --> 00:11:31,519
host updating the the set of the buttons

256
00:11:30,880 --> 00:11:34,720
for example

257
00:11:31,519 --> 00:11:36,160
in this case the the the the buttons

258
00:11:34,720 --> 00:11:39,040
white is just a bit mask

259
00:11:36,160 --> 00:11:39,600
every bit represents one button and then

260
00:11:39,040 --> 00:11:43,279
you have

261
00:11:39,600 --> 00:11:46,720
you have your two axis

262
00:11:43,279 --> 00:11:50,000
um but

263
00:11:46,720 --> 00:11:53,200
to but the the

264
00:11:50,000 --> 00:11:56,720
it protocol can cannot

265
00:11:53,200 --> 00:12:00,240
really we it's not

266
00:11:56,720 --> 00:12:03,279
broad enough to to be able to define

267
00:12:00,240 --> 00:12:05,120
all of the the things that you

268
00:12:03,279 --> 00:12:06,959
could be able to configure in your

269
00:12:05,120 --> 00:12:09,200
device for example the sensibility

270
00:12:06,959 --> 00:12:10,000
or some other crazy things that the

271
00:12:09,200 --> 00:12:12,850
vendors might want

272
00:12:10,000 --> 00:12:14,320
to do so they defined um

273
00:12:12,850 --> 00:12:18,079
[Music]

274
00:12:14,320 --> 00:12:20,959
so they allow it allow you to define

275
00:12:18,079 --> 00:12:22,719
a certain part of the packet as just

276
00:12:20,959 --> 00:12:26,079
vendor data

277
00:12:22,720 --> 00:12:28,959
so uh in in a more complex event

278
00:12:26,079 --> 00:12:30,000
you you could have every part scripture

279
00:12:28,959 --> 00:12:33,279
that says that the

280
00:12:30,000 --> 00:12:38,160
the uh packages start with

281
00:12:33,279 --> 00:12:38,160
one send the uh the basic

282
00:12:38,720 --> 00:12:42,160
hardware updates and the reports start

283
00:12:41,600 --> 00:12:44,720
with to

284
00:12:42,160 --> 00:12:45,199
just send vendor data and at this point

285
00:12:44,720 --> 00:12:48,880
the

286
00:12:45,200 --> 00:12:52,079
the ith driver the generic e driver will

287
00:12:48,880 --> 00:12:54,000
just ignore the this data it knows what

288
00:12:52,079 --> 00:12:57,040
to do it with that one but

289
00:12:54,000 --> 00:12:59,600
it will ignore the vendor data and then

290
00:12:57,040 --> 00:13:00,240
you can have like a vendor driver to to

291
00:12:59,600 --> 00:13:04,000
deal with

292
00:13:00,240 --> 00:13:06,880
that right with that data and uh that is

293
00:13:04,000 --> 00:13:08,399
what libra pack does we interact with

294
00:13:06,880 --> 00:13:11,920
the vendor data

295
00:13:08,399 --> 00:13:15,360
so uh every every vendor

296
00:13:11,920 --> 00:13:19,040
will uh have a

297
00:13:15,360 --> 00:13:20,160
protocol inside this vendor data a way

298
00:13:19,040 --> 00:13:21,760
for us to

299
00:13:20,160 --> 00:13:26,000
configure the devices and talk with the

300
00:13:21,760 --> 00:13:26,000
devices using this vendor data

301
00:13:26,399 --> 00:13:31,120
in in linux you have two ways to

302
00:13:29,760 --> 00:13:32,880
interact with the vendor data

303
00:13:31,120 --> 00:13:35,680
you can have like a kernel driver but

304
00:13:32,880 --> 00:13:39,120
that's not really a great

305
00:13:35,680 --> 00:13:42,880
solution uh you really

306
00:13:39,120 --> 00:13:45,279
only want to do it if you need to

307
00:13:42,880 --> 00:13:47,199
if you need access to that to that data

308
00:13:45,279 --> 00:13:50,639
some somewhere inside the kernel

309
00:13:47,199 --> 00:13:53,839
the the most common uh example is uh

310
00:13:50,639 --> 00:13:56,160
the battery were parting so you can have

311
00:13:53,839 --> 00:13:58,320
the the the battery reporting show show

312
00:13:56,160 --> 00:14:00,839
up in csfs and then f

313
00:13:58,320 --> 00:14:02,079
you power pick it up and report it

314
00:14:00,839 --> 00:14:04,639
natively

315
00:14:02,079 --> 00:14:05,519
and for that you you could do a kernel

316
00:14:04,639 --> 00:14:08,399
driver

317
00:14:05,519 --> 00:14:10,240
but for all of the other things like

318
00:14:08,399 --> 00:14:13,040
configuring the leds and

319
00:14:10,240 --> 00:14:14,720
and things like that you don't really

320
00:14:13,040 --> 00:14:18,480
want to do a kernel driver

321
00:14:14,720 --> 00:14:19,680
you you want to you can do it in the

322
00:14:18,480 --> 00:14:23,600
user's place

323
00:14:19,680 --> 00:14:27,519
so the kernel will uh export a

324
00:14:23,600 --> 00:14:31,199
dev draw device

325
00:14:27,519 --> 00:14:35,279
which which is a device that just

326
00:14:31,199 --> 00:14:35,279
sends the the raw data to the

327
00:14:35,360 --> 00:14:42,160
uh which is a file descriptor that

328
00:14:38,639 --> 00:14:43,040
only said that since the the related to

329
00:14:42,160 --> 00:14:45,839
the

330
00:14:43,040 --> 00:14:45,839
device

331
00:14:46,240 --> 00:14:52,480
so in in a libra pack to

332
00:14:49,519 --> 00:14:53,519
write your own driver you basically

333
00:14:52,480 --> 00:14:56,320
create a new file

334
00:14:53,519 --> 00:14:56,959
and you define some functions and then

335
00:14:56,320 --> 00:15:00,720
you define

336
00:14:56,959 --> 00:15:04,160
this this this structure

337
00:15:00,720 --> 00:15:07,839
uh the the the destruction

338
00:15:04,160 --> 00:15:11,120
can the structure can vary a bit

339
00:15:07,839 --> 00:15:12,480
but for most cases you you want to find

340
00:15:11,120 --> 00:15:16,880
a probe method

341
00:15:12,480 --> 00:15:19,600
which is uh every time the the

342
00:15:16,880 --> 00:15:21,279
you update something some setting it

343
00:15:19,600 --> 00:15:24,079
will be called

344
00:15:21,279 --> 00:15:25,439
sorry no the pro method is the first

345
00:15:24,079 --> 00:15:27,920
time that you connect the device

346
00:15:25,440 --> 00:15:29,360
then you have a remove method that is

347
00:15:27,920 --> 00:15:31,680
when you remove the device

348
00:15:29,360 --> 00:15:33,600
then you have the commit method that is

349
00:15:31,680 --> 00:15:36,000
every time you update some setting

350
00:15:33,600 --> 00:15:37,600
it will call that method and usually

351
00:15:36,000 --> 00:15:40,959
what you do is just to

352
00:15:37,600 --> 00:15:41,920
take that to send to tell the device to

353
00:15:40,959 --> 00:15:45,518
be

354
00:15:41,920 --> 00:15:45,519
configured in that way

355
00:15:45,600 --> 00:15:51,759
um so i i can

356
00:15:48,959 --> 00:15:52,800
if anyone has questions i can answer

357
00:15:51,759 --> 00:15:55,839
otherwise i can

358
00:15:52,800 --> 00:15:59,758
show you a demo i mean i don't know if

359
00:15:55,839 --> 00:16:02,160
you know what's the current status of

360
00:15:59,759 --> 00:16:03,040
programming the internal memories of

361
00:16:02,160 --> 00:16:06,160
some

362
00:16:03,040 --> 00:16:06,719
devices okay the the status of

363
00:16:06,160 --> 00:16:10,639
programming

364
00:16:06,720 --> 00:16:13,040
the memory of the summarizes so

365
00:16:10,639 --> 00:16:14,639
most of the the most devices don't

366
00:16:13,040 --> 00:16:18,399
really allow you to

367
00:16:14,639 --> 00:16:23,839
interact with that because they just

368
00:16:18,399 --> 00:16:27,199
the firmware only uh oh

369
00:16:23,839 --> 00:16:28,480
the thing is that sorry so you have to

370
00:16:27,199 --> 00:16:30,719
the

371
00:16:28,480 --> 00:16:31,519
the device that is connected by uh via

372
00:16:30,720 --> 00:16:34,560
usb or

373
00:16:31,519 --> 00:16:35,279
something and you have the it on top of

374
00:16:34,560 --> 00:16:37,920
it

375
00:16:35,279 --> 00:16:38,480
it does it doesn't most of us don't

376
00:16:37,920 --> 00:16:42,079
really

377
00:16:38,480 --> 00:16:44,240
have a way for you to uh

378
00:16:42,079 --> 00:16:45,599
to to interact with the memory for

379
00:16:44,240 --> 00:16:48,560
example logitech devices

380
00:16:45,600 --> 00:16:50,079
the logitech devices particular with

381
00:16:48,560 --> 00:16:54,399
onboard profiles

382
00:16:50,079 --> 00:16:57,359
actually export like emulated memory

383
00:16:54,399 --> 00:16:58,079
where you you can start stuff it is used

384
00:16:57,360 --> 00:17:01,120
to start

385
00:16:58,079 --> 00:17:04,799
like a macros

386
00:17:01,120 --> 00:17:08,240
in more recent devices like uh

387
00:17:04,799 --> 00:17:10,160
some uh custom led effects

388
00:17:08,240 --> 00:17:11,439
you you can in those devices you can

389
00:17:10,160 --> 00:17:14,319
actually using

390
00:17:11,439 --> 00:17:14,880
the vendor protocol you can write to

391
00:17:14,319 --> 00:17:17,599
that

392
00:17:14,880 --> 00:17:18,400
to some part of the memory and you you

393
00:17:17,599 --> 00:17:21,678
can

394
00:17:18,400 --> 00:17:24,000
do other do some stuff with that but

395
00:17:21,679 --> 00:17:25,280
most of us don't really allow you to

396
00:17:24,000 --> 00:17:28,880
interact with the mat

397
00:17:25,280 --> 00:17:31,600
with the memory is basically you just

398
00:17:28,880 --> 00:17:32,000
most of us only have like really simple

399
00:17:31,600 --> 00:17:35,439
comments

400
00:17:32,000 --> 00:17:38,480
that you say okay uh set the

401
00:17:35,440 --> 00:17:42,160
the led to the color red

402
00:17:38,480 --> 00:17:44,320
and then and then the the the farmer

403
00:17:42,160 --> 00:17:45,600
receives that matches that message and

404
00:17:44,320 --> 00:17:48,720
interprets it and

405
00:17:45,600 --> 00:17:51,199
that's uh there's that that that's

406
00:17:48,720 --> 00:17:51,760
the the lead to red i don't know if i

407
00:17:51,200 --> 00:17:55,280
answered

408
00:17:51,760 --> 00:17:58,160
your question properly because

409
00:17:55,280 --> 00:18:00,320
just most of us don't really allow you

410
00:17:58,160 --> 00:18:03,679
there's no interface to

411
00:18:00,320 --> 00:18:06,320
to write directly to the memory because

412
00:18:03,679 --> 00:18:09,039
after all this is just an mcu when

413
00:18:06,320 --> 00:18:11,120
running some firmware that

414
00:18:09,039 --> 00:18:12,400
will just get the updates from the

415
00:18:11,120 --> 00:18:16,799
sensor and then

416
00:18:12,400 --> 00:18:20,400
report create some hit packets

417
00:18:16,799 --> 00:18:24,960
with the with the updated

418
00:18:20,400 --> 00:18:24,960
state and send it so it's

419
00:18:25,440 --> 00:18:31,679
you can only do what the firmware

420
00:18:28,799 --> 00:18:31,679
allows it to do

421
00:18:32,000 --> 00:18:35,280
i mean in some devices you can actually

422
00:18:33,760 --> 00:18:38,640
open them up and

423
00:18:35,280 --> 00:18:41,440
reprogram it but that's a bit

424
00:18:38,640 --> 00:18:41,440
out of the scope

425
00:18:47,600 --> 00:18:52,799
um hid devices like if i well

426
00:18:50,880 --> 00:18:54,320
i do have a mouse where i reverse

427
00:18:52,799 --> 00:18:56,960
engineer the protocol

428
00:18:54,320 --> 00:18:58,559
but it's not well it doesn't take hid so

429
00:18:56,960 --> 00:19:00,640
should i write to her now do i hurt to

430
00:18:58,559 --> 00:19:03,440
emulate an hd device

431
00:19:00,640 --> 00:19:03,919
uh i mean i don't think you should uh

432
00:19:03,440 --> 00:19:07,440
sorry

433
00:19:03,919 --> 00:19:10,400
uh okay what you are asking if uh

434
00:19:07,440 --> 00:19:11,600
you are told that you have a mouse that

435
00:19:10,400 --> 00:19:14,160
allows you to configure it

436
00:19:11,600 --> 00:19:14,879
but that doesn't but doesn't export an

437
00:19:14,160 --> 00:19:18,720
hid

438
00:19:14,880 --> 00:19:21,360
device so in that case i don't think you

439
00:19:18,720 --> 00:19:25,280
should write a kernel driver

440
00:19:21,360 --> 00:19:25,918
right now all of the devices that we

441
00:19:25,280 --> 00:19:29,280
support

442
00:19:25,919 --> 00:19:32,559
are hid devices but i don't think

443
00:19:29,280 --> 00:19:36,080
that we need to do that

444
00:19:32,559 --> 00:19:39,280
necessarily uh

445
00:19:36,080 --> 00:19:41,120
i mean we have to to talk with the other

446
00:19:39,280 --> 00:19:44,000
maintainers

447
00:19:41,120 --> 00:19:44,000
but uh

448
00:19:44,880 --> 00:19:48,799
we might want to have that in libra back

449
00:19:48,160 --> 00:19:51,840
because

450
00:19:48,799 --> 00:19:55,039
after all it's just just a daemon

451
00:19:51,840 --> 00:19:57,678
that takes your device and exports some

452
00:19:55,039 --> 00:19:58,799
some settings so resolutions import

453
00:19:57,679 --> 00:20:01,520
rights

454
00:19:58,799 --> 00:20:03,760
led effects things like that and your

455
00:20:01,520 --> 00:20:07,440
device matches the

456
00:20:03,760 --> 00:20:11,280
that profile

457
00:20:07,440 --> 00:20:14,240
so if anyone has any questions

458
00:20:11,280 --> 00:20:15,520
do you have to use um rat bag d to get

459
00:20:14,240 --> 00:20:17,919
stuff done or can you just

460
00:20:15,520 --> 00:20:21,280
write something uses lip regular lid

461
00:20:17,919 --> 00:20:21,280
wrap bag to go and configure

462
00:20:22,720 --> 00:20:30,400
okay so do i do we need to use the

463
00:20:26,159 --> 00:20:34,000
rata d which is the daemon or can i just

464
00:20:30,400 --> 00:20:49,840
use libra back to to do what

465
00:20:34,000 --> 00:20:49,840
i want

466
00:20:50,000 --> 00:20:53,280
it's kind of deprecated and we just

467
00:20:52,559 --> 00:20:56,559
merged the

468
00:20:53,280 --> 00:20:59,840
the uh the demon and the library

469
00:20:56,559 --> 00:21:03,760
and right now we only

470
00:20:59,840 --> 00:21:07,439
public support the demon

471
00:21:03,760 --> 00:21:09,200
because i i i i was not in the

472
00:21:07,440 --> 00:21:10,640
involved with the project when that

473
00:21:09,200 --> 00:21:13,840
happened but i think

474
00:21:10,640 --> 00:21:14,840
it was because the uh it was hard to

475
00:21:13,840 --> 00:21:18,320
maintain

476
00:21:14,840 --> 00:21:20,799
a pool api for the library

477
00:21:18,320 --> 00:21:21,760
because it was in constant development

478
00:21:20,799 --> 00:21:24,400
so

479
00:21:21,760 --> 00:21:26,158
we didn't they didn't really want to

480
00:21:24,400 --> 00:21:30,960
maintain a public

481
00:21:26,159 --> 00:21:33,039
uh binary api so i think that's

482
00:21:30,960 --> 00:21:34,640
uh what happened but i'm not entirely

483
00:21:33,039 --> 00:21:38,400
sure

484
00:21:34,640 --> 00:21:43,120
so anyone any questions

485
00:21:38,400 --> 00:21:44,960
okay uh i can show you a demo

486
00:21:43,120 --> 00:21:46,320
so i'm going to connect this mouse i

487
00:21:44,960 --> 00:21:59,600
forgot the receiver but

488
00:21:46,320 --> 00:22:02,639
i can connect it directly

489
00:21:59,600 --> 00:22:06,240
so okay my device shows up then

490
00:22:02,640 --> 00:22:08,480
i have resolutions i can change that can

491
00:22:06,240 --> 00:22:09,840
remap buttons for example i think one of

492
00:22:08,480 --> 00:22:13,679
the most important things

493
00:22:09,840 --> 00:22:17,199
is for example if you are left-handed

494
00:22:13,679 --> 00:22:21,120
so you you want to switch

495
00:22:17,200 --> 00:22:23,679
the the two main buttons

496
00:22:21,120 --> 00:22:24,639
you if your mouse is parted in the right

497
00:22:23,679 --> 00:22:27,760
back you can

498
00:22:24,640 --> 00:22:32,159
just go here and er but

499
00:22:27,760 --> 00:22:34,158
it will just copy this uh uh

500
00:22:32,159 --> 00:22:35,360
using interface where you can just do it

501
00:22:34,159 --> 00:22:38,799
and

502
00:22:35,360 --> 00:22:42,240
then it's room up then you click apply

503
00:22:38,799 --> 00:22:47,280
and then and now the buttons are

504
00:22:42,240 --> 00:22:50,400
uh let me see if i can

505
00:22:47,280 --> 00:22:53,440
okay i need to do this

506
00:22:50,400 --> 00:22:56,640
the button the buttons are mapped i need

507
00:22:53,440 --> 00:22:56,640
to use the other button

508
00:22:58,159 --> 00:23:04,400
yeah okay so

509
00:23:01,200 --> 00:23:04,400
uh then we have the

510
00:23:04,480 --> 00:23:12,000
the leds so i can just put

511
00:23:08,080 --> 00:23:16,480
like this orange if i do this

512
00:23:12,000 --> 00:23:21,520
now if i let me show if i click

513
00:23:16,480 --> 00:23:37,840
apply it should go orange okay it can

514
00:23:21,520 --> 00:23:37,840
yep that's basically

