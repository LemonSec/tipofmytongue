1
00:00:05,359 --> 00:00:09,599
hello

2
00:00:06,560 --> 00:00:12,399
welcome to uh the talk from

3
00:00:09,599 --> 00:00:13,599
lubosh about the year of the linux

4
00:00:12,400 --> 00:00:17,920
virtual desktop

5
00:00:13,599 --> 00:00:17,920
please a round of applause for lubos

6
00:00:21,680 --> 00:00:28,480
yeah hi i'm lubos saunetsky

7
00:00:24,880 --> 00:00:32,640
i'm at collabora and

8
00:00:28,480 --> 00:00:36,320
today i'm going to present about

9
00:00:32,640 --> 00:00:39,520
xr on linux in general in open source

10
00:00:36,320 --> 00:00:43,360
and the linux desktop

11
00:00:39,520 --> 00:00:46,160
in vr so mostly

12
00:00:43,360 --> 00:00:47,840
related to my work and thank you all for

13
00:00:46,160 --> 00:00:49,839
attending

14
00:00:47,840 --> 00:00:50,879
for your interest in my work and also

15
00:00:49,840 --> 00:00:53,280
thank you for foster

16
00:00:50,879 --> 00:00:54,640
for having me and considering me for the

17
00:00:53,280 --> 00:00:56,960
main track

18
00:00:54,640 --> 00:00:58,719
this is my third foster but it's the

19
00:00:56,960 --> 00:01:00,640
first time

20
00:00:58,719 --> 00:01:02,640
when i speak so i hope it won't be the

21
00:01:00,640 --> 00:01:05,040
last time

22
00:01:02,640 --> 00:01:05,680
usually i don't put up the date on my

23
00:01:05,040 --> 00:01:07,600
slides

24
00:01:05,680 --> 00:01:09,439
but today's date is so nice it's a

25
00:01:07,600 --> 00:01:11,520
palindrome

26
00:01:09,439 --> 00:01:13,520
so you can read it both ways and it's

27
00:01:11,520 --> 00:01:14,399
the same in american and in normal

28
00:01:13,520 --> 00:01:19,600
notation

29
00:01:14,400 --> 00:01:22,400
so so this is me with a funny headset

30
00:01:19,600 --> 00:01:23,439
it's an ar cardboard phone holder

31
00:01:22,400 --> 00:01:25,360
headset

32
00:01:23,439 --> 00:01:26,880
if you have any complaints or questions

33
00:01:25,360 --> 00:01:30,240
about the talk

34
00:01:26,880 --> 00:01:34,640
please contact me on email or

35
00:01:30,240 --> 00:01:38,079
twitter so i will start with a

36
00:01:34,640 --> 00:01:40,320
brief crash course about what xr is

37
00:01:38,079 --> 00:01:41,279
what's what kind of terminology we have

38
00:01:40,320 --> 00:01:44,639
there

39
00:01:41,280 --> 00:01:46,479
maybe i should start with uh just

40
00:01:44,640 --> 00:01:48,320
asking you how many of you have ever

41
00:01:46,479 --> 00:01:51,679
tried ar or vr

42
00:01:48,320 --> 00:01:54,398
before that's plenty that's

43
00:01:51,680 --> 00:01:57,439
nearly all of you how many of you did

44
00:01:54,399 --> 00:01:57,439
that on linux

45
00:01:57,520 --> 00:02:03,199
okay that's way less and how many of

46
00:02:00,960 --> 00:02:06,559
that uh people that did that on linux

47
00:02:03,200 --> 00:02:10,560
did it on a completely open source stack

48
00:02:06,560 --> 00:02:12,560
that's even fewer um maybe nearly none

49
00:02:10,560 --> 00:02:13,760
and this is where we are working on

50
00:02:12,560 --> 00:02:17,520
right now currently

51
00:02:13,760 --> 00:02:19,280
um so i hope that this year 2020 will

52
00:02:17,520 --> 00:02:20,560
will improve the situation there are

53
00:02:19,280 --> 00:02:23,360
some factors that

54
00:02:20,560 --> 00:02:24,319
that will help with that but let's first

55
00:02:23,360 --> 00:02:27,200
start with

56
00:02:24,319 --> 00:02:29,359
this nice uh diagram it's by a guy

57
00:02:27,200 --> 00:02:32,480
called milgram from 94

58
00:02:29,360 --> 00:02:35,120
so vr is actually quite old already

59
00:02:32,480 --> 00:02:36,319
and on this spectrum we have the real

60
00:02:35,120 --> 00:02:39,599
world the world we are

61
00:02:36,319 --> 00:02:40,399
in right now uh on the left side and the

62
00:02:39,599 --> 00:02:42,720
completely

63
00:02:40,400 --> 00:02:44,239
virtual environment on the on the right

64
00:02:42,720 --> 00:02:46,959
side and in between

65
00:02:44,239 --> 00:02:48,480
there are some some steps so augmented

66
00:02:46,959 --> 00:02:51,120
realities for example

67
00:02:48,480 --> 00:02:52,238
if you have virtual elements in the real

68
00:02:51,120 --> 00:02:56,080
world

69
00:02:52,239 --> 00:02:58,239
like annotations for real objects and

70
00:02:56,080 --> 00:02:59,840
then we can go to the completely virtual

71
00:02:58,239 --> 00:03:01,440
world and on the way we found the

72
00:02:59,840 --> 00:03:04,080
augmented virtual reality

73
00:03:01,440 --> 00:03:05,200
this is when you have for example camera

74
00:03:04,080 --> 00:03:09,200
feeds or

75
00:03:05,200 --> 00:03:11,920
3d point clouds of real objects

76
00:03:09,200 --> 00:03:12,480
in the virtual world and the spectrum

77
00:03:11,920 --> 00:03:16,159
was

78
00:03:12,480 --> 00:03:19,359
called mixed reality spectrum

79
00:03:16,159 --> 00:03:22,879
and the the terms

80
00:03:19,360 --> 00:03:25,360
i have listed the terms here again and

81
00:03:22,879 --> 00:03:26,239
a more prominent term nowadays is maybe

82
00:03:25,360 --> 00:03:28,799
xr

83
00:03:26,239 --> 00:03:30,000
which is called x reality or cross

84
00:03:28,799 --> 00:03:32,159
reality

85
00:03:30,000 --> 00:03:34,879
this is also what's the term that is

86
00:03:32,159 --> 00:03:35,599
used in the chrono standard open xr for

87
00:03:34,879 --> 00:03:37,679
example

88
00:03:35,599 --> 00:03:39,200
and this is the term i am going to go

89
00:03:37,680 --> 00:03:41,200
with because it

90
00:03:39,200 --> 00:03:42,640
just summarizes all of these

91
00:03:41,200 --> 00:03:46,879
combinations of

92
00:03:42,640 --> 00:03:49,440
realities of inter-reality systems

93
00:03:46,879 --> 00:03:50,319
and in terms of consumer available

94
00:03:49,440 --> 00:03:54,720
headsets

95
00:03:50,319 --> 00:03:57,518
i would just uh point out three

96
00:03:54,720 --> 00:03:58,080
categories we have there for example we

97
00:03:57,519 --> 00:04:01,840
have

98
00:03:58,080 --> 00:04:04,239
the the simple phone holder headsets

99
00:04:01,840 --> 00:04:06,000
which run the phone's operating system

100
00:04:04,239 --> 00:04:08,239
which render on the phone

101
00:04:06,000 --> 00:04:10,080
and you have simple lenses in them these

102
00:04:08,239 --> 00:04:13,439
are the most accessible

103
00:04:10,080 --> 00:04:15,599
these are what people mostly use the

104
00:04:13,439 --> 00:04:16,719
most people had contact with them of

105
00:04:15,599 --> 00:04:19,759
course you can get it

106
00:04:16,720 --> 00:04:22,639
fancier than a as a piece of paper

107
00:04:19,759 --> 00:04:24,639
but it's as simple as it can get and of

108
00:04:22,639 --> 00:04:26,479
course we have the pc tethered headsets

109
00:04:24,639 --> 00:04:29,440
that's something for the pc gamer

110
00:04:26,479 --> 00:04:31,360
enthusiasts i guess they're also more

111
00:04:29,440 --> 00:04:33,600
hacker friendly since you can use your

112
00:04:31,360 --> 00:04:34,080
your desktop your regular linux desktop

113
00:04:33,600 --> 00:04:38,000
and

114
00:04:34,080 --> 00:04:40,240
and uh use the device uh

115
00:04:38,000 --> 00:04:41,199
as uh as ever you like because you're

116
00:04:40,240 --> 00:04:44,160
root

117
00:04:41,199 --> 00:04:45,759
and on the right side i will point out

118
00:04:44,160 --> 00:04:47,759
the standalone headsets

119
00:04:45,759 --> 00:04:50,160
which are similar to the phone thing but

120
00:04:47,759 --> 00:04:53,120
like built from the ground up

121
00:04:50,160 --> 00:04:53,520
so you have uh an embedded computer in

122
00:04:53,120 --> 00:04:56,320
there

123
00:04:53,520 --> 00:04:57,440
maybe in a belt or maybe also integrated

124
00:04:56,320 --> 00:05:00,960
in the headset

125
00:04:57,440 --> 00:05:01,840
and the lenses are better adjusted for

126
00:05:00,960 --> 00:05:04,320
the display

127
00:05:01,840 --> 00:05:07,280
in contrast to these phone holders which

128
00:05:04,320 --> 00:05:07,280
are more generic

129
00:05:07,919 --> 00:05:11,359
and yeah this is for example augmented

130
00:05:10,080 --> 00:05:13,680
reality headset with

131
00:05:11,360 --> 00:05:15,919
optical see-through so you can actually

132
00:05:13,680 --> 00:05:18,639
see the real world

133
00:05:15,919 --> 00:05:20,080
and um if you want to do see-through on

134
00:05:18,639 --> 00:05:22,320
on the device like that

135
00:05:20,080 --> 00:05:25,039
uh you usually have a camera where you

136
00:05:22,320 --> 00:05:27,520
do video through

137
00:05:25,039 --> 00:05:28,400
uh in terms of tracking so tracking is

138
00:05:27,520 --> 00:05:30,880
the

139
00:05:28,400 --> 00:05:32,320
most interesting part i guess when when

140
00:05:30,880 --> 00:05:35,759
it comes to xr

141
00:05:32,320 --> 00:05:39,520
the rendering is more straightforward

142
00:05:35,759 --> 00:05:41,759
than that for tracking uh one

143
00:05:39,520 --> 00:05:42,880
one prominent device that also is in

144
00:05:41,759 --> 00:05:45,600
your phones

145
00:05:42,880 --> 00:05:46,719
it's a inertial measurement unit uh so

146
00:05:45,600 --> 00:05:48,880
called imu

147
00:05:46,720 --> 00:05:51,360
it's it's pretty cheap and pretty small

148
00:05:48,880 --> 00:05:54,800
so this is an example how this looks

149
00:05:51,360 --> 00:05:56,960
it has multiple sensors so it has for

150
00:05:54,800 --> 00:05:59,919
example a gyro accelerometer

151
00:05:56,960 --> 00:06:01,198
it also has a magnetoscopes or a compass

152
00:05:59,919 --> 00:06:04,159
but

153
00:06:01,199 --> 00:06:04,840
usually that's not used in terms because

154
00:06:04,160 --> 00:06:08,000
of

155
00:06:04,840 --> 00:06:11,039
error and

156
00:06:08,000 --> 00:06:13,120
it's a very high frequency sensor

157
00:06:11,039 --> 00:06:15,120
so compared to the optical sensors i

158
00:06:13,120 --> 00:06:17,840
will show you

159
00:06:15,120 --> 00:06:19,360
in on the next slide you get a very high

160
00:06:17,840 --> 00:06:22,719
frequency signal

161
00:06:19,360 --> 00:06:24,720
and um yeah this is how the r

162
00:06:22,720 --> 00:06:26,880
uh what what the minimal requirement is

163
00:06:24,720 --> 00:06:28,880
for vr but you you only get three

164
00:06:26,880 --> 00:06:31,680
degrees of freedom out of that

165
00:06:28,880 --> 00:06:33,199
uh by itself so that means only your

166
00:06:31,680 --> 00:06:36,639
head's rotation

167
00:06:33,199 --> 00:06:38,639
will be recognized by

168
00:06:36,639 --> 00:06:40,560
by the tracking system or if it's a

169
00:06:38,639 --> 00:06:41,440
controller it will be only the rotation

170
00:06:40,560 --> 00:06:44,479
of the controller

171
00:06:41,440 --> 00:06:46,479
and that's not the position in space

172
00:06:44,479 --> 00:06:49,039
if you want a position in space you need

173
00:06:46,479 --> 00:06:51,840
to have optical tracking

174
00:06:49,039 --> 00:06:52,960
for example this is the work of philip

175
00:06:51,840 --> 00:06:56,080
zabal

176
00:06:52,960 --> 00:06:57,680
he's implementing an open source driver

177
00:06:56,080 --> 00:07:00,880
for the oculus cv-1

178
00:06:57,680 --> 00:07:03,039
and this is exactly this headset seen in

179
00:07:00,880 --> 00:07:06,960
a infrared

180
00:07:03,039 --> 00:07:10,080
view so the camera is a usb camera

181
00:07:06,960 --> 00:07:11,198
and a regular usb camera with a either

182
00:07:10,080 --> 00:07:14,318
infrared filter

183
00:07:11,199 --> 00:07:16,240
or infrared sensor in best case

184
00:07:14,319 --> 00:07:18,400
and this is what the camera sees the

185
00:07:16,240 --> 00:07:20,080
regular person or the human eye

186
00:07:18,400 --> 00:07:21,919
wouldn't see the slide because it's out

187
00:07:20,080 --> 00:07:24,318
of our visible spectrum

188
00:07:21,919 --> 00:07:25,359
i'm not sure if you can see it but there

189
00:07:24,319 --> 00:07:28,400
are like squares

190
00:07:25,360 --> 00:07:30,960
around these blobs these so called blobs

191
00:07:28,400 --> 00:07:31,840
uh with primitive computer vision

192
00:07:30,960 --> 00:07:35,198
algorithms

193
00:07:31,840 --> 00:07:38,318
these blobs can be detected and

194
00:07:35,199 --> 00:07:39,199
with these blobs the position can be

195
00:07:38,319 --> 00:07:41,680
calculated

196
00:07:39,199 --> 00:07:43,280
of the headset in space in combination

197
00:07:41,680 --> 00:07:46,240
with the imu you saw

198
00:07:43,280 --> 00:07:47,198
on the other side on this slide before

199
00:07:46,240 --> 00:07:49,199
there

200
00:07:47,199 --> 00:07:50,319
needs to be something done called sensor

201
00:07:49,199 --> 00:07:52,400
fusion so we

202
00:07:50,319 --> 00:07:55,039
have the data from one sensor from the

203
00:07:52,400 --> 00:07:58,239
camera which runs at

204
00:07:55,039 --> 00:07:59,360
60hz or something at regular camera

205
00:07:58,240 --> 00:08:02,319
frame rates

206
00:07:59,360 --> 00:08:03,680
or frequencies and the imu runs at much

207
00:08:02,319 --> 00:08:07,759
faster frequencies

208
00:08:03,680 --> 00:08:11,280
i guess about 10 kilohertz and

209
00:08:07,759 --> 00:08:12,240
this needs to be fused so this is one

210
00:08:11,280 --> 00:08:14,719
style of

211
00:08:12,240 --> 00:08:15,520
external optical tracking the other

212
00:08:14,720 --> 00:08:19,039
style

213
00:08:15,520 --> 00:08:22,479
is the other way around where the camera

214
00:08:19,039 --> 00:08:23,599
emits the laser and the the sensor is on

215
00:08:22,479 --> 00:08:26,878
the headset

216
00:08:23,599 --> 00:08:28,319
so in this case for example is the

217
00:08:26,879 --> 00:08:31,039
lighthouse tracking system

218
00:08:28,319 --> 00:08:33,039
it has two rotors uh where two lasers

219
00:08:31,039 --> 00:08:35,838
rotate and

220
00:08:33,039 --> 00:08:36,880
when they hit the sensor on the on the

221
00:08:35,839 --> 00:08:38,959
headset

222
00:08:36,880 --> 00:08:40,399
you get a timestamp and then you can

223
00:08:38,958 --> 00:08:43,919
calculate

224
00:08:40,399 --> 00:08:45,760
something similar like here and

225
00:08:43,919 --> 00:08:47,360
from these techniques you get six

226
00:08:45,760 --> 00:08:50,880
degrees of freedom that means

227
00:08:47,360 --> 00:08:52,000
you can also recognize if the user moves

228
00:08:50,880 --> 00:08:55,040
up or down

229
00:08:52,000 --> 00:08:58,880
or in space um

230
00:08:55,040 --> 00:09:02,319
another way of tracking which is easier

231
00:08:58,880 --> 00:09:04,800
in terms of hardware is a slam

232
00:09:02,320 --> 00:09:07,920
that's from robotics it's called

233
00:09:04,800 --> 00:09:09,359
simultaneous localization and mapping

234
00:09:07,920 --> 00:09:12,000
but basically in

235
00:09:09,360 --> 00:09:13,839
xr we call that inside out tracking that

236
00:09:12,000 --> 00:09:15,760
means that you have a camera in the

237
00:09:13,839 --> 00:09:18,320
headset

238
00:09:15,760 --> 00:09:19,360
and we run some computer vision

239
00:09:18,320 --> 00:09:22,160
algorithms

240
00:09:19,360 --> 00:09:23,279
to get the feature points and then the

241
00:09:22,160 --> 00:09:27,120
feature points

242
00:09:23,279 --> 00:09:28,160
uh stored in a in a database and you can

243
00:09:27,120 --> 00:09:30,160
see

244
00:09:28,160 --> 00:09:31,760
where you saw if you saw this feature in

245
00:09:30,160 --> 00:09:35,120
the last frame

246
00:09:31,760 --> 00:09:36,399
and um from this you can also calculate

247
00:09:35,120 --> 00:09:38,480
the the position

248
00:09:36,399 --> 00:09:39,680
and in robotics it's also used for

249
00:09:38,480 --> 00:09:43,360
calculating a

250
00:09:39,680 --> 00:09:43,359
map of the real environment

251
00:09:44,480 --> 00:09:49,760
so the the slam is a very

252
00:09:47,600 --> 00:09:51,200
popular method of tracking because it's

253
00:09:49,760 --> 00:09:52,800
easy to implement in hardware

254
00:09:51,200 --> 00:09:54,640
but it's a bit tricky to do that in

255
00:09:52,800 --> 00:09:57,120
software

256
00:09:54,640 --> 00:09:59,519
especially if you want things like low

257
00:09:57,120 --> 00:10:03,279
latency

258
00:09:59,519 --> 00:10:07,040
the next point is input in vr

259
00:10:03,279 --> 00:10:08,079
because not only like the rendering is

260
00:10:07,040 --> 00:10:10,560
interesting and gives

261
00:10:08,079 --> 00:10:11,359
us immersion like stereo rendering for

262
00:10:10,560 --> 00:10:13,599
each uh one

263
00:10:11,360 --> 00:10:15,680
image for each eye is immersive

264
00:10:13,600 --> 00:10:18,160
definitely and if you move your head

265
00:10:15,680 --> 00:10:20,079
but one thing that gives us even more

266
00:10:18,160 --> 00:10:24,880
immersion so more connection to

267
00:10:20,079 --> 00:10:24,880
reality is the input in vr

268
00:10:25,120 --> 00:10:30,079
for example when i first did a vr demo

269
00:10:27,920 --> 00:10:32,719
back in 2013

270
00:10:30,079 --> 00:10:33,839
without controllers because it wasn't a

271
00:10:32,720 --> 00:10:35,839
thing back then

272
00:10:33,839 --> 00:10:37,920
people asked me oh where are my hands in

273
00:10:35,839 --> 00:10:39,040
vr i would like to see a representation

274
00:10:37,920 --> 00:10:41,680
of my body

275
00:10:39,040 --> 00:10:42,079
and with tracked controllers uh this is

276
00:10:41,680 --> 00:10:45,279
now

277
00:10:42,079 --> 00:10:46,079
more possible and this the experience

278
00:10:45,279 --> 00:10:49,120
can be more

279
00:10:46,079 --> 00:10:52,000
immersive and i have like two different

280
00:10:49,120 --> 00:10:53,519
types of controllers here the one on the

281
00:10:52,000 --> 00:10:57,040
left

282
00:10:53,519 --> 00:10:59,839
is a simple controller with just an imu

283
00:10:57,040 --> 00:11:00,719
so you just can get the rotation from it

284
00:10:59,839 --> 00:11:03,600
and it has a touch

285
00:11:00,720 --> 00:11:04,800
pad and a button it doesn't even have a

286
00:11:03,600 --> 00:11:07,760
trigger

287
00:11:04,800 --> 00:11:10,160
but it's for for simple things like

288
00:11:07,760 --> 00:11:12,560
pointing on something and clicking on it

289
00:11:10,160 --> 00:11:16,079
it's enough but on the right side we

290
00:11:12,560 --> 00:11:18,800
have a more complex controller

291
00:11:16,079 --> 00:11:20,239
which also has things like finger

292
00:11:18,800 --> 00:11:22,160
tracking so

293
00:11:20,240 --> 00:11:23,519
it has here on the left side it has a

294
00:11:22,160 --> 00:11:26,880
proximity sensor

295
00:11:23,519 --> 00:11:28,399
and it detects how far your fingers are

296
00:11:26,880 --> 00:11:31,040
away from the controller

297
00:11:28,399 --> 00:11:32,959
which gives you already the possibility

298
00:11:31,040 --> 00:11:34,880
to have a virtual representation of your

299
00:11:32,959 --> 00:11:38,079
hand

300
00:11:34,880 --> 00:11:39,439
it also has six degrees of freedom

301
00:11:38,079 --> 00:11:41,760
tracking so you can

302
00:11:39,440 --> 00:11:43,279
actually position your hands in space

303
00:11:41,760 --> 00:11:46,480
correctly

304
00:11:43,279 --> 00:11:48,959
which gives us more immersion um

305
00:11:46,480 --> 00:11:50,160
so in terms of what devices these are

306
00:11:48,959 --> 00:11:54,319
this is

307
00:11:50,160 --> 00:11:57,360
the daydream controller we have a branch

308
00:11:54,320 --> 00:12:00,480
in monado that that's uh supports that

309
00:11:57,360 --> 00:12:02,880
uh from peak black um

310
00:12:00,480 --> 00:12:05,519
but i will come to details what monado

311
00:12:02,880 --> 00:12:08,240
is and where you can get that later

312
00:12:05,519 --> 00:12:09,200
uh and this is the uh valve index

313
00:12:08,240 --> 00:12:12,240
controller a

314
00:12:09,200 --> 00:12:16,079
pretty nice controller

315
00:12:12,240 --> 00:12:18,959
and the best thing to use in vr for

316
00:12:16,079 --> 00:12:19,599
for for interaction is something we have

317
00:12:18,959 --> 00:12:22,959
with us

318
00:12:19,600 --> 00:12:26,079
all day it's our body and hands

319
00:12:22,959 --> 00:12:28,880
since uh with our real hands uh

320
00:12:26,079 --> 00:12:29,760
we we can experience the things even

321
00:12:28,880 --> 00:12:33,200
more realistic

322
00:12:29,760 --> 00:12:33,680
uh it's like you you when you see your

323
00:12:33,200 --> 00:12:37,440
hands

324
00:12:33,680 --> 00:12:39,040
uh in in vr that actually look like your

325
00:12:37,440 --> 00:12:40,720
hands

326
00:12:39,040 --> 00:12:43,279
you recognize this from the real world

327
00:12:40,720 --> 00:12:45,200
because you maybe notice that

328
00:12:43,279 --> 00:12:46,880
you look at your hands quite a lot like

329
00:12:45,200 --> 00:12:48,639
when i pick this bottle i'm actually

330
00:12:46,880 --> 00:12:49,760
looking at my hands and i know how they

331
00:12:48,639 --> 00:12:51,920
look

332
00:12:49,760 --> 00:12:53,760
so if you have like a weird virtual

333
00:12:51,920 --> 00:12:54,959
representation of different hands it's

334
00:12:53,760 --> 00:12:57,360
not as immersive as

335
00:12:54,959 --> 00:12:58,079
if you have your real hands and hand

336
00:12:57,360 --> 00:13:01,519
tracking

337
00:12:58,079 --> 00:13:04,638
can be done by pure computer vision um

338
00:13:01,519 --> 00:13:05,360
this is a stereo camera which is also

339
00:13:04,639 --> 00:13:08,720
infrared

340
00:13:05,360 --> 00:13:10,560
it emits infrared light and it's a wide

341
00:13:08,720 --> 00:13:14,639
angle stereo camera

342
00:13:10,560 --> 00:13:14,638
and with some computer vision and

343
00:13:15,360 --> 00:13:21,040
machine learning even there can be

344
00:13:18,959 --> 00:13:23,359
a virtual representation of the hands

345
00:13:21,040 --> 00:13:25,439
calculated from this image

346
00:13:23,360 --> 00:13:26,959
on the right side i have a more

347
00:13:25,440 --> 00:13:30,160
classical approach

348
00:13:26,959 --> 00:13:31,760
at um at hand tracking which is

349
00:13:30,160 --> 00:13:35,199
mechanical

350
00:13:31,760 --> 00:13:36,639
it has the disadvantage of not being

351
00:13:35,200 --> 00:13:39,360
very user-friendly so

352
00:13:36,639 --> 00:13:40,240
you need some time to to put this on

353
00:13:39,360 --> 00:13:42,000
it's not like

354
00:13:40,240 --> 00:13:43,760
this where you don't need to do anything

355
00:13:42,000 --> 00:13:45,760
you just have your hands

356
00:13:43,760 --> 00:13:46,800
but it has the advantage of haptic

357
00:13:45,760 --> 00:13:50,319
feedback

358
00:13:46,800 --> 00:13:52,800
which is something uh not there with

359
00:13:50,320 --> 00:13:53,360
with the other type of hand tracking uh

360
00:13:52,800 --> 00:13:55,920
and in

361
00:13:53,360 --> 00:13:57,920
vr in general haptic feedback is not

362
00:13:55,920 --> 00:14:00,000
something we have like in the real world

363
00:13:57,920 --> 00:14:01,360
so i cannot really touch the table and

364
00:14:00,000 --> 00:14:04,000
and lean on it

365
00:14:01,360 --> 00:14:04,800
in vr something i can do is maybe

366
00:14:04,000 --> 00:14:07,199
vibrate

367
00:14:04,800 --> 00:14:09,120
let the controller vibrate or maybe do

368
00:14:07,199 --> 00:14:10,560
acoustic feedback that replaces the

369
00:14:09,120 --> 00:14:13,600
haptic feedback because

370
00:14:10,560 --> 00:14:15,839
the sensorics in the brain they

371
00:14:13,600 --> 00:14:17,360
they are very tolerant so you can do

372
00:14:15,839 --> 00:14:21,199
acoustic feedback and

373
00:14:17,360 --> 00:14:24,880
the human minds will will find it okay

374
00:14:21,199 --> 00:14:27,359
in terms of immersion so this was

375
00:14:24,880 --> 00:14:28,320
the rough crash course about what we

376
00:14:27,360 --> 00:14:32,079
have

377
00:14:28,320 --> 00:14:34,959
in in xr what's what the challenges are

378
00:14:32,079 --> 00:14:37,519
what the types of devices are

379
00:14:34,959 --> 00:14:38,560
and now i wanted to point out some some

380
00:14:37,519 --> 00:14:41,839
projects

381
00:14:38,560 --> 00:14:46,959
that implemented that in

382
00:14:41,839 --> 00:14:46,959
in open source let me just

383
00:14:49,040 --> 00:14:54,719
okay so one important thing

384
00:14:52,959 --> 00:14:56,560
that needed to be done in the linux

385
00:14:54,720 --> 00:15:01,199
graphics stack is

386
00:14:56,560 --> 00:15:04,560
something called direct mode it's

387
00:15:01,199 --> 00:15:06,560
the the possibility to to lease the

388
00:15:04,560 --> 00:15:10,239
display of the headset

389
00:15:06,560 --> 00:15:12,160
so it's not used by the window manager

390
00:15:10,240 --> 00:15:15,680
as a desktop display

391
00:15:12,160 --> 00:15:20,079
and the the application or the

392
00:15:15,680 --> 00:15:22,880
xr runtime can render to it directly

393
00:15:20,079 --> 00:15:23,680
it's based on a work by keith packard

394
00:15:22,880 --> 00:15:26,880
and he

395
00:15:23,680 --> 00:15:30,399
introduced the non-desktop

396
00:15:26,880 --> 00:15:31,920
property on on this place you can see it

397
00:15:30,399 --> 00:15:34,720
in xrnr maybe

398
00:15:31,920 --> 00:15:35,279
and you were wondering what this is um

399
00:15:34,720 --> 00:15:38,399
and

400
00:15:35,279 --> 00:15:40,160
it has the advantage of not only that

401
00:15:38,399 --> 00:15:42,480
windows don't show up like desktop

402
00:15:40,160 --> 00:15:45,839
windows don't show up on your display

403
00:15:42,480 --> 00:15:46,800
uh by mistake uh it also has the

404
00:15:45,839 --> 00:15:49,360
advantage that

405
00:15:46,800 --> 00:15:49,920
you can render with a native refresh

406
00:15:49,360 --> 00:15:53,279
rate

407
00:15:49,920 --> 00:15:54,800
on the hmd for example hmds have usually

408
00:15:53,279 --> 00:15:58,880
a refresh rate of

409
00:15:54,800 --> 00:16:01,680
90 or like the more modern one 144

410
00:15:58,880 --> 00:16:03,759
and like all the desktop displays have

411
00:16:01,680 --> 00:16:08,719
just a refresh rate of 60.

412
00:16:03,759 --> 00:16:12,160
and in the old days of open source vr

413
00:16:08,720 --> 00:16:14,880
we were unlucky to run the the the

414
00:16:12,160 --> 00:16:17,519
the headset at the same refresh rate as

415
00:16:14,880 --> 00:16:20,639
the desktop so this was

416
00:16:17,519 --> 00:16:23,120
quite bad and this was resolved

417
00:16:20,639 --> 00:16:24,000
i guess early 2019 this landed in the

418
00:16:23,120 --> 00:16:26,160
stack

419
00:16:24,000 --> 00:16:28,880
so it needed a couple of changes so you

420
00:16:26,160 --> 00:16:32,399
need a fairly recent mesa for that

421
00:16:28,880 --> 00:16:34,720
and fairly recent uh xr and r and stuff

422
00:16:32,399 --> 00:16:35,519
and vulcan as well so the vulcan

423
00:16:34,720 --> 00:16:39,040
extension

424
00:16:35,519 --> 00:16:42,959
is called acquired x-lib display

425
00:16:39,040 --> 00:16:46,160
and as soon as this was like available

426
00:16:42,959 --> 00:16:48,959
i implemented it in xr gears this is a

427
00:16:46,160 --> 00:16:52,800
demo application i wrote

428
00:16:48,959 --> 00:16:57,199
that renders a stereo scene

429
00:16:52,800 --> 00:17:00,719
in vulcan and it is the gears

430
00:16:57,199 --> 00:17:00,719
you know them and

431
00:17:01,040 --> 00:17:05,280
it uses this extension as a reference

432
00:17:04,319 --> 00:17:07,599
implementation

433
00:17:05,280 --> 00:17:08,639
i also had other back ends like extended

434
00:17:07,599 --> 00:17:10,240
mode so

435
00:17:08,640 --> 00:17:13,760
if you don't render directly to the

436
00:17:10,240 --> 00:17:13,760
display it's called extended mode

437
00:17:14,240 --> 00:17:21,520
and i had extended modes in

438
00:17:17,679 --> 00:17:24,959
wayland and xcb and also a kms

439
00:17:21,520 --> 00:17:28,240
backhand i guess for intel what

440
00:17:24,959 --> 00:17:32,000
i the work i did here later became

441
00:17:28,240 --> 00:17:34,720
the basis for the compositor in monado

442
00:17:32,000 --> 00:17:36,240
so monado is our open source runtime we

443
00:17:34,720 --> 00:17:39,760
develop at collabora

444
00:17:36,240 --> 00:17:42,240
our open source open xr runtime and

445
00:17:39,760 --> 00:17:44,400
one aspect of the runtime is to provide

446
00:17:42,240 --> 00:17:46,559
all of the stuff so the application

447
00:17:44,400 --> 00:17:48,960
doesn't need to deal with it so the

448
00:17:46,559 --> 00:17:52,000
runtime has this compositor that opens

449
00:17:48,960 --> 00:17:54,480
at least the display and you only have

450
00:17:52,000 --> 00:17:57,520
the standard api

451
00:17:54,480 --> 00:18:00,720
to submit frames to that

452
00:17:57,520 --> 00:18:01,840
and later i made a second iteration of

453
00:18:00,720 --> 00:18:04,160
this application

454
00:18:01,840 --> 00:18:07,280
which is just an open xr client which

455
00:18:04,160 --> 00:18:12,080
makes the code like

456
00:18:07,280 --> 00:18:15,200
reduces it by one by one half at least

457
00:18:12,080 --> 00:18:18,799
and on wayland um the situation

458
00:18:15,200 --> 00:18:21,440
was uh uh

459
00:18:18,799 --> 00:18:23,280
was different so there this needed to be

460
00:18:21,440 --> 00:18:26,799
implemented on ireland as well

461
00:18:23,280 --> 00:18:28,720
um and uh if you want to know details

462
00:18:26,799 --> 00:18:31,600
about direct mode on weldon it was

463
00:18:28,720 --> 00:18:33,600
mostly done by drew dewalt and a

464
00:18:31,600 --> 00:18:37,520
protocol was specified by

465
00:18:33,600 --> 00:18:38,159
nxp it's called their drm lease unstable

466
00:18:37,520 --> 00:18:41,360
v1

467
00:18:38,160 --> 00:18:45,200
and the vulcan extension is also called

468
00:18:41,360 --> 00:18:46,559
similarly as for x this also supports

469
00:18:45,200 --> 00:18:51,120
xvalent clients

470
00:18:46,559 --> 00:18:53,760
that means you can run an x application

471
00:18:51,120 --> 00:18:55,360
with that as well and it will utilize

472
00:18:53,760 --> 00:18:57,919
the direct mode

473
00:18:55,360 --> 00:18:59,199
this is a screenshot from drew he did

474
00:18:57,919 --> 00:19:01,840
that through the lens

475
00:18:59,200 --> 00:19:03,840
so you can actually see that it runs on

476
00:19:01,840 --> 00:19:06,320
the display

477
00:19:03,840 --> 00:19:07,280
and it's not like all of this is not

478
00:19:06,320 --> 00:19:10,080
upstream yet

479
00:19:07,280 --> 00:19:10,960
i guess there is a merge request for the

480
00:19:10,080 --> 00:19:13,678
vulcan spec

481
00:19:10,960 --> 00:19:14,160
specification uh this this protocol

482
00:19:13,679 --> 00:19:17,280
needs to

483
00:19:14,160 --> 00:19:19,200
be implemented in the whalen compositor

484
00:19:17,280 --> 00:19:20,320
uh so you need to have a compositor that

485
00:19:19,200 --> 00:19:22,000
implements that

486
00:19:20,320 --> 00:19:24,080
and there is a branch for monado for the

487
00:19:22,000 --> 00:19:28,240
runtime so it can actually utilize

488
00:19:24,080 --> 00:19:33,360
that so now we have

489
00:19:28,240 --> 00:19:33,360
the the hmd working like display working

490
00:19:34,799 --> 00:19:40,559
and we need to get some tracking data

491
00:19:37,840 --> 00:19:41,840
i wanted to point out some some notable

492
00:19:40,559 --> 00:19:44,720
open source

493
00:19:41,840 --> 00:19:46,320
tracking projects most prominently maybe

494
00:19:44,720 --> 00:19:48,960
open hmd

495
00:19:46,320 --> 00:19:50,240
funny thing is that openhd has a buff

496
00:19:48,960 --> 00:19:52,799
going on right now

497
00:19:50,240 --> 00:19:55,200
so they are not attending at this talk i

498
00:19:52,799 --> 00:19:57,200
can talk whatever i want about them

499
00:19:55,200 --> 00:19:59,120
hopefully i won't see the video no but

500
00:19:57,200 --> 00:20:02,400
openhmd is a

501
00:19:59,120 --> 00:20:04,879
community of enthusiasts and they have

502
00:20:02,400 --> 00:20:06,080
their methods and tools to to get

503
00:20:04,880 --> 00:20:09,360
support for hardware

504
00:20:06,080 --> 00:20:10,240
pretty quickly so they analyze the hit

505
00:20:09,360 --> 00:20:13,760
protocol

506
00:20:10,240 --> 00:20:17,280
the display is having the hmd is having

507
00:20:13,760 --> 00:20:18,799
over usb with the pc and try to

508
00:20:17,280 --> 00:20:21,678
implement that

509
00:20:18,799 --> 00:20:22,400
and mostly what uh is there in h

510
00:20:21,679 --> 00:20:26,320
openation d

511
00:20:22,400 --> 00:20:28,400
is treat of tracking so they have it

512
00:20:26,320 --> 00:20:30,799
it's uh rather quickly to get a new

513
00:20:28,400 --> 00:20:33,520
headset supported with freedof tracking

514
00:20:30,799 --> 00:20:34,480
so just the imu but it's more

515
00:20:33,520 --> 00:20:38,158
complicated

516
00:20:34,480 --> 00:20:40,159
to get uh positional tracking done

517
00:20:38,159 --> 00:20:41,679
and open hmd is currently implementing

518
00:20:40,159 --> 00:20:44,159
positional tracking

519
00:20:41,679 --> 00:20:45,360
for the oculus cv one this is work done

520
00:20:44,159 --> 00:20:48,559
by philip sabal

521
00:20:45,360 --> 00:20:51,439
and jan schmidt they also

522
00:20:48,559 --> 00:20:53,360
did a couple of talks about this in the

523
00:20:51,440 --> 00:20:56,559
past

524
00:20:53,360 --> 00:20:59,678
maybe other projects i

525
00:20:56,559 --> 00:21:00,799
should point out here so there are many

526
00:20:59,679 --> 00:21:03,039
projects that

527
00:21:00,799 --> 00:21:04,240
that actually provide low level access

528
00:21:03,039 --> 00:21:07,039
to the device

529
00:21:04,240 --> 00:21:08,720
but they don't provide a consistent api

530
00:21:07,039 --> 00:21:11,679
for applications and the rather

531
00:21:08,720 --> 00:21:12,480
like experiments also one slam i want to

532
00:21:11,679 --> 00:21:17,840
point out is

533
00:21:12,480 --> 00:21:17,840
matlab it's a pretty decent slam

534
00:21:18,000 --> 00:21:22,640
slam is usually used by robotics and

535
00:21:21,120 --> 00:21:25,439
used in research a lot

536
00:21:22,640 --> 00:21:28,320
so but there are several open source

537
00:21:25,440 --> 00:21:31,520
implementations

538
00:21:28,320 --> 00:21:34,720
what i was doing uh back in the day

539
00:21:31,520 --> 00:21:37,600
this is uh from 2017

540
00:21:34,720 --> 00:21:39,200
um we worked on a project called wife

541
00:21:37,600 --> 00:21:42,559
lieber

542
00:21:39,200 --> 00:21:45,760
and here you can see uh the lighthouse

543
00:21:42,559 --> 00:21:49,200
tracking we implemented so

544
00:21:45,760 --> 00:21:52,158
we this code is based on openhmd

545
00:21:49,200 --> 00:21:54,799
and the lighthouse redux documentation

546
00:21:52,159 --> 00:21:57,840
and this is just a map lab

547
00:21:54,799 --> 00:21:58,400
visualization of what we have here so

548
00:21:57,840 --> 00:22:01,199
here are

549
00:21:58,400 --> 00:22:03,120
these points is the headset basically uh

550
00:22:01,200 --> 00:22:04,480
seen from the base station the one with

551
00:22:03,120 --> 00:22:06,639
the rotors

552
00:22:04,480 --> 00:22:09,039
you've seen before and this is the

553
00:22:06,640 --> 00:22:11,760
configuration file from the headset

554
00:22:09,039 --> 00:22:12,559
you can read out as json these are the

555
00:22:11,760 --> 00:22:15,440
positions

556
00:22:12,559 --> 00:22:16,480
and the normals of the sensors on the

557
00:22:15,440 --> 00:22:19,840
headset

558
00:22:16,480 --> 00:22:22,880
and with the data from the sensors

559
00:22:19,840 --> 00:22:26,000
we could reconstruct these

560
00:22:22,880 --> 00:22:28,159
so called station view and with a

561
00:22:26,000 --> 00:22:29,120
simple algorithm from opencv it's called

562
00:22:28,159 --> 00:22:31,520
a pnp

563
00:22:29,120 --> 00:22:32,479
point and point algorithm you can give

564
00:22:31,520 --> 00:22:35,039
this algorithm

565
00:22:32,480 --> 00:22:36,480
a bunch of 2d points and a bunch of 3d

566
00:22:35,039 --> 00:22:39,360
points and then it

567
00:22:36,480 --> 00:22:40,000
calculates the position in 3d space

568
00:22:39,360 --> 00:22:43,360
according

569
00:22:40,000 --> 00:22:47,280
to the camera and

570
00:22:43,360 --> 00:22:50,320
so this was when we prototyped

571
00:22:47,280 --> 00:22:52,399
the the lighthouse tracking and

572
00:22:50,320 --> 00:22:54,399
the project or the code was picked up by

573
00:22:52,400 --> 00:22:58,320
a project called lip survive

574
00:22:54,400 --> 00:22:59,760
and it is a free and open source

575
00:22:58,320 --> 00:23:02,799
lighthouse driver

576
00:22:59,760 --> 00:23:05,600
they added many things to our work

577
00:23:02,799 --> 00:23:06,320
like proper filtering so filtering is

578
00:23:05,600 --> 00:23:08,959
the

579
00:23:06,320 --> 00:23:10,000
complicated part of getting multiple

580
00:23:08,960 --> 00:23:12,480
sensor data so

581
00:23:10,000 --> 00:23:14,480
sensor fusion and filtering are kind of

582
00:23:12,480 --> 00:23:16,720
synonymous

583
00:23:14,480 --> 00:23:18,960
and they also added support for

584
00:23:16,720 --> 00:23:22,480
controllers

585
00:23:18,960 --> 00:23:25,679
and also support for newer headsets

586
00:23:22,480 --> 00:23:28,799
and they have multiple so called posers

587
00:23:25,679 --> 00:23:30,880
that just multiple backends that can

588
00:23:28,799 --> 00:23:31,918
that are competing at the same task to

589
00:23:30,880 --> 00:23:35,360
to figure out which

590
00:23:31,919 --> 00:23:36,159
which approach is the best the project

591
00:23:35,360 --> 00:23:39,360
was done

592
00:23:36,159 --> 00:23:42,240
by a guy called cnlor this is him

593
00:23:39,360 --> 00:23:43,678
running the code on the raspberry pi i

594
00:23:42,240 --> 00:23:45,039
guess he's also doing the rendering on

595
00:23:43,679 --> 00:23:46,880
the raspberry pi which is

596
00:23:45,039 --> 00:23:48,640
pretty nice and this is not all

597
00:23:46,880 --> 00:23:51,039
raspberry i guess this is a version two

598
00:23:48,640 --> 00:23:53,440
or something

599
00:23:51,039 --> 00:23:54,640
and we have a branch christopher my

600
00:23:53,440 --> 00:23:58,559
colleague christoph

601
00:23:54,640 --> 00:24:01,279
implemented lip survive in monado

602
00:23:58,559 --> 00:24:03,200
so it's actually now usable with the

603
00:24:01,279 --> 00:24:06,000
opendxr api

604
00:24:03,200 --> 00:24:06,559
and just so you don't need to read this

605
00:24:06,000 --> 00:24:08,960
um

606
00:24:06,559 --> 00:24:11,600
just to show how many open source slam

607
00:24:08,960 --> 00:24:13,840
implementations there are

608
00:24:11,600 --> 00:24:15,760
there are quite a lot they have

609
00:24:13,840 --> 00:24:19,360
different versions and different

610
00:24:15,760 --> 00:24:21,440
quality of projects most most of them

611
00:24:19,360 --> 00:24:24,000
are from from academia

612
00:24:21,440 --> 00:24:25,120
and there is a site openslam.org that

613
00:24:24,000 --> 00:24:28,320
catalog

614
00:24:25,120 --> 00:24:30,879
guys all of them but

615
00:24:28,320 --> 00:24:32,240
we in for monado we will choose one for

616
00:24:30,880 --> 00:24:34,159
you

617
00:24:32,240 --> 00:24:35,760
in the near future so you don't need to

618
00:24:34,159 --> 00:24:38,000
choose that

619
00:24:35,760 --> 00:24:40,240
but there's a lot of going on in open

620
00:24:38,000 --> 00:24:44,400
source slam

621
00:24:40,240 --> 00:24:48,640
i i mentioned this couple of times now

622
00:24:44,400 --> 00:24:52,159
openexr is a standard api from chronos

623
00:24:48,640 --> 00:24:54,559
like opengl and vulkan and

624
00:24:52,159 --> 00:24:55,520
it tries to achieve a problem the

625
00:24:54,559 --> 00:24:59,360
industry had

626
00:24:55,520 --> 00:24:59,760
before open xr before open xr we had

627
00:24:59,360 --> 00:25:02,719
only

628
00:24:59,760 --> 00:25:03,840
vendor-specific apis so most vendors

629
00:25:02,720 --> 00:25:05,919
that did a headset

630
00:25:03,840 --> 00:25:08,720
also did their api that means that

631
00:25:05,919 --> 00:25:11,039
applications were not portable

632
00:25:08,720 --> 00:25:12,640
it was mostly the abstraction was done

633
00:25:11,039 --> 00:25:15,200
by the engines

634
00:25:12,640 --> 00:25:16,159
like unity and unreal so most of the

635
00:25:15,200 --> 00:25:18,799
projects

636
00:25:16,159 --> 00:25:19,200
uh used for example unity so they could

637
00:25:18,799 --> 00:25:22,158
run

638
00:25:19,200 --> 00:25:23,520
on multiple vendors um but openxr

639
00:25:22,159 --> 00:25:24,720
transfer standardize tries to

640
00:25:23,520 --> 00:25:28,240
standardize that

641
00:25:24,720 --> 00:25:28,960
and we hope that it will get rapid

642
00:25:28,240 --> 00:25:32,159
adoption

643
00:25:28,960 --> 00:25:33,120
it was released last year so early 2019

644
00:25:32,159 --> 00:25:37,279
or

645
00:25:33,120 --> 00:25:41,279
something like that so it's still new

646
00:25:37,279 --> 00:25:44,400
but most of the big vendors

647
00:25:41,279 --> 00:25:47,360
are in in this specification

648
00:25:44,400 --> 00:25:48,640
uh or on on the on the in the group that

649
00:25:47,360 --> 00:25:52,158
specifies that

650
00:25:48,640 --> 00:25:54,880
and um we at collaborate decided to to

651
00:25:52,159 --> 00:25:57,919
implement this api as well

652
00:25:54,880 --> 00:26:01,200
and we did that in monado um

653
00:25:57,919 --> 00:26:04,320
our our open source runtime so

654
00:26:01,200 --> 00:26:07,919
monado implements openxr

655
00:26:04,320 --> 00:26:11,918
and provides the device drivers

656
00:26:07,919 --> 00:26:14,559
from for example open hmd or lip survive

657
00:26:11,919 --> 00:26:15,520
but it also has its own device drivers

658
00:26:14,559 --> 00:26:18,879
that we just

659
00:26:15,520 --> 00:26:21,840
write for monado in our internal

660
00:26:18,880 --> 00:26:24,400
driver library for example we have

661
00:26:21,840 --> 00:26:27,600
device drivers for the

662
00:26:24,400 --> 00:26:29,520
os vr hd k2 or we have

663
00:26:27,600 --> 00:26:31,279
we are currently working on a psvr

664
00:26:29,520 --> 00:26:35,520
driver

665
00:26:31,279 --> 00:26:37,440
which also will have positional tracking

666
00:26:35,520 --> 00:26:39,600
so my colleague pete blatt is working on

667
00:26:37,440 --> 00:26:42,799
that

668
00:26:39,600 --> 00:26:44,399
and i also recently wrote a native

669
00:26:42,799 --> 00:26:46,639
driver for

670
00:26:44,400 --> 00:26:47,919
for the vive and index family of

671
00:26:46,640 --> 00:26:50,720
headsets

672
00:26:47,919 --> 00:26:52,640
that's currently quite simple but it

673
00:26:50,720 --> 00:26:54,960
will evolve in the future

674
00:26:52,640 --> 00:26:56,720
so we as i mentioned already we have a

675
00:26:54,960 --> 00:26:59,520
vulcan compositor

676
00:26:56,720 --> 00:27:02,080
that's uh that opens the display for the

677
00:26:59,520 --> 00:27:05,120
application and communicates with that

678
00:27:02,080 --> 00:27:06,240
uh and we're currently working on sixth

679
00:27:05,120 --> 00:27:08,000
of tracking

680
00:27:06,240 --> 00:27:09,919
and as i mentioned we are also looking

681
00:27:08,000 --> 00:27:13,919
into providing slam for that

682
00:27:09,919 --> 00:27:16,720
so uh monado manages

683
00:27:13,919 --> 00:27:18,880
the devices the camera devices for

684
00:27:16,720 --> 00:27:20,799
example

685
00:27:18,880 --> 00:27:22,559
from from not only the cameras that

686
00:27:20,799 --> 00:27:26,399
track the headset but also

687
00:27:22,559 --> 00:27:26,399
cameras that are on the headset

688
00:27:26,640 --> 00:27:30,880
that could be used for video see through

689
00:27:28,640 --> 00:27:34,000
for example

690
00:27:30,880 --> 00:27:36,000
and this is a video

691
00:27:34,000 --> 00:27:37,919
from my colleague pete black he gave it

692
00:27:36,000 --> 00:27:41,120
to me today

693
00:27:37,919 --> 00:27:43,760
i think he never released that it's a

694
00:27:41,120 --> 00:27:45,520
example of his psvr tracking not sure if

695
00:27:43,760 --> 00:27:48,399
you know how the headset looks but

696
00:27:45,520 --> 00:27:50,240
here you see the emitters on the headset

697
00:27:48,399 --> 00:27:53,678
and

698
00:27:50,240 --> 00:27:56,880
the positions that are calculated

699
00:27:53,679 --> 00:27:59,120
by his algorithm so

700
00:27:56,880 --> 00:28:00,840
this is work in progress and soon you

701
00:27:59,120 --> 00:28:05,439
will have that

702
00:28:00,840 --> 00:28:08,879
exposed through the open xr api

703
00:28:05,440 --> 00:28:12,000
so this was a

704
00:28:08,880 --> 00:28:14,840
overview of of what's going on in

705
00:28:12,000 --> 00:28:17,039
in terms of drivers and tracking and

706
00:28:14,840 --> 00:28:20,720
runtimes

707
00:28:17,039 --> 00:28:23,120
and now since we have that now kind of

708
00:28:20,720 --> 00:28:24,480
we can build on top and what do we want

709
00:28:23,120 --> 00:28:27,360
to do with that what

710
00:28:24,480 --> 00:28:28,399
now we have vr in linux or in open

711
00:28:27,360 --> 00:28:32,399
source

712
00:28:28,399 --> 00:28:34,799
and one thing that can be done with that

713
00:28:32,399 --> 00:28:36,399
uh is the project i've been working on

714
00:28:34,799 --> 00:28:40,158
for the recent time

715
00:28:36,399 --> 00:28:43,918
and it was released i guess

716
00:28:40,159 --> 00:28:47,120
uh mid 2019 so

717
00:28:43,919 --> 00:28:51,279
it's xr desktop and

718
00:28:47,120 --> 00:28:54,158
in excel desktop we have

719
00:28:51,279 --> 00:28:54,880
made a stack of libraries that interface

720
00:28:54,159 --> 00:28:57,360
with

721
00:28:54,880 --> 00:28:59,520
with existing window managers or

722
00:28:57,360 --> 00:29:02,719
compositors

723
00:28:59,520 --> 00:29:06,879
like this this is for example gnome

724
00:29:02,720 --> 00:29:09,600
shell we get the window buffers from

725
00:29:06,880 --> 00:29:10,720
gnome shell and and can display them in

726
00:29:09,600 --> 00:29:13,840
vr

727
00:29:10,720 --> 00:29:15,520
and uh what all we also do is to get the

728
00:29:13,840 --> 00:29:18,959
input from the controllers

729
00:29:15,520 --> 00:29:22,559
and synthesize this so uh

730
00:29:18,960 --> 00:29:26,240
the the 2d desktop receives mouse and

731
00:29:22,559 --> 00:29:29,600
keyboard strokes like uh

732
00:29:26,240 --> 00:29:30,399
3d desktops where are not new like there

733
00:29:29,600 --> 00:29:33,918
were several

734
00:29:30,399 --> 00:29:37,279
open source 3d desktops or vr desktops

735
00:29:33,919 --> 00:29:39,840
um but what is new in our approach

736
00:29:37,279 --> 00:29:41,520
is that we try to interface with the

737
00:29:39,840 --> 00:29:44,639
existing window manager

738
00:29:41,520 --> 00:29:47,600
so that you don't run the 3d desktop

739
00:29:44,640 --> 00:29:48,320
separately separated from your regular

740
00:29:47,600 --> 00:29:50,639
desktop

741
00:29:48,320 --> 00:29:51,600
but you can just mirror the existing

742
00:29:50,640 --> 00:29:55,039
desktop

743
00:29:51,600 --> 00:29:55,918
and this is something that was sponsored

744
00:29:55,039 --> 00:29:59,039
by valve

745
00:29:55,919 --> 00:30:01,360
so thank you for that without them extra

746
00:29:59,039 --> 00:30:05,360
desktop wouldn't be

747
00:30:01,360 --> 00:30:07,678
what it is right now and i have

748
00:30:05,360 --> 00:30:09,520
a demo not a live demo but i have a

749
00:30:07,679 --> 00:30:12,640
video

750
00:30:09,520 --> 00:30:15,679
since doing live demos uh

751
00:30:12,640 --> 00:30:16,159
when with vr is kind of crazy i guess

752
00:30:15,679 --> 00:30:22,159
but

753
00:30:16,159 --> 00:30:25,679
i have colleagues to do that so

754
00:30:22,159 --> 00:30:29,520
this is me using inkscape

755
00:30:25,679 --> 00:30:31,600
uh in in in vr so um

756
00:30:29,520 --> 00:30:33,360
what you can see here is that i i'm

757
00:30:31,600 --> 00:30:35,120
dragging the window around and i'm

758
00:30:33,360 --> 00:30:37,760
moving it close to me

759
00:30:35,120 --> 00:30:39,678
so if you move things closer then you

760
00:30:37,760 --> 00:30:42,320
have more precision

761
00:30:39,679 --> 00:30:43,039
you can of course use it from far away

762
00:30:42,320 --> 00:30:45,360
but

763
00:30:43,039 --> 00:30:46,640
there will be an accumulation of error

764
00:30:45,360 --> 00:30:49,918
in the tracking of

765
00:30:46,640 --> 00:30:53,360
handshaking there's also something

766
00:30:49,919 --> 00:30:55,679
you have to think about because you are

767
00:30:53,360 --> 00:30:57,439
holding the controller in your free hand

768
00:30:55,679 --> 00:30:59,760
and it's not on the table like with the

769
00:30:57,440 --> 00:31:03,120
mouse so you have handshaking

770
00:30:59,760 --> 00:31:04,000
and i'm i'm showing my my insane drawing

771
00:31:03,120 --> 00:31:07,279
skills in inkscape

772
00:31:04,000 --> 00:31:11,200
here um

773
00:31:07,279 --> 00:31:12,320
and um yeah as you can see we have the

774
00:31:11,200 --> 00:31:15,760
cursor

775
00:31:12,320 --> 00:31:19,678
that is shown on the desktop as well

776
00:31:15,760 --> 00:31:21,919
in in vr and it is shown at the position

777
00:31:19,679 --> 00:31:24,000
of the end of your ray so called ray

778
00:31:21,919 --> 00:31:26,240
from the controller

779
00:31:24,000 --> 00:31:29,120
and this is just one game from gnome

780
00:31:26,240 --> 00:31:32,159
games that i try to solve

781
00:31:29,120 --> 00:31:34,479
as you can see we also when you click on

782
00:31:32,159 --> 00:31:38,559
on the end of the pointer

783
00:31:34,480 --> 00:31:42,000
there is animation emitted and

784
00:31:38,559 --> 00:31:43,840
this was a model dialog right now so if

785
00:31:42,000 --> 00:31:47,440
the model dialog is opened

786
00:31:43,840 --> 00:31:50,480
we overlay it in 3d space over

787
00:31:47,440 --> 00:31:53,919
the the window as well which is

788
00:31:50,480 --> 00:31:56,559
which has had to be implemented uh

789
00:31:53,919 --> 00:31:57,440
it's not like appearing in the zero

790
00:31:56,559 --> 00:32:00,639
position of the

791
00:31:57,440 --> 00:32:01,360
world and a solitaire is actually a nice

792
00:32:00,640 --> 00:32:05,200
thing to do

793
00:32:01,360 --> 00:32:08,879
in in vr every time i i do a longer test

794
00:32:05,200 --> 00:32:11,200
i i play a round of solitaire i guess

795
00:32:08,880 --> 00:32:12,880
so this is krita also has a modern

796
00:32:11,200 --> 00:32:16,399
dialogue so

797
00:32:12,880 --> 00:32:16,799
the the actual widgets rendered as they

798
00:32:16,399 --> 00:32:21,760
are

799
00:32:16,799 --> 00:32:24,960
done usually and we get the buffer from

800
00:32:21,760 --> 00:32:26,720
from the window manager and this demo is

801
00:32:24,960 --> 00:32:29,840
showing no but we

802
00:32:26,720 --> 00:32:34,559
have also integration for kde

803
00:32:29,840 --> 00:32:37,279
and i'm using krita to draw in vr

804
00:32:34,559 --> 00:32:39,039
of course there could be many

805
00:32:37,279 --> 00:32:41,600
improvements for example one

806
00:32:39,039 --> 00:32:43,679
feature i heard many people would like

807
00:32:41,600 --> 00:32:45,760
to have also my corey christoph

808
00:32:43,679 --> 00:32:47,440
is that you put like other windows on

809
00:32:45,760 --> 00:32:50,960
the right hand and you could just

810
00:32:47,440 --> 00:32:54,320
use the color picker on your hands

811
00:32:50,960 --> 00:32:57,679
and to to interface

812
00:32:54,320 --> 00:33:01,600
better with the 2d application

813
00:32:57,679 --> 00:33:05,440
so let's skip a bit forward

814
00:33:01,600 --> 00:33:07,678
i'm browsing the web with cats so

815
00:33:05,440 --> 00:33:09,039
we on the controller you have a touchpad

816
00:33:07,679 --> 00:33:12,480
and you can just scroll

817
00:33:09,039 --> 00:33:12,480
feeds as you are used to

818
00:33:12,720 --> 00:33:16,320
and this is also another example of a

819
00:33:14,559 --> 00:33:20,320
modern dialogue

820
00:33:16,320 --> 00:33:20,320
so it's quite usable if you get used to

821
00:33:22,840 --> 00:33:25,840
it

822
00:33:26,559 --> 00:33:28,960
okay

823
00:33:35,039 --> 00:33:43,360
so another interesting concept

824
00:33:38,960 --> 00:33:46,960
in xr is the concept of actions

825
00:33:43,360 --> 00:33:48,639
in traditional games or input systems

826
00:33:46,960 --> 00:33:50,559
like sdl

827
00:33:48,640 --> 00:33:52,080
you were listening for example for the

828
00:33:50,559 --> 00:33:54,960
space bar

829
00:33:52,080 --> 00:33:55,600
or looking if you got an event from the

830
00:33:54,960 --> 00:33:58,720
space bar

831
00:33:55,600 --> 00:34:01,279
press or release or mouse clicks

832
00:33:58,720 --> 00:34:03,039
and with an action system this is kind

833
00:34:01,279 --> 00:34:06,399
of decoupled

834
00:34:03,039 --> 00:34:07,679
so now we don't check if the space bar

835
00:34:06,399 --> 00:34:10,078
is pressed

836
00:34:07,679 --> 00:34:12,159
but we check if the user wants to jump

837
00:34:10,079 --> 00:34:15,359
for example

838
00:34:12,159 --> 00:34:16,960
this is necessary since xr controllers

839
00:34:15,359 --> 00:34:19,679
are very heterogeneous

840
00:34:16,960 --> 00:34:20,000
and the the heck the pc gaming industry

841
00:34:19,679 --> 00:34:23,040
did

842
00:34:20,000 --> 00:34:23,760
and just supposed everyone has an xbox

843
00:34:23,040 --> 00:34:26,800
controller

844
00:34:23,760 --> 00:34:28,720
doesn't work anymore so there is

845
00:34:26,800 --> 00:34:31,520
something called

846
00:34:28,719 --> 00:34:33,279
actions and bindings and the actions are

847
00:34:31,520 --> 00:34:35,599
defined by the application

848
00:34:33,280 --> 00:34:36,480
i want to jump and this is a boolean

849
00:34:35,599 --> 00:34:38,560
operation

850
00:34:36,480 --> 00:34:39,599
or i want to move forward and this is an

851
00:34:38,560 --> 00:34:42,399
analog

852
00:34:39,599 --> 00:34:44,320
operation for example and the bindings

853
00:34:42,399 --> 00:34:47,598
need to be created

854
00:34:44,320 --> 00:34:48,399
by the runtime or by the user that has

855
00:34:47,599 --> 00:34:50,480
the device

856
00:34:48,399 --> 00:34:51,839
that means oh i have this controller

857
00:34:50,480 --> 00:34:54,879
here this uh

858
00:34:51,839 --> 00:34:55,279
this presentation controller and if i

859
00:34:54,879 --> 00:34:58,000
press

860
00:34:55,280 --> 00:34:59,359
the right button the the thing should

861
00:34:58,000 --> 00:35:02,480
jump

862
00:34:59,359 --> 00:35:05,119
and this is available in

863
00:35:02,480 --> 00:35:06,400
in the openvr api which is the api

864
00:35:05,119 --> 00:35:09,599
steamvr uses

865
00:35:06,400 --> 00:35:12,960
and as well in the openxr

866
00:35:09,599 --> 00:35:14,400
api usually like an openvr this is

867
00:35:12,960 --> 00:35:17,599
specified by json

868
00:35:14,400 --> 00:35:20,800
in openxr it's specified in code

869
00:35:17,599 --> 00:35:23,040
but on our open xr branch

870
00:35:20,800 --> 00:35:23,920
for extra desktop we also have a json

871
00:35:23,040 --> 00:35:27,599
format that's

872
00:35:23,920 --> 00:35:27,599
quite similar to this one

873
00:35:27,920 --> 00:35:32,000
so this is how the mappings look for

874
00:35:29,760 --> 00:35:35,599
extra desktop in particular

875
00:35:32,000 --> 00:35:36,400
this is the index controller we have two

876
00:35:35,599 --> 00:35:39,839
different

877
00:35:36,400 --> 00:35:40,800
sets of actions um one set is for

878
00:35:39,839 --> 00:35:43,279
interacting

879
00:35:40,800 --> 00:35:44,720
in 3d with the windows and the other set

880
00:35:43,280 --> 00:35:47,760
is for doing the

881
00:35:44,720 --> 00:35:50,319
2d desktop operations like

882
00:35:47,760 --> 00:35:53,599
right click left click and scroll and

883
00:35:50,320 --> 00:35:55,920
the 3d operations are

884
00:35:53,599 --> 00:35:57,119
pushing and pulling the window in that

885
00:35:55,920 --> 00:36:00,079
space or on the

886
00:35:57,119 --> 00:36:01,680
axis and opening menu and stuff like

887
00:36:00,079 --> 00:36:04,800
that

888
00:36:01,680 --> 00:36:07,598
so this is also translatable to the

889
00:36:04,800 --> 00:36:07,599
other controllers

890
00:36:11,760 --> 00:36:15,839
so let's let's look at some software in

891
00:36:14,720 --> 00:36:18,959
our stack

892
00:36:15,839 --> 00:36:21,839
uh on the very bottom we wrote

893
00:36:18,960 --> 00:36:24,160
like our stack it's written in g lab and

894
00:36:21,839 --> 00:36:26,880
we introduced a couple of jlip libraries

895
00:36:24,160 --> 00:36:28,240
for example gold khan is our vulcan

896
00:36:26,880 --> 00:36:31,760
abstraction library

897
00:36:28,240 --> 00:36:35,359
where we do some things we require to

898
00:36:31,760 --> 00:36:39,119
to display windows in in 3d

899
00:36:35,359 --> 00:36:42,560
and render objects we have gxr

900
00:36:39,119 --> 00:36:46,480
which is the library that abstracts both

901
00:36:42,560 --> 00:36:49,599
open xr and openvr apis

902
00:36:46,480 --> 00:36:52,480
so you can write an application in gxr

903
00:36:49,599 --> 00:36:54,079
that actually runs on both apis and in

904
00:36:52,480 --> 00:36:56,560
excel desktop

905
00:36:54,079 --> 00:36:58,480
which is also a library we provide two

906
00:36:56,560 --> 00:37:01,200
types of applications

907
00:36:58,480 --> 00:37:03,359
um the one is an overlay application

908
00:37:01,200 --> 00:37:06,480
this means that the scene is rendered

909
00:37:03,359 --> 00:37:07,520
by the vr runtime and we just supply the

910
00:37:06,480 --> 00:37:09,839
windows

911
00:37:07,520 --> 00:37:11,599
and we have also scene application which

912
00:37:09,839 --> 00:37:13,520
means where we render the full scene

913
00:37:11,599 --> 00:37:16,720
where we render the stereo buffers and

914
00:37:13,520 --> 00:37:20,240
submit the final stereo buffer rendering

915
00:37:16,720 --> 00:37:20,959
to the runtime the overlay app has the

916
00:37:20,240 --> 00:37:23,279
advantage

917
00:37:20,960 --> 00:37:24,400
that you can use that you can see the

918
00:37:23,280 --> 00:37:27,520
windows

919
00:37:24,400 --> 00:37:28,240
uh drawn over a vr application that

920
00:37:27,520 --> 00:37:31,040
you're running

921
00:37:28,240 --> 00:37:32,240
it means you can play a game and see

922
00:37:31,040 --> 00:37:34,960
desktop windows

923
00:37:32,240 --> 00:37:36,879
and the other the scene app has the

924
00:37:34,960 --> 00:37:38,000
advantage that we have full control of

925
00:37:36,880 --> 00:37:40,079
the renderer

926
00:37:38,000 --> 00:37:41,119
and can display as many windows as we

927
00:37:40,079 --> 00:37:44,480
want this

928
00:37:41,119 --> 00:37:46,640
the other one has limitations lip input

929
00:37:44,480 --> 00:37:49,839
synth is the library where we

930
00:37:46,640 --> 00:37:51,680
do button presses and mouse clicks and

931
00:37:49,839 --> 00:37:53,839
mouse position manipulation

932
00:37:51,680 --> 00:37:56,240
we have several back-ends for that for

933
00:37:53,839 --> 00:37:58,480
example xd0 on x11

934
00:37:56,240 --> 00:38:00,399
and there's also stuff for weyland in

935
00:37:58,480 --> 00:38:02,320
there

936
00:38:00,400 --> 00:38:04,480
and this is how we interface basically

937
00:38:02,320 --> 00:38:07,839
with with the window manager

938
00:38:04,480 --> 00:38:11,040
uh on on k1 for kde

939
00:38:07,839 --> 00:38:13,680
there is a plugin that can be loaded

940
00:38:11,040 --> 00:38:15,200
which is quite convenient since we don't

941
00:38:13,680 --> 00:38:17,839
need to fork k1

942
00:38:15,200 --> 00:38:18,480
uh on gnome shell the situation is

943
00:38:17,839 --> 00:38:21,040
different

944
00:38:18,480 --> 00:38:22,880
we need to home shell to to

945
00:38:21,040 --> 00:38:24,960
interface with it

946
00:38:22,880 --> 00:38:27,200
but this will hopefully change in the

947
00:38:24,960 --> 00:38:30,880
near future when i do my upstream

948
00:38:27,200 --> 00:38:33,919
work and um

949
00:38:30,880 --> 00:38:37,680
so again a lip input synth

950
00:38:33,920 --> 00:38:40,800
was required so we can actually

951
00:38:37,680 --> 00:38:43,759
also do clicks on the desktop

952
00:38:40,800 --> 00:38:43,760
that runs uh

953
00:38:44,160 --> 00:38:50,960
in at the same time as as we do it in vr

954
00:38:49,119 --> 00:38:53,040
which wouldn't be required if we had a

955
00:38:50,960 --> 00:38:55,200
standalone vr compositor

956
00:38:53,040 --> 00:38:56,720
this is just required because we want to

957
00:38:55,200 --> 00:39:00,000
run on both

958
00:38:56,720 --> 00:39:02,640
um yes

959
00:39:00,000 --> 00:39:04,320
and i talked about it already um so how

960
00:39:02,640 --> 00:39:07,839
do we share the window buffers

961
00:39:04,320 --> 00:39:09,280
um we do zero copy operation on the so

962
00:39:07,839 --> 00:39:09,839
we don't download the windows from the

963
00:39:09,280 --> 00:39:12,079
gpu

964
00:39:09,839 --> 00:39:13,759
the all the window buffers stay on the

965
00:39:12,079 --> 00:39:17,280
gpu

966
00:39:13,760 --> 00:39:20,880
we use a gl vulcan interrupt because

967
00:39:17,280 --> 00:39:23,200
sadly the compositors are still using gl

968
00:39:20,880 --> 00:39:24,800
which is not a big problem since there

969
00:39:23,200 --> 00:39:27,520
are extensions available

970
00:39:24,800 --> 00:39:29,200
to share memory between them so this is

971
00:39:27,520 --> 00:39:33,040
how the extensions

972
00:39:29,200 --> 00:39:35,680
are called in vulcan ngl accordingly

973
00:39:33,040 --> 00:39:37,599
unfortunately on intel this extension is

974
00:39:35,680 --> 00:39:40,960
not implemented as far as i know

975
00:39:37,599 --> 00:39:40,960
so this is a limitation

976
00:39:41,359 --> 00:39:44,480
on intel the extension is not

977
00:39:43,440 --> 00:39:47,920
implemented in gl

978
00:39:44,480 --> 00:39:52,160
that means if we had a vulcan

979
00:39:47,920 --> 00:39:56,560
window manager it would be fine and

980
00:39:52,160 --> 00:39:57,440
yes and the overlays are currently only

981
00:39:56,560 --> 00:40:00,880
implemented

982
00:39:57,440 --> 00:40:01,680
in the openvr implementation of xr

983
00:40:00,880 --> 00:40:05,920
desktop

984
00:40:01,680 --> 00:40:09,200
since um the the xr the openxr

985
00:40:05,920 --> 00:40:10,480
alternative or for that is called xr

986
00:40:09,200 --> 00:40:13,839
composition layer

987
00:40:10,480 --> 00:40:16,160
is currently not implemented in monado

988
00:40:13,839 --> 00:40:18,480
so we are working on that as well so

989
00:40:16,160 --> 00:40:21,920
this is an example of the scene renderer

990
00:40:18,480 --> 00:40:23,200
with my example image the the hawk from

991
00:40:21,920 --> 00:40:26,800
wikipedia

992
00:40:23,200 --> 00:40:26,799
we can render many hogs

993
00:40:27,440 --> 00:40:32,000
our upcoming release of extra desktop is

994
00:40:30,720 --> 00:40:34,078
coming soon

995
00:40:32,000 --> 00:40:35,359
so shortly after foster we will release

996
00:40:34,079 --> 00:40:37,440
euro 14

997
00:40:35,359 --> 00:40:39,040
it's our biggest release yet with the

998
00:40:37,440 --> 00:40:41,520
most lines of code

999
00:40:39,040 --> 00:40:45,119
changed no and most commits like we have

1000
00:40:41,520 --> 00:40:48,160
about 364 we are two developers

1001
00:40:45,119 --> 00:40:52,079
um we changed a bunch of apis so

1002
00:40:48,160 --> 00:40:53,680
it can run open xr and open vr backends

1003
00:40:52,079 --> 00:40:56,960
with the same code

1004
00:40:53,680 --> 00:41:00,000
um so look out for that it's already on

1005
00:40:56,960 --> 00:41:01,920
git master if you wonder

1006
00:41:00,000 --> 00:41:03,359
where to get extra desktop if you're

1007
00:41:01,920 --> 00:41:05,520
arch user you're lucky

1008
00:41:03,359 --> 00:41:07,119
we have very good i actually the

1009
00:41:05,520 --> 00:41:11,040
repository packages

1010
00:41:07,119 --> 00:41:13,359
we have ubuntu ppa which is

1011
00:41:11,040 --> 00:41:14,880
which is maintained but maybe not

1012
00:41:13,359 --> 00:41:17,359
updated currently but

1013
00:41:14,880 --> 00:41:20,160
we're working on that as well and of

1014
00:41:17,359 --> 00:41:20,880
course you can build it from source we

1015
00:41:20,160 --> 00:41:24,640
have a

1016
00:41:20,880 --> 00:41:27,280
wiki article on that so let's

1017
00:41:24,640 --> 00:41:28,799
take a quick look in our road map what

1018
00:41:27,280 --> 00:41:30,880
are we trying to do in the

1019
00:41:28,800 --> 00:41:32,640
near future we would like to have a

1020
00:41:30,880 --> 00:41:34,640
virtual keyboard

1021
00:41:32,640 --> 00:41:35,759
currently on openvr we are using the one

1022
00:41:34,640 --> 00:41:38,960
from steamvr

1023
00:41:35,760 --> 00:41:40,880
on openxr we currently don't have one

1024
00:41:38,960 --> 00:41:42,480
so it would be nice to have the same one

1025
00:41:40,880 --> 00:41:45,119
on both apis

1026
00:41:42,480 --> 00:41:46,880
we want to implement gltf loading so we

1027
00:41:45,119 --> 00:41:50,000
also have the controller models

1028
00:41:46,880 --> 00:41:51,280
on the open xr implementation and can

1029
00:41:50,000 --> 00:41:53,839
also maybe load other

1030
00:41:51,280 --> 00:41:54,319
cool models like a scene where you where

1031
00:41:53,839 --> 00:41:55,599
you

1032
00:41:54,319 --> 00:41:57,920
spend your time and when you're using

1033
00:41:55,599 --> 00:42:00,160
your desktop scripting

1034
00:41:57,920 --> 00:42:02,160
is also something we are looking out to

1035
00:42:00,160 --> 00:42:05,200
and for the maybe not

1036
00:42:02,160 --> 00:42:09,040
so near future uh i we wanted to do

1037
00:42:05,200 --> 00:42:12,560
a 3d widget toolkit i would call that

1038
00:42:09,040 --> 00:42:13,040
g3k um because we have a lot of code

1039
00:42:12,560 --> 00:42:15,440
that

1040
00:42:13,040 --> 00:42:17,279
is related to that but it's just not

1041
00:42:15,440 --> 00:42:18,720
nicely in one library and it doesn't

1042
00:42:17,280 --> 00:42:20,560
have a nice api

1043
00:42:18,720 --> 00:42:22,640
and with that we could do something

1044
00:42:20,560 --> 00:42:25,440
that's called maybe xr desktop shell

1045
00:42:22,640 --> 00:42:27,920
where you have not only windows floating

1046
00:42:25,440 --> 00:42:29,920
around but maybe a full

1047
00:42:27,920 --> 00:42:32,319
desktop experience with a clock and

1048
00:42:29,920 --> 00:42:35,599
widgets and workspaces

1049
00:42:32,319 --> 00:42:37,599
so this is uh the future also

1050
00:42:35,599 --> 00:42:39,200
what's maybe interesting is how to

1051
00:42:37,599 --> 00:42:42,720
interface with

1052
00:42:39,200 --> 00:42:45,680
2d toolkits so

1053
00:42:42,720 --> 00:42:47,200
we can also render from the 2d toolkit

1054
00:42:45,680 --> 00:42:49,919
directly into vr

1055
00:42:47,200 --> 00:42:50,799
without using the window manager which

1056
00:42:49,920 --> 00:42:54,480
is nicer

1057
00:42:50,800 --> 00:42:58,079
since we can do stuff like high dpi and

1058
00:42:54,480 --> 00:43:01,599
maybe nicer fonts for that we need

1059
00:42:58,079 --> 00:43:03,839
zero copy access to the toolkit gtk3 had

1060
00:43:01,599 --> 00:43:07,280
something called gtk off-screen window

1061
00:43:03,839 --> 00:43:10,319
and gsk it's different we need to access

1062
00:43:07,280 --> 00:43:13,280
gtk3 gtk4

1063
00:43:10,319 --> 00:43:15,680
it has now a scene graph it's called gsk

1064
00:43:13,280 --> 00:43:20,640
so they change a lot

1065
00:43:15,680 --> 00:43:20,640
and i have example for gtk 3 for that

1066
00:43:21,119 --> 00:43:25,040
native 3d ui so what do you need a 3d

1067
00:43:23,680 --> 00:43:28,480
widget toolkit for

1068
00:43:25,040 --> 00:43:31,520
is a nice thing since you can have

1069
00:43:28,480 --> 00:43:34,480
actual 3d widgets this is maybe

1070
00:43:31,520 --> 00:43:34,960
not 3d enough this is like a combination

1071
00:43:34,480 --> 00:43:37,200
between

1072
00:43:34,960 --> 00:43:38,319
2d and 3d but you can also have like

1073
00:43:37,200 --> 00:43:42,240
total 3d ui

1074
00:43:38,319 --> 00:43:43,920
like you would work with the reality

1075
00:43:42,240 --> 00:43:45,279
and this is i guess the way to move

1076
00:43:43,920 --> 00:43:48,160
forward to have

1077
00:43:45,280 --> 00:43:49,920
native 3d applications also font

1078
00:43:48,160 --> 00:43:53,598
rendering i want to

1079
00:43:49,920 --> 00:43:56,480
point out mozilla pathfinder which is a

1080
00:43:53,599 --> 00:43:58,400
font rendering 4xr and it's a virtual

1081
00:43:56,480 --> 00:44:01,760
licensed

1082
00:43:58,400 --> 00:44:04,240
and one more interesting thing is

1083
00:44:01,760 --> 00:44:05,280
what about 3d applications native 3d

1084
00:44:04,240 --> 00:44:07,520
applications

1085
00:44:05,280 --> 00:44:08,319
it would be nice to have a protocol for

1086
00:44:07,520 --> 00:44:11,359
that

1087
00:44:08,319 --> 00:44:13,680
so the renderer for the 3d application

1088
00:44:11,359 --> 00:44:15,200
could render for example a stereo buffer

1089
00:44:13,680 --> 00:44:18,560
and receive the position

1090
00:44:15,200 --> 00:44:21,200
from the compositor or we could also

1091
00:44:18,560 --> 00:44:22,720
supply native geometry to the compositor

1092
00:44:21,200 --> 00:44:25,040
which renders

1093
00:44:22,720 --> 00:44:26,240
the 3d application this would have the

1094
00:44:25,040 --> 00:44:30,240
advantage that we could

1095
00:44:26,240 --> 00:44:34,240
do transparencies occlusions and physics

1096
00:44:30,240 --> 00:44:38,720
if we use a real model for that

1097
00:44:34,240 --> 00:44:41,839
drudivault worked on that he has in his

1098
00:44:38,720 --> 00:44:44,879
project called wxrc

1099
00:44:41,839 --> 00:44:48,720
it's a 3d window manager or

1100
00:44:44,880 --> 00:44:51,440
vr window manager and

1101
00:44:48,720 --> 00:44:52,319
it can take application 3d applications

1102
00:44:51,440 --> 00:44:55,520
as clients

1103
00:44:52,319 --> 00:44:58,480
so he designs a whale protocol for that

1104
00:44:55,520 --> 00:44:59,680
it's pretty neat check it out it's a

1105
00:44:58,480 --> 00:45:02,960
demo

1106
00:44:59,680 --> 00:45:06,078
where he opens a

1107
00:45:02,960 --> 00:45:07,920
2d surfaces first but the most

1108
00:45:06,079 --> 00:45:12,400
interesting part for me

1109
00:45:07,920 --> 00:45:12,400
was when he opens a 3d application

1110
00:45:13,359 --> 00:45:18,160
and this is also something i would like

1111
00:45:16,160 --> 00:45:20,799
to see in xr desktop

1112
00:45:18,160 --> 00:45:22,078
and since he specified a protocol it's

1113
00:45:20,800 --> 00:45:25,839
pretty neat to implement that

1114
00:45:22,079 --> 00:45:25,839
and this is the 3d cube okay

1115
00:45:26,240 --> 00:45:30,560
yeah unfortunately sometimes libreoffice

1116
00:45:29,599 --> 00:45:34,160
doesn't want to

1117
00:45:30,560 --> 00:45:34,160
skip the slide if i have a video

1118
00:45:37,680 --> 00:45:41,440
now it did okay if you want to get

1119
00:45:39,920 --> 00:45:44,240
involved

1120
00:45:41,440 --> 00:45:46,400
we are on free free note or we have a

1121
00:45:44,240 --> 00:45:50,399
discord and look at our wiki

1122
00:45:46,400 --> 00:45:50,400
on our twitter and gitlab

1123
00:45:50,640 --> 00:45:56,000
there's also a foss xr conference

1124
00:45:54,000 --> 00:45:57,680
it will be held again in amsterdam

1125
00:45:56,000 --> 00:45:59,760
that's the second iteration

1126
00:45:57,680 --> 00:46:01,759
so if you're interested it's around

1127
00:45:59,760 --> 00:46:04,079
blender conference so we are looking

1128
00:46:01,760 --> 00:46:15,839
forward to see you there

1129
00:46:04,079 --> 00:46:15,839
and i guess now we can come to questions

1130
00:46:18,240 --> 00:46:21,359
so any questions

1131
00:46:25,200 --> 00:46:28,560
do you see a future for the desktop with

1132
00:46:28,000 --> 00:46:31,280
vr

1133
00:46:28,560 --> 00:46:31,759
but with mouse and keyboard interaction

1134
00:46:31,280 --> 00:46:34,000
like

1135
00:46:31,760 --> 00:46:35,440
we just saw here at the end so the

1136
00:46:34,000 --> 00:46:37,200
question was if i see a

1137
00:46:35,440 --> 00:46:38,880
future for mouse and keyboard

1138
00:46:37,200 --> 00:46:42,000
interaction vr

1139
00:46:38,880 --> 00:46:46,000
so definitely as a programmer i

1140
00:46:42,000 --> 00:46:49,200
enjoy to have a physical keyboard and

1141
00:46:46,000 --> 00:46:51,520
for this we would require

1142
00:46:49,200 --> 00:46:53,200
a virtual either virtual representation

1143
00:46:51,520 --> 00:46:55,440
of the keyboard in vr

1144
00:46:53,200 --> 00:46:56,319
or you just have augmented reality where

1145
00:46:55,440 --> 00:46:58,319
you just use

1146
00:46:56,319 --> 00:46:59,759
your virtual your real keyboard and can

1147
00:46:58,319 --> 00:47:03,839
see that

1148
00:46:59,760 --> 00:47:06,560
so definitely there are also projects

1149
00:47:03,839 --> 00:47:08,480
for example the window manager i showed

1150
00:47:06,560 --> 00:47:10,880
in the end i guess it has only

1151
00:47:08,480 --> 00:47:12,640
keyboard and mouse support in excel

1152
00:47:10,880 --> 00:47:15,359
desktop it's kind of complicated since

1153
00:47:12,640 --> 00:47:17,440
we moved the mouse pointer around

1154
00:47:15,359 --> 00:47:19,119
this could get quite hacky to decouple

1155
00:47:17,440 --> 00:47:21,280
that from the real mouse

1156
00:47:19,119 --> 00:47:22,640
so i wonder how to solve that but with

1157
00:47:21,280 --> 00:47:38,319
standalone

1158
00:47:22,640 --> 00:47:40,319
vr compositors it's quite possible

1159
00:47:38,319 --> 00:47:42,960
uh yeah i was wondering is it a

1160
00:47:40,319 --> 00:47:45,759
compatible with other vr applications

1161
00:47:42,960 --> 00:47:46,400
like what if you want to start a vr game

1162
00:47:45,760 --> 00:47:48,800
inside it

1163
00:47:46,400 --> 00:47:49,680
uh does that require any kind of special

1164
00:47:48,800 --> 00:47:53,200
support for

1165
00:47:49,680 --> 00:47:56,960
for it to work um uh do you mean

1166
00:47:53,200 --> 00:47:56,960
xr desktop or opendxr

1167
00:47:57,520 --> 00:48:03,759
desktop yes yeah so xr desktop can run

1168
00:48:00,880 --> 00:48:06,000
on top of a vr application if you have

1169
00:48:03,760 --> 00:48:09,440
it in overlay mode that's possible

1170
00:48:06,000 --> 00:48:11,040
so this is also one feature we intended

1171
00:48:09,440 --> 00:48:14,640
the design

1172
00:48:11,040 --> 00:48:18,079
to be that we can run xr desktop you can

1173
00:48:14,640 --> 00:48:19,040
show existing desktop windows over vr

1174
00:48:18,079 --> 00:48:22,079
applications

1175
00:48:19,040 --> 00:48:23,839
so this was one goal currently on openxr

1176
00:48:22,079 --> 00:48:25,920
it's not supported because this would

1177
00:48:23,839 --> 00:48:35,839
require some changes in monado which are

1178
00:48:25,920 --> 00:48:35,839
going to happen sometime

1179
00:48:39,839 --> 00:48:44,640
so uh who are you targeting with openxr

1180
00:48:42,960 --> 00:48:48,000
and monado

1181
00:48:44,640 --> 00:48:52,078
with openxr yes uh yeah i hope that

1182
00:48:48,000 --> 00:48:54,400
open xr is retargeting open xr

1183
00:48:52,079 --> 00:48:57,040
for all xr application developers so

1184
00:48:54,400 --> 00:48:59,040
they write applications for the same api

1185
00:48:57,040 --> 00:49:00,480
and not only application developers but

1186
00:48:59,040 --> 00:49:01,839
engines in particular

1187
00:49:00,480 --> 00:49:04,400
there are many engines already

1188
00:49:01,839 --> 00:49:06,078
supporting open xr like unreal unity

1189
00:49:04,400 --> 00:49:08,480
godot engine for example there was a

1190
00:49:06,079 --> 00:49:10,160
talk yesterday by my colleague christoph

1191
00:49:08,480 --> 00:49:17,839
he implemented support in the open

1192
00:49:10,160 --> 00:49:17,839
source godot engine for open xr

1193
00:49:18,160 --> 00:49:21,040
any more questions

1194
00:49:22,880 --> 00:49:31,839
okay thank you for your time

1195
00:49:36,640 --> 00:49:38,720
you

