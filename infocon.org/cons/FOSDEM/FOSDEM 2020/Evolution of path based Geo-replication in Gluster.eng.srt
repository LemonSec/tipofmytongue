1
00:00:06,879 --> 00:00:09,200
okay

2
00:00:09,920 --> 00:00:16,000
welcome everyone uh to our

3
00:00:13,200 --> 00:00:19,198
second cluster talk kind of today so

4
00:00:16,000 --> 00:00:19,198
please welcome with me harry

5
00:00:22,320 --> 00:00:26,000
good morning people uh so i'm going to

6
00:00:24,480 --> 00:00:29,359
talk about the evolution of

7
00:00:26,000 --> 00:00:32,000
jio replication in gloucester fs and

8
00:00:29,359 --> 00:00:33,680
to start with it i'll give a brief idea

9
00:00:32,000 --> 00:00:35,360
about what cluster is so that you can

10
00:00:33,680 --> 00:00:37,360
understand the rest of the talk

11
00:00:35,360 --> 00:00:38,800
and yeah cluster is a distributed file

12
00:00:37,360 --> 00:00:40,559
system with uh

13
00:00:38,800 --> 00:00:42,239
no single point of failure we don't have

14
00:00:40,559 --> 00:00:44,399
a metadata server and that's how we

15
00:00:42,239 --> 00:00:47,599
achieve this no single point of failure

16
00:00:44,399 --> 00:00:49,600
and it provides easy scaling out and it

17
00:00:47,600 --> 00:00:51,520
can run on any commodity hardware

18
00:00:49,600 --> 00:00:54,000
you don't have to buy boxes to run

19
00:00:51,520 --> 00:00:55,440
cluster and it provides other

20
00:00:54,000 --> 00:00:57,600
basic file system features like

21
00:00:55,440 --> 00:00:59,358
replication erasure coding and stuff

22
00:00:57,600 --> 00:01:00,879
and the terminologies that you have to

23
00:00:59,359 --> 00:01:02,399
know with gluster are bricks

24
00:01:00,879 --> 00:01:04,640
bricks are basically your disks which

25
00:01:02,399 --> 00:01:06,479
you are going to have going to make use

26
00:01:04,640 --> 00:01:08,799
to store your data in the back end

27
00:01:06,479 --> 00:01:10,320
and servers servers are going to be

28
00:01:08,799 --> 00:01:12,799
collection of your bricks

29
00:01:10,320 --> 00:01:13,360
and a volume volume is a logical entity

30
00:01:12,799 --> 00:01:14,960
which

31
00:01:13,360 --> 00:01:16,640
is going to have a collection of bricks

32
00:01:14,960 --> 00:01:18,158
across various servers

33
00:01:16,640 --> 00:01:20,080
and then your client that's where you

34
00:01:18,159 --> 00:01:22,560
write your data and that data is going

35
00:01:20,080 --> 00:01:24,158
to be transferred on to your bricks

36
00:01:22,560 --> 00:01:25,680
and the trusted storage pool it's a

37
00:01:24,159 --> 00:01:27,040
collection of servers within which you

38
00:01:25,680 --> 00:01:28,880
can perform certain operations and

39
00:01:27,040 --> 00:01:30,880
manage it

40
00:01:28,880 --> 00:01:33,439
so the overview would be something like

41
00:01:30,880 --> 00:01:35,280
this so you have bricks in your server

42
00:01:33,439 --> 00:01:36,720
and these bricks together form a logical

43
00:01:35,280 --> 00:01:38,799
entity called a volume

44
00:01:36,720 --> 00:01:41,600
and that volume is mounted on a client

45
00:01:38,799 --> 00:01:44,000
where you're going to consume it

46
00:01:41,600 --> 00:01:45,439
so yeah how about your replication uh

47
00:01:44,000 --> 00:01:46,399
the basic requirement for jio

48
00:01:45,439 --> 00:01:49,679
replication is

49
00:01:46,399 --> 00:01:51,840
uh disaster recovery with replication

50
00:01:49,680 --> 00:01:55,040
your data is going to be on your side

51
00:01:51,840 --> 00:01:56,960
the same data center and uh that's

52
00:01:55,040 --> 00:01:58,640
not that much reliable when it comes to

53
00:01:56,960 --> 00:02:00,158
natural calamities so we go for

54
00:01:58,640 --> 00:02:01,600
uh jio replication where you can

55
00:02:00,159 --> 00:02:02,960
replicate your data across different

56
00:02:01,600 --> 00:02:05,520
data centers

57
00:02:02,960 --> 00:02:07,039
and uh yeah the requirements for jio

58
00:02:05,520 --> 00:02:09,840
replication are

59
00:02:07,040 --> 00:02:11,840
how do we get the copy of data from one

60
00:02:09,840 --> 00:02:13,680
gluster volume or yeah one cluster

61
00:02:11,840 --> 00:02:16,800
volume to the other place

62
00:02:13,680 --> 00:02:18,800
so to do that we came up uh and also the

63
00:02:16,800 --> 00:02:20,959
other requirements were

64
00:02:18,800 --> 00:02:22,239
checkpoints to know until when your data

65
00:02:20,959 --> 00:02:25,120
is actually

66
00:02:22,239 --> 00:02:26,080
replicated from the master site to the

67
00:02:25,120 --> 00:02:28,720
slave side

68
00:02:26,080 --> 00:02:30,319
and the last process is to make this

69
00:02:28,720 --> 00:02:31,040
copying as efficient as possible to

70
00:02:30,319 --> 00:02:33,839
reduce the

71
00:02:31,040 --> 00:02:35,040
hit on the ios that are happening on the

72
00:02:33,840 --> 00:02:37,200
master volume

73
00:02:35,040 --> 00:02:38,400
and how we did it is basically we have

74
00:02:37,200 --> 00:02:39,920
two volumes

75
00:02:38,400 --> 00:02:41,360
uh the master volume where you are

76
00:02:39,920 --> 00:02:42,238
actually writing your data from the

77
00:02:41,360 --> 00:02:45,519
master volume

78
00:02:42,239 --> 00:02:47,440
the data is copied on to your slave

79
00:02:45,519 --> 00:02:49,280
so we have we basically created two

80
00:02:47,440 --> 00:02:52,160
volumes and made use of them

81
00:02:49,280 --> 00:02:53,920
and the other thing is you have to

82
00:02:52,160 --> 00:02:55,040
record the changes that are going in on

83
00:02:53,920 --> 00:02:57,440
your master site

84
00:02:55,040 --> 00:02:59,040
and then these recorder changes will be

85
00:02:57,440 --> 00:03:00,319
transferred from the master site to the

86
00:02:59,040 --> 00:03:02,079
slave site

87
00:03:00,319 --> 00:03:04,640
and to record the changes is where we

88
00:03:02,080 --> 00:03:06,720
came up with something called change log

89
00:03:04,640 --> 00:03:08,399
so change log is basically a translator

90
00:03:06,720 --> 00:03:10,800
a translator in cluster

91
00:03:08,400 --> 00:03:12,640
means something which gets a certain

92
00:03:10,800 --> 00:03:15,599
input and provides a certain output

93
00:03:12,640 --> 00:03:17,679
so changelog is going to get the data uh

94
00:03:15,599 --> 00:03:20,399
that are returned on a particular

95
00:03:17,680 --> 00:03:23,280
volume as a recorded change and this

96
00:03:20,400 --> 00:03:25,760
change is later on going to be

97
00:03:23,280 --> 00:03:27,920
sent for the jio replication to

98
00:03:25,760 --> 00:03:29,840
replicate it to the other side

99
00:03:27,920 --> 00:03:31,200
and it's on the brick side i'll explain

100
00:03:29,840 --> 00:03:34,159
how this uh

101
00:03:31,200 --> 00:03:35,518
flow goes and yeah once you have the

102
00:03:34,159 --> 00:03:37,359
change locks the change logs have to be

103
00:03:35,519 --> 00:03:38,159
synced from the master site to the slave

104
00:03:37,360 --> 00:03:39,840
site

105
00:03:38,159 --> 00:03:41,599
and the other benefits of change log

106
00:03:39,840 --> 00:03:43,760
would be to

107
00:03:41,599 --> 00:03:44,879
create checkpoints like if you have 10

108
00:03:43,760 --> 00:03:47,599
rights which are made

109
00:03:44,879 --> 00:03:49,040
and each right is into a change log then

110
00:03:47,599 --> 00:03:49,679
you can say that if you have completed

111
00:03:49,040 --> 00:03:51,519
five change

112
00:03:49,680 --> 00:03:52,959
or change logs then five of your rights

113
00:03:51,519 --> 00:03:56,159
are done this is how we

114
00:03:52,959 --> 00:03:57,040
came up with the checkpoints and also if

115
00:03:56,159 --> 00:04:00,159
a particular

116
00:03:57,040 --> 00:04:01,359
right is failing for some reason being a

117
00:04:00,159 --> 00:04:02,959
changelog you can just

118
00:04:01,360 --> 00:04:04,560
retry that particular right alone and

119
00:04:02,959 --> 00:04:06,879
then

120
00:04:04,560 --> 00:04:09,280
succeed so this reduces the overhead of

121
00:04:06,879 --> 00:04:11,439
doing the whole operation again

122
00:04:09,280 --> 00:04:13,120
yeah so as you can see you have the

123
00:04:11,439 --> 00:04:14,879
master volume which is one particular

124
00:04:13,120 --> 00:04:15,439
cluster volume in some trusted storage

125
00:04:14,879 --> 00:04:17,519
pool

126
00:04:15,439 --> 00:04:19,358
and the content from the master volume

127
00:04:17,519 --> 00:04:21,358
will be synced across to your

128
00:04:19,358 --> 00:04:24,799
slave volume this is how basically your

129
00:04:21,358 --> 00:04:24,799
replication works as of today

130
00:04:25,120 --> 00:04:30,160
yeah so we have three types of crawl so

131
00:04:28,240 --> 00:04:32,880
the reason for crawl is uh

132
00:04:30,160 --> 00:04:34,000
change locks get recorded so if you see

133
00:04:32,880 --> 00:04:35,360
this you will understand

134
00:04:34,000 --> 00:04:37,040
so that's one brick which i have

135
00:04:35,360 --> 00:04:39,120
explained uh

136
00:04:37,040 --> 00:04:41,440
with the change lock so change lo your

137
00:04:39,120 --> 00:04:43,759
ios will be coming from the top

138
00:04:41,440 --> 00:04:44,960
and it goes until the bottom where you

139
00:04:43,759 --> 00:04:46,560
are

140
00:04:44,960 --> 00:04:48,320
you have your disk there which is going

141
00:04:46,560 --> 00:04:49,120
to store your data so when it goes

142
00:04:48,320 --> 00:04:50,320
through the brick

143
00:04:49,120 --> 00:04:52,400
it's going to pass through the change

144
00:04:50,320 --> 00:04:54,560
log and change log is going to know that

145
00:04:52,400 --> 00:04:56,638
okay now i'm getting a right operation

146
00:04:54,560 --> 00:04:58,240
so such a operation is later on then

147
00:04:56,639 --> 00:05:00,639
return to a flat file

148
00:04:58,240 --> 00:05:02,160
and it just keeps create uh writing the

149
00:05:00,639 --> 00:05:05,120
contents to a flat file

150
00:05:02,160 --> 00:05:07,039
based on the incoming content so yeah

151
00:05:05,120 --> 00:05:09,759
the rest i'll come back in a few minutes

152
00:05:07,039 --> 00:05:11,520
so these content will be available only

153
00:05:09,759 --> 00:05:15,199
if the jio replication was

154
00:05:11,520 --> 00:05:17,039
uh was enabled when you create the

155
00:05:15,199 --> 00:05:18,960
volume but there can be cases where you

156
00:05:17,039 --> 00:05:20,320
already have a volume and you want to

157
00:05:18,960 --> 00:05:21,120
sync the contents across to another

158
00:05:20,320 --> 00:05:23,599
volume

159
00:05:21,120 --> 00:05:25,440
so here you won't have your change locks

160
00:05:23,600 --> 00:05:26,160
so that's the reason we have this hybrid

161
00:05:25,440 --> 00:05:28,160
crawl

162
00:05:26,160 --> 00:05:29,440
so what this hybrid crawl does is once

163
00:05:28,160 --> 00:05:33,680
you enable your app on

164
00:05:29,440 --> 00:05:35,759
existing master volume this uh

165
00:05:33,680 --> 00:05:37,840
crawl is going to go through your file

166
00:05:35,759 --> 00:05:39,360
system create sudo change logs

167
00:05:37,840 --> 00:05:42,560
and these change logs will be later on

168
00:05:39,360 --> 00:05:44,560
used to uh sync to the slave volume

169
00:05:42,560 --> 00:05:46,800
and change lock crawl is incoming

170
00:05:44,560 --> 00:05:49,360
traffic it records the change log and it

171
00:05:46,800 --> 00:05:50,800
syncs up to the slave volume history is

172
00:05:49,360 --> 00:05:52,160
when you have a number of change logs

173
00:05:50,800 --> 00:05:53,840
recorded but europe was

174
00:05:52,160 --> 00:05:55,680
stopped for some reason and now we are

175
00:05:53,840 --> 00:05:58,080
again started because the slave volume

176
00:05:55,680 --> 00:05:58,960
is back up so all your recorded history

177
00:05:58,080 --> 00:06:02,479
will be

178
00:05:58,960 --> 00:06:04,479
synced there and how we do this is where

179
00:06:02,479 --> 00:06:06,000
this diagram comes into the picture you

180
00:06:04,479 --> 00:06:07,680
have the changelog translator

181
00:06:06,000 --> 00:06:09,520
in the brick which records the changes

182
00:06:07,680 --> 00:06:10,000
to the flat file and then the agent

183
00:06:09,520 --> 00:06:11,680
process

184
00:06:10,000 --> 00:06:14,160
is going to read the contents from the

185
00:06:11,680 --> 00:06:15,840
flat file and give it to this worker

186
00:06:14,160 --> 00:06:17,280
and worker is going to read the contents

187
00:06:15,840 --> 00:06:17,840
from the master and write it onto the

188
00:06:17,280 --> 00:06:19,599
sleeve

189
00:06:17,840 --> 00:06:21,119
and the worker and the agent are taken

190
00:06:19,600 --> 00:06:23,680
care by the monitor

191
00:06:21,120 --> 00:06:25,600
so if one dies uh the monitor spawns it

192
00:06:23,680 --> 00:06:27,520
again and so on

193
00:06:25,600 --> 00:06:28,720
yeah so the disadvantages with the

194
00:06:27,520 --> 00:06:30,240
current approaches

195
00:06:28,720 --> 00:06:34,000
so we call we have something called a

196
00:06:30,240 --> 00:06:37,199
gfid to identify a particular file in uh

197
00:06:34,000 --> 00:06:40,000
gluster it's going to be unique and uh

198
00:06:37,199 --> 00:06:41,680
so far we have so this gfid is used to

199
00:06:40,000 --> 00:06:43,520
construct the whole file system

200
00:06:41,680 --> 00:06:45,280
so we are replicating the gf ids from

201
00:06:43,520 --> 00:06:47,280
the master to the slave as well to

202
00:06:45,280 --> 00:06:50,000
construct this whole tree

203
00:06:47,280 --> 00:06:52,479
and this one dependency has been giving

204
00:06:50,000 --> 00:06:54,639
a number of issues like uh

205
00:06:52,479 --> 00:06:55,919
um you can't replicate it to a

206
00:06:54,639 --> 00:06:57,919
non-cluster volume

207
00:06:55,919 --> 00:06:59,680
you can uh you can have gfid conflicts

208
00:06:57,919 --> 00:07:00,880
between master and slave and all those

209
00:06:59,680 --> 00:07:02,720
problems can be there

210
00:07:00,880 --> 00:07:04,479
and you can't manually copy a file from

211
00:07:02,720 --> 00:07:06,080
the master to the slave right now it has

212
00:07:04,479 --> 00:07:07,039
to be done to a cluster volume through

213
00:07:06,080 --> 00:07:09,280
the jio rip

214
00:07:07,039 --> 00:07:10,719
so uh and other than that if you have a

215
00:07:09,280 --> 00:07:12,239
create delete and a create

216
00:07:10,720 --> 00:07:14,000
you have to repeat all these process one

217
00:07:12,240 --> 00:07:14,800
after the other to have it in the right

218
00:07:14,000 --> 00:07:17,680
state

219
00:07:14,800 --> 00:07:19,039
so to basically avoid these issues we

220
00:07:17,680 --> 00:07:21,440
came up with something called

221
00:07:19,039 --> 00:07:22,719
as path based your application and we

222
00:07:21,440 --> 00:07:26,479
are uh

223
00:07:22,720 --> 00:07:29,599
working on it so what this does is uh it

224
00:07:26,479 --> 00:07:32,080
stores your parent gfid in each files uh

225
00:07:29,599 --> 00:07:34,319
exacto this way we have a separate tool

226
00:07:32,080 --> 00:07:37,758
which can read this particular etc

227
00:07:34,319 --> 00:07:39,840
and then understand how the path is

228
00:07:37,759 --> 00:07:41,440
give the path to the slave volume so

229
00:07:39,840 --> 00:07:41,919
that the slave volume can work on the

230
00:07:41,440 --> 00:07:44,080
parts

231
00:07:41,919 --> 00:07:46,719
instead of working on the gfid this way

232
00:07:44,080 --> 00:07:48,240
we have removed the gfid dependency so

233
00:07:46,720 --> 00:07:49,919
the advantage is that you don't need a

234
00:07:48,240 --> 00:07:51,680
cluster volume for the slave volume

235
00:07:49,919 --> 00:07:53,758
you can write it to any of your other

236
00:07:51,680 --> 00:07:57,120
type of storage way you want to write it

237
00:07:53,759 --> 00:07:58,560
and yeah you can use additional tools to

238
00:07:57,120 --> 00:08:00,800
do the

239
00:07:58,560 --> 00:08:02,479
initial sync you can copy files manually

240
00:08:00,800 --> 00:08:04,560
from the master to the slave

241
00:08:02,479 --> 00:08:06,479
and you don't have to do a create delete

242
00:08:04,560 --> 00:08:09,599
and create we use rsync which

243
00:08:06,479 --> 00:08:10,960
just does it with a single create yeah

244
00:08:09,599 --> 00:08:13,599
these are the advantages of path based

245
00:08:10,960 --> 00:08:16,719
your application and i have a demo

246
00:08:13,599 --> 00:08:18,240
just to show how to have

247
00:08:16,720 --> 00:08:20,960
geo replication between two volumes in

248
00:08:18,240 --> 00:08:22,800
cluster so basically i'm

249
00:08:20,960 --> 00:08:24,479
doing a peer prop to create the thruster

250
00:08:22,800 --> 00:08:27,840
storage pool i'm talking about

251
00:08:24,479 --> 00:08:29,520
so if you see i'm having a two uh two

252
00:08:27,840 --> 00:08:30,638
servers and i'm creating a volume

253
00:08:29,520 --> 00:08:32,958
between two servers

254
00:08:30,639 --> 00:08:36,080
called as the master volume and i'm

255
00:08:32,958 --> 00:08:36,079
starting it oops

256
00:08:38,559 --> 00:08:42,799
sorry yeah so i'm starting the master

257
00:08:42,240 --> 00:08:45,279
volume

258
00:08:42,799 --> 00:08:46,719
now this is additional step for jio

259
00:08:45,279 --> 00:08:47,920
replication which is used by jio

260
00:08:46,720 --> 00:08:50,640
replication

261
00:08:47,920 --> 00:08:52,479
internally this is another volume so

262
00:08:50,640 --> 00:08:54,160
similar to this i would have created a

263
00:08:52,480 --> 00:08:57,519
slave volume on another mission

264
00:08:54,160 --> 00:08:58,719
so that i can do the jio rep between

265
00:08:57,519 --> 00:09:01,519
these two

266
00:08:58,720 --> 00:09:02,160
so the master volume is here on these uh

267
00:09:01,519 --> 00:09:04,240
trusted

268
00:09:02,160 --> 00:09:05,199
storage pool and the slave volume is on

269
00:09:04,240 --> 00:09:06,640
a different storage

270
00:09:05,200 --> 00:09:09,839
thruster storage pool which you will

271
00:09:06,640 --> 00:09:09,839
have to repeat the same process

272
00:09:11,920 --> 00:09:15,279
and i am starting this particular volume

273
00:09:13,839 --> 00:09:18,480
which europe uses

274
00:09:15,279 --> 00:09:20,399
so yeah after that i am mounting the

275
00:09:18,480 --> 00:09:21,680
master volume and this additional volume

276
00:09:20,399 --> 00:09:24,399
the gear up is going to

277
00:09:21,680 --> 00:09:24,399
make use of

278
00:09:27,680 --> 00:09:30,000
okay

279
00:09:30,720 --> 00:09:34,000
yeah so this is another command which

280
00:09:32,640 --> 00:09:35,439
you can make use

281
00:09:34,000 --> 00:09:37,120
instead of creating this particular

282
00:09:35,440 --> 00:09:38,720
volume this command takes care of that

283
00:09:37,120 --> 00:09:40,480
work but as i have done this

284
00:09:38,720 --> 00:09:42,480
uh created this particular volume

285
00:09:40,480 --> 00:09:43,760
manually uh this command is failing

286
00:09:42,480 --> 00:09:46,160
but this is something that you can know

287
00:09:43,760 --> 00:09:49,200
to reduce this work

288
00:09:46,160 --> 00:09:50,399
and then you can see that uh so this

289
00:09:49,200 --> 00:09:52,160
command is going to

290
00:09:50,399 --> 00:09:54,000
so you will need a passwordless ssh

291
00:09:52,160 --> 00:09:55,439
between your master and slave cluster

292
00:09:54,000 --> 00:09:57,760
volume one of the nodes

293
00:09:55,440 --> 00:09:58,800
so i have done that this is going to get

294
00:09:57,760 --> 00:10:00,959
the

295
00:09:58,800 --> 00:10:02,079
keys from ssh keys from various nodes in

296
00:10:00,959 --> 00:10:03,920
the master volume

297
00:10:02,079 --> 00:10:05,359
and then send it to the slave volume so

298
00:10:03,920 --> 00:10:06,959
that the transfer can actually happen

299
00:10:05,360 --> 00:10:09,519
through ssh

300
00:10:06,959 --> 00:10:10,800
so i'm doing that and other

301
00:10:09,519 --> 00:10:18,240
configurations for

302
00:10:10,800 --> 00:10:21,359
jio replication okay

303
00:10:18,240 --> 00:10:23,040
yeah sorry uh so

304
00:10:21,360 --> 00:10:24,560
you see that i'm doing certain

305
00:10:23,040 --> 00:10:26,160
configurations for your application and

306
00:10:24,560 --> 00:10:28,800
then i'm starting a jio replication

307
00:10:26,160 --> 00:10:29,920
session over here and then i'm checking

308
00:10:28,800 --> 00:10:32,399
the status

309
00:10:29,920 --> 00:10:34,479
it initializes and at one point it

310
00:10:32,399 --> 00:10:38,320
actually uh

311
00:10:34,480 --> 00:10:40,640
starts to work so now i'll

312
00:10:38,320 --> 00:10:42,160
ssh to the slave node and show you the

313
00:10:40,640 --> 00:10:44,079
amount in the slave node

314
00:10:42,160 --> 00:10:45,600
to see what is the data available there

315
00:10:44,079 --> 00:10:46,319
we haven't wrote any data so it should

316
00:10:45,600 --> 00:10:51,519
be

317
00:10:46,320 --> 00:10:51,519
empty there so you can see one minute

318
00:10:58,399 --> 00:11:02,000
yeah so on the master when i do an ls

319
00:11:00,800 --> 00:11:03,519
you see nothing because i haven't

320
00:11:02,000 --> 00:11:06,560
created any file here

321
00:11:03,519 --> 00:11:10,160
now i am sshing into the slave

322
00:11:06,560 --> 00:11:13,359
one minute and uh

323
00:11:10,160 --> 00:11:14,560
yeah you can see the slave volume here

324
00:11:13,360 --> 00:11:16,880
which is a different volume from the

325
00:11:14,560 --> 00:11:18,239
master volume and i'm doing an ls on the

326
00:11:16,880 --> 00:11:20,880
slave it's again empty

327
00:11:18,240 --> 00:11:22,160
i'm coming back to the master cluster

328
00:11:20,880 --> 00:11:25,040
and i'm creating certain

329
00:11:22,160 --> 00:11:26,319
files here and now you can see the files

330
00:11:25,040 --> 00:11:28,719
in the master volume

331
00:11:26,320 --> 00:11:30,560
i'm going back to the slave volume and i

332
00:11:28,720 --> 00:11:32,480
again i'm doing an ls on the slave

333
00:11:30,560 --> 00:11:34,880
so which was empty now it has these five

334
00:11:32,480 --> 00:11:37,279
uh 10 files replicated here

335
00:11:34,880 --> 00:11:40,000
so setting up jio replication should be

336
00:11:37,279 --> 00:11:41,839
fairly easy in cluster

337
00:11:40,000 --> 00:11:44,399
this is how you do it if you have any

338
00:11:41,839 --> 00:11:44,399
questions

339
00:11:46,840 --> 00:11:57,839
[Applause]

340
00:11:52,480 --> 00:11:57,839
okay questions

341
00:12:01,360 --> 00:12:05,440
and so um you said that um you

342
00:12:04,320 --> 00:12:07,839
implemented past

343
00:12:05,440 --> 00:12:09,200
path-based geo-replication that doesn't

344
00:12:07,839 --> 00:12:11,839
use the gfids

345
00:12:09,200 --> 00:12:13,440
so is it possible to use both to use

346
00:12:11,839 --> 00:12:16,079
either so

347
00:12:13,440 --> 00:12:16,880
with gfi it is not a done it's a work in

348
00:12:16,079 --> 00:12:18,319
progress thing

349
00:12:16,880 --> 00:12:19,920
right now you have the normal

350
00:12:18,320 --> 00:12:21,920
replication which is between a

351
00:12:19,920 --> 00:12:23,599
gluster volume to another cluster volume

352
00:12:21,920 --> 00:12:24,880
okay so pathways your application is

353
00:12:23,600 --> 00:12:26,079
something we are still working on it's

354
00:12:24,880 --> 00:12:29,279
not it completed

355
00:12:26,079 --> 00:12:29,839
so the whole async thing is so uh once

356
00:12:29,279 --> 00:12:32,399
we

357
00:12:29,839 --> 00:12:34,240
complete it we will be mostly relying on

358
00:12:32,399 --> 00:12:36,160
path-based gear application rather than

359
00:12:34,240 --> 00:12:38,000
supporting the old one so currently

360
00:12:36,160 --> 00:12:41,040
geo-replication always has to be

361
00:12:38,000 --> 00:12:42,320
done to a target that's also a gluster

362
00:12:41,040 --> 00:12:45,199
volume

363
00:12:42,320 --> 00:12:45,200
okay thank you

364
00:12:45,839 --> 00:12:53,839
any more questions

365
00:13:04,839 --> 00:13:10,320
um

366
00:13:06,800 --> 00:13:13,599
the um the the the changelog translator

367
00:13:10,320 --> 00:13:16,480
um does it have a performance impact

368
00:13:13,600 --> 00:13:18,480
if if it's enabled and could it be used

369
00:13:16,480 --> 00:13:20,480
for other purposes because for example

370
00:13:18,480 --> 00:13:23,120
we kind of want to track

371
00:13:20,480 --> 00:13:24,959
all file operations kind of kind of like

372
00:13:23,120 --> 00:13:27,839
an audit log something like that

373
00:13:24,959 --> 00:13:29,279
so can the changelog translator used be

374
00:13:27,839 --> 00:13:31,600
used for that purpose and

375
00:13:29,279 --> 00:13:33,600
does it have a performance impact so the

376
00:13:31,600 --> 00:13:36,480
question is does the changelog uh

377
00:13:33,600 --> 00:13:38,800
translator have a performance hit and uh

378
00:13:36,480 --> 00:13:41,680
can it be used for auditing as well

379
00:13:38,800 --> 00:13:44,319
and uh yes changelog will have a minimal

380
00:13:41,680 --> 00:13:46,880
impact and we do give you options to

381
00:13:44,320 --> 00:13:49,040
set the uh change log like you can say

382
00:13:46,880 --> 00:13:49,519
that i'll record a file for every 15

383
00:13:49,040 --> 00:13:51,760
seconds

384
00:13:49,519 --> 00:13:53,839
for every 15 minutes so you have the

385
00:13:51,760 --> 00:13:56,480
ability to configure the time

386
00:13:53,839 --> 00:13:57,760
based on your volume so that is

387
00:13:56,480 --> 00:14:00,959
something which how

388
00:13:57,760 --> 00:14:04,720
with which you can tune your volume

389
00:14:00,959 --> 00:14:07,920
and uh we do have we we are using change

390
00:14:04,720 --> 00:14:09,839
lock for it another uh

391
00:14:07,920 --> 00:14:11,519
tool called glusterfind which is going

392
00:14:09,839 --> 00:14:12,880
to give you the files which have been

393
00:14:11,519 --> 00:14:13,920
changed from certain checkpoint to

394
00:14:12,880 --> 00:14:16,639
another checkpoint

395
00:14:13,920 --> 00:14:18,319
so again their changelogs are handy so

396
00:14:16,639 --> 00:14:20,000
you can make use of change locks for

397
00:14:18,320 --> 00:14:22,240
auditing as well

398
00:14:20,000 --> 00:14:24,160
so are the chain are these change locks

399
00:14:22,240 --> 00:14:25,920
like complete like can you trust that

400
00:14:24,160 --> 00:14:27,680
every file operation will appear in the

401
00:14:25,920 --> 00:14:29,439
change lock yes change law has been

402
00:14:27,680 --> 00:14:31,120
uh so can you trust change changelog is

403
00:14:29,440 --> 00:14:32,880
the question and changelog has been

404
00:14:31,120 --> 00:14:34,800
there in cluster for a while now

405
00:14:32,880 --> 00:14:37,279
and it's pretty stable so yeah change

406
00:14:34,800 --> 00:14:37,279
logs are

407
00:14:42,839 --> 00:14:45,839
trustworthy

408
00:14:54,720 --> 00:14:58,880
thank you um what can you advise for

409
00:14:57,360 --> 00:15:02,720
activate your application

410
00:14:58,880 --> 00:15:05,040
sorry master slave right

411
00:15:02,720 --> 00:15:06,480
is it possible to create like uh two

412
00:15:05,040 --> 00:15:08,719
sites master

413
00:15:06,480 --> 00:15:10,320
sorry is it possible for capability now

414
00:15:08,720 --> 00:15:13,040
for the disaster recovery

415
00:15:10,320 --> 00:15:14,720
okay so you're asking if it is possible

416
00:15:13,040 --> 00:15:17,199
to get it back the other way exactly

417
00:15:14,720 --> 00:15:18,399
uh so the question is uh is it only from

418
00:15:17,199 --> 00:15:21,279
master to slave

419
00:15:18,399 --> 00:15:22,240
or is slave to master also possible yeah

420
00:15:21,279 --> 00:15:23,839
right now uh

421
00:15:22,240 --> 00:15:26,880
once you stop your jio replication

422
00:15:23,839 --> 00:15:29,040
system session from master to slave

423
00:15:26,880 --> 00:15:31,040
you can enable it the other way as well

424
00:15:29,040 --> 00:15:32,480
this way you can copy your data back

425
00:15:31,040 --> 00:15:35,040
but we don't have active active

426
00:15:32,480 --> 00:15:41,839
mechanism right now yeah

427
00:15:35,040 --> 00:15:41,839
thank you

428
00:15:47,519 --> 00:15:50,959
doesn't seem to be the case and thank

429
00:15:49,199 --> 00:15:52,839
you thank you so

430
00:15:50,959 --> 00:15:54,160
much your application is worked by

431
00:15:52,839 --> 00:15:56,639
aravinda

432
00:15:54,160 --> 00:15:58,719
and yeah the jira application team in

433
00:15:56,639 --> 00:15:59,279
red hat comprises of us if you have any

434
00:15:58,720 --> 00:16:01,040
questions

435
00:15:59,279 --> 00:16:09,839
i have the links provided in the slides

436
00:16:01,040 --> 00:16:09,839
you can make use of it thank you

437
00:16:10,160 --> 00:16:12,240
you

