1
00:00:05,279 --> 00:00:08,080
yes

2
00:00:06,480 --> 00:00:10,080
thank you so much well thank you for

3
00:00:08,080 --> 00:00:11,360
having me so it's indeed it's the last

4
00:00:10,080 --> 00:00:12,799
of the day so it's like

5
00:00:11,360 --> 00:00:14,320
outside and i saw like a lot of people

6
00:00:12,799 --> 00:00:15,599
already drinking beers and stuff so it's

7
00:00:14,320 --> 00:00:18,000
like i hope that there are still people

8
00:00:15,599 --> 00:00:20,720
in the room so thank you for listening

9
00:00:18,000 --> 00:00:22,160
so this is like last year my my

10
00:00:20,720 --> 00:00:23,680
colleague chen was here and he

11
00:00:22,160 --> 00:00:25,279
he presents for the first time we've eat

12
00:00:23,680 --> 00:00:27,359
and what we're trying to do

13
00:00:25,279 --> 00:00:28,560
and we've done a lot in the year so

14
00:00:27,359 --> 00:00:29,920
today i want to

15
00:00:28,560 --> 00:00:32,640
i want to show you actually an update

16
00:00:29,920 --> 00:00:34,160
and and way more things about wev8 and

17
00:00:32,640 --> 00:00:35,680
a lot of things have changed also the

18
00:00:34,160 --> 00:00:37,279
things that we've changed into

19
00:00:35,680 --> 00:00:38,719
so quickly agenda what i want to talk

20
00:00:37,280 --> 00:00:40,719
about so first i want to talk about

21
00:00:38,719 --> 00:00:42,480
what it is because they were you know

22
00:00:40,719 --> 00:00:45,120
we're new we're new on the scene so yeah

23
00:00:42,480 --> 00:00:47,360
so what is it secondly i want to

24
00:00:45,120 --> 00:00:50,399
talk about what has changed since last

25
00:00:47,360 --> 00:00:51,920
year or presented here and this year

26
00:00:50,399 --> 00:00:54,000
um i want to talk a little bit of the

27
00:00:51,920 --> 00:00:55,360
about the technology and last but not

28
00:00:54,000 --> 00:00:57,600
least of course i want to give a

29
00:00:55,360 --> 00:00:58,399
demo i want to show it in action all

30
00:00:57,600 --> 00:01:00,320
right so that's the

31
00:00:58,399 --> 00:01:02,879
that's what i'm going to do so first

32
00:01:00,320 --> 00:01:04,479
about the um about we've gate so we hit

33
00:01:02,879 --> 00:01:05,199
is an oversourced smart graph that's

34
00:01:04,479 --> 00:01:06,720
what it is

35
00:01:05,199 --> 00:01:08,240
and what we mean with that well the fact

36
00:01:06,720 --> 00:01:10,000
that it's open source that is the usual

37
00:01:08,240 --> 00:01:11,839
suspects right so

38
00:01:10,000 --> 00:01:13,920
source lives on github but you can use

39
00:01:11,840 --> 00:01:15,360
that using docker docker compose and

40
00:01:13,920 --> 00:01:17,119
kubernetes so we have that all out of

41
00:01:15,360 --> 00:01:19,520
the box for you

42
00:01:17,119 --> 00:01:20,960
it is smart because of something which

43
00:01:19,520 --> 00:01:22,080
we call the contextionary

44
00:01:20,960 --> 00:01:23,919
and if you never heard about the

45
00:01:22,080 --> 00:01:25,360
contextionary that's fine because we

46
00:01:23,920 --> 00:01:27,200
invented it and i'm about to explain to

47
00:01:25,360 --> 00:01:29,520
you what it is and what it does

48
00:01:27,200 --> 00:01:31,040
um and i want to use i'm going to use

49
00:01:29,520 --> 00:01:33,759
one buzzword

50
00:01:31,040 --> 00:01:34,640
sorry for that but what i but it has a

51
00:01:33,759 --> 00:01:36,799
serious it's

52
00:01:34,640 --> 00:01:38,159
a serious notion so sometimes people

53
00:01:36,799 --> 00:01:39,200
talk about like the ai first

54
00:01:38,159 --> 00:01:41,439
architectures

55
00:01:39,200 --> 00:01:43,200
so like can we build systems that have

56
00:01:41,439 --> 00:01:43,758
like these machinery models built into

57
00:01:43,200 --> 00:01:45,840
them

58
00:01:43,759 --> 00:01:47,360
that we can build new solutions and

59
00:01:45,840 --> 00:01:49,680
actually new ideas and that's why we

60
00:01:47,360 --> 00:01:51,119
try to solve with semantic models so

61
00:01:49,680 --> 00:01:52,079
what makes it in our case what we like

62
00:01:51,119 --> 00:01:54,320
to call smart

63
00:01:52,079 --> 00:01:55,839
is the built-in semantic model and the

64
00:01:54,320 --> 00:01:57,279
graph is well

65
00:01:55,840 --> 00:01:58,640
i don't have to in this room i don't

66
00:01:57,280 --> 00:01:59,759
have to you know share with people what

67
00:01:58,640 --> 00:02:02,640
the graph is but the

68
00:01:59,759 --> 00:02:03,920
we we've chosen to use graphql and the

69
00:02:02,640 --> 00:02:05,200
reason why i've done that is because we

70
00:02:03,920 --> 00:02:07,360
see of course there's like

71
00:02:05,200 --> 00:02:09,199
a lot of graph experts you know you

72
00:02:07,360 --> 00:02:09,840
sparkle or sorry for those kind of

73
00:02:09,199 --> 00:02:11,119
things

74
00:02:09,840 --> 00:02:13,040
but sometimes when we have developers

75
00:02:11,120 --> 00:02:14,480
who find it a little bit more difficult

76
00:02:13,040 --> 00:02:16,799
we see that they really like to work

77
00:02:14,480 --> 00:02:18,879
with graphql so we really

78
00:02:16,800 --> 00:02:20,959
embrace graphql and it's like completely

79
00:02:18,879 --> 00:02:23,200
100 graphql based

80
00:02:20,959 --> 00:02:24,319
so that's how we define what our smart

81
00:02:23,200 --> 00:02:26,079
graph is

82
00:02:24,319 --> 00:02:28,720
and with a smartphone you can do three

83
00:02:26,080 --> 00:02:30,160
things first thing is semantic search

84
00:02:28,720 --> 00:02:31,840
so what you can do and that's also what

85
00:02:30,160 --> 00:02:33,680
i will demo to you what we know from

86
00:02:31,840 --> 00:02:35,519
traditional search if i may call it like

87
00:02:33,680 --> 00:02:38,720
that we search for keywords

88
00:02:35,519 --> 00:02:40,800
right so if we write about um uh

89
00:02:38,720 --> 00:02:42,160
the company apple we actually need to

90
00:02:40,800 --> 00:02:43,599
search for apple

91
00:02:42,160 --> 00:02:45,519
but in weeviate you don't necessarily

92
00:02:43,599 --> 00:02:46,399
have to so if you add company with the

93
00:02:45,519 --> 00:02:47,760
name apple

94
00:02:46,400 --> 00:02:49,200
but you search for example what's the

95
00:02:47,760 --> 00:02:50,160
company the business related to the

96
00:02:49,200 --> 00:02:52,238
iphone

97
00:02:50,160 --> 00:02:54,480
it will still find your data object

98
00:02:52,239 --> 00:02:56,000
company with the name app

99
00:02:54,480 --> 00:02:58,079
what we also can do based on that is

100
00:02:56,000 --> 00:03:00,000
automatic classification so we can

101
00:02:58,080 --> 00:03:01,280
automatically make edges in the graph

102
00:03:00,000 --> 00:03:03,760
based on the semantics

103
00:03:01,280 --> 00:03:04,319
of your data object and last but not

104
00:03:03,760 --> 00:03:06,640
least

105
00:03:04,319 --> 00:03:07,359
we can do knowledge representation and

106
00:03:06,640 --> 00:03:09,040
this is after

107
00:03:07,360 --> 00:03:10,800
what's always also referred as like

108
00:03:09,040 --> 00:03:12,400
nowadays it's like

109
00:03:10,800 --> 00:03:13,760
it's the knowledge graph but it's like i

110
00:03:12,400 --> 00:03:15,040
wouldn't say we're necessarily a

111
00:03:13,760 --> 00:03:18,159
knowledge graph but the

112
00:03:15,040 --> 00:03:19,679
you can create a similar representations

113
00:03:18,159 --> 00:03:21,920
so those are the three things

114
00:03:19,680 --> 00:03:23,360
the three use cases that we can help you

115
00:03:21,920 --> 00:03:26,159
with so

116
00:03:23,360 --> 00:03:27,680
something important to share based on

117
00:03:26,159 --> 00:03:30,079
what we did last year

118
00:03:27,680 --> 00:03:31,120
so the best way to explain is a little

119
00:03:30,080 --> 00:03:32,560
bit on time

120
00:03:31,120 --> 00:03:34,159
and what i mean with that is like that

121
00:03:32,560 --> 00:03:36,239
we saw of course a lot of

122
00:03:34,159 --> 00:03:37,840
databases in the past that were more

123
00:03:36,239 --> 00:03:41,120
relational based right so just

124
00:03:37,840 --> 00:03:42,799
you know wrote column row column

125
00:03:41,120 --> 00:03:46,000
structures and tables

126
00:03:42,799 --> 00:03:47,920
and then of course we got these um uh

127
00:03:46,000 --> 00:03:49,760
graph databases uh so for example i had

128
00:03:47,920 --> 00:03:51,040
the people from new orleans room so they

129
00:03:49,760 --> 00:03:52,879
made a beautiful

130
00:03:51,040 --> 00:03:54,319
beautiful database like that and we

131
00:03:52,879 --> 00:03:57,518
chose a year back

132
00:03:54,319 --> 00:03:58,879
to store information with giannis

133
00:03:57,519 --> 00:04:01,040
and what we did was that we had that

134
00:03:58,879 --> 00:04:02,319
semantic element that what i will

135
00:04:01,040 --> 00:04:04,000
explain the confectionary

136
00:04:02,319 --> 00:04:06,560
i will explain what that is we had that

137
00:04:04,000 --> 00:04:06,959
as a feature but last year we decided to

138
00:04:06,560 --> 00:04:09,280
just

139
00:04:06,959 --> 00:04:10,560
double down on that semantic element so

140
00:04:09,280 --> 00:04:13,760
we got completely

141
00:04:10,560 --> 00:04:14,400
rid of the implementation in giannis and

142
00:04:13,760 --> 00:04:16,880
we

143
00:04:14,400 --> 00:04:18,320
create basically everything ourselves

144
00:04:16,880 --> 00:04:20,639
and we that means that we now

145
00:04:18,320 --> 00:04:22,639
only have that contextionary to store

146
00:04:20,639 --> 00:04:25,440
that information in

147
00:04:22,639 --> 00:04:26,800
and we've actually this is a crown so we

148
00:04:25,440 --> 00:04:27,520
actually figured out like this is

149
00:04:26,800 --> 00:04:28,720
actually

150
00:04:27,520 --> 00:04:30,240
we're really happy that we made that

151
00:04:28,720 --> 00:04:30,960
decision because now we could really

152
00:04:30,240 --> 00:04:32,800
bring something

153
00:04:30,960 --> 00:04:35,120
new you know to the to the stage

154
00:04:32,800 --> 00:04:36,639
something different and a different way

155
00:04:35,120 --> 00:04:38,160
to handle your data objects and work

156
00:04:36,639 --> 00:04:41,199
with them so

157
00:04:38,160 --> 00:04:43,280
we store everything in a semantic space

158
00:04:41,199 --> 00:04:44,880
that's what we do and now if you go like

159
00:04:43,280 --> 00:04:46,719
wah semantic space

160
00:04:44,880 --> 00:04:48,560
i'm gonna explain what we mean with that

161
00:04:46,720 --> 00:04:50,639
so but just keep thinking when i talk

162
00:04:48,560 --> 00:04:54,080
about semantic space i'm talking about

163
00:04:50,639 --> 00:04:54,960
the contextionary so imagine it like

164
00:04:54,080 --> 00:04:57,840
this

165
00:04:54,960 --> 00:04:57,840
if you go to a

166
00:04:58,080 --> 00:05:02,080
i'm compliant as you can see let's say

167
00:05:00,240 --> 00:05:03,520
if you go to a grocery store

168
00:05:02,080 --> 00:05:05,758
and you have a shopping list and on that

169
00:05:03,520 --> 00:05:08,240
shopping list you might have four items

170
00:05:05,759 --> 00:05:09,199
a banana washing powder you're looking

171
00:05:08,240 --> 00:05:12,720
for an apple

172
00:05:09,199 --> 00:05:15,840
and a piece of bread so if you go in the

173
00:05:12,720 --> 00:05:17,840
supermarket and you find a banana

174
00:05:15,840 --> 00:05:18,960
you know that an apple is going to be

175
00:05:17,840 --> 00:05:22,080
closer by

176
00:05:18,960 --> 00:05:23,919
than the bread or the washing powder

177
00:05:22,080 --> 00:05:26,400
and if you move towards the bread you

178
00:05:23,919 --> 00:05:28,080
know that you're actually getting closer

179
00:05:26,400 --> 00:05:29,919
to the washing powder moving more away

180
00:05:28,080 --> 00:05:32,560
from the fruit

181
00:05:29,919 --> 00:05:33,440
that's how we store data in the space

182
00:05:32,560 --> 00:05:36,400
and so that's the

183
00:05:33,440 --> 00:05:37,440
metaphor to actually imprint the problem

184
00:05:36,400 --> 00:05:39,120
that we solve and

185
00:05:37,440 --> 00:05:40,560
we do that to something that we that we

186
00:05:39,120 --> 00:05:41,919
call the contextionary and i want to

187
00:05:40,560 --> 00:05:43,440
give you a little bit of background

188
00:05:41,919 --> 00:05:46,400
where we're coming from

189
00:05:43,440 --> 00:05:48,400
and um what's different to other

190
00:05:46,400 --> 00:05:50,799
solutions that around here so

191
00:05:48,400 --> 00:05:51,599
if you go all the way back again time to

192
00:05:50,800 --> 00:05:54,880
the uh

193
00:05:51,600 --> 00:05:55,759
to the 1950s it was like a famous quote

194
00:05:54,880 --> 00:05:57,600
and it said like

195
00:05:55,759 --> 00:05:59,360
a word can be characterized by the

196
00:05:57,600 --> 00:06:00,960
company it keeps and

197
00:05:59,360 --> 00:06:03,199
what it basically means that you would

198
00:06:00,960 --> 00:06:05,280
say that the word paris would be more

199
00:06:03,199 --> 00:06:07,120
closely related to france than it would

200
00:06:05,280 --> 00:06:09,758
be to

201
00:06:07,120 --> 00:06:11,600
holland for example or the us and new

202
00:06:09,759 --> 00:06:12,240
york would be more closely related to

203
00:06:11,600 --> 00:06:16,000
the u.s

204
00:06:12,240 --> 00:06:17,919
than for example spain

205
00:06:16,000 --> 00:06:20,319
and that basically went for all words

206
00:06:17,919 --> 00:06:22,719
and a lot of research was done there

207
00:06:20,319 --> 00:06:24,080
and then we jumped for it and then with

208
00:06:22,720 --> 00:06:25,600
the whole machine learning boom

209
00:06:24,080 --> 00:06:27,199
we saw there was a lot of work being

210
00:06:25,600 --> 00:06:29,360
done with um

211
00:06:27,199 --> 00:06:30,800
with based on machine learning and these

212
00:06:29,360 --> 00:06:32,479
word embeddings

213
00:06:30,800 --> 00:06:34,720
and then what we also saw it was and it

214
00:06:32,479 --> 00:06:36,240
was like we got first word to vac

215
00:06:34,720 --> 00:06:38,319
got glove and nowadays have what they

216
00:06:36,240 --> 00:06:39,680
call in the academic realm

217
00:06:38,319 --> 00:06:41,440
which they call a state of the arts

218
00:06:39,680 --> 00:06:44,319
called bird but

219
00:06:41,440 --> 00:06:46,000
if we now put on our engineering hat we

220
00:06:44,319 --> 00:06:48,400
really fell in love with

221
00:06:46,000 --> 00:06:50,000
glove and why did we fall in love with

222
00:06:48,400 --> 00:06:52,318
glove because

223
00:06:50,000 --> 00:06:53,039
bird has multiple representations of a

224
00:06:52,319 --> 00:06:56,400
word

225
00:06:53,039 --> 00:06:56,800
in that data set but glove doesn't gloth

226
00:06:56,400 --> 00:06:59,919
has

227
00:06:56,800 --> 00:07:01,599
one vector representation for every word

228
00:06:59,919 --> 00:07:02,960
and the critique that it often got was

229
00:07:01,599 --> 00:07:04,960
that well if you for example have the

230
00:07:02,960 --> 00:07:07,599
name apple apple can mean of course

231
00:07:04,960 --> 00:07:08,960
um fruit but it can also mean the

232
00:07:07,599 --> 00:07:10,880
company

233
00:07:08,960 --> 00:07:12,080
and um but we wanted to solve the

234
00:07:10,880 --> 00:07:14,000
problem in a different way

235
00:07:12,080 --> 00:07:16,000
but as engineers we were very happy with

236
00:07:14,000 --> 00:07:17,599
this because now we could index it we

237
00:07:16,000 --> 00:07:21,039
could index those words

238
00:07:17,599 --> 00:07:23,039
in a storage mechanism so if you start

239
00:07:21,039 --> 00:07:26,080
alleviate you can imagine it like this

240
00:07:23,039 --> 00:07:27,599
it's an empty space that you start you

241
00:07:26,080 --> 00:07:29,359
choose a language not a programming

242
00:07:27,599 --> 00:07:32,159
language but a spoken language

243
00:07:29,360 --> 00:07:33,599
so let's say for example english and

244
00:07:32,160 --> 00:07:36,880
this space is filled

245
00:07:33,599 --> 00:07:38,000
with all those words so for example if

246
00:07:36,880 --> 00:07:40,159
you find apple

247
00:07:38,000 --> 00:07:41,120
you find nearby fruit you find nearby

248
00:07:40,160 --> 00:07:43,919
company

249
00:07:41,120 --> 00:07:45,759
and you might also find iphone and these

250
00:07:43,919 --> 00:07:47,840
representations that we store

251
00:07:45,759 --> 00:07:48,960
they have a 600 dimensional

252
00:07:47,840 --> 00:07:50,960
representation

253
00:07:48,960 --> 00:07:54,159
which is very fancy but just it has to

254
00:07:50,960 --> 00:07:57,599
do with compression that kind of stuff

255
00:07:54,160 --> 00:07:59,840
and the thing that we did is this if you

256
00:07:57,599 --> 00:08:01,520
store a data object like this so for

257
00:07:59,840 --> 00:08:04,638
example the class company

258
00:08:01,520 --> 00:08:05,440
with the name apple found it in 1976 et

259
00:08:04,639 --> 00:08:07,360
cetera

260
00:08:05,440 --> 00:08:08,879
and in when i demo i will show you how

261
00:08:07,360 --> 00:08:10,319
that actually works but

262
00:08:08,879 --> 00:08:13,680
if you've studied information what we've

263
00:08:10,319 --> 00:08:15,360
yet is that it creates a string

264
00:08:13,680 --> 00:08:18,560
of the words and the concepts that are

265
00:08:15,360 --> 00:08:20,479
in there and it takes those concepts

266
00:08:18,560 --> 00:08:22,800
and it funnels them down how does it do

267
00:08:20,479 --> 00:08:23,599
that it says like it takes the euclidean

268
00:08:22,800 --> 00:08:25,919
distance

269
00:08:23,599 --> 00:08:28,000
it combines it with e this sounds very

270
00:08:25,919 --> 00:08:29,599
fancy but with a logarithmic function

271
00:08:28,000 --> 00:08:31,440
based among the occurrence of the word

272
00:08:29,599 --> 00:08:33,519
so for example company

273
00:08:31,440 --> 00:08:35,360
might occur less often than the word

274
00:08:33,519 --> 00:08:37,279
apple so then we say the word company is

275
00:08:35,360 --> 00:08:39,200
more important

276
00:08:37,279 --> 00:08:40,559
and then we even work with word boosting

277
00:08:39,200 --> 00:08:42,560
so that you can say certain words are

278
00:08:40,559 --> 00:08:44,640
important in my data object

279
00:08:42,559 --> 00:08:46,640
but what we do with that is that we

280
00:08:44,640 --> 00:08:49,040
create our verge

281
00:08:46,640 --> 00:08:50,000
our first object in our graph and it

282
00:08:49,040 --> 00:08:53,040
gets its own

283
00:08:50,000 --> 00:08:53,279
factor representation so now if we have

284
00:08:53,040 --> 00:08:55,040
an

285
00:08:53,279 --> 00:08:56,880
empty v8 with those words in that then

286
00:08:55,040 --> 00:08:59,920
we store our first

287
00:08:56,880 --> 00:09:02,959
um data object as you can see there

288
00:08:59,920 --> 00:09:04,479
there it is it lives that's where it

289
00:09:02,959 --> 00:09:05,279
lives in the vector space that's what we

290
00:09:04,480 --> 00:09:09,440
mean

291
00:09:05,279 --> 00:09:13,120
so now if we query for let's say

292
00:09:09,440 --> 00:09:16,480
a company an iphone it can look in the

293
00:09:13,120 --> 00:09:19,120
nearby space and find the data object

294
00:09:16,480 --> 00:09:21,279
so now without even having iphone in the

295
00:09:19,120 --> 00:09:23,519
data object we can still find it

296
00:09:21,279 --> 00:09:24,560
and that's the thing that we created

297
00:09:23,519 --> 00:09:26,800
that we thought okay

298
00:09:24,560 --> 00:09:28,719
this is this is our thing right this is

299
00:09:26,800 --> 00:09:30,319
our our golden goose act because

300
00:09:28,720 --> 00:09:32,399
now we have different ways of creating

301
00:09:30,320 --> 00:09:34,160
graphs and actually query through them

302
00:09:32,399 --> 00:09:35,440
so this example for example might look

303
00:09:34,160 --> 00:09:37,600
something like this

304
00:09:35,440 --> 00:09:39,120
so if i have a data set with companies

305
00:09:37,600 --> 00:09:41,440
and this would be my graphql

306
00:09:39,120 --> 00:09:42,959
query where i said get give me things

307
00:09:41,440 --> 00:09:43,920
which are companies and i want to have

308
00:09:42,959 --> 00:09:47,040
their names

309
00:09:43,920 --> 00:09:48,240
but explore them by iphone i might get

310
00:09:47,040 --> 00:09:50,800
this result

311
00:09:48,240 --> 00:09:52,640
apple and as you see iphone is nowhere

312
00:09:50,800 --> 00:09:54,959
in the dead object

313
00:09:52,640 --> 00:09:55,839
and if i have that same data set and i

314
00:09:54,959 --> 00:09:57,680
would say well

315
00:09:55,839 --> 00:09:59,600
a little bit more abstract organize

316
00:09:57,680 --> 00:10:01,680
these companies

317
00:09:59,600 --> 00:10:03,519
on the concept of redmond i might get

318
00:10:01,680 --> 00:10:06,959
back microsoft

319
00:10:03,519 --> 00:10:10,800
and that's how we structure our graph

320
00:10:06,959 --> 00:10:12,319
so um and so that's basically what we've

321
00:10:10,800 --> 00:10:14,079
hear this and as a developer we've had

322
00:10:12,320 --> 00:10:15,200
comes with a few features

323
00:10:14,079 --> 00:10:17,199
so the first thing is that's that

324
00:10:15,200 --> 00:10:18,000
confectionary comes all out of the box

325
00:10:17,200 --> 00:10:19,680
you don't have to do

326
00:10:18,000 --> 00:10:22,000
your training you don't have to set it

327
00:10:19,680 --> 00:10:24,399
up whatever it comes all out of the box

328
00:10:22,000 --> 00:10:26,000
um or basically all out of the container

329
00:10:24,399 --> 00:10:28,720
i should say

330
00:10:26,000 --> 00:10:29,920
adding data happens to the http api but

331
00:10:28,720 --> 00:10:32,800
crawling data

332
00:10:29,920 --> 00:10:34,399
to the graphql api it's completely

333
00:10:32,800 --> 00:10:35,359
containerized so you can run it wherever

334
00:10:34,399 --> 00:10:38,160
you want

335
00:10:35,360 --> 00:10:39,200
um and because we use that vector space

336
00:10:38,160 --> 00:10:42,240
it's very very

337
00:10:39,200 --> 00:10:44,320
scalable you can skill this that space

338
00:10:42,240 --> 00:10:46,560
very very tremendously big so i think

339
00:10:44,320 --> 00:10:47,279
the the biggest one that we ever tried

340
00:10:46,560 --> 00:10:49,760
was a few

341
00:10:47,279 --> 00:10:51,040
it was a few billions it gets pretty big

342
00:10:49,760 --> 00:10:52,800
and something that we have in the

343
00:10:51,040 --> 00:10:53,680
pipeline and maybe i can show you that

344
00:10:52,800 --> 00:10:55,920
next year

345
00:10:53,680 --> 00:10:58,399
but is that we also can create

346
00:10:55,920 --> 00:11:00,079
peer-to-peer networks of viviates

347
00:10:58,399 --> 00:11:01,839
so that we can point to semantic

348
00:11:00,079 --> 00:11:04,000
elements in different graphs

349
00:11:01,839 --> 00:11:05,440
so that we don't have to agree anymore

350
00:11:04,000 --> 00:11:07,760
on our ontologies

351
00:11:05,440 --> 00:11:10,079
or on our schemas but that's like that's

352
00:11:07,760 --> 00:11:12,079
that's in the making

353
00:11:10,079 --> 00:11:13,279
so a little bit about graphql so i have

354
00:11:12,079 --> 00:11:15,439
so when i demo that so

355
00:11:13,279 --> 00:11:17,519
how we structure our graph here this is

356
00:11:15,440 --> 00:11:20,399
the um

357
00:11:17,519 --> 00:11:20,720
the ux if you will of our graphql so we

358
00:11:20,399 --> 00:11:22,560
have

359
00:11:20,720 --> 00:11:23,760
a get function first the other one is an

360
00:11:22,560 --> 00:11:25,199
aggregate function but i'm going to talk

361
00:11:23,760 --> 00:11:27,519
about the get function

362
00:11:25,200 --> 00:11:29,680
we have a semantic kind which we make a

363
00:11:27,519 --> 00:11:31,920
distinction between things and actions

364
00:11:29,680 --> 00:11:33,439
nouns and verbs you have the class the

365
00:11:31,920 --> 00:11:35,680
class as the property

366
00:11:33,440 --> 00:11:36,720
a property might have a reference and

367
00:11:35,680 --> 00:11:38,880
then the property

368
00:11:36,720 --> 00:11:40,640
itself and what you can do you can have

369
00:11:38,880 --> 00:11:43,360
these semantic filters on top of that so

370
00:11:40,640 --> 00:11:45,760
there you see for example the explore

371
00:11:43,360 --> 00:11:47,920
filter and they can search for concepts

372
00:11:45,760 --> 00:11:49,920
but you can even move away from concepts

373
00:11:47,920 --> 00:11:51,519
of move towards concepts and i will demo

374
00:11:49,920 --> 00:11:54,079
that to you in a bit

375
00:11:51,519 --> 00:11:55,360
um ah well demo so now we get to the

376
00:11:54,079 --> 00:11:57,439
demo so now you might wonder

377
00:11:55,360 --> 00:11:58,480
how does that actually look so what i

378
00:11:57,440 --> 00:12:01,920
did is that i

379
00:11:58,480 --> 00:12:03,760
spun up a um a

380
00:12:01,920 --> 00:12:06,000
docker container if you want to do that

381
00:12:03,760 --> 00:12:07,120
yourself if you go to our website send

382
00:12:06,000 --> 00:12:08,560
me the technology

383
00:12:07,120 --> 00:12:10,880
and then you simply click with y8 and

384
00:12:08,560 --> 00:12:12,638
then you find all the documentation

385
00:12:10,880 --> 00:12:14,320
the installation gives you just a weave

386
00:12:12,639 --> 00:12:14,720
yet but what i'm gonna demo to you is

387
00:12:14,320 --> 00:12:17,360
this

388
00:12:14,720 --> 00:12:18,320
news publications data set and if you

389
00:12:17,360 --> 00:12:20,480
click that one

390
00:12:18,320 --> 00:12:21,760
there's just one simple docker compose

391
00:12:20,480 --> 00:12:22,320
command that you can run that you can

392
00:12:21,760 --> 00:12:25,279
play

393
00:12:22,320 --> 00:12:26,720
you know around with it yourself so

394
00:12:25,279 --> 00:12:28,079
there's a meta endpoint

395
00:12:26,720 --> 00:12:30,000
which i'm just running just to make sure

396
00:12:28,079 --> 00:12:32,479
yes so that is running well

397
00:12:30,000 --> 00:12:34,240
so let's first look at the schema so

398
00:12:32,480 --> 00:12:35,440
this is an example of schema so

399
00:12:34,240 --> 00:12:38,000
here you see i have the class

400
00:12:35,440 --> 00:12:39,680
publication and i have i have

401
00:12:38,000 --> 00:12:42,160
the name name so the name of the

402
00:12:39,680 --> 00:12:44,800
publication but for example

403
00:12:42,160 --> 00:12:45,600
so i set the headquarter g location

404
00:12:44,800 --> 00:12:47,519
which is

405
00:12:45,600 --> 00:12:48,720
our geo coordinates has articles et

406
00:12:47,519 --> 00:12:49,360
cetera et cetera this is how we

407
00:12:48,720 --> 00:12:51,760
structure

408
00:12:49,360 --> 00:12:52,800
the schema that's important because we

409
00:12:51,760 --> 00:12:55,439
will see that back

410
00:12:52,800 --> 00:12:57,359
when we use graphql to query and the

411
00:12:55,440 --> 00:12:59,440
things that we actually store

412
00:12:57,360 --> 00:13:01,040
look like this so for example here you

413
00:12:59,440 --> 00:13:04,480
see an article the article has an

414
00:13:01,040 --> 00:13:06,319
id a beacon is a reference in our graph

415
00:13:04,480 --> 00:13:08,399
but why do we call it beacon because we

416
00:13:06,320 --> 00:13:09,760
do it in a space so it's a beacon in the

417
00:13:08,399 --> 00:13:11,040
space

418
00:13:09,760 --> 00:13:12,800
and then here you see for example a

419
00:13:11,040 --> 00:13:13,599
summary of the article the title of the

420
00:13:12,800 --> 00:13:15,120
article

421
00:13:13,600 --> 00:13:17,839
and the url where the article actually

422
00:13:15,120 --> 00:13:21,120
comes from so that's how it's structured

423
00:13:17,839 --> 00:13:24,880
so we've created a simple um

424
00:13:21,120 --> 00:13:27,680
uh gui that you can use to actually

425
00:13:24,880 --> 00:13:27,920
uh you know look through and search to

426
00:13:27,680 --> 00:13:29,680
the

427
00:13:27,920 --> 00:13:30,959
to the graph so you can visualize stuff

428
00:13:29,680 --> 00:13:34,719
but i wanna i wanna

429
00:13:30,959 --> 00:13:37,518
dive into the um the graphql queries

430
00:13:34,720 --> 00:13:37,920
so let me show you a simple query so if

431
00:13:37,519 --> 00:13:42,079
i say

432
00:13:37,920 --> 00:13:43,680
get things and i want to have

433
00:13:42,079 --> 00:13:45,839
i want to have a publication and i want

434
00:13:43,680 --> 00:13:47,839
to see the name this would be

435
00:13:45,839 --> 00:13:49,680
a valid query then you see why i see

436
00:13:47,839 --> 00:13:52,800
vogue financial times wyatt new york

437
00:13:49,680 --> 00:13:55,920
economist etc now what i now can do

438
00:13:52,800 --> 00:14:00,639
is that i can say well

439
00:13:55,920 --> 00:14:03,920
i want to oh i want to explore

440
00:14:00,639 --> 00:14:07,120
for the concept let's say

441
00:14:03,920 --> 00:14:09,279
business and i'm gonna limit it to three

442
00:14:07,120 --> 00:14:12,160
results just that it's easier readable

443
00:14:09,279 --> 00:14:13,920
so i know i said do the same query but

444
00:14:12,160 --> 00:14:16,880
explore based on the concepts

445
00:14:13,920 --> 00:14:18,399
of business so if i now run the square

446
00:14:16,880 --> 00:14:20,000
you see financial times the new york

447
00:14:18,399 --> 00:14:21,839
times international times etc

448
00:14:20,000 --> 00:14:23,040
but you see the word business the meta

449
00:14:21,839 --> 00:14:25,279
tag it's nowhere there

450
00:14:23,040 --> 00:14:26,880
that's what comes from the contextionary

451
00:14:25,279 --> 00:14:29,360
or if i would say

452
00:14:26,880 --> 00:14:31,040
fashion and i would run it then you see

453
00:14:29,360 --> 00:14:32,560
it starts for example with voc

454
00:14:31,040 --> 00:14:34,079
so that's how we structured it and how

455
00:14:32,560 --> 00:14:35,920
it works

456
00:14:34,079 --> 00:14:38,079
um but that's not not only going for

457
00:14:35,920 --> 00:14:41,279
like small strings but also for larger

458
00:14:38,079 --> 00:14:42,239
larger text objects so for example if i

459
00:14:41,279 --> 00:14:45,519
would say get

460
00:14:42,240 --> 00:14:48,639
things article and i would say

461
00:14:45,519 --> 00:14:50,160
show me the title of the article

462
00:14:48,639 --> 00:14:52,560
and run the query so now you see all

463
00:14:50,160 --> 00:14:55,600
these articles about

464
00:14:52,560 --> 00:14:57,279
a variety of topics you see brexit so

465
00:14:55,600 --> 00:14:59,760
you can see when we when we

466
00:14:57,279 --> 00:15:01,680
actually pulled that in but just a

467
00:14:59,760 --> 00:15:04,079
variety of topics in here

468
00:15:01,680 --> 00:15:06,079
but if i now say well i wanna do i have

469
00:15:04,079 --> 00:15:08,638
those articles

470
00:15:06,079 --> 00:15:10,638
i'm gonna use the explore function again

471
00:15:08,639 --> 00:15:11,680
and i can i say well i wanna explore for

472
00:15:10,639 --> 00:15:15,680
the concepts

473
00:15:11,680 --> 00:15:17,519
let's say music

474
00:15:15,680 --> 00:15:20,000
and i'm going to limit the results again

475
00:15:17,519 --> 00:15:21,920
just for the sake of readability

476
00:15:20,000 --> 00:15:24,399
so same query but now based on the

477
00:15:21,920 --> 00:15:24,880
articles so if i run this you say like

478
00:15:24,399 --> 00:15:26,320
you seek

479
00:15:24,880 --> 00:15:28,480
fair enough the first one has the word

480
00:15:26,320 --> 00:15:30,560
musical but then it's about

481
00:15:28,480 --> 00:15:32,399
gwen stefani and then it's about john

482
00:15:30,560 --> 00:15:33,839
lennon so you see the word music

483
00:15:32,399 --> 00:15:36,720
is not necessarily in there but it

484
00:15:33,839 --> 00:15:38,320
organizes it like that automatically

485
00:15:36,720 --> 00:15:39,759
so now even if you want to filter

486
00:15:38,320 --> 00:15:41,680
further in this

487
00:15:39,759 --> 00:15:43,680
in this graph what you can do is that

488
00:15:41,680 --> 00:15:45,040
you can say well

489
00:15:43,680 --> 00:15:46,800
the question we had like how do we do

490
00:15:45,040 --> 00:15:49,839
pagination because if you have a 600

491
00:15:46,800 --> 00:15:53,199
dimensional space what would be the next

492
00:15:49,839 --> 00:15:54,000
page so what we've done is this so we

493
00:15:53,199 --> 00:15:56,399
said well we

494
00:15:54,000 --> 00:15:57,600
can actually for example move towards a

495
00:15:56,399 --> 00:16:00,320
concept

496
00:15:57,600 --> 00:16:02,399
so i can say well uh move towards the

497
00:16:00,320 --> 00:16:03,680
concept for example of the beatles so i

498
00:16:02,399 --> 00:16:05,040
guess you already know what will happen

499
00:16:03,680 --> 00:16:07,120
if i do that

500
00:16:05,040 --> 00:16:08,959
so and i give it a certain force the

501
00:16:07,120 --> 00:16:10,079
force is how strongly you want to push

502
00:16:08,959 --> 00:16:12,880
towards this concept

503
00:16:10,079 --> 00:16:14,160
inside the vector space so let's say

504
00:16:12,880 --> 00:16:14,720
it's a little bit arbitrary but let's

505
00:16:14,160 --> 00:16:17,839
say

506
00:16:14,720 --> 00:16:19,440
85 percent so if i do that now you see

507
00:16:17,839 --> 00:16:20,880
that john lennon the article with john

508
00:16:19,440 --> 00:16:22,240
lennon comes first

509
00:16:20,880 --> 00:16:24,160
and if i say like i'm more like a

510
00:16:22,240 --> 00:16:27,199
stone's person i hate the beatles

511
00:16:24,160 --> 00:16:28,959
then of course you can also do move away

512
00:16:27,199 --> 00:16:32,800
from the concept of the beatles

513
00:16:28,959 --> 00:16:34,800
same query and we see john lennon is

514
00:16:32,800 --> 00:16:36,079
gone and now the question is like okay

515
00:16:34,800 --> 00:16:37,758
so what makes it

516
00:16:36,079 --> 00:16:39,120
so like now the traditional graph people

517
00:16:37,759 --> 00:16:41,279
are like yeah but i haven't seen

518
00:16:39,120 --> 00:16:42,880
the graph in action yet so that's just

519
00:16:41,279 --> 00:16:43,759
very simple because we could say for

520
00:16:42,880 --> 00:16:48,480
example

521
00:16:43,759 --> 00:16:50,480
has authors and we can say on author

522
00:16:48,480 --> 00:16:52,480
the author has a name so this is how we

523
00:16:50,480 --> 00:16:54,399
structure the graph so now you see here

524
00:16:52,480 --> 00:16:56,880
so you see the graph object here

525
00:16:54,399 --> 00:16:57,600
that says first the title of the article

526
00:16:56,880 --> 00:16:59,360
and it has

527
00:16:57,600 --> 00:17:01,440
authors and then actually the authors

528
00:16:59,360 --> 00:17:04,959
that are related to this

529
00:17:01,440 --> 00:17:06,160
to this article i think if time allows

530
00:17:04,959 --> 00:17:07,679
it there's one more thing

531
00:17:06,160 --> 00:17:09,600
can i still quickly show one more thing

532
00:17:07,679 --> 00:17:11,439
yes so the uh there's one more thing

533
00:17:09,599 --> 00:17:13,039
which i completely forgot because

534
00:17:11,439 --> 00:17:14,880
there's another problem that we also try

535
00:17:13,039 --> 00:17:17,359
to solve for this and i want to show you

536
00:17:14,880 --> 00:17:20,480
that going back to the publications so

537
00:17:17,359 --> 00:17:24,079
quickly going back to the publications

538
00:17:20,480 --> 00:17:27,439
things publication and an essay

539
00:17:24,079 --> 00:17:28,879
name of the publication when

540
00:17:27,439 --> 00:17:30,160
when you glanced over this you might

541
00:17:28,880 --> 00:17:31,280
have noticed that we have all these

542
00:17:30,160 --> 00:17:32,799
publications but we have the

543
00:17:31,280 --> 00:17:34,639
international new york times

544
00:17:32,799 --> 00:17:36,879
the new york times company and the new

545
00:17:34,640 --> 00:17:38,480
york times in there three times

546
00:17:36,880 --> 00:17:39,919
which is a problem because of course you

547
00:17:38,480 --> 00:17:41,360
want to represent concepts

548
00:17:39,919 --> 00:17:43,440
but in the database we have the same

549
00:17:41,360 --> 00:17:46,719
concept represented three times

550
00:17:43,440 --> 00:17:47,200
so we have something for that what you

551
00:17:46,720 --> 00:17:48,640
can do

552
00:17:47,200 --> 00:17:50,720
is that we can say well we want to group

553
00:17:48,640 --> 00:17:53,280
concepts together

554
00:17:50,720 --> 00:17:55,039
so then we say i'm going to do the type

555
00:17:53,280 --> 00:17:57,440
merge them together

556
00:17:55,039 --> 00:17:59,039
i'm going to give a 4 so how big do we

557
00:17:57,440 --> 00:18:00,320
need to look in the vector space before

558
00:17:59,039 --> 00:18:02,160
merging

559
00:18:00,320 --> 00:18:03,439
and then i can say well do that with

560
00:18:02,160 --> 00:18:05,760
five percent

561
00:18:03,440 --> 00:18:07,280
so if i now run this query you'll see

562
00:18:05,760 --> 00:18:08,640
that it merged together

563
00:18:07,280 --> 00:18:10,080
the international new york times new

564
00:18:08,640 --> 00:18:11,280
york times company and the new york

565
00:18:10,080 --> 00:18:14,559
times

566
00:18:11,280 --> 00:18:16,160
but if i now do a graph query so i say

567
00:18:14,559 --> 00:18:20,160
has articles

568
00:18:16,160 --> 00:18:22,400
on article the title of the article

569
00:18:20,160 --> 00:18:23,440
it even now merges together those

570
00:18:22,400 --> 00:18:25,280
different articles

571
00:18:23,440 --> 00:18:27,280
from those different publications into

572
00:18:25,280 --> 00:18:29,840
the same concept

573
00:18:27,280 --> 00:18:30,559
so that's what we have that's how it

574
00:18:29,840 --> 00:18:33,120
works

575
00:18:30,559 --> 00:18:34,799
uh oh way more features the automatic

576
00:18:33,120 --> 00:18:36,239
classification i didn't even get to show

577
00:18:34,799 --> 00:18:36,960
you that but you can play around with it

578
00:18:36,240 --> 00:18:38,640
because

579
00:18:36,960 --> 00:18:40,799
well we're at fosdem so this software is

580
00:18:38,640 --> 00:18:42,080
open source you can play around with it

581
00:18:40,799 --> 00:18:44,320
you can set it up yourself you can

582
00:18:42,080 --> 00:18:47,039
create your own graphs

583
00:18:44,320 --> 00:18:47,678
semantic graphs i should say that's my

584
00:18:47,039 --> 00:18:49,360
story

585
00:18:47,679 --> 00:18:51,679
in a nutshell thank you all for

586
00:18:49,360 --> 00:18:53,840
listening and

587
00:18:51,679 --> 00:18:56,880
if you like it and if you go to our

588
00:18:53,840 --> 00:19:00,159
website then i just have one question

589
00:18:56,880 --> 00:19:01,520
so this is our website if you go here

590
00:19:00,160 --> 00:19:02,880
then you can sign up to our newsletter

591
00:19:01,520 --> 00:19:04,400
if you want to learn or you can click on

592
00:19:02,880 --> 00:19:06,400
the github star

593
00:19:04,400 --> 00:19:07,520
button if you want to and it'll promote

594
00:19:06,400 --> 00:19:08,880
a little bit so that's

595
00:19:07,520 --> 00:19:10,240
but this is our website thank you very

596
00:19:08,880 --> 00:19:17,490
much for listening

597
00:19:10,240 --> 00:19:17,490
[Applause]

598
00:19:18,160 --> 00:19:25,840
thank you very much thank you

599
00:19:28,480 --> 00:19:31,840
uh i actually have two questions you

600
00:19:30,960 --> 00:19:34,960
said that your

601
00:19:31,840 --> 00:19:37,840
semantic uh let's say makings

602
00:19:34,960 --> 00:19:39,600
are based on love but for larger text

603
00:19:37,840 --> 00:19:40,399
sentences would you do a simple

604
00:19:39,600 --> 00:19:43,039
averaging

605
00:19:40,400 --> 00:19:43,039
because globally

606
00:19:44,000 --> 00:19:48,400
and the second question is i guess so

607
00:19:46,880 --> 00:19:51,039
you showed us in examples

608
00:19:48,400 --> 00:19:53,120
where is based on single words but can

609
00:19:51,039 --> 00:19:56,879
we actually input the

610
00:19:53,120 --> 00:19:59,918
sentence in that case i suppose

611
00:19:56,880 --> 00:20:01,840
your model will have to cook up a

612
00:19:59,919 --> 00:20:03,360
vector embedding for that is that

613
00:20:01,840 --> 00:20:06,559
actually sustainable

614
00:20:03,360 --> 00:20:08,879
if i put it on a server then everybody

615
00:20:06,559 --> 00:20:09,840
tries to you know run your model to get

616
00:20:08,880 --> 00:20:12,960
there

617
00:20:09,840 --> 00:20:15,678
how did you solve that resource problem

618
00:20:12,960 --> 00:20:16,720
so two questions sorry about that no no

619
00:20:15,679 --> 00:20:18,240
why are you sure about it

620
00:20:16,720 --> 00:20:20,320
i know that those are great questions so

621
00:20:18,240 --> 00:20:22,960
let me let me start with the first

622
00:20:20,320 --> 00:20:24,559
uh answer to the first question so um

623
00:20:22,960 --> 00:20:25,120
and and sorry if i went over that

624
00:20:24,559 --> 00:20:28,158
quickly

625
00:20:25,120 --> 00:20:29,678
too quickly because it's um um

626
00:20:28,159 --> 00:20:31,600
this whole everything what i told is

627
00:20:29,679 --> 00:20:34,080
also on the website in detail

628
00:20:31,600 --> 00:20:34,719
um but that's what's happening here we

629
00:20:34,080 --> 00:20:37,439
always

630
00:20:34,720 --> 00:20:38,320
use this same algorithm so if you would

631
00:20:37,440 --> 00:20:39,840
have a

632
00:20:38,320 --> 00:20:41,439
that object with a longer sentence like

633
00:20:39,840 --> 00:20:43,600
for example the summary or the title of

634
00:20:41,440 --> 00:20:46,799
the articles that you've seen

635
00:20:43,600 --> 00:20:46,799
it applies the same

636
00:20:46,840 --> 00:20:51,520
algorithm so it says like first i take

637
00:20:49,360 --> 00:20:53,439
all these individual words

638
00:20:51,520 --> 00:20:54,559
then i find the center position between

639
00:20:53,440 --> 00:20:56,000
those words

640
00:20:54,559 --> 00:20:58,080
then i weigh them based on the

641
00:20:56,000 --> 00:20:59,600
occurrence so certain words are seen as

642
00:20:58,080 --> 00:21:01,360
more important than others so it weighs

643
00:20:59,600 --> 00:21:02,719
it towards that

644
00:21:01,360 --> 00:21:04,000
and then we have this optional word

645
00:21:02,720 --> 00:21:05,679
boosting that you can say but in this

646
00:21:04,000 --> 00:21:06,480
specific case this word is very

647
00:21:05,679 --> 00:21:08,880
important

648
00:21:06,480 --> 00:21:10,640
so move more towards that that's how we

649
00:21:08,880 --> 00:21:13,440
create those vector positions so

650
00:21:10,640 --> 00:21:14,840
regardless if you're querying or if

651
00:21:13,440 --> 00:21:18,080
you're

652
00:21:14,840 --> 00:21:20,000
um adding data that's how we do it

653
00:21:18,080 --> 00:21:21,600
so that's why we also became agnostic

654
00:21:20,000 --> 00:21:22,480
about the fact that gloves about single

655
00:21:21,600 --> 00:21:25,120
words

656
00:21:22,480 --> 00:21:27,200
and because we learned that if we so we

657
00:21:25,120 --> 00:21:28,239
the first prototype we did way back was

658
00:21:27,200 --> 00:21:31,360
very simple

659
00:21:28,240 --> 00:21:33,039
we say okay i have the word apple

660
00:21:31,360 --> 00:21:34,879
show me what's nearby and then as you

661
00:21:33,039 --> 00:21:36,640
would expect as glove does it says like

662
00:21:34,880 --> 00:21:38,880
well i found iphone but also

663
00:21:36,640 --> 00:21:39,840
found fruit and then we did something

664
00:21:38,880 --> 00:21:41,360
very simple

665
00:21:39,840 --> 00:21:42,959
we said okay now go and sit in the

666
00:21:41,360 --> 00:21:45,199
center between

667
00:21:42,960 --> 00:21:46,320
apple and iphone show me again what

668
00:21:45,200 --> 00:21:49,440
happens

669
00:21:46,320 --> 00:21:51,039
and then you see actually um that that's

670
00:21:49,440 --> 00:21:51,600
successful and if i if i may i can

671
00:21:51,039 --> 00:21:53,440
actually

672
00:21:51,600 --> 00:21:54,719
quickly show that yeah i'm the last

673
00:21:53,440 --> 00:21:57,280
talker so

674
00:21:54,720 --> 00:21:58,559
thank you like i should have waited

675
00:21:57,280 --> 00:22:00,879
till you had said go ahead

676
00:21:58,559 --> 00:22:02,480
and then thank you so um there's a

677
00:22:00,880 --> 00:22:05,120
confectionary endpoint

678
00:22:02,480 --> 00:22:06,880
where you can say well concepts so if i

679
00:22:05,120 --> 00:22:08,000
now literally do what i just said so if

680
00:22:06,880 --> 00:22:11,039
i would say

681
00:22:08,000 --> 00:22:12,080
apple then you see here apple itunes

682
00:22:11,039 --> 00:22:13,840
google preview

683
00:22:12,080 --> 00:22:15,918
on this and now of course in this

684
00:22:13,840 --> 00:22:17,360
example we don't see

685
00:22:15,919 --> 00:22:18,960
of course the fruit but let's say if i

686
00:22:17,360 --> 00:22:20,719
would do apple and not based on the

687
00:22:18,960 --> 00:22:23,039
company but on fruit

688
00:22:20,720 --> 00:22:25,200
so i concatenate them apple and fruit

689
00:22:23,039 --> 00:22:27,120
you see how it now starts to

690
00:22:25,200 --> 00:22:28,400
get better and better in those results

691
00:22:27,120 --> 00:22:30,158
so and that's how it

692
00:22:28,400 --> 00:22:32,159
the algorithm works so you can play

693
00:22:30,159 --> 00:22:35,200
around with this also yourself on this

694
00:22:32,159 --> 00:22:37,760
on this end point and the other question

695
00:22:35,200 --> 00:22:37,760
yeah it was

696
00:22:39,280 --> 00:22:43,600
weights uh that they you know better

697
00:22:41,280 --> 00:22:44,720
look at the slider kind of uh ti-5ds

698
00:22:43,600 --> 00:22:48,000
weights

699
00:22:44,720 --> 00:22:50,799
at least frequency so if and you have to

700
00:22:48,000 --> 00:22:51,679
you know hook up these uh vectors for

701
00:22:50,799 --> 00:22:53,679
the embeddings

702
00:22:51,679 --> 00:22:54,880
every time we make a query is this

703
00:22:53,679 --> 00:22:57,600
sustainable

704
00:22:54,880 --> 00:22:58,720
for the normal servers you have some

705
00:22:57,600 --> 00:23:02,158
solutions there

706
00:22:58,720 --> 00:23:04,080
that you can tell us yeah sure so we um

707
00:23:02,159 --> 00:23:06,240
um we of course we're also like we're

708
00:23:04,080 --> 00:23:07,840
also a business so we have like uh

709
00:23:06,240 --> 00:23:09,600
so the core is like open source probably

710
00:23:07,840 --> 00:23:11,600
built like a shell around that

711
00:23:09,600 --> 00:23:12,639
so we currently have six companies using

712
00:23:11,600 --> 00:23:14,879
this on a large scale

713
00:23:12,640 --> 00:23:16,720
in in a variety of industries uh

714
00:23:14,880 --> 00:23:18,960
wholesale retail

715
00:23:16,720 --> 00:23:20,320
oil and gas all those kind of things and

716
00:23:18,960 --> 00:23:22,320
these graphs get

717
00:23:20,320 --> 00:23:23,760
pretty big and especially if you scale

718
00:23:22,320 --> 00:23:26,559
the kubernetes cluster

719
00:23:23,760 --> 00:23:27,520
it's fast which is something i'm now i

720
00:23:26,559 --> 00:23:29,840
could say that we

721
00:23:27,520 --> 00:23:31,360
fancy like architected that but it was

722
00:23:29,840 --> 00:23:34,399
actually something we got for free

723
00:23:31,360 --> 00:23:36,639
because we just the data model is just

724
00:23:34,400 --> 00:23:38,000
vectors only vectors and that's of

725
00:23:36,640 --> 00:23:40,320
course very fast

726
00:23:38,000 --> 00:23:41,919
to scale and to search through so the

727
00:23:40,320 --> 00:23:44,158
answer to that question is

728
00:23:41,919 --> 00:23:44,159
yes

729
00:23:45,039 --> 00:23:48,559
can you use this for translation uh like

730
00:23:47,440 --> 00:23:51,600
you said

731
00:23:48,559 --> 00:23:53,279
your vector space um is

732
00:23:51,600 --> 00:23:55,120
built in one language but again you

733
00:23:53,279 --> 00:23:58,240
compare vector spaces by

734
00:23:55,120 --> 00:24:00,080
uh looking if one concept is associated

735
00:23:58,240 --> 00:24:02,480
with all these things

736
00:24:00,080 --> 00:24:05,120
and in your second vector space another

737
00:24:02,480 --> 00:24:06,799
concept is also associated with the

738
00:24:05,120 --> 00:24:08,879
same things and you've already linked

739
00:24:06,799 --> 00:24:12,000
some some concepts can you

740
00:24:08,880 --> 00:24:14,320
translate use that for translation

741
00:24:12,000 --> 00:24:15,919
i don't know and i love the idea so

742
00:24:14,320 --> 00:24:17,439
we're definitely going to try that out

743
00:24:15,919 --> 00:24:19,600
i don't know i don't it's a great idea

744
00:24:17,440 --> 00:24:20,799
we haven't we haven't tried that yet so

745
00:24:19,600 --> 00:24:23,279
what we currently do is that we just

746
00:24:20,799 --> 00:24:26,879
have we have a review in a language

747
00:24:23,279 --> 00:24:29,760
so um uh dutch french english

748
00:24:26,880 --> 00:24:30,960
of course um but we haven't tried that

749
00:24:29,760 --> 00:24:32,320
yet so um

750
00:24:30,960 --> 00:24:33,840
if you don't mind then it would be

751
00:24:32,320 --> 00:24:34,559
fantastic too or of course you can try

752
00:24:33,840 --> 00:24:35,918
that yourself

753
00:24:34,559 --> 00:24:38,080
or we can do it together but that would

754
00:24:35,919 --> 00:24:42,480
be fantastic it's a great idea and

755
00:24:38,080 --> 00:24:42,480
i don't know thank you

756
00:24:42,640 --> 00:24:48,640
thanks very we are much

757
00:24:46,240 --> 00:24:49,679
over with the death room nice talk at

758
00:24:48,640 --> 00:24:51,840
the end um

759
00:24:49,679 --> 00:24:53,760
yeah i hope you all enjoyed it enjoy

760
00:24:51,840 --> 00:24:54,240
foster tomorrow enjoy the evening of

761
00:24:53,760 --> 00:24:57,039
course

762
00:24:54,240 --> 00:25:01,840
and maybe see you next year thank you

763
00:24:57,039 --> 00:25:01,840
thank you

764
00:25:03,840 --> 00:25:05,918
you

