1
00:00:05,120 --> 00:00:07,919
yeah i'm richard

2
00:00:06,080 --> 00:00:09,599
uh limits distribution engineer at souza

3
00:00:07,919 --> 00:00:10,879
which is like the most generic job title

4
00:00:09,599 --> 00:00:13,920
anywhere it's like you know

5
00:00:10,880 --> 00:00:15,519
human planet earth um

6
00:00:13,920 --> 00:00:17,279
and yeah i'm gonna be talking about some

7
00:00:15,519 --> 00:00:18,640
of the stuff i'm not going to be talking

8
00:00:17,279 --> 00:00:20,000
about a distribution for like my first

9
00:00:18,640 --> 00:00:20,880
time of first time ever instead i'm

10
00:00:20,000 --> 00:00:24,000
talking about a nice

11
00:00:20,880 --> 00:00:25,198
library living underneath but starting

12
00:00:24,000 --> 00:00:26,480
with that

13
00:00:25,199 --> 00:00:28,480
who is responsible for the for the

14
00:00:26,480 --> 00:00:32,560
configuration of a machine

15
00:00:28,480 --> 00:00:32,560
once it's deployed you know

16
00:00:33,760 --> 00:00:38,079
not leonard pottering although you know

17
00:00:35,920 --> 00:00:40,320
if you want to point fingers you can

18
00:00:38,079 --> 00:00:41,360
you know you know is it the distribution

19
00:00:40,320 --> 00:00:43,360
is it the upstream

20
00:00:41,360 --> 00:00:45,600
um who actually don't get a mention here

21
00:00:43,360 --> 00:00:48,239
um or or is it the user

22
00:00:45,600 --> 00:00:50,239
um you know from speaking from a

23
00:00:48,239 --> 00:00:52,160
distribution perspective

24
00:00:50,239 --> 00:00:54,320
you know i i honestly believe you know

25
00:00:52,160 --> 00:00:55,680
distributions have a hand in making sure

26
00:00:54,320 --> 00:00:57,199
the configuration

27
00:00:55,680 --> 00:00:59,359
of the operating system once it's

28
00:00:57,199 --> 00:00:59,920
deployed is right and sensible you know

29
00:00:59,359 --> 00:01:03,039
we we

30
00:00:59,920 --> 00:01:04,960
should be making sure the defaults are

31
00:01:03,039 --> 00:01:06,479
sensible and good out of the xbox

32
00:01:04,959 --> 00:01:08,399
experience you know

33
00:01:06,479 --> 00:01:09,600
secure you know whatever sensible means

34
00:01:08,400 --> 00:01:11,200
really i mean it's you know open to

35
00:01:09,600 --> 00:01:13,679
interpretation different distributions

36
00:01:11,200 --> 00:01:15,360
have different interpretations

37
00:01:13,680 --> 00:01:17,520
and of course different upstreams have

38
00:01:15,360 --> 00:01:19,600
different interpretations too

39
00:01:17,520 --> 00:01:20,880
um and you know sometimes we don't agree

40
00:01:19,600 --> 00:01:22,158
with what upstream have decided of the

41
00:01:20,880 --> 00:01:24,560
defaults

42
00:01:22,159 --> 00:01:26,479
but also upstreams always do interesting

43
00:01:24,560 --> 00:01:28,560
new stuff and that interesting new stuff

44
00:01:26,479 --> 00:01:30,560
often requires new configuration

45
00:01:28,560 --> 00:01:34,079
parameters to be set or you know the

46
00:01:30,560 --> 00:01:36,720
sensible defaults change and somehow we

47
00:01:34,079 --> 00:01:39,679
need to get that to our users

48
00:01:36,720 --> 00:01:40,000
but at the same time you know some users

49
00:01:39,680 --> 00:01:41,600
believe

50
00:01:40,000 --> 00:01:43,439
the mix is about choice or at least

51
00:01:41,600 --> 00:01:45,039
there's definitely the choice they have

52
00:01:43,439 --> 00:01:45,919
to you know potentially ruin their

53
00:01:45,040 --> 00:01:47,040
system

54
00:01:45,920 --> 00:01:49,360
you know and they want to configure

55
00:01:47,040 --> 00:01:51,680
their configuration the way they want it

56
00:01:49,360 --> 00:01:52,640
um and that means you know potentially

57
00:01:51,680 --> 00:01:55,360
having

58
00:01:52,640 --> 00:01:58,479
unsensible choices or at least you know

59
00:01:55,360 --> 00:02:00,560
weird ones that make no sense to us

60
00:01:58,479 --> 00:02:02,079
and they're not necessarily going to be

61
00:02:00,560 --> 00:02:03,520
paying attention to all of the stuff

62
00:02:02,079 --> 00:02:06,479
going on in the distribution

63
00:02:03,520 --> 00:02:08,160
in those upstreams so they're not

64
00:02:06,479 --> 00:02:08,959
necessarily going to know that this

65
00:02:08,160 --> 00:02:11,280
default needs

66
00:02:08,959 --> 00:02:12,879
changing this new feature has some nice

67
00:02:11,280 --> 00:02:13,840
new flag you know just like the system

68
00:02:12,879 --> 00:02:16,000
detox we knew

69
00:02:13,840 --> 00:02:17,200
we just had with all those wonderful

70
00:02:16,000 --> 00:02:18,879
different flags you can put into your

71
00:02:17,200 --> 00:02:21,679
system do unit files

72
00:02:18,879 --> 00:02:23,920
you know that you know right now if a

73
00:02:21,680 --> 00:02:25,040
lot of services a lot of demons you know

74
00:02:23,920 --> 00:02:27,599
that's

75
00:02:25,040 --> 00:02:28,319
a bit of a mindset and sort of the

76
00:02:27,599 --> 00:02:30,959
typical

77
00:02:28,319 --> 00:02:32,000
classical problem is you know

78
00:02:30,959 --> 00:02:33,920
distributions

79
00:02:32,000 --> 00:02:35,599
put up got a package we've got some

80
00:02:33,920 --> 00:02:37,440
service called food there's a conflict

81
00:02:35,599 --> 00:02:39,359
file in epc

82
00:02:37,440 --> 00:02:41,280
the user edits that and sets it up the

83
00:02:39,360 --> 00:02:42,480
way they like it and then a new version

84
00:02:41,280 --> 00:02:44,879
of who comes along

85
00:02:42,480 --> 00:02:46,079
and we want to change the you know we

86
00:02:44,879 --> 00:02:47,920
want to change the defaults we want to

87
00:02:46,080 --> 00:02:49,360
introduce the new parameters

88
00:02:47,920 --> 00:02:51,200
you know or we you know there's been

89
00:02:49,360 --> 00:02:52,800
some horrific cve and we desperately

90
00:02:51,200 --> 00:02:53,200
have to make sure that there isn't that

91
00:02:52,800 --> 00:02:56,400
setting

92
00:02:53,200 --> 00:02:57,119
set by default and whatever happens

93
00:02:56,400 --> 00:02:59,519
there's some

94
00:02:57,120 --> 00:03:00,879
you know horrific or semi-horrific

95
00:02:59,519 --> 00:03:02,959
explosion there is no

96
00:03:00,879 --> 00:03:05,760
perfect solution to this problem at the

97
00:03:02,959 --> 00:03:08,720
moment no matter how we look at it

98
00:03:05,760 --> 00:03:10,239
you know you can notify users on wikis

99
00:03:08,720 --> 00:03:11,440
and stuff but they don't read it and it

100
00:03:10,239 --> 00:03:12,720
doesn't work

101
00:03:11,440 --> 00:03:14,879
you know or if you're trying to find a

102
00:03:12,720 --> 00:03:15,519
technical solution you know most of us

103
00:03:14,879 --> 00:03:17,440
as packages

104
00:03:15,519 --> 00:03:18,720
try something like some fancy post

105
00:03:17,440 --> 00:03:20,800
script where we're you know

106
00:03:18,720 --> 00:03:23,760
editing with said and just praying we've

107
00:03:20,800 --> 00:03:25,280
got our regular expressions right

108
00:03:23,760 --> 00:03:26,879
and then we get it wrong and the users

109
00:03:25,280 --> 00:03:28,720
scream and file bugs saying the distro

110
00:03:26,879 --> 00:03:31,120
broke our conflict

111
00:03:28,720 --> 00:03:32,239
um more conservatively you know certain

112
00:03:31,120 --> 00:03:33,920
packaging tools

113
00:03:32,239 --> 00:03:36,879
are you know especially rpm and sort of

114
00:03:33,920 --> 00:03:39,518
arch you know we have these sort of

115
00:03:36,879 --> 00:03:40,879
nice helpers where you know we can in

116
00:03:39,519 --> 00:03:43,040
the packaging tool

117
00:03:40,879 --> 00:03:44,399
back up the user config install our new

118
00:03:43,040 --> 00:03:46,159
user config

119
00:03:44,400 --> 00:03:47,840
and you know leave their old config as

120
00:03:46,159 --> 00:03:49,519
an rpm save file

121
00:03:47,840 --> 00:03:51,280
and then the user doesn't bother

122
00:03:49,519 --> 00:03:53,920
noticing that and they file a bug saying

123
00:03:51,280 --> 00:03:55,760
you know the distro broke our config

124
00:03:53,920 --> 00:03:56,958
or we flip it the other way around and

125
00:03:55,760 --> 00:03:59,679
we're paranoid and

126
00:03:56,959 --> 00:04:02,000
never touch the user's configuration and

127
00:03:59,680 --> 00:04:03,120
we put our new settings in an rpm new

128
00:04:02,000 --> 00:04:05,040
file

129
00:04:03,120 --> 00:04:06,480
and then nobody ever looks at it and

130
00:04:05,040 --> 00:04:07,920
then they file a bug and we just turn

131
00:04:06,480 --> 00:04:09,040
around and say sorry your setup isn't

132
00:04:07,920 --> 00:04:11,839
supported

133
00:04:09,040 --> 00:04:12,400
um yeah it doesn't work at all at the

134
00:04:11,840 --> 00:04:14,560
moment

135
00:04:12,400 --> 00:04:16,639
it's it's the hell we've all been living

136
00:04:14,560 --> 00:04:19,519
doing destroys for so long

137
00:04:16,639 --> 00:04:19,918
and the hell's getting worse um because

138
00:04:19,519 --> 00:04:21,358
you know

139
00:04:19,918 --> 00:04:23,599
this lovely new trend of atomic

140
00:04:21,358 --> 00:04:25,120
distributions like with open season

141
00:04:23,600 --> 00:04:26,960
micros

142
00:04:25,120 --> 00:04:28,720
where this problem gets even more

143
00:04:26,960 --> 00:04:31,120
complicated because like in micro

144
00:04:28,720 --> 00:04:33,600
s we have a read only root file system

145
00:04:31,120 --> 00:04:35,199
you know a user can't modify that root

146
00:04:33,600 --> 00:04:36,639
fs once it's there

147
00:04:35,199 --> 00:04:38,320
but we want them to be able to modify

148
00:04:36,639 --> 00:04:40,320
etc because you know they need to be

149
00:04:38,320 --> 00:04:43,360
able to change the settings

150
00:04:40,320 --> 00:04:45,040
um so but when we need some way of

151
00:04:43,360 --> 00:04:46,639
atomically delivering those new

152
00:04:45,040 --> 00:04:48,560
configuration settings that we

153
00:04:46,639 --> 00:04:49,680
need on there without messing around

154
00:04:48,560 --> 00:04:52,320
with that conflict so

155
00:04:49,680 --> 00:04:54,720
you know it yeah it has all of the

156
00:04:52,320 --> 00:04:57,120
issues plus more because

157
00:04:54,720 --> 00:04:58,320
we yeah we can't just mess around on the

158
00:04:57,120 --> 00:05:01,520
root file system

159
00:04:58,320 --> 00:05:03,440
like we used to and

160
00:05:01,520 --> 00:05:04,560
when we were dealing with some of these

161
00:05:03,440 --> 00:05:06,000
issues that cropped up with what we're

162
00:05:04,560 --> 00:05:07,840
doing in micros

163
00:05:06,000 --> 00:05:10,560
you know we realized there's there's one

164
00:05:07,840 --> 00:05:13,520
really configuration heavy service

165
00:05:10,560 --> 00:05:13,919
sitting on all of our micros machines

166
00:05:13,520 --> 00:05:15,520
which

167
00:05:13,919 --> 00:05:17,599
doesn't give us any problems at all and

168
00:05:15,520 --> 00:05:21,120
it's wonderful and life is great

169
00:05:17,600 --> 00:05:22,639
and it's systemd it kind of shocked me a

170
00:05:21,120 --> 00:05:25,600
little bit when i realized it but yeah

171
00:05:22,639 --> 00:05:27,199
you know system d solves this problem

172
00:05:25,600 --> 00:05:28,639
really really nicely you know it has

173
00:05:27,199 --> 00:05:30,000
this lovely structure of everything's a

174
00:05:28,639 --> 00:05:32,320
unit file

175
00:05:30,000 --> 00:05:33,440
and those unit files live in one of two

176
00:05:32,320 --> 00:05:34,960
places

177
00:05:33,440 --> 00:05:38,160
you know the distribution config is

178
00:05:34,960 --> 00:05:39,440
meant to live in usr lib system d system

179
00:05:38,160 --> 00:05:41,360
and that's where all your unit files

180
00:05:39,440 --> 00:05:42,800
live your timers your services blah blah

181
00:05:41,360 --> 00:05:45,120
blah blah

182
00:05:42,800 --> 00:05:46,560
and then for your user config every

183
00:05:45,120 --> 00:05:49,199
change they make

184
00:05:46,560 --> 00:05:50,720
is in etc systemd system and then the

185
00:05:49,199 --> 00:05:53,039
two worlds are separated

186
00:05:50,720 --> 00:05:54,800
and we don't have to worry about that

187
00:05:53,039 --> 00:05:56,800
you know we don't touch etc system d

188
00:05:54,800 --> 00:05:59,440
system we just touch usr

189
00:05:56,800 --> 00:06:01,120
and all is good it gets even better

190
00:05:59,440 --> 00:06:01,759
because with systemd services you also

191
00:06:01,120 --> 00:06:04,639
have

192
00:06:01,759 --> 00:06:06,560
this concept of drop-ins well like a per

193
00:06:04,639 --> 00:06:09,680
service basis you get a

194
00:06:06,560 --> 00:06:11,360
you know food.service.d folder and you

195
00:06:09,680 --> 00:06:12,479
can put little drop-in configuration

196
00:06:11,360 --> 00:06:15,280
files in there

197
00:06:12,479 --> 00:06:16,800
those drop-in configuration files can

198
00:06:15,280 --> 00:06:20,000
individually

199
00:06:16,800 --> 00:06:22,880
override individual lines or parameters

200
00:06:20,000 --> 00:06:23,840
of the the other config file elsewhere

201
00:06:22,880 --> 00:06:26,240
so you know

202
00:06:23,840 --> 00:06:26,880
and it's even that is layered so you can

203
00:06:26,240 --> 00:06:29,919
have you know

204
00:06:26,880 --> 00:06:31,919
usr drop-ins and etc drop-ins and system

205
00:06:29,919 --> 00:06:33,599
v figures out what the right priority is

206
00:06:31,919 --> 00:06:34,960
and applies the right one

207
00:06:33,600 --> 00:06:36,960
which is like what we're using with like

208
00:06:34,960 --> 00:06:38,960
kubernetes now you know you've got

209
00:06:36,960 --> 00:06:40,159
you know container runtimes and

210
00:06:38,960 --> 00:06:42,560
kubernetes and

211
00:06:40,160 --> 00:06:43,919
all these other distro dependent stuff

212
00:06:42,560 --> 00:06:47,039
and they all want to modify

213
00:06:43,919 --> 00:06:49,359
each of the services so us you know in

214
00:06:47,039 --> 00:06:51,680
our on and open to the cubic at least

215
00:06:49,360 --> 00:06:53,199
you know our usr lib drop-ins you know

216
00:06:51,680 --> 00:06:53,919
we have drop-ins after drop-ins after

217
00:06:53,199 --> 00:06:55,120
drop-ins

218
00:06:53,919 --> 00:06:56,960
and then users can put their own

219
00:06:55,120 --> 00:06:58,560
drop-ins in and then you eventually get

220
00:06:56,960 --> 00:07:00,159
the right config at the end

221
00:06:58,560 --> 00:07:02,000
so it's great when you've got the sort

222
00:07:00,160 --> 00:07:04,000
of multiple layering

223
00:07:02,000 --> 00:07:05,919
um and we realized well this is cool for

224
00:07:04,000 --> 00:07:08,560
you know systemd services why can't we

225
00:07:05,919 --> 00:07:10,719
do it for like everything else

226
00:07:08,560 --> 00:07:12,400
um which of course you know is gonna

227
00:07:10,720 --> 00:07:13,840
need some work so let's try and make it

228
00:07:12,400 --> 00:07:18,000
easy for people

229
00:07:13,840 --> 00:07:20,638
um and so uh pascal an apprentice

230
00:07:18,000 --> 00:07:22,400
at uh souza last year this like this

231
00:07:20,639 --> 00:07:23,360
entire project is like not even a year

232
00:07:22,400 --> 00:07:26,080
old

233
00:07:23,360 --> 00:07:27,440
um uh yes that basically started writing

234
00:07:26,080 --> 00:07:29,440
a c library to kind of

235
00:07:27,440 --> 00:07:30,880
first as an experiment does he can we

236
00:07:29,440 --> 00:07:32,240
even do this

237
00:07:30,880 --> 00:07:34,000
and then like all good experiments it's

238
00:07:32,240 --> 00:07:37,280
got completely out of hand

239
00:07:34,000 --> 00:07:38,880
um for basically providing to anybody

240
00:07:37,280 --> 00:07:42,000
using this library

241
00:07:38,880 --> 00:07:43,599
api calls and functions to be able to

242
00:07:42,000 --> 00:07:46,160
be able to do the same kind of

243
00:07:43,599 --> 00:07:47,759
configuration layer in their services in

244
00:07:46,160 --> 00:07:50,400
their applications

245
00:07:47,759 --> 00:07:51,680
um it's an mit license so you can use it

246
00:07:50,400 --> 00:07:54,239
for everything

247
00:07:51,680 --> 00:07:55,039
and the two main use cases are literally

248
00:07:54,240 --> 00:07:57,120
you know both

249
00:07:55,039 --> 00:07:58,080
layering sort of an entire config file

250
00:07:57,120 --> 00:08:01,759
like the typical system

251
00:07:58,080 --> 00:08:04,080
d service thing of usr versus etc

252
00:08:01,759 --> 00:08:04,800
or if you really want to be fancy during

253
00:08:04,080 --> 00:08:07,520
sort of

254
00:08:04,800 --> 00:08:08,879
foo dot d and and yeah drop ins and

255
00:08:07,520 --> 00:08:11,359
layering those two things

256
00:08:08,879 --> 00:08:12,319
on top of each other like i said not

257
00:08:11,360 --> 00:08:13,840
even a year old

258
00:08:12,319 --> 00:08:15,440
so not even if this is its first frost

259
00:08:13,840 --> 00:08:18,400
time it could ever be at because it was

260
00:08:15,440 --> 00:08:20,240
26th of april last year we started it um

261
00:08:18,400 --> 00:08:21,840
um but yeah we're using it in plenty

262
00:08:20,240 --> 00:08:23,440
places it's not magic

263
00:08:21,840 --> 00:08:25,119
you know start with start with the

264
00:08:23,440 --> 00:08:27,919
negative you know

265
00:08:25,120 --> 00:08:28,960
you need to modify software to have lib

266
00:08:27,919 --> 00:08:30,639
ecom support

267
00:08:28,960 --> 00:08:32,399
you know we're not magically taking over

268
00:08:30,639 --> 00:08:34,240
other bits of services

269
00:08:32,399 --> 00:08:36,240
and in its current form it only supports

270
00:08:34,240 --> 00:08:37,120
sort of any style configuration files

271
00:08:36,240 --> 00:08:38,880
where

272
00:08:37,120 --> 00:08:40,080
you've got a group you've got a key with

273
00:08:38,880 --> 00:08:40,958
a value you've got another key with the

274
00:08:40,080 --> 00:08:42,560
value

275
00:08:40,958 --> 00:08:44,800
um it's flexible in the sense of you

276
00:08:42,559 --> 00:08:48,079
know you can have whatever delimiter

277
00:08:44,800 --> 00:08:48,800
and white spaces you you want um but you

278
00:08:48,080 --> 00:08:50,160
know we

279
00:08:48,800 --> 00:08:51,839
at the moment we're only working with

280
00:08:50,160 --> 00:08:52,319
these kind of configuration files which

281
00:08:51,839 --> 00:08:55,279
which

282
00:08:52,320 --> 00:08:57,680
form this structure i'm not going to

283
00:08:55,279 --> 00:08:59,360
give like detailed code examples

284
00:08:57,680 --> 00:09:01,279
and you know the api list is getting

285
00:08:59,360 --> 00:09:02,080
longer and longer but at its core is

286
00:09:01,279 --> 00:09:05,200
sort of

287
00:09:02,080 --> 00:09:07,200
eight or so core api calls which kind of

288
00:09:05,200 --> 00:09:10,000
do all of the work

289
00:09:07,200 --> 00:09:10,480
ecom for read file reads a configuration

290
00:09:10,000 --> 00:09:12,560
file

291
00:09:10,480 --> 00:09:14,480
takes all those key values and you know

292
00:09:12,560 --> 00:09:17,439
dumps them in a key file for

293
00:09:14,480 --> 00:09:18,480
use elsewhere in the application reader

294
00:09:17,440 --> 00:09:20,320
basically does that

295
00:09:18,480 --> 00:09:21,760
so but for multiple configuration files

296
00:09:20,320 --> 00:09:23,399
in a directory so you know that's what

297
00:09:21,760 --> 00:09:26,480
you would use for the kind of

298
00:09:23,399 --> 00:09:28,720
food.service.d equivalent

299
00:09:26,480 --> 00:09:30,080
there's a function for enumerating the

300
00:09:28,720 --> 00:09:31,279
groups in there which you know can be

301
00:09:30,080 --> 00:09:32,480
handy when you're looking for that one

302
00:09:31,279 --> 00:09:34,320
config file nested

303
00:09:32,480 --> 00:09:36,000
the one config nested in one group

304
00:09:34,320 --> 00:09:38,720
somewhere down the line

305
00:09:36,000 --> 00:09:39,360
get the keys and then we have a whole

306
00:09:38,720 --> 00:09:41,519
bunch of

307
00:09:39,360 --> 00:09:43,440
get value of various types that you can

308
00:09:41,519 --> 00:09:45,600
you know grab your strings and

309
00:09:43,440 --> 00:09:48,160
make sure it's all type saying and grab

310
00:09:45,600 --> 00:09:50,320
grab your right long intent

311
00:09:48,160 --> 00:09:53,199
get the the correct value of the correct

312
00:09:50,320 --> 00:09:55,120
type you expect as you go along

313
00:09:53,200 --> 00:09:56,320
um that's all the reading on the writing

314
00:09:55,120 --> 00:09:59,519
side of things

315
00:09:56,320 --> 00:10:01,839
thanks um we've got a bunch of

316
00:09:59,519 --> 00:10:02,560
setters for doing the same in reverse so

317
00:10:01,839 --> 00:10:05,200
you can

318
00:10:02,560 --> 00:10:06,880
set your configuration back in there

319
00:10:05,200 --> 00:10:08,399
we've got a tool for merging files you

320
00:10:06,880 --> 00:10:09,519
can actually just yeah two stroke files

321
00:10:08,399 --> 00:10:12,720
merge everything together

322
00:10:09,519 --> 00:10:13,200
job done and all of those api calls are

323
00:10:12,720 --> 00:10:15,120
up

324
00:10:13,200 --> 00:10:17,120
stable versions you know we're not going

325
00:10:15,120 --> 00:10:18,800
to break them at all

326
00:10:17,120 --> 00:10:20,800
we promise write file on the other hand

327
00:10:18,800 --> 00:10:21,760
for writing out this to a configuration

328
00:10:20,800 --> 00:10:23,680
file

329
00:10:21,760 --> 00:10:25,439
we've got people using it but it's it's

330
00:10:23,680 --> 00:10:26,959
not yet stable it's

331
00:10:25,440 --> 00:10:28,880
it's you know because you know we're not

332
00:10:26,959 --> 00:10:30,000
entirely happy with how it's writing or

333
00:10:28,880 --> 00:10:31,680
handling things like

334
00:10:30,000 --> 00:10:33,120
the file already being open already

335
00:10:31,680 --> 00:10:35,279
being edited

336
00:10:33,120 --> 00:10:37,760
um but it's there if you want to write

337
00:10:35,279 --> 00:10:39,519
the file back at the desk

338
00:10:37,760 --> 00:10:41,279
in open season land like i say this is

339
00:10:39,519 --> 00:10:41,600
all kind of gone out of hand but in a

340
00:10:41,279 --> 00:10:44,560
fun

341
00:10:41,600 --> 00:10:45,200
exciting way um open souza is moving

342
00:10:44,560 --> 00:10:47,839
towards

343
00:10:45,200 --> 00:10:49,279
using usr for all of its district

344
00:10:47,839 --> 00:10:50,640
conflict that's the goal

345
00:10:49,279 --> 00:10:52,320
it's going to take years but we're

346
00:10:50,640 --> 00:10:54,720
moving in that direction

347
00:10:52,320 --> 00:10:55,920
as fast as we can so we want etc to be

348
00:10:54,720 --> 00:10:58,160
considered

349
00:10:55,920 --> 00:11:00,240
user data and you know treated with the

350
00:10:58,160 --> 00:11:02,160
same reverence and avoidance as

351
00:11:00,240 --> 00:11:03,920
slash home or slash slv you know we

352
00:11:02,160 --> 00:11:04,959
don't want to be messing in our users

353
00:11:03,920 --> 00:11:07,599
sad but that's

354
00:11:04,959 --> 00:11:09,040
etc should be theirs we don't want our

355
00:11:07,600 --> 00:11:10,880
packages touching it

356
00:11:09,040 --> 00:11:12,160
we don't want our scripts touching it we

357
00:11:10,880 --> 00:11:14,000
don't want to be responsible for

358
00:11:12,160 --> 00:11:16,319
breaking anything anymore

359
00:11:14,000 --> 00:11:18,399
um so you know in the case of like

360
00:11:16,320 --> 00:11:18,640
systemd it's already using usr but for

361
00:11:18,399 --> 00:11:21,680
the

362
00:11:18,640 --> 00:11:23,760
the stuff that doesn't we're now

363
00:11:21,680 --> 00:11:25,439
starting to use usr etc

364
00:11:23,760 --> 00:11:27,439
and basically moving our configuration

365
00:11:25,440 --> 00:11:29,519
to that

366
00:11:27,440 --> 00:11:31,120
in the case of le become the b cop

367
00:11:29,519 --> 00:11:32,959
doesn't care about these locations

368
00:11:31,120 --> 00:11:34,320
it's all variables so you know you could

369
00:11:32,959 --> 00:11:35,439
use it how you want to put it where you

370
00:11:34,320 --> 00:11:37,839
want

371
00:11:35,440 --> 00:11:38,480
so this can handle you know user lib

372
00:11:37,839 --> 00:11:40,880
whatever

373
00:11:38,480 --> 00:11:41,600
or use etc whatever it doesn't matter

374
00:11:40,880 --> 00:11:43,600
but

375
00:11:41,600 --> 00:11:44,880
for us we're finding it's easier to move

376
00:11:43,600 --> 00:11:46,640
things along to that because it's

377
00:11:44,880 --> 00:11:48,640
a one-to-one mapping of user etc

378
00:11:46,640 --> 00:11:50,240
whatever to edc whatever

379
00:11:48,640 --> 00:11:52,240
makes makes the logic a bit simpler for

380
00:11:50,240 --> 00:11:53,600
us

381
00:11:52,240 --> 00:11:55,279
there's a number of examples where we've

382
00:11:53,600 --> 00:11:56,160
already got applications moving across

383
00:11:55,279 --> 00:11:58,880
to it

384
00:11:56,160 --> 00:12:00,719
like pam pam upstream has lib ecom

385
00:11:58,880 --> 00:12:03,519
support since

386
00:12:00,720 --> 00:12:04,399
three or four months ago i think now um

387
00:12:03,519 --> 00:12:06,079
so

388
00:12:04,399 --> 00:12:07,680
if in open source we've already packaged

389
00:12:06,079 --> 00:12:10,079
up with this um

390
00:12:07,680 --> 00:12:11,279
so user etc pam d has all of your pam

391
00:12:10,079 --> 00:12:14,719
configs

392
00:12:11,279 --> 00:12:17,200
then user config can be an etc pam d

393
00:12:14,720 --> 00:12:18,079
both get passed at one time and etc

394
00:12:17,200 --> 00:12:21,200
values always fun

395
00:12:18,079 --> 00:12:23,680
nice simple done

396
00:12:21,200 --> 00:12:24,639
the same for shadow also update is also

397
00:12:23,680 --> 00:12:26,079
upstream

398
00:12:24,639 --> 00:12:27,920
which of course they're also using pam

399
00:12:26,079 --> 00:12:29,120
so it also has their conflict in pam d

400
00:12:27,920 --> 00:12:31,040
so it's fun that when they're all

401
00:12:29,120 --> 00:12:33,360
sharing the same thing and

402
00:12:31,040 --> 00:12:34,880
using the same library but you've also

403
00:12:33,360 --> 00:12:35,360
got login devs and i just realized the

404
00:12:34,880 --> 00:12:39,519
type

405
00:12:35,360 --> 00:12:41,200
that's meant to be user etc login depth

406
00:12:39,519 --> 00:12:42,959
but yeah the login desks are stored

407
00:12:41,200 --> 00:12:45,279
there etc login deaths

408
00:12:42,959 --> 00:12:47,040
you know can be overridden by users the

409
00:12:45,279 --> 00:12:48,800
etc values always run that's all done at

410
00:12:47,040 --> 00:12:50,719
one time

411
00:12:48,800 --> 00:12:52,639
and all of the youtube linux stuff this

412
00:12:50,720 --> 00:12:53,920
is not yet upstream i think it's

413
00:12:52,639 --> 00:12:55,600
submitted but there's some

414
00:12:53,920 --> 00:12:58,160
discussions about our patch but we've

415
00:12:55,600 --> 00:13:00,240
patched it in opensuse so all of the

416
00:12:58,160 --> 00:13:01,279
sue login remote et cetera and opensuse

417
00:13:00,240 --> 00:13:04,160
are using this and

418
00:13:01,279 --> 00:13:05,920
using it exactly the same way but

419
00:13:04,160 --> 00:13:07,040
there's exceptions so reboot manager

420
00:13:05,920 --> 00:13:10,240
which is the

421
00:13:07,040 --> 00:13:14,079
the tool in micro os which basically

422
00:13:10,240 --> 00:13:15,519
uh detects when there is an update

423
00:13:14,079 --> 00:13:17,199
pending well there has been an update

424
00:13:15,519 --> 00:13:19,200
applied and there is therefore a reboot

425
00:13:17,200 --> 00:13:21,200
pending and required to be done

426
00:13:19,200 --> 00:13:22,720
that configuration is really simple

427
00:13:21,200 --> 00:13:24,480
there's like it's one group there's like

428
00:13:22,720 --> 00:13:26,079
four parameters it it

429
00:13:24,480 --> 00:13:28,160
there's no point doing all this

430
00:13:26,079 --> 00:13:29,599
complicated nesting and layering

431
00:13:28,160 --> 00:13:31,680
so in that case you've just got a nice

432
00:13:29,600 --> 00:13:33,760
simple straightforward config file

433
00:13:31,680 --> 00:13:36,880
and you can put another nice simple

434
00:13:33,760 --> 00:13:38,399
straightforward config file in etc

435
00:13:36,880 --> 00:13:40,320
and we just merge both of them at one

436
00:13:38,399 --> 00:13:42,800
time and we we use that

437
00:13:40,320 --> 00:13:44,480
unstable write file to just dump it in

438
00:13:42,800 --> 00:13:46,000
etc reboot manager conf

439
00:13:44,480 --> 00:13:47,519
and so all the logic in the code for

440
00:13:46,000 --> 00:13:48,480
actually reading the configuration file

441
00:13:47,519 --> 00:13:50,079
hasn't changed at all we're still

442
00:13:48,480 --> 00:13:51,440
reading the same config file but yeah

443
00:13:50,079 --> 00:13:52,399
libby comp is doing a little bit of

444
00:13:51,440 --> 00:13:55,519
magic before that

445
00:13:52,399 --> 00:13:58,639
to move things along um

446
00:13:55,519 --> 00:14:00,480
and yeah we want as many other projects

447
00:13:58,639 --> 00:14:01,519
to start adopting this using it in their

448
00:14:00,480 --> 00:14:05,519
own way we haven't

449
00:14:01,519 --> 00:14:07,920
yet uh done this where you know you must

450
00:14:05,519 --> 00:14:08,800
follow a certain sort of system d like

451
00:14:07,920 --> 00:14:10,959
or or

452
00:14:08,800 --> 00:14:12,319
you know pam like approach well you know

453
00:14:10,959 --> 00:14:14,638
you have to use the same topic you know

454
00:14:12,320 --> 00:14:16,079
we realize upstreams have their own way

455
00:14:14,639 --> 00:14:17,760
of you know upstream applications that

456
00:14:16,079 --> 00:14:19,279
have their way of doing configuration we

457
00:14:17,760 --> 00:14:20,319
want to make this as easy as possible to

458
00:14:19,279 --> 00:14:21,839
fit in

459
00:14:20,320 --> 00:14:23,839
so you've got the primitives here where

460
00:14:21,839 --> 00:14:25,600
you can take libby conf

461
00:14:23,839 --> 00:14:27,440
make our life easier and make your life

462
00:14:25,600 --> 00:14:28,639
easier hopefully

463
00:14:27,440 --> 00:14:30,800
but you don't have to rewrite your

464
00:14:28,639 --> 00:14:32,399
entire logic of you know how you're

465
00:14:30,800 --> 00:14:34,880
consuming your configuration in your

466
00:14:32,399 --> 00:14:34,880
application

467
00:14:35,120 --> 00:14:38,560
we are thinking of adding more high

468
00:14:36,800 --> 00:14:41,199
level api calls for

469
00:14:38,560 --> 00:14:43,279
people who just want to make things even

470
00:14:41,199 --> 00:14:46,959
simpler for them in the long run

471
00:14:43,279 --> 00:14:46,959
but before that oh

472
00:14:47,680 --> 00:14:53,920
we have some yeah concrete plans

473
00:14:51,600 --> 00:14:56,959
you know passing config files is hard

474
00:14:53,920 --> 00:14:59,360
and you know our password isn't perfect

475
00:14:56,959 --> 00:15:01,359
so i've been looking at using a thanks a

476
00:14:59,360 --> 00:15:02,560
much more established configuration file

477
00:15:01,360 --> 00:15:04,399
parser um as

478
00:15:02,560 --> 00:15:06,239
you know instead of writing our own and

479
00:15:04,399 --> 00:15:08,959
constantly tweaking our own

480
00:15:06,240 --> 00:15:10,800
um so august is on our radar um i have

481
00:15:08,959 --> 00:15:12,319
some patches that are roughly working

482
00:15:10,800 --> 00:15:15,839
and you know i'm slowly

483
00:15:12,320 --> 00:15:17,680
patching it into all of the api calls um

484
00:15:15,839 --> 00:15:19,040
it does a very good job technically

485
00:15:17,680 --> 00:15:21,040
speaking you know it's very

486
00:15:19,040 --> 00:15:22,800
it's very reliable it handles far more

487
00:15:21,040 --> 00:15:24,079
variations of configuration files than

488
00:15:22,800 --> 00:15:27,279
just any

489
00:15:24,079 --> 00:15:29,279
it also handles those ini files more

490
00:15:27,279 --> 00:15:30,959
gracefully especially those weird ones

491
00:15:29,279 --> 00:15:33,360
with weird delimiters and weird white

492
00:15:30,959 --> 00:15:35,758
space walls and all that stuff yeah

493
00:15:33,360 --> 00:15:37,199
august has figured that all out already

494
00:15:35,759 --> 00:15:39,839
the downside is though

495
00:15:37,199 --> 00:15:40,399
you know it does make the dependency

496
00:15:39,839 --> 00:15:41,839
tree for

497
00:15:40,399 --> 00:15:43,360
for libby coffee you know a little bit

498
00:15:41,839 --> 00:15:44,880
heavier than just the nice simple c

499
00:15:43,360 --> 00:15:47,199
library that you can plop on and

500
00:15:44,880 --> 00:15:48,320
put into everything um and the code is

501
00:15:47,199 --> 00:15:50,240
getting a little bit more complex

502
00:15:48,320 --> 00:15:51,360
so this this isn't certain i want to

503
00:15:50,240 --> 00:15:53,440
kind of

504
00:15:51,360 --> 00:15:56,880
get feedback from anyone here and see if

505
00:15:53,440 --> 00:15:58,880
there's any other options out there

506
00:15:56,880 --> 00:16:00,560
or help doing this you know if people

507
00:15:58,880 --> 00:16:02,959
think this is a great idea

508
00:16:00,560 --> 00:16:03,839
um but yeah it's a sort of work in

509
00:16:02,959 --> 00:16:05,359
progress and

510
00:16:03,839 --> 00:16:07,759
the direction we'd like to go because we

511
00:16:05,360 --> 00:16:10,720
realized that just doing any files

512
00:16:07,759 --> 00:16:11,279
is is somewhat limiting for this idea um

513
00:16:10,720 --> 00:16:13,920
and

514
00:16:11,279 --> 00:16:14,959
dominic is dominic here nope dominic

515
00:16:13,920 --> 00:16:15,839
another one of my apprentices he's

516
00:16:14,959 --> 00:16:19,119
working on

517
00:16:15,839 --> 00:16:20,639
uh ecom for tool which is a basically

518
00:16:19,120 --> 00:16:21,199
aimed to be sort of a generic helper

519
00:16:20,639 --> 00:16:24,480
tool

520
00:16:21,199 --> 00:16:25,279
for the idea being you know an

521
00:16:24,480 --> 00:16:27,199
application's

522
00:16:25,279 --> 00:16:29,040
started using libby conf that now means

523
00:16:27,199 --> 00:16:30,959
you've got configuration files in usr

524
00:16:29,040 --> 00:16:32,959
configuration files and etc

525
00:16:30,959 --> 00:16:34,479
how does the user know what parameters

526
00:16:32,959 --> 00:16:36,800
are actually being applied when

527
00:16:34,480 --> 00:16:37,680
how the e-commerce sort of generic help

528
00:16:36,800 --> 00:16:39,359
of you know

529
00:16:37,680 --> 00:16:41,040
taking that default logic you know you

530
00:16:39,360 --> 00:16:43,199
so you know like ideas like yeah eat

531
00:16:41,040 --> 00:16:45,680
control pam d what your config is

532
00:16:43,199 --> 00:16:47,359
done you know give a list out there and

533
00:16:45,680 --> 00:16:49,120
a bit like system cto

534
00:16:47,360 --> 00:16:51,199
with like system cto edits you know be

535
00:16:49,120 --> 00:16:52,639
able to edit the config and it'll

536
00:16:51,199 --> 00:16:54,079
put the right snippets in the right

537
00:16:52,639 --> 00:16:55,360
place and make your life a little bit

538
00:16:54,079 --> 00:16:58,399
easier

539
00:16:55,360 --> 00:17:00,079
um this is just the beginning if people

540
00:16:58,399 --> 00:17:00,639
like this idea you know there's obvious

541
00:17:00,079 --> 00:17:03,519
things we

542
00:17:00,639 --> 00:17:04,640
you know we could do to improve you know

543
00:17:03,519 --> 00:17:05,839
different file paths have been

544
00:17:04,640 --> 00:17:08,000
being the one that i've already

545
00:17:05,839 --> 00:17:09,839
mentioned but also language bindings not

546
00:17:08,000 --> 00:17:13,359
everything is written in c

547
00:17:09,839 --> 00:17:14,240
um so sadly um especially when it comes

548
00:17:13,359 --> 00:17:16,799
to go

549
00:17:14,240 --> 00:17:18,160
um but yes if people want go if people

550
00:17:16,799 --> 00:17:18,959
want private and if people want us you

551
00:17:18,160 --> 00:17:20,880
know this you know

552
00:17:18,959 --> 00:17:22,640
this needs to be something used in as

553
00:17:20,880 --> 00:17:25,039
many places as we can

554
00:17:22,640 --> 00:17:25,919
you know we're not just gonna start here

555
00:17:25,039 --> 00:17:27,839
stay here

556
00:17:25,919 --> 00:17:30,960
but we can't do everything alone so you

557
00:17:27,839 --> 00:17:33,440
know if you like this idea

558
00:17:30,960 --> 00:17:34,240
the code is open it's mit contributions

559
00:17:33,440 --> 00:17:37,440
are welcome

560
00:17:34,240 --> 00:17:40,240
changes are welcome features are welcome

561
00:17:37,440 --> 00:17:41,280
um you know please help enjoy start

562
00:17:40,240 --> 00:17:43,520
using it

563
00:17:41,280 --> 00:17:44,960
start putting it in your distro that's

564
00:17:43,520 --> 00:17:47,679
why i'm here basically

565
00:17:44,960 --> 00:17:48,640
um and with that i think i've managed to

566
00:17:47,679 --> 00:17:50,320
squeeze this into

567
00:17:48,640 --> 00:17:52,799
20 minutes or so so there is just a bit

568
00:17:50,320 --> 00:17:58,039
of type of questions at the end

569
00:17:52,799 --> 00:18:02,240
yes sir the first one you had

570
00:17:58,039 --> 00:18:02,240
was something like that yeah

571
00:18:02,559 --> 00:18:06,639
this is the whole idea that it reads all

572
00:18:05,039 --> 00:18:07,039
the files and all the drop-ins and does

573
00:18:06,640 --> 00:18:10,400
the

574
00:18:07,039 --> 00:18:13,520
magic behind the scene or yeah so so

575
00:18:10,400 --> 00:18:14,559
why is the read file just a read a

576
00:18:13,520 --> 00:18:17,679
singular file yeah

577
00:18:14,559 --> 00:18:19,200
um that's because there are definitely

578
00:18:17,679 --> 00:18:19,600
cases where you just have one config

579
00:18:19,200 --> 00:18:21,520
file

580
00:18:19,600 --> 00:18:22,719
for the cases where you have multiple in

581
00:18:21,520 --> 00:18:23,760
a directory that's why we have the

582
00:18:22,720 --> 00:18:26,640
readers config

583
00:18:23,760 --> 00:18:28,320
the reader's api call and readers just

584
00:18:26,640 --> 00:18:29,919
you know reads the directory

585
00:18:28,320 --> 00:18:33,918
and read files all of the contents of

586
00:18:29,919 --> 00:18:33,919
that directory does the programmer

587
00:18:35,280 --> 00:18:40,000
have to go through i understand the idea

588
00:18:37,919 --> 00:18:42,960
is that the user and there's the etc and

589
00:18:40,000 --> 00:18:42,960
then the drop-downs

590
00:18:47,540 --> 00:18:50,619
[Music]

591
00:18:52,960 --> 00:18:56,720
the application developer who is

592
00:18:54,559 --> 00:18:58,639
patching libby com support into that

593
00:18:56,720 --> 00:19:00,000
application has to do that

594
00:18:58,640 --> 00:19:01,679
so the user doesn't but you know libby

595
00:19:00,000 --> 00:19:04,000
conf is there to be consumed

596
00:19:01,679 --> 00:19:05,120
yeah so at the moment yes you know we

597
00:19:04,000 --> 00:19:07,039
are planning on adding

598
00:19:05,120 --> 00:19:09,199
you know higher level api calls which

599
00:19:07,039 --> 00:19:11,360
you know have opinionated views on how

600
00:19:09,200 --> 00:19:12,400
you do that matching and merging which

601
00:19:11,360 --> 00:19:12,799
will make their life easier you know

602
00:19:12,400 --> 00:19:16,960
that's

603
00:19:12,799 --> 00:19:20,080
you know oh wait after this

604
00:19:16,960 --> 00:19:22,480
under user etc

605
00:19:20,080 --> 00:19:23,840
and there's something under abc4 and i

606
00:19:22,480 --> 00:19:26,880
have to order

607
00:19:23,840 --> 00:19:28,799
and yeah but

608
00:19:26,880 --> 00:19:30,080
like the the reboot manager example is

609
00:19:28,799 --> 00:19:31,600
kind of like in my simple one you know

610
00:19:30,080 --> 00:19:33,120
it's one config file so you know the

611
00:19:31,600 --> 00:19:34,159
config file now lives in two places you

612
00:19:33,120 --> 00:19:36,639
merge it

613
00:19:34,160 --> 00:19:39,840
it's yeah not everybody has complicated

614
00:19:36,640 --> 00:19:39,840
stuff like pam

615
00:19:47,440 --> 00:19:53,840
yeah absolutely yeah

616
00:20:04,480 --> 00:20:07,760
yeah we will look at that thank you cool

617
00:20:07,200 --> 00:20:11,280
yep

618
00:20:07,760 --> 00:20:13,600
do you handle uh most conflicts

619
00:20:11,280 --> 00:20:15,039
um no we do not handle merge conflicts

620
00:20:13,600 --> 00:20:16,240
you know so the moment with with the

621
00:20:15,039 --> 00:20:19,440
covenant calls we have

622
00:20:16,240 --> 00:20:21,520
you know the you know we've got you know

623
00:20:19,440 --> 00:20:23,360
with that merge files for example you

624
00:20:21,520 --> 00:20:24,559
know you're declaring one is going to

625
00:20:23,360 --> 00:20:26,479
override the other so

626
00:20:24,559 --> 00:20:28,639
you know by how you order it and you

627
00:20:26,480 --> 00:20:30,799
know there's no there's no magic there

628
00:20:28,640 --> 00:20:33,120
um so for the more complicated stuff you

629
00:20:30,799 --> 00:20:34,000
know you could use those primitives to

630
00:20:33,120 --> 00:20:36,879
do fancy stuff

631
00:20:34,000 --> 00:20:37,360
with with handling mode conflicts but

632
00:20:36,880 --> 00:20:41,840
yeah

633
00:20:37,360 --> 00:20:42,399
no um is there a standardized and simple

634
00:20:41,840 --> 00:20:47,439
way to

635
00:20:42,400 --> 00:20:49,039
display all the physical files

636
00:20:47,440 --> 00:20:50,400
there's no standardized and simple way

637
00:20:49,039 --> 00:20:51,919
of displaying the config the all the

638
00:20:50,400 --> 00:20:52,320
config files you know that's kind of

639
00:20:51,919 --> 00:20:55,919
what

640
00:20:52,320 --> 00:20:57,918
the uh ecom cto or ecomfort tool sorry

641
00:20:55,919 --> 00:21:00,480
we was called you compute a week ago

642
00:20:57,919 --> 00:21:01,760
uh ecom tool is looking at doing it sort

643
00:21:00,480 --> 00:21:05,120
of giving us giving you a sort of

644
00:21:01,760 --> 00:21:05,120
standard way of doing that

645
00:21:05,520 --> 00:21:07,760
yes

646
00:21:12,720 --> 00:21:16,080
i have a feeling that it doesn't really

647
00:21:15,440 --> 00:21:19,760
make sense

648
00:21:16,080 --> 00:21:22,879
to port libby com systemd to use libby

649
00:21:19,760 --> 00:21:24,320
conf you know they're doing it fine

650
00:21:22,880 --> 00:21:31,039
but we wouldn't really have anything

651
00:21:24,320 --> 00:21:33,439
there yeah another question about it

652
00:21:31,039 --> 00:21:35,679
no this is this is all completely fresh

653
00:21:33,440 --> 00:21:36,880
no no reason code no

654
00:21:35,679 --> 00:21:39,200
sorry just repeat the question the

655
00:21:36,880 --> 00:21:45,840
question was yeah um uh

656
00:21:39,200 --> 00:21:45,840
did we reuse any assistant code with us

657
00:21:54,960 --> 00:21:58,159
at the moment it's just it's just etf

658
00:21:56,640 --> 00:22:00,559
yeah it's

659
00:21:58,159 --> 00:22:04,080
a bit basic at the moment yeah it's a

660
00:22:00,559 --> 00:22:04,080
bit naive at the moment we admit that

661
00:22:08,159 --> 00:22:11,120
uh most of them are in this slide i

662
00:22:09,679 --> 00:22:12,080
think i might have missed one or two but

663
00:22:11,120 --> 00:22:15,280
you know this is kind of

664
00:22:12,080 --> 00:22:16,480
kind of where we are after a year so so

665
00:22:15,280 --> 00:22:19,280
the question was how many upstreams have

666
00:22:16,480 --> 00:22:19,280
we patched um

667
00:22:19,360 --> 00:22:24,559
um so the most of them have been

668
00:22:22,480 --> 00:22:25,679
like the the question was what do they

669
00:22:24,559 --> 00:22:28,240
think um

670
00:22:25,679 --> 00:22:30,320
most of it has been like surprisingly

671
00:22:28,240 --> 00:22:30,640
wow this is cool great merchant done

672
00:22:30,320 --> 00:22:32,720
like

673
00:22:30,640 --> 00:22:34,320
like so youtube linux has been like the

674
00:22:32,720 --> 00:22:36,400
only one where there's been sort of

675
00:22:34,320 --> 00:22:37,520
questions feedback like improvements

676
00:22:36,400 --> 00:22:39,120
juggling around

677
00:22:37,520 --> 00:22:40,639
there has to be like here's a patch find

678
00:22:39,120 --> 00:22:42,399
done in

679
00:22:40,640 --> 00:22:44,000
um of course in the case of ruby manager

680
00:22:42,400 --> 00:22:47,120
you know we are the upstream so

681
00:22:44,000 --> 00:22:55,840
that yeah we cheated but

682
00:22:47,120 --> 00:22:55,840
yeah next question yes

683
00:22:57,440 --> 00:23:00,240
um how would the distribution ship a

684
00:22:59,120 --> 00:23:01,439
change to the default in the case of

685
00:23:00,240 --> 00:23:01,760
like movie manager we were writing it

686
00:23:01,440 --> 00:23:04,400
out

687
00:23:01,760 --> 00:23:05,200
yeah we wouldn't um you know it's you

688
00:23:04,400 --> 00:23:06,400
know it's

689
00:23:05,200 --> 00:23:08,320
in the case of ruby management because

690
00:23:06,400 --> 00:23:08,880
we're the upstream as well we know we're

691
00:23:08,320 --> 00:23:10,158
like

692
00:23:08,880 --> 00:23:11,760
probably never going to do that and if

693
00:23:10,159 --> 00:23:12,320
we do let the conflict feel simple

694
00:23:11,760 --> 00:23:14,000
enough so

695
00:23:12,320 --> 00:23:15,520
we'll still hack around it the

696
00:23:14,000 --> 00:23:17,679
old-fashioned way

697
00:23:15,520 --> 00:23:19,360
which you know it's a rod for our own

698
00:23:17,679 --> 00:23:20,240
back you know we'll do it properly one

699
00:23:19,360 --> 00:23:22,479
time

700
00:23:20,240 --> 00:23:24,000
um but you know in that case it's mainly

701
00:23:22,480 --> 00:23:25,200
for adding new configuration files

702
00:23:24,000 --> 00:23:28,080
because reboot manager is

703
00:23:25,200 --> 00:23:29,600
is you know in a kind of similar state

704
00:23:28,080 --> 00:23:31,120
of development relatively new moving

705
00:23:29,600 --> 00:23:32,799
relatively quickly so

706
00:23:31,120 --> 00:23:34,479
they're just using libreconf makes our

707
00:23:32,799 --> 00:23:35,280
life way easier for adding that new

708
00:23:34,480 --> 00:23:37,919
thing

709
00:23:35,280 --> 00:23:39,760
out to existing systems um plus also

710
00:23:37,919 --> 00:23:40,159
with reboot manager being like a really

711
00:23:39,760 --> 00:23:41,840
like

712
00:23:40,159 --> 00:23:43,360
that's definitely something where you

713
00:23:41,840 --> 00:23:44,639
don't want to mess with what the user's

714
00:23:43,360 --> 00:23:45,918
already decided

715
00:23:44,640 --> 00:23:47,840
you know they've got their policy for

716
00:23:45,919 --> 00:23:49,120
how they want their system rebooting and

717
00:23:47,840 --> 00:23:51,199
that like those core parameters are

718
00:23:49,120 --> 00:23:52,559
basically that right now

719
00:23:51,200 --> 00:23:53,679
so the chances are even if we change the

720
00:23:52,559 --> 00:23:55,520
default we're not going to change the

721
00:23:53,679 --> 00:23:57,039
default time your system is booting

722
00:23:55,520 --> 00:23:59,279
you've picked it you're running it you

723
00:23:57,039 --> 00:24:00,799
know it's it's done dusted

724
00:23:59,279 --> 00:24:01,840
you would you would hate us if you

725
00:24:00,799 --> 00:24:04,240
suddenly your machine's not gonna be

726
00:24:01,840 --> 00:24:06,320
rooting at the long time you prevent

727
00:24:04,240 --> 00:24:08,000
tooling every distribution to move to

728
00:24:06,320 --> 00:24:09,918
like this system

729
00:24:08,000 --> 00:24:11,760
in the way that you compare what the

730
00:24:09,919 --> 00:24:12,799
distribution will provide how the user

731
00:24:11,760 --> 00:24:15,520
modified

732
00:24:12,799 --> 00:24:16,480
and then to move like only the diff to

733
00:24:15,520 --> 00:24:20,158
the

734
00:24:16,480 --> 00:24:21,440
user stuff and the system yeah default

735
00:24:20,159 --> 00:24:23,600
yeah so the question is do we provide

736
00:24:21,440 --> 00:24:24,400
any uh any tooling to kind of help

737
00:24:23,600 --> 00:24:27,120
people move to this

738
00:24:24,400 --> 00:24:28,640
this approach um we don't e-commerce

739
00:24:27,120 --> 00:24:30,080
will do some of that for users

740
00:24:28,640 --> 00:24:31,919
because you know you'll have that there

741
00:24:30,080 --> 00:24:32,559
where e-computer will be showing this is

742
00:24:31,919 --> 00:24:34,559
coming from

743
00:24:32,559 --> 00:24:36,080
the the distro usr this is this is what

744
00:24:34,559 --> 00:24:39,440
you've got in etc

745
00:24:36,080 --> 00:24:41,840
so this is what the the runtime uses um

746
00:24:39,440 --> 00:24:43,279
we could look at you know adding that or

747
00:24:41,840 --> 00:24:44,799
working on that for making sort of the

748
00:24:43,279 --> 00:24:46,159
transition easier

749
00:24:44,799 --> 00:24:48,320
but we have found because we're going to

750
00:24:46,159 --> 00:24:48,720
this you know every upstream app is is

751
00:24:48,320 --> 00:24:50,639
different

752
00:24:48,720 --> 00:24:52,000
they've implemented their configuration

753
00:24:50,640 --> 00:24:52,880
differently they're consuming it

754
00:24:52,000 --> 00:24:55,120
differently across

755
00:24:52,880 --> 00:24:56,159
their entire code base and we're not

756
00:24:55,120 --> 00:24:58,559
trying to

757
00:24:56,159 --> 00:25:00,000
force everybody to doing everything

758
00:24:58,559 --> 00:25:01,279
exactly the same way you know so this is

759
00:25:00,000 --> 00:25:02,880
sort of trying to be that middle ground

760
00:25:01,279 --> 00:25:03,520
if it's flexible enough that you can

761
00:25:02,880 --> 00:25:05,039
patch it in

762
00:25:03,520 --> 00:25:06,960
so your comfort could be split and

763
00:25:05,039 --> 00:25:08,879
layered but you don't have to

764
00:25:06,960 --> 00:25:10,640
you know don't have to do everything

765
00:25:08,880 --> 00:25:12,559
exactly the same way

766
00:25:10,640 --> 00:25:14,650
time's up i'm sorry but we'll be outside

767
00:25:12,559 --> 00:25:18,689
so we can catch you later thank you very

768
00:25:14,650 --> 00:25:18,689
[Applause]

769
00:25:19,720 --> 00:25:22,720
much

