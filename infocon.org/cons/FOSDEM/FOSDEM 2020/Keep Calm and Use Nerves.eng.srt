1
00:00:05,200 --> 00:00:09,360
uh next talk is by uh arianskarapanissa

2
00:00:07,520 --> 00:00:11,360
who's from amsterdam and i'm also as

3
00:00:09,360 --> 00:00:13,599
well so that's why daniel asked me to

4
00:00:11,360 --> 00:00:15,200
introduce them because both of us when

5
00:00:13,599 --> 00:00:18,400
we organize meetups in amsterdam

6
00:00:15,200 --> 00:00:20,080
about mostly elixir um and today

7
00:00:18,400 --> 00:00:22,479
ariel wants to talk about nerves because

8
00:00:20,080 --> 00:00:25,919
sometimes in his spare times he likes to

9
00:00:22,480 --> 00:00:29,439
go around with old telephone systems and

10
00:00:25,920 --> 00:00:30,560
those kind of things and he also has

11
00:00:29,439 --> 00:00:34,079
contributed a lot to

12
00:00:30,560 --> 00:00:36,320
the election community uh uh recently

13
00:00:34,079 --> 00:00:37,760
um one thing i also want to mention like

14
00:00:36,320 --> 00:00:40,000
if today

15
00:00:37,760 --> 00:00:41,199
this evening you want to have a drink uh

16
00:00:40,000 --> 00:00:43,600
like chat with

17
00:00:41,200 --> 00:00:44,399
for you probably won't have much time to

18
00:00:43,600 --> 00:00:46,000
talk now

19
00:00:44,399 --> 00:00:48,079
but if you want to find us and have a

20
00:00:46,000 --> 00:00:48,960
chat this evening we're also organizing

21
00:00:48,079 --> 00:00:51,360
a meetup at

22
00:00:48,960 --> 00:00:52,320
brewdock which is in the center of

23
00:00:51,360 --> 00:00:56,160
brussels

24
00:00:52,320 --> 00:00:59,039
at nine o'clock so if you have time

25
00:00:56,160 --> 00:01:01,038
please find us and that with being said

26
00:00:59,039 --> 00:01:03,280
let's listen to arya give him a bigger

27
00:01:01,039 --> 00:01:03,280
part

28
00:01:04,640 --> 00:01:09,600
hello hello everyone

29
00:01:08,479 --> 00:01:12,000
thank you tonsi for the nice

30
00:01:09,600 --> 00:01:16,080
introduction and so my name is ariane

31
00:01:12,000 --> 00:01:16,080
scapenissa i'm very honored to be here

32
00:01:16,400 --> 00:01:20,960
and today well i work at bot squad which

33
00:01:19,680 --> 00:01:23,920
is a company that does

34
00:01:20,960 --> 00:01:26,240
things with elixir and chatbots but

35
00:01:23,920 --> 00:01:27,759
today i'm not going to talk about that

36
00:01:26,240 --> 00:01:31,520
but i'm going to talk about basically

37
00:01:27,759 --> 00:01:35,280
what is like a hobby project of mine

38
00:01:31,520 --> 00:01:38,399
but still i think very interesting

39
00:01:35,280 --> 00:01:39,200
so it's about nerves so let me get the

40
00:01:38,400 --> 00:01:42,000
context

41
00:01:39,200 --> 00:01:43,680
first because i i've been working a lot

42
00:01:42,000 --> 00:01:45,280
with artists as well to build like

43
00:01:43,680 --> 00:01:46,479
interactive installations in my in my

44
00:01:45,280 --> 00:01:48,560
past i did that a lot

45
00:01:46,479 --> 00:01:50,479
and lately i've been using starting to

46
00:01:48,560 --> 00:01:52,399
use nerves for that

47
00:01:50,479 --> 00:01:53,679
so one of these projects that basically

48
00:01:52,399 --> 00:01:56,399
this whole talk

49
00:01:53,680 --> 00:01:58,159
is uh is about is called eat tech

50
00:01:56,399 --> 00:02:00,960
kitchen which is

51
00:01:58,159 --> 00:02:02,159
um it was like an art performance of two

52
00:02:00,960 --> 00:02:04,880
ladies who do nice

53
00:02:02,159 --> 00:02:06,240
cool stuff with food and technology and

54
00:02:04,880 --> 00:02:08,239
it was like performance series of

55
00:02:06,240 --> 00:02:10,560
performances but it was also

56
00:02:08,239 --> 00:02:11,760
still is also an interactive

57
00:02:10,560 --> 00:02:13,200
installation so if

58
00:02:11,760 --> 00:02:15,200
the ladies are not there you can still

59
00:02:13,200 --> 00:02:16,640
go into the kitchen and then interact

60
00:02:15,200 --> 00:02:19,119
with the installation

61
00:02:16,640 --> 00:02:20,799
and get a nice recipe at the end which

62
00:02:19,120 --> 00:02:22,959
is like a mini performance

63
00:02:20,800 --> 00:02:25,599
and you can for instance like eat a bite

64
00:02:22,959 --> 00:02:28,720
of in the internet or get some

65
00:02:25,599 --> 00:02:32,640
so they made these like crazy food

66
00:02:28,720 --> 00:02:34,239
things um for you to experience

67
00:02:32,640 --> 00:02:36,559
and the way you interact with the

68
00:02:34,239 --> 00:02:40,000
insulation is

69
00:02:36,560 --> 00:02:42,640
true this thing over here google home

70
00:02:40,000 --> 00:02:44,400
it's a device you can talk to it and it

71
00:02:42,640 --> 00:02:46,640
will say something back

72
00:02:44,400 --> 00:02:48,840
sometimes it doesn't make any sense

73
00:02:46,640 --> 00:02:51,920
sometimes it does

74
00:02:48,840 --> 00:02:53,680
um so you interact with this google home

75
00:02:51,920 --> 00:02:56,000
device and it basically

76
00:02:53,680 --> 00:02:58,800
i'm sorry i have to send it within you

77
00:02:56,000 --> 00:03:03,360
okay yeah sorry i'm sorry

78
00:02:58,800 --> 00:03:03,360
um just in front of this okay

79
00:03:03,599 --> 00:03:06,640
so you interact with the google home and

80
00:03:05,120 --> 00:03:07,920
then google home tells you what to do

81
00:03:06,640 --> 00:03:09,359
and then at the end

82
00:03:07,920 --> 00:03:11,119
it prints a recipe for you and the

83
00:03:09,360 --> 00:03:12,720
recipes are on the wall and

84
00:03:11,120 --> 00:03:15,519
you you you follow the instructions and

85
00:03:12,720 --> 00:03:18,239
then you get your nice food experience

86
00:03:15,519 --> 00:03:19,519
so the way this is set up works like

87
00:03:18,239 --> 00:03:21,599
this

88
00:03:19,519 --> 00:03:23,519
a google home is connected to the

89
00:03:21,599 --> 00:03:26,079
internet which talks to a

90
00:03:23,519 --> 00:03:27,440
well a chatbot that i've built very

91
00:03:26,080 --> 00:03:31,280
simple one very basic

92
00:03:27,440 --> 00:03:33,519
chatbot and then

93
00:03:31,280 --> 00:03:35,280
eventually it will print something on a

94
00:03:33,519 --> 00:03:35,920
printer which is one of these like point

95
00:03:35,280 --> 00:03:39,440
of sales

96
00:03:35,920 --> 00:03:40,879
thermal kind of simple printers um

97
00:03:39,440 --> 00:03:43,280
and of course it needs to do that

98
00:03:40,879 --> 00:03:44,079
somehow so there's a raspberry pi here

99
00:03:43,280 --> 00:03:46,959
that i

100
00:03:44,080 --> 00:03:47,599
programmed to do that um so this i've

101
00:03:46,959 --> 00:03:49,519
been doing

102
00:03:47,599 --> 00:03:50,640
things with printers for for this uh

103
00:03:49,519 --> 00:03:53,280
gold that i work with for

104
00:03:50,640 --> 00:03:54,238
quite a long time and the first versions

105
00:03:53,280 --> 00:03:56,720
um

106
00:03:54,239 --> 00:03:57,519
that i wrote for this software uh were

107
00:03:56,720 --> 00:03:59,840
in

108
00:03:57,519 --> 00:04:02,239
well i just took raspbian you know the

109
00:03:59,840 --> 00:04:03,760
debian distributions for raspberry pi

110
00:04:02,239 --> 00:04:05,519
you can you can do a lot can install it

111
00:04:03,760 --> 00:04:07,359
you just have basically a mini computer

112
00:04:05,519 --> 00:04:10,640
that you can put somewhere like

113
00:04:07,360 --> 00:04:13,120
there's one over here um

114
00:04:10,640 --> 00:04:14,000
um and i needed to somehow interact with

115
00:04:13,120 --> 00:04:15,920
this chatbot which

116
00:04:14,000 --> 00:04:17,358
uses phoenix channels which is like an

117
00:04:15,920 --> 00:04:19,358
interactive way

118
00:04:17,358 --> 00:04:21,198
for elixir and phoenix projects to talk

119
00:04:19,358 --> 00:04:24,320
over websocket

120
00:04:21,199 --> 00:04:27,120
so i wrote something in node.js and then

121
00:04:24,320 --> 00:04:29,199
also need to to drive some leds

122
00:04:27,120 --> 00:04:31,280
because there was some fancy lights so i

123
00:04:29,199 --> 00:04:33,120
wrote some more node.js

124
00:04:31,280 --> 00:04:34,880
um but then i needed to download an

125
00:04:33,120 --> 00:04:36,720
image so i thought it i'll just use

126
00:04:34,880 --> 00:04:38,560
wget because it's installed right i

127
00:04:36,720 --> 00:04:40,240
didn't want to learn how to do that in

128
00:04:38,560 --> 00:04:41,759
node

129
00:04:40,240 --> 00:04:44,080
and then i know a bit of python so i

130
00:04:41,759 --> 00:04:45,840
thought so let's just use python for

131
00:04:44,080 --> 00:04:47,440
printing because the printer driver

132
00:04:45,840 --> 00:04:48,880
for python was apparently better than

133
00:04:47,440 --> 00:04:51,520
the one that was in node

134
00:04:48,880 --> 00:04:53,360
written for this thing but yeah there

135
00:04:51,520 --> 00:04:54,960
was a printer driver so that was good

136
00:04:53,360 --> 00:04:56,800
so it wasn't you know a bunch of

137
00:04:54,960 --> 00:04:59,680
software stacked together on

138
00:04:56,800 --> 00:05:01,360
on the board um but then suddenly when

139
00:04:59,680 --> 00:05:02,320
this was live i suddenly got a phone

140
00:05:01,360 --> 00:05:05,600
call yeah sorry but

141
00:05:02,320 --> 00:05:08,240
the raspberry pi broke can you come so

142
00:05:05,600 --> 00:05:10,400
i need to go to that place and it was

143
00:05:08,240 --> 00:05:11,039
broken and it turned out the sd card was

144
00:05:10,400 --> 00:05:13,198
corrupt

145
00:05:11,039 --> 00:05:14,639
and what turned out was the sd card when

146
00:05:13,199 --> 00:05:18,400
you unplug the power of

147
00:05:14,639 --> 00:05:21,440
raspberry pi um while it's writing data

148
00:05:18,400 --> 00:05:23,758
you basically your sd card is broken

149
00:05:21,440 --> 00:05:25,840
beyond repair

150
00:05:23,759 --> 00:05:27,440
so it's really easy to destroy sd cards

151
00:05:25,840 --> 00:05:29,758
by just you know

152
00:05:27,440 --> 00:05:32,160
letting linux write to your sd card and

153
00:05:29,759 --> 00:05:36,160
then somebody unplugging it

154
00:05:32,160 --> 00:05:37,840
so that's not ideal so i basically

155
00:05:36,160 --> 00:05:39,440
googled that and then somebody said yeah

156
00:05:37,840 --> 00:05:41,599
you should use a read-only

157
00:05:39,440 --> 00:05:42,560
file system overlay in memory bloody

158
00:05:41,600 --> 00:05:44,639
blast um

159
00:05:42,560 --> 00:05:45,840
you know i typed some more commands but

160
00:05:44,639 --> 00:05:47,280
it also

161
00:05:45,840 --> 00:05:50,080
basically then i just had like a

162
00:05:47,280 --> 00:05:51,440
read-only version of that software

163
00:05:50,080 --> 00:05:53,199
and every time i unplugged and plugged

164
00:05:51,440 --> 00:05:54,960
it it was back up and it

165
00:05:53,199 --> 00:05:56,319
restored that version and linux could no

166
00:05:54,960 --> 00:06:00,159
longer write

167
00:05:56,319 --> 00:06:00,160
to the file system which is pretty handy

168
00:06:00,960 --> 00:06:04,560
but it also meant every time i need to

169
00:06:02,800 --> 00:06:06,400
update the node script i had to

170
00:06:04,560 --> 00:06:08,400
you know boot again with a special flag

171
00:06:06,400 --> 00:06:09,280
and then made the fastest and rewrite

172
00:06:08,400 --> 00:06:11,679
again

173
00:06:09,280 --> 00:06:12,559
and then etc so there's a lot of a lot

174
00:06:11,680 --> 00:06:15,039
of stuff

175
00:06:12,560 --> 00:06:15,840
and there was a lot of moving parts um

176
00:06:15,039 --> 00:06:18,159
so

177
00:06:15,840 --> 00:06:19,440
like a year later when when when

178
00:06:18,160 --> 00:06:20,639
claudine asked me again

179
00:06:19,440 --> 00:06:22,800
you know do you want to do this project

180
00:06:20,639 --> 00:06:24,479
again with me i said yes sir but

181
00:06:22,800 --> 00:06:25,919
i'm going to use a different technology

182
00:06:24,479 --> 00:06:27,758
this time so

183
00:06:25,919 --> 00:06:28,960
i need an excuse for a nerf project so

184
00:06:27,759 --> 00:06:32,080
here it was

185
00:06:28,960 --> 00:06:35,840
um so who of you

186
00:06:32,080 --> 00:06:39,520
don't know what nerves is at all

187
00:06:35,840 --> 00:06:42,880
okay that's quite a lot that's good

188
00:06:39,520 --> 00:06:46,080
so i'm gonna give like a very short

189
00:06:42,880 --> 00:06:49,759
two slide primer nerves is like

190
00:06:46,080 --> 00:06:51,440
a way it's like an iot

191
00:06:49,759 --> 00:06:52,960
framework i guess i mean correct me if

192
00:06:51,440 --> 00:06:55,199
i'm wrong

193
00:06:52,960 --> 00:06:56,719
for for nerves and other beam languages

194
00:06:55,199 --> 00:06:59,120
so basically

195
00:06:56,720 --> 00:07:00,479
it supports devices like the raspberry

196
00:06:59,120 --> 00:07:02,240
pi and beaglebone

197
00:07:00,479 --> 00:07:04,800
basically any like small linux device

198
00:07:02,240 --> 00:07:06,240
that's not very very small because

199
00:07:04,800 --> 00:07:07,919
if it doesn't have a memory management

200
00:07:06,240 --> 00:07:09,120
unit then it doesn't really work well

201
00:07:07,919 --> 00:07:10,960
so it needs to have like a normal

202
00:07:09,120 --> 00:07:13,360
version of linux that can run and then

203
00:07:10,960 --> 00:07:15,039
you can boot into nerves

204
00:07:13,360 --> 00:07:17,120
it's not the linux distribution

205
00:07:15,039 --> 00:07:19,759
basically the only things that runs on

206
00:07:17,120 --> 00:07:22,319
your raspberry pi when you use nerves

207
00:07:19,759 --> 00:07:24,000
is the linux kernel and then it directly

208
00:07:22,319 --> 00:07:25,520
boots into erlang so there's nothing in

209
00:07:24,000 --> 00:07:27,440
between there's no system d

210
00:07:25,520 --> 00:07:28,719
there's no init scripts well there's

211
00:07:27,440 --> 00:07:30,160
there's like

212
00:07:28,720 --> 00:07:32,160
well this i think there's one thing in

213
00:07:30,160 --> 00:07:35,039
between but it's like it's very little

214
00:07:32,160 --> 00:07:35,759
basically everything runs within your

215
00:07:35,039 --> 00:07:37,520
within your

216
00:07:35,759 --> 00:07:39,280
erlang virtual machine so you write all

217
00:07:37,520 --> 00:07:42,240
your software services

218
00:07:39,280 --> 00:07:44,000
uh in in your beam and beam is like your

219
00:07:42,240 --> 00:07:45,120
container for your whole application and

220
00:07:44,000 --> 00:07:48,160
your whole

221
00:07:45,120 --> 00:07:49,680
hardware thing

222
00:07:48,160 --> 00:07:51,759
um so that's the only thing that runs

223
00:07:49,680 --> 00:07:52,240
there and it makes it very small i think

224
00:07:51,759 --> 00:07:53,840
if you

225
00:07:52,240 --> 00:07:55,280
do like the hello world of nerves i

226
00:07:53,840 --> 00:07:57,119
think the image that you need to flash

227
00:07:55,280 --> 00:07:58,479
on the card is like 12 megabytes or

228
00:07:57,120 --> 00:08:00,479
something like that so

229
00:07:58,479 --> 00:08:02,960
in that size it's very quick you you

230
00:08:00,479 --> 00:08:05,360
know you you write it you upload it

231
00:08:02,960 --> 00:08:06,799
and then it runs you configure the

232
00:08:05,360 --> 00:08:08,400
network

233
00:08:06,800 --> 00:08:10,000
and it's actually pretty handy to do it

234
00:08:08,400 --> 00:08:11,919
this way because you would just have one

235
00:08:10,000 --> 00:08:13,520
codebase to maintain you just have your

236
00:08:11,919 --> 00:08:14,080
you know your software project you put

237
00:08:13,520 --> 00:08:15,758
it on a

238
00:08:14,080 --> 00:08:17,440
device and you know for certain that

239
00:08:15,759 --> 00:08:19,680
there's nothing else on the device that

240
00:08:17,440 --> 00:08:22,000
you know can wreak havoc on you and so

241
00:08:19,680 --> 00:08:25,280
everything is managed by using erlang

242
00:08:22,000 --> 00:08:27,280
elixir and the beam where like the

243
00:08:25,280 --> 00:08:28,960
supervision mechanism of erlang

244
00:08:27,280 --> 00:08:31,359
really replaces a lot of the things that

245
00:08:28,960 --> 00:08:33,598
systemd would do normally for you

246
00:08:31,360 --> 00:08:34,880
um yeah and the builds are reproducible

247
00:08:33,599 --> 00:08:36,959
so every time you build you can

248
00:08:34,880 --> 00:08:37,919
you know you are pretty sure that it's

249
00:08:36,958 --> 00:08:40,880
the same

250
00:08:37,919 --> 00:08:42,640
thing as last time and what's also very

251
00:08:40,880 --> 00:08:44,320
handy is that it has an update mechanism

252
00:08:42,640 --> 00:08:45,279
so it has actually two partitions like

253
00:08:44,320 --> 00:08:47,600
an a and a b

254
00:08:45,279 --> 00:08:50,560
so while it's running you can you can it

255
00:08:47,600 --> 00:08:51,839
you can copy new firmware to it

256
00:08:50,560 --> 00:08:53,359
and then when the firmware is uploaded

257
00:08:51,839 --> 00:08:54,160
correctly it will reboot to the other

258
00:08:53,360 --> 00:08:56,480
firmware

259
00:08:54,160 --> 00:08:57,680
if it doesn't work it will fall back to

260
00:08:56,480 --> 00:09:00,160
the to the old one

261
00:08:57,680 --> 00:09:02,719
so it has all these you know nice things

262
00:09:00,160 --> 00:09:05,600
for for small devices built in

263
00:09:02,720 --> 00:09:06,959
um and then the last thing that's that's

264
00:09:05,600 --> 00:09:07,200
out there and that's that's fairly new

265
00:09:06,959 --> 00:09:09,599
is

266
00:09:07,200 --> 00:09:10,880
nerves hub which is like a remote

267
00:09:09,600 --> 00:09:12,080
management system because you can

268
00:09:10,880 --> 00:09:13,920
imagine that if you have

269
00:09:12,080 --> 00:09:15,519
like i use this for a hobby but if you

270
00:09:13,920 --> 00:09:16,319
have like you know hundreds of these

271
00:09:15,519 --> 00:09:18,240
devices

272
00:09:16,320 --> 00:09:20,480
out there you know managing sensors for

273
00:09:18,240 --> 00:09:21,200
you or whatever you don't wanna you know

274
00:09:20,480 --> 00:09:23,120
you don't wanna

275
00:09:21,200 --> 00:09:24,240
upload those by hand you want some kind

276
00:09:23,120 --> 00:09:25,760
of management system

277
00:09:24,240 --> 00:09:28,399
so that you can be sure that some

278
00:09:25,760 --> 00:09:31,760
version exists on on your whole fleet of

279
00:09:28,399 --> 00:09:33,920
you know little devices out there um so

280
00:09:31,760 --> 00:09:35,839
nurse hub has all that built in and also

281
00:09:33,920 --> 00:09:37,360
some cryptographic security so that you

282
00:09:35,839 --> 00:09:38,480
really know that it's your stuff and not

283
00:09:37,360 --> 00:09:41,680
somebody else's

284
00:09:38,480 --> 00:09:45,120
and that nobody can access it etc

285
00:09:41,680 --> 00:09:46,079
um so with nerves out of the way let's

286
00:09:45,120 --> 00:09:49,279
see how i

287
00:09:46,080 --> 00:09:52,320
implemented this little device

288
00:09:49,279 --> 00:09:53,200
so version 2 of the recipe printer was

289
00:09:52,320 --> 00:09:55,279
basically

290
00:09:53,200 --> 00:09:56,640
it has these requirements like we needed

291
00:09:55,279 --> 00:09:58,080
to join this phoenix channel right

292
00:09:56,640 --> 00:09:58,480
because we needed to get messages from

293
00:09:58,080 --> 00:10:00,480
the bot

294
00:09:58,480 --> 00:10:01,519
in real time we need to download that

295
00:10:00,480 --> 00:10:03,200
image that we

296
00:10:01,519 --> 00:10:04,560
so the bot would send an image like hey

297
00:10:03,200 --> 00:10:06,480
print this please

298
00:10:04,560 --> 00:10:08,160
we would download that image and then we

299
00:10:06,480 --> 00:10:11,440
would print the image

300
00:10:08,160 --> 00:10:12,880
on the printer well for joining the

301
00:10:11,440 --> 00:10:15,200
phoenix channel there's of course an

302
00:10:12,880 --> 00:10:16,000
elixir on elixir library for it so that

303
00:10:15,200 --> 00:10:18,000
was

304
00:10:16,000 --> 00:10:19,680
was not such a big deal there's one

305
00:10:18,000 --> 00:10:20,399
called phoenix channel client here i

306
00:10:19,680 --> 00:10:24,000
think there's

307
00:10:20,399 --> 00:10:25,279
several others um

308
00:10:24,000 --> 00:10:26,720
so for downloading the image file

309
00:10:25,279 --> 00:10:29,120
there's also lots of options because

310
00:10:26,720 --> 00:10:31,839
that's just an http request right

311
00:10:29,120 --> 00:10:33,200
so in case of tesla it's also very easy

312
00:10:31,839 --> 00:10:36,720
and i think it uses

313
00:10:33,200 --> 00:10:38,560
acne under the hood or it can at least

314
00:10:36,720 --> 00:10:40,640
so basically you just get the image and

315
00:10:38,560 --> 00:10:40,959
it would just return the body as like

316
00:10:40,640 --> 00:10:44,480
raw

317
00:10:40,959 --> 00:10:46,399
bytes the png image

318
00:10:44,480 --> 00:10:47,839
so that's also not a big issue but then

319
00:10:46,399 --> 00:10:48,560
now we have the we have the bytes so

320
00:10:47,839 --> 00:10:51,839
what we do

321
00:10:48,560 --> 00:10:53,439
with the bytes um well we need to

322
00:10:51,839 --> 00:10:53,920
convert it right we need to convert it

323
00:10:53,440 --> 00:10:55,200
to

324
00:10:53,920 --> 00:10:56,959
some kind of thing that the printer

325
00:10:55,200 --> 00:10:59,920
understands and then we need to

326
00:10:56,959 --> 00:11:01,359
write that to the printer um so first

327
00:10:59,920 --> 00:11:02,399
step of course is to you know you have a

328
00:11:01,360 --> 00:11:03,920
png

329
00:11:02,399 --> 00:11:05,760
and we need to you know get the pixels

330
00:11:03,920 --> 00:11:07,199
out of the png because we need to decode

331
00:11:05,760 --> 00:11:10,319
it into something that was

332
00:11:07,200 --> 00:11:13,120
that it was and i

333
00:11:10,320 --> 00:11:14,880
um for the first step i looked uh

334
00:11:13,120 --> 00:11:18,240
because on the on the hex

335
00:11:14,880 --> 00:11:19,839
bm website um you know it doesn't seem

336
00:11:18,240 --> 00:11:21,760
like a very

337
00:11:19,839 --> 00:11:23,760
interesting task right you know load the

338
00:11:21,760 --> 00:11:25,040
file and just get pixels out of it

339
00:11:23,760 --> 00:11:28,720
and there's several actually several

340
00:11:25,040 --> 00:11:31,839
libraries that do something like that

341
00:11:28,720 --> 00:11:32,720
for instance x image info but no wait it

342
00:11:31,839 --> 00:11:34,160
only reads the

343
00:11:32,720 --> 00:11:35,920
reads the metadata so you can see how

344
00:11:34,160 --> 00:11:37,279
big it is you know what kind of colors

345
00:11:35,920 --> 00:11:40,560
it has i don't know

346
00:11:37,279 --> 00:11:42,959
some stuff but not the pixels uh

347
00:11:40,560 --> 00:11:44,399
png it's an airline library i think it

348
00:11:42,959 --> 00:11:46,079
only writes images so that's

349
00:11:44,399 --> 00:11:49,600
no we need to reverse basically that

350
00:11:46,079 --> 00:11:51,680
process so that also didn't help me much

351
00:11:49,600 --> 00:11:52,800
x magic is like an image magic wrapper

352
00:11:51,680 --> 00:11:54,479
so that's a

353
00:11:52,800 --> 00:11:56,399
based on an if and if it's like a c

354
00:11:54,480 --> 00:12:00,480
library that is built into

355
00:11:56,399 --> 00:12:00,480
that you can go out to see from airline

356
00:12:00,720 --> 00:12:04,399
image made that looked actually pretty

357
00:12:02,160 --> 00:12:06,240
interesting but it does not expose the

358
00:12:04,399 --> 00:12:06,800
raw pixel data either just allows you to

359
00:12:06,240 --> 00:12:10,720
transform

360
00:12:06,800 --> 00:12:12,959
images so then i stumbled on

361
00:12:10,720 --> 00:12:14,639
imago in i don't know how he pronounced

362
00:12:12,959 --> 00:12:15,680
it and it looks fairly interesting

363
00:12:14,639 --> 00:12:18,480
because imago

364
00:12:15,680 --> 00:12:19,920
is a is a is a library basically has a

365
00:12:18,480 --> 00:12:21,920
read pixels and that's exactly what i

366
00:12:19,920 --> 00:12:24,639
needed i needed the read pixels function

367
00:12:21,920 --> 00:12:25,439
now get i have a file or whatever i have

368
00:12:24,639 --> 00:12:28,079
data

369
00:12:25,440 --> 00:12:28,720
and just need you know a size width and

370
00:12:28,079 --> 00:12:31,359
height

371
00:12:28,720 --> 00:12:33,279
you know list like rgba etc so this is

372
00:12:31,360 --> 00:12:36,399
just the raw data

373
00:12:33,279 --> 00:12:39,439
um although you know a list

374
00:12:36,399 --> 00:12:41,279
of bytes is not very the way to do it in

375
00:12:39,440 --> 00:12:42,959
in elixir because it takes up quite a

376
00:12:41,279 --> 00:12:45,439
lot of memory um

377
00:12:42,959 --> 00:12:47,599
so you would probably use a binary for

378
00:12:45,440 --> 00:12:49,360
that because in a binary

379
00:12:47,600 --> 00:12:50,720
is just you know a chunk of memory

380
00:12:49,360 --> 00:12:52,880
basically

381
00:12:50,720 --> 00:12:54,000
anyway it still could work right because

382
00:12:52,880 --> 00:12:58,000
the images are not so

383
00:12:54,000 --> 00:13:00,240
so big um so it turns out it was

384
00:12:58,000 --> 00:13:02,639
written in rust i don't have anything

385
00:13:00,240 --> 00:13:04,560
against rust

386
00:13:02,639 --> 00:13:06,240
but the thing was it doesn't support the

387
00:13:04,560 --> 00:13:09,920
latest version of

388
00:13:06,240 --> 00:13:11,600
of otp and i think nerfs only runs on

389
00:13:09,920 --> 00:13:13,519
the latest version of otp or there was

390
00:13:11,600 --> 00:13:16,079
some kind of

391
00:13:13,519 --> 00:13:17,279
hard problems to to to do that there was

392
00:13:16,079 --> 00:13:19,199
also quite a lot of

393
00:13:17,279 --> 00:13:20,880
you know it basically this is an image

394
00:13:19,200 --> 00:13:22,880
library so i'm just gonna you know

395
00:13:20,880 --> 00:13:24,240
give me all those decoders so it was it

396
00:13:22,880 --> 00:13:26,720
was it went quite

397
00:13:24,240 --> 00:13:29,040
big and it it was it wasn't it was felt

398
00:13:26,720 --> 00:13:33,040
like using a sledgehammer you know to

399
00:13:29,040 --> 00:13:36,079
crack this simple nut and it turns out

400
00:13:33,040 --> 00:13:37,839
it doesn't quite cross-compile to uh to

401
00:13:36,079 --> 00:13:40,079
to nerfs and that was actually the quite

402
00:13:37,839 --> 00:13:42,000
the hard thing that i could not figure

403
00:13:40,079 --> 00:13:44,638
out because i mean i know a bit of c

404
00:13:42,000 --> 00:13:46,079
etc but i don't know so much about rust

405
00:13:44,639 --> 00:13:47,440
and cross-compiling and environment

406
00:13:46,079 --> 00:13:51,680
variables and

407
00:13:47,440 --> 00:13:53,199
stuff so and i think everybody like

408
00:13:51,680 --> 00:13:55,120
especially in the slack nerf channel

409
00:13:53,199 --> 00:13:58,240
agrees that it should be fixed and maybe

410
00:13:55,120 --> 00:13:58,240
it's already fixed i don't know

411
00:13:58,320 --> 00:14:04,079
but it was kind of hard and i tried to

412
00:14:01,360 --> 00:14:04,639
investigate a bit and i got into screens

413
00:14:04,079 --> 00:14:07,519
like this

414
00:14:04,639 --> 00:14:07,920
and more screens like this and at some

415
00:14:07,519 --> 00:14:13,920
point

416
00:14:07,920 --> 00:14:13,920
i was just i just do it myself

417
00:14:14,839 --> 00:14:20,399
so i decided to you know

418
00:14:17,519 --> 00:14:21,120
uh look see if there's because actually

419
00:14:20,399 --> 00:14:23,760
wrapping a c

420
00:14:21,120 --> 00:14:25,360
library in in in erlang and like writing

421
00:14:23,760 --> 00:14:27,199
this knife is not very hard

422
00:14:25,360 --> 00:14:28,720
it's basically just now taking something

423
00:14:27,199 --> 00:14:31,279
and putting some glue on it and then

424
00:14:28,720 --> 00:14:33,839
passing it back to the vm

425
00:14:31,279 --> 00:14:36,079
so i looked for like c libraries that

426
00:14:33,839 --> 00:14:37,680
would consist just of one file right so

427
00:14:36,079 --> 00:14:39,040
the single header single files it

428
00:14:37,680 --> 00:14:40,479
doesn't have any other dependencies

429
00:14:39,040 --> 00:14:41,599
because those you can just easily

430
00:14:40,480 --> 00:14:44,639
compile without

431
00:14:41,600 --> 00:14:48,160
having to do a lot of dependency stuff

432
00:14:44,639 --> 00:14:50,000
and i named this library pixel so pixels

433
00:14:48,160 --> 00:14:51,760
basically takes two c libraries like

434
00:14:50,000 --> 00:14:55,199
one's called load png's or

435
00:14:51,760 --> 00:14:56,560
one file and micro jpegs also just one

436
00:14:55,199 --> 00:14:59,680
file

437
00:14:56,560 --> 00:15:00,560
and i just linked that to make a nif and

438
00:14:59,680 --> 00:15:03,760
that way

439
00:15:00,560 --> 00:15:07,040
i finally got you know my rgba

440
00:15:03,760 --> 00:15:10,720
data as a byte

441
00:15:07,040 --> 00:15:12,000
um basically right now the only function

442
00:15:10,720 --> 00:15:15,440
that it exposes is

443
00:15:12,000 --> 00:15:17,120
read file because if there's no prs

444
00:15:15,440 --> 00:15:19,600
welcome of course if you want to write

445
00:15:17,120 --> 00:15:22,480
file or whatever

446
00:15:19,600 --> 00:15:24,079
and so this is actually we got that

447
00:15:22,480 --> 00:15:25,360
problem solved

448
00:15:24,079 --> 00:15:27,120
but there are actually two more problems

449
00:15:25,360 --> 00:15:29,040
to cover how am i doing on time by the

450
00:15:27,120 --> 00:15:31,440
way

451
00:15:29,040 --> 00:15:31,829
oh okay so i have to speed up a bit i'm

452
00:15:31,440 --> 00:15:33,759
sorry

453
00:15:31,830 --> 00:15:36,720
[Laughter]

454
00:15:33,759 --> 00:15:37,920
there's a lot of stuff to tell um so we

455
00:15:36,720 --> 00:15:40,639
need to convert this

456
00:15:37,920 --> 00:15:44,240
this raw data into bitmap data and then

457
00:15:40,639 --> 00:15:44,240
write bitmap data to the printer

458
00:15:44,480 --> 00:15:47,360
and printing is actually pretty easy

459
00:15:45,759 --> 00:15:48,720
because on linux if you just plug in the

460
00:15:47,360 --> 00:15:50,880
device you get this

461
00:15:48,720 --> 00:15:52,480
you get this thing this lp device and

462
00:15:50,880 --> 00:15:53,839
just can write something to it and it

463
00:15:52,480 --> 00:15:55,120
will just print it out because it's how

464
00:15:53,839 --> 00:15:58,240
a line printer works you just

465
00:15:55,120 --> 00:15:59,519
write characters to the to the device

466
00:15:58,240 --> 00:16:00,959
but if you want to do graphics like

467
00:15:59,519 --> 00:16:04,160
proper graphics you have to actually

468
00:16:00,959 --> 00:16:04,160
read the spec like this

469
00:16:04,320 --> 00:16:09,279
so i looked at python because there was

470
00:16:07,120 --> 00:16:11,680
a python library and it turns out

471
00:16:09,279 --> 00:16:14,079
it does a lot of stuff and it does more

472
00:16:11,680 --> 00:16:15,920
stuff and basically builds up this hex

473
00:16:14,079 --> 00:16:18,079
encoded string and and then decodes it

474
00:16:15,920 --> 00:16:20,839
to raw bytes and then writes it

475
00:16:18,079 --> 00:16:22,319
i don't know um well apparently the

476
00:16:20,839 --> 00:16:24,320
easiest

477
00:16:22,320 --> 00:16:27,120
i'm gonna skip over this a little bit

478
00:16:24,320 --> 00:16:30,560
because i want to do a demo at the end

479
00:16:27,120 --> 00:16:31,920
um but basically what bitmap encoding is

480
00:16:30,560 --> 00:16:34,239
is that you take you know you take your

481
00:16:31,920 --> 00:16:36,319
bitmap and you um

482
00:16:34,240 --> 00:16:37,600
you know you put it you you you put all

483
00:16:36,320 --> 00:16:38,880
these these different pixels you put

484
00:16:37,600 --> 00:16:40,639
them in one byte

485
00:16:38,880 --> 00:16:42,320
so basically you can this is this is

486
00:16:40,639 --> 00:16:44,480
like a eight eight

487
00:16:42,320 --> 00:16:45,839
the width eight so you can represent

488
00:16:44,480 --> 00:16:49,360
that as a list of you know

489
00:16:45,839 --> 00:16:51,600
um binary encoded integers

490
00:16:49,360 --> 00:16:52,880
which is basically just this so so this

491
00:16:51,600 --> 00:16:56,560
image encodes to

492
00:16:52,880 --> 00:16:58,639
you know this raw byte string here um

493
00:16:56,560 --> 00:17:00,079
and having said that elixir and erlang

494
00:16:58,639 --> 00:17:01,759
have a really nice way of you know

495
00:17:00,079 --> 00:17:04,000
dealing with these bytes you can really

496
00:17:01,759 --> 00:17:05,520
easily deconstruct bytes and then

497
00:17:04,000 --> 00:17:08,079
pattern match on them and also

498
00:17:05,520 --> 00:17:09,439
write you know bit by bit even not by

499
00:17:08,079 --> 00:17:12,879
but even bit by bit you can

500
00:17:09,439 --> 00:17:15,039
append things into a new um

501
00:17:12,880 --> 00:17:16,319
chunk of memory so basically that's what

502
00:17:15,039 --> 00:17:18,959
this code does

503
00:17:16,319 --> 00:17:19,760
it recursively goes over the entire

504
00:17:18,959 --> 00:17:21,679
input data

505
00:17:19,760 --> 00:17:23,839
and it basically decides here if it's

506
00:17:21,679 --> 00:17:25,439
white or black is it if it's one of the

507
00:17:23,839 --> 00:17:28,240
components is larger than 200

508
00:17:25,439 --> 00:17:29,919
it's it's black and otherwise it's white

509
00:17:28,240 --> 00:17:31,919
and then we just append it here so

510
00:17:29,919 --> 00:17:33,760
just take the bit string and just append

511
00:17:31,919 --> 00:17:36,720
one single byte to it

512
00:17:33,760 --> 00:17:37,600
sorry single bit to it and so in the end

513
00:17:36,720 --> 00:17:40,320
you have this nice

514
00:17:37,600 --> 00:17:43,280
you know chunk of data so now i have

515
00:17:40,320 --> 00:17:45,918
this nice chunk of data

516
00:17:43,280 --> 00:17:47,039
but i still need to print it to the

517
00:17:45,919 --> 00:17:48,640
printer

518
00:17:47,039 --> 00:17:51,440
it was fairly easy right because we had

519
00:17:48,640 --> 00:17:55,200
this nice lp device on the on the

520
00:17:51,440 --> 00:17:57,919
thing but the turns actually out

521
00:17:55,200 --> 00:17:59,039
you cannot really read it but on nerfs

522
00:17:57,919 --> 00:18:00,799
you don't have these

523
00:17:59,039 --> 00:18:02,480
lp devices because there's no printer

524
00:18:00,799 --> 00:18:04,960
driver running

525
00:18:02,480 --> 00:18:06,480
and that was actually quite a problem so

526
00:18:04,960 --> 00:18:10,000
i had to resort to use

527
00:18:06,480 --> 00:18:12,799
raw like the lib usb data is it working

528
00:18:10,000 --> 00:18:13,840
yeah and luckily somebody already made

529
00:18:12,799 --> 00:18:17,918
like a lib usb

530
00:18:13,840 --> 00:18:21,918
wrapper for me so i use that

531
00:18:17,919 --> 00:18:24,880
to to send the data

532
00:18:21,919 --> 00:18:26,880
and this actually this i i think nobody

533
00:18:24,880 --> 00:18:27,440
actually uses this library because it

534
00:18:26,880 --> 00:18:29,120
was

535
00:18:27,440 --> 00:18:31,520
that it is a bit of a sad state and

536
00:18:29,120 --> 00:18:34,479
that's that's really unfortunate

537
00:18:31,520 --> 00:18:34,799
um because there was there was some like

538
00:18:34,480 --> 00:18:37,360
some

539
00:18:34,799 --> 00:18:39,200
open things that i had to to fix like it

540
00:18:37,360 --> 00:18:40,840
kept crashing on me i was like why is

541
00:18:39,200 --> 00:18:43,440
that

542
00:18:40,840 --> 00:18:45,199
um i'm just going to skip over these a

543
00:18:43,440 --> 00:18:48,720
bit

544
00:18:45,200 --> 00:18:49,200
but it was yeah it was not it was not

545
00:18:48,720 --> 00:18:51,360
very

546
00:18:49,200 --> 00:18:53,520
very straightforward and i still have

547
00:18:51,360 --> 00:18:55,600
some pr's open i hope that the original

548
00:18:53,520 --> 00:18:56,860
maintainer hears this talk

549
00:18:55,600 --> 00:18:59,280
please merge them

550
00:18:56,860 --> 00:19:01,760
[Laughter]

551
00:18:59,280 --> 00:19:03,600
but once i did that it was fairly easy i

552
00:19:01,760 --> 00:19:04,799
could you know i could open the raw usb

553
00:19:03,600 --> 00:19:07,280
device and then

554
00:19:04,799 --> 00:19:08,840
send my data to it using this bulk send

555
00:19:07,280 --> 00:19:11,520
command

556
00:19:08,840 --> 00:19:15,360
and and that basically uh

557
00:19:11,520 --> 00:19:17,840
got my uh got my print uh working

558
00:19:15,360 --> 00:19:19,280
so then i only needed to ship it into

559
00:19:17,840 --> 00:19:22,559
firmware

560
00:19:19,280 --> 00:19:27,120
and put it on the device and then

561
00:19:22,559 --> 00:19:30,559
put it into production so um

562
00:19:27,120 --> 00:19:32,719
this is how my development setup looked

563
00:19:30,559 --> 00:19:33,918
it's a typical nerf development you know

564
00:19:32,720 --> 00:19:36,480
yeah if you're you need to have a

565
00:19:33,919 --> 00:19:37,919
monitor right so i have a tv

566
00:19:36,480 --> 00:19:39,520
i think this is the this is the actual

567
00:19:37,919 --> 00:19:40,240
raspberry pi connected you know to the

568
00:19:39,520 --> 00:19:42,960
printer and

569
00:19:40,240 --> 00:19:44,320
some keyboard and i had to move some

570
00:19:42,960 --> 00:19:47,360
toys to the site

571
00:19:44,320 --> 00:19:48,879
anyway um and then at some point

572
00:19:47,360 --> 00:19:50,639
it started crashing on me and i had to

573
00:19:48,880 --> 00:19:52,960
take pictures of the screen

574
00:19:50,640 --> 00:19:55,120
because it was scrolling so so fast i

575
00:19:52,960 --> 00:19:57,280
couldn't see what was going on

576
00:19:55,120 --> 00:19:59,600
um so it made this nice gifty for me

577
00:19:57,280 --> 00:20:03,200
although i didn't intend it to do that

578
00:19:59,600 --> 00:20:03,678
um but with some thanks to the the slack

579
00:20:03,200 --> 00:20:06,960
channel

580
00:20:03,679 --> 00:20:10,159
i got i got it all working

581
00:20:06,960 --> 00:20:12,320
and i actually for this talk i actually

582
00:20:10,159 --> 00:20:15,840
prepared like a slightly different demo

583
00:20:12,320 --> 00:20:17,840
than the the e-tec kitchen because

584
00:20:15,840 --> 00:20:20,399
i already made like a hitchhiker's guide

585
00:20:17,840 --> 00:20:21,760
quotes voice action on google assistant

586
00:20:20,400 --> 00:20:26,000
and i decided to hook it up to the

587
00:20:21,760 --> 00:20:26,000
printer so let's let's see if it works

588
00:20:27,120 --> 00:20:35,840
ok google talk to the

589
00:20:30,320 --> 00:20:35,840
hitchhiker's guide quotes

590
00:20:38,159 --> 00:20:44,640
um wait one more time okay google

591
00:20:42,080 --> 00:20:46,720
talk to the hitchhiker's guide quotes

592
00:20:44,640 --> 00:20:49,520


593
00:20:46,720 --> 00:20:52,640
sorry we cut that out okay google talk

594
00:20:49,520 --> 00:20:52,639
to the highest guide quotes

595
00:20:55,520 --> 00:21:02,158
okay um

596
00:20:58,960 --> 00:21:06,080
so one so one once that that went

597
00:21:02,159 --> 00:21:06,080
it would print out this printer and

598
00:21:06,320 --> 00:21:13,280
well i also did it on my phone

599
00:21:09,440 --> 00:21:15,120
so actually now it it prints random

600
00:21:13,280 --> 00:21:16,639
quotes from the hitchhiker's guide

601
00:21:15,120 --> 00:21:18,559
and so you can say that the google

602
00:21:16,640 --> 00:21:19,600
assistant you can say print it for me

603
00:21:18,559 --> 00:21:30,879
and then it will

604
00:21:19,600 --> 00:21:33,600
actually start to print it for you

605
00:21:30,880 --> 00:21:35,039
and there comes another one but you can

606
00:21:33,600 --> 00:21:36,559
you can try it i'll

607
00:21:35,039 --> 00:21:39,760
need to keep this online so people can

608
00:21:36,559 --> 00:21:43,440
you know print their own quotes

609
00:21:39,760 --> 00:21:46,720
um so uh what's else there

610
00:21:43,440 --> 00:21:47,840
um yeah so basically the lessons learned

611
00:21:46,720 --> 00:21:49,760
here are i think

612
00:21:47,840 --> 00:21:51,678
nerfs is a really powerful framework and

613
00:21:49,760 --> 00:21:52,640
it's really you know it's really well

614
00:21:51,679 --> 00:21:54,080
thought out and it

615
00:21:52,640 --> 00:21:56,000
there's a lot of you know support for

616
00:21:54,080 --> 00:21:57,520
the for the community and it gets better

617
00:21:56,000 --> 00:21:57,919
every release like in the last release

618
00:21:57,520 --> 00:22:01,120
they

619
00:21:57,919 --> 00:22:03,280
released a new networking library

620
00:22:01,120 --> 00:22:04,158
to automatically set up an access point

621
00:22:03,280 --> 00:22:05,440
so you can

622
00:22:04,159 --> 00:22:07,120
you can log into it and then you can

623
00:22:05,440 --> 00:22:08,240
configure the wi-fi for the device and

624
00:22:07,120 --> 00:22:09,840
then it will automatically

625
00:22:08,240 --> 00:22:11,360
try to connect to that wi-fi so it's

626
00:22:09,840 --> 00:22:12,720
really like a smooth

627
00:22:11,360 --> 00:22:14,479
you don't have to hard code the wi-fi

628
00:22:12,720 --> 00:22:15,440
credentials in your thing like i have to

629
00:22:14,480 --> 00:22:18,080
do now

630
00:22:15,440 --> 00:22:19,760
um so it's really like starting to you

631
00:22:18,080 --> 00:22:21,918
know to be more solid and more

632
00:22:19,760 --> 00:22:23,120
more user-friendly and you don't have to

633
00:22:21,919 --> 00:22:24,480
use c if you do

634
00:22:23,120 --> 00:22:26,239
you know there's a lot of support for

635
00:22:24,480 --> 00:22:27,280
different for different hardware and

636
00:22:26,240 --> 00:22:28,960
different you know

637
00:22:27,280 --> 00:22:30,799
you know little boards and leds and

638
00:22:28,960 --> 00:22:32,159
whatever um

639
00:22:30,799 --> 00:22:34,480
but if you know if you want something

640
00:22:32,159 --> 00:22:36,320
specific like i did you you have to get

641
00:22:34,480 --> 00:22:39,440
your hands dirty a little bit

642
00:22:36,320 --> 00:22:40,879
um yeah there's a very helpful community

643
00:22:39,440 --> 00:22:43,200
and there's also a conference coming up

644
00:22:40,880 --> 00:22:46,240
actually in the us i think in october

645
00:22:43,200 --> 00:22:48,159
so so you should go there or send in the

646
00:22:46,240 --> 00:22:50,320
paper or

647
00:22:48,159 --> 00:22:52,080
anyway so thank you very much for

648
00:22:50,320 --> 00:22:54,639
listening this is the software

649
00:22:52,080 --> 00:22:55,500
you can find it online and thanks for

650
00:22:54,640 --> 00:23:04,559
listening

651
00:22:55,500 --> 00:23:08,080
[Applause]

652
00:23:04,559 --> 00:23:11,440
any i have questions

653
00:23:08,080 --> 00:23:14,480
question does

654
00:23:11,440 --> 00:23:14,880
nerves have an interface to deal with

655
00:23:14,480 --> 00:23:18,480
the

656
00:23:14,880 --> 00:23:21,600
gdp io pins in the raspberry pi

657
00:23:18,480 --> 00:23:22,240
and if it doesn't do you are you able to

658
00:23:21,600 --> 00:23:25,918
use

659
00:23:22,240 --> 00:23:29,280
a port command using like like gpod

660
00:23:25,919 --> 00:23:30,799
or something yeah so the question is uh

661
00:23:29,280 --> 00:23:32,399
does the nerfs have

662
00:23:30,799 --> 00:23:35,520
built-in support for the built-in ports

663
00:23:32,400 --> 00:23:38,720
of the of the raspberry pi like gpio

664
00:23:35,520 --> 00:23:40,400
yes it does so there's a

665
00:23:38,720 --> 00:23:41,840
there's a library i'm not sure i think

666
00:23:40,400 --> 00:23:42,559
elixir ill but i think that's the old

667
00:23:41,840 --> 00:23:45,439
one there's like

668
00:23:42,559 --> 00:23:47,039
nerf circuits now nerf circuits so that

669
00:23:45,440 --> 00:23:48,240
support basically for all the circuits

670
00:23:47,039 --> 00:23:51,760
like also spi

671
00:23:48,240 --> 00:23:53,200
and i square c and all those kind of

672
00:23:51,760 --> 00:23:54,720
yeah those are all supported so if you

673
00:23:53,200 --> 00:23:56,080
have a device that works like that it's

674
00:23:54,720 --> 00:23:57,060
you just have to write the protocol you

675
00:23:56,080 --> 00:24:00,590
don't have to do any c

676
00:23:57,060 --> 00:24:00,590
[Laughter]

677
00:24:04,000 --> 00:24:07,840
everyone um so you showed your

678
00:24:06,080 --> 00:24:08,639
development environment which looks very

679
00:24:07,840 --> 00:24:11,840
very cool

680
00:24:08,640 --> 00:24:15,520
um with that new release uh

681
00:24:11,840 --> 00:24:17,600
of the network uh in nerves

682
00:24:15,520 --> 00:24:19,200
because i i've heard that you can like

683
00:24:17,600 --> 00:24:22,000
ssh into nerves

684
00:24:19,200 --> 00:24:22,480
oh yeah on your laptop is that a thing

685
00:24:22,000 --> 00:24:24,080
yeah

686
00:24:22,480 --> 00:24:26,000
if i knew the ip address of this thing i

687
00:24:24,080 --> 00:24:29,678
could actually show that

688
00:24:26,000 --> 00:24:29,679
um or maybe it is

689
00:24:31,360 --> 00:24:35,120
it's either this one oh there we go

690
00:24:37,679 --> 00:24:42,240
so this is i'm now inside that device

691
00:24:40,240 --> 00:24:42,799
basically so i'm not sure what it looks

692
00:24:42,240 --> 00:24:44,640
so

693
00:24:42,799 --> 00:24:46,320
if i try to do another pin it might it

694
00:24:44,640 --> 00:24:49,760
might show something

695
00:24:46,320 --> 00:24:53,120
and let's just try that

696
00:24:49,760 --> 00:24:54,480
and there we go oh there we go so it

697
00:24:53,120 --> 00:24:57,199
does something

698
00:24:54,480 --> 00:24:57,200
is oh you see

699
00:24:59,360 --> 00:25:03,199
yeah so that's that's standard so you

700
00:25:01,039 --> 00:25:04,320
you can you can go in you can debug you

701
00:25:03,200 --> 00:25:07,120
can run code here

702
00:25:04,320 --> 00:25:08,000
yeah on your own laptop oh yeah of

703
00:25:07,120 --> 00:25:09,520
course i i o

704
00:25:08,000 --> 00:25:11,679
yeah i always develop it on my own

705
00:25:09,520 --> 00:25:13,039
laptop yeah yeah it's basically only

706
00:25:11,679 --> 00:25:14,240
like in this situation where you really

707
00:25:13,039 --> 00:25:16,158
don't know you know if there's a black

708
00:25:14,240 --> 00:25:18,159
box and doesn't respond you don't know

709
00:25:16,159 --> 00:25:19,440
in which stage it is it is not booting

710
00:25:18,159 --> 00:25:20,320
right and then you have to connect the

711
00:25:19,440 --> 00:25:22,000
monitor

712
00:25:20,320 --> 00:25:23,520
but for the rest i can now just upload a

713
00:25:22,000 --> 00:25:25,520
new firmware and and just

714
00:25:23,520 --> 00:25:27,120
have the reboot and i wouldn't need to

715
00:25:25,520 --> 00:25:31,120
do anything special

716
00:25:27,120 --> 00:25:31,439
yeah did you did you end up using nerf's

717
00:25:31,120 --> 00:25:33,360
hub

718
00:25:31,440 --> 00:25:34,640
for the art installation so you didn't

719
00:25:33,360 --> 00:25:36,879
have to go there anymore

720
00:25:34,640 --> 00:25:38,880
um did i end up using nerf hub well i

721
00:25:36,880 --> 00:25:40,960
actually tried but i just had

722
00:25:38,880 --> 00:25:42,640
one device and i actually tried to do

723
00:25:40,960 --> 00:25:45,440
that

724
00:25:42,640 --> 00:25:47,200
but there was some issue when i run into

725
00:25:45,440 --> 00:25:49,120
this

726
00:25:47,200 --> 00:25:50,640
but it was very specific so the device

727
00:25:49,120 --> 00:25:53,279
kept crashing due to some

728
00:25:50,640 --> 00:25:55,039
cryptographic error but i would

729
00:25:53,279 --> 00:25:58,000
definitely use it i actually

730
00:25:55,039 --> 00:26:00,158
used it but but for for this like n

731
00:25:58,000 --> 00:26:02,000
equals one it's not really uh

732
00:26:00,159 --> 00:26:03,360
helpful only if you have more than two

733
00:26:02,000 --> 00:26:05,919
devices then it would be really helpful

734
00:26:03,360 --> 00:26:05,918
i think yeah

735
00:26:06,240 --> 00:26:09,600
or if your the installation is remote

736
00:26:08,159 --> 00:26:10,400
right because that's also really handy

737
00:26:09,600 --> 00:26:11,918
if your

738
00:26:10,400 --> 00:26:14,320
insulation is a museum somewhere you

739
00:26:11,919 --> 00:26:15,440
have to you cannot ssh there so you but

740
00:26:14,320 --> 00:26:17,520
you can

741
00:26:15,440 --> 00:26:18,480
go there through the to the nerves up

742
00:26:17,520 --> 00:26:23,279
and then do

743
00:26:18,480 --> 00:26:25,840
debug it live yeah all right

744
00:26:23,279 --> 00:26:25,840
thanks

