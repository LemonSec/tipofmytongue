1
00:00:05,120 --> 00:00:10,160
so

2
00:00:06,879 --> 00:00:14,000
i i come from bologna

3
00:00:10,160 --> 00:00:17,359
i'm at the university of bologna

4
00:00:14,000 --> 00:00:18,320
and this icon here is virtual square

5
00:00:17,359 --> 00:00:22,160
which is

6
00:00:18,320 --> 00:00:24,599
a team which is developing in solutions

7
00:00:22,160 --> 00:00:26,800
tools ideas in the field of

8
00:00:24,599 --> 00:00:31,039
virtualization

9
00:00:26,800 --> 00:00:34,320
vuos give your processes a new

10
00:00:31,039 --> 00:00:38,079
view view

11
00:00:34,320 --> 00:00:41,280
it's a it's not an acronym it must sound

12
00:00:38,079 --> 00:00:44,640
like a view so

13
00:00:41,280 --> 00:00:48,879
which is the point

14
00:00:44,640 --> 00:00:52,480
what is what a process can can view

15
00:00:48,879 --> 00:00:57,360
a process running an operative system

16
00:00:52,480 --> 00:00:57,360
is able by itself to

17
00:00:57,760 --> 00:01:04,399
to execute the machine operations

18
00:01:00,879 --> 00:01:07,439
disabled by itself to uh access

19
00:01:04,400 --> 00:01:10,479
its own memory but

20
00:01:07,439 --> 00:01:14,240
everything else must be

21
00:01:10,479 --> 00:01:18,479
uh obtained through system codes

22
00:01:14,240 --> 00:01:22,560
so the environment the view the panorama

23
00:01:18,479 --> 00:01:26,000
that the process is uh seeing outside

24
00:01:22,560 --> 00:01:29,280
its world it's given by

25
00:01:26,000 --> 00:01:32,640
the answer by the

26
00:01:29,280 --> 00:01:33,680
reply that the system calls gives you

27
00:01:32,640 --> 00:01:37,280
back he gives

28
00:01:33,680 --> 00:01:40,960
it back okay

29
00:01:37,280 --> 00:01:44,560
so namespaces

30
00:01:40,960 --> 00:01:47,280
in the kernel are ways to provide

31
00:01:44,560 --> 00:01:47,920
processes with different views different

32
00:01:47,280 --> 00:01:50,880
views

33
00:01:47,920 --> 00:01:52,320
on a file system different views of net

34
00:01:50,880 --> 00:01:55,920
or networking

35
00:01:52,320 --> 00:02:00,158
different views on process ids user id

36
00:01:55,920 --> 00:02:03,520
or whatever what we are

37
00:02:00,159 --> 00:02:06,960
designing with vos

38
00:02:03,520 --> 00:02:11,038
is something similar but

39
00:02:06,960 --> 00:02:12,239
completely uh developed a continuum

40
00:02:11,038 --> 00:02:15,599
completely running

41
00:02:12,239 --> 00:02:18,400
in user space with just

42
00:02:15,599 --> 00:02:20,319
user permissions without the need to be

43
00:02:18,400 --> 00:02:23,840
rooted

44
00:02:20,319 --> 00:02:28,959
there's there's can reduce

45
00:02:23,840 --> 00:02:32,239
dramatically they uh the textual phase

46
00:02:28,959 --> 00:02:35,840
because we don't use the

47
00:02:32,239 --> 00:02:39,120
namespace feature in the canon so

48
00:02:35,840 --> 00:02:41,680
you can imagine to run a kernel with the

49
00:02:39,120 --> 00:02:46,160
namespaces disabled

50
00:02:41,680 --> 00:02:46,160
and at the same time we

51
00:02:46,560 --> 00:02:51,440
we provide the solutions that are

52
00:02:48,800 --> 00:02:56,080
available to standard users

53
00:02:51,440 --> 00:02:56,079
nowadays it happens so often that

54
00:02:56,879 --> 00:03:03,200
solutions tools are provided

55
00:03:00,480 --> 00:03:04,000
for system administrators but that it

56
00:03:03,200 --> 00:03:07,599
means

57
00:03:04,000 --> 00:03:10,720
that a

58
00:03:07,599 --> 00:03:14,319
some it's another way to to

59
00:03:10,720 --> 00:03:17,680
enlarge the the texture phase

60
00:03:14,319 --> 00:03:22,000
as faulty programs

61
00:03:17,680 --> 00:03:25,360
bugs can create damages

62
00:03:22,000 --> 00:03:29,440
to the system so

63
00:03:25,360 --> 00:03:29,440
what they need

64
00:03:30,080 --> 00:03:36,159
starts to stay there come comes from

65
00:03:33,599 --> 00:03:36,159
a need

66
00:03:37,040 --> 00:03:46,560
ah why it is not possible

67
00:03:41,360 --> 00:03:50,400
for a for a user to mount a file system

68
00:03:46,560 --> 00:03:50,400
if i have a file system image

69
00:03:51,599 --> 00:03:59,040
it's a file of mine so

70
00:03:55,599 --> 00:04:01,040
mounting a file system image and changes

71
00:03:59,040 --> 00:04:03,280
the contents of the files

72
00:04:01,040 --> 00:04:04,159
including that file system image once

73
00:04:03,280 --> 00:04:07,519
mounted

74
00:04:04,159 --> 00:04:09,280
it's just a sophisticated editing of a

75
00:04:07,519 --> 00:04:13,120
part of yours

76
00:04:09,280 --> 00:04:16,238
why is it forbidden in

77
00:04:13,120 --> 00:04:19,918
in a standard system

78
00:04:16,238 --> 00:04:23,359
just because the idea of mount

79
00:04:19,918 --> 00:04:26,719
is an idea of a global

80
00:04:23,360 --> 00:04:27,600
operation of the system this operation

81
00:04:26,720 --> 00:04:30,639
either is

82
00:04:27,600 --> 00:04:31,440
provided as a global operation as in the

83
00:04:30,639 --> 00:04:34,080
past

84
00:04:31,440 --> 00:04:35,040
or this is provided justice to a subset

85
00:04:34,080 --> 00:04:39,120
of processes but

86
00:04:35,040 --> 00:04:42,880
but by the canon in spaces instead

87
00:04:39,120 --> 00:04:44,240
it must be possible to mount to first

88
00:04:42,880 --> 00:04:47,040
systems

89
00:04:44,240 --> 00:04:47,040
as users

90
00:04:49,280 --> 00:04:52,960
in this presentation i want to show you

91
00:04:51,360 --> 00:04:56,479
first

92
00:04:52,960 --> 00:04:59,680
what and why

93
00:04:56,479 --> 00:05:01,440
and then at the end how the reverse way

94
00:04:59,680 --> 00:05:03,680
around

95
00:05:01,440 --> 00:05:03,680
so

96
00:05:04,639 --> 00:05:11,280
which are other applications i

97
00:05:07,919 --> 00:05:14,000
can need a virtual device so

98
00:05:11,280 --> 00:05:15,599
i want to create a ram disk for my

99
00:05:14,000 --> 00:05:17,280
application

100
00:05:15,600 --> 00:05:19,120
so if it's around this for my

101
00:05:17,280 --> 00:05:22,880
application why i need to be root

102
00:05:19,120 --> 00:05:22,880
why i need to to

103
00:05:23,360 --> 00:05:30,400
need the kerner services or

104
00:05:26,880 --> 00:05:33,840
i want to use a different uh

105
00:05:30,400 --> 00:05:37,120
network stack or

106
00:05:33,840 --> 00:05:40,560
i wanna see a file which is here there

107
00:05:37,120 --> 00:05:42,639
like the the bind mount or i want to

108
00:05:40,560 --> 00:05:45,039
remount the entire system

109
00:05:42,639 --> 00:05:45,039
in uh

110
00:05:45,759 --> 00:05:53,520
in car mode in a copy and light mode

111
00:05:50,320 --> 00:05:56,240
i want to change the name the time

112
00:05:53,520 --> 00:05:57,280
usability whatever but i want to do

113
00:05:56,240 --> 00:06:01,120
everything

114
00:05:57,280 --> 00:06:03,359
in user space user permission

115
00:06:01,120 --> 00:06:03,360
so

116
00:06:04,880 --> 00:06:09,600
instead of sure i have slides with them

117
00:06:08,160 --> 00:06:14,160
but i prefer to

118
00:06:09,600 --> 00:06:16,720
to provide with you with a demo

119
00:06:14,160 --> 00:06:16,720
reset

120
00:06:17,440 --> 00:06:21,840
here i have

121
00:06:25,039 --> 00:06:27,680
here i have

122
00:06:28,720 --> 00:06:35,840
a a file system image so

123
00:06:32,479 --> 00:06:35,840
i would like to do this

124
00:06:38,800 --> 00:06:44,639
because this is the natural way to

125
00:06:42,520 --> 00:06:47,039
monetization actually

126
00:06:44,639 --> 00:06:48,639
i get from the kern actually not from

127
00:06:47,039 --> 00:06:51,599
the cairn and this is a

128
00:06:48,639 --> 00:06:52,639
an error of the tool is the amount tool

129
00:06:51,599 --> 00:06:55,919
that say you're not

130
00:06:52,639 --> 00:06:59,039
root this is a an error of the tool but

131
00:06:55,919 --> 00:07:02,080
even if you try to to call the system

132
00:06:59,039 --> 00:07:05,919
call you get the error

133
00:07:02,080 --> 00:07:10,400
how can you do that you start

134
00:07:05,919 --> 00:07:10,400
a voice machine

135
00:07:13,919 --> 00:07:19,039
this window is running inside the

136
00:07:16,560 --> 00:07:19,039
machine

137
00:07:19,360 --> 00:07:25,599
again if i try

138
00:07:22,560 --> 00:07:25,599
to mount this

139
00:07:28,720 --> 00:07:35,120
i got the error but if i

140
00:07:32,800 --> 00:07:35,120
uh

141
00:07:35,840 --> 00:07:43,359
add the model to provide process

142
00:07:38,919 --> 00:07:48,159
virtualization and

143
00:07:43,360 --> 00:07:48,160
mount to this just

144
00:07:48,319 --> 00:07:57,520
saying the type of a system

145
00:07:52,639 --> 00:08:01,039
and to as i work around to the mount

146
00:07:57,520 --> 00:08:02,799
command error i have to use view amount

147
00:08:01,039 --> 00:08:03,759
which is the amount you can use view

148
00:08:02,800 --> 00:08:07,680
month to month

149
00:08:03,759 --> 00:08:11,199
everything else but it

150
00:08:07,680 --> 00:08:11,199
tries the system call

151
00:08:11,440 --> 00:08:13,840
wow

152
00:08:16,479 --> 00:08:23,520
what is nice about life okay

153
00:08:20,240 --> 00:08:23,520
the problem is that

154
00:08:24,840 --> 00:08:27,840
okay

155
00:08:28,720 --> 00:08:36,000
now i have mounted the file system but

156
00:08:32,000 --> 00:08:36,000
just for this

157
00:08:39,599 --> 00:08:42,719
okay actually this is mounted but this

158
00:08:42,320 --> 00:08:46,160
is

159
00:08:42,719 --> 00:08:48,959
another file system as you can see

160
00:08:46,160 --> 00:08:50,959
so i've mounted my file system over

161
00:08:48,959 --> 00:08:55,839
there

162
00:08:50,959 --> 00:08:55,839
this is just an example

163
00:08:57,440 --> 00:09:01,680
okay let us start another virtual

164
00:08:59,200 --> 00:09:01,680
machine

165
00:09:06,839 --> 00:09:12,160
um

166
00:09:08,080 --> 00:09:15,680
have here some comments to to be

167
00:09:12,160 --> 00:09:18,319
okay let us

168
00:09:15,680 --> 00:09:18,319
this time

169
00:09:18,880 --> 00:09:23,760
if i can pick up the command

170
00:09:24,800 --> 00:09:27,839
i add two models one is for virtual

171
00:09:27,120 --> 00:09:31,440
devices

172
00:09:27,839 --> 00:09:31,440
one is for virtual files

173
00:09:33,040 --> 00:09:39,959
and with this command i

174
00:09:36,640 --> 00:09:43,360
create a virto device named

175
00:09:39,959 --> 00:09:48,079
devramdesk which is ramdesk

176
00:09:43,360 --> 00:09:53,040
100 megabit megabyte large

177
00:09:48,080 --> 00:09:56,959
so as a user i can create

178
00:09:53,040 --> 00:09:56,959
a file system on the run disk

179
00:09:57,279 --> 00:10:08,240
then i can mount the file system

180
00:10:05,040 --> 00:10:09,439
and now on the dash mount i have the new

181
00:10:08,240 --> 00:10:13,120
first system which is

182
00:10:09,440 --> 00:10:16,320
into the the ram disk i

183
00:10:13,120 --> 00:10:20,640
wanna point out that i'm using

184
00:10:16,320 --> 00:10:23,519
the comments that i'd use as a

185
00:10:20,640 --> 00:10:26,000
ordinary system administrator outside

186
00:10:23,519 --> 00:10:28,480
the the virtual machine so

187
00:10:26,000 --> 00:10:29,279
uh one of the goal of the process is to

188
00:10:28,480 --> 00:10:33,440
use

189
00:10:29,279 --> 00:10:37,279
the natural comments to do what you need

190
00:10:33,440 --> 00:10:37,279
let us go further

191
00:10:40,560 --> 00:10:47,760
this is a this is a common problem

192
00:10:43,760 --> 00:10:51,120
i had

193
00:10:47,760 --> 00:10:55,279
i always forget the comments to

194
00:10:51,120 --> 00:10:57,680
uh loop mount partition of

195
00:10:55,279 --> 00:10:59,920
file system image for example if you

196
00:10:57,680 --> 00:11:00,959
have a raspberry pi the image has two

197
00:10:59,920 --> 00:11:02,560
partitions

198
00:11:00,959 --> 00:11:04,239
if you want to mount one partition to

199
00:11:02,560 --> 00:11:07,279
change one file

200
00:11:04,240 --> 00:11:08,560
it is a mess and second you need to be

201
00:11:07,279 --> 00:11:10,480
root

202
00:11:08,560 --> 00:11:11,760
now i'm showing you how to access the

203
00:11:10,480 --> 00:11:15,120
rotation of a

204
00:11:11,760 --> 00:11:19,680
of a raspberry pi image

205
00:11:15,120 --> 00:11:19,680
as a user so

206
00:11:20,160 --> 00:11:26,480
again i

207
00:11:23,279 --> 00:11:26,480
add the two models

208
00:11:26,720 --> 00:11:32,079
now i use another another

209
00:11:29,760 --> 00:11:34,079
virtual device model which which is

210
00:11:32,079 --> 00:11:36,800
pertix

211
00:11:34,079 --> 00:11:38,239
and you can see that an image i've just

212
00:11:36,800 --> 00:11:41,040
downloaded from a

213
00:11:38,240 --> 00:11:41,040
raspberry pi

214
00:11:41,360 --> 00:11:47,680
site and now i have

215
00:11:44,399 --> 00:11:57,200
in slash dev slash a6

216
00:11:47,680 --> 00:12:00,560
my disk so i can

217
00:11:57,200 --> 00:12:03,440
okay uh i'm not root

218
00:12:00,560 --> 00:12:03,439
so i need

219
00:12:05,200 --> 00:12:13,200
you can see the partitions okay

220
00:12:09,440 --> 00:12:16,880
and given there are s6 one x6 so

221
00:12:13,200 --> 00:12:16,880
i can mount this there too

222
00:12:17,839 --> 00:12:26,399
so i can mount

223
00:12:23,360 --> 00:12:30,240
the second partition here

224
00:12:26,399 --> 00:12:33,360
i have the root

225
00:12:30,240 --> 00:12:36,079
the the the the root partition of

226
00:12:33,360 --> 00:12:36,560
the raspberry pi i could change the the

227
00:12:36,079 --> 00:12:39,839
file

228
00:12:36,560 --> 00:12:39,839
do whatever i want

229
00:12:39,920 --> 00:12:45,519
or let's let's continue

230
00:12:47,120 --> 00:12:56,240
okay now let us play with another

231
00:12:52,240 --> 00:12:56,240
toy networking

232
00:12:58,160 --> 00:13:03,439
the mother for networking is vionette

233
00:13:03,760 --> 00:13:08,480
now what let me try

234
00:13:11,920 --> 00:13:14,639
okay

235
00:13:15,200 --> 00:13:22,320
uh let us try this experiment this is

236
00:13:18,880 --> 00:13:26,240
quite a new development uh it's

237
00:13:22,320 --> 00:13:26,240
already unstable but i wanna

238
00:13:27,279 --> 00:13:31,839
there's a development the development uh

239
00:13:32,160 --> 00:13:35,839
i have

240
00:13:36,240 --> 00:13:44,160
created together with the nera camera

241
00:13:40,320 --> 00:13:47,519
this is a pikachp

242
00:13:44,160 --> 00:13:51,120
as i use a mod stack

243
00:13:47,519 --> 00:13:54,079
in voice and

244
00:13:51,120 --> 00:13:55,839
given that the pika tcp is connected to

245
00:13:54,079 --> 00:13:59,439
vdd networking

246
00:13:55,839 --> 00:14:03,040
i've used at the at the

247
00:13:59,440 --> 00:14:05,519
networking interface slip which is

248
00:14:03,040 --> 00:14:06,719
the tool used by virtual machines to

249
00:14:05,519 --> 00:14:09,839
provide the

250
00:14:06,720 --> 00:14:12,160
user user-provided networks

251
00:14:09,839 --> 00:14:12,160
now

252
00:14:14,959 --> 00:14:21,518
we provide the uh in the u.s

253
00:14:19,040 --> 00:14:22,880
different stacks at the same time in

254
00:14:21,519 --> 00:14:24,720
order to change the to

255
00:14:22,880 --> 00:14:26,079
the side and you can see i've mounted

256
00:14:24,720 --> 00:14:28,959
the stack in devnet

257
00:14:26,079 --> 00:14:30,079
peacocks in order to say i want to use

258
00:14:28,959 --> 00:14:33,199
that

259
00:14:30,079 --> 00:14:37,359
network because now i have my

260
00:14:33,199 --> 00:14:40,639
here i have my interfaces

261
00:14:37,360 --> 00:14:40,639
but if i say

262
00:14:42,320 --> 00:14:50,800
we stack i open a basher

263
00:14:47,519 --> 00:14:55,199
and in this batch i have

264
00:14:50,800 --> 00:14:58,719
the pctcp interfaces

265
00:14:55,199 --> 00:15:02,399
uh it is a choice pico tcp

266
00:14:58,720 --> 00:15:04,240
is as harsh uh it is

267
00:15:02,399 --> 00:15:06,160
so it's quite different from standard

268
00:15:04,240 --> 00:15:06,800
networking because usually you have the

269
00:15:06,160 --> 00:15:09,519
name

270
00:15:06,800 --> 00:15:10,160
the number of the interfaces there one

271
00:15:09,519 --> 00:15:14,959
we have

272
00:15:10,160 --> 00:15:18,560
but now i can

273
00:15:14,959 --> 00:15:22,319
sell configure the network

274
00:15:18,560 --> 00:15:26,560
using a standard dhcp

275
00:15:22,320 --> 00:15:31,440
client okay

276
00:15:26,560 --> 00:15:31,439
now i've got the address and again

277
00:15:32,079 --> 00:15:38,160
this is my how my my my machine my

278
00:15:35,199 --> 00:15:39,439
my computer in bologna i've used the

279
00:15:38,160 --> 00:15:44,480
stack in the bathroom

280
00:15:39,440 --> 00:15:44,480
in the in in the virtual environment

281
00:15:44,959 --> 00:15:48,399
okay another

282
00:15:49,600 --> 00:15:59,920
final final demo

283
00:15:55,600 --> 00:15:59,920
this is the current time

284
00:16:01,920 --> 00:16:06,160
now i can start a voice

285
00:16:06,839 --> 00:16:09,839
machine

286
00:16:11,199 --> 00:16:20,160
and now i start another submarine

287
00:16:15,440 --> 00:16:25,360
mission and this time

288
00:16:20,160 --> 00:16:25,360
and i i start another x clock

289
00:16:27,120 --> 00:16:37,839
now i mount

290
00:16:30,800 --> 00:16:37,839
let me move this clock which is

291
00:16:40,480 --> 00:16:43,839
now i mount uh

292
00:16:45,199 --> 00:16:52,479
the the model voomish time in mountain

293
00:16:48,480 --> 00:16:55,839
and it is like a approach of a system

294
00:16:52,480 --> 00:16:58,959
so mount contains some

295
00:16:55,839 --> 00:17:02,800
fake files and i can use this

296
00:16:58,959 --> 00:17:04,958
to change the view of the process

297
00:17:02,800 --> 00:17:08,879
regarding time for example

298
00:17:04,959 --> 00:17:12,720
if i put two in

299
00:17:08,880 --> 00:17:13,919
mount frequency and you could as you can

300
00:17:12,720 --> 00:17:18,079
see

301
00:17:13,919 --> 00:17:20,799
we have relativistic machines

302
00:17:18,079 --> 00:17:23,198
the time in the virtual machine runs

303
00:17:20,799 --> 00:17:28,160
twice as fast

304
00:17:23,199 --> 00:17:31,840
as the time in in the normal life

305
00:17:28,160 --> 00:17:36,160
okay so as you can see

306
00:17:31,840 --> 00:17:39,039
this the idea of u.s is providing means

307
00:17:36,160 --> 00:17:40,400
to provide the processes with the view

308
00:17:39,039 --> 00:17:43,600
we need

309
00:17:40,400 --> 00:17:47,280
to solve problems so we have started

310
00:17:43,600 --> 00:17:50,320
from the solution will start from

311
00:17:47,280 --> 00:18:01,840
what is useful

312
00:17:50,320 --> 00:18:05,120
now i can show you

313
00:18:01,840 --> 00:18:08,159
okay yeah all the demos

314
00:18:05,120 --> 00:18:10,959
i've done now are

315
00:18:08,160 --> 00:18:12,799
in the slides so you can test the by

316
00:18:10,960 --> 00:18:18,080
yourself if you like

317
00:18:12,799 --> 00:18:18,080
all the demos after the the talk

318
00:18:18,240 --> 00:18:22,160
this is the structure of the city of

319
00:18:21,280 --> 00:18:25,600
ombu

320
00:18:22,160 --> 00:18:28,799
which is an implementation of u.s

321
00:18:25,600 --> 00:18:31,280
we can we can provide further

322
00:18:28,799 --> 00:18:32,240
implementation in the future there are

323
00:18:31,280 --> 00:18:36,480
processes

324
00:18:32,240 --> 00:18:39,600
in in the user space and

325
00:18:36,480 --> 00:18:41,200
there is a we use system called

326
00:18:39,600 --> 00:18:44,719
interposation

327
00:18:41,200 --> 00:18:47,039
to decide this to decide which

328
00:18:44,720 --> 00:18:48,000
system calls but we must be forwarded to

329
00:18:47,039 --> 00:18:52,480
the kernel

330
00:18:48,000 --> 00:18:52,480
in case you you are you are

331
00:18:54,960 --> 00:18:58,720
we are accessing part of the system

332
00:18:57,039 --> 00:19:01,760
which are real

333
00:18:58,720 --> 00:19:05,120
or the system call are

334
00:19:01,760 --> 00:19:10,559
completely implemented in

335
00:19:05,120 --> 00:19:15,520
the hypervisor code

336
00:19:10,559 --> 00:19:18,639
in order to to have them to to

337
00:19:15,520 --> 00:19:21,600
achieve the better results

338
00:19:18,640 --> 00:19:24,160
with parallelism we use a technique that

339
00:19:21,600 --> 00:19:27,520
we have named the guardian angels

340
00:19:24,160 --> 00:19:28,640
so each process running in the user

341
00:19:27,520 --> 00:19:32,559
space

342
00:19:28,640 --> 00:19:35,760
has in the hypervisor a thread

343
00:19:32,559 --> 00:19:37,360
which is providing the virtualization

344
00:19:35,760 --> 00:19:40,160
for that thread

345
00:19:37,360 --> 00:19:40,639
or process so each process in the user

346
00:19:40,160 --> 00:19:44,240
space

347
00:19:40,640 --> 00:19:47,919
has a guardian angel thread

348
00:19:44,240 --> 00:19:51,039
in the hypervisor so

349
00:19:47,919 --> 00:19:55,679
if a process runs an

350
00:19:51,039 --> 00:19:58,799
open the guardian angel

351
00:19:55,679 --> 00:20:02,240
try tries to see if the path

352
00:19:58,799 --> 00:20:05,600
is in a real on an alvertal part

353
00:20:02,240 --> 00:20:08,080
if it is the real part it simply says

354
00:20:05,600 --> 00:20:11,360
the process

355
00:20:08,080 --> 00:20:16,320
forward the the call to the colonel

356
00:20:11,360 --> 00:20:18,959
otherwise the guardian angel

357
00:20:16,320 --> 00:20:21,520
and them the choice the mother choice is

358
00:20:18,960 --> 00:20:24,960
for the choice of virtual real and

359
00:20:21,520 --> 00:20:27,400
in case it's virtual it returns

360
00:20:24,960 --> 00:20:29,600
the module which is responsible for the

361
00:20:27,400 --> 00:20:33,200
virtualization

362
00:20:29,600 --> 00:20:36,399
okay so

363
00:20:33,200 --> 00:20:36,880
the the system caller there are wrappers

364
00:20:36,400 --> 00:20:40,000
that

365
00:20:36,880 --> 00:20:42,159
get from the user memory all the

366
00:20:40,000 --> 00:20:43,679
parameters what is needed to perform the

367
00:20:42,159 --> 00:20:47,360
virtualization

368
00:20:43,679 --> 00:20:49,840
and the system call is forwarded to

369
00:20:47,360 --> 00:20:58,158
the the module few we have seen in the

370
00:20:49,840 --> 00:21:01,280
in the demonstration

371
00:20:58,159 --> 00:21:03,280
of file system networking or devices or

372
00:21:01,280 --> 00:21:07,678
whatsoever

373
00:21:03,280 --> 00:21:10,559
really perform the the actual action to

374
00:21:07,679 --> 00:21:10,559
have the result

375
00:21:10,720 --> 00:21:17,360
uh i have two points

376
00:21:14,320 --> 00:21:20,639
to to to note

377
00:21:17,360 --> 00:21:20,639
now one is

378
00:21:20,720 --> 00:21:24,559
i have in example i create i have

379
00:21:23,919 --> 00:21:28,000
created

380
00:21:24,559 --> 00:21:29,280
a virtual device and it's inside the

381
00:21:28,000 --> 00:21:32,559
virtual device server

382
00:21:29,280 --> 00:21:34,720
face system so this was a nested

383
00:21:32,559 --> 00:21:38,960
visualization

384
00:21:34,720 --> 00:21:42,080
so try to think

385
00:21:38,960 --> 00:21:43,280
that we open a file in the vertify

386
00:21:42,080 --> 00:21:46,960
system

387
00:21:43,280 --> 00:21:50,000
that call

388
00:21:46,960 --> 00:21:50,960
is for water to refuse for the

389
00:21:50,000 --> 00:21:53,280
virtualization of

390
00:21:50,960 --> 00:21:56,559
the file system how can we achieve the

391
00:21:53,280 --> 00:21:59,918
virtualization of device on this

392
00:21:56,559 --> 00:22:03,360
the the hypervisor uses

393
00:21:59,919 --> 00:22:08,240
a self-virtualization

394
00:22:03,360 --> 00:22:11,840
method pure lipsey pure lipsy

395
00:22:08,240 --> 00:22:15,840
is a overlay

396
00:22:11,840 --> 00:22:20,720
on libsy that is able to

397
00:22:15,840 --> 00:22:23,918
uh grab to catch all the system calls

398
00:22:20,720 --> 00:22:27,039
generated by the process itself

399
00:22:23,919 --> 00:22:30,960
so even the the

400
00:22:27,039 --> 00:22:34,879
uh read or write from refuse

401
00:22:30,960 --> 00:22:37,600
is returned to the choice function

402
00:22:34,880 --> 00:22:39,760
and if it sees that there is a further

403
00:22:37,600 --> 00:22:43,439
visualization in place

404
00:22:39,760 --> 00:22:46,720
it calls the in this case the device

405
00:22:43,440 --> 00:22:49,280
virtualizer and the

406
00:22:46,720 --> 00:22:52,799
for example from the ram desk and it

407
00:22:49,280 --> 00:22:52,799
provides the correct answer

408
00:22:52,960 --> 00:23:01,039
let me point out that the interface

409
00:22:57,760 --> 00:23:04,240
to the modules is

410
00:23:01,039 --> 00:23:06,000
clean simple let me see kiss keep it

411
00:23:04,240 --> 00:23:09,280
simple and stupid

412
00:23:06,000 --> 00:23:12,799
the models receive

413
00:23:09,280 --> 00:23:16,879
just the system calls so

414
00:23:12,799 --> 00:23:20,639
if there is a red here read the

415
00:23:16,880 --> 00:23:23,360
file descriptor buffer length

416
00:23:20,640 --> 00:23:24,480
over there the model received a rave

417
00:23:23,360 --> 00:23:28,240
read the

418
00:23:24,480 --> 00:23:32,960
file descriptor buffer length

419
00:23:28,240 --> 00:23:37,840
okay so a module

420
00:23:32,960 --> 00:23:37,840
uh is simply

421
00:23:39,919 --> 00:23:47,279
created by registering the service

422
00:23:44,080 --> 00:23:50,720
to the hash table so

423
00:23:47,279 --> 00:23:53,279
one mother can register i can

424
00:23:50,720 --> 00:23:55,679
i am responsible for this subtree of the

425
00:23:53,279 --> 00:23:58,799
file system or i am responsible

426
00:23:55,679 --> 00:24:00,159
for that file or i am responsible for

427
00:23:58,799 --> 00:24:02,559
the data's family

428
00:24:00,159 --> 00:24:04,960
i am responsible for that or the other

429
00:24:02,559 --> 00:24:07,600
system call

430
00:24:04,960 --> 00:24:11,360
and then it has to provide the

431
00:24:07,600 --> 00:24:11,360
implementation of the system call

432
00:24:11,679 --> 00:24:19,520
if somebody

433
00:24:15,200 --> 00:24:22,400
wanna access that kind of file

434
00:24:19,520 --> 00:24:23,440
so there is reader what must be the

435
00:24:22,400 --> 00:24:26,480
answer

436
00:24:23,440 --> 00:24:30,240
that's all okay

437
00:24:26,480 --> 00:24:34,400
i have no time to show the code

438
00:24:30,240 --> 00:24:34,400
but everything is available

439
00:24:34,960 --> 00:24:37,360
we have

440
00:24:39,440 --> 00:24:44,080
we have a wiki site we are redesigning

441
00:24:43,120 --> 00:24:47,840
the working site

442
00:24:44,080 --> 00:24:47,840
the most important

443
00:24:52,320 --> 00:25:00,000
here is the set of repositories

444
00:24:56,000 --> 00:25:04,000
and there is actually

445
00:25:00,000 --> 00:25:07,840
an infrastructure for a tutorial

446
00:25:04,000 --> 00:25:07,840
we provide a

447
00:25:10,000 --> 00:25:17,200
we provided this image and scripts

448
00:25:14,159 --> 00:25:20,320
to make it uh easy for

449
00:25:17,200 --> 00:25:22,400
whoever wanna try the the tools

450
00:25:20,320 --> 00:25:24,158
to have the the whole infrastructure

451
00:25:22,400 --> 00:25:26,960
ready to

452
00:25:24,159 --> 00:25:28,559
uh perform the experiments i've done

453
00:25:26,960 --> 00:25:33,120
five minutes ago

454
00:25:28,559 --> 00:25:36,559
so feel free and please

455
00:25:33,120 --> 00:25:39,918
download the image try the tools

456
00:25:36,559 --> 00:25:40,960
and if you if you like if you want to

457
00:25:39,919 --> 00:25:43,120
participate

458
00:25:40,960 --> 00:25:44,480
their project is open to all

459
00:25:43,120 --> 00:25:46,409
contributions

460
00:25:44,480 --> 00:25:51,919
thank you

461
00:25:46,410 --> 00:25:54,720
[Applause]

462
00:25:51,919 --> 00:25:57,840
so we have time for maybe one or maybe

463
00:25:54,720 --> 00:25:57,840
two quick questions

464
00:25:58,640 --> 00:26:02,159
uh how do you compare a viewer with a g

465
00:26:01,279 --> 00:26:04,799
riser or

466
00:26:02,159 --> 00:26:05,919
a user model linux sorry how do you

467
00:26:04,799 --> 00:26:08,000
compare

468
00:26:05,919 --> 00:26:10,320
your voice with urgency here's our

469
00:26:08,000 --> 00:26:14,960
estimate linux uh

470
00:26:10,320 --> 00:26:17,840
i compare user mod linux to voice or omu

471
00:26:14,960 --> 00:26:19,200
user mod linux creates a complete

472
00:26:17,840 --> 00:26:22,639
virtual machine

473
00:26:19,200 --> 00:26:26,000
so it boots an entire kernel we

474
00:26:22,640 --> 00:26:30,799
don't put anything we just

475
00:26:26,000 --> 00:26:32,880
uh put the system in a condition to

476
00:26:30,799 --> 00:26:33,918
grab the system call and divert the

477
00:26:32,880 --> 00:26:37,440
execution of the

478
00:26:33,919 --> 00:26:41,919
system call to modules if required

479
00:26:37,440 --> 00:26:41,919
so two points

480
00:26:48,320 --> 00:26:54,480
[Music]

481
00:26:50,840 --> 00:26:57,678
okay we use bfs

482
00:26:54,480 --> 00:27:01,279
to accelerate

483
00:26:57,679 --> 00:27:02,799
the the the grabbing the resistance call

484
00:27:01,279 --> 00:27:07,840
catching

485
00:27:02,799 --> 00:27:07,840
now we can do just the

486
00:27:08,159 --> 00:27:12,080
avoiding the second caller each time a

487
00:27:10,880 --> 00:27:15,520
assistant call

488
00:27:12,080 --> 00:27:18,240
is uh is grabbed by

489
00:27:15,520 --> 00:27:20,480
petraeus you receive two calls one

490
00:27:18,240 --> 00:27:24,559
before and one after

491
00:27:20,480 --> 00:27:27,679
so using bpf now we can

492
00:27:24,559 --> 00:27:29,600
avoid the second call whether the the

493
00:27:27,679 --> 00:27:30,880
system call is completely real or

494
00:27:29,600 --> 00:27:33,039
completely

495
00:27:30,880 --> 00:27:34,799
or completely virtual we have a system

496
00:27:33,039 --> 00:27:37,840
concert at the same time

497
00:27:34,799 --> 00:27:39,279
real and we also for example open we

498
00:27:37,840 --> 00:27:42,240
have a

499
00:27:39,279 --> 00:27:43,440
a virtual open but at the same time we

500
00:27:42,240 --> 00:27:48,399
force the process

501
00:27:43,440 --> 00:27:53,200
to make a real open because we have to

502
00:27:48,399 --> 00:27:58,479
to allocate the file descriptor

503
00:27:53,200 --> 00:27:58,480
okay we would like to

504
00:28:00,080 --> 00:28:07,199
to uh offload

505
00:28:03,760 --> 00:28:08,240
many parts of the of the decision

506
00:28:07,200 --> 00:28:11,679
process

507
00:28:08,240 --> 00:28:14,480
in the kernel but we would need the ebpf

508
00:28:11,679 --> 00:28:15,200
with the comp which is a long discussion

509
00:28:14,480 --> 00:28:18,799
in the

510
00:28:15,200 --> 00:28:22,000
clear the main list so if

511
00:28:18,799 --> 00:28:23,600
you're interested and you like the

512
00:28:22,000 --> 00:28:26,640
approach to help us to

513
00:28:23,600 --> 00:28:29,039
to convince the linux kernel main

514
00:28:26,640 --> 00:28:32,480
english to add the ebpf

515
00:28:29,039 --> 00:28:32,480
for the sec comp uh

516
00:28:32,559 --> 00:28:35,840
comp system call

517
00:28:36,320 --> 00:28:40,000
okay i think we're at the end of this

518
00:28:38,559 --> 00:28:41,600
death room today

519
00:28:40,000 --> 00:28:43,600
uh thank you for everyone who

520
00:28:41,600 --> 00:28:56,000
participated thanks

521
00:28:43,600 --> 00:28:56,000
thank you

