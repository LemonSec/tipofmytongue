1
00:00:08,000 --> 00:00:17,119
all right well

2
00:00:08,639 --> 00:00:20,320
thank you um let me close the door

3
00:00:17,119 --> 00:00:21,920
so um i thought this was really

4
00:00:20,320 --> 00:00:22,880
interesting today because this is not my

5
00:00:21,920 --> 00:00:26,240
usual community

6
00:00:22,880 --> 00:00:27,680
uh to to speak to um and i might not be

7
00:00:26,240 --> 00:00:28,000
the usual speaker that you would listen

8
00:00:27,680 --> 00:00:31,039
to

9
00:00:28,000 --> 00:00:31,840
so i wanted to put what we do in the

10
00:00:31,039 --> 00:00:34,320
software

11
00:00:31,840 --> 00:00:36,960
a little bit into context of the topic

12
00:00:34,320 --> 00:00:38,480
of what's been talked about here so

13
00:00:36,960 --> 00:00:40,640
in the grand scheme of things when you

14
00:00:38,480 --> 00:00:41,760
build stuff today um that's not a

15
00:00:40,640 --> 00:00:45,280
one-off

16
00:00:41,760 --> 00:00:47,039
then you start with an idea you put it

17
00:00:45,280 --> 00:00:49,520
in some cad

18
00:00:47,039 --> 00:00:51,360
geometry for example and then you

19
00:00:49,520 --> 00:00:53,280
somehow want to simulate the behavior of

20
00:00:51,360 --> 00:00:55,199
this so if you think about this in terms

21
00:00:53,280 --> 00:00:58,399
of let's say a bridge or a fridge

22
00:00:55,199 --> 00:00:59,120
or um or a car or any any mechanical

23
00:00:58,399 --> 00:01:02,160
device

24
00:00:59,120 --> 00:01:03,038
any um electromagnetic device any fluid

25
00:01:02,160 --> 00:01:06,000
device

26
00:01:03,039 --> 00:01:06,479
um undergoes computational simulation

27
00:01:06,000 --> 00:01:09,520
and

28
00:01:06,479 --> 00:01:11,119
um so um the talks that was one

29
00:01:09,520 --> 00:01:13,280
exception that we've had so far

30
00:01:11,119 --> 00:01:14,159
were in the cid realm in the mesh realm

31
00:01:13,280 --> 00:01:17,680
in the simula

32
00:01:14,159 --> 00:01:19,439
in in the build realm um i'm sitting in

33
00:01:17,680 --> 00:01:22,720
this simulator part

34
00:01:19,439 --> 00:01:24,720
so the simulator part is is

35
00:01:22,720 --> 00:01:27,039
trying to simulate the response of an

36
00:01:24,720 --> 00:01:29,280
object to to sort of stimulate the

37
00:01:27,040 --> 00:01:31,040
forces that we want to apply to this and

38
00:01:29,280 --> 00:01:33,600
see how it behaves and

39
00:01:31,040 --> 00:01:34,400
typically then iterate this process so

40
00:01:33,600 --> 00:01:36,399
there's

41
00:01:34,400 --> 00:01:38,000
an arc back that goes from the simulator

42
00:01:36,400 --> 00:01:40,000
and the post-processing

43
00:01:38,000 --> 00:01:41,439
back to the cad because the thing does

44
00:01:40,000 --> 00:01:43,280
not do what you want it to do

45
00:01:41,439 --> 00:01:46,000
um where it doesn't do it in an optimal

46
00:01:43,280 --> 00:01:46,880
way um so post processing typically

47
00:01:46,000 --> 00:01:49,680
would be

48
00:01:46,880 --> 00:01:51,520
to see um let's say does it does it

49
00:01:49,680 --> 00:01:54,079
satisfy the design specs

50
00:01:51,520 --> 00:01:55,119
um right does it um does it become too

51
00:01:54,079 --> 00:01:57,119
hot

52
00:01:55,119 --> 00:01:58,479
does it does it break under mechanical

53
00:01:57,119 --> 00:02:00,320
loads these sort of things so you

54
00:01:58,479 --> 00:02:02,399
evaluate sort of the response of the

55
00:02:00,320 --> 00:02:03,839
object with regard to the designs that

56
00:02:02,399 --> 00:02:07,040
you had

57
00:02:03,840 --> 00:02:07,520
so in this in the simulated realm for a

58
00:02:07,040 --> 00:02:09,679
lot of

59
00:02:07,520 --> 00:02:11,280
problems the method of choice is called

60
00:02:09,679 --> 00:02:12,720
the finite element

61
00:02:11,280 --> 00:02:14,319
method there is others finite

62
00:02:12,720 --> 00:02:15,840
differences and final bonds the finite

63
00:02:14,319 --> 00:02:17,519
elements fundamentally says you have

64
00:02:15,840 --> 00:02:19,840
your object that you want to see how it

65
00:02:17,520 --> 00:02:22,239
deforms under a force for example

66
00:02:19,840 --> 00:02:22,959
you break it into virtual very small

67
00:02:22,239 --> 00:02:25,520
chunks

68
00:02:22,959 --> 00:02:26,080
and then you write down equations that

69
00:02:25,520 --> 00:02:29,599
say well

70
00:02:26,080 --> 00:02:31,519
each one of these chunks deforms

71
00:02:29,599 --> 00:02:33,040
in this particular way in response to

72
00:02:31,519 --> 00:02:33,760
the deformations of the neighboring

73
00:02:33,040 --> 00:02:35,599
chunks

74
00:02:33,760 --> 00:02:37,760
so these these are what we call the

75
00:02:35,599 --> 00:02:41,839
elements

76
00:02:37,760 --> 00:02:44,959
so as i say the simulation is

77
00:02:41,840 --> 00:02:47,040
to simulate the physical response of the

78
00:02:44,959 --> 00:02:49,200
object to external stimuli

79
00:02:47,040 --> 00:02:51,040
and the three classical areas where

80
00:02:49,200 --> 00:02:52,160
people are doing this is of course solid

81
00:02:51,040 --> 00:02:54,480
mechanics

82
00:02:52,160 --> 00:02:57,440
so you want to know about the static

83
00:02:54,480 --> 00:03:00,480
deformation of an object to a force

84
00:02:57,440 --> 00:03:02,800
or maybe solid dynamics so that would be

85
00:03:00,480 --> 00:03:05,359
let's say the vibration properties of a

86
00:03:02,800 --> 00:03:07,280
of an object so if you're interested in

87
00:03:05,360 --> 00:03:09,120
let's say the response of a high rise to

88
00:03:07,280 --> 00:03:10,319
an earthquake or to winds then you want

89
00:03:09,120 --> 00:03:13,280
to see how it

90
00:03:10,319 --> 00:03:14,000
how it oscillates for example the second

91
00:03:13,280 --> 00:03:16,879
area is

92
00:03:14,000 --> 00:03:18,959
fluid dynamics so you want to see for

93
00:03:16,879 --> 00:03:21,200
example how does

94
00:03:18,959 --> 00:03:23,040
water go through a pipe are the

95
00:03:21,200 --> 00:03:24,579
pressures within an acceptable limit and

96
00:03:23,040 --> 00:03:25,760
so on so forth

97
00:03:24,580 --> 00:03:26,640
[Music]

98
00:03:25,760 --> 00:03:29,518
and then the third one is

99
00:03:26,640 --> 00:03:31,200
electromagnetics so if you design an

100
00:03:29,519 --> 00:03:33,040
antenna for example then you would

101
00:03:31,200 --> 00:03:35,200
simulate how the electric

102
00:03:33,040 --> 00:03:37,280
electromagnetic field emanates from the

103
00:03:35,200 --> 00:03:39,518
antenna in the exterior

104
00:03:37,280 --> 00:03:41,519
um so all three of these can be

105
00:03:39,519 --> 00:03:43,680
simulated with the finite element method

106
00:03:41,519 --> 00:03:45,440
um and so let me talk you through a

107
00:03:43,680 --> 00:03:46,879
little bit what what tools there are is

108
00:03:45,440 --> 00:03:48,560
an open source

109
00:03:46,879 --> 00:03:50,079
conference so we should talk about what

110
00:03:48,560 --> 00:03:52,640
tools there are and

111
00:03:50,080 --> 00:03:53,280
what tools there aren't so there's a lot

112
00:03:52,640 --> 00:03:55,518
of

113
00:03:53,280 --> 00:03:57,280
commercial tools in this in this area

114
00:03:55,519 --> 00:03:58,319
for all of the standard engineering

115
00:03:57,280 --> 00:04:00,799
applications so

116
00:03:58,319 --> 00:04:02,480
for solid mechanics um for fluid

117
00:04:00,799 --> 00:04:04,319
dynamics for electromagnetics there are

118
00:04:02,480 --> 00:04:06,399
codes like uh fluent neck

119
00:04:04,319 --> 00:04:07,518
five thousand abacus elves dyna and so

120
00:04:06,400 --> 00:04:08,959
on so forth

121
00:04:07,519 --> 00:04:10,640
and these are sort of the heavyweights

122
00:04:08,959 --> 00:04:13,120
in the area and

123
00:04:10,640 --> 00:04:15,040
um the sad part from the perspective of

124
00:04:13,120 --> 00:04:17,280
this conference is there is really

125
00:04:15,040 --> 00:04:19,120
not a lot of open source tools around a

126
00:04:17,279 --> 00:04:19,440
lot of the work in this area is done

127
00:04:19,120 --> 00:04:22,479
with

128
00:04:19,440 --> 00:04:25,600
uh with commercial tools and

129
00:04:22,479 --> 00:04:27,280
um so

130
00:04:25,600 --> 00:04:29,040
that's just what it is um let me talk

131
00:04:27,280 --> 00:04:30,239
you through what they what they can do

132
00:04:29,040 --> 00:04:31,680
so they're pretty good

133
00:04:30,240 --> 00:04:34,000
at the traditional engineering

134
00:04:31,680 --> 00:04:36,479
applications um they

135
00:04:34,000 --> 00:04:37,840
have different materials um they can

136
00:04:36,479 --> 00:04:39,680
simulate how

137
00:04:37,840 --> 00:04:41,599
a piece of steel a piece of plastic a

138
00:04:39,680 --> 00:04:43,759
piece of soil uh

139
00:04:41,600 --> 00:04:44,960
and reload for example and they have

140
00:04:43,759 --> 00:04:48,080
pretty good integration

141
00:04:44,960 --> 00:04:50,080
into let's say the cid tools into the

142
00:04:48,080 --> 00:04:51,919
visualization tools

143
00:04:50,080 --> 00:04:53,840
they have nice guise that make it easy

144
00:04:51,919 --> 00:04:57,120
to use them

145
00:04:53,840 --> 00:04:58,560
what they do not have is they're almost

146
00:04:57,120 --> 00:05:01,039
exclusively based on

147
00:04:58,560 --> 00:05:01,680
mathematical tools from the 1970s and

148
00:05:01,039 --> 00:05:04,320
80s

149
00:05:01,680 --> 00:05:06,560
and we know a lot better today how to do

150
00:05:04,320 --> 00:05:09,759
this and if you're really interested in

151
00:05:06,560 --> 00:05:11,039
high accuracy for low computational cost

152
00:05:09,759 --> 00:05:13,039
then the commercial tools don't

153
00:05:11,039 --> 00:05:15,919
typically provide that

154
00:05:13,039 --> 00:05:16,240
that's because they're just too slow and

155
00:05:15,919 --> 00:05:20,240
too

156
00:05:16,240 --> 00:05:22,639
inaccurate for for a lot of applications

157
00:05:20,240 --> 00:05:24,000
they also scale really poorly to

158
00:05:22,639 --> 00:05:25,759
parallel computing so

159
00:05:24,000 --> 00:05:27,840
a lot of these tools are written in

160
00:05:25,759 --> 00:05:30,000
fortran for example and they don't make

161
00:05:27,840 --> 00:05:33,198
use of your 16 cores in my laptop

162
00:05:30,000 --> 00:05:35,280
right in particular they don't make use

163
00:05:33,199 --> 00:05:35,520
of the 10 000 cores that we can have in

164
00:05:35,280 --> 00:05:36,960
a

165
00:05:35,520 --> 00:05:38,880
in the cluster today and there's

166
00:05:36,960 --> 00:05:41,039
applications that really need that

167
00:05:38,880 --> 00:05:42,479
so when you run abacus for example on a

168
00:05:41,039 --> 00:05:44,080
16 core machine

169
00:05:42,479 --> 00:05:46,080
you get maybe a speed up of six and

170
00:05:44,080 --> 00:05:47,199
eight and that's it

171
00:05:46,080 --> 00:05:48,880
doesn't matter how much bigger the

172
00:05:47,199 --> 00:05:50,160
machine is that's that's the speed up

173
00:05:48,880 --> 00:05:53,440
you're going to get as a

174
00:05:50,160 --> 00:05:55,120
as at best and then um

175
00:05:53,440 --> 00:05:56,800
a lot of the problems that we have today

176
00:05:55,120 --> 00:06:00,240
are really couple problems so

177
00:05:56,800 --> 00:06:03,600
you want to simulate um the

178
00:06:00,240 --> 00:06:04,400
response of an uh electromechanical

179
00:06:03,600 --> 00:06:06,160
device

180
00:06:04,400 --> 00:06:07,840
so let's say you have a dielectric that

181
00:06:06,160 --> 00:06:10,240
you um that you apply

182
00:06:07,840 --> 00:06:12,080
a current to or or a voltage to and you

183
00:06:10,240 --> 00:06:13,440
want to see how it deforms these sort of

184
00:06:12,080 --> 00:06:15,599
couple problems

185
00:06:13,440 --> 00:06:17,440
are not well represented in uh in

186
00:06:15,600 --> 00:06:20,560
commercial software

187
00:06:17,440 --> 00:06:23,199
so um the other world

188
00:06:20,560 --> 00:06:24,639
um is the open source world that um does

189
00:06:23,199 --> 00:06:26,240
not have these sort of big

190
00:06:24,639 --> 00:06:28,000
applications that are commercially

191
00:06:26,240 --> 00:06:29,360
available but they have there's a lot of

192
00:06:28,000 --> 00:06:31,520
tool boxes around

193
00:06:29,360 --> 00:06:33,039
and steel two the project that i

194
00:06:31,520 --> 00:06:35,198
represent is one of those

195
00:06:33,039 --> 00:06:37,199
um so there's deal two there's lip

196
00:06:35,199 --> 00:06:39,440
masters phoenix there's get dp

197
00:06:37,199 --> 00:06:41,520
there's uh free frame and and a number

198
00:06:39,440 --> 00:06:42,479
of others dl2 is probably the largest of

199
00:06:41,520 --> 00:06:45,758
these

200
00:06:42,479 --> 00:06:48,400
so they are toolboxes in the same way as

201
00:06:45,759 --> 00:06:49,919
matlab is for example so matlab right is

202
00:06:48,400 --> 00:06:51,679
it doesn't doesn't tell you

203
00:06:49,919 --> 00:06:53,599
exactly what you can solve with it it

204
00:06:51,680 --> 00:06:55,199
just offers you a lot of different data

205
00:06:53,599 --> 00:06:56,800
structures and algorithms that work on

206
00:06:55,199 --> 00:06:58,240
this and how you plug this together for

207
00:06:56,800 --> 00:07:00,479
your own application

208
00:06:58,240 --> 00:07:02,000
that's up to you and that's how these

209
00:07:00,479 --> 00:07:04,159
libraries work they really

210
00:07:02,000 --> 00:07:05,680
just tool boxes for basically every

211
00:07:04,160 --> 00:07:07,039
finite element related thing that you

212
00:07:05,680 --> 00:07:09,599
can think of

213
00:07:07,039 --> 00:07:10,159
so what makes them really useful is that

214
00:07:09,599 --> 00:07:12,400
they're you

215
00:07:10,160 --> 00:07:14,319
that they're used in methods development

216
00:07:12,400 --> 00:07:16,000
if you're a numeric analyst for example

217
00:07:14,319 --> 00:07:19,199
you have a new idea that you want to try

218
00:07:16,000 --> 00:07:21,280
out these are the tools to do it and if

219
00:07:19,199 --> 00:07:22,800
you have a non-standard problem so if

220
00:07:21,280 --> 00:07:24,318
you do want to couple let's say

221
00:07:22,800 --> 00:07:27,440
electromechanics to

222
00:07:24,319 --> 00:07:29,599
solids or radiation to

223
00:07:27,440 --> 00:07:31,039
fluids then these are the tools with

224
00:07:29,599 --> 00:07:33,039
which you would build this

225
00:07:31,039 --> 00:07:35,120
um and i'm going to show you a few of

226
00:07:33,039 --> 00:07:35,759
the applications that people have built

227
00:07:35,120 --> 00:07:38,960
on this

228
00:07:35,759 --> 00:07:41,039
um so the big libraries that are

229
00:07:38,960 --> 00:07:42,960
in this field they're high quality

230
00:07:41,039 --> 00:07:44,000
they've typically been developed for 20

231
00:07:42,960 --> 00:07:45,520
years

232
00:07:44,000 --> 00:07:48,080
but people who really know what they're

233
00:07:45,520 --> 00:07:50,000
doing they have a million lines of code

234
00:07:48,080 --> 00:07:53,359
or more

235
00:07:50,000 --> 00:07:56,080
they are tested many times per day on

236
00:07:53,360 --> 00:07:57,120
in our case we have 12 000 tests that we

237
00:07:56,080 --> 00:08:00,318
that we run

238
00:07:57,120 --> 00:08:00,639
multiple times a day um most of these

239
00:08:00,319 --> 00:08:02,400
run

240
00:08:00,639 --> 00:08:05,039
for every pull request if you want to

241
00:08:02,400 --> 00:08:08,239
change a comma we run 12 000 tests on it

242
00:08:05,039 --> 00:08:10,560
um so so it's really high quality

243
00:08:08,240 --> 00:08:12,240
use modern mathematical methods and some

244
00:08:10,560 --> 00:08:14,240
of these scaled very well to parallel

245
00:08:12,240 --> 00:08:15,599
computing so our software for example

246
00:08:14,240 --> 00:08:18,240
has run in up to 300

247
00:08:15,599 --> 00:08:19,440
000 cores and scales almost linearly up

248
00:08:18,240 --> 00:08:21,360
to this size so

249
00:08:19,440 --> 00:08:22,879
so really interesting things that you

250
00:08:21,360 --> 00:08:25,039
can do with this that you couldn't do

251
00:08:22,879 --> 00:08:26,560
with commercial tools

252
00:08:25,039 --> 00:08:27,919
at the same time they're not a

253
00:08:26,560 --> 00:08:29,599
particular code for a particular

254
00:08:27,919 --> 00:08:30,318
application so they don't typically have

255
00:08:29,599 --> 00:08:33,200
guise

256
00:08:30,319 --> 00:08:35,200
um and they only interface with the

257
00:08:33,200 --> 00:08:37,519
upstream things so let's say

258
00:08:35,200 --> 00:08:39,599
the the geometry generation and the mesh

259
00:08:37,519 --> 00:08:40,320
through interfaces to other software and

260
00:08:39,599 --> 00:08:42,159
the same

261
00:08:40,320 --> 00:08:44,320
is the case for downstream so i don't

262
00:08:42,159 --> 00:08:46,240
have good pictures that are generated in

263
00:08:44,320 --> 00:08:47,200
my software the pictures that i'm going

264
00:08:46,240 --> 00:08:48,720
to show you

265
00:08:47,200 --> 00:08:49,920
are all written in a particular file

266
00:08:48,720 --> 00:08:52,399
format than a visualized by

267
00:08:49,920 --> 00:08:54,959
peer-reviewed visit for example

268
00:08:52,399 --> 00:08:55,600
but so this is sort of the realm in

269
00:08:54,959 --> 00:08:58,719
which

270
00:08:55,600 --> 00:09:01,360
this kind of software lives so

271
00:08:58,720 --> 00:09:02,240
in the case of dl2 um so it's open

272
00:09:01,360 --> 00:09:04,640
source so we

273
00:09:02,240 --> 00:09:06,399
never really know how many users we have

274
00:09:04,640 --> 00:09:07,360
somewhere in the realm of hundreds to

275
00:09:06,399 --> 00:09:09,760
thousands

276
00:09:07,360 --> 00:09:11,279
we know of about 1400 scientific

277
00:09:09,760 --> 00:09:12,240
publications that have been published

278
00:09:11,279 --> 00:09:13,920
with this

279
00:09:12,240 --> 00:09:15,839
it's probably a substantial

280
00:09:13,920 --> 00:09:17,839
underestimate

281
00:09:15,839 --> 00:09:19,920
we use of maybe 10 or 20 commercial

282
00:09:17,839 --> 00:09:21,680
projects that use it and integrate it

283
00:09:19,920 --> 00:09:23,519
that's probably also a substantial

284
00:09:21,680 --> 00:09:26,160
underestimate

285
00:09:23,519 --> 00:09:27,839
it's almost one and a half million lines

286
00:09:26,160 --> 00:09:29,600
of c plus plus

287
00:09:27,839 --> 00:09:31,440
it's a community of 10 principal

288
00:09:29,600 --> 00:09:33,760
developers and every year for each

289
00:09:31,440 --> 00:09:35,440
release we have between 30 and 50 people

290
00:09:33,760 --> 00:09:36,080
who contribute so there's a sizable

291
00:09:35,440 --> 00:09:40,399
community

292
00:09:36,080 --> 00:09:43,440
around it that that works on this

293
00:09:40,399 --> 00:09:45,440
we came to realize many years ago that

294
00:09:43,440 --> 00:09:46,480
the thing that makes it usable is the

295
00:09:45,440 --> 00:09:48,399
documentation

296
00:09:46,480 --> 00:09:49,600
right you have to teach people how to

297
00:09:48,399 --> 00:09:52,000
use this

298
00:09:49,600 --> 00:09:54,000
and it's not so easy because there's no

299
00:09:52,000 --> 00:09:55,040
gui right it's like matlab where you

300
00:09:54,000 --> 00:09:56,959
really have to learn

301
00:09:55,040 --> 00:09:58,480
what are the functions that you can use

302
00:09:56,959 --> 00:09:59,359
and if you know what function you want

303
00:09:58,480 --> 00:10:02,079
to use

304
00:09:59,360 --> 00:10:03,200
how do you actually call it right so we

305
00:10:02,079 --> 00:10:06,000
have

306
00:10:03,200 --> 00:10:08,480
many thousands of pages of html

307
00:10:06,000 --> 00:10:09,839
documentation we have about 70 tutorial

308
00:10:08,480 --> 00:10:11,839
programs that show how

309
00:10:09,839 --> 00:10:14,000
not just use one function but how they

310
00:10:11,839 --> 00:10:15,760
all work together

311
00:10:14,000 --> 00:10:17,040
we have video lectures we run short

312
00:10:15,760 --> 00:10:18,959
courses

313
00:10:17,040 --> 00:10:20,399
so that's our way of building a

314
00:10:18,959 --> 00:10:23,599
community of people who

315
00:10:20,399 --> 00:10:25,920
who know how to use this

316
00:10:23,600 --> 00:10:28,160
all right um so just to give you a few

317
00:10:25,920 --> 00:10:31,120
of the applications that people

318
00:10:28,160 --> 00:10:32,480
have done there are many many more but

319
00:10:31,120 --> 00:10:33,680
i'm just going to show you those that

320
00:10:32,480 --> 00:10:36,800
might be of interest to

321
00:10:33,680 --> 00:10:40,319
um to hear for three minutes so

322
00:10:36,800 --> 00:10:43,599
um as an example if you want to simulate

323
00:10:40,320 --> 00:10:46,480
um people who have an aneurysm

324
00:10:43,600 --> 00:10:48,240
so let's say a bulging out aortic vessel

325
00:10:46,480 --> 00:10:50,399
for example

326
00:10:48,240 --> 00:10:52,240
you would like to simulate how does

327
00:10:50,399 --> 00:10:55,600
blood flow

328
00:10:52,240 --> 00:10:57,360
into or through the aorta in this big

329
00:10:55,600 --> 00:10:59,920
sac that shouldn't be there and then

330
00:10:57,360 --> 00:11:03,360
back out here again so you see that

331
00:10:59,920 --> 00:11:05,839
this is all terpene flow in here

332
00:11:03,360 --> 00:11:07,519
vessels are not static pipes they expand

333
00:11:05,839 --> 00:11:08,079
so you have a problem that's coupled

334
00:11:07,519 --> 00:11:11,200
between

335
00:11:08,079 --> 00:11:13,599
fluid and um and solid

336
00:11:11,200 --> 00:11:15,760
so the the pressure wave that comes from

337
00:11:13,600 --> 00:11:18,800
the heart for example expands the

338
00:11:15,760 --> 00:11:20,480
the wartime and so it's these sort of

339
00:11:18,800 --> 00:11:24,560
these sort of applications that are

340
00:11:20,480 --> 00:11:29,839
complicated that are built on top of dl2

341
00:11:24,560 --> 00:11:29,839
um another one is um if you

342
00:11:30,320 --> 00:11:33,839
if you want to simulate um things like

343
00:11:33,360 --> 00:11:36,880
growth

344
00:11:33,839 --> 00:11:38,560
processes um so um

345
00:11:36,880 --> 00:11:40,240
this is an application from one of my

346
00:11:38,560 --> 00:11:42,880
colleagues in michigan who

347
00:11:40,240 --> 00:11:43,519
wanted to simulate how homologous cells

348
00:11:42,880 --> 00:11:45,120
grow

349
00:11:43,519 --> 00:11:46,959
but there are many other things where

350
00:11:45,120 --> 00:11:49,680
you're growing um let's say

351
00:11:46,959 --> 00:11:50,880
on industrial scales um right so that's

352
00:11:49,680 --> 00:11:52,399
a process where

353
00:11:50,880 --> 00:11:54,000
it's not just a deformation of an

354
00:11:52,399 --> 00:11:55,600
existing solid but you have the

355
00:11:54,000 --> 00:11:57,040
interaction between the solid the

356
00:11:55,600 --> 00:11:59,440
stresses in there

357
00:11:57,040 --> 00:12:01,439
and then the deposition from from a

358
00:11:59,440 --> 00:12:03,440
solution for example of more

359
00:12:01,440 --> 00:12:05,360
more materials these are the things that

360
00:12:03,440 --> 00:12:07,279
we do pretty well

361
00:12:05,360 --> 00:12:08,399
here's an example for microscopic

362
00:12:07,279 --> 00:12:10,800
antenna

363
00:12:08,399 --> 00:12:12,079
so you have a plasmonic crystal very

364
00:12:10,800 --> 00:12:14,880
small length scales

365
00:12:12,079 --> 00:12:15,439
compared to the actual device um so you

366
00:12:14,880 --> 00:12:17,600
want to

367
00:12:15,440 --> 00:12:19,279
maybe simulate this directly or you want

368
00:12:17,600 --> 00:12:21,839
to homogenize so there's a lot of

369
00:12:19,279 --> 00:12:22,800
again multiphysics that that comes into

370
00:12:21,839 --> 00:12:24,639
play here

371
00:12:22,800 --> 00:12:26,479
um there's another one this is the

372
00:12:24,639 --> 00:12:28,399
flexor electric effect so it's the

373
00:12:26,480 --> 00:12:32,079
interaction of electric voltage

374
00:12:28,399 --> 00:12:32,079
and the mechanical deformation

375
00:12:32,160 --> 00:12:36,719
so um the point i wanted to make is that

376
00:12:34,959 --> 00:12:38,079
dl2 is none of these applications it's

377
00:12:36,720 --> 00:12:39,600
the foundation for these sort of

378
00:12:38,079 --> 00:12:41,439
applications right

379
00:12:39,600 --> 00:12:43,360
just like i said you can build all sorts

380
00:12:41,440 --> 00:12:45,200
of things on top of matlab but matlab

381
00:12:43,360 --> 00:12:48,000
has all of the functionality this is how

382
00:12:45,200 --> 00:12:50,160
dl2 provides all of the functionality

383
00:12:48,000 --> 00:12:53,120
so a typical application that people

384
00:12:50,160 --> 00:12:56,560
build is non-trivial geometries

385
00:12:53,120 --> 00:12:58,880
coupled systems of nonlinear pdes

386
00:12:56,560 --> 00:13:00,560
non-linear and linear solvers you want

387
00:12:58,880 --> 00:13:02,320
to visualize this in some

388
00:13:00,560 --> 00:13:04,000
elegant way maybe you want to

389
00:13:02,320 --> 00:13:05,120
parallelize it maybe you need to have

390
00:13:04,000 --> 00:13:06,959
some mixed or high or

391
00:13:05,120 --> 00:13:08,800
finite elements so it becomes more

392
00:13:06,959 --> 00:13:10,800
mathematical there

393
00:13:08,800 --> 00:13:12,800
so it's a lot of functionality that goes

394
00:13:10,800 --> 00:13:14,079
into each one of these applications and

395
00:13:12,800 --> 00:13:16,000
if you

396
00:13:14,079 --> 00:13:17,839
wanted to write something like this from

397
00:13:16,000 --> 00:13:19,360
scratch it would surely be on the order

398
00:13:17,839 --> 00:13:21,120
of tens of thousands to hundreds of

399
00:13:19,360 --> 00:13:23,040
thousands of lines of code

400
00:13:21,120 --> 00:13:25,040
so all of these commercial tools for

401
00:13:23,040 --> 00:13:27,199
example were written from scratch

402
00:13:25,040 --> 00:13:29,599
and they are tens of thousands to

403
00:13:27,200 --> 00:13:31,839
hundreds of thousands of lines of code

404
00:13:29,600 --> 00:13:34,399
and um one of the things that you have

405
00:13:31,839 --> 00:13:36,639
to keep in mind is that the typical

406
00:13:34,399 --> 00:13:38,720
productivity of one single programmer is

407
00:13:36,639 --> 00:13:40,160
about 20 000 lines of code if you do

408
00:13:38,720 --> 00:13:43,199
this full time

409
00:13:40,160 --> 00:13:45,360
so it would require many many many years

410
00:13:43,199 --> 00:13:48,079
to write each one of these simulators

411
00:13:45,360 --> 00:13:48,959
and the idea of these toolboxes of

412
00:13:48,079 --> 00:13:50,399
course is well

413
00:13:48,959 --> 00:13:52,239
we can give you all of the tools and

414
00:13:50,399 --> 00:13:53,040
then maybe you only have to write 500

415
00:13:52,240 --> 00:13:56,720
lines

416
00:13:53,040 --> 00:13:59,279
and it's all there um so

417
00:13:56,720 --> 00:14:01,199
what we set out 20 years ago when we

418
00:13:59,279 --> 00:14:02,480
started dl2 is that it should support

419
00:14:01,199 --> 00:14:04,959
all of these things like complex

420
00:14:02,480 --> 00:14:06,959
geometries complex computations

421
00:14:04,959 --> 00:14:08,000
be general that is independent of the

422
00:14:06,959 --> 00:14:11,119
application

423
00:14:08,000 --> 00:14:12,560
scales to very large machines and we do

424
00:14:11,120 --> 00:14:14,240
this through these building blocks so

425
00:14:12,560 --> 00:14:15,279
here are a few of the building blocks

426
00:14:14,240 --> 00:14:17,199
that we have

427
00:14:15,279 --> 00:14:19,120
so adaptive measures that means if

428
00:14:17,199 --> 00:14:19,839
something is going on here i need a very

429
00:14:19,120 --> 00:14:22,160
fine mesh

430
00:14:19,839 --> 00:14:23,920
break it into small volumes whereas if

431
00:14:22,160 --> 00:14:25,439
over here nothing is happening i can get

432
00:14:23,920 --> 00:14:28,000
away with coarse meshes and

433
00:14:25,440 --> 00:14:28,480
thereby keep the overall effort under

434
00:14:28,000 --> 00:14:30,880
under

435
00:14:28,480 --> 00:14:32,480
wrap or under under control it has

436
00:14:30,880 --> 00:14:34,160
interfaces to all of the major

437
00:14:32,480 --> 00:14:36,000
downstream graphics programs

438
00:14:34,160 --> 00:14:37,920
also to the upstream meshing programs

439
00:14:36,000 --> 00:14:40,480
for example to the geometry program so

440
00:14:37,920 --> 00:14:43,599
we interface with gmash and open cascade

441
00:14:40,480 --> 00:14:45,040
that were presented earlier here has all

442
00:14:43,600 --> 00:14:47,199
of the finite element stuff

443
00:14:45,040 --> 00:14:48,160
maybe not all that important for for you

444
00:14:47,199 --> 00:14:51,439
guys here

445
00:14:48,160 --> 00:14:53,519
um about a thousand downloads per month

446
00:14:51,440 --> 00:14:54,480
already gave you an overview of the size

447
00:14:53,519 --> 00:14:56,959
of this um

448
00:14:54,480 --> 00:14:58,800
over the 20 years about 250 people have

449
00:14:56,959 --> 00:15:00,239
contributed to it so it's a sizable

450
00:14:58,800 --> 00:15:02,160
community project

451
00:15:00,240 --> 00:15:03,680
we merge about 10 pull requests every

452
00:15:02,160 --> 00:15:05,439
day that's

453
00:15:03,680 --> 00:15:06,959
there's this this council of 10

454
00:15:05,440 --> 00:15:09,360
principal developers

455
00:15:06,959 --> 00:15:10,479
that reviews every patch mentors

456
00:15:09,360 --> 00:15:13,760
newcomers to

457
00:15:10,480 --> 00:15:16,399
become productive in this community

458
00:15:13,760 --> 00:15:17,920
and so every patch typically has a back

459
00:15:16,399 --> 00:15:19,839
and forth where we say you could do it

460
00:15:17,920 --> 00:15:20,399
easier or better or maybe more general

461
00:15:19,839 --> 00:15:22,880
if you

462
00:15:20,399 --> 00:15:25,040
did this and then we merge about 10 per

463
00:15:22,880 --> 00:15:27,600
day of these

464
00:15:25,040 --> 00:15:29,279
a number of publications so uh there's a

465
00:15:27,600 --> 00:15:32,639
nice growth over time i think

466
00:15:29,279 --> 00:15:35,839
um it's the the right direction um

467
00:15:32,639 --> 00:15:37,519
just as um as an example of what people

468
00:15:35,839 --> 00:15:38,160
have done that did this a couple years

469
00:15:37,519 --> 00:15:40,399
ago

470
00:15:38,160 --> 00:15:41,680
just in one year so there's applications

471
00:15:40,399 --> 00:15:43,440
in biomedical

472
00:15:41,680 --> 00:15:44,959
in the biomedical field there's a lot of

473
00:15:43,440 --> 00:15:47,279
applications in

474
00:15:44,959 --> 00:15:49,040
in the fluid fields some fundamental

475
00:15:47,279 --> 00:15:49,920
physics and quantum mechanics neutron

476
00:15:49,040 --> 00:15:51,759
transport

477
00:15:49,920 --> 00:15:53,040
there's my original field of numerical

478
00:15:51,759 --> 00:15:54,720
methods research

479
00:15:53,040 --> 00:15:56,560
there's a lot of people with different

480
00:15:54,720 --> 00:15:58,480
applications from the solids

481
00:15:56,560 --> 00:16:00,160
from the electronics there are some

482
00:15:58,480 --> 00:16:02,560
people who do financial modeling

483
00:16:00,160 --> 00:16:03,439
so you get the idea it's a it's a it's a

484
00:16:02,560 --> 00:16:04,800
general tool

485
00:16:03,440 --> 00:16:07,040
right it's not tailored to one

486
00:16:04,800 --> 00:16:07,599
particular purpose but you can build

487
00:16:07,040 --> 00:16:10,480
your

488
00:16:07,600 --> 00:16:12,560
your purpose-built pde solver on top of

489
00:16:10,480 --> 00:16:15,360
this

490
00:16:12,560 --> 00:16:17,359
so um i'll cut some of these slides in

491
00:16:15,360 --> 00:16:19,279
the interest of time but um

492
00:16:17,360 --> 00:16:21,040
one of the things that as a project we

493
00:16:19,279 --> 00:16:22,079
have realized and probably many of you

494
00:16:21,040 --> 00:16:24,639
have realized in your

495
00:16:22,079 --> 00:16:27,439
projects too is that software does not

496
00:16:24,639 --> 00:16:30,079
live by its technical correctness

497
00:16:27,440 --> 00:16:30,959
that they that a program or software is

498
00:16:30,079 --> 00:16:33,199
not

499
00:16:30,959 --> 00:16:34,160
usable just because it produces the

500
00:16:33,199 --> 00:16:36,000
correct output

501
00:16:34,160 --> 00:16:38,880
but that a lot of it really goes into

502
00:16:36,000 --> 00:16:41,680
recognizing that your users are people

503
00:16:38,880 --> 00:16:43,839
you have to have ways to teach them they

504
00:16:41,680 --> 00:16:45,839
have to have ways to learn by themselves

505
00:16:43,839 --> 00:16:48,560
because we don't scale we can't answer

506
00:16:45,839 --> 00:16:50,639
every question that anybody might have

507
00:16:48,560 --> 00:16:52,638
so the true factors are really just

508
00:16:50,639 --> 00:16:54,480
beyond the code it's about utility and

509
00:16:52,639 --> 00:16:56,000
quality is documentation it's about

510
00:16:54,480 --> 00:16:58,959
community

511
00:16:56,000 --> 00:16:59,279
and so things that we do for example we

512
00:16:58,959 --> 00:17:01,680
check

513
00:16:59,279 --> 00:17:05,199
every function column whatever you call

514
00:17:01,680 --> 00:17:07,198
the input arguments must be consistent

515
00:17:05,199 --> 00:17:08,880
there's extensive test suites that make

516
00:17:07,199 --> 00:17:12,079
sure that we don't introduce

517
00:17:08,880 --> 00:17:13,919
bugs we try very hard to provide

518
00:17:12,079 --> 00:17:15,359
meaningful error messages

519
00:17:13,919 --> 00:17:17,679
all of these sort of things we have a

520
00:17:15,359 --> 00:17:19,918
lot of catalog use cases where

521
00:17:17,679 --> 00:17:21,679
you can go to and say i want to solve

522
00:17:19,919 --> 00:17:23,679
this particular problem let me see if

523
00:17:21,679 --> 00:17:24,400
there's something else in the tutorials

524
00:17:23,679 --> 00:17:26,720
already that

525
00:17:24,400 --> 00:17:28,640
that does something like this and a

526
00:17:26,720 --> 00:17:30,400
typical application really just starts

527
00:17:28,640 --> 00:17:32,400
with one of the existing tutorials

528
00:17:30,400 --> 00:17:34,480
copies it and then morphs it

529
00:17:32,400 --> 00:17:36,880
and that means that typically you have

530
00:17:34,480 --> 00:17:38,720
graphical visualization from day one you

531
00:17:36,880 --> 00:17:40,240
have something that already runs that

532
00:17:38,720 --> 00:17:42,160
already works it might not be the

533
00:17:40,240 --> 00:17:43,919
application that you're looking for

534
00:17:42,160 --> 00:17:45,200
but if you have let's say a heat

535
00:17:43,919 --> 00:17:47,440
equation then

536
00:17:45,200 --> 00:17:49,120
the the jump of making the coefficient

537
00:17:47,440 --> 00:17:51,360
an isotropic or non-cons

538
00:17:49,120 --> 00:17:52,879
constant is not so large you have

539
00:17:51,360 --> 00:17:53,199
something that you can already look at

540
00:17:52,880 --> 00:17:56,160
and

541
00:17:53,200 --> 00:17:57,360
and also visually debug so there's a lot

542
00:17:56,160 --> 00:17:59,919
of these

543
00:17:57,360 --> 00:18:01,760
use cases there's a lot of documentation

544
00:17:59,919 --> 00:18:03,200
at many different levels including these

545
00:18:01,760 --> 00:18:06,640
tutorials these

546
00:18:03,200 --> 00:18:09,200
these video demonstrations there's

547
00:18:06,640 --> 00:18:10,880
about 70 of these tutorial programs

548
00:18:09,200 --> 00:18:13,120
there are some

549
00:18:10,880 --> 00:18:14,960
rather large applications that are also

550
00:18:13,120 --> 00:18:17,678
open source that you can go to and can

551
00:18:14,960 --> 00:18:19,760
look at well how did they do this

552
00:18:17,679 --> 00:18:21,200
so that's sort of the tools that are

553
00:18:19,760 --> 00:18:24,240
available

554
00:18:21,200 --> 00:18:25,919
and so maybe just as an example

555
00:18:24,240 --> 00:18:27,760
if you wanted to build something so i

556
00:18:25,919 --> 00:18:29,520
live in the academic world a lot of my

557
00:18:27,760 --> 00:18:31,039
customers are graduate students around

558
00:18:29,520 --> 00:18:33,440
the world

559
00:18:31,039 --> 00:18:35,840
so in a three-year graduate research

560
00:18:33,440 --> 00:18:38,559
project for example it's realistic for

561
00:18:35,840 --> 00:18:40,159
them to start with their physical effect

562
00:18:38,559 --> 00:18:42,000
that they want to simulate and at the

563
00:18:40,160 --> 00:18:44,080
end of three years have something

564
00:18:42,000 --> 00:18:46,320
that solves a complex multiphysics

565
00:18:44,080 --> 00:18:47,760
problem in realistic geometries higher

566
00:18:46,320 --> 00:18:51,200
order finite elements

567
00:18:47,760 --> 00:18:53,679
with a good solver does it in parallel

568
00:18:51,200 --> 00:18:55,840
outputs so that we can generate high

569
00:18:53,679 --> 00:18:57,520
quality graphics

570
00:18:55,840 --> 00:18:59,360
and because you have a good starting

571
00:18:57,520 --> 00:19:00,960
point in many of these tutorial programs

572
00:18:59,360 --> 00:19:01,760
it's something that you can show it to

573
00:19:00,960 --> 00:19:05,120
your advisor

574
00:19:01,760 --> 00:19:06,960
on day one three years

575
00:19:05,120 --> 00:19:08,320
is maybe not the project size that most

576
00:19:06,960 --> 00:19:10,320
of us think about

577
00:19:08,320 --> 00:19:12,159
but if you have more experience or if

578
00:19:10,320 --> 00:19:13,918
you're like me for example and you

579
00:19:12,160 --> 00:19:16,000
find some company that wants to work

580
00:19:13,919 --> 00:19:17,440
with you who say i have this thing that

581
00:19:16,000 --> 00:19:20,480
we don't know how to do it but i know

582
00:19:17,440 --> 00:19:22,160
you do so i have one project where

583
00:19:20,480 --> 00:19:24,000
a company wanted me to simulate the

584
00:19:22,160 --> 00:19:27,200
membranes on cell phones that

585
00:19:24,000 --> 00:19:29,679
cover the microphones for example um

586
00:19:27,200 --> 00:19:30,640
so these are it's it's a membrane that

587
00:19:29,679 --> 00:19:32,960
oscillates

588
00:19:30,640 --> 00:19:34,720
it also has some stiffness now so that

589
00:19:32,960 --> 00:19:36,720
took me about two weeks of full-time

590
00:19:34,720 --> 00:19:39,440
work to work on

591
00:19:36,720 --> 00:19:41,600
and um it's validated against their

592
00:19:39,440 --> 00:19:43,280
in-house code so it's not just some code

593
00:19:41,600 --> 00:19:44,639
that produces nice pictures but it

594
00:19:43,280 --> 00:19:47,678
actually does the right thing

595
00:19:44,640 --> 00:19:49,600
right and the code has on the order of

596
00:19:47,679 --> 00:19:51,520
800 lines that's something that i can

597
00:19:49,600 --> 00:19:52,080
write in in two weeks without too much

598
00:19:51,520 --> 00:19:54,720
trouble

599
00:19:52,080 --> 00:19:56,240
right so it's not that much work to

600
00:19:54,720 --> 00:19:58,960
produce something that is actually

601
00:19:56,240 --> 00:20:01,520
fairly complicated

602
00:19:58,960 --> 00:20:03,039
um so what that leads to these toolboxes

603
00:20:01,520 --> 00:20:04,799
is of course that we produce codes that

604
00:20:03,039 --> 00:20:07,200
are smaller that are more correct that

605
00:20:04,799 --> 00:20:09,918
are faster to write

606
00:20:07,200 --> 00:20:11,679
in the case of the numerical mathematics

607
00:20:09,919 --> 00:20:13,360
community it means that we can develop

608
00:20:11,679 --> 00:20:14,799
methods and can demonstrate that it's

609
00:20:13,360 --> 00:20:17,120
actually useful

610
00:20:14,799 --> 00:20:18,879
for real applications as opposed to just

611
00:20:17,120 --> 00:20:19,520
solve the laplace equation on the unit

612
00:20:18,880 --> 00:20:23,280
square

613
00:20:19,520 --> 00:20:25,280
okay um that's that's sort of what i

614
00:20:23,280 --> 00:20:26,399
would have had to say about this this

615
00:20:25,280 --> 00:20:29,600
library um

616
00:20:26,400 --> 00:20:31,600
so to just sum this up it's uh deal 2 is

617
00:20:29,600 --> 00:20:33,280
one of three or four widely used

618
00:20:31,600 --> 00:20:34,959
libraries that are high quality

619
00:20:33,280 --> 00:20:37,600
developed by professionals who do this

620
00:20:34,960 --> 00:20:39,360
for most of their time

621
00:20:37,600 --> 00:20:41,760
it allows building codes that are

622
00:20:39,360 --> 00:20:43,840
substantially faster and more accurate

623
00:20:41,760 --> 00:20:45,679
than what the commercial tools do

624
00:20:43,840 --> 00:20:47,439
and in particular that are applicable to

625
00:20:45,679 --> 00:20:49,840
things for which there are no commercial

626
00:20:47,440 --> 00:20:49,840
tools

627
00:20:50,500 --> 00:20:59,750
[Applause]

628
00:21:08,080 --> 00:21:12,799
yeah so to repeat this so um is deal 2 a

629
00:21:11,039 --> 00:21:14,640
software that allows us to write solvers

630
00:21:12,799 --> 00:21:16,240
from scratch yes it's exactly what it is

631
00:21:14,640 --> 00:21:18,080
so it's a collection of

632
00:21:16,240 --> 00:21:20,720
of data structures and algorithms if you

633
00:21:18,080 --> 00:21:23,120
want to so it has for example

634
00:21:20,720 --> 00:21:24,799
a mesh data structure it has a matrix

635
00:21:23,120 --> 00:21:25,840
data structure and a vector data

636
00:21:24,799 --> 00:21:27,600
structure

637
00:21:25,840 --> 00:21:29,280
and then the algorithms that you can

638
00:21:27,600 --> 00:21:31,199
operate on this is

639
00:21:29,280 --> 00:21:32,399
we find this mesh adaptively in such a

640
00:21:31,200 --> 00:21:34,080
way that

641
00:21:32,400 --> 00:21:35,520
in those places where the solution is

642
00:21:34,080 --> 00:21:37,600
oscillatory you make this

643
00:21:35,520 --> 00:21:39,120
make the mesh fine whereas in places

644
00:21:37,600 --> 00:21:40,799
where the solution is nice and smooth

645
00:21:39,120 --> 00:21:42,399
you keep it coarse so that would be an

646
00:21:40,799 --> 00:21:44,158
algorithm another algorithm would be

647
00:21:42,400 --> 00:21:47,440
softest in your system

648
00:21:44,159 --> 00:21:50,799
all of these sort of things so

649
00:21:47,440 --> 00:21:52,640
at the end of the day a um a dl2 program

650
00:21:50,799 --> 00:21:55,039
while written in c plus plus does not

651
00:21:52,640 --> 00:21:56,799
fundamentally look completely different

652
00:21:55,039 --> 00:21:58,320
from what you would write in matlab the

653
00:21:56,799 --> 00:22:00,400
syntax is different

654
00:21:58,320 --> 00:22:03,120
but i would say that half of the lines

655
00:22:00,400 --> 00:22:06,799
of code are actually calls into dl2

656
00:22:03,120 --> 00:22:07,280
um right so it's you could say we just

657
00:22:06,799 --> 00:22:10,000
use c

658
00:22:07,280 --> 00:22:11,200
plus plus as our dsl domain specific

659
00:22:10,000 --> 00:22:13,840
language right

660
00:22:11,200 --> 00:22:16,480
and then we just call into dl2 in all of

661
00:22:13,840 --> 00:22:16,480
these places

662
00:22:17,760 --> 00:22:22,080
how does it come that these proprietary

663
00:22:20,559 --> 00:22:23,120
software translators are using such

664
00:22:22,080 --> 00:22:26,480
old-fashioned

665
00:22:23,120 --> 00:22:28,639
algorithms so the question is

666
00:22:26,480 --> 00:22:30,559
how come that these proprietary software

667
00:22:28,640 --> 00:22:31,840
packages use old-fashioned technology

668
00:22:30,559 --> 00:22:34,399
well the answer is

669
00:22:31,840 --> 00:22:35,520
um a programmer can write 20 000 lines

670
00:22:34,400 --> 00:22:39,360
of code per year

671
00:22:35,520 --> 00:22:41,918
right so if your solver is 500 000 lines

672
00:22:39,360 --> 00:22:43,918
it's a very very substantial investment

673
00:22:41,919 --> 00:22:46,559
for these companies to replace this by

674
00:22:43,919 --> 00:22:49,120
something more modern

675
00:22:46,559 --> 00:22:50,879
the i i think that some of these

676
00:22:49,120 --> 00:22:53,600
companies like abacus would have the

677
00:22:50,880 --> 00:22:55,280
financial resources to do this

678
00:22:53,600 --> 00:22:57,439
there's not the market pressure to

679
00:22:55,280 --> 00:23:00,480
really or at least it was not

680
00:22:57,440 --> 00:23:03,760
in the past to go to

681
00:23:00,480 --> 00:23:06,080
substantially parallel computers

682
00:23:03,760 --> 00:23:07,520
i think companies were not willing to to

683
00:23:06,080 --> 00:23:08,000
do this they wanted to work on

684
00:23:07,520 --> 00:23:10,720
individual

685
00:23:08,000 --> 00:23:12,799
workstations and while the workstation

686
00:23:10,720 --> 00:23:15,039
had four cores maybe that was okay

687
00:23:12,799 --> 00:23:18,000
because abacus could use that but now

688
00:23:15,039 --> 00:23:20,240
workstation has 32 or 64 cores

689
00:23:18,000 --> 00:23:21,440
and people surely will become impatient

690
00:23:20,240 --> 00:23:24,559
with this

691
00:23:21,440 --> 00:23:25,600
i think the the the larger reason

692
00:23:24,559 --> 00:23:27,760
actually behind this

693
00:23:25,600 --> 00:23:29,360
is that if you replace your sovereign

694
00:23:27,760 --> 00:23:29,919
and your discretization you're going to

695
00:23:29,360 --> 00:23:31,600
produce

696
00:23:29,919 --> 00:23:32,960
answers that are slightly different than

697
00:23:31,600 --> 00:23:34,399
what the previous version of the

698
00:23:32,960 --> 00:23:36,320
software did

699
00:23:34,400 --> 00:23:37,840
and that makes people really really

700
00:23:36,320 --> 00:23:41,520
nervous um

701
00:23:37,840 --> 00:23:43,199
right and i

702
00:23:41,520 --> 00:23:45,600
my personal opinion is you would

703
00:23:43,200 --> 00:23:47,360
probably make it more accurate

704
00:23:45,600 --> 00:23:49,360
but there's all of these designs that

705
00:23:47,360 --> 00:23:50,000
some manager already signed off on and

706
00:23:49,360 --> 00:23:52,158
said that's

707
00:23:50,000 --> 00:23:53,360
you know i i saw the results the bridge

708
00:23:52,159 --> 00:23:56,400
is going to work i

709
00:23:53,360 --> 00:23:58,158
put my name on the blueprint if the next

710
00:23:56,400 --> 00:23:59,760
version of abacus gives you a different

711
00:23:58,159 --> 00:24:02,320
answer

712
00:23:59,760 --> 00:24:04,480
you might get very nervous about your

713
00:24:02,320 --> 00:24:06,480
past designs and you might not trust the

714
00:24:04,480 --> 00:24:07,440
new designs and i think that is a big

715
00:24:06,480 --> 00:24:08,960
factor why

716
00:24:07,440 --> 00:24:11,279
these companies stick with what they

717
00:24:08,960 --> 00:24:11,279
have

718
00:24:12,960 --> 00:24:19,840
yeah another thing is they sell licenses

719
00:24:16,840 --> 00:24:19,840
uh

720
00:24:21,520 --> 00:24:24,960
that's that's a good point yes the

721
00:24:23,039 --> 00:24:27,760
company sell licenses per quorum

722
00:24:24,960 --> 00:24:27,760
yes um

723
00:24:31,120 --> 00:24:35,120
if you showed a yes geometry such as an

724
00:24:33,760 --> 00:24:37,760
aneurysm

725
00:24:35,120 --> 00:24:39,760
for example how do you typically do the

726
00:24:37,760 --> 00:24:42,080
regeneration

727
00:24:39,760 --> 00:24:43,600
so how how do we do the grid generation

728
00:24:42,080 --> 00:24:45,678
for complex geometries

729
00:24:43,600 --> 00:24:46,799
so we interface with tools like gmash

730
00:24:45,679 --> 00:24:48,480
for example we can

731
00:24:46,799 --> 00:24:50,400
we can read essentially every mesh

732
00:24:48,480 --> 00:24:54,000
format you can think about

733
00:24:50,400 --> 00:24:54,960
so people if if you if your geometry is

734
00:24:54,000 --> 00:24:58,159
fixed

735
00:24:54,960 --> 00:25:00,240
you take your cad you put it into

736
00:24:58,159 --> 00:25:01,279
gmash gmash gives you a mesh we take the

737
00:25:00,240 --> 00:25:04,799
mesh

738
00:25:01,279 --> 00:25:05,440
and we solve on it if the geometry

739
00:25:04,799 --> 00:25:09,440
changes

740
00:25:05,440 --> 00:25:11,600
in response to to the solution so let's

741
00:25:09,440 --> 00:25:12,720
say if you have a pulsing heart for

742
00:25:11,600 --> 00:25:15,039
example

743
00:25:12,720 --> 00:25:16,320
then if the if the changes are not too

744
00:25:15,039 --> 00:25:19,200
bad then we can

745
00:25:16,320 --> 00:25:19,760
deform the mesh along with the geometry

746
00:25:19,200 --> 00:25:22,960
in

747
00:25:19,760 --> 00:25:25,279
as part of the simulation or we we

748
00:25:22,960 --> 00:25:26,960
deform the geometry we send it to g mesh

749
00:25:25,279 --> 00:25:29,919
d mesh gives us a new mesh

750
00:25:26,960 --> 00:25:32,159
we we do this again so we we interact

751
00:25:29,919 --> 00:25:33,919
with other software packages we

752
00:25:32,159 --> 00:25:35,360
a long time ago we made the decision

753
00:25:33,919 --> 00:25:37,919
that

754
00:25:35,360 --> 00:25:39,439
there are things that we do really well

755
00:25:37,919 --> 00:25:40,640
and there are things where other people

756
00:25:39,440 --> 00:25:41,840
do it really well

757
00:25:40,640 --> 00:25:44,320
and we're going to build on what other

758
00:25:41,840 --> 00:25:46,720
people do instead of trying to reinvent

759
00:25:44,320 --> 00:25:46,720
the wheel

760
00:25:49,679 --> 00:25:52,559
you have another question

761
00:25:54,640 --> 00:26:08,400
okay thank you all right

