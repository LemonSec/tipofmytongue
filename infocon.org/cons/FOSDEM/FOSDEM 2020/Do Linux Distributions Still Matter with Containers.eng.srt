1
00:00:04,960 --> 00:00:07,919
hello

2
00:00:06,000 --> 00:00:09,760
okay so i think i have to talk into this

3
00:00:07,919 --> 00:00:12,960
for it's a record

4
00:00:09,760 --> 00:00:15,200
yeah but i don't think you need it for

5
00:00:12,960 --> 00:00:17,279
okay yes talk loudly and we have to get

6
00:00:15,200 --> 00:00:21,919
an hour done this way

7
00:00:17,279 --> 00:00:25,359
um hello everyone how are you feeling

8
00:00:21,920 --> 00:00:26,560
9 a.m on a sunday i'm very happy to see

9
00:00:25,359 --> 00:00:27,840
each one of you because i was like

10
00:00:26,560 --> 00:00:29,119
there's going to be three people in this

11
00:00:27,840 --> 00:00:32,640
talk

12
00:00:29,119 --> 00:00:34,480
so i'm extremely excited so thank you um

13
00:00:32,640 --> 00:00:36,640
yeah i got super sick last year i was

14
00:00:34,480 --> 00:00:37,680
sick for five days and i was quarantined

15
00:00:36,640 --> 00:00:40,960
in london

16
00:00:37,680 --> 00:00:43,440
and they would not let me fly back home

17
00:00:40,960 --> 00:00:44,559
i had to stay in a hotel so yeah i'm

18
00:00:43,440 --> 00:00:45,839
glad to be here this time without

19
00:00:44,559 --> 00:00:49,039
getting us sick

20
00:00:45,840 --> 00:00:51,039
um so this talk has been

21
00:00:49,039 --> 00:00:52,879
kind of inspired like over probably the

22
00:00:51,039 --> 00:00:54,399
last year year and a half

23
00:00:52,879 --> 00:00:56,640
just a bunch of different so i guess

24
00:00:54,399 --> 00:00:58,879
i'll back up and say okay so

25
00:00:56,640 --> 00:01:00,800
i've been doing container stuff since

26
00:00:58,879 --> 00:01:03,920
like the sub 1.0

27
00:01:00,800 --> 00:01:05,840
release of docker and now at red hat i

28
00:01:03,920 --> 00:01:07,360
i am the product manager i'm like the

29
00:01:05,840 --> 00:01:08,479
primary product manager that drives our

30
00:01:07,360 --> 00:01:10,320
container images

31
00:01:08,479 --> 00:01:12,320
so like i build the red hat enterprise

32
00:01:10,320 --> 00:01:14,639
linux base images which are now ubi

33
00:01:12,320 --> 00:01:16,798
red hat universal base image which i'll

34
00:01:14,640 --> 00:01:19,119
talk to about a little bit in place but

35
00:01:16,799 --> 00:01:20,560
but um so i think about this stuff all

36
00:01:19,119 --> 00:01:21,600
the time and i get a ton of questions

37
00:01:20,560 --> 00:01:23,040
around this and i'm also the product

38
00:01:21,600 --> 00:01:24,240
manager for cryo

39
00:01:23,040 --> 00:01:26,640
and i don't how many of you know what

40
00:01:24,240 --> 00:01:27,119
cryo is all right i won't bore you with

41
00:01:26,640 --> 00:01:28,479
it but

42
00:01:27,119 --> 00:01:29,360
it's still cool that some of you know

43
00:01:28,479 --> 00:01:31,119
and then how many of you know what

44
00:01:29,360 --> 00:01:32,640
podman is

45
00:01:31,119 --> 00:01:34,560
more okay that's good because i'm also

46
00:01:32,640 --> 00:01:36,159
the product manager for that and then

47
00:01:34,560 --> 00:01:38,000
build and scope you and it used to be

48
00:01:36,159 --> 00:01:38,560
docker when we well still technically i

49
00:01:38,000 --> 00:01:40,159
guess because we

50
00:01:38,560 --> 00:01:42,000
we do support in real seven so i'm still

51
00:01:40,159 --> 00:01:44,640
the product manager for docker as well

52
00:01:42,000 --> 00:01:46,079
um but yeah so i basically eat sleep and

53
00:01:44,640 --> 00:01:48,159
breathe this stuff for like the last

54
00:01:46,079 --> 00:01:49,279
five years and so this started

55
00:01:48,159 --> 00:01:51,759
culminating in my mind

56
00:01:49,280 --> 00:01:52,320
all right like i'll i'll get into it but

57
00:01:51,759 --> 00:01:55,520
the the

58
00:01:52,320 --> 00:01:57,039
the there's like this i don't know every

59
00:01:55,520 --> 00:01:58,798
time something new comes out everybody

60
00:01:57,040 --> 00:01:59,840
says oh the old thing's dead and now

61
00:01:58,799 --> 00:02:01,119
there's this new thing and everything

62
00:01:59,840 --> 00:02:02,640
nobody cares about the old thing and

63
00:02:01,119 --> 00:02:04,079
this just like how people

64
00:02:02,640 --> 00:02:05,680
i don't know the last this is like maybe

65
00:02:04,079 --> 00:02:06,880
politics this is technology this is

66
00:02:05,680 --> 00:02:09,280
everything i don't know

67
00:02:06,880 --> 00:02:10,799
um but yeah so i published a blog entry

68
00:02:09,280 --> 00:02:12,640
on uh

69
00:02:10,800 --> 00:02:14,239
on opensource.com and it was fairly

70
00:02:12,640 --> 00:02:14,799
popular decent it did pretty well and so

71
00:02:14,239 --> 00:02:16,400
i was like

72
00:02:14,800 --> 00:02:17,840
maybe i should do this as a talk i think

73
00:02:16,400 --> 00:02:19,040
i was talking with you and you actually

74
00:02:17,840 --> 00:02:20,879
told me i should do a talk and i was

75
00:02:19,040 --> 00:02:23,200
like i guess i should do that

76
00:02:20,879 --> 00:02:25,040
um and then it's a combination of that

77
00:02:23,200 --> 00:02:26,238
and the fact that i found i came upon

78
00:02:25,040 --> 00:02:28,799
this

79
00:02:26,239 --> 00:02:29,920
so it's an interesting comment or it's

80
00:02:28,800 --> 00:02:33,040
an interesting

81
00:02:29,920 --> 00:02:34,640
um concept where people undervalue like

82
00:02:33,040 --> 00:02:36,000
like in economics there's the concept of

83
00:02:34,640 --> 00:02:37,839
discounting right like

84
00:02:36,000 --> 00:02:39,920
you'll subconsciously discount certain

85
00:02:37,840 --> 00:02:41,200
things and then you will overvalue other

86
00:02:39,920 --> 00:02:42,319
things so like you know like if you see

87
00:02:41,200 --> 00:02:43,518
a lion you're gonna

88
00:02:42,319 --> 00:02:45,040
run away from the lion but then you

89
00:02:43,519 --> 00:02:46,319
could starve to death because you

90
00:02:45,040 --> 00:02:48,000
discounted the fact you actually also

91
00:02:46,319 --> 00:02:51,040
had to go get food

92
00:02:48,000 --> 00:02:52,080
people discount maintenance so like i

93
00:02:51,040 --> 00:02:53,440
used to say

94
00:02:52,080 --> 00:02:55,120
until somebody corrected me that like

95
00:02:53,440 --> 00:02:56,640
you know when a bridge is built people

96
00:02:55,120 --> 00:02:58,640
have a tuxedo dinner

97
00:02:56,640 --> 00:03:00,399
and then when they when the road crew

98
00:02:58,640 --> 00:03:02,000
comes in to resurface at 20 years later

99
00:03:00,400 --> 00:03:03,120
nobody cares right like they get taco

100
00:03:02,000 --> 00:03:04,959
bell

101
00:03:03,120 --> 00:03:07,519
or kebab you know at the end of the day

102
00:03:04,959 --> 00:03:08,720
but but i was corrected by a civil

103
00:03:07,519 --> 00:03:10,159
engineer that said they definitely do

104
00:03:08,720 --> 00:03:11,359
not get tuxedo dinners because

105
00:03:10,159 --> 00:03:12,079
apparently they can barely pay for

106
00:03:11,360 --> 00:03:14,400
bridges

107
00:03:12,080 --> 00:03:15,599
so now i use like the skyscraper example

108
00:03:14,400 --> 00:03:16,800
right like when a bank builds a

109
00:03:15,599 --> 00:03:17,200
skyscraper because they have a lot of

110
00:03:16,800 --> 00:03:19,840
money

111
00:03:17,200 --> 00:03:20,560
i'm guessing there's a tuxedo dinner but

112
00:03:19,840 --> 00:03:22,080
we value

113
00:03:20,560 --> 00:03:23,519
innovation and we even do this

114
00:03:22,080 --> 00:03:24,959
everywhere that i've seen even in our

115
00:03:23,519 --> 00:03:25,360
planning meeting last week i noticed

116
00:03:24,959 --> 00:03:27,760
like

117
00:03:25,360 --> 00:03:29,440
everyone claps when we're doing this new

118
00:03:27,760 --> 00:03:30,959
thing and everyone claps but then when

119
00:03:29,440 --> 00:03:32,560
like we fix the old thing

120
00:03:30,959 --> 00:03:35,040
everyone's like oh that's cool but like

121
00:03:32,560 --> 00:03:36,480
we don't care like and so like

122
00:03:35,040 --> 00:03:38,159
i started going through online i'm like

123
00:03:36,480 --> 00:03:40,560
ooh i mean we

124
00:03:38,159 --> 00:03:42,000
basically undervalue what's in the

125
00:03:40,560 --> 00:03:44,080
container image because it's essentially

126
00:03:42,000 --> 00:03:46,239
a linux distribution

127
00:03:44,080 --> 00:03:47,840
and so i've i've seen this multiple

128
00:03:46,239 --> 00:03:49,760
times from people twitter

129
00:03:47,840 --> 00:03:51,120
twitter drives me crazy but this is

130
00:03:49,760 --> 00:03:51,599
probably a quote i've seen on twitter

131
00:03:51,120 --> 00:03:53,120
more than

132
00:03:51,599 --> 00:03:54,879
more than once like how many of you care

133
00:03:53,120 --> 00:03:57,920
about the operating system

134
00:03:54,879 --> 00:03:59,280
all right i can leave i'm done i've

135
00:03:57,920 --> 00:04:02,879
already cut to the chase

136
00:03:59,280 --> 00:04:04,319
um uh you'll see this

137
00:04:02,879 --> 00:04:06,959
comment like especially people with

138
00:04:04,319 --> 00:04:08,079
containers the and and i guess

139
00:04:06,959 --> 00:04:10,159
how many of you are in daniel reek's

140
00:04:08,080 --> 00:04:12,159
talk yesterday any of you

141
00:04:10,159 --> 00:04:13,519
one okay couple so he talked about how

142
00:04:12,159 --> 00:04:14,720
there's two ways to look at an operating

143
00:04:13,519 --> 00:04:16,478
system i almost stole a slide but i

144
00:04:14,720 --> 00:04:18,079
decided i talked about this anyway

145
00:04:16,478 --> 00:04:19,440
uh you know you can look at it from the

146
00:04:18,079 --> 00:04:20,720
bottom up and you can look at the

147
00:04:19,440 --> 00:04:21,519
operating system as enabling the

148
00:04:20,720 --> 00:04:23,360
hardware

149
00:04:21,519 --> 00:04:24,720
and like you know the linux kernel can

150
00:04:23,360 --> 00:04:26,560
enable certain pieces of hardware blah

151
00:04:24,720 --> 00:04:27,759
blah blah but then when you run your app

152
00:04:26,560 --> 00:04:29,199
it looks the same no matter what kind of

153
00:04:27,759 --> 00:04:30,320
hardware as long as it's like x86

154
00:04:29,199 --> 00:04:32,160
hardware or arm or

155
00:04:30,320 --> 00:04:33,680
power or whatever but you know given

156
00:04:32,160 --> 00:04:34,479
different architectures it looks the

157
00:04:33,680 --> 00:04:35,680
same

158
00:04:34,479 --> 00:04:37,599
and then you can look at it from the top

159
00:04:35,680 --> 00:04:38,800
down which is something that i'm a

160
00:04:37,600 --> 00:04:39,759
systems person so

161
00:04:38,800 --> 00:04:41,360
it's not something that i had

162
00:04:39,759 --> 00:04:42,880
historically done early in my career i

163
00:04:41,360 --> 00:04:44,560
looked at it always from the bottom up

164
00:04:42,880 --> 00:04:46,240
but but top down you look at as an

165
00:04:44,560 --> 00:04:48,479
application platform or if i write my

166
00:04:46,240 --> 00:04:49,120
app once it should work in other places

167
00:04:48,479 --> 00:04:51,758
right

168
00:04:49,120 --> 00:04:52,880
um mostly for this talk i am going to

169
00:04:51,759 --> 00:04:56,000
tackle it from the top

170
00:04:52,880 --> 00:04:57,759
down because i think i

171
00:04:56,000 --> 00:05:00,080
think we all know that like you still

172
00:04:57,759 --> 00:05:02,400
need a linux kernel to boot up hardware

173
00:05:00,080 --> 00:05:03,199
but we're moving to cloud and

174
00:05:02,400 --> 00:05:04,638
everybody's talking about how you're

175
00:05:03,199 --> 00:05:06,320
running like containers on

176
00:05:04,639 --> 00:05:07,840
you know cloud platform that is a vm

177
00:05:06,320 --> 00:05:09,599
that's a fairly generic vm

178
00:05:07,840 --> 00:05:11,119
and it is fairly easy to light up

179
00:05:09,600 --> 00:05:12,800
because they're pretty standard

180
00:05:11,120 --> 00:05:14,160
so i think the more interesting problem

181
00:05:12,800 --> 00:05:15,520
for at least developers and

182
00:05:14,160 --> 00:05:17,199
and people that are thinking about this

183
00:05:15,520 --> 00:05:18,400
is in the container and i think this is

184
00:05:17,199 --> 00:05:20,479
where people are really blind to the

185
00:05:18,400 --> 00:05:23,198
fact that it still matters

186
00:05:20,479 --> 00:05:24,159
so let's start with something not

187
00:05:23,199 --> 00:05:25,440
technical and then i'm going to hurt

188
00:05:24,160 --> 00:05:26,880
your brains in the middle and then i'll

189
00:05:25,440 --> 00:05:27,520
calm down again and stop hurting your

190
00:05:26,880 --> 00:05:29,840
brains

191
00:05:27,520 --> 00:05:30,719
but um let's use tiresome as an example

192
00:05:29,840 --> 00:05:33,758
i joke like

193
00:05:30,720 --> 00:05:36,800
how many of you have kids so how many of

194
00:05:33,759 --> 00:05:36,800
you care about your tires

195
00:05:37,199 --> 00:05:41,120
how many of you would have said that

196
00:05:38,240 --> 00:05:42,639
before i asked you if you had kids

197
00:05:41,120 --> 00:05:44,400
like we don't think about it right like

198
00:05:42,639 --> 00:05:45,919
okay so minivan is one thing this is a

199
00:05:44,400 --> 00:05:47,039
very common vehicle in the us i know you

200
00:05:45,919 --> 00:05:49,280
guys don't have as many

201
00:05:47,039 --> 00:05:50,240
here but but yeah but the idea that when

202
00:05:49,280 --> 00:05:51,440
i hear people say well i don't care

203
00:05:50,240 --> 00:05:52,639
about the outbreak system or

204
00:05:51,440 --> 00:05:54,800
they're like i don't care about my tires

205
00:05:52,639 --> 00:05:56,400
i'm like yeah i think you do like if you

206
00:05:54,800 --> 00:05:58,000
have a family in your car i think you

207
00:05:56,400 --> 00:06:00,159
care about the tires i think it gets

208
00:05:58,000 --> 00:06:01,840
especially in the winter rain i think i

209
00:06:00,160 --> 00:06:03,280
think you start to go oh there are

210
00:06:01,840 --> 00:06:04,638
certain variables i do care about with

211
00:06:03,280 --> 00:06:05,280
the tires right like i don't just want

212
00:06:04,639 --> 00:06:06,639
them to like

213
00:06:05,280 --> 00:06:08,080
blow out when we're on the expressway

214
00:06:06,639 --> 00:06:08,400
and like crash the car off the road

215
00:06:08,080 --> 00:06:10,400
right

216
00:06:08,400 --> 00:06:12,719
so i care somewhat like at least care a

217
00:06:10,400 --> 00:06:14,000
little bit and then i go well here's a

218
00:06:12,720 --> 00:06:15,360
higher end car do you care about your

219
00:06:14,000 --> 00:06:16,960
tires with this

220
00:06:15,360 --> 00:06:18,479
like how many of you own like sports

221
00:06:16,960 --> 00:06:20,960
sedans

222
00:06:18,479 --> 00:06:21,758
none of you so he might care a little

223
00:06:20,960 --> 00:06:24,560
bit

224
00:06:21,759 --> 00:06:25,440
i know right yeah these just came over

225
00:06:24,560 --> 00:06:27,440
to the us i think

226
00:06:25,440 --> 00:06:28,479
and they're stupid expensive there too

227
00:06:27,440 --> 00:06:30,639
um

228
00:06:28,479 --> 00:06:32,159
but then you move into you start getting

229
00:06:30,639 --> 00:06:34,400
into this territory

230
00:06:32,160 --> 00:06:35,919
it's not quite professional but i think

231
00:06:34,400 --> 00:06:36,799
these p i don't own one of these i don't

232
00:06:35,919 --> 00:06:38,799
think any of us do

233
00:06:36,800 --> 00:06:40,479
does anyone own a ferrari all right good

234
00:06:38,800 --> 00:06:42,960
i'm talking to my people

235
00:06:40,479 --> 00:06:43,680
but i think i think they care about

236
00:06:42,960 --> 00:06:44,799
their tires

237
00:06:43,680 --> 00:06:46,240
i would think that once you have that

238
00:06:44,800 --> 00:06:47,199
much money you don't care like you're

239
00:06:46,240 --> 00:06:49,280
you're like just give

240
00:06:47,199 --> 00:06:51,120
give me the best tires put new ones on

241
00:06:49,280 --> 00:06:51,919
i'm done and then when you're in this

242
00:06:51,120 --> 00:06:53,360
scenario

243
00:06:51,919 --> 00:06:55,198
you definitely care about the tires

244
00:06:53,360 --> 00:06:57,199
right and i would argue this

245
00:06:55,199 --> 00:06:59,520
is where we should be thinking if we're

246
00:06:57,199 --> 00:07:01,759
professionals like how many of you do

247
00:06:59,520 --> 00:07:02,719
any kind of like computer stuff for a

248
00:07:01,759 --> 00:07:05,280
living like

249
00:07:02,720 --> 00:07:07,199
work okay exactly so like we should all

250
00:07:05,280 --> 00:07:08,799
be thinking in this category right like

251
00:07:07,199 --> 00:07:09,759
you would never go to an f1 mechanic i

252
00:07:08,800 --> 00:07:10,639
was like yeah i don't care about the

253
00:07:09,759 --> 00:07:12,880
tires

254
00:07:10,639 --> 00:07:14,000
i care about the new carbon fiber wings

255
00:07:12,880 --> 00:07:15,360
we're putting on this

256
00:07:14,000 --> 00:07:17,280
nobody says that like if you're a

257
00:07:15,360 --> 00:07:19,440
professional you worry about all the

258
00:07:17,280 --> 00:07:20,880
components that go into that you know

259
00:07:19,440 --> 00:07:23,199
thing that you're doing right so like if

260
00:07:20,880 --> 00:07:24,159
i'm a i'm a cis admin by trade mostly i

261
00:07:23,199 --> 00:07:26,479
guess most of my career

262
00:07:24,160 --> 00:07:27,759
software engineering sysadmin i care

263
00:07:26,479 --> 00:07:29,039
about the operating system because it's

264
00:07:27,759 --> 00:07:30,319
part of the things i got to care about i

265
00:07:29,039 --> 00:07:32,479
still care about kubernetes

266
00:07:30,319 --> 00:07:33,759
i care i mean actually with kubernetes

267
00:07:32,479 --> 00:07:34,719
and containers there's a lot more to

268
00:07:33,759 --> 00:07:36,400
care about too but

269
00:07:34,720 --> 00:07:37,840
i don't think anything went away right

270
00:07:36,400 --> 00:07:39,280
like i think there's just more stuff to

271
00:07:37,840 --> 00:07:41,520
worry about

272
00:07:39,280 --> 00:07:43,359
so all right so yeah i basically said

273
00:07:41,520 --> 00:07:44,960
you know safety i care about here

274
00:07:43,360 --> 00:07:46,720
probably road performance at least it's

275
00:07:44,960 --> 00:07:48,000
a common thing in the u.s people will go

276
00:07:46,720 --> 00:07:48,720
out and drive through the mountains like

277
00:07:48,000 --> 00:07:50,000
on the weekends

278
00:07:48,720 --> 00:07:50,960
they care about their tires if you blow

279
00:07:50,000 --> 00:07:52,720
out your tires driving through the

280
00:07:50,960 --> 00:07:54,080
mountains you will die like you'll

281
00:07:52,720 --> 00:07:55,360
slide off the road and die here these

282
00:07:54,080 --> 00:07:56,719
people definitely care and then here's

283
00:07:55,360 --> 00:07:58,160
where we should be right like i said

284
00:07:56,720 --> 00:08:00,800
this is really us i think

285
00:07:58,160 --> 00:08:02,879
the professionals all right so maybe

286
00:08:00,800 --> 00:08:04,400
i've convinced you you care a little bit

287
00:08:02,879 --> 00:08:05,759
like most of you already cared but how

288
00:08:04,400 --> 00:08:08,080
many of you care now about the operating

289
00:08:05,759 --> 00:08:09,360
system

290
00:08:08,080 --> 00:08:11,199
i think it was all the same people i

291
00:08:09,360 --> 00:08:14,160
don't think i've convinced

292
00:08:11,199 --> 00:08:15,039
politics uh all right so what context

293
00:08:14,160 --> 00:08:19,199
though right

294
00:08:15,039 --> 00:08:22,000
um i i love showing this picture because

295
00:08:19,199 --> 00:08:22,800
i think i think this is this is this is

296
00:08:22,000 --> 00:08:25,360
actually

297
00:08:22,800 --> 00:08:26,960
a genius picture in that like people

298
00:08:25,360 --> 00:08:28,960
think that you know you like

299
00:08:26,960 --> 00:08:30,239
this is still more efficient than not

300
00:08:28,960 --> 00:08:31,440
doing that right like if there's a bunch

301
00:08:30,240 --> 00:08:33,680
of crap piled up

302
00:08:31,440 --> 00:08:34,958
on that boat it would be less efficient

303
00:08:33,679 --> 00:08:36,559
but this some crane

304
00:08:34,958 --> 00:08:38,239
probably put it in there right like so

305
00:08:36,559 --> 00:08:39,518
so that still went you know on a big

306
00:08:38,240 --> 00:08:40,959
ship and then into a smaller

307
00:08:39,519 --> 00:08:42,640
you know who knows went onto a crane and

308
00:08:40,958 --> 00:08:44,239
then onto a truck and now it's on this

309
00:08:42,640 --> 00:08:46,959
boat for the last mile to maybe

310
00:08:44,240 --> 00:08:47,920
go to some island like there's still

311
00:08:46,959 --> 00:08:49,359
there's still something interesting

312
00:08:47,920 --> 00:08:51,279
about containers i won't go on too much

313
00:08:49,360 --> 00:08:52,959
of a tangent about that but

314
00:08:51,279 --> 00:08:55,519
i've always said it's a packaging format

315
00:08:52,959 --> 00:08:57,119
i think that proves it um

316
00:08:55,519 --> 00:08:58,800
all right so there's a lot of different

317
00:08:57,120 --> 00:08:59,519
options i mean i work for red hat but

318
00:08:58,800 --> 00:09:02,000
but i still

319
00:08:59,519 --> 00:09:03,440
value all of these all of these linux

320
00:09:02,000 --> 00:09:04,640
distributions i'll say and

321
00:09:03,440 --> 00:09:05,839
even windows i mean at this point you

322
00:09:04,640 --> 00:09:07,600
kind of have to say well if i'm running

323
00:09:05,839 --> 00:09:08,959
windows i need windows containers

324
00:09:07,600 --> 00:09:10,800
you have to kind of care about you

325
00:09:08,959 --> 00:09:11,760
especially in windows world have to care

326
00:09:10,800 --> 00:09:12,800
about what's in the container because

327
00:09:11,760 --> 00:09:13,839
they have to match

328
00:09:12,800 --> 00:09:15,359
um you can't even have different

329
00:09:13,839 --> 00:09:16,880
versions like there's no there's no

330
00:09:15,360 --> 00:09:19,920
there's no ability to like you know

331
00:09:16,880 --> 00:09:21,519
leak um but but in the container world

332
00:09:19,920 --> 00:09:22,160
how many of you are like how many of you

333
00:09:21,519 --> 00:09:23,440
been using

334
00:09:22,160 --> 00:09:25,760
actually let me i guess let me ask this

335
00:09:23,440 --> 00:09:27,440
how many of you have used docker

336
00:09:25,760 --> 00:09:29,120
vast majority some of you have used

337
00:09:27,440 --> 00:09:29,760
podman i saw how many of you have been

338
00:09:29,120 --> 00:09:32,560
using

339
00:09:29,760 --> 00:09:35,439
containers for more than three years

340
00:09:32,560 --> 00:09:37,518
decent amount how many more than five

341
00:09:35,440 --> 00:09:39,120
so a few yeah it was us that were like

342
00:09:37,519 --> 00:09:42,640
talking about all this early on

343
00:09:39,120 --> 00:09:44,240
um and how many of you more than a year

344
00:09:42,640 --> 00:09:45,920
so actually it looks like the last year

345
00:09:44,240 --> 00:09:46,640
shot up a decent amount it looks like it

346
00:09:45,920 --> 00:09:48,399
almost doubled

347
00:09:46,640 --> 00:09:50,240
if i were to take a quick estimate so

348
00:09:48,399 --> 00:09:51,680
like we're still in that phase where

349
00:09:50,240 --> 00:09:54,320
people are figuring this out

350
00:09:51,680 --> 00:09:55,120
so these are two of the common patterns

351
00:09:54,320 --> 00:09:57,279
that i've seen

352
00:09:55,120 --> 00:09:58,480
and admittedly as an old like

353
00:09:57,279 --> 00:10:00,399
curmudgeonly

354
00:09:58,480 --> 00:10:02,079
you know old person now that i might not

355
00:10:00,399 --> 00:10:02,800
show off but i am i've been doing this

356
00:10:02,079 --> 00:10:04,800
way too long

357
00:10:02,800 --> 00:10:06,719
i see people trying to reinvent the

358
00:10:04,800 --> 00:10:08,240
wheel they they look at these minimal

359
00:10:06,720 --> 00:10:08,959
options this has become very popular in

360
00:10:08,240 --> 00:10:10,800
containers

361
00:10:08,959 --> 00:10:12,319
and they'll say well we use distro lists

362
00:10:10,800 --> 00:10:14,479
we don't want to use a linux distro

363
00:10:12,320 --> 00:10:15,680
or they'll say we start from scratch and

364
00:10:14,480 --> 00:10:17,040
i'm like

365
00:10:15,680 --> 00:10:18,800
but then on the other hand some people

366
00:10:17,040 --> 00:10:19,920
are have common sense and they go i'm

367
00:10:18,800 --> 00:10:20,640
just going to use a linux distro i'm

368
00:10:19,920 --> 00:10:22,240
going to use what is

369
00:10:20,640 --> 00:10:23,439
already there i'm a debian user i want

370
00:10:22,240 --> 00:10:24,160
to put debian in the container because

371
00:10:23,440 --> 00:10:26,079
now i can

372
00:10:24,160 --> 00:10:27,920
you know apt-get all the dependencies

373
00:10:26,079 --> 00:10:29,439
blah blah blah but there's two schools

374
00:10:27,920 --> 00:10:30,719
of thought happening and i would say

375
00:10:29,440 --> 00:10:32,240
this is the hipster

376
00:10:30,720 --> 00:10:33,920
cool and these are like the old

377
00:10:32,240 --> 00:10:35,519
curmudgeons you know i mean in general

378
00:10:33,920 --> 00:10:38,399
or people that just don't think about it

379
00:10:35,519 --> 00:10:39,680
um but i i would argue that it's still

380
00:10:38,399 --> 00:10:41,040
it's still pretty valuable to think

381
00:10:39,680 --> 00:10:43,279
about this

382
00:10:41,040 --> 00:10:44,880
all right so i was joking i had the

383
00:10:43,279 --> 00:10:46,240
sticker i didn't put it on there

384
00:10:44,880 --> 00:10:47,760
but there is no cloud right there's just

385
00:10:46,240 --> 00:10:49,120
someone else's computer have you all

386
00:10:47,760 --> 00:10:50,959
heard that

387
00:10:49,120 --> 00:10:52,800
but there's also no distro list there's

388
00:10:50,959 --> 00:10:54,319
only dependencies that you manage

389
00:10:52,800 --> 00:10:55,680
so like you have to think about this

390
00:10:54,320 --> 00:10:56,959
like actually here's the funnier part

391
00:10:55,680 --> 00:10:57,279
how many of you know about what distro

392
00:10:56,959 --> 00:10:58,959
this

393
00:10:57,279 --> 00:11:02,399
is have you heard about this all right

394
00:10:58,959 --> 00:11:02,399
do you know what they actually use

395
00:11:04,640 --> 00:11:08,880
it's a debian dependency tree they rely

396
00:11:07,279 --> 00:11:09,760
on the debian linux distro to do the

397
00:11:08,880 --> 00:11:12,320
work for them

398
00:11:09,760 --> 00:11:13,519
and so it's funny because like i think

399
00:11:12,320 --> 00:11:14,880
it's almost like i mean it's

400
00:11:13,519 --> 00:11:17,200
it's again it almost reminds me of

401
00:11:14,880 --> 00:11:18,959
politics in 22 2020 we

402
00:11:17,200 --> 00:11:20,640
say things like distroless and i'm like

403
00:11:18,959 --> 00:11:21,839
there's a whole team of people working

404
00:11:20,640 --> 00:11:23,199
on that behind the scenes and you're

405
00:11:21,839 --> 00:11:25,200
basically minimizing

406
00:11:23,200 --> 00:11:26,839
like everything they do of value but yet

407
00:11:25,200 --> 00:11:28,480
you're using it like it's a complete

408
00:11:26,839 --> 00:11:29,760
insanity um

409
00:11:28,480 --> 00:11:31,360
so hopefully i've caught you ahead of

410
00:11:29,760 --> 00:11:31,839
time before you see dystrolis and now

411
00:11:31,360 --> 00:11:33,839
i've

412
00:11:31,839 --> 00:11:35,120
put you back on the right path uh

413
00:11:33,839 --> 00:11:36,800
without without

414
00:11:35,120 --> 00:11:38,560
there's no such thing like there is no

415
00:11:36,800 --> 00:11:40,079
such thing as disrelief

416
00:11:38,560 --> 00:11:41,760
all right so why would we use a linux

417
00:11:40,079 --> 00:11:43,359
distro um

418
00:11:41,760 --> 00:11:44,480
you know you would think through the

419
00:11:43,360 --> 00:11:45,600
standard reasons that you would use a

420
00:11:44,480 --> 00:11:47,120
linux distro

421
00:11:45,600 --> 00:11:49,040
at all like why would using a container

422
00:11:47,120 --> 00:11:51,440
image it's basically the same reasons

423
00:11:49,040 --> 00:11:52,719
um you know like i mean i try to boil

424
00:11:51,440 --> 00:11:54,160
these down i mean obviously some of

425
00:11:52,720 --> 00:11:54,959
these get into like things red hat would

426
00:11:54,160 --> 00:11:56,719
think about more

427
00:11:54,959 --> 00:11:58,000
but i think all these are pretty common

428
00:11:56,720 --> 00:12:00,399
among all the

429
00:11:58,000 --> 00:12:02,320
all the linux distros right like size

430
00:12:00,399 --> 00:12:03,120
like what core utils does it use what c

431
00:12:02,320 --> 00:12:04,560
library

432
00:12:03,120 --> 00:12:05,920
uh what life cycle how long will they

433
00:12:04,560 --> 00:12:07,119
patch it like how long will they patch

434
00:12:05,920 --> 00:12:08,800
what's in that container

435
00:12:07,120 --> 00:12:11,360
uh people don't realize like when you go

436
00:12:08,800 --> 00:12:14,800
from i i ranted about this because

437
00:12:11,360 --> 00:12:16,079
on docker hub the centos 7 and centos 8

438
00:12:14,800 --> 00:12:18,399
container images are actually in the

439
00:12:16,079 --> 00:12:19,599
same repository so if you're using the

440
00:12:18,399 --> 00:12:21,519
latest tag

441
00:12:19,600 --> 00:12:22,959
and you're building like when centos 8

442
00:12:21,519 --> 00:12:24,959
came out all of your stuff probably just

443
00:12:22,959 --> 00:12:26,638
stopped working and so you just did a

444
00:12:24,959 --> 00:12:28,239
linux migration in like

445
00:12:26,639 --> 00:12:30,000
10 minutes you know five minutes however

446
00:12:28,240 --> 00:12:32,880
long it took to rebuild your containers

447
00:12:30,000 --> 00:12:34,240
um this is something that's people it's

448
00:12:32,880 --> 00:12:35,200
hard for them to get their brain around

449
00:12:34,240 --> 00:12:36,959
they don't realize

450
00:12:35,200 --> 00:12:38,800
oh every time i rebuild that container

451
00:12:36,959 --> 00:12:39,839
image i'm essentially reinstalling the

452
00:12:38,800 --> 00:12:41,839
operating system

453
00:12:39,839 --> 00:12:43,519
and then when i go from major version to

454
00:12:41,839 --> 00:12:45,440
major version that's an actual upgrade

455
00:12:43,519 --> 00:12:47,120
like i have to invest engineering time

456
00:12:45,440 --> 00:12:48,480
and going from like a major version of

457
00:12:47,120 --> 00:12:48,959
linux to another major version of a

458
00:12:48,480 --> 00:12:51,040
linux

459
00:12:48,959 --> 00:12:52,638
and that doesn't that that could require

460
00:12:51,040 --> 00:12:54,319
reading tons of docs freaking out they

461
00:12:52,639 --> 00:12:55,200
went from send mail to postgres i

462
00:12:54,320 --> 00:12:56,880
remember when that happened

463
00:12:55,200 --> 00:12:58,240
like these kinds of things matter right

464
00:12:56,880 --> 00:12:59,600
like you have to think through this so

465
00:12:58,240 --> 00:13:01,760
the life cycle

466
00:12:59,600 --> 00:13:04,160
in a container matters probably even

467
00:13:01,760 --> 00:13:05,760
more because i think like vms would

468
00:13:04,160 --> 00:13:07,120
probably get even lazier

469
00:13:05,760 --> 00:13:08,639
and we don't pay attention for a long

470
00:13:07,120 --> 00:13:09,360
time and then eventually we're like oh

471
00:13:08,639 --> 00:13:10,880
crap

472
00:13:09,360 --> 00:13:11,839
the latest tech just pulled the latest

473
00:13:10,880 --> 00:13:13,439
version now i've got to figure out

474
00:13:11,839 --> 00:13:15,519
what's broken and why you know what

475
00:13:13,440 --> 00:13:16,800
what programs changed um so i think

476
00:13:15,519 --> 00:13:17,920
these are pretty

477
00:13:16,800 --> 00:13:20,240
important things to think about in

478
00:13:17,920 --> 00:13:21,760
containers i mentioned security you know

479
00:13:20,240 --> 00:13:23,440
i go a step further and think about a

480
00:13:21,760 --> 00:13:25,200
security response team

481
00:13:23,440 --> 00:13:26,720
and like looking at it i mean i don't

482
00:13:25,200 --> 00:13:28,079
want to say anything bad but different

483
00:13:26,720 --> 00:13:30,000
different linux distributions have

484
00:13:28,079 --> 00:13:32,160
different qualities there some are more

485
00:13:30,000 --> 00:13:34,320
reputed in their ability to you know

486
00:13:32,160 --> 00:13:35,199
think about patching and like actually

487
00:13:34,320 --> 00:13:36,800
patching things

488
00:13:35,200 --> 00:13:38,320
other ones are less so like i think

489
00:13:36,800 --> 00:13:39,760
that's pretty important being able to

490
00:13:38,320 --> 00:13:40,959
like quickly track down

491
00:13:39,760 --> 00:13:42,399
you know when the security team comes to

492
00:13:40,959 --> 00:13:43,279
you and they scan your entire container

493
00:13:42,399 --> 00:13:44,240
environment they're like you have all

494
00:13:43,279 --> 00:13:45,680
these cds

495
00:13:44,240 --> 00:13:47,760
you have to patch these things you know

496
00:13:45,680 --> 00:13:48,000
that typical feedback thing that happens

497
00:13:47,760 --> 00:13:49,279
in

498
00:13:48,000 --> 00:13:50,480
any professional environment that's

499
00:13:49,279 --> 00:13:51,279
going to happen with containers and it

500
00:13:50,480 --> 00:13:53,199
already is

501
00:13:51,279 --> 00:13:55,199
um and then automate you know i talk

502
00:13:53,199 --> 00:13:56,639
about automated you know uh

503
00:13:55,199 --> 00:13:58,479
automation and performance engineering

504
00:13:56,639 --> 00:14:00,959
basically like proactively going out and

505
00:13:58,480 --> 00:14:02,240
and making sure you know i i show a

506
00:14:00,959 --> 00:14:03,518
bunch of them here instead of just one

507
00:14:02,240 --> 00:14:05,839
because i think it's pretty funny

508
00:14:03,519 --> 00:14:06,720
um but but as you scale up and you have

509
00:14:05,839 --> 00:14:08,160
more containers

510
00:14:06,720 --> 00:14:10,160
here's here's one of the here's one of

511
00:14:08,160 --> 00:14:11,360
the weirdest problems that can happen in

512
00:14:10,160 --> 00:14:13,519
containers and this is

513
00:14:11,360 --> 00:14:15,120
i always find these edge cases and then

514
00:14:13,519 --> 00:14:16,160
they happen and then i laugh because i

515
00:14:15,120 --> 00:14:16,959
try to tell the world but they don't

516
00:14:16,160 --> 00:14:20,719
listen to me

517
00:14:16,959 --> 00:14:22,319
um this is a problem i haven't seen a vz

518
00:14:20,720 --> 00:14:23,680
for it yet although i've seen the bz's

519
00:14:22,320 --> 00:14:24,320
for all the other ones i've predicted so

520
00:14:23,680 --> 00:14:27,760
far

521
00:14:24,320 --> 00:14:30,160
um uh this one is gonna happen soon

522
00:14:27,760 --> 00:14:31,120
where like you're building a web app and

523
00:14:30,160 --> 00:14:32,000
you're building and you're running on

524
00:14:31,120 --> 00:14:34,079
kubernetes

525
00:14:32,000 --> 00:14:36,480
and you you're you're you're putting

526
00:14:34,079 --> 00:14:36,959
your performance at say 200 milliseconds

527
00:14:36,480 --> 00:14:38,480
i need the

528
00:14:36,959 --> 00:14:40,880
i need the web server to respond to 200

529
00:14:38,480 --> 00:14:42,399
milliseconds and i fire up 10 containers

530
00:14:40,880 --> 00:14:43,519
and i have a certain level of traffic

531
00:14:42,399 --> 00:14:44,320
load that's coming out and trying to

532
00:14:43,519 --> 00:14:46,320
connect to it

533
00:14:44,320 --> 00:14:48,639
what happens when like three years from

534
00:14:46,320 --> 00:14:50,240
now kubernetes just kept firing up more

535
00:14:48,639 --> 00:14:51,519
containers you're still getting a 200

536
00:14:50,240 --> 00:14:53,920
millisecond response time

537
00:14:51,519 --> 00:14:54,880
but now there's 72 containers and you're

538
00:14:53,920 --> 00:14:56,959
like wait what

539
00:14:54,880 --> 00:14:59,120
what happened like kubernetes will just

540
00:14:56,959 --> 00:15:00,638
fire up more containers even if like

541
00:14:59,120 --> 00:15:02,160
some performance went completely

542
00:15:00,639 --> 00:15:03,440
sideways inside of your container you

543
00:15:02,160 --> 00:15:04,959
wouldn't even notice because it's just

544
00:15:03,440 --> 00:15:06,880
load balancing traffic

545
00:15:04,959 --> 00:15:09,199
so like this is something that people

546
00:15:06,880 --> 00:15:11,040
are not thinking through like the glib c

547
00:15:09,199 --> 00:15:12,240
the way the web server is compiled all

548
00:15:11,040 --> 00:15:13,760
the standard stuff that we care about in

549
00:15:12,240 --> 00:15:15,199
linux distro still matters in a

550
00:15:13,760 --> 00:15:15,680
container in fact it might even matter

551
00:15:15,199 --> 00:15:17,279
more

552
00:15:15,680 --> 00:15:18,880
because the platform will go fire up

553
00:15:17,279 --> 00:15:20,079
more of them and make things work

554
00:15:18,880 --> 00:15:21,760
and next thing you'll know you'll be

555
00:15:20,079 --> 00:15:22,560
spending way more money on amazon

556
00:15:21,760 --> 00:15:24,959
because you have like

557
00:15:22,560 --> 00:15:26,399
22 more web you know 22 more you know

558
00:15:24,959 --> 00:15:27,359
virtual machines because you needed that

559
00:15:26,399 --> 00:15:29,279
much capacity

560
00:15:27,360 --> 00:15:30,959
because you had a performance hit and

561
00:15:29,279 --> 00:15:32,480
and kubernetes just fixed it for

562
00:15:30,959 --> 00:15:34,800
fixed it for you by adding more

563
00:15:32,480 --> 00:15:37,680
containers

564
00:15:34,800 --> 00:15:38,319
so so let's go into like how all this

565
00:15:37,680 --> 00:15:40,319
works

566
00:15:38,320 --> 00:15:41,279
to remind you and go a step deeper this

567
00:15:40,320 --> 00:15:41,920
is where i'm going to hurt your brain a

568
00:15:41,279 --> 00:15:45,040
little bit

569
00:15:41,920 --> 00:15:45,599
um we invented all of this a long long

570
00:15:45,040 --> 00:15:47,519
time ago

571
00:15:45,600 --> 00:15:49,360
i did since only two of you were in

572
00:15:47,519 --> 00:15:50,079
daniel's talk he went through the entire

573
00:15:49,360 --> 00:15:52,079
history

574
00:15:50,079 --> 00:15:53,279
of like unix to now and we were messing

575
00:15:52,079 --> 00:15:55,040
with him afterwards but

576
00:15:53,279 --> 00:15:56,079
i have a talk i have a couple of blogs

577
00:15:55,040 --> 00:15:56,560
where i do go through this entire

578
00:15:56,079 --> 00:15:58,239
history

579
00:15:56,560 --> 00:16:00,000
i will skip most of the history and come

580
00:15:58,240 --> 00:16:04,079
up to like

581
00:16:00,000 --> 00:16:04,639
25-ish years ago um the the idea that we

582
00:16:04,079 --> 00:16:07,758
could

583
00:16:04,639 --> 00:16:09,279
um so so i i show here

584
00:16:07,759 --> 00:16:10,720
this is actually becoming a trendy thing

585
00:16:09,279 --> 00:16:12,000
to do in containers again where people

586
00:16:10,720 --> 00:16:12,720
do scratch builds what they'll call

587
00:16:12,000 --> 00:16:14,399
scratch builds

588
00:16:12,720 --> 00:16:16,000
but nobody really knows what that means

589
00:16:14,399 --> 00:16:17,600
sometimes it means pulling binaries from

590
00:16:16,000 --> 00:16:19,199
a linux distribution and running them

591
00:16:17,600 --> 00:16:20,800
you know basically stuffing them or

592
00:16:19,199 --> 00:16:22,880
putting them in the container but then

593
00:16:20,800 --> 00:16:24,959
other times it means compiling like a c

594
00:16:22,880 --> 00:16:26,240
app or a g or like a going app which we

595
00:16:24,959 --> 00:16:27,439
have a lot of in our container team

596
00:16:26,240 --> 00:16:28,639
because there's a lot of tools in the

597
00:16:27,440 --> 00:16:31,360
container world that are written and

598
00:16:28,639 --> 00:16:33,759
going and going is compiled um

599
00:16:31,360 --> 00:16:36,560
the this is like seems like a really

600
00:16:33,759 --> 00:16:38,560
good idea at first you're like oh uh

601
00:16:36,560 --> 00:16:39,758
this gets the smallest container image

602
00:16:38,560 --> 00:16:40,880
possible right because i get a very

603
00:16:39,759 --> 00:16:42,639
small binary

604
00:16:40,880 --> 00:16:44,639
if i compile everything statically like

605
00:16:42,639 --> 00:16:47,199
and i don't have any dynamic clinky

606
00:16:44,639 --> 00:16:48,560
um and all i need is glibc or gowang or

607
00:16:47,199 --> 00:16:48,800
something like that and i can compile it

608
00:16:48,560 --> 00:16:50,319
in

609
00:16:48,800 --> 00:16:51,519
and i come out with a real small binary

610
00:16:50,320 --> 00:16:53,199
and then i stuff that binary in a

611
00:16:51,519 --> 00:16:55,040
container

612
00:16:53,199 --> 00:16:56,880
but but this has some really strange

613
00:16:55,040 --> 00:17:00,319
caveats in that

614
00:16:56,880 --> 00:17:03,040
one if i have 5 000 containers in my

615
00:17:00,320 --> 00:17:04,480
environment i now have 5 000 glypcs

616
00:17:03,040 --> 00:17:06,720
embedded everywhere and i have 5 000

617
00:17:04,480 --> 00:17:09,599
different ssls you know live ssls

618
00:17:06,720 --> 00:17:11,360
embed it everywhere and now we get into

619
00:17:09,599 --> 00:17:13,520
the nuanced problem of

620
00:17:11,359 --> 00:17:15,599
attack surface people think it's the

621
00:17:13,520 --> 00:17:16,879
container image they'll do this very

622
00:17:15,599 --> 00:17:18,079
not smart thing where they'll look at

623
00:17:16,880 --> 00:17:19,360
the container image they're like this

624
00:17:18,079 --> 00:17:19,839
container image is bigger than this

625
00:17:19,359 --> 00:17:22,000
container

626
00:17:19,839 --> 00:17:23,198
so this one has less attack surface and

627
00:17:22,000 --> 00:17:24,640
that's actually not the way you should

628
00:17:23,199 --> 00:17:26,160
look at it you should think about all of

629
00:17:24,640 --> 00:17:27,520
the containers in your environment

630
00:17:26,160 --> 00:17:29,280
i think about the attack surface of all

631
00:17:27,520 --> 00:17:31,039
of that and if you have

632
00:17:29,280 --> 00:17:32,799
200 different teams using two different

633
00:17:31,039 --> 00:17:34,000
200 different versions of live ssl and

634
00:17:32,799 --> 00:17:36,639
200 versions of

635
00:17:34,000 --> 00:17:38,080
liv glib c now you have a much larger

636
00:17:36,640 --> 00:17:39,679
attack surface because the hacker does

637
00:17:38,080 --> 00:17:40,879
not care about that one container

638
00:17:39,679 --> 00:17:42,160
they're trying to get into your entire

639
00:17:40,880 --> 00:17:43,520
environment their target is the

640
00:17:42,160 --> 00:17:44,960
environment so the more different

641
00:17:43,520 --> 00:17:46,639
containers with different versions of

642
00:17:44,960 --> 00:17:48,799
glibc and lib ssl

643
00:17:46,640 --> 00:17:50,640
and the worse this is going to be right

644
00:17:48,799 --> 00:17:53,918
so many years ago

645
00:17:50,640 --> 00:17:55,280
we solved this problem by doing dynamic

646
00:17:53,919 --> 00:17:56,799
linking

647
00:17:55,280 --> 00:17:58,480
and what we do here i show in this

648
00:17:56,799 --> 00:18:00,080
example is i'm compiling

649
00:17:58,480 --> 00:18:02,000
apache and for those of you that don't

650
00:18:00,080 --> 00:18:04,480
remember this what happens when you

651
00:18:02,000 --> 00:18:06,880
dynamically compile a binary is you add

652
00:18:04,480 --> 00:18:08,160
ld.so basically you statically compile

653
00:18:06,880 --> 00:18:10,160
in ld.so

654
00:18:08,160 --> 00:18:11,440
and then when you run the binary the

655
00:18:10,160 --> 00:18:13,039
linux operating system is smart enough

656
00:18:11,440 --> 00:18:15,360
to analyze the elf binary and go

657
00:18:13,039 --> 00:18:17,039
oh this is this has a dynamic linker and

658
00:18:15,360 --> 00:18:18,799
then the linker at runtime will go out

659
00:18:17,039 --> 00:18:19,840
and find the dependencies on the disk

660
00:18:18,799 --> 00:18:21,200
i don't know how many of you remember

661
00:18:19,840 --> 00:18:21,918
this but this goes back to computer

662
00:18:21,200 --> 00:18:24,640
science like

663
00:18:21,919 --> 00:18:25,919
back 20 years for me um now the beauty

664
00:18:24,640 --> 00:18:27,600
of this is we've turned on more

665
00:18:25,919 --> 00:18:28,400
technologies and i'm showing you kind of

666
00:18:27,600 --> 00:18:30,799
like

667
00:18:28,400 --> 00:18:32,320
how we get to a container and then like

668
00:18:30,799 --> 00:18:33,760
which technologies get turned on as we

669
00:18:32,320 --> 00:18:34,559
get into this and this is all about i

670
00:18:33,760 --> 00:18:35,600
should have explained this at the

671
00:18:34,559 --> 00:18:36,799
beginning but this is

672
00:18:35,600 --> 00:18:38,159
i'm going to build up the container

673
00:18:36,799 --> 00:18:40,080
image and kind of go further and further

674
00:18:38,160 --> 00:18:42,400
further until we truly have a container

675
00:18:40,080 --> 00:18:44,080
um but now we're using you know we're

676
00:18:42,400 --> 00:18:47,039
using elf binaries we're using g

677
00:18:44,080 --> 00:18:48,320
c or gcc and then angiopsia inside and

678
00:18:47,039 --> 00:18:50,879
then we're using ld

679
00:18:48,320 --> 00:18:52,240
um and now we start to go okay now this

680
00:18:50,880 --> 00:18:55,919
is cool because

681
00:18:52,240 --> 00:18:57,600
if you know lib ssl or or

682
00:18:55,919 --> 00:18:59,200
glibc need patch because there's some

683
00:18:57,600 --> 00:18:59,760
security problem or some performance

684
00:18:59,200 --> 00:19:03,919
problem

685
00:18:59,760 --> 00:19:06,400
i can patch it i can patch it without

686
00:19:03,919 --> 00:19:07,679
basically recompiling the app every time

687
00:19:06,400 --> 00:19:09,039
but i still have to rebuild the

688
00:19:07,679 --> 00:19:10,799
container every time

689
00:19:09,039 --> 00:19:12,160
um so there's there's still a problem

690
00:19:10,799 --> 00:19:13,840
there and then we've also introduced a

691
00:19:12,160 --> 00:19:15,200
new problem of now we have dependencies

692
00:19:13,840 --> 00:19:16,799
we have to figure out how to get these

693
00:19:15,200 --> 00:19:17,679
dependencies on disk inside the

694
00:19:16,799 --> 00:19:19,918
container image

695
00:19:17,679 --> 00:19:21,039
so now basically we've said oh well now

696
00:19:19,919 --> 00:19:22,080
we need to build something called a

697
00:19:21,039 --> 00:19:23,840
depth solver right

698
00:19:22,080 --> 00:19:25,840
oh well in this case red hat world it's

699
00:19:23,840 --> 00:19:27,678
yum and and rpm

700
00:19:25,840 --> 00:19:29,120
and then i turn on this technology that

701
00:19:27,679 --> 00:19:31,840
i call linux distro

702
00:19:29,120 --> 00:19:32,719
linux distro is a bunch of human beings

703
00:19:31,840 --> 00:19:35,199
that have

704
00:19:32,720 --> 00:19:36,559
subject matter expertise in a bunch of

705
00:19:35,200 --> 00:19:38,720
different pieces of software

706
00:19:36,559 --> 00:19:40,320
that compile all this software into one

707
00:19:38,720 --> 00:19:41,440
giant repository

708
00:19:40,320 --> 00:19:42,960
and then they build out all the

709
00:19:41,440 --> 00:19:44,480
dependencies for that and it's a

710
00:19:42,960 --> 00:19:46,480
nightmare and honestly

711
00:19:44,480 --> 00:19:47,919
like except for operating system people

712
00:19:46,480 --> 00:19:49,520
and linux distro people

713
00:19:47,919 --> 00:19:51,280
nobody wants to do that work right like

714
00:19:49,520 --> 00:19:52,559
as a developer i'm trying to build a php

715
00:19:51,280 --> 00:19:54,399
app i don't want to do that

716
00:19:52,559 --> 00:19:56,559
um i don't have to go to hunt down all

717
00:19:54,400 --> 00:19:57,840
the like glc dependencies or the lib ssl

718
00:19:56,559 --> 00:20:00,960
dependencies things like that

719
00:19:57,840 --> 00:20:03,678
it's a nightmare so um

720
00:20:00,960 --> 00:20:05,360
we've now solved that problem but now we

721
00:20:03,679 --> 00:20:06,000
have linux distro we're back to having a

722
00:20:05,360 --> 00:20:07,678
linux distro

723
00:20:06,000 --> 00:20:09,280
inside of the container image because i

724
00:20:07,679 --> 00:20:10,400
want to have that dependency tree

725
00:20:09,280 --> 00:20:13,600
basically

726
00:20:10,400 --> 00:20:15,280
but that only solves the the bottom up

727
00:20:13,600 --> 00:20:15,840
part of the problem inside the container

728
00:20:15,280 --> 00:20:18,639
image

729
00:20:15,840 --> 00:20:20,158
we still have to worry about like php

730
00:20:18,640 --> 00:20:22,880
you know our python or

731
00:20:20,159 --> 00:20:23,200
or npm for node we still typically end

732
00:20:22,880 --> 00:20:25,039
up

733
00:20:23,200 --> 00:20:26,799
layering on some kind of con you know

734
00:20:25,039 --> 00:20:29,919
application on top like

735
00:20:26,799 --> 00:20:31,360
like pearl python ruby php and almost

736
00:20:29,919 --> 00:20:33,039
all of these languages have their own

737
00:20:31,360 --> 00:20:33,678
dependency their own depth solver in

738
00:20:33,039 --> 00:20:35,280
their own

739
00:20:33,679 --> 00:20:37,200
you know supply chain of you know

740
00:20:35,280 --> 00:20:37,440
dependencies and there's teams that go

741
00:20:37,200 --> 00:20:39,280
and

742
00:20:37,440 --> 00:20:40,799
analyze and you know basically manage

743
00:20:39,280 --> 00:20:42,399
all that and that's a ton of work

744
00:20:40,799 --> 00:20:43,918
um so now you're getting into i got two

745
00:20:42,400 --> 00:20:45,200
different dependency trees i have linux

746
00:20:43,919 --> 00:20:46,320
distro and then i have some language

747
00:20:45,200 --> 00:20:48,080
maybe multiple

748
00:20:46,320 --> 00:20:49,918
um and now i've you know depth solvers

749
00:20:48,080 --> 00:20:52,720
for both and i have to

750
00:20:49,919 --> 00:20:54,400
have access to all of this tooling at

751
00:20:52,720 --> 00:20:55,440
the time that i'm building the container

752
00:20:54,400 --> 00:20:56,799
image basically

753
00:20:55,440 --> 00:21:00,000
it's almost like again you're kind of

754
00:20:56,799 --> 00:21:03,039
back to an operating system install

755
00:21:00,000 --> 00:21:04,240
but uh we go one more layer so this is

756
00:21:03,039 --> 00:21:05,520
really where we get into like the

757
00:21:04,240 --> 00:21:07,280
technologies that are

758
00:21:05,520 --> 00:21:08,720
truly make a container right because if

759
00:21:07,280 --> 00:21:10,799
you think about what a container is it's

760
00:21:08,720 --> 00:21:12,480
it's not much it's a tar file

761
00:21:10,799 --> 00:21:14,480
and it's got a config file and that's

762
00:21:12,480 --> 00:21:16,000
about it and uh and and you could have

763
00:21:14,480 --> 00:21:16,799
multiple tar files depending on how many

764
00:21:16,000 --> 00:21:18,720
layers you have

765
00:21:16,799 --> 00:21:20,480
and then i joke here you know we have

766
00:21:18,720 --> 00:21:21,039
the the open containers initiative

767
00:21:20,480 --> 00:21:23,600
governs

768
00:21:21,039 --> 00:21:24,720
the specification it's an open i don't

769
00:21:23,600 --> 00:21:27,840
know how much how many of you

770
00:21:24,720 --> 00:21:29,440
do you know what oci is not many okay

771
00:21:27,840 --> 00:21:30,959
so open containers initiative is managed

772
00:21:29,440 --> 00:21:32,960
by the linux foundation

773
00:21:30,960 --> 00:21:35,039
it is an open governing board that

774
00:21:32,960 --> 00:21:35,919
basically dictates not dictates but

775
00:21:35,039 --> 00:21:38,879
governs

776
00:21:35,919 --> 00:21:39,200
the um the format of container images

777
00:21:38,880 --> 00:21:40,720
and

778
00:21:39,200 --> 00:21:42,640
actually run times and they actually

779
00:21:40,720 --> 00:21:44,000
have a like sort of a reference

780
00:21:42,640 --> 00:21:46,080
implementation of the runtime

781
00:21:44,000 --> 00:21:47,520
standard which is run c which i don't go

782
00:21:46,080 --> 00:21:49,120
deep in this talk but

783
00:21:47,520 --> 00:21:50,559
this organization is really cool and

784
00:21:49,120 --> 00:21:52,559
that docker gave this to

785
00:21:50,559 --> 00:21:54,000
to this organization there was some

786
00:21:52,559 --> 00:21:55,520
politics at the beginning to get this to

787
00:21:54,000 --> 00:21:57,520
happen but luckily it did happen

788
00:21:55,520 --> 00:21:58,799
and so now at least in the container

789
00:21:57,520 --> 00:22:00,559
format world

790
00:21:58,799 --> 00:22:02,720
we're never going to end up with rpm and

791
00:22:00,559 --> 00:22:04,559
deb we won't have a split thing at least

792
00:22:02,720 --> 00:22:05,200
everybody's going to use this same oci

793
00:22:04,559 --> 00:22:07,120
spec

794
00:22:05,200 --> 00:22:08,480
and and there have actually been a few

795
00:22:07,120 --> 00:22:10,239
others like how many of you have heard

796
00:22:08,480 --> 00:22:12,080
of singularity

797
00:22:10,240 --> 00:22:13,760
singularity is another different format

798
00:22:12,080 --> 00:22:17,600
alexey has its own style or

799
00:22:13,760 --> 00:22:17,600
lex d has their own thing um

800
00:22:20,240 --> 00:22:23,360
oh i didn't know that yeah so there's

801
00:22:22,240 --> 00:22:25,200
still people

802
00:22:23,360 --> 00:22:26,799
nibbling at doing other things but i can

803
00:22:25,200 --> 00:22:28,640
tell you right now at red hat we are

804
00:22:26,799 --> 00:22:31,200
doing this like this is the one that

805
00:22:28,640 --> 00:22:32,880
that everything else if there are there

806
00:22:31,200 --> 00:22:33,840
are down there are downsides to the

807
00:22:32,880 --> 00:22:35,919
specification i

808
00:22:33,840 --> 00:22:37,520
alex sarai from soos has a great talk

809
00:22:35,919 --> 00:22:38,720
where he talks about all the downsides

810
00:22:37,520 --> 00:22:40,480
of the current technology that we

811
00:22:38,720 --> 00:22:42,080
selected for basically container images

812
00:22:40,480 --> 00:22:43,520
and he has all these solutions but it's

813
00:22:42,080 --> 00:22:44,559
going to be like the next 20 years to

814
00:22:43,520 --> 00:22:46,879
get any of them done

815
00:22:44,559 --> 00:22:48,399
because we have a working standard um

816
00:22:46,880 --> 00:22:49,919
i'm even seeing in my world where people

817
00:22:48,400 --> 00:22:51,919
are less interested in singularity and

818
00:22:49,919 --> 00:22:53,360
more interested in oci containers

819
00:22:51,919 --> 00:22:55,120
especially in the last year like it

820
00:22:53,360 --> 00:22:56,639
started to change whereas before i think

821
00:22:55,120 --> 00:22:58,879
people didn't they didn't realize

822
00:22:56,640 --> 00:23:00,080
the beauty of having one container spec

823
00:22:58,880 --> 00:23:01,679
is that i can have one piece of

824
00:23:00,080 --> 00:23:03,039
infrastructure i can have one registry

825
00:23:01,679 --> 00:23:05,919
server that has everything in it

826
00:23:03,039 --> 00:23:06,640
in fact we even i think cnv or cooper

827
00:23:05,919 --> 00:23:09,360
can even pull

828
00:23:06,640 --> 00:23:10,720
virtual machine images from within a uh

829
00:23:09,360 --> 00:23:12,399
within an oci

830
00:23:10,720 --> 00:23:14,480
basically image file and i know for a

831
00:23:12,400 --> 00:23:15,840
fact core os in openshift4

832
00:23:14,480 --> 00:23:17,440
i don't i don't know how many of you

833
00:23:15,840 --> 00:23:19,120
have heard of core os but it's the it's

834
00:23:17,440 --> 00:23:19,760
the basic distribution of rel that we

835
00:23:19,120 --> 00:23:21,840
snapshot

836
00:23:19,760 --> 00:23:23,360
for openshift and uh it's a it's a

837
00:23:21,840 --> 00:23:25,360
read-only operating system it actually

838
00:23:23,360 --> 00:23:25,918
pulls down its updates as container

839
00:23:25,360 --> 00:23:27,439
images

840
00:23:25,919 --> 00:23:29,600
lays them out on disk and then updates

841
00:23:27,440 --> 00:23:31,440
the os so like we're moving to this for

842
00:23:29,600 --> 00:23:32,799
basically if you look at openshift4 it

843
00:23:31,440 --> 00:23:34,400
needs one thing it needs a container

844
00:23:32,799 --> 00:23:35,039
registry that's all it needs to manage

845
00:23:34,400 --> 00:23:36,400
openshift

846
00:23:35,039 --> 00:23:39,039
it even manages the operating system

847
00:23:36,400 --> 00:23:41,120
updates as container reviews so

848
00:23:39,039 --> 00:23:42,158
but this can these container images are

849
00:23:41,120 --> 00:23:43,840
basically

850
00:23:42,159 --> 00:23:45,200
a bunch of metadata and some

851
00:23:43,840 --> 00:23:48,158
architecture specific stuff

852
00:23:45,200 --> 00:23:49,120
all stuffed in a config file um and then

853
00:23:48,159 --> 00:23:50,559
basically we

854
00:23:49,120 --> 00:23:52,320
basically just put that in with the

855
00:23:50,559 --> 00:23:53,360
image layer side by side and then the

856
00:23:52,320 --> 00:23:54,799
container engine

857
00:23:53,360 --> 00:23:56,639
which i won't go deep into it but when

858
00:23:54,799 --> 00:23:59,360
it pulls down the container uh

859
00:23:56,640 --> 00:24:01,360
image and runs it it knows how to digest

860
00:23:59,360 --> 00:24:03,039
digest these variables that the image

861
00:24:01,360 --> 00:24:04,320
builder has put inside of the container

862
00:24:03,039 --> 00:24:05,679
image um

863
00:24:04,320 --> 00:24:07,279
but now this is kind of all the

864
00:24:05,679 --> 00:24:07,760
technologies working together to make

865
00:24:07,279 --> 00:24:09,039
something

866
00:24:07,760 --> 00:24:10,480
you know basically a manageable

867
00:24:09,039 --> 00:24:12,000
container image that will work that will

868
00:24:10,480 --> 00:24:14,240
be constructive and we can use

869
00:24:12,000 --> 00:24:15,679
over over an operational life cycle like

870
00:24:14,240 --> 00:24:18,720
three years or two years or

871
00:24:15,679 --> 00:24:20,400
five years or longer sometimes i i still

872
00:24:18,720 --> 00:24:22,240
i still hold to the fact that people

873
00:24:20,400 --> 00:24:23,760
will use technology more than they

874
00:24:22,240 --> 00:24:25,600
for a longer period than they want to

875
00:24:23,760 --> 00:24:26,400
like the container world is under this

876
00:24:25,600 --> 00:24:28,080
impression that we

877
00:24:26,400 --> 00:24:29,440
we move fast so we will only have things

878
00:24:28,080 --> 00:24:30,158
for like a year or six months but in

879
00:24:29,440 --> 00:24:31,440
reality

880
00:24:30,159 --> 00:24:32,720
i guarantee there will be container

881
00:24:31,440 --> 00:24:34,240
images that are like 10 years old and

882
00:24:32,720 --> 00:24:35,760
they'll keep rebuilding them until

883
00:24:34,240 --> 00:24:38,480
until whatever bits you have in there

884
00:24:35,760 --> 00:24:41,679
are not updatable anymore

885
00:24:38,480 --> 00:24:43,840
all right so then the this opens us up

886
00:24:41,679 --> 00:24:44,960
the fact that containers are also

887
00:24:43,840 --> 00:24:47,279
layerable so

888
00:24:44,960 --> 00:24:48,720
so the way container images work is that

889
00:24:47,279 --> 00:24:50,720
that config file

890
00:24:48,720 --> 00:24:51,760
points to like what layers make up that

891
00:24:50,720 --> 00:24:53,039
container image and then when the

892
00:24:51,760 --> 00:24:54,000
container engine goes and pulls down

893
00:24:53,039 --> 00:24:56,240
that config file

894
00:24:54,000 --> 00:24:57,679
and it looks and it says oh i need this

895
00:24:56,240 --> 00:24:58,320
layer this layer this layer pulls those

896
00:24:57,679 --> 00:25:00,080
layers down

897
00:24:58,320 --> 00:25:01,678
and then it lays them over each other so

898
00:25:00,080 --> 00:25:02,799
like if you want to delete a file you

899
00:25:01,679 --> 00:25:04,559
actually have to

900
00:25:02,799 --> 00:25:06,000
it this is another one that alexis

901
00:25:04,559 --> 00:25:07,200
wright does he rants about he's like

902
00:25:06,000 --> 00:25:08,880
when you want to delete a file the

903
00:25:07,200 --> 00:25:09,840
container image doesn't get smaller it

904
00:25:08,880 --> 00:25:11,279
gets bigger

905
00:25:09,840 --> 00:25:12,879
because you have to write metadata

906
00:25:11,279 --> 00:25:14,400
saying you deleted the file in the layer

907
00:25:12,880 --> 00:25:16,640
below so like say you have a

908
00:25:14,400 --> 00:25:17,520
five gig you know iso image in the in

909
00:25:16,640 --> 00:25:19,039
the base image

910
00:25:17,520 --> 00:25:20,799
and then you delete it in another

911
00:25:19,039 --> 00:25:22,720
container you know layer on top

912
00:25:20,799 --> 00:25:24,879
you will now have five gigs still there

913
00:25:22,720 --> 00:25:26,240
plus like the the metadata pointing back

914
00:25:24,880 --> 00:25:26,720
that says hey i deleted the five gig

915
00:25:26,240 --> 00:25:28,960
file

916
00:25:26,720 --> 00:25:30,559
it doesn't go away so there's some

917
00:25:28,960 --> 00:25:33,360
there's some good and bad things to this

918
00:25:30,559 --> 00:25:35,039
um you can do things and i'll show you

919
00:25:33,360 --> 00:25:37,360
at the end where you can delegate

920
00:25:35,039 --> 00:25:38,720
to different specialists like say

921
00:25:37,360 --> 00:25:39,678
historically you've always had sort of

922
00:25:38,720 --> 00:25:42,159
sysadmins

923
00:25:39,679 --> 00:25:43,760
dbas java specialists you can start to

924
00:25:42,159 --> 00:25:45,200
delegate some of the work in different

925
00:25:43,760 --> 00:25:46,080
layers to different teams and let them

926
00:25:45,200 --> 00:25:47,760
add things

927
00:25:46,080 --> 00:25:49,918
but it also has some downsides if you

928
00:25:47,760 --> 00:25:51,679
don't do it right so in this one i

929
00:25:49,919 --> 00:25:53,440
point out i don't have names for all

930
00:25:51,679 --> 00:25:55,520
these problems but this is like the

931
00:25:53,440 --> 00:25:56,720
this is like the i've overwritten

932
00:25:55,520 --> 00:25:58,400
something without realizing and i've

933
00:25:56,720 --> 00:26:00,720
actually increased my attack surface

934
00:25:58,400 --> 00:26:02,720
so in this one what i'm showing is this

935
00:26:00,720 --> 00:26:04,159
person built a container image on top of

936
00:26:02,720 --> 00:26:05,679
this person's like this might be like

937
00:26:04,159 --> 00:26:06,640
the operating system team built some

938
00:26:05,679 --> 00:26:08,400
base image

939
00:26:06,640 --> 00:26:09,679
then this team came in and built another

940
00:26:08,400 --> 00:26:12,880
one that where they override

941
00:26:09,679 --> 00:26:14,960
wrote apache or nginx and then but they

942
00:26:12,880 --> 00:26:16,799
didn't overwrite glib c so at least if i

943
00:26:14,960 --> 00:26:18,480
go if the if this team goes and patches

944
00:26:16,799 --> 00:26:20,240
glibc this team will inherit it

945
00:26:18,480 --> 00:26:22,000
but then this team said they needed some

946
00:26:20,240 --> 00:26:23,679
other live ssl that was newer that had

947
00:26:22,000 --> 00:26:25,279
some or compiled in a different way that

948
00:26:23,679 --> 00:26:25,919
had some other encryption options or who

949
00:26:25,279 --> 00:26:27,279
knows what

950
00:26:25,919 --> 00:26:29,279
and then this team needed a different

951
00:26:27,279 --> 00:26:30,960
glib c for who knows why

952
00:26:29,279 --> 00:26:32,320
and the problem here now is that like

953
00:26:30,960 --> 00:26:34,240
when this person rebuilds

954
00:26:32,320 --> 00:26:36,080
lib ssl this person doesn't get that

955
00:26:34,240 --> 00:26:37,520
update and when this person really

956
00:26:36,080 --> 00:26:39,439
you know rebuilds glc this person

957
00:26:37,520 --> 00:26:41,360
doesn't and so this image might have

958
00:26:39,440 --> 00:26:42,720
cves that show up that aren't in this

959
00:26:41,360 --> 00:26:44,559
one and aren't in this one and

960
00:26:42,720 --> 00:26:45,919
aren't in this one and so you end up

961
00:26:44,559 --> 00:26:47,918
with this layering problem where you

962
00:26:45,919 --> 00:26:49,600
have this like cascading effect

963
00:26:47,919 --> 00:26:51,120
and uh you have to really think through

964
00:26:49,600 --> 00:26:52,080
this and i've seen i've seen some

965
00:26:51,120 --> 00:26:54,799
organizations have

966
00:26:52,080 --> 00:26:55,678
very very complex supply chains where it

967
00:26:54,799 --> 00:26:57,918
might be you know

968
00:26:55,679 --> 00:26:59,360
35 different you know branches to the

969
00:26:57,919 --> 00:27:01,600
tree and they're very complex and then

970
00:26:59,360 --> 00:27:03,120
they have to figure out

971
00:27:01,600 --> 00:27:04,639
what it insecure computer security would

972
00:27:03,120 --> 00:27:06,959
call non-repudiation

973
00:27:04,640 --> 00:27:08,480
where this team says we didn't add it it

974
00:27:06,960 --> 00:27:10,080
must have been the team ahead of us

975
00:27:08,480 --> 00:27:11,600
and it has some trojan in the image

976
00:27:10,080 --> 00:27:13,279
right and then you're like who added it

977
00:27:11,600 --> 00:27:14,719
you can only point to the next person in

978
00:27:13,279 --> 00:27:15,760
the chain and say it was somebody above

979
00:27:14,720 --> 00:27:17,200
me it wasn't me

980
00:27:15,760 --> 00:27:19,360
and uh there's no there's plausible

981
00:27:17,200 --> 00:27:21,279
deniability if you don't have

982
00:27:19,360 --> 00:27:22,639
basically non-repudiation so sometimes

983
00:27:21,279 --> 00:27:25,360
people will do things like

984
00:27:22,640 --> 00:27:26,960
put a signed file in that container

985
00:27:25,360 --> 00:27:28,080
image layer to verify essentially to

986
00:27:26,960 --> 00:27:29,840
verify that that team

987
00:27:28,080 --> 00:27:31,439
actually put that together it's not

988
00:27:29,840 --> 00:27:34,000
super perfect but it's better than

989
00:27:31,440 --> 00:27:35,120
having no idea who did what um so so

990
00:27:34,000 --> 00:27:36,799
this is kind of what the

991
00:27:35,120 --> 00:27:39,199
container images in their full glory

992
00:27:36,799 --> 00:27:39,200
look like

993
00:27:40,880 --> 00:27:47,600
so also i already talked through layers

994
00:27:45,360 --> 00:27:49,279
but with image layers you basically get

995
00:27:47,600 --> 00:27:51,199
to communicate to the end user

996
00:27:49,279 --> 00:27:52,399
you know like what what these different

997
00:27:51,200 --> 00:27:54,159
layers mean and you can think about

998
00:27:52,399 --> 00:27:54,799
these as basically human constructs

999
00:27:54,159 --> 00:27:57,279
right like

1000
00:27:54,799 --> 00:27:58,720
these are arbitrary there's no the oci

1001
00:27:57,279 --> 00:28:00,240
doesn't govern what you put in these

1002
00:27:58,720 --> 00:28:01,200
images so i've seen people do nasty

1003
00:28:00,240 --> 00:28:03,039
stuff where they have like

1004
00:28:01,200 --> 00:28:04,720
apache configured one way and apache

1005
00:28:03,039 --> 00:28:06,399
configured another way and they branch

1006
00:28:04,720 --> 00:28:07,120
and it'll be like apache one apache two

1007
00:28:06,399 --> 00:28:08,639
and they'll have like

1008
00:28:07,120 --> 00:28:10,239
different configs embedded in this you

1009
00:28:08,640 --> 00:28:11,279
can do that i would not recommend it but

1010
00:28:10,240 --> 00:28:13,360
you can do that

1011
00:28:11,279 --> 00:28:14,399
um this latest tag is the only one

1012
00:28:13,360 --> 00:28:16,320
that's governed

1013
00:28:14,399 --> 00:28:17,918
but these don't have to be numbers in

1014
00:28:16,320 --> 00:28:20,000
this case i show that

1015
00:28:17,919 --> 00:28:22,159
and i try to explain this as this is a

1016
00:28:20,000 --> 00:28:23,760
way for the container image builder

1017
00:28:22,159 --> 00:28:25,760
to communicate to the container image

1018
00:28:23,760 --> 00:28:26,320
consumer how they should consume the

1019
00:28:25,760 --> 00:28:27,520
image

1020
00:28:26,320 --> 00:28:30,799
and really what this is about

1021
00:28:27,520 --> 00:28:31,600
simplifying the the the api surface of

1022
00:28:30,799 --> 00:28:33,120
the thing that you're getting right

1023
00:28:31,600 --> 00:28:34,959
you're like hey here's a container

1024
00:28:33,120 --> 00:28:36,320
image i i don't know which layers are

1025
00:28:34,960 --> 00:28:38,080
usable you know but

1026
00:28:36,320 --> 00:28:39,360
there could be 25 layers but i'm going

1027
00:28:38,080 --> 00:28:40,639
to label a few of them so that the end

1028
00:28:39,360 --> 00:28:42,320
user knows how to you know what they

1029
00:28:40,640 --> 00:28:45,600
should be consuming and why

1030
00:28:42,320 --> 00:28:48,480
it makes it more intuitive um

1031
00:28:45,600 --> 00:28:49,600
and i already talked about um you know

1032
00:28:48,480 --> 00:28:51,679
like these layers

1033
00:28:49,600 --> 00:28:53,678
kind of come together and then i give a

1034
00:28:51,679 --> 00:28:54,159
quick overview here of like how this

1035
00:28:53,679 --> 00:28:55,600
gets

1036
00:28:54,159 --> 00:28:57,360
at run time what happens so this is the

1037
00:28:55,600 --> 00:28:58,719
container engine this is docker or pod

1038
00:28:57,360 --> 00:29:01,279
man or cryo

1039
00:28:58,720 --> 00:29:03,360
um cryo cryo any container engine has

1040
00:29:01,279 --> 00:29:05,039
three jobs basically it's uh

1041
00:29:03,360 --> 00:29:06,639
it's basically to build this config file

1042
00:29:05,039 --> 00:29:07,600
as one of the main jobs and what it does

1043
00:29:06,640 --> 00:29:09,360
to do

1044
00:29:07,600 --> 00:29:10,879
to build this config file that then gets

1045
00:29:09,360 --> 00:29:12,320
handed off to run c to then basically

1046
00:29:10,880 --> 00:29:12,799
talk to the kernel and run a container

1047
00:29:12,320 --> 00:29:15,120
is

1048
00:29:12,799 --> 00:29:16,720
it actually uses the default variables

1049
00:29:15,120 --> 00:29:17,360
that were embedded inside the container

1050
00:29:16,720 --> 00:29:18,799
image

1051
00:29:17,360 --> 00:29:20,639
and then it will add user options so

1052
00:29:18,799 --> 00:29:23,520
like say you say podman run

1053
00:29:20,640 --> 00:29:24,559
p 8080 colon 80 and you like map port

1054
00:29:23,520 --> 00:29:25,600
8080 to 80

1055
00:29:24,559 --> 00:29:26,960
when you're running container image

1056
00:29:25,600 --> 00:29:28,158
that's basically these user options that

1057
00:29:26,960 --> 00:29:29,600
would override

1058
00:29:28,159 --> 00:29:31,279
any port settings that maybe you had

1059
00:29:29,600 --> 00:29:33,918
embedded in the container

1060
00:29:31,279 --> 00:29:35,440
and then the engine itself will add all

1061
00:29:33,919 --> 00:29:37,440
kinds of other things like se linux

1062
00:29:35,440 --> 00:29:39,279
rules or set comp rules or

1063
00:29:37,440 --> 00:29:40,960
there's all if you look at a config file

1064
00:29:39,279 --> 00:29:42,799
which i don't do a demo in this one but

1065
00:29:40,960 --> 00:29:45,279
if you look at a config file it's you

1066
00:29:42,799 --> 00:29:46,559
know 400 lines long and it has all these

1067
00:29:45,279 --> 00:29:47,760
set comp rules and all these things that

1068
00:29:46,559 --> 00:29:50,639
the container engine

1069
00:29:47,760 --> 00:29:52,640
itself adds in and then and then finally

1070
00:29:50,640 --> 00:29:54,000
it passes this config file off to run c

1071
00:29:52,640 --> 00:29:57,039
which i mentioned is the the

1072
00:29:54,000 --> 00:29:58,799
oci uh reference implementation for

1073
00:29:57,039 --> 00:29:59,679
container run time and both podman and

1074
00:29:58,799 --> 00:30:01,600
docker and cryo

1075
00:29:59,679 --> 00:30:02,960
all three of them use and container d

1076
00:30:01,600 --> 00:30:03,760
basically everybody in the world uses

1077
00:30:02,960 --> 00:30:05,279
run c

1078
00:30:03,760 --> 00:30:06,879
and so you hand this config file off to

1079
00:30:05,279 --> 00:30:09,200
run c and then run c talks to the kernel

1080
00:30:06,880 --> 00:30:11,760
to fire up a container

1081
00:30:09,200 --> 00:30:12,320
um i i kind of mentioned that already

1082
00:30:11,760 --> 00:30:14,879
but but

1083
00:30:12,320 --> 00:30:16,879
i also show here how it can get you know

1084
00:30:14,880 --> 00:30:19,360
in this one i i showed basically a

1085
00:30:16,880 --> 00:30:20,960
smaller tree but this is getting now

1086
00:30:19,360 --> 00:30:22,559
what it really starts to look like in a

1087
00:30:20,960 --> 00:30:23,200
real environment right like we may have

1088
00:30:22,559 --> 00:30:26,399
like

1089
00:30:23,200 --> 00:30:27,919
a a um operating systems team that kind

1090
00:30:26,399 --> 00:30:29,600
of builds a base image you know

1091
00:30:27,919 --> 00:30:31,440
basically pulls down say a debian image

1092
00:30:29,600 --> 00:30:31,918
or a fedora image or sent to us or

1093
00:30:31,440 --> 00:30:33,919
whatever

1094
00:30:31,919 --> 00:30:35,200
well and then add some things that they

1095
00:30:33,919 --> 00:30:37,039
think they want that are kind of

1096
00:30:35,200 --> 00:30:38,799
standard things that they'd like to have

1097
00:30:37,039 --> 00:30:40,559
um and then you know you start to

1098
00:30:38,799 --> 00:30:42,000
specialize like this might be an apache

1099
00:30:40,559 --> 00:30:43,440
team this might be an engine x team this

1100
00:30:42,000 --> 00:30:45,200
might be a mysqrell team

1101
00:30:43,440 --> 00:30:48,559
um and this is where we start to like

1102
00:30:45,200 --> 00:30:51,919
break things out you know by smes right

1103
00:30:48,559 --> 00:30:53,918
but as you start the reason why i'm

1104
00:30:51,919 --> 00:30:55,679
boring you with all these details is you

1105
00:30:53,919 --> 00:30:57,440
start to realize there's a lot of

1106
00:30:55,679 --> 00:30:59,279
other problems i should be working and

1107
00:30:57,440 --> 00:31:01,039
thinking about then just like

1108
00:30:59,279 --> 00:31:03,039
like i shouldn't be like questioning

1109
00:31:01,039 --> 00:31:05,039
whether i'm gonna use yum and

1110
00:31:03,039 --> 00:31:06,879
rubygems and npn right i should be

1111
00:31:05,039 --> 00:31:08,559
thinking there's i have to think through

1112
00:31:06,880 --> 00:31:10,240
all these layers of things and to be

1113
00:31:08,559 --> 00:31:10,960
very honest i'd rather spend more of my

1114
00:31:10,240 --> 00:31:12,960
time here

1115
00:31:10,960 --> 00:31:14,720
i'd rather spend more of my time like

1116
00:31:12,960 --> 00:31:15,120
setting up a ci cd system and figuring

1117
00:31:14,720 --> 00:31:17,200
out how

1118
00:31:15,120 --> 00:31:18,879
i can make this like centos container

1119
00:31:17,200 --> 00:31:20,320
image build over and over for five years

1120
00:31:18,880 --> 00:31:22,240
without having to think about it

1121
00:31:20,320 --> 00:31:23,840
and so like that's where i got to like

1122
00:31:22,240 --> 00:31:25,360
the life cycle matters because the life

1123
00:31:23,840 --> 00:31:26,158
cycle of the linux distro in the

1124
00:31:25,360 --> 00:31:27,760
container image

1125
00:31:26,159 --> 00:31:29,679
essentially governs how long i can let

1126
00:31:27,760 --> 00:31:31,360
this thing run in the ci cd system

1127
00:31:29,679 --> 00:31:32,720
constantly rebuilding and always like

1128
00:31:31,360 --> 00:31:33,600
actually having the updates it needs to

1129
00:31:32,720 --> 00:31:36,159
have security

1130
00:31:33,600 --> 00:31:36,799
performance etc but in a nutshell i want

1131
00:31:36,159 --> 00:31:38,159
to focus

1132
00:31:36,799 --> 00:31:39,918
i want to focus most of my time and

1133
00:31:38,159 --> 00:31:41,840
attention up here not down here

1134
00:31:39,919 --> 00:31:44,880
so obviously like an operating system

1135
00:31:41,840 --> 00:31:47,199
still matters even in a container image

1136
00:31:44,880 --> 00:31:48,399
all right so i mentioned like some of

1137
00:31:47,200 --> 00:31:51,200
the problems that like

1138
00:31:48,399 --> 00:31:52,719
these things solve right the just having

1139
00:31:51,200 --> 00:31:54,399
a container image starts to help the

1140
00:31:52,720 --> 00:31:56,640
works on my laptop problem

1141
00:31:54,399 --> 00:31:58,239
because i did bundle all those things

1142
00:31:56,640 --> 00:32:00,080
together right like i bundled

1143
00:31:58,240 --> 00:32:01,600
the you know the php and everything

1144
00:32:00,080 --> 00:32:03,120
together and if i test

1145
00:32:01,600 --> 00:32:04,959
that construct that i call it like a

1146
00:32:03,120 --> 00:32:06,158
jiggly stack of software right like all

1147
00:32:04,960 --> 00:32:06,720
the different versions of these things

1148
00:32:06,159 --> 00:32:08,880
can

1149
00:32:06,720 --> 00:32:10,559
change but once i've cemented them in a

1150
00:32:08,880 --> 00:32:12,799
container image at least i know

1151
00:32:10,559 --> 00:32:14,320
i snapshot it's almost like a core build

1152
00:32:12,799 --> 00:32:15,039
like we used to do back in the day or we

1153
00:32:14,320 --> 00:32:16,639
still do

1154
00:32:15,039 --> 00:32:18,240
um you know but i have it safe forever

1155
00:32:16,640 --> 00:32:19,840
now i can run on my laptop

1156
00:32:18,240 --> 00:32:21,600
move it into production i pretty much

1157
00:32:19,840 --> 00:32:22,399
know it's gonna work like i pretty much

1158
00:32:21,600 --> 00:32:24,879
know it's gonna work

1159
00:32:22,399 --> 00:32:26,719
there's some caveats depending on people

1160
00:32:24,880 --> 00:32:28,159
will mix and match i'm not a big fan of

1161
00:32:26,720 --> 00:32:30,559
that they'll be running like

1162
00:32:28,159 --> 00:32:31,919
ubuntu here and they'll run rel here i'm

1163
00:32:30,559 --> 00:32:33,678
not a big fan of that because if you're

1164
00:32:31,919 --> 00:32:34,480
running binaries from one linux distro

1165
00:32:33,679 --> 00:32:36,960
and another

1166
00:32:34,480 --> 00:32:38,399
i do prefer let's say in this scenario

1167
00:32:36,960 --> 00:32:39,760
you're using or you know a red hat

1168
00:32:38,399 --> 00:32:41,760
universal base image

1169
00:32:39,760 --> 00:32:43,760
on an ubuntu laptop and then you move it

1170
00:32:41,760 --> 00:32:44,799
over to rel i like that better than

1171
00:32:43,760 --> 00:32:46,960
going the other way

1172
00:32:44,799 --> 00:32:48,799
because like if it ran on ubuntu in

1173
00:32:46,960 --> 00:32:50,320
development it will only run

1174
00:32:48,799 --> 00:32:52,399
as good or better on the operating

1175
00:32:50,320 --> 00:32:54,240
system than it was basically compiled on

1176
00:32:52,399 --> 00:32:55,918
and so i think there's a there's less

1177
00:32:54,240 --> 00:32:57,120
danger going from like something that

1178
00:32:55,919 --> 00:32:58,640
wasn't compatible to something that we

1179
00:32:57,120 --> 00:32:59,678
know is for sure commendable but going

1180
00:32:58,640 --> 00:33:00,880
the other way i think is a very

1181
00:32:59,679 --> 00:33:02,880
dangerous way like like

1182
00:33:00,880 --> 00:33:04,480
i suggest people i typically suggest to

1183
00:33:02,880 --> 00:33:06,080
people to you know if you're going to

1184
00:33:04,480 --> 00:33:07,679
have an ubuntu server run an ubuntu

1185
00:33:06,080 --> 00:33:09,199
server image because you know those

1186
00:33:07,679 --> 00:33:10,080
binaries were compiled with that kernel

1187
00:33:09,200 --> 00:33:12,480
and you know all the

1188
00:33:10,080 --> 00:33:13,439
like for example with rel sc linux

1189
00:33:12,480 --> 00:33:14,720
everything is dialed in

1190
00:33:13,440 --> 00:33:16,320
everything is like the way it should be

1191
00:33:14,720 --> 00:33:17,360
in those binaries and so you know things

1192
00:33:16,320 --> 00:33:18,639
won't break

1193
00:33:17,360 --> 00:33:20,399
which we've seen that happen that's

1194
00:33:18,640 --> 00:33:23,600
probably been the biggest

1195
00:33:20,399 --> 00:33:25,678
one of the problems i saw was like a a

1196
00:33:23,600 --> 00:33:27,120
an ubuntu image was ran on ubuntu and

1197
00:33:25,679 --> 00:33:28,000
then they moved it over to centos in

1198
00:33:27,120 --> 00:33:30,080
production

1199
00:33:28,000 --> 00:33:31,360
and the centos had se linux turned on

1200
00:33:30,080 --> 00:33:32,799
and then basically

1201
00:33:31,360 --> 00:33:35,039
the binaries that were compiled in

1202
00:33:32,799 --> 00:33:37,200
ubuntu actually had se linux options

1203
00:33:35,039 --> 00:33:38,720
on which nobody knew and then they like

1204
00:33:37,200 --> 00:33:40,640
came on and broke the binaries but there

1205
00:33:38,720 --> 00:33:42,000
was no way to like change it around

1206
00:33:40,640 --> 00:33:44,720
in in the container image because the

1207
00:33:42,000 --> 00:33:44,720
tools were not there

1208
00:33:45,039 --> 00:33:50,879
does that make sense to everyone so

1209
00:33:48,559 --> 00:33:52,399
another problem i mentioned was i

1210
00:33:50,880 --> 00:33:54,000
mentioned the my

1211
00:33:52,399 --> 00:33:55,279
you know my containers like i'm in a big

1212
00:33:54,000 --> 00:33:56,799
kubernetes environment they just keep

1213
00:33:55,279 --> 00:33:58,720
scaling out right like and

1214
00:33:56,799 --> 00:34:00,399
i could still get like say when i first

1215
00:33:58,720 --> 00:34:02,480
put the application into production i

1216
00:34:00,399 --> 00:34:04,479
need a million transactions per second

1217
00:34:02,480 --> 00:34:06,080
um you know i might be able to achieve

1218
00:34:04,480 --> 00:34:08,000
that on day one but how do i

1219
00:34:06,080 --> 00:34:10,239
maintain like a million transactions per

1220
00:34:08,000 --> 00:34:12,000
second and and you know like i mentioned

1221
00:34:10,239 --> 00:34:13,839
on day one i might deploy

1222
00:34:12,000 --> 00:34:15,280
a thousand containers to achieve a

1223
00:34:13,839 --> 00:34:16,159
million transactions per second that's

1224
00:34:15,280 --> 00:34:17,280
the way you start to think in a

1225
00:34:16,159 --> 00:34:19,200
kubernetes environment

1226
00:34:17,280 --> 00:34:21,520
but then like three years from then i

1227
00:34:19,199 --> 00:34:23,279
might have like 1500 containers running

1228
00:34:21,520 --> 00:34:25,440
to get the same million transactions per

1229
00:34:23,280 --> 00:34:27,440
second and nobody will ever notice no

1230
00:34:25,440 --> 00:34:28,639
there's no like monitoring or fault

1231
00:34:27,440 --> 00:34:30,320
you know management that we use that

1232
00:34:28,639 --> 00:34:31,200
would ever catch that that would just be

1233
00:34:30,320 --> 00:34:32,639
like decay

1234
00:34:31,199 --> 00:34:34,239
in whatever you had in that container

1235
00:34:32,639 --> 00:34:35,839
image you might have made a config file

1236
00:34:34,239 --> 00:34:38,719
change at some point that then made

1237
00:34:35,839 --> 00:34:40,159
it you know made it need 33 more

1238
00:34:38,719 --> 00:34:41,678
resources or you might have made some

1239
00:34:40,159 --> 00:34:42,800
ssl change that was like

1240
00:34:41,679 --> 00:34:44,320
you know caused it to use a different

1241
00:34:42,800 --> 00:34:45,359
algorithm that was less efficient or the

1242
00:34:44,320 --> 00:34:46,879
operating system could have

1243
00:34:45,359 --> 00:34:48,560
updated a binary in there and then

1244
00:34:46,879 --> 00:34:49,359
things broke down the road and caused it

1245
00:34:48,560 --> 00:34:51,279
to use more

1246
00:34:49,359 --> 00:34:53,119
you know resources so this these

1247
00:34:51,280 --> 00:34:54,240
problems get very tricky when you start

1248
00:34:53,119 --> 00:34:55,839
to move them into

1249
00:34:54,239 --> 00:34:59,279
into you know essentially a distributed

1250
00:34:55,839 --> 00:34:59,279
systems environment like kubernetes

1251
00:34:59,920 --> 00:35:03,839
and so again i i suggest offloading that

1252
00:35:02,400 --> 00:35:05,359
problem to an operating system or to

1253
00:35:03,839 --> 00:35:07,440
like a linux distro because the linux

1254
00:35:05,359 --> 00:35:10,640
distro is good at doing this already

1255
00:35:07,440 --> 00:35:11,920
um another one is is i you know the

1256
00:35:10,640 --> 00:35:13,040
million transactions for a second then i

1257
00:35:11,920 --> 00:35:15,200
have the hacker

1258
00:35:13,040 --> 00:35:16,640
um works on my laptop doesn't help you

1259
00:35:15,200 --> 00:35:17,680
with performance or security

1260
00:35:16,640 --> 00:35:18,960
like just because it works on your

1261
00:35:17,680 --> 00:35:20,319
laptop does not mean it doesn't get

1262
00:35:18,960 --> 00:35:21,280
hacked two seconds after you put into

1263
00:35:20,320 --> 00:35:23,200
production right

1264
00:35:21,280 --> 00:35:25,119
so how do you how do you even how do you

1265
00:35:23,200 --> 00:35:26,078
even have any kind of warm and fuzzy

1266
00:35:25,119 --> 00:35:26,800
feeling that it's not going to get

1267
00:35:26,079 --> 00:35:28,560
hacked

1268
00:35:26,800 --> 00:35:30,480
you know you can like compile it

1269
00:35:28,560 --> 00:35:31,520
yourself and be like well i think i know

1270
00:35:30,480 --> 00:35:32,800
this stuff pretty well

1271
00:35:31,520 --> 00:35:34,400
or you can use something that like the

1272
00:35:32,800 --> 00:35:35,599
linux distro is already building and

1273
00:35:34,400 --> 00:35:36,880
you're like well there's a whole bunch

1274
00:35:35,599 --> 00:35:37,680
of other people using it and they're not

1275
00:35:36,880 --> 00:35:39,599
getting hacked

1276
00:35:37,680 --> 00:35:40,720
so now i have precedent that i probably

1277
00:35:39,599 --> 00:35:42,960
won't get hacked also

1278
00:35:40,720 --> 00:35:44,879
so it's another nuanced reason to think

1279
00:35:42,960 --> 00:35:47,599
about using a contain you know a linux

1280
00:35:44,880 --> 00:35:49,680
distro in the container image

1281
00:35:47,599 --> 00:35:50,880
um and then here i just break out you

1282
00:35:49,680 --> 00:35:52,319
know there's a whole bunch of other user

1283
00:35:50,880 --> 00:35:53,760
space things you need to think about

1284
00:35:52,320 --> 00:35:55,680
uh with performance especially like

1285
00:35:53,760 --> 00:35:57,280
compute you know there's a ton of work

1286
00:35:55,680 --> 00:35:58,000
that goes into linux distros to make

1287
00:35:57,280 --> 00:36:00,079
sure that basically

1288
00:35:58,000 --> 00:36:01,280
all of these capabilities remain the

1289
00:36:00,079 --> 00:36:03,200
same so like like

1290
00:36:01,280 --> 00:36:04,720
in any linux distro when they bring it

1291
00:36:03,200 --> 00:36:06,720
together for the next version

1292
00:36:04,720 --> 00:36:09,040
they basically compile you know things

1293
00:36:06,720 --> 00:36:11,520
with glibc or whatever compiler they use

1294
00:36:09,040 --> 00:36:13,520
um and then you like start to like make

1295
00:36:11,520 --> 00:36:15,280
little tweaks and kind of set a baseline

1296
00:36:13,520 --> 00:36:17,839
of performance for all these things

1297
00:36:15,280 --> 00:36:18,640
um if you are again doing all this from

1298
00:36:17,839 --> 00:36:20,160
scratch

1299
00:36:18,640 --> 00:36:21,680
every time your ba every time you

1300
00:36:20,160 --> 00:36:22,960
basically make a little tweak to it

1301
00:36:21,680 --> 00:36:25,040
it's almost like you just create a new

1302
00:36:22,960 --> 00:36:26,160
operating system so if you

1303
00:36:25,040 --> 00:36:27,119
if you're back in that model where

1304
00:36:26,160 --> 00:36:28,160
you're like ah we're going to compile

1305
00:36:27,119 --> 00:36:29,520
everything ourselves do all this

1306
00:36:28,160 --> 00:36:31,520
ourselves manage all these things and

1307
00:36:29,520 --> 00:36:32,960
you ma you give that all to the app team

1308
00:36:31,520 --> 00:36:34,720
every different container image in your

1309
00:36:32,960 --> 00:36:35,920
environment is going to have different

1310
00:36:34,720 --> 00:36:37,520
essentially different performance

1311
00:36:35,920 --> 00:36:39,200
characteristics with all these things

1312
00:36:37,520 --> 00:36:41,119
and that can become pretty

1313
00:36:39,200 --> 00:36:42,399
cognitively that can be a pretty heavy

1314
00:36:41,119 --> 00:36:43,680
cognitive load and it can just be

1315
00:36:42,400 --> 00:36:45,520
inefficiency again you're

1316
00:36:43,680 --> 00:36:46,960
it's not a tack surface it's like work

1317
00:36:45,520 --> 00:36:48,480
surface or maintenance surface you're

1318
00:36:46,960 --> 00:36:49,599
creating a huge maintenance surface

1319
00:36:48,480 --> 00:36:50,960
because all these different container

1320
00:36:49,599 --> 00:36:51,599
images may have different performance

1321
00:36:50,960 --> 00:36:53,359
characteristics

1322
00:36:51,599 --> 00:36:54,800
which will inevitably bite you you know

1323
00:36:53,359 --> 00:36:56,640
down the road when when

1324
00:36:54,800 --> 00:36:57,760
it's in production three years from now

1325
00:36:56,640 --> 00:36:59,040
when that team's gone and they don't

1326
00:36:57,760 --> 00:37:00,480
even know how it works anymore

1327
00:36:59,040 --> 00:37:02,079
and it's just sitting there in a cicd

1328
00:37:00,480 --> 00:37:03,520
system being rebuilt and you're like

1329
00:37:02,079 --> 00:37:05,680
it works kind of like but i don't know

1330
00:37:03,520 --> 00:37:07,599
what it is um it's a bad place

1331
00:37:05,680 --> 00:37:10,319
i i already predict this is this is

1332
00:37:07,599 --> 00:37:12,400
happening to people that have done this

1333
00:37:10,320 --> 00:37:13,680
um i talk a little bit about red hat

1334
00:37:12,400 --> 00:37:14,480
universal based image i won't go deep

1335
00:37:13,680 --> 00:37:17,759
but but

1336
00:37:14,480 --> 00:37:20,240
but uh red hat saw this problem like

1337
00:37:17,760 --> 00:37:22,320
so rel historically we had always

1338
00:37:20,240 --> 00:37:24,240
charged a subscription for right and so

1339
00:37:22,320 --> 00:37:25,680
this container will turn my world upside

1340
00:37:24,240 --> 00:37:27,040
down and this has been my life for like

1341
00:37:25,680 --> 00:37:30,399
the last year and a half

1342
00:37:27,040 --> 00:37:31,839
um about a year uh in that in that we

1343
00:37:30,400 --> 00:37:33,920
had to figure out how to basically put

1344
00:37:31,839 --> 00:37:35,520
some real bits out there so people could

1345
00:37:33,920 --> 00:37:36,320
use them to basically do all the things

1346
00:37:35,520 --> 00:37:38,000
i just said

1347
00:37:36,320 --> 00:37:39,760
rely on a linux distro inside of the

1348
00:37:38,000 --> 00:37:41,440
container image while still being able

1349
00:37:39,760 --> 00:37:43,119
to redistribute the linux image

1350
00:37:41,440 --> 00:37:44,960
whereas like historically red hat had

1351
00:37:43,119 --> 00:37:46,400
not let people redistribute rel

1352
00:37:44,960 --> 00:37:47,599
we basically used the trademarks it was

1353
00:37:46,400 --> 00:37:49,280
kind of the only way that we could

1354
00:37:47,599 --> 00:37:50,800
enforce our business model

1355
00:37:49,280 --> 00:37:52,400
that basically allowed a contractual

1356
00:37:50,800 --> 00:37:53,599
agreement because the way red hat's

1357
00:37:52,400 --> 00:37:55,520
business works is we just

1358
00:37:53,599 --> 00:37:57,359
there's no legality like like the

1359
00:37:55,520 --> 00:37:59,280
customer could totally share their

1360
00:37:57,359 --> 00:38:00,880
their their stuff wherever they want but

1361
00:37:59,280 --> 00:38:02,400
they sign a contract that says they

1362
00:38:00,880 --> 00:38:03,359
won't and we sign a contract that says

1363
00:38:02,400 --> 00:38:04,640
we'll give you support

1364
00:38:03,359 --> 00:38:05,920
as long as we both agree to this

1365
00:38:04,640 --> 00:38:07,040
contract that's basically the only

1366
00:38:05,920 --> 00:38:08,480
enforcement we have

1367
00:38:07,040 --> 00:38:09,839
um so we basically created this thing

1368
00:38:08,480 --> 00:38:10,640
called rent out universal base image

1369
00:38:09,839 --> 00:38:12,400
that changes

1370
00:38:10,640 --> 00:38:14,160
that end user license agreement to allow

1371
00:38:12,400 --> 00:38:16,960
people to redistribute them and we did

1372
00:38:14,160 --> 00:38:17,440
introduce like node.js and java and php

1373
00:38:16,960 --> 00:38:21,040
actually we're

1374
00:38:17,440 --> 00:38:22,400
introducing java soon uh php um

1375
00:38:21,040 --> 00:38:24,320
uh a whole bunch of different language

1376
00:38:22,400 --> 00:38:25,920
runtimes and then a bunch of we have

1377
00:38:24,320 --> 00:38:28,400
sort of three standard base images a

1378
00:38:25,920 --> 00:38:30,560
minimal one one that you can run systemd

1379
00:38:28,400 --> 00:38:32,079
inside the containers how many of you

1380
00:38:30,560 --> 00:38:34,960
would think about running systemd

1381
00:38:32,079 --> 00:38:36,640
in a container image all right so some

1382
00:38:34,960 --> 00:38:39,119
people are pretty pragmatic

1383
00:38:36,640 --> 00:38:40,240
personally i i i actually defend this

1384
00:38:39,119 --> 00:38:40,880
even though again i'm kind of a

1385
00:38:40,240 --> 00:38:42,879
curmudgeon

1386
00:38:40,880 --> 00:38:43,920
but there's a lot of you know subject

1387
00:38:42,880 --> 00:38:45,839
matter expertise

1388
00:38:43,920 --> 00:38:47,520
built into that and if you've ever if

1389
00:38:45,839 --> 00:38:48,720
you've ever been tasked with building a

1390
00:38:47,520 --> 00:38:49,920
container image for some piece of

1391
00:38:48,720 --> 00:38:51,200
software that you don't know

1392
00:38:49,920 --> 00:38:53,040
and then you have to figure out how to

1393
00:38:51,200 --> 00:38:54,160
get it to start up with a single line

1394
00:38:53,040 --> 00:38:57,040
it's really annoying

1395
00:38:54,160 --> 00:38:57,839
so like apache you can run like hdbd-d

1396
00:38:57,040 --> 00:38:59,200
background

1397
00:38:57,839 --> 00:39:01,119
and there's a few command line options

1398
00:38:59,200 --> 00:39:02,399
you can pass that demon to run but it's

1399
00:39:01,119 --> 00:39:03,040
annoying because i don't want to go into

1400
00:39:02,400 --> 00:39:05,280
the systemd

1401
00:39:03,040 --> 00:39:06,320
file and like find out how you start all

1402
00:39:05,280 --> 00:39:07,200
these different pieces of software that

1403
00:39:06,320 --> 00:39:09,119
i'm running in containers

1404
00:39:07,200 --> 00:39:10,319
it's much easier in a container image

1405
00:39:09,119 --> 00:39:13,440
build to do yum install

1406
00:39:10,320 --> 00:39:15,040
apache system ctl enable hdbd and to be

1407
00:39:13,440 --> 00:39:17,680
honest i even run mine

1408
00:39:15,040 --> 00:39:18,320
i run even like my blog and all my stuff

1409
00:39:17,680 --> 00:39:20,960
as

1410
00:39:18,320 --> 00:39:22,800
essentially systemd uh ran apache that

1411
00:39:20,960 --> 00:39:24,640
just starts with like two commands

1412
00:39:22,800 --> 00:39:25,839
and then i actually run them read only

1413
00:39:24,640 --> 00:39:27,200
so i actually get systemd

1414
00:39:25,839 --> 00:39:29,119
and apache running in a container

1415
00:39:27,200 --> 00:39:30,399
read-only and so like it's pretty secure

1416
00:39:29,119 --> 00:39:32,240
like it's definitely more secure than

1417
00:39:30,400 --> 00:39:34,400
running on a regular web server so these

1418
00:39:32,240 --> 00:39:35,759
this does not preclude doing really

1419
00:39:34,400 --> 00:39:36,880
serious security things even if you're

1420
00:39:35,760 --> 00:39:38,880
running like systemd

1421
00:39:36,880 --> 00:39:40,480
and anybody that says systemd eats up a

1422
00:39:38,880 --> 00:39:41,280
bunch of resources is probably crazy

1423
00:39:40,480 --> 00:39:42,880
like it's not

1424
00:39:41,280 --> 00:39:44,240
like running apache and then system d

1425
00:39:42,880 --> 00:39:46,240
side by side for the small scale i'm

1426
00:39:44,240 --> 00:39:49,439
doing is not a big deal

1427
00:39:46,240 --> 00:39:50,959
um anyway so let's get to uh we're

1428
00:39:49,440 --> 00:39:52,720
getting down to the end here but

1429
00:39:50,960 --> 00:39:54,160
but let's let's go with some district

1430
00:39:52,720 --> 00:39:55,040
well actually before i even give any

1431
00:39:54,160 --> 00:39:56,160
recommendations

1432
00:39:55,040 --> 00:39:57,599
because this is my world now we're

1433
00:39:56,160 --> 00:39:58,960
getting to where i'm constantly thinking

1434
00:39:57,599 --> 00:40:01,040
about this stuff but how many of you are

1435
00:39:58,960 --> 00:40:02,880
actually involved in a linux distro like

1436
00:40:01,040 --> 00:40:06,000
contribute tilling okay so a decent

1437
00:40:02,880 --> 00:40:07,520
amount so i'm curious like have

1438
00:40:06,000 --> 00:40:09,440
those of you that do how many of you

1439
00:40:07,520 --> 00:40:10,000
have seen similar problems like from

1440
00:40:09,440 --> 00:40:11,280
your users

1441
00:40:10,000 --> 00:40:14,240
asking about things in the container

1442
00:40:11,280 --> 00:40:16,079
image because anyone asked anything a

1443
00:40:14,240 --> 00:40:17,839
little bit all right a little bit

1444
00:40:16,079 --> 00:40:20,079
but you're kind of looking man not that

1445
00:40:17,839 --> 00:40:20,078
much

1446
00:40:21,440 --> 00:40:25,280
are you are those of you that are

1447
00:40:22,640 --> 00:40:27,680
working on this thinking about specific

1448
00:40:25,280 --> 00:40:29,440
uh features or changes that you can make

1449
00:40:27,680 --> 00:40:32,160
to your linux distro to make it run

1450
00:40:29,440 --> 00:40:33,599
better in a linux in a container image

1451
00:40:32,160 --> 00:40:35,839
raise your hand if you're doing that

1452
00:40:33,599 --> 00:40:37,440
so some okay yeah and i would say i'm in

1453
00:40:35,839 --> 00:40:38,078
that boat i'm thinking about things and

1454
00:40:37,440 --> 00:40:40,400
we do certain

1455
00:40:38,079 --> 00:40:41,920
things but it's still pretty much a

1456
00:40:40,400 --> 00:40:43,839
regular linux

1457
00:40:41,920 --> 00:40:45,200
like root fs basically for this at this

1458
00:40:43,839 --> 00:40:48,240
point for the most part

1459
00:40:45,200 --> 00:40:51,279
uh even for us so i

1460
00:40:48,240 --> 00:40:53,839
i just again i uh

1461
00:40:51,280 --> 00:40:54,800
i i decided to put up something funny to

1462
00:40:53,839 --> 00:40:57,839
show like how

1463
00:40:54,800 --> 00:41:00,800
containers happen basically um i'll let

1464
00:40:57,839 --> 00:41:00,799
you read it for a second

1465
00:41:05,359 --> 00:41:08,160
this is basically what we did with

1466
00:41:06,400 --> 00:41:09,440
containers right like we just glued two

1467
00:41:08,160 --> 00:41:10,879
two phones together

1468
00:41:09,440 --> 00:41:12,720
to make a tablet because we wanted to

1469
00:41:10,880 --> 00:41:14,240
split screen right like we're still

1470
00:41:12,720 --> 00:41:15,839
basically a regular operating system

1471
00:41:14,240 --> 00:41:17,118
inside the container image

1472
00:41:15,839 --> 00:41:18,400
and we're not doing that much and we're

1473
00:41:17,119 --> 00:41:19,200
just gluing new stuff together in a

1474
00:41:18,400 --> 00:41:21,119
slightly different way

1475
00:41:19,200 --> 00:41:22,319
some tar files and some config files

1476
00:41:21,119 --> 00:41:23,359
that's basically what we added to this

1477
00:41:22,319 --> 00:41:26,400
whole magic

1478
00:41:23,359 --> 00:41:28,160
um so

1479
00:41:26,400 --> 00:41:29,839
i guess especially the other people that

1480
00:41:28,160 --> 00:41:31,920
work on distros um

1481
00:41:29,839 --> 00:41:34,078
like the call to action i think is first

1482
00:41:31,920 --> 00:41:35,920
off all of us telling the world the same

1483
00:41:34,079 --> 00:41:37,599
thing like telling people that this

1484
00:41:35,920 --> 00:41:38,319
still does matter and having confidence

1485
00:41:37,599 --> 00:41:40,560
that matters

1486
00:41:38,319 --> 00:41:43,279
i noticed early on at red hat because

1487
00:41:40,560 --> 00:41:44,960
i've been doing this like six years ish

1488
00:41:43,280 --> 00:41:46,400
i would say early on some of our

1489
00:41:44,960 --> 00:41:48,960
packages and stuff didn't

1490
00:41:46,400 --> 00:41:50,240
fully feel confident that this mattered

1491
00:41:48,960 --> 00:41:51,920
like i would say we kind of slapped some

1492
00:41:50,240 --> 00:41:53,680
things together in containers early on

1493
00:41:51,920 --> 00:41:55,119
and then we eventually built out an

1494
00:41:53,680 --> 00:41:56,319
entire huge team to like

1495
00:41:55,119 --> 00:41:58,720
handle all this but i was like the

1496
00:41:56,319 --> 00:42:00,079
cassandra whining early on that this is

1497
00:41:58,720 --> 00:42:01,040
going to go sideways if we don't think

1498
00:42:00,079 --> 00:42:02,480
about it

1499
00:42:01,040 --> 00:42:04,079
especially container image rebuilds

1500
00:42:02,480 --> 00:42:05,760
because it takes a lot of image rebuilds

1501
00:42:04,079 --> 00:42:08,319
when you get into these layers like this

1502
00:42:05,760 --> 00:42:09,599
i mean red hat has a several million

1503
00:42:08,319 --> 00:42:10,079
container image builds per month

1504
00:42:09,599 --> 00:42:12,160
probably

1505
00:42:10,079 --> 00:42:13,599
we're in that scale i mean it's a huge

1506
00:42:12,160 --> 00:42:15,279
environment we don't actually talk about

1507
00:42:13,599 --> 00:42:16,160
it publicly a lot but we could easily do

1508
00:42:15,280 --> 00:42:18,000
like one of those

1509
00:42:16,160 --> 00:42:19,359
high scalability blog entries on how we

1510
00:42:18,000 --> 00:42:22,480
do all of our container image builds

1511
00:42:19,359 --> 00:42:23,759
it gets huge um but i think i think all

1512
00:42:22,480 --> 00:42:25,200
of us should be telling the world that

1513
00:42:23,760 --> 00:42:26,720
this still matters like the dependency

1514
00:42:25,200 --> 00:42:27,279
tree that we build matters and like the

1515
00:42:26,720 --> 00:42:29,279
value

1516
00:42:27,280 --> 00:42:31,280
the quality of that dependency tree and

1517
00:42:29,280 --> 00:42:32,880
all the subject matter expertise for all

1518
00:42:31,280 --> 00:42:35,040
those packagers matters

1519
00:42:32,880 --> 00:42:36,800
um you know like a packager on our

1520
00:42:35,040 --> 00:42:38,640
subsystem team i work on the container

1521
00:42:36,800 --> 00:42:40,000
subsystem in rel but like our packages

1522
00:42:38,640 --> 00:42:41,118
know how to build podman

1523
00:42:40,000 --> 00:42:42,400
better than other people know how to

1524
00:42:41,119 --> 00:42:43,040
build podman because they build it all

1525
00:42:42,400 --> 00:42:44,240
the time

1526
00:42:43,040 --> 00:42:46,000
and they know like all the little

1527
00:42:44,240 --> 00:42:46,799
secrets to make podman run better in the

1528
00:42:46,000 --> 00:42:48,960
way that we want to run

1529
00:42:46,800 --> 00:42:51,040
and that's true for like bind and apache

1530
00:42:48,960 --> 00:42:52,079
and like every other like you know type

1531
00:42:51,040 --> 00:42:52,400
of software that you put in there and

1532
00:42:52,079 --> 00:42:53,839
then

1533
00:42:52,400 --> 00:42:55,119
you scale that out across an entire

1534
00:42:53,839 --> 00:42:56,640
linux distro now you're talking

1535
00:42:55,119 --> 00:42:59,040
thousands of pieces of software

1536
00:42:56,640 --> 00:43:00,879
so i would say my call to action for or

1537
00:42:59,040 --> 00:43:02,240
ask for everyone you know is like

1538
00:43:00,880 --> 00:43:04,000
think through that and like tell the

1539
00:43:02,240 --> 00:43:05,520
world that your stuff still matters like

1540
00:43:04,000 --> 00:43:07,359
don't let people say that you know

1541
00:43:05,520 --> 00:43:09,759
it doesn't matter then the second thing

1542
00:43:07,359 --> 00:43:12,400
i would say is let's think about like

1543
00:43:09,760 --> 00:43:14,720
features that we can add to our to our

1544
00:43:12,400 --> 00:43:17,440
linux distros basically that will

1545
00:43:14,720 --> 00:43:18,240
start to make it more optimized for

1546
00:43:17,440 --> 00:43:19,599
container images

1547
00:43:18,240 --> 00:43:22,319
there's all kinds of things that we're

1548
00:43:19,599 --> 00:43:26,079
thinking through right now like um

1549
00:43:22,319 --> 00:43:27,520
for example like uh i would say uh

1550
00:43:26,079 --> 00:43:29,359
minus true i was a perfect example

1551
00:43:27,520 --> 00:43:31,200
there's a bunch of environment variables

1552
00:43:29,359 --> 00:43:32,560
that like the official mysql image or

1553
00:43:31,200 --> 00:43:34,399
the official mariadb image

1554
00:43:32,560 --> 00:43:36,078
will accept like you could pass the

1555
00:43:34,400 --> 00:43:37,119
database user the database password

1556
00:43:36,079 --> 00:43:38,880
there's like probably

1557
00:43:37,119 --> 00:43:40,400
i don't know 10 ish different

1558
00:43:38,880 --> 00:43:41,599
environment variables we should all

1559
00:43:40,400 --> 00:43:43,200
start to think about how the linux

1560
00:43:41,599 --> 00:43:44,160
distro can do that out of the box like

1561
00:43:43,200 --> 00:43:46,879
for apache like

1562
00:43:44,160 --> 00:43:48,000
imagine if you could set like the the uh

1563
00:43:46,880 --> 00:43:49,359
encryption algorithms that you want to

1564
00:43:48,000 --> 00:43:50,240
use or the security level of the

1565
00:43:49,359 --> 00:43:52,160
container image

1566
00:43:50,240 --> 00:43:53,839
those are like really nice to have

1567
00:43:52,160 --> 00:43:55,759
things that i think probably the linux

1568
00:43:53,839 --> 00:43:58,000
distro should start to think about doing

1569
00:43:55,760 --> 00:43:59,839
um you know again optimizing tool you

1570
00:43:58,000 --> 00:44:02,000
know for example we have fips compliance

1571
00:43:59,839 --> 00:44:04,000
is a perfect example for us for red hat

1572
00:44:02,000 --> 00:44:05,760
we have to be able to turn on like the

1573
00:44:04,000 --> 00:44:07,119
fips algorithms inside the container

1574
00:44:05,760 --> 00:44:08,560
image and we do it actually

1575
00:44:07,119 --> 00:44:10,000
by setting some variables in the host

1576
00:44:08,560 --> 00:44:11,279
and then the container engine is smart

1577
00:44:10,000 --> 00:44:12,800
enough to basically know that and then

1578
00:44:11,280 --> 00:44:14,560
run the container image in a certain way

1579
00:44:12,800 --> 00:44:15,920
but this requires a lot of moving parts

1580
00:44:14,560 --> 00:44:17,279
it's the way the container

1581
00:44:15,920 --> 00:44:19,119
basically the way the container engine

1582
00:44:17,280 --> 00:44:20,640
is built and compiled and configured and

1583
00:44:19,119 --> 00:44:22,000
it's also the way the container images

1584
00:44:20,640 --> 00:44:22,799
are built and compiled and configured so

1585
00:44:22,000 --> 00:44:24,160
you end up with this

1586
00:44:22,800 --> 00:44:25,680
dependency tree where you can make

1587
00:44:24,160 --> 00:44:26,799
things kind of magically happen and make

1588
00:44:25,680 --> 00:44:29,680
them a lot easier

1589
00:44:26,800 --> 00:44:30,800
um you know i would say same defaults or

1590
00:44:29,680 --> 00:44:32,879
another thing like

1591
00:44:30,800 --> 00:44:34,079
like making sure these things come up in

1592
00:44:32,880 --> 00:44:35,599
the right way and start in the right way

1593
00:44:34,079 --> 00:44:36,319
that would be good for a container image

1594
00:44:35,599 --> 00:44:37,839
think about

1595
00:44:36,319 --> 00:44:39,920
another one is minimization i think a

1596
00:44:37,839 --> 00:44:42,000
lot of us anybody that's probably

1597
00:44:39,920 --> 00:44:43,440
doing this you the ones that raise your

1598
00:44:42,000 --> 00:44:44,880
hand like minimization is probably the

1599
00:44:43,440 --> 00:44:45,920
biggest one that i hear among the

1600
00:44:44,880 --> 00:44:47,119
dependency tree

1601
00:44:45,920 --> 00:44:48,560
and we're working on that i don't know

1602
00:44:47,119 --> 00:44:50,000
how many of you are from fedora but

1603
00:44:48,560 --> 00:44:51,520
we're working on that upstream adam

1604
00:44:50,000 --> 00:44:52,319
samlic is working on a minimization

1605
00:44:51,520 --> 00:44:53,520
effort upstream

1606
00:44:52,319 --> 00:44:55,520
because the way red hat does everything

1607
00:44:53,520 --> 00:44:57,280
we just do it upstream so probably

1608
00:44:55,520 --> 00:44:58,160
around the rel nine time frame you'll

1609
00:44:57,280 --> 00:45:00,160
see this work

1610
00:44:58,160 --> 00:45:01,520
end up arriving in rel but i would say

1611
00:45:00,160 --> 00:45:02,078
that's a huge one where we really want

1612
00:45:01,520 --> 00:45:04,720
to

1613
00:45:02,079 --> 00:45:06,000
optimize the dependency graph basically

1614
00:45:04,720 --> 00:45:07,598
so that we could have loose

1615
00:45:06,000 --> 00:45:09,359
or weak dependencies and then make

1616
00:45:07,599 --> 00:45:11,040
things smaller and maybe even break up

1617
00:45:09,359 --> 00:45:13,920
some of the packages in new ways

1618
00:45:11,040 --> 00:45:15,200
so like maybe uh you know lib ssl we

1619
00:45:13,920 --> 00:45:16,800
could break it out or especially

1620
00:45:15,200 --> 00:45:18,480
glibc is one that we can break out into

1621
00:45:16,800 --> 00:45:19,280
different things different we did it a

1622
00:45:18,480 --> 00:45:21,119
little bit with like

1623
00:45:19,280 --> 00:45:23,280
languages so the lang packs we have like

1624
00:45:21,119 --> 00:45:24,480
a default minimal language pack that we

1625
00:45:23,280 --> 00:45:24,960
can pull in with glibc to make it

1626
00:45:24,480 --> 00:45:26,400
smaller

1627
00:45:24,960 --> 00:45:28,400
but we want to do more and more stuff

1628
00:45:26,400 --> 00:45:29,520
like that uh but i guess my call to

1629
00:45:28,400 --> 00:45:30,800
action to everyone especially the ones

1630
00:45:29,520 --> 00:45:32,079
that work on districts let's all start

1631
00:45:30,800 --> 00:45:34,160
thinking about this stuff and like

1632
00:45:32,079 --> 00:45:35,280
make our stuff relevant in this future

1633
00:45:34,160 --> 00:45:36,640
world because it

1634
00:45:35,280 --> 00:45:37,680
annoys me when people say that operating

1635
00:45:36,640 --> 00:45:39,520
systems don't matter i think there's a

1636
00:45:37,680 --> 00:45:42,560
ton of work to do here

1637
00:45:39,520 --> 00:45:44,400
and so with that i will uh i will leave

1638
00:45:42,560 --> 00:45:45,040
you with my twitter and some other stuff

1639
00:45:44,400 --> 00:45:47,599
i wrote

1640
00:45:45,040 --> 00:45:49,440
i publish a lot a lot so like if you

1641
00:45:47,599 --> 00:45:50,560
google me i write like all kinds of

1642
00:45:49,440 --> 00:45:51,280
crazy stuff about this i probably

1643
00:45:50,560 --> 00:45:53,200
publish

1644
00:45:51,280 --> 00:45:54,640
i don't know 20 blog entries a year 30

1645
00:45:53,200 --> 00:45:56,319
blog entries a year or something

1646
00:45:54,640 --> 00:45:58,160
but um i would love to continue the

1647
00:45:56,319 --> 00:46:00,079
conversation if you want to chat about

1648
00:45:58,160 --> 00:46:01,200
it and i will leave it to questions if

1649
00:46:00,079 --> 00:46:05,119
anyone wants to do

1650
00:46:01,200 --> 00:46:05,118
any questions or even thoughts

1651
00:46:05,599 --> 00:46:15,839
especially the the other distro

1652
00:46:07,920 --> 00:46:15,839
maintainers i'm curious

1653
00:46:17,920 --> 00:46:21,359
you're having quite a problem with users

1654
00:46:19,760 --> 00:46:22,960
not using the latest tech and then

1655
00:46:21,359 --> 00:46:24,480
complaining that the docker images have

1656
00:46:22,960 --> 00:46:28,240
some cds open

1657
00:46:24,480 --> 00:46:28,240
because they don't update their stuff so

1658
00:46:33,280 --> 00:46:36,560
so he said he said they're having

1659
00:46:35,200 --> 00:46:38,160
actually a problem so there's a problem

1660
00:46:36,560 --> 00:46:38,960
to use the latest tag or not to use the

1661
00:46:38,160 --> 00:46:40,560
latest tag

1662
00:46:38,960 --> 00:46:42,079
um if the end user that pulls down the

1663
00:46:40,560 --> 00:46:45,599
container image

1664
00:46:42,079 --> 00:46:47,599
specifies a a a essentially a tag

1665
00:46:45,599 --> 00:46:48,960
um on whether it's the latest or not

1666
00:46:47,599 --> 00:46:49,920
latest you get burned one way or the

1667
00:46:48,960 --> 00:46:51,520
other what happens is

1668
00:46:49,920 --> 00:46:53,200
is if they pull the latest it will

1669
00:46:51,520 --> 00:46:55,119
constantly break them possibly

1670
00:46:53,200 --> 00:46:57,118
but if they pull down a static like

1671
00:46:55,119 --> 00:46:58,720
version 1.2 you know like if they pull

1672
00:46:57,119 --> 00:47:01,119
down a static version though

1673
00:46:58,720 --> 00:47:02,160
that image i say container images age

1674
00:47:01,119 --> 00:47:04,240
like cheese not like

1675
00:47:02,160 --> 00:47:05,520
wine and so they will end up picking up

1676
00:47:04,240 --> 00:47:06,879
cves over time

1677
00:47:05,520 --> 00:47:08,720
and then they complain no matter what

1678
00:47:06,880 --> 00:47:10,880
you did like like they want

1679
00:47:08,720 --> 00:47:11,839
so the short answer there is it's a hard

1680
00:47:10,880 --> 00:47:14,079
problem to solve

1681
00:47:11,839 --> 00:47:15,119
red hat solves it because we do abi api

1682
00:47:14,079 --> 00:47:16,960
compatibility

1683
00:47:15,119 --> 00:47:19,040
over a life cycle so we guarantee so

1684
00:47:16,960 --> 00:47:21,280
like if you pull down a rel 7 image

1685
00:47:19,040 --> 00:47:22,720
or it will stay rel7 forever and it

1686
00:47:21,280 --> 00:47:23,359
keeps getting cbe's but it doesn't break

1687
00:47:22,720 --> 00:47:25,040
anything

1688
00:47:23,359 --> 00:47:26,720
but it's a hard problem that's a lot of

1689
00:47:25,040 --> 00:47:28,079
investment like and that's kind of why

1690
00:47:26,720 --> 00:47:30,799
we do it but that's the only way i know

1691
00:47:28,079 --> 00:47:30,800
to solve that problem

1692
00:47:31,119 --> 00:47:33,440
i'm sorry

1693
00:47:36,640 --> 00:47:40,319
yeah well that's what i'm basically

1694
00:47:38,240 --> 00:47:42,160
that's essentially what i'm doing yeah

1695
00:47:40,319 --> 00:47:43,759
oh sorry so he's it wasn't a question

1696
00:47:42,160 --> 00:47:45,279
but i'll repeat he said he said you

1697
00:47:43,760 --> 00:47:48,640
could stay on the stable branch so

1698
00:47:45,280 --> 00:47:50,800
for example with podman upstream we have

1699
00:47:48,640 --> 00:47:52,640
stable branches that we actually rebase

1700
00:47:50,800 --> 00:47:53,920
down into rel we basically just follow

1701
00:47:52,640 --> 00:47:54,640
those stable branches and if there's a

1702
00:47:53,920 --> 00:47:56,000
cve

1703
00:47:54,640 --> 00:47:58,000
we'll patch the cv there and then

1704
00:47:56,000 --> 00:47:59,599
anybody can pull it so like even seuss

1705
00:47:58,000 --> 00:48:01,119
contributes a lot to podman but they can

1706
00:47:59,599 --> 00:48:03,760
just pull down the stable version

1707
00:48:01,119 --> 00:48:05,280
that is one way to saw that that that

1708
00:48:03,760 --> 00:48:07,040
hopefully the upstream will maintain

1709
00:48:05,280 --> 00:48:09,040
those cbes there's for some things you

1710
00:48:07,040 --> 00:48:21,839
can probably do that like mysql and

1711
00:48:09,040 --> 00:48:21,839
other things any other questions

1712
00:48:24,640 --> 00:48:35,839
crazy stuff

1713
00:48:46,839 --> 00:48:49,839
um

1714
00:49:00,400 --> 00:49:04,640
so okay so this question is around host

1715
00:49:02,960 --> 00:49:06,559
and container image compatibility

1716
00:49:04,640 --> 00:49:08,000
which i love ranting about and hpc

1717
00:49:06,559 --> 00:49:09,440
proves it um

1718
00:49:08,000 --> 00:49:11,359
and what they do what he said is they

1719
00:49:09,440 --> 00:49:13,760
basically will bind mount in

1720
00:49:11,359 --> 00:49:15,200
things like the mpi library or glibc

1721
00:49:13,760 --> 00:49:16,400
from the host they may like have a

1722
00:49:15,200 --> 00:49:18,319
directory that has like a specific

1723
00:49:16,400 --> 00:49:20,400
version of glibc or the mpi libraries

1724
00:49:18,319 --> 00:49:20,960
built or like cray has their own mpi

1725
00:49:20,400 --> 00:49:23,839
library

1726
00:49:20,960 --> 00:49:25,599
and then you have to like use that one

1727
00:49:23,839 --> 00:49:27,920
yeah

1728
00:49:25,599 --> 00:49:29,839
so so the question is how what are we

1729
00:49:27,920 --> 00:49:31,359
doing and i i may know you by your

1730
00:49:29,839 --> 00:49:33,040
question like i think i might know who

1731
00:49:31,359 --> 00:49:35,040
you are have you ever been on a call for

1732
00:49:33,040 --> 00:49:37,279
for the for the like sandia labs and all

1733
00:49:35,040 --> 00:49:39,040
those hpc things

1734
00:49:37,280 --> 00:49:40,640
okay okay okay so i may have talked to

1735
00:49:39,040 --> 00:49:41,440
you before this sounds like such a

1736
00:49:40,640 --> 00:49:42,799
familiar problem

1737
00:49:41,440 --> 00:49:44,319
but the question is what is red hat

1738
00:49:42,800 --> 00:49:45,680
doing to try to make the better well

1739
00:49:44,319 --> 00:49:47,119
it's kind of the same answer as the last

1740
00:49:45,680 --> 00:49:49,279
question like what we do is try to

1741
00:49:47,119 --> 00:49:50,880
maintain that abi api compatibility

1742
00:49:49,280 --> 00:49:52,720
so at least if it's a rail eight or you

1743
00:49:50,880 --> 00:49:54,800
know ubi 8 image on rel 8

1744
00:49:52,720 --> 00:49:55,839
that should work right like like even if

1745
00:49:54,800 --> 00:49:57,920
you're using the underlying

1746
00:49:55,839 --> 00:50:00,078
host glib sees everything should work

1747
00:49:57,920 --> 00:50:01,440
and then hopefully the ecosystem of rel

1748
00:50:00,079 --> 00:50:02,160
is big enough to attract like the

1749
00:50:01,440 --> 00:50:03,599
hardware

1750
00:50:02,160 --> 00:50:05,040
and all that stuff so it'll enable it

1751
00:50:03,599 --> 00:50:13,839
right and we are doing a lot of that in

1752
00:50:05,040 --> 00:50:13,839
openshift and in real

1753
00:50:24,400 --> 00:50:27,119
which is like this container works until

1754
00:50:25,760 --> 00:50:28,800
it explodes and then you rebuild it yeah

1755
00:50:27,119 --> 00:50:30,800
so his question is is is there a way to

1756
00:50:28,800 --> 00:50:33,200
like basically compare two abis and kind

1757
00:50:30,800 --> 00:50:35,040
of diff them

1758
00:50:33,200 --> 00:50:37,680
we do have some kind of tooling to do

1759
00:50:35,040 --> 00:50:39,119
that um i think we mostly do it to check

1760
00:50:37,680 --> 00:50:40,720
old versions against newer versions to

1761
00:50:39,119 --> 00:50:42,000
make sure we didn't break compatibility

1762
00:50:40,720 --> 00:50:43,359
but i don't see why you couldn't use it

1763
00:50:42,000 --> 00:50:44,160
to compare two different container

1764
00:50:43,359 --> 00:50:46,720
images

1765
00:50:44,160 --> 00:50:47,920
um i know carlos o'donnell is a really

1766
00:50:46,720 --> 00:50:49,118
good guy to talk to about that he's a

1767
00:50:47,920 --> 00:50:51,520
red hat guy that's a

1768
00:50:49,119 --> 00:50:52,880
glibc maintainer and i know he talks

1769
00:50:51,520 --> 00:50:54,319
about this all the time this is like

1770
00:50:52,880 --> 00:50:56,319
deep in his area

1771
00:50:54,319 --> 00:50:58,400
i don't know that we've built anything

1772
00:50:56,319 --> 00:51:00,558
that we expose to end users to do that

1773
00:50:58,400 --> 00:51:01,920
but we definitely do it internally we

1774
00:51:00,559 --> 00:51:02,640
definitely do it in between like rel

1775
00:51:01,920 --> 00:51:05,839
versions and

1776
00:51:02,640 --> 00:51:07,279
and and things like that so you could

1777
00:51:05,839 --> 00:51:08,319
probably use that i'm actually i'm sure

1778
00:51:07,280 --> 00:51:09,520
if you google we

1779
00:51:08,319 --> 00:51:10,640
we talk about it publicly but

1780
00:51:09,520 --> 00:51:11,680
immediately i haven't gotten deep in

1781
00:51:10,640 --> 00:51:13,040
that

1782
00:51:11,680 --> 00:51:15,680
that's an interesting one we should chat

1783
00:51:13,040 --> 00:51:17,839
more about that one

1784
00:51:15,680 --> 00:51:18,720
i think we are we should probably wrap

1785
00:51:17,839 --> 00:51:23,839
it up

1786
00:51:18,720 --> 00:51:23,839
so thank you everyone

1787
00:51:30,079 --> 00:51:32,160
you

