1
00:00:06,319 --> 00:00:08,640
so

2
00:00:10,639 --> 00:00:18,480
is this gonna there

3
00:00:14,400 --> 00:00:21,600
all right so um we can start

4
00:00:18,480 --> 00:00:22,800
this is the name of the presentation how

5
00:00:21,600 --> 00:00:25,840
to integrate secure

6
00:00:22,800 --> 00:00:28,400
elements this is going to be shortened

7
00:00:25,840 --> 00:00:30,560
from including secure mcus

8
00:00:28,400 --> 00:00:32,879
and fpgas because we only have 20

9
00:00:30,560 --> 00:00:32,879
minutes

10
00:00:34,719 --> 00:00:38,879
and

11
00:00:36,190 --> 00:00:44,640
[Music]

12
00:00:38,879 --> 00:00:48,078
what's the deal with the slides

13
00:00:44,640 --> 00:00:48,719
okay i'm not a very good windows user in

14
00:00:48,079 --> 00:00:51,840
case you

15
00:00:48,719 --> 00:00:52,960
haven't noticed so this is windows so we

16
00:00:51,840 --> 00:00:55,360
need a definition

17
00:00:52,960 --> 00:00:58,000
of secure elements right what's a secure

18
00:00:55,360 --> 00:01:00,000
element i wish i could show one

19
00:00:58,000 --> 00:01:01,920
document cameras not working they're

20
00:01:00,000 --> 00:01:04,000
basically the small integrated circuits

21
00:01:01,920 --> 00:01:04,960
that lie on a pcb on a printed circuit

22
00:01:04,000 --> 00:01:08,159
board

23
00:01:04,959 --> 00:01:11,280
and they help us support

24
00:01:08,159 --> 00:01:12,560
secure applications and so these are

25
00:01:11,280 --> 00:01:15,439
some of the

26
00:01:12,560 --> 00:01:17,360
identifying factors that define a secure

27
00:01:15,439 --> 00:01:18,639
element if you talk to different people

28
00:01:17,360 --> 00:01:20,560
working with them daily

29
00:01:18,640 --> 00:01:21,920
they vary a bit it's kind of a fuzzy

30
00:01:20,560 --> 00:01:25,360
definition

31
00:01:21,920 --> 00:01:27,680
um but we can say that um

32
00:01:25,360 --> 00:01:28,799
they're usually in an integrated circuit

33
00:01:27,680 --> 00:01:31,840
so they're a

34
00:01:28,799 --> 00:01:34,720
dedicated separate piece of hardware

35
00:01:31,840 --> 00:01:38,880
that may be connected to a

36
00:01:34,720 --> 00:01:41,920
microprocessor or a microcontroller

37
00:01:38,880 --> 00:01:44,240
they may store sensitive information i'm

38
00:01:41,920 --> 00:01:46,880
using the word may here because

39
00:01:44,240 --> 00:01:47,679
some have secure storage and features

40
00:01:46,880 --> 00:01:50,960
like

41
00:01:47,680 --> 00:01:54,720
mesh construction so that the

42
00:01:50,960 --> 00:01:57,839
capsulation methods and attacks

43
00:01:54,720 --> 00:02:01,039
are are more difficult and other maybe

44
00:01:57,840 --> 00:02:02,719
cheaper or less less

45
00:02:01,040 --> 00:02:04,560
full-featured secure elements they don't

46
00:02:02,719 --> 00:02:07,280
have secure secure

47
00:02:04,560 --> 00:02:08,160
storage so that's why it may store

48
00:02:07,280 --> 00:02:10,239
secure information

49
00:02:08,160 --> 00:02:12,480
it may run cryptographic applications

50
00:02:10,239 --> 00:02:15,599
things like algorithms

51
00:02:12,480 --> 00:02:18,399
aes or ecdsa digital signature

52
00:02:15,599 --> 00:02:20,160
algorithms stephen hellman

53
00:02:18,400 --> 00:02:21,680
it all depends on what what you're

54
00:02:20,160 --> 00:02:23,280
looking at we'll take a look at a data

55
00:02:21,680 --> 00:02:27,280
sheet later on

56
00:02:23,280 --> 00:02:29,280
for details so what they usually

57
00:02:27,280 --> 00:02:30,480
all do is they protect the internal

58
00:02:29,280 --> 00:02:34,080
state from

59
00:02:30,480 --> 00:02:35,599
things happening outside the voltages

60
00:02:34,080 --> 00:02:39,599
all of these things are controlled more

61
00:02:35,599 --> 00:02:39,599
or less so that's kind of our

62
00:02:40,000 --> 00:02:45,200
our definition and um some of the

63
00:02:43,360 --> 00:02:47,680
attacks that they defend against

64
00:02:45,200 --> 00:02:48,319
are from well i'll stop from the

65
00:02:47,680 --> 00:02:51,599
beginning

66
00:02:48,319 --> 00:02:54,640
side channel attacks things like

67
00:02:51,599 --> 00:02:55,839
voltage measurements correlation power

68
00:02:54,640 --> 00:02:58,159
analysis

69
00:02:55,840 --> 00:02:59,120
or cpa the type of attacks that you

70
00:02:58,159 --> 00:03:03,440
might use a chip

71
00:02:59,120 --> 00:03:08,000
whisperer to launch against a piece of

72
00:03:03,440 --> 00:03:10,959
electronics device they usually

73
00:03:08,000 --> 00:03:12,560
do their best to detect and prevent

74
00:03:10,959 --> 00:03:16,720
these type of attacks

75
00:03:12,560 --> 00:03:20,239
timing things like acil oscillating

76
00:03:16,720 --> 00:03:22,400
glitching and voltage glitching as well

77
00:03:20,239 --> 00:03:23,599
once again each secure element is

78
00:03:22,400 --> 00:03:25,440
slightly different

79
00:03:23,599 --> 00:03:27,359
some are more expensive and more full

80
00:03:25,440 --> 00:03:30,640
features and others

81
00:03:27,360 --> 00:03:32,799
don't have all of these defenses

82
00:03:30,640 --> 00:03:34,958
some physical attacks are possible on

83
00:03:32,799 --> 00:03:36,000
electronics in general decapsulation

84
00:03:34,959 --> 00:03:41,200
with

85
00:03:36,000 --> 00:03:43,840
sulfuric acid vapor ion particle beam

86
00:03:41,200 --> 00:03:46,399
inspection microscopy all of these

87
00:03:43,840 --> 00:03:49,200
things are physical attacks and

88
00:03:46,400 --> 00:03:50,080
secure elements often protect and defend

89
00:03:49,200 --> 00:03:52,399
against those

90
00:03:50,080 --> 00:03:54,560
in one way or another so those are some

91
00:03:52,400 --> 00:03:56,720
of the

92
00:03:54,560 --> 00:03:58,159
the reasons that we implement using

93
00:03:56,720 --> 00:03:58,720
secure elements is that they defend

94
00:03:58,159 --> 00:04:01,920
against

95
00:03:58,720 --> 00:04:03,680
some or all of these attacks um the use

96
00:04:01,920 --> 00:04:05,518
cases for secure elements it's not

97
00:04:03,680 --> 00:04:06,879
surprising they're usually security

98
00:04:05,519 --> 00:04:08,480
oriented

99
00:04:06,879 --> 00:04:11,679
sometimes critical security you might

100
00:04:08,480 --> 00:04:14,159
have a pacemaker or biometrics

101
00:04:11,680 --> 00:04:15,360
application where you need some uh

102
00:04:14,159 --> 00:04:18,798
better security than

103
00:04:15,360 --> 00:04:21,680
you would otherwise get from mcu or

104
00:04:18,798 --> 00:04:22,638
some more trivial electronics basically

105
00:04:21,680 --> 00:04:25,040
here are some of the

106
00:04:22,639 --> 00:04:28,479
just it's actually a short list but in

107
00:04:25,040 --> 00:04:30,960
general authentication digital signing

108
00:04:28,479 --> 00:04:33,039
mobile payments cryptocurrency quite a

109
00:04:30,960 --> 00:04:36,080
few wallets for example are using

110
00:04:33,040 --> 00:04:40,479
secure elements lifecycle management

111
00:04:36,080 --> 00:04:42,960
how to push off authorized firmware onto

112
00:04:40,479 --> 00:04:46,000
an iot device for example

113
00:04:42,960 --> 00:04:49,280
and some rf as well

114
00:04:46,000 --> 00:04:52,639
wi-fi and i think laura specifies that

115
00:04:49,280 --> 00:04:55,679
encryption takes place when the

116
00:04:52,639 --> 00:04:56,800
node is sending data over rf so these

117
00:04:55,680 --> 00:05:00,160
are all

118
00:04:56,800 --> 00:05:03,440
uh reasons or applications to use

119
00:05:00,160 --> 00:05:06,080
secure elements in um and

120
00:05:03,440 --> 00:05:08,400
going back to the definition and the and

121
00:05:06,080 --> 00:05:10,960
the application

122
00:05:08,400 --> 00:05:11,599
base here here's kind of a block diagram

123
00:05:10,960 --> 00:05:14,320
of what

124
00:05:11,600 --> 00:05:16,240
of just one example of how we could

125
00:05:14,320 --> 00:05:17,599
implement a hardware circuit using a

126
00:05:16,240 --> 00:05:21,919
secure element

127
00:05:17,600 --> 00:05:21,919
um i thought i had a laser

128
00:05:23,520 --> 00:05:28,479
and there i'll use you can't see the

129
00:05:26,479 --> 00:05:31,280
pointer

130
00:05:28,479 --> 00:05:33,360
i'll use my finger how about that so the

131
00:05:31,280 --> 00:05:33,919
secure element is way at the top you can

132
00:05:33,360 --> 00:05:35,759
see it

133
00:05:33,919 --> 00:05:37,520
um if it weren't there we would be

134
00:05:35,759 --> 00:05:38,080
implementing the security features on

135
00:05:37,520 --> 00:05:42,400
the left

136
00:05:38,080 --> 00:05:44,639
in the mcu and

137
00:05:42,400 --> 00:05:45,520
it's certainly uh practical for some

138
00:05:44,639 --> 00:05:47,199
applications

139
00:05:45,520 --> 00:05:48,719
like i say secure elements are not

140
00:05:47,199 --> 00:05:50,560
needed for everything but if you have

141
00:05:48,720 --> 00:05:52,320
something requiring more security

142
00:05:50,560 --> 00:05:54,320
then you could implement using a secure

143
00:05:52,320 --> 00:05:56,960
element and then transfer

144
00:05:54,320 --> 00:05:59,280
information from them the mcu to the

145
00:05:56,960 --> 00:05:59,758
secure element over some serial protocol

146
00:05:59,280 --> 00:06:02,960
like i

147
00:05:59,759 --> 00:06:05,199
squared c for example

148
00:06:02,960 --> 00:06:06,799
in this example which i found online

149
00:06:05,199 --> 00:06:09,840
they're they're doing this

150
00:06:06,800 --> 00:06:12,560
in order to probably enable a

151
00:06:09,840 --> 00:06:14,560
a contactless payment processing

152
00:06:12,560 --> 00:06:15,039
application with a with a reader a base

153
00:06:14,560 --> 00:06:18,800
station

154
00:06:15,039 --> 00:06:19,599
and then not a not a smartphone but some

155
00:06:18,800 --> 00:06:22,880
kind of

156
00:06:19,600 --> 00:06:26,560
small device a dongle of some kind with

157
00:06:22,880 --> 00:06:30,080
an antenna that can do contactless rf

158
00:06:26,560 --> 00:06:31,759
either rfid or nfc so this is kind of

159
00:06:30,080 --> 00:06:34,240
one of the

160
00:06:31,759 --> 00:06:36,639
one of the nicer arrangements it's very

161
00:06:34,240 --> 00:06:40,160
easy to see

162
00:06:36,639 --> 00:06:41,840
what's happening in an overview level

163
00:06:40,160 --> 00:06:43,840
do you like this as well any questions

164
00:06:41,840 --> 00:06:45,840
about this

165
00:06:43,840 --> 00:06:47,758
i wonder how many of us are implementing

166
00:06:45,840 --> 00:06:50,560
using secure elements

167
00:06:47,759 --> 00:06:51,759
and i did just mention um serial

168
00:06:50,560 --> 00:06:54,800
protocols for

169
00:06:51,759 --> 00:06:56,880
transferring information in and out of

170
00:06:54,800 --> 00:06:59,199
the secure element

171
00:06:56,880 --> 00:07:00,319
that usually happens over i squared c

172
00:06:59,199 --> 00:07:03,599
and this is a

173
00:07:00,319 --> 00:07:05,360
another example of the i squared c uh

174
00:07:03,599 --> 00:07:06,800
it's uh what's it called the name of

175
00:07:05,360 --> 00:07:11,199
this uml diagram

176
00:07:06,800 --> 00:07:12,560
it's called a sequence diagram thank you

177
00:07:11,199 --> 00:07:14,400
so we have on the right the secure

178
00:07:12,560 --> 00:07:15,120
element and the hd on the left that's

179
00:07:14,400 --> 00:07:17,440
the host

180
00:07:15,120 --> 00:07:19,199
device which is sending information back

181
00:07:17,440 --> 00:07:20,960
and forth you can consider this to be an

182
00:07:19,199 --> 00:07:22,400
mcu for example

183
00:07:20,960 --> 00:07:24,799
and this is just a very beginning it's

184
00:07:22,400 --> 00:07:25,679
kind of a handshake the mcu is trying to

185
00:07:24,800 --> 00:07:27,840
decide

186
00:07:25,680 --> 00:07:29,280
do we have one secure element or two

187
00:07:27,840 --> 00:07:30,239
which is a correct address that i'm

188
00:07:29,280 --> 00:07:31,840
looking for

189
00:07:30,240 --> 00:07:33,840
this is all coded of course so the

190
00:07:31,840 --> 00:07:37,039
addresses are known

191
00:07:33,840 --> 00:07:38,719
and this is kind of the traditional way

192
00:07:37,039 --> 00:07:41,440
to communicate with a

193
00:07:38,720 --> 00:07:41,440
secure element

194
00:07:42,000 --> 00:07:45,199
there are some parts that i want to

195
00:07:43,759 --> 00:07:48,479
mention

196
00:07:45,199 --> 00:07:50,319
um so that we understand how to actually

197
00:07:48,479 --> 00:07:51,199
buy one of these or in fact you can

198
00:07:50,319 --> 00:07:53,919
probably get

199
00:07:51,199 --> 00:07:54,479
some for free yes for free if you pick

200
00:07:53,919 --> 00:07:56,840
the right

201
00:07:54,479 --> 00:07:58,318
like for example nxp i believe will send

202
00:07:56,840 --> 00:08:00,400
you

203
00:07:58,319 --> 00:08:01,440
they do it for me i assume they send it

204
00:08:00,400 --> 00:08:03,758
to anybody

205
00:08:01,440 --> 00:08:04,479
for free a few of these secure element

206
00:08:03,759 --> 00:08:05,680
ics

207
00:08:04,479 --> 00:08:07,120
integrated circuits and they're very

208
00:08:05,680 --> 00:08:08,160
small they're difficult to solder with

209
00:08:07,120 --> 00:08:11,280
your hands

210
00:08:08,160 --> 00:08:12,000
i think the largest form factor is a is

211
00:08:11,280 --> 00:08:14,878
a qfn

212
00:08:12,000 --> 00:08:16,639
so that's quad flat no legs all of the

213
00:08:14,879 --> 00:08:17,680
legs are underneath or the contacts are

214
00:08:16,639 --> 00:08:20,400
underneath the chip

215
00:08:17,680 --> 00:08:21,840
so it makes it very difficult to use a

216
00:08:20,400 --> 00:08:24,479
typical

217
00:08:21,840 --> 00:08:26,479
heat tip solder iron you need some some

218
00:08:24,479 --> 00:08:30,240
reflow or some hot air

219
00:08:26,479 --> 00:08:32,880
um solder methods to be able to solder

220
00:08:30,240 --> 00:08:34,959
most of these um the admirals that i

221
00:08:32,880 --> 00:08:37,679
listed here are much easier they have

222
00:08:34,958 --> 00:08:38,838
i think soic so you can see the legs of

223
00:08:37,679 --> 00:08:42,319
the chip

224
00:08:38,839 --> 00:08:44,399
um i'm not sure how familiar we all are

225
00:08:42,320 --> 00:08:46,959
with this kind of thing but

226
00:08:44,399 --> 00:08:48,240
at the top here we have chips that look

227
00:08:46,959 --> 00:08:50,560
like

228
00:08:48,240 --> 00:08:54,640
okay that won't work it seems that my

229
00:08:50,560 --> 00:08:57,518
pin is not working

230
00:08:54,640 --> 00:08:58,640
now the pen is not working great so um

231
00:08:57,519 --> 00:09:01,680
can't draw but

232
00:08:58,640 --> 00:09:02,399
the the soic chips they're the ones that

233
00:09:01,680 --> 00:09:04,239
you

234
00:09:02,399 --> 00:09:05,839
that you usually see with the legs on

235
00:09:04,240 --> 00:09:07,600
the side you can solder those very

236
00:09:05,839 --> 00:09:09,519
easily and those are the atmo ones the

237
00:09:07,600 --> 00:09:10,000
nxp is a bit more difficult the infinity

238
00:09:09,519 --> 00:09:13,120
on

239
00:09:10,000 --> 00:09:14,080
opticals i believe are like the nxp

240
00:09:13,120 --> 00:09:17,440
they're qfn

241
00:09:14,080 --> 00:09:18,560
and uh and under so these are

242
00:09:17,440 --> 00:09:20,720
these are kind of the things that you

243
00:09:18,560 --> 00:09:23,439
might find in very small devices

244
00:09:20,720 --> 00:09:24,160
if you have a smart watch or i don't

245
00:09:23,440 --> 00:09:27,839
even know

246
00:09:24,160 --> 00:09:30,399
um the smaller it gets the

247
00:09:27,839 --> 00:09:31,519
the less uh surface area on the board

248
00:09:30,399 --> 00:09:35,120
you're allowed to use

249
00:09:31,519 --> 00:09:38,880
so that's why not all are

250
00:09:35,120 --> 00:09:41,120
committed to soic and qfp form factors

251
00:09:38,880 --> 00:09:42,959
this is for integration i found a few

252
00:09:41,120 --> 00:09:43,440
links i knew that we wouldn't have time

253
00:09:42,959 --> 00:09:46,479
to get

254
00:09:43,440 --> 00:09:48,640
into the details but i made them part of

255
00:09:46,480 --> 00:09:51,680
the slide deck in case we want to look

256
00:09:48,640 --> 00:09:53,920
after the fact the one thing that

257
00:09:51,680 --> 00:09:54,719
is maybe interesting because we all know

258
00:09:53,920 --> 00:09:58,560
what a

259
00:09:54,720 --> 00:10:00,800
ubi key is how can

260
00:09:58,560 --> 00:10:00,800
i

261
00:10:02,320 --> 00:10:07,839
what's this is this is i don't like

262
00:10:05,360 --> 00:10:11,040
windows so

263
00:10:07,839 --> 00:10:14,720
it's here i believe and we

264
00:10:11,040 --> 00:10:19,839
can't see that there okay

265
00:10:14,720 --> 00:10:19,839
forget that all right um

266
00:10:26,800 --> 00:10:30,160
yeah so it's just a confusion because

267
00:10:28,800 --> 00:10:31,040
what i'm seeing on my screen is

268
00:10:30,160 --> 00:10:33,120
different than that

269
00:10:31,040 --> 00:10:36,000
i'm sorry i can't show the website

270
00:10:33,120 --> 00:10:39,440
because windows is not that far yet

271
00:10:36,000 --> 00:10:42,480
um but if you check this out so i'm

272
00:10:39,440 --> 00:10:44,320
gonna just just gonna

273
00:10:42,480 --> 00:10:46,240
mutually you know how do you see that

274
00:10:44,320 --> 00:10:48,640
i'm just gonna explain what you see

275
00:10:46,240 --> 00:10:50,480
in the first yubikey blog post it's like

276
00:10:48,640 --> 00:10:53,439
a thousand line

277
00:10:50,480 --> 00:10:54,320
document and they're explaining why some

278
00:10:53,440 --> 00:10:56,560
of their

279
00:10:54,320 --> 00:10:57,680
source code is close and proprietary and

280
00:10:56,560 --> 00:10:59,680
others are open

281
00:10:57,680 --> 00:11:01,120
source they don't use the word secure

282
00:10:59,680 --> 00:11:02,880
element and nda

283
00:11:01,120 --> 00:11:04,959
but this is usually the reason that

284
00:11:02,880 --> 00:11:06,240
people don't publish source code when

285
00:11:04,959 --> 00:11:07,359
they're using secure elements they've

286
00:11:06,240 --> 00:11:11,760
made the choice

287
00:11:07,360 --> 00:11:14,560
to sign a nda a non-disclosure agreement

288
00:11:11,760 --> 00:11:16,160
for some certification of this of the

289
00:11:14,560 --> 00:11:18,239
manufacturer of the

290
00:11:16,160 --> 00:11:19,920
secure element and it kind of gets in

291
00:11:18,240 --> 00:11:22,320
the way sometimes um

292
00:11:19,920 --> 00:11:23,120
the other two here the the digikey and

293
00:11:22,320 --> 00:11:25,360
the nxp

294
00:11:23,120 --> 00:11:27,120
articles are very useful for getting

295
00:11:25,360 --> 00:11:28,480
started and collecting information they

296
00:11:27,120 --> 00:11:31,600
actually give you kind of a

297
00:11:28,480 --> 00:11:34,480
cookie cutter method to implement

298
00:11:31,600 --> 00:11:35,920
um a board that's running with a with an

299
00:11:34,480 --> 00:11:39,200
se a secure element

300
00:11:35,920 --> 00:11:41,760
into your system um yeah so

301
00:11:39,200 --> 00:11:42,399
we've already we've already considered

302
00:11:41,760 --> 00:11:43,839
um

303
00:11:42,399 --> 00:11:46,160
non-disclosure agreements but what are

304
00:11:43,839 --> 00:11:49,040
they really is basically a contract

305
00:11:46,160 --> 00:11:50,240
that you sign with a manufacturer and

306
00:11:49,040 --> 00:11:51,920
after that happens

307
00:11:50,240 --> 00:11:53,839
you get certain privileges they might

308
00:11:51,920 --> 00:11:54,560
send you the chips after you sign the

309
00:11:53,839 --> 00:11:57,519
document

310
00:11:54,560 --> 00:11:58,239
or you have the chips but in order to

311
00:11:57,519 --> 00:12:01,360
understand

312
00:11:58,240 --> 00:12:05,519
the api in order to be able to program

313
00:12:01,360 --> 00:12:07,680
uh software or firmware for the chips

314
00:12:05,519 --> 00:12:09,920
you need to sign the document

315
00:12:07,680 --> 00:12:10,880
so it's very uh it's a big hassle in my

316
00:12:09,920 --> 00:12:14,160
opinion

317
00:12:10,880 --> 00:12:17,920
i'm not sure if it's positive for any

318
00:12:14,160 --> 00:12:19,439
application but at one moment or another

319
00:12:17,920 --> 00:12:21,439
everybody

320
00:12:19,440 --> 00:12:23,200
talks to a manufacturer basically

321
00:12:21,440 --> 00:12:24,959
refusing to

322
00:12:23,200 --> 00:12:26,959
reveal information unless you sign a

323
00:12:24,959 --> 00:12:28,880
document i've never signed an nda so i

324
00:12:26,959 --> 00:12:32,000
can't explain too much about whatever

325
00:12:28,880 --> 00:12:33,760
what happens after that but it does lead

326
00:12:32,000 --> 00:12:36,160
to confusion sometimes and it will

327
00:12:33,760 --> 00:12:38,639
possibly mean that if you understand

328
00:12:36,160 --> 00:12:41,760
what's in the api the names of the

329
00:12:38,639 --> 00:12:45,360
assembly op codes

330
00:12:41,760 --> 00:12:46,639
that the secure element can understand

331
00:12:45,360 --> 00:12:50,480
or the i squared c

332
00:12:46,639 --> 00:12:53,040
commands after you sign an nda you can't

333
00:12:50,480 --> 00:12:54,000
use that information in your source code

334
00:12:53,040 --> 00:12:57,120
if it's

335
00:12:54,000 --> 00:12:59,600
public so this is kind of a difficulty

336
00:12:57,120 --> 00:13:01,360
and it's the reason it's part of this

337
00:12:59,600 --> 00:13:04,079
discussion

338
00:13:01,360 --> 00:13:06,079
um right so we have just a little time

339
00:13:04,079 --> 00:13:08,638
left and there is no way to

340
00:13:06,079 --> 00:13:09,599
demonstrate visually with document

341
00:13:08,639 --> 00:13:13,839
cameras

342
00:13:09,600 --> 00:13:16,959
because of missing cables and things but

343
00:13:13,839 --> 00:13:18,399
i wanted to at least i wish i could get

344
00:13:16,959 --> 00:13:21,760
this

345
00:13:18,399 --> 00:13:22,959
i have a spare laser here so let me see

346
00:13:21,760 --> 00:13:26,480
if i can

347
00:13:22,959 --> 00:13:28,000
oh there it is it's great freebies that

348
00:13:26,480 --> 00:13:29,920
you get at trade fairs right you think

349
00:13:28,000 --> 00:13:33,040
it'll work

350
00:13:29,920 --> 00:13:33,680
that it works okay that was that was

351
00:13:33,040 --> 00:13:35,680
close

352
00:13:33,680 --> 00:13:38,160
so here i've actually left them um

353
00:13:35,680 --> 00:13:39,439
unpopulated i'm sorry not the u5 but the

354
00:13:38,160 --> 00:13:42,719
u4 and the u3

355
00:13:39,440 --> 00:13:45,680
on this circuit board um house

356
00:13:42,720 --> 00:13:46,399
two different uh secure elements they

357
00:13:45,680 --> 00:13:49,279
are dfn

358
00:13:46,399 --> 00:13:50,880
dual flat no leg packages so if you can

359
00:13:49,279 --> 00:13:52,959
imagine that the black

360
00:13:50,880 --> 00:13:55,040
this is like a black chip right that the

361
00:13:52,959 --> 00:13:58,079
black chip covers the entire

362
00:13:55,040 --> 00:13:59,920
copper area there those these two things

363
00:13:58,079 --> 00:14:02,160
i've left them unpopulated so that you

364
00:13:59,920 --> 00:14:03,599
can see them because if there's a black

365
00:14:02,160 --> 00:14:05,760
blob on there it just makes it more

366
00:14:03,600 --> 00:14:08,240
difficult you don't know how many legs

367
00:14:05,760 --> 00:14:09,040
right but um what happens after you

368
00:14:08,240 --> 00:14:10,959
solder those

369
00:14:09,040 --> 00:14:13,120
after you assemble these two secure

370
00:14:10,959 --> 00:14:15,680
elements they're communicating with the

371
00:14:13,120 --> 00:14:16,639
mcu over i squared c which is a serial

372
00:14:15,680 --> 00:14:19,120
protocol

373
00:14:16,639 --> 00:14:20,240
so you use the wire library if you're

374
00:14:19,120 --> 00:14:23,279
familiar with

375
00:14:20,240 --> 00:14:26,480
arduino or some other thing for

376
00:14:23,279 --> 00:14:26,800
atmel microchip nxp whatever um which

377
00:14:26,480 --> 00:14:30,079
one

378
00:14:26,800 --> 00:14:31,839
you're using and then you um

379
00:14:30,079 --> 00:14:34,160
yeah you exchange information with the

380
00:14:31,839 --> 00:14:36,560
with ses for example you give a command

381
00:14:34,160 --> 00:14:38,480
that says generate a key it does that

382
00:14:36,560 --> 00:14:41,040
inside the the secure element

383
00:14:38,480 --> 00:14:42,839
and we'll never reveal the secret key

384
00:14:41,040 --> 00:14:44,160
there's no way to get it out or this

385
00:14:42,839 --> 00:14:45,920
theorem

386
00:14:44,160 --> 00:14:49,360
there's what theoretically there's a way

387
00:14:45,920 --> 00:14:51,360
to get over but practically there's not

388
00:14:49,360 --> 00:14:53,199
so that's kind of the way it looks when

389
00:14:51,360 --> 00:14:55,839
you uh design a circuit

390
00:14:53,199 --> 00:14:57,760
with secure elements and because i

391
00:14:55,839 --> 00:14:58,079
designed this circuit i think but i'm

392
00:14:57,760 --> 00:15:01,439
not

393
00:14:58,079 --> 00:15:03,760
able to uh

394
00:15:01,440 --> 00:15:06,240
if i turn off the presentation i can

395
00:15:03,760 --> 00:15:06,240
possibly

396
00:15:06,399 --> 00:15:16,000
i can oh yeah okay so now i can possibly

397
00:15:10,839 --> 00:15:19,120
show oh thank goodness

398
00:15:16,000 --> 00:15:21,440
finally a normal screen

399
00:15:19,120 --> 00:15:24,880
what's that right so this is what we

400
00:15:21,440 --> 00:15:24,880
were just looking at the schematic

401
00:15:25,120 --> 00:15:28,480
and if we go over here so the middle the

402
00:15:27,199 --> 00:15:31,199
the largest piece

403
00:15:28,480 --> 00:15:32,639
is the mcu that we looked at before and

404
00:15:31,199 --> 00:15:33,839
that's the secure element over here

405
00:15:32,639 --> 00:15:39,199
that's one of them

406
00:15:33,839 --> 00:15:42,399
let's say atmel at ecc10508 sorry

407
00:15:39,199 --> 00:15:43,839
um so this is kind of on the design

408
00:15:42,399 --> 00:15:46,720
level

409
00:15:43,839 --> 00:15:49,600
how it all works um because i'm sure

410
00:15:46,720 --> 00:15:52,079
there are a few designers here with us

411
00:15:49,600 --> 00:15:54,399
and with that i believe it's going to be

412
00:15:52,079 --> 00:15:57,839
time for questions because

413
00:15:54,399 --> 00:16:00,240
i don't think there's any slides left

414
00:15:57,839 --> 00:16:00,880
what do you think is there okay wait a

415
00:16:00,240 --> 00:16:04,240
minute that's

416
00:16:00,880 --> 00:16:06,839
the end right yeah so we're done unless

417
00:16:04,240 --> 00:16:09,839
we have questions about secure elements

418
00:16:06,839 --> 00:16:09,839
please

419
00:16:29,839 --> 00:16:34,639
hi there thanks for that um we we're in

420
00:16:32,800 --> 00:16:35,279
the process of putting a board together

421
00:16:34,639 --> 00:16:37,519
um

422
00:16:35,279 --> 00:16:38,959
an embedded lennox board using the seo

423
00:16:37,519 --> 00:16:40,880
5.0

424
00:16:38,959 --> 00:16:42,000
so we have that on there as our root of

425
00:16:40,880 --> 00:16:44,560
trust

426
00:16:42,000 --> 00:16:45,199
and we're happy that we can use that to

427
00:16:44,560 --> 00:16:46,959
um

428
00:16:45,199 --> 00:16:48,959
authenticate the device in a strong

429
00:16:46,959 --> 00:16:49,599
manner so we have an identifier out of

430
00:16:48,959 --> 00:16:51,359
that chip

431
00:16:49,600 --> 00:16:53,199
when we on board to the cloud that's

432
00:16:51,360 --> 00:16:55,680
great

433
00:16:53,199 --> 00:16:56,719
i can't understand too well can you

434
00:16:55,680 --> 00:16:58,560
speak more clearly

435
00:16:56,720 --> 00:17:01,360
so we have a board that we've been

436
00:16:58,560 --> 00:17:03,758
putting together running embedded linux

437
00:17:01,360 --> 00:17:04,720
and it has an seo 50 on it as the root

438
00:17:03,759 --> 00:17:07,520
of trust

439
00:17:04,720 --> 00:17:08,400
which is great and so we're happy that

440
00:17:07,520 --> 00:17:11,280
we use that

441
00:17:08,400 --> 00:17:13,120
to uh on board in a strong manner so the

442
00:17:11,280 --> 00:17:15,280
device has an identifier

443
00:17:13,119 --> 00:17:16,958
that's cryptographically strong and we

444
00:17:15,280 --> 00:17:19,520
know as long as that chip hasn't been

445
00:17:16,959 --> 00:17:20,880
physically removed which device is the

446
00:17:19,520 --> 00:17:22,639
device that we're on boarding to the

447
00:17:20,880 --> 00:17:24,559
cloud that's all great

448
00:17:22,640 --> 00:17:25,839
um but as we've been going through this

449
00:17:24,559 --> 00:17:27,199
process

450
00:17:25,839 --> 00:17:28,960
the other thing that we need to be able

451
00:17:27,199 --> 00:17:31,520
to do is to ensure that the code

452
00:17:28,960 --> 00:17:32,799
running on the device is trusted so this

453
00:17:31,520 --> 00:17:37,520
is an nxp imx

454
00:17:32,799 --> 00:17:37,520
8 series part that we're using now

455
00:17:38,240 --> 00:17:42,000
so what we need to do is to from power

456
00:17:40,160 --> 00:17:45,120
on loading in authenticated

457
00:17:42,000 --> 00:17:46,559
spl code bootloader kernel file system

458
00:17:45,120 --> 00:17:49,600
right the way through

459
00:17:46,559 --> 00:17:52,080
now it would seem sensible to use this

460
00:17:49,600 --> 00:17:54,240
secure element the route of trust

461
00:17:52,080 --> 00:17:55,520
to underwrite all of that but we don't

462
00:17:54,240 --> 00:17:57,200
seem to be able to

463
00:17:55,520 --> 00:17:58,799
the parts all seem to have their own

464
00:17:57,200 --> 00:18:02,559
internal mechanisms

465
00:17:58,799 --> 00:18:04,160
the and keys that are stored in the part

466
00:18:02,559 --> 00:18:06,399
and it kind of feels messy that we've

467
00:18:04,160 --> 00:18:08,640
got an external secure element

468
00:18:06,400 --> 00:18:11,039
designed to be physically temper

469
00:18:08,640 --> 00:18:13,679
resistant to whatever extent

470
00:18:11,039 --> 00:18:14,160
but we're not able to use that to secure

471
00:18:13,679 --> 00:18:16,640
you know

472
00:18:14,160 --> 00:18:18,480
the chain of trust in the boot now am i

473
00:18:16,640 --> 00:18:20,559
missing something or is is that just the

474
00:18:18,480 --> 00:18:23,760
way things are at the minute

475
00:18:20,559 --> 00:18:24,320
okay so um it's kind of an involved

476
00:18:23,760 --> 00:18:26,080
question

477
00:18:24,320 --> 00:18:27,600
i don't think you're missing much what i

478
00:18:26,080 --> 00:18:29,760
can recommend if you haven't looked at

479
00:18:27,600 --> 00:18:33,020
it yet

480
00:18:29,760 --> 00:18:35,679
is uh what can i write on here

481
00:18:33,020 --> 00:18:37,918
[Applause]

482
00:18:35,679 --> 00:18:39,360
can i write on here no that's not going

483
00:18:37,919 --> 00:18:42,559
to work so

484
00:18:39,360 --> 00:18:46,639
in fact here though we're using one

485
00:18:42,559 --> 00:18:51,678
it's uh it's a microchip microcontroller

486
00:18:46,640 --> 00:18:55,039
called a somewhere it's here

487
00:18:51,679 --> 00:18:57,760
a cec 1702

488
00:18:55,039 --> 00:18:59,120
so i'm i'm not asking you to change your

489
00:18:57,760 --> 00:19:01,120
your architecture

490
00:18:59,120 --> 00:19:02,320
and i wish that you'll be able to make

491
00:19:01,120 --> 00:19:05,760
it work with the se

492
00:19:02,320 --> 00:19:08,840
050 from nxp the nxp

493
00:19:05,760 --> 00:19:10,480
se has a hardened style of i scored c

494
00:19:08,840 --> 00:19:12,799
communication so

495
00:19:10,480 --> 00:19:14,480
theoretically at least my belief is that

496
00:19:12,799 --> 00:19:15,600
you can make the system work as you're

497
00:19:14,480 --> 00:19:18,720
describing it

498
00:19:15,600 --> 00:19:19,840
um now this the source code is actually

499
00:19:18,720 --> 00:19:22,240
in the

500
00:19:19,840 --> 00:19:24,399
it's the bootloader is i can't remember

501
00:19:22,240 --> 00:19:25,360
that the architecture of the cec1702 is

502
00:19:24,400 --> 00:19:26,880
a bit strange

503
00:19:25,360 --> 00:19:29,520
but they have a very good method of

504
00:19:26,880 --> 00:19:32,080
encrypting the firmware even if it's off

505
00:19:29,520 --> 00:19:33,039
chip if it's on sql splash or something

506
00:19:32,080 --> 00:19:36,320
like that

507
00:19:33,039 --> 00:19:39,520
and you can implement very nice secure

508
00:19:36,320 --> 00:19:42,480
boot using the cec-1702 so that's one

509
00:19:39,520 --> 00:19:44,480
alternative that i can suggest in the

510
00:19:42,480 --> 00:19:46,559
few seconds

511
00:19:44,480 --> 00:19:48,799
yeah i'd be interested if you get to

512
00:19:46,559 --> 00:19:50,840
work to know about it

513
00:19:48,799 --> 00:19:52,160
any other questions we have time for one

514
00:19:50,840 --> 00:19:55,039
more

515
00:19:52,160 --> 00:19:55,039
two more questions

516
00:20:02,320 --> 00:20:07,039
thank you thank you for the talk also in

517
00:20:05,600 --> 00:20:09,120
the context of

518
00:20:07,039 --> 00:20:10,720
embedded linux specifically we are

519
00:20:09,120 --> 00:20:13,678
looking currently

520
00:20:10,720 --> 00:20:14,320
in implementing secure elements but

521
00:20:13,679 --> 00:20:17,520
we're also

522
00:20:14,320 --> 00:20:20,720
struggling a bit or interfacing them

523
00:20:17,520 --> 00:20:23,679
seems to be a problem or it's very

524
00:20:20,720 --> 00:20:26,080
there's this standard called the pk

525
00:20:23,679 --> 00:20:28,480
sc-11 i think

526
00:20:26,080 --> 00:20:30,480
that's like a standard api but it

527
00:20:28,480 --> 00:20:31,679
depends a lot on the hardware vendor if

528
00:20:30,480 --> 00:20:33,280
they have

529
00:20:31,679 --> 00:20:35,760
if they provide a binary that implements

530
00:20:33,280 --> 00:20:36,320
that api so do you have any experience

531
00:20:35,760 --> 00:20:40,320
or

532
00:20:36,320 --> 00:20:42,480
around this ecosystem or recommendations

533
00:20:40,320 --> 00:20:44,480
yeah what it would be nice to have is a

534
00:20:42,480 --> 00:20:45,360
library that abstracts all of the

535
00:20:44,480 --> 00:20:48,960
various

536
00:20:45,360 --> 00:20:51,120
i squared c commands or other style of

537
00:20:48,960 --> 00:20:52,400
opcodes and commands that you need to

538
00:20:51,120 --> 00:20:54,799
issue to an se

539
00:20:52,400 --> 00:20:55,840
right i don't know of something like

540
00:20:54,799 --> 00:20:58,400
that

541
00:20:55,840 --> 00:21:00,080
i like to use platform i o when i'm

542
00:20:58,400 --> 00:21:02,880
dealing with open source groups and i'm

543
00:21:00,080 --> 00:21:03,360
trying to encourage people to contribute

544
00:21:02,880 --> 00:21:05,120
and

545
00:21:03,360 --> 00:21:06,559
i don't think there's anything general

546
00:21:05,120 --> 00:21:08,879
like that on platform i o

547
00:21:06,559 --> 00:21:09,918
in its library plug-in system there's no

548
00:21:08,880 --> 00:21:13,280
secure element

549
00:21:09,919 --> 00:21:13,679
uh meta library like that the other

550
00:21:13,280 --> 00:21:18,799
thing

551
00:21:13,679 --> 00:21:18,799
that you might consider is um

552
00:21:19,840 --> 00:21:25,280
that yeah they're all different i mean

553
00:21:22,960 --> 00:21:27,919
every manufacturer has their own api

554
00:21:25,280 --> 00:21:30,158
um but it's it's not so uncommon to

555
00:21:27,919 --> 00:21:31,840
place more than one secure element on a

556
00:21:30,159 --> 00:21:34,480
pcb

557
00:21:31,840 --> 00:21:35,760
in fact i have in my latest design i

558
00:21:34,480 --> 00:21:37,760
have three and i'm

559
00:21:35,760 --> 00:21:39,120
hoping to i mean i assume it will be

560
00:21:37,760 --> 00:21:40,960
reduced to two

561
00:21:39,120 --> 00:21:43,039
but you usually have one that's good at

562
00:21:40,960 --> 00:21:45,840
secure storage and another that's very

563
00:21:43,039 --> 00:21:48,320
easy to use on the api level

564
00:21:45,840 --> 00:21:49,678
that's neither one of those answers the

565
00:21:48,320 --> 00:21:52,879
platform io library

566
00:21:49,679 --> 00:21:54,960
packaging and the multiple

567
00:21:52,880 --> 00:21:57,039
ses on one board is probably what you're

568
00:21:54,960 --> 00:21:59,679
looking for but maybe that gets you

569
00:21:57,039 --> 00:22:02,158
working the right direction thank you

570
00:21:59,679 --> 00:22:02,159
you're welcome

571
00:22:03,679 --> 00:22:10,400
okay so it looks like that's it for us

572
00:22:07,039 --> 00:22:14,080
um the name of the

573
00:22:10,400 --> 00:22:15,280
so this is what we just saw and um yeah

574
00:22:14,080 --> 00:22:17,840
thanks a lot for coming

575
00:22:15,280 --> 00:22:19,760
and uh any questions later i'll be

576
00:22:17,840 --> 00:22:22,959
outside probably wandering around

577
00:22:19,760 --> 00:22:24,320
you can find me as well um i didn't put

578
00:22:22,960 --> 00:22:26,000
my email address on there but i have

579
00:22:24,320 --> 00:22:27,600
business cards so come on up if you

580
00:22:26,000 --> 00:22:40,320
want more information and we'll talk at

581
00:22:27,600 --> 00:22:42,399
another time thanks a lot

582
00:22:40,320 --> 00:22:42,399
you

