1
00:00:06,720 --> 00:00:08,800
okay

2
00:00:07,120 --> 00:00:09,840
next up we've got simon margaret who's

3
00:00:08,800 --> 00:00:17,920
going to be talking to us about

4
00:00:09,840 --> 00:00:17,920
containers and steam

5
00:00:19,279 --> 00:00:23,680
hello um so unlike most of the people

6
00:00:22,560 --> 00:00:24,560
who've been speaking in this room i'm

7
00:00:23,680 --> 00:00:26,240
not talking about

8
00:00:24,560 --> 00:00:28,320
like mission critical services i'm not

9
00:00:26,240 --> 00:00:30,159
talking about like securing your

10
00:00:28,320 --> 00:00:33,119
database or anything like that i just

11
00:00:30,160 --> 00:00:33,119
want to play half-life

12
00:00:34,559 --> 00:00:38,640
so i'm sure you all know about steam

13
00:00:37,120 --> 00:00:41,040
it's valve's app store

14
00:00:38,640 --> 00:00:42,239
for mostly games a few a few non-game

15
00:00:41,040 --> 00:00:45,440
apps as well

16
00:00:42,239 --> 00:00:47,120
um on windows on mac um on

17
00:00:45,440 --> 00:00:48,559
their own debian derived operating

18
00:00:47,120 --> 00:00:50,879
system steam offs

19
00:00:48,559 --> 00:00:51,760
and on generic linux the games are

20
00:00:50,879 --> 00:00:55,680
labeled as

21
00:00:51,760 --> 00:00:56,800
steemos but actually they work fine on

22
00:00:55,680 --> 00:00:59,920
most distributions

23
00:00:56,800 --> 00:01:01,120
sort of um i work at a company called

24
00:00:59,920 --> 00:01:03,920
collabora

25
00:01:01,120 --> 00:01:05,840
we are an open source consultancy and um

26
00:01:03,920 --> 00:01:07,200
my current project is helping valve with

27
00:01:05,840 --> 00:01:10,799
the steam runtime

28
00:01:07,200 --> 00:01:13,520
which is how their linux games

29
00:01:10,799 --> 00:01:14,400
manage to work mostly correctly on

30
00:01:13,520 --> 00:01:18,479
steemos

31
00:01:14,400 --> 00:01:21,520
on debian on fedora on arch whatever

32
00:01:18,479 --> 00:01:23,280
the problem is if you buy a game quite

33
00:01:21,520 --> 00:01:25,360
reasonably you want to you know play it

34
00:01:23,280 --> 00:01:28,320
you want it to work on your computer

35
00:01:25,360 --> 00:01:29,439
um but linux distributions are all

36
00:01:28,320 --> 00:01:33,600
different

37
00:01:29,439 --> 00:01:34,320
um it does it use lib jpeg 6 or lib jpeg

38
00:01:33,600 --> 00:01:37,360
9

39
00:01:34,320 --> 00:01:40,000
does it use live ssl

40
00:01:37,360 --> 00:01:41,040
1.0 or 1.1 or something from the distant

41
00:01:40,000 --> 00:01:44,880
past

42
00:01:41,040 --> 00:01:47,360
um you you can't really know

43
00:01:44,880 --> 00:01:48,158
quite what you're targeting um or you

44
00:01:47,360 --> 00:01:51,280
sort of can

45
00:01:48,159 --> 00:01:52,960
because the lsb exists but that's got

46
00:01:51,280 --> 00:01:55,840
like three libraries in it and

47
00:01:52,960 --> 00:01:56,640
um no operating systems actually use it

48
00:01:55,840 --> 00:01:59,759
anyway

49
00:01:56,640 --> 00:02:02,000
so it's not a great baseline for running

50
00:01:59,759 --> 00:02:03,920
all your games on

51
00:02:02,000 --> 00:02:05,439
so valve invented this thing called the

52
00:02:03,920 --> 00:02:09,520
steam runtime

53
00:02:05,439 --> 00:02:11,920
um this is from like 2012 2013

54
00:02:09,520 --> 00:02:13,280
something like that um so you have your

55
00:02:11,920 --> 00:02:15,359
host system

56
00:02:13,280 --> 00:02:17,599
um i'm a debian developer so my host

57
00:02:15,360 --> 00:02:21,599
system is obviously debian

58
00:02:17,599 --> 00:02:25,359
um and inside that we have um this box

59
00:02:21,599 --> 00:02:28,319
where um this is um there's a

60
00:02:25,360 --> 00:02:31,120
horrible shell script um that sets up an

61
00:02:28,319 --> 00:02:34,560
ld library path about this long

62
00:02:31,120 --> 00:02:36,640
um so that a bunch of libraries from the

63
00:02:34,560 --> 00:02:38,319
steam runtime

64
00:02:36,640 --> 00:02:39,760
get used instead of the ones from your

65
00:02:38,319 --> 00:02:42,079
host system

66
00:02:39,760 --> 00:02:44,239
um so this is the traditional solution

67
00:02:42,080 --> 00:02:45,760
for portable games you bundle all your

68
00:02:44,239 --> 00:02:47,440
libraries with your game

69
00:02:45,760 --> 00:02:49,280
except valve have bundled all their

70
00:02:47,440 --> 00:02:51,599
libraries with their

71
00:02:49,280 --> 00:02:52,800
launcher so that all the games get to

72
00:02:51,599 --> 00:02:54,799
share them

73
00:02:52,800 --> 00:02:56,800
and the steve runtime releases there is

74
00:02:54,800 --> 00:02:59,280
one so far are named after team fortress

75
00:02:56,800 --> 00:03:03,440
2 characters so this is scout

76
00:02:59,280 --> 00:03:05,200
um and

77
00:03:03,440 --> 00:03:08,079
if your operating system is similar

78
00:03:05,200 --> 00:03:11,839
enough to ubuntu from the distant past

79
00:03:08,080 --> 00:03:11,840
you can run your game and it works

80
00:03:13,120 --> 00:03:19,360
um yeah that ld library path

81
00:03:16,400 --> 00:03:21,599
uh is massive oversimplification it the

82
00:03:19,360 --> 00:03:23,599
the real one is huge

83
00:03:21,599 --> 00:03:25,200
the problem is you know you know i said

84
00:03:23,599 --> 00:03:26,720
if your operating system is

85
00:03:25,200 --> 00:03:28,958
similar enough to ubuntu from the

86
00:03:26,720 --> 00:03:30,400
distant past

87
00:03:28,959 --> 00:03:32,879
turns out in a modern operating system

88
00:03:30,400 --> 00:03:35,040
this doesn't work

89
00:03:32,879 --> 00:03:35,920
so um the major things we have to get

90
00:03:35,040 --> 00:03:38,560
from the

91
00:03:35,920 --> 00:03:40,559
operating system are the graphics one of

92
00:03:38,560 --> 00:03:42,640
them is the graphics driver

93
00:03:40,560 --> 00:03:44,239
so in the open source world we all want

94
00:03:42,640 --> 00:03:45,599
to use mesa or

95
00:03:44,239 --> 00:03:48,480
potentially some other open source

96
00:03:45,599 --> 00:03:52,560
driver but yeah it's nicer

97
00:03:48,480 --> 00:03:54,798
um and if you and mesa

98
00:03:52,560 --> 00:03:58,239
needs a bunch of dependencies no i don't

99
00:03:54,799 --> 00:03:58,239
want to restart steam

100
00:03:58,840 --> 00:04:05,200
right thank you steve

101
00:04:01,840 --> 00:04:06,640
offline mode well respected um

102
00:04:05,200 --> 00:04:09,200
so we need dependencies for the open

103
00:04:06,640 --> 00:04:10,879
source drivers uh we need the llvm

104
00:04:09,200 --> 00:04:12,640
libraries which are enormous

105
00:04:10,879 --> 00:04:13,920
we need the standard c plus plus runtime

106
00:04:12,640 --> 00:04:15,359
because of that which is pretty big we

107
00:04:13,920 --> 00:04:19,199
need libdrm

108
00:04:15,360 --> 00:04:22,960
um we need libgcc that's kind of

109
00:04:19,199 --> 00:04:26,080
core thing kind of important and we need

110
00:04:22,960 --> 00:04:29,440
um gdpc obviously

111
00:04:26,080 --> 00:04:30,880
and um if your gpu

112
00:04:29,440 --> 00:04:33,120
is from like this year you need a

113
00:04:30,880 --> 00:04:35,919
version of mesa that supports your gpu

114
00:04:33,120 --> 00:04:37,919
so really recent as well and there is

115
00:04:35,919 --> 00:04:42,240
kind of anecdotal evidence that if your

116
00:04:37,919 --> 00:04:44,719
colonel and mesa are about the same age

117
00:04:42,240 --> 00:04:46,160
um that's probably going to work best

118
00:04:44,720 --> 00:04:47,680
it's meant the kernel is meant to be

119
00:04:46,160 --> 00:04:48,800
perfectly backwards compatible at all

120
00:04:47,680 --> 00:04:51,120
times

121
00:04:48,800 --> 00:04:53,919
but that's really hard so it's just

122
00:04:51,120 --> 00:04:55,280
mostly backwards compatible

123
00:04:53,919 --> 00:04:57,280
and then the other side the other side

124
00:04:55,280 --> 00:04:59,520
of things we have the proprietary nvidia

125
00:04:57,280 --> 00:05:02,638
driver and historically the proprietary

126
00:04:59,520 --> 00:05:06,479
um fglrx driver for um

127
00:05:02,639 --> 00:05:08,800
ati stuff as well and these are

128
00:05:06,479 --> 00:05:10,080
um similar to mesa they have a user

129
00:05:08,800 --> 00:05:13,919
space part and they have

130
00:05:10,080 --> 00:05:15,680
a kernel side part unlike mesa

131
00:05:13,919 --> 00:05:17,840
they require the kernel module and the

132
00:05:15,680 --> 00:05:18,479
user space part to be exactly the same

133
00:05:17,840 --> 00:05:20,560
version

134
00:05:18,479 --> 00:05:21,919
the communication between them is not

135
00:05:20,560 --> 00:05:25,120
backwards compatible it's not forwards

136
00:05:21,919 --> 00:05:26,880
compatible they have to match

137
00:05:25,120 --> 00:05:28,160
so you can't bundle the user space part

138
00:05:26,880 --> 00:05:29,759
of the graphics driver

139
00:05:28,160 --> 00:05:31,919
because then it won't match the kernel

140
00:05:29,759 --> 00:05:33,840
part for most of your users and that's

141
00:05:31,919 --> 00:05:37,280
not good

142
00:05:33,840 --> 00:05:38,159
also i mentioned gillipsy glibc is kind

143
00:05:37,280 --> 00:05:41,198
of fundamental

144
00:05:38,160 --> 00:05:43,840
we can't really get away from that um

145
00:05:41,199 --> 00:05:45,919
and it has this thing the dynamic linker

146
00:05:43,840 --> 00:05:48,000
which is what actually starts your

147
00:05:45,919 --> 00:05:50,159
program like your game or whatever and

148
00:05:48,000 --> 00:05:51,759
the path to that is hardcoded

149
00:05:50,160 --> 00:05:53,199
it's part of the elf headers of every

150
00:05:51,759 --> 00:05:56,319
binary

151
00:05:53,199 --> 00:05:57,440
um you can't change it it's part of the

152
00:05:56,319 --> 00:06:00,080
api

153
00:05:57,440 --> 00:06:01,759
um you don't get to choose what path

154
00:06:00,080 --> 00:06:04,400
people are using there

155
00:06:01,759 --> 00:06:05,680
it calls into lib dl which is the actual

156
00:06:04,400 --> 00:06:06,318
implementation of loading shared

157
00:06:05,680 --> 00:06:08,960
libraries

158
00:06:06,319 --> 00:06:11,280
if they don't match their assumptions

159
00:06:08,960 --> 00:06:12,960
are going to fail because it's like

160
00:06:11,280 --> 00:06:15,119
call this function this private function

161
00:06:12,960 --> 00:06:17,039
in libdl that does the stuff we want

162
00:06:15,120 --> 00:06:19,199
oops it's not there call this other one

163
00:06:17,039 --> 00:06:22,560
oops it does something different

164
00:06:19,199 --> 00:06:26,240
bad news similarly lipdial is

165
00:06:22,560 --> 00:06:28,639
inextricably linked to lipsey and lipsy

166
00:06:26,240 --> 00:06:30,560
is linked up with a lippy thread which

167
00:06:28,639 --> 00:06:31,759
does locking and stuff that kind of

168
00:06:30,560 --> 00:06:34,160
thing

169
00:06:31,759 --> 00:06:36,160
and if they don't match you're in a

170
00:06:34,160 --> 00:06:37,759
situation that the glibc maintainers

171
00:06:36,160 --> 00:06:39,759
have never tested

172
00:06:37,759 --> 00:06:40,880
can't really be expected to have ever

173
00:06:39,759 --> 00:06:44,560
tested

174
00:06:40,880 --> 00:06:46,719
it's like this is not going to work so

175
00:06:44,560 --> 00:06:50,720
we don't have graphics drivers in steam

176
00:06:46,720 --> 00:06:50,720
runtime and we don't have glibc

177
00:06:51,520 --> 00:06:58,000
and unfortunately if you are using

178
00:06:54,960 --> 00:06:58,719
the um graphics drivers from the host

179
00:06:58,000 --> 00:07:00,400
system

180
00:06:58,720 --> 00:07:02,240
they will depend on a version of level

181
00:07:00,400 --> 00:07:03,919
lvm and all that

182
00:07:02,240 --> 00:07:05,520
that is at least the one they were

183
00:07:03,919 --> 00:07:07,919
compiled against

184
00:07:05,520 --> 00:07:09,440
a reasonable assumption except if you

185
00:07:07,919 --> 00:07:11,440
have replaced all the libraries with

186
00:07:09,440 --> 00:07:15,039
ubuntu from the distant past

187
00:07:11,440 --> 00:07:17,440
that assumption breaks your game crashes

188
00:07:15,039 --> 00:07:19,360
which is why the 2013 air esteem runtime

189
00:07:17,440 --> 00:07:20,960
stopped working

190
00:07:19,360 --> 00:07:22,720
so what we now have you'll notice the

191
00:07:20,960 --> 00:07:25,359
the same diagram

192
00:07:22,720 --> 00:07:27,360
but the box is a bit paler now um

193
00:07:25,360 --> 00:07:30,479
because instead of having

194
00:07:27,360 --> 00:07:31,120
we're using the all the driving

195
00:07:30,479 --> 00:07:33,440
libraries

196
00:07:31,120 --> 00:07:34,960
from the runtime we are now looking at

197
00:07:33,440 --> 00:07:37,120
those libraries

198
00:07:34,960 --> 00:07:38,318
comparing them with what's on the host

199
00:07:37,120 --> 00:07:41,280
system

200
00:07:38,319 --> 00:07:42,800
and um picking whichever one we think is

201
00:07:41,280 --> 00:07:45,758
newer

202
00:07:42,800 --> 00:07:46,720
so if you are running the steam runtime

203
00:07:45,759 --> 00:07:50,560
on

204
00:07:46,720 --> 00:07:53,599
something really ancient like um

205
00:07:50,560 --> 00:07:55,840
ubuntu 12 or steamos 2 which is pretty

206
00:07:53,599 --> 00:07:57,520
old by now or something like that

207
00:07:55,840 --> 00:07:59,520
um a bunch of the libraries in the steam

208
00:07:57,520 --> 00:08:01,280
runtime that valve consider important

209
00:07:59,520 --> 00:08:02,719
for games will have been upgraded

210
00:08:01,280 --> 00:08:04,479
so for example we have a newer version

211
00:08:02,720 --> 00:08:05,360
of canoe tls we have a newer version of

212
00:08:04,479 --> 00:08:08,159
sdl

213
00:08:05,360 --> 00:08:09,840
and it will prefer to use them if you're

214
00:08:08,160 --> 00:08:11,599
um others of your system libraries are

215
00:08:09,840 --> 00:08:12,799
going to be newer like in practice you

216
00:08:11,599 --> 00:08:16,240
will have a newer like

217
00:08:12,800 --> 00:08:18,080
jpeg or gtk or whatever and we'll use

218
00:08:16,240 --> 00:08:19,680
those from your host system instead of

219
00:08:18,080 --> 00:08:23,120
ours

220
00:08:19,680 --> 00:08:23,440
and again the ld library path is a mile

221
00:08:23,120 --> 00:08:26,400
long

222
00:08:23,440 --> 00:08:27,440
even longer in this case in fact and it

223
00:08:26,400 --> 00:08:30,960
works great

224
00:08:27,440 --> 00:08:32,640
except uh comparing versions of

225
00:08:30,960 --> 00:08:34,478
libraries you might think oh yeah yeah

226
00:08:32,640 --> 00:08:39,120
you just look at the sim link

227
00:08:34,479 --> 00:08:44,320
it's a sim link to like libco.so.4.1.2.3

228
00:08:39,120 --> 00:08:46,640
you compare that with libcurl.so.4.3.8

229
00:08:44,320 --> 00:08:47,839
and you can see which one is newer

230
00:08:46,640 --> 00:08:51,040
except a few libraries

231
00:08:47,839 --> 00:08:52,640
um the the so name the um

232
00:08:51,040 --> 00:08:54,560
like canonical name of the library is

233
00:08:52,640 --> 00:08:57,279
just a regular file not a sim link

234
00:08:54,560 --> 00:08:59,599
so you can't easily tell which is newer

235
00:08:57,279 --> 00:09:02,480
um we have some code in progress

236
00:08:59,600 --> 00:09:04,160
to improve on this by looking at the

237
00:09:02,480 --> 00:09:05,600
symbols exported by the library and the

238
00:09:04,160 --> 00:09:06,480
version symbols and that kind of thing

239
00:09:05,600 --> 00:09:08,720
and making

240
00:09:06,480 --> 00:09:10,560
a better educated guess but it's still

241
00:09:08,720 --> 00:09:12,959
fundamentally a gas

242
00:09:10,560 --> 00:09:14,640
um if your lip curl is newer on the

243
00:09:12,959 --> 00:09:17,279
whole system as it often will be

244
00:09:14,640 --> 00:09:18,240
it might not be the same api we've got

245
00:09:17,279 --> 00:09:21,279
as a result of

246
00:09:18,240 --> 00:09:23,279
some with hindsight bad decisions um

247
00:09:21,279 --> 00:09:24,800
made several years ago in debian that

248
00:09:23,279 --> 00:09:26,320
have since been fixed

249
00:09:24,800 --> 00:09:28,399
but the steam runtime is based on a

250
00:09:26,320 --> 00:09:31,920
version before that was fixed so

251
00:09:28,399 --> 00:09:34,000
yeah and openssl um removes symbols from

252
00:09:31,920 --> 00:09:37,040
its abi when you turn off support

253
00:09:34,000 --> 00:09:40,560
for insecure ssl versions

254
00:09:37,040 --> 00:09:43,040
um so um if you have a library that

255
00:09:40,560 --> 00:09:46,479
calls into it like lipcurl or something

256
00:09:43,040 --> 00:09:47,439
um it may not work with the hosts live

257
00:09:46,480 --> 00:09:49,120
ssl because

258
00:09:47,440 --> 00:09:50,720
even if the sony name is the same that

259
00:09:49,120 --> 00:09:53,040
symbol has gone away

260
00:09:50,720 --> 00:09:55,360
so we have to hack things like lib curl

261
00:09:53,040 --> 00:09:58,800
to not try and use the old ssl versions

262
00:09:55,360 --> 00:10:01,760
even if it detects them also um

263
00:09:58,800 --> 00:10:03,040
the dotted line on the my diagram is not

264
00:10:01,760 --> 00:10:06,399
a hard boundary

265
00:10:03,040 --> 00:10:08,079
um game vendors will often

266
00:10:06,399 --> 00:10:09,519
compile their game test their game it

267
00:10:08,079 --> 00:10:11,439
works good ship it

268
00:10:09,519 --> 00:10:12,560
even if some of their dependencies are

269
00:10:11,440 --> 00:10:13,760
in fact

270
00:10:12,560 --> 00:10:16,160
things that came from outside the

271
00:10:13,760 --> 00:10:18,880
runtime and

272
00:10:16,160 --> 00:10:20,800
we never shipped a copy of that if you

273
00:10:18,880 --> 00:10:24,240
happen to have that on your host system

274
00:10:20,800 --> 00:10:28,079
their game works great if you don't

275
00:10:24,240 --> 00:10:29,760
problem so

276
00:10:28,079 --> 00:10:31,839
big thing i have been working on lately

277
00:10:29,760 --> 00:10:35,040
is pressure vessel

278
00:10:31,839 --> 00:10:37,279
this is a little open source

279
00:10:35,040 --> 00:10:39,760
program recycling a bunch of code from

280
00:10:37,279 --> 00:10:42,160
flat pack

281
00:10:39,760 --> 00:10:43,839
so steam is still in it in the old style

282
00:10:42,160 --> 00:10:46,880
runtime

283
00:10:43,839 --> 00:10:47,680
but as a child process we have um bubble

284
00:10:46,880 --> 00:10:49,279
wrap

285
00:10:47,680 --> 00:10:51,040
represented by here by his mascot of a

286
00:10:49,279 --> 00:10:54,079
bobble wrapped cat

287
00:10:51,040 --> 00:10:56,480
um this makes a little container so

288
00:10:54,079 --> 00:10:58,000
um quite similar to what flat pack does

289
00:10:56,480 --> 00:11:01,360
much of the same code

290
00:10:58,000 --> 00:11:03,600
in this container it's a very strict um

291
00:11:01,360 --> 00:11:04,720
scout environment you get the libraries

292
00:11:03,600 --> 00:11:07,680
from scout and

293
00:11:04,720 --> 00:11:08,399
no more if your library is correctly

294
00:11:07,680 --> 00:11:10,239
done

295
00:11:08,399 --> 00:11:11,680
was built in a scout environment like

296
00:11:10,240 --> 00:11:14,800
half-life for example

297
00:11:11,680 --> 00:11:18,000
it works fine if your game is one

298
00:11:14,800 --> 00:11:19,839
from a less strict publisher

299
00:11:18,000 --> 00:11:21,519
it probably won't work but it didn't

300
00:11:19,839 --> 00:11:22,800
work for some people anyway right so at

301
00:11:21,519 --> 00:11:25,040
least they can qa it

302
00:11:22,800 --> 00:11:29,680
um if they test in this very strict

303
00:11:25,040 --> 00:11:31,920
container it should work for everyone

304
00:11:29,680 --> 00:11:33,359
a hard part of this is we have to hoover

305
00:11:31,920 --> 00:11:35,760
up the graphics drivers from the host

306
00:11:33,360 --> 00:11:38,000
system

307
00:11:35,760 --> 00:11:39,040
and we have and because they have

308
00:11:38,000 --> 00:11:40,720
dependencies

309
00:11:39,040 --> 00:11:42,399
we still have to get the dependencies

310
00:11:40,720 --> 00:11:44,000
into the container somehow

311
00:11:42,399 --> 00:11:45,440
and there's some mad hacks in pressure

312
00:11:44,000 --> 00:11:47,600
vessel to make this work

313
00:11:45,440 --> 00:11:48,640
uh remember i said the ld.0 path was

314
00:11:47,600 --> 00:11:50,240
hard coded

315
00:11:48,640 --> 00:11:51,680
we have to bind mount the right ld

316
00:11:50,240 --> 00:11:52,560
that's so over the top of it to make

317
00:11:51,680 --> 00:11:55,199
this work

318
00:11:52,560 --> 00:11:57,040
we wish we didn't have to do this but

319
00:11:55,200 --> 00:11:59,200
it's kind of necessary

320
00:11:57,040 --> 00:12:00,959
um because the graphics driver in your

321
00:11:59,200 --> 00:12:04,160
container wouldn't support your hardware

322
00:12:00,959 --> 00:12:05,439
because it's old um as an experimental

323
00:12:04,160 --> 00:12:06,480
side benefit we can do other fun

324
00:12:05,440 --> 00:12:07,519
container things

325
00:12:06,480 --> 00:12:09,519
so we can give you a separate home

326
00:12:07,519 --> 00:12:12,399
directory for each game

327
00:12:09,519 --> 00:12:13,200
so that um anything in that home

328
00:12:12,399 --> 00:12:14,639
directory

329
00:12:13,200 --> 00:12:16,240
we know it came from that game we can

330
00:12:14,639 --> 00:12:18,639
send it to the cloud to the

331
00:12:16,240 --> 00:12:20,000
um steam cloud you get your set of games

332
00:12:18,639 --> 00:12:23,200
everywhere

333
00:12:20,000 --> 00:12:25,120
except uh currently this feature um the

334
00:12:23,200 --> 00:12:26,639
actual steam client doesn't know about

335
00:12:25,120 --> 00:12:28,079
the separate home directories so cloud

336
00:12:26,639 --> 00:12:30,320
autosync

337
00:12:28,079 --> 00:12:32,000
is worse with this feature and the steam

338
00:12:30,320 --> 00:12:33,120
workshop also doesn't know about this

339
00:12:32,000 --> 00:12:34,800
yet

340
00:12:33,120 --> 00:12:36,480
unlike a lot of container stuff we are

341
00:12:34,800 --> 00:12:38,160
not trying to do security here

342
00:12:36,480 --> 00:12:41,920
it's not a security boundary it would be

343
00:12:38,160 --> 00:12:45,199
nice but it's not the priority right now

344
00:12:41,920 --> 00:12:46,160
meanwhile uh you may recognize this guy

345
00:12:45,200 --> 00:12:48,399
giving a talk

346
00:12:46,160 --> 00:12:50,639
in a room similar to this one two years

347
00:12:48,399 --> 00:12:50,639
ago

348
00:12:51,279 --> 00:12:55,839
so flat pack has come along um people in

349
00:12:54,560 --> 00:12:59,279
the community not me

350
00:12:55,839 --> 00:13:02,959
um have um made the steam client

351
00:12:59,279 --> 00:13:05,200
into an unofficial flat pack app so

352
00:13:02,959 --> 00:13:06,160
here we have flat pack on my debian host

353
00:13:05,200 --> 00:13:09,120
system

354
00:13:06,160 --> 00:13:10,800
starts the container using bubble wrap

355
00:13:09,120 --> 00:13:12,800
this container is using the free desktop

356
00:13:10,800 --> 00:13:14,880
sdk

357
00:13:12,800 --> 00:13:17,760
which is a set of libraries done by

358
00:13:14,880 --> 00:13:20,720
freelance.org people

359
00:13:17,760 --> 00:13:21,839
and inside that we have the traditional

360
00:13:20,720 --> 00:13:25,600
scout runtime

361
00:13:21,839 --> 00:13:28,639
just the way it was a few slides ago

362
00:13:25,600 --> 00:13:30,880
um so

363
00:13:28,639 --> 00:13:32,240
this is a security boundary at least a

364
00:13:30,880 --> 00:13:33,920
little bit

365
00:13:32,240 --> 00:13:36,399
it's kind of porous right now but we'll

366
00:13:33,920 --> 00:13:37,760
get better um

367
00:13:36,399 --> 00:13:40,240
as far as the steam run time is

368
00:13:37,760 --> 00:13:43,120
concerned the um

369
00:13:40,240 --> 00:13:44,160
the free desktop sdk is like in the role

370
00:13:43,120 --> 00:13:45,360
of the host system

371
00:13:44,160 --> 00:13:47,760
so we get the graphics drivers from the

372
00:13:45,360 --> 00:13:49,680
flat pack runtime we get some libraries

373
00:13:47,760 --> 00:13:52,240
we'll talk about runtime

374
00:13:49,680 --> 00:13:53,680
and a unique feature of this thing is

375
00:13:52,240 --> 00:13:56,800
that um there is um

376
00:13:53,680 --> 00:14:00,560
some madness with an ld audit plug-in

377
00:13:56,800 --> 00:14:03,120
inside the container to

378
00:14:00,560 --> 00:14:04,638
force uh broken games to work even if

379
00:14:03,120 --> 00:14:07,199
they bundle libraries they shouldn't

380
00:14:04,639 --> 00:14:10,000
which is great and i'm amazed it works

381
00:14:07,199 --> 00:14:10,000
and we should steal it

382
00:14:11,279 --> 00:14:14,800
unfortunately combining these two is

383
00:14:13,839 --> 00:14:18,000
pretty difficult

384
00:14:14,800 --> 00:14:19,439
um because some of the constraints that

385
00:14:18,000 --> 00:14:22,000
are put on

386
00:14:19,440 --> 00:14:24,880
flat pack containers mean we can't enter

387
00:14:22,000 --> 00:14:24,880
another container

388
00:14:25,199 --> 00:14:29,599
so the stuff we want to do in future old

389
00:14:27,519 --> 00:14:32,720
games have to keep working

390
00:14:29,600 --> 00:14:34,000
even if your gpu is new for new games we

391
00:14:32,720 --> 00:14:36,959
want new runtimes

392
00:14:34,000 --> 00:14:38,079
so more team fortress characters um we

393
00:14:36,959 --> 00:14:42,319
currently have a

394
00:14:38,079 --> 00:14:45,120
um we currently have a

395
00:14:42,320 --> 00:14:45,760
runtime being tested called soldier

396
00:14:45,120 --> 00:14:48,880
which is

397
00:14:45,760 --> 00:14:51,279
somewhat newer than scout heavy and

398
00:14:48,880 --> 00:14:54,160
spy are slightly older ones that we

399
00:14:51,279 --> 00:14:57,680
tried but abandoned

400
00:14:54,160 --> 00:14:59,199
um and

401
00:14:57,680 --> 00:15:00,560
when we go into this newer runtime

402
00:14:59,199 --> 00:15:01,839
environment we don't want to repeat the

403
00:15:00,560 --> 00:15:04,680
mistakes of the past

404
00:15:01,839 --> 00:15:05,920
and have your game not work reliably um

405
00:15:04,680 --> 00:15:09,120
[Music]

406
00:15:05,920 --> 00:15:10,160
in the i in a new distribution in like

407
00:15:09,120 --> 00:15:13,199
five years time

408
00:15:10,160 --> 00:15:14,800
or ten years time um so

409
00:15:13,199 --> 00:15:16,959
we want everyone who is testing their

410
00:15:14,800 --> 00:15:20,160
game in soldier to be testing

411
00:15:16,959 --> 00:15:21,439
a strict soldier environment that um

412
00:15:20,160 --> 00:15:23,120
they can't accidentally pick up

413
00:15:21,440 --> 00:15:25,199
dependencies on libraries we don't have

414
00:15:23,120 --> 00:15:28,399
and that kind of thing

415
00:15:25,199 --> 00:15:30,319
so one strategy for this is that um

416
00:15:28,399 --> 00:15:31,920
because we've got a pressure vessel uh

417
00:15:30,320 --> 00:15:32,959
we don't need to pick the same runtime

418
00:15:31,920 --> 00:15:34,560
every time

419
00:15:32,959 --> 00:15:36,319
so if we imagine that half-life had been

420
00:15:34,560 --> 00:15:37,359
ported to be built in soldier rather

421
00:15:36,320 --> 00:15:39,839
than in spy

422
00:15:37,360 --> 00:15:41,279
we could just make a different container

423
00:15:39,839 --> 00:15:42,560
and this means

424
00:15:41,279 --> 00:15:44,639
not all the games have to have the same

425
00:15:42,560 --> 00:15:46,560
runtime the games don't have to have the

426
00:15:44,639 --> 00:15:49,360
same runtime as the steam client

427
00:15:46,560 --> 00:15:49,359
everything's great

428
00:15:50,160 --> 00:15:54,000
another possibility is where because

429
00:15:53,120 --> 00:15:57,839
mistakes have been

430
00:15:54,000 --> 00:16:00,399
made and blame was ascribed some games

431
00:15:57,839 --> 00:16:01,920
have dependencies that are not in the

432
00:16:00,399 --> 00:16:04,399
scout environment

433
00:16:01,920 --> 00:16:06,479
but those games basically work on scout

434
00:16:04,399 --> 00:16:07,440
in debian 10 we have like empirical

435
00:16:06,480 --> 00:16:10,880
evidence

436
00:16:07,440 --> 00:16:12,240
that that works so why don't we put the

437
00:16:10,880 --> 00:16:15,120
old runtime

438
00:16:12,240 --> 00:16:16,880
inside the new runtime and use the fact

439
00:16:15,120 --> 00:16:18,160
that the new runtime is pretty similar

440
00:16:16,880 --> 00:16:22,160
to a current

441
00:16:18,160 --> 00:16:25,279
version of for example debian and

442
00:16:22,160 --> 00:16:27,279
that might well make um games more

443
00:16:25,279 --> 00:16:28,720
reliable

444
00:16:27,279 --> 00:16:32,000
and again we don't want to do this for

445
00:16:28,720 --> 00:16:35,199
future games it's just for current ones

446
00:16:32,000 --> 00:16:37,440
um and finally um we have uh

447
00:16:35,199 --> 00:16:38,959
this setup that i have been trying to

448
00:16:37,440 --> 00:16:41,199
get working

449
00:16:38,959 --> 00:16:43,359
flatback now has support for what they

450
00:16:41,199 --> 00:16:45,758
call sub-sandboxing

451
00:16:43,360 --> 00:16:47,759
where instead of making another

452
00:16:45,759 --> 00:16:50,000
container inside your container

453
00:16:47,759 --> 00:16:52,320
which you're not allowed to do you can

454
00:16:50,000 --> 00:16:55,199
send an ipc request out to flat pack

455
00:16:52,320 --> 00:16:56,480
and say please make me a container make

456
00:16:55,199 --> 00:16:59,599
it look like this

457
00:16:56,480 --> 00:17:01,040
go and so you have the steam client in

458
00:16:59,600 --> 00:17:03,199
your original container in the free

459
00:17:01,040 --> 00:17:06,639
desktop sdk environment

460
00:17:03,199 --> 00:17:10,079
and then over here you have half-life

461
00:17:06,640 --> 00:17:13,679
in your scout container flatback

462
00:17:10,079 --> 00:17:14,720
can't currently do this there is not all

463
00:17:13,679 --> 00:17:18,160
the code yet

464
00:17:14,720 --> 00:17:20,079
to be able to ask it to use a totally

465
00:17:18,160 --> 00:17:21,679
different runtime

466
00:17:20,079 --> 00:17:23,280
but the flat pack developers seem to be

467
00:17:21,679 --> 00:17:25,120
fairly receptive to the idea that that's

468
00:17:23,280 --> 00:17:29,440
something they might do in future

469
00:17:25,119 --> 00:17:31,840
so hopefully we can get that working and

470
00:17:29,440 --> 00:17:33,520
have these parallel containers and flat

471
00:17:31,840 --> 00:17:36,559
pack users will be able to benefit from

472
00:17:33,520 --> 00:17:36,559
this multiple runtime thing

473
00:17:41,039 --> 00:17:47,840
any questions or alternatively do you

474
00:17:43,919 --> 00:17:47,840
want a demo

475
00:17:48,160 --> 00:17:53,520
right so

476
00:17:51,200 --> 00:17:55,600
here is the reason steam was nagging me

477
00:17:53,520 --> 00:17:58,879
to update it

478
00:17:55,600 --> 00:18:00,719
this is not a special magic hacked up

479
00:17:58,880 --> 00:18:01,440
steam this is just the normal public

480
00:18:00,720 --> 00:18:03,440
beta

481
00:18:01,440 --> 00:18:05,440
of the steam client i don't even have

482
00:18:03,440 --> 00:18:09,200
access to the private ones

483
00:18:05,440 --> 00:18:11,039
um and uh

484
00:18:09,200 --> 00:18:12,799
the only thing i've done a bit

485
00:18:11,039 --> 00:18:14,320
differently is i've run it with this

486
00:18:12,799 --> 00:18:17,200
magical option

487
00:18:14,320 --> 00:18:18,240
um to ask pressure vessel to give me a

488
00:18:17,200 --> 00:18:20,000
gui

489
00:18:18,240 --> 00:18:21,840
um instead of just running the game

490
00:18:20,000 --> 00:18:23,600
straight off um you can

491
00:18:21,840 --> 00:18:25,199
you can get the magic incantations for

492
00:18:23,600 --> 00:18:28,719
how to control pressure vessel

493
00:18:25,200 --> 00:18:32,080
from the source code um

494
00:18:28,720 --> 00:18:34,799
so this will take a moment because it

495
00:18:32,080 --> 00:18:36,399
may have to unpack my runtime okay

496
00:18:34,799 --> 00:18:37,679
so i have this little test ui that i've

497
00:18:36,400 --> 00:18:39,360
asked for normally you wouldn't get this

498
00:18:37,679 --> 00:18:41,600
normally you just get a game

499
00:18:39,360 --> 00:18:44,080
this is my development version that has

500
00:18:41,600 --> 00:18:46,000
all sorts of inadvisable options

501
00:18:44,080 --> 00:18:47,840
like making a process id namespace which

502
00:18:46,000 --> 00:18:50,320
doesn't even work because it confuses

503
00:18:47,840 --> 00:18:50,320
steam

504
00:18:52,640 --> 00:18:57,840
so i'm running it in the scout runtime

505
00:18:56,320 --> 00:19:01,280
it's giving me a choice of runtimes i

506
00:18:57,840 --> 00:19:03,120
have a copy of soldier available

507
00:19:01,280 --> 00:19:04,320
i have this option here to put an ld

508
00:19:03,120 --> 00:19:07,600
library path runtime inside the

509
00:19:04,320 --> 00:19:07,600
container that doesn't work yet

510
00:19:07,679 --> 00:19:12,720
and i'm going to tell it to run a shell

511
00:19:09,679 --> 00:19:14,240
instead of actually running half-life

512
00:19:12,720 --> 00:19:16,080
so this is a thing i think i put in for

513
00:19:14,240 --> 00:19:19,440
debugging the environment um

514
00:19:16,080 --> 00:19:24,559
this is an x term inside my container

515
00:19:19,440 --> 00:19:26,080
so if i catch etc is release

516
00:19:24,559 --> 00:19:27,678
you can see that this is not my debian

517
00:19:26,080 --> 00:19:31,199
host system this is

518
00:19:27,679 --> 00:19:33,360
a purely scout container slash edc

519
00:19:31,200 --> 00:19:36,320
and slash user and all the rest of it

520
00:19:33,360 --> 00:19:36,320
came from scout

521
00:19:37,200 --> 00:19:41,840
um except for this overrides directory

522
00:19:39,840 --> 00:19:43,360
which has all the stuff i've yinked in

523
00:19:41,840 --> 00:19:45,360
from my host system to get my graphics

524
00:19:43,360 --> 00:19:48,719
drivers working

525
00:19:45,360 --> 00:19:50,559
and um this

526
00:19:48,720 --> 00:19:52,160
shell has the command to run stuffed

527
00:19:50,559 --> 00:19:55,520
into this variable

528
00:19:52,160 --> 00:19:56,880
so you can run your game a bit of

529
00:19:55,520 --> 00:20:07,840
logging happens

530
00:19:56,880 --> 00:20:07,840
and welcome to black mesa

531
00:20:12,320 --> 00:20:21,840
and we are off time thank you

532
00:20:27,760 --> 00:20:29,840
you

