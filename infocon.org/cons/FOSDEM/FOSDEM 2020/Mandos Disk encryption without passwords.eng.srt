1
00:00:05,440 --> 00:00:10,719
for the next speaker we have

2
00:00:07,520 --> 00:00:12,079
uh terry and who's going to talk about

3
00:00:10,719 --> 00:00:17,919
mandos so please

4
00:00:12,080 --> 00:00:17,920
introduce please welcome the speaker

5
00:00:19,279 --> 00:00:24,960
um thank you uh i can't see my slides

6
00:00:23,039 --> 00:00:26,560
from here so i'll have to read from the

7
00:00:24,960 --> 00:00:29,519
same display as you

8
00:00:26,560 --> 00:00:30,560
uh mandos is something that enables you

9
00:00:29,519 --> 00:00:32,479
to use this

10
00:00:30,560 --> 00:00:33,920
full disk encryptions on your on your

11
00:00:32,479 --> 00:00:37,199
servers

12
00:00:33,920 --> 00:00:37,920
uh which you should do probably let's

13
00:00:37,200 --> 00:00:40,719
see

14
00:00:37,920 --> 00:00:42,480
yeah if you use physical or bare metal

15
00:00:40,719 --> 00:00:43,840
hardware

16
00:00:42,480 --> 00:00:45,599
and you have more than one physical

17
00:00:43,840 --> 00:00:47,440
machine then you can you

18
00:00:45,600 --> 00:00:48,719
and you want to use full disk encryption

19
00:00:47,440 --> 00:00:50,399
which is you do

20
00:00:48,719 --> 00:00:53,280
then you could use manuals because it

21
00:00:50,399 --> 00:00:54,800
enables you to do that

22
00:00:53,280 --> 00:00:56,640
if you don't already use for this

23
00:00:54,800 --> 00:00:59,358
encryption you probably should

24
00:00:56,640 --> 00:01:00,559
but if the only reason you wasn't doing

25
00:00:59,359 --> 00:01:02,160
that because you couldn't

26
00:01:00,559 --> 00:01:04,080
then mundus will probably help you do

27
00:01:02,160 --> 00:01:06,798
that

28
00:01:04,080 --> 00:01:08,240
uh so the problem with running full disc

29
00:01:06,799 --> 00:01:10,159
encryption is normally

30
00:01:08,240 --> 00:01:12,479
that the you can't type in the password

31
00:01:10,159 --> 00:01:15,520
if the server reboots

32
00:01:12,479 --> 00:01:17,840
but montessori's problem it bundles

33
00:01:15,520 --> 00:01:19,439
one running machine can send the

34
00:01:17,840 --> 00:01:20,159
password to the other machine which is

35
00:01:19,439 --> 00:01:23,360
booting up

36
00:01:20,159 --> 00:01:24,159
which needs the password so if one

37
00:01:23,360 --> 00:01:27,200
machine boots

38
00:01:24,159 --> 00:01:27,920
reboots the other machine can send the

39
00:01:27,200 --> 00:01:29,680
password and

40
00:01:27,920 --> 00:01:31,439
then the first machine can run the

41
00:01:29,680 --> 00:01:32,320
reboot and get the password from the

42
00:01:31,439 --> 00:01:35,439
second machine

43
00:01:32,320 --> 00:01:37,279
so two machines can reboot and still be

44
00:01:35,439 --> 00:01:39,119
uh secure both of them before the

45
00:01:37,280 --> 00:01:40,720
encryption and if both machines are

46
00:01:39,119 --> 00:01:44,960
turned off

47
00:01:40,720 --> 00:01:44,960
uh let's see dang it

48
00:01:45,680 --> 00:01:50,159
yeah and the crucial thing is there's no

49
00:01:48,479 --> 00:01:51,840
interactivity here

50
00:01:50,159 --> 00:01:53,759
you don't have to approve although you

51
00:01:51,840 --> 00:01:54,000
can come from here to do it so you don't

52
00:01:53,759 --> 00:01:55,680
have

53
00:01:54,000 --> 00:01:58,159
to and normally it doesn't require

54
00:01:55,680 --> 00:01:58,159
approval

55
00:02:00,399 --> 00:02:05,759
yes it's basically invisible while

56
00:02:04,240 --> 00:02:07,280
once you install and configure it it

57
00:02:05,759 --> 00:02:08,639
just reboots normally you don't have to

58
00:02:07,280 --> 00:02:10,720
see anything it's just

59
00:02:08,639 --> 00:02:12,079
a password prompts appear and then it

60
00:02:10,720 --> 00:02:15,280
disappears

61
00:02:12,080 --> 00:02:19,040
you don't have to type in anything

62
00:02:15,280 --> 00:02:20,959
uh and it supports all the normal inner

63
00:02:19,040 --> 00:02:23,679
mfs tools and records

64
00:02:20,959 --> 00:02:25,840
both with and without systemd both are

65
00:02:23,680 --> 00:02:28,000
used now in debian

66
00:02:25,840 --> 00:02:29,680
and the server side is all configured

67
00:02:28,000 --> 00:02:32,800
and controllable by d bus

68
00:02:29,680 --> 00:02:34,480
and various command line utilities for

69
00:02:32,800 --> 00:02:39,200
control and

70
00:02:34,480 --> 00:02:41,280
inspections are provided uh

71
00:02:39,200 --> 00:02:43,760
huh i thought i had a slide there but

72
00:02:41,280 --> 00:02:43,760
never mind

73
00:02:48,160 --> 00:02:52,400
let me check here i think i'm skipping

74
00:02:51,440 --> 00:02:55,519
slide

75
00:02:52,400 --> 00:02:58,239
no i guess not um

76
00:02:55,519 --> 00:02:59,760
there are various uh objections to to

77
00:02:58,239 --> 00:03:01,680
this protocol because everyone thinks

78
00:02:59,760 --> 00:03:04,480
that wait isn't that insecure

79
00:03:01,680 --> 00:03:05,200
but no that it's actually not insecure

80
00:03:04,480 --> 00:03:06,720
we use

81
00:03:05,200 --> 00:03:08,238
tls encrypted communication with the

82
00:03:06,720 --> 00:03:10,400
perfect for security

83
00:03:08,239 --> 00:03:12,000
and that that data that is transmitted

84
00:03:10,400 --> 00:03:13,599
is not a clear text password even though

85
00:03:12,000 --> 00:03:15,760
it's tls encrypted

86
00:03:13,599 --> 00:03:17,440
it's double encrypted because the data

87
00:03:15,760 --> 00:03:19,840
that's transmitted says open pgp

88
00:03:17,440 --> 00:03:19,840
encrypted

89
00:03:20,879 --> 00:03:24,000
so it's quite easy to install it's been

90
00:03:23,120 --> 00:03:27,599
in debian and

91
00:03:24,000 --> 00:03:30,840
ubuntu for about 10 years no maybe

92
00:03:27,599 --> 00:03:32,720
five i can't remember many years any

93
00:03:30,840 --> 00:03:34,239
case so if

94
00:03:32,720 --> 00:03:35,840
you want to just install it you can just

95
00:03:34,239 --> 00:03:38,080
install it from a normal debian or

96
00:03:35,840 --> 00:03:41,440
ubuntu approach sorry or you can you can

97
00:03:38,080 --> 00:03:41,440
use our private package

98
00:03:41,680 --> 00:03:46,080
index from instructions or on that

99
00:03:44,840 --> 00:03:48,640
website

100
00:03:46,080 --> 00:03:49,440
uh let's dang it i think i skipped some

101
00:03:48,640 --> 00:03:53,839
some slides

102
00:03:49,440 --> 00:03:53,840
yeah these keys

103
00:03:55,280 --> 00:04:02,400
okay let's see slides yes

104
00:03:58,879 --> 00:04:02,399
uh ah here we go

105
00:04:03,760 --> 00:04:06,480
mandos has

106
00:04:07,120 --> 00:04:12,400
a threat model that's probably what your

107
00:04:10,720 --> 00:04:15,359
threat model is also

108
00:04:12,400 --> 00:04:16,079
because what you really want to protect

109
00:04:15,360 --> 00:04:18,720
from

110
00:04:16,079 --> 00:04:20,400
is that what could reasonably you could

111
00:04:18,720 --> 00:04:22,479
reasonably assume to happen

112
00:04:20,399 --> 00:04:24,159
like there is someone coming in taking

113
00:04:22,479 --> 00:04:27,039
all your service and

114
00:04:24,160 --> 00:04:28,800
running off with them turned off and if

115
00:04:27,040 --> 00:04:30,080
that happens if you don't have following

116
00:04:28,800 --> 00:04:31,600
subscription then of course they can

117
00:04:30,080 --> 00:04:34,800
read all your disks

118
00:04:31,600 --> 00:04:36,400
but if you have mandos then since both

119
00:04:34,800 --> 00:04:38,160
servers are then turned off

120
00:04:36,400 --> 00:04:39,679
the the disks are fully encrypted and

121
00:04:38,160 --> 00:04:41,280
you you someone have to sub type in

122
00:04:39,680 --> 00:04:42,320
password to either one of the servers to

123
00:04:41,280 --> 00:04:45,359
get both up

124
00:04:42,320 --> 00:04:48,800
so in that case that's secure

125
00:04:45,360 --> 00:04:50,639
so in that normal expected case it's

126
00:04:48,800 --> 00:04:52,320
just as secure as normal full disk

127
00:04:50,639 --> 00:04:56,000
encryption

128
00:04:52,320 --> 00:04:58,560
of course so

129
00:04:56,000 --> 00:04:59,520
as as i said in that case it fails safe

130
00:04:58,560 --> 00:05:01,520
it's like

131
00:04:59,520 --> 00:05:04,159
it deadlocks both the servers if both

132
00:05:01,520 --> 00:05:04,159
are turned off

133
00:05:04,960 --> 00:05:10,159
uh yeah and if you

134
00:05:08,320 --> 00:05:11,440
currently do not run full disk

135
00:05:10,160 --> 00:05:14,560
encryption

136
00:05:11,440 --> 00:05:16,400
then you could probably use mount full

137
00:05:14,560 --> 00:05:20,080
disconception with mantos anyway because

138
00:05:16,400 --> 00:05:20,080
at least that's better than nothing

139
00:05:20,880 --> 00:05:24,000
and in theory there is one weakness

140
00:05:23,199 --> 00:05:26,479
because

141
00:05:24,000 --> 00:05:27,360
you could in theory take one server

142
00:05:26,479 --> 00:05:29,440
offline

143
00:05:27,360 --> 00:05:31,039
inspect the internal fs and extract the

144
00:05:29,440 --> 00:05:33,280
secret key within this

145
00:05:31,039 --> 00:05:34,560
very short timeout and then use that to

146
00:05:33,280 --> 00:05:36,239
unlock the other server

147
00:05:34,560 --> 00:05:38,960
but you'd have to assume very

148
00:05:36,240 --> 00:05:40,720
sophisticated attackers to do that

149
00:05:38,960 --> 00:05:42,719
and if the your attackers were very

150
00:05:40,720 --> 00:05:44,400
sophisticated you they could just

151
00:05:42,720 --> 00:05:48,400
just as well do a cold boot attack and

152
00:05:44,400 --> 00:05:52,000
read the the keys directly from ram

153
00:05:48,400 --> 00:05:53,440
so that's not really what we aim to

154
00:05:52,000 --> 00:05:55,759
protect against

155
00:05:53,440 --> 00:05:57,680
what we aim to forget against is the

156
00:05:55,759 --> 00:05:59,360
usual expected attack of somebody

157
00:05:57,680 --> 00:06:02,080
turning off both servers and making off

158
00:05:59,360 --> 00:06:02,080
of them with them

159
00:06:02,720 --> 00:06:07,199
and of course if you want to you can

160
00:06:04,240 --> 00:06:10,400
configure mundus to require approval

161
00:06:07,199 --> 00:06:12,080
for each reboot so you can okay some

162
00:06:10,400 --> 00:06:13,599
server wants to boot up and you have to

163
00:06:12,080 --> 00:06:15,199
log in and say yes

164
00:06:13,600 --> 00:06:16,800
allow this server you don't have to type

165
00:06:15,199 --> 00:06:19,680
in the password you just have to

166
00:06:16,800 --> 00:06:20,720
allow it to boot and then it's just to

167
00:06:19,680 --> 00:06:22,240
secure again

168
00:06:20,720 --> 00:06:24,880
but of course then you can't reboot

169
00:06:22,240 --> 00:06:24,880
while you sleep

170
00:06:25,840 --> 00:06:29,039
and that's the installation instruction

171
00:06:28,160 --> 00:06:32,319
basically

172
00:06:29,039 --> 00:06:34,800
it's very easy i think that's it i'm

173
00:06:32,319 --> 00:06:36,160
just mostly here because i want to

174
00:06:34,800 --> 00:06:38,240
promote awareness that this

175
00:06:36,160 --> 00:06:39,360
system exists because i see many many

176
00:06:38,240 --> 00:06:41,919
people

177
00:06:39,360 --> 00:06:43,520
running servers and not using full disk

178
00:06:41,919 --> 00:06:43,919
encryption because they think they have

179
00:06:43,520 --> 00:06:45,599
to

180
00:06:43,919 --> 00:06:47,440
type in the password every time they

181
00:06:45,600 --> 00:06:50,240
reboot which you know with

182
00:06:47,440 --> 00:06:51,599
remote servers or service not in their

183
00:06:50,240 --> 00:06:53,199
room

184
00:06:51,599 --> 00:06:55,039
you can't do that but with manuals you

185
00:06:53,199 --> 00:06:57,199
can so i'm just

186
00:06:55,039 --> 00:06:59,599
putting it out there this this exists

187
00:06:57,199 --> 00:07:04,000
and it has existed for like 10 years

188
00:06:59,599 --> 00:07:07,360
but not very well known still

189
00:07:04,000 --> 00:07:07,360
i think that's about it

190
00:07:12,800 --> 00:07:16,560
i think we have thompson for some

191
00:07:14,840 --> 00:07:20,159
questions

192
00:07:16,560 --> 00:07:20,160
it was much faster than i thought

193
00:07:28,000 --> 00:07:31,840
i can't hear anything from a microphone

194
00:07:29,599 --> 00:07:34,639
i don't think they should be ready um

195
00:07:31,840 --> 00:07:37,280
let me come from the others oh yeah no i

196
00:07:34,639 --> 00:07:37,280
think it's working

197
00:07:38,479 --> 00:07:42,719
uh just to make sure that i understood

198
00:07:40,479 --> 00:07:44,800
correctly so if i have two machines and

199
00:07:42,720 --> 00:07:47,680
both of them are down

200
00:07:44,800 --> 00:07:50,000
then to start it again there will be a

201
00:07:47,680 --> 00:07:52,560
password that had to be entered right

202
00:07:50,000 --> 00:07:54,800
if both are done not for every remote

203
00:07:52,560 --> 00:07:56,479
but if it happens that all the machines

204
00:07:54,800 --> 00:07:58,000
are down at the same time they have the

205
00:07:56,479 --> 00:08:00,560
pipeline password for at least one

206
00:07:58,000 --> 00:08:01,840
of them then that one can automatically

207
00:08:00,560 --> 00:08:04,879
respond with passwords to

208
00:08:01,840 --> 00:08:08,080
the others ones okay and that's uh

209
00:08:04,879 --> 00:08:09,520
i read that said it was gpg encryption

210
00:08:08,080 --> 00:08:12,800
is that the

211
00:08:09,520 --> 00:08:16,400
is that the way

212
00:08:12,800 --> 00:08:18,479
is that the key this gpg encryption

213
00:08:16,400 --> 00:08:20,159
we use both tls encryption for the

214
00:08:18,479 --> 00:08:22,000
actual network communication but

215
00:08:20,160 --> 00:08:23,520
the thing that is communicated over that

216
00:08:22,000 --> 00:08:28,400
encrypted channel is

217
00:08:23,520 --> 00:08:28,400
open pgp encrypted data okay thank you

218
00:08:30,000 --> 00:08:34,479
thank you very much i think i saw a

219
00:08:32,080 --> 00:08:34,479
question

220
00:08:34,880 --> 00:08:39,120
thank you for your talk i have two

221
00:08:36,719 --> 00:08:41,519
questions the first one is

222
00:08:39,120 --> 00:08:42,399
how do you provision the the tls

223
00:08:41,519 --> 00:08:44,959
certificates

224
00:08:42,399 --> 00:08:46,000
and uh the pgp kills for the

225
00:08:44,959 --> 00:08:47,518
communication

226
00:08:46,000 --> 00:08:50,640
they are automatically generated when

227
00:08:47,519 --> 00:08:51,920
you install and then you manually

228
00:08:50,640 --> 00:08:54,240
configure the system with the

229
00:08:51,920 --> 00:08:56,399
fingerprints of all the keys

230
00:08:54,240 --> 00:08:58,160
but don't you have to copy them or send

231
00:08:56,399 --> 00:09:01,040
them to some key server

232
00:08:58,160 --> 00:09:01,360
no no key service you just manually copy

233
00:09:01,040 --> 00:09:02,719
the

234
00:09:01,360 --> 00:09:04,560
fingerprints of the keys to the

235
00:09:02,720 --> 00:09:08,160
configuration files of the servers

236
00:09:04,560 --> 00:09:10,319
okay and the second question is

237
00:09:08,160 --> 00:09:12,079
let's say i have two machines which are

238
00:09:10,320 --> 00:09:15,839
in different physical

239
00:09:12,080 --> 00:09:18,959
locations and uh one attacker

240
00:09:15,839 --> 00:09:19,519
smash and grab the first one and uh i

241
00:09:18,959 --> 00:09:22,079
didn't

242
00:09:19,519 --> 00:09:23,200
notice that one of my machine

243
00:09:22,080 --> 00:09:26,000
disappeared

244
00:09:23,200 --> 00:09:27,200
uh can he like reboot it over the

245
00:09:26,000 --> 00:09:30,399
network and get

246
00:09:27,200 --> 00:09:31,760
access to it by trying to to send some

247
00:09:30,399 --> 00:09:34,240
uh

248
00:09:31,760 --> 00:09:36,240
packets to the over machine which can

249
00:09:34,240 --> 00:09:38,640
send back the password well

250
00:09:36,240 --> 00:09:40,160
uh if he's really really fast he can do

251
00:09:38,640 --> 00:09:43,279
that but not not normally

252
00:09:40,160 --> 00:09:44,959
there's a timeout but he he's shaking

253
00:09:43,279 --> 00:09:48,160
his head no here

254
00:09:44,959 --> 00:09:52,000
mr co-author here

255
00:09:48,160 --> 00:09:54,240
tell me why local network

256
00:09:52,000 --> 00:09:56,080
okay okay it's only on the private

257
00:09:54,240 --> 00:09:58,080
network normally the amanda

258
00:09:56,080 --> 00:09:59,600
server and the mondo's client is assumed

259
00:09:58,080 --> 00:10:02,480
to be on the same local network

260
00:09:59,600 --> 00:10:04,480
you can manually configure it to ask a

261
00:10:02,480 --> 00:10:06,399
specific server remotely but that's not

262
00:10:04,480 --> 00:10:08,320
normal the normal case

263
00:10:06,399 --> 00:10:10,880
in this case can we have like something

264
00:10:08,320 --> 00:10:14,640
like a private virtual private network

265
00:10:10,880 --> 00:10:15,760
uh like using a vpn like a wire guard or

266
00:10:14,640 --> 00:10:18,720
something like that

267
00:10:15,760 --> 00:10:19,120
yeah you could do that you'll have to

268
00:10:18,720 --> 00:10:22,240
create

269
00:10:19,120 --> 00:10:22,640
some scripts to because the mandos

270
00:10:22,240 --> 00:10:25,839
client

271
00:10:22,640 --> 00:10:28,640
runs before the root the

272
00:10:25,839 --> 00:10:29,920
file system is decrypted you run without

273
00:10:28,640 --> 00:10:32,160
any specific

274
00:10:29,920 --> 00:10:33,599
good system utilities you have to around

275
00:10:32,160 --> 00:10:34,240
write a script that runs in that

276
00:10:33,600 --> 00:10:37,360
environment

277
00:10:34,240 --> 00:10:38,640
to take up your vpn and stuff but we

278
00:10:37,360 --> 00:10:39,279
provide hooks for all that we have

279
00:10:38,640 --> 00:10:42,959
scripts

280
00:10:39,279 --> 00:10:47,839
okay all right thank you thank you

281
00:10:42,959 --> 00:10:47,839
do we have any other question okay

282
00:10:51,440 --> 00:10:56,959
for the tls connection do you have

283
00:10:53,920 --> 00:10:59,279
client authentication

284
00:10:56,959 --> 00:11:00,880
client authentication we check the exact

285
00:10:59,279 --> 00:11:02,720
fingerprint on the key

286
00:11:00,880 --> 00:11:04,160
so you check it for the server which i

287
00:11:02,720 --> 00:11:06,640
guess is the server that's already

288
00:11:04,160 --> 00:11:08,560
actually no we we're kind of funny that

289
00:11:06,640 --> 00:11:10,560
way we don't run the tls connection

290
00:11:08,560 --> 00:11:15,359
backwards

291
00:11:10,560 --> 00:11:18,399
up here we the we the

292
00:11:15,360 --> 00:11:20,000
the mundus client which once uh running

293
00:11:18,399 --> 00:11:22,000
running in the small inner runways

294
00:11:20,000 --> 00:11:24,640
environment which wants the password

295
00:11:22,000 --> 00:11:27,680
is running is connecting but is then

296
00:11:24,640 --> 00:11:31,199
doing the tls handshake as a tls server

297
00:11:27,680 --> 00:11:34,399
so it has a key which is automatically

298
00:11:31,200 --> 00:11:35,440
proven in the tls handshake to be i have

299
00:11:34,399 --> 00:11:37,760
that key

300
00:11:35,440 --> 00:11:38,480
so then the server acting as a tls

301
00:11:37,760 --> 00:11:40,839
client

302
00:11:38,480 --> 00:11:42,160
check that fingerprints against its

303
00:11:40,839 --> 00:11:44,480
database

304
00:11:42,160 --> 00:11:46,800
i mean it's automatically verified by

305
00:11:44,480 --> 00:11:49,920
the tls itself

306
00:11:46,800 --> 00:11:53,519
i see we have time for more questions is

307
00:11:49,920 --> 00:11:53,519
anyone who wants to ask something

308
00:11:55,680 --> 00:12:00,239
um i have a machine which doesn't have

309
00:11:57,760 --> 00:12:02,800
full disc encryption which is really bad

310
00:12:00,240 --> 00:12:04,240
how can i easily migrate it to uh to

311
00:12:02,800 --> 00:12:06,959
full disk encryption

312
00:12:04,240 --> 00:12:07,839
like is there some uh tooling you

313
00:12:06,959 --> 00:12:09,680
provide or

314
00:12:07,839 --> 00:12:12,800
is there something which can we don't

315
00:12:09,680 --> 00:12:16,160
provide the actual full disk encryption

316
00:12:12,800 --> 00:12:17,040
we use the normal looks linux for this

317
00:12:16,160 --> 00:12:19,279
encryption system

318
00:12:17,040 --> 00:12:21,279
we just provide the hooks which provides

319
00:12:19,279 --> 00:12:22,560
the password at boot time when it needs

320
00:12:21,279 --> 00:12:25,680
it

321
00:12:22,560 --> 00:12:27,199
okay so if you just convert to normal

322
00:12:25,680 --> 00:12:29,439
full disk encryption you can then

323
00:12:27,200 --> 00:12:31,839
install that and use it

324
00:12:29,440 --> 00:12:31,839
all right

325
00:12:35,519 --> 00:12:42,480
do you have any question

326
00:12:39,360 --> 00:12:42,480
we'll have some time so

327
00:12:43,920 --> 00:12:53,839
oh yeah i don't see any hands so thank

328
00:12:46,480 --> 00:12:53,839
you teddy

329
00:12:58,959 --> 00:13:01,040
you

