1
00:00:04,580 --> 00:00:08,180
I shown your phone turn off the sounds

2
00:00:06,680 --> 00:00:10,160
on your phone you probably bought like

3
00:00:08,180 --> 00:00:12,320
14 other things attached to the Wi-Fi

4
00:00:10,160 --> 00:00:13,670
which is why I'm on 3G right now thanks

5
00:00:12,320 --> 00:00:15,620
so much

6
00:00:13,670 --> 00:00:19,460
you should probably turn those on silent

7
00:00:15,620 --> 00:00:21,259
as well this will be video recorded I

8
00:00:19,460 --> 00:00:22,609
can't say videotaped anymore even though

9
00:00:21,260 --> 00:00:26,990
that's how I learned how to do things

10
00:00:22,609 --> 00:00:28,369
this beard is gray so we only have this

11
00:00:26,990 --> 00:00:32,269
working microphone because it's an

12
00:00:28,369 --> 00:00:34,519
all-volunteer event please donate so

13
00:00:32,269 --> 00:00:36,920
during the Q&A session you'll have to

14
00:00:34,519 --> 00:00:39,170
raise your hand speak clearly without

15
00:00:36,920 --> 00:00:40,790
the assistance of modern technology the

16
00:00:39,170 --> 00:00:42,379
speaker will repeat that for the

17
00:00:40,790 --> 00:00:44,449
recording for all the streaming people

18
00:00:42,379 --> 00:00:46,629
who just got lost and decided to stop at

19
00:00:44,449 --> 00:00:50,510
a Starbucks and connect to the Wi-Fi so

20
00:00:46,629 --> 00:00:53,869
question repeats answers learning

21
00:00:50,510 --> 00:00:55,519
everybody ready oh well you're not even

22
00:00:53,869 --> 00:00:59,720
awake yet that coffee hasn't kicked in

23
00:00:55,519 --> 00:01:01,070
is everybody ready thank you yeah you

24
00:00:59,720 --> 00:01:02,150
don't have to be excited about me you

25
00:01:01,070 --> 00:01:04,760
should be excited about our first

26
00:01:02,150 --> 00:01:06,200
speaker whose name got removed because

27
00:01:04,760 --> 00:01:08,810
somebody wants me to take an update

28
00:01:06,200 --> 00:01:12,260
while I am traveling that's rude

29
00:01:08,810 --> 00:01:14,090
Thorstein leave Hughes is a Linux kernel

30
00:01:12,260 --> 00:01:16,010
development follower he's been starting

31
00:01:14,090 --> 00:01:17,360
since the start of the century turns out

32
00:01:16,010 --> 00:01:18,860
he's known for his kernel log column

33
00:01:17,360 --> 00:01:20,570
which is over the years covered the

34
00:01:18,860 --> 00:01:23,300
features of more than 70 new linux

35
00:01:20,570 --> 00:01:25,610
features in detail as elaborate and

36
00:01:23,300 --> 00:01:28,190
respected article series isn't published

37
00:01:25,610 --> 00:01:29,630
by his employer the german CT magazines

38
00:01:28,190 --> 00:01:32,870
hereís biggest computer and tech

39
00:01:29,630 --> 00:01:34,460
magazine both online and in print if you

40
00:01:32,870 --> 00:01:36,950
don't know what print is ask somebody

41
00:01:34,460 --> 00:01:38,658
who's got a beard like mine he used to

42
00:01:36,950 --> 00:01:40,460
contribute to the Linux kernel but has

43
00:01:38,659 --> 00:01:42,140
put that aside just so he can cover and

44
00:01:40,460 --> 00:01:45,050
come to conferences like this and talk

45
00:01:42,140 --> 00:01:46,510
about open source please give a round of

46
00:01:45,050 --> 00:01:53,920
applause for Thoris Tenley news

47
00:01:46,510 --> 00:01:55,250
[Applause]

48
00:01:53,920 --> 00:01:57,860
yeah

49
00:01:55,250 --> 00:02:00,710
welcome everybody I haven't used such a

50
00:01:57,860 --> 00:02:03,409
mic for quite a while so if I don't hold

51
00:02:00,710 --> 00:02:05,389
it right just let me know yeah but let's

52
00:02:03,409 --> 00:02:07,700
go here it's a 20s first time already

53
00:02:05,390 --> 00:02:09,979
and I think I'm one giving a keynote

54
00:02:07,700 --> 00:02:12,019
that's a big biggest chance to really

55
00:02:09,979 --> 00:02:13,250
give thanks to the organizers and all

56
00:02:12,019 --> 00:02:16,010
the volunteers that make this great

57
00:02:13,250 --> 00:02:18,489
conferences happen so we'll give a round

58
00:02:16,010 --> 00:02:18,489
of applause please

59
00:02:23,200 --> 00:02:30,079
yeah thanks for this work a warning this

60
00:02:27,110 --> 00:02:32,239
talk is kind of part of the history talk

61
00:02:30,080 --> 00:02:34,010
but don't worry it won't be in history

62
00:02:32,239 --> 00:02:35,900
class I promise I'll make sure of that

63
00:02:34,010 --> 00:02:38,000
and everything I mentioned is kinda

64
00:02:35,900 --> 00:02:40,519
relevant for today and there will be a

65
00:02:38,000 --> 00:02:41,299
moral of the story at the end so let's

66
00:02:40,519 --> 00:02:44,150
get started

67
00:02:41,299 --> 00:02:47,690
the stage when if first first time

68
00:02:44,150 --> 00:02:50,260
actually happened in 2001 shortly before

69
00:02:47,690 --> 00:02:53,209
that Linux 2.4 had just been released I

70
00:02:50,260 --> 00:02:55,760
basically had all the important features

71
00:02:53,209 --> 00:02:57,680
needed back then kind of everything

72
00:02:55,760 --> 00:02:59,980
needed to conquer the world and bring us

73
00:02:57,680 --> 00:03:02,150
where we are today POSIX support

74
00:02:59,980 --> 00:03:05,569
graphical interface

75
00:03:02,150 --> 00:03:09,290
it was potable to various arc arcs and

76
00:03:05,569 --> 00:03:10,940
the performance was good since then ton

77
00:03:09,290 --> 00:03:12,739
of improvements have been merged into

78
00:03:10,940 --> 00:03:14,569
the Linux kernel and I count can only

79
00:03:12,739 --> 00:03:16,060
mention if quite a few of them because

80
00:03:14,569 --> 00:03:19,280
otherwise this talk would take all day

81
00:03:16,060 --> 00:03:21,500
or even two days maybe and one of the

82
00:03:19,280 --> 00:03:25,040
things that happened Linux was growing

83
00:03:21,500 --> 00:03:27,849
up to that for for example would like to

84
00:03:25,040 --> 00:03:30,560
not run very well on today's computers

85
00:03:27,849 --> 00:03:32,839
obviously because lots of drivers would

86
00:03:30,560 --> 00:03:35,030
be missing but one of the things that

87
00:03:32,840 --> 00:03:37,010
wouldn't work is but it would be

88
00:03:35,030 --> 00:03:39,650
problematic would be the number of CPU

89
00:03:37,010 --> 00:03:39,918
cores in modern systems because back

90
00:03:39,650 --> 00:03:42,590
then

91
00:03:39,919 --> 00:03:44,450
uni processors were quite a norm if you

92
00:03:42,590 --> 00:03:48,230
had an SMP system of two processes that

93
00:03:44,450 --> 00:03:51,828
was normal back then but today we have

94
00:03:48,230 --> 00:03:53,510
CPUs with 12 or 16 calls actually and

95
00:03:51,829 --> 00:03:56,299
even smartphones have four cores and

96
00:03:53,510 --> 00:03:59,569
that might be way too much for Linux it

97
00:03:56,299 --> 00:04:02,870
was actually SMP capable since June 1996

98
00:03:59,569 --> 00:04:04,849
already but back then that was kind of

99
00:04:02,870 --> 00:04:07,609
brute force how it was made possible

100
00:04:04,849 --> 00:04:09,950
there was big car lock and that's

101
00:04:07,609 --> 00:04:12,769
basically that only one CPU core was

102
00:04:09,950 --> 00:04:15,768
allowed to execute kernel code at a time

103
00:04:12,769 --> 00:04:17,450
so I had two programs running in

104
00:04:15,769 --> 00:04:19,190
parallel and both wanted to call into

105
00:04:17,450 --> 00:04:21,649
the kernel to to make it do something

106
00:04:19,190 --> 00:04:24,560
and they had to wait for the other one

107
00:04:21,649 --> 00:04:26,510
to finish that actually was soft would

108
00:04:24,560 --> 00:04:29,389
find a great locking that followed in

109
00:04:26,510 --> 00:04:32,069
2.2 and two that form so the next two or

110
00:04:29,389 --> 00:04:36,139
three years and that made Linux

111
00:04:32,069 --> 00:04:39,270
scale a lot better already so in the 2.4

112
00:04:36,139 --> 00:04:41,369
days it was wasn't that bad an email but

113
00:04:39,270 --> 00:04:43,948
other unix's were known to scale a lot

114
00:04:41,369 --> 00:04:46,409
better the Linux developers actually

115
00:04:43,949 --> 00:04:48,569
continued to work on that and by 2.6

116
00:04:46,409 --> 00:04:51,210
Linux had got a thousands of finer

117
00:04:48,569 --> 00:04:54,539
graded locks um yeah but pecan lock was

118
00:04:51,210 --> 00:04:55,979
still around yeah desperate even if some

119
00:04:54,539 --> 00:05:00,089
people had assumed it would be gone by

120
00:04:55,979 --> 00:05:04,199
2006 already I looked it up actually

121
00:05:00,089 --> 00:05:08,879
2006 dot six had about 500 locks pecan

122
00:05:04,199 --> 00:05:11,339
log calls back then and it as it turned

123
00:05:08,879 --> 00:05:15,149
out many many more steps were needed and

124
00:05:11,339 --> 00:05:20,879
had to be taken to get rid of the big

125
00:05:15,149 --> 00:05:22,589
car lock networks acting up here and if

126
00:05:20,879 --> 00:05:24,959
you're interested in all those details

127
00:05:22,589 --> 00:05:27,659
which had to be done you can look some

128
00:05:24,959 --> 00:05:30,059
of them up on the lwn nut which is a

129
00:05:27,659 --> 00:05:31,469
great size that size that reports about

130
00:05:30,059 --> 00:05:34,439
the happenings in the Linux kernel all

131
00:05:31,469 --> 00:05:37,110
the time now as you can see during at

132
00:05:34,439 --> 00:05:39,330
between 2004 and 2011 when the pecan

133
00:05:37,110 --> 00:05:41,520
lock was removed and there were lots of

134
00:05:39,330 --> 00:05:43,919
articles that explained where all the

135
00:05:41,520 --> 00:05:46,318
problems were yeah and as I mentioned it

136
00:05:43,919 --> 00:05:48,659
Linux rhetoric rid of this big con lock

137
00:05:46,319 --> 00:05:50,789
that was a problem for scalability in

138
00:05:48,659 --> 00:05:53,399
2000 elf so basically after about 11

139
00:05:50,789 --> 00:05:55,580
years and that was possible thanks to a

140
00:05:53,399 --> 00:05:58,019
heroic affords by various developers

141
00:05:55,580 --> 00:06:00,628
especially we have to thank an apartment

142
00:05:58,019 --> 00:06:02,159
for that he actually took care of the

143
00:06:00,629 --> 00:06:04,769
last few steps that were really really a

144
00:06:02,159 --> 00:06:09,509
lot of work and without much gain maybe

145
00:06:04,769 --> 00:06:11,789
and yeah but yeah it was quite a game

146
00:06:09,509 --> 00:06:13,469
but it was really hard doing this this

147
00:06:11,789 --> 00:06:16,979
last things because they weren't all our

148
00:06:13,469 --> 00:06:19,439
drivers and things like that but

149
00:06:16,979 --> 00:06:21,599
scalability since then actually remains

150
00:06:19,439 --> 00:06:23,729
something being worked on if you look at

151
00:06:21,599 --> 00:06:25,199
LW and that again there are many many

152
00:06:23,729 --> 00:06:29,818
more articles over the past few years

153
00:06:25,199 --> 00:06:31,559
that and were about scalability and many

154
00:06:29,819 --> 00:06:33,330
small improvements happened over time

155
00:06:31,559 --> 00:06:35,399
it's kind of a neverending story like

156
00:06:33,330 --> 00:06:37,109
recently there were some amendment

157
00:06:35,399 --> 00:06:39,569
optimizations there was a new scheduler

158
00:06:37,110 --> 00:06:41,879
load balancing balancing column that got

159
00:06:39,569 --> 00:06:44,009
merged into the Linux 5.5 kernel which

160
00:06:41,879 --> 00:06:45,060
is the latest right now and many other

161
00:06:44,009 --> 00:06:47,640
things

162
00:06:45,060 --> 00:06:49,740
and most people most of you that don't

163
00:06:47,640 --> 00:06:51,599
that are not currently well opposed

164
00:06:49,740 --> 00:06:53,460
don't notice any of this because all

165
00:06:51,600 --> 00:06:56,100
those changes happen basically under the

166
00:06:53,460 --> 00:06:58,560
radar but thanks to this Linux is and

167
00:06:56,100 --> 00:07:00,660
stays one of the best scaling OS kernels

168
00:06:58,560 --> 00:07:03,230
these days maybe it's even the best I

169
00:07:00,660 --> 00:07:07,470
was a bit careful in writing that so I

170
00:07:03,230 --> 00:07:10,440
went for one of the best maybe I was

171
00:07:07,470 --> 00:07:11,900
over overly careful there yeah that's

172
00:07:10,440 --> 00:07:15,000
one of the things that happened in

173
00:07:11,900 --> 00:07:19,650
various small steps during this past two

174
00:07:15,000 --> 00:07:21,510
decades and and getting rid of the car

175
00:07:19,650 --> 00:07:23,489
lock was really one of the big first

176
00:07:21,510 --> 00:07:25,890
achievements but with that small steps

177
00:07:23,490 --> 00:07:27,870
that happened and that was possible

178
00:07:25,890 --> 00:07:29,849
because and that was something everybody

179
00:07:27,870 --> 00:07:31,530
worked together on its kind of common

180
00:07:29,850 --> 00:07:33,090
goal but more often there's some

181
00:07:31,530 --> 00:07:36,140
competition become between the kernel

182
00:07:33,090 --> 00:07:38,729
developers mam and one of the thing that

183
00:07:36,140 --> 00:07:40,650
Linux kernel was actually still missing

184
00:07:38,730 --> 00:07:43,260
in the early first ten days was built in

185
00:07:40,650 --> 00:07:45,870
virtualization capabilities and that's

186
00:07:43,260 --> 00:07:49,289
not unusual because virtualization on

187
00:07:45,870 --> 00:07:51,540
x86 Linux was not very popular or not

188
00:07:49,290 --> 00:07:54,510
famous back then that it only happened

189
00:07:51,540 --> 00:07:56,820
during the mid 2000s with Zen some of

190
00:07:54,510 --> 00:07:59,849
you might remember getting popular in

191
00:07:56,820 --> 00:08:01,950
2005 and x86 processors actually

192
00:07:59,850 --> 00:08:04,580
starting I started getting

193
00:08:01,950 --> 00:08:07,229
virtualization capabilities back then

194
00:08:04,580 --> 00:08:09,300
then Bank man actually looked like the

195
00:08:07,230 --> 00:08:12,510
obvious and fitting solution for the

196
00:08:09,300 --> 00:08:14,610
Linux world there was no competition

197
00:08:12,510 --> 00:08:17,340
there everybody C thought that would be

198
00:08:14,610 --> 00:08:19,350
what we what will make that what

199
00:08:17,340 --> 00:08:23,250
everybody would be using there was just

200
00:08:19,350 --> 00:08:25,200
one problem support for for Runnings for

201
00:08:23,250 --> 00:08:27,540
using sin as a host or guests with Linux

202
00:08:25,200 --> 00:08:29,280
was out of three but a lot of people

203
00:08:27,540 --> 00:08:31,560
didn't care that much and the other

204
00:08:29,280 --> 00:08:34,350
problem was Zen was actually kind of a

205
00:08:31,560 --> 00:08:37,260
kernel underneath the Linux kernel then

206
00:08:34,350 --> 00:08:40,770
suddenly out of the blue in October 2006

207
00:08:37,260 --> 00:08:42,809
KVM came much already xavier lead later

208
00:08:40,770 --> 00:08:45,329
into the Linux kernel because it was

209
00:08:42,809 --> 00:08:47,280
quite small it was quite small and being

210
00:08:45,330 --> 00:08:50,400
compared with Xen actually didn't offer

211
00:08:47,280 --> 00:08:51,569
that go to a kind of a feature set the

212
00:08:50,400 --> 00:08:53,760
performance was worse

213
00:08:51,570 --> 00:08:55,560
it had less features and actually

214
00:08:53,760 --> 00:08:58,170
required the CPU of virtualization

215
00:08:55,560 --> 00:08:58,510
capabilities some sometimes it looked a

216
00:08:58,170 --> 00:09:02,079
bit

217
00:08:58,510 --> 00:09:04,540
katoya but in the end it turned out it

218
00:09:02,080 --> 00:09:06,190
was quickly improved because various

219
00:09:04,540 --> 00:09:08,380
people and companies found interest in

220
00:09:06,190 --> 00:09:10,960
it and helped with little steps making

221
00:09:08,380 --> 00:09:12,420
KVM bet better and as some of you might

222
00:09:10,960 --> 00:09:14,650
know in the end

223
00:09:12,420 --> 00:09:16,689
KVM turn out to be game game chaser

224
00:09:14,650 --> 00:09:19,120
today it's basically used everywhere

225
00:09:16,690 --> 00:09:21,250
these days and actually one of the

226
00:09:19,120 --> 00:09:23,620
cornerstones for what it made Linux

227
00:09:21,250 --> 00:09:26,440
through the cloud Xen is still around

228
00:09:23,620 --> 00:09:28,300
and the support for running as hosts and

229
00:09:26,440 --> 00:09:31,120
guests with Linux actually got only

230
00:09:28,300 --> 00:09:35,349
merged five years later in the 2.0 days

231
00:09:31,120 --> 00:09:38,230
and these days then it's quite small

232
00:09:35,350 --> 00:09:41,080
when compared to KVM so why did KVM

233
00:09:38,230 --> 00:09:42,520
succeed yeah one of the reasons that

234
00:09:41,080 --> 00:09:45,700
might be a factor might be that

235
00:09:42,520 --> 00:09:47,949
xanthosis didn't get the code upstream

236
00:09:45,700 --> 00:09:50,710
fast enough but i think the real reason

237
00:09:47,950 --> 00:09:52,450
this KVM had better more flexible and

238
00:09:50,710 --> 00:09:54,970
future-proof design and actually one

239
00:09:52,450 --> 00:09:56,710
that allowed linux to stay in control

240
00:09:54,970 --> 00:09:59,110
because it was built into Linux not

241
00:09:56,710 --> 00:10:02,470
underneath it and that's obviously

242
00:09:59,110 --> 00:10:04,780
suited Linux more and its developers so

243
00:10:02,470 --> 00:10:08,290
they become became interested in helped

244
00:10:04,780 --> 00:10:11,589
making it better and yeah that's how it

245
00:10:08,290 --> 00:10:14,349
ended and yeah that's why KVM ruled the

246
00:10:11,590 --> 00:10:16,660
world these days and yeah that's most

247
00:10:14,350 --> 00:10:18,490
kind of history lessons history lesson

248
00:10:16,660 --> 00:10:21,040
but on the other hand that's things like

249
00:10:18,490 --> 00:10:23,800
that happen everyday every now and then

250
00:10:21,040 --> 00:10:26,319
these days also for example recently

251
00:10:23,800 --> 00:10:29,229
there was a DB decay that's a technique

252
00:10:26,320 --> 00:10:31,720
to make network packages go straight

253
00:10:29,230 --> 00:10:34,150
into userland app applications and

254
00:10:31,720 --> 00:10:35,770
bypass the Linux kernel that obviously

255
00:10:34,150 --> 00:10:38,350
didn't suit the Linux kernel develop as

256
00:10:35,770 --> 00:10:40,090
much so they started to fight back and

257
00:10:38,350 --> 00:10:43,210
worked on solution

258
00:10:40,090 --> 00:10:45,850
they expressed data paths and XDP and

259
00:10:43,210 --> 00:10:48,520
something build upon that's called f x

260
00:10:45,850 --> 00:10:51,070
DP socket where user line programs can

261
00:10:48,520 --> 00:10:54,069
can immediately get those packages so

262
00:10:51,070 --> 00:10:56,620
the kernel stays in control and it seems

263
00:10:54,070 --> 00:10:58,990
those two solutions actually can keep up

264
00:10:56,620 --> 00:11:02,200
of TBT Kalyan these days so it's likely

265
00:10:58,990 --> 00:11:04,800
I'd say if I would bet I bet on these

266
00:11:02,200 --> 00:11:08,950
two solutions and I think they will gain

267
00:11:04,800 --> 00:11:10,300
territory back from DB TK because it's

268
00:11:08,950 --> 00:11:12,279
better integrated in Linux

269
00:11:10,300 --> 00:11:16,029
another example is

270
00:11:12,279 --> 00:11:18,819
I own so the program can do something

271
00:11:16,029 --> 00:11:20,620
else when it reads all rights makes it

272
00:11:18,819 --> 00:11:22,569
cannot read or write data from some

273
00:11:20,620 --> 00:11:24,310
storage device that's normal in the

274
00:11:22,569 --> 00:11:26,680
windows world and but unusual in the

275
00:11:24,310 --> 00:11:29,619
Linux except for maybe great big

276
00:11:26,680 --> 00:11:31,388
databases but these days something a

277
00:11:29,620 --> 00:11:34,389
solution finally shows up that's called

278
00:11:31,389 --> 00:11:37,180
IO Ewing it was imagined recounted a bit

279
00:11:34,389 --> 00:11:38,889
more than one year ago and it's an

280
00:11:37,180 --> 00:11:42,489
answer to a similar bypass technique

281
00:11:38,889 --> 00:11:44,110
that's called SP DK and yeah and it

282
00:11:42,490 --> 00:11:45,790
actually will help getting the

283
00:11:44,110 --> 00:11:48,040
performance out of these new SSDs

284
00:11:45,790 --> 00:11:51,969
because they are really quite quite fast

285
00:11:48,040 --> 00:11:55,360
and to make make the get performance out

286
00:11:51,970 --> 00:11:56,980
of is such an asynchronous IO a solution

287
00:11:55,360 --> 00:11:59,709
is needed because the SIS call overhead

288
00:11:56,980 --> 00:12:02,129
is way too much otherwise and the thing

289
00:11:59,709 --> 00:12:04,089
is just as KVM both these solutions got

290
00:12:02,129 --> 00:12:06,639
imported into the linux kernel and

291
00:12:04,089 --> 00:12:08,319
started quite small and then got

292
00:12:06,639 --> 00:12:09,699
improved in small steps by various

293
00:12:08,319 --> 00:12:12,128
people that found them interesting and

294
00:12:09,699 --> 00:12:14,370
it shows it that things like they had

295
00:12:12,129 --> 00:12:16,500
them all the time

296
00:12:14,370 --> 00:12:19,300
virtualization was not the only thing

297
00:12:16,500 --> 00:12:21,240
the only solution to make Linux a host

298
00:12:19,300 --> 00:12:24,939
for something there was something else

299
00:12:21,240 --> 00:12:27,189
that Linux miss doing early fosston days

300
00:12:24,939 --> 00:12:29,469
there was support for containers and

301
00:12:27,189 --> 00:12:30,969
that's actually quite interesting

302
00:12:29,470 --> 00:12:33,129
because other UNIX is back then

303
00:12:30,970 --> 00:12:35,949
supported them already freebsd for

304
00:12:33,129 --> 00:12:38,319
example date and Solaris learned it a

305
00:12:35,949 --> 00:12:41,589
little bit later for Linux that only

306
00:12:38,319 --> 00:12:44,079
became famous in 2014 and a lot of

307
00:12:41,589 --> 00:12:47,079
people sometimes wonder why did it take

308
00:12:44,079 --> 00:12:49,540
so long yeah it took so long basically

309
00:12:47,079 --> 00:12:51,719
because they can't collect features to

310
00:12:49,540 --> 00:12:54,519
build something similar with Linux and

311
00:12:51,720 --> 00:12:56,920
yeah that's those features had to be

312
00:12:54,519 --> 00:12:59,410
built but that happened one step at a

313
00:12:56,920 --> 00:13:01,870
time it took years some of these

314
00:12:59,410 --> 00:13:05,649
features actually we use today for

315
00:13:01,870 --> 00:13:07,449
containers were actually built for fork

316
00:13:05,649 --> 00:13:10,629
and containers and docker that like the

317
00:13:07,449 --> 00:13:13,149
various namespaces and some of those

318
00:13:10,629 --> 00:13:17,679
features we use for containers actually

319
00:13:13,149 --> 00:13:19,480
not directly when partly built for

320
00:13:17,679 --> 00:13:20,949
 antenna used like the C group

321
00:13:19,480 --> 00:13:24,429
stuff the control group stuff that make

322
00:13:20,949 --> 00:13:25,260
sure one process can take all the CPU or

323
00:13:24,429 --> 00:13:27,810
memory and

324
00:13:25,260 --> 00:13:29,460
other staff and that in the beginning

325
00:13:27,810 --> 00:13:31,890
actually was used a lot of lot with

326
00:13:29,460 --> 00:13:33,510
virtualization with KVM and some of the

327
00:13:31,890 --> 00:13:35,220
features we use to build containers

328
00:13:33,510 --> 00:13:36,780
these days actually were built for

329
00:13:35,220 --> 00:13:38,730
totally different use cases like

330
00:13:36,780 --> 00:13:41,490
capabilities and seccomp and a few other

331
00:13:38,730 --> 00:13:44,100
things and the thing that made dhaka

332
00:13:41,490 --> 00:13:46,020
popular in the end was actually docker

333
00:13:44,100 --> 00:13:48,390
combine these and a few other features

334
00:13:46,020 --> 00:13:50,520
in a new and more attractive way and

335
00:13:48,390 --> 00:13:53,310
that made Linux container suddenly

336
00:13:50,520 --> 00:13:54,800
suddenly quite popular and in the end

337
00:13:53,310 --> 00:13:58,949
kind of changed the world

338
00:13:54,800 --> 00:14:00,870
funny detailed an Alex II was designed

339
00:13:58,950 --> 00:14:03,450
to become the preferred solution and

340
00:14:00,870 --> 00:14:05,070
that's a bit older and there were

341
00:14:03,450 --> 00:14:07,020
actually two other Linux container

342
00:14:05,070 --> 00:14:09,780
solution which which also an open

343
00:14:07,020 --> 00:14:11,280
possess and that became quite small

344
00:14:09,780 --> 00:14:13,380
thanks to all the other things stock

345
00:14:11,280 --> 00:14:15,180
abroad and Linux V service the other

346
00:14:13,380 --> 00:14:16,830
solution that is basically forgotten

347
00:14:15,180 --> 00:14:19,829
these days they came early and used out

348
00:14:16,830 --> 00:14:21,450
of three packages but thanks to the

349
00:14:19,830 --> 00:14:23,310
kernel and small steps and these

350
00:14:21,450 --> 00:14:24,650
features you can you combine in

351
00:14:23,310 --> 00:14:29,670
interesting ways

352
00:14:24,650 --> 00:14:32,640
they docker overrun them basically and

353
00:14:29,670 --> 00:14:35,130
just now the leading thing Alex II

354
00:14:32,640 --> 00:14:38,189
actually actually is still around and

355
00:14:35,130 --> 00:14:41,189
definitely not as big as darker and the

356
00:14:38,190 --> 00:14:42,930
funny detail there is just imagine if it

357
00:14:41,190 --> 00:14:45,660
would have been one company that it

358
00:14:42,930 --> 00:14:49,530
would have invested all the money in

359
00:14:45,660 --> 00:14:51,209
bring making the corner and capable of

360
00:14:49,530 --> 00:14:54,030
to running containers and building and

361
00:14:51,210 --> 00:14:56,130
Alex T as usual and processor on top of

362
00:14:54,030 --> 00:14:58,199
it and that actually might have been a

363
00:14:56,130 --> 00:15:00,300
pretty bad return of investment for them

364
00:14:58,200 --> 00:15:03,260
because yeah other companies can use

365
00:15:00,300 --> 00:15:05,819
those features your board as well yeah

366
00:15:03,260 --> 00:15:07,920
and that that really makes it a little

367
00:15:05,820 --> 00:15:10,740
bit risky for companies to invest that

368
00:15:07,920 --> 00:15:12,630
much money but on the other end that's a

369
00:15:10,740 --> 00:15:14,550
problem for the kernel Linux the

370
00:15:12,630 --> 00:15:16,410
operating system actually got a way

371
00:15:14,550 --> 00:15:18,870
better and more flexible solution thanks

372
00:15:16,410 --> 00:15:24,540
to this and thanks to all the various

373
00:15:18,870 --> 00:15:26,070
small steps that were taken and other

374
00:15:24,540 --> 00:15:28,290
reason why we have so many small

375
00:15:26,070 --> 00:15:32,070
features that docker could combine in a

376
00:15:28,290 --> 00:15:34,560
new and more attractive way docker

377
00:15:32,070 --> 00:15:37,320
already was quite unexpected but welcome

378
00:15:34,560 --> 00:15:38,939
surprise and that's not the only time

379
00:15:37,320 --> 00:15:41,850
Linux kernel stuff and

380
00:15:38,940 --> 00:15:45,360
kind of features show up that's nobody

381
00:15:41,850 --> 00:15:48,360
really aimed for and one of those things

382
00:15:45,360 --> 00:15:51,360
actually is changing the kernel these

383
00:15:48,360 --> 00:15:53,730
days and Linux basically is on a trip

384
00:15:51,360 --> 00:15:56,460
into the unknown right now what I'm

385
00:15:53,730 --> 00:15:58,650
talking about is an improved berkeley

386
00:15:56,460 --> 00:16:01,620
package filter it's called be BPF for

387
00:15:58,650 --> 00:16:06,420
short or these days CBPR for classic DVF

388
00:16:01,620 --> 00:16:10,020
and the improvements again in 2014-15

389
00:16:06,420 --> 00:16:12,060
and it's an internal mini VM mini

390
00:16:10,020 --> 00:16:13,949
virtual machine but not a like a virtual

391
00:16:12,060 --> 00:16:16,410
machine that emulates a different

392
00:16:13,950 --> 00:16:20,040
computer more lucky Java VM where you

393
00:16:16,410 --> 00:16:22,740
can upload in programs to and then they

394
00:16:20,040 --> 00:16:26,819
can execute execute them that's

395
00:16:22,740 --> 00:16:29,190
something for 20 years ago TCP dump for

396
00:16:26,820 --> 00:16:31,740
example relied on to only get those

397
00:16:29,190 --> 00:16:32,340
packages from the kernel into into

398
00:16:31,740 --> 00:16:34,950
userland

399
00:16:32,340 --> 00:16:37,110
image to see TCP dump the user was

400
00:16:34,950 --> 00:16:40,290
actually interested in that's needed

401
00:16:37,110 --> 00:16:42,360
because I needed to for performance

402
00:16:40,290 --> 00:16:44,459
reason because copying everything over

403
00:16:42,360 --> 00:16:47,040
simply is so much work it was slow

404
00:16:44,460 --> 00:16:49,470
everything way too much down this

405
00:16:47,040 --> 00:16:51,510
improved CBP have actually got core get

406
00:16:49,470 --> 00:16:54,480
got called EBP F you might have heard of

407
00:16:51,510 --> 00:16:57,120
this thing some people even call it just

408
00:16:54,480 --> 00:16:58,530
BBF for short these days it's I'm kind

409
00:16:57,120 --> 00:17:00,840
of angry with the developers there

410
00:16:58,530 --> 00:17:02,970
because now we have an old PPF that's

411
00:17:00,840 --> 00:17:06,620
called PPF a new BPF and nobody knows

412
00:17:02,970 --> 00:17:10,020
what what somebody's talking about yeah

413
00:17:06,619 --> 00:17:12,060
that's really sometimes annoying but

414
00:17:10,020 --> 00:17:13,949
most of the time if you read B PPF these

415
00:17:12,060 --> 00:17:16,829
days it's actually the enhanced one

416
00:17:13,949 --> 00:17:20,449
that's meant yeah it became really fast

417
00:17:16,829 --> 00:17:22,680
and much more powerful VM to run

418
00:17:20,449 --> 00:17:25,439
programs in kernel mode that's actually

419
00:17:22,680 --> 00:17:29,160
if you had suggested something like that

420
00:17:25,439 --> 00:17:30,990
tool in a stall was 20 years ago I guess

421
00:17:29,160 --> 00:17:33,450
the idea would immediately have been

422
00:17:30,990 --> 00:17:35,790
shut down because it's kind of crazy but

423
00:17:33,450 --> 00:17:37,170
these days it worked and one of the

424
00:17:35,790 --> 00:17:39,470
reasons why it's work is actually it's

425
00:17:37,170 --> 00:17:43,770
got improved a small thing and then

426
00:17:39,470 --> 00:17:45,390
improved and approved again and that way

427
00:17:43,770 --> 00:17:47,400
everybody could be sure that's not

428
00:17:45,390 --> 00:17:49,740
dangerous or something the network

429
00:17:47,400 --> 00:17:52,330
developers actually blew this EBP F to

430
00:17:49,740 --> 00:17:54,820
scratch some interest they had and

431
00:17:52,330 --> 00:17:57,070
improved it and improved it again this

432
00:17:54,820 --> 00:17:58,710
XTP stuff I mentioned earlier has

433
00:17:57,070 --> 00:18:01,720
actually built upon this and really

434
00:17:58,710 --> 00:18:03,700
relies on it but these days other kernel

435
00:18:01,720 --> 00:18:08,380
subsystem started to use it as well or

436
00:18:03,700 --> 00:18:09,040
will soon and more seemed seem to be

437
00:18:08,380 --> 00:18:11,770
interesting

438
00:18:09,040 --> 00:18:15,070
actually on lwn net its became kind of a

439
00:18:11,770 --> 00:18:17,200
running get cake that some doing the

440
00:18:15,070 --> 00:18:20,379
articles there's often the case where

441
00:18:17,200 --> 00:18:23,620
some some solution assault for complex

442
00:18:20,380 --> 00:18:26,620
complicated problem and then often PB PF

443
00:18:23,620 --> 00:18:28,449
is suggested to use it it won't be used

444
00:18:26,620 --> 00:18:31,030
all the time but it seems it's getting

445
00:18:28,450 --> 00:18:34,810
into the kernel at various various areas

446
00:18:31,030 --> 00:18:37,510
and yeah EBP F is still not done I mean

447
00:18:34,810 --> 00:18:40,210
it's got developed over the past few

448
00:18:37,510 --> 00:18:42,400
year but it's improved more and more and

449
00:18:40,210 --> 00:18:45,220
starts to change the kernel fundament

450
00:18:42,400 --> 00:18:47,260
for fundamentally and makes Linux

451
00:18:45,220 --> 00:18:50,320
actually gets more specs of a

452
00:18:47,260 --> 00:18:52,600
microkernel just thing what some of you

453
00:18:50,320 --> 00:18:54,850
might remember this big debate if

454
00:18:52,600 --> 00:18:59,590
Michael Connors is a better design then

455
00:18:54,850 --> 00:19:01,270
this stuff that the model that Linux

456
00:18:59,590 --> 00:19:04,240
currently use which is more like a

457
00:19:01,270 --> 00:19:06,150
monolithic kernel but as I said Linux

458
00:19:04,240 --> 00:19:08,560
gains more aspects of a microkernel and

459
00:19:06,150 --> 00:19:10,810
that's actually what Europe's biggest

460
00:19:08,560 --> 00:19:13,540
computer magazine wrote the German City

461
00:19:10,810 --> 00:19:16,720
magazine it looks like that and if some

462
00:19:13,540 --> 00:19:19,090
of you now see you see pump people

463
00:19:16,720 --> 00:19:24,700
giggle next to you to you that's because

464
00:19:19,090 --> 00:19:26,320
yeah that's what I wrote that yeah maybe

465
00:19:24,700 --> 00:19:28,000
I should try that on Wikipedia write

466
00:19:26,320 --> 00:19:31,240
something somewhere and then change and

467
00:19:28,000 --> 00:19:33,460
give myself a sauce yeah but I'm not

468
00:19:31,240 --> 00:19:35,560
only a popular food for the scanner

469
00:19:33,460 --> 00:19:38,590
reporting I do that for 15 years now

470
00:19:35,560 --> 00:19:40,750
I'm also did a few things in my spare

471
00:19:38,590 --> 00:19:42,189
time for regression taking and I was

472
00:19:40,750 --> 00:19:45,390
actually invited for the current summit

473
00:19:42,190 --> 00:19:47,650
and so I know what I'm talking about and

474
00:19:45,390 --> 00:19:50,290
I'm not the only one that actually wrote

475
00:19:47,650 --> 00:19:53,050
this microkernel comparison and I will

476
00:19:50,290 --> 00:19:56,350
be lwn net actually mentioned it as well

477
00:19:53,050 --> 00:20:01,210
and there's another one another running

478
00:19:56,350 --> 00:20:02,830
joke yeah you laugh but this one of the

479
00:20:01,210 --> 00:20:04,390
core developers that made a lot of

480
00:20:02,830 --> 00:20:09,189
things happening you we

481
00:20:04,390 --> 00:20:11,590
use every day suno its we laughed these

482
00:20:09,190 --> 00:20:13,750
days but maybe it will happen it will

483
00:20:11,590 --> 00:20:17,230
maybe we stand here in ten years and say

484
00:20:13,750 --> 00:20:19,180
here that's how it all began and there's

485
00:20:17,230 --> 00:20:21,790
also another improvement that's coming

486
00:20:19,180 --> 00:20:23,530
where the microcon aspect is mentioned

487
00:20:21,790 --> 00:20:25,510
that's really fascinating to what

488
00:20:23,530 --> 00:20:28,060
remains to be seen what comes out of it

489
00:20:25,510 --> 00:20:29,379
maybe it's a we're at the beginning

490
00:20:28,060 --> 00:20:32,850
already in the middle of a small

491
00:20:29,380 --> 00:20:35,590
revolution that makes Linux more

492
00:20:32,850 --> 00:20:36,719
resistant flexible and more powerful it

493
00:20:35,590 --> 00:20:39,189
remains to be seen

494
00:20:36,720 --> 00:20:40,750
thing is most people actually don't

495
00:20:39,190 --> 00:20:42,520
notice because it's happening in a lot

496
00:20:40,750 --> 00:20:46,320
of small steps and without disrupting

497
00:20:42,520 --> 00:20:48,790
all features so and that can can can be

498
00:20:46,320 --> 00:20:52,600
though you don't have to care if you're

499
00:20:48,790 --> 00:20:55,629
not interested in then yeah longstanding

500
00:20:52,600 --> 00:20:58,060
wishes that's a different topic another

501
00:20:55,630 --> 00:21:01,090
area where Linux actually was behind on

502
00:20:58,060 --> 00:21:02,980
the in the early Fossum days was a

503
00:21:01,090 --> 00:21:05,679
proper tracing solution to look into the

504
00:21:02,980 --> 00:21:08,350
system or a specific program to look why

505
00:21:05,680 --> 00:21:10,780
the system is slow or why the program is

506
00:21:08,350 --> 00:21:13,060
slow and the famous solution in this

507
00:21:10,780 --> 00:21:15,490
area is actually dtrace and actually

508
00:21:13,060 --> 00:21:18,340
published in 2005 and pillages solaris

509
00:21:15,490 --> 00:21:20,440
and people for four years wanted

510
00:21:18,340 --> 00:21:23,620
something similar with linux and they

511
00:21:20,440 --> 00:21:26,290
got something recently that's called BB

512
00:21:23,620 --> 00:21:28,840
PF compiler collection BCC for short and

513
00:21:26,290 --> 00:21:31,780
BB PF trace and those are actually

514
00:21:28,840 --> 00:21:34,060
called dtrace 2.0 these days by Brandon

515
00:21:31,780 --> 00:21:37,000
Greg which is one of the leading experts

516
00:21:34,060 --> 00:21:37,929
on on DTrace at least according to

517
00:21:37,000 --> 00:21:42,130
Wikipedia

518
00:21:37,930 --> 00:21:44,080
I know I didn't write that there yeah

519
00:21:42,130 --> 00:21:49,480
and actually those two new solutions can

520
00:21:44,080 --> 00:21:52,720
the 2.0 is appropriate because P we have

521
00:21:49,480 --> 00:21:57,130
trace and BCC actually can do more than

522
00:21:52,720 --> 00:21:59,500
the old PC see more than D trace it's

523
00:21:57,130 --> 00:22:01,780
pretty cool if you want to know more

524
00:21:59,500 --> 00:22:03,580
about it look at Brandon's website I

525
00:22:01,780 --> 00:22:05,980
mentioned it here and he also published

526
00:22:03,580 --> 00:22:10,389
a book recently it's quite cool and

527
00:22:05,980 --> 00:22:12,610
gives a lot of details and into what you

528
00:22:10,390 --> 00:22:15,040
can do with modern kernels and and and

529
00:22:12,610 --> 00:22:17,399
tracing now and yeah it took basically

530
00:22:15,040 --> 00:22:21,180
like ten or fifteen years to get

531
00:22:17,400 --> 00:22:23,490
everything into the kernel and the funny

532
00:22:21,180 --> 00:22:25,530
thing is that actually happened without

533
00:22:23,490 --> 00:22:28,680
a design that had something like PCC or

534
00:22:25,530 --> 00:22:31,110
BF traits in mind they thinks they match

535
00:22:28,680 --> 00:22:32,490
thanks to evolution because the kernel

536
00:22:31,110 --> 00:22:34,979
developers actually built various

537
00:22:32,490 --> 00:22:36,810
building blocks over the past 10 or 15

538
00:22:34,980 --> 00:22:39,720
years sometimes with smaller or

539
00:22:36,810 --> 00:22:42,120
different goals you have tools like f

540
00:22:39,720 --> 00:22:46,080
trace trace points / k probes and all

541
00:22:42,120 --> 00:22:48,179
those things and then that those were

542
00:22:46,080 --> 00:22:52,409
one part of the solution the other part

543
00:22:48,180 --> 00:22:55,620
is e BPF they are this again antia then

544
00:22:52,410 --> 00:22:57,810
somebody combined those tool and and

545
00:22:55,620 --> 00:23:00,239
made new things possible and then

546
00:22:57,810 --> 00:23:01,770
actually BCC and PPF trace came out by

547
00:23:00,240 --> 00:23:04,560
some people and tada

548
00:23:01,770 --> 00:23:08,070
yeah that's how we have D trace to the

549
00:23:04,560 --> 00:23:10,560
zeros these days really great how things

550
00:23:08,070 --> 00:23:11,850
work out and without a design like you

551
00:23:10,560 --> 00:23:15,000
would have normally when you're building

552
00:23:11,850 --> 00:23:18,300
an operating system yes

553
00:23:15,000 --> 00:23:21,060
something impossible Linux will soon

554
00:23:18,300 --> 00:23:24,270
offer an really great and important new

555
00:23:21,060 --> 00:23:25,770
feature one almost and one almost nobody

556
00:23:24,270 --> 00:23:28,020
would have expect during the early

557
00:23:25,770 --> 00:23:30,990
fosston days it will be real-time

558
00:23:28,020 --> 00:23:35,520
capable so it will be able to use Linux

559
00:23:30,990 --> 00:23:38,690
for your laser cutter or for your Roboto

560
00:23:35,520 --> 00:23:42,389
and your industry line that manufactures

561
00:23:38,690 --> 00:23:44,040
cars or whatever because it can make

562
00:23:42,390 --> 00:23:47,120
sure that that program that's

563
00:23:44,040 --> 00:23:50,250
controlling you laser cutters is always

564
00:23:47,120 --> 00:23:53,399
called in time to react to certain

565
00:23:50,250 --> 00:23:56,660
events and that's really important for

566
00:23:53,400 --> 00:23:58,890
this use case and yeah

567
00:23:56,660 --> 00:24:00,420
thank you for telling me all if only for

568
00:23:58,890 --> 00:24:02,700
some days that was actually nothing

569
00:24:00,420 --> 00:24:04,470
people talked about yet but it was an

570
00:24:02,700 --> 00:24:07,500
idea actually in some people's mind

571
00:24:04,470 --> 00:24:09,210
mine's already especially in the mind of

572
00:24:07,500 --> 00:24:11,280
Thomas clocks now who's one of the

573
00:24:09,210 --> 00:24:16,230
leading or the leading developer for the

574
00:24:11,280 --> 00:24:18,960
real-time kernel patches and he actually

575
00:24:16,230 --> 00:24:20,610
recently last fall on the Linux pompous

576
00:24:18,960 --> 00:24:23,820
conference gave a great talk about this

577
00:24:20,610 --> 00:24:25,560
and ul is here I also you don't have to

578
00:24:23,820 --> 00:24:28,050
write this down I will upload the slides

579
00:24:25,560 --> 00:24:30,600
to the website I try to do that before

580
00:24:28,050 --> 00:24:32,850
right before the talk but the

581
00:24:30,600 --> 00:24:35,399
network was overloaded so you have to

582
00:24:32,850 --> 00:24:36,659
wait for that sorry but it's a great

583
00:24:35,400 --> 00:24:39,299
talk where he's looking back and

584
00:24:36,660 --> 00:24:42,990
mentions a few nightmares all the RT

585
00:24:39,299 --> 00:24:45,360
development gave him and one part of the

586
00:24:42,990 --> 00:24:50,460
talks actually he mentioned a few quotes

587
00:24:45,360 --> 00:24:52,559
like real time people are crazy and not

588
00:24:50,460 --> 00:24:54,090
going ever to get merged into little

589
00:24:52,559 --> 00:24:57,418
dynix kernel and things like that and

590
00:24:54,090 --> 00:25:00,330
for I know I spoiled a talk a little bit

591
00:24:57,419 --> 00:25:03,539
yeah but these quotes actually are all

592
00:25:00,330 --> 00:25:07,010
from Linda Stahl was himself that was

593
00:25:03,539 --> 00:25:10,559
most of them were from 2005 from a great

594
00:25:07,010 --> 00:25:13,379
2004 a great great debate of if we're

595
00:25:10,559 --> 00:25:15,809
making real-time Linux wheels I'm

596
00:25:13,380 --> 00:25:18,809
capable actually it's a good idea yeah

597
00:25:15,809 --> 00:25:22,830
but the developers actually didn't give

598
00:25:18,809 --> 00:25:24,780
up and they basically started working on

599
00:25:22,830 --> 00:25:27,720
it having this external patch set and

600
00:25:24,780 --> 00:25:30,899
got small steps in a small patches and

601
00:25:27,720 --> 00:25:32,730
small into the mainline kernel and yeah

602
00:25:30,900 --> 00:25:34,620
that actually made Linux better for all

603
00:25:32,730 --> 00:25:37,890
of us even if we don't use real-time

604
00:25:34,620 --> 00:25:40,649
systems or we don't need them and the

605
00:25:37,890 --> 00:25:42,960
real-time patches hit quite a lot of

606
00:25:40,650 --> 00:25:46,470
problems and skill scalability issues

607
00:25:42,960 --> 00:25:47,909
first and that in they fix them and that

608
00:25:46,470 --> 00:25:51,539
in the end made Linux better for all of

609
00:25:47,909 --> 00:25:53,070
us and yeah the thing is Artie

610
00:25:51,539 --> 00:25:56,039
developers actually had a lot of body

611
00:25:53,070 --> 00:25:58,590
blows and one of the worst was basically

612
00:25:56,039 --> 00:26:00,590
like five or six years ago they had

613
00:25:58,590 --> 00:26:04,168
basically like ninety to ninety percent

614
00:26:00,590 --> 00:26:06,658
of the route done what that were needed

615
00:26:04,169 --> 00:26:09,380
to get make make Linux real-time capable

616
00:26:06,659 --> 00:26:14,370
but they needed basically needed money

617
00:26:09,380 --> 00:26:17,250
for the last few last mile for the last

618
00:26:14,370 --> 00:26:19,469
five years as it turned out yeah and the

619
00:26:17,250 --> 00:26:22,740
thing is that was needed because lots of

620
00:26:19,470 --> 00:26:25,140
company communities that used the apt RT

621
00:26:22,740 --> 00:26:27,900
paid respect then actually didn't help

622
00:26:25,140 --> 00:26:30,360
much of development and but lucky

623
00:26:27,900 --> 00:26:33,929
luckily and the Artie people were

624
00:26:30,360 --> 00:26:36,418
successful they came to the Linux

625
00:26:33,929 --> 00:26:38,309
Foundation and talked to them and they

626
00:26:36,419 --> 00:26:41,700
actually founded a project with a few

627
00:26:38,309 --> 00:26:43,530
companies in 2015 and yes thanks to this

628
00:26:41,700 --> 00:26:44,340
project the main trip will soon be

629
00:26:43,530 --> 00:26:46,520
finished

630
00:26:44,340 --> 00:26:49,080
because the real-time capabilities are

631
00:26:46,520 --> 00:26:51,270
the biggest the most important patch

632
00:26:49,080 --> 00:26:53,460
actually is in the Linux kernel already

633
00:26:51,270 --> 00:26:55,680
the config option to enable the

634
00:26:53,460 --> 00:26:57,540
real-time support it's not exposed yet

635
00:26:55,680 --> 00:26:59,400
because there are few things missing the

636
00:26:57,540 --> 00:27:01,440
biggest thing is actually a rework for

637
00:26:59,400 --> 00:27:03,540
the print case stuff that's actually

638
00:27:01,440 --> 00:27:06,000
which what's doing your logging which

639
00:27:03,540 --> 00:27:08,129
you can see with D message and that but

640
00:27:06,000 --> 00:27:10,020
that's in the work and there was some

641
00:27:08,130 --> 00:27:13,470
disagreements but they were settled

642
00:27:10,020 --> 00:27:15,210
really recently and the patch was the

643
00:27:13,470 --> 00:27:17,340
new patch to make everything happen was

644
00:27:15,210 --> 00:27:20,520
sent to the Linux kernel mailing list

645
00:27:17,340 --> 00:27:23,639
the full review recently so it's likely

646
00:27:20,520 --> 00:27:25,800
this will get into the the kernel this

647
00:27:23,640 --> 00:27:28,710
yes and then make Linux real-time

648
00:27:25,800 --> 00:27:30,659
capable describing all the steps the

649
00:27:28,710 --> 00:27:33,570
real-time developers had to take was

650
00:27:30,660 --> 00:27:36,810
what take also a day or two maybe or

651
00:27:33,570 --> 00:27:38,970
because if you go to LW and not and

652
00:27:36,810 --> 00:27:42,300
actually look what what problems were

653
00:27:38,970 --> 00:27:45,570
discussed over those years you you have

654
00:27:42,300 --> 00:27:47,730
many articles you can read man but it

655
00:27:45,570 --> 00:27:50,399
shows even crazy goals let look

656
00:27:47,730 --> 00:27:53,100
unreachable it can be achieved in small

657
00:27:50,400 --> 00:27:54,840
steps and yeah the thing is that

658
00:27:53,100 --> 00:27:58,679
actually how most of the Linux kernel

659
00:27:54,840 --> 00:28:03,449
features evolve as they are not designed

660
00:27:58,680 --> 00:28:04,320
by some some company or some some in a

661
00:28:03,450 --> 00:28:06,690
meeting or something

662
00:28:04,320 --> 00:28:09,210
often it are simply individuals that

663
00:28:06,690 --> 00:28:12,270
want to realize an idea or a dream and

664
00:28:09,210 --> 00:28:14,550
make Linux do something and sometimes

665
00:28:12,270 --> 00:28:17,100
they even abused companies to realize

666
00:28:14,550 --> 00:28:18,780
their ideas that happens they simply

667
00:28:17,100 --> 00:28:21,899
look for companies that might be willing

668
00:28:18,780 --> 00:28:23,790
to pay them and and some of the

669
00:28:21,900 --> 00:28:27,180
developers sometimes have to find other

670
00:28:23,790 --> 00:28:29,250
places to to find money but it shows

671
00:28:27,180 --> 00:28:32,430
really with a good idea and commitment

672
00:28:29,250 --> 00:28:35,960
and even big and crazy deems dreams can

673
00:28:32,430 --> 00:28:37,950
be realized in real time

674
00:28:35,960 --> 00:28:41,190
Petra's actually are a really good

675
00:28:37,950 --> 00:28:43,740
example for that yeah I mentioned a few

676
00:28:41,190 --> 00:28:45,390
times that Linux is working the Linux

677
00:28:43,740 --> 00:28:47,390
kernel is working differently a little

678
00:28:45,390 --> 00:28:49,710
bit and

679
00:28:47,390 --> 00:28:51,720
nevertheless it learned a lot of things

680
00:28:49,710 --> 00:28:54,650
since you're the first 10 days but it

681
00:28:51,720 --> 00:28:57,420
took them quite quite long to make make

682
00:28:54,650 --> 00:28:58,299
to get those features realized but

683
00:28:57,420 --> 00:28:59,859
that's just

684
00:28:58,299 --> 00:29:02,129
how the Linux word is because you can't

685
00:28:59,859 --> 00:29:04,928
simply can't just hire 50 developers

686
00:29:02,129 --> 00:29:06,908
make them work for two or three years to

687
00:29:04,929 --> 00:29:10,119
build especially this specific feature

688
00:29:06,909 --> 00:29:13,599
like son for example could do of zones D

689
00:29:10,119 --> 00:29:15,849
trees or a set of s because if you do

690
00:29:13,599 --> 00:29:17,139
that there's a really the risk after two

691
00:29:15,849 --> 00:29:20,408
or three years you get to the kernel

692
00:29:17,139 --> 00:29:22,478
developers and they say no we don't want

693
00:29:20,409 --> 00:29:25,779
that that's way too big and you're doing

694
00:29:22,479 --> 00:29:27,969
this and this wall or wrong and because

695
00:29:25,779 --> 00:29:31,389
they want to see these small step

696
00:29:27,969 --> 00:29:34,179
interim incremental steps because that

697
00:29:31,389 --> 00:29:37,418
work quite wait for the Linux column and

698
00:29:34,179 --> 00:29:39,299
that actually means more work for for

699
00:29:37,419 --> 00:29:42,789
the companies if you want to realize

700
00:29:39,299 --> 00:29:45,190
something yeah it's after develop kernel

701
00:29:42,789 --> 00:29:47,079
developers really well often lead to the

702
00:29:45,190 --> 00:29:50,019
best solution on the market but it has

703
00:29:47,079 --> 00:29:53,889
disadvantages too so and now I'm going

704
00:29:50,019 --> 00:29:56,849
to check who's awake who's hands up and

705
00:29:53,889 --> 00:30:00,939
leave it open leave it up if you awake

706
00:29:56,849 --> 00:30:04,389
yeah yeah so leave it leave it leave it

707
00:30:00,940 --> 00:30:06,219
up if you agree with standing here it's

708
00:30:04,389 --> 00:30:11,099
set of s actually the most sophisticated

709
00:30:06,219 --> 00:30:15,029
file system in the UNIX world yeah yeah

710
00:30:11,099 --> 00:30:19,509
quite quite a few hands went down but

711
00:30:15,029 --> 00:30:22,059
about what really fifty percent but but

712
00:30:19,509 --> 00:30:26,109
close with some people think it is

713
00:30:22,059 --> 00:30:27,658
yeah but as NFS and the Linux file

714
00:30:26,109 --> 00:30:30,428
systems actually one of those areas

715
00:30:27,659 --> 00:30:33,149
where a lot of people say Linux is still

716
00:30:30,429 --> 00:30:36,429
not not the best

717
00:30:33,149 --> 00:30:39,218
kernel for that because services is

718
00:30:36,429 --> 00:30:42,339
better and the funny thing is there will

719
00:30:39,219 --> 00:30:45,099
work on a set of s4 Lee knows actually

720
00:30:42,339 --> 00:30:46,690
actually was started in 2008 it's called

721
00:30:45,099 --> 00:30:49,149
butter fest I guess most of you have

722
00:30:46,690 --> 00:30:51,700
heard about this but as most of you will

723
00:30:49,149 --> 00:30:54,789
likely know it doesn't have hasn't

724
00:30:51,700 --> 00:30:56,739
reached that goal and yet and it doesn't

725
00:30:54,789 --> 00:30:59,649
look like it will be anytime soon

726
00:30:56,739 --> 00:31:01,209
if you go to Wikipedia we actually see a

727
00:30:59,649 --> 00:31:04,478
few features that are called unstable

728
00:31:01,209 --> 00:31:06,460
unstable on and if use features that

729
00:31:04,479 --> 00:31:08,289
were announced or that set of has

730
00:31:06,460 --> 00:31:10,960
already had that are not even

731
00:31:08,289 --> 00:31:11,950
implemented yet and also the big

732
00:31:10,960 --> 00:31:15,220
question is what

733
00:31:11,950 --> 00:31:19,240
took them so long yeah one thing for

734
00:31:15,220 --> 00:31:23,350
sure it was over hot and just like all

735
00:31:19,240 --> 00:31:25,299
the other features but Elvis was merged

736
00:31:23,350 --> 00:31:28,178
into the kernel when it was still quite

737
00:31:25,299 --> 00:31:29,440
small and then improved in very various

738
00:31:28,179 --> 00:31:32,200
little small steps

739
00:31:29,440 --> 00:31:33,730
yeah and that take take a lot of time as

740
00:31:32,200 --> 00:31:37,809
I showed with the other examples I gave

741
00:31:33,730 --> 00:31:39,940
earlier and it also shows how quick

742
00:31:37,809 --> 00:31:42,428
things improve and complicated areas

743
00:31:39,940 --> 00:31:44,710
mainly depends on how complex the area

744
00:31:42,429 --> 00:31:46,990
is the problem actually issue what try

745
00:31:44,710 --> 00:31:48,929
to solve and how many individuals or

746
00:31:46,990 --> 00:31:52,029
companies back to the development and

747
00:31:48,929 --> 00:31:54,549
turned-out problem scope he has really

748
00:31:52,029 --> 00:31:57,010
really complex and company a lot of

749
00:31:54,549 --> 00:31:58,658
companies didn't care too much some

750
00:31:57,010 --> 00:32:01,870
companies actually helped like Oracle

751
00:31:58,659 --> 00:32:05,110
Sousa Facebook and few others but some

752
00:32:01,870 --> 00:32:06,850
don't care much and didn't help no

753
00:32:05,110 --> 00:32:09,969
complaint it's how it thinks sometimes

754
00:32:06,850 --> 00:32:12,399
it's in the links world so the big

755
00:32:09,970 --> 00:32:15,610
question is will Linux get something to

756
00:32:12,399 --> 00:32:17,199
compete with ZFS I'm pretty sure sooner

757
00:32:15,610 --> 00:32:20,620
or later it will the examples I gave

758
00:32:17,200 --> 00:32:22,809
really show that it might just take 10

759
00:32:20,620 --> 00:32:26,580
more years maybe just 5 but maybe 15 who

760
00:32:22,809 --> 00:32:29,500
knows we will see just to mention a few

761
00:32:26,580 --> 00:32:32,559
recent events there was filesystem peak

762
00:32:29,500 --> 00:32:36,190
as FS that a lot of people have high

763
00:32:32,559 --> 00:32:39,070
expectations there I'd say be wait and

764
00:32:36,190 --> 00:32:40,630
see and keep your expectations under

765
00:32:39,070 --> 00:32:43,059
control to not create create another

766
00:32:40,630 --> 00:32:44,620
hype because history shows it's a hard

767
00:32:43,059 --> 00:32:46,210
problem the history of butterface

768
00:32:44,620 --> 00:32:48,610
actually shows it's a hard problem that

769
00:32:46,210 --> 00:32:50,200
takes a lot of a fort and because FS

770
00:32:48,610 --> 00:32:52,449
right now is basically a one-man show

771
00:32:50,200 --> 00:32:54,519
and not even submitted to mainline

772
00:32:52,450 --> 00:32:57,730
inclusion yet so it's unlikely to fly

773
00:32:54,519 --> 00:33:01,059
soon even if it got much companies would

774
00:32:57,730 --> 00:33:02,649
need to have a lot of testing and

775
00:33:01,059 --> 00:33:04,210
testing in the field before that's

776
00:33:02,649 --> 00:33:06,699
really become stables or it that will

777
00:33:04,210 --> 00:33:09,010
take a while if things really develop in

778
00:33:06,700 --> 00:33:11,559
this direction maybe in in the end it

779
00:33:09,010 --> 00:33:13,240
turns out that but that but Elvis gets

780
00:33:11,559 --> 00:33:15,309
improved and that becomes a set of s

781
00:33:13,240 --> 00:33:16,860
volumes in the end just as planned that

782
00:33:15,309 --> 00:33:20,980
nobody knows that

783
00:33:16,860 --> 00:33:22,870
yeah I'll talked a lot about features

784
00:33:20,980 --> 00:33:25,260
already but let's switch gears a little

785
00:33:22,870 --> 00:33:27,739
bit and talk about Linux kernel develop

786
00:33:25,260 --> 00:33:30,780
how the kernel is developed itself

787
00:33:27,740 --> 00:33:33,240
because during the early 1st and first

788
00:33:30,780 --> 00:33:35,460
10 days the Linux kernel developed men

789
00:33:33,240 --> 00:33:37,800
looked really odd to outsiders there was

790
00:33:35,460 --> 00:33:39,870
no central development Forge like

791
00:33:37,800 --> 00:33:42,690
SourceForge gate lab or kid

792
00:33:39,870 --> 00:33:44,699
github development was actually totally

793
00:33:42,690 --> 00:33:45,510
driven by email there were dozens of

794
00:33:44,700 --> 00:33:47,570
mailing lists

795
00:33:45,510 --> 00:33:50,600
no tracker for pet submissions no

796
00:33:47,570 --> 00:33:53,790
central issue tracker and neither for

797
00:33:50,600 --> 00:33:55,830
developers no users there were long

798
00:33:53,790 --> 00:33:58,170
unstable development phases they were so

799
00:33:55,830 --> 00:34:02,300
new fate and new features that got build

800
00:33:58,170 --> 00:34:05,340
and integrated into an unstable series

801
00:34:02,300 --> 00:34:07,350
sit there long and reached users only

802
00:34:05,340 --> 00:34:08,699
after two or three years it was made a

803
00:34:07,350 --> 00:34:10,620
lot of people unhappy

804
00:34:08,699 --> 00:34:13,290
there was no predictable released

805
00:34:10,620 --> 00:34:14,940
guidance no driver they just better they

806
00:34:13,290 --> 00:34:16,440
database where I could look up if your

807
00:34:14,940 --> 00:34:19,380
hardware support and how good and

808
00:34:16,440 --> 00:34:22,918
actually we had an overworked lead

809
00:34:19,380 --> 00:34:24,000
developer and because we didn't one of

810
00:34:22,918 --> 00:34:26,969
the reasons why he was kind of

811
00:34:24,000 --> 00:34:28,409
overworked and we didn't even have a

812
00:34:26,969 --> 00:34:32,129
version controls file system by a

813
00:34:28,409 --> 00:34:34,379
resident control system back then for

814
00:34:32,129 --> 00:34:36,600
the younger ones in the front

815
00:34:34,379 --> 00:34:38,668
yes 20 years ago we had version control

816
00:34:36,600 --> 00:34:40,649
systems already most people most project

817
00:34:38,668 --> 00:34:44,699
actually used them for the older ones

818
00:34:40,649 --> 00:34:47,159
yes those were CBS and SVN and maybe

819
00:34:44,699 --> 00:34:49,918
those were the middle-age respect and I

820
00:34:47,159 --> 00:34:50,850
don't know but kids really made things a

821
00:34:49,918 --> 00:34:53,540
lot better yeah

822
00:34:50,850 --> 00:34:57,080
but then back to kernel development

823
00:34:53,540 --> 00:35:01,430
there are I've there were way more

824
00:34:57,080 --> 00:35:04,319
aspects for kernel development and the

825
00:35:01,430 --> 00:35:06,870
approach actually improved quite

826
00:35:04,320 --> 00:35:12,180
somewhat since then like we have kids

827
00:35:06,870 --> 00:35:13,740
since 2005 and hadn't changed the world

828
00:35:12,180 --> 00:35:17,549
really to the better thanks Lee knows

829
00:35:13,740 --> 00:35:20,220
it's the second project that made the

830
00:35:17,550 --> 00:35:22,620
world change and now I have here strange

831
00:35:20,220 --> 00:35:25,319
pop-ups yell it's blocking me my site

832
00:35:22,620 --> 00:35:29,279
yeah and we actually got a predictable

833
00:35:25,320 --> 00:35:31,590
release cadence release cycle since 2005

834
00:35:29,280 --> 00:35:32,910
we basically get new releases from Linux

835
00:35:31,590 --> 00:35:34,680
kernel have been 9 and 10 weeks so it

836
00:35:32,910 --> 00:35:38,980
doesn't take that long to get a feature

837
00:35:34,680 --> 00:35:40,930
out to the users and this approach where

838
00:35:38,980 --> 00:35:43,180
every new version brings new features

839
00:35:40,930 --> 00:35:45,310
actually was called crazy by a lot of

840
00:35:43,180 --> 00:35:47,200
people when when the Linux kernel switch

841
00:35:45,310 --> 00:35:48,940
to it but it turned out very well and

842
00:35:47,200 --> 00:35:51,310
actually browsers actually later picked

843
00:35:48,940 --> 00:35:54,220
it up so Firefox and Chrome we all are

844
00:35:51,310 --> 00:35:57,430
used to this this model that basically

845
00:35:54,220 --> 00:36:00,339
we're the Linux kernel built a path to

846
00:35:57,430 --> 00:36:02,529
actually do that we also got stable

847
00:36:00,340 --> 00:36:05,350
long-term Colonel said have supported

848
00:36:02,530 --> 00:36:07,240
for longer liked latest a lot of those

849
00:36:05,350 --> 00:36:10,450
long-term cons are supported for six

850
00:36:07,240 --> 00:36:12,759
years these days but to be honest many

851
00:36:10,450 --> 00:36:15,368
of the other things I mentioned a few

852
00:36:12,760 --> 00:36:17,290
minutes ago are still around and some

853
00:36:15,369 --> 00:36:18,910
even got worse though so these days we

854
00:36:17,290 --> 00:36:21,390
don't have dozens of mailing lists we

855
00:36:18,910 --> 00:36:24,700
have hundreds of mailing lists and

856
00:36:21,390 --> 00:36:27,160
development is actually still driven by

857
00:36:24,700 --> 00:36:29,980
email there's not there is a box Allah

858
00:36:27,160 --> 00:36:31,990
man but the thing is where you can

859
00:36:29,980 --> 00:36:33,880
report issues but the thing is lots of

860
00:36:31,990 --> 00:36:35,709
developers don't look there because in

861
00:36:33,880 --> 00:36:38,320
most cases it's not the office official

862
00:36:35,710 --> 00:36:39,730
way to report box just the hint for

863
00:36:38,320 --> 00:36:42,280
those that want to report box to the

864
00:36:39,730 --> 00:36:44,490
kernel developers the proper place and

865
00:36:42,280 --> 00:36:47,050
most of the time is a mailing list

866
00:36:44,490 --> 00:36:49,660
security also became much more important

867
00:36:47,050 --> 00:36:52,090
since then but still we have no

868
00:36:49,660 --> 00:36:54,190
automatic Matic code checking in a

869
00:36:52,090 --> 00:36:56,320
central place most of the subsystem

870
00:36:54,190 --> 00:36:58,750
maintained as you something and develop

871
00:36:56,320 --> 00:37:01,090
some of the developers also but nothing

872
00:36:58,750 --> 00:37:03,130
central here a lot of room for

873
00:37:01,090 --> 00:37:06,550
improvements here and on some of those

874
00:37:03,130 --> 00:37:07,300
things actually is someone was working

875
00:37:06,550 --> 00:37:10,240
on them already

876
00:37:07,300 --> 00:37:11,859
and there's always the idea why not

877
00:37:10,240 --> 00:37:15,279
switch to a central fault like it

878
00:37:11,859 --> 00:37:16,960
happened github for development because

879
00:37:15,280 --> 00:37:19,210
you would get a lot of things for

880
00:37:16,960 --> 00:37:21,700
freedom but no that won't have many

881
00:37:19,210 --> 00:37:24,880
times soon because just like with

882
00:37:21,700 --> 00:37:26,950
features that developers demand that

883
00:37:24,880 --> 00:37:31,420
things improved in small steps here too

884
00:37:26,950 --> 00:37:33,549
because yeah that's how it works well

885
00:37:31,420 --> 00:37:35,800
for them and yeah but that's really

886
00:37:33,550 --> 00:37:38,380
needs someone that's motivated enough to

887
00:37:35,800 --> 00:37:40,390
do that without an immediately return of

888
00:37:38,380 --> 00:37:42,910
investment and that makes it sometimes a

889
00:37:40,390 --> 00:37:45,490
little bit hard and that's why some of

890
00:37:42,910 --> 00:37:48,609
those things are still kind of archaic

891
00:37:45,490 --> 00:37:50,470
with Linux kernel development it becomes

892
00:37:48,609 --> 00:37:52,330
more and more of a problem there was

893
00:37:50,470 --> 00:37:52,560
also recently on a plumber's conference

894
00:37:52,330 --> 00:37:55,980
and

895
00:37:52,560 --> 00:37:57,990
all talk about it with with what

896
00:37:55,980 --> 00:38:01,080
problems a lot of developers have to

897
00:37:57,990 --> 00:38:04,500
deal with these days thanks to that work

898
00:38:01,080 --> 00:38:07,020
group was actually started and already

899
00:38:04,500 --> 00:38:08,670
got to work so a few improvements are

900
00:38:07,020 --> 00:38:10,470
coming there's now our Garrett instance

901
00:38:08,670 --> 00:38:14,490
which developers can use to submit

902
00:38:10,470 --> 00:38:18,600
patches to the Linux kernel and way

903
00:38:14,490 --> 00:38:20,009
needs to be seen how the other kernel

904
00:38:18,600 --> 00:38:23,940
developers will start to use this and

905
00:38:20,010 --> 00:38:26,310
how if they liked it but but as you can

906
00:38:23,940 --> 00:38:28,230
see its development is improved with

907
00:38:26,310 --> 00:38:30,299
small small steps just like with

908
00:38:28,230 --> 00:38:34,710
features and yeah that will take some

909
00:38:30,300 --> 00:38:36,360
time sometimes people ask her and should

910
00:38:34,710 --> 00:38:39,480
why can't the Linux Foundation help you

911
00:38:36,360 --> 00:38:42,380
more maybe it should help a little bit

912
00:38:39,480 --> 00:38:46,290
more but I'm not sure how much because

913
00:38:42,380 --> 00:38:48,210
the Linux development model model really

914
00:38:46,290 --> 00:38:50,640
worked well and I don't think it would

915
00:38:48,210 --> 00:38:52,440
be a good idea to basically organize

916
00:38:50,640 --> 00:38:54,720
them like OpenStack or kubernetes are

917
00:38:52,440 --> 00:38:57,780
developed with lots of committees and

918
00:38:54,720 --> 00:39:00,049
hierarchy and things like that yeah that

919
00:38:57,780 --> 00:39:02,760
might not be the best for doing scrum

920
00:39:00,050 --> 00:39:06,350
nevertheless Linux kernel development

921
00:39:02,760 --> 00:39:09,390
meanwhile runs at a usual place pace

922
00:39:06,350 --> 00:39:11,730
every we get new kernel versions every 9

923
00:39:09,390 --> 00:39:13,650
or 10 weeks for many many years now if

924
00:39:11,730 --> 00:39:16,740
you're interested in a few few numbers

925
00:39:13,650 --> 00:39:20,880
we are actually each of those versions

926
00:39:16,740 --> 00:39:23,839
brings about 13,500 commits sometimes

927
00:39:20,880 --> 00:39:27,510
it's thousand or 2,000 more or less and

928
00:39:23,840 --> 00:39:29,940
all of those bring about 300,000 new

929
00:39:27,510 --> 00:39:33,630
lines every version so about every year

930
00:39:29,940 --> 00:39:36,840
the kernel grows about 1.5 million lines

931
00:39:33,630 --> 00:39:39,210
per year and that actually happens about

932
00:39:36,840 --> 00:39:41,150
15 years after Andrew Martin who was

933
00:39:39,210 --> 00:39:45,510
back then number two and the hierarchy

934
00:39:41,150 --> 00:39:47,970
wrote this and famous last words but the

935
00:39:45,510 --> 00:39:50,520
actual patch volume has to rope off one

936
00:39:47,970 --> 00:39:52,919
day as I said that was 15 years ago

937
00:39:50,520 --> 00:39:55,980
it didn't back then we had like I think

938
00:39:52,920 --> 00:39:58,350
six or eight thousand pet commits every

939
00:39:55,980 --> 00:40:02,820
kernel release as I said these days we

940
00:39:58,350 --> 00:40:05,970
often have 13,500 and the Latin later

941
00:40:02,820 --> 00:40:07,980
number is actually stable these days so

942
00:40:05,970 --> 00:40:10,950
the patch volume is quite constant there

943
00:40:07,980 --> 00:40:13,770
hmm yeah but that was not the only thing

944
00:40:10,950 --> 00:40:15,359
Andrew Martin wrote back then he also

945
00:40:13,770 --> 00:40:18,359
said we have to finish this thing one

946
00:40:15,359 --> 00:40:22,109
day yeah I don't think that will ever

947
00:40:18,359 --> 00:40:24,869
happen I guess Linux might be forget

948
00:40:22,109 --> 00:40:27,660
forgotten maybe in hundred years and

949
00:40:24,869 --> 00:40:30,750
because all developers might work on

950
00:40:27,660 --> 00:40:33,618
something else or we still use it in 100

951
00:40:30,750 --> 00:40:36,690
years who knows remains to be seen

952
00:40:33,619 --> 00:40:40,380
so now I'm coming to the end slowly

953
00:40:36,690 --> 00:40:42,420
summing things up now the Linux

954
00:40:40,380 --> 00:40:44,579
developers really solve big problems and

955
00:40:42,420 --> 00:40:46,710
small steps the big con lock showed that

956
00:40:44,579 --> 00:40:49,250
the small steps lead really to better

957
00:40:46,710 --> 00:40:51,540
and more flexible solution like KVM did

958
00:40:49,250 --> 00:40:53,700
sometimes these small steps actually

959
00:40:51,540 --> 00:40:58,140
make groundbreaking new technology

960
00:40:53,700 --> 00:41:00,299
possible like like Daka did the these

961
00:40:58,140 --> 00:41:02,400
small building blocks that are built in

962
00:41:00,300 --> 00:41:05,790
these small steps actually sometimes can

963
00:41:02,400 --> 00:41:10,109
can even help fulfilling old wishes like

964
00:41:05,790 --> 00:41:12,119
DTrace 2.0 did for the wish for tracing

965
00:41:10,109 --> 00:41:14,450
solution and this process actually can

966
00:41:12,119 --> 00:41:17,670
lead to quite unexpected disrupting

967
00:41:14,450 --> 00:41:19,290
results like this be BPF thing I

968
00:41:17,670 --> 00:41:20,520
mentioned really keep an eye on it it's

969
00:41:19,290 --> 00:41:23,730
going to be fun what's coming out of

970
00:41:20,520 --> 00:41:25,349
that but thing is that's what mate and

971
00:41:23,730 --> 00:41:27,329
makes leaning so great because those

972
00:41:25,349 --> 00:41:30,599
were just big examples during the past

973
00:41:27,329 --> 00:41:32,339
three two years at two decades the big

974
00:41:30,599 --> 00:41:35,160
features that what he developed like

975
00:41:32,339 --> 00:41:39,150
that it's basically all the other stuff

976
00:41:35,160 --> 00:41:41,790
was was quite similar but it shows it

977
00:41:39,150 --> 00:41:44,310
what makes Linux so great and reaching

978
00:41:41,790 --> 00:41:47,730
big and chose it you can reach big goals

979
00:41:44,310 --> 00:41:48,599
with small steps and even if that takes

980
00:41:47,730 --> 00:41:50,339
time

981
00:41:48,599 --> 00:41:53,849
yeah and if something takes time it

982
00:41:50,339 --> 00:41:55,319
obviously also needs money because we

983
00:41:53,849 --> 00:41:59,910
all have to eat in the end of the day

984
00:41:55,319 --> 00:42:01,920
and yeah so to realize them that often

985
00:41:59,910 --> 00:42:05,279
needs someone that's really committed

986
00:42:01,920 --> 00:42:08,460
Italy someone that's an individual what

987
00:42:05,280 --> 00:42:11,609
that wants to realize a dream and has a

988
00:42:08,460 --> 00:42:13,980
dream about a new feature and that and

989
00:42:11,609 --> 00:42:16,230
drive makes everything happened to

990
00:42:13,980 --> 00:42:18,390
realize that in the kernel because

991
00:42:16,230 --> 00:42:19,830
that's how all those features I

992
00:42:18,390 --> 00:42:21,600
mentioned too got developed

993
00:42:19,830 --> 00:42:24,029
and the real-time stuff I mentioned is

994
00:42:21,600 --> 00:42:26,900
really was a really big and crazy dream

995
00:42:24,030 --> 00:42:29,850
but even that got realized this way

996
00:42:26,900 --> 00:42:35,220
nevertheless in some RS we are still not

997
00:42:29,850 --> 00:42:37,500
there yet and to improve things you have

998
00:42:35,220 --> 00:42:40,290
to basically become an individual that

999
00:42:37,500 --> 00:42:41,190
is committed and find money to get this

1000
00:42:40,290 --> 00:42:43,470
dream realized

1001
00:42:41,190 --> 00:42:45,960
and then maybe Linux will get a file

1002
00:42:43,470 --> 00:42:48,660
system that's as good or even better

1003
00:42:45,960 --> 00:42:50,970
than set of s and we might get developer

1004
00:42:48,660 --> 00:42:53,940
tools and schemes that are even better

1005
00:42:50,970 --> 00:42:57,750
than what what we have these these days

1006
00:42:53,940 --> 00:42:59,880
just like it was for example or other

1007
00:42:57,750 --> 00:43:03,030
things that will have a positive and

1008
00:42:59,880 --> 00:43:06,390
impact on the world or the world of free

1009
00:43:03,030 --> 00:43:08,790
and open source software like Linux and

1010
00:43:06,390 --> 00:43:10,980
get hat and have which just as

1011
00:43:08,790 --> 00:43:13,259
everything else I mentioned is were just

1012
00:43:10,980 --> 00:43:15,900
a dream and somebody said that somebody

1013
00:43:13,260 --> 00:43:19,490
realized in this case Lee knows that's

1014
00:43:15,900 --> 00:43:22,490
it and that's if you're wondering slide

1015
00:43:19,490 --> 00:43:22,490
234

1016
00:43:22,660 --> 00:43:27,949
[Applause]

1017
00:43:30,200 --> 00:43:37,430
all those like I have so many things to

1018
00:43:33,950 --> 00:43:39,980
say and so many things in my hat that's

1019
00:43:37,430 --> 00:43:42,348
why I'm using to these slides to keep on

1020
00:43:39,980 --> 00:43:48,940
track so are there any questions we now

1021
00:43:42,349 --> 00:43:52,339
have to switch mics all right if you're

1022
00:43:48,940 --> 00:43:53,990
okay if you're planning to leave you

1023
00:43:52,339 --> 00:43:54,980
know this makes questions a little bit

1024
00:43:53,990 --> 00:43:56,390
difficult we have about five minutes

1025
00:43:54,980 --> 00:44:01,880
left for questions if someone has a

1026
00:43:56,390 --> 00:44:03,200
question I now can't get to you guys if

1027
00:44:01,880 --> 00:44:04,640
folks leaving the room could leave the

1028
00:44:03,200 --> 00:44:06,319
room as quietly as possible so we can

1029
00:44:04,640 --> 00:44:23,270
hear the intelligent discourse from the

1030
00:44:06,320 --> 00:44:25,609
questions in the audience to make use of

1031
00:44:23,270 --> 00:44:34,700
quantum computers and quantum chips that

1032
00:44:25,609 --> 00:44:37,700
are coming up yes thank you I have no

1033
00:44:34,700 --> 00:44:40,609
idea I don't think anybody is working on

1034
00:44:37,700 --> 00:44:43,848
making Linux run on quantum computers

1035
00:44:40,609 --> 00:44:47,029
maybe we need new operating systems for

1036
00:44:43,849 --> 00:44:49,520
them remains to be seen maybe somewhere

1037
00:44:47,030 --> 00:44:52,670
and somewhere some lab somebody ported

1038
00:44:49,520 --> 00:44:54,740
little safe but I have no idea by the

1039
00:44:52,670 --> 00:44:56,089
way if if you're exiting the room could

1040
00:44:54,740 --> 00:44:57,919
you please do it from the middle or the

1041
00:44:56,089 --> 00:44:59,509
back they were still trying to actually

1042
00:44:57,920 --> 00:45:01,900
answer questions at the front of the

1043
00:44:59,510 --> 00:45:01,900
room at the moment

1044
00:45:03,130 --> 00:45:08,469
thank you for the table I wanted to know

1045
00:45:05,949 --> 00:45:12,609
do you think that Linux as good and

1046
00:45:08,469 --> 00:45:14,619
faster or less fast during the time

1047
00:45:12,609 --> 00:45:21,609
during the 20 ounce pie sorry I don't

1048
00:45:14,619 --> 00:45:24,190
understand you're still out could you

1049
00:45:21,609 --> 00:45:26,199
maybe come here oh yeah yeah oh yeah

1050
00:45:24,190 --> 00:45:28,900
thanks that's now again do you think

1051
00:45:26,199 --> 00:45:30,999
that the Linux kernel has gotten faster

1052
00:45:28,900 --> 00:45:35,640
during the years because you know a

1053
00:45:30,999 --> 00:45:39,279
software grows it's sometimes slower

1054
00:45:35,640 --> 00:45:41,078
there was many performance enhancements

1055
00:45:39,279 --> 00:45:44,380
so do you think it has gotten like

1056
00:45:41,079 --> 00:45:50,890
slower or faster on the same out where

1057
00:45:44,380 --> 00:45:53,170
oh you mean if if it should be if it

1058
00:45:50,890 --> 00:45:57,940
should be how it could be faster or what

1059
00:45:53,170 --> 00:46:00,489
I like doing all the time that passed oh

1060
00:45:57,940 --> 00:46:02,289
you talked about do you think but the

1061
00:46:00,489 --> 00:46:05,410
kernel as good and faster

1062
00:46:02,289 --> 00:46:10,779
I still out here sorry I can't

1063
00:46:05,410 --> 00:46:14,009
understand it ok we're gonna try this

1064
00:46:10,779 --> 00:46:18,579
again does anybody have a question

1065
00:46:14,009 --> 00:46:22,890
hopefully isn't oh well did you ask if

1066
00:46:18,579 --> 00:46:22,890
the Linux kernel was growing fat or what

1067
00:46:23,489 --> 00:46:30,430
gene is whether Linux gets passed

1068
00:46:26,349 --> 00:46:38,140
through with these updates if even

1069
00:46:30,430 --> 00:46:40,239
faster release updates when Linux gets

1070
00:46:38,140 --> 00:46:43,299
passed up with all the improvements yeah

1071
00:46:40,239 --> 00:46:45,459
it Linux basically gets faster basically

1072
00:46:43,299 --> 00:46:48,099
with every new versions always in little

1073
00:46:45,459 --> 00:46:51,249
little steps also is per this is too

1074
00:46:48,099 --> 00:46:57,280
slow in some some areas or where do you

1075
00:46:51,249 --> 00:47:02,299
think it's too slow it's

1076
00:46:57,280 --> 00:47:04,820
and I think the point was with the

1077
00:47:02,300 --> 00:47:08,570
increased code base it might get slower

1078
00:47:04,820 --> 00:47:11,150
over time if can you repeat it with they

1079
00:47:08,570 --> 00:47:13,099
increase code base over time it might

1080
00:47:11,150 --> 00:47:14,630
get slower because you have too many

1081
00:47:13,099 --> 00:47:16,930
lines you mean because it's getting

1082
00:47:14,630 --> 00:47:19,099
slower because it's so big not

1083
00:47:16,930 --> 00:47:21,368
necessarily right now but can it be in

1084
00:47:19,099 --> 00:47:21,369
the future

1085
00:47:21,400 --> 00:47:27,200
yeah the Linux kernel is quite modular

1086
00:47:24,020 --> 00:47:29,300
so you can build everything into it what

1087
00:47:27,200 --> 00:47:31,730
you want but sure some of those features

1088
00:47:29,300 --> 00:47:36,020
have some overhead that make Linux may

1089
00:47:31,730 --> 00:47:38,630
be slower and that actually likely would

1090
00:47:36,020 --> 00:47:42,470
become this overhead would be a problem

1091
00:47:38,630 --> 00:47:44,510
if you would use a modern Linux on a

1092
00:47:42,470 --> 00:47:47,629
quite old system but on the other hand

1093
00:47:44,510 --> 00:47:50,599
you can configure Linux quite quite

1094
00:47:47,630 --> 00:47:53,960
modular and I mean it's used on a lot of

1095
00:47:50,599 --> 00:47:56,300
embedded systems so it shows it can be

1096
00:47:53,960 --> 00:47:58,130
made quite small and at the same time

1097
00:47:56,300 --> 00:48:02,329
also work on quite big servers with

1098
00:47:58,130 --> 00:48:05,990
hundreds of CPUs right this is our last

1099
00:48:02,329 --> 00:48:07,819
question last question okay my name is

1100
00:48:05,990 --> 00:48:12,200
totally sorry I speak a little bit

1101
00:48:07,819 --> 00:48:14,119
English I would like to ask about if I

1102
00:48:12,200 --> 00:48:21,368
understand to your right you said that

1103
00:48:14,119 --> 00:48:24,020
each year we got 1.5 million lines more

1104
00:48:21,369 --> 00:48:31,329
just your opinion what's happened in 10

1105
00:48:24,020 --> 00:48:34,640
years so what was it who tested it I

1106
00:48:31,329 --> 00:48:36,650
can't hear the speakers are away from

1107
00:48:34,640 --> 00:48:39,680
here could you explain me how it's

1108
00:48:36,650 --> 00:48:43,190
possible to test it at all how to tell

1109
00:48:39,680 --> 00:48:47,899
things that you enter into doesn't care

1110
00:48:43,190 --> 00:48:51,650
about commits from IBM or Facebook or

1111
00:48:47,900 --> 00:48:53,900
another conference yes tested at all no

1112
00:48:51,650 --> 00:48:55,819
no I guess nobody tests it's all because

1113
00:48:53,900 --> 00:48:59,990
you can build it in lots of different

1114
00:48:55,819 --> 00:49:02,480
ways we have a lot of issues well what

1115
00:48:59,990 --> 00:49:06,290
this why they have a lot of issues yeah

1116
00:49:02,480 --> 00:49:08,000
it's a lot of people try to testing the

1117
00:49:06,290 --> 00:49:09,410
Linux kernel throughout Lee but you

1118
00:49:08,000 --> 00:49:11,450
can't test at all

1119
00:49:09,410 --> 00:49:14,359
and that's also something that really

1120
00:49:11,450 --> 00:49:17,870
needs to be get better which the work

1121
00:49:14,360 --> 00:49:20,120
for group also I think has on its

1122
00:49:17,870 --> 00:49:24,549
roadmap to make sure the contest thing

1123
00:49:20,120 --> 00:49:27,230
gets better yeah okay I think we are

1124
00:49:24,550 --> 00:49:29,840
ending this if you can want to give any

1125
00:49:27,230 --> 00:49:32,120
feedback just talk to me even if you

1126
00:49:29,840 --> 00:49:35,150
didn't like it yeah and if you want to

1127
00:49:32,120 --> 00:49:37,630
follow me you can follow me here if you

1128
00:49:35,150 --> 00:49:46,739
want thanks again and have a great pasta

1129
00:49:37,630 --> 00:49:46,739
[Applause]

