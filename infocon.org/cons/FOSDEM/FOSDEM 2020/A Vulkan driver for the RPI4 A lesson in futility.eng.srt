1
00:00:05,440 --> 00:00:09,840
so

2
00:00:06,080 --> 00:00:12,080
hello um really nice for you to show up

3
00:00:09,840 --> 00:00:13,840
because it's not going to be a technical

4
00:00:12,080 --> 00:00:15,679
talk so it's not going to be a flashy

5
00:00:13,840 --> 00:00:16,480
talk or anything but i have animations

6
00:00:15,679 --> 00:00:19,680
so if that's

7
00:00:16,480 --> 00:00:21,359
any consolation um the vulcan driver for

8
00:00:19,680 --> 00:00:22,080
saying yeah it's true but on the other

9
00:00:21,359 --> 00:00:24,160
hand uh

10
00:00:22,080 --> 00:00:26,560
that's more important so it's really a

11
00:00:24,160 --> 00:00:28,480
lesson in fertility

12
00:00:26,560 --> 00:00:30,720
these slides are linked i think in the

13
00:00:28,480 --> 00:00:31,039
description um they only work on firefox

14
00:00:30,720 --> 00:00:34,399
so

15
00:00:31,039 --> 00:00:37,840
have fun uh okay let's start with that

16
00:00:34,399 --> 00:00:38,239
i will tell you who i am um what roughly

17
00:00:37,840 --> 00:00:40,640
as

18
00:00:38,239 --> 00:00:41,760
raspberry pi 4 is if anybody hasn't

19
00:00:40,640 --> 00:00:43,760
heard that a few

20
00:00:41,760 --> 00:00:45,760
things about at least what i think i

21
00:00:43,760 --> 00:00:48,000
have learned about metals really

22
00:00:45,760 --> 00:00:49,039
i think a few things i have hopefully

23
00:00:48,000 --> 00:00:53,039
learned about

24
00:00:49,039 --> 00:00:54,879
gallium v 3d variant then this strange

25
00:00:53,039 --> 00:00:58,719
driver that i'm currently

26
00:00:54,879 --> 00:01:01,519
writing and about possible features

27
00:00:58,719 --> 00:01:03,120
so who am i um name is andreas becma i

28
00:01:01,520 --> 00:01:06,479
have a github i have a twitter

29
00:01:03,120 --> 00:01:09,920
i work at auto that's a

30
00:01:06,479 --> 00:01:13,200
e-commerce company in germany

31
00:01:09,920 --> 00:01:16,479
and back in 2017 i've worked at

32
00:01:13,200 --> 00:01:19,840
uh in in games so we did

33
00:01:16,479 --> 00:01:23,039
this game and this game um you see

34
00:01:19,840 --> 00:01:23,920
down here uh the platforms were android

35
00:01:23,040 --> 00:01:26,960
and horizon

36
00:01:23,920 --> 00:01:29,600
which is basically the saturn switch um

37
00:01:26,960 --> 00:01:30,720
and the interesting thing is uh for both

38
00:01:29,600 --> 00:01:34,158
these platforms

39
00:01:30,720 --> 00:01:36,240
uh you in 2017 you could write

40
00:01:34,159 --> 00:01:37,280
your games in or you can render in

41
00:01:36,240 --> 00:01:39,439
vulcan so

42
00:01:37,280 --> 00:01:40,799
that's what actually this games did so

43
00:01:39,439 --> 00:01:43,679
you had here

44
00:01:40,799 --> 00:01:45,600
a big vulcan layer where you would

45
00:01:43,680 --> 00:01:47,439
render out and

46
00:01:45,600 --> 00:01:49,360
for horizon it's a little bit different

47
00:01:47,439 --> 00:01:52,559
the vocal layer is a little bit

48
00:01:49,360 --> 00:01:56,479
smaller and you have this nvm which is

49
00:01:52,560 --> 00:01:59,840
specialized and i think nvidia variant

50
00:01:56,479 --> 00:02:00,880
um yeah and we ship that and you can

51
00:01:59,840 --> 00:02:05,439
play this game now

52
00:02:00,880 --> 00:02:05,439
on android and on the switch if you want

53
00:02:05,840 --> 00:02:12,160
and that's when i personally got into

54
00:02:09,119 --> 00:02:12,879
vulcan or got introduced to wolken um we

55
00:02:12,160 --> 00:02:14,959
were

56
00:02:12,879 --> 00:02:16,399
i think one of the first wolken games

57
00:02:14,959 --> 00:02:19,599
that were out there

58
00:02:16,400 --> 00:02:22,239
and um yeah so

59
00:02:19,599 --> 00:02:24,160
what i'm doing now i mean there's

60
00:02:22,239 --> 00:02:27,280
raspberry pi 4

61
00:02:24,160 --> 00:02:29,840
so what i'm doing on the user space what

62
00:02:27,280 --> 00:02:32,959
i need to do basically i need to

63
00:02:29,840 --> 00:02:36,000
make a c abi which

64
00:02:32,959 --> 00:02:38,480
with the help of meta which

65
00:02:36,000 --> 00:02:39,840
implements all the things that vulcan

66
00:02:38,480 --> 00:02:43,440
driver would

67
00:02:39,840 --> 00:02:45,360
assume so to do that

68
00:02:43,440 --> 00:02:46,720
i don't want to write everything from

69
00:02:45,360 --> 00:02:50,080
scratch so

70
00:02:46,720 --> 00:02:52,319
i would like to utilize what the

71
00:02:50,080 --> 00:02:54,720
kernel or what in the kernel already is

72
00:02:52,319 --> 00:02:58,079
that's the v3d driver

73
00:02:54,720 --> 00:02:58,959
which basically can handle the hardware

74
00:02:58,080 --> 00:03:02,840
of the raspberry

75
00:02:58,959 --> 00:03:06,400
pi 4 which is here this value codec

76
00:03:02,840 --> 00:03:09,120
6. and yeah that code is already there

77
00:03:06,400 --> 00:03:11,360
so without that it would even be more

78
00:03:09,120 --> 00:03:11,360
hard

79
00:03:11,680 --> 00:03:15,599
yeah if you want to look at the source

80
00:03:13,680 --> 00:03:18,239
code in my patches you can go here

81
00:03:15,599 --> 00:03:18,959
and see what a [ __ ] am or anything i

82
00:03:18,239 --> 00:03:22,000
mean i'm

83
00:03:18,959 --> 00:03:24,159
really starting new at this so there you

84
00:03:22,000 --> 00:03:25,440
don't have to have any big expectations

85
00:03:24,159 --> 00:03:28,480
because it's just

86
00:03:25,440 --> 00:03:31,680
random stuff um

87
00:03:28,480 --> 00:03:32,480
why am i doing that i started earlier

88
00:03:31,680 --> 00:03:35,840
with that

89
00:03:32,480 --> 00:03:36,640
basically we have for example raspberry

90
00:03:35,840 --> 00:03:39,760
pi's at work

91
00:03:36,640 --> 00:03:42,238
um we use them as dashboards remember

92
00:03:39,760 --> 00:03:43,040
we even tried to use microsoft teams

93
00:03:42,239 --> 00:03:46,319
with that

94
00:03:43,040 --> 00:03:49,359
and what you really notice with

95
00:03:46,319 --> 00:03:49,839
raspberry pi's or the smaller pcs if you

96
00:03:49,360 --> 00:03:53,840
will

97
00:03:49,840 --> 00:03:57,439
is they don't have too much of power so

98
00:03:53,840 --> 00:03:59,920
every bit of power that you can have

99
00:03:57,439 --> 00:04:00,560
be it in the gpu or cpu you want to have

100
00:03:59,920 --> 00:04:03,599
so

101
00:04:00,560 --> 00:04:05,599
um personally i would say it would be

102
00:04:03,599 --> 00:04:08,560
perhaps really beneficial to have wolcon

103
00:04:05,599 --> 00:04:10,560
to get all the overhead from opengl

104
00:04:08,560 --> 00:04:11,840
out but it's just a theory i don't know

105
00:04:10,560 --> 00:04:14,879
whether this is actually

106
00:04:11,840 --> 00:04:15,280
good personally i've just never been

107
00:04:14,879 --> 00:04:18,238
really

108
00:04:15,280 --> 00:04:19,120
fond of opengl i've dealt with it a

109
00:04:18,238 --> 00:04:22,320
little bit but

110
00:04:19,120 --> 00:04:25,919
vulcan is rather more my alley but

111
00:04:22,320 --> 00:04:26,639
it's more explicit from my experience

112
00:04:25,919 --> 00:04:29,680
i've most

113
00:04:26,639 --> 00:04:33,199
experienced in c plus plus go and see

114
00:04:29,680 --> 00:04:37,680
so basically that makes writing

115
00:04:33,199 --> 00:04:40,720
for mezza i think doable

116
00:04:37,680 --> 00:04:43,440
and i have currently a little bit

117
00:04:40,720 --> 00:04:43,759
more than one hour of commute every day

118
00:04:43,440 --> 00:04:45,840
so

119
00:04:43,759 --> 00:04:47,040
i have free time with my hands so hey

120
00:04:45,840 --> 00:04:49,520
why not uh

121
00:04:47,040 --> 00:04:50,800
in the future of course uh the the hip

122
00:04:49,520 --> 00:04:52,960
talk we will have

123
00:04:50,800 --> 00:04:53,919
here i think tomorrow there's some web

124
00:04:52,960 --> 00:04:57,840
gpu

125
00:04:53,919 --> 00:04:59,520
and people try to do some abstractions

126
00:04:57,840 --> 00:05:01,599
if i heard this correctly on top of

127
00:04:59,520 --> 00:05:05,120
wukon for example so maybe it

128
00:05:01,600 --> 00:05:07,360
will be a web gpu on on raspberry who

129
00:05:05,120 --> 00:05:07,360
knows

130
00:05:07,759 --> 00:05:11,840
yeah raspberry 4 i mean was released

131
00:05:10,639 --> 00:05:15,039
2019 has

132
00:05:11,840 --> 00:05:17,280
these two hdmi outputs now it's a little

133
00:05:15,039 --> 00:05:19,759
bit more beefy

134
00:05:17,280 --> 00:05:20,320
everybody has heard every complaint

135
00:05:19,759 --> 00:05:23,600
about it

136
00:05:20,320 --> 00:05:26,880
so i will not repeat that here

137
00:05:23,600 --> 00:05:28,800
um basically uh it should be able to

138
00:05:26,880 --> 00:05:32,560
support working 1.1

139
00:05:28,800 --> 00:05:36,320
um the cpu can actually do uh 64 bits

140
00:05:32,560 --> 00:05:36,960
um the video card cannot as far as i

141
00:05:36,320 --> 00:05:40,159
know

142
00:05:36,960 --> 00:05:43,198
so currently

143
00:05:40,160 --> 00:05:44,960
i even have 46 bits of the driver and

144
00:05:43,199 --> 00:05:47,919
i've not tested them yet

145
00:05:44,960 --> 00:05:50,080
but i would assume that there might be

146
00:05:47,919 --> 00:05:53,440
some problem somewhere because

147
00:05:50,080 --> 00:05:57,198
people just assume that a hint is

148
00:05:53,440 --> 00:06:00,639
32 bits or whatever um who knows

149
00:05:57,199 --> 00:06:03,039
or vice versa um and basically

150
00:06:00,639 --> 00:06:03,759
the the video core is the tile renderer

151
00:06:03,039 --> 00:06:06,080
so we have

152
00:06:03,759 --> 00:06:07,120
the spinner thing which goes to the

153
00:06:06,080 --> 00:06:10,960
renderer and you

154
00:06:07,120 --> 00:06:12,800
render a tile out i'm not the expert

155
00:06:10,960 --> 00:06:14,400
not a single expert i mean experts are

156
00:06:12,800 --> 00:06:14,800
sitting here probably who can explain

157
00:06:14,400 --> 00:06:17,919
it's

158
00:06:14,800 --> 00:06:21,280
way better than me so

159
00:06:17,919 --> 00:06:23,758
um and i thought uh what do i

160
00:06:21,280 --> 00:06:25,119
well what did i have to learn and that's

161
00:06:23,759 --> 00:06:27,680
basically summed up here

162
00:06:25,120 --> 00:06:30,880
so i started looking at that at the new

163
00:06:27,680 --> 00:06:30,880
hardware and was saying okay

164
00:06:31,039 --> 00:06:34,159
what is what's already there in terms of

165
00:06:33,440 --> 00:06:36,960
software

166
00:06:34,160 --> 00:06:37,440
infrastructure whatever so you have here

167
00:06:36,960 --> 00:06:41,280
the

168
00:06:37,440 --> 00:06:44,719
the v3d eric is maintaining that

169
00:06:41,280 --> 00:06:46,239
you have the vc4 for the video code 4

170
00:06:44,720 --> 00:06:49,360
which is the raspberry pi

171
00:06:46,240 --> 00:06:50,240
3. i think eric is maintaining that but

172
00:06:49,360 --> 00:06:53,520
i have no idea

173
00:06:50,240 --> 00:06:55,919
quite frankly um and then

174
00:06:53,520 --> 00:06:57,198
it gets interesting because if you look

175
00:06:55,919 --> 00:07:00,639
at the performance

176
00:06:57,199 --> 00:07:03,520
testing at chronos there is actually a

177
00:07:00,639 --> 00:07:06,639
broadcom driver in there

178
00:07:03,520 --> 00:07:07,840
and broadcom i have this from good

179
00:07:06,639 --> 00:07:10,400
sources that they

180
00:07:07,840 --> 00:07:11,599
internally really have a vulcan driver

181
00:07:10,400 --> 00:07:13,599
but apparently

182
00:07:11,599 --> 00:07:14,639
they have no plans in releasing that to

183
00:07:13,599 --> 00:07:18,479
the public

184
00:07:14,639 --> 00:07:21,680
so i don't know okay um

185
00:07:18,479 --> 00:07:25,120
that one i mean that's what i am doing i

186
00:07:21,680 --> 00:07:28,479
named it vs 3d vk

187
00:07:25,120 --> 00:07:31,440
and i'm basing that on another 3d

188
00:07:28,479 --> 00:07:32,159
there is the other one uh which eric

189
00:07:31,440 --> 00:07:35,759
started

190
00:07:32,160 --> 00:07:40,240
um before he left us sync broadcom

191
00:07:35,759 --> 00:07:43,360
uh and he named that v3dv i think

192
00:07:40,240 --> 00:07:46,639
um it's also based on meta but didn't

193
00:07:43,360 --> 00:07:47,520
really compile as far as i remember and

194
00:07:46,639 --> 00:07:51,120
for the

195
00:07:47,520 --> 00:07:53,680
uh the older hardware there's air pi vk

196
00:07:51,120 --> 00:07:55,360
um i don't know what uh the name of the

197
00:07:53,680 --> 00:07:58,479
guy is but at least um

198
00:07:55,360 --> 00:07:59,680
he continuously every few months does

199
00:07:58,479 --> 00:08:03,199
something on that and

200
00:07:59,680 --> 00:08:05,840
yeah makes some progress i guess

201
00:08:03,199 --> 00:08:07,759
so uh that's currently what the

202
00:08:05,840 --> 00:08:11,359
landscape we have

203
00:08:07,759 --> 00:08:12,720
um and more to that later uh yeah so

204
00:08:11,360 --> 00:08:16,479
what did i learn from

205
00:08:12,720 --> 00:08:19,120
measures really um

206
00:08:16,479 --> 00:08:20,878
i think and i can be wrong the biggest

207
00:08:19,120 --> 00:08:24,960
part of metal seems to be gallium

208
00:08:20,879 --> 00:08:27,520
which is basically the the opengl um

209
00:08:24,960 --> 00:08:28,239
yeah driver or variance i don't know how

210
00:08:27,520 --> 00:08:31,359
to to

211
00:08:28,240 --> 00:08:33,360
describe that um there is a

212
00:08:31,360 --> 00:08:35,200
bit of infrastructure for vulcan it's

213
00:08:33,360 --> 00:08:37,279
not uh nearly as

214
00:08:35,200 --> 00:08:40,399
much as for gallium um might be

215
00:08:37,279 --> 00:08:40,399
intentionally i don't know

216
00:08:40,479 --> 00:08:44,159
the the big problem is you cannot really

217
00:08:43,279 --> 00:08:47,040
differentiate

218
00:08:44,159 --> 00:08:47,920
currently it's between common between

219
00:08:47,040 --> 00:08:51,279
gallium and

220
00:08:47,920 --> 00:08:54,959
between vulcan because it's

221
00:08:51,279 --> 00:08:58,000
the code feels like it grew hysterically

222
00:08:54,959 --> 00:09:01,040
um so uh basically means that

223
00:08:58,000 --> 00:09:02,959
a lot of common uses gallium so you do

224
00:09:01,040 --> 00:09:04,560
it's really hard to write your vulcan

225
00:09:02,959 --> 00:09:07,279
code without

226
00:09:04,560 --> 00:09:08,319
putting gallium in it so i think there's

227
00:09:07,279 --> 00:09:10,480
some cleanup

228
00:09:08,320 --> 00:09:11,839
on the way currently but currently it's

229
00:09:10,480 --> 00:09:15,200
not really clean

230
00:09:11,839 --> 00:09:18,399
so um uh and that reflects in

231
00:09:15,200 --> 00:09:21,279
in the built system uh

232
00:09:18,399 --> 00:09:22,800
yeah gallium v3d supports really cool

233
00:09:21,279 --> 00:09:25,279
six so eric did

234
00:09:22,800 --> 00:09:26,479
as far as i know all the necessary

235
00:09:25,279 --> 00:09:30,240
changes to have

236
00:09:26,480 --> 00:09:31,600
basic support so um which is really good

237
00:09:30,240 --> 00:09:33,440
for me because i can

238
00:09:31,600 --> 00:09:37,360
look at the code and try to figure out

239
00:09:33,440 --> 00:09:39,839
what it does and port it then to wolken

240
00:09:37,360 --> 00:09:41,040
and i already said without gallium it's

241
00:09:39,839 --> 00:09:44,959
really hard

242
00:09:41,040 --> 00:09:44,959
to get gallium out let's say

243
00:09:47,440 --> 00:09:53,120
vocal infrastructure what i noticed is

244
00:09:50,560 --> 00:09:56,160
volcan drivers have a monolithic

245
00:09:53,120 --> 00:09:57,040
your driver private h i don't know what

246
00:09:56,160 --> 00:10:00,240
the reason for that

247
00:09:57,040 --> 00:10:00,719
is but it's not nice for people like me

248
00:10:00,240 --> 00:10:03,200
who have

249
00:10:00,720 --> 00:10:04,160
a small haswell cpu and have to

250
00:10:03,200 --> 00:10:07,519
recompile a

251
00:10:04,160 --> 00:10:08,240
whole driver each time so i did not

252
00:10:07,519 --> 00:10:10,640
follow

253
00:10:08,240 --> 00:10:12,160
that approach i have smaller headers

254
00:10:10,640 --> 00:10:14,800
because i cannot really

255
00:10:12,160 --> 00:10:16,000
i mean i have limited time every day

256
00:10:14,800 --> 00:10:18,800
having big headers

257
00:10:16,000 --> 00:10:20,320
is i don't know might have some reason

258
00:10:18,800 --> 00:10:23,439
but it's not

259
00:10:20,320 --> 00:10:26,160
the reason i don't understand and some

260
00:10:23,440 --> 00:10:26,480
finding symbols in this gigantic header

261
00:10:26,160 --> 00:10:29,120
is

262
00:10:26,480 --> 00:10:29,120
not really fun

263
00:10:30,000 --> 00:10:33,519
the the last uh infrastructure thingy i

264
00:10:33,040 --> 00:10:36,640
saw

265
00:10:33,519 --> 00:10:38,959
was that the format um uh

266
00:10:36,640 --> 00:10:40,000
now moving out of gallium into the

267
00:10:38,959 --> 00:10:43,199
common um

268
00:10:40,000 --> 00:10:45,600
i think uh not everything is outside of

269
00:10:43,200 --> 00:10:46,959
gallium yet but it's slowly moving so

270
00:10:45,600 --> 00:10:49,279
it's getting it's getting better

271
00:10:46,959 --> 00:10:50,079
that's the good thing um and i

272
00:10:49,279 --> 00:10:52,560
complained

273
00:10:50,079 --> 00:10:53,439
already today i will complain again um

274
00:10:52,560 --> 00:10:56,079
the problem

275
00:10:53,440 --> 00:10:57,279
i at least had and have to a certain

276
00:10:56,079 --> 00:10:59,040
degree with measure is

277
00:10:57,279 --> 00:11:00,320
it feels like a cult so if you're in

278
00:10:59,040 --> 00:11:01,920
that that's great

279
00:11:00,320 --> 00:11:03,600
but if you're new to that you have a

280
00:11:01,920 --> 00:11:06,719
problem because uh

281
00:11:03,600 --> 00:11:08,720
there is all the things you need to do

282
00:11:06,720 --> 00:11:09,839
or you would like to do it's not

283
00:11:08,720 --> 00:11:12,320
described or

284
00:11:09,839 --> 00:11:14,480
you just need to be in it and it's

285
00:11:12,320 --> 00:11:17,120
really hard to get in it

286
00:11:14,480 --> 00:11:19,600
but also i think people are getting

287
00:11:17,120 --> 00:11:22,160
aware of that a little bit more

288
00:11:19,600 --> 00:11:23,920
um then there's this build system i'm

289
00:11:22,160 --> 00:11:25,279
wearing the the basal shirt not because

290
00:11:23,920 --> 00:11:27,360
i think bazel is so

291
00:11:25,279 --> 00:11:28,320
bad because i think bezel is way better

292
00:11:27,360 --> 00:11:32,000
than methane

293
00:11:28,320 --> 00:11:34,560
but here basin is probably okay

294
00:11:32,000 --> 00:11:36,240
um but it's just not great isolation and

295
00:11:34,560 --> 00:11:39,040
all those things

296
00:11:36,240 --> 00:11:40,079
you really see that it's not as clean as

297
00:11:39,040 --> 00:11:42,480
it could be

298
00:11:40,079 --> 00:11:45,120
on the other hand it works so yeah we

299
00:11:42,480 --> 00:11:48,399
have to deal with that

300
00:11:45,120 --> 00:11:52,160
so um aside from the

301
00:11:48,399 --> 00:11:55,360
the gallium 3d part um there's also

302
00:11:52,160 --> 00:11:56,079
a part where uh is a general broadcom

303
00:11:55,360 --> 00:11:59,120
library

304
00:11:56,079 --> 00:12:00,319
which is not in gallium and that's

305
00:11:59,120 --> 00:12:03,440
basically

306
00:12:00,320 --> 00:12:05,200
you put xml in

307
00:12:03,440 --> 00:12:06,480
with a magic python that we already

308
00:12:05,200 --> 00:12:08,240
heard of

309
00:12:06,480 --> 00:12:09,760
then you get hello communication units

310
00:12:08,240 --> 00:12:12,959
for the variants out

311
00:12:09,760 --> 00:12:15,519
currently i'm just interested in the

312
00:12:12,959 --> 00:12:17,680
latest so it's not that much of a

313
00:12:15,519 --> 00:12:21,120
problem for me

314
00:12:17,680 --> 00:12:23,760
but for the v3d in gallium

315
00:12:21,120 --> 00:12:25,040
they really do a lot of work to support

316
00:12:23,760 --> 00:12:27,839
all the different generations of

317
00:12:25,040 --> 00:12:27,839
hardware they have

318
00:12:29,120 --> 00:12:34,560
problems you have problems documented in

319
00:12:32,399 --> 00:12:36,639
the codes if you're really interested in

320
00:12:34,560 --> 00:12:39,119
how the hardware behaves it's

321
00:12:36,639 --> 00:12:40,800
here and there and everywhere basically

322
00:12:39,120 --> 00:12:43,040
so um basically what you

323
00:12:40,800 --> 00:12:44,319
will have to do to really understand it

324
00:12:43,040 --> 00:12:46,719
and i try at least

325
00:12:44,320 --> 00:12:47,519
is to read through all the the source

326
00:12:46,720 --> 00:12:50,480
code

327
00:12:47,519 --> 00:12:51,519
and try to really pick up all the nitty

328
00:12:50,480 --> 00:12:56,160
gritty that

329
00:12:51,519 --> 00:12:58,240
some developer documented

330
00:12:56,160 --> 00:13:00,399
and i'm not sure i couldn't really find

331
00:12:58,240 --> 00:13:03,600
it there's different documentation

332
00:13:00,399 --> 00:13:05,440
how ready compute already is or not

333
00:13:03,600 --> 00:13:08,000
and i still have to figure that out for

334
00:13:05,440 --> 00:13:09,920
v3d

335
00:13:08,000 --> 00:13:11,760
for gallium so that's the next layer

336
00:13:09,920 --> 00:13:13,760
basically which uses the the method

337
00:13:11,760 --> 00:13:16,720
library

338
00:13:13,760 --> 00:13:17,760
this is i think a pretty standard

339
00:13:16,720 --> 00:13:21,279
gallium

340
00:13:17,760 --> 00:13:23,040
variant i don't know i don't understand

341
00:13:21,279 --> 00:13:25,439
everything from gallium so

342
00:13:23,040 --> 00:13:27,040
bear with me um the only thing that i

343
00:13:25,440 --> 00:13:29,519
found

344
00:13:27,040 --> 00:13:30,079
kind of notable is uh that they have

345
00:13:29,519 --> 00:13:34,320
some

346
00:13:30,079 --> 00:13:37,839
macro abstraction for uh setting the the

347
00:13:34,320 --> 00:13:40,399
in this case is the winner commands um

348
00:13:37,839 --> 00:13:41,199
where you're not um setting the the

349
00:13:40,399 --> 00:13:44,240
single uh

350
00:13:41,199 --> 00:13:46,399
bytes but you rather go ahead and set

351
00:13:44,240 --> 00:13:47,760
set the structures and then it's a macro

352
00:13:46,399 --> 00:13:52,079
magic that

353
00:13:47,760 --> 00:13:54,399
converts that to the the actual bytes

354
00:13:52,079 --> 00:13:55,680
under the hood it also handles the

355
00:13:54,399 --> 00:13:59,519
variants

356
00:13:55,680 --> 00:14:03,760
the hardware specific things and

357
00:13:59,519 --> 00:14:07,760
to me it makes the code more readable um

358
00:14:03,760 --> 00:14:08,160
it kind of trusts that the compiler does

359
00:14:07,760 --> 00:14:10,079
enough

360
00:14:08,160 --> 00:14:12,160
optimizations for that to go away i'm

361
00:14:10,079 --> 00:14:16,000
not sure i don't trust compilers so

362
00:14:12,160 --> 00:14:19,600
that much but it's it's okay i think um

363
00:14:16,000 --> 00:14:22,639
the other uh really beneficial thing is

364
00:14:19,600 --> 00:14:23,760
uh to me at least who gets new into the

365
00:14:22,639 --> 00:14:27,040
the whole topic

366
00:14:23,760 --> 00:14:28,959
is that i can read the code more

367
00:14:27,040 --> 00:14:30,480
easily i think and that's really

368
00:14:28,959 --> 00:14:33,279
beneficial if you compare

369
00:14:30,480 --> 00:14:34,160
it's free durino uh and they do as far

370
00:14:33,279 --> 00:14:36,320
as i know

371
00:14:34,160 --> 00:14:37,519
manual bytes and it's a little bit

372
00:14:36,320 --> 00:14:40,800
clumsy to read

373
00:14:37,519 --> 00:14:44,000
from at for them the cons are

374
00:14:40,800 --> 00:14:46,639
to me uh yeah the macros i had a bug

375
00:14:44,000 --> 00:14:49,199
ones in in that code or around the code

376
00:14:46,639 --> 00:14:54,079
and debugging with that or tracing

377
00:14:49,199 --> 00:14:54,079
is not so fun but it's doable so yeah

378
00:14:54,320 --> 00:14:58,399
there's maybe some performance on the

379
00:14:56,880 --> 00:15:00,160
table but i don't know i haven't

380
00:14:58,399 --> 00:15:03,519
measured

381
00:15:00,160 --> 00:15:07,279
and opengl is this dirty flower

382
00:15:03,519 --> 00:15:10,240
flag implicit effect effect handling

383
00:15:07,279 --> 00:15:11,680
missing parallelism at times for v3d at

384
00:15:10,240 --> 00:15:14,000
least

385
00:15:11,680 --> 00:15:15,680
that's just i think opengl

386
00:15:14,000 --> 00:15:18,320
implementations so

387
00:15:15,680 --> 00:15:19,519
it's not really that bad but it could be

388
00:15:18,320 --> 00:15:22,560
improved and

389
00:15:19,519 --> 00:15:26,240
vulcan is if not anything to improve on

390
00:15:22,560 --> 00:15:29,279
opengl how did i start

391
00:15:26,240 --> 00:15:33,120
uh um basically

392
00:15:29,279 --> 00:15:36,160
at least i decided where to steal code

393
00:15:33,120 --> 00:15:38,720
um i skill code um i implement

394
00:15:36,160 --> 00:15:40,639
what i need to change and i jump back to

395
00:15:38,720 --> 00:15:43,440
two so i still

396
00:15:40,639 --> 00:15:44,959
so basically um if you look at the

397
00:15:43,440 --> 00:15:45,920
drivers everybody is stealing from

398
00:15:44,959 --> 00:15:47,920
everybody

399
00:15:45,920 --> 00:15:49,519
i think envy was the first one as the

400
00:15:47,920 --> 00:15:52,399
first vulcan driver and

401
00:15:49,519 --> 00:15:53,680
we're slowly copying code and trying to

402
00:15:52,399 --> 00:15:55,199
make it a little bit better at each

403
00:15:53,680 --> 00:15:58,000
iteration

404
00:15:55,199 --> 00:15:58,719
and that works not that bad let's put it

405
00:15:58,000 --> 00:16:01,839
that way

406
00:15:58,720 --> 00:16:01,839
it's not original but

407
00:16:02,079 --> 00:16:07,519
myself so at times

408
00:16:05,759 --> 00:16:09,440
i got sick of writing code and then i

409
00:16:07,519 --> 00:16:12,880
was like oh yeah let's do a

410
00:16:09,440 --> 00:16:16,800
sem platform or the ci so i have

411
00:16:12,880 --> 00:16:19,839
in github i release snapshots

412
00:16:16,800 --> 00:16:23,040
i have asset h to test

413
00:16:19,839 --> 00:16:25,839
i have the the cts which i run

414
00:16:23,040 --> 00:16:26,719
periodically and i have a ci on cloud

415
00:16:25,839 --> 00:16:28,480
build because

416
00:16:26,720 --> 00:16:30,720
i don't really know how to interact with

417
00:16:28,480 --> 00:16:34,399
the whole gitlab ci

418
00:16:30,720 --> 00:16:38,000
perhaps i should look into that but yeah

419
00:16:34,399 --> 00:16:40,639
works pretty great in cloud build

420
00:16:38,000 --> 00:16:41,360
so the timeline is roughly so i started

421
00:16:40,639 --> 00:16:44,959
in

422
00:16:41,360 --> 00:16:49,279
i don't know um probably somewhere

423
00:16:44,959 --> 00:16:51,680
summer then in the

424
00:16:49,279 --> 00:16:52,560
around here i had the vulcan info

425
00:16:51,680 --> 00:16:55,359
running so

426
00:16:52,560 --> 00:16:55,920
the basic infrastructure for reporting

427
00:16:55,360 --> 00:17:00,160
the

428
00:16:55,920 --> 00:17:03,279
features and things i had a first cts

429
00:17:00,160 --> 00:17:06,959
passing in october um uh

430
00:17:03,279 --> 00:17:08,480
somewhere in november i set up my ci a

431
00:17:06,959 --> 00:17:11,520
few days after that i

432
00:17:08,480 --> 00:17:14,319
released just snapshots and that's just

433
00:17:11,520 --> 00:17:15,760
no really sense or not that sensical

434
00:17:14,319 --> 00:17:20,000
let's put it that way

435
00:17:15,760 --> 00:17:23,199
and somewhere in january i had at least

436
00:17:20,000 --> 00:17:26,480
64 cts passing so

437
00:17:23,199 --> 00:17:26,880
that's not great but it's enough uh for

438
00:17:26,480 --> 00:17:30,960
me

439
00:17:26,880 --> 00:17:34,720
that put it that way we also had

440
00:17:30,960 --> 00:17:37,760
to prepare a talk here um i

441
00:17:34,720 --> 00:17:41,200
if you remember i began

442
00:17:37,760 --> 00:17:44,799
working with the nv as a

443
00:17:41,200 --> 00:17:47,840
template i switched to turnip instead

444
00:17:44,799 --> 00:17:50,960
because uh nv has already a lot of

445
00:17:47,840 --> 00:17:54,080
optimizations and uh they are hard to

446
00:17:50,960 --> 00:17:56,799
translate to my hardware so rather

447
00:17:54,080 --> 00:17:58,240
needs or rather use turnip now as my

448
00:17:56,799 --> 00:17:59,679
base

449
00:17:58,240 --> 00:18:01,360
i'm currently i'm trying to figure out

450
00:17:59,679 --> 00:18:03,360
how compute shaders work

451
00:18:01,360 --> 00:18:05,600
whether the infrastructure is already

452
00:18:03,360 --> 00:18:08,799
there or not

453
00:18:05,600 --> 00:18:10,480
and that will keep me busy for some time

454
00:18:08,799 --> 00:18:13,520
i guess

455
00:18:10,480 --> 00:18:16,240
the road map the

456
00:18:13,520 --> 00:18:16,960
one or the other will have read about

457
00:18:16,240 --> 00:18:20,000
igalia

458
00:18:16,960 --> 00:18:21,280
so they are working since i think two

459
00:18:20,000 --> 00:18:23,840
months or more

460
00:18:21,280 --> 00:18:25,360
um on their own variant of the the

461
00:18:23,840 --> 00:18:28,559
vulcan driver

462
00:18:25,360 --> 00:18:31,678
um we already talked together

463
00:18:28,559 --> 00:18:35,039
and we will try to figure out

464
00:18:31,679 --> 00:18:38,320
how other people might

465
00:18:35,039 --> 00:18:40,320
work on their drivers so it might be the

466
00:18:38,320 --> 00:18:43,840
case that i'm throwing all the code away

467
00:18:40,320 --> 00:18:48,000
that i wrote that's possible

468
00:18:43,840 --> 00:18:50,799
if we're really lucky then we might be

469
00:18:48,000 --> 00:18:51,919
interested or able to implement or move

470
00:18:50,799 --> 00:18:56,879
some of the code

471
00:18:51,919 --> 00:18:59,679
to them but nevertheless i hope

472
00:18:56,880 --> 00:19:00,480
the the road forward is still more

473
00:18:59,679 --> 00:19:03,760
coding

474
00:19:00,480 --> 00:19:06,640
getting the the driver uh

475
00:19:03,760 --> 00:19:08,400
into better shape and yeah for me it's

476
00:19:06,640 --> 00:19:11,600
just

477
00:19:08,400 --> 00:19:14,320
test suites uh getting them to run and

478
00:19:11,600 --> 00:19:15,360
at some point hopefully have a driver on

479
00:19:14,320 --> 00:19:17,520
the cts

480
00:19:15,360 --> 00:19:19,039
i would personally be really interested

481
00:19:17,520 --> 00:19:22,000
about having a mapping

482
00:19:19,039 --> 00:19:22,799
between the tests and the api calls so

483
00:19:22,000 --> 00:19:26,080
you could

484
00:19:22,799 --> 00:19:28,080
tell okay all api calls from

485
00:19:26,080 --> 00:19:29,600
i don't know creating pipelines or

486
00:19:28,080 --> 00:19:32,639
anything are done

487
00:19:29,600 --> 00:19:37,039
so that part of the the api is

488
00:19:32,640 --> 00:19:37,039
just should work as intended

489
00:19:37,760 --> 00:19:41,919
so uh yeah and with that i try to

490
00:19:40,559 --> 00:19:45,200
breathe through all of that

491
00:19:41,919 --> 00:19:51,360
um and uh no questions

492
00:19:45,200 --> 00:19:51,360
please sorry

493
00:20:05,200 --> 00:20:12,240
do you have a demo no

494
00:20:08,559 --> 00:20:15,520
no i could what i could do is uh i could

495
00:20:12,240 --> 00:20:17,679
show you if all goes well how the

496
00:20:15,520 --> 00:20:18,720
the cgs runs but that's not really

497
00:20:17,679 --> 00:20:22,480
interesting

498
00:20:18,720 --> 00:20:25,840
i think so uh no on that explicitly

499
00:20:22,480 --> 00:20:28,080
uh a thing that uh

500
00:20:25,840 --> 00:20:29,600
i have a different approach so the

501
00:20:28,080 --> 00:20:31,520
igalia guys

502
00:20:29,600 --> 00:20:32,639
if you have seen the news they have a

503
00:20:31,520 --> 00:20:34,799
triangle rendering

504
00:20:32,640 --> 00:20:36,400
so i don't care about rendering i only

505
00:20:34,799 --> 00:20:38,879
care about testing so

506
00:20:36,400 --> 00:20:40,159
um for me it was like i don't care if i

507
00:20:38,880 --> 00:20:42,720
need five years for that

508
00:20:40,159 --> 00:20:44,080
i don't need or 10 years i just want to

509
00:20:42,720 --> 00:20:46,400
learn about these things

510
00:20:44,080 --> 00:20:47,199
so i'm more about okay i will use the

511
00:20:46,400 --> 00:20:49,760
tests and

512
00:20:47,200 --> 00:20:51,600
try to comply with the tests and try to

513
00:20:49,760 --> 00:20:56,879
figure out what i have to do

514
00:20:51,600 --> 00:20:56,879
to appease the tests or a piece the apis

515
00:21:04,480 --> 00:21:09,280
the infrastructure for computer was

516
00:21:07,360 --> 00:21:11,678
already in place um

517
00:21:09,280 --> 00:21:12,720
i'm looking at the views they have open

518
00:21:11,679 --> 00:21:16,799
here fgl

519
00:21:12,720 --> 00:21:16,799
es 3.1 on the pi 4

520
00:21:19,280 --> 00:21:26,639
yeah i think it should be there um

521
00:21:23,440 --> 00:21:29,679
the the yeah so the question sorry

522
00:21:26,640 --> 00:21:31,919
um was whether the the cts

523
00:21:29,679 --> 00:21:32,720
or my question was whether the compute

524
00:21:31,919 --> 00:21:36,640
shader was

525
00:21:32,720 --> 00:21:38,640
already in place and

526
00:21:36,640 --> 00:21:39,760
the the comment was that it has to be in

527
00:21:38,640 --> 00:21:43,360
place because

528
00:21:39,760 --> 00:21:46,559
uh opengl es 311

529
00:21:43,360 --> 00:21:48,000
needs them anyway um and i think that's

530
00:21:46,559 --> 00:21:49,678
correct

531
00:21:48,000 --> 00:21:51,120
the other way around is that the

532
00:21:49,679 --> 00:21:54,480
documentation is not correct

533
00:21:51,120 --> 00:21:59,840
so probably one of the documentation

534
00:21:54,480 --> 00:21:59,840
problems yeah sure

535
00:22:08,240 --> 00:22:12,320
so the question was how many many

536
00:22:11,280 --> 00:22:15,039
mandates i

537
00:22:12,320 --> 00:22:15,039
have put in it

538
00:22:16,720 --> 00:22:21,120
a completed driver so um then the

539
00:22:20,159 --> 00:22:24,000
question is rather

540
00:22:21,120 --> 00:22:25,360
how long we will we probably take for a

541
00:22:24,000 --> 00:22:28,400
completed driver

542
00:22:25,360 --> 00:22:31,039
and the the news from the the raspberry

543
00:22:28,400 --> 00:22:33,440
foundation was don't hold your breath

544
00:22:31,039 --> 00:22:35,440
and i think that's realistic so there's

545
00:22:33,440 --> 00:22:38,880
pretty good chance

546
00:22:35,440 --> 00:22:38,880
that this might take a year

547
00:22:39,039 --> 00:22:43,200
and i think a year might be realistic

548
00:22:41,520 --> 00:22:45,760
since the degalia guys

549
00:22:43,200 --> 00:22:46,559
uh work full-time with two people on

550
00:22:45,760 --> 00:22:49,360
that

551
00:22:46,559 --> 00:22:50,399
so if we already get a few other people

552
00:22:49,360 --> 00:22:53,760
uh

553
00:22:50,400 --> 00:22:56,240
into that part-time or whatever i think

554
00:22:53,760 --> 00:22:57,360
a year might be realistic not

555
00:22:56,240 --> 00:23:00,640
full-fledged

556
00:22:57,360 --> 00:23:03,678
feature com but i think

557
00:23:00,640 --> 00:23:05,840
workable perhaps uh i don't know uh

558
00:23:03,679 --> 00:23:09,840
open arena let's say open arena should

559
00:23:05,840 --> 00:23:09,840
be doable in a year

560
00:23:10,799 --> 00:23:13,840
yeah is there any way that this work

561
00:23:12,559 --> 00:23:16,879
might be

562
00:23:13,840 --> 00:23:19,918
of some benefit to the older

563
00:23:16,880 --> 00:23:22,480
raspberry pi versions oh

564
00:23:19,919 --> 00:23:23,280
so the question was whether that work is

565
00:23:22,480 --> 00:23:26,400
uh

566
00:23:23,280 --> 00:23:29,760
any good for any older versions

567
00:23:26,400 --> 00:23:33,200
and the answer is

568
00:23:29,760 --> 00:23:36,640
maybe so there's currently

569
00:23:33,200 --> 00:23:39,440
a lot of handling in the gallium v3d

570
00:23:36,640 --> 00:23:40,080
and at least in my code i threw all that

571
00:23:39,440 --> 00:23:42,559
out

572
00:23:40,080 --> 00:23:44,080
so if you would integrate simpler

573
00:23:42,559 --> 00:23:47,760
handling in the vulcan

574
00:23:44,080 --> 00:23:51,279
it might be actually the other thing is

575
00:23:47,760 --> 00:23:53,919
i think there's hardware wise one or two

576
00:23:51,279 --> 00:23:54,880
things that are not sufficient for the

577
00:23:53,919 --> 00:23:58,559
the

578
00:23:54,880 --> 00:24:01,039
raspberry 3 so it might

579
00:23:58,559 --> 00:24:01,678
not be totally there but perhaps enough

580
00:24:01,039 --> 00:24:04,400
fish

581
00:24:01,679 --> 00:24:05,039
i don't know on the other hand there's

582
00:24:04,400 --> 00:24:08,159
this

583
00:24:05,039 --> 00:24:11,360
rpi vk driver

584
00:24:08,159 --> 00:24:15,279
which is not based on measure

585
00:24:11,360 --> 00:24:17,678
and i think may it may be

586
00:24:15,279 --> 00:24:19,360
doable if you get that person for

587
00:24:17,679 --> 00:24:22,240
example interested in

588
00:24:19,360 --> 00:24:24,879
doing that then there may be some

589
00:24:22,240 --> 00:24:24,880
progress here

590
00:24:26,799 --> 00:24:33,840
anyone else

591
00:24:34,000 --> 00:24:38,320
uh so if i understand correctly or

592
00:24:36,320 --> 00:24:40,080
whether i develop with a raspberry pi or

593
00:24:38,320 --> 00:24:43,120
whether you come here

594
00:24:40,080 --> 00:24:45,120
oh no oh yeah uh sorry okay the question

595
00:24:43,120 --> 00:24:46,959
uh really was whether i commute with a

596
00:24:45,120 --> 00:24:47,439
raspberry pi and i have thought about

597
00:24:46,960 --> 00:24:51,520
that

598
00:24:47,440 --> 00:24:54,640
um but no uh i that was in a sly here

599
00:24:51,520 --> 00:24:57,600
uh i have ssh access through my firewall

600
00:24:54,640 --> 00:24:58,720
and i execute that remotely on my

601
00:24:57,600 --> 00:25:14,959
raspberry so

602
00:24:58,720 --> 00:25:17,039
uh yeah it works up so thanks

603
00:25:14,960 --> 00:25:17,039
you

