1
00:00:05,440 --> 00:00:08,080
all right

2
00:00:06,080 --> 00:00:09,200
um thanks for sticking around till the

3
00:00:08,080 --> 00:00:11,360
end of the day

4
00:00:09,200 --> 00:00:12,320
uh my name is karthik can you hear me in

5
00:00:11,360 --> 00:00:15,440
the back

6
00:00:12,320 --> 00:00:17,198
yes so i'm with the berkeley institute

7
00:00:15,440 --> 00:00:18,720
for data science

8
00:00:17,199 --> 00:00:20,800
and i'm also involved with a lot of

9
00:00:18,720 --> 00:00:22,640
different open source projects i lead

10
00:00:20,800 --> 00:00:23,840
a large open source project called

11
00:00:22,640 --> 00:00:25,039
ropinsci

12
00:00:23,840 --> 00:00:26,960
but the thing i want to talk to you

13
00:00:25,039 --> 00:00:30,000
today is how to get

14
00:00:26,960 --> 00:00:31,359
credit for any research software that

15
00:00:30,000 --> 00:00:33,440
you might develop

16
00:00:31,359 --> 00:00:34,800
so this is my first time at fostem i

17
00:00:33,440 --> 00:00:36,000
actually thought this was a pretty small

18
00:00:34,800 --> 00:00:38,718
conference and that i would have to

19
00:00:36,000 --> 00:00:40,320
convince you that software is important

20
00:00:38,719 --> 00:00:42,480
i don't really have to do that but i'm

21
00:00:40,320 --> 00:00:44,000
going to do it anyway

22
00:00:42,480 --> 00:00:45,839
so the thing that's always striking to

23
00:00:44,000 --> 00:00:48,879
me as an academic

24
00:00:45,840 --> 00:00:54,079
uh is that software is so prevalent

25
00:00:48,879 --> 00:00:56,399
in every academic endeavor it's not just

26
00:00:54,079 --> 00:00:59,199
heavily computational fields like

27
00:00:56,399 --> 00:01:01,680
astrophysics or bioinformatics but

28
00:00:59,199 --> 00:01:03,280
even um many of the humanities that you

29
00:01:01,680 --> 00:01:06,400
think are not computational

30
00:01:03,280 --> 00:01:08,479
are computational these days and um

31
00:01:06,400 --> 00:01:09,520
it's hard for me to to actually capture

32
00:01:08,479 --> 00:01:13,280
this better than

33
00:01:09,520 --> 00:01:17,520
say um gail varaku who is the

34
00:01:13,280 --> 00:01:20,720
lead for scikit-learn is that

35
00:01:17,520 --> 00:01:22,720
software helps us make predictions from

36
00:01:20,720 --> 00:01:25,759
models it helps us run experiments

37
00:01:22,720 --> 00:01:26,000
it helps us derive insight from data and

38
00:01:25,759 --> 00:01:28,720
this

39
00:01:26,000 --> 00:01:30,000
is just universally true in in in a lot

40
00:01:28,720 --> 00:01:33,280
of different fields

41
00:01:30,000 --> 00:01:35,040
and this is not just anecdotal

42
00:01:33,280 --> 00:01:37,439
so i have some colleagues that have done

43
00:01:35,040 --> 00:01:40,799
surveys in the uk and the us

44
00:01:37,439 --> 00:01:42,798
to try and find out how much

45
00:01:40,799 --> 00:01:44,399
research software people use and this is

46
00:01:42,799 --> 00:01:46,560
not just

47
00:01:44,399 --> 00:01:47,759
things like microsoft excel or microsoft

48
00:01:46,560 --> 00:01:50,159
word but

49
00:01:47,759 --> 00:01:51,920
software design for research and it

50
00:01:50,159 --> 00:01:54,320
turns out that

51
00:01:51,920 --> 00:01:56,399
more than 90 percent of people rely on

52
00:01:54,320 --> 00:01:58,719
on these types of software

53
00:01:56,399 --> 00:02:00,000
and when asked what what happened to

54
00:01:58,719 --> 00:02:01,280
their research if the software

55
00:02:00,000 --> 00:02:03,600
disappeared

56
00:02:01,280 --> 00:02:05,360
more than 63 of them said they just have

57
00:02:03,600 --> 00:02:07,759
to stop doing what they're doing

58
00:02:05,360 --> 00:02:08,479
so research software is really quite

59
00:02:07,759 --> 00:02:11,680
critical

60
00:02:08,479 --> 00:02:14,879
for a lot of different fields and

61
00:02:11,680 --> 00:02:17,520
more and more i am seeing academics

62
00:02:14,879 --> 00:02:20,000
spend a lot of time taking their code

63
00:02:17,520 --> 00:02:21,599
and packaging that into software

64
00:02:20,000 --> 00:02:23,040
you see everyone pulling together a

65
00:02:21,599 --> 00:02:24,319
package these days and it's really

66
00:02:23,040 --> 00:02:27,359
interesting that

67
00:02:24,319 --> 00:02:29,519
uh currently the skills that

68
00:02:27,360 --> 00:02:31,519
that we require to thrive in academia

69
00:02:29,520 --> 00:02:35,200
are not actually all that different from

70
00:02:31,519 --> 00:02:36,480
being in industry and funnily enough

71
00:02:35,200 --> 00:02:38,560
the person that said this jake

72
00:02:36,480 --> 00:02:41,040
vanderplus friend of mine was an

73
00:02:38,560 --> 00:02:43,280
academic and now works at google

74
00:02:41,040 --> 00:02:44,799
but luckily he's still just doing

75
00:02:43,280 --> 00:02:45,280
whatever open source he used to do

76
00:02:44,800 --> 00:02:46,800
before

77
00:02:45,280 --> 00:02:50,160
he's just getting paid paid a lot more

78
00:02:46,800 --> 00:02:53,200
money to do it um but

79
00:02:50,160 --> 00:02:54,959
the challenge with uh doing software in

80
00:02:53,200 --> 00:02:57,839
academia is that it's not

81
00:02:54,959 --> 00:02:59,680
considered research and it's very hard

82
00:02:57,840 --> 00:03:03,120
to get credit for

83
00:02:59,680 --> 00:03:05,519
academic software work and

84
00:03:03,120 --> 00:03:07,280
there's a reason why we really don't

85
00:03:05,519 --> 00:03:08,879
know how to

86
00:03:07,280 --> 00:03:10,400
give credit to software which is the

87
00:03:08,879 --> 00:03:12,159
biggest problem

88
00:03:10,400 --> 00:03:14,000
uh very simple things like we really

89
00:03:12,159 --> 00:03:15,519
don't even know how to cite software

90
00:03:14,000 --> 00:03:17,360
so it's kind of all over the place

91
00:03:15,519 --> 00:03:18,879
sometimes people cite a paper

92
00:03:17,360 --> 00:03:21,519
sometimes people cite the entire

93
00:03:18,879 --> 00:03:24,720
language to reference a single

94
00:03:21,519 --> 00:03:27,200
package and this is not just

95
00:03:24,720 --> 00:03:29,120
true of tiny journals even big journals

96
00:03:27,200 --> 00:03:30,958
like nature and science

97
00:03:29,120 --> 00:03:32,560
people just casually mention software

98
00:03:30,959 --> 00:03:34,159
they don't quite cite it

99
00:03:32,560 --> 00:03:36,159
which means that you will never be able

100
00:03:34,159 --> 00:03:37,840
to track down the actual version that

101
00:03:36,159 --> 00:03:39,280
anybody used if you're ever trying to

102
00:03:37,840 --> 00:03:42,239
think about

103
00:03:39,280 --> 00:03:42,239
reproducibility

104
00:03:42,560 --> 00:03:45,599
and then there's a big consequence to

105
00:03:44,000 --> 00:03:47,200
all of this if we are not going to get

106
00:03:45,599 --> 00:03:49,040
credit for our software we're not going

107
00:03:47,200 --> 00:03:51,280
to do a very good job of it

108
00:03:49,040 --> 00:03:53,599
it's not going to be sustainable it's

109
00:03:51,280 --> 00:03:56,959
not going to be collaborative

110
00:03:53,599 --> 00:03:58,798
and that sucks for everybody so we need

111
00:03:56,959 --> 00:04:00,480
to really find a way to make

112
00:03:58,799 --> 00:04:02,319
software scholarship and give people

113
00:04:00,480 --> 00:04:04,959
credit for that and

114
00:04:02,319 --> 00:04:05,760
that's what my talk is all about and a

115
00:04:04,959 --> 00:04:07,599
handful of us

116
00:04:05,760 --> 00:04:08,959
decided we need to do something about

117
00:04:07,599 --> 00:04:11,760
this

118
00:04:08,959 --> 00:04:12,640
and so when you think about software and

119
00:04:11,760 --> 00:04:14,560
citation

120
00:04:12,640 --> 00:04:16,560
it's just a mess of different types of

121
00:04:14,560 --> 00:04:17,600
challenges

122
00:04:16,560 --> 00:04:19,680
there are very few things that are

123
00:04:17,600 --> 00:04:21,280
technical it's mostly cultural we're not

124
00:04:19,680 --> 00:04:23,120
quite ready to do this

125
00:04:21,279 --> 00:04:25,039
but for example there's not an easy way

126
00:04:23,120 --> 00:04:25,440
to cite software because we haven't

127
00:04:25,040 --> 00:04:28,720
quite

128
00:04:25,440 --> 00:04:30,719
agreed upon writing papers about

129
00:04:28,720 --> 00:04:33,120
software or directly citing the software

130
00:04:30,720 --> 00:04:33,120
itself

131
00:04:33,360 --> 00:04:38,080
software citations not being allowed is

132
00:04:35,680 --> 00:04:40,960
a weird cultural thing

133
00:04:38,080 --> 00:04:42,080
it's not usually indexed by the bean

134
00:04:40,960 --> 00:04:43,440
counters

135
00:04:42,080 --> 00:04:45,120
and until recently people didn't

136
00:04:43,440 --> 00:04:46,639
actually peer review software

137
00:04:45,120 --> 00:04:48,880
and that's something that i've been

138
00:04:46,639 --> 00:04:49,759
involved in for for a handful of years

139
00:04:48,880 --> 00:04:50,719
now

140
00:04:49,759 --> 00:04:53,040
and even though software has

141
00:04:50,720 --> 00:04:54,080
dependencies we don't actually have a

142
00:04:53,040 --> 00:04:56,800
clear way of saying

143
00:04:54,080 --> 00:04:57,919
what software is connected to what other

144
00:04:56,800 --> 00:04:59,840
software

145
00:04:57,919 --> 00:05:02,000
and so just a quick reminder about why

146
00:04:59,840 --> 00:05:03,758
we cite things

147
00:05:02,000 --> 00:05:05,280
we're trying to give credit we are

148
00:05:03,759 --> 00:05:06,639
trying to

149
00:05:05,280 --> 00:05:08,799
make it clear to everyone that we've

150
00:05:06,639 --> 00:05:10,800
done our homework make sure that we're

151
00:05:08,800 --> 00:05:12,720
not stealing from other people

152
00:05:10,800 --> 00:05:14,320
but at least with software the biggest

153
00:05:12,720 --> 00:05:14,960
thing that we're trying to do is to make

154
00:05:14,320 --> 00:05:17,599
sure that

155
00:05:14,960 --> 00:05:20,080
we give proper credit to someone who's

156
00:05:17,600 --> 00:05:22,840
building that software

157
00:05:20,080 --> 00:05:24,080
and so how do we go about recognizing

158
00:05:22,840 --> 00:05:25,919
software

159
00:05:24,080 --> 00:05:27,599
for academics so there's two possible

160
00:05:25,919 --> 00:05:30,159
ways one is

161
00:05:27,600 --> 00:05:31,520
we could try to do things in ways that

162
00:05:30,160 --> 00:05:34,400
academics are already

163
00:05:31,520 --> 00:05:36,159
quite familiar with we do research we

164
00:05:34,400 --> 00:05:38,080
write papers we get the papers published

165
00:05:36,160 --> 00:05:40,720
in the best journal possible

166
00:05:38,080 --> 00:05:43,198
people cite our papers eventually the

167
00:05:40,720 --> 00:05:46,240
citations add up we get credit

168
00:05:43,199 --> 00:05:47,600
or we could try and uh think think of

169
00:05:46,240 --> 00:05:49,919
something new and interesting instead of

170
00:05:47,600 --> 00:05:52,800
doing the same old boring nonsense

171
00:05:49,919 --> 00:05:54,159
so because software has dependencies

172
00:05:52,800 --> 00:05:56,160
there's more interesting things that you

173
00:05:54,160 --> 00:05:59,759
can do and just go beyond that

174
00:05:56,160 --> 00:06:02,960
very simple one-dimensional credit model

175
00:05:59,759 --> 00:06:04,639
so if you imagine this hypothetical

176
00:06:02,960 --> 00:06:07,680
example of

177
00:06:04,639 --> 00:06:09,680
arvon smith who wrote a paper

178
00:06:07,680 --> 00:06:11,440
and then he references a couple of his

179
00:06:09,680 --> 00:06:13,039
old papers because he's building upon

180
00:06:11,440 --> 00:06:14,960
previous work

181
00:06:13,039 --> 00:06:17,680
he references a couple of large data

182
00:06:14,960 --> 00:06:19,599
sets and then he references

183
00:06:17,680 --> 00:06:21,039
two critical pieces of software that he

184
00:06:19,600 --> 00:06:22,319
used in this case astropy and

185
00:06:21,039 --> 00:06:24,400
scikit-learn

186
00:06:22,319 --> 00:06:25,440
but because of dependency trees we can

187
00:06:24,400 --> 00:06:28,479
tell that

188
00:06:25,440 --> 00:06:29,680
these two depend upon numpy and scipy

189
00:06:28,479 --> 00:06:32,000
so there should be a way to

190
00:06:29,680 --> 00:06:33,680
automatically assign credit to software

191
00:06:32,000 --> 00:06:35,440
without having to cite every single

192
00:06:33,680 --> 00:06:39,520
piece of software

193
00:06:35,440 --> 00:06:41,840
but we're not very good at agreeing upon

194
00:06:39,520 --> 00:06:43,840
uh any particular standards and trying

195
00:06:41,840 --> 00:06:45,280
to get a large group of people to agree

196
00:06:43,840 --> 00:06:47,840
to a big piece of change

197
00:06:45,280 --> 00:06:49,919
is very very hard so we'd have to get

198
00:06:47,840 --> 00:06:52,560
buying from individual authors

199
00:06:49,919 --> 00:06:54,960
editors then move on to whole

200
00:06:52,560 --> 00:06:56,880
communities and societies and then

201
00:06:54,960 --> 00:06:59,440
get the journals on board and that's

202
00:06:56,880 --> 00:07:02,880
really not going to happen

203
00:06:59,440 --> 00:07:05,039
and so the the alternate option is just

204
00:07:02,880 --> 00:07:07,199
writing papers about software which is

205
00:07:05,039 --> 00:07:08,719
pretty easy to do and it's not a bad

206
00:07:07,199 --> 00:07:12,319
thing because

207
00:07:08,720 --> 00:07:14,000
um a paper can can be something that you

208
00:07:12,319 --> 00:07:15,599
can just easily cite

209
00:07:14,000 --> 00:07:17,039
we don't really have to create any new

210
00:07:15,599 --> 00:07:18,880
infrastructure

211
00:07:17,039 --> 00:07:20,960
and then if you are writing software

212
00:07:18,880 --> 00:07:22,479
that is important to your community

213
00:07:20,960 --> 00:07:24,479
the best way to bring this to the

214
00:07:22,479 --> 00:07:26,639
attention of people in your community

215
00:07:24,479 --> 00:07:29,360
is just to publish it in a journal

216
00:07:26,639 --> 00:07:29,360
people read it

217
00:07:29,520 --> 00:07:33,680
there's a challenge though trying to get

218
00:07:31,919 --> 00:07:34,799
a software paper into an existing

219
00:07:33,680 --> 00:07:36,960
journal

220
00:07:34,800 --> 00:07:38,960
which is that if you've already done a

221
00:07:36,960 --> 00:07:41,599
full research paper

222
00:07:38,960 --> 00:07:43,840
writing an another software paper is

223
00:07:41,599 --> 00:07:45,680
really painful

224
00:07:43,840 --> 00:07:47,198
going to copy all of the documentation

225
00:07:45,680 --> 00:07:49,199
that you've already extensively written

226
00:07:47,199 --> 00:07:51,520
as part of your software

227
00:07:49,199 --> 00:07:53,039
into a paper most journals don't publish

228
00:07:51,520 --> 00:07:54,639
software papers

229
00:07:53,039 --> 00:07:56,800
and for those of you that contribute to

230
00:07:54,639 --> 00:07:58,160
open source if you join a project that

231
00:07:56,800 --> 00:07:59,840
already exists

232
00:07:58,160 --> 00:08:00,960
it's very likely you'll never get credit

233
00:07:59,840 --> 00:08:02,878
for that work because they already

234
00:08:00,960 --> 00:08:03,599
published one canonical paper for that

235
00:08:02,879 --> 00:08:05,199
work

236
00:08:03,599 --> 00:08:06,800
this is a common problem for people that

237
00:08:05,199 --> 00:08:09,120
join the jupiter team

238
00:08:06,800 --> 00:08:11,759
uh everyone cites something that's quite

239
00:08:09,120 --> 00:08:14,560
old at this point

240
00:08:11,759 --> 00:08:16,400
um we've come to realize that trying to

241
00:08:14,560 --> 00:08:19,599
change the system is really hard

242
00:08:16,400 --> 00:08:20,799
and so we are going to have to stick

243
00:08:19,599 --> 00:08:24,960
with what exists

244
00:08:20,800 --> 00:08:26,960
and just hack something around that so

245
00:08:24,960 --> 00:08:28,638
my colleague arfan smith who founded the

246
00:08:26,960 --> 00:08:30,479
journal of open source software

247
00:08:28,639 --> 00:08:31,919
um several of us started talking a few

248
00:08:30,479 --> 00:08:34,640
years ago and said

249
00:08:31,919 --> 00:08:36,079
can we create a new type of journal that

250
00:08:34,640 --> 00:08:38,640
makes it easy to publish

251
00:08:36,080 --> 00:08:40,240
papers about software without making it

252
00:08:38,640 --> 00:08:42,640
very difficult

253
00:08:40,240 --> 00:08:43,680
and so we created joss journal of open

254
00:08:42,640 --> 00:08:46,959
source software

255
00:08:43,679 --> 00:08:49,359
it is entirely free open access

256
00:08:46,959 --> 00:08:50,079
it costs nothing to publish and we

257
00:08:49,360 --> 00:08:53,440
created

258
00:08:50,080 --> 00:08:55,600
a new system that

259
00:08:53,440 --> 00:08:56,560
is very developer friendly and by

260
00:08:55,600 --> 00:08:59,440
developer friendly

261
00:08:56,560 --> 00:09:01,199
i mean that if you would like to get a

262
00:08:59,440 --> 00:09:02,959
publication for your software

263
00:09:01,200 --> 00:09:04,080
assuming you have followed all the best

264
00:09:02,959 --> 00:09:05,359
practices you've written good

265
00:09:04,080 --> 00:09:07,360
documentation you have

266
00:09:05,360 --> 00:09:08,720
tests you have clear installation

267
00:09:07,360 --> 00:09:10,720
instructions

268
00:09:08,720 --> 00:09:12,000
uh you've designed a usable piece of

269
00:09:10,720 --> 00:09:15,120
software

270
00:09:12,000 --> 00:09:17,440
um you've got a good open source license

271
00:09:15,120 --> 00:09:18,320
then we we we expect that it should take

272
00:09:17,440 --> 00:09:21,839
you no more than

273
00:09:18,320 --> 00:09:23,920
an hour to write a paper

274
00:09:21,839 --> 00:09:25,040
and the joss paper is actually fairly

275
00:09:23,920 --> 00:09:27,920
simple it's

276
00:09:25,040 --> 00:09:29,760
often no more than two pages long it's a

277
00:09:27,920 --> 00:09:31,519
very very high level description of what

278
00:09:29,760 --> 00:09:33,279
your software does

279
00:09:31,519 --> 00:09:34,880
to someone who's not an expert in your

280
00:09:33,279 --> 00:09:36,560
field

281
00:09:34,880 --> 00:09:38,000
we're really looking for you to cite who

282
00:09:36,560 --> 00:09:40,399
funded you

283
00:09:38,000 --> 00:09:42,560
major references that influenced you and

284
00:09:40,399 --> 00:09:45,760
we really do not want you to put any

285
00:09:42,560 --> 00:09:49,119
results in this paper it's just a simple

286
00:09:45,760 --> 00:09:52,000
citable object for your paper

287
00:09:49,120 --> 00:09:53,120
and um we tried to be as conventional as

288
00:09:52,000 --> 00:09:54,959
possible

289
00:09:53,120 --> 00:09:56,880
in the scholarly space so we didn't

290
00:09:54,959 --> 00:09:59,680
throw anybody off

291
00:09:56,880 --> 00:10:00,560
and um this is what the the form looks

292
00:09:59,680 --> 00:10:02,560
like

293
00:10:00,560 --> 00:10:05,199
uh has anyone submitted a paper using

294
00:10:02,560 --> 00:10:07,040
manuscript central

295
00:10:05,200 --> 00:10:10,000
a handful of you you know how painful

296
00:10:07,040 --> 00:10:12,800
that is here all we need is your name

297
00:10:10,000 --> 00:10:14,160
uh your version control repository and

298
00:10:12,800 --> 00:10:16,079
if you have an editor in mind

299
00:10:14,160 --> 00:10:17,600
that's really it you can even skip the

300
00:10:16,079 --> 00:10:19,680
title and the description because we

301
00:10:17,600 --> 00:10:22,720
already have that as part of your

302
00:10:19,680 --> 00:10:24,880
paper which you write in markdown and

303
00:10:22,720 --> 00:10:28,480
then put it in the same repository as

304
00:10:24,880 --> 00:10:32,880
as your project and um the thing that we

305
00:10:28,480 --> 00:10:36,959
built um is uh is a robot

306
00:10:32,880 --> 00:10:40,800
which is basically uh a ruby bot

307
00:10:36,959 --> 00:10:42,239
that uh runs on heroku and listens for

308
00:10:40,800 --> 00:10:46,319
every single

309
00:10:42,240 --> 00:10:48,079
uh activity on a github issue and

310
00:10:46,320 --> 00:10:51,360
this bot which is the one in the middle

311
00:10:48,079 --> 00:10:54,000
can talk to github and it can talk to

312
00:10:51,360 --> 00:10:55,839
a bunch of different services we named

313
00:10:54,000 --> 00:10:57,279
it whedon because the journal of open

314
00:10:55,839 --> 00:11:01,040
source software is josh

315
00:10:57,279 --> 00:11:03,920
joss whedon for sci-fi fans

316
00:11:01,040 --> 00:11:05,279
and uh as soon as a paper goes into the

317
00:11:03,920 --> 00:11:07,199
review queue

318
00:11:05,279 --> 00:11:08,640
whedon steps in and says hello i'm a bot

319
00:11:07,200 --> 00:11:09,920
i'm here to help you

320
00:11:08,640 --> 00:11:11,680
uh if you'd like to know all the

321
00:11:09,920 --> 00:11:15,519
commands that i can do just

322
00:11:11,680 --> 00:11:16,399
type in whedon commands and whedon will

323
00:11:15,519 --> 00:11:18,640
tell you

324
00:11:16,399 --> 00:11:20,480
everything it can do it immediately

325
00:11:18,640 --> 00:11:22,560
starts to identify what language it is

326
00:11:20,480 --> 00:11:24,240
and starts to tag

327
00:11:22,560 --> 00:11:25,680
the language of that particular

328
00:11:24,240 --> 00:11:28,560
submission

329
00:11:25,680 --> 00:11:30,160
and then whedon is really nice because

330
00:11:28,560 --> 00:11:31,199
it gives different powers to different

331
00:11:30,160 --> 00:11:34,079
people

332
00:11:31,200 --> 00:11:36,240
so if you're an editor you can assign

333
00:11:34,079 --> 00:11:38,479
reviewers i can just say

334
00:11:36,240 --> 00:11:40,480
assign matajos to be a reviewer and then

335
00:11:38,480 --> 00:11:42,959
it'll assign him as a reviewer

336
00:11:40,480 --> 00:11:44,800
i can if i'm an associate editor i can

337
00:11:42,959 --> 00:11:46,479
assign someone else as an editor

338
00:11:44,800 --> 00:11:49,199
and i can also just start a review it

339
00:11:46,480 --> 00:11:51,839
just creates a giant checklist

340
00:11:49,200 --> 00:11:53,519
for the reviewer to work through it also

341
00:11:51,839 --> 00:11:54,560
gives powers to the authors and the

342
00:11:53,519 --> 00:11:56,639
reviewers

343
00:11:54,560 --> 00:11:58,319
so at any point in time they can say we

344
00:11:56,639 --> 00:11:59,760
didn't generate a pdf

345
00:11:58,320 --> 00:12:01,120
so it goes through the markdown goes

346
00:11:59,760 --> 00:12:03,040
through the references generates a

347
00:12:01,120 --> 00:12:04,079
beautiful pdf you can look at it if the

348
00:12:03,040 --> 00:12:06,480
formatting is bad

349
00:12:04,079 --> 00:12:07,599
keep adding more commits generate

350
00:12:06,480 --> 00:12:09,120
another pdf

351
00:12:07,600 --> 00:12:10,880
it will check references it will go

352
00:12:09,120 --> 00:12:12,720
across all the doi's and let you know

353
00:12:10,880 --> 00:12:15,360
when something is broken

354
00:12:12,720 --> 00:12:16,959
and then if you've got superpowers as an

355
00:12:15,360 --> 00:12:20,000
associate editor

356
00:12:16,959 --> 00:12:21,439
you can say we didn't accept this paper

357
00:12:20,000 --> 00:12:24,320
and then it will go deposit all the

358
00:12:21,440 --> 00:12:26,560
metadata archive the paper

359
00:12:24,320 --> 00:12:29,920
and and right before that you also

360
00:12:26,560 --> 00:12:29,920
archive the software itself

361
00:12:30,399 --> 00:12:34,959
and in the end we create a pdf that

362
00:12:33,040 --> 00:12:36,000
looks like a standard pdf to most

363
00:12:34,959 --> 00:12:37,119
academics

364
00:12:36,000 --> 00:12:39,120
which is good because you don't want to

365
00:12:37,120 --> 00:12:41,200
confuse them by showing them a software

366
00:12:39,120 --> 00:12:42,639
paper so this is a

367
00:12:41,200 --> 00:12:44,399
paper that was recently published about

368
00:12:42,639 --> 00:12:46,000
the tidy verse and

369
00:12:44,399 --> 00:12:48,399
when you go to the joss page you can see

370
00:12:46,000 --> 00:12:51,440
that you can see the review

371
00:12:48,399 --> 00:12:54,959
you can download a pdf um

372
00:12:51,440 --> 00:12:58,560
and um yeah and you can see all the

373
00:12:54,959 --> 00:13:00,560
the orchids for all the authors so um

374
00:12:58,560 --> 00:13:02,560
we've been running the journal for more

375
00:13:00,560 --> 00:13:04,959
than three years now

376
00:13:02,560 --> 00:13:06,399
we wrote a paper right off the right

377
00:13:04,959 --> 00:13:08,399
after the first year describing how the

378
00:13:06,399 --> 00:13:09,920
journal works

379
00:13:08,399 --> 00:13:11,920
some of these statistics are outdated

380
00:13:09,920 --> 00:13:13,839
but the trends also hold

381
00:13:11,920 --> 00:13:15,680
we tend to get a lot of submissions that

382
00:13:13,839 --> 00:13:16,880
are that are python packages and our

383
00:13:15,680 --> 00:13:19,040
packages and

384
00:13:16,880 --> 00:13:20,720
most of our submissions come from the

385
00:13:19,040 --> 00:13:21,439
from the u.s or the uk we're getting

386
00:13:20,720 --> 00:13:25,040
more

387
00:13:21,440 --> 00:13:28,160
submissions now and uh we're growing

388
00:13:25,040 --> 00:13:31,360
quite a bit we've published um

389
00:13:28,160 --> 00:13:33,680
almost 700 papers we published 30-ish

390
00:13:31,360 --> 00:13:35,360
papers a month

391
00:13:33,680 --> 00:13:37,199
we've got a lot of editors and we're

392
00:13:35,360 --> 00:13:40,560
constantly growing

393
00:13:37,200 --> 00:13:42,320
and in many ways even though we created

394
00:13:40,560 --> 00:13:44,160
a journal

395
00:13:42,320 --> 00:13:45,519
we really just created another open

396
00:13:44,160 --> 00:13:47,360
source project

397
00:13:45,519 --> 00:13:48,880
so you imagine an open source project

398
00:13:47,360 --> 00:13:51,040
you get users who get

399
00:13:48,880 --> 00:13:52,800
very excited and at some point they

400
00:13:51,040 --> 00:13:54,639
start contributing and then they they

401
00:13:52,800 --> 00:13:56,079
end up becoming maintainers so you can

402
00:13:54,639 --> 00:13:58,800
then step away and

403
00:13:56,079 --> 00:13:59,839
hand this off to someone else it works

404
00:13:58,800 --> 00:14:03,120
similarly for us

405
00:13:59,839 --> 00:14:05,519
too we get people that submit to us

406
00:14:03,120 --> 00:14:06,160
and because our reviews are 100

407
00:14:05,519 --> 00:14:08,639
completely

408
00:14:06,160 --> 00:14:10,160
open in public they get to see how the

409
00:14:08,639 --> 00:14:11,680
whole process works

410
00:14:10,160 --> 00:14:13,839
they want to come back and they want to

411
00:14:11,680 --> 00:14:15,439
review and then at some point if someone

412
00:14:13,839 --> 00:14:18,639
reviews too much for us

413
00:14:15,440 --> 00:14:18,639
we just make them an editor

414
00:14:19,760 --> 00:14:24,480
lastly i want to give you a few insights

415
00:14:22,079 --> 00:14:26,959
that we've learned

416
00:14:24,480 --> 00:14:28,480
running josh over all these years so one

417
00:14:26,959 --> 00:14:30,880
of the things that we've done is we've

418
00:14:28,480 --> 00:14:33,120
tried to make jaws even though it's

419
00:14:30,880 --> 00:14:35,920
experimental and interesting

420
00:14:33,120 --> 00:14:37,040
seem very much part of the scholarly

421
00:14:35,920 --> 00:14:39,519
infrastructure

422
00:14:37,040 --> 00:14:41,279
so we don't have our own login system we

423
00:14:39,519 --> 00:14:44,160
use orchids

424
00:14:41,279 --> 00:14:45,439
which are researcher identifiers as soon

425
00:14:44,160 --> 00:14:48,000
as we accept your paper

426
00:14:45,440 --> 00:14:49,279
we archive it all the metadata with

427
00:14:48,000 --> 00:14:52,320
crossref

428
00:14:49,279 --> 00:14:55,760
we archive the paper and the reviews

429
00:14:52,320 --> 00:14:58,000
with portico and then

430
00:14:55,760 --> 00:14:59,199
just about a couple of months ago jos

431
00:14:58,000 --> 00:15:01,040
paper started getting

432
00:14:59,199 --> 00:15:04,079
indexed by google's caller we're still

433
00:15:01,040 --> 00:15:07,279
trying to work with scopus

434
00:15:04,079 --> 00:15:09,920
we love best practices so

435
00:15:07,279 --> 00:15:10,959
all papers are open access all the

436
00:15:09,920 --> 00:15:12,560
authors have

437
00:15:10,959 --> 00:15:14,959
complete copyright control over

438
00:15:12,560 --> 00:15:19,518
everything

439
00:15:14,959 --> 00:15:19,518
our governance strategy is fully open

440
00:15:19,680 --> 00:15:23,599
our business model is that we don't have

441
00:15:21,279 --> 00:15:26,240
a business model it costs us

442
00:15:23,600 --> 00:15:26,800
very little to publish any paper and

443
00:15:26,240 --> 00:15:28,720
then

444
00:15:26,800 --> 00:15:30,319
even though we're doing all of this

445
00:15:28,720 --> 00:15:32,160
we're doing a pretty thorough job

446
00:15:30,320 --> 00:15:34,560
reviewing your software

447
00:15:32,160 --> 00:15:36,240
so we're giving you a citation for a

448
00:15:34,560 --> 00:15:38,399
very short paper

449
00:15:36,240 --> 00:15:40,000
but along the way we're checking to make

450
00:15:38,399 --> 00:15:42,480
sure you have a good license

451
00:15:40,000 --> 00:15:44,560
your software functions is intended if

452
00:15:42,480 --> 00:15:47,199
you claim any performance

453
00:15:44,560 --> 00:15:48,880
improvements somebody will go test that

454
00:15:47,199 --> 00:15:50,959
and then we go through a pretty big

455
00:15:48,880 --> 00:15:54,560
checklist

456
00:15:50,959 --> 00:15:56,800
the process is quite fun for authors

457
00:15:54,560 --> 00:15:57,758
so we just heard a talk about how e-life

458
00:15:56,800 --> 00:16:01,040
is trying to

459
00:15:57,759 --> 00:16:03,440
make things open and transparent

460
00:16:01,040 --> 00:16:05,599
joss doesn't really reject papers our

461
00:16:03,440 --> 00:16:08,800
goal is not to reject paper so we can

462
00:16:05,600 --> 00:16:11,199
inflate our uh

463
00:16:08,800 --> 00:16:13,439
i forget what we're trying to inflate

464
00:16:11,199 --> 00:16:16,319
our acceptance rate

465
00:16:13,440 --> 00:16:18,320
so we we always do a desk reject if the

466
00:16:16,320 --> 00:16:19,839
software is not fully completed or not

467
00:16:18,320 --> 00:16:20,959
appropriate or it's not a research

468
00:16:19,839 --> 00:16:23,440
software

469
00:16:20,959 --> 00:16:25,119
but once you get past that point we want

470
00:16:23,440 --> 00:16:28,079
to help you succeed

471
00:16:25,120 --> 00:16:29,519
and the and the goal post is very clear

472
00:16:28,079 --> 00:16:30,880
so if i'm telling you

473
00:16:29,519 --> 00:16:33,120
there's not enough tests in your

474
00:16:30,880 --> 00:16:33,920
software you know what to do to get to

475
00:16:33,120 --> 00:16:36,079
that point

476
00:16:33,920 --> 00:16:37,199
to get a submission and because

477
00:16:36,079 --> 00:16:41,040
everything is open

478
00:16:37,199 --> 00:16:42,959
nobody's really a jerk about anything

479
00:16:41,040 --> 00:16:45,279
we try to leverage the best parts of

480
00:16:42,959 --> 00:16:46,560
open source so we figured developers are

481
00:16:45,279 --> 00:16:48,639
already on github

482
00:16:46,560 --> 00:16:50,160
the journal lives on github and the bot

483
00:16:48,639 --> 00:16:52,560
acts on github

484
00:16:50,160 --> 00:16:54,000
and then we try to automate things that

485
00:16:52,560 --> 00:16:57,680
are very tedious and boring

486
00:16:54,000 --> 00:16:59,440
and that's what whedon really does so um

487
00:16:57,680 --> 00:17:01,040
if any of this seems appealing to you

488
00:16:59,440 --> 00:17:03,199
and you would like to submit to joss

489
00:17:01,040 --> 00:17:06,079
please submit a paper

490
00:17:03,199 --> 00:17:07,678
if you have a software package and if

491
00:17:06,079 --> 00:17:10,399
you have expertise in

492
00:17:07,679 --> 00:17:11,919
any any open source language please sign

493
00:17:10,400 --> 00:17:14,240
up to be a reviewer

494
00:17:11,919 --> 00:17:19,839
and i'm happy to take any questions

495
00:17:14,240 --> 00:17:19,839
thank you

496
00:17:31,200 --> 00:17:34,320
um so we have a potential solution to

497
00:17:33,919 --> 00:17:37,520
this

498
00:17:34,320 --> 00:17:39,520
which is that uh

499
00:17:37,520 --> 00:17:40,559
oh sorry i'll repeat the question so the

500
00:17:39,520 --> 00:17:42,320
challenge with

501
00:17:40,559 --> 00:17:43,840
contributing to an existing open source

502
00:17:42,320 --> 00:17:45,760
is that there's already old publication

503
00:17:43,840 --> 00:17:48,240
and you will not get credit

504
00:17:45,760 --> 00:17:49,360
so we would like to encourage people to

505
00:17:48,240 --> 00:17:52,080
submit

506
00:17:49,360 --> 00:17:53,120
new papers when the software has made a

507
00:17:52,080 --> 00:17:55,360
major

508
00:17:53,120 --> 00:17:56,639
milestone leap so at that point

509
00:17:55,360 --> 00:17:59,120
everybody that contributed in that

510
00:17:56,640 --> 00:18:00,400
previous iteration will come on board

511
00:17:59,120 --> 00:18:15,840
so that is a way we can give other

512
00:18:00,400 --> 00:18:15,840
people credit

513
00:18:26,880 --> 00:18:31,520
adding a new major feature about that

514
00:18:29,200 --> 00:18:34,240
one into whatever specific niche that

515
00:18:31,520 --> 00:18:34,240
fits into it

516
00:18:39,200 --> 00:18:45,679
yeah yeah thank you for that comment it

517
00:18:43,120 --> 00:18:47,520
um it does work but the challenge with

518
00:18:45,679 --> 00:18:50,799
traditional publishing

519
00:18:47,520 --> 00:18:53,200
is that you have to have novelty

520
00:18:50,799 --> 00:18:56,160
uh so it's always hard to get a publish

521
00:18:53,200 --> 00:18:59,760
a publication that adds to an existing

522
00:18:56,160 --> 00:19:04,480
software but if that works that's great

523
00:18:59,760 --> 00:19:04,480
publishing about new features oh yeah

524
00:19:08,840 --> 00:19:12,879
okay

525
00:19:10,000 --> 00:19:14,160
so the software is assessed for some

526
00:19:12,880 --> 00:19:17,440
kind of quality

527
00:19:14,160 --> 00:19:20,400
yeah uh what criteria are used

528
00:19:17,440 --> 00:19:22,640
so we uh work through a checklist and

529
00:19:20,400 --> 00:19:25,760
that checklist is very public

530
00:19:22,640 --> 00:19:27,919
so we're not really passing judgment on

531
00:19:25,760 --> 00:19:30,400
quality but we want to make sure

532
00:19:27,919 --> 00:19:32,160
the documentation is easy to understand

533
00:19:30,400 --> 00:19:33,679
the software actually functions so

534
00:19:32,160 --> 00:19:34,320
reviewers have to step through every

535
00:19:33,679 --> 00:19:37,360
single

536
00:19:34,320 --> 00:19:39,200
function and every single example to

537
00:19:37,360 --> 00:19:42,639
make sure it actually works

538
00:19:39,200 --> 00:19:44,400
and so um you you end up with software

539
00:19:42,640 --> 00:19:48,080
that is not broken

540
00:19:44,400 --> 00:19:49,679
that is not um difficult to install in a

541
00:19:48,080 --> 00:19:51,840
different platform

542
00:19:49,679 --> 00:19:53,280
actually has a license so just we just

543
00:19:51,840 --> 00:19:56,080
make sure it meets a whole bunch of

544
00:19:53,280 --> 00:19:58,639
benchmarks that are signals of

545
00:19:56,080 --> 00:20:02,399
a good usable piece of software so we're

546
00:19:58,640 --> 00:20:02,400
not doing a very deep code review

547
00:20:12,559 --> 00:20:16,480
right and if if someone else has done a

548
00:20:14,799 --> 00:20:18,879
much deeper code review

549
00:20:16,480 --> 00:20:20,720
we will actually uh rely upon that

550
00:20:18,880 --> 00:20:34,159
review as well so reviews are

551
00:20:20,720 --> 00:20:35,679
transferable into joss

552
00:20:34,159 --> 00:20:37,679
good question so this is a very

553
00:20:35,679 --> 00:20:38,960
difficult question i'll repeat the

554
00:20:37,679 --> 00:20:41,039
question how small can a piece of

555
00:20:38,960 --> 00:20:43,919
software be to get into joss

556
00:20:41,039 --> 00:20:46,000
um this is the common topic of

557
00:20:43,919 --> 00:20:48,240
discussion among the editors

558
00:20:46,000 --> 00:20:51,440
so we have a cutoff that you cannot

559
00:20:48,240 --> 00:20:55,280
publish a minor utility it has to be

560
00:20:51,440 --> 00:20:59,120
slightly substantial in what it does

561
00:20:55,280 --> 00:21:02,080
and um whedon actually does a quick

562
00:20:59,120 --> 00:21:03,199
scan of the software and then if there's

563
00:21:02,080 --> 00:21:04,480
any doubt

564
00:21:03,200 --> 00:21:06,960
we will have a discussion among the

565
00:21:04,480 --> 00:21:08,640
editors to get consensus

566
00:21:06,960 --> 00:21:10,080
so somebody who's an expert in the field

567
00:21:08,640 --> 00:21:12,080
will come in and say

568
00:21:10,080 --> 00:21:14,080
oh this actually is a very trivial

569
00:21:12,080 --> 00:21:18,480
implementation of like one

570
00:21:14,080 --> 00:21:18,480
single method and then we reject that

571
00:21:19,440 --> 00:21:23,520
okay so i was curious to know if you've

572
00:21:21,600 --> 00:21:24,080
published any um papers on haskell

573
00:21:23,520 --> 00:21:25,760
software

574
00:21:24,080 --> 00:21:27,120
and i don't think about so my question

575
00:21:25,760 --> 00:21:28,879
is um

576
00:21:27,120 --> 00:21:30,959
so if someone else wants to submit one

577
00:21:28,880 --> 00:21:30,960
if

578
00:21:33,200 --> 00:21:39,760
we do actually um so how do we deal with

579
00:21:36,799 --> 00:21:41,840
uh papers from languages that are not

580
00:21:39,760 --> 00:21:43,679
very common like haskell

581
00:21:41,840 --> 00:21:45,360
so right now we don't get any as far as

582
00:21:43,679 --> 00:21:47,280
i know but we struggle with some

583
00:21:45,360 --> 00:21:50,000
languages like julia where we don't have

584
00:21:47,280 --> 00:21:51,918
enough reviewers

585
00:21:50,000 --> 00:21:53,440
so as soon as we know that this is a

586
00:21:51,919 --> 00:21:55,280
problem we just

587
00:21:53,440 --> 00:21:57,360
try and reach out to more people to sign

588
00:21:55,280 --> 00:21:59,678
up and so

589
00:21:57,360 --> 00:22:01,918
our reviewer sign up form tries to get

590
00:21:59,679 --> 00:22:05,679
expertise on languages

591
00:22:01,919 --> 00:22:08,080
and um every few months or so

592
00:22:05,679 --> 00:22:09,360
the editorial team will decide that we

593
00:22:08,080 --> 00:22:11,678
are lacking

594
00:22:09,360 --> 00:22:12,399
editors in a certain area and then go

595
00:22:11,679 --> 00:22:14,000
reach out to

596
00:22:12,400 --> 00:22:15,919
people to come join the board so if you

597
00:22:14,000 --> 00:22:17,600
know someone who's an expert at haskell

598
00:22:15,919 --> 00:22:20,480
maybe you that wants to help out

599
00:22:17,600 --> 00:22:20,480
feel free to reach out

600
00:22:21,280 --> 00:22:26,399
is open sourceness part of the academic

601
00:22:24,840 --> 00:22:29,120
criteria

602
00:22:26,400 --> 00:22:29,440
excellent question i don't know if it is

603
00:22:29,120 --> 00:22:31,280
but

604
00:22:29,440 --> 00:22:34,480
if you want to publish here you have to

605
00:22:31,280 --> 00:22:37,678
be open source there's no other way

606
00:22:34,480 --> 00:22:40,400
but overall i think uh it's against

607
00:22:37,679 --> 00:22:40,400
academic

608
00:22:41,679 --> 00:22:45,760
spirit to to not be open source so

609
00:22:44,400 --> 00:22:46,799
especially if it's publicly funded

610
00:22:45,760 --> 00:22:48,640
research

611
00:22:46,799 --> 00:22:50,080
uh why on earth would you create

612
00:22:48,640 --> 00:22:52,240
proprietary software

613
00:22:50,080 --> 00:22:55,840
so unless someone can come up with a

614
00:22:52,240 --> 00:22:55,840
good reason i i don't have one

615
00:23:00,960 --> 00:23:05,760
oh that's totally fine we our review

616
00:23:03,840 --> 00:23:08,320
process happens on github

617
00:23:05,760 --> 00:23:12,158
but your code can sit in any version

618
00:23:08,320 --> 00:23:12,158
control repository of any kind

619
00:23:15,919 --> 00:23:25,760
for example

620
00:23:22,159 --> 00:23:26,559
image segmentation so i think there's

621
00:23:25,760 --> 00:23:29,039
the drops but

622
00:23:26,559 --> 00:23:29,918
i also need to cite random forests and

623
00:23:29,039 --> 00:23:31,520
all those

624
00:23:29,919 --> 00:23:33,360
tools that i use for my clients for

625
00:23:31,520 --> 00:23:36,240
content

626
00:23:33,360 --> 00:23:38,639
um let me see if i follow the question

627
00:23:36,240 --> 00:23:42,480
how do you actually cite other

628
00:23:38,640 --> 00:23:45,440
uh methods um it's tricky

629
00:23:42,480 --> 00:23:47,039
so we don't require a lot of citations

630
00:23:45,440 --> 00:23:50,000
as part of jos

631
00:23:47,039 --> 00:23:51,360
uh because we are only looking for a

632
00:23:50,000 --> 00:23:52,240
paper that is a very high level

633
00:23:51,360 --> 00:23:54,719
description

634
00:23:52,240 --> 00:23:56,880
so if you want to cite a fundamental

635
00:23:54,720 --> 00:23:58,159
paper that describes random forest you

636
00:23:56,880 --> 00:23:59,440
can put that in your references it's

637
00:23:58,159 --> 00:24:00,799
totally fine

638
00:23:59,440 --> 00:24:03,120
but we're not looking for a very

639
00:24:00,799 --> 00:24:04,639
exhaustive list of references

640
00:24:03,120 --> 00:24:06,399
people usually put maybe five to ten

641
00:24:04,640 --> 00:24:09,360
references in in their

642
00:24:06,400 --> 00:24:09,360
software publication

643
00:24:12,720 --> 00:24:16,480
wonderful question how long is the

644
00:24:14,080 --> 00:24:17,039
review process i've seen one that has

645
00:24:16,480 --> 00:24:19,360
happened

646
00:24:17,039 --> 00:24:20,559
in a couple of days and i've seen one

647
00:24:19,360 --> 00:24:23,760
that's taken

648
00:24:20,559 --> 00:24:26,320
many months it's all up to

649
00:24:23,760 --> 00:24:27,840
how fast we can work with the authors so

650
00:24:26,320 --> 00:24:28,720
for example you submit something and i

651
00:24:27,840 --> 00:24:31,360
say

652
00:24:28,720 --> 00:24:32,559
your unit tests are missing and then you

653
00:24:31,360 --> 00:24:34,479
tell me

654
00:24:32,559 --> 00:24:36,158
i just started teaching this semester i

655
00:24:34,480 --> 00:24:38,240
have zero free time i'm going to come

656
00:24:36,159 --> 00:24:41,200
back to this next semester

657
00:24:38,240 --> 00:24:42,080
that happens quite frequently but if a

658
00:24:41,200 --> 00:24:44,080
software is

659
00:24:42,080 --> 00:24:45,279
pretty well used uh pretty feature

660
00:24:44,080 --> 00:24:47,199
complete

661
00:24:45,279 --> 00:24:48,799
sometimes we don't really have much to

662
00:24:47,200 --> 00:24:50,640
point out and the few things we point

663
00:24:48,799 --> 00:24:54,480
out people will immediately commit

664
00:24:50,640 --> 00:24:54,480
and then we just go accept and then it's

665
00:24:58,840 --> 00:25:01,840
done

666
00:25:02,960 --> 00:25:08,000
um good question so

667
00:25:06,080 --> 00:25:10,480
we haven't encountered that problem yet

668
00:25:08,000 --> 00:25:12,080
uh how do we deal with plagiarism

669
00:25:10,480 --> 00:25:14,640
uh especially i mean people stealing

670
00:25:12,080 --> 00:25:17,199
other people's code so

671
00:25:14,640 --> 00:25:17,679
we have not really done much about that

672
00:25:17,200 --> 00:25:19,360
yet

673
00:25:17,679 --> 00:25:22,080
i'm sure we can build in more

674
00:25:19,360 --> 00:25:24,879
functionality into the bot to actually

675
00:25:22,080 --> 00:25:26,080
try to detect some of this but so far we

676
00:25:24,880 --> 00:25:29,760
haven't come up with this

677
00:25:26,080 --> 00:25:31,520
um uh people do have to explain

678
00:25:29,760 --> 00:25:33,440
what they've done and how is this

679
00:25:31,520 --> 00:25:34,960
different from something else

680
00:25:33,440 --> 00:25:36,720
uh so you cannot just make an

681
00:25:34,960 --> 00:25:38,480
incremental change to an existing piece

682
00:25:36,720 --> 00:25:40,880
of software and say this is my

683
00:25:38,480 --> 00:25:42,720
jaws publication and if you're

684
00:25:40,880 --> 00:25:45,200
submitting something to joss

685
00:25:42,720 --> 00:25:46,880
uh you actually have to demonstrate that

686
00:25:45,200 --> 00:25:48,159
you've contributed substantially to that

687
00:25:46,880 --> 00:25:50,080
piece of software

688
00:25:48,159 --> 00:25:51,840
and the editor who's handling that paper

689
00:25:50,080 --> 00:25:53,760
has to go verify that

690
00:25:51,840 --> 00:25:55,520
but that's actually a great suggestion

691
00:25:53,760 --> 00:25:56,000
and one of the things we're doing is

692
00:25:55,520 --> 00:25:58,320
we're making

693
00:25:56,000 --> 00:26:00,080
our bot smarter and two people are now

694
00:25:58,320 --> 00:26:02,240
working full time on the bot

695
00:26:00,080 --> 00:26:05,678
so that's something that we could add

696
00:26:02,240 --> 00:26:05,679
for the bot to look into

697
00:26:06,720 --> 00:26:14,640
do you have such any

698
00:26:10,159 --> 00:26:16,720
such as brand or even distributions

699
00:26:14,640 --> 00:26:18,640
so that they would integrate your

700
00:26:16,720 --> 00:26:20,240
differences as metallica

701
00:26:18,640 --> 00:26:22,799
this is this is the content for

702
00:26:20,240 --> 00:26:22,799
developers

703
00:26:27,760 --> 00:26:32,559
uh great question so how do we integrate

704
00:26:29,840 --> 00:26:35,520
references back to package managers

705
00:26:32,559 --> 00:26:36,000
uh it's all up to the authors so as soon

706
00:26:35,520 --> 00:26:40,000
as a

707
00:26:36,000 --> 00:26:40,000
paper is accepted we tell the p we

708
00:26:40,240 --> 00:26:42,720
we tell

709
00:26:45,760 --> 00:26:49,200
for example here's a submission that was

710
00:26:48,480 --> 00:26:52,960
accepted

711
00:26:49,200 --> 00:26:54,640
and the very last thing we tell

712
00:26:52,960 --> 00:26:56,320
the authors is congratulations your

713
00:26:54,640 --> 00:26:57,760
paper is now accepted

714
00:26:56,320 --> 00:26:59,678
uh please add this information to the

715
00:26:57,760 --> 00:27:01,760
readme and the citation

716
00:26:59,679 --> 00:27:02,799
so if you're on cran you add this back

717
00:27:01,760 --> 00:27:04,320
to the citation file

718
00:27:02,799 --> 00:27:06,000
same thing with pipe i so it's up to you

719
00:27:04,320 --> 00:27:09,439
to advertise everything back if you

720
00:27:06,000 --> 00:27:09,440
don't have an automatic way to do this

721
00:27:11,679 --> 00:27:23,760
thank you very much

722
00:27:21,679 --> 00:27:23,760
you

