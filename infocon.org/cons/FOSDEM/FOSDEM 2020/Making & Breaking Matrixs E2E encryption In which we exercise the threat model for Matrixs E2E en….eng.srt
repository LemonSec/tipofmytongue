1
00:00:05,920 --> 00:00:09,599
so

2
00:00:07,040 --> 00:00:11,200
matthew hudson will talk to you about

3
00:00:09,599 --> 00:00:13,840
the matrix and

4
00:00:11,200 --> 00:00:14,879
encryption thank you very much welcome

5
00:00:13,840 --> 00:00:17,920
hi

6
00:00:14,880 --> 00:00:17,920
can you hear me

7
00:00:19,279 --> 00:00:22,480
thank you and can everybody hear me all

8
00:00:21,520 --> 00:00:25,840
right

9
00:00:22,480 --> 00:00:27,119
wonderful brilliant um you can ask

10
00:00:25,840 --> 00:00:28,800
questions during it if you want

11
00:00:27,119 --> 00:00:30,320
particularly as we tend to run out of

12
00:00:28,800 --> 00:00:33,200
time sometimes at the end for

13
00:00:30,320 --> 00:00:35,680
questions um who doesn't know what

14
00:00:33,200 --> 00:00:39,120
matrix is

15
00:00:35,680 --> 00:00:41,600
we've got three four five people six

16
00:00:39,120 --> 00:00:42,480
six and a half seven okay very quickly

17
00:00:41,600 --> 00:00:44,480
i'll try to give

18
00:00:42,480 --> 00:00:45,760
a very rushed explanation of matrix

19
00:00:44,480 --> 00:00:46,640
apologies to the people who came to the

20
00:00:45,760 --> 00:00:48,559
earlier talk

21
00:00:46,640 --> 00:00:50,160
is identical um to trying to bring

22
00:00:48,559 --> 00:00:51,599
people up to speed in this we're going

23
00:00:50,160 --> 00:00:53,680
to be talking about how

24
00:00:51,600 --> 00:00:55,840
we have made end-to-end encryption on

25
00:00:53,680 --> 00:00:56,239
matrix over the last couple of years and

26
00:00:55,840 --> 00:00:58,559
how

27
00:00:56,239 --> 00:00:59,760
we are finally turning it on by default

28
00:00:58,559 --> 00:01:02,959
like now

29
00:00:59,760 --> 00:01:04,319
and also look at how to break it a bit

30
00:01:02,960 --> 00:01:07,040
if we have time

31
00:01:04,319 --> 00:01:08,559
so matrix it's an open network for

32
00:01:07,040 --> 00:01:09,439
secure decentralized real-time

33
00:01:08,560 --> 00:01:12,320
communication

34
00:01:09,439 --> 00:01:13,679
use it for chat voip vr v-r-a-r-i-o-t

35
00:01:12,320 --> 00:01:16,639
it's basically a big

36
00:01:13,680 --> 00:01:16,960
multi-player pub sub database anybody

37
00:01:16,640 --> 00:01:19,360
can

38
00:01:16,960 --> 00:01:20,960
store data in it of any kind they can

39
00:01:19,360 --> 00:01:22,720
subscribe to it on other servers

40
00:01:20,960 --> 00:01:25,439
it's meant to be and it is the missing

41
00:01:22,720 --> 00:01:27,759
communication layer of the web itself

42
00:01:25,439 --> 00:01:28,960
so the whole idea is to have a global

43
00:01:27,759 --> 00:01:31,040
open comms network

44
00:01:28,960 --> 00:01:32,880
which is standard space and provides an

45
00:01:31,040 --> 00:01:33,680
open platform for real-time cons just

46
00:01:32,880 --> 00:01:36,720
like the web

47
00:01:33,680 --> 00:01:38,159
but for real-time communication

48
00:01:36,720 --> 00:01:39,920
one way to think of it is if you have

49
00:01:38,159 --> 00:01:41,920
the silos of the various different

50
00:01:39,920 --> 00:01:44,399
proprietary or not proprietary

51
00:01:41,920 --> 00:01:46,000
islands of communication today matrix

52
00:01:44,399 --> 00:01:46,799
can sit in the middle there's this big

53
00:01:46,000 --> 00:01:49,040
mesh

54
00:01:46,799 --> 00:01:50,479
of servers which are replicating

55
00:01:49,040 --> 00:01:52,640
conversations between them

56
00:01:50,479 --> 00:01:54,000
they have native matrix clients here

57
00:01:52,640 --> 00:01:56,960
they have bridges through to other

58
00:01:54,000 --> 00:01:59,040
protocols and so somebody on xmpp could

59
00:01:56,960 --> 00:02:00,719
be talking through to somebody on irc

60
00:01:59,040 --> 00:02:02,560
without even realizing that they're

61
00:02:00,719 --> 00:02:04,479
being bridged via matrix in the middle

62
00:02:02,560 --> 00:02:05,759
lots of people use it natively other

63
00:02:04,479 --> 00:02:08,878
people go and bridge

64
00:02:05,759 --> 00:02:09,598
through to other networks too the unique

65
00:02:08,878 --> 00:02:11,840
thing is that

66
00:02:09,598 --> 00:02:13,200
no single person owns your conversations

67
00:02:11,840 --> 00:02:16,239
the conversations are shared

68
00:02:13,200 --> 00:02:17,760
over everybody so if i am on my matrix

69
00:02:16,239 --> 00:02:18,720
server and i want to talk to somebody on

70
00:02:17,760 --> 00:02:20,560
another server

71
00:02:18,720 --> 00:02:22,560
the very act of talking to them has

72
00:02:20,560 --> 00:02:24,640
almost subversively decentralized

73
00:02:22,560 --> 00:02:26,879
the conversation between us so their

74
00:02:24,640 --> 00:02:29,200
copy is just as valid as my copy

75
00:02:26,879 --> 00:02:30,239
it's just like git anybody who's ever

76
00:02:29,200 --> 00:02:32,079
pushed or pulled

77
00:02:30,239 --> 00:02:33,519
to a get repository or cloned one for

78
00:02:32,080 --> 00:02:34,720
that matter should understand what's

79
00:02:33,519 --> 00:02:37,040
going on

80
00:02:34,720 --> 00:02:38,239
architecturally clients servers

81
00:02:37,040 --> 00:02:40,720
application servers

82
00:02:38,239 --> 00:02:42,160
identity servers identity surface circ

83
00:02:40,720 --> 00:02:43,040
we want to kill them off hopefully we

84
00:02:42,160 --> 00:02:44,879
will

85
00:02:43,040 --> 00:02:46,799
what do you get in the spec you get some

86
00:02:44,879 --> 00:02:48,959
decentralized conversation history

87
00:02:46,800 --> 00:02:50,000
group messaging is a first-class citizen

88
00:02:48,959 --> 00:02:51,760
obviously end-to-end

89
00:02:50,000 --> 00:02:53,519
encryption that's why we're here right

90
00:02:51,760 --> 00:02:56,879
so end-to-end encryption we

91
00:02:53,519 --> 00:02:57,920
began in 2015 by implementing ohm as the

92
00:02:56,879 --> 00:02:59,840
double ratchet

93
00:02:57,920 --> 00:03:01,599
algorithm used by signal originally

94
00:02:59,840 --> 00:03:03,200
called lib axolotl at the time

95
00:03:01,599 --> 00:03:05,359
we implemented our apache license

96
00:03:03,200 --> 00:03:08,319
version of it and then

97
00:03:05,360 --> 00:03:09,840
we added megome the next year in 2016

98
00:03:08,319 --> 00:03:11,440
and since then we've been chipping away

99
00:03:09,840 --> 00:03:13,920
at it trying to get it to parity

100
00:03:11,440 --> 00:03:14,560
with the non-encrypted flavor of matrix

101
00:03:13,920 --> 00:03:16,640
um so

102
00:03:14,560 --> 00:03:18,800
that we could turn it on by default for

103
00:03:16,640 --> 00:03:20,720
private conversations worth noting

104
00:03:18,800 --> 00:03:22,800
that we are not planning to turn it on

105
00:03:20,720 --> 00:03:24,640
by default for public conversations

106
00:03:22,800 --> 00:03:26,560
because if you are having a conversation

107
00:03:24,640 --> 00:03:28,720
that is already being indexed by google

108
00:03:26,560 --> 00:03:31,040
it's in public it's like anybody can

109
00:03:28,720 --> 00:03:33,280
join it there is very very little point

110
00:03:31,040 --> 00:03:35,200
to encrypting it arguably you get a

111
00:03:33,280 --> 00:03:37,680
little bit of nice properties

112
00:03:35,200 --> 00:03:39,440
in terms of reliability or in terms of

113
00:03:37,680 --> 00:03:40,159
the signatures to prove that people said

114
00:03:39,440 --> 00:03:42,720
these things

115
00:03:40,159 --> 00:03:43,200
but in the end it also has scalability

116
00:03:42,720 --> 00:03:45,200
issues

117
00:03:43,200 --> 00:03:47,119
we have rooms and matrix with over 100

118
00:03:45,200 --> 00:03:48,798
thousand users in them

119
00:03:47,120 --> 00:03:50,319
each user averages about two or three

120
00:03:48,799 --> 00:03:51,200
devices so that's three hundred thousand

121
00:03:50,319 --> 00:03:52,640
endpoints

122
00:03:51,200 --> 00:03:54,560
and we're focused at the moment of

123
00:03:52,640 --> 00:03:55,599
making matrix kick ass for private

124
00:03:54,560 --> 00:03:57,599
encrypted rooms

125
00:03:55,599 --> 00:03:59,280
with a couple of thousand devices rather

126
00:03:57,599 --> 00:04:02,159
than three hundred thousand

127
00:03:59,280 --> 00:04:03,200
also voip signaling server-side goodies

128
00:04:02,159 --> 00:04:04,560
unread counts

129
00:04:03,200 --> 00:04:06,159
all the stuff that you expect to get

130
00:04:04,560 --> 00:04:08,720
from a modern communication app like

131
00:04:06,159 --> 00:04:10,879
whatsapp or slack or discord

132
00:04:08,720 --> 00:04:12,400
ecosystem you have the spec you have the

133
00:04:10,879 --> 00:04:14,239
servers the bridges

134
00:04:12,400 --> 00:04:15,920
application servers and then you have

135
00:04:14,239 --> 00:04:18,720
the clients um

136
00:04:15,920 --> 00:04:20,880
worth noting that riot x here is almost

137
00:04:18,720 --> 00:04:23,759
at the point of replacing riot android

138
00:04:20,880 --> 00:04:24,240
we're entering the 1.0 release basically

139
00:04:23,759 --> 00:04:26,080
now

140
00:04:24,240 --> 00:04:27,440
we've released candidates on the horizon

141
00:04:26,080 --> 00:04:30,840
over the coming weeks

142
00:04:27,440 --> 00:04:33,199
i think we just shipped um riot x naught

143
00:04:30,840 --> 00:04:36,799
14.1 or is it dot two

144
00:04:33,199 --> 00:04:38,320
benoit two and um that is

145
00:04:36,800 --> 00:04:40,080
hopefully one of the last builds before

146
00:04:38,320 --> 00:04:42,000
we go ga 1.0

147
00:04:40,080 --> 00:04:43,599
so if you're not using right x on

148
00:04:42,000 --> 00:04:45,120
android please give it a whirl

149
00:04:43,600 --> 00:04:47,040
particularly as it has a lot of the

150
00:04:45,120 --> 00:04:49,199
end-to-end encryption goodies in it

151
00:04:47,040 --> 00:04:50,800
which we're talking about today um i've

152
00:04:49,199 --> 00:04:51,680
started using it on android in the last

153
00:04:50,800 --> 00:04:53,680
couple of days

154
00:04:51,680 --> 00:04:55,280
mainly because there was a double free

155
00:04:53,680 --> 00:04:57,040
crash that was

156
00:04:55,280 --> 00:04:58,719
killing my account on it but now that's

157
00:04:57,040 --> 00:05:01,360
fixed it's really nice

158
00:04:58,720 --> 00:05:03,120
like unrecognizably um better than

159
00:05:01,360 --> 00:05:05,280
android

160
00:05:03,120 --> 00:05:07,840
in terms of uptake daily active users

161
00:05:05,280 --> 00:05:10,719
are following this interesting parabola

162
00:05:07,840 --> 00:05:12,239
over the last three years not much

163
00:05:10,720 --> 00:05:13,600
really to say about that other that it

164
00:05:12,240 --> 00:05:15,039
puts a lot of pressure on us to make

165
00:05:13,600 --> 00:05:16,400
sure that the server implementation

166
00:05:15,039 --> 00:05:19,199
scale

167
00:05:16,400 --> 00:05:20,638
and overall community stats are 13 mil

168
00:05:19,199 --> 00:05:22,560
global mxids

169
00:05:20,639 --> 00:05:23,759
about 5 million messengers a day that we

170
00:05:22,560 --> 00:05:25,199
can see

171
00:05:23,759 --> 00:05:26,960
four and a half million chat rooms that

172
00:05:25,199 --> 00:05:28,560
we can see from matrix.org twenty

173
00:05:26,960 --> 00:05:29,758
thousand servers actually forty thousand

174
00:05:28,560 --> 00:05:31,520
in the real world

175
00:05:29,759 --> 00:05:33,840
thirty five hundred messages a second

176
00:05:31,520 --> 00:05:36,560
going out about 35 hertz coming in

177
00:05:33,840 --> 00:05:38,400
and lots of different companies projects

178
00:05:36,560 --> 00:05:40,080
and also governments building on top of

179
00:05:38,400 --> 00:05:43,120
matrix most famously france

180
00:05:40,080 --> 00:05:43,599
also germany um as of the end of last

181
00:05:43,120 --> 00:05:45,680
year

182
00:05:43,600 --> 00:05:46,880
um the us has some servers as well and

183
00:05:45,680 --> 00:05:48,720
we're working with the uk

184
00:05:46,880 --> 00:05:50,800
as well if anybody owns a government

185
00:05:48,720 --> 00:05:52,160
around here and wants to get more matrix

186
00:05:50,800 --> 00:05:54,160
please come and talk to me afterwards

187
00:05:52,160 --> 00:05:55,600
because it's kind of fun to get all the

188
00:05:54,160 --> 00:05:56,800
different countries on the same

189
00:05:55,600 --> 00:05:59,759
encrypted cons and

190
00:05:56,800 --> 00:06:00,240
infrastructure so sorry for the boring

191
00:05:59,759 --> 00:06:01,759
bit

192
00:06:00,240 --> 00:06:04,240
let's get on with the fun stuff

193
00:06:01,759 --> 00:06:06,880
finishing e3 in matrix

194
00:06:04,240 --> 00:06:08,240
first of all e3 by d4 is obviously

195
00:06:06,880 --> 00:06:08,719
really important for various different

196
00:06:08,240 --> 00:06:10,000
reasons

197
00:06:08,720 --> 00:06:11,919
first of all we're replicating

198
00:06:10,000 --> 00:06:13,840
conversations everywhere in matrix

199
00:06:11,919 --> 00:06:14,960
in the first place and so every server

200
00:06:13,840 --> 00:06:16,799
that joins a room

201
00:06:14,960 --> 00:06:18,479
gets a copy of that data if it's not

202
00:06:16,800 --> 00:06:20,400
end-to-end encrypted your attack service

203
00:06:18,479 --> 00:06:20,960
just scales linearly and that is

204
00:06:20,400 --> 00:06:23,359
obviously

205
00:06:20,960 --> 00:06:25,198
bad news also we want to protect

206
00:06:23,360 --> 00:06:26,880
ourselves from compromised servers in

207
00:06:25,199 --> 00:06:28,319
general that might be malicious this

208
00:06:26,880 --> 00:06:29,919
means it might be people who have

209
00:06:28,319 --> 00:06:31,440
compromised a given server

210
00:06:29,919 --> 00:06:33,520
we also want to be protected by people

211
00:06:31,440 --> 00:06:35,840
who have man in the middle the tls

212
00:06:33,520 --> 00:06:37,198
um end-to-end encryption is also useful

213
00:06:35,840 --> 00:06:39,758
because it asserts the

214
00:06:37,199 --> 00:06:40,800
center identity and it also gives us a

215
00:06:39,759 --> 00:06:42,800
framework for

216
00:06:40,800 --> 00:06:44,800
verifying users keys and verifying their

217
00:06:42,800 --> 00:06:45,759
identity and we actually started this

218
00:06:44,800 --> 00:06:48,880
whole final lag

219
00:06:45,759 --> 00:06:51,599
of turning on e3 by default at 2019

220
00:06:48,880 --> 00:06:52,560
last year so here's a flashback actually

221
00:06:51,599 --> 00:06:55,039
of a flashback

222
00:06:52,560 --> 00:06:57,440
this is a massive flashback of a slide

223
00:06:55,039 --> 00:06:58,800
from fosdem in 2017

224
00:06:57,440 --> 00:07:00,479
where we said this is what we need to do

225
00:06:58,800 --> 00:07:01,599
in the next like couple of years to get

226
00:07:00,479 --> 00:07:04,639
you to re turned on

227
00:07:01,599 --> 00:07:05,919
and as of 2019 we got like that far

228
00:07:04,639 --> 00:07:07,360
physically down that list we were

229
00:07:05,919 --> 00:07:08,960
literally going through it in turn

230
00:07:07,360 --> 00:07:11,440
the only things we lacked were e3

231
00:07:08,960 --> 00:07:12,080
capable search um actually turning it on

232
00:07:11,440 --> 00:07:14,960
obviously

233
00:07:12,080 --> 00:07:16,318
negotiating it with legacy clients and

234
00:07:14,960 --> 00:07:18,479
in retrospect

235
00:07:16,319 --> 00:07:19,360
we kind of had a few other things we

236
00:07:18,479 --> 00:07:21,520
need to support

237
00:07:19,360 --> 00:07:23,120
non-e2e clients we do not want every

238
00:07:21,520 --> 00:07:23,919
random hacker who's written the matrix

239
00:07:23,120 --> 00:07:25,680
clan or bot

240
00:07:23,919 --> 00:07:27,359
to be left out in the cold because they

241
00:07:25,680 --> 00:07:28,160
can no longer get at their dms or their

242
00:07:27,360 --> 00:07:29,440
private rooms

243
00:07:28,160 --> 00:07:31,680
because we've turned on need to be by

244
00:07:29,440 --> 00:07:32,319
default we want to obviously be able to

245
00:07:31,680 --> 00:07:34,560
search

246
00:07:32,319 --> 00:07:36,160
we want to have file indexes really nice

247
00:07:34,560 --> 00:07:36,720
to have your file panel in right to show

248
00:07:36,160 --> 00:07:39,280
you

249
00:07:36,720 --> 00:07:40,800
what's in a room you need to finalize

250
00:07:39,280 --> 00:07:42,880
the ui ux

251
00:07:40,800 --> 00:07:44,479
cross signing absolutely critical as

252
00:07:42,880 --> 00:07:46,400
everybody in this room knows it's

253
00:07:44,479 --> 00:07:47,680
apart from seven it's really annoying in

254
00:07:46,400 --> 00:07:49,599
matrix um

255
00:07:47,680 --> 00:07:50,879
when somebody joins the conversation

256
00:07:49,599 --> 00:07:51,680
with a new device because you have to

257
00:07:50,879 --> 00:07:53,440
verify

258
00:07:51,680 --> 00:07:55,840
what if they could attest to their own

259
00:07:53,440 --> 00:07:56,879
device so you verify a user once and you

260
00:07:55,840 --> 00:07:58,960
don't have to keep

261
00:07:56,879 --> 00:08:00,560
verifying their other devices and

262
00:07:58,960 --> 00:08:02,878
finally

263
00:08:00,560 --> 00:08:04,400
even better verification new acts so not

264
00:08:02,879 --> 00:08:06,639
just the overall ux

265
00:08:04,400 --> 00:08:08,638
but specifically making this as easy and

266
00:08:06,639 --> 00:08:11,680
smooth as possible

267
00:08:08,639 --> 00:08:14,960
so in turn pant lyman

268
00:08:11,680 --> 00:08:16,639
who knows what pantoloyman is okay about

269
00:08:14,960 --> 00:08:18,560
half the room so pantoloman is

270
00:08:16,639 --> 00:08:20,160
obviously lyra's demon from his dark

271
00:08:18,560 --> 00:08:23,360
materials also

272
00:08:20,160 --> 00:08:25,520
it's an end-to-end encrypted um demon

273
00:08:23,360 --> 00:08:26,879
that offloads all of your e-2e so the

274
00:08:25,520 --> 00:08:29,198
idea is that if you're writing some

275
00:08:26,879 --> 00:08:29,919
random little matrix pro way script or

276
00:08:29,199 --> 00:08:31,360
new client

277
00:08:29,919 --> 00:08:33,279
and you can't be bothered to write an

278
00:08:31,360 --> 00:08:34,240
audited and massive complicated e2e

279
00:08:33,279 --> 00:08:36,159
implementation

280
00:08:34,240 --> 00:08:37,919
you can just connect by matrix to a

281
00:08:36,159 --> 00:08:38,399
local demon that offloads all the hard

282
00:08:37,919 --> 00:08:40,000
stuff

283
00:08:38,399 --> 00:08:42,719
and it proxies you through to your

284
00:08:40,000 --> 00:08:45,440
actual server it's written in python

285
00:08:42,719 --> 00:08:47,360
in asynchio using the no i o style which

286
00:08:45,440 --> 00:08:49,040
is basically you abstract all the i o

287
00:08:47,360 --> 00:08:50,480
away and then plug it into async io at

288
00:08:49,040 --> 00:08:53,360
the last minute

289
00:08:50,480 --> 00:08:54,080
it provides management interface by dbus

290
00:08:53,360 --> 00:08:56,080
and we share

291
00:08:54,080 --> 00:08:57,839
a command line interface but the idea is

292
00:08:56,080 --> 00:08:59,680
that people will hopefully write

293
00:08:57,839 --> 00:09:01,279
like little system trade pop-ups so you

294
00:08:59,680 --> 00:09:03,599
can have little things here

295
00:09:01,279 --> 00:09:04,880
saying hey do you want to verify the new

296
00:09:03,600 --> 00:09:06,720
user in this conversation

297
00:09:04,880 --> 00:09:08,560
even when you're not using an e2e

298
00:09:06,720 --> 00:09:10,240
capable client

299
00:09:08,560 --> 00:09:12,560
um it's actually the same stack as

300
00:09:10,240 --> 00:09:15,839
wechat matrix it's written by

301
00:09:12,560 --> 00:09:18,000
a chap called dimir whose name is polya

302
00:09:15,839 --> 00:09:19,360
on matrix um he originally was doing

303
00:09:18,000 --> 00:09:20,399
chat matrix and it was really really

304
00:09:19,360 --> 00:09:22,720
cool he wrote his own

305
00:09:20,399 --> 00:09:24,480
python implementation of e2e and an

306
00:09:22,720 --> 00:09:26,880
entire matrix and sdk

307
00:09:24,480 --> 00:09:27,680
and so he said hey why not come and work

308
00:09:26,880 --> 00:09:29,279
on uh

309
00:09:27,680 --> 00:09:31,279
matrix full time and come and work on

310
00:09:29,279 --> 00:09:32,959
panel lineman um so that is where pant

311
00:09:31,279 --> 00:09:33,760
lineman has come from and most

312
00:09:32,959 --> 00:09:35,040
excitingly

313
00:09:33,760 --> 00:09:36,959
and i didn't ask his permission to

314
00:09:35,040 --> 00:09:38,959
reveal this but

315
00:09:36,959 --> 00:09:40,959
it's the case if you look on github that

316
00:09:38,959 --> 00:09:42,319
is busy rewriting first of all wechat

317
00:09:40,959 --> 00:09:45,839
matrix in rust

318
00:09:42,320 --> 00:09:48,560
using rumor as um the client's um

319
00:09:45,839 --> 00:09:49,680
uh framework and structures and also

320
00:09:48,560 --> 00:09:51,119
we're using

321
00:09:49,680 --> 00:09:53,279
rs which is the native rust

322
00:09:51,120 --> 00:09:54,720
implementation of ohm that has come from

323
00:09:53,279 --> 00:09:59,040
the fractal developer

324
00:09:54,720 --> 00:10:02,079
community huge thanks to brain blasted

325
00:09:59,040 --> 00:10:03,199
um and johannes hayes for re-licensing

326
00:10:02,079 --> 00:10:04,640
and the other contributors for

327
00:10:03,200 --> 00:10:06,480
re-licensing rmrs

328
00:10:04,640 --> 00:10:08,480
so that we could use it in the apache

329
00:10:06,480 --> 00:10:09,200
stack of all of the official matrix

330
00:10:08,480 --> 00:10:10,720
projects

331
00:10:09,200 --> 00:10:12,480
and the idea is to build an official

332
00:10:10,720 --> 00:10:14,160
matrix rust sdk

333
00:10:12,480 --> 00:10:15,680
on top of this stack that can be used in

334
00:10:14,160 --> 00:10:19,120
pantolymin in future

335
00:10:15,680 --> 00:10:20,880
and other clients so that's panda lyman

336
00:10:19,120 --> 00:10:22,480
let me quickly show you it

337
00:10:20,880 --> 00:10:24,800
risky live demo you know how well these

338
00:10:22,480 --> 00:10:26,560
are going today um so

339
00:10:24,800 --> 00:10:27,839
here is panda lyman just sitting here in

340
00:10:26,560 --> 00:10:30,319
the background um

341
00:10:27,839 --> 00:10:32,079
it's going and decrypting syncs it's

342
00:10:30,320 --> 00:10:33,279
going and sending device messages around

343
00:10:32,079 --> 00:10:35,359
the place and you might wonder

344
00:10:33,279 --> 00:10:37,200
what is connected to it well this client

345
00:10:35,360 --> 00:10:40,079
here is what is connected to it

346
00:10:37,200 --> 00:10:40,720
um anybody know what this is one person

347
00:10:40,079 --> 00:10:42,959
does

348
00:10:40,720 --> 00:10:44,399
two three four so this is a very this is

349
00:10:42,959 --> 00:10:46,560
a really interesting client it might

350
00:10:44,399 --> 00:10:47,440
look very minimal because there is no ui

351
00:10:46,560 --> 00:10:49,920
on it really at all

352
00:10:47,440 --> 00:10:50,720
it's called brawl it's written by bruno

353
00:10:49,920 --> 00:10:52,959
who's um

354
00:10:50,720 --> 00:10:54,800
one of the web developers and it's an

355
00:10:52,959 --> 00:10:57,680
experiment in an entirely new js

356
00:10:54,800 --> 00:10:58,719
sdk this is backed by indexeddb in a

357
00:10:57,680 --> 00:11:00,560
really intelligent way

358
00:10:58,720 --> 00:11:02,240
unlike js sdk which predated the

359
00:11:00,560 --> 00:11:03,680
existence of index db

360
00:11:02,240 --> 00:11:05,360
and where experiment or his

361
00:11:03,680 --> 00:11:07,680
experimenting with it as a full-time

362
00:11:05,360 --> 00:11:08,720
as a forum as a spare time project and

363
00:11:07,680 --> 00:11:11,760
just to see how

364
00:11:08,720 --> 00:11:14,079
nice a js sdk you can build such

365
00:11:11,760 --> 00:11:14,959
we might eventually use it in riot web

366
00:11:14,079 --> 00:11:16,319
or similar

367
00:11:14,959 --> 00:11:18,239
and this room here has been talking

368
00:11:16,320 --> 00:11:18,959
through to me is at matthewmatrix.org

369
00:11:18,240 --> 00:11:22,000
and if i say

370
00:11:18,959 --> 00:11:23,839
hello matthew it goes and says

371
00:11:22,000 --> 00:11:25,600
you can see that it's been sent there

372
00:11:23,839 --> 00:11:27,040
and i go through to here

373
00:11:25,600 --> 00:11:29,279
and you can see a hello matthew coming

374
00:11:27,040 --> 00:11:29,680
in here and the key thing is as you can

375
00:11:29,279 --> 00:11:31,600
see

376
00:11:29,680 --> 00:11:33,040
for our new ux this room is actually

377
00:11:31,600 --> 00:11:35,680
end-to-end encrypted

378
00:11:33,040 --> 00:11:36,399
with the shields here i haven't verified

379
00:11:35,680 --> 00:11:39,839
um

380
00:11:36,399 --> 00:11:40,560
matthew's test seven i can respond back

381
00:11:39,839 --> 00:11:42,560
with hello

382
00:11:40,560 --> 00:11:44,079
and assuming i have enough connectivity

383
00:11:42,560 --> 00:11:45,920
and if the matrix.org server

384
00:11:44,079 --> 00:11:48,399
is working yay there you go you get the

385
00:11:45,920 --> 00:11:50,000
hello yay coming back

386
00:11:48,399 --> 00:11:51,279
so that is basically what it looks like

387
00:11:50,000 --> 00:11:52,800
you've got an experimental client you

388
00:11:51,279 --> 00:11:53,920
haven't bothered with e2e you pipe it

389
00:11:52,800 --> 00:11:56,560
through pandoliman

390
00:11:53,920 --> 00:11:58,079
hey presto it's all e3 and i haven't

391
00:11:56,560 --> 00:12:00,079
actually tested this so probably will go

392
00:11:58,079 --> 00:12:00,560
horribly wrong but if i were to go into

393
00:12:00,079 --> 00:12:03,680
here

394
00:12:00,560 --> 00:12:06,560
and try to verify matthew 7 test and

395
00:12:03,680 --> 00:12:08,399
start verification

396
00:12:06,560 --> 00:12:10,000
you can actually see our new ui that is

397
00:12:08,399 --> 00:12:11,440
coming together for verification

398
00:12:10,000 --> 00:12:13,279
requests i have a horrible feeling that

399
00:12:11,440 --> 00:12:14,800
it's going to try to do this by cross

400
00:12:13,279 --> 00:12:15,839
signing voodoo and not actually make it

401
00:12:14,800 --> 00:12:17,760
through to pantolime

402
00:12:15,839 --> 00:12:20,160
it hasn't but basically pandaliman does

403
00:12:17,760 --> 00:12:21,680
support verification pre-cross signing

404
00:12:20,160 --> 00:12:23,519
and obviously in the near future it will

405
00:12:21,680 --> 00:12:26,239
support cross-signing too

406
00:12:23,519 --> 00:12:27,760
so that's banta lyman so that's one of

407
00:12:26,240 --> 00:12:30,160
the big missing ingredients now done

408
00:12:27,760 --> 00:12:32,240
it's stable we use it in production um

409
00:12:30,160 --> 00:12:33,040
lots of random bots and encrypted rooms

410
00:12:32,240 --> 00:12:35,600
particularly

411
00:12:33,040 --> 00:12:36,319
um for kind of managing the matrix.org

412
00:12:35,600 --> 00:12:37,519
home server

413
00:12:36,320 --> 00:12:38,880
where we want to pull in a part we just

414
00:12:37,519 --> 00:12:40,720
wedge it through panel lineman so it can

415
00:12:38,880 --> 00:12:43,680
be in the encrypted room

416
00:12:40,720 --> 00:12:44,480
sasha also actually done by dimir

417
00:12:43,680 --> 00:12:46,959
entirely

418
00:12:44,480 --> 00:12:48,160
um new solution to full text search

419
00:12:46,959 --> 00:12:49,599
obviously if you're end-to-end

420
00:12:48,160 --> 00:12:51,760
encrypting your chat rooms

421
00:12:49,600 --> 00:12:52,880
you can't some search server side on the

422
00:12:51,760 --> 00:12:54,720
encrypted messages

423
00:12:52,880 --> 00:12:56,160
unless you do very exotic things with

424
00:12:54,720 --> 00:12:58,000
homomorphic encryption

425
00:12:56,160 --> 00:12:59,519
that we don't have time to figure out

426
00:12:58,000 --> 00:13:02,480
right now so what we did

427
00:12:59,519 --> 00:13:04,399
instead was to take tentavi which is a

428
00:13:02,480 --> 00:13:06,800
rust full text search engine

429
00:13:04,399 --> 00:13:08,560
um very similar to lucien except much

430
00:13:06,800 --> 00:13:09,359
much much smaller and written in rust

431
00:13:08,560 --> 00:13:11,040
rather than

432
00:13:09,360 --> 00:13:12,959
java or whatever lucine is written in

433
00:13:11,040 --> 00:13:14,240
today and

434
00:13:12,959 --> 00:13:16,319
what we've done is to compile it

435
00:13:14,240 --> 00:13:19,839
client-side and here it is

436
00:13:16,320 --> 00:13:22,320
basically um as a bunch of rust

437
00:13:19,839 --> 00:13:23,360
wrapped in a node wrapper and then we

438
00:13:22,320 --> 00:13:26,639
have

439
00:13:23,360 --> 00:13:28,480
matrix sasha as javascript bindings

440
00:13:26,639 --> 00:13:30,959
on top of this which means that we can

441
00:13:28,480 --> 00:13:34,160
then embed it into the matrix react sdk

442
00:13:30,959 --> 00:13:34,959
and in turn into web and what tensorfeed

443
00:13:34,160 --> 00:13:37,120
does

444
00:13:34,959 --> 00:13:38,399
and cech does is to spider all of your

445
00:13:37,120 --> 00:13:40,240
messages

446
00:13:38,399 --> 00:13:41,440
from your encrypted accounts and build

447
00:13:40,240 --> 00:13:45,600
up a full text search

448
00:13:41,440 --> 00:13:48,079
index of it all so

449
00:13:45,600 --> 00:13:49,120
um interesting things that we can do

450
00:13:48,079 --> 00:13:51,599
with setter

451
00:13:49,120 --> 00:13:52,399
is that it's cross-platform in rust um

452
00:13:51,600 --> 00:13:55,040
so we could

453
00:13:52,399 --> 00:13:56,880
easily integrate it in other clients not

454
00:13:55,040 --> 00:13:57,519
just ripe any matrix client can use this

455
00:13:56,880 --> 00:13:59,439
in future

456
00:13:57,519 --> 00:14:01,279
we can also potentially incrementally

457
00:13:59,440 --> 00:14:02,800
gossip the encrypted indexes between

458
00:14:01,279 --> 00:14:03,279
each other and a really fun thing we've

459
00:14:02,800 --> 00:14:06,000
done

460
00:14:03,279 --> 00:14:07,040
is to pipe all of the um data through

461
00:14:06,000 --> 00:14:08,800
sql cipher

462
00:14:07,040 --> 00:14:10,880
uh before storing it in sqlite as well

463
00:14:08,800 --> 00:14:12,800
as adding encryption support to tantavi

464
00:14:10,880 --> 00:14:15,120
so that it's literally decrypting your

465
00:14:12,800 --> 00:14:16,319
e2e history indexing it and then storing

466
00:14:15,120 --> 00:14:18,800
it to disk locally

467
00:14:16,320 --> 00:14:20,079
as in turn encrypted messages and that

468
00:14:18,800 --> 00:14:20,959
in turn could be gossip between

469
00:14:20,079 --> 00:14:22,638
different clients

470
00:14:20,959 --> 00:14:24,880
so you can leave your laptop on riot

471
00:14:22,639 --> 00:14:26,399
desktop going and spidering away

472
00:14:24,880 --> 00:14:28,320
all of your messages building up these

473
00:14:26,399 --> 00:14:29,680
indexes and meanwhile you log on on a

474
00:14:28,320 --> 00:14:31,920
phone and all it has to do

475
00:14:29,680 --> 00:14:33,279
is to perhaps lazy load the indexes on a

476
00:14:31,920 --> 00:14:34,719
per room basis

477
00:14:33,279 --> 00:14:36,480
and it doesn't have to re-index

478
00:14:34,720 --> 00:14:38,240
everything it can just pick up the index

479
00:14:36,480 --> 00:14:41,199
that has been pre-calculated

480
00:14:38,240 --> 00:14:41,760
um so this is ships now in the develop

481
00:14:41,199 --> 00:14:45,040
branch

482
00:14:41,760 --> 00:14:46,880
of riot desktop the only catch

483
00:14:45,040 --> 00:14:48,079
is that we need to finish updating our

484
00:14:46,880 --> 00:14:51,279
build infrastructure

485
00:14:48,079 --> 00:14:53,359
to do rust native modules

486
00:14:51,279 --> 00:14:55,439
on riot desktop we don't yet have it in

487
00:14:53,360 --> 00:14:56,880
riot web because wasm doesn't support

488
00:14:55,440 --> 00:14:58,800
threads and tentative

489
00:14:56,880 --> 00:15:00,959
is very heavily threaded so we can't

490
00:14:58,800 --> 00:15:04,079
compile it down to wasm yeah

491
00:15:00,959 --> 00:15:06,560
in terms of what it looks like um if i

492
00:15:04,079 --> 00:15:08,399
go to some encrypted room which i

493
00:15:06,560 --> 00:15:11,599
probably should have picked beforehand

494
00:15:08,399 --> 00:15:13,519
new vector limited is where the

495
00:15:11,600 --> 00:15:15,199
uk office of new vector working on

496
00:15:13,519 --> 00:15:15,920
matrix decide where to go for lunch

497
00:15:15,199 --> 00:15:17,439
mainly

498
00:15:15,920 --> 00:15:19,360
until each other about caramel and

499
00:15:17,440 --> 00:15:21,120
brownie bites that if i go and search an

500
00:15:19,360 --> 00:15:21,760
encrypted room like this now and search

501
00:15:21,120 --> 00:15:23,839
for i know

502
00:15:21,760 --> 00:15:25,199
duke which is our local pub apparently

503
00:15:23,839 --> 00:15:29,120
we haven't been talking about them the

504
00:15:25,199 --> 00:15:30,000
jig here i'm not oh i'm on the right web

505
00:15:29,120 --> 00:15:33,199
i should be

506
00:15:30,000 --> 00:15:36,079
on right desktop let me go and just um

507
00:15:33,199 --> 00:15:37,199
set that going not uninstall you can't

508
00:15:36,079 --> 00:15:40,079
run electron

509
00:15:37,199 --> 00:15:41,439
let me go and fire up ryan desktop um so

510
00:15:40,079 --> 00:15:43,199
that's what it looks like today

511
00:15:41,440 --> 00:15:45,279
a few minutes we'll come back to that

512
00:15:43,199 --> 00:15:50,479
and we can look at how it works

513
00:15:45,279 --> 00:15:50,480
in electron right what next

514
00:15:50,959 --> 00:15:54,560
another big thing that was blocking us

515
00:15:52,639 --> 00:15:56,639
unashamedly is that we've

516
00:15:54,560 --> 00:15:58,239
been plagued by these undecraptible

517
00:15:56,639 --> 00:16:00,320
messages and

518
00:15:58,240 --> 00:16:01,440
um it's got better over the years i hope

519
00:16:00,320 --> 00:16:05,040
everybody will agree

520
00:16:01,440 --> 00:16:06,720
yeah that's electron um

521
00:16:05,040 --> 00:16:08,639
however it's still a bit of a pain in

522
00:16:06,720 --> 00:16:10,240
the ass that there are scenarios where

523
00:16:08,639 --> 00:16:12,079
you can just get messages and you don't

524
00:16:10,240 --> 00:16:14,560
have the keys to decrypt them

525
00:16:12,079 --> 00:16:15,920
so i mean the core problem about this is

526
00:16:14,560 --> 00:16:18,399
architecturally today

527
00:16:15,920 --> 00:16:19,599
keys follow a different transport path

528
00:16:18,399 --> 00:16:21,519
than the messages

529
00:16:19,600 --> 00:16:23,360
in matrix the messages can be replicated

530
00:16:21,519 --> 00:16:24,959
everywhere and you can indirectly get

531
00:16:23,360 --> 00:16:25,519
them from random servers and you can

532
00:16:24,959 --> 00:16:27,119
have

533
00:16:25,519 --> 00:16:28,720
10 servers in the room and all of them

534
00:16:27,120 --> 00:16:30,079
can go down apart from one and you'll

535
00:16:28,720 --> 00:16:30,720
still get the messages because that

536
00:16:30,079 --> 00:16:33,120
server has

537
00:16:30,720 --> 00:16:34,000
messages however that is not the path

538
00:16:33,120 --> 00:16:35,519
that keys take

539
00:16:34,000 --> 00:16:37,440
and if you think about it it's possibly

540
00:16:35,519 --> 00:16:39,920
a bit distasteful that

541
00:16:37,440 --> 00:16:41,279
just because um i'm trying to set up a

542
00:16:39,920 --> 00:16:41,920
one-to-one encrypted channel with

543
00:16:41,279 --> 00:16:44,560
somebody

544
00:16:41,920 --> 00:16:46,479
on their server between theirs and mine

545
00:16:44,560 --> 00:16:46,880
why should that get relayed and flooded

546
00:16:46,480 --> 00:16:48,480
across

547
00:16:46,880 --> 00:16:50,639
all the other servers in a room it's

548
00:16:48,480 --> 00:16:52,720
very inefficient it would be very

549
00:16:50,639 --> 00:16:54,800
um it'll be a basically on squared

550
00:16:52,720 --> 00:16:57,839
irrelevant signaling clutter

551
00:16:54,800 --> 00:17:00,160
so two solutions we could go and somehow

552
00:16:57,839 --> 00:17:01,920
attach it into the dag anyway so it does

553
00:17:00,160 --> 00:17:03,759
cover the same path but it would flood

554
00:17:01,920 --> 00:17:05,520
lots and lots of information everywhere

555
00:17:03,759 --> 00:17:07,120
needlessly and slow everything down even

556
00:17:05,520 --> 00:17:09,439
more or we could

557
00:17:07,119 --> 00:17:10,719
um switch tack entirely do something a

558
00:17:09,439 --> 00:17:12,240
bit like mls

559
00:17:10,720 --> 00:17:14,000
where you just have a totally different

560
00:17:12,240 --> 00:17:16,480
algorithm for distributing keys

561
00:17:14,000 --> 00:17:18,640
in mls you distribute them over a tree

562
00:17:16,480 --> 00:17:21,760
the devices in a room effectively

563
00:17:18,640 --> 00:17:23,919
rather than a full mesh um

564
00:17:21,760 --> 00:17:26,000
however short term in france's

565
00:17:23,919 --> 00:17:27,919
unavoidable key distribution fails

566
00:17:26,000 --> 00:17:29,679
where you've had say a net split and a

567
00:17:27,919 --> 00:17:30,559
device has joined a room on one side of

568
00:17:29,679 --> 00:17:32,640
a net split

569
00:17:30,559 --> 00:17:33,840
and you just can't see it and so you're

570
00:17:32,640 --> 00:17:35,280
never going to send it the key because

571
00:17:33,840 --> 00:17:36,959
you didn't know it existed

572
00:17:35,280 --> 00:17:38,960
that sort of unavoidable thing is pretty

573
00:17:36,960 --> 00:17:40,320
unlikely and meanwhile we did find a

574
00:17:38,960 --> 00:17:41,360
whole bunch of other bugs which were

575
00:17:40,320 --> 00:17:42,879
causing failures

576
00:17:41,360 --> 00:17:45,039
so in the short term to get you to be

577
00:17:42,880 --> 00:17:46,799
turned on by default what we've done

578
00:17:45,039 --> 00:17:48,960
is to go through the list of the

579
00:17:46,799 --> 00:17:51,200
avoidable failures and try to

580
00:17:48,960 --> 00:17:52,320
fix them and it's mainly around keeping

581
00:17:51,200 --> 00:17:54,160
track of what devices

582
00:17:52,320 --> 00:17:55,360
are present in a room so that you know

583
00:17:54,160 --> 00:17:57,600
who to encrypt for

584
00:17:55,360 --> 00:18:00,000
and now everybody knows that there are

585
00:17:57,600 --> 00:18:03,760
three hard problems in computer science

586
00:18:00,000 --> 00:18:07,120
of cash and validation off by one errors

587
00:18:03,760 --> 00:18:10,320
and um the idea i guess is that

588
00:18:07,120 --> 00:18:11,840
um here um they're all different classes

589
00:18:10,320 --> 00:18:13,520
of cash and validation problems

590
00:18:11,840 --> 00:18:15,120
that your server knows what devices it

591
00:18:13,520 --> 00:18:15,760
thinks are in a room it needs to

592
00:18:15,120 --> 00:18:19,280
replicate

593
00:18:15,760 --> 00:18:21,120
some that data with other ones so we now

594
00:18:19,280 --> 00:18:21,840
flash the device lists a lot more

595
00:18:21,120 --> 00:18:24,719
aggressively

596
00:18:21,840 --> 00:18:25,678
if we do discover a cache fail and or a

597
00:18:24,720 --> 00:18:27,280
integrity fail

598
00:18:25,679 --> 00:18:28,799
and somebody sends us a message from a

599
00:18:27,280 --> 00:18:30,639
device we've never heard of before

600
00:18:28,799 --> 00:18:32,720
rather than panicking we say well hang

601
00:18:30,640 --> 00:18:34,080
on tell us about that device

602
00:18:32,720 --> 00:18:36,080
and so we've got a whole bunch of

603
00:18:34,080 --> 00:18:38,399
recovery mechanisms in there now

604
00:18:36,080 --> 00:18:39,918
also after a federation outage there was

605
00:18:38,400 --> 00:18:41,200
a class of failures where device links

606
00:18:39,919 --> 00:18:43,039
would not recover properly

607
00:18:41,200 --> 00:18:44,880
i think our record so far has been three

608
00:18:43,039 --> 00:18:46,400
years of a server that came back and

609
00:18:44,880 --> 00:18:47,840
couldn't encrypt messages for me or

610
00:18:46,400 --> 00:18:49,840
amending and it turned out

611
00:18:47,840 --> 00:18:52,080
that it got out of sync three years ago

612
00:18:49,840 --> 00:18:54,720
and never recovered all of these are now

613
00:18:52,080 --> 00:18:56,559
um hopefully fixed and they are in the

614
00:18:54,720 --> 00:18:59,440
release candidate for one top

615
00:18:56,559 --> 00:19:00,000
10 that we went and cut on friday and

616
00:18:59,440 --> 00:19:03,120
should ship

617
00:19:00,000 --> 00:19:05,520
in 1.10 final in the

618
00:19:03,120 --> 00:19:06,719
probably early next week we've also

619
00:19:05,520 --> 00:19:07,600
improved things a lot around the

620
00:19:06,720 --> 00:19:09,120
unavoidable

621
00:19:07,600 --> 00:19:10,320
failures turns out that one of the most

622
00:19:09,120 --> 00:19:11,918
popular reasons for getting an

623
00:19:10,320 --> 00:19:13,840
undescriptible message in matrix

624
00:19:11,919 --> 00:19:15,039
is somebody had blacklisted you and you

625
00:19:13,840 --> 00:19:16,480
couldn't tell because

626
00:19:15,039 --> 00:19:18,400
it was the same well you don't have the

627
00:19:16,480 --> 00:19:20,320
keys and everybody said oh

628
00:19:18,400 --> 00:19:21,440
matrix is terrible because i didn't get

629
00:19:20,320 --> 00:19:23,678
the keys but it turns out

630
00:19:21,440 --> 00:19:25,120
it's because the sender explicitly said

631
00:19:23,679 --> 00:19:27,600
don't send him the keys

632
00:19:25,120 --> 00:19:28,479
so we've now gone and actually put that

633
00:19:27,600 --> 00:19:31,199
in the ui

634
00:19:28,480 --> 00:19:32,559
also um telling the user various

635
00:19:31,200 --> 00:19:34,080
different paths basically

636
00:19:32,559 --> 00:19:35,760
if the sender didn't know the client

637
00:19:34,080 --> 00:19:36,799
existed then we tell the receiver that

638
00:19:35,760 --> 00:19:38,640
was what happened

639
00:19:36,799 --> 00:19:39,840
if the olm session has got wedged

640
00:19:38,640 --> 00:19:41,600
because of

641
00:19:39,840 --> 00:19:43,678
weird corruption we tell them to we're

642
00:19:41,600 --> 00:19:45,600
getting rid of the useless scary

643
00:19:43,679 --> 00:19:47,200
replay attack duplicate message things

644
00:19:45,600 --> 00:19:48,000
which just meant it was a duplicate

645
00:19:47,200 --> 00:19:49,760
message

646
00:19:48,000 --> 00:19:51,360
and also hiding the useless

647
00:19:49,760 --> 00:19:52,320
undecryptable messages that predate you

648
00:19:51,360 --> 00:19:54,320
joining the room

649
00:19:52,320 --> 00:19:56,159
all of that good stuff should shape in

650
00:19:54,320 --> 00:19:59,678
web 1.6 which happens

651
00:19:56,160 --> 00:20:02,559
again in the next week or so

652
00:19:59,679 --> 00:20:02,799
so cross-signing cross-signing has been

653
00:20:02,559 --> 00:20:05,200
an

654
00:20:02,799 --> 00:20:07,360
absolute epic the whole point is to let

655
00:20:05,200 --> 00:20:08,559
users vouch for their own devices so you

656
00:20:07,360 --> 00:20:09,760
don't have to verify everybody

657
00:20:08,559 --> 00:20:11,840
individually every time

658
00:20:09,760 --> 00:20:13,039
they dare to log into a new device on

659
00:20:11,840 --> 00:20:15,439
their account

660
00:20:13,039 --> 00:20:16,640
and we did a very early very very early

661
00:20:15,440 --> 00:20:18,480
demo last year

662
00:20:16,640 --> 00:20:19,840
which was winged together at the last

663
00:20:18,480 --> 00:20:20,159
minute to give a taste of how this could

664
00:20:19,840 --> 00:20:22,158
look

665
00:20:20,159 --> 00:20:23,919
and it was built on matrix spec change

666
00:20:22,159 --> 00:20:25,760
1680

667
00:20:23,919 --> 00:20:27,039
which was just called cross signing and

668
00:20:25,760 --> 00:20:29,120
this is a really cool idea

669
00:20:27,039 --> 00:20:30,158
if you look at the spec it's basically

670
00:20:29,120 --> 00:20:32,320
the idea that any

671
00:20:30,159 --> 00:20:33,679
device can sign any other device it's a

672
00:20:32,320 --> 00:20:35,678
bit like pgp

673
00:20:33,679 --> 00:20:37,360
anybody can sign anybody else is key you

674
00:20:35,679 --> 00:20:40,000
end up with a great big dag

675
00:20:37,360 --> 00:20:41,439
at least of the user's own devices and

676
00:20:40,000 --> 00:20:43,039
that's what we implemented

677
00:20:41,440 --> 00:20:44,640
however it suddenly became clear that it

678
00:20:43,039 --> 00:20:48,000
was a bit too complicated

679
00:20:44,640 --> 00:20:51,039
alice's device a could sign her device

680
00:20:48,000 --> 00:20:52,799
b and then that her device b can sign c

681
00:20:51,039 --> 00:20:54,559
c defines a you've got a loop what

682
00:20:52,799 --> 00:20:56,879
happens if b gets lost

683
00:20:54,559 --> 00:20:58,480
you end up kind of with a fragmented net

684
00:20:56,880 --> 00:20:59,679
splits and truss graph and what the hell

685
00:20:58,480 --> 00:21:01,520
do you do next

686
00:20:59,679 --> 00:21:03,520
um also there was just no central way

687
00:21:01,520 --> 00:21:04,960
for a user as a person to just manage

688
00:21:03,520 --> 00:21:05,840
that mess which is basically the same

689
00:21:04,960 --> 00:21:09,200
problem that

690
00:21:05,840 --> 00:21:12,720
it ends up getting fragmented so msc

691
00:21:09,200 --> 00:21:16,320
1680 got retired

692
00:21:12,720 --> 00:21:18,080
starting over now msc 1756 now called

693
00:21:16,320 --> 00:21:20,639
crosslining with device learning keys

694
00:21:18,080 --> 00:21:21,678
now this is a massive change to matrix

695
00:21:20,640 --> 00:21:24,000
for the first time

696
00:21:21,679 --> 00:21:25,039
we have a per user key it's no longer

697
00:21:24,000 --> 00:21:26,799
per device keys

698
00:21:25,039 --> 00:21:28,480
in fact we have three of them we have

699
00:21:26,799 --> 00:21:29,440
the one that you use to sign your own

700
00:21:28,480 --> 00:21:30,960
devices

701
00:21:29,440 --> 00:21:33,360
you have one that you use to sign other

702
00:21:30,960 --> 00:21:33,760
people's devices and you have the master

703
00:21:33,360 --> 00:21:35,760
key

704
00:21:33,760 --> 00:21:37,679
that goes and signs both of those we've

705
00:21:35,760 --> 00:21:38,879
gone and split them up just for hygiene

706
00:21:37,679 --> 00:21:40,880
because they do different things it

707
00:21:38,880 --> 00:21:44,080
allows you to rotate them separately

708
00:21:40,880 --> 00:21:45,440
um particularly useful um to

709
00:21:44,080 --> 00:21:47,600
basically have different trust levels

710
00:21:45,440 --> 00:21:49,440
for the different keys

711
00:21:47,600 --> 00:21:51,520
um signatures get stored on your home

712
00:21:49,440 --> 00:21:53,440
server we only expose them to users that

713
00:21:51,520 --> 00:21:54,000
they relate to so this is not a big web

714
00:21:53,440 --> 00:21:55,760
of trust

715
00:21:54,000 --> 00:21:57,679
this is a personal web of trust for your

716
00:21:55,760 --> 00:21:59,280
devices and the people that you have

717
00:21:57,679 --> 00:22:01,360
signed

718
00:21:59,280 --> 00:22:03,200
practically speaking looks like that a

719
00:22:01,360 --> 00:22:05,199
for alice has got a master key

720
00:22:03,200 --> 00:22:07,120
she's got a self-signing key and a user

721
00:22:05,200 --> 00:22:09,039
signing key with her user signing keys

722
00:22:07,120 --> 00:22:10,879
to sign bob's master key

723
00:22:09,039 --> 00:22:12,400
bob's master key in turn is signed bob

724
00:22:10,880 --> 00:22:12,799
self signing key and his user signing

725
00:22:12,400 --> 00:22:14,960
key

726
00:22:12,799 --> 00:22:16,080
and bob has a diner book in a vax which

727
00:22:14,960 --> 00:22:18,240
is signed off on

728
00:22:16,080 --> 00:22:19,120
alice has a pdp 11 not to be confused

729
00:22:18,240 --> 00:22:23,120
with the vax

730
00:22:19,120 --> 00:22:25,600
and osborne 2 and most importantly bob

731
00:22:23,120 --> 00:22:27,280
is also mutually verified back to alice

732
00:22:25,600 --> 00:22:30,559
so that's the data structure that we

733
00:22:27,280 --> 00:22:32,240
have going on on the server

734
00:22:30,559 --> 00:22:34,240
we also need a way though to synchronize

735
00:22:32,240 --> 00:22:34,799
these keys between devices and we could

736
00:22:34,240 --> 00:22:36,640
gossip

737
00:22:34,799 --> 00:22:38,639
between them or we can store them

738
00:22:36,640 --> 00:22:40,240
encrypted of course on the server

739
00:22:38,640 --> 00:22:42,480
and this is really very similar to how

740
00:22:40,240 --> 00:22:44,559
we handled the key backups today

741
00:22:42,480 --> 00:22:46,400
if you've got all of your e2e keys what

742
00:22:44,559 --> 00:22:47,039
do you do do you store them encrypted on

743
00:22:46,400 --> 00:22:49,520
the server

744
00:22:47,039 --> 00:22:51,360
or do you go and gossip then key sharing

745
00:22:49,520 --> 00:22:54,879
between the different devices

746
00:22:51,360 --> 00:22:58,080
so we're playing we're doing both

747
00:22:54,880 --> 00:22:59,840
um it's called msc 1946. um

748
00:22:58,080 --> 00:23:01,199
always weird how these line up with like

749
00:22:59,840 --> 00:23:03,280
years um

750
00:23:01,200 --> 00:23:05,280
and it's called quads secure secret

751
00:23:03,280 --> 00:23:07,600
storage and sharing

752
00:23:05,280 --> 00:23:08,879
and it works by storing your secrets and

753
00:23:07,600 --> 00:23:11,120
your account data

754
00:23:08,880 --> 00:23:12,720
ancient matrix api for storing arbitrary

755
00:23:11,120 --> 00:23:14,719
data about yourself

756
00:23:12,720 --> 00:23:17,120
and you can also use it for sharing

757
00:23:14,720 --> 00:23:18,080
directly by two devices between trusted

758
00:23:17,120 --> 00:23:20,080
devices

759
00:23:18,080 --> 00:23:21,760
and i'm afraid it is yet another key

760
00:23:20,080 --> 00:23:22,320
this time it really is the master master

761
00:23:21,760 --> 00:23:24,559
key

762
00:23:22,320 --> 00:23:25,439
it's your quad s master key single most

763
00:23:24,559 --> 00:23:27,840
important one

764
00:23:25,440 --> 00:23:29,200
it replaces the old backup recovery key

765
00:23:27,840 --> 00:23:31,280
and pass phrase and in fact

766
00:23:29,200 --> 00:23:32,400
um when you turn on cross signing the

767
00:23:31,280 --> 00:23:35,520
first thing it will do

768
00:23:32,400 --> 00:23:36,000
is to migrate or bootstrap your old

769
00:23:35,520 --> 00:23:38,240
backup

770
00:23:36,000 --> 00:23:39,919
key and instead replace it by the master

771
00:23:38,240 --> 00:23:43,840
master key which now signs

772
00:23:39,919 --> 00:23:46,000
the um the backup key so very similar to

773
00:23:43,840 --> 00:23:47,520
keybacker the private half should be

774
00:23:46,000 --> 00:23:51,279
stored somewhere secure

775
00:23:47,520 --> 00:23:53,840
offline in a trusted you know protected

776
00:23:51,279 --> 00:23:55,279
part of your os if you have one you only

777
00:23:53,840 --> 00:23:55,760
need to ever provide it when you log

778
00:23:55,279 --> 00:23:58,880
into

779
00:23:55,760 --> 00:24:02,000
new secrets um

780
00:23:58,880 --> 00:24:04,080
or you go and

781
00:24:02,000 --> 00:24:05,440
use it to sign with somebody and this is

782
00:24:04,080 --> 00:24:06,399
actually a bit of an annoyance in some

783
00:24:05,440 --> 00:24:08,080
ways right now

784
00:24:06,400 --> 00:24:09,840
in the whenever you need to unlock your

785
00:24:08,080 --> 00:24:11,760
master secrets in order to write to it

786
00:24:09,840 --> 00:24:15,678
you do need to provide that private key

787
00:24:11,760 --> 00:24:17,200
we're looking at ways to improve this um

788
00:24:15,679 --> 00:24:18,799
so this is particularly annoying on riot

789
00:24:17,200 --> 00:24:20,000
web because you don't have a safe place

790
00:24:18,799 --> 00:24:22,080
to store private keys

791
00:24:20,000 --> 00:24:23,200
so right now we are prompting every time

792
00:24:22,080 --> 00:24:25,439
it needs

793
00:24:23,200 --> 00:24:27,279
it for you to enter your passphrase um

794
00:24:25,440 --> 00:24:29,919
in order to go and sign somebody or to

795
00:24:27,279 --> 00:24:33,279
log into a new device

796
00:24:29,919 --> 00:24:35,360
on the ux side um we've made a

797
00:24:33,279 --> 00:24:37,919
fundamental change we've

798
00:24:35,360 --> 00:24:38,479
shifted to using shields um to try to

799
00:24:37,919 --> 00:24:40,400
describe

800
00:24:38,480 --> 00:24:41,600
trust and we basically have three

801
00:24:40,400 --> 00:24:43,440
different classes here

802
00:24:41,600 --> 00:24:45,199
we've got unknown trust which is a black

803
00:24:43,440 --> 00:24:47,039
shield it means it's encrypted

804
00:24:45,200 --> 00:24:49,520
but you have no reason to particularly

805
00:24:47,039 --> 00:24:51,120
trust or distrust any devices

806
00:24:49,520 --> 00:24:52,960
then separately you've got the red

807
00:24:51,120 --> 00:24:54,799
shield untrusted which means that you

808
00:24:52,960 --> 00:24:55,520
went and explicitly verified somebody in

809
00:24:54,799 --> 00:24:57,440
that room

810
00:24:55,520 --> 00:24:58,799
but they have now gone added in a device

811
00:24:57,440 --> 00:25:00,559
which is not trusted

812
00:24:58,799 --> 00:25:01,840
so they're probably being owned this is

813
00:25:00,559 --> 00:25:03,840
bad news

814
00:25:01,840 --> 00:25:05,199
and then finally trusted which is green

815
00:25:03,840 --> 00:25:06,240
which means that you have not only

816
00:25:05,200 --> 00:25:07,760
trusted the user

817
00:25:06,240 --> 00:25:09,919
but they or you have trusted all of

818
00:25:07,760 --> 00:25:11,039
their devices and so you know for sure

819
00:25:09,919 --> 00:25:14,320
that they are in control

820
00:25:11,039 --> 00:25:14,960
of all of their devices the ux has been

821
00:25:14,320 --> 00:25:18,158
an epic

822
00:25:14,960 --> 00:25:20,159
this is um now it's um wireframes for

823
00:25:18,159 --> 00:25:21,760
infigma for not even wireframes the

824
00:25:20,159 --> 00:25:24,799
actual assets and figma um

825
00:25:21,760 --> 00:25:25,200
for the whole enchilada um if we zoom in

826
00:25:24,799 --> 00:25:26,720
just

827
00:25:25,200 --> 00:25:28,880
one little bit of it you can see all the

828
00:25:26,720 --> 00:25:32,000
various flows being designed there

829
00:25:28,880 --> 00:25:35,279
sorry for all of the ugly mug shots on

830
00:25:32,000 --> 00:25:37,600
android and ios and we basically have

831
00:25:35,279 --> 00:25:38,799
really professionally gone through um

832
00:25:37,600 --> 00:25:40,719
analyzing and designing

833
00:25:38,799 --> 00:25:42,960
all of the cross signing and flows that

834
00:25:40,720 --> 00:25:46,080
we can this has been implemented

835
00:25:42,960 --> 00:25:47,200
in rio x it's also um landed in test

836
00:25:46,080 --> 00:25:50,399
flight on ios

837
00:25:47,200 --> 00:25:51,840
in the majority of it at least um and

838
00:25:50,400 --> 00:25:53,679
apart from qr scanning which i'll come

839
00:25:51,840 --> 00:25:55,918
to in a minute and it's also there on

840
00:25:53,679 --> 00:25:58,080
web develop and hopefully people all

841
00:25:55,919 --> 00:26:01,039
agree it's a massive step up on the ux

842
00:25:58,080 --> 00:26:02,960
and visuals from what we've had before

843
00:26:01,039 --> 00:26:04,400
finally better verification we're

844
00:26:02,960 --> 00:26:06,400
introducing qr codes

845
00:26:04,400 --> 00:26:08,400
as well as emoji this is not killing off

846
00:26:06,400 --> 00:26:12,000
emoji we love the emoji verification

847
00:26:08,400 --> 00:26:14,880
but sometimes it's easier to go than go

848
00:26:12,000 --> 00:26:16,320
tango whatever you know call out emojis

849
00:26:14,880 --> 00:26:18,960
into one another

850
00:26:16,320 --> 00:26:21,200
um the way it works is that you

851
00:26:18,960 --> 00:26:22,400
basically produce a qr code with all of

852
00:26:21,200 --> 00:26:24,320
the keys you want to verify

853
00:26:22,400 --> 00:26:25,840
on it it's not an interactive thing at

854
00:26:24,320 --> 00:26:27,600
the moment so it's actually quite a

855
00:26:25,840 --> 00:26:29,120
complicated qr code because it has a lot

856
00:26:27,600 --> 00:26:30,639
of public keys in it

857
00:26:29,120 --> 00:26:32,719
and you show it to the other person if

858
00:26:30,640 --> 00:26:36,000
it matches their copy of it then they go

859
00:26:32,720 --> 00:26:39,200
and hand shape back and say yup i trust

860
00:26:36,000 --> 00:26:41,039
that qr code and we do this um quite

861
00:26:39,200 --> 00:26:42,000
importantly we do this both inband and

862
00:26:41,039 --> 00:26:44,320
out of band

863
00:26:42,000 --> 00:26:45,200
um to which allows us to mutually verify

864
00:26:44,320 --> 00:26:46,879
the other person

865
00:26:45,200 --> 00:26:48,960
that if we see them physically say yeah

866
00:26:46,880 --> 00:26:51,120
my phone says that that qr code is right

867
00:26:48,960 --> 00:26:52,240
and they and you talk about that in

868
00:26:51,120 --> 00:26:54,158
person

869
00:26:52,240 --> 00:26:55,440
then you've already taken out any

870
00:26:54,159 --> 00:26:57,360
malicious man in the middle

871
00:26:55,440 --> 00:26:58,480
and can say well okay i better trust it

872
00:26:57,360 --> 00:27:00,399
on my side too

873
00:26:58,480 --> 00:27:01,760
so it's a single qr scan to mutually

874
00:27:00,400 --> 00:27:03,679
verify alice and bob

875
00:27:01,760 --> 00:27:05,520
with respect to one another another big

876
00:27:03,679 --> 00:27:07,679
change is as you saw briefly earlier

877
00:27:05,520 --> 00:27:08,799
verification flows are now in your dm

878
00:27:07,679 --> 00:27:11,120
they're not random

879
00:27:08,799 --> 00:27:12,720
modals that pop up and annoy you instead

880
00:27:11,120 --> 00:27:15,120
they are actually in the timeline of the

881
00:27:12,720 --> 00:27:17,600
person that you're talking to

882
00:27:15,120 --> 00:27:19,600
so what's blocked us lots of things

883
00:27:17,600 --> 00:27:21,918
however they are now all solved

884
00:27:19,600 --> 00:27:25,520
so it's now enabled as i said on right

885
00:27:21,919 --> 00:27:27,120
web develop right x and right ios

886
00:27:25,520 --> 00:27:29,200
should we actually try to demo it and

887
00:27:27,120 --> 00:27:32,559
see how well this goes

888
00:27:29,200 --> 00:27:34,399
so here is one that i

889
00:27:32,559 --> 00:27:36,399
there's brawl oh here's one that i made

890
00:27:34,399 --> 00:27:39,918
earlier this is

891
00:27:36,399 --> 00:27:40,320
um already logged on um as a user called

892
00:27:39,919 --> 00:27:44,000
bob

893
00:27:40,320 --> 00:27:47,279
b for bob let me fire up a new incognito

894
00:27:44,000 --> 00:27:49,840
window on a different port or different

895
00:27:47,279 --> 00:27:51,039
address and see what it looks like to

896
00:27:49,840 --> 00:27:52,799
sign up for the first time

897
00:27:51,039 --> 00:27:54,799
in this brave new world so i'm going to

898
00:27:52,799 --> 00:27:57,918
create an account on

899
00:27:54,799 --> 00:28:00,840
my personal server this bob is called

900
00:27:57,919 --> 00:28:03,200
let me see bob10 so i'm going to create

901
00:28:00,840 --> 00:28:06,799
alice10

902
00:28:03,200 --> 00:28:09,039
over secret password

903
00:28:06,799 --> 00:28:10,240
and totally new ui flow already this is

904
00:28:09,039 --> 00:28:14,720
now setting up the

905
00:28:10,240 --> 00:28:14,720
sss master passphrase

906
00:28:15,120 --> 00:28:22,080
so looks and feels um a bit like the old

907
00:28:18,720 --> 00:28:24,399
um um flow and it gives you

908
00:28:22,080 --> 00:28:26,080
um your recovery key to download or copy

909
00:28:24,399 --> 00:28:27,600
i'll go and download it

910
00:28:26,080 --> 00:28:29,600
and this is another thing that wraps

911
00:28:27,600 --> 00:28:33,279
both your e2e backup keys

912
00:28:29,600 --> 00:28:35,439
as well as the cross signing keys

913
00:28:33,279 --> 00:28:36,960
i go and set up the keys there and i'm

914
00:28:35,440 --> 00:28:39,840
done my quads

915
00:28:36,960 --> 00:28:40,720
storage is now set up um i've already

916
00:28:39,840 --> 00:28:44,480
done this on bob

917
00:28:40,720 --> 00:28:46,159
signs let me go and try to start a chat

918
00:28:44,480 --> 00:28:50,559
with bob tan

919
00:28:46,159 --> 00:28:50,559
on aerosphere.net there he is

920
00:28:51,840 --> 00:28:57,520
and hopefully in comes a dm

921
00:28:55,200 --> 00:28:59,120
from alice he start chatting and

922
00:28:57,520 --> 00:29:01,039
everybody noticed that end-to-end

923
00:28:59,120 --> 00:29:02,870
encryption is enabled by default so i do

924
00:29:01,039 --> 00:29:03,950
not have to do anything

925
00:29:02,870 --> 00:29:07,079
[Applause]

926
00:29:03,950 --> 00:29:07,079
[Music]

927
00:29:08,240 --> 00:29:14,000
so obviously i haven't trusted alice yet

928
00:29:11,919 --> 00:29:17,200
so she's coming up with black shield

929
00:29:14,000 --> 00:29:20,240
and likewise bob isn't trusting alice

930
00:29:17,200 --> 00:29:23,039
so let's go into here and start off

931
00:29:20,240 --> 00:29:24,840
with a plain old verification um alice

932
00:29:23,039 --> 00:29:26,399
obviously trusts herself which is

933
00:29:24,840 --> 00:29:29,360
reassuring and

934
00:29:26,399 --> 00:29:31,199
this is the new ui um for bob um for

935
00:29:29,360 --> 00:29:34,080
verifying bob you can go and verify that

936
00:29:31,200 --> 00:29:35,279
hit start verification like so and look

937
00:29:34,080 --> 00:29:36,158
entirely new ui we've got the

938
00:29:35,279 --> 00:29:37,679
verification

939
00:29:36,159 --> 00:29:39,520
coming in in the timeline here we've

940
00:29:37,679 --> 00:29:40,559
also got a toaster pop-up thing in the

941
00:29:39,520 --> 00:29:44,080
top left

942
00:29:40,559 --> 00:29:46,960
let me go over here and accept it and

943
00:29:44,080 --> 00:29:48,720
here are our funky new qr codes now i'm

944
00:29:46,960 --> 00:29:49,600
going to have problems trying to scan my

945
00:29:48,720 --> 00:29:51,840
web from my

946
00:29:49,600 --> 00:29:53,279
web with my web without a mirror and and

947
00:29:51,840 --> 00:29:55,360
practice we haven't implemented

948
00:29:53,279 --> 00:29:56,880
the webcam scanning yet on right web so

949
00:29:55,360 --> 00:29:57,279
i'm going to fall back like the good old

950
00:29:56,880 --> 00:30:00,480
days

951
00:29:57,279 --> 00:30:02,960
to verifying by emoji

952
00:30:00,480 --> 00:30:04,640
and hey presto we've got cloud dog panda

953
00:30:02,960 --> 00:30:05,919
blah blah blah i'm going to say it

954
00:30:04,640 --> 00:30:08,960
matches

955
00:30:05,919 --> 00:30:11,039
and matches here and

956
00:30:08,960 --> 00:30:12,480
now this is the thing i was mentioning

957
00:30:11,039 --> 00:30:14,879
earlier where you have to enter

958
00:30:12,480 --> 00:30:15,600
your own master pass phrase at this

959
00:30:14,880 --> 00:30:18,320
point on

960
00:30:15,600 --> 00:30:19,120
web at least um to go and persist um the

961
00:30:18,320 --> 00:30:21,918
data

962
00:30:19,120 --> 00:30:23,360
um in basically to his sister encrypted

963
00:30:21,919 --> 00:30:25,120
on the server without storing this

964
00:30:23,360 --> 00:30:26,240
passphrase and cashing it around the

965
00:30:25,120 --> 00:30:30,959
place locally

966
00:30:26,240 --> 00:30:30,960
um so let me do that

967
00:30:32,880 --> 00:30:38,399
and hey presto alice and bob now um

968
00:30:35,679 --> 00:30:38,399
trust each other

969
00:30:40,240 --> 00:30:44,000
now so far it's not that exciting

970
00:30:42,320 --> 00:30:46,000
because there's only one device

971
00:30:44,000 --> 00:30:47,679
on bob and alice's side and if we click

972
00:30:46,000 --> 00:30:48,720
on the one verified session we can say

973
00:30:47,679 --> 00:30:50,640
hey yeah there's one on

974
00:30:48,720 --> 00:30:52,480
uh chrome there it's another on chrome

975
00:30:50,640 --> 00:30:56,159
there what would be really fun

976
00:30:52,480 --> 00:30:58,080
is if we fired up riot x so hopefully i

977
00:30:56,159 --> 00:31:00,000
got a riot x this thing about here

978
00:30:58,080 --> 00:31:04,080
somewhere where is it gone not telegram

979
00:31:00,000 --> 00:31:07,440
that's the wrong one

980
00:31:04,080 --> 00:31:10,639
so here is right x um gonna get started

981
00:31:07,440 --> 00:31:11,919
bear with me first i go and log on and

982
00:31:10,640 --> 00:31:14,720
if you haven't seen the registration

983
00:31:11,919 --> 00:31:16,880
flows by the way on riot x it's lovely

984
00:31:14,720 --> 00:31:18,399
um i'm gonna try to remember how to use

985
00:31:16,880 --> 00:31:21,840
android

986
00:31:18,399 --> 00:31:25,229
talk amongst yourselves briefly

987
00:31:21,840 --> 00:31:27,519
i'm going to try to get on to aerosphere

988
00:31:25,230 --> 00:31:30,640
[Music]

989
00:31:27,519 --> 00:31:32,720
i'm going to log in as alice 10 so the

990
00:31:30,640 --> 00:31:35,360
left hand left-hand

991
00:31:32,720 --> 00:31:36,799
user here good job i'm logged out of

992
00:31:35,360 --> 00:31:40,158
whatsapp

993
00:31:36,799 --> 00:31:43,760
um analyst 10

994
00:31:40,159 --> 00:31:43,760
a top secret password

995
00:31:45,200 --> 00:31:51,279
and hopefully welcome to the beta

996
00:31:48,960 --> 00:31:52,080
verified the session now new ui on

997
00:31:51,279 --> 00:31:54,240
alice's side

998
00:31:52,080 --> 00:31:55,120
we've got an unverified device um coming

999
00:31:54,240 --> 00:31:59,279
in

1000
00:31:55,120 --> 00:32:01,039
um i'm gonna hit verify here on android

1001
00:31:59,279 --> 00:32:02,559
and i'm going to say well hang on a

1002
00:32:01,039 --> 00:32:03,360
second is that me i want to review it

1003
00:32:02,559 --> 00:32:06,399
now

1004
00:32:03,360 --> 00:32:07,279
and it says oh okay i can basically

1005
00:32:06,399 --> 00:32:09,678
grant this

1006
00:32:07,279 --> 00:32:10,559
i can verify the new login i'm going to

1007
00:32:09,679 --> 00:32:13,919
click ok

1008
00:32:10,559 --> 00:32:15,360
and up comes the qr code and android you

1009
00:32:13,919 --> 00:32:16,960
can do it either way so android's giving

1010
00:32:15,360 --> 00:32:18,639
a qr code that we can scan if we were

1011
00:32:16,960 --> 00:32:20,720
doing right x to write x

1012
00:32:18,640 --> 00:32:21,679
um in practice i'm going to hit scan the

1013
00:32:20,720 --> 00:32:26,080
code here

1014
00:32:21,679 --> 00:32:29,440
give right x axis to do its thing

1015
00:32:26,080 --> 00:32:32,480
now comes the qr code put that there and

1016
00:32:29,440 --> 00:32:32,480
done that was it

1017
00:32:36,960 --> 00:32:40,000
so the really really exciting thing is

1018
00:32:39,200 --> 00:32:43,039
that

1019
00:32:40,000 --> 00:32:44,960
if we go and look at alice's devices

1020
00:32:43,039 --> 00:32:46,320
here there are now two verified devices

1021
00:32:44,960 --> 00:32:47,760
that's not so surprising because i just

1022
00:32:46,320 --> 00:32:50,639
self-verified myself

1023
00:32:47,760 --> 00:32:51,519
but hopefully if i go and look on this

1024
00:32:50,640 --> 00:32:54,640
side

1025
00:32:51,519 --> 00:32:57,039
yep bob can see both devices

1026
00:32:54,640 --> 00:32:59,279
crosslined with one another so we've got

1027
00:32:57,039 --> 00:33:02,080
the mobile thing here as well as the web

1028
00:32:59,279 --> 00:33:02,640
so cross signing is here it's it's

1029
00:33:02,080 --> 00:33:04,879
pretty

1030
00:33:02,640 --> 00:33:06,480
young we finished it in the bar at the

1031
00:33:04,880 --> 00:33:09,679
hotel at about 2am

1032
00:33:06,480 --> 00:33:12,799
and there may still be some minor issues

1033
00:33:09,679 --> 00:33:14,159
to be resolved on it um the most obvious

1034
00:33:12,799 --> 00:33:17,279
ones

1035
00:33:14,159 --> 00:33:18,640
um are the you really want to initiate

1036
00:33:17,279 --> 00:33:20,399
cross-signing from right web

1037
00:33:18,640 --> 00:33:22,480
that's because we haven't implemented

1038
00:33:20,399 --> 00:33:25,199
sss on mobile yet

1039
00:33:22,480 --> 00:33:27,120
um so what you can um participate in

1040
00:33:25,200 --> 00:33:28,559
cross-signing you can't store the data

1041
00:33:27,120 --> 00:33:30,479
on the server so you end up with a

1042
00:33:28,559 --> 00:33:31,200
slightly brain-damaged world where the

1043
00:33:30,480 --> 00:33:32,960
device

1044
00:33:31,200 --> 00:33:34,320
builds up a local store even though it

1045
00:33:32,960 --> 00:33:35,279
still trusts things which are being

1046
00:33:34,320 --> 00:33:36,879
advertised

1047
00:33:35,279 --> 00:33:38,799
also irritatingly it sounds like we've

1048
00:33:36,880 --> 00:33:39,600
got a minor bug on federation that means

1049
00:33:38,799 --> 00:33:41,360
if you cross sign

1050
00:33:39,600 --> 00:33:42,799
across servers there's some bug we

1051
00:33:41,360 --> 00:33:45,360
haven't found yet it'll be fixed in the

1052
00:33:42,799 --> 00:33:47,519
next couple of days

1053
00:33:45,360 --> 00:33:48,639
so that is where things are at right now

1054
00:33:47,519 --> 00:33:50,960
let me just show you one

1055
00:33:48,640 --> 00:33:52,480
other um quick thing which is go back to

1056
00:33:50,960 --> 00:33:55,279
my real account

1057
00:33:52,480 --> 00:33:56,960
if i can find it and i was going to try

1058
00:33:55,279 --> 00:33:58,880
to show that this isn't snakehole

1059
00:33:56,960 --> 00:34:00,799
by going to nad who designed all of the

1060
00:33:58,880 --> 00:34:02,159
ux like a year ago on this

1061
00:34:00,799 --> 00:34:04,158
and it's taken us all year to implement

1062
00:34:02,159 --> 00:34:05,840
it and vaguely get it to work and

1063
00:34:04,159 --> 00:34:07,919
i haven't verified him yet and so i'm

1064
00:34:05,840 --> 00:34:09,040
going to actually risk going and hitting

1065
00:34:07,919 --> 00:34:11,760
the verify button

1066
00:34:09,040 --> 00:34:13,679
for real on matrix.org hit the start

1067
00:34:11,760 --> 00:34:16,240
verification button

1068
00:34:13,679 --> 00:34:18,159
and hopefully on right x now do you have

1069
00:34:16,239 --> 00:34:20,158
any data

1070
00:34:18,159 --> 00:34:23,440
hopefully it's going to get his um

1071
00:34:20,159 --> 00:34:23,440
verification request coming in

1072
00:34:27,199 --> 00:34:35,040
yeah there it is accept

1073
00:34:31,918 --> 00:34:38,799
except please accept me

1074
00:34:35,040 --> 00:34:41,679
there we go so yep there it is and go

1075
00:34:38,800 --> 00:34:41,679
and scan the thing

1076
00:34:43,520 --> 00:34:48,079
come on you can do it the camera

1077
00:34:46,320 --> 00:34:50,800
refusing to focus on the qr code because

1078
00:34:48,079 --> 00:34:50,800
it's a live demo

1079
00:34:51,760 --> 00:34:55,200
no the problem is it's um over-saturated

1080
00:34:53,839 --> 00:34:58,000
if you go and

1081
00:34:55,199 --> 00:34:58,000
do that

1082
00:34:58,560 --> 00:35:03,839
your camera sucks

1083
00:35:06,960 --> 00:35:10,560
breaking my neck going backwards office

1084
00:35:08,880 --> 00:35:15,040
come on you can do it

1085
00:35:10,560 --> 00:35:15,040
ah i don't know what phone is this

1086
00:35:15,200 --> 00:35:18,960
okay as we said the qr code is quite

1087
00:35:17,359 --> 00:35:20,880
complicated at the moment because it has

1088
00:35:18,960 --> 00:35:24,000
all of those um

1089
00:35:20,880 --> 00:35:25,920
um uh public keys sitting in it and

1090
00:35:24,000 --> 00:35:27,440
we're gonna probably provide an

1091
00:35:25,920 --> 00:35:28,240
alternative that basically takes the

1092
00:35:27,440 --> 00:35:30,400
emoji

1093
00:35:28,240 --> 00:35:32,160
and puts them in it which would be a lot

1094
00:35:30,400 --> 00:35:33,839
smaller but it means that you have to go

1095
00:35:32,160 --> 00:35:36,160
back and forth a couple of times

1096
00:35:33,839 --> 00:35:37,599
but i'm going to blame your phone and

1097
00:35:36,160 --> 00:35:39,200
clean the clear the lens

1098
00:35:37,599 --> 00:35:41,040
okay that was um for the cross signing

1099
00:35:39,200 --> 00:35:42,640
demo i've got what two minutes or

1100
00:35:41,040 --> 00:35:43,279
something to try to show how to break

1101
00:35:42,640 --> 00:35:45,279
this

1102
00:35:43,280 --> 00:35:46,720
which is going to be ambitious i might

1103
00:35:45,280 --> 00:35:49,440
just talk even faster

1104
00:35:46,720 --> 00:35:50,160
apologies breaking matrix our threat

1105
00:35:49,440 --> 00:35:52,079
model

1106
00:35:50,160 --> 00:35:54,000
basically went for it earlier we want to

1107
00:35:52,079 --> 00:35:55,599
protect our data as well as we can we

1108
00:35:54,000 --> 00:35:56,560
want deniability and protection from

1109
00:35:55,599 --> 00:35:58,560
replay attacks

1110
00:35:56,560 --> 00:36:00,000
we don't protect compromised clients we

1111
00:35:58,560 --> 00:36:01,759
don't protect metadata yet

1112
00:36:00,000 --> 00:36:03,200
but if you came to the p2p tour earlier

1113
00:36:01,760 --> 00:36:04,560
you have seen that we're working on

1114
00:36:03,200 --> 00:36:05,680
doing that by moving your server's

1115
00:36:04,560 --> 00:36:07,119
client side

1116
00:36:05,680 --> 00:36:08,640
uh we don't give you perfect forward

1117
00:36:07,119 --> 00:36:10,160
secrecy unless you really want it

1118
00:36:08,640 --> 00:36:12,160
because in practice it's useful to get

1119
00:36:10,160 --> 00:36:13,598
at your history on a new device sure it

1120
00:36:12,160 --> 00:36:14,319
means attackers can also get at your

1121
00:36:13,599 --> 00:36:17,760
history

1122
00:36:14,320 --> 00:36:20,400
but in perhaps um it's um

1123
00:36:17,760 --> 00:36:22,240
more useful to have a slack or whatsapp

1124
00:36:20,400 --> 00:36:23,359
style experience where you can still get

1125
00:36:22,240 --> 00:36:25,839
it you're not whatsapp

1126
00:36:23,359 --> 00:36:26,799
slack or um i know telegram style

1127
00:36:25,839 --> 00:36:27,359
experience where you can get your

1128
00:36:26,800 --> 00:36:29,040
history

1129
00:36:27,359 --> 00:36:30,640
you also don't get transcript

1130
00:36:29,040 --> 00:36:32,880
consistency currently

1131
00:36:30,640 --> 00:36:34,879
uh which is not generally a massive

1132
00:36:32,880 --> 00:36:35,599
concern but the decentralized nature of

1133
00:36:34,880 --> 00:36:37,200
matrix

1134
00:36:35,599 --> 00:36:38,720
means that it's okay for different

1135
00:36:37,200 --> 00:36:40,078
people to have different views of a room

1136
00:36:38,720 --> 00:36:42,319
because of a net split

1137
00:36:40,079 --> 00:36:44,079
so that could possibly be exploited by

1138
00:36:42,320 --> 00:36:45,280
people like deliberately taking messages

1139
00:36:44,079 --> 00:36:47,440
out of context

1140
00:36:45,280 --> 00:36:49,040
but um it comes with the territory at

1141
00:36:47,440 --> 00:36:51,119
the moment

1142
00:36:49,040 --> 00:36:53,119
so lots of ways we can attack this we

1143
00:36:51,119 --> 00:36:54,560
could run in the middle of cs api we can

1144
00:36:53,119 --> 00:36:56,880
steal an access token

1145
00:36:54,560 --> 00:36:58,160
uh we can try to add ghost devices and

1146
00:36:56,880 --> 00:37:01,280
try to get them trusted

1147
00:36:58,160 --> 00:37:02,879
so fake devices we could try to add

1148
00:37:01,280 --> 00:37:04,800
malicious backups which is quite an

1149
00:37:02,880 --> 00:37:06,000
interesting attack vector given we have

1150
00:37:04,800 --> 00:37:08,000
these e2e backups

1151
00:37:06,000 --> 00:37:09,200
a malicious system could say yo of

1152
00:37:08,000 --> 00:37:10,720
course you can trust me

1153
00:37:09,200 --> 00:37:12,720
to go and back up all your mega home

1154
00:37:10,720 --> 00:37:14,720
keys onto my um

1155
00:37:12,720 --> 00:37:16,399
backup you can try to exfoliate the keys

1156
00:37:14,720 --> 00:37:18,480
from the clients i have a whole bunch of

1157
00:37:16,400 --> 00:37:20,320
demos which i now don't have any time

1158
00:37:18,480 --> 00:37:21,920
to show you but it was basically running

1159
00:37:20,320 --> 00:37:24,480
mitm proxy

1160
00:37:21,920 --> 00:37:26,560
as an example with a bad ca to intercept

1161
00:37:24,480 --> 00:37:29,040
all of your https traffic

1162
00:37:26,560 --> 00:37:30,160
and start some stealing access tokens

1163
00:37:29,040 --> 00:37:31,839
and the reality is

1164
00:37:30,160 --> 00:37:33,440
you can see the metadata for sure you

1165
00:37:31,839 --> 00:37:34,960
can still an access token but without

1166
00:37:33,440 --> 00:37:36,800
the old keys from the device

1167
00:37:34,960 --> 00:37:38,320
you're fine you could also try to steal

1168
00:37:36,800 --> 00:37:40,400
the password and hijack

1169
00:37:38,320 --> 00:37:42,160
um which could be useful for social

1170
00:37:40,400 --> 00:37:43,680
engineering uh verification

1171
00:37:42,160 --> 00:37:45,279
and that's probably the nastiest attack

1172
00:37:43,680 --> 00:37:46,879
that we have there at the moment

1173
00:37:45,280 --> 00:37:48,560
um we're looking at doing what we call

1174
00:37:46,880 --> 00:37:50,160
cryptographic login where rather than

1175
00:37:48,560 --> 00:37:53,359
passing the paint password

1176
00:37:50,160 --> 00:37:54,960
in plain text in tls obviously over the

1177
00:37:53,359 --> 00:37:56,640
cs api you instead

1178
00:37:54,960 --> 00:37:59,119
sign something with your private key

1179
00:37:56,640 --> 00:38:01,440
probably your sss private key

1180
00:37:59,119 --> 00:38:03,280
but um we haven't done that yet mainly

1181
00:38:01,440 --> 00:38:05,119
because it would be really complicated

1182
00:38:03,280 --> 00:38:06,480
for developers whereas today it's quite

1183
00:38:05,119 --> 00:38:08,880
nice that you just post your username

1184
00:38:06,480 --> 00:38:10,320
and password and you're in

1185
00:38:08,880 --> 00:38:12,640
we'll probably support both though so

1186
00:38:10,320 --> 00:38:15,920
secure clients can do the more secure

1187
00:38:12,640 --> 00:38:17,680
approach adding ghost devices um yeah a

1188
00:38:15,920 --> 00:38:19,760
compromise server can start creating

1189
00:38:17,680 --> 00:38:21,359
devices we just saw with cross signing

1190
00:38:19,760 --> 00:38:22,800
that it should all come up as a big

1191
00:38:21,359 --> 00:38:24,960
scary red shield

1192
00:38:22,800 --> 00:38:26,960
you can try to then social engineer

1193
00:38:24,960 --> 00:38:28,720
people and say oh don't worry about

1194
00:38:26,960 --> 00:38:30,480
verifying out of band just go and tell

1195
00:38:28,720 --> 00:38:32,399
me the emoji or send me a picture into

1196
00:38:30,480 --> 00:38:33,920
the qr code and it will be fine

1197
00:38:32,400 --> 00:38:36,320
so there's always a risk of social

1198
00:38:33,920 --> 00:38:36,720
engineering attacks within that to force

1199
00:38:36,320 --> 00:38:40,240
the

1200
00:38:36,720 --> 00:38:41,520
malicious device to be verified um and a

1201
00:38:40,240 --> 00:38:42,240
really interesting one that i've been

1202
00:38:41,520 --> 00:38:44,480
obsessed with

1203
00:38:42,240 --> 00:38:46,319
much to everyone's annoyance has been

1204
00:38:44,480 --> 00:38:47,440
shoulder surfing the qr code whilst i

1205
00:38:46,320 --> 00:38:49,760
was messing around

1206
00:38:47,440 --> 00:38:51,359
trying to scan that code what if a

1207
00:38:49,760 --> 00:38:52,640
malicious system in the room has

1208
00:38:51,359 --> 00:38:55,520
compromised my server

1209
00:38:52,640 --> 00:38:56,640
is also scanning the qr code and saying

1210
00:38:55,520 --> 00:38:59,119
no wait no

1211
00:38:56,640 --> 00:39:00,400
absolutely they would have to inject a

1212
00:38:59,119 --> 00:39:01,680
malicious device

1213
00:39:00,400 --> 00:39:03,119
so that you're actually scanning a

1214
00:39:01,680 --> 00:39:03,759
different device to the one that you

1215
00:39:03,119 --> 00:39:06,960
thought you were

1216
00:39:03,760 --> 00:39:10,320
um verifying and you would need to

1217
00:39:06,960 --> 00:39:11,200
go and send the kind of the message back

1218
00:39:10,320 --> 00:39:13,280
to the other guy

1219
00:39:11,200 --> 00:39:15,598
that you have scanned that code in

1220
00:39:13,280 --> 00:39:18,000
practice um

1221
00:39:15,599 --> 00:39:19,440
we mitigate this by doing the outer band

1222
00:39:18,000 --> 00:39:21,040
verification as well as the inbound

1223
00:39:19,440 --> 00:39:21,760
verification that it was then that scan

1224
00:39:21,040 --> 00:39:23,359
the code

1225
00:39:21,760 --> 00:39:25,200
so every time in future you scan

1226
00:39:23,359 --> 00:39:27,359
somebody on qr and it says

1227
00:39:25,200 --> 00:39:28,319
did they actually did you actually scan

1228
00:39:27,359 --> 00:39:29,680
the right person

1229
00:39:28,320 --> 00:39:31,040
it's really important that you do look

1230
00:39:29,680 --> 00:39:32,799
at the other person's phone and see

1231
00:39:31,040 --> 00:39:33,759
whether it's got a big green shield on

1232
00:39:32,800 --> 00:39:35,200
it before you say

1233
00:39:33,760 --> 00:39:36,960
yes of course i signed the person i

1234
00:39:35,200 --> 00:39:39,919
thought i was signing

1235
00:39:36,960 --> 00:39:40,240
uh what else ghost backups we signed

1236
00:39:39,920 --> 00:39:42,160
them

1237
00:39:40,240 --> 00:39:43,919
with the creators om signing key and

1238
00:39:42,160 --> 00:39:46,240
only trust them if we trust that device

1239
00:39:43,920 --> 00:39:48,079
so backup trust uses the same trust

1240
00:39:46,240 --> 00:39:50,479
model that we have elsewhere

1241
00:39:48,079 --> 00:39:51,920
export rating keys probably the worst

1242
00:39:50,480 --> 00:39:52,720
attack here is brute forcing the

1243
00:39:51,920 --> 00:39:54,320
passphrase

1244
00:39:52,720 --> 00:39:55,759
on the server so if you're worried about

1245
00:39:54,320 --> 00:39:57,760
that either make sure you use

1246
00:39:55,760 --> 00:39:59,440
secure passphrases and we're looking at

1247
00:39:57,760 --> 00:40:02,640
ways to enforce that in the client

1248
00:39:59,440 --> 00:40:04,800
or just don't use it um you could also

1249
00:40:02,640 --> 00:40:06,319
try to exfiltrate the message keys

1250
00:40:04,800 --> 00:40:07,760
you really should be using protected

1251
00:40:06,319 --> 00:40:10,240
storage but if there isn't protective

1252
00:40:07,760 --> 00:40:13,200
storage like there basically isn't on

1253
00:40:10,240 --> 00:40:15,598
the web platform then in the end if you

1254
00:40:13,200 --> 00:40:18,720
have an xss and somebody steals the keys

1255
00:40:15,599 --> 00:40:21,440
you're screwed game over

1256
00:40:18,720 --> 00:40:23,118
obviously the famous xkcd is all very

1257
00:40:21,440 --> 00:40:25,280
well going on about these amazing

1258
00:40:23,119 --> 00:40:27,359
attacks and complicated

1259
00:40:25,280 --> 00:40:29,040
vulnerabilities but in practice the

1260
00:40:27,359 --> 00:40:29,598
likelihood is that somebody's going to

1261
00:40:29,040 --> 00:40:32,400
hit you

1262
00:40:29,599 --> 00:40:34,640
with a wrench until they tell you you

1263
00:40:32,400 --> 00:40:37,680
tell them to password

1264
00:40:34,640 --> 00:40:39,118
mls we're experimenting with it um

1265
00:40:37,680 --> 00:40:41,598
if you don't know what mls is go check

1266
00:40:39,119 --> 00:40:42,800
it out decentralized mls is a variation

1267
00:40:41,599 --> 00:40:44,960
that we're playing with

1268
00:40:42,800 --> 00:40:46,800
where we go and decentralize the current

1269
00:40:44,960 --> 00:40:48,800
and centralized sequencing function

1270
00:40:46,800 --> 00:40:50,240
so that it works with matrix it's very

1271
00:40:48,800 --> 00:40:52,560
early days it looks

1272
00:40:50,240 --> 00:40:54,399
promising it could be revolutionary in

1273
00:40:52,560 --> 00:40:56,240
terms of shifting the linear complexity

1274
00:40:54,400 --> 00:40:58,560
to the logarithmic complexity

1275
00:40:56,240 --> 00:40:59,919
that you get with mls other stuff

1276
00:40:58,560 --> 00:41:02,240
metadata mention that

1277
00:40:59,920 --> 00:41:03,200
what's next right x 1.0 coming up real

1278
00:41:02,240 --> 00:41:05,279
soon now

1279
00:41:03,200 --> 00:41:06,720
um first time user experience on right

1280
00:41:05,280 --> 00:41:09,359
web is our big big big thing

1281
00:41:06,720 --> 00:41:11,359
in the coming um months because we've

1282
00:41:09,359 --> 00:41:12,720
spent a lot of time focusing on e to e

1283
00:41:11,359 --> 00:41:15,520
now we need to get the rest of the app

1284
00:41:12,720 --> 00:41:17,919
looking as sexy as the new e2e flows

1285
00:41:15,520 --> 00:41:19,359
communities have to be reworked that's

1286
00:41:17,920 --> 00:41:21,040
next on the list after that

1287
00:41:19,359 --> 00:41:22,799
and then a whole bunch of other things

1288
00:41:21,040 --> 00:41:25,520
probably the most exciting

1289
00:41:22,800 --> 00:41:27,440
is the p2p work um also dendrite

1290
00:41:25,520 --> 00:41:29,200
development is running again

1291
00:41:27,440 --> 00:41:31,119
one of the original dendrite developers

1292
00:41:29,200 --> 00:41:32,799
keegan has come back to work full time

1293
00:41:31,119 --> 00:41:35,200
on matrix as of last week

1294
00:41:32,800 --> 00:41:37,280
and so we should see both work from him

1295
00:41:35,200 --> 00:41:39,680
and other folks in the p2p world

1296
00:41:37,280 --> 00:41:40,880
also reputation work has to be done

1297
00:41:39,680 --> 00:41:42,879
otherwise we're going to have

1298
00:41:40,880 --> 00:41:44,560
really interesting social problems like

1299
00:41:42,880 --> 00:41:49,839
twitter does today

1300
00:41:44,560 --> 00:41:49,839
going forwards and that's it thank you

1301
00:41:55,119 --> 00:42:02,160
thank you matthew i hope nsa is scared

1302
00:41:59,119 --> 00:42:04,960
so now cuyande please again

1303
00:42:02,160 --> 00:42:05,920
uh if you want to exit crawl really

1304
00:42:04,960 --> 00:42:09,119
silently

1305
00:42:05,920 --> 00:42:10,880
or just better stay in places and one

1306
00:42:09,119 --> 00:42:14,000
person one question and please

1307
00:42:10,880 --> 00:42:14,640
raise your hands in advance so yeah i

1308
00:42:14,000 --> 00:42:18,319
will move

1309
00:42:14,640 --> 00:42:19,118
around and i will start hi first of all

1310
00:42:18,319 --> 00:42:20,480
i want to thank you

1311
00:42:19,119 --> 00:42:22,720
very much for all of your hard work on

1312
00:42:20,480 --> 00:42:23,680
this and it's amazing software and it's

1313
00:42:22,720 --> 00:42:25,598
come so far

1314
00:42:23,680 --> 00:42:27,440
um i've watched it evolve and it's just

1315
00:42:25,599 --> 00:42:30,079
amazing um

1316
00:42:27,440 --> 00:42:30,960
but i was curious as uh just as kind of

1317
00:42:30,079 --> 00:42:32,720
a question about

1318
00:42:30,960 --> 00:42:34,079
like like all this crossing stuff is

1319
00:42:32,720 --> 00:42:37,118
absolutely wonderful

1320
00:42:34,079 --> 00:42:39,839
um i was wondering if you had any uh

1321
00:42:37,119 --> 00:42:41,520
thoughts about the admin user of a

1322
00:42:39,839 --> 00:42:44,560
synapse instance being able to

1323
00:42:41,520 --> 00:42:46,480
pre-verify devices so for example like

1324
00:42:44,560 --> 00:42:49,279
in an organization or something

1325
00:42:46,480 --> 00:42:51,200
if you have company provided devices if

1326
00:42:49,280 --> 00:42:54,720
you could have the admin user

1327
00:42:51,200 --> 00:42:58,240
be the only trusted user and sign

1328
00:42:54,720 --> 00:42:59,919
devices on a device by device basis

1329
00:42:58,240 --> 00:43:02,319
yep for sure well first of all thank you

1330
00:42:59,920 --> 00:43:04,560
for kind words about it and i should say

1331
00:43:02,319 --> 00:43:05,599
also thank you to the whole matrix team

1332
00:43:04,560 --> 00:43:06,880
who have been

1333
00:43:05,599 --> 00:43:08,640
killing themselves trying to get this

1334
00:43:06,880 --> 00:43:09,280
thing out the door i've had very little

1335
00:43:08,640 --> 00:43:11,200
to do with

1336
00:43:09,280 --> 00:43:12,640
basically any of this other than writing

1337
00:43:11,200 --> 00:43:13,759
some slides at the end of it and

1338
00:43:12,640 --> 00:43:16,879
screwing up the demos

1339
00:43:13,760 --> 00:43:19,760
so um thanks to the matrix guys

1340
00:43:16,880 --> 00:43:21,040
in terms of the actual question yes we

1341
00:43:19,760 --> 00:43:23,200
designed the use case

1342
00:43:21,040 --> 00:43:24,640
where as a special case you can have a

1343
00:43:23,200 --> 00:43:27,439
very limited web of trust

1344
00:43:24,640 --> 00:43:29,440
where if you want to delegate your trust

1345
00:43:27,440 --> 00:43:31,839
to some other user like a system

1346
00:43:29,440 --> 00:43:33,599
who's provisioned your device then you

1347
00:43:31,839 --> 00:43:36,319
would at the protocol level today

1348
00:43:33,599 --> 00:43:37,119
be able to sign or they would be able to

1349
00:43:36,319 --> 00:43:38,640
sign off on you

1350
00:43:37,119 --> 00:43:40,240
and if you chose to sign them rather

1351
00:43:38,640 --> 00:43:42,879
than having to manually do it

1352
00:43:40,240 --> 00:43:43,919
um you'll be able to do that it's a bit

1353
00:43:42,880 --> 00:43:45,599
of an edge case

1354
00:43:43,920 --> 00:43:47,119
we don't have it in the ux today you saw

1355
00:43:45,599 --> 00:43:48,560
what a nightmare the ux is to get right

1356
00:43:47,119 --> 00:43:50,560
just for the kind of

1357
00:43:48,560 --> 00:43:52,000
simple flows without also having oh now

1358
00:43:50,560 --> 00:43:53,119
we've got a new class of user who can

1359
00:43:52,000 --> 00:43:55,040
sign off on people

1360
00:43:53,119 --> 00:43:56,720
but from a enterprise and also a

1361
00:43:55,040 --> 00:43:57,359
government perspective i'm sure you can

1362
00:43:56,720 --> 00:43:58,959
imagine

1363
00:43:57,359 --> 00:44:00,960
the france who have been end-to-end

1364
00:43:58,960 --> 00:44:02,880
encrypted since april of last year

1365
00:44:00,960 --> 00:44:04,079
are quite interested in the idea where

1366
00:44:02,880 --> 00:44:06,000
when you onboard somebody

1367
00:44:04,079 --> 00:44:07,920
into a company or department there's

1368
00:44:06,000 --> 00:44:09,119
just one person who is trusted to go

1369
00:44:07,920 --> 00:44:11,520
with the qr code

1370
00:44:09,119 --> 00:44:12,720
rather than everybody having to be a fun

1371
00:44:11,520 --> 00:44:14,319
thing socially to do

1372
00:44:12,720 --> 00:44:16,000
got to meet everybody in the company to

1373
00:44:14,319 --> 00:44:17,520
kind of verify but

1374
00:44:16,000 --> 00:44:19,680
not always practical if you're five and

1375
00:44:17,520 --> 00:44:23,040
a half million public sector

1376
00:44:19,680 --> 00:44:25,040
employees in france

1377
00:44:23,040 --> 00:44:26,560
hey so you mentioned the really

1378
00:44:25,040 --> 00:44:29,040
sensitive um

1379
00:44:26,560 --> 00:44:30,720
quad s key uh what kind of key is that

1380
00:44:29,040 --> 00:44:32,720
and is there the potential

1381
00:44:30,720 --> 00:44:33,919
to store that on a smart card or a

1382
00:44:32,720 --> 00:44:35,839
yubikey in the future

1383
00:44:33,920 --> 00:44:37,280
so it's a curve two five five one nine

1384
00:44:35,839 --> 00:44:38,640
um key pair

1385
00:44:37,280 --> 00:44:40,800
and the private side of it could

1386
00:44:38,640 --> 00:44:44,160
absolutely be stored somewhere safe

1387
00:44:40,800 --> 00:44:45,520
um there's one of the reasons we haven't

1388
00:44:44,160 --> 00:44:47,359
implemented sss

1389
00:44:45,520 --> 00:44:48,560
on mobile is that we want to do it right

1390
00:44:47,359 --> 00:44:50,000
we don't want to just check the private

1391
00:44:48,560 --> 00:44:52,078
key on the file system we want

1392
00:44:50,000 --> 00:44:54,400
to integrate with whatever the correct

1393
00:44:52,079 --> 00:44:56,800
latest android and ios

1394
00:44:54,400 --> 00:44:58,880
secure apis are so that you have to do

1395
00:44:56,800 --> 00:45:00,640
face id or touch id or whatever

1396
00:44:58,880 --> 00:45:02,720
to guess it and the next step beyond

1397
00:45:00,640 --> 00:45:04,160
that would be to integrate with is a web

1398
00:45:02,720 --> 00:45:06,560
authentication or whatever

1399
00:45:04,160 --> 00:45:08,078
the um uh web apis are so you can put it

1400
00:45:06,560 --> 00:45:11,040
down into a smart card or

1401
00:45:08,079 --> 00:45:12,000
a tracer or whatever you're playing with

1402
00:45:11,040 --> 00:45:14,960
so yeah we want to

1403
00:45:12,000 --> 00:45:16,640
but no this is pretty new thank you so

1404
00:45:14,960 --> 00:45:18,560
much for working on the user experience

1405
00:45:16,640 --> 00:45:18,960
for secure messaging it's such a hard

1406
00:45:18,560 --> 00:45:21,440
thing

1407
00:45:18,960 --> 00:45:23,040
to get right and in the free world we've

1408
00:45:21,440 --> 00:45:24,960
struggled with this for so long

1409
00:45:23,040 --> 00:45:26,960
my question is sort of similar what are

1410
00:45:24,960 --> 00:45:27,680
your thoughts about separating the ux

1411
00:45:26,960 --> 00:45:29,680
for

1412
00:45:27,680 --> 00:45:31,759
the master key versus the master master

1413
00:45:29,680 --> 00:45:34,078
key or the quad s key

1414
00:45:31,760 --> 00:45:34,800
yeah um well as you probably know as you

1415
00:45:34,079 --> 00:45:37,440
kind of saw

1416
00:45:34,800 --> 00:45:38,079
um the only ux exposed to the user here

1417
00:45:37,440 --> 00:45:40,560
is the top

1418
00:45:38,079 --> 00:45:41,119
of the pyramid it's the master triple

1419
00:45:40,560 --> 00:45:43,040
quad s

1420
00:45:41,119 --> 00:45:44,560
and key previously it was the next level

1421
00:45:43,040 --> 00:45:46,880
below the backup key

1422
00:45:44,560 --> 00:45:47,839
but when you upgrade an existing account

1423
00:45:46,880 --> 00:45:49,520
to use this

1424
00:45:47,839 --> 00:45:50,799
there is a bootstrapping flow which is

1425
00:45:49,520 --> 00:45:51,839
basically hey you need to enter your

1426
00:45:50,800 --> 00:45:53,920
passphrase again

1427
00:45:51,839 --> 00:45:54,960
and then you never see the ux for the

1428
00:45:53,920 --> 00:45:58,000
next layer down

1429
00:45:54,960 --> 00:45:58,640
but you're so right that we were idiots

1430
00:45:58,000 --> 00:46:01,119
honestly

1431
00:45:58,640 --> 00:46:01,839
back in 2015 when we first announced

1432
00:46:01,119 --> 00:46:04,400
this and we'd

1433
00:46:01,839 --> 00:46:06,000
gone and got it audited and we got olm

1434
00:46:04,400 --> 00:46:07,280
and meg oh we've done the cryptography

1435
00:46:06,000 --> 00:46:10,400
how how can this be

1436
00:46:07,280 --> 00:46:13,520
and it turns out that it's 98 ux

1437
00:46:10,400 --> 00:46:15,040
and 2 cryptography and nobody seems to

1438
00:46:13,520 --> 00:46:17,599
literally spell it out that literally

1439
00:46:15,040 --> 00:46:19,839
but um no big good austin ed

1440
00:46:17,599 --> 00:46:20,640
for having an amazing smartphone and

1441
00:46:19,839 --> 00:46:22,400
also for

1442
00:46:20,640 --> 00:46:28,240
going through the nightmare of and

1443
00:46:22,400 --> 00:46:31,280
designing the ux for it

1444
00:46:28,240 --> 00:46:31,759
hey um thanks to you and the matrix team

1445
00:46:31,280 --> 00:46:33,680
for

1446
00:46:31,760 --> 00:46:34,800
uh making matrix and especially for the

1447
00:46:33,680 --> 00:46:36,078
cross signings i've been waiting for

1448
00:46:34,800 --> 00:46:37,920
that for years

1449
00:46:36,079 --> 00:46:39,200
um so my question is particularly

1450
00:46:37,920 --> 00:46:41,440
related to the unable to decrypt

1451
00:46:39,200 --> 00:46:44,319
messages i saw that in 1.10

1452
00:46:41,440 --> 00:46:45,040
you're going to be hiding messages sent

1453
00:46:44,319 --> 00:46:47,680
when

1454
00:46:45,040 --> 00:46:49,359
before the person joined the room but

1455
00:46:47,680 --> 00:46:49,919
there is a common use case which is

1456
00:46:49,359 --> 00:46:51,598
normally

1457
00:46:49,920 --> 00:46:53,520
at least before you return on end to end

1458
00:46:51,599 --> 00:46:55,760
encryption and then you'll say hey

1459
00:46:53,520 --> 00:46:56,960
i turned on encryption how's everything

1460
00:46:55,760 --> 00:46:58,640
what you're doing but the thing is the

1461
00:46:56,960 --> 00:47:00,480
person hasn't joined the room yet

1462
00:46:58,640 --> 00:47:02,240
so those messages are all you know

1463
00:47:00,480 --> 00:47:04,720
unable to decrypt and now that it's

1464
00:47:02,240 --> 00:47:05,520
enabled by default if i say hey they're

1465
00:47:04,720 --> 00:47:06,799
not going to be able to read that

1466
00:47:05,520 --> 00:47:09,599
message because they're not in here

1467
00:47:06,800 --> 00:47:10,800
so in theory that should work for the

1468
00:47:09,599 --> 00:47:13,920
last year or so

1469
00:47:10,800 --> 00:47:16,240
uh because i wrote it in practice

1470
00:47:13,920 --> 00:47:17,680
um people sometimes ask this question

1471
00:47:16,240 --> 00:47:18,160
which makes me wonder whether it doesn't

1472
00:47:17,680 --> 00:47:19,520
work

1473
00:47:18,160 --> 00:47:20,960
certainly for the first couple of years

1474
00:47:19,520 --> 00:47:21,359
of matrix it was a very common failure

1475
00:47:20,960 --> 00:47:23,440
mode

1476
00:47:21,359 --> 00:47:25,440
you dm somebody turn on encryption send

1477
00:47:23,440 --> 00:47:26,960
some messages they'd join and then say

1478
00:47:25,440 --> 00:47:28,720
and you'd have to copy-paste it and look

1479
00:47:26,960 --> 00:47:30,240
awful it really really upset me

1480
00:47:28,720 --> 00:47:32,078
to the extent that i went and got into

1481
00:47:30,240 --> 00:47:34,160
the depths of zen apps and basically

1482
00:47:32,079 --> 00:47:35,440
um it tries to preemptively share your

1483
00:47:34,160 --> 00:47:37,200
keys when you invite somebody

1484
00:47:35,440 --> 00:47:38,480
rather than when they join there are a

1485
00:47:37,200 --> 00:47:42,078
couple of edge cases

1486
00:47:38,480 --> 00:47:43,839
which can go a bit wrong because um

1487
00:47:42,079 --> 00:47:45,520
basically if the person's on another

1488
00:47:43,839 --> 00:47:48,240
server you don't know

1489
00:47:45,520 --> 00:47:48,880
um and they're not in any rooms on your

1490
00:47:48,240 --> 00:47:50,479
server

1491
00:47:48,880 --> 00:47:51,839
you don't know what devices they have so

1492
00:47:50,480 --> 00:47:53,280
you can snapshot it but there's no

1493
00:47:51,839 --> 00:47:54,799
reason why they should continue to

1494
00:47:53,280 --> 00:47:56,160
attend new device stuff

1495
00:47:54,800 --> 00:47:57,839
until they've actually joined a room

1496
00:47:56,160 --> 00:48:00,319
otherwise you have a dos vector

1497
00:47:57,839 --> 00:48:01,520
where i could invite everybody in this

1498
00:48:00,319 --> 00:48:03,279
room to

1499
00:48:01,520 --> 00:48:05,040
my random server and they wouldn't have

1500
00:48:03,280 --> 00:48:05,680
to accept the invite just the active

1501
00:48:05,040 --> 00:48:07,279
inviting

1502
00:48:05,680 --> 00:48:09,200
would be enough to get them to start

1503
00:48:07,280 --> 00:48:10,720
telling me all of their device data

1504
00:48:09,200 --> 00:48:12,558
and on the plus side it means i can

1505
00:48:10,720 --> 00:48:13,759
encrypt messages for all of those people

1506
00:48:12,559 --> 00:48:16,800
whether they want it or not

1507
00:48:13,760 --> 00:48:17,280
but in practice i might wait for them to

1508
00:48:16,800 --> 00:48:18,880
join

1509
00:48:17,280 --> 00:48:20,720
so basically it should work if it

1510
00:48:18,880 --> 00:48:23,040
doesn't it's worth filing a bug

1511
00:48:20,720 --> 00:48:25,439
and i'll go and try to work out what i

1512
00:48:23,040 --> 00:48:25,440
did wrong

1513
00:48:29,280 --> 00:48:32,319
okay yeah so you might have hit that

1514
00:48:30,880 --> 00:48:34,319
edge case

1515
00:48:32,319 --> 00:48:36,400
honestly to fix that we probably need to

1516
00:48:34,319 --> 00:48:38,160
fix how deviceless synchronization works

1517
00:48:36,400 --> 00:48:38,800
entirely it's back to the original

1518
00:48:38,160 --> 00:48:40,319
problem

1519
00:48:38,800 --> 00:48:41,839
um that i was talking about is the

1520
00:48:40,319 --> 00:48:44,079
fundamental mega problem

1521
00:48:41,839 --> 00:48:45,599
that the device list data in the key

1522
00:48:44,079 --> 00:48:46,319
replication doesn't follow the path for

1523
00:48:45,599 --> 00:48:48,000
the messages

1524
00:48:46,319 --> 00:48:49,520
so you can end up with messages that

1525
00:48:48,000 --> 00:48:51,440
have gone somewhere but the keys haven't

1526
00:48:49,520 --> 00:48:54,720
got there yet

1527
00:48:51,440 --> 00:48:55,839
hi um thank you for your work and uh

1528
00:48:54,720 --> 00:48:57,839
you mentioned in the beginning that

1529
00:48:55,839 --> 00:48:58,480
metrics or one of the main goals of

1530
00:48:57,839 --> 00:49:01,359
metrics

1531
00:48:58,480 --> 00:49:02,720
is bridging together different protocols

1532
00:49:01,359 --> 00:49:04,960
and coming from the

1533
00:49:02,720 --> 00:49:06,399
xmpp community i'm also very interested

1534
00:49:04,960 --> 00:49:09,440
in that but

1535
00:49:06,400 --> 00:49:10,640
that kind of is an orthogonal goal to

1536
00:49:09,440 --> 00:49:13,599
end-to-end encryption

1537
00:49:10,640 --> 00:49:14,078
sure and so i'm wondering if do you have

1538
00:49:13,599 --> 00:49:17,359
plans

1539
00:49:14,079 --> 00:49:17,760
on protocol enter encryption like i

1540
00:49:17,359 --> 00:49:20,880
think

1541
00:49:17,760 --> 00:49:21,599
mls kind of touched on that with the

1542
00:49:20,880 --> 00:49:24,640
federation

1543
00:49:21,599 --> 00:49:27,359
document in the work group but

1544
00:49:24,640 --> 00:49:29,759
are there plans to i don't know have

1545
00:49:27,359 --> 00:49:32,319
like a common message

1546
00:49:29,760 --> 00:49:33,200
format protocol that you can use to send

1547
00:49:32,319 --> 00:49:35,920
uh

1548
00:49:33,200 --> 00:49:36,640
rich content messages from xm3 to matrix

1549
00:49:35,920 --> 00:49:38,800
for example

1550
00:49:36,640 --> 00:49:40,640
so at the cryptographic layer we

1551
00:49:38,800 --> 00:49:42,079
absolutely want to be

1552
00:49:40,640 --> 00:49:43,920
speaking the same language as everybody

1553
00:49:42,079 --> 00:49:45,760
else that's why we implemented olm as a

1554
00:49:43,920 --> 00:49:47,280
clone of lib signal protocol

1555
00:49:45,760 --> 00:49:50,079
so that we were speaking the same thing

1556
00:49:47,280 --> 00:49:52,240
that omamo was that

1557
00:49:50,079 --> 00:49:53,119
signal whatsapp skype all these

1558
00:49:52,240 --> 00:49:55,759
different projects

1559
00:49:53,119 --> 00:49:56,319
had adopted the same um cryptographic

1560
00:49:55,760 --> 00:49:58,480
level

1561
00:49:56,319 --> 00:50:00,079
layer but the problem is the the

1562
00:49:58,480 --> 00:50:01,280
application layer on top is completely

1563
00:50:00,079 --> 00:50:04,079
orthogonal to

1564
00:50:01,280 --> 00:50:05,040
the crypto transport beneath it and so

1565
00:50:04,079 --> 00:50:08,079
it's all very well

1566
00:50:05,040 --> 00:50:10,240
speaking the same dialects of um uh the

1567
00:50:08,079 --> 00:50:11,839
sort of line the obvious the transport

1568
00:50:10,240 --> 00:50:13,200
layer or obviously the message layer

1569
00:50:11,839 --> 00:50:15,680
security in the case of

1570
00:50:13,200 --> 00:50:17,680
mls whereas in practice you're going to

1571
00:50:15,680 --> 00:50:20,799
need to either convert between

1572
00:50:17,680 --> 00:50:22,319
xmpp stanzas and matrix events and the

1573
00:50:20,800 --> 00:50:23,760
totally different semantics of the two

1574
00:50:22,319 --> 00:50:26,160
different protocols

1575
00:50:23,760 --> 00:50:27,520
or you have a multi-headed approach

1576
00:50:26,160 --> 00:50:28,319
effectively where the client needs to

1577
00:50:27,520 --> 00:50:31,759
speak both

1578
00:50:28,319 --> 00:50:33,839
which is feeling increasingly icky so

1579
00:50:31,760 --> 00:50:35,119
um our solution to this is to look at

1580
00:50:33,839 --> 00:50:37,040
client-side bridging

1581
00:50:35,119 --> 00:50:38,480
and it's something that the p2p stuff

1582
00:50:37,040 --> 00:50:41,839
really helps us towards

1583
00:50:38,480 --> 00:50:42,160
that it's not quite um multi-head client

1584
00:50:41,839 --> 00:50:43,839
uh

1585
00:50:42,160 --> 00:50:45,520
well it's not a multi-head messenger

1586
00:50:43,839 --> 00:50:46,078
like game or whatever game is called

1587
00:50:45,520 --> 00:50:49,040
nowadays

1588
00:50:46,079 --> 00:50:50,000
and trillion or whatever um instead it's

1589
00:50:49,040 --> 00:50:51,520
um

1590
00:50:50,000 --> 00:50:53,119
that you'd have your matrix line sitting

1591
00:50:51,520 --> 00:50:55,119
there and if you want to run a bifrost

1592
00:50:53,119 --> 00:50:56,640
which is our matrix to xmpp bridge and

1593
00:50:55,119 --> 00:50:58,640
you want to run it locally on the

1594
00:50:56,640 --> 00:51:00,078
laptop or even on your phone then you

1595
00:50:58,640 --> 00:51:01,118
can plug these relatively lightweight

1596
00:51:00,079 --> 00:51:03,359
bridges in locally

1597
00:51:01,119 --> 00:51:05,359
and it will go and encrypt over uh

1598
00:51:03,359 --> 00:51:07,839
matrix or it will talk x and ppp

1599
00:51:05,359 --> 00:51:08,720
natively out from that and keeping the

1600
00:51:07,839 --> 00:51:11,680
encryption

1601
00:51:08,720 --> 00:51:13,040
intact so we've been playing with it a

1602
00:51:11,680 --> 00:51:14,160
bit and there are people who actually

1603
00:51:13,040 --> 00:51:16,800
know looking at doing this quite

1604
00:51:14,160 --> 00:51:19,440
seriously and we also want to

1605
00:51:16,800 --> 00:51:20,000
federate as well as we can we'll bridge

1606
00:51:19,440 --> 00:51:22,319
i should say

1607
00:51:20,000 --> 00:51:24,559
as well as we can with x and vp and at

1608
00:51:22,319 --> 00:51:26,240
least have the clear text re-encryption

1609
00:51:24,559 --> 00:51:28,800
domain under the user's control

1610
00:51:26,240 --> 00:51:30,399
rather than some horrific bridge in the

1611
00:51:28,800 --> 00:51:33,119
sky somewhere which is breeding

1612
00:51:30,400 --> 00:51:33,119
everyone's traffic

1613
00:51:33,920 --> 00:51:38,319
hi thanks for the amazing work being an

1614
00:51:36,480 --> 00:51:41,200
initiative being done on matrix

1615
00:51:38,319 --> 00:51:42,558
uh my question is uh how is the user

1616
00:51:41,200 --> 00:51:47,919
experience going to be for

1617
00:51:42,559 --> 00:51:47,920
revoking or untrusting uh other members

1618
00:51:49,440 --> 00:51:53,280
yeah different devices from your own

1619
00:51:51,119 --> 00:51:54,480
account that you don't recognize anymore

1620
00:51:53,280 --> 00:51:56,880
as being secure

1621
00:51:54,480 --> 00:51:58,640
and uh and then what happens if the

1622
00:51:56,880 --> 00:52:00,000
network partitions is the remote server

1623
00:51:58,640 --> 00:52:02,879
is going to continue uh

1624
00:52:00,000 --> 00:52:03,520
encrypting well the remote clients yeah

1625
00:52:02,880 --> 00:52:05,760
excellent

1626
00:52:03,520 --> 00:52:06,960
excellent question so basically where is

1627
00:52:05,760 --> 00:52:08,800
the untrust button

1628
00:52:06,960 --> 00:52:10,800
on the ui and the fact is that we

1629
00:52:08,800 --> 00:52:12,720
haven't implemented it on the new ui we

1630
00:52:10,800 --> 00:52:16,319
had it on the old ui

1631
00:52:12,720 --> 00:52:19,439
um and uh there's literally a bug

1632
00:52:16,319 --> 00:52:20,160
that we still have um solved and will

1633
00:52:19,440 --> 00:52:21,680
stop us

1634
00:52:20,160 --> 00:52:23,040
it's a release blocker before we

1635
00:52:21,680 --> 00:52:25,118
actually push this out of all the

1636
00:52:23,040 --> 00:52:27,200
developed ones that we cut yesterday

1637
00:52:25,119 --> 00:52:28,720
in terms of how that works with

1638
00:52:27,200 --> 00:52:30,399
federation well that's more of a

1639
00:52:28,720 --> 00:52:32,078
philosophical question i mean this is a

1640
00:52:30,400 --> 00:52:34,880
causality thing if a

1641
00:52:32,079 --> 00:52:36,319
tree gets um unverified in the woods and

1642
00:52:34,880 --> 00:52:37,359
no one is there to see it did it really

1643
00:52:36,319 --> 00:52:39,920
get unverified

1644
00:52:37,359 --> 00:52:40,799
i mean likewise if there's a net split

1645
00:52:39,920 --> 00:52:42,480
and i happen to have

1646
00:52:40,800 --> 00:52:43,440
verified myself here and you physically

1647
00:52:42,480 --> 00:52:44,960
can't see it because you're not

1648
00:52:43,440 --> 00:52:47,440
physically connected to me

1649
00:52:44,960 --> 00:52:48,880
i'm sorry but matrix is amazing but we

1650
00:52:47,440 --> 00:52:49,920
haven't quite solved that causality

1651
00:52:48,880 --> 00:52:51,680
problem yet

1652
00:52:49,920 --> 00:52:53,040
but i'm working on it in vr with ping

1653
00:52:51,680 --> 00:52:54,799
pong but that's an entirely different

1654
00:52:53,040 --> 00:52:59,359
story

1655
00:52:54,800 --> 00:53:02,720
uh hi it's kind of going further on

1656
00:52:59,359 --> 00:53:06,160
the question about an admin signing

1657
00:53:02,720 --> 00:53:09,359
people in the room could you

1658
00:53:06,160 --> 00:53:12,558
have like degrees of trust based on how

1659
00:53:09,359 --> 00:53:13,359
many people that you trust trust someone

1660
00:53:12,559 --> 00:53:14,880
new

1661
00:53:13,359 --> 00:53:16,720
the reason we haven't done that is

1662
00:53:14,880 --> 00:53:18,400
because of the metadata leak you start

1663
00:53:16,720 --> 00:53:20,319
to build a social graph you start to

1664
00:53:18,400 --> 00:53:22,079
build a pgp style web of trust

1665
00:53:20,319 --> 00:53:23,359
and if you ever looked at the pgp web of

1666
00:53:22,079 --> 00:53:25,839
trust a

1667
00:53:23,359 --> 00:53:27,279
it's terrifying because there are so

1668
00:53:25,839 --> 00:53:28,640
many completely weird

1669
00:53:27,280 --> 00:53:30,400
spotlight things which have never

1670
00:53:28,640 --> 00:53:32,319
verified anybody in it and the rest of

1671
00:53:30,400 --> 00:53:33,920
it is terrifying because it's a really

1672
00:53:32,319 --> 00:53:35,920
direct social graph of

1673
00:53:33,920 --> 00:53:37,920
every human on the planet who's a real

1674
00:53:35,920 --> 00:53:38,559
geek who's gone to a fosdem pgp signing

1675
00:53:37,920 --> 00:53:40,240
party

1676
00:53:38,559 --> 00:53:41,760
in order to shake hands with people and

1677
00:53:40,240 --> 00:53:44,799
that's quite valuable information

1678
00:53:41,760 --> 00:53:47,359
so we do not want to build up a big

1679
00:53:44,800 --> 00:53:48,559
web of trust even with indirect degrees

1680
00:53:47,359 --> 00:53:50,960
of separation

1681
00:53:48,559 --> 00:53:52,640
on the reputation side of things totally

1682
00:53:50,960 --> 00:53:54,720
separately to cross signing though

1683
00:53:52,640 --> 00:53:56,319
we are looking at doing stuff like this

1684
00:53:54,720 --> 00:53:58,640
in a privacy preserving manner

1685
00:53:56,319 --> 00:54:00,640
using pseudonyms rather than real users

1686
00:53:58,640 --> 00:54:02,879
and using per room pseudonyms

1687
00:54:00,640 --> 00:54:04,480
so that you get a different mx id for

1688
00:54:02,880 --> 00:54:06,960
every conversation you're in

1689
00:54:04,480 --> 00:54:08,079
and so if somebody is a complete jackass

1690
00:54:06,960 --> 00:54:09,920
in a given room

1691
00:54:08,079 --> 00:54:12,319
that particular mxid might be marked

1692
00:54:09,920 --> 00:54:14,559
down but it doesn't necessarily

1693
00:54:12,319 --> 00:54:15,359
correlate to their activity elsewhere

1694
00:54:14,559 --> 00:54:17,680
and

1695
00:54:15,359 --> 00:54:19,520
um you basically can have a fuzzy

1696
00:54:17,680 --> 00:54:20,720
graylist web of trust of sorts which is

1697
00:54:19,520 --> 00:54:22,880
anonymized like that

1698
00:54:20,720 --> 00:54:24,640
which is sufficient to allow you to do

1699
00:54:22,880 --> 00:54:26,000
community analysis to say hey that guy's

1700
00:54:24,640 --> 00:54:27,440
a complete jackass and hangs out with a

1701
00:54:26,000 --> 00:54:29,119
lot of other jackasses and i'm going to

1702
00:54:27,440 --> 00:54:30,880
stick a pin in the middle of the jackass

1703
00:54:29,119 --> 00:54:34,000
cluster and i'm going to mute it

1704
00:54:30,880 --> 00:54:35,760
and um that is not quite trust but it's

1705
00:54:34,000 --> 00:54:37,280
a similar different answer to a

1706
00:54:35,760 --> 00:54:39,119
different question

1707
00:54:37,280 --> 00:54:41,760
okay thank you matthew i think you can

1708
00:54:39,119 --> 00:54:44,319
reach matthew on matrix easily

1709
00:54:41,760 --> 00:54:46,550
so and ask other questions to him thank

1710
00:54:44,319 --> 00:54:49,819
you very much for very interesting

1711
00:54:46,550 --> 00:54:49,819
[Applause]

1712
00:54:50,839 --> 00:54:53,839
presentation

1713
00:55:00,559 --> 00:55:02,640
you

