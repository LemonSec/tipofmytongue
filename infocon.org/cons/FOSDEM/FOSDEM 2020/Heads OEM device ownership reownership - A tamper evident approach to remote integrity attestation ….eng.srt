1
00:00:05,520 --> 00:00:09,519
hello everyone

2
00:00:06,799 --> 00:00:11,120
i'm uh sierra laureate from ensergo open

3
00:00:09,519 --> 00:00:15,519
technologies

4
00:00:11,120 --> 00:00:17,680
um the the presentation of today

5
00:00:15,519 --> 00:00:20,000
is actually uh called for collaboration

6
00:00:17,680 --> 00:00:23,039
but showing you where the status uh

7
00:00:20,000 --> 00:00:26,080
is of ads and where we need some help

8
00:00:23,039 --> 00:00:28,480
actually um

9
00:00:26,080 --> 00:00:30,639
and sergo privacy bees was a produce a

10
00:00:28,480 --> 00:00:31,359
product released uh and certified by

11
00:00:30,640 --> 00:00:35,120
cube's os

12
00:00:31,359 --> 00:00:36,719
in july 2019

13
00:00:35,120 --> 00:00:38,480
trying to resolve the problem of being

14
00:00:36,719 --> 00:00:41,040
able to distribute

15
00:00:38,480 --> 00:00:43,199
cubes os pre-install without reducing

16
00:00:41,040 --> 00:00:45,920
the security of the device

17
00:00:43,200 --> 00:00:47,039
the reason why ads is used is because

18
00:00:45,920 --> 00:00:49,039
there is a

19
00:00:47,039 --> 00:00:50,800
two different security that is added

20
00:00:49,039 --> 00:00:52,399
directly in the firmware it gives us the

21
00:00:50,800 --> 00:00:54,959
possibility of knowing the state

22
00:00:52,399 --> 00:00:56,559
of the firmware by measuring the

23
00:00:54,960 --> 00:00:58,239
different parts i will go through that

24
00:00:56,559 --> 00:01:02,559
later on and

25
00:00:58,239 --> 00:01:04,399
we use a generated key that is

26
00:01:02,559 --> 00:01:06,000
on a secure device and we put the public

27
00:01:04,400 --> 00:01:06,560
key inside of the firmware which permits

28
00:01:06,000 --> 00:01:09,760
us to

29
00:01:06,560 --> 00:01:10,960
a verified boot like the binaries inside

30
00:01:09,760 --> 00:01:12,479
of slash boot

31
00:01:10,960 --> 00:01:14,720
which is not encrypted is actually

32
00:01:12,479 --> 00:01:17,920
verified upon each boot

33
00:01:14,720 --> 00:01:18,640
uh the reason why the x230 is actually

34
00:01:17,920 --> 00:01:22,159
interesting

35
00:01:18,640 --> 00:01:25,119
is because we can actually uh nurture uh

36
00:01:22,159 --> 00:01:27,680
antellimi neutering in the activation is

37
00:01:25,119 --> 00:01:29,759
like a word that is really

38
00:01:27,680 --> 00:01:32,400
mixed up in the world right now because

39
00:01:29,759 --> 00:01:33,520
uh nurturing means that all the parts

40
00:01:32,400 --> 00:01:36,079
are supposed like to be

41
00:01:33,520 --> 00:01:37,840
removed which is not possible anymore

42
00:01:36,079 --> 00:01:39,600
the status of sandy bridge and ivy

43
00:01:37,840 --> 00:01:40,000
bridge is that you can actually remove

44
00:01:39,600 --> 00:01:42,158
all

45
00:01:40,000 --> 00:01:43,439
the other module but but the bring up

46
00:01:42,159 --> 00:01:45,119
modules so

47
00:01:43,439 --> 00:01:47,279
the parts that are necessary to actually

48
00:01:45,119 --> 00:01:50,320
start the main cpus are still there

49
00:01:47,280 --> 00:01:51,680
which is a result of 98 kilobytes of

50
00:01:50,320 --> 00:01:52,000
code that we still don't know what they

51
00:01:51,680 --> 00:01:55,360
do

52
00:01:52,000 --> 00:01:58,399
but it's still there uh so binary bob

53
00:01:55,360 --> 00:02:01,680
uh free um ads is actually

54
00:01:58,399 --> 00:02:04,159
a payload of core boot uh and

55
00:02:01,680 --> 00:02:04,960
what i did is actually implement a

56
00:02:04,159 --> 00:02:07,280
reownership

57
00:02:04,960 --> 00:02:08,318
process inside of eds that permits us to

58
00:02:07,280 --> 00:02:11,760
as a nomi

59
00:02:08,318 --> 00:02:12,958
and oem to actually certify attest the

60
00:02:11,760 --> 00:02:16,560
state of the firmware

61
00:02:12,959 --> 00:02:19,840
and the boot status and actually

62
00:02:16,560 --> 00:02:23,200
ship a qr code to the customer and

63
00:02:19,840 --> 00:02:24,879
the usb security key with the laptop so

64
00:02:23,200 --> 00:02:27,200
that the user receives it and be able

65
00:02:24,879 --> 00:02:28,079
like to verify by having already the

66
00:02:27,200 --> 00:02:31,200
picture taken

67
00:02:28,080 --> 00:02:32,800
that like uh the firmware validation

68
00:02:31,200 --> 00:02:34,958
measures are there

69
00:02:32,800 --> 00:02:36,560
and the security key is actually plugged

70
00:02:34,959 --> 00:02:38,400
on the laptop it's librium key

71
00:02:36,560 --> 00:02:40,000
develop technology so basically the

72
00:02:38,400 --> 00:02:40,879
laptop communicates with the keys and

73
00:02:40,000 --> 00:02:42,560
validates that

74
00:02:40,879 --> 00:02:45,120
the the measurements are still there by

75
00:02:42,560 --> 00:02:48,319
flashing green or red if it's not

76
00:02:45,120 --> 00:02:50,160
okay so basically the process involves

77
00:02:48,319 --> 00:02:52,160
reowning all those components

78
00:02:50,160 --> 00:02:54,000
when the user receives it so that the

79
00:02:52,160 --> 00:02:56,239
oem is not

80
00:02:54,000 --> 00:02:59,280
there's no trace of the oem work after

81
00:02:56,239 --> 00:03:02,080
the re-ownership wizard

82
00:02:59,280 --> 00:03:02,480
so uh for those of you who don't know

83
00:03:02,080 --> 00:03:05,519
what

84
00:03:02,480 --> 00:03:09,119
ads is this is a quick uh description

85
00:03:05,519 --> 00:03:11,599
that i've already come through um

86
00:03:09,120 --> 00:03:12,959
basically the goal of ed adds is not to

87
00:03:11,599 --> 00:03:15,359
be perfect it's to

88
00:03:12,959 --> 00:03:16,319
actually add more security inside of the

89
00:03:15,360 --> 00:03:19,120
firmware

90
00:03:16,319 --> 00:03:19,839
uh like i said earlier by measuring it

91
00:03:19,120 --> 00:03:23,040
so it's not

92
00:03:19,840 --> 00:03:26,159
verified boot it's measured boot um

93
00:03:23,040 --> 00:03:29,440
and the goal of it is uh it was based on

94
00:03:26,159 --> 00:03:31,840
uh core boot an older version and uh

95
00:03:29,440 --> 00:03:32,640
patch were made to be able to actually

96
00:03:31,840 --> 00:03:35,519
modify

97
00:03:32,640 --> 00:03:36,238
modify the ram stage to be dependent on

98
00:03:35,519 --> 00:03:39,200
a tpm

99
00:03:36,239 --> 00:03:40,560
library that measures the modules prior

100
00:03:39,200 --> 00:03:42,798
of launching them

101
00:03:40,560 --> 00:03:44,080
it permits remote at the station remote

102
00:03:42,799 --> 00:03:46,319
attestation is a

103
00:03:44,080 --> 00:03:48,799
mixed word there mix in the sense that

104
00:03:46,319 --> 00:03:50,319
you verify the state on your phone

105
00:03:48,799 --> 00:03:52,720
with the qr code that you already

106
00:03:50,319 --> 00:03:54,079
scanned so you have a totp a code of six

107
00:03:52,720 --> 00:03:57,280
numbers that is

108
00:03:54,080 --> 00:03:58,319
regenerated every 30 seconds and if the

109
00:03:57,280 --> 00:04:00,400
codes on your phone

110
00:03:58,319 --> 00:04:01,679
and on the laptop is this are the same

111
00:04:00,400 --> 00:04:04,159
then you know that

112
00:04:01,680 --> 00:04:06,239
it was not modified librium key like i

113
00:04:04,159 --> 00:04:09,040
said earlier use the same measurement

114
00:04:06,239 --> 00:04:10,799
from the tpm but validates it on the usb

115
00:04:09,040 --> 00:04:11,920
key so if it flash green you know it's

116
00:04:10,799 --> 00:04:15,760
good if it flash red

117
00:04:11,920 --> 00:04:18,079
it means that it was tempered with um

118
00:04:15,760 --> 00:04:19,120
the verified boot integrity the part

119
00:04:18,079 --> 00:04:21,600
that the

120
00:04:19,120 --> 00:04:22,400
the key actually is used the usb key is

121
00:04:21,600 --> 00:04:25,040
used to

122
00:04:22,400 --> 00:04:25,440
sign every change boot configuration so

123
00:04:25,040 --> 00:04:27,759
when

124
00:04:25,440 --> 00:04:29,440
adds boots what it does is generate a

125
00:04:27,759 --> 00:04:31,280
digest of all the files that are present

126
00:04:29,440 --> 00:04:33,520
and it is signed with your

127
00:04:31,280 --> 00:04:34,719
with your private key inside of your of

128
00:04:33,520 --> 00:04:37,198
your usb key

129
00:04:34,720 --> 00:04:37,840
so when it boot uh ads just checks that

130
00:04:37,199 --> 00:04:40,080
the ash

131
00:04:37,840 --> 00:04:41,440
is signed by your public key that is

132
00:04:40,080 --> 00:04:44,159
inside of the rum

133
00:04:41,440 --> 00:04:45,759
so if something change you will be

134
00:04:44,160 --> 00:04:47,360
notified because you're the only one

135
00:04:45,759 --> 00:04:49,759
having the private key that match the

136
00:04:47,360 --> 00:04:53,120
public key that is inside of the run

137
00:04:49,759 --> 00:04:55,360
voila for that this is what eds does

138
00:04:53,120 --> 00:04:56,720
basically it takes like measurements and

139
00:04:55,360 --> 00:04:59,759
all of those pcrs

140
00:04:56,720 --> 00:05:03,280
and those pcrs are used to uh to to me

141
00:04:59,759 --> 00:05:03,280
to to validate the integrity

142
00:05:05,680 --> 00:05:09,840
so why i implemented a an ownership

143
00:05:08,479 --> 00:05:11,520
re-ownership

144
00:05:09,840 --> 00:05:13,440
because we want to have the firmware

145
00:05:11,520 --> 00:05:16,080
boot integrity validated

146
00:05:13,440 --> 00:05:17,840
uh we want the usb security dongle that

147
00:05:16,080 --> 00:05:20,880
is shipped to the user to be

148
00:05:17,840 --> 00:05:21,919
uh temporarily temporarily owned by the

149
00:05:20,880 --> 00:05:24,320
oem

150
00:05:21,919 --> 00:05:25,359
and reowned by the user upon reception

151
00:05:24,320 --> 00:05:28,320
and uh

152
00:05:25,360 --> 00:05:28,800
the usb key should be provisioned uh

153
00:05:28,320 --> 00:05:30,800
with

154
00:05:28,800 --> 00:05:32,560
secrets that are not the default ones

155
00:05:30,800 --> 00:05:34,560
for example if you buy a library key or

156
00:05:32,560 --> 00:05:36,160
an entry key the the user pin will be

157
00:05:34,560 --> 00:05:37,840
one two three four five six

158
00:05:36,160 --> 00:05:39,919
and the admin will be one two three four

159
00:05:37,840 --> 00:05:42,719
five six seven eight so

160
00:05:39,919 --> 00:05:43,280
if for some example the device the the

161
00:05:42,720 --> 00:05:45,680
laptop

162
00:05:43,280 --> 00:05:47,679
and the usb key are sent separately but

163
00:05:45,680 --> 00:05:50,080
for some reason someone is able to get

164
00:05:47,680 --> 00:05:52,080
the their end on the key and the laptop

165
00:05:50,080 --> 00:05:54,000
there is a possibility of being able to

166
00:05:52,080 --> 00:05:56,080
modify the boot integrity for example

167
00:05:54,000 --> 00:05:56,800
and being able to use the key with the

168
00:05:56,080 --> 00:05:59,840
the admin

169
00:05:56,800 --> 00:06:02,960
pin and resign the the measurements

170
00:05:59,840 --> 00:06:05,359
and there would be no security so if we

171
00:06:02,960 --> 00:06:06,719
are able to provision those with random

172
00:06:05,360 --> 00:06:09,600
secrets

173
00:06:06,720 --> 00:06:11,280
even though someone in the path would be

174
00:06:09,600 --> 00:06:14,240
able to get those two

175
00:06:11,280 --> 00:06:16,159
they won't be able to to measure and

176
00:06:14,240 --> 00:06:18,400
verify

177
00:06:16,160 --> 00:06:21,440
so all of those are covered already by

178
00:06:18,400 --> 00:06:23,280
the reownership

179
00:06:21,440 --> 00:06:25,120
that gives something like that when you

180
00:06:23,280 --> 00:06:26,080
boot the laptop at first what you see

181
00:06:25,120 --> 00:06:28,560
here is that

182
00:06:26,080 --> 00:06:30,240
the the time is supposed to be the same

183
00:06:28,560 --> 00:06:32,080
you see the totp code that you can

184
00:06:30,240 --> 00:06:32,960
validate on your phone which is supposed

185
00:06:32,080 --> 00:06:35,280
to be the one

186
00:06:32,960 --> 00:06:36,960
the same the hotp code there is the

187
00:06:35,280 --> 00:06:38,880
result of the key being connected

188
00:06:36,960 --> 00:06:40,960
directly in the usb port

189
00:06:38,880 --> 00:06:42,880
and the boot integrity is validated

190
00:06:40,960 --> 00:06:43,758
because the public signature that is

191
00:06:42,880 --> 00:06:46,800
inside of the rom

192
00:06:43,759 --> 00:06:49,840
validated validated that the boot uh the

193
00:06:46,800 --> 00:06:49,840
boot content was the same

194
00:06:50,800 --> 00:06:54,319
so if you get those three right you can

195
00:06:52,560 --> 00:06:58,080
continue the re-ownership you know that

196
00:06:54,319 --> 00:07:01,360
the laptop was not modified in transit

197
00:06:58,080 --> 00:07:04,080
um on that level

198
00:07:01,360 --> 00:07:06,160
okay if you have like an uh no ss

199
00:07:04,080 --> 00:07:07,680
pre-install like how can you verify that

200
00:07:06,160 --> 00:07:09,919
it was not tempered with

201
00:07:07,680 --> 00:07:10,720
the simplest solution that was uh done

202
00:07:09,919 --> 00:07:13,120
is actually

203
00:07:10,720 --> 00:07:14,400
we we create an oem image that we clone

204
00:07:13,120 --> 00:07:16,240
on each of the laptop

205
00:07:14,400 --> 00:07:17,840
the problem doing that is that the looks

206
00:07:16,240 --> 00:07:19,520
encryption key would be the same

207
00:07:17,840 --> 00:07:21,840
on all the laptops we don't want that

208
00:07:19,520 --> 00:07:24,318
because i could lend that key to

209
00:07:21,840 --> 00:07:25,198
any authority and it would be a massive

210
00:07:24,319 --> 00:07:28,000
problem

211
00:07:25,199 --> 00:07:29,520
so uh we want the initial looks

212
00:07:28,000 --> 00:07:32,160
encryption key to be uh

213
00:07:29,520 --> 00:07:33,198
to be unique we want the the encryption

214
00:07:32,160 --> 00:07:36,319
password to be

215
00:07:33,199 --> 00:07:38,720
all also different and the last point is

216
00:07:36,319 --> 00:07:41,840
the integrity of the operating system

217
00:07:38,720 --> 00:07:41,840
needs to be validated

218
00:07:41,919 --> 00:07:45,919
we don't have the last one for the

219
00:07:43,199 --> 00:07:47,360
moment um there is work being done on

220
00:07:45,919 --> 00:07:50,719
that i will cover it later on

221
00:07:47,360 --> 00:07:52,960
uh mainly uh ed's lacks uh

222
00:07:50,720 --> 00:07:54,800
lvm provisioning tools right now so that

223
00:07:52,960 --> 00:07:57,840
we have a possibility if we deploy

224
00:07:54,800 --> 00:07:59,120
an oem image to be able to decrypt the

225
00:07:57,840 --> 00:08:01,679
lux container and

226
00:07:59,120 --> 00:08:03,440
measure the lvm so that we know that

227
00:08:01,680 --> 00:08:04,319
they have the same integrity as when it

228
00:08:03,440 --> 00:08:06,639
was shipped with

229
00:08:04,319 --> 00:08:07,360
that's not done right now it needs a bit

230
00:08:06,639 --> 00:08:10,080
more space

231
00:08:07,360 --> 00:08:10,639
inside of the rom and work is being done

232
00:08:10,080 --> 00:08:13,359
on that

233
00:08:10,639 --> 00:08:14,400
right now so the result when the user

234
00:08:13,360 --> 00:08:16,400
receives the laptop

235
00:08:14,400 --> 00:08:18,000
and types the looks encryption key which

236
00:08:16,400 --> 00:08:19,840
is the same that unlocks the

237
00:08:18,000 --> 00:08:21,840
sd card content which is encrypted and

238
00:08:19,840 --> 00:08:23,520
which will be used to store the secrets

239
00:08:21,840 --> 00:08:26,560
of provisioning

240
00:08:23,520 --> 00:08:28,400
it unlocks the the two containers and

241
00:08:26,560 --> 00:08:30,800
actually re-encrypt the content of both

242
00:08:28,400 --> 00:08:32,478
disk so the sd card which is used to

243
00:08:30,800 --> 00:08:33,279
store the provision secret at the

244
00:08:32,479 --> 00:08:36,560
reownership

245
00:08:33,279 --> 00:08:38,719
is also encrypted and uh the hard drive

246
00:08:36,559 --> 00:08:40,880
is being re-encrypted right now so what

247
00:08:38,719 --> 00:08:44,159
you see here is the result of

248
00:08:40,880 --> 00:08:47,279
35 40 minutes later all the computer

249
00:08:44,159 --> 00:08:49,600
data is being completely re-encrypted

250
00:08:47,279 --> 00:08:51,519
so even if i was able to lend the keys

251
00:08:49,600 --> 00:08:53,519
to authorities

252
00:08:51,519 --> 00:08:56,320
those keys don't exist anymore they were

253
00:08:53,519 --> 00:08:56,320
changed completely

254
00:08:56,399 --> 00:09:01,680
so here the slides are being uploaded if

255
00:08:59,760 --> 00:09:04,880
you click on those two links you have

256
00:09:01,680 --> 00:09:07,920
what it would be for no em to actually

257
00:09:04,880 --> 00:09:09,920
reown the laptop and it's the same

258
00:09:07,920 --> 00:09:11,040
process that is being used for the user

259
00:09:09,920 --> 00:09:13,439
when he receives it

260
00:09:11,040 --> 00:09:14,959
basically having one passphrase to type

261
00:09:13,440 --> 00:09:16,800
and after that the

262
00:09:14,959 --> 00:09:18,160
i won't go through that but like the the

263
00:09:16,800 --> 00:09:20,719
the menu is actually

264
00:09:18,160 --> 00:09:21,760
asking you generating like that i swear

265
00:09:20,720 --> 00:09:23,440
passphrase

266
00:09:21,760 --> 00:09:26,959
of different lengths depending of the

267
00:09:23,440 --> 00:09:28,959
security needed for all the device

268
00:09:26,959 --> 00:09:30,959
generated for you and you renew them

269
00:09:28,959 --> 00:09:32,719
until one flashes your head

270
00:09:30,959 --> 00:09:34,079
i come from the psychology background

271
00:09:32,720 --> 00:09:35,920
and the most

272
00:09:34,080 --> 00:09:38,000
basic problem for everyone is selecting

273
00:09:35,920 --> 00:09:39,760
good passphrase and good passwords

274
00:09:38,000 --> 00:09:41,839
so if you have something that actually

275
00:09:39,760 --> 00:09:42,800
uh flabberglass your mind and you you

276
00:09:41,839 --> 00:09:44,959
find it funny

277
00:09:42,800 --> 00:09:46,479
you will remember it and if you try to

278
00:09:44,959 --> 00:09:48,959
remember a80

279
00:09:46,480 --> 00:09:50,000
anyway you're kind of security people so

280
00:09:48,959 --> 00:09:51,439
good passphrase are

281
00:09:50,000 --> 00:09:54,480
the basic of everything so the

282
00:09:51,440 --> 00:09:56,959
re-ownership takes that into matter and

283
00:09:54,480 --> 00:09:59,600
propose you like randomly words until

284
00:09:56,959 --> 00:10:05,359
some picks your mind

285
00:09:59,600 --> 00:10:08,800
so who doesn't know what tubes os is

286
00:10:05,360 --> 00:10:10,560
okay uh we decided to ship

287
00:10:08,800 --> 00:10:12,959
actually it was an inverse problem the

288
00:10:10,560 --> 00:10:16,000
problem was on what computer

289
00:10:12,959 --> 00:10:19,599
we can use cubes os securely

290
00:10:16,000 --> 00:10:21,279
and the situation was resolved because

291
00:10:19,600 --> 00:10:22,959
sandy bridge and ivy bridge there is

292
00:10:21,279 --> 00:10:25,200
there is a debate on that like but

293
00:10:22,959 --> 00:10:29,760
sandy bridge and eva bridge are the only

294
00:10:25,200 --> 00:10:32,880
last uh x86 platform that are able to be

295
00:10:29,760 --> 00:10:34,560
freed there is no binary responsible for

296
00:10:32,880 --> 00:10:36,240
the hardware initialization

297
00:10:34,560 --> 00:10:38,399
reminisce utilization graphic

298
00:10:36,240 --> 00:10:40,800
initialization all of those

299
00:10:38,399 --> 00:10:42,959
that are normally initialized by blobs

300
00:10:40,800 --> 00:10:45,120
are native on that platform thanks to

301
00:10:42,959 --> 00:10:48,479
core boot effort and reversing

302
00:10:45,120 --> 00:10:51,680
so on what lap on what hardware you can

303
00:10:48,480 --> 00:10:54,480
actually run cubes away securely

304
00:10:51,680 --> 00:10:57,040
the x230 was one of the clear answers so

305
00:10:54,480 --> 00:10:59,440
what i decided to do was to actually

306
00:10:57,040 --> 00:11:01,040
release a laptop having cubes os

307
00:10:59,440 --> 00:11:04,160
pre-installed and

308
00:11:01,040 --> 00:11:06,319
voila so what is cube os cubes os is an

309
00:11:04,160 --> 00:11:07,920
operating system based on virtualization

310
00:11:06,320 --> 00:11:11,920
that permits you to

311
00:11:07,920 --> 00:11:12,640
separate in a secluded environment what

312
00:11:11,920 --> 00:11:14,640
is all

313
00:11:12,640 --> 00:11:16,079
untrusted on your computer so basically

314
00:11:14,640 --> 00:11:17,040
you will have like the network that is

315
00:11:16,079 --> 00:11:20,160
isolated in

316
00:11:17,040 --> 00:11:20,480
a virtual machine all that is usb will

317
00:11:20,160 --> 00:11:22,719
be

318
00:11:20,480 --> 00:11:24,800
insulated in the machine and each of

319
00:11:22,720 --> 00:11:27,600
your virtual machine that you pop up

320
00:11:24,800 --> 00:11:29,439
have uh of rooting routing

321
00:11:27,600 --> 00:11:30,000
vulnerabilities possible between the

322
00:11:29,440 --> 00:11:32,880
machine

323
00:11:30,000 --> 00:11:33,440
but the rest of it is not connected the

324
00:11:32,880 --> 00:11:36,160
rest of it

325
00:11:33,440 --> 00:11:37,360
doesn't have access to files that you or

326
00:11:36,160 --> 00:11:39,670
vulnerabilities

327
00:11:37,360 --> 00:11:41,360
exposed by a rubber ducky

328
00:11:39,670 --> 00:11:42,800
[Music]

329
00:11:41,360 --> 00:11:44,000
usb key that you would put on your

330
00:11:42,800 --> 00:11:44,800
computer that you don't trust so

331
00:11:44,000 --> 00:11:46,560
basically

332
00:11:44,800 --> 00:11:48,560
everything that is untrusted that comes

333
00:11:46,560 --> 00:11:50,959
from the external until you do something

334
00:11:48,560 --> 00:11:52,880
really stupid it won't affect you

335
00:11:50,959 --> 00:11:54,560
cubes os is also really interesting

336
00:11:52,880 --> 00:11:56,720
because all

337
00:11:54,560 --> 00:11:57,839
attachment that you would open for from

338
00:11:56,720 --> 00:12:00,160
emails or whatever

339
00:11:57,839 --> 00:12:02,240
if you use thunderbird uh if you double

340
00:12:00,160 --> 00:12:04,639
click on the attachment it will open up

341
00:12:02,240 --> 00:12:06,079
in a disposable vm a disposable vm is

342
00:12:04,639 --> 00:12:08,320
something that will just

343
00:12:06,079 --> 00:12:10,079
self-destruct after you saw the content

344
00:12:08,320 --> 00:12:13,200
so if you clicked on a pdf

345
00:12:10,079 --> 00:12:15,439
or an xls document

346
00:12:13,200 --> 00:12:17,040
word document or whatever you may

347
00:12:15,440 --> 00:12:18,240
compromise your virtual machine that

348
00:12:17,040 --> 00:12:20,560
you're using but

349
00:12:18,240 --> 00:12:22,320
once it's done once you click that you

350
00:12:20,560 --> 00:12:24,560
finish the application

351
00:12:22,320 --> 00:12:26,320
exam the hypervisor will destroy your

352
00:12:24,560 --> 00:12:27,199
virtual machine and there won't be any

353
00:12:26,320 --> 00:12:29,040
trace of it

354
00:12:27,200 --> 00:12:30,880
if you don't trust pdf for example you

355
00:12:29,040 --> 00:12:33,040
can also just

356
00:12:30,880 --> 00:12:34,240
click right click on it and say convert

357
00:12:33,040 --> 00:12:37,360
it and that's it

358
00:12:34,240 --> 00:12:39,279
it's it's done in a bitmap form of

359
00:12:37,360 --> 00:12:42,480
document that you can use to uh

360
00:12:39,279 --> 00:12:45,519
to share or or whatever

361
00:12:42,480 --> 00:12:46,160
uh same thing for device that are coming

362
00:12:45,519 --> 00:12:48,560
from the

363
00:12:46,160 --> 00:12:49,519
outside you have to explicitly say where

364
00:12:48,560 --> 00:12:51,839
you want that

365
00:12:49,519 --> 00:12:54,240
device to be attached so there's no

366
00:12:51,839 --> 00:12:57,200
stupid corruption that would happen to

367
00:12:54,240 --> 00:12:58,079
the super secure machine that you want

368
00:12:57,200 --> 00:12:59,839
to use

369
00:12:58,079 --> 00:13:01,519
it won't have a networking if you don't

370
00:12:59,839 --> 00:13:03,120
want to so you can have a vault that

371
00:13:01,519 --> 00:13:04,399
will contain all your passwords and

372
00:13:03,120 --> 00:13:06,560
everything

373
00:13:04,399 --> 00:13:08,639
you're actually responsible to define

374
00:13:06,560 --> 00:13:09,680
the environments the way that you uh you

375
00:13:08,639 --> 00:13:11,839
need them to be

376
00:13:09,680 --> 00:13:13,359
used os comes with a couple of them but

377
00:13:11,839 --> 00:13:16,079
that's irrelevant to the stock

378
00:13:13,360 --> 00:13:17,760
the goal of it is to have an a good

379
00:13:16,079 --> 00:13:21,839
hardware on which you can

380
00:13:17,760 --> 00:13:21,839
run a secure open operating system

381
00:13:22,399 --> 00:13:24,639
so

382
00:13:26,959 --> 00:13:32,560
as of right now there is not a lot of

383
00:13:30,240 --> 00:13:34,480
models that are supported under ads

384
00:13:32,560 --> 00:13:36,000
because of security consideration and

385
00:13:34,480 --> 00:13:39,040
because eds is a

386
00:13:36,000 --> 00:13:41,760
it's a contributor based project but

387
00:13:39,040 --> 00:13:44,319
under development right now because i uh

388
00:13:41,760 --> 00:13:46,639
i decided to go the path of grant to

389
00:13:44,320 --> 00:13:48,639
be able to support more hardware being

390
00:13:46,639 --> 00:13:50,399
able to support

391
00:13:48,639 --> 00:13:52,240
remote management inside of cubes os

392
00:13:50,399 --> 00:13:52,720
because cubes os is super nice but most

393
00:13:52,240 --> 00:13:54,399
of you

394
00:13:52,720 --> 00:13:56,079
if you don't know the operating system

395
00:13:54,399 --> 00:13:56,959
you would be challenged by the idea of

396
00:13:56,079 --> 00:13:58,719
okay but

397
00:13:56,959 --> 00:14:00,160
would i have received help will i be

398
00:13:58,720 --> 00:14:02,480
able like to deal with that if i come

399
00:14:00,160 --> 00:14:05,600
into a problem or whatever so

400
00:14:02,480 --> 00:14:08,639
i receive a grant under nlnet to uh to

401
00:14:05,600 --> 00:14:10,959
uh name accessible security the goal of

402
00:14:08,639 --> 00:14:12,959
it is to we have secure solution but how

403
00:14:10,959 --> 00:14:15,279
can we make them accessible to the users

404
00:14:12,959 --> 00:14:16,959
that needs it my main focus is actually

405
00:14:15,279 --> 00:14:19,600
journalists freedom defenders and

406
00:14:16,959 --> 00:14:21,680
those kind of people so in my trainings

407
00:14:19,600 --> 00:14:23,519
when i was asked okay but how do i

408
00:14:21,680 --> 00:14:26,000
where on what hardware do i implement

409
00:14:23,519 --> 00:14:28,560
those super solutions that you you say

410
00:14:26,000 --> 00:14:30,079
and there was no clear answer because if

411
00:14:28,560 --> 00:14:32,079
you don't have a

412
00:14:30,079 --> 00:14:33,279
trustable hardware a trustable phone or

413
00:14:32,079 --> 00:14:36,319
a trustable something

414
00:14:33,279 --> 00:14:39,680
then everything can be act

415
00:14:36,320 --> 00:14:43,199
from the the the simple

416
00:14:39,680 --> 00:14:46,399
uh vulnerability so uh

417
00:14:43,199 --> 00:14:49,359
underground right now is the is this

418
00:14:46,399 --> 00:14:50,160
right now uh 3m dev here under it's

419
00:14:49,360 --> 00:14:51,920
supposed to

420
00:14:50,160 --> 00:14:53,760
we will know like in the next day but

421
00:14:51,920 --> 00:14:55,199
there should not have any problem

422
00:14:53,760 --> 00:14:57,680
there's going to be a talk later on

423
00:14:55,199 --> 00:14:59,680
today about uh fw upd

424
00:14:57,680 --> 00:15:00,959
the goal of it is to be able to have

425
00:14:59,680 --> 00:15:03,199
like simple

426
00:15:00,959 --> 00:15:05,359
firmware upgrades like we install any

427
00:15:03,199 --> 00:15:07,839
updates in our operating system

428
00:15:05,360 --> 00:15:09,839
the problem with cubezos like i said

429
00:15:07,839 --> 00:15:12,240
super quickly is that tubes os

430
00:15:09,839 --> 00:15:13,360
is not meant to have network access by

431
00:15:12,240 --> 00:15:14,959
default so

432
00:15:13,360 --> 00:15:17,199
if you have a part of your system which

433
00:15:14,959 --> 00:15:18,079
is the hypervisor that has access to

434
00:15:17,199 --> 00:15:19,680
your hardware

435
00:15:18,079 --> 00:15:21,519
it's not supposed to have access to the

436
00:15:19,680 --> 00:15:24,319
internet so having

437
00:15:21,519 --> 00:15:25,600
updates for device under domain zero on

438
00:15:24,320 --> 00:15:28,160
the hypervisor

439
00:15:25,600 --> 00:15:29,759
requires some modifications so that the

440
00:15:28,160 --> 00:15:30,800
communication is made to download the

441
00:15:29,759 --> 00:15:33,839
updates and make them

442
00:15:30,800 --> 00:15:34,800
available uh so the goal of that is to

443
00:15:33,839 --> 00:15:36,800
have those

444
00:15:34,800 --> 00:15:38,639
updates available inside of ed so that

445
00:15:36,800 --> 00:15:40,319
the next time you reboot your laptop ads

446
00:15:38,639 --> 00:15:43,519
is also updatable

447
00:15:40,320 --> 00:15:45,920
um i can introduce also uh

448
00:15:43,519 --> 00:15:47,519
having remote administration because uh

449
00:15:45,920 --> 00:15:48,079
the people that are the most at risk

450
00:15:47,519 --> 00:15:50,399
let's say

451
00:15:48,079 --> 00:15:51,920
journalists or anyone being in remote

452
00:15:50,399 --> 00:15:54,480
countries and needing help right now

453
00:15:51,920 --> 00:15:56,639
they are kind of left alone the goal of

454
00:15:54,480 --> 00:15:58,560
the cube's os one x partnership is to be

455
00:15:56,639 --> 00:16:01,199
able to have a

456
00:15:58,560 --> 00:16:02,479
tour hidden onion accessible remote

457
00:16:01,199 --> 00:16:04,560
administration so that

458
00:16:02,480 --> 00:16:05,839
when you need it you can ask for support

459
00:16:04,560 --> 00:16:08,399
and copy paste

460
00:16:05,839 --> 00:16:09,600
a link with a login and password and

461
00:16:08,399 --> 00:16:12,639
being able to have

462
00:16:09,600 --> 00:16:14,560
your admin vm or m0

463
00:16:12,639 --> 00:16:16,720
being accessible to receive help

464
00:16:14,560 --> 00:16:19,680
remotely

465
00:16:16,720 --> 00:16:21,440
the possibility of having safer

466
00:16:19,680 --> 00:16:23,040
anonymization forensic resistant

467
00:16:21,440 --> 00:16:23,839
defaults because right now cubezos

468
00:16:23,040 --> 00:16:25,839
doesn't come with

469
00:16:23,839 --> 00:16:27,839
mac randomization so if you're roaming

470
00:16:25,839 --> 00:16:28,880
around here with your cell phone right

471
00:16:27,839 --> 00:16:31,279
now

472
00:16:28,880 --> 00:16:33,120
okay uh you're leaving trace everywhere

473
00:16:31,279 --> 00:16:34,880
because your mac is known by all those

474
00:16:33,120 --> 00:16:36,480
wi-fi stations and everything so if

475
00:16:34,880 --> 00:16:37,600
you're a journalist or a freedom

476
00:16:36,480 --> 00:16:39,519
defender and your

477
00:16:37,600 --> 00:16:42,079
identity is at risk you want those

478
00:16:39,519 --> 00:16:43,920
traits to not exist

479
00:16:42,079 --> 00:16:46,000
same thing for our drive contents and

480
00:16:43,920 --> 00:16:47,519
everything and the main problem that we

481
00:16:46,000 --> 00:16:48,240
have here because we try to go

482
00:16:47,519 --> 00:16:50,079
international

483
00:16:48,240 --> 00:16:52,639
is that there are so many keyboards that

484
00:16:50,079 --> 00:16:55,439
exist but ads support only us keyboards

485
00:16:52,639 --> 00:16:57,680
so that's a challenge for for going

486
00:16:55,440 --> 00:17:00,720
international

487
00:16:57,680 --> 00:17:03,599
so the help that we need right now

488
00:17:00,720 --> 00:17:04,480
inside of ads is a better replicability

489
00:17:03,600 --> 00:17:06,559
because

490
00:17:04,480 --> 00:17:07,679
ed's motto is being able to produce the

491
00:17:06,559 --> 00:17:09,678
same exact image

492
00:17:07,679 --> 00:17:11,199
wherever you you build it across

493
00:17:09,679 --> 00:17:12,079
different always build systems and

494
00:17:11,199 --> 00:17:14,480
everything

495
00:17:12,079 --> 00:17:16,000
we need help of that if here there's

496
00:17:14,480 --> 00:17:18,400
people working in

497
00:17:16,000 --> 00:17:19,760
continuous integration environment and

498
00:17:18,400 --> 00:17:21,199
are able to give a bit of help that

499
00:17:19,760 --> 00:17:26,480
would be amazing

500
00:17:21,199 --> 00:17:28,720
uh ads needs a bit more involvement

501
00:17:26,480 --> 00:17:30,240
and the main cue that i it's not really

502
00:17:28,720 --> 00:17:30,720
related to firmware development right

503
00:17:30,240 --> 00:17:33,760
now but

504
00:17:30,720 --> 00:17:36,000
we we need an alternative to x86 so that

505
00:17:33,760 --> 00:17:37,360
we don't have blobs in our hardware it's

506
00:17:36,000 --> 00:17:38,400
really a concert that should be

507
00:17:37,360 --> 00:17:42,320
addressed

508
00:17:38,400 --> 00:17:44,960
by firmware developers and uh

509
00:17:42,320 --> 00:17:46,480
voila and the goal of all of this

510
00:17:44,960 --> 00:17:48,160
because i'm doing this since

511
00:17:46,480 --> 00:17:50,160
six months right now is that every time

512
00:17:48,160 --> 00:17:51,440
that we ship a laptop it goes through

513
00:17:50,160 --> 00:17:53,520
customs and everything so

514
00:17:51,440 --> 00:17:55,280
what we need right now is like uh

515
00:17:53,520 --> 00:17:57,200
reprogrammers around the world that are

516
00:17:55,280 --> 00:17:58,480
ready to do exactly the same part of job

517
00:17:57,200 --> 00:18:00,400
that i'm doing but in different

518
00:17:58,480 --> 00:18:02,799
countries so that laptops don't

519
00:18:00,400 --> 00:18:04,880
go across borders that are made locally

520
00:18:02,799 --> 00:18:06,879
and people that are interesting

521
00:18:04,880 --> 00:18:10,880
interested in joining the adventure of

522
00:18:06,880 --> 00:18:10,880
making hardware more secure

523
00:18:10,960 --> 00:18:17,600
here for core for firmware developers

524
00:18:14,320 --> 00:18:18,240
there is power pc needed work inside of

525
00:18:17,600 --> 00:18:20,000
core boot

526
00:18:18,240 --> 00:18:21,360
so if you are willing to join the

527
00:18:20,000 --> 00:18:23,600
adventure of porting

528
00:18:21,360 --> 00:18:25,360
core boot to 2 power pc it would be

529
00:18:23,600 --> 00:18:27,439
amazing

530
00:18:25,360 --> 00:18:28,959
those are tasks that i need to do right

531
00:18:27,440 --> 00:18:30,720
now because one of the most problems

532
00:18:28,960 --> 00:18:32,720
that arrive like in my situation is a

533
00:18:30,720 --> 00:18:36,160
client saying okay but i lost my usb

534
00:18:32,720 --> 00:18:38,000
key and when you lose your usb

535
00:18:36,160 --> 00:18:39,679
security key that is made like to sign

536
00:18:38,000 --> 00:18:41,120
the configuration and everything

537
00:18:39,679 --> 00:18:43,440
it means that you have to buy another

538
00:18:41,120 --> 00:18:45,120
one and re-own

539
00:18:43,440 --> 00:18:46,480
the key generate new keys and everything

540
00:18:45,120 --> 00:18:49,840
because the keys are inside

541
00:18:46,480 --> 00:18:52,640
of the usb device so it's not copy

542
00:18:49,840 --> 00:18:54,799
copy copyable so the solution around

543
00:18:52,640 --> 00:18:56,720
that would be to use ads to general

544
00:18:54,799 --> 00:18:59,280
generate those key pairs save them

545
00:18:56,720 --> 00:19:01,360
inside of a looks encrypted key which

546
00:18:59,280 --> 00:19:03,120
yeah which i already resolve it's just

547
00:19:01,360 --> 00:19:05,520
like coding stuff that i will resolve in

548
00:19:03,120 --> 00:19:09,120
the next couple of weeks

549
00:19:05,520 --> 00:19:12,160
and voila so insergo is now incorporated

550
00:19:09,120 --> 00:19:13,918
like i said we need reprogrammers

551
00:19:12,160 --> 00:19:15,600
there is a direct sourcing that is

552
00:19:13,919 --> 00:19:16,720
available to partners around

553
00:19:15,600 --> 00:19:19,199
the world that want to join the

554
00:19:16,720 --> 00:19:21,039
adventure uh training is provider my

555
00:19:19,200 --> 00:19:22,559
background is security trainer so

556
00:19:21,039 --> 00:19:24,640
i would be more than willing like to

557
00:19:22,559 --> 00:19:28,240
jump into the adventure and

558
00:19:24,640 --> 00:19:32,960
make this go like a broader um

559
00:19:28,240 --> 00:19:35,600
and uh this is uh this is what i

560
00:19:32,960 --> 00:19:36,480
would what i won't like to promote is

561
00:19:35,600 --> 00:19:38,480
that

562
00:19:36,480 --> 00:19:40,320
i've been in this adventure like for a

563
00:19:38,480 --> 00:19:40,799
couple of months right now i did a lot

564
00:19:40,320 --> 00:19:43,678
of

565
00:19:40,799 --> 00:19:44,160
uh attempts and funding efforts this is

566
00:19:43,679 --> 00:19:46,080
nice

567
00:19:44,160 --> 00:19:47,679
this is uh this is working but it's

568
00:19:46,080 --> 00:19:49,199
complicated because of the add-in

569
00:19:47,679 --> 00:19:52,480
management that is there so

570
00:19:49,200 --> 00:19:54,480
uh when insert go just created is insert

571
00:19:52,480 --> 00:19:56,480
go initiative at open collective

572
00:19:54,480 --> 00:19:57,760
and every time that a laptop will be

573
00:19:56,480 --> 00:20:00,080
bought from us or

574
00:19:57,760 --> 00:20:00,879
any partners that that is linked to us

575
00:20:00,080 --> 00:20:03,120
25

576
00:20:00,880 --> 00:20:04,640
of the net profit will be donated inside

577
00:20:03,120 --> 00:20:06,559
of open collective

578
00:20:04,640 --> 00:20:08,880
open collective is what is used by cubex

579
00:20:06,559 --> 00:20:09,360
os and others it's actually just an open

580
00:20:08,880 --> 00:20:11,520
book

581
00:20:09,360 --> 00:20:12,479
saying what money comes in and where it

582
00:20:11,520 --> 00:20:14,559
goes out

583
00:20:12,480 --> 00:20:15,600
so the goal of this would be to actually

584
00:20:14,559 --> 00:20:17,760
be able to

585
00:20:15,600 --> 00:20:19,120
pay for development outside of those

586
00:20:17,760 --> 00:20:20,879
funds so that

587
00:20:19,120 --> 00:20:22,158
if if there is an issue that you can

588
00:20:20,880 --> 00:20:25,120
actually deal with

589
00:20:22,159 --> 00:20:26,720
you can say okay it will take like uh 30

590
00:20:25,120 --> 00:20:27,840
hours to resolve this i would need like

591
00:20:26,720 --> 00:20:30,880
five thousand dollars

592
00:20:27,840 --> 00:20:31,360
and we can come with like an arrangement

593
00:20:30,880 --> 00:20:33,039
of

594
00:20:31,360 --> 00:20:34,639
what that needs to be done and when it's

595
00:20:33,039 --> 00:20:35,440
going to be paid that's how funding

596
00:20:34,640 --> 00:20:37,600
works

597
00:20:35,440 --> 00:20:39,200
you have to provide work proof of work

598
00:20:37,600 --> 00:20:41,600
and the fundings are released on each

599
00:20:39,200 --> 00:20:49,840
task that are completed

600
00:20:41,600 --> 00:20:49,840
voila thank you

601
00:20:58,400 --> 00:21:02,400
so when you mention power pc it's really

602
00:21:01,280 --> 00:21:04,399
interesting i was

603
00:21:02,400 --> 00:21:06,159
i myself was the first one to actually

604
00:21:04,400 --> 00:21:09,440
import uh blackbird

605
00:21:06,159 --> 00:21:12,799
dallas ii uh blackbird in europe

606
00:21:09,440 --> 00:21:14,480
last year uh so the problem is that it's

607
00:21:12,799 --> 00:21:17,440
not something that power9

608
00:21:14,480 --> 00:21:18,159
in general will not be mass used its

609
00:21:17,440 --> 00:21:20,799
price

610
00:21:18,159 --> 00:21:21,280
its availability distribution but the

611
00:21:20,799 --> 00:21:24,879
effort

612
00:21:21,280 --> 00:21:26,799
is meaningful yeah so i i just

613
00:21:24,880 --> 00:21:28,720
would like to hear how do you think you

614
00:21:26,799 --> 00:21:31,760
can enable if someone wants to help you

615
00:21:28,720 --> 00:21:35,520
give him hardware to work with that uh

616
00:21:31,760 --> 00:21:38,799
that's a challenge yeah yeah so

617
00:21:35,520 --> 00:21:40,320
really quick the the the uh

618
00:21:38,799 --> 00:21:42,400
really quick how can we make like

619
00:21:40,320 --> 00:21:44,399
involvement like to to make the work uh

620
00:21:42,400 --> 00:21:46,400
basically raptor engineering for power

621
00:21:44,400 --> 00:21:47,120
pc the question was how can we make

622
00:21:46,400 --> 00:21:50,240
power pc

623
00:21:47,120 --> 00:21:50,959
development like work if hardware is not

624
00:21:50,240 --> 00:21:53,520
available

625
00:21:50,960 --> 00:21:54,240
that's it yeah first and then even if it

626
00:21:53,520 --> 00:21:55,760
is

627
00:21:54,240 --> 00:21:58,559
you know you need adoption to find

628
00:21:55,760 --> 00:22:01,360
problems right yeah okay uh

629
00:21:58,559 --> 00:22:03,039
basically uh raptor engineering is

630
00:22:01,360 --> 00:22:04,879
willing to provide hardware for all the

631
00:22:03,039 --> 00:22:07,520
developers that would work on that

632
00:22:04,880 --> 00:22:09,039
uh the the contract would be like a code

633
00:22:07,520 --> 00:22:11,918
needs to be released and be

634
00:22:09,039 --> 00:22:14,240
put up stream to compensate for the

635
00:22:11,919 --> 00:22:16,960
hardware enablement that they call

636
00:22:14,240 --> 00:22:18,720
that's first uh the second one is that

637
00:22:16,960 --> 00:22:20,799
the hardware is known

638
00:22:18,720 --> 00:22:21,840
to work to receive respect your freedom

639
00:22:20,799 --> 00:22:24,240
certification

640
00:22:21,840 --> 00:22:24,959
uh three months ago i think two months

641
00:22:24,240 --> 00:22:27,200
ago

642
00:22:24,960 --> 00:22:28,880
so basically it's the first platform

643
00:22:27,200 --> 00:22:32,400
that respects your freedom since

644
00:22:28,880 --> 00:22:34,640
uh libra booth mini free x200 200.

645
00:22:32,400 --> 00:22:36,960
so basically the hardware is performant

646
00:22:34,640 --> 00:22:37,919
they have a plan of releasing a laptop

647
00:22:36,960 --> 00:22:40,559
really soon

648
00:22:37,919 --> 00:22:42,400
so the question is how can we manage to

649
00:22:40,559 --> 00:22:44,080
have all the stack available so that

650
00:22:42,400 --> 00:22:45,760
both arrive at the same time i

651
00:22:44,080 --> 00:22:48,559
understand your your reflex of

652
00:22:45,760 --> 00:22:49,520
okay but we need needs but the need will

653
00:22:48,559 --> 00:22:51,039
arise

654
00:22:49,520 --> 00:22:52,960
so the question right now and if you

655
00:22:51,039 --> 00:22:53,280
click on the link there there's a bounty

656
00:22:52,960 --> 00:22:56,400
for

657
00:22:53,280 --> 00:22:58,879
cubes os and if people

658
00:22:56,400 --> 00:22:59,760
here are exam developers uh the bantee

659
00:22:58,880 --> 00:23:02,640
is really

660
00:22:59,760 --> 00:23:05,840
interesting if you can actually propose

661
00:23:02,640 --> 00:23:08,400
code through alexand support or kvm or

662
00:23:05,840 --> 00:23:09,918
i bought the the telstra and the two

663
00:23:08,400 --> 00:23:10,720
blackbirds for the same reason to use

664
00:23:09,919 --> 00:23:12,480
them as a

665
00:23:10,720 --> 00:23:13,760
for a multitude station to verify other

666
00:23:12,480 --> 00:23:14,960
machines so

667
00:23:13,760 --> 00:23:16,559
when you make your code for

668
00:23:14,960 --> 00:23:16,960
collaboration i actually would like to

669
00:23:16,559 --> 00:23:19,360
say

670
00:23:16,960 --> 00:23:20,080
awesome because i'm trying to contact me

671
00:23:19,360 --> 00:23:22,959
contact me

672
00:23:20,080 --> 00:23:24,399
yeah i'm doing a developer friendly

673
00:23:22,960 --> 00:23:26,240
trusted computing platform

674
00:23:24,400 --> 00:23:27,840
i just want to say that tomorrow we'll

675
00:23:26,240 --> 00:23:29,760
do a birth of federal session

676
00:23:27,840 --> 00:23:31,280
okay for anyone interesting especially

677
00:23:29,760 --> 00:23:34,320
in remote station

678
00:23:31,280 --> 00:23:37,520
uh of different networks and platforms

679
00:23:34,320 --> 00:23:40,559
and uh it will be in h3242

680
00:23:37,520 --> 00:23:42,080
at 2 30. write me an email yeah i just

681
00:23:40,559 --> 00:23:43,520
i'm just saying for everyone because

682
00:23:42,080 --> 00:23:46,000
your call for collaboration really makes

683
00:23:43,520 --> 00:23:51,840
sense to me thank you

684
00:23:46,000 --> 00:23:51,840
uh yes you talked about

685
00:23:59,840 --> 00:24:02,879
the question is what are the challenge

686
00:24:01,679 --> 00:24:06,960
to develop a

687
00:24:02,880 --> 00:24:06,960
car cardboard version for power pc

688
00:24:11,039 --> 00:24:14,480
right now the work is done by nine

689
00:24:12,880 --> 00:24:16,840
element underground

690
00:24:14,480 --> 00:24:19,039
the basic problem is just to have a

691
00:24:16,840 --> 00:24:21,520
v-boot plus measured boot

692
00:24:19,039 --> 00:24:22,879
that's kind of the new standard inside

693
00:24:21,520 --> 00:24:25,360
of of core boot

694
00:24:22,880 --> 00:24:26,720
the problem was that the support was not

695
00:24:25,360 --> 00:24:29,199
made properly for

696
00:24:26,720 --> 00:24:31,039
sandy bridge and ivy bridge so it needs

697
00:24:29,200 --> 00:24:32,480
to be upstream first inside of core boot

698
00:24:31,039 --> 00:24:33,760
and after that we will be able to

699
00:24:32,480 --> 00:24:35,600
make the merge but it's supposed to

700
00:24:33,760 --> 00:24:36,960
happen in the next uh

701
00:24:35,600 --> 00:24:39,840
month or month and a half they are

702
00:24:36,960 --> 00:24:39,840
working on it right now

703
00:24:41,279 --> 00:24:44,320
in the design what happens when you need

704
00:24:43,279 --> 00:24:48,880
to

705
00:24:44,320 --> 00:24:50,799
upgrade the kernel we need to reown the

706
00:24:48,880 --> 00:24:52,400
whole system what happens okay the

707
00:24:50,799 --> 00:24:55,360
question is what happens when you

708
00:24:52,400 --> 00:24:58,559
upgrade the operating system

709
00:24:55,360 --> 00:25:00,240
yeah what happens actually when you

710
00:24:58,559 --> 00:25:01,840
sign your book configuration you're

711
00:25:00,240 --> 00:25:03,120
actually selecting a default gold

712
00:25:01,840 --> 00:25:07,279
configuration

713
00:25:03,120 --> 00:25:10,719
so what it means is that your grub xen

714
00:25:07,279 --> 00:25:14,080
kernel and initial rd will be measured

715
00:25:10,720 --> 00:25:16,240
and the digest like

716
00:25:14,080 --> 00:25:17,120
the digest like takes takes that into

717
00:25:16,240 --> 00:25:18,960
consideration

718
00:25:17,120 --> 00:25:20,559
so when you upgrade all of those will

719
00:25:18,960 --> 00:25:23,039
change at the same time so as

720
00:25:20,559 --> 00:25:25,279
actually pops up and asks you like if

721
00:25:23,039 --> 00:25:27,760
you are the origin of those change

722
00:25:25,279 --> 00:25:30,240
if you are you sign if you don't you

723
00:25:27,760 --> 00:25:30,240
inspect

724
00:25:30,720 --> 00:25:36,640
one question or no no

725
00:25:34,000 --> 00:25:38,000
that's like only one question or one

726
00:25:36,640 --> 00:25:43,840
shot

727
00:25:38,000 --> 00:25:43,840
who is short short

728
00:25:47,440 --> 00:25:50,799
the question was is there any

729
00:25:48,720 --> 00:25:53,679
interception story that happened

730
00:25:50,799 --> 00:25:53,679
uh not yet

731
00:25:54,240 --> 00:25:57,440
no but not that i know yeah but again

732
00:25:56,880 --> 00:25:59,120
like

733
00:25:57,440 --> 00:26:00,960
with all the measurements that are there

734
00:25:59,120 --> 00:26:03,918
uh it's

735
00:26:00,960 --> 00:26:06,240
we put like glitter under with like a

736
00:26:03,919 --> 00:26:09,440
nail polish under the main screw

737
00:26:06,240 --> 00:26:10,000
we send a picture of that glitter to the

738
00:26:09,440 --> 00:26:13,120
customer

739
00:26:10,000 --> 00:26:15,039
the qr code blah blah blah so to be able

740
00:26:13,120 --> 00:26:16,399
travel here would be better place than

741
00:26:15,039 --> 00:26:18,960
me to answer like

742
00:26:16,400 --> 00:26:21,039
what are exactly in the the use case

743
00:26:18,960 --> 00:26:21,440
that would be needed to actually be able

744
00:26:21,039 --> 00:26:23,120
to

745
00:26:21,440 --> 00:26:25,279
compromise the firmware of the

746
00:26:23,120 --> 00:26:28,000
measurements being done like inside

747
00:26:25,279 --> 00:26:29,760
that would match the qr code match the

748
00:26:28,000 --> 00:26:32,159
the

749
00:26:29,760 --> 00:26:33,600
the challenge version inside of your usb

750
00:26:32,159 --> 00:26:35,279
key and everything

751
00:26:33,600 --> 00:26:37,520
i don't come up with a way but there's

752
00:26:35,279 --> 00:26:40,799
possibly a way and if your

753
00:26:37,520 --> 00:26:43,760
3 billion targeted user

754
00:26:40,799 --> 00:26:43,760
i'm sorry for you

755
00:26:43,919 --> 00:26:53,840
thank you

