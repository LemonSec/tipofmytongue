1
00:00:05,920 --> 00:00:09,040
does this work

2
00:00:06,960 --> 00:00:10,240
all good for the camera so talk with

3
00:00:09,040 --> 00:00:13,919
your voice to the roof

4
00:00:10,240 --> 00:00:15,280
okay um hi i'm malana

5
00:00:13,920 --> 00:00:17,759
how much time do you actually have

6
00:00:15,280 --> 00:00:20,799
[Music]

7
00:00:17,760 --> 00:00:24,160
wow that's good excellent

8
00:00:20,800 --> 00:00:25,599
so uh just to make this clear if you

9
00:00:24,160 --> 00:00:27,599
have any questions let's do that

10
00:00:25,599 --> 00:00:29,279
right away let's not wait until the end

11
00:00:27,599 --> 00:00:31,279
so that we can get a conversation

12
00:00:29,279 --> 00:00:33,200
happening here much more interested in

13
00:00:31,279 --> 00:00:34,559
like leading the discussion into the

14
00:00:33,200 --> 00:00:36,640
direction that you want it

15
00:00:34,559 --> 00:00:38,000
and much less into me actually covering

16
00:00:36,640 --> 00:00:39,280
all my slides because i know that i have

17
00:00:38,000 --> 00:00:40,559
too many slides anyway

18
00:00:39,280 --> 00:00:42,399
and it's really about the discussion not

19
00:00:40,559 --> 00:00:46,480
about the slides anyway

20
00:00:42,399 --> 00:00:48,480
so yeah um today i'm talking about the

21
00:00:46,480 --> 00:00:50,398
uh yeah reinventing home directories by

22
00:00:48,480 --> 00:00:52,398
the way if any one of you has seen

23
00:00:50,399 --> 00:00:54,320
my talk about this very topic at all

24
00:00:52,399 --> 00:00:55,840
systems go or a devconf

25
00:00:54,320 --> 00:00:57,680
it's going to be the same thing there's

26
00:00:55,840 --> 00:00:58,000
a huge queue there if you have seen it

27
00:00:57,680 --> 00:01:01,760
already

28
00:00:58,000 --> 00:01:01,760
it would be good to just leave and

29
00:01:02,000 --> 00:01:06,640
you're not gonna learn much new stuff

30
00:01:04,879 --> 00:01:07,040
anyway but apparently no one has seen it

31
00:01:06,640 --> 00:01:09,920
before

32
00:01:07,040 --> 00:01:10,720
okay so yeah what i'm gonna talk about

33
00:01:09,920 --> 00:01:13,280
is dollar home

34
00:01:10,720 --> 00:01:14,798
right as you know it or till as uh you

35
00:01:13,280 --> 00:01:18,000
can even call it more

36
00:01:14,799 --> 00:01:18,880
briefly um yeah what is actually dollar

37
00:01:18,000 --> 00:01:20,560
home

38
00:01:18,880 --> 00:01:22,240
dollar home is obviously a directory as

39
00:01:20,560 --> 00:01:22,560
you know right but it's it's more than

40
00:01:22,240 --> 00:01:25,039
that

41
00:01:22,560 --> 00:01:26,479
like you always um for something to be a

42
00:01:25,040 --> 00:01:28,320
home director you also need a matching

43
00:01:26,479 --> 00:01:30,320
entry in etsy past wd

44
00:01:28,320 --> 00:01:31,439
actually in etsy shadow and these kind

45
00:01:30,320 --> 00:01:33,758
of things so

46
00:01:31,439 --> 00:01:35,439
it's currently yeah two things like it's

47
00:01:33,759 --> 00:01:38,880
a user account in

48
00:01:35,439 --> 00:01:41,439
in etsy passwd and it's actually a home

49
00:01:38,880 --> 00:01:43,439
directory in slasher

50
00:01:41,439 --> 00:01:45,600
there are many problems that i have

51
00:01:43,439 --> 00:01:47,119
always seen with this idea

52
00:01:45,600 --> 00:01:49,600
first of all it needs a writable etsy

53
00:01:47,119 --> 00:01:51,119
right where writable etsy by that i mean

54
00:01:49,600 --> 00:01:53,679
that if you create a user

55
00:01:51,119 --> 00:01:55,439
etsy needs to be writable i personally

56
00:01:53,680 --> 00:01:57,119
think we should go towards systems where

57
00:01:55,439 --> 00:01:59,758
etsy is generally not writable

58
00:01:57,119 --> 00:02:00,799
except if actually um reconfiguration

59
00:01:59,759 --> 00:02:02,640
takes place

60
00:02:00,799 --> 00:02:04,640
and i would claim that creating users

61
00:02:02,640 --> 00:02:06,799
and and things like that changing users

62
00:02:04,640 --> 00:02:08,080
is not configuration change but it's

63
00:02:06,799 --> 00:02:10,800
more like a like a

64
00:02:08,080 --> 00:02:11,920
like a a payload change right it's what

65
00:02:10,800 --> 00:02:13,599
you do with the

66
00:02:11,920 --> 00:02:15,119
system itself like like what you do on

67
00:02:13,599 --> 00:02:16,720
the top of the system it's not

68
00:02:15,120 --> 00:02:17,680
reconfiguration how the system itself

69
00:02:16,720 --> 00:02:20,560
behaves

70
00:02:17,680 --> 00:02:22,720
so yeah i think that's kind of kind of

71
00:02:20,560 --> 00:02:24,080
weird mix right now in etsy between the

72
00:02:22,720 --> 00:02:26,800
actual state which is

73
00:02:24,080 --> 00:02:28,480
if the user exists or not to me um and

74
00:02:26,800 --> 00:02:30,239
the configuration of the system

75
00:02:28,480 --> 00:02:31,679
uh which is everything else that tends

76
00:02:30,239 --> 00:02:34,080
to be nazi

77
00:02:31,680 --> 00:02:34,720
so um another problem i always saw is

78
00:02:34,080 --> 00:02:37,040
that

79
00:02:34,720 --> 00:02:39,359
we always have to on unix propagate the

80
00:02:37,040 --> 00:02:42,560
uad assignments between systems

81
00:02:39,360 --> 00:02:45,040
um if you have like an nfs ldap setup

82
00:02:42,560 --> 00:02:46,480
it's like like madness to deal with that

83
00:02:45,040 --> 00:02:47,519
right like because uad range is

84
00:02:46,480 --> 00:02:49,119
relatively small

85
00:02:47,519 --> 00:02:51,120
and hence we need to be very very

86
00:02:49,120 --> 00:02:52,319
careful if the system um can show up in

87
00:02:51,120 --> 00:02:53,680
in some environment

88
00:02:52,319 --> 00:02:54,799
that the idea is match because that's

89
00:02:53,680 --> 00:02:56,080
how we do access control and

90
00:02:54,800 --> 00:02:59,599
everything's messy

91
00:02:56,080 --> 00:03:01,120
um yeah in the world of like with ldap

92
00:02:59,599 --> 00:03:02,000
and there was niss before it and all

93
00:03:01,120 --> 00:03:05,200
these things

94
00:03:02,000 --> 00:03:07,360
it's a major um pain and with nfs

95
00:03:05,200 --> 00:03:08,319
to keep this uad things in sync i

96
00:03:07,360 --> 00:03:10,720
personally think

97
00:03:08,319 --> 00:03:11,518
for most cases how people use computers

98
00:03:10,720 --> 00:03:13,440
these days

99
00:03:11,519 --> 00:03:14,879
right like for example how i use my

100
00:03:13,440 --> 00:03:16,800
laptop um

101
00:03:14,879 --> 00:03:18,000
this is kind of weird right like because

102
00:03:16,800 --> 00:03:20,239
we do all this infrastructure

103
00:03:18,000 --> 00:03:21,280
for propagating but i think we shouldn't

104
00:03:20,239 --> 00:03:23,040
right like i think

105
00:03:21,280 --> 00:03:25,120
it would be way better if the uad would

106
00:03:23,040 --> 00:03:25,599
actually be a an artifact of the local

107
00:03:25,120 --> 00:03:27,200
system

108
00:03:25,599 --> 00:03:28,798
that only makes sense by binding some

109
00:03:27,200 --> 00:03:30,159
user record to the local system when we

110
00:03:28,799 --> 00:03:31,920
actually come up with uid

111
00:03:30,159 --> 00:03:33,840
that doesn't mean it has to be that way

112
00:03:31,920 --> 00:03:35,440
exclusively it just means that

113
00:03:33,840 --> 00:03:37,360
i think we should go to that way where

114
00:03:35,440 --> 00:03:38,560
the uid is more the local artifact and

115
00:03:37,360 --> 00:03:39,920
not something global that we are

116
00:03:38,560 --> 00:03:40,879
supposed to propagate that actually

117
00:03:39,920 --> 00:03:42,480
isn't global

118
00:03:40,879 --> 00:03:43,920
because of course these fixed uad

119
00:03:42,480 --> 00:03:46,720
assignments don't work outside of

120
00:03:43,920 --> 00:03:47,920
specific organizations

121
00:03:46,720 --> 00:03:49,680
another big problem that i see is that

122
00:03:47,920 --> 00:03:50,879
there's no encryption built into this

123
00:03:49,680 --> 00:03:52,400
right like your home directory is

124
00:03:50,879 --> 00:03:53,359
generally not encrypted you can't have

125
00:03:52,400 --> 00:03:55,280
encryption on the

126
00:03:53,360 --> 00:03:56,720
on the disk itself like distributions

127
00:03:55,280 --> 00:03:58,239
tend to do full disk encryption or do

128
00:03:56,720 --> 00:04:00,879
encryption or slash home

129
00:03:58,239 --> 00:04:02,159
but that's very distinct from the actual

130
00:04:00,879 --> 00:04:03,439
encryption of the home directory which

131
00:04:02,159 --> 00:04:05,599
doesn't generally exist

132
00:04:03,439 --> 00:04:07,120
and that is weird because it has this

133
00:04:05,599 --> 00:04:09,518
like if you do full description i

134
00:04:07,120 --> 00:04:10,959
i tend to use that on my laptop and most

135
00:04:09,519 --> 00:04:12,000
people probably here in the room also do

136
00:04:10,959 --> 00:04:14,560
the same thing

137
00:04:12,000 --> 00:04:16,238
um you have this weird thing that during

138
00:04:14,560 --> 00:04:17,680
boot up you actually queried for a

139
00:04:16,238 --> 00:04:19,358
password and that's the password that

140
00:04:17,680 --> 00:04:21,199
matters right like that's the password

141
00:04:19,358 --> 00:04:23,120
that actually protects the data

142
00:04:21,199 --> 00:04:24,800
but it's a system password and what the

143
00:04:23,120 --> 00:04:25,360
 the system password is something

144
00:04:24,800 --> 00:04:27,120
like

145
00:04:25,360 --> 00:04:28,479
on unix which was supposed to be a

146
00:04:27,120 --> 00:04:30,800
multi-user system

147
00:04:28,479 --> 00:04:32,800
um the sharing passwords between

148
00:04:30,800 --> 00:04:33,520
multiple people is a very weird concept

149
00:04:32,800 --> 00:04:36,080
right

150
00:04:33,520 --> 00:04:37,359
so uh yeah and then after you typed in

151
00:04:36,080 --> 00:04:38,000
that password where that actually

152
00:04:37,360 --> 00:04:39,600
mattered

153
00:04:38,000 --> 00:04:41,680
you got to view the authentication to

154
00:04:39,600 --> 00:04:42,880
gdm or or your getting or whatever you

155
00:04:41,680 --> 00:04:45,040
want to log into

156
00:04:42,880 --> 00:04:46,639
where we ask for a username and password

157
00:04:45,040 --> 00:04:47,919
and this part doesn't matter much right

158
00:04:46,639 --> 00:04:49,199
like at that point the data is all

159
00:04:47,919 --> 00:04:50,880
unlocked right like it's just about

160
00:04:49,199 --> 00:04:52,880
access control at that point

161
00:04:50,880 --> 00:04:54,400
um anymore not about actually protecting

162
00:04:52,880 --> 00:04:55,280
the data and this is really weird right

163
00:04:54,400 --> 00:04:58,320
like first

164
00:04:55,280 --> 00:04:59,679
the important one that is uh like on a

165
00:04:58,320 --> 00:05:01,680
multi-user system makes

166
00:04:59,680 --> 00:05:03,840
not much philosophical like conceptual

167
00:05:01,680 --> 00:05:05,360
sense and then the per user one

168
00:05:03,840 --> 00:05:07,198
which actually doesn't protect your data

169
00:05:05,360 --> 00:05:08,639
which just does access control and but

170
00:05:07,199 --> 00:05:10,320
it's the one that actually is inherently

171
00:05:08,639 --> 00:05:13,440
the multi-user stuff

172
00:05:10,320 --> 00:05:16,000
so yeah this kind of weird

173
00:05:13,440 --> 00:05:16,000
um um

174
00:05:18,720 --> 00:05:21,600
yeah it's no yeah exactly i mean it's

175
00:05:20,240 --> 00:05:23,440
system controlled encryption it's not

176
00:05:21,600 --> 00:05:24,960
user controlled encryption and that is

177
00:05:23,440 --> 00:05:26,800
like i don't think we should do things

178
00:05:24,960 --> 00:05:29,599
this way right like because uh

179
00:05:26,800 --> 00:05:31,120
because yes most of the time our laptops

180
00:05:29,600 --> 00:05:34,320
are single user systems

181
00:05:31,120 --> 00:05:36,639
um but i think uh still it should be

182
00:05:34,320 --> 00:05:38,560
we should figure out how to encrypt the

183
00:05:36,639 --> 00:05:40,639
stuff how to lock this stuff

184
00:05:38,560 --> 00:05:42,080
um to the actual credentials you want to

185
00:05:40,639 --> 00:05:44,080
lock them to right like the system for

186
00:05:42,080 --> 00:05:45,840
example should be locked to the tpm

187
00:05:44,080 --> 00:05:47,359
but your data should be locked to

188
00:05:45,840 --> 00:05:49,679
something that you control your password

189
00:05:47,360 --> 00:05:51,199
to ub key or something like that

190
00:05:49,680 --> 00:05:52,800
yeah so i call that mismatching

191
00:05:51,199 --> 00:05:54,400
encryption right

192
00:05:52,800 --> 00:05:56,240
it's it's you protect your data with it

193
00:05:54,400 --> 00:05:57,919
but actually

194
00:05:56,240 --> 00:05:59,840
what you protect the data with is a

195
00:05:57,919 --> 00:06:02,080
system property not a user property

196
00:05:59,840 --> 00:06:03,599
um there's also a problem no modern

197
00:06:02,080 --> 00:06:04,880
authentication mechanisms by that i mean

198
00:06:03,600 --> 00:06:06,639
like we live in a world now where uv

199
00:06:04,880 --> 00:06:08,639
keys become a thing

200
00:06:06,639 --> 00:06:10,639
but everything is bound still to one

201
00:06:08,639 --> 00:06:12,479
single password in etsy passwd

202
00:06:10,639 --> 00:06:14,240
now people have retrofitted uv keys into

203
00:06:12,479 --> 00:06:15,758
this but it's always a little bit messy

204
00:06:14,240 --> 00:06:17,360
because it does not live

205
00:06:15,759 --> 00:06:19,120
in the actual user record it's not part

206
00:06:17,360 --> 00:06:20,560
of etsy passwd see shadow

207
00:06:19,120 --> 00:06:22,240
it's part of something like a sidecar

208
00:06:20,560 --> 00:06:24,400
database right so

209
00:06:22,240 --> 00:06:25,360
um the inherent you the database the

210
00:06:24,400 --> 00:06:28,000
design

211
00:06:25,360 --> 00:06:28,639
of unix is around passwords and nothing

212
00:06:28,000 --> 00:06:30,639
else

213
00:06:28,639 --> 00:06:32,080
right so yeah no modern i think

214
00:06:30,639 --> 00:06:33,199
anti-authentication mechanisms and we

215
00:06:32,080 --> 00:06:34,318
live in a world now where we probably

216
00:06:33,199 --> 00:06:35,360
want even more than uv keys and

217
00:06:34,319 --> 00:06:37,199
passwords probably want pattern

218
00:06:35,360 --> 00:06:39,280
authentication face unlocking

219
00:06:37,199 --> 00:06:40,720
fingerprint stuff i don't care but uh

220
00:06:39,280 --> 00:06:42,159
yeah so we're kind of stuck in this

221
00:06:40,720 --> 00:06:44,240
world there which is very weird

222
00:06:42,160 --> 00:06:46,479
it's also not extensible right this is

223
00:06:44,240 --> 00:06:49,919
this is a big one actually i think

224
00:06:46,479 --> 00:06:52,560
um right now struck past wds

225
00:06:49,919 --> 00:06:54,159
defines the same way as it was in 1985.

226
00:06:52,560 --> 00:06:57,680
right you have these five fields

227
00:06:54,160 --> 00:06:58,720
username user id group id real name home

228
00:06:57,680 --> 00:07:02,000
directory and shell

229
00:06:58,720 --> 00:07:03,840
okay that's six um but it's

230
00:07:02,000 --> 00:07:05,360
beyond that you don't get anything right

231
00:07:03,840 --> 00:07:07,280
you can't add a field there it just

232
00:07:05,360 --> 00:07:08,720
it doesn't exist people have of course

233
00:07:07,280 --> 00:07:10,318
always wanted to extend this

234
00:07:08,720 --> 00:07:11,759
and they did right like etsy shadow was

235
00:07:10,319 --> 00:07:12,639
like the first attempt to extend this so

236
00:07:11,759 --> 00:07:14,000
they added

237
00:07:12,639 --> 00:07:16,479
like an encrypted password and they

238
00:07:14,000 --> 00:07:18,400
added some account meta information like

239
00:07:16,479 --> 00:07:20,400
like how long is the account valid and

240
00:07:18,400 --> 00:07:22,638
things like that but it's uh yeah and

241
00:07:20,400 --> 00:07:24,318
then you gain

242
00:07:22,639 --> 00:07:26,560
i call them sidecar databases because

243
00:07:24,319 --> 00:07:27,520
they are managed independently of etsy

244
00:07:26,560 --> 00:07:29,680
past wd

245
00:07:27,520 --> 00:07:31,120
and carry additional information these

246
00:07:29,680 --> 00:07:32,639
things get out of sync

247
00:07:31,120 --> 00:07:34,880
because i mean ad user for example

248
00:07:32,639 --> 00:07:37,039
doesn't care about i don't know

249
00:07:34,880 --> 00:07:38,639
the ssh key for example because the ssh

250
00:07:37,039 --> 00:07:40,639
key like in your home directory

251
00:07:38,639 --> 00:07:42,319
authorized keys file that's a sidecar

252
00:07:40,639 --> 00:07:45,120
database right like it's extending

253
00:07:42,319 --> 00:07:45,599
the user record in a way um without

254
00:07:45,120 --> 00:07:46,960
actually

255
00:07:45,599 --> 00:07:48,960
having to get rid of the user record

256
00:07:46,960 --> 00:07:51,120
right so all these things then they

257
00:07:48,960 --> 00:07:52,960
they get out of things um and they are

258
00:07:51,120 --> 00:07:54,560
messy and if you do resource limits for

259
00:07:52,960 --> 00:07:56,840
example you suddenly have a completely

260
00:07:54,560 --> 00:07:58,639
different configuration format like

261
00:07:56,840 --> 00:08:00,719
pemrlimits.com for these things

262
00:07:58,639 --> 00:08:01,840
so which is inherently user information

263
00:08:00,720 --> 00:08:02,960
like how many how

264
00:08:01,840 --> 00:08:04,878
resources you actually want to give the

265
00:08:02,960 --> 00:08:07,440
user but yeah

266
00:08:04,879 --> 00:08:08,240
um thank you side up basis here se

267
00:08:07,440 --> 00:08:09,919
shadows one

268
00:08:08,240 --> 00:08:11,280
accounts damage is like this gnome thing

269
00:08:09,919 --> 00:08:13,198
that

270
00:08:11,280 --> 00:08:15,359
adds information about like a photo to

271
00:08:13,199 --> 00:08:17,919
the user and a couple of other things

272
00:08:15,360 --> 00:08:19,199
um that's like the perfect sidecar

273
00:08:17,919 --> 00:08:20,719
database because it

274
00:08:19,199 --> 00:08:22,319
actually takes unique stuff and in a

275
00:08:20,720 --> 00:08:24,000
somewhat um

276
00:08:22,319 --> 00:08:25,599
gloom specific way tries to add all

277
00:08:24,000 --> 00:08:28,639
kinds of newer to it

278
00:08:25,599 --> 00:08:31,840
there's samba which maintains like a a

279
00:08:28,639 --> 00:08:34,000
database um for the ca s id

280
00:08:31,840 --> 00:08:35,199
the sid which is like how windows does

281
00:08:34,000 --> 00:08:37,679
user management

282
00:08:35,200 --> 00:08:39,279
um ssh has the ssh keys pam limits the

283
00:08:37,679 --> 00:08:41,598
resource limits and things like that

284
00:08:39,279 --> 00:08:43,279
and there's so much more than this

285
00:08:41,599 --> 00:08:44,560
there's no resource management

286
00:08:43,279 --> 00:08:46,560
like the only resource management you

287
00:08:44,560 --> 00:08:48,000
get is time limits but what they said

288
00:08:46,560 --> 00:08:49,839
like resource management i basically

289
00:08:48,000 --> 00:08:51,680
mean that uh yeah

290
00:08:49,839 --> 00:08:53,600
if we actually have a multi-user system

291
00:08:51,680 --> 00:08:55,199
right um you probably want to assign

292
00:08:53,600 --> 00:08:56,959
a set of resources to specific users

293
00:08:55,200 --> 00:08:57,600
right like because not use all users are

294
00:08:56,959 --> 00:08:59,119
equal

295
00:08:57,600 --> 00:09:00,720
the the administrator probably should

296
00:08:59,120 --> 00:09:03,120
get more memory and cpu

297
00:09:00,720 --> 00:09:04,880
if she wants to or she wants to um than

298
00:09:03,120 --> 00:09:06,560
the than a regular user

299
00:09:04,880 --> 00:09:07,920
right so they're they're in a classic

300
00:09:06,560 --> 00:09:09,119
model there's no resource management

301
00:09:07,920 --> 00:09:10,319
built in the only

302
00:09:09,120 --> 00:09:12,160
resource management you get is pam

303
00:09:10,320 --> 00:09:14,160
limits and that's quite frankly

304
00:09:12,160 --> 00:09:15,199
because uh that resource limit is per

305
00:09:14,160 --> 00:09:17,199
process right

306
00:09:15,200 --> 00:09:19,040
so you can fork you get a new set of

307
00:09:17,200 --> 00:09:19,519
resources fresh for free and then nobody

308
00:09:19,040 --> 00:09:21,760
will

309
00:09:19,519 --> 00:09:23,040
stop you from doing this so how we

310
00:09:21,760 --> 00:09:24,640
actually want to do resource management

311
00:09:23,040 --> 00:09:26,319
these days is with c groups the kind of

312
00:09:24,640 --> 00:09:29,439
stuff that systemy manages

313
00:09:26,320 --> 00:09:31,279
um and we have nothing so far so

314
00:09:29,440 --> 00:09:33,040
these are the problems i always saw um

315
00:09:31,279 --> 00:09:34,800
it's kind of yeah if you start doing

316
00:09:33,040 --> 00:09:36,319
something like homed and you figure out

317
00:09:34,800 --> 00:09:38,000
what do you actually want to fix this is

318
00:09:36,320 --> 00:09:40,480
stuff we want to fix

319
00:09:38,000 --> 00:09:42,160
what we put the focus on is um like i

320
00:09:40,480 --> 00:09:43,839
mean then you have to figure out what

321
00:09:42,160 --> 00:09:45,439
what's the focus actually yeah you want

322
00:09:43,839 --> 00:09:48,399
to uh

323
00:09:45,440 --> 00:09:49,200
um like who you actually want to use

324
00:09:48,399 --> 00:09:51,440
this stuff

325
00:09:49,200 --> 00:09:52,640
the focus for home d is human users

326
00:09:51,440 --> 00:09:55,600
right this is in

327
00:09:52,640 --> 00:09:57,839
in in contrast to system users like i

328
00:09:55,600 --> 00:10:00,080
don't know the the this user

329
00:09:57,839 --> 00:10:00,880
that your apache demon runs under things

330
00:10:00,080 --> 00:10:03,120
like that

331
00:10:00,880 --> 00:10:04,079
so for home you only care about human

332
00:10:03,120 --> 00:10:07,440
users like

333
00:10:04,079 --> 00:10:09,279
me using that thing um in particular

334
00:10:07,440 --> 00:10:10,800
laptop users right like this is a world

335
00:10:09,279 --> 00:10:12,160
on a laptop you usually have one user

336
00:10:10,800 --> 00:10:13,760
maybe have you two users because your

337
00:10:12,160 --> 00:10:15,199
girlfriend uses it too your boyfriend or

338
00:10:13,760 --> 00:10:17,360
whoever

339
00:10:15,200 --> 00:10:18,640
but you're unlikely gonna have 1000

340
00:10:17,360 --> 00:10:19,440
users on this one laptop

341
00:10:18,640 --> 00:10:21,040
right i mean there are certainly

342
00:10:19,440 --> 00:10:23,040
environments which do that but it's out

343
00:10:21,040 --> 00:10:25,120
of the scope for what i care about

344
00:10:23,040 --> 00:10:27,199
so um yeah the amount of views you have

345
00:10:25,120 --> 00:10:30,640
on your laptop is below 10.

346
00:10:27,200 --> 00:10:31,200
that's kind of the focus the goals that

347
00:10:30,640 --> 00:10:32,959
i

348
00:10:31,200 --> 00:10:34,399
uh want to solve at the same way because

349
00:10:32,959 --> 00:10:36,079
i kind of like this is uh

350
00:10:34,399 --> 00:10:38,880
one of them i don't know i'm not sure

351
00:10:36,079 --> 00:10:40,959
how much um how interesting this

352
00:10:38,880 --> 00:10:42,800
particular facet of this in real life

353
00:10:40,959 --> 00:10:44,160
but i kind of found it a sexy idea

354
00:10:42,800 --> 00:10:45,920
which is truly migratable home

355
00:10:44,160 --> 00:10:46,399
directories right all the way to the

356
00:10:45,920 --> 00:10:48,240
point of

357
00:10:46,399 --> 00:10:49,440
having a home on a stick the homeostatic

358
00:10:48,240 --> 00:10:50,240
i mean basically that you have a usb

359
00:10:49,440 --> 00:10:51,760
stick

360
00:10:50,240 --> 00:10:53,360
and that this not only is where you

361
00:10:51,760 --> 00:10:55,040
store your home directory but it is your

362
00:10:53,360 --> 00:10:56,399
home directory meaning that you can plug

363
00:10:55,040 --> 00:10:58,000
it into this laptop today

364
00:10:56,399 --> 00:11:00,079
log in and just works and it can take it

365
00:10:58,000 --> 00:11:02,480
out and put in another laptop tomorrow

366
00:11:00,079 --> 00:11:03,279
log in there and it all just works right

367
00:11:02,480 --> 00:11:05,279
so um

368
00:11:03,279 --> 00:11:07,120
for me my gradable home directories

369
00:11:05,279 --> 00:11:09,680
means you have the

370
00:11:07,120 --> 00:11:11,040
actual data but you also have the the

371
00:11:09,680 --> 00:11:13,519
the accounts information

372
00:11:11,040 --> 00:11:14,240
for that home record all in one unified

373
00:11:13,519 --> 00:11:16,000
uh

374
00:11:14,240 --> 00:11:17,279
place so they can just take it from this

375
00:11:16,000 --> 00:11:20,399
system into another system

376
00:11:17,279 --> 00:11:22,320
right so again this usb stick thing nice

377
00:11:20,399 --> 00:11:23,920
thing and i'm pretty sure some security

378
00:11:22,320 --> 00:11:25,120
paranoid people will love this because

379
00:11:23,920 --> 00:11:27,439
it basically means

380
00:11:25,120 --> 00:11:28,320
you never leave actual payload data on

381
00:11:27,440 --> 00:11:30,240
the system

382
00:11:28,320 --> 00:11:31,600
while you're logged out because you just

383
00:11:30,240 --> 00:11:33,040
have it in your pocket and take it to

384
00:11:31,600 --> 00:11:37,120
the other device and only then

385
00:11:33,040 --> 00:11:38,319
you log in there but in general like um

386
00:11:37,120 --> 00:11:40,000
i'm pretty sure like i personally

387
00:11:38,320 --> 00:11:41,600
wouldn't use this like i want to store

388
00:11:40,000 --> 00:11:42,480
my data on my laptop because everything

389
00:11:41,600 --> 00:11:44,399
else is just

390
00:11:42,480 --> 00:11:45,920
i don't know i'm a lazy person but it

391
00:11:44,399 --> 00:11:47,519
still is is uh

392
00:11:45,920 --> 00:11:49,120
kind of useful that if i get a new

393
00:11:47,519 --> 00:11:50,480
laptop i can just take this one file

394
00:11:49,120 --> 00:11:51,680
which is my home directory and put it

395
00:11:50,480 --> 00:11:54,480
somewhere else and it's

396
00:11:51,680 --> 00:11:57,199
all in there i don't have to reallocate

397
00:11:54,480 --> 00:11:58,240
the same uid and assign etsy passwd in

398
00:11:57,200 --> 00:11:59,680
there and don't have to

399
00:11:58,240 --> 00:12:01,279
populate all these other sidecar

400
00:11:59,680 --> 00:12:03,920
databases so it all matches again with

401
00:12:01,279 --> 00:12:03,920
my old laptop

402
00:12:05,279 --> 00:12:08,720
because we are bringing our whole

403
00:12:06,720 --> 00:12:10,720
directory to some random machine

404
00:12:08,720 --> 00:12:12,399
then how do we protect the home

405
00:12:10,720 --> 00:12:13,680
directory we connect it to some

406
00:12:12,399 --> 00:12:15,440
malicious machine

407
00:12:13,680 --> 00:12:17,920
that someone has grouped account and can

408
00:12:15,440 --> 00:12:20,560
just copy the content of our

409
00:12:17,920 --> 00:12:21,360
uh home directory even creep was

410
00:12:20,560 --> 00:12:23,279
encrypted but

411
00:12:21,360 --> 00:12:24,880
at the time when we logged in it was

412
00:12:23,279 --> 00:12:26,320
decrypted

413
00:12:24,880 --> 00:12:28,320
so i'm not sure if i answered the

414
00:12:26,320 --> 00:12:29,920
question but uh i'm supposed to repeat

415
00:12:28,320 --> 00:12:31,600
it so the question was regarding uh

416
00:12:29,920 --> 00:12:35,199
how is this protected that if you copy

417
00:12:31,600 --> 00:12:39,839
it to some rogue machine that

418
00:12:35,200 --> 00:12:39,839
one to another

419
00:12:44,880 --> 00:12:48,320
so the question is like if you if you

420
00:12:47,040 --> 00:12:49,360
actually have your home directory on a

421
00:12:48,320 --> 00:12:50,480
pendrive and you move it from one

422
00:12:49,360 --> 00:12:51,360
machine to the other and you don't trust

423
00:12:50,480 --> 00:12:52,880
the other one

424
00:12:51,360 --> 00:12:54,959
how does your data get prepared but it

425
00:12:52,880 --> 00:12:57,200
doesn't right the answer to this is

426
00:12:54,959 --> 00:12:59,518
i mean don't do that to untrusted

427
00:12:57,200 --> 00:12:59,519
systems

428
00:13:01,920 --> 00:13:05,360
i mean what do you think like i mean the

429
00:13:03,839 --> 00:13:07,200
point is really like of course you have

430
00:13:05,360 --> 00:13:08,399
to establish some level of trust between

431
00:13:07,200 --> 00:13:10,560
your home directory

432
00:13:08,399 --> 00:13:12,560
and the user right and we do this to

433
00:13:10,560 --> 00:13:14,319
some point like we for example all the

434
00:13:12,560 --> 00:13:16,000
like what when homey manages something

435
00:13:14,320 --> 00:13:18,720
it signs the user records

436
00:13:16,000 --> 00:13:19,040
and makes sure that uh um you have to

437
00:13:18,720 --> 00:13:22,000
have

438
00:13:19,040 --> 00:13:23,040
signed a record that actually has a key

439
00:13:22,000 --> 00:13:25,279
in the key

440
00:13:23,040 --> 00:13:26,880
ring that is on that specific system to

441
00:13:25,279 --> 00:13:28,880
do the other kind of uh

442
00:13:26,880 --> 00:13:30,480
protection but inherently you know the

443
00:13:28,880 --> 00:13:32,480
usb stick cannot

444
00:13:30,480 --> 00:13:34,320
like it's a passive storage right like

445
00:13:32,480 --> 00:13:36,399
it cannot enforce security policies on

446
00:13:34,320 --> 00:13:40,240
its own because it's not a computer

447
00:13:36,399 --> 00:13:42,959
it's a storage device right so um if

448
00:13:40,240 --> 00:13:43,680
the host has access to your credentials

449
00:13:42,959 --> 00:13:46,479
so that it

450
00:13:43,680 --> 00:13:47,680
can unlock your usb storage right if you

451
00:13:46,480 --> 00:13:50,320
were dumb enough

452
00:13:47,680 --> 00:13:50,880
to provide your password to that user

453
00:13:50,320 --> 00:13:53,120
then it's

454
00:13:50,880 --> 00:13:54,160
uh freedom like this system can do

455
00:13:53,120 --> 00:13:56,880
whatever it wants

456
00:13:54,160 --> 00:13:57,920
right but the key of what i'm trying to

457
00:13:56,880 --> 00:13:59,920
design here really is

458
00:13:57,920 --> 00:14:01,199
that you have very clear life cycles

459
00:13:59,920 --> 00:14:02,959
that you basically say

460
00:14:01,199 --> 00:14:04,399
when you're logged out you're logged out

461
00:14:02,959 --> 00:14:06,000
when you're logged in you're logged in

462
00:14:04,399 --> 00:14:07,680
right and while you're logged in you

463
00:14:06,000 --> 00:14:08,240
will get or the system will get access

464
00:14:07,680 --> 00:14:09,839
to the

465
00:14:08,240 --> 00:14:11,920
to the device but when you're logged out

466
00:14:09,839 --> 00:14:12,800
it should not be possible to access your

467
00:14:11,920 --> 00:14:15,279
device right

468
00:14:12,800 --> 00:14:16,639
so that the moment where you decide to

469
00:14:15,279 --> 00:14:18,320
trust that machine

470
00:14:16,639 --> 00:14:20,320
right is the moment where you type in

471
00:14:18,320 --> 00:14:20,720
your password and only then the machine

472
00:14:20,320 --> 00:14:23,120
can

473
00:14:20,720 --> 00:14:25,279
can access it and then when you pull it

474
00:14:23,120 --> 00:14:28,079
out it loses the ability to do this

475
00:14:25,279 --> 00:14:29,360
but yes do not plug this into untrusted

476
00:14:28,079 --> 00:14:32,638
machines if you do you're dumb

477
00:14:29,360 --> 00:14:33,440
i'm sorry so yeah you know how to

478
00:14:32,639 --> 00:14:36,000
convince the

479
00:14:33,440 --> 00:14:37,279
user and make sure that they are aware

480
00:14:36,000 --> 00:14:39,839
that even for they have

481
00:14:37,279 --> 00:14:41,519
all their data on the pen drive they

482
00:14:39,839 --> 00:14:45,120
cannot go just to the library

483
00:14:41,519 --> 00:14:45,120
and connect it to some random pc

484
00:14:47,040 --> 00:14:51,519
this talk is not about fixing the

485
00:14:48,959 --> 00:14:53,839
problem of untrusted computers right

486
00:14:51,519 --> 00:14:54,560
i think we should do this better and

487
00:14:53,839 --> 00:14:55,920
there it's like

488
00:14:54,560 --> 00:14:57,680
chromebooks for example have a better

489
00:14:55,920 --> 00:15:00,639
model there not a perfect model

490
00:14:57,680 --> 00:15:02,638
but i'm like you know you can never have

491
00:15:00,639 --> 00:15:04,480
an entirely secure system because i'm

492
00:15:02,639 --> 00:15:05,360
sure we can lock things down in software

493
00:15:04,480 --> 00:15:07,760
and we should

494
00:15:05,360 --> 00:15:09,600
but also um i don't know i'm not capable

495
00:15:07,760 --> 00:15:12,079
of detecting a keylogger on my machine

496
00:15:09,600 --> 00:15:12,639
like a physical one right so um i don't

497
00:15:12,079 --> 00:15:13,839
know yeah

498
00:15:12,639 --> 00:15:16,160
if you don't trust the machine don't use

499
00:15:13,839 --> 00:15:16,639
it but what i'm trying to get to here

500
00:15:16,160 --> 00:15:19,839
right

501
00:15:16,639 --> 00:15:22,880
is at least that that it is very clearly

502
00:15:19,839 --> 00:15:25,839
find like when data access is allowed

503
00:15:22,880 --> 00:15:27,439
and when it stops right so that's yeah

504
00:15:25,839 --> 00:15:28,720
the only thing that the user has to do

505
00:15:27,440 --> 00:15:29,120
is like provide the password to the

506
00:15:28,720 --> 00:15:32,320
system

507
00:15:29,120 --> 00:15:32,959
and that actually truly unlocks access

508
00:15:32,320 --> 00:15:36,079
to it

509
00:15:32,959 --> 00:15:40,239
so yeah anyway let's

510
00:15:36,079 --> 00:15:41,599
80 of your problems are software using

511
00:15:40,240 --> 00:15:43,920
that are best already

512
00:15:41,600 --> 00:15:46,320
so why you never looked at it for home

513
00:15:43,920 --> 00:15:46,319
directories

514
00:15:52,160 --> 00:15:55,199
yeah i don't think that ever solves any

515
00:15:54,240 --> 00:15:57,360
of these problems

516
00:15:55,199 --> 00:15:58,319
like first of all like uh again home

517
00:15:57,360 --> 00:16:00,000
directories for me is

518
00:15:58,320 --> 00:16:01,440
something that uh self-describing right

519
00:16:00,000 --> 00:16:03,680
like so you have the data store

520
00:16:01,440 --> 00:16:07,279
and you have the user uh record metadata

521
00:16:03,680 --> 00:16:07,279
i don't think that fs does that

522
00:16:07,600 --> 00:16:12,160
is a user manager that has like a user

523
00:16:09,519 --> 00:16:13,920
database in it

524
00:16:12,160 --> 00:16:15,439
again that's not what i'm saying anyway

525
00:16:13,920 --> 00:16:17,439
let's have some discussion otherwise i

526
00:16:15,440 --> 00:16:19,600
think this is um

527
00:16:17,440 --> 00:16:22,079
like this is about user management that

528
00:16:19,600 --> 00:16:23,440
fs is not a user management diamond it's

529
00:16:22,079 --> 00:16:24,719
a file system

530
00:16:23,440 --> 00:16:25,920
and i'm not sure i have to have to

531
00:16:24,720 --> 00:16:27,279
discussion here about what the

532
00:16:25,920 --> 00:16:28,319
difference between a file system and

533
00:16:27,279 --> 00:16:31,839
user managers

534
00:16:28,320 --> 00:16:31,839
so i'm sorry a little but let's discuss

535
00:16:34,839 --> 00:16:37,839
afterwards

536
00:16:39,759 --> 00:16:43,120
um yeah i mean there's a general problem

537
00:16:41,440 --> 00:16:45,519
that uh configuration files

538
00:16:43,120 --> 00:16:47,120
are are not always as stable as we wish

539
00:16:45,519 --> 00:16:48,240
them to be but no that's not not in

540
00:16:47,120 --> 00:16:51,279
focus for this stuff

541
00:16:48,240 --> 00:16:51,680
i mean it's like yeah if apps break like

542
00:16:51,279 --> 00:16:54,720
this

543
00:16:51,680 --> 00:16:57,040
um it's nasty but i think you know

544
00:16:54,720 --> 00:16:58,320
um it's for the apps to fix and it's

545
00:16:57,040 --> 00:17:00,000
it's

546
00:16:58,320 --> 00:17:01,759
i don't think i mean the big thing that

547
00:17:00,000 --> 00:17:03,680
tends to break is usually the downgrades

548
00:17:01,759 --> 00:17:05,039
not the upgrades right like because

549
00:17:03,680 --> 00:17:06,639
app developers have an interest that the

550
00:17:05,039 --> 00:17:07,679
stuff just continues to work as people

551
00:17:06,640 --> 00:17:09,760
update this stuff

552
00:17:07,679 --> 00:17:11,760
but i think the problem becomes less of

553
00:17:09,760 --> 00:17:12,319
a problem as soon as we move to a model

554
00:17:11,760 --> 00:17:13,919
where

555
00:17:12,319 --> 00:17:15,520
software is always updated because we

556
00:17:13,919 --> 00:17:16,400
have to move to that model for security

557
00:17:15,520 --> 00:17:18,160
reasons right

558
00:17:16,400 --> 00:17:20,480
and then this kind of sold as a side

559
00:17:18,160 --> 00:17:20,480
effect

560
00:17:26,880 --> 00:17:29,760
it's kind of you know this is this is

561
00:17:28,240 --> 00:17:30,960
not a problem that is new to this model

562
00:17:29,760 --> 00:17:31,520
right it's a problem that you always had

563
00:17:30,960 --> 00:17:33,440
to deal with

564
00:17:31,520 --> 00:17:35,600
nfs and these kind of things right but

565
00:17:33,440 --> 00:17:37,440
uh yes you are expected to run the new

566
00:17:35,600 --> 00:17:38,000
stuff in a world where we have security

567
00:17:37,440 --> 00:17:40,799
problems

568
00:17:38,000 --> 00:17:41,840
and uh yeah um anyway let's go on with

569
00:17:40,799 --> 00:17:44,400
the slides for a moment

570
00:17:41,840 --> 00:17:46,240
um so yeah the home directory shall be

571
00:17:44,400 --> 00:17:48,320
self-contained right like the data

572
00:17:46,240 --> 00:17:49,919
shall not be distributed over the entire

573
00:17:48,320 --> 00:17:51,200
system there shouldn't be an etsy passw

574
00:17:49,919 --> 00:17:53,039
entry at the shadow entry and all the

575
00:17:51,200 --> 00:17:56,320
sidecar database it should just be

576
00:17:53,039 --> 00:17:57,360
monopolized in one place um

577
00:17:56,320 --> 00:17:59,600
and that also means that the mere

578
00:17:57,360 --> 00:18:02,320
existence of the file home fubar at home

579
00:17:59,600 --> 00:18:03,918
synthesizes the user record right so you

580
00:18:02,320 --> 00:18:05,918
drop it in there and that's a sufficient

581
00:18:03,919 --> 00:18:09,039
so that get and passwd

582
00:18:05,919 --> 00:18:10,559
like this this uh unix tool that allows

583
00:18:09,039 --> 00:18:11,840
you to linux tool that allows you to

584
00:18:10,559 --> 00:18:13,840
animate all users makes

585
00:18:11,840 --> 00:18:14,879
up make sure that the user shows up

586
00:18:13,840 --> 00:18:16,639
right so

587
00:18:14,880 --> 00:18:18,000
um i mean in a way it's the most unique

588
00:18:16,640 --> 00:18:19,520
thing you can do everything's a file

589
00:18:18,000 --> 00:18:20,240
right like and suddenly the user becomes

590
00:18:19,520 --> 00:18:24,639
a file

591
00:18:20,240 --> 00:18:24,640
and in this self-contained um

592
00:18:25,360 --> 00:18:28,959
i kind of mentioned this already that i

593
00:18:27,120 --> 00:18:30,799
wanted you your ids assignments become a

594
00:18:28,960 --> 00:18:32,799
local artifact right like so that

595
00:18:30,799 --> 00:18:34,480
at the moment where you log in the uad

596
00:18:32,799 --> 00:18:36,480
gets assigned um

597
00:18:34,480 --> 00:18:37,840
and it's valid for this local system but

598
00:18:36,480 --> 00:18:38,880
when you move the home directory to the

599
00:18:37,840 --> 00:18:40,639
nozma system

600
00:18:38,880 --> 00:18:41,840
then ideally you get the same uid but it

601
00:18:40,640 --> 00:18:43,200
actually doesn't really matter if it's

602
00:18:41,840 --> 00:18:43,520
taken there already you get a different

603
00:18:43,200 --> 00:18:46,400
one

604
00:18:43,520 --> 00:18:47,440
and we deal with this nicely so yeah

605
00:18:46,400 --> 00:18:48,799
uids become

606
00:18:47,440 --> 00:18:50,080
local artifacts it doesn't mean they

607
00:18:48,799 --> 00:18:51,520
have to become that if you actually want

608
00:18:50,080 --> 00:18:52,720
to have a fixed one lock yourself out

609
00:18:51,520 --> 00:18:54,799
it's all supported

610
00:18:52,720 --> 00:18:56,320
but at least it should be supported and

611
00:18:54,799 --> 00:18:57,520
it should be the default of behavior

612
00:18:56,320 --> 00:18:59,120
that people don't have to think about

613
00:18:57,520 --> 00:19:02,160
synchronizing new ideas across

614
00:18:59,120 --> 00:19:04,320
the entire organization uh

615
00:19:02,160 --> 00:19:06,080
this is kind of core of one of the ideas

616
00:19:04,320 --> 00:19:07,678
that the uni the unification between

617
00:19:06,080 --> 00:19:09,439
user password encryption key i kind of

618
00:19:07,679 --> 00:19:10,960
already indicated that earlier

619
00:19:09,440 --> 00:19:12,480
that we have the service the current

620
00:19:10,960 --> 00:19:13,600
weird split where you have the password

621
00:19:12,480 --> 00:19:14,720
for the full description which is

622
00:19:13,600 --> 00:19:15,840
actually the encryption key

623
00:19:14,720 --> 00:19:17,760
and then you have the user password

624
00:19:15,840 --> 00:19:19,760
which is distinct concept um

625
00:19:17,760 --> 00:19:21,679
i think this is this is wrong should be

626
00:19:19,760 --> 00:19:24,400
the same thing if i can

627
00:19:21,679 --> 00:19:25,679
encrypt a decrypt home directory this is

628
00:19:24,400 --> 00:19:28,160
the same thing to me as

629
00:19:25,679 --> 00:19:29,120
authentication and authentication should

630
00:19:28,160 --> 00:19:30,799
always

631
00:19:29,120 --> 00:19:33,199
be the ability to decrypt the home

632
00:19:30,799 --> 00:19:34,400
directory so uh that things actually are

633
00:19:33,200 --> 00:19:35,679
unified and people can actually

634
00:19:34,400 --> 00:19:37,360
understand this

635
00:19:35,679 --> 00:19:38,640
also extensible user records right i

636
00:19:37,360 --> 00:19:40,000
talk to them so much about the siteguide

637
00:19:38,640 --> 00:19:41,360
database and how awful they are

638
00:19:40,000 --> 00:19:42,960
extensive user records basically mean

639
00:19:41,360 --> 00:19:44,799
that anyone can put anything in these

640
00:19:42,960 --> 00:19:47,600
user records i don't have to care

641
00:19:44,799 --> 00:19:49,520
um we don't have to to have us like a

642
00:19:47,600 --> 00:19:52,639
seven stone set of fields

643
00:19:49,520 --> 00:19:54,320
but the samba people can add i said the

644
00:19:52,640 --> 00:19:55,840
i don't know covers people can put their

645
00:19:54,320 --> 00:19:57,120
stuff in there and whoever wants to put

646
00:19:55,840 --> 00:19:58,879
more stuff can do this

647
00:19:57,120 --> 00:20:00,080
it should be truly extensible and

648
00:19:58,880 --> 00:20:00,799
everybody can have their own fields

649
00:20:00,080 --> 00:20:04,080
depending on

650
00:20:00,799 --> 00:20:06,158
whoever they want to manage

651
00:20:04,080 --> 00:20:07,678
also one important thing is like we live

652
00:20:06,159 --> 00:20:09,200
in a world these days where full

653
00:20:07,679 --> 00:20:11,440
descriptive encryption is used

654
00:20:09,200 --> 00:20:13,039
but also in a world where people don't

655
00:20:11,440 --> 00:20:14,720
turn off their computers anymore i don't

656
00:20:13,039 --> 00:20:16,400
like i checked the uptime yesterday it's

657
00:20:14,720 --> 00:20:17,600
like 50 days i have not turned off my

658
00:20:16,400 --> 00:20:20,640
computer anymore

659
00:20:17,600 --> 00:20:21,280
so um the way how full this encryption

660
00:20:20,640 --> 00:20:23,039
works um

661
00:20:21,280 --> 00:20:24,720
so far is always that uh yeah during

662
00:20:23,039 --> 00:20:26,960
boot you supply the password

663
00:20:24,720 --> 00:20:28,320
and then it stays in memory all the 50

664
00:20:26,960 --> 00:20:29,600
days that i've been using this computer

665
00:20:28,320 --> 00:20:30,240
right like so if you manage to steal my

666
00:20:29,600 --> 00:20:31,678
laptop

667
00:20:30,240 --> 00:20:34,400
and manage to access my memory which is

668
00:20:31,679 --> 00:20:37,520
not as hard as you might think um

669
00:20:34,400 --> 00:20:39,360
you'll find my my my my

670
00:20:37,520 --> 00:20:41,440
decryption keys in memory and can then

671
00:20:39,360 --> 00:20:43,280
decrypt all my data and that sucks right

672
00:20:41,440 --> 00:20:45,039
so what should we do we should make sure

673
00:20:43,280 --> 00:20:46,960
that when you suspend the machine

674
00:20:45,039 --> 00:20:48,400
this stuff is erased from memory first

675
00:20:46,960 --> 00:20:49,039
right so that if somebody steals my

676
00:20:48,400 --> 00:20:51,280
laptop

677
00:20:49,039 --> 00:20:52,799
while it's suspended they still will not

678
00:20:51,280 --> 00:20:55,440
be able to access

679
00:20:52,799 --> 00:20:56,960
um my laptop it's really like as if you

680
00:20:55,440 --> 00:20:59,120
had a house and you would just

681
00:20:56,960 --> 00:21:00,559
put the key next to the door so that

682
00:20:59,120 --> 00:21:01,199
whoever wants to break in can just take

683
00:21:00,559 --> 00:21:04,480
the key and

684
00:21:01,200 --> 00:21:06,799
break in right so uh um

685
00:21:04,480 --> 00:21:08,720
fixing this like lux always had a

686
00:21:06,799 --> 00:21:10,400
concept of suspending

687
00:21:08,720 --> 00:21:11,919
access and just erasing the key so that

688
00:21:10,400 --> 00:21:14,159
this all works but it was always

689
00:21:11,919 --> 00:21:15,600
extremely hard to implement in real life

690
00:21:14,159 --> 00:21:17,600
because if you do fill this encryption

691
00:21:15,600 --> 00:21:20,080
the os itself sits

692
00:21:17,600 --> 00:21:21,360
on the encrypted medium right so um if

693
00:21:20,080 --> 00:21:23,280
you

694
00:21:21,360 --> 00:21:24,719
want to re-request the password from the

695
00:21:23,280 --> 00:21:25,520
user when the system comes back from

696
00:21:24,720 --> 00:21:27,120
resume

697
00:21:25,520 --> 00:21:28,960
you need to ask the user for something

698
00:21:27,120 --> 00:21:30,000
but it cannot be the this os itself

699
00:21:28,960 --> 00:21:32,640
because the os itself

700
00:21:30,000 --> 00:21:34,000
sits on the encrypted medium right and

701
00:21:32,640 --> 00:21:35,679
that basically means that yeah if

702
00:21:34,000 --> 00:21:38,000
something's not paged in

703
00:21:35,679 --> 00:21:40,159
um you need to read from a hard disk you

704
00:21:38,000 --> 00:21:41,840
cannot read from because you haven't

705
00:21:40,159 --> 00:21:43,360
supplied the password yet but you are

706
00:21:41,840 --> 00:21:44,879
the one who is supposed to ask for the

707
00:21:43,360 --> 00:21:45,840
password so you deadlock and everything

708
00:21:44,880 --> 00:21:47,919
ship

709
00:21:45,840 --> 00:21:48,959
so uh we need to come to a world where

710
00:21:47,919 --> 00:21:50,559
we can do this safely

711
00:21:48,960 --> 00:21:52,240
meaning that the infrastructure at us

712
00:21:50,559 --> 00:21:53,760
for the password is to be separate

713
00:21:52,240 --> 00:21:56,559
from the stuff that we actually lock

714
00:21:53,760 --> 00:21:59,200
down where we flush out all the keys

715
00:21:56,559 --> 00:22:00,320
um also what is important to me is like

716
00:21:59,200 --> 00:22:02,480
uh

717
00:22:00,320 --> 00:22:04,320
uh it's not all passwords anymore right

718
00:22:02,480 --> 00:22:06,960
like in particular i'm interested in in

719
00:22:04,320 --> 00:22:08,480
pkcs11 devices like umikey specifically

720
00:22:06,960 --> 00:22:11,120
but also any kind of other

721
00:22:08,480 --> 00:22:12,320
device where um we actually truly use

722
00:22:11,120 --> 00:22:13,439
them properly right not for

723
00:22:12,320 --> 00:22:15,200
authentication

724
00:22:13,440 --> 00:22:16,960
and not just for authentication but also

725
00:22:15,200 --> 00:22:19,039
for the encryption part right so that we

726
00:22:16,960 --> 00:22:20,799
use them as a smart cards that they are

727
00:22:19,039 --> 00:22:22,320
and actually derives encryption keys for

728
00:22:20,799 --> 00:22:23,918
the for the lux medium directly from the

729
00:22:22,320 --> 00:22:26,720
uv keys the correct way

730
00:22:23,919 --> 00:22:28,480
so uh yeah it's kind of key that yeah i

731
00:22:26,720 --> 00:22:30,480
don't know i want to be able to use

732
00:22:28,480 --> 00:22:31,679
ub keys at least and actually not just

733
00:22:30,480 --> 00:22:32,640
use them for i don't know it's

734
00:22:31,679 --> 00:22:34,320
notification

735
00:22:32,640 --> 00:22:35,600
for the indicating to google actually

736
00:22:34,320 --> 00:22:38,559
want to use them to properly and

737
00:22:35,600 --> 00:22:40,158
securely protect my local system

738
00:22:38,559 --> 00:22:41,760
so with a couple of complications with

739
00:22:40,159 --> 00:22:42,880
this ssh logins um

740
00:22:41,760 --> 00:22:45,440
there's one of them like the problem is

741
00:22:42,880 --> 00:22:47,760
always like if we lock this down

742
00:22:45,440 --> 00:22:49,280
properly so that uh unless you have

743
00:22:47,760 --> 00:22:51,120
provided your password there's it's

744
00:22:49,280 --> 00:22:53,520
impossible to access your data

745
00:22:51,120 --> 00:22:54,239
you lose ssh logins to some point

746
00:22:53,520 --> 00:22:55,840
writing because

747
00:22:54,240 --> 00:22:58,559
ssh you know how it works right like it

748
00:22:55,840 --> 00:23:01,439
reads the the um

749
00:22:58,559 --> 00:23:03,120
the the the um as the authorized keys

750
00:23:01,440 --> 00:23:03,760
file from your home directory so before

751
00:23:03,120 --> 00:23:05,120
you're logged in

752
00:23:03,760 --> 00:23:07,120
how's it supposed to do that if the home

753
00:23:05,120 --> 00:23:08,959
directory is encrypted and you only have

754
00:23:07,120 --> 00:23:10,320
can decrypt it off your authenticated

755
00:23:08,960 --> 00:23:11,919
that thing is solvable and we solve it

756
00:23:10,320 --> 00:23:13,760
to some point um because we're actually

757
00:23:11,919 --> 00:23:15,520
able to to embed

758
00:23:13,760 --> 00:23:17,120
the the authorized key stuff into the

759
00:23:15,520 --> 00:23:18,158
user record which is available before

760
00:23:17,120 --> 00:23:20,559
you actually mount it

761
00:23:18,159 --> 00:23:21,679
but then you still have the problem uh

762
00:23:20,559 --> 00:23:23,600
somewhere

763
00:23:21,679 --> 00:23:25,360
if you log in for the first time the the

764
00:23:23,600 --> 00:23:28,240
password needs to be supplied

765
00:23:25,360 --> 00:23:29,199
right like uh uh in authentication by

766
00:23:28,240 --> 00:23:31,360
ssh

767
00:23:29,200 --> 00:23:32,640
keys like how people use ssh means

768
00:23:31,360 --> 00:23:34,000
basically there's never a password

769
00:23:32,640 --> 00:23:34,799
actually exchanged but we need that

770
00:23:34,000 --> 00:23:36,559
password

771
00:23:34,799 --> 00:23:38,639
to unlock the disk an ideal world we

772
00:23:36,559 --> 00:23:40,879
could just fix it so that

773
00:23:38,640 --> 00:23:42,400
when you log in first ssh does its own

774
00:23:40,880 --> 00:23:43,360
authentication and we would then simply

775
00:23:42,400 --> 00:23:44,799
ask the user

776
00:23:43,360 --> 00:23:46,479
hey please provide the actual password

777
00:23:44,799 --> 00:23:48,400
so i can decrypt the hard disk for you

778
00:23:46,480 --> 00:23:49,760
fortunately the way ssh and pam and

779
00:23:48,400 --> 00:23:50,240
these things work we can't rightly do

780
00:23:49,760 --> 00:23:52,720
this

781
00:23:50,240 --> 00:23:54,320
it's not a big problem i know in the

782
00:23:52,720 --> 00:23:56,720
previous times i did this talk people

783
00:23:54,320 --> 00:23:57,439
really really uh hung themselves up on

784
00:23:56,720 --> 00:23:58,799
this issue

785
00:23:57,440 --> 00:24:00,559
i don't think it's much of a big problem

786
00:23:58,799 --> 00:24:02,158
right first of all it's about laptops

787
00:24:00,559 --> 00:24:04,000
it's the stuff you log and always as a

788
00:24:02,159 --> 00:24:06,240
date it was as a

789
00:24:04,000 --> 00:24:07,200
with ssh out of it's not the stuff you

790
00:24:06,240 --> 00:24:08,720
typically log in

791
00:24:07,200 --> 00:24:10,640
if you do you do it for emergency

792
00:24:08,720 --> 00:24:12,000
purposes and i can live with that to

793
00:24:10,640 --> 00:24:13,600
some point also

794
00:24:12,000 --> 00:24:15,360
you can always do this thing where you

795
00:24:13,600 --> 00:24:16,719
log into some other account that doesn't

796
00:24:15,360 --> 00:24:18,158
have these kind of protections

797
00:24:16,720 --> 00:24:19,520
then locally provide the password to

798
00:24:18,159 --> 00:24:19,919
unlock it like there's a command for

799
00:24:19,520 --> 00:24:21,520
that

800
00:24:19,919 --> 00:24:23,840
and just log out and unlock and really

801
00:24:21,520 --> 00:24:25,520
because as soon as it's unlocked once

802
00:24:23,840 --> 00:24:26,959
the ssh works as it always worked

803
00:24:25,520 --> 00:24:28,240
because then the password is applied and

804
00:24:26,960 --> 00:24:30,799
then the home directory is mounted and

805
00:24:28,240 --> 00:24:30,799
everything's good

806
00:24:30,840 --> 00:24:34,559
um to make sure that you're on the front

807
00:24:32,400 --> 00:24:35,760
page you mentioned that ssh keys are not

808
00:24:34,559 --> 00:24:38,158
part of the

809
00:24:35,760 --> 00:24:40,240
uh user record or anything which means

810
00:24:38,159 --> 00:24:41,440
that they reside in plain text on that

811
00:24:40,240 --> 00:24:45,360
pendrive right

812
00:24:41,440 --> 00:24:47,360
no no okay so the question was regarding

813
00:24:45,360 --> 00:24:48,719
uh what about these ssh authorized keys

814
00:24:47,360 --> 00:24:50,320
if they are part of the user

815
00:24:48,720 --> 00:24:51,760
record do they reside unencrypted on the

816
00:24:50,320 --> 00:24:52,559
pen drive no they don't like if you

817
00:24:51,760 --> 00:24:54,000
actually again

818
00:24:52,559 --> 00:24:55,360
don't hang yourself up on the pendrive i

819
00:24:54,000 --> 00:24:56,720
made that as an example but i don't want

820
00:24:55,360 --> 00:24:58,000
you to think that home depot home

821
00:24:56,720 --> 00:24:59,840
directories and pen drives

822
00:24:58,000 --> 00:25:01,440
you can do that but let's forget about

823
00:24:59,840 --> 00:25:02,399
the pendrive thing but uh no we of

824
00:25:01,440 --> 00:25:04,240
course made sure that this

825
00:25:02,400 --> 00:25:05,679
doesn't happen so the user record is

826
00:25:04,240 --> 00:25:09,840
actually stored three times

827
00:25:05,679 --> 00:25:12,080
um uh per pen drive or loopback file

828
00:25:09,840 --> 00:25:13,439
um once inside of the home directory

829
00:25:12,080 --> 00:25:17,199
which is encrypted

830
00:25:13,440 --> 00:25:18,480
once uh uh in an encrypted form in the

831
00:25:17,200 --> 00:25:19,840
lux header

832
00:25:18,480 --> 00:25:21,760
which is entirely redundant the only

833
00:25:19,840 --> 00:25:23,439
reason we do this is is mostly because

834
00:25:21,760 --> 00:25:25,200
the kernel file system people made very

835
00:25:23,440 --> 00:25:28,400
clear that they are not interested

836
00:25:25,200 --> 00:25:29,679
in making sure that uh images or

837
00:25:28,400 --> 00:25:31,440
like file system images that you have

838
00:25:29,679 --> 00:25:32,240
that are rogue cannot exploit the kernel

839
00:25:31,440 --> 00:25:34,240
when you mount them

840
00:25:32,240 --> 00:25:35,760
right like there is no fuzzing and these

841
00:25:34,240 --> 00:25:37,039
things taking place so that you can have

842
00:25:35,760 --> 00:25:38,960
rogue file system then the kernel

843
00:25:37,039 --> 00:25:39,360
doesn't up if that actually access

844
00:25:38,960 --> 00:25:40,880
them

845
00:25:39,360 --> 00:25:42,399
so that basically means we always need

846
00:25:40,880 --> 00:25:44,159
to establish trust first

847
00:25:42,400 --> 00:25:46,080
to some point at least before we mount

848
00:25:44,159 --> 00:25:49,200
it right and the way we do this

849
00:25:46,080 --> 00:25:52,080
is by decrypting first that

850
00:25:49,200 --> 00:25:53,679
user record that is on the usb stick uh

851
00:25:52,080 --> 00:25:54,240
verifying that it's properly signed that

852
00:25:53,679 --> 00:25:55,360
it's a

853
00:25:54,240 --> 00:25:56,960
new record that's actually supposed to

854
00:25:55,360 --> 00:25:58,559
log in and only then we go into mounting

855
00:25:56,960 --> 00:26:00,159
so that the minimal

856
00:25:58,559 --> 00:26:02,240
level of authentication is established

857
00:26:00,159 --> 00:26:03,840
but anyway this user record is encrypted

858
00:26:02,240 --> 00:26:05,360
like the first one and then there's a

859
00:26:03,840 --> 00:26:07,678
third one which is actually

860
00:26:05,360 --> 00:26:08,879
copied onto the host the first time you

861
00:26:07,679 --> 00:26:10,720
log in right

862
00:26:08,880 --> 00:26:12,559
because we still have to pin your user

863
00:26:10,720 --> 00:26:14,080
id so that every time you come back you

864
00:26:12,559 --> 00:26:14,960
get the same user id that's important

865
00:26:14,080 --> 00:26:17,199
because

866
00:26:14,960 --> 00:26:19,360
the way unix works if you have a file in

867
00:26:17,200 --> 00:26:22,000
some writable directory somewhere

868
00:26:19,360 --> 00:26:23,279
um we cannot recycle the uid right now

869
00:26:22,000 --> 00:26:24,799
it's something we also want to fix with

870
00:26:23,279 --> 00:26:26,080
sandboxing but it's a separate story

871
00:26:24,799 --> 00:26:27,760
independent of this one

872
00:26:26,080 --> 00:26:29,840
but anyway so yeah you basically end up

873
00:26:27,760 --> 00:26:33,200
with three copies a two on the stick

874
00:26:29,840 --> 00:26:36,240
one on the system um and uh yeah that we

875
00:26:33,200 --> 00:26:37,840
carefully make sure that when you lose

876
00:26:36,240 --> 00:26:38,960
your usb stick on the street somebody

877
00:26:37,840 --> 00:26:39,918
else picks it up that the only

878
00:26:38,960 --> 00:26:42,320
information

879
00:26:39,919 --> 00:26:43,360
that is actually leaked um to that user

880
00:26:42,320 --> 00:26:44,799
is your username

881
00:26:43,360 --> 00:26:46,639
right like because we need that because

882
00:26:44,799 --> 00:26:48,080
if we stick it in then you have to still

883
00:26:46,640 --> 00:26:48,799
type something into a getty prompt or

884
00:26:48,080 --> 00:26:51,120
something

885
00:26:48,799 --> 00:26:52,320
um and then provide the password the

886
00:26:51,120 --> 00:26:53,760
password is

887
00:26:52,320 --> 00:26:55,760
when you provide that for the first time

888
00:26:53,760 --> 00:26:58,400
is actually the thing that unlocks

889
00:26:55,760 --> 00:26:59,679
um the user record because again as

890
00:26:58,400 --> 00:27:02,000
talked for

891
00:26:59,679 --> 00:27:03,120
earlier we need to define clearly the

892
00:27:02,000 --> 00:27:04,720
point in time

893
00:27:03,120 --> 00:27:06,399
where this trust is established where

894
00:27:04,720 --> 00:27:07,840
you provide the password to tell the

895
00:27:06,400 --> 00:27:12,400
system it's okay now

896
00:27:07,840 --> 00:27:15,039
you may have access i trust you um

897
00:27:12,400 --> 00:27:15,679
disk space assignments so with home de

898
00:27:15,039 --> 00:27:18,080
like uh

899
00:27:15,679 --> 00:27:19,200
the way i like home d is actually

900
00:27:18,080 --> 00:27:20,080
something that has five different

901
00:27:19,200 --> 00:27:22,960
backgrounds

902
00:27:20,080 --> 00:27:23,600
um the backend that i try to push people

903
00:27:22,960 --> 00:27:25,200
towards

904
00:27:23,600 --> 00:27:26,959
is the lux back and where you basically

905
00:27:25,200 --> 00:27:28,799
either have your usb stick or you have a

906
00:27:26,960 --> 00:27:32,000
loopback file in slash home

907
00:27:28,799 --> 00:27:33,520
where everything is is stored internally

908
00:27:32,000 --> 00:27:35,279
but there are actually a couple of other

909
00:27:33,520 --> 00:27:36,480
backends like there's one for fs crypt

910
00:27:35,279 --> 00:27:39,120
which is like xd4

911
00:27:36,480 --> 00:27:40,720
online like like the the encryption that

912
00:27:39,120 --> 00:27:42,879
is above the file system layer

913
00:27:40,720 --> 00:27:44,240
um there is also a couple of others like

914
00:27:42,880 --> 00:27:45,039
plain directories even if you don't care

915
00:27:44,240 --> 00:27:46,320
about encryption

916
00:27:45,039 --> 00:27:47,360
but uh yeah the one that i actually

917
00:27:46,320 --> 00:27:48,879
think that people should be using is the

918
00:27:47,360 --> 00:27:49,840
lux one because it has a stronger

919
00:27:48,880 --> 00:27:52,399
security

920
00:27:49,840 --> 00:27:53,120
um uh properties and allows you to do

921
00:27:52,399 --> 00:27:54,399
these things like

922
00:27:53,120 --> 00:27:56,719
raising the keys for memory when you

923
00:27:54,399 --> 00:27:57,678
suspend and more things but it comes at

924
00:27:56,720 --> 00:27:59,360
an

925
00:27:57,679 --> 00:28:00,880
interesting behavior which is disk space

926
00:27:59,360 --> 00:28:02,000
assignment if we have a loopback file

927
00:28:00,880 --> 00:28:04,240
for every user in slash

928
00:28:02,000 --> 00:28:05,200
home then it basically means uh yeah

929
00:28:04,240 --> 00:28:07,279
this like

930
00:28:05,200 --> 00:28:08,720
how how you size that loopback file

931
00:28:07,279 --> 00:28:11,039
basically means how much data

932
00:28:08,720 --> 00:28:12,640
that user can store right traditionally

933
00:28:11,039 --> 00:28:14,480
on unix um

934
00:28:12,640 --> 00:28:15,679
we always said that uh yeah on my laptop

935
00:28:14,480 --> 00:28:17,279
if i have five users

936
00:28:15,679 --> 00:28:18,799
all of them can fill up slash home as

937
00:28:17,279 --> 00:28:21,200
they want they all

938
00:28:18,799 --> 00:28:22,799
fight for the viable disk space and the

939
00:28:21,200 --> 00:28:24,559
one who is lucky is lucky and the one

940
00:28:22,799 --> 00:28:26,158
who isn't lucky is not lucky right

941
00:28:24,559 --> 00:28:27,600
with disk spaces down and with loopback

942
00:28:26,159 --> 00:28:28,640
files you of course have to size the

943
00:28:27,600 --> 00:28:30,559
stuff a priori

944
00:28:28,640 --> 00:28:32,399
we can resize online all the time that's

945
00:28:30,559 --> 00:28:34,320
great that that's exposed and home d

946
00:28:32,399 --> 00:28:35,439
but you still have to yeah you basically

947
00:28:34,320 --> 00:28:37,840
get committed

948
00:28:35,440 --> 00:28:38,480
uh disk based assignments and if you

949
00:28:37,840 --> 00:28:40,639
think about it

950
00:28:38,480 --> 00:28:42,000
in a simple way they cannot overlap

951
00:28:40,640 --> 00:28:44,320
right so that basically you

952
00:28:42,000 --> 00:28:45,039
lose the other commit functionality that

953
00:28:44,320 --> 00:28:46,480
how

954
00:28:45,039 --> 00:28:48,559
uh user management traditionally worked

955
00:28:46,480 --> 00:28:50,320
where you basically would say yeah um

956
00:28:48,559 --> 00:28:51,840
even if you use u-quota you could say i

957
00:28:50,320 --> 00:28:53,439
have a one gigabyte disk but i give

958
00:28:51,840 --> 00:28:54,639
everybody two gigabytes of it which make

959
00:28:53,440 --> 00:28:56,720
no sense but you could do this and

960
00:28:54,640 --> 00:28:58,720
what's kind of how how we did this thing

961
00:28:56,720 --> 00:28:59,679
right so i don't think that's much of a

962
00:28:58,720 --> 00:29:01,600
problem because we have these nice

963
00:28:59,679 --> 00:29:02,960
behaviors in home d where you can do

964
00:29:01,600 --> 00:29:06,320
stuff like

965
00:29:02,960 --> 00:29:07,600
you know sparse files and discard um

966
00:29:06,320 --> 00:29:09,200
like on unix we have this concept of

967
00:29:07,600 --> 00:29:10,000
sparse files where basically if you have

968
00:29:09,200 --> 00:29:12,640
a

969
00:29:10,000 --> 00:29:14,320
large file and it has euros in it you

970
00:29:12,640 --> 00:29:15,919
don't actually have to

971
00:29:14,320 --> 00:29:17,360
allocate space for these zeros but you

972
00:29:15,919 --> 00:29:18,559
can just let the file system deal with

973
00:29:17,360 --> 00:29:20,080
it and tell it that this is

974
00:29:18,559 --> 00:29:21,760
empty space you're not supposed to store

975
00:29:20,080 --> 00:29:24,399
it just when i read it

976
00:29:21,760 --> 00:29:25,279
give me empty space like zeros back so

977
00:29:24,399 --> 00:29:27,039
um

978
00:29:25,279 --> 00:29:28,799
and uh we can use it all across the

979
00:29:27,039 --> 00:29:30,240
stack like that the loopback

980
00:29:28,799 --> 00:29:32,240
device does that and the file system

981
00:29:30,240 --> 00:29:34,480
device does that

982
00:29:32,240 --> 00:29:35,679
and then homily we have this automatism

983
00:29:34,480 --> 00:29:37,440
that when you log in

984
00:29:35,679 --> 00:29:38,880
we actually allocate stuff for you so

985
00:29:37,440 --> 00:29:39,520
that actually this white space is

986
00:29:38,880 --> 00:29:40,799
removed

987
00:29:39,520 --> 00:29:42,320
that basically means that while you're

988
00:29:40,799 --> 00:29:42,799
logged in you get these guarantees that

989
00:29:42,320 --> 00:29:44,240
the

990
00:29:42,799 --> 00:29:46,240
one gigabyte you got assigned is

991
00:29:44,240 --> 00:29:49,039
actually um what you get assigned

992
00:29:46,240 --> 00:29:50,080
when you log out we tell basically the

993
00:29:49,039 --> 00:29:52,480
kernel to remove

994
00:29:50,080 --> 00:29:53,360
all the holes again return it basically

995
00:29:52,480 --> 00:29:55,279
to the underlying

996
00:29:53,360 --> 00:29:57,120
file system so that somebody also then

997
00:29:55,279 --> 00:30:00,240
logs and um can use them

998
00:29:57,120 --> 00:30:02,000
um the effect of this is um

999
00:30:00,240 --> 00:30:03,360
yeah we get give you guarantees that

1000
00:30:02,000 --> 00:30:04,559
when you log in and you are assigned one

1001
00:30:03,360 --> 00:30:06,000
gigabyte you get the

1002
00:30:04,559 --> 00:30:08,080
one gigabyte and nobody can take that

1003
00:30:06,000 --> 00:30:10,480
away from you if you're locked out

1004
00:30:08,080 --> 00:30:11,439
everything is shrunk to the actual space

1005
00:30:10,480 --> 00:30:14,000
that you need

1006
00:30:11,440 --> 00:30:14,720
um and uh other people can use it space

1007
00:30:14,000 --> 00:30:16,640
so uh

1008
00:30:14,720 --> 00:30:18,080
yes this question assignment becomes a

1009
00:30:16,640 --> 00:30:21,039
little bit more complex but it's

1010
00:30:18,080 --> 00:30:22,559
actually i think very much very nicely

1011
00:30:21,039 --> 00:30:24,640
manageable

1012
00:30:22,559 --> 00:30:26,000
as long as you don't assume that you

1013
00:30:24,640 --> 00:30:27,520
want multiple users

1014
00:30:26,000 --> 00:30:28,559
to use your laptop at the same time i'm

1015
00:30:27,520 --> 00:30:29,760
not sure how that even would work

1016
00:30:28,559 --> 00:30:31,279
because i only have one screen one

1017
00:30:29,760 --> 00:30:33,600
keyboard but sure

1018
00:30:31,279 --> 00:30:36,159
so yeah there's also the problem with

1019
00:30:33,600 --> 00:30:37,918
you uid assignments um

1020
00:30:36,159 --> 00:30:39,520
and it sucks a bit like because as i

1021
00:30:37,919 --> 00:30:41,760
mentioned i want that the uads become

1022
00:30:39,520 --> 00:30:43,279
an artifact of the local system and if

1023
00:30:41,760 --> 00:30:44,399
they become artifact of the local system

1024
00:30:43,279 --> 00:30:45,919
we have to pick a uid

1025
00:30:44,399 --> 00:30:48,399
at the first login and assign it to that

1026
00:30:45,919 --> 00:30:49,200
user that is not used on that specific

1027
00:30:48,399 --> 00:30:51,600
system yet

1028
00:30:49,200 --> 00:30:52,960
but that is sucks because then all the

1029
00:30:51,600 --> 00:30:53,840
files in the home directory will be

1030
00:30:52,960 --> 00:30:56,159
owned by

1031
00:30:53,840 --> 00:30:58,720
wherever this stuff was mounted earlier

1032
00:30:56,159 --> 00:31:00,399
where it got a possibly different uid

1033
00:30:58,720 --> 00:31:01,679
or do we deal with this ideally we would

1034
00:31:00,399 --> 00:31:03,918
just tell the kernel mount this stuff

1035
00:31:01,679 --> 00:31:05,360
and make all files owned by this uid

1036
00:31:03,919 --> 00:31:06,720
unfortunately kernel currently does

1037
00:31:05,360 --> 00:31:08,799
it doesn't have that hopefully

1038
00:31:06,720 --> 00:31:10,799
eventually does so what do we do we do

1039
00:31:08,799 --> 00:31:12,720
recursive shown meaning that like when

1040
00:31:10,799 --> 00:31:14,080
you log in and the you doesn't matter

1041
00:31:12,720 --> 00:31:16,159
we just actually go to the file system

1042
00:31:14,080 --> 00:31:17,600
and turn all files sucks

1043
00:31:16,159 --> 00:31:19,039
doesn't suck as much as you might think

1044
00:31:17,600 --> 00:31:20,879
because actually joining recursively on

1045
00:31:19,039 --> 00:31:22,240
modern file system is ridiculously fast

1046
00:31:20,880 --> 00:31:23,600
we're optimized for this kind of thing

1047
00:31:22,240 --> 00:31:26,559
that the entry lookups are

1048
00:31:23,600 --> 00:31:27,199
cheap and uh so it's not as slow as you

1049
00:31:26,559 --> 00:31:29,360
might think

1050
00:31:27,200 --> 00:31:30,240
like at least on my home directory with

1051
00:31:29,360 --> 00:31:33,360
i don't know

1052
00:31:30,240 --> 00:31:34,480
500 gigabytes or something or more it

1053
00:31:33,360 --> 00:31:38,320
takes like two seconds

1054
00:31:34,480 --> 00:31:40,799
if the uid actually changes

1055
00:31:38,320 --> 00:31:42,480
uh yeah this comes up all the time um uh

1056
00:31:40,799 --> 00:31:44,240
we can use usernamespace for that but

1057
00:31:42,480 --> 00:31:45,840
actually i don't think we want to

1058
00:31:44,240 --> 00:31:47,200
username spaces basically means that you

1059
00:31:45,840 --> 00:31:48,799
have to have a sandbox around the user

1060
00:31:47,200 --> 00:31:49,840
because he has to live in that or he has

1061
00:31:48,799 --> 00:31:52,879
to live in that

1062
00:31:49,840 --> 00:31:53,678
um in that namespace but that sucks

1063
00:31:52,880 --> 00:31:55,360
because uh

1064
00:31:53,679 --> 00:31:57,200
if you as soon as you do sandboxing you

1065
00:31:55,360 --> 00:31:59,360
basically lose privileges on the system

1066
00:31:57,200 --> 00:32:00,640
you live in your own little world um

1067
00:31:59,360 --> 00:32:02,158
people have done this before

1068
00:32:00,640 --> 00:32:03,279
particularly for file system namespace

1069
00:32:02,159 --> 00:32:04,240
and i'm pretty sure we should go that

1070
00:32:03,279 --> 00:32:07,200
way eventually

1071
00:32:04,240 --> 00:32:08,960
but it also means that yeah weird things

1072
00:32:07,200 --> 00:32:10,799
happen because if you do these kind of

1073
00:32:08,960 --> 00:32:13,039
mountain name spaces then you see the

1074
00:32:10,799 --> 00:32:14,960
system in a completely different way

1075
00:32:13,039 --> 00:32:16,799
than you would traditionally do with

1076
00:32:14,960 --> 00:32:18,399
home d i didn't want to go to that step

1077
00:32:16,799 --> 00:32:20,720
yet right like i think we should have

1078
00:32:18,399 --> 00:32:22,158
sandboxing but also this is inherently

1079
00:32:20,720 --> 00:32:23,519
supposed to be something that i want to

1080
00:32:22,159 --> 00:32:25,039
use on my laptop right

1081
00:32:23,519 --> 00:32:26,799
and if my user can't see the system

1082
00:32:25,039 --> 00:32:28,158
anymore the way it is then i'm going to

1083
00:32:26,799 --> 00:32:29,679
have a very hard time

1084
00:32:28,159 --> 00:32:30,880
with debugging that stuff but you're

1085
00:32:29,679 --> 00:32:32,559
absolutely right eventually we should

1086
00:32:30,880 --> 00:32:33,919
have sent boxing and um i don't know if

1087
00:32:32,559 --> 00:32:35,039
i built a laptop like this and give that

1088
00:32:33,919 --> 00:32:37,039
to my mother

1089
00:32:35,039 --> 00:32:39,039
she has no need to see all the processes

1090
00:32:37,039 --> 00:32:40,320
owned by the correct users so

1091
00:32:39,039 --> 00:32:42,080
for her we definitely want the

1092
00:32:40,320 --> 00:32:45,760
sandboxing just work

1093
00:32:42,080 --> 00:32:48,080
um yeah like locking i've already talked

1094
00:32:45,760 --> 00:32:51,120
about this like about the stuff that uh

1095
00:32:48,080 --> 00:32:53,039
yeah i mean so uh

1096
00:32:51,120 --> 00:32:54,959
as mentioned home d does this thing

1097
00:32:53,039 --> 00:32:55,440
where when you suspend the system all

1098
00:32:54,960 --> 00:32:57,519
the

1099
00:32:55,440 --> 00:32:59,440
crypto keys that actually used for for

1100
00:32:57,519 --> 00:33:01,600
luck stuff is removed from memory

1101
00:32:59,440 --> 00:33:03,039
but then we have the problem uh that

1102
00:33:01,600 --> 00:33:04,399
when the system comes back again

1103
00:33:03,039 --> 00:33:05,760
we have to provide the passwords again

1104
00:33:04,399 --> 00:33:06,399
so that he can actually use your home

1105
00:33:05,760 --> 00:33:08,158
directory

1106
00:33:06,399 --> 00:33:09,600
the way we address this right now is we

1107
00:33:08,159 --> 00:33:12,559
don't

1108
00:33:09,600 --> 00:33:14,399
the the um we have this required

1109
00:33:12,559 --> 00:33:15,200
basically that after you come back from

1110
00:33:14,399 --> 00:33:17,039
resume

1111
00:33:15,200 --> 00:33:18,880
um there's some kind of authentication

1112
00:33:17,039 --> 00:33:20,320
taking place where we can read

1113
00:33:18,880 --> 00:33:22,399
the password again from the user and use

1114
00:33:20,320 --> 00:33:23,678
it to unlock stuff well the way i

1115
00:33:22,399 --> 00:33:24,799
think of this would should work in the

1116
00:33:23,679 --> 00:33:25,679
end of that if you for example if you

1117
00:33:24,799 --> 00:33:28,879
use gnome

1118
00:33:25,679 --> 00:33:29,679
that uh right right now you get when the

1119
00:33:28,880 --> 00:33:31,039
system

1120
00:33:29,679 --> 00:33:32,720
resumes again you get this lock screen

1121
00:33:31,039 --> 00:33:34,640
where you're supposed to we authenticate

1122
00:33:32,720 --> 00:33:37,840
but this password is always stays with a

1123
00:33:34,640 --> 00:33:39,519
gnome and i think it's yeah and it runs

1124
00:33:37,840 --> 00:33:40,959
like this password prompt runs

1125
00:33:39,519 --> 00:33:43,279
under the user id of the user itself

1126
00:33:40,960 --> 00:33:44,559
which i think is problematic anyway but

1127
00:33:43,279 --> 00:33:46,240
that that approach doesn't really work

1128
00:33:44,559 --> 00:33:47,360
anymore because after all if we come

1129
00:33:46,240 --> 00:33:48,880
back from the resume

1130
00:33:47,360 --> 00:33:50,479
everything that the is in the home

1131
00:33:48,880 --> 00:33:51,760
directory that access the home directory

1132
00:33:50,480 --> 00:33:53,440
is going to be suspended

1133
00:33:51,760 --> 00:33:54,720
because we removed the key so that it

1134
00:33:53,440 --> 00:33:55,600
can't actually read or write from that

1135
00:33:54,720 --> 00:33:57,760
home directory

1136
00:33:55,600 --> 00:33:58,959
so what we do need to do there is that

1137
00:33:57,760 --> 00:34:00,559
instead of

1138
00:33:58,960 --> 00:34:02,240
doing the screen lock from the user's

1139
00:34:00,559 --> 00:34:03,360
own session we need to switch back to

1140
00:34:02,240 --> 00:34:05,519
gdm or something

1141
00:34:03,360 --> 00:34:06,799
so to display manager to some privileged

1142
00:34:05,519 --> 00:34:07,600
component that also username and

1143
00:34:06,799 --> 00:34:09,759
password

1144
00:34:07,600 --> 00:34:11,040
and then um when that when you provide

1145
00:34:09,760 --> 00:34:11,679
the password we can use it to unlock

1146
00:34:11,040 --> 00:34:13,040
everything

1147
00:34:11,679 --> 00:34:14,879
and then you can switch back so this is

1148
00:34:13,040 --> 00:34:16,000
a little bit of a complication but

1149
00:34:14,879 --> 00:34:17,918
talk to the ground people i think

1150
00:34:16,000 --> 00:34:20,320
they're very much on board with

1151
00:34:17,918 --> 00:34:21,279
making this work um as long as we don't

1152
00:34:20,320 --> 00:34:24,399
have that you can even

1153
00:34:21,280 --> 00:34:26,800
just do switch to a getty do quick login

1154
00:34:24,399 --> 00:34:29,199
log out again

1155
00:34:26,800 --> 00:34:30,720
playing media where you're locked sorry

1156
00:34:29,199 --> 00:34:31,118
like playing media where you're locked

1157
00:34:30,719 --> 00:34:35,279
or

1158
00:34:31,119 --> 00:34:38,720
access to somebody that you want

1159
00:34:35,280 --> 00:34:41,919
for example introduce the ability to

1160
00:34:38,719 --> 00:34:41,918
differentiate your media right

1161
00:34:43,760 --> 00:34:47,040
um like media playing immediately like

1162
00:34:46,480 --> 00:34:49,918
like

1163
00:34:47,040 --> 00:34:51,040
music playing well i mean it's it's like

1164
00:34:49,918 --> 00:34:52,799
this stuff

1165
00:34:51,040 --> 00:34:54,560
is supposed to be secure right like that

1166
00:34:52,800 --> 00:34:56,159
so that you get this guarantee

1167
00:34:54,560 --> 00:34:57,680
and when you you're not sitting in front

1168
00:34:56,159 --> 00:34:59,839
of the computer and have provided

1169
00:34:57,680 --> 00:35:01,759
um the password when you started using

1170
00:34:59,839 --> 00:35:03,440
it that nothing can access

1171
00:35:01,760 --> 00:35:04,880
your home directory right like the

1172
00:35:03,440 --> 00:35:06,079
security guarantee that i want to give

1173
00:35:04,880 --> 00:35:08,560
you because i think it's a good

1174
00:35:06,079 --> 00:35:09,440
security uh um guarantee this does

1175
00:35:08,560 --> 00:35:11,200
conflict

1176
00:35:09,440 --> 00:35:13,119
if people want to do stuff with for

1177
00:35:11,200 --> 00:35:14,399
example that um i don't know you get

1178
00:35:13,119 --> 00:35:15,040
email notifications when you're not

1179
00:35:14,400 --> 00:35:17,040
logged in

1180
00:35:15,040 --> 00:35:18,800
and and things like that or that you can

1181
00:35:17,040 --> 00:35:21,359
play music while you're not logged in

1182
00:35:18,800 --> 00:35:22,880
but uh yeah that is fine even right like

1183
00:35:21,359 --> 00:35:23,920
in that case don't suspend the machine i

1184
00:35:22,880 --> 00:35:24,880
mean you wouldn't suspend the machine

1185
00:35:23,920 --> 00:35:26,240
anyway would you

1186
00:35:24,880 --> 00:35:31,839
like i mean because then the music would

1187
00:35:26,240 --> 00:35:31,839
stop playing too much

1188
00:35:35,040 --> 00:35:38,640
waiting two hours i'm going away because

1189
00:35:36,880 --> 00:35:41,440
i need some coffee i'm not gonna sit

1190
00:35:38,640 --> 00:35:42,879
i'm gonna log out well then i'm losing

1191
00:35:41,440 --> 00:35:46,880
access

1192
00:35:42,880 --> 00:35:48,880
my download is not continuing uh yes

1193
00:35:46,880 --> 00:35:50,079
i mean i will give you the guarantee so

1194
00:35:48,880 --> 00:35:51,119
the question was regarding what happens

1195
00:35:50,079 --> 00:35:53,839
if i do a long

1196
00:35:51,119 --> 00:35:54,800
term uh like like a long download and uh

1197
00:35:53,839 --> 00:35:56,640
um

1198
00:35:54,800 --> 00:35:58,000
you traditionally um this person has

1199
00:35:56,640 --> 00:35:59,440
solved it like logging actually out

1200
00:35:58,000 --> 00:36:01,040
and making sure that the download

1201
00:35:59,440 --> 00:36:02,400
continues in the background what does

1202
00:36:01,040 --> 00:36:03,839
happen if this is used

1203
00:36:02,400 --> 00:36:05,280
yeah i give you the guarantee when

1204
00:36:03,839 --> 00:36:07,200
you're not in front of the computer your

1205
00:36:05,280 --> 00:36:08,640
data is not accessed by the system

1206
00:36:07,200 --> 00:36:10,399
right and this basically means it

1207
00:36:08,640 --> 00:36:13,920
conflicts with that stuff but

1208
00:36:10,400 --> 00:36:15,200
you know um you can like uh

1209
00:36:13,920 --> 00:36:17,119
this is like you know this lingering

1210
00:36:15,200 --> 00:36:18,879
concept of logandi

1211
00:36:17,119 --> 00:36:20,480
um it basically allows you to say uh

1212
00:36:18,880 --> 00:36:20,960
yeah leave this stuff around from this

1213
00:36:20,480 --> 00:36:22,400
user

1214
00:36:20,960 --> 00:36:23,680
when you're locked locked out you can

1215
00:36:22,400 --> 00:36:25,200
just turn this on but that basically

1216
00:36:23,680 --> 00:36:26,799
means you lose this nice property

1217
00:36:25,200 --> 00:36:28,480
because that means the crypto keys

1218
00:36:26,800 --> 00:36:30,000
need to stay in memory as long as your

1219
00:36:28,480 --> 00:36:31,119
stuff logs out even you're not sitting

1220
00:36:30,000 --> 00:36:33,040
in front of the

1221
00:36:31,119 --> 00:36:34,320
other of the computer so yes you can do

1222
00:36:33,040 --> 00:36:36,160
this i don't think that that's

1223
00:36:34,320 --> 00:36:37,599
nice semantics though right i'm pretty

1224
00:36:36,160 --> 00:36:38,240
sure that at least for my laptop i want

1225
00:36:37,599 --> 00:36:41,280
to know that

1226
00:36:38,240 --> 00:36:43,439
when i leave this stuff that i know that

1227
00:36:41,280 --> 00:36:44,800
nothing there can access my memory that

1228
00:36:43,440 --> 00:36:46,480
i don't know everybody can steal my

1229
00:36:44,800 --> 00:36:48,079
laptop and still not get access my

1230
00:36:46,480 --> 00:36:49,599
memory this is a much nicer property

1231
00:36:48,079 --> 00:36:52,480
that i want to deliver to people than

1232
00:36:49,599 --> 00:36:53,680
than uh yeah being able to download

1233
00:36:52,480 --> 00:36:54,480
finished downloads well i'm not like

1234
00:36:53,680 --> 00:36:56,399
that

1235
00:36:54,480 --> 00:36:58,640
so yeah i mean this is conflicting stuff

1236
00:36:56,400 --> 00:37:00,400
right i know like i mean we take away to

1237
00:36:58,640 --> 00:37:01,839
some point cron jobs for you as well

1238
00:37:00,400 --> 00:37:03,599
right like because cron jobs

1239
00:37:01,839 --> 00:37:05,359
traditionally have this thing where they

1240
00:37:03,599 --> 00:37:07,359
would run even when you're not locked in

1241
00:37:05,359 --> 00:37:08,960
right and this model doesn't work right

1242
00:37:07,359 --> 00:37:10,480
like if you run stuff as unprivileged

1243
00:37:08,960 --> 00:37:11,760
user while you're not logged in somebody

1244
00:37:10,480 --> 00:37:12,480
has to provide the password and if you

1245
00:37:11,760 --> 00:37:15,760
don't

1246
00:37:12,480 --> 00:37:18,160
because you had less crumb drop um then

1247
00:37:15,760 --> 00:37:19,760
no way you don't get to go do this right

1248
00:37:18,160 --> 00:37:21,359
but this is entirely up to you now if

1249
00:37:19,760 --> 00:37:22,960
you subscribed into this model

1250
00:37:21,359 --> 00:37:24,720
like actually using home d and getting

1251
00:37:22,960 --> 00:37:27,359
these security ideas

1252
00:37:24,720 --> 00:37:28,399
you lose the property of being able to

1253
00:37:27,359 --> 00:37:29,839
use your home directory with

1254
00:37:28,400 --> 00:37:31,119
authentication but then

1255
00:37:29,839 --> 00:37:33,839
if that is important to you probably

1256
00:37:31,119 --> 00:37:36,960
shouldn't use home d or

1257
00:37:33,839 --> 00:37:38,000
um like i mean there's something we can

1258
00:37:36,960 --> 00:37:39,599
probably do is that

1259
00:37:38,000 --> 00:37:41,200
um if you turn on this lingering thing

1260
00:37:39,599 --> 00:37:42,480
that i mentioned right and that

1261
00:37:41,200 --> 00:37:43,919
basically also means that we can

1262
00:37:42,480 --> 00:37:46,400
basically set up the user

1263
00:37:43,920 --> 00:37:47,440
context during boot instead of uh during

1264
00:37:46,400 --> 00:37:49,200
login right

1265
00:37:47,440 --> 00:37:50,480
so we could actually say if you set up

1266
00:37:49,200 --> 00:37:52,160
things like that

1267
00:37:50,480 --> 00:37:53,599
and we need the password to actually

1268
00:37:52,160 --> 00:37:55,359
work that we ask you

1269
00:37:53,599 --> 00:37:57,200
during boot like we always did for full

1270
00:37:55,359 --> 00:37:58,720
decks encryption for the password so

1271
00:37:57,200 --> 00:37:59,759
you're locked at once at that point but

1272
00:37:58,720 --> 00:38:00,879
this is not implemented this is

1273
00:37:59,760 --> 00:38:01,680
something that's relatively easy to do

1274
00:38:00,880 --> 00:38:03,920
but we don't do

1275
00:38:01,680 --> 00:38:05,359
do that right now but uh um i don't know

1276
00:38:03,920 --> 00:38:07,119
it's kind of outside of the model i want

1277
00:38:05,359 --> 00:38:07,839
to go to right i wanted this lockdown

1278
00:38:07,119 --> 00:38:10,000
secure

1279
00:38:07,839 --> 00:38:12,160
thing and that is like for me means that

1280
00:38:10,000 --> 00:38:18,560
if i'm not at my laptop nobody

1281
00:38:12,160 --> 00:38:20,399
nothing should get access to my data um

1282
00:38:18,560 --> 00:38:22,640
how much time do you actually still have

1283
00:38:20,400 --> 00:38:26,000
17 minutes 17 minutes

1284
00:38:22,640 --> 00:38:27,118
um so actual implementation i talked a

1285
00:38:26,000 --> 00:38:27,839
lot about the stuff that i want to do

1286
00:38:27,119 --> 00:38:29,359
with this

1287
00:38:27,839 --> 00:38:32,160
um now let's actually talk about how

1288
00:38:29,359 --> 00:38:34,480
this translates to code in systemd that

1289
00:38:32,160 --> 00:38:35,680
we added two concepts and all the last

1290
00:38:34,480 --> 00:38:38,720
stuff was actually

1291
00:38:35,680 --> 00:38:39,279
merged two days ago one is jason using

1292
00:38:38,720 --> 00:38:41,680
records

1293
00:38:39,280 --> 00:38:42,960
um jason user records like with all this

1294
00:38:41,680 --> 00:38:44,160
stuff i talked about looks and the

1295
00:38:42,960 --> 00:38:45,520
actual home de stuff is kind of

1296
00:38:44,160 --> 00:38:46,319
independent of this like the first thing

1297
00:38:45,520 --> 00:38:48,800
i want to

1298
00:38:46,320 --> 00:38:50,960
deliver is json user record so basically

1299
00:38:48,800 --> 00:38:52,240
that uh yeah a struct passwd you can

1300
00:38:50,960 --> 00:38:53,280
have that in json now it's fully

1301
00:38:52,240 --> 00:38:56,078
extensible

1302
00:38:53,280 --> 00:38:57,599
and you can denote lots and lots of

1303
00:38:56,079 --> 00:38:59,520
different properties and system b if you

1304
00:38:57,599 --> 00:39:01,200
provide these json user records

1305
00:38:59,520 --> 00:39:02,800
will actually do resource management for

1306
00:39:01,200 --> 00:39:03,680
you couple of security things for you a

1307
00:39:02,800 --> 00:39:05,440
couple of

1308
00:39:03,680 --> 00:39:06,879
uh like actually run other runtime

1309
00:39:05,440 --> 00:39:11,280
parameters for you

1310
00:39:06,880 --> 00:39:14,800
um but we can agree on some form of

1311
00:39:11,280 --> 00:39:16,640
more modern way of talking about users

1312
00:39:14,800 --> 00:39:18,480
these json user records are not bound to

1313
00:39:16,640 --> 00:39:20,160
home d like homey is one

1314
00:39:18,480 --> 00:39:22,240
component that then makes use of this

1315
00:39:20,160 --> 00:39:23,440
but actually anyone can supply

1316
00:39:22,240 --> 00:39:25,839
like anyone who's privileged on your

1317
00:39:23,440 --> 00:39:26,560
system can provide additional json user

1318
00:39:25,839 --> 00:39:28,880
records

1319
00:39:26,560 --> 00:39:29,599
um and i like like uh we just had this

1320
00:39:28,880 --> 00:39:31,680
conference's

1321
00:39:29,599 --> 00:39:33,280
def con conference in czech republic

1322
00:39:31,680 --> 00:39:34,720
like where i talked to all the rat had

1323
00:39:33,280 --> 00:39:36,079
people who do

1324
00:39:34,720 --> 00:39:37,759
ldap and these things and we're mostly

1325
00:39:36,079 --> 00:39:39,040
on the same page that uh

1326
00:39:37,760 --> 00:39:41,680
yeah they're going to be able they're

1327
00:39:39,040 --> 00:39:42,160
going to supply from ssd and this lap

1328
00:39:41,680 --> 00:39:44,000
stuff

1329
00:39:42,160 --> 00:39:46,000
use user records in the same format so

1330
00:39:44,000 --> 00:39:48,400
that for the first time

1331
00:39:46,000 --> 00:39:50,000
they can from the ldap database um

1332
00:39:48,400 --> 00:39:51,440
actually do you proper user management

1333
00:39:50,000 --> 00:39:53,040
security management that all the way

1334
00:39:51,440 --> 00:39:56,160
proper guide's done to the system

1335
00:39:53,040 --> 00:39:57,920
and system reinforces it so uh yeah this

1336
00:39:56,160 --> 00:39:58,399
is concept a as mentioned independent of

1337
00:39:57,920 --> 00:40:00,320
home d

1338
00:39:58,400 --> 00:40:01,920
you don't have to buy into home d to be

1339
00:40:00,320 --> 00:40:03,839
able to make use of this

1340
00:40:01,920 --> 00:40:05,599
um it's a super set of nss records so

1341
00:40:03,839 --> 00:40:07,279
it's struck past wd instruct group

1342
00:40:05,599 --> 00:40:08,880
and actually all the shadow ones and

1343
00:40:07,280 --> 00:40:10,720
extensible um

1344
00:40:08,880 --> 00:40:12,160
there's a wirelink interface wiring is

1345
00:40:10,720 --> 00:40:14,799
some ipc system

1346
00:40:12,160 --> 00:40:16,078
to uh to query this and it's extremely

1347
00:40:14,800 --> 00:40:18,720
dumb and simple

1348
00:40:16,079 --> 00:40:19,920
um and the idea basically is that anyone

1349
00:40:18,720 --> 00:40:22,399
like any component that

1350
00:40:19,920 --> 00:40:24,240
wants to provide a local user can just

1351
00:40:22,400 --> 00:40:26,240
implement that running interface once

1352
00:40:24,240 --> 00:40:27,359
and then clients can just ask them all

1353
00:40:26,240 --> 00:40:29,520
at the same time and

1354
00:40:27,359 --> 00:40:30,480
i'll create those users it's convertible

1355
00:40:29,520 --> 00:40:33,280
fourth and back

1356
00:40:30,480 --> 00:40:34,000
to an nss lossy of course because nss

1357
00:40:33,280 --> 00:40:35,520
records like

1358
00:40:34,000 --> 00:40:37,280
by nss records i mean like struct

1359
00:40:35,520 --> 00:40:38,000
password and start group go there of

1360
00:40:37,280 --> 00:40:40,400
course don't have

1361
00:40:38,000 --> 00:40:41,680
all the metadata but systemd will uh do

1362
00:40:40,400 --> 00:40:42,880
all the conversion for you so you

1363
00:40:41,680 --> 00:40:44,720
it's up to you if you just want to

1364
00:40:42,880 --> 00:40:46,720
supply the classic nss stuff like

1365
00:40:44,720 --> 00:40:48,720
most components currently do then we'll

1366
00:40:46,720 --> 00:40:50,319
generate json stuff on the fly

1367
00:40:48,720 --> 00:40:52,078
but the other way we'll also do it like

1368
00:40:50,319 --> 00:40:52,640
if you only supply the json stuff then

1369
00:40:52,079 --> 00:40:54,240
we'll

1370
00:40:52,640 --> 00:40:56,480
generate nss stuff for you if you want

1371
00:40:54,240 --> 00:40:57,439
that uh how does it actually look like

1372
00:40:56,480 --> 00:40:59,680
here's an example it's kind of

1373
00:40:57,440 --> 00:41:00,800
complicated uh some things are pretty

1374
00:40:59,680 --> 00:41:02,560
obvious like username

1375
00:41:00,800 --> 00:41:03,839
like this user is called grobi and i

1376
00:41:02,560 --> 00:41:06,078
don't know nice level means that when

1377
00:41:03,839 --> 00:41:09,359
the user logs in he gets a

1378
00:41:06,079 --> 00:41:10,960
nice level of five um this member of is

1379
00:41:09,359 --> 00:41:11,680
about groups that this user is supposed

1380
00:41:10,960 --> 00:41:13,760
to be group

1381
00:41:11,680 --> 00:41:15,359
a member of the group wheel last change

1382
00:41:13,760 --> 00:41:16,800
music i guess i don't have to explain

1383
00:41:15,359 --> 00:41:20,078
what that probably means

1384
00:41:16,800 --> 00:41:21,920
there's a concept of uh yeah

1385
00:41:20,079 --> 00:41:23,200
of certain sub sections like binding

1386
00:41:21,920 --> 00:41:24,160
which is like the binding one is

1387
00:41:23,200 --> 00:41:26,879
actually the one

1388
00:41:24,160 --> 00:41:27,759
that um maps a user record onto the

1389
00:41:26,880 --> 00:41:29,119
local system

1390
00:41:27,760 --> 00:41:30,160
right like because the user record is

1391
00:41:29,119 --> 00:41:32,400
something that i think should be

1392
00:41:30,160 --> 00:41:34,799
independent of the the local system

1393
00:41:32,400 --> 00:41:36,400
but some of its fields inherently like

1394
00:41:34,800 --> 00:41:36,960
for example the user id like this one

1395
00:41:36,400 --> 00:41:39,040
here

1396
00:41:36,960 --> 00:41:40,480
actually inherently have to have a local

1397
00:41:39,040 --> 00:41:42,160
concept if we want to do this thing

1398
00:41:40,480 --> 00:41:43,040
where we say that uids should be a local

1399
00:41:42,160 --> 00:41:44,720
artifact

1400
00:41:43,040 --> 00:41:46,160
so a binding is supposed to manage this

1401
00:41:44,720 --> 00:41:47,680
binding is basically yeah

1402
00:41:46,160 --> 00:41:49,118
this is the machine id of the specific

1403
00:41:47,680 --> 00:41:51,359
system and then you store a couple of

1404
00:41:49,119 --> 00:41:53,119
metadata that is specific on that specif

1405
00:41:51,359 --> 00:41:54,400
system to it i don't want to go to in

1406
00:41:53,119 --> 00:41:56,880
too much detail

1407
00:41:54,400 --> 00:41:58,720
about this uh this specification upwards

1408
00:41:56,880 --> 00:42:00,640
if you want to know all this uh

1409
00:41:58,720 --> 00:42:02,640
just uh to see that like privilege is

1410
00:42:00,640 --> 00:42:04,799
basically where the hash password is

1411
00:42:02,640 --> 00:42:06,240
it's like etsy shadow um we put that in

1412
00:42:04,800 --> 00:42:07,520
a separate section so that we can hide

1413
00:42:06,240 --> 00:42:08,319
it from clients if they shall not have

1414
00:42:07,520 --> 00:42:10,240
access

1415
00:42:08,319 --> 00:42:11,759
their signature which is like the

1416
00:42:10,240 --> 00:42:14,078
cryptographic signature that i mentioned

1417
00:42:11,760 --> 00:42:16,000
um how you can make sure that

1418
00:42:14,079 --> 00:42:18,160
that yeah on the specific system only

1419
00:42:16,000 --> 00:42:22,160
for example users signed by the red hat

1420
00:42:18,160 --> 00:42:22,160
key can log in and answer systems or not

1421
00:42:24,319 --> 00:42:27,279
very good question so the question was

1422
00:42:26,079 --> 00:42:28,800
regarding if user names have to be

1423
00:42:27,280 --> 00:42:31,119
unique on specific systems

1424
00:42:28,800 --> 00:42:33,599
yes they do because unix works that way

1425
00:42:31,119 --> 00:42:34,960
um but that basically like so i added a

1426
00:42:33,599 --> 00:42:35,599
concept called a realm there it's a

1427
00:42:34,960 --> 00:42:38,319
little bit more

1428
00:42:35,599 --> 00:42:39,839
like a curvers realm but it's also like

1429
00:42:38,319 --> 00:42:41,680
domain i didn't want to define it any

1430
00:42:39,839 --> 00:42:44,400
further but the idea basically is that

1431
00:42:41,680 --> 00:42:46,560
i can have user lenna.redhat.com and can

1432
00:42:44,400 --> 00:42:49,040
distinguish it from a user then at

1433
00:42:46,560 --> 00:42:50,240
i don't know um berlin the eu something

1434
00:42:49,040 --> 00:42:52,560
like this

1435
00:42:50,240 --> 00:42:53,919
because they have a different suffix but

1436
00:42:52,560 --> 00:42:55,520
once you log in

1437
00:42:53,920 --> 00:42:57,040
on that specific system only one user

1438
00:42:55,520 --> 00:42:58,800
lineup can exist right

1439
00:42:57,040 --> 00:43:00,800
so it's a bit nasty that this is how

1440
00:42:58,800 --> 00:43:03,200
unix works and we can't really fix that

1441
00:43:00,800 --> 00:43:04,480
um but uh i think it's probably in real

1442
00:43:03,200 --> 00:43:05,919
life not that bad because

1443
00:43:04,480 --> 00:43:08,160
on my laptop i'm probably not going to

1444
00:43:05,920 --> 00:43:10,480
have multiple lanyards that are actually

1445
00:43:08,160 --> 00:43:10,480
different

1446
00:43:11,119 --> 00:43:15,040
um so that was the first thing you're

1447
00:43:13,920 --> 00:43:16,560
the representation

1448
00:43:15,040 --> 00:43:18,160
second thing is concept b that's

1449
00:43:16,560 --> 00:43:19,359
actually the only part about it so we

1450
00:43:18,160 --> 00:43:20,640
have encrypted lock some directories in

1451
00:43:19,359 --> 00:43:21,119
lupec files the stuff that i was talking

1452
00:43:20,640 --> 00:43:24,319
about so

1453
00:43:21,119 --> 00:43:25,920
so long um i mentioned that we have one

1454
00:43:24,319 --> 00:43:26,960
file per user like slash home

1455
00:43:25,920 --> 00:43:29,040
foobar.home

1456
00:43:26,960 --> 00:43:30,880
there's a loopback file a gigabyte in

1457
00:43:29,040 --> 00:43:32,160
size inside of that you have a log stuff

1458
00:43:30,880 --> 00:43:33,599
you can actually mount that thing

1459
00:43:32,160 --> 00:43:35,279
just with regular tools like you always

1460
00:43:33,599 --> 00:43:35,920
did because it's just that right like

1461
00:43:35,280 --> 00:43:38,240
it's not the

1462
00:43:35,920 --> 00:43:39,359
reinvention of stuff it's just using

1463
00:43:38,240 --> 00:43:40,640
stuff we already have and

1464
00:43:39,359 --> 00:43:42,799
augmenting it slightly a bit so that

1465
00:43:40,640 --> 00:43:45,040
it's useful for user records um

1466
00:43:42,800 --> 00:43:46,640
and uh yeah if you mind you find the the

1467
00:43:45,040 --> 00:43:47,839
adjacent record like the actual user

1468
00:43:46,640 --> 00:43:49,920
record inside of uh

1469
00:43:47,839 --> 00:43:51,599
identity there but yeah it's managed by

1470
00:43:49,920 --> 00:43:54,400
that new service called systemd

1471
00:43:51,599 --> 00:43:55,200
you can accept this and use it or you

1472
00:43:54,400 --> 00:43:58,480
don't have to

1473
00:43:55,200 --> 00:43:58,960
it's like entirely one provider of that

1474
00:43:58,480 --> 00:44:00,880
user

1475
00:43:58,960 --> 00:44:02,160
db stuff but it's just one provider if

1476
00:44:00,880 --> 00:44:02,720
you don't want to use it don't use it

1477
00:44:02,160 --> 00:44:04,560
right like

1478
00:44:02,720 --> 00:44:06,160
there can be other for example if you're

1479
00:44:04,560 --> 00:44:07,200
really really bought into the ldap

1480
00:44:06,160 --> 00:44:08,879
concept that you have everything

1481
00:44:07,200 --> 00:44:11,279
centralized and machines kind of

1482
00:44:08,880 --> 00:44:12,880
part of it of an organization if you so

1483
00:44:11,280 --> 00:44:15,200
will then you can uh

1484
00:44:12,880 --> 00:44:17,040
soon hopefully um use the user db stuff

1485
00:44:15,200 --> 00:44:18,799
but not to use homdi like homdi is

1486
00:44:17,040 --> 00:44:21,359
really about the use case where you have

1487
00:44:18,800 --> 00:44:22,000
relatively migratable independent little

1488
00:44:21,359 --> 00:44:25,040
laptops

1489
00:44:22,000 --> 00:44:26,400
um i have a user uh directory here and i

1490
00:44:25,040 --> 00:44:27,920
can migrate it to another one it's all

1491
00:44:26,400 --> 00:44:30,800
just works

1492
00:44:27,920 --> 00:44:32,640
yeah concept a user db records is

1493
00:44:30,800 --> 00:44:34,560
independent of concept b

1494
00:44:32,640 --> 00:44:36,400
in one way i think you can use a without

1495
00:44:34,560 --> 00:44:39,839
b but b implies a

1496
00:44:36,400 --> 00:44:40,960
um yeah integration with os a couple of

1497
00:44:39,839 --> 00:44:43,359
other components but

1498
00:44:40,960 --> 00:44:44,880
i don't want to go into much detail here

1499
00:44:43,359 --> 00:44:46,400
unless you have no further questions

1500
00:44:44,880 --> 00:44:47,599
because i think we have only 10 minutes

1501
00:44:46,400 --> 00:44:51,119
left or something

1502
00:44:47,599 --> 00:44:54,079
so let's focus on questions

1503
00:44:51,119 --> 00:44:55,680
so we just want to make sure as this

1504
00:44:54,079 --> 00:44:59,040
usage of

1505
00:44:55,680 --> 00:45:00,000
this card does not allow to lock screen

1506
00:44:59,040 --> 00:45:05,839
without

1507
00:45:00,000 --> 00:45:05,839
logging out to the screen

1508
00:45:06,560 --> 00:45:12,480
um so as i understand uh

1509
00:45:09,839 --> 00:45:13,839
pundi discourages or even prohibits to

1510
00:45:12,480 --> 00:45:17,359
just lock the screen but

1511
00:45:13,839 --> 00:45:18,078
do not log out no it doesn't no you

1512
00:45:17,359 --> 00:45:19,839
repeat the question

1513
00:45:18,079 --> 00:45:21,680
so the question was regarding if uh uh

1514
00:45:19,839 --> 00:45:23,040
uh as he understood it home deep

1515
00:45:21,680 --> 00:45:23,839
prohibits locking the screen without

1516
00:45:23,040 --> 00:45:26,640
actually logging out

1517
00:45:23,839 --> 00:45:27,359
but that's not true screen locking

1518
00:45:26,640 --> 00:45:30,400
screen logging

1519
00:45:27,359 --> 00:45:31,119
but screen locking means to me that the

1520
00:45:30,400 --> 00:45:33,200
keys are

1521
00:45:31,119 --> 00:45:34,560
left over there like you can if you want

1522
00:45:33,200 --> 00:45:36,240
to turn this into something where you

1523
00:45:34,560 --> 00:45:37,680
say basically screen lock also means we

1524
00:45:36,240 --> 00:45:39,359
flush out the keys that basically means

1525
00:45:37,680 --> 00:45:41,040
yes everything stops running

1526
00:45:39,359 --> 00:45:42,480
but we we are not there yet this is

1527
00:45:41,040 --> 00:45:44,800
something we can think about

1528
00:45:42,480 --> 00:45:46,000
um but uh i'm not sure if you want this

1529
00:45:44,800 --> 00:45:47,760
but if we

1530
00:45:46,000 --> 00:45:49,440
do this then it should be an option but

1531
00:45:47,760 --> 00:45:51,119
no this does not apply this this is

1532
00:45:49,440 --> 00:45:52,160
something to think about that we might

1533
00:45:51,119 --> 00:45:54,880
do later but no

1534
00:45:52,160 --> 00:45:54,879
no implication

1535
00:45:56,160 --> 00:46:00,240
the idea is that you can migrate your

1536
00:45:58,480 --> 00:46:02,079
home directly polar machine

1537
00:46:00,240 --> 00:46:05,439
what is the frequency you plan to do

1538
00:46:02,079 --> 00:46:07,440
that is that a rare option it just works

1539
00:46:05,440 --> 00:46:08,880
i personally work always every day with

1540
00:46:07,440 --> 00:46:11,839
two computers

1541
00:46:08,880 --> 00:46:12,880
and i would like to to carry a pen drive

1542
00:46:11,839 --> 00:46:14,960
is that something

1543
00:46:12,880 --> 00:46:17,040
that is just done in a minute that i can

1544
00:46:14,960 --> 00:46:19,119
somehow do that

1545
00:46:17,040 --> 00:46:20,319
and if there are a central version of

1546
00:46:19,119 --> 00:46:21,760
that thing that live and you need

1547
00:46:20,319 --> 00:46:23,520
backups

1548
00:46:21,760 --> 00:46:25,280
how do you do the versioning and what

1549
00:46:23,520 --> 00:46:27,119
happens if i start to use an older

1550
00:46:25,280 --> 00:46:28,560
version and then i go to the order

1551
00:46:27,119 --> 00:46:30,160
okay so the question was regarding

1552
00:46:28,560 --> 00:46:30,640
synchronization right like if you have

1553
00:46:30,160 --> 00:46:32,879
uh

1554
00:46:30,640 --> 00:46:34,720
multiple users um i know you have the

1555
00:46:32,880 --> 00:46:36,880
same user on multiple machines like um

1556
00:46:34,720 --> 00:46:38,480
how do we solve this we don't

1557
00:46:36,880 --> 00:46:40,079
right so this is not a synchronization

1558
00:46:38,480 --> 00:46:41,040
tool right like um i think having a

1559
00:46:40,079 --> 00:46:43,119
synchronization tool

1560
00:46:41,040 --> 00:46:44,400
would be extremely interesting but it's

1561
00:46:43,119 --> 00:46:45,440
uh and i think this can actually be

1562
00:46:44,400 --> 00:46:47,280
really nice because like i mean

1563
00:46:45,440 --> 00:46:48,560
as soon as you has your home directory

1564
00:46:47,280 --> 00:46:50,560
in uh in

1565
00:46:48,560 --> 00:46:51,920
one unified file you can do stuff like

1566
00:46:50,560 --> 00:46:52,560
actually distributing it to other

1567
00:46:51,920 --> 00:46:53,920
systems

1568
00:46:52,560 --> 00:46:56,000
in encrypted fashion without actually

1569
00:46:53,920 --> 00:46:57,520
the distributing thing actually knowing

1570
00:46:56,000 --> 00:46:59,200
what it actually distributes there

1571
00:46:57,520 --> 00:47:01,040
you can do backups even like because you

1572
00:46:59,200 --> 00:47:02,960
can do ref link like because it's one

1573
00:47:01,040 --> 00:47:04,480
file you just do a cp with a ref link

1574
00:47:02,960 --> 00:47:06,000
you pay for nothing you have a backup of

1575
00:47:04,480 --> 00:47:07,760
that day and things like that

1576
00:47:06,000 --> 00:47:09,119
um so i think the synchronization

1577
00:47:07,760 --> 00:47:10,560
problem is a very interesting one we

1578
00:47:09,119 --> 00:47:12,079
should look into this eventually

1579
00:47:10,560 --> 00:47:13,599
but this one is not going to solve this

1580
00:47:12,079 --> 00:47:14,400
and in particular it's not going to deal

1581
00:47:13,599 --> 00:47:16,640
with deltas

1582
00:47:14,400 --> 00:47:18,160
for you right like with diffs between

1583
00:47:16,640 --> 00:47:18,720
what you did on this laptop and what you

1584
00:47:18,160 --> 00:47:20,240
just

1585
00:47:18,720 --> 00:47:21,520
did on this laptop because that is

1586
00:47:20,240 --> 00:47:22,399
inherently something that needs to live

1587
00:47:21,520 --> 00:47:23,839
above

1588
00:47:22,400 --> 00:47:25,760
um like if you actually want to do

1589
00:47:23,839 --> 00:47:26,558
proper disks above the file system above

1590
00:47:25,760 --> 00:47:28,800
the encryption

1591
00:47:26,559 --> 00:47:29,920
because i mean doing diffs on encrypted

1592
00:47:28,800 --> 00:47:31,280
stuff isn't really possible

1593
00:47:29,920 --> 00:47:33,040
so i think a very interesting problem

1594
00:47:31,280 --> 00:47:34,640
not not not going to be solved by this

1595
00:47:33,040 --> 00:47:35,279
but i think it enables some things that

1596
00:47:34,640 --> 00:47:36,960
we

1597
00:47:35,280 --> 00:47:38,559
can make distributed stuff like this

1598
00:47:36,960 --> 00:47:38,960
work like for example that i don't know

1599
00:47:38,559 --> 00:47:40,400
if

1600
00:47:38,960 --> 00:47:42,960
our connector was a network that we just

1601
00:47:40,400 --> 00:47:45,760
um make sure that you're only

1602
00:47:42,960 --> 00:47:47,200
locked in once everywhere and then

1603
00:47:45,760 --> 00:47:48,720
whenever you log into something that

1604
00:47:47,200 --> 00:47:50,000
your stuff migrates somewhere

1605
00:47:48,720 --> 00:47:51,520
i mean you can even do stuff like for

1606
00:47:50,000 --> 00:47:53,599
example you can have your home directory

1607
00:47:51,520 --> 00:47:54,480
on an iscsi volume or nbd volume or

1608
00:47:53,599 --> 00:47:56,079
something like this

1609
00:47:54,480 --> 00:47:57,760
which is available to your entire

1610
00:47:56,079 --> 00:47:59,280
network right because this stuff is just

1611
00:47:57,760 --> 00:48:01,119
a block device

1612
00:47:59,280 --> 00:48:02,319
um it basically means that yeah if it's

1613
00:48:01,119 --> 00:48:03,040
just there it's going to pop up as a

1614
00:48:02,319 --> 00:48:04,558
user

1615
00:48:03,040 --> 00:48:05,680
um and then you look in any machine you

1616
00:48:04,559 --> 00:48:06,240
like and you know that it's always

1617
00:48:05,680 --> 00:48:07,759
shared

1618
00:48:06,240 --> 00:48:09,118
because you always write to the same

1619
00:48:07,760 --> 00:48:10,319
thing we have no infrastructure for

1620
00:48:09,119 --> 00:48:13,440
blocking in this case so don't

1621
00:48:10,319 --> 00:48:14,800
actually do this but it's uh it's

1622
00:48:13,440 --> 00:48:16,720
hardly an idea like it opens a lot of

1623
00:48:14,800 --> 00:48:17,040
doors where you can can do stuff like

1624
00:48:16,720 --> 00:48:19,598
that

1625
00:48:17,040 --> 00:48:20,319
um but yeah thinking is not solved right

1626
00:48:19,599 --> 00:48:21,680
now but i think it's

1627
00:48:20,319 --> 00:48:23,040
very like the other problem we're

1628
00:48:21,680 --> 00:48:24,078
thinking is like people disagree what

1629
00:48:23,040 --> 00:48:25,440
they actually want to have sync some

1630
00:48:24,079 --> 00:48:27,200
people want just the configuration some

1631
00:48:25,440 --> 00:48:29,920
people want the entire home directory

1632
00:48:27,200 --> 00:48:30,319
i have no nice answer like uh uh to this

1633
00:48:29,920 --> 00:48:31,520
um

1634
00:48:30,319 --> 00:48:33,279
the granola people have been looking

1635
00:48:31,520 --> 00:48:34,960
into doing some thinking stuff um i

1636
00:48:33,280 --> 00:48:39,119
don't know where this goes

1637
00:48:34,960 --> 00:48:39,119
but yeah we have to figure that out

1638
00:48:43,359 --> 00:48:50,240
with different groups with the same name

1639
00:48:47,520 --> 00:48:51,599
with your first design you are you can

1640
00:48:50,240 --> 00:48:54,720
define a

1641
00:48:51,599 --> 00:48:56,720
user with some groups but you can use

1642
00:48:54,720 --> 00:48:59,040
the common groups but with different

1643
00:48:56,720 --> 00:48:59,040
words

1644
00:48:59,440 --> 00:49:03,359
with different what was different tools

1645
00:49:01,760 --> 00:49:07,280
you can have the same groups but

1646
00:49:03,359 --> 00:49:07,279
on both systems could be different

1647
00:49:07,520 --> 00:49:11,520
so um so the question was regarding uh

1648
00:49:10,000 --> 00:49:13,040
what happens if the groups are defined

1649
00:49:11,520 --> 00:49:14,160
differently on multiple systems but you

1650
00:49:13,040 --> 00:49:16,400
have one user that is

1651
00:49:14,160 --> 00:49:17,440
accessing both of these systems so first

1652
00:49:16,400 --> 00:49:18,720
of all uh

1653
00:49:17,440 --> 00:49:20,160
you know the you saw the json stuff

1654
00:49:18,720 --> 00:49:21,919
right like there's actually one a

1655
00:49:20,160 --> 00:49:23,680
section in there it's called per machine

1656
00:49:21,920 --> 00:49:25,040
where you can have static data that you

1657
00:49:23,680 --> 00:49:25,440
configure and then you can configure

1658
00:49:25,040 --> 00:49:26,880
different

1659
00:49:25,440 --> 00:49:28,640
like from of some of these settings you

1660
00:49:26,880 --> 00:49:30,480
can define per machine settings

1661
00:49:28,640 --> 00:49:31,759
so you could basically say yeah if on

1662
00:49:30,480 --> 00:49:33,680
this laptop um

1663
00:49:31,760 --> 00:49:35,359
the group foobar is something completely

1664
00:49:33,680 --> 00:49:37,279
conceptually different than the same

1665
00:49:35,359 --> 00:49:38,960
named group fubar on some other system

1666
00:49:37,280 --> 00:49:40,240
then we can basically say on this one

1667
00:49:38,960 --> 00:49:41,920
i want to be a member of that on that

1668
00:49:40,240 --> 00:49:42,640
one i don't right so first of all that's

1669
00:49:41,920 --> 00:49:45,680
one thing

1670
00:49:42,640 --> 00:49:48,319
ultimately the rule though is um

1671
00:49:45,680 --> 00:49:49,919
we allow access to anyone who has a user

1672
00:49:48,319 --> 00:49:51,520
record that is signed by some key that

1673
00:49:49,920 --> 00:49:54,640
is recognized by the local system

1674
00:49:51,520 --> 00:49:55,920
right the entity that signs that

1675
00:49:54,640 --> 00:49:57,759
really needs to take care of this

1676
00:49:55,920 --> 00:49:59,599
problem right so i'm not gonna solve

1677
00:49:57,760 --> 00:50:02,079
this problem that if you have uh

1678
00:49:59,599 --> 00:50:03,200
equally named stuff on different systems

1679
00:50:02,079 --> 00:50:06,079
um uh

1680
00:50:03,200 --> 00:50:07,759
uh for you that's the person who puts

1681
00:50:06,079 --> 00:50:09,440
together the user record for you

1682
00:50:07,760 --> 00:50:11,280
um who needs to deal with these problems

1683
00:50:09,440 --> 00:50:11,599
and then maybe create per machine stuff

1684
00:50:11,280 --> 00:50:14,319
or

1685
00:50:11,599 --> 00:50:16,720
do something else so that this problem

1686
00:50:14,319 --> 00:50:16,720
is fixed

1687
00:50:21,280 --> 00:50:25,599
well i mean i'm not in like i'm not a

1688
00:50:24,079 --> 00:50:26,800
standards organization what's the state

1689
00:50:25,599 --> 00:50:28,720
of the standard for the

1690
00:50:26,800 --> 00:50:30,240
json user records i'm not a standards

1691
00:50:28,720 --> 00:50:30,959
organization i mean i kind of am but

1692
00:50:30,240 --> 00:50:33,118
also i'm not

1693
00:50:30,960 --> 00:50:33,119
um

1694
00:50:35,400 --> 00:50:40,800
[Music]

1695
00:50:38,079 --> 00:50:44,000
let me show you uh yeah there's lots of

1696
00:50:40,800 --> 00:50:44,000
interesting stuff in the slides

1697
00:50:45,599 --> 00:50:51,839
uh that's where the standard is so

1698
00:50:48,880 --> 00:50:51,839
uh if you go to

1699
00:50:52,640 --> 00:50:56,240
if you go to uh this one this is where

1700
00:50:54,319 --> 00:50:57,680
the the the current adjacent stuff is

1701
00:50:56,240 --> 00:50:58,319
documented for the users is for the

1702
00:50:57,680 --> 00:51:00,240
groups

1703
00:50:58,319 --> 00:51:01,759
this is for the valine api to query it

1704
00:51:00,240 --> 00:51:03,598
um and this is what we

1705
00:51:01,760 --> 00:51:05,359
it documents what we do if we use the

1706
00:51:03,599 --> 00:51:07,280
luxe home directory stuff if you use

1707
00:51:05,359 --> 00:51:08,960
that backend

1708
00:51:07,280 --> 00:51:10,720
um yeah all of this is extensible right

1709
00:51:08,960 --> 00:51:11,920
and it's extensible in that fashion

1710
00:51:10,720 --> 00:51:13,439
where

1711
00:51:11,920 --> 00:51:14,880
you're not supposed to even talk to me

1712
00:51:13,440 --> 00:51:16,559
if you want your own field just take it

1713
00:51:14,880 --> 00:51:18,559
just name space it properly right

1714
00:51:16,559 --> 00:51:20,319
i'm not in i'm not interested in being

1715
00:51:18,559 --> 00:51:22,079
like this this person in the middle who

1716
00:51:20,319 --> 00:51:23,680
manages everybody's fields that's

1717
00:51:22,079 --> 00:51:25,599
explicitly not what i want

1718
00:51:23,680 --> 00:51:27,200
just pick a field you want namespace it

1719
00:51:25,599 --> 00:51:29,040
properly by just using a name that's

1720
00:51:27,200 --> 00:51:30,558
unlikely collide with everybody else's

1721
00:51:29,040 --> 00:51:32,319
and then add whatever you like

1722
00:51:30,559 --> 00:51:34,839
it's supposed to be distributed like

1723
00:51:32,319 --> 00:51:38,319
linux's right so uh

1724
00:51:34,839 --> 00:51:40,640
yeah we talk about security

1725
00:51:38,319 --> 00:51:43,680
is there a strength model for only

1726
00:51:40,640 --> 00:51:45,520
because for me it resembles a thing

1727
00:51:43,680 --> 00:51:46,720
i think well it resembles what it

1728
00:51:45,520 --> 00:51:51,839
resembles

1729
00:51:46,720 --> 00:51:51,839
finger finger d yeah

1730
00:51:57,839 --> 00:52:00,960
so i don't really sure if they

1731
00:51:59,839 --> 00:52:02,558
understand the question but

1732
00:52:00,960 --> 00:52:04,240
if we did this right model of this kind

1733
00:52:02,559 --> 00:52:07,920
of stuff

1734
00:52:04,240 --> 00:52:09,439
and because it resembles finger d

1735
00:52:07,920 --> 00:52:10,960
i don't understand why this would

1736
00:52:09,440 --> 00:52:14,160
resemble

1737
00:52:10,960 --> 00:52:14,160
access to other people

1738
00:52:14,960 --> 00:52:18,079
to show which projects you have and it

1739
00:52:17,680 --> 00:52:21,839
was

1740
00:52:18,079 --> 00:52:23,200
flowed but design

1741
00:52:21,839 --> 00:52:24,880
i mean i know what finger is but i don't

1742
00:52:23,200 --> 00:52:25,359
see the relation to this you know finger

1743
00:52:24,880 --> 00:52:27,200
is not

1744
00:52:25,359 --> 00:52:28,720
about user records and it's not about

1745
00:52:27,200 --> 00:52:30,240
like i mean again like this stuff

1746
00:52:28,720 --> 00:52:32,720
is like if we if we put it in the home

1747
00:52:30,240 --> 00:52:34,319
directory that stuff is encrypted right

1748
00:52:32,720 --> 00:52:35,200
like we don't leak information unless

1749
00:52:34,319 --> 00:52:36,960
you're logged in

1750
00:52:35,200 --> 00:52:38,640
nobody gets access to this and this

1751
00:52:36,960 --> 00:52:39,520
stuff is so it's actually only

1752
00:52:38,640 --> 00:52:41,440
accessible

1753
00:52:39,520 --> 00:52:42,800
to people who have access to the system

1754
00:52:41,440 --> 00:52:44,800
they can create the user database

1755
00:52:42,800 --> 00:52:46,720
because that's how unix always worked

1756
00:52:44,800 --> 00:52:48,319
right but at that point you also already

1757
00:52:46,720 --> 00:52:49,839
have to have access to the local

1758
00:52:48,319 --> 00:52:51,440
system so i don't know if you want to

1759
00:52:49,839 --> 00:52:52,640
implement something like finger d on top

1760
00:52:51,440 --> 00:52:54,319
of this you can use this

1761
00:52:52,640 --> 00:52:55,839
stuff but i don't see the relationship

1762
00:52:54,319 --> 00:52:58,960
to finger d at all i must say

1763
00:52:55,839 --> 00:53:02,240
because it gives you access to your own

1764
00:52:58,960 --> 00:53:02,240
directory it's just like

1765
00:53:03,359 --> 00:53:08,480
i don't see that i'm sorry

1766
00:53:06,640 --> 00:53:10,799
so how do i share a file between two

1767
00:53:08,480 --> 00:53:13,040
users uh so the question was regarding

1768
00:53:10,800 --> 00:53:15,040
how do i share files between two users

1769
00:53:13,040 --> 00:53:16,480
uh well you know after both of them

1770
00:53:15,040 --> 00:53:17,920
logged in the users are not very

1771
00:53:16,480 --> 00:53:19,200
distinct from traditional users

1772
00:53:17,920 --> 00:53:20,880
right like they'll both have a uid

1773
00:53:19,200 --> 00:53:21,680
that's going to be sticky until the

1774
00:53:20,880 --> 00:53:24,960
system goes

1775
00:53:21,680 --> 00:53:28,399
eventually once again

1776
00:53:24,960 --> 00:53:30,160
you just change the owner no no no no no

1777
00:53:28,400 --> 00:53:31,359
no i do that when you do it on a

1778
00:53:30,160 --> 00:53:32,640
different machine where the uad is

1779
00:53:31,359 --> 00:53:35,680
actually different right

1780
00:53:32,640 --> 00:53:37,440
we the there so yeah um

1781
00:53:35,680 --> 00:53:38,799
this is a question regarding like if you

1782
00:53:37,440 --> 00:53:42,319
log out and log in

1783
00:53:38,800 --> 00:53:44,160
again what happens to the uid um

1784
00:53:42,319 --> 00:53:45,359
do we actually change it so that sharing

1785
00:53:44,160 --> 00:53:49,440
files is difficult

1786
00:53:45,359 --> 00:53:50,960
so like first of all um you know

1787
00:53:49,440 --> 00:53:52,319
if you want to give other users access

1788
00:53:50,960 --> 00:53:53,119
to your home directory right knock

1789
00:53:52,319 --> 00:53:56,880
yourself out

1790
00:53:53,119 --> 00:53:59,119
but also

1791
00:53:56,880 --> 00:54:00,160
it's maybe not the best way to share

1792
00:53:59,119 --> 00:54:02,480
files right

1793
00:54:00,160 --> 00:54:03,680
um but uh so ultimately like on a

1794
00:54:02,480 --> 00:54:06,000
specific system

1795
00:54:03,680 --> 00:54:07,520
after you're logged in once once once

1796
00:54:06,000 --> 00:54:09,280
you actually we copied the user record

1797
00:54:07,520 --> 00:54:10,720
onto the system so that um it stays

1798
00:54:09,280 --> 00:54:12,079
pinned and the uad

1799
00:54:10,720 --> 00:54:13,439
assignment stays pinned so that

1800
00:54:12,079 --> 00:54:15,599
basically means that after you logged in

1801
00:54:13,440 --> 00:54:17,839
once on a specific system uad is stable

1802
00:54:15,599 --> 00:54:19,599
guaranteed to be stable forever right we

1803
00:54:17,839 --> 00:54:20,880
can only remove that limitation if we do

1804
00:54:19,599 --> 00:54:22,319
the sandboxing stuff that we talked

1805
00:54:20,880 --> 00:54:23,920
about earlier here right

1806
00:54:22,319 --> 00:54:25,359
because we need to make sure that you

1807
00:54:23,920 --> 00:54:26,720
don't get to write anywhere else

1808
00:54:25,359 --> 00:54:29,119
but that basically means yeah if you

1809
00:54:26,720 --> 00:54:31,200
want to use acls or to mod or

1810
00:54:29,119 --> 00:54:32,800
tone or whatever else to to give other

1811
00:54:31,200 --> 00:54:35,520
people access to your files

1812
00:54:32,800 --> 00:54:36,640
same way as it always worked except if

1813
00:54:35,520 --> 00:54:38,160
you then take that home directory and

1814
00:54:36,640 --> 00:54:40,160
move it to a different machine because

1815
00:54:38,160 --> 00:54:43,359
if you do that then you get the

1816
00:54:40,160 --> 00:54:45,040
get the the uh toning done but that also

1817
00:54:43,359 --> 00:54:46,240
means that we'll strip all the acls for

1818
00:54:45,040 --> 00:54:48,000
you

1819
00:54:46,240 --> 00:54:49,759
because i mean we have to because all

1820
00:54:48,000 --> 00:54:51,040
the the user id assignments and things

1821
00:54:49,760 --> 00:54:52,079
like that don't make sense anymore if

1822
00:54:51,040 --> 00:54:53,759
you then move it back

1823
00:54:52,079 --> 00:54:55,359
to your system you'll get back the user

1824
00:54:53,760 --> 00:54:56,960
id that you had before

1825
00:54:55,359 --> 00:54:58,799
but you'll not get the acls back because

1826
00:54:56,960 --> 00:55:00,559
we had to strip them all so

1827
00:54:58,799 --> 00:55:02,400
but my answer is if you subscribe to

1828
00:55:00,559 --> 00:55:04,480
that traditional model

1829
00:55:02,400 --> 00:55:06,240
knock yourself out but then you don't

1830
00:55:04,480 --> 00:55:06,720
get to get the truly migratable stuff

1831
00:55:06,240 --> 00:55:08,558
it's one

1832
00:55:06,720 --> 00:55:10,160
or the other up to you so are we going

1833
00:55:08,559 --> 00:55:13,680
to have any let's say

1834
00:55:10,160 --> 00:55:15,279
a default folder separate for sharing

1835
00:55:13,680 --> 00:55:17,200
files between users that

1836
00:55:15,280 --> 00:55:20,319
reside in the machine and they're not

1837
00:55:17,200 --> 00:55:22,078
encrypted or anything like that um

1838
00:55:20,319 --> 00:55:23,920
so the question i mean my time's over

1839
00:55:22,079 --> 00:55:25,280
but let's do this one last thing

1840
00:55:23,920 --> 00:55:26,559
the question is like will we have a

1841
00:55:25,280 --> 00:55:28,000
shared folder where you can actually

1842
00:55:26,559 --> 00:55:30,559
share stuff we try and use this

1843
00:55:28,000 --> 00:55:31,920
i mean uh you can't do this i it homily

1844
00:55:30,559 --> 00:55:34,319
doesn't do this for you i don't think

1845
00:55:31,920 --> 00:55:35,680
like you know i'm pretty sure that um in

1846
00:55:34,319 --> 00:55:37,359
most cases when you want to share

1847
00:55:35,680 --> 00:55:39,118
something with other people you probably

1848
00:55:37,359 --> 00:55:41,200
do it via i don't know telegram

1849
00:55:39,119 --> 00:55:42,720
or or email or something like this

1850
00:55:41,200 --> 00:55:45,040
because inherently it means

1851
00:55:42,720 --> 00:55:46,399
probably most of the people who want to

1852
00:55:45,040 --> 00:55:46,960
share stuff was i'm not going to use

1853
00:55:46,400 --> 00:55:49,440
your

1854
00:55:46,960 --> 00:55:51,040
your the same system like at least if i

1855
00:55:49,440 --> 00:55:52,400
when i have shared a file with somebody

1856
00:55:51,040 --> 00:55:55,440
else in the last

1857
00:55:52,400 --> 00:55:57,040
two years 20 years they didn't have

1858
00:55:55,440 --> 00:55:58,799
access to my local system right

1859
00:55:57,040 --> 00:56:01,040
so i think the focus for sharing stuff

1860
00:55:58,799 --> 00:56:03,119
should always be on doing it distributed

1861
00:56:01,040 --> 00:56:04,720
right meaning do it on the network and

1862
00:56:03,119 --> 00:56:06,000
not on the local stuff but again

1863
00:56:04,720 --> 00:56:08,000
write that infrastructure if you want

1864
00:56:06,000 --> 00:56:10,640
this um it's totally doable to do

1865
00:56:08,000 --> 00:56:11,920
already um yeah i think that's it i

1866
00:56:10,640 --> 00:56:12,640
don't have any further time thank you

1867
00:56:11,920 --> 00:56:17,839
very much

1868
00:56:12,640 --> 00:56:17,839
for your interest for the questions

1869
00:56:19,280 --> 00:56:28,720
if you have any further questions let's

1870
00:56:20,880 --> 00:56:28,720
do that outside

