1
00:00:06,480 --> 00:00:09,760
welcome everybody you just joined uh

2
00:00:08,400 --> 00:00:10,639
this is our next speaker stefan

3
00:00:09,760 --> 00:00:12,480
bortsmeyer

4
00:00:10,639 --> 00:00:14,919
you were talking about testing doh and

5
00:00:12,480 --> 00:00:16,480
the ot servers for compliance and

6
00:00:14,920 --> 00:00:18,240
performance

7
00:00:16,480 --> 00:00:20,080
okay where is yours good luck hello

8
00:00:18,240 --> 00:00:23,839
everyone would you like some water

9
00:00:20,080 --> 00:00:27,198
oh yes please on beer too

10
00:00:23,840 --> 00:00:28,880
um there's no beer story okay so it's a

11
00:00:27,199 --> 00:00:30,880
good thing that i don't have a lot of

12
00:00:28,880 --> 00:00:33,120
time because i don't have many

13
00:00:30,880 --> 00:00:33,920
concrete results to show because the

14
00:00:33,120 --> 00:00:36,480
problem

15
00:00:33,920 --> 00:00:37,600
is more complicated than i thought when

16
00:00:36,480 --> 00:00:41,599
i suggested

17
00:00:37,600 --> 00:00:44,760
this talk so then our context

18
00:00:41,600 --> 00:00:47,840
uh d-o-e-d-n-s dns server encryption

19
00:00:44,760 --> 00:00:51,039
d-o-t-d-o um d-o-x

20
00:00:47,840 --> 00:00:54,879
maybe dns over quick one day um

21
00:00:51,039 --> 00:00:57,280
the general id is i don't think that it

22
00:00:54,879 --> 00:00:59,440
would be a good idea to have only two or

23
00:00:57,280 --> 00:01:01,920
three doe resolvers

24
00:00:59,440 --> 00:01:02,640
managed by big u.s company the good

25
00:01:01,920 --> 00:01:05,600
solution

26
00:01:02,640 --> 00:01:06,640
in my opinion is to have many many

27
00:01:05,600 --> 00:01:09,679
possible

28
00:01:06,640 --> 00:01:11,040
doe resolvers but if you have many of

29
00:01:09,680 --> 00:01:13,360
these resolvers

30
00:01:11,040 --> 00:01:14,159
you meet one problem which is to choose

31
00:01:13,360 --> 00:01:17,280
one

32
00:01:14,159 --> 00:01:18,479
you need information about the server so

33
00:01:17,280 --> 00:01:21,520
you need to test

34
00:01:18,479 --> 00:01:24,560
compliance or to assess compliance is

35
00:01:21,520 --> 00:01:26,240
the server a correct working server and

36
00:01:24,560 --> 00:01:28,640
also performance because

37
00:01:26,240 --> 00:01:30,240
of course as you know everything depends

38
00:01:28,640 --> 00:01:33,920
on dns if dns

39
00:01:30,240 --> 00:01:35,360
is slow or unresponsive everything is

40
00:01:33,920 --> 00:01:38,479
lost

41
00:01:35,360 --> 00:01:41,439
also one good reason to have

42
00:01:38,479 --> 00:01:42,399
some way to testing compliance of

43
00:01:41,439 --> 00:01:45,520
resolvers

44
00:01:42,399 --> 00:01:46,320
is to help managing directories of

45
00:01:45,520 --> 00:01:49,439
resolvers

46
00:01:46,320 --> 00:01:53,600
you have always already today several

47
00:01:49,439 --> 00:01:56,320
public directories of doe resolvers

48
00:01:53,600 --> 00:01:57,039
typically they are managed by end

49
00:01:56,320 --> 00:02:00,240
servers

50
00:01:57,040 --> 00:02:03,040
resolve doe resolvers come on go the

51
00:02:00,240 --> 00:02:05,199
directories are not always up to date

52
00:02:03,040 --> 00:02:06,479
when you want to have some specific

53
00:02:05,200 --> 00:02:09,598
characteristics such

54
00:02:06,479 --> 00:02:12,160
as ipv6 support for instance

55
00:02:09,598 --> 00:02:12,959
uh it has to be done by hand which is

56
00:02:12,160 --> 00:02:15,440
not uh

57
00:02:12,959 --> 00:02:16,239
good for the quality of the directories

58
00:02:15,440 --> 00:02:19,760
so

59
00:02:16,239 --> 00:02:20,879
for the compliance i played with a lot

60
00:02:19,760 --> 00:02:23,840
of

61
00:02:20,879 --> 00:02:25,760
e resolvers from the beginning using

62
00:02:23,840 --> 00:02:28,800
different tools to test

63
00:02:25,760 --> 00:02:32,399
if they work or not most of the tests

64
00:02:28,800 --> 00:02:35,360
i'm going to enumerate come from a real

65
00:02:32,400 --> 00:02:36,239
problem with one of the resolver for

66
00:02:35,360 --> 00:02:39,680
instance

67
00:02:36,239 --> 00:02:43,200
the rfc says that dox resolver

68
00:02:39,680 --> 00:02:46,560
has to accept get on post method

69
00:02:43,200 --> 00:02:49,518
but i saw a doh

70
00:02:46,560 --> 00:02:50,959
resolvers with only support for post for

71
00:02:49,519 --> 00:02:54,080
instance

72
00:02:50,959 --> 00:02:57,760
uh also uh robust nest when you have

73
00:02:54,080 --> 00:03:00,879
a strange or unexpected method the rfc

74
00:02:57,760 --> 00:03:01,760
about doh doesn't mandate that you have

75
00:03:00,879 --> 00:03:04,720
to support

76
00:03:01,760 --> 00:03:06,239
ed but i've seen at least one duh quiz

77
00:03:04,720 --> 00:03:09,200
over when you send the ad

78
00:03:06,239 --> 00:03:10,400
method it doesn't reply it doesn't shut

79
00:03:09,200 --> 00:03:14,720
the communication

80
00:03:10,400 --> 00:03:14,720
it just times out after some delay

81
00:03:14,800 --> 00:03:20,239
same thing when the broken request

82
00:03:18,400 --> 00:03:21,440
in some cases a broken request for

83
00:03:20,239 --> 00:03:24,159
instance a dns

84
00:03:21,440 --> 00:03:24,799
request which is not a proper one may

85
00:03:24,159 --> 00:03:28,560
break

86
00:03:24,799 --> 00:03:31,120
the connection the http 2 connection

87
00:03:28,560 --> 00:03:32,080
same thing for mime types also it could

88
00:03:31,120 --> 00:03:35,200
be interesting to

89
00:03:32,080 --> 00:03:38,080
test the tls quality

90
00:03:35,200 --> 00:03:39,760
cyphers accepted protocols accepted i

91
00:03:38,080 --> 00:03:42,720
hesitate on this one because

92
00:03:39,760 --> 00:03:45,200
at least for dox you can use existing

93
00:03:42,720 --> 00:03:48,480
tools like sslabs.com

94
00:03:45,200 --> 00:03:52,000
um which when you want to test doh

95
00:03:48,480 --> 00:03:55,359
resolver and also very important

96
00:03:52,000 --> 00:03:57,599
both dot and doh allows you to have

97
00:03:55,360 --> 00:03:58,799
several dns requests per connection

98
00:03:57,599 --> 00:04:01,920
because as you know

99
00:03:58,799 --> 00:04:06,239
dns has to be small latency

100
00:04:01,920 --> 00:04:09,040
on setting up a tcp tls http 2

101
00:04:06,239 --> 00:04:10,560
connection takes some time so it's

102
00:04:09,040 --> 00:04:14,079
absolutely necessary

103
00:04:10,560 --> 00:04:16,478
to have the ability to put

104
00:04:14,080 --> 00:04:17,199
several uh dns requests on one

105
00:04:16,478 --> 00:04:20,159
connection

106
00:04:17,199 --> 00:04:22,880
not creating a new connection each time

107
00:04:20,160 --> 00:04:26,400
it works more or less i remember one big

108
00:04:22,880 --> 00:04:28,639
dot resolver when it was first announced

109
00:04:26,400 --> 00:04:30,479
it was possible only to send one request

110
00:04:28,639 --> 00:04:31,040
and after that the connection was shut

111
00:04:30,479 --> 00:04:33,599
down

112
00:04:31,040 --> 00:04:35,199
it has been fixed since but it's still

113
00:04:33,600 --> 00:04:38,000
important

114
00:04:35,199 --> 00:04:39,440
uh and also of course uh out of order

115
00:04:38,000 --> 00:04:41,520
answers because it's not

116
00:04:39,440 --> 00:04:42,479
enough to have several connect several

117
00:04:41,520 --> 00:04:45,599
requests

118
00:04:42,479 --> 00:04:48,159
on one connection you know that a

119
00:04:45,600 --> 00:04:49,600
response time of a resolver unlike an

120
00:04:48,160 --> 00:04:52,240
authoritative server

121
00:04:49,600 --> 00:04:52,960
the response time of a resolver depends

122
00:04:52,240 --> 00:04:55,759
highly

123
00:04:52,960 --> 00:04:56,400
on the request if you do a request for a

124
00:04:55,759 --> 00:04:58,400
domain

125
00:04:56,400 --> 00:05:00,719
with authoritative name servers are

126
00:04:58,400 --> 00:05:01,440
broken the resolver will take a lot of

127
00:05:00,720 --> 00:05:04,400
time

128
00:05:01,440 --> 00:05:05,759
so you need to be able to receive on

129
00:05:04,400 --> 00:05:08,239
process and receive

130
00:05:05,759 --> 00:05:09,039
out of order answers if you send a

131
00:05:08,240 --> 00:05:11,280
request for

132
00:05:09,039 --> 00:05:14,240
slow domain then a request for a fast

133
00:05:11,280 --> 00:05:17,039
domain you certainly expect the answer

134
00:05:14,240 --> 00:05:18,479
for the first domain to come back first

135
00:05:17,039 --> 00:05:21,520
while we are still waiting

136
00:05:18,479 --> 00:05:23,520
for the slaughtermen on

137
00:05:21,520 --> 00:05:25,799
all sources available ip address it's

138
00:05:23,520 --> 00:05:27,039
very classic code it's funny that in

139
00:05:25,800 --> 00:05:29,440
2020

140
00:05:27,039 --> 00:05:31,440
we still have problems for instance with

141
00:05:29,440 --> 00:05:34,639
ipv6 and i've seen

142
00:05:31,440 --> 00:05:38,320
do h or dot resolvers with

143
00:05:34,639 --> 00:05:38,880
a name that has both ipv4 and ipv6

144
00:05:38,320 --> 00:05:41,919
address

145
00:05:38,880 --> 00:05:42,880
the ipv4 address worked the ipv6 timed

146
00:05:41,919 --> 00:05:46,639
out

147
00:05:42,880 --> 00:05:48,719
bad also

148
00:05:46,639 --> 00:05:49,680
compliance is not enough we also need

149
00:05:48,720 --> 00:05:52,720
performance

150
00:05:49,680 --> 00:05:57,039
the case of dot on dox

151
00:05:52,720 --> 00:05:59,759
is a bit different as i said you need to

152
00:05:57,039 --> 00:06:00,639
do it to be able to do several dns

153
00:05:59,759 --> 00:06:04,000
requests

154
00:06:00,639 --> 00:06:06,800
in one tcp tls session

155
00:06:04,000 --> 00:06:09,120
the multiplexing in the case of dot is

156
00:06:06,800 --> 00:06:11,360
done on the basis of the query id

157
00:06:09,120 --> 00:06:12,560
so typically the client is supposed to

158
00:06:11,360 --> 00:06:14,960
send

159
00:06:12,560 --> 00:06:17,039
as many requests as they want with the

160
00:06:14,960 --> 00:06:17,840
proper query id and when the answers

161
00:06:17,039 --> 00:06:20,240
come back

162
00:06:17,840 --> 00:06:20,880
the client is supposed to use the query

163
00:06:20,240 --> 00:06:24,479
id

164
00:06:20,880 --> 00:06:27,759
to know how to match the answer

165
00:06:24,479 --> 00:06:29,280
with the request of course it's

166
00:06:27,759 --> 00:06:31,520
interesting only if there is

167
00:06:29,280 --> 00:06:33,280
pipelining the ability to send the

168
00:06:31,520 --> 00:06:36,080
request even

169
00:06:33,280 --> 00:06:37,359
before you receive the answer on out of

170
00:06:36,080 --> 00:06:40,639
order as i said

171
00:06:37,360 --> 00:06:43,440
if a slow question

172
00:06:40,639 --> 00:06:45,680
starts before a first a first question

173
00:06:43,440 --> 00:06:47,440
you expect the answers in the opposite

174
00:06:45,680 --> 00:06:50,960
order

175
00:06:47,440 --> 00:06:51,599
for dox it's a bit different you also

176
00:06:50,960 --> 00:06:54,960
need

177
00:06:51,599 --> 00:06:57,599
several requests on one http 2

178
00:06:54,960 --> 00:06:59,359
session you certainly don't set up a

179
00:06:57,599 --> 00:07:02,680
complete http session

180
00:06:59,360 --> 00:07:05,680
for each request but the demultiplexion

181
00:07:02,680 --> 00:07:06,400
demultiplexing is not done by the query

182
00:07:05,680 --> 00:07:08,400
id

183
00:07:06,400 --> 00:07:09,520
it's done by the use of the streams of

184
00:07:08,400 --> 00:07:13,039
http 2.

185
00:07:09,520 --> 00:07:14,479
you know that doh requires http 2

186
00:07:13,039 --> 00:07:16,479
which means that you have several

187
00:07:14,479 --> 00:07:21,758
streams in um

188
00:07:16,479 --> 00:07:25,360
in this section on the run in parallel

189
00:07:21,759 --> 00:07:28,000
we and that's the reason why in the lfc

190
00:07:25,360 --> 00:07:29,360
it says that the query id has to be zero

191
00:07:28,000 --> 00:07:32,240
because you don't need it

192
00:07:29,360 --> 00:07:33,680
for the multiplexing so the server needs

193
00:07:32,240 --> 00:07:38,000
to be able to process them

194
00:07:33,680 --> 00:07:41,280
in parallel send answers out of order

195
00:07:38,000 --> 00:07:41,919
what does it make in practice that was a

196
00:07:41,280 --> 00:07:45,840
theory

197
00:07:41,919 --> 00:07:49,520
now a bit of practice uh for dot

198
00:07:45,840 --> 00:07:52,799
i've tested i i both tested with

199
00:07:49,520 --> 00:07:53,520
actual uh software on servers and also i

200
00:07:52,800 --> 00:07:55,599
checked

201
00:07:53,520 --> 00:07:58,120
with the documentation on the software

202
00:07:55,599 --> 00:07:59,520
on some directories like the one on

203
00:07:58,120 --> 00:08:02,560
dnsprivacy.org

204
00:07:59,520 --> 00:08:05,758
that i was correct so out of order

205
00:08:02,560 --> 00:08:07,759
dot works with google public dns it

206
00:08:05,759 --> 00:08:10,479
works with cloudflare

207
00:08:07,759 --> 00:08:12,080
if you take software it works with not

208
00:08:10,479 --> 00:08:15,360
and i believe that cloudflare

209
00:08:12,080 --> 00:08:16,479
uses not um with lex plan but also it

210
00:08:15,360 --> 00:08:20,080
works if you have

211
00:08:16,479 --> 00:08:23,360
set up bind bind doesn't have dots today

212
00:08:20,080 --> 00:08:23,758
officially but you can run it behind s1l

213
00:08:23,360 --> 00:08:26,479
or

214
00:08:23,759 --> 00:08:27,199
another tls proxy and in that case out

215
00:08:26,479 --> 00:08:30,400
of order

216
00:08:27,199 --> 00:08:33,120
works apparently

217
00:08:30,400 --> 00:08:35,360
unfortunately it doesn't work on the

218
00:08:33,120 --> 00:08:38,560
quad 9 service which i believe

219
00:08:35,360 --> 00:08:40,959
uses unbound it doesn't work on unbound

220
00:08:38,559 --> 00:08:41,760
and it doesn't work on dns dist which is

221
00:08:40,958 --> 00:08:44,159
really

222
00:08:41,760 --> 00:08:45,920
sad because dns this is a very very good

223
00:08:44,159 --> 00:08:49,439
software very useful

224
00:08:45,920 --> 00:08:51,760
so um i will try to

225
00:08:49,440 --> 00:08:53,680
ask the dnsd developer to do something

226
00:08:51,760 --> 00:08:55,839
about it

227
00:08:53,680 --> 00:08:55,839
yes

228
00:08:59,839 --> 00:09:05,839
no the client is um

229
00:09:03,760 --> 00:09:07,360
in in that case the client is a step

230
00:09:05,839 --> 00:09:10,399
client and the resolver

231
00:09:07,360 --> 00:09:12,800
is unbound it works now okay

232
00:09:10,399 --> 00:09:14,959
great so i have to fix the slides thank

233
00:09:12,800 --> 00:09:14,959
you

234
00:09:15,519 --> 00:09:18,240
for doh

235
00:09:18,800 --> 00:09:24,079
that's why i had a lot of problems i was

236
00:09:21,200 --> 00:09:26,080
planning to use leap curl to do http 2

237
00:09:24,080 --> 00:09:26,880
on streams and apparently lip color is a

238
00:09:26,080 --> 00:09:29,040
bit

239
00:09:26,880 --> 00:09:31,439
too difficult for me i have to upgrade

240
00:09:29,040 --> 00:09:35,439
my brain

241
00:09:31,440 --> 00:09:38,399
so what i saw is that if you use

242
00:09:35,440 --> 00:09:40,480
google proprietary a protocol it's dns

243
00:09:38,399 --> 00:09:43,120
over https but it's not the

244
00:09:40,480 --> 00:09:43,600
official doex it works you can have

245
00:09:43,120 --> 00:09:46,240
several

246
00:09:43,600 --> 00:09:46,800
http 2 streams and you receive the

247
00:09:46,240 --> 00:09:49,760
answer

248
00:09:46,800 --> 00:09:51,439
out of order which is a good thing i

249
00:09:49,760 --> 00:09:54,000
didn't test yet

250
00:09:51,440 --> 00:09:54,640
with uh doh and i'm not sure that

251
00:09:54,000 --> 00:09:57,680
someone

252
00:09:54,640 --> 00:09:59,920
did it uh uh is it

253
00:09:57,680 --> 00:10:01,040
well if you have information about this

254
00:09:59,920 --> 00:10:04,399
i'm interested

255
00:10:01,040 --> 00:10:04,800
can we use http 2 streams on out of

256
00:10:04,399 --> 00:10:08,079
order

257
00:10:04,800 --> 00:10:09,120
answers with doex resolvers that's on my

258
00:10:08,079 --> 00:10:11,920
to-do list

259
00:10:09,120 --> 00:10:12,720
i'm starting on monday there is a new

260
00:10:11,920 --> 00:10:15,839
intern

261
00:10:12,720 --> 00:10:17,279
starting at ethnic and he will have to

262
00:10:15,839 --> 00:10:20,560
work on this

263
00:10:17,279 --> 00:10:22,720
poor guy among the

264
00:10:20,560 --> 00:10:23,920
for performance measurements we have

265
00:10:22,720 --> 00:10:26,880
many tools

266
00:10:23,920 --> 00:10:28,079
to measure performance and some of them

267
00:10:26,880 --> 00:10:31,600
have support for

268
00:10:28,079 --> 00:10:34,000
dot and not for dox

269
00:10:31,600 --> 00:10:34,640
for instance dns meta as far as i

270
00:10:34,000 --> 00:10:37,839
thought

271
00:10:34,640 --> 00:10:41,040
as i see as not even tcp not

272
00:10:37,839 --> 00:10:44,399
even plenty cp dns perth

273
00:10:41,040 --> 00:10:46,640
has a dot but not doa

274
00:10:44,399 --> 00:10:47,760
but it's why it's a good thing

275
00:10:46,640 --> 00:10:51,439
flamethrower

276
00:10:47,760 --> 00:10:55,360
has a d.o.t and it's very very efficient

277
00:10:51,440 --> 00:10:55,360
if you want to kill a dot

278
00:10:58,560 --> 00:11:07,279
okay not not yet officially integrated

279
00:11:02,480 --> 00:11:08,079
okay so so frame thrower will have dough

280
00:11:07,279 --> 00:11:11,519
hopefully

281
00:11:08,079 --> 00:11:11,519
soon the door does

282
00:11:12,079 --> 00:11:19,040
dns blast has no tcp at all

283
00:11:15,440 --> 00:11:20,320
so um my so as you see there are not a

284
00:11:19,040 --> 00:11:23,360
lot of

285
00:11:20,320 --> 00:11:24,240
actual results yet i'm planning to work

286
00:11:23,360 --> 00:11:27,200
on it

287
00:11:24,240 --> 00:11:29,200
uh we already developed a small testing

288
00:11:27,200 --> 00:11:30,480
tool which will make easy to do this

289
00:11:29,200 --> 00:11:34,079
sort of test

290
00:11:30,480 --> 00:11:38,000
and i'm interested if people here

291
00:11:34,079 --> 00:11:41,120
have ideas proposals fixes

292
00:11:38,000 --> 00:11:43,839
and want to work on this sort of stuff

293
00:11:41,120 --> 00:11:43,839
thank you

294
00:11:48,079 --> 00:11:54,719
thank you stefan so in the remarks andre

295
00:11:52,480 --> 00:11:56,639
we have eight minutes for questions

296
00:11:54,720 --> 00:11:59,680
remarks comments

297
00:11:56,639 --> 00:12:02,160
uh hi stefan this is andre from isc so

298
00:11:59,680 --> 00:12:03,839
um are you going to publish the test

299
00:12:02,160 --> 00:12:06,160
suite and the compliance to it

300
00:12:03,839 --> 00:12:07,360
because we are going to develop doh for

301
00:12:06,160 --> 00:12:09,519
buying this year

302
00:12:07,360 --> 00:12:10,480
and i would love to like if you already

303
00:12:09,519 --> 00:12:12,880
tested a lot of

304
00:12:10,480 --> 00:12:14,639
of this stuff i would love love to have

305
00:12:12,880 --> 00:12:16,639
the test to it

306
00:12:14,639 --> 00:12:18,720
that i can really use to when when we

307
00:12:16,639 --> 00:12:20,800
are doing the implementation so we get

308
00:12:18,720 --> 00:12:23,279
everything right from the beginning

309
00:12:20,800 --> 00:12:24,000
so so are you going to publish dude okay

310
00:12:23,279 --> 00:12:26,720
so at this

311
00:12:24,000 --> 00:12:27,920
time uh what we have is just uh it's

312
00:12:26,720 --> 00:12:29,600
there's this list

313
00:12:27,920 --> 00:12:31,920
which is a good idea of the things to

314
00:12:29,600 --> 00:12:34,800
test some are implemented

315
00:12:31,920 --> 00:12:36,479
in a tool which is uh it's free software

316
00:12:34,800 --> 00:12:39,199
it's public it's on a git lab

317
00:12:36,480 --> 00:12:39,519
but it's very very alpha at this stage

318
00:12:39,200 --> 00:12:42,639
but

319
00:12:39,519 --> 00:12:44,079
in the end the goal is yes to publish it

320
00:12:42,639 --> 00:12:47,279
and to be able to type

321
00:12:44,079 --> 00:12:48,079
command line minus minus check the name

322
00:12:47,279 --> 00:12:50,160
of a server

323
00:12:48,079 --> 00:12:51,120
and then you will have an answer like we

324
00:12:50,160 --> 00:12:54,319
do

325
00:12:51,120 --> 00:12:57,680
for the dns general dns with tools like

326
00:12:54,320 --> 00:12:58,800
zone master for instance i suspect some

327
00:12:57,680 --> 00:13:00,479
of the other vendors will have some

328
00:12:58,800 --> 00:13:02,160
testing card i know powerdiner does i

329
00:13:00,480 --> 00:13:05,440
suspect not does and

330
00:13:02,160 --> 00:13:07,120
maybe nonetheless too but it would be

331
00:13:05,440 --> 00:13:09,600
good if somebody outside of all of those

332
00:13:07,120 --> 00:13:09,600
does this

333
00:13:11,279 --> 00:13:16,000
anybody else peter right

334
00:13:19,600 --> 00:13:24,240
so hi stefan uh so internally we are

335
00:13:21,680 --> 00:13:26,479
working on a tool as well to do low

336
00:13:24,240 --> 00:13:28,000
uh so to do to do dough performance

337
00:13:26,480 --> 00:13:31,040
testing but it will use

338
00:13:28,000 --> 00:13:32,720
http 2 streams for this as well

339
00:13:31,040 --> 00:13:34,000
uh and i've talked to the developer

340
00:13:32,720 --> 00:13:36,000
earlier this week and we're going to

341
00:13:34,000 --> 00:13:38,480
release it at some point

342
00:13:36,000 --> 00:13:39,440
when it's not in the alpha state it is

343
00:13:38,480 --> 00:13:42,000
now

344
00:13:39,440 --> 00:13:43,839
so this will come out as well okay i'm

345
00:13:42,000 --> 00:13:46,639
interested in uh discussion

346
00:13:43,839 --> 00:13:48,240
on sharing of code and to to be sure

347
00:13:46,639 --> 00:13:50,480
that we are on the same

348
00:13:48,240 --> 00:13:54,160
we have this well as we don't have to

349
00:13:50,480 --> 00:13:54,160
redevelop if it's not necessary

350
00:13:55,760 --> 00:13:59,920
well lip glow is cool but uh multi

351
00:13:58,720 --> 00:14:02,000
angles are

352
00:13:59,920 --> 00:14:03,360
sometimes a bit difficult at least for

353
00:14:02,000 --> 00:14:06,880
me i think we ended up with a different

354
00:14:03,360 --> 00:14:06,880
lip hd http 2.

355
00:14:07,440 --> 00:14:12,639
you too yeah okay any other question

356
00:14:10,480 --> 00:14:13,519
it's also that lip color i use lip curl

357
00:14:12,639 --> 00:14:16,800
currently for it

358
00:14:13,519 --> 00:14:19,519
for doh but for or t i it's everything

359
00:14:16,800 --> 00:14:19,519
is done by end

360
00:14:21,839 --> 00:14:24,959
so so this is andre this time with my

361
00:14:23,760 --> 00:14:28,079
dns or

362
00:14:24,959 --> 00:14:31,040
head so uh you mentioned dns perf and

363
00:14:28,079 --> 00:14:34,160
dns perf is now maintained by orcs so

364
00:14:31,040 --> 00:14:37,199
there's an option to ask jerry to

365
00:14:34,160 --> 00:14:38,160
an arc to add implement add support for

366
00:14:37,199 --> 00:14:41,279
the oh to

367
00:14:38,160 --> 00:14:45,040
do the dns perf so if you can do that

368
00:14:41,279 --> 00:14:47,600
that would be great so it's not my

369
00:14:45,040 --> 00:14:49,120
board had forcing jerry something to do

370
00:14:47,600 --> 00:14:50,959
that but if you could fill an issue

371
00:14:49,120 --> 00:14:52,160
for the years perfect it would be great

372
00:14:50,959 --> 00:14:54,638
thank you one

373
00:14:52,160 --> 00:14:56,560
one of the reason why there are many

374
00:14:54,639 --> 00:14:58,800
tools without doh

375
00:14:56,560 --> 00:15:00,079
first it's more recent than dot that's

376
00:14:58,800 --> 00:15:01,839
first explanation

377
00:15:00,079 --> 00:15:04,160
and also it's more complicated because

378
00:15:01,839 --> 00:15:06,800
you need the entire http

379
00:15:04,160 --> 00:15:08,399
2 machine which is quite complicated so

380
00:15:06,800 --> 00:15:11,040
you depend in the end

381
00:15:08,399 --> 00:15:12,079
you depend on an external library like

382
00:15:11,040 --> 00:15:15,439
nd http

383
00:15:12,079 --> 00:15:16,479
2 or lipcurl which makes your dependency

384
00:15:15,440 --> 00:15:18,800
new problems

385
00:15:16,480 --> 00:15:22,639
new documentation to read et cetera so

386
00:15:18,800 --> 00:15:22,639
doex is a bit more difficult

387
00:15:25,600 --> 00:15:28,320
anybody else

388
00:15:29,040 --> 00:15:32,240
all right then we have 10 minutes until

389
00:15:30,399 --> 00:15:41,839
the next speaker thank you

390
00:15:32,240 --> 00:15:41,839
thank you stefan

391
00:15:45,440 --> 00:15:47,519
you

