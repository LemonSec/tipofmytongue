1
00:00:05,600 --> 00:00:10,320
ladies and gentlemen

2
00:00:07,200 --> 00:00:12,400
next talk please hi um

3
00:00:10,320 --> 00:00:14,080
i'm nia i'm giving this talk from an

4
00:00:12,400 --> 00:00:16,800
experimental display server

5
00:00:14,080 --> 00:00:18,320
running in weyland on an fbsd so at

6
00:00:16,800 --> 00:00:22,080
least having video output is

7
00:00:18,320 --> 00:00:22,080
makes it a success to me um

8
00:00:24,320 --> 00:00:28,480
so first of all i have to start out

9
00:00:26,720 --> 00:00:31,519
being a bit sad because

10
00:00:28,480 --> 00:00:33,280
we have a load of cool original fairly

11
00:00:31,519 --> 00:00:34,960
unique apis in that bsd that have been

12
00:00:33,280 --> 00:00:36,719
developed over the years but not a whole

13
00:00:34,960 --> 00:00:40,239
lot of software uses them

14
00:00:36,719 --> 00:00:42,719
and yeah it's

15
00:00:40,239 --> 00:00:44,078
kind of understandable because working

16
00:00:42,719 --> 00:00:48,000
with people is absolutely

17
00:00:44,079 --> 00:00:49,920
the worst part of open source um

18
00:00:48,000 --> 00:00:52,719
i've been told you've been given a lot

19
00:00:49,920 --> 00:00:55,600
of reasons for

20
00:00:52,719 --> 00:00:57,280
um why pull requests haven't been

21
00:00:55,600 --> 00:00:59,920
accepted and things like that

22
00:00:57,280 --> 00:01:02,160
and there's a increasing attitude that

23
00:00:59,920 --> 00:01:02,160
um

24
00:01:02,960 --> 00:01:06,000
that even supporting things like bsd is

25
00:01:05,600 --> 00:01:07,600
just

26
00:01:06,000 --> 00:01:09,040
a um too much of a bit too much of a

27
00:01:07,600 --> 00:01:10,080
burden it's holding open source

28
00:01:09,040 --> 00:01:12,080
development back i

29
00:01:10,080 --> 00:01:13,439
really don't agree with that for obvious

30
00:01:12,080 --> 00:01:15,039
reasons it's

31
00:01:13,439 --> 00:01:17,119
just something that's been coming from a

32
00:01:15,040 --> 00:01:20,000
particular camp of people though

33
00:01:17,119 --> 00:01:21,680
and yeah and we don't want to write

34
00:01:20,000 --> 00:01:24,720
everything ourselves we don't want to

35
00:01:21,680 --> 00:01:28,080
completely reinvent webkits and

36
00:01:24,720 --> 00:01:28,080
nginx and everything else

37
00:01:28,640 --> 00:01:31,759
maybe we can make some progress though

38
00:01:30,000 --> 00:01:33,520
if we talk to the right people and work

39
00:01:31,759 --> 00:01:36,960
on the right things and

40
00:01:33,520 --> 00:01:41,199
yeah hopefully this talk helps

41
00:01:36,960 --> 00:01:44,079
so now bsd uh its own audio api that

42
00:01:41,200 --> 00:01:45,920
was originally um developed at some

43
00:01:44,079 --> 00:01:48,479
microsystems like a lot of technology

44
00:01:45,920 --> 00:01:51,600
that people are excited about these days

45
00:01:48,479 --> 00:01:53,200
um they seem to just a lot of things

46
00:01:51,600 --> 00:01:54,079
that the tech community is excited about

47
00:01:53,200 --> 00:01:55,920
now it seems to be

48
00:01:54,079 --> 00:01:58,639
things that were invented at sun in the

49
00:01:55,920 --> 00:02:02,799
late 90s and early 2000s

50
00:01:58,640 --> 00:02:06,159
um that it's got quite a lot of

51
00:02:02,799 --> 00:02:08,560
support in older software but it's not

52
00:02:06,159 --> 00:02:10,399
so it's adoption in your software since

53
00:02:08,560 --> 00:02:13,840
sun died has not been too great

54
00:02:10,399 --> 00:02:15,840
um it's a really intuitive

55
00:02:13,840 --> 00:02:17,599
simple api i had no idea how to read

56
00:02:15,840 --> 00:02:19,680
audio code i've read a man page and now

57
00:02:17,599 --> 00:02:21,519
i know how to write audio code

58
00:02:19,680 --> 00:02:23,280
just manifold audio if you want to have

59
00:02:21,520 --> 00:02:26,959
a look at that

60
00:02:23,280 --> 00:02:27,440
and yeah you just you really you need to

61
00:02:26,959 --> 00:02:30,239
use

62
00:02:27,440 --> 00:02:31,680
either standard file operations because

63
00:02:30,239 --> 00:02:32,720
like a lot of the apis i'll be talking

64
00:02:31,680 --> 00:02:36,000
about today

65
00:02:32,720 --> 00:02:38,640
everything is a file and really you just

66
00:02:36,000 --> 00:02:40,480
use one ioctal to um

67
00:02:38,640 --> 00:02:42,238
set the parameters of the audio format

68
00:02:40,480 --> 00:02:43,840
in a struct and pass it to the kernel

69
00:02:42,239 --> 00:02:45,680
and then the kernel interprets the audio

70
00:02:43,840 --> 00:02:47,680
data or gives you back the audio data in

71
00:02:45,680 --> 00:02:50,879
the correct format

72
00:02:47,680 --> 00:02:54,160
um yeah

73
00:02:50,879 --> 00:02:56,720
so yeah i read a mixer

74
00:02:54,160 --> 00:02:59,519
after leningrad audio code um i can

75
00:02:56,720 --> 00:02:59,519
probably show it to you

76
00:03:00,239 --> 00:03:06,800
if i turn off caps lock

77
00:03:04,480 --> 00:03:06,799
wow

78
00:03:09,120 --> 00:03:16,000
so yeah this is aoi mixer you can

79
00:03:13,760 --> 00:03:17,760
install that from package source today

80
00:03:16,000 --> 00:03:19,840
it's freely available to binary package

81
00:03:17,760 --> 00:03:21,760
as well now i think

82
00:03:19,840 --> 00:03:23,840
um and it has quite a lot of

83
00:03:21,760 --> 00:03:25,200
functionality actually

84
00:03:23,840 --> 00:03:26,959
if you look at the upper classes and

85
00:03:25,200 --> 00:03:28,560
everything and there's various different

86
00:03:26,959 --> 00:03:32,159
controls

87
00:03:28,560 --> 00:03:34,400
because you don't just have standard

88
00:03:32,159 --> 00:03:35,200
standard um volume control anymore you

89
00:03:34,400 --> 00:03:36,959
need to

90
00:03:35,200 --> 00:03:38,480
your laptop has a headphone port it has

91
00:03:36,959 --> 00:03:39,680
speakers if you have a desktop it has

92
00:03:38,480 --> 00:03:41,119
lots of different ports and you need to

93
00:03:39,680 --> 00:03:43,360
be able to control them independently if

94
00:03:41,120 --> 00:03:46,319
you want to be doing like um

95
00:03:43,360 --> 00:03:47,360
anything but basic tasks so that allows

96
00:03:46,319 --> 00:03:49,760
you to do that and there was nothing

97
00:03:47,360 --> 00:03:53,280
really that existed that met those needs

98
00:03:49,760 --> 00:03:55,519
that i had at the time and

99
00:03:53,280 --> 00:03:57,360
this this work then led me to firefox

100
00:03:55,519 --> 00:03:58,560
because audio and firefox was a complete

101
00:03:57,360 --> 00:04:00,000
mess

102
00:03:58,560 --> 00:04:01,599
let's put it that way it was a complete

103
00:04:00,000 --> 00:04:05,680
mess on all of the bsds

104
00:04:01,599 --> 00:04:09,280
really until um sound i o came along

105
00:04:05,680 --> 00:04:12,959
um there's an unofficial ss back end

106
00:04:09,280 --> 00:04:14,959
that was using netbsd's emulation of oss

107
00:04:12,959 --> 00:04:16,959
which is the old sound system that linux

108
00:04:14,959 --> 00:04:19,519
used to use

109
00:04:16,959 --> 00:04:21,280
like in the early 2000s before elsa was

110
00:04:19,519 --> 00:04:22,880
invented then pulse audio was invented

111
00:04:21,279 --> 00:04:24,400
and i'm sure someone at red hat is

112
00:04:22,880 --> 00:04:26,800
working on reinventing pulse audio

113
00:04:24,400 --> 00:04:26,799
currently

114
00:04:26,840 --> 00:04:31,919
um and

115
00:04:29,680 --> 00:04:33,600
yeah it's it's been deleted from freebsd

116
00:04:31,919 --> 00:04:36,479
already because it was full of bugs

117
00:04:33,600 --> 00:04:38,080
we've deleted it now too

118
00:04:36,479 --> 00:04:39,840
nobody likes writing or using emulation

119
00:04:38,080 --> 00:04:42,000
laser shims i really

120
00:04:39,840 --> 00:04:44,719
do not want to spend my life making sure

121
00:04:42,000 --> 00:04:47,919
we are bug for bug compatible with linux

122
00:04:44,720 --> 00:04:47,919
i cannot stress that enough

123
00:04:49,520 --> 00:04:56,159
um yeah and pulse audio was the

124
00:04:53,120 --> 00:04:57,280
option promoted by mozilla for up to

125
00:04:56,160 --> 00:04:58,720
meet everyone's needs

126
00:04:57,280 --> 00:05:00,320
it's kind of controversial a lot of our

127
00:04:58,720 --> 00:05:01,600
users don't really like it for various

128
00:05:00,320 --> 00:05:03,759
reasons

129
00:05:01,600 --> 00:05:05,280
um it works but you don't really need it

130
00:05:03,759 --> 00:05:10,240
we do audio mixing in the kernel

131
00:05:05,280 --> 00:05:13,599
um yeah

132
00:05:10,240 --> 00:05:16,080
and newer tech just necessitated that we

133
00:05:13,600 --> 00:05:17,360
do this because i wanted to be able to

134
00:05:16,080 --> 00:05:19,840
attend work meetings

135
00:05:17,360 --> 00:05:21,039
on my net psd machine and to do that i

136
00:05:19,840 --> 00:05:22,719
needed webrtc

137
00:05:21,039 --> 00:05:24,960
and we had no way to record from

138
00:05:22,720 --> 00:05:26,639
microphones using the oss back end

139
00:05:24,960 --> 00:05:28,560
so now we have full device selection and

140
00:05:26,639 --> 00:05:31,039
the working oss

141
00:05:28,560 --> 00:05:33,600
sorry a workings on audio um driver for

142
00:05:31,039 --> 00:05:37,599
firefox

143
00:05:33,600 --> 00:05:39,680
yeah and it's a lot more advanced than

144
00:05:37,600 --> 00:05:42,720
the uss back end and supports various

145
00:05:39,680 --> 00:05:44,240
of these features like um

146
00:05:42,720 --> 00:05:45,919
allowing for higher quality audio around

147
00:05:44,240 --> 00:05:48,320
allowing for surround sound

148
00:05:45,919 --> 00:05:49,758
allowing you to use usb microphones and

149
00:05:48,320 --> 00:05:51,440
things like that because

150
00:05:49,759 --> 00:05:53,600
well i had a usb microphone i wanted to

151
00:05:51,440 --> 00:05:56,319
use it

152
00:05:53,600 --> 00:05:57,759
and yeah the mozilla's media team was

153
00:05:56,319 --> 00:05:59,280
really nice and helpful um they were

154
00:05:57,759 --> 00:06:00,800
less nice and hel

155
00:05:59,280 --> 00:06:02,318
well the team of mozilla that was less

156
00:06:00,800 --> 00:06:02,639
nice and helpful was their legal team

157
00:06:02,319 --> 00:06:04,319
who

158
00:06:02,639 --> 00:06:07,520
threatened to sue me for wanting to call

159
00:06:04,319 --> 00:06:09,840
our builds firefox

160
00:06:07,520 --> 00:06:11,120
and yeah all of this was done in c

161
00:06:09,840 --> 00:06:12,799
because the

162
00:06:11,120 --> 00:06:14,639
mozilla audio library is maintained

163
00:06:12,800 --> 00:06:15,759
separately from firefox it's maintained

164
00:06:14,639 --> 00:06:17,280
in on github

165
00:06:15,759 --> 00:06:19,919
the maintainers were really nice to me

166
00:06:17,280 --> 00:06:21,119
and yeah i don't know rust i don't see

167
00:06:19,919 --> 00:06:21,440
the point of writing this in rust

168
00:06:21,120 --> 00:06:23,280
because

169
00:06:21,440 --> 00:06:25,039
it's just talking to a c kernel api

170
00:06:23,280 --> 00:06:27,280
really

171
00:06:25,039 --> 00:06:27,280
um

172
00:06:28,240 --> 00:06:33,840
and that brought me another thing i have

173
00:06:31,919 --> 00:06:34,639
been kind of obsessing over recently as

174
00:06:33,840 --> 00:06:37,919
randomness

175
00:06:34,639 --> 00:06:40,000
and security for and random number

176
00:06:37,919 --> 00:06:42,159
generation and

177
00:06:40,000 --> 00:06:44,960
all of the bsd has had this api for many

178
00:06:42,160 --> 00:06:49,360
many years called kern a-rand

179
00:06:44,960 --> 00:06:52,719
that you have access through ctl

180
00:06:49,360 --> 00:06:54,240
um it has all the advantages that

181
00:06:52,720 --> 00:06:56,000
the newer apis have you don't need to

182
00:06:54,240 --> 00:06:57,759
open a file descriptor like deverandom

183
00:06:56,000 --> 00:06:59,840
so it can be done at low level

184
00:06:57,759 --> 00:07:03,840
it's just an endless stream of highly

185
00:06:59,840 --> 00:07:03,840
secure random data that never blocks

186
00:07:04,560 --> 00:07:07,759
and there's only a couple of

187
00:07:06,720 --> 00:07:09,440
disadvantages

188
00:07:07,759 --> 00:07:13,039
just because of historical reasons we

189
00:07:09,440 --> 00:07:15,680
just can't read more than 256 bytes per

190
00:07:13,039 --> 00:07:17,120
per system call i think that's fine um

191
00:07:15,680 --> 00:07:18,800
that's enough to see the random number

192
00:07:17,120 --> 00:07:20,960
generator

193
00:07:18,800 --> 00:07:22,800
and it's not fashionable anymore because

194
00:07:20,960 --> 00:07:26,318
the linux people

195
00:07:22,800 --> 00:07:29,120
decided um to invent much fancier random

196
00:07:26,319 --> 00:07:31,840
number cisco cisco's uh after there was

197
00:07:29,120 --> 00:07:34,880
some drama and

198
00:07:31,840 --> 00:07:36,880
but i was just amazed that this api has

199
00:07:34,880 --> 00:07:38,800
been around for so long but so little

200
00:07:36,880 --> 00:07:40,880
software used it

201
00:07:38,800 --> 00:07:42,800
like all of the bsds had this they've

202
00:07:40,880 --> 00:07:45,039
had it since the early 2000s but

203
00:07:42,800 --> 00:07:47,280
it only really open ssl was using this

204
00:07:45,039 --> 00:07:49,919
nothing else was really

205
00:07:47,280 --> 00:07:50,719
and gnu tls and libya v use it now and

206
00:07:49,919 --> 00:07:52,479
they

207
00:07:50,720 --> 00:07:54,319
accepted my patches and they were very

208
00:07:52,479 --> 00:07:56,719
nice and it was very easy to get that

209
00:07:54,319 --> 00:07:58,240
done so thank you very much

210
00:07:56,720 --> 00:08:00,240
it's just results in much simpler less

211
00:07:58,240 --> 00:08:03,199
error-prone code i think

212
00:08:00,240 --> 00:08:04,319
um i think this syscall has kind of gone

213
00:08:03,199 --> 00:08:05,280
out of fashion because people think it's

214
00:08:04,319 --> 00:08:07,919
a bit complicated

215
00:08:05,280 --> 00:08:08,799
um but this is the entire code in libya

216
00:08:07,919 --> 00:08:10,878
v for

217
00:08:08,800 --> 00:08:13,199
getting random number number generation

218
00:08:10,879 --> 00:08:15,039
on netbsd i think it's simple enough

219
00:08:13,199 --> 00:08:17,919
i don't think it's too complicated at

220
00:08:15,039 --> 00:08:17,919
all it fits in a slide

221
00:08:18,160 --> 00:08:25,759
and then on ifc there was some drama

222
00:08:22,000 --> 00:08:28,639
because red hat had just announced that

223
00:08:25,759 --> 00:08:30,080
they're deprecating xorg in red hat

224
00:08:28,639 --> 00:08:31,440
enterprise linux and that kind of had a

225
00:08:30,080 --> 00:08:32,399
lot of people in our ic channel

226
00:08:31,440 --> 00:08:35,039
panicking

227
00:08:32,399 --> 00:08:36,320
we kind of depend on x11 it's there's

228
00:08:35,039 --> 00:08:40,319
not really any alternative

229
00:08:36,320 --> 00:08:45,200
on netbsd or at least there wasn't

230
00:08:40,320 --> 00:08:49,279
um that brought me to

231
00:08:45,200 --> 00:08:49,279
how can i fix this because

232
00:08:50,240 --> 00:08:54,080
most whale encode is written exclusively

233
00:08:52,320 --> 00:08:55,600
for linux it's non-modular it's not

234
00:08:54,080 --> 00:08:58,880
portable it's just a big

235
00:08:55,600 --> 00:09:02,399
blob of linux kernel api usage

236
00:08:58,880 --> 00:09:05,680
and freebsd's solution to this has

237
00:09:02,399 --> 00:09:07,120
basically been we're going to implement

238
00:09:05,680 --> 00:09:09,920
the linux kernel apis

239
00:09:07,120 --> 00:09:11,040
we're going to have a shim around epoll

240
00:09:09,920 --> 00:09:12,640
we're going to link this

241
00:09:11,040 --> 00:09:16,319
link this again against everything that

242
00:09:12,640 --> 00:09:18,240
uses vaguely linux code i think

243
00:09:16,320 --> 00:09:19,519
i've already stated as much that i do

244
00:09:18,240 --> 00:09:21,680
not want to be

245
00:09:19,519 --> 00:09:23,680
spend my life chasing bug for bug

246
00:09:21,680 --> 00:09:26,000
compatibility with linux

247
00:09:23,680 --> 00:09:27,439
it's really not something we should be

248
00:09:26,000 --> 00:09:29,120
spending our time on because

249
00:09:27,440 --> 00:09:31,279
there's so many more important things to

250
00:09:29,120 --> 00:09:34,000
be doing um

251
00:09:31,279 --> 00:09:35,279
and it's it kind of feels like it's

252
00:09:34,000 --> 00:09:37,680
holding us back just having to

253
00:09:35,279 --> 00:09:39,279
constantly chase whatever they're doing

254
00:09:37,680 --> 00:09:41,680
uh particularly if they're just deciding

255
00:09:39,279 --> 00:09:44,399
that okay udav is deprecated you have to

256
00:09:41,680 --> 00:09:44,399
use avdev now

257
00:09:44,959 --> 00:09:50,000
yeah it's not a fun situation to be in

258
00:09:48,839 --> 00:09:52,560
basically

259
00:09:50,000 --> 00:09:53,600
and it's more of an opportunity than a

260
00:09:52,560 --> 00:09:56,959
setback because

261
00:09:53,600 --> 00:09:57,680
it's it allows us to truly differentiate

262
00:09:56,959 --> 00:10:01,760
ourselves

263
00:09:57,680 --> 00:10:04,959
on all sorts of um

264
00:10:01,760 --> 00:10:06,800
use cases because if you have a x11

265
00:10:04,959 --> 00:10:08,560
setup with kde or gnome like the

266
00:10:06,800 --> 00:10:10,000
guy in the previous talk mentioned you

267
00:10:08,560 --> 00:10:11,920
might as well run linux because it's

268
00:10:10,000 --> 00:10:15,200
just exactly the same

269
00:10:11,920 --> 00:10:17,519
um i wanted to develop a complete

270
00:10:15,200 --> 00:10:18,640
bsd specific display server i haven't

271
00:10:17,519 --> 00:10:20,959
really

272
00:10:18,640 --> 00:10:21,680
got too far with that yet but early

273
00:10:20,959 --> 00:10:25,599
stages

274
00:10:21,680 --> 00:10:25,599
we have this

275
00:10:32,560 --> 00:10:36,000
so yeah because we didn't have support

276
00:10:34,480 --> 00:10:38,720
for linux's

277
00:10:36,000 --> 00:10:39,680
input api we i just decided let's make

278
00:10:38,720 --> 00:10:42,959
this use our input

279
00:10:39,680 --> 00:10:46,239
api so again this is a very

280
00:10:42,959 --> 00:10:49,119
old api that's been in an psd kernel for

281
00:10:46,240 --> 00:10:50,560
since the late 90s i think and it also

282
00:10:49,120 --> 00:10:51,680
works around that everything is a file

283
00:10:50,560 --> 00:10:54,640
concept

284
00:10:51,680 --> 00:10:56,719
your keyboard and mouse are just files

285
00:10:54,640 --> 00:10:59,600
that the software opens and it reads

286
00:10:56,720 --> 00:11:01,040
and interprets the scan codes from the

287
00:10:59,600 --> 00:11:03,040
keyboard

288
00:11:01,040 --> 00:11:04,719
and all of the input devices are

289
00:11:03,040 --> 00:11:06,319
multiplexed so if you have

290
00:11:04,720 --> 00:11:08,000
like multiple keyboards plugged in

291
00:11:06,320 --> 00:11:09,279
they'll all be available through one

292
00:11:08,000 --> 00:11:12,480
standard device

293
00:11:09,279 --> 00:11:12,959
but there are additional devices um so

294
00:11:12,480 --> 00:11:16,160
if you

295
00:11:12,959 --> 00:11:16,560
if you want to your laptop's keyboard to

296
00:11:16,160 --> 00:11:18,319
not

297
00:11:16,560 --> 00:11:19,920
be used as usable anymore because it

298
00:11:18,320 --> 00:11:21,120
annoys you or something you have an

299
00:11:19,920 --> 00:11:23,199
external one plugged in

300
00:11:21,120 --> 00:11:25,760
you can just sim link the external

301
00:11:23,200 --> 00:11:27,600
keyboard to the main keyboard device

302
00:11:25,760 --> 00:11:29,839
and i think that's quite cool to be

303
00:11:27,600 --> 00:11:29,839
honest

304
00:11:31,600 --> 00:11:36,640
and most most well and stuff and

305
00:11:34,640 --> 00:11:38,319
even xorg now is using this library

306
00:11:36,640 --> 00:11:38,720
called lib inputs which is developed by

307
00:11:38,320 --> 00:11:41,519
the free

308
00:11:38,720 --> 00:11:42,079
free desktop people it doesn't

309
00:11:41,519 --> 00:11:45,519
understand

310
00:11:42,079 --> 00:11:47,599
our input api at all it's

311
00:11:45,519 --> 00:11:49,600
it seems kind of focused on providing

312
00:11:47,600 --> 00:11:52,959
support for

313
00:11:49,600 --> 00:11:54,839
um the linux input api and we

314
00:11:52,959 --> 00:11:56,000
we were kind of in a tight situation

315
00:11:54,839 --> 00:11:57,760
because

316
00:11:56,000 --> 00:11:59,680
this locks us out of being able to use a

317
00:11:57,760 --> 00:12:02,959
lot of software

318
00:11:59,680 --> 00:12:05,279
um i have to shout out for michael

319
00:12:02,959 --> 00:12:09,119
forney here because

320
00:12:05,279 --> 00:12:11,360
he's been very helpful he developed a

321
00:12:09,120 --> 00:12:12,880
library called simple wayland compositor

322
00:12:11,360 --> 00:12:15,279
or swc

323
00:12:12,880 --> 00:12:17,360
and i took a knife to it i ripped out

324
00:12:15,279 --> 00:12:20,240
all of the input code

325
00:12:17,360 --> 00:12:22,720
i made and added support for netbsd's

326
00:12:20,240 --> 00:12:25,760
input api

327
00:12:22,720 --> 00:12:27,279
it works um

328
00:12:25,760 --> 00:12:29,360
it's fairly well integrated with the

329
00:12:27,279 --> 00:12:30,560
system so it just gets the same keyboard

330
00:12:29,360 --> 00:12:34,160
layout and

331
00:12:30,560 --> 00:12:36,800
mouse settings as the as the um

332
00:12:34,160 --> 00:12:37,680
text console that previously was not a

333
00:12:36,800 --> 00:12:39,120
thing with x

334
00:12:37,680 --> 00:12:40,719
with x you had to set the keyboard loud

335
00:12:39,120 --> 00:12:42,000
separately and that was just infinitely

336
00:12:40,720 --> 00:12:44,639
annoying

337
00:12:42,000 --> 00:12:45,839
and it fits the security promises that

338
00:12:44,639 --> 00:12:49,760
weyland

339
00:12:45,839 --> 00:12:51,440
um promotes you the access to the input

340
00:12:49,760 --> 00:12:52,240
devices is provided through a privileged

341
00:12:51,440 --> 00:12:54,160
process

342
00:12:52,240 --> 00:12:56,320
that privilege process is the only thing

343
00:12:54,160 --> 00:13:00,000
that is has permission to access those

344
00:12:56,320 --> 00:13:00,639
devices once the privileged process is

345
00:13:00,000 --> 00:13:04,000
created

346
00:13:00,639 --> 00:13:05,600
it spawns the actual display server

347
00:13:04,000 --> 00:13:08,320
which then spawns the window manager and

348
00:13:05,600 --> 00:13:10,959
all of those are running unprivileged

349
00:13:08,320 --> 00:13:13,200
um i'm quite happy with this it's it's

350
00:13:10,959 --> 00:13:16,638
cute

351
00:13:13,200 --> 00:13:20,160
um this has taken so much debugging

352
00:13:16,639 --> 00:13:21,760
um i've i've just run into bugs and bugs

353
00:13:20,160 --> 00:13:23,600
and bugs

354
00:13:21,760 --> 00:13:24,959
there are still bugs um if i right click

355
00:13:23,600 --> 00:13:28,079
right now while giving this talk

356
00:13:24,959 --> 00:13:29,518
the display server will crash

357
00:13:28,079 --> 00:13:32,719
i've been kind of kind of worried about

358
00:13:29,519 --> 00:13:35,839
that that's my been my main worry

359
00:13:32,720 --> 00:13:39,440
but it works well enough um i have

360
00:13:35,839 --> 00:13:39,920
working opengl i have working web

361
00:13:39,440 --> 00:13:41,760
browser

362
00:13:39,920 --> 00:13:44,880
this is kind of usable it's kind of like

363
00:13:41,760 --> 00:13:47,439
dwm if any any of you have used dwm

364
00:13:44,880 --> 00:13:48,880
um and yeah you can go ahead and install

365
00:13:47,440 --> 00:13:52,240
this and use it on the pst

366
00:13:48,880 --> 00:13:53,600
right now if you're running nine which i

367
00:13:52,240 --> 00:13:55,120
don't think has been formally released

368
00:13:53,600 --> 00:13:56,399
yet but a lot of us are running it like

369
00:13:55,120 --> 00:14:02,639
it has been formally released yet

370
00:13:56,399 --> 00:14:05,920
because it's basically completely stable

371
00:14:02,639 --> 00:14:09,040
um yeah it's still

372
00:14:05,920 --> 00:14:11,519
quite buggy and unstable

373
00:14:09,040 --> 00:14:12,480
but it meets basic needs which for most

374
00:14:11,519 --> 00:14:14,000
people who are

375
00:14:12,480 --> 00:14:15,600
developers and running weird operating

376
00:14:14,000 --> 00:14:16,800
systems you probably want a few

377
00:14:15,600 --> 00:14:17,760
terminals you probably want a web

378
00:14:16,800 --> 00:14:19,199
browser you want something to play

379
00:14:17,760 --> 00:14:23,279
videos with

380
00:14:19,199 --> 00:14:28,479
that's all available and there's like

381
00:14:23,279 --> 00:14:28,480
say if you want to play some games

382
00:14:28,639 --> 00:14:31,839
this works

383
00:14:50,959 --> 00:14:54,638
so i'm very nervous about closing that

384
00:14:52,880 --> 00:14:56,079
because in my experience when i close

385
00:14:54,639 --> 00:14:58,399
things sometimes it decides to crash

386
00:14:56,079 --> 00:15:01,519
sometimes it doesn't

387
00:14:58,399 --> 00:15:03,600
and you just need a supported intel gpu

388
00:15:01,519 --> 00:15:04,800
really and that's up to kb lake in nine

389
00:15:03,600 --> 00:15:06,560
which isn't that great

390
00:15:04,800 --> 00:15:08,479
um we could be moving things forward

391
00:15:06,560 --> 00:15:10,560
from there i've

392
00:15:08,480 --> 00:15:13,839
experimented with running this on my

393
00:15:10,560 --> 00:15:13,839
radeon desktop

394
00:15:14,880 --> 00:15:21,199
it worked for a few seconds

395
00:15:18,079 --> 00:15:22,800
um that drive is kind of deprecated and

396
00:15:21,199 --> 00:15:23,920
we need to be moving forward with amd

397
00:15:22,800 --> 00:15:26,079
gpu but

398
00:15:23,920 --> 00:15:28,399
again we're relying on porting code from

399
00:15:26,079 --> 00:15:30,239
the linux kernel and this is just hell

400
00:15:28,399 --> 00:15:32,320
nobody wants to be doing this you have

401
00:15:30,240 --> 00:15:35,680
to take months off work to do this

402
00:15:32,320 --> 00:15:39,040
um but you know this laptop's fine

403
00:15:35,680 --> 00:15:40,479
so we have basically a full set of

404
00:15:39,040 --> 00:15:44,319
applications working

405
00:15:40,480 --> 00:15:46,079
webkit gtk um so if you like

406
00:15:44,320 --> 00:15:48,720
if you like web browsers like midori

407
00:15:46,079 --> 00:15:48,719
they run fine

408
00:15:49,040 --> 00:15:54,959
um a lot of netbsd people are weird and

409
00:15:52,160 --> 00:15:57,920
like things like netsurf um and vimby

410
00:15:54,959 --> 00:15:57,920
and those will work too

411
00:15:58,240 --> 00:16:02,079
and most of xfce works but obviously not

412
00:16:01,040 --> 00:16:08,719
the full thing because

413
00:16:02,079 --> 00:16:11,199
xxc relies on x11 for a lot of the um

414
00:16:08,720 --> 00:16:12,880
well a lot of it's um window management

415
00:16:11,199 --> 00:16:15,599
functions and so on

416
00:16:12,880 --> 00:16:18,720
so and qt5 uh i haven't tried much of

417
00:16:15,600 --> 00:16:20,720
kde because we don't have much of kde

418
00:16:18,720 --> 00:16:22,560
i've been working on getting us up to to

419
00:16:20,720 --> 00:16:23,600
scratch with some gnome-free stuff but

420
00:16:22,560 --> 00:16:24,800
it's not really one that's what i want

421
00:16:23,600 --> 00:16:27,279
to spend my life doing i don't care

422
00:16:24,800 --> 00:16:27,279
about gnome

423
00:16:27,360 --> 00:16:31,759
um and sdl-2 which is the most important

424
00:16:30,480 --> 00:16:33,040
thing for me because it means you can

425
00:16:31,759 --> 00:16:35,040
play dungeon across stone stone

426
00:16:33,040 --> 00:16:37,839
stone soup i mean what else do you need

427
00:16:35,040 --> 00:16:37,839
a computer for right

428
00:16:38,970 --> 00:16:46,240
[Music]

429
00:16:41,440 --> 00:16:49,360
and what doesn't work is a lot of things

430
00:16:46,240 --> 00:16:52,639
um any x11 application is

431
00:16:49,360 --> 00:16:55,440
kind of stuck right now

432
00:16:52,639 --> 00:16:57,199
because we need the glamour excellent um

433
00:16:55,440 --> 00:16:58,079
driver system we kind of don't i've kind

434
00:16:57,199 --> 00:16:59,599
of been hoping

435
00:16:58,079 --> 00:17:02,079
someone else will do that so i don't

436
00:16:59,600 --> 00:17:03,600
have to i'm looking at someone specific

437
00:17:02,079 --> 00:17:07,520
in the audience

438
00:17:03,600 --> 00:17:10,000
um and

439
00:17:07,520 --> 00:17:10,959
screen locking and screen brightness

440
00:17:10,000 --> 00:17:12,400
through xorg you

441
00:17:10,959 --> 00:17:15,679
generally handle this with a program

442
00:17:12,400 --> 00:17:17,360
like s-lock or um

443
00:17:15,679 --> 00:17:19,360
or x-lock or anything else that you

444
00:17:17,359 --> 00:17:20,079
might like to like a screen saver

445
00:17:19,359 --> 00:17:22,159
program but

446
00:17:20,079 --> 00:17:23,520
um with weyland it's not really a

447
00:17:22,160 --> 00:17:25,120
standardized part of the protocol i

448
00:17:23,520 --> 00:17:26,480
believe so it'll have to be integrated

449
00:17:25,119 --> 00:17:28,879
into the display server

450
00:17:26,480 --> 00:17:30,720
i do not agree with a lot of these

451
00:17:28,880 --> 00:17:31,360
design decisions that involve a lot of

452
00:17:30,720 --> 00:17:32,960
things being

453
00:17:31,360 --> 00:17:34,399
integrated into the display server i

454
00:17:32,960 --> 00:17:36,720
think it means that we're gonna have to

455
00:17:34,400 --> 00:17:38,960
end up redoing lots of work

456
00:17:36,720 --> 00:17:39,919
um maybe it'll be worth it in the end i

457
00:17:38,960 --> 00:17:44,640
don't know

458
00:17:39,919 --> 00:17:46,400
but this is the general model that um

459
00:17:44,640 --> 00:17:49,840
people have decided to go down we're

460
00:17:46,400 --> 00:17:53,520
kind of moving away from modularity and

461
00:17:49,840 --> 00:17:55,760
integrating things into the server more

462
00:17:53,520 --> 00:17:56,879
and screen brightness this is actually a

463
00:17:55,760 --> 00:17:58,400
problem with my thinkpad that i've been

464
00:17:56,880 --> 00:18:01,760
working on

465
00:17:58,400 --> 00:18:03,039
um we need a centralized way to manage

466
00:18:01,760 --> 00:18:05,039
screen brightness because

467
00:18:03,039 --> 00:18:06,320
you usually you rely on x-rander for

468
00:18:05,039 --> 00:18:07,600
that and um

469
00:18:06,320 --> 00:18:09,439
if you're running wayland obviously you

470
00:18:07,600 --> 00:18:12,480
don't have x-rander

471
00:18:09,440 --> 00:18:14,400
um and again psd people are weird and

472
00:18:12,480 --> 00:18:17,520
they like to do things like run a web

473
00:18:14,400 --> 00:18:17,520
browser in the frame buffer

474
00:18:17,760 --> 00:18:22,640
or run ml term in the frame buffer so

475
00:18:21,360 --> 00:18:24,000
if you want to run frame buffer

476
00:18:22,640 --> 00:18:25,360
applications we should be able to do

477
00:18:24,000 --> 00:18:27,600
that with them too

478
00:18:25,360 --> 00:18:28,879
and firefox is a whole can of worms

479
00:18:27,600 --> 00:18:32,080
because

480
00:18:28,880 --> 00:18:35,360
it's using a lot of weird weird um

481
00:18:32,080 --> 00:18:37,840
apis and functionality and it's

482
00:18:35,360 --> 00:18:40,840
i can try to run it and give an example

483
00:18:37,840 --> 00:18:42,399
of that since apparently i have tons of

484
00:18:40,840 --> 00:18:44,639
time

485
00:18:42,400 --> 00:18:44,640
um

486
00:18:48,880 --> 00:18:55,039
okay so that's one problem i believe

487
00:18:52,720 --> 00:18:55,039
um

488
00:18:55,760 --> 00:18:58,559
okay let's look at my own documentation

489
00:18:57,360 --> 00:19:00,959
i'm sure i've written written about how

490
00:18:58,559 --> 00:19:04,160
to do this

491
00:19:00,960 --> 00:19:07,679
um the environment

492
00:19:04,160 --> 00:19:11,840
yeah marks underscore enable

493
00:19:07,679 --> 00:19:11,840
equals one yeah that sounds about right

494
00:19:14,080 --> 00:19:17,199
yeah pretty much

495
00:19:18,400 --> 00:19:20,880
pretty much

496
00:19:23,280 --> 00:19:27,280
i'm not using zfs

497
00:19:31,440 --> 00:19:36,840
um i i don't think

498
00:19:35,039 --> 00:19:38,480
hardware acceleration even works in

499
00:19:36,840 --> 00:19:39,840
firefox

500
00:19:38,480 --> 00:19:43,679
i don't think i have to worry about it

501
00:19:39,840 --> 00:19:43,678
being turned on um

502
00:19:44,320 --> 00:19:48,799
yeah pretty much i wasn't expecting to

503
00:19:46,080 --> 00:19:48,799
finish this quickly

504
00:19:49,919 --> 00:19:54,720
okay does anyone have any questions

505
00:19:51,919 --> 00:19:54,720
anyone wants uh

506
00:19:55,520 --> 00:20:03,840
dpi high dpi high dpi support

507
00:19:59,600 --> 00:20:07,360
technically this laptop is kind of um

508
00:20:03,840 --> 00:20:07,360
everything's a bit small but

509
00:20:07,760 --> 00:20:12,080
i have something i have some

510
00:20:08,640 --> 00:20:12,080
documentation that i can bring up

511
00:20:12,480 --> 00:20:14,720
say

512
00:20:18,559 --> 00:20:21,760
i have a repository on github called

513
00:20:20,400 --> 00:20:23,440
package source wayland if you want to

514
00:20:21,760 --> 00:20:24,480
have a look at that and it describes a

515
00:20:23,440 --> 00:20:27,679
lot of um

516
00:20:24,480 --> 00:20:28,080
settings that you can tweak um yeah see

517
00:20:27,679 --> 00:20:30,320
i've

518
00:20:28,080 --> 00:20:31,120
documented how to run firefox here and

519
00:20:30,320 --> 00:20:34,960
probably forgotten

520
00:20:31,120 --> 00:20:35,918
how to do it um if you have a high dps

521
00:20:34,960 --> 00:20:37,039
screen you can just use these

522
00:20:35,919 --> 00:20:38,240
environment variables and that will

523
00:20:37,039 --> 00:20:42,320
scale individual

524
00:20:38,240 --> 00:20:45,600
qt and gtk applications

525
00:20:42,320 --> 00:20:47,039
and that's currently not how we're

526
00:20:45,600 --> 00:20:50,799
supposed to be doing it i think

527
00:20:47,039 --> 00:20:52,960
there's some kind of uh protocol

528
00:20:50,799 --> 00:20:54,400
by which you negotiate a higher dpi

529
00:20:52,960 --> 00:20:55,440
display but it has to be handled by the

530
00:20:54,400 --> 00:20:57,679
display server and

531
00:20:55,440 --> 00:20:58,640
i'm i have honestly no idea how that

532
00:20:57,679 --> 00:21:01,200
works

533
00:20:58,640 --> 00:21:04,320
it's something i need to investigate um

534
00:21:01,200 --> 00:21:04,320
i'm just kind of sitting here

535
00:21:04,960 --> 00:21:09,919
debugging rayland protocol code is hell

536
00:21:08,559 --> 00:21:12,720
i would not want anyone to be put

537
00:21:09,919 --> 00:21:15,600
through this like i spent months just

538
00:21:12,720 --> 00:21:16,000
inserting printfs into random parts of

539
00:21:15,600 --> 00:21:18,639
the

540
00:21:16,000 --> 00:21:20,159
networking code that's doing this awful

541
00:21:18,640 --> 00:21:22,880
shared memory stuff

542
00:21:20,159 --> 00:21:24,480
um crashing constantly and just

543
00:21:22,880 --> 00:21:27,679
generally not working

544
00:21:24,480 --> 00:21:30,000
but i found that what the

545
00:21:27,679 --> 00:21:32,960
best way to debug and code is just to

546
00:21:30,000 --> 00:21:32,960
 rewrite it

547
00:21:33,840 --> 00:21:37,760
um any other questions

548
00:21:40,559 --> 00:21:44,158
so i'm not part of the illumina people i

549
00:21:42,400 --> 00:21:54,400
just i just think they're really cool

550
00:21:44,159 --> 00:21:56,840
yeah okay

551
00:21:54,400 --> 00:21:59,840
they suffer from many of the same

552
00:21:56,840 --> 00:21:59,840
problems

553
00:22:00,240 --> 00:22:07,120
lack of acceptance of upstream

554
00:22:04,320 --> 00:22:08,080
lack of manpower many different things

555
00:22:07,120 --> 00:22:09,360
to do at once

556
00:22:08,080 --> 00:22:12,960
yeah have you checked with the open

557
00:22:09,360 --> 00:22:12,959
indiana people maybe you can prepare

558
00:22:19,280 --> 00:22:24,799
um about a year ago and we were just

559
00:22:22,480 --> 00:22:26,000
we were just discussing um the solaris

560
00:22:24,799 --> 00:22:28,960
audio api since it came

561
00:22:26,000 --> 00:22:28,960
up and

562
00:22:29,120 --> 00:22:32,320
we have a lot of extensions to the

563
00:22:31,360 --> 00:22:33,520
solaris api

564
00:22:32,320 --> 00:22:36,480
and we were discussing getting them

565
00:22:33,520 --> 00:22:38,400
merged in to um elumos just

566
00:22:36,480 --> 00:22:40,559
so that more functionality is available

567
00:22:38,400 --> 00:22:43,600
like proper device selection

568
00:22:40,559 --> 00:22:45,440
with uh easily printable names

569
00:22:43,600 --> 00:22:46,879
that would be really nice to have across

570
00:22:45,440 --> 00:22:48,159
everything that is still sharing this

571
00:22:46,880 --> 00:22:50,720
api

572
00:22:48,159 --> 00:22:52,159
i think um i haven't discussed with them

573
00:22:50,720 --> 00:22:53,360
much other stuff because whenever i talk

574
00:22:52,159 --> 00:22:55,120
to them about desktop support they're

575
00:22:53,360 --> 00:22:56,240
like yeah i might know a guy who has a

576
00:22:55,120 --> 00:22:57,760
laptop but he needs

577
00:22:56,240 --> 00:23:03,600
three other laptops because half the

578
00:22:57,760 --> 00:23:05,280
hardware isn't supported

579
00:23:03,600 --> 00:23:09,840
because i think you're doing very very

580
00:23:05,280 --> 00:23:09,840
good work yeah

581
00:23:11,280 --> 00:23:15,039
yeah so maybe you should try and find

582
00:23:13,280 --> 00:23:16,960
the open indiana people

583
00:23:15,039 --> 00:23:18,559
because that's the only distribution of

584
00:23:16,960 --> 00:23:21,760
rooms that has a desktop in here

585
00:23:18,559 --> 00:23:23,360
for graphics and firefox and firefox

586
00:23:21,760 --> 00:23:23,840
actually playing audio and all of these

587
00:23:23,360 --> 00:23:25,520
things

588
00:23:23,840 --> 00:23:26,959
i mean i care about these things for

589
00:23:25,520 --> 00:23:28,559
entirely selfish reasons

590
00:23:26,960 --> 00:23:34,080
i have a laptop if i wanted to run an

591
00:23:28,559 --> 00:23:34,080
psd i wanted to run that psd well

592
00:23:34,840 --> 00:23:39,840
um yeah

593
00:23:37,440 --> 00:23:40,960
sure but i've i've been putting in

594
00:23:39,840 --> 00:23:43,120
effort to make sure

595
00:23:40,960 --> 00:23:44,960
if i write code that is using an api

596
00:23:43,120 --> 00:23:46,239
that is shared with solar site

597
00:23:44,960 --> 00:23:49,039
make an effort to read the lumos

598
00:23:46,240 --> 00:23:51,200
documentation and just

599
00:23:49,039 --> 00:24:01,279
kind of hope that it works i can't test

600
00:23:51,200 --> 00:24:04,559
it myself i just hope that it works

601
00:24:01,279 --> 00:24:07,360
framework can you repeat the question

602
00:24:04,559 --> 00:24:08,480
sorry yeah no i mean nia can you repeat

603
00:24:07,360 --> 00:24:09,600
the question for the people on the

604
00:24:08,480 --> 00:24:12,559
screen oh um

605
00:24:09,600 --> 00:24:15,840
yeah i'm i'm sorry so you said is there

606
00:24:12,559 --> 00:24:15,840
any sd specific

607
00:24:17,360 --> 00:24:21,600
i i don't i don't know honestly as far

608
00:24:19,520 --> 00:24:23,039
as i know wscons originated

609
00:24:21,600 --> 00:24:25,279
in fbsd and that's the only

610
00:24:23,039 --> 00:24:27,520
documentation i've been consulting

611
00:24:25,279 --> 00:24:27,520
um

612
00:24:28,559 --> 00:24:32,000
if people want support things that i've

613
00:24:31,600 --> 00:24:34,000
been

614
00:24:32,000 --> 00:24:35,679
working on i would advise them to do it

615
00:24:34,000 --> 00:24:39,039
the way i've done and just

616
00:24:35,679 --> 00:24:40,640
create a new file write your code try to

617
00:24:39,039 --> 00:24:43,200
integrate it with the existing system

618
00:24:40,640 --> 00:24:44,159
try to make it modular just this is

619
00:24:43,200 --> 00:24:45,440
there's

620
00:24:44,159 --> 00:24:47,520
there's good and bad ways to do

621
00:24:45,440 --> 00:24:49,200
portability and i think part of the

622
00:24:47,520 --> 00:24:51,039
problem why people are so put off

623
00:24:49,200 --> 00:24:53,279
supporting bsd is they just think oh i'm

624
00:24:51,039 --> 00:24:55,760
gonna have to have a load of if def

625
00:24:53,279 --> 00:24:57,679
craps in my code base and that shouldn't

626
00:24:55,760 --> 00:25:00,320
be the case you should be able to have

627
00:24:57,679 --> 00:25:01,760
um modular support for things like this

628
00:25:00,320 --> 00:25:04,399
and keep it nice and clean and keep it

629
00:25:01,760 --> 00:25:04,400
nice and separate

630
00:25:08,559 --> 00:25:15,840
anything else savann

631
00:25:12,840 --> 00:25:15,840
um

632
00:25:20,320 --> 00:25:26,000
um so screensavers

633
00:25:23,440 --> 00:25:28,960
if you actually want to deny inputs to

634
00:25:26,000 --> 00:25:30,640
the rest of the system

635
00:25:28,960 --> 00:25:32,000
an individual wayland application cannot

636
00:25:30,640 --> 00:25:34,960
do that

637
00:25:32,000 --> 00:25:35,760
it cannot get complete um sole control

638
00:25:34,960 --> 00:25:39,200
over

639
00:25:35,760 --> 00:25:40,720
whether inputs or input is passed to

640
00:25:39,200 --> 00:25:42,480
other applications because

641
00:25:40,720 --> 00:25:44,400
that was like a conscious security

642
00:25:42,480 --> 00:25:46,000
decision they made but they also

643
00:25:44,400 --> 00:25:47,679
haven't developed a real protocol for

644
00:25:46,000 --> 00:25:49,600
handling this i don't believe

645
00:25:47,679 --> 00:25:51,520
so you can have you can have a

646
00:25:49,600 --> 00:25:53,600
screensaver but all it will do is

647
00:25:51,520 --> 00:25:55,200
stop your crt from burning in it won't

648
00:25:53,600 --> 00:25:57,600
provide any kind of

649
00:25:55,200 --> 00:25:59,600
security from people taking your laptop

650
00:25:57,600 --> 00:26:04,320
and posting silly messages on irc

651
00:25:59,600 --> 00:26:04,320
which i'm sure never happened to me

652
00:26:04,960 --> 00:26:11,840
like that's my main use for screen

653
00:26:06,799 --> 00:26:11,840
locking personally

654
00:26:19,520 --> 00:26:25,279
so basically the idea is that everything

655
00:26:22,640 --> 00:26:27,279
is becoming increasingly platformized

656
00:26:25,279 --> 00:26:28,320
um you might have got that hint from the

657
00:26:27,279 --> 00:26:32,159
previous talk

658
00:26:28,320 --> 00:26:33,200
um game and kde have gone in a direction

659
00:26:32,159 --> 00:26:35,760
where everything

660
00:26:33,200 --> 00:26:37,440
is becoming increasingly integrated and

661
00:26:35,760 --> 00:26:38,960
part of the whole system

662
00:26:37,440 --> 00:26:41,520
that's not really something that

663
00:26:38,960 --> 00:26:43,840
interests me as someone who likes like

664
00:26:41,520 --> 00:26:45,679
lightweight uh window managers and

665
00:26:43,840 --> 00:26:48,959
things like that

666
00:26:45,679 --> 00:26:53,840
um so and

667
00:26:48,960 --> 00:26:53,840
yeah i don't want to deal with that mess

668
00:26:55,760 --> 00:27:00,000
not particularly um very much related to

669
00:26:58,640 --> 00:27:01,520
the talking itself but

670
00:27:00,000 --> 00:27:03,919
this is the first thing i heard about

671
00:27:01,520 --> 00:27:05,679
deprecation of excel within

672
00:27:03,919 --> 00:27:07,600
red hat enterprise or red head in

673
00:27:05,679 --> 00:27:10,080
general yeah

674
00:27:07,600 --> 00:27:11,039
i also like like dwm and all the smaller

675
00:27:10,080 --> 00:27:12,559
ones

676
00:27:11,039 --> 00:27:15,200
particularly x monad but there are a lot

677
00:27:12,559 --> 00:27:17,120
of these which aren't going to be

678
00:27:15,200 --> 00:27:20,480
able to be bordered to weyland isn't

679
00:27:17,120 --> 00:27:20,479
that also a problem

680
00:27:20,880 --> 00:27:24,640
i mean yeah it's something that people

681
00:27:22,240 --> 00:27:26,080
are mad about um it shouldn't affect you

682
00:27:24,640 --> 00:27:28,880
if you're unless you use red hat

683
00:27:26,080 --> 00:27:30,158
really most of the exhaust maintain

684
00:27:28,880 --> 00:27:32,720
maintenance is

685
00:27:30,159 --> 00:27:34,000
actually done these days by alan cooper

686
00:27:32,720 --> 00:27:37,039
smith who works at oracle

687
00:27:34,000 --> 00:27:37,760
on solaris i imagine he'll keep doing

688
00:27:37,039 --> 00:27:40,000
that for

689
00:27:37,760 --> 00:27:41,360
the time being and at least until oracle

690
00:27:40,000 --> 00:27:43,760
discovers where he's hiding in the

691
00:27:41,360 --> 00:27:43,760
basement

692
00:27:46,080 --> 00:27:49,039
please don't forget to repeat the

693
00:27:47,520 --> 00:27:52,240
question for the people in the streaming

694
00:27:49,039 --> 00:27:52,240
and yeah they have no idea

695
00:27:52,559 --> 00:28:00,240
yeah thanks sorry um that's just about

696
00:27:56,480 --> 00:28:01,190
um the fate of lightweight minimum

697
00:28:00,240 --> 00:28:04,529
window managers if

698
00:28:01,190 --> 00:28:04,529
[Music]

699
00:28:15,120 --> 00:28:18,158
small enough to just be rewritten well

700
00:28:17,840 --> 00:28:20,240
no

701
00:28:18,159 --> 00:28:22,080
because you have to do a lot more to

702
00:28:20,240 --> 00:28:25,279
write a whale and compels a compositor

703
00:28:22,080 --> 00:28:26,799
you have to implement a lot um you do

704
00:28:25,279 --> 00:28:28,399
more a lot whalen composers do a lot

705
00:28:26,799 --> 00:28:32,158
more than just manage windows

706
00:28:28,399 --> 00:28:33,678
i'm kind of going into the next person's

707
00:28:32,159 --> 00:28:35,600
talk who's they're going to talk about

708
00:28:33,679 --> 00:28:37,919
that for a bit and um i don't really

709
00:28:35,600 --> 00:28:40,559
want to tread on

710
00:28:37,919 --> 00:28:42,159
so it's not so simple as you can just

711
00:28:40,559 --> 00:28:43,760
rewrite a simple lightweight window

712
00:28:42,159 --> 00:28:44,000
manager to use weyland you're going to

713
00:28:43,760 --> 00:28:46,960
have

714
00:28:44,000 --> 00:28:49,520
to figure out how it's going to manage

715
00:28:46,960 --> 00:28:49,520
the screens

716
00:28:50,720 --> 00:28:55,200
manage all the accelerated windows and

717
00:28:53,600 --> 00:28:55,840
manage your blitzing and things like

718
00:28:55,200 --> 00:28:58,480
that and

719
00:28:55,840 --> 00:28:59,918
input output it's going to need to

720
00:28:58,480 --> 00:29:01,039
support multiple os's

721
00:28:59,919 --> 00:29:03,200
you're going to need to figure out how

722
00:29:01,039 --> 00:29:05,520
you're going to do that and

723
00:29:03,200 --> 00:29:06,799
the solution that people her that is

724
00:29:05,520 --> 00:29:08,480
increasingly emerging is there's

725
00:29:06,799 --> 00:29:11,520
libraries like swc that

726
00:29:08,480 --> 00:29:13,760
uh allow you to do less work

727
00:29:11,520 --> 00:29:16,480
but we're still going to have to improve

728
00:29:13,760 --> 00:29:18,879
those if we want to

729
00:29:16,480 --> 00:29:21,200
keep this kind of system usable moving

730
00:29:18,880 --> 00:29:21,200
forward

731
00:29:23,760 --> 00:29:27,840
yeah anything else

732
00:29:30,799 --> 00:29:41,840
okay well thank you

733
00:29:48,000 --> 00:29:52,000
oh yeah um thanks to all the shock

734
00:29:50,720 --> 00:29:53,919
people and the

735
00:29:52,000 --> 00:29:55,600
girls who showed up to listen to my talk

736
00:29:53,919 --> 00:30:04,399
for emotional support i appreciate it

737
00:29:55,600 --> 00:30:04,399
very much

