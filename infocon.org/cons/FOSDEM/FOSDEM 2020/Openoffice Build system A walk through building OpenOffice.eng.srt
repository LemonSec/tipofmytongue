1
00:00:05,600 --> 00:00:12,160
time to start yeah

2
00:00:08,400 --> 00:00:15,920
welcome to our developer

3
00:00:12,160 --> 00:00:17,359
developers room for office systems i

4
00:00:15,920 --> 00:00:20,480
don't know their

5
00:00:17,359 --> 00:00:20,480
true name but

6
00:00:20,800 --> 00:00:27,840
yeah open document editors yeah so

7
00:00:24,160 --> 00:00:28,480
um and i will have a small talk about

8
00:00:27,840 --> 00:00:31,359
building off

9
00:00:28,480 --> 00:00:33,040
open office our build system how it

10
00:00:31,359 --> 00:00:36,399
works and so on

11
00:00:33,040 --> 00:00:40,000
um the

12
00:00:36,399 --> 00:00:40,800
reason for it is i get asked on the

13
00:00:40,000 --> 00:00:44,000
recruitment

14
00:00:40,800 --> 00:00:46,480
channels often how do or i

15
00:00:44,000 --> 00:00:48,239
want to contribute and then i say okay

16
00:00:46,480 --> 00:00:49,519
build open office and then i don't get

17
00:00:48,239 --> 00:00:53,680
an answer

18
00:00:49,520 --> 00:00:57,199
so i hope that with this

19
00:00:53,680 --> 00:01:00,399
talk um i can help people

20
00:00:57,199 --> 00:01:03,760
a little bit more to

21
00:01:00,399 --> 00:01:06,799
to get over this hurdle

22
00:01:03,760 --> 00:01:10,158
yeah so

23
00:01:06,799 --> 00:01:13,760
my name is peter and i'm

24
00:01:10,159 --> 00:01:17,119
i'm usually using the nickname petco

25
00:01:13,760 --> 00:01:20,880
i joined in 2016 the open office project

26
00:01:17,119 --> 00:01:23,040
from apache and i was the chairman 2018

27
00:01:20,880 --> 00:01:25,360
and 2019.

28
00:01:23,040 --> 00:01:27,520
yeah that's what you need to know about

29
00:01:25,360 --> 00:01:30,400
me and what i do in the project or what

30
00:01:27,520 --> 00:01:34,640
i did so far in the project

31
00:01:30,400 --> 00:01:39,439
yeah okay like i said

32
00:01:34,640 --> 00:01:39,439
the goal of this talk it's um

33
00:01:39,680 --> 00:01:42,799
i won't give you an overview i do not

34
00:01:41,600 --> 00:01:46,079
want to go

35
00:01:42,799 --> 00:01:46,960
really deep inside depth i don't i will

36
00:01:46,079 --> 00:01:49,759
not

37
00:01:46,960 --> 00:01:51,360
go so much into the differences between

38
00:01:49,759 --> 00:01:54,399
windows mac

39
00:01:51,360 --> 00:01:55,520
so it's more about principles what you

40
00:01:54,399 --> 00:01:59,680
need to know and

41
00:01:55,520 --> 00:02:02,880
the understanding yeah

42
00:01:59,680 --> 00:02:06,399
um and i will talk a little bit

43
00:02:02,880 --> 00:02:08,239
where what i picked up

44
00:02:06,399 --> 00:02:11,038
where we were going with the build

45
00:02:08,239 --> 00:02:15,599
system how it's changing

46
00:02:11,038 --> 00:02:18,480
maybe we work on this from time to time

47
00:02:15,599 --> 00:02:18,480
and yeah

48
00:02:19,280 --> 00:02:24,400
so if anyone is interested in building

49
00:02:22,879 --> 00:02:27,440
open office

50
00:02:24,400 --> 00:02:30,560
we have written two guides

51
00:02:27,440 --> 00:02:34,160
one with general information

52
00:02:30,560 --> 00:02:37,120
where we explain a lot um

53
00:02:34,160 --> 00:02:37,920
how these options is what does it mean

54
00:02:37,120 --> 00:02:40,560
and so on

55
00:02:37,920 --> 00:02:43,119
central stem things and if you have an

56
00:02:40,560 --> 00:02:46,480
os and you want specifically built on

57
00:02:43,120 --> 00:02:49,680
for one for for your system

58
00:02:46,480 --> 00:02:53,440
then we have an ms page where you

59
00:02:49,680 --> 00:02:56,080
on detail get explained from windows or

60
00:02:53,440 --> 00:02:58,879
linux even break down on certain

61
00:02:56,080 --> 00:02:58,879
distributions

62
00:02:59,120 --> 00:03:03,440
i can only recommend if you download the

63
00:03:01,680 --> 00:03:06,239
presentation

64
00:03:03,440 --> 00:03:07,519
or use the links the presentation is

65
00:03:06,239 --> 00:03:10,959
only in helper

66
00:03:07,519 --> 00:03:15,519
and giving you some guidance

67
00:03:10,959 --> 00:03:19,040
you know so when we build open office

68
00:03:15,519 --> 00:03:24,480
we have let's say different phases

69
00:03:19,040 --> 00:03:24,480
you know where we built

70
00:03:24,720 --> 00:03:28,879
which you have to follow in order to get

71
00:03:27,120 --> 00:03:31,360
a successful build

72
00:03:28,879 --> 00:03:32,720
first you set up your environment that

73
00:03:31,360 --> 00:03:36,159
means you prepare

74
00:03:32,720 --> 00:03:38,159
you have to install the dependencies

75
00:03:36,159 --> 00:03:42,000
that the building environment needs

76
00:03:38,159 --> 00:03:45,519
to get working then

77
00:03:42,000 --> 00:03:48,799
we have to do a configure that

78
00:03:45,519 --> 00:03:51,120
the build system knows what do you want

79
00:03:48,799 --> 00:03:54,239
to build

80
00:03:51,120 --> 00:03:57,210
the third is bootstrapping then we pull

81
00:03:54,239 --> 00:03:58,720
in the dependencies that

82
00:03:57,210 --> 00:04:02,159
[Music]

83
00:03:58,720 --> 00:04:05,280
we need for building the code yeah

84
00:04:02,159 --> 00:04:07,599
even if you say if you pick

85
00:04:05,280 --> 00:04:08,799
the choice that you go on system

86
00:04:07,599 --> 00:04:11,200
libraries

87
00:04:08,799 --> 00:04:12,840
which where you have probably to do some

88
00:04:11,200 --> 00:04:16,478
adjustments

89
00:04:12,840 --> 00:04:20,399
but um our

90
00:04:16,478 --> 00:04:25,758
our build environment is set up so it's

91
00:04:20,399 --> 00:04:29,280
generally working and so you have um

92
00:04:25,759 --> 00:04:32,400
so you so we pull in all dependencies

93
00:04:29,280 --> 00:04:37,198
and we provide all the dependencies

94
00:04:32,400 --> 00:04:41,440
from from our resources ourselves so

95
00:04:37,199 --> 00:04:43,680
if you build open office plane

96
00:04:41,440 --> 00:04:45,360
then you will provided all dependencies

97
00:04:43,680 --> 00:04:47,600
in the right versions that there is

98
00:04:45,360 --> 00:04:48,880
if you use if you want to use the system

99
00:04:47,600 --> 00:04:53,040
libraries

100
00:04:48,880 --> 00:04:55,840
you will have to tweak around probably

101
00:04:53,040 --> 00:04:56,960
um yeah and the last thing is to build

102
00:04:55,840 --> 00:05:00,560
open office

103
00:04:56,960 --> 00:05:02,719
yeah building commands and so on

104
00:05:00,560 --> 00:05:02,720
so

105
00:05:04,479 --> 00:05:08,840
the build environment needs a working

106
00:05:08,000 --> 00:05:11,680
power

107
00:05:08,840 --> 00:05:14,799
version

108
00:05:11,680 --> 00:05:18,240
and for for the java stuff

109
00:05:14,800 --> 00:05:21,759
and java of course we have gpav

110
00:05:18,240 --> 00:05:25,680
for google for performance test

111
00:05:21,759 --> 00:05:28,880
you need this union win rack dll for

112
00:05:25,680 --> 00:05:32,639
bidding at least i did not know how to

113
00:05:28,880 --> 00:05:36,240
circumvent this did you

114
00:05:32,639 --> 00:05:36,240
sdk yeah

115
00:05:36,479 --> 00:05:40,960
okay i i get always compli um complaints

116
00:05:39,759 --> 00:05:44,880
from the

117
00:05:40,960 --> 00:05:46,719
um but maybe if you if you say without

118
00:05:44,880 --> 00:05:50,000
sdk then it will

119
00:05:46,720 --> 00:05:54,479
not um you will not

120
00:05:50,000 --> 00:05:58,000
be requested to set it up

121
00:05:54,479 --> 00:06:00,960
if you build on windows you will need

122
00:05:58,000 --> 00:06:02,080
additional tools the material bit tool

123
00:06:00,960 --> 00:06:05,198
for example and the

124
00:06:02,080 --> 00:06:07,840
microsoft sdk on mac

125
00:06:05,199 --> 00:06:09,520
you will also need some special uh the

126
00:06:07,840 --> 00:06:12,960
sdk formula for mac

127
00:06:09,520 --> 00:06:15,120
i'm not sure which version thought then

128
00:06:12,960 --> 00:06:16,159
in doubt if you if you have questions

129
00:06:15,120 --> 00:06:20,400
when you're trying it

130
00:06:16,160 --> 00:06:23,440
ask on the dev we help you look it up

131
00:06:20,400 --> 00:06:26,880
you get the answers you need you know

132
00:06:23,440 --> 00:06:30,080
so if you have installed everything

133
00:06:26,880 --> 00:06:32,560
and you're prepared to build

134
00:06:30,080 --> 00:06:32,560
then

135
00:06:33,759 --> 00:06:36,800
you can go to the next level and you

136
00:06:36,319 --> 00:06:40,160
have to

137
00:06:36,800 --> 00:06:43,600
know a little bit how

138
00:06:40,160 --> 00:06:46,080
how where we store some stuff so

139
00:06:43,600 --> 00:06:47,039
in the x libraries and in the x sources

140
00:06:46,080 --> 00:06:50,800
we have

141
00:06:47,039 --> 00:06:53,680
we will store our dependencies yeah

142
00:06:50,800 --> 00:06:53,680
so um

143
00:06:55,680 --> 00:07:02,000
the the inst

144
00:06:58,800 --> 00:07:05,360
set native

145
00:07:02,000 --> 00:07:07,919
folder is where we build

146
00:07:05,360 --> 00:07:09,440
openoffice or so this is the home folder

147
00:07:07,919 --> 00:07:11,198
of the build

148
00:07:09,440 --> 00:07:12,479
there we will start the build scripts

149
00:07:11,199 --> 00:07:15,599
from

150
00:07:12,479 --> 00:07:16,479
and it will always also provide a

151
00:07:15,599 --> 00:07:19,759
default

152
00:07:16,479 --> 00:07:22,159
to build in this folder yeah

153
00:07:19,759 --> 00:07:24,080
and there is a test where the test

154
00:07:22,160 --> 00:07:27,199
framework is

155
00:07:24,080 --> 00:07:30,080
i cannot yeah

156
00:07:27,199 --> 00:07:31,599
i just took this test stuff from the

157
00:07:30,080 --> 00:07:36,318
website so i don't know

158
00:07:31,599 --> 00:07:40,479
exactly how this stuff works

159
00:07:36,319 --> 00:07:41,919
um yeah then we have set up our

160
00:07:40,479 --> 00:07:44,000
environment we know where the

161
00:07:41,919 --> 00:07:46,960
dependencies goes and

162
00:07:44,000 --> 00:07:48,080
so on and then we want to configure our

163
00:07:46,960 --> 00:07:51,758
system yeah

164
00:07:48,080 --> 00:07:54,800
so we use autoconfig autoconf

165
00:07:51,759 --> 00:07:59,840
or and then configure

166
00:07:54,800 --> 00:07:59,840
for doing this like in most

167
00:08:00,800 --> 00:08:09,120
like in most linux or open source

168
00:08:05,440 --> 00:08:12,879
projects but

169
00:08:09,120 --> 00:08:16,400
for the starters you need to to say some

170
00:08:12,879 --> 00:08:18,319
some you you have to switch some some

171
00:08:16,400 --> 00:08:20,878
switches you have to give that

172
00:08:18,319 --> 00:08:22,560
and my recommendation is you can go on

173
00:08:20,879 --> 00:08:25,360
the cv key

174
00:08:22,560 --> 00:08:27,680
and where we have layout with some

175
00:08:25,360 --> 00:08:32,080
examples where you can start or you can

176
00:08:27,680 --> 00:08:34,479
use the build bots we have some bit bots

177
00:08:32,080 --> 00:08:35,360
that run every day and you can start

178
00:08:34,479 --> 00:08:38,080
with their

179
00:08:35,360 --> 00:08:38,959
configuration and with their links and

180
00:08:38,080 --> 00:08:43,919
so on

181
00:08:38,958 --> 00:08:48,000
we will look then

182
00:08:43,919 --> 00:08:50,560
what's uh we will take a short look

183
00:08:48,000 --> 00:08:52,959
what what the important switches is and

184
00:08:50,560 --> 00:08:56,079
there are some more and

185
00:08:52,959 --> 00:08:56,399
you can have the look for example this

186
00:08:56,080 --> 00:09:00,880
is

187
00:08:56,399 --> 00:09:04,480
most uh the most central one

188
00:09:00,880 --> 00:09:06,640
um we have we have lavender autoconf

189
00:09:04,480 --> 00:09:08,320
then you start with dot configure

190
00:09:06,640 --> 00:09:11,360
then you have the first switch you will

191
00:09:08,320 --> 00:09:14,720
always need with d-mag we still

192
00:09:11,360 --> 00:09:17,200
use the old d-mag

193
00:09:14,720 --> 00:09:17,200
system

194
00:09:17,760 --> 00:09:23,279
in parts we are in the migration away

195
00:09:22,320 --> 00:09:26,480
from dmacc

196
00:09:23,279 --> 00:09:30,160
to remake and if the

197
00:09:26,480 --> 00:09:34,080
migration is done as far as i know

198
00:09:30,160 --> 00:09:37,760
it will use automatically so

199
00:09:34,080 --> 00:09:40,320
but we still need to use this um

200
00:09:37,760 --> 00:09:40,880
when you when you pass the url then you

201
00:09:40,320 --> 00:09:44,480
can

202
00:09:40,880 --> 00:09:44,480
uh then it will um

203
00:09:44,560 --> 00:09:47,760
i don't know i think in the bootstrap it

204
00:09:47,360 --> 00:09:50,480
will

205
00:09:47,760 --> 00:09:52,080
um download dmacc it will be built

206
00:09:50,480 --> 00:09:54,880
automatically

207
00:09:52,080 --> 00:09:56,240
and you have not need not to do any

208
00:09:54,880 --> 00:10:01,279
extra stuff

209
00:09:56,240 --> 00:10:01,279
the epm is the second

210
00:10:02,839 --> 00:10:06,240
um

211
00:10:04,079 --> 00:10:07,359
dependency for the build environment

212
00:10:06,240 --> 00:10:10,720
which we need

213
00:10:07,360 --> 00:10:14,320
you can also install this um separately

214
00:10:10,720 --> 00:10:14,320
and have it um

215
00:10:14,560 --> 00:10:21,040
and adjust past the

216
00:10:17,760 --> 00:10:23,439
url where it can be directly found here

217
00:10:21,040 --> 00:10:27,199
it will be downloaded and built

218
00:10:23,440 --> 00:10:31,040
and the epm we need for packaging

219
00:10:27,200 --> 00:10:34,160
so if you build that files

220
00:10:31,040 --> 00:10:35,920
rpms and so on this will be done by this

221
00:10:34,160 --> 00:10:38,959
package

222
00:10:35,920 --> 00:10:42,800
then with with run you define

223
00:10:38,959 --> 00:10:46,160
which languages you want these languages

224
00:10:42,800 --> 00:10:49,599
are copied from the build parts

225
00:10:46,160 --> 00:10:53,439
so you have a sharp choice

226
00:10:49,600 --> 00:10:53,440
if you do it for yourself then

227
00:10:53,519 --> 00:11:00,560
you will um you will maybe

228
00:10:56,959 --> 00:11:03,518
reduce it or so

229
00:11:00,560 --> 00:11:05,680
um and then we have some switches like

230
00:11:03,519 --> 00:11:09,839
wiki publisher webos

231
00:11:05,680 --> 00:11:12,839
category b enable opengl enable d bus

232
00:11:09,839 --> 00:11:14,880
without j unit and enable bundled

233
00:11:12,839 --> 00:11:18,079
directions

234
00:11:14,880 --> 00:11:20,079
this steer a bit what will be built how

235
00:11:18,079 --> 00:11:24,479
it will be built

236
00:11:20,079 --> 00:11:28,719
um for example enable category b

237
00:11:24,480 --> 00:11:31,839
this is a license issue if you

238
00:11:28,720 --> 00:11:32,800
are not issue but it's it's a licensing

239
00:11:31,839 --> 00:11:36,399
stuff

240
00:11:32,800 --> 00:11:39,519
so um open office is

241
00:11:36,399 --> 00:11:43,440
built quite nebula and

242
00:11:39,519 --> 00:11:46,380
the core it's an apr2

243
00:11:43,440 --> 00:11:47,920
but which is from apache

244
00:11:46,380 --> 00:11:50,959
[Music]

245
00:11:47,920 --> 00:11:54,240
perspective a category r

246
00:11:50,959 --> 00:11:57,518
um license also

247
00:11:54,240 --> 00:12:00,399
other free license like

248
00:11:57,519 --> 00:12:00,399
the um

249
00:12:01,040 --> 00:12:03,279
no

250
00:12:04,240 --> 00:12:09,760
no i forgot like other

251
00:12:07,440 --> 00:12:11,519
similar license to the apache license

252
00:12:09,760 --> 00:12:14,800
there will be also cadillac

253
00:12:11,519 --> 00:12:17,440
and other licenses like the mozilla

254
00:12:14,800 --> 00:12:20,370
license is counted like category b

255
00:12:17,440 --> 00:12:22,320
so if a module of a third party

256
00:12:20,370 --> 00:12:25,839
[Music]

257
00:12:22,320 --> 00:12:29,200
extension is made in

258
00:12:25,839 --> 00:12:29,920
uh is published with mozilla this is the

259
00:12:29,200 --> 00:12:32,079
mozilla

260
00:12:29,920 --> 00:12:33,360
unlicensed for example you need this

261
00:12:32,079 --> 00:12:36,719
enable category b

262
00:12:33,360 --> 00:12:40,079
so it will be built with the build

263
00:12:36,720 --> 00:12:42,320
you're going to video enable opengl

264
00:12:40,079 --> 00:12:42,319
will

265
00:12:43,120 --> 00:12:49,510
enable the opengl stuff and

266
00:12:46,639 --> 00:12:51,120
on windows you have also the option to

267
00:12:49,510 --> 00:12:54,880
[Music]

268
00:12:51,120 --> 00:12:58,399
to use directx

269
00:12:54,880 --> 00:13:02,079
if you have the sd card available

270
00:12:58,399 --> 00:13:03,920
for it um debus is something linear

271
00:13:02,079 --> 00:13:07,599
linux specific

272
00:13:03,920 --> 00:13:10,399
and so on i recommend to use

273
00:13:07,600 --> 00:13:12,800
with vendor and then just write

274
00:13:10,399 --> 00:13:15,680
something

275
00:13:12,800 --> 00:13:18,079
so it's not confused as an official

276
00:13:15,680 --> 00:13:20,959
build if you do it as an official build

277
00:13:18,079 --> 00:13:21,839
you you will probably get into some

278
00:13:20,959 --> 00:13:25,279
issues if

279
00:13:21,839 --> 00:13:28,399
if the pmc looks at it

280
00:13:25,279 --> 00:13:32,079
um if you build for yourself

281
00:13:28,399 --> 00:13:34,320
you can you can give with the option

282
00:13:32,079 --> 00:13:35,279
or with the switch with package formats

283
00:13:34,320 --> 00:13:38,320
you can give

284
00:13:35,279 --> 00:13:41,040
the um you can configure

285
00:13:38,320 --> 00:13:41,920
what what packages it will be installed

286
00:13:41,040 --> 00:13:45,839
if it's ab

287
00:13:41,920 --> 00:13:48,959
rbm rpm dab or whatever

288
00:13:45,839 --> 00:13:51,440
if you use installed it will be

289
00:13:48,959 --> 00:13:53,518
it will be rollout in the in the build

290
00:13:51,440 --> 00:13:56,240
folder and you can directly use it for

291
00:13:53,519 --> 00:13:56,240
your tests

292
00:13:56,320 --> 00:14:03,199
the last two are enabled debug util

293
00:14:00,079 --> 00:14:05,599
and enable symbols

294
00:14:03,199 --> 00:14:06,240
that will help you in the debugging you

295
00:14:05,600 --> 00:14:10,399
can

296
00:14:06,240 --> 00:14:14,240
then attach it to gdb or

297
00:14:10,399 --> 00:14:17,760
you get a certain errors if you open up

298
00:14:14,240 --> 00:14:21,839
the windows the last thing is

299
00:14:17,760 --> 00:14:21,839
you can deactivate

300
00:14:22,000 --> 00:14:26,079
modules like without junit will

301
00:14:24,720 --> 00:14:31,070
deactivate the

302
00:14:26,079 --> 00:14:32,719
junit testing without stl port you will

303
00:14:31,070 --> 00:14:36,330
[Music]

304
00:14:32,720 --> 00:14:37,839
you will disable a specific

305
00:14:36,330 --> 00:14:41,279
[Music]

306
00:14:37,839 --> 00:14:45,120
a specific module

307
00:14:41,279 --> 00:14:48,480
that this stl port especially will

308
00:14:45,120 --> 00:14:52,480
is about some basic

309
00:14:48,480 --> 00:14:55,920
um standard library functionality

310
00:14:52,480 --> 00:14:58,320
um and it's and this one is

311
00:14:55,920 --> 00:14:59,920
i put it in there because we usually

312
00:14:58,320 --> 00:15:03,519
build without

313
00:14:59,920 --> 00:15:05,920
stl port um the modules so

314
00:15:03,519 --> 00:15:08,240
maybe at the for starters you will want

315
00:15:05,920 --> 00:15:12,880
to do this also

316
00:15:08,240 --> 00:15:14,800
or you want to use this for um

317
00:15:12,880 --> 00:15:16,000
you want to use this option if you use

318
00:15:14,800 --> 00:15:18,800
this option

319
00:15:16,000 --> 00:15:19,600
as it it is given here at least on linux

320
00:15:18,800 --> 00:15:23,760
it will

321
00:15:19,600 --> 00:15:27,120
build quite nicely and you will get a

322
00:15:23,760 --> 00:15:30,319
debug able build of openoffice

323
00:15:27,120 --> 00:15:32,959
so when we have configured our system

324
00:15:30,320 --> 00:15:35,440
we do a bootstrap in between the

325
00:15:32,959 --> 00:15:39,599
bootstrap is only downloading

326
00:15:35,440 --> 00:15:42,399
the dependencies we want to build

327
00:15:39,600 --> 00:15:42,959
the command for building open office is

328
00:15:42,399 --> 00:15:46,880
build

329
00:15:42,959 --> 00:15:50,719
all p8 for example

330
00:15:46,880 --> 00:15:54,720
minus p8 slash slash or dash dash

331
00:15:50,720 --> 00:15:58,880
and dash p8 for example

332
00:15:54,720 --> 00:15:58,880
and what does it mean you know

333
00:15:59,120 --> 00:16:05,920
it means we want to build

334
00:16:02,800 --> 00:16:10,319
everything with

335
00:16:05,920 --> 00:16:14,479
eight parallel modules built

336
00:16:10,320 --> 00:16:17,199
and with eight threads per module

337
00:16:14,480 --> 00:16:17,199
yeah so

338
00:16:18,079 --> 00:16:22,880
yeah this is pretty much with p8 and p8

339
00:16:21,839 --> 00:16:27,600
we have

340
00:16:22,880 --> 00:16:31,120
rather bad experience

341
00:16:27,600 --> 00:16:31,839
um i think it's maybe better to use

342
00:16:31,120 --> 00:16:35,600
something like

343
00:16:31,839 --> 00:16:37,759
p2 and have here something p8 yeah

344
00:16:35,600 --> 00:16:39,199
depending on your processors you have to

345
00:16:37,759 --> 00:16:42,880
experiment

346
00:16:39,199 --> 00:16:43,359
with it a little bit because open office

347
00:16:42,880 --> 00:16:46,000
still

348
00:16:43,360 --> 00:16:48,720
needs a lot of time build bots need

349
00:16:46,000 --> 00:16:51,920
something like

350
00:16:48,720 --> 00:16:56,959
i don't know six to 20 hours yeah what

351
00:16:51,920 --> 00:16:56,959
was it right something like that yeah um

352
00:17:00,800 --> 00:17:04,959
build this quick okay i need something

353
00:17:03,519 --> 00:17:09,359
around

354
00:17:04,959 --> 00:17:12,400
an hour maybe yeah on my machine

355
00:17:09,359 --> 00:17:16,240
um yeah

356
00:17:12,400 --> 00:17:19,240
so what does it mean

357
00:17:16,240 --> 00:17:20,720
with this p8 i have some maybe some

358
00:17:19,240 --> 00:17:23,359
[Music]

359
00:17:20,720 --> 00:17:24,799
um some graphics some small graphics to

360
00:17:23,359 --> 00:17:27,438
make it more clear

361
00:17:24,799 --> 00:17:28,960
maybe we look at the first pm we have

362
00:17:27,439 --> 00:17:31,919
our modules yeah

363
00:17:28,960 --> 00:17:33,360
if we use p1 it will build one module

364
00:17:31,919 --> 00:17:36,240
after another

365
00:17:33,360 --> 00:17:38,399
if you have built with p2 it will start

366
00:17:36,240 --> 00:17:41,440
with the first module and then

367
00:17:38,400 --> 00:17:44,880
depending on the dependency setup

368
00:17:41,440 --> 00:17:49,039
it will start to um it will start to go

369
00:17:44,880 --> 00:17:52,160
ready for two or more stuff

370
00:17:49,039 --> 00:17:56,160
it will open up more parallel

371
00:17:52,160 --> 00:18:00,000
buildings you know so

372
00:17:56,160 --> 00:18:03,280
if you have too much um

373
00:18:00,000 --> 00:18:04,160
parallel modules to be built um we have

374
00:18:03,280 --> 00:18:07,840
some

375
00:18:04,160 --> 00:18:10,880
dependency lags i think

376
00:18:07,840 --> 00:18:13,840
you will you will maybe um

377
00:18:10,880 --> 00:18:16,400
find out that we want to build module 3

378
00:18:13,840 --> 00:18:18,480
but it has a dependency to module 4 and

379
00:18:16,400 --> 00:18:18,960
module 4 is not built and so the build

380
00:18:18,480 --> 00:18:22,000
will

381
00:18:18,960 --> 00:18:24,720
stop with an error

382
00:18:22,000 --> 00:18:27,200
best is if you come across these things

383
00:18:24,720 --> 00:18:29,919
ask about on the devmailing list and

384
00:18:27,200 --> 00:18:32,400
we will look into it and we will have to

385
00:18:29,919 --> 00:18:32,400
fix it

386
00:18:34,160 --> 00:18:39,919
if we go to the p if you go to the

387
00:18:37,520 --> 00:18:39,918
second

388
00:18:40,000 --> 00:18:47,919
switch if we build one module

389
00:18:43,600 --> 00:18:52,159
then we open up more one-on-one threads

390
00:18:47,919 --> 00:18:55,200
and we build this code stuff in parallel

391
00:18:52,160 --> 00:18:58,400
you can also think this will be past

392
00:18:55,200 --> 00:19:01,600
the second one will be passed to

393
00:18:58,400 --> 00:19:04,480
d make and g make

394
00:19:01,600 --> 00:19:07,280
so they they work in parallel and they

395
00:19:04,480 --> 00:19:10,080
work faster

396
00:19:07,280 --> 00:19:12,320
if we do our builds and it stops and we

397
00:19:10,080 --> 00:19:16,240
fix something

398
00:19:12,320 --> 00:19:17,520
then it breaks and we fix it and we want

399
00:19:16,240 --> 00:19:22,799
to continue there

400
00:19:17,520 --> 00:19:22,799
or we have to we clean something up

401
00:19:23,520 --> 00:19:26,639
then we don't want to start over so we

402
00:19:25,840 --> 00:19:29,280
can

403
00:19:26,640 --> 00:19:30,160
we can continue where we have stopped or

404
00:19:29,280 --> 00:19:32,000
we can

405
00:19:30,160 --> 00:19:33,840
where we did in in the module where we

406
00:19:32,000 --> 00:19:38,320
did our changes we can

407
00:19:33,840 --> 00:19:41,520
set up on on this

408
00:19:38,320 --> 00:19:42,399
um on at this place and restart the

409
00:19:41,520 --> 00:19:44,250
build and there's

410
00:19:42,400 --> 00:19:45,520
two ways you can

411
00:19:44,250 --> 00:19:49,120
[Music]

412
00:19:45,520 --> 00:19:52,400
you can do the the build yeah

413
00:19:49,120 --> 00:19:54,719
the first one or one is to

414
00:19:52,400 --> 00:19:57,360
we talk of compatible builds and we can

415
00:19:54,720 --> 00:20:00,880
build off incompatible builds

416
00:19:57,360 --> 00:20:01,840
um so for example we have module one we

417
00:20:00,880 --> 00:20:04,720
have module two

418
00:20:01,840 --> 00:20:05,439
we have module three we build all three

419
00:20:04,720 --> 00:20:08,159
or

420
00:20:05,440 --> 00:20:10,880
we built we started to build all three

421
00:20:08,159 --> 00:20:13,760
and then we do a change in module two

422
00:20:10,880 --> 00:20:16,320
so that we want to set up again on

423
00:20:13,760 --> 00:20:18,960
module two

424
00:20:16,320 --> 00:20:20,720
and the y thing is to build then again

425
00:20:18,960 --> 00:20:24,320
module 3.

426
00:20:20,720 --> 00:20:27,840
if we build module 3 or

427
00:20:24,320 --> 00:20:28,480
we set we would give then the build

428
00:20:27,840 --> 00:20:32,639
command

429
00:20:28,480 --> 00:20:32,640
build from module 2 yeah

430
00:20:32,840 --> 00:20:39,600
um and build will then know

431
00:20:35,919 --> 00:20:44,320
okay i want to build also

432
00:20:39,600 --> 00:20:46,559
module three i will go in depth

433
00:20:44,320 --> 00:20:48,639
just two to have the principle and in

434
00:20:46,559 --> 00:20:51,600
compatible builds

435
00:20:48,640 --> 00:20:52,960
we already know module 3 will not be

436
00:20:51,600 --> 00:20:55,439
affected

437
00:20:52,960 --> 00:20:56,080
we are sure as a developer that this

438
00:20:55,440 --> 00:20:58,080
module

439
00:20:56,080 --> 00:20:59,520
that the change in module 2 will not

440
00:20:58,080 --> 00:21:02,158
affect module 3 or

441
00:20:59,520 --> 00:21:03,120
every anything that comes after it so we

442
00:21:02,159 --> 00:21:06,480
only build

443
00:21:03,120 --> 00:21:07,360
module two yeah which will be much

444
00:21:06,480 --> 00:21:11,840
quicker

445
00:21:07,360 --> 00:21:16,158
but well if there's something

446
00:21:11,840 --> 00:21:17,439
changing in the interfaces or something

447
00:21:16,159 --> 00:21:22,320
then you have an

448
00:21:17,440 --> 00:21:24,799
issue that might be difficult to debug

449
00:21:22,320 --> 00:21:26,639
so the recommendation is definitely if

450
00:21:24,799 --> 00:21:29,760
you have no idea what

451
00:21:26,640 --> 00:21:30,080
whatsoever then do incompetable builds

452
00:21:29,760 --> 00:21:32,400
build

453
00:21:30,080 --> 00:21:34,080
everything from the place you where you

454
00:21:32,400 --> 00:21:38,320
quit

455
00:21:34,080 --> 00:21:41,439
and then um and then you're safe

456
00:21:38,320 --> 00:21:44,559
yeah the command

457
00:21:41,440 --> 00:21:45,039
the com the build command is done in the

458
00:21:44,559 --> 00:21:48,559
in

459
00:21:45,039 --> 00:21:50,400
set oro native then the build

460
00:21:48,559 --> 00:21:53,918
environment will always know

461
00:21:50,400 --> 00:21:57,200
that you want to continue after

462
00:21:53,919 --> 00:22:00,240
the module you have changed is done

463
00:21:57,200 --> 00:22:03,360
yeah it will automatically know

464
00:22:00,240 --> 00:22:05,679
which dependencies after that has to be

465
00:22:03,360 --> 00:22:09,199
rebuilt

466
00:22:05,679 --> 00:22:12,320
for that um we need to clean

467
00:22:09,200 --> 00:22:15,240
the build that has already been done

468
00:22:12,320 --> 00:22:17,600
this is this is done with the command

469
00:22:15,240 --> 00:22:20,960
[Music]

470
00:22:17,600 --> 00:22:21,760
built from module two minus minus

471
00:22:20,960 --> 00:22:25,200
prepare

472
00:22:21,760 --> 00:22:29,919
yeah but since we

473
00:22:25,200 --> 00:22:33,200
also use gmake and gmag will not

474
00:22:29,919 --> 00:22:36,080
respond as a will not will not be

475
00:22:33,200 --> 00:22:40,640
cleaned with the minus minus prepare

476
00:22:36,080 --> 00:22:41,360
you need also to set up build minus

477
00:22:40,640 --> 00:22:45,039
minus

478
00:22:41,360 --> 00:22:48,479
from module two and then minus job

479
00:22:45,039 --> 00:22:51,919
and then make clean make clean debug

480
00:22:48,480 --> 00:22:55,919
equals t minus ignore this

481
00:22:51,919 --> 00:22:58,400
we will this will be um safe for you

482
00:22:55,919 --> 00:22:59,840
then you have really cleaned your build

483
00:22:58,400 --> 00:23:02,799
environment

484
00:22:59,840 --> 00:23:03,280
and you can really start over with build

485
00:23:02,799 --> 00:23:06,480
from

486
00:23:03,280 --> 00:23:08,559
module two yeah this is something you

487
00:23:06,480 --> 00:23:11,039
have to keep in mind

488
00:23:08,559 --> 00:23:11,039
for this

489
00:23:11,600 --> 00:23:20,399
and quick look on the

490
00:23:16,880 --> 00:23:23,600
so and if you do compatible builds

491
00:23:20,400 --> 00:23:26,960
you go into the module name and

492
00:23:23,600 --> 00:23:30,559
just um clean the

493
00:23:26,960 --> 00:23:34,799
in the module yeah if it's uh

494
00:23:30,559 --> 00:23:36,480
if it's a module that is based on gmake

495
00:23:34,799 --> 00:23:40,559
you can just

496
00:23:36,480 --> 00:23:43,600
pass a make clean and then you're done

497
00:23:40,559 --> 00:23:46,399
and then you can start with build from

498
00:23:43,600 --> 00:23:46,399
module 2.

499
00:23:47,039 --> 00:23:54,720
okay last slide

500
00:23:51,520 --> 00:23:55,760
um as we have seen the current build

501
00:23:54,720 --> 00:23:58,880
environment

502
00:23:55,760 --> 00:24:02,158
is um at the center of it

503
00:23:58,880 --> 00:24:05,520
is built is a pearl so the build

504
00:24:02,159 --> 00:24:09,520
command is a perl script we use

505
00:24:05,520 --> 00:24:12,080
a mixture of dmag and gmake

506
00:24:09,520 --> 00:24:13,039
i think it's i don't know i'm not very

507
00:24:12,080 --> 00:24:16,559
sure but i think

508
00:24:13,039 --> 00:24:21,200
around 60 to 80 percent

509
00:24:16,559 --> 00:24:24,399
of the modules are already on gmak

510
00:24:21,200 --> 00:24:28,159
and we use ant for java

511
00:24:24,400 --> 00:24:31,760
stuff or java code

512
00:24:28,159 --> 00:24:34,320
in the future there's some there's quite

513
00:24:31,760 --> 00:24:37,440
an agreement that we will move away from

514
00:24:34,320 --> 00:24:41,200
from the built um perl script

515
00:24:37,440 --> 00:24:44,000
the preference is to only ha use the

516
00:24:41,200 --> 00:24:44,000
gnu make

517
00:24:45,679 --> 00:24:48,880
so you have the standard make make

518
00:24:48,320 --> 00:24:52,320
install

519
00:24:48,880 --> 00:24:55,520
and stuff we will continue to use

520
00:24:52,320 --> 00:24:57,760
ends our new make

521
00:24:55,520 --> 00:24:59,200
configuration is set up in the way if

522
00:24:57,760 --> 00:25:02,240
there is java

523
00:24:59,200 --> 00:25:03,520
in the module then it then make will

524
00:25:02,240 --> 00:25:07,039
automatically

525
00:25:03,520 --> 00:25:09,200
fire up end and build

526
00:25:07,039 --> 00:25:11,360
build java so

527
00:25:09,200 --> 00:25:15,039
[Music]

528
00:25:11,360 --> 00:25:18,799
this is for building perspective

529
00:25:15,039 --> 00:25:22,080
it's it's the end is really um

530
00:25:18,799 --> 00:25:25,760
on on the um top

531
00:25:22,080 --> 00:25:29,120
on the floor but maybe um

532
00:25:25,760 --> 00:25:31,919
if the new make if the build pl will not

533
00:25:29,120 --> 00:25:31,918
replace the

534
00:25:32,159 --> 00:25:35,600
if you cannot replace build pl with the

535
00:25:34,480 --> 00:25:38,960
glue make

536
00:25:35,600 --> 00:25:42,399
then maybe end will become an option

537
00:25:38,960 --> 00:25:46,640
there's also the wish to use python or

538
00:25:42,400 --> 00:25:50,640
s-con but it's not so preferred

539
00:25:46,640 --> 00:25:54,240
so let's put it like this and

540
00:25:50,640 --> 00:25:58,080
yeah in future we will only use

541
00:25:54,240 --> 00:26:01,760
gmake we will drop dmake if we

542
00:25:58,080 --> 00:26:05,199
if we manage to migrate

543
00:26:01,760 --> 00:26:08,720
the last modules

544
00:26:05,200 --> 00:26:12,000
to gmake we will continue to

545
00:26:08,720 --> 00:26:14,640
use and and this is

546
00:26:12,000 --> 00:26:15,279
my personal personal wish that we

547
00:26:14,640 --> 00:26:19,120
someday

548
00:26:15,279 --> 00:26:24,000
can use an ede i don't know eclipse

549
00:26:19,120 --> 00:26:27,039
netbeans or something to develop

550
00:26:24,000 --> 00:26:30,640
open office further

551
00:26:27,039 --> 00:26:34,960
so yeah thank you for your

552
00:26:30,640 --> 00:26:37,840
iden for your attention and

553
00:26:34,960 --> 00:26:39,120
and for this quick run through the open

554
00:26:37,840 --> 00:26:42,559
office built

555
00:26:39,120 --> 00:26:42,559
system and environment

556
00:26:42,640 --> 00:26:46,799
we have i think one minute for questions

557
00:26:50,840 --> 00:26:53,840
yes

558
00:26:58,640 --> 00:27:03,279
so currently there's i think no

559
00:27:04,480 --> 00:27:12,240
there's no specific support for

560
00:27:08,159 --> 00:27:13,279
um distributions specific distributions

561
00:27:12,240 --> 00:27:16,400
i don't know

562
00:27:13,279 --> 00:27:21,840
um mr you do debian

563
00:27:16,400 --> 00:27:21,840
specific builds right

564
00:27:42,080 --> 00:27:50,799
oh you mean you mean the signing

565
00:27:47,120 --> 00:27:53,360
signing signing a pet as a signing the

566
00:27:50,799 --> 00:27:53,360
bill code

567
00:27:55,760 --> 00:28:01,440
in the in the current

568
00:27:59,200 --> 00:28:02,240
builds or current releases we did not do

569
00:28:01,440 --> 00:28:05,440
this

570
00:28:02,240 --> 00:28:08,480
yeah we have a process

571
00:28:05,440 --> 00:28:09,600
in place or we have people who are who

572
00:28:08,480 --> 00:28:11,600
are looked into it

573
00:28:09,600 --> 00:28:12,250
and with the next release we will start

574
00:28:11,600 --> 00:28:14,320
to sign

575
00:28:12,250 --> 00:28:17,760
[Music]

576
00:28:14,320 --> 00:28:21,360
sign our builds for mac and

577
00:28:17,760 --> 00:28:24,879
i'm not sure we try for windows yeah

578
00:28:21,360 --> 00:28:28,840
but this is i think at the moment the

579
00:28:24,880 --> 00:28:30,159
manual process and we have to make our

580
00:28:28,840 --> 00:28:33,360
experience

581
00:28:30,159 --> 00:28:35,600
until and we will see if we get that how

582
00:28:33,360 --> 00:28:37,520
we can get the processed and smaller so

583
00:28:35,600 --> 00:28:39,120
we start with a separate manual process

584
00:28:37,520 --> 00:28:42,639
and then go to

585
00:28:39,120 --> 00:28:45,840
and then see where it takes us yeah

586
00:28:42,640 --> 00:28:45,840
i hope it answered your question

587
00:28:47,039 --> 00:28:49,840
anything more

588
00:28:51,919 --> 00:28:59,840
okay thank you for your audience

589
00:29:13,360 --> 00:29:15,439
you

