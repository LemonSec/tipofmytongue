1
00:00:06,080 --> 00:00:10,879
hi everyone

2
00:00:08,240 --> 00:00:11,920
i'm here to talk today about git flow

3
00:00:10,880 --> 00:00:14,639
design

4
00:00:11,920 --> 00:00:16,240
which is a git workflow for designing

5
00:00:14,639 --> 00:00:19,198
open source projects

6
00:00:16,239 --> 00:00:20,479
i think it can be a bit technical it

7
00:00:19,199 --> 00:00:21,359
will depend a little bit on your

8
00:00:20,480 --> 00:00:24,400
knowledge of git

9
00:00:21,359 --> 00:00:26,800
i'll try to give some examples this is

10
00:00:24,400 --> 00:00:28,959
focused for designers or maybe for

11
00:00:26,800 --> 00:00:30,080
open source projects that want to

12
00:00:28,960 --> 00:00:32,000
increase their chances

13
00:00:30,080 --> 00:00:33,360
of onboarding designers into their

14
00:00:32,000 --> 00:00:36,320
projects and

15
00:00:33,360 --> 00:00:36,320
try to make it easier

16
00:00:36,399 --> 00:00:41,440
just a small overview of me i'm diogo

17
00:00:39,280 --> 00:00:43,360
i'm a ux designer based in london

18
00:00:41,440 --> 00:00:44,960
in my daytime i work as a ux state for

19
00:00:43,360 --> 00:00:47,600
pokerstars

20
00:00:44,960 --> 00:00:48,800
on my free time i contribute to the rtl

21
00:00:47,600 --> 00:00:50,960
app which is another manager for

22
00:00:48,800 --> 00:00:52,480
bitcoin90 network

23
00:00:50,960 --> 00:00:54,160
and i've also just started contributing

24
00:00:52,480 --> 00:00:56,800
to the thor project which is

25
00:00:54,160 --> 00:00:58,078
quite excited about and if you want to

26
00:00:56,800 --> 00:01:00,800
follow me on twitter you

27
00:00:58,079 --> 00:01:01,760
are sergio or if you want to send me any

28
00:01:00,800 --> 00:01:03,680
emails about

29
00:01:01,760 --> 00:01:05,039
today's talk you can use that email and

30
00:01:03,680 --> 00:01:08,560
the slides will be available

31
00:01:05,040 --> 00:01:10,720
uh online so i'll just

32
00:01:08,560 --> 00:01:11,760
start my talk and giving you a bit of an

33
00:01:10,720 --> 00:01:13,679
overview of

34
00:01:11,760 --> 00:01:15,360
the situation in designing open source

35
00:01:13,680 --> 00:01:17,280
projects

36
00:01:15,360 --> 00:01:18,640
and what my experience has been so far

37
00:01:17,280 --> 00:01:20,479
over the years

38
00:01:18,640 --> 00:01:23,119
and this might not be true for everyone

39
00:01:20,479 --> 00:01:25,039
but i think some people will relate

40
00:01:23,119 --> 00:01:26,240
as it's quite a difficult process for a

41
00:01:25,040 --> 00:01:27,920
designer to

42
00:01:26,240 --> 00:01:30,960
wanting to contribute to an open source

43
00:01:27,920 --> 00:01:33,439
project and actually getting to do it

44
00:01:30,960 --> 00:01:35,119
the whole process is a bit broken and i

45
00:01:33,439 --> 00:01:36,158
think it's mostly because the separation

46
00:01:35,119 --> 00:01:38,079
between

47
00:01:36,159 --> 00:01:39,680
design and git and git is where all the

48
00:01:38,079 --> 00:01:40,720
development happens so there's a huge

49
00:01:39,680 --> 00:01:43,119
gap

50
00:01:40,720 --> 00:01:44,479
between designers and the development

51
00:01:43,119 --> 00:01:45,840
teams

52
00:01:44,479 --> 00:01:47,600
and although it works i think it's

53
00:01:45,840 --> 00:01:49,040
really far from ideal

54
00:01:47,600 --> 00:01:50,640
that's why we see projects having

55
00:01:49,040 --> 00:01:53,759
difficulties

56
00:01:50,640 --> 00:01:54,000
finding an established design team and i

57
00:01:53,759 --> 00:01:55,600
think

58
00:01:54,000 --> 00:01:57,360
everyone will benefit from having an

59
00:01:55,600 --> 00:01:57,759
easier way of integrating design in

60
00:01:57,360 --> 00:02:01,680
there

61
00:01:57,759 --> 00:02:02,640
in their projects um and possibly having

62
00:02:01,680 --> 00:02:06,479
a design team

63
00:02:02,640 --> 00:02:08,720
better product happier end users

64
00:02:06,479 --> 00:02:10,160
but yeah let's have a quick look of what

65
00:02:08,720 --> 00:02:11,840
happens today

66
00:02:10,160 --> 00:02:13,359
so usually a designer probably will

67
00:02:11,840 --> 00:02:16,959
start how can i contribute

68
00:02:13,360 --> 00:02:18,560
to this project uh maybe they will go on

69
00:02:16,959 --> 00:02:20,239
the project page or even just quick

70
00:02:18,560 --> 00:02:21,840
browse social media

71
00:02:20,239 --> 00:02:24,239
maybe just after that you open the

72
00:02:21,840 --> 00:02:25,680
project website you try to find

73
00:02:24,239 --> 00:02:27,599
anything relating to how you can

74
00:02:25,680 --> 00:02:29,840
contribute to the project

75
00:02:27,599 --> 00:02:31,920
uh in most cases it will point you

76
00:02:29,840 --> 00:02:33,360
towards the the git repo which is

77
00:02:31,920 --> 00:02:35,599
very much focused on development which

78
00:02:33,360 --> 00:02:36,000
is not great and usually there isn't any

79
00:02:35,599 --> 00:02:38,879
design

80
00:02:36,000 --> 00:02:40,959
guides on or any kind of help that you

81
00:02:38,879 --> 00:02:43,359
how you can contribute to these cases

82
00:02:40,959 --> 00:02:45,840
uh but usually you can find a link to

83
00:02:43,360 --> 00:02:46,800
let's say irc or slack channel so

84
00:02:45,840 --> 00:02:51,280
let's say if you really want to

85
00:02:46,800 --> 00:02:52,800
contribute you'll go there

86
00:02:51,280 --> 00:02:54,480
but we are already starting to

87
00:02:52,800 --> 00:02:55,120
introducing a lot of friction points for

88
00:02:54,480 --> 00:02:58,000
example

89
00:02:55,120 --> 00:02:59,519
irc is an example it's quite uh common

90
00:02:58,000 --> 00:03:01,120
in open source projects as a way of

91
00:02:59,519 --> 00:03:03,120
communicating

92
00:03:01,120 --> 00:03:04,640
but for designers they might know might

93
00:03:03,120 --> 00:03:07,040
not know what irc is

94
00:03:04,640 --> 00:03:08,640
or they don't know irc so if you want to

95
00:03:07,040 --> 00:03:09,599
onboard users this might be a drop-off

96
00:03:08,640 --> 00:03:11,440
point because

97
00:03:09,599 --> 00:03:12,640
they don't care or they they wanted to

98
00:03:11,440 --> 00:03:14,400
contribute but

99
00:03:12,640 --> 00:03:16,159
it's so much effort that they just go

100
00:03:14,400 --> 00:03:18,319
away

101
00:03:16,159 --> 00:03:19,679
but let's say that you really want to

102
00:03:18,319 --> 00:03:22,640
contribute to the project

103
00:03:19,680 --> 00:03:24,239
uh you actually create the account uh

104
00:03:22,640 --> 00:03:25,839
you mentioned on the channel

105
00:03:24,239 --> 00:03:27,599
that you are looking to help with design

106
00:03:25,840 --> 00:03:28,319
work maybe because of different

107
00:03:27,599 --> 00:03:30,640
timelines

108
00:03:28,319 --> 00:03:32,319
uh no one's there to talk to you so

109
00:03:30,640 --> 00:03:34,159
you'll have to write

110
00:03:32,319 --> 00:03:35,679
the let's say on the good guys that

111
00:03:34,159 --> 00:03:36,798
someone is there

112
00:03:35,680 --> 00:03:38,720
they might point you into another

113
00:03:36,799 --> 00:03:40,159
channel maybe a design channel or they

114
00:03:38,720 --> 00:03:42,000
might point you to speak to like a

115
00:03:40,159 --> 00:03:43,359
design lead which is in charge of design

116
00:03:42,000 --> 00:03:44,640
so they can tell you a bit more about

117
00:03:43,360 --> 00:03:45,920
that

118
00:03:44,640 --> 00:03:47,760
so let's say you get in touch with that

119
00:03:45,920 --> 00:03:49,280
person or you join the channel

120
00:03:47,760 --> 00:03:50,798
and probably again you will have to wait

121
00:03:49,280 --> 00:03:53,360
because the communication

122
00:03:50,799 --> 00:03:55,360
you are we are depending on humans and

123
00:03:53,360 --> 00:03:57,680
it's it's not always easy to

124
00:03:55,360 --> 00:03:58,799
to coordinate so i think by this point

125
00:03:57,680 --> 00:04:00,720
people might be

126
00:03:58,799 --> 00:04:02,400
tired of waiting and it's quite a

127
00:04:00,720 --> 00:04:04,959
complicated flow john i are seeing

128
00:04:02,400 --> 00:04:06,560
waiting for someone and if the stars do

129
00:04:04,959 --> 00:04:08,640
not align and everything goes smoothly

130
00:04:06,560 --> 00:04:11,200
this can be another drop of point so

131
00:04:08,640 --> 00:04:12,319
you're already having a lot of friction

132
00:04:11,200 --> 00:04:13,920
points

133
00:04:12,319 --> 00:04:15,760
but let's say that the designer managed

134
00:04:13,920 --> 00:04:18,880
to speak with the let's say with the

135
00:04:15,760 --> 00:04:21,358
designer in charge or join the channel

136
00:04:18,880 --> 00:04:22,960
then comes another barrier you'll need

137
00:04:21,358 --> 00:04:23,840
to give you like an introduction of how

138
00:04:22,960 --> 00:04:26,719
things work

139
00:04:23,840 --> 00:04:27,679
um tell you the location of the design

140
00:04:26,720 --> 00:04:29,199
assets

141
00:04:27,680 --> 00:04:31,600
if you are lucky they will be using some

142
00:04:29,199 --> 00:04:33,199
sort of cloud storage dropbox google

143
00:04:31,600 --> 00:04:35,120
drive

144
00:04:33,199 --> 00:04:36,800
if you are in luck if you are unlucky

145
00:04:35,120 --> 00:04:37,680
probably they are using local files so

146
00:04:36,800 --> 00:04:39,360
you need to ask

147
00:04:37,680 --> 00:04:41,280
designers for files which is another

148
00:04:39,360 --> 00:04:43,759
breakout point

149
00:04:41,280 --> 00:04:45,359
and then when you finally get the files

150
00:04:43,759 --> 00:04:47,199
you end up seeing that they are

151
00:04:45,360 --> 00:04:49,040
from proprietary software you don't have

152
00:04:47,199 --> 00:04:52,080
license to use that software

153
00:04:49,040 --> 00:04:53,840
uh so you have to ask maybe for someone

154
00:04:52,080 --> 00:04:57,039
to export the files to you

155
00:04:53,840 --> 00:04:58,560
um and that's just more issues

156
00:04:57,040 --> 00:05:01,680
but let's say you get all these you get

157
00:04:58,560 --> 00:05:04,400
the files uh

158
00:05:01,680 --> 00:05:06,000
and you you speak with it with a design

159
00:05:04,400 --> 00:05:06,638
manager and you kind of think okay i'm

160
00:05:06,000 --> 00:05:10,160
set

161
00:05:06,639 --> 00:05:11,919
but so you think the next step is you

162
00:05:10,160 --> 00:05:13,520
trying to understand how do you start

163
00:05:11,919 --> 00:05:15,440
uh usually there isn't a standard

164
00:05:13,520 --> 00:05:16,639
workflow uh you just need to talk with

165
00:05:15,440 --> 00:05:19,280
people

166
00:05:16,639 --> 00:05:21,680
uh what needs to be done what is the

167
00:05:19,280 --> 00:05:24,559
team working on is there a roadmap

168
00:05:21,680 --> 00:05:26,720
is there a ticking ticketing system if

169
00:05:24,560 --> 00:05:29,520
if cs is usually outside git so

170
00:05:26,720 --> 00:05:31,120
another epic is there any style guides

171
00:05:29,520 --> 00:05:33,840
or guidelines that you can use

172
00:05:31,120 --> 00:05:35,680
or that you can follow what's the review

173
00:05:33,840 --> 00:05:38,239
process who does it when does that

174
00:05:35,680 --> 00:05:39,840
it happen can you see the history all

175
00:05:38,240 --> 00:05:40,320
the decisions made until now about the

176
00:05:39,840 --> 00:05:43,679
project

177
00:05:40,320 --> 00:05:45,039
so i think it's quite difficult

178
00:05:43,680 --> 00:05:47,120
and i mean there there has to be a

179
00:05:45,039 --> 00:05:48,880
better way of doing this

180
00:05:47,120 --> 00:05:50,720
and i think the main issue with this is

181
00:05:48,880 --> 00:05:51,600
that the design process is not

182
00:05:50,720 --> 00:05:54,639
self-starting

183
00:05:51,600 --> 00:05:56,080
you are depending on a lot of factors

184
00:05:54,639 --> 00:05:58,639
and he has quite a few human

185
00:05:56,080 --> 00:06:00,159
dependencies so you'll need to

186
00:05:58,639 --> 00:06:03,039
to wait for them and i think that can be

187
00:06:00,160 --> 00:06:05,199
a point of failure as well

188
00:06:03,039 --> 00:06:07,039
so this is what i came up with is uh

189
00:06:05,199 --> 00:06:09,360
called git flow design

190
00:06:07,039 --> 00:06:10,479
i put it together when i joined an open

191
00:06:09,360 --> 00:06:11,759
source project which

192
00:06:10,479 --> 00:06:13,599
was fairly new and i was the first

193
00:06:11,759 --> 00:06:15,520
designer so i thought it would be a

194
00:06:13,600 --> 00:06:15,840
great opportunity to set up a workflow

195
00:06:15,520 --> 00:06:18,159
that

196
00:06:15,840 --> 00:06:20,239
solve all the issues i was having and i

197
00:06:18,160 --> 00:06:23,199
found over the years

198
00:06:20,240 --> 00:06:24,560
the foundation is git for this workflow

199
00:06:23,199 --> 00:06:25,919
it's self-starting so you don't need to

200
00:06:24,560 --> 00:06:27,919
wait for anyone you can just

201
00:06:25,919 --> 00:06:30,240
go on the repo and yeah read the

202
00:06:27,919 --> 00:06:32,479
documentation and start doing it

203
00:06:30,240 --> 00:06:34,000
there's no human intervention before you

204
00:06:32,479 --> 00:06:35,199
can start contributing and it's just

205
00:06:34,000 --> 00:06:37,840
there 24 7.

206
00:06:35,199 --> 00:06:39,199
uh it relies heavily on documentation

207
00:06:37,840 --> 00:06:43,359
and on the workflow

208
00:06:39,199 --> 00:06:43,360
but i think that's a good trade-off

209
00:06:43,919 --> 00:06:50,799
so yeah it's basically a design repo

210
00:06:49,199 --> 00:06:52,800
you sit side-by-side with development

211
00:06:50,800 --> 00:06:56,960
which is which is great

212
00:06:52,800 --> 00:06:56,960
uh but it's tailored for design

213
00:06:57,120 --> 00:07:00,479
it will have everything you need to get

214
00:06:58,800 --> 00:07:01,919
started you don't have to fish

215
00:07:00,479 --> 00:07:03,120
information or talk to a lot of people

216
00:07:01,919 --> 00:07:06,240
everything will be there

217
00:07:03,120 --> 00:07:08,639
um it has minimal dependencies

218
00:07:06,240 --> 00:07:10,080
the workflow is documented on the repo

219
00:07:08,639 --> 00:07:11,919
help files

220
00:07:10,080 --> 00:07:13,280
uh you'll have contribution guides that

221
00:07:11,919 --> 00:07:14,840
will take you step by step on how you

222
00:07:13,280 --> 00:07:17,119
can do your first contribution

223
00:07:14,840 --> 00:07:20,159
um and everything is just there for you

224
00:07:17,120 --> 00:07:20,160
to start without any help

225
00:07:20,880 --> 00:07:25,360
it uses open file formats which i think

226
00:07:23,520 --> 00:07:27,840
is quite crucial so that everyone can

227
00:07:25,360 --> 00:07:29,680
collaborate without proprietary software

228
00:07:27,840 --> 00:07:31,679
although you can still use your sketch

229
00:07:29,680 --> 00:07:33,360
and figures

230
00:07:31,680 --> 00:07:36,080
the main focus of this workflow is using

231
00:07:33,360 --> 00:07:37,680
open file formats

232
00:07:36,080 --> 00:07:39,280
and you can do exports to open file

233
00:07:37,680 --> 00:07:41,360
formats from those

234
00:07:39,280 --> 00:07:42,638
paid softwares i think it increases

235
00:07:41,360 --> 00:07:46,080
collaboration between design and

236
00:07:42,639 --> 00:07:48,639
development because now these two

237
00:07:46,080 --> 00:07:50,000
repositories can be linked together and

238
00:07:48,639 --> 00:07:51,360
yeah there's no gatekeepers there's no

239
00:07:50,000 --> 00:07:55,120
points of failure so

240
00:07:51,360 --> 00:07:55,120
just just go into the ripon start

241
00:07:55,280 --> 00:07:59,840
as i mentioned it's quite fearful for

242
00:07:57,440 --> 00:08:02,400
designers the word git

243
00:07:59,840 --> 00:08:03,758
just as a quick overview git is a

244
00:08:02,400 --> 00:08:06,400
version control system

245
00:08:03,759 --> 00:08:07,520
for tracking changes in source code it

246
00:08:06,400 --> 00:08:09,679
was created by

247
00:08:07,520 --> 00:08:12,159
linus torvalds which is creator of linux

248
00:08:09,680 --> 00:08:13,360
and it was mentioned by him as a global

249
00:08:12,160 --> 00:08:15,520
information tracker

250
00:08:13,360 --> 00:08:17,599
so you are in a good mood it actually

251
00:08:15,520 --> 00:08:20,000
works for you angel thing

252
00:08:17,599 --> 00:08:20,800
and light suddenly fills the room or if

253
00:08:20,000 --> 00:08:23,360
it doesn't go

254
00:08:20,800 --> 00:08:24,400
your way got an idiotic chocolate of

255
00:08:23,360 --> 00:08:26,879
 when it breaks

256
00:08:24,400 --> 00:08:27,919
which can happen but in this way we are

257
00:08:26,879 --> 00:08:29,919
using a quite

258
00:08:27,919 --> 00:08:31,520
simplistic way of using it so you don't

259
00:08:29,919 --> 00:08:34,958
use all the dependencies so it's

260
00:08:31,520 --> 00:08:37,279
a bit easier so why git

261
00:08:34,958 --> 00:08:38,319
well it's because that's where all the

262
00:08:37,279 --> 00:08:40,080
development

263
00:08:38,320 --> 00:08:41,919
happens and if it's possible to be in

264
00:08:40,080 --> 00:08:44,000
there i think it just makes sense

265
00:08:41,919 --> 00:08:45,360
even though it's made for source code i

266
00:08:44,000 --> 00:08:48,000
will show you the benefits that we can

267
00:08:45,360 --> 00:08:49,279
use it for for design

268
00:08:48,000 --> 00:08:51,279
it applies for everything files

269
00:08:49,279 --> 00:08:53,439
documentation guidelines

270
00:08:51,279 --> 00:08:54,560
accessible to everyone free to use and

271
00:08:53,440 --> 00:08:57,680
development can be

272
00:08:54,560 --> 00:08:59,680
linked together it has it has control

273
00:08:57,680 --> 00:09:00,000
versioning for your design files so no

274
00:08:59,680 --> 00:09:03,439
more

275
00:09:00,000 --> 00:09:04,399
final final uh it has editable history

276
00:09:03,440 --> 00:09:06,160
so you can just look at

277
00:09:04,399 --> 00:09:07,839
all the decisions taken over the year

278
00:09:06,160 --> 00:09:09,040
what was the discussion the why and the

279
00:09:07,839 --> 00:09:10,959
reasons

280
00:09:09,040 --> 00:09:13,680
uh so that's quite helpful there's no

281
00:09:10,959 --> 00:09:16,079
loss of information

282
00:09:13,680 --> 00:09:18,000
the review process is open to everyone

283
00:09:16,080 --> 00:09:21,200
happens in the open nothing

284
00:09:18,000 --> 00:09:23,760
goes behind the scenes the the issue

285
00:09:21,200 --> 00:09:25,920
system can be linked together directly

286
00:09:23,760 --> 00:09:28,480
to the development report vice versa

287
00:09:25,920 --> 00:09:30,479
so an issue created in the development

288
00:09:28,480 --> 00:09:32,720
repo can trigger an issue on the design

289
00:09:30,480 --> 00:09:33,680
so this creates a lot of seamless work

290
00:09:32,720 --> 00:09:36,080
between development

291
00:09:33,680 --> 00:09:37,120
and design teams and you get all the

292
00:09:36,080 --> 00:09:39,200
benefits from git

293
00:09:37,120 --> 00:09:41,519
task management and project management

294
00:09:39,200 --> 00:09:41,519
tools

295
00:09:42,399 --> 00:09:47,360
it relies heavily on a good folder

296
00:09:44,320 --> 00:09:49,760
structure when you organize the project

297
00:09:47,360 --> 00:09:51,680
this is just an example of what i use

298
00:09:49,760 --> 00:09:52,959
but the main focus here is just that we

299
00:09:51,680 --> 00:09:55,359
have the design

300
00:09:52,959 --> 00:09:56,959
folder and then we have each feature

301
00:09:55,360 --> 00:09:59,920
that you work on as a subfolder and then

302
00:09:56,959 --> 00:10:03,279
you have ux and ui

303
00:09:59,920 --> 00:10:06,800
or others if you if you need

304
00:10:03,279 --> 00:10:08,560
key important point in these is that uh

305
00:10:06,800 --> 00:10:10,079
we have the ux and ui and we have the

306
00:10:08,560 --> 00:10:12,560
exports so in

307
00:10:10,079 --> 00:10:14,160
his exports folder we create the export

308
00:10:12,560 --> 00:10:15,279
images of all like pngs of all your

309
00:10:14,160 --> 00:10:17,040
artboards

310
00:10:15,279 --> 00:10:18,560
and this is so you can take advantage of

311
00:10:17,040 --> 00:10:21,920
git image diffs

312
00:10:18,560 --> 00:10:23,680
so once we start using it

313
00:10:21,920 --> 00:10:26,160
we can have side-by-side comparisons of

314
00:10:23,680 --> 00:10:27,519
what change in those commits so in this

315
00:10:26,160 --> 00:10:29,839
case i changed

316
00:10:27,519 --> 00:10:30,640
the order of the ctas and we take

317
00:10:29,839 --> 00:10:32,720
advantage of

318
00:10:30,640 --> 00:10:34,000
git functionality like having it side by

319
00:10:32,720 --> 00:10:34,800
side you can swipe you can see the

320
00:10:34,000 --> 00:10:37,839
differences

321
00:10:34,800 --> 00:10:39,760
and these outcomes for free

322
00:10:37,839 --> 00:10:40,880
and also another important folder is the

323
00:10:39,760 --> 00:10:42,560
source files

324
00:10:40,880 --> 00:10:44,160
so we keep a folder for proprietary

325
00:10:42,560 --> 00:10:46,160
software because we want to keep all the

326
00:10:44,160 --> 00:10:47,920
information so nothing is lost like

327
00:10:46,160 --> 00:10:49,439
sketch or psd

328
00:10:47,920 --> 00:10:54,000
but the main focus is creating these

329
00:10:49,440 --> 00:10:57,040
open file format folders for example svg

330
00:10:54,000 --> 00:10:57,040
and aura for

331
00:10:57,279 --> 00:11:01,040
open raster so yeah this is an example

332
00:10:59,440 --> 00:11:03,680
of open file formats of

333
00:11:01,040 --> 00:11:04,640
svg vector file created by inkscape open

334
00:11:03,680 --> 00:11:06,800
source

335
00:11:04,640 --> 00:11:08,399
or order for example which is an open

336
00:11:06,800 --> 00:11:09,439
raster files for [ __ ] instead of

337
00:11:08,399 --> 00:11:12,000
photoshop

338
00:11:09,440 --> 00:11:14,079
they are both based on xml which means

339
00:11:12,000 --> 00:11:15,600
that they are essentially source code

340
00:11:14,079 --> 00:11:17,279
and this means that they can be tracked

341
00:11:15,600 --> 00:11:19,519
in git and used for

342
00:11:17,279 --> 00:11:21,040
versioning control so what developers

343
00:11:19,519 --> 00:11:23,200
have for their files we can now use for

344
00:11:21,040 --> 00:11:24,319
design

345
00:11:23,200 --> 00:11:26,640
and you might think that it's starting

346
00:11:24,320 --> 00:11:28,720
to look quite complicated

347
00:11:26,640 --> 00:11:30,640
but i think is you have a little bit of

348
00:11:28,720 --> 00:11:31,440
work when you set it up but then it just

349
00:11:30,640 --> 00:11:32,720
runs and it's

350
00:11:31,440 --> 00:11:35,440
the more you do it it becomes quite

351
00:11:32,720 --> 00:11:35,440
second nature

352
00:11:35,519 --> 00:11:39,600
and i also think that designers can

353
00:11:37,279 --> 00:11:41,439
learn it

354
00:11:39,600 --> 00:11:43,279
and i dare to say that designers working

355
00:11:41,440 --> 00:11:44,959
for open source projects need to know

356
00:11:43,279 --> 00:11:45,519
git and i mean it's like any other tool

357
00:11:44,959 --> 00:11:47,439
that

358
00:11:45,519 --> 00:11:49,519
you learn i mean we jump from sketch to

359
00:11:47,440 --> 00:11:51,360
figma we learn all these tools

360
00:11:49,519 --> 00:11:54,959
but when the word geez comes into

361
00:11:51,360 --> 00:11:56,399
conversation everyone who's so scared

362
00:11:54,959 --> 00:11:58,560
and i think it might be like this in the

363
00:11:56,399 --> 00:12:00,000
past because git was very common line

364
00:11:58,560 --> 00:12:02,160
uh focus you have to go into the

365
00:12:00,000 --> 00:12:03,839
terminal uh and type your own commands

366
00:12:02,160 --> 00:12:05,920
so it was very techy

367
00:12:03,839 --> 00:12:07,360
but these day knights you have uh

368
00:12:05,920 --> 00:12:08,399
desktop applications that do all the

369
00:12:07,360 --> 00:12:11,519
work for you with

370
00:12:08,399 --> 00:12:15,120
really nice user interfaces so i think

371
00:12:11,519 --> 00:12:15,120
there's no excuses not to learn it

372
00:12:15,279 --> 00:12:18,880
git flow design is based on a branching

373
00:12:18,000 --> 00:12:23,440
model this is

374
00:12:18,880 --> 00:12:25,279
becoming a bit technical about git but

375
00:12:23,440 --> 00:12:27,839
this is for example an overview of the

376
00:12:25,279 --> 00:12:30,639
workflow we have the master branch

377
00:12:27,839 --> 00:12:31,680
um that requires all the history and we

378
00:12:30,639 --> 00:12:33,920
have the

379
00:12:31,680 --> 00:12:35,199
design which serves as an integration

380
00:12:33,920 --> 00:12:37,519
branch for all the features

381
00:12:35,200 --> 00:12:39,120
so i'll just give a quick run through of

382
00:12:37,519 --> 00:12:41,200
the process

383
00:12:39,120 --> 00:12:42,720
we start with master and design let's

384
00:12:41,200 --> 00:12:43,440
say i want to work on ux for feature

385
00:12:42,720 --> 00:12:45,519
room

386
00:12:43,440 --> 00:12:47,440
feature one i create a branch i'll give

387
00:12:45,519 --> 00:12:50,560
it ux feature one name

388
00:12:47,440 --> 00:12:52,160
it's based off design i'll go and start

389
00:12:50,560 --> 00:12:53,680
working on my

390
00:12:52,160 --> 00:12:55,680
on my files i'll commit and push so

391
00:12:53,680 --> 00:12:58,479
everyone can see and give me feedback

392
00:12:55,680 --> 00:13:00,638
once i'm happy i create a pull request

393
00:12:58,480 --> 00:13:02,079
this notifies the design team

394
00:13:00,639 --> 00:13:04,160
if the design team is happy with the

395
00:13:02,079 --> 00:13:06,638
work they merge it onto design

396
00:13:04,160 --> 00:13:08,079
at this point ux is done for feature one

397
00:13:06,639 --> 00:13:10,480
so this means that the ui

398
00:13:08,079 --> 00:13:11,120
work can now start someone picks up the

399
00:13:10,480 --> 00:13:13,760
ui

400
00:13:11,120 --> 00:13:14,480
they create another uh feature branch ui

401
00:13:13,760 --> 00:13:16,959
feature one

402
00:13:14,480 --> 00:13:18,240
they start working on it they commit

403
00:13:16,959 --> 00:13:20,160
they create a pull request

404
00:13:18,240 --> 00:13:21,440
and they want the work to be reviewed he

405
00:13:20,160 --> 00:13:23,279
goes to the design team

406
00:13:21,440 --> 00:13:25,040
everything was okay he gets merged onto

407
00:13:23,279 --> 00:13:27,439
design

408
00:13:25,040 --> 00:13:28,079
at this point both ux and ui for that

409
00:13:27,440 --> 00:13:30,320
feature

410
00:13:28,079 --> 00:13:31,519
were signed off and there are on the

411
00:13:30,320 --> 00:13:33,120
design branch

412
00:13:31,519 --> 00:13:35,839
so now the design team can create a pull

413
00:13:33,120 --> 00:13:38,079
request and merge it onto the

414
00:13:35,839 --> 00:13:40,000
to the master and this means that the

415
00:13:38,079 --> 00:13:41,599
feature is finished

416
00:13:40,000 --> 00:13:44,240
so now the development team can pick it

417
00:13:41,600 --> 00:13:46,160
up this is another view

418
00:13:44,240 --> 00:13:47,760
overview just saying that feature

419
00:13:46,160 --> 00:13:49,199
branches can start at any point and

420
00:13:47,760 --> 00:13:54,000
they can go up to design but then come

421
00:13:49,199 --> 00:13:54,000
back to to be reviewed if necessary

422
00:13:54,160 --> 00:13:57,199
and this might be quite difficult if you

423
00:13:56,639 --> 00:14:00,560
think about

424
00:13:57,199 --> 00:14:02,240
branching and all these terms of git

425
00:14:00,560 --> 00:14:04,079
but i'll just give a quick example of

426
00:14:02,240 --> 00:14:06,959
github in

427
00:14:04,079 --> 00:14:09,599
in 10 steps this is github which is a an

428
00:14:06,959 --> 00:14:11,439
application for git but you can use any

429
00:14:09,600 --> 00:14:13,600
uh and the the user interface they have

430
00:14:11,440 --> 00:14:16,720
is quite nice and it's easy to

431
00:14:13,600 --> 00:14:17,920
to use it so let's say you start the

432
00:14:16,720 --> 00:14:19,839
application

433
00:14:17,920 --> 00:14:20,959
you want to clone a repository from the

434
00:14:19,839 --> 00:14:22,959
internet

435
00:14:20,959 --> 00:14:24,800
you put on the url of the repo where the

436
00:14:22,959 --> 00:14:28,399
git flow is exhausted

437
00:14:24,800 --> 00:14:30,560
you clone it um

438
00:14:28,399 --> 00:14:31,440
we have yeah no local changes we haven't

439
00:14:30,560 --> 00:14:32,959
done any work

440
00:14:31,440 --> 00:14:35,279
i can see that there's branches over

441
00:14:32,959 --> 00:14:36,800
there so i click on branches

442
00:14:35,279 --> 00:14:38,639
uh you can see what other people are

443
00:14:36,800 --> 00:14:40,560
working on but i want to start working

444
00:14:38,639 --> 00:14:41,040
on my own feature so i can create a new

445
00:14:40,560 --> 00:14:43,760
feature

446
00:14:41,040 --> 00:14:46,079
i give it yeah i'm working on ux ux

447
00:14:43,760 --> 00:14:48,720
working on lightning give it the name

448
00:14:46,079 --> 00:14:50,160
it's based off design it's okay no

449
00:14:48,720 --> 00:14:52,800
changes

450
00:14:50,160 --> 00:14:54,160
i can see now that the git repository

451
00:14:52,800 --> 00:14:55,199
was plugged into my machine i can go

452
00:14:54,160 --> 00:14:57,199
into the folder

453
00:14:55,199 --> 00:14:58,399
start to create my own and start to

454
00:14:57,199 --> 00:15:01,040
create my own files

455
00:14:58,399 --> 00:15:01,760
and working on them if i go on to the

456
00:15:01,040 --> 00:15:03,040
application

457
00:15:01,760 --> 00:15:05,600
it will show all the changes i've done

458
00:15:03,040 --> 00:15:07,279
all the files that i've added

459
00:15:05,600 --> 00:15:09,120
if i want to when i'm ready to commit i

460
00:15:07,279 --> 00:15:13,199
just give it a title now click

461
00:15:09,120 --> 00:15:14,800
commit to ux lightning it goes on to the

462
00:15:13,199 --> 00:15:16,319
on to the git if you want to publish to

463
00:15:14,800 --> 00:15:17,680
for other people to see the your work

464
00:15:16,320 --> 00:15:18,880
you can publish the branch and it goes

465
00:15:17,680 --> 00:15:20,479
on to

466
00:15:18,880 --> 00:15:22,480
to the github website so everyone can

467
00:15:20,480 --> 00:15:23,920
see

468
00:15:22,480 --> 00:15:25,839
let's say you continue to work on the

469
00:15:23,920 --> 00:15:28,719
file it will change

470
00:15:25,839 --> 00:15:29,920
it will see the the differences between

471
00:15:28,720 --> 00:15:31,680
the changes you've made and this is

472
00:15:29,920 --> 00:15:33,839
quite beneficial so you can see

473
00:15:31,680 --> 00:15:35,439
on the previous commit i have the for

474
00:15:33,839 --> 00:15:36,320
example in this example an order of ctas

475
00:15:35,440 --> 00:15:38,079
now i changed it

476
00:15:36,320 --> 00:15:39,680
and when people are reviewing it they

477
00:15:38,079 --> 00:15:42,800
can see it straight away

478
00:15:39,680 --> 00:15:44,880
on the on the application

479
00:15:42,800 --> 00:15:46,160
and this is quite nice and then when

480
00:15:44,880 --> 00:15:47,680
you're ready you worked on

481
00:15:46,160 --> 00:15:50,399
everything you you've done and you're

482
00:15:47,680 --> 00:15:51,758
ready for submit the work for the

483
00:15:50,399 --> 00:15:54,800
for the design team you just create a

484
00:15:51,759 --> 00:15:57,120
pull request he opens the github

485
00:15:54,800 --> 00:15:59,040
page you just give it a title you say

486
00:15:57,120 --> 00:16:02,800
what you've worked on

487
00:15:59,040 --> 00:16:04,719
and that's it it seems like

488
00:16:02,800 --> 00:16:06,000
quite a workflow but once you start

489
00:16:04,720 --> 00:16:07,920
using it this github

490
00:16:06,000 --> 00:16:09,279
this github thing you start to see that

491
00:16:07,920 --> 00:16:11,599
it's quite easy to do

492
00:16:09,279 --> 00:16:13,439
and the more you do it the easier it

493
00:16:11,600 --> 00:16:15,440
becomes

494
00:16:13,440 --> 00:16:16,880
and just some things that i'm planning

495
00:16:15,440 --> 00:16:20,800
on working next

496
00:16:16,880 --> 00:16:22,720
uh using github lfs large file storage

497
00:16:20,800 --> 00:16:24,719
for example to use

498
00:16:22,720 --> 00:16:26,079
for those big proprietary files which

499
00:16:24,720 --> 00:16:26,639
they are not tracked in git so they can

500
00:16:26,079 --> 00:16:28,399
become

501
00:16:26,639 --> 00:16:30,800
quite big and just make the repo

502
00:16:28,399 --> 00:16:32,720
exploding size

503
00:16:30,800 --> 00:16:34,399
ways of using shared master components

504
00:16:32,720 --> 00:16:35,920
so we can use those across

505
00:16:34,399 --> 00:16:37,600
the design team so you can share

506
00:16:35,920 --> 00:16:39,759
components they don't have to redesign

507
00:16:37,600 --> 00:16:41,680
everything from scratch every time

508
00:16:39,759 --> 00:16:43,040
and possibly using github pages to

509
00:16:41,680 --> 00:16:46,719
create a design system

510
00:16:43,040 --> 00:16:49,199
maybe in an automatic automated way

511
00:16:46,720 --> 00:16:50,240
that it can just pick up the files from

512
00:16:49,199 --> 00:16:51,758
the master branch

513
00:16:50,240 --> 00:16:53,360
and some documentation and creates a

514
00:16:51,759 --> 00:16:55,920
design system automatically and

515
00:16:53,360 --> 00:16:58,320
everything comes for free

516
00:16:55,920 --> 00:17:00,479
and maybe also create pages for let's

517
00:16:58,320 --> 00:17:02,839
say developer and the end of specs so

518
00:17:00,480 --> 00:17:04,799
gives you all the css and all that for

519
00:17:02,839 --> 00:17:08,319
developers

520
00:17:04,799 --> 00:17:11,359
so yeah and that's it

521
00:17:08,319 --> 00:17:12,079
it's quite the complicated flow uh but i

522
00:17:11,359 --> 00:17:14,399
think

523
00:17:12,079 --> 00:17:16,399
it brings a lot of benefits because

524
00:17:14,400 --> 00:17:19,360
everything stays in git

525
00:17:16,400 --> 00:17:20,319
and we are trying to get design and

526
00:17:19,359 --> 00:17:23,198
development

527
00:17:20,319 --> 00:17:24,879
come close together so i think yeah it's

528
00:17:23,199 --> 00:17:32,400
beneficial

529
00:17:24,880 --> 00:17:33,520
thank you have time for a couple of

530
00:17:32,400 --> 00:17:34,880
questions i'm going to ask

531
00:17:33,520 --> 00:17:36,960
everybody to please not to leave the

532
00:17:34,880 --> 00:17:40,960
room until the questions result

533
00:17:36,960 --> 00:17:43,360
okay yeah yeah when you have a

534
00:17:40,960 --> 00:17:45,440
sketch file it's so it's basically like

535
00:17:43,360 --> 00:17:48,959
a zip file with the extra running time

536
00:17:45,440 --> 00:17:53,440
so to get treated as a binary

537
00:17:48,960 --> 00:18:01,840
right yeah there's ways of

538
00:17:53,440 --> 00:18:01,840
you might have an example here

539
00:18:02,160 --> 00:18:06,960
enough but yeah is sketch files for

540
00:18:04,720 --> 00:18:10,799
example is proprietary although

541
00:18:06,960 --> 00:18:10,799
and i explained this in the the

542
00:18:11,120 --> 00:18:15,120
in the repo more in depth in all these

543
00:18:13,360 --> 00:18:16,159
types of files for example sketch files

544
00:18:15,120 --> 00:18:18,719
can be unpacked

545
00:18:16,160 --> 00:18:20,880
and inside is just json files basically

546
00:18:18,720 --> 00:18:22,480
so you can unpack sketch files

547
00:18:20,880 --> 00:18:28,320
track those and then when you want to

548
00:18:22,480 --> 00:18:31,280
use the sketch file you can pack it

549
00:18:28,320 --> 00:18:31,840
yeah i think the issue the the key point

550
00:18:31,280 --> 00:18:33,678
is that

551
00:18:31,840 --> 00:18:34,879
if you work on sketch you still work on

552
00:18:33,679 --> 00:18:36,720
sketch

553
00:18:34,880 --> 00:18:38,640
when you're when you're finished working

554
00:18:36,720 --> 00:18:39,200
you just create an svg as an open file

555
00:18:38,640 --> 00:18:40,640
format

556
00:18:39,200 --> 00:18:44,320
and include that in the folder and you

557
00:18:40,640 --> 00:18:44,320
just keep sketch for yourself as well

558
00:18:54,400 --> 00:18:57,840
i i use abstract actually for a couple

559
00:18:56,799 --> 00:18:59,440
projects but

560
00:18:57,840 --> 00:19:02,000
as you said it's proprietary you have to

561
00:18:59,440 --> 00:19:03,120
pay for it and as the same issue happens

562
00:19:02,000 --> 00:19:04,640
outside git

563
00:19:03,120 --> 00:19:05,760
so developers will not be aware of

564
00:19:04,640 --> 00:19:06,960
what's happening and they need to

565
00:19:05,760 --> 00:19:11,840
install the app they need to create

566
00:19:06,960 --> 00:19:11,840
accounts so it's another barrier

567
00:19:21,280 --> 00:19:24,720
and this is where development teams can

568
00:19:22,720 --> 00:19:26,160
help out for example the world

569
00:19:24,720 --> 00:19:27,840
this whole process can be a nice user

570
00:19:26,160 --> 00:19:28,480
interface so you don't have to rely on

571
00:19:27,840 --> 00:19:31,520
the desktop

572
00:19:28,480 --> 00:19:36,480
desktop can be more design focused

573
00:19:31,520 --> 00:19:36,480
yeah more questions

574
00:19:36,840 --> 00:19:42,159
yeah from a developer standpoint uh

575
00:19:39,760 --> 00:19:43,600
it seems to me that using it is easy and

576
00:19:42,160 --> 00:19:45,120
straightforward when you can easily

577
00:19:43,600 --> 00:19:46,719
atomize the task

578
00:19:45,120 --> 00:19:48,639
is this one with straightforward to

579
00:19:46,720 --> 00:19:50,480
atomize task and picture when you are

580
00:19:48,640 --> 00:19:52,559
designing

581
00:19:50,480 --> 00:19:54,640
it's not easy i think it's a trade-off

582
00:19:52,559 --> 00:19:56,080
especially because we are using git

583
00:19:54,640 --> 00:19:57,840
we are trying to avoid a lot of

584
00:19:56,080 --> 00:19:59,760
conflicts between people working on

585
00:19:57,840 --> 00:20:01,840
the same project so we kind of break it

586
00:19:59,760 --> 00:20:03,360
apart and that's how we break it apart

587
00:20:01,840 --> 00:20:06,179
as features so everyone works on

588
00:20:03,360 --> 00:20:07,840
something separate so there's no clashes

589
00:20:06,180 --> 00:20:10,000
[Music]

590
00:20:07,840 --> 00:20:12,320
i don't think this if this answers your

591
00:20:10,000 --> 00:20:12,320
question

592
00:20:14,799 --> 00:20:21,039
anything else and i think

593
00:20:18,159 --> 00:20:22,799
this process can be used by designers

594
00:20:21,039 --> 00:20:25,120
you can go to an open source

595
00:20:22,799 --> 00:20:26,000
project and kind of pitch in these look

596
00:20:25,120 --> 00:20:28,158
let's

597
00:20:26,000 --> 00:20:29,840
create this for your for your project

598
00:20:28,159 --> 00:20:31,039
you can bring a lot of designers i'm

599
00:20:29,840 --> 00:20:34,399
ready to do the work

600
00:20:31,039 --> 00:20:36,000
uh or just open source organizations

601
00:20:34,400 --> 00:20:37,200
that want to bring more designers into

602
00:20:36,000 --> 00:20:40,320
their

603
00:20:37,200 --> 00:20:40,320
into their projects as well

604
00:20:40,400 --> 00:20:49,840
yeah i'm just curious for me

605
00:20:43,760 --> 00:20:49,840
like with like a normal usage

606
00:20:52,400 --> 00:20:55,840
uh comparing the code of them it's not

607
00:20:54,640 --> 00:20:58,080
the same

608
00:20:55,840 --> 00:20:59,120
as comparing the codes of java or

609
00:20:58,080 --> 00:21:01,039
javascript right

610
00:20:59,120 --> 00:21:02,479
that seems a little strange but i can

611
00:21:01,039 --> 00:21:04,799
see how that works here

612
00:21:02,480 --> 00:21:06,480
but just another question when you were

613
00:21:04,799 --> 00:21:07,039
showing a gift flow right like it was a

614
00:21:06,480 --> 00:21:10,159
simple

615
00:21:07,039 --> 00:21:12,320
case uh is it is it is it uh

616
00:21:10,159 --> 00:21:14,000
useful to do like a rebase once in a

617
00:21:12,320 --> 00:21:14,879
while or something like that resolve

618
00:21:14,000 --> 00:21:16,960
conflict so

619
00:21:14,880 --> 00:21:18,720
is that something that it's you know you

620
00:21:16,960 --> 00:21:21,120
you yeah experience

621
00:21:18,720 --> 00:21:22,240
it can become quite tricky and this is

622
00:21:21,120 --> 00:21:24,719
where you need to

623
00:21:22,240 --> 00:21:26,159
have a lot of knowledge in git uh in

624
00:21:24,720 --> 00:21:26,799
this example in the git flow i try to

625
00:21:26,159 --> 00:21:28,320
keep things

626
00:21:26,799 --> 00:21:30,799
easier as possible for designers to kind

627
00:21:28,320 --> 00:21:32,799
of jump in i think as as once they start

628
00:21:30,799 --> 00:21:34,480
adopting the project and working on it

629
00:21:32,799 --> 00:21:36,480
and by working with it daily they start

630
00:21:34,480 --> 00:21:37,200
to learn more and more uh possibly they

631
00:21:36,480 --> 00:21:38,640
leave the

632
00:21:37,200 --> 00:21:40,240
the git flow desktop up and use the

633
00:21:38,640 --> 00:21:42,240
command line and they start to learn a

634
00:21:40,240 --> 00:21:43,679
bit more but yeah it's quite tricky

635
00:21:42,240 --> 00:21:46,000
especially with clashes and conflicts

636
00:21:43,679 --> 00:21:51,840
within files yeah

637
00:21:46,000 --> 00:21:51,840
i think in these kind of files

638
00:21:52,679 --> 00:22:00,559
yeah yeah

639
00:21:58,799 --> 00:22:02,400
although those open file formats like

640
00:22:00,559 --> 00:22:04,158
svg and nora

641
00:22:02,400 --> 00:22:06,080
they are based on xml if you are not

642
00:22:04,159 --> 00:22:08,000
using any bitmaps inside

643
00:22:06,080 --> 00:22:09,120
which can be useful if it's just vector

644
00:22:08,000 --> 00:22:11,679
files you can work

645
00:22:09,120 --> 00:22:12,799
quite nicely you can even change the you

646
00:22:11,679 --> 00:22:15,919
can see the

647
00:22:12,799 --> 00:22:15,918
the differences in code

648
00:22:16,080 --> 00:22:20,080
um for example i changed the font and

649
00:22:18,640 --> 00:22:20,880
you can see that the phone changed there

650
00:22:20,080 --> 00:22:25,199
so it's just

651
00:22:20,880 --> 00:22:27,600
a piece of code um but yeah it's tricky

652
00:22:25,200 --> 00:22:29,200
but if you keep it if you keep it simple

653
00:22:27,600 --> 00:22:31,280
i think it's useful

654
00:22:29,200 --> 00:22:32,880
yeah and then we can move from there i

655
00:22:31,280 --> 00:22:33,918
think it's changing the mind of

656
00:22:32,880 --> 00:22:36,000
designers that

657
00:22:33,919 --> 00:22:37,840
git is not that hard and we can jump in

658
00:22:36,000 --> 00:22:39,280
and be side by side with development

659
00:22:37,840 --> 00:22:41,840
and after that we can start building on

660
00:22:39,280 --> 00:22:41,840
top of it

661
00:22:43,950 --> 00:22:52,930
[Applause]

662
00:22:55,760 --> 00:22:57,840
you

