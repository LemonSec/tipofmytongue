1
00:00:07,040 --> 00:00:09,599
um

2
00:00:07,600 --> 00:00:10,959
okay next up we're gonna have um jeff

3
00:00:09,599 --> 00:00:12,400
frederick was gonna be talking to us

4
00:00:10,960 --> 00:00:16,320
about

5
00:00:12,400 --> 00:00:19,760
kubernetes on factory raspberry pi's

6
00:00:16,320 --> 00:00:22,880
okay so um it's it's something

7
00:00:19,760 --> 00:00:24,960
to be a kind of educating fun

8
00:00:22,880 --> 00:00:25,919
and try to motivate you to try the same

9
00:00:24,960 --> 00:00:28,880
experience

10
00:00:25,920 --> 00:00:30,400
um there's a demo i have a bunch of

11
00:00:28,880 --> 00:00:31,599
raspberry which are going to make some

12
00:00:30,400 --> 00:00:34,719
light at some point

13
00:00:31,599 --> 00:00:35,520
uh it's to tell me that i have to start

14
00:00:34,719 --> 00:00:37,280
the demo

15
00:00:35,520 --> 00:00:38,719
uh because basically this is going to

16
00:00:37,280 --> 00:00:40,960
build a network i don't

17
00:00:38,719 --> 00:00:42,160
and i'm going to this this is basically

18
00:00:40,960 --> 00:00:44,719
to uh

19
00:00:42,160 --> 00:00:46,239
it is the o2 of a tomcat demo i've been

20
00:00:44,719 --> 00:00:49,680
doing at from apachecon

21
00:00:46,239 --> 00:00:52,718
explaining uh how we can do

22
00:00:49,680 --> 00:00:58,239
session sharing using

23
00:00:52,719 --> 00:01:00,480
the kubernetes cloud in tomcat

24
00:00:58,239 --> 00:01:01,680
so um i'm john furrier i'm working for

25
00:01:00,480 --> 00:01:05,119
red hat

26
00:01:01,680 --> 00:01:08,320
you can find me under this email

27
00:01:05,119 --> 00:01:10,799
nearly everywhere on on twitter

28
00:01:08,320 --> 00:01:12,559
on slideshare the slides are already

29
00:01:10,799 --> 00:01:15,520
available on slideshare so

30
00:01:12,560 --> 00:01:17,040
if you don't see the small things and

31
00:01:15,520 --> 00:01:17,600
you see it better on your laptop you can

32
00:01:17,040 --> 00:01:21,920
just

33
00:01:17,600 --> 00:01:25,199
go there so um

34
00:01:21,920 --> 00:01:29,280
here i have my kubernetes

35
00:01:25,200 --> 00:01:32,479
cloud made of raspberries basically

36
00:01:29,280 --> 00:01:34,960
i have one box here

37
00:01:32,479 --> 00:01:36,560
which is going to provide a wi-fi to the

38
00:01:34,960 --> 00:01:40,320
others

39
00:01:36,560 --> 00:01:42,479
and i have a master running here

40
00:01:40,320 --> 00:01:44,079
and two nodes which at some point should

41
00:01:42,479 --> 00:01:46,000
make some light

42
00:01:44,079 --> 00:01:47,520
actually both of them are making some

43
00:01:46,000 --> 00:01:50,640
light so

44
00:01:47,520 --> 00:01:52,798
these have created a network on which i

45
00:01:50,640 --> 00:01:54,799
have to connect to start the remove

46
00:01:52,799 --> 00:01:56,159
which of course going to take a while to

47
00:01:54,799 --> 00:01:59,600
start

48
00:01:56,159 --> 00:02:01,119
so um i have to that's the first thing

49
00:01:59,600 --> 00:02:03,039
when you

50
00:02:01,119 --> 00:02:04,719
you show how to do a demo usually the

51
00:02:03,040 --> 00:02:06,240
first thing you screw is like

52
00:02:04,719 --> 00:02:08,478
what you know that network or something

53
00:02:06,240 --> 00:02:11,680
like that so

54
00:02:08,479 --> 00:02:12,800
this demo is basically to uh to show you

55
00:02:11,680 --> 00:02:15,840
that you can easily have

56
00:02:12,800 --> 00:02:18,160
kubernetes uh running

57
00:02:15,840 --> 00:02:19,040
so that you can use it uh with some

58
00:02:18,160 --> 00:02:21,120
space

59
00:02:19,040 --> 00:02:22,720
with very little space you can have

60
00:02:21,120 --> 00:02:25,760
offline demo

61
00:02:22,720 --> 00:02:28,000
of your application that you have

62
00:02:25,760 --> 00:02:31,599
prepared for kubernetes

63
00:02:28,000 --> 00:02:31,599
so at some point i should get network

64
00:02:34,840 --> 00:02:38,080
hopefully

65
00:02:36,480 --> 00:02:40,879
it's trying to connect to the first and

66
00:02:38,080 --> 00:02:45,760
then fail with

67
00:02:40,879 --> 00:02:45,760
okay i need two seconds okay

68
00:02:46,319 --> 00:02:50,000
so i'm i'm connecting on this box and

69
00:02:48,720 --> 00:02:53,680
i'm going to uh

70
00:02:50,000 --> 00:02:57,120
tell master to start to master

71
00:02:53,680 --> 00:02:58,959
and to start the two nodes

72
00:02:57,120 --> 00:03:00,239
so i'm i'm starting it and then i will

73
00:02:58,959 --> 00:03:02,239
explain with the

74
00:03:00,239 --> 00:03:19,840
how it goes because it it requires some

75
00:03:02,239 --> 00:03:19,840
time to stop

76
00:03:20,159 --> 00:03:23,359
so it's going to ping the node and then

77
00:03:21,599 --> 00:03:25,440
it's going to start the stuff so

78
00:03:23,360 --> 00:03:28,000
i'll go back to the presentation while

79
00:03:25,440 --> 00:03:28,000
it's starting

80
00:03:29,599 --> 00:03:34,399
so what what i'm doing here is basically

81
00:03:33,680 --> 00:03:38,000
i'll take it

82
00:03:34,400 --> 00:03:41,440
a bit uh the hard way um i'm using a

83
00:03:38,000 --> 00:03:45,360
fedora distribution uh on raspberry 4.

84
00:03:41,440 --> 00:03:47,920
uh the raspberry ford is not yet

85
00:03:45,360 --> 00:03:50,159
supported by the linux kernel i mean the

86
00:03:47,920 --> 00:03:53,518
base canal so you have to use the

87
00:03:50,159 --> 00:03:56,720
raspberry pi uh specific fork

88
00:03:53,519 --> 00:03:58,959
of the linux scanner uh it needs to be

89
00:03:56,720 --> 00:04:00,080
cross compiled so you can it's quite

90
00:03:58,959 --> 00:04:03,280
easy on the laptop

91
00:04:00,080 --> 00:04:05,599
uh you have to install the arm 64

92
00:04:03,280 --> 00:04:07,840
cross compilation tool and unbuild your

93
00:04:05,599 --> 00:04:10,480
kernel

94
00:04:07,840 --> 00:04:12,239
you have to build it for raspberry 4 and

95
00:04:10,480 --> 00:04:15,518
you have also to add some stuff

96
00:04:12,239 --> 00:04:17,600
that fedora is requiring uh

97
00:04:15,519 --> 00:04:19,759
like uh to have the same way working for

98
00:04:17,600 --> 00:04:23,360
s linux and you have some parameters

99
00:04:19,759 --> 00:04:25,680
also to set uh for kubernetes

100
00:04:23,360 --> 00:04:28,000
uh this is in you can find it in the in

101
00:04:25,680 --> 00:04:31,199
my your under my url there

102
00:04:28,000 --> 00:04:31,600
there's not so much stuff there so to

103
00:04:31,199 --> 00:04:34,400
build

104
00:04:31,600 --> 00:04:35,680
uh you just tell that you want to build

105
00:04:34,400 --> 00:04:37,758
this config

106
00:04:35,680 --> 00:04:39,040
you uh that is building the

107
00:04:37,759 --> 00:04:42,160
configuration files

108
00:04:39,040 --> 00:04:43,440
and then uh you make mac image modules

109
00:04:42,160 --> 00:04:45,759
and

110
00:04:43,440 --> 00:04:47,040
and then you will have uh the kernel and

111
00:04:45,759 --> 00:04:49,600
the modules and some

112
00:04:47,040 --> 00:04:50,960
some other file you need then you need

113
00:04:49,600 --> 00:04:55,520
to prepare sd card

114
00:04:50,960 --> 00:04:57,520
uh basically it's easy i have

115
00:04:55,520 --> 00:04:58,799
raspberry pi sd card there where i have

116
00:04:57,520 --> 00:05:03,680
installed the stuff

117
00:04:58,800 --> 00:05:06,240
and i can normally show what is inside

118
00:05:03,680 --> 00:05:06,240
you will see

119
00:05:08,560 --> 00:05:15,680
so um this is it's a bit small but

120
00:05:11,759 --> 00:05:19,039
it's readable now okay so basically uh

121
00:05:15,680 --> 00:05:20,880
this is uh this is my uh my car this is

122
00:05:19,039 --> 00:05:24,719
the uh the boot this is a

123
00:05:20,880 --> 00:05:26,400
uh dos or fat uh that is going to be

124
00:05:24,720 --> 00:05:29,759
read by the uh

125
00:05:26,400 --> 00:05:31,440
uh by the bootstrap uh of the raspberry

126
00:05:29,759 --> 00:05:32,639
the bootstrap of the raspberry is done

127
00:05:31,440 --> 00:05:35,120
by the uh

128
00:05:32,639 --> 00:05:36,560
uh graphic card or the vod.com card

129
00:05:35,120 --> 00:05:39,680
which is going to read this

130
00:05:36,560 --> 00:05:42,080
uh load the kernel uh in memory and

131
00:05:39,680 --> 00:05:43,360
uh tell the kernel that it needs to run

132
00:05:42,080 --> 00:05:45,680
on the arm 64

133
00:05:43,360 --> 00:05:46,400
version and then and then start it up

134
00:05:45,680 --> 00:05:50,080
which is

135
00:05:46,400 --> 00:05:53,440
uh what is has been done

136
00:05:50,080 --> 00:05:56,080
and um uh you have the uh

137
00:05:53,440 --> 00:05:57,680
the root partition uh of the raspberry i

138
00:05:56,080 --> 00:05:59,599
have used very big

139
00:05:57,680 --> 00:06:01,440
card because uh i also want to run

140
00:05:59,600 --> 00:06:04,800
openshift on it and it's a

141
00:06:01,440 --> 00:06:07,759
it's i was you can do it with us uh

142
00:06:04,800 --> 00:06:09,919
32 without problems and you probably

143
00:06:07,759 --> 00:06:13,840
could use a smaller one but the smaller

144
00:06:09,919 --> 00:06:13,840
sd card that does not worth it

145
00:06:14,960 --> 00:06:18,719
so back to the presentation so you have

146
00:06:18,000 --> 00:06:22,479
seen the

147
00:06:18,720 --> 00:06:24,639
starting is running in background

148
00:06:22,479 --> 00:06:25,840
um the first the next problem i have is

149
00:06:24,639 --> 00:06:29,440
like basically um

150
00:06:25,840 --> 00:06:31,679
i have to set up the the wi-fi uh

151
00:06:29,440 --> 00:06:33,440
to do this uh you have you have to wait

152
00:06:31,680 --> 00:06:34,319
you can either copy the fire at the

153
00:06:33,440 --> 00:06:37,120
right place

154
00:06:34,319 --> 00:06:38,479
uh in the raspberry pi it's it's doable

155
00:06:37,120 --> 00:06:40,720
it well it's easy

156
00:06:38,479 --> 00:06:42,560
uh i i'm not going to explain it because

157
00:06:40,720 --> 00:06:44,319
uh i've done it the other way

158
00:06:42,560 --> 00:06:46,080
uh which is basically i'm just

159
00:06:44,319 --> 00:06:49,919
connecting my raspberry pi

160
00:06:46,080 --> 00:06:52,719
uh to my router at home uh

161
00:06:49,919 --> 00:06:53,758
and i make a nmap uh find out that it's

162
00:06:52,720 --> 00:06:57,199
a raspberry

163
00:06:53,759 --> 00:07:00,240
uh i have uh previously uh copied to it

164
00:06:57,199 --> 00:07:02,319
uh raspberry is starting ssh

165
00:07:00,240 --> 00:07:04,479
and has my case on it so basically i

166
00:07:02,319 --> 00:07:05,919
just have to ssh to it as root

167
00:07:04,479 --> 00:07:08,000
and then install what is needed so

168
00:07:05,919 --> 00:07:11,198
basically i'm going to they get the

169
00:07:08,000 --> 00:07:13,680
configuration for the raspberry 4 uh

170
00:07:11,199 --> 00:07:14,880
i'm going to install some tools to do

171
00:07:13,680 --> 00:07:16,800
and then i'm going to configure the

172
00:07:14,880 --> 00:07:19,680
wi-fi uh

173
00:07:16,800 --> 00:07:20,479
fedora 31 has a some funny channel

174
00:07:19,680 --> 00:07:23,680
feature

175
00:07:20,479 --> 00:07:24,960
which is a mac address randomization so

176
00:07:23,680 --> 00:07:26,319
that i have to edit the file that's

177
00:07:24,960 --> 00:07:30,080
never because otherwise i have some

178
00:07:26,319 --> 00:07:33,280
problem to find my raspberry

179
00:07:30,080 --> 00:07:35,520
um the description of what is running

180
00:07:33,280 --> 00:07:37,840
there what is running on the infra

181
00:07:35,520 --> 00:07:39,039
if you look you will find a raspberry pi

182
00:07:37,840 --> 00:07:42,479
network here

183
00:07:39,039 --> 00:07:44,400
uh raspberry tree i guess

184
00:07:42,479 --> 00:07:46,479
you can guess the password easily from

185
00:07:44,400 --> 00:07:49,840
uh my facebook

186
00:07:46,479 --> 00:07:52,719
friends and information uh and

187
00:07:49,840 --> 00:07:54,638
uh in my other demo i'll let everyone

188
00:07:52,720 --> 00:07:58,479
connect to it to play with it but

189
00:07:54,639 --> 00:08:00,560
we won't have time for that um and

190
00:07:58,479 --> 00:08:01,840
so the explanation of how to set up this

191
00:08:00,560 --> 00:08:04,560
box uh is

192
00:08:01,840 --> 00:08:05,198
uh on on my blog uh you can have a look

193
00:08:04,560 --> 00:08:08,400
to it

194
00:08:05,199 --> 00:08:10,720
uh um i can show more stuff on it uh

195
00:08:08,400 --> 00:08:12,638
after the presentation like open it and

196
00:08:10,720 --> 00:08:15,280
show you what uh you need inside

197
00:08:12,639 --> 00:08:16,879
uh because basically uh it's it's going

198
00:08:15,280 --> 00:08:19,520
to make to run kubernetes

199
00:08:16,879 --> 00:08:20,240
without uh an internet connection so i'm

200
00:08:19,520 --> 00:08:22,878
i need a

201
00:08:20,240 --> 00:08:23,680
real-time clock i need uh the hcp and

202
00:08:22,879 --> 00:08:25,280
dns to have

203
00:08:23,680 --> 00:08:26,960
all those things running so all this is

204
00:08:25,280 --> 00:08:27,520
explained in my blog if you want to try

205
00:08:26,960 --> 00:08:31,198
it

206
00:08:27,520 --> 00:08:31,198
uh just go there and have fun

207
00:08:32,880 --> 00:08:36,320
the next problem i had is like of course

208
00:08:34,479 --> 00:08:40,640
i need to build uh

209
00:08:36,320 --> 00:08:43,039
arm 64 images uh

210
00:08:40,640 --> 00:08:44,640
the cool thing is like uh m64 images

211
00:08:43,039 --> 00:08:48,160
there's a lot that are available

212
00:08:44,640 --> 00:08:51,839
uh i have tried it with santos

213
00:08:48,160 --> 00:08:54,560
7 and the

214
00:08:51,839 --> 00:08:56,000
alpine kernel the alpine kernel the

215
00:08:54,560 --> 00:08:57,920
alpine linux is good because it's quite

216
00:08:56,000 --> 00:09:01,120
small

217
00:08:57,920 --> 00:09:04,079
basically what i did is like uh i

218
00:09:01,120 --> 00:09:04,880
use this raspberry and and install

219
00:09:04,080 --> 00:09:07,920
docker on it

220
00:09:04,880 --> 00:09:10,240
and java maven i'm doing cat stuff it's

221
00:09:07,920 --> 00:09:13,360
obvious

222
00:09:10,240 --> 00:09:16,399
so basically i've i have built uh

223
00:09:13,360 --> 00:09:18,240
these things uh a small note like

224
00:09:16,399 --> 00:09:19,519
i was doing the same on my laptop to

225
00:09:18,240 --> 00:09:22,320
make sure that i understand

226
00:09:19,519 --> 00:09:23,760
everything thank you uh and then uh

227
00:09:22,320 --> 00:09:25,920
basically uh

228
00:09:23,760 --> 00:09:28,240
you need to take care of multi-platform

229
00:09:25,920 --> 00:09:29,839
if you want to use the same image name

230
00:09:28,240 --> 00:09:31,279
otherwise the first time you start the

231
00:09:29,839 --> 00:09:33,040
stuff on the raspberry is going to take

232
00:09:31,279 --> 00:09:34,720
like it's a wrong image so you must make

233
00:09:33,040 --> 00:09:36,319
sure

234
00:09:34,720 --> 00:09:38,560
you have the right to use the manifest

235
00:09:36,320 --> 00:09:41,519
tool in order that docker is able

236
00:09:38,560 --> 00:09:42,800
uh to put in the um in the docker of the

237
00:09:41,519 --> 00:09:44,560
right information so

238
00:09:42,800 --> 00:09:46,959
basically you have the information that

239
00:09:44,560 --> 00:09:48,239
uh this image is uh for arm this image

240
00:09:46,959 --> 00:09:51,839
is for

241
00:09:48,240 --> 00:09:56,320
a s 390 this image is a for

242
00:09:51,839 --> 00:09:58,880
arm 64 and so on so basically it is this

243
00:09:56,320 --> 00:10:00,080
i won't jump in the detail uh you use

244
00:09:58,880 --> 00:10:02,240
the docker build

245
00:10:00,080 --> 00:10:04,079
uh you tell him which arch you are and

246
00:10:02,240 --> 00:10:06,959
then the important thing is in this

247
00:10:04,079 --> 00:10:07,760
file that you have done under the the

248
00:10:06,959 --> 00:10:10,399
demo

249
00:10:07,760 --> 00:10:10,399
yaml file

250
00:10:11,040 --> 00:10:14,399
on the master you have to so this is

251
00:10:12,640 --> 00:10:15,199
basically what was what is running in

252
00:10:14,399 --> 00:10:18,320
background

253
00:10:15,200 --> 00:10:20,160
um you you are basically i've run this

254
00:10:18,320 --> 00:10:23,200
demo several times so i have to clean it

255
00:10:20,160 --> 00:10:24,560
i have to play a little with ep table uh

256
00:10:23,200 --> 00:10:26,160
i have to remove the swap because

257
00:10:24,560 --> 00:10:26,959
otherwise qb admin does not want to

258
00:10:26,160 --> 00:10:30,240
start

259
00:10:26,959 --> 00:10:32,800
uh and then i

260
00:10:30,240 --> 00:10:34,160
i need a kubernetes network i have

261
00:10:32,800 --> 00:10:36,719
choose a wave to do that

262
00:10:34,160 --> 00:10:37,760
you you have a lot of others but this

263
00:10:36,720 --> 00:10:40,079
was the

264
00:10:37,760 --> 00:10:40,880
this is the first one i tried and it

265
00:10:40,079 --> 00:10:44,319
worked so

266
00:10:40,880 --> 00:10:44,320
i stay on this one

267
00:10:44,399 --> 00:10:48,959
i'm open to suggestions i can do tries

268
00:10:46,880 --> 00:10:50,800
it's very easy like it's it's my own

269
00:10:48,959 --> 00:10:52,319
it's my own kubernetes so i can do what

270
00:10:50,800 --> 00:10:55,920
i want we can try it

271
00:10:52,320 --> 00:10:57,360
i can try other stuff and so basically

272
00:10:55,920 --> 00:11:00,319
then i'm going to uh

273
00:10:57,360 --> 00:11:01,760
do whatever you would do if you use

274
00:11:00,320 --> 00:11:04,240
kubernetes uh

275
00:11:01,760 --> 00:11:05,920
i will basically copy the configuration

276
00:11:04,240 --> 00:11:08,959
to my local configuration

277
00:11:05,920 --> 00:11:10,800
so i can run on uh this guy but i can

278
00:11:08,959 --> 00:11:12,640
have done that on my laptop i can run

279
00:11:10,800 --> 00:11:13,359
the command on the kubernetes things so

280
00:11:12,640 --> 00:11:15,360
basically

281
00:11:13,360 --> 00:11:17,760
to install the network is going to

282
00:11:15,360 --> 00:11:20,959
something like qbctl

283
00:11:17,760 --> 00:11:21,519
apply minus f and the name of the of the

284
00:11:20,959 --> 00:11:24,880
file

285
00:11:21,519 --> 00:11:27,839
um i have a local copy of the uh

286
00:11:24,880 --> 00:11:28,959
of the of the of the plugin in my

287
00:11:27,839 --> 00:11:32,000
repository but

288
00:11:28,959 --> 00:11:33,920
it's just uh we get from the original

289
00:11:32,000 --> 00:11:36,640
one

290
00:11:33,920 --> 00:11:38,160
on each node uh well you have to do a

291
00:11:36,640 --> 00:11:41,040
kind of same thing

292
00:11:38,160 --> 00:11:42,719
you're just going to join your

293
00:11:41,040 --> 00:11:44,000
kubernetes cluster basically you have a

294
00:11:42,720 --> 00:11:47,360
command to do that

295
00:11:44,000 --> 00:11:50,480
uh you just uh qb admin

296
00:11:47,360 --> 00:11:53,519
cluster uh token create it's uh

297
00:11:50,480 --> 00:11:54,160
going to give you uh the token and if

298
00:11:53,519 --> 00:11:55,920
you say

299
00:11:54,160 --> 00:11:57,519
uh print on command it will just

300
00:11:55,920 --> 00:11:58,479
basically tell you which command you

301
00:11:57,519 --> 00:12:01,600
have to run

302
00:11:58,480 --> 00:12:03,680
on the node uh to

303
00:12:01,600 --> 00:12:04,880
to make this node join your kubernetes

304
00:12:03,680 --> 00:12:07,680
cluster

305
00:12:04,880 --> 00:12:10,000
and once once everything is done you can

306
00:12:07,680 --> 00:12:12,959
make a qbcl get node to see the nodes

307
00:12:10,000 --> 00:12:17,040
that are running we are going to try it

308
00:12:12,959 --> 00:12:20,160
so here it could be ctl

309
00:12:17,040 --> 00:12:20,160
get nodes

310
00:12:21,040 --> 00:12:26,959
and you see i have the nodes running

311
00:12:24,079 --> 00:12:28,399
uh green is also obviously the one which

312
00:12:26,959 --> 00:12:31,599
is displaying in green the

313
00:12:28,399 --> 00:12:33,600
blue is the one displaying in them

314
00:12:31,600 --> 00:12:35,200
in uh the blue is the one that's playing

315
00:12:33,600 --> 00:12:38,079
in blue and master

316
00:12:35,200 --> 00:12:38,800
is this one which is hidden there with

317
00:12:38,079 --> 00:12:41,760
no color

318
00:12:38,800 --> 00:12:44,639
so it had been started uh while we were

319
00:12:41,760 --> 00:12:44,639
explaining the stuff

320
00:12:46,800 --> 00:12:53,359
so so i have my

321
00:12:50,399 --> 00:12:56,560
i have my kubernetes running uh let's

322
00:12:53,360 --> 00:12:56,560
try to have some fun there

323
00:12:58,079 --> 00:13:04,839
so so the next one i want to do

324
00:13:02,320 --> 00:13:06,160
uh is basically a move from a tomcat

325
00:13:04,839 --> 00:13:10,959
cluster

326
00:13:06,160 --> 00:13:12,800
to a kubernetes cluster of stormcats

327
00:13:10,959 --> 00:13:14,079
so basically i have one problem i'm

328
00:13:12,800 --> 00:13:17,439
going to i'm jumping

329
00:13:14,079 --> 00:13:19,839
quite fast i hope everyone knows what

330
00:13:17,440 --> 00:13:20,800
is wep and http so basically i have one

331
00:13:19,839 --> 00:13:22,800
problem uh

332
00:13:20,800 --> 00:13:24,319
the protocol does not have a the http

333
00:13:22,800 --> 00:13:26,479
1.1 does not have a

334
00:13:24,320 --> 00:13:28,160
transaction as a persistent connection

335
00:13:26,480 --> 00:13:29,360
so basically you need a cookie to carry

336
00:13:28,160 --> 00:13:31,120
this information

337
00:13:29,360 --> 00:13:32,480
and if you are in a cluster basically

338
00:13:31,120 --> 00:13:34,720
you're going to create a cookie and

339
00:13:32,480 --> 00:13:37,120
you're going to store the information of

340
00:13:34,720 --> 00:13:40,560
the user

341
00:13:37,120 --> 00:13:42,320
on the server and you associate it with

342
00:13:40,560 --> 00:13:44,239
one cookie in this case it's the session

343
00:13:42,320 --> 00:13:45,680
id so basically

344
00:13:44,240 --> 00:13:47,040
i what i'm going to need is like

345
00:13:45,680 --> 00:13:48,638
basically i need to replicate the

346
00:13:47,040 --> 00:13:50,800
session information between the

347
00:13:48,639 --> 00:13:52,160
the the two nodes here because of course

348
00:13:50,800 --> 00:13:54,479
i can't

349
00:13:52,160 --> 00:13:56,240
i can't i can't be sure on which top cat

350
00:13:54,480 --> 00:14:00,320
the in the things isn't going to

351
00:13:56,240 --> 00:14:02,560
to arrive so uh this is the uh

352
00:14:00,320 --> 00:14:04,240
things so how the tomcat cluster is

353
00:14:02,560 --> 00:14:06,719
working we choose multicast

354
00:14:04,240 --> 00:14:07,680
uh we don't have multicast in kubernetes

355
00:14:06,720 --> 00:14:09,760
for the moment

356
00:14:07,680 --> 00:14:11,040
uh so basically uh you have to wait you

357
00:14:09,760 --> 00:14:14,399
have to i

358
00:14:11,040 --> 00:14:16,880
this guy has to discover this guy so

359
00:14:14,399 --> 00:14:18,480
uh you can use the kubernetes api to do

360
00:14:16,880 --> 00:14:22,560
that this is very easy

361
00:14:18,480 --> 00:14:23,760
uh it's it's the internal things it's

362
00:14:22,560 --> 00:14:26,160
like uh

363
00:14:23,760 --> 00:14:26,959
this is like you make a get uh well you

364
00:14:26,160 --> 00:14:28,399
need to

365
00:14:26,959 --> 00:14:30,000
need to be encrypted and all that stuff

366
00:14:28,399 --> 00:14:32,720
but this is a decrypted version of

367
00:14:30,000 --> 00:14:33,920
it the date is wrong because basically

368
00:14:32,720 --> 00:14:37,360
it was a try without

369
00:14:33,920 --> 00:14:39,360
the uh the clock working uh

370
00:14:37,360 --> 00:14:40,880
and you can see that he's going to tell

371
00:14:39,360 --> 00:14:44,399
some information like

372
00:14:40,880 --> 00:14:45,760
where it's running um especially what i

373
00:14:44,399 --> 00:14:48,399
want to know it's the point

374
00:14:45,760 --> 00:14:50,079
the pod ip which is the the ip inside

375
00:14:48,399 --> 00:14:52,399
the kubernetes network

376
00:14:50,079 --> 00:14:54,000
so basically that with this i'm going to

377
00:14:52,399 --> 00:14:57,279
be able to find

378
00:14:54,000 --> 00:14:59,760
uh from this guy where is this guy at

379
00:14:57,279 --> 00:15:01,680
which ip it is so i can

380
00:14:59,760 --> 00:15:03,360
exchange the session information so when

381
00:15:01,680 --> 00:15:06,000
i will run my small

382
00:15:03,360 --> 00:15:06,800
application on my http i will basically

383
00:15:06,000 --> 00:15:09,920
be able

384
00:15:06,800 --> 00:15:12,479
to to arrive on the right tomcat and

385
00:15:09,920 --> 00:15:14,079
on one tomcat but i will have the right

386
00:15:12,480 --> 00:15:15,680
session information on both

387
00:15:14,079 --> 00:15:16,959
so basically i don't care on which one

388
00:15:15,680 --> 00:15:17,760
i'm arriving because i've been

389
00:15:16,959 --> 00:15:20,719
exchanging the

390
00:15:17,760 --> 00:15:20,720
session information

391
00:15:20,959 --> 00:15:24,160
qbp is a it's a bit tricky because you

392
00:15:23,120 --> 00:15:25,760
need some permissions

393
00:15:24,160 --> 00:15:27,360
so in this case it's not a big problem

394
00:15:25,760 --> 00:15:28,800
but if you're running a real

395
00:15:27,360 --> 00:15:31,040
on a real cloud you won't have those

396
00:15:28,800 --> 00:15:33,040
permissions uh you will not

397
00:15:31,040 --> 00:15:34,240
ask your administrator so that he gave

398
00:15:33,040 --> 00:15:36,160
it to you

399
00:15:34,240 --> 00:15:37,360
so there's another way to discover the

400
00:15:36,160 --> 00:15:40,480
net they also know this is

401
00:15:37,360 --> 00:15:42,880
just uh basically uh winami

402
00:15:40,480 --> 00:15:44,560
uh qb ping you can look for it uh it has

403
00:15:42,880 --> 00:15:46,959
been invented by the uh

404
00:15:44,560 --> 00:15:48,160
infinity span guys so basically uh yeah

405
00:15:46,959 --> 00:15:51,279
you just make a

406
00:15:48,160 --> 00:15:52,160
uh ns lookup so basically well this is

407
00:15:51,279 --> 00:15:54,480
uh

408
00:15:52,160 --> 00:15:55,279
this is openshift example uh it works

409
00:15:54,480 --> 00:15:57,440
the same way

410
00:15:55,279 --> 00:15:59,920
uh well the command is a bit different

411
00:15:57,440 --> 00:16:01,680
uh so basically you make a ns lookup uh

412
00:15:59,920 --> 00:16:03,680
on your namespace and then you're going

413
00:16:01,680 --> 00:16:05,920
to find the tomcat this is the way

414
00:16:03,680 --> 00:16:07,359
the this guy is going to discover this

415
00:16:05,920 --> 00:16:09,839
guy and this guy is going to discover

416
00:16:07,360 --> 00:16:09,839
this guy

417
00:16:11,120 --> 00:16:15,199
so in the in my demo in the next page

418
00:16:13,199 --> 00:16:15,599
i'm going to uh to see i'm going to i

419
00:16:15,199 --> 00:16:18,719
have

420
00:16:15,600 --> 00:16:21,040
http running here uh this httpd

421
00:16:18,720 --> 00:16:22,399
is going to be able to find uh the

422
00:16:21,040 --> 00:16:26,399
different uh

423
00:16:22,399 --> 00:16:28,800
load balancer uh in uh

424
00:16:26,399 --> 00:16:31,839
in i i need to start the demo otherwise

425
00:16:28,800 --> 00:16:31,839
i will run out of time

426
00:16:34,480 --> 00:16:39,680
i will run out of time now okay

427
00:16:37,519 --> 00:16:39,680
so

428
00:16:49,759 --> 00:16:54,959
so we are basically i'm i'm i'm in my

429
00:16:52,800 --> 00:16:58,000
kubernetes uh

430
00:16:54,959 --> 00:17:01,439
clown and i'm i'm starting uh

431
00:16:58,000 --> 00:17:03,519
my boats um and uh

432
00:17:01,440 --> 00:17:04,559
you can see basically what did i do it

433
00:17:03,519 --> 00:17:07,599
create a namespace

434
00:17:04,559 --> 00:17:11,439
put it set on internet space uh then

435
00:17:07,599 --> 00:17:14,719
it's it start uh it's up the tomcat

436
00:17:11,439 --> 00:17:16,640
uh pods uh and

437
00:17:14,720 --> 00:17:19,679
create a different service we create one

438
00:17:16,640 --> 00:17:22,720
service which is a dns service so that

439
00:17:19,679 --> 00:17:26,319
the ns lookup will work on both of these

440
00:17:22,720 --> 00:17:27,760
and then i have the two tomcat which are

441
00:17:26,319 --> 00:17:33,840
starting which at some point

442
00:17:27,760 --> 00:17:33,840
some points are going to be up hopefully

443
00:17:36,240 --> 00:17:40,559
so one is running the author is not yet

444
00:17:38,240 --> 00:17:40,559
ready

445
00:17:40,720 --> 00:17:44,240
okay at some point they're going to be

446
00:17:42,080 --> 00:17:46,399
ready

447
00:17:44,240 --> 00:17:47,360
so what time what you do in the what you

448
00:17:46,400 --> 00:17:49,840
do in um

449
00:17:47,360 --> 00:17:51,039
uh in kubernetes it's like basically

450
00:17:49,840 --> 00:17:54,399
you're going to have a

451
00:17:51,039 --> 00:17:57,520
uh one kubernetes proxy on each

452
00:17:54,400 --> 00:17:58,960
of those running is knowing uh the other

453
00:17:57,520 --> 00:18:01,120
node so basically

454
00:17:58,960 --> 00:18:02,799
what we do is like we you can connect on

455
00:18:01,120 --> 00:18:06,799
any of

456
00:18:02,799 --> 00:18:11,200
of of those members of the uh of your uh

457
00:18:06,799 --> 00:18:13,918
of your cloud uh with the right port

458
00:18:11,200 --> 00:18:14,880
so to access to the service so basically

459
00:18:13,919 --> 00:18:17,919
to create my

460
00:18:14,880 --> 00:18:18,480
uh to make my httpd which is running

461
00:18:17,919 --> 00:18:21,039
here

462
00:18:18,480 --> 00:18:22,720
distributing the the load between the uh

463
00:18:21,039 --> 00:18:23,440
the two tomcat i don't care i'm going to

464
00:18:22,720 --> 00:18:27,039
tell him

465
00:18:23,440 --> 00:18:29,679
like any of those member of my cloud

466
00:18:27,039 --> 00:18:31,679
is able to do uh the routing this this

467
00:18:29,679 --> 00:18:33,600
is uh kubernetes which does the routing

468
00:18:31,679 --> 00:18:36,000
for me

469
00:18:33,600 --> 00:18:38,799
uh what i like to mention is like um you

470
00:18:36,000 --> 00:18:40,960
need a docker registry local registry uh

471
00:18:38,799 --> 00:18:42,799
is running on this box and it's very

472
00:18:40,960 --> 00:18:45,039
easy it's a sample command

473
00:18:42,799 --> 00:18:46,160
uh you you start a docker registry

474
00:18:45,039 --> 00:18:47,919
docker run

475
00:18:46,160 --> 00:18:49,760
on the port uh you have to be a bit

476
00:18:47,919 --> 00:18:51,039
careful so that kubernetes does not

477
00:18:49,760 --> 00:18:54,160
complain because it

478
00:18:51,039 --> 00:18:55,520
it's a demo so it's unsecure uh one

479
00:18:54,160 --> 00:18:58,559
minute it's unsecured by

480
00:18:55,520 --> 00:18:59,520
on purpose uh you pull the image and

481
00:18:58,559 --> 00:19:01,520
then the things

482
00:18:59,520 --> 00:19:11,840
have been running so now my demo should

483
00:19:01,520 --> 00:19:11,840
be ready

484
00:19:16,240 --> 00:19:21,600
so normally uh i could join my httpd

485
00:19:23,200 --> 00:19:29,440
then and then this is the tomcat running

486
00:19:26,559 --> 00:19:30,240
and when i refresh a bunch of time it

487
00:19:29,440 --> 00:19:32,080
should be

488
00:19:30,240 --> 00:19:33,520
the counter should be increasing and it

489
00:19:32,080 --> 00:19:34,960
should be moving from one node to the

490
00:19:33,520 --> 00:19:38,000
other

491
00:19:34,960 --> 00:19:38,880
and set it so basically uh i have i've

492
00:19:38,000 --> 00:19:40,720
proven that

493
00:19:38,880 --> 00:19:42,880
my tomcat software is working and then

494
00:19:40,720 --> 00:19:46,160
the session is shared between the two

495
00:19:42,880 --> 00:19:46,880
uh uh nodes which which are running

496
00:19:46,160 --> 00:19:48,559
there and

497
00:19:46,880 --> 00:19:50,720
chair between the two ports it's the

498
00:19:48,559 --> 00:19:52,320
same if i would run 10 port if i scale

499
00:19:50,720 --> 00:19:55,200
up as i have only

500
00:19:52,320 --> 00:19:56,720
two nodes i can i will have uh for if i

501
00:19:55,200 --> 00:19:58,160
scale to three i will have a two-tone

502
00:19:56,720 --> 00:19:59,679
cut running on this one maybe or

503
00:19:58,160 --> 00:20:01,120
two-tone category on this one and one on

504
00:19:59,679 --> 00:20:04,880
the other

505
00:20:01,120 --> 00:20:05,939
and i guess i'm out of time

506
00:20:04,880 --> 00:20:15,890
yes

507
00:20:05,940 --> 00:20:15,890
[Applause]

508
00:20:17,360 --> 00:20:21,840
if you have questions you can come to me

509
00:20:19,200 --> 00:20:21,840
after

