1
00:00:05,120 --> 00:00:08,639
all right

2
00:00:06,080 --> 00:00:10,400
um hey everyone i'm stefan greber i'm

3
00:00:08,639 --> 00:00:13,280
the project leader for lexd

4
00:00:10,400 --> 00:00:13,280
at canonical

5
00:00:14,559 --> 00:00:17,759
you might usually associate let's do

6
00:00:16,960 --> 00:00:20,000
with um

7
00:00:17,760 --> 00:00:21,359
containers that's no longer quite the

8
00:00:20,000 --> 00:00:21,760
case so we'll go through some of that

9
00:00:21,359 --> 00:00:24,560
and see

10
00:00:21,760 --> 00:00:26,480
how things line up now um first we'll

11
00:00:24,560 --> 00:00:28,160
start with

12
00:00:26,480 --> 00:00:31,039
you know what we are kind of best at

13
00:00:28,160 --> 00:00:32,558
really which is

14
00:00:31,039 --> 00:00:34,800
containers and system containers

15
00:00:32,558 --> 00:00:36,959
specifically um

16
00:00:34,800 --> 00:00:38,480
system containers you've got a shared

17
00:00:36,960 --> 00:00:39,920
canal they are containers they're the

18
00:00:38,480 --> 00:00:41,440
oldest type of container

19
00:00:39,920 --> 00:00:44,160
that's what you might associate with

20
00:00:41,440 --> 00:00:47,280
like bsd jails or zones

21
00:00:44,160 --> 00:00:48,800
open gz and these days alexey nxt they

22
00:00:47,280 --> 00:00:51,039
behave like a standard rune system in

23
00:00:48,800 --> 00:00:52,718
much the same way as virtual machines do

24
00:00:51,039 --> 00:00:54,000
they're low overhead and there's no

25
00:00:52,719 --> 00:00:54,800
virtualization i've had any of that

26
00:00:54,000 --> 00:00:56,320
stuff going on

27
00:00:54,800 --> 00:00:58,239
and they're pretty easy to manage it's

28
00:00:56,320 --> 00:00:59,199
just a bunch of processes on the same

29
00:00:58,239 --> 00:01:01,120
camera

30
00:00:59,199 --> 00:01:03,039
so that's what we're mostly known for

31
00:01:01,120 --> 00:01:05,360
that we've been doing for a long time

32
00:01:03,039 --> 00:01:06,400
now on the other side um if you look at

33
00:01:05,360 --> 00:01:08,720
virtual machines

34
00:01:06,400 --> 00:01:11,200
you've got a bit more separation going

35
00:01:08,720 --> 00:01:13,840
on so better machines virtual hardware

36
00:01:11,200 --> 00:01:15,520
to some extent and virtual firmware or

37
00:01:13,840 --> 00:01:18,159
virtual firmware

38
00:01:15,520 --> 00:01:19,600
it is hardware it quickly requires

39
00:01:18,159 --> 00:01:21,680
acceleration to be

40
00:01:19,600 --> 00:01:23,119
meaningful you can run it's completely

41
00:01:21,680 --> 00:01:26,479
software but performance

42
00:01:23,119 --> 00:01:28,080
kind of sucks at that point um the main

43
00:01:26,479 --> 00:01:29,520
benefit obviously is you can run just

44
00:01:28,080 --> 00:01:32,320
about anything there is no

45
00:01:29,520 --> 00:01:33,280
constraint on it being linux of the

46
00:01:32,320 --> 00:01:35,439
right version and everything that

47
00:01:33,280 --> 00:01:37,119
containers do

48
00:01:35,439 --> 00:01:39,360
for in case anyone didn't know what a vm

49
00:01:37,119 --> 00:01:43,200
was

50
00:01:39,360 --> 00:01:45,759
now for as for legacy itself um

51
00:01:43,200 --> 00:01:47,280
it's a modern system container manager

52
00:01:45,759 --> 00:01:51,040
and vm manager now

53
00:01:47,280 --> 00:01:53,200
um it is written in go it's relies on

54
00:01:51,040 --> 00:01:55,119
on the container path uses libel xc to

55
00:01:53,200 --> 00:01:58,159
talk to the kernel and drive containers

56
00:01:55,119 --> 00:01:59,360
on the vm side we're using qmu to run

57
00:01:58,159 --> 00:02:02,719
virtual machines

58
00:01:59,360 --> 00:02:04,880
it exposes a rest api to our clients

59
00:02:02,719 --> 00:02:08,639
dress api has been designed to be quite

60
00:02:04,880 --> 00:02:10,560
simple with multiple bindings available

61
00:02:08,639 --> 00:02:13,200
and we've got where the support in a

62
00:02:10,560 --> 00:02:16,239
number of tools up there open nebula

63
00:02:13,200 --> 00:02:17,519
ansible on cli or whatever other tools

64
00:02:16,239 --> 00:02:19,599
you might want to run

65
00:02:17,520 --> 00:02:20,560
and it's designed so that you can run

66
00:02:19,599 --> 00:02:23,119
multiple nxt

67
00:02:20,560 --> 00:02:23,760
servers or like i will just on your

68
00:02:23,120 --> 00:02:27,360
laptop on

69
00:02:23,760 --> 00:02:28,799
multiple machines and support migration

70
00:02:27,360 --> 00:02:31,599
and operation across multiple

71
00:02:28,800 --> 00:02:32,959
systems either just individual systems

72
00:02:31,599 --> 00:02:36,160
that then exchange

73
00:02:32,959 --> 00:02:38,560
containers and vms or any images or

74
00:02:36,160 --> 00:02:40,480
as a unified cluster that will also goes

75
00:02:38,560 --> 00:02:42,400
through entertainment

76
00:02:40,480 --> 00:02:44,000
now for where you might have seen next

77
00:02:42,400 --> 00:02:46,239
day um

78
00:02:44,000 --> 00:02:47,280
lexde is used on chromebooks so when you

79
00:02:46,239 --> 00:02:48,720
install linux

80
00:02:47,280 --> 00:02:51,440
on a chromebook for example it

81
00:02:48,720 --> 00:02:53,519
effectively runs a lxd host that then

82
00:02:51,440 --> 00:02:55,599
runs a debian based container

83
00:02:53,519 --> 00:02:57,200
with a lot of fancy pass-through

84
00:02:55,599 --> 00:03:00,480
features in place there to

85
00:02:57,200 --> 00:03:01,920
get you gpu usb whatever access all that

86
00:03:00,480 --> 00:03:03,440
stuff going on

87
00:03:01,920 --> 00:03:05,599
they also have nice integration to do

88
00:03:03,440 --> 00:03:08,319
snapshots and backups and file transfers

89
00:03:05,599 --> 00:03:09,920
straight into the chrome interface

90
00:03:08,319 --> 00:03:12,159
another place you might have seen next

91
00:03:09,920 --> 00:03:13,359
other than your own systems is in travis

92
00:03:12,159 --> 00:03:16,480
ci

93
00:03:13,360 --> 00:03:19,519
so if you're on travis and you run

94
00:03:16,480 --> 00:03:22,399
jobs that are known x86 so if you run

95
00:03:19,519 --> 00:03:26,000
arm 64 if you run power pc or if you run

96
00:03:22,400 --> 00:03:27,680
an ibm s390 those workloads on travis

97
00:03:26,000 --> 00:03:29,840
are running inside lexi containers right

98
00:03:27,680 --> 00:03:29,840
now

99
00:03:31,120 --> 00:03:35,280
okay uh back to what xd is so this is

100
00:03:34,159 --> 00:03:37,840
designed

101
00:03:35,280 --> 00:03:39,920
to be very simple to use it's got a

102
00:03:37,840 --> 00:03:43,200
clean camera interface simple rest api

103
00:03:39,920 --> 00:03:45,920
and pretty clear terminology um

104
00:03:43,200 --> 00:03:48,000
it's in many ways it acts like a small

105
00:03:45,920 --> 00:03:49,599
local cloud on your system

106
00:03:48,000 --> 00:03:52,000
originally only with containers now

107
00:03:49,599 --> 00:03:54,399
we've got multiple options there

108
00:03:52,000 --> 00:03:56,400
it is fast so it's image-based we

109
00:03:54,400 --> 00:03:58,319
support multiple storage drivers

110
00:03:56,400 --> 00:03:59,599
with whatever copy and write feature

111
00:03:58,319 --> 00:04:01,839
they might have will

112
00:03:59,599 --> 00:04:03,439
support those features for network

113
00:04:01,840 --> 00:04:06,239
migration and

114
00:04:03,439 --> 00:04:08,560
we support direct access to hardware

115
00:04:06,239 --> 00:04:11,599
whenever possible

116
00:04:08,560 --> 00:04:13,120
we usually aim to be safe by default so

117
00:04:11,599 --> 00:04:14,319
for containers that means using all the

118
00:04:13,120 --> 00:04:18,000
kind of security features

119
00:04:14,319 --> 00:04:21,039
all the name spaces lsm secamp

120
00:04:18,000 --> 00:04:24,000
capabilities etc um

121
00:04:21,040 --> 00:04:25,280
for virtual machines we do intend to use

122
00:04:24,000 --> 00:04:26,000
more of that we've not actually done

123
00:04:25,280 --> 00:04:28,799
apparently

124
00:04:26,000 --> 00:04:30,000
and this insect component qmu yet it's

125
00:04:28,800 --> 00:04:31,520
coming very soon

126
00:04:30,000 --> 00:04:33,759
right now we do privilege dropping and

127
00:04:31,520 --> 00:04:37,758
through it and then the vm itself

128
00:04:33,759 --> 00:04:39,600
uses secure boot in the vm um

129
00:04:37,759 --> 00:04:41,759
and it's pretty scalable you can go from

130
00:04:39,600 --> 00:04:45,120
like a single install on your laptop

131
00:04:41,759 --> 00:04:48,800
to clusters of hundreds of nodes

132
00:04:45,120 --> 00:04:51,600
running tens of thousands of containers

133
00:04:48,800 --> 00:04:53,280
and these days makes virtual machines as

134
00:04:51,600 --> 00:04:55,440
far as what we can run so that's

135
00:04:53,280 --> 00:04:56,320
the picture for containers right now we

136
00:04:55,440 --> 00:04:59,040
do generate

137
00:04:56,320 --> 00:05:00,880
about 300 daily images of different

138
00:04:59,040 --> 00:05:03,600
distros and

139
00:05:00,880 --> 00:05:06,000
releases on six different architectures

140
00:05:03,600 --> 00:05:06,000
daily

141
00:05:06,160 --> 00:05:11,360
for vms we will get there we will we are

142
00:05:09,280 --> 00:05:14,159
working on our tooling right now so that

143
00:05:11,360 --> 00:05:16,800
it as it builds uh the container of real

144
00:05:14,160 --> 00:05:18,720
file system it then has a follow-up step

145
00:05:16,800 --> 00:05:20,000
of taking that path installing kernel

146
00:05:18,720 --> 00:05:21,919
bootloader

147
00:05:20,000 --> 00:05:24,479
and splitting that out as a vm image so

148
00:05:21,919 --> 00:05:26,799
we end up having the exact same

149
00:05:24,479 --> 00:05:29,360
content as far as the operating system

150
00:05:26,800 --> 00:05:31,280
for containers and virtual machines

151
00:05:29,360 --> 00:05:32,560
that's coming up soon right now the only

152
00:05:31,280 --> 00:05:33,758
image that works out of the box is

153
00:05:32,560 --> 00:05:35,520
ubuntu

154
00:05:33,759 --> 00:05:37,039
because we already had ready cloud

155
00:05:35,520 --> 00:05:39,840
images available in the right format and

156
00:05:37,039 --> 00:05:39,840
everything

157
00:05:41,919 --> 00:05:45,198
on the clustering side so that's an

158
00:05:43,360 --> 00:05:48,800
interesting aspect of legacy

159
00:05:45,199 --> 00:05:50,479
we we've got an extremely easy way to

160
00:05:48,800 --> 00:05:52,720
cluster multiple systems together we

161
00:05:50,479 --> 00:05:55,280
don't have any external dependencies

162
00:05:52,720 --> 00:05:57,039
it's using dqlite as a cluster database

163
00:05:55,280 --> 00:05:59,599
there was a talk in the main track about

164
00:05:57,039 --> 00:06:02,318
an hour and a half ago on that database

165
00:05:59,600 --> 00:06:04,479
that's what we use for lxd clustering

166
00:06:02,319 --> 00:06:06,720
the api when you talk to a cluster the

167
00:06:04,479 --> 00:06:09,039
same as the one you would talk to

168
00:06:06,720 --> 00:06:10,400
just a single node next on your laptop

169
00:06:09,039 --> 00:06:12,719
um

170
00:06:10,400 --> 00:06:14,638
if you can actually take a command line

171
00:06:12,720 --> 00:06:16,319
or script or whatever that doesn't know

172
00:06:14,639 --> 00:06:17,520
what a cluster is and you run it against

173
00:06:16,319 --> 00:06:19,039
a cluster and it will just work the

174
00:06:17,520 --> 00:06:20,479
cluster will just can do some amount of

175
00:06:19,039 --> 00:06:22,479
balancing for you and try to

176
00:06:20,479 --> 00:06:24,800
make its best guess as to where to put

177
00:06:22,479 --> 00:06:27,199
things if you are cluster aware you can

178
00:06:24,800 --> 00:06:28,880
obviously do a lot more and like pick

179
00:06:27,199 --> 00:06:30,639
exactly what motion you want and get

180
00:06:28,880 --> 00:06:32,080
other details and stuff on the different

181
00:06:30,639 --> 00:06:33,759
cluster nodes

182
00:06:32,080 --> 00:06:35,758
but you don't have to and just like a

183
00:06:33,759 --> 00:06:38,880
superset of the api effectively

184
00:06:35,759 --> 00:06:40,639
um it can scale uh to

185
00:06:38,880 --> 00:06:41,840
you know thousands of containers on

186
00:06:40,639 --> 00:06:43,680
those and off nodes we actually have

187
00:06:41,840 --> 00:06:45,280
gone all the way to 100 nodes and like

188
00:06:43,680 --> 00:06:47,680
tens of thousands of containers now

189
00:06:45,280 --> 00:06:49,440
it that works fine uh density of virtual

190
00:06:47,680 --> 00:06:52,000
machines obviously goes down because you

191
00:06:49,440 --> 00:06:53,840
can't quite run tens thousands well

192
00:06:52,000 --> 00:06:56,800
multiple thousands of

193
00:06:53,840 --> 00:06:58,479
full um os virtual machines on one

194
00:06:56,800 --> 00:07:01,280
system it gets a bit tricky

195
00:06:58,479 --> 00:07:02,318
um but that's not really a lxd problem

196
00:07:01,280 --> 00:07:03,679
so much as

197
00:07:02,319 --> 00:07:05,520
how much your hardware can actually

198
00:07:03,680 --> 00:07:07,199
achieve um

199
00:07:05,520 --> 00:07:08,479
and we've got support for multiple

200
00:07:07,199 --> 00:07:09,680
architectures and mixing multiple

201
00:07:08,479 --> 00:07:11,440
architectures within the same cluster

202
00:07:09,680 --> 00:07:13,039
then nxt does the right thing based on

203
00:07:11,440 --> 00:07:15,919
what image you're using it picks

204
00:07:13,039 --> 00:07:18,560
what node is actually capable of running

205
00:07:15,919 --> 00:07:18,560
that workload

206
00:07:18,720 --> 00:07:24,150
now for the vm side itself so um

207
00:07:22,080 --> 00:07:26,080
as i mentioned briefly

208
00:07:24,150 --> 00:07:28,479
[Music]

209
00:07:26,080 --> 00:07:29,758
there we just like we've gone pretty

210
00:07:28,479 --> 00:07:31,520
much legacy free because

211
00:07:29,759 --> 00:07:33,440
it's new to us we don't we don't really

212
00:07:31,520 --> 00:07:36,000
need to start supporting

213
00:07:33,440 --> 00:07:37,520
old machine types to run dust or windows

214
00:07:36,000 --> 00:07:38,479
95 or something it's not something we

215
00:07:37,520 --> 00:07:40,719
really care about

216
00:07:38,479 --> 00:07:42,880
we care about running acting like a

217
00:07:40,720 --> 00:07:44,479
modern local cloud effectively

218
00:07:42,880 --> 00:07:46,639
and so only really care about modern

219
00:07:44,479 --> 00:07:50,080
distros which means that we've

220
00:07:46,639 --> 00:07:52,160
like for both x86 and um we've gone with

221
00:07:50,080 --> 00:07:53,599
uefi as the only firmware we have

222
00:07:52,160 --> 00:07:55,280
it's got secure boots that you can turn

223
00:07:53,599 --> 00:07:57,280
off if you

224
00:07:55,280 --> 00:07:58,638
don't have a workflow that's that can

225
00:07:57,280 --> 00:08:01,919
boot will take your boot

226
00:07:58,639 --> 00:08:04,080
we do vert io devices only and

227
00:08:01,919 --> 00:08:06,000
currently we're based on qmu 4.2

228
00:08:04,080 --> 00:08:07,520
technically you can go to lower qmus but

229
00:08:06,000 --> 00:08:10,400
that's what we

230
00:08:07,520 --> 00:08:10,400
test with really

231
00:08:10,800 --> 00:08:14,479
api and everything is is pretty much the

232
00:08:13,280 --> 00:08:16,239
same as containers so

233
00:08:14,479 --> 00:08:17,359
so far all the tools we've seen that

234
00:08:16,240 --> 00:08:18,479
we're interacting with containers can

235
00:08:17,360 --> 00:08:21,440
track with vms and

236
00:08:18,479 --> 00:08:23,120
they don't really notice a difference um

237
00:08:21,440 --> 00:08:24,719
so there's no particular vm knowledge

238
00:08:23,120 --> 00:08:26,800
needed for anything that's

239
00:08:24,720 --> 00:08:28,479
like any tooling that story targets like

240
00:08:26,800 --> 00:08:30,400
they can target like the vms and it will

241
00:08:28,479 --> 00:08:33,760
just work the same way effectively

242
00:08:30,400 --> 00:08:36,159
um the vms integrates seamlessly

243
00:08:33,760 --> 00:08:37,760
with existing nextd configuration you

244
00:08:36,159 --> 00:08:38,880
might have so your lxd networks your

245
00:08:37,760 --> 00:08:41,599
access storage pools

246
00:08:38,880 --> 00:08:43,279
your plexi projects like the profiles

247
00:08:41,599 --> 00:08:44,800
and configuration

248
00:08:43,279 --> 00:08:46,000
those are effectively shared between vm

249
00:08:44,800 --> 00:08:47,439
and containers on the same system you

250
00:08:46,000 --> 00:08:47,760
don't need to duplicate anything which

251
00:08:47,440 --> 00:08:50,959
is

252
00:08:47,760 --> 00:08:52,399
really the main benefit for using lexi

253
00:08:50,959 --> 00:08:53,680
to manage your vms if you had two

254
00:08:52,399 --> 00:08:55,040
different solutions on one system it

255
00:08:53,680 --> 00:08:57,839
gets a bit annoying to man

256
00:08:55,040 --> 00:08:58,240
to manage but now you can just use one

257
00:08:57,839 --> 00:09:01,040
thing

258
00:08:58,240 --> 00:09:02,640
and does it all next dvm support was

259
00:09:01,040 --> 00:09:05,599
introduced in lxd

260
00:09:02,640 --> 00:09:05,920
319 which was released mid-january so

261
00:09:05,600 --> 00:09:07,519
it's

262
00:09:05,920 --> 00:09:08,959
pretty new we've been working on it for

263
00:09:07,519 --> 00:09:12,399
maybe the past six months or so

264
00:09:08,959 --> 00:09:14,079
on and off um ironically supporting vms

265
00:09:12,399 --> 00:09:15,760
very easy as far as we're concerned like

266
00:09:14,080 --> 00:09:18,959
the actual work to drive

267
00:09:15,760 --> 00:09:20,319
qmu instead of lxc uh and running

268
00:09:18,959 --> 00:09:22,319
virtual machines

269
00:09:20,320 --> 00:09:23,600
probably took us just a few days the

270
00:09:22,320 --> 00:09:25,279
main issue we had was actually

271
00:09:23,600 --> 00:09:26,240
refactoring our storage layer so that we

272
00:09:25,279 --> 00:09:28,320
can store

273
00:09:26,240 --> 00:09:29,600
blocks or file systems and handle that

274
00:09:28,320 --> 00:09:34,160
properly that's what took us

275
00:09:29,600 --> 00:09:34,160
way longer than the vm piece ever took

276
00:09:34,399 --> 00:09:38,959
um review of the links the api and can

277
00:09:37,680 --> 00:09:42,239
how things are structured

278
00:09:38,959 --> 00:09:43,518
um so instances is obviously what most

279
00:09:42,240 --> 00:09:45,760
people care about that's either

280
00:09:43,519 --> 00:09:47,519
containers or virtual machines so it's

281
00:09:45,760 --> 00:09:49,279
different instance type that indicates

282
00:09:47,519 --> 00:09:52,399
which one of the two it is

283
00:09:49,279 --> 00:09:54,399
you can snapshot or back them up they're

284
00:09:52,399 --> 00:09:56,080
created from images images can have nice

285
00:09:54,399 --> 00:10:00,080
names so you don't need to

286
00:09:56,080 --> 00:10:00,080
give them like a sha-256 or whatever

287
00:10:00,560 --> 00:10:04,079
it can be clustered so we've got the

288
00:10:02,079 --> 00:10:06,079
cluster level part of the api

289
00:10:04,079 --> 00:10:08,399
that lists all the nodes and how things

290
00:10:06,079 --> 00:10:08,399
behave

291
00:10:08,959 --> 00:10:13,518
on the you can also manage

292
00:10:12,000 --> 00:10:16,959
networks that creates bridges that you

293
00:10:13,519 --> 00:10:20,480
can then contact connect your instances

294
00:10:16,959 --> 00:10:22,560
two um storage pools

295
00:10:20,480 --> 00:10:24,240
and that's pretty obvious what they're

296
00:10:22,560 --> 00:10:25,359
used for but you can create more storage

297
00:10:24,240 --> 00:10:26,880
pools on different storage drivers

298
00:10:25,360 --> 00:10:28,560
different block devices and then assign

299
00:10:26,880 --> 00:10:30,640
containers or vms to that

300
00:10:28,560 --> 00:10:32,160
uh you can create custom volumes as well

301
00:10:30,640 --> 00:10:34,720
and then attach to your

302
00:10:32,160 --> 00:10:36,640
instances and those custom values can

303
00:10:34,720 --> 00:10:38,480
also be snapshotted

304
00:10:36,640 --> 00:10:39,760
then we've got some amount of internal

305
00:10:38,480 --> 00:10:40,640
components that are mostly for

306
00:10:39,760 --> 00:10:44,240
authentication

307
00:10:40,640 --> 00:10:48,000
and tracking of what's going on and some

308
00:10:44,240 --> 00:10:49,760
apis against the um the instance itself

309
00:10:48,000 --> 00:10:51,680
so for things like file transfer

310
00:10:49,760 --> 00:10:53,040
executing a command inside it attaching

311
00:10:51,680 --> 00:10:54,800
to the console or publishing it as an

312
00:10:53,040 --> 00:10:57,680
image

313
00:10:54,800 --> 00:11:01,839
all right now for the interesting part

314
00:10:57,680 --> 00:11:01,839
you can see that stuff actually works

315
00:11:03,200 --> 00:11:07,839
okay so um what i'll be doing is i've

316
00:11:06,959 --> 00:11:09,599
got

317
00:11:07,839 --> 00:11:11,600
hoping network works it does i've got

318
00:11:09,600 --> 00:11:13,040
two systems so we'll just do an initial

319
00:11:11,600 --> 00:11:14,720
install so

320
00:11:13,040 --> 00:11:16,000
they've never really done an electric

321
00:11:14,720 --> 00:11:18,959
thing before like this is installed but

322
00:11:16,000 --> 00:11:18,959
never been configured

323
00:11:19,600 --> 00:11:23,200
yeah i can try to do that

324
00:11:23,920 --> 00:11:28,240
yeah it's probably about as big as it's

325
00:11:26,720 --> 00:11:29,839
gonna get without it cutting everything

326
00:11:28,240 --> 00:11:32,959
afterwards

327
00:11:29,839 --> 00:11:34,320
yeah um so you can see because i've got

328
00:11:32,959 --> 00:11:34,880
two systems i might just like create a

329
00:11:34,320 --> 00:11:37,200
cluster

330
00:11:34,880 --> 00:11:38,000
it's so easy why not uh so we'll just

331
00:11:37,200 --> 00:11:41,279
create one

332
00:11:38,000 --> 00:11:43,839
i just need to enter some ip just

333
00:11:41,279 --> 00:11:45,839
this one um we're not joining an

334
00:11:43,839 --> 00:11:49,279
existing cluster we're creating one

335
00:11:45,839 --> 00:11:50,399
choose a password uh yeah storage would

336
00:11:49,279 --> 00:11:52,880
be nice

337
00:11:50,399 --> 00:11:53,760
you can edit pick whatever it wants zfs

338
00:11:52,880 --> 00:11:57,600
is what it

339
00:11:53,760 --> 00:11:58,319
prefers on this one default size is okay

340
00:11:57,600 --> 00:12:00,800
and the

341
00:11:58,320 --> 00:12:01,360
rest should be mostly fine all out of

342
00:12:00,800 --> 00:12:06,319
the box

343
00:12:01,360 --> 00:12:06,320
there we go and that failed because

344
00:12:07,360 --> 00:12:10,720
well because it's a demo yeah and also

345
00:12:08,800 --> 00:12:13,599
it's cutting on my screen which is not

346
00:12:10,720 --> 00:12:13,600
super convenient

347
00:12:14,399 --> 00:12:17,839
yeah okay that's like annoying

348
00:12:18,079 --> 00:12:22,319
what's the actual error oh there you go

349
00:12:20,720 --> 00:12:24,000
kind of the sound request oh did i just

350
00:12:22,320 --> 00:12:25,760
did the server actually change ip could

351
00:12:24,000 --> 00:12:30,959
that be annoying

352
00:12:25,760 --> 00:12:30,959
no i didn't okay let's try that again

353
00:12:32,480 --> 00:12:35,760
i probably just type out the ip address

354
00:12:34,240 --> 00:12:39,519
at that

355
00:12:35,760 --> 00:12:41,200
oh was it hold on yeah it is 46. so they

356
00:12:39,519 --> 00:12:43,200
actually swapped ips between the two

357
00:12:41,200 --> 00:12:44,800
that's nice

358
00:12:43,200 --> 00:12:47,120
because i redeployed the servers and

359
00:12:44,800 --> 00:12:47,120
yeah

360
00:12:47,279 --> 00:12:54,079
okay so not joining

361
00:12:50,839 --> 00:12:56,240
cluster i want to set it up i just hope

362
00:12:54,079 --> 00:12:57,920
it didn't get too far in setup because

363
00:12:56,240 --> 00:13:01,120
otherwise it might get a bit confused

364
00:12:57,920 --> 00:13:02,560
now let's see

365
00:13:01,120 --> 00:13:05,040
please don't be confused please don't be

366
00:13:02,560 --> 00:13:05,040
confused

367
00:13:05,120 --> 00:13:09,279
okay all right so i just need to update

368
00:13:07,600 --> 00:13:11,920
my notes because those ips are not

369
00:13:09,279 --> 00:13:14,000
the way i was expecting them okay so

370
00:13:11,920 --> 00:13:16,800
let's go on to the second one now

371
00:13:14,000 --> 00:13:18,000
and hopefully this one is 47. it is

372
00:13:16,800 --> 00:13:19,680
sweet

373
00:13:18,000 --> 00:13:22,880
okay so they literally just swapped like

374
00:13:19,680 --> 00:13:22,880
these okay

375
00:13:24,880 --> 00:13:28,480
okay um yes we're joining an existing

376
00:13:27,680 --> 00:13:31,599
one this time

377
00:13:28,480 --> 00:13:35,279
which is on 1646

378
00:13:31,600 --> 00:13:35,600
yes the password there's nothing to wipe

379
00:13:35,279 --> 00:13:40,000
but

380
00:13:35,600 --> 00:13:40,000
sure and okay

381
00:13:42,480 --> 00:13:46,240
and yeah we've got the cluster working

382
00:13:45,199 --> 00:13:48,399
so now if i do

383
00:13:46,240 --> 00:13:49,600
cluster list we'll see we've got two

384
00:13:48,399 --> 00:13:51,920
systems join in there

385
00:13:49,600 --> 00:13:53,600
the first one is running the database

386
00:13:51,920 --> 00:13:54,719
because you need quorum for the database

387
00:13:53,600 --> 00:13:55,680
and you can't have chrome when you have

388
00:13:54,720 --> 00:13:57,440
only two systems

389
00:13:55,680 --> 00:13:58,880
only one runs the database once you

390
00:13:57,440 --> 00:14:00,320
reach three then all three render

391
00:13:58,880 --> 00:14:03,839
database

392
00:14:00,320 --> 00:14:05,680
um so first thing we'll do is we're just

393
00:14:03,839 --> 00:14:08,480
going to edit the default

394
00:14:05,680 --> 00:14:09,599
uh config for instances to add some a

395
00:14:08,480 --> 00:14:11,839
bit of

396
00:14:09,600 --> 00:14:14,800
cloudant magic in there that's normally

397
00:14:11,839 --> 00:14:17,120
not needed if you only run containers

398
00:14:14,800 --> 00:14:19,359
also that the text editor is messed up

399
00:14:17,120 --> 00:14:21,680
hold on

400
00:14:19,360 --> 00:14:21,680
okay

401
00:14:22,720 --> 00:14:26,480
okay um but because we're running

402
00:14:25,360 --> 00:14:29,279
virtual machines and i don't

403
00:14:26,480 --> 00:14:30,000
have any other way to get that config

404
00:14:29,279 --> 00:14:32,480
that effectively

405
00:14:30,000 --> 00:14:33,600
just sets the window password to ubuntu

406
00:14:32,480 --> 00:14:34,880
through cloud in it

407
00:14:33,600 --> 00:14:36,959
so just put that in place in that

408
00:14:34,880 --> 00:14:41,360
profile then

409
00:14:36,959 --> 00:14:45,359
let's create a container real quick

410
00:14:41,360 --> 00:14:47,600
so just pulling a center state image

411
00:14:45,360 --> 00:14:47,600
okay

412
00:14:52,000 --> 00:14:54,560
there we go

413
00:14:56,079 --> 00:15:00,479
right so there we go central stage

414
00:14:59,440 --> 00:15:02,079
running in a container

415
00:15:00,480 --> 00:15:03,839
and now to show the difference with

416
00:15:02,079 --> 00:15:05,120
running a vm we effectively still tell

417
00:15:03,839 --> 00:15:07,440
it what we want and just do

418
00:15:05,120 --> 00:15:07,440
vm

419
00:15:09,920 --> 00:15:14,160
it's gonna go do the same thing

420
00:15:18,240 --> 00:15:22,880
um so good learning i'm gonna do things

421
00:15:20,480 --> 00:15:26,079
in parallel because running a bit

422
00:15:22,880 --> 00:15:26,720
out of time so as far as other things we

423
00:15:26,079 --> 00:15:30,079
can do

424
00:15:26,720 --> 00:15:31,120
so security secured phones because

425
00:15:30,079 --> 00:15:33,758
windows

426
00:15:31,120 --> 00:15:35,759
limit cpu so we're gonna that's on my

427
00:15:33,759 --> 00:15:38,480
own laptop i'm just spawning another vm

428
00:15:35,759 --> 00:15:40,000
based on the windows image i created but

429
00:15:38,480 --> 00:15:42,000
with four cpus eight gigs of ram

430
00:15:40,000 --> 00:15:43,279
and not turning off secure boots because

431
00:15:42,000 --> 00:15:45,519
otherwise the wh

432
00:15:43,279 --> 00:15:48,800
i don't have a whql driver for the disk

433
00:15:45,519 --> 00:15:48,800
so it's not happy and doesn't boot

434
00:15:49,199 --> 00:15:54,000
anyway um back to the cluster just

435
00:15:52,399 --> 00:15:57,440
waiting for that

436
00:15:54,000 --> 00:15:59,279
vm to start it's unpacking the image

437
00:15:57,440 --> 00:16:00,480
obviously vm image is quite a bit larger

438
00:15:59,279 --> 00:16:01,759
than just a container image it takes

439
00:16:00,480 --> 00:16:04,639
slightly longer

440
00:16:01,759 --> 00:16:05,839
there we go we need to add a config

441
00:16:04,639 --> 00:16:08,240
drive right now

442
00:16:05,839 --> 00:16:09,680
which gives it access to the cladding

443
00:16:08,240 --> 00:16:12,320
config so that's the

444
00:16:09,680 --> 00:16:15,439
we just added this device for that and

445
00:16:12,320 --> 00:16:15,440
then we can start the vm

446
00:16:21,040 --> 00:16:25,599
just takes a tiny bit come on that's

447
00:16:24,079 --> 00:16:27,120
running on really old outward it's like

448
00:16:25,600 --> 00:16:28,320
10 years old service that i've got

449
00:16:27,120 --> 00:16:31,839
laying around in the basement so it's

450
00:16:28,320 --> 00:16:37,839
a bit slow let's attach to the console

451
00:16:31,839 --> 00:16:37,839
so let's see grab it's booting

452
00:16:44,639 --> 00:16:52,560
and get to a login prompt eventually

453
00:16:50,240 --> 00:16:53,920
i didn't give it any extra cpu memory so

454
00:16:52,560 --> 00:16:55,119
it's running with one core and one gig

455
00:16:53,920 --> 00:16:58,000
of ram right now so

456
00:16:55,120 --> 00:16:59,920
it might have been a bit more generous

457
00:16:58,000 --> 00:17:03,040
to probably upgraded faster

458
00:16:59,920 --> 00:17:06,240
okay cladding it is running which means

459
00:17:03,040 --> 00:17:06,240
we're about to get a log in front

460
00:17:06,559 --> 00:17:19,839
come on you can do it

461
00:17:09,760 --> 00:17:23,599
you can do it there we go

462
00:17:19,839 --> 00:17:24,720
yeah oh that's interesting

463
00:17:23,599 --> 00:17:25,918
i think i'll probably raise something

464
00:17:24,720 --> 00:17:26,720
with cabinet anyway like the login from

465
00:17:25,919 --> 00:17:30,160
works fine

466
00:17:26,720 --> 00:17:33,840
um so now for the

467
00:17:30,160 --> 00:17:33,840
so right now if we look outside

468
00:17:35,440 --> 00:17:40,000
outside of this um we'll see the vm is

469
00:17:38,320 --> 00:17:42,159
running we've got its ip that's been

470
00:17:40,000 --> 00:17:44,480
retrieved from the dhcp server

471
00:17:42,160 --> 00:17:46,320
that's fine but if we try and look at

472
00:17:44,480 --> 00:17:48,080
more info on the vm it doesn't have the

473
00:17:46,320 --> 00:17:48,559
list of processes or any of the extra

474
00:17:48,080 --> 00:17:50,480
detail

475
00:17:48,559 --> 00:17:53,280
because it's a vm and it can't just

476
00:17:50,480 --> 00:17:55,440
attach to it like a container would

477
00:17:53,280 --> 00:17:56,960
um but that's where we can do things a

478
00:17:55,440 --> 00:17:59,039
bit different so we've got a 9p

479
00:17:56,960 --> 00:18:00,000
drive that's exposed by lexi out of the

480
00:17:59,039 --> 00:18:02,240
box

481
00:18:00,000 --> 00:18:04,160
uh with an install script that just adds

482
00:18:02,240 --> 00:18:07,440
some systemd units

483
00:18:04,160 --> 00:18:10,000
um which if we then reboot the vm

484
00:18:07,440 --> 00:18:11,840
it will start backup starting those

485
00:18:10,000 --> 00:18:13,360
units that will run a vm agent that then

486
00:18:11,840 --> 00:18:14,959
talks back to us

487
00:18:13,360 --> 00:18:17,520
while that's going on i can just show

488
00:18:14,960 --> 00:18:20,640
that local vm has started

489
00:18:17,520 --> 00:18:21,280
so windows 10 started with an ip because

490
00:18:20,640 --> 00:18:24,880
windows

491
00:18:21,280 --> 00:18:24,879
is weird and it can do ssh these days

492
00:18:25,120 --> 00:18:30,479
you can actually ssh into it

493
00:18:29,039 --> 00:18:32,240
if you prefer powershell you can also

494
00:18:30,480 --> 00:18:34,640
spawn it from there if i can type

495
00:18:32,240 --> 00:18:36,960
porsche properly

496
00:18:34,640 --> 00:18:38,400
there we go so that's the thing i can

497
00:18:36,960 --> 00:18:38,960
remember which is which there's partial

498
00:18:38,400 --> 00:18:44,160
exit and

499
00:18:38,960 --> 00:18:44,160
the other one is quit no exit exit okay

500
00:18:44,559 --> 00:18:48,960
obviously x3 rdp

501
00:18:54,840 --> 00:18:57,840
so

502
00:19:01,039 --> 00:19:06,879
so that's windows uh now back to the

503
00:19:05,120 --> 00:19:11,120
linux world so that vm should have

504
00:19:06,880 --> 00:19:12,720
rebooted yep water log in front

505
00:19:11,120 --> 00:19:14,159
now if we look at the list we should

506
00:19:12,720 --> 00:19:20,000
still see the same thing

507
00:19:14,160 --> 00:19:23,120
um let's see if that works

508
00:19:20,000 --> 00:19:24,640
yep so with that i just spawned the

509
00:19:23,120 --> 00:19:26,959
shell inside the vm

510
00:19:24,640 --> 00:19:28,400
um that's done through our agent in the

511
00:19:26,960 --> 00:19:30,480
vm so if you look at the process list

512
00:19:28,400 --> 00:19:32,160
you actually see bash being a child of

513
00:19:30,480 --> 00:19:34,799
legs the agent

514
00:19:32,160 --> 00:19:36,000
that's going through vsoc so even if

515
00:19:34,799 --> 00:19:37,600
you're

516
00:19:36,000 --> 00:19:40,480
if you look at the network i guess it's

517
00:19:37,600 --> 00:19:41,600
up but if we fix that

518
00:19:40,480 --> 00:19:43,679
like wait still have the share

519
00:19:41,600 --> 00:19:46,719
everything still works the same api can

520
00:19:43,679 --> 00:19:49,440
be used to do file modifications

521
00:19:46,720 --> 00:19:52,320
so you can pull a file through through

522
00:19:49,440 --> 00:19:54,640
it comes from the agent

523
00:19:52,320 --> 00:19:57,840
and just push back into the vm if we get

524
00:19:54,640 --> 00:20:00,320
the shell back inside it

525
00:19:57,840 --> 00:20:00,320
it's there

526
00:20:00,960 --> 00:20:04,080
that also gives us more detail so if you

527
00:20:02,559 --> 00:20:06,559
do info now it gives you

528
00:20:04,080 --> 00:20:08,399
a number of processes it gets you ip

529
00:20:06,559 --> 00:20:11,840
addresses volume interfaces

530
00:20:08,400 --> 00:20:11,840
counters and stats and stuff

531
00:20:12,240 --> 00:20:18,320
all right i need to kind of rush now

532
00:20:15,840 --> 00:20:21,199
because i'm really behind

533
00:20:18,320 --> 00:20:22,080
so what's next um we want images on all

534
00:20:21,200 --> 00:20:24,480
distros

535
00:20:22,080 --> 00:20:26,000
that's obviously not like priority we've

536
00:20:24,480 --> 00:20:27,840
wants to be able to live update a bunch

537
00:20:26,000 --> 00:20:28,799
of devices and configs on the vm like we

538
00:20:27,840 --> 00:20:31,600
do for containers

539
00:20:28,799 --> 00:20:33,600
right now you need to restart the vm um

540
00:20:31,600 --> 00:20:35,918
more security i mentioned app apparently

541
00:20:33,600 --> 00:20:37,039
comp we want to put those we've got all

542
00:20:35,919 --> 00:20:38,400
the generation code already for

543
00:20:37,039 --> 00:20:39,360
containers we just need to wrap the vms

544
00:20:38,400 --> 00:20:42,080
with it

545
00:20:39,360 --> 00:20:42,959
um number of feature gaps we've got

546
00:20:42,080 --> 00:20:44,399
around

547
00:20:42,960 --> 00:20:46,000
we've got compared to containers we want

548
00:20:44,400 --> 00:20:48,159
to to fill quickly

549
00:20:46,000 --> 00:20:50,480
and the agent right now only works on

550
00:20:48,159 --> 00:20:52,880
linux we want to make it work on windows

551
00:20:50,480 --> 00:20:54,799
um given that there's a new uh virtual

552
00:20:52,880 --> 00:20:56,000
vsoc driver for windows that's been in

553
00:20:54,799 --> 00:20:58,559
the works we

554
00:20:56,000 --> 00:20:59,840
hope to use that um legacy itself is

555
00:20:58,559 --> 00:21:02,080
available on linux mac

556
00:20:59,840 --> 00:21:03,199
and windows but the demon only runs on

557
00:21:02,080 --> 00:21:04,480
on linux

558
00:21:03,200 --> 00:21:07,120
but the other ones you can use the

559
00:21:04,480 --> 00:21:09,280
clients to connect to a remote next day

560
00:21:07,120 --> 00:21:11,199
um contributing to lexi it's written in

561
00:21:09,280 --> 00:21:11,600
go it's got it's fully translatable it's

562
00:21:11,200 --> 00:21:13,600
got

563
00:21:11,600 --> 00:21:14,959
api libraries in number of languages

564
00:21:13,600 --> 00:21:16,080
it's about youtube license there's no

565
00:21:14,960 --> 00:21:17,600
cla or anything

566
00:21:16,080 --> 00:21:20,639
and we've got a pretty active community

567
00:21:17,600 --> 00:21:22,480
that can help you with issues

568
00:21:20,640 --> 00:21:24,080
and that's it i've got a bunch of

569
00:21:22,480 --> 00:21:24,480
stickers here if you want to grab some

570
00:21:24,080 --> 00:21:27,439
after

571
00:21:24,480 --> 00:21:30,159
after this and we might even have three

572
00:21:27,440 --> 00:21:30,159
minutes for questions

573
00:21:31,240 --> 00:21:39,619
[Applause]

574
00:21:42,840 --> 00:21:48,799
yes yep

575
00:21:45,919 --> 00:21:49,760
so yeah uh right sorry um so the

576
00:21:48,799 --> 00:21:51,760
question was about

577
00:21:49,760 --> 00:21:53,039
the api when talking to a signal talking

578
00:21:51,760 --> 00:21:55,840
to multiple nodes uh

579
00:21:53,039 --> 00:21:57,440
yes it is the same api um the there's

580
00:21:55,840 --> 00:21:58,639
like an extra field in some of the

581
00:21:57,440 --> 00:22:00,159
objects that just tells you where they

582
00:21:58,640 --> 00:22:03,600
are

583
00:22:00,159 --> 00:22:04,960
so in those trucks you get from the api

584
00:22:03,600 --> 00:22:07,039
it's going to be like an extra field

585
00:22:04,960 --> 00:22:08,799
telling you location to know where

586
00:22:07,039 --> 00:22:10,240
something is but if you don't know about

587
00:22:08,799 --> 00:22:13,200
that you can just ignore it

588
00:22:10,240 --> 00:22:14,480
and that just still works uh okay that's

589
00:22:13,200 --> 00:22:17,919
gonna be hard

590
00:22:14,480 --> 00:22:20,880
uh i think you have your hand up already

591
00:22:17,919 --> 00:22:21,520
yes do you know if there is any plan to

592
00:22:20,880 --> 00:22:24,000
integrate

593
00:22:21,520 --> 00:22:25,440
this in mass okay so the question is

594
00:22:24,000 --> 00:22:27,600
whether there's any plan to integrate

595
00:22:25,440 --> 00:22:30,480
some of this in mass the answer is yes

596
00:22:27,600 --> 00:22:31,439
mars has kvm pods right now uh that is

597
00:22:30,480 --> 00:22:33,520
being replaced

598
00:22:31,440 --> 00:22:35,360
by driving lexi that was one of the

599
00:22:33,520 --> 00:22:36,879
drivers for this work so the idea is to

600
00:22:35,360 --> 00:22:39,039
move away from

601
00:22:36,880 --> 00:22:41,200
mars talking to ledvert and moving to

602
00:22:39,039 --> 00:22:43,760
mars talking to next day

603
00:22:41,200 --> 00:22:43,760
let's go there

604
00:22:48,000 --> 00:22:51,679
okay so the question is whether we plan

605
00:22:49,120 --> 00:22:53,600
to blackboard the vm to stable channel

606
00:22:51,679 --> 00:22:55,520
the answer is no because we've got so

607
00:22:53,600 --> 00:22:57,039
we've got streets 19320

608
00:22:55,520 --> 00:22:59,520
our thank you stable releases with that

609
00:22:57,039 --> 00:23:02,000
support the snap itself is available

610
00:22:59,520 --> 00:23:03,840
all the way back to ubuntu say 1404 or

611
00:23:02,000 --> 00:23:06,000
even or centos 7 or

612
00:23:03,840 --> 00:23:07,280
quite old distros so we test on that and

613
00:23:06,000 --> 00:23:09,840
that should work fine

614
00:23:07,280 --> 00:23:10,399
uh we've got an lts release xd 4.0

615
00:23:09,840 --> 00:23:11,760
that's

616
00:23:10,400 --> 00:23:13,679
that's gonna be coming up within the

617
00:23:11,760 --> 00:23:15,760
next two months that's gonna have vm

618
00:23:13,679 --> 00:23:16,240
support so for those who want the five

619
00:23:15,760 --> 00:23:19,360
years

620
00:23:16,240 --> 00:23:21,480
lts guarantees on legacy uh 4.0 is what

621
00:23:19,360 --> 00:23:24,579
you're going to want for that

622
00:23:21,480 --> 00:23:24,579
[Music]

623
00:23:34,320 --> 00:23:39,520
machine the name ends up the solution is

624
00:23:37,600 --> 00:23:40,959
like what's the image type that was used

625
00:23:39,520 --> 00:23:45,279
to spawn virtual machine

626
00:23:40,960 --> 00:23:46,880
um on the so for a lot of our images

627
00:23:45,279 --> 00:23:48,640
like the open two images that's gonna

628
00:23:46,880 --> 00:23:50,400
the exact same name are gonna line up

629
00:23:48,640 --> 00:23:52,640
for both containers and vms because

630
00:23:50,400 --> 00:23:55,039
you've got an ubuntu 1804 for both

631
00:23:52,640 --> 00:23:55,679
um and that's why we've got the vm flag

632
00:23:55,039 --> 00:23:56,960
that's just

633
00:23:55,679 --> 00:23:58,400
to tell let's say hey i actually want

634
00:23:56,960 --> 00:23:59,279
the vm version of that image and then

635
00:23:58,400 --> 00:24:01,840
that's what it

636
00:23:59,279 --> 00:24:05,840
uses right now it pulls that image from

637
00:24:01,840 --> 00:24:05,840
the ubuntu cloud images

638
00:24:09,200 --> 00:24:13,440
oh okay so the like the uh actual image

639
00:24:12,240 --> 00:24:15,360
format

640
00:24:13,440 --> 00:24:17,600
in the images okay so the the image

641
00:24:15,360 --> 00:24:21,678
format we use for lex dvm images

642
00:24:17,600 --> 00:24:24,959
is qca2 so it's qca2 with the lxd

643
00:24:21,679 --> 00:24:26,640
uh xz metadata on the side for just

644
00:24:24,960 --> 00:24:28,240
properties and stuff but the the actual

645
00:24:26,640 --> 00:24:29,279
image format we support right now is

646
00:24:28,240 --> 00:24:31,200
qgo2

647
00:24:29,279 --> 00:24:32,960
with polyade support for raw because

648
00:24:31,200 --> 00:24:36,159
that's easy

649
00:24:32,960 --> 00:24:36,720
but yeah qcat is what we use we're out

650
00:24:36,159 --> 00:24:38,559
of time

651
00:24:36,720 --> 00:24:40,080
so if you've got any more questions you

652
00:24:38,559 --> 00:24:47,840
can grab me outside

653
00:24:40,080 --> 00:24:47,840
other stickers in front there thank you

654
00:24:52,000 --> 00:24:54,080
you

