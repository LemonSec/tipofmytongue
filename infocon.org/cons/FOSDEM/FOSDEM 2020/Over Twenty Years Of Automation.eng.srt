1
00:00:10,379 --> 00:00:13,620
that's it

2
00:00:14,070 --> 00:00:19,570
kind of make it a bit entertaining for

3
00:00:16,049 --> 00:00:21,910
Little Italy can I start

4
00:00:19,570 --> 00:00:23,349
the box is starting up I'm gonna show

5
00:00:21,910 --> 00:00:26,169
you a video from Montreal while we're

6
00:00:23,349 --> 00:00:27,730
getting ready just this is my city in

7
00:00:26,169 --> 00:00:32,469
Canada you might have seen this before

8
00:00:27,730 --> 00:00:35,739
it was a VHS quality there was a some

9
00:00:32,469 --> 00:00:39,280
rapid snow and ice is bad timing and the

10
00:00:35,739 --> 00:00:43,360
a road which is a little steep and so

11
00:00:39,280 --> 00:00:46,600
you can see what happened you'll tell me

12
00:00:43,360 --> 00:00:48,809
when they're ready no need to start

13
00:00:46,600 --> 00:00:48,809
start

14
00:00:51,180 --> 00:00:54,630
yeah make it a little fun sorry about

15
00:00:54,090 --> 00:00:56,190
the video

16
00:00:54,630 --> 00:01:00,270
that's a libreoffice bug so if anyone

17
00:00:56,190 --> 00:01:01,830
can track down Michael Meeks what this

18
00:01:00,270 --> 00:01:03,180
is my problem yeah

19
00:01:01,830 --> 00:01:05,429
that's the video that's actually a

20
00:01:03,180 --> 00:01:08,910
libreoffice bug the video is fine but

21
00:01:05,430 --> 00:01:13,080
Libre Office is buggy a bit it's pretty

22
00:01:08,910 --> 00:01:16,619
good but except for that so do this

23
00:01:13,080 --> 00:01:18,770
whole so this bus thought they can do

24
00:01:16,620 --> 00:01:18,770
better

25
00:01:22,560 --> 00:01:32,550
yeah but you know he gets away and his

26
00:01:27,010 --> 00:01:32,550
friend Thomas there another microphone

27
00:01:35,970 --> 00:01:42,500
the police to the rescue Jinyu 12 defeat

28
00:01:38,790 --> 00:01:42,500
through feedback then you turn on my mic

29
00:01:47,960 --> 00:01:53,270
but don't worry we have city works who

30
00:01:50,460 --> 00:01:53,270
can come save the issue

31
00:01:59,630 --> 00:02:03,729
so wait till the end

32
00:02:05,300 --> 00:02:09,859
[Music]

33
00:02:06,640 --> 00:02:09,859
[Applause]

34
00:02:10,199 --> 00:02:15,910
okay I gotta get going so uh can you

35
00:02:14,440 --> 00:02:17,920
turn down the volume a tiny bit please

36
00:02:15,910 --> 00:02:19,450
thank you cuz a little feedback so who

37
00:02:17,920 --> 00:02:20,649
am I talking really quickly I'm gonna be

38
00:02:19,450 --> 00:02:22,390
sitting down a little bit so if you

39
00:02:20,650 --> 00:02:25,510
can't see me don't worry I'm still here

40
00:02:22,390 --> 00:02:27,129
Frye voice I'm a hacker everyone config

41
00:02:25,510 --> 00:02:28,660
management rings still a little bit of

42
00:02:27,129 --> 00:02:39,250
feedback you turn on the mic just a tiny

43
00:02:28,660 --> 00:02:40,690
bit please I write a technical blog

44
00:02:39,250 --> 00:02:42,040
called the technical blog of James who's

45
00:02:40,690 --> 00:02:43,900
seen it just raise your hand we've seen

46
00:02:42,040 --> 00:02:46,120
my blog if you haven't just raise your

47
00:02:43,900 --> 00:02:48,700
hand so I seemingly popular please thank

48
00:02:46,120 --> 00:02:50,980
you I started the physiology and I'm

49
00:02:48,700 --> 00:02:52,569
doing this sort of DevOps thing and just

50
00:02:50,980 --> 00:02:55,629
a little bit background is it feedback

51
00:02:52,569 --> 00:02:58,290
I'm hearing feedback yeah can can you

52
00:02:55,629 --> 00:03:04,540
guys turn down the microphone please

53
00:02:58,290 --> 00:03:06,060
please oh boy that's bad hello

54
00:03:04,540 --> 00:03:09,900
so just a little bit of the background

55
00:03:06,060 --> 00:03:15,900
still do you have an audio control I

56
00:03:09,900 --> 00:03:19,690
hope that I don't take it away thank you

57
00:03:15,900 --> 00:03:21,310
how's that still a bit I'll just have to

58
00:03:19,690 --> 00:03:23,010
talk softly can you hear me if I talk

59
00:03:21,310 --> 00:03:29,280
softly

60
00:03:23,010 --> 00:03:32,040
my goodness guys Amy guy can you you

61
00:03:29,280 --> 00:03:35,700
have a microphone control can you turn

62
00:03:32,040 --> 00:03:36,480
it down please we'll do the best we can

63
00:03:35,700 --> 00:03:39,119
sorry about that

64
00:03:36,480 --> 00:03:40,349
so every day in sort of system in life

65
00:03:39,120 --> 00:03:42,030
everyone's kind of SS teaching

66
00:03:40,349 --> 00:03:44,220
everywhere or doing this crazy llamó

67
00:03:42,030 --> 00:03:45,420
stuff and like to manage servers and

68
00:03:44,220 --> 00:03:48,930
this is really not how we should be

69
00:03:45,420 --> 00:03:50,700
doing config management but like the

70
00:03:48,930 --> 00:03:52,109
solution to these problems a lot of

71
00:03:50,700 --> 00:03:53,220
people doing these manually a lot of

72
00:03:52,109 --> 00:03:54,269
people are just pushing everything to

73
00:03:53,220 --> 00:03:58,409
the cloud which is someone else's

74
00:03:54,269 --> 00:04:01,859
problem and is this a good idea oh this

75
00:03:58,409 --> 00:04:03,090
is a good idea come on wake up this is

76
00:04:01,859 --> 00:04:08,879
my answer to you if this is a good idea

77
00:04:03,090 --> 00:04:11,010
or not it's just not a good idea so

78
00:04:08,879 --> 00:04:12,659
everything's just nope and I use this

79
00:04:11,010 --> 00:04:13,679
image a lot because it's just my feeling

80
00:04:12,659 --> 00:04:17,219
about a lot of things that could be

81
00:04:13,680 --> 00:04:18,870
different so long time the long story

82
00:04:17,220 --> 00:04:20,400
short is I got fed up with a lot of the

83
00:04:18,870 --> 00:04:22,108
automation tools and things out there so

84
00:04:20,399 --> 00:04:24,840
I started working on my own tool called

85
00:04:22,108 --> 00:04:26,880
MGMT I'm gonna give you one really quick

86
00:04:24,840 --> 00:04:28,138
demo to show you how it works and then

87
00:04:26,880 --> 00:04:32,219
I'm gonna show you more of a history of

88
00:04:28,139 --> 00:04:36,510
everything going on so basically if you

89
00:04:32,220 --> 00:04:38,220
run the tool we have a sort of file that

90
00:04:36,510 --> 00:04:41,219
described the code and I'll just show

91
00:04:38,220 --> 00:04:43,889
you what it looks like just a very

92
00:04:41,220 --> 00:04:46,800
simple problem it says in this file

93
00:04:43,889 --> 00:04:48,720
whole world say hello right we're sort

94
00:04:46,800 --> 00:04:52,590
of statically declaring the state of

95
00:04:48,720 --> 00:04:54,419
this file and if we run this you can see

96
00:04:52,590 --> 00:04:56,849
it creates the file hopefully and we'll

97
00:04:54,419 --> 00:05:00,448
go over here and is it big enough you

98
00:04:56,849 --> 00:05:02,460
can all see you right you can see that

99
00:05:00,449 --> 00:05:04,410
the file is actually created as we

100
00:05:02,460 --> 00:05:06,630
expect and this is how sort of most

101
00:05:04,410 --> 00:05:08,430
config management tools work today you

102
00:05:06,630 --> 00:05:10,530
ask for something create some files

103
00:05:08,430 --> 00:05:12,539
install some packages set up some users

104
00:05:10,530 --> 00:05:14,219
and it doesn't but MGMT is a little bit

105
00:05:12,539 --> 00:05:15,960
different because you can do cool things

106
00:05:14,220 --> 00:05:17,820
you can move the file and it comes right

107
00:05:15,960 --> 00:05:20,159
back because it's running in real time

108
00:05:17,820 --> 00:05:20,950
and I've shown this to lots of times but

109
00:05:20,159 --> 00:05:23,380
one more time

110
00:05:20,950 --> 00:05:25,630
you remove the file and cat the file and

111
00:05:23,380 --> 00:05:27,550
it comes right back you can see and Jim

112
00:05:25,630 --> 00:05:30,010
T's sleeping it detects when something

113
00:05:27,550 --> 00:05:32,110
happens and it wakes up and fixed the

114
00:05:30,010 --> 00:05:34,330
state of the reel of the system does

115
00:05:32,110 --> 00:05:35,590
that make sense and just to sort of show

116
00:05:34,330 --> 00:05:37,479
off a little bit and then we'll talk

117
00:05:35,590 --> 00:05:39,609
about other things if I run this watch

118
00:05:37,480 --> 00:05:41,260
command it just runs this file over and

119
00:05:39,610 --> 00:05:44,230
over and over again you can see that as

120
00:05:41,260 --> 00:05:46,750
fast as MGMT's running it notices and

121
00:05:44,230 --> 00:05:49,450
fixes fixing the state

122
00:05:46,750 --> 00:05:50,680
ok so that's sort of the future of what

123
00:05:49,450 --> 00:05:52,990
I wanting to show you some more demos

124
00:05:50,680 --> 00:05:55,090
ever oh my goodness I'm going to show

125
00:05:52,990 --> 00:05:56,230
you some more demos at the end but I

126
00:05:55,090 --> 00:05:58,330
want to talk a little bit more of the

127
00:05:56,230 --> 00:06:00,460
state of the art so I have to do some

128
00:05:58,330 --> 00:06:02,530
boring slides before we do live demos so

129
00:06:00,460 --> 00:06:04,510
just some brief prerequisites because

130
00:06:02,530 --> 00:06:06,549
this is sort of a beginner talk and I

131
00:06:04,510 --> 00:06:08,110
want everyone on the same page so we can

132
00:06:06,550 --> 00:06:10,450
use the same terminology to talk to each

133
00:06:08,110 --> 00:06:12,190
other does that make sense okay so like

134
00:06:10,450 --> 00:06:19,599
five minutes the boring slides and then

135
00:06:12,190 --> 00:06:22,240
hacking deal deal deal so just really

136
00:06:19,600 --> 00:06:25,360
quickly a dag is a directed estate

137
00:06:22,240 --> 00:06:26,650
acyclic graph and we use these a lot in

138
00:06:25,360 --> 00:06:28,900
automation because we want things to

139
00:06:26,650 --> 00:06:31,510
happen in a certain order and graphs to

140
00:06:28,900 --> 00:06:32,919
describe the dependency change so for

141
00:06:31,510 --> 00:06:37,450
example I want to install the package

142
00:06:32,920 --> 00:06:39,040
before I setup the config file and start

143
00:06:37,450 --> 00:06:41,020
the daemon so that's what these are used

144
00:06:39,040 --> 00:06:45,160
for that's what's called idempotence

145
00:06:41,020 --> 00:06:46,690
anyone know this we used the idea if you

146
00:06:45,160 --> 00:06:48,070
run a program and it takes you to a

147
00:06:46,690 --> 00:06:50,170
certain state if you were to run that

148
00:06:48,070 --> 00:06:52,810
program again you want it to keep you at

149
00:06:50,170 --> 00:06:53,950
that same state ok so a simple way to do

150
00:06:52,810 --> 00:06:55,330
that if you're installing the package

151
00:06:53,950 --> 00:06:56,680
you would check if the package is

152
00:06:55,330 --> 00:06:57,940
already installed before you run it

153
00:06:56,680 --> 00:07:00,490
again that sort of thing

154
00:06:57,940 --> 00:07:01,990
or if you're changing the contents of a

155
00:07:00,490 --> 00:07:03,970
file if you were to say these are the

156
00:07:01,990 --> 00:07:05,170
entire contents of the file that would

157
00:07:03,970 --> 00:07:08,230
be something that's idempotent as

158
00:07:05,170 --> 00:07:09,490
opposed to just appending to the file so

159
00:07:08,230 --> 00:07:10,810
it's something we use basically you can

160
00:07:09,490 --> 00:07:12,790
just run your tools over and over again

161
00:07:10,810 --> 00:07:14,830
and the state should be converged and

162
00:07:12,790 --> 00:07:17,710
that's what this lot the second word is

163
00:07:14,830 --> 00:07:19,479
convergence so convergence is when all

164
00:07:17,710 --> 00:07:21,430
of the operations that you've requested

165
00:07:19,480 --> 00:07:23,950
are in the steady state so they're all

166
00:07:21,430 --> 00:07:25,690
how you want them alright little stuff

167
00:07:23,950 --> 00:07:26,950
maybe will come up a little bit and the

168
00:07:25,690 --> 00:07:28,750
last thing I want to mention which

169
00:07:26,950 --> 00:07:29,789
almost no one really thinks about and

170
00:07:28,750 --> 00:07:31,710
talks about these days

171
00:07:29,789 --> 00:07:33,479
something called reversibility so when I

172
00:07:31,710 --> 00:07:36,089
do some operations to take me into a

173
00:07:33,479 --> 00:07:37,949
certain desired state sometimes those

174
00:07:36,089 --> 00:07:39,300
operations can have an inverse that

175
00:07:37,949 --> 00:07:41,879
takes me back to the state oh is that

176
00:07:39,300 --> 00:07:43,889
previously and being able to know which

177
00:07:41,879 --> 00:07:45,539
states you can get to and if you can

178
00:07:43,889 --> 00:07:47,009
reverse and do all this stuff it's

179
00:07:45,539 --> 00:07:48,659
really fun and the reason it's fun is

180
00:07:47,009 --> 00:07:50,370
because now we can build these systems

181
00:07:48,659 --> 00:07:51,419
that are dynamically changing every

182
00:07:50,370 --> 00:07:53,159
second and every minute

183
00:07:51,419 --> 00:07:55,909
if these operations are all possible

184
00:07:53,159 --> 00:07:58,438
makes sense okay more crappy slides

185
00:07:55,909 --> 00:08:00,300
let's just show you that so some

186
00:07:58,439 --> 00:08:02,460
terminology everyone gets these things

187
00:08:00,300 --> 00:08:03,839
wrong provisioning configuration

188
00:08:02,460 --> 00:08:05,969
management orchestration and

189
00:08:03,839 --> 00:08:08,249
choreography really quickly provisioning

190
00:08:05,969 --> 00:08:08,819
is everything you do just to turn on the

191
00:08:08,249 --> 00:08:12,180
machine

192
00:08:08,819 --> 00:08:14,969
so to boot up the VM or to provision the

193
00:08:12,180 --> 00:08:16,830
iron or even to set up some image in

194
00:08:14,969 --> 00:08:18,689
Amazon all that stuff is provisioning

195
00:08:16,830 --> 00:08:20,849
okay provisioning is everything happens

196
00:08:18,689 --> 00:08:22,559
to turn the machine on and the last

197
00:08:20,849 --> 00:08:24,808
thing provisioning does is it runs a

198
00:08:22,559 --> 00:08:26,159
configuration management tool so that's

199
00:08:24,809 --> 00:08:27,509
what that word should mean and please

200
00:08:26,159 --> 00:08:28,889
use it that way

201
00:08:27,509 --> 00:08:31,379
config management is what we're talking

202
00:08:28,889 --> 00:08:33,630
about today some random notes on the

203
00:08:31,379 --> 00:08:35,339
slides I think that the word

204
00:08:33,630 --> 00:08:39,149
configuration management the term has

205
00:08:35,339 --> 00:08:41,099
been sort of seen as an initial step and

206
00:08:39,149 --> 00:08:43,198
it could be used much further than it is

207
00:08:41,099 --> 00:08:45,180
today so configuration management is all

208
00:08:43,198 --> 00:08:48,029
the Declaration of the desired state and

209
00:08:45,180 --> 00:08:50,699
up until today we've never really talked

210
00:08:48,029 --> 00:08:53,100
about the time components of management

211
00:08:50,699 --> 00:08:55,139
as config management I believe it is and

212
00:08:53,100 --> 00:08:57,990
what that means is config management for

213
00:08:55,139 --> 00:09:00,600
me should decide what happens every

214
00:08:57,990 --> 00:09:02,190
minute of your day right so it should

215
00:09:00,600 --> 00:09:04,410
say today I want my service to you up

216
00:09:02,190 --> 00:09:05,880
and running at 5:00 p.m. when people are

217
00:09:04,410 --> 00:09:08,040
going home and turning on internet for

218
00:09:05,880 --> 00:09:09,630
something maybe I want the state to

219
00:09:08,040 --> 00:09:12,389
change because I want more servers

220
00:09:09,630 --> 00:09:13,949
running so my little balancer should get

221
00:09:12,389 --> 00:09:15,540
bigger and so on all these things should

222
00:09:13,949 --> 00:09:16,859
be part of the big management they have

223
00:09:15,540 --> 00:09:19,980
to do with setting up the machine and

224
00:09:16,860 --> 00:09:22,050
setting up those States cool and a lot

225
00:09:19,980 --> 00:09:23,760
of people have sort of sort of I think

226
00:09:22,050 --> 00:09:25,019
in my opinion being stagnant with the

227
00:09:23,760 --> 00:09:26,270
current tools they said ok we have a

228
00:09:25,019 --> 00:09:28,220
puppet we have

229
00:09:26,270 --> 00:09:30,110
you know chef and all these tools but

230
00:09:28,220 --> 00:09:32,240
they haven't delivered as much as I wish

231
00:09:30,110 --> 00:09:33,800
config management had done so people are

232
00:09:32,240 --> 00:09:35,960
looking to other solutions instead of

233
00:09:33,800 --> 00:09:37,790
saying hey what else can we do in this

234
00:09:35,960 --> 00:09:40,460
space and I'm biased of course but

235
00:09:37,790 --> 00:09:42,949
hopefully I can can convince you

236
00:09:40,460 --> 00:09:44,840
orchestration orchestration is a very

237
00:09:42,950 --> 00:09:47,090
specific thing when you have one machine

238
00:09:44,840 --> 00:09:49,610
or one entity or one laptop which is

239
00:09:47,090 --> 00:09:52,640
going out and requesting something so

240
00:09:49,610 --> 00:09:54,080
it's something like ansible for example

241
00:09:52,640 --> 00:09:55,640
as an Orchestrator and it's always a

242
00:09:54,080 --> 00:09:58,070
single point if it's always a single

243
00:09:55,640 --> 00:09:59,750
point which is going out and and having

244
00:09:58,070 --> 00:10:01,910
that command or series of commands

245
00:09:59,750 --> 00:10:04,070
happen so it's one place of coordination

246
00:10:01,910 --> 00:10:05,990
and always centralized when you say

247
00:10:04,070 --> 00:10:08,000
organization it's always centralized

248
00:10:05,990 --> 00:10:10,220
even if that centralized point might

249
00:10:08,000 --> 00:10:11,510
change so there might fail over to

250
00:10:10,220 --> 00:10:13,700
another server or something if it goes

251
00:10:11,510 --> 00:10:15,620
down that's still orchestration are you

252
00:10:13,700 --> 00:10:18,140
totally lost or does this sort of make

253
00:10:15,620 --> 00:10:20,510
sense wave your hands say sort of makes

254
00:10:18,140 --> 00:10:23,750
sense all right you're still alive

255
00:10:20,510 --> 00:10:26,000
that's good again boring slides over in

256
00:10:23,750 --> 00:10:27,470
like one minute and lastly choreography

257
00:10:26,000 --> 00:10:29,000
I hate this term but I cannot really

258
00:10:27,470 --> 00:10:30,800
think of a better term and if anyone has

259
00:10:29,000 --> 00:10:33,110
one just scream it out or something but

260
00:10:30,800 --> 00:10:35,510
basically the other way we can automate

261
00:10:33,110 --> 00:10:37,280
a lot of things is if each machine or

262
00:10:35,510 --> 00:10:38,930
entity or thing or container in the

263
00:10:37,280 --> 00:10:41,000
cluster has its own independent

264
00:10:38,930 --> 00:10:43,130
algorithm and they sort of self organize

265
00:10:41,000 --> 00:10:46,220
to work together on a lot of things in

266
00:10:43,130 --> 00:10:50,300
real-life work this way to a good extent

267
00:10:46,220 --> 00:10:52,340
Boston like humans and algorithms like

268
00:10:50,300 --> 00:10:54,620
graft and taxes all these things are are

269
00:10:52,340 --> 00:10:56,270
effectively choreography and in

270
00:10:54,620 --> 00:10:57,470
somebody's this is cool because you

271
00:10:56,270 --> 00:10:59,120
don't need that central point of failure

272
00:10:57,470 --> 00:11:01,070
that's going out and requesting it

273
00:10:59,120 --> 00:11:03,650
things happen in a certain order that

274
00:11:01,070 --> 00:11:05,000
makes sense the downside is sometimes

275
00:11:03,650 --> 00:11:07,579
the algorithms that make all this stuff

276
00:11:05,000 --> 00:11:08,810
happen can be more complicated but I

277
00:11:07,580 --> 00:11:10,370
think this is the future and this is

278
00:11:08,810 --> 00:11:12,020
where we should be doing stuff please

279
00:11:10,370 --> 00:11:13,730
someone find a better term than

280
00:11:12,020 --> 00:11:16,520
choreography because I don't know what

281
00:11:13,730 --> 00:11:17,870
it is really last thing topologies

282
00:11:16,520 --> 00:11:20,120
there's different topologies

283
00:11:17,870 --> 00:11:21,500
architecture lis and every time I hear a

284
00:11:20,120 --> 00:11:23,090
new tool this is what I want to know

285
00:11:21,500 --> 00:11:25,130
about if it's a tool that's running on

286
00:11:23,090 --> 00:11:26,330
more than one machine you've got to have

287
00:11:25,130 --> 00:11:28,100
this in the documentation

288
00:11:26,330 --> 00:11:29,990
so these are some topologies I'll show

289
00:11:28,100 --> 00:11:31,940
you this one when you have a whole bunch

290
00:11:29,990 --> 00:11:34,150
of clients at the bottom that initiate

291
00:11:31,940 --> 00:11:36,350
request to a server what's this called

292
00:11:34,150 --> 00:11:39,209
scream it out

293
00:11:36,350 --> 00:11:41,160
who's shy it's anyone really shy just

294
00:11:39,210 --> 00:11:44,460
raise your hands where you are anybody

295
00:11:41,160 --> 00:11:46,380
yeah client-server right so what's the

296
00:11:44,460 --> 00:11:48,620
problem with this topology anyone scream

297
00:11:46,380 --> 00:11:51,510
it out mm-hmm

298
00:11:48,620 --> 00:11:53,250
single point of failure also kind of

299
00:11:51,510 --> 00:11:55,080
very traditional well-known so it's used

300
00:11:53,250 --> 00:11:56,910
if you look at this one this is almost

301
00:11:55,080 --> 00:11:58,080
the opposite you have the orchestrator

302
00:11:56,910 --> 00:11:59,760
like I was talking about before

303
00:11:58,080 --> 00:12:01,470
initiating the connection into a whole

304
00:11:59,760 --> 00:12:04,530
bunch of machines what's the problem

305
00:12:01,470 --> 00:12:06,170
with this topology scream now don't be

306
00:12:04,530 --> 00:12:09,780
shy

307
00:12:06,170 --> 00:12:11,069
part of me same thing yeah it's also

308
00:12:09,780 --> 00:12:13,170
single point of failure they're gonna be

309
00:12:11,070 --> 00:12:15,000
performance limitations tools like

310
00:12:13,170 --> 00:12:17,670
danceable do this right who's used

311
00:12:15,000 --> 00:12:19,530
ansible who's happy about using ansible

312
00:12:17,670 --> 00:12:22,020
just kidding I'm teasing Red Hat don't

313
00:12:19,530 --> 00:12:24,839
hurt me so there's some other topologies

314
00:12:22,020 --> 00:12:26,160
a full peer-to-peer mesh these are

315
00:12:24,840 --> 00:12:27,690
actually kind of cool because everyone

316
00:12:26,160 --> 00:12:29,430
is talking to everyone else but the

317
00:12:27,690 --> 00:12:33,960
problem with this sort of apology is

318
00:12:29,430 --> 00:12:35,520
what yeah scream it out conversions 10

319
00:12:33,960 --> 00:12:37,230
the algorithms to do convergence can be

320
00:12:35,520 --> 00:12:39,210
more complicated but even simpler than

321
00:12:37,230 --> 00:12:41,250
that when you have a large number of

322
00:12:39,210 --> 00:12:43,620
peers if each peers talking to every

323
00:12:41,250 --> 00:12:45,870
other peer the number is just too big so

324
00:12:43,620 --> 00:12:47,820
numbers are too big panel scale and

325
00:12:45,870 --> 00:12:49,760
there's some weird hybrid topologies for

326
00:12:47,820 --> 00:12:52,740
example where you have a small inner

327
00:12:49,760 --> 00:12:56,069
mesh of hosts all talking together and

328
00:12:52,740 --> 00:12:57,990
they form a cluster and then everyone

329
00:12:56,070 --> 00:13:00,180
else joins as a client and talks through

330
00:12:57,990 --> 00:13:03,540
one of those machines this is actually

331
00:13:00,180 --> 00:13:08,280
what we do in MGMT so cool you want to

332
00:13:03,540 --> 00:13:10,319
see some demos no more slides yes ok the

333
00:13:08,280 --> 00:13:12,120
demos are a little bit boring but it's

334
00:13:10,320 --> 00:13:15,600
meant as a beginner talk so I'll do my

335
00:13:12,120 --> 00:13:17,070
best so this is sort of past present and

336
00:13:15,600 --> 00:13:18,900
future of config management so I figured

337
00:13:17,070 --> 00:13:21,600
we'd dig into the past and see how

338
00:13:18,900 --> 00:13:22,920
people used to run stuff manual hacking

339
00:13:21,600 --> 00:13:25,230
on stuff this is kind of how I stopped

340
00:13:22,920 --> 00:13:30,780
my laptop right there's some problems

341
00:13:25,230 --> 00:13:33,690
with this and it's useful by the Dozen

342
00:13:30,780 --> 00:13:35,550
scale and if you suck at bash or are you

343
00:13:33,690 --> 00:13:37,500
second remembering what commands to run

344
00:13:35,550 --> 00:13:39,510
in the spindle poorly so we have some

345
00:13:37,500 --> 00:13:41,070
bash scripting which is kind of the next

346
00:13:39,510 --> 00:13:42,330
thing that system means do who's like a

347
00:13:41,070 --> 00:13:45,000
system in and has

348
00:13:42,330 --> 00:13:46,500
didn't some bash even basic stuff I know

349
00:13:45,000 --> 00:13:49,020
you're there you're probably hiding so

350
00:13:46,500 --> 00:13:52,970
that I don't find you but I tuck into

351
00:13:49,020 --> 00:14:01,020
the old code that I had and I just

352
00:13:52,970 --> 00:14:02,340
pulled this up demos so I even found

353
00:14:01,020 --> 00:14:04,439
this old script I wrote

354
00:14:02,340 --> 00:14:06,030
I'll show you really quickly so this is

355
00:14:04,440 --> 00:14:08,640
a script I wrote like over ten years ago

356
00:14:06,030 --> 00:14:10,079
and basically what it does is it's

357
00:14:08,640 --> 00:14:12,830
something I just run from my laptop and

358
00:14:10,080 --> 00:14:15,660
it checks if it's on this local machine

359
00:14:12,830 --> 00:14:17,400
that's bad so it once always run on the

360
00:14:15,660 --> 00:14:19,620
server that I'm administrating and if it

361
00:14:17,400 --> 00:14:21,060
does that if it if it's not running on

362
00:14:19,620 --> 00:14:22,920
the server that I'm in the string it

363
00:14:21,060 --> 00:14:25,229
will actually SSH and run itself on that

364
00:14:22,920 --> 00:14:26,790
server and then run some commands and

365
00:14:25,230 --> 00:14:30,510
what the script really does at the very

366
00:14:26,790 --> 00:14:31,949
end is it's just adding a user and just

367
00:14:30,510 --> 00:14:33,270
to make this more fun so basically I'm

368
00:14:31,950 --> 00:14:36,690
going to show all these demos in terms

369
00:14:33,270 --> 00:14:39,390
of adding a user and there's this weird

370
00:14:36,690 --> 00:14:41,850
GUI thing that's calling called cockpit

371
00:14:39,390 --> 00:14:43,319
and it like has this stuff that shows

372
00:14:41,850 --> 00:14:44,520
you what's going on on the server I

373
00:14:43,320 --> 00:14:46,410
don't really use it but it's nice

374
00:14:44,520 --> 00:14:48,300
because it works in real time also and

375
00:14:46,410 --> 00:14:49,350
it has a list of the users on your

376
00:14:48,300 --> 00:14:51,959
machine so I'm gonna keep this in the

377
00:14:49,350 --> 00:14:55,680
background just so you can see and let's

378
00:14:51,960 --> 00:14:56,220
run this script and let's see what

379
00:14:55,680 --> 00:15:00,439
happens

380
00:14:56,220 --> 00:15:00,440
forget how to run it let's see that's

381
00:15:01,880 --> 00:15:12,180
one this so let's run it and you can see

382
00:15:09,270 --> 00:15:14,310
boom it SS aged into the server and

383
00:15:12,180 --> 00:15:15,810
added this user so the server that I'm

384
00:15:14,310 --> 00:15:18,000
talking about in the background I have

385
00:15:15,810 --> 00:15:20,550
this window right here which is this

386
00:15:18,000 --> 00:15:21,480
random Boston 2020 BM that I'm just

387
00:15:20,550 --> 00:15:24,719
running because I don't want to run all

388
00:15:21,480 --> 00:15:26,720
this junk on my machine and this is just

389
00:15:24,720 --> 00:15:29,520
a view of that server that make sense

390
00:15:26,720 --> 00:15:31,320
yeah so that's the past like crappy

391
00:15:29,520 --> 00:15:35,160
shell scripts that I wrote or you wrote

392
00:15:31,320 --> 00:15:37,650
of everyone wrote all hack together we

393
00:15:35,160 --> 00:15:40,980
can do better I'll actually just show

394
00:15:37,650 --> 00:15:42,310
you on the actual server itself a little

395
00:15:40,980 --> 00:15:44,290
older

396
00:15:42,310 --> 00:15:45,250
here's a really simple way how people

397
00:15:44,290 --> 00:15:47,079
did this I'm sort of distilled

398
00:15:45,250 --> 00:15:50,500
everything down you have a really simple

399
00:15:47,080 --> 00:15:52,960
script that's just checking if the user

400
00:15:50,500 --> 00:15:54,130
exists and if it doesn't it runs it why

401
00:15:52,960 --> 00:15:58,690
are we doing this why are we checking

402
00:15:54,130 --> 00:16:00,070
before we add I think I might have heard

403
00:15:58,690 --> 00:16:01,660
it because we want the thing to be item

404
00:16:00,070 --> 00:16:03,280
potent right so if something is wrong

405
00:16:01,660 --> 00:16:05,020
you just run the script and it should be

406
00:16:03,280 --> 00:16:08,860
safe you could run it many times so if

407
00:16:05,020 --> 00:16:15,640
we run it you can see think of how long

408
00:16:08,860 --> 00:16:19,660
it takes it's creating the user hello I

409
00:16:15,640 --> 00:16:24,160
have to talk people just into the mic

410
00:16:19,660 --> 00:16:25,540
and then taking here we alright so thank

411
00:16:24,160 --> 00:16:31,600
you to my mic stand over here round of

412
00:16:25,540 --> 00:16:33,730
applause so yeah I just ran the bash

413
00:16:31,600 --> 00:16:35,650
script and you can see it creates the

414
00:16:33,730 --> 00:16:36,790
users which you all see they have added

415
00:16:35,650 --> 00:16:38,650
here but if you run it again you can see

416
00:16:36,790 --> 00:16:40,510
it can go faster because it doesn't have

417
00:16:38,650 --> 00:16:45,430
to do the work to add the users make

418
00:16:40,510 --> 00:16:48,400
sense let's move on some problems with

419
00:16:45,430 --> 00:16:50,319
it so bash is is a super kind of weird

420
00:16:48,400 --> 00:16:52,000
language I love writing and bash but

421
00:16:50,320 --> 00:16:54,550
it's a little idiosyncratic and it can

422
00:16:52,000 --> 00:16:56,380
be a little problematic so any code we

423
00:16:54,550 --> 00:16:58,300
can move away from bash not because it's

424
00:16:56,380 --> 00:16:59,860
not awesome but into safer things will

425
00:16:58,300 --> 00:17:03,040
be good for safety and liability of

426
00:16:59,860 --> 00:17:04,959
infrastructure here's an old tool that I

427
00:17:03,040 --> 00:17:06,369
never used but if I don't mention it

428
00:17:04,959 --> 00:17:08,110
Steve will murder me because he goes to

429
00:17:06,369 --> 00:17:09,399
this conference that I go to he is one

430
00:17:08,109 --> 00:17:11,708
of these early people that worked on

431
00:17:09,400 --> 00:17:13,449
this basically it was kind of like a

432
00:17:11,709 --> 00:17:16,180
make file if you ever seen a make file

433
00:17:13,449 --> 00:17:18,209
and the important takeaway is that it

434
00:17:16,180 --> 00:17:20,530
was this make file that would run and

435
00:17:18,209 --> 00:17:22,630
what's cool about that is it actually

436
00:17:20,530 --> 00:17:23,980
basically has a dag so it's showing the

437
00:17:22,630 --> 00:17:26,020
dependencies you want to do on your

438
00:17:23,980 --> 00:17:27,339
certain machine in a certain order so

439
00:17:26,020 --> 00:17:29,379
it's one of the earliest uses of an

440
00:17:27,339 --> 00:17:30,970
actual dag this graph data structure

441
00:17:29,380 --> 00:17:32,680
that I showed at the beginning in

442
00:17:30,970 --> 00:17:34,390
automation so definitely for my time

443
00:17:32,680 --> 00:17:37,360
let's look at cfengine who's heard of

444
00:17:34,390 --> 00:17:39,430
cfengine I was going to show like a CF

445
00:17:37,360 --> 00:17:41,649
engine version one demo but I figured I

446
00:17:39,430 --> 00:17:46,400
wouldn't be too mean so I have actually

447
00:17:41,650 --> 00:17:49,400
here ACF engine demo a little bit

448
00:17:46,400 --> 00:17:51,050
a little bit more complicated just to

449
00:17:49,400 --> 00:17:54,140
show you same sort of thing this is how

450
00:17:51,050 --> 00:17:55,669
you look at the cfengine code here

451
00:17:54,140 --> 00:17:58,610
there's a list of users that I wanted to

452
00:17:55,670 --> 00:17:59,990
create and here's the users sort of

453
00:17:58,610 --> 00:18:02,780
declaration that shows what's going to

454
00:17:59,990 --> 00:18:04,490
happen to them for me at least cfengine

455
00:18:02,780 --> 00:18:06,379
is a little bit more complicated to read

456
00:18:04,490 --> 00:18:07,850
and there's a lot of boilerplate and a

457
00:18:06,380 --> 00:18:10,730
lot of sort of he wants us about the

458
00:18:07,850 --> 00:18:13,459
tool that I found very confusing but

459
00:18:10,730 --> 00:18:15,770
just to show you we can we can be mean

460
00:18:13,460 --> 00:18:17,080
and tying all these tools just as you

461
00:18:15,770 --> 00:18:21,650
can see the users are starting to get

462
00:18:17,080 --> 00:18:23,629
created right now as we will watch it

463
00:18:21,650 --> 00:18:25,040
has this whole thing Marc bridges with

464
00:18:23,630 --> 00:18:26,450
promise theory which to be honest I

465
00:18:25,040 --> 00:18:28,970
don't really understand I think I

466
00:18:26,450 --> 00:18:31,730
understand but it's a little over my

467
00:18:28,970 --> 00:18:33,050
head but it does it it does a job and a

468
00:18:31,730 --> 00:18:36,140
lot of people use it and the newer

469
00:18:33,050 --> 00:18:39,139
versions are apparently quite good there

470
00:18:36,140 --> 00:18:43,160
are some drawbacks so for me I think

471
00:18:39,140 --> 00:18:44,990
that in the modern day tool we want our

472
00:18:43,160 --> 00:18:46,850
tools if possible written in memory safe

473
00:18:44,990 --> 00:18:49,370
languages and if not our tools at least

474
00:18:46,850 --> 00:18:50,899
our code and it's mostly written in C

475
00:18:49,370 --> 00:18:53,000
which i think is kind of a bit of a

476
00:18:50,900 --> 00:18:55,220
barrier going forward there's some

477
00:18:53,000 --> 00:18:57,440
advantages but also some disadvantages

478
00:18:55,220 --> 00:18:58,760
so something to think about and if you

479
00:18:57,440 --> 00:19:01,310
actually look deep into the cfengine

480
00:18:58,760 --> 00:19:02,720
sort of ethos and philosophy there's

481
00:19:01,310 --> 00:19:04,760
actually some really good design ideas

482
00:19:02,720 --> 00:19:07,790
that newer tools have forgotten about

483
00:19:04,760 --> 00:19:09,530
entirely so hopefully going forward will

484
00:19:07,790 --> 00:19:12,350
actually study the past and not make

485
00:19:09,530 --> 00:19:13,730
these mistakes over again let's move a

486
00:19:12,350 --> 00:19:15,530
little bit more into the future

487
00:19:13,730 --> 00:19:17,210
puppet someone's probably is puppet in

488
00:19:15,530 --> 00:19:20,690
this room it was the first mainstream

489
00:19:17,210 --> 00:19:21,740
tool that I used past bash I don't

490
00:19:20,690 --> 00:19:23,180
really know if it's still growing

491
00:19:21,740 --> 00:19:25,670
I think the puppets kind of like in the

492
00:19:23,180 --> 00:19:27,080
danger zone because my opinion maybe

493
00:19:25,670 --> 00:19:28,490
this is a bit rude but I don't think

494
00:19:27,080 --> 00:19:30,770
they've been innovating anymore they're

495
00:19:28,490 --> 00:19:32,000
kind of just plateaued and stopped and

496
00:19:30,770 --> 00:19:33,590
they came out with this Orchestrator

497
00:19:32,000 --> 00:19:35,840
tool called bolt which is just an ADD

498
00:19:33,590 --> 00:19:37,010
spittle copy so I think they need to

499
00:19:35,840 --> 00:19:38,810
shake things up because they were so

500
00:19:37,010 --> 00:19:40,430
close to what I wanted I was using

501
00:19:38,810 --> 00:19:42,379
puppet for so many years in particular

502
00:19:40,430 --> 00:19:43,559
the way you describe what you want to

503
00:19:42,380 --> 00:19:47,330
have done is with a DSL

504
00:19:43,559 --> 00:19:49,799
so it's just the main specific language

505
00:19:47,330 --> 00:19:53,220
let's do a little puppet demo let's see

506
00:19:49,799 --> 00:19:57,418
a puppet demo yeah so here's my little

507
00:19:53,220 --> 00:19:59,909
puppet code very simple you have this

508
00:19:57,419 --> 00:20:01,970
little user defined and I have three

509
00:19:59,909 --> 00:20:05,279
puppet users here that I want to run

510
00:20:01,970 --> 00:20:07,649
let's just be cheeky again a little time

511
00:20:05,279 --> 00:20:09,210
it just vegan see how long it takes this

512
00:20:07,649 --> 00:20:15,350
was a lot of my life for five years

513
00:20:09,210 --> 00:20:16,889
watching puppet runs go by hours days so

514
00:20:15,350 --> 00:20:18,449
hot so bad

515
00:20:16,889 --> 00:20:24,869
we got the job done we got our three

516
00:20:18,450 --> 00:20:26,669
years users created which was nice it's

517
00:20:24,869 --> 00:20:29,158
changed quite a lot over the years so it

518
00:20:26,669 --> 00:20:30,749
didn't used to have types and all these

519
00:20:29,159 --> 00:20:32,519
fancy things built and really at the

520
00:20:30,749 --> 00:20:34,470
core so newer versions are a lot safer

521
00:20:32,519 --> 00:20:37,529
but a puppet still makes the mistake

522
00:20:34,470 --> 00:20:38,940
that a lot of dsls do is it a lot of

523
00:20:37,529 --> 00:20:41,129
programming that we just do rather they

524
00:20:38,940 --> 00:20:41,820
have nulls so you can have the

525
00:20:41,129 --> 00:20:42,990
equivalent of like a

526
00:20:41,820 --> 00:20:46,590
nullpointerexception

527
00:20:42,990 --> 00:20:48,029
in puppet undefined and that's a problem

528
00:20:46,590 --> 00:20:50,519
because if you have that you can crash

529
00:20:48,029 --> 00:20:52,980
so safe languages like Haskell and so on

530
00:20:50,519 --> 00:20:55,499
don't have these values so you cannot

531
00:20:52,980 --> 00:20:57,210
crash in that same way and I think if we

532
00:20:55,499 --> 00:20:58,499
want to build robust infrastructure we

533
00:20:57,210 --> 00:21:00,240
have to think about using really safe

534
00:20:58,499 --> 00:21:02,820
languages memory safe language but also

535
00:21:00,240 --> 00:21:05,039
type safe languages that don't have any

536
00:21:02,820 --> 00:21:06,629
problems these are solve problems we're

537
00:21:05,039 --> 00:21:08,100
just afraid of them just some technical

538
00:21:06,629 --> 00:21:10,860
things about puppet I'm doing this for

539
00:21:08,100 --> 00:21:13,110
all the new tools it's mostly in Ruby

540
00:21:10,860 --> 00:21:15,029
and closure for the new server it has

541
00:21:13,110 --> 00:21:16,799
this puppet DSL the topology it's a

542
00:21:15,029 --> 00:21:18,840
client-server thing so we saw that the

543
00:21:16,799 --> 00:21:20,850
beginning and this is kind of a

544
00:21:18,840 --> 00:21:23,129
disappointment it used to be gplv2 and

545
00:21:20,850 --> 00:21:24,570
then they you know wanted to do the open

546
00:21:23,129 --> 00:21:27,389
core thing it moved a lot of it to

547
00:21:24,570 --> 00:21:31,049
apache license which was I think kind of

548
00:21:27,389 --> 00:21:32,580
a mistake a long time ago but the

549
00:21:31,049 --> 00:21:34,350
biggest thing with puppet that stood out

550
00:21:32,580 --> 00:21:36,449
for me I didn't realize until I was

551
00:21:34,350 --> 00:21:38,580
using it for at least two or three years

552
00:21:36,450 --> 00:21:39,929
puppet has the puppet server and then it

553
00:21:38,580 --> 00:21:41,658
has the puppet agent that runs on all

554
00:21:39,929 --> 00:21:43,740
the clients and they have this strange

555
00:21:41,659 --> 00:21:45,840
separation of some code runs on the

556
00:21:43,740 --> 00:21:47,260
server and some code runs on the client

557
00:21:45,840 --> 00:21:49,090
and they go back and forth

558
00:21:47,260 --> 00:21:51,070
and I can explain to you how it works

559
00:21:49,090 --> 00:21:53,050
but it's not clear why this makes sense

560
00:21:51,070 --> 00:21:54,429
I've talked to some helping people

561
00:21:53,050 --> 00:21:56,770
they've had some arguments which I

562
00:21:54,430 --> 00:21:57,910
didn't really agree with but yeah so

563
00:21:56,770 --> 00:21:58,810
it's a little bit strange and it can be

564
00:21:57,910 --> 00:22:00,940
confusing when you're writing code

565
00:21:58,810 --> 00:22:02,909
dealing with this stuff so something to

566
00:22:00,940 --> 00:22:05,260
think about if you look at puppet chef

567
00:22:02,910 --> 00:22:07,900
chef basically is like kind of a fork of

568
00:22:05,260 --> 00:22:10,740
puppet puppet the chef people didn't

569
00:22:07,900 --> 00:22:14,350
want a DSL they wanted pure Ruby code

570
00:22:10,740 --> 00:22:18,130
effectively and so I'll see you want to

571
00:22:14,350 --> 00:22:23,679
see some Chef anybody want to see some

572
00:22:18,130 --> 00:22:25,720
chef all right cool why not so here's

573
00:22:23,680 --> 00:22:28,030
some chef and here's I'll just show you

574
00:22:25,720 --> 00:22:31,210
this in vim so you can see a little bit

575
00:22:28,030 --> 00:22:32,500
nicer so here's the Ruby code and watch

576
00:22:31,210 --> 00:22:35,680
here I'm doing this puts which is

577
00:22:32,500 --> 00:22:38,710
basically printf in Ruby I'm doing one

578
00:22:35,680 --> 00:22:40,650
at the start one at the end down here

579
00:22:38,710 --> 00:22:44,140
and in the middle I have all these these

580
00:22:40,650 --> 00:22:48,040
user declarations okay and watch what

581
00:22:44,140 --> 00:22:54,190
happens when I run the code and I'll

582
00:22:48,040 --> 00:22:57,100
just so we'll run the code run it kill

583
00:22:54,190 --> 00:22:59,590
it and time it oh sorry so it already

584
00:22:57,100 --> 00:23:01,629
did a bit of work so deduct a few

585
00:22:59,590 --> 00:23:04,720
seconds so look look right here here's

586
00:23:01,630 --> 00:23:06,820
the put these are my two messages that

587
00:23:04,720 --> 00:23:09,220
happen all the start and then the users

588
00:23:06,820 --> 00:23:11,169
get created so Ruby the way it works

589
00:23:09,220 --> 00:23:12,730
it's kind of a little strange but what's

590
00:23:11,170 --> 00:23:15,400
actually happening if all the code runs

591
00:23:12,730 --> 00:23:18,700
and then during the running these

592
00:23:15,400 --> 00:23:20,920
statements these resources get evaluated

593
00:23:18,700 --> 00:23:22,510
and stored somewhere and then at the end

594
00:23:20,920 --> 00:23:24,400
it clicks them all and then applies them

595
00:23:22,510 --> 00:23:26,110
so it's kind of like a two-stage thing

596
00:23:24,400 --> 00:23:27,730
if you've ever done vagrant and written

597
00:23:26,110 --> 00:23:30,879
code in a vagrant file it works the same

598
00:23:27,730 --> 00:23:32,770
way it's very common for ruby dsls but i

599
00:23:30,880 --> 00:23:34,060
think this is super confusing because if

600
00:23:32,770 --> 00:23:36,430
you think about coding you have to think

601
00:23:34,060 --> 00:23:40,629
in terms of the code execution and then

602
00:23:36,430 --> 00:23:42,880
the evaluation at the end which is super

603
00:23:40,630 --> 00:23:44,740
super confusing and the bad thing is you

604
00:23:42,880 --> 00:23:47,260
have this full imperative language which

605
00:23:44,740 --> 00:23:48,850
i think is quite dangerous so if you're

606
00:23:47,260 --> 00:23:50,100
making off by one error and you blow

607
00:23:48,850 --> 00:23:53,790
away a data center that could be

608
00:23:50,100 --> 00:23:55,230
right so we're getting into the modern

609
00:23:53,790 --> 00:23:57,470
era where things should be safe and

610
00:23:55,230 --> 00:24:01,200
reliable and so that's what my big

611
00:23:57,470 --> 00:24:03,050
problems with chef I don't know what's

612
00:24:01,200 --> 00:24:05,280
been happening like all my chef friends

613
00:24:03,050 --> 00:24:07,409
stopped using chef when they started

614
00:24:05,280 --> 00:24:08,430
doing the like US prisons thing or

615
00:24:07,410 --> 00:24:10,710
something I don't know what's going on

616
00:24:08,430 --> 00:24:12,810
but there's a lot of good people and

617
00:24:10,710 --> 00:24:13,320
smart people at chef and that's what it

618
00:24:12,810 --> 00:24:17,250
looks like

619
00:24:13,320 --> 00:24:18,419
so yeah random chef some random of

620
00:24:17,250 --> 00:24:21,750
technical things it's implemented in

621
00:24:18,420 --> 00:24:24,720
Ruby it has this Ruby DSL using Ruby

622
00:24:21,750 --> 00:24:26,340
code with special resources it also has

623
00:24:24,720 --> 00:24:28,050
a client-server topology all of these

624
00:24:26,340 --> 00:24:28,919
demos I'm not running this chef server

625
00:24:28,050 --> 00:24:30,540
and the puppet server

626
00:24:28,920 --> 00:24:33,390
I'm just running them in standalone so

627
00:24:30,540 --> 00:24:36,810
you can see quickly its apache license

628
00:24:33,390 --> 00:24:38,340
as everything these days and the thing

629
00:24:36,810 --> 00:24:40,200
that sort of disappointed about is even

630
00:24:38,340 --> 00:24:42,000
though it has full Ruby language it

631
00:24:40,200 --> 00:24:44,490
hasn't delivered on building fully

632
00:24:42,000 --> 00:24:46,050
autonomous systems right so I don't know

633
00:24:44,490 --> 00:24:47,610
that this proved that having a full

634
00:24:46,050 --> 00:24:50,159
programming language is really the

635
00:24:47,610 --> 00:24:53,209
missing piece in config management does

636
00:24:50,160 --> 00:24:56,430
that make sense that's just my opinion

637
00:24:53,210 --> 00:24:59,150
so ansible everyone's favorite I saw it

638
00:24:56,430 --> 00:25:01,530
we got the farm boy up in the front I

639
00:24:59,150 --> 00:25:03,900
was really shocked how popular hands

640
00:25:01,530 --> 00:25:05,760
pulled on so quickly I used to work at

641
00:25:03,900 --> 00:25:07,020
this company called Red Hat and during

642
00:25:05,760 --> 00:25:09,420
that time they fired ansible

643
00:25:07,020 --> 00:25:11,070
and that was a big surprise there are

644
00:25:09,420 --> 00:25:13,470
some problems with ansible it's great

645
00:25:11,070 --> 00:25:15,149
for small things but topologically it's

646
00:25:13,470 --> 00:25:16,860
got this design architecture where you

647
00:25:15,150 --> 00:25:18,480
have that Orchestrator that's going out

648
00:25:16,860 --> 00:25:21,330
and doing stuff so I've seen customers

649
00:25:18,480 --> 00:25:24,570
with 50 hosts or 100 hosts and they're

650
00:25:21,330 --> 00:25:26,760
hitting like really big walls it's very

651
00:25:24,570 --> 00:25:28,860
slow I thought stuff isn't isn't very

652
00:25:26,760 --> 00:25:30,360
fast algorithm you keep every time it

653
00:25:28,860 --> 00:25:32,520
runs has to recheck everything so that

654
00:25:30,360 --> 00:25:35,100
is also very slow so it's great and

655
00:25:32,520 --> 00:25:36,830
useful for small things but I think in

656
00:25:35,100 --> 00:25:40,409
the longer term without some clever

657
00:25:36,830 --> 00:25:42,240
building of your ansible setup it's not

658
00:25:40,410 --> 00:25:43,470
really scaling and that's the problem we

659
00:25:42,240 --> 00:25:44,640
shouldn't have to be clever to do all of

660
00:25:43,470 --> 00:25:46,530
these things you want our tools to help

661
00:25:44,640 --> 00:25:49,530
us we don't wanna be working around our

662
00:25:46,530 --> 00:25:51,990
tools and the thing that's absurd for me

663
00:25:49,530 --> 00:25:52,559
is this yeah thing I just I'm not that

664
00:25:51,990 --> 00:25:54,120
in love

665
00:25:52,559 --> 00:25:56,519
the amel that I want to be writing this

666
00:25:54,120 --> 00:25:58,469
every day and fun fact actually the

667
00:25:56,519 --> 00:25:59,879
llamo thing was a total accident from

668
00:25:58,470 --> 00:26:02,399
what I heard I was talking to someone

669
00:25:59,879 --> 00:26:03,809
and basically the animal front end was

670
00:26:02,399 --> 00:26:05,549
just temporary and was meant to be

671
00:26:03,809 --> 00:26:07,289
replaced by language so that's a lot of

672
00:26:05,549 --> 00:26:11,879
work and just never happened and it's

673
00:26:07,289 --> 00:26:14,220
stuck so who knows but nevertheless do

674
00:26:11,879 --> 00:26:16,559
you want to see an a school demo you

675
00:26:14,220 --> 00:26:18,690
want to see an ansible demo all right

676
00:26:16,559 --> 00:26:20,460
thank you trying to make this a little

677
00:26:18,690 --> 00:26:22,799
bit entertaining because it's a little

678
00:26:20,460 --> 00:26:25,769
bit of the same so kind of simple here

679
00:26:22,799 --> 00:26:27,929
here's a little users file it's a it's a

680
00:26:25,769 --> 00:26:31,080
a llamo file with the list of users to

681
00:26:27,929 --> 00:26:36,749
create not anything revolutionary and if

682
00:26:31,080 --> 00:26:39,418
we run it I forgot to time it the cow is

683
00:26:36,749 --> 00:26:46,649
creating users i've time to sip some

684
00:26:39,419 --> 00:26:49,740
water I mean you can tell it's not super

685
00:26:46,649 --> 00:26:54,508
fast and even if I run it again it'll go

686
00:26:49,740 --> 00:26:58,590
a bit faster but even with the users all

687
00:26:54,509 --> 00:27:00,240
created it takes some time if we

688
00:26:58,590 --> 00:27:03,059
actually want to here we can actually

689
00:27:00,240 --> 00:27:05,419
time it can just delete all the old

690
00:27:03,059 --> 00:27:05,418
users

691
00:27:06,880 --> 00:27:15,490
you can see them disappearing on the

692
00:27:08,920 --> 00:27:17,140
left and if we run it can see I like the

693
00:27:15,490 --> 00:27:20,940
cow cows a is kind of one of my favorite

694
00:27:17,140 --> 00:27:22,660
things so you get points for that but

695
00:27:20,940 --> 00:27:24,640
imagine when you're doing big

696
00:27:22,660 --> 00:27:26,440
complicated things over SSH too many

697
00:27:24,640 --> 00:27:28,060
machines you can see it takes quite a

698
00:27:26,440 --> 00:27:31,600
lot of time to create three users right

699
00:27:28,060 --> 00:27:32,169
am I crazy or is this a little slow I'm

700
00:27:31,600 --> 00:27:37,540
not crazy

701
00:27:32,170 --> 00:27:38,590
thank you so what I mean but heck

702
00:27:37,540 --> 00:27:41,500
there's gonna be louder if you're gonna

703
00:27:38,590 --> 00:27:42,939
heckle anyway so yeah but it's

704
00:27:41,500 --> 00:27:44,530
incredibly popular it's incredibly

705
00:27:42,940 --> 00:27:46,060
useful and for simple things I still

706
00:27:44,530 --> 00:27:47,980
think it's a really good solution so

707
00:27:46,060 --> 00:27:49,690
just think about it because sometimes

708
00:27:47,980 --> 00:27:51,640
you get invested in the simple solution

709
00:27:49,690 --> 00:27:54,930
and it gets much bigger and then over

710
00:27:51,640 --> 00:27:58,090
time things if you get a little bit

711
00:27:54,930 --> 00:28:00,010
technical wise implement in Python as

712
00:27:58,090 --> 00:28:01,720
you might know the sea animal interface

713
00:28:00,010 --> 00:28:03,700
is not exactly what I want it's a

714
00:28:01,720 --> 00:28:06,520
central Orchestrator it's also config

715
00:28:03,700 --> 00:28:08,230
management tool it's gplv3

716
00:28:06,520 --> 00:28:10,420
which is super funny because for some

717
00:28:08,230 --> 00:28:12,580
reason when they release a pencil tower

718
00:28:10,420 --> 00:28:15,370
source code they decided for some

719
00:28:12,580 --> 00:28:16,720
unknown reason to pick the apache

720
00:28:15,370 --> 00:28:18,909
license instead of keeping the same

721
00:28:16,720 --> 00:28:20,950
license for some reason so something

722
00:28:18,910 --> 00:28:22,270
funny is going on at Red Hat with the

723
00:28:20,950 --> 00:28:24,510
legal department you'll have to find out

724
00:28:22,270 --> 00:28:26,970
why they chose that different license

725
00:28:24,510 --> 00:28:31,150
and I told you about the animal friend

726
00:28:26,970 --> 00:28:34,720
docker run here about docker is donker

727
00:28:31,150 --> 00:28:37,750
config management tool no it's not don't

728
00:28:34,720 --> 00:28:39,610
be misled so when dr. sorted started

729
00:28:37,750 --> 00:28:41,110
getting popular people were always

730
00:28:39,610 --> 00:28:42,850
saying okay this is what's gonna replace

731
00:28:41,110 --> 00:28:45,280
the fig management and that's just like

732
00:28:42,850 --> 00:28:46,750
the biggest lie it's not it's a

733
00:28:45,280 --> 00:28:48,940
different technology stop thinking of it

734
00:28:46,750 --> 00:28:50,590
as the same technology and the saddest

735
00:28:48,940 --> 00:28:52,660
thing is that for configuring your

736
00:28:50,590 --> 00:28:56,860
docker images and your docker containers

737
00:28:52,660 --> 00:28:58,540
how do you do it shell scripts right

738
00:28:56,860 --> 00:29:00,129
it's sort of like going back to the very

739
00:28:58,540 --> 00:29:01,480
beginning we were like people shouldn't

740
00:29:00,130 --> 00:29:03,070
use shell scripts to define our

741
00:29:01,480 --> 00:29:04,180
infrastructure oh now we have talker so

742
00:29:03,070 --> 00:29:07,360
we're gonna start using shell scripts

743
00:29:04,180 --> 00:29:10,060
again so your best bet is to basically

744
00:29:07,360 --> 00:29:11,979
not use docker or use like a tool like

745
00:29:10,060 --> 00:29:16,590
puppet or chef to build the images or

746
00:29:11,980 --> 00:29:16,590
something else it's just kind of absurd

747
00:29:16,950 --> 00:29:22,200
and I just like the docker project is

748
00:29:19,950 --> 00:29:25,019
this huge enormous sprawling giant

749
00:29:22,200 --> 00:29:27,240
massive things which is just I just

750
00:29:25,019 --> 00:29:29,549
think it's just over engineered and in

751
00:29:27,240 --> 00:29:30,990
all the wrong places if you are into the

752
00:29:29,549 --> 00:29:32,850
container things I'm not an G container

753
00:29:30,990 --> 00:29:35,549
there's this lovely project called

754
00:29:32,850 --> 00:29:37,289
system the end spawn which is just light

755
00:29:35,549 --> 00:29:39,059
and works and integrates and the C

756
00:29:37,289 --> 00:29:40,408
groups and all the magic it's part of

757
00:29:39,059 --> 00:29:42,779
the SystemVue project which is a good

758
00:29:40,409 --> 00:29:43,350
thing because they do great work and so

759
00:29:42,779 --> 00:29:45,679
check it out

760
00:29:43,350 --> 00:29:49,199
but I'm here to give you a docker demo

761
00:29:45,679 --> 00:29:50,760
so I'll just show you how it works I had

762
00:29:49,200 --> 00:29:54,600
to run it last night so I get everything

763
00:29:50,760 --> 00:29:56,549
cached so if I just show you in here I

764
00:29:54,600 --> 00:29:59,789
have the docker file really simple thing

765
00:29:56,549 --> 00:30:01,168
these sort of verbs and each one of

766
00:29:59,789 --> 00:30:03,510
these becomes like a layer in the

767
00:30:01,169 --> 00:30:05,100
filesystem image just kind of strange a

768
00:30:03,510 --> 00:30:07,740
big problem of this is if you build this

769
00:30:05,100 --> 00:30:10,168
image and one of these is this update

770
00:30:07,740 --> 00:30:12,120
command you'll never know when that

771
00:30:10,169 --> 00:30:15,299
command is still so it will never know

772
00:30:12,120 --> 00:30:16,709
to re-up date things that were once we

773
00:30:15,299 --> 00:30:18,299
updated you know what I mean

774
00:30:16,710 --> 00:30:19,740
so basically if you create this if you

775
00:30:18,299 --> 00:30:21,658
run this and we'll build this they'll

776
00:30:19,740 --> 00:30:22,019
say this hasn't changed therefore below

777
00:30:21,659 --> 00:30:23,840
it

778
00:30:22,019 --> 00:30:26,309
I don't rerun any of the old commands

779
00:30:23,840 --> 00:30:28,740
same thing this doesn't change this

780
00:30:26,309 --> 00:30:30,600
command runs once it never knows that

781
00:30:28,740 --> 00:30:32,159
it's stale so we'll never be update it

782
00:30:30,600 --> 00:30:34,199
so to work around these things there's

783
00:30:32,159 --> 00:30:36,179
all sorts of packs and variable names

784
00:30:34,200 --> 00:30:38,190
and modified time stuff but it's it's

785
00:30:36,179 --> 00:30:41,460
the whole design of the docker file for

786
00:30:38,190 --> 00:30:43,260
me does not excite me so but I built

787
00:30:41,460 --> 00:30:46,010
this last night and I can show you how

788
00:30:43,260 --> 00:30:50,669
it works you basically build it like

789
00:30:46,010 --> 00:30:52,379
this which I did it took quite a while

790
00:30:50,669 --> 00:30:54,539
last night but it's done now so it's

791
00:30:52,380 --> 00:30:57,240
item foamed and doesn't rebuild it and

792
00:30:54,539 --> 00:30:59,730
then to run it will just run it over

793
00:30:57,240 --> 00:31:03,340
here and you can see now you're inside

794
00:30:59,730 --> 00:31:06,910
this container and you can do stuff like

795
00:31:03,340 --> 00:31:08,740
no I don't know oh I don't really trust

796
00:31:06,910 --> 00:31:10,690
docker to not delete my machine so I

797
00:31:08,740 --> 00:31:17,170
won't like rake it too much but if you

798
00:31:10,690 --> 00:31:19,660
kill it and then you go back in there's

799
00:31:17,170 --> 00:31:21,610
options back so yeah you have to

800
00:31:19,660 --> 00:31:22,960
basically build stateless applications

801
00:31:21,610 --> 00:31:25,240
which is actually a good thing but

802
00:31:22,960 --> 00:31:26,380
aren't actually a lot of people software

803
00:31:25,240 --> 00:31:28,660
applications aren't really ready for

804
00:31:26,380 --> 00:31:35,020
this environment so there's some

805
00:31:28,660 --> 00:31:36,580
challenges that make sense yeah some

806
00:31:35,020 --> 00:31:38,680
quick technical things it's implemented

807
00:31:36,580 --> 00:31:40,840
in golang I actually like the language a

808
00:31:38,680 --> 00:31:42,610
lot I don't like the way the project is

809
00:31:40,840 --> 00:31:44,379
run all the time and I don't like the

810
00:31:42,610 --> 00:31:46,570
tools around going but going itself as a

811
00:31:44,380 --> 00:31:49,720
lovely language as long as they don't

812
00:31:46,570 --> 00:31:51,370
add generics it has this really poor

813
00:31:49,720 --> 00:31:53,020
interface for describing what you want

814
00:31:51,370 --> 00:31:54,399
how you build your containers I don't

815
00:31:53,020 --> 00:31:59,320
think this is how it should be done but

816
00:31:54,400 --> 00:32:04,780
they're so popular um it's not a config

817
00:31:59,320 --> 00:32:06,550
management tool what is it yes what kind

818
00:32:04,780 --> 00:32:07,389
of tool is it remember those boring

819
00:32:06,550 --> 00:32:11,440
sides in the beginning

820
00:32:07,390 --> 00:32:14,740
somebody provisioning tool right so it's

821
00:32:11,440 --> 00:32:16,030
what gets you the base thing running so

822
00:32:14,740 --> 00:32:17,440
that you can run a config management to

823
00:32:16,030 --> 00:32:19,870
build your image and everything that

824
00:32:17,440 --> 00:32:22,090
runs inside it also apache license big

825
00:32:19,870 --> 00:32:23,649
surprise and one good thing is it

826
00:32:22,090 --> 00:32:25,330
actually helped make containers

827
00:32:23,650 --> 00:32:27,280
mainstream again so i think there's some

828
00:32:25,330 --> 00:32:29,020
potential there a quick thing on

829
00:32:27,280 --> 00:32:31,930
kubernetes because everyone is it's not

830
00:32:29,020 --> 00:32:34,270
a config management tool what is it it's

831
00:32:31,930 --> 00:32:35,620
an Orchestrator yeah it cannot replace

832
00:32:34,270 --> 00:32:37,930
config management that's completely

833
00:32:35,620 --> 00:32:42,550
false there's no really easy way to

834
00:32:37,930 --> 00:32:44,170
bootstrap the XD cluster and put it into

835
00:32:42,550 --> 00:32:45,820
production it's like one of these

836
00:32:44,170 --> 00:32:48,220
unsolved problems that they just say oh

837
00:32:45,820 --> 00:32:52,060
we don't know how to do this so run it

838
00:32:48,220 --> 00:32:53,650
in Google cloud or Amazon and just

839
00:32:52,060 --> 00:32:55,570
thinking about infrastructure and

840
00:32:53,650 --> 00:32:57,430
real-time systems and everything that

841
00:32:55,570 --> 00:32:59,379
happens the llamó front-end just doesn't

842
00:32:57,430 --> 00:33:01,210
do it for me like it's not a proper way

843
00:32:59,380 --> 00:33:04,000
to describe everything so there's other

844
00:33:01,210 --> 00:33:05,680
solutions like helm and cue and all

845
00:33:04,000 --> 00:33:07,510
these other tools to add on top of it to

846
00:33:05,680 --> 00:33:08,740
make it more sensible but it hasn't

847
00:33:07,510 --> 00:33:11,140
really

848
00:33:08,740 --> 00:33:13,480
for me employment going again llamo

849
00:33:11,140 --> 00:33:15,460
format orchestrators we said it has this

850
00:33:13,480 --> 00:33:18,160
evil google CLA so you should not send

851
00:33:15,460 --> 00:33:19,540
them patches and the paper that it's all

852
00:33:18,160 --> 00:33:21,550
based on if you actually read the board

853
00:33:19,540 --> 00:33:23,110
paper there's very little details of

854
00:33:21,550 --> 00:33:25,120
very little information in that so the

855
00:33:23,110 --> 00:33:26,979
whole design premise they tried to

856
00:33:25,120 --> 00:33:30,489
convince everyone then Italy convinced

857
00:33:26,980 --> 00:33:35,110
me you want to see a demo just kidding I

858
00:33:30,490 --> 00:33:36,970
am NOT giving you a demo I'm a there's

859
00:33:35,110 --> 00:33:38,649
recorded demos I've given talks in the

860
00:33:36,970 --> 00:33:40,090
past where I did some food some cube

861
00:33:38,650 --> 00:33:43,000
stuff so if you really want to see some

862
00:33:40,090 --> 00:33:44,919
basics look on my website so I'm not

863
00:33:43,000 --> 00:33:46,809
even installing this in the IBM save

864
00:33:44,920 --> 00:33:48,250
yourself use something different let's

865
00:33:46,809 --> 00:33:50,110
look at the future so this is where I am

866
00:33:48,250 --> 00:33:51,429
super biased okay because I'm working on

867
00:33:50,110 --> 00:33:54,129
a tool that I think is part of the

868
00:33:51,429 --> 00:33:55,600
future but I want you to decide and tell

869
00:33:54,130 --> 00:33:57,040
me what you think so these are some of

870
00:33:55,600 --> 00:33:57,879
the things are wandering the tool wanted

871
00:33:57,040 --> 00:33:59,740
to be safe

872
00:33:57,880 --> 00:34:02,920
powerful reactive easy to reason about

873
00:33:59,740 --> 00:34:06,330
and so on so you want to see a demo ok

874
00:34:02,920 --> 00:34:08,649
so here's some code it's hard to see and

875
00:34:06,330 --> 00:34:11,319
I'm gonna go a little bit fast because I

876
00:34:08,649 --> 00:34:15,129
lost 5 min at the beginning but let's

877
00:34:11,320 --> 00:34:19,950
just kill this for now so over here we

878
00:34:15,129 --> 00:34:19,949
have our little MGMT thing again this is

879
00:34:20,070 --> 00:34:25,840
so I'm gonna run the MGMT on the left

880
00:34:23,139 --> 00:34:30,010
and I'm just gonna show you this code

881
00:34:25,840 --> 00:34:32,169
first okay so this is the code the

882
00:34:30,010 --> 00:34:33,850
syntax highlighting isn't something that

883
00:34:32,168 --> 00:34:34,810
I have yet so I'm sorry for that but

884
00:34:33,850 --> 00:34:36,279
basically if you can see there's

885
00:34:34,810 --> 00:34:37,989
different statements there's different

886
00:34:36,280 --> 00:34:40,119
expressions so there's this date time

887
00:34:37,989 --> 00:34:42,790
malfunction which we're adding to this

888
00:34:40,119 --> 00:34:43,929
variable a year which is over here and

889
00:34:42,790 --> 00:34:46,239
then we put all these values in the

890
00:34:43,929 --> 00:34:48,668
struct along with the load and then all

891
00:34:46,239 --> 00:34:50,678
those variables go into this big

892
00:34:48,668 --> 00:34:53,230
template at the bottom which we're going

893
00:34:50,679 --> 00:34:55,440
to print out so let's run this on the

894
00:34:53,230 --> 00:34:55,440
left

895
00:35:03,380 --> 00:35:07,530
it's kind of my dev environment and

896
00:35:05,610 --> 00:35:21,950
there's a bug in I'm still feeling let's

897
00:35:07,530 --> 00:35:21,950
see if this can work on seconds

898
00:35:27,950 --> 00:35:35,720
oh it I gotta use the different versions

899
00:35:29,960 --> 00:35:38,020
on second releases one second sorry

900
00:35:35,720 --> 00:35:38,020
about that

901
00:35:44,890 --> 00:35:54,500
it's my password is a password if anyone

902
00:35:47,690 --> 00:35:58,940
sees my laptop these packages are all

903
00:35:54,500 --> 00:36:05,540
online so you can try them out I think

904
00:35:58,940 --> 00:36:08,710
this should work a bit better all right

905
00:36:05,540 --> 00:36:08,710
on second

906
00:36:17,480 --> 00:36:22,610
okay

907
00:36:20,109 --> 00:36:25,810
let's run this demo

908
00:36:22,610 --> 00:36:27,890
okay so MGMT is running on the left and

909
00:36:25,810 --> 00:36:30,650
over here I've told it to create this

910
00:36:27,890 --> 00:36:33,350
one file date time and if you see it's

911
00:36:30,650 --> 00:36:36,920
one of a bunch of text in it but if I

912
00:36:33,350 --> 00:36:38,810
watch - n01 just to show you what's

913
00:36:36,920 --> 00:36:41,030
happening in real time in the file you

914
00:36:38,810 --> 00:36:43,310
can see that date time function is

915
00:36:41,030 --> 00:36:46,010
actually really a ting every second in

916
00:36:43,310 --> 00:36:48,860
that small amount of dsl code and if it

917
00:36:46,010 --> 00:36:51,320
does that it can change the file because

918
00:36:48,860 --> 00:36:52,970
it sees what has to be updated and so on

919
00:36:51,320 --> 00:36:55,730
and you can see I'm printing out the

920
00:36:52,970 --> 00:36:57,379
time which is the number of time in

921
00:36:55,730 --> 00:36:59,060
seconds and also other things like the

922
00:36:57,380 --> 00:37:01,040
load which I'm also printing out are

923
00:36:59,060 --> 00:37:02,570
showing in real time as well and the

924
00:37:01,040 --> 00:37:05,000
last thing just for fun that's kind of a

925
00:37:02,570 --> 00:37:07,220
bit of a a joke demo if you see if I

926
00:37:05,000 --> 00:37:08,750
make noise you can see this vu meter is

927
00:37:07,220 --> 00:37:11,000
going up and down because one of the

928
00:37:08,750 --> 00:37:13,730
inputs into my language is the actual

929
00:37:11,000 --> 00:37:15,710
microphone of my laptop and so what this

930
00:37:13,730 --> 00:37:17,450
is is giving you a DSL it's this

931
00:37:15,710 --> 00:37:19,550
reactive DSL it's a special kind of

932
00:37:17,450 --> 00:37:21,259
language that knows when to update

933
00:37:19,550 --> 00:37:24,110
things based on real-time streams

934
00:37:21,260 --> 00:37:27,080
integrates all those streams and output

935
00:37:24,110 --> 00:37:28,070
something that can change over time so

936
00:37:27,080 --> 00:37:30,259
this is the kind of thing you can

937
00:37:28,070 --> 00:37:33,500
imagine if the load is going up in your

938
00:37:30,260 --> 00:37:35,900
system you might want to spin up some

939
00:37:33,500 --> 00:37:37,850
new VMs or shut down something else or

940
00:37:35,900 --> 00:37:39,740
so on as it changes that makes sense

941
00:37:37,850 --> 00:37:43,460
this is kind of how we want to model

942
00:37:39,740 --> 00:37:46,759
things in the future I'll show you one

943
00:37:43,460 --> 00:37:53,870
more demo you know to show you actually

944
00:37:46,760 --> 00:37:57,550
one more cool demo if I have time so I'm

945
00:37:53,870 --> 00:37:57,549
gonna run this

946
00:38:00,460 --> 00:38:06,430
right to tell this one first

947
00:38:07,470 --> 00:38:22,569
so I'm running MGMT on the left and MGMT

948
00:38:18,370 --> 00:38:24,100
has actually started up this vm3 I'm

949
00:38:22,570 --> 00:38:25,030
gonna use my dev environment so let's

950
00:38:24,100 --> 00:38:28,690
see if this works

951
00:38:25,030 --> 00:38:30,130
so I've started up MGMT on the left and

952
00:38:28,690 --> 00:38:34,690
over here I'm logging into the VM that

953
00:38:30,130 --> 00:38:38,260
MGMT is started up and I'll just run

954
00:38:34,690 --> 00:38:39,520
screaming and inside the VM normally

955
00:38:38,260 --> 00:38:40,780
when you boot up the VM when it's

956
00:38:39,520 --> 00:38:42,520
provision you would run MGMT

957
00:38:40,780 --> 00:38:45,130
automatically but in this case I'm gonna

958
00:38:42,520 --> 00:38:47,560
show you what it looks like so you

959
00:38:45,130 --> 00:38:48,610
actually can see MGMT running and the

960
00:38:47,560 --> 00:38:52,000
second thing I'm gonna do is gonna run

961
00:38:48,610 --> 00:38:54,220
this display CPUs script and this just

962
00:38:52,000 --> 00:38:59,440
shows me in real time how many CPUs

963
00:38:54,220 --> 00:39:04,540
virtual CPUs are in the VM now the code

964
00:38:59,440 --> 00:39:07,180
that's running here is this so what it

965
00:39:04,540 --> 00:39:09,640
does is it looks at this file that's on

966
00:39:07,180 --> 00:39:12,100
my hard drive 10 CPU count it pulls out

967
00:39:09,640 --> 00:39:14,049
an integer and then what it does is it

968
00:39:12,100 --> 00:39:16,600
has this virtual machine resource and it

969
00:39:14,050 --> 00:39:20,710
puts that number of CPUs into the VM

970
00:39:16,600 --> 00:39:25,600
resource and what that does is if I go

971
00:39:20,710 --> 00:39:32,980
here sorry about all the windows and I

972
00:39:25,600 --> 00:39:35,380
echo 2 into that file when I press ENTER

973
00:39:32,980 --> 00:39:37,180
in theory MGMT's inner notice that the

974
00:39:35,380 --> 00:39:38,980
file changed then a second that new

975
00:39:37,180 --> 00:39:41,560
value it's gonna notice that the running

976
00:39:38,980 --> 00:39:43,540
VM has a different number of CPUs it's

977
00:39:41,560 --> 00:39:47,259
gonna take that value it's gonna hot

978
00:39:43,540 --> 00:39:49,690
plug in a CPU and then inside this file

979
00:39:47,260 --> 00:39:51,220
MGMT is gonna see that it's gonna let

980
00:39:49,690 --> 00:39:53,770
the VM be online it's gonna show you the

981
00:39:51,220 --> 00:39:58,480
new value of two CPUs so let's see if it

982
00:39:53,770 --> 00:40:00,520
works it takes a moment the first time

983
00:39:58,480 --> 00:40:03,760
because it's my hard drives kind of slow

984
00:40:00,520 --> 00:40:06,340
and then you can see it has to and if

985
00:40:03,760 --> 00:40:09,520
you go to something like 3:00 and see it

986
00:40:06,340 --> 00:40:14,770
happens in under a second I can go up to

987
00:40:09,520 --> 00:40:17,040
5 you go back down to 1 and you can even

988
00:40:14,770 --> 00:40:21,700
show off a little bit

989
00:40:17,040 --> 00:40:25,180
like with this little script I made and

990
00:40:21,700 --> 00:40:28,569
as you go plus and minus you can see

991
00:40:25,180 --> 00:40:30,368
MGMT's reacting in real-time making

992
00:40:28,570 --> 00:40:32,590
everything work so I've done this demo

993
00:40:30,369 --> 00:40:34,420
kind of quickly because I don't have a

994
00:40:32,590 --> 00:40:37,030
lot of time and they took away some time

995
00:40:34,420 --> 00:40:38,290
in a minute but after this is sort of

996
00:40:37,030 --> 00:40:40,090
the idea so if you start building

997
00:40:38,290 --> 00:40:41,740
infrastructure that it is working in

998
00:40:40,090 --> 00:40:44,530
real time we can do all these fancy

999
00:40:41,740 --> 00:40:47,439
things we can change our clothes and

1000
00:40:44,530 --> 00:40:49,750
move things around as things go that

1001
00:40:47,440 --> 00:40:51,130
makes sense

1002
00:40:49,750 --> 00:40:52,510
I'm sorry I didn't have longer to

1003
00:40:51,130 --> 00:40:54,640
explain that but I don't have a lot of

1004
00:40:52,510 --> 00:40:55,990
time and there's some good news so these

1005
00:40:54,640 --> 00:40:58,270
are sort of some of the fun things we

1006
00:40:55,990 --> 00:41:01,089
can do in MGMT how can you help just to

1007
00:40:58,270 --> 00:41:03,280
finish off you can use this you can test

1008
00:41:01,090 --> 00:41:05,230
it patch it share it document it started

1009
00:41:03,280 --> 00:41:07,060
blog it tweet it if you have tweeter

1010
00:41:05,230 --> 00:41:10,240
discuss with your friends just hack on

1011
00:41:07,060 --> 00:41:12,940
this stuff I am working on this

1012
00:41:10,240 --> 00:41:14,379
basically on my own time just because I

1013
00:41:12,940 --> 00:41:15,940
wanted to work on this for a bit and see

1014
00:41:14,380 --> 00:41:18,220
if I could turn it into something that's

1015
00:41:15,940 --> 00:41:20,109
the same itself so totally unfunded so

1016
00:41:18,220 --> 00:41:22,419
if you want to help fund it I think the

1017
00:41:20,109 --> 00:41:26,319
number is lower now but I'm on patreon

1018
00:41:22,420 --> 00:41:27,670
and funny hacker it's very sexy so check

1019
00:41:26,320 --> 00:41:29,440
it out the other thing I'm trying to do

1020
00:41:27,670 --> 00:41:31,839
I basically I think I'm gonna be ready

1021
00:41:29,440 --> 00:41:33,880
for full production use in the next six

1022
00:41:31,839 --> 00:41:35,770
months or so I'm starting using it I'm

1023
00:41:33,880 --> 00:41:37,599
using on my own servers now to sort of

1024
00:41:35,770 --> 00:41:39,310
setup and manage things stuff like that

1025
00:41:37,599 --> 00:41:40,900
and I had the idea of doing some

1026
00:41:39,310 --> 00:41:42,759
corporate sponsorship so we're launching

1027
00:41:40,900 --> 00:41:44,140
a website and if you want to have your

1028
00:41:42,760 --> 00:41:45,520
logo at the bottom for a very cheap

1029
00:41:44,140 --> 00:41:48,339
amount of money for a year

1030
00:41:45,520 --> 00:41:51,820
contact me you let me know that we good

1031
00:41:48,339 --> 00:41:53,470
let's just recap you can't hear the

1032
00:41:51,820 --> 00:41:55,720
audio but that's Arthur Benjamin saying

1033
00:41:53,470 --> 00:41:58,390
he's putting the cap back on his pens

1034
00:41:55,720 --> 00:42:00,310
it's recapping there's an IRC channel if

1035
00:41:58,390 --> 00:42:03,250
you're on IRC I'm not on slack sorry

1036
00:42:00,310 --> 00:42:05,680
everyone there's a tweeter account and a

1037
00:42:03,250 --> 00:42:08,550
mailing list which is still hosted by my

1038
00:42:05,680 --> 00:42:10,810
old employer so thank you old employer

1039
00:42:08,550 --> 00:42:12,670
the technical blog of James you all know

1040
00:42:10,810 --> 00:42:13,210
about so you can go check it out you can

1041
00:42:12,670 --> 00:42:15,609
find me

1042
00:42:13,210 --> 00:42:17,430
purple idea I go by purple idea on IRC

1043
00:42:15,609 --> 00:42:20,910
on tweeter and

1044
00:42:17,430 --> 00:42:23,160
I mean email if you want a more in-depth

1045
00:42:20,910 --> 00:42:26,660
technical talk about MGMT you're in luck

1046
00:42:23,160 --> 00:42:29,040
because today at 5:30 in the info room

1047
00:42:26,660 --> 00:42:30,540
you will probably be busy so if you want

1048
00:42:29,040 --> 00:42:32,490
to actually come come early for a seat

1049
00:42:30,540 --> 00:42:34,980
I'll show some demos that no one has

1050
00:42:32,490 --> 00:42:36,930
seen before and will really get in depth

1051
00:42:34,980 --> 00:42:39,420
without going quickly over all the tools

1052
00:42:36,930 --> 00:42:41,640
and tomorrow in the minimal languages

1053
00:42:39,420 --> 00:42:44,700
room I'm going to give them more FRP

1054
00:42:41,640 --> 00:42:46,410
languages talk for those people and if

1055
00:42:44,700 --> 00:42:48,180
you come to get your config management

1056
00:42:46,410 --> 00:42:50,250
tab I see crystals in the back of the

1057
00:42:48,180 --> 00:42:51,930
room he runs a great conference there's

1058
00:42:50,250 --> 00:42:54,930
gonna be one talk that I'm giving there

1059
00:42:51,930 --> 00:42:56,460
and two talks for some other people last

1060
00:42:54,930 --> 00:42:58,558
thing before you leave sorry one minute

1061
00:42:56,460 --> 00:43:00,540
if you like this talk please up to the

1062
00:42:58,559 --> 00:43:03,240
organizers and shake them and say please

1063
00:43:00,540 --> 00:43:05,430
I want you to know James's talk was

1064
00:43:03,240 --> 00:43:07,319
amazing and you can even go to the

1065
00:43:05,430 --> 00:43:09,240
feedback forum if you click on the talk

1066
00:43:07,319 --> 00:43:11,009
there's a submit feedback link so please

1067
00:43:09,240 --> 00:43:11,669
give me a good rating it would be

1068
00:43:11,010 --> 00:43:14,550
appreciated

1069
00:43:11,670 --> 00:43:16,500
and if you want I have a sticker you

1070
00:43:14,550 --> 00:43:18,470
promise to use your sticker come over

1071
00:43:16,500 --> 00:43:21,030
and I'll give you one for your laptops

1072
00:43:18,470 --> 00:43:23,180
and that's pretty much it thank you very

1073
00:43:21,030 --> 00:43:23,180
much

1074
00:43:28,530 --> 00:43:32,520
if you have any questions

