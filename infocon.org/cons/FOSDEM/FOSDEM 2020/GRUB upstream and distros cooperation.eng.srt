1
00:00:05,440 --> 00:00:09,360
all right welcome to the fosdem 2020

2
00:00:07,839 --> 00:00:11,440
distro dev room

3
00:00:09,360 --> 00:00:13,040
up next we have daniel kuiper talking

4
00:00:11,440 --> 00:00:14,480
about grub upstream and distro's

5
00:00:13,040 --> 00:00:18,400
cooperation

6
00:00:14,480 --> 00:00:21,439
thank you uh i will be talking about

7
00:00:18,400 --> 00:00:23,680
what is happening in the group i am uh

8
00:00:21,439 --> 00:00:24,880
daniel kipper i work for rocco and i am

9
00:00:23,680 --> 00:00:27,039
software developer and

10
00:00:24,880 --> 00:00:29,198
grammar upstream maintainer at the

11
00:00:27,039 --> 00:00:31,760
beginning some legal stuff

12
00:00:29,199 --> 00:00:32,640
uh which is required by my company so

13
00:00:31,760 --> 00:00:35,680
programmage

14
00:00:32,640 --> 00:00:37,920
i will be talking uh uh at the beginning

15
00:00:35,680 --> 00:00:38,719
about grab my tennis later i will move

16
00:00:37,920 --> 00:00:41,920
on to

17
00:00:38,719 --> 00:00:43,520
what happened during last year and i

18
00:00:41,920 --> 00:00:45,760
will be also discussing

19
00:00:43,520 --> 00:00:46,960
uh what is happening right now in the

20
00:00:45,760 --> 00:00:50,160
grub project

21
00:00:46,960 --> 00:00:52,160
um later i will um discuss

22
00:00:50,160 --> 00:00:53,440
main points what what are the problems

23
00:00:52,160 --> 00:00:55,519
in the project and at

24
00:00:53,440 --> 00:00:56,480
the end i would like to ask you what do

25
00:00:55,520 --> 00:00:59,520
you expect from

26
00:00:56,480 --> 00:01:03,279
from from the grub project

27
00:00:59,520 --> 00:01:06,640
so not much has changed since last year

28
00:01:03,280 --> 00:01:06,960
there are still three uh gap maintenance

29
00:01:06,640 --> 00:01:10,000
but

30
00:01:06,960 --> 00:01:12,559
i was uh able to convince

31
00:01:10,000 --> 00:01:13,200
two guys to to join the project and

32
00:01:12,560 --> 00:01:17,360
support

33
00:01:13,200 --> 00:01:18,080
me uh with uh three things uh alexander

34
00:01:17,360 --> 00:01:21,680
graf

35
00:01:18,080 --> 00:01:24,798
uh decided to take over

36
00:01:21,680 --> 00:01:28,159
management uh maintenance of risk five

37
00:01:24,799 --> 00:01:30,720
and likely lincoln takes care of

38
00:01:28,159 --> 00:01:31,360
arm and tfi so i would like to thank

39
00:01:30,720 --> 00:01:36,000
them

40
00:01:31,360 --> 00:01:38,400
uh to take over to taking over this work

41
00:01:36,000 --> 00:01:40,720
what happened last year alexander the

42
00:01:38,400 --> 00:01:44,399
graph introduced initial support for

43
00:01:40,720 --> 00:01:48,240
for risk five and he also

44
00:01:44,399 --> 00:01:51,040
introduced initial uh travis ci support

45
00:01:48,240 --> 00:01:52,079
uh into the graph calling watson from

46
00:01:51,040 --> 00:01:55,759
ubuntu

47
00:01:52,079 --> 00:01:58,798
um finally changed uh the metal

48
00:01:55,759 --> 00:02:01,119
how gnu loop is integrated uh

49
00:01:58,799 --> 00:02:01,920
with the grub it's currently it is much

50
00:02:01,119 --> 00:02:04,479
easier

51
00:02:01,920 --> 00:02:06,399
it is well documented how how to update

52
00:02:04,479 --> 00:02:10,318
the lip and i think it is

53
00:02:06,399 --> 00:02:13,120
it is the largest change which went uh

54
00:02:10,318 --> 00:02:14,958
into gra into the group last year eric

55
00:02:13,120 --> 00:02:18,000
snowback from oracle

56
00:02:14,959 --> 00:02:22,000
on the beyond fox request provided uh

57
00:02:18,000 --> 00:02:26,080
ob disk driver for spark platforms

58
00:02:22,000 --> 00:02:29,120
jesus uh at that small modules

59
00:02:26,080 --> 00:02:32,319
which allows you to modify intel

60
00:02:29,120 --> 00:02:35,599
msrs read writes

61
00:02:32,319 --> 00:02:36,640
and also this function will be used in

62
00:02:35,599 --> 00:02:40,799
other

63
00:02:36,640 --> 00:02:45,040
in other things after a few years andre

64
00:02:40,800 --> 00:02:46,319
from arm took over uh dhcp v4 work from

65
00:02:45,040 --> 00:02:49,120
andre bergenkov

66
00:02:46,319 --> 00:02:50,560
he splits these patches into some

67
00:02:49,120 --> 00:02:53,599
logical parts

68
00:02:50,560 --> 00:02:57,280
and we finally got a native uh

69
00:02:53,599 --> 00:02:59,518
full support for dhcp before

70
00:02:57,280 --> 00:03:00,800
we still have support for boot p does

71
00:02:59,519 --> 00:03:04,159
anybody here

72
00:03:00,800 --> 00:03:06,170
use boot p in their networks no but but

73
00:03:04,159 --> 00:03:07,920
we still have a support for the p

74
00:03:06,170 --> 00:03:11,679
[Laughter]

75
00:03:07,920 --> 00:03:14,720
and john uh at some point

76
00:03:11,680 --> 00:03:17,120
uh realized that uh b newton's folks

77
00:03:14,720 --> 00:03:20,319
decided to drop out support for

78
00:03:17,120 --> 00:03:24,159
out for spark 64.

79
00:03:20,319 --> 00:03:25,518
and he tried to convince uh beneath his

80
00:03:24,159 --> 00:03:28,798
guys to get it back

81
00:03:25,519 --> 00:03:30,319
but it wasn't possible so he started

82
00:03:28,799 --> 00:03:33,599
thinking how to get back

83
00:03:30,319 --> 00:03:37,359
uh sparx's dp4 support for

84
00:03:33,599 --> 00:03:40,720
into the into the grub and

85
00:03:37,360 --> 00:03:42,480
fortunately it uh it was quite easy

86
00:03:40,720 --> 00:03:44,840
the patch was uh pretty small

87
00:03:42,480 --> 00:03:49,518
surprisingly and currently we have

88
00:03:44,840 --> 00:03:53,120
uh we have spark 64 support

89
00:03:49,519 --> 00:03:57,599
uh into the gap um back

90
00:03:53,120 --> 00:04:00,239
uh just before 2.04 release michael

91
00:03:57,599 --> 00:04:01,359
from souza realized that it is not

92
00:04:00,239 --> 00:04:04,400
possible to buy

93
00:04:01,360 --> 00:04:08,400
a wild uh grub

94
00:04:04,400 --> 00:04:09,760
with gcc 9 so he provided a set of

95
00:04:08,400 --> 00:04:13,040
patches which

96
00:04:09,760 --> 00:04:16,159
fixed this issue and currently

97
00:04:13,040 --> 00:04:19,839
it is possible to to use gcc nine to buy

98
00:04:16,160 --> 00:04:22,160
by the crop at the end of uh

99
00:04:19,839 --> 00:04:23,198
uh sorry at the beginning of this uh

100
00:04:22,160 --> 00:04:26,400
this year

101
00:04:23,199 --> 00:04:28,080
uh patrick introduced a lux to support

102
00:04:26,400 --> 00:04:31,520
into the grub so we are able

103
00:04:28,080 --> 00:04:34,719
to read encrypted uh

104
00:04:31,520 --> 00:04:37,840
encrypted uh boot uh partitions uh

105
00:04:34,720 --> 00:04:38,440
from the from the grub directly and we

106
00:04:37,840 --> 00:04:42,080
had

107
00:04:38,440 --> 00:04:45,360
2.04 release uh in the middle of uh

108
00:04:42,080 --> 00:04:47,680
last year uh and um it took

109
00:04:45,360 --> 00:04:48,639
most of this features which are current

110
00:04:47,680 --> 00:04:52,080
which are released

111
00:04:48,639 --> 00:04:55,120
on this slide and also plenty fixes

112
00:04:52,080 --> 00:04:57,440
and cleanups what's happening

113
00:04:55,120 --> 00:04:58,160
right now the biggest thing which we are

114
00:04:57,440 --> 00:05:01,520
working on

115
00:04:58,160 --> 00:05:03,360
is a trench boot project uh and

116
00:05:01,520 --> 00:05:05,758
currently we are doing two things in

117
00:05:03,360 --> 00:05:10,080
parable in parallel

118
00:05:05,759 --> 00:05:13,440
me is focusing on txt implementation for

119
00:05:10,080 --> 00:05:15,440
photograph i had had

120
00:05:13,440 --> 00:05:17,199
nice presentation together with piotr

121
00:05:15,440 --> 00:05:21,600
from 3mdep

122
00:05:17,199 --> 00:05:24,880
about this work and

123
00:05:21,600 --> 00:05:27,199
yesterday and freem that

124
00:05:24,880 --> 00:05:28,159
is focusing on amd sk neet

125
00:05:27,199 --> 00:05:31,840
implementation

126
00:05:28,160 --> 00:05:35,680
uh uh for the grub i hope that

127
00:05:31,840 --> 00:05:36,719
i will be able to release uh the rfc for

128
00:05:35,680 --> 00:05:41,919
intel txt

129
00:05:36,720 --> 00:05:45,280
at the turn of february and march

130
00:05:41,919 --> 00:05:48,639
and on top of that amd

131
00:05:45,280 --> 00:05:51,520
sk implementation will be

132
00:05:48,639 --> 00:05:52,400
merged we are going to do that in that

133
00:05:51,520 --> 00:05:55,120
way because

134
00:05:52,400 --> 00:05:56,719
we think that there will be a lot of

135
00:05:55,120 --> 00:06:00,080
common parts between

136
00:05:56,720 --> 00:06:00,639
these two uh features provided by

137
00:06:00,080 --> 00:06:04,719
different

138
00:06:00,639 --> 00:06:07,919
companies uh finally i was able to

139
00:06:04,720 --> 00:06:11,039
convince uh red hat folks to

140
00:06:07,919 --> 00:06:14,159
forward board all uh

141
00:06:11,039 --> 00:06:17,199
patches which are uh carried in fedora

142
00:06:14,160 --> 00:06:19,759
uh and sorry uh to forth airport

143
00:06:17,199 --> 00:06:20,800
uh to upstream all purchase cards in

144
00:06:19,759 --> 00:06:23,360
fedora

145
00:06:20,800 --> 00:06:24,000
and red hat and here i would like to

146
00:06:23,360 --> 00:06:26,720
convince

147
00:06:24,000 --> 00:06:29,199
other uh distros to do the same because

148
00:06:26,720 --> 00:06:31,039
currently it is difficult to

149
00:06:29,199 --> 00:06:32,479
at least for example for red hat to

150
00:06:31,039 --> 00:06:36,479
merge upstream

151
00:06:32,479 --> 00:06:38,080
uh with with new new releases because

152
00:06:36,479 --> 00:06:39,840
they carry a lot of

153
00:06:38,080 --> 00:06:41,520
uh different patterns also it is

154
00:06:39,840 --> 00:06:45,039
difficult for us because

155
00:06:41,520 --> 00:06:48,400
uh we got some questions about

156
00:06:45,039 --> 00:06:52,000
things which currently are not upstream

157
00:06:48,400 --> 00:06:56,638
and this uh creates a lot of confusion

158
00:06:52,000 --> 00:07:00,400
uh also red hunt plans to introduce uh

159
00:06:56,639 --> 00:07:03,680
linux k execute usage to load another

160
00:07:00,400 --> 00:07:07,198
uh os from from from the grub

161
00:07:03,680 --> 00:07:10,400
it means that uh crap will run uh from

162
00:07:07,199 --> 00:07:13,599
small uh small

163
00:07:10,400 --> 00:07:14,719
um like euro environment and if it will

164
00:07:13,599 --> 00:07:18,800
use kai execute

165
00:07:14,720 --> 00:07:22,319
kx to start a new operating system

166
00:07:18,800 --> 00:07:23,039
uh at the end of last year i met with

167
00:07:22,319 --> 00:07:25,840
frame that

168
00:07:23,039 --> 00:07:27,680
fox and we also discussed uh some uh

169
00:07:25,840 --> 00:07:30,960
interesting features for example

170
00:07:27,680 --> 00:07:34,400
a remnant grub environment file

171
00:07:30,960 --> 00:07:37,840
it will be it can be used

172
00:07:34,400 --> 00:07:40,479
by some embedded devices to safeguard

173
00:07:37,840 --> 00:07:42,318
upgrades and currently it is not

174
00:07:40,479 --> 00:07:43,359
possible to do that safely so for

175
00:07:42,319 --> 00:07:46,879
example if you

176
00:07:43,360 --> 00:07:48,240
if something uh bad happens what happens

177
00:07:46,879 --> 00:07:51,680
during the upgrade

178
00:07:48,240 --> 00:07:53,440
uh then uh after a reboot machine

179
00:07:51,680 --> 00:07:55,120
we're not able to start or something

180
00:07:53,440 --> 00:07:58,400
like that so this uh

181
00:07:55,120 --> 00:08:02,000
environment file uh

182
00:07:58,400 --> 00:08:05,280
and how it works it should be improved

183
00:08:02,000 --> 00:08:06,000
uh freedom depos also are looking for

184
00:08:05,280 --> 00:08:10,239
tpm

185
00:08:06,000 --> 00:08:14,400
2.0 support in legacy systems currently

186
00:08:10,240 --> 00:08:18,240
there is a tpm driver in the grab but

187
00:08:14,400 --> 00:08:21,919
it uses efi calls so it depends on efi

188
00:08:18,240 --> 00:08:24,319
structure but not system not all systems

189
00:08:21,919 --> 00:08:24,719
especially embedded system provide ufi

190
00:08:24,319 --> 00:08:28,080
so

191
00:08:24,720 --> 00:08:30,319
it is not possible to use uh this tpm

192
00:08:28,080 --> 00:08:32,880
feature on non-ufi system

193
00:08:30,319 --> 00:08:33,680
uh there is also some there was also

194
00:08:32,880 --> 00:08:36,320
some disc

195
00:08:33,679 --> 00:08:37,439
discussion about uh python integration

196
00:08:36,320 --> 00:08:40,399
with the grub

197
00:08:37,440 --> 00:08:42,000
uh this can be some this can be

198
00:08:40,399 --> 00:08:45,360
surprising for some people but

199
00:08:42,000 --> 00:08:46,320
uh it is used for some female validation

200
00:08:45,360 --> 00:08:48,800
tools

201
00:08:46,320 --> 00:08:50,000
uh and i think that this is quite

202
00:08:48,800 --> 00:08:53,359
interesting usage

203
00:08:50,000 --> 00:08:56,560
uh for for python uh we also planning

204
00:08:53,360 --> 00:08:59,600
a grab 2.06 release this year

205
00:08:56,560 --> 00:09:03,199
uh we are going to freeze

206
00:08:59,600 --> 00:09:06,640
the code around march and the release

207
00:09:03,200 --> 00:09:08,640
probably no later than uh in june

208
00:09:06,640 --> 00:09:09,920
uh starting from run and now we are

209
00:09:08,640 --> 00:09:12,399
planning to release

210
00:09:09,920 --> 00:09:13,680
the graph yearly if uh our

211
00:09:12,399 --> 00:09:17,839
infrastructure

212
00:09:13,680 --> 00:09:17,839
uh and our um

213
00:09:18,160 --> 00:09:22,240
general infrastructure and police how we

214
00:09:21,120 --> 00:09:25,279
maintain the grub

215
00:09:22,240 --> 00:09:28,399
improve uh of course we are able to

216
00:09:25,279 --> 00:09:31,040
uh make that release this is uh

217
00:09:28,399 --> 00:09:33,040
more more often currently all patches

218
00:09:31,040 --> 00:09:34,800
which are posted on the mailing list are

219
00:09:33,040 --> 00:09:37,680
at least well tested so

220
00:09:34,800 --> 00:09:38,319
we do not accept any patches which broke

221
00:09:37,680 --> 00:09:41,359
any

222
00:09:38,320 --> 00:09:45,040
uh any target any platform uh

223
00:09:41,360 --> 00:09:48,480
which is uh which is provide which is

224
00:09:45,040 --> 00:09:48,480
provided by the by the grub

225
00:09:49,120 --> 00:09:52,880
uh as i said as i said we are working on

226
00:09:52,000 --> 00:09:56,240
new code

227
00:09:52,880 --> 00:09:58,160
review at the test system i hope that

228
00:09:56,240 --> 00:10:01,040
we will be able to announce the details

229
00:09:58,160 --> 00:10:05,360
by the end of this year and next year

230
00:10:01,040 --> 00:10:09,040
i will be able to use it uh

231
00:10:05,360 --> 00:10:12,800
as a replacement for for the grab the

232
00:10:09,040 --> 00:10:16,439
list or or something like that

233
00:10:12,800 --> 00:10:19,839
we also dis we are also

234
00:10:16,440 --> 00:10:21,120
discussing a linux kernel ufi boot

235
00:10:19,839 --> 00:10:24,320
profile called unique

236
00:10:21,120 --> 00:10:27,920
unification for all targets uh currently

237
00:10:24,320 --> 00:10:32,720
right now the problem is that uh x86

238
00:10:27,920 --> 00:10:35,199
boot protocol uh on the ufi

239
00:10:32,720 --> 00:10:36,560
mostly reminds something which which was

240
00:10:35,200 --> 00:10:39,680
used on by

241
00:10:36,560 --> 00:10:42,719
legacy bios machines uh

242
00:10:39,680 --> 00:10:46,079
it simply does not use uh load uh

243
00:10:42,720 --> 00:10:48,959
file uh sorry not load file load images

244
00:10:46,079 --> 00:10:50,319
start image calls from from ufi and

245
00:10:48,959 --> 00:10:53,920
things is completely different

246
00:10:50,320 --> 00:10:57,120
on arm risk 5 etc as far as i can tell

247
00:10:53,920 --> 00:11:01,439
uh this both platforms you use

248
00:10:57,120 --> 00:11:05,680
just uh ufi calls to load and execute

249
00:11:01,440 --> 00:11:08,480
uh pe binary so we are thinking to

250
00:11:05,680 --> 00:11:09,279
uh change this boot protocol and make it

251
00:11:08,480 --> 00:11:13,200
common for

252
00:11:09,279 --> 00:11:16,959
all platforms which uh which use uh ufi

253
00:11:13,200 --> 00:11:19,200
as if as i call it as a firmware

254
00:11:16,959 --> 00:11:22,319
this is this discussion just started so

255
00:11:19,200 --> 00:11:22,320
i'm not able to provide

256
00:11:22,480 --> 00:11:25,680
any details we have some rough idea

257
00:11:24,640 --> 00:11:28,880
right now

258
00:11:25,680 --> 00:11:32,000
so but i hope that we will have uh

259
00:11:28,880 --> 00:11:35,120
something in a fema something

260
00:11:32,000 --> 00:11:35,760
to present in quite good stage uh in a

261
00:11:35,120 --> 00:11:39,040
few years

262
00:11:35,760 --> 00:11:41,839
in a few months maybe maybe faster and

263
00:11:39,040 --> 00:11:43,680
finally uh we are planning to admit

264
00:11:41,839 --> 00:11:45,360
officially that grab upstream is not

265
00:11:43,680 --> 00:11:48,479
able to support 62

266
00:11:45,360 --> 00:11:51,839
such sectors mbr gap on

267
00:11:48,480 --> 00:11:55,519
a36 x80

268
00:11:51,839 --> 00:11:58,880
uh 8x86 pc targets

269
00:11:55,519 --> 00:12:02,160
sorry this

270
00:11:58,880 --> 00:12:04,720
issue comes up from time to time uh

271
00:12:02,160 --> 00:12:05,279
on grub devel and some people try or

272
00:12:04,720 --> 00:12:07,519
something

273
00:12:05,279 --> 00:12:08,320
to try to solve that problem by cutting

274
00:12:07,519 --> 00:12:10,880
out some

275
00:12:08,320 --> 00:12:11,680
some features for example as far as i

276
00:12:10,880 --> 00:12:15,040
can tell it

277
00:12:11,680 --> 00:12:18,239
um somebody tries recently to

278
00:12:15,040 --> 00:12:21,680
cut off uh support for for

279
00:12:18,240 --> 00:12:24,800
uh one of um less uh com

280
00:12:21,680 --> 00:12:26,719
more less common file system so i think

281
00:12:24,800 --> 00:12:30,319
this is not good idea

282
00:12:26,720 --> 00:12:32,160
and we have

283
00:12:30,320 --> 00:12:33,839
because there will be more and more

284
00:12:32,160 --> 00:12:36,800
features the core image will be

285
00:12:33,839 --> 00:12:38,800
larger and larger and at some point we

286
00:12:36,800 --> 00:12:40,959
simply will not able to cut anything

287
00:12:38,800 --> 00:12:43,680
from this encore image so

288
00:12:40,959 --> 00:12:45,119
we are going to finally say in the

289
00:12:43,680 --> 00:12:48,239
documentation that we

290
00:12:45,120 --> 00:12:52,480
we are we are not going uh to support

291
00:12:48,240 --> 00:12:56,560
uh the small ambiguous gaps probably we

292
00:12:52,480 --> 00:12:59,839
will suggest uh using uh amber gaps

293
00:12:56,560 --> 00:12:59,839
uh larger than

294
00:13:00,320 --> 00:13:06,480
one kilo one kilo sectors or

295
00:13:03,600 --> 00:13:08,000
just simply use uh gpt with bios boot

296
00:13:06,480 --> 00:13:11,440
partition

297
00:13:08,000 --> 00:13:15,440
this is this is a suggested solution and

298
00:13:11,440 --> 00:13:16,959
it was it is worth mentioning here that

299
00:13:15,440 --> 00:13:20,399
gpt partitions

300
00:13:16,959 --> 00:13:22,479
uh work without any work without any

301
00:13:20,399 --> 00:13:25,760
issues on legacy bios platforms

302
00:13:22,480 --> 00:13:28,320
if you have a bios boot partition on gpt

303
00:13:25,760 --> 00:13:29,040
you are able to boot the crap or any

304
00:13:28,320 --> 00:13:31,279
anything

305
00:13:29,040 --> 00:13:32,800
uh which support the the bios boot

306
00:13:31,279 --> 00:13:36,560
partitions directly

307
00:13:32,800 --> 00:13:39,760
on the bios system

308
00:13:36,560 --> 00:13:44,000
does this thing create any issues for

309
00:13:39,760 --> 00:13:48,240
for you or we can drop it and you

310
00:13:44,000 --> 00:13:50,480
will not ubuntu we never complain

311
00:13:48,240 --> 00:13:52,639
people to upgrade to group two from rob

312
00:13:50,480 --> 00:13:54,639
one so from time to time we still have

313
00:13:52,639 --> 00:13:58,079
machines on group one so

314
00:13:54,639 --> 00:14:01,040
yeah we don't care okay uh uh

315
00:13:58,079 --> 00:14:02,638
the note uh from ubuntu guy i i from

316
00:14:01,040 --> 00:14:07,519
even to was was note

317
00:14:02,639 --> 00:14:10,800
that uh they uh do not allow to upgrade

318
00:14:07,519 --> 00:14:13,600
uh from the ground you don't

319
00:14:10,800 --> 00:14:14,719
do not force people to upgrade from grab

320
00:14:13,600 --> 00:14:16,320
one to group two so

321
00:14:14,720 --> 00:14:18,480
they think this is not a problem for

322
00:14:16,320 --> 00:14:21,279
them i hope

323
00:14:18,480 --> 00:14:21,279
i will see

324
00:14:22,880 --> 00:14:26,399
perfect that's great

325
00:14:27,360 --> 00:14:31,440
pain points there are we are still

326
00:14:30,880 --> 00:14:34,639
fighting

327
00:14:31,440 --> 00:14:35,040
with the problem that uh we we don't

328
00:14:34,639 --> 00:14:37,519
have

329
00:14:35,040 --> 00:14:38,959
uh uh enough throughput to review all

330
00:14:37,519 --> 00:14:41,519
patches

331
00:14:38,959 --> 00:14:43,439
and there's there are in my opinion huge

332
00:14:41,519 --> 00:14:46,959
delays on the mile increase because

333
00:14:43,440 --> 00:14:47,680
i'm not allowed to spend all my time on

334
00:14:46,959 --> 00:14:50,560
maintaining

335
00:14:47,680 --> 00:14:52,959
uh grub i would like to do that but

336
00:14:50,560 --> 00:14:56,319
currently it is not possible

337
00:14:52,959 --> 00:14:59,040
so i would like to ask you to to

338
00:14:56,320 --> 00:14:59,839
if you are able to looked at the patches

339
00:14:59,040 --> 00:15:01,760
and

340
00:14:59,839 --> 00:15:04,320
sent at least reviewed by or something

341
00:15:01,760 --> 00:15:07,360
like that it will be helpful for me

342
00:15:04,320 --> 00:15:10,959
uh if you know somebody who knows

343
00:15:07,360 --> 00:15:13,120
um the graph quite well or something

344
00:15:10,959 --> 00:15:15,439
i would like to know something uh in the

345
00:15:13,120 --> 00:15:19,839
graph that will that will be perfect

346
00:15:15,440 --> 00:15:22,720
uh also we still would like to improve

347
00:15:19,839 --> 00:15:23,519
uh the cooperation of distrust and other

348
00:15:22,720 --> 00:15:26,959
interested

349
00:15:23,519 --> 00:15:29,839
parties as i said currently we are

350
00:15:26,959 --> 00:15:31,758
in quite cooperation with with red hat

351
00:15:29,839 --> 00:15:34,079
so we are very happy

352
00:15:31,759 --> 00:15:36,560
and there are two problems which appear

353
00:15:34,079 --> 00:15:37,279
from from time to time on the mailing

354
00:15:36,560 --> 00:15:40,560
list

355
00:15:37,279 --> 00:15:44,399
that people start posting patches and

356
00:15:40,560 --> 00:15:45,359
after a few exchanges of the emails they

357
00:15:44,399 --> 00:15:47,199
disappear from the

358
00:15:45,360 --> 00:15:49,040
mailing list this is this is annoying

359
00:15:47,199 --> 00:15:52,319
because let's say i

360
00:15:49,040 --> 00:15:56,319
spent my time or viewing process and

361
00:15:52,320 --> 00:16:00,079
after that we simply uh

362
00:15:56,320 --> 00:16:01,839
lose the future i lost my time reviewing

363
00:16:00,079 --> 00:16:04,000
reviewing the process and i'm not able

364
00:16:01,839 --> 00:16:06,880
to take over this platform

365
00:16:04,000 --> 00:16:08,800
to take over the work on this part so i

366
00:16:06,880 --> 00:16:11,839
lose my time we lose features

367
00:16:08,800 --> 00:16:12,959
so please do not do that and uh from

368
00:16:11,839 --> 00:16:15,360
time to time

369
00:16:12,959 --> 00:16:16,160
it seems that some people do not

370
00:16:15,360 --> 00:16:19,600
carefully

371
00:16:16,160 --> 00:16:23,519
read uh uh the mightiness comments uh

372
00:16:19,600 --> 00:16:26,320
so they i send some replies

373
00:16:23,519 --> 00:16:27,279
uh with my comments and uh after after

374
00:16:26,320 --> 00:16:29,120
on

375
00:16:27,279 --> 00:16:31,439
that i received a new version of the

376
00:16:29,120 --> 00:16:33,600
patches but i see that some

377
00:16:31,440 --> 00:16:36,720
uh comments are not taken into the

378
00:16:33,600 --> 00:16:38,959
account so this is also annoying and

379
00:16:36,720 --> 00:16:40,480
please do not do that because this

380
00:16:38,959 --> 00:16:44,880
doesn't help

381
00:16:40,480 --> 00:16:47,680
and recently i got

382
00:16:44,880 --> 00:16:49,279
i found out that some people start

383
00:16:47,680 --> 00:16:52,399
working on new feature

384
00:16:49,279 --> 00:16:54,639
that's nice but they are stunning there

385
00:16:52,399 --> 00:16:57,279
they start that work on the

386
00:16:54,639 --> 00:16:58,160
uh not of the gap of stream but they

387
00:16:57,279 --> 00:17:00,880
start work on

388
00:16:58,160 --> 00:17:02,560
the specific grub version which is in

389
00:17:00,880 --> 00:17:05,199
the district this is crazy

390
00:17:02,560 --> 00:17:07,039
especially if grace if uh that this

391
00:17:05,199 --> 00:17:10,480
occurs tons of

392
00:17:07,039 --> 00:17:13,839
uh tons of patches uh which are not

393
00:17:10,480 --> 00:17:17,520
for reported to upstream

394
00:17:13,839 --> 00:17:18,879
so i would like to encourage you

395
00:17:17,520 --> 00:17:21,039
if you would like to provide new

396
00:17:18,880 --> 00:17:22,240
features start your work on gap upstream

397
00:17:21,039 --> 00:17:25,039
if you need

398
00:17:22,240 --> 00:17:25,679
some features which are needed for your

399
00:17:25,039 --> 00:17:29,360
work from

400
00:17:25,679 --> 00:17:31,280
specific distro please forward port

401
00:17:29,360 --> 00:17:33,439
this feature first into the group

402
00:17:31,280 --> 00:17:36,320
upstream and then start work i've

403
00:17:33,440 --> 00:17:37,200
ah of course it takes time but i think

404
00:17:36,320 --> 00:17:41,039
that it will

405
00:17:37,200 --> 00:17:44,559
make uh my uh life as an abstinent and

406
00:17:41,039 --> 00:17:48,400
easy and also uh grab grapple

407
00:17:44,559 --> 00:17:50,720
distro maintainers easier

408
00:17:48,400 --> 00:17:51,440
and i think that's it and i would like

409
00:17:50,720 --> 00:17:53,120
to

410
00:17:51,440 --> 00:17:54,720
start the discussion what do you care

411
00:17:53,120 --> 00:17:57,199
about in the in the grub

412
00:17:54,720 --> 00:17:57,919
project what is important for you uh

413
00:17:57,200 --> 00:18:01,120
right now

414
00:17:57,919 --> 00:18:03,679
um i outlined our our um

415
00:18:01,120 --> 00:18:05,918
work plan let's say for for four years

416
00:18:03,679 --> 00:18:08,080
uh is it okay for you do you think

417
00:18:05,919 --> 00:18:10,960
that we should change something in

418
00:18:08,080 --> 00:18:14,399
general after discussion for

419
00:18:10,960 --> 00:18:15,520
various people uh i think that we should

420
00:18:14,400 --> 00:18:19,120
focus on

421
00:18:15,520 --> 00:18:23,918
on the system which is a review process

422
00:18:19,120 --> 00:18:23,918
and also is automatic

423
00:18:24,240 --> 00:18:29,280
tests of grub and all patches which were

424
00:18:26,160 --> 00:18:32,320
provided to the gap so i'm looking for

425
00:18:29,280 --> 00:18:34,559
questions yep sure

426
00:18:32,320 --> 00:18:34,559
um

427
00:18:36,640 --> 00:18:42,799
if you've got this one

428
00:18:39,760 --> 00:18:46,240
distributions have users and customers

429
00:18:42,799 --> 00:18:48,720
you know if they have to deliver

430
00:18:46,240 --> 00:18:49,440
new features to their users and to their

431
00:18:48,720 --> 00:18:51,200
customers

432
00:18:49,440 --> 00:18:53,039
by a certain time for let's say

433
00:18:51,200 --> 00:18:56,080
commercial interest

434
00:18:53,039 --> 00:18:58,480
is it really that um

435
00:18:56,080 --> 00:18:59,439
you know that wrong that they work on

436
00:18:58,480 --> 00:19:02,160
their code base

437
00:18:59,440 --> 00:19:03,039
when doing it upstream because of your

438
00:19:02,160 --> 00:19:04,799
booth issues

439
00:19:03,039 --> 00:19:08,240
they can't you know they're not going to

440
00:19:04,799 --> 00:19:11,918
be able to get it in rub for a year

441
00:19:08,240 --> 00:19:15,360
okay the question was uh

442
00:19:11,919 --> 00:19:18,480
as i understand it correctly uh

443
00:19:15,360 --> 00:19:22,000
does it make sense to work uh or

444
00:19:18,480 --> 00:19:25,360
i agree that uh maybe it is better if

445
00:19:22,000 --> 00:19:26,559
this works on on the new feature instead

446
00:19:25,360 --> 00:19:29,760
of on

447
00:19:26,559 --> 00:19:31,280
on the on the grub distro specific

448
00:19:29,760 --> 00:19:35,919
version instead of grab

449
00:19:31,280 --> 00:19:39,840
upstream and uh does it i accept it

450
00:19:35,919 --> 00:19:43,280
i i understood correctly

451
00:19:39,840 --> 00:19:45,600
my point i guess my question was

452
00:19:43,280 --> 00:19:47,678
you know you said it was crazy that yes

453
00:19:45,600 --> 00:19:49,678
the distributions were

454
00:19:47,679 --> 00:19:51,360
not working upstream on new features

455
00:19:49,679 --> 00:19:52,960
yeah if a distribution

456
00:19:51,360 --> 00:19:55,039
has to get a new feature out by a

457
00:19:52,960 --> 00:19:57,679
certain time

458
00:19:55,039 --> 00:19:59,200
isn't it crazy to ask them to work

459
00:19:57,679 --> 00:20:01,200
upstream

460
00:19:59,200 --> 00:20:02,240
because you're you have a group of

461
00:20:01,200 --> 00:20:03,919
problems

462
00:20:02,240 --> 00:20:05,280
like like you know there's two sides to

463
00:20:03,919 --> 00:20:06,960
this point i just wanted to kind of put

464
00:20:05,280 --> 00:20:10,000
the other side on the table oh i can

465
00:20:06,960 --> 00:20:11,280
understand i understand correctly you

466
00:20:10,000 --> 00:20:14,799
are saying that if they are

467
00:20:11,280 --> 00:20:15,520
forced uh by customers to have a new

468
00:20:14,799 --> 00:20:19,760
feature

469
00:20:15,520 --> 00:20:24,080
in in the in the specifics distro

470
00:20:19,760 --> 00:20:27,360
i'm okay with that okay

471
00:20:24,080 --> 00:20:30,240
okay but i i would like to ask you to

472
00:20:27,360 --> 00:20:31,760
let's say as as soon as possible to uh

473
00:20:30,240 --> 00:20:34,159
to forward these patches

474
00:20:31,760 --> 00:20:34,879
uh to the ground upstream i'm not able

475
00:20:34,159 --> 00:20:37,039
to

476
00:20:34,880 --> 00:20:38,159
forbid you to work on on a specific

477
00:20:37,039 --> 00:20:41,200
group upstream

478
00:20:38,159 --> 00:20:43,280
okay but i would like to convince you to

479
00:20:41,200 --> 00:20:49,840
not do that

480
00:20:43,280 --> 00:20:49,840
okay sure from

481
00:20:54,400 --> 00:21:02,640
uh yes uh first of all

482
00:20:57,840 --> 00:21:02,639
the question was uh is it possible to

483
00:21:02,720 --> 00:21:11,600
shorten the the release currents right

484
00:21:06,799 --> 00:21:11,600
yes currently yes and no

485
00:21:12,799 --> 00:21:16,720
it will be possible if we have a new

486
00:21:15,440 --> 00:21:20,640
review system

487
00:21:16,720 --> 00:21:22,960
and uh we have uh we will have uh

488
00:21:20,640 --> 00:21:24,240
some system which automates the testing

489
00:21:22,960 --> 00:21:27,280
of the graph

490
00:21:24,240 --> 00:21:27,919
so i'm considering that i hope that it

491
00:21:27,280 --> 00:21:31,600
will happen

492
00:21:27,919 --> 00:21:35,360
year a year no later and then

493
00:21:31,600 --> 00:21:45,840
we will consider threatening the

494
00:21:35,360 --> 00:21:45,840
vector cabins of release sure

495
00:21:48,960 --> 00:21:52,720
for some security reasons so is this

496
00:21:52,000 --> 00:21:55,120
something that

497
00:21:52,720 --> 00:21:58,480
for instance should be also implemented

498
00:21:55,120 --> 00:22:01,520
as a protocol that you would

499
00:21:58,480 --> 00:22:03,600
uh the question was uh

500
00:22:01,520 --> 00:22:05,440
that i mentioned during my presentation

501
00:22:03,600 --> 00:22:07,760
that there is a tpm

502
00:22:05,440 --> 00:22:09,520
implementation in the graph which use

503
00:22:07,760 --> 00:22:13,600
uf5 features

504
00:22:09,520 --> 00:22:16,559
and the question is uh do i suggest that

505
00:22:13,600 --> 00:22:17,280
ubud should provide these ufi calls to

506
00:22:16,559 --> 00:22:19,918
have a

507
00:22:17,280 --> 00:22:20,799
to to have a dpm if you would like to

508
00:22:19,919 --> 00:22:25,760
have a better in

509
00:22:20,799 --> 00:22:27,600
a better security infrastructure

510
00:22:25,760 --> 00:22:29,360
in the ubud i think that it makes sense

511
00:22:27,600 --> 00:22:31,520
to to to have that

512
00:22:29,360 --> 00:22:33,280
feature but i'm not sure how how is it

513
00:22:31,520 --> 00:22:33,760
complicated to have that in you but

514
00:22:33,280 --> 00:22:35,760
because

515
00:22:33,760 --> 00:22:36,960
as like as far as i can tell ubud is

516
00:22:35,760 --> 00:22:40,320
focused on

517
00:22:36,960 --> 00:22:43,200
embedded systems so it can it can

518
00:22:40,320 --> 00:22:44,000
not only okay but but you would always

519
00:22:43,200 --> 00:22:46,640
have

520
00:22:44,000 --> 00:22:48,640
some tpm drivers that's why i was asking

521
00:22:46,640 --> 00:22:50,799
so i think uh so i think that my

522
00:22:48,640 --> 00:22:51,919
uh if you would like to use tpm

523
00:22:50,799 --> 00:22:55,200
infrastructure in the graph

524
00:22:51,919 --> 00:22:58,559
it makes sense to expose this tpm

525
00:22:55,200 --> 00:23:01,679
via fe calls to the grub does that

526
00:22:58,559 --> 00:23:03,760
apply your question okay

527
00:23:01,679 --> 00:23:05,919
okay so a few issues with this grab

528
00:23:03,760 --> 00:23:09,440
configuration file right now

529
00:23:05,919 --> 00:23:11,200
they are configuration and

530
00:23:09,440 --> 00:23:12,640
kernel loading configuration as a

531
00:23:11,200 --> 00:23:15,520
starting one

532
00:23:12,640 --> 00:23:16,799
single file and it is very complicated

533
00:23:15,520 --> 00:23:20,158
to manage if

534
00:23:16,799 --> 00:23:22,400
or especially if the file is signed and

535
00:23:20,159 --> 00:23:23,840
the kernel is updated the file needs to

536
00:23:22,400 --> 00:23:27,520
be regenerated when the gui

537
00:23:23,840 --> 00:23:30,158
stays the same what i'm saying

538
00:23:27,520 --> 00:23:32,080
uh maybe it is a point to separate this

539
00:23:30,159 --> 00:23:35,470
two things

540
00:23:32,080 --> 00:23:37,840
the menu configuration in the and

541
00:23:35,470 --> 00:23:41,120
[Music]

542
00:23:37,840 --> 00:23:41,678
the question is how to upgrade the

543
00:23:41,120 --> 00:23:44,799
system

544
00:23:41,679 --> 00:23:45,200
if uh for example you take measurement

545
00:23:44,799 --> 00:23:48,240
of

546
00:23:45,200 --> 00:23:50,240
a configuration file configuration a

547
00:23:48,240 --> 00:23:51,360
common glide of the kernel or something

548
00:23:50,240 --> 00:23:53,520
like that

549
00:23:51,360 --> 00:23:54,479
yes and it's also proposal to separate

550
00:23:53,520 --> 00:23:57,600
maybe to using

551
00:23:54,480 --> 00:23:59,440
the menu part of the configuration

552
00:23:57,600 --> 00:24:02,158
now what do you mean many parts do you

553
00:23:59,440 --> 00:24:06,320
mean generic configuration of

554
00:24:02,159 --> 00:24:11,279
all these many entries representing the

555
00:24:06,320 --> 00:24:11,279
ui screen oh okay

556
00:24:12,080 --> 00:24:16,559
okay okay okay so and then repeating it

557
00:24:14,880 --> 00:24:20,080
for every minute oh okay

558
00:24:16,559 --> 00:24:23,600
i understand uh engine

559
00:24:20,080 --> 00:24:26,000
in general this is uh it is

560
00:24:23,600 --> 00:24:27,199
it it goes into a larger topic in

561
00:24:26,000 --> 00:24:30,480
general because

562
00:24:27,200 --> 00:24:30,960
uh if you would like if you measure your

563
00:24:30,480 --> 00:24:33,760
system

564
00:24:30,960 --> 00:24:34,240
and you and then after that upgrade your

565
00:24:33,760 --> 00:24:36,080
system

566
00:24:34,240 --> 00:24:37,520
and you have much more problems than

567
00:24:36,080 --> 00:24:39,678
just upgrade

568
00:24:37,520 --> 00:24:41,279
than just updating the measurements of

569
00:24:39,679 --> 00:24:42,799
of the grub configuration

570
00:24:41,279 --> 00:24:44,640
you have to also upgrade the

571
00:24:42,799 --> 00:24:48,879
measurements of

572
00:24:44,640 --> 00:24:52,640
the kernel init rd etc etc

573
00:24:48,880 --> 00:24:53,840
we are working on some dynamic route of

574
00:24:52,640 --> 00:24:57,279
trust uh systems

575
00:24:53,840 --> 00:24:57,760
uh in the oracle and we in at initial

576
00:24:57,279 --> 00:25:00,960
phase

577
00:24:57,760 --> 00:25:04,480
of this work we are aware that at

578
00:25:00,960 --> 00:25:08,000
some point we may meet that these issues

579
00:25:04,480 --> 00:25:11,120
but currently we don't have any uh

580
00:25:08,000 --> 00:25:12,080
good idea how to how to solve so we have

581
00:25:11,120 --> 00:25:15,439
some rough

582
00:25:12,080 --> 00:25:18,480
ideas but we don't have good ideas how

583
00:25:15,440 --> 00:25:20,960
solve this problem sorry times

584
00:25:18,480 --> 00:25:21,760
is up i will be outside you can catch me

585
00:25:20,960 --> 00:25:29,840
and

586
00:25:21,760 --> 00:25:29,840
chat if you need thanks a lot

587
00:25:34,480 --> 00:25:36,559
you

