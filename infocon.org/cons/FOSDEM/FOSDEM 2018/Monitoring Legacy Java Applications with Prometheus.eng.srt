1
00:00:05,790 --> 00:00:09,590
No

2
00:00:07,400 --> 00:00:12,110
[Applause]

3
00:00:09,590 --> 00:00:13,850
again my name is<font color="#CCCCCC"> Fabiana</font><font color="#E5E5E5"> and within the</font>

4
00:00:12,110 --> 00:00:15,830
next<font color="#E5E5E5"> half an hour</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> talk</font>

5
00:00:13,850 --> 00:00:19,640
about<font color="#E5E5E5"> monitoring legacy Java</font>

6
00:00:15,830 --> 00:00:21,259
applications with<font color="#CCCCCC"> Prometheus so what is</font>

7
00:00:19,640 --> 00:00:23,900
the best<font color="#E5E5E5"> way to monitor Java</font>

8
00:00:21,260 --> 00:00:25,699
applications<font color="#E5E5E5"> with promises sorry for my</font>

9
00:00:23,900 --> 00:00:28,430
voice I have a bit<font color="#CCCCCC"> of a cold</font><font color="#E5E5E5"> I hope they</font>

10
00:00:25,699 --> 00:00:32,029
can make<font color="#CCCCCC"> it through</font><font color="#E5E5E5"> half an hour so the</font>

11
00:00:28,430 --> 00:00:34,970
best thing<font color="#CCCCCC"> you can do is to take the</font>

12
00:00:32,029 --> 00:00:37,430
compromises<font color="#E5E5E5"> client library for Java edit</font>

13
00:00:34,970 --> 00:00:41,000
as a dependency to your<font color="#E5E5E5"> Java project and</font>

14
00:00:37,430 --> 00:00:43,130
<font color="#E5E5E5">just money by your add metrics directly</font>

15
00:00:41,000 --> 00:00:44,600
to your source code<font color="#CCCCCC"> okay this is always</font>

16
00:00:43,130 --> 00:00:46,579
<font color="#CCCCCC">the</font><font color="#E5E5E5"> best option</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the most</font>

17
00:00:44,600 --> 00:00:48,829
flexible<font color="#E5E5E5"> one the most powerful one</font><font color="#CCCCCC"> and</font>

18
00:00:46,579 --> 00:00:51,020
the safest<font color="#E5E5E5"> one and whenever you can</font>

19
00:00:48,829 --> 00:00:51,710
modify<font color="#E5E5E5"> your source code this is what you</font>

20
00:00:51,020 --> 00:00:54,110
<font color="#E5E5E5">should do</font>

21
00:00:51,710 --> 00:00:55,969
however sometimes<font color="#E5E5E5"> it's not possible</font>

22
00:00:54,110 --> 00:00:57,649
<font color="#CCCCCC">maybe because you have to run an</font>

23
00:00:55,969 --> 00:01:00,530
<font color="#CCCCCC">application but you don't own</font><font color="#E5E5E5"> this much</font>

24
00:00:57,649 --> 00:01:02,809
code or even if the application<font color="#CCCCCC"> is</font>

25
00:01:00,530 --> 00:01:05,600
developed within your company<font color="#E5E5E5"> it might</font>

26
00:01:02,809 --> 00:01:08,300
be that your wishes<font color="#E5E5E5"> of having</font><font color="#CCCCCC"> prometheus</font>

27
00:01:05,600 --> 00:01:10,280
metrics<font color="#E5E5E5"> do not have the priority</font><font color="#CCCCCC"> so that</font>

28
00:01:08,300 --> 00:01:13,070
<font color="#CCCCCC">you can get your code changes into</font>

29
00:01:10,280 --> 00:01:15,440
production<font color="#E5E5E5"> and there are a few options</font>

30
00:01:13,070 --> 00:01:18,258
<font color="#CCCCCC">what you can do when</font><font color="#E5E5E5"> that happens and</font>

31
00:01:15,440 --> 00:01:20,479
within<font color="#E5E5E5"> the next half an hour I'm going</font>

32
00:01:18,259 --> 00:01:23,390
to talk<font color="#E5E5E5"> about a few of the options</font><font color="#CCCCCC"> that</font>

33
00:01:20,479 --> 00:01:26,300
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> we start off with a log file</font>

34
00:01:23,390 --> 00:01:27,979
monitoring example then we go<font color="#E5E5E5"> ahead</font><font color="#CCCCCC"> and</font>

35
00:01:26,300 --> 00:01:30,740
<font color="#E5E5E5">have a look at the black box money</font><font color="#CCCCCC"> to</font>

36
00:01:27,979 --> 00:01:32,810
<font color="#E5E5E5">black box</font><font color="#CCCCCC"> six order then I'm going to</font>

37
00:01:30,740 --> 00:01:35,479
talk a little<font color="#E5E5E5"> bit about</font><font color="#CCCCCC"> J mix teach</font>

38
00:01:32,810 --> 00:01:37,399
<font color="#E5E5E5">other management extensions and finally</font>

39
00:01:35,479 --> 00:01:40,340
I'm<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to give you a quick demo on</font>

40
00:01:37,399 --> 00:01:42,800
<font color="#E5E5E5">how to write your own</font><font color="#CCCCCC"> do-it-yourself</font>

41
00:01:40,340 --> 00:01:47,149
Java<font color="#CCCCCC"> agent</font><font color="#E5E5E5"> for Prometheus monitoring</font>

42
00:01:42,800 --> 00:01:49,520
<font color="#E5E5E5">okay so let's start as an example</font>

43
00:01:47,149 --> 00:01:51,470
application<font color="#CCCCCC"> I implemented this little</font>

44
00:01:49,520 --> 00:01:53,479
thing<font color="#CCCCCC"> here it's a spring boot</font>

45
00:01:51,470 --> 00:01:56,630
application with some<font color="#E5E5E5"> little rest</font>

46
00:01:53,479 --> 00:01:59,390
interfaces so if<font color="#E5E5E5"> I click on this here if</font>

47
00:01:56,630 --> 00:02:01,818
it's the<font color="#E5E5E5"> slash hello / Alice endpoint</font>

48
00:01:59,390 --> 00:02:05,479
and shows the result down<font color="#E5E5E5"> here I can</font>

49
00:02:01,819 --> 00:02:07,759
also<font color="#E5E5E5"> say hello to Bob</font><font color="#CCCCCC"> I have a small end</font>

50
00:02:05,479 --> 00:02:10,550
point that<font color="#E5E5E5"> just throws an exception in</font>

51
00:02:07,759 --> 00:02:13,020
the<font color="#E5E5E5"> Java code which results in an HTTP</font>

52
00:02:10,550 --> 00:02:16,230
500 internal server error

53
00:02:13,020 --> 00:02:18,510
and I have one that<font color="#E5E5E5"> just sleeps a second</font>

54
00:02:16,230 --> 00:02:20,459
before it<font color="#E5E5E5"> responds and we are going to</font>

55
00:02:18,510 --> 00:02:22,230
<font color="#CCCCCC">monitor this application now with</font>

56
00:02:20,460 --> 00:02:23,420
<font color="#E5E5E5">different</font><font color="#CCCCCC"> tools</font><font color="#E5E5E5"> within the next half an</font>

57
00:02:22,230 --> 00:02:27,780
<font color="#CCCCCC">hour okay</font>

58
00:02:23,420 --> 00:02:30,059
so let's start<font color="#E5E5E5"> first up is</font><font color="#CCCCCC"> log</font><font color="#E5E5E5"> five</font>

59
00:02:27,780 --> 00:02:32,130
monitoring<font color="#E5E5E5"> there are a few tools</font>

60
00:02:30,060 --> 00:02:35,250
available the most popular one<font color="#CCCCCC"> is by</font>

61
00:02:32,130 --> 00:02:37,320
<font color="#CCCCCC">Google it's for gem</font><font color="#E5E5E5"> tail</font><font color="#CCCCCC"> it's also</font><font color="#E5E5E5"> in</font>

62
00:02:35,250 --> 00:02:41,370
the official<font color="#E5E5E5"> Google repository which</font>

63
00:02:37,320 --> 00:02:43,829
obviously<font color="#E5E5E5"> helps to make</font><font color="#CCCCCC"> it popular there</font>

64
00:02:41,370 --> 00:02:45,900
are small independent tools as well for

65
00:02:43,830 --> 00:02:49,170
example<font color="#CCCCCC"> there's one which is the croc</font>

66
00:02:45,900 --> 00:02:51,540
exporter and I'm going<font color="#CCCCCC"> to use this in my</font>

67
00:02:49,170 --> 00:02:54,390
demo<font color="#CCCCCC"> and I'm also</font><font color="#E5E5E5"> the author of croc</font>

68
00:02:51,540 --> 00:02:56,250
<font color="#CCCCCC">espada</font><font color="#E5E5E5"> but I'm not going too deep into</font>

69
00:02:54,390 --> 00:02:57,899
like configuration<font color="#CCCCCC"> details</font><font color="#E5E5E5"> so most of</font>

70
00:02:56,250 --> 00:02:59,580
<font color="#E5E5E5">what</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> show applies in</font>

71
00:02:57,900 --> 00:03:02,970
general to<font color="#CCCCCC"> log file</font><font color="#E5E5E5"> monitoring with</font>

72
00:02:59,580 --> 00:03:05,640
promises<font color="#E5E5E5"> okay so let's have a quick</font><font color="#CCCCCC"> look</font>

73
00:03:02,970 --> 00:03:08,220
at the log file of the application we

74
00:03:05,640 --> 00:03:11,459
see<font color="#E5E5E5"> a stack trace here which is of</font>

75
00:03:08,220 --> 00:03:15,750
course because<font color="#E5E5E5"> I hit this left</font><font color="#CCCCCC"> row</font>

76
00:03:11,460 --> 00:03:18,090
<font color="#CCCCCC">endpoint so that gave me</font><font color="#E5E5E5"> a little</font><font color="#CCCCCC"> lock</font>

77
00:03:15,750 --> 00:03:20,130
line with an<font color="#CCCCCC"> arrow</font><font color="#E5E5E5"> here I think</font>

78
00:03:18,090 --> 00:03:22,500
unexpected heaven follower happened

79
00:03:20,130 --> 00:03:24,450
followed by the stack trace<font color="#E5E5E5"> but most</font>

80
00:03:22,500 --> 00:03:26,610
regular lock lines look like this so if

81
00:03:24,450 --> 00:03:29,519
I click on<font color="#E5E5E5"> Bob and</font><font color="#CCCCCC"> Ellis for a few times</font>

82
00:03:26,610 --> 00:03:32,580
<font color="#CCCCCC">I can</font><font color="#E5E5E5"> generate some lock lines and they</font>

83
00:03:29,520 --> 00:03:34,110
all have this format<font color="#CCCCCC"> okay it's</font><font color="#E5E5E5"> broken</font>

84
00:03:32,580 --> 00:03:36,630
line here with this<font color="#E5E5E5"> resolution but I</font>

85
00:03:34,110 --> 00:03:38,460
have a<font color="#CCCCCC"> timestamp threat information the</font>

86
00:03:36,630 --> 00:03:41,100
lock level which is info in most cases

87
00:03:38,460 --> 00:03:43,680
<font color="#E5E5E5">name of the Java class that</font><font color="#CCCCCC"> lock dissing</font>

88
00:03:41,100 --> 00:03:45,780
some information about the HTTP<font color="#CCCCCC"> method</font>

89
00:03:43,680 --> 00:03:49,800
and path<font color="#CCCCCC"> and the duration how</font><font color="#E5E5E5"> long it</font>

90
00:03:45,780 --> 00:03:51,830
took to generate the response<font color="#CCCCCC"> okay so at</font>

91
00:03:49,800 --> 00:03:54,180
<font color="#E5E5E5">this level when you have something</font><font color="#CCCCCC"> like</font>

92
00:03:51,830 --> 00:03:57,000
semi-structured or unstructured<font color="#E5E5E5"> lock</font>

93
00:03:54,180 --> 00:03:59,340
data like this but basically<font color="#CCCCCC"> all of the</font>

94
00:03:57,000 --> 00:04:01,830
tools tool that you use to<font color="#E5E5E5"> to monitor</font>

95
00:03:59,340 --> 00:04:03,720
these things<font color="#E5E5E5"> is you create regular</font>

96
00:04:01,830 --> 00:04:06,060
expressions<font color="#E5E5E5"> that match the lock lines</font>

97
00:04:03,720 --> 00:04:09,209
<font color="#E5E5E5">and then you extract metrics out of the</font>

98
00:04:06,060 --> 00:04:11,070
regular<font color="#E5E5E5"> expression matches okay so if</font>

99
00:04:09,209 --> 00:04:16,200
you look<font color="#CCCCCC"> at how this works</font><font color="#E5E5E5"> with the croc</font>

100
00:04:11,070 --> 00:04:18,298
exporter it works<font color="#E5E5E5"> like this so this down</font>

101
00:04:16,200 --> 00:04:20,459
here<font color="#CCCCCC"> is the most important line</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

102
00:04:18,298 --> 00:04:23,219
<font color="#E5E5E5">the regular expression the only</font><font color="#CCCCCC"> specific</font>

103
00:04:20,459 --> 00:04:24,000
thing about the<font color="#CCCCCC"> croc</font><font color="#E5E5E5"> exporter approaches</font>

104
00:04:23,220 --> 00:04:25,830
if you

105
00:04:24,000 --> 00:04:28,380
<font color="#E5E5E5">regular expressions</font><font color="#CCCCCC"> a lot they tend to</font>

106
00:04:25,830 --> 00:04:30,180
<font color="#E5E5E5">become a bit unreadable and what you can</font>

107
00:04:28,380 --> 00:04:32,850
do with<font color="#E5E5E5"> rock is you can define</font><font color="#CCCCCC"> regular</font>

108
00:04:30,180 --> 00:04:34,920
<font color="#CCCCCC">expressions snippets</font><font color="#E5E5E5"> like for</font><font color="#CCCCCC"> example</font>

109
00:04:32,850 --> 00:04:37,290
you say<font color="#E5E5E5"> this snippet should be made</font>

110
00:04:34,920 --> 00:04:39,510
available under<font color="#E5E5E5"> the name path</font><font color="#CCCCCC"> okay and</font>

111
00:04:37,290 --> 00:04:41,490
then instead of<font color="#CCCCCC"> writing</font><font color="#E5E5E5"> this year in</font>

112
00:04:39,510 --> 00:04:44,700
<font color="#E5E5E5">your regular expression you can also</font>

113
00:04:41,490 --> 00:04:46,950
repair<font color="#E5E5E5"> if air to the path that you</font>

114
00:04:44,700 --> 00:04:48,479
defined above<font color="#E5E5E5"> okay apart from that it's</font>

115
00:04:46,950 --> 00:04:49,830
just<font color="#E5E5E5"> a plain regular expression so you</font>

116
00:04:48,480 --> 00:04:52,020
start<font color="#E5E5E5"> off with anything</font>

117
00:04:49,830 --> 00:04:53,909
then comes the<font color="#CCCCCC"> LOC level and the name</font><font color="#E5E5E5"> of</font>

118
00:04:52,020 --> 00:04:56,640
the<font color="#CCCCCC"> Java class this is</font><font color="#E5E5E5"> just literal</font>

119
00:04:53,910 --> 00:04:58,740
string here then we match the path then

120
00:04:56,640 --> 00:05:01,020
the duration<font color="#E5E5E5"> and any number that could</font>

121
00:04:58,740 --> 00:05:03,360
be the duration<font color="#E5E5E5"> okay so if we define</font>

122
00:05:01,020 --> 00:05:06,090
this and<font color="#E5E5E5"> we define a counter</font><font color="#CCCCCC"> might</font>

123
00:05:03,360 --> 00:05:08,250
metric for this in<font color="#E5E5E5"> Prometheus what we</font>

124
00:05:06,090 --> 00:05:10,799
will see is just a counter counting the

125
00:05:08,250 --> 00:05:12,450
number of lines that matches these<font color="#E5E5E5"> the</font>

126
00:05:10,800 --> 00:05:16,470
this regular expression<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> you have a</font>

127
00:05:12,450 --> 00:05:21,890
look at it for exporter<font color="#CCCCCC"> - one</font><font color="#E5E5E5"> fake a one</font>

128
00:05:16,470 --> 00:05:25,590
<font color="#E5E5E5">and go to localhost port</font>

129
00:05:21,890 --> 00:05:30,500
<font color="#E5E5E5">nine one four four slash metrics so what</font>

130
00:05:25,590 --> 00:05:30,500
we see down<font color="#CCCCCC"> here</font><font color="#E5E5E5"> make it a bit bigger so</font>

131
00:05:30,950 --> 00:05:36,120
<font color="#E5E5E5">what we see down</font><font color="#CCCCCC"> here is just</font><font color="#E5E5E5"> this</font>

132
00:05:33,419 --> 00:05:37,859
metric here<font color="#E5E5E5"> it tells us we have 17 lines</font>

133
00:05:36,120 --> 00:05:40,830
matching<font color="#E5E5E5"> this regular expressions in our</font>

134
00:05:37,860 --> 00:05:43,169
log file<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not very useful of</font>

135
00:05:40,830 --> 00:05:44,729
<font color="#E5E5E5">course what we need at least is some</font>

136
00:05:43,169 --> 00:05:47,340
information<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> errors</font>

137
00:05:44,729 --> 00:05:49,680
<font color="#E5E5E5">and warnings and</font><font color="#CCCCCC"> and info messages and</font>

138
00:05:47,340 --> 00:05:52,500
the way you typically do this<font color="#E5E5E5"> in</font>

139
00:05:49,680 --> 00:05:56,400
<font color="#CCCCCC">Prometheus is with labels okay</font><font color="#E5E5E5"> you're</font>

140
00:05:52,500 --> 00:05:59,520
going<font color="#E5E5E5"> to say I want to extend my metric</font>

141
00:05:56,400 --> 00:06:01,880
here<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use labels and I want</font>

142
00:05:59,520 --> 00:06:04,979
to have the lock level of the label<font color="#CCCCCC"> I</font>

143
00:06:01,880 --> 00:06:07,590
also want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have the path as a label</font>

144
00:06:04,979 --> 00:06:08,909
<font color="#E5E5E5">and in in brackets</font><font color="#CCCCCC"> Paulo you</font><font color="#E5E5E5"> can just do</font>

145
00:06:07,590 --> 00:06:10,679
<font color="#CCCCCC">it</font><font color="#E5E5E5"> like this you say the stuff that</font>

146
00:06:08,910 --> 00:06:12,570
matches this regular expression snippet

147
00:06:10,680 --> 00:06:15,030
should be the<font color="#E5E5E5"> level the stuff that</font>

148
00:06:12,570 --> 00:06:16,979
matches this regular expression snippet

149
00:06:15,030 --> 00:06:19,200
should be the path and<font color="#E5E5E5"> then you refer to</font>

150
00:06:16,979 --> 00:06:24,770
it down here you say<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> my</font>

151
00:06:19,200 --> 00:06:27,240
<font color="#E5E5E5">level and this is my path</font><font color="#CCCCCC"> these</font>

152
00:06:24,770 --> 00:06:29,370
expressions here does<font color="#E5E5E5"> actually a little</font>

153
00:06:27,240 --> 00:06:31,919
templating language built into the go

154
00:06:29,370 --> 00:06:33,780
programming language<font color="#CCCCCC"> it's a pretty</font><font color="#E5E5E5"> easy</font>

155
00:06:31,919 --> 00:06:35,669
templating thing and then this is used

156
00:06:33,780 --> 00:06:37,320
here also it's also used in<font color="#E5E5E5"> other</font>

157
00:06:35,669 --> 00:06:40,409
programs that<font color="#E5E5E5"> are written in go</font>

158
00:06:37,320 --> 00:06:41,940
it's just like pretty pretty<font color="#E5E5E5"> simple</font>

159
00:06:40,410 --> 00:06:44,460
templating language for configuration

160
00:06:41,940 --> 00:06:46,410
<font color="#CCCCCC">purposes and if we started now what</font>

161
00:06:44,460 --> 00:06:49,320
we're going to see is more<font color="#CCCCCC"> useful</font>

162
00:06:46,410 --> 00:06:52,500
information<font color="#E5E5E5"> now we have those metrics</font>

163
00:06:49,320 --> 00:06:56,219
<font color="#CCCCCC">over here</font><font color="#E5E5E5"> okay we see we have one error</font>

164
00:06:52,500 --> 00:06:58,440
<font color="#E5E5E5">we have seven info messages with path a</font>

165
00:06:56,220 --> 00:07:01,080
hello<font color="#E5E5E5"> Alice we have eight ones with path</font>

166
00:06:58,440 --> 00:07:04,140
hello<font color="#CCCCCC"> pal</font><font color="#E5E5E5"> Bob and so on and this covers</font>

167
00:07:01,080 --> 00:07:06,150
already<font color="#CCCCCC"> 80% of</font><font color="#E5E5E5"> what you need in real</font>

168
00:07:04,140 --> 00:07:08,070
life log file monitoring with parameters

169
00:07:06,150 --> 00:07:10,979
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> now you can import</font><font color="#E5E5E5"> this</font>

170
00:07:08,070 --> 00:07:13,050
injury<font color="#E5E5E5"> Prometheus and then trigger some</font>

171
00:07:10,980 --> 00:07:15,330
alerts whenever errors occur or watch

172
00:07:13,050 --> 00:07:17,040
your warnings and when they reach a

173
00:07:15,330 --> 00:07:20,700
certain<font color="#CCCCCC"> threshold you trigger alerts and</font>

174
00:07:17,040 --> 00:07:24,960
so on<font color="#CCCCCC"> okay I have one</font><font color="#E5E5E5"> word of advice</font>

175
00:07:20,700 --> 00:07:27,120
about<font color="#E5E5E5"> using the path here what actually</font>

176
00:07:24,960 --> 00:07:29,609
is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to happen in the Prometheus</font>

177
00:07:27,120 --> 00:07:33,210
server is that<font color="#CCCCCC"> for each line</font><font color="#E5E5E5"> that you</font>

178
00:07:29,610 --> 00:07:35,910
see<font color="#CCCCCC"> here in this SK representation there</font>

179
00:07:33,210 --> 00:07:38,849
is a time series created<font color="#E5E5E5"> internally</font>

180
00:07:35,910 --> 00:07:41,430
within<font color="#E5E5E5"> the Prometheus server okay so</font>

181
00:07:38,850 --> 00:07:44,280
whenever you<font color="#E5E5E5"> have a new</font><font color="#CCCCCC"> combination</font><font color="#E5E5E5"> of</font>

182
00:07:41,430 --> 00:07:46,110
label values like a new path<font color="#E5E5E5"> a</font><font color="#CCCCCC"> new time</font>

183
00:07:44,280 --> 00:07:49,020
series will be created within the

184
00:07:46,110 --> 00:07:51,450
<font color="#CCCCCC">promises server and</font><font color="#E5E5E5"> Prometheus is pretty</font>

185
00:07:49,020 --> 00:07:53,580
efficient with handling a lot of<font color="#E5E5E5"> time</font>

186
00:07:51,450 --> 00:07:55,170
<font color="#E5E5E5">series so if you have like thousands of</font>

187
00:07:53,580 --> 00:07:57,960
different<font color="#E5E5E5"> time series it shouldn't be a</font>

188
00:07:55,170 --> 00:08:00,090
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> but if you have millions</font><font color="#E5E5E5"> of</font>

189
00:07:57,960 --> 00:08:02,729
<font color="#E5E5E5">different prime series you then should</font>

190
00:08:00,090 --> 00:08:04,679
at some<font color="#CCCCCC"> point hit the performance</font>

191
00:08:02,730 --> 00:08:06,810
threshold<font color="#E5E5E5"> that you have with the</font>

192
00:08:04,680 --> 00:08:09,840
<font color="#E5E5E5">promises server</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so what that means</font>

193
00:08:06,810 --> 00:08:12,510
is if you put<font color="#E5E5E5"> something like the path in</font>

194
00:08:09,840 --> 00:08:14,669
here it's a very<font color="#E5E5E5"> good idea if you have a</font>

195
00:08:12,510 --> 00:08:16,800
<font color="#E5E5E5">limited number</font><font color="#CCCCCC"> of paths</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> it shows</font>

196
00:08:14,670 --> 00:08:19,230
you<font color="#E5E5E5"> like which rest endpoint is called</font>

197
00:08:16,800 --> 00:08:21,990
how often if you<font color="#E5E5E5"> have something like</font><font color="#CCCCCC"> a</font>

198
00:08:19,230 --> 00:08:24,360
<font color="#E5E5E5">unique request</font><font color="#CCCCCC"> ID or something as part</font>

199
00:08:21,990 --> 00:08:26,700
of<font color="#E5E5E5"> your path then it's a bad idea to use</font>

200
00:08:24,360 --> 00:08:28,770
<font color="#CCCCCC">it as</font><font color="#E5E5E5"> part of a label because then with</font>

201
00:08:26,700 --> 00:08:31,050
<font color="#E5E5E5">each new request ID you will generate a</font>

202
00:08:28,770 --> 00:08:33,478
<font color="#E5E5E5">new time series and eventually</font><font color="#CCCCCC"> will have</font>

203
00:08:31,050 --> 00:08:36,030
<font color="#E5E5E5">so many time serious than Eve that even</font>

204
00:08:33,479 --> 00:08:37,860
the very great and proficient<font color="#CCCCCC"> Prometheus</font>

205
00:08:36,030 --> 00:08:41,490
server has problems dealing<font color="#CCCCCC"> with this</font>

206
00:08:37,860 --> 00:08:44,099
<font color="#E5E5E5">okay so take care that labels should</font>

207
00:08:41,490 --> 00:08:46,560
have somehow<font color="#E5E5E5"> a limited scope like in the</font>

208
00:08:44,099 --> 00:08:48,150
order of magnitudes of not more<font color="#E5E5E5"> than</font>

209
00:08:46,560 --> 00:08:49,319
thousand different<font color="#E5E5E5"> values or something</font>

210
00:08:48,150 --> 00:08:53,790
<font color="#E5E5E5">okay</font>

211
00:08:49,320 --> 00:08:55,529
good<font color="#E5E5E5"> so this covers already like</font><font color="#CCCCCC"> 90</font>

212
00:08:53,790 --> 00:08:57,719
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> 80 percent of</font><font color="#E5E5E5"> what you need</font>

213
00:08:55,529 --> 00:08:59,880
<font color="#CCCCCC">in real life</font><font color="#E5E5E5"> I still want to talk a</font>

214
00:08:57,720 --> 00:09:02,790
<font color="#E5E5E5">little bit about this duration value</font>

215
00:08:59,880 --> 00:09:04,500
<font color="#E5E5E5">because it's a good good opportunity to</font>

216
00:09:02,790 --> 00:09:06,810
<font color="#E5E5E5">also highlight</font><font color="#CCCCCC"> the difference between</font>

217
00:09:04,500 --> 00:09:08,970
<font color="#CCCCCC">locks live monitoring</font><font color="#E5E5E5"> with Prometheus</font>

218
00:09:06,810 --> 00:09:10,739
and blocks live monitoring with the

219
00:09:08,970 --> 00:09:13,649
elastic<font color="#E5E5E5"> step</font><font color="#CCCCCC"> okay</font>

220
00:09:10,740 --> 00:09:16,560
the elastic seg is like the most<font color="#E5E5E5"> popular</font>

221
00:09:13,649 --> 00:09:19,399
<font color="#E5E5E5">log file monitoring tool for Java</font>

222
00:09:16,560 --> 00:09:22,709
applications it's used in a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

223
00:09:19,399 --> 00:09:24,569
project<font color="#E5E5E5"> and the way it works you have</font>

224
00:09:22,709 --> 00:09:26,609
<font color="#E5E5E5">elastic search</font><font color="#CCCCCC"> I guess most of you</font><font color="#E5E5E5"> know</font>

225
00:09:24,569 --> 00:09:28,439
that<font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> full-text search engine a</font>

226
00:09:26,610 --> 00:09:30,420
<font color="#E5E5E5">clustered full-text search engine and</font>

227
00:09:28,440 --> 00:09:32,970
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> little programs called beats</font>

228
00:09:30,420 --> 00:09:35,069
<font color="#E5E5E5">those beats take lock lines and ship</font>

229
00:09:32,970 --> 00:09:37,290
them to the elastic search cluster where

230
00:09:35,069 --> 00:09:39,360
the lock content is indexed<font color="#E5E5E5"> and then you</font>

231
00:09:37,290 --> 00:09:41,310
have a user<font color="#CCCCCC"> interface called Cabana</font>

232
00:09:39,360 --> 00:09:44,430
and you can use<font color="#CCCCCC"> Cabana for two things</font>

233
00:09:41,310 --> 00:09:46,199
one is full text<font color="#E5E5E5"> queries so you clearly</font>

234
00:09:44,430 --> 00:09:48,620
<font color="#E5E5E5">for error messages</font><font color="#CCCCCC"> and so on</font><font color="#E5E5E5"> and and</font>

235
00:09:46,199 --> 00:09:51,899
find your corresponding log files<font color="#E5E5E5"> and</font>

236
00:09:48,620 --> 00:09:54,209
the other is aggregation which is

237
00:09:51,899 --> 00:09:56,399
similar to<font color="#CCCCCC"> what</font><font color="#E5E5E5"> Prometheus does so for</font>

238
00:09:54,209 --> 00:09:58,649
example if you index those duration

239
00:09:56,399 --> 00:10:00,779
values in your elastic search you can

240
00:09:58,649 --> 00:10:02,760
run aggregations that give me the<font color="#E5E5E5"> median</font>

241
00:10:00,779 --> 00:10:07,350
value that was observed<font color="#E5E5E5"> within the last</font>

242
00:10:02,760 --> 00:10:09,420
two hours or so<font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> question is if</font>

243
00:10:07,350 --> 00:10:10,980
you go with a lot<font color="#CCCCCC"> v monitoring with</font>

244
00:10:09,420 --> 00:10:13,920
Prometheus do you still need your

245
00:10:10,980 --> 00:10:19,110
elastic stack<font color="#E5E5E5"> answer is yes you need it</font>

246
00:10:13,920 --> 00:10:20,490
because because<font color="#CCCCCC"> of the error messages so</font>

247
00:10:19,110 --> 00:10:23,370
if you have a stack trace like this

248
00:10:20,490 --> 00:10:25,350
let's scroll<font color="#E5E5E5"> up a</font><font color="#CCCCCC"> little bit like for</font>

249
00:10:23,370 --> 00:10:27,029
example<font color="#CCCCCC"> in our line like this what</font>

250
00:10:25,350 --> 00:10:28,980
developers want<font color="#CCCCCC"> to do they want to</font>

251
00:10:27,029 --> 00:10:31,290
search<font color="#CCCCCC"> for it and then find</font><font color="#E5E5E5"> the error</font>

252
00:10:28,980 --> 00:10:33,360
message<font color="#CCCCCC"> here okay</font><font color="#E5E5E5"> and if you do</font><font color="#CCCCCC"> logging</font>

253
00:10:31,290 --> 00:10:37,019
a little bit more clever<font color="#CCCCCC"> you would maybe</font>

254
00:10:33,360 --> 00:10:38,730
look a like unique request<font color="#E5E5E5"> ID with each</font>

255
00:10:37,019 --> 00:10:40,649
lock line that is associated<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a</font>

256
00:10:38,730 --> 00:10:42,990
<font color="#E5E5E5">request and then you find the request ID</font>

257
00:10:40,649 --> 00:10:45,209
and search for<font color="#CCCCCC"> it in hapana</font><font color="#E5E5E5"> and then you</font>

258
00:10:42,990 --> 00:10:48,600
find all the<font color="#E5E5E5"> lock lines that have to do</font>

259
00:10:45,209 --> 00:10:50,130
with<font color="#E5E5E5"> how it came</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> error how it</font>

260
00:10:48,600 --> 00:10:52,560
occurred and this is<font color="#E5E5E5"> something that</font>

261
00:10:50,130 --> 00:10:54,779
Prometheus doesn't do<font color="#E5E5E5"> okay Prometheus</font>

262
00:10:52,560 --> 00:10:57,479
has nothing to do<font color="#CCCCCC"> with full</font><font color="#E5E5E5"> text or text</font>

263
00:10:54,779 --> 00:10:59,610
<font color="#E5E5E5">or messages that</font><font color="#CCCCCC"> just about</font><font color="#E5E5E5"> numbers and</font>

264
00:10:57,480 --> 00:11:01,970
<font color="#E5E5E5">time series so you still</font><font color="#CCCCCC"> need the</font>

265
00:10:59,610 --> 00:11:03,289
elastic stack

266
00:11:01,970 --> 00:11:06,589
the other question is what's the

267
00:11:03,289 --> 00:11:10,729
<font color="#CCCCCC">difference between</font><font color="#E5E5E5"> monitoring those</font>

268
00:11:06,589 --> 00:11:12,889
duration values with<font color="#E5E5E5"> Prometheus and</font>

269
00:11:10,729 --> 00:11:15,529
monitoring<font color="#E5E5E5"> those duration values with</font>

270
00:11:12,889 --> 00:11:16,879
the aggregation capabilities of the

271
00:11:15,529 --> 00:11:19,429
elastic<font color="#E5E5E5"> stack okay</font>

272
00:11:16,879 --> 00:11:22,339
and the difference is with the elastic

273
00:11:19,429 --> 00:11:24,529
<font color="#CCCCCC">stake you ship each and every observe</font>

274
00:11:22,339 --> 00:11:28,549
<font color="#E5E5E5">block line into the elastic search</font>

275
00:11:24,529 --> 00:11:31,429
cluster<font color="#E5E5E5"> okay so each individual duration</font>

276
00:11:28,549 --> 00:11:33,228
<font color="#CCCCCC">value that you have here is available</font><font color="#E5E5E5"> to</font>

277
00:11:31,429 --> 00:11:35,238
elastic search and the aggregation

278
00:11:33,229 --> 00:11:37,309
happens on the fly when<font color="#E5E5E5"> you run</font><font color="#CCCCCC"> a query</font>

279
00:11:35,239 --> 00:11:39,579
<font color="#E5E5E5">okay you'd say give me</font><font color="#CCCCCC"> the median in the</font>

280
00:11:37,309 --> 00:11:43,009
last two hours<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> those values are</font>

281
00:11:39,579 --> 00:11:45,049
aggregated but Prometheus<font color="#CCCCCC"> they might</font><font color="#E5E5E5"> the</font>

282
00:11:43,009 --> 00:11:46,759
mindset is<font color="#CCCCCC"> different you</font><font color="#E5E5E5"> never ship each</font>

283
00:11:45,049 --> 00:11:49,039
and every observed value to the

284
00:11:46,759 --> 00:11:51,499
Prometheus server<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Prometheus</font><font color="#CCCCCC"> pulse</font>

285
00:11:49,039 --> 00:11:53,629
<font color="#E5E5E5">every I don't</font><font color="#CCCCCC"> know minute or half a</font>

286
00:11:51,499 --> 00:11:57,319
minute<font color="#E5E5E5"> or so however you configure</font><font color="#CCCCCC"> it</font>

287
00:11:53,629 --> 00:12:00,559
and then it expects aggregated data of

288
00:11:57,319 --> 00:12:04,069
what happened<font color="#E5E5E5"> and so what's going to</font>

289
00:12:00,559 --> 00:12:06,169
<font color="#CCCCCC">happen is you don't ship each individual</font>

290
00:12:04,069 --> 00:12:08,569
observed duration value<font color="#E5E5E5"> you aggregate</font>

291
00:12:06,169 --> 00:12:10,728
<font color="#E5E5E5">the data and then provide the aggregated</font>

292
00:12:08,569 --> 00:12:13,159
<font color="#E5E5E5">result to the Prometheus server and the</font>

293
00:12:10,729 --> 00:12:18,049
Prometheus server<font color="#E5E5E5"> only sees aggregated</font>

294
00:12:13,159 --> 00:12:19,399
results<font color="#E5E5E5"> so let's look at an</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> how</font>

295
00:12:18,049 --> 00:12:21,499
would<font color="#E5E5E5"> you do this</font><font color="#CCCCCC"> so you basically</font>

296
00:12:19,399 --> 00:12:23,839
<font color="#E5E5E5">choose a metric that's good with</font>

297
00:12:21,499 --> 00:12:25,489
aggregation<font color="#CCCCCC"> there is one for example</font>

298
00:12:23,839 --> 00:12:29,169
that's a summary so I'm going to<font color="#E5E5E5"> change</font>

299
00:12:25,489 --> 00:12:31,729
<font color="#CCCCCC">my metric type from calendar to summary</font>

300
00:12:29,169 --> 00:12:33,439
and then you just tell<font color="#CCCCCC"> it</font><font color="#E5E5E5"> which value</font>

301
00:12:31,729 --> 00:12:37,009
should be aggregated<font color="#E5E5E5"> okay so I'm going</font>

302
00:12:33,439 --> 00:12:40,069
to say my well<font color="#CCCCCC"> you should be</font><font color="#E5E5E5"> I can say</font>

303
00:12:37,009 --> 00:12:43,309
the number that I have<font color="#E5E5E5"> done up here</font>

304
00:12:40,069 --> 00:12:46,279
<font color="#E5E5E5">should be under the name duration for</font>

305
00:12:43,309 --> 00:12:48,728
example you<font color="#E5E5E5"> raishin okay</font>

306
00:12:46,279 --> 00:12:51,379
so<font color="#E5E5E5"> I highlight</font><font color="#CCCCCC"> it so</font><font color="#E5E5E5"> if you can read it</font>

307
00:12:48,729 --> 00:12:55,069
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> I can use it down</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> I can</font>

308
00:12:51,379 --> 00:12:57,379
<font color="#CCCCCC">just say</font><font color="#E5E5E5"> duration so now I have an</font>

309
00:12:55,069 --> 00:12:59,209
aggregation metric called<font color="#E5E5E5"> a summary and</font>

310
00:12:57,379 --> 00:13:04,399
<font color="#E5E5E5">I'm going to use the duration as the</font>

311
00:12:59,209 --> 00:13:07,459
<font color="#E5E5E5">value</font><font color="#CCCCCC"> for aggregating</font><font color="#E5E5E5"> oops so let's save</font>

312
00:13:04,399 --> 00:13:10,279
it<font color="#E5E5E5"> and start it again</font><font color="#CCCCCC"> and if</font><font color="#E5E5E5"> we look at</font>

313
00:13:07,459 --> 00:13:12,469
<font color="#E5E5E5">the metrics right now what we see is</font>

314
00:13:10,279 --> 00:13:14,920
something<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> we have still our</font>

315
00:13:12,470 --> 00:13:17,380
<font color="#CCCCCC">LOC level and our path</font>

316
00:13:14,920 --> 00:13:19,569
also have<font color="#E5E5E5"> those quantiles here and what</font>

317
00:13:17,380 --> 00:13:23,290
that<font color="#CCCCCC"> means one tile Oh dot</font><font color="#E5E5E5"> five means</font>

318
00:13:19,570 --> 00:13:25,300
half of<font color="#CCCCCC"> the requests with block-level</font>

319
00:13:23,290 --> 00:13:27,610
<font color="#E5E5E5">info and the path hello Alice</font>

320
00:13:25,300 --> 00:13:29,109
<font color="#E5E5E5">they're faster than this value and half</font>

321
00:13:27,610 --> 00:13:30,070
of the requests were slower than this

322
00:13:29,110 --> 00:13:32,589
value<font color="#E5E5E5"> okay</font>

323
00:13:30,070 --> 00:13:35,290
one tile<font color="#CCCCCC"> odor</font><font color="#E5E5E5"> nine means half of the</font>

324
00:13:32,589 --> 00:13:37,750
<font color="#E5E5E5">request</font><font color="#CCCCCC"> if 90%</font><font color="#E5E5E5"> were faster than</font><font color="#CCCCCC"> this and</font>

325
00:13:35,290 --> 00:13:40,449
<font color="#E5E5E5">10%</font><font color="#CCCCCC"> slower than this and so on</font><font color="#E5E5E5"> so this</font>

326
00:13:37,750 --> 00:13:42,160
<font color="#E5E5E5">is an aggregation value and this is</font><font color="#CCCCCC"> the</font>

327
00:13:40,449 --> 00:13:44,649
data<font color="#E5E5E5"> that's provided to the premises</font>

328
00:13:42,160 --> 00:13:46,480
server summaries are not the only

329
00:13:44,649 --> 00:13:49,720
metrics for aggregation there are also

330
00:13:46,480 --> 00:13:51,160
histograms<font color="#E5E5E5"> each of those have their pros</font>

331
00:13:49,720 --> 00:13:52,660
<font color="#CCCCCC">and cons and there's a very</font><font color="#E5E5E5"> good</font>

332
00:13:51,160 --> 00:13:54,130
documentation highlighting the

333
00:13:52,660 --> 00:13:56,170
differences between summaries and

334
00:13:54,130 --> 00:13:58,420
histograms and<font color="#E5E5E5"> meant to use what but the</font>

335
00:13:56,170 --> 00:14:00,250
the<font color="#E5E5E5"> principle is you a create the data</font>

336
00:13:58,420 --> 00:14:04,719
first and<font color="#E5E5E5"> then provide aggregated data</font>

337
00:14:00,250 --> 00:14:06,850
to the Prometheus server<font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> think I</font>

338
00:14:04,720 --> 00:14:08,980
<font color="#CCCCCC">would take questions after the talk so</font>

339
00:14:06,850 --> 00:14:13,990
because otherwise it will<font color="#E5E5E5"> be a bit busy</font>

340
00:14:08,980 --> 00:14:18,040
<font color="#CCCCCC">with the</font><font color="#E5E5E5"> half hour</font><font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> that's it for</font>

341
00:14:13,990 --> 00:14:20,290
the<font color="#E5E5E5"> log file monitoring example let's go</font>

342
00:14:18,040 --> 00:14:22,060
<font color="#CCCCCC">onto something</font><font color="#E5E5E5"> totally different</font>

343
00:14:20,290 --> 00:14:24,670
let's have a quick<font color="#CCCCCC"> look at the black box</font>

344
00:14:22,060 --> 00:14:27,010
exporter this will be very<font color="#CCCCCC"> quick</font><font color="#E5E5E5"> because</font>

345
00:14:24,670 --> 00:14:32,469
<font color="#E5E5E5">there's not much to say</font><font color="#CCCCCC"> about the black</font>

346
00:14:27,010 --> 00:14:34,600
box exporter actually have a little

347
00:14:32,470 --> 00:14:36,220
<font color="#CCCCCC">script that</font><font color="#E5E5E5"> prints do</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> also the way</font>

348
00:14:34,600 --> 00:14:38,680
it works is<font color="#CCCCCC"> you start</font><font color="#E5E5E5"> the black box</font>

349
00:14:36,220 --> 00:14:42,250
exporter in in my<font color="#E5E5E5"> case it will start up</font>

350
00:14:38,680 --> 00:14:45,069
under<font color="#E5E5E5"> this URL okay and then as a URL</font>

351
00:14:42,250 --> 00:14:48,399
<font color="#E5E5E5">parameter you provide the probe</font><font color="#CCCCCC"> that is</font>

352
00:14:45,070 --> 00:14:50,740
going to do<font color="#E5E5E5"> okay and this is my actual</font>

353
00:14:48,399 --> 00:14:52,600
<font color="#CCCCCC">endpoint</font><font color="#E5E5E5"> that I'm going to probe so this</font>

354
00:14:50,740 --> 00:14:54,370
is the host name because my<font color="#E5E5E5"> demo is</font>

355
00:14:52,600 --> 00:14:57,250
running in a docker container so it had

356
00:14:54,370 --> 00:14:59,860
such a cryptic hostname port 8080 and

357
00:14:57,250 --> 00:15:03,370
<font color="#CCCCCC">this is the API echad probe this</font><font color="#E5E5E5"> is the</font>

358
00:14:59,860 --> 00:15:05,170
sleep<font color="#CCCCCC"> 1000 milliseconds API and then as</font>

359
00:15:03,370 --> 00:15:09,279
the second<font color="#E5E5E5"> parameter and provide a</font>

360
00:15:05,170 --> 00:15:11,050
module and<font color="#E5E5E5"> the module</font><font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> 200 is like</font>

361
00:15:09,279 --> 00:15:14,050
the most important<font color="#CCCCCC"> module because it</font>

362
00:15:11,050 --> 00:15:17,949
<font color="#E5E5E5">just checks does the endpoint reply with</font>

363
00:15:14,050 --> 00:15:20,290
200<font color="#CCCCCC"> okay or</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> okay so let's try it</font><font color="#E5E5E5"> I</font>

364
00:15:17,949 --> 00:15:22,180
just<font color="#CCCCCC"> saw the black box exporter</font><font color="#E5E5E5"> it</font>

365
00:15:20,290 --> 00:15:25,540
doesn't really have any application

366
00:15:22,180 --> 00:15:26,870
specific configuration so if<font color="#E5E5E5"> I copy and</font>

367
00:15:25,540 --> 00:15:29,810
<font color="#E5E5E5">paste my url</font>

368
00:15:26,870 --> 00:15:31,970
year<font color="#E5E5E5"> I'm going to see the so the most</font>

369
00:15:29,810 --> 00:15:34,430
important metric is this probe success

370
00:15:31,970 --> 00:15:37,670
<font color="#E5E5E5">one that just tells me</font><font color="#CCCCCC"> okay the probe</font>

371
00:15:34,430 --> 00:15:39,349
was successful server replied with<font color="#E5E5E5"> 200</font>

372
00:15:37,670 --> 00:15:42,290
<font color="#CCCCCC">okay so it's a boolean value if it's</font>

373
00:15:39,350 --> 00:15:45,070
unsuccessful<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> 0 okay and there's</font>

374
00:15:42,290 --> 00:15:49,130
some<font color="#CCCCCC"> additional information</font><font color="#E5E5E5"> for example</font>

375
00:15:45,070 --> 00:15:52,100
<font color="#CCCCCC">the request duration there is it like</font>

376
00:15:49,130 --> 00:15:53,779
here<font color="#E5E5E5"> okay that</font><font color="#CCCCCC"> tells</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> that it took a</font>

377
00:15:52,100 --> 00:15:56,660
<font color="#CCCCCC">little bit more than a second for this</font>

378
00:15:53,779 --> 00:15:58,580
<font color="#CCCCCC">endpoint to reply</font><font color="#E5E5E5"> this is the most</font>

379
00:15:56,660 --> 00:16:00,439
simple thing you<font color="#CCCCCC"> can do</font><font color="#E5E5E5"> it's the good</font>

380
00:15:58,580 --> 00:16:02,029
<font color="#CCCCCC">thing is it always works so even if your</font>

381
00:16:00,440 --> 00:16:04,400
application<font color="#CCCCCC"> does not provide lock lines</font>

382
00:16:02,029 --> 00:16:06,470
or does not have J mix or nothing<font color="#E5E5E5"> else</font>

383
00:16:04,400 --> 00:16:09,620
you can<font color="#CCCCCC"> always still use</font><font color="#E5E5E5"> black box</font>

384
00:16:06,470 --> 00:16:12,080
monitoring from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> mindset it's very</font>

385
00:16:09,620 --> 00:16:13,910
similar to<font color="#CCCCCC"> Nagios checks</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> you just</font>

386
00:16:12,080 --> 00:16:16,190
<font color="#CCCCCC">run a check against the application if</font>

387
00:16:13,910 --> 00:16:18,170
it's responding<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> okay if</font><font color="#E5E5E5"> not you can</font>

388
00:16:16,190 --> 00:16:20,720
trigger an alert<font color="#CCCCCC"> or something</font>

389
00:16:18,170 --> 00:16:23,360
however it's not very<font color="#CCCCCC"> powerful so it the</font>

390
00:16:20,720 --> 00:16:25,700
application<font color="#CCCCCC"> might easily return</font><font color="#E5E5E5"> 200</font><font color="#CCCCCC"> okay</font>

391
00:16:23,360 --> 00:16:27,500
at some<font color="#CCCCCC"> endpoint</font><font color="#E5E5E5"> but it still has</font>

392
00:16:25,700 --> 00:16:33,140
problems<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you won't figure it out</font>

393
00:16:27,500 --> 00:16:37,850
<font color="#CCCCCC">that way okay good that's</font><font color="#E5E5E5"> for black box</font>

394
00:16:33,140 --> 00:16:39,830
monitoring<font color="#E5E5E5"> next up is</font><font color="#CCCCCC"> JMX</font><font color="#E5E5E5"> the java</font>

395
00:16:37,850 --> 00:16:43,430
management extensions<font color="#CCCCCC"> i guess most of</font>

396
00:16:39,830 --> 00:16:46,010
<font color="#CCCCCC">you have heard of j mix it's something</font>

397
00:16:43,430 --> 00:16:48,560
like<font color="#E5E5E5"> a remote procedure call protocol</font><font color="#CCCCCC"> I</font>

398
00:16:46,010 --> 00:16:51,589
would say which<font color="#CCCCCC"> is built into</font><font color="#E5E5E5"> Java and</font>

399
00:16:48,560 --> 00:16:53,750
available with<font color="#CCCCCC"> each Java program</font><font color="#E5E5E5"> and it</font>

400
00:16:51,589 --> 00:16:56,089
has been around with<font color="#E5E5E5"> Java for a very</font>

401
00:16:53,750 --> 00:16:58,400
long time<font color="#E5E5E5"> maybe since</font><font color="#CCCCCC"> the beginning even</font>

402
00:16:56,089 --> 00:16:59,600
<font color="#E5E5E5">I don't know but</font><font color="#CCCCCC"> very long</font><font color="#E5E5E5"> and the way</font>

403
00:16:58,400 --> 00:17:04,810
it works

404
00:16:59,600 --> 00:17:04,810
just let me start a chain exclaimed here

405
00:17:06,130 --> 00:17:12,140
don't know if the<font color="#E5E5E5"> resolution will make</font>

406
00:17:08,449 --> 00:17:14,390
it so<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Java visual VM which</font>

407
00:17:12,140 --> 00:17:16,970
is a standard tool included in the Java

408
00:17:14,390 --> 00:17:19,130
<font color="#CCCCCC">development kit</font><font color="#E5E5E5"> so every Java developer</font>

409
00:17:16,970 --> 00:17:21,079
has<font color="#E5E5E5"> this on their laptop maybe they</font>

410
00:17:19,130 --> 00:17:24,170
don't know it but<font color="#CCCCCC"> it's part of</font><font color="#E5E5E5"> the Java</font>

411
00:17:21,079 --> 00:17:26,480
compiler<font color="#E5E5E5"> so they have it and what you</font>

412
00:17:24,170 --> 00:17:29,360
can do with it you<font color="#E5E5E5"> can connect to a</font>

413
00:17:26,480 --> 00:17:33,050
program<font color="#E5E5E5"> that exposes</font><font color="#CCCCCC"> trail expands you</font>

414
00:17:29,360 --> 00:17:35,178
can just let have a look<font color="#CCCCCC"> at the mbeans</font>

415
00:17:33,050 --> 00:17:37,100
<font color="#CCCCCC">and there is some J</font><font color="#E5E5E5"> mix information</font>

416
00:17:35,179 --> 00:17:38,289
available<font color="#CCCCCC"> about different things okay</font>

417
00:17:37,100 --> 00:17:40,149
first of all

418
00:17:38,289 --> 00:17:42,100
the<font color="#CCCCCC"> Java Virtual Machine by itself</font>

419
00:17:40,149 --> 00:17:43,719
<font color="#E5E5E5">provide some information for example</font>

420
00:17:42,100 --> 00:17:46,149
<font color="#E5E5E5">like information about garbage</font>

421
00:17:43,720 --> 00:17:48,159
collection heap usage CPU usage and<font color="#E5E5E5"> so</font>

422
00:17:46,149 --> 00:17:51,340
on and typically<font color="#E5E5E5"> with web applications</font>

423
00:17:48,159 --> 00:17:53,440
<font color="#CCCCCC">you have a servlet</font><font color="#E5E5E5"> container</font><font color="#CCCCCC"> in this</font>

424
00:17:51,340 --> 00:17:56,980
case<font color="#CCCCCC"> it's Tomcat</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> spring boot</font>

425
00:17:53,440 --> 00:17:59,440
applications always use Tomcat<font color="#E5E5E5"> and it</font>

426
00:17:56,980 --> 00:18:00,880
provides<font color="#E5E5E5"> some information like for</font>

427
00:17:59,440 --> 00:18:03,010
<font color="#CCCCCC">example the globe global request</font>

428
00:18:00,880 --> 00:18:05,409
processor<font color="#E5E5E5"> here</font><font color="#CCCCCC"> ok it tells</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> error</font>

429
00:18:03,010 --> 00:18:07,830
<font color="#E5E5E5">count 1 which means that</font><font color="#CCCCCC"> there was one</font>

430
00:18:05,409 --> 00:18:09,340
error<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> if they go back</font><font color="#CCCCCC"> to the</font>

431
00:18:07,830 --> 00:18:11,678
application

432
00:18:09,340 --> 00:18:15,269
hit the<font color="#CCCCCC"> slash throw endpoint which just</font>

433
00:18:11,679 --> 00:18:18,690
throws<font color="#E5E5E5"> the exception internally and now</font>

434
00:18:15,269 --> 00:18:22,470
<font color="#E5E5E5">there's a refresh button down</font><font color="#CCCCCC"> here</font>

435
00:18:18,690 --> 00:18:25,840
<font color="#CCCCCC">which I</font><font color="#E5E5E5"> can't reach right now because</font>

436
00:18:22,470 --> 00:18:30,130
there it<font color="#CCCCCC"> is ok</font><font color="#E5E5E5"> if i refresh it goes up</font>

437
00:18:25,840 --> 00:18:32,320
to<font color="#E5E5E5"> 2 good so this is</font><font color="#CCCCCC"> JMX and there's a</font>

438
00:18:30,130 --> 00:18:35,769
tool<font color="#CCCCCC"> called the JMX exporter that</font><font color="#E5E5E5"> you</font>

439
00:18:32,320 --> 00:18:43,360
can use to read this data let's have a

440
00:18:35,769 --> 00:18:46,179
look at how it is<font color="#CCCCCC"> configured</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's</font>

441
00:18:43,360 --> 00:18:48,789
basically the read is not<font color="#CCCCCC"> very readable</font>

442
00:18:46,179 --> 00:18:54,159
so it's basically a collection<font color="#E5E5E5"> of very</font>

443
00:18:48,789 --> 00:18:55,600
huge regular expressions you don't maybe

444
00:18:54,159 --> 00:18:57,070
don't need to write them<font color="#CCCCCC"> yourself</font>

445
00:18:55,600 --> 00:18:59,019
because there's some predefined

446
00:18:57,070 --> 00:19:01,450
configurations for<font color="#E5E5E5"> things you typically</font>

447
00:18:59,019 --> 00:19:03,639
use like for example this<font color="#CCCCCC"> configuration</font>

448
00:19:01,450 --> 00:19:06,669
for grabbing Jay makes metrics from

449
00:19:03,639 --> 00:19:09,219
<font color="#E5E5E5">Tomcat is part of the Jay makes exporter</font>

450
00:19:06,669 --> 00:19:11,080
distribution so you maybe can just go

451
00:19:09,220 --> 00:19:12,639
along<font color="#CCCCCC"> with that but when you</font><font color="#E5E5E5"> look at it</font>

452
00:19:11,080 --> 00:19:14,830
so what<font color="#E5E5E5"> what what's actually happening</font>

453
00:19:12,639 --> 00:19:16,570
<font color="#CCCCCC">so this is basically the part that I</font>

454
00:19:14,830 --> 00:19:18,730
clicked in my<font color="#CCCCCC"> tray</font><font color="#E5E5E5"> next to it so if I</font>

455
00:19:16,570 --> 00:19:20,799
looked at look at<font color="#E5E5E5"> it so that's Tomcat</font>

456
00:19:18,730 --> 00:19:22,570
<font color="#E5E5E5">global request processor this and then</font>

457
00:19:20,799 --> 00:19:24,370
the error count<font color="#E5E5E5"> and here we have</font>

458
00:19:22,570 --> 00:19:26,110
something starting<font color="#E5E5E5"> with Tomcat</font><font color="#CCCCCC"> and</font>

459
00:19:24,370 --> 00:19:28,449
ending with<font color="#E5E5E5"> error</font><font color="#CCCCCC"> count and if you</font>

460
00:19:26,110 --> 00:19:32,289
analyze<font color="#CCCCCC"> it it's kind of going down this</font>

461
00:19:28,450 --> 00:19:34,809
path<font color="#CCCCCC"> in industry ok and then there are</font>

462
00:19:32,289 --> 00:19:37,990
<font color="#CCCCCC">some capture groups which are used here</font>

463
00:19:34,809 --> 00:19:41,830
<font color="#CCCCCC">to</font><font color="#E5E5E5"> actually extract metrics out of of</font>

464
00:19:37,990 --> 00:19:43,120
what it's<font color="#E5E5E5"> found with dynamics so I don't</font>

465
00:19:41,830 --> 00:19:45,580
need<font color="#E5E5E5"> to start it</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> because you</font>

466
00:19:43,120 --> 00:19:47,830
<font color="#E5E5E5">actually attach it to the application</font><font color="#CCCCCC"> on</font>

467
00:19:45,580 --> 00:19:49,870
startup and I actually did this when I

468
00:19:47,830 --> 00:19:51,689
started my application<font color="#E5E5E5"> so it's already</font>

469
00:19:49,870 --> 00:19:54,758
<font color="#E5E5E5">running on port</font>

470
00:19:51,690 --> 00:19:57,789
<font color="#CCCCCC">localhost now in</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> one two three four</font>

471
00:19:54,759 --> 00:20:00,700
are used<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and if you looked at here</font>

472
00:19:57,789 --> 00:20:02,200
<font color="#CCCCCC">our account here it</font><font color="#E5E5E5"> is if you look at</font>

473
00:20:00,700 --> 00:20:04,690
<font color="#E5E5E5">the</font><font color="#CCCCCC"> error</font><font color="#E5E5E5"> account you see it's the</font><font color="#CCCCCC"> same</font>

474
00:20:02,200 --> 00:20:07,929
<font color="#E5E5E5">value it's the value</font><font color="#CCCCCC"> too okay those</font>

475
00:20:04,690 --> 00:20:11,110
labels here<font color="#E5E5E5"> port 8080 and protocol HTTP</font>

476
00:20:07,929 --> 00:20:12,970
new<font color="#CCCCCC"> i/o this was parsed with capture</font>

477
00:20:11,110 --> 00:20:18,189
groups<font color="#E5E5E5"> out of this little</font><font color="#CCCCCC"> thing here</font>

478
00:20:12,970 --> 00:20:22,629
HTTP new<font color="#CCCCCC"> IO ad</font><font color="#E5E5E5"> okay so one word of</font>

479
00:20:18,190 --> 00:20:25,809
advice about the<font color="#CCCCCC"> jmx exporter</font><font color="#E5E5E5"> J makes is</font>

480
00:20:22,629 --> 00:20:27,488
actually it's really more like<font color="#CCCCCC"> a remote</font>

481
00:20:25,809 --> 00:20:29,320
procedure called protocol<font color="#CCCCCC"> okay it's not</font>

482
00:20:27,489 --> 00:20:31,419
a read only<font color="#E5E5E5"> thing you can write values</font>

483
00:20:29,320 --> 00:20:36,129
<font color="#E5E5E5">as well which is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> relevant for</font>

484
00:20:31,419 --> 00:20:37,720
<font color="#E5E5E5">monitoring but it's originally it was</font>

485
00:20:36,129 --> 00:20:40,539
designed<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> you can reconfigure</font>

486
00:20:37,720 --> 00:20:43,389
applications on the fly<font color="#CCCCCC"> okay and what</font>

487
00:20:40,539 --> 00:20:45,879
that means is whenever you call a<font color="#E5E5E5"> JX Ben</font>

488
00:20:43,389 --> 00:20:48,219
there's no real guarantee<font color="#E5E5E5"> what's going</font>

489
00:20:45,879 --> 00:20:50,049
to happen okay<font color="#E5E5E5"> because whatever the</font>

490
00:20:48,220 --> 00:20:52,210
implementer of<font color="#E5E5E5"> that chain makes</font><font color="#CCCCCC"> being</font>

491
00:20:50,049 --> 00:20:54,489
had in mind<font color="#CCCCCC"> can happen when you call it</font>

492
00:20:52,210 --> 00:20:57,999
so when when you come from a Prometheus

493
00:20:54,489 --> 00:20:59,980
background<font color="#E5E5E5"> you'll use</font><font color="#CCCCCC"> that used</font><font color="#E5E5E5"> to that</font>

494
00:20:57,999 --> 00:21:02,619
when<font color="#CCCCCC"> the Prometheus server</font><font color="#E5E5E5"> Paul's</font>

495
00:20:59,980 --> 00:21:05,169
metrics<font color="#E5E5E5"> from an exporter that's a cheap</font>

496
00:21:02,619 --> 00:21:06,789
operation<font color="#CCCCCC"> okay you just get the</font><font color="#E5E5E5"> data the</font>

497
00:21:05,169 --> 00:21:09,399
exporter<font color="#E5E5E5"> has the data readily available</font>

498
00:21:06,789 --> 00:21:11,559
and<font color="#E5E5E5"> you pull it with appalling</font><font color="#CCCCCC"> train</font>

499
00:21:09,399 --> 00:21:12,279
expense that's not necessarily the<font color="#E5E5E5"> case</font>

500
00:21:11,559 --> 00:21:14,559
<font color="#E5E5E5">okay</font>

501
00:21:12,279 --> 00:21:16,359
there can be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> expense</font><font color="#CCCCCC"> that have their</font>

502
00:21:14,559 --> 00:21:18,668
data readily available and<font color="#CCCCCC"> just provide</font>

503
00:21:16,359 --> 00:21:20,320
the<font color="#E5E5E5"> data then it's cheap but</font><font color="#CCCCCC"> there can</font>

504
00:21:18,669 --> 00:21:22,509
be<font color="#CCCCCC"> JM experienced when you</font><font color="#E5E5E5"> call them</font>

505
00:21:20,320 --> 00:21:24,549
they trigger some complex operation or

506
00:21:22,509 --> 00:21:26,980
maybe even reconfigure something or

507
00:21:24,549 --> 00:21:28,929
<font color="#E5E5E5">whatever so it just depends on whoever</font>

508
00:21:26,980 --> 00:21:31,470
implemented that beam so<font color="#E5E5E5"> you there's no</font>

509
00:21:28,929 --> 00:21:34,299
guarantees<font color="#CCCCCC"> and you never know and if you</font>

510
00:21:31,470 --> 00:21:36,159
the the<font color="#CCCCCC"> the thing</font><font color="#E5E5E5"> about this regular</font>

511
00:21:34,299 --> 00:21:38,440
expression approach is of course<font color="#E5E5E5"> you</font>

512
00:21:36,159 --> 00:21:40,690
first need to<font color="#E5E5E5"> load</font><font color="#CCCCCC"> the J mix</font><font color="#E5E5E5"> speed then</font>

513
00:21:38,440 --> 00:21:42,489
you<font color="#CCCCCC"> match the regular expression and if</font>

514
00:21:40,690 --> 00:21:43,840
it<font color="#E5E5E5"> doesn't match then you throw the</font>

515
00:21:42,489 --> 00:21:47,019
result away<font color="#E5E5E5"> okay</font>

516
00:21:43,840 --> 00:21:49,570
so you basically load more<font color="#CCCCCC"> Jane</font><font color="#E5E5E5"> expense</font>

517
00:21:47,019 --> 00:21:53,499
than you would necessarily need at the

518
00:21:49,570 --> 00:21:55,689
end<font color="#E5E5E5"> in your metrics and if you do this</font>

519
00:21:53,499 --> 00:21:58,029
like with a poly interval of every 15

520
00:21:55,690 --> 00:22:00,609
seconds<font color="#E5E5E5"> or every 30 seconds and you</font><font color="#CCCCCC"> have</font>

521
00:21:58,029 --> 00:22:03,380
some expensive gym experience<font color="#CCCCCC"> in your</font>

522
00:22:00,609 --> 00:22:05,120
server then you<font color="#E5E5E5"> might</font>

523
00:22:03,380 --> 00:22:06,770
have some significant<font color="#CCCCCC"> performance</font>

524
00:22:05,120 --> 00:22:08,989
penalty with that and there<font color="#CCCCCC"> is</font>

525
00:22:06,770 --> 00:22:11,450
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> J mix exporter</font>

526
00:22:08,990 --> 00:22:13,309
which is<font color="#E5E5E5"> black lists and white lists and</font>

527
00:22:11,450 --> 00:22:15,260
if you experience<font color="#CCCCCC"> problems</font><font color="#E5E5E5"> with that you</font>

528
00:22:13,309 --> 00:22:17,480
<font color="#CCCCCC">can use black lists and white lists to</font>

529
00:22:15,260 --> 00:22:19,490
fine tune which Jay makes beans are

530
00:22:17,480 --> 00:22:20,809
<font color="#CCCCCC">actually exists and which ones are not</font>

531
00:22:19,490 --> 00:22:23,210
exist<font color="#CCCCCC"> okay</font>

532
00:22:20,809 --> 00:22:26,178
so<font color="#E5E5E5"> just have a</font><font color="#CCCCCC"> look at how much load</font>

533
00:22:23,210 --> 00:22:27,830
<font color="#E5E5E5">here</font><font color="#CCCCCC"> Jay makes palling produces and use</font>

534
00:22:26,179 --> 00:22:29,360
black lists and white lists to find you

535
00:22:27,830 --> 00:22:31,280
in that<font color="#CCCCCC"> and then it's a good approach</font>

536
00:22:29,360 --> 00:22:33,469
<font color="#E5E5E5">the good thing is that</font><font color="#CCCCCC"> out-of-the-box</font>

537
00:22:31,280 --> 00:22:36,139
<font color="#CCCCCC">Java has some really</font><font color="#E5E5E5"> interesting metrics</font>

538
00:22:33,470 --> 00:22:38,960
<font color="#CCCCCC">heap usage number of I</font><font color="#E5E5E5"> don't know class</font>

539
00:22:36,140 --> 00:22:40,730
is loaded and<font color="#E5E5E5"> CPU usage so it's it's a</font>

540
00:22:38,960 --> 00:22:46,429
pretty<font color="#CCCCCC"> good information</font><font color="#E5E5E5"> that you can get</font>

541
00:22:40,730 --> 00:22:49,190
out of<font color="#E5E5E5"> it</font><font color="#CCCCCC"> ok then let's go to the</font><font color="#E5E5E5"> last</font>

542
00:22:46,429 --> 00:22:51,289
<font color="#E5E5E5">point which is actually my favorite</font><font color="#CCCCCC"> in</font>

543
00:22:49,190 --> 00:22:53,929
the moment<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it's the</font><font color="#E5E5E5"> most</font>

544
00:22:51,289 --> 00:22:56,720
<font color="#E5E5E5">powerful and also the most experimental</font>

545
00:22:53,929 --> 00:22:59,630
<font color="#E5E5E5">how to do your own</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> agent for</font>

546
00:22:56,720 --> 00:23:06,530
<font color="#CCCCCC">Prometheus monitoring so what is a Java</font>

547
00:22:59,630 --> 00:23:10,010
agent so Java<font color="#CCCCCC"> s you my voice so</font><font color="#E5E5E5"> Java as</font>

548
00:23:06,530 --> 00:23:12,289
you as you know it's something<font color="#E5E5E5"> like an</font>

549
00:23:10,010 --> 00:23:14,179
interpreted language<font color="#CCCCCC"> ok its</font><font color="#E5E5E5"> bytecode</font><font color="#CCCCCC"> and</font>

550
00:23:12,289 --> 00:23:16,340
the<font color="#CCCCCC"> bytecode is interpreted on the fly</font>

551
00:23:14,179 --> 00:23:19,100
in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Java Virtual Machine</font><font color="#E5E5E5"> before it's</font>

552
00:23:16,340 --> 00:23:21,500
<font color="#E5E5E5">being executed</font><font color="#CCCCCC"> and the Java Virtual</font>

553
00:23:19,100 --> 00:23:23,600
<font color="#CCCCCC">Machine provides something</font><font color="#E5E5E5"> like an</font>

554
00:23:21,500 --> 00:23:26,090
interface something like<font color="#E5E5E5"> your hook where</font>

555
00:23:23,600 --> 00:23:27,889
you can write a Java agent the Java

556
00:23:26,090 --> 00:23:30,860
agent hooks into<font color="#E5E5E5"> the process and</font>

557
00:23:27,890 --> 00:23:33,650
whenever bytecode is is<font color="#E5E5E5"> loaded from a</font>

558
00:23:30,860 --> 00:23:35,719
class file the agent can go ahead and

559
00:23:33,650 --> 00:23:37,070
<font color="#CCCCCC">modify the</font><font color="#E5E5E5"> bytecode before it's being</font>

560
00:23:35,720 --> 00:23:38,539
executed<font color="#CCCCCC"> ok</font>

561
00:23:37,070 --> 00:23:41,240
so the code that's<font color="#CCCCCC"> actually being</font>

562
00:23:38,539 --> 00:23:43,010
<font color="#E5E5E5">executed</font><font color="#CCCCCC"> is different from the code</font><font color="#E5E5E5"> that</font>

563
00:23:41,240 --> 00:23:45,260
was originally implemented in the

564
00:23:43,010 --> 00:23:47,450
application<font color="#CCCCCC"> and one thing you can use</font>

565
00:23:45,260 --> 00:23:50,960
this for is<font color="#E5E5E5"> you can write your own Java</font>

566
00:23:47,450 --> 00:23:53,299
agent<font color="#E5E5E5"> that just puts in calls to the</font>

567
00:23:50,960 --> 00:23:55,400
<font color="#CCCCCC">promises client library into your</font>

568
00:23:53,299 --> 00:23:59,030
application if<font color="#E5E5E5"> the application didn't</font>

569
00:23:55,400 --> 00:24:01,220
use the the<font color="#CCCCCC"> planned library before ok so</font>

570
00:23:59,030 --> 00:24:03,590
if<font color="#E5E5E5"> you are interested in how</font><font color="#CCCCCC"> to do this</font>

571
00:24:01,220 --> 00:24:05,539
from<font color="#E5E5E5"> from</font><font color="#CCCCCC"> scratch there is a Java</font>

572
00:24:03,590 --> 00:24:08,418
conference in in<font color="#E5E5E5"> Belgium it's called de</font>

573
00:24:05,539 --> 00:24:10,640
<font color="#E5E5E5">box so last November I did a half an</font>

574
00:24:08,419 --> 00:24:13,610
<font color="#E5E5E5">hour demo there like how to do such an</font>

575
00:24:10,640 --> 00:24:16,370
agent from<font color="#E5E5E5"> scratch for now I would like</font>

576
00:24:13,610 --> 00:24:16,860
<font color="#E5E5E5">to show you something</font><font color="#CCCCCC"> that I implemented</font>

577
00:24:16,370 --> 00:24:19,739
<font color="#E5E5E5">as an</font>

578
00:24:16,860 --> 00:24:22,080
experiment it's called the<font color="#CCCCCC"> Promethea</font>

579
00:24:19,740 --> 00:24:23,820
<font color="#E5E5E5">that the primate and maven</font><font color="#CCCCCC"> plugin so</font>

580
00:24:22,080 --> 00:24:25,860
it's a maven<font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> that just helps you</font>

581
00:24:23,820 --> 00:24:28,470
<font color="#CCCCCC">to do this very quickly and very easily</font>

582
00:24:25,860 --> 00:24:32,280
<font color="#CCCCCC">so what I have here is a Java project</font>

583
00:24:28,470 --> 00:24:34,200
this<font color="#CCCCCC"> only one single</font><font color="#E5E5E5"> class</font><font color="#CCCCCC"> okay I call</font>

584
00:24:32,280 --> 00:24:37,559
it a hook<font color="#CCCCCC"> because it hooks into other</font>

585
00:24:34,200 --> 00:24:40,440
classes<font color="#CCCCCC"> and what I did here i annotate</font>

586
00:24:37,559 --> 00:24:42,270
it if it with the classes or<font color="#E5E5E5"> interfaces</font>

587
00:24:40,440 --> 00:24:44,220
that<font color="#E5E5E5"> this is going to instrument</font><font color="#CCCCCC"> okay</font>

588
00:24:42,270 --> 00:24:47,129
<font color="#E5E5E5">and in this example we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to</font>

589
00:24:44,220 --> 00:24:49,860
instrument<font color="#E5E5E5"> the servlet</font><font color="#CCCCCC"> and the servlet</font>

590
00:24:47,130 --> 00:24:52,559
filter<font color="#E5E5E5"> and those are both standard Java</font>

591
00:24:49,860 --> 00:24:55,740
interfaces that<font color="#E5E5E5"> are always involved when</font>

592
00:24:52,559 --> 00:24:58,139
you respond to HTTP traffic<font color="#CCCCCC"> okay so we</font>

593
00:24:55,740 --> 00:25:00,030
can<font color="#CCCCCC"> monitor HTTP traffic with that</font><font color="#E5E5E5"> and</font>

594
00:24:58,140 --> 00:25:01,799
then there's a little<font color="#CCCCCC"> bit of</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> to</font>

595
00:25:00,030 --> 00:25:03,600
setting up<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Prometheus metrics that's</font>

596
00:25:01,799 --> 00:25:06,059
just the same as with the<font color="#E5E5E5"> standard</font>

597
00:25:03,600 --> 00:25:07,770
client library<font color="#E5E5E5"> and then I say which</font>

598
00:25:06,059 --> 00:25:09,690
methods<font color="#CCCCCC"> am I going to instrument I'm</font>

599
00:25:07,770 --> 00:25:11,460
going to say I'm<font color="#E5E5E5"> going to instrument the</font>

600
00:25:09,690 --> 00:25:14,700
<font color="#E5E5E5">service method and the</font><font color="#CCCCCC"> to filter method</font>

601
00:25:11,460 --> 00:25:16,320
<font color="#E5E5E5">and before one</font><font color="#CCCCCC"> of those methods</font><font color="#E5E5E5"> is</font>

602
00:25:14,700 --> 00:25:19,290
called<font color="#E5E5E5"> I'm just going</font><font color="#CCCCCC"> to measure the</font>

603
00:25:16,320 --> 00:25:21,149
time<font color="#E5E5E5"> take a time stamp</font><font color="#CCCCCC"> and after one of</font>

604
00:25:19,290 --> 00:25:23,428
<font color="#E5E5E5">those methods is called I'm going to</font>

605
00:25:21,150 --> 00:25:27,179
collect<font color="#CCCCCC"> some metrics</font><font color="#E5E5E5"> like the duration</font>

606
00:25:23,429 --> 00:25:29,700
from<font color="#E5E5E5"> my time stamp HTTP method path HTTP</font>

607
00:25:27,179 --> 00:25:32,010
status like 200<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> and I'm going</font><font color="#CCCCCC"> to</font>

608
00:25:29,700 --> 00:25:34,799
maintain<font color="#CCCCCC"> my metrics with it so</font><font color="#E5E5E5"> this is</font>

609
00:25:32,010 --> 00:25:39,660
the<font color="#CCCCCC"> only code in</font><font color="#E5E5E5"> this project</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> other</font>

610
00:25:34,799 --> 00:25:42,299
thing is the<font color="#CCCCCC"> plugin so what it's here</font>

611
00:25:39,660 --> 00:25:45,270
from<font color="#E5E5E5"> agent maven plug-in it's on an from</font>

612
00:25:42,299 --> 00:25:47,820
agent<font color="#CCCCCC"> IO</font><font color="#E5E5E5"> and if you configure that this</font>

613
00:25:45,270 --> 00:25:50,100
as your in your link it to<font color="#CCCCCC"> your</font>

614
00:25:47,820 --> 00:25:53,790
packaging<font color="#E5E5E5"> phase if you just compile your</font>

615
00:25:50,100 --> 00:26:01,320
project maven package what will<font color="#E5E5E5"> come out</font>

616
00:25:53,790 --> 00:26:02,940
<font color="#CCCCCC">of it is a</font><font color="#E5E5E5"> running agent so let's look</font>

617
00:26:01,320 --> 00:26:04,980
<font color="#E5E5E5">at the target folder so what we have</font>

618
00:26:02,940 --> 00:26:06,510
here<font color="#CCCCCC"> now is this</font><font color="#E5E5E5"> prom agent</font><font color="#CCCCCC"> per jar and</font>

619
00:26:04,980 --> 00:26:08,309
this<font color="#E5E5E5"> is an agent that's ready if we</font>

620
00:26:06,510 --> 00:26:10,679
attach<font color="#CCCCCC"> to a java application</font><font color="#E5E5E5"> than</font>

621
00:26:08,309 --> 00:26:13,668
instrumented with<font color="#E5E5E5"> these metrics so let's</font>

622
00:26:10,679 --> 00:26:16,290
just stop the original application<font color="#CCCCCC"> and</font>

623
00:26:13,669 --> 00:26:18,030
start it again<font color="#E5E5E5"> with the agent attached</font>

624
00:26:16,290 --> 00:26:20,490
<font color="#E5E5E5">so it's a specific command line</font>

625
00:26:18,030 --> 00:26:23,639
parameter - Java agent on the path to

626
00:26:20,490 --> 00:26:26,179
the<font color="#CCCCCC"> Java file</font><font color="#E5E5E5"> and so on</font><font color="#CCCCCC"> and if this is</font>

627
00:26:23,640 --> 00:26:29,480
up and running it should work as<font color="#E5E5E5"> before</font>

628
00:26:26,179 --> 00:26:33,440
it's<font color="#E5E5E5"> just yeah</font>

629
00:26:29,480 --> 00:26:35,900
hello<font color="#E5E5E5"> Ellis it still says hello Ellis</font>

630
00:26:33,440 --> 00:26:39,470
hello pop and so on so still<font color="#CCCCCC"> working but</font>

631
00:26:35,900 --> 00:26:42,710
<font color="#E5E5E5">if I now</font><font color="#CCCCCC"> go to port 9000 I think 300</font>

632
00:26:39,470 --> 00:26:45,800
used<font color="#E5E5E5"> I get some metrics they look pretty</font>

633
00:26:42,710 --> 00:26:49,010
<font color="#CCCCCC">similar to</font><font color="#E5E5E5"> before okay HTTP method get</font>

634
00:26:45,800 --> 00:26:50,810
this is the path status 200<font color="#CCCCCC"> okay what's</font>

635
00:26:49,010 --> 00:26:55,520
called four<font color="#CCCCCC"> times so I clicked</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Ellis</font>

636
00:26:50,810 --> 00:26:57,590
four times right now<font color="#CCCCCC"> and this oh I also</font>

637
00:26:55,520 --> 00:26:59,690
see that<font color="#CCCCCC"> I load it</font><font color="#E5E5E5"> jQuery</font>

638
00:26:57,590 --> 00:27:01,790
min<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> part of</font><font color="#CCCCCC"> my user interface</font>

639
00:26:59,690 --> 00:27:04,940
<font color="#E5E5E5">because I reloaded the application and</font>

640
00:27:01,790 --> 00:27:06,470
<font color="#E5E5E5">so on</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so this is actually</font>

641
00:27:04,940 --> 00:27:08,330
interesting<font color="#CCCCCC"> because it's a really</font>

642
00:27:06,470 --> 00:27:10,520
powerful approach because<font color="#E5E5E5"> you can</font>

643
00:27:08,330 --> 00:27:13,129
basically instrument<font color="#E5E5E5"> everything like if</font>

644
00:27:10,520 --> 00:27:16,070
you want to instrument database queries

645
00:27:13,130 --> 00:27:17,480
<font color="#E5E5E5">you just one instrument this tender JDBC</font>

646
00:27:16,070 --> 00:27:19,820
interfaces and<font color="#CCCCCC"> you've</font><font color="#E5E5E5"> got information</font>

647
00:27:17,480 --> 00:27:21,980
<font color="#E5E5E5">about that if you want to instrument</font>

648
00:27:19,820 --> 00:27:24,040
thread pools just know what your thread

649
00:27:21,980 --> 00:27:26,570
pool<font color="#CCCCCC"> costs are and then you can</font>

650
00:27:24,040 --> 00:27:30,110
instrument<font color="#E5E5E5"> that and so on however</font><font color="#CCCCCC"> it's</font>

651
00:27:26,570 --> 00:27:31,580
really experimental so if you use it

652
00:27:30,110 --> 00:27:33,860
<font color="#CCCCCC">right now I guess you're one of the</font>

653
00:27:31,580 --> 00:27:35,570
first<font color="#CCCCCC"> users</font><font color="#E5E5E5"> so feel free to create</font>

654
00:27:33,860 --> 00:27:38,360
github issues and provide some<font color="#E5E5E5"> feedback</font>

655
00:27:35,570 --> 00:27:40,550
<font color="#E5E5E5">and tell me if it's</font><font color="#CCCCCC"> useful or</font><font color="#E5E5E5"> not but I</font>

656
00:27:38,360 --> 00:27:42,199
<font color="#E5E5E5">think like the potential is pretty good</font>

657
00:27:40,550 --> 00:27:43,940
<font color="#CCCCCC">because with this thing you can</font>

658
00:27:42,200 --> 00:27:45,920
<font color="#E5E5E5">basically monitor everything</font><font color="#CCCCCC"> that you</font>

659
00:27:43,940 --> 00:27:47,840
want<font color="#E5E5E5"> like even if you don't</font><font color="#CCCCCC"> have Train</font>

660
00:27:45,920 --> 00:27:49,280
mix if you<font color="#E5E5E5"> don't have</font><font color="#CCCCCC"> locked data</font><font color="#E5E5E5"> even</font>

661
00:27:47,840 --> 00:27:51,800
if you want to<font color="#CCCCCC"> monitor your</font><font color="#E5E5E5"> proprietary</font>

662
00:27:49,280 --> 00:27:53,450
<font color="#E5E5E5">business logic</font><font color="#CCCCCC"> all you need</font><font color="#E5E5E5"> to know is</font>

663
00:27:51,800 --> 00:27:55,399
how<font color="#E5E5E5"> the Java classes and methods are</font>

664
00:27:53,450 --> 00:27:57,500
called<font color="#CCCCCC"> right</font><font color="#E5E5E5"> a hook and then you have</font>

665
00:27:55,400 --> 00:27:59,360
metrics for that so let's<font color="#E5E5E5"> see what's</font>

666
00:27:57,500 --> 00:28:03,770
what's going<font color="#CCCCCC"> to come</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> of that okay</font>

667
00:27:59,360 --> 00:28:06,909
so let's wrap up<font color="#CCCCCC"> within the last</font><font color="#E5E5E5"> half an</font>

668
00:28:03,770 --> 00:28:10,670
<font color="#E5E5E5">hour we went through</font><font color="#CCCCCC"> four ways of</font>

669
00:28:06,910 --> 00:28:13,490
monitoring legacy Java applications<font color="#E5E5E5"> we</font>

670
00:28:10,670 --> 00:28:14,990
started off with<font color="#E5E5E5"> parsing log files</font><font color="#CCCCCC"> then</font>

671
00:28:13,490 --> 00:28:17,750
we had a quick<font color="#CCCCCC"> look at the black box</font>

672
00:28:14,990 --> 00:28:19,370
<font color="#CCCCCC">maneet or a black</font><font color="#E5E5E5"> box exporter then we</font>

673
00:28:17,750 --> 00:28:22,850
had a look<font color="#E5E5E5"> at the chain</font><font color="#CCCCCC"> X exporter and</font>

674
00:28:19,370 --> 00:28:25,959
<font color="#CCCCCC">jmx and finally we showed you how to</font>

675
00:28:22,850 --> 00:28:29,240
write<font color="#E5E5E5"> your own do-it-yourself Java agent</font>

676
00:28:25,960 --> 00:28:31,160
<font color="#E5E5E5">as I said in the beginning</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> of those</font>

677
00:28:29,240 --> 00:28:33,080
are<font color="#CCCCCC"> just</font><font color="#E5E5E5"> workarounds because the best</font>

678
00:28:31,160 --> 00:28:35,570
thing you can<font color="#E5E5E5"> actually do is download</font>

679
00:28:33,080 --> 00:28:37,340
the<font color="#E5E5E5"> promises client library for Java</font><font color="#CCCCCC"> and</font>

680
00:28:35,570 --> 00:28:39,299
put your metrics directly in your<font color="#E5E5E5"> source</font>

681
00:28:37,340 --> 00:28:41,699
code<font color="#E5E5E5"> so this is</font>

682
00:28:39,299 --> 00:28:43,860
but you<font color="#CCCCCC"> to do whenever</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> possible</font>

683
00:28:41,700 --> 00:28:46,110
and all of those<font color="#E5E5E5"> are just workarounds</font>

684
00:28:43,860 --> 00:28:48,090
<font color="#CCCCCC">that you only use</font><font color="#E5E5E5"> when you cannot edit</font>

685
00:28:46,110 --> 00:28:50,580
the<font color="#E5E5E5"> source code</font><font color="#CCCCCC"> of your application</font><font color="#E5E5E5"> okay</font>

686
00:28:48,090 --> 00:28:52,439
<font color="#E5E5E5">so thanks for</font><font color="#CCCCCC"> listening</font><font color="#E5E5E5"> I will stay</font>

687
00:28:50,580 --> 00:28:54,869
<font color="#CCCCCC">around here</font><font color="#E5E5E5"> so for questions though we</font>

688
00:28:52,440 --> 00:28:57,499
can take them<font color="#E5E5E5"> after the talk and have a</font>

689
00:28:54,869 --> 00:28:57,499
nice<font color="#CCCCCC"> Foster</font>

690
00:29:00,590 --> 00:29:12,419
[Applause]

691
00:29:05,580 --> 00:29:12,419
[Music]

692
00:30:30,070 --> 00:30:32,129
<font color="#E5E5E5">you</font>

