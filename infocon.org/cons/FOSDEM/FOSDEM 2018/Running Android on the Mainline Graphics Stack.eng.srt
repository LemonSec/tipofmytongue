1
00:00:29,140 --> 00:00:33,050
<font color="#E5E5E5">okay our next</font><font color="#CCCCCC"> speaker is Robert Frost</font>

2
00:00:31,910 --> 00:00:38,480
who is going<font color="#E5E5E5"> to talk about running</font>

3
00:00:33,050 --> 00:00:43,220
<font color="#CCCCCC">Android on the main line stack I so I'm</font>

4
00:00:38,480 --> 00:00:44,029
Robert<font color="#CCCCCC"> Foss</font><font color="#E5E5E5"> and I'm not named after open</font>

5
00:00:43,220 --> 00:00:46,610
<font color="#E5E5E5">source software</font>

6
00:00:44,030 --> 00:00:49,730
my mom's<font color="#E5E5E5"> also named Foss</font><font color="#CCCCCC"> she does not do</font>

7
00:00:46,610 --> 00:00:53,269
software<font color="#E5E5E5"> in any way unfortunately</font><font color="#CCCCCC"> for me</font>

8
00:00:49,730 --> 00:00:55,430
<font color="#CCCCCC">I work</font><font color="#E5E5E5"> for kelabra and we're totally</font>

9
00:00:53,269 --> 00:00:57,829
hiring<font color="#E5E5E5"> in case you're looking for</font>

10
00:00:55,430 --> 00:00:59,379
something<font color="#E5E5E5"> open-source related to do</font><font color="#CCCCCC"> just</font>

11
00:00:57,829 --> 00:01:02,750
come<font color="#E5E5E5"> talk to me or</font><font color="#CCCCCC"> look at the website</font>

12
00:00:59,379 --> 00:01:05,509
<font color="#E5E5E5">and</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you want to get a hold of me</font><font color="#CCCCCC"> I'm</font>

13
00:01:02,750 --> 00:01:10,340
on<font color="#E5E5E5"> Twitter so you know</font><font color="#CCCCCC"> just shoot me</font>

14
00:01:05,510 --> 00:01:12,229
tweet<font color="#E5E5E5"> let's get into it today I'm going</font>

15
00:01:10,340 --> 00:01:15,530
to talk about<font color="#E5E5E5"> running Android on the</font>

16
00:01:12,229 --> 00:01:17,869
<font color="#CCCCCC">mainline</font><font color="#E5E5E5"> graphics stack which sounds</font>

17
00:01:15,530 --> 00:01:20,330
<font color="#CCCCCC">maybe easier</font><font color="#E5E5E5"> than it actually is it's a</font>

18
00:01:17,869 --> 00:01:23,049
little bit complicated<font color="#E5E5E5"> but let's</font><font color="#CCCCCC"> get</font>

19
00:01:20,330 --> 00:01:26,179
<font color="#E5E5E5">into</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so we're going to talk</font><font color="#CCCCCC"> about</font>

20
00:01:23,049 --> 00:01:29,810
Android history with respect<font color="#CCCCCC"> to open</font>

21
00:01:26,180 --> 00:01:31,850
<font color="#E5E5E5">source and also how it's actually done</font>

22
00:01:29,810 --> 00:01:34,640
<font color="#E5E5E5">how you run Android on the mainline</font>

23
00:01:31,850 --> 00:01:37,009
graphics stack and what the current

24
00:01:34,640 --> 00:01:41,540
status is<font color="#E5E5E5"> as well as maybe the</font><font color="#CCCCCC"> bigger</font>

25
00:01:37,010 --> 00:01:42,980
picture<font color="#E5E5E5"> what's happening where Android</font>

26
00:01:41,540 --> 00:01:47,000
<font color="#E5E5E5">is going</font><font color="#CCCCCC"> where open</font><font color="#E5E5E5"> source is going</font><font color="#CCCCCC"> with</font>

27
00:01:42,980 --> 00:01:49,940
respect to Android yeah so if we start

28
00:01:47,000 --> 00:01:52,400
<font color="#CCCCCC">with the history this is sort of what it</font>

29
00:01:49,940 --> 00:01:56,870
<font color="#E5E5E5">looks like this is the number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> lines</font>

30
00:01:52,400 --> 00:01:59,720
of<font color="#CCCCCC"> diff against the Linux mainline</font>

31
00:01:56,870 --> 00:02:02,420
kernel<font color="#E5E5E5"> so this is for a Qualcomm they're</font>

32
00:01:59,720 --> 00:02:04,520
just you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> a vendor there's a bunch</font>

33
00:02:02,420 --> 00:02:07,490
of<font color="#E5E5E5"> them but chances are that you're</font>

34
00:02:04,520 --> 00:02:12,950
using a<font color="#E5E5E5"> Qualcomm SOC now most of us</font>

35
00:02:07,490 --> 00:02:16,250
<font color="#CCCCCC">aren't so</font><font color="#E5E5E5"> most of these vendors have a</font>

36
00:02:12,950 --> 00:02:19,129
<font color="#E5E5E5">diff of 1 million lines at the very</font>

37
00:02:16,250 --> 00:02:23,569
least<font color="#CCCCCC"> and as you can see</font><font color="#E5E5E5"> Qualcomm is</font>

38
00:02:19,129 --> 00:02:27,018
between like 1.5 like 3.5 million<font color="#E5E5E5"> lines</font>

39
00:02:23,569 --> 00:02:28,909
and this may<font color="#E5E5E5"> be a slight like downward</font>

40
00:02:27,019 --> 00:02:30,709
trend<font color="#E5E5E5"> maybe it's too early to tell I</font>

41
00:02:28,909 --> 00:02:36,170
guess<font color="#CCCCCC"> you'll see when</font><font color="#E5E5E5"> we have the</font>

42
00:02:30,709 --> 00:02:38,090
<font color="#E5E5E5">sources for 4.14 of the kernel anyway</font>

43
00:02:36,170 --> 00:02:40,708
it's kind<font color="#CCCCCC"> of interesting</font><font color="#E5E5E5"> to visualize</font>

44
00:02:38,090 --> 00:02:43,469
what's<font color="#CCCCCC"> going on</font>

45
00:02:40,709 --> 00:02:45,659
so this all sort of<font color="#E5E5E5"> started or</font><font color="#CCCCCC"> our this</font>

46
00:02:43,469 --> 00:02:50,909
talk is<font color="#CCCCCC"> starting where Android work</font><font color="#E5E5E5"> the</font>

47
00:02:45,659 --> 00:02:54,480
Linux kernel<font color="#CCCCCC"> and that was 310 days and</font>

48
00:02:50,909 --> 00:02:57,629
they did it<font color="#E5E5E5"> for</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> for good and bad</font>

49
00:02:54,480 --> 00:03:00,899
<font color="#E5E5E5">reasons I guess but they really needed a</font>

50
00:02:57,629 --> 00:03:03,929
<font color="#E5E5E5">better graphic stack so the current one</font>

51
00:03:00,900 --> 00:03:05,609
that<font color="#CCCCCC"> was in the</font><font color="#E5E5E5"> kernel the</font><font color="#CCCCCC"> ABI was just</font>

52
00:03:03,930 --> 00:03:09,599
not good enough<font color="#CCCCCC"> it didn't suit their use</font>

53
00:03:05,609 --> 00:03:11,519
cases<font color="#CCCCCC"> so there wasn't</font><font color="#E5E5E5"> enough support for</font>

54
00:03:09,599 --> 00:03:14,250
the<font color="#E5E5E5"> low power use case which obviously</font>

55
00:03:11,519 --> 00:03:15,629
is important on a<font color="#E5E5E5"> cell</font><font color="#CCCCCC"> phone you don't</font>

56
00:03:14,250 --> 00:03:21,739
want to burn through<font color="#E5E5E5"> your battery in an</font>

57
00:03:15,629 --> 00:03:25,108
hour<font color="#E5E5E5"> and also they didn't</font><font color="#CCCCCC"> support</font>

58
00:03:21,739 --> 00:03:30,329
<font color="#E5E5E5">atomic operations and atomic operations</font>

59
00:03:25,109 --> 00:03:31,709
are when you change some settings<font color="#CCCCCC"> for</font>

60
00:03:30,329 --> 00:03:34,230
example<font color="#CCCCCC"> let's say you change the</font>

61
00:03:31,709 --> 00:03:36,150
resolution<font color="#E5E5E5"> of your monitor</font><font color="#CCCCCC"> and maybe the</font>

62
00:03:34,230 --> 00:03:40,078
bit depth at the same time you want<font color="#CCCCCC"> to</font>

63
00:03:36,150 --> 00:03:41,700
<font color="#E5E5E5">change both and with atomic operations</font>

64
00:03:40,079 --> 00:03:44,400
you can sort of do both at<font color="#CCCCCC"> once</font>

65
00:03:41,700 --> 00:03:46,409
and either both will fail<font color="#CCCCCC"> or both will</font>

66
00:03:44,400 --> 00:03:48,930
succeed but<font color="#E5E5E5"> it prevents you from ending</font>

67
00:03:46,409 --> 00:03:50,400
<font color="#E5E5E5">up in a really weird like unknown state</font>

68
00:03:48,930 --> 00:03:54,900
where some things<font color="#CCCCCC"> have</font><font color="#E5E5E5"> been applied</font>

69
00:03:50,400 --> 00:03:57,180
maybe some haven't<font color="#E5E5E5"> so atomic operations</font>

70
00:03:54,900 --> 00:04:00,599
was definitely definitely needed for<font color="#E5E5E5"> for</font>

71
00:03:57,180 --> 00:04:03,689
their use case<font color="#CCCCCC"> as far as</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> low-power</font>

72
00:04:00,599 --> 00:04:06,298
use case goes there wasn't much support

73
00:04:03,689 --> 00:04:10,280
for like exotic<font color="#CCCCCC"> hardware like dealing</font>

74
00:04:06,299 --> 00:04:14,099
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> low powered display use case so</font>

75
00:04:10,280 --> 00:04:18,060
display managing<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> of different</font>

76
00:04:14,099 --> 00:04:20,849
kinds<font color="#E5E5E5"> had pretty poor support so they</font>

77
00:04:18,060 --> 00:04:23,970
really needed something<font color="#E5E5E5"> better so they</font>

78
00:04:20,849 --> 00:04:27,289
introduced the Android atomic display

79
00:04:23,970 --> 00:04:29,970
framework or ADF<font color="#CCCCCC"> as you'll</font><font color="#E5E5E5"> see it called</font>

80
00:04:27,289 --> 00:04:35,130
<font color="#CCCCCC">no one really explains what it is it's</font>

81
00:04:29,970 --> 00:04:38,610
just<font color="#CCCCCC"> a DF</font><font color="#E5E5E5"> and the the idea was written</font>

82
00:04:35,130 --> 00:04:42,690
by an Android kernel<font color="#E5E5E5"> engineer Greg</font>

83
00:04:38,610 --> 00:04:46,409
Hackman and<font color="#E5E5E5"> it was sort of written from</font>

84
00:04:42,690 --> 00:04:49,529
<font color="#CCCCCC">scratch so it wasn't built on</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> of the</font>

85
00:04:46,409 --> 00:04:51,599
current<font color="#E5E5E5"> or</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> current graphics API is</font>

86
00:04:49,529 --> 00:04:54,360
provided by the kernel<font color="#E5E5E5"> so he just did</font>

87
00:04:51,599 --> 00:04:57,300
his<font color="#E5E5E5"> own thing</font><font color="#CCCCCC"> which made</font><font color="#E5E5E5"> it possible</font>

88
00:04:54,360 --> 00:04:59,780
to get this<font color="#CCCCCC"> working quickly but it also</font>

89
00:04:57,300 --> 00:05:04,289
ended up being a little<font color="#CCCCCC"> bit problematic</font>

90
00:04:59,780 --> 00:05:07,530
<font color="#E5E5E5">so</font><font color="#CCCCCC"> EDF ended up being not and terribly</font>

91
00:05:04,289 --> 00:05:10,889
extensible<font color="#E5E5E5"> or generic so it suited their</font>

92
00:05:07,530 --> 00:05:11,909
use case<font color="#CCCCCC"> of mobile hardware</font><font color="#E5E5E5"> well and did</font>

93
00:05:10,889 --> 00:05:14,009
everything they needed

94
00:05:11,909 --> 00:05:17,938
but for the generic maybe desktop use

95
00:05:14,009 --> 00:05:19,949
case it<font color="#E5E5E5"> wasn't enough it also didn't</font>

96
00:05:17,939 --> 00:05:22,349
<font color="#E5E5E5">really support like all kinds of</font>

97
00:05:19,949 --> 00:05:25,400
<font color="#E5E5E5">different</font><font color="#CCCCCC"> hardware so there was it was</font>

98
00:05:22,349 --> 00:05:29,159
kind<font color="#CCCCCC"> of limited</font><font color="#E5E5E5"> in how it</font><font color="#CCCCCC"> was designed</font>

99
00:05:25,400 --> 00:05:32,810
<font color="#CCCCCC">for</font><font color="#E5E5E5"> example it didn't support</font><font color="#CCCCCC"> atomic</font>

100
00:05:29,159 --> 00:05:36,210
operations for for all parts of the

101
00:05:32,810 --> 00:05:38,009
subsystem so in the kernel there's a

102
00:05:36,210 --> 00:05:41,609
bunch of different like logical

103
00:05:38,009 --> 00:05:44,009
components<font color="#E5E5E5"> like there's the connectors</font>

104
00:05:41,610 --> 00:05:47,099
which are<font color="#E5E5E5"> you know connectors like the</font>

105
00:05:44,009 --> 00:05:50,240
DRM port or the the VGA ports or the

106
00:05:47,099 --> 00:05:52,919
HDMI port<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's a forced ports</font>

107
00:05:50,240 --> 00:05:55,289
<font color="#CCCCCC">there's also planes planes are like</font>

108
00:05:52,919 --> 00:05:58,020
buffers with some properties attached to

109
00:05:55,289 --> 00:06:02,068
them<font color="#CCCCCC"> so it's basically</font><font color="#E5E5E5"> what you see like</font>

110
00:05:58,020 --> 00:06:05,008
<font color="#CCCCCC">Harris a plane of pixels and</font><font color="#E5E5E5"> there are</font>

111
00:06:02,069 --> 00:06:07,379
like CRTC's which are CRT controllers

112
00:06:05,009 --> 00:06:10,800
<font color="#E5E5E5">there it's maybe perhaps a bit a bit of</font>

113
00:06:07,379 --> 00:06:13,710
a misnomer nowadays<font color="#E5E5E5"> CRT monitors aren't</font>

114
00:06:10,800 --> 00:06:15,719
really around but CRT or<font color="#E5E5E5"> monitor</font>

115
00:06:13,710 --> 00:06:18,870
controller still are and in the<font color="#E5E5E5"> kernel</font>

116
00:06:15,719 --> 00:06:20,159
they're referred to<font color="#CCCCCC"> as the CRTC's so</font>

117
00:06:18,870 --> 00:06:21,990
anyway<font color="#CCCCCC"> all</font><font color="#E5E5E5"> of these components</font><font color="#CCCCCC"> have</font>

118
00:06:20,159 --> 00:06:24,270
properties and they need to be changed

119
00:06:21,990 --> 00:06:26,279
<font color="#CCCCCC">in an</font><font color="#E5E5E5"> atomic way in order to</font><font color="#CCCCCC"> reduce or</font>

120
00:06:24,270 --> 00:06:28,948
to<font color="#CCCCCC"> avoid flickering you know avoid</font>

121
00:06:26,279 --> 00:06:31,500
getting into<font color="#E5E5E5"> an inconsistent state so</font>

122
00:06:28,949 --> 00:06:34,169
that's<font color="#E5E5E5"> why you want atomic operations</font>

123
00:06:31,500 --> 00:06:36,060
<font color="#E5E5E5">but just having the planes is not really</font>

124
00:06:34,169 --> 00:06:37,710
good<font color="#CCCCCC"> enough like sure it solve some</font>

125
00:06:36,060 --> 00:06:44,159
problems but it doesn't solve<font color="#E5E5E5"> all of the</font>

126
00:06:37,710 --> 00:06:46,710
problems also oops<font color="#CCCCCC"> also it wasn't</font><font color="#E5E5E5"> built</font>

127
00:06:44,159 --> 00:06:48,629
on<font color="#E5E5E5"> top</font><font color="#CCCCCC"> of the current KMS api which was</font>

128
00:06:46,710 --> 00:06:50,219
<font color="#E5E5E5">problematic because that meant</font><font color="#CCCCCC"> that</font>

129
00:06:48,629 --> 00:06:53,449
every driver that existed for<font color="#E5E5E5"> linux</font>

130
00:06:50,219 --> 00:06:56,849
didn't<font color="#E5E5E5"> support this like none</font><font color="#CCCCCC"> of it did</font>

131
00:06:53,449 --> 00:07:00,419
so what happened was<font color="#CCCCCC"> that all of the</font>

132
00:06:56,849 --> 00:07:02,339
proprietary vendors went away and<font color="#CCCCCC"> got</font>

133
00:07:00,419 --> 00:07:06,990
busy coding and they all implemented<font color="#E5E5E5"> ADF</font>

134
00:07:02,339 --> 00:07:07,980
so for example yeah<font color="#E5E5E5"> let's just go with</font>

135
00:07:06,990 --> 00:07:09,750
<font color="#CCCCCC">our min ma</font>

136
00:07:07,980 --> 00:07:11,670
like they have an<font color="#E5E5E5"> ATF driver everyone</font>

137
00:07:09,750 --> 00:07:16,380
has an ATF driver if you're shipping a

138
00:07:11,670 --> 00:07:18,750
<font color="#CCCCCC">cellphone</font><font color="#E5E5E5"> and that's entirely separate</font>

139
00:07:16,380 --> 00:07:20,969
from from what's being implemented for

140
00:07:18,750 --> 00:07:25,230
the<font color="#CCCCCC"> open</font><font color="#E5E5E5"> source main lines kernel which</font>

141
00:07:20,970 --> 00:07:26,850
<font color="#CCCCCC">is</font><font color="#E5E5E5"> unfortunate so this wasn't really</font><font color="#CCCCCC"> up</font>

142
00:07:25,230 --> 00:07:29,190
streamable<font color="#E5E5E5"> while it was an improvement</font>

143
00:07:26,850 --> 00:07:32,760
in some ways it<font color="#CCCCCC"> was not</font><font color="#E5E5E5"> really good</font>

144
00:07:29,190 --> 00:07:36,080
<font color="#CCCCCC">enough for being accepted</font><font color="#E5E5E5"> upstream so</font>

145
00:07:32,760 --> 00:07:39,150
instead<font color="#E5E5E5"> a bunch of people daniel better</font>

146
00:07:36,080 --> 00:07:44,419
<font color="#E5E5E5">specifically worked a lot on on</font>

147
00:07:39,150 --> 00:07:49,140
implementing the<font color="#CCCCCC"> KMS</font><font color="#E5E5E5"> atomic</font><font color="#CCCCCC"> avi</font><font color="#E5E5E5"> which is</font>

148
00:07:44,420 --> 00:07:53,100
pretty<font color="#E5E5E5"> much the same</font><font color="#CCCCCC"> ID</font><font color="#E5E5E5"> but a bit</font><font color="#CCCCCC"> more</font>

149
00:07:49,140 --> 00:07:55,710
generic<font color="#CCCCCC"> so it's the atomic ABI built on</font>

150
00:07:53,100 --> 00:07:57,720
top of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> previous kms drivers so</font>

151
00:07:55,710 --> 00:07:59,849
there's a pretty smooth like upgrade

152
00:07:57,720 --> 00:08:02,460
path<font color="#CCCCCC"> you have your</font><font color="#E5E5E5"> kms drivers that</font>

153
00:07:59,850 --> 00:08:04,860
you've always<font color="#E5E5E5"> had for like the Intel</font>

154
00:08:02,460 --> 00:08:07,049
drivers or whatever and then<font color="#CCCCCC"> you start</font>

155
00:08:04,860 --> 00:08:09,330
adding support for<font color="#E5E5E5"> the atomic features</font>

156
00:08:07,050 --> 00:08:12,000
and you don't have<font color="#E5E5E5"> to throw</font><font color="#CCCCCC"> all of your</font>

157
00:08:09,330 --> 00:08:14,400
driver away which is pretty nice because

158
00:08:12,000 --> 00:08:16,980
<font color="#E5E5E5">it turns out writing a driver takes a</font>

159
00:08:14,400 --> 00:08:19,260
lot of effort and<font color="#E5E5E5"> time</font><font color="#CCCCCC"> and money so</font>

160
00:08:16,980 --> 00:08:21,950
people<font color="#E5E5E5"> aren't too keen on</font><font color="#CCCCCC"> doing it</font><font color="#E5E5E5"> and</font>

161
00:08:19,260 --> 00:08:25,680
<font color="#CCCCCC">it supports all of</font><font color="#E5E5E5"> the IDF use cases and</font>

162
00:08:21,950 --> 00:08:28,849
it does it in a more like generic way

163
00:08:25,680 --> 00:08:32,400
and it's being generic<font color="#E5E5E5"> through adding</font>

164
00:08:28,850 --> 00:08:36,630
properties<font color="#E5E5E5"> to these different modules</font>

165
00:08:32,400 --> 00:08:38,880
like the planes and<font color="#E5E5E5"> the CRTC's and the</font>

166
00:08:36,630 --> 00:08:40,679
connectors<font color="#E5E5E5"> so there there are these</font>

167
00:08:38,880 --> 00:08:43,020
<font color="#E5E5E5">properties they're basically key value</font>

168
00:08:40,679 --> 00:08:46,319
mappings<font color="#E5E5E5"> like you'll have</font><font color="#CCCCCC"> a string let's</font>

169
00:08:43,020 --> 00:08:48,360
go with like name and<font color="#CCCCCC"> then you</font><font color="#E5E5E5"> attach a</font>

170
00:08:46,320 --> 00:08:50,610
value to it<font color="#CCCCCC"> and that's</font><font color="#E5E5E5"> basically it it's</font>

171
00:08:48,360 --> 00:08:53,670
very<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you can inject whatever</font>

172
00:08:50,610 --> 00:08:55,590
<font color="#E5E5E5">property you want and</font><font color="#CCCCCC"> userspace</font><font color="#E5E5E5"> can read</font>

173
00:08:53,670 --> 00:08:58,849
out these properties and understand

174
00:08:55,590 --> 00:09:02,910
what's going<font color="#E5E5E5"> on with</font><font color="#CCCCCC"> the hardware</font><font color="#E5E5E5"> and</font>

175
00:08:58,850 --> 00:09:06,240
now<font color="#E5E5E5"> like No as in currently it is</font>

176
00:09:02,910 --> 00:09:08,670
<font color="#E5E5E5">displacing ADF from the vendor drivers</font>

177
00:09:06,240 --> 00:09:10,410
it's still<font color="#E5E5E5"> very much like a</font>

178
00:09:08,670 --> 00:09:12,329
<font color="#CCCCCC">work-in-progress and</font><font color="#E5E5E5"> their drivers are</font>

179
00:09:10,410 --> 00:09:16,079
still very<font color="#CCCCCC"> much not open source</font><font color="#E5E5E5"> for the</font>

180
00:09:12,330 --> 00:09:18,000
most part I'm still<font color="#CCCCCC"> talking about the</font>

181
00:09:16,080 --> 00:09:20,280
mobile vendors here which they're

182
00:09:18,000 --> 00:09:21,800
notoriously not so great at<font color="#E5E5E5"> this I would</font>

183
00:09:20,280 --> 00:09:24,180
say

184
00:09:21,800 --> 00:09:28,109
<font color="#CCCCCC">but internally they're switching from</font>

185
00:09:24,180 --> 00:09:29,880
using<font color="#CCCCCC"> a tf2 to</font><font color="#E5E5E5"> using atomic kms which is</font>

186
00:09:28,110 --> 00:09:32,880
<font color="#E5E5E5">very nice because it's the step towards</font>

187
00:09:29,880 --> 00:09:34,710
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> it's not perhaps very</font>

188
00:09:32,880 --> 00:09:39,300
tangible yet<font color="#E5E5E5"> but it's a step in the</font>

189
00:09:34,710 --> 00:09:41,250
<font color="#CCCCCC">right direction</font><font color="#E5E5E5"> so let's have a look at</font>

190
00:09:39,300 --> 00:09:47,040
what the Android<font color="#CCCCCC"> graphic stack</font><font color="#E5E5E5"> actually</font>

191
00:09:41,250 --> 00:09:49,680
<font color="#CCCCCC">looks like</font><font color="#E5E5E5"> it's a bunch of</font><font color="#CCCCCC"> stuff on top</font>

192
00:09:47,040 --> 00:09:52,199
<font color="#E5E5E5">of which we have the apps and this is</font>

193
00:09:49,680 --> 00:09:54,260
the stuff you<font color="#E5E5E5"> actually care about like</font>

194
00:09:52,200 --> 00:09:58,050
like<font color="#E5E5E5"> really this is what it's all about</font>

195
00:09:54,260 --> 00:09:59,819
and below these apps and there's like a

196
00:09:58,050 --> 00:10:01,680
bunch<font color="#E5E5E5"> of apps it's not just apps that</font>

197
00:09:59,820 --> 00:10:03,440
you think of as apps but they're done a

198
00:10:01,680 --> 00:10:06,630
bunch<font color="#E5E5E5"> of different applications</font><font color="#CCCCCC"> doing</font>

199
00:10:03,440 --> 00:10:08,780
but yeah stuff like running the<font color="#CCCCCC"> status</font>

200
00:10:06,630 --> 00:10:11,250
bar for example<font color="#E5E5E5"> updating your clock</font>

201
00:10:08,780 --> 00:10:14,010
<font color="#CCCCCC">below that</font><font color="#E5E5E5"> we have surface flinger</font><font color="#CCCCCC"> and</font>

202
00:10:11,250 --> 00:10:20,060
surface flinger<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of takes all of</font>

203
00:10:14,010 --> 00:10:25,650
<font color="#E5E5E5">these surfaces</font><font color="#CCCCCC"> that apps draw so let's</font>

204
00:10:20,060 --> 00:10:27,479
let's speak about the<font color="#E5E5E5"> parlance here so</font>

205
00:10:25,650 --> 00:10:30,060
there<font color="#E5E5E5"> are surface surfaces there are</font>

206
00:10:27,480 --> 00:10:30,930
planes<font color="#E5E5E5"> and there are layers and these</font>

207
00:10:30,060 --> 00:10:33,750
are all the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> thing</font>

208
00:10:30,930 --> 00:10:35,849
so for various first for some reason

209
00:10:33,750 --> 00:10:38,370
every vendor has chosen<font color="#E5E5E5"> their own word</font>

210
00:10:35,850 --> 00:10:41,340
and now we have a bit<font color="#CCCCCC"> of a confusing</font>

211
00:10:38,370 --> 00:10:44,310
word salad<font color="#E5E5E5"> going</font><font color="#CCCCCC"> on but surfaces are</font>

212
00:10:41,340 --> 00:10:46,860
planes are layers<font color="#E5E5E5"> so</font><font color="#CCCCCC"> surface flinger</font>

213
00:10:44,310 --> 00:10:49,369
basically deals with<font color="#E5E5E5"> all of the planes</font>

214
00:10:46,860 --> 00:10:51,780
and layers<font color="#CCCCCC"> and surfaces that</font>

215
00:10:49,370 --> 00:10:53,160
<font color="#E5E5E5">applications draw to and then combine</font>

216
00:10:51,780 --> 00:10:57,780
them<font color="#E5E5E5"> into something do something useful</font>

217
00:10:53,160 --> 00:11:00,719
<font color="#E5E5E5">with it and then sense it</font><font color="#CCCCCC"> onwards</font><font color="#E5E5E5"> so for</font>

218
00:10:57,780 --> 00:11:03,689
example if we look<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> Android</font>

219
00:11:00,720 --> 00:11:05,970
desktop<font color="#E5E5E5"> it's just an ordinary Android</font>

220
00:11:03,690 --> 00:11:10,200
<font color="#CCCCCC">desktop in portrait mode</font><font color="#E5E5E5"> no landscape</font>

221
00:11:05,970 --> 00:11:13,800
mode<font color="#CCCCCC"> and on top here got the status</font><font color="#E5E5E5"> bar</font>

222
00:11:10,200 --> 00:11:14,490
and as you can<font color="#CCCCCC"> see it's like mostly</font>

223
00:11:13,800 --> 00:11:17,310
transparent

224
00:11:14,490 --> 00:11:19,410
<font color="#CCCCCC">it's pretty skinny it doesn't require</font>

225
00:11:17,310 --> 00:11:23,910
like a full buffer<font color="#E5E5E5"> like a full</font>

226
00:11:19,410 --> 00:11:28,290
resolution<font color="#E5E5E5"> like 1920 by 1080</font><font color="#CCCCCC"> or whatever</font>

227
00:11:23,910 --> 00:11:30,120
resolution<font color="#E5E5E5"> buffer</font><font color="#CCCCCC"> - to</font><font color="#E5E5E5"> represent it</font><font color="#CCCCCC"> and</font>

228
00:11:28,290 --> 00:11:32,189
then there's the the<font color="#E5E5E5"> navigation bar</font>

229
00:11:30,120 --> 00:11:33,840
which also is<font color="#E5E5E5"> pretty small like it</font>

230
00:11:32,190 --> 00:11:34,910
doesn't require a full buffer to

231
00:11:33,840 --> 00:11:40,699
represent

232
00:11:34,910 --> 00:11:42,589
and<font color="#CCCCCC"> they sort</font><font color="#E5E5E5"> of overlap</font><font color="#CCCCCC"> here and as as</font>

233
00:11:40,699 --> 00:11:44,689
you can see there's no problem<font color="#E5E5E5"> there and</font>

234
00:11:42,589 --> 00:11:47,269
then there's a background<font color="#E5E5E5"> which is</font>

235
00:11:44,689 --> 00:11:49,819
rendered obviously<font color="#E5E5E5"> furthest for the most</font>

236
00:11:47,269 --> 00:11:52,160
furthest<font color="#CCCCCC"> most in the back</font><font color="#E5E5E5"> and it does</font>

237
00:11:49,819 --> 00:11:54,849
<font color="#E5E5E5">require a full buffer and in order</font><font color="#CCCCCC"> to</font>

238
00:11:52,160 --> 00:11:59,120
<font color="#E5E5E5">handle this and like render it properly</font>

239
00:11:54,850 --> 00:12:00,740
<font color="#CCCCCC">you</font><font color="#E5E5E5"> have to pay attention to</font><font color="#CCCCCC"> well where</font>

240
00:11:59,120 --> 00:12:02,420
your<font color="#CCCCCC"> services are supposed to</font><font color="#E5E5E5"> go and</font>

241
00:12:00,740 --> 00:12:04,309
<font color="#CCCCCC">they have to be organized somehow</font><font color="#E5E5E5"> and</font>

242
00:12:02,420 --> 00:12:06,979
that's<font color="#E5E5E5"> basically what surface flinger</font>

243
00:12:04,309 --> 00:12:08,930
does so it takes all this<font color="#E5E5E5"> this mess of</font>

244
00:12:06,980 --> 00:12:13,990
surfaces<font color="#CCCCCC"> that applications create and</font>

245
00:12:08,930 --> 00:12:16,729
then gives it<font color="#E5E5E5"> to the hardware and and</font>

246
00:12:13,990 --> 00:12:20,420
that's basically what it<font color="#CCCCCC"> does so it</font>

247
00:12:16,730 --> 00:12:24,860
takes<font color="#E5E5E5"> the surfaces communicates them</font>

248
00:12:20,420 --> 00:12:29,509
over a protocol<font color="#CCCCCC"> called HWC the hardware</font>

249
00:12:24,860 --> 00:12:35,620
<font color="#CCCCCC">Composer</font><font color="#E5E5E5"> API and talks to the hardware</font>

250
00:12:29,509 --> 00:12:38,990
<font color="#E5E5E5">composer so what's the hardware composer</font>

251
00:12:35,620 --> 00:12:42,949
<font color="#CCCCCC">it just receives layers from from</font>

252
00:12:38,990 --> 00:12:46,100
surface flinger<font color="#CCCCCC"> through their HWC</font><font color="#E5E5E5"> api</font>

253
00:12:42,949 --> 00:12:49,279
and<font color="#E5E5E5"> then it optimizes them we'll get</font>

254
00:12:46,100 --> 00:12:51,199
into<font color="#E5E5E5"> that and then it outputs it to the</font>

255
00:12:49,279 --> 00:12:53,540
<font color="#E5E5E5">display hardware and that's basically</font>

256
00:12:51,199 --> 00:12:54,889
<font color="#E5E5E5">it's it sounds</font><font color="#CCCCCC"> very straightforward</font><font color="#E5E5E5"> you</font>

257
00:12:53,540 --> 00:12:57,279
take the layers and<font color="#E5E5E5"> then give them</font><font color="#CCCCCC"> to</font>

258
00:12:54,889 --> 00:13:01,610
the hardware but<font color="#CCCCCC"> it gets kind of messy</font>

259
00:12:57,279 --> 00:13:05,050
<font color="#CCCCCC">in that hardware is not like ideal</font><font color="#E5E5E5"> it's</font>

260
00:13:01,610 --> 00:13:08,019
it's not ideal hardware so if you have a

261
00:13:05,050 --> 00:13:10,128
piece<font color="#CCCCCC"> of silicon that</font><font color="#E5E5E5"> supports</font>

262
00:13:08,019 --> 00:13:12,110
outputting stuff to<font color="#E5E5E5"> your display it</font>

263
00:13:10,129 --> 00:13:13,639
probably doesn't support infinite

264
00:13:12,110 --> 00:13:15,920
amounts of layers because that<font color="#CCCCCC"> will</font>

265
00:13:13,639 --> 00:13:18,740
<font color="#E5E5E5">require actually having infinite amounts</font>

266
00:13:15,920 --> 00:13:21,378
of memory<font color="#E5E5E5"> which hardware vendors are</font>

267
00:13:18,740 --> 00:13:23,389
very much not into so there's sort<font color="#E5E5E5"> of a</font>

268
00:13:21,379 --> 00:13:27,139
sweet<font color="#E5E5E5"> spot around</font><font color="#CCCCCC"> for layers</font>

269
00:13:23,389 --> 00:13:29,540
that's what Android<font color="#CCCCCC"> Ripper Google and</font>

270
00:13:27,139 --> 00:13:31,670
Android<font color="#CCCCCC"> tells the hardware vendors to</font>

271
00:13:29,540 --> 00:13:34,519
implement<font color="#E5E5E5"> it's not too much</font><font color="#CCCCCC"> memory but</font>

272
00:13:31,670 --> 00:13:36,439
it'll cover<font color="#E5E5E5"> most use cases and in return</font>

273
00:13:34,519 --> 00:13:40,499
<font color="#E5E5E5">Android will try to not</font><font color="#CCCCCC"> have more</font>

274
00:13:36,439 --> 00:13:43,319
surfaces<font color="#E5E5E5"> than</font><font color="#CCCCCC"> four because it gets messy</font>

275
00:13:40,499 --> 00:13:46,349
so what happens when you have more<font color="#CCCCCC"> than</font>

276
00:13:43,319 --> 00:13:48,269
four surfaces<font color="#CCCCCC"> if we look at the or think</font>

277
00:13:46,349 --> 00:13:50,459
<font color="#E5E5E5">about the</font><font color="#CCCCCC"> background image or</font><font color="#E5E5E5"> the</font>

278
00:13:48,269 --> 00:13:54,059
Android desktop<font color="#E5E5E5"> image we were looking at</font>

279
00:13:50,459 --> 00:13:55,949
we listed three surfaces but the icons

280
00:13:54,059 --> 00:13:57,929
weren't listed<font color="#E5E5E5"> so that's another one and</font>

281
00:13:55,949 --> 00:14:00,029
what if you<font color="#E5E5E5"> get like an error</font><font color="#CCCCCC"> message or</font>

282
00:13:57,929 --> 00:14:01,709
something something<font color="#E5E5E5"> pops up that's five</font>

283
00:14:00,029 --> 00:14:04,439
<font color="#E5E5E5">that's more than the hardware can</font>

284
00:14:01,709 --> 00:14:07,319
support<font color="#E5E5E5"> and this is where we get into</font>

285
00:14:04,439 --> 00:14:09,209
optimizing layers for display so now you

286
00:14:07,319 --> 00:14:11,218
have<font color="#E5E5E5"> more layers</font><font color="#CCCCCC"> than you actually</font><font color="#E5E5E5"> can</font>

287
00:14:09,209 --> 00:14:13,439
output<font color="#E5E5E5"> and you'll have to do something</font>

288
00:14:11,219 --> 00:14:15,959
about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so you'll have to smash</font><font color="#E5E5E5"> some of</font>

289
00:14:13,439 --> 00:14:17,968
the layers together so that you'll

290
00:14:15,959 --> 00:14:22,439
<font color="#E5E5E5">actually reach the</font><font color="#CCCCCC"> magic</font><font color="#E5E5E5"> number</font><font color="#CCCCCC"> of four</font>

291
00:14:17,969 --> 00:14:25,409
or less<font color="#E5E5E5"> and the way you do that is sort</font>

292
00:14:22,439 --> 00:14:27,598
of important<font color="#E5E5E5"> you can choose which layers</font>

293
00:14:25,409 --> 00:14:31,439
to combine intelligently so maybe you'll

294
00:14:27,599 --> 00:14:33,269
choose to combine<font color="#E5E5E5"> the very</font><font color="#CCCCCC"> smallest</font>

295
00:14:31,439 --> 00:14:35,129
layers you can<font color="#E5E5E5"> find and</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> combine</font>

296
00:14:33,269 --> 00:14:39,109
them<font color="#E5E5E5"> and do as little work as possible</font>

297
00:14:35,129 --> 00:14:42,239
<font color="#E5E5E5">outside</font><font color="#CCCCCC"> of the display hardware</font><font color="#E5E5E5"> and just</font>

298
00:14:39,109 --> 00:14:45,929
<font color="#CCCCCC">I'll put the remaining</font><font color="#E5E5E5"> combined layers</font>

299
00:14:42,239 --> 00:14:47,909
to the<font color="#CCCCCC"> hardware so this sounds</font><font color="#E5E5E5"> really</font>

300
00:14:45,929 --> 00:14:50,159
messy and<font color="#CCCCCC"> it sort of is it's definitely</font>

301
00:14:47,909 --> 00:14:57,839
complexity and there's a good<font color="#CCCCCC"> reason for</font>

302
00:14:50,159 --> 00:15:01,049
<font color="#CCCCCC">it so</font><font color="#E5E5E5"> oh there is a good reason</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> it</font>

303
00:14:57,839 --> 00:15:02,579
and the reason<font color="#CCCCCC"> is power savings</font><font color="#E5E5E5"> so the</font>

304
00:15:01,049 --> 00:15:05,159
display hardware<font color="#E5E5E5"> is far far</font><font color="#CCCCCC"> more</font>

305
00:15:02,579 --> 00:15:08,488
efficient at doing<font color="#E5E5E5"> this</font><font color="#CCCCCC"> Hardware</font>

306
00:15:05,159 --> 00:15:10,339
composing work<font color="#E5E5E5"> then your CPU is and also</font>

307
00:15:08,489 --> 00:15:13,409
<font color="#E5E5E5">then your then your GPU s and</font>

308
00:15:10,339 --> 00:15:16,139
furthermore it's<font color="#E5E5E5"> not just about power</font>

309
00:15:13,409 --> 00:15:17,849
efficiency but removing work from the

310
00:15:16,139 --> 00:15:20,129
<font color="#E5E5E5">GPU and moving it</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> hardware matte</font>

311
00:15:17,849 --> 00:15:22,169
display<font color="#CCCCCC"> hardware that means that your</font>

312
00:15:20,129 --> 00:15:24,899
GPU can do more work so you'll be

313
00:15:22,169 --> 00:15:26,459
<font color="#E5E5E5">actually faster which is nice we all</font>

314
00:15:24,899 --> 00:15:31,439
want<font color="#E5E5E5"> that power efficiency and speed</font>

315
00:15:26,459 --> 00:15:33,628
<font color="#E5E5E5">like have your cake and eat</font><font color="#CCCCCC"> it too so if</font>

316
00:15:31,439 --> 00:15:36,539
we look into<font color="#E5E5E5"> this little box that</font>

317
00:15:33,629 --> 00:15:38,249
implements all this junk<font color="#CCCCCC"> it's the it's</font>

318
00:15:36,539 --> 00:15:39,899
the driver<font color="#CCCCCC"> it's the use of space</font><font color="#E5E5E5"> part of</font>

319
00:15:38,249 --> 00:15:42,149
<font color="#E5E5E5">the driver and it implements the</font>

320
00:15:39,899 --> 00:15:44,879
<font color="#E5E5E5">hardware composer and it also implements</font>

321
00:15:42,149 --> 00:15:47,909
<font color="#E5E5E5">all the good stuff</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> used to like</font>

322
00:15:44,879 --> 00:15:51,470
OpenGL<font color="#E5E5E5"> or Vulcan and implements memory</font>

323
00:15:47,909 --> 00:15:55,160
allocators<font color="#E5E5E5"> all kinds of of low parts</font>

324
00:15:51,470 --> 00:15:59,240
and below it<font color="#CCCCCC"> of course we have the</font>

325
00:15:55,160 --> 00:16:01,550
<font color="#E5E5E5">colonel has to be somewhere</font><font color="#CCCCCC"> so part of</font>

326
00:15:59,240 --> 00:16:03,170
the driver<font color="#CCCCCC"> also most likely lives in the</font>

327
00:16:01,550 --> 00:16:05,329
<font color="#E5E5E5">colonel or definitely lives in the</font>

328
00:16:03,170 --> 00:16:15,110
colonel<font color="#E5E5E5"> but we'll get we'll get into</font>

329
00:16:05,330 --> 00:16:17,150
<font color="#E5E5E5">that so so now that we have like now</font>

330
00:16:15,110 --> 00:16:20,990
<font color="#E5E5E5">that we got like an atomic came as the</font>

331
00:16:17,150 --> 00:16:22,660
<font color="#CCCCCC">atomic came as a VI for talking to to</font>

332
00:16:20,990 --> 00:16:25,370
the graphics subsystem of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> colonel</font>

333
00:16:22,660 --> 00:16:29,510
<font color="#CCCCCC">we're full of the happy fuzzy feelings</font>

334
00:16:25,370 --> 00:16:32,420
and what Google actually<font color="#E5E5E5"> did was to ship</font>

335
00:16:29,510 --> 00:16:35,840
a device using<font color="#E5E5E5"> kms so they took their</font>

336
00:16:32,420 --> 00:16:39,189
<font color="#E5E5E5">own framework Android atomic display</font>

337
00:16:35,840 --> 00:16:42,470
framework and just threw it out<font color="#E5E5E5"> and</font>

338
00:16:39,190 --> 00:16:45,650
built the Google pixel<font color="#E5E5E5"> scene which</font><font color="#CCCCCC"> is an</font>

339
00:16:42,470 --> 00:16:50,960
interesting<font color="#E5E5E5"> device because it uses the</font>

340
00:16:45,650 --> 00:16:53,000
kms<font color="#E5E5E5"> API</font><font color="#CCCCCC"> but it also runs a closed source</font>

341
00:16:50,960 --> 00:16:57,740
<font color="#E5E5E5">Nvidia driver because there's no</font>

342
00:16:53,000 --> 00:17:02,000
sufficiently good open source<font color="#E5E5E5"> Nvidia</font>

343
00:16:57,740 --> 00:17:05,300
driver for their part so they<font color="#CCCCCC"> actually</font>

344
00:17:02,000 --> 00:17:11,000
needed<font color="#E5E5E5"> something</font><font color="#CCCCCC"> to implement this HWC</font>

345
00:17:05,300 --> 00:17:12,889
part or<font color="#CCCCCC"> HWC api</font><font color="#E5E5E5"> because there there's</font>

346
00:17:11,000 --> 00:17:15,200
nothing<font color="#CCCCCC"> in the open source</font><font color="#E5E5E5"> stack that</font>

347
00:17:12,890 --> 00:17:17,030
implements it like<font color="#E5E5E5"> Mesa doesn't</font>

348
00:17:15,200 --> 00:17:19,280
<font color="#E5E5E5">implement it the kernel does definitely</font>

349
00:17:17,030 --> 00:17:22,579
<font color="#E5E5E5">not implement it so</font><font color="#CCCCCC"> something has to</font>

350
00:17:19,280 --> 00:17:25,190
<font color="#E5E5E5">implement</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and what they came up</font><font color="#CCCCCC"> with</font>

351
00:17:22,579 --> 00:17:28,580
<font color="#E5E5E5">or rather Sean Paul at Google came up</font>

352
00:17:25,190 --> 00:17:31,570
<font color="#E5E5E5">with was DRM</font><font color="#CCCCCC"> hardware composer and it's</font>

353
00:17:28,580 --> 00:17:37,030
an American poster built on top of the

354
00:17:31,570 --> 00:17:41,450
normal<font color="#E5E5E5"> everyday Linux desktop stack and</font>

355
00:17:37,030 --> 00:17:43,490
let's<font color="#E5E5E5"> have a look at that so this is the</font>

356
00:17:41,450 --> 00:17:45,530
same stack we were looking at<font color="#E5E5E5"> before but</font>

357
00:17:43,490 --> 00:17:47,870
the open source<font color="#CCCCCC"> tank is a little bit</font>

358
00:17:45,530 --> 00:17:50,360
different<font color="#E5E5E5"> so if you want to replace this</font>

359
00:17:47,870 --> 00:17:52,399
proprietary blob with with something

360
00:17:50,360 --> 00:17:55,699
<font color="#CCCCCC">we'll have to figure out</font><font color="#E5E5E5"> with something</font>

361
00:17:52,400 --> 00:18:00,920
actually<font color="#E5E5E5"> is it has to implement</font><font color="#CCCCCC"> HW C 2</font>

362
00:17:55,700 --> 00:18:03,590
which is the API currently used<font color="#E5E5E5"> and it</font>

363
00:18:00,920 --> 00:18:05,500
does not using DRM<font color="#CCCCCC"> harbour composer but</font>

364
00:18:03,590 --> 00:18:09,970
there's also more to<font color="#E5E5E5"> it</font>

365
00:18:05,500 --> 00:18:14,559
we need more parts<font color="#E5E5E5"> the driver does have</font>

366
00:18:09,970 --> 00:18:18,010
a few moving parts in it and the the

367
00:18:14,559 --> 00:18:21,549
<font color="#E5E5E5">biggest parts are its Mesa Mesa</font>

368
00:18:18,010 --> 00:18:26,200
implements OpenGL and<font color="#E5E5E5"> API</font><font color="#CCCCCC"> it's like that</font>

369
00:18:21,549 --> 00:18:29,289
<font color="#E5E5E5">and there's also DRM that's the</font><font color="#CCCCCC"> kernel</font>

370
00:18:26,200 --> 00:18:31,450
DRM subsystem<font color="#CCCCCC"> so that's where your</font>

371
00:18:29,289 --> 00:18:36,279
kernel drivers live for your graphics

372
00:18:31,450 --> 00:18:37,750
<font color="#E5E5E5">card and in order</font><font color="#CCCCCC"> to talk to the RM or</font>

373
00:18:36,279 --> 00:18:38,769
the DRM subsystem in a convenient

374
00:18:37,750 --> 00:18:41,620
fashion

375
00:18:38,769 --> 00:18:43,389
there's<font color="#E5E5E5"> Lib DRM and it sort of abstracts</font>

376
00:18:41,620 --> 00:18:45,668
away some of the pain of talking to the

377
00:18:43,389 --> 00:18:47,529
<font color="#E5E5E5">kernel when you interface with the</font>

378
00:18:45,669 --> 00:18:50,669
kernel you'll talk iocked dolls and

379
00:18:47,529 --> 00:18:54,220
<font color="#E5E5E5">iocked dolls are no fun to</font><font color="#CCCCCC"> program and</font>

380
00:18:50,669 --> 00:18:56,169
as so<font color="#CCCCCC"> Librium abstracts away a bunch of</font>

381
00:18:54,220 --> 00:18:58,840
that and just<font color="#E5E5E5"> gives you nice functions</font>

382
00:18:56,169 --> 00:19:01,029
<font color="#E5E5E5">nice functions that give you the warm</font>

383
00:18:58,840 --> 00:19:03,399
fuzzy feelings and it also abstract<font color="#E5E5E5"> away</font>

384
00:19:01,029 --> 00:19:06,149
some some<font color="#E5E5E5"> other boiler</font><font color="#CCCCCC"> lady stuff</font><font color="#E5E5E5"> which</font>

385
00:19:03,399 --> 00:19:08,379
you're not particularly interested in

386
00:19:06,149 --> 00:19:12,010
but there's<font color="#CCCCCC"> them there's more</font><font color="#E5E5E5"> there's</font>

387
00:19:08,380 --> 00:19:15,460
even more then there's growl ik<font color="#CCCCCC"> it's</font>

388
00:19:12,010 --> 00:19:17,970
sort of it's one of the I don't<font color="#CCCCCC"> know</font>

389
00:19:15,460 --> 00:19:21,880
sort of pain<font color="#E5E5E5"> points and in this neck</font>

390
00:19:17,970 --> 00:19:24,519
<font color="#E5E5E5">there is currently as far as I know at</font>

391
00:19:21,880 --> 00:19:27,190
<font color="#CCCCCC">least</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> open-source implementations of</font>

392
00:19:24,519 --> 00:19:28,450
<font color="#CCCCCC">grandma and they all basically do the</font>

393
00:19:27,190 --> 00:19:32,740
same<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> but they're slightly</font>

394
00:19:28,450 --> 00:19:34,779
different<font color="#E5E5E5"> so there's the DRM</font><font color="#CCCCCC"> grandma for</font>

395
00:19:32,740 --> 00:19:37,029
example<font color="#E5E5E5"> that's the old open-source</font>

396
00:19:34,779 --> 00:19:38,860
implementation there's<font color="#CCCCCC"> GPM ground</font><font color="#E5E5E5"> lock</font>

397
00:19:37,029 --> 00:19:41,169
which is<font color="#E5E5E5"> the new cool one that we all</font>

398
00:19:38,860 --> 00:19:43,750
<font color="#CCCCCC">use in love and then</font><font color="#E5E5E5"> there's what</font>

399
00:19:41,169 --> 00:19:47,889
<font color="#E5E5E5">chromium OS</font><font color="#CCCCCC"> chips was just mini GPM</font>

400
00:19:43,750 --> 00:19:49,929
which is probably<font color="#E5E5E5"> even nicer and then on</font>

401
00:19:47,889 --> 00:19:52,928
top of<font color="#CCCCCC"> that Intel has their own like</font>

402
00:19:49,929 --> 00:19:56,110
<font color="#CCCCCC">fork of mini gia GBM called</font><font color="#E5E5E5"> just Intel</font>

403
00:19:52,929 --> 00:19:57,789
mini<font color="#CCCCCC"> gt BAM I guess which is</font><font color="#E5E5E5"> support for</font>

404
00:19:56,110 --> 00:19:59,469
even<font color="#E5E5E5"> more features and they need</font>

405
00:19:57,789 --> 00:20:01,090
features to enable<font color="#CCCCCC"> their hardware so</font>

406
00:19:59,470 --> 00:20:03,130
that's<font color="#E5E5E5"> very understandable but now we</font>

407
00:20:01,090 --> 00:20:05,289
have<font color="#E5E5E5"> four</font><font color="#CCCCCC"> four implementations of</font>

408
00:20:03,130 --> 00:20:08,889
basically<font color="#CCCCCC"> the same functionality so it's</font>

409
00:20:05,289 --> 00:20:10,720
it's a slight mess and we're<font color="#CCCCCC"> working on</font>

410
00:20:08,889 --> 00:20:14,110
<font color="#CCCCCC">that we're</font><font color="#E5E5E5"> gonna see if we can shrink it</font>

411
00:20:10,720 --> 00:20:16,090
<font color="#E5E5E5">down to one again we'll see so yeah</font>

412
00:20:14,110 --> 00:20:17,959
anyway that's what the<font color="#E5E5E5"> entire stack it</font>

413
00:20:16,090 --> 00:20:22,010
looks like I've omitted<font color="#E5E5E5"> base</font>

414
00:20:17,960 --> 00:20:26,419
nothing this<font color="#E5E5E5"> is what it looks like so if</font>

415
00:20:22,010 --> 00:20:27,799
I know<font color="#CCCCCC"> that you have an idea of what the</font>

416
00:20:26,419 --> 00:20:31,100
<font color="#CCCCCC">RM harbour</font><font color="#E5E5E5"> composer does and where it</font>

417
00:20:27,799 --> 00:20:36,889
lives<font color="#E5E5E5"> let's talk about some recent</font>

418
00:20:31,100 --> 00:20:38,840
<font color="#CCCCCC">developments I guess sometime</font><font color="#E5E5E5"> I'm not</font>

419
00:20:36,890 --> 00:20:42,289
sure when it<font color="#E5E5E5"> was introduced in Android</font>

420
00:20:38,840 --> 00:20:44,120
but a bunch of years ago<font color="#E5E5E5"> Android</font>

421
00:20:42,289 --> 00:20:46,309
introduced a feature called<font color="#E5E5E5"> fences or</font>

422
00:20:44,120 --> 00:20:48,260
buffer fences and it's a very nice

423
00:20:46,309 --> 00:20:53,720
<font color="#CCCCCC">feature it allows you to have a</font><font color="#E5E5E5"> buffer</font>

424
00:20:48,260 --> 00:20:55,580
<font color="#E5E5E5">and then sort of associate events to it</font>

425
00:20:53,720 --> 00:20:57,799
<font color="#CCCCCC">so you can wait</font><font color="#E5E5E5"> on the buffer to become</font>

426
00:20:55,580 --> 00:21:01,760
<font color="#E5E5E5">available</font><font color="#CCCCCC"> which means that you can do</font>

427
00:20:57,799 --> 00:21:04,309
<font color="#CCCCCC">stuff like just communicate buffers</font>

428
00:21:01,760 --> 00:21:06,620
between<font color="#E5E5E5"> processes in a secure</font><font color="#CCCCCC"> and</font>

429
00:21:04,309 --> 00:21:08,990
reasonable<font color="#CCCCCC"> manner</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> get you'll</font>

430
00:21:06,620 --> 00:21:12,049
always<font color="#E5E5E5"> get the expected results and you</font>

431
00:21:08,990 --> 00:21:13,549
can<font color="#CCCCCC"> also synchronize buffers which means</font>

432
00:21:12,049 --> 00:21:16,700
that you can have<font color="#CCCCCC"> a part like</font><font color="#E5E5E5"> for</font>

433
00:21:13,549 --> 00:21:19,580
<font color="#CCCCCC">example the</font><font color="#E5E5E5"> the webcam</font><font color="#CCCCCC"> it creates a</font>

434
00:21:16,700 --> 00:21:22,429
buffer<font color="#E5E5E5"> like it takes a picture creates a</font>

435
00:21:19,580 --> 00:21:26,899
buffer<font color="#E5E5E5"> and attaches like a fence to it</font>

436
00:21:22,429 --> 00:21:28,700
and with<font color="#E5E5E5"> that fence it can then send the</font>

437
00:21:26,899 --> 00:21:32,629
buffer<font color="#CCCCCC"> before it's</font><font color="#E5E5E5"> even done writing it</font>

438
00:21:28,700 --> 00:21:35,450
<font color="#E5E5E5">out to the GPU and the GPU can go</font><font color="#CCCCCC"> okay</font>

439
00:21:32,630 --> 00:21:38,090
<font color="#CCCCCC">this</font><font color="#E5E5E5"> fence isn't ready yet</font><font color="#CCCCCC"> ping me when</font>

440
00:21:35,450 --> 00:21:39,770
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> ready</font><font color="#E5E5E5"> and when it's actually ready</font>

441
00:21:38,090 --> 00:21:41,629
and all of the<font color="#E5E5E5"> pixels</font><font color="#CCCCCC"> have been written</font>

442
00:21:39,770 --> 00:21:43,580
out<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the buffer the GPU will be poked</font>

443
00:21:41,630 --> 00:21:46,460
<font color="#E5E5E5">and then it can use the buffer</font>

444
00:21:43,580 --> 00:21:50,000
immediately for like<font color="#E5E5E5"> a so texture and do</font>

445
00:21:46,460 --> 00:21:51,559
GPU stuff with it so it allows distinct

446
00:21:50,000 --> 00:21:53,120
pieces<font color="#E5E5E5"> of hardware or processes to</font>

447
00:21:51,559 --> 00:21:57,850
communicate in a nice way

448
00:21:53,120 --> 00:22:01,129
<font color="#E5E5E5">and it it really reduces complexity for</font>

449
00:21:57,850 --> 00:22:03,350
<font color="#CCCCCC">hwc or for</font><font color="#E5E5E5"> Harvick in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> harbor</font>

450
00:22:01,130 --> 00:22:05,720
composers previously you needed<font color="#E5E5E5"> a bunch</font>

451
00:22:03,350 --> 00:22:07,639
of threads to do like<font color="#CCCCCC"> to like</font><font color="#E5E5E5"> Paul</font>

452
00:22:05,720 --> 00:22:10,730
buffers have<font color="#E5E5E5"> a look at them and then</font>

453
00:22:07,640 --> 00:22:14,570
some<font color="#E5E5E5"> some</font><font color="#CCCCCC"> you Texas</font><font color="#E5E5E5"> and semaphores and</font>

454
00:22:10,730 --> 00:22:16,700
it was like a slight nightmare<font color="#E5E5E5"> but with</font>

455
00:22:14,570 --> 00:22:18,200
fences<font color="#E5E5E5"> it's a lot simplified you can</font>

456
00:22:16,700 --> 00:22:21,110
just wait for the fence and<font color="#E5E5E5"> do and it's</font>

457
00:22:18,200 --> 00:22:22,850
<font color="#E5E5E5">done it's done and the use of space</font>

458
00:22:21,110 --> 00:22:25,309
<font color="#E5E5E5">implement implementations sort of just</font>

459
00:22:22,850 --> 00:22:28,840
shrink and the complexity really shrinks

460
00:22:25,309 --> 00:22:32,158
<font color="#CCCCCC">so it's</font><font color="#E5E5E5"> very nice in that respect and</font>

461
00:22:28,840 --> 00:22:38,870
<font color="#CCCCCC">main line received support for fans</font>

462
00:22:32,159 --> 00:22:42,450
in 2016 thanks to Gustavo over there<font color="#CCCCCC"> and</font>

463
00:22:38,870 --> 00:22:44,939
as a part of developing support for

464
00:22:42,450 --> 00:22:47,270
<font color="#E5E5E5">Francis</font><font color="#CCCCCC"> Durham Harbor composer also</font>

465
00:22:44,940 --> 00:22:51,360
received support<font color="#E5E5E5"> for for Francis and</font>

466
00:22:47,270 --> 00:22:54,029
<font color="#CCCCCC">hardware composer - so it's sort of a</font>

467
00:22:51,360 --> 00:22:55,678
chicken and<font color="#E5E5E5"> the egg problem where if you</font>

468
00:22:54,029 --> 00:22:58,049
want to upstream<font color="#E5E5E5"> a feature to the kernel</font>

469
00:22:55,679 --> 00:23:00,360
<font color="#E5E5E5">you have to implement it somewhere can't</font>

470
00:22:58,049 --> 00:23:03,029
<font color="#E5E5E5">just upstream untested code it has</font><font color="#CCCCCC"> to be</font>

471
00:23:00,360 --> 00:23:05,219
implemented somewhere so<font color="#E5E5E5"> DRM hardware</font>

472
00:23:03,029 --> 00:23:06,390
composer was<font color="#CCCCCC"> chosen because it's a</font>

473
00:23:05,220 --> 00:23:09,659
relatively<font color="#E5E5E5"> small implement</font>

474
00:23:06,390 --> 00:23:13,799
implementation of a client to these

475
00:23:09,659 --> 00:23:16,200
api's so<font color="#CCCCCC"> DRM harbour</font><font color="#E5E5E5"> composer</font>

476
00:23:13,799 --> 00:23:20,399
implemented support for Francis and<font color="#CCCCCC"> HWC</font>

477
00:23:16,200 --> 00:23:26,510
<font color="#E5E5E5">- and then the colonel got explicit</font>

478
00:23:20,399 --> 00:23:30,689
fencing implemented or upstream yeah and

479
00:23:26,510 --> 00:23:33,090
the current status for a<font color="#E5E5E5"> DRM hardware</font>

480
00:23:30,690 --> 00:23:36,990
composer is that we were just moved like

481
00:23:33,090 --> 00:23:39,539
<font color="#CCCCCC">a few</font><font color="#E5E5E5"> months ago Google allowed us to to</font>

482
00:23:36,990 --> 00:23:42,570
move from chromium OS<font color="#E5E5E5"> like the project</font>

483
00:23:39,539 --> 00:23:44,908
was created as a<font color="#E5E5E5"> part of the chromium OS</font>

484
00:23:42,570 --> 00:23:47,520
project<font color="#CCCCCC"> a lot of good interesting</font><font color="#E5E5E5"> stuff</font>

485
00:23:44,909 --> 00:23:49,529
comes<font color="#CCCCCC"> from there but it was also hosted</font>

486
00:23:47,520 --> 00:23:52,408
<font color="#CCCCCC">within that project</font><font color="#E5E5E5"> which made it kind</font>

487
00:23:49,529 --> 00:23:54,179
of hard<font color="#CCCCCC"> to contribute and as an open</font>

488
00:23:52,409 --> 00:23:58,740
source<font color="#E5E5E5"> project you kind of want to lower</font>

489
00:23:54,179 --> 00:24:01,740
the barriers of<font color="#E5E5E5"> entry to zero and we</font>

490
00:23:58,740 --> 00:24:05,250
moved<font color="#E5E5E5"> to freedesktop.org</font><font color="#CCCCCC"> where most of</font>

491
00:24:01,740 --> 00:24:07,740
the unit the<font color="#E5E5E5"> Linux desktop graphics</font>

492
00:24:05,250 --> 00:24:09,840
projects<font color="#CCCCCC"> actually live like Mesa for</font>

493
00:24:07,740 --> 00:24:12,260
example<font color="#E5E5E5"> lib DRM all this good</font><font color="#CCCCCC"> stuff</font>

494
00:24:09,840 --> 00:24:15,120
<font color="#CCCCCC">lives</font><font color="#E5E5E5"> at fd0</font>

495
00:24:12,260 --> 00:24:18,120
and I'd like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> just thank Google for it</font>

496
00:24:15,120 --> 00:24:20,939
<font color="#CCCCCC">they didn't have to do that</font><font color="#E5E5E5"> and it's</font>

497
00:24:18,120 --> 00:24:22,620
certainly inconvenient for them<font color="#E5E5E5"> now they</font>

498
00:24:20,940 --> 00:24:25,230
have an external dependency instead of a

499
00:24:22,620 --> 00:24:29,070
an internal and it just makes their

500
00:24:25,230 --> 00:24:30,960
workflow<font color="#E5E5E5"> more cumbersome so it it</font><font color="#CCCCCC"> wasn't</font>

501
00:24:29,070 --> 00:24:31,200
nothing<font color="#E5E5E5"> for them</font><font color="#CCCCCC"> to do so I appreciate</font>

502
00:24:30,960 --> 00:24:33,510
it

503
00:24:31,200 --> 00:24:36,860
Sean Paul who created DRM<font color="#CCCCCC"> our carbon</font>

504
00:24:33,510 --> 00:24:40,379
composer<font color="#CCCCCC"> push for this Rene</font><font color="#E5E5E5"> Kumar and</font>

505
00:24:36,860 --> 00:24:40,559
<font color="#CCCCCC">Marisa wall</font><font color="#E5E5E5"> also helped out so thanks</font>

506
00:24:40,380 --> 00:24:43,930
guys

507
00:24:40,559 --> 00:24:49,420
<font color="#E5E5E5">it's very much</font><font color="#CCCCCC"> appreciated</font>

508
00:24:43,930 --> 00:24:53,800
furthermore<font color="#E5E5E5"> we're creating a github</font>

509
00:24:49,420 --> 00:24:56,320
<font color="#E5E5E5">instance for really for all</font><font color="#CCCCCC"> FTO projects</font>

510
00:24:53,800 --> 00:24:59,409
<font color="#E5E5E5">but hopefully a DRM</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> conserve</font>

511
00:24:56,320 --> 00:25:02,370
will be one of the first ones to to move

512
00:24:59,410 --> 00:25:04,630
and<font color="#E5E5E5"> also further lower the bar of</font>

513
00:25:02,370 --> 00:25:07,330
contributing<font color="#E5E5E5"> just have an</font><font color="#CCCCCC"> interface</font>

514
00:25:04,630 --> 00:25:09,760
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> what people are used to seeing I</font>

515
00:25:07,330 --> 00:25:12,850
guess<font color="#CCCCCC"> make it</font><font color="#E5E5E5"> simple as simple as</font>

516
00:25:09,760 --> 00:25:14,890
possible<font color="#CCCCCC"> we'll see exactly how how it</font>

517
00:25:12,850 --> 00:25:17,320
turns out<font color="#CCCCCC"> fulfil will keep mailing this</font>

518
00:25:14,890 --> 00:25:20,950
development or not but<font color="#CCCCCC"> but we probably</font>

519
00:25:17,320 --> 00:25:24,129
will let's see how it goes anyway so

520
00:25:20,950 --> 00:25:26,290
we've covered one of<font color="#CCCCCC"> this and and why</font>

521
00:25:24,130 --> 00:25:29,890
and<font color="#E5E5E5"> how we got here so look at where we</font>

522
00:25:26,290 --> 00:25:32,649
are<font color="#E5E5E5"> and there's a few</font><font color="#CCCCCC"> platforms that</font>

523
00:25:29,890 --> 00:25:35,680
have<font color="#E5E5E5"> been tested</font><font color="#CCCCCC"> and I said</font><font color="#E5E5E5"> I say tested</font>

524
00:25:32,650 --> 00:25:39,790
but that<font color="#E5E5E5"> we've brought</font><font color="#CCCCCC"> up there's the</font>

525
00:25:35,680 --> 00:25:43,360
imx6<font color="#CCCCCC"> which is a very common embedded</font>

526
00:25:39,790 --> 00:25:46,300
platform<font color="#E5E5E5"> it uses the</font><font color="#CCCCCC"> the Devante GPUs</font>

527
00:25:43,360 --> 00:25:51,550
the 3000<font color="#CCCCCC"> series or some of them use the</font>

528
00:25:46,300 --> 00:25:53,770
3000<font color="#CCCCCC"> series and last last</font><font color="#E5E5E5"> year like for</font>

529
00:25:51,550 --> 00:25:58,510
most<font color="#E5E5E5"> of</font><font color="#CCCCCC"> last year</font><font color="#E5E5E5"> we were working on on</font>

530
00:25:53,770 --> 00:26:01,629
bringing<font color="#E5E5E5"> this up and thanks to the the</font>

531
00:25:58,510 --> 00:26:04,270
<font color="#CCCCCC">Avante Etna via a graphics driver</font><font color="#E5E5E5"> this</font>

532
00:26:01,630 --> 00:26:05,770
<font color="#E5E5E5">is finally possible</font><font color="#CCCCCC"> like a lot of really</font>

533
00:26:04,270 --> 00:26:07,860
<font color="#E5E5E5">good work has gone into reverse</font>

534
00:26:05,770 --> 00:26:11,410
engineering the<font color="#CCCCCC"> Avanti</font>

535
00:26:07,860 --> 00:26:14,469
GPU and it's like in a<font color="#E5E5E5"> really good shape</font>

536
00:26:11,410 --> 00:26:17,200
now like more so than than most other

537
00:26:14,470 --> 00:26:20,140
graphics drivers<font color="#CCCCCC"> actually so that's</font><font color="#E5E5E5"> very</font>

538
00:26:17,200 --> 00:26:23,350
nice<font color="#CCCCCC"> Lucas stack Christian to miner</font>

539
00:26:20,140 --> 00:26:24,850
<font color="#CCCCCC">Vladimir founder lon we're amongst those</font>

540
00:26:23,350 --> 00:26:27,610
that helped out<font color="#E5E5E5"> doing this or actually</font>

541
00:26:24,850 --> 00:26:31,419
<font color="#CCCCCC">made it happen</font><font color="#E5E5E5"> and I</font><font color="#CCCCCC"> just used their</font>

542
00:26:27,610 --> 00:26:35,590
work so I'm very<font color="#E5E5E5"> thankful</font><font color="#CCCCCC"> there's also</font>

543
00:26:31,420 --> 00:26:39,880
the dragon<font color="#E5E5E5"> board</font><font color="#CCCCCC"> fortune see it's based</font>

544
00:26:35,590 --> 00:26:43,300
<font color="#E5E5E5">on the Qualcomm</font><font color="#CCCCCC"> 4/10</font><font color="#E5E5E5"> SOC so it's an old</font>

545
00:26:39,880 --> 00:26:46,810
<font color="#E5E5E5">cell phone SOC that they sort of made</font>

546
00:26:43,300 --> 00:26:48,399
into an embedded system<font color="#E5E5E5"> because I guess</font>

547
00:26:46,810 --> 00:26:51,970
that was the the<font color="#E5E5E5"> simplest way of</font><font color="#CCCCCC"> doing</font>

548
00:26:48,400 --> 00:26:54,340
it<font color="#E5E5E5"> and it runs on Adreno GPU so Adreno</font>

549
00:26:51,970 --> 00:26:56,930
GPU<font color="#CCCCCC"> s</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> have a rather good driver</font>

550
00:26:54,340 --> 00:27:00,080
support and freed<font color="#E5E5E5"> reno project</font>

551
00:26:56,930 --> 00:27:02,930
and the<font color="#CCCCCC"> freed Reno project was back</font>

552
00:27:00,080 --> 00:27:06,710
created by Rob Clark<font color="#CCCCCC"> and he sort of been</font>

553
00:27:02,930 --> 00:27:08,930
pushing that<font color="#E5E5E5"> fart that I had at like an</font>

554
00:27:06,710 --> 00:27:14,780
alarming rate<font color="#E5E5E5"> he's incredibly productive</font>

555
00:27:08,930 --> 00:27:17,230
and so bringing<font color="#E5E5E5"> that Android</font><font color="#CCCCCC"> graphic</font>

556
00:27:14,780 --> 00:27:20,060
stack up on<font color="#E5E5E5"> this device wasn't too hard</font>

557
00:27:17,230 --> 00:27:24,230
the the<font color="#CCCCCC"> GPU support was already there</font>

558
00:27:20,060 --> 00:27:26,720
<font color="#CCCCCC">and that brings us to what's being</font>

559
00:27:24,230 --> 00:27:30,170
worked<font color="#E5E5E5"> on currently it's the Heike 960</font>

560
00:27:26,720 --> 00:27:35,260
it runs the I think<font color="#E5E5E5"> it's the high</font>

561
00:27:30,170 --> 00:27:39,410
silicon 960 SOC which has an<font color="#E5E5E5"> arm GPU and</font>

562
00:27:35,260 --> 00:27:42,950
there isn't really a viable open-source

563
00:27:39,410 --> 00:27:47,510
driver for the well<font color="#E5E5E5"> basically any arm</font>

564
00:27:42,950 --> 00:27:49,430
GPU but specifically not for the<font color="#CCCCCC"> G 71</font>

565
00:27:47,510 --> 00:27:52,850
which is their<font color="#E5E5E5"> latest architecture that</font>

566
00:27:49,430 --> 00:27:55,640
it's called Bifrost<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there there's</font>

567
00:27:52,850 --> 00:27:57,709
some there is<font color="#CCCCCC"> a project for creating a</font>

568
00:27:55,640 --> 00:28:01,240
driver<font color="#E5E5E5"> but it's still in the very early</font>

569
00:27:57,710 --> 00:28:04,550
days<font color="#CCCCCC"> I really hope to see</font><font color="#E5E5E5"> it push ahead</font>

570
00:28:01,240 --> 00:28:06,080
<font color="#E5E5E5">because it would be nice</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have a truly</font>

571
00:28:04,550 --> 00:28:08,270
<font color="#E5E5E5">open-source graphics</font><font color="#CCCCCC"> stack running on</font>

572
00:28:06,080 --> 00:28:12,470
this but for<font color="#CCCCCC"> now we're stuck with</font>

573
00:28:08,270 --> 00:28:15,410
proprietary drivers and currently<font color="#E5E5E5"> the</font>

574
00:28:12,470 --> 00:28:16,550
<font color="#E5E5E5">Naro is working at bringing Android up</font>

575
00:28:15,410 --> 00:28:19,460
on this<font color="#E5E5E5"> device</font>

576
00:28:16,550 --> 00:28:22,639
young<font color="#CCCCCC"> Stults is doing a</font><font color="#E5E5E5"> lot of really</font>

577
00:28:19,460 --> 00:28:26,170
good work<font color="#CCCCCC"> and it shouldn't</font><font color="#E5E5E5"> be too long</font>

578
00:28:22,640 --> 00:28:30,220
<font color="#E5E5E5">before this one</font><font color="#CCCCCC"> is and the verified</font>

579
00:28:26,170 --> 00:28:34,760
column<font color="#CCCCCC"> rig so hopefully they'll forget</font>

580
00:28:30,220 --> 00:28:36,590
<font color="#E5E5E5">yeah so that brings us to the</font><font color="#CCCCCC"> last part</font>

581
00:28:34,760 --> 00:28:38,750
<font color="#E5E5E5">the big picture what's actually going on</font>

582
00:28:36,590 --> 00:28:41,720
<font color="#CCCCCC">here</font><font color="#E5E5E5"> and there's there are some</font>

583
00:28:38,750 --> 00:28:43,370
conclusions we can draw so new features

584
00:28:41,720 --> 00:28:45,740
seem to get introduced into<font color="#E5E5E5"> Android and</font>

585
00:28:43,370 --> 00:28:48,830
some of the features are like like

586
00:28:45,740 --> 00:28:52,010
really<font color="#E5E5E5"> good like solid improvements from</font>

587
00:28:48,830 --> 00:28:54,740
<font color="#E5E5E5">the current status</font><font color="#CCCCCC"> quo</font><font color="#E5E5E5"> and those</font>

588
00:28:52,010 --> 00:28:57,500
features<font color="#E5E5E5"> eventually get moved into the</font>

589
00:28:54,740 --> 00:29:00,320
kernel<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that that's true for</font><font color="#E5E5E5"> the</font>

590
00:28:57,500 --> 00:29:03,440
<font color="#CCCCCC">fences we looked at and that's also</font><font color="#E5E5E5"> true</font>

591
00:29:00,320 --> 00:29:06,980
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the atomic display framework like it</font>

592
00:29:03,440 --> 00:29:09,110
was not moved but re-engineered like

593
00:29:06,980 --> 00:29:10,350
it's it was<font color="#E5E5E5"> a good</font><font color="#CCCCCC"> idea so we</font><font color="#E5E5E5"> did it</font>

594
00:29:09,110 --> 00:29:12,539
again<font color="#CCCCCC"> properly</font>

595
00:29:10,350 --> 00:29:13,408
and<font color="#E5E5E5"> know the</font><font color="#CCCCCC"> kernel is way better</font>

596
00:29:12,539 --> 00:29:18,299
because<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it</font>

597
00:29:13,409 --> 00:29:20,759
<font color="#E5E5E5">so when you think of Android</font><font color="#CCCCCC"> it's</font>

598
00:29:18,299 --> 00:29:22,289
obviously like<font color="#CCCCCC"> a mixed bag there's lots</font>

599
00:29:20,759 --> 00:29:25,950
of<font color="#E5E5E5"> closed source stuff in there but</font><font color="#CCCCCC"> it</font>

600
00:29:22,289 --> 00:29:28,799
<font color="#E5E5E5">does push us forward like if</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> nothing</font>

601
00:29:25,950 --> 00:29:32,880
else through<font color="#E5E5E5"> just doing their own thing</font>

602
00:29:28,799 --> 00:29:35,580
<font color="#CCCCCC">that</font><font color="#E5E5E5"> maybe is actually better but this</font>

603
00:29:32,880 --> 00:29:38,460
isn't necessarily<font color="#CCCCCC"> true for</font><font color="#E5E5E5"> all parts of</font>

604
00:29:35,580 --> 00:29:41,370
the kernel<font color="#E5E5E5"> if we look at the difficut</font>

605
00:29:38,460 --> 00:29:47,250
<font color="#E5E5E5">here's the the</font><font color="#CCCCCC"> Qualcomm versus</font><font color="#E5E5E5"> mainlined</font>

606
00:29:41,370 --> 00:29:51,000
<font color="#CCCCCC">f4 version for nine</font><font color="#E5E5E5"> and there's lots of</font>

607
00:29:47,250 --> 00:29:53,309
stuff<font color="#E5E5E5"> like mostly drivers that never</font>

608
00:29:51,000 --> 00:29:56,190
<font color="#E5E5E5">really will be moved into mainline and</font>

609
00:29:53,309 --> 00:29:58,320
that's for various reasons<font color="#CCCCCC"> like there's</font>

610
00:29:56,190 --> 00:30:01,080
maybe<font color="#E5E5E5"> a lack of incentive on coal comes</font>

611
00:29:58,320 --> 00:30:03,658
part or maybe<font color="#CCCCCC"> the driver is only</font>

612
00:30:01,080 --> 00:30:05,490
available<font color="#E5E5E5"> for this one SOC one time so</font>

613
00:30:03,659 --> 00:30:08,850
if they take the<font color="#E5E5E5"> time to upstream it</font>

614
00:30:05,490 --> 00:30:12,240
<font color="#E5E5E5">it'll be sort of not</font><font color="#CCCCCC"> so useful going</font>

615
00:30:08,850 --> 00:30:15,779
<font color="#E5E5E5">down the line but if you look at this</font>

616
00:30:12,240 --> 00:30:18,350
graph<font color="#E5E5E5"> about</font><font color="#CCCCCC"> two-thirds are drivers and</font>

617
00:30:15,779 --> 00:30:21,679
<font color="#E5E5E5">there's some other</font><font color="#CCCCCC"> stuff in</font><font color="#E5E5E5"> there too</font>

618
00:30:18,350 --> 00:30:28,699
much of its multimedia related so

619
00:30:21,679 --> 00:30:32,039
graphics or video<font color="#CCCCCC"> not although</font><font color="#E5E5E5"> yeah and</font>

620
00:30:28,700 --> 00:30:34,139
the diff seems to be like fairly

621
00:30:32,039 --> 00:30:37,379
constant<font color="#E5E5E5"> like if we go back to</font><font color="#CCCCCC"> the graph</font>

622
00:30:34,139 --> 00:30:41,070
we had a look at initially<font color="#E5E5E5"> it's not a</font>

623
00:30:37,379 --> 00:30:45,928
clear trend here<font color="#E5E5E5"> like if we look at at</font>

624
00:30:41,070 --> 00:30:48,928
the<font color="#E5E5E5"> 318 bump here that's the the diff</font>

625
00:30:45,929 --> 00:30:51,809
from<font color="#E5E5E5"> 314 to 318 is mostly drivers again</font>

626
00:30:48,929 --> 00:30:53,519
like drivers can get added drivers get

627
00:30:51,809 --> 00:30:57,090
removed<font color="#E5E5E5"> there seems to be a lot of churn</font>

628
00:30:53,519 --> 00:31:01,259
<font color="#E5E5E5">for their</font><font color="#CCCCCC"> associates</font><font color="#E5E5E5"> which is an</font>

629
00:30:57,090 --> 00:31:03,418
interesting<font color="#CCCCCC"> data point</font><font color="#E5E5E5"> but maybe it</font>

630
00:31:01,259 --> 00:31:05,039
<font color="#CCCCCC">isn't</font><font color="#E5E5E5"> the most optimistic or or it</font>

631
00:31:03,419 --> 00:31:07,039
<font color="#E5E5E5">doesn't cause a lot of optimism not that</font>

632
00:31:05,039 --> 00:31:11,570
a point<font color="#E5E5E5"> like there's churn I'll probably</font>

633
00:31:07,039 --> 00:31:14,309
never<font color="#E5E5E5"> be fully like mainlined</font><font color="#CCCCCC"> this stuff</font>

634
00:31:11,570 --> 00:31:17,960
<font color="#E5E5E5">but it's interesting nonetheless</font><font color="#CCCCCC"> in</font>

635
00:31:14,309 --> 00:31:21,510
terms<font color="#E5E5E5"> of painting a bigger picture</font><font color="#CCCCCC"> and</font>

636
00:31:17,960 --> 00:31:24,520
also we've<font color="#CCCCCC"> seen</font>

637
00:31:21,510 --> 00:31:27,700
that open-sourcing graphics drivers has

638
00:31:24,520 --> 00:31:31,090
been really like pushing<font color="#E5E5E5"> the development</font>

639
00:31:27,700 --> 00:31:33,669
speed forward<font color="#E5E5E5"> in terms of like are you</font>

640
00:31:31,090 --> 00:31:37,330
creating a new device and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> already</font>

641
00:31:33,669 --> 00:31:39,039
have<font color="#CCCCCC"> 95% of</font><font color="#E5E5E5"> the hardware supported and</font>

642
00:31:37,330 --> 00:31:41,110
maybe you have some quirks<font color="#CCCCCC"> but if you</font>

643
00:31:39,039 --> 00:31:43,779
just can<font color="#E5E5E5"> get started and see something</font>

644
00:31:41,110 --> 00:31:44,949
<font color="#E5E5E5">like render on the screen that's a</font>

645
00:31:43,779 --> 00:31:46,659
pretty good place<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start</font>

646
00:31:44,950 --> 00:31:50,590
you can fix<font color="#E5E5E5"> what whatever is remaining</font>

647
00:31:46,659 --> 00:31:52,360
and it it<font color="#E5E5E5"> isn't too</font><font color="#CCCCCC"> much work</font><font color="#E5E5E5"> whereas if</font>

648
00:31:50,590 --> 00:31:53,799
<font color="#E5E5E5">you have a proprietary driver and it</font>

649
00:31:52,360 --> 00:31:56,439
doesn't<font color="#E5E5E5"> work like that's that's</font>

650
00:31:53,799 --> 00:31:58,510
<font color="#E5E5E5">unfortunate</font><font color="#CCCCCC"> that's there's not much to</font>

651
00:31:56,440 --> 00:32:00,940
do<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> except for</font><font color="#CCCCCC"> like calling the</font>

652
00:31:58,510 --> 00:32:03,399
vendor and hoping that<font color="#E5E5E5"> you're like big</font>

653
00:32:00,940 --> 00:32:07,419
enough fish<font color="#CCCCCC"> for them to care</font><font color="#E5E5E5"> which may</font>

654
00:32:03,399 --> 00:32:09,428
or may not<font color="#E5E5E5"> be the case</font><font color="#CCCCCC"> it also lowers</font>

655
00:32:07,419 --> 00:32:11,649
development costs for vendors<font color="#E5E5E5"> but we've</font>

656
00:32:09,429 --> 00:32:14,710
been seeing<font color="#E5E5E5"> this recently with with</font>

657
00:32:11,649 --> 00:32:17,049
Qualcomm<font color="#E5E5E5"> and the Adreno drivers</font><font color="#CCCCCC"> they're</font>

658
00:32:14,710 --> 00:32:19,960
actually<font color="#CCCCCC"> contributing to</font><font color="#E5E5E5"> the freed</font><font color="#CCCCCC"> reno</font>

659
00:32:17,049 --> 00:32:22,179
driver<font color="#E5E5E5"> because it is good enough</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it</font>

660
00:32:19,960 --> 00:32:24,610
is valuable<font color="#E5E5E5"> to them so they're pushing</font>

661
00:32:22,179 --> 00:32:27,159
support for their<font color="#E5E5E5"> latest or</font><font color="#CCCCCC"> upcoming</font>

662
00:32:24,610 --> 00:32:29,678
GPUs into the<font color="#E5E5E5"> freed</font><font color="#CCCCCC"> Reno driver so</font><font color="#E5E5E5"> that</font>

663
00:32:27,159 --> 00:32:36,309
it can be used which sort of<font color="#E5E5E5"> means</font>

664
00:32:29,679 --> 00:32:38,590
something<font color="#E5E5E5"> and it's also interesting also</font>

665
00:32:36,309 --> 00:32:42,700
we've been<font color="#E5E5E5"> saying like a nice</font><font color="#CCCCCC"> bumping in</font>

666
00:32:38,590 --> 00:32:44,980
<font color="#CCCCCC">in</font><font color="#E5E5E5"> driver quality and if something is</font>

667
00:32:42,700 --> 00:32:49,600
broken<font color="#CCCCCC"> it's easily</font><font color="#E5E5E5"> fixed</font><font color="#CCCCCC"> so that's in</font>

668
00:32:44,980 --> 00:32:52,390
very much in our interest<font color="#E5E5E5"> and lastly all</font>

669
00:32:49,600 --> 00:32:55,750
of<font color="#E5E5E5"> this sort of sums up to pushing of a</font>

670
00:32:52,390 --> 00:32:57,309
source forward and least in my mind<font color="#E5E5E5"> I</font>

671
00:32:55,750 --> 00:32:59,140
see like compelling evidence for

672
00:32:57,309 --> 00:33:01,779
features being moved from<font color="#E5E5E5"> the</font>

673
00:32:59,140 --> 00:33:03,700
proprietary domain into the open source

674
00:33:01,779 --> 00:33:04,570
domain<font color="#E5E5E5"> and then even being main</font>

675
00:33:03,700 --> 00:33:06,399
<font color="#E5E5E5">mainlined</font>

676
00:33:04,570 --> 00:33:08,168
which is what we all want<font color="#CCCCCC"> like that</font>

677
00:33:06,399 --> 00:33:14,110
<font color="#E5E5E5">that's what gives us the warm and</font>

678
00:33:08,169 --> 00:33:16,179
fuzzies<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> that's that's</font><font color="#E5E5E5"> it for me if</font>

679
00:33:14,110 --> 00:33:17,929
you have any questions<font color="#CCCCCC"> just go ahead and</font>

680
00:33:16,179 --> 00:33:26,830
ask

681
00:33:17,930 --> 00:33:38,000
[Applause]

682
00:33:26,830 --> 00:33:41,120
any questions from the<font color="#CCCCCC"> audience so do</font>

683
00:33:38,000 --> 00:33:44,540
you<font color="#CCCCCC"> think the reason that some vendors</font>

684
00:33:41,120 --> 00:33:47,270
are beginning to pick up<font color="#E5E5E5"> and use the</font>

685
00:33:44,540 --> 00:33:51,139
existing<font color="#E5E5E5"> stacks is because there's a lot</font>

686
00:33:47,270 --> 00:33:52,820
less for them to<font color="#CCCCCC"> develop</font><font color="#E5E5E5"> I think the</font>

687
00:33:51,140 --> 00:33:54,710
reason is<font color="#CCCCCC"> that they're seeing demand</font>

688
00:33:52,820 --> 00:33:56,960
<font color="#CCCCCC">like people use this stuff</font><font color="#E5E5E5"> and they</font>

689
00:33:54,710 --> 00:34:00,190
wanted<font color="#CCCCCC"> to work well like out of</font><font color="#E5E5E5"> the box</font>

690
00:33:56,960 --> 00:34:02,840
<font color="#CCCCCC">there's there's value there to them</font><font color="#E5E5E5"> so</font>

691
00:34:00,190 --> 00:34:05,120
that's why they would<font color="#E5E5E5"> be inclined to to</font>

692
00:34:02,840 --> 00:34:07,100
contribute<font color="#CCCCCC"> I think so if you create</font>

693
00:34:05,120 --> 00:34:08,330
<font color="#E5E5E5">something that's valuable enough they</font>

694
00:34:07,100 --> 00:34:09,819
will<font color="#E5E5E5"> be interested</font><font color="#CCCCCC"> and they will</font>

695
00:34:08,330 --> 00:34:12,319
contribute if if they have the resources

696
00:34:09,820 --> 00:34:14,270
<font color="#E5E5E5">if you look at a vendor like</font><font color="#CCCCCC"> Gaby Vontae</font>

697
00:34:12,320 --> 00:34:15,860
they're like pretty tiny<font color="#E5E5E5"> like it's a</font>

698
00:34:14,270 --> 00:34:18,380
very<font color="#E5E5E5"> small company maybe they don't</font>

699
00:34:15,860 --> 00:34:21,530
actually<font color="#E5E5E5"> have the resources to push for</font>

700
00:34:18,380 --> 00:34:23,480
something open-source themselves but on

701
00:34:21,530 --> 00:34:25,460
the other hand<font color="#CCCCCC"> we're pretty far along</font><font color="#E5E5E5"> in</font>

702
00:34:23,480 --> 00:34:30,770
<font color="#CCCCCC">terms of support</font><font color="#E5E5E5"> for that platform</font><font color="#CCCCCC"> so</font>

703
00:34:25,460 --> 00:34:34,550
that's good hi you<font color="#E5E5E5"> mentioned that higher</font>

704
00:34:30,770 --> 00:34:37,310
composure also does some squashing<font color="#E5E5E5"> forth</font>

705
00:34:34,550 --> 00:34:38,560
of the layers right<font color="#E5E5E5"> okay you</font><font color="#CCCCCC"> mean you</font>

706
00:34:37,310 --> 00:34:41,420
mentioned<font color="#CCCCCC"> that hardware Composer</font>

707
00:34:38,560 --> 00:34:43,790
<font color="#CCCCCC">squashes layers</font><font color="#E5E5E5"> yeah</font>

708
00:34:41,420 --> 00:34:50,420
does the<font color="#E5E5E5"> DRM hardware</font><font color="#CCCCCC"> Composer to that</font>

709
00:34:43,790 --> 00:34:52,429
<font color="#E5E5E5">close oh yeah but maybe poorly so when</font>

710
00:34:50,420 --> 00:34:55,990
you have too<font color="#CCCCCC"> many layers</font><font color="#E5E5E5"> DRM</font><font color="#CCCCCC"> Harbor</font>

711
00:34:52,429 --> 00:34:58,700
<font color="#E5E5E5">Composer will fire up the GPU and</font>

712
00:34:55,989 --> 00:35:01,310
through OpenGL<font color="#E5E5E5"> smash some of the layers</font>

713
00:34:58,700 --> 00:35:03,319
together it won't<font color="#E5E5E5"> be particularly clever</font>

714
00:35:01,310 --> 00:35:05,750
about<font color="#E5E5E5"> this</font><font color="#CCCCCC"> it'll just grab some layers</font>

715
00:35:03,320 --> 00:35:07,490
but maybe what you really<font color="#CCCCCC"> want to do is</font>

716
00:35:05,750 --> 00:35:09,530
<font color="#CCCCCC">grab the</font><font color="#E5E5E5"> smallest layers because you're</font>

717
00:35:07,490 --> 00:35:11,270
<font color="#E5E5E5">doing expensive computation and you</font>

718
00:35:09,530 --> 00:35:16,750
might want to<font color="#E5E5E5"> minimize it if you can do</font>

719
00:35:11,270 --> 00:35:16,750
<font color="#E5E5E5">it more</font><font color="#CCCCCC"> effectively somewhere else yeah</font>

720
00:35:19,180 --> 00:35:25,480
what's the status of<font color="#E5E5E5"> Vulcan support and</font>

721
00:35:22,840 --> 00:35:27,880
where does this<font color="#E5E5E5"> and where does this end</font>

722
00:35:25,480 --> 00:35:30,400
in the stack you<font color="#CCCCCC"> Sean</font>

723
00:35:27,880 --> 00:35:31,630
so book and support as for the status

724
00:35:30,400 --> 00:35:35,230
I'm the wrong guy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> ask</font>

725
00:35:31,630 --> 00:35:37,750
but it's implemented in Mesa<font color="#E5E5E5"> and also in</font>

726
00:35:35,230 --> 00:35:39,850
the kernel drivers<font color="#E5E5E5"> but you may sit would</font>

727
00:35:37,750 --> 00:35:42,040
be what you<font color="#E5E5E5"> would be talking to so Mesa</font>

728
00:35:39,850 --> 00:35:44,259
implements<font color="#E5E5E5"> lots of these</font><font color="#CCCCCC"> AP</font><font color="#E5E5E5"> ice it's</font>

729
00:35:42,040 --> 00:35:50,140
basically<font color="#E5E5E5"> like a sort of a catch-all</font>

730
00:35:44,260 --> 00:35:57,600
project for<font color="#E5E5E5"> many of these things any</font>

731
00:35:50,140 --> 00:35:59,920
<font color="#E5E5E5">more questions</font><font color="#CCCCCC"> okay</font>

732
00:35:57,600 --> 00:36:08,299
thanks<font color="#E5E5E5"> very much</font>

733
00:35:59,920 --> 00:36:08,300
[Applause]

734
00:36:20,940 --> 00:36:24,750
<font color="#CCCCCC">force them to give you this home</font>

735
00:39:30,660 --> 00:39:33,790
[Music]

736
00:44:01,170 --> 00:44:04,280
[Music]

737
00:46:14,360 --> 00:46:17,539
[Music]

