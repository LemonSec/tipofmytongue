1
00:00:05,570 --> 00:00:09,930
<font color="#E5E5E5">all right thank you all for coming</font><font color="#CCCCCC"> here</font>

2
00:00:08,160 --> 00:00:11,760
<font color="#E5E5E5">my name is</font><font color="#CCCCCC"> peter robbins</font><font color="#E5E5E5"> and today i'll</font>

3
00:00:09,930 --> 00:00:15,300
talk<font color="#CCCCCC"> about laura reverse engineering and</font>

4
00:00:11,760 --> 00:00:17,070
a es en<font color="#E5E5E5"> satchel attacks using SDR so if</font>

5
00:00:15,300 --> 00:00:18,930
<font color="#E5E5E5">this kind of sounds like two subjects</font>

6
00:00:17,070 --> 00:00:21,030
were mixed together and<font color="#E5E5E5"> then presented</font>

7
00:00:18,930 --> 00:00:23,009
in<font color="#CCCCCC"> one talk well that's exactly what</font>

8
00:00:21,030 --> 00:00:24,300
<font color="#E5E5E5">happened because</font><font color="#CCCCCC"> I actually</font><font color="#E5E5E5"> submitted</font>

9
00:00:23,010 --> 00:00:26,880
<font color="#E5E5E5">two talks and then the</font><font color="#CCCCCC"> organization</font>

10
00:00:24,300 --> 00:00:27,779
<font color="#CCCCCC">kandi allowed me to mix them together so</font>

11
00:00:26,880 --> 00:00:30,599
I'm really<font color="#E5E5E5"> happy</font><font color="#CCCCCC"> about that</font>

12
00:00:27,779 --> 00:00:33,210
and thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much so first</font>

13
00:00:30,600 --> 00:00:36,360
<font color="#E5E5E5">something about myself</font><font color="#CCCCCC"> I'm a PhD</font><font color="#E5E5E5"> student</font>

14
00:00:33,210 --> 00:00:38,850
at<font color="#CCCCCC"> Sussex University since 2014</font><font color="#E5E5E5"> and I'm</font>

15
00:00:36,360 --> 00:00:41,430
mainly a InfoSec guy so I research

16
00:00:38,850 --> 00:00:43,920
wireless security<font color="#E5E5E5"> my job is to find</font>

17
00:00:41,430 --> 00:00:46,559
vulnerabilities<font color="#E5E5E5"> and miles protocols</font><font color="#CCCCCC"> I</font>

18
00:00:43,920 --> 00:00:48,840
also did<font color="#CCCCCC"> some work regarding</font><font color="#E5E5E5"> location</font>

19
00:00:46,559 --> 00:00:50,640
tracking and fingerprinting<font color="#CCCCCC"> and as of</font>

20
00:00:48,840 --> 00:00:52,200
lately<font color="#CCCCCC"> I heard so machine learning and</font>

21
00:00:50,640 --> 00:00:53,940
<font color="#E5E5E5">Satchel analysis</font><font color="#CCCCCC"> - that makes</font><font color="#E5E5E5"> because</font>

22
00:00:52,200 --> 00:00:57,870
that's I mean kind<font color="#CCCCCC"> of what interests me</font>

23
00:00:53,940 --> 00:01:00,120
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I always</font><font color="#E5E5E5"> try to do that</font><font color="#CCCCCC"> if you have a</font>

24
00:00:57,870 --> 00:01:02,309
question or want<font color="#CCCCCC"> to visit my website</font>

25
00:01:00,120 --> 00:01:03,870
<font color="#CCCCCC">here is the link</font><font color="#E5E5E5"> and we also have some</font>

26
00:01:02,309 --> 00:01:08,340
time<font color="#CCCCCC"> for questions at the end</font><font color="#E5E5E5"> of this</font>

27
00:01:03,870 --> 00:01:10,830
presentation<font color="#CCCCCC"> so first of all my</font>

28
00:01:08,340 --> 00:01:13,530
motivation for<font color="#E5E5E5"> starting</font><font color="#CCCCCC"> my research on</font>

29
00:01:10,830 --> 00:01:16,020
Laura<font color="#E5E5E5"> started in 2016</font><font color="#CCCCCC"> so at</font><font color="#E5E5E5"> that time</font>

30
00:01:13,530 --> 00:01:18,360
Laura was a relatively new protocol<font color="#CCCCCC"> and</font>

31
00:01:16,020 --> 00:01:19,800
my co<font color="#CCCCCC"> adviser reduced me to it I don't</font>

32
00:01:18,360 --> 00:01:23,039
know how many<font color="#E5E5E5"> people have heard about</font>

33
00:01:19,800 --> 00:01:25,800
Laura<font color="#E5E5E5"> before</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> people</font>

34
00:01:23,039 --> 00:01:27,660
that's<font color="#E5E5E5"> very good and so yeah for those</font>

35
00:01:25,800 --> 00:01:29,819
<font color="#CCCCCC">of you</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> know it's</font><font color="#E5E5E5"> basically just a</font>

36
00:01:27,660 --> 00:01:32,250
<font color="#CCCCCC">low-power long range</font><font color="#E5E5E5"> and low data rates</font>

37
00:01:29,819 --> 00:01:36,390
<font color="#E5E5E5">protocol for design for</font><font color="#CCCCCC"> the Internet of</font>

38
00:01:32,250 --> 00:01:37,349
Things<font color="#CCCCCC"> and because of</font><font color="#E5E5E5"> this the world at</font>

39
00:01:36,390 --> 00:01:40,110
<font color="#CCCCCC">that time there were a lot of</font><font color="#E5E5E5"> new</font>

40
00:01:37,349 --> 00:01:41,700
opportunities<font color="#CCCCCC"> to learning things for</font>

41
00:01:40,110 --> 00:01:44,009
<font color="#E5E5E5">example there was no working software</font>

42
00:01:41,700 --> 00:01:45,509
<font color="#E5E5E5">based</font><font color="#CCCCCC"> decoder available only</font><font color="#E5E5E5"> some</font>

43
00:01:44,009 --> 00:01:48,720
<font color="#E5E5E5">simulations but they didn't really work</font>

44
00:01:45,509 --> 00:01:50,880
with<font color="#E5E5E5"> with the effective hardware</font><font color="#CCCCCC"> and</font>

45
00:01:48,720 --> 00:01:52,349
then there was<font color="#E5E5E5"> a second</font><font color="#CCCCCC"> problem is that</font>

46
00:01:50,880 --> 00:01:54,839
<font color="#E5E5E5">the description of the file layer was</font>

47
00:01:52,349 --> 00:01:57,119
pretty<font color="#E5E5E5"> limited so there was this one</font>

48
00:01:54,840 --> 00:01:59,369
<font color="#E5E5E5">patents which explains a lot of things</font>

49
00:01:57,119 --> 00:02:01,229
about modulation<font color="#E5E5E5"> and then some scattered</font>

50
00:01:59,369 --> 00:02:02,910
blog posts<font color="#CCCCCC"> but we need to build a fully</font>

51
00:02:01,229 --> 00:02:05,940
fledged decoder<font color="#CCCCCC"> you would have to do</font>

52
00:02:02,910 --> 00:02:07,170
some reverse engineering as well and

53
00:02:05,940 --> 00:02:08,728
then there is the aspect<font color="#E5E5E5"> of</font>

54
00:02:07,170 --> 00:02:10,318
fingerprinting<font color="#CCCCCC"> and tracking devices over</font>

55
00:02:08,729 --> 00:02:11,550
long ranges which is interesting<font color="#E5E5E5"> and</font>

56
00:02:10,318 --> 00:02:13,768
it's an interesting<font color="#E5E5E5"> problem we can</font>

57
00:02:11,550 --> 00:02:15,540
tackle with<font color="#E5E5E5"> Laura</font><font color="#CCCCCC"> and finally satchel</font>

58
00:02:13,769 --> 00:02:17,549
attacks on my IOT protocols are

59
00:02:15,540 --> 00:02:18,359
interesting<font color="#E5E5E5"> because if</font><font color="#CCCCCC"> you have for</font>

60
00:02:17,549 --> 00:02:19,920
<font color="#E5E5E5">example a temperature</font>

61
00:02:18,360 --> 00:02:21,570
<font color="#E5E5E5">sensor and you would deploy somewhere</font>

62
00:02:19,920 --> 00:02:23,720
then obviously you will<font color="#E5E5E5"> be more</font>

63
00:02:21,570 --> 00:02:29,310
vulnerable<font color="#CCCCCC"> to attackers that gain</font>

64
00:02:23,720 --> 00:02:31,650
<font color="#CCCCCC">close-range</font><font color="#E5E5E5"> attack surface so let's move</font>

65
00:02:29,310 --> 00:02:33,570
on<font color="#CCCCCC"> to part 1 which is about</font><font color="#E5E5E5"> unlocking</font>

66
00:02:31,650 --> 00:02:36,480
the fly<font color="#E5E5E5"> and with this I mean</font><font color="#CCCCCC"> just</font>

67
00:02:33,570 --> 00:02:38,340
<font color="#E5E5E5">gaining access to the file layer instead</font>

68
00:02:36,480 --> 00:02:41,790
of just the<font color="#E5E5E5"> Mac</font><font color="#CCCCCC"> layer because if you</font>

69
00:02:38,340 --> 00:02:43,170
would<font color="#E5E5E5"> by lora device of the shelf then</font>

70
00:02:41,790 --> 00:02:45,750
the<font color="#E5E5E5"> only interface you</font><font color="#CCCCCC"> have is is</font>

71
00:02:43,170 --> 00:02:47,309
<font color="#E5E5E5">basically just over USB that you can</font>

72
00:02:45,750 --> 00:02:49,740
program<font color="#E5E5E5"> it you can program it</font><font color="#CCCCCC"> to send</font>

73
00:02:47,310 --> 00:02:52,230
some<font color="#CCCCCC"> mac layer messages</font><font color="#E5E5E5"> but that's all</font>

74
00:02:49,740 --> 00:02:55,320
you<font color="#E5E5E5"> get so we need to synchronize to the</font>

75
00:02:52,230 --> 00:02:55,950
<font color="#E5E5E5">packets on the file layer so where do we</font>

76
00:02:55,320 --> 00:02:58,290
start

77
00:02:55,950 --> 00:03:00,750
can you radio to<font color="#CCCCCC"> the rescue</font><font color="#E5E5E5"> because we</font>

78
00:02:58,290 --> 00:03:02,730
can just<font color="#E5E5E5"> this is how you would usually</font>

79
00:03:00,750 --> 00:03:05,670
start<font color="#E5E5E5"> when reverse engineering</font><font color="#CCCCCC"> a</font>

80
00:03:02,730 --> 00:03:07,679
protocol is just<font color="#E5E5E5"> take your</font><font color="#CCCCCC"> USRP and then</font>

81
00:03:05,670 --> 00:03:10,679
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> do file so you can analyze what</font>

82
00:03:07,680 --> 00:03:13,800
the signal looks like<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> and then</font>

83
00:03:10,680 --> 00:03:15,930
<font color="#E5E5E5">you get something</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> so here you</font>

84
00:03:13,800 --> 00:03:18,270
<font color="#E5E5E5">can see an</font><font color="#CCCCCC"> example Laura frame and in</font>

85
00:03:15,930 --> 00:03:20,670
the beginning<font color="#CCCCCC"> you see the</font><font color="#E5E5E5"> standard stuff</font>

86
00:03:18,270 --> 00:03:23,640
like preamble which is just all zeros

87
00:03:20,670 --> 00:03:27,359
<font color="#E5E5E5">and so this one little sawtooth wave is</font>

88
00:03:23,640 --> 00:03:28,738
just one<font color="#E5E5E5"> symbol and this repeats for a</font>

89
00:03:27,360 --> 00:03:31,230
number<font color="#E5E5E5"> of times and then you have the</font>

90
00:03:28,739 --> 00:03:32,970
frame<font color="#E5E5E5"> sync and frequency sink</font><font color="#CCCCCC"> was</font>

91
00:03:31,230 --> 00:03:34,560
functions just to make<font color="#E5E5E5"> sure that the</font>

92
00:03:32,970 --> 00:03:37,620
receiver<font color="#E5E5E5"> is synchronized in time and</font>

93
00:03:34,560 --> 00:03:41,100
<font color="#E5E5E5">frequency</font><font color="#CCCCCC"> to the transmitter</font><font color="#E5E5E5"> and then we</font>

94
00:03:37,620 --> 00:03:43,110
have a header which basically encodes

95
00:03:41,100 --> 00:03:44,640
some information about the coding<font color="#E5E5E5"> rate</font>

96
00:03:43,110 --> 00:03:46,620
used whether there is a<font color="#E5E5E5"> CRC in the</font>

97
00:03:44,640 --> 00:03:48,690
<font color="#E5E5E5">payloads and then we have the payloads</font>

98
00:03:46,620 --> 00:03:50,790
itself<font color="#E5E5E5"> and actually in the case of Laura</font>

99
00:03:48,690 --> 00:03:53,850
<font color="#CCCCCC">there can be some symbols from the</font>

100
00:03:50,790 --> 00:03:55,560
payload<font color="#E5E5E5"> in the header as</font><font color="#CCCCCC"> well so this</font>

101
00:03:53,850 --> 00:03:57,870
<font color="#E5E5E5">frame structure can</font><font color="#CCCCCC"> be easily</font><font color="#E5E5E5"> derived</font>

102
00:03:55,560 --> 00:03:58,950
from the patent<font color="#E5E5E5"> and here's the link if</font>

103
00:03:57,870 --> 00:04:01,050
you're interested

104
00:03:58,950 --> 00:04:03,660
it also contains<font color="#CCCCCC"> information on how</font>

105
00:04:01,050 --> 00:04:06,720
exactly<font color="#E5E5E5"> they encode data into this</font>

106
00:04:03,660 --> 00:04:09,450
format so<font color="#CCCCCC"> the modulation and</font>

107
00:04:06,720 --> 00:04:11,750
interleaving some other information<font color="#CCCCCC"> is</font>

108
00:04:09,450 --> 00:04:14,609
<font color="#CCCCCC">located in data sheets</font><font color="#E5E5E5"> for example</font>

109
00:04:11,750 --> 00:04:17,760
<font color="#E5E5E5">whitening and coding is</font><font color="#CCCCCC"> not covered in</font>

110
00:04:14,610 --> 00:04:21,510
the patents but it's somewhat discussed

111
00:04:17,760 --> 00:04:24,810
in the white papers<font color="#E5E5E5"> so with that let's</font>

112
00:04:21,510 --> 00:04:26,490
<font color="#E5E5E5">start building a receiver now usually</font>

113
00:04:24,810 --> 00:04:29,550
<font color="#E5E5E5">the first step that you would do is</font>

114
00:04:26,490 --> 00:04:31,140
detect the<font color="#CCCCCC"> signal and</font><font color="#E5E5E5"> detecting is a</font>

115
00:04:29,550 --> 00:04:32,100
pretty standard problem<font color="#E5E5E5"> in signal</font>

116
00:04:31,140 --> 00:04:33,960
processing so you can

117
00:04:32,100 --> 00:04:36,360
<font color="#E5E5E5">just really any algorithm that works for</font>

118
00:04:33,960 --> 00:04:39,289
you<font color="#CCCCCC"> for me I chose</font><font color="#E5E5E5"> this algorithm which</font>

119
00:04:36,360 --> 00:04:41,610
<font color="#CCCCCC">exploits the autocorrelation</font><font color="#E5E5E5"> of</font>

120
00:04:39,290 --> 00:04:43,110
repeating<font color="#E5E5E5"> preamble so you just take the</font>

121
00:04:41,610 --> 00:04:45,740
<font color="#E5E5E5">auto correlation between these two</font><font color="#CCCCCC"> for</font>

122
00:04:43,110 --> 00:04:49,860
example<font color="#CCCCCC"> and then you</font><font color="#E5E5E5"> will see that as</font>

123
00:04:45,740 --> 00:04:51,840
the symbols get more similar<font color="#CCCCCC"> then you</font>

124
00:04:49,860 --> 00:04:54,210
can see the metric rising and then it

125
00:04:51,840 --> 00:04:56,250
approaches<font color="#E5E5E5"> one for example</font><font color="#CCCCCC"> but now we</font>

126
00:04:54,210 --> 00:04:59,250
<font color="#E5E5E5">still</font><font color="#CCCCCC"> need to find</font><font color="#E5E5E5"> out what the start is</font>

127
00:04:56,250 --> 00:05:01,590
of a single<font color="#CCCCCC"> symbol so I drew these red</font>

128
00:04:59,250 --> 00:05:04,260
<font color="#E5E5E5">lines on the graph</font><font color="#CCCCCC"> and those are drawn</font>

129
00:05:01,590 --> 00:05:05,549
by myself so<font color="#E5E5E5"> we still have to find where</font>

130
00:05:04,260 --> 00:05:07,200
this position is<font color="#CCCCCC"> exactly and if you</font>

131
00:05:05,550 --> 00:05:08,520
would<font color="#CCCCCC"> thresholds on this</font><font color="#E5E5E5"> metric then</font>

132
00:05:07,200 --> 00:05:09,719
that would<font color="#E5E5E5"> probably be a</font><font color="#CCCCCC"> very bad</font>

133
00:05:08,520 --> 00:05:12,390
<font color="#E5E5E5">approach because you would end up</font>

134
00:05:09,720 --> 00:05:14,580
<font color="#E5E5E5">something around here or around here</font>

135
00:05:12,390 --> 00:05:17,250
which is not ideal<font color="#CCCCCC"> so</font><font color="#E5E5E5"> trash holding is</font>

136
00:05:14,580 --> 00:05:20,250
bad<font color="#E5E5E5"> and to synchronize again you have</font>

137
00:05:17,250 --> 00:05:22,680
multiple possibilities<font color="#CCCCCC"> I saw some people</font>

138
00:05:20,250 --> 00:05:24,210
<font color="#E5E5E5">that do modulate the</font><font color="#CCCCCC"> preamble symbol</font>

139
00:05:22,680 --> 00:05:25,770
which<font color="#CCCCCC"> is supposed to</font><font color="#E5E5E5"> be 0 and therefore</font>

140
00:05:24,210 --> 00:05:27,690
<font color="#E5E5E5">if</font><font color="#CCCCCC"> you have an</font><font color="#E5E5E5"> offset from</font><font color="#CCCCCC"> zero then</font>

141
00:05:25,770 --> 00:05:30,299
<font color="#E5E5E5">that indicates a time shift which is the</font>

142
00:05:27,690 --> 00:05:31,980
basic principle of<font color="#CCCCCC"> Laurel</font><font color="#E5E5E5"> mutilation but</font>

143
00:05:30,300 --> 00:05:34,440
in that<font color="#E5E5E5"> case you</font><font color="#CCCCCC"> would have some</font>

144
00:05:31,980 --> 00:05:35,940
ambiguity<font color="#CCCCCC"> because there is if you have a</font>

145
00:05:34,440 --> 00:05:38,400
frequency shift and that<font color="#E5E5E5"> will</font><font color="#CCCCCC"> also cause</font>

146
00:05:35,940 --> 00:05:40,440
<font color="#E5E5E5">offset from</font><font color="#CCCCCC"> zero so what I chose to do</font>

147
00:05:38,400 --> 00:05:41,849
<font color="#CCCCCC">instead is</font><font color="#E5E5E5"> I just cross correlates with</font>

148
00:05:40,440 --> 00:05:44,130
the instantaneous<font color="#E5E5E5"> frequency and then you</font>

149
00:05:41,850 --> 00:05:46,080
get a metric<font color="#CCCCCC"> that looks like</font><font color="#E5E5E5"> this so you</font>

150
00:05:44,130 --> 00:05:48,050
locally generates<font color="#E5E5E5"> a preamble yourself</font>

151
00:05:46,080 --> 00:05:51,510
and then<font color="#E5E5E5"> cross correlated and it will be</font>

152
00:05:48,050 --> 00:05:54,000
near or close<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> at the start of the</font>

153
00:05:51,510 --> 00:05:57,349
symbol so with<font color="#E5E5E5"> that you can synchronize</font>

154
00:05:54,000 --> 00:05:57,350
<font color="#CCCCCC">to single symbol</font>

155
00:06:03,560 --> 00:06:11,130
<font color="#E5E5E5">okay now the next question</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> how do we</font>

156
00:06:08,010 --> 00:06:14,219
demodulates<font color="#CCCCCC"> a single symbol</font><font color="#E5E5E5"> so the</font>

157
00:06:11,130 --> 00:06:16,650
modulation<font color="#E5E5E5"> of Laura is based on CSS and</font>

158
00:06:14,220 --> 00:06:18,990
it uses<font color="#E5E5E5"> chirps so chirp is basically</font>

159
00:06:16,650 --> 00:06:20,640
just<font color="#E5E5E5"> signal that's linearly increases in</font>

160
00:06:18,990 --> 00:06:22,440
frequency over<font color="#CCCCCC"> time so it starts</font><font color="#E5E5E5"> at the</font>

161
00:06:20,640 --> 00:06:24,719
negative frequency<font color="#E5E5E5"> then you can see it</font>

162
00:06:22,440 --> 00:06:26,100
increasing until it reaches zero and

163
00:06:24,720 --> 00:06:28,260
then you<font color="#CCCCCC"> can see the</font><font color="#E5E5E5"> zero</font><font color="#CCCCCC"> here and then</font>

164
00:06:26,100 --> 00:06:30,960
<font color="#CCCCCC">its increases back so to modulate</font><font color="#E5E5E5"> a</font>

165
00:06:28,260 --> 00:06:32,130
value<font color="#CCCCCC"> I for example on to the chirp what</font>

166
00:06:30,960 --> 00:06:35,609
you would do is he would<font color="#E5E5E5"> psychically</font>

167
00:06:32,130 --> 00:06:37,170
shift it so in this example<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see</font>

168
00:06:35,610 --> 00:06:39,870
<font color="#E5E5E5">the set the signal shifted to the</font><font color="#CCCCCC"> left</font>

169
00:06:37,170 --> 00:06:42,810
<font color="#E5E5E5">and this will result in something that</font>

170
00:06:39,870 --> 00:06:44,640
looks like<font color="#E5E5E5"> this and for this</font><font color="#CCCCCC"> example the</font>

171
00:06:42,810 --> 00:06:46,410
<font color="#CCCCCC">value</font><font color="#E5E5E5"> is 20 but normally you wouldn't</font>

172
00:06:44,640 --> 00:06:48,780
know that<font color="#E5E5E5"> because the patent is very</font>

173
00:06:46,410 --> 00:06:53,970
<font color="#E5E5E5">secretive about how with this</font><font color="#CCCCCC"> shift is</font>

174
00:06:48,780 --> 00:06:55,500
<font color="#CCCCCC">really mapped to</font><font color="#E5E5E5"> real value but</font><font color="#CCCCCC"> now we</font>

175
00:06:53,970 --> 00:06:57,630
have seen<font color="#E5E5E5"> how to modulate it but how do</font>

176
00:06:55,500 --> 00:07:00,210
<font color="#E5E5E5">we give modulate so you when you receive</font>

177
00:06:57,630 --> 00:07:02,700
<font color="#CCCCCC">a lower signal he receive chirp so that</font>

178
00:07:00,210 --> 00:07:04,260
<font color="#E5E5E5">already shifted so we need to do the</font>

179
00:07:02,700 --> 00:07:06,599
reverse<font color="#E5E5E5"> operation and that can be done</font>

180
00:07:04,260 --> 00:07:09,050
by<font color="#E5E5E5"> multiplying by the conjugate base</font>

181
00:07:06,600 --> 00:07:11,910
chirp so just the<font color="#E5E5E5"> base ship with the</font>

182
00:07:09,050 --> 00:07:14,250
imaginary<font color="#E5E5E5"> parts negated and then we</font>

183
00:07:11,910 --> 00:07:15,840
sample<font color="#CCCCCC"> it</font><font color="#E5E5E5"> the chirp rate and the details</font>

184
00:07:14,250 --> 00:07:17,910
are not important<font color="#CCCCCC"> but it boils down to</font>

185
00:07:15,840 --> 00:07:20,099
<font color="#E5E5E5">when you do that and you take the F of T</font>

186
00:07:17,910 --> 00:07:22,560
then<font color="#E5E5E5"> you get a peak in the frequency</font>

187
00:07:20,100 --> 00:07:25,950
domain where the<font color="#CCCCCC"> modulated value should</font>

188
00:07:22,560 --> 00:07:28,080
<font color="#CCCCCC">be so for example for the preamble which</font>

189
00:07:25,950 --> 00:07:30,780
is always<font color="#CCCCCC"> zero three M symbols are</font>

190
00:07:28,080 --> 00:07:34,380
always<font color="#E5E5E5"> zero so the peak you will get is</font>

191
00:07:30,780 --> 00:07:36,000
at index<font color="#E5E5E5"> zero for the shift</font><font color="#CCCCCC"> its symbol</font>

192
00:07:34,380 --> 00:07:37,170
<font color="#E5E5E5">there's something strange going on</font>

193
00:07:36,000 --> 00:07:39,690
because<font color="#E5E5E5"> you can see that it's not</font>

194
00:07:37,170 --> 00:07:43,160
<font color="#E5E5E5">exactly 2 nd it's 24 and that's because</font>

195
00:07:39,690 --> 00:07:46,890
<font color="#E5E5E5">this in axis what's called</font><font color="#CCCCCC"> gray codes</font>

196
00:07:43,160 --> 00:07:52,080
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so after the demolition you have</font>

197
00:07:46,890 --> 00:07:53,969
basically a<font color="#CCCCCC"> list of chip values and now</font>

198
00:07:52,080 --> 00:07:57,780
we need<font color="#E5E5E5"> to do some other things to get</font>

199
00:07:53,970 --> 00:07:59,490
to<font color="#CCCCCC"> our ultimate data the interleaving</font>

200
00:07:57,780 --> 00:08:03,049
algorithm is described in the<font color="#CCCCCC"> Laura</font>

201
00:07:59,490 --> 00:08:05,610
patent as well<font color="#E5E5E5"> and it's dependent on two</font>

202
00:08:03,050 --> 00:08:07,200
configurations<font color="#E5E5E5"> the first is a spreading</font>

203
00:08:05,610 --> 00:08:09,450
factor which determines the<font color="#E5E5E5"> number of</font>

204
00:08:07,200 --> 00:08:10,710
<font color="#E5E5E5">bits per symbol</font><font color="#CCCCCC"> values so here you</font><font color="#E5E5E5"> can</font>

205
00:08:09,450 --> 00:08:13,150
see the spreading<font color="#E5E5E5"> factor in this</font>

206
00:08:10,710 --> 00:08:15,549
direction<font color="#E5E5E5"> in this case the spare</font>

207
00:08:13,150 --> 00:08:17,349
factor is<font color="#CCCCCC"> seven and then there is the</font>

208
00:08:15,550 --> 00:08:19,450
coding rate which<font color="#CCCCCC"> is determines</font><font color="#E5E5E5"> how many</font>

209
00:08:17,350 --> 00:08:22,030
symbols there are in the<font color="#E5E5E5"> interleaf</font>

210
00:08:19,450 --> 00:08:25,210
matrix<font color="#E5E5E5"> so this should correspond to the</font>

211
00:08:22,030 --> 00:08:28,840
coding rate so in<font color="#E5E5E5"> this case it's eight</font>

212
00:08:25,210 --> 00:08:30,820
<font color="#E5E5E5">since we</font><font color="#CCCCCC"> use four eight coding so now if</font>

213
00:08:28,840 --> 00:08:33,280
<font color="#E5E5E5">you</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> this matrix what Laura does</font>

214
00:08:30,820 --> 00:08:35,260
it essentially<font color="#E5E5E5"> transposes this matrix</font>

215
00:08:33,280 --> 00:08:37,990
and then<font color="#E5E5E5"> walks through it in a diagonal</font>

216
00:08:35,260 --> 00:08:39,880
fashion<font color="#E5E5E5"> so for example for the</font><font color="#CCCCCC"> last code</font>

217
00:08:37,990 --> 00:08:41,620
words you would just start here then

218
00:08:39,880 --> 00:08:43,000
move<font color="#E5E5E5"> upwards in a diagonal way and when</font>

219
00:08:41,620 --> 00:08:45,310
you reach the<font color="#E5E5E5"> top you</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> continue from</font>

220
00:08:43,000 --> 00:08:47,950
<font color="#CCCCCC">the bottom and this is pretty easy to</font>

221
00:08:45,310 --> 00:08:49,390
<font color="#CCCCCC">implement in</font><font color="#E5E5E5"> software so you can just do</font>

222
00:08:47,950 --> 00:08:51,610
<font color="#E5E5E5">this for the entire</font><font color="#CCCCCC"> matrix and you will</font>

223
00:08:49,390 --> 00:08:53,830
end up<font color="#CCCCCC"> with a list</font><font color="#E5E5E5"> of the interleaved</font>

224
00:08:51,610 --> 00:08:55,330
code words now as you may notice the

225
00:08:53,830 --> 00:08:57,880
advantage of<font color="#E5E5E5"> using this technique is</font>

226
00:08:55,330 --> 00:09:00,100
<font color="#E5E5E5">that if you have for example this symbol</font>

227
00:08:57,880 --> 00:09:03,460
<font color="#E5E5E5">right</font><font color="#CCCCCC"> here if it gets entirely corrupted</font>

228
00:09:00,100 --> 00:09:05,290
<font color="#E5E5E5">then it turns out that only the</font><font color="#CCCCCC"> 30 last</font>

229
00:09:03,460 --> 00:09:07,000
column<font color="#E5E5E5"> of bits will be corrupted</font><font color="#CCCCCC"> and</font>

230
00:09:05,290 --> 00:09:09,240
this can be corrected<font color="#CCCCCC"> for since</font><font color="#E5E5E5"> we use</font>

231
00:09:07,000 --> 00:09:14,470
<font color="#CCCCCC">timing coding so we can just</font><font color="#E5E5E5"> correct</font>

232
00:09:09,240 --> 00:09:19,150
<font color="#E5E5E5">this code words now what's left to be</font>

233
00:09:14,470 --> 00:09:22,000
<font color="#E5E5E5">done</font><font color="#CCCCCC"> so in the</font><font color="#E5E5E5"> previous</font><font color="#CCCCCC"> slides</font><font color="#E5E5E5"> I told</font>

234
00:09:19,150 --> 00:09:24,160
you guys that<font color="#E5E5E5"> there that</font><font color="#CCCCCC"> the index is</font>

235
00:09:22,000 --> 00:09:26,500
<font color="#CCCCCC">great code it means</font><font color="#E5E5E5"> how would you</font>

236
00:09:24,160 --> 00:09:28,270
reverse engineer<font color="#CCCCCC"> yet because it's</font><font color="#E5E5E5"> not in</font>

237
00:09:26,500 --> 00:09:29,950
<font color="#E5E5E5">the patent or yeah it mentions grain</font>

238
00:09:28,270 --> 00:09:32,470
coding but<font color="#E5E5E5"> it's not clear whether this</font>

239
00:09:29,950 --> 00:09:35,290
is which index corresponds to which

240
00:09:32,470 --> 00:09:37,000
integer value and<font color="#CCCCCC"> also</font><font color="#E5E5E5"> at which stage of</font>

241
00:09:35,290 --> 00:09:38,920
the decoding is wighting performed and

242
00:09:37,000 --> 00:09:41,470
how that's also something<font color="#CCCCCC"> that's not</font>

243
00:09:38,920 --> 00:09:43,479
known there are some more<font color="#E5E5E5"> to it for</font>

244
00:09:41,470 --> 00:09:45,190
<font color="#E5E5E5">example the structure of the header</font>

245
00:09:43,480 --> 00:09:46,690
that's<font color="#E5E5E5"> used lower around the clock drift</font>

246
00:09:45,190 --> 00:09:49,300
correction and then there are<font color="#E5E5E5"> some weird</font>

247
00:09:46,690 --> 00:09:51,490
stuff like Laura<font color="#E5E5E5"> appears to swap nibbles</font>

248
00:09:49,300 --> 00:09:55,319
which is something that<font color="#E5E5E5"> GSM also does if</font>

249
00:09:51,490 --> 00:09:57,730
I'm correct<font color="#E5E5E5"> and it's some weird</font><font color="#CCCCCC"> CRC so</font>

250
00:09:55,320 --> 00:10:01,540
we don't we<font color="#CCCCCC"> won't have a</font><font color="#E5E5E5"> time to</font><font color="#CCCCCC"> discuss</font>

251
00:09:57,730 --> 00:10:03,610
that in<font color="#E5E5E5"> this presentation so anyway</font><font color="#CCCCCC"> on</font>

252
00:10:01,540 --> 00:10:06,280
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the relation between the symbol and</font>

253
00:10:03,610 --> 00:10:09,940
<font color="#E5E5E5">the integer value so here we have our</font>

254
00:10:06,280 --> 00:10:12,490
example<font color="#CCCCCC"> again with I equals 20 with a</font>

255
00:10:09,940 --> 00:10:15,460
certain shift<font color="#E5E5E5"> and there are multiple</font>

256
00:10:12,490 --> 00:10:17,590
<font color="#E5E5E5">ways</font><font color="#CCCCCC"> to interpret this</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> you</font>

257
00:10:15,460 --> 00:10:19,480
could interpret the<font color="#CCCCCC"> x-axis as this so</font>

258
00:10:17,590 --> 00:10:21,220
this<font color="#E5E5E5"> is equal to 24 but then the</font>

259
00:10:19,480 --> 00:10:24,860
question<font color="#E5E5E5"> is do we use</font><font color="#CCCCCC"> gray encoding or</font>

260
00:10:21,220 --> 00:10:27,050
<font color="#E5E5E5">gray decoding to get the real value of I</font>

261
00:10:24,860 --> 00:10:29,390
and similarly we can interpret the

262
00:10:27,050 --> 00:10:32,810
x-axis as<font color="#E5E5E5"> inverted so in that case this</font>

263
00:10:29,390 --> 00:10:35,449
would be<font color="#E5E5E5"> 103</font><font color="#CCCCCC"> or we can do degree of 103</font>

264
00:10:32,810 --> 00:10:37,520
so check for<font color="#E5E5E5"> correctness</font><font color="#CCCCCC"> what we can do</font>

265
00:10:35,450 --> 00:10:39,080
is you can implement<font color="#E5E5E5"> the decoder</font><font color="#CCCCCC"> up to</font>

266
00:10:37,520 --> 00:10:42,050
the interleaving stage and start looking

267
00:10:39,080 --> 00:10:43,340
for<font color="#E5E5E5"> patterns if there is some pattern</font>

268
00:10:42,050 --> 00:10:44,689
that doesn't<font color="#E5E5E5"> match up with other</font>

269
00:10:43,340 --> 00:10:46,930
payloads<font color="#E5E5E5"> then you know that there is</font>

270
00:10:44,690 --> 00:10:50,930
something wrong with<font color="#E5E5E5"> your assumptions so</font>

271
00:10:46,930 --> 00:10:53,000
let's take a look at an example<font color="#E5E5E5"> so in</font>

272
00:10:50,930 --> 00:10:56,089
the<font color="#E5E5E5"> top left</font><font color="#CCCCCC"> quadrants I have</font><font color="#E5E5E5"> printed</font>

273
00:10:53,000 --> 00:10:59,860
out all<font color="#CCCCCC"> headers symbols when using</font>

274
00:10:56,090 --> 00:11:02,840
<font color="#E5E5E5">right-to-left indexing so 127 to 0 and</font>

275
00:10:59,860 --> 00:11:05,390
using<font color="#CCCCCC"> gray encoding</font><font color="#E5E5E5"> to get the value of</font>

276
00:11:02,840 --> 00:11:07,610
<font color="#E5E5E5">the symbol so I'm gonna give you some</font>

277
00:11:05,390 --> 00:11:09,230
time<font color="#CCCCCC"> to look at this and let's see</font><font color="#E5E5E5"> if</font>

278
00:11:07,610 --> 00:11:12,680
you can figure out where the length is

279
00:11:09,230 --> 00:11:14,300
used<font color="#E5E5E5"> here is the length at I so this is</font>

280
00:11:12,680 --> 00:11:15,979
<font color="#E5E5E5">something I added myself this is just</font>

281
00:11:14,300 --> 00:11:17,810
the length of the packet<font color="#E5E5E5"> that I sent so</font>

282
00:11:15,980 --> 00:11:19,700
you should see some pattern<font color="#E5E5E5"> that stays</font>

283
00:11:17,810 --> 00:11:21,619
the same here and then increases here

284
00:11:19,700 --> 00:11:26,420
and again stays the same here and then

285
00:11:21,620 --> 00:11:28,250
increases in the lower nibble<font color="#E5E5E5"> and so if</font>

286
00:11:26,420 --> 00:11:29,870
you look closely you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font>

287
00:11:28,250 --> 00:11:32,750
<font color="#E5E5E5">pattern appears to emerge here because</font>

288
00:11:29,870 --> 00:11:37,520
you have this looks like 0 and then it's

289
00:11:32,750 --> 00:11:39,530
1 2 3<font color="#E5E5E5"> then you have here</font><font color="#CCCCCC"> 1 and again</font><font color="#E5E5E5"> 0 1</font>

290
00:11:37,520 --> 00:11:41,990
2 and the ones the Tuesday even

291
00:11:39,530 --> 00:11:44,060
correspond<font color="#E5E5E5"> but</font><font color="#CCCCCC"> there's something</font><font color="#E5E5E5"> strange</font>

292
00:11:41,990 --> 00:11:46,280
going on<font color="#CCCCCC"> because I said before that the</font>

293
00:11:44,060 --> 00:11:50,030
header is<font color="#CCCCCC"> not white and it appears</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

294
00:11:46,280 --> 00:11:52,459
that's in this case for<font color="#CCCCCC"> example a 2 is</font>

295
00:11:50,030 --> 00:11:54,140
not equal<font color="#CCCCCC"> to</font><font color="#E5E5E5"> 2 it's</font><font color="#CCCCCC"> just all zeros so</font>

296
00:11:52,460 --> 00:11:56,360
there's<font color="#CCCCCC"> something</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> weird going on</font>

297
00:11:54,140 --> 00:11:57,980
<font color="#E5E5E5">and also if you take</font><font color="#CCCCCC"> a 2 from</font><font color="#E5E5E5"> the</font>

298
00:11:56,360 --> 00:11:59,890
<font color="#E5E5E5">highest level and go to the lower level</font>

299
00:11:57,980 --> 00:12:03,770
then you can see that I<font color="#CCCCCC"> don't match so</font>

300
00:11:59,890 --> 00:12:06,560
that's<font color="#E5E5E5"> not correct</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> let's go to</font><font color="#CCCCCC"> gray</font>

301
00:12:03,770 --> 00:12:08,660
decoding<font color="#E5E5E5"> in that case it's even weirder</font>

302
00:12:06,560 --> 00:12:12,410
<font color="#CCCCCC">because in this case you'll have some</font>

303
00:12:08,660 --> 00:12:13,550
bits that are added or removed<font color="#CCCCCC"> so this</font>

304
00:12:12,410 --> 00:12:15,530
indicates<font color="#E5E5E5"> that there</font><font color="#CCCCCC"> is something</font><font color="#E5E5E5"> really</font>

305
00:12:13,550 --> 00:12:17,449
<font color="#E5E5E5">wrong</font><font color="#CCCCCC"> with the previous</font><font color="#E5E5E5"> layers of your</font>

306
00:12:15,530 --> 00:12:20,449
decoder so we can actually discard this

307
00:12:17,450 --> 00:12:22,010
whole column right here<font color="#E5E5E5"> and the right</font>

308
00:12:20,450 --> 00:12:24,200
solution turns out<font color="#CCCCCC"> to be left-to-right</font>

309
00:12:22,010 --> 00:12:25,670
indexing and gray encoding<font color="#E5E5E5"> and in this</font>

310
00:12:24,200 --> 00:12:28,850
case you<font color="#E5E5E5"> would get like you would expect</font>

311
00:12:25,670 --> 00:12:32,000
expect<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> 0 is effectively</font><font color="#CCCCCC"> 0 as a</font>

312
00:12:28,850 --> 00:12:35,750
<font color="#E5E5E5">Hamming code and it's consistent with</font>

313
00:12:32,000 --> 00:12:38,030
<font color="#CCCCCC">the highest</font><font color="#E5E5E5"> and lowest nibble the only</font>

314
00:12:35,750 --> 00:12:40,190
weird thing is<font color="#E5E5E5"> that the order chain</font>

315
00:12:38,030 --> 00:12:44,449
so first we<font color="#CCCCCC"> had two lengths here</font><font color="#E5E5E5"> and now</font>

316
00:12:40,190 --> 00:12:49,040
it<font color="#CCCCCC"> appears in these two columns all</font>

317
00:12:44,450 --> 00:12:51,050
<font color="#E5E5E5">right so now</font><font color="#CCCCCC"> that we have reversed</font><font color="#E5E5E5"> the</font>

318
00:12:49,040 --> 00:12:52,760
interleaving<font color="#E5E5E5"> and all the other aspects</font>

319
00:12:51,050 --> 00:12:55,579
there are still two<font color="#CCCCCC"> more aspects to</font>

320
00:12:52,760 --> 00:12:57,170
reverse and that's<font color="#CCCCCC"> the coding</font><font color="#E5E5E5"> but since</font>

321
00:12:55,580 --> 00:12:58,760
we use<font color="#E5E5E5"> four five coding and four eight</font>

322
00:12:57,170 --> 00:13:00,469
coding as options<font color="#E5E5E5"> that's already a</font>

323
00:12:58,760 --> 00:13:03,230
strong indication<font color="#CCCCCC"> that probably Hamming</font>

324
00:13:00,470 --> 00:13:04,760
coding is used<font color="#E5E5E5"> but those of you who know</font>

325
00:13:03,230 --> 00:13:06,230
<font color="#E5E5E5">about Hamming coding might notice</font>

326
00:13:04,760 --> 00:13:08,270
something<font color="#E5E5E5"> strange because the indexing</font>

327
00:13:06,230 --> 00:13:09,560
doesn't really or the<font color="#CCCCCC"> end the size</font><font color="#E5E5E5"> of</font>

328
00:13:08,270 --> 00:13:13,100
the bits<font color="#CCCCCC"> don't really match up with</font>

329
00:13:09,560 --> 00:13:14,900
<font color="#E5E5E5">standards Hamming coding and</font><font color="#CCCCCC"> also it</font>

330
00:13:13,100 --> 00:13:17,750
<font color="#CCCCCC">turns out the payload is</font><font color="#E5E5E5"> white and so</font>

331
00:13:14,900 --> 00:13:20,090
that means<font color="#CCCCCC"> X sort with a random string</font>

332
00:13:17,750 --> 00:13:24,170
<font color="#E5E5E5">basically and this</font><font color="#CCCCCC"> is to make the data</font>

333
00:13:20,090 --> 00:13:26,240
more uniform they<font color="#E5E5E5"> mention the algorithm</font>

334
00:13:24,170 --> 00:13:29,569
<font color="#E5E5E5">used for that in a</font><font color="#CCCCCC"> datasheet</font><font color="#E5E5E5"> but this</font>

335
00:13:26,240 --> 00:13:30,890
<font color="#E5E5E5">doesn't appear to work in practice so in</font>

336
00:13:29,570 --> 00:13:32,660
that case you<font color="#E5E5E5"> need to answer another</font>

337
00:13:30,890 --> 00:13:36,530
question<font color="#CCCCCC"> and that's in what stage is</font>

338
00:13:32,660 --> 00:13:38,870
this data<font color="#CCCCCC"> widened all right so the first</font>

339
00:13:36,530 --> 00:13:41,390
<font color="#E5E5E5">solution for me was to just</font><font color="#CCCCCC"> brute-force</font>

340
00:13:38,870 --> 00:13:43,100
<font color="#CCCCCC">out possibilities for the whitening</font>

341
00:13:41,390 --> 00:13:45,350
sequence<font color="#E5E5E5"> what you can do is you can just</font>

342
00:13:43,100 --> 00:13:47,090
<font color="#E5E5E5">send a payload with all zeros</font><font color="#CCCCCC"> because if</font>

343
00:13:45,350 --> 00:13:49,220
you XOR something with all<font color="#CCCCCC"> zeros and</font><font color="#E5E5E5"> you</font>

344
00:13:47,090 --> 00:13:51,530
just get the value itself<font color="#E5E5E5"> so in that</font>

345
00:13:49,220 --> 00:13:53,840
case when the result<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our payload is</font>

346
00:13:51,530 --> 00:13:55,310
all<font color="#E5E5E5"> zeros we just end up with getting</font>

347
00:13:53,840 --> 00:13:56,960
the whitening sequence which we can

348
00:13:55,310 --> 00:14:00,770
store<font color="#E5E5E5"> in an array and</font><font color="#CCCCCC"> then use for</font>

349
00:13:56,960 --> 00:14:03,320
<font color="#E5E5E5">future packets</font><font color="#CCCCCC"> now if anyone has an idea</font>

350
00:14:00,770 --> 00:14:05,360
<font color="#E5E5E5">of how to do this more algebraically</font><font color="#CCCCCC"> I</font>

351
00:14:03,320 --> 00:14:08,510
would be happy<font color="#CCCCCC"> to learn it</font><font color="#E5E5E5"> because there</font>

352
00:14:05,360 --> 00:14:10,430
is<font color="#E5E5E5"> a library somewhere that seems to</font>

353
00:14:08,510 --> 00:14:13,069
have an algorithm<font color="#CCCCCC"> for generating it</font>

354
00:14:10,430 --> 00:14:15,349
algebraically but the<font color="#CCCCCC"> writing sequence</font>

355
00:14:13,070 --> 00:14:18,110
doesn't<font color="#E5E5E5"> really match up with my own and</font>

356
00:14:15,350 --> 00:14:22,280
also<font color="#E5E5E5"> if you try to decode</font><font color="#CCCCCC"> you get some</font>

357
00:14:18,110 --> 00:14:24,830
weird values sometimes<font color="#E5E5E5"> so and then there</font>

358
00:14:22,280 --> 00:14:27,020
is<font color="#CCCCCC"> Hamming code so as I said</font><font color="#E5E5E5"> before the</font>

359
00:14:24,830 --> 00:14:29,270
<font color="#E5E5E5">finishes are not equal to</font><font color="#CCCCCC"> standards</font>

360
00:14:27,020 --> 00:14:31,430
Hamming so they are permuted<font color="#CCCCCC"> and so we</font>

361
00:14:29,270 --> 00:14:33,319
can just go<font color="#CCCCCC"> over all possible</font>

362
00:14:31,430 --> 00:14:35,209
permutations<font color="#CCCCCC"> of a single byte which is</font>

363
00:14:33,320 --> 00:14:37,670
not that<font color="#E5E5E5"> hard to</font><font color="#CCCCCC"> calculate so it's only</font>

364
00:14:35,210 --> 00:14:41,870
this<font color="#CCCCCC"> amount of possibilities and it was</font>

365
00:14:37,670 --> 00:14:43,670
pretty easy<font color="#E5E5E5"> to</font><font color="#CCCCCC"> brute-force alright so</font>

366
00:14:41,870 --> 00:14:45,920
now we have<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the required</font>

367
00:14:43,670 --> 00:14:48,650
<font color="#CCCCCC">components</font><font color="#E5E5E5"> linked together in order to</font>

368
00:14:45,920 --> 00:14:49,439
<font color="#E5E5E5">build a fully functional decoder</font><font color="#CCCCCC"> so we</font>

369
00:14:48,650 --> 00:14:51,390
have

370
00:14:49,440 --> 00:14:53,250
<font color="#CCCCCC">just</font><font color="#E5E5E5"> are we amulet</font><font color="#CCCCCC"> action sync</font>

371
00:14:51,390 --> 00:14:56,069
modulation and leaving<font color="#CCCCCC"> lightning</font><font color="#E5E5E5"> coding</font>

372
00:14:53,250 --> 00:14:59,160
and then<font color="#E5E5E5"> we have our raw</font><font color="#CCCCCC"> data</font>

373
00:14:56,070 --> 00:15:00,840
<font color="#E5E5E5">I have implemented the decoder for this</font>

374
00:14:59,160 --> 00:15:02,640
and it's also open source on github if

375
00:15:00,840 --> 00:15:03,060
you want to<font color="#E5E5E5"> check it out feel free</font><font color="#CCCCCC"> to do</font>

376
00:15:02,640 --> 00:15:05,699
so

377
00:15:03,060 --> 00:15:09,390
I made a<font color="#CCCCCC"> comparison with</font><font color="#E5E5E5"> real</font><font color="#CCCCCC"> hardware</font>

378
00:15:05,700 --> 00:15:12,300
for various number of payloads<font color="#E5E5E5"> and as</font>

379
00:15:09,390 --> 00:15:13,980
you can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> there is it's still quite a</font>

380
00:15:12,300 --> 00:15:16,770
lot worse so there's still some<font color="#E5E5E5"> work to</font>

381
00:15:13,980 --> 00:15:19,440
be<font color="#E5E5E5"> done</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> example the real</font><font color="#CCCCCC"> lower</font>

382
00:15:16,770 --> 00:15:22,280
hardware is<font color="#CCCCCC"> capable</font><font color="#E5E5E5"> of even decoding</font>

383
00:15:19,440 --> 00:15:24,600
packets<font color="#E5E5E5"> that go below</font><font color="#CCCCCC"> the noise</font><font color="#E5E5E5"> floor so</font>

384
00:15:22,280 --> 00:15:26,579
<font color="#CCCCCC">where</font><font color="#E5E5E5"> is my because of and that's</font>

385
00:15:24,600 --> 00:15:29,340
because of the methods are<font color="#CCCCCC"> at choice</font><font color="#E5E5E5"> for</font>

386
00:15:26,580 --> 00:15:31,740
the preamble<font color="#CCCCCC"> sink</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> or PML detection</font>

387
00:15:29,340 --> 00:15:35,040
and synchronization so<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> still</font>

388
00:15:31,740 --> 00:15:37,700
<font color="#E5E5E5">some work to be done here</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> advantage</font>

389
00:15:35,040 --> 00:15:40,949
<font color="#E5E5E5">of my approach is that it's virtually</font>

390
00:15:37,700 --> 00:15:42,900
not affected by frequency<font color="#E5E5E5"> errors so and</font>

391
00:15:40,950 --> 00:15:44,490
that's yeah<font color="#E5E5E5"> because of the gradient</font>

392
00:15:42,900 --> 00:15:46,170
decoding that<font color="#CCCCCC"> I implemented but</font>

393
00:15:44,490 --> 00:15:48,510
<font color="#E5E5E5">essentially this allows you to decode</font>

394
00:15:46,170 --> 00:15:53,880
multiple channels at the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> time and</font>

395
00:15:48,510 --> 00:15:55,860
that<font color="#E5E5E5"> was useful for my research alright</font>

396
00:15:53,880 --> 00:15:57,540
so special<font color="#E5E5E5"> thanks also to my students</font>

397
00:15:55,860 --> 00:15:59,520
<font color="#E5E5E5">William for implementing some</font>

398
00:15:57,540 --> 00:16:01,860
optimizations there are some other

399
00:15:59,520 --> 00:16:04,680
decoders out there which<font color="#E5E5E5"> you should also</font>

400
00:16:01,860 --> 00:16:09,060
check out there's Laura<font color="#E5E5E5"> SDR</font><font color="#CCCCCC"> and then a</font>

401
00:16:04,680 --> 00:16:10,709
<font color="#CCCCCC">busty research</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> Gia</font><font color="#E5E5E5"> Laura and so maybe</font>

402
00:16:09,060 --> 00:16:14,880
they will work better for your use case

403
00:16:10,710 --> 00:16:16,710
all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> pens I</font><font color="#E5E5E5"> guess and then let's move</font>

404
00:16:14,880 --> 00:16:18,750
<font color="#E5E5E5">on</font><font color="#CCCCCC"> to doing</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> with the decoder</font>

405
00:16:16,710 --> 00:16:21,150
so let's go to our<font color="#E5E5E5"> first</font><font color="#CCCCCC"> application</font>

406
00:16:18,750 --> 00:16:24,300
which will be fingerprinting<font color="#CCCCCC"> Laura</font>

407
00:16:21,150 --> 00:16:25,620
devices<font color="#CCCCCC"> using neural networks now you</font>

408
00:16:24,300 --> 00:16:29,449
might wonder<font color="#E5E5E5"> why would you want to</font>

409
00:16:25,620 --> 00:16:32,970
fingerprint<font color="#E5E5E5"> devices and people usually</font>

410
00:16:29,450 --> 00:16:34,770
give us the advantages in the defensive

411
00:16:32,970 --> 00:16:36,390
use cases for example<font color="#E5E5E5"> an extra layer of</font>

412
00:16:34,770 --> 00:16:38,160
<font color="#CCCCCC">defense for critical infrastructure</font>

413
00:16:36,390 --> 00:16:40,560
<font color="#E5E5E5">suppose you have some kind of</font>

414
00:16:38,160 --> 00:16:42,360
temperature sensor<font color="#CCCCCC"> that sends highly</font>

415
00:16:40,560 --> 00:16:45,119
important data<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't</font>

416
00:16:42,360 --> 00:16:46,770
<font color="#E5E5E5">want an attacker</font><font color="#CCCCCC"> to spoof temperature</font>

417
00:16:45,120 --> 00:16:48,960
readings<font color="#E5E5E5"> and don't want to make it too</font>

418
00:16:46,770 --> 00:16:50,550
hot in your<font color="#E5E5E5"> house for example then you</font>

419
00:16:48,960 --> 00:16:52,940
<font color="#CCCCCC">could use something</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that to just</font>

420
00:16:50,550 --> 00:16:55,890
<font color="#E5E5E5">check whether the fingerprint matches</font>

421
00:16:52,940 --> 00:16:57,480
<font color="#CCCCCC">also what</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> do is counter against</font>

422
00:16:55,890 --> 00:16:59,699
melee<font color="#E5E5E5"> attacks for</font><font color="#CCCCCC"> example somebody wants</font>

423
00:16:57,480 --> 00:17:01,230
<font color="#CCCCCC">to clone your car key signal and</font><font color="#E5E5E5"> forward</font>

424
00:16:59,700 --> 00:17:02,110
<font color="#CCCCCC">to somewhere else you could perfectly</font>

425
00:17:01,230 --> 00:17:04,209
detect that<font color="#E5E5E5"> you</font>

426
00:17:02,110 --> 00:17:05,439
fingerprinting algorithm<font color="#E5E5E5"> or you could</font>

427
00:17:04,209 --> 00:17:08,350
just<font color="#E5E5E5"> measure the degree</font><font color="#CCCCCC"> of privacy</font>

428
00:17:05,439 --> 00:17:11,589
provided by your device so how unique is

429
00:17:08,349 --> 00:17:14,169
your radio signal<font color="#CCCCCC"> essentially and the</font>

430
00:17:11,589 --> 00:17:17,049
office offensive<font color="#E5E5E5"> use case is exactly the</font>

431
00:17:14,170 --> 00:17:19,059
opposite so<font color="#E5E5E5"> you could use it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> link</font>

432
00:17:17,049 --> 00:17:21,220
anonymous transmissions<font color="#E5E5E5"> for example</font>

433
00:17:19,059 --> 00:17:24,399
people<font color="#E5E5E5"> have used this</font><font color="#CCCCCC"> before in</font><font color="#E5E5E5"> the case</font>

434
00:17:21,220 --> 00:17:25,870
of MAC address randomization<font color="#CCCCCC"> so even</font>

435
00:17:24,400 --> 00:17:27,069
though the mechanisms randomized in that

436
00:17:25,869 --> 00:17:29,080
case you can still go back<font color="#CCCCCC"> to the</font>

437
00:17:27,069 --> 00:17:30,970
physical<font color="#E5E5E5"> layer and fingerprint devices</font>

438
00:17:29,080 --> 00:17:32,919
on that level<font color="#E5E5E5"> and still and the</font>

439
00:17:30,970 --> 00:17:35,559
<font color="#E5E5E5">anonymize them based on the physical</font>

440
00:17:32,920 --> 00:17:37,260
<font color="#E5E5E5">layer signal so and then there is</font>

441
00:17:35,559 --> 00:17:39,820
<font color="#CCCCCC">checking the location of sensors or</font>

442
00:17:37,260 --> 00:17:42,010
mimicking radio signatures so that's the

443
00:17:39,820 --> 00:17:44,678
opposite of providing this layer<font color="#E5E5E5"> defense</font>

444
00:17:42,010 --> 00:17:46,419
<font color="#E5E5E5">and so this is kind of</font><font color="#CCCCCC"> cat</font><font color="#E5E5E5"> and mouse</font>

445
00:17:44,679 --> 00:17:48,040
game because as an attacker key if<font color="#E5E5E5"> you</font>

446
00:17:46,419 --> 00:17:49,720
have knowledge<font color="#E5E5E5"> of the algorithm that's</font>

447
00:17:48,040 --> 00:17:52,960
used<font color="#E5E5E5"> to fingerprints you can probably</font>

448
00:17:49,720 --> 00:17:56,169
exploit this and craft<font color="#E5E5E5"> your own signal</font>

449
00:17:52,960 --> 00:17:57,520
that's more closely<font color="#E5E5E5"> mimics the signature</font>

450
00:17:56,169 --> 00:17:59,830
of<font color="#E5E5E5"> the radio device that you're trying</font>

451
00:17:57,520 --> 00:18:03,480
to<font color="#E5E5E5"> spoof so it's really a cat-and-mouse</font>

452
00:17:59,830 --> 00:18:05,889
game<font color="#CCCCCC"> between attacker and</font><font color="#E5E5E5"> defender now</font>

453
00:18:03,480 --> 00:18:08,350
<font color="#E5E5E5">the theory</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> physical layer</font>

454
00:18:05,890 --> 00:18:10,270
fingerprinting says essentially that<font color="#E5E5E5"> no</font>

455
00:18:08,350 --> 00:18:13,600
two radios can be perfectly<font color="#CCCCCC"> identical so</font>

456
00:18:10,270 --> 00:18:15,549
when radio chip exits the factory it

457
00:18:13,600 --> 00:18:17,649
will have some<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of variance between</font>

458
00:18:15,549 --> 00:18:20,799
<font color="#E5E5E5">the crystal</font><font color="#CCCCCC"> oscillator frequency for</font>

459
00:18:17,650 --> 00:18:23,080
example<font color="#CCCCCC"> the components and these small</font>

460
00:18:20,799 --> 00:18:24,629
errors will manifest<font color="#E5E5E5"> as transmission</font>

461
00:18:23,080 --> 00:18:26,918
<font color="#E5E5E5">errors because for</font><font color="#CCCCCC"> example if you have a</font>

462
00:18:24,630 --> 00:18:29,020
faster crystal oscillator<font color="#E5E5E5"> or a slower</font>

463
00:18:26,919 --> 00:18:31,600
one<font color="#E5E5E5"> this will affect the frequency</font>

464
00:18:29,020 --> 00:18:33,610
offset of<font color="#CCCCCC"> the device now usually in</font><font color="#E5E5E5"> data</font>

465
00:18:31,600 --> 00:18:35,830
<font color="#E5E5E5">sheets they have defined some tolerance</font>

466
00:18:33,610 --> 00:18:38,139
for these<font color="#E5E5E5"> values for example in the case</font>

467
00:18:35,830 --> 00:18:41,590
<font color="#E5E5E5">of Laura</font><font color="#CCCCCC"> I believe you can have</font><font color="#E5E5E5"> 12</font>

468
00:18:38,140 --> 00:18:44,049
<font color="#E5E5E5">kilohertz of offset so and a larger</font>

469
00:18:41,590 --> 00:18:45,970
tolerance<font color="#E5E5E5"> also implies more entropy</font><font color="#CCCCCC"> of</font>

470
00:18:44,049 --> 00:18:47,830
course because the more you<font color="#CCCCCC"> allow your</font>

471
00:18:45,970 --> 00:18:50,679
devices<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have different properties</font><font color="#CCCCCC"> the</font>

472
00:18:47,830 --> 00:18:52,870
more the probability is higher<font color="#E5E5E5"> than that</font>

473
00:18:50,679 --> 00:18:54,250
<font color="#E5E5E5">you can fingerprint them of course so</font>

474
00:18:52,870 --> 00:18:57,010
the challenge here<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> distinguish</font>

475
00:18:54,250 --> 00:18:59,850
these particular errors caused by<font color="#CCCCCC"> the</font>

476
00:18:57,010 --> 00:19:03,120
radio out from noise from the channel

477
00:18:59,850 --> 00:19:05,260
now traditionally<font color="#CCCCCC"> people have used</font>

478
00:19:03,120 --> 00:19:07,330
what's what I like to call<font color="#E5E5E5"> expert</font>

479
00:19:05,260 --> 00:19:10,480
features so people would just<font color="#E5E5E5"> think</font>

480
00:19:07,330 --> 00:19:12,550
<font color="#CCCCCC">about what would be useful or or useful</font>

481
00:19:10,480 --> 00:19:13,660
features<font color="#CCCCCC"> to use to fingerprint</font><font color="#E5E5E5"> the</font>

482
00:19:12,550 --> 00:19:15,428
device for example<font color="#CCCCCC"> they could think</font>

483
00:19:13,660 --> 00:19:17,649
<font color="#CCCCCC">about</font><font color="#E5E5E5"> okay what</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> properties of</font>

484
00:19:15,429 --> 00:19:19,869
<font color="#E5E5E5">and for example is a preamble transient</font>

485
00:19:17,649 --> 00:19:22,658
<font color="#E5E5E5">of Bluetooth signals interesting and</font>

486
00:19:19,869 --> 00:19:24,879
then they would do some human selection

487
00:19:22,659 --> 00:19:26,320
on these<font color="#E5E5E5"> features and then take some</font>

488
00:19:24,879 --> 00:19:29,738
<font color="#E5E5E5">statistical measures for example</font><font color="#CCCCCC"> the</font>

489
00:19:26,320 --> 00:19:33,099
mean or variance or just use some SVM to

490
00:19:29,739 --> 00:19:34,809
train on this data but what<font color="#E5E5E5"> I suggested</font>

491
00:19:33,099 --> 00:19:36,009
my approach is that we<font color="#E5E5E5"> simply use a</font>

492
00:19:34,809 --> 00:19:37,809
<font color="#E5E5E5">machine learning algorithm to train on</font>

493
00:19:36,009 --> 00:19:39,489
the raw radio signal<font color="#E5E5E5"> and this line of</font>

494
00:19:37,809 --> 00:19:41,950
thought is similar to the computer

495
00:19:39,489 --> 00:19:43,179
vision<font color="#E5E5E5"> world where you have similar</font>

496
00:19:41,950 --> 00:19:46,419
techniques applied to face recognition

497
00:19:43,179 --> 00:19:48,190
<font color="#CCCCCC">and image classification</font><font color="#E5E5E5"> so you can see</font>

498
00:19:46,419 --> 00:19:49,899
an<font color="#E5E5E5"> image as a</font><font color="#CCCCCC"> 2d radio signal</font>

499
00:19:48,190 --> 00:19:51,940
essentially<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> what they do there is</font>

500
00:19:49,899 --> 00:19:53,498
<font color="#CCCCCC">just</font><font color="#E5E5E5"> take the raw pixels</font><font color="#CCCCCC"> and these</font>

501
00:19:51,940 --> 00:19:56,259
convolution filters and<font color="#E5E5E5"> stuff like that</font>

502
00:19:53,499 --> 00:19:58,419
to come<font color="#CCCCCC"> to the recognition of the face</font>

503
00:19:56,259 --> 00:20:01,330
and so this is similar<font color="#E5E5E5"> to the objective</font>

504
00:19:58,419 --> 00:20:04,419
<font color="#E5E5E5">of fingerprinting radios to simplify</font>

505
00:20:01,330 --> 00:20:06,399
<font color="#CCCCCC">this comparison a little bit so here we</font>

506
00:20:04,419 --> 00:20:08,229
have the raw radio signal and this<font color="#E5E5E5"> is</font>

507
00:20:06,399 --> 00:20:09,428
what I<font color="#CCCCCC"> would</font><font color="#E5E5E5"> like to call them the human</font>

508
00:20:08,229 --> 00:20:11,440
filtering so you have for example

509
00:20:09,429 --> 00:20:13,509
<font color="#E5E5E5">somebody that decides okay we're going</font>

510
00:20:11,440 --> 00:20:16,379
to take the F of T<font color="#CCCCCC"> and then extract the</font>

511
00:20:13,509 --> 00:20:20,200
mean of<font color="#E5E5E5"> this signal or</font><font color="#CCCCCC"> the variance</font>

512
00:20:16,379 --> 00:20:21,639
<font color="#CCCCCC">however what we can also do is interpret</font>

513
00:20:20,200 --> 00:20:23,529
<font color="#E5E5E5">the radio signal as the features</font>

514
00:20:21,639 --> 00:20:27,149
themselves<font color="#E5E5E5"> so instead of these switches</font>

515
00:20:23,529 --> 00:20:29,259
we just use the raw samples and then

516
00:20:27,149 --> 00:20:33,849
forward propagate them through a neural

517
00:20:29,259 --> 00:20:35,710
<font color="#CCCCCC">network and</font><font color="#E5E5E5"> so the the goal is that the</font>

518
00:20:33,849 --> 00:20:36,570
machine<font color="#CCCCCC"> learning or</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> idea that the</font>

519
00:20:35,710 --> 00:20:39,639
machine learning<font color="#E5E5E5"> album will</font>

520
00:20:36,570 --> 00:20:43,989
automatically filter those<font color="#CCCCCC"> important</font>

521
00:20:39,639 --> 00:20:45,849
features<font color="#E5E5E5"> away to the weight</font><font color="#CCCCCC"> value so how</font>

522
00:20:43,989 --> 00:20:47,979
<font color="#CCCCCC">would</font><font color="#E5E5E5"> that work in practice so we label</font>

523
00:20:45,849 --> 00:20:50,639
our transmission with a certain<font color="#CCCCCC"> laura</font>

524
00:20:47,979 --> 00:20:53,080
device<font color="#E5E5E5"> we fit the data true and then</font>

525
00:20:50,639 --> 00:20:54,968
based on<font color="#E5E5E5"> the weights and the biases it</font>

526
00:20:53,080 --> 00:20:57,129
will calculate a certain value for

527
00:20:54,969 --> 00:20:59,889
<font color="#CCCCCC">example here so</font><font color="#E5E5E5"> this is the predicted</font>

528
00:20:57,129 --> 00:21:03,218
value and we will evaluate how accurate

529
00:20:59,889 --> 00:21:05,468
<font color="#CCCCCC">that result is compared to the true</font>

530
00:21:03,219 --> 00:21:07,119
distribution<font color="#E5E5E5"> so in this case the true</font>

531
00:21:05,469 --> 00:21:08,889
distribution is that's why tree is a

532
00:21:07,119 --> 00:21:10,629
real<font color="#E5E5E5"> Laura device well the machine</font>

533
00:21:08,889 --> 00:21:12,820
learning algorithm predicts<font color="#E5E5E5"> why - so we</font>

534
00:21:10,629 --> 00:21:14,949
have to<font color="#E5E5E5"> update</font><font color="#CCCCCC"> the weights</font><font color="#E5E5E5"> and biases</font>

535
00:21:12,820 --> 00:21:19,479
and repeat the step in order<font color="#E5E5E5"> to come</font>

536
00:21:14,950 --> 00:21:21,789
closer<font color="#E5E5E5"> to the real distribution</font><font color="#CCCCCC"> I've</font>

537
00:21:19,479 --> 00:21:24,940
done this<font color="#E5E5E5"> in an</font><font color="#CCCCCC"> experiment where I have</font>

538
00:21:21,789 --> 00:21:26,800
fingerprinted<font color="#E5E5E5"> 22</font><font color="#CCCCCC"> Laura devices from 3</font>

539
00:21:24,940 --> 00:21:29,290
different vendors and

540
00:21:26,800 --> 00:21:31,930
<font color="#E5E5E5">to do so I just for example for the</font><font color="#CCCCCC"> next</font>

541
00:21:29,290 --> 00:21:33,940
slide<font color="#CCCCCC"> I will show you a simple MLP so</font>

542
00:21:31,930 --> 00:21:36,610
multi-layer<font color="#E5E5E5"> perceptrons one like this</font>

543
00:21:33,940 --> 00:21:38,620
<font color="#E5E5E5">and I used</font><font color="#CCCCCC"> 100,000 symbols of training</font>

544
00:21:36,610 --> 00:21:41,260
data<font color="#CCCCCC"> 1 thousands symbols of test data</font>

545
00:21:38,620 --> 00:21:45,010
<font color="#E5E5E5">and this turns out</font><font color="#CCCCCC"> to have 95% accuracy</font>

546
00:21:41,260 --> 00:21:48,420
<font color="#E5E5E5">however and there is strong ones here</font>

547
00:21:45,010 --> 00:21:50,260
because this strongly depends on the

548
00:21:48,420 --> 00:21:51,250
atmospheric conditions in the room and

549
00:21:50,260 --> 00:21:53,650
also<font color="#E5E5E5"> the channel so you</font><font color="#CCCCCC"> are</font>

550
00:21:51,250 --> 00:21:56,410
inadvertently<font color="#E5E5E5"> also fingerprint in</font><font color="#CCCCCC"> the</font>

551
00:21:53,650 --> 00:21:58,060
channel a little<font color="#CCCCCC"> bit which makes</font><font color="#E5E5E5"> it so</font>

552
00:21:56,410 --> 00:21:59,440
<font color="#CCCCCC">that if you</font><font color="#E5E5E5"> fingerprint the device in</font>

553
00:21:58,060 --> 00:22:02,909
one room and<font color="#CCCCCC"> then move to the other one</font>

554
00:21:59,440 --> 00:22:07,000
then it won't<font color="#E5E5E5"> work as reliably anymore</font>

555
00:22:02,910 --> 00:22:09,640
so<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> noises a problem and so here are</font>

556
00:22:07,000 --> 00:22:11,740
the results<font color="#CCCCCC"> these are all d RN devices</font>

557
00:22:09,640 --> 00:22:13,510
these<font color="#CCCCCC"> are the two era of devices and</font>

558
00:22:11,740 --> 00:22:15,550
this is the<font color="#CCCCCC"> SX device so you</font><font color="#E5E5E5"> can even</font>

559
00:22:13,510 --> 00:22:17,500
see<font color="#CCCCCC"> that between</font><font color="#E5E5E5"> vendors there appears</font>

560
00:22:15,550 --> 00:22:20,470
<font color="#CCCCCC">to be even more</font><font color="#E5E5E5"> of a difference between</font>

561
00:22:17,500 --> 00:22:22,000
<font color="#CCCCCC">the devices</font><font color="#E5E5E5"> then within a single vendor</font>

562
00:22:20,470 --> 00:22:25,630
so that was quite<font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> for me to</font>

563
00:22:22,000 --> 00:22:28,150
see<font color="#E5E5E5"> by the way what does this</font>

564
00:22:25,630 --> 00:22:30,460
visualization shows<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just the all the</font>

565
00:22:28,150 --> 00:22:33,130
output features projected onto a 2d

566
00:22:30,460 --> 00:22:35,520
<font color="#E5E5E5">plane so you can</font><font color="#CCCCCC"> easily visualize what</font>

567
00:22:33,130 --> 00:22:37,810
<font color="#E5E5E5">that looks like</font>

568
00:22:35,520 --> 00:22:39,670
<font color="#E5E5E5">alright so now we've seen</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> to</font>

569
00:22:37,810 --> 00:22:41,919
fingerprint a device and<font color="#E5E5E5"> you could</font>

570
00:22:39,670 --> 00:22:43,900
<font color="#CCCCCC">potentially track it down so let's</font>

571
00:22:41,920 --> 00:22:45,820
suppose that<font color="#E5E5E5"> you want to track down</font><font color="#CCCCCC"> your</font>

572
00:22:43,900 --> 00:22:47,980
neighbors<font color="#E5E5E5"> temperature sensor again</font><font color="#CCCCCC"> and</font>

573
00:22:45,820 --> 00:22:50,350
you not only<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to track</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> but you</font>

574
00:22:47,980 --> 00:22:52,600
also want to<font color="#E5E5E5"> know how how</font><font color="#CCCCCC"> does my</font>

575
00:22:50,350 --> 00:22:54,490
neighbor actually<font color="#E5E5E5"> so you want to decrypt</font>

576
00:22:52,600 --> 00:22:58,389
the messages that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> sent</font><font color="#E5E5E5"> out by</font><font color="#CCCCCC"> the</font>

577
00:22:54,490 --> 00:23:00,730
temperature sensor<font color="#CCCCCC"> and for that we</font><font color="#E5E5E5"> can</font>

578
00:22:58,390 --> 00:23:02,350
use<font color="#CCCCCC"> Satchel</font><font color="#E5E5E5"> attacks a side channel</font>

579
00:23:00,730 --> 00:23:03,730
attack is basically an attack that

580
00:23:02,350 --> 00:23:05,080
<font color="#E5E5E5">exploits the</font><font color="#CCCCCC"> fact that while your</font>

581
00:23:03,730 --> 00:23:06,790
processor is<font color="#CCCCCC"> doing some kind of</font>

582
00:23:05,080 --> 00:23:08,290
<font color="#CCCCCC">computation that</font><font color="#E5E5E5"> leaks some information</font>

583
00:23:06,790 --> 00:23:10,000
to<font color="#E5E5E5"> the outside world through a side</font>

584
00:23:08,290 --> 00:23:12,700
channel<font color="#E5E5E5"> so an attacker can gain</font>

585
00:23:10,000 --> 00:23:15,220
advantage of that<font color="#E5E5E5"> based on this leaked</font>

586
00:23:12,700 --> 00:23:16,980
information<font color="#E5E5E5"> and there are numerous</font><font color="#CCCCCC"> types</font>

587
00:23:15,220 --> 00:23:19,180
for example<font color="#CCCCCC"> you have timing some</font>

588
00:23:16,980 --> 00:23:20,320
algorithms will take longer or slower or

589
00:23:19,180 --> 00:23:22,420
some parts<font color="#E5E5E5"> of algorithms will take</font>

590
00:23:20,320 --> 00:23:24,939
longer or<font color="#E5E5E5"> slower</font><font color="#CCCCCC"> you have acoustic power</font>

591
00:23:22,420 --> 00:23:27,580
consumption temperature cache<font color="#E5E5E5"> and those</font>

592
00:23:24,940 --> 00:23:29,170
might even be correlated<font color="#CCCCCC"> so you can use</font>

593
00:23:27,580 --> 00:23:33,730
multiple side channels at<font color="#E5E5E5"> the same time</font>

594
00:23:29,170 --> 00:23:36,070
if you<font color="#E5E5E5"> would want to so yeah</font><font color="#CCCCCC"> so we're</font>

595
00:23:33,730 --> 00:23:37,990
going<font color="#CCCCCC"> to apply this on a s and</font><font color="#E5E5E5"> why a is</font>

596
00:23:36,070 --> 00:23:40,360
<font color="#E5E5E5">because it's</font><font color="#CCCCCC"> using Laura it's used on</font>

597
00:23:37,990 --> 00:23:42,220
Wi-Fi<font color="#CCCCCC"> till s IPSec well</font>

598
00:23:40,360 --> 00:23:44,139
<font color="#CCCCCC">ABB's</font><font color="#E5E5E5"> also so there's definitely a lot</font>

599
00:23:42,220 --> 00:23:45,700
<font color="#CCCCCC">of potential</font><font color="#E5E5E5"> and the attack techniques</font>

600
00:23:44,140 --> 00:23:49,299
that I'm about to<font color="#E5E5E5"> present are nothing</font>

601
00:23:45,700 --> 00:23:50,860
new<font color="#E5E5E5"> by any means but the thing is</font><font color="#CCCCCC"> that</font>

602
00:23:49,299 --> 00:23:52,629
<font color="#E5E5E5">they often require some expensive</font>

603
00:23:50,860 --> 00:23:54,699
<font color="#E5E5E5">equipment and I would like to show</font><font color="#CCCCCC"> you</font>

604
00:23:52,630 --> 00:23:58,660
<font color="#CCCCCC">guys how</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> it with a cheap SDR</font>

605
00:23:54,700 --> 00:24:00,490
for example so how does the general

606
00:23:58,660 --> 00:24:02,260
attack methodology work so as an

607
00:24:00,490 --> 00:24:04,059
attacker you<font color="#CCCCCC"> would first communicate</font>

608
00:24:02,260 --> 00:24:06,340
with some kind<font color="#E5E5E5"> of for example</font><font color="#CCCCCC"> web</font>

609
00:24:04,059 --> 00:24:08,230
service you would send some data for<font color="#E5E5E5"> the</font>

610
00:24:06,340 --> 00:24:09,909
<font color="#CCCCCC">Laura device to encrypt the</font><font color="#E5E5E5"> Gateway</font><font color="#CCCCCC"> I'll</font>

611
00:24:08,230 --> 00:24:11,350
<font color="#E5E5E5">forward to Laura device and the Laura</font>

612
00:24:09,910 --> 00:24:13,120
device will have to respond<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> will</font>

613
00:24:11,350 --> 00:24:14,199
have<font color="#E5E5E5"> to do an encryption and by doing</font>

614
00:24:13,120 --> 00:24:16,780
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it will leak some information</font>

615
00:24:14,200 --> 00:24:18,370
through the<font color="#E5E5E5"> electromagnetic</font><font color="#CCCCCC"> channel and</font>

616
00:24:16,780 --> 00:24:20,379
the attacker can then<font color="#E5E5E5"> use this</font>

617
00:24:18,370 --> 00:24:23,739
<font color="#E5E5E5">information get read and then perform</font>

618
00:24:20,380 --> 00:24:25,900
some analysis now for<font color="#E5E5E5"> doing this</font>

619
00:24:23,740 --> 00:24:28,840
analysis we need a model and a model is

620
00:24:25,900 --> 00:24:31,210
basically<font color="#CCCCCC"> just</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> way to mathematically</font>

621
00:24:28,840 --> 00:24:33,129
predict how that's certain<font color="#E5E5E5"> input to a</font>

622
00:24:31,210 --> 00:24:36,010
<font color="#E5E5E5">chip will result in a certain</font>

623
00:24:33,130 --> 00:24:37,570
electromagnetic<font color="#E5E5E5"> radiation and therefore</font>

624
00:24:36,010 --> 00:24:40,270
<font color="#E5E5E5">of</font><font color="#CCCCCC"> course the accuracy of the model</font><font color="#E5E5E5"> is</font>

625
00:24:37,570 --> 00:24:43,090
very<font color="#E5E5E5"> crucial for a successful attack how</font>

626
00:24:40,270 --> 00:24:44,500
now some observations<font color="#CCCCCC"> that's previous</font>

627
00:24:43,090 --> 00:24:46,030
works have already made is<font color="#CCCCCC"> that the</font>

628
00:24:44,500 --> 00:24:47,830
<font color="#CCCCCC">amplitude of</font><font color="#E5E5E5"> the e/m radiation is</font>

629
00:24:46,030 --> 00:24:49,090
proportional<font color="#CCCCCC"> to the power and</font><font color="#E5E5E5"> that you</font>

630
00:24:47,830 --> 00:24:50,949
need<font color="#E5E5E5"> power</font><font color="#CCCCCC"> to change the state of</font>

631
00:24:49,090 --> 00:24:52,659
circuits of course because you if you

632
00:24:50,950 --> 00:24:56,230
change<font color="#E5E5E5"> from</font><font color="#CCCCCC"> a 0 to</font><font color="#E5E5E5"> a 1</font><font color="#CCCCCC"> or from</font><font color="#E5E5E5"> 1 to 0</font>

633
00:24:52,660 --> 00:24:58,059
<font color="#E5E5E5">you need to use some some power so that</font>

634
00:24:56,230 --> 00:25:00,520
in turn makes it that state changes also

635
00:24:58,059 --> 00:25:03,760
<font color="#E5E5E5">cause variations in the electromagnetic</font>

636
00:25:00,520 --> 00:25:06,809
radiations and<font color="#CCCCCC"> out by device now what</font>

637
00:25:03,760 --> 00:25:10,960
<font color="#E5E5E5">would</font><font color="#CCCCCC"> happen</font><font color="#E5E5E5"> if we with AMD modulates</font>

638
00:25:06,809 --> 00:25:12,760
<font color="#CCCCCC">AAS encryptions</font><font color="#E5E5E5"> so what I'm</font><font color="#CCCCCC"> about to</font>

639
00:25:10,960 --> 00:25:16,690
<font color="#E5E5E5">show</font><font color="#CCCCCC"> you now</font><font color="#E5E5E5"> is an example</font><font color="#CCCCCC"> where I did</font>

640
00:25:12,760 --> 00:25:18,640
this for<font color="#E5E5E5"> an atmega328p</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case it</font>

641
00:25:16,690 --> 00:25:21,400
was a device provided to me<font color="#CCCCCC"> by a company</font>

642
00:25:18,640 --> 00:25:24,190
called<font color="#CCCCCC"> rescuer they held kind of a</font>

643
00:25:21,400 --> 00:25:25,960
competition<font color="#E5E5E5"> to perform</font><font color="#CCCCCC"> sideshow</font><font color="#E5E5E5"> attack</font>

644
00:25:24,190 --> 00:25:28,299
on a black box<font color="#E5E5E5"> so the key was absolutely</font>

645
00:25:25,960 --> 00:25:30,970
<font color="#E5E5E5">not known to me and you had to find it</font>

646
00:25:28,299 --> 00:25:32,470
out<font color="#E5E5E5"> by doing</font><font color="#CCCCCC"> a side channel</font><font color="#E5E5E5"> attack now</font>

647
00:25:30,970 --> 00:25:34,600
looking at previous works we<font color="#E5E5E5"> can learn</font>

648
00:25:32,470 --> 00:25:36,190
<font color="#E5E5E5">that lower frequencies must be favored</font>

649
00:25:34,600 --> 00:25:38,409
apparently<font color="#E5E5E5"> there's more</font><font color="#CCCCCC"> information in</font>

650
00:25:36,190 --> 00:25:40,150
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and then the harmonics of the CPU</font>

651
00:25:38,410 --> 00:25:42,730
clock frequency also<font color="#E5E5E5"> contain useful</font>

652
00:25:40,150 --> 00:25:45,460
<font color="#E5E5E5">information so now let's take a look at</font>

653
00:25:42,730 --> 00:25:47,860
<font color="#E5E5E5">using a user</font><font color="#CCCCCC"> P an amplifier</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> an en</font>

654
00:25:45,460 --> 00:25:51,370
probe so with this<font color="#E5E5E5"> I took about</font><font color="#CCCCCC"> eighteen</font>

655
00:25:47,860 --> 00:25:53,370
thousand samples<font color="#E5E5E5"> and then you get</font>

656
00:25:51,370 --> 00:25:55,379
something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font>

657
00:25:53,370 --> 00:25:56,969
now as you imagine I was quite as

658
00:25:55,380 --> 00:25:58,950
<font color="#CCCCCC">appointed when I first saw this graph</font>

659
00:25:56,970 --> 00:26:02,789
because<font color="#CCCCCC"> this</font><font color="#E5E5E5"> just seems like random</font>

660
00:25:58,950 --> 00:26:04,679
noise right<font color="#E5E5E5"> so it is feeling noisy but</font>

661
00:26:02,789 --> 00:26:07,220
after doing<font color="#CCCCCC"> a low-pass filter there is</font>

662
00:26:04,679 --> 00:26:09,539
something more interesting going<font color="#E5E5E5"> on so</font>

663
00:26:07,220 --> 00:26:11,279
here you can see there<font color="#E5E5E5"> are some higher</font>

664
00:26:09,539 --> 00:26:12,750
amplitudes here then it goes back to a

665
00:26:11,279 --> 00:26:14,130
lower<font color="#CCCCCC"> amplitudes and back to a higher</font>

666
00:26:12,750 --> 00:26:16,409
amplitude so it almost<font color="#E5E5E5"> seems</font><font color="#CCCCCC"> like</font>

667
00:26:14,130 --> 00:26:18,539
there's some power<font color="#E5E5E5"> being drawn</font><font color="#CCCCCC"> away here</font>

668
00:26:16,409 --> 00:26:20,700
<font color="#CCCCCC">and that's interesting also if you look</font>

669
00:26:18,539 --> 00:26:22,770
at the individual colors of the graph

670
00:26:20,700 --> 00:26:24,360
you<font color="#CCCCCC"> can see</font><font color="#E5E5E5"> that there is a repeating</font>

671
00:26:22,770 --> 00:26:26,429
pattern so maybe if<font color="#CCCCCC"> we use our trick</font>

672
00:26:24,360 --> 00:26:28,199
from<font color="#E5E5E5"> Laura synchronization and apply it</font>

673
00:26:26,429 --> 00:26:30,750
to this<font color="#E5E5E5"> maybe we can get a better</font>

674
00:26:28,200 --> 00:26:32,159
results and that<font color="#E5E5E5"> turns out</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> true</font>

675
00:26:30,750 --> 00:26:33,690
because if you align them you can

676
00:26:32,159 --> 00:26:38,159
clearly see<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is something else</font>

677
00:26:33,690 --> 00:26:39,960
<font color="#E5E5E5">going on so here we can even see the</font>

678
00:26:38,159 --> 00:26:41,730
different rounds of a as being<font color="#E5E5E5"> executed</font>

679
00:26:39,960 --> 00:26:44,159
so here you<font color="#E5E5E5"> can see round 1 round 2</font>

680
00:26:41,730 --> 00:26:45,539
<font color="#CCCCCC">round 3</font><font color="#E5E5E5"> and so forth</font><font color="#CCCCCC"> so this highly</font>

681
00:26:44,159 --> 00:26:49,890
suggest that there<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> 10 round</font><font color="#CCCCCC"> is</font>

682
00:26:45,539 --> 00:26:53,158
<font color="#CCCCCC">going on so that means 128-bit key now</font>

683
00:26:49,890 --> 00:26:55,230
the next question<font color="#E5E5E5"> is where in this graph</font>

684
00:26:53,159 --> 00:26:56,580
<font color="#E5E5E5">here is the</font><font color="#CCCCCC"> key effectively used because</font>

685
00:26:55,230 --> 00:26:57,929
that's what we<font color="#E5E5E5"> want to attack right we</font>

686
00:26:56,580 --> 00:27:00,600
want to know the key of the AES

687
00:26:57,929 --> 00:27:03,090
encryption<font color="#E5E5E5"> and for that we simply look</font>

688
00:27:00,600 --> 00:27:05,309
<font color="#E5E5E5">at the specification of AES so we have</font>

689
00:27:03,090 --> 00:27:08,070
ADD round key here<font color="#E5E5E5"> and what it does</font>

690
00:27:05,309 --> 00:27:10,320
<font color="#E5E5E5">simply takes a plaintext bytes and takes</font>

691
00:27:08,070 --> 00:27:13,020
a key byte and<font color="#E5E5E5"> XOR its</font><font color="#CCCCCC"> xor sets and</font>

692
00:27:10,320 --> 00:27:14,939
that's<font color="#CCCCCC"> the output now what does a round</font>

693
00:27:13,020 --> 00:27:17,070
key turns out<font color="#E5E5E5"> that in the first round so</font>

694
00:27:14,940 --> 00:27:18,390
<font color="#E5E5E5">that's this sentence over here in the</font>

695
00:27:17,070 --> 00:27:20,370
first round<font color="#E5E5E5"> the round key is simply</font>

696
00:27:18,390 --> 00:27:22,770
equal<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the key of the user itself so</font>

697
00:27:20,370 --> 00:27:26,459
the<font color="#E5E5E5"> cipher key and that's something you</font>

698
00:27:22,770 --> 00:27:28,500
can<font color="#E5E5E5"> exploit after the advantage phase it</font>

699
00:27:26,460 --> 00:27:29,909
moves on to<font color="#CCCCCC"> the sub bytes</font><font color="#E5E5E5"> stage where it</font>

700
00:27:28,500 --> 00:27:31,799
will<font color="#CCCCCC"> where the output byte of the</font>

701
00:27:29,909 --> 00:27:33,419
<font color="#E5E5E5">previous stage will just be substituted</font>

702
00:27:31,799 --> 00:27:35,908
<font color="#E5E5E5">with another one based on the S box and</font>

703
00:27:33,419 --> 00:27:37,350
it will<font color="#CCCCCC"> store</font><font color="#E5E5E5"> again so assume for now</font>

704
00:27:35,909 --> 00:27:39,770
that<font color="#E5E5E5"> the output of this is the</font>

705
00:27:37,350 --> 00:27:42,449
vulnerable<font color="#E5E5E5"> point that we wanna attack</font>

706
00:27:39,770 --> 00:27:45,690
now the question is what happens inside

707
00:27:42,450 --> 00:27:47,880
the chip<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> initial state is unknown</font>

708
00:27:45,690 --> 00:27:50,220
<font color="#E5E5E5">and let's call it R and then after the</font>

709
00:27:47,880 --> 00:27:52,679
Advantium<font color="#E5E5E5"> sub</font><font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> stages the state</font>

710
00:27:50,220 --> 00:27:55,640
will be<font color="#E5E5E5"> D which is equal</font><font color="#CCCCCC"> to the S box of</font>

711
00:27:52,679 --> 00:27:59,070
P so the plaintext<font color="#CCCCCC"> ex-ored with</font><font color="#E5E5E5"> the key</font>

712
00:27:55,640 --> 00:28:00,570
<font color="#E5E5E5">now we also know that in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> change</font>

713
00:27:59,070 --> 00:28:03,210
from<font color="#E5E5E5"> one</font><font color="#CCCCCC"> state to another we need</font><font color="#E5E5E5"> to</font>

714
00:28:00,570 --> 00:28:05,460
consume power<font color="#E5E5E5"> so therefore we can just</font>

715
00:28:03,210 --> 00:28:05,840
calculate what this power<font color="#E5E5E5"> would be by</font>

716
00:28:05,460 --> 00:28:07,490
<font color="#E5E5E5">taking</font>

717
00:28:05,840 --> 00:28:10,340
the<font color="#CCCCCC"> hamming distance between</font><font color="#E5E5E5"> R and</font><font color="#CCCCCC"> D so</font>

718
00:28:07,490 --> 00:28:15,020
in this case we have 1 2 3<font color="#CCCCCC"> 4 so we have</font>

719
00:28:10,340 --> 00:28:16,939
having distance<font color="#E5E5E5"> of 4 and turns out that</font>

720
00:28:15,020 --> 00:28:21,020
in practice<font color="#E5E5E5"> the Hamming weight also</font>

721
00:28:16,940 --> 00:28:23,029
works if R is<font color="#E5E5E5"> equal</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 0 so now</font><font color="#CCCCCC"> that we</font>

722
00:28:21,020 --> 00:28:25,279
<font color="#E5E5E5">have that we</font><font color="#CCCCCC"> can build our model for</font>

723
00:28:23,029 --> 00:28:27,380
each<font color="#CCCCCC"> possible key</font><font color="#E5E5E5"> bytes so let's suppose</font>

724
00:28:25,279 --> 00:28:29,809
<font color="#CCCCCC">that</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> key bite is 0</font>

725
00:28:27,380 --> 00:28:31,970
we calculate<font color="#E5E5E5"> our model and do this for</font>

726
00:28:29,809 --> 00:28:33,649
<font color="#E5E5E5">every plaintext that we transmit it and</font>

727
00:28:31,970 --> 00:28:37,820
then we repeat this process<font color="#E5E5E5"> for every</font>

728
00:28:33,650 --> 00:28:39,950
<font color="#E5E5E5">possible key</font><font color="#CCCCCC"> byte next we</font><font color="#E5E5E5"> want to</font>

729
00:28:37,820 --> 00:28:42,470
measure<font color="#E5E5E5"> the reality so we have our model</font>

730
00:28:39,950 --> 00:28:43,970
<font color="#E5E5E5">already now let's time to measure the</font>

731
00:28:42,470 --> 00:28:48,440
reality<font color="#E5E5E5"> and for that we need to look at</font>

732
00:28:43,970 --> 00:28:50,299
the first part<font color="#E5E5E5"> because it's the first</font><font color="#CCCCCC"> ok</font>

733
00:28:48,440 --> 00:28:53,929
because<font color="#E5E5E5"> it's the first round where the</font>

734
00:28:50,299 --> 00:28:57,918
key<font color="#E5E5E5"> is used and then we can do</font>

735
00:28:53,929 --> 00:29:00,440
correlation so correlation<font color="#E5E5E5"> is basically</font>

736
00:28:57,919 --> 00:29:02,120
a way to find a linear<font color="#CCCCCC"> collaboration</font>

737
00:29:00,440 --> 00:29:03,620
Pearson correlation is a way to find<font color="#E5E5E5"> a</font>

738
00:29:02,120 --> 00:29:05,809
<font color="#E5E5E5">linear correlation between two</font><font color="#CCCCCC"> variables</font>

739
00:29:03,620 --> 00:29:08,389
so<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example we have our model here</font>

740
00:29:05,809 --> 00:29:09,980
and<font color="#E5E5E5"> our hypothesis here and we can</font>

741
00:29:08,390 --> 00:29:11,770
<font color="#E5E5E5">correlate them in order to find the best</font>

742
00:29:09,980 --> 00:29:16,039
model so we want to<font color="#E5E5E5"> find out which key</font>

743
00:29:11,770 --> 00:29:18,260
<font color="#E5E5E5">was our best guess and here's the</font>

744
00:29:16,039 --> 00:29:20,090
results so for this<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> want to</font>

745
00:29:18,260 --> 00:29:22,640
<font color="#CCCCCC">implement this attack yourself</font><font color="#E5E5E5"> and found</font>

746
00:29:20,090 --> 00:29:24,289
it a little<font color="#E5E5E5"> bit too fast</font><font color="#CCCCCC"> it sorry for</font>

747
00:29:22,640 --> 00:29:25,850
<font color="#CCCCCC">that but yeah we don't have a lot of</font>

748
00:29:24,289 --> 00:29:27,049
time and if you<font color="#E5E5E5"> want to implement it</font>

749
00:29:25,850 --> 00:29:30,168
yourself<font color="#CCCCCC"> what you can also do is just</font>

750
00:29:27,049 --> 00:29:32,720
use<font color="#CCCCCC"> chip whisperer</font><font color="#E5E5E5"> which is open source</font>

751
00:29:30,169 --> 00:29:36,140
software that<font color="#E5E5E5"> implements these attacks</font>

752
00:29:32,720 --> 00:29:38,120
usually<font color="#CCCCCC"> it also comes with</font><font color="#E5E5E5"> its intended</font>

753
00:29:36,140 --> 00:29:40,070
to<font color="#E5E5E5"> be used with the commercial hardware</font>

754
00:29:38,120 --> 00:29:41,539
of chip<font color="#CCCCCC"> whisper but in fact</font><font color="#E5E5E5"> I wrote a</font>

755
00:29:40,070 --> 00:29:45,500
plug-in<font color="#E5E5E5"> for it so that you can use your</font>

756
00:29:41,539 --> 00:29:47,240
own SDR<font color="#CCCCCC"> which</font><font color="#E5E5E5"> a chip</font><font color="#CCCCCC"> whisperer so feel</font>

757
00:29:45,500 --> 00:29:49,309
free to check<font color="#CCCCCC"> it out it's</font><font color="#E5E5E5"> still in beta</font>

758
00:29:47,240 --> 00:29:50,360
<font color="#CCCCCC">that's why I didn't upload it to get up</font>

759
00:29:49,309 --> 00:29:52,700
<font color="#E5E5E5">yet</font><font color="#CCCCCC"> because I</font><font color="#E5E5E5"> still have to</font><font color="#CCCCCC"> clean the</font>

760
00:29:50,360 --> 00:29:54,860
code but<font color="#CCCCCC"> it works</font><font color="#E5E5E5"> quite well and I</font>

761
00:29:52,700 --> 00:29:58,760
obtained<font color="#E5E5E5"> these all these results with</font>

762
00:29:54,860 --> 00:30:01,279
this<font color="#CCCCCC"> plugin</font><font color="#E5E5E5"> and so here you can see that</font>

763
00:29:58,760 --> 00:30:05,809
there is a clear favoring of one

764
00:30:01,279 --> 00:30:08,059
particular byte of<font color="#CCCCCC"> the key</font><font color="#E5E5E5"> and this is</font>

765
00:30:05,809 --> 00:30:09,320
another<font color="#E5E5E5"> visualization of that so in the</font>

766
00:30:08,059 --> 00:30:12,080
beginning we have all<font color="#E5E5E5"> of our models</font>

767
00:30:09,320 --> 00:30:14,450
<font color="#E5E5E5">which</font><font color="#CCCCCC"> have similar correlation</font><font color="#E5E5E5"> then</font>

768
00:30:12,080 --> 00:30:17,090
after including more<font color="#CCCCCC"> and more</font><font color="#E5E5E5"> traces you</font>

769
00:30:14,450 --> 00:30:19,430
filter more of the noise<font color="#E5E5E5"> away and you</font>

770
00:30:17,090 --> 00:30:22,040
eventually<font color="#E5E5E5"> end up with only one</font>

771
00:30:19,430 --> 00:30:25,690
he bites that jumps out and it's the

772
00:30:22,040 --> 00:30:30,470
real key used by the<font color="#E5E5E5"> user</font>

773
00:30:25,690 --> 00:30:31,820
unfortunately<font color="#E5E5E5"> chip</font><font color="#CCCCCC"> Whisperer is written</font>

774
00:30:30,470 --> 00:30:35,270
<font color="#E5E5E5">completely in Python therefore it's</font>

775
00:30:31,820 --> 00:30:37,700
<font color="#E5E5E5">single source single core if I remember</font>

776
00:30:35,270 --> 00:30:40,190
<font color="#E5E5E5">correctly so that's why I started</font>

777
00:30:37,700 --> 00:30:42,080
implementing my own framework for<font color="#CCCCCC"> it</font>

778
00:30:40,190 --> 00:30:43,670
called Emma<font color="#E5E5E5"> and with this framework you</font>

779
00:30:42,080 --> 00:30:46,250
<font color="#CCCCCC">can use multiple cores</font><font color="#E5E5E5"> and run it on</font>

780
00:30:43,670 --> 00:30:47,720
multiple<font color="#E5E5E5"> machines</font><font color="#CCCCCC"> as well</font><font color="#E5E5E5"> and so as you</font>

781
00:30:46,250 --> 00:30:51,020
can<font color="#CCCCCC"> see</font><font color="#E5E5E5"> the result is</font><font color="#CCCCCC"> exactly the</font><font color="#E5E5E5"> same</font>

782
00:30:47,720 --> 00:30:53,450
but it takes<font color="#CCCCCC"> only 60 seconds</font><font color="#E5E5E5"> to find a</font>

783
00:30:51,020 --> 00:30:55,070
single<font color="#CCCCCC"> byte of the key and I hope to</font>

784
00:30:53,450 --> 00:30:58,040
<font color="#CCCCCC">improve this further to include</font><font color="#E5E5E5"> some</font>

785
00:30:55,070 --> 00:30:59,720
<font color="#E5E5E5">other techniques and algorithms in order</font>

786
00:30:58,040 --> 00:31:04,610
<font color="#CCCCCC">to get the key faster or with less</font>

787
00:30:59,720 --> 00:31:07,430
<font color="#E5E5E5">traces to wrap this up all</font><font color="#CCCCCC"> of my</font>

788
00:31:04,610 --> 00:31:10,070
finished<font color="#E5E5E5"> research is open source so feel</font>

789
00:31:07,430 --> 00:31:12,290
<font color="#CCCCCC">free to</font><font color="#E5E5E5"> check</font><font color="#CCCCCC"> it out</font><font color="#E5E5E5"> the decoder can be</font>

790
00:31:10,070 --> 00:31:14,060
downloaded<font color="#E5E5E5"> here there is a VM at all of</font>

791
00:31:12,290 --> 00:31:16,510
my<font color="#CCCCCC"> fingerprinting experiments where you</font>

792
00:31:14,060 --> 00:31:19,250
can run them<font color="#E5E5E5"> again</font><font color="#CCCCCC"> all the data was</font>

793
00:31:16,510 --> 00:31:21,650
<font color="#CCCCCC">captured to a MongoDB database you can</font>

794
00:31:19,250 --> 00:31:23,150
play with<font color="#E5E5E5"> it if you want and then there</font>

795
00:31:21,650 --> 00:31:25,630
is the cheapest rare plugin which you

796
00:31:23,150 --> 00:31:28,130
can also download from<font color="#E5E5E5"> this location</font>

797
00:31:25,630 --> 00:31:30,230
<font color="#E5E5E5">some of the ideas that I had for my</font>

798
00:31:28,130 --> 00:31:31,940
current research<font color="#E5E5E5"> directions are</font><font color="#CCCCCC"> to use</font>

799
00:31:30,230 --> 00:31:33,710
this machine<font color="#E5E5E5"> learning in order to create</font>

800
00:31:31,940 --> 00:31:36,890
some kind<font color="#E5E5E5"> of advantage</font><font color="#CCCCCC"> so maybe we can</font>

801
00:31:33,710 --> 00:31:38,900
do some other<font color="#CCCCCC"> stuff that</font><font color="#E5E5E5"> might increase</font>

802
00:31:36,890 --> 00:31:41,390
the correlation faster for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> given</font>

803
00:31:38,900 --> 00:31:43,310
less amount of traces or maybe we<font color="#E5E5E5"> can</font>

804
00:31:41,390 --> 00:31:45,410
increase the range of these<font color="#CCCCCC"> EMI texts</font>

805
00:31:43,310 --> 00:31:46,429
for<font color="#CCCCCC"> example to go through walls</font><font color="#E5E5E5"> or</font>

806
00:31:45,410 --> 00:31:50,600
<font color="#CCCCCC">something like that</font>

807
00:31:46,430 --> 00:31:52,250
so if anyone has<font color="#E5E5E5"> wants to collaborate</font>

808
00:31:50,600 --> 00:31:54,639
with<font color="#E5E5E5"> me</font><font color="#CCCCCC"> on that feel free to contact</font><font color="#E5E5E5"> me</font>

809
00:31:52,250 --> 00:31:56,870
and then<font color="#E5E5E5"> we can maybe work something out</font>

810
00:31:54,640 --> 00:31:59,180
<font color="#E5E5E5">here are some other related papers which</font>

811
00:31:56,870 --> 00:32:01,340
I found interesting about fingerprinting

812
00:31:59,180 --> 00:32:03,530
and<font color="#CCCCCC"> Satchel</font><font color="#E5E5E5"> attacks so feel free to</font>

813
00:32:01,340 --> 00:32:05,209
check<font color="#E5E5E5"> them out as well and then there</font>

814
00:32:03,530 --> 00:32:08,379
are<font color="#E5E5E5"> some nice</font><font color="#CCCCCC"> examples that</font><font color="#E5E5E5"> I found</font>

815
00:32:05,210 --> 00:32:12,350
online from another<font color="#CCCCCC"> University and</font>

816
00:32:08,380 --> 00:32:13,820
<font color="#CCCCCC">Israel</font><font color="#E5E5E5"> so they what they</font><font color="#CCCCCC"> did is they</font><font color="#E5E5E5"> can</font>

817
00:32:12,350 --> 00:32:16,010
fully<font color="#E5E5E5"> extract</font><font color="#CCCCCC"> the decryption keys by</font>

818
00:32:13,820 --> 00:32:18,310
just<font color="#CCCCCC"> holding a pizza close to laptop so</font>

819
00:32:16,010 --> 00:32:21,710
<font color="#CCCCCC">that was kind of cool and the same for</font>

820
00:32:18,310 --> 00:32:23,960
<font color="#E5E5E5">iOS devices for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> I had prepared a</font>

821
00:32:21,710 --> 00:32:25,460
demo<font color="#E5E5E5"> and I tested it in the hallway and</font>

822
00:32:23,960 --> 00:32:27,350
it's perfectly<font color="#E5E5E5"> worded of course because</font>

823
00:32:25,460 --> 00:32:28,430
the room here is changing<font color="#E5E5E5"> and also</font>

824
00:32:27,350 --> 00:32:30,649
<font color="#E5E5E5">because it's pretty sensitive to</font>

825
00:32:28,430 --> 00:32:32,030
temperature<font color="#CCCCCC"> the</font><font color="#E5E5E5"> fingerprinting demo</font>

826
00:32:30,650 --> 00:32:32,780
doesn't<font color="#E5E5E5"> really work anymore but maybe I</font>

827
00:32:32,030 --> 00:32:34,310
<font color="#E5E5E5">can try</font>

828
00:32:32,780 --> 00:32:35,389
machine<font color="#E5E5E5"> learning algorithm again and</font>

829
00:32:34,310 --> 00:32:37,250
then by the<font color="#E5E5E5"> time you have the last</font>

830
00:32:35,390 --> 00:32:39,980
session<font color="#E5E5E5"> maybe I can show it</font><font color="#CCCCCC"> to you guys</font>

831
00:32:37,250 --> 00:32:42,800
<font color="#CCCCCC">or you can just see me in the</font><font color="#E5E5E5"> hallway</font>

832
00:32:39,980 --> 00:32:44,540
and<font color="#E5E5E5"> we can try it over there</font><font color="#CCCCCC"> and if</font>

833
00:32:42,800 --> 00:32:46,810
there<font color="#CCCCCC"> are any questions</font><font color="#E5E5E5"> then we have</font>

834
00:32:44,540 --> 00:32:48,780
plenty of time<font color="#CCCCCC"> for</font><font color="#E5E5E5"> that now</font><font color="#CCCCCC"> I guess</font>

835
00:32:46,810 --> 00:32:57,379
thank you

836
00:32:48,780 --> 00:32:57,379
[Applause]

837
00:33:10,260 --> 00:33:14,490
sorry I didn't understand your<font color="#E5E5E5"> question</font>

838
00:33:20,970 --> 00:33:37,570
<font color="#CCCCCC">but this one or with what I okay</font>

839
00:33:28,330 --> 00:33:39,580
I<font color="#CCCCCC"> had the S&E yeah no those</font><font color="#E5E5E5"> were</font>

840
00:33:37,570 --> 00:33:40,870
actually I didn't explain that's<font color="#E5E5E5"> a very</font>

841
00:33:39,580 --> 00:33:42,699
good<font color="#E5E5E5"> question and so the question is</font>

842
00:33:40,870 --> 00:33:45,370
what what<font color="#E5E5E5"> are these points</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> they are</font>

843
00:33:42,700 --> 00:33:47,890
<font color="#E5E5E5">just individual symbols of a lower</font>

844
00:33:45,370 --> 00:33:51,010
transmission so I did<font color="#E5E5E5"> the fingerprinting</font>

845
00:33:47,890 --> 00:33:53,380
<font color="#E5E5E5">on</font><font color="#CCCCCC"> a single symbol</font><font color="#E5E5E5"> so what you're seeing</font>

846
00:33:51,010 --> 00:33:55,570
here<font color="#E5E5E5"> is the color corresponds to the</font>

847
00:33:53,380 --> 00:33:59,470
device<font color="#E5E5E5"> that sent the symbol so in this</font>

848
00:33:55,570 --> 00:34:01,000
case if you<font color="#E5E5E5"> have a fully colored threads</font>

849
00:33:59,470 --> 00:34:02,140
one that means<font color="#CCCCCC"> that the prediction</font><font color="#E5E5E5"> was</font>

850
00:34:01,000 --> 00:34:03,760
correct if you<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> outlined</font>

851
00:34:02,140 --> 00:34:06,220
different that<font color="#E5E5E5"> means that it thought</font>

852
00:34:03,760 --> 00:34:13,110
<font color="#E5E5E5">that it was another device sending the</font>

853
00:34:06,220 --> 00:34:13,110
symbol<font color="#E5E5E5"> yeah okay sure</font>

854
00:34:15,840 --> 00:34:20,980
<font color="#CCCCCC">no</font><font color="#E5E5E5"> because this is so it doesn't mean</font>

855
00:34:18,670 --> 00:34:23,650
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> encryption is broken this is</font>

856
00:34:20,980 --> 00:34:24,969
only related<font color="#CCCCCC"> to so this</font><font color="#E5E5E5"> is not related</font>

857
00:34:23,650 --> 00:34:26,830
<font color="#E5E5E5">to the encryption at all because this</font>

858
00:34:24,969 --> 00:34:29,560
what this does is just<font color="#E5E5E5"> look at the raw</font>

859
00:34:26,830 --> 00:34:31,270
radio signal<font color="#E5E5E5"> and</font><font color="#CCCCCC"> select a single</font><font color="#E5E5E5"> symbol</font>

860
00:34:29,560 --> 00:34:33,040
and<font color="#CCCCCC"> just try</font><font color="#E5E5E5"> to identify which was the</font>

861
00:34:31,270 --> 00:34:35,710
transmitter of the lower device and

862
00:34:33,040 --> 00:34:37,540
there's it's really hard to<font color="#E5E5E5"> to counter</font>

863
00:34:35,710 --> 00:34:39,220
<font color="#E5E5E5">that's I mean even the encryption</font>

864
00:34:37,540 --> 00:34:40,330
wouldn't help you<font color="#E5E5E5"> they are because yeah</font>

865
00:34:39,219 --> 00:34:41,830
the signature would still be the same

866
00:34:40,330 --> 00:34:45,699
<font color="#CCCCCC">because it's transmitted</font><font color="#E5E5E5"> by the same</font>

867
00:34:41,830 --> 00:34:48,850
hardware<font color="#E5E5E5"> so yeah it's just it's like</font>

868
00:34:45,699 --> 00:34:51,009
<font color="#CCCCCC">it's like</font><font color="#E5E5E5"> meeting someone in person and</font>

869
00:34:48,850 --> 00:34:53,469
looking at his<font color="#E5E5E5"> face for example I mean</font>

870
00:34:51,010 --> 00:34:54,970
it's just like<font color="#E5E5E5"> humans interact and</font><font color="#CCCCCC"> and</font>

871
00:34:53,469 --> 00:35:00,240
identify each other<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> no</font>

872
00:34:54,969 --> 00:35:00,240
<font color="#E5E5E5">encryption involved in that yes</font>

873
00:35:05,320 --> 00:35:12,330
yeah that's so how does<font color="#E5E5E5"> the accuracy</font>

874
00:35:08,440 --> 00:35:15,160
<font color="#E5E5E5">improve with more symbols fed into</font><font color="#CCCCCC"> it</font>

875
00:35:12,330 --> 00:35:16,319
<font color="#CCCCCC">not</font><font color="#E5E5E5"> the more data you have</font><font color="#CCCCCC"> the less</font>

876
00:35:15,160 --> 00:35:18,790
[Music]

877
00:35:16,320 --> 00:35:20,770
<font color="#CCCCCC">variance</font><font color="#E5E5E5"> you'll have essentially so yeah</font>

878
00:35:18,790 --> 00:35:23,170
more data and<font color="#CCCCCC"> shilling</font><font color="#E5E5E5"> us always better</font>

879
00:35:20,770 --> 00:35:25,050
<font color="#E5E5E5">so the more</font><font color="#CCCCCC"> data you can feed</font><font color="#E5E5E5"> to your</font>

880
00:35:23,170 --> 00:35:27,940
<font color="#E5E5E5">algorithm to better it will work because</font>

881
00:35:25,050 --> 00:35:31,540
<font color="#CCCCCC">for example</font><font color="#E5E5E5"> when I train this model in</font>

882
00:35:27,940 --> 00:35:33,550
my laboratory<font color="#E5E5E5"> at the University and then</font>

883
00:35:31,540 --> 00:35:35,680
move it<font color="#E5E5E5"> somewhere else then it probably</font>

884
00:35:33,550 --> 00:35:37,690
will<font color="#CCCCCC"> not classify correctly</font><font color="#E5E5E5"> anymore</font>

885
00:35:35,680 --> 00:35:39,310
because the channel changed and maybe

886
00:35:37,690 --> 00:35:42,330
<font color="#E5E5E5">the temperature</font><font color="#CCCCCC"> even changed so and</font>

887
00:35:39,310 --> 00:35:44,799
because you<font color="#E5E5E5"> are because</font><font color="#CCCCCC"> you have to</font>

888
00:35:42,330 --> 00:35:46,480
measure such<font color="#E5E5E5"> fine grained errors those</font>

889
00:35:44,800 --> 00:35:48,340
are manufacturing errors all right so

890
00:35:46,480 --> 00:35:51,010
even<font color="#E5E5E5"> temperature has an effect on these</font>

891
00:35:48,340 --> 00:35:52,450
models<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that means that in order to</font>

892
00:35:51,010 --> 00:35:54,220
<font color="#E5E5E5">get a</font><font color="#CCCCCC"> good model</font><font color="#E5E5E5"> maybe you don't have to</font>

893
00:35:52,450 --> 00:35:55,480
look at<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example only</font><font color="#E5E5E5"> the frequency</font>

894
00:35:54,220 --> 00:35:57,220
<font color="#CCCCCC">but you have to incorporate</font><font color="#E5E5E5"> other</font>

895
00:35:55,480 --> 00:35:58,900
features as well<font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> really a</font>

896
00:35:57,220 --> 00:36:02,259
complex task<font color="#E5E5E5"> of getting the right data</font>

897
00:35:58,900 --> 00:36:04,390
for your model and then trying to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> ya</font>

898
00:36:02,260 --> 00:36:06,070
a<font color="#CCCCCC"> good model for predicting which device</font>

899
00:36:04,390 --> 00:36:07,569
<font color="#CCCCCC">is transmitting and that's</font><font color="#E5E5E5"> actually an</font>

900
00:36:06,070 --> 00:36:09,400
active field<font color="#E5E5E5"> of research right</font><font color="#CCCCCC"> now where</font>

901
00:36:07,570 --> 00:36:14,850
people<font color="#E5E5E5"> are trying to figure out new</font><font color="#CCCCCC"> ways</font>

902
00:36:09,400 --> 00:36:14,850
to fingerprint devices yes at the back

903
00:36:20,910 --> 00:36:25,540
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> so what was the sampling rate used</font>

904
00:36:23,350 --> 00:36:26,740
for measuring this<font color="#E5E5E5"> I don't remember</font>

905
00:36:25,540 --> 00:36:29,619
exactly I would<font color="#E5E5E5"> have to check my notes</font>

906
00:36:26,740 --> 00:36:36,459
<font color="#CCCCCC">again but I think it was around</font><font color="#E5E5E5"> 4 mega</font>

907
00:36:29,619 --> 00:36:38,140
samples<font color="#CCCCCC"> per second</font><font color="#E5E5E5"> so you can the</font><font color="#CCCCCC"> USRP</font>

908
00:36:36,460 --> 00:36:45,040
will do that for<font color="#E5E5E5"> you so</font><font color="#CCCCCC"> it's just a</font>

909
00:36:38,140 --> 00:36:47,980
baseband signal that I analyzed well<font color="#CCCCCC"> I</font>

910
00:36:45,040 --> 00:36:51,570
put the center frequency at about 64

911
00:36:47,980 --> 00:36:51,570
<font color="#E5E5E5">mega Hertz I believe yeah</font>

912
00:36:59,589 --> 00:37:04,490
about what

913
00:37:01,010 --> 00:37:08,000
oh yeah yeah yeah<font color="#CCCCCC"> so about the</font>

914
00:37:04,490 --> 00:37:10,189
synchronization of<font color="#CCCCCC"> the AES signal</font><font color="#E5E5E5"> so</font>

915
00:37:08,000 --> 00:37:14,510
this one right here what I<font color="#E5E5E5"> did here is I</font>

916
00:37:10,190 --> 00:37:16,520
just<font color="#E5E5E5"> took one trace as the reference so</font>

917
00:37:14,510 --> 00:37:18,500
one filter trace or with a low pass

918
00:37:16,520 --> 00:37:20,839
filter already applied and then I just

919
00:37:18,500 --> 00:37:23,119
<font color="#E5E5E5">did a cross correlation</font><font color="#CCCCCC"> and cut off the</font>

920
00:37:20,839 --> 00:37:30,529
<font color="#E5E5E5">signal satellites positions so that they</font>

921
00:37:23,119 --> 00:37:35,720
would overlap in<font color="#E5E5E5"> this region sorry I</font>

922
00:37:30,530 --> 00:37:37,790
don't<font color="#CCCCCC"> know yeah yeah I guess yeah it's</font>

923
00:37:35,720 --> 00:37:39,618
like the same algorithm as for<font color="#E5E5E5"> Laura</font>

924
00:37:37,790 --> 00:37:41,180
synchronization you mean yeah

925
00:37:39,619 --> 00:37:43,460
essentially<font color="#E5E5E5"> yes</font>

926
00:37:41,180 --> 00:37:46,750
but then instead<font color="#CCCCCC"> of choosing locally</font>

927
00:37:43,460 --> 00:37:50,420
generated preamble<font color="#E5E5E5"> I just used one</font>

928
00:37:46,750 --> 00:37:53,680
<font color="#CCCCCC">signal</font><font color="#E5E5E5"> it was already</font><font color="#CCCCCC"> available on in</font>

929
00:37:50,420 --> 00:37:53,680
the captures

930
00:38:02,599 --> 00:38:14,490
for visualizing this or other probe yeah

931
00:38:08,580 --> 00:38:18,090
I don't<font color="#E5E5E5"> remember the model number yeah</font>

932
00:38:14,490 --> 00:38:19,560
it's<font color="#E5E5E5"> it's a thing from that</font><font color="#CCCCCC"> Nam yeah</font><font color="#E5E5E5"> but</font>

933
00:38:18,090 --> 00:38:24,050
I don't<font color="#E5E5E5"> remember do you know the model</font>

934
00:38:19,560 --> 00:38:24,049
<font color="#CCCCCC">number yeah</font>

935
00:38:26,710 --> 00:38:34,809
[Applause]

