1
00:00:05,279 --> 00:00:14,500
welcome everyone so next<font color="#E5E5E5"> speaker is</font>

2
00:00:08,080 --> 00:00:18,160
Diego with<font color="#E5E5E5"> snap</font><font color="#CCCCCC"> a toolkit for user space</font>

3
00:00:14,500 --> 00:00:22,810
networking hi<font color="#CCCCCC"> everybody</font>

4
00:00:18,160 --> 00:00:25,359
I thank you very<font color="#E5E5E5"> much thanks for</font>

5
00:00:22,810 --> 00:00:27,640
<font color="#E5E5E5">attending this talk</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this talk talk</font>

6
00:00:25,359 --> 00:00:30,449
<font color="#CCCCCC">title is</font><font color="#E5E5E5"> a snap</font><font color="#CCCCCC"> I'm going to talk</font><font color="#E5E5E5"> about</font>

7
00:00:27,640 --> 00:00:32,619
this<font color="#E5E5E5"> toolkit for programming users</font>

8
00:00:30,449 --> 00:00:35,829
networking functions usually<font color="#E5E5E5"> spell a</font>

9
00:00:32,619 --> 00:00:38,590
space<font color="#CCCCCC"> school snap basically what I were</font>

10
00:00:35,829 --> 00:00:41,050
to<font color="#E5E5E5"> achieve with this talk is three</font>

11
00:00:38,590 --> 00:00:43,180
<font color="#E5E5E5">things introduce you to snap this plane</font>

12
00:00:41,050 --> 00:00:45,129
a little<font color="#CCCCCC"> bit how it works</font><font color="#E5E5E5"> and what</font><font color="#CCCCCC"> can</font>

13
00:00:43,180 --> 00:00:48,579
show you what<font color="#E5E5E5"> kind of things you can</font>

14
00:00:45,129 --> 00:00:51,280
<font color="#CCCCCC">build with the snap</font><font color="#E5E5E5"> so let's go for it</font>

15
00:00:48,579 --> 00:00:53,050
what is a snap snap is a toolkit<font color="#CCCCCC"> for</font>

16
00:00:51,280 --> 00:00:55,179
developing network functions<font color="#E5E5E5"> in user</font>

17
00:00:53,050 --> 00:00:57,640
<font color="#CCCCCC">space and it's mostly aimed for</font>

18
00:00:55,179 --> 00:00:59,530
high-performance networking and I need

19
00:00:57,640 --> 00:01:01,420
to clarify two concepts here in this

20
00:00:59,530 --> 00:01:03,550
<font color="#E5E5E5">definition</font><font color="#CCCCCC"> one is what is a network</font>

21
00:01:01,420 --> 00:01:05,680
function<font color="#E5E5E5"> and another one is what is</font>

22
00:01:03,550 --> 00:01:08,200
high-performance networking so<font color="#E5E5E5"> network</font>

23
00:01:05,680 --> 00:01:10,530
function is basically<font color="#E5E5E5"> a program any</font>

24
00:01:08,200 --> 00:01:13,329
program that<font color="#E5E5E5"> manipulates network traffic</font>

25
00:01:10,530 --> 00:01:15,790
<font color="#E5E5E5">these programs usually what they do is</font><font color="#CCCCCC"> a</font>

26
00:01:13,329 --> 00:01:18,789
<font color="#E5E5E5">series of basic operations</font><font color="#CCCCCC"> such as read</font>

27
00:01:15,790 --> 00:01:20,229
a packet<font color="#CCCCCC"> forward it drop it</font><font color="#E5E5E5"> modified its</font>

28
00:01:18,790 --> 00:01:22,780
feathers or<font color="#CCCCCC"> cranial packets and</font>

29
00:01:20,229 --> 00:01:24,670
combining<font color="#CCCCCC"> these primitives</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can build</font>

30
00:01:22,780 --> 00:01:28,570
any<font color="#CCCCCC"> Network function you can think</font><font color="#E5E5E5"> of</font>

31
00:01:24,670 --> 00:01:31,180
<font color="#E5E5E5">for example a firewall essentially is a</font>

32
00:01:28,570 --> 00:01:32,770
<font color="#E5E5E5">application</font><font color="#CCCCCC"> that which incoming packets</font>

33
00:01:31,180 --> 00:01:35,140
compared into a table of rules<font color="#E5E5E5"> and</font>

34
00:01:32,770 --> 00:01:37,119
execute an action depending<font color="#E5E5E5"> on the</font>

35
00:01:35,140 --> 00:01:39,159
result<font color="#E5E5E5"> it either forwards the packet or</font>

36
00:01:37,119 --> 00:01:41,320
drop it<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Edward addressed us later</font>

37
00:01:39,159 --> 00:01:43,689
gets<font color="#E5E5E5"> incoming packets modify these</font>

38
00:01:41,320 --> 00:01:45,820
<font color="#E5E5E5">headers source IP destination IP</font>

39
00:01:43,689 --> 00:01:47,579
recalculate section and forwards the

40
00:01:45,820 --> 00:01:50,439
packet and<font color="#E5E5E5"> a tunnel in an application</font>

41
00:01:47,579 --> 00:01:52,389
gets incoming packets<font color="#CCCCCC"> creates</font><font color="#E5E5E5"> new ones</font>

42
00:01:50,439 --> 00:01:55,779
<font color="#CCCCCC">bet say</font><font color="#E5E5E5"> all one into the new one and</font>

43
00:01:52,390 --> 00:01:56,920
send it through<font color="#CCCCCC"> the</font><font color="#E5E5E5"> network so these are</font>

44
00:01:55,780 --> 00:01:59,700
the type of applications that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

45
00:01:56,920 --> 00:02:01,990
<font color="#E5E5E5">build with a snap and what is about</font>

46
00:01:59,700 --> 00:02:04,119
high-performance networking so the

47
00:02:01,990 --> 00:02:06,880
networking field has<font color="#CCCCCC"> changed quite</font><font color="#E5E5E5"> a lot</font>

48
00:02:04,119 --> 00:02:10,240
<font color="#E5E5E5">in the last five or six years what has</font>

49
00:02:06,880 --> 00:02:12,490
happened is that<font color="#E5E5E5"> the hardware has become</font>

50
00:02:10,240 --> 00:02:15,610
much<font color="#E5E5E5"> better and the prices have dropped</font>

51
00:02:12,490 --> 00:02:17,920
so nowadays<font color="#E5E5E5"> you can get</font><font color="#CCCCCC"> a ng unique for</font>

52
00:02:15,610 --> 00:02:22,980
100 200 bucks depending on the

53
00:02:17,920 --> 00:02:26,290
the soap<font color="#CCCCCC"> Nick's of 25 g4g are affordable</font>

54
00:02:22,980 --> 00:02:28,268
but still the the appliances<font color="#CCCCCC"> the</font>

55
00:02:26,290 --> 00:02:30,400
<font color="#CCCCCC">equipment that you find in data centers</font>

56
00:02:28,269 --> 00:02:33,129
are still<font color="#E5E5E5"> very expensive</font><font color="#CCCCCC"> these high</font><font color="#E5E5E5"> end</font>

57
00:02:30,400 --> 00:02:35,920
routers by<font color="#E5E5E5"> Cisco so people start to have</font>

58
00:02:33,129 --> 00:02:37,450
this<font color="#E5E5E5"> idea of maybe I can build a piece</font>

59
00:02:35,920 --> 00:02:40,629
of hardware<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is equivalent to these</font>

60
00:02:37,450 --> 00:02:44,560
high end routers using commodity<font color="#E5E5E5"> of the</font>

61
00:02:40,629 --> 00:02:46,298
shell<font color="#E5E5E5"> pieces</font><font color="#CCCCCC"> which maybe you</font><font color="#E5E5E5"> can build a</font>

62
00:02:44,560 --> 00:02:47,829
piece of fiber that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> equivalent but</font>

63
00:02:46,299 --> 00:02:50,650
you still need<font color="#E5E5E5"> to put some software in</font>

64
00:02:47,829 --> 00:02:52,599
<font color="#CCCCCC">that</font><font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> so would you put on the</font>

65
00:02:50,650 --> 00:02:54,459
natural choice it feels<font color="#E5E5E5"> like will be</font>

66
00:02:52,599 --> 00:02:55,988
<font color="#E5E5E5">Linux you know because Linux will</font>

67
00:02:54,459 --> 00:02:58,959
conquer the war we just put Linux

68
00:02:55,989 --> 00:03:01,090
everywhere but the point<font color="#E5E5E5"> is like Linux</font>

69
00:02:58,959 --> 00:03:03,340
it doesn't fit well<font color="#E5E5E5"> and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is scenario</font>

70
00:03:01,090 --> 00:03:05,139
<font color="#E5E5E5">because the way Linda's words is a</font>

71
00:03:03,340 --> 00:03:07,719
general purpose<font color="#E5E5E5"> operating system and</font>

72
00:03:05,139 --> 00:03:10,269
whenever a packet<font color="#CCCCCC"> heats unique there's</font>

73
00:03:07,719 --> 00:03:11,858
going to be an interrupt<font color="#E5E5E5"> and then the</font>

74
00:03:10,269 --> 00:03:13,180
<font color="#E5E5E5">kernel has</font><font color="#CCCCCC"> to handle</font><font color="#E5E5E5"> this packet it goes</font>

75
00:03:11,859 --> 00:03:15,549
through<font color="#CCCCCC"> all the networking layer</font><font color="#E5E5E5"> of the</font>

76
00:03:13,180 --> 00:03:16,629
kernel until it reaches<font color="#E5E5E5"> the user space</font>

77
00:03:15,549 --> 00:03:19,689
where we are running<font color="#E5E5E5"> out general</font>

78
00:03:16,629 --> 00:03:22,388
function so what happens is our<font color="#E5E5E5"> network</font>

79
00:03:19,689 --> 00:03:25,510
function<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> split</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> lands in user</font>

80
00:03:22,389 --> 00:03:27,579
space land<font color="#E5E5E5"> and kernel and there is a</font>

81
00:03:25,510 --> 00:03:29,500
cost of this packet going<font color="#E5E5E5"> through the</font>

82
00:03:27,579 --> 00:03:32,979
networking layer<font color="#E5E5E5"> of the kernel that are</font>

83
00:03:29,500 --> 00:03:38,260
these speeds<font color="#E5E5E5"> is significant for example</font>

84
00:03:32,979 --> 00:03:43,599
if we<font color="#CCCCCC"> are using change in ik dealing</font>

85
00:03:38,260 --> 00:03:45,340
with packets of 550 bytes<font color="#E5E5E5"> so every 440</font>

86
00:03:43,599 --> 00:03:47,168
nanoseconds<font color="#E5E5E5"> a new packet is</font><font color="#CCCCCC"> hit in</font><font color="#E5E5E5"> the</font>

87
00:03:45,340 --> 00:03:49,720
<font color="#CCCCCC">neck if we want</font><font color="#E5E5E5"> to process all these</font>

88
00:03:47,169 --> 00:03:53,049
packets with one single core at 2.5

89
00:03:49,720 --> 00:03:55,030
gigahertz that<font color="#E5E5E5"> means we have 1500 cycles</font>

90
00:03:53,049 --> 00:03:57,699
per packet for a network<font color="#E5E5E5"> function that's</font>

91
00:03:55,030 --> 00:03:59,139
our<font color="#E5E5E5"> budget and then this gets worse if</font>

92
00:03:57,699 --> 00:04:01,900
<font color="#E5E5E5">the packet is a smaller in the smallest</font>

93
00:03:59,139 --> 00:04:03,759
<font color="#E5E5E5">possible packet of 64 byte we are</font>

94
00:04:01,900 --> 00:04:04,629
getting a new packet every 51

95
00:04:03,759 --> 00:04:07,958
nanoseconds

96
00:04:04,629 --> 00:04:10,090
if operations<font color="#E5E5E5"> that happen in the kernel</font>

97
00:04:07,959 --> 00:04:12,579
such<font color="#CCCCCC"> lock unlocks or an l2 cache miss</font>

98
00:04:10,090 --> 00:04:14,290
<font color="#E5E5E5">has a cost that</font><font color="#CCCCCC"> even lead almost</font><font color="#E5E5E5"> the</font>

99
00:04:12,579 --> 00:04:17,349
whole<font color="#E5E5E5"> budget and there is a great</font>

100
00:04:14,290 --> 00:04:19,570
article of a presentation<font color="#CCCCCC"> by Jespers</font>

101
00:04:17,349 --> 00:04:24,280
bruit who is there hello where he

102
00:04:19,570 --> 00:04:25,930
explains all these things so people<font color="#E5E5E5"> fan</font>

103
00:04:24,280 --> 00:04:27,820
<font color="#E5E5E5">out this problem</font><font color="#CCCCCC"> in the kernel and they</font>

104
00:04:25,930 --> 00:04:30,219
start to think<font color="#E5E5E5"> of solutions and and</font>

105
00:04:27,820 --> 00:04:31,270
there<font color="#E5E5E5"> are many solutions to this problem</font>

106
00:04:30,219 --> 00:04:33,640
this in the

107
00:04:31,270 --> 00:04:35,289
<font color="#CCCCCC">Canaris improve as</font><font color="#E5E5E5"> also is what</font>

108
00:04:33,640 --> 00:04:37,840
mentioned that but one of<font color="#E5E5E5"> these</font>

109
00:04:35,290 --> 00:04:39,220
<font color="#E5E5E5">solutions was to do a</font><font color="#CCCCCC"> canal bypass and</font>

110
00:04:37,840 --> 00:04:42,010
<font color="#CCCCCC">occur</font><font color="#E5E5E5"> bypass essentially what it means</font>

111
00:04:39,220 --> 00:04:43,750
<font color="#E5E5E5">is you tell the colonel</font><font color="#CCCCCC"> hey don't worry</font>

112
00:04:42,010 --> 00:04:46,570
about<font color="#CCCCCC"> the leak leave it to me</font><font color="#E5E5E5"> I know how</font>

113
00:04:43,750 --> 00:04:48,790
to<font color="#E5E5E5"> handle and then you program</font><font color="#CCCCCC"> driver</font>

114
00:04:46,570 --> 00:04:50,290
<font color="#E5E5E5">insert space which is quite hard but</font>

115
00:04:48,790 --> 00:04:52,270
that's<font color="#E5E5E5"> how you do it</font>

116
00:04:50,290 --> 00:04:53,860
Michael<font color="#E5E5E5"> look wari the originator of a</font>

117
00:04:52,270 --> 00:04:55,960
snap by my colleague<font color="#CCCCCC"> Asuma takigawa</font>

118
00:04:53,860 --> 00:05:00,700
deliver<font color="#CCCCCC"> I'll talk about</font><font color="#E5E5E5"> how you can</font>

119
00:04:55,960 --> 00:05:02,349
<font color="#E5E5E5">write driver in userspace yesterday and</font>

120
00:05:00,700 --> 00:05:05,050
they're all<font color="#E5E5E5"> they took</font><font color="#CCCCCC"> its that follow of</font>

121
00:05:02,350 --> 00:05:07,240
a similar approach<font color="#E5E5E5"> the rest are took it</font>

122
00:05:05,050 --> 00:05:09,070
very<font color="#CCCCCC"> well-known called the PDK by</font><font color="#E5E5E5"> Intel</font>

123
00:05:07,240 --> 00:05:10,900
there is a collection of drivers in

124
00:05:09,070 --> 00:05:14,200
<font color="#CCCCCC">userspace</font><font color="#E5E5E5"> by different vendors</font><font color="#CCCCCC"> and</font>

125
00:05:10,900 --> 00:05:17,260
<font color="#E5E5E5">there's also VPP now</font><font color="#CCCCCC"> Rene made two FDI</font>

126
00:05:14,200 --> 00:05:19,000
<font color="#E5E5E5">oh by Cisco is</font><font color="#CCCCCC"> operated on the youth</font>

127
00:05:17,260 --> 00:05:22,840
foundation<font color="#CCCCCC"> I mean it follows a</font>

128
00:05:19,000 --> 00:05:25,450
philosophy<font color="#CCCCCC"> very similar to snap</font><font color="#E5E5E5"> so let's</font>

129
00:05:22,840 --> 00:05:28,330
go<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a snap</font><font color="#E5E5E5"> snap it was a project</font>

130
00:05:25,450 --> 00:05:30,820
<font color="#E5E5E5">that started in 2012 by Liguori</font><font color="#CCCCCC"> is</font>

131
00:05:28,330 --> 00:05:33,310
mostly<font color="#CCCCCC"> develop</font><font color="#E5E5E5"> in Lua and it's not means</font>

132
00:05:30,820 --> 00:05:36,790
fast in Swedish<font color="#E5E5E5"> fast is something that</font>

133
00:05:33,310 --> 00:05:39,520
characterizes<font color="#E5E5E5"> just now a snap</font><font color="#CCCCCC"> because</font>

134
00:05:36,790 --> 00:05:43,060
<font color="#E5E5E5">the snap is fast because it has a kernel</font>

135
00:05:39,520 --> 00:05:44,799
bypass it is fast because it's written

136
00:05:43,060 --> 00:05:45,070
in Lua<font color="#E5E5E5"> network functions are</font><font color="#CCCCCC"> written in</font>

137
00:05:44,800 --> 00:05:48,430
Lua

138
00:05:45,070 --> 00:05:50,650
so that's faster that<font color="#CCCCCC"> Kareem in</font><font color="#E5E5E5"> C</font><font color="#CCCCCC"> it's</font>

139
00:05:48,430 --> 00:05:53,260
very<font color="#E5E5E5"> easy with</font><font color="#CCCCCC"> the snap go from</font><font color="#E5E5E5"> idea to</font>

140
00:05:50,650 --> 00:05:56,049
code to production and it's also fast

141
00:05:53,260 --> 00:05:58,500
because it runs on<font color="#E5E5E5"> top</font><font color="#CCCCCC"> of Luigi Luigi it</font>

142
00:05:56,050 --> 00:06:01,450
is a just-in-time compiler for Lua is

143
00:05:58,500 --> 00:06:02,800
<font color="#E5E5E5">stimuli fast virtual machine is regarded</font>

144
00:06:01,450 --> 00:06:03,159
<font color="#E5E5E5">one of the fastest virtual machines out</font>

145
00:06:02,800 --> 00:06:05,770
<font color="#CCCCCC">there</font>

146
00:06:03,160 --> 00:06:07,840
I mean<font color="#CCCCCC"> edition has very good integration</font>

147
00:06:05,770 --> 00:06:09,460
<font color="#CCCCCC">with C thanks</font><font color="#E5E5E5"> to a fun efficient</font>

148
00:06:07,840 --> 00:06:11,469
interface<font color="#CCCCCC"> there is only available in</font>

149
00:06:09,460 --> 00:06:14,710
<font color="#E5E5E5">budget is not implemented by stander Lua</font>

150
00:06:11,470 --> 00:06:16,570
<font color="#CCCCCC">and in a snap most of the data types and</font>

151
00:06:14,710 --> 00:06:21,460
data<font color="#E5E5E5"> structures</font><font color="#CCCCCC"> are actually defined in</font>

152
00:06:16,570 --> 00:06:24,250
see how it works<font color="#E5E5E5"> in a snap a network</font>

153
00:06:21,460 --> 00:06:24,760
function is<font color="#E5E5E5"> essentially a collection of</font>

154
00:06:24,250 --> 00:06:27,730
apps

155
00:06:24,760 --> 00:06:31,539
connected together via links and once we

156
00:06:27,730 --> 00:06:33,790
have this this graph of apps<font color="#E5E5E5"> we pass</font>

157
00:06:31,540 --> 00:06:37,720
into<font color="#E5E5E5"> the snap engine that is going to</font>

158
00:06:33,790 --> 00:06:40,060
run<font color="#E5E5E5"> it</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> units called breads so here's</font>

159
00:06:37,720 --> 00:06:42,490
an example<font color="#E5E5E5"> of a very basic programming</font>

160
00:06:40,060 --> 00:06:44,169
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> nap what we do is</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> start the</font>

161
00:06:42,490 --> 00:06:46,990
configuration then

162
00:06:44,169 --> 00:06:48,639
<font color="#E5E5E5">in this block they absolutely need we</font>

163
00:06:46,990 --> 00:06:50,469
need<font color="#CCCCCC"> an ich</font><font color="#E5E5E5"> this is the the driver</font>

164
00:06:48,639 --> 00:06:52,330
that's going to read<font color="#CCCCCC"> packet from</font><font color="#E5E5E5"> the</font>

165
00:06:50,469 --> 00:06:54,520
<font color="#E5E5E5">knee and then we have a filter in app</font>

166
00:06:52,330 --> 00:06:57,128
<font color="#CCCCCC">that is going to filter packets with</font>

167
00:06:54,520 --> 00:07:00,029
source port 80 and then we have a<font color="#E5E5E5"> pick</font>

168
00:06:57,129 --> 00:07:03,520
<font color="#E5E5E5">up app where we're going to write down</font>

169
00:07:00,029 --> 00:07:05,620
<font color="#E5E5E5">packets to an output file then on the</font>

170
00:07:03,520 --> 00:07:08,409
<font color="#E5E5E5">next block</font><font color="#CCCCCC"> we connect these apps</font>

171
00:07:05,620 --> 00:07:10,689
<font color="#CCCCCC">together whatever</font><font color="#E5E5E5"> comes out from the NIC</font>

172
00:07:08,409 --> 00:07:12,310
is going to fit the<font color="#E5E5E5"> filtering up</font><font color="#CCCCCC"> and</font>

173
00:07:10,689 --> 00:07:15,460
whatever comes out from the filter in

174
00:07:12,310 --> 00:07:16,900
app is going<font color="#CCCCCC"> to fit the</font><font color="#E5E5E5"> pickup up we</font>

175
00:07:15,460 --> 00:07:21,339
pass down<font color="#E5E5E5"> this</font><font color="#CCCCCC"> configuration to the</font>

176
00:07:16,900 --> 00:07:24,938
engine and we'll run it this<font color="#E5E5E5"> how we will</font>

177
00:07:21,339 --> 00:07:27,460
look<font color="#E5E5E5"> like as a graph whatever comes out</font>

178
00:07:24,939 --> 00:07:29,319
from the<font color="#E5E5E5"> NIC it goes to the filtering up</font>

179
00:07:27,460 --> 00:07:31,870
the<font color="#E5E5E5"> filtering up does something with the</font>

180
00:07:29,319 --> 00:07:33,789
packets<font color="#E5E5E5"> and whatever comes out is passed</font>

181
00:07:31,870 --> 00:07:39,370
to the<font color="#E5E5E5"> pickup that eventually rises on</font>

182
00:07:33,789 --> 00:07:41,229
the<font color="#E5E5E5"> packets to a file</font><font color="#CCCCCC"> so I said that the</font>

183
00:07:39,370 --> 00:07:43,990
snap engine process packets<font color="#E5E5E5"> in breads</font>

184
00:07:41,229 --> 00:07:45,729
and bread has two steps<font color="#CCCCCC"> it has an</font>

185
00:07:43,990 --> 00:07:48,069
<font color="#E5E5E5">inhaler step</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is going to put</font>

186
00:07:45,729 --> 00:07:50,830
packets<font color="#CCCCCC"> a bunch of packets actually</font><font color="#E5E5E5"> into</font>

187
00:07:48,069 --> 00:07:52,870
<font color="#E5E5E5">the graph and as hell</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> type a step</font>

188
00:07:50,830 --> 00:07:56,109
that<font color="#E5E5E5"> is going to process those packets</font>

189
00:07:52,870 --> 00:07:58,149
on the<font color="#CCCCCC"> inhale step the method</font><font color="#E5E5E5"> pull of</font>

190
00:07:56,110 --> 00:08:01,210
the apps is a security see if<font color="#CCCCCC"> it's</font>

191
00:07:58,149 --> 00:08:05,860
define and on the SL step the method

192
00:08:01,210 --> 00:08:08,109
push of the apps is executed this is how

193
00:08:05,860 --> 00:08:10,779
the<font color="#CCCCCC"> pull method of the inter driver</font>

194
00:08:08,110 --> 00:08:13,629
looks like well in leverages on another

195
00:08:10,779 --> 00:08:15,699
class<font color="#CCCCCC"> called F</font><font color="#E5E5E5"> but what it does it loops</font>

196
00:08:13,629 --> 00:08:17,649
and what can receive packets is going to

197
00:08:15,699 --> 00:08:21,129
receive a packet and put<font color="#CCCCCC"> it in the</font>

198
00:08:17,649 --> 00:08:23,169
<font color="#E5E5E5">output link and this is how the push</font>

199
00:08:21,129 --> 00:08:27,219
method of the<font color="#E5E5E5"> filtering up we</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> show we</font>

200
00:08:23,169 --> 00:08:29,919
<font color="#CCCCCC">show before looks like what it's going</font>

201
00:08:27,219 --> 00:08:32,140
to do is going to<font color="#E5E5E5"> read the input name</font>

202
00:08:29,919 --> 00:08:34,899
incoming link and what there are packets

203
00:08:32,140 --> 00:08:36,729
receive them and if the packet matches

204
00:08:34,899 --> 00:08:38,679
the expression<font color="#E5E5E5"> the</font><font color="#CCCCCC"> filtering</font><font color="#E5E5E5"> expression</font>

205
00:08:36,729 --> 00:08:44,519
is going<font color="#E5E5E5"> to transmit it to their Apple</font>

206
00:08:38,679 --> 00:08:47,410
link<font color="#E5E5E5"> and if not it drops it as a summary</font>

207
00:08:44,519 --> 00:08:50,260
in snap<font color="#CCCCCC"> there are two things</font><font color="#E5E5E5"> to keep in</font>

208
00:08:47,410 --> 00:08:51,760
mind is that<font color="#E5E5E5"> usually there's only one</font>

209
00:08:50,260 --> 00:08:54,030
<font color="#CCCCCC">app</font><font color="#E5E5E5"> that is going to introduce packets</font>

210
00:08:51,760 --> 00:08:57,390
<font color="#E5E5E5">into the graphic all this up</font><font color="#CCCCCC"> the</font>

211
00:08:54,030 --> 00:09:00,240
or<font color="#E5E5E5"> didn't a trap this will be up such as</font>

212
00:08:57,390 --> 00:09:02,160
driver<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Rick's pockets from the</font><font color="#E5E5E5"> knee</font>

213
00:09:00,240 --> 00:09:05,550
or for example<font color="#CCCCCC"> I pick a breeder that</font>

214
00:09:02,160 --> 00:09:07,079
<font color="#E5E5E5">reads packets from</font><font color="#CCCCCC"> a pickup file or an</font>

215
00:09:05,550 --> 00:09:09,689
<font color="#CCCCCC">application that builds packets on the</font>

216
00:09:07,080 --> 00:09:11,700
<font color="#E5E5E5">flight and then all the other apps are</font>

217
00:09:09,690 --> 00:09:13,170
<font color="#E5E5E5">going to implement a push method because</font>

218
00:09:11,700 --> 00:09:14,820
the push method is what it gives<font color="#CCCCCC"> the</font>

219
00:09:13,170 --> 00:09:18,120
apps the opportunity to do something

220
00:09:14,820 --> 00:09:19,770
<font color="#E5E5E5">with the packet this is how a packet</font>

221
00:09:18,120 --> 00:09:23,100
looks like in a snap<font color="#CCCCCC"> is a very simple</font>

222
00:09:19,770 --> 00:09:25,980
<font color="#E5E5E5">data structure is an array of bytes 10k</font>

223
00:09:23,100 --> 00:09:28,230
actually with a length field and this

224
00:09:25,980 --> 00:09:32,550
and here's how a link looks like a link

225
00:09:28,230 --> 00:09:34,140
is a buffer<font color="#CCCCCC"> of packets 1000</font><font color="#E5E5E5"> and it's</font>

226
00:09:32,550 --> 00:09:37,620
actually a ring buffer<font color="#CCCCCC"> it has two</font>

227
00:09:34,140 --> 00:09:40,470
pointers a red pointer to read packets

228
00:09:37,620 --> 00:09:44,100
<font color="#CCCCCC">front and a right pointed pointer to</font>

229
00:09:40,470 --> 00:09:45,540
write package<font color="#E5E5E5"> to what kind of things you</font>

230
00:09:44,100 --> 00:09:47,220
can do with the snap<font color="#E5E5E5"> so you can do</font>

231
00:09:45,540 --> 00:09:48,980
anything anything<font color="#CCCCCC"> that has to do with</font>

232
00:09:47,220 --> 00:09:51,510
packets you can<font color="#E5E5E5"> build it with</font><font color="#CCCCCC"> the snap</font>

233
00:09:48,980 --> 00:09:52,740
but once you<font color="#E5E5E5"> start with the snap you</font>

234
00:09:51,510 --> 00:09:54,840
don't have to<font color="#E5E5E5"> build</font><font color="#CCCCCC"> everything from</font>

235
00:09:52,740 --> 00:09:57,870
<font color="#CCCCCC">scratch because it snap already gives</font>

236
00:09:54,840 --> 00:09:59,910
you a bus<font color="#E5E5E5"> catalog of things</font><font color="#CCCCCC"> there</font>

237
00:09:57,870 --> 00:10:02,280
<font color="#E5E5E5">already</font><font color="#CCCCCC"> built into the into the</font><font color="#E5E5E5"> toolkit</font>

238
00:09:59,910 --> 00:10:05,959
<font color="#E5E5E5">for example libraries you have libraries</font>

239
00:10:02,280 --> 00:10:08,370
<font color="#E5E5E5">for parsing protocols ipv4 ipv6 TCP</font>

240
00:10:05,960 --> 00:10:11,070
calculating checksums<font color="#E5E5E5"> you have apps</font>

241
00:10:08,370 --> 00:10:13,980
drivers filtering apps load generators

242
00:10:11,070 --> 00:10:15,180
sockets<font color="#CCCCCC"> I said that it's not is mostly</font>

243
00:10:13,980 --> 00:10:17,820
aimed for high-performance<font color="#CCCCCC"> networking</font>

244
00:10:15,180 --> 00:10:20,819
but still you can use the interfaces by

245
00:10:17,820 --> 00:10:23,790
the operating system<font color="#E5E5E5"> UNIX socket raw</font>

246
00:10:20,820 --> 00:10:26,940
socket<font color="#E5E5E5"> top and it already has</font>

247
00:10:23,790 --> 00:10:29,640
<font color="#CCCCCC">full-fledged</font><font color="#E5E5E5"> programs l2 VPN</font><font color="#CCCCCC"> lisper like</font>

248
00:10:26,940 --> 00:10:31,350
we're after<font color="#E5E5E5"> not one function IP fix</font><font color="#CCCCCC"> on</font>

249
00:10:29,640 --> 00:10:33,360
the<font color="#E5E5E5"> next slides are going to go through</font>

250
00:10:31,350 --> 00:10:35,940
some<font color="#CCCCCC"> of these applications that</font><font color="#E5E5E5"> we built</font>

251
00:10:33,360 --> 00:10:39,060
<font color="#E5E5E5">and I will show you what is the things</font>

252
00:10:35,940 --> 00:10:41,430
that<font color="#CCCCCC"> we did for example</font><font color="#E5E5E5"> we built like</font>

253
00:10:39,060 --> 00:10:44,010
what after<font color="#CCCCCC"> network</font><font color="#E5E5E5"> function like what</font>

254
00:10:41,430 --> 00:10:46,410
<font color="#CCCCCC">after is a network function is how is</font>

255
00:10:44,010 --> 00:10:49,770
part of<font color="#CCCCCC"> a</font><font color="#E5E5E5"> standard</font><font color="#CCCCCC"> call like wait for</font>

256
00:10:46,410 --> 00:10:52,439
<font color="#CCCCCC">over six this</font><font color="#E5E5E5"> is an architecture for</font>

257
00:10:49,770 --> 00:10:56,449
deploying<font color="#E5E5E5"> ipv6 only networks and still</font>

258
00:10:52,440 --> 00:10:58,830
offering ipv4 connectivity and services

259
00:10:56,450 --> 00:11:00,360
it was<font color="#CCCCCC"> a project</font><font color="#E5E5E5"> mostly funded by those</font>

260
00:10:58,830 --> 00:11:02,250
telecom because they are deploying this

261
00:11:00,360 --> 00:11:06,150
architecture in their next<font color="#CCCCCC"> generation</font>

262
00:11:02,250 --> 00:11:07,769
networks called Telestream<font color="#E5E5E5"> and a few</font>

263
00:11:06,150 --> 00:11:10,230
<font color="#E5E5E5">months ago I wrote down a blog post</font>

264
00:11:07,769 --> 00:11:11,939
about how like<font color="#E5E5E5"> what after like</font><font color="#CCCCCC"> went</font><font color="#E5E5E5"> for</font>

265
00:11:10,230 --> 00:11:16,649
<font color="#CCCCCC">over</font><font color="#E5E5E5"> six actually worse if you are</font>

266
00:11:11,939 --> 00:11:18,899
interested<font color="#CCCCCC"> please check</font><font color="#E5E5E5"> it out another</font>

267
00:11:16,649 --> 00:11:21,600
application<font color="#E5E5E5"> we built was</font><font color="#CCCCCC"> snap wall</font><font color="#E5E5E5"> and</font>

268
00:11:18,899 --> 00:11:25,230
it's a l7 firewall<font color="#E5E5E5"> and also that's l3</font>

269
00:11:21,600 --> 00:11:28,079
and l4<font color="#E5E5E5"> for the l7 firewall in we use a</font>

270
00:11:25,230 --> 00:11:31,379
library<font color="#CCCCCC"> call</font><font color="#E5E5E5"> live MTP</font><font color="#CCCCCC"> is an open</font><font color="#E5E5E5"> source</font>

271
00:11:28,079 --> 00:11:32,910
<font color="#E5E5E5">library and for the l3 and l4 filtering</font>

272
00:11:31,379 --> 00:11:35,730
we develop our own domain-specific

273
00:11:32,910 --> 00:11:38,129
language called P<font color="#E5E5E5"> flank</font><font color="#CCCCCC"> it was a project</font>

274
00:11:35,730 --> 00:11:39,989
<font color="#CCCCCC">funded by L Annette foundation this is a</font>

275
00:11:38,129 --> 00:11:42,119
foundation based in the Netherlands that

276
00:11:39,989 --> 00:11:43,249
<font color="#E5E5E5">founds open source project</font><font color="#CCCCCC"> that helps</font>

277
00:11:42,119 --> 00:11:47,189
improving the<font color="#CCCCCC"> Internet</font>

278
00:11:43,249 --> 00:11:48,170
actually<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> hf</font><font color="#E5E5E5"> deliberate talk</font>

279
00:11:47,189 --> 00:11:50,368
yesterday

280
00:11:48,170 --> 00:11:53,099
<font color="#CCCCCC">Akeno</font><font color="#E5E5E5"> would call the future of the</font>

281
00:11:50,369 --> 00:11:55,619
<font color="#CCCCCC">Internet another information</font><font color="#E5E5E5"> development</font>

282
00:11:53,100 --> 00:11:57,299
process of snap wall is of this<font color="#E5E5E5"> website</font>

283
00:11:55,619 --> 00:11:59,249
it's<font color="#CCCCCC"> not world or it was operated</font>

284
00:11:57,299 --> 00:12:04,230
<font color="#E5E5E5">developed by my colleague sumo and</font>

285
00:11:59,249 --> 00:12:06,329
Audrey an IP fix IP<font color="#CCCCCC"> fixed</font><font color="#E5E5E5"> stands for</font>

286
00:12:04,230 --> 00:12:08,879
<font color="#E5E5E5">right IP flow information export is a</font>

287
00:12:06,329 --> 00:12:12,989
format for exporting<font color="#CCCCCC"> network flows is</font>

288
00:12:08,879 --> 00:12:15,149
based on Cisco's net flow I think yeah<font color="#E5E5E5"> I</font>

289
00:12:12,990 --> 00:12:15,839
was<font color="#E5E5E5"> a also</font><font color="#CCCCCC"> operate developed by my</font>

290
00:12:15,149 --> 00:12:19,519
colleague<font color="#CCCCCC"> Izumo</font>

291
00:12:15,839 --> 00:12:22,860
and he<font color="#E5E5E5"> wrote on our blog post explaining</font>

292
00:12:19,519 --> 00:12:26,369
<font color="#E5E5E5">the how the tool was built and hide</font>

293
00:12:22,860 --> 00:12:29,759
<font color="#CCCCCC">works and lastly this is something that</font>

294
00:12:26,369 --> 00:12:32,369
<font color="#CCCCCC">I built recently</font><font color="#E5E5E5"> and it's a DNS service</font>

295
00:12:29,759 --> 00:12:34,470
discovery<font color="#E5E5E5"> is for them using</font><font color="#CCCCCC"> a snap</font><font color="#E5E5E5"> I</font>

296
00:12:32,369 --> 00:12:37,470
develop this<font color="#CCCCCC"> or</font><font color="#E5E5E5"> tutorial to</font><font color="#CCCCCC"> show how you</font>

297
00:12:34,470 --> 00:12:41,009
can<font color="#CCCCCC"> use the snap for building programs</font>

298
00:12:37,470 --> 00:12:43,170
using<font color="#E5E5E5"> tap interfaces and what it does</font><font color="#CCCCCC"> it</font>

299
00:12:41,009 --> 00:12:45,029
<font color="#CCCCCC">helps you</font><font color="#E5E5E5"> to discover multicast devices</font>

300
00:12:43,170 --> 00:12:48,179
in a local networks such as chromecast

301
00:12:45,029 --> 00:12:50,999
or I'm Amazon fire TV etc<font color="#E5E5E5"> and</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> done a</font>

302
00:12:48,179 --> 00:12:54,809
<font color="#E5E5E5">blog post</font><font color="#CCCCCC"> about how</font><font color="#E5E5E5"> all the development</font>

303
00:12:50,999 --> 00:12:57,389
process from an idea to<font color="#E5E5E5"> code so how to</font>

304
00:12:54,809 --> 00:13:00,569
get<font color="#E5E5E5"> it started and all their source code</font>

305
00:12:57,389 --> 00:13:04,769
<font color="#E5E5E5">is is at the github</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get you to</font><font color="#CCCCCC"> eat</font>

306
00:13:00,569 --> 00:13:08,160
<font color="#E5E5E5">hub cities</font><font color="#CCCCCC"> nap make the community also</font>

307
00:13:04,769 --> 00:13:10,860
have around in<font color="#E5E5E5"> a</font><font color="#CCCCCC"> slack Channel</font><font color="#E5E5E5"> snacks</font>

308
00:13:08,160 --> 00:13:14,118
like<font color="#E5E5E5"> calm there's also an official</font>

309
00:13:10,860 --> 00:13:16,730
starting<font color="#E5E5E5"> the getting started guide and</font>

310
00:13:14,119 --> 00:13:19,230
but maybe it's a<font color="#E5E5E5"> little bit outdated</font><font color="#CCCCCC"> a</font>

311
00:13:16,730 --> 00:13:21,360
few months ago I<font color="#E5E5E5"> were done our blog post</font>

312
00:13:19,230 --> 00:13:24,000
called snap<font color="#CCCCCC"> explained it in</font>

313
00:13:21,360 --> 00:13:26,880
minutes which is<font color="#E5E5E5"> essentially this talk a</font>

314
00:13:24,000 --> 00:13:30,000
<font color="#E5E5E5">blog format and that was all from my</font>

315
00:13:26,880 --> 00:13:31,920
<font color="#E5E5E5">site hope you</font><font color="#CCCCCC"> liked it</font><font color="#E5E5E5"> and if there</font><font color="#CCCCCC"> are</font>

316
00:13:30,000 --> 00:13:38,640
<font color="#E5E5E5">any questions</font><font color="#CCCCCC"> I'm glad to answer thank</font>

317
00:13:31,920 --> 00:13:42,949
<font color="#E5E5E5">you very much thank you for the talk</font>

318
00:13:38,640 --> 00:13:42,949
<font color="#E5E5E5">Diego we do have some time for questions</font>

319
00:13:53,900 --> 00:14:00,620
thank you for<font color="#CCCCCC"> your presentation</font><font color="#E5E5E5"> I like</font>

320
00:13:58,250 --> 00:14:06,080
<font color="#CCCCCC">the</font><font color="#E5E5E5"> idea that law is used for</font>

321
00:14:00,620 --> 00:14:09,400
programming<font color="#E5E5E5"> and projects that also have</font>

322
00:14:06,080 --> 00:14:13,670
a programming capability open new speech

323
00:14:09,400 --> 00:14:16,279
<font color="#CCCCCC">uses like</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> low-level state not state</font>

324
00:14:13,670 --> 00:14:21,770
machine but like a Turing<font color="#CCCCCC"> machine with a</font>

325
00:14:16,279 --> 00:14:26,330
set<font color="#CCCCCC"> of registers so have you</font><font color="#E5E5E5"> tried to do</font>

326
00:14:21,770 --> 00:14:32,029
some switching systems l2 l3 switches

327
00:14:26,330 --> 00:14:36,830
with snap<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we have tried to build</font>

328
00:14:32,029 --> 00:14:38,779
switch with<font color="#CCCCCC"> the snap</font><font color="#E5E5E5"> yeah I think you</font>

329
00:14:36,830 --> 00:14:41,960
could<font color="#CCCCCC"> build</font><font color="#E5E5E5"> it I think actually there is</font>

330
00:14:38,779 --> 00:14:44,750
a<font color="#E5E5E5"> learning bridge that means that is a</font>

331
00:14:41,960 --> 00:14:50,180
tool that<font color="#E5E5E5"> can learn the map in between</font>

332
00:14:44,750 --> 00:14:51,770
MAC address and<font color="#CCCCCC"> a port but I</font><font color="#E5E5E5"> think I</font>

333
00:14:50,180 --> 00:14:54,290
don't<font color="#CCCCCC"> know if you</font><font color="#E5E5E5"> Sydney is part of the</font>

334
00:14:51,770 --> 00:14:56,449
repository<font color="#E5E5E5"> or it was never merged but</font>

335
00:14:54,290 --> 00:15:05,000
there<font color="#E5E5E5"> were some attempts to build this</font>

336
00:14:56,450 --> 00:15:07,040
tool a switch<font color="#CCCCCC"> no</font><font color="#E5E5E5"> hello you go</font><font color="#CCCCCC"> i I read</font>

337
00:15:05,000 --> 00:15:11,390
in your<font color="#E5E5E5"> github that you have some</font>

338
00:15:07,040 --> 00:15:15,740
<font color="#E5E5E5">support for OpenStack</font><font color="#CCCCCC"> what's the status</font>

339
00:15:11,390 --> 00:15:19,250
<font color="#E5E5E5">of this support so you</font><font color="#CCCCCC"> provide</font><font color="#E5E5E5"> an empty</font>

340
00:15:15,740 --> 00:15:22,850
amount<font color="#E5E5E5"> to drivers for OpenStack somehow</font>

341
00:15:19,250 --> 00:15:26,360
<font color="#E5E5E5">ah the question that there is support</font>

342
00:15:22,850 --> 00:15:29,120
<font color="#CCCCCC">for OpenStack with a snap</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> okay</font>

343
00:15:26,360 --> 00:15:31,730
another familiar<font color="#E5E5E5"> with but what I know is</font>

344
00:15:29,120 --> 00:15:37,070
<font color="#CCCCCC">that new gory sony years ago as it was</font>

345
00:15:31,730 --> 00:15:38,900
in 2015 he had to implement snap the

346
00:15:37,070 --> 00:15:42,290
interfaces of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> neutron layer of</font>

347
00:15:38,900 --> 00:15:44,420
OpenStack<font color="#CCCCCC"> so you could</font><font color="#E5E5E5"> plug snap into</font>

348
00:15:42,290 --> 00:15:45,620
the neutral layer of OpenStack<font color="#E5E5E5"> does it</font>

349
00:15:44,420 --> 00:15:48,380
make sense<font color="#CCCCCC"> because I'm not very</font><font color="#E5E5E5"> familiar</font>

350
00:15:45,620 --> 00:15:50,630
with<font color="#CCCCCC"> oh yes yes yeah so are you using</font><font color="#E5E5E5"> oh</font>

351
00:15:48,380 --> 00:15:53,540
yes open virtual<font color="#E5E5E5"> switch or something</font>

352
00:15:50,630 --> 00:15:57,320
like that<font color="#E5E5E5"> or you</font><font color="#CCCCCC"> are just programming</font>

353
00:15:53,540 --> 00:15:59,980
<font color="#E5E5E5">this layer</font><font color="#CCCCCC"> two functionalities directly</font>

354
00:15:57,320 --> 00:15:59,980
with snap

355
00:16:00,550 --> 00:16:04,660
I don't and<font color="#E5E5E5"> I don't know I don't</font><font color="#CCCCCC"> know</font>

356
00:16:03,160 --> 00:16:06,430
<font color="#E5E5E5">they're</font><font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> and I know that he had</font>

357
00:16:04,660 --> 00:16:11,079
to implement<font color="#E5E5E5"> that because it was a</font>

358
00:16:06,430 --> 00:16:14,199
requirement<font color="#CCCCCC"> it was a long process yeah</font>

359
00:16:11,080 --> 00:16:18,130
open<font color="#CCCCCC"> its targets like that yes</font><font color="#E5E5E5"> so well</font>

360
00:16:14,200 --> 00:16:20,490
my last question sorry<font color="#CCCCCC"> can</font><font color="#E5E5E5"> you implement</font>

361
00:16:18,130 --> 00:16:23,470
using<font color="#E5E5E5"> snap higher functions like</font>

362
00:16:20,490 --> 00:16:23,860
filtering or load<font color="#E5E5E5"> balancers or something</font>

363
00:16:23,470 --> 00:16:27,970
like that

364
00:16:23,860 --> 00:16:30,450
<font color="#E5E5E5">Thanks okay Logan answer's no and</font><font color="#CCCCCC"> what</font>

365
00:16:27,970 --> 00:16:30,450
was the<font color="#E5E5E5"> other one</font>

366
00:16:30,630 --> 00:16:39,610
filtering filtering firewall<font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean yes</font>

367
00:16:36,850 --> 00:16:41,500
<font color="#CCCCCC">yeah okay the question</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> if we have</font>

368
00:16:39,610 --> 00:16:43,870
tried the work you will have used a snap

369
00:16:41,500 --> 00:16:46,270
<font color="#E5E5E5">for building high level applications</font>

370
00:16:43,870 --> 00:16:48,400
such a firewall<font color="#E5E5E5"> or load balancer global</font>

371
00:16:46,270 --> 00:16:50,439
answer<font color="#E5E5E5"> no</font><font color="#CCCCCC"> and a firewall the one</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I</font>

372
00:16:48,400 --> 00:16:54,040
<font color="#E5E5E5">mission is not well it's a it's</font><font color="#CCCCCC"> a</font>

373
00:16:50,440 --> 00:16:58,090
firewall<font color="#E5E5E5"> even for</font><font color="#CCCCCC"> l7 for application</font>

374
00:16:54,040 --> 00:17:00,219
level and also that's l3 and l4<font color="#CCCCCC"> so we</font>

375
00:16:58,090 --> 00:17:01,810
are out<font color="#CCCCCC"> of time now</font><font color="#E5E5E5"> so if you have any</font>

376
00:17:00,220 --> 00:17:05,140
more<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> take it off stage</font>

377
00:17:01,810 --> 00:17:05,429
please<font color="#CCCCCC"> thanks once again thank you very</font>

378
00:17:05,140 --> 00:17:12,369
much

379
00:17:05,430 --> 00:17:12,369
[Applause]

