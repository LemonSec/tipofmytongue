1
00:00:04,960 --> 00:00:09,040
everything we're about<font color="#E5E5E5"> to say is a lie</font>

2
00:00:07,100 --> 00:00:11,570
so don't be basing the decisions on it

3
00:00:09,040 --> 00:00:13,788
<font color="#CCCCCC">we're here to tell you a few well-chosen</font>

4
00:00:11,570 --> 00:00:15,590
words about<font color="#E5E5E5"> Java</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this particular</font>

5
00:00:13,789 --> 00:00:17,390
Java in a world of containers of

6
00:00:15,590 --> 00:00:19,910
containers<font color="#E5E5E5"> and clouds</font><font color="#CCCCCC"> micro-services and</font>

7
00:00:17,390 --> 00:00:21,830
all those<font color="#CCCCCC"> buzzwords managed to fill up</font>

8
00:00:19,910 --> 00:00:24,499
the whole room<font color="#CCCCCC"> just based on those</font>

9
00:00:21,830 --> 00:00:27,019
<font color="#CCCCCC">buzzwords</font><font color="#E5E5E5"> I guess so</font>

10
00:00:24,499 --> 00:00:28,788
let's<font color="#CCCCCC"> we'll go through a</font><font color="#E5E5E5"> bunch of things</font>

11
00:00:27,019 --> 00:00:31,249
<font color="#E5E5E5">25 minutes</font><font color="#CCCCCC"> we'll try to</font><font color="#E5E5E5"> sprint through</font>

12
00:00:28,789 --> 00:00:33,260
<font color="#E5E5E5">it and</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> for the best again</font><font color="#CCCCCC"> let's</font>

13
00:00:31,249 --> 00:00:35,900
start<font color="#CCCCCC"> out with</font><font color="#E5E5E5"> on a high level Java in a</font>

14
00:00:33,260 --> 00:00:38,690
world of containers so in general<font color="#E5E5E5"> in the</font>

15
00:00:35,900 --> 00:00:39,920
<font color="#E5E5E5">world of containers we expect a few</font>

16
00:00:38,690 --> 00:00:41,690
different<font color="#CCCCCC"> things so the first one is</font>

17
00:00:39,920 --> 00:00:43,730
that we expect safety and security to

18
00:00:41,690 --> 00:00:46,789
<font color="#E5E5E5">become increasingly</font><font color="#CCCCCC"> more important over</font>

19
00:00:43,730 --> 00:00:48,890
<font color="#CCCCCC">time both on like you know we've seen</font>

20
00:00:46,789 --> 00:00:50,449
<font color="#E5E5E5">both obviously on the software</font><font color="#CCCCCC"> side</font><font color="#E5E5E5"> but</font>

21
00:00:48,890 --> 00:00:53,600
more<font color="#E5E5E5"> recently</font><font color="#CCCCCC"> also the hardware</font><font color="#E5E5E5"> side</font>

22
00:00:50,449 --> 00:00:56,449
that security well it can be a bit<font color="#CCCCCC"> of a</font>

23
00:00:53,600 --> 00:00:58,460
thing let's say<font color="#E5E5E5"> so over time we expect</font>

24
00:00:56,449 --> 00:01:01,370
<font color="#E5E5E5">that to</font><font color="#CCCCCC"> just increase and become</font><font color="#E5E5E5"> even</font>

25
00:00:58,460 --> 00:01:03,800
<font color="#E5E5E5">more important</font><font color="#CCCCCC"> we also expect there to</font>

26
00:01:01,370 --> 00:01:05,449
be a lot of sprawl<font color="#E5E5E5"> and what I mean</font><font color="#CCCCCC"> by</font>

27
00:01:03,800 --> 00:01:07,399
<font color="#CCCCCC">that or</font><font color="#E5E5E5"> sprawl it comes in a few</font>

28
00:01:05,449 --> 00:01:09,979
<font color="#CCCCCC">different flavors the first one is that</font>

29
00:01:07,400 --> 00:01:13,280
we<font color="#CCCCCC"> expect there to be a large very large</font>

30
00:01:09,979 --> 00:01:15,200
<font color="#CCCCCC">number of</font><font color="#E5E5E5"> instances you basically are</font>

31
00:01:13,280 --> 00:01:17,659
encouraged<font color="#E5E5E5"> to create instances and</font>

32
00:01:15,200 --> 00:01:20,210
create processes<font color="#E5E5E5"> on the fly and create</font><font color="#CCCCCC"> a</font>

33
00:01:17,659 --> 00:01:22,310
lot of<font color="#CCCCCC"> them run more small instances</font>

34
00:01:20,210 --> 00:01:26,119
<font color="#E5E5E5">rather than a few large ones</font><font color="#CCCCCC"> so that's</font>

35
00:01:22,310 --> 00:01:27,860
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> major shift to a seeing you</font>

36
00:01:26,119 --> 00:01:29,420
we also expect there to be a lot<font color="#CCCCCC"> of</font>

37
00:01:27,860 --> 00:01:32,299
<font color="#E5E5E5">different applications</font><font color="#CCCCCC"> where in the past</font>

38
00:01:29,420 --> 00:01:34,340
maybe you ran the same thing<font color="#E5E5E5"> over</font><font color="#CCCCCC"> and</font>

39
00:01:32,299 --> 00:01:36,170
over<font color="#E5E5E5"> again with containers</font>

40
00:01:34,340 --> 00:01:38,990
you're almost encouraged to<font color="#E5E5E5"> create</font>

41
00:01:36,170 --> 00:01:40,880
custom<font color="#E5E5E5"> containers and custom images on</font>

42
00:01:38,990 --> 00:01:44,060
the fly<font color="#E5E5E5"> when you need them instead so a</font>

43
00:01:40,880 --> 00:01:46,520
mix of applications<font color="#CCCCCC"> we expect these</font>

44
00:01:44,060 --> 00:01:48,649
containers to run on a mix of different

45
00:01:46,520 --> 00:01:52,039
<font color="#CCCCCC">machines</font><font color="#E5E5E5"> heterogeneous systems not</font><font color="#CCCCCC"> all</font>

46
00:01:48,649 --> 00:01:54,439
machines look<font color="#E5E5E5"> the same way and also with</font>

47
00:01:52,039 --> 00:01:56,360
different<font color="#CCCCCC"> configurations so even if you</font>

48
00:01:54,439 --> 00:01:57,919
you know<font color="#E5E5E5"> you can and maybe in some cases</font>

49
00:01:56,360 --> 00:02:00,409
it will<font color="#E5E5E5"> help to create containers that</font>

50
00:01:57,920 --> 00:02:03,469
look at the same way<font color="#E5E5E5"> in many cases you</font>

51
00:02:00,409 --> 00:02:04,820
<font color="#E5E5E5">will probably tailor make them with</font>

52
00:02:03,469 --> 00:02:07,059
different<font color="#CCCCCC"> settings</font><font color="#E5E5E5"> and so on and so</font>

53
00:02:04,820 --> 00:02:07,059
forth

54
00:02:14,170 --> 00:02:19,880
so bringing<font color="#E5E5E5"> that over</font><font color="#CCCCCC"> to what it means</font>

55
00:02:16,820 --> 00:02:23,060
<font color="#E5E5E5">for Java so we like to</font><font color="#CCCCCC"> think that Java</font>

56
00:02:19,880 --> 00:02:25,100
<font color="#E5E5E5">is ideally suited for running</font>

57
00:02:23,060 --> 00:02:26,540
<font color="#E5E5E5">applications in this type of environment</font>

58
00:02:25,100 --> 00:02:29,150
<font color="#E5E5E5">so and there are many different reasons</font>

59
00:02:26,540 --> 00:02:30,590
<font color="#E5E5E5">this slide lists a few</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> it's</font>

60
00:02:29,150 --> 00:02:32,420
everything from<font color="#E5E5E5"> the fact</font><font color="#CCCCCC"> that well after</font>

61
00:02:30,590 --> 00:02:34,730
<font color="#CCCCCC">all we have a managed language at</font>

62
00:02:32,420 --> 00:02:37,220
<font color="#CCCCCC">runtime that gives you all the the</font>

63
00:02:34,730 --> 00:02:39,739
benefits of not having<font color="#CCCCCC"> to care about you</font>

64
00:02:37,220 --> 00:02:41,510
know malloc and free and pointers and we

65
00:02:39,740 --> 00:02:43,310
do bounce checking for you<font color="#E5E5E5"> and all those</font>

66
00:02:41,510 --> 00:02:46,850
both those nice<font color="#CCCCCC"> things that</font><font color="#E5E5E5"> we've come</font>

67
00:02:43,310 --> 00:02:49,130
<font color="#E5E5E5">to learn and and love about Java</font><font color="#CCCCCC"> we have</font>

68
00:02:46,850 --> 00:02:50,989
with the JVM we are abstracting the

69
00:02:49,130 --> 00:02:52,430
exact environment<font color="#CCCCCC"> you running in</font><font color="#E5E5E5"> we're</font>

70
00:02:50,990 --> 00:02:56,690
both when it comes to operating<font color="#E5E5E5"> systems</font>

71
00:02:52,430 --> 00:02:58,490
<font color="#CCCCCC">to CPUs and</font><font color="#E5E5E5"> all that we are John Rose</font>

72
00:02:56,690 --> 00:03:00,620
mentioned earlier today<font color="#E5E5E5"> that the whole</font>

73
00:02:58,490 --> 00:03:02,960
<font color="#E5E5E5">platform is a reliable one both in terms</font>

74
00:03:00,620 --> 00:03:05,180
of obviously stability but<font color="#E5E5E5"> also the fact</font>

75
00:03:02,960 --> 00:03:07,850
that we value compatibility very highly

76
00:03:05,180 --> 00:03:09,620
<font color="#E5E5E5">so it's a key design goal of ours to</font>

77
00:03:07,850 --> 00:03:11,600
make<font color="#E5E5E5"> sure that new functionality will be</font>

78
00:03:09,620 --> 00:03:13,640
backwards<font color="#CCCCCC"> compatible and</font><font color="#E5E5E5"> even forward</font>

79
00:03:11,600 --> 00:03:15,109
<font color="#E5E5E5">compatible and and really try to</font><font color="#CCCCCC"> make</font>

80
00:03:13,640 --> 00:03:16,850
sure<font color="#CCCCCC"> that when you take your app and</font>

81
00:03:15,110 --> 00:03:19,310
<font color="#E5E5E5">deploy it on another version of the JVM</font>

82
00:03:16,850 --> 00:03:20,960
<font color="#E5E5E5">or the JDK it will just continue to</font><font color="#CCCCCC"> work</font>

83
00:03:19,310 --> 00:03:25,010
and you get all the nice benefits<font color="#CCCCCC"> of</font>

84
00:03:20,960 --> 00:03:27,860
moving<font color="#CCCCCC"> up</font><font color="#E5E5E5"> the JVM also obviously adapts</font>

85
00:03:25,010 --> 00:03:30,500
to<font color="#E5E5E5"> any changes</font><font color="#CCCCCC"> in in the environment and</font>

86
00:03:27,860 --> 00:03:33,500
make sure you take advantage<font color="#E5E5E5"> of whatever</font>

87
00:03:30,500 --> 00:03:35,780
<font color="#E5E5E5">is</font><font color="#CCCCCC"> in there and compile code is needed</font>

88
00:03:33,500 --> 00:03:37,460
<font color="#E5E5E5">and all those nice</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> and of course</font>

89
00:03:35,780 --> 00:03:39,290
we have a very<font color="#CCCCCC"> rich ecosystem built</font>

90
00:03:37,460 --> 00:03:40,790
around all of<font color="#E5E5E5"> this many</font><font color="#CCCCCC"> different</font>

91
00:03:39,290 --> 00:03:43,299
frameworks and libraries<font color="#E5E5E5"> that all make</font>

92
00:03:40,790 --> 00:03:45,920
this<font color="#E5E5E5"> a good environment to run Java in</font>

93
00:03:43,300 --> 00:03:48,020
yeah so with all that said<font color="#CCCCCC"> we are</font>

94
00:03:45,920 --> 00:03:49,369
<font color="#E5E5E5">committed to like</font><font color="#CCCCCC"> obviously continuing</font>

95
00:03:48,020 --> 00:03:51,200
with the stuff we've<font color="#CCCCCC"> done but also</font>

96
00:03:49,370 --> 00:03:53,450
committed to making sure that Java<font color="#E5E5E5"> is</font>

97
00:03:51,200 --> 00:03:56,089
<font color="#CCCCCC">the first choice when</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> comes to</font>

98
00:03:53,450 --> 00:04:01,280
deployments in container environments or

99
00:03:56,090 --> 00:04:03,080
cloud environments in general how many

100
00:04:01,280 --> 00:04:05,290
people in<font color="#E5E5E5"> here</font><font color="#CCCCCC"> have played around</font><font color="#E5E5E5"> with</font>

101
00:04:03,080 --> 00:04:08,379
docker

102
00:04:05,290 --> 00:04:11,798
excellent<font color="#E5E5E5"> how many people have created a</font>

103
00:04:08,379 --> 00:04:19,539
<font color="#CCCCCC">docker image with Java</font><font color="#E5E5E5"> in it okay most</font>

104
00:04:11,799 --> 00:04:21,519
<font color="#E5E5E5">of you okay good</font><font color="#CCCCCC"> okay good</font><font color="#E5E5E5"> good so I'll</font>

105
00:04:19,539 --> 00:04:22,840
go through<font color="#CCCCCC"> these</font><font color="#E5E5E5"> next few slides really</font>

106
00:04:21,519 --> 00:04:24,970
quickly it was just a<font color="#CCCCCC"> background if you</font>

107
00:04:22,840 --> 00:04:26,919
<font color="#E5E5E5">have never touched talking before so the</font>

108
00:04:24,970 --> 00:04:29,710
point is it's super<font color="#CCCCCC"> simple</font><font color="#E5E5E5"> to create a</font>

109
00:04:26,919 --> 00:04:32,349
docker image with<font color="#CCCCCC"> Java inside of it you</font>

110
00:04:29,710 --> 00:04:34,330
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> create a directory structure</font>

111
00:04:32,350 --> 00:04:37,360
not unlike this<font color="#E5E5E5"> you create your doctor</font>

112
00:04:34,330 --> 00:04:38,859
file you<font color="#CCCCCC"> put your JDK</font><font color="#E5E5E5"> target</font><font color="#CCCCCC"> Z in there</font>

113
00:04:37,360 --> 00:04:41,979
and your application in this case

114
00:04:38,860 --> 00:04:44,199
<font color="#E5E5E5">HelloWorld</font><font color="#CCCCCC"> you create well and I should</font>

115
00:04:41,979 --> 00:04:46,930
say inside of that docker file you

116
00:04:44,199 --> 00:04:48,820
select your<font color="#E5E5E5"> base image so what what</font>

117
00:04:46,930 --> 00:04:51,610
operating system effectively do you want

118
00:04:48,820 --> 00:04:53,860
to base<font color="#E5E5E5"> this image on you say well put</font>

119
00:04:51,610 --> 00:04:56,310
the<font color="#E5E5E5"> data key inside of that set up some</font>

120
00:04:53,860 --> 00:04:59,110
environment stuff<font color="#CCCCCC"> tell the the</font><font color="#E5E5E5"> docker</font>

121
00:04:56,310 --> 00:05:01,720
image to what what to run when it starts

122
00:04:59,110 --> 00:05:03,520
up yeah and then<font color="#E5E5E5"> basically you go</font>

123
00:05:01,720 --> 00:05:06,009
through two different<font color="#CCCCCC"> steps</font><font color="#E5E5E5"> one of which</font>

124
00:05:03,520 --> 00:05:08,049
<font color="#CCCCCC">you do ahead</font><font color="#E5E5E5"> of time</font><font color="#CCCCCC"> to be months</font><font color="#E5E5E5"> ahead</font>

125
00:05:06,009 --> 00:05:10,330
of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> be so will it is building</font>

126
00:05:08,050 --> 00:05:12,610
<font color="#E5E5E5">the</font><font color="#CCCCCC"> actual image so in this case I'm</font>

127
00:05:10,330 --> 00:05:15,280
building that<font color="#CCCCCC"> image and</font><font color="#E5E5E5"> I'm calling it</font>

128
00:05:12,610 --> 00:05:18,039
I'm giving<font color="#CCCCCC"> it a tag my /jt nine</font><font color="#E5E5E5"> it could</font>

129
00:05:15,280 --> 00:05:21,099
be anything<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then from</font><font color="#CCCCCC"> that image</font><font color="#E5E5E5"> you</font>

130
00:05:18,039 --> 00:05:22,900
stamp out individual containers<font color="#CCCCCC"> when you</font>

131
00:05:21,099 --> 00:05:25,030
start up<font color="#E5E5E5"> the application so to speak and</font>

132
00:05:22,900 --> 00:05:27,698
and obviously<font color="#CCCCCC"> you can reuse the image</font>

133
00:05:25,030 --> 00:05:32,669
across<font color="#CCCCCC"> machines and again across time as</font>

134
00:05:27,699 --> 00:05:32,669
well yep

135
00:05:45,770 --> 00:05:53,669
like composing<font color="#CCCCCC"> my people a shared</font><font color="#E5E5E5"> round</font>

136
00:05:50,550 --> 00:05:56,670
independently<font color="#E5E5E5"> of</font><font color="#CCCCCC"> each other but there is</font>

137
00:05:53,670 --> 00:06:03,210
also a cost to having<font color="#E5E5E5"> lots of layers</font>

138
00:05:56,670 --> 00:06:07,170
which is the overlay file system<font color="#CCCCCC"> support</font>

139
00:06:03,210 --> 00:06:13,799
<font color="#E5E5E5">layer so generally like that three four</font>

140
00:06:07,170 --> 00:06:16,560
<font color="#E5E5E5">five</font><font color="#CCCCCC"> pipeline doctor file</font><font color="#E5E5E5"> is minimal</font><font color="#CCCCCC"> as</font>

141
00:06:13,800 --> 00:06:18,740
<font color="#E5E5E5">well</font><font color="#CCCCCC"> to squash your</font><font color="#E5E5E5"> images into a single</font>

142
00:06:16,560 --> 00:06:18,740
there

143
00:06:22,319 --> 00:06:26,099
so now when<font color="#CCCCCC"> we know how to create</font><font color="#E5E5E5"> darker</font>

144
00:06:24,719 --> 00:06:28,800
images one<font color="#CCCCCC"> of the things I'd like to</font>

145
00:06:26,099 --> 00:06:31,860
<font color="#E5E5E5">talk about a bit is crazy creating</font>

146
00:06:28,800 --> 00:06:34,499
custom<font color="#CCCCCC"> je Ari's so it turns out</font><font color="#E5E5E5"> that if</font>

147
00:06:31,860 --> 00:06:35,699
you take<font color="#E5E5E5"> the JDK the</font><font color="#CCCCCC"> world good</font><font color="#E5E5E5"> old JDK</font>

148
00:06:34,499 --> 00:06:38,099
we've been used to<font color="#E5E5E5"> dealing with for a</font>

149
00:06:35,699 --> 00:06:39,839
long time and you<font color="#CCCCCC"> just bake that into</font>

150
00:06:38,099 --> 00:06:42,419
all your darker images or in general

151
00:06:39,839 --> 00:06:44,639
<font color="#E5E5E5">into into</font><font color="#CCCCCC"> your deployment it can be a</font>

152
00:06:42,419 --> 00:06:47,639
bit on like the large and unnecessarily

153
00:06:44,639 --> 00:06:50,550
<font color="#E5E5E5">large side let's say the whole JDK</font>

154
00:06:47,639 --> 00:06:55,229
<font color="#E5E5E5">weighs in at around let's say half a gig</font>

155
00:06:50,550 --> 00:06:58,409
<font color="#E5E5E5">it's 568 Meg's is I think</font><font color="#CCCCCC"> the JDK 90</font><font color="#E5E5E5"> JDK</font>

156
00:06:55,229 --> 00:07:00,089
on<font color="#E5E5E5"> Linux x64</font><font color="#CCCCCC"> and as much as</font><font color="#E5E5E5"> like it</font>

157
00:06:58,409 --> 00:07:02,069
contains a lot<font color="#E5E5E5"> of great things you have</font>

158
00:07:00,089 --> 00:07:05,369
the<font color="#E5E5E5"> stuff that you absolutely want</font>

159
00:07:02,069 --> 00:07:07,709
<font color="#E5E5E5">java.lang Java</font><font color="#CCCCCC"> Ione io</font><font color="#E5E5E5"> things like that</font>

160
00:07:05,369 --> 00:07:09,449
it also contains<font color="#CCCCCC"> a lot of different</font>

161
00:07:07,709 --> 00:07:11,969
things<font color="#E5E5E5"> that probably you don't want</font>

162
00:07:09,449 --> 00:07:13,289
we're trying to help<font color="#E5E5E5"> you not want them</font>

163
00:07:11,969 --> 00:07:15,058
over times the core<font color="#E5E5E5"> but for example</font>

164
00:07:13,289 --> 00:07:17,610
<font color="#CCCCCC">we're trying to deprecated and</font><font color="#E5E5E5"> remove</font>

165
00:07:15,059 --> 00:07:18,930
but that said there<font color="#CCCCCC"> are there's a lot of</font>

166
00:07:17,610 --> 00:07:21,419
stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> in there that you either</font>

167
00:07:18,930 --> 00:07:23,990
don't need or at least for some<font color="#CCCCCC"> some</font>

168
00:07:21,419 --> 00:07:27,299
application<font color="#E5E5E5"> probably they're not needed</font>

169
00:07:23,990 --> 00:07:29,999
<font color="#E5E5E5">so with</font><font color="#CCCCCC"> JT 9 and which exhaust</font><font color="#E5E5E5"> in the</font>

170
00:07:27,300 --> 00:07:32,309
lk9<font color="#E5E5E5"> we now have the support both in</font>

171
00:07:29,999 --> 00:07:35,909
terms of modules and tooling to create

172
00:07:32,309 --> 00:07:40,219
<font color="#CCCCCC">theories on the fly as you need them and</font>

173
00:07:35,909 --> 00:07:40,219
for tailor-made for your application<font color="#E5E5E5"> and</font>

174
00:07:42,110 --> 00:07:48,300
yeah<font color="#E5E5E5"> yeah right in the past we</font><font color="#CCCCCC"> only</font>

175
00:07:45,749 --> 00:07:50,699
provided you with basically one JRE<font color="#E5E5E5"> it</font>

176
00:07:48,300 --> 00:07:52,979
was like DJ<font color="#CCCCCC"> ori</font><font color="#E5E5E5"> and we decided what went</font>

177
00:07:50,699 --> 00:07:54,330
into that<font color="#CCCCCC"> JD JRE specifically</font><font color="#E5E5E5"> but now</font>

178
00:07:52,979 --> 00:07:56,609
you have the<font color="#E5E5E5"> option of saying well</font><font color="#CCCCCC"> i</font>

179
00:07:54,330 --> 00:07:59,128
<font color="#CCCCCC">want these and these pieces one thing</font>

180
00:07:56,610 --> 00:08:01,529
you cannot exclude<font color="#E5E5E5"> this</font><font color="#CCCCCC"> java rock</font><font color="#E5E5E5"> base</font>

181
00:07:59,129 --> 00:08:06,240
that module is needed to well<font color="#E5E5E5"> start up</font>

182
00:08:01,529 --> 00:08:08,189
the JVM at all<font color="#CCCCCC"> but in basically for your</font>

183
00:08:06,240 --> 00:08:09,959
application you<font color="#CCCCCC"> can select</font><font color="#E5E5E5"> really what</font>

184
00:08:08,189 --> 00:08:11,789
you want to<font color="#CCCCCC"> include and we also have</font>

185
00:08:09,959 --> 00:08:15,089
tooling to help you select<font color="#E5E5E5"> whatever</font>

186
00:08:11,789 --> 00:08:17,009
<font color="#E5E5E5">should go</font><font color="#CCCCCC"> into the JRE</font><font color="#E5E5E5"> so specifically</font>

187
00:08:15,089 --> 00:08:19,559
there's a<font color="#CCCCCC"> jade depths tool that now</font>

188
00:08:17,009 --> 00:08:21,749
lives in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> jdk itself and you can</font>

189
00:08:19,559 --> 00:08:24,479
point it at<font color="#CCCCCC"> the class file or a jar file</font>

190
00:08:21,749 --> 00:08:28,289
<font color="#CCCCCC">and it will</font><font color="#E5E5E5"> help you spit out the</font>

191
00:08:24,479 --> 00:08:31,438
modules<font color="#CCCCCC"> that it depends on so I for</font>

192
00:08:28,289 --> 00:08:33,059
<font color="#CCCCCC">example here this and</font><font color="#E5E5E5"> these are just the</font>

193
00:08:31,439 --> 00:08:35,459
<font color="#E5E5E5">first few lines of running that</font><font color="#CCCCCC"> on the</font>

194
00:08:33,059 --> 00:08:36,030
<font color="#CCCCCC">Tomcat jar I found somewhere and it's</font>

195
00:08:35,458 --> 00:08:37,919
<font color="#E5E5E5">saying that</font>

196
00:08:36,030 --> 00:08:39,839
you need Java<font color="#CCCCCC"> to face</font><font color="#E5E5E5"> Java instruments</font>

197
00:08:37,919 --> 00:08:42,030
<font color="#E5E5E5">German aiming there were a few other</font>

198
00:08:39,840 --> 00:08:46,230
things<font color="#E5E5E5"> but</font><font color="#CCCCCC"> basically that's that's it in</font>

199
00:08:42,030 --> 00:08:47,970
a nutshell<font color="#CCCCCC"> so creating a custom theory</font>

200
00:08:46,230 --> 00:08:50,070
is very<font color="#E5E5E5"> straightforward</font><font color="#CCCCCC"> you use two</font>

201
00:08:47,970 --> 00:08:54,000
jailing tool that then mentioned earlier

202
00:08:50,070 --> 00:08:56,340
<font color="#CCCCCC">and you you give it a</font><font color="#E5E5E5"> few options</font><font color="#CCCCCC"> so the</font>

203
00:08:54,000 --> 00:08:59,310
example there shows how I'm<font color="#E5E5E5"> creating a</font>

204
00:08:56,340 --> 00:09:02,130
JRE<font color="#E5E5E5"> with only the</font><font color="#CCCCCC"> Javadoc</font><font color="#E5E5E5"> base</font><font color="#CCCCCC"> module in</font>

205
00:08:59,310 --> 00:09:04,829
it I'm basically saying create<font color="#E5E5E5"> spit out</font>

206
00:09:02,130 --> 00:09:07,620
a JRE in this directory<font color="#E5E5E5"> the directory in</font>

207
00:09:04,830 --> 00:09:09,750
question is my - JRE<font color="#CCCCCC"> I'm saying pick up</font>

208
00:09:07,620 --> 00:09:11,430
the modules<font color="#E5E5E5"> from here the modules live</font>

209
00:09:09,750 --> 00:09:13,590
inside of the JDK so you start out<font color="#CCCCCC"> with</font>

210
00:09:11,430 --> 00:09:15,989
<font color="#E5E5E5">your JDK</font><font color="#CCCCCC"> and you say pick modules from</font>

211
00:09:13,590 --> 00:09:18,240
<font color="#E5E5E5">this JDK and I only want to</font><font color="#CCCCCC"> include Java</font>

212
00:09:15,990 --> 00:09:20,100
<font color="#CCCCCC">top</font><font color="#E5E5E5"> base and a few microseconds later</font>

213
00:09:18,240 --> 00:09:21,750
you'll have<font color="#CCCCCC"> a Jade JRE that is</font>

214
00:09:20,100 --> 00:09:23,430
tailor-made<font color="#E5E5E5"> to only include Java top</font>

215
00:09:21,750 --> 00:09:26,400
<font color="#CCCCCC">base and you can run</font><font color="#E5E5E5"> hello world with it</font>

216
00:09:23,430 --> 00:09:28,530
it<font color="#E5E5E5"> should</font><font color="#CCCCCC"> be noted that the application</font>

217
00:09:26,400 --> 00:09:30,949
<font color="#E5E5E5">hello world or Tomcat or whatever you're</font>

218
00:09:28,530 --> 00:09:33,990
running<font color="#E5E5E5"> does not need to be</font><font color="#CCCCCC"> module</font>

219
00:09:30,950 --> 00:09:36,680
modularized<font color="#CCCCCC"> to armaid modular</font><font color="#E5E5E5"> where to</font>

220
00:09:33,990 --> 00:09:39,600
use this<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> create it for your own</font>

221
00:09:36,680 --> 00:10:02,219
let's say job applications even<font color="#E5E5E5"> before</font>

222
00:09:39,600 --> 00:10:08,100
what do I do the build stage at the

223
00:10:02,220 --> 00:10:10,310
start saving stuff<font color="#E5E5E5"> in there and this</font><font color="#CCCCCC"> is</font>

224
00:10:08,100 --> 00:10:10,310
where

225
00:10:11,830 --> 00:10:16,880
and then you can copy things<font color="#E5E5E5"> in the</font>

226
00:10:14,720 --> 00:10:19,250
second<font color="#E5E5E5"> kind of stanza from the Java</font>

227
00:10:16,880 --> 00:10:34,370
<font color="#CCCCCC">field and you only end up with</font><font color="#E5E5E5"> the data</font>

228
00:10:19,250 --> 00:10:36,050
and players from<font color="#CCCCCC"> the so what kind of</font>

229
00:10:34,370 --> 00:10:37,940
benefits can you get by doing<font color="#E5E5E5"> all of</font>

230
00:10:36,050 --> 00:10:39,709
this why would you create<font color="#E5E5E5"> your own</font><font color="#CCCCCC"> gary</font>

231
00:10:37,940 --> 00:10:41,870
<font color="#CCCCCC">well</font><font color="#E5E5E5"> yeah it turns out that one</font><font color="#CCCCCC"> of the</font>

232
00:10:39,710 --> 00:10:43,130
key things is obviously<font color="#CCCCCC"> science but dan</font>

233
00:10:41,870 --> 00:10:45,530
<font color="#E5E5E5">mentioned there's more to it than</font><font color="#CCCCCC"> that</font>

234
00:10:43,130 --> 00:10:47,420
it's what as well<font color="#CCCCCC"> I'm going to talk a</font>

235
00:10:45,530 --> 00:10:49,790
bit<font color="#E5E5E5"> about</font><font color="#CCCCCC"> size</font><font color="#E5E5E5"> specifically over</font><font color="#CCCCCC"> the</font>

236
00:10:47,420 --> 00:10:52,459
next<font color="#E5E5E5"> few slides and the first one here</font>

237
00:10:49,790 --> 00:10:56,000
is<font color="#E5E5E5"> showing a chart with three bars on</font><font color="#CCCCCC"> it</font>

238
00:10:52,460 --> 00:10:57,650
<font color="#E5E5E5">the large dish one there is the JDK as I</font>

239
00:10:56,000 --> 00:10:58,330
mentioned it's five hundred<font color="#CCCCCC"> and sixty or</font>

240
00:10:57,650 --> 00:11:00,590
so Meg's

241
00:10:58,330 --> 00:11:04,220
and again it contains a lot<font color="#CCCCCC"> of great</font>

242
00:11:00,590 --> 00:11:05,960
stuff<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> which you may not need so</font>

243
00:11:04,220 --> 00:11:09,170
the other two bars are showing<font color="#CCCCCC"> what a</font>

244
00:11:05,960 --> 00:11:10,700
corresponding<font color="#CCCCCC"> Java top base only JRE</font>

245
00:11:09,170 --> 00:11:12,979
would look like so here<font color="#CCCCCC"> this is where</font>

246
00:11:10,700 --> 00:11:14,630
I've run<font color="#CCCCCC"> jailing can I've said</font><font color="#E5E5E5"> only</font>

247
00:11:12,980 --> 00:11:17,180
include Java top base and I end up<font color="#CCCCCC"> with</font>

248
00:11:14,630 --> 00:11:20,470
<font color="#E5E5E5">something ballpark 50 Meg's which is</font>

249
00:11:17,180 --> 00:11:22,910
obviously you<font color="#E5E5E5"> know pretty</font><font color="#CCCCCC"> pretty sweet</font>

250
00:11:20,470 --> 00:11:26,780
<font color="#CCCCCC">savings</font><font color="#E5E5E5"> almost like 10 times or more</font>

251
00:11:22,910 --> 00:11:28,520
<font color="#E5E5E5">than</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> times even yeah it's it may well</font>

252
00:11:26,780 --> 00:11:30,890
<font color="#CCCCCC">be the case that a lot of</font><font color="#E5E5E5"> applications</font>

253
00:11:28,520 --> 00:11:33,890
need more than Java<font color="#E5E5E5"> dot base so as some</font>

254
00:11:30,890 --> 00:11:35,810
kind<font color="#E5E5E5"> of you know more realistic number</font>

255
00:11:33,890 --> 00:11:39,470
we've created something called natty

256
00:11:35,810 --> 00:11:42,380
it's like quote neti<font color="#CCCCCC"> it's it's a set of</font>

257
00:11:39,470 --> 00:11:44,000
modules<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are like key for your job</font>

258
00:11:42,380 --> 00:11:46,160
applications it's almost like<font color="#CCCCCC"> likely</font>

259
00:11:44,000 --> 00:11:48,410
that that it<font color="#E5E5E5"> will work if you include</font>

260
00:11:46,160 --> 00:11:50,060
those modules<font color="#E5E5E5"> so it's but obviously it</font>

261
00:11:48,410 --> 00:11:52,130
depends on<font color="#E5E5E5"> exactly which application</font><font color="#CCCCCC"> you</font>

262
00:11:50,060 --> 00:11:54,439
have but as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see we're still down</font>

263
00:11:52,130 --> 00:11:57,680
<font color="#E5E5E5">like almost like</font><font color="#CCCCCC"> ten times</font><font color="#E5E5E5"> smaller sixty</font>

264
00:11:54,440 --> 00:11:59,690
Meg's<font color="#E5E5E5"> or so so that's pretty sweet</font><font color="#CCCCCC"> you</font>

265
00:11:57,680 --> 00:12:01,880
know<font color="#E5E5E5"> it's starting to get bearable let's</font>

266
00:11:59,690 --> 00:12:03,860
say still<font color="#E5E5E5"> a bit large compared to I</font>

267
00:12:01,880 --> 00:12:05,240
guess your average C++ application or

268
00:12:03,860 --> 00:12:07,130
something<font color="#CCCCCC"> but then again you get</font><font color="#E5E5E5"> all the</font>

269
00:12:05,240 --> 00:12:10,330
benefits<font color="#CCCCCC"> of Java and the safety and all</font>

270
00:12:07,130 --> 00:12:12,530
that<font color="#CCCCCC"> I should point out that</font><font color="#E5E5E5"> the nanny</font>

271
00:12:10,330 --> 00:12:14,690
bars and all of these<font color="#E5E5E5"> bars they don't</font>

272
00:12:12,530 --> 00:12:17,120
contain any application it's just the

273
00:12:14,690 --> 00:12:19,190
<font color="#CCCCCC">Jade or EE itself the core libraries of</font>

274
00:12:17,120 --> 00:12:21,440
<font color="#E5E5E5">JVM so obviously depending on what is</font>

275
00:12:19,190 --> 00:12:25,100
what<font color="#E5E5E5"> you add on top</font><font color="#CCCCCC"> of this it will</font>

276
00:12:21,440 --> 00:12:27,019
become bigger<font color="#E5E5E5"> the size can be optimized</font>

277
00:12:25,100 --> 00:12:30,019
further<font color="#CCCCCC"> one of the key ways</font><font color="#E5E5E5"> of doing</font>

278
00:12:27,019 --> 00:12:32,540
that is<font color="#CCCCCC"> by specifying a command-line</font>

279
00:12:30,019 --> 00:12:33,709
<font color="#E5E5E5">option</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> J link called - - compressed or</font>

280
00:12:32,540 --> 00:12:36,079
there's a short version<font color="#CCCCCC"> of it</font><font color="#E5E5E5"> as well</font>

281
00:12:33,709 --> 00:12:38,180
<font color="#E5E5E5">and</font><font color="#CCCCCC"> basically what that</font><font color="#E5E5E5"> does is take</font>

282
00:12:36,079 --> 00:12:43,099
<font color="#E5E5E5">some of</font><font color="#CCCCCC"> the resources</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the JRE</font>

283
00:12:38,180 --> 00:12:44,628
<font color="#E5E5E5">and compress them</font><font color="#CCCCCC"> so it's not entirely</font>

284
00:12:43,100 --> 00:12:47,990
unlikely<font color="#E5E5E5"> that you'll see something</font>

285
00:12:44,629 --> 00:12:49,610
ballpark<font color="#E5E5E5"> 25%</font><font color="#CCCCCC"> savings on top of all of</font>

286
00:12:47,990 --> 00:12:51,879
<font color="#E5E5E5">this so you can squeeze it down even</font>

287
00:12:49,610 --> 00:12:51,879
<font color="#CCCCCC">further</font>

288
00:13:01,750 --> 00:13:04,930
good point

289
00:13:05,199 --> 00:13:12,229
okay so now we've optimized the<font color="#E5E5E5"> JDK or</font>

290
00:13:09,889 --> 00:13:14,660
the<font color="#E5E5E5"> J</font><font color="#CCCCCC"> or if it's a will and it turns out</font>

291
00:13:12,230 --> 00:13:16,910
<font color="#CCCCCC">that if you if we now go back to and</font>

292
00:13:14,660 --> 00:13:19,069
<font color="#CCCCCC">look at what a full docker image would</font>

293
00:13:16,910 --> 00:13:20,689
<font color="#CCCCCC">look like you look something along the</font>

294
00:13:19,069 --> 00:13:22,969
lines of<font color="#E5E5E5"> this so on the left hand side</font>

295
00:13:20,689 --> 00:13:26,029
there I have Oracle Linux<font color="#E5E5E5"> because</font><font color="#CCCCCC"> I work</font>

296
00:13:22,970 --> 00:13:28,730
at Oracle but you know think any<font color="#E5E5E5"> Linux</font>

297
00:13:26,029 --> 00:13:30,680
<font color="#E5E5E5">distribution and obviously you can tell</font>

298
00:13:28,730 --> 00:13:33,079
that like we can continue optimizing

299
00:13:30,680 --> 00:13:35,329
that<font color="#E5E5E5"> top</font><font color="#CCCCCC"> 46 Meg's but it's not gonna</font>

300
00:13:33,079 --> 00:13:38,660
make<font color="#E5E5E5"> a big</font><font color="#CCCCCC"> difference</font><font color="#E5E5E5"> if like the bottom</font>

301
00:13:35,329 --> 00:13:40,008
thing is still the big one<font color="#E5E5E5"> right so time</font>

302
00:13:38,660 --> 00:13:42,620
to start looking<font color="#CCCCCC"> at what we can</font><font color="#E5E5E5"> do on</font>

303
00:13:40,009 --> 00:13:44,689
<font color="#CCCCCC">that side and one</font><font color="#E5E5E5"> of the things we can</font>

304
00:13:42,620 --> 00:13:47,269
look at is obviously sort of in the same

305
00:13:44,689 --> 00:13:49,099
<font color="#E5E5E5">vein</font><font color="#CCCCCC"> as like using J link on the jdk</font>

306
00:13:47,269 --> 00:13:51,589
side we can look at<font color="#E5E5E5"> stripping down the</font>

307
00:13:49,100 --> 00:13:53,029
Linux distribution itself<font color="#E5E5E5"> and it turns</font>

308
00:13:51,589 --> 00:13:55,480
<font color="#E5E5E5">out that there</font><font color="#CCCCCC"> is a version of</font><font color="#E5E5E5"> the</font>

309
00:13:53,029 --> 00:13:59,180
Oracle Linux docker image called the

310
00:13:55,480 --> 00:14:00,680
slim version and it's basically the like

311
00:13:59,180 --> 00:14:02,479
the same thing<font color="#E5E5E5"> but stripping out</font>

312
00:14:00,680 --> 00:14:05,930
everything that<font color="#E5E5E5"> an application is</font>

313
00:14:02,480 --> 00:14:07,550
<font color="#E5E5E5">unlikely to use and that's obviously a</font>

314
00:14:05,930 --> 00:14:09,258
good<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> you know if the application</font>

315
00:14:07,550 --> 00:14:10,309
in the end doesn't<font color="#CCCCCC"> P</font><font color="#E5E5E5"> did why include it</font>

316
00:14:09,259 --> 00:14:12,410
at all

317
00:14:10,309 --> 00:14:14,719
and in general<font color="#CCCCCC"> it's true obviously that</font>

318
00:14:12,410 --> 00:14:18,439
<font color="#E5E5E5">in the world like the one we have with</font>

319
00:14:14,720 --> 00:14:20,389
<font color="#E5E5E5">docker in containers</font><font color="#CCCCCC"> you're unlikely to</font>

320
00:14:18,439 --> 00:14:22,189
sort<font color="#E5E5E5"> of log into your containers part</font>

321
00:14:20,389 --> 00:14:24,769
managing it and<font color="#CCCCCC"> running things</font><font color="#E5E5E5"> on the</font>

322
00:14:22,189 --> 00:14:26,269
command line<font color="#CCCCCC"> so as</font><font color="#E5E5E5"> long as it runs the</font>

323
00:14:24,769 --> 00:14:27,889
process and as long as<font color="#E5E5E5"> it runs the</font>

324
00:14:26,269 --> 00:14:30,139
application you<font color="#CCCCCC"> have inside of</font><font color="#E5E5E5"> your</font>

325
00:14:27,889 --> 00:14:33,079
image<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> really matter</font><font color="#E5E5E5"> what the</font>

326
00:14:30,139 --> 00:14:34,490
base image<font color="#E5E5E5"> is as long as in our case it</font>

327
00:14:33,079 --> 00:14:35,989
runs Java

328
00:14:34,490 --> 00:15:00,560
why would we care about<font color="#E5E5E5"> the exact</font>

329
00:14:35,990 --> 00:15:02,810
distribution that<font color="#CCCCCC"> is running so with</font>

330
00:15:00,560 --> 00:15:04,880
that in mind<font color="#CCCCCC"> surely there must be</font>

331
00:15:02,810 --> 00:15:08,719
something<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can do about those let's</font>

332
00:15:04,880 --> 00:15:11,540
<font color="#E5E5E5">say 100 or so Meg's</font><font color="#CCCCCC"> or base image</font><font color="#E5E5E5"> and</font>

333
00:15:08,720 --> 00:15:13,520
that's where we queue up<font color="#CCCCCC"> Alpine</font><font color="#E5E5E5"> Linux</font>

334
00:15:11,540 --> 00:15:15,770
and<font color="#E5E5E5"> the muscle</font><font color="#CCCCCC"> sea library so</font><font color="#E5E5E5"> alpha and</font>

335
00:15:13,520 --> 00:15:18,410
<font color="#E5E5E5">Linux is a distribution</font><font color="#CCCCCC"> that has this</font>

336
00:15:15,770 --> 00:15:21,890
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> tag line that it's small simple and</font>

337
00:15:18,410 --> 00:15:23,689
secure<font color="#E5E5E5"> and it's basically targeting</font>

338
00:15:21,890 --> 00:15:25,100
environments much like you<font color="#E5E5E5"> know the ones</font>

339
00:15:23,690 --> 00:15:29,810
<font color="#CCCCCC">we're describing</font><font color="#E5E5E5"> here with</font><font color="#CCCCCC"> dr. in</font>

340
00:15:25,100 --> 00:15:31,279
containers on the<font color="#E5E5E5"> key interest for</font><font color="#CCCCCC"> us on</font>

341
00:15:29,810 --> 00:15:33,500
the Java<font color="#E5E5E5"> side is that it's using the</font>

342
00:15:31,279 --> 00:15:35,510
muscle<font color="#CCCCCC"> C</font><font color="#E5E5E5"> library so normally on Linux</font>

343
00:15:33,500 --> 00:15:37,339
you'd see the<font color="#CCCCCC"> do</font><font color="#E5E5E5"> C library that's what</font>

344
00:15:35,510 --> 00:15:39,200
you know we<font color="#E5E5E5"> don't even think about it</font>

345
00:15:37,339 --> 00:15:41,510
all<font color="#CCCCCC"> that much we almost associate the</font>

346
00:15:39,200 --> 00:15:43,040
<font color="#CCCCCC">university library with Linux but</font>

347
00:15:41,510 --> 00:15:45,829
obviously there's nothing<font color="#E5E5E5"> preventing</font><font color="#CCCCCC"> you</font>

348
00:15:43,040 --> 00:15:49,219
from<font color="#E5E5E5"> running another C library and the</font>

349
00:15:45,829 --> 00:15:52,250
muscle<font color="#E5E5E5"> C library has that it's tag line</font>

350
00:15:49,220 --> 00:15:54,920
<font color="#CCCCCC">that is lightweight fast simple in lots</font>

351
00:15:52,250 --> 00:15:56,570
of different things<font color="#E5E5E5"> yeah in the end it</font>

352
00:15:54,920 --> 00:15:58,069
should<font color="#CCCCCC"> just be another C library</font><font color="#E5E5E5"> right</font>

353
00:15:56,570 --> 00:16:00,020
the old<font color="#E5E5E5"> C libraries should be the same</font>

354
00:15:58,070 --> 00:16:02,120
and you know it's a standard<font color="#CCCCCC"> API and</font>

355
00:16:00,020 --> 00:16:06,800
whatever it is<font color="#E5E5E5"> and that turns out to be</font>

356
00:16:02,120 --> 00:16:10,579
almost true hence we created the open

357
00:16:06,800 --> 00:16:12,529
<font color="#CCCCCC">prov</font><font color="#E5E5E5"> open JDK project Portola</font><font color="#CCCCCC"> Thank You</font>

358
00:16:10,579 --> 00:16:15,140
<font color="#E5E5E5">John Rose for the name comes</font><font color="#CCCCCC"> from by the</font>

359
00:16:12,529 --> 00:16:20,360
way<font color="#E5E5E5"> the fact that Alpine Road in</font><font color="#CCCCCC"> Bay</font>

360
00:16:15,140 --> 00:16:23,110
<font color="#CCCCCC">Area leads to</font><font color="#E5E5E5"> Portola Valley</font><font color="#CCCCCC"> yeah nerds</font>

361
00:16:20,360 --> 00:16:27,290
<font color="#E5E5E5">do you know exactly where</font><font color="#CCCCCC"> all nerds here</font>

362
00:16:23,110 --> 00:16:29,029
so the the product is the goal<font color="#CCCCCC"> of the</font>

363
00:16:27,290 --> 00:16:31,670
product is to<font color="#CCCCCC"> provide</font><font color="#E5E5E5"> the port of the</font>

364
00:16:29,029 --> 00:16:33,620
<font color="#E5E5E5">JDK to the</font><font color="#CCCCCC"> Alpine</font><font color="#E5E5E5"> Linux distribution or</font>

365
00:16:31,670 --> 00:16:35,390
more<font color="#E5E5E5"> accurately because it turns out</font>

366
00:16:33,620 --> 00:16:39,920
<font color="#CCCCCC">that what's relevant</font><font color="#E5E5E5"> for us is the</font>

367
00:16:35,390 --> 00:16:42,170
<font color="#E5E5E5">muscle C library</font><font color="#CCCCCC"> and I the stages the</font>

368
00:16:39,920 --> 00:16:44,870
status of the<font color="#E5E5E5"> product right</font><font color="#CCCCCC"> now is that</font>

369
00:16:42,170 --> 00:16:46,880
it's sort of working<font color="#E5E5E5"> we have the code</font>

370
00:16:44,870 --> 00:16:47,960
all the<font color="#E5E5E5"> changes</font><font color="#CCCCCC"> that we know are needed</font>

371
00:16:46,880 --> 00:16:51,380
in the

372
00:16:47,960 --> 00:16:54,080
<font color="#CCCCCC">forests we're in the repo and it's sort</font>

373
00:16:51,380 --> 00:16:57,020
of working<font color="#E5E5E5"> only we haven't integrated</font>

374
00:16:54,080 --> 00:17:00,410
<font color="#CCCCCC">into</font><font color="#E5E5E5"> mainline yet</font><font color="#CCCCCC"> and I will get back to</font>

375
00:16:57,020 --> 00:17:02,770
<font color="#CCCCCC">to that</font><font color="#E5E5E5"> in a second but</font><font color="#CCCCCC"> basically in a</font>

376
00:17:00,410 --> 00:17:04,790
nutshell<font color="#E5E5E5"> the changes needed were</font>

377
00:17:02,770 --> 00:17:07,129
relatively straightforward there's a lot

378
00:17:04,790 --> 00:17:09,709
of you<font color="#CCCCCC"> know if</font><font color="#E5E5E5"> you have code and you've</font>

379
00:17:07,130 --> 00:17:12,440
only worked with<font color="#E5E5E5"> a single library for a</font>

380
00:17:09,709 --> 00:17:14,150
long time then you tend tend to rely on

381
00:17:12,440 --> 00:17:16,730
things<font color="#CCCCCC"> that are in the end libraries</font>

382
00:17:14,150 --> 00:17:18,620
specific in this<font color="#E5E5E5"> in our case</font><font color="#CCCCCC"> you know</font>

383
00:17:16,730 --> 00:17:19,970
<font color="#CCCCCC">you see</font><font color="#E5E5E5"> library specific and a lot of it</font>

384
00:17:18,619 --> 00:17:22,399
was<font color="#CCCCCC"> just shaping up codes that are</font>

385
00:17:19,970 --> 00:17:24,050
<font color="#CCCCCC">actually compiled</font><font color="#E5E5E5"> I happen to be the</font>

386
00:17:22,400 --> 00:17:25,190
lead<font color="#CCCCCC"> of this project and</font><font color="#E5E5E5"> I happened to</font>

387
00:17:24,050 --> 00:17:27,560
be<font color="#E5E5E5"> the person</font><font color="#CCCCCC"> who made those changes</font>

388
00:17:25,190 --> 00:17:29,990
<font color="#E5E5E5">again they're sort of straightforward we</font>

389
00:17:27,560 --> 00:17:31,730
found one latent bug in<font color="#CCCCCC"> hotspot</font><font color="#E5E5E5"> while</font>

390
00:17:29,990 --> 00:17:34,030
doing this and that<font color="#E5E5E5"> has been integrated</font>

391
00:17:31,730 --> 00:17:37,010
<font color="#E5E5E5">into mainline so that's all ready to go</font>

392
00:17:34,030 --> 00:17:39,710
<font color="#E5E5E5">okay the good part about</font><font color="#CCCCCC"> Alpine Linux</font><font color="#E5E5E5"> is</font>

393
00:17:37,010 --> 00:17:41,870
that it weighs in at<font color="#E5E5E5"> four megabytes</font><font color="#CCCCCC"> so</font>

394
00:17:39,710 --> 00:17:44,090
<font color="#CCCCCC">that's pretty impressive basically it is</font>

395
00:17:41,870 --> 00:17:46,370
to<font color="#E5E5E5"> see library and nothing else</font>

396
00:17:44,090 --> 00:17:47,810
it does have<font color="#CCCCCC"> busybox inside</font><font color="#E5E5E5"> of it as</font>

397
00:17:46,370 --> 00:17:50,959
<font color="#E5E5E5">well you do get some tools for</font><font color="#CCCCCC"> obvious</font>

398
00:17:47,810 --> 00:17:52,460
<font color="#CCCCCC">reasons but it's very very</font><font color="#E5E5E5"> small</font><font color="#CCCCCC"> and</font>

399
00:17:50,960 --> 00:17:55,370
what that means is that we<font color="#CCCCCC"> can take our</font>

400
00:17:52,460 --> 00:17:57,200
you<font color="#E5E5E5"> know whatever it is a hundred and</font>

401
00:17:55,370 --> 00:17:59,179
fifty or<font color="#E5E5E5"> so megabytes and turn it more</font>

402
00:17:57,200 --> 00:18:01,700
into<font color="#CCCCCC"> 50 megabytes and</font><font color="#E5E5E5"> now we're starting</font>

403
00:17:59,180 --> 00:18:03,230
<font color="#CCCCCC">to say get to the point where yeah we</font>

404
00:18:01,700 --> 00:18:05,980
<font color="#E5E5E5">can</font><font color="#CCCCCC"> optimize it further but it's</font>

405
00:18:03,230 --> 00:18:05,980
<font color="#E5E5E5">starting</font><font color="#CCCCCC"> to look pretty</font><font color="#E5E5E5"> good</font>

406
00:18:12,240 --> 00:18:23,610
<font color="#CCCCCC">I have a</font><font color="#E5E5E5"> section</font><font color="#CCCCCC"> in here that I tore out</font>

407
00:18:20,910 --> 00:18:25,470
which is<font color="#E5E5E5"> talking about the minimal VM so</font>

408
00:18:23,610 --> 00:18:27,810
there's this version of<font color="#E5E5E5"> at the hospital</font>

409
00:18:25,470 --> 00:18:30,300
<font color="#E5E5E5">um that only contains a subset of the</font>

410
00:18:27,810 --> 00:18:32,909
components<font color="#CCCCCC"> that brings down the</font><font color="#E5E5E5"> size of</font>

411
00:18:30,300 --> 00:18:35,790
the VM from the<font color="#CCCCCC"> Lib jb MSO from</font>

412
00:18:32,910 --> 00:18:37,350
approximately<font color="#CCCCCC"> 20 banks</font><font color="#E5E5E5"> down to</font><font color="#CCCCCC"> 5 so</font><font color="#E5E5E5"> that</font>

413
00:18:35,790 --> 00:18:39,149
will save some additional space but then

414
00:18:37,350 --> 00:18:45,209
you<font color="#E5E5E5"> don't get all the functionalities</font>

415
00:18:39,150 --> 00:18:46,530
there's a trade-off<font color="#CCCCCC"> to what I</font><font color="#E5E5E5"> have two</font>

416
00:18:45,210 --> 00:18:49,410
questions coming<font color="#E5E5E5"> up on this so the first</font>

417
00:18:46,530 --> 00:18:52,460
one is is<font color="#E5E5E5"> there interest in Alpine</font><font color="#CCCCCC"> app</font>

418
00:18:49,410 --> 00:18:55,890
<font color="#CCCCCC">or</font><font color="#E5E5E5"> to alpine in here hands up</font>

419
00:18:52,460 --> 00:18:57,570
<font color="#CCCCCC">ok a bunch</font><font color="#E5E5E5"> of hands second question</font>

420
00:18:55,890 --> 00:19:06,090
<font color="#E5E5E5">anybody interested in helping maintain</font>

421
00:18:57,570 --> 00:19:09,810
<font color="#CCCCCC">it hands up I tried ok yeah so again</font>

422
00:19:06,090 --> 00:19:13,050
there are<font color="#E5E5E5"> only</font><font color="#CCCCCC"> axis minor E's we publish</font>

423
00:19:09,810 --> 00:19:15,540
there there next to the<font color="#CCCCCC"> normal be a</font>

424
00:19:13,050 --> 00:19:17,760
binary<font color="#CCCCCC"> sub ten and all that</font><font color="#E5E5E5"> so please go</font>

425
00:19:15,540 --> 00:19:19,649
<font color="#E5E5E5">ahead download</font><font color="#CCCCCC"> them if you have</font><font color="#E5E5E5"> feedback</font>

426
00:19:17,760 --> 00:19:22,770
if you have questions if you want this

427
00:19:19,650 --> 00:19:24,480
do speak up<font color="#E5E5E5"> because we need the</font><font color="#CCCCCC"> feedback</font>

428
00:19:22,770 --> 00:19:27,020
to understand if it's worth moving

429
00:19:24,480 --> 00:19:27,020
<font color="#E5E5E5">forward with</font>

430
00:19:51,930 --> 00:20:01,060
size matters<font color="#CCCCCC"> but I didn't mean</font><font color="#E5E5E5"> okay</font>

431
00:19:59,190 --> 00:20:03,580
let's touch on<font color="#E5E5E5"> a few of the features</font>

432
00:20:01,060 --> 00:20:05,590
<font color="#E5E5E5">we're</font><font color="#CCCCCC"> working on</font><font color="#E5E5E5"> that are specifically</font>

433
00:20:03,580 --> 00:20:07,840
well suited to<font color="#CCCCCC"> docker</font><font color="#E5E5E5"> let's say the</font>

434
00:20:05,590 --> 00:20:09,459
first<font color="#E5E5E5"> one is something that a few people</font>

435
00:20:07,840 --> 00:20:10,800
<font color="#E5E5E5">have already touched on so I'm gonna go</font>

436
00:20:09,460 --> 00:20:13,480
<font color="#E5E5E5">through it extremely quickly which is</font>

437
00:20:10,800 --> 00:20:15,790
<font color="#E5E5E5">sharing across instances now we've</font>

438
00:20:13,480 --> 00:20:17,350
optimized the size of a<font color="#CCCCCC"> single instance</font>

439
00:20:15,790 --> 00:20:19,420
<font color="#E5E5E5">by bringing down the size of the image</font>

440
00:20:17,350 --> 00:20:21,070
<font color="#E5E5E5">and all that what can we do to to</font>

441
00:20:19,420 --> 00:20:23,170
leverage the<font color="#CCCCCC"> fact</font><font color="#E5E5E5"> that we're</font><font color="#CCCCCC"> running</font>

442
00:20:21,070 --> 00:20:25,030
multiple instances next to each<font color="#E5E5E5"> other on</font>

443
00:20:23,170 --> 00:20:26,860
the<font color="#E5E5E5"> same machine yeah and on the</font>

444
00:20:25,030 --> 00:20:29,200
operating system<font color="#CCCCCC"> side you already get</font>

445
00:20:26,860 --> 00:20:30,639
that<font color="#E5E5E5"> two shared libraries that's the</font>

446
00:20:29,200 --> 00:20:31,350
sort of<font color="#CCCCCC"> standard mechanism for doing</font>

447
00:20:30,640 --> 00:20:34,660
<font color="#CCCCCC">exactly that</font>

448
00:20:31,350 --> 00:20:37,270
so on the for<font color="#E5E5E5"> the JDK we already get</font>

449
00:20:34,660 --> 00:20:39,220
that<font color="#E5E5E5"> type of</font><font color="#CCCCCC"> sharing with the the shared</font>

450
00:20:37,270 --> 00:20:41,500
library that<font color="#E5E5E5"> makes</font><font color="#CCCCCC"> up the JVM itself and</font>

451
00:20:39,220 --> 00:20:43,780
all that but<font color="#E5E5E5"> what about Java class data</font>

452
00:20:41,500 --> 00:20:47,140
and then in<font color="#E5E5E5"> general stuff that is</font>

453
00:20:43,780 --> 00:20:49,330
specific to<font color="#E5E5E5"> Java</font><font color="#CCCCCC"> s class data sharing</font>

454
00:20:47,140 --> 00:20:51,640
<font color="#E5E5E5">was already touched on but in essence</font>

455
00:20:49,330 --> 00:20:54,189
it's doing exactly<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's taking data</font>

456
00:20:51,640 --> 00:20:57,280
that<font color="#E5E5E5"> that we have inside</font><font color="#CCCCCC"> of the JVM so</font>

457
00:20:54,190 --> 00:20:59,290
data that was read from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> byte the</font>

458
00:20:57,280 --> 00:21:00,460
class files and<font color="#CCCCCC"> massaged into</font><font color="#E5E5E5"> something</font>

459
00:20:59,290 --> 00:21:03,310
that the JVM liked better

460
00:21:00,460 --> 00:21:05,980
and what this functionality<font color="#CCCCCC"> does is to</font>

461
00:21:03,310 --> 00:21:08,770
dump<font color="#CCCCCC"> that data down</font><font color="#E5E5E5"> on into a file that</font>

462
00:21:05,980 --> 00:21:11,190
can<font color="#E5E5E5"> then</font><font color="#CCCCCC"> be used</font><font color="#E5E5E5"> later</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> you start up</font>

463
00:21:08,770 --> 00:21:11,190
additional

464
00:21:22,110 --> 00:21:29,350
right<font color="#CCCCCC"> we if it's good to point</font><font color="#E5E5E5"> out that</font>

465
00:21:26,650 --> 00:21:31,540
when we<font color="#E5E5E5"> created this many years ago it</font>

466
00:21:29,350 --> 00:21:34,270
<font color="#E5E5E5">was more meant for multiple processes on</font>

467
00:21:31,540 --> 00:21:36,190
the<font color="#E5E5E5"> same machine but since dr. is in the</font>

468
00:21:34,270 --> 00:21:38,290
<font color="#E5E5E5">indian sharing the same file systems</font>

469
00:21:36,190 --> 00:21:39,850
like deep down inside<font color="#E5E5E5"> if you put if you</font>

470
00:21:38,290 --> 00:21:41,639
cleverly put the archive in a shared

471
00:21:39,850 --> 00:21:47,379
image then it can be<font color="#E5E5E5"> shared across</font>

472
00:21:41,640 --> 00:21:50,560
different<font color="#CCCCCC"> doc</font><font color="#E5E5E5"> containers as well yeah we</font>

473
00:21:47,380 --> 00:21:52,150
are yes<font color="#E5E5E5"> so quick quick you just we have</font>

474
00:21:50,560 --> 00:21:54,129
seen good<font color="#CCCCCC"> startup</font><font color="#E5E5E5"> time improvements I'm</font>

475
00:21:52,150 --> 00:21:55,900
no<font color="#E5E5E5"> I</font><font color="#CCCCCC"> know fault</font><font color="#E5E5E5"> Curtis has not seen</font><font color="#CCCCCC"> the</font>

476
00:21:54,130 --> 00:21:58,870
exact same numbers let's say<font color="#CCCCCC"> but we've</font>

477
00:21:55,900 --> 00:22:01,600
seen good<font color="#CCCCCC"> startup time reduction and</font>

478
00:21:58,870 --> 00:22:03,790
<font color="#E5E5E5">also footprint savings</font><font color="#CCCCCC"> I'll mention</font>

479
00:22:01,600 --> 00:22:05,409
quickly that<font color="#CCCCCC"> we're also working on alt</font>

480
00:22:03,790 --> 00:22:08,320
which does the<font color="#CCCCCC"> same thing but for JTED</font>

481
00:22:05,410 --> 00:22:10,810
<font color="#E5E5E5">code experimental so far but being</font>

482
00:22:08,320 --> 00:22:14,200
worked on last<font color="#E5E5E5"> part we're going to talk</font>

483
00:22:10,810 --> 00:22:16,659
<font color="#CCCCCC">about is how we are adding support in</font>

484
00:22:14,200 --> 00:22:18,730
the<font color="#CCCCCC"> dadk</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> honoring the limits that</font>

485
00:22:16,660 --> 00:22:22,270
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can set when you create and</font>

486
00:22:18,730 --> 00:22:24,280
configure docker containers<font color="#E5E5E5"> so the JVM</font>

487
00:22:22,270 --> 00:22:25,690
obviously as you all<font color="#CCCCCC"> know has a bunch of</font>

488
00:22:24,280 --> 00:22:27,399
different ergonomics inside of it that

489
00:22:25,690 --> 00:22:28,960
<font color="#CCCCCC">makes like it looks at the</font><font color="#E5E5E5"> environment</font>

490
00:22:27,400 --> 00:22:31,060
<font color="#E5E5E5">where it's running and it's trying to</font>

491
00:22:28,960 --> 00:22:32,860
size things correctly both the heap size

492
00:22:31,060 --> 00:22:35,830
the number<font color="#CCCCCC"> of threads</font>

493
00:22:32,860 --> 00:22:37,929
<font color="#CCCCCC">you know how who will</font><font color="#E5E5E5"> serve set up and</font>

494
00:22:35,830 --> 00:22:39,490
so on and so forth and we<font color="#CCCCCC"> talk</font><font color="#E5E5E5"> to</font>

495
00:22:37,930 --> 00:22:42,790
returns out that<font color="#E5E5E5"> this is not transparent</font>

496
00:22:39,490 --> 00:22:44,470
<font color="#CCCCCC">as in we need</font><font color="#E5E5E5"> to do something explicitly</font>

497
00:22:42,790 --> 00:22:46,780
it doesn't just<font color="#E5E5E5"> work to look at the same</font>

498
00:22:44,470 --> 00:22:48,730
<font color="#E5E5E5">old numbers so a lot</font><font color="#CCCCCC"> of work has</font><font color="#E5E5E5"> gone in</font>

499
00:22:46,780 --> 00:22:51,570
<font color="#E5E5E5">lately into making sure that the JVM</font><font color="#CCCCCC"> is</font>

500
00:22:48,730 --> 00:22:51,570
aware<font color="#CCCCCC"> of these things</font>

501
00:22:58,600 --> 00:23:01,709
[Music]

502
00:23:18,470 --> 00:23:30,840
and Jacob will try its best to represent

503
00:23:28,610 --> 00:23:35,159
both in terms<font color="#E5E5E5"> of the choices</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

504
00:23:30,840 --> 00:23:37,290
<font color="#CCCCCC">made by but also to your code and you</font>

505
00:23:35,160 --> 00:23:39,929
ladies<font color="#CCCCCC"> code in runtime</font><font color="#E5E5E5"> available</font>

506
00:23:37,290 --> 00:23:42,780
<font color="#E5E5E5">processes which is looked at</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> life by</font>

507
00:23:39,929 --> 00:23:44,160
<font color="#CCCCCC">succession</font><font color="#E5E5E5"> 18 points like lots of</font><font color="#CCCCCC"> IDs we</font>

508
00:23:42,780 --> 00:23:46,260
use that to size<font color="#E5E5E5"> that thread pools</font>

509
00:23:44,160 --> 00:23:53,580
<font color="#E5E5E5">there's a lot of detail what they wrote</font>

510
00:23:46,260 --> 00:23:56,280
up on this<font color="#CCCCCC"> what we found is that on a</font>

511
00:23:53,580 --> 00:23:58,049
<font color="#E5E5E5">very large</font><font color="#CCCCCC"> machine starting lots of</font><font color="#E5E5E5"> jail</font>

512
00:23:56,280 --> 00:24:03,178
<font color="#E5E5E5">units in containers with slower than the</font>

513
00:23:58,049 --> 00:24:04,950
<font color="#E5E5E5">starting lots of Genesis</font><font color="#CCCCCC"> virtual</font>

514
00:24:03,179 --> 00:24:06,809
<font color="#E5E5E5">machines</font><font color="#CCCCCC"> even with the hypervisor</font><font color="#E5E5E5"> over</font>

515
00:24:04,950 --> 00:24:10,400
there because thread pools are being

516
00:24:06,809 --> 00:24:10,399
sized<font color="#E5E5E5"> the host and</font>

517
00:24:10,700 --> 00:24:16,009
we specify everything wanted to pay a

518
00:24:14,059 --> 00:24:22,519
hundred<font color="#E5E5E5"> forty four</font><font color="#CCCCCC"> place but everything</font>

519
00:24:16,009 --> 00:24:24,529
<font color="#E5E5E5">and it was in JK ten</font><font color="#CCCCCC"> we've done some</font>

520
00:24:22,519 --> 00:24:38,509
experiments<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the movements of JDK</font><font color="#CCCCCC"> ten</font>

521
00:24:24,529 --> 00:24:40,549
minutes yes<font color="#CCCCCC"> sure you can</font><font color="#E5E5E5"> ice to mention</font>

522
00:24:38,509 --> 00:24:42,649
<font color="#CCCCCC">why doesn't the heap</font><font color="#E5E5E5"> size isn't the only</font>

523
00:24:40,549 --> 00:24:46,249
memory<font color="#CCCCCC"> Canadian uses so there's a couple</font>

524
00:24:42,649 --> 00:24:51,668
<font color="#E5E5E5">of</font><font color="#CCCCCC"> flights for allocating</font><font color="#E5E5E5"> the percentage</font>

525
00:24:46,249 --> 00:24:51,669
of the container

526
00:24:58,179 --> 00:25:05,799
<font color="#E5E5E5">so yeah that last slide that's on the</font>

527
00:25:03,820 --> 00:25:08,408
<font color="#E5E5E5">real neural resource limitations or</font>

528
00:25:05,799 --> 00:25:09,940
limits<font color="#CCCCCC"> we've done a lot of</font><font color="#E5E5E5"> other type of</font>

529
00:25:08,409 --> 00:25:11,649
<font color="#E5E5E5">work as well making sure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> our tools</font>

530
00:25:09,940 --> 00:25:12,999
<font color="#CCCCCC">or serviceability tools J command J</font>

531
00:25:11,649 --> 00:25:16,090
stack and all those work across

532
00:25:12,999 --> 00:25:17,889
container boundaries as<font color="#CCCCCC"> well more</font><font color="#E5E5E5"> work</font>

533
00:25:16,090 --> 00:25:18,999
<font color="#E5E5E5">is coming this is</font><font color="#CCCCCC"> as I</font><font color="#E5E5E5"> said we're</font>

534
00:25:17,889 --> 00:25:21,248
committed to<font color="#E5E5E5"> making</font><font color="#CCCCCC"> sure that the other</font>

535
00:25:18,999 --> 00:25:22,809
<font color="#E5E5E5">runs really well in</font><font color="#CCCCCC"> containers so</font><font color="#E5E5E5"> keep</font>

536
00:25:21,249 --> 00:25:24,960
your eyes and ears open<font color="#CCCCCC"> for</font><font color="#E5E5E5"> more coming</font>

537
00:25:22,809 --> 00:25:24,960
<font color="#CCCCCC">up</font>

538
00:25:25,390 --> 00:25:28,659
[Applause]

