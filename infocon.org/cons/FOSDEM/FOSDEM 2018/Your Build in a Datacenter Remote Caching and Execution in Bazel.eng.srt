1
00:00:05,050 --> 00:00:11,420
hello everyone<font color="#CCCCCC"> does work yes</font><font color="#E5E5E5"> my name is</font>

2
00:00:10,070 --> 00:00:12,910
<font color="#E5E5E5">Jacob</font>

3
00:00:11,420 --> 00:00:14,929
this is your<font color="#E5E5E5"> build</font>

4
00:00:12,910 --> 00:00:17,630
data center<font color="#E5E5E5"> so I worked</font>

5
00:00:14,929 --> 00:00:20,480
<font color="#E5E5E5">Google on a build system called</font><font color="#CCCCCC"> basil</font>

6
00:00:17,630 --> 00:00:23,750
and this talk will specifically<font color="#CCCCCC"> be about</font>

7
00:00:20,480 --> 00:00:28,759
remote<font color="#E5E5E5"> caching and remote execution</font><font color="#CCCCCC"> in</font>

8
00:00:23,750 --> 00:00:30,920
basil so first of all what's basil basil

9
00:00:28,759 --> 00:00:33,920
is a build system<font color="#CCCCCC"> that has been</font>

10
00:00:30,920 --> 00:00:36,830
<font color="#E5E5E5">developed at Google</font><font color="#CCCCCC"> almost 10 years</font><font color="#E5E5E5"> ago</font>

11
00:00:33,920 --> 00:00:40,040
<font color="#E5E5E5">and it's to this day building all of</font>

12
00:00:36,830 --> 00:00:43,190
<font color="#E5E5E5">googles software</font><font color="#CCCCCC"> base</font><font color="#E5E5E5"> has been open</font>

13
00:00:40,040 --> 00:00:47,180
sourced about three years<font color="#E5E5E5"> ago</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font>

14
00:00:43,190 --> 00:00:50,930
it's<font color="#CCCCCC"> a build system similar to like C</font>

15
00:00:47,180 --> 00:00:53,360
<font color="#CCCCCC">Makemake and Gretel and maven but with</font>

16
00:00:50,930 --> 00:00:55,549
the difference that basil doesn't have

17
00:00:53,360 --> 00:00:57,860
one favorite language it's a<font color="#CCCCCC"> multi</font>

18
00:00:55,549 --> 00:01:00,350
<font color="#CCCCCC">language build system so we've basically</font>

19
00:00:57,860 --> 00:01:03,110
you can build<font color="#CCCCCC"> Java C++</font>

20
00:01:00,350 --> 00:01:04,909
- go rust you can do Android and iOS

21
00:01:03,110 --> 00:01:07,460
development you<font color="#E5E5E5"> can build docker</font>

22
00:01:04,909 --> 00:01:09,979
containers and so on and if your

23
00:01:07,460 --> 00:01:12,589
<font color="#E5E5E5">favorite language is is not supported</font>

24
00:01:09,979 --> 00:01:15,789
well basil<font color="#E5E5E5"> has an extension language</font>

25
00:01:12,590 --> 00:01:19,790
it's a subset<font color="#E5E5E5"> of Python so it's a</font>

26
00:01:15,790 --> 00:01:21,770
familiar syntax<font color="#E5E5E5"> to many people and it</font>

27
00:01:19,790 --> 00:01:26,600
allows you to<font color="#CCCCCC"> add your own build rules</font>

28
00:01:21,770 --> 00:01:31,000
<font color="#E5E5E5">to add support</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> your own language</font><font color="#CCCCCC"> or</font>

29
00:01:26,600 --> 00:01:34,280
to improve<font color="#E5E5E5"> existing language support and</font>

30
00:01:31,000 --> 00:01:37,550
so one of<font color="#E5E5E5"> the distinguishing features</font><font color="#CCCCCC"> of</font>

31
00:01:34,280 --> 00:01:41,090
basil<font color="#E5E5E5"> is that it's focused on</font>

32
00:01:37,550 --> 00:01:44,780
correctness meaning that basil tracks

33
00:01:41,090 --> 00:01:48,050
<font color="#E5E5E5">all your inputs to it that affect your</font>

34
00:01:44,780 --> 00:01:51,710
built and it notices if something

35
00:01:48,050 --> 00:01:54,289
changes<font color="#E5E5E5"> and then when you build your</font>

36
00:01:51,710 --> 00:01:57,949
project again it will<font color="#CCCCCC"> only rebuild these</font>

37
00:01:54,290 --> 00:02:01,400
things that have changed<font color="#CCCCCC"> so some people</font>

38
00:01:57,950 --> 00:02:03,920
<font color="#E5E5E5">like</font><font color="#CCCCCC"> to say that</font><font color="#E5E5E5"> having to do a clean in</font>

39
00:02:01,400 --> 00:02:05,900
basil is considered a park so no more

40
00:02:03,920 --> 00:02:12,019
<font color="#E5E5E5">clean built you only do incremental</font>

41
00:02:05,900 --> 00:02:14,720
builds until basil has recently gotten

42
00:02:12,019 --> 00:02:17,420
support<font color="#E5E5E5"> for remote caching and so what's</font>

43
00:02:14,720 --> 00:02:21,440
<font color="#E5E5E5">remote caching so the idea is pretty</font>

44
00:02:17,420 --> 00:02:24,108
<font color="#CCCCCC">simple basil can connect to a remote</font>

45
00:02:21,440 --> 00:02:27,800
cache<font color="#E5E5E5"> that runs in a data</font><font color="#CCCCCC"> center or in</font>

46
00:02:24,109 --> 00:02:31,610
<font color="#E5E5E5">the cloud and it can upload</font>

47
00:02:27,800 --> 00:02:33,560
built<font color="#E5E5E5"> outputs to this</font><font color="#CCCCCC"> cache</font><font color="#E5E5E5"> so then if a</font>

48
00:02:31,610 --> 00:02:35,570
different<font color="#E5E5E5"> developer or a continuous</font>

49
00:02:33,560 --> 00:02:38,300
integration system<font color="#E5E5E5"> like Jenkins</font><font color="#CCCCCC"> or</font>

50
00:02:35,570 --> 00:02:40,310
surplus<font color="#CCCCCC"> CI wants to</font><font color="#E5E5E5"> build the same</font>

51
00:02:38,300 --> 00:02:42,140
source state with the<font color="#E5E5E5"> same compilers on</font>

52
00:02:40,310 --> 00:02:44,270
the same platform

53
00:02:42,140 --> 00:02:47,059
he doesn't have to because basil can

54
00:02:44,270 --> 00:02:49,880
then<font color="#E5E5E5"> download</font><font color="#CCCCCC"> this build artifacts that</font>

55
00:02:47,060 --> 00:02:53,930
have<font color="#E5E5E5"> already been built</font><font color="#CCCCCC"> previously from</font>

56
00:02:49,880 --> 00:02:56,510
<font color="#E5E5E5">the remote cache and reuse them and our</font>

57
00:02:53,930 --> 00:02:59,530
users<font color="#E5E5E5"> have reported somewhere between</font>

58
00:02:56,510 --> 00:03:02,420
<font color="#E5E5E5">two and</font><font color="#CCCCCC"> ten times</font><font color="#E5E5E5"> speed up for</font><font color="#CCCCCC"> the sei</font>

59
00:02:59,530 --> 00:03:04,790
built<font color="#E5E5E5"> because you don't always build</font>

60
00:03:02,420 --> 00:03:09,950
from a clean<font color="#CCCCCC"> state</font><font color="#E5E5E5"> but you</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> to reuse</font>

61
00:03:04,790 --> 00:03:14,299
90 plus percent<font color="#CCCCCC"> of the builds outputs</font>

62
00:03:09,950 --> 00:03:16,940
that haven't<font color="#E5E5E5"> really changed and so why</font>

63
00:03:14,300 --> 00:03:19,580
can basil do that<font color="#E5E5E5"> I mentioned before</font>

64
00:03:16,940 --> 00:03:22,880
<font color="#CCCCCC">that basil tracks</font><font color="#E5E5E5"> all your dependencies</font>

65
00:03:19,580 --> 00:03:25,130
<font color="#CCCCCC">in a big dependency graph and when you</font>

66
00:03:22,880 --> 00:03:29,150
<font color="#CCCCCC">execute a built it creates from this</font>

67
00:03:25,130 --> 00:03:31,850
dependency graph an<font color="#E5E5E5"> action graph and an</font>

68
00:03:29,150 --> 00:03:34,580
action graph you<font color="#E5E5E5"> can think of as a graph</font>

69
00:03:31,850 --> 00:03:37,900
of individual steps that have to<font color="#CCCCCC"> be</font>

70
00:03:34,580 --> 00:03:40,430
executed<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to complete the build</font>

71
00:03:37,900 --> 00:03:43,610
and so an action graph consists of

72
00:03:40,430 --> 00:03:46,280
actions and<font color="#E5E5E5"> actions can depend on other</font>

73
00:03:43,610 --> 00:03:49,220
actions meaning<font color="#E5E5E5"> that action a has to be</font>

74
00:03:46,280 --> 00:03:52,810
<font color="#E5E5E5">executed before action B because action</font>

75
00:03:49,220 --> 00:03:57,109
<font color="#CCCCCC">B depends on some outputs of action a</font>

76
00:03:52,810 --> 00:03:59,030
and so what's an action<font color="#CCCCCC"> most commonly it</font>

77
00:03:57,110 --> 00:04:01,940
<font color="#E5E5E5">would for example be just a compiler</font>

78
00:03:59,030 --> 00:04:07,220
invocation so an action consists of a

79
00:04:01,940 --> 00:04:09,290
command like a<font color="#E5E5E5"> key GCC</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> call it has</font>

80
00:04:07,220 --> 00:04:13,010
declared input files that the command

81
00:04:09,290 --> 00:04:17,000
can access it has to create outputs that

82
00:04:13,010 --> 00:04:19,358
then other actions can access and it

83
00:04:17,000 --> 00:04:22,250
contains a platform definition so that

84
00:04:19,358 --> 00:04:24,590
<font color="#E5E5E5">you know that on which platform this</font>

85
00:04:22,250 --> 00:04:28,480
action runs on and<font color="#E5E5E5"> very-very-very</font><font color="#CCCCCC"> where</font>

86
00:04:24,590 --> 00:04:31,130
you can share<font color="#E5E5E5"> cache outputs and so the</font>

87
00:04:28,480 --> 00:04:33,800
the way<font color="#CCCCCC"> we in a sense</font><font color="#E5E5E5"> implement that</font>

88
00:04:31,130 --> 00:04:37,190
<font color="#E5E5E5">remote caching is you can think of it as</font>

89
00:04:33,800 --> 00:04:40,080
a remote cache as a big hash map where

90
00:04:37,190 --> 00:04:43,229
the action is the<font color="#CCCCCC"> key</font>

91
00:04:40,080 --> 00:04:46,169
and the<font color="#E5E5E5"> build outputs of this action are</font>

92
00:04:43,229 --> 00:04:49,979
<font color="#E5E5E5">the value so if someone tries to build</font>

93
00:04:46,169 --> 00:04:51,750
the same action<font color="#E5E5E5"> he looks up the action</font>

94
00:04:49,979 --> 00:04:54,508
<font color="#E5E5E5">in this remote</font><font color="#CCCCCC"> cache in this hash map</font>

95
00:04:51,750 --> 00:04:57,659
and if<font color="#E5E5E5"> there is an entry for it the</font>

96
00:04:54,509 --> 00:05:00,629
remote cache will just return<font color="#CCCCCC"> the build</font>

97
00:04:57,659 --> 00:05:04,080
outputs<font color="#E5E5E5"> and so an action contains enough</font>

98
00:05:00,629 --> 00:05:09,180
information to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> generate the</font>

99
00:05:04,080 --> 00:05:10,169
same<font color="#CCCCCC"> build output and so how would you</font>

100
00:05:09,180 --> 00:05:13,229
use<font color="#E5E5E5"> that</font>

101
00:05:10,169 --> 00:05:16,799
so<font color="#CCCCCC"> once setup that our users use</font><font color="#E5E5E5"> and</font>

102
00:05:13,229 --> 00:05:19,020
that we generally recommend<font color="#E5E5E5"> is that on</font>

103
00:05:16,800 --> 00:05:21,870
<font color="#CCCCCC">your continuous integration system you</font>

104
00:05:19,020 --> 00:05:24,840
<font color="#CCCCCC">have base</font><font color="#E5E5E5"> or running connected</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

105
00:05:21,870 --> 00:05:26,879
remote cache and it can read and write

106
00:05:24,840 --> 00:05:29,489
to<font color="#E5E5E5"> the remote cache so like on your</font>

107
00:05:26,879 --> 00:05:34,199
champions<font color="#E5E5E5"> or on your server CI and then</font>

108
00:05:29,490 --> 00:05:36,419
you have developers who just read from

109
00:05:34,199 --> 00:05:40,409
<font color="#E5E5E5">the remote cache and what's the idea</font>

110
00:05:36,419 --> 00:05:43,198
<font color="#CCCCCC">behind this so let's assume that</font><font color="#E5E5E5"> you</font>

111
00:05:40,409 --> 00:05:44,940
have a remote cache that has all<font color="#E5E5E5"> built</font>

112
00:05:43,199 --> 00:05:48,810
outputs of the current master<font color="#CCCCCC"> branch</font>

113
00:05:44,940 --> 00:05:50,849
<font color="#E5E5E5">okay and so then a developer opens a</font>

114
00:05:48,810 --> 00:05:54,629
pull request<font color="#CCCCCC"> that's linked on</font><font color="#E5E5E5"> this</font>

115
00:05:50,849 --> 00:05:58,199
master<font color="#E5E5E5"> branch and some changes on top so</font>

116
00:05:54,629 --> 00:06:00,360
<font color="#E5E5E5">you open a pull request and this will</font>

117
00:05:58,199 --> 00:06:02,490
trigger your<font color="#E5E5E5"> champions build your CI</font>

118
00:06:00,360 --> 00:06:05,610
<font color="#CCCCCC">build so it will trigger a basil build</font>

119
00:06:02,490 --> 00:06:07,620
test<font color="#CCCCCC"> and since this is synced on top on</font>

120
00:06:05,610 --> 00:06:10,110
<font color="#CCCCCC">top of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> mount master branch</font><font color="#E5E5E5"> and the</font>

121
00:06:07,620 --> 00:06:12,330
remote cache contains all the outputs

122
00:06:10,110 --> 00:06:16,080
<font color="#E5E5E5">from</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> master</font><font color="#CCCCCC"> branch</font><font color="#E5E5E5"> base will be able</font>

123
00:06:12,330 --> 00:06:19,229
to fetch most of the build outputs from

124
00:06:16,080 --> 00:06:21,479
<font color="#CCCCCC">the remote cache</font><font color="#E5E5E5"> only printed changes in</font>

125
00:06:19,229 --> 00:06:24,360
the pull<font color="#CCCCCC"> request and then write</font><font color="#E5E5E5"> it is</font>

126
00:06:21,479 --> 00:06:27,449
that the build outputs of the changes

127
00:06:24,360 --> 00:06:29,879
back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the remote cache and this will</font>

128
00:06:27,449 --> 00:06:33,240
typically go back and forth<font color="#CCCCCC"> with code</font>

129
00:06:29,879 --> 00:06:33,599
review and then once the<font color="#E5E5E5"> port</font><font color="#CCCCCC"> west is</font>

130
00:06:33,240 --> 00:06:37,259
ready

131
00:06:33,599 --> 00:06:39,330
it gets committed<font color="#E5E5E5"> but before that</font><font color="#CCCCCC"> you</font>

132
00:06:37,259 --> 00:06:41,339
<font color="#CCCCCC">see I assist and runs again goes the</font>

133
00:06:39,330 --> 00:06:43,560
changes<font color="#E5E5E5"> stores it in the remote cache</font>

134
00:06:41,339 --> 00:06:47,209
<font color="#E5E5E5">and then once this change is committed</font>

135
00:06:43,560 --> 00:06:49,649
the remote cache contain again contains

136
00:06:47,209 --> 00:06:51,370
the state of the current master<font color="#E5E5E5"> branch</font>

137
00:06:49,649 --> 00:06:55,910
and

138
00:06:51,370 --> 00:06:57,860
<font color="#CCCCCC">you're you're following pool invest and</font>

139
00:06:55,910 --> 00:06:59,900
so on<font color="#CCCCCC"> get a lot faster because</font><font color="#E5E5E5"> they</font>

140
00:06:57,860 --> 00:07:02,590
really<font color="#CCCCCC"> only need</font><font color="#E5E5E5"> to build what has</font>

141
00:06:59,900 --> 00:07:07,280
changed<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> poor addressed and not</font>

142
00:07:02,590 --> 00:07:09,469
<font color="#CCCCCC">t95 other</font><font color="#E5E5E5"> things and so</font><font color="#CCCCCC"> develop</font>

143
00:07:07,280 --> 00:07:11,599
<font color="#CCCCCC">resistant typically just read from this</font>

144
00:07:09,470 --> 00:07:15,229
<font color="#E5E5E5">cash and here the classic scenario would</font>

145
00:07:11,599 --> 00:07:17,569
<font color="#CCCCCC">be a developer comes in in</font><font color="#E5E5E5"> the morning</font>

146
00:07:15,229 --> 00:07:19,099
<font color="#E5E5E5">he sings his MA it has a kid pool sings</font>

147
00:07:17,569 --> 00:07:21,229
his master branch to<font color="#CCCCCC"> the latest commit</font>

148
00:07:19,099 --> 00:07:22,940
but the CI system has<font color="#E5E5E5"> already built</font>

149
00:07:21,229 --> 00:07:25,969
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> so it doesn't</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> need to</font>

150
00:07:22,940 --> 00:07:31,550
<font color="#CCCCCC">be rebuilt it but can just fetch the</font>

151
00:07:25,970 --> 00:07:34,250
outputs from the master<font color="#E5E5E5"> branch</font><font color="#CCCCCC"> and so</font>

152
00:07:31,550 --> 00:07:37,909
that's remote<font color="#CCCCCC"> cashing so remote cashing</font>

153
00:07:34,250 --> 00:07:39,919
<font color="#CCCCCC">it built locally</font><font color="#E5E5E5"> you share remotely and</font>

154
00:07:37,909 --> 00:07:43,370
then the next thing<font color="#CCCCCC"> that basil</font><font color="#E5E5E5"> can do is</font>

155
00:07:39,919 --> 00:07:45,919
remote execution<font color="#CCCCCC"> so remember an action</font>

156
00:07:43,370 --> 00:07:50,150
contains all the information<font color="#E5E5E5"> to create a</font>

157
00:07:45,919 --> 00:07:52,818
build output so basil<font color="#E5E5E5"> can also send this</font>

158
00:07:50,150 --> 00:07:55,280
action to<font color="#E5E5E5"> a mode execution system</font>

159
00:07:52,819 --> 00:07:58,240
<font color="#E5E5E5">running in a data center in the cloud</font>

160
00:07:55,280 --> 00:08:01,698
and then<font color="#E5E5E5"> this remote execution system</font>

161
00:07:58,240 --> 00:08:05,120
can execute this action<font color="#E5E5E5"> in a data center</font>

162
00:08:01,699 --> 00:08:07,520
<font color="#CCCCCC">and send it</font><font color="#E5E5E5"> back to Basil's and the</font>

163
00:08:05,120 --> 00:08:10,909
outputs back to basil and so why<font color="#E5E5E5"> would</font>

164
00:08:07,520 --> 00:08:13,250
<font color="#CCCCCC">you</font><font color="#E5E5E5"> want to do that</font><font color="#CCCCCC"> so first of all</font><font color="#E5E5E5"> you</font>

165
00:08:10,909 --> 00:08:15,500
also get the benefit of remote<font color="#CCCCCC"> cashing</font>

166
00:08:13,250 --> 00:08:17,509
basil sends an action to the remote

167
00:08:15,500 --> 00:08:20,479
execution system<font color="#E5E5E5"> the remote execution</font>

168
00:08:17,509 --> 00:08:23,810
system can check<font color="#E5E5E5"> hey did I already build</font>

169
00:08:20,479 --> 00:08:27,610
this and if<font color="#CCCCCC"> so</font><font color="#E5E5E5"> just serve the outputs</font>

170
00:08:23,810 --> 00:08:30,229
and don't<font color="#CCCCCC"> do the work again but secondly</font>

171
00:08:27,610 --> 00:08:31,909
data centers have a lot more<font color="#E5E5E5"> cores and</font>

172
00:08:30,229 --> 00:08:34,669
<font color="#CCCCCC">pays</font><font color="#E5E5E5"> is really good at</font><font color="#CCCCCC"> understanding</font>

173
00:08:31,909 --> 00:08:36,218
your<font color="#E5E5E5"> build and figuring out what can be</font>

174
00:08:34,669 --> 00:08:39,649
paralyzed

175
00:08:36,219 --> 00:08:42,140
so basil can<font color="#E5E5E5"> typically run two three</font>

176
00:08:39,649 --> 00:08:44,480
<font color="#E5E5E5">four or</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> actions in parallel</font>

177
00:08:42,140 --> 00:08:46,550
<font color="#E5E5E5">and the data center gives you enough</font>

178
00:08:44,480 --> 00:08:50,270
course<font color="#E5E5E5"> to do that</font><font color="#CCCCCC"> while your local</font>

179
00:08:46,550 --> 00:08:53,120
machine wouldn't so you can also speed

180
00:08:50,270 --> 00:08:56,000
<font color="#E5E5E5">up the things that have actually changed</font>

181
00:08:53,120 --> 00:08:57,829
and<font color="#CCCCCC"> that you really need to build and so</font>

182
00:08:56,000 --> 00:09:00,529
these two things<font color="#E5E5E5"> are about performance</font>

183
00:08:57,829 --> 00:09:03,689
but there's a third<font color="#CCCCCC"> reason and the</font>

184
00:09:00,529 --> 00:09:07,470
reason<font color="#CCCCCC"> is</font><font color="#E5E5E5"> cross</font><font color="#CCCCCC"> combination</font>

185
00:09:03,690 --> 00:09:09,780
so a remote execution system can be

186
00:09:07,470 --> 00:09:12,540
<font color="#E5E5E5">connected to not just an environment</font>

187
00:09:09,780 --> 00:09:15,860
that resembles your development

188
00:09:12,540 --> 00:09:18,870
environment<font color="#E5E5E5"> but it can also have say a</font>

189
00:09:15,860 --> 00:09:21,030
pool of<font color="#E5E5E5"> Windows workers a pool</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Linux</font>

190
00:09:18,870 --> 00:09:23,430
workers can have<font color="#E5E5E5"> I know Android phones</font>

191
00:09:21,030 --> 00:09:26,670
connected<font color="#E5E5E5"> to it and then you can sit on</font>

192
00:09:23,430 --> 00:09:29,040
<font color="#E5E5E5">your</font><font color="#CCCCCC"> Linux desktop and run tests on</font>

193
00:09:26,670 --> 00:09:33,959
Windows from a Linux desktop<font color="#E5E5E5"> using</font>

194
00:09:29,040 --> 00:09:36,930
<font color="#E5E5E5">remote execution</font><font color="#CCCCCC"> which is a big boost in</font>

195
00:09:33,960 --> 00:09:39,390
productivity<font color="#CCCCCC"> if you happen to need multi</font>

196
00:09:36,930 --> 00:09:44,089
<font color="#CCCCCC">platform development</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> only to</font>

197
00:09:39,390 --> 00:09:46,949
switch workstations or VMs and so on and

198
00:09:44,090 --> 00:09:50,130
so remote execution<font color="#E5E5E5"> is a bit more</font>

199
00:09:46,950 --> 00:09:54,210
complex than remote caching<font color="#CCCCCC"> so it does</font>

200
00:09:50,130 --> 00:09:57,600
not just use HTTP but it uses<font color="#E5E5E5"> a</font><font color="#CCCCCC"> sheer PC</font>

201
00:09:54,210 --> 00:10:02,640
based<font color="#CCCCCC"> API that we developed and open</font>

202
00:09:57,600 --> 00:10:05,070
sourced and we also build a<font color="#CCCCCC"> open-source</font>

203
00:10:02,640 --> 00:10:09,210
remote<font color="#CCCCCC"> execution system that you can</font>

204
00:10:05,070 --> 00:10:11,670
take today<font color="#E5E5E5"> and run and try out and give</font>

205
00:10:09,210 --> 00:10:16,460
<font color="#E5E5E5">us feedback</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we are developing it in</font>

206
00:10:11,670 --> 00:10:19,079
collaboration<font color="#CCCCCC"> with uber and Twitter and</font>

207
00:10:16,460 --> 00:10:21,810
<font color="#E5E5E5">it's still work-in-progress</font><font color="#CCCCCC"> so for</font>

208
00:10:19,080 --> 00:10:25,640
example<font color="#CCCCCC"> cross-correlation support is not</font>

209
00:10:21,810 --> 00:10:25,640
there yet<font color="#E5E5E5"> but we are working</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> it</font>

210
00:10:26,450 --> 00:10:35,760
yes and so<font color="#E5E5E5"> generally what are we working</font>

211
00:10:29,910 --> 00:10:38,430
on<font color="#E5E5E5"> the API is also</font><font color="#CCCCCC"> still evolving</font><font color="#E5E5E5"> so the</font>

212
00:10:35,760 --> 00:10:42,240
<font color="#CCCCCC">remote</font><font color="#E5E5E5"> execution</font><font color="#CCCCCC"> API the caching api is</font>

213
00:10:38,430 --> 00:10:45,810
is set and we are<font color="#E5E5E5"> trying to add cross</font>

214
00:10:42,240 --> 00:10:49,740
combination support and we a big focus

215
00:10:45,810 --> 00:10:53,089
<font color="#CCCCCC">for us is to have sandbox execution in</font>

216
00:10:49,740 --> 00:10:56,190
docker so a<font color="#CCCCCC"> feature we're working on is</font>

217
00:10:53,090 --> 00:10:59,880
basil<font color="#E5E5E5"> can locally run your actions in a</font>

218
00:10:56,190 --> 00:11:02,160
docker container that you specify<font color="#E5E5E5"> so you</font>

219
00:10:59,880 --> 00:11:04,740
will be<font color="#E5E5E5"> able to strictly define the</font>

220
00:11:02,160 --> 00:11:06,390
environment and the tools that that

221
00:11:04,740 --> 00:11:09,360
<font color="#CCCCCC">you're compiling locations will run it</font>

222
00:11:06,390 --> 00:11:12,540
run in and this<font color="#E5E5E5"> will allow you to get</font>

223
00:11:09,360 --> 00:11:14,430
like<font color="#E5E5E5"> bitwise identical outputs</font><font color="#CCCCCC"> across</font>

224
00:11:12,540 --> 00:11:16,290
machines and across<font color="#CCCCCC"> environments</font>

225
00:11:14,430 --> 00:11:19,380
everything is running in a docker

226
00:11:16,290 --> 00:11:22,709
container<font color="#CCCCCC"> and so for</font><font color="#E5E5E5"> people who need</font>

227
00:11:19,380 --> 00:11:25,980
this<font color="#CCCCCC"> kind of reproducibility</font><font color="#E5E5E5"> this will</font>

228
00:11:22,710 --> 00:11:29,900
be a great post to<font color="#CCCCCC"> be used in</font>

229
00:11:25,980 --> 00:11:33,060
<font color="#E5E5E5">combination with remote</font><font color="#CCCCCC"> caching and</font>

230
00:11:29,900 --> 00:11:36,329
additionally<font color="#E5E5E5"> right now remote caching</font>

231
00:11:33,060 --> 00:11:38,969
<font color="#E5E5E5">does require a good network connection</font>

232
00:11:36,330 --> 00:11:43,050
<font color="#E5E5E5">like it's downloading a lot</font><font color="#CCCCCC"> of build</font>

233
00:11:38,970 --> 00:11:44,430
<font color="#E5E5E5">outputs</font><font color="#CCCCCC"> and so we thought</font><font color="#E5E5E5"> that if builds</font>

234
00:11:43,050 --> 00:11:46,319
are incremental in<font color="#CCCCCC"> basil</font>

235
00:11:44,430 --> 00:11:50,370
why shouldn't downloads be incremental

236
00:11:46,320 --> 00:11:54,779
<font color="#CCCCCC">too so we are currently</font><font color="#E5E5E5"> working on a our</font>

237
00:11:50,370 --> 00:11:57,510
<font color="#CCCCCC">sync</font><font color="#E5E5E5"> protocol implementation for remote</font>

238
00:11:54,779 --> 00:11:59,279
<font color="#E5E5E5">caching and execution in basil and so</font>

239
00:11:57,510 --> 00:12:02,040
far our<font color="#E5E5E5"> tests</font><font color="#CCCCCC"> have been pretty promising</font>

240
00:11:59,279 --> 00:12:09,330
in that they showed up to like a 90%

241
00:12:02,040 --> 00:12:09,719
reduction<font color="#E5E5E5"> in downloads yeah</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that's</font>

242
00:12:09,330 --> 00:12:11,520
it

243
00:12:09,720 --> 00:12:14,130
we have<font color="#CCCCCC"> recently launched a</font>

244
00:12:11,520 --> 00:12:17,550
documentation documentation section on

245
00:12:14,130 --> 00:12:19,200
remote caching on our website please

246
00:12:17,550 --> 00:12:22,609
<font color="#CCCCCC">check it out</font><font color="#E5E5E5"> and if you have any</font>

247
00:12:19,200 --> 00:12:30,399
questions please ask them<font color="#CCCCCC"> now thank you</font>

248
00:12:22,610 --> 00:12:30,399
[Applause]

249
00:12:31,880 --> 00:12:45,120
we have some time<font color="#CCCCCC"> for questions and</font><font color="#E5E5E5"> any</font>

250
00:12:35,580 --> 00:12:48,450
questions how do we<font color="#E5E5E5"> mottely</font><font color="#CCCCCC"> built object</font>

251
00:12:45,120 --> 00:12:52,500
<font color="#E5E5E5">signed or authenticated</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> to make sure</font>

252
00:12:48,450 --> 00:12:54,750
that you do not<font color="#CCCCCC"> as a user</font><font color="#E5E5E5"> receive a bad</font>

253
00:12:52,500 --> 00:13:01,230
stuff<font color="#E5E5E5"> as opposed to what you would</font>

254
00:12:54,750 --> 00:13:04,230
compile locally so<font color="#E5E5E5"> the remote</font><font color="#CCCCCC"> execution</font>

255
00:13:01,230 --> 00:13:06,720
<font color="#E5E5E5">so the objects itself so all the</font><font color="#CCCCCC"> built</font>

256
00:13:04,230 --> 00:13:10,050
outputs are stored in a<font color="#E5E5E5"> in a content</font>

257
00:13:06,720 --> 00:13:14,400
addressable storage<font color="#CCCCCC"> so they are named by</font>

258
00:13:10,050 --> 00:13:15,870
their hash and typically you would want

259
00:13:14,400 --> 00:13:18,420
<font color="#E5E5E5">to run a remote execution system where</font>

260
00:13:15,870 --> 00:13:19,650
<font color="#CCCCCC">paste would need to authenticate</font><font color="#E5E5E5"> against</font>

261
00:13:18,420 --> 00:13:23,750
it

262
00:13:19,650 --> 00:13:26,160
and so one<font color="#E5E5E5"> idea of</font><font color="#CCCCCC"> basil is the</font>

263
00:13:23,750 --> 00:13:27,089
reproducible builds so you should be

264
00:13:26,160 --> 00:13:29,819
<font color="#E5E5E5">able to run</font>

265
00:13:27,089 --> 00:13:32,459
the same<font color="#CCCCCC"> extra locally and remotely</font><font color="#E5E5E5"> and</font>

266
00:13:29,819 --> 00:13:36,209
get identical outputs<font color="#E5E5E5"> so that would be a</font>

267
00:13:32,459 --> 00:13:44,300
way of<font color="#E5E5E5"> verifying that it</font><font color="#CCCCCC"> hasn't</font><font color="#E5E5E5"> been</font>

268
00:13:36,209 --> 00:13:44,300
tampered<font color="#CCCCCC"> with anyone else</font>

