1
00:00:05,450 --> 00:00:12,099
[Applause]

2
00:00:07,930 --> 00:00:16,279
hello everyone<font color="#CCCCCC"> I will be talking</font><font color="#E5E5E5"> about</font>

3
00:00:12,099 --> 00:00:17,869
<font color="#CCCCCC">GStreamer update on what more in the</font>

4
00:00:16,279 --> 00:00:20,210
<font color="#E5E5E5">immediate side so it's really part two</font>

5
00:00:17,869 --> 00:00:23,300
of<font color="#E5E5E5"> Tim's talk so Tim</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> would give you</font>

6
00:00:20,210 --> 00:00:26,180
<font color="#E5E5E5">like</font><font color="#CCCCCC"> a general overhead and as GStreamer</font>

7
00:00:23,300 --> 00:00:28,670
one of the key use cases is people

8
00:00:26,180 --> 00:00:30,820
making<font color="#E5E5E5"> physical product TVs and stuff</font>

9
00:00:28,670 --> 00:00:33,350
I'm going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> talk a lot</font><font color="#E5E5E5"> about all these</font>

10
00:00:30,820 --> 00:00:36,110
so Who am<font color="#E5E5E5"> I</font>

11
00:00:33,350 --> 00:00:38,600
my name is a<font color="#E5E5E5"> diva kite</font><font color="#CCCCCC"> I've been working</font>

12
00:00:36,110 --> 00:00:41,379
at kelabra for<font color="#E5E5E5"> 11 years and the</font>

13
00:00:38,600 --> 00:00:41,379
<font color="#CCCCCC">gstreamer</font><font color="#E5E5E5"> stack</font>

14
00:00:43,050 --> 00:00:50,019
<font color="#CCCCCC">Pharr stream which</font><font color="#E5E5E5"> is a two-seamer based</font>

15
00:00:46,270 --> 00:00:52,390
framework<font color="#E5E5E5"> a series of plugins to do</font>

16
00:00:50,020 --> 00:00:54,820
video calls<font color="#E5E5E5"> that we worked on a bunch of</font>

17
00:00:52,390 --> 00:00:56,610
<font color="#CCCCCC">devices that is less exciting now</font>

18
00:00:54,820 --> 00:01:01,470
because everyone is doing<font color="#E5E5E5"> the web thing</font>

19
00:00:56,610 --> 00:01:03,879
so I've worked<font color="#E5E5E5"> on a variety of</font>

20
00:01:01,470 --> 00:01:08,170
multimedia and<font color="#E5E5E5"> restreamer based products</font>

21
00:01:03,880 --> 00:01:09,790
from security cameras to TVs to cars<font color="#E5E5E5"> to</font>

22
00:01:08,170 --> 00:01:13,300
all kinds of<font color="#E5E5E5"> things so a very very</font>

23
00:01:09,790 --> 00:01:15,009
varied<font color="#CCCCCC"> practice in the last study</font><font color="#E5E5E5"> so</font>

24
00:01:13,300 --> 00:01:17,560
what kind<font color="#E5E5E5"> of embedded devices use the</font>

25
00:01:15,009 --> 00:01:20,560
<font color="#E5E5E5">streamer so a lot of people have built</font>

26
00:01:17,560 --> 00:01:22,509
<font color="#E5E5E5">them but many many more</font><font color="#CCCCCC"> people use them</font>

27
00:01:20,560 --> 00:01:25,780
and they've never heard that<font color="#E5E5E5"> they were</font>

28
00:01:22,509 --> 00:01:30,009
using<font color="#CCCCCC"> GStreamer so one of</font><font color="#E5E5E5"> the most</font>

29
00:01:25,780 --> 00:01:32,979
common one our<font color="#E5E5E5"> TVs set-top boxes</font><font color="#CCCCCC"> I can i</font>

30
00:01:30,009 --> 00:01:34,240
<font color="#E5E5E5">light some of</font><font color="#CCCCCC"> the probably biggest part</font>

31
00:01:32,979 --> 00:01:37,479
<font color="#CCCCCC">of the biggest gstreamer user on the</font>

32
00:01:34,240 --> 00:01:39,399
planet is<font color="#CCCCCC"> Samsung and LG TVs</font><font color="#E5E5E5"> all their</font>

33
00:01:37,479 --> 00:01:41,770
<font color="#E5E5E5">Smart TVs</font><font color="#CCCCCC"> use gstreamer for everything</font>

34
00:01:39,400 --> 00:01:43,479
<font color="#E5E5E5">that's not linear television so any</font>

35
00:01:41,770 --> 00:01:47,350
<font color="#E5E5E5">internet</font><font color="#CCCCCC"> legend they're</font><font color="#E5E5E5"> probably go</font>

36
00:01:43,479 --> 00:01:49,360
through<font color="#E5E5E5"> a streamer</font><font color="#CCCCCC"> and a lot of set-top</font>

37
00:01:47,350 --> 00:01:51,100
boxes<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> Bing vendors on the top</font>

38
00:01:49,360 --> 00:01:52,000
left<font color="#E5E5E5"> you have the Xfinity box from</font>

39
00:01:51,100 --> 00:01:54,070
Comcast

40
00:01:52,000 --> 00:01:55,900
in the<font color="#CCCCCC"> u.s. they're kind of the biggest</font>

41
00:01:54,070 --> 00:01:59,020
<font color="#CCCCCC">cable company in the world and they</font>

42
00:01:55,900 --> 00:02:00,159
<font color="#CCCCCC">build their own open source stack for</font>

43
00:01:59,020 --> 00:02:02,589
that set-top box<font color="#E5E5E5"> instead of buying a</font>

44
00:02:00,159 --> 00:02:05,070
proprietary one and all the mean media

45
00:02:02,590 --> 00:02:07,479
tasks<font color="#E5E5E5"> goes through through</font><font color="#CCCCCC"> gstreamer of</font>

46
00:02:05,070 --> 00:02:09,970
basically<font color="#CCCCCC"> anytime you watch TV</font><font color="#E5E5E5"> on a set</font>

47
00:02:07,479 --> 00:02:12,400
in the<font color="#CCCCCC"> US on Comcast</font><font color="#E5E5E5"> you're using</font>

48
00:02:09,970 --> 00:02:13,989
<font color="#CCCCCC">gstreamer there's another one that's</font>

49
00:02:12,400 --> 00:02:17,830
<font color="#CCCCCC">kind of cool and the bottom right there</font>

50
00:02:13,989 --> 00:02:20,140
<font color="#CCCCCC">the few guys from you view in</font><font color="#E5E5E5"> their UK</font>

51
00:02:17,830 --> 00:02:21,310
company and they also make a pretty cool

52
00:02:20,140 --> 00:02:23,649
<font color="#E5E5E5">set top box</font><font color="#CCCCCC"> they're involved</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> their</font>

53
00:02:21,310 --> 00:02:27,910
community<font color="#CCCCCC"> so thumbs up to these guys and</font>

54
00:02:23,650 --> 00:02:29,799
they use<font color="#E5E5E5"> the streamer also another one</font>

55
00:02:27,910 --> 00:02:31,570
<font color="#E5E5E5">that people</font><font color="#CCCCCC"> might not know is that when</font>

56
00:02:29,799 --> 00:02:33,580
you watch a<font color="#CCCCCC"> movie on the plane</font><font color="#E5E5E5"> it's</font>

57
00:02:31,570 --> 00:02:38,560
quite likely to<font color="#E5E5E5"> be using</font><font color="#CCCCCC"> the steamer as</font>

58
00:02:33,580 --> 00:02:42,730
the both major vendors use<font color="#E5E5E5"> camera on</font>

59
00:02:38,560 --> 00:02:46,750
<font color="#E5E5E5">Linux</font><font color="#CCCCCC"> and one</font><font color="#E5E5E5"> that I think is really</font>

60
00:02:42,730 --> 00:02:49,510
cool is on the space station<font color="#CCCCCC"> there's</font>

61
00:02:46,750 --> 00:02:51,910
this<font color="#E5E5E5"> a little thing it's a camera drone</font>

62
00:02:49,510 --> 00:02:55,570
<font color="#CCCCCC">and it flies around the</font><font color="#E5E5E5"> space station</font>

63
00:02:51,910 --> 00:02:56,540
<font color="#E5E5E5">and it's been made by the Japanese space</font>

64
00:02:55,570 --> 00:02:59,599
agency JAXA

65
00:02:56,540 --> 00:03:01,819
and it<font color="#E5E5E5"> uses</font><font color="#CCCCCC"> gstreamer for video</font><font color="#E5E5E5"> so we</font>

66
00:02:59,599 --> 00:03:04,578
have<font color="#E5E5E5"> this rumor in space in the air on</font>

67
00:03:01,819 --> 00:03:08,599
the ground<font color="#CCCCCC"> it's everywhere in your car</font>

68
00:03:04,579 --> 00:03:10,340
or so maybe if you have the right car so

69
00:03:08,599 --> 00:03:12,349
now that you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> gstreamer is</font>

70
00:03:10,340 --> 00:03:15,019
used<font color="#CCCCCC"> I'll give an overview of some of</font>

71
00:03:12,349 --> 00:03:20,209
<font color="#CCCCCC">the</font><font color="#E5E5E5"> features that are new and that are</font>

72
00:03:15,019 --> 00:03:22,549
related to embedded devices that are

73
00:03:20,209 --> 00:03:27,590
more<font color="#E5E5E5"> towards</font><font color="#CCCCCC"> many devices</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> then give</font>

74
00:03:22,549 --> 00:03:30,890
you more generic ones so one of the big

75
00:03:27,590 --> 00:03:31,370
ones<font color="#E5E5E5"> and</font><font color="#CCCCCC"> improved</font><font color="#E5E5E5"> DNA buff support DME</font>

76
00:03:30,890 --> 00:03:34,358
buff

77
00:03:31,370 --> 00:03:38,420
it's a Linux kernel mechanism to share

78
00:03:34,359 --> 00:03:41,389
<font color="#CCCCCC">Hardware friendly buffers that have some</font>

79
00:03:38,420 --> 00:03:43,790
<font color="#CCCCCC">specific layout between different</font>

80
00:03:41,389 --> 00:03:45,590
subsystems of<font color="#CCCCCC"> the kernel</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> without that</font>

81
00:03:43,790 --> 00:03:49,220
you needed either some<font color="#CCCCCC"> kind of specific</font>

82
00:03:45,590 --> 00:03:51,290
extensions or to do a memory<font color="#E5E5E5"> copy for no</font>

83
00:03:49,220 --> 00:03:54,530
<font color="#E5E5E5">good reason just</font><font color="#CCCCCC"> because the different</font>

84
00:03:51,290 --> 00:03:57,170
<font color="#E5E5E5">Linux subsystems don't really talk to</font>

85
00:03:54,530 --> 00:03:59,959
each other<font color="#E5E5E5"> otherwise they're building</font>

86
00:03:57,170 --> 00:04:03,260
<font color="#CCCCCC">silos and</font><font color="#E5E5E5"> that helps you bring the data</font>

87
00:03:59,959 --> 00:04:05,810
between the different silos<font color="#CCCCCC"> in a zero</font>

88
00:04:03,260 --> 00:04:08,959
copy way<font color="#E5E5E5"> as especially now that we're</font>

89
00:04:05,810 --> 00:04:10,549
doing 4k people<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about 8k you can</font>

90
00:04:08,959 --> 00:04:13,940
<font color="#E5E5E5">tougher to copy all that memory on these</font>

91
00:04:10,549 --> 00:04:17,660
tiny devices<font color="#CCCCCC"> than the big ones and so</font>

92
00:04:13,940 --> 00:04:19,668
<font color="#E5E5E5">that's really really important</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> of</font>

93
00:04:17,660 --> 00:04:20,959
the one of<font color="#E5E5E5"> the big improvements this so</font>

94
00:04:19,668 --> 00:04:22,520
Justin ware has supported for a while

95
00:04:20,959 --> 00:04:24,440
but we've been<font color="#CCCCCC"> fixing all the</font><font color="#E5E5E5"> little</font>

96
00:04:22,520 --> 00:04:26,180
<font color="#E5E5E5">components because this is really</font><font color="#CCCCCC"> about</font>

97
00:04:24,440 --> 00:04:28,719
sharing<font color="#CCCCCC"> data between all the components</font>

98
00:04:26,180 --> 00:04:32,210
so to make<font color="#E5E5E5"> it work</font><font color="#CCCCCC"> across the pipeline</font>

99
00:04:28,720 --> 00:04:34,370
<font color="#E5E5E5">we need to</font><font color="#CCCCCC"> actually fix a bunch of</font>

100
00:04:32,210 --> 00:04:36,080
little<font color="#E5E5E5"> things everywhere one of the big</font>

101
00:04:34,370 --> 00:04:40,099
improvement<font color="#E5E5E5"> this</font><font color="#CCCCCC"> year is that we've</font>

102
00:04:36,080 --> 00:04:42,080
added functionality to the T element the

103
00:04:40,099 --> 00:04:43,340
element is when you have a pipeline<font color="#E5E5E5"> you</font>

104
00:04:42,080 --> 00:04:44,930
have something<font color="#E5E5E5"> that comes in and you</font>

105
00:04:43,340 --> 00:04:47,750
want to send the<font color="#E5E5E5"> same thing to two</font>

106
00:04:44,930 --> 00:04:50,590
different<font color="#CCCCCC"> branches and previously</font><font color="#E5E5E5"> this</font>

107
00:04:47,750 --> 00:04:53,060
would almost always<font color="#CCCCCC"> cause a copy if</font>

108
00:04:50,590 --> 00:04:55,969
because<font color="#E5E5E5"> it prevented both sides from</font>

109
00:04:53,060 --> 00:05:00,370
negotiating<font color="#E5E5E5"> the same memory layout now</font>

110
00:04:55,970 --> 00:05:00,370
we've<font color="#E5E5E5"> had a very small</font><font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> code</font>

111
00:05:06,780 --> 00:05:13,409
how about the way it's been intended

112
00:05:11,270 --> 00:05:16,440
even though you send the same<font color="#E5E5E5"> thing to</font>

113
00:05:13,410 --> 00:05:18,450
<font color="#CCCCCC">two to</font><font color="#E5E5E5"> two places the typical example</font>

114
00:05:16,440 --> 00:05:21,000
<font color="#E5E5E5">would be</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> doing a</font><font color="#CCCCCC"> video call</font><font color="#E5E5E5"> you</font>

115
00:05:18,450 --> 00:05:22,590
have a camera<font color="#CCCCCC"> and captures you want to</font>

116
00:05:21,000 --> 00:05:25,170
send to<font color="#E5E5E5"> the encoder</font><font color="#CCCCCC"> and send it</font><font color="#E5E5E5"> to the</font>

117
00:05:22,590 --> 00:05:27,119
display<font color="#E5E5E5"> for preview</font><font color="#CCCCCC"> a very</font><font color="#E5E5E5"> very simple</font>

118
00:05:25,170 --> 00:05:29,190
use case that<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> work with zero</font>

119
00:05:27,120 --> 00:05:31,170
copy<font color="#CCCCCC"> without hacks</font><font color="#E5E5E5"> and now it</font><font color="#CCCCCC"> just works</font>

120
00:05:29,190 --> 00:05:35,210
out of the<font color="#E5E5E5"> box</font><font color="#CCCCCC"> that's a really huge</font>

121
00:05:31,170 --> 00:05:38,760
improvement<font color="#CCCCCC"> next is my mega slide</font>

122
00:05:35,210 --> 00:05:40,590
<font color="#E5E5E5">about video for Linux</font><font color="#CCCCCC"> a view for Linux</font>

123
00:05:38,760 --> 00:05:42,750
is the<font color="#E5E5E5"> Linux kernel API that everyone</font>

124
00:05:40,590 --> 00:05:46,070
knows as the<font color="#E5E5E5"> one for webcams but it's</font>

125
00:05:42,750 --> 00:05:48,240
also the API that<font color="#CCCCCC"> is recommended for</font>

126
00:05:46,070 --> 00:05:52,980
implementing<font color="#E5E5E5"> Hardware encoders and</font>

127
00:05:48,240 --> 00:05:55,140
decoders<font color="#E5E5E5"> on Linux</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> distress</font>

128
00:05:52,980 --> 00:05:59,550
pretty the most complete<font color="#E5E5E5"> support</font><font color="#CCCCCC"> for</font>

129
00:05:55,140 --> 00:06:01,770
this<font color="#CCCCCC"> API</font><font color="#E5E5E5"> where as far as I know ffmpeg</font>

130
00:05:59,550 --> 00:06:02,910
just had something<font color="#E5E5E5"> merged recently but</font>

131
00:06:01,770 --> 00:06:04,260
as far<font color="#E5E5E5"> as I know we're the only ones</font>

132
00:06:02,910 --> 00:06:08,370
that<font color="#E5E5E5"> really implement all</font><font color="#CCCCCC"> of the</font>

133
00:06:04,260 --> 00:06:10,169
features<font color="#E5E5E5"> different implementations like</font>

134
00:06:08,370 --> 00:06:12,750
<font color="#E5E5E5">the</font><font color="#CCCCCC"> ones in Chrome OS</font><font color="#E5E5E5"> they actually have</font>

135
00:06:10,169 --> 00:06:15,120
one copy of the code for each different

136
00:06:12,750 --> 00:06:18,660
<font color="#E5E5E5">hardware with different quirks we try to</font>

137
00:06:15,120 --> 00:06:20,669
avoid that<font color="#CCCCCC"> and we tell the kernel driver</font>

138
00:06:18,660 --> 00:06:25,860
maintainer<font color="#CCCCCC"> is to just fix</font><font color="#E5E5E5"> their drivers</font>

139
00:06:20,669 --> 00:06:27,900
and<font color="#E5E5E5"> follow the API</font><font color="#CCCCCC"> so that's the big big</font>

140
00:06:25,860 --> 00:06:29,930
thing this<font color="#CCCCCC"> year</font><font color="#E5E5E5"> and that is the support</font>

141
00:06:27,900 --> 00:06:29,929
for

142
00:06:36,580 --> 00:06:41,810
across different hardware's and now we

143
00:06:39,290 --> 00:06:43,400
do so if you<font color="#CCCCCC"> have a hardware encoder</font>

144
00:06:41,810 --> 00:06:46,130
<font color="#E5E5E5">this is using a bunch of boards at that</font>

145
00:06:43,400 --> 00:06:48,289
upstream support things like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> snap</font>

146
00:06:46,130 --> 00:06:53,420
<font color="#CCCCCC">dragon dragon board</font>

147
00:06:48,290 --> 00:06:57,530
410<font color="#CCCCCC"> C but</font><font color="#E5E5E5"> also the upstream</font>

148
00:06:53,420 --> 00:06:59,150
I am<font color="#E5E5E5"> xx driver for coda and a bunch of</font>

149
00:06:57,530 --> 00:07:00,799
these other<font color="#E5E5E5"> things</font><font color="#CCCCCC"> actually just work</font>

150
00:06:59,150 --> 00:07:02,739
out of the box with<font color="#CCCCCC"> GStreamer and the</font>

151
00:07:00,800 --> 00:07:07,250
upstream kernel without needing any

152
00:07:02,740 --> 00:07:08,900
board specific<font color="#CCCCCC"> hacks another thing</font><font color="#E5E5E5"> that</font>

153
00:07:07,250 --> 00:07:10,490
we've changed since<font color="#CCCCCC"> last year</font><font color="#E5E5E5"> it's a</font>

154
00:07:08,900 --> 00:07:12,739
<font color="#E5E5E5">little thing</font><font color="#CCCCCC"> but it's really</font><font color="#E5E5E5"> improved</font>

155
00:07:10,490 --> 00:07:16,280
the lives of<font color="#CCCCCC"> everyone is that we have</font>

156
00:07:12,740 --> 00:07:18,830
<font color="#E5E5E5">stable element names so with the way the</font>

157
00:07:16,280 --> 00:07:20,809
<font color="#CCCCCC">plug-in works</font><font color="#E5E5E5"> is that once you</font><font color="#CCCCCC"> start it</font>

158
00:07:18,830 --> 00:07:23,510
<font color="#CCCCCC">it looks at the hardware that's present</font>

159
00:07:20,810 --> 00:07:25,490
and generates an element for<font color="#E5E5E5"> each block</font>

160
00:07:23,510 --> 00:07:29,090
<font color="#CCCCCC">of hardware and previously you</font><font color="#E5E5E5"> would</font>

161
00:07:25,490 --> 00:07:31,040
have a<font color="#CCCCCC"> limit be named</font><font color="#E5E5E5"> 0 1 5 25 a bit</font>

162
00:07:29,090 --> 00:07:33,289
<font color="#CCCCCC">anyway that's</font><font color="#E5E5E5"> feels a bit random to the</font>

163
00:07:31,040 --> 00:07:34,940
user<font color="#E5E5E5"> now we actually decided the first</font>

164
00:07:33,290 --> 00:07:37,550
<font color="#E5E5E5">one that we find for each one we just</font>

165
00:07:34,940 --> 00:07:40,610
<font color="#E5E5E5">give</font><font color="#CCCCCC"> it the</font><font color="#E5E5E5"> the fixed name so that</font><font color="#CCCCCC"> you</font>

166
00:07:37,550 --> 00:07:43,910
can say well you<font color="#CCCCCC"> can say oh I know I</font>

167
00:07:40,610 --> 00:07:46,580
have a h.264 encoder<font color="#E5E5E5"> I just do v4l to</font>

168
00:07:43,910 --> 00:07:49,580
h.264<font color="#CCCCCC"> Dec</font><font color="#E5E5E5"> bang it works you don't have</font>

169
00:07:46,580 --> 00:07:52,099
to<font color="#CCCCCC"> react it's gonna</font><font color="#E5E5E5"> be called Dec 23 dec</font>

170
00:07:49,580 --> 00:07:54,940
25 and you have no it against<font color="#E5E5E5"> that so</font>

171
00:07:52,100 --> 00:07:59,000
means just works with<font color="#CCCCCC"> just</font><font color="#E5E5E5"> launched</font>

172
00:07:54,940 --> 00:08:02,780
another big<font color="#E5E5E5"> big improvement is that now</font>

173
00:07:59,000 --> 00:08:05,419
we have default<font color="#CCCCCC"> to</font><font color="#E5E5E5"> DME buff in the</font>

174
00:08:02,780 --> 00:08:07,609
<font color="#E5E5E5">decoder so that means that if you do</font>

175
00:08:05,419 --> 00:08:11,270
decoder display now it's<font color="#CCCCCC"> zero copy by</font>

176
00:08:07,610 --> 00:08:12,830
default on most platforms<font color="#E5E5E5"> so that that's</font>

177
00:08:11,270 --> 00:08:17,000
been a user<font color="#E5E5E5"> in front otherwise you had</font>

178
00:08:12,830 --> 00:08:18,979
to change properties and twiddle it to

179
00:08:17,000 --> 00:08:21,560
make it work it could work and people

180
00:08:18,979 --> 00:08:23,599
shipped it but it was a lot of work for

181
00:08:21,560 --> 00:08:27,400
nothing<font color="#CCCCCC"> now we have all of the clean</font>

182
00:08:23,600 --> 00:08:30,140
negotiation so it should just<font color="#CCCCCC"> work I</font>

183
00:08:27,400 --> 00:08:32,478
think<font color="#CCCCCC"> it was merged very recently in the</font>

184
00:08:30,140 --> 00:08:34,929
last<font color="#CCCCCC"> weeks is the ability to change</font>

185
00:08:32,479 --> 00:08:37,820
<font color="#E5E5E5">resolutions at</font><font color="#CCCCCC"> runtime for</font><font color="#E5E5E5"> the decoder</font>

186
00:08:34,929 --> 00:08:39,500
so previously if<font color="#CCCCCC"> your encoded stream</font>

187
00:08:37,820 --> 00:08:43,150
change resolution<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to stop the</font>

188
00:08:39,500 --> 00:08:43,150
entire pipeline stop the decoder

189
00:08:49,449 --> 00:08:53,689
<font color="#CCCCCC">particularly this</font><font color="#E5E5E5"> is really important</font>

190
00:08:52,100 --> 00:08:56,540
<font color="#E5E5E5">for adaptive streaming</font><font color="#CCCCCC"> type things</font><font color="#E5E5E5"> like</font>

191
00:08:53,690 --> 00:09:00,070
<font color="#CCCCCC">dashing HLS because as they adapt the</font>

192
00:08:56,540 --> 00:09:00,069
<font color="#CCCCCC">bitrate they often change resolutions</font>

193
00:09:07,420 --> 00:09:14,959
<font color="#CCCCCC">these are the main ones on the video for</font>

194
00:09:09,830 --> 00:09:16,580
<font color="#E5E5E5">the next</font><font color="#CCCCCC"> time next</font><font color="#E5E5E5"> kms so kms is the</font>

195
00:09:14,960 --> 00:09:19,940
<font color="#CCCCCC">Linux API to display things</font><font color="#E5E5E5"> on the</font>

196
00:09:16,580 --> 00:09:24,260
screen<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> desktop</font><font color="#E5E5E5"> we mostly use it</font>

197
00:09:19,940 --> 00:09:27,140
<font color="#E5E5E5">through a</font><font color="#CCCCCC"> Weiland</font><font color="#E5E5E5"> or to a compositor or</font>

198
00:09:24,260 --> 00:09:28,490
through a GL stack but on many embedded

199
00:09:27,140 --> 00:09:31,160
board you just<font color="#CCCCCC"> want to show video</font>

200
00:09:28,490 --> 00:09:33,620
fullscreen<font color="#E5E5E5"> or show video in a rectangle</font>

201
00:09:31,160 --> 00:09:35,750
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> it to be as efficient as</font>

202
00:09:33,620 --> 00:09:38,360
<font color="#E5E5E5">possible you want to</font><font color="#CCCCCC"> keep</font><font color="#E5E5E5"> that GPU off</font>

203
00:09:35,750 --> 00:09:40,700
or maybe not touch the GPU at all maybe

204
00:09:38,360 --> 00:09:43,820
<font color="#E5E5E5">you don't have a GPU</font><font color="#CCCCCC"> and so in this</font><font color="#E5E5E5"> case</font>

205
00:09:40,700 --> 00:09:46,760
is you use the kms<font color="#E5E5E5"> API directly and just</font>

206
00:09:43,820 --> 00:09:48,530
<font color="#CCCCCC">wear</font><font color="#E5E5E5"> as a plug-in for that and it has</font>

207
00:09:46,760 --> 00:09:51,980
been improved<font color="#E5E5E5"> quite a bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> last year</font>

208
00:09:48,530 --> 00:09:53,839
as it was<font color="#CCCCCC"> merchants in last year two</font>

209
00:09:51,980 --> 00:09:55,870
<font color="#CCCCCC">years ago</font><font color="#E5E5E5"> anyways and there's been a lot</font>

210
00:09:53,840 --> 00:09:58,370
<font color="#E5E5E5">of</font><font color="#CCCCCC"> and lots</font><font color="#E5E5E5"> people actually using that</font>

211
00:09:55,870 --> 00:10:01,940
one of the big improvement is<font color="#CCCCCC"> that now</font>

212
00:09:58,370 --> 00:10:04,820
it proposes<font color="#CCCCCC"> Hardware buffers from</font><font color="#E5E5E5"> the</font>

213
00:10:01,940 --> 00:10:07,100
sink<font color="#E5E5E5"> so that you can have a software</font>

214
00:10:04,820 --> 00:10:09,590
decoder<font color="#CCCCCC"> write to a</font><font color="#E5E5E5"> buffer that can be</font>

215
00:10:07,100 --> 00:10:12,650
directly displayed on the sink this uses

216
00:10:09,590 --> 00:10:14,870
<font color="#CCCCCC">Dom buffers which is like the more basic</font>

217
00:10:12,650 --> 00:10:17,990
<font color="#CCCCCC">ones because</font><font color="#E5E5E5"> we can't negotiate</font><font color="#CCCCCC"> others</font>

218
00:10:14,870 --> 00:10:19,970
<font color="#E5E5E5">yet we added video</font><font color="#CCCCCC"> every support that</font>

219
00:10:17,990 --> 00:10:22,490
means that you can<font color="#CCCCCC"> actually say I want</font>

220
00:10:19,970 --> 00:10:24,950
something<font color="#E5E5E5"> else than fullscreen it's kind</font>

221
00:10:22,490 --> 00:10:28,040
of a big thing<font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> do things like</font>

222
00:10:24,950 --> 00:10:32,330
simple<font color="#E5E5E5"> picture-in-picture which are</font>

223
00:10:28,040 --> 00:10:34,370
quite used in embedded boards<font color="#E5E5E5"> it now</font>

224
00:10:32,330 --> 00:10:35,150
supports a lot more formats and devices

225
00:10:34,370 --> 00:10:38,150
out of the box

226
00:10:35,150 --> 00:10:40,970
sadly the kms<font color="#CCCCCC"> API is not</font><font color="#E5E5E5"> fully generic</font>

227
00:10:38,150 --> 00:10:42,230
<font color="#E5E5E5">across devices so we actually have</font><font color="#CCCCCC"> to we</font>

228
00:10:40,970 --> 00:10:46,600
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> whitelist of device that are</font>

229
00:10:42,230 --> 00:10:49,700
known<font color="#CCCCCC"> to work and what what it works</font><font color="#E5E5E5"> so</font>

230
00:10:46,600 --> 00:10:51,740
<font color="#CCCCCC">that is a big one</font><font color="#E5E5E5"> and also</font><font color="#CCCCCC"> a lot less</font>

231
00:10:49,700 --> 00:10:53,720
bugs there's been a lot<font color="#CCCCCC"> of lot of</font><font color="#E5E5E5"> bug</font>

232
00:10:51,740 --> 00:10:57,160
fixes<font color="#CCCCCC"> there</font><font color="#E5E5E5"> because people actually use</font>

233
00:10:53,720 --> 00:10:59,480
that<font color="#E5E5E5"> stuff now</font><font color="#CCCCCC"> that it it's</font><font color="#E5E5E5"> upstream and</font>

234
00:10:57,160 --> 00:11:03,079
that has been<font color="#CCCCCC"> a</font><font color="#E5E5E5"> huge improvement now it</font>

235
00:10:59,480 --> 00:11:08,180
just<font color="#CCCCCC"> works</font><font color="#E5E5E5"> one sort of time next</font><font color="#CCCCCC"> one is</font>

236
00:11:03,080 --> 00:11:10,400
<font color="#CCCCCC">called open max open max is well try</font><font color="#E5E5E5"> to</font>

237
00:11:08,180 --> 00:11:14,359
be<font color="#CCCCCC"> gstreamer designed by a committee of</font>

238
00:11:10,400 --> 00:11:15,800
large corporations<font color="#CCCCCC"> sadly none of</font><font color="#E5E5E5"> these</font>

239
00:11:14,360 --> 00:11:19,280
corporations actually<font color="#E5E5E5"> use it anymore</font>

240
00:11:15,800 --> 00:11:22,310
<font color="#E5E5E5">except for Android so</font><font color="#CCCCCC"> open max is</font>

241
00:11:19,280 --> 00:11:24,230
as far as<font color="#E5E5E5"> we know it's dead upstream the</font>

242
00:11:22,310 --> 00:11:27,859
committee has not met in five or<font color="#CCCCCC"> six</font>

243
00:11:24,230 --> 00:11:30,470
<font color="#E5E5E5">years the last there was a draft</font><font color="#CCCCCC"> 1.2</font>

244
00:11:27,860 --> 00:11:32,570
that was<font color="#E5E5E5"> rejected by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Cronus senior</font>

245
00:11:30,470 --> 00:11:34,850
<font color="#E5E5E5">board and now it's not going</font><font color="#CCCCCC"> anywhere</font><font color="#E5E5E5"> so</font>

246
00:11:32,570 --> 00:11:37,460
<font color="#CCCCCC">just don't don't</font><font color="#E5E5E5"> use it if you can</font>

247
00:11:34,850 --> 00:11:39,560
sadly we have<font color="#E5E5E5"> to because embedded</font>

248
00:11:37,460 --> 00:11:43,040
vendors<font color="#CCCCCC"> of</font><font color="#E5E5E5"> proprietary code and there's</font>

249
00:11:39,560 --> 00:11:45,670
<font color="#CCCCCC">openmax</font><font color="#E5E5E5"> plugins and often the only way</font>

250
00:11:43,040 --> 00:11:49,400
to<font color="#E5E5E5"> access the hardware so we've been</font>

251
00:11:45,670 --> 00:11:52,689
<font color="#E5E5E5">working on</font><font color="#CCCCCC"> improving support for some</font><font color="#E5E5E5"> of</font>

252
00:11:49,400 --> 00:11:56,660
these the Xilinx one now<font color="#E5E5E5"> it's quite good</font>

253
00:11:52,690 --> 00:11:59,090
<font color="#CCCCCC">we have pretty complex</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> kh2</font><font color="#E5E5E5"> 65 use</font>

254
00:11:56,660 --> 00:12:01,550
cases<font color="#E5E5E5"> with a lot of extensions with</font><font color="#CCCCCC"> DNA</font>

255
00:11:59,090 --> 00:12:03,170
<font color="#E5E5E5">buff support and everything so that has</font>

256
00:12:01,550 --> 00:12:06,469
<font color="#E5E5E5">been something that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> gear on there</font>

257
00:12:03,170 --> 00:12:09,199
has been<font color="#E5E5E5"> working</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we have support</font><font color="#CCCCCC"> 40</font>

258
00:12:06,470 --> 00:12:11,480
Sonja - Sonja<font color="#E5E5E5"> is an open</font><font color="#CCCCCC"> source open max</font>

259
00:12:09,200 --> 00:12:14,660
implementation that<font color="#CCCCCC"> is not as terrible</font>

260
00:12:11,480 --> 00:12:15,920
<font color="#E5E5E5">as the</font><font color="#CCCCCC"> bellagio effects transition</font><font color="#E5E5E5"> but</font>

261
00:12:14,660 --> 00:12:17,719
so what do they do that

262
00:12:15,920 --> 00:12:20,319
I<font color="#E5E5E5"> don't know why but someone is</font><font color="#CCCCCC"> actually</font>

263
00:12:17,720 --> 00:12:22,610
adding<font color="#E5E5E5"> support for this</font><font color="#CCCCCC"> to gstreamer</font><font color="#E5E5E5"> and</font>

264
00:12:20,320 --> 00:12:26,080
dystonia they've implemented some<font color="#E5E5E5"> of the</font>

265
00:12:22,610 --> 00:12:29,120
features of the rejected<font color="#CCCCCC"> 1.2 draft that</font>

266
00:12:26,080 --> 00:12:30,520
fix some<font color="#CCCCCC"> of the worst</font><font color="#E5E5E5"> problems with</font>

267
00:12:29,120 --> 00:12:33,230
<font color="#CCCCCC">openmax</font>

268
00:12:30,520 --> 00:12:34,910
and we've also added<font color="#E5E5E5"> more open max</font>

269
00:12:33,230 --> 00:12:36,830
<font color="#E5E5E5">standard defines a bunch of properties</font>

270
00:12:34,910 --> 00:12:38,270
<font color="#E5E5E5">of the encoders have we had very few</font>

271
00:12:36,830 --> 00:12:40,670
industry we basically<font color="#E5E5E5"> only</font><font color="#CCCCCC"> have the</font>

272
00:12:38,270 --> 00:12:44,900
<font color="#CCCCCC">bitrate now a bit more are i've been</font>

273
00:12:40,670 --> 00:12:46,790
implemented<font color="#CCCCCC"> I should mention this is all</font>

274
00:12:44,900 --> 00:12:50,180
<font color="#E5E5E5">about open packs</font><font color="#CCCCCC"> il the intermediate</font>

275
00:12:46,790 --> 00:12:53,390
layer<font color="#E5E5E5"> there's also openmax al and</font><font color="#CCCCCC"> dl and</font>

276
00:12:50,180 --> 00:12:55,250
no one uses them so<font color="#CCCCCC"> dl has never been</font>

277
00:12:53,390 --> 00:12:58,189
<font color="#CCCCCC">implemented the driver layer device</font>

278
00:12:55,250 --> 00:12:59,990
there and the<font color="#CCCCCC"> al application layer</font><font color="#E5E5E5"> is</font>

279
00:12:58,190 --> 00:13:03,530
<font color="#E5E5E5">actually from an</font><font color="#CCCCCC"> android but i don't</font>

280
00:12:59,990 --> 00:13:05,210
know if anyone actually uses that so

281
00:13:03,530 --> 00:13:08,150
basically open max now is the<font color="#CCCCCC"> android</font>

282
00:13:05,210 --> 00:13:10,250
<font color="#CCCCCC">api and people</font><font color="#E5E5E5"> just write open max</font>

283
00:13:08,150 --> 00:13:14,060
elements that do the very minimum<font color="#E5E5E5"> to</font>

284
00:13:10,250 --> 00:13:18,110
work and<font color="#E5E5E5"> enter it and that's it don't do</font>

285
00:13:14,060 --> 00:13:22,400
that<font color="#E5E5E5"> and there's been a couple</font><font color="#CCCCCC"> more</font>

286
00:13:18,110 --> 00:13:23,780
things<font color="#E5E5E5"> on embedded OpenGL support the</font>

287
00:13:22,400 --> 00:13:25,880
big one<font color="#E5E5E5"> this year is that</font><font color="#CCCCCC"> we have</font>

288
00:13:23,780 --> 00:13:29,390
support<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> Vivante proprietary</font>

289
00:13:25,880 --> 00:13:33,050
driver for imx6 boards that's quite

290
00:13:29,390 --> 00:13:35,300
using automotive this allows them

291
00:13:33,050 --> 00:13:40,430
have higher<font color="#E5E5E5"> performance drawing on the</font>

292
00:13:35,300 --> 00:13:44,779
<font color="#CCCCCC">stream thing also as Tim mentioned the</font>

293
00:13:40,430 --> 00:13:46,790
OpenGL API<font color="#E5E5E5"> and</font><font color="#CCCCCC"> gstreamer after 10 or 15</font>

294
00:13:44,779 --> 00:13:50,779
years<font color="#E5E5E5"> of development</font><font color="#CCCCCC"> it's finally has a</font>

295
00:13:46,790 --> 00:13:51,890
frozen API<font color="#E5E5E5"> so you can use it</font><font color="#CCCCCC"> without</font><font color="#E5E5E5"> the</font>

296
00:13:50,779 --> 00:13:58,640
fear that<font color="#E5E5E5"> that's going to</font><font color="#CCCCCC"> all be</font>

297
00:13:51,890 --> 00:14:01,939
<font color="#E5E5E5">rewritten next year that's also yes we</font>

298
00:13:58,640 --> 00:14:05,290
can also<font color="#E5E5E5"> export DMA buff from the OpenGL</font>

299
00:14:01,940 --> 00:14:08,149
stack to push it into<font color="#E5E5E5"> a different</font>

300
00:14:05,290 --> 00:14:11,269
application for example<font color="#E5E5E5"> so you can</font>

301
00:14:08,149 --> 00:14:14,209
generate the DNA buff from<font color="#CCCCCC"> a texture</font>

302
00:14:11,269 --> 00:14:15,620
inside the<font color="#CCCCCC"> gstreamer pipeline and then</font>

303
00:14:14,209 --> 00:14:20,300
push that to it and the<font color="#CCCCCC"> next process</font>

304
00:14:15,620 --> 00:14:23,660
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like over</font><font color="#E5E5E5"> DME</font><font color="#CCCCCC"> buff so Tim</font>

305
00:14:20,300 --> 00:14:25,149
<font color="#CCCCCC">mentioned this quickly</font><font color="#E5E5E5"> I'll mention it</font>

306
00:14:23,660 --> 00:14:30,410
<font color="#E5E5E5">too</font><font color="#CCCCCC"> because I</font><font color="#E5E5E5"> think it's</font><font color="#CCCCCC"> really cool</font>

307
00:14:25,149 --> 00:14:33,019
<font color="#E5E5E5">it's a mechanism to split the</font><font color="#CCCCCC"> gstreamer</font>

308
00:14:30,410 --> 00:14:35,839
pipeline into two processes or more so

309
00:14:33,019 --> 00:14:37,730
you<font color="#E5E5E5"> can take a sink or bit of pipeline</font>

310
00:14:35,839 --> 00:14:40,160
that acts as a sink<font color="#E5E5E5"> that's the end and</font>

311
00:14:37,730 --> 00:14:42,230
put it in a different<font color="#E5E5E5"> process and have</font>

312
00:14:40,160 --> 00:14:44,660
it act as<font color="#E5E5E5"> if it was a slave of the first</font>

313
00:14:42,230 --> 00:14:49,820
one<font color="#CCCCCC"> so you this</font><font color="#E5E5E5"> is really useful</font><font color="#CCCCCC"> because</font>

314
00:14:44,660 --> 00:14:52,459
<font color="#E5E5E5">some proprietary</font><font color="#CCCCCC"> api is for video</font>

315
00:14:49,820 --> 00:14:55,339
decoding<font color="#E5E5E5"> this play need to run as root</font>

316
00:14:52,459 --> 00:14:57,890
<font color="#E5E5E5">basically they had it's been done</font><font color="#CCCCCC"> there</font>

317
00:14:55,339 --> 00:14:59,450
basically if they could run make you run

318
00:14:57,890 --> 00:15:02,000
<font color="#E5E5E5">put all their code in the curl I'm sure</font>

319
00:14:59,450 --> 00:15:03,980
they would<font color="#E5E5E5"> but so</font><font color="#CCCCCC"> they're there like</font>

320
00:15:02,000 --> 00:15:06,800
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> just a hardware with all of ours</font>

321
00:15:03,980 --> 00:15:08,209
so<font color="#E5E5E5"> we don't care</font><font color="#CCCCCC"> about security so some</font>

322
00:15:06,800 --> 00:15:11,599
people have care a<font color="#E5E5E5"> bit more especially</font>

323
00:15:08,209 --> 00:15:14,449
now that you have<font color="#E5E5E5"> internet video and so</font>

324
00:15:11,600 --> 00:15:16,670
you can have the part that does all<font color="#CCCCCC"> the</font>

325
00:15:14,450 --> 00:15:18,529
networking<font color="#E5E5E5"> and separate it from the part</font>

326
00:15:16,670 --> 00:15:21,319
that does the video<font color="#E5E5E5"> decoding</font><font color="#CCCCCC"> that</font>

327
00:15:18,529 --> 00:15:25,490
<font color="#E5E5E5">touches the hardware it's kind of</font><font color="#CCCCCC"> mean</font>

328
00:15:21,320 --> 00:15:28,100
it's<font color="#E5E5E5"> very</font><font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> use some little</font><font color="#CCCCCC"> thing</font>

329
00:15:25,490 --> 00:15:29,810
<font color="#E5E5E5">something I discovered this week when I</font>

330
00:15:28,100 --> 00:15:32,930
was reading the get lost preparing this

331
00:15:29,810 --> 00:15:35,000
this talk is<font color="#E5E5E5"> that the RTP</font><font color="#CCCCCC"> issues</font>

332
00:15:32,930 --> 00:15:36,949
<font color="#E5E5E5">Explorer interface decoders can now take</font>

333
00:15:35,000 --> 00:15:38,959
<font color="#CCCCCC">the memory from the downstream elements</font>

334
00:15:36,949 --> 00:15:41,479
the next time<font color="#E5E5E5"> at the pipeline and write</font>

335
00:15:38,959 --> 00:15:44,630
directly in it this means<font color="#E5E5E5"> that if</font><font color="#CCCCCC"> you</font>

336
00:15:41,480 --> 00:15:46,760
have a hardware decoder<font color="#E5E5E5"> that needs</font>

337
00:15:44,630 --> 00:15:50,199
linear memory or some kind<font color="#E5E5E5"> of</font>

338
00:15:46,760 --> 00:15:52,850
<font color="#E5E5E5">see</font><font color="#CCCCCC"> ma are something special you can</font>

339
00:15:50,199 --> 00:15:55,209
have it<font color="#E5E5E5"> allocate</font><font color="#CCCCCC"> memory and just</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> DP</font>

340
00:15:52,850 --> 00:15:59,600
<font color="#CCCCCC">loader will just write</font><font color="#E5E5E5"> directly in it</font>

341
00:15:55,209 --> 00:16:02,380
<font color="#E5E5E5">and</font><font color="#CCCCCC"> RTSP source panel</font><font color="#E5E5E5"> uses</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> regular</font>

342
00:15:59,600 --> 00:16:07,610
debugging<font color="#CCCCCC"> system so in the near future</font>

343
00:16:02,380 --> 00:16:10,790
<font color="#E5E5E5">we have the RM modifiers are coming this</font>

344
00:16:07,610 --> 00:16:12,860
<font color="#CCCCCC">is</font><font color="#E5E5E5"> another thing for zero copy is to use</font>

345
00:16:10,790 --> 00:16:15,110
<font color="#E5E5E5">memory that is like tiled or really</font>

346
00:16:12,860 --> 00:16:16,639
compressed so<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> know anything</font>

347
00:16:15,110 --> 00:16:20,540
<font color="#CCCCCC">about</font><font color="#E5E5E5"> but we can</font><font color="#CCCCCC"> atleast connected</font>

348
00:16:16,639 --> 00:16:24,949
between<font color="#E5E5E5"> decoders and think I have</font><font color="#CCCCCC"> an</font>

349
00:16:20,540 --> 00:16:27,139
intern working on testing<font color="#CCCCCC"> GStreamer</font><font color="#E5E5E5"> on</font>

350
00:16:24,949 --> 00:16:29,209
<font color="#E5E5E5">embedded boards automatically right now</font>

351
00:16:27,139 --> 00:16:31,250
our CI is only on PC we'd like to have

352
00:16:29,209 --> 00:16:37,268
it working<font color="#E5E5E5"> embedded and maybe before</font><font color="#CCCCCC"> us</font>

353
00:16:31,250 --> 00:16:37,269
<font color="#CCCCCC">to stateless codecs</font><font color="#E5E5E5"> any questions yes</font>

354
00:16:48,420 --> 00:16:56,270
<font color="#E5E5E5">others plans to improve balancing for</font>

355
00:16:51,600 --> 00:16:56,270
example to support<font color="#E5E5E5"> multi-channel formats</font>

356
00:17:02,000 --> 00:17:07,500
yeah I think<font color="#E5E5E5"> Nicola right behind you can</font>

357
00:17:04,500 --> 00:17:09,720
answer<font color="#CCCCCC"> he's working on</font><font color="#E5E5E5"> that so to</font>

358
00:17:07,500 --> 00:17:11,730
<font color="#CCCCCC">support actually</font><font color="#E5E5E5"> multi planners support</font>

359
00:17:09,720 --> 00:17:14,280
in<font color="#CCCCCC"> Whelan think we needed</font><font color="#E5E5E5"> actually a</font>

360
00:17:11,730 --> 00:17:17,459
<font color="#CCCCCC">Whelan compositor that supports it</font><font color="#E5E5E5"> which</font>

361
00:17:14,280 --> 00:17:19,859
was in the case and we just started

362
00:17:17,459 --> 00:17:22,470
recently with that<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of a hack in</font>

363
00:17:19,859 --> 00:17:26,429
Weston but<font color="#E5E5E5"> it kind of works we started</font>

364
00:17:22,470 --> 00:17:29,370
<font color="#E5E5E5">testing it and it does and it</font><font color="#CCCCCC"> actually</font>

365
00:17:26,430 --> 00:17:31,620
does<font color="#CCCCCC"> support multi FD if you have DMA</font>

366
00:17:29,370 --> 00:17:35,340
buffs or multi<font color="#E5E5E5"> allocations so it's</font>

367
00:17:31,620 --> 00:17:37,830
already<font color="#E5E5E5"> in place and it</font><font color="#CCCCCC"> should it should</font>

368
00:17:35,340 --> 00:17:40,709
already<font color="#E5E5E5"> be working in</font><font color="#CCCCCC"> 112</font><font color="#E5E5E5"> if it if not</font>

369
00:17:37,830 --> 00:17:47,699
it's working<font color="#CCCCCC"> in get master but we're</font>

370
00:17:40,710 --> 00:17:59,850
<font color="#E5E5E5">actively</font><font color="#CCCCCC"> working on that any other</font>

371
00:17:47,700 --> 00:18:02,490
question in the back<font color="#CCCCCC"> I</font><font color="#E5E5E5"> thanks for your</font>

372
00:17:59,850 --> 00:18:05,669
talk<font color="#CCCCCC"> and you mentioned</font><font color="#E5E5E5"> openmax is dead</font>

373
00:18:02,490 --> 00:18:10,740
<font color="#CCCCCC">and I'm just curious what</font><font color="#E5E5E5"> we but we a</font>

374
00:18:05,670 --> 00:18:12,600
replacement<font color="#CCCCCC"> to focus on</font><font color="#E5E5E5"> so it depends</font>

375
00:18:10,740 --> 00:18:14,340
what to use openmax for<font color="#E5E5E5"> there's kind of</font>

376
00:18:12,600 --> 00:18:17,909
two<font color="#E5E5E5"> things</font><font color="#CCCCCC"> of man there's openmax as a</font>

377
00:18:14,340 --> 00:18:19,320
pipeline<font color="#CCCCCC"> API and that's gstreamer and</font>

378
00:18:17,910 --> 00:18:22,590
but no one actually<font color="#E5E5E5"> uses openmax like</font>

379
00:18:19,320 --> 00:18:24,629
that<font color="#E5E5E5"> as a codec as an API for stateless</font>

380
00:18:22,590 --> 00:18:29,010
codecs<font color="#E5E5E5"> that have a large</font><font color="#CCCCCC"> u space</font>

381
00:18:24,630 --> 00:18:30,120
component and right now<font color="#CCCCCC"> I've Hotel</font>

382
00:18:29,010 --> 00:18:33,870
there's no good<font color="#CCCCCC"> answer</font>

383
00:18:30,120 --> 00:18:35,280
if wim the original architect of G

384
00:18:33,870 --> 00:18:37,320
streamers is<font color="#E5E5E5"> or constantly called pipe</font>

385
00:18:35,280 --> 00:18:39,450
wire and under there he has a<font color="#E5E5E5"> plug-in</font>

386
00:18:37,320 --> 00:18:42,740
<font color="#E5E5E5">API and I hope that can be a replacement</font>

387
00:18:39,450 --> 00:18:42,740
<font color="#E5E5E5">but right now</font>

388
00:18:45,030 --> 00:18:51,780
software for<font color="#CCCCCC"> your for your your your</font>

389
00:18:49,180 --> 00:18:55,150
codec if you need some<font color="#E5E5E5"> userspace</font><font color="#CCCCCC"> code</font>

390
00:18:51,780 --> 00:18:57,040
basically<font color="#E5E5E5"> I would recommend either to</font>

391
00:18:55,150 --> 00:18:59,200
write the most simple API you can and

392
00:18:57,040 --> 00:19:00,879
then be forced to wrap it<font color="#E5E5E5"> in the</font>

393
00:18:59,200 --> 00:19:03,220
different<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> gstreamer ffmpeg</font>

394
00:19:00,880 --> 00:19:06,060
<font color="#E5E5E5">yeah that's why I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have a good</font>

395
00:19:03,220 --> 00:19:09,750
answer<font color="#E5E5E5"> sorry</font>

396
00:19:06,060 --> 00:19:09,750
any other question

397
00:19:09,990 --> 00:19:19,210
but<font color="#E5E5E5"> openmax makes everyone's life</font>

398
00:19:12,880 --> 00:19:20,710
painful so please don't do that yes the

399
00:19:19,210 --> 00:19:22,660
Raspberry Pi household they're basically

400
00:19:20,710 --> 00:19:25,030
<font color="#E5E5E5">the hardware API is an IPC to a</font>

401
00:19:22,660 --> 00:19:28,900
different device<font color="#E5E5E5"> that is almost I want</font>

402
00:19:25,030 --> 00:19:32,280
to want to<font color="#E5E5E5"> open eyes so GST</font><font color="#CCCCCC"> omx was</font>

403
00:19:28,900 --> 00:19:32,280
actually written<font color="#CCCCCC"> for us repair time</font>

404
00:19:55,640 --> 00:20:05,560
<font color="#E5E5E5">all right any other question yeah yep</font>

405
00:20:06,250 --> 00:20:13,900
web RTC on embedded devices<font color="#CCCCCC"> you</font>

406
00:20:09,950 --> 00:20:13,900
mentioned that there<font color="#E5E5E5"> was some yes</font>

407
00:20:16,380 --> 00:20:29,220
just I haven't actually<font color="#E5E5E5"> tried the new</font>

408
00:20:20,490 --> 00:20:35,880
web RTC bin<font color="#E5E5E5"> but I suppose it works one</font>

409
00:20:29,220 --> 00:20:38,330
<font color="#E5E5E5">of</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> know what</font><font color="#E5E5E5"> thank you</font>

410
00:20:35,880 --> 00:20:38,330
thank<font color="#CCCCCC"> you</font>

