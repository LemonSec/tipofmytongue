1
00:00:04,610 --> 00:00:11,240
<font color="#CCCCCC">iein</font><font color="#E5E5E5"> follow me on</font><font color="#CCCCCC"> twitter that's</font><font color="#E5E5E5"> the</font>

2
00:00:07,520 --> 00:00:12,290
only reason I do this<font color="#E5E5E5"> I get paid by</font>

3
00:00:11,240 --> 00:00:14,719
<font color="#CCCCCC">people who do</font><font color="#E5E5E5"> this</font>

4
00:00:12,290 --> 00:00:16,610
DevOps<font color="#E5E5E5"> tools online observability</font>

5
00:00:14,719 --> 00:00:22,070
monitoring stuff like that that's<font color="#E5E5E5"> they</font>

6
00:00:16,610 --> 00:00:24,290
advert<font color="#CCCCCC"> I do some open source stuff</font>

7
00:00:22,070 --> 00:00:26,600
<font color="#CCCCCC">actually everything we've we've works</font>

8
00:00:24,290 --> 00:00:30,020
does<font color="#E5E5E5"> is open source so but I do some</font>

9
00:00:26,600 --> 00:00:32,149
other<font color="#E5E5E5"> stuff as well</font><font color="#CCCCCC"> and program computer</font>

10
00:00:30,020 --> 00:00:35,390
program optimization making things go

11
00:00:32,149 --> 00:00:37,430
faster is is like a<font color="#CCCCCC"> passion is</font><font color="#E5E5E5"> it's</font>

12
00:00:35,390 --> 00:00:38,630
basically my<font color="#E5E5E5"> video game you know</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> some</font>

13
00:00:37,430 --> 00:00:41,870
<font color="#E5E5E5">people will sit and they shoot it</font>

14
00:00:38,630 --> 00:00:44,060
zombies for<font color="#E5E5E5"> several hours</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> cycles and</font>

15
00:00:41,870 --> 00:00:47,239
<font color="#E5E5E5">make things go faster</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's where</font>

16
00:00:44,060 --> 00:00:51,649
I'm<font color="#CCCCCC"> coming from I've been working in go</font>

17
00:00:47,239 --> 00:00:54,140
<font color="#CCCCCC">for</font><font color="#E5E5E5"> three and a half years now and</font><font color="#CCCCCC"> I</font>

18
00:00:51,649 --> 00:00:56,030
<font color="#CCCCCC">gotta</font><font color="#E5E5E5"> tell you some stuff so let's see</font>

19
00:00:54,140 --> 00:00:58,730
who what have we got in<font color="#CCCCCC"> the room</font><font color="#E5E5E5"> I guess</font>

20
00:00:56,030 --> 00:01:01,790
who read the<font color="#CCCCCC"> abstracts actually</font><font color="#E5E5E5"> of the</font>

21
00:00:58,730 --> 00:01:04,188
talk<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so you actually know</font><font color="#CCCCCC"> the</font>

22
00:01:01,790 --> 00:01:07,969
<font color="#CCCCCC">punchline so you could</font><font color="#E5E5E5"> leave now</font><font color="#CCCCCC"> and</font>

23
00:01:04,188 --> 00:01:11,149
make room<font color="#E5E5E5"> for the I don't know</font><font color="#CCCCCC"> it's not</font>

24
00:01:07,969 --> 00:01:13,220
much of a not much<font color="#E5E5E5"> of it huh so yeah</font>

25
00:01:11,150 --> 00:01:15,140
who's everyone's<font color="#E5E5E5"> working with go right</font>

26
00:01:13,220 --> 00:01:18,380
every nobody's putting<font color="#CCCCCC"> their hand up</font><font color="#E5E5E5"> but</font>

27
00:01:15,140 --> 00:01:19,700
see cuz<font color="#E5E5E5"> you're lazy has heard of</font>

28
00:01:18,380 --> 00:01:20,720
<font color="#E5E5E5">Prometheus it was mentioned a couple of</font>

29
00:01:19,700 --> 00:01:22,369
<font color="#E5E5E5">talks ago yeah</font>

30
00:01:20,720 --> 00:01:23,330
I'm gonna<font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> use examples from</font>

31
00:01:22,369 --> 00:01:25,430
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you don't have</font><font color="#E5E5E5"> to know anything</font>

32
00:01:23,330 --> 00:01:27,408
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> always like</font><font color="#CCCCCC"> to</font>

33
00:01:25,430 --> 00:01:32,420
<font color="#CCCCCC">know who's actually</font><font color="#E5E5E5"> heard of the work I</font>

34
00:01:27,409 --> 00:01:37,729
do<font color="#CCCCCC"> what am I gonna cover stuff stuff</font>

35
00:01:32,420 --> 00:01:39,799
stuff<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> okay let's get</font><font color="#E5E5E5"> going</font>

36
00:01:37,729 --> 00:01:43,010
so the three most important<font color="#CCCCCC"> things</font><font color="#E5E5E5"> so</font>

37
00:01:39,799 --> 00:01:44,210
everyone's got a paper and so on<font color="#CCCCCC"> are the</font>

38
00:01:43,010 --> 00:01:47,390
slides are online so you don't really

39
00:01:44,210 --> 00:01:48,770
need<font color="#CCCCCC"> that anyway so so the most</font>

40
00:01:47,390 --> 00:01:50,240
important<font color="#CCCCCC"> thing you need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do when</font>

41
00:01:48,770 --> 00:01:53,890
<font color="#E5E5E5">you're optimizing your programs is</font>

42
00:01:50,240 --> 00:01:57,439
measure things do not start optimizing

43
00:01:53,890 --> 00:01:59,479
<font color="#E5E5E5">until you know what it is doing</font><font color="#CCCCCC"> that is</font>

44
00:01:57,439 --> 00:02:01,880
the most important thing<font color="#E5E5E5"> the second most</font>

45
00:01:59,479 --> 00:02:03,920
important thing is to<font color="#CCCCCC"> still measure and</font>

46
00:02:01,880 --> 00:02:06,560
the third most important thing is to

47
00:02:03,920 --> 00:02:10,970
<font color="#CCCCCC">keep on measuring</font><font color="#E5E5E5"> so do always measure</font>

48
00:02:06,560 --> 00:02:12,079
measure measure<font color="#CCCCCC"> never just go change the</font>

49
00:02:10,970 --> 00:02:13,940
code because<font color="#CCCCCC"> you think it's</font><font color="#E5E5E5"> gonna go</font>

50
00:02:12,079 --> 00:02:14,270
faster because<font color="#E5E5E5"> most of the time you're</font>

51
00:02:13,940 --> 00:02:17,200
wrong

52
00:02:14,270 --> 00:02:17,200
and you're just<font color="#CCCCCC"> gonna waste</font><font color="#E5E5E5"> your time</font>

53
00:02:17,280 --> 00:02:22,380
<font color="#E5E5E5">what do I mean by</font><font color="#CCCCCC"> that measure</font><font color="#E5E5E5"> first of</font>

54
00:02:19,830 --> 00:02:24,810
all measure big things<font color="#E5E5E5"> you know people</font>

55
00:02:22,380 --> 00:02:26,880
<font color="#CCCCCC">show up</font><font color="#E5E5E5"> sometimes they they post online</font>

56
00:02:24,810 --> 00:02:28,740
or<font color="#E5E5E5"> whatever they they have a profile</font>

57
00:02:26,880 --> 00:02:30,240
<font color="#E5E5E5">where something is taking like</font>

58
00:02:28,740 --> 00:02:32,970
<font color="#CCCCCC">twenty-one milliseconds or something</font>

59
00:02:30,240 --> 00:02:36,480
like and<font color="#E5E5E5"> you know who cares unless you</font>

60
00:02:32,970 --> 00:02:37,859
unless<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> high-frequency traders I</font>

61
00:02:36,480 --> 00:02:39,690
used to work in<font color="#CCCCCC"> our</font><font color="#E5E5E5"> chronic trading I</font>

62
00:02:37,860 --> 00:02:43,260
hate<font color="#E5E5E5"> those</font><font color="#CCCCCC"> guys</font><font color="#E5E5E5"> so unless you're</font>

63
00:02:39,690 --> 00:02:47,010
<font color="#CCCCCC">actually you know</font><font color="#E5E5E5"> paid by the micro</font>

64
00:02:43,260 --> 00:02:49,380
second measure big things also<font color="#E5E5E5"> that the</font>

65
00:02:47,010 --> 00:02:51,209
tooling<font color="#CCCCCC"> in gold like</font><font color="#E5E5E5"> Sam the profiler</font>

66
00:02:49,380 --> 00:02:52,590
samples<font color="#CCCCCC"> a</font><font color="#E5E5E5"> hundred times a second so</font>

67
00:02:51,209 --> 00:02:55,230
<font color="#CCCCCC">don't tell me about</font><font color="#E5E5E5"> something that</font><font color="#CCCCCC"> takes</font>

68
00:02:52,590 --> 00:02:57,300
<font color="#E5E5E5">21 milliseconds because it's a sampling</font>

69
00:02:55,230 --> 00:02:58,500
error<font color="#CCCCCC"> so so measure</font><font color="#E5E5E5"> things that you</font>

70
00:02:57,300 --> 00:03:01,620
could literally stand there with a

71
00:02:58,500 --> 00:03:02,940
stopwatch and time<font color="#E5E5E5"> and if you don't have</font>

72
00:03:01,620 --> 00:03:05,100
anything like<font color="#CCCCCC"> that then run it a million</font>

73
00:03:02,940 --> 00:03:07,140
<font color="#E5E5E5">times and and then it will take</font>

74
00:03:05,100 --> 00:03:08,160
appreciable time<font color="#E5E5E5"> so measure measure big</font>

75
00:03:07,140 --> 00:03:09,600
things first thing because you won't

76
00:03:08,160 --> 00:03:13,590
<font color="#E5E5E5">just lose the effect unless</font><font color="#CCCCCC"> you're</font>

77
00:03:09,600 --> 00:03:15,510
<font color="#E5E5E5">bigger big things measure all the time</font>

78
00:03:13,590 --> 00:03:17,580
<font color="#CCCCCC">you're gonna miss it</font><font color="#E5E5E5"> if you're not</font>

79
00:03:15,510 --> 00:03:20,040
measuring<font color="#E5E5E5"> and you know okay</font><font color="#CCCCCC"> I'm standing</font>

80
00:03:17,580 --> 00:03:23,519
here<font color="#E5E5E5"> as a guy who sells very measurement</font>

81
00:03:20,040 --> 00:03:27,630
and observability systems and so on<font color="#CCCCCC"> but</font>

82
00:03:23,519 --> 00:03:30,329
we this is this is pretty<font color="#E5E5E5"> useful to like</font>

83
00:03:27,630 --> 00:03:33,959
have things like your CPU usage all the

84
00:03:30,329 --> 00:03:35,640
time so you can see when<font color="#CCCCCC"> things changed</font>

85
00:03:33,959 --> 00:03:39,239
all that<font color="#E5E5E5"> kind of thing</font>

86
00:03:35,640 --> 00:03:41,369
and the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> thing I got into this this</font>

87
00:03:39,239 --> 00:03:47,430
particular<font color="#CCCCCC"> tool is Yeager who uses</font>

88
00:03:41,370 --> 00:03:49,019
<font color="#E5E5E5">Yeager</font><font color="#CCCCCC"> so there's a there's a bunch of</font>

89
00:03:47,430 --> 00:03:51,209
<font color="#E5E5E5">tools like this their zip</font><font color="#CCCCCC"> King and</font>

90
00:03:49,019 --> 00:03:53,130
dapper is the sort of<font color="#E5E5E5"> daddy of this</font>

91
00:03:51,209 --> 00:03:55,709
<font color="#CCCCCC">family and I used to write things</font><font color="#E5E5E5"> like</font>

92
00:03:53,130 --> 00:03:59,670
this myself<font color="#CCCCCC"> when I worked</font><font color="#E5E5E5"> in a chronic</font>

93
00:03:55,709 --> 00:04:00,510
trading but the basic let's let's do

94
00:03:59,670 --> 00:04:02,578
technology<font color="#E5E5E5"> here</font>

95
00:04:00,510 --> 00:04:04,670
that's so<font color="#CCCCCC"> basically ideas</font><font color="#E5E5E5"> you got you</font>

96
00:04:02,579 --> 00:04:07,890
<font color="#E5E5E5">got a you got</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> line you got a</font>

97
00:04:04,670 --> 00:04:09,750
<font color="#E5E5E5">horizontal bar illustrating how long</font>

98
00:04:07,890 --> 00:04:12,779
<font color="#CCCCCC">everything took and then</font><font color="#E5E5E5"> you got a kind</font>

99
00:04:09,750 --> 00:04:16,829
of hierarchy of of the<font color="#E5E5E5"> the breakdown</font><font color="#CCCCCC"> of</font>

100
00:04:12,780 --> 00:04:19,260
how long things took within that and the

101
00:04:16,829 --> 00:04:21,810
point is don't go optimizing your<font color="#E5E5E5"> goal</font>

102
00:04:19,260 --> 00:04:24,930
code<font color="#CCCCCC"> if it's not actually in the goal</font>

103
00:04:21,810 --> 00:04:27,990
code that it's slow you<font color="#CCCCCC"> know so a first</font>

104
00:04:24,930 --> 00:04:30,419
approximation<font color="#E5E5E5"> most programs will spend</font>

105
00:04:27,990 --> 00:04:33,089
all of their time waiting<font color="#E5E5E5"> on</font>

106
00:04:30,419 --> 00:04:34,438
so don't don't go<font color="#E5E5E5"> hacking around there</font>

107
00:04:33,089 --> 00:04:35,490
you go code if it's waiting<font color="#CCCCCC"> for</font><font color="#E5E5E5"> IO</font>

108
00:04:34,439 --> 00:04:38,659
<font color="#E5E5E5">because it's not gonna make any</font>

109
00:04:35,490 --> 00:04:40,710
difference<font color="#CCCCCC"> so so</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> is about</font>

110
00:04:38,659 --> 00:04:43,080
<font color="#E5E5E5">after the time when</font><font color="#CCCCCC"> you've measure</font>

111
00:04:40,710 --> 00:04:46,289
measure measure<font color="#E5E5E5"> after</font><font color="#CCCCCC"> the time when</font>

112
00:04:43,080 --> 00:04:48,389
you've looked at the the traces<font color="#E5E5E5"> and</font>

113
00:04:46,289 --> 00:04:51,808
<font color="#E5E5E5">you're utterly sure that it is using CPU</font>

114
00:04:48,389 --> 00:04:56,849
time<font color="#E5E5E5"> in your goal code now the talk</font>

115
00:04:51,809 --> 00:04:59,430
starts<font color="#CCCCCC"> okay so what do you do</font><font color="#E5E5E5"> oh talk</font>

116
00:04:56,849 --> 00:05:01,020
didn't start<font color="#E5E5E5"> I'm gonna I'm gonna draw</font>

117
00:04:59,430 --> 00:05:04,499
examples from this thing which<font color="#E5E5E5"> is we've</font>

118
00:05:01,020 --> 00:05:11,698
cortex<font color="#CCCCCC"> this is our this is our</font>

119
00:05:04,499 --> 00:05:12,689
distributed<font color="#E5E5E5"> time series database and you</font>

120
00:05:11,699 --> 00:05:14,969
don't really have to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> anything about</font>

121
00:05:12,689 --> 00:05:16,349
<font color="#E5E5E5">it other than I'm using it in</font><font color="#CCCCCC"> two</font>

122
00:05:14,969 --> 00:05:18,149
<font color="#E5E5E5">different ways I use</font><font color="#CCCCCC"> it to draw</font><font color="#E5E5E5"> these</font>

123
00:05:16,349 --> 00:05:19,919
charts and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> also speed it up</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> I</font>

124
00:05:18,149 --> 00:05:27,899
speed up<font color="#E5E5E5"> the analytics</font><font color="#CCCCCC"> engine I speed up</font>

125
00:05:19,919 --> 00:05:29,849
<font color="#CCCCCC">the ingression</font><font color="#E5E5E5"> of data</font><font color="#CCCCCC"> so so hopefully</font>

126
00:05:27,899 --> 00:05:31,949
that's not too<font color="#E5E5E5"> confusing if</font><font color="#CCCCCC"> you if you</font>

127
00:05:29,849 --> 00:05:34,889
want<font color="#E5E5E5"> to see this the very specifics of</font>

128
00:05:31,949 --> 00:05:36,509
what I've<font color="#CCCCCC"> been</font><font color="#E5E5E5"> doing go to github.com we</font>

129
00:05:34,889 --> 00:05:38,309
<font color="#CCCCCC">Forex cortex and</font><font color="#E5E5E5"> look at all the PRS</font>

130
00:05:36,509 --> 00:05:42,149
with my name<font color="#E5E5E5"> on because most of them are</font>

131
00:05:38,309 --> 00:05:46,729
<font color="#CCCCCC">about speeding this thing up so yeah I</font>

132
00:05:42,149 --> 00:05:51,149
<font color="#CCCCCC">just put that up</font><font color="#E5E5E5"> it's it's we ingest</font>

133
00:05:46,729 --> 00:05:52,620
tens of<font color="#E5E5E5"> millions of time series in real</font>

134
00:05:51,149 --> 00:05:54,089
<font color="#E5E5E5">time from lots of different customers</font>

135
00:05:52,620 --> 00:05:58,379
and that's<font color="#E5E5E5"> why I need</font><font color="#CCCCCC"> to go fast right</font>

136
00:05:54,089 --> 00:06:02,009
<font color="#CCCCCC">okay know the talk starts profiling so</font>

137
00:05:58,379 --> 00:06:04,439
everyone knows this right I guess<font color="#E5E5E5"> I</font>

138
00:06:02,009 --> 00:06:08,039
don't<font color="#CCCCCC"> know</font><font color="#E5E5E5"> hands up if you're already an</font>

139
00:06:04,439 --> 00:06:09,659
<font color="#CCCCCC">expert on this slide yeah</font><font color="#E5E5E5"> maybe just</font>

140
00:06:08,039 --> 00:06:12,808
lazy<font color="#CCCCCC"> me don't</font><font color="#E5E5E5"> want to put your hands up</font>

141
00:06:09,659 --> 00:06:15,990
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so the talk I'm gonna get into more</font>

142
00:06:12,809 --> 00:06:20,219
detail but this is the this<font color="#CCCCCC"> is the</font>

143
00:06:15,990 --> 00:06:22,740
simple<font color="#CCCCCC"> start</font><font color="#E5E5E5"> go read the blog this is</font>

144
00:06:20,219 --> 00:06:25,289
the bit I'm not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> cover you know run</font>

145
00:06:22,740 --> 00:06:29,759
run your program under<font color="#CCCCCC"> the profiler</font><font color="#E5E5E5"> run</font>

146
00:06:25,289 --> 00:06:32,068
<font color="#E5E5E5">be prof. tool and the the bottom if you</font>

147
00:06:29,759 --> 00:06:34,800
<font color="#E5E5E5">do this then you</font><font color="#CCCCCC"> will have an HTTP</font>

148
00:06:32,069 --> 00:06:36,479
endpoint<font color="#E5E5E5"> where in your production system</font>

149
00:06:34,800 --> 00:06:39,930
you go grab a profile which<font color="#CCCCCC"> is really</font>

150
00:06:36,479 --> 00:06:42,289
useful<font color="#E5E5E5"> so yeah that's all in the blog</font>

151
00:06:39,930 --> 00:06:44,639
<font color="#E5E5E5">I'm not going to cover that</font>

152
00:06:42,289 --> 00:06:48,800
here's a profile<font color="#CCCCCC"> here's what you'd get</font>

153
00:06:44,639 --> 00:06:54,289
<font color="#CCCCCC">out</font><font color="#E5E5E5"> if you run that go tool</font><font color="#CCCCCC"> pre proof</font>

154
00:06:48,800 --> 00:06:57,449
command<font color="#E5E5E5"> and so this is this is</font><font color="#CCCCCC"> a quiz</font>

155
00:06:54,289 --> 00:06:59,780
okay so who knows who knows<font color="#E5E5E5"> what the</font>

156
00:06:57,449 --> 00:06:59,780
problem is

157
00:07:02,900 --> 00:07:12,508
okay<font color="#CCCCCC"> silence sorry it only profiles when</font>

158
00:07:10,229 --> 00:07:17,389
it's being<font color="#E5E5E5"> tested</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a profile from</font>

159
00:07:12,509 --> 00:07:21,110
<font color="#E5E5E5">our production system garbage collection</font>

160
00:07:17,389 --> 00:07:23,610
<font color="#CCCCCC">I I made the I made the words</font>

161
00:07:21,110 --> 00:07:30,629
<font color="#E5E5E5">highlighted and made some of them a bit</font>

162
00:07:23,610 --> 00:07:32,159
bigger<font color="#E5E5E5"> but the this is very common that</font>

163
00:07:30,629 --> 00:07:35,250
<font color="#E5E5E5">you will run the profile and you'll see</font>

164
00:07:32,159 --> 00:07:36,930
<font color="#E5E5E5">these guys show up you know</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> runtime</font>

165
00:07:35,250 --> 00:07:39,840
<font color="#E5E5E5">GC drain</font><font color="#CCCCCC"> things like that you'll see</font>

166
00:07:36,930 --> 00:07:42,300
<font color="#CCCCCC">them in</font><font color="#E5E5E5"> your profile and you'll think</font>

167
00:07:39,840 --> 00:07:44,460
well darn<font color="#CCCCCC"> you know I I don't know</font>

168
00:07:42,300 --> 00:07:47,520
<font color="#E5E5E5">anything about garbage collection</font><font color="#CCCCCC"> so I</font>

169
00:07:44,460 --> 00:07:50,880
can't<font color="#E5E5E5"> I can't fix that code and it's</font>

170
00:07:47,520 --> 00:07:55,039
pretty complicated code as well<font color="#CCCCCC"> so but</font>

171
00:07:50,880 --> 00:07:57,479
do<font color="#E5E5E5"> not fear I'll tell you what to do</font>

172
00:07:55,039 --> 00:08:01,639
what is going on with garbage clip

173
00:07:57,479 --> 00:08:01,639
<font color="#E5E5E5">there's this question do we have plans</font>

174
00:08:06,260 --> 00:08:10,190
yes I will explain I will<font color="#E5E5E5"> explain the</font>

175
00:08:08,930 --> 00:08:12,050
question<font color="#CCCCCC"> was how do I know garbage</font>

176
00:08:10,190 --> 00:08:13,790
collection is the problem<font color="#CCCCCC"> what so</font><font color="#E5E5E5"> yeah</font>

177
00:08:12,050 --> 00:08:16,820
<font color="#CCCCCC">what I mean</font><font color="#E5E5E5"> is if you see those</font>

178
00:08:13,790 --> 00:08:19,280
<font color="#CCCCCC">characters</font><font color="#E5E5E5"> runtime GC drain</font><font color="#CCCCCC"> in that</font>

179
00:08:16,820 --> 00:08:21,890
order<font color="#E5E5E5"> somewhere near the</font><font color="#CCCCCC"> top of</font><font color="#E5E5E5"> your</font>

180
00:08:19,280 --> 00:08:24,859
<font color="#E5E5E5">profile</font><font color="#CCCCCC"> then you have a garbage</font>

181
00:08:21,890 --> 00:08:29,120
<font color="#E5E5E5">collection problem and and I predict</font>

182
00:08:24,860 --> 00:08:31,610
right now<font color="#E5E5E5"> you have a garbage collection</font>

183
00:08:29,120 --> 00:08:34,370
problem<font color="#E5E5E5"> because it's a garbage collected</font>

184
00:08:31,610 --> 00:08:35,570
language and unless you anyway<font color="#E5E5E5"> let's</font>

185
00:08:34,370 --> 00:08:36,740
<font color="#CCCCCC">through the rest</font><font color="#E5E5E5"> of the talk</font><font color="#CCCCCC"> and then</font>

186
00:08:35,570 --> 00:08:40,450
come back<font color="#E5E5E5"> to me if I didn't answer your</font>

187
00:08:36,740 --> 00:08:43,669
question<font color="#CCCCCC"> so this is this is</font>

188
00:08:40,450 --> 00:08:45,170
<font color="#E5E5E5">visualization this is if you hook your</font>

189
00:08:43,669 --> 00:08:48,949
<font color="#CCCCCC">go</font><font color="#E5E5E5"> program into</font><font color="#CCCCCC"> Prometheus you can get</font>

190
00:08:45,170 --> 00:08:53,479
this<font color="#E5E5E5"> start out for free</font><font color="#CCCCCC"> and and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

191
00:08:48,950 --> 00:08:55,670
a<font color="#E5E5E5"> sawtooth pattern right the the memory</font>

192
00:08:53,480 --> 00:08:59,050
builds up and then it goes bang down and

193
00:08:55,670 --> 00:09:01,699
builds up bang<font color="#CCCCCC"> bang builds</font><font color="#E5E5E5"> up builds up</font>

194
00:08:59,050 --> 00:09:03,229
<font color="#E5E5E5">so it can be more complicated than</font><font color="#CCCCCC"> that</font>

195
00:09:01,700 --> 00:09:06,290
<font color="#E5E5E5">the garbage collector kind of runs along</font>

196
00:09:03,230 --> 00:09:08,360
in the background<font color="#CCCCCC"> it can</font><font color="#E5E5E5"> be doing other</font>

197
00:09:06,290 --> 00:09:09,949
<font color="#CCCCCC">stuff but</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> fairly I want</font>

198
00:09:08,360 --> 00:09:11,990
you to get<font color="#E5E5E5"> that idea that that it</font>

199
00:09:09,950 --> 00:09:16,490
started doing<font color="#E5E5E5"> doing this sawtooth</font>

200
00:09:11,990 --> 00:09:17,930
pattern all<font color="#E5E5E5"> the time</font><font color="#CCCCCC"> okay now why is it</font>

201
00:09:16,490 --> 00:09:23,480
<font color="#CCCCCC">that interesting</font><font color="#E5E5E5"> well let's talk about</font>

202
00:09:17,930 --> 00:09:25,510
<font color="#E5E5E5">memory so this is sort of standard</font>

203
00:09:23,480 --> 00:09:28,900
architecture<font color="#E5E5E5"> of a modern processor</font>

204
00:09:25,510 --> 00:09:36,470
processor<font color="#E5E5E5"> sometime in the last</font><font color="#CCCCCC"> 20 years</font>

205
00:09:28,900 --> 00:09:38,660
<font color="#E5E5E5">and they the processor like the bit</font>

206
00:09:36,470 --> 00:09:41,240
that's<font color="#E5E5E5"> actually making decisions</font><font color="#CCCCCC"> and</font>

207
00:09:38,660 --> 00:09:43,730
<font color="#E5E5E5">doing things</font><font color="#CCCCCC"> is something like</font><font color="#E5E5E5"> a hundred</font>

208
00:09:41,240 --> 00:09:46,070
<font color="#CCCCCC">times faster than</font><font color="#E5E5E5"> your memory so there's</font>

209
00:09:43,730 --> 00:09:47,750
a there's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> block</font><font color="#E5E5E5"> page numbers every</font>

210
00:09:46,070 --> 00:09:50,420
programmer<font color="#CCCCCC"> should know where they</font>

211
00:09:47,750 --> 00:09:52,370
actually<font color="#E5E5E5"> write down what those numbers</font>

212
00:09:50,420 --> 00:09:54,110
<font color="#E5E5E5">are in terms of nanoseconds and so on</font>

213
00:09:52,370 --> 00:09:57,860
but but<font color="#E5E5E5"> it you know it's orders of</font>

214
00:09:54,110 --> 00:09:59,090
magnitude slower<font color="#E5E5E5"> and in order to just</font>

215
00:09:57,860 --> 00:10:01,070
not<font color="#CCCCCC"> have this thing waiting around all</font>

216
00:09:59,090 --> 00:10:03,940
the time<font color="#E5E5E5"> we build it we build a</font>

217
00:10:01,070 --> 00:10:09,200
hierarchy of caches<font color="#E5E5E5"> here typically to</font>

218
00:10:03,940 --> 00:10:12,580
this is not<font color="#E5E5E5"> to scale</font><font color="#CCCCCC"> typically the the</font>

219
00:10:09,200 --> 00:10:16,130
the level<font color="#CCCCCC"> 1 cache l1 cache is like</font>

220
00:10:12,580 --> 00:10:19,820
hundreds of<font color="#E5E5E5"> K and typically the l2 cache</font>

221
00:10:16,130 --> 00:10:24,410
will be like<font color="#CCCCCC"> 2 3 4 megabytes</font>

222
00:10:19,820 --> 00:10:26,150
and so this the<font color="#E5E5E5"> level</font><font color="#CCCCCC"> 1 cache goes that</font>

223
00:10:24,410 --> 00:10:27,949
same speed is the processor<font color="#CCCCCC"> the level 2</font>

224
00:10:26,150 --> 00:10:31,459
cache goes a bit slower the<font color="#E5E5E5"> RAM goes</font>

225
00:10:27,950 --> 00:10:33,560
horrendously slower<font color="#E5E5E5"> so for your program</font>

226
00:10:31,460 --> 00:10:38,180
to go fast you want everything you're

227
00:10:33,560 --> 00:10:40,459
doing<font color="#E5E5E5"> to be in the cache</font><font color="#CCCCCC"> so there's a</font>

228
00:10:38,180 --> 00:10:43,640
<font color="#E5E5E5">picture of a cache</font><font color="#CCCCCC"> as you can tell I'm a</font>

229
00:10:40,460 --> 00:10:47,390
great<font color="#E5E5E5"> graphic artist as well as the</font>

230
00:10:43,640 --> 00:10:49,069
programmer no I'm not<font color="#CCCCCC"> but I tried I</font>

231
00:10:47,390 --> 00:10:50,540
<font color="#E5E5E5">tried to indicate</font><font color="#CCCCCC"> that that's</font><font color="#E5E5E5"> how this</font>

232
00:10:49,070 --> 00:10:52,190
works there's there's different<font color="#CCCCCC"> color</font>

233
00:10:50,540 --> 00:10:54,469
<font color="#E5E5E5">codes there's bits of bits of memory</font>

234
00:10:52,190 --> 00:10:55,940
<font color="#CCCCCC">which are</font><font color="#E5E5E5"> being cached in the cache and</font>

235
00:10:54,470 --> 00:10:58,610
<font color="#E5E5E5">they're also in</font><font color="#CCCCCC"> there one cache in the</font>

236
00:10:55,940 --> 00:11:02,930
process is<font color="#CCCCCC"> actually only</font><font color="#E5E5E5"> working on the</font>

237
00:10:58,610 --> 00:11:05,810
<font color="#E5E5E5">memory in the</font><font color="#CCCCCC"> l1 cache</font><font color="#E5E5E5"> so think about</font>

238
00:11:02,930 --> 00:11:07,729
that sawtooth<font color="#E5E5E5"> the action of going</font>

239
00:11:05,810 --> 00:11:09,319
<font color="#CCCCCC">through everything in memory and</font><font color="#E5E5E5"> trying</font>

240
00:11:07,730 --> 00:11:11,050
to<font color="#E5E5E5"> figure out what's garbage and what</font>

241
00:11:09,320 --> 00:11:14,570
isn't

242
00:11:11,050 --> 00:11:18,189
<font color="#CCCCCC">basically wipes the cache no maybe</font><font color="#E5E5E5"> not</font>

243
00:11:14,570 --> 00:11:20,330
<font color="#E5E5E5">absolutely</font><font color="#CCCCCC"> but but that activity of</font>

244
00:11:18,190 --> 00:11:22,250
<font color="#E5E5E5">going</font><font color="#CCCCCC"> trolling through</font><font color="#E5E5E5"> the memory that</font>

245
00:11:20,330 --> 00:11:24,800
and just just the activity of<font color="#E5E5E5"> allocating</font>

246
00:11:22,250 --> 00:11:29,870
more memory pushes things<font color="#E5E5E5"> out of the</font>

247
00:11:24,800 --> 00:11:36,199
cache if I move over<font color="#CCCCCC"> the line that</font>

248
00:11:29,870 --> 00:11:50,540
camera cannot<font color="#E5E5E5"> see me okay</font><font color="#CCCCCC"> the moment for</font>

249
00:11:36,200 --> 00:11:52,690
the line<font color="#E5E5E5"> okay sorry I can't do graphic</font>

250
00:11:50,540 --> 00:11:55,640
art<font color="#E5E5E5"> and I can't do interpretive dance</font>

251
00:11:52,690 --> 00:11:57,080
but I<font color="#E5E5E5"> do know how to make programs go</font>

252
00:11:55,640 --> 00:12:01,220
faster<font color="#E5E5E5"> and I'm trying to</font><font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> tell</font>

253
00:11:57,080 --> 00:12:02,540
you yeah so so you don't have<font color="#E5E5E5"> to</font>

254
00:12:01,220 --> 00:12:04,910
understand everything<font color="#CCCCCC"> about how a</font>

255
00:12:02,540 --> 00:12:06,469
processor works<font color="#E5E5E5"> but I am trying</font><font color="#CCCCCC"> to get</font>

256
00:12:04,910 --> 00:12:08,600
<font color="#E5E5E5">across</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> idea there there are there</font>

257
00:12:06,470 --> 00:12:11,000
<font color="#CCCCCC">are like technical physical reasons</font><font color="#E5E5E5"> in</font>

258
00:12:08,600 --> 00:12:13,400
the silicon why<font color="#CCCCCC"> running around</font>

259
00:12:11,000 --> 00:12:14,690
<font color="#E5E5E5">allocating memory throwing it away and</font>

260
00:12:13,400 --> 00:12:18,260
<font color="#E5E5E5">letting the garbage collector clean it</font>

261
00:12:14,690 --> 00:12:19,310
up for<font color="#E5E5E5"> you he's gonna not</font><font color="#CCCCCC"> only slow your</font>

262
00:12:18,260 --> 00:12:21,290
program number because the<font color="#E5E5E5"> garbage</font>

263
00:12:19,310 --> 00:12:22,609
collector<font color="#E5E5E5"> is doing work but</font><font color="#CCCCCC"> it slows the</font>

264
00:12:21,290 --> 00:12:24,110
rest of your program down because it

265
00:12:22,610 --> 00:12:27,910
kicked everything<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of cache</font>

266
00:12:24,110 --> 00:12:31,790
so let's<font color="#E5E5E5"> let's look at some anecdotes</font>

267
00:12:27,910 --> 00:12:32,689
<font color="#CCCCCC">this is another one of the oh that's a</font>

268
00:12:31,790 --> 00:12:38,870
<font color="#E5E5E5">memory profile</font>

269
00:12:32,690 --> 00:12:41,600
sorry<font color="#E5E5E5"> that's important</font><font color="#CCCCCC"> so in instead</font><font color="#E5E5E5"> of</font>

270
00:12:38,870 --> 00:12:43,899
saying - CPU profile when you profile

271
00:12:41,600 --> 00:12:46,879
your program if you say<font color="#E5E5E5"> - from</font><font color="#CCCCCC"> M profile</font>

272
00:12:43,899 --> 00:12:48,199
<font color="#CCCCCC">you will</font><font color="#E5E5E5"> get and then you can ask for</font>

273
00:12:46,879 --> 00:12:50,600
<font color="#E5E5E5">things like the number of allocated</font>

274
00:12:48,199 --> 00:12:53,719
objects that the default you get is the

275
00:12:50,600 --> 00:12:55,490
object<font color="#E5E5E5"> in use right</font><font color="#CCCCCC"> now which is not</font><font color="#E5E5E5"> the</font>

276
00:12:53,720 --> 00:12:57,829
<font color="#E5E5E5">interesting number so you need to you</font>

277
00:12:55,490 --> 00:13:01,129
need<font color="#E5E5E5"> to use a flag like this</font><font color="#CCCCCC"> alyc</font>

278
00:12:57,829 --> 00:13:02,680
objects<font color="#E5E5E5"> and I like to do the cumulative</font>

279
00:13:01,129 --> 00:13:07,000
<font color="#E5E5E5">so that gives me</font><font color="#CCCCCC"> a sort of a top-down</font>

280
00:13:02,680 --> 00:13:12,109
<font color="#CCCCCC">view of who's been allocating the most</font>

281
00:13:07,000 --> 00:13:14,240
things<font color="#CCCCCC"> so I looked at this</font><font color="#E5E5E5"> and I see a</font>

282
00:13:12,110 --> 00:13:16,189
<font color="#E5E5E5">bunch of encoding and I</font><font color="#CCCCCC"> thought you know</font>

283
00:13:14,240 --> 00:13:19,160
it's not you can go look<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the PR if</font>

284
00:13:16,189 --> 00:13:20,810
<font color="#E5E5E5">you want to see the</font><font color="#CCCCCC"> actual code but</font><font color="#E5E5E5"> you</font>

285
00:13:19,160 --> 00:13:26,860
need to start if you want<font color="#E5E5E5"> to speed this</font>

286
00:13:20,810 --> 00:13:30,050
up you need<font color="#CCCCCC"> to stop creating garbage and</font>

287
00:13:26,860 --> 00:13:31,129
just<font color="#E5E5E5"> as in the</font><font color="#CCCCCC"> real world</font><font color="#E5E5E5"> reuse reduce</font>

288
00:13:30,050 --> 00:13:32,839
recycle

289
00:13:31,129 --> 00:13:35,120
I think recycle is basically<font color="#E5E5E5"> garbage</font>

290
00:13:32,839 --> 00:13:37,579
<font color="#E5E5E5">collection so so don't do</font><font color="#CCCCCC"> that one but</font>

291
00:13:35,120 --> 00:13:39,439
but reusing objects and just<font color="#E5E5E5"> reducing</font>

292
00:13:37,579 --> 00:13:41,769
the<font color="#E5E5E5"> number that get allocated is the way</font>

293
00:13:39,439 --> 00:13:41,769
to go

294
00:13:42,459 --> 00:13:51,969
so a<font color="#E5E5E5"> little bit more detailed profile</font>

295
00:13:48,339 --> 00:13:54,290
this one so this one<font color="#E5E5E5"> is</font><font color="#CCCCCC"> Alec space</font>

296
00:13:51,970 --> 00:13:57,110
<font color="#CCCCCC">there's a little bit of</font><font color="#E5E5E5"> an unusual one</font>

297
00:13:54,290 --> 00:13:59,029
<font color="#CCCCCC">because there was this massive this</font><font color="#E5E5E5"> is</font>

298
00:13:57,110 --> 00:14:00,980
actually<font color="#E5E5E5"> a there's a little micro</font>

299
00:13:59,029 --> 00:14:04,930
benchmark that<font color="#CCCCCC"> I did of one of the</font>

300
00:14:00,980 --> 00:14:07,970
functions in<font color="#CCCCCC"> the earlier profile but it</font>

301
00:14:04,930 --> 00:14:10,699
<font color="#CCCCCC">we were using this library called snappy</font>

302
00:14:07,970 --> 00:14:12,139
which is a compression library<font color="#CCCCCC"> it</font><font color="#E5E5E5"> turns</font>

303
00:14:10,699 --> 00:14:17,180
out if you if you call this new reader

304
00:14:12,139 --> 00:14:20,509
function<font color="#E5E5E5"> it allocates like</font><font color="#CCCCCC"> a TK just one</font>

305
00:14:17,180 --> 00:14:23,599
object a TK and think of that<font color="#E5E5E5"> sawtooth</font>

306
00:14:20,509 --> 00:14:27,559
is being driven<font color="#CCCCCC"> much that much faster by</font>

307
00:14:23,600 --> 00:14:31,189
that that allocation<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the timing</font>

308
00:14:27,559 --> 00:14:33,800
<font color="#CCCCCC">so I'm running I'm running like a real</font>

309
00:14:31,189 --> 00:14:36,649
call<font color="#CCCCCC"> and our is in our staging</font>

310
00:14:33,800 --> 00:14:40,670
environment<font color="#E5E5E5"> every every</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> minutes and</font>

311
00:14:36,649 --> 00:14:43,730
just timing<font color="#E5E5E5"> one particular call and and</font>

312
00:14:40,670 --> 00:14:46,670
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> effects of releasing that</font>

313
00:14:43,730 --> 00:14:50,600
one change tick<font color="#E5E5E5"> to using</font><font color="#CCCCCC"> async</font>

314
00:14:46,670 --> 00:14:52,370
<font color="#CCCCCC">cool which is a built-in to the go</font>

315
00:14:50,600 --> 00:14:55,760
<font color="#E5E5E5">standard library that's for reusing</font>

316
00:14:52,370 --> 00:15:00,500
objects that have a high cost of

317
00:14:55,760 --> 00:15:02,810
allocation<font color="#E5E5E5"> so putting that one change in</font>

318
00:15:00,500 --> 00:15:06,910
which is like like six<font color="#CCCCCC"> lines or</font>

319
00:15:02,810 --> 00:15:10,310
something<font color="#E5E5E5"> like that and take that down</font>

320
00:15:06,910 --> 00:15:13,579
<font color="#E5E5E5">no it's it's what from 90 seconds to</font>

321
00:15:10,310 --> 00:15:16,670
like seven<font color="#E5E5E5"> and a half something</font><font color="#CCCCCC"> like</font>

322
00:15:13,580 --> 00:15:20,990
<font color="#E5E5E5">it's like a</font><font color="#CCCCCC"> 20%</font><font color="#E5E5E5"> improvement one</font>

323
00:15:16,670 --> 00:15:25,099
allocation<font color="#CCCCCC"> I'm going quite fast because</font>

324
00:15:20,990 --> 00:15:26,960
because we're low on time this was one

325
00:15:25,100 --> 00:15:30,500
where this is one where this sort

326
00:15:26,960 --> 00:15:35,390
routine<font color="#E5E5E5"> did a comparison by calling this</font>

327
00:15:30,500 --> 00:15:37,310
function<font color="#E5E5E5"> which did in s printf the the</font>

328
00:15:35,390 --> 00:15:40,189
<font color="#E5E5E5">cumulative effect of this is to create a</font>

329
00:15:37,310 --> 00:15:44,089
lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> garbage and and the sort</font>

330
00:15:40,190 --> 00:15:45,920
comparison is called a lot so instead of

331
00:15:44,090 --> 00:15:47,090
instead of<font color="#E5E5E5"> kind of indirectly going</font>

332
00:15:45,920 --> 00:15:50,599
through strings I just wrote a

333
00:15:47,090 --> 00:15:54,020
comparison routine<font color="#CCCCCC"> again it's</font><font color="#E5E5E5"> like ten</font>

334
00:15:50,600 --> 00:16:01,450
lines or<font color="#E5E5E5"> something that one got me</font>

335
00:15:54,020 --> 00:16:01,449
<font color="#E5E5E5">another</font><font color="#CCCCCC"> 20% improvement</font><font color="#E5E5E5"> here so</font>

336
00:16:03,580 --> 00:16:10,880
and actually<font color="#E5E5E5"> I</font><font color="#CCCCCC"> should I should</font><font color="#E5E5E5"> stress so</font>

337
00:16:08,240 --> 00:16:13,430
this is<font color="#E5E5E5"> that there's a massive data</font>

338
00:16:10,880 --> 00:16:16,540
store<font color="#E5E5E5"> distributed data store this</font><font color="#CCCCCC"> time</font>

339
00:16:13,430 --> 00:16:19,279
<font color="#CCCCCC">includes the time to get</font><font color="#E5E5E5"> it off the</font><font color="#CCCCCC"> disk</font>

340
00:16:16,540 --> 00:16:21,770
<font color="#CCCCCC">in others it is fundamentally</font>

341
00:16:19,279 --> 00:16:26,320
bottlenecked on<font color="#CCCCCC"> i/o but I was</font><font color="#E5E5E5"> making</font><font color="#CCCCCC"> 20%</font>

342
00:16:21,770 --> 00:16:29,079
improvements in the whole call<font color="#CCCCCC"> by making</font>

343
00:16:26,320 --> 00:16:32,380
<font color="#E5E5E5">effectively tiny changes to the go code</font>

344
00:16:29,080 --> 00:16:36,290
so do really worried about<font color="#E5E5E5"> your garbage</font>

345
00:16:32,380 --> 00:16:39,350
<font color="#CCCCCC">ok stack versus heap</font><font color="#E5E5E5"> everyone knows this</font>

346
00:16:36,290 --> 00:16:43,910
right the who<font color="#E5E5E5"> who doesn't quite</font>

347
00:16:39,350 --> 00:16:46,190
understand stack and heap<font color="#CCCCCC"> in</font><font color="#E5E5E5"> go a couple</font>

348
00:16:43,910 --> 00:16:49,579
of people<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so first thing I should I</font>

349
00:16:46,190 --> 00:16:51,589
<font color="#CCCCCC">should disclaimer it's not it's not the</font>

350
00:16:49,580 --> 00:16:54,020
law<font color="#E5E5E5"> that there's like a stack and</font><font color="#CCCCCC"> a heap</font>

351
00:16:51,589 --> 00:16:56,720
<font color="#E5E5E5">it just happens to be that</font><font color="#CCCCCC"> way today</font><font color="#E5E5E5"> and</font>

352
00:16:54,020 --> 00:16:58,250
the implementation and they you know

353
00:16:56,720 --> 00:16:59,900
<font color="#CCCCCC">they could make</font><font color="#E5E5E5"> improvements some of the</font>

354
00:16:58,250 --> 00:17:04,309
things I'm saying<font color="#E5E5E5"> could become false in</font>

355
00:16:59,900 --> 00:17:06,369
the future but at<font color="#CCCCCC"> the moment</font><font color="#E5E5E5"> it's pretty</font>

356
00:17:04,309 --> 00:17:09,079
likely<font color="#E5E5E5"> if you do something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font>

357
00:17:06,369 --> 00:17:11,329
<font color="#CCCCCC">your variable will be</font><font color="#E5E5E5"> on the stack and</font>

358
00:17:09,079 --> 00:17:14,649
<font color="#CCCCCC">if you do</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this then your</font>

359
00:17:11,329 --> 00:17:18,559
slice will be on the heap<font color="#E5E5E5"> so what I mean</font>

360
00:17:14,650 --> 00:17:21,230
<font color="#CCCCCC">so there you</font><font color="#E5E5E5"> go stack</font><font color="#CCCCCC"> versus heap stacks</font>

361
00:17:18,559 --> 00:17:24,349
are very neat<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only thing you can do</font>

362
00:17:21,230 --> 00:17:26,059
is stick something on<font color="#E5E5E5"> the top so when</font>

363
00:17:24,349 --> 00:17:28,790
you're<font color="#E5E5E5"> finished</font><font color="#CCCCCC"> finished with it you</font>

364
00:17:26,059 --> 00:17:30,350
<font color="#CCCCCC">just effectively just</font><font color="#E5E5E5"> move the pointer</font>

365
00:17:28,790 --> 00:17:33,309
<font color="#E5E5E5">don't you just say well you</font><font color="#CCCCCC"> know I</font><font color="#E5E5E5"> don't</font>

366
00:17:30,350 --> 00:17:36,678
<font color="#E5E5E5">care about that stuff</font><font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> bang gone</font>

367
00:17:33,309 --> 00:17:38,540
heaps<font color="#CCCCCC"> you need to go carefully</font><font color="#E5E5E5"> through</font>

368
00:17:36,679 --> 00:17:39,920
the<font color="#E5E5E5"> whole heap trying to figure</font><font color="#CCCCCC"> out</font>

369
00:17:38,540 --> 00:17:42,678
which<font color="#CCCCCC"> things you're still</font><font color="#E5E5E5"> using in which</font>

370
00:17:39,920 --> 00:17:46,130
<font color="#CCCCCC">things you earned so the stack is</font>

371
00:17:42,679 --> 00:17:47,900
enormous<font color="#CCCCCC"> ly faster to work with than the</font>

372
00:17:46,130 --> 00:17:49,100
<font color="#E5E5E5">heap</font><font color="#CCCCCC"> so that's why you want</font><font color="#E5E5E5"> to you want</font>

373
00:17:47,900 --> 00:17:50,920
<font color="#E5E5E5">to watch out for</font><font color="#CCCCCC"> things that are on the</font>

374
00:17:49,100 --> 00:17:56,719
heap how<font color="#CCCCCC"> does</font><font color="#E5E5E5"> things get on the heap</font>

375
00:17:50,920 --> 00:17:58,429
they<font color="#CCCCCC"> escape ok quiz time again and I I</font>

376
00:17:56,720 --> 00:18:02,059
just<font color="#CCCCCC"> I sat there for half an hour making</font>

377
00:17:58,429 --> 00:18:04,370
<font color="#E5E5E5">all the fonts bigger because I saw in in</font>

378
00:18:02,059 --> 00:18:09,050
earlier talks that it was quite hard<font color="#CCCCCC"> to</font>

379
00:18:04,370 --> 00:18:11,419
read so<font color="#E5E5E5"> yeah which well we won't let it</font>

380
00:18:09,050 --> 00:18:12,770
<font color="#CCCCCC">wait for you to maybe</font><font color="#E5E5E5"> compile it or</font>

381
00:18:11,420 --> 00:18:16,550
whatever<font color="#CCCCCC"> so how would</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> find out</font>

382
00:18:12,770 --> 00:18:19,790
what's going on<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> a</font>

383
00:18:16,550 --> 00:18:22,639
benchmark if you run go - test -<font color="#CCCCCC"> bench</font>

384
00:18:19,790 --> 00:18:26,149
then goal<font color="#CCCCCC"> we'll we'll run</font><font color="#E5E5E5"> your program</font>

385
00:18:22,640 --> 00:18:28,250
enough times that<font color="#E5E5E5"> it takes a second so</font>

386
00:18:26,150 --> 00:18:31,550
<font color="#E5E5E5">it ran my micro benchmark like</font><font color="#CCCCCC"> 30</font>

387
00:18:28,250 --> 00:18:34,550
million times<font color="#CCCCCC"> and it said every time run</font>

388
00:18:31,550 --> 00:18:42,290
that loop it's doing an allocation<font color="#CCCCCC"> so</font>

389
00:18:34,550 --> 00:18:44,629
why is that<font color="#CCCCCC"> next thing</font><font color="#E5E5E5"> -</font><font color="#CCCCCC"> mem profile so</font>

390
00:18:42,290 --> 00:18:48,740
we can see how many allocations<font color="#E5E5E5"> and then</font>

391
00:18:44,630 --> 00:18:52,010
you can you can<font color="#CCCCCC"> do this</font><font color="#E5E5E5"> - list so - list</font>

392
00:18:48,740 --> 00:18:54,320
says show me<font color="#E5E5E5"> the actual lines</font><font color="#CCCCCC"> and put a</font>

393
00:18:52,010 --> 00:18:56,629
count beside them

394
00:18:54,320 --> 00:18:59,510
so I said this<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> number of objects</font>

395
00:18:56,630 --> 00:19:03,440
allocated so it's on this line<font color="#E5E5E5"> that</font>

396
00:18:59,510 --> 00:19:04,730
we're allocating an object and kind<font color="#E5E5E5"> of</font>

397
00:19:03,440 --> 00:19:06,590
<font color="#E5E5E5">doesn't look like we're allocating an</font>

398
00:19:04,730 --> 00:19:10,240
object<font color="#E5E5E5"> because you know it's a constant</font>

399
00:19:06,590 --> 00:19:12,970
string and there's no pointers here so

400
00:19:10,240 --> 00:19:17,810
you know I didn't<font color="#E5E5E5"> call make you know why</font>

401
00:19:12,970 --> 00:19:21,110
why is this<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the heap so the next</font>

402
00:19:17,810 --> 00:19:23,179
stage in<font color="#CCCCCC"> this analysis is</font><font color="#E5E5E5"> to tell the</font>

403
00:19:21,110 --> 00:19:29,360
compiler to<font color="#E5E5E5"> print out the escape</font>

404
00:19:23,180 --> 00:19:31,010
analysis<font color="#E5E5E5"> so - GC</font><font color="#CCCCCC"> Flags GC GC</font><font color="#E5E5E5"> does not</font>

405
00:19:29,360 --> 00:19:36,379
mean garbage collection in<font color="#E5E5E5"> this context</font>

406
00:19:31,010 --> 00:19:39,770
it<font color="#E5E5E5"> means go compiler</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> M says tell</font><font color="#CCCCCC"> me</font>

407
00:19:36,380 --> 00:19:41,000
about escape analysis - M<font color="#CCCCCC"> - M says no</font>

408
00:19:39,770 --> 00:19:44,620
really tell<font color="#E5E5E5"> me about this</font><font color="#CCCCCC"> kit you</font>

409
00:19:41,000 --> 00:19:51,170
because there you can<font color="#CCCCCC"> add</font><font color="#E5E5E5"> it's kind of</font>

410
00:19:44,620 --> 00:19:54,199
<font color="#E5E5E5">it's verbose I I filtered down this one</font>

411
00:19:51,170 --> 00:19:57,080
command for that 110 line benchmark

412
00:19:54,200 --> 00:19:59,210
program prints out<font color="#E5E5E5"> like a hundred</font><font color="#CCCCCC"> lines</font>

413
00:19:57,080 --> 00:20:01,550
<font color="#E5E5E5">so I filtered them down but they're all</font>

414
00:19:59,210 --> 00:20:05,150
they're<font color="#CCCCCC"> all marked</font><font color="#E5E5E5"> with which</font><font color="#CCCCCC"> light I</font>

415
00:20:01,550 --> 00:20:06,800
<font color="#E5E5E5">don't want that they they're</font><font color="#CCCCCC"> all marked</font>

416
00:20:05,150 --> 00:20:10,760
with<font color="#E5E5E5"> which line in your program they</font>

417
00:20:06,800 --> 00:20:13,639
came from<font color="#CCCCCC"> so this this is the answer</font>

418
00:20:10,760 --> 00:20:17,810
here<font color="#E5E5E5"> it is a parameter</font><font color="#CCCCCC"> - an indirect</font>

419
00:20:13,640 --> 00:20:21,010
call<font color="#CCCCCC"> that's why it escaped and the so</font>

420
00:20:17,810 --> 00:20:23,179
buff is a IO dot writer in my benchmark

421
00:20:21,010 --> 00:20:25,100
which I've sort of scrolled off the<font color="#E5E5E5"> top</font>

422
00:20:23,180 --> 00:20:29,060
of<font color="#CCCCCC"> the screen</font><font color="#E5E5E5"> but if go back to the</font>

423
00:20:25,100 --> 00:20:31,129
example that's an interface that<font color="#CCCCCC"> makes</font>

424
00:20:29,060 --> 00:20:33,860
an indirect call

425
00:20:31,130 --> 00:20:36,230
if I'd<font color="#E5E5E5"> actually said buff is a bike bite</font>

426
00:20:33,860 --> 00:20:38,029
stop buffer<font color="#E5E5E5"> it's not an interface as a</font>

427
00:20:36,230 --> 00:20:40,220
<font color="#E5E5E5">concrete type and actually</font><font color="#CCCCCC"> that</font>

428
00:20:38,029 --> 00:20:45,759
parameter<font color="#E5E5E5"> will not escape</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> that case</font>

429
00:20:40,220 --> 00:20:48,230
and the program<font color="#E5E5E5"> goes a lot faster so</font>

430
00:20:45,759 --> 00:20:51,350
take<font color="#E5E5E5"> that as read this this yeah escape</font>

431
00:20:48,230 --> 00:20:54,139
I'll skip analysis is my point<font color="#CCCCCC"> if you if</font>

432
00:20:51,350 --> 00:20:57,139
you can't spot from<font color="#E5E5E5"> the high level stats</font>

433
00:20:54,139 --> 00:21:02,120
why your program is creating garbage<font color="#CCCCCC"> GC</font>

434
00:20:57,139 --> 00:21:07,479
<font color="#CCCCCC">flags</font><font color="#E5E5E5"> - M -</font><font color="#CCCCCC"> M</font><font color="#E5E5E5"> and it will tell you why</font>

435
00:21:02,120 --> 00:21:09,590
the data is going<font color="#CCCCCC"> to the heap generally</font>

436
00:21:07,480 --> 00:21:11,090
address passed out of a function I mean

437
00:21:09,590 --> 00:21:12,740
<font color="#E5E5E5">that's the sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> favorite example you</font>

438
00:21:11,090 --> 00:21:14,360
can't do<font color="#E5E5E5"> this and see but you can do it</font>

439
00:21:12,740 --> 00:21:16,279
and go<font color="#E5E5E5"> you can just return a pointer to</font>

440
00:21:14,360 --> 00:21:19,610
<font color="#CCCCCC">a local</font><font color="#E5E5E5"> variable it will escape</font><font color="#CCCCCC"> to the</font>

441
00:21:16,279 --> 00:21:20,870
heap<font color="#CCCCCC"> parameters of indirect calls that's</font>

442
00:21:19,610 --> 00:21:22,399
what I<font color="#E5E5E5"> just talked about and that's</font>

443
00:21:20,870 --> 00:21:24,258
<font color="#E5E5E5">that's the things in the brackets and</font>

444
00:21:22,399 --> 00:21:30,500
<font color="#E5E5E5">the thing before the dot that's also a</font>

445
00:21:24,259 --> 00:21:33,470
parameter<font color="#CCCCCC"> my time is</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> you go</font>

446
00:21:30,500 --> 00:21:36,400
and look at memory<font color="#E5E5E5"> allocation</font><font color="#CCCCCC"> it's</font>

447
00:21:33,470 --> 00:21:45,310
<font color="#E5E5E5">always memory allocation thank you</font>

448
00:21:36,400 --> 00:21:45,310
[Applause]

