1
00:00:07,700 --> 00:00:13,080
right yeah I'm<font color="#E5E5E5"> Johan hi everyone I'm</font>

2
00:00:10,530 --> 00:00:15,570
really excited to be here<font color="#CCCCCC"> I'm a</font><font color="#E5E5E5"> Swedish</font>

3
00:00:13,080 --> 00:00:17,640
guy I live in<font color="#CCCCCC"> England I worked for a</font>

4
00:00:15,570 --> 00:00:19,830
data a collaboration startup called<font color="#E5E5E5"> in</font>

5
00:00:17,640 --> 00:00:23,130
<font color="#CCCCCC">folsom I'll be using go for about</font><font color="#E5E5E5"> 2</font>

6
00:00:19,830 --> 00:00:25,560
years<font color="#E5E5E5"> and I really like language</font><font color="#CCCCCC"> in my</font>

7
00:00:23,130 --> 00:00:27,270
spare time I enjoy working on open

8
00:00:25,560 --> 00:00:29,669
source<font color="#E5E5E5"> projects and I've contributed to</font>

9
00:00:27,270 --> 00:00:31,980
the go<font color="#E5E5E5"> programming language</font><font color="#CCCCCC"> I run my own</font>

10
00:00:29,670 --> 00:00:34,980
blog<font color="#CCCCCC"> writing mostly</font><font color="#E5E5E5"> about go and gr PC</font>

11
00:00:31,980 --> 00:00:36,450
<font color="#E5E5E5">and today I'm here to talk</font><font color="#CCCCCC"> about my open</font>

12
00:00:34,980 --> 00:00:38,788
<font color="#E5E5E5">source project and creating go for</font>

13
00:00:36,450 --> 00:00:40,920
<font color="#CCCCCC">Jessup's with the gr pc web</font><font color="#E5E5E5"> so let's</font>

14
00:00:38,789 --> 00:00:43,829
take a quick<font color="#E5E5E5"> overview first today we're</font>

15
00:00:40,920 --> 00:00:46,110
going to learn<font color="#CCCCCC"> about</font><font color="#E5E5E5"> pull of</font><font color="#CCCCCC"> f gr</font><font color="#E5E5E5"> pc</font><font color="#CCCCCC"> g r</font>

16
00:00:43,829 --> 00:00:49,170
<font color="#E5E5E5">pc web and go for</font><font color="#CCCCCC"> Jas we're going to</font>

17
00:00:46,110 --> 00:00:51,090
introduce<font color="#CCCCCC"> Geo PC web for go we're</font><font color="#E5E5E5"> going</font>

18
00:00:49,170 --> 00:00:54,020
<font color="#E5E5E5">to create a simple app with GFC web for</font>

19
00:00:51,090 --> 00:00:57,210
go so let's let's<font color="#CCCCCC"> start with protobuf</font>

20
00:00:54,020 --> 00:00:58,829
who's heard of protobuf before<font color="#E5E5E5"> yeah</font>

21
00:00:57,210 --> 00:01:02,059
that's most of<font color="#E5E5E5"> the room as expected</font><font color="#CCCCCC"> and</font>

22
00:00:58,829 --> 00:01:04,979
it was<font color="#CCCCCC"> using it</font><font color="#E5E5E5"> in production</font>

23
00:01:02,059 --> 00:01:05,939
<font color="#CCCCCC">ok yeah cool so this is</font><font color="#E5E5E5"> it's not gonna</font>

24
00:01:04,979 --> 00:01:08,340
be a lot of news for<font color="#E5E5E5"> you</font>

25
00:01:05,939 --> 00:01:11,460
it's a<font color="#CCCCCC"> Google's interface description</font>

26
00:01:08,340 --> 00:01:13,620
language<font color="#E5E5E5"> a binary serialization format</font>

27
00:01:11,460 --> 00:01:16,860
<font color="#E5E5E5">built for backwards compatibility and</font>

28
00:01:13,620 --> 00:01:18,540
leverages cogeneration<font color="#E5E5E5"> it is used for</font>

29
00:01:16,860 --> 00:01:21,780
<font color="#E5E5E5">service</font><font color="#CCCCCC"> or service</font><font color="#E5E5E5"> communication as well</font>

30
00:01:18,540 --> 00:01:24,090
<font color="#E5E5E5">as data storage it's made deciding to be</font>

31
00:01:21,780 --> 00:01:25,820
fast faster<font color="#CCCCCC"> than XML</font><font color="#E5E5E5"> up to a hundred</font>

32
00:01:24,090 --> 00:01:28,470
<font color="#E5E5E5">times according</font><font color="#CCCCCC"> to the Google</font>

33
00:01:25,820 --> 00:01:30,419
documentation however relevant<font color="#E5E5E5"> that</font>

34
00:01:28,470 --> 00:01:33,510
comparison is and as faster than<font color="#CCCCCC"> Jason</font>

35
00:01:30,420 --> 00:01:35,340
as well of course<font color="#E5E5E5"> it's got wide official</font>

36
00:01:33,510 --> 00:01:38,220
language support including go C++ Java

37
00:01:35,340 --> 00:01:39,810
Python<font color="#E5E5E5"> and other official</font>

38
00:01:38,220 --> 00:01:42,658
implementations as well as third-party

39
00:01:39,810 --> 00:01:44,220
<font color="#E5E5E5">libraries and as far</font><font color="#CCCCCC"> as I can tell this</font>

40
00:01:42,659 --> 00:01:45,900
is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> highest resolution image that</font>

41
00:01:44,220 --> 00:01:47,030
exists for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> photograph public</font><font color="#E5E5E5"> that's</font>

42
00:01:45,900 --> 00:01:50,900
terrible

43
00:01:47,030 --> 00:01:55,470
so so what<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> purpose if</font><font color="#E5E5E5"> I look like</font>

44
00:01:50,900 --> 00:01:57,330
I've chosen a<font color="#CCCCCC"> simple file here using</font>

45
00:01:55,470 --> 00:01:58,439
<font color="#CCCCCC">poetry</font><font color="#E5E5E5"> syntax which is a modern way of</font>

46
00:01:57,330 --> 00:02:00,689
creating<font color="#E5E5E5"> photo files</font>

47
00:01:58,439 --> 00:02:01,949
<font color="#E5E5E5">I've also used</font><font color="#CCCCCC"> a go package option which</font>

48
00:02:00,689 --> 00:02:03,449
<font color="#CCCCCC">is specifically go but you should</font>

49
00:02:01,950 --> 00:02:05,909
definitely using if<font color="#E5E5E5"> you're using proto</font>

50
00:02:03,450 --> 00:02:07,619
buffers go it makes all<font color="#CCCCCC"> your imports</font>

51
00:02:05,909 --> 00:02:09,060
much easier to handle<font color="#E5E5E5"> we've got a</font>

52
00:02:07,619 --> 00:02:10,590
package declaration here as well which

53
00:02:09,060 --> 00:02:12,060
<font color="#E5E5E5">is used for</font><font color="#CCCCCC"> namespacing packages and</font>

54
00:02:10,590 --> 00:02:14,280
we've got a really<font color="#E5E5E5"> simple message</font>

55
00:02:12,060 --> 00:02:16,470
<font color="#E5E5E5">declaration and we've got a couple of</font>

56
00:02:14,280 --> 00:02:18,120
<font color="#E5E5E5">different types here and some field</font>

57
00:02:16,470 --> 00:02:20,319
numbers which is used for<font color="#CCCCCC"> marshalling</font>

58
00:02:18,120 --> 00:02:21,610
and marshalling and helps with

59
00:02:20,319 --> 00:02:24,879
backwards-compatibility guarantees<font color="#E5E5E5"> that</font>

60
00:02:21,610 --> 00:02:26,109
<font color="#E5E5E5">it gives you a product</font><font color="#CCCCCC"> plus</font><font color="#E5E5E5"> also support</font>

61
00:02:24,879 --> 00:02:29,018
<font color="#E5E5E5">more advanced features such</font><font color="#CCCCCC"> as</font>

62
00:02:26,109 --> 00:02:31,359
enumerations<font color="#CCCCCC"> arrays maps</font><font color="#E5E5E5"> and nested</font>

63
00:02:29,019 --> 00:02:32,500
messages and one of types<font color="#E5E5E5"> and services</font>

64
00:02:31,359 --> 00:02:33,189
which<font color="#CCCCCC"> we're going to come back to in a</font>

65
00:02:32,500 --> 00:02:37,030
moment

66
00:02:33,189 --> 00:02:39,519
so<font color="#CCCCCC"> was</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> generator code looks like so</font>

67
00:02:37,030 --> 00:02:42,609
from that<font color="#E5E5E5"> simple type description that</font>

68
00:02:39,519 --> 00:02:45,760
we had in the profile we get a go type

69
00:02:42,609 --> 00:02:48,730
the types map very simply in the girl

70
00:02:45,760 --> 00:02:50,138
case we get some struck tags for JSON

71
00:02:48,730 --> 00:02:54,328
and protobuf<font color="#CCCCCC"> and marshaling</font><font color="#E5E5E5"> and we also</font>

72
00:02:50,139 --> 00:02:58,569
get<font color="#CCCCCC"> some Gators the default go protobuf</font>

73
00:02:54,329 --> 00:03:00,220
generator uses reflection<font color="#CCCCCC"> for marshaling</font>

74
00:02:58,569 --> 00:03:03,069
and unmarshal<font color="#CCCCCC"> II but there's a</font>

75
00:03:00,220 --> 00:03:06,069
<font color="#CCCCCC">third-party</font><font color="#E5E5E5"> implementation called</font><font color="#CCCCCC"> Go Go</font>

76
00:03:03,069 --> 00:03:10,298
proto<font color="#E5E5E5"> which uses</font><font color="#CCCCCC"> type-specific</font>

77
00:03:06,069 --> 00:03:11,679
<font color="#CCCCCC">marshalling thanks Walter which you</font>

78
00:03:10,299 --> 00:03:15,040
should<font color="#E5E5E5"> use if</font><font color="#CCCCCC"> you're using</font><font color="#E5E5E5"> go case it's</font>

79
00:03:11,680 --> 00:03:18,430
faster so how do we<font color="#E5E5E5"> use</font><font color="#CCCCCC"> protobuf for</font>

80
00:03:15,040 --> 00:03:19,959
service to service<font color="#E5E5E5"> communications</font><font color="#CCCCCC"> g RPC</font>

81
00:03:18,430 --> 00:03:21,159
<font color="#E5E5E5">so obviously we'd already been</font>

82
00:03:19,959 --> 00:03:25,359
introduced<font color="#E5E5E5"> to</font><font color="#CCCCCC"> GRC a little bit here</font>

83
00:03:21,159 --> 00:03:28,510
<font color="#CCCCCC">today</font><font color="#E5E5E5"> but who's using</font><font color="#CCCCCC"> gr</font><font color="#E5E5E5"> PC at work yeah</font>

84
00:03:25,359 --> 00:03:30,209
that's quite<font color="#E5E5E5"> a few actually yeah so it's</font>

85
00:03:28,510 --> 00:03:34,409
a remote<font color="#E5E5E5"> procedure call protocol</font>

86
00:03:30,209 --> 00:03:36,609
developed by Google built<font color="#CCCCCC"> on HTTP 2</font><font color="#E5E5E5"> it's</font>

87
00:03:34,409 --> 00:03:40,120
donated to the cloud native computing

88
00:03:36,609 --> 00:03:41,440
<font color="#E5E5E5">foundation</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> serialization agnostic</font>

89
00:03:40,120 --> 00:03:43,239
but<font color="#E5E5E5"> you normally use it with protobuf</font>

90
00:03:41,440 --> 00:03:46,680
although it does also have<font color="#CCCCCC"> supports</font>

91
00:03:43,239 --> 00:03:50,229
official support for flatbuffers now and

92
00:03:46,680 --> 00:03:51,819
and like protobuf you generate code from

93
00:03:50,229 --> 00:03:53,290
the<font color="#E5E5E5"> protobuf sessions or the flat bar</font>

94
00:03:51,819 --> 00:03:55,119
for definitions if you use a preference

95
00:03:53,290 --> 00:03:57,340
of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> and it comes with powerful</font>

96
00:03:55,120 --> 00:03:58,810
streaming capabilities such as<font color="#E5E5E5"> service</font><font color="#CCCCCC"> i</font>

97
00:03:57,340 --> 00:04:01,359
streaming client-side streaming and

98
00:03:58,810 --> 00:04:02,379
bi-directional streaming which is really

99
00:04:01,359 --> 00:04:04,120
useful<font color="#CCCCCC"> for services service</font>

100
00:04:02,379 --> 00:04:05,978
communications<font color="#E5E5E5"> of course and it's the</font>

101
00:04:04,120 --> 00:04:09,699
<font color="#CCCCCC">backbone of Google's internal</font>

102
00:04:05,979 --> 00:04:13,329
communications<font color="#E5E5E5"> network so what can we do</font>

103
00:04:09,699 --> 00:04:15,459
with G RPC so this is a page an image

104
00:04:13,329 --> 00:04:17,620
from the<font color="#E5E5E5"> official</font><font color="#CCCCCC"> GRDC documentation and</font>

105
00:04:15,459 --> 00:04:19,209
essentially the<font color="#E5E5E5"> idea is</font><font color="#CCCCCC"> that it allows</font>

106
00:04:17,620 --> 00:04:21,190
you to write polyglot<font color="#E5E5E5"> micro service</font>

107
00:04:19,209 --> 00:04:24,190
architectures such as<font color="#E5E5E5"> Google's</font>

108
00:04:21,190 --> 00:04:26,500
presumably we've got a<font color="#CCCCCC"> C++ server</font>

109
00:04:24,190 --> 00:04:28,930
android client and another<font color="#CCCCCC"> Ruby client</font>

110
00:04:26,500 --> 00:04:30,820
and they just interact<font color="#E5E5E5"> over the protobuf</font>

111
00:04:28,930 --> 00:04:32,770
interface

112
00:04:30,820 --> 00:04:34,930
and the<font color="#CCCCCC"> hitch should be to that er PC</font>

113
00:04:32,770 --> 00:04:36,880
<font color="#E5E5E5">provides but you could easily replace</font>

114
00:04:34,930 --> 00:04:38,140
<font color="#CCCCCC">the C++ service here with</font><font color="#E5E5E5"> a go service</font>

115
00:04:36,880 --> 00:04:40,030
and<font color="#E5E5E5"> this rubric lines with a Python</font>

116
00:04:38,140 --> 00:04:42,820
<font color="#CCCCCC">client and so on that's</font><font color="#E5E5E5"> what it gives</font>

117
00:04:40,030 --> 00:04:45,309
you so what does it<font color="#CCCCCC"> look like in the</font>

118
00:04:42,820 --> 00:04:46,540
profiles<font color="#CCCCCC"> so we've taken the the</font><font color="#E5E5E5"> proto</font>

119
00:04:45,310 --> 00:04:48,430
file that we had before we've just added

120
00:04:46,540 --> 00:04:51,430
another<font color="#E5E5E5"> type here</font><font color="#CCCCCC"> and with other service</font>

121
00:04:48,430 --> 00:04:53,500
at the bottom<font color="#E5E5E5"> with a method a simple</font>

122
00:04:51,430 --> 00:04:57,690
unary method that takes a category

123
00:04:53,500 --> 00:05:01,120
request and returns a cat toy and this

124
00:04:57,690 --> 00:05:03,610
then produces this is a snippet<font color="#E5E5E5"> of the</font>

125
00:05:01,120 --> 00:05:06,340
generated<font color="#CCCCCC"> code that it</font><font color="#E5E5E5"> produces you get</font>

126
00:05:03,610 --> 00:05:09,010
a for this<font color="#CCCCCC"> client you get a client-side</font>

127
00:05:06,340 --> 00:05:11,619
<font color="#E5E5E5">interface that you can work</font><font color="#CCCCCC"> with and</font><font color="#E5E5E5"> on</font>

128
00:05:09,010 --> 00:05:14,760
the server side<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to implement</font>

129
00:05:11,620 --> 00:05:17,830
this interface<font color="#E5E5E5"> in order to support the</font>

130
00:05:14,760 --> 00:05:19,120
interface<font color="#E5E5E5"> so it's very simple all over</font>

131
00:05:17,830 --> 00:05:21,430
you<font color="#E5E5E5"> just define</font><font color="#CCCCCC"> it in the in the</font>

132
00:05:19,120 --> 00:05:22,930
profiles and<font color="#E5E5E5"> then you can in the client</font>

133
00:05:21,430 --> 00:05:24,700
<font color="#CCCCCC">side just just call the function</font>

134
00:05:22,930 --> 00:05:26,440
essentially<font color="#E5E5E5"> and in the server side you</font>

135
00:05:24,700 --> 00:05:30,180
<font color="#CCCCCC">just implement the interface</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> nice</font>

136
00:05:26,440 --> 00:05:33,100
so<font color="#E5E5E5"> but can we use this in the browser</font>

137
00:05:30,180 --> 00:05:37,600
<font color="#E5E5E5">yes with GOP C Webb who is heard of</font><font color="#CCCCCC"> G</font>

138
00:05:33,100 --> 00:05:39,070
<font color="#CCCCCC">RPC web that's actually more</font><font color="#E5E5E5"> than I</font>

139
00:05:37,600 --> 00:05:41,770
expected<font color="#CCCCCC"> I gotta say it's a it's a very</font>

140
00:05:39,070 --> 00:05:43,780
<font color="#E5E5E5">new project well it's been in</font>

141
00:05:41,770 --> 00:05:47,070
development for<font color="#CCCCCC"> about a year as far as I</font>

142
00:05:43,780 --> 00:05:49,960
know<font color="#E5E5E5"> and but no two years</font><font color="#CCCCCC"> probably and</font>

143
00:05:47,070 --> 00:05:52,180
it<font color="#E5E5E5"> only has an official spec out yet</font>

144
00:05:49,960 --> 00:05:53,799
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> also an official client but it's</font>

145
00:05:52,180 --> 00:05:56,410
an alpha stage<font color="#E5E5E5"> and it's still being</font>

146
00:05:53,800 --> 00:05:57,970
<font color="#E5E5E5">developed</font><font color="#CCCCCC"> in a private repository so you</font>

147
00:05:56,410 --> 00:05:59,440
can't really get your hands<font color="#CCCCCC"> on it</font><font color="#E5E5E5"> but</font>

148
00:05:57,970 --> 00:06:01,750
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> an issue on github where you can</font>

149
00:05:59,440 --> 00:06:03,180
ask for access<font color="#CCCCCC"> and you can use</font><font color="#E5E5E5"> it but</font>

150
00:06:01,750 --> 00:06:08,590
it's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> really ready for</font><font color="#CCCCCC"> production use</font>

151
00:06:03,180 --> 00:06:12,400
<font color="#CCCCCC">it's a</font><font color="#E5E5E5"> uses protobuf for its</font>

152
00:06:08,590 --> 00:06:14,650
communications and it supports service<font color="#CCCCCC"> I</font>

153
00:06:12,400 --> 00:06:17,940
streaming only<font color="#E5E5E5"> no client-side or</font>

154
00:06:14,650 --> 00:06:20,020
bi-directional streaming<font color="#E5E5E5"> as the browser</font>

155
00:06:17,940 --> 00:06:21,219
<font color="#E5E5E5">standard that's supposed to standardize</font>

156
00:06:20,020 --> 00:06:22,900
<font color="#E5E5E5">status this is called the streams API</font>

157
00:06:21,220 --> 00:06:25,590
has not been finalized yet and there's

158
00:06:22,900 --> 00:06:28,719
<font color="#E5E5E5">no browser that implements it yet anyway</font>

159
00:06:25,590 --> 00:06:30,789
so only<font color="#E5E5E5"> server-side streaming in</font><font color="#CCCCCC"> geo</font>

160
00:06:28,720 --> 00:06:32,710
<font color="#CCCCCC">busy web</font><font color="#E5E5E5"> unfortunately but the idea is</font>

161
00:06:30,790 --> 00:06:35,560
<font color="#CCCCCC">that the browser becomes just another</font><font color="#E5E5E5"> gr</font>

162
00:06:32,710 --> 00:06:39,039
PC<font color="#E5E5E5"> client and as I mentioned</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> the</font>

163
00:06:35,560 --> 00:06:40,780
official<font color="#E5E5E5"> implementation is is not really</font>

164
00:06:39,040 --> 00:06:42,720
ready<font color="#CCCCCC"> for production</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> however</font><font color="#E5E5E5"> there</font>

165
00:06:40,780 --> 00:06:45,239
<font color="#E5E5E5">is another implementation</font>

166
00:06:42,720 --> 00:06:47,100
written by a<font color="#E5E5E5"> British company</font><font color="#CCCCCC"> called</font>

167
00:06:45,240 --> 00:06:49,760
improbable<font color="#E5E5E5"> which is written in</font>

168
00:06:47,100 --> 00:06:52,080
<font color="#E5E5E5">typescript</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> uses HTTP</font><font color="#CCCCCC"> - and</font>

169
00:06:49,760 --> 00:06:54,659
transparently grinded<font color="#E5E5E5"> down great student</font>

170
00:06:52,080 --> 00:06:57,030
HTTP<font color="#E5E5E5"> one it also uses the fetch API and</font>

171
00:06:54,660 --> 00:06:59,670
transparently<font color="#CCCCCC"> clampdown grades to xhr</font>

172
00:06:57,030 --> 00:07:02,130
<font color="#E5E5E5">for browser support it also comes with a</font>

173
00:06:59,670 --> 00:07:04,670
go proxy package and the<font color="#CCCCCC"> binary</font>

174
00:07:02,130 --> 00:07:09,120
depending on what you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use it</font><font color="#CCCCCC"> for</font>

175
00:07:04,670 --> 00:07:11,420
so this here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the browser stack this</font>

176
00:07:09,120 --> 00:07:14,610
here is an example<font color="#E5E5E5"> of the if you're</font>

177
00:07:11,420 --> 00:07:16,500
exposing a<font color="#CCCCCC"> goji OPC server</font><font color="#E5E5E5"> you just</font>

178
00:07:14,610 --> 00:07:18,210
import<font color="#E5E5E5"> the GFC web package and you just</font>

179
00:07:16,500 --> 00:07:20,400
wrap your<font color="#E5E5E5"> GFC so it's very simple</font>

180
00:07:18,210 --> 00:07:22,530
if you<font color="#E5E5E5"> have any other</font><font color="#CCCCCC"> VIP see</font><font color="#E5E5E5"> server you</font>

181
00:07:20,400 --> 00:07:24,630
just front it with the go<font color="#CCCCCC"> stand-alone</font>

182
00:07:22,530 --> 00:07:27,570
<font color="#E5E5E5">proxy binary it's also very simple</font><font color="#CCCCCC"> the</font>

183
00:07:24,630 --> 00:07:30,600
proxy is necessary and mandated by<font color="#CCCCCC"> the</font>

184
00:07:27,570 --> 00:07:34,349
spec because the<font color="#E5E5E5"> browser cannot speak</font>

185
00:07:30,600 --> 00:07:37,320
the official<font color="#CCCCCC"> GBC protocol but it's</font><font color="#E5E5E5"> very</font>

186
00:07:34,350 --> 00:07:38,970
simple still just use it and it's used

187
00:07:37,320 --> 00:07:40,409
in<font color="#E5E5E5"> production acting probable and I'm</font>

188
00:07:38,970 --> 00:07:41,700
not sure if anyone<font color="#E5E5E5"> else is</font><font color="#CCCCCC"> using it</font><font color="#E5E5E5"> in</font>

189
00:07:40,410 --> 00:07:45,120
production that<font color="#CCCCCC"> would</font><font color="#E5E5E5"> be interested in</font>

190
00:07:41,700 --> 00:07:46,560
<font color="#E5E5E5">hearing afterwards so what can we run go</font>

191
00:07:45,120 --> 00:07:49,340
in the browser<font color="#CCCCCC"> yes we can with</font><font color="#E5E5E5"> go for</font>

192
00:07:46,560 --> 00:07:52,920
yes who's heard of coverage as before

193
00:07:49,340 --> 00:07:56,070
<font color="#E5E5E5">only half the room</font><font color="#CCCCCC"> okay well you weren't</font>

194
00:07:52,920 --> 00:07:57,380
for a ride<font color="#CCCCCC"> go for jazz is a go to</font>

195
00:07:56,070 --> 00:08:00,210
<font color="#E5E5E5">JavaScript transpiler</font>

196
00:07:57,380 --> 00:08:02,670
<font color="#E5E5E5">written by Richard Musial it's been out</font>

197
00:08:00,210 --> 00:08:04,349
for<font color="#CCCCCC"> about four years</font><font color="#E5E5E5"> so so I think and</font>

198
00:08:02,670 --> 00:08:06,000
it supports<font color="#E5E5E5"> nearly everything in the</font>

199
00:08:04,350 --> 00:08:10,860
standard library including go routines

200
00:08:06,000 --> 00:08:12,660
it's used in production by certain<font color="#CCCCCC"> open</font>

201
00:08:10,860 --> 00:08:14,910
<font color="#E5E5E5">source projects such as</font><font color="#CCCCCC"> / keep which</font>

202
00:08:12,660 --> 00:08:18,090
used to be called<font color="#CCCCCC"> calmly store</font><font color="#E5E5E5"> one</font>

203
00:08:14,910 --> 00:08:21,690
<font color="#E5E5E5">password X</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> in Chapter both private</font>

204
00:08:18,090 --> 00:08:23,909
companies<font color="#CCCCCC"> and</font><font color="#E5E5E5"> there are also community</font>

205
00:08:21,690 --> 00:08:26,880
<font color="#E5E5E5">bindings for popular JavaScript</font>

206
00:08:23,910 --> 00:08:29,820
<font color="#E5E5E5">frameworks such as react view the dome</font>

207
00:08:26,880 --> 00:08:31,610
and<font color="#E5E5E5"> WebSockets so what do we get if we</font>

208
00:08:29,820 --> 00:08:36,349
put all of this together<font color="#E5E5E5"> right</font>

209
00:08:31,610 --> 00:08:39,000
<font color="#E5E5E5">gypsy web forego my</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> source library</font>

210
00:08:36,349 --> 00:08:41,520
so it's combines<font color="#E5E5E5"> gopher</font><font color="#CCCCCC"> guess with gif</font>

211
00:08:39,000 --> 00:08:45,570
<font color="#E5E5E5">PC web using the improbable</font><font color="#CCCCCC"> gr PC web</font>

212
00:08:41,520 --> 00:08:47,730
client<font color="#E5E5E5"> and it has a protic</font><font color="#CCCCCC"> plugin that</font>

213
00:08:45,570 --> 00:08:50,700
<font color="#E5E5E5">generates go for</font><font color="#CCCCCC"> Jas</font><font color="#E5E5E5"> code with no</font>

214
00:08:47,730 --> 00:08:53,250
JavaScript dependencies<font color="#CCCCCC"> it's designed</font><font color="#E5E5E5"> to</font>

215
00:08:50,700 --> 00:08:55,529
look like go to your<font color="#E5E5E5"> PC clients and it</font>

216
00:08:53,250 --> 00:08:57,689
has full streaming<font color="#E5E5E5"> support</font>

217
00:08:55,529 --> 00:08:59,670
<font color="#CCCCCC">that speck only mandates that</font><font color="#E5E5E5"> you should</font>

218
00:08:57,689 --> 00:09:01,920
support server-side streaming<font color="#E5E5E5"> but I was</font>

219
00:08:59,670 --> 00:09:03,149
<font color="#E5E5E5">sitting at the golden UK conference and</font>

220
00:09:01,920 --> 00:09:05,099
I<font color="#E5E5E5"> had an idea and I implemented</font>

221
00:09:03,149 --> 00:09:06,569
<font color="#E5E5E5">bidirectional streaming and client-side</font>

222
00:09:05,100 --> 00:09:09,120
streaming with a WebSocket<font color="#E5E5E5"> box I</font><font color="#CCCCCC"> see you</font>

223
00:09:06,569 --> 00:09:13,579
can use that as<font color="#CCCCCC"> well with the</font><font color="#E5E5E5"> GFC web</font>

224
00:09:09,120 --> 00:09:16,379
<font color="#E5E5E5">for go library</font><font color="#CCCCCC"> so what can we</font><font color="#E5E5E5"> do with it</font>

225
00:09:13,579 --> 00:09:18,479
if you could<font color="#E5E5E5"> write go for Jezebel</font><font color="#CCCCCC"> wrap</font>

226
00:09:16,379 --> 00:09:20,490
<font color="#E5E5E5">you could you could write a gopher</font><font color="#CCCCCC"> yes</font>

227
00:09:18,480 --> 00:09:22,170
electron up<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> and use it to</font>

228
00:09:20,490 --> 00:09:25,680
communicate<font color="#E5E5E5"> with your back-end or</font><font color="#CCCCCC"> you</font>

229
00:09:22,170 --> 00:09:28,498
could just<font color="#E5E5E5"> write a generic front end for</font>

230
00:09:25,680 --> 00:09:33,138
your<font color="#CCCCCC"> G OPC service</font><font color="#E5E5E5"> and it doesn't</font><font color="#CCCCCC"> even</font>

231
00:09:28,499 --> 00:09:35,639
<font color="#E5E5E5">have to be a Goldie IPC service but</font>

232
00:09:33,139 --> 00:09:38,129
we're gonna have an<font color="#E5E5E5"> example later to see</font>

233
00:09:35,639 --> 00:09:39,930
<font color="#E5E5E5">what it looks like and essentially</font>

234
00:09:38,129 --> 00:09:44,339
anywhere where the<font color="#CCCCCC"> fronton talks to the</font>

235
00:09:39,930 --> 00:09:46,769
<font color="#E5E5E5">backend</font><font color="#CCCCCC"> so here's the generated code</font><font color="#E5E5E5"> and</font>

236
00:09:44,339 --> 00:09:49,319
if you just remember back a couple<font color="#E5E5E5"> of</font>

237
00:09:46,769 --> 00:09:51,149
minutes ago<font color="#CCCCCC"> the go client and a</font>

238
00:09:49,319 --> 00:09:52,498
generation<font color="#E5E5E5"> it looks it's supposed to</font>

239
00:09:51,149 --> 00:09:56,100
<font color="#E5E5E5">look very similar</font><font color="#CCCCCC"> to that so you</font><font color="#E5E5E5"> get a</font>

240
00:09:52,499 --> 00:09:58,410
very<font color="#CCCCCC"> similar interface with a</font>

241
00:09:56,100 --> 00:10:01,610
constructor<font color="#CCCCCC"> like this that returns you</font>

242
00:09:58,410 --> 00:10:03,990
the interface from<font color="#CCCCCC"> the generated code</font>

243
00:10:01,610 --> 00:10:05,459
<font color="#CCCCCC">all</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> very interesting but I want</font>

244
00:10:03,990 --> 00:10:08,279
to show you what it's like<font color="#E5E5E5"> to work</font><font color="#CCCCCC"> with</font>

245
00:10:05,459 --> 00:10:09,420
<font color="#E5E5E5">so I'm gonna do a live demo here and if</font>

246
00:10:08,279 --> 00:10:12,300
you want to follow<font color="#CCCCCC"> along I give you</font>

247
00:10:09,420 --> 00:10:13,790
about 10 seconds to clone<font color="#E5E5E5"> that repo</font>

248
00:10:12,300 --> 00:10:19,079
right there

249
00:10:13,790 --> 00:10:20,670
Francis I asked him to<font color="#E5E5E5"> hold my</font>

250
00:10:19,079 --> 00:10:27,508
microphone<font color="#CCCCCC"> do you want a little</font>

251
00:10:20,670 --> 00:10:29,459
<font color="#E5E5E5">microphone very</font><font color="#CCCCCC"> good ok</font><font color="#E5E5E5"> so I'm gonna</font>

252
00:10:27,509 --> 00:10:32,360
press this button<font color="#E5E5E5"> and hopefully this is</font>

253
00:10:29,459 --> 00:10:32,359
<font color="#CCCCCC">not</font><font color="#E5E5E5"> going to break everything</font>

254
00:10:33,030 --> 00:10:36,110
[Music]

255
00:10:46,740 --> 00:10:51,960
that's just the wrong oops

256
00:10:54,360 --> 00:11:10,360
yeah<font color="#E5E5E5"> can we turn the lights off</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the</font>

257
00:10:56,440 --> 00:11:15,090
stage oh my<font color="#E5E5E5"> goodness</font><font color="#CCCCCC"> I have no idea I</font>

258
00:11:10,360 --> 00:11:19,560
didn't think about this color<font color="#E5E5E5"> theme</font>

259
00:11:15,090 --> 00:11:22,930
no<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> solarized light I'll probably do</font>

260
00:11:19,560 --> 00:11:26,170
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> get off to a good</font>

261
00:11:22,930 --> 00:11:27,939
start<font color="#E5E5E5"> here we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> so I've</font><font color="#CCCCCC"> just</font>

262
00:11:26,170 --> 00:11:29,199
got a clone of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> requestor here</font><font color="#E5E5E5"> and</font>

263
00:11:27,940 --> 00:11:32,560
the first thing I'm<font color="#CCCCCC"> going to do is to</font>

264
00:11:29,200 --> 00:11:35,410
disable<font color="#E5E5E5"> the softly compression which</font>

265
00:11:32,560 --> 00:11:37,930
with otherwise run and takes a quite a

266
00:11:35,410 --> 00:11:39,880
long time and what it takes about 10

267
00:11:37,930 --> 00:11:41,489
seconds<font color="#E5E5E5"> per generation but it's going to</font>

268
00:11:39,880 --> 00:11:43,330
stop us from<font color="#E5E5E5"> doing anything useful so</font>

269
00:11:41,490 --> 00:11:47,140
<font color="#E5E5E5">for the purposes of this demo I'm</font>

270
00:11:43,330 --> 00:11:52,120
<font color="#E5E5E5">disabling it anyway next step is to</font>

271
00:11:47,140 --> 00:11:54,850
<font color="#CCCCCC">replace I'm going to replace the imports</font>

272
00:11:52,120 --> 00:11:57,010
of<font color="#E5E5E5"> the film repository of course with</font>

273
00:11:54,850 --> 00:11:58,630
the<font color="#CCCCCC"> repository into which a</font><font color="#E5E5E5"> repository</font>

274
00:11:57,010 --> 00:12:00,340
<font color="#E5E5E5">passed into which I've</font><font color="#CCCCCC"> found my</font><font color="#E5E5E5"> first</font>

275
00:11:58,630 --> 00:12:03,700
<font color="#E5E5E5">tree so it's just a simple</font><font color="#CCCCCC"> fine command</font>

276
00:12:00,340 --> 00:12:05,290
it's in the readme<font color="#E5E5E5"> and so you can use</font>

277
00:12:03,700 --> 00:12:07,180
that for<font color="#CCCCCC"> your own showing if you have</font>

278
00:12:05,290 --> 00:12:09,849
and the next thing we're going<font color="#E5E5E5"> to run is</font>

279
00:12:07,180 --> 00:12:11,439
<font color="#CCCCCC">when make generate cert which will</font>

280
00:12:09,850 --> 00:12:17,770
generate themselves a<font color="#CCCCCC"> self-signed</font>

281
00:12:11,440 --> 00:12:20,680
<font color="#CCCCCC">certificate well anyway</font><font color="#E5E5E5"> okay next up</font>

282
00:12:17,770 --> 00:12:35,020
<font color="#E5E5E5">let's just take</font><font color="#CCCCCC"> it for a spin and</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> if</font>

283
00:12:20,680 --> 00:12:36,910
it all works loggers not printing it yes

284
00:12:35,020 --> 00:12:39,000
fun fact if you typed a bad idea into

285
00:12:36,910 --> 00:12:43,930
this prompted accept your<font color="#E5E5E5"> certificates</font>

286
00:12:39,000 --> 00:12:47,590
yes<font color="#CCCCCC"> okay so it works perfect next up no</font>

287
00:12:43,930 --> 00:12:49,810
that's that's not<font color="#E5E5E5"> the demo that is not</font>

288
00:12:47,590 --> 00:12:52,990
the demo okay so what<font color="#CCCCCC"> I want to do</font><font color="#E5E5E5"> here</font>

289
00:12:49,810 --> 00:12:55,239
is<font color="#CCCCCC"> show you</font><font color="#E5E5E5"> how to use it a little</font><font color="#CCCCCC"> bit</font>

290
00:12:52,990 --> 00:12:55,710
so I'm gonna go into<font color="#CCCCCC"> the index.html I'm</font>

291
00:12:55,240 --> 00:12:58,290
going to add

292
00:12:55,710 --> 00:13:01,410
button here<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> gonna say click me on</font>

293
00:12:58,290 --> 00:13:05,280
the button and we're gonna<font color="#E5E5E5"> also add a</font>

294
00:13:01,410 --> 00:13:09,270
div which groups<font color="#E5E5E5"> and we can write you</font>

295
00:13:05,280 --> 00:13:11,520
let's call it a container and that's

296
00:13:09,270 --> 00:13:13,770
saving<font color="#E5E5E5"> our</font><font color="#CCCCCC"> index.html and</font><font color="#E5E5E5"> then we're</font>

297
00:13:11,520 --> 00:13:14,880
<font color="#E5E5E5">going to open</font><font color="#CCCCCC"> the proto file</font><font color="#E5E5E5"> so as I</font>

298
00:13:13,770 --> 00:13:16,199
mentioned<font color="#E5E5E5"> before all of this is just</font>

299
00:13:14,880 --> 00:13:18,090
<font color="#E5E5E5">controlled via the proto file</font>

300
00:13:16,200 --> 00:13:19,890
<font color="#E5E5E5">essentially and this boilerplate</font><font color="#CCCCCC"> reaper</font>

301
00:13:18,090 --> 00:13:20,850
comes with a empty<font color="#E5E5E5"> profile essentially</font>

302
00:13:19,890 --> 00:13:22,710
with just a little<font color="#CCCCCC"> bit of boilerplate</font>

303
00:13:20,850 --> 00:13:24,480
for<font color="#E5E5E5"> you so you can just get</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> to the</font>

304
00:13:22,710 --> 00:13:26,310
<font color="#E5E5E5">business of defining your types so I'm</font>

305
00:13:24,480 --> 00:13:27,630
going to define<font color="#E5E5E5"> a user here and I'm</font>

306
00:13:26,310 --> 00:13:31,349
<font color="#E5E5E5">going to need some help</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the</font>

307
00:13:27,630 --> 00:13:33,060
audience<font color="#E5E5E5"> to figure</font><font color="#CCCCCC"> out all of</font><font color="#E5E5E5"> the fields</font>

308
00:13:31,350 --> 00:13:34,980
that we should add to<font color="#E5E5E5"> this I'm going to</font>

309
00:13:33,060 --> 00:13:38,160
<font color="#E5E5E5">add an ID I'm going to add a name and</font>

310
00:13:34,980 --> 00:13:41,220
we're going<font color="#CCCCCC"> to add a</font><font color="#E5E5E5"> whoops you enter to</font>

311
00:13:38,160 --> 00:13:47,010
age but<font color="#CCCCCC"> what else should</font><font color="#E5E5E5"> we put in the</font>

312
00:13:41,220 --> 00:13:55,100
user type suggestions sorry<font color="#E5E5E5"> email is a</font>

313
00:13:47,010 --> 00:13:57,480
good one yeah<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> like so space and</font>

314
00:13:55,100 --> 00:14:00,390
we're also gonna<font color="#E5E5E5"> add a another message</font>

315
00:13:57,480 --> 00:14:01,740
type<font color="#CCCCCC"> to and which we'll call user</font>

316
00:14:00,390 --> 00:14:03,090
<font color="#E5E5E5">request and you'll soon become very</font>

317
00:14:01,740 --> 00:14:05,700
<font color="#CCCCCC">obvious why that's called user request</font>

318
00:14:03,090 --> 00:14:08,610
and of course that's<font color="#E5E5E5"> going to take just</font>

319
00:14:05,700 --> 00:14:12,000
<font color="#E5E5E5">an ID</font><font color="#CCCCCC"> yes and then we're going to</font><font color="#E5E5E5"> define</font>

320
00:14:08,610 --> 00:14:18,360
the RPC<font color="#E5E5E5"> method get user which takes a</font>

321
00:14:12,000 --> 00:14:20,570
user request<font color="#E5E5E5"> and returns a user like so</font>

322
00:14:18,360 --> 00:14:26,270
boom and with that we've defined

323
00:14:20,570 --> 00:14:26,270
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> we need essentially</font><font color="#E5E5E5"> to then</font>

324
00:14:32,210 --> 00:14:37,080
[Music]

325
00:14:34,760 --> 00:14:39,900
that generates<font color="#E5E5E5"> the profiles and also</font>

326
00:14:37,080 --> 00:14:42,330
generates the and<font color="#CCCCCC"> JavaScript and they go</font>

327
00:14:39,900 --> 00:14:43,770
for this<font color="#E5E5E5"> interface but anyway we haven't</font>

328
00:14:42,330 --> 00:14:45,570
<font color="#E5E5E5">actually done anything in the</font>

329
00:14:43,770 --> 00:14:47,340
implementation<font color="#E5E5E5"> of either side yet so</font>

330
00:14:45,570 --> 00:14:51,000
what's happened here is we've generated

331
00:14:47,340 --> 00:14:53,760
the server and all<font color="#E5E5E5"> of a sudden my type</font><font color="#CCCCCC"> a</font>

332
00:14:51,000 --> 00:14:55,170
check at compile time<font color="#E5E5E5"> fails because my</font>

333
00:14:53,760 --> 00:14:57,090
back-end does no longer implement the

334
00:14:55,170 --> 00:15:00,569
interface<font color="#E5E5E5"> that it's supposed to so I'm</font>

335
00:14:57,090 --> 00:15:01,950
gonna take<font color="#E5E5E5"> that interface function</font>

336
00:15:00,570 --> 00:15:05,090
definition and we're gonna of course

337
00:15:01,950 --> 00:15:05,090
<font color="#E5E5E5">implement this on the</font><font color="#CCCCCC"> backend</font>

338
00:15:06,710 --> 00:15:15,390
and<font color="#CCCCCC"> she do context</font><font color="#E5E5E5"> is called context of</font>

339
00:15:13,170 --> 00:15:18,030
<font color="#E5E5E5">course and we'll call the request</font>

340
00:15:15,390 --> 00:15:21,780
request if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> add some</font><font color="#CCCCCC"> namespacing</font><font color="#E5E5E5"> here</font>

341
00:15:18,030 --> 00:15:23,880
because<font color="#CCCCCC"> she</font><font color="#E5E5E5"> didn't give it</font><font color="#CCCCCC"> to us okay</font>

342
00:15:21,780 --> 00:15:25,110
and<font color="#CCCCCC"> then the backend is a very bad</font>

343
00:15:23,880 --> 00:15:28,490
<font color="#CCCCCC">back-end</font><font color="#E5E5E5"> because it only supports one</font>

344
00:15:25,110 --> 00:15:34,740
<font color="#E5E5E5">user</font><font color="#CCCCCC"> and so we're going</font><font color="#E5E5E5"> to check if the</font>

345
00:15:28,490 --> 00:15:36,980
request ID has it's the<font color="#CCCCCC"> same as the</font><font color="#E5E5E5"> only</font>

346
00:15:34,740 --> 00:15:39,440
user that we support and if it isn't

347
00:15:36,980 --> 00:15:43,380
<font color="#E5E5E5">then we're going to return an error</font>

348
00:15:39,440 --> 00:15:47,370
we're going to use the standard<font color="#E5E5E5"> GOP see</font>

349
00:15:43,380 --> 00:15:50,520
status<font color="#E5E5E5"> error type of course</font><font color="#CCCCCC"> I guess we</font>

350
00:15:47,370 --> 00:15:52,230
are<font color="#E5E5E5"> good GRC citizens and we're gonna</font>

351
00:15:50,520 --> 00:15:54,439
return<font color="#CCCCCC"> it not found which translates to</font>

352
00:15:52,230 --> 00:15:58,230
HTTP 404 in case you're interested<font color="#CCCCCC"> and</font>

353
00:15:54,440 --> 00:16:00,690
say<font color="#E5E5E5"> oh we can say user not found in this</font>

354
00:15:58,230 --> 00:16:04,250
case so<font color="#E5E5E5"> that's basically</font><font color="#CCCCCC"> a correct way</font>

355
00:16:00,690 --> 00:16:06,270
of saying invalid ID<font color="#E5E5E5"> if you want however</font>

356
00:16:04,250 --> 00:16:08,730
once we've gotten<font color="#E5E5E5"> to this stage in the</font>

357
00:16:06,270 --> 00:16:10,199
logic we know that the correct user has

358
00:16:08,730 --> 00:16:16,380
<font color="#CCCCCC">been</font><font color="#E5E5E5"> specified so we're going to return</font>

359
00:16:10,200 --> 00:16:18,660
<font color="#CCCCCC">which we want</font><font color="#E5E5E5"> to return the user that we</font>

360
00:16:16,380 --> 00:16:24,890
have<font color="#E5E5E5"> money do you want two three four of</font>

361
00:16:18,660 --> 00:16:27,530
course name I'm gonna<font color="#E5E5E5"> use myself here</font>

362
00:16:24,890 --> 00:16:33,680
and email

363
00:16:27,530 --> 00:16:37,650
I'll just put redacted because and<font color="#CCCCCC"> Neil</font>

364
00:16:33,680 --> 00:16:40,050
so that's a<font color="#E5E5E5"> back-end done and then we go</font>

365
00:16:37,650 --> 00:16:42,090
to<font color="#E5E5E5"> the front end which this is all</font><font color="#CCCCCC"> go</font>

366
00:16:40,050 --> 00:16:44,040
<font color="#CCCCCC">for</font><font color="#E5E5E5"> GS code but of course it just looks</font>

367
00:16:42,090 --> 00:16:46,770
like<font color="#CCCCCC"> oh because</font><font color="#E5E5E5"> it is and you shouldn't</font>

368
00:16:44,040 --> 00:16:48,480
pretend that it's anything<font color="#E5E5E5"> else and now</font>

369
00:16:46,770 --> 00:16:49,740
hopefully this is all<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to look</font>

370
00:16:48,480 --> 00:16:52,080
<font color="#E5E5E5">fantastic to you if you haven't</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> go</font>

371
00:16:49,740 --> 00:16:54,600
for you<font color="#CCCCCC"> jest before</font><font color="#E5E5E5"> so if you cast your</font>

372
00:16:52,080 --> 00:16:56,250
memory back<font color="#CCCCCC"> to the index.html</font>

373
00:16:54,600 --> 00:17:00,750
<font color="#E5E5E5">definitions that we made we've got a</font>

374
00:16:56,250 --> 00:17:05,970
button<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> can use and we're going</font>

375
00:17:00,750 --> 00:17:10,079
<font color="#CCCCCC">to use the</font><font color="#E5E5E5"> document dot get element by</font>

376
00:17:05,970 --> 00:17:11,430
ID<font color="#E5E5E5"> and get the ID of the button of</font>

377
00:17:10,079 --> 00:17:14,550
course and then we're<font color="#E5E5E5"> going to say that</font>

378
00:17:11,430 --> 00:17:15,870
this is a type<font color="#E5E5E5"> dome button can you</font>

379
00:17:14,550 --> 00:17:17,669
imagine doing<font color="#E5E5E5"> something like</font><font color="#CCCCCC"> that in</font>

380
00:17:15,869 --> 00:17:18,839
JavaScript that<font color="#E5E5E5"> would be amazing but you</font>

381
00:17:17,670 --> 00:17:19,559
can't of course<font color="#E5E5E5"> because javascript</font><font color="#CCCCCC"> is</font>

382
00:17:18,839 --> 00:17:23,708
dynamic

383
00:17:19,559 --> 00:17:29,410
<font color="#E5E5E5">curses and so we're gonna get the</font>

384
00:17:23,709 --> 00:17:31,929
container as well this<font color="#E5E5E5"> is why we need to</font>

385
00:17:29,410 --> 00:17:34,020
go to save us<font color="#CCCCCC"> from</font><font color="#E5E5E5"> JavaScript and we're</font>

386
00:17:31,929 --> 00:17:37,150
gonna talk a little bit<font color="#CCCCCC"> later about</font>

387
00:17:34,020 --> 00:17:39,429
other things relating to the future<font color="#CCCCCC"> of</font>

388
00:17:37,150 --> 00:17:41,830
the web and go but not right now

389
00:17:39,429 --> 00:17:44,380
so with this button<font color="#E5E5E5"> element we</font><font color="#CCCCCC"> can add</font>

390
00:17:41,830 --> 00:17:45,309
an event listener<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to do</font>

391
00:17:44,380 --> 00:17:46,419
<font color="#E5E5E5">something interesting when we're</font>

392
00:17:45,309 --> 00:17:47,740
clicking<font color="#E5E5E5"> on the button we're</font><font color="#CCCCCC"> going to</font>

393
00:17:46,419 --> 00:17:49,960
tie to the interest<font color="#E5E5E5"> in your click we're</font>

394
00:17:47,740 --> 00:17:51,250
going to disable<font color="#E5E5E5"> that use capture which</font>

395
00:17:49,960 --> 00:17:53,049
I<font color="#E5E5E5"> don't even know what it does actually</font>

396
00:17:51,250 --> 00:17:54,700
<font color="#CCCCCC">but</font><font color="#E5E5E5"> we don't need</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> in this case and</font>

397
00:17:53,049 --> 00:17:56,620
<font color="#CCCCCC">we're going to</font><font color="#E5E5E5"> ignore the dome event</font>

398
00:17:54,700 --> 00:17:58,179
input arguments to this function

399
00:17:56,620 --> 00:18:00,399
but essentially<font color="#E5E5E5"> here we are this</font>

400
00:17:58,179 --> 00:18:02,919
function is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be called when we</font>

401
00:18:00,400 --> 00:18:04,660
press the button<font color="#CCCCCC"> so what we want</font><font color="#E5E5E5"> to do</font>

402
00:18:02,919 --> 00:18:06,490
of<font color="#CCCCCC"> course we want to</font><font color="#E5E5E5"> make a call</font><font color="#CCCCCC"> to the</font>

403
00:18:04,660 --> 00:18:07,870
<font color="#E5E5E5">backend get user and this is the</font>

404
00:18:06,490 --> 00:18:10,240
function<font color="#CCCCCC"> that we defined in the profile</font>

405
00:18:07,870 --> 00:18:15,129
<font color="#CCCCCC">before of course</font><font color="#E5E5E5"> and it takes a context</font>

406
00:18:10,240 --> 00:18:16,780
<font color="#E5E5E5">you can use contexts with you can use a</font>

407
00:18:15,130 --> 00:18:18,220
context with the<font color="#E5E5E5"> timeout and</font><font color="#CCCCCC"> stuff if</font>

408
00:18:16,780 --> 00:18:20,230
you want to in<font color="#E5E5E5"> here it will all work as</font>

409
00:18:18,220 --> 00:18:21,700
expected<font color="#CCCCCC"> but we're not gonna</font><font color="#E5E5E5"> bother here</font>

410
00:18:20,230 --> 00:18:26,020
because the<font color="#CCCCCC"> backend</font><font color="#E5E5E5"> should reply to us</font>

411
00:18:21,700 --> 00:18:29,440
in good order<font color="#E5E5E5"> the wrong namespace client</font>

412
00:18:26,020 --> 00:18:31,270
<font color="#CCCCCC">user request</font><font color="#E5E5E5"> of course ID and because we</font>

413
00:18:29,440 --> 00:18:34,690
just<font color="#CCCCCC"> implements the backend we know what</font>

414
00:18:31,270 --> 00:18:36,370
to<font color="#E5E5E5"> put here of course and we're gonna</font>

415
00:18:34,690 --> 00:18:38,679
assign those to<font color="#CCCCCC"> a user and an error</font>

416
00:18:36,370 --> 00:18:42,879
because<font color="#E5E5E5"> it can error and what do we do</font>

417
00:18:38,679 --> 00:18:45,820
if we<font color="#CCCCCC"> error like good go first</font><font color="#E5E5E5"> we do if</font>

418
00:18:42,880 --> 00:18:47,140
our<font color="#CCCCCC"> Neil of course so we don't want to</font>

419
00:18:45,820 --> 00:18:50,049
<font color="#CCCCCC">continue that</font><font color="#E5E5E5"> flow but we do want to do</font>

420
00:18:47,140 --> 00:18:51,429
<font color="#E5E5E5">something so let's write to the</font>

421
00:18:50,049 --> 00:18:56,950
container you can<font color="#E5E5E5"> set the text content</font>

422
00:18:51,429 --> 00:18:58,270
<font color="#E5E5E5">to the content of the error however if</font>

423
00:18:56,950 --> 00:19:00,340
we're<font color="#E5E5E5"> here then we've got a user back</font>

424
00:18:58,270 --> 00:19:01,629
from the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> end which is great</font>

425
00:19:00,340 --> 00:19:03,879
<font color="#CCCCCC">news because that's what we wanted</font><font color="#E5E5E5"> all</font>

426
00:19:01,630 --> 00:19:08,350
along<font color="#E5E5E5"> so then we're going to take the</font>

427
00:19:03,880 --> 00:19:09,340
container<font color="#E5E5E5"> and set text content to</font>

428
00:19:08,350 --> 00:19:13,629
something more<font color="#CCCCCC"> interesting</font>

429
00:19:09,340 --> 00:19:17,129
we'll start with name<font color="#E5E5E5"> and we're</font><font color="#CCCCCC"> just</font>

430
00:19:13,630 --> 00:19:17,130
gonna do some string concatenation here

431
00:19:20,889 --> 00:19:25,099
inch

432
00:19:22,020 --> 00:19:25,099
[Music]

433
00:19:26,119 --> 00:19:31,649
<font color="#CCCCCC">now age is actually an unsigned</font><font color="#E5E5E5"> integer</font>

434
00:19:29,850 --> 00:19:37,529
<font color="#E5E5E5">so I'm going to have to use this trick</font>

435
00:19:31,649 --> 00:19:40,768
on you have to<font color="#E5E5E5"> do integer conversion on</font>

436
00:19:37,529 --> 00:19:50,249
that bad boy<font color="#CCCCCC"> and there we go</font><font color="#E5E5E5"> and then we</font>

437
00:19:40,769 --> 00:19:57,809
also use<font color="#CCCCCC"> a IDE with an ID and of course</font>

438
00:19:50,249 --> 00:20:00,450
thank<font color="#E5E5E5"> you sir we've got email see if I</font>

439
00:19:57,809 --> 00:20:03,480
got that<font color="#E5E5E5"> right no compilation</font><font color="#CCCCCC"> errors</font>

440
00:20:00,450 --> 00:20:07,649
<font color="#E5E5E5">okay now this looks great</font><font color="#CCCCCC"> right however</font>

441
00:20:03,480 --> 00:20:09,929
there<font color="#E5E5E5"> is one little trivia about</font>

442
00:20:07,649 --> 00:20:11,369
<font color="#E5E5E5">coffered yes and</font><font color="#CCCCCC"> JavaScript in in</font>

443
00:20:09,929 --> 00:20:12,929
<font color="#E5E5E5">generally you can't block on the main</font>

444
00:20:11,369 --> 00:20:14,549
thread<font color="#E5E5E5"> so this is going to be wrapped</font><font color="#CCCCCC"> in</font>

445
00:20:12,929 --> 00:20:16,739
a go<font color="#CCCCCC"> routine in order</font><font color="#E5E5E5"> for it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> execute</font>

446
00:20:14,549 --> 00:20:19,710
<font color="#E5E5E5">otherwise it will not work</font><font color="#CCCCCC"> but you</font><font color="#E5E5E5"> will</font>

447
00:20:16,739 --> 00:20:21,929
<font color="#E5E5E5">get a runtime error just not all</font><font color="#CCCCCC"> that</font>

448
00:20:19,710 --> 00:20:23,100
useful<font color="#CCCCCC"> so now that we've generated that</font>

449
00:20:21,929 --> 00:20:25,820
<font color="#E5E5E5">we've got the back</font><font color="#CCCCCC"> end we got the front</font>

450
00:20:23,100 --> 00:20:27,918
end we're gonna run the server again<font color="#E5E5E5"> and</font>

451
00:20:25,820 --> 00:20:30,330
[Music]

452
00:20:27,919 --> 00:20:34,710
that has not worked so<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font>

453
00:20:30,330 --> 00:20:36,449
assume<font color="#CCCCCC"> that I was</font><font color="#E5E5E5"> caching it yes</font><font color="#CCCCCC"> my</font>

454
00:20:34,710 --> 00:20:37,769
testing you would do<font color="#E5E5E5"> that about</font><font color="#CCCCCC"> 50% of</font>

455
00:20:36,450 --> 00:20:40,409
<font color="#E5E5E5">the time so I was hoping is just gonna</font>

456
00:20:37,769 --> 00:20:42,239
<font color="#E5E5E5">work anyway boom</font><font color="#CCCCCC"> it worked</font><font color="#E5E5E5"> right we</font>

457
00:20:40,409 --> 00:20:47,519
click the button<font color="#E5E5E5"> we got a request to the</font>

458
00:20:42,239 --> 00:20:49,409
<font color="#CCCCCC">backend</font><font color="#E5E5E5"> thank you</font>

459
00:20:47,519 --> 00:20:51,480
if you want to you can be<font color="#CCCCCC"> sneaky and</font>

460
00:20:49,409 --> 00:20:52,830
<font color="#E5E5E5">look at the information that's</font><font color="#CCCCCC"> been sent</font>

461
00:20:51,480 --> 00:20:54,899
<font color="#E5E5E5">here but that's that's not</font><font color="#CCCCCC"> what I want</font>

462
00:20:52,830 --> 00:20:58,609
<font color="#E5E5E5">to do very</font><font color="#CCCCCC"> good ok that's actually right</font>

463
00:20:54,899 --> 00:21:01,199
<font color="#E5E5E5">on cue I just wanted to show as well</font>

464
00:20:58,609 --> 00:21:04,470
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is great</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> but what happens if</font>

465
00:21:01,200 --> 00:21:06,779
we give the wrong ID and as you know we

466
00:21:04,470 --> 00:21:09,239
said to the<font color="#CCCCCC"> backend that</font><font color="#E5E5E5"> it should</font>

467
00:21:06,779 --> 00:21:13,859
return a nice G RPC error but how<font color="#E5E5E5"> will</font>

468
00:21:09,239 --> 00:21:16,049
the front end handle that and yes so it

469
00:21:13,859 --> 00:21:17,399
gives us a not<font color="#E5E5E5"> found error and if you</font>

470
00:21:16,049 --> 00:21:18,989
used to<font color="#CCCCCC"> go</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> your PC you will</font><font color="#E5E5E5"> know this</font>

471
00:21:17,399 --> 00:21:20,609
<font color="#E5E5E5">is exactly what I go do busy error looks</font>

472
00:21:18,989 --> 00:21:23,519
like<font color="#E5E5E5"> however this is not all that</font>

473
00:21:20,609 --> 00:21:28,949
<font color="#E5E5E5">interesting because in addition</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this</font>

474
00:21:23,519 --> 00:21:32,669
we can do status from<font color="#CCCCCC"> error --air and</font>

475
00:21:28,950 --> 00:21:35,020
get access<font color="#E5E5E5"> to things like the the</font>

476
00:21:32,669 --> 00:21:38,740
enumeration itself

477
00:21:35,020 --> 00:21:43,930
stiva code<font color="#E5E5E5"> we can get st</font><font color="#CCCCCC"> that message</font>

478
00:21:38,740 --> 00:21:45,940
<font color="#E5E5E5">and also other trailers so actually yeah</font>

479
00:21:43,930 --> 00:21:47,260
we probably have no<font color="#CCCCCC"> okay I'm gonna</font><font color="#E5E5E5"> skip</font>

480
00:21:45,940 --> 00:21:50,860
that because<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> think we have time</font>

481
00:21:47,260 --> 00:21:58,240
and so let's go<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to the presentation</font>

482
00:21:50,860 --> 00:22:01,590
<font color="#E5E5E5">and yeah so</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> thank you much</font><font color="#CCCCCC"> so so</font>

483
00:21:58,240 --> 00:22:07,210
there we<font color="#CCCCCC"> go um yeah this</font><font color="#E5E5E5"> is the wrong</font>

484
00:22:01,590 --> 00:22:09,909
<font color="#E5E5E5">window</font><font color="#CCCCCC"> actually there we go so what</font>

485
00:22:07,210 --> 00:22:11,620
we've learned today is we've<font color="#E5E5E5"> seen that</font>

486
00:22:09,910 --> 00:22:14,020
we can<font color="#CCCCCC"> take a simple problem of</font>

487
00:22:11,620 --> 00:22:16,689
interface<font color="#CCCCCC"> like</font><font color="#E5E5E5"> definition we can</font>

488
00:22:14,020 --> 00:22:19,240
<font color="#E5E5E5">generate a front end and back end and</font>

489
00:22:16,690 --> 00:22:21,550
simply in to implement the back end

490
00:22:19,240 --> 00:22:23,380
<font color="#E5E5E5">implement the front end and have easy</font>

491
00:22:21,550 --> 00:22:25,180
<font color="#E5E5E5">communications between a</font><font color="#CCCCCC"> gopher just</font>

492
00:22:23,380 --> 00:22:28,780
<font color="#CCCCCC">rent and go for just back and I go back</font>

493
00:22:25,180 --> 00:22:30,100
end<font color="#E5E5E5"> indeed this is just an example of</font>

494
00:22:28,780 --> 00:22:32,020
<font color="#E5E5E5">what you</font><font color="#CCCCCC"> can do of course</font><font color="#E5E5E5"> you can</font>

495
00:22:30,100 --> 00:22:34,870
replace the go back<font color="#CCCCCC"> ng RPC service with</font>

496
00:22:32,020 --> 00:22:36,370
any other G RPC service<font color="#CCCCCC"> and I encourage</font>

497
00:22:34,870 --> 00:22:39,070
<font color="#CCCCCC">you to</font><font color="#E5E5E5"> look at the boilerplate repo and</font>

498
00:22:36,370 --> 00:22:41,560
on the official repo which will be

499
00:22:39,070 --> 00:22:43,120
linked on my talks page<font color="#CCCCCC"> there's all</font>

500
00:22:41,560 --> 00:22:46,990
kinds of examples<font color="#E5E5E5"> about using this in</font>

501
00:22:43,120 --> 00:22:48,429
different<font color="#CCCCCC"> scenarios and hopefully the</font>

502
00:22:46,990 --> 00:22:49,810
next<font color="#E5E5E5"> time you want to either go for JSF</font>

503
00:22:48,430 --> 00:22:54,000
which should be soon<font color="#E5E5E5"> because it's great</font>

504
00:22:49,810 --> 00:22:58,320
you can<font color="#E5E5E5"> try look at using my library</font><font color="#CCCCCC"> and</font>

505
00:22:54,000 --> 00:23:02,110
<font color="#CCCCCC">okay I'd</font><font color="#E5E5E5"> like to thank first time and</font>

506
00:22:58,320 --> 00:23:05,020
they don't organize<font color="#CCCCCC"> errs I'd like to</font>

507
00:23:02,110 --> 00:23:07,870
give thanks<font color="#E5E5E5"> to improbable</font><font color="#CCCCCC"> who created</font>

508
00:23:05,020 --> 00:23:09,550
the Geo PC web client implementation

509
00:23:07,870 --> 00:23:10,929
which<font color="#CCCCCC"> is really</font><font color="#E5E5E5"> nice especially McHale</font>

510
00:23:09,550 --> 00:23:13,720
<font color="#E5E5E5">Bukowski who's been doing great</font>

511
00:23:10,930 --> 00:23:16,330
contributions to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> go DF PC ecosystem</font>

512
00:23:13,720 --> 00:23:18,100
<font color="#CCCCCC">I'd like to thank Richard Musial</font><font color="#E5E5E5"> for</font>

513
00:23:16,330 --> 00:23:20,530
<font color="#E5E5E5">crating covered yes he is</font><font color="#CCCCCC"> currently</font>

514
00:23:18,100 --> 00:23:23,620
<font color="#E5E5E5">working on a wesen compilation target</font>

515
00:23:20,530 --> 00:23:25,090
for go which is<font color="#E5E5E5"> extremely exciting if</font>

516
00:23:23,620 --> 00:23:27,010
you haven't checked that out yet<font color="#CCCCCC"> you</font>

517
00:23:25,090 --> 00:23:28,240
should google it<font color="#E5E5E5"> hopefully</font><font color="#CCCCCC"> that will</font>

518
00:23:27,010 --> 00:23:29,890
come to fruition at some point<font color="#CCCCCC"> too</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I</font>

519
00:23:28,240 --> 00:23:31,690
can't imagine<font color="#E5E5E5"> anyone better than Richard</font>

520
00:23:29,890 --> 00:23:35,050
to<font color="#CCCCCC"> be working on</font><font color="#E5E5E5"> that kind</font><font color="#CCCCCC"> of thing</font>

521
00:23:31,690 --> 00:23:37,450
<font color="#CCCCCC">Dmitriy is</font><font color="#E5E5E5"> relative who's appears to be</font>

522
00:23:35,050 --> 00:23:40,240
the main maintainer of gorgeous<font color="#E5E5E5"> it</font><font color="#CCCCCC"> gets</font>

523
00:23:37,450 --> 00:23:41,710
updates every major go version or so

524
00:23:40,240 --> 00:23:43,210
<font color="#E5E5E5">because there's all kinds of new things</font>

525
00:23:41,710 --> 00:23:44,680
<font color="#E5E5E5">in the standard library need to make</font>

526
00:23:43,210 --> 00:23:47,560
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that it's compatible with gorgeous</font>

527
00:23:44,680 --> 00:23:48,310
<font color="#CCCCCC">and when they go</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> GSM community</font>

528
00:23:47,560 --> 00:23:50,350
<font color="#E5E5E5">engine</font>

529
00:23:48,310 --> 00:23:53,020
<font color="#E5E5E5">is great you should check out the slack</font>

530
00:23:50,350 --> 00:23:54,730
<font color="#CCCCCC">Channel</font><font color="#E5E5E5"> honest like a girlfriend</font><font color="#CCCCCC"> yes</font><font color="#E5E5E5"> I'd</font>

531
00:23:53,020 --> 00:23:57,970
like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> thank</font><font color="#E5E5E5"> Travis Klein who gave me</font>

532
00:23:54,730 --> 00:24:01,840
the idea<font color="#CCCCCC"> to implement my own WebSocket</font>

533
00:23:57,970 --> 00:24:03,460
streaming proxy from<font color="#E5E5E5"> his proxy which is</font>

534
00:24:01,840 --> 00:24:04,990
for the GOP<font color="#CCCCCC"> C gateway so if you're used</font>

535
00:24:03,460 --> 00:24:06,340
in gear<font color="#CCCCCC"> pgj forget where you should</font>

536
00:24:04,990 --> 00:24:11,020
check<font color="#CCCCCC"> out that library</font><font color="#E5E5E5"> as well it's it</font>

537
00:24:06,340 --> 00:24:13,270
allows you to<font color="#E5E5E5"> do streaming in with the</font>

538
00:24:11,020 --> 00:24:16,389
GOP<font color="#CCCCCC"> C gateway and also Paul Jolie who</font>

539
00:24:13,270 --> 00:24:17,920
has pushed<font color="#E5E5E5"> me to present my</font><font color="#CCCCCC"> own work and</font>

540
00:24:16,390 --> 00:24:18,280
who without whom I wouldn't be here

541
00:24:17,920 --> 00:24:20,140
<font color="#E5E5E5">today</font>

542
00:24:18,280 --> 00:24:21,550
and last but<font color="#CCCCCC"> not least I'd like to</font><font color="#E5E5E5"> thank</font>

543
00:24:20,140 --> 00:24:23,410
you<font color="#E5E5E5"> for listening to</font><font color="#CCCCCC"> my talk I hope you</font>

544
00:24:21,550 --> 00:24:36,280
enjoyed<font color="#E5E5E5"> it and I'll take any</font><font color="#CCCCCC"> questions</font>

545
00:24:23,410 --> 00:24:38,670
you<font color="#E5E5E5"> might have now thank you</font><font color="#CCCCCC"> okay no</font>

546
00:24:36,280 --> 00:24:38,670
questions

547
00:24:42,210 --> 00:24:48,869
Thank You Francis<font color="#CCCCCC"> oh yeah you should</font>

548
00:24:47,070 --> 00:24:49,950
<font color="#CCCCCC">check out</font><font color="#E5E5E5"> the taco features tons</font><font color="#CCCCCC"> of</font>

549
00:24:48,869 --> 00:24:56,149
<font color="#CCCCCC">links</font><font color="#E5E5E5"> in there</font><font color="#CCCCCC"> you can start playing</font>

550
00:24:49,950 --> 00:24:56,149
<font color="#E5E5E5">around with it</font><font color="#CCCCCC"> yourself if you like yes</font>

551
00:25:03,619 --> 00:25:11,070
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> um</font><font color="#CCCCCC"> a longer version</font><font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> yes</font>

552
00:25:07,889 --> 00:25:12,629
<font color="#E5E5E5">the question</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> it appears that girl</font>

553
00:25:11,070 --> 00:25:15,299
<font color="#CCCCCC">4GS generates</font><font color="#E5E5E5"> large</font><font color="#CCCCCC"> JavaScript files</font>

554
00:25:12,629 --> 00:25:16,289
<font color="#E5E5E5">essentially this</font><font color="#CCCCCC"> is true and a longer</font>

555
00:25:15,299 --> 00:25:17,730
<font color="#E5E5E5">version of my talk would have talked a</font>

556
00:25:16,289 --> 00:25:18,869
little bit about how to work<font color="#E5E5E5"> around that</font>

557
00:25:17,730 --> 00:25:21,330
<font color="#E5E5E5">but you didn't it was not as how I</font>

558
00:25:18,869 --> 00:25:23,759
disabled the softly in<font color="#E5E5E5"> compression while</font>

559
00:25:21,330 --> 00:25:25,408
<font color="#CCCCCC">I was doing that presentation</font><font color="#E5E5E5"> this</font>

560
00:25:23,759 --> 00:25:27,059
<font color="#E5E5E5">hopefully compression introduces</font>

561
00:25:25,409 --> 00:25:28,440
something<font color="#E5E5E5"> like an 80% compression rate</font>

562
00:25:27,059 --> 00:25:30,210
which is<font color="#E5E5E5"> it's really nice it will bring</font>

563
00:25:28,440 --> 00:25:32,129
the<font color="#E5E5E5"> two megabytes</font><font color="#CCCCCC"> down to about 300</font>

564
00:25:30,210 --> 00:25:34,320
<font color="#E5E5E5">kilobytes which is still quite large and</font>

565
00:25:32,129 --> 00:25:35,519
in general when<font color="#E5E5E5"> you're working with go</font>

566
00:25:34,320 --> 00:25:37,080
<font color="#E5E5E5">for Jess you</font><font color="#CCCCCC"> have to be a little bit</font>

567
00:25:35,519 --> 00:25:41,220
careful about<font color="#E5E5E5"> what packages you import</font>

568
00:25:37,080 --> 00:25:44,039
which is a bit unfortunate<font color="#CCCCCC"> but if you I</font>

569
00:25:41,220 --> 00:25:46,200
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> 2 megabytes</font><font color="#E5E5E5"> in this case is</font>

570
00:25:44,039 --> 00:25:48,929
<font color="#E5E5E5">actually probably an example of a small</font>

571
00:25:46,200 --> 00:25:51,090
file<font color="#E5E5E5"> I</font><font color="#CCCCCC"> know the perk keep generated file</font>

572
00:25:48,929 --> 00:25:54,440
is like nine megabytes which is awful

573
00:25:51,090 --> 00:25:57,330
and<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> it's probably in my opinion</font>

574
00:25:54,440 --> 00:26:01,139
<font color="#E5E5E5">what holds back go for the adoption the</font>

575
00:25:57,330 --> 00:26:04,619
<font color="#E5E5E5">most but as I said with gzip compression</font>

576
00:26:01,139 --> 00:26:05,820
which softly is essentially you can you

577
00:26:04,619 --> 00:26:08,759
can get<font color="#E5E5E5"> it down</font><font color="#CCCCCC"> to much more manageable</font>

578
00:26:05,820 --> 00:26:10,830
file sizes and in this one in<font color="#E5E5E5"> particular</font>

579
00:26:08,759 --> 00:26:13,909
will be<font color="#E5E5E5"> about 300 kilobytes which is</font>

580
00:26:10,830 --> 00:26:17,658
acceptable I think for most people

581
00:26:13,909 --> 00:26:17,659
yes<font color="#CCCCCC"> Thank You</font><font color="#E5E5E5"> Francis</font>

582
00:26:25,330 --> 00:26:30,100
the question is<font color="#E5E5E5"> world webassembly</font>

583
00:26:27,009 --> 00:26:33,100
makeover<font color="#CCCCCC"> days</font><font color="#E5E5E5"> irrelevant and my personal</font>

584
00:26:30,100 --> 00:26:36,399
answer is I hope so and I hope<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> be</font>

585
00:26:33,100 --> 00:26:38,320
<font color="#E5E5E5">able</font><font color="#CCCCCC"> to just write girl code and</font><font color="#E5E5E5"> produce</font>

586
00:26:36,399 --> 00:26:40,629
<font color="#E5E5E5">a beautiful</font><font color="#CCCCCC"> web assembly code with none</font>

587
00:26:38,320 --> 00:26:44,620
<font color="#CCCCCC">of the JavaScript</font><font color="#E5E5E5"> rubbish frankly</font><font color="#CCCCCC"> that</font>

588
00:26:40,629 --> 00:26:47,110
we have to deal with today<font color="#E5E5E5"> and yeah I'm</font>

589
00:26:44,620 --> 00:26:48,370
eagerly awaiting the<font color="#E5E5E5"> first beta when</font>

590
00:26:47,110 --> 00:26:50,740
when Richard if you're watching<font color="#E5E5E5"> this</font>

591
00:26:48,370 --> 00:26:57,189
Richard<font color="#E5E5E5"> um I'm like I'm your biggest fan</font>

592
00:26:50,740 --> 00:26:58,280
<font color="#CCCCCC">when it's ready</font><font color="#E5E5E5"> I am ready okay thank</font>

593
00:26:57,190 --> 00:27:05,300
you

594
00:26:58,280 --> 00:27:05,300
[Applause]

