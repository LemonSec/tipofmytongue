1
00:00:18,060 --> 00:00:25,950
we have now<font color="#E5E5E5"> yo it is group from science</font>

2
00:00:22,590 --> 00:00:28,170
for<font color="#E5E5E5"> Mandela talking about alternative</font>

3
00:00:25,950 --> 00:00:31,490
<font color="#CCCCCC">indexing structures for graphs so</font>

4
00:00:28,170 --> 00:00:34,800
starting with<font color="#E5E5E5"> a simple index a</font><font color="#CCCCCC"> well</font>

5
00:00:31,490 --> 00:00:37,410
<font color="#CCCCCC">request</font><font color="#E5E5E5"> or a requirement</font><font color="#CCCCCC"> every scalable</font>

6
00:00:34,800 --> 00:00:51,870
and very capable<font color="#E5E5E5"> index and they want to</font>

7
00:00:37,410 --> 00:00:53,550
talk<font color="#E5E5E5"> to both about how to thank you okay</font>

8
00:00:51,870 --> 00:00:56,430
<font color="#E5E5E5">the</font><font color="#CCCCCC"> same thank you very much hello</font>

9
00:00:53,550 --> 00:00:57,870
everyone just before we start if some

10
00:00:56,430 --> 00:00:59,309
slides are<font color="#CCCCCC"> not very clear from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> end</font>

11
00:00:57,870 --> 00:01:02,390
of the room we<font color="#E5E5E5"> have put the slides</font>

12
00:00:59,309 --> 00:01:06,390
online so<font color="#E5E5E5"> that's for your convenience</font>

13
00:01:02,390 --> 00:01:09,630
well I'm going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> post</font><font color="#E5E5E5"> the problem we</font>

14
00:01:06,390 --> 00:01:11,400
have to try to solve and I need to

15
00:01:09,630 --> 00:01:13,380
explain<font color="#E5E5E5"> what is hi I will try to make</font><font color="#CCCCCC"> a</font>

16
00:01:11,400 --> 00:01:15,200
<font color="#CCCCCC">1</font><font color="#E5E5E5"> minute demo and then I will</font><font color="#CCCCCC"> explain</font>

17
00:01:13,380 --> 00:01:21,240
why we had this<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> that we try to</font>

18
00:01:15,200 --> 00:01:25,469
to<font color="#E5E5E5"> solve so yes these are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> slides why</font>

19
00:01:21,240 --> 00:01:28,530
is it<font color="#CCCCCC"> directed yes</font><font color="#E5E5E5"> so hype is a web</font>

20
00:01:25,469 --> 00:01:30,719
crawler<font color="#E5E5E5"> so it's about downloading web</font>

21
00:01:28,530 --> 00:01:34,770
pages<font color="#E5E5E5"> and looking at the network of</font>

22
00:01:30,719 --> 00:01:37,589
hyperlinks<font color="#CCCCCC"> it's made for research so</font>

23
00:01:34,770 --> 00:01:39,240
researchers will typically download the

24
00:01:37,590 --> 00:01:41,729
network of<font color="#CCCCCC"> webpages and</font><font color="#E5E5E5"> look at it</font><font color="#CCCCCC"> so</font>

25
00:01:39,240 --> 00:01:49,339
let me just show<font color="#CCCCCC"> you how it looks</font><font color="#E5E5E5"> like</font>

26
00:01:41,729 --> 00:01:55,310
<font color="#E5E5E5">this is my oops no sorry can I just</font>

27
00:01:49,340 --> 00:01:57,750
sorry not a Mac user so<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> perfect</font><font color="#CCCCCC"> so I</font>

28
00:01:55,310 --> 00:01:59,460
cannot make a real demo of course but

29
00:01:57,750 --> 00:02:02,130
you can<font color="#E5E5E5"> look at this demo you have the</font>

30
00:01:59,460 --> 00:02:05,009
you have the the<font color="#CCCCCC"> link zone is easily</font>

31
00:02:02,130 --> 00:02:08,549
findable on<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> I tried this morning</font>

32
00:02:05,009 --> 00:02:10,830
<font color="#CCCCCC">a corpus about the first time and what I</font>

33
00:02:08,550 --> 00:02:14,190
did is<font color="#CCCCCC"> just call the first demo website</font>

34
00:02:10,830 --> 00:02:16,950
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then the</font><font color="#CCCCCC"> website around as long</font><font color="#E5E5E5"> as</font>

35
00:02:14,190 --> 00:02:21,200
they contain the word<font color="#E5E5E5"> lib or open or</font>

36
00:02:16,950 --> 00:02:21,200
free<font color="#CCCCCC"> so basically what you would do is</font>

37
00:02:21,320 --> 00:02:29,760
<font color="#E5E5E5">HTTP first them but org</font><font color="#CCCCCC"> this is the</font>

38
00:02:27,599 --> 00:02:31,409
first<font color="#E5E5E5"> time website</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> would just declare</font>

39
00:02:29,760 --> 00:02:32,010
a web<font color="#CCCCCC"> man today I will explain</font><font color="#E5E5E5"> what it</font>

40
00:02:31,409 --> 00:02:34,890
<font color="#CCCCCC">is</font>

41
00:02:32,010 --> 00:02:38,450
just crawl it<font color="#E5E5E5"> it's run</font><font color="#CCCCCC"> on our server on</font>

42
00:02:34,890 --> 00:02:41,458
<font color="#CCCCCC">champu but the interface is</font><font color="#E5E5E5"> an html5</font>

43
00:02:38,450 --> 00:02:43,589
<font color="#E5E5E5">interface and then it will</font><font color="#CCCCCC"> call</font><font color="#E5E5E5"> on troll</font>

44
00:02:41,459 --> 00:02:45,269
<font color="#E5E5E5">since I've done that I</font><font color="#CCCCCC"> can show you the</font>

45
00:02:43,590 --> 00:02:50,129
network<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we obtain after a moment</font>

46
00:02:45,269 --> 00:02:51,599
<font color="#E5E5E5">and well let's put the</font><font color="#CCCCCC"> colors so for</font>

47
00:02:50,129 --> 00:02:54,989
instance here I have tagged the<font color="#E5E5E5"> web</font>

48
00:02:51,599 --> 00:02:57,238
<font color="#E5E5E5">sites and you can see that the the were</font>

49
00:02:54,989 --> 00:02:59,909
the website with<font color="#E5E5E5"> Libra in purple the one</font>

50
00:02:57,239 --> 00:03:02,280
will open<font color="#CCCCCC"> are in blue and</font><font color="#E5E5E5"> wine with free</font>

51
00:02:59,909 --> 00:03:03,840
<font color="#CCCCCC">re-entry</font><font color="#E5E5E5"> so but it's not very very</font>

52
00:03:02,280 --> 00:03:07,920
interesting but at least you have an

53
00:03:03,840 --> 00:03:14,400
idea of what we try to do can you just

54
00:03:07,920 --> 00:03:16,738
put<font color="#CCCCCC"> me back on</font><font color="#E5E5E5"> the yeah okay</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> main</font>

55
00:03:14,400 --> 00:03:18,329
issue<font color="#E5E5E5"> here is</font><font color="#CCCCCC"> that we have a huge amount</font>

56
00:03:16,739 --> 00:03:20,489
of web pages but web pages are<font color="#E5E5E5"> not very</font>

57
00:03:18,329 --> 00:03:23,370
usable<font color="#E5E5E5"> because we have so many of them</font>

58
00:03:20,489 --> 00:03:24,750
what we intuitively<font color="#E5E5E5"> reason on as a</font>

59
00:03:23,370 --> 00:03:26,940
researcher is something that such as a

60
00:03:24,750 --> 00:03:29,970
website<font color="#E5E5E5"> but not</font><font color="#CCCCCC"> always</font><font color="#E5E5E5"> a website</font>

61
00:03:26,940 --> 00:03:31,859
unfortunately so we have to work on the

62
00:03:29,970 --> 00:03:33,540
structure<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the URL so</font><font color="#CCCCCC"> that we can have</font>

63
00:03:31,859 --> 00:03:37,169
an intuitive notion of website<font color="#E5E5E5"> that we</font>

64
00:03:33,540 --> 00:03:38,489
will call web entity<font color="#E5E5E5"> so basically we</font>

65
00:03:37,169 --> 00:03:40,169
took a nice the URL in<font color="#CCCCCC"> each different</font>

66
00:03:38,489 --> 00:03:42,180
<font color="#E5E5E5">parts and we reorder</font><font color="#CCCCCC"> it that's pretty</font>

67
00:03:40,169 --> 00:03:44,579
common<font color="#CCCCCC"> into what we</font><font color="#E5E5E5"> could LRU which is</font>

68
00:03:42,180 --> 00:03:46,440
reverse URL if you want it's not

69
00:03:44,579 --> 00:03:49,379
<font color="#E5E5E5">completely reverses from the most</font>

70
00:03:46,440 --> 00:03:52,169
generic<font color="#CCCCCC"> part to the most specific parts</font>

71
00:03:49,379 --> 00:03:54,599
so the first<font color="#E5E5E5"> part before the path is</font>

72
00:03:52,169 --> 00:03:56,280
reversed<font color="#E5E5E5"> actually they look more like</font>

73
00:03:54,599 --> 00:03:58,108
<font color="#CCCCCC">that but</font><font color="#E5E5E5"> for the sake of simplification</font>

74
00:03:56,280 --> 00:04:00,120
in my slide<font color="#CCCCCC"> I will just stick to</font>

75
00:03:58,109 --> 00:04:04,799
<font color="#E5E5E5">something a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> easier</font><font color="#CCCCCC"> to</font>

76
00:04:00,120 --> 00:04:07,169
understand so if you do that<font color="#E5E5E5"> allow use</font>

77
00:04:04,799 --> 00:04:08,639
have a tree structure<font color="#CCCCCC"> okay</font>

78
00:04:07,169 --> 00:04:11,400
here we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> different pages</font><font color="#E5E5E5"> in</font>

79
00:04:08,639 --> 00:04:12,870
Wikipedia<font color="#E5E5E5"> three articles and this one is</font>

80
00:04:11,400 --> 00:04:17,250
if you click<font color="#CCCCCC"> on history in</font><font color="#E5E5E5"> Wikipedia you</font>

81
00:04:12,870 --> 00:04:19,048
have the history<font color="#E5E5E5"> page about fish here I</font>

82
00:04:17,250 --> 00:04:20,430
believe no cat so<font color="#CCCCCC"> it doesn't have</font><font color="#E5E5E5"> the</font>

83
00:04:19,048 --> 00:04:23,400
<font color="#E5E5E5">same structure but</font><font color="#CCCCCC"> at least the first</font>

84
00:04:20,430 --> 00:04:25,380
<font color="#CCCCCC">part mutual eyes is between the</font>

85
00:04:23,400 --> 00:04:28,880
different URLs<font color="#E5E5E5"> and then you have the</font>

86
00:04:25,380 --> 00:04:28,880
slash wiki slash article

87
00:04:34,780 --> 00:04:36,840
<font color="#CCCCCC">you</font>

88
00:04:44,529 --> 00:04:48,999
<font color="#E5E5E5">site if you want that we call web and</font>

89
00:04:46,479 --> 00:04:51,128
<font color="#CCCCCC">city if you put it</font><font color="#E5E5E5"> here we have the</font>

90
00:04:48,999 --> 00:04:53,979
<font color="#E5E5E5">Wikipedia entity if you put it after</font>

91
00:04:51,129 --> 00:04:55,209
Wikipedia<font color="#E5E5E5"> at en</font><font color="#CCCCCC"> intuitive een dot</font>

92
00:04:53,979 --> 00:04:57,938
wikipedia.org you have the English

93
00:04:55,209 --> 00:05:00,129
<font color="#CCCCCC">Wikipedia if you put it</font><font color="#E5E5E5"> on bird</font>

94
00:04:57,939 --> 00:05:01,269
you have<font color="#E5E5E5"> just the bird page which is the</font>

95
00:05:00,129 --> 00:05:03,639
<font color="#CCCCCC">entity that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> relevant with the</font>

96
00:05:01,269 --> 00:05:06,039
analysis and you can of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> have</font>

97
00:05:03,639 --> 00:05:08,019
mutable<font color="#CCCCCC"> Flags</font><font color="#E5E5E5"> so if you do that you have</font>

98
00:05:06,039 --> 00:05:11,979
<font color="#E5E5E5">Wikipedia and also different articles</font>

99
00:05:08,019 --> 00:05:14,649
that<font color="#E5E5E5"> might be different entities so</font><font color="#CCCCCC"> lets</font>

100
00:05:11,979 --> 00:05:16,899
flesh that out with<font color="#CCCCCC"> some typical users</font>

101
00:05:14,649 --> 00:05:19,599
<font color="#E5E5E5">our first users is</font><font color="#CCCCCC"> audrey she wants to</font>

102
00:05:16,899 --> 00:05:21,309
study<font color="#E5E5E5"> the web in the</font><font color="#CCCCCC"> sense of actors she</font>

103
00:05:19,599 --> 00:05:24,039
seized<font color="#CCCCCC"> web sites connecting together so</font>

104
00:05:21,309 --> 00:05:27,759
what she would<font color="#CCCCCC"> have in this case is</font>

105
00:05:24,039 --> 00:05:30,419
<font color="#CCCCCC">different domains and</font><font color="#E5E5E5"> possibly facebook</font>

106
00:05:27,759 --> 00:05:33,639
profiles<font color="#CCCCCC"> okay</font>

107
00:05:30,419 --> 00:05:36,729
in another use case<font color="#E5E5E5"> Bernard wants to</font>

108
00:05:33,639 --> 00:05:38,469
<font color="#E5E5E5">study animal whatever animals</font>

109
00:05:36,729 --> 00:05:40,779
represented on Wikipedia and<font color="#CCCCCC"> this is in</font>

110
00:05:38,469 --> 00:05:42,909
this<font color="#E5E5E5"> situation it would be about</font>

111
00:05:40,779 --> 00:05:44,589
<font color="#E5E5E5">different Wikipedia articles as</font>

112
00:05:42,909 --> 00:05:47,379
different<font color="#E5E5E5"> entities and</font><font color="#CCCCCC"> we can have sort</font>

113
00:05:44,589 --> 00:05:49,149
<font color="#E5E5E5">of a meta flag spawning flags at the</font>

114
00:05:47,379 --> 00:05:51,219
next<font color="#E5E5E5"> level so that we</font><font color="#CCCCCC"> know that</font><font color="#E5E5E5"> all we</font>

115
00:05:49,149 --> 00:05:55,449
<font color="#E5E5E5">keeper that Wikipedia pages are</font>

116
00:05:51,219 --> 00:05:58,299
different pages<font color="#E5E5E5"> different</font><font color="#CCCCCC"> quantities and</font>

117
00:05:55,449 --> 00:06:00,369
finally an even<font color="#E5E5E5"> more common use case is</font>

118
00:05:58,299 --> 00:06:02,409
someone who<font color="#E5E5E5"> wants to study actors and</font>

119
00:06:00,369 --> 00:06:04,449
documents so some<font color="#CCCCCC"> of the entities</font><font color="#E5E5E5"> are</font>

120
00:06:02,409 --> 00:06:06,219
documents and<font color="#E5E5E5"> other entities are actors</font>

121
00:06:04,449 --> 00:06:08,199
<font color="#E5E5E5">so in this situation some websites are</font>

122
00:06:06,219 --> 00:06:11,169
considered considered<font color="#E5E5E5"> as actors but</font><font color="#CCCCCC"> also</font>

123
00:06:08,199 --> 00:06:13,449
this researcher<font color="#E5E5E5"> I want to look into some</font>

124
00:06:11,169 --> 00:06:16,029
<font color="#E5E5E5">articles of the</font><font color="#CCCCCC"> gwacheon and pick them</font>

125
00:06:13,449 --> 00:06:17,859
as relevant<font color="#CCCCCC"> so she's studying migrations</font>

126
00:06:16,029 --> 00:06:19,599
so some articles<font color="#CCCCCC"> about migrations are</font>

127
00:06:17,859 --> 00:06:21,489
relevant<font color="#CCCCCC"> the others are</font><font color="#E5E5E5"> not and they</font>

128
00:06:19,599 --> 00:06:25,719
should be considered just<font color="#CCCCCC"> a part of the</font>

129
00:06:21,489 --> 00:06:27,609
rest of the blog<font color="#E5E5E5"> and website so if I put</font>

130
00:06:25,719 --> 00:06:30,069
colors it<font color="#CCCCCC"> needs then when</font><font color="#E5E5E5"> with a flag</font>

131
00:06:27,609 --> 00:06:31,748
you declares<font color="#E5E5E5"> sub I don't want it</font><font color="#CCCCCC"> if you</font>

132
00:06:30,069 --> 00:06:33,909
<font color="#CCCCCC">want but there are considered</font><font color="#E5E5E5"> different</font>

133
00:06:31,749 --> 00:06:36,459
entities<font color="#E5E5E5"> and the rest so you have this</font>

134
00:06:33,909 --> 00:06:39,129
word<font color="#E5E5E5"> invocation of entities this is</font>

135
00:06:36,459 --> 00:06:40,449
necessary<font color="#E5E5E5"> to the kind of analysis</font><font color="#CCCCCC"> we</font>

136
00:06:39,129 --> 00:06:42,549
<font color="#E5E5E5">want to do in the</font><font color="#CCCCCC"> social sciences</font><font color="#E5E5E5"> and</font>

137
00:06:40,449 --> 00:06:45,519
this brings a lot<font color="#E5E5E5"> of complexity to the</font>

138
00:06:42,549 --> 00:06:49,119
way we can structure a memory structure

139
00:06:45,519 --> 00:06:51,249
so what we need is<font color="#E5E5E5"> to add tens of</font>

140
00:06:49,119 --> 00:06:52,929
millions of<font color="#CCCCCC"> alar use that's</font><font color="#E5E5E5"> the kind of</font>

141
00:06:51,249 --> 00:06:55,059
volume<font color="#E5E5E5"> we want to address</font><font color="#CCCCCC"> hundreds</font><font color="#E5E5E5"> of</font>

142
00:06:52,929 --> 00:06:56,948
<font color="#E5E5E5">millions of links between webpages</font>

143
00:06:55,059 --> 00:06:57,910
we want to edit<font color="#E5E5E5"> the web entities</font>

144
00:06:56,949 --> 00:06:59,710
afterwards

145
00:06:57,910 --> 00:07:01,060
and not reindex<font color="#CCCCCC"> each time</font><font color="#E5E5E5"> because the</font>

146
00:06:59,710 --> 00:07:03,130
users want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change their entities</font>

147
00:07:01,060 --> 00:07:05,380
<font color="#E5E5E5">because they don't agree with what the</font>

148
00:07:03,130 --> 00:07:05,890
software<font color="#E5E5E5"> does by it by itself</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> in a</font>

149
00:07:05,380 --> 00:07:07,780
sense

150
00:07:05,890 --> 00:07:10,419
researchers always want<font color="#E5E5E5"> to tweak their</font>

151
00:07:07,780 --> 00:07:11,739
results and we want to know we<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

152
00:07:10,420 --> 00:07:13,420
<font color="#E5E5E5">be able to get all the</font><font color="#CCCCCC"> pages in the</font><font color="#E5E5E5"> web</font>

153
00:07:11,740 --> 00:07:16,060
<font color="#CCCCCC">man TT</font><font color="#E5E5E5"> we want to be able to know in</font>

154
00:07:13,420 --> 00:07:18,550
which web entities<font color="#E5E5E5"> is a given page and</font>

155
00:07:16,060 --> 00:07:20,560
to get the graph of web entities<font color="#E5E5E5"> because</font>

156
00:07:18,550 --> 00:07:22,060
this is the purpose we want<font color="#E5E5E5"> to know at</font>

157
00:07:20,560 --> 00:07:24,040
each point the graph of web entities

158
00:07:22,060 --> 00:07:26,050
<font color="#E5E5E5">even though we move the flags and</font>

159
00:07:24,040 --> 00:07:28,870
redefine the boundaries of the web

160
00:07:26,050 --> 00:07:31,180
entities<font color="#E5E5E5"> so it's a tree</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> of the</font>

161
00:07:28,870 --> 00:07:33,130
LRU structure it's a graph<font color="#E5E5E5"> because of</font>

162
00:07:31,180 --> 00:07:35,430
all the<font color="#E5E5E5"> links between the</font><font color="#CCCCCC"> pages that we</font>

163
00:07:33,130 --> 00:07:39,159
use to infer links between the entities

164
00:07:35,430 --> 00:07:49,240
how to implement that<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I'm gonna</font>

165
00:07:39,160 --> 00:07:51,700
<font color="#E5E5E5">give the mic to and I am gonna present</font>

166
00:07:49,240 --> 00:08:04,750
<font color="#E5E5E5">to you the first implementation that we</font>

167
00:07:51,700 --> 00:08:07,750
did I'm gonna show you the<font color="#CCCCCC"> first</font>

168
00:08:04,750 --> 00:08:09,340
implementation<font color="#E5E5E5"> we tried that start that</font>

169
00:08:07,750 --> 00:08:12,550
was<font color="#CCCCCC"> started like at the beginning of the</font>

170
00:08:09,340 --> 00:08:15,669
<font color="#CCCCCC">project of the of the project</font><font color="#E5E5E5"> like seven</font>

171
00:08:12,550 --> 00:08:19,600
years<font color="#E5E5E5"> ago</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> simply by using the</font>

172
00:08:15,670 --> 00:08:22,990
<font color="#CCCCCC">scene as you know</font><font color="#E5E5E5"> because we want a tree</font>

173
00:08:19,600 --> 00:08:25,210
and<font color="#E5E5E5"> Racine allows you to create an index</font>

174
00:08:22,990 --> 00:08:27,700
<font color="#E5E5E5">of elements</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are searchable by</font>

175
00:08:25,210 --> 00:08:32,650
prefix so when you have a tree and you

176
00:08:27,700 --> 00:08:36,309
just want<font color="#CCCCCC"> to collect your pages I mean</font>

177
00:08:32,650 --> 00:08:39,968
the three<font color="#CCCCCC"> of you are else is just simple</font>

178
00:08:36,309 --> 00:08:42,880
prefixes that<font color="#E5E5E5"> you can query a graph by</font>

179
00:08:39,969 --> 00:08:45,490
just indexing<font color="#E5E5E5"> a couple of pages like</font>

180
00:08:42,880 --> 00:08:49,689
<font color="#CCCCCC">source target</font><font color="#E5E5E5"> and then you can just like</font>

181
00:08:45,490 --> 00:08:52,960
query all links<font color="#CCCCCC"> to this target</font><font color="#E5E5E5"> by</font>

182
00:08:49,690 --> 00:08:56,800
querying<font color="#E5E5E5"> the prefix or occurring all</font>

183
00:08:52,960 --> 00:09:00,370
links from this source but the problem

184
00:08:56,800 --> 00:09:02,949
is not only<font color="#E5E5E5"> the web entities are dynamic</font>

185
00:09:00,370 --> 00:09:05,710
as a<font color="#CCCCCC"> mature explained</font><font color="#E5E5E5"> because users want</font>

186
00:09:02,950 --> 00:09:12,010
<font color="#E5E5E5">to put flags at different places at some</font>

187
00:09:05,710 --> 00:09:14,740
moments<font color="#E5E5E5"> but more I mean because of that</font>

188
00:09:12,010 --> 00:09:17,860
links are aggregated<font color="#E5E5E5"> because we have</font>

189
00:09:14,740 --> 00:09:19,960
like links between<font color="#E5E5E5"> pages and so links</font>

190
00:09:17,860 --> 00:09:22,090
between web entities are all the links

191
00:09:19,960 --> 00:09:25,120
between the prefixes of a web entity

192
00:09:22,090 --> 00:09:27,580
that are<font color="#E5E5E5"> aggregated together and so as</font>

193
00:09:25,120 --> 00:09:30,040
mature said we cannot just store them<font color="#E5E5E5"> we</font>

194
00:09:27,580 --> 00:09:34,150
have to compute<font color="#E5E5E5"> them regularly</font><font color="#CCCCCC"> when</font>

195
00:09:30,040 --> 00:09:36,780
things are changing<font color="#E5E5E5"> and also do you</font>

196
00:09:34,150 --> 00:09:39,910
remember we're<font color="#CCCCCC"> not yes like</font><font color="#E5E5E5"> web entities</font>

197
00:09:36,780 --> 00:09:41,980
here but also here so<font color="#E5E5E5"> there are web</font>

198
00:09:39,910 --> 00:09:44,740
entities that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> survive</font><font color="#E5E5E5"> entities which</font>

199
00:09:41,980 --> 00:09:46,570
prefixes are included in prefixes<font color="#CCCCCC"> of</font>

200
00:09:44,740 --> 00:09:48,700
other web entities<font color="#CCCCCC"> so when you're going</font>

201
00:09:46,570 --> 00:09:52,030
<font color="#CCCCCC">to</font><font color="#E5E5E5"> query you're going to find the same</font>

202
00:09:48,700 --> 00:09:54,520
prefix is embedded in in each other<font color="#E5E5E5"> so</font>

203
00:09:52,030 --> 00:09:57,310
this create another limit<font color="#E5E5E5"> is that the</font>

204
00:09:54,520 --> 00:09:59,620
querying with loose with<font color="#CCCCCC"> Racine now is</font>

205
00:09:57,310 --> 00:10:02,709
<font color="#E5E5E5">making is becoming a lot</font><font color="#CCCCCC"> more complex</font>

206
00:09:59,620 --> 00:10:04,600
<font color="#E5E5E5">and a lot more slower because as soon as</font>

207
00:10:02,710 --> 00:10:07,210
<font color="#E5E5E5">you have sub web entities and sub</font>

208
00:10:04,600 --> 00:10:10,960
prefixes you need to do queries<font color="#E5E5E5"> with</font><font color="#CCCCCC"> and</font>

209
00:10:07,210 --> 00:10:13,060
<font color="#CCCCCC">ad not clauses to your queries to say I</font>

210
00:10:10,960 --> 00:10:14,830
want<font color="#E5E5E5"> to follow this prefix</font><font color="#CCCCCC"> but not all</font>

211
00:10:13,060 --> 00:10:19,390
<font color="#CCCCCC">of those before or not</font><font color="#E5E5E5"> all of those</font>

212
00:10:14,830 --> 00:10:21,220
behind so this makes the car is a<font color="#E5E5E5"> little</font>

213
00:10:19,390 --> 00:10:25,480
<font color="#E5E5E5">bit more complex so a bit more slow and</font>

214
00:10:21,220 --> 00:10:28,720
so<font color="#CCCCCC"> as turnarounds we started cashing a</font>

215
00:10:25,480 --> 00:10:31,150
lot of things<font color="#CCCCCC"> cashing in ram</font><font color="#E5E5E5"> but also</font>

216
00:10:28,720 --> 00:10:34,780
cashing in<font color="#E5E5E5"> Lachine by adding an</font>

217
00:10:31,150 --> 00:10:37,860
intermediate level<font color="#E5E5E5"> of an index of links</font>

218
00:10:34,780 --> 00:10:41,920
between pages and web entities<font color="#E5E5E5"> and this</font>

219
00:10:37,860 --> 00:10:44,770
so we were querying<font color="#E5E5E5"> a first time storing</font>

220
00:10:41,920 --> 00:10:47,439
<font color="#CCCCCC">Trump</font><font color="#E5E5E5"> already those intermediate objects</font>

221
00:10:44,770 --> 00:10:49,569
and then querying again<font color="#E5E5E5"> these ones to</font>

222
00:10:47,440 --> 00:10:54,670
get<font color="#E5E5E5"> the links between source and target</font>

223
00:10:49,570 --> 00:10:57,850
web entities result was that<font color="#E5E5E5"> it worked</font>

224
00:10:54,670 --> 00:11:00,160
<font color="#E5E5E5">for like so that the first four years of</font>

225
00:10:57,850 --> 00:11:03,010
<font color="#E5E5E5">the</font><font color="#CCCCCC"> project but</font><font color="#E5E5E5"> as soon as we add huge</font>

226
00:11:00,160 --> 00:11:06,219
<font color="#E5E5E5">caucuses they were just like getting</font>

227
00:11:03,010 --> 00:11:09,010
slow and indexing was taking so much

228
00:11:06,220 --> 00:11:11,230
more time than<font color="#CCCCCC"> actually crawling</font>

229
00:11:09,010 --> 00:11:14,290
so the<font color="#E5E5E5"> crawler were finding many pages</font>

230
00:11:11,230 --> 00:11:17,350
and then when we<font color="#E5E5E5"> want to index we are</font>

231
00:11:14,290 --> 00:11:18,760
getting some stack time and sometimes we

232
00:11:17,350 --> 00:11:21,430
<font color="#E5E5E5">are saying the researchers</font>

233
00:11:18,760 --> 00:11:25,490
well start the crawls<font color="#CCCCCC"> come back in two</font>

234
00:11:21,430 --> 00:11:28,140
<font color="#CCCCCC">days and then you can work on</font><font color="#E5E5E5"> your crop</font>

235
00:11:25,490 --> 00:11:30,840
so this is why we<font color="#CCCCCC"> decided to</font><font color="#E5E5E5"> go to</font>

236
00:11:28,140 --> 00:11:33,060
Copenhagen<font color="#CCCCCC"> for a week</font>

237
00:11:30,840 --> 00:11:36,270
<font color="#E5E5E5">we're mature</font><font color="#CCCCCC"> spent some</font><font color="#E5E5E5"> time as a</font>

238
00:11:33,060 --> 00:11:40,140
researcher<font color="#CCCCCC"> I don't know you say that but</font>

239
00:11:36,270 --> 00:11:42,660
a visiting researcher<font color="#CCCCCC"> and so we went to</font>

240
00:11:40,140 --> 00:11:45,660
<font color="#CCCCCC">see him and try</font><font color="#E5E5E5"> to work for one week</font>

241
00:11:42,660 --> 00:11:48,390
<font color="#CCCCCC">together on tackling</font><font color="#E5E5E5"> this problem so for</font>

242
00:11:45,660 --> 00:11:51,510
brains lab<font color="#E5E5E5"> called</font><font color="#CCCCCC"> turned cloud in</font>

243
00:11:48,390 --> 00:11:53,400
Copenhagen<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we worked simultaneously</font>

244
00:11:51,510 --> 00:11:55,380
on<font color="#E5E5E5"> two prototypes two concurrent</font>

245
00:11:53,400 --> 00:11:58,560
prototypes to try and solve this<font color="#CCCCCC"> problem</font>

246
00:11:55,380 --> 00:12:01,530
<font color="#E5E5E5">one using neo4j</font><font color="#CCCCCC"> and one trying to</font>

247
00:11:58,560 --> 00:12:03,689
<font color="#E5E5E5">rebuild from scratch</font><font color="#CCCCCC"> in java another</font>

248
00:12:01,530 --> 00:12:06,120
<font color="#E5E5E5">structure that would be more in a tree</font>

249
00:12:03,690 --> 00:12:07,980
<font color="#E5E5E5">because we had this this feeling</font><font color="#CCCCCC"> that</font>

250
00:12:06,120 --> 00:12:09,810
the data<font color="#E5E5E5"> that we're manipulating is</font>

251
00:12:07,980 --> 00:12:11,970
really trees and so we should probably

252
00:12:09,810 --> 00:12:16,619
<font color="#E5E5E5">stop</font><font color="#CCCCCC"> stuffing the streets</font>

253
00:12:11,970 --> 00:12:18,950
so that was one week of intense work<font color="#E5E5E5"> all</font>

254
00:12:16,620 --> 00:12:24,690
working together in<font color="#CCCCCC"> those clean</font>

255
00:12:18,950 --> 00:12:26,340
<font color="#E5E5E5">furniture from from Denmark</font><font color="#CCCCCC"> that's all</font>

256
00:12:24,690 --> 00:12:29,310
the<font color="#E5E5E5"> comments that</font><font color="#CCCCCC"> were made on the two</font>

257
00:12:26,340 --> 00:12:32,840
prototypes<font color="#CCCCCC"> I think the top one is neo4j</font>

258
00:12:29,310 --> 00:12:35,310
<font color="#E5E5E5">when the bottom one is is a Java and so</font>

259
00:12:32,840 --> 00:12:37,980
you can see all the time when we worked

260
00:12:35,310 --> 00:12:41,010
<font color="#E5E5E5">at this time and this is a visualization</font>

261
00:12:37,980 --> 00:12:42,110
<font color="#CCCCCC">of all the beers that</font><font color="#E5E5E5"> we had multiple</font>

262
00:12:41,010 --> 00:12:45,120
times

263
00:12:42,110 --> 00:12:47,010
because in<font color="#E5E5E5"> Denmark maybe you know there</font>

264
00:12:45,120 --> 00:12:50,490
is this brand called<font color="#CCCCCC"> meteor</font><font color="#E5E5E5"> and you have</font>

265
00:12:47,010 --> 00:12:53,240
to try it so<font color="#CCCCCC"> this brought us to the new</font>

266
00:12:50,490 --> 00:12:53,240
photo prototype

267
00:13:02,960 --> 00:13:08,760
<font color="#E5E5E5">okay sorry for the intermission so as</font>

268
00:13:06,690 --> 00:13:10,589
the Benjamin<font color="#E5E5E5"> sent we tried to prototype</font>

269
00:13:08,760 --> 00:13:11,189
<font color="#E5E5E5">so the first one was actually using</font>

270
00:13:10,589 --> 00:13:13,830
<font color="#E5E5E5">neo4j</font>

271
00:13:11,190 --> 00:13:17,100
<font color="#E5E5E5">why is that because like actually you so</font>

272
00:13:13,830 --> 00:13:18,630
we<font color="#E5E5E5"> have a graph</font><font color="#CCCCCC"> rather complex</font><font color="#E5E5E5"> graph and</font>

273
00:13:17,100 --> 00:13:20,540
therefore<font color="#E5E5E5"> J is a graph</font><font color="#CCCCCC"> database so we</font>

274
00:13:18,630 --> 00:13:23,760
<font color="#E5E5E5">told ourselves this could be a good idea</font>

275
00:13:20,540 --> 00:13:25,770
so it's a tree it's a graph so this<font color="#E5E5E5"> is</font>

276
00:13:23,760 --> 00:13:28,620
actually the shimmer of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> neo4j</font>

277
00:13:25,770 --> 00:13:31,380
database we devised<font color="#E5E5E5"> so each</font><font color="#CCCCCC"> of those</font>

278
00:13:28,620 --> 00:13:33,720
nodes are actually<font color="#CCCCCC"> a stem of the</font><font color="#E5E5E5"> la</font>

279
00:13:31,380 --> 00:13:35,370
<font color="#CCCCCC">Russe like the rivers URL so it's</font><font color="#E5E5E5"> just</font>

280
00:13:33,720 --> 00:13:37,730
<font color="#E5E5E5">like for instance here you've got HTTP</font>

281
00:13:35,370 --> 00:13:40,620
here you've got something like<font color="#CCCCCC"> Google</font>

282
00:13:37,730 --> 00:13:42,750
<font color="#E5E5E5">www and here you've got like actual</font>

283
00:13:40,620 --> 00:13:45,600
pages<font color="#CCCCCC"> so you've got the tree structure</font>

284
00:13:42,750 --> 00:13:48,330
<font color="#E5E5E5">and between those pages you also have</font>

285
00:13:45,600 --> 00:13:52,740
<font color="#E5E5E5">links because this is the web so this is</font>

286
00:13:48,330 --> 00:13:56,370
quite<font color="#E5E5E5"> difficult and a bit cumbersome so</font>

287
00:13:52,740 --> 00:13:58,350
the challenge we had<font color="#CCCCCC"> was like being able</font>

288
00:13:56,370 --> 00:14:00,899
to like insert the<font color="#E5E5E5"> data in the database</font>

289
00:13:58,350 --> 00:14:03,089
and like<font color="#E5E5E5"> being able</font><font color="#CCCCCC"> to query the data in</font>

290
00:14:00,899 --> 00:14:06,209
the database<font color="#CCCCCC"> so we had to rely on really</font>

291
00:14:03,089 --> 00:14:08,010
<font color="#E5E5E5">complex query and so some</font><font color="#CCCCCC"> takeaway bonus</font>

292
00:14:06,209 --> 00:14:10,319
and wine is really<font color="#E5E5E5"> your friend if you</font>

293
00:14:08,010 --> 00:14:12,870
have to do conditions in<font color="#E5E5E5"> here for</font><font color="#CCCCCC"> j4h is</font>

294
00:14:10,320 --> 00:14:15,930
your friend<font color="#CCCCCC"> reserves case coalesce and</font>

295
00:14:12,870 --> 00:14:18,029
we even tried some stored procedures so

296
00:14:15,930 --> 00:14:19,829
for instance this is<font color="#CCCCCC"> the like a</font>

297
00:14:18,029 --> 00:14:21,900
simplified version<font color="#E5E5E5"> of the query we used</font>

298
00:14:19,830 --> 00:14:24,810
to insert the pages<font color="#E5E5E5"> so this is a bit</font>

299
00:14:21,900 --> 00:14:28,380
<font color="#E5E5E5">yeah cumbersome here this is two</font>

300
00:14:24,810 --> 00:14:30,930
<font color="#E5E5E5">examples of accepts of queries cipher</font>

301
00:14:28,380 --> 00:14:33,180
queries we used to like<font color="#E5E5E5"> compute the</font>

302
00:14:30,930 --> 00:14:35,370
graph of<font color="#CCCCCC"> weapon cities sitting on top of</font>

303
00:14:33,180 --> 00:14:36,959
the pages<font color="#E5E5E5"> so</font><font color="#CCCCCC"> here for</font><font color="#E5E5E5"> instance</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> see</font>

304
00:14:35,370 --> 00:14:38,850
that we even<font color="#E5E5E5"> try like</font><font color="#CCCCCC"> the stored</font>

305
00:14:36,959 --> 00:14:40,770
procedures which were<font color="#CCCCCC"> like developer</font>

306
00:14:38,850 --> 00:14:44,400
developed by<font color="#E5E5E5"> Benoit which is somewhere</font>

307
00:14:40,770 --> 00:14:46,319
in the room here and yeah<font color="#E5E5E5"> so as it</font>

308
00:14:44,400 --> 00:14:48,000
<font color="#E5E5E5">frames it's not</font><font color="#CCCCCC"> as straightforward to</font>

309
00:14:46,320 --> 00:14:49,320
traverse trees in<font color="#CCCCCC"> their folder as it</font>

310
00:14:48,000 --> 00:14:51,060
<font color="#CCCCCC">seems because we have a tree we have a</font>

311
00:14:49,320 --> 00:14:53,010
graph<font color="#CCCCCC"> that it's not</font><font color="#E5E5E5"> really yeah it's</font>

312
00:14:51,060 --> 00:14:54,899
really<font color="#E5E5E5"> useful to make like graph pattern</font>

313
00:14:53,010 --> 00:14:57,390
queries but<font color="#E5E5E5"> if you have to like query a</font>

314
00:14:54,899 --> 00:15:00,240
tree go down the tree and<font color="#E5E5E5"> go up the tree</font>

315
00:14:57,390 --> 00:15:04,199
<font color="#CCCCCC">and so on use some depth-first search is</font>

316
00:15:00,240 --> 00:15:06,630
a bit cumbersome so we went<font color="#E5E5E5"> to</font><font color="#CCCCCC"> onto a</font>

317
00:15:04,200 --> 00:15:10,410
second prototype which is called the

318
00:15:06,630 --> 00:15:10,930
traffic so for this<font color="#CCCCCC"> graph</font>

319
00:15:10,410 --> 00:15:13,660
what we

320
00:15:10,930 --> 00:15:15,670
was<font color="#E5E5E5"> designed our own on file index like</font>

321
00:15:13,660 --> 00:15:19,110
to store the complicated multi-level

322
00:15:15,670 --> 00:15:22,060
graph so people<font color="#E5E5E5"> told us not to do it</font>

323
00:15:19,110 --> 00:15:24,070
that's<font color="#E5E5E5"> the base so yeah it certainly</font>

324
00:15:22,060 --> 00:15:25,510
seems<font color="#CCCCCC"> crazy so building an unfired</font>

325
00:15:24,070 --> 00:15:27,520
structure from<font color="#E5E5E5"> scratch is</font><font color="#CCCCCC"> not really</font>

326
00:15:25,510 --> 00:15:30,970
easy we are<font color="#E5E5E5"> not really expert of this</font>

327
00:15:27,520 --> 00:15:32,290
<font color="#E5E5E5">subject</font><font color="#CCCCCC"> so why would</font><font color="#E5E5E5"> you do that</font><font color="#CCCCCC"> because</font>

328
00:15:30,970 --> 00:15:34,930
you<font color="#CCCCCC"> have like you a lot of solution</font>

329
00:15:32,290 --> 00:15:37,360
<font color="#E5E5E5">already existing solution what if the</font>

330
00:15:34,930 --> 00:15:39,489
like the<font color="#CCCCCC"> structure crashes what if the</font>

331
00:15:37,360 --> 00:15:42,940
server like just<font color="#CCCCCC"> shutdowns and your data</font>

332
00:15:39,490 --> 00:15:45,310
is<font color="#CCCCCC"> lost</font><font color="#E5E5E5"> so it's not so crazy</font>

333
00:15:42,940 --> 00:15:46,720
<font color="#E5E5E5">why because like you cannot get faster</font>

334
00:15:45,310 --> 00:15:49,989
than the payload data structure it's

335
00:15:46,720 --> 00:15:51,970
just the fact we don't<font color="#E5E5E5"> need deletions</font>

336
00:15:49,990 --> 00:15:53,950
<font color="#E5E5E5">which is a huge win</font><font color="#CCCCCC"> because the a lot</font><font color="#E5E5E5"> of</font>

337
00:15:51,970 --> 00:15:57,550
the complexity<font color="#CCCCCC"> of that custom structures</font>

338
00:15:53,950 --> 00:15:59,980
is always related to<font color="#E5E5E5"> deletions and we</font>

339
00:15:57,550 --> 00:16:02,949
don't need an<font color="#E5E5E5"> asset database for us it's</font>

340
00:15:59,980 --> 00:16:06,010
totally<font color="#CCCCCC"> over</font><font color="#E5E5E5"> killing so we just need an</font>

341
00:16:02,950 --> 00:16:08,860
index<font color="#E5E5E5"> but a custom one so an index does</font>

342
00:16:06,010 --> 00:16:10,660
not store any<font color="#E5E5E5"> original data why because</font>

343
00:16:08,860 --> 00:16:12,730
in our<font color="#E5E5E5"> case we've got a MongoDB which</font>

344
00:16:10,660 --> 00:16:13,270
stores all<font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> data in a reliable</font>

345
00:16:12,730 --> 00:16:16,300
<font color="#E5E5E5">way</font>

346
00:16:13,270 --> 00:16:17,709
and this<font color="#E5E5E5"> means</font><font color="#CCCCCC"> that the index can be</font>

347
00:16:16,300 --> 00:16:19,900
completely lost

348
00:16:17,709 --> 00:16:22,060
destroy<font color="#CCCCCC"> actually destroy</font><font color="#E5E5E5"> we don't lose</font>

349
00:16:19,900 --> 00:16:23,430
any data we can recompute<font color="#CCCCCC"> the index so</font>

350
00:16:22,060 --> 00:16:31,180
no biggie

351
00:16:23,430 --> 00:16:34,300
so what's a trap it's a trap<font color="#E5E5E5"> so the trap</font>

352
00:16:31,180 --> 00:16:36,370
is a subtle mix between a tree<font color="#E5E5E5"> so I</font>

353
00:16:34,300 --> 00:16:38,920
think<font color="#E5E5E5"> I know people like</font><font color="#CCCCCC"> I call it a try</font>

354
00:16:36,370 --> 00:16:41,980
or tree I will call it a tree and a

355
00:16:38,920 --> 00:16:45,160
graph<font color="#E5E5E5"> so and the innovative incredibly</font>

356
00:16:41,980 --> 00:16:48,490
innovative name so as you remember<font color="#E5E5E5"> from</font>

357
00:16:45,160 --> 00:16:50,290
last<font color="#CCCCCC"> time so</font><font color="#E5E5E5"> we've got a try a tree of</font>

358
00:16:48,490 --> 00:16:52,959
<font color="#E5E5E5">areas which are like the reverse the</font>

359
00:16:50,290 --> 00:16:55,660
real thing is so on this thing<font color="#CCCCCC"> you have</font>

360
00:16:52,959 --> 00:16:58,359
like one character is<font color="#CCCCCC"> actually one node</font>

361
00:16:55,660 --> 00:17:00,699
in<font color="#E5E5E5"> the tree so this is the basic</font><font color="#CCCCCC"> thing</font>

362
00:16:58,360 --> 00:17:03,370
we did it's not optimal<font color="#CCCCCC"> but</font><font color="#E5E5E5"> we will see</font>

363
00:17:00,700 --> 00:17:06,339
<font color="#E5E5E5">that later</font><font color="#CCCCCC"> and on those nodes we will be</font>

364
00:17:03,370 --> 00:17:08,920
able like<font color="#E5E5E5"> to plant flags the marking the</font>

365
00:17:06,339 --> 00:17:10,329
web entities boundaries and so on<font color="#CCCCCC"> so</font>

366
00:17:08,920 --> 00:17:12,760
basically<font color="#CCCCCC"> the thing we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to do</font>

367
00:17:10,329 --> 00:17:15,579
is just like build<font color="#CCCCCC"> a tree which is going</font>

368
00:17:12,760 --> 00:17:19,750
<font color="#E5E5E5">to store at character level the</font><font color="#CCCCCC"> LRA's</font><font color="#E5E5E5"> of</font>

369
00:17:15,579 --> 00:17:22,030
our<font color="#CCCCCC"> graphs</font><font color="#E5E5E5"> that's all so how would how</font>

370
00:17:19,750 --> 00:17:24,010
do we do<font color="#E5E5E5"> that on file so it's quite</font>

371
00:17:22,030 --> 00:17:24,490
simple<font color="#CCCCCC"> we use like fixed</font><font color="#E5E5E5"> ties block of</font>

372
00:17:24,010 --> 00:17:27,609
<font color="#E5E5E5">binary</font>

373
00:17:24,490 --> 00:17:30,429
so for instance<font color="#CCCCCC"> 10 bytes or 80 bytes or</font>

374
00:17:27,609 --> 00:17:32,709
so on we decide something<font color="#CCCCCC"> and because we</font>

375
00:17:30,429 --> 00:17:34,570
have a fixed size<font color="#E5E5E5"> and some other useful</font>

376
00:17:32,710 --> 00:17:36,610
thing we can like access the blocks in

377
00:17:34,570 --> 00:17:39,129
the<font color="#E5E5E5"> file in the random access fashion so</font>

378
00:17:36,610 --> 00:17:42,669
it's<font color="#E5E5E5"> quite fast especially if you have</font>

379
00:17:39,130 --> 00:17:45,820
SSDs<font color="#E5E5E5"> so accessing a specific</font><font color="#CCCCCC"> pages</font>

380
00:17:42,670 --> 00:17:48,330
metadata<font color="#E5E5E5"> is actually done in O of M</font><font color="#CCCCCC"> M</font>

381
00:17:45,820 --> 00:17:51,370
being<font color="#E5E5E5"> the length of the actual</font><font color="#CCCCCC"> la route</font>

382
00:17:48,330 --> 00:17:54,550
so this is an example<font color="#E5E5E5"> of the binary data</font>

383
00:17:51,370 --> 00:17:56,739
<font color="#E5E5E5">we like created for storing</font><font color="#CCCCCC"> the tree</font>

384
00:17:54,550 --> 00:18:00,340
node so<font color="#E5E5E5"> we have like the character data</font>

385
00:17:56,740 --> 00:18:02,640
<font color="#E5E5E5">we have some flags</font><font color="#CCCCCC"> as bits in a byte</font><font color="#E5E5E5"> we</font>

386
00:18:00,340 --> 00:18:06,040
have some pointers<font color="#E5E5E5"> like the next thing</font>

387
00:18:02,640 --> 00:18:07,929
the child the parent<font color="#E5E5E5"> and another thing</font>

388
00:18:06,040 --> 00:18:11,889
which is<font color="#CCCCCC"> a pointer to out links and in</font>

389
00:18:07,929 --> 00:18:13,660
links we are going to see that<font color="#E5E5E5"> now so we</font>

390
00:18:11,890 --> 00:18:16,210
have<font color="#CCCCCC"> a tree</font><font color="#E5E5E5"> but we also have a graph of</font>

391
00:18:13,660 --> 00:18:18,790
pages<font color="#E5E5E5"> so</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> we going</font><font color="#E5E5E5"> like to store</font>

392
00:18:16,210 --> 00:18:20,320
<font color="#E5E5E5">this graph of pages well the second part</font>

393
00:18:18,790 --> 00:18:22,659
of the structure is actually<font color="#CCCCCC"> a distinct</font>

394
00:18:20,320 --> 00:18:26,139
file which is going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> store a bunch of</font>

395
00:18:22,660 --> 00:18:28,240
linked<font color="#CCCCCC"> lists between pages that's</font><font color="#E5E5E5"> all so</font>

396
00:18:26,140 --> 00:18:31,570
we just<font color="#E5E5E5"> need like</font><font color="#CCCCCC"> to store to be able to</font>

397
00:18:28,240 --> 00:18:33,670
store links out and in so this page

398
00:18:31,570 --> 00:18:37,750
points toward this one and this<font color="#CCCCCC"> one is</font>

399
00:18:33,670 --> 00:18:40,210
<font color="#E5E5E5">being pointed at by</font><font color="#CCCCCC"> this one so we</font>

400
00:18:37,750 --> 00:18:43,600
thought this the same way using<font color="#E5E5E5"> fixed</font>

401
00:18:40,210 --> 00:18:45,910
<font color="#E5E5E5">block size of binary data</font><font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> even</font>

402
00:18:43,600 --> 00:18:47,770
more<font color="#CCCCCC"> simpler but</font><font color="#E5E5E5"> like a target a weight</font>

403
00:18:45,910 --> 00:18:49,270
in the<font color="#E5E5E5"> next this means that this block</font>

404
00:18:47,770 --> 00:18:50,530
<font color="#E5E5E5">is actually</font><font color="#CCCCCC"> a stub</font><font color="#E5E5E5"> we just have the</font>

405
00:18:49,270 --> 00:18:52,900
target we don't<font color="#CCCCCC"> have the source of the</font>

406
00:18:50,530 --> 00:18:54,910
link<font color="#E5E5E5"> because</font><font color="#CCCCCC"> the source of the link is</font>

407
00:18:52,900 --> 00:18:57,100
<font color="#CCCCCC">actually like pointing so what this file</font>

408
00:18:54,910 --> 00:18:59,950
so we have got like a pointer in the

409
00:18:57,100 --> 00:19:01,990
tree which point or another file and

410
00:18:59,950 --> 00:19:05,320
this in this one we have<font color="#E5E5E5"> like linked</font>

411
00:19:01,990 --> 00:19:08,040
list<font color="#E5E5E5"> of target weight target weight I</font>

412
00:19:05,320 --> 00:19:11,590
get weight and so<font color="#E5E5E5"> on and so on</font>

413
00:19:08,040 --> 00:19:14,080
quite simple<font color="#CCCCCC"> so now we can store our</font>

414
00:19:11,590 --> 00:19:15,939
links so<font color="#CCCCCC"> we have a graph of pages</font><font color="#E5E5E5"> so we</font>

415
00:19:14,080 --> 00:19:19,270
have the<font color="#CCCCCC"> travel errors we have the graph</font>

416
00:19:15,940 --> 00:19:21,940
<font color="#E5E5E5">of pages so we have a trap so what about</font>

417
00:19:19,270 --> 00:19:23,559
the multi-level graph<font color="#E5E5E5"> because what we</font>

418
00:19:21,940 --> 00:19:25,120
<font color="#E5E5E5">want if you remember correctly is not</font>

419
00:19:23,559 --> 00:19:28,780
<font color="#E5E5E5">being able to query like a graph of</font>

420
00:19:25,120 --> 00:19:30,820
<font color="#CCCCCC">webpages</font><font color="#E5E5E5"> but be able to query the graph</font>

421
00:19:28,780 --> 00:19:34,000
of web entities which are aggregating

422
00:19:30,820 --> 00:19:36,189
and sitting over the graph of pages<font color="#E5E5E5"> so</font>

423
00:19:34,000 --> 00:19:38,350
what we are going to<font color="#E5E5E5"> do is select some</font>

424
00:19:36,190 --> 00:19:40,390
nodes in the tree structure<font color="#E5E5E5"> and flag</font>

425
00:19:38,350 --> 00:19:43,179
telling the tree<font color="#E5E5E5"> that this is the</font>

426
00:19:40,390 --> 00:19:47,320
beginning<font color="#CCCCCC"> of the specific web entity</font>

427
00:19:43,180 --> 00:19:49,660
realm<font color="#E5E5E5"> so it looks like that so we</font><font color="#CCCCCC"> are</font>

428
00:19:47,320 --> 00:19:51,310
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to plant it</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> here here here</font>

429
00:19:49,660 --> 00:19:55,000
and<font color="#CCCCCC"> so on</font><font color="#E5E5E5"> and we are able</font><font color="#CCCCCC"> to like</font>

430
00:19:51,310 --> 00:19:59,980
determine when we are here which web

431
00:19:55,000 --> 00:20:01,990
entity we belong to yeah so now finding

432
00:19:59,980 --> 00:20:05,020
the web entity to which<font color="#E5E5E5"> belong a page is</font>

433
00:20:01,990 --> 00:20:07,410
obvious when<font color="#E5E5E5"> we</font><font color="#CCCCCC"> traverse and what's more</font>

434
00:20:05,020 --> 00:20:10,629
<font color="#E5E5E5">if we bubble up like for instance here</font>

435
00:20:07,410 --> 00:20:12,400
so this is more<font color="#CCCCCC"> clear</font><font color="#E5E5E5"> for instance if</font>

436
00:20:10,630 --> 00:20:14,290
you<font color="#E5E5E5"> go from the link and you go to the</font>

437
00:20:12,400 --> 00:20:16,750
<font color="#E5E5E5">target of the link you will arrive</font>

438
00:20:14,290 --> 00:20:19,180
somewhere here well you<font color="#E5E5E5"> just have to</font>

439
00:20:16,750 --> 00:20:21,210
bubble up towards the<font color="#E5E5E5"> nearest flag and</font>

440
00:20:19,180 --> 00:20:23,320
you know which is your web entity

441
00:20:21,210 --> 00:20:24,430
actually<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't do that because we</font>

442
00:20:23,320 --> 00:20:28,810
<font color="#CCCCCC">don't need</font><font color="#E5E5E5"> to but it's a possibility</font>

443
00:20:24,430 --> 00:20:30,910
<font color="#CCCCCC">which is efficient</font><font color="#E5E5E5"> and this of of course</font>

444
00:20:28,810 --> 00:20:37,300
can<font color="#E5E5E5"> also be cached in RAM if we need to</font>

445
00:20:30,910 --> 00:20:39,220
<font color="#E5E5E5">to speed computations</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> yeah so now</font>

446
00:20:37,300 --> 00:20:41,560
what's<font color="#E5E5E5"> more if you want to like compute</font>

447
00:20:39,220 --> 00:20:43,420
the web entities graph<font color="#E5E5E5"> sitting on top</font><font color="#CCCCCC"> of</font>

448
00:20:41,560 --> 00:20:46,270
the web<font color="#CCCCCC"> pages</font><font color="#E5E5E5"> one you just need to</font>

449
00:20:43,420 --> 00:20:48,880
perform a simple depth-first search on

450
00:20:46,270 --> 00:20:51,040
the tree this seems costly and usually

451
00:20:48,880 --> 00:20:52,570
it is but here there is<font color="#CCCCCC"> no</font><font color="#E5E5E5"> other way</font>

452
00:20:51,040 --> 00:20:54,520
around<font color="#CCCCCC"> because</font><font color="#E5E5E5"> you have to do to scan</font>

453
00:20:52,570 --> 00:20:56,770
the<font color="#CCCCCC"> OL database</font><font color="#E5E5E5"> or at least once and</font>

454
00:20:54,520 --> 00:20:58,810
since the<font color="#E5E5E5"> structure is quite clean</font><font color="#CCCCCC"> and</font>

455
00:20:56,770 --> 00:21:02,110
light<font color="#E5E5E5"> you won't</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> read so much</font>

456
00:20:58,810 --> 00:21:05,679
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> was it</font>

457
00:21:02,110 --> 00:21:08,560
worth it<font color="#CCCCCC"> okay so we did the benchmark</font><font color="#E5E5E5"> on</font>

458
00:21:05,680 --> 00:21:10,690
<font color="#E5E5E5">a small corpus like a sample</font><font color="#CCCCCC"> 10% sample</font>

459
00:21:08,560 --> 00:21:13,629
of a<font color="#CCCCCC"> sizeable corpus about privacy in</font>

460
00:21:10,690 --> 00:21:17,910
<font color="#E5E5E5">data privacy so we have like 1 million</font>

461
00:21:13,630 --> 00:21:23,620
<font color="#E5E5E5">pages 5 million links 20,000 entities in</font>

462
00:21:17,910 --> 00:21:25,570
37<font color="#E5E5E5"> links between those entities so we</font>

463
00:21:23,620 --> 00:21:27,669
did a benchmark<font color="#CCCCCC"> which wrap the trick</font><font color="#E5E5E5"> and</font>

464
00:21:25,570 --> 00:21:30,610
mature like presented the results<font color="#CCCCCC"> of the</font>

465
00:21:27,670 --> 00:21:32,920
benchmark so to index the thing to

466
00:21:30,610 --> 00:21:35,290
insert pages<font color="#E5E5E5"> in the database</font>

467
00:21:32,920 --> 00:21:38,230
Lusine took us like what are in 55

468
00:21:35,290 --> 00:21:42,159
<font color="#CCCCCC">minutes</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> 4j took 100</font><font color="#E5E5E5"> 4</font><font color="#CCCCCC"> minutes and</font>

469
00:21:38,230 --> 00:21:43,510
the<font color="#CCCCCC"> traffic 20 minutes to process</font><font color="#E5E5E5"> the</font>

470
00:21:42,160 --> 00:21:45,430
graph you'll be able like<font color="#CCCCCC"> to query</font><font color="#E5E5E5"> the</font>

471
00:21:43,510 --> 00:21:48,760
graph and get the aggregated graph

472
00:21:45,430 --> 00:21:51,750
<font color="#E5E5E5">listen to 45 minutes now</font><font color="#CCCCCC"> for the 6 in</font>

473
00:21:48,760 --> 00:21:55,360
the traffic<font color="#CCCCCC"> 2 minutes and 35 seconds</font>

474
00:21:51,750 --> 00:21:59,350
<font color="#E5E5E5">for</font><font color="#CCCCCC"> know we are winning</font><font color="#E5E5E5"> on the disk</font>

475
00:21:55,360 --> 00:22:01,330
<font color="#E5E5E5">place</font><font color="#CCCCCC"> loosen to</font><font color="#E5E5E5"> 700 megabytes</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> 4j</font><font color="#CCCCCC"> 1</font>

476
00:21:59,350 --> 00:22:03,879
point<font color="#E5E5E5"> 5 gigabytes in the traffic</font><font color="#CCCCCC"> 1</font>

477
00:22:01,330 --> 00:22:05,340
gigabyte so<font color="#CCCCCC"> listen seems to win here but</font>

478
00:22:03,880 --> 00:22:08,530
not for long

479
00:22:05,340 --> 00:22:11,050
<font color="#CCCCCC">okay so this</font><font color="#E5E5E5"> is what we</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> did</font><font color="#CCCCCC"> in</font>

480
00:22:08,530 --> 00:22:14,470
Copenhagen so after Copenhagen<font color="#CCCCCC"> we came</font>

481
00:22:11,050 --> 00:22:16,300
back<font color="#E5E5E5"> we like chilled and we decide to</font>

482
00:22:14,470 --> 00:22:18,580
redevelop<font color="#E5E5E5"> all the structure in Python</font>

483
00:22:16,300 --> 00:22:21,070
why because we wanted<font color="#E5E5E5"> to limit the</font>

484
00:22:18,580 --> 00:22:25,149
amount of languages uses<font color="#CCCCCC"> by used by like</font>

485
00:22:21,070 --> 00:22:27,250
our crawlers<font color="#E5E5E5"> core and by doing</font><font color="#CCCCCC"> that we</font>

486
00:22:25,150 --> 00:22:29,080
made some<font color="#CCCCCC"> new</font><font color="#E5E5E5"> discoveries on the way and</font>

487
00:22:27,250 --> 00:22:31,330
we<font color="#CCCCCC"> improved the</font><font color="#E5E5E5"> performance</font><font color="#CCCCCC"> of the</font>

488
00:22:29,080 --> 00:22:33,510
traffic<font color="#E5E5E5"> even more so you have the</font><font color="#CCCCCC"> the</font>

489
00:22:31,330 --> 00:22:35,949
source code if you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> check it so</font>

490
00:22:33,510 --> 00:22:37,870
<font color="#CCCCCC">here it is a bonus section I will</font><font color="#E5E5E5"> just</font>

491
00:22:35,950 --> 00:22:39,970
go fast because<font color="#CCCCCC"> we don't have time so</font>

492
00:22:37,870 --> 00:22:42,729
what we<font color="#E5E5E5"> discover</font><font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> that single</font>

493
00:22:39,970 --> 00:22:44,380
character<font color="#CCCCCC"> tree is slow</font><font color="#E5E5E5"> because that the</font>

494
00:22:42,730 --> 00:22:47,080
stem level is better if you<font color="#CCCCCC"> stall</font>

495
00:22:44,380 --> 00:22:49,570
like.com<font color="#CCCCCC"> or Google or</font><font color="#E5E5E5"> something like</font>

496
00:22:47,080 --> 00:22:51,189
this<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a single character you</font>

497
00:22:49,570 --> 00:22:52,870
compress a lot<font color="#E5E5E5"> of space and you go</font>

498
00:22:51,190 --> 00:22:57,850
faster<font color="#E5E5E5"> because the structure</font><font color="#CCCCCC"> is even</font>

499
00:22:52,870 --> 00:22:59,919
lighter<font color="#E5E5E5"> and but the issue here is that</font>

500
00:22:57,850 --> 00:23:01,449
<font color="#E5E5E5">we had to find a</font><font color="#CCCCCC"> way to stop viable</font>

501
00:22:59,920 --> 00:23:03,490
<font color="#E5E5E5">length stems</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> the character is</font>

502
00:23:01,450 --> 00:23:05,890
<font color="#E5E5E5">quite easy to</font><font color="#CCCCCC"> hold</font><font color="#E5E5E5"> it's just a bite</font>

503
00:23:03,490 --> 00:23:08,350
whereas the stem could have like a 16

504
00:23:05,890 --> 00:23:10,570
byte or even more so we designed<font color="#CCCCCC"> the</font>

505
00:23:08,350 --> 00:23:12,490
thing to do that so at the beginning<font color="#E5E5E5"> the</font>

506
00:23:10,570 --> 00:23:14,560
results were bad<font color="#E5E5E5"> because we had</font><font color="#CCCCCC"> linkage</font>

507
00:23:12,490 --> 00:23:16,450
<font color="#CCCCCC">lists in the tree the children were</font>

508
00:23:14,560 --> 00:23:22,240
organized as<font color="#E5E5E5"> link at least so you cannot</font>

509
00:23:16,450 --> 00:23:26,170
go beyond to 256<font color="#CCCCCC"> children</font><font color="#E5E5E5"> but here you</font>

510
00:23:22,240 --> 00:23:27,670
<font color="#E5E5E5">can go like 1 million so we try to do</font>

511
00:23:26,170 --> 00:23:29,830
<font color="#CCCCCC">something</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> organized the</font>

512
00:23:27,670 --> 00:23:31,870
children as<font color="#E5E5E5"> a binary search trees</font><font color="#CCCCCC"> and</font>

513
00:23:29,830 --> 00:23:34,330
this<font color="#E5E5E5"> is actually another structure which</font>

514
00:23:31,870 --> 00:23:37,510
is<font color="#E5E5E5"> called a ternary search tree so look</font>

515
00:23:34,330 --> 00:23:39,399
it up and after what we try to also

516
00:23:37,510 --> 00:23:41,080
balance<font color="#E5E5E5"> those binary search trees</font>

517
00:23:39,400 --> 00:23:44,530
because not obviously<font color="#E5E5E5"> those trees can</font>

518
00:23:41,080 --> 00:23:47,230
like<font color="#CCCCCC"> degrade you a linkedlist</font><font color="#E5E5E5"> but it did</font>

519
00:23:44,530 --> 00:23:49,600
not make for anything<font color="#E5E5E5"> because like reads</font>

520
00:23:47,230 --> 00:23:51,790
whereas<font color="#CCCCCC"> lower-right</font><font color="#E5E5E5"> were slower because</font>

521
00:23:49,600 --> 00:23:55,030
<font color="#E5E5E5">actually like the</font><font color="#CCCCCC"> order we insert the</font>

522
00:23:51,790 --> 00:23:57,010
thing in the tree generates enough

523
00:23:55,030 --> 00:24:00,399
entropy not to degrade the the structure

524
00:23:57,010 --> 00:24:02,470
and finally we switch to using<font color="#CCCCCC"> varchars</font>

525
00:24:00,400 --> 00:24:04,960
so reserving one<font color="#CCCCCC"> byte you know the</font>

526
00:24:02,470 --> 00:24:05,410
length of the string so<font color="#E5E5E5"> we don't have to</font>

527
00:24:04,960 --> 00:24:06,910
trim

528
00:24:05,410 --> 00:24:10,960
<font color="#CCCCCC">right</font><font color="#E5E5E5"> on the thing and we double the</font>

529
00:24:06,910 --> 00:24:14,020
performance<font color="#E5E5E5"> okay so here we</font><font color="#CCCCCC"> are now</font><font color="#E5E5E5"> so</font>

530
00:24:10,960 --> 00:24:16,570
we went from<font color="#E5E5E5"> 45 minutes to 20 seconds to</font>

531
00:24:14,020 --> 00:24:18,490
compute the graph<font color="#E5E5E5"> and actually here now</font>

532
00:24:16,570 --> 00:24:21,580
<font color="#CCCCCC">which is normal</font><font color="#E5E5E5"> the web is the</font>

533
00:24:18,490 --> 00:24:24,250
bottleneck<font color="#E5E5E5"> again which should be the</font>

534
00:24:21,580 --> 00:24:27,909
case in<font color="#CCCCCC"> almost every case when you do</font>

535
00:24:24,250 --> 00:24:29,770
this kind<font color="#E5E5E5"> of stuff</font><font color="#CCCCCC"> so the current</font>

536
00:24:27,910 --> 00:24:32,410
version of<font color="#E5E5E5"> the crawler hive uses this</font>

537
00:24:29,770 --> 00:24:35,770
index in production<font color="#E5E5E5"> today</font><font color="#CCCCCC"> so it works</font>

538
00:24:32,410 --> 00:24:38,410
<font color="#E5E5E5">and finally</font><font color="#CCCCCC"> I could pass</font><font color="#E5E5E5"> so yes we</font>

539
00:24:35,770 --> 00:24:40,210
probably use the<font color="#E5E5E5"> Lucent badly</font><font color="#CCCCCC"> yes we</font>

540
00:24:38,410 --> 00:24:42,130
probably<font color="#CCCCCC"> used the near Forte badly but</font>

541
00:24:40,210 --> 00:24:44,050
when you have to twist<font color="#CCCCCC"> the system that</font>

542
00:24:42,130 --> 00:24:45,730
much<font color="#E5E5E5"> so meaning that</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> like to</font>

543
00:24:44,050 --> 00:24:48,129
tweak the internals or maybe add<font color="#E5E5E5"> a</font>

544
00:24:45,730 --> 00:24:50,890
stored procedure or so on<font color="#E5E5E5"> aren't you in</font>

545
00:24:48,130 --> 00:24:56,380
fact developing something<font color="#CCCCCC"> new</font><font color="#E5E5E5"> so it just</font>

546
00:24:50,890 --> 00:24:58,420
like just to say that you can perfectly

547
00:24:56,380 --> 00:25:02,140
like you develop a custom<font color="#E5E5E5"> index and in</font>

548
00:24:58,420 --> 00:25:04,150
might be<font color="#CCCCCC"> a good</font><font color="#E5E5E5"> thing to do but of</font>

549
00:25:02,140 --> 00:25:05,620
<font color="#CCCCCC">course we</font><font color="#E5E5E5"> are not expert in this subject</font>

550
00:25:04,150 --> 00:25:07,540
so<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> confident that we can further</font>

551
00:25:05,620 --> 00:25:09,370
improve<font color="#CCCCCC"> the structure and we are</font>

552
00:25:07,540 --> 00:25:13,060
confident<font color="#CCCCCC"> that the people</font><font color="#E5E5E5"> in this very</font>

553
00:25:09,370 --> 00:25:16,060
<font color="#CCCCCC">room can help</font><font color="#E5E5E5"> us do so so please bash</font>

554
00:25:13,060 --> 00:25:19,570
our ideas<font color="#CCCCCC"> and toll and</font><font color="#E5E5E5"> tell us we can do</font>

555
00:25:16,060 --> 00:25:22,440
better and in a<font color="#E5E5E5"> different way thanks for</font>

556
00:25:19,570 --> 00:25:22,439
<font color="#CCCCCC">your</font><font color="#E5E5E5"> attention</font>

557
00:25:28,380 --> 00:25:48,580
any questions yeah yeah so we just<font color="#CCCCCC"> like</font>

558
00:25:46,029 --> 00:25:51,159
use<font color="#CCCCCC"> two row files to row binary files</font>

559
00:25:48,580 --> 00:25:55,510
and we write in it<font color="#E5E5E5"> like using the file</font>

560
00:25:51,159 --> 00:26:01,210
<font color="#E5E5E5">system API sand that's all</font><font color="#CCCCCC"> corpus big</font>

561
00:25:55,510 --> 00:26:03,220
things as the like the<font color="#CCCCCC"> disk space</font><font color="#E5E5E5"> used</font>

562
00:26:01,210 --> 00:26:05,440
<font color="#E5E5E5">is really really low we don't</font><font color="#CCCCCC"> have to</font>

563
00:26:03,220 --> 00:26:09,179
like<font color="#E5E5E5"> shot or split the things yet</font><font color="#CCCCCC"> maybe</font>

564
00:26:05,440 --> 00:26:09,179
in the<font color="#E5E5E5"> future but for now</font><font color="#CCCCCC"> yes</font>

565
00:26:17,020 --> 00:26:20,109
[Music]

566
00:26:22,570 --> 00:26:40,689
because I<font color="#E5E5E5"> don't know what it is okay</font><font color="#CCCCCC"> so</font>

567
00:26:38,010 --> 00:26:42,220
it's<font color="#E5E5E5"> like better in the</font><font color="#CCCCCC"> maxes for</font>

568
00:26:40,690 --> 00:26:44,770
<font color="#E5E5E5">blogger binary blocks or is it something</font>

569
00:26:42,220 --> 00:26:47,399
different<font color="#CCCCCC"> like a hash map I'm not sure I</font>

570
00:26:44,770 --> 00:26:47,399
get<font color="#CCCCCC"> it</font>

571
00:26:57,369 --> 00:27:06,830
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> just because we didn't</font><font color="#E5E5E5"> know about</font>

572
00:27:00,919 --> 00:27:09,080
<font color="#E5E5E5">it so we like did</font><font color="#CCCCCC"> it from scratch but no</font>

573
00:27:06,830 --> 00:27:11,658
so the original<font color="#CCCCCC"> prototype was in Java</font>

574
00:27:09,080 --> 00:27:22,070
<font color="#E5E5E5">but like the our actual implementation</font>

575
00:27:11,659 --> 00:27:32,659
now is Python what<font color="#E5E5E5"> binary but not</font>

576
00:27:22,070 --> 00:27:33,158
platform dependent probably yes<font color="#CCCCCC"> I guess</font>

577
00:27:32,659 --> 00:27:40,240
so

578
00:27:33,159 --> 00:27:40,240
I'm not sure though yeah

579
00:27:44,850 --> 00:27:48,580
[Music]

580
00:27:54,860 --> 00:27:59,840
can you speak<font color="#CCCCCC"> louder I didn't send</font>

581
00:27:57,510 --> 00:27:59,840
<font color="#E5E5E5">everything</font>

582
00:28:11,950 --> 00:28:16,750
so if I understand correctly<font color="#CCCCCC"> the</font>

583
00:28:14,230 --> 00:28:18,640
<font color="#E5E5E5">question it's a is everything I mean is</font>

584
00:28:16,750 --> 00:28:22,690
<font color="#E5E5E5">a whole software</font><font color="#CCCCCC"> relying on a single</font>

585
00:28:18,640 --> 00:28:24,880
<font color="#CCCCCC">machine currently yes and we instead it</font>

586
00:28:22,690 --> 00:28:26,560
<font color="#CCCCCC">now we have an easy install with docker</font>

587
00:28:24,880 --> 00:28:30,580
so it installs everything in in

588
00:28:26,560 --> 00:28:32,050
containers<font color="#CCCCCC"> but you could if you want in</font>

589
00:28:30,580 --> 00:28:33,790
the configuration<font color="#E5E5E5"> if you do the</font><font color="#CCCCCC"> manual</font>

590
00:28:32,050 --> 00:28:37,270
instead you can set the crawler<font color="#E5E5E5"> on a</font>

591
00:28:33,790 --> 00:28:39,129
different machine and use<font color="#E5E5E5"> I mean but</font><font color="#CCCCCC"> the</font>

592
00:28:37,270 --> 00:28:42,190
<font color="#E5E5E5">data itself will be stored on the same</font>

593
00:28:39,130 --> 00:28:43,960
<font color="#E5E5E5">machine as well</font><font color="#CCCCCC"> where the process is</font>

594
00:28:42,190 --> 00:28:49,360
<font color="#CCCCCC">happening</font><font color="#E5E5E5"> here not the call can</font><font color="#CCCCCC"> be</font>

595
00:28:43,960 --> 00:28:51,340
<font color="#E5E5E5">separated</font><font color="#CCCCCC"> I guess also</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> for now we</font>

596
00:28:49,360 --> 00:28:52,990
didn't<font color="#E5E5E5"> have like</font><font color="#CCCCCC"> corpuses that</font><font color="#E5E5E5"> would</font>

597
00:28:51,340 --> 00:28:55,090
overcome<font color="#E5E5E5"> the storage of</font><font color="#CCCCCC"> a single machine</font>

598
00:28:52,990 --> 00:28:57,010
because<font color="#E5E5E5"> they kind of</font><font color="#CCCCCC"> froze</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> from</font>

599
00:28:55,090 --> 00:28:58,449
there<font color="#E5E5E5"> are quite</font><font color="#CCCCCC"> colita and qualitative</font>

600
00:28:57,010 --> 00:29:00,129
like you have a researcher that<font color="#E5E5E5"> will</font>

601
00:28:58,450 --> 00:29:03,100
select<font color="#E5E5E5"> finally the things they want and</font>

602
00:29:00,130 --> 00:29:06,460
so<font color="#E5E5E5"> usually as a human is involved you</font>

603
00:29:03,100 --> 00:29:08,350
won't have too much data<font color="#CCCCCC"> so</font><font color="#E5E5E5"> for now it's</font>

604
00:29:06,460 --> 00:29:10,090
<font color="#E5E5E5">not possible</font><font color="#CCCCCC"> like to shut the thing and</font>

605
00:29:08,350 --> 00:29:14,100
have a really<font color="#E5E5E5"> really scalable crawler</font>

606
00:29:10,090 --> 00:29:14,100
<font color="#E5E5E5">but that's not really the point I guess</font>

607
00:29:16,410 --> 00:29:22,410
any more questions

608
00:29:19,740 --> 00:29:30,769
well thank you very<font color="#E5E5E5"> much</font>

609
00:29:22,410 --> 00:29:30,769
[Applause]

