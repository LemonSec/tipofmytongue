1
00:00:05,460 --> 00:00:13,959
hi<font color="#E5E5E5"> everybody so my keyword is now for</font>

2
00:00:10,209 --> 00:00:14,370
something completely different<font color="#E5E5E5"> I'm going</font>

3
00:00:13,959 --> 00:00:17,369
<font color="#CCCCCC">to</font>

4
00:00:14,370 --> 00:00:18,990
a bit about<font color="#E5E5E5"> justice I didn't meet the</font>

5
00:00:17,369 --> 00:00:21,090
microphone<font color="#CCCCCC"> I'm going to talk a bit</font><font color="#E5E5E5"> about</font>

6
00:00:18,990 --> 00:00:26,490
what we're doing<font color="#CCCCCC"> at raincoat labs with</font>

7
00:00:21,090 --> 00:00:28,950
<font color="#CCCCCC">glycerin VL</font><font color="#E5E5E5"> my name is Johan so I was</font>

8
00:00:26,490 --> 00:00:30,689
<font color="#CCCCCC">tasked to</font><font color="#E5E5E5"> do this talk and then the</font>

9
00:00:28,950 --> 00:00:33,329
<font color="#CCCCCC">people</font><font color="#E5E5E5"> from marketing came and they said</font>

10
00:00:30,689 --> 00:00:35,100
you need<font color="#E5E5E5"> to talk about our company so</font>

11
00:00:33,329 --> 00:00:38,090
they gave me<font color="#E5E5E5"> some slides I will try to</font>

12
00:00:35,100 --> 00:00:38,090
be as quickly as possible

13
00:00:38,450 --> 00:00:42,059
there are dragons<font color="#E5E5E5"> in the room I don't</font>

14
00:00:40,620 --> 00:00:44,360
know where they are<font color="#E5E5E5"> but dragons</font><font color="#CCCCCC"> ensure</font>

15
00:00:42,059 --> 00:00:46,739
you get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> reference</font>

16
00:00:44,360 --> 00:00:49,219
some people<font color="#CCCCCC"> need some people who don't</font>

17
00:00:46,739 --> 00:00:52,230
<font color="#CCCCCC">ok whatever</font><font color="#E5E5E5"> so what's this company about</font>

18
00:00:49,219 --> 00:00:55,079
this<font color="#E5E5E5"> company is basically a compiler</font>

19
00:00:52,230 --> 00:00:56,968
company what we do is we<font color="#E5E5E5"> build compilers</font>

20
00:00:55,079 --> 00:00:58,980
this is the core<font color="#CCCCCC"> of the company</font><font color="#E5E5E5"> clients</font>

21
00:00:56,969 --> 00:01:01,109
<font color="#CCCCCC">come to us</font><font color="#E5E5E5"> they need a compiler</font><font color="#CCCCCC"> for</font>

22
00:00:58,980 --> 00:01:02,550
something we built<font color="#E5E5E5"> on a compiler you</font>

23
00:01:01,109 --> 00:01:03,899
need a compiler<font color="#CCCCCC"> I build</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> a compiler</font>

24
00:01:02,550 --> 00:01:05,039
you need a compiler<font color="#CCCCCC"> I</font><font color="#E5E5E5"> built</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> compare</font>

25
00:01:03,899 --> 00:01:08,430
<font color="#E5E5E5">that's it that's it</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> it</font>

26
00:01:05,040 --> 00:01:11,040
<font color="#CCCCCC">ok so this is pure</font><font color="#E5E5E5"> on marketing</font><font color="#CCCCCC"> speech</font>

27
00:01:08,430 --> 00:01:16,080
<font color="#E5E5E5">what this thing</font><font color="#CCCCCC"> is trying</font><font color="#E5E5E5"> to say is that</font>

28
00:01:11,040 --> 00:01:18,090
usually a compiler<font color="#E5E5E5"> division is part of a</font>

29
00:01:16,080 --> 00:01:19,860
big<font color="#E5E5E5"> company you have Intel they built</font>

30
00:01:18,090 --> 00:01:21,810
our compilers if Microsoft<font color="#E5E5E5"> they build</font>

31
00:01:19,860 --> 00:01:25,140
compilers<font color="#CCCCCC"> apples</font><font color="#E5E5E5"> build compiles etcetera</font>

32
00:01:21,810 --> 00:01:29,700
<font color="#CCCCCC">etc</font><font color="#E5E5E5"> really small companies</font><font color="#CCCCCC"> that do</font><font color="#E5E5E5"> not</font>

33
00:01:25,140 --> 00:01:33,720
<font color="#E5E5E5">depend on an external big entity</font><font color="#CCCCCC"> I don't</font>

34
00:01:29,700 --> 00:01:35,940
know any and people claim that ok we<font color="#CCCCCC"> are</font>

35
00:01:33,720 --> 00:01:37,950
<font color="#CCCCCC">the first painting</font><font color="#E5E5E5"> the biggest small</font>

36
00:01:35,940 --> 00:01:42,300
independent compiler company in the

37
00:01:37,950 --> 00:01:44,820
<font color="#CCCCCC">world told</font><font color="#E5E5E5"> you marketing</font><font color="#CCCCCC"> speech so what</font>

38
00:01:42,300 --> 00:01:46,860
do<font color="#CCCCCC"> we do client comes to us they say</font><font color="#E5E5E5"> ok</font>

39
00:01:44,820 --> 00:01:48,660
we have a problem<font color="#CCCCCC"> usually something in</font>

40
00:01:46,860 --> 00:01:51,150
legacy languages we<font color="#CCCCCC"> have this</font><font color="#E5E5E5"> old legacy</font>

41
00:01:48,660 --> 00:01:53,420
language<font color="#E5E5E5"> there's no longer support for</font>

42
00:01:51,150 --> 00:01:55,350
this<font color="#E5E5E5"> but the core of our business</font><font color="#CCCCCC"> EC</font>

43
00:01:53,420 --> 00:01:57,240
implemented sorry in this legacy

44
00:01:55,350 --> 00:01:59,789
language what do we do do we rewrite

45
00:01:57,240 --> 00:02:02,130
everything<font color="#E5E5E5"> like 30 years ago the big</font>

46
00:01:59,790 --> 00:02:03,990
company started writing that it's not<font color="#CCCCCC"> 39</font>

47
00:02:02,130 --> 00:02:06,240
years it's a command<font color="#CCCCCC"> miios multiplied by</font>

48
00:02:03,990 --> 00:02:08,549
the number<font color="#CCCCCC"> of people do a rewrite that</font>

49
00:02:06,240 --> 00:02:10,769
<font color="#E5E5E5">or is the other option ok let's try</font><font color="#CCCCCC"> to</font>

50
00:02:08,550 --> 00:02:13,110
take<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the source code compile it</font>

51
00:02:10,769 --> 00:02:15,120
to something<font color="#E5E5E5"> else</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> do consultancy</font>

52
00:02:13,110 --> 00:02:18,120
services we say ok this<font color="#E5E5E5"> is feasible</font><font color="#CCCCCC"> this</font>

53
00:02:15,120 --> 00:02:19,920
is not feasible<font color="#E5E5E5"> if it's feasible we can</font>

54
00:02:18,120 --> 00:02:21,180
implement the compiler for you<font color="#E5E5E5"> I told</font>

55
00:02:19,920 --> 00:02:22,608
you<font color="#E5E5E5"> I can build you a compiler I can</font>

56
00:02:21,180 --> 00:02:25,290
build<font color="#E5E5E5"> you a compiler etcetera etcetera</font>

57
00:02:22,609 --> 00:02:26,540
<font color="#CCCCCC">fill scope I mean from the beginning all</font>

58
00:02:25,290 --> 00:02:27,870
<font color="#CCCCCC">the</font><font color="#E5E5E5"> way to the end to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> delivery</font>

59
00:02:26,540 --> 00:02:31,548
<font color="#E5E5E5">that's what the</font>

60
00:02:27,870 --> 00:02:35,099
company<font color="#CCCCCC"> dos so we're a compiler company</font>

61
00:02:31,549 --> 00:02:38,489
expertise<font color="#E5E5E5"> all of these things these</font>

62
00:02:35,099 --> 00:02:43,349
things<font color="#CCCCCC"> are our DNA okay</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> guy</font><font color="#E5E5E5"> sitting</font>

63
00:02:38,489 --> 00:02:46,170
in front<font color="#E5E5E5"> of me he was a big DSP guy</font><font color="#CCCCCC"> I am</font>

64
00:02:43,349 --> 00:02:53,578
more<font color="#E5E5E5"> dsl guy we have some people</font><font color="#CCCCCC"> doing</font>

65
00:02:46,170 --> 00:02:56,339
<font color="#E5E5E5">this strangely</font><font color="#CCCCCC"> all of that</font><font color="#E5E5E5"> okay so what</font>

66
00:02:53,579 --> 00:02:57,989
do<font color="#CCCCCC"> we do in terms of projects you guys</font>

67
00:02:56,340 --> 00:03:00,000
are all interested in<font color="#E5E5E5"> this but I won't</font>

68
00:02:57,989 --> 00:03:00,780
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> right now start with</font>

69
00:03:00,000 --> 00:03:03,629
<font color="#E5E5E5">something else</font>

70
00:03:00,780 --> 00:03:05,519
this is<font color="#E5E5E5"> a cool one this is not nothing</font>

71
00:03:03,629 --> 00:03:08,870
<font color="#E5E5E5">to do with Java and this is nothing to</font>

72
00:03:05,519 --> 00:03:13,500
do with basic but it's called G basic

73
00:03:08,870 --> 00:03:15,030
whatever my goal here is<font color="#E5E5E5"> also to</font>

74
00:03:13,500 --> 00:03:16,769
surprise you at some point<font color="#CCCCCC"> I have a</font>

75
00:03:15,030 --> 00:03:19,909
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> surprises</font><font color="#E5E5E5"> first surprise I</font>

76
00:03:16,769 --> 00:03:23,280
don't<font color="#CCCCCC"> work on this actually work on this</font>

77
00:03:19,909 --> 00:03:24,959
story<font color="#E5E5E5"> behind that</font><font color="#CCCCCC"> is yeah you know</font><font color="#E5E5E5"> we</font>

78
00:03:23,280 --> 00:03:26,670
need<font color="#E5E5E5"> somebody to go and talk about that</font>

79
00:03:24,959 --> 00:03:29,220
but the guys who are<font color="#E5E5E5"> working on a rule</font>

80
00:03:26,670 --> 00:03:30,750
on the LLVM work they don't<font color="#E5E5E5"> have time</font>

81
00:03:29,220 --> 00:03:32,579
they can't be there we<font color="#E5E5E5"> need somebody to</font>

82
00:03:30,750 --> 00:03:36,780
talk about<font color="#E5E5E5"> the stuff</font><font color="#CCCCCC"> that we do so we</font>

83
00:03:32,579 --> 00:03:39,569
let's go<font color="#CCCCCC"> and talk to</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> hon what</font><font color="#E5E5E5"> okay</font>

84
00:03:36,780 --> 00:03:41,730
so I know some stuff<font color="#E5E5E5"> but I'm sadly not</font>

85
00:03:39,569 --> 00:03:44,010
<font color="#E5E5E5">the</font><font color="#CCCCCC"> guy technically the guys technically</font>

86
00:03:41,730 --> 00:03:46,500
<font color="#E5E5E5">doing this I'll try to answer your</font>

87
00:03:44,010 --> 00:03:51,230
questions as<font color="#CCCCCC"> best as possible so yeah</font>

88
00:03:46,500 --> 00:03:54,629
I've been<font color="#E5E5E5"> doing that so people right now</font>

89
00:03:51,230 --> 00:03:56,429
take old<font color="#E5E5E5"> languages which are no longer</font>

90
00:03:54,629 --> 00:04:00,870
<font color="#CCCCCC">supported take all of the source code</font>

91
00:03:56,430 --> 00:04:05,510
<font color="#CCCCCC">and generate Goble who here</font><font color="#E5E5E5"> knows a bit</font>

92
00:04:00,870 --> 00:04:05,510
of Google<font color="#E5E5E5"> one two three four</font>

93
00:04:12,060 --> 00:04:16,860
think like a manager<font color="#E5E5E5"> for a moment</font><font color="#CCCCCC"> strike</font>

94
00:04:17,220 --> 00:04:24,100
<font color="#CCCCCC">actually no it's done you know that Cabo</font>

95
00:04:22,089 --> 00:04:26,380
is a thing that's<font color="#E5E5E5"> been existing for 30</font>

96
00:04:24,100 --> 00:04:28,300
years<font color="#E5E5E5"> extremely stable it doesn't break</font>

97
00:04:26,380 --> 00:04:32,530
it's a being existing forever<font color="#E5E5E5"> is going</font>

98
00:04:28,300 --> 00:04:34,870
to exist forever<font color="#E5E5E5"> that's basically the</font>

99
00:04:32,530 --> 00:04:40,030
idea<font color="#E5E5E5"> so we at some point</font>

100
00:04:34,870 --> 00:04:43,480
sadly generate<font color="#CCCCCC"> Cabo yeah I wanted</font><font color="#E5E5E5"> to</font>

101
00:04:40,030 --> 00:04:45,849
shock you<font color="#E5E5E5"> the seduced one so who are</font>

102
00:04:43,480 --> 00:04:47,860
these clients big big companies<font color="#CCCCCC"> that I</font>

103
00:04:45,850 --> 00:04:51,490
<font color="#CCCCCC">can</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> to you</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> okay banks</font>

104
00:04:47,860 --> 00:04:54,430
insurance companies those<font color="#E5E5E5"> kinds of big</font>

105
00:04:51,490 --> 00:04:55,870
<font color="#CCCCCC">companies like Bank</font><font color="#E5E5E5"> or an</font><font color="#CCCCCC"> insurance</font>

106
00:04:54,430 --> 00:04:57,580
company the<font color="#E5E5E5"> insurance company for</font>

107
00:04:55,870 --> 00:04:59,860
<font color="#E5E5E5">example right</font><font color="#CCCCCC"> now all of their asset is</font>

108
00:04:57,580 --> 00:05:01,810
in their software<font color="#CCCCCC"> and all the</font><font color="#E5E5E5"> software</font>

109
00:04:59,860 --> 00:05:04,090
<font color="#E5E5E5">exists since the 70s it's written in</font>

110
00:05:01,810 --> 00:05:06,550
COBOL is treated in<font color="#CCCCCC"> pl/1 is treating all</font>

111
00:05:04,090 --> 00:05:08,609
these<font color="#E5E5E5"> kind of things if the mainframe</font>

112
00:05:06,550 --> 00:05:12,220
ever goes down<font color="#E5E5E5"> the company is bankrupt</font>

113
00:05:08,610 --> 00:05:17,290
<font color="#CCCCCC">end of story okay</font><font color="#E5E5E5"> that's the kind of</font>

114
00:05:12,220 --> 00:05:19,090
things<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about we work with</font>

115
00:05:17,290 --> 00:05:21,880
these kind of<font color="#E5E5E5"> companies but we are not</font>

116
00:05:19,090 --> 00:05:23,890
an old<font color="#E5E5E5"> company</font><font color="#CCCCCC"> actually we talk a lot</font><font color="#E5E5E5"> to</font>

117
00:05:21,880 --> 00:05:25,990
academia<font color="#E5E5E5"> in my previous life I was</font><font color="#CCCCCC"> a</font>

118
00:05:23,890 --> 00:05:29,110
<font color="#E5E5E5">university professor</font>

119
00:05:25,990 --> 00:05:31,360
we have sponsor<font color="#CCCCCC"> airings</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> a number</font><font color="#E5E5E5"> of</font>

120
00:05:29,110 --> 00:05:35,530
events<font color="#E5E5E5"> so for example will</font><font color="#CCCCCC"> be a compiler</font>

121
00:05:31,360 --> 00:05:42,460
construction this<font color="#CCCCCC"> year let's</font><font color="#E5E5E5"> set that's</font>

122
00:05:35,530 --> 00:05:45,940
it this is<font color="#CCCCCC"> the last dirty slide I don't</font>

123
00:05:42,460 --> 00:05:47,680
feel good saying<font color="#E5E5E5"> this so let's go so end</font>

124
00:05:45,940 --> 00:05:49,600
of<font color="#E5E5E5"> the prologue what element what am I</font>

125
00:05:47,680 --> 00:05:51,520
<font color="#CCCCCC">talking about</font><font color="#E5E5E5"> I need to talk first a bit</font>

126
00:05:49,600 --> 00:05:54,190
<font color="#CCCCCC">backgrounds what's the background</font><font color="#E5E5E5"> of the</font>

127
00:05:51,520 --> 00:05:57,520
<font color="#CCCCCC">company where do we come from</font><font color="#E5E5E5"> we come</font>

128
00:05:54,190 --> 00:05:59,560
from raincoats<font color="#CCCCCC"> which is different from</font>

129
00:05:57,520 --> 00:06:02,260
raincoat labs and the motto of raincoat

130
00:05:59,560 --> 00:06:05,410
is mainframe to.net so what does

131
00:06:02,260 --> 00:06:08,650
raincoat do mainframe programs<font color="#CCCCCC"> we try to</font>

132
00:06:05,410 --> 00:06:11,890
run them<font color="#E5E5E5"> on top that simple make sense</font>

133
00:06:08,650 --> 00:06:14,380
<font color="#E5E5E5">so what am I</font><font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> we have a</font>

134
00:06:11,890 --> 00:06:17,140
<font color="#CCCCCC">Tier one compiler</font><font color="#E5E5E5"> we have a COBOL</font>

135
00:06:14,380 --> 00:06:19,490
compiler and we have an IBM assembler

136
00:06:17,140 --> 00:06:24,380
compiler<font color="#E5E5E5"> yes and</font>

137
00:06:19,490 --> 00:06:26,210
tumblr<font color="#E5E5E5"> compiler it exists now so the</font>

138
00:06:24,380 --> 00:06:28,400
first word<font color="#CCCCCC"> that was done was actually</font><font color="#E5E5E5"> on</font>

139
00:06:26,210 --> 00:06:31,419
<font color="#E5E5E5">the</font><font color="#CCCCCC"> PL 1 compiler the p1 compiler is the</font>

140
00:06:28,400 --> 00:06:34,068
oldest compiler after that got going

141
00:06:31,419 --> 00:06:37,219
work was<font color="#E5E5E5"> started on the COBOL compiler</font>

142
00:06:34,069 --> 00:06:39,770
which and<font color="#E5E5E5"> caught up at some time</font><font color="#CCCCCC"> ASM</font>

143
00:06:37,220 --> 00:06:43,099
compiler<font color="#E5E5E5"> came in later because it's</font>

144
00:06:39,770 --> 00:06:44,870
<font color="#E5E5E5">really tough stuff</font><font color="#CCCCCC"> but is</font><font color="#E5E5E5"> going along</font>

145
00:06:43,099 --> 00:06:47,240
quite well<font color="#E5E5E5"> why do you need</font><font color="#CCCCCC"> all three</font>

146
00:06:44,870 --> 00:06:48,979
<font color="#E5E5E5">because usually on the mainframe</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> or</font>

147
00:06:47,240 --> 00:06:50,810
<font color="#E5E5E5">the three programs</font><font color="#CCCCCC"> they work together</font><font color="#E5E5E5"> in</font>

148
00:06:48,979 --> 00:06:52,758
different<font color="#E5E5E5"> languages we of COBOL calling</font>

149
00:06:50,810 --> 00:06:54,650
<font color="#CCCCCC">tier one some assembler</font><font color="#E5E5E5"> in between etc</font>

150
00:06:52,759 --> 00:06:57,080
<font color="#CCCCCC">etc so if you</font><font color="#E5E5E5"> really want to have</font>

151
00:06:54,650 --> 00:06:59,150
everything<font color="#E5E5E5"> everything in all cases</font><font color="#CCCCCC"> you</font>

152
00:06:57,080 --> 00:07:01,250
need all three<font color="#CCCCCC"> not everybody uses</font><font color="#E5E5E5"> all</font>

153
00:06:59,150 --> 00:07:02,960
three some<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> only use one</font><font color="#CCCCCC"> some of</font>

154
00:07:01,250 --> 00:07:04,819
<font color="#CCCCCC">them only used to but if you want to</font>

155
00:07:02,960 --> 00:07:08,120
have the full service<font color="#CCCCCC"> you really want to</font>

156
00:07:04,819 --> 00:07:11,150
<font color="#E5E5E5">choose this</font><font color="#CCCCCC"> way so we work</font><font color="#E5E5E5"> for mainframe</font>

157
00:07:08,120 --> 00:07:14,509
people so stuff which<font color="#CCCCCC"> is 30</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> old</font>

158
00:07:11,150 --> 00:07:16,429
<font color="#E5E5E5">and</font><font color="#CCCCCC"> his salt is good</font><font color="#E5E5E5"> so what is really</font>

159
00:07:14,509 --> 00:07:18,620
really<font color="#CCCCCC"> crucial for</font><font color="#E5E5E5"> the company if</font>

160
00:07:16,430 --> 00:07:22,460
backward compatibility and stability

161
00:07:18,620 --> 00:07:24,460
<font color="#E5E5E5">yeah we cannot break the software or</font><font color="#CCCCCC"> the</font>

162
00:07:22,460 --> 00:07:27,830
<font color="#E5E5E5">insurance on company goes bankrupt</font>

163
00:07:24,460 --> 00:07:30,198
<font color="#E5E5E5">that's the key this</font><font color="#CCCCCC"> is very very</font>

164
00:07:27,830 --> 00:07:32,240
<font color="#E5E5E5">difficult and very very different from</font>

165
00:07:30,199 --> 00:07:33,560
what I did<font color="#E5E5E5"> previously when I was doing</font>

166
00:07:32,240 --> 00:07:36,440
<font color="#E5E5E5">research whatever you do whatever you</font>

167
00:07:33,560 --> 00:07:38,750
<font color="#E5E5E5">want</font><font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> matter but here the</font>

168
00:07:36,440 --> 00:07:40,849
<font color="#E5E5E5">stability is core and everything that we</font>

169
00:07:38,750 --> 00:07:42,409
do and<font color="#CCCCCC"> everything that we support we</font>

170
00:07:40,849 --> 00:07:43,759
need to get me sure that we have

171
00:07:42,409 --> 00:07:46,070
stability<font color="#CCCCCC"> and backward compatibility</font>

172
00:07:43,759 --> 00:07:48,199
<font color="#E5E5E5">yeah so one of the things that we'll do</font>

173
00:07:46,070 --> 00:07:52,759
is we do not<font color="#CCCCCC"> have any external</font>

174
00:07:48,199 --> 00:07:53,960
dependencies if we can avoid them<font color="#E5E5E5"> now so</font>

175
00:07:52,759 --> 00:07:55,789
we're not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use the latest</font>

176
00:07:53,960 --> 00:08:00,710
<font color="#CCCCCC">greatest new jewel because we don't know</font>

177
00:07:55,789 --> 00:08:02,810
what is going<font color="#E5E5E5"> to be like in 15</font><font color="#CCCCCC"> years so</font>

178
00:08:00,710 --> 00:08:05,060
<font color="#E5E5E5">anything any external dependency we try</font>

179
00:08:02,810 --> 00:08:07,729
to avoid them<font color="#E5E5E5"> as much as possible this</font>

180
00:08:05,060 --> 00:08:09,469
<font color="#CCCCCC">is also why we</font><font color="#E5E5E5"> have our own compiler</font>

181
00:08:07,729 --> 00:08:14,300
building infrastructure this<font color="#CCCCCC"> is not a</font>

182
00:08:09,469 --> 00:08:17,840
typo this<font color="#E5E5E5"> infrastructure has</font><font color="#CCCCCC"> been built</font>

183
00:08:14,300 --> 00:08:20,539
first<font color="#E5E5E5"> time 25 years ago is being worked</font>

184
00:08:17,840 --> 00:08:23,150
on<font color="#CCCCCC"> etcetera maintained etc etc it's ours</font>

185
00:08:20,539 --> 00:08:24,318
<font color="#CCCCCC">we fully control it we are sure that</font><font color="#E5E5E5"> we</font>

186
00:08:23,150 --> 00:08:27,169
<font color="#E5E5E5">have something stable</font>

187
00:08:24,319 --> 00:08:29,539
<font color="#CCCCCC">backward-compatible</font><font color="#E5E5E5"> the thing that we do</font>

188
00:08:27,169 --> 00:08:31,789
is we do need the<font color="#E5E5E5"> C compiler we generate</font>

189
00:08:29,539 --> 00:08:32,510
C code<font color="#CCCCCC"> and the C compiler</font><font color="#E5E5E5"> does stuff</font>

190
00:08:31,789 --> 00:08:36,319
with<font color="#CCCCCC"> the seco</font>

191
00:08:32,510 --> 00:08:41,809
so that we have executables yeah<font color="#CCCCCC"> okay</font>

192
00:08:36,320 --> 00:08:43,760
let's try to shock you again yes I know

193
00:08:41,809 --> 00:08:44,930
but<font color="#CCCCCC"> we</font><font color="#E5E5E5"> need to have you need to</font><font color="#CCCCCC"> have</font>

194
00:08:43,760 --> 00:08:48,590
<font color="#E5E5E5">some point right</font>

195
00:08:44,930 --> 00:08:49,939
I have no idea what<font color="#E5E5E5"> with</font><font color="#CCCCCC"> knows</font><font color="#E5E5E5"> DCC</font>

196
00:08:48,590 --> 00:08:52,520
<font color="#E5E5E5">they're using and I don't want to know</font>

197
00:08:49,940 --> 00:08:53,810
either<font color="#E5E5E5"> I'm not I'm</font><font color="#CCCCCC"> not in charge of the</font>

198
00:08:52,520 --> 00:08:54,770
<font color="#CCCCCC">the</font><font color="#E5E5E5"> guy I'm not</font><font color="#CCCCCC"> the guy that busy</font>

199
00:08:53,810 --> 00:08:59,660
<font color="#E5E5E5">infrastructure</font>

200
00:08:54,770 --> 00:09:01,780
luckily let me show you some<font color="#CCCCCC"> como this</font>

201
00:08:59,660 --> 00:09:03,310
is what<font color="#CCCCCC"> COBOL in general looks like</font>

202
00:09:01,780 --> 00:09:06,110
yummy yummy

203
00:09:03,310 --> 00:09:12,229
this thing is a comment because<font color="#CCCCCC"> there's</font>

204
00:09:06,110 --> 00:09:16,670
a star at position<font color="#E5E5E5"> six on this line</font><font color="#CCCCCC"> this</font>

205
00:09:12,230 --> 00:09:22,100
is a loop<font color="#CCCCCC"> of course this is not move</font>

206
00:09:16,670 --> 00:09:23,689
this<font color="#E5E5E5"> is copy this is column there I</font>

207
00:09:22,100 --> 00:09:25,130
<font color="#E5E5E5">learned last week I still</font><font color="#CCCCCC"> enjoy</font>

208
00:09:23,690 --> 00:09:26,750
everything<font color="#CCCCCC"> about cocoa which actually</font>

209
00:09:25,130 --> 00:09:29,570
makes sense because<font color="#E5E5E5"> the standard is huge</font>

210
00:09:26,750 --> 00:09:34,100
there is a statement in COBOL which is

211
00:09:29,570 --> 00:09:37,700
called exit what does it do it doesn't

212
00:09:34,100 --> 00:09:41,290
<font color="#CCCCCC">do anything</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> does exit dot it doesn't</font>

213
00:09:37,700 --> 00:09:44,270
do anything<font color="#CCCCCC"> to</font><font color="#E5E5E5"> me yeah whatever</font>

214
00:09:41,290 --> 00:09:48,380
<font color="#E5E5E5">so</font><font color="#CCCCCC"> okay cobble cobble is</font><font color="#E5E5E5"> really really</font>

215
00:09:44,270 --> 00:09:50,300
<font color="#E5E5E5">very well done</font><font color="#CCCCCC"> it is very</font><font color="#E5E5E5"> work yeah</font>

216
00:09:48,380 --> 00:09:52,310
<font color="#E5E5E5">let's just say that whatever</font><font color="#CCCCCC"> so that's</font>

217
00:09:50,300 --> 00:09:55,219
<font color="#E5E5E5">one example I won't show the assembler</font>

218
00:09:52,310 --> 00:09:58,400
but I'll show you<font color="#CCCCCC"> peer 1py it looks like</font>

219
00:09:55,220 --> 00:10:01,330
it's okay<font color="#E5E5E5"> but then you encounter</font>

220
00:09:58,400 --> 00:10:01,329
<font color="#E5E5E5">something like this</font>

221
00:10:02,280 --> 00:10:08,100
keywords are not reserved words you can

222
00:10:06,090 --> 00:10:10,140
have a variable<font color="#E5E5E5"> you can call it if you</font>

223
00:10:08,100 --> 00:10:14,430
can have a very<font color="#CCCCCC"> very even call it LSAT</font>

224
00:10:10,140 --> 00:10:17,069
<font color="#CCCCCC">set that's it</font><font color="#E5E5E5"> yeah parse that try to</font>

225
00:10:14,430 --> 00:10:22,680
make sense<font color="#E5E5E5"> of that so because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this</font>

226
00:10:17,070 --> 00:10:26,730
strange kind<font color="#E5E5E5"> of things we really have a</font>

227
00:10:22,680 --> 00:10:28,650
parser which is different from all the

228
00:10:26,730 --> 00:10:30,900
other kinds of stuff<font color="#CCCCCC"> that we do that</font><font color="#E5E5E5"> you</font>

229
00:10:28,650 --> 00:10:33,180
usually do<font color="#E5E5E5"> some of the stuff needs to</font>

230
00:10:30,900 --> 00:10:35,280
take place<font color="#E5E5E5"> of where in the offset in the</font>

231
00:10:33,180 --> 00:10:36,839
source<font color="#E5E5E5"> code file is the dual star you</font>

232
00:10:35,280 --> 00:10:39,270
need<font color="#CCCCCC"> to do some clever backtracking this</font>

233
00:10:36,840 --> 00:10:40,950
<font color="#E5E5E5">visit a variable</font><font color="#CCCCCC"> with or is it a keyword</font>

234
00:10:39,270 --> 00:10:42,660
that<font color="#E5E5E5"> set concept</font><font color="#CCCCCC"> etcetera so there has</font>

235
00:10:40,950 --> 00:10:44,370
<font color="#CCCCCC">been a lot a lot</font><font color="#E5E5E5"> of investment</font><font color="#CCCCCC"> and</font>

236
00:10:42,660 --> 00:10:47,959
getting these parcels to work and it's

237
00:10:44,370 --> 00:10:52,350
<font color="#CCCCCC">stuff it's really really tough okay</font>

238
00:10:47,960 --> 00:10:57,060
Olivia<font color="#CCCCCC"> so let's start</font><font color="#E5E5E5"> with what</font><font color="#CCCCCC"> we have</font>

239
00:10:52,350 --> 00:11:00,800
<font color="#E5E5E5">right now what we</font><font color="#CCCCCC"> have right now is</font><font color="#E5E5E5"> we</font>

240
00:10:57,060 --> 00:11:04,910
have<font color="#E5E5E5"> Pier</font><font color="#CCCCCC"> 1 compiler which uses LLVM</font>

241
00:11:00,800 --> 00:11:09,630
<font color="#E5E5E5">back-end took us three and</font><font color="#CCCCCC"> a Half Men</font>

242
00:11:04,910 --> 00:11:10,890
<font color="#CCCCCC">years in total</font><font color="#E5E5E5"> which is not a lot if you</font>

243
00:11:09,630 --> 00:11:13,110
think about<font color="#E5E5E5"> the complexity of the</font>

244
00:11:10,890 --> 00:11:15,180
<font color="#E5E5E5">language doesn't support everything it</font>

245
00:11:13,110 --> 00:11:19,050
supports about<font color="#E5E5E5"> 75% of the specs the</font>

246
00:11:15,180 --> 00:11:21,719
<font color="#E5E5E5">specs that</font><font color="#CCCCCC"> is huge and complicated it's</font>

247
00:11:19,050 --> 00:11:24,000
online if you want<font color="#CCCCCC"> to have a bit of</font>

248
00:11:21,720 --> 00:11:26,970
light lecture<font color="#CCCCCC"> just look it up you'll</font>

249
00:11:24,000 --> 00:11:28,080
<font color="#E5E5E5">find it on</font><font color="#CCCCCC"> Google easily so this is the</font>

250
00:11:26,970 --> 00:11:31,620
core of the<font color="#CCCCCC"> work that we've been doing</font>

251
00:11:28,080 --> 00:11:34,290
with<font color="#CCCCCC"> LLVM get</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> pl/1 compiler</font><font color="#E5E5E5"> with the</font>

252
00:11:31,620 --> 00:11:35,670
LLVM<font color="#CCCCCC"> back-end</font><font color="#E5E5E5"> in the end</font><font color="#CCCCCC"> i'll talk more</font>

253
00:11:34,290 --> 00:11:38,819
<font color="#E5E5E5">in detail about that</font><font color="#CCCCCC"> later</font>

254
00:11:35,670 --> 00:11:40,890
we have a<font color="#E5E5E5"> turbo compiler so this kernel</font>

255
00:11:38,820 --> 00:11:42,900
compiler<font color="#E5E5E5"> when I wrote this slide was</font><font color="#CCCCCC"> 2</font>

256
00:11:40,890 --> 00:11:45,060
<font color="#E5E5E5">weeks of work so now it's like I guess</font>

257
00:11:42,900 --> 00:11:47,600
three weeks of<font color="#CCCCCC"> work</font><font color="#E5E5E5"> and two weeks over</font>

258
00:11:45,060 --> 00:11:50,040
two<font color="#E5E5E5"> weeks ago it could</font><font color="#CCCCCC"> do hello world</font>

259
00:11:47,600 --> 00:11:51,720
<font color="#E5E5E5">which is great for two weeks but the</font>

260
00:11:50,040 --> 00:11:53,699
thing<font color="#CCCCCC"> is it's not two</font><font color="#E5E5E5"> week starting from</font>

261
00:11:51,720 --> 00:11:56,130
scratch the point is that<font color="#E5E5E5"> there is a lot</font>

262
00:11:53,700 --> 00:11:58,200
a lot<font color="#CCCCCC"> of shared infrastructure ok</font>

263
00:11:56,130 --> 00:12:00,960
a lot of this<font color="#E5E5E5"> infrastructure was written</font>

264
00:11:58,200 --> 00:12:02,910
in<font color="#E5E5E5"> this case for the</font><font color="#CCCCCC"> pl/1 compiler and</font><font color="#E5E5E5"> a</font>

265
00:12:00,960 --> 00:12:05,430
lot a lot of<font color="#CCCCCC"> this infrastructure</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can</font>

266
00:12:02,910 --> 00:12:08,010
<font color="#E5E5E5">reuse for the cobol compiler so that</font>

267
00:12:05,430 --> 00:12:09,479
makes it possible to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> reuse</font><font color="#CCCCCC"> of all</font>

268
00:12:08,010 --> 00:12:11,100
of these<font color="#CCCCCC"> in substract infrastructure and</font>

269
00:12:09,480 --> 00:12:14,610
have a compiler<font color="#E5E5E5"> that compiles had a word</font>

270
00:12:11,100 --> 00:12:19,620
for<font color="#CCCCCC"> Google</font><font color="#E5E5E5"> in</font>

271
00:12:14,610 --> 00:12:23,019
<font color="#E5E5E5">all right this</font><font color="#CCCCCC"> builds of our original</font>

272
00:12:19,620 --> 00:12:26,260
<font color="#CCCCCC">pl-1 compiler</font><font color="#E5E5E5"> our original</font><font color="#CCCCCC"> p1 compiler</font>

273
00:12:23,019 --> 00:12:30,519
was a compiler<font color="#E5E5E5"> mainframe</font><font color="#CCCCCC"> to.net which</font>

274
00:12:26,260 --> 00:12:33,000
has a document<font color="#CCCCCC"> in the end ok so what</font>

275
00:12:30,519 --> 00:12:33,000
<font color="#E5E5E5">does it look</font><font color="#CCCCCC"> like</font>

276
00:12:33,240 --> 00:12:38,740
we take source code source<font color="#E5E5E5"> code and we</font>

277
00:12:36,760 --> 00:12:41,529
have our custom<font color="#E5E5E5"> parser so remember your</font>

278
00:12:38,740 --> 00:12:43,660
<font color="#E5E5E5">keywords not reserved so we need to</font>

279
00:12:41,529 --> 00:12:45,700
think<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that also</font><font color="#CCCCCC"> a lot of those things</font>

280
00:12:43,660 --> 00:12:48,100
<font color="#E5E5E5">that you need to think about custom</font>

281
00:12:45,700 --> 00:12:50,110
parser<font color="#E5E5E5"> gives us an abstract syntax tree</font>

282
00:12:48,100 --> 00:12:51,940
<font color="#E5E5E5">we do a bit of semantic analysis on that</font>

283
00:12:50,110 --> 00:12:55,300
<font color="#E5E5E5">gives us the types keys of the</font>

284
00:12:51,940 --> 00:12:57,550
cross-references<font color="#CCCCCC"> pro-1 is statically</font>

285
00:12:55,300 --> 00:12:59,949
<font color="#E5E5E5">typed but not really you can also forget</font>

286
00:12:57,550 --> 00:13:01,359
to type things<font color="#E5E5E5"> and then the compiler</font>

287
00:12:59,950 --> 00:13:03,459
tries to figure<font color="#E5E5E5"> it out for</font><font color="#CCCCCC"> you and</font>

288
00:13:01,360 --> 00:13:07,029
<font color="#CCCCCC">usually it's right but</font><font color="#E5E5E5"> sometimes it's</font>

289
00:13:03,459 --> 00:13:09,149
not weird stuff so that gives us<font color="#E5E5E5"> an</font>

290
00:13:07,029 --> 00:13:11,920
abstract<font color="#E5E5E5"> syntax tree which has some</font>

291
00:13:09,149 --> 00:13:13,990
semantic information types<font color="#E5E5E5"> graphs cross</font>

292
00:13:11,920 --> 00:13:16,029
<font color="#E5E5E5">references</font><font color="#CCCCCC"> and analysis and then</font>

293
00:13:13,990 --> 00:13:18,370
actually what happens there if we take

294
00:13:16,029 --> 00:13:21,160
this<font color="#E5E5E5"> tagged abstraction 53 we do code</font>

295
00:13:18,370 --> 00:13:25,990
generations<font color="#E5E5E5"> outputs the common language</font>

296
00:13:21,160 --> 00:13:28,750
runtime assembler for<font color="#E5E5E5"> dotnet dll's all</font>

297
00:13:25,990 --> 00:13:31,209
of this is written<font color="#E5E5E5"> in</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> own</font>

298
00:13:28,750 --> 00:13:34,240
infrastructure<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> we have this parser</font>

299
00:13:31,209 --> 00:13:40,390
called<font color="#CCCCCC"> Goethe</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> other things but let's</font>

300
00:13:34,240 --> 00:13:42,910
just say<font color="#E5E5E5"> that this is a Indians so that</font>

301
00:13:40,390 --> 00:13:47,550
was what was<font color="#E5E5E5"> before then we had this</font>

302
00:13:42,910 --> 00:13:51,329
client<font color="#E5E5E5"> that was interested in our</font>

303
00:13:47,550 --> 00:13:54,729
<font color="#E5E5E5">technology</font><font color="#CCCCCC"> and he wanted appeal</font><font color="#E5E5E5"> one</font>

304
00:13:51,329 --> 00:13:59,069
compiler but<font color="#E5E5E5"> he wanted to have this</font>

305
00:13:54,730 --> 00:14:03,579
<font color="#CCCCCC">running</font><font color="#E5E5E5"> on Linux so this is not really a</font>

306
00:13:59,070 --> 00:14:05,770
suitable option<font color="#E5E5E5"> so one it's a long story</font>

307
00:14:03,579 --> 00:14:10,060
<font color="#CCCCCC">I won't</font><font color="#E5E5E5"> bore you with that</font>

308
00:14:05,770 --> 00:14:12,100
so first version of the LLVM<font color="#E5E5E5"> what we</font>

309
00:14:10,060 --> 00:14:14,380
took I remember I had two lines<font color="#CCCCCC"> there</font>

310
00:14:12,100 --> 00:14:16,959
first line is just all<font color="#E5E5E5"> of the parsing</font>

311
00:14:14,380 --> 00:14:19,810
and the second line<font color="#E5E5E5"> is to go from a</font>

312
00:14:16,959 --> 00:14:22,060
tagged abstract syntax tree to common

313
00:14:19,810 --> 00:14:24,939
language runtime<font color="#E5E5E5"> we just take the second</font>

314
00:14:22,060 --> 00:14:27,550
line so we reuse the parser we reuse all

315
00:14:24,940 --> 00:14:30,550
<font color="#E5E5E5">part of the semantic analysis first</font>

316
00:14:27,550 --> 00:14:33,189
version was just let's generate<font color="#CCCCCC"> plain</font><font color="#E5E5E5"> C</font>

317
00:14:30,550 --> 00:14:35,890
<font color="#E5E5E5">code we do an</font><font color="#CCCCCC"> intermediate step in</font>

318
00:14:33,190 --> 00:14:36,550
<font color="#E5E5E5">between here the</font><font color="#CCCCCC"> gentry step I didn't</font>

319
00:14:35,890 --> 00:14:39,160
<font color="#E5E5E5">choose the name</font>

320
00:14:36,550 --> 00:14:40,660
what does Gentry do<font color="#E5E5E5"> is does a bit of</font>

321
00:14:39,160 --> 00:14:43,510
simplification of the abstract syntax

322
00:14:40,660 --> 00:14:46,060
tree because for example in PL one you

323
00:14:43,510 --> 00:14:47,380
can have nested procedures<font color="#E5E5E5"> so procedure</font>

324
00:14:46,060 --> 00:14:49,479
in the procedure in the procedure in the

325
00:14:47,380 --> 00:14:51,490
procedure and then the thing is you<font color="#E5E5E5"> need</font>

326
00:14:49,480 --> 00:14:53,680
to<font color="#CCCCCC"> think about</font><font color="#E5E5E5"> the scoping lexical names</font>

327
00:14:51,490 --> 00:14:59,040
so<font color="#E5E5E5"> that makes this tea a bit complicated</font>

328
00:14:53,680 --> 00:15:02,920
so this<font color="#CCCCCC"> january thing it simplifies the</font>

329
00:14:59,040 --> 00:15:05,890
<font color="#E5E5E5">the</font><font color="#CCCCCC"> AST it also flattens stuff in the</font>

330
00:15:02,920 --> 00:15:08,170
control flow and then from then<font color="#E5E5E5"> the</font>

331
00:15:05,890 --> 00:15:10,540
first attempt<font color="#E5E5E5"> we did was to okay do some</font>

332
00:15:08,170 --> 00:15:13,089
<font color="#CCCCCC">cogeneration</font><font color="#E5E5E5"> and actually generate plain</font>

333
00:15:10,540 --> 00:15:17,699
<font color="#E5E5E5">c code then pass that through a compiler</font>

334
00:15:13,090 --> 00:15:20,440
<font color="#CCCCCC">and we have a running executable</font><font color="#E5E5E5"> okay so</font>

335
00:15:17,700 --> 00:15:23,260
one man year<font color="#E5E5E5"> actually this one's one</font>

336
00:15:20,440 --> 00:15:26,110
person doing<font color="#E5E5E5"> it on his own he didn't</font>

337
00:15:23,260 --> 00:15:28,050
have a lot of experience on<font color="#E5E5E5"> PL one so</font>

338
00:15:26,110 --> 00:15:30,580
this was also<font color="#E5E5E5"> a big learning</font><font color="#CCCCCC"> experience</font>

339
00:15:28,050 --> 00:15:34,990
for<font color="#E5E5E5"> that</font><font color="#CCCCCC"> person and also for</font><font color="#E5E5E5"> us as a</font>

340
00:15:30,580 --> 00:15:37,420
company<font color="#E5E5E5"> issues</font><font color="#CCCCCC"> you lose</font><font color="#E5E5E5"> your debug info</font>

341
00:15:34,990 --> 00:15:38,740
<font color="#E5E5E5">so once you have this C code you want to</font>

342
00:15:37,420 --> 00:15:40,990
debug it<font color="#E5E5E5"> you don't know why this thing</font>

343
00:15:38,740 --> 00:15:42,790
<font color="#E5E5E5">comes from so you lost your debug info</font>

344
00:15:40,990 --> 00:15:45,880
so it's<font color="#E5E5E5"> very hard to debug the generated</font>

345
00:15:42,790 --> 00:15:48,310
<font color="#CCCCCC">code semantics</font><font color="#E5E5E5"> of stuff in the C code is</font>

346
00:15:45,880 --> 00:15:49,870
not clear if I have a name<font color="#E5E5E5"> in the C code</font>

347
00:15:48,310 --> 00:15:53,260
is<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> left hand side</font><font color="#CCCCCC"> is at the right</font>

348
00:15:49,870 --> 00:15:54,940
<font color="#CCCCCC">hand side is the way I want to treat</font>

349
00:15:53,260 --> 00:15:57,840
<font color="#E5E5E5">this as a pointer do I want to treat</font>

350
00:15:54,940 --> 00:16:00,310
<font color="#CCCCCC">this</font><font color="#E5E5E5"> as a value</font><font color="#CCCCCC"> it's really not clear</font>

351
00:15:57,840 --> 00:16:03,540
executables at the end<font color="#E5E5E5"> they turned out</font>

352
00:16:00,310 --> 00:16:06,099
to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> slow two reasons for this</font>

353
00:16:03,540 --> 00:16:09,699
this<font color="#E5E5E5"> current generation was suboptimal</font>

354
00:16:06,100 --> 00:16:11,020
<font color="#E5E5E5">and GCC that was used as a back</font><font color="#CCCCCC"> end</font>

355
00:16:09,700 --> 00:16:13,240
didn't do all<font color="#CCCCCC"> of the kinds of</font>

356
00:16:11,020 --> 00:16:16,510
optimizations that<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> adult VM</font>

357
00:16:13,240 --> 00:16:18,940
can<font color="#E5E5E5"> do and the entire process in the end</font>

358
00:16:16,510 --> 00:16:22,120
<font color="#E5E5E5">was too complicated and we were starting</font>

359
00:16:18,940 --> 00:16:25,450
to<font color="#E5E5E5"> hit the wall at that</font><font color="#CCCCCC"> point and then</font>

360
00:16:22,120 --> 00:16:27,850
we were lucky<font color="#E5E5E5"> yeah I guess I can</font><font color="#CCCCCC"> say we</font>

361
00:16:25,450 --> 00:16:29,440
were lucky<font color="#E5E5E5"> our client said you know</font>

362
00:16:27,850 --> 00:16:32,020
actually what you would<font color="#E5E5E5"> like to do is</font>

363
00:16:29,440 --> 00:16:34,839
you would<font color="#CCCCCC"> like to use áliveá so all</font>

364
00:16:32,020 --> 00:16:38,150
<font color="#E5E5E5">right so let's switch this let's try</font>

365
00:16:34,839 --> 00:16:45,080
this out use it as a learning experience

366
00:16:38,150 --> 00:16:48,230
starts again<font color="#E5E5E5"> and go to</font><font color="#CCCCCC"> LLVM what we do</font>

367
00:16:45,080 --> 00:16:52,040
is we talk to the<font color="#CCCCCC"> backend via the in</font>

368
00:16:48,230 --> 00:16:53,690
memory<font color="#E5E5E5"> intermediate representation</font><font color="#CCCCCC"> so</font>

369
00:16:52,040 --> 00:16:55,160
what do<font color="#CCCCCC"> we do</font><font color="#E5E5E5"> it's two</font><font color="#CCCCCC"> and a half many</font>

370
00:16:53,690 --> 00:17:00,140
years is<font color="#E5E5E5"> more than one person</font><font color="#CCCCCC"> now</font>

371
00:16:55,160 --> 00:17:02,060
working on<font color="#E5E5E5"> that via this simple tea tree</font>

372
00:17:00,140 --> 00:17:04,609
with a flattened control flow it's using

373
00:17:02,060 --> 00:17:07,220
the C API<font color="#E5E5E5"> to generate the</font><font color="#CCCCCC"> in memory</font>

374
00:17:04,609 --> 00:17:13,579
representation of the intermediate

375
00:17:07,220 --> 00:17:15,800
representation so<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> client wanted</font>

376
00:17:13,579 --> 00:17:18,439
this we did a thorough rewrite<font color="#CCCCCC"> of this</font>

377
00:17:15,800 --> 00:17:24,470
<font color="#E5E5E5">pass and we integrated</font><font color="#CCCCCC"> there the lessons</font>

378
00:17:18,440 --> 00:17:26,750
<font color="#CCCCCC">from version one why the C API stability</font>

379
00:17:24,470 --> 00:17:27,620
stability stability<font color="#E5E5E5"> backward</font>

380
00:17:26,750 --> 00:17:29,240
<font color="#E5E5E5">compatibility</font>

381
00:17:27,619 --> 00:17:32,270
<font color="#CCCCCC">backwards compatibility etcetera</font>

382
00:17:29,240 --> 00:17:35,240
<font color="#E5E5E5">etcetera</font><font color="#CCCCCC"> remember the talk of previously</font>

383
00:17:32,270 --> 00:17:38,510
<font color="#CCCCCC">LLVM</font><font color="#E5E5E5"> change is so fast we don't want to</font>

384
00:17:35,240 --> 00:17:41,230
treat treat that<font color="#CCCCCC"> stability is key we</font>

385
00:17:38,510 --> 00:17:45,890
<font color="#E5E5E5">want this thing to</font><font color="#CCCCCC"> work for now until</font>

386
00:17:41,230 --> 00:17:47,690
<font color="#E5E5E5">however so developers were looking</font><font color="#CCCCCC"> okay</font>

387
00:17:45,890 --> 00:17:49,610
what's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> option that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> do to try</font>

388
00:17:47,690 --> 00:17:51,110
to<font color="#CCCCCC"> generate something</font><font color="#E5E5E5"> to have something</font>

389
00:17:49,610 --> 00:17:52,879
which is<font color="#E5E5E5"> stable as possible</font><font color="#CCCCCC"> and said</font>

390
00:17:51,110 --> 00:17:55,669
<font color="#E5E5E5">okay yeah we need to use the api's</font>

391
00:17:52,880 --> 00:17:57,710
there's<font color="#CCCCCC"> a C++ API which is very good</font>

392
00:17:55,670 --> 00:18:00,110
they were supported and the C API which

393
00:17:57,710 --> 00:18:02,270
is also very<font color="#CCCCCC"> good</font><font color="#E5E5E5"> but not so</font><font color="#CCCCCC"> well</font>

394
00:18:00,110 --> 00:18:05,929
supported<font color="#CCCCCC"> but</font><font color="#E5E5E5"> then you</font><font color="#CCCCCC"> go look</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> a</font>

395
00:18:02,270 --> 00:18:08,060
procedural language<font color="#E5E5E5"> like PR one and you</font>

396
00:18:05,930 --> 00:18:10,760
<font color="#E5E5E5">try to have a square peg and put it in</font>

397
00:18:08,060 --> 00:18:14,090
the<font color="#E5E5E5"> C++ round hole doesn't work so</font>

398
00:18:10,760 --> 00:18:16,040
there's<font color="#CCCCCC"> a impedance mismatch there so</font>

399
00:18:14,090 --> 00:18:20,090
developers made the decision okay let's

400
00:18:16,040 --> 00:18:21,710
go for<font color="#E5E5E5"> the C API</font><font color="#CCCCCC"> even though we feel</font>

401
00:18:20,090 --> 00:18:24,020
that<font color="#CCCCCC"> it's treated as the second-class</font>

402
00:18:21,710 --> 00:18:29,870
citizens I have some examples later in

403
00:18:24,020 --> 00:18:33,260
the slides<font color="#E5E5E5"> okay so I have some examples</font>

404
00:18:29,870 --> 00:18:35,870
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> next slide actually so we are on</font>

405
00:18:33,260 --> 00:18:39,260
our<font color="#E5E5E5"> VM</font><font color="#CCCCCC"> v and there are some things with</font>

406
00:18:35,870 --> 00:18:41,629
<font color="#E5E5E5">the C API that we are missing</font><font color="#CCCCCC"> first of</font>

407
00:18:39,260 --> 00:18:44,629
<font color="#E5E5E5">all again</font><font color="#CCCCCC"> debugging information on the</font>

408
00:18:41,630 --> 00:18:46,850
variable<font color="#E5E5E5"> or metadata</font><font color="#CCCCCC"> of variables</font><font color="#E5E5E5"> this</font>

409
00:18:44,630 --> 00:18:48,910
<font color="#E5E5E5">is something which was discovered quite</font>

410
00:18:46,850 --> 00:18:50,699
some time ago<font color="#E5E5E5"> and</font><font color="#CCCCCC"> actually there is a</font>

411
00:18:48,910 --> 00:18:52,830
patch

412
00:18:50,700 --> 00:18:54,810
which has been on the review for<font color="#E5E5E5"> six</font>

413
00:18:52,830 --> 00:18:55,530
months but the<font color="#CCCCCC"> tread is</font><font color="#E5E5E5"> dead nothing has</font>

414
00:18:54,810 --> 00:19:01,080
happened there

415
00:18:55,530 --> 00:19:03,840
and by the way<font color="#CCCCCC"> C++ API has it for the</font><font color="#E5E5E5"> C</font>

416
00:19:01,080 --> 00:19:08,449
API<font color="#CCCCCC"> bit of the C</font><font color="#E5E5E5"> of a second class</font>

417
00:19:03,840 --> 00:19:11,189
system for us is<font color="#E5E5E5"> not really a big issue</font>

418
00:19:08,450 --> 00:19:15,510
<font color="#CCCCCC">because actually the go compiler had</font>

419
00:19:11,190 --> 00:19:18,420
these patches<font color="#E5E5E5"> first before the world</font>

420
00:19:15,510 --> 00:19:20,160
<font color="#CCCCCC">LLVM C patch is submitted go</font><font color="#E5E5E5"> had some</font>

421
00:19:18,420 --> 00:19:22,980
patches there<font color="#E5E5E5"> that work for</font><font color="#CCCCCC"> that</font>

422
00:19:20,160 --> 00:19:24,270
<font color="#E5E5E5">compiler so what we did we</font><font color="#CCCCCC"> took them we</font>

423
00:19:22,980 --> 00:19:26,400
worked<font color="#CCCCCC"> them a bit because it didn't</font>

424
00:19:24,270 --> 00:19:28,680
compile out of the box we<font color="#E5E5E5"> apply them</font>

425
00:19:26,400 --> 00:19:31,260
they work<font color="#E5E5E5"> for us</font><font color="#CCCCCC"> so we're still using</font>

426
00:19:28,680 --> 00:19:34,710
these patches<font color="#E5E5E5"> because</font><font color="#CCCCCC"> they work and</font>

427
00:19:31,260 --> 00:19:36,990
sadly<font color="#E5E5E5"> nothing's happening there I</font><font color="#CCCCCC"> don't</font>

428
00:19:34,710 --> 00:19:40,200
<font color="#E5E5E5">have</font><font color="#CCCCCC"> an URL for you I didn't look it up</font>

429
00:19:36,990 --> 00:19:44,640
at the time and yeah she<font color="#E5E5E5"> lived on that</font>

430
00:19:40,200 --> 00:19:47,070
sorry there are things missing<font color="#CCCCCC"> from the</font>

431
00:19:44,640 --> 00:19:48,780
mainframe<font color="#E5E5E5"> which is actually not such a</font>

432
00:19:47,070 --> 00:19:51,060
big surprise<font color="#E5E5E5"> because the mainframe is a</font>

433
00:19:48,780 --> 00:19:53,070
strange<font color="#E5E5E5"> and old beast so you see things</font>

434
00:19:51,060 --> 00:19:55,770
<font color="#E5E5E5">there that you</font><font color="#CCCCCC"> don't tend</font><font color="#E5E5E5"> to see anymore</font>

435
00:19:53,070 --> 00:19:56,520
<font color="#CCCCCC">back to decimals</font><font color="#E5E5E5"> anybody knows back</font>

436
00:19:55,770 --> 00:19:58,530
decimals

437
00:19:56,520 --> 00:20:01,320
some people<font color="#CCCCCC"> knows back decimals</font><font color="#E5E5E5"> it's in</font>

438
00:19:58,530 --> 00:20:03,000
the<font color="#CCCCCC"> wor standard draw standard says that</font>

439
00:20:01,320 --> 00:20:04,700
you should<font color="#E5E5E5"> have all PL</font><font color="#CCCCCC"> one and COBOL</font>

440
00:20:03,000 --> 00:20:09,750
types but<font color="#CCCCCC"> ok they're not there I</font>

441
00:20:04,700 --> 00:20:13,950
understand and you miss mainframes are

442
00:20:09,750 --> 00:20:15,780
big endian like<font color="#E5E5E5"> motorola 6800 gional</font>

443
00:20:13,950 --> 00:20:18,840
PowerPC etcetera etcetera<font color="#CCCCCC"> Intel this</font>

444
00:20:15,780 --> 00:20:22,800
little<font color="#E5E5E5"> endian</font><font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> when you want</font><font color="#CCCCCC"> to</font>

445
00:20:18,840 --> 00:20:24,689
start debugging that floats<font color="#E5E5E5"> yeah you</font>

446
00:20:22,800 --> 00:20:26,870
know in the 60s<font color="#CCCCCC"> there were no I Triple E</font>

447
00:20:24,690 --> 00:20:31,950
standard flows<font color="#CCCCCC"> IBM</font><font color="#E5E5E5"> has their own floats</font>

448
00:20:26,870 --> 00:20:34,409
it's not in<font color="#E5E5E5"> their make sense good news</font>

449
00:20:31,950 --> 00:20:37,080
<font color="#E5E5E5">this thing which are still can't</font>

450
00:20:34,410 --> 00:20:40,170
pronounce<font color="#E5E5E5"> which is pre ASCII encoding of</font>

451
00:20:37,080 --> 00:20:45,570
characters it works out of the<font color="#E5E5E5"> box in</font>

452
00:20:40,170 --> 00:20:47,610
gdb<font color="#E5E5E5"> no problem at all so that's</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> so</font>

453
00:20:45,570 --> 00:20:50,639
some things<font color="#E5E5E5"> that I'm starting</font><font color="#CCCCCC"> to the</font>

454
00:20:47,610 --> 00:20:52,050
guys<font color="#E5E5E5"> the circular so cool so but you</font>

455
00:20:50,640 --> 00:20:54,060
<font color="#E5E5E5">know what's</font><font color="#CCCCCC"> your feeling about it</font><font color="#E5E5E5"> what</font>

456
00:20:52,050 --> 00:20:57,360
how do you feel about<font color="#CCCCCC"> this what's really</font>

457
00:20:54,060 --> 00:21:00,419
notable<font color="#E5E5E5"> the tough part</font><font color="#CCCCCC"> actually is just</font>

458
00:20:57,360 --> 00:21:02,820
<font color="#E5E5E5">doing the</font><font color="#CCCCCC"> mapping of PL 1</font><font color="#E5E5E5"> through the</font>

459
00:21:00,420 --> 00:21:03,780
LLVM intermediate representation<font color="#CCCCCC"> all the</font>

460
00:21:02,820 --> 00:21:06,629
rest is easy

461
00:21:03,780 --> 00:21:08,399
so that's really cool<font color="#CCCCCC"> because the stuff</font>

462
00:21:06,630 --> 00:21:09,900
which<font color="#CCCCCC"> is stuffed for us is stuff and the</font>

463
00:21:08,400 --> 00:21:13,230
stuff<font color="#CCCCCC"> which we</font><font color="#E5E5E5"> don't care about that</font>

464
00:21:09,900 --> 00:21:17,910
should just work<font color="#E5E5E5"> is easy so that's great</font>

465
00:21:13,230 --> 00:21:21,420
<font color="#E5E5E5">that's really really great we use a</font>

466
00:21:17,910 --> 00:21:25,650
simple stuff<font color="#E5E5E5"> as possible</font><font color="#CCCCCC"> plain</font><font color="#E5E5E5"> vanilla</font>

467
00:21:21,420 --> 00:21:29,070
<font color="#E5E5E5">even plainer than because we have this</font>

468
00:21:25,650 --> 00:21:32,010
problem<font color="#CCCCCC"> that stability compatibility</font><font color="#E5E5E5"> no</font>

469
00:21:29,070 --> 00:21:35,669
dependencies<font color="#E5E5E5"> yeah we are very simple</font>

470
00:21:32,010 --> 00:21:37,170
<font color="#E5E5E5">people because of this we don't care</font><font color="#CCCCCC"> at</font>

471
00:21:35,670 --> 00:21:38,700
school that you're<font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> it's cool</font>

472
00:21:37,170 --> 00:21:41,670
that<font color="#E5E5E5"> there's a lot of advanced stuff</font>

473
00:21:38,700 --> 00:21:45,030
<font color="#CCCCCC">that it's not for</font><font color="#E5E5E5"> us</font><font color="#CCCCCC"> as simple</font><font color="#E5E5E5"> as</font>

474
00:21:41,670 --> 00:21:49,200
possible<font color="#CCCCCC"> so that we are sure that</font><font color="#E5E5E5"> we</font>

475
00:21:45,030 --> 00:21:51,780
won't<font color="#E5E5E5"> have problems in the</font><font color="#CCCCCC"> future and</font>

476
00:21:49,200 --> 00:21:54,600
actually<font color="#E5E5E5"> it only took us</font><font color="#CCCCCC"> 3 to 4 days to</font>

477
00:21:51,780 --> 00:21:58,889
<font color="#CCCCCC">go from</font><font color="#E5E5E5"> version 4</font><font color="#CCCCCC"> to version 5 which is</font>

478
00:21:54,600 --> 00:22:01,590
<font color="#CCCCCC">cool that's done one week</font><font color="#E5E5E5"> boom it took</font>

479
00:21:58,890 --> 00:22:04,080
us so long because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have this own old</font>

480
00:22:01,590 --> 00:22:05,639
<font color="#E5E5E5">very strange thing that we needed to</font>

481
00:22:04,080 --> 00:22:07,590
<font color="#E5E5E5">generate</font><font color="#CCCCCC"> our band regenerate our</font>

482
00:22:05,640 --> 00:22:10,830
bindings<font color="#E5E5E5"> for so that took us a bit</font><font color="#CCCCCC"> of</font>

483
00:22:07,590 --> 00:22:13,919
<font color="#E5E5E5">time</font><font color="#CCCCCC"> and we</font><font color="#E5E5E5"> had to reapply the gold</font>

484
00:22:10,830 --> 00:22:19,310
patches again<font color="#CCCCCC"> and that's all that we had</font>

485
00:22:13,920 --> 00:22:19,310
<font color="#CCCCCC">to do it's great</font>

486
00:22:19,869 --> 00:22:29,139
something that's happened a couple of

487
00:22:23,360 --> 00:22:29,139
<font color="#E5E5E5">weeks</font><font color="#CCCCCC"> ago actually stood so in a test</font>

488
00:22:30,369 --> 00:22:37,519
we're compiling a test program this

489
00:22:34,610 --> 00:22:41,119
<font color="#E5E5E5">program on window takes 30 seconds on</font>

490
00:22:37,519 --> 00:22:48,110
<font color="#E5E5E5">Linux it takes 12 hours something's</font>

491
00:22:41,119 --> 00:22:51,289
wrong<font color="#CCCCCC"> here so did</font><font color="#E5E5E5"> some digging found out</font>

492
00:22:48,110 --> 00:22:54,019
where<font color="#E5E5E5"> where</font><font color="#CCCCCC"> where's the cause because</font>

493
00:22:51,289 --> 00:22:55,730
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> trying to compile a basic block for</font>

494
00:22:54,019 --> 00:22:57,320
about 4 million intermediate

495
00:22:55,730 --> 00:22:59,570
representation instruction<font color="#E5E5E5"> yeah</font>

496
00:22:57,320 --> 00:23:02,269
the<font color="#E5E5E5"> in line I went a bit crazy</font><font color="#CCCCCC"> okay</font>

497
00:22:59,570 --> 00:23:03,590
<font color="#CCCCCC">whatever formally an intermediate</font>

498
00:23:02,269 --> 00:23:06,739
representation instruction trying to

499
00:23:03,590 --> 00:23:11,389
compile that<font color="#E5E5E5"> so actually yeah</font><font color="#CCCCCC"> that's the</font>

500
00:23:06,739 --> 00:23:13,429
block so what's happening there when you

501
00:23:11,389 --> 00:23:15,258
calculate<font color="#CCCCCC"> the offset of an instruction</font>

502
00:23:13,429 --> 00:23:18,739
inside<font color="#E5E5E5"> of a block this happens in linear</font>

503
00:23:15,259 --> 00:23:21,980
time<font color="#E5E5E5"> it works the list apparently this</font>

504
00:23:18,739 --> 00:23:24,379
<font color="#E5E5E5">is cool if you have to compute this for</font>

505
00:23:21,980 --> 00:23:26,029
the number of instruction but<font color="#CCCCCC"> actually</font>

506
00:23:24,379 --> 00:23:27,559
when you're<font color="#E5E5E5"> generating code you're going</font>

507
00:23:26,029 --> 00:23:33,730
to do this for all<font color="#E5E5E5"> the instructions in</font>

508
00:23:27,559 --> 00:23:36,168
the block so it explodes what's the fix

509
00:23:33,730 --> 00:23:38,450
simple fix let's just limit<font color="#CCCCCC"> the number</font>

510
00:23:36,169 --> 00:23:40,489
of<font color="#E5E5E5"> instructions in the basic block that</font>

511
00:23:38,450 --> 00:23:43,190
<font color="#E5E5E5">way we'll just limit it</font><font color="#CCCCCC"> to a reasonable</font>

512
00:23:40,489 --> 00:23:45,499
number and the<font color="#E5E5E5"> problems</font><font color="#CCCCCC"> till there</font><font color="#E5E5E5"> but</font>

513
00:23:43,190 --> 00:23:48,679
we won't face it<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> just</font>

514
00:23:45,499 --> 00:23:50,509
<font color="#CCCCCC">fix that oh</font><font color="#E5E5E5"> yeah but the C API doesn't</font>

515
00:23:48,679 --> 00:23:53,090
<font color="#E5E5E5">give us a count of how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> instructions</font>

516
00:23:50,509 --> 00:23:57,440
we already have in this basic block<font color="#CCCCCC"> C++</font>

517
00:23:53,090 --> 00:23:59,720
API does it right so<font color="#E5E5E5"> okay our solution</font>

518
00:23:57,440 --> 00:24:02,389
we have our simple tree which has<font color="#E5E5E5"> a</font>

519
00:23:59,720 --> 00:24:04,070
<font color="#E5E5E5">number of nodes</font><font color="#CCCCCC"> well just say if we</font><font color="#E5E5E5"> are</font>

520
00:24:02,389 --> 00:24:06,408
in the basic block<font color="#CCCCCC"> and we already passed</font>

521
00:24:04,070 --> 00:24:07,700
one more than 100 nodes<font color="#CCCCCC"> has kept</font><font color="#E5E5E5"> this</font>

522
00:24:06,409 --> 00:24:10,759
basic block<font color="#CCCCCC"> off somehow</font>

523
00:24:07,700 --> 00:24:13,700
start with an<font color="#CCCCCC"> ex-patient block problem</font>

524
00:24:10,759 --> 00:24:16,100
<font color="#E5E5E5">source so we still</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> know why if 30</font>

525
00:24:13,700 --> 00:24:18,859
seconds on<font color="#CCCCCC"> windows and 12 hours</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> linux</font>

526
00:24:16,100 --> 00:24:25,309
but we<font color="#E5E5E5"> already spent enough time on this</font>

527
00:24:18,859 --> 00:24:26,570
so we<font color="#CCCCCC"> can't I will not comment on that</font>

528
00:24:25,309 --> 00:24:30,620
so many<font color="#E5E5E5"> men</font>

529
00:24:26,570 --> 00:24:32,360
multiple reasons<font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> this was</font>

530
00:24:30,620 --> 00:24:35,508
already<font color="#E5E5E5"> two days</font><font color="#CCCCCC"> a work</font><font color="#E5E5E5"> we're a company</font>

531
00:24:32,360 --> 00:24:37,580
<font color="#E5E5E5">we need to move forward</font><font color="#CCCCCC"> so we don't know</font>

532
00:24:35,509 --> 00:24:39,250
what happened there we have a fix<font color="#E5E5E5"> we</font>

533
00:24:37,580 --> 00:24:43,279
need to move on<font color="#E5E5E5"> okay</font>

534
00:24:39,250 --> 00:24:45,230
so then I asked my the people<font color="#E5E5E5"> that I was</font>

535
00:24:43,279 --> 00:24:47,450
<font color="#E5E5E5">talking to okay you guys</font><font color="#CCCCCC"> you seem very</font>

536
00:24:45,230 --> 00:24:50,659
<font color="#E5E5E5">happy so tell me what's really nice</font>

537
00:24:47,450 --> 00:24:52,279
what's cool about a long<font color="#CCCCCC"> vm first thing</font>

538
00:24:50,659 --> 00:24:56,539
that's really cool about<font color="#E5E5E5"> the LLVM is</font>

539
00:24:52,279 --> 00:24:58,519
that it just works this<font color="#E5E5E5"> is great for</font><font color="#CCCCCC"> us</font>

540
00:24:56,539 --> 00:25:00,799
I<font color="#E5E5E5"> mean this is not part of the stuff</font>

541
00:24:58,519 --> 00:25:02,870
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to spend time on we need to</font>

542
00:25:00,799 --> 00:25:05,570
spend<font color="#CCCCCC"> time on</font><font color="#E5E5E5"> the complex part of the</font>

543
00:25:02,870 --> 00:25:08,090
job is<font color="#E5E5E5"> taking</font><font color="#CCCCCC"> pl-1 and translating it to</font>

544
00:25:05,570 --> 00:25:13,220
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can run so the fact that</font>

545
00:25:08,090 --> 00:25:15,289
it just<font color="#CCCCCC"> works is great</font><font color="#E5E5E5"> intermediate</font>

546
00:25:13,220 --> 00:25:17,629
representation we like it<font color="#E5E5E5"> because it's</font>

547
00:25:15,289 --> 00:25:19,279
documented<font color="#CCCCCC"> it's clean it's focused it</font>

548
00:25:17,629 --> 00:25:24,769
does exactly what it should<font color="#E5E5E5"> do</font>

549
00:25:19,279 --> 00:25:26,509
great the<font color="#E5E5E5"> ecosystem it's very nice to</font>

550
00:25:24,769 --> 00:25:28,730
<font color="#E5E5E5">have a broad ecosystem</font><font color="#CCCCCC"> a lot of</font>

551
00:25:26,509 --> 00:25:32,360
different tools<font color="#E5E5E5"> but</font><font color="#CCCCCC"> also an active</font>

552
00:25:28,730 --> 00:25:34,370
<font color="#CCCCCC">ecosystem</font><font color="#E5E5E5"> it's not bad things not</font><font color="#CCCCCC"> moving</font>

553
00:25:32,360 --> 00:25:38,439
so it's really good<font color="#E5E5E5"> to be able to</font><font color="#CCCCCC"> do</font>

554
00:25:34,370 --> 00:25:43,699
that so that's<font color="#E5E5E5"> cool</font>

555
00:25:38,440 --> 00:25:45,889
what's not cool<font color="#E5E5E5"> about Olivia this</font><font color="#CCCCCC"> is</font>

556
00:25:43,700 --> 00:25:50,090
really big stumbling block<font color="#E5E5E5"> the</font>

557
00:25:45,889 --> 00:25:54,860
<font color="#E5E5E5">documentation of</font><font color="#CCCCCC"> the CI API</font><font color="#E5E5E5"> this was</font>

558
00:25:50,090 --> 00:25:58,939
something that<font color="#E5E5E5"> took</font><font color="#CCCCCC"> a lot of time</font><font color="#E5E5E5"> so for</font>

559
00:25:54,860 --> 00:26:01,340
<font color="#E5E5E5">example sometimes</font><font color="#CCCCCC"> in the beginning it</font>

560
00:25:58,940 --> 00:26:03,500
was not<font color="#E5E5E5"> clear if</font><font color="#CCCCCC"> you allocate the</font><font color="#E5E5E5"> string</font>

561
00:26:01,340 --> 00:26:05,299
who is then responsible to<font color="#CCCCCC"> fate is</font><font color="#E5E5E5"> it</font>

562
00:26:03,500 --> 00:26:07,220
<font color="#CCCCCC">means</font><font color="#E5E5E5"> it's somebody else where does this</font>

563
00:26:05,299 --> 00:26:08,779
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> take it free do I need to do</font>

564
00:26:07,220 --> 00:26:11,240
it<font color="#E5E5E5"> at</font><font color="#CCCCCC"> set etcetera it's not in the</font>

565
00:26:08,779 --> 00:26:14,120
documentation<font color="#E5E5E5"> you can't find it in the</font>

566
00:26:11,240 --> 00:26:17,779
documentation<font color="#E5E5E5"> so what did the guy do at</font>

567
00:26:14,120 --> 00:26:19,758
that point<font color="#CCCCCC"> Circle this just generates a</font>

568
00:26:17,779 --> 00:26:22,580
whole lot<font color="#E5E5E5"> of test programs to the API</font>

569
00:26:19,759 --> 00:26:25,159
and see what happens<font color="#CCCCCC"> and V are the</font>

570
00:26:22,580 --> 00:26:27,168
<font color="#E5E5E5">outputs try to understand what the API</font>

571
00:26:25,159 --> 00:26:28,970
does what are the responsibilities<font color="#E5E5E5"> there</font>

572
00:26:27,169 --> 00:26:30,559
so there was three weeks<font color="#E5E5E5"> of</font><font color="#CCCCCC"> work just</font>

573
00:26:28,970 --> 00:26:33,259
<font color="#E5E5E5">trying to understand what this</font><font color="#CCCCCC"> thing</font>

574
00:26:30,559 --> 00:26:36,408
does by generating code and looking at

575
00:26:33,259 --> 00:26:38,299
the output<font color="#E5E5E5"> okay this got him a certain</font>

576
00:26:36,409 --> 00:26:39,340
level of<font color="#CCCCCC"> understanding of okay this</font>

577
00:26:38,299 --> 00:26:42,100
stuff<font color="#CCCCCC"> or works like</font>

578
00:26:39,340 --> 00:26:43,360
etc<font color="#E5E5E5"> and then from that</font><font color="#CCCCCC"> point on it just</font>

579
00:26:42,100 --> 00:26:46,168
<font color="#E5E5E5">looks at</font><font color="#CCCCCC"> the source code or the</font>

580
00:26:43,360 --> 00:26:48,879
<font color="#CCCCCC">implementation of</font><font color="#E5E5E5"> the API</font><font color="#CCCCCC"> to understand</font>

581
00:26:46,169 --> 00:26:53,769
what does the IPO<font color="#CCCCCC"> API do how do you need</font>

582
00:26:48,879 --> 00:26:57,908
<font color="#E5E5E5">to do things so that's not really nice</font>

583
00:26:53,769 --> 00:27:00,279
and then I say<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> do you have</font>

584
00:26:57,909 --> 00:27:02,289
<font color="#E5E5E5">anything else you said no that's</font>

585
00:27:00,279 --> 00:27:05,070
<font color="#E5E5E5">everything I said come</font><font color="#CCCCCC"> on it has to be</font>

586
00:27:02,289 --> 00:27:07,210
something<font color="#CCCCCC"> right I need to fill my slide</font>

587
00:27:05,070 --> 00:27:08,470
something give me<font color="#E5E5E5"> something there should</font>

588
00:27:07,210 --> 00:27:10,090
be something<font color="#E5E5E5"> else and they were</font><font color="#CCCCCC"> lots of</font>

589
00:27:08,470 --> 00:27:11,679
<font color="#E5E5E5">thinking and humming and hawing and ah</font>

590
00:27:10,090 --> 00:27:14,080
yeah<font color="#CCCCCC"> okay well if you really want</font>

591
00:27:11,679 --> 00:27:18,009
something I can<font color="#E5E5E5"> give you some stuff that</font>

592
00:27:14,080 --> 00:27:20,830
you know it's<font color="#CCCCCC"> not really very convinced</font>

593
00:27:18,009 --> 00:27:24,580
<font color="#E5E5E5">okay so the thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> he came up is</font>

594
00:27:20,830 --> 00:27:26,470
<font color="#E5E5E5">that there is some a search</font><font color="#CCCCCC"> fail in the</font>

595
00:27:24,580 --> 00:27:28,570
<font color="#E5E5E5">back</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> because yeah we</font><font color="#CCCCCC"> did some calls</font>

596
00:27:26,470 --> 00:27:29,980
in the API and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> built something</font><font color="#E5E5E5"> and we</font>

597
00:27:28,570 --> 00:27:32,168
<font color="#CCCCCC">built something</font><font color="#E5E5E5"> in the wrong way and</font>

598
00:27:29,980 --> 00:27:34,419
then it<font color="#CCCCCC"> breaks</font><font color="#E5E5E5"> and then we need to</font>

599
00:27:32,169 --> 00:27:35,980
figure<font color="#CCCCCC"> out where does</font><font color="#E5E5E5"> this come from</font><font color="#CCCCCC"> we</font>

600
00:27:34,419 --> 00:27:37,990
need to map it back<font color="#CCCCCC"> to the source code</font>

601
00:27:35,980 --> 00:27:40,720
<font color="#CCCCCC">but yeah it's actually</font><font color="#E5E5E5"> an issue of</font>

602
00:27:37,990 --> 00:27:42,700
<font color="#CCCCCC">arcing because</font><font color="#E5E5E5"> this is our stuff this is</font>

603
00:27:40,720 --> 00:27:44,110
our yaffle which takes source code

604
00:27:42,700 --> 00:27:46,360
parses<font color="#CCCCCC"> it builds intermediate</font>

605
00:27:44,110 --> 00:27:48,908
representations<font color="#CCCCCC"> etc etc and then starts</font>

606
00:27:46,360 --> 00:27:51,309
<font color="#CCCCCC">calling that so</font><font color="#E5E5E5"> this is a complex</font>

607
00:27:48,909 --> 00:27:53,350
mapping<font color="#E5E5E5"> so there is no straightforward</font>

608
00:27:51,309 --> 00:27:55,480
<font color="#CCCCCC">way</font><font color="#E5E5E5"> to make the conflict mapping trivial</font>

609
00:27:53,350 --> 00:27:58,509
so there is no straightforward<font color="#CCCCCC"> way to to</font>

610
00:27:55,480 --> 00:28:00,730
<font color="#CCCCCC">figure this out it's</font><font color="#E5E5E5"> a problem that yeah</font>

611
00:27:58,509 --> 00:28:04,269
it's not much<font color="#CCCCCC"> you can do about</font><font color="#E5E5E5"> it and</font>

612
00:28:00,730 --> 00:28:06,970
then yeah the<font color="#E5E5E5"> other thing is make sense</font>

613
00:28:04,269 --> 00:28:10,869
and it's big it's huge we're not experts

614
00:28:06,970 --> 00:28:13,629
<font color="#E5E5E5">it moves around quickly so we</font><font color="#CCCCCC"> don't look</font>

615
00:28:10,869 --> 00:28:16,029
inside<font color="#CCCCCC"> really</font><font color="#E5E5E5"> it's only</font><font color="#CCCCCC"> when something</font>

616
00:28:13,629 --> 00:28:18,219
blows up somewhere<font color="#E5E5E5"> that we're trying to</font>

617
00:28:16,029 --> 00:28:20,350
figure<font color="#E5E5E5"> out how did</font><font color="#CCCCCC"> we mess</font><font color="#E5E5E5"> up so that we</font>

618
00:28:18,220 --> 00:28:22,480
caused this explosion and then we start

619
00:28:20,350 --> 00:28:25,299
<font color="#CCCCCC">looking around inside and then yeah it's</font>

620
00:28:22,480 --> 00:28:27,639
complicated<font color="#E5E5E5"> but it's normal right it's a</font>

621
00:28:25,299 --> 00:28:32,019
big thing<font color="#CCCCCC"> so you can't really</font><font color="#E5E5E5"> simplify</font>

622
00:28:27,639 --> 00:28:34,119
that<font color="#E5E5E5"> a lot so I</font><font color="#CCCCCC"> fill my slide but</font>

623
00:28:32,019 --> 00:28:36,690
actually this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the important stuff</font>

624
00:28:34,119 --> 00:28:36,689
<font color="#E5E5E5">this is</font>

625
00:28:40,159 --> 00:28:48,600
so that was a bit quick<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> we're</font>

626
00:28:45,539 --> 00:28:52,289
happy we are<font color="#E5E5E5"> very happy customers of</font>

627
00:28:48,600 --> 00:28:54,928
<font color="#CCCCCC">alluvium do you keep in mind that by</font>

628
00:28:52,289 --> 00:28:57,269
design<font color="#E5E5E5"> we keep our use as simple as</font>

629
00:28:54,929 --> 00:28:59,159
possible<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to take care of</font>

630
00:28:57,269 --> 00:29:01,379
backwards compatibility<font color="#CCCCCC"> we need to take</font>

631
00:28:59,159 --> 00:29:05,429
<font color="#E5E5E5">care of our stability so we</font><font color="#CCCCCC"> just do</font>

632
00:29:01,379 --> 00:29:07,080
plain<font color="#E5E5E5"> vanila things by design the CIP I</font>

633
00:29:05,429 --> 00:29:09,570
could be improved<font color="#E5E5E5"> it feels like a</font>

634
00:29:07,080 --> 00:29:12,149
<font color="#CCCCCC">second-class citizens</font><font color="#E5E5E5"> so there's no</font>

635
00:29:09,570 --> 00:29:13,950
debug info as I told you<font color="#E5E5E5"> before there's</font>

636
00:29:12,149 --> 00:29:16,320
this issue with basic blocks that<font color="#E5E5E5"> you</font>

637
00:29:13,950 --> 00:29:18,929
can't get the<font color="#E5E5E5"> number of instructions</font>

638
00:29:16,320 --> 00:29:22,950
<font color="#E5E5E5">inside of a basic block where C++ does</font>

639
00:29:18,929 --> 00:29:25,590
it our developer said<font color="#CCCCCC"> y'all we</font><font color="#E5E5E5"> thought</font>

640
00:29:22,950 --> 00:29:28,320
<font color="#E5E5E5">about meeting patches but actually</font><font color="#CCCCCC"> now</font>

641
00:29:25,590 --> 00:29:29,970
we didn't do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> in the</font>

642
00:29:28,320 --> 00:29:34,168
end we<font color="#CCCCCC"> only had like these two things</font>

643
00:29:29,970 --> 00:29:35,940
that<font color="#CCCCCC"> we really found and me myself and</font>

644
00:29:34,169 --> 00:29:37,710
<font color="#E5E5E5">all</font><font color="#CCCCCC"> developer said yeah I hate anything</font>

645
00:29:35,940 --> 00:29:39,239
<font color="#E5E5E5">which has to do with bureaucracy</font><font color="#CCCCCC"> I don't</font>

646
00:29:37,710 --> 00:29:42,080
want to spend time<font color="#CCCCCC"> all of that process</font>

647
00:29:39,239 --> 00:29:42,080
<font color="#CCCCCC">is too heavy wait</font>

648
00:29:42,259 --> 00:29:46,919
I've<font color="#E5E5E5"> worked in open source software also</font>

649
00:29:44,940 --> 00:29:48,179
not not<font color="#E5E5E5"> in our VM so I know you need to</font>

650
00:29:46,919 --> 00:29:51,450
do the process because otherwise it

651
00:29:48,179 --> 00:29:54,769
won't but yeah he's he's a special guy

652
00:29:51,450 --> 00:29:58,019
<font color="#CCCCCC">you know you have them</font><font color="#E5E5E5"> everywhere so</font>

653
00:29:54,769 --> 00:30:00,809
yeah it's a very<font color="#E5E5E5"> it's very difficult to</font>

654
00:29:58,019 --> 00:30:04,049
<font color="#CCCCCC">justify the investment I will push him a</font>

655
00:30:00,809 --> 00:30:08,908
bit<font color="#E5E5E5"> more and we'll see what happens</font><font color="#CCCCCC"> ok</font>

656
00:30:04,049 --> 00:30:11,999
this<font color="#E5E5E5"> is where we</font><font color="#CCCCCC"> are now well what</font><font color="#E5E5E5"> are</font>

657
00:30:08,909 --> 00:30:16,889
you<font color="#E5E5E5"> going to do more for this client so</font>

658
00:30:11,999 --> 00:30:21,450
we<font color="#E5E5E5"> need to finish the elder plops to</font>

659
00:30:16,889 --> 00:30:24,178
peel<font color="#E5E5E5"> one compiler the</font><font color="#CCCCCC"> COBOL compiler we</font>

660
00:30:21,450 --> 00:30:27,119
just started<font color="#E5E5E5"> on that so we're going</font><font color="#CCCCCC"> to</font>

661
00:30:24,179 --> 00:30:30,470
move<font color="#E5E5E5"> forward on that gobo as a language</font>

662
00:30:27,119 --> 00:30:34,379
<font color="#E5E5E5">is simpler than</font><font color="#CCCCCC"> peel one peel one is</font>

663
00:30:30,470 --> 00:30:36,600
quite<font color="#CCCCCC"> a complex</font><font color="#E5E5E5"> beast COBOL is simpler</font>

664
00:30:34,379 --> 00:30:39,748
as<font color="#E5E5E5"> a language but there is</font><font color="#CCCCCC"> more of it I</font>

665
00:30:36,600 --> 00:30:42,840
mean if you look at the<font color="#E5E5E5"> definition</font><font color="#CCCCCC"> of</font>

666
00:30:39,749 --> 00:30:45,389
<font color="#E5E5E5">the grammar of</font><font color="#CCCCCC"> Kobal it's huge gigantic</font>

667
00:30:42,840 --> 00:30:46,230
it's really incredible<font color="#E5E5E5"> so it's it's</font>

668
00:30:45,389 --> 00:30:48,659
going<font color="#E5E5E5"> to</font>

669
00:30:46,230 --> 00:30:50,490
<font color="#E5E5E5">for word linearly I don't predict any</font>

670
00:30:48,660 --> 00:30:53,310
big<font color="#E5E5E5"> stumbling blocks because of the the</font>

671
00:30:50,490 --> 00:30:54,930
simplicity simplicity of the language<font color="#E5E5E5"> so</font>

672
00:30:53,310 --> 00:30:57,179
it's<font color="#CCCCCC"> just going</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> a train that goes</font>

673
00:30:54,930 --> 00:30:59,360
and<font color="#E5E5E5"> it will take its time it should be</font>

674
00:30:57,180 --> 00:31:02,850
<font color="#E5E5E5">okay</font>

675
00:30:59,360 --> 00:31:04,770
so the a7 370 compiler which is a

676
00:31:02,850 --> 00:31:07,230
compiler<font color="#E5E5E5"> for the IBM</font><font color="#CCCCCC"> mainframe so the</font>

677
00:31:04,770 --> 00:31:10,590
<font color="#E5E5E5">version we have is for dotnet the</font>

678
00:31:07,230 --> 00:31:15,420
version we should have will be<font color="#CCCCCC"> the one</font>

679
00:31:10,590 --> 00:31:17,340
with<font color="#CCCCCC"> in with the backend LLVM which is</font>

680
00:31:15,420 --> 00:31:18,870
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be quite</font><font color="#E5E5E5"> quite complicated but</font>

681
00:31:17,340 --> 00:31:22,020
<font color="#E5E5E5">that's a long story</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> won't bore you</font>

682
00:31:18,870 --> 00:31:24,120
<font color="#CCCCCC">with that</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> it's not clear when</font>

683
00:31:22,020 --> 00:31:25,770
there's going to be people working<font color="#E5E5E5"> on</font>

684
00:31:24,120 --> 00:31:27,929
<font color="#CCCCCC">that</font><font color="#E5E5E5"> that's when that's why there's a</font>

685
00:31:25,770 --> 00:31:30,870
question<font color="#CCCCCC"> mark there</font><font color="#E5E5E5"> the plan is to do it</font>

686
00:31:27,930 --> 00:31:32,730
but<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know what this thing</font><font color="#CCCCCC"> 75%</font>

687
00:31:30,870 --> 00:31:35,070
<font color="#CCCCCC">this thing we're starting on that now</font>

688
00:31:32,730 --> 00:31:37,440
<font color="#E5E5E5">this the idea is to start on</font><font color="#CCCCCC"> that but</font>

689
00:31:35,070 --> 00:31:38,280
it's not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> clear to me when</font><font color="#E5E5E5"> this is</font>

690
00:31:37,440 --> 00:31:43,020
going<font color="#E5E5E5"> to happen</font>

691
00:31:38,280 --> 00:31:45,990
and<font color="#E5E5E5"> that was all that I would like to</font>

692
00:31:43,020 --> 00:32:05,010
say if<font color="#E5E5E5"> you have any</font><font color="#CCCCCC"> questions go ahead I</font>

693
00:31:45,990 --> 00:32:09,170
will<font color="#E5E5E5"> try to answer them</font><font color="#CCCCCC"> the problem with</font>

694
00:32:05,010 --> 00:32:12,960
the generation of the C<font color="#CCCCCC"> code is that</font><font color="#E5E5E5"> it</font>

695
00:32:09,170 --> 00:32:13,920
<font color="#CCCCCC">was a very complicated</font><font color="#E5E5E5"> generation was</font>

696
00:32:12,960 --> 00:32:19,170
<font color="#E5E5E5">very complicated</font>

697
00:32:13,920 --> 00:32:21,480
output may<font color="#CCCCCC"> be the generation step itself</font>

698
00:32:19,170 --> 00:32:25,260
could have<font color="#E5E5E5"> been redone</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> to do it</font>

699
00:32:21,480 --> 00:32:28,110
better so<font color="#CCCCCC"> there might be a way to fix</font>

700
00:32:25,260 --> 00:32:30,240
<font color="#E5E5E5">that the problem</font><font color="#CCCCCC"> that the first problem</font>

701
00:32:28,110 --> 00:32:32,520
<font color="#CCCCCC">that the developer came to me</font><font color="#E5E5E5"> about was</font>

702
00:32:30,240 --> 00:32:34,830
<font color="#E5E5E5">like there was</font><font color="#CCCCCC"> a lack of debug</font>

703
00:32:32,520 --> 00:32:38,940
information when<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are debugging the</font>

704
00:32:34,830 --> 00:32:42,929
the resulting binary there was no way to

705
00:32:38,940 --> 00:32:44,310
<font color="#E5E5E5">debug to go back so we took care we took</font>

706
00:32:42,930 --> 00:32:46,500
advantage of<font color="#E5E5E5"> the fact that the client</font>

707
00:32:44,310 --> 00:32:48,950
<font color="#E5E5E5">said we want to do</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> honor the enter</font>

708
00:32:46,500 --> 00:32:48,950
circuit out

709
00:32:51,290 --> 00:33:31,370
I know I know I'm sorry<font color="#CCCCCC"> you're preaching</font>

710
00:33:25,340 --> 00:33:39,620
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> choir do you have some time</font>

711
00:33:31,370 --> 00:33:42,500
<font color="#E5E5E5">tomorrow is close to South Station</font>

712
00:33:39,620 --> 00:33:44,649
<font color="#E5E5E5">actually tomorrow tomorrow I'll be there</font>

713
00:33:42,500 --> 00:33:44,650
tomorrow

714
00:33:54,910 --> 00:34:00,620
<font color="#CCCCCC">is</font><font color="#E5E5E5"> much better performance is much</font>

715
00:33:57,530 --> 00:34:02,660
better<font color="#CCCCCC"> two</font><font color="#E5E5E5"> reasons again the first time</font>

716
00:34:00,620 --> 00:34:05,449
that we did<font color="#CCCCCC"> this we were generating</font><font color="#E5E5E5"> C</font>

717
00:34:02,660 --> 00:34:08,270
and<font color="#CCCCCC"> C that we were generating</font><font color="#E5E5E5"> was not</font>

718
00:34:05,450 --> 00:34:09,440
optimal so we<font color="#CCCCCC"> learned from that to make</font>

719
00:34:08,270 --> 00:34:11,600
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that the intermediate</font>

720
00:34:09,440 --> 00:34:15,700
representation that<font color="#E5E5E5"> we generating now is</font>

721
00:34:11,600 --> 00:34:17,989
more optimal and then you had the LLVM

722
00:34:15,699 --> 00:34:34,609
optimizations<font color="#CCCCCC"> versus the the GCC</font>

723
00:34:17,989 --> 00:34:38,959
optimizations no<font color="#CCCCCC"> comment so the client</font>

724
00:34:34,610 --> 00:34:40,310
is<font color="#E5E5E5"> only targeting</font><font color="#CCCCCC"> Intel but with LLVM we</font>

725
00:34:38,960 --> 00:34:44,030
should be able<font color="#E5E5E5"> to target all the stuff</font>

726
00:34:40,310 --> 00:34:46,100
is<font color="#CCCCCC"> alright yeah we're</font><font color="#E5E5E5"> a company</font><font color="#CCCCCC"> right so</font>

727
00:34:44,030 --> 00:34:47,530
if<font color="#E5E5E5"> the client doesn't doesn't want it</font>

728
00:34:46,100 --> 00:34:51,770
we're not going<font color="#E5E5E5"> to spend time</font><font color="#CCCCCC"> on that</font>

729
00:34:47,530 --> 00:34:54,669
the company is targeting<font color="#E5E5E5"> Intel because</font>

730
00:34:51,770 --> 00:34:54,668
that's what the client wants

731
00:35:06,250 --> 00:35:11,810
so the question was<font color="#CCCCCC"> to how do we treat</font>

732
00:35:09,680 --> 00:35:46,759
with floating points we need<font color="#E5E5E5"> to have our</font>

733
00:35:11,810 --> 00:35:50,600
<font color="#CCCCCC">own implementation of so the question is</font>

734
00:35:46,760 --> 00:35:53,180
do we also implement<font color="#E5E5E5"> the non-standard</font>

735
00:35:50,600 --> 00:35:55,100
behavior<font color="#E5E5E5"> or do we tell</font><font color="#CCCCCC"> our clients</font><font color="#E5E5E5"> that</font>

736
00:35:53,180 --> 00:35:59,029
want to use our compiler to change their

737
00:35:55,100 --> 00:36:01,810
software we implement<font color="#E5E5E5"> behavior exactly</font>

738
00:35:59,030 --> 00:36:04,460
as it<font color="#E5E5E5"> is on the IBM mainframe</font><font color="#CCCCCC"> exactly</font>

739
00:36:01,810 --> 00:36:06,620
including all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> weight strange things</font>

740
00:36:04,460 --> 00:36:09,080
that<font color="#E5E5E5"> don't make</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> sense at all</font><font color="#CCCCCC"> we</font>

741
00:36:06,620 --> 00:36:12,859
implement we reproduce<font color="#E5E5E5"> them</font><font color="#CCCCCC"> exactly</font>

742
00:36:09,080 --> 00:36:15,620
because the core idea is<font color="#E5E5E5"> the client does</font>

743
00:36:12,860 --> 00:36:18,010
not<font color="#CCCCCC"> the client of the compiler does not</font>

744
00:36:15,620 --> 00:36:21,170
need to change his or her source code

745
00:36:18,010 --> 00:36:23,330
the idea is you take the source code<font color="#CCCCCC"> you</font>

746
00:36:21,170 --> 00:36:40,430
run it through<font color="#CCCCCC"> a different compiler now</font>

747
00:36:23,330 --> 00:36:56,630
it<font color="#E5E5E5"> runs on in this case Linux I'm sorry</font>

748
00:36:40,430 --> 00:36:58,270
I don't understand<font color="#E5E5E5"> the question the</font>

749
00:36:56,630 --> 00:37:01,630
<font color="#E5E5E5">question is if the compiler itself</font>

750
00:36:58,270 --> 00:37:03,740
<font color="#E5E5E5">behaves non standards do we also</font>

751
00:37:01,630 --> 00:37:04,520
<font color="#E5E5E5">reproduce this behavior the answer is</font>

752
00:37:03,740 --> 00:37:05,509
yes

753
00:37:04,520 --> 00:37:08,770
the

754
00:37:05,510 --> 00:37:11,750
should<font color="#E5E5E5"> produce exactly the same output</font>

755
00:37:08,770 --> 00:37:13,609
<font color="#E5E5E5">warning messages in between we're not</font>

756
00:37:11,750 --> 00:37:15,619
exactly the same warning<font color="#E5E5E5"> messages but</font>

757
00:37:13,609 --> 00:37:18,140
that's okay the output the executable

758
00:37:15,619 --> 00:37:29,930
should behave exactly the<font color="#E5E5E5"> same as the</font>

759
00:37:18,140 --> 00:37:32,060
<font color="#E5E5E5">original mainframe software the question</font>

760
00:37:29,930 --> 00:37:37,029
is how do we ensure<font color="#CCCCCC"> that code we produce</font>

761
00:37:32,060 --> 00:37:40,190
is exactly the same this is testing<font color="#CCCCCC"> here</font>

762
00:37:37,030 --> 00:37:42,680
this is testing so it's<font color="#E5E5E5"> the entire</font>

763
00:37:40,190 --> 00:37:44,690
testing question and we do as<font color="#E5E5E5"> much</font>

764
00:37:42,680 --> 00:37:46,970
testing as we can and then<font color="#CCCCCC"> also it</font>

765
00:37:44,690 --> 00:37:50,630
depends on<font color="#CCCCCC"> the client of the compiler</font><font color="#E5E5E5"> of</font>

766
00:37:46,970 --> 00:37:52,640
what<font color="#CCCCCC"> does he</font><font color="#E5E5E5"> or she</font><font color="#CCCCCC"> want we have a huge</font>

767
00:37:50,630 --> 00:38:11,300
<font color="#E5E5E5">huge battery of tests for</font><font color="#CCCCCC"> example for</font>

768
00:37:52,640 --> 00:38:14,420
the compiler<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> yeah the language is</font>

769
00:38:11,300 --> 00:38:16,700
so big<font color="#E5E5E5"> and people</font><font color="#CCCCCC"> are using it in so</font>

770
00:38:14,420 --> 00:38:18,950
many<font color="#E5E5E5"> creative</font><font color="#CCCCCC"> ways</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> no way</font>

771
00:38:16,700 --> 00:38:21,680
<font color="#E5E5E5">that we can test everything this is also</font>

772
00:38:18,950 --> 00:38:22,939
why<font color="#CCCCCC"> we do installations</font><font color="#E5E5E5"> we have people</font>

773
00:38:21,680 --> 00:38:25,609
which which connect with the client

774
00:38:22,940 --> 00:38:27,680
<font color="#CCCCCC">which are special technical people</font><font color="#E5E5E5"> but</font>

775
00:38:25,609 --> 00:38:29,660
also<font color="#E5E5E5"> good in communications that go and</font>

776
00:38:27,680 --> 00:38:31,129
they do the installation and they take

777
00:38:29,660 --> 00:38:33,140
also<font color="#E5E5E5"> take care of a part of testing</font>

778
00:38:31,130 --> 00:38:34,970
<font color="#CCCCCC">etcetera etcetera it's not just like I</font>

779
00:38:33,140 --> 00:38:38,509
make a compiler<font color="#CCCCCC"> I build you a compiler</font>

780
00:38:34,970 --> 00:38:41,029
<font color="#E5E5E5">and I leave no</font><font color="#CCCCCC"> know much more than just</font>

781
00:38:38,510 --> 00:38:43,550
<font color="#E5E5E5">that</font><font color="#CCCCCC"> many migrations in the past used to</font>

782
00:38:41,030 --> 00:38:45,890
be<font color="#E5E5E5"> my results are identical to yours in</font>

783
00:38:43,550 --> 00:38:47,450
the demo<font color="#CCCCCC"> everything else nobody</font><font color="#E5E5E5"> cared</font>

784
00:38:45,890 --> 00:38:49,040
the client didn't care the marketing

785
00:38:47,450 --> 00:38:50,689
guys didn't care the engineers didn't

786
00:38:49,040 --> 00:38:52,580
care it just has to<font color="#CCCCCC"> be identical when</font>

787
00:38:50,690 --> 00:38:54,260
you sell<font color="#E5E5E5"> it then everything</font><font color="#CCCCCC"> else is</font>

788
00:38:52,580 --> 00:38:56,750
<font color="#CCCCCC">whatever and the engine</font><font color="#E5E5E5"> users in</font><font color="#CCCCCC"> the</font>

789
00:38:54,260 --> 00:38:59,140
<font color="#CCCCCC">know</font><font color="#E5E5E5"> it's fine it's fine</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> yeah this is</font>

790
00:38:56,750 --> 00:38:59,140
<font color="#CCCCCC">notice</font>

791
00:39:03,450 --> 00:39:08,350
<font color="#CCCCCC">especially</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> it we consider writing</font><font color="#E5E5E5"> an</font>

792
00:39:05,950 --> 00:39:13,750
emulator<font color="#CCCCCC"> for the mainframe I don't know</font>

793
00:39:08,350 --> 00:39:14,860
<font color="#E5E5E5">but I don't</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to consider it thank</font>

794
00:39:13,750 --> 00:39:24,099
you

795
00:39:14,860 --> 00:39:24,099
[Applause]

