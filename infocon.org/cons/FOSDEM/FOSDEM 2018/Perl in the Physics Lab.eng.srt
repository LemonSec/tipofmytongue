1
00:00:04,670 --> 00:00:12,510
so<font color="#CCCCCC"> welcome let</font><font color="#E5E5E5"> me tell you something</font>

2
00:00:10,080 --> 00:00:13,860
<font color="#E5E5E5">about Paul and the physics lab so first</font>

3
00:00:12,510 --> 00:00:18,509
maybe I should<font color="#CCCCCC"> introduce</font><font color="#E5E5E5"> myself a little</font>

4
00:00:13,860 --> 00:00:20,910
bit<font color="#E5E5E5"> I'm well I'm mostly here at fosston</font>

5
00:00:18,510 --> 00:00:23,280
because I'm heavily involved in Gentoo

6
00:00:20,910 --> 00:00:27,000
Linux<font color="#E5E5E5"> so most of the time you will find</font>

7
00:00:23,280 --> 00:00:29,310
me down at the<font color="#CCCCCC"> gen 2</font><font color="#E5E5E5"> bus</font><font color="#CCCCCC"> where I'm</font>

8
00:00:27,000 --> 00:00:34,650
involved in packaging all<font color="#E5E5E5"> sorts of stuff</font>

9
00:00:29,310 --> 00:00:37,019
<font color="#CCCCCC">including also Perl as a</font><font color="#E5E5E5"> Perl package</font>

10
00:00:34,650 --> 00:00:39,930
I'm a little bit horrified at all these

11
00:00:37,020 --> 00:00:43,469
<font color="#CCCCCC">ideas about carton and docker and so on</font>

12
00:00:39,930 --> 00:00:52,940
I think specifying good dependencies

13
00:00:43,469 --> 00:00:56,550
should do the<font color="#CCCCCC"> work but anyway</font><font color="#E5E5E5"> in my main</font>

14
00:00:52,940 --> 00:00:59,129
<font color="#CCCCCC">occupation in my day job I'm an</font>

15
00:00:56,550 --> 00:01:00,809
experimental<font color="#CCCCCC"> physicist working at the</font>

16
00:00:59,129 --> 00:01:04,319
<font color="#CCCCCC">University leading a research group</font><font color="#E5E5E5"> and</font>

17
00:01:00,809 --> 00:01:06,750
we<font color="#E5E5E5"> are using Perl to measure and that's</font>

18
00:01:04,319 --> 00:01:09,600
what I'm going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> tell you about today</font>

19
00:01:06,750 --> 00:01:14,880
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is this package here lab</font>

20
00:01:09,600 --> 00:01:17,280
measurement so what are<font color="#E5E5E5"> we working on so</font>

21
00:01:14,880 --> 00:01:19,949
we<font color="#CCCCCC"> are working</font><font color="#E5E5E5"> on we are researching</font>

22
00:01:17,280 --> 00:01:23,729
<font color="#E5E5E5">carbon nanotubes</font><font color="#CCCCCC"> I don't know if you've</font>

23
00:01:19,950 --> 00:01:26,880
seen<font color="#CCCCCC"> these pictures here before</font><font color="#E5E5E5"> there</font>

24
00:01:23,729 --> 00:01:30,000
<font color="#E5E5E5">are many different forms of carbon there</font>

25
00:01:26,880 --> 00:01:33,420
are many different<font color="#E5E5E5"> forms of carbon you</font>

26
00:01:30,000 --> 00:01:34,979
can<font color="#CCCCCC"> have Dimond where you have such a</font>

27
00:01:33,420 --> 00:01:37,080
three-dimensional lattice<font color="#E5E5E5"> of carbon</font>

28
00:01:34,979 --> 00:01:39,030
atoms you<font color="#E5E5E5"> can have these fullerenes</font><font color="#CCCCCC"> you</font>

29
00:01:37,080 --> 00:01:42,030
can have graphite or graphene with this

30
00:01:39,030 --> 00:01:43,979
layer structures and<font color="#E5E5E5"> you can have carbon</font>

31
00:01:42,030 --> 00:01:45,630
<font color="#E5E5E5">nanotubes carbon nanotubes stay there</font>

32
00:01:43,979 --> 00:01:49,649
you have<font color="#E5E5E5"> basically one of these caffeine</font>

33
00:01:45,630 --> 00:01:53,520
sheets wrapped up<font color="#E5E5E5"> into a tube</font><font color="#CCCCCC"> and it's</font>

34
00:01:49,649 --> 00:01:55,590
really one big<font color="#CCCCCC"> macro molecule you can</font>

35
00:01:53,520 --> 00:01:58,319
<font color="#CCCCCC">have many different types</font><font color="#E5E5E5"> of these it's</font>

36
00:01:55,590 --> 00:02:00,539
bit hard to see so<font color="#E5E5E5"> you can have multi</font>

37
00:01:58,319 --> 00:02:02,399
walled ones we have many such shells<font color="#E5E5E5"> in</font>

38
00:02:00,539 --> 00:02:04,590
each other<font color="#E5E5E5"> you have single walled</font>

39
00:02:02,399 --> 00:02:07,050
nanotubes<font color="#E5E5E5"> where you have</font><font color="#CCCCCC"> just one these</font>

40
00:02:04,590 --> 00:02:11,280
<font color="#E5E5E5">are transmission electron microscope</font>

41
00:02:07,050 --> 00:02:13,109
images<font color="#E5E5E5"> and you can describe them</font><font color="#CCCCCC"> with</font>

42
00:02:11,280 --> 00:02:15,810
the different<font color="#CCCCCC"> structures here you can</font>

43
00:02:13,110 --> 00:02:18,580
see that essentially this carbon sheet

44
00:02:15,810 --> 00:02:22,090
is wrapped up<font color="#E5E5E5"> and glued together in</font>

45
00:02:18,580 --> 00:02:24,340
different ways<font color="#E5E5E5"> why is this interesting</font>

46
00:02:22,090 --> 00:02:26,830
well<font color="#E5E5E5"> you can do a lot of different</font>

47
00:02:24,340 --> 00:02:28,360
<font color="#CCCCCC">things with them on one hand</font>

48
00:02:26,830 --> 00:02:30,220
they<font color="#CCCCCC"> are</font><font color="#E5E5E5"> very light and they</font><font color="#CCCCCC"> are</font>

49
00:02:28,360 --> 00:02:32,890
<font color="#E5E5E5">mechanically very stable there are very</font>

50
00:02:30,220 --> 00:02:36,970
<font color="#E5E5E5">tension of assistant and this is more or</font>

51
00:02:32,890 --> 00:02:38,950
less<font color="#E5E5E5"> the</font><font color="#CCCCCC"> only material where</font><font color="#E5E5E5"> people find</font>

52
00:02:36,970 --> 00:02:40,990
<font color="#E5E5E5">that the numbers are right for building</font>

53
00:02:38,950 --> 00:02:43,000
this hypothetical<font color="#CCCCCC"> space</font><font color="#E5E5E5"> elevator</font>

54
00:02:40,990 --> 00:02:45,010
<font color="#CCCCCC">basically you need to have something</font>

55
00:02:43,000 --> 00:02:48,780
<font color="#CCCCCC">that is strong enough so it</font><font color="#E5E5E5"> can carry</font>

56
00:02:45,010 --> 00:02:48,780
its<font color="#CCCCCC"> own weight over such a long length</font>

57
00:02:50,100 --> 00:02:55,239
the<font color="#E5E5E5"> other side is that it's a very</font><font color="#CCCCCC"> good</font>

58
00:02:53,020 --> 00:02:57,760
<font color="#E5E5E5">electrical conductor so people have</font><font color="#CCCCCC"> been</font>

59
00:02:55,240 --> 00:03:01,270
thinking<font color="#E5E5E5"> about using it for cheap beers</font>

60
00:02:57,760 --> 00:03:03,640
for example and<font color="#E5E5E5"> that it can be used for</font>

61
00:03:01,270 --> 00:03:06,310
very fast transistor elements the

62
00:03:03,640 --> 00:03:10,079
problem is the handling<font color="#E5E5E5"> and building the</font>

63
00:03:06,310 --> 00:03:12,550
devices but<font color="#E5E5E5"> also there people are making</font>

64
00:03:10,080 --> 00:03:15,550
good steps forward so this<font color="#E5E5E5"> is kind of</font>

65
00:03:12,550 --> 00:03:21,640
the first<font color="#E5E5E5"> nanotube computer that was</font>

66
00:03:15,550 --> 00:03:25,510
built<font color="#E5E5E5"> it's still far below anything x86</font>

67
00:03:21,640 --> 00:03:29,768
like but anyway I mean<font color="#E5E5E5"> it looks like the</font>

68
00:03:25,510 --> 00:03:34,290
logic is essentially working<font color="#E5E5E5"> mmm what</font>

69
00:03:29,769 --> 00:03:37,120
are<font color="#CCCCCC"> we doing</font><font color="#E5E5E5"> we are looking at the</font>

70
00:03:34,290 --> 00:03:39,940
mechanics and electronics<font color="#CCCCCC"> of single such</font>

71
00:03:37,120 --> 00:03:42,190
<font color="#CCCCCC">molecules and you can see here that</font><font color="#E5E5E5"> you</font>

72
00:03:39,940 --> 00:03:44,370
have two<font color="#E5E5E5"> metal electrodes</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you have</font>

73
00:03:42,190 --> 00:03:47,890
one<font color="#E5E5E5"> molecule that is lying across them</font>

74
00:03:44,370 --> 00:03:50,680
<font color="#E5E5E5">in this electron microscope picture the</font>

75
00:03:47,890 --> 00:03:55,119
scale bar here is half a micrometer<font color="#CCCCCC"> 500</font>

76
00:03:50,680 --> 00:03:57,550
nanometers<font color="#CCCCCC"> so we have a single</font><font color="#E5E5E5"> macro</font>

77
00:03:55,120 --> 00:03:59,500
molecule we have metallic contacts we

78
00:03:57,550 --> 00:04:03,970
have a gate electrode that<font color="#CCCCCC"> is somewhere</font>

79
00:03:59,500 --> 00:04:07,269
<font color="#CCCCCC">on</font><font color="#E5E5E5"> a chip</font><font color="#CCCCCC"> pack substrate and you can</font>

80
00:04:03,970 --> 00:04:09,040
draw this for example<font color="#E5E5E5"> here like a small</font>

81
00:04:07,269 --> 00:04:11,290
circuit you have<font color="#CCCCCC"> two voltages</font><font color="#E5E5E5"> that are</font>

82
00:04:09,040 --> 00:04:13,150
<font color="#E5E5E5">applied one source voltage that is</font>

83
00:04:11,290 --> 00:04:15,850
actually driving the<font color="#E5E5E5"> current that flows</font>

84
00:04:13,150 --> 00:04:17,829
through<font color="#E5E5E5"> the tube one gate voltage that</font>

85
00:04:15,850 --> 00:04:19,659
is just changing the electrostatic

86
00:04:17,829 --> 00:04:23,229
potential<font color="#E5E5E5"> and you measure the current</font>

87
00:04:19,660 --> 00:04:26,140
that<font color="#CCCCCC"> flows that looks</font><font color="#E5E5E5"> pretty simple the</font>

88
00:04:23,229 --> 00:04:29,039
challenges are<font color="#E5E5E5"> you want to measure at</font>

89
00:04:26,140 --> 00:04:31,620
very<font color="#E5E5E5"> small voltages</font><font color="#CCCCCC"> you want to measure</font>

90
00:04:29,040 --> 00:04:34,710
<font color="#CCCCCC">there's more currents you probably want</font>

91
00:04:31,620 --> 00:04:37,710
to measure at high frequencies and<font color="#CCCCCC"> you</font>

92
00:04:34,710 --> 00:04:41,310
want to see<font color="#E5E5E5"> tiny details and that's why</font>

93
00:04:37,710 --> 00:04:42,450
you go to low temperature low

94
00:04:41,310 --> 00:04:44,250
temperature

95
00:04:42,450 --> 00:04:45,780
well temperature is for us a little<font color="#E5E5E5"> bit</font>

96
00:04:44,250 --> 00:04:48,330
something like noise<font color="#CCCCCC"> the higher the</font>

97
00:04:45,780 --> 00:04:51,690
temperature is the more smeared out the

98
00:04:48,330 --> 00:04:54,000
<font color="#E5E5E5">effect</font><font color="#CCCCCC"> that we want to observe are this</font>

99
00:04:51,690 --> 00:04:57,060
<font color="#CCCCCC">is a</font><font color="#E5E5E5"> logarithmic scale physicists love</font>

100
00:04:54,000 --> 00:05:01,470
to compare temperature scales<font color="#E5E5E5"> and energy</font>

101
00:04:57,060 --> 00:05:05,010
scales<font color="#CCCCCC"> so</font><font color="#E5E5E5"> energy a temperature scale in</font>

102
00:05:01,470 --> 00:05:07,080
Kelvin so this is always<font color="#CCCCCC"> a thousand so</font>

103
00:05:05,010 --> 00:05:10,200
<font color="#E5E5E5">we go from a thousand Kelvin which is</font>

104
00:05:07,080 --> 00:05:12,300
<font color="#CCCCCC">about three times</font><font color="#E5E5E5"> room temperature to</font>

105
00:05:10,200 --> 00:05:15,630
<font color="#E5E5E5">one Kelvin here in between somewhere</font>

106
00:05:12,300 --> 00:05:17,340
helium gets liquid and this is where our

107
00:05:15,630 --> 00:05:21,840
experiment actually<font color="#E5E5E5"> is at 10</font><font color="#CCCCCC"> milli</font>

108
00:05:17,340 --> 00:05:24,289
Kelvin which<font color="#CCCCCC"> is 0.01 degrees above</font>

109
00:05:21,840 --> 00:05:26,729
absolute zero

110
00:05:24,290 --> 00:05:31,950
that's something you can buy<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this</font>

111
00:05:26,730 --> 00:05:35,040
equipment<font color="#E5E5E5"> to cool down so far</font><font color="#CCCCCC"> is well</font>

112
00:05:31,950 --> 00:05:36,659
<font color="#E5E5E5">commercially available it's called the</font>

113
00:05:35,040 --> 00:05:38,520
dilution refrigerator<font color="#E5E5E5"> that's actually</font>

114
00:05:36,660 --> 00:05:42,060
been a part of my IRC nickname comes

115
00:05:38,520 --> 00:05:44,729
from<font color="#CCCCCC"> it</font><font color="#E5E5E5"> uses an isotope mixture of</font>

116
00:05:42,060 --> 00:05:49,020
helium 3 and helium 4 in liquid state<font color="#CCCCCC"> as</font>

117
00:05:44,730 --> 00:05:51,930
a coolant and goes down<font color="#E5E5E5"> to in principle</font>

118
00:05:49,020 --> 00:05:53,490
<font color="#E5E5E5">arbitrarily low temperature just that at</font>

119
00:05:51,930 --> 00:05:55,170
some<font color="#CCCCCC"> point you get the</font><font color="#E5E5E5"> equilibrium</font>

120
00:05:53,490 --> 00:05:57,090
between<font color="#E5E5E5"> the thermal isolation from</font><font color="#CCCCCC"> the</font>

121
00:05:55,170 --> 00:06:00,570
<font color="#CCCCCC">outside and the cooling power and then</font>

122
00:05:57,090 --> 00:06:02,400
you have a<font color="#E5E5E5"> minimum</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's still quite</font>

123
00:06:00,570 --> 00:06:04,920
<font color="#CCCCCC">a complex piece</font><font color="#E5E5E5"> of equipment</font><font color="#CCCCCC"> and you</font>

124
00:06:02,400 --> 00:06:09,299
need the knowledge<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> personnel to</font>

125
00:06:04,920 --> 00:06:10,710
handle it<font color="#CCCCCC"> mm-hmm yeah and with that we</font>

126
00:06:09,300 --> 00:06:13,770
<font color="#E5E5E5">end up at some point</font>

127
00:06:10,710 --> 00:06:15,510
<font color="#E5E5E5">in as soon as my laptop manages drawing</font>

128
00:06:13,770 --> 00:06:18,539
the picture in our<font color="#CCCCCC"> Millah curve in lab</font>

129
00:06:15,510 --> 00:06:21,930
where<font color="#E5E5E5"> you can see all these equipment</font>

130
00:06:18,540 --> 00:06:24,570
pieces<font color="#E5E5E5"> assemble</font><font color="#CCCCCC"> together</font><font color="#E5E5E5"> so you have</font><font color="#CCCCCC"> the</font>

131
00:06:21,930 --> 00:06:26,970
<font color="#E5E5E5">actual cryostats they are sunk down in</font>

132
00:06:24,570 --> 00:06:29,940
the<font color="#E5E5E5"> floor here they actually go about</font><font color="#CCCCCC"> 3</font>

133
00:06:26,970 --> 00:06:32,640
meters<font color="#E5E5E5"> down</font><font color="#CCCCCC"> and you have all the</font><font color="#E5E5E5"> control</font>

134
00:06:29,940 --> 00:06:35,040
electronics<font color="#E5E5E5"> that</font><font color="#CCCCCC"> impart controls the</font>

135
00:06:32,640 --> 00:06:37,550
cooling<font color="#E5E5E5"> and</font><font color="#CCCCCC"> impart controls the actual</font>

136
00:06:35,040 --> 00:06:37,550
experiment

137
00:06:38,280 --> 00:06:44,229
what type<font color="#CCCCCC"> of equipment well let's look</font>

138
00:06:42,250 --> 00:06:46,090
<font color="#E5E5E5">at</font><font color="#CCCCCC"> this at such a simple measurement</font>

139
00:06:44,230 --> 00:06:48,460
<font color="#CCCCCC">I've shown you this picture here already</font>

140
00:06:46,090 --> 00:06:50,619
<font color="#E5E5E5">we have we apply two voltages measure</font>

141
00:06:48,460 --> 00:06:54,580
one current so what do we<font color="#CCCCCC"> need we need</font>

142
00:06:50,620 --> 00:06:59,740
<font color="#E5E5E5">two highly stable voltage sources this</font>

143
00:06:54,580 --> 00:07:02,349
year<font color="#E5E5E5"> from company called</font><font color="#CCCCCC"> Yokogawa we</font>

144
00:06:59,740 --> 00:07:04,380
need to amplify<font color="#E5E5E5"> the current that comes</font>

145
00:07:02,350 --> 00:07:06,820
<font color="#E5E5E5">out of the thing that's done by some</font>

146
00:07:04,380 --> 00:07:08,860
<font color="#E5E5E5">analog piece of equipment so I haven't</font>

147
00:07:06,820 --> 00:07:11,800
<font color="#CCCCCC">even</font><font color="#E5E5E5"> made a picture because it's not</font>

148
00:07:08,860 --> 00:07:14,590
interesting<font color="#CCCCCC"> for us here</font><font color="#E5E5E5"> and we need a</font>

149
00:07:11,800 --> 00:07:17,980
digitizing multimeter that<font color="#E5E5E5"> basically</font>

150
00:07:14,590 --> 00:07:19,719
reads out the<font color="#E5E5E5"> digitizes the values and</font>

151
00:07:17,980 --> 00:07:27,600
delivers them<font color="#CCCCCC"> to the computer that's</font>

152
00:07:19,720 --> 00:07:30,669
what we have<font color="#CCCCCC"> done here in general we</font><font color="#E5E5E5"> can</font>

153
00:07:27,600 --> 00:07:32,710
divide<font color="#E5E5E5"> more or less by a rule of thumb</font>

154
00:07:30,669 --> 00:07:35,380
<font color="#CCCCCC">the equipment</font><font color="#E5E5E5"> in two or three pieces</font>

155
00:07:32,710 --> 00:07:38,169
<font color="#E5E5E5">there's the fairly simple part this is</font>

156
00:07:35,380 --> 00:07:40,900
<font color="#E5E5E5">these voltage sources for example fairly</font>

157
00:07:38,169 --> 00:07:43,299
simple<font color="#E5E5E5"> as relative fairly simple my</font>

158
00:07:40,900 --> 00:07:47,590
class my personal classification is<font color="#E5E5E5"> the</font>

159
00:07:43,300 --> 00:07:48,910
manual is smaller than<font color="#E5E5E5"> 200 pages and the</font>

160
00:07:47,590 --> 00:07:52,929
programming part<font color="#E5E5E5"> of the manual is</font>

161
00:07:48,910 --> 00:07:54,880
smaller than 50<font color="#E5E5E5"> pages typically they</font>

162
00:07:52,930 --> 00:07:59,200
have<font color="#CCCCCC"> one main function for example they</font>

163
00:07:54,880 --> 00:08:03,190
apply a voltage<font color="#E5E5E5"> or they measure the</font>

164
00:07:59,200 --> 00:08:07,630
level of<font color="#E5E5E5"> a liquid hmm</font><font color="#CCCCCC"> examples would be</font>

165
00:08:03,190 --> 00:08:11,469
some cheap stepper motor for 20 euros

166
00:08:07,630 --> 00:08:13,930
<font color="#CCCCCC">that you buy at Colorado</font><font color="#E5E5E5"> or one of these</font>

167
00:08:11,470 --> 00:08:18,190
voltage sources which<font color="#CCCCCC"> costs</font><font color="#E5E5E5"> about two</font>

168
00:08:13,930 --> 00:08:22,210
and<font color="#E5E5E5"> a half thousand yours or per meter</font>

169
00:08:18,190 --> 00:08:23,770
or<font color="#E5E5E5"> a liquid level meter yeah you can't</font>

170
00:08:22,210 --> 00:08:26,049
actually read what's here this is<font color="#E5E5E5"> kind</font>

171
00:08:23,770 --> 00:08:27,520
of an except<font color="#E5E5E5"> for manual where the</font>

172
00:08:26,050 --> 00:08:31,930
command syntax for<font color="#E5E5E5"> this thing here is</font>

173
00:08:27,520 --> 00:08:35,650
just<font color="#E5E5E5"> cracked leather</font><font color="#CCCCCC"> two would be</font>

174
00:08:31,930 --> 00:08:37,799
complex<font color="#E5E5E5"> complex means usually</font><font color="#CCCCCC"> there's an</font>

175
00:08:35,650 --> 00:08:41,199
<font color="#E5E5E5">armed Linux system</font><font color="#CCCCCC"> somewhere in there</font>

176
00:08:37,799 --> 00:08:42,780
<font color="#CCCCCC">that's controlling</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> manual is</font>

177
00:08:41,200 --> 00:08:44,920
somewhere smaller than<font color="#E5E5E5"> a thousand pages</font>

178
00:08:42,780 --> 00:08:48,819
<font color="#CCCCCC">the programming part</font><font color="#E5E5E5"> is somewhere</font>

179
00:08:44,920 --> 00:08:51,650
smaller than 215 pages<font color="#CCCCCC"> and you have a</font>

180
00:08:48,820 --> 00:08:54,220
main function<font color="#E5E5E5"> with a lot of detail</font>

181
00:08:51,650 --> 00:08:56,420
for example you have something like

182
00:08:54,220 --> 00:08:58,460
<font color="#CCCCCC">radiofrequency</font><font color="#E5E5E5"> sauce that can do</font>

183
00:08:56,420 --> 00:09:01,520
amplitude modulation pulse modulation

184
00:08:58,460 --> 00:09:04,730
frequency modulation<font color="#CCCCCC"> anything like that</font>

185
00:09:01,520 --> 00:09:07,280
<font color="#E5E5E5">or you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> some temperature measurement</font>

186
00:09:04,730 --> 00:09:09,710
equipment that measures<font color="#CCCCCC"> five or</font><font color="#E5E5E5"> six</font>

187
00:09:07,280 --> 00:09:13,459
temperature channels and can regulate<font color="#E5E5E5"> or</font>

188
00:09:09,710 --> 00:09:17,270
you have a magnet power supplier for<font color="#E5E5E5"> a</font>

189
00:09:13,460 --> 00:09:20,590
big fat superconducting magnet<font color="#CCCCCC"> all such</font>

190
00:09:17,270 --> 00:09:20,590
a spectrum analyzer here

191
00:09:21,460 --> 00:09:29,500
well that's level<font color="#CCCCCC"> two</font><font color="#E5E5E5"> and then there's</font>

192
00:09:24,350 --> 00:09:31,640
all also level three level three<font color="#E5E5E5"> well</font>

193
00:09:29,500 --> 00:09:35,440
<font color="#CCCCCC">Manuel</font><font color="#E5E5E5"> bigger than a thousand pages</font>

194
00:09:31,640 --> 00:09:38,920
programming part larger than<font color="#E5E5E5"> 250 pages</font>

195
00:09:35,440 --> 00:09:42,110
<font color="#CCCCCC">price insane</font>

196
00:09:38,920 --> 00:09:44,540
typical well<font color="#E5E5E5"> one is this cooling</font>

197
00:09:42,110 --> 00:09:46,070
equipment<font color="#CCCCCC"> okay that does</font><font color="#E5E5E5"> not really have</font>

198
00:09:44,540 --> 00:09:49,790
a thousand pages manual but it should

199
00:09:46,070 --> 00:09:52,550
have and if you count every page with a

200
00:09:49,790 --> 00:09:56,780
mistake<font color="#E5E5E5"> three times</font><font color="#CCCCCC"> then you get pretty</font>

201
00:09:52,550 --> 00:09:58,540
close<font color="#CCCCCC"> to the thousand pages then</font>

202
00:09:56,780 --> 00:10:01,730
something like<font color="#CCCCCC"> a</font><font color="#E5E5E5"> vector network analyzer</font>

203
00:09:58,540 --> 00:10:04,699
<font color="#E5E5E5">from</font><font color="#CCCCCC"> Orange Box</font><font color="#E5E5E5"> here which is basically</font>

204
00:10:01,730 --> 00:10:06,650
<font color="#E5E5E5">measuring transmission</font><font color="#CCCCCC"> properties in a</font>

205
00:10:04,700 --> 00:10:08,990
microwave regime so you send them my

206
00:10:06,650 --> 00:10:11,090
<font color="#E5E5E5">frequency signal in a frequency signal</font>

207
00:10:08,990 --> 00:10:13,700
<font color="#E5E5E5">in you get a high frequency signal out</font>

208
00:10:11,090 --> 00:10:17,090
and you see what a<font color="#E5E5E5"> transmission</font>

209
00:10:13,700 --> 00:10:19,310
amplitudes and phases you<font color="#E5E5E5"> get well this</font>

210
00:10:17,090 --> 00:10:20,990
is again<font color="#CCCCCC"> a piece of the manual and what</font>

211
00:10:19,310 --> 00:10:24,729
you can't read is<font color="#CCCCCC"> that the programming</font>

212
00:10:20,990 --> 00:10:24,730
<font color="#E5E5E5">part here is somewhere like</font><font color="#CCCCCC"> 500</font><font color="#E5E5E5"> pages</font>

213
00:10:28,000 --> 00:10:35,030
<font color="#E5E5E5">how do you program this stuff well</font>

214
00:10:30,730 --> 00:10:37,820
there's different<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> access you</font>

215
00:10:35,030 --> 00:10:41,480
<font color="#CCCCCC">can often</font><font color="#E5E5E5"> connect them directly</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> some</font>

216
00:10:37,820 --> 00:10:44,480
<font color="#E5E5E5">network it's not always a good idea to</font>

217
00:10:41,480 --> 00:10:48,020
<font color="#E5E5E5">connect them to</font><font color="#CCCCCC"> the Internet at least</font>

218
00:10:44,480 --> 00:10:49,460
one piece<font color="#CCCCCC"> of equipment that I saw ones</font>

219
00:10:48,020 --> 00:10:53,120
that<font color="#E5E5E5"> actually cost somewhere around</font>

220
00:10:49,460 --> 00:10:57,040
<font color="#CCCCCC">40,000</font><font color="#E5E5E5"> euros had an open</font><font color="#CCCCCC"> tenet port</font>

221
00:10:53,120 --> 00:10:57,040
where he<font color="#E5E5E5"> immediately got a</font><font color="#CCCCCC"> root shell on</font>

222
00:10:57,569 --> 00:11:03,329
internal<font color="#E5E5E5"> armed Linux system without any</font>

223
00:10:59,999 --> 00:11:08,610
password mmm that was luckily fixed in

224
00:11:03,329 --> 00:11:09,599
the next<font color="#CCCCCC"> fembra release so use</font><font color="#E5E5E5"> a</font>

225
00:11:08,610 --> 00:11:12,899
separate<font color="#CCCCCC"> network for that</font>

226
00:11:09,600 --> 00:11:16,470
<font color="#CCCCCC">mmm</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> control some of the older</font>

227
00:11:12,899 --> 00:11:19,170
<font color="#CCCCCC">equipment with serial cables some of</font>

228
00:11:16,470 --> 00:11:24,980
them have USB<font color="#E5E5E5"> port that acts as a USB</font>

229
00:11:19,170 --> 00:11:28,559
<font color="#E5E5E5">serial interface</font><font color="#CCCCCC"> then there's this GPIB</font>

230
00:11:24,980 --> 00:11:31,889
<font color="#E5E5E5">general-purpose</font><font color="#CCCCCC"> interface bus or I</font>

231
00:11:28,559 --> 00:11:34,110
Triple E<font color="#CCCCCC"> 488</font><font color="#E5E5E5"> that's something people</font>

232
00:11:31,889 --> 00:11:37,170
outside<font color="#E5E5E5"> the lab don't know it's</font>

233
00:11:34,110 --> 00:11:40,589
<font color="#E5E5E5">basically a very fat cable about</font><font color="#CCCCCC"> a</font>

234
00:11:37,170 --> 00:11:47,699
centimeter in diameter with a fat plug

235
00:11:40,589 --> 00:11:49,230
here<font color="#CCCCCC"> a parallel bus 8-bit</font><font color="#E5E5E5"> depending on</font>

236
00:11:47,699 --> 00:11:54,240
how<font color="#E5E5E5"> old</font><font color="#CCCCCC"> your equipment is it can</font><font color="#E5E5E5"> be</font>

237
00:11:49,230 --> 00:11:57,180
pretty slow<font color="#E5E5E5"> or pretty fast up</font><font color="#CCCCCC"> to 15</font>

238
00:11:54,240 --> 00:11:59,430
devices on 20 meters<font color="#E5E5E5"> of cable topology</font>

239
00:11:57,180 --> 00:12:03,899
<font color="#E5E5E5">any so that means you can</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> a bunch</font>

240
00:11:59,430 --> 00:12:07,378
of spaghetti<font color="#E5E5E5"> out of</font><font color="#CCCCCC"> it but it's</font><font color="#E5E5E5"> pretty</font>

241
00:12:03,899 --> 00:12:12,389
useful<font color="#E5E5E5"> because it handles part of the</font>

242
00:12:07,379 --> 00:12:16,399
equipment<font color="#CCCCCC"> addressing and part</font><font color="#E5E5E5"> of the</font>

243
00:12:12,389 --> 00:12:18,480
communication protocol and more modern

244
00:12:16,399 --> 00:12:20,910
variants are also built<font color="#E5E5E5"> on top of</font><font color="#CCCCCC"> that</font>

245
00:12:18,480 --> 00:12:23,009
<font color="#CCCCCC">so you have the USB USB test and</font>

246
00:12:20,910 --> 00:12:25,939
measurement<font color="#E5E5E5"> which is basically just</font>

247
00:12:23,009 --> 00:12:28,800
<font color="#CCCCCC">another type another</font><font color="#E5E5E5"> class of USB</font><font color="#CCCCCC"> device</font>

248
00:12:25,939 --> 00:12:32,459
<font color="#E5E5E5">that more or less emulates the protocols</font>

249
00:12:28,800 --> 00:12:35,609
from<font color="#E5E5E5"> here over USB and you have weeks</font><font color="#CCCCCC"> e</font>

250
00:12:32,459 --> 00:12:40,529
11 which is emulating the same protocols

251
00:12:35,610 --> 00:12:45,660
<font color="#E5E5E5">over TCP so they are in everything but</font>

252
00:12:40,529 --> 00:12:47,819
<font color="#E5E5E5">the hard way are pretty much similar how</font>

253
00:12:45,660 --> 00:12:50,519
do the commands look like well luckily

254
00:12:47,819 --> 00:12:53,069
most of the<font color="#CCCCCC"> equipment just words</font><font color="#E5E5E5"> with</font>

255
00:12:50,519 --> 00:12:55,550
<font color="#CCCCCC">ASCII which makes life pretty simple</font>

256
00:12:53,069 --> 00:12:58,410
<font color="#E5E5E5">mm-hmm</font>

257
00:12:55,550 --> 00:13:01,800
you can talk<font color="#E5E5E5"> to them essentially with</font>

258
00:12:58,410 --> 00:13:04,920
the terminal emulator and everything

259
00:13:01,800 --> 00:13:06,430
that conforms to this I Triple E<font color="#CCCCCC"> 488 not</font>

260
00:13:04,920 --> 00:13:09,529
<font color="#CCCCCC">too</font>

261
00:13:06,430 --> 00:13:11,689
<font color="#E5E5E5">understand some minimal command set some</font>

262
00:13:09,529 --> 00:13:14,000
a few generic commands<font color="#E5E5E5"> for example this</font>

263
00:13:11,690 --> 00:13:16,310
<font color="#CCCCCC">ITN will you basically</font><font color="#E5E5E5"> just tell the</font>

264
00:13:14,000 --> 00:13:18,529
instrument<font color="#CCCCCC"> identify yourself</font><font color="#E5E5E5"> and you get</font>

265
00:13:16,310 --> 00:13:20,899
<font color="#CCCCCC">a response like</font><font color="#E5E5E5"> this year so this would</font>

266
00:13:18,529 --> 00:13:24,170
be like<font color="#E5E5E5"> lakeshore temperature control</font>

267
00:13:20,899 --> 00:13:29,540
interface<font color="#CCCCCC"> the model</font><font color="#E5E5E5"> number serial number</font>

268
00:13:24,170 --> 00:13:33,920
and<font color="#E5E5E5"> so on</font><font color="#CCCCCC"> everything that</font><font color="#E5E5E5"> goes beyond</font>

269
00:13:29,540 --> 00:13:35,959
this<font color="#E5E5E5"> well primitive idea of identify</font>

270
00:13:33,920 --> 00:13:40,910
yourself<font color="#E5E5E5"> or reset yourself</font><font color="#CCCCCC"> or something</font>

271
00:13:35,959 --> 00:13:43,729
<font color="#CCCCCC">like that can vary mmm</font><font color="#E5E5E5"> so you have</font>

272
00:13:40,910 --> 00:13:45,290
non-standard stuff which is<font color="#E5E5E5"> basically</font>

273
00:13:43,730 --> 00:13:48,620
either old or highly specialized

274
00:13:45,290 --> 00:13:52,040
equipment<font color="#E5E5E5"> you have they're not quite</font>

275
00:13:48,620 --> 00:13:56,300
<font color="#E5E5E5">standard stuff well some companies</font>

276
00:13:52,040 --> 00:13:59,660
<font color="#E5E5E5">really try</font><font color="#CCCCCC"> hard and</font><font color="#E5E5E5"> get it wrong and you</font>

277
00:13:56,300 --> 00:14:02,540
have<font color="#E5E5E5"> language that's called STS CPI</font><font color="#CCCCCC"> or</font>

278
00:13:59,660 --> 00:14:05,350
<font color="#CCCCCC">skippy</font><font color="#E5E5E5"> standard commands for</font>

279
00:14:02,540 --> 00:14:08,990
<font color="#CCCCCC">programmatic</font><font color="#E5E5E5"> instruments which defines</font>

280
00:14:05,350 --> 00:14:10,850
<font color="#E5E5E5">other complex syntax it is fairly</font>

281
00:14:08,990 --> 00:14:14,120
readable<font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> something like</font>

282
00:14:10,850 --> 00:14:15,860
system<font color="#CCCCCC"> communicates serial about 2400</font>

283
00:14:14,120 --> 00:14:18,829
<font color="#E5E5E5">you can guess what it does it sets</font>

284
00:14:15,860 --> 00:14:24,319
serial communication to<font color="#CCCCCC"> 2,400</font><font color="#E5E5E5"> dots or</font>

285
00:14:18,829 --> 00:14:28,040
measure voltage DC was<font color="#E5E5E5"> okay or source</font>

286
00:14:24,319 --> 00:14:32,500
frequency start<font color="#E5E5E5"> 100</font><font color="#CCCCCC"> stop 200 means</font><font color="#E5E5E5"> sweep</font>

287
00:14:28,040 --> 00:14:32,500
<font color="#E5E5E5">a frequency from 100 Hertz to 200 Hertz</font>

288
00:14:32,920 --> 00:14:41,599
that's<font color="#E5E5E5"> actually doable so how do other</font>

289
00:14:39,620 --> 00:14:45,110
people<font color="#E5E5E5"> solve this how do other</font><font color="#CCCCCC"> people</font>

290
00:14:41,600 --> 00:14:47,209
control<font color="#E5E5E5"> the equipment well there's many</font>

291
00:14:45,110 --> 00:14:49,160
different<font color="#E5E5E5"> solutions I'm not going into</font>

292
00:14:47,209 --> 00:14:51,969
all<font color="#CCCCCC"> of them I'm mainly going to show you</font>

293
00:14:49,160 --> 00:14:54,439
one that's<font color="#CCCCCC"> kind of the default solution</font>

294
00:14:51,970 --> 00:15:00,319
<font color="#CCCCCC">that's called a National Instruments</font>

295
00:14:54,439 --> 00:15:04,910
LabVIEW it exists even<font color="#E5E5E5"> for Linux which</font>

296
00:15:00,319 --> 00:15:08,540
<font color="#CCCCCC">is astonishing in a way and that's what</font>

297
00:15:04,910 --> 00:15:11,779
every hardware<font color="#E5E5E5"> vendor provides drivers</font>

298
00:15:08,540 --> 00:15:13,899
for now then the question about for

299
00:15:11,779 --> 00:15:16,899
Linux already becomes a bit<font color="#CCCCCC"> more</font>

300
00:15:13,899 --> 00:15:16,899
questionable

301
00:15:17,670 --> 00:15:22,829
programming in LabVIEW basically means

302
00:15:20,070 --> 00:15:24,930
you wire up the flow<font color="#E5E5E5"> diagram of your</font>

303
00:15:22,830 --> 00:15:29,190
<font color="#CCCCCC">code so it's really graphical</font>

304
00:15:24,930 --> 00:15:31,319
programming<font color="#E5E5E5"> and you can easily put</font>

305
00:15:29,190 --> 00:15:34,500
together<font color="#E5E5E5"> graphical interfaces where you</font>

306
00:15:31,320 --> 00:15:37,110
have input<font color="#E5E5E5"> fields and output fields and</font>

307
00:15:34,500 --> 00:15:40,770
so on<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> I think LabVIEW is a very</font>

308
00:15:37,110 --> 00:15:43,140
nice program<font color="#E5E5E5"> for simple stuff it's good</font>

309
00:15:40,770 --> 00:15:48,540
to make<font color="#CCCCCC"> some quick prototype and try</font>

310
00:15:43,140 --> 00:15:51,540
something<font color="#E5E5E5"> out the problem is when things</font>

311
00:15:48,540 --> 00:15:56,780
get a little bit more<font color="#CCCCCC"> involved then you</font>

312
00:15:51,540 --> 00:15:58,980
end up<font color="#CCCCCC"> with something</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> this here</font><font color="#E5E5E5"> and</font>

313
00:15:56,780 --> 00:16:00,660
the fact that this<font color="#E5E5E5"> picture</font><font color="#CCCCCC"> actually</font>

314
00:15:58,980 --> 00:16:03,540
comes<font color="#CCCCCC"> from the National Instruments</font>

315
00:16:00,660 --> 00:16:06,600
website<font color="#E5E5E5"> tells you that they have</font>

316
00:16:03,540 --> 00:16:10,650
realized the problem<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> from a</font>

317
00:16:06,600 --> 00:16:13,350
page called<font color="#E5E5E5"> I think something like like</font>

318
00:16:10,650 --> 00:16:15,240
<font color="#CCCCCC">laugh you laugh</font><font color="#E5E5E5"> laugh you</font><font color="#CCCCCC"> wrote mistakes</font>

319
00:16:13,350 --> 00:16:20,190
or some rookie<font color="#CCCCCC"> mistakes or something</font>

320
00:16:15,240 --> 00:16:24,060
<font color="#E5E5E5">like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the problem</font><font color="#CCCCCC"> is I've seen code</font>

321
00:16:20,190 --> 00:16:25,500
like<font color="#CCCCCC"> that coming from a company</font><font color="#E5E5E5"> for some</font>

322
00:16:24,060 --> 00:16:27,780
piece of<font color="#E5E5E5"> equipment</font><font color="#CCCCCC"> and we had to work</font>

323
00:16:25,500 --> 00:16:31,740
<font color="#CCCCCC">with that and modify it so yeah it's not</font>

324
00:16:27,780 --> 00:16:33,660
<font color="#CCCCCC">so</font><font color="#E5E5E5"> much fun</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do subroutines and</font>

325
00:16:31,740 --> 00:16:37,830
everything like<font color="#CCCCCC"> that so</font><font color="#E5E5E5"> there are ways</font>

326
00:16:33,660 --> 00:16:39,240
<font color="#CCCCCC">to do it much</font><font color="#E5E5E5"> better much better</font><font color="#CCCCCC"> but why</font>

327
00:16:37,830 --> 00:16:44,850
do it<font color="#CCCCCC"> this way then when you can</font>

328
00:16:39,240 --> 00:16:50,400
actually<font color="#E5E5E5"> write a script</font><font color="#CCCCCC"> so what do we</font>

329
00:16:44,850 --> 00:16:53,100
<font color="#E5E5E5">need we want to be operating system</font>

330
00:16:50,400 --> 00:16:56,459
agnostic<font color="#E5E5E5"> what we want to do needs to</font>

331
00:16:53,100 --> 00:16:58,650
work with<font color="#CCCCCC"> Windows and</font><font color="#E5E5E5"> with Linux because</font>

332
00:16:56,460 --> 00:17:02,550
at<font color="#E5E5E5"> least I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> work with</font><font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> and</font>

333
00:16:58,650 --> 00:17:04,530
some of<font color="#CCCCCC"> my</font><font color="#E5E5E5"> colleagues don't it needs to</font>

334
00:17:02,550 --> 00:17:07,770
be drained<font color="#E5E5E5"> transport and</font><font color="#CCCCCC"> Driver agnostic</font>

335
00:17:04,530 --> 00:17:09,540
<font color="#E5E5E5">so the idea is if you have for</font><font color="#CCCCCC"> example</font>

336
00:17:07,770 --> 00:17:12,180
some piece<font color="#CCCCCC"> of equipment like these</font>

337
00:17:09,540 --> 00:17:16,230
voltage sources that can<font color="#E5E5E5"> be plugged in</font>

338
00:17:12,180 --> 00:17:18,870
<font color="#E5E5E5">by a</font><font color="#CCCCCC"> GPIB or by ethernet or by a USB</font>

339
00:17:16,230 --> 00:17:21,089
<font color="#E5E5E5">serial then it shouldn't matter which</font>

340
00:17:18,869 --> 00:17:25,169
type<font color="#CCCCCC"> of</font><font color="#E5E5E5"> cable</font><font color="#CCCCCC"> you use it should work</font>

341
00:17:21,089 --> 00:17:27,869
just<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> should support</font>

342
00:17:25,170 --> 00:17:29,420
<font color="#E5E5E5">background operation which means</font><font color="#CCCCCC"> for</font>

343
00:17:27,869 --> 00:17:32,270
example cron jobs

344
00:17:29,420 --> 00:17:35,240
so we want<font color="#E5E5E5"> to be able to set something</font>

345
00:17:32,270 --> 00:17:37,670
<font color="#E5E5E5">up so some</font><font color="#CCCCCC"> whatever lyrics box monitors</font>

346
00:17:35,240 --> 00:17:40,340
some piece of<font color="#E5E5E5"> equipment</font><font color="#CCCCCC"> reads</font><font color="#E5E5E5"> out values</font>

347
00:17:37,670 --> 00:17:43,700
every<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> minutes and sends an email if</font>

348
00:17:40,340 --> 00:17:46,209
something goes wrong<font color="#CCCCCC"> and we want to have</font>

349
00:17:43,700 --> 00:17:49,250
support for foreground operation

350
00:17:46,210 --> 00:17:51,170
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> we want to be able to</font>

351
00:17:49,250 --> 00:17:55,820
<font color="#E5E5E5">run</font><font color="#CCCCCC"> some long and complex measurement</font>

352
00:17:51,170 --> 00:17:59,710
and watch the result life<font color="#CCCCCC"> to see when</font>

353
00:17:55,820 --> 00:17:59,710
something<font color="#E5E5E5"> goes wrong and hit</font><font color="#CCCCCC"> control-c</font>

354
00:18:00,700 --> 00:18:06,110
<font color="#E5E5E5">of course we want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able to control</font>

355
00:18:03,920 --> 00:18:10,190
our<font color="#E5E5E5"> equipment in as much detail</font><font color="#CCCCCC"> as</font>

356
00:18:06,110 --> 00:18:13,490
possible<font color="#CCCCCC"> and on the</font><font color="#E5E5E5"> other hand we also</font>

357
00:18:10,190 --> 00:18:16,570
<font color="#E5E5E5">want to have it pretty easy to set</font><font color="#CCCCCC"> up</font>

358
00:18:13,490 --> 00:18:19,160
some sort<font color="#E5E5E5"> of default</font><font color="#CCCCCC"> measurement and</font>

359
00:18:16,570 --> 00:18:21,919
especially<font color="#E5E5E5"> since not everybody</font><font color="#CCCCCC"> who is</font>

360
00:18:19,160 --> 00:18:25,640
working<font color="#E5E5E5"> in our lab is a programmer and a</font>

361
00:18:21,920 --> 00:18:29,360
pearl expert<font color="#CCCCCC"> we want to have it fairly</font>

362
00:18:25,640 --> 00:18:33,410
easy<font color="#CCCCCC"> to extend the instrument driver</font>

363
00:18:29,360 --> 00:18:40,310
somehow<font color="#E5E5E5"> and also to create a new</font>

364
00:18:33,410 --> 00:18:43,280
measurement<font color="#CCCCCC"> just from a template so of</font>

365
00:18:40,310 --> 00:18:46,460
course what we wrote didn't happen

366
00:18:43,280 --> 00:18:49,790
overnight<font color="#E5E5E5"> this program started over</font><font color="#CCCCCC"> 10</font>

367
00:18:46,460 --> 00:18:54,200
years ago<font color="#E5E5E5"> more</font><font color="#CCCCCC"> or less</font><font color="#E5E5E5"> has grown and</font>

368
00:18:49,790 --> 00:18:56,120
evolved in the<font color="#E5E5E5"> meantime a lot how it</font>

369
00:18:54,200 --> 00:18:59,450
looks like right<font color="#CCCCCC"> now it's</font><font color="#E5E5E5"> more or less</font>

370
00:18:56,120 --> 00:19:03,080
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> year so we ended up with some</font>

371
00:18:59,450 --> 00:19:05,900
sort of layer structure everything<font color="#E5E5E5"> here</font>

372
00:19:03,080 --> 00:19:10,040
in this<font color="#E5E5E5"> gray box is the actual lab</font>

373
00:19:05,900 --> 00:19:12,800
measurement distribution<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we start up</font>

374
00:19:10,040 --> 00:19:15,830
<font color="#CCCCCC">here with the actual hardware</font><font color="#E5E5E5"> then we</font>

375
00:19:12,800 --> 00:19:19,270
have<font color="#E5E5E5"> hardware drivers or library</font>

376
00:19:15,830 --> 00:19:22,129
bindings for example<font color="#E5E5E5"> the serial port</font>

377
00:19:19,270 --> 00:19:25,280
there that's just<font color="#E5E5E5"> a Linux kernel or the</font>

378
00:19:22,130 --> 00:19:27,140
<font color="#E5E5E5">operating system Linux</font><font color="#CCCCCC"> GPIB would</font><font color="#E5E5E5"> be a</font>

379
00:19:25,280 --> 00:19:30,290
set of kernel modules that<font color="#E5E5E5"> is also a</font>

380
00:19:27,140 --> 00:19:35,930
separate distribution this<font color="#CCCCCC"> is a</font>

381
00:19:30,290 --> 00:19:39,080
commercial library then we have a bus

382
00:19:35,930 --> 00:19:41,810
layer<font color="#E5E5E5"> a connection layer an instrument</font>

383
00:19:39,080 --> 00:19:42,889
layer<font color="#E5E5E5"> the</font><font color="#CCCCCC"> so called express a I'm going</font>

384
00:19:41,810 --> 00:19:46,010
<font color="#E5E5E5">to go through this</font>

385
00:19:42,890 --> 00:19:49,100
in detail<font color="#CCCCCC"> on the next slide and in</font><font color="#E5E5E5"> the</font>

386
00:19:46,010 --> 00:19:51,530
end down<font color="#E5E5E5"> here</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> actual measurement</font>

387
00:19:49,100 --> 00:19:52,780
script<font color="#E5E5E5"> and everything</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this box here</font>

388
00:19:51,530 --> 00:19:58,270
is your problem

389
00:19:52,780 --> 00:19:58,270
<font color="#CCCCCC">so</font><font color="#E5E5E5"> no compilations involves</font><font color="#CCCCCC"> anymore</font>

390
00:19:59,080 --> 00:20:04,280
let's look<font color="#E5E5E5"> at this in detail</font><font color="#CCCCCC"> so the</font>

391
00:20:02,360 --> 00:20:06,530
upper<font color="#CCCCCC"> part</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have these</font><font color="#E5E5E5"> hardware</font>

392
00:20:04,280 --> 00:20:10,460
<font color="#E5E5E5">drivers as I mentioned this is outside</font>

393
00:20:06,530 --> 00:20:12,350
<font color="#E5E5E5">the actual</font><font color="#CCCCCC"> distribution part</font><font color="#E5E5E5"> of it is</font>

394
00:20:10,460 --> 00:20:17,270
the operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> for example the</font>

395
00:20:12,350 --> 00:20:20,530
serial port<font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> GPIB is distribution</font>

396
00:20:17,270 --> 00:20:25,340
<font color="#CCCCCC">of Linux kernel modules</font><font color="#E5E5E5"> that comes with</font>

397
00:20:20,530 --> 00:20:27,139
library to do the<font color="#E5E5E5"> communication and with</font>

398
00:20:25,340 --> 00:20:33,110
bindings for many<font color="#E5E5E5"> different languages</font>

399
00:20:27,140 --> 00:20:35,000
<font color="#E5E5E5">PHP Python but also</font><font color="#CCCCCC"> Perl some bindings</font>

400
00:20:33,110 --> 00:20:36,709
we<font color="#CCCCCC"> also to ourselves</font><font color="#E5E5E5"> there's a snap</font>

401
00:20:35,000 --> 00:20:37,970
these are<font color="#CCCCCC"> packaged which</font><font color="#E5E5E5"> binds</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> net</font>

402
00:20:36,710 --> 00:20:42,290
<font color="#E5E5E5">international instruments these are</font>

403
00:20:37,970 --> 00:20:44,570
library there's lab weeks<font color="#E5E5E5"> 11 which</font>

404
00:20:42,290 --> 00:20:49,490
basically<font color="#E5E5E5"> implements that protocol on</font>

405
00:20:44,570 --> 00:20:53,090
top of TCP<font color="#CCCCCC"> USB</font><font color="#E5E5E5"> T and C which use</font><font color="#CCCCCC"> asleep</font>

406
00:20:49,490 --> 00:20:55,040
USB to implement this test and

407
00:20:53,090 --> 00:20:56,720
measurement protocol<font color="#E5E5E5"> there is also a</font>

408
00:20:55,040 --> 00:21:02,210
<font color="#CCCCCC">Linux kernel</font><font color="#E5E5E5"> driver for</font><font color="#CCCCCC"> that protocol</font>

409
00:20:56,720 --> 00:21:06,610
<font color="#E5E5E5">but it's a bit unflexible</font><font color="#CCCCCC"> hmm yeah and</font>

410
00:21:02,210 --> 00:21:09,440
the bus and the connection level they

411
00:21:06,610 --> 00:21:13,939
encapsulate the transport<font color="#E5E5E5"> model as</font><font color="#CCCCCC"> the</font>

412
00:21:09,440 --> 00:21:17,120
command transport bus<font color="#CCCCCC"> means we have one</font>

413
00:21:13,940 --> 00:21:19,730
<font color="#CCCCCC">object</font><font color="#E5E5E5"> for one yeah</font>

414
00:21:17,120 --> 00:21:23,059
host adapter<font color="#E5E5E5"> Mallis so for example for</font>

415
00:21:19,730 --> 00:21:25,730
this<font color="#CCCCCC"> GPIB you have one</font><font color="#E5E5E5"> object that is</font>

416
00:21:23,059 --> 00:21:29,059
<font color="#CCCCCC">corresponding to the adapter card that</font>

417
00:21:25,730 --> 00:21:34,160
goes into<font color="#CCCCCC"> your PC</font><font color="#E5E5E5"> a PCI Express card for</font>

418
00:21:29,059 --> 00:21:37,280
example<font color="#CCCCCC"> that then connects to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> cables</font>

419
00:21:34,160 --> 00:21:39,380
and that has all the global<font color="#E5E5E5"> properties</font>

420
00:21:37,280 --> 00:21:41,418
that are not<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> to the instruments</font>

421
00:21:39,380 --> 00:21:46,520
connected to the bus<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are specific</font>

422
00:21:41,419 --> 00:21:48,620
to<font color="#E5E5E5"> the entire system of connection the</font>

423
00:21:46,520 --> 00:21:51,110
connection lever<font color="#E5E5E5"> layer on the other hand</font>

424
00:21:48,620 --> 00:21:53,870
that<font color="#E5E5E5"> is one object per attached</font>

425
00:21:51,110 --> 00:21:55,309
instrument so this is like a TCP

426
00:21:53,870 --> 00:21:56,449
<font color="#CCCCCC">connection that goes</font><font color="#E5E5E5"> from point A to</font>

427
00:21:55,309 --> 00:21:59,210
point B

428
00:21:56,450 --> 00:22:02,980
so you have a connection<font color="#CCCCCC"> per instrument</font>

429
00:21:59,210 --> 00:22:02,980
that<font color="#CCCCCC"> is attached to the cable</font><font color="#E5E5E5"> hmm</font>

430
00:22:06,310 --> 00:22:13,250
the connection layer is actually<font color="#E5E5E5"> only a</font>

431
00:22:08,750 --> 00:22:15,620
<font color="#E5E5E5">very thin very thin interface so if you</font>

432
00:22:13,250 --> 00:22:18,410
look at<font color="#E5E5E5"> the code in the legacy version</font>

433
00:22:15,620 --> 00:22:19,100
<font color="#E5E5E5">most of the stuff is implemented on</font><font color="#CCCCCC"> the</font>

434
00:22:18,410 --> 00:22:21,740
bus layer

435
00:22:19,100 --> 00:22:23,659
<font color="#E5E5E5">I picked because nobody here</font><font color="#CCCCCC"> is familiar</font>

436
00:22:21,740 --> 00:22:26,590
<font color="#E5E5E5">with the specialist hardware I picked</font>

437
00:22:23,660 --> 00:22:29,840
the socket connection for TCP connection

438
00:22:26,590 --> 00:22:33,649
<font color="#E5E5E5">as an example</font><font color="#CCCCCC"> so here we have the bus</font>

439
00:22:29,840 --> 00:22:35,689
and<font color="#E5E5E5"> the bus</font><font color="#CCCCCC"> defines</font><font color="#E5E5E5"> all these well</font>

440
00:22:33,650 --> 00:22:38,270
properties that correspond to everything

441
00:22:35,690 --> 00:22:40,400
that<font color="#CCCCCC"> you can do with the TCP socket like</font>

442
00:22:38,270 --> 00:22:44,210
remote port<font color="#E5E5E5"> remote address local port</font>

443
00:22:40,400 --> 00:22:50,480
local address and so on<font color="#CCCCCC"> but</font><font color="#E5E5E5"> also things</font>

444
00:22:44,210 --> 00:22:53,450
like<font color="#E5E5E5"> time outs the bus creates the</font>

445
00:22:50,480 --> 00:22:57,830
connection<font color="#E5E5E5"> objects and keeps track</font><font color="#CCCCCC"> of</font>

446
00:22:53,450 --> 00:23:01,250
<font color="#E5E5E5">them and the bus also handles the actual</font>

447
00:22:57,830 --> 00:23:05,530
<font color="#E5E5E5">oh this is too long</font><font color="#CCCCCC"> the bus</font><font color="#E5E5E5"> also handles</font>

448
00:23:01,250 --> 00:23:08,540
the actual communication<font color="#E5E5E5"> so when when</font>

449
00:23:05,530 --> 00:23:13,490
<font color="#CCCCCC">connection wants to do some some talking</font>

450
00:23:08,540 --> 00:23:16,700
<font color="#E5E5E5">to somewhere then it</font><font color="#CCCCCC"> hands over the</font>

451
00:23:13,490 --> 00:23:21,290
<font color="#E5E5E5">texts to the bus the bus does the actual</font>

452
00:23:16,700 --> 00:23:24,740
<font color="#CCCCCC">hardware access the connection layer</font>

453
00:23:21,290 --> 00:23:27,409
itself<font color="#E5E5E5"> is not a simple</font><font color="#CCCCCC"> okay I showed</font>

454
00:23:24,740 --> 00:23:29,060
here<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit but the socket</font>

455
00:23:27,410 --> 00:23:31,250
connection<font color="#CCCCCC"> module is really not much</font>

456
00:23:29,060 --> 00:23:35,350
<font color="#E5E5E5">longer than this it uses a generic</font>

457
00:23:31,250 --> 00:23:39,020
socket<font color="#E5E5E5"> it uses the bus and it</font><font color="#CCCCCC"> uses the</font>

458
00:23:35,350 --> 00:23:43,929
generic connection package<font color="#CCCCCC"> but otherwise</font>

459
00:23:39,020 --> 00:23:43,930
<font color="#E5E5E5">it just uses the inherited subs</font>

460
00:23:46,540 --> 00:23:55,730
things get<font color="#E5E5E5"> more interesting</font><font color="#CCCCCC"> when you</font>

461
00:23:50,360 --> 00:23:58,280
come to the instrument<font color="#CCCCCC"> layer because the</font>

462
00:23:55,730 --> 00:24:01,040
instrument layer here<font color="#CCCCCC"> is the first layer</font>

463
00:23:58,280 --> 00:24:08,120
where you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> actually do</font><font color="#E5E5E5"> something as a</font>

464
00:24:01,040 --> 00:24:11,510
user then we have a generic<font color="#E5E5E5"> lab</font>

465
00:24:08,120 --> 00:24:15,770
instrument class and then subclasses of

466
00:24:11,510 --> 00:24:19,910
<font color="#E5E5E5">that which correspond to specific types</font>

467
00:24:15,770 --> 00:24:21,559
of equipment<font color="#CCCCCC"> the specific types</font><font color="#E5E5E5"> of</font>

468
00:24:19,910 --> 00:24:24,740
equipment means in this case that the

469
00:24:21,559 --> 00:24:26,809
subclass implements the yeah the

470
00:24:24,740 --> 00:24:30,140
language the instrument speaks so you

471
00:24:26,809 --> 00:24:32,059
get your specific queries to<font color="#CCCCCC"> the</font>

472
00:24:30,140 --> 00:24:36,410
instrument<font color="#E5E5E5"> and you pass the specific</font>

473
00:24:32,059 --> 00:24:41,090
<font color="#CCCCCC">responders that they sent and you can</font>

474
00:24:36,410 --> 00:24:47,450
implement<font color="#CCCCCC"> a nice interface</font><font color="#E5E5E5"> for for your</font>

475
00:24:41,090 --> 00:24:49,370
<font color="#CCCCCC">end-users generating the instrument</font>

476
00:24:47,450 --> 00:24:53,030
object is father is<font color="#E5E5E5"> rather easy so</font>

477
00:24:49,370 --> 00:24:55,449
there's this function<font color="#E5E5E5"> here in the lab</font>

478
00:24:53,030 --> 00:24:58,670
measurement package<font color="#E5E5E5"> where you can</font>

479
00:24:55,450 --> 00:25:01,309
generate such an instrument<font color="#E5E5E5"> object by</font>

480
00:24:58,670 --> 00:25:04,730
passing the<font color="#CCCCCC"> class name</font><font color="#E5E5E5"> and then passing</font>

481
00:25:01,309 --> 00:25:09,290
further parameters and in this<font color="#CCCCCC"> shorthand</font>

482
00:25:04,730 --> 00:25:11,690
here<font color="#E5E5E5"> we get for example an instrument of</font>

483
00:25:09,290 --> 00:25:13,280
the type oh<font color="#CCCCCC"> I Triton that is</font>

484
00:25:11,690 --> 00:25:16,370
automatically<font color="#CCCCCC"> generated with a</font>

485
00:25:13,280 --> 00:25:18,620
connection<font color="#CCCCCC"> of the type socket and that</font>

486
00:25:16,370 --> 00:25:21,379
calls up the<font color="#E5E5E5"> whole underlying stack so</font>

487
00:25:18,620 --> 00:25:23,570
you get a bus of the<font color="#E5E5E5"> type socket you get</font>

488
00:25:21,380 --> 00:25:28,309
a<font color="#E5E5E5"> connection of</font><font color="#CCCCCC"> the type socket in this</font>

489
00:25:23,570 --> 00:25:30,919
case it's generated with the<font color="#E5E5E5"> default</font>

490
00:25:28,309 --> 00:25:34,480
parameters<font color="#CCCCCC"> like</font><font color="#E5E5E5"> the default remote</font>

491
00:25:30,920 --> 00:25:38,660
address and the default port and so on

492
00:25:34,480 --> 00:25:41,390
which<font color="#E5E5E5"> is in this</font><font color="#CCCCCC"> case already adapted</font>

493
00:25:38,660 --> 00:25:45,200
for<font color="#E5E5E5"> this specific type of instrument or</font>

494
00:25:41,390 --> 00:25:46,610
here<font color="#E5E5E5"> network analyzer</font><font color="#CCCCCC"> with the module</font>

495
00:25:45,200 --> 00:25:49,910
name of the<font color="#E5E5E5"> instrument</font>

496
00:25:46,610 --> 00:25:53,449
I set<font color="#CCCCCC"> VA and the connection type Linux</font>

497
00:25:49,910 --> 00:25:55,850
<font color="#CCCCCC">GPIB</font><font color="#E5E5E5"> and here the address on the GPIB</font>

498
00:25:53,450 --> 00:25:58,340
bus<font color="#E5E5E5"> that this particular device that we</font>

499
00:25:55,850 --> 00:25:59,270
want to<font color="#E5E5E5"> address has and then it</font>

500
00:25:58,340 --> 00:26:02,270
<font color="#CCCCCC">generates</font><font color="#E5E5E5"> connect</font>

501
00:25:59,270 --> 00:26:08,200
and a<font color="#E5E5E5"> bus if the bus doesn't exist yet</font>

502
00:26:02,270 --> 00:26:08,200
<font color="#E5E5E5">and we can we are ready to talk to it</font>

503
00:26:09,520 --> 00:26:17,360
how does<font color="#CCCCCC"> working</font><font color="#E5E5E5"> with an instrument look</font>

504
00:26:12,470 --> 00:26:21,860
like well this is actually<font color="#E5E5E5"> a full fully</font>

505
00:26:17,360 --> 00:26:25,850
functional script<font color="#CCCCCC"> so we have we are</font>

506
00:26:21,860 --> 00:26:28,639
<font color="#CCCCCC">calling here</font><font color="#E5E5E5"> in the instrument</font><font color="#CCCCCC"> module we</font>

507
00:26:25,850 --> 00:26:31,309
need<font color="#CCCCCC"> an address</font><font color="#E5E5E5"> on the GPIB bus in this</font>

508
00:26:28,640 --> 00:26:32,809
case where this instrument instrument<font color="#E5E5E5"> is</font>

509
00:26:31,309 --> 00:26:38,360
located so we get<font color="#E5E5E5"> that from the command</font>

510
00:26:32,809 --> 00:26:40,670
<font color="#CCCCCC">line</font><font color="#E5E5E5"> mm-hmm we generate the object</font>

511
00:26:38,360 --> 00:26:42,050
corresponding to the instrument this<font color="#E5E5E5"> is</font>

512
00:26:40,670 --> 00:26:45,440
in<font color="#E5E5E5"> this case of Stanford Research</font>

513
00:26:42,050 --> 00:26:50,000
lock-in amplifier which is<font color="#E5E5E5"> connected</font>

514
00:26:45,440 --> 00:26:54,920
with<font color="#CCCCCC"> GPIB address as parameter at the</font>

515
00:26:50,000 --> 00:26:58,700
first<font color="#CCCCCC"> GPIB board</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> pc and then we</font>

516
00:26:54,920 --> 00:27:01,460
read out<font color="#E5E5E5"> from there the output amplitude</font>

517
00:26:58,700 --> 00:27:04,690
and the output frequency<font color="#CCCCCC"> and we get the</font>

518
00:27:01,460 --> 00:27:07,160
input<font color="#E5E5E5"> amplitude and the input phase</font>

519
00:27:04,690 --> 00:27:09,400
doesn't<font color="#E5E5E5"> matter</font><font color="#CCCCCC"> on our</font><font color="#E5E5E5"> exactly what these</font>

520
00:27:07,160 --> 00:27:13,040
<font color="#CCCCCC">barriers mean but anyway you get</font>

521
00:27:09,400 --> 00:27:17,600
ready-made functions for getting the

522
00:27:13,040 --> 00:27:19,580
various device parameters<font color="#E5E5E5"> and obviously</font>

523
00:27:17,600 --> 00:27:21,889
<font color="#E5E5E5">you can do this in such a small program</font>

524
00:27:19,580 --> 00:27:26,419
<font color="#CCCCCC">but you can also write a big and complex</font>

525
00:27:21,890 --> 00:27:29,860
<font color="#CCCCCC">Perl script a big package that does much</font>

526
00:27:26,420 --> 00:27:29,860
more<font color="#E5E5E5"> complex things with the equipment</font>

527
00:27:30,160 --> 00:27:39,980
<font color="#E5E5E5">what do these functions do internally</font>

528
00:27:34,160 --> 00:27:42,140
<font color="#E5E5E5">oops now I</font><font color="#CCCCCC"> write yeah</font><font color="#E5E5E5"> well they are not</font>

529
00:27:39,980 --> 00:27:44,690
really<font color="#CCCCCC"> complicated</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we want to</font>

530
00:27:42,140 --> 00:27:48,140
<font color="#E5E5E5">keep this level where people</font><font color="#CCCCCC"> actually</font>

531
00:27:44,690 --> 00:27:50,059
may want<font color="#CCCCCC"> to modify things</font><font color="#E5E5E5"> and enhance</font>

532
00:27:48,140 --> 00:27:52,940
<font color="#E5E5E5">things we want to keep this level as</font>

533
00:27:50,059 --> 00:27:57,020
simple as possible<font color="#CCCCCC"> so if you look at</font>

534
00:27:52,940 --> 00:27:59,630
this gate frequency function here<font color="#CCCCCC"> it</font>

535
00:27:57,020 --> 00:28:02,920
does<font color="#E5E5E5"> nothing but call the query function</font>

536
00:27:59,630 --> 00:28:06,460
of the lab instrument class and that

537
00:28:02,920 --> 00:28:09,140
sends this string here<font color="#E5E5E5"> to the instrument</font>

538
00:28:06,460 --> 00:28:13,179
asks for the frequency gets a<font color="#CCCCCC"> response</font>

539
00:28:09,140 --> 00:28:13,179
and that response<font color="#E5E5E5"> as returned</font>

540
00:28:13,649 --> 00:28:19,059
this query function

541
00:28:15,609 --> 00:28:23,830
it handles<font color="#CCCCCC"> it's in the lab instrument</font>

542
00:28:19,059 --> 00:28:25,450
class<font color="#E5E5E5"> it passes</font><font color="#CCCCCC"> this string to the</font>

543
00:28:23,830 --> 00:28:27,759
connection with the proper parameters

544
00:28:25,450 --> 00:28:30,249
<font color="#E5E5E5">the connection</font><font color="#CCCCCC"> parser to the boss with</font>

545
00:28:27,759 --> 00:28:35,320
<font color="#CCCCCC">the proper parameters</font><font color="#E5E5E5"> and that goes</font><font color="#CCCCCC"> to</font>

546
00:28:30,249 --> 00:28:37,179
<font color="#E5E5E5">the hardware same get amplitude also</font>

547
00:28:35,320 --> 00:28:41,229
<font color="#E5E5E5">just one command string that is</font>

548
00:28:37,179 --> 00:28:43,409
<font color="#E5E5E5">documented in the in the manual of</font><font color="#CCCCCC"> the</font>

549
00:28:41,229 --> 00:28:46,720
equipment in the hardware manual and

550
00:28:43,409 --> 00:28:51,249
similar<font color="#E5E5E5"> also our fee here where we get</font>

551
00:28:46,720 --> 00:28:57,249
<font color="#E5E5E5">two</font><font color="#CCCCCC"> values at the same time and then</font>

552
00:28:51,249 --> 00:29:01,210
return them<font color="#E5E5E5"> as an array and as you can</font>

553
00:28:57,249 --> 00:29:04,059
<font color="#CCCCCC">see this is kept deliberately simple so</font>

554
00:29:01,210 --> 00:29:06,519
people who are<font color="#CCCCCC"> not</font><font color="#E5E5E5"> perl specialists can</font>

555
00:29:04,059 --> 00:29:09,090
improve it and<font color="#E5E5E5"> extend it by a simple</font>

556
00:29:06,519 --> 00:29:09,090
copy<font color="#E5E5E5"> and paste</font>

557
00:29:12,999 --> 00:29:17,829
of course there are more different cases

558
00:29:15,489 --> 00:29:19,389
<font color="#E5E5E5">and there are also cases where we can</font>

559
00:29:17,829 --> 00:29:22,149
use more language features or more

560
00:29:19,389 --> 00:29:23,799
<font color="#E5E5E5">programming features for example</font><font color="#CCCCCC"> there</font>

561
00:29:22,149 --> 00:29:25,569
are<font color="#E5E5E5"> many different types of voltage</font>

562
00:29:23,799 --> 00:29:28,469
<font color="#E5E5E5">sources</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> different companies and</font>

563
00:29:25,569 --> 00:29:31,449
<font color="#E5E5E5">they</font><font color="#CCCCCC"> all have</font><font color="#E5E5E5"> roughly the same functions</font>

564
00:29:28,469 --> 00:29:35,049
so we can make a class that<font color="#E5E5E5"> is called</font>

565
00:29:31,449 --> 00:29:39,659
<font color="#E5E5E5">instrument source and</font><font color="#CCCCCC"> that provides like</font>

566
00:29:35,049 --> 00:29:42,279
a common interface<font color="#CCCCCC"> and then we can</font>

567
00:29:39,659 --> 00:29:45,909
automatically provide more complex

568
00:29:42,279 --> 00:29:48,369
functions<font color="#CCCCCC"> for</font><font color="#E5E5E5"> example we could</font><font color="#CCCCCC"> say we</font>

569
00:29:45,909 --> 00:29:51,099
have a very sensitive chip and<font color="#CCCCCC"> that chip</font>

570
00:29:48,369 --> 00:29:54,698
doesn't<font color="#E5E5E5"> survive if the voltage</font><font color="#CCCCCC"> suddenly</font>

571
00:29:51,099 --> 00:29:57,129
changes above a certain<font color="#E5E5E5"> step size so we</font>

572
00:29:54,699 --> 00:29:59,559
enforce that<font color="#E5E5E5"> voltage</font><font color="#CCCCCC"> is only</font><font color="#E5E5E5"> changing in</font>

573
00:29:57,129 --> 00:30:02,168
a smooth way<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> maximum speed</font><font color="#CCCCCC"> and</font>

574
00:29:59,559 --> 00:30:04,449
the maximum step size and all this is

575
00:30:02,169 --> 00:30:09,459
<font color="#E5E5E5">already then implemented in the source</font>

576
00:30:04,449 --> 00:30:13,089
package<font color="#CCCCCC"> and our actual Hardware</font>

577
00:30:09,459 --> 00:30:16,199
addressing<font color="#E5E5E5"> modules don't take don't have</font>

578
00:30:13,089 --> 00:30:16,198
to take care of this<font color="#E5E5E5"> anymore</font>

579
00:30:18,989 --> 00:30:23,859
similar modules are in<font color="#E5E5E5"> preparation for</font>

580
00:30:22,419 --> 00:30:26,819
other equipment types for example

581
00:30:23,859 --> 00:30:29,948
superconducting magnet power supplies

582
00:30:26,819 --> 00:30:33,759
<font color="#E5E5E5">but then things can</font><font color="#CCCCCC"> easily get rather</font>

583
00:30:29,949 --> 00:30:36,129
complex and we don't yeah we do part of

584
00:30:33,759 --> 00:30:42,909
<font color="#CCCCCC">this stuff</font><font color="#E5E5E5"> only when we really have</font><font color="#CCCCCC"> the</font>

585
00:30:36,129 --> 00:30:48,099
need for<font color="#E5E5E5"> it and now for something more</font>

586
00:30:42,909 --> 00:30:50,619
complicated yeah now we want<font color="#E5E5E5"> to do</font>

587
00:30:48,099 --> 00:30:55,629
something like a real physics<font color="#E5E5E5"> up</font>

588
00:30:50,619 --> 00:30:57,249
measurement<font color="#CCCCCC"> let's get back to the simple</font>

589
00:30:55,629 --> 00:30:59,918
circuit<font color="#CCCCCC"> that we had at</font><font color="#E5E5E5"> the beginning we</font>

590
00:30:57,249 --> 00:31:01,059
apply two voltages we measure one

591
00:30:59,919 --> 00:31:04,449
current<font color="#CCCCCC"> huh</font>

592
00:31:01,059 --> 00:31:07,029
we could also measure<font color="#E5E5E5"> more things so</font>

593
00:31:04,449 --> 00:31:10,209
let's generalize this<font color="#E5E5E5"> a little bit so we</font>

594
00:31:07,029 --> 00:31:13,979
<font color="#CCCCCC">have nested loops</font><font color="#E5E5E5"> of two or more control</font>

595
00:31:10,209 --> 00:31:17,979
parameters in<font color="#E5E5E5"> this case the two voltages</font>

596
00:31:13,979 --> 00:31:19,659
one voltage<font color="#E5E5E5"> a second</font><font color="#CCCCCC"> voltage</font><font color="#E5E5E5"> and at each</font>

597
00:31:17,979 --> 00:31:23,319
<font color="#CCCCCC">point</font><font color="#E5E5E5"> that corresponds</font><font color="#CCCCCC"> the two of these</font>

598
00:31:19,659 --> 00:31:26,610
values<font color="#E5E5E5"> we want to measure one or more</font>

599
00:31:23,319 --> 00:31:28,990
<font color="#CCCCCC">parameters for example the current</font>

600
00:31:26,610 --> 00:31:29,620
<font color="#CCCCCC">all the noise</font><font color="#E5E5E5"> spectral density or</font>

601
00:31:28,990 --> 00:31:33,100
something like<font color="#E5E5E5"> that</font>

602
00:31:29,620 --> 00:31:34,810
<font color="#E5E5E5">mm-hmm and we want to watch</font><font color="#CCCCCC"> the progress</font>

603
00:31:33,100 --> 00:31:38,980
<font color="#CCCCCC">of the whole thing</font><font color="#E5E5E5"> so we get some output</font>

604
00:31:34,810 --> 00:31:42,010
<font color="#E5E5E5">that you can't see here and we want you</font>

605
00:31:38,980 --> 00:31:47,620
<font color="#E5E5E5">to plot the data in real</font><font color="#CCCCCC"> time in a way</font>

606
00:31:42,010 --> 00:31:53,550
<font color="#E5E5E5">no like this here how do we do that</font>

607
00:31:47,620 --> 00:31:57,159
well<font color="#E5E5E5"> for this we have this Express layer</font>

608
00:31:53,550 --> 00:32:00,970
let's just talk to<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the</font>

609
00:31:57,160 --> 00:32:02,770
measurement scripts<font color="#CCCCCC"> rather quickly</font><font color="#E5E5E5"> part</font>

610
00:32:00,970 --> 00:32:06,600
<font color="#E5E5E5">of it you already know from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> previous</font>

611
00:32:02,770 --> 00:32:09,190
<font color="#E5E5E5">slides so we</font><font color="#CCCCCC"> call in that measurement</font>

612
00:32:06,600 --> 00:32:11,199
<font color="#E5E5E5">here we just define some constants</font><font color="#CCCCCC"> that</font>

613
00:32:09,190 --> 00:32:14,830
correspond<font color="#E5E5E5"> to our hardware and to our</font>

614
00:32:11,200 --> 00:32:17,740
equipment<font color="#CCCCCC"> and so on this year you've</font>

615
00:32:14,830 --> 00:32:19,419
already seen as well so here we generate

616
00:32:17,740 --> 00:32:22,930
the instruments we have two voltage

617
00:32:19,420 --> 00:32:26,500
sources of the type<font color="#CCCCCC"> Yokogawa</font><font color="#E5E5E5"> GS 200 we</font>

618
00:32:22,930 --> 00:32:32,290
<font color="#E5E5E5">have one multimeter from HP or agilent</font>

619
00:32:26,500 --> 00:32:36,070
keysight now yeah<font color="#E5E5E5"> and then comes the new</font>

620
00:32:32,290 --> 00:32:38,889
stuff then we define sweeps sweeps

621
00:32:36,070 --> 00:32:41,439
basically means we go from voltage<font color="#E5E5E5"> a to</font>

622
00:32:38,890 --> 00:32:44,020
voltage B in steps of<font color="#E5E5E5"> this size with</font>

623
00:32:41,440 --> 00:32:46,600
this<font color="#CCCCCC"> and this speed mm-hmm so here for</font>

624
00:32:44,020 --> 00:32:49,510
example we<font color="#E5E5E5"> go stepwise from minus 1 volt</font>

625
00:32:46,600 --> 00:32:52,469
to plus 1 volt<font color="#E5E5E5"> with this step with here</font>

626
00:32:49,510 --> 00:32:55,660
and there are some<font color="#E5E5E5"> more parameters like</font>

627
00:32:52,470 --> 00:32:58,420
we don't we<font color="#CCCCCC"> jump</font><font color="#E5E5E5"> from point to point so</font>

628
00:32:55,660 --> 00:33:01,300
<font color="#E5E5E5">there is no actual smooth sweep involved</font>

629
00:32:58,420 --> 00:33:04,840
<font color="#CCCCCC">between the points and before we start</font>

630
00:33:01,300 --> 00:33:07,000
<font color="#CCCCCC">we wait three seconds hmm and this is</font>

631
00:33:04,840 --> 00:33:10,060
<font color="#E5E5E5">similar declaration so we go from minus</font>

632
00:33:07,000 --> 00:33:12,330
0.5 volts to plus<font color="#CCCCCC"> 0.5 volts with</font>

633
00:33:10,060 --> 00:33:17,860
<font color="#CCCCCC">analysts with</font><font color="#E5E5E5"> another step with and</font>

634
00:33:12,330 --> 00:33:22,810
another speed and so<font color="#E5E5E5"> on and then we</font>

635
00:33:17,860 --> 00:33:30,070
<font color="#CCCCCC">define a data file so for example yeah</font>

636
00:33:22,810 --> 00:33:33,010
<font color="#CCCCCC">tap</font><font color="#E5E5E5"> separated columns with one voltage a</font>

637
00:33:30,070 --> 00:33:35,340
second voltage<font color="#E5E5E5"> and the current</font><font color="#CCCCCC"> three</font>

638
00:33:33,010 --> 00:33:35,340
columns

639
00:33:35,480 --> 00:33:42,740
and then we<font color="#CCCCCC"> define a plot and for that</font>

640
00:33:39,590 --> 00:33:45,110
plot we have<font color="#E5E5E5"> in the x-axis</font><font color="#CCCCCC"> the one</font>

641
00:33:42,740 --> 00:33:49,840
<font color="#E5E5E5">voltage on the y axis the</font><font color="#CCCCCC"> other voltage</font>

642
00:33:45,110 --> 00:33:52,969
and the<font color="#CCCCCC"> color bar</font><font color="#E5E5E5"> is the current and</font>

643
00:33:49,840 --> 00:33:55,970
after every<font color="#CCCCCC"> Plock meaning after</font><font color="#E5E5E5"> every</font>

644
00:33:52,970 --> 00:33:57,620
trace of one of the<font color="#E5E5E5"> voltages the plot in</font>

645
00:33:55,970 --> 00:34:03,800
<font color="#E5E5E5">the block is the the picture is</font>

646
00:33:57,620 --> 00:34:05,959
refreshed next step we<font color="#E5E5E5"> need to provide</font>

647
00:34:03,800 --> 00:34:08,810
measurement instructions<font color="#E5E5E5"> what should be</font>

648
00:34:05,960 --> 00:34:11,929
<font color="#E5E5E5">done at every point and then we define a</font>

649
00:34:08,810 --> 00:34:15,679
sub that is called at every point what

650
00:34:11,929 --> 00:34:19,609
does it do<font color="#E5E5E5"> well</font><font color="#CCCCCC"> it calls it leaves</font><font color="#E5E5E5"> out</font>

651
00:34:15,679 --> 00:34:21,290
from one source<font color="#CCCCCC"> the value it reads out</font>

652
00:34:19,610 --> 00:34:25,940
from the second voltage<font color="#E5E5E5"> source</font><font color="#CCCCCC"> the value</font>

653
00:34:21,290 --> 00:34:27,440
and it reads<font color="#E5E5E5"> out a multimeter about this</font>

654
00:34:25,940 --> 00:34:29,720
<font color="#CCCCCC">cashing stuff here</font>

655
00:34:27,440 --> 00:34:33,170
well sometimes<font color="#E5E5E5"> hardware access can be</font>

656
00:34:29,719 --> 00:34:34,879
<font color="#E5E5E5">slow and especially these voltage</font>

657
00:34:33,170 --> 00:34:37,639
sources they<font color="#CCCCCC"> can set the voltage very</font>

658
00:34:34,880 --> 00:34:41,660
fast<font color="#E5E5E5"> but reading</font><font color="#CCCCCC"> the voltage out is</font>

659
00:34:37,639 --> 00:34:44,870
unfortunately<font color="#E5E5E5"> a very slow action so what</font>

660
00:34:41,659 --> 00:34:46,850
we do is we provide<font color="#E5E5E5"> an option that the</font>

661
00:34:44,870 --> 00:34:49,850
software<font color="#E5E5E5"> keeps track of the last set</font>

662
00:34:46,850 --> 00:34:52,339
<font color="#E5E5E5">value and when you want to read it back</font>

663
00:34:49,850 --> 00:34:55,670
out<font color="#E5E5E5"> you just read it from a cache in the</font>

664
00:34:52,340 --> 00:34:58,630
PC<font color="#E5E5E5"> you don't actually access the</font><font color="#CCCCCC"> the</font>

665
00:34:55,670 --> 00:34:58,630
hardware<font color="#E5E5E5"> equipment anymore</font>

666
00:34:58,810 --> 00:35:05,390
yeah and then each of these triples<font color="#CCCCCC"> two</font>

667
00:35:02,780 --> 00:35:09,290
voltages<font color="#E5E5E5"> one current is locked</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the</font>

668
00:35:05,390 --> 00:35:12,259
<font color="#E5E5E5">file and in the end we wire this up we</font>

669
00:35:09,290 --> 00:35:16,610
connect the<font color="#E5E5E5"> data file with the sweeps</font>

670
00:35:12,260 --> 00:35:19,340
<font color="#E5E5E5">and so you get these nested loops and</font>

671
00:35:16,610 --> 00:35:22,280
then we stop it and it starts<font color="#E5E5E5"> to run</font><font color="#CCCCCC"> and</font>

672
00:35:19,340 --> 00:35:24,320
<font color="#E5E5E5">then you get a plot like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> well</font>

673
00:35:22,280 --> 00:35:25,730
precisely<font color="#E5E5E5"> you get a plot like</font><font color="#CCCCCC"> this when</font>

674
00:35:24,320 --> 00:35:29,360
nothing is<font color="#CCCCCC"> connected because</font><font color="#E5E5E5"> this is</font>

675
00:35:25,730 --> 00:35:33,410
just<font color="#E5E5E5"> noise hmm but never mind the</font>

676
00:35:29,360 --> 00:35:35,780
<font color="#E5E5E5">plotting itself is done by calling a new</font>

677
00:35:33,410 --> 00:35:38,000
plot as an<font color="#E5E5E5"> external program and piping</font>

678
00:35:35,780 --> 00:35:41,120
the commands<font color="#E5E5E5"> and reading the data</font><font color="#CCCCCC"> files</font>

679
00:35:38,000 --> 00:35:44,810
from<font color="#E5E5E5"> it which works in a fast and robust</font>

680
00:35:41,120 --> 00:35:46,609
way what do we get in the end you can't

681
00:35:44,810 --> 00:35:48,130
see this here you get<font color="#E5E5E5"> a copy of the</font>

682
00:35:46,610 --> 00:35:51,010
measurement script for

683
00:35:48,130 --> 00:35:54,910
archival purposes<font color="#E5E5E5"> you get the actual</font>

684
00:35:51,010 --> 00:35:57,070
data file in the subdirectory<font color="#CCCCCC"> you get</font><font color="#E5E5E5"> a</font>

685
00:35:54,910 --> 00:36:01,240
summary of the device configuration<font color="#E5E5E5"> and</font>

686
00:35:57,070 --> 00:36:10,180
<font color="#E5E5E5">you get the last state of the live plot</font>

687
00:36:01,240 --> 00:36:11,799
as a file as I sent this code is at

688
00:36:10,180 --> 00:36:14,649
least in its very beginnings<font color="#E5E5E5"> over</font><font color="#CCCCCC"> ten</font>

689
00:36:11,800 --> 00:36:19,000
years old<font color="#CCCCCC"> so right now we are looking</font>

690
00:36:14,650 --> 00:36:25,360
into modernizing it and that turns out

691
00:36:19,000 --> 00:36:27,610
to<font color="#CCCCCC"> be rewriting it with</font><font color="#E5E5E5"> moves step we</font>

692
00:36:25,360 --> 00:36:28,750
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to keep it working because</font><font color="#E5E5E5"> we have</font>

693
00:36:27,610 --> 00:36:33,100
it running<font color="#E5E5E5"> all the time</font>

694
00:36:28,750 --> 00:36:37,210
so we need to rewrite it<font color="#E5E5E5"> as step wise as</font>

695
00:36:33,100 --> 00:36:41,500
possible<font color="#CCCCCC"> parts</font><font color="#E5E5E5"> already included</font><font color="#CCCCCC"> in the</font>

696
00:36:37,210 --> 00:36:46,560
current<font color="#E5E5E5"> release</font><font color="#CCCCCC"> but we need</font><font color="#E5E5E5"> to somehow</font>

697
00:36:41,500 --> 00:36:49,120
<font color="#E5E5E5">keep compatibility as good as possible</font>

698
00:36:46,560 --> 00:36:51,400
<font color="#E5E5E5">the bus and the connection functionality</font>

699
00:36:49,120 --> 00:36:55,120
is mostly done so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> now one</font>

700
00:36:51,400 --> 00:36:58,420
combined layer<font color="#E5E5E5"> the generic instrument</font>

701
00:36:55,120 --> 00:37:00,819
functionality is<font color="#E5E5E5"> also mostly done the</font>

702
00:36:58,420 --> 00:37:03,160
instrument porting<font color="#E5E5E5"> and subtyping is</font>

703
00:37:00,820 --> 00:37:05,290
<font color="#E5E5E5">partly done but also in some parts of</font>

704
00:37:03,160 --> 00:37:09,040
<font color="#E5E5E5">the code there's already more in the new</font>

705
00:37:05,290 --> 00:37:11,560
version<font color="#CCCCCC"> than</font><font color="#E5E5E5"> in the old one and the</font>

706
00:37:09,040 --> 00:37:17,770
<font color="#E5E5E5">Express work is</font><font color="#CCCCCC"> working progress at</font><font color="#E5E5E5"> the</font>

707
00:37:11,560 --> 00:37:20,230
moment of course once we<font color="#E5E5E5"> have moves we</font>

708
00:37:17,770 --> 00:37:24,759
can<font color="#E5E5E5"> use the most functionalities and you</font>

709
00:37:20,230 --> 00:37:28,540
can for<font color="#CCCCCC"> example use vowels for types of</font>

710
00:37:24,760 --> 00:37:32,550
instruments what we did<font color="#E5E5E5"> before with the</font>

711
00:37:28,540 --> 00:37:38,520
<font color="#CCCCCC">source we</font><font color="#E5E5E5"> can now do with for</font><font color="#CCCCCC"> example</font>

712
00:37:32,550 --> 00:37:41,350
<font color="#E5E5E5">moose rolls or we can</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> it for</font>

713
00:37:38,520 --> 00:37:44,140
language standards so that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have one</font>

714
00:37:41,350 --> 00:37:50,940
<font color="#E5E5E5">role</font><font color="#CCCCCC"> that implements part of the Skippy</font>

715
00:37:44,140 --> 00:37:53,710
standard for addressing the devices and

716
00:37:50,940 --> 00:37:57,550
then what we are<font color="#E5E5E5"> also doing is we</font><font color="#CCCCCC"> are</font>

717
00:37:53,710 --> 00:38:01,530
<font color="#CCCCCC">doing the plotting</font><font color="#E5E5E5"> bio and data handling</font>

718
00:37:57,550 --> 00:38:06,540
via PDL now so this gets a<font color="#CCCCCC"> bit better</font>

719
00:38:01,530 --> 00:38:09,120
capsulated and with that<font color="#E5E5E5"> I'm getting to</font>

720
00:38:06,540 --> 00:38:11,640
<font color="#CCCCCC">the end</font><font color="#E5E5E5"> I'm not the only person who's</font>

721
00:38:09,120 --> 00:38:13,700
involved<font color="#E5E5E5"> this Daniel Daniel started it</font>

722
00:38:11,640 --> 00:38:16,589
like 11<font color="#CCCCCC"> years ago</font>

723
00:38:13,700 --> 00:38:18,689
<font color="#CCCCCC">florian introduced layer model</font><font color="#E5E5E5"> christian</font>

724
00:38:16,590 --> 00:38:22,140
<font color="#CCCCCC">boot Co Finch different guys are made</font>

725
00:38:18,690 --> 00:38:26,340
this<font color="#CCCCCC"> Express layer for the fast</font><font color="#E5E5E5"> creation</font>

726
00:38:22,140 --> 00:38:28,500
of scripts<font color="#E5E5E5"> Charles Lane introduced a lot</font>

727
00:38:26,340 --> 00:38:31,740
of<font color="#E5E5E5"> code for oscilloscopes they use this</font>

728
00:38:28,500 --> 00:38:33,240
at a<font color="#CCCCCC"> particle accelerators Simon is the</font>

729
00:38:31,740 --> 00:38:36,200
guy who is now doing<font color="#E5E5E5"> all the work</font>

730
00:38:33,240 --> 00:38:40,080
porting it<font color="#CCCCCC"> removes and of course</font>

731
00:38:36,200 --> 00:38:42,740
some more people<font color="#CCCCCC"> were involved that all</font>

732
00:38:40,080 --> 00:38:45,930
the details of<font color="#CCCCCC"> course in the get knock</font>

733
00:38:42,740 --> 00:38:47,299
and with that<font color="#CCCCCC"> I'm finished</font><font color="#E5E5E5"> and thanks</font>

734
00:38:45,930 --> 00:38:55,828
<font color="#E5E5E5">for your</font><font color="#CCCCCC"> attention</font>

735
00:38:47,300 --> 00:38:55,829
[Applause]

