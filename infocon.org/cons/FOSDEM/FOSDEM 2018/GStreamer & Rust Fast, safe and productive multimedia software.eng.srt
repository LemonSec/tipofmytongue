1
00:00:04,640 --> 00:00:09,629
so the next speaker is<font color="#E5E5E5"> Sebastian</font>

2
00:00:07,560 --> 00:00:12,210
<font color="#CCCCCC">interview</font><font color="#E5E5E5"> and he will be</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about</font>

3
00:00:09,630 --> 00:00:16,519
<font color="#CCCCCC">GStreamer and rest</font><font color="#E5E5E5"> or how to be both</font>

4
00:00:12,210 --> 00:00:16,519
safe and productive<font color="#E5E5E5"> just given</font>

5
00:00:20,470 --> 00:00:25,970
thank you good morning

6
00:00:22,280 --> 00:00:28,130
<font color="#E5E5E5">so today I'm going to talk about well as</font>

7
00:00:25,970 --> 00:00:31,640
<font color="#E5E5E5">I said</font><font color="#CCCCCC"> she's too mind rust but first of</font>

8
00:00:28,130 --> 00:00:32,839
all<font color="#E5E5E5"> when when who I first of all I will</font>

9
00:00:31,640 --> 00:00:36,280
<font color="#E5E5E5">tell you who I am</font>

10
00:00:32,840 --> 00:00:42,170
<font color="#CCCCCC">so I'm just my developer since about</font>

11
00:00:36,280 --> 00:00:44,989
2006<font color="#CCCCCC"> long long</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> now and yeah I can</font>

12
00:00:42,170 --> 00:00:47,930
try<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'm a just my developer since</font>

13
00:00:44,989 --> 00:00:50,959
2006<font color="#CCCCCC"> which is quite a long</font><font color="#E5E5E5"> time now</font><font color="#CCCCCC"> I</font>

14
00:00:47,930 --> 00:00:52,640
probably<font color="#E5E5E5"> touched every piece</font><font color="#CCCCCC"> of code</font>

15
00:00:50,960 --> 00:00:56,480
<font color="#E5E5E5">over</font><font color="#CCCCCC"> the last years I mean</font><font color="#E5E5E5"> doing</font>

16
00:00:52,640 --> 00:00:58,730
<font color="#CCCCCC">currently the releases and</font><font color="#E5E5E5"> I'm one of</font>

17
00:00:56,480 --> 00:01:01,250
the founders of circular consultancy a

18
00:00:58,730 --> 00:01:03,769
company providing services around

19
00:01:01,250 --> 00:01:07,759
<font color="#CCCCCC">GStreamer and related software</font><font color="#E5E5E5"> and since</font>

20
00:01:03,770 --> 00:01:11,750
about<font color="#CCCCCC"> 2014-2015 I started experimenting</font>

21
00:01:07,759 --> 00:01:14,869
with rust<font color="#E5E5E5"> and also with how we can use</font>

22
00:01:11,750 --> 00:01:17,720
<font color="#E5E5E5">rust for</font><font color="#CCCCCC"> GStreamer</font><font color="#E5E5E5"> and that's exactly</font>

23
00:01:14,869 --> 00:01:19,640
<font color="#E5E5E5">what we</font><font color="#CCCCCC"> are going to talk about today in</font>

24
00:01:17,720 --> 00:01:21,770
the beginning<font color="#E5E5E5"> I</font><font color="#CCCCCC"> will introduce what</font>

25
00:01:19,640 --> 00:01:25,789
<font color="#CCCCCC">restreamers</font><font color="#E5E5E5"> many of you probably don't</font>

26
00:01:21,770 --> 00:01:26,690
<font color="#E5E5E5">know</font><font color="#CCCCCC"> that then</font><font color="#E5E5E5"> talk about why rust is a</font>

27
00:01:25,789 --> 00:01:30,590
perfect fit for

28
00:01:26,690 --> 00:01:34,250
<font color="#CCCCCC">gstreamer</font><font color="#E5E5E5"> well I will explain a bit what</font>

29
00:01:30,590 --> 00:01:36,619
you can do nowadays<font color="#CCCCCC"> what that what kind</font>

30
00:01:34,250 --> 00:01:39,220
<font color="#E5E5E5">of projects using</font><font color="#CCCCCC"> GStreamer you can</font>

31
00:01:36,619 --> 00:01:42,500
write in rust and give some kind<font color="#E5E5E5"> of</font>

32
00:01:39,220 --> 00:01:45,140
<font color="#E5E5E5">outlook into the mirror and</font><font color="#CCCCCC"> Farah</font><font color="#E5E5E5"> future</font>

33
00:01:42,500 --> 00:01:47,300
and in the<font color="#E5E5E5"> very</font><font color="#CCCCCC"> end</font>

34
00:01:45,140 --> 00:01:51,250
something personal a bit my experience

35
00:01:47,300 --> 00:01:54,619
with rust for doing all of this and

36
00:01:51,250 --> 00:01:56,929
maybe<font color="#E5E5E5"> this also gives others some idea</font>

37
00:01:54,619 --> 00:01:59,390
how<font color="#E5E5E5"> on how it is</font><font color="#CCCCCC"> to work with rust</font><font color="#E5E5E5"> for</font>

38
00:01:56,929 --> 00:02:02,170
<font color="#CCCCCC">these kind of projects so what is</font><font color="#E5E5E5"> to</font>

39
00:01:59,390 --> 00:02:04,880
streamer<font color="#CCCCCC"> I will only give a very very</font>

40
00:02:02,170 --> 00:02:07,090
<font color="#CCCCCC">high-level short introduction if you</font>

41
00:02:04,880 --> 00:02:09,709
want to see<font color="#E5E5E5"> details</font><font color="#CCCCCC"> go to</font><font color="#E5E5E5"> the website</font>

42
00:02:07,090 --> 00:02:10,970
<font color="#E5E5E5">there's lots of</font><font color="#CCCCCC"> documentation that you</font>

43
00:02:09,709 --> 00:02:14,810
can read<font color="#E5E5E5"> probably more than you want to</font>

44
00:02:10,970 --> 00:02:17,359
read<font color="#CCCCCC"> but from a very very high level</font>

45
00:02:14,810 --> 00:02:19,069
what<font color="#E5E5E5"> you</font><font color="#CCCCCC"> steam is is it's a pipeline</font>

46
00:02:17,360 --> 00:02:21,440
based cross-platform<font color="#E5E5E5"> multimedia</font>

47
00:02:19,069 --> 00:02:24,909
framework it's completely open<font color="#CCCCCC"> source</font>

48
00:02:21,440 --> 00:02:27,920
free<font color="#CCCCCC"> software it's a GPL license and</font>

49
00:02:24,909 --> 00:02:29,340
<font color="#E5E5E5">there's no big company behind it there</font>

50
00:02:27,920 --> 00:02:32,220
are lots<font color="#CCCCCC"> of</font>

51
00:02:29,340 --> 00:02:36,060
but lots of bigger and<font color="#E5E5E5"> smaller companies</font>

52
00:02:32,220 --> 00:02:37,890
<font color="#CCCCCC">that arrive driving it but most most</font><font color="#E5E5E5"> of</font>

53
00:02:36,060 --> 00:02:41,430
<font color="#E5E5E5">the development is</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> it's something</font>

54
00:02:37,890 --> 00:02:44,540
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is community driven</font><font color="#CCCCCC"> it's quite</font>

55
00:02:41,430 --> 00:02:47,760
widely used nowadays<font color="#CCCCCC"> also commercially</font>

56
00:02:44,540 --> 00:02:50,730
<font color="#CCCCCC">you can find</font><font color="#E5E5E5"> many applications using it</font>

57
00:02:47,760 --> 00:02:55,290
<font color="#CCCCCC">TVs drones cameras</font><font color="#E5E5E5"> all kinds of things</font>

58
00:02:50,730 --> 00:02:57,750
in the cloud<font color="#E5E5E5"> and it's running on Linux</font>

59
00:02:55,290 --> 00:02:59,670
Android iOS Mac OS<font color="#E5E5E5"> Windows basically</font>

60
00:02:57,750 --> 00:03:04,099
everywhere where you<font color="#CCCCCC"> have some</font><font color="#E5E5E5"> kind of C</font>

61
00:02:59,670 --> 00:03:07,260
compiler and a standard c library and

62
00:03:04,099 --> 00:03:11,130
it's not at this point used only for

63
00:03:07,260 --> 00:03:13,290
multimedia related things<font color="#CCCCCC"> there are also</font>

64
00:03:11,130 --> 00:03:15,359
people using it<font color="#E5E5E5"> for other</font><font color="#CCCCCC"> stuff for</font>

65
00:03:13,290 --> 00:03:17,519
<font color="#E5E5E5">example the</font><font color="#CCCCCC"> LIGO project that was</font>

66
00:03:15,360 --> 00:03:18,840
detecting the gravitational waves<font color="#E5E5E5"> they</font>

67
00:03:17,519 --> 00:03:20,579
are using this<font color="#CCCCCC"> tremor for</font><font color="#E5E5E5"> the data</font>

68
00:03:18,840 --> 00:03:22,019
processing<font color="#E5E5E5"> and that that doesn't have</font>

69
00:03:20,579 --> 00:03:26,400
anything to<font color="#E5E5E5"> do with multimedia at all</font>

70
00:03:22,019 --> 00:03:28,650
anymore at that<font color="#E5E5E5"> point so on I said do</font>

71
00:03:26,400 --> 00:03:29,190
Simha is pipeline based what does that

72
00:03:28,650 --> 00:03:31,980
<font color="#E5E5E5">mean</font>

73
00:03:29,190 --> 00:03:34,579
so<font color="#CCCCCC"> ng stream are the basic components</font>

74
00:03:31,980 --> 00:03:37,828
<font color="#CCCCCC">that you have are so-called elements</font>

75
00:03:34,579 --> 00:03:40,680
<font color="#CCCCCC">there's something that that are</font>

76
00:03:37,829 --> 00:03:42,989
processing<font color="#E5E5E5"> media data or data in general</font>

77
00:03:40,680 --> 00:03:46,019
<font color="#E5E5E5">and you connect them to other so-called</font>

78
00:03:42,989 --> 00:03:48,480
elements and each of these<font color="#CCCCCC"> elements in</font>

79
00:03:46,019 --> 00:03:50,880
the end is<font color="#E5E5E5"> doing one little task so for</font>

80
00:03:48,480 --> 00:03:53,518
<font color="#E5E5E5">example what we</font><font color="#CCCCCC"> have here is a very</font>

81
00:03:50,880 --> 00:03:56,130
<font color="#E5E5E5">small pipeline that</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> could be</font>

82
00:03:53,519 --> 00:03:57,930
used for playing a video file so<font color="#E5E5E5"> you</font>

83
00:03:56,130 --> 00:04:00,930
have one<font color="#CCCCCC"> element that is just reading</font>

84
00:03:57,930 --> 00:04:02,880
<font color="#E5E5E5">from a file in this</font><font color="#CCCCCC"> case another element</font>

85
00:04:00,930 --> 00:04:04,950
<font color="#E5E5E5">that is splitting the file into the</font>

86
00:04:02,880 --> 00:04:06,870
audio and video<font color="#E5E5E5"> parts then you have</font>

87
00:04:04,950 --> 00:04:08,880
decoders for<font color="#CCCCCC"> the audio and video and</font><font color="#E5E5E5"> in</font>

88
00:04:06,870 --> 00:04:12,810
the end it goes to the<font color="#CCCCCC"> speaker</font><font color="#E5E5E5"> or the</font>

89
00:04:08,880 --> 00:04:15,239
<font color="#CCCCCC">screen</font><font color="#E5E5E5"> and well this is a playback</font>

90
00:04:12,810 --> 00:04:17,668
example but you<font color="#CCCCCC"> could also imagine</font><font color="#E5E5E5"> that</font>

91
00:04:15,239 --> 00:04:19,470
in the<font color="#CCCCCC"> beginning of an element that</font><font color="#E5E5E5"> is</font>

92
00:04:17,668 --> 00:04:23,400
all<font color="#E5E5E5"> putting the video</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> your camera</font>

93
00:04:19,470 --> 00:04:25,500
and the audio<font color="#CCCCCC"> from your microphone or</font>

94
00:04:23,400 --> 00:04:27,388
you could have<font color="#E5E5E5"> an</font><font color="#CCCCCC"> input that</font><font color="#E5E5E5"> somehow</font>

95
00:04:25,500 --> 00:04:28,979
reads<font color="#E5E5E5"> over the</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> you could send</font>

96
00:04:27,389 --> 00:04:30,810
data<font color="#E5E5E5"> out over the network</font>

97
00:04:28,979 --> 00:04:32,849
in the end<font color="#E5E5E5"> each of these elements they</font>

98
00:04:30,810 --> 00:04:36,720
could do anything they would<font color="#CCCCCC"> like to do</font>

99
00:04:32,849 --> 00:04:38,940
with the data<font color="#E5E5E5"> and you're taking all</font>

100
00:04:36,720 --> 00:04:42,840
these little<font color="#E5E5E5"> components put them</font>

101
00:04:38,940 --> 00:04:43,170
together<font color="#E5E5E5"> build bigger components out</font><font color="#CCCCCC"> of</font>

102
00:04:42,840 --> 00:04:44,789
them

103
00:04:43,170 --> 00:04:47,280
and in the end you<font color="#E5E5E5"> have something</font><font color="#CCCCCC"> like</font>

104
00:04:44,790 --> 00:04:49,980
<font color="#E5E5E5">Lego and you can build anything you</font>

105
00:04:47,280 --> 00:04:53,789
<font color="#E5E5E5">would like to out of this out of small</font>

106
00:04:49,980 --> 00:04:56,580
<font color="#E5E5E5">little components and but in this</font>

107
00:04:53,790 --> 00:04:58,890
picture<font color="#CCCCCC"> it all looks quite</font><font color="#E5E5E5"> static but if</font>

108
00:04:56,580 --> 00:05:00,479
<font color="#E5E5E5">you're actually writing code doing these</font>

109
00:04:58,890 --> 00:05:03,060
things you<font color="#E5E5E5"> could also change the</font>

110
00:05:00,480 --> 00:05:05,190
topology of the pipeline graph at any

111
00:05:03,060 --> 00:05:08,940
point in<font color="#CCCCCC"> time</font><font color="#E5E5E5"> if you want to or</font><font color="#CCCCCC"> if you</font>

112
00:05:05,190 --> 00:05:10,710
need and the general<font color="#E5E5E5"> philosophy of these</font>

113
00:05:08,940 --> 00:05:13,050
<font color="#E5E5E5">tumors that we provide some kind of</font>

114
00:05:10,710 --> 00:05:15,390
<font color="#E5E5E5">toolbox</font><font color="#CCCCCC"> for higher-level and multimedia</font>

115
00:05:13,050 --> 00:05:17,040
processing it's not<font color="#E5E5E5"> a finished solution</font>

116
00:05:15,390 --> 00:05:19,349
for anything<font color="#E5E5E5"> but it's</font><font color="#CCCCCC"> something that</font>

117
00:05:17,040 --> 00:05:23,220
allows<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to build solutions</font><font color="#E5E5E5"> for</font>

118
00:05:19,350 --> 00:05:26,040
anything<font color="#E5E5E5"> you would like</font><font color="#CCCCCC"> to do and the</font>

119
00:05:23,220 --> 00:05:28,530
the basis is<font color="#CCCCCC"> that we have some</font><font color="#E5E5E5"> kind of</font>

120
00:05:26,040 --> 00:05:30,990
flexible extensible design that is based

121
00:05:28,530 --> 00:05:33,359
on simple ideas like what we saw before

122
00:05:30,990 --> 00:05:36,420
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the pipelines</font><font color="#E5E5E5"> it's a very generic</font>

123
00:05:33,360 --> 00:05:39,270
<font color="#CCCCCC">API</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Koji's from</font><font color="#E5E5E5"> api does not know</font>

124
00:05:36,420 --> 00:05:40,620
anything<font color="#E5E5E5"> about multimedia it doesn't</font>

125
00:05:39,270 --> 00:05:43,169
know<font color="#CCCCCC"> anything about</font><font color="#E5E5E5"> video or audio</font>

126
00:05:40,620 --> 00:05:46,140
that's something that is added in other

127
00:05:43,170 --> 00:05:48,120
<font color="#E5E5E5">components and the main focus is on</font>

128
00:05:46,140 --> 00:05:51,390
making<font color="#E5E5E5"> it very</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to embed</font>

129
00:05:48,120 --> 00:05:53,580
<font color="#CCCCCC">gstreamer into other</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> in both</font>

130
00:05:51,390 --> 00:05:55,380
directions<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> it easy to embed</font>

131
00:05:53,580 --> 00:05:58,109
<font color="#CCCCCC">GStreamer in applications in other</font>

132
00:05:55,380 --> 00:06:00,719
frameworks like cute or<font color="#E5E5E5"> WebKit they are</font>

133
00:05:58,110 --> 00:06:02,790
for example<font color="#E5E5E5"> able to use to streamer for</font>

134
00:06:00,720 --> 00:06:05,040
the multimedia<font color="#E5E5E5"> needs but also on the</font>

135
00:06:02,790 --> 00:06:07,980
other<font color="#CCCCCC"> side</font><font color="#E5E5E5"> to make it easy to embed</font>

136
00:06:05,040 --> 00:06:10,940
existing multimedia solutions<font color="#E5E5E5"> into G</font>

137
00:06:07,980 --> 00:06:13,470
streamer like ffmpeg<font color="#CCCCCC"> OpenCV</font><font color="#E5E5E5"> we're not</font>

138
00:06:10,940 --> 00:06:17,270
redeveloping the world we<font color="#CCCCCC"> try to make</font>

139
00:06:13,470 --> 00:06:20,040
use of whatever<font color="#E5E5E5"> is out</font><font color="#CCCCCC"> there already</font><font color="#E5E5E5"> and</font>

140
00:06:17,270 --> 00:06:23,849
the target systems are everything from

141
00:06:20,040 --> 00:06:25,530
embedded systems<font color="#E5E5E5"> of words and asserted</font>

142
00:06:23,850 --> 00:06:26,340
<font color="#CCCCCC">asuma itself</font><font color="#E5E5E5"> doesn't know anything about</font>

143
00:06:25,530 --> 00:06:29,570
audio and video

144
00:06:26,340 --> 00:06:31,560
<font color="#E5E5E5">everything is added via plugins and we</font>

145
00:06:29,570 --> 00:06:33,420
well have some kind<font color="#E5E5E5"> of batteries</font>

146
00:06:31,560 --> 00:06:35,550
included philosophy here and there are

147
00:06:33,420 --> 00:06:39,450
more<font color="#E5E5E5"> than 250 plugins provided by do</font>

148
00:06:35,550 --> 00:06:41,640
streamer if you<font color="#E5E5E5"> just get the</font><font color="#CCCCCC"> the source</font>

149
00:06:39,450 --> 00:06:43,500
<font color="#E5E5E5">code and build it and they're also</font>

150
00:06:41,640 --> 00:06:45,960
plugins that are reusing existing lab

151
00:06:43,500 --> 00:06:49,050
wings like ffmpeg<font color="#CCCCCC"> OpenCV and what</font><font color="#E5E5E5"> I</font>

152
00:06:45,960 --> 00:06:52,229
mentioned<font color="#CCCCCC"> before</font><font color="#E5E5E5"> and in addition</font><font color="#CCCCCC"> are</font>

153
00:06:49,050 --> 00:06:54,900
plugins that allow you to<font color="#CCCCCC"> use things</font>

154
00:06:52,230 --> 00:06:57,260
<font color="#E5E5E5">like on your embedded device the</font>

155
00:06:54,900 --> 00:07:00,200
hardware<font color="#CCCCCC"> codex</font><font color="#E5E5E5"> or</font>

156
00:06:57,260 --> 00:07:02,420
to use cameras and<font color="#CCCCCC"> stuff like that</font>

157
00:07:00,200 --> 00:07:04,130
the other thing yes<font color="#CCCCCC"> system itself is</font>

158
00:07:02,420 --> 00:07:07,070
<font color="#E5E5E5">completely written in C at this point</font>

159
00:07:04,130 --> 00:07:10,280
<font color="#CCCCCC">but nobody wants to write C and so on</font>

160
00:07:07,070 --> 00:07:13,120
we provide<font color="#CCCCCC"> bindings for many other</font>

161
00:07:10,280 --> 00:07:16,309
languages like<font color="#E5E5E5"> Python c-sharp c++ java</font>

162
00:07:13,120 --> 00:07:16,670
<font color="#CCCCCC">gaudi and also rust I wouldn't be</font><font color="#E5E5E5"> here</font>

163
00:07:16,310 --> 00:07:24,170
otherwise

164
00:07:16,670 --> 00:07:25,790
and yeah<font color="#E5E5E5"> so what is my it's not it's not</font>

165
00:07:24,170 --> 00:07:27,530
a media<font color="#E5E5E5"> player or playback library it's</font>

166
00:07:25,790 --> 00:07:29,090
not a codec or<font color="#E5E5E5"> protocol library or not a</font>

167
00:07:27,530 --> 00:07:31,219
transcoding tool or not<font color="#CCCCCC"> a streaming</font>

168
00:07:29,090 --> 00:07:33,320
server<font color="#E5E5E5"> many people seem to</font><font color="#CCCCCC"> think that</font>

169
00:07:31,220 --> 00:07:35,120
that's<font color="#E5E5E5"> not what it is but it's something</font>

170
00:07:33,320 --> 00:07:38,390
that<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be used for building</font><font color="#E5E5E5"> all these</font>

171
00:07:35,120 --> 00:07:40,100
things it's something<font color="#E5E5E5"> more generic well</font>

172
00:07:38,390 --> 00:07:42,020
and I say it's<font color="#E5E5E5"> not a playback library</font>

173
00:07:40,100 --> 00:07:44,600
but nowadays we also include a little

174
00:07:42,020 --> 00:07:45,799
<font color="#E5E5E5">play playback library to make your life</font>

175
00:07:44,600 --> 00:07:48,410
a<font color="#CCCCCC"> bit easier if you want to just</font>

176
00:07:45,800 --> 00:07:51,260
implement a playback application but

177
00:07:48,410 --> 00:07:54,430
it's not the<font color="#E5E5E5"> main focus so now let's</font>

178
00:07:51,260 --> 00:07:57,440
talk a<font color="#CCCCCC"> bit about rust and why gstreamer</font>

179
00:07:54,430 --> 00:08:00,980
<font color="#CCCCCC">y4g streamer rust is something</font><font color="#E5E5E5"> like the</font>

180
00:07:57,440 --> 00:08:03,710
perfect<font color="#E5E5E5"> fit</font><font color="#CCCCCC"> well first of all</font><font color="#E5E5E5"> we have</font>

181
00:08:00,980 --> 00:08:05,450
the<font color="#E5E5E5"> usual suspects the memory safety the</font>

182
00:08:03,710 --> 00:08:07,070
<font color="#CCCCCC">fearless concurrency and</font><font color="#E5E5E5"> that we have</font>

183
00:08:05,450 --> 00:08:09,830
something like<font color="#CCCCCC"> that is a modern language</font>

184
00:08:07,070 --> 00:08:14,480
<font color="#CCCCCC">not from the 70s</font><font color="#E5E5E5"> anymore and something</font>

185
00:08:09,830 --> 00:08:16,580
that has modern tooling<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> I say here</font>

186
00:08:14,480 --> 00:08:22,030
memory safety<font color="#E5E5E5"> in the past in</font><font color="#CCCCCC"> gstreamer</font>

187
00:08:16,580 --> 00:08:25,940
<font color="#E5E5E5">what we had is a couple of</font><font color="#CCCCCC"> CVS</font><font color="#E5E5E5"> many</font><font color="#CCCCCC"> bugs</font>

188
00:08:22,030 --> 00:08:28,669
<font color="#E5E5E5">related to memory</font><font color="#CCCCCC"> safety which might not</font>

189
00:08:25,940 --> 00:08:30,169
<font color="#E5E5E5">be really a security related often they</font>

190
00:08:28,669 --> 00:08:31,609
<font color="#CCCCCC">are but it might not also be just</font>

191
00:08:30,169 --> 00:08:33,319
<font color="#E5E5E5">something that is annoying</font><font color="#CCCCCC"> if you watch</font>

192
00:08:31,610 --> 00:08:34,370
a<font color="#CCCCCC"> movie for</font><font color="#E5E5E5"> example you</font><font color="#CCCCCC"> don't want it to</font>

193
00:08:33,320 --> 00:08:37,430
stop in the<font color="#E5E5E5"> middle just because</font>

194
00:08:34,370 --> 00:08:39,080
something is crashing<font color="#E5E5E5"> and most of these</font>

195
00:08:37,429 --> 00:08:40,968
<font color="#E5E5E5">bugs would be something that would</font><font color="#CCCCCC"> never</font>

196
00:08:39,080 --> 00:08:44,600
have<font color="#CCCCCC"> happened with rust</font><font color="#E5E5E5"> sure there would</font>

197
00:08:40,969 --> 00:08:46,400
be other bugs but at least<font color="#E5E5E5"> not those</font><font color="#CCCCCC"> the</font>

198
00:08:44,600 --> 00:08:48,650
<font color="#E5E5E5">other thing is do</font><font color="#CCCCCC"> streamers</font><font color="#E5E5E5"> heavily</font>

199
00:08:46,400 --> 00:08:50,120
multi-threaded<font color="#E5E5E5"> as an application</font>

200
00:08:48,650 --> 00:08:52,579
<font color="#CCCCCC">developer you don't really see that but</font>

201
00:08:50,120 --> 00:08:54,500
internally everything is running in

202
00:08:52,580 --> 00:08:56,480
different<font color="#CCCCCC"> threads</font><font color="#E5E5E5"> in a normal playback</font>

203
00:08:54,500 --> 00:08:59,150
application you easily<font color="#E5E5E5"> have tens of</font>

204
00:08:56,480 --> 00:09:00,670
threads<font color="#CCCCCC"> and it's very annoying to</font><font color="#E5E5E5"> do</font>

205
00:08:59,150 --> 00:09:04,160
this kind of development<font color="#E5E5E5"> and</font><font color="#CCCCCC"> see and</font>

206
00:09:00,670 --> 00:09:07,520
rust can help here

207
00:09:04,160 --> 00:09:09,170
the last part<font color="#E5E5E5"> well I said everything is</font>

208
00:09:07,520 --> 00:09:10,189
written<font color="#E5E5E5"> in C nobody wants to write C</font>

209
00:09:09,170 --> 00:09:12,319
inverse

210
00:09:10,190 --> 00:09:15,410
in the case<font color="#E5E5E5"> of</font><font color="#CCCCCC"> gstreamer it's using the</font>

211
00:09:12,320 --> 00:09:18,980
object lots of macros<font color="#E5E5E5"> very hard and</font>

212
00:09:15,410 --> 00:09:21,020
<font color="#CCCCCC">difficult to learn and using rust could</font>

213
00:09:18,980 --> 00:09:23,840
make everything much more<font color="#E5E5E5"> convenient to</font>

214
00:09:21,020 --> 00:09:26,569
<font color="#CCCCCC">use and ideally it would also allow us</font>

215
00:09:23,840 --> 00:09:28,700
<font color="#E5E5E5">to find new developers interested</font><font color="#CCCCCC"> in</font>

216
00:09:26,570 --> 00:09:31,790
using<font color="#E5E5E5"> or developing for</font><font color="#CCCCCC"> GStreamer</font>

217
00:09:28,700 --> 00:09:33,530
<font color="#E5E5E5">because new developers they wanted to a</font>

218
00:09:31,790 --> 00:09:36,709
<font color="#E5E5E5">fancy</font><font color="#CCCCCC"> tool</font><font color="#E5E5E5"> they don't want to learn this</font>

219
00:09:33,530 --> 00:09:44,170
<font color="#CCCCCC">we are</font><font color="#E5E5E5"> C</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> G objects stuff they want</font>

220
00:09:36,710 --> 00:09:47,180
something modern<font color="#CCCCCC"> and similarly</font><font color="#E5E5E5"> rust is</font>

221
00:09:44,170 --> 00:09:48,740
perfect for in the context of<font color="#CCCCCC"> restreamer</font>

222
00:09:47,180 --> 00:09:50,680
because it does not<font color="#E5E5E5"> have any runtime</font><font color="#CCCCCC"> it</font>

223
00:09:48,740 --> 00:09:53,890
does<font color="#E5E5E5"> not have any garbage collection and</font>

224
00:09:50,680 --> 00:09:57,560
the<font color="#E5E5E5"> keyword zero cost abstractions</font>

225
00:09:53,890 --> 00:09:59,150
because our goal<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> run on everything</font>

226
00:09:57,560 --> 00:10:02,060
from<font color="#CCCCCC"> low-power</font><font color="#E5E5E5"> embedded systems where</font>

227
00:09:59,150 --> 00:10:04,010
<font color="#CCCCCC">you can't really</font><font color="#E5E5E5"> afford a big runtime or</font>

228
00:10:02,060 --> 00:10:08,719
<font color="#CCCCCC">a</font><font color="#E5E5E5"> garbage collection</font><font color="#CCCCCC"> up to anything that</font>

229
00:10:04,010 --> 00:10:10,910
<font color="#E5E5E5">is huge and in general whenever you do</font>

230
00:10:08,720 --> 00:10:12,890
something of multimedia<font color="#E5E5E5"> you want to be</font>

231
00:10:10,910 --> 00:10:14,990
<font color="#CCCCCC">able for example</font><font color="#E5E5E5"> to have control</font><font color="#CCCCCC"> over</font>

232
00:10:12,890 --> 00:10:15,620
where things are<font color="#CCCCCC"> allocated when are they</font>

233
00:10:14,990 --> 00:10:20,480
located

234
00:10:15,620 --> 00:10:23,870
when are they released again<font color="#E5E5E5"> and yeah in</font>

235
00:10:20,480 --> 00:10:26,780
the case<font color="#E5E5E5"> of rust what also is quite</font>

236
00:10:23,870 --> 00:10:28,490
useful<font color="#CCCCCC"> on Isis that everything</font><font color="#E5E5E5"> in the</font>

237
00:10:26,780 --> 00:10:32,030
end is compiling down to very optimized

238
00:10:28,490 --> 00:10:34,190
code<font color="#E5E5E5"> you don't have something like yeah</font>

239
00:10:32,030 --> 00:10:37,490
<font color="#E5E5E5">like something like a interpreted</font>

240
00:10:34,190 --> 00:10:38,450
language behind that it's all<font color="#E5E5E5"> very fast</font>

241
00:10:37,490 --> 00:10:41,030
and<font color="#E5E5E5"> low-level</font>

242
00:10:38,450 --> 00:10:43,370
<font color="#E5E5E5">and the last part that I personally like</font>

243
00:10:41,030 --> 00:10:47,150
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the ownership model</font>

244
00:10:43,370 --> 00:10:48,710
for things like video frames<font color="#E5E5E5"> or in</font>

245
00:10:47,150 --> 00:10:51,770
<font color="#CCCCCC">general media</font><font color="#E5E5E5"> data and all kinds of</font>

246
00:10:48,710 --> 00:10:53,870
other processing related things inside

247
00:10:51,770 --> 00:10:56,960
<font color="#CCCCCC">restreamer the ownership</font><font color="#E5E5E5"> model of that</font>

248
00:10:53,870 --> 00:10:59,930
<font color="#CCCCCC">Maps perfectly to the ownership</font><font color="#E5E5E5"> model of</font>

249
00:10:56,960 --> 00:11:02,030
rust<font color="#E5E5E5"> and so far from</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the languages</font>

250
00:10:59,930 --> 00:11:06,140
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we support</font><font color="#CCCCCC"> Rus</font><font color="#E5E5E5"> is the only language</font>

251
00:11:02,030 --> 00:11:10,189
where this mapping<font color="#CCCCCC"> is really one to one</font>

252
00:11:06,140 --> 00:11:12,830
and in the<font color="#E5E5E5"> end if you know a bit the</font><font color="#CCCCCC"> arc</font>

253
00:11:10,190 --> 00:11:15,680
<font color="#CCCCCC">type in rust it has something that</font>

254
00:11:12,830 --> 00:11:16,850
allows you<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> at runtime</font>

255
00:11:15,680 --> 00:11:20,449
<font color="#CCCCCC">copy-on-write</font>

256
00:11:16,850 --> 00:11:22,339
so you can check with this<font color="#E5E5E5"> reference</font>

257
00:11:20,450 --> 00:11:23,220
<font color="#CCCCCC">comment at container thing if you are</font>

258
00:11:22,339 --> 00:11:25,560
the<font color="#E5E5E5"> only owner</font>

259
00:11:23,220 --> 00:11:27,360
you're the only<font color="#CCCCCC"> owner you can write to</font>

260
00:11:25,560 --> 00:11:29,790
the<font color="#E5E5E5"> thing if</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> if not you might</font>

261
00:11:27,360 --> 00:11:35,009
have to<font color="#E5E5E5"> take a copy and this is</font><font color="#CCCCCC"> exactly</font>

262
00:11:29,790 --> 00:11:36,420
<font color="#E5E5E5">how the basic types and</font><font color="#CCCCCC"> Guice</font><font color="#E5E5E5"> Tamar are</font>

263
00:11:35,009 --> 00:11:37,949
working if you're the<font color="#E5E5E5"> only owner you're</font>

264
00:11:36,420 --> 00:11:40,740
allowed to do whatever you want with it

265
00:11:37,949 --> 00:11:43,949
<font color="#E5E5E5">otherwise you might</font><font color="#CCCCCC"> have to take a copy</font>

266
00:11:40,740 --> 00:11:45,750
instead and the nice<font color="#CCCCCC"> thing here along</font>

267
00:11:43,949 --> 00:11:47,399
with<font color="#E5E5E5"> Russ is that well we have that all</font>

268
00:11:45,750 --> 00:11:49,829
in<font color="#E5E5E5"> scene and see you</font><font color="#CCCCCC"> have to call all</font>

269
00:11:47,399 --> 00:11:51,990
kinds of<font color="#E5E5E5"> functions manually in the</font><font color="#CCCCCC"> case</font>

270
00:11:49,829 --> 00:11:53,729
<font color="#E5E5E5">of rust the compiler is making sure</font><font color="#CCCCCC"> that</font>

271
00:11:51,990 --> 00:11:56,490
<font color="#E5E5E5">you don't forget to do these things and</font>

272
00:11:53,730 --> 00:12:01,680
to some degree<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> also all happening</font>

273
00:11:56,490 --> 00:12:04,889
automatically<font color="#E5E5E5"> so then let's talk a bit</font>

274
00:12:01,680 --> 00:12:15,540
<font color="#CCCCCC">about using this</font><font color="#E5E5E5"> drama from rust what is</font>

275
00:12:04,889 --> 00:12:18,180
possible at this point so<font color="#E5E5E5"> the first</font>

276
00:12:15,540 --> 00:12:20,099
thing that<font color="#E5E5E5"> you might want to do and what</font>

277
00:12:18,180 --> 00:12:23,670
the<font color="#CCCCCC"> majority of people using Vista ma</font>

278
00:12:20,100 --> 00:12:26,069
are doing is writing applications<font color="#E5E5E5"> so at</font>

279
00:12:23,670 --> 00:12:28,920
this point we have almost complete

280
00:12:26,069 --> 00:12:32,009
<font color="#CCCCCC">bindings of the GC Makua</font><font color="#E5E5E5"> and lots of the</font>

281
00:12:28,920 --> 00:12:35,370
helper libraries available<font color="#CCCCCC"> it's all</font>

282
00:12:32,009 --> 00:12:37,319
<font color="#E5E5E5">based on the infrastructure that</font><font color="#CCCCCC"> GK RSS</font>

283
00:12:35,370 --> 00:12:39,300
providing<font color="#E5E5E5"> it's also using the same code</font>

284
00:12:37,319 --> 00:12:42,899
<font color="#E5E5E5">generator to generate most of the</font>

285
00:12:39,300 --> 00:12:46,680
bindings code from the API<font color="#E5E5E5"> metadata</font><font color="#CCCCCC"> that</font>

286
00:12:42,899 --> 00:12:49,410
<font color="#CCCCCC">juice Tomas providing and you can find</font>

287
00:12:46,680 --> 00:12:51,569
the code here<font color="#E5E5E5"> it's in the end providing</font>

288
00:12:49,410 --> 00:12:55,610
some<font color="#E5E5E5"> kind of safe and more or less</font>

289
00:12:51,569 --> 00:12:58,769
idiomatic bindings to<font color="#E5E5E5"> the juice Numa API</font>

290
00:12:55,610 --> 00:13:01,350
<font color="#CCCCCC">if you know GStreamer you can probably</font>

291
00:12:58,769 --> 00:13:02,790
<font color="#E5E5E5">easily learn the bindings because in the</font>

292
00:13:01,350 --> 00:13:04,980
end all the functions are<font color="#CCCCCC"> called the</font>

293
00:13:02,790 --> 00:13:08,599
same all<font color="#CCCCCC"> the objects are all the same</font>

294
00:13:04,980 --> 00:13:11,790
<font color="#E5E5E5">it's just a different language</font><font color="#CCCCCC"> but</font>

295
00:13:08,600 --> 00:13:14,910
<font color="#CCCCCC">different to see you</font><font color="#E5E5E5"> actually have</font>

296
00:13:11,790 --> 00:13:20,009
something<font color="#CCCCCC"> that is safer</font><font color="#E5E5E5"> or in this</font><font color="#CCCCCC"> case</font>

297
00:13:14,910 --> 00:13:22,110
actually memory safe to use<font color="#CCCCCC"> personally I</font>

298
00:13:20,009 --> 00:13:25,559
<font color="#E5E5E5">use the bindings now for everything</font><font color="#CCCCCC"> I</font>

299
00:13:22,110 --> 00:13:27,930
can including test cases that<font color="#CCCCCC"> I have to</font>

300
00:13:25,559 --> 00:13:29,519
<font color="#E5E5E5">write even for things when if the if</font>

301
00:13:27,930 --> 00:13:30,839
there's some<font color="#E5E5E5"> kind of bug reported in</font>

302
00:13:29,519 --> 00:13:32,699
this<font color="#E5E5E5"> room and I need</font><font color="#CCCCCC"> to write a test</font>

303
00:13:30,839 --> 00:13:34,439
case I'm<font color="#CCCCCC"> just writing the test case and</font>

304
00:13:32,699 --> 00:13:35,899
<font color="#E5E5E5">rust because it's much more convenient</font><font color="#CCCCCC"> a</font>

305
00:13:34,439 --> 00:13:37,939
faster and

306
00:13:35,899 --> 00:13:41,089
because it's so close<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the metal the</font>

307
00:13:37,939 --> 00:13:42,529
<font color="#E5E5E5">debugging</font><font color="#CCCCCC"> of things that are actually</font>

308
00:13:41,089 --> 00:13:45,939
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> restreamer</font><font color="#E5E5E5"> from a rust</font>

309
00:13:42,529 --> 00:13:49,040
application that's just like if you<font color="#CCCCCC"> are</font>

310
00:13:45,939 --> 00:13:53,449
<font color="#E5E5E5">it's as if you had written the test case</font>

311
00:13:49,040 --> 00:13:57,019
<font color="#CCCCCC">and see there's no</font><font color="#E5E5E5"> no heavy runtime or</font>

312
00:13:53,449 --> 00:13:59,540
<font color="#E5E5E5">anything in between</font><font color="#CCCCCC"> and this stuff is</font>

313
00:13:57,019 --> 00:14:00,920
<font color="#E5E5E5">all stable and ready to be used</font><font color="#CCCCCC"> you can</font>

314
00:13:59,540 --> 00:14:05,149
also find it on<font color="#E5E5E5"> credit</font>

315
00:14:00,920 --> 00:14:07,969
<font color="#CCCCCC">I oh it works at least on Linux Mac</font><font color="#E5E5E5"> OS</font>

316
00:14:05,149 --> 00:14:09,620
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Windows I didn't try it anywhere</font>

317
00:14:07,970 --> 00:14:14,870
else<font color="#CCCCCC"> I would assume that it also works</font>

318
00:14:09,620 --> 00:14:16,699
<font color="#E5E5E5">as well</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> other part</font><font color="#CCCCCC"> that is very</font>

319
00:14:14,870 --> 00:14:18,860
important<font color="#E5E5E5"> for</font><font color="#CCCCCC"> this mess that</font><font color="#E5E5E5"> all the</font>

320
00:14:16,699 --> 00:14:23,120
<font color="#E5E5E5">functionality is provided via plugins</font>

321
00:14:18,860 --> 00:14:24,920
<font color="#E5E5E5">and with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> code that you can't find here</font>

322
00:14:23,120 --> 00:14:26,809
<font color="#CCCCCC">um you can find some</font><font color="#E5E5E5"> kind of</font>

323
00:14:24,920 --> 00:14:28,599
infrastructure<font color="#E5E5E5"> that allows you to write</font>

324
00:14:26,809 --> 00:14:32,509
plug-ins for<font color="#CCCCCC"> gstreamer</font><font color="#E5E5E5"> in rust</font>

325
00:14:28,600 --> 00:14:33,769
<font color="#E5E5E5">completely plain rust</font><font color="#CCCCCC"> they are for</font>

326
00:14:32,509 --> 00:14:37,189
writing the plugins you don't have to

327
00:14:33,769 --> 00:14:38,809
use any macros<font color="#CCCCCC"> any weird language</font>

328
00:14:37,189 --> 00:14:41,750
constructs or anything you just<font color="#E5E5E5"> have to</font>

329
00:14:38,809 --> 00:14:45,559
implement<font color="#E5E5E5"> a few trades then implement</font>

330
00:14:41,750 --> 00:14:48,439
the<font color="#E5E5E5"> functions of the trades</font><font color="#CCCCCC"> and that's</font>

331
00:14:45,559 --> 00:14:51,769
it<font color="#CCCCCC"> you also don't have</font><font color="#E5E5E5"> to use any unsafe</font>

332
00:14:48,439 --> 00:14:54,589
code<font color="#CCCCCC"> unless you want</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> and it's really</font>

333
00:14:51,769 --> 00:14:56,149
convenient<font color="#E5E5E5"> to write do some uh plugins</font>

334
00:14:54,589 --> 00:14:59,000
<font color="#E5E5E5">like that</font>

335
00:14:56,149 --> 00:15:01,509
of<font color="#E5E5E5"> course not everything is</font><font color="#CCCCCC"> perfect as I</font>

336
00:14:59,000 --> 00:15:05,389
said<font color="#CCCCCC"> GCMs based on the</font><font color="#E5E5E5"> object so there's</font>

337
00:15:01,509 --> 00:15:08,269
some kind of object-oriented paradigm

338
00:15:05,389 --> 00:15:10,910
behind that so<font color="#CCCCCC"> in gstreamer there's lots</font>

339
00:15:08,269 --> 00:15:13,250
of inheritance happening well it's kind

340
00:15:10,910 --> 00:15:16,939
of emulated in<font color="#CCCCCC"> this infrastructure</font><font color="#E5E5E5"> with</font>

341
00:15:13,250 --> 00:15:18,769
<font color="#E5E5E5">trades it's not perfect but it works and</font>

342
00:15:16,939 --> 00:15:21,649
<font color="#E5E5E5">it's not as</font><font color="#CCCCCC"> ugly as I would</font><font color="#E5E5E5"> have</font>

343
00:15:18,769 --> 00:15:24,769
<font color="#CCCCCC">expected from</font><font color="#E5E5E5"> before I started this so</font>

344
00:15:21,649 --> 00:15:28,040
on what<font color="#E5E5E5"> is currently available in as</font>

345
00:15:24,769 --> 00:15:30,470
plugins<font color="#CCCCCC"> written in rust is if</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> vida</font>

346
00:15:28,040 --> 00:15:33,769
<font color="#CCCCCC">Maxo which is the container</font><font color="#E5E5E5"> format that</font>

347
00:15:30,470 --> 00:15:35,899
was<font color="#E5E5E5"> used by flash in the past there's an</font>

348
00:15:33,769 --> 00:15:37,490
HTTP sauce that is using<font color="#E5E5E5"> high power</font>

349
00:15:35,899 --> 00:15:41,089
<font color="#CCCCCC">there's some audio and</font><font color="#E5E5E5"> video</font><font color="#CCCCCC"> filters</font>

350
00:15:37,490 --> 00:15:44,120
<font color="#E5E5E5">available and there's Amazon s3</font><font color="#CCCCCC"> source</font>

351
00:15:41,089 --> 00:15:47,540
and<font color="#E5E5E5"> sync available in other repositories</font>

352
00:15:44,120 --> 00:15:49,699
there's start of animated gif<font color="#CCCCCC"> decoder VA</font>

353
00:15:47,540 --> 00:15:51,858
<font color="#E5E5E5">API sync and all kinds of things</font><font color="#CCCCCC"> that</font>

354
00:15:49,699 --> 00:15:53,660
probably don't<font color="#E5E5E5"> even</font><font color="#CCCCCC"> know about</font><font color="#E5E5E5"> it's not</font>

355
00:15:51,859 --> 00:15:56,359
complete yet<font color="#CCCCCC"> it's in the very</font><font color="#E5E5E5"> early</font>

356
00:15:53,660 --> 00:15:58,309
<font color="#CCCCCC">stages but nonetheless it's useful</font>

357
00:15:56,359 --> 00:16:00,499
<font color="#E5E5E5">already and you can use it to write</font>

358
00:15:58,309 --> 00:16:03,319
<font color="#CCCCCC">three</font><font color="#E5E5E5"> Summa plugins to extend</font><font color="#CCCCCC"> juice</font>

359
00:16:00,499 --> 00:16:04,160
tomorrow<font color="#E5E5E5"> with new functionality and all</font>

360
00:16:03,319 --> 00:16:06,199
these plugins

361
00:16:04,160 --> 00:16:07,969
while they are<font color="#CCCCCC"> written</font><font color="#E5E5E5"> in rust they will</font>

362
00:16:06,199 --> 00:16:09,799
work<font color="#CCCCCC"> in any gstreamer application no</font>

363
00:16:07,970 --> 00:16:15,169
matter what<font color="#CCCCCC"> language this application is</font>

364
00:16:09,799 --> 00:16:17,629
written<font color="#E5E5E5"> in so for the future of course</font>

365
00:16:15,169 --> 00:16:21,859
the plan is to<font color="#E5E5E5"> write more rust to write</font>

366
00:16:17,629 --> 00:16:25,309
less see especially<font color="#E5E5E5"> new plugins if</font>

367
00:16:21,859 --> 00:16:30,019
<font color="#E5E5E5">possible it would be good to</font><font color="#CCCCCC"> have them</font>

368
00:16:25,309 --> 00:16:32,499
written in rust now and some<font color="#E5E5E5"> of the</font>

369
00:16:30,019 --> 00:16:35,869
<font color="#E5E5E5">ideas that have is to write some a</font>

370
00:16:32,499 --> 00:16:38,929
plaque in<font color="#E5E5E5"> about an around rust</font><font color="#CCCCCC"> AV about</font>

371
00:16:35,869 --> 00:16:41,389
which we will have a talk afterwards

372
00:16:38,929 --> 00:16:44,029
there are various codec libraries

373
00:16:41,389 --> 00:16:45,589
already<font color="#E5E5E5"> available in rust there's a flux</font>

374
00:16:44,029 --> 00:16:48,679
decoder for the<font color="#CCCCCC"> flick audio format</font>

375
00:16:45,589 --> 00:16:51,019
there's a voice decoder that's the start

376
00:16:48,679 --> 00:16:53,749
of an AV<font color="#CCCCCC"> one video encoder available</font>

377
00:16:51,019 --> 00:16:55,609
some<font color="#CCCCCC"> subtitler decoders and it would be</font>

378
00:16:53,749 --> 00:16:58,730
nice to wrap all these existing rust

379
00:16:55,609 --> 00:17:01,669
libraries and<font color="#E5E5E5"> adjust</font><font color="#CCCCCC"> map</font><font color="#E5E5E5"> plugin because</font>

380
00:16:58,730 --> 00:17:04,519
then every user<font color="#E5E5E5"> of</font><font color="#CCCCCC"> gstreamer would have</font>

381
00:17:01,669 --> 00:17:07,579
something safe available something that

382
00:17:04,519 --> 00:17:09,529
is not wrapped around<font color="#CCCCCC"> decades old</font>

383
00:17:07,579 --> 00:17:12,490
<font color="#E5E5E5">syllabus that nobody is maintaining</font>

384
00:17:09,529 --> 00:17:16,579
anymore so<font color="#E5E5E5"> that would be very very nice</font>

385
00:17:12,490 --> 00:17:17,689
<font color="#CCCCCC">and the</font><font color="#E5E5E5"> other thing would</font><font color="#CCCCCC"> be to write</font>

386
00:17:16,579 --> 00:17:19,279
more applications<font color="#E5E5E5"> more useful</font>

387
00:17:17,689 --> 00:17:21,439
applications in rust<font color="#E5E5E5"> currently they are</font>

388
00:17:19,279 --> 00:17:23,779
not that many out there<font color="#CCCCCC"> people are just</font>

389
00:17:21,439 --> 00:17:25,610
starting<font color="#E5E5E5"> to use the bindings and all of</font>

390
00:17:23,779 --> 00:17:27,589
this is<font color="#CCCCCC"> something where you</font><font color="#E5E5E5"> can also get</font>

391
00:17:25,609 --> 00:17:31,399
involved<font color="#E5E5E5"> if you're interested in this</font>

392
00:17:27,589 --> 00:17:34,700
<font color="#E5E5E5">kind of stuff just look at the existing</font>

393
00:17:31,399 --> 00:17:37,699
<font color="#E5E5E5">code</font><font color="#CCCCCC"> look at the</font><font color="#E5E5E5"> existing</font><font color="#CCCCCC"> examples if</font>

394
00:17:34,700 --> 00:17:39,049
<font color="#CCCCCC">you've any questions ask me all this is</font>

395
00:17:37,700 --> 00:17:41,720
something<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> really care about and</font>

396
00:17:39,049 --> 00:17:45,230
<font color="#CCCCCC">if you need</font><font color="#E5E5E5"> help with</font><font color="#CCCCCC"> that just ask for</font>

397
00:17:41,720 --> 00:17:47,419
<font color="#E5E5E5">help</font><font color="#CCCCCC"> what we are not going to</font><font color="#E5E5E5"> do at this</font>

398
00:17:45,230 --> 00:17:49,659
point<font color="#E5E5E5"> is to</font><font color="#CCCCCC"> rewrite this demand rust</font>

399
00:17:47,419 --> 00:17:52,700
<font color="#E5E5E5">it's a lot of code nobody is going to</font>

400
00:17:49,659 --> 00:17:57,559
have the time<font color="#CCCCCC"> for rewriting</font><font color="#E5E5E5"> all that but</font>

401
00:17:52,700 --> 00:18:00,289
in the long run if<font color="#E5E5E5"> we continue continue</font>

402
00:17:57,559 --> 00:18:02,600
to see that<font color="#CCCCCC"> rust is really the perfect</font>

403
00:18:00,289 --> 00:18:03,280
fit quad<font color="#CCCCCC"> gstreamer components could be</font>

404
00:18:02,600 --> 00:18:05,770
rewritten

405
00:18:03,280 --> 00:18:08,649
but that's all in the long run first of

406
00:18:05,770 --> 00:18:13,660
all applications<font color="#CCCCCC"> and plugins which is</font>

407
00:18:08,650 --> 00:18:15,670
already<font color="#E5E5E5"> a huge part and also now would</font>

408
00:18:13,660 --> 00:18:17,470
be the<font color="#E5E5E5"> perfect</font><font color="#CCCCCC"> time for you to start</font>

409
00:18:15,670 --> 00:18:20,200
<font color="#E5E5E5">writing do some applications and plaque</font>

410
00:18:17,470 --> 00:18:22,720
and plugins in rust<font color="#CCCCCC"> all what</font><font color="#E5E5E5"> you need</font><font color="#CCCCCC"> is</font>

411
00:18:20,200 --> 00:18:24,700
available<font color="#CCCCCC"> already</font><font color="#E5E5E5"> and also people that</font>

412
00:18:22,720 --> 00:18:26,800
didn't touch<font color="#E5E5E5"> this</font><font color="#CCCCCC"> to me before</font><font color="#E5E5E5"> because</font>

413
00:18:24,700 --> 00:18:28,750
<font color="#CCCCCC">oh this is all see this</font><font color="#E5E5E5"> is we have the</font>

414
00:18:26,800 --> 00:18:32,230
object<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> you can also start now if</font>

415
00:18:28,750 --> 00:18:34,600
you<font color="#CCCCCC"> would prefer</font><font color="#E5E5E5"> rust so I don't have</font>

416
00:18:32,230 --> 00:18:38,560
<font color="#E5E5E5">that much time left</font><font color="#CCCCCC"> so I will speed up a</font>

417
00:18:34,600 --> 00:18:41,620
<font color="#CCCCCC">little bit so my</font><font color="#E5E5E5"> rust experience so far</font>

418
00:18:38,560 --> 00:18:44,020
<font color="#CCCCCC">I said before I'm using it for my own</font>

419
00:18:41,620 --> 00:18:45,879
projects wherever possible<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are at</font>

420
00:18:44,020 --> 00:18:48,310
sink and it's in<font color="#E5E5E5"> pretty low we are also</font>

421
00:18:45,880 --> 00:18:52,330
using it for various client projects by

422
00:18:48,310 --> 00:18:55,720
now<font color="#CCCCCC"> it's mostly</font><font color="#E5E5E5"> little applications or</font>

423
00:18:52,330 --> 00:18:57,520
plugins<font color="#E5E5E5"> and for myself everything</font><font color="#CCCCCC"> is</font>

424
00:18:55,720 --> 00:19:00,910
much much<font color="#E5E5E5"> more enjoyable to write in</font>

425
00:18:57,520 --> 00:19:04,810
<font color="#CCCCCC">rust than in C and also more Android</font><font color="#E5E5E5"> or</font>

426
00:19:00,910 --> 00:19:08,140
also<font color="#CCCCCC"> on from</font><font color="#E5E5E5"> water source of our Russ is</font>

427
00:19:04,810 --> 00:19:10,300
much<font color="#E5E5E5"> better on a much better suited for</font>

428
00:19:08,140 --> 00:19:12,840
<font color="#CCCCCC">this kind of applications than any of</font>

429
00:19:10,300 --> 00:19:15,129
the other languages<font color="#CCCCCC"> are tried before</font>

430
00:19:12,840 --> 00:19:17,679
<font color="#CCCCCC">some things</font><font color="#E5E5E5"> that I noticed though is</font>

431
00:19:15,130 --> 00:19:23,290
<font color="#CCCCCC">that people are generally</font><font color="#E5E5E5"> very afraid of</font>

432
00:19:17,680 --> 00:19:24,610
unsafe<font color="#E5E5E5"> code so what I notice is that you</font>

433
00:19:23,290 --> 00:19:26,830
<font color="#E5E5E5">really shouldn't be</font><font color="#CCCCCC"> that afraid of</font>

434
00:19:24,610 --> 00:19:28,179
unsafe code<font color="#E5E5E5"> especially if your</font>

435
00:19:26,830 --> 00:19:30,370
alternative would be to<font color="#E5E5E5"> write something</font>

436
00:19:28,180 --> 00:19:32,890
<font color="#E5E5E5">in C and see everything is unsafe it's</font>

437
00:19:30,370 --> 00:19:34,719
just not written on on it so if you

438
00:19:32,890 --> 00:19:36,880
really<font color="#CCCCCC"> have to use unsafe code don't</font><font color="#E5E5E5"> be</font>

439
00:19:34,720 --> 00:19:40,720
afraid to do<font color="#E5E5E5"> that just do it but wrap it</font>

440
00:19:36,880 --> 00:19:42,280
in safe abstractions and before you do

441
00:19:40,720 --> 00:19:43,990
something<font color="#CCCCCC"> very</font><font color="#E5E5E5"> complicated</font><font color="#CCCCCC"> never get</font>

442
00:19:42,280 --> 00:19:45,700
your<font color="#E5E5E5"> code finished it's better to do</font>

443
00:19:43,990 --> 00:19:48,790
<font color="#E5E5E5">something unsafe especially</font><font color="#CCCCCC"> if it's</font>

444
00:19:45,700 --> 00:19:52,060
impossible<font color="#E5E5E5"> to do otherwise like for FF</font><font color="#CCCCCC"> I</font>

445
00:19:48,790 --> 00:19:53,500
or for optimizations<font color="#E5E5E5"> or in some cases if</font>

446
00:19:52,060 --> 00:19:56,500
you implement<font color="#E5E5E5"> your own data structures</font>

447
00:19:53,500 --> 00:19:58,840
and have situations<font color="#E5E5E5"> where you can't</font>

448
00:19:56,500 --> 00:20:00,490
possibly convince the compiler that<font color="#E5E5E5"> what</font>

449
00:19:58,840 --> 00:20:02,830
<font color="#CCCCCC">you are</font><font color="#E5E5E5"> doing there is safe these</font><font color="#CCCCCC"> guys</font>

450
00:20:00,490 --> 00:20:05,500
<font color="#CCCCCC">exist</font><font color="#E5E5E5"> and well use unsafe code if you</font>

451
00:20:02,830 --> 00:20:08,199
have to another<font color="#E5E5E5"> thing I</font><font color="#CCCCCC"> noticed is that</font>

452
00:20:05,500 --> 00:20:09,940
<font color="#CCCCCC">people are</font><font color="#E5E5E5"> looking at Russ projects and</font>

453
00:20:08,200 --> 00:20:13,740
<font color="#E5E5E5">also for example</font><font color="#CCCCCC"> the do Sigma bindings</font>

454
00:20:09,940 --> 00:20:15,910
<font color="#E5E5E5">and they have a million dependencies and</font>

455
00:20:13,740 --> 00:20:16,780
people<font color="#CCCCCC"> coming from</font><font color="#E5E5E5"> C are usually very</font>

456
00:20:15,910 --> 00:20:18,220
afraid<font color="#E5E5E5"> of</font>

457
00:20:16,780 --> 00:20:20,350
because<font color="#CCCCCC"> dependencies that's something</font>

458
00:20:18,220 --> 00:20:23,500
very<font color="#CCCCCC"> difficult you somehow have to</font>

459
00:20:20,350 --> 00:20:25,000
compile<font color="#E5E5E5"> all that and it's other people's</font>

460
00:20:23,500 --> 00:20:27,820
code it<font color="#E5E5E5"> might not work properly you</font>

461
00:20:25,000 --> 00:20:30,090
<font color="#E5E5E5">might not have a way to fix it so far my</font>

462
00:20:27,820 --> 00:20:32,500
<font color="#CCCCCC">experience with rust in this regard is</font>

463
00:20:30,090 --> 00:20:34,149
quite the opposite it's very easy to

464
00:20:32,500 --> 00:20:36,700
depend on something<font color="#E5E5E5"> new it's</font><font color="#CCCCCC"> very easy</font>

465
00:20:34,150 --> 00:20:37,900
to<font color="#E5E5E5"> create your</font><font color="#CCCCCC"> own fork of that</font><font color="#E5E5E5"> if you</font>

466
00:20:36,700 --> 00:20:40,480
have to fix something in the maintain

467
00:20:37,900 --> 00:20:42,850
that's not<font color="#CCCCCC"> available</font><font color="#E5E5E5"> but what I noticed</font>

468
00:20:40,480 --> 00:20:45,160
so far<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> all the projects that I'm</font>

469
00:20:42,850 --> 00:20:46,689
depending on the<font color="#E5E5E5"> main the</font><font color="#CCCCCC"> maintenance</font>

470
00:20:45,160 --> 00:20:48,640
are very active very<font color="#E5E5E5"> friendly and</font>

471
00:20:46,690 --> 00:20:50,290
<font color="#CCCCCC">helpful</font><font color="#E5E5E5"> even if I</font><font color="#CCCCCC"> don't want to</font><font color="#E5E5E5"> fix</font>

472
00:20:48,640 --> 00:20:52,420
<font color="#CCCCCC">anything in there</font><font color="#E5E5E5"> usually they</font><font color="#CCCCCC"> are</font>

473
00:20:50,290 --> 00:20:54,850
interested in<font color="#CCCCCC"> fixing it and otherwise</font>

474
00:20:52,420 --> 00:20:55,990
usually<font color="#CCCCCC"> the code is kind of</font><font color="#E5E5E5"> clean you</font>

475
00:20:54,850 --> 00:20:57,909
<font color="#E5E5E5">don't have the situation</font><font color="#CCCCCC"> that you</font>

476
00:20:55,990 --> 00:21:00,190
<font color="#CCCCCC">haven't see that you might use</font><font color="#E5E5E5"> the</font>

477
00:20:57,910 --> 00:21:02,560
library that was<font color="#E5E5E5"> written 20 years ago</font><font color="#CCCCCC"> in</font>

478
00:21:00,190 --> 00:21:04,030
<font color="#CCCCCC">a code style that nobody would use</font>

479
00:21:02,560 --> 00:21:07,179
<font color="#E5E5E5">nowadays anymore and it's just</font>

480
00:21:04,030 --> 00:21:09,420
impossible to<font color="#E5E5E5"> read but I guess that's</font>

481
00:21:07,180 --> 00:21:12,670
just because<font color="#E5E5E5"> the language is kind of new</font>

482
00:21:09,420 --> 00:21:14,740
and the other part is<font color="#E5E5E5"> people shouldn't</font>

483
00:21:12,670 --> 00:21:16,600
<font color="#E5E5E5">be really</font><font color="#CCCCCC"> afraid of performance</font>

484
00:21:14,740 --> 00:21:18,190
penalties for using<font color="#CCCCCC"> high-level</font>

485
00:21:16,600 --> 00:21:20,679
<font color="#E5E5E5">abstractions especially things like</font>

486
00:21:18,190 --> 00:21:23,380
iterators they look<font color="#E5E5E5"> like complete</font><font color="#CCCCCC"> magic</font>

487
00:21:20,680 --> 00:21:26,650
<font color="#E5E5E5">but in the end they compile compile down</font>

488
00:21:23,380 --> 00:21:28,840
to very fast and<font color="#E5E5E5"> optimized code so in</font>

489
00:21:26,650 --> 00:21:30,490
<font color="#E5E5E5">general what I saw is don't worry so</font>

490
00:21:28,840 --> 00:21:32,260
much about<font color="#E5E5E5"> optimizing things in the</font>

491
00:21:30,490 --> 00:21:33,580
<font color="#E5E5E5">beginning just write readable code and</font>

492
00:21:32,260 --> 00:21:35,530
you<font color="#CCCCCC"> will</font><font color="#E5E5E5"> notice that</font><font color="#CCCCCC"> for most</font><font color="#E5E5E5"> things</font>

493
00:21:33,580 --> 00:21:40,419
<font color="#E5E5E5">it's it is already as optimal as</font>

494
00:21:35,530 --> 00:21:42,190
possible and but in general<font color="#CCCCCC"> as usual</font>

495
00:21:40,420 --> 00:21:43,870
when you optimize<font color="#E5E5E5"> in the end and you</font>

496
00:21:42,190 --> 00:21:48,670
<font color="#CCCCCC">measure</font><font color="#E5E5E5"> first what you want</font><font color="#CCCCCC"> to optimize</font>

497
00:21:43,870 --> 00:21:50,709
<font color="#E5E5E5">and what our source of</font><font color="#CCCCCC"> is that most of</font>

498
00:21:48,670 --> 00:21:54,130
the<font color="#E5E5E5"> things that</font><font color="#CCCCCC"> I was writing even the</font>

499
00:21:50,710 --> 00:21:56,320
inner processing loops of<font color="#CCCCCC"> audio filters</font>

500
00:21:54,130 --> 00:21:57,820
for example<font color="#CCCCCC"> in the end</font><font color="#E5E5E5"> the assembly that</font>

501
00:21:56,320 --> 00:21:59,679
<font color="#E5E5E5">the compiler is outputting that's</font>

502
00:21:57,820 --> 00:22:01,720
basically<font color="#E5E5E5"> the same thing that a</font><font color="#CCCCCC"> C</font>

503
00:21:59,680 --> 00:22:04,960
compiler<font color="#E5E5E5"> would have output or sometimes</font>

504
00:22:01,720 --> 00:22:05,550
<font color="#CCCCCC">even better but not everything</font><font color="#E5E5E5"> is</font>

505
00:22:04,960 --> 00:22:08,350
perfect

506
00:22:05,550 --> 00:22:13,350
the language is continuously improving

507
00:22:08,350 --> 00:22:17,409
<font color="#E5E5E5">but there are still many open</font>

508
00:22:13,350 --> 00:22:18,760
construction sites<font color="#CCCCCC"> and for myself</font><font color="#E5E5E5"> I have</font>

509
00:22:17,410 --> 00:22:20,710
a little wish list of<font color="#E5E5E5"> things that I</font>

510
00:22:18,760 --> 00:22:23,980
<font color="#E5E5E5">would really like</font><font color="#CCCCCC"> to see in a stable</font>

511
00:22:20,710 --> 00:22:29,510
rust<font color="#E5E5E5"> in the near future</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> would</font>

512
00:22:23,980 --> 00:22:31,549
<font color="#E5E5E5">be all these little little items so</font>

513
00:22:29,510 --> 00:22:35,030
everybody who ever wrote a little<font color="#CCCCCC"> bit of</font>

514
00:22:31,549 --> 00:22:36,290
rust<font color="#CCCCCC"> code</font><font color="#E5E5E5"> probably saw</font><font color="#CCCCCC"> that at some</font>

515
00:22:35,030 --> 00:22:38,780
point<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to a fight with a bow</font>

516
00:22:36,290 --> 00:22:41,480
checker<font color="#E5E5E5"> and the non lexical</font><font color="#CCCCCC"> life times</font>

517
00:22:38,780 --> 00:22:44,389
are something that<font color="#E5E5E5"> is that are going</font><font color="#CCCCCC"> to</font>

518
00:22:41,480 --> 00:22:46,400
<font color="#E5E5E5">improve this</font><font color="#CCCCCC"> situation a lot</font><font color="#E5E5E5"> and well</font>

519
00:22:44,390 --> 00:22:49,669
it's<font color="#E5E5E5"> in</font><font color="#CCCCCC"> nightly already</font><font color="#E5E5E5"> as far</font><font color="#CCCCCC"> as I</font>

520
00:22:46,400 --> 00:22:51,650
remember<font color="#E5E5E5"> so it should</font><font color="#CCCCCC"> be stable at some</font>

521
00:22:49,669 --> 00:22:56,030
point in the<font color="#CCCCCC"> future we will see and</font>

522
00:22:51,650 --> 00:22:58,640
other<font color="#E5E5E5"> things are supported in in stable</font>

523
00:22:56,030 --> 00:23:00,230
rust releases for SIMD instructions

524
00:22:58,640 --> 00:23:03,080
which is currently<font color="#E5E5E5"> not available</font>

525
00:23:00,230 --> 00:23:05,510
<font color="#E5E5E5">available</font><font color="#CCCCCC"> something which would make</font>

526
00:23:03,080 --> 00:23:07,309
many<font color="#E5E5E5"> multimedia processing tasks much</font>

527
00:23:05,510 --> 00:23:10,160
much faster<font color="#CCCCCC"> it's something</font><font color="#E5E5E5"> that is</font>

528
00:23:07,309 --> 00:23:12,678
available<font color="#E5E5E5"> in nightly but ideally I</font>

529
00:23:10,160 --> 00:23:14,960
wouldn't like to<font color="#E5E5E5"> use nightly and another</font>

530
00:23:12,679 --> 00:23:17,540
thing<font color="#E5E5E5"> would be the</font><font color="#CCCCCC"> ability to use</font><font color="#E5E5E5"> custom</font>

531
00:23:14,960 --> 00:23:19,610
<font color="#E5E5E5">allocators also something that is</font><font color="#CCCCCC"> a</font>

532
00:23:17,540 --> 00:23:22,040
<font color="#E5E5E5">nightly but not stable yet all the other</font>

533
00:23:19,610 --> 00:23:24,559
parts are something that<font color="#CCCCCC"> is planned</font><font color="#E5E5E5"> or</font>

534
00:23:22,040 --> 00:23:27,080
that is not<font color="#CCCCCC"> even planned yet we will</font>

535
00:23:24,559 --> 00:23:30,230
<font color="#E5E5E5">have to see I</font><font color="#CCCCCC"> think Luka who is doing</font>

536
00:23:27,080 --> 00:23:33,500
the next<font color="#E5E5E5"> talk will also talk about these</font>

537
00:23:30,230 --> 00:23:38,130
items<font color="#CCCCCC"> in</font><font color="#E5E5E5"> more details and with that I'm</font>

538
00:23:33,500 --> 00:23:46,659
<font color="#CCCCCC">done yeah</font><font color="#E5E5E5"> thanks any questions</font>

539
00:23:38,130 --> 00:23:46,659
[Applause]

540
00:24:02,929 --> 00:24:09,690
well so the<font color="#CCCCCC"> question was that</font><font color="#E5E5E5"> he was</font>

541
00:24:07,740 --> 00:24:11,429
<font color="#E5E5E5">talking to someone before who is writing</font>

542
00:24:09,690 --> 00:24:13,919
<font color="#CCCCCC">G Samar</font><font color="#E5E5E5"> code and why they don't</font><font color="#CCCCCC"> use</font>

543
00:24:11,429 --> 00:24:17,159
<font color="#CCCCCC">trust</font><font color="#E5E5E5"> and the answer was currently it's</font>

544
00:24:13,919 --> 00:24:20,190
impossible to submit rust<font color="#E5E5E5"> through</font><font color="#CCCCCC"> Summa</font>

545
00:24:17,159 --> 00:24:22,970
plugins to the existing system<font color="#E5E5E5"> of source</font>

546
00:24:20,190 --> 00:24:26,909
code modules which is true unfortunately

547
00:24:22,970 --> 00:24:29,120
<font color="#CCCCCC">but for that the at least</font><font color="#E5E5E5"> my plan in the</font>

548
00:24:26,909 --> 00:24:31,620
<font color="#CCCCCC">near future is</font><font color="#E5E5E5"> that we will have</font><font color="#CCCCCC"> a new</font>

549
00:24:29,120 --> 00:24:33,570
plug-in module called<font color="#E5E5E5"> I don't know just</font>

550
00:24:31,620 --> 00:24:35,850
these<font color="#E5E5E5"> two plugins RS or something like</font>

551
00:24:33,570 --> 00:24:38,939
<font color="#E5E5E5">that where there is</font><font color="#CCCCCC"> already the start</font><font color="#E5E5E5"> of</font>

552
00:24:35,850 --> 00:24:40,709
<font color="#E5E5E5">that and then you would just have</font>

553
00:24:38,940 --> 00:24:43,039
another module<font color="#CCCCCC"> that has all the Ross</font>

554
00:24:40,710 --> 00:24:45,960
<font color="#CCCCCC">space</font><font color="#E5E5E5"> things main reason for</font><font color="#CCCCCC"> that is</font>

555
00:24:43,039 --> 00:24:49,379
well that that it can't be<font color="#E5E5E5"> merged in the</font>

556
00:24:45,960 --> 00:24:51,120
existing modules is that where you have

557
00:24:49,379 --> 00:24:53,908
to convince<font color="#CCCCCC"> people that this new</font>

558
00:24:51,120 --> 00:24:55,049
<font color="#CCCCCC">language is something</font><font color="#E5E5E5"> that it's not</font>

559
00:24:53,909 --> 00:24:57,389
<font color="#E5E5E5">going to make their life more difficult</font>

560
00:24:55,049 --> 00:24:59,940
<font color="#E5E5E5">to have inside the main source code</font>

561
00:24:57,389 --> 00:25:02,490
modules<font color="#E5E5E5"> and also on currently the build</font>

562
00:24:59,940 --> 00:25:06,389
system is all<font color="#CCCCCC"> auto tools or museum based</font>

563
00:25:02,490 --> 00:25:08,700
and building<font color="#CCCCCC"> blast code from there</font><font color="#E5E5E5"> it's</font>

564
00:25:06,389 --> 00:25:10,620
not trivial<font color="#E5E5E5"> so something else that is</font>

565
00:25:08,700 --> 00:25:13,649
separate<font color="#E5E5E5"> and completely</font><font color="#CCCCCC"> cago based would</font>

566
00:25:10,620 --> 00:25:15,750
be much nicer<font color="#E5E5E5"> but the goal is to have</font>

567
00:25:13,649 --> 00:25:18,709
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like an official rust</font><font color="#E5E5E5"> plug-in</font>

568
00:25:15,750 --> 00:25:21,710
module where all the things<font color="#E5E5E5"> are</font>

569
00:25:18,710 --> 00:25:21,710
collected

570
00:25:24,890 --> 00:25:33,990
do you see some<font color="#CCCCCC"> of the like official</font>

571
00:25:27,690 --> 00:25:36,840
plugins<font color="#E5E5E5"> replace probably so the question</font>

572
00:25:33,990 --> 00:25:39,740
was if I see<font color="#E5E5E5"> existing</font><font color="#CCCCCC"> Lisa</font><font color="#E5E5E5"> my plugins</font>

573
00:25:36,840 --> 00:25:41,790
replaced by rust versions of them<font color="#E5E5E5"> and</font>

574
00:25:39,740 --> 00:25:45,240
yes I<font color="#E5E5E5"> think so</font>

575
00:25:41,790 --> 00:25:46,139
there's one that<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> FOV democra that</font>

576
00:25:45,240 --> 00:25:48,210
<font color="#CCCCCC">i mentioned earlier</font>

577
00:25:46,140 --> 00:25:50,150
that's almost feature equivalent with

578
00:25:48,210 --> 00:25:53,580
<font color="#E5E5E5">existing one that is written in C and</font>

579
00:25:50,150 --> 00:25:54,870
that could very<font color="#CCCCCC"> well</font><font color="#E5E5E5"> replace</font><font color="#CCCCCC"> it but in</font>

580
00:25:53,580 --> 00:25:57,030
the<font color="#E5E5E5"> end we don't really have to replace</font>

581
00:25:54,870 --> 00:25:59,760
it<font color="#E5E5E5"> it is enough if it exists as an</font>

582
00:25:57,030 --> 00:26:01,740
additional atom AXA we could give it<font color="#CCCCCC"> a</font>

583
00:25:59,760 --> 00:26:03,750
higher priority<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> whenever it is</font>

584
00:26:01,740 --> 00:26:06,600
<font color="#E5E5E5">installed it will be used and otherwise</font>

585
00:26:03,750 --> 00:26:08,610
people<font color="#CCCCCC"> who don't want to worry about how</font>

586
00:26:06,600 --> 00:26:11,189
to compile this we a trust code<font color="#CCCCCC"> they</font>

587
00:26:08,610 --> 00:26:15,179
could just continue<font color="#CCCCCC"> using the C version</font>

588
00:26:11,190 --> 00:26:16,650
but yeah<font color="#E5E5E5"> same thing with the</font><font color="#CCCCCC"> HTTP sauce</font>

589
00:26:15,180 --> 00:26:18,060
that I mentioned before<font color="#E5E5E5"> the goal is to</font>

590
00:26:16,650 --> 00:26:20,550
<font color="#E5E5E5">make it feature equivalent with the</font>

591
00:26:18,060 --> 00:26:23,870
existing one<font color="#CCCCCC"> written</font><font color="#E5E5E5"> in C and then it</font>

592
00:26:20,550 --> 00:26:23,870
would also be a replacement

593
00:26:25,780 --> 00:26:33,160
[Applause]

