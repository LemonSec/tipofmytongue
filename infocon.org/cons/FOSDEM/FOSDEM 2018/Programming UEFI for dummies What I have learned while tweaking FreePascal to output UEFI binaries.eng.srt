1
00:00:04,610 --> 00:00:12,230
so I'm<font color="#CCCCCC"> Jacobs here</font><font color="#E5E5E5"> I'm a application</font>

2
00:00:09,020 --> 00:00:16,219
software programmer and yes<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will speak</font>

3
00:00:12,230 --> 00:00:22,039
you about<font color="#CCCCCC"> UFE programming</font><font color="#E5E5E5"> that might be</font>

4
00:00:16,219 --> 00:00:26,119
surprising<font color="#CCCCCC"> but</font><font color="#E5E5E5"> you will look why such</font>

5
00:00:22,039 --> 00:00:29,390
things<font color="#CCCCCC"> I will I will not learn you how</font>

6
00:00:26,119 --> 00:00:33,590
to write an operating system<font color="#E5E5E5"> nor</font><font color="#CCCCCC"> even a</font>

7
00:00:29,390 --> 00:00:37,129
<font color="#E5E5E5">bootloader</font><font color="#CCCCCC"> so II but I will show you the</font>

8
00:00:33,590 --> 00:00:43,159
step to make<font color="#E5E5E5"> and executable files that</font>

9
00:00:37,129 --> 00:00:47,080
can<font color="#E5E5E5"> run in UEFI directly at the</font>

10
00:00:43,159 --> 00:00:47,080
beginning of the boot of<font color="#CCCCCC"> your computer</font>

11
00:00:48,280 --> 00:00:58,670
so as I intended<font color="#E5E5E5"> this presentation to be</font>

12
00:00:53,479 --> 00:01:02,119
<font color="#E5E5E5">for beginners we just describe you what</font>

13
00:00:58,670 --> 00:01:05,960
<font color="#E5E5E5">is UEFI maybe you you</font><font color="#CCCCCC"> have a good</font>

14
00:01:02,119 --> 00:01:09,260
knowledge of<font color="#E5E5E5"> it already but</font><font color="#CCCCCC"> will just</font>

15
00:01:05,960 --> 00:01:12,139
present<font color="#CCCCCC"> you the minimum things you need</font>

16
00:01:09,260 --> 00:01:15,710
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> rest you need</font><font color="#E5E5E5"> to know for</font>

17
00:01:12,140 --> 00:01:19,130
the rest<font color="#E5E5E5"> of the presentation</font><font color="#CCCCCC"> and UEFI is</font>

18
00:01:15,710 --> 00:01:22,309
a specification<font color="#E5E5E5"> that present a common</font>

19
00:01:19,130 --> 00:01:27,640
interface above a wide range of<font color="#E5E5E5"> hardware</font>

20
00:01:22,310 --> 00:01:30,290
<font color="#E5E5E5">and it's a specification and it's</font>

21
00:01:27,640 --> 00:01:32,450
present for<font color="#E5E5E5"> operating system or</font>

22
00:01:30,290 --> 00:01:40,040
bootloader the same interface

23
00:01:32,450 --> 00:01:42,260
whatever the hardware so but I will<font color="#E5E5E5"> not</font>

24
00:01:40,040 --> 00:01:45,800
speak<font color="#E5E5E5"> in this presentation about alwa</font>

25
00:01:42,260 --> 00:01:49,010
<font color="#E5E5E5">initialization</font><font color="#CCCCCC"> just the</font><font color="#E5E5E5"> communication</font>

26
00:01:45,800 --> 00:01:51,470
path between UEFI and<font color="#E5E5E5"> maybe your</font>

27
00:01:49,010 --> 00:01:59,030
<font color="#E5E5E5">computer or your and your operating</font>

28
00:01:51,470 --> 00:02:03,370
<font color="#E5E5E5">system or your</font><font color="#CCCCCC"> software so</font><font color="#E5E5E5"> you if I mean</font>

29
00:01:59,030 --> 00:02:03,370
unified extensible firmware interface

30
00:02:04,000 --> 00:02:14,420
and there is a huge specification<font color="#E5E5E5"> more</font>

31
00:02:07,909 --> 00:02:15,980
than<font color="#CCCCCC"> 2000 pages and</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> shops and it</font>

32
00:02:14,420 --> 00:02:17,200
will be good<font color="#CCCCCC"> enough for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> rest of</font><font color="#E5E5E5"> the</font>

33
00:02:15,980 --> 00:02:21,099
presentation

34
00:02:17,200 --> 00:02:28,630
it's abuse replacement with<font color="#E5E5E5"> expound</font>

35
00:02:21,099 --> 00:02:31,030
<font color="#CCCCCC">Extron externally the capabilities so</font>

36
00:02:28,630 --> 00:02:37,109
what<font color="#E5E5E5"> I will discuss in this presentation</font>

37
00:02:31,030 --> 00:02:41,650
I will show you<font color="#E5E5E5"> existing</font><font color="#CCCCCC"> two chains and</font>

38
00:02:37,110 --> 00:02:46,840
what are the shortcomings with them then

39
00:02:41,650 --> 00:02:55,390
I<font color="#E5E5E5"> will show you how you fi executable</font>

40
00:02:46,840 --> 00:02:59,380
file is<font color="#E5E5E5"> structure then how you can ow</font><font color="#CCCCCC"> is</font>

41
00:02:55,390 --> 00:03:02,440
organized the<font color="#E5E5E5"> API of UEFI because it is</font>

42
00:02:59,380 --> 00:03:06,819
what<font color="#E5E5E5"> we will use to communicate with</font><font color="#CCCCCC"> the</font>

43
00:03:02,440 --> 00:03:10,269
hardware and<font color="#CCCCCC"> I will give</font><font color="#E5E5E5"> you a short</font>

44
00:03:06,819 --> 00:03:13,929
<font color="#E5E5E5">overview of features that could be</font>

45
00:03:10,269 --> 00:03:16,720
<font color="#CCCCCC">useful and that might give you some</font>

46
00:03:13,930 --> 00:03:19,170
ideas<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make something</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> than</font>

47
00:03:16,720 --> 00:03:24,850
<font color="#CCCCCC">just a bootloader or things like</font><font color="#E5E5E5"> that</font>

48
00:03:19,170 --> 00:03:30,220
<font color="#E5E5E5">and after I will show you describe you</font>

49
00:03:24,850 --> 00:03:33,160
an important an important point in<font color="#CCCCCC"> ufi</font>

50
00:03:30,220 --> 00:03:35,200
specification is<font color="#E5E5E5"> the protocol concept</font>

51
00:03:33,160 --> 00:03:40,450
<font color="#E5E5E5">and I will explain</font><font color="#CCCCCC"> you why it's</font>

52
00:03:35,200 --> 00:03:45,250
important<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> I will show you some</font>

53
00:03:40,450 --> 00:03:53,200
<font color="#E5E5E5">more</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> at the end and what I plan</font>

54
00:03:45,250 --> 00:03:56,170
to do<font color="#CCCCCC"> I will follow this presentation so</font>

55
00:03:53,200 --> 00:03:59,890
first just<font color="#E5E5E5"> this notice in this</font>

56
00:03:56,170 --> 00:04:01,899
presentation I will don't take care of

57
00:03:59,890 --> 00:04:07,420
<font color="#E5E5E5">security yeah I know it's important but</font>

58
00:04:01,900 --> 00:04:09,730
<font color="#CCCCCC">for learning programming</font><font color="#E5E5E5"> UEFI I think</font>

59
00:04:07,420 --> 00:04:12,220
it's not<font color="#CCCCCC"> that important I consider that</font>

60
00:04:09,730 --> 00:04:14,018
you disable secure boot<font color="#E5E5E5"> or things</font><font color="#CCCCCC"> like</font>

61
00:04:12,220 --> 00:04:16,389
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you are the owner of your</font>

62
00:04:14,019 --> 00:04:23,860
<font color="#E5E5E5">machine and you do what you want with</font>

63
00:04:16,389 --> 00:04:26,710
your<font color="#CCCCCC"> own out work</font><font color="#E5E5E5"> so don't and that</font><font color="#CCCCCC"> will</font>

64
00:04:23,860 --> 00:04:29,860
<font color="#CCCCCC">where you</font><font color="#E5E5E5"> focus on what Oh</font><font color="#CCCCCC"> beast</font>

65
00:04:26,710 --> 00:04:38,539
programmers like me<font color="#CCCCCC"> what he needs when</font>

66
00:04:29,860 --> 00:04:42,050
programming UEFI so first I will<font color="#CCCCCC"> show</font>

67
00:04:38,540 --> 00:04:44,540
you the there is mainly<font color="#E5E5E5"> your if you are</font>

68
00:04:42,050 --> 00:04:48,130
<font color="#E5E5E5">already done some UEFI development</font><font color="#CCCCCC"> I</font>

69
00:04:44,540 --> 00:04:53,000
hope you<font color="#E5E5E5"> don't at this point now because</font>

70
00:04:48,130 --> 00:04:55,969
you will<font color="#CCCCCC"> probably don't learn something</font>

71
00:04:53,000 --> 00:04:59,180
in this presentation<font color="#CCCCCC"> but there is two</font>

72
00:04:55,970 --> 00:05:06,580
main stack there with channel<font color="#E5E5E5"> PD key</font><font color="#CCCCCC"> to</font>

73
00:04:59,180 --> 00:05:10,700
and GNU<font color="#E5E5E5"> EFI and when I start</font><font color="#CCCCCC"> locking</font>

74
00:05:06,580 --> 00:05:14,000
programming<font color="#E5E5E5"> you</font><font color="#CCCCCC"> fi I just look at</font>

75
00:05:10,700 --> 00:05:16,670
documentation and<font color="#E5E5E5"> it</font><font color="#CCCCCC"> looks like it's not</font>

76
00:05:14,000 --> 00:05:19,330
<font color="#E5E5E5">the way for me</font><font color="#CCCCCC"> to go</font><font color="#E5E5E5"> so from what I will</font>

77
00:05:16,670 --> 00:05:23,680
because I don't even<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to install them</font>

78
00:05:19,330 --> 00:05:26,780
<font color="#E5E5E5">it was quite tedious setup process</font>

79
00:05:23,680 --> 00:05:28,970
<font color="#E5E5E5">because you don't have a package that</font>

80
00:05:26,780 --> 00:05:30,169
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> download and</font><font color="#E5E5E5"> start writing your</font>

81
00:05:28,970 --> 00:05:32,120
program

82
00:05:30,170 --> 00:05:34,640
<font color="#E5E5E5">jihui's package but</font><font color="#CCCCCC"> you have to download</font>

83
00:05:32,120 --> 00:05:36,830
the different<font color="#E5E5E5"> ones you have to configure</font>

84
00:05:34,640 --> 00:05:42,219
things<font color="#E5E5E5"> and thing like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's what I</font>

85
00:05:36,830 --> 00:05:47,990
<font color="#E5E5E5">weighed and it seems from what that GNU</font>

86
00:05:42,220 --> 00:05:50,660
<font color="#E5E5E5">EFI is supposed simpler</font><font color="#CCCCCC"> because for a</font>

87
00:05:47,990 --> 00:05:55,510
long time it would not<font color="#E5E5E5"> sure you can</font><font color="#CCCCCC"> use</font>

88
00:05:50,660 --> 00:05:58,340
<font color="#CCCCCC">your standard</font><font color="#E5E5E5"> Linux compiler for example</font>

89
00:05:55,510 --> 00:06:00,920
but it's not the case anymore<font color="#CCCCCC"> I checked</font>

90
00:05:58,340 --> 00:06:03,770
two weeks ago and<font color="#CCCCCC"> before if you</font><font color="#E5E5E5"> are on</font>

91
00:06:00,920 --> 00:06:07,460
the<font color="#E5E5E5"> Linux you</font><font color="#CCCCCC"> can do almost the</font><font color="#E5E5E5"> same you</font>

92
00:06:03,770 --> 00:06:15,830
don't<font color="#CCCCCC"> have to answer for example wind</font>

93
00:06:07,460 --> 00:06:19,450
<font color="#CCCCCC">the minimum</font><font color="#E5E5E5"> mingw to compile a GNU</font>

94
00:06:15,830 --> 00:06:25,060
Compiler for<font color="#CCCCCC"> Windows to get the job</font><font color="#E5E5E5"> done</font>

95
00:06:19,450 --> 00:06:29,539
it's not<font color="#E5E5E5"> more we clear but yeah</font>

96
00:06:25,060 --> 00:06:32,690
before<font color="#E5E5E5"> that you you have to cost compile</font>

97
00:06:29,540 --> 00:06:37,460
this<font color="#E5E5E5"> on your machine</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> be nervous</font>

98
00:06:32,690 --> 00:06:39,590
and with GNU if I it was<font color="#E5E5E5"> maybe why it's</font>

99
00:06:37,460 --> 00:06:42,820
<font color="#E5E5E5">maybe a chocolate but act that you can</font>

100
00:06:39,590 --> 00:06:47,289
use your standard<font color="#E5E5E5"> elf</font>

101
00:06:42,820 --> 00:06:54,520
Jack<font color="#CCCCCC"> tries and put them in UEFI UEFI</font>

102
00:06:47,290 --> 00:06:57,700
your files<font color="#E5E5E5"> executable files so why it's</font>

103
00:06:54,520 --> 00:07:00,700
so complicated<font color="#E5E5E5"> for</font><font color="#CCCCCC"> next to generate UEFI</font>

104
00:06:57,700 --> 00:07:02,310
is maybe it's because<font color="#E5E5E5"> of the structure</font>

105
00:07:00,700 --> 00:07:04,750
<font color="#CCCCCC">of the application</font>

106
00:07:02,310 --> 00:07:07,720
<font color="#E5E5E5">well important things to know is that</font>

107
00:07:04,750 --> 00:07:11,290
it's a pot<font color="#CCCCCC"> app executable file</font><font color="#E5E5E5"> it's not</font>

108
00:07:07,720 --> 00:07:15,010
an elf files and so it's exactly the

109
00:07:11,290 --> 00:07:17,530
same file format<font color="#CCCCCC"> like on Windows</font><font color="#E5E5E5"> so that</font>

110
00:07:15,010 --> 00:07:21,090
might explain why it's more difficult<font color="#E5E5E5"> if</font>

111
00:07:17,530 --> 00:07:23,619
you<font color="#E5E5E5"> are on Windows it's easy to get</font>

112
00:07:21,090 --> 00:07:31,450
<font color="#E5E5E5">portable executable files but from other</font>

113
00:07:23,620 --> 00:07:33,790
platform is more difficult<font color="#CCCCCC"> and the only</font>

114
00:07:31,450 --> 00:07:34,690
<font color="#E5E5E5">difference is there is in the header of</font>

115
00:07:33,790 --> 00:07:37,780
<font color="#CCCCCC">the file</font>

116
00:07:34,690 --> 00:07:40,510
there is a special<font color="#E5E5E5"> subsystem code to</font>

117
00:07:37,780 --> 00:07:41,919
organize that it is and<font color="#E5E5E5"> UEFI application</font>

118
00:07:40,510 --> 00:07:49,000
<font color="#E5E5E5">2000 year</font>

119
00:07:41,920 --> 00:07:51,820
<font color="#E5E5E5">a very small difference and</font><font color="#CCCCCC"> Joey's</font><font color="#E5E5E5"> main</font>

120
00:07:49,000 --> 00:07:56,020
three kinds of UEFI applications those

121
00:07:51,820 --> 00:07:59,740
<font color="#CCCCCC">are with applications with this code so</font>

122
00:07:56,020 --> 00:08:02,469
it's mainly it's the<font color="#E5E5E5"> most used code it's</font>

123
00:07:59,740 --> 00:08:05,200
for<font color="#E5E5E5"> bootloader but you can imagine to</font>

124
00:08:02,470 --> 00:08:09,750
<font color="#CCCCCC">make your own vomit</font><font color="#E5E5E5"> an application with</font>

125
00:08:05,200 --> 00:08:12,789
this code<font color="#E5E5E5"> and there is another kind of</font>

126
00:08:09,750 --> 00:08:15,730
<font color="#E5E5E5">applications there are drivers there is</font>

127
00:08:12,790 --> 00:08:21,150
<font color="#E5E5E5">two kind but I will don't explain more</font>

128
00:08:15,730 --> 00:08:23,980
on<font color="#E5E5E5"> this feature because there is a good</font>

129
00:08:21,150 --> 00:08:26,229
<font color="#CCCCCC">drivers whiterose guide at the china co</font>

130
00:08:23,980 --> 00:08:30,100
<font color="#E5E5E5">website so you can</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at it you shot</font>

131
00:08:26,230 --> 00:08:34,030
in<font color="#CCCCCC"> your the internet and you will find</font>

132
00:08:30,100 --> 00:08:35,860
them but surely<font color="#E5E5E5"> it's exactly the same</font>

133
00:08:34,030 --> 00:08:38,890
file format<font color="#E5E5E5"> and it works just the same</font>

134
00:08:35,860 --> 00:08:41,710
it's just<font color="#E5E5E5"> the</font><font color="#CCCCCC"> intent</font><font color="#E5E5E5"> and the intention</font>

135
00:08:38,890 --> 00:08:44,218
of what you're<font color="#E5E5E5"> making inside that make</font>

136
00:08:41,710 --> 00:08:44,219
it to<font color="#E5E5E5"> a driver</font>

137
00:08:47,339 --> 00:08:54,579
when<font color="#E5E5E5"> other difference with the standard</font>

138
00:08:51,249 --> 00:08:58,930
<font color="#CCCCCC">fight is that there is a typo</font><font color="#E5E5E5"> and five</font>

139
00:08:54,579 --> 00:09:02,349
<font color="#E5E5E5">point called</font><font color="#CCCCCC"> efe</font><font color="#E5E5E5"> main and there is two</font>

140
00:08:58,930 --> 00:09:04,899
parameters under on the image that<font color="#CCCCCC"> is</font>

141
00:09:02,350 --> 00:09:07,839
automatic load automatically load were

142
00:09:04,899 --> 00:09:10,839
<font color="#E5E5E5">by the firmware and then the firmware</font>

143
00:09:07,839 --> 00:09:13,300
<font color="#E5E5E5">give you a system table and from this</font>

144
00:09:10,839 --> 00:09:16,809
system table we will show I will show

145
00:09:13,300 --> 00:09:19,508
you in the future<font color="#CCCCCC"> with the system table</font>

146
00:09:16,809 --> 00:09:29,379
<font color="#E5E5E5">you can call all you will feel UEFI</font>

147
00:09:19,509 --> 00:09:33,069
<font color="#E5E5E5">api's so it's very important and to</font><font color="#CCCCCC"> call</font>

148
00:09:29,379 --> 00:09:35,980
the those UEFI api's you have to use the

149
00:09:33,069 --> 00:09:38,319
same<font color="#E5E5E5"> calling convention as the column</font>

150
00:09:35,980 --> 00:09:40,329
corresponding<font color="#CCCCCC"> Windows target so</font><font color="#E5E5E5"> that</font>

151
00:09:38,319 --> 00:09:44,550
also the other problem that<font color="#E5E5E5"> you might</font>

152
00:09:40,329 --> 00:09:47,439
have<font color="#E5E5E5"> with</font><font color="#CCCCCC"> standard linux object files</font>

153
00:09:44,550 --> 00:09:50,859
<font color="#E5E5E5">because you probably don't use the same</font>

154
00:09:47,439 --> 00:09:54,399
<font color="#E5E5E5">calling convention and</font><font color="#CCCCCC"> EFI</font><font color="#E5E5E5"> is just about</font>

155
00:09:50,860 --> 00:10:02,129
<font color="#E5E5E5">that you call something that make the</font>

156
00:09:54,399 --> 00:10:06,879
translation for you so I<font color="#E5E5E5"> my take is that</font>

157
00:10:02,129 --> 00:10:09,850
Intel when they want to publish<font color="#E5E5E5"> UEFI</font>

158
00:10:06,879 --> 00:10:12,759
<font color="#CCCCCC">won't to have Microsoft</font><font color="#E5E5E5"> on board and</font>

159
00:10:09,850 --> 00:10:16,089
make<font color="#E5E5E5"> life for them</font><font color="#CCCCCC"> easier but more</font>

160
00:10:12,759 --> 00:10:18,670
<font color="#CCCCCC">difficult for</font><font color="#E5E5E5"> us it's</font><font color="#CCCCCC"> may take I don't</font>

161
00:10:16,089 --> 00:10:21,149
<font color="#CCCCCC">know if</font><font color="#E5E5E5"> we always on but I think it's</font>

162
00:10:18,670 --> 00:10:21,149
<font color="#CCCCCC">makes</font><font color="#E5E5E5"> sense</font>

163
00:10:23,990 --> 00:10:33,529
so<font color="#CCCCCC"> loss</font><font color="#E5E5E5"> of it and</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> key important</font>

164
00:10:30,770 --> 00:10:36,829
things to know is<font color="#CCCCCC"> that the CPU</font><font color="#E5E5E5"> is</font>

165
00:10:33,529 --> 00:10:39,200
already in protected<font color="#CCCCCC"> mode</font><font color="#E5E5E5"> so and with a</font>

166
00:10:36,830 --> 00:10:43,220
flat memory model so it's a real<font color="#CCCCCC"> change</font>

167
00:10:39,200 --> 00:10:45,170
<font color="#E5E5E5">for beginners like me</font><font color="#CCCCCC"> compared</font><font color="#E5E5E5"> to the</font>

168
00:10:43,220 --> 00:10:49,490
<font color="#CCCCCC">Buell's things that you come in real</font>

169
00:10:45,170 --> 00:10:55,760
mode and if you want more than more than

170
00:10:49,490 --> 00:10:58,310
<font color="#E5E5E5">30-years things you have to go to the -</font>

171
00:10:55,760 --> 00:11:01,580
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the protected mode and see like that</font>

172
00:10:58,310 --> 00:11:06,050
so<font color="#E5E5E5"> really now you can start maybe</font>

173
00:11:01,580 --> 00:11:14,959
something like very<font color="#CCCCCC"> close to an</font>

174
00:11:06,050 --> 00:11:18,079
<font color="#E5E5E5">application</font><font color="#CCCCCC"> under an OS on an even on 64</font>

175
00:11:14,959 --> 00:11:21,319
bytes<font color="#CCCCCC"> you</font><font color="#E5E5E5"> even go in wrong mode so</font>

176
00:11:18,080 --> 00:11:27,080
you're<font color="#E5E5E5"> already in 64 bytes and you don't</font>

177
00:11:21,320 --> 00:11:29,060
have to transition<font color="#CCCCCC"> - but</font><font color="#E5E5E5"> only one core</font>

178
00:11:27,080 --> 00:11:30,620
is initialized<font color="#CCCCCC"> so if you want to go</font>

179
00:11:29,060 --> 00:11:33,819
multi-threading you have to do your<font color="#CCCCCC"> own</font>

180
00:11:30,620 --> 00:11:38,150
work and do some<font color="#E5E5E5"> hardware initialization</font>

181
00:11:33,820 --> 00:11:41,680
so it's not<font color="#E5E5E5"> completely but it should</font><font color="#CCCCCC"> be</font>

182
00:11:38,150 --> 00:11:41,680
enough for start for starting

183
00:11:47,490 --> 00:11:57,250
now we will look<font color="#E5E5E5"> at an important</font>

184
00:11:51,180 --> 00:12:00,760
structure in the<font color="#CCCCCC"> UEFI api's it's the EFI</font>

185
00:11:57,250 --> 00:12:04,000
system<font color="#CCCCCC"> tables</font><font color="#E5E5E5"> from there you can access</font>

186
00:12:00,760 --> 00:12:09,970
some services<font color="#CCCCCC"> like input</font><font color="#E5E5E5"> output console</font>

187
00:12:04,000 --> 00:12:13,120
so you services also<font color="#CCCCCC"> fields to access</font>

188
00:12:09,970 --> 00:12:14,740
comfort of configuration tables<font color="#E5E5E5"> so if</font>

189
00:12:13,120 --> 00:12:17,140
you wait on operating<font color="#E5E5E5"> systems it might</font>

190
00:12:14,740 --> 00:12:23,080
be interesting<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> example there is a</font>

191
00:12:17,140 --> 00:12:25,540
<font color="#CCCCCC">CPI tables available there and there is</font>

192
00:12:23,080 --> 00:12:32,050
also fields but there is two other sub

193
00:12:25,540 --> 00:12:34,689
structure with one is<font color="#E5E5E5"> one time services</font>

194
00:12:32,050 --> 00:12:38,229
that provide<font color="#E5E5E5"> additional services</font>

195
00:12:34,690 --> 00:12:43,140
available even after<font color="#CCCCCC"> a</font><font color="#E5E5E5"> good time so</font><font color="#CCCCCC"> your</font>

196
00:12:38,230 --> 00:12:46,240
passing system can call them always and

197
00:12:43,140 --> 00:12:49,900
other kind of services<font color="#E5E5E5"> are good services</font>

198
00:12:46,240 --> 00:12:56,500
<font color="#E5E5E5">and they are only</font><font color="#CCCCCC"> available when</font><font color="#E5E5E5"> you</font>

199
00:12:49,900 --> 00:12:58,810
boot the<font color="#CCCCCC"> computer and when you</font><font color="#E5E5E5"> give give</font>

200
00:12:56,500 --> 00:13:05,440
<font color="#E5E5E5">an to the operating</font><font color="#CCCCCC"> system this service</font>

201
00:12:58,810 --> 00:13:08,800
are not<font color="#E5E5E5"> available anymore so some</font>

202
00:13:05,440 --> 00:13:13,530
example<font color="#E5E5E5"> of which provide provided here</font>

203
00:13:08,800 --> 00:13:13,530
<font color="#E5E5E5">there is memory allocation functions</font>

204
00:13:13,890 --> 00:13:21,610
<font color="#CCCCCC">there is a IP eyes to find the memory</font>

205
00:13:18,310 --> 00:13:23,949
map of your<font color="#E5E5E5"> hardware so it</font><font color="#CCCCCC"> might be</font>

206
00:13:21,610 --> 00:13:29,050
<font color="#E5E5E5">suggesting</font><font color="#CCCCCC"> it might</font><font color="#E5E5E5"> be useful if you</font>

207
00:13:23,950 --> 00:13:32,680
write an operating system as I said

208
00:13:29,050 --> 00:13:37,300
<font color="#E5E5E5">before there is a console and input</font>

209
00:13:32,680 --> 00:13:39,430
<font color="#E5E5E5">output console</font><font color="#CCCCCC"> online</font><font color="#E5E5E5"> you can get</font>

210
00:13:37,300 --> 00:13:42,069
<font color="#CCCCCC">filesystem are accessed it might be</font>

211
00:13:39,430 --> 00:13:46,660
useful<font color="#CCCCCC"> to find a</font><font color="#E5E5E5"> kernel for example in</font>

212
00:13:42,070 --> 00:13:48,520
<font color="#E5E5E5">partition and there is also some maybe</font>

213
00:13:46,660 --> 00:13:53,939
interesting features for<font color="#E5E5E5"> biometal</font>

214
00:13:48,520 --> 00:13:56,790
applications like graphic

215
00:13:53,939 --> 00:14:02,748
interface with<font color="#CCCCCC"> Marvin Mouse support or</font>

216
00:13:56,790 --> 00:14:02,748
even some<font color="#E5E5E5"> net came some network access</font>

217
00:14:03,559 --> 00:14:08,399
so it might give you<font color="#CCCCCC"> some ideas of the</font>

218
00:14:06,809 --> 00:14:10,110
<font color="#E5E5E5">possibilities it might depends on your</font>

219
00:14:08,399 --> 00:14:14,309
hardware<font color="#E5E5E5"> it might be more complicated</font>

220
00:14:10,110 --> 00:14:25,740
than<font color="#CCCCCC"> just calling</font><font color="#E5E5E5"> socket things but it</font>

221
00:14:14,309 --> 00:14:28,559
there is things here and now I will pick

222
00:14:25,740 --> 00:14:33,360
<font color="#E5E5E5">like I said earlier one important</font>

223
00:14:28,559 --> 00:14:39,029
concept<font color="#CCCCCC"> in the UEFI API is it's the</font>

224
00:14:33,360 --> 00:14:41,149
protocol<font color="#E5E5E5"> concept well if you want to</font>

225
00:14:39,029 --> 00:14:45,240
give overview it's more or less

226
00:14:41,149 --> 00:14:48,779
interfaces with a set of<font color="#E5E5E5"> related</font><font color="#CCCCCC"> methods</font>

227
00:14:45,240 --> 00:14:51,629
and field<font color="#E5E5E5"> so just a structure with</font>

228
00:14:48,779 --> 00:14:57,720
different fields and some our methods

229
00:14:51,629 --> 00:15:03,629
<font color="#E5E5E5">and</font><font color="#CCCCCC"> they are all identified with a</font>

230
00:14:57,720 --> 00:15:05,040
global unique ID and example of

231
00:15:03,629 --> 00:15:07,230
<font color="#E5E5E5">protocols you can find them in the</font>

232
00:15:05,040 --> 00:15:11,399
<font color="#E5E5E5">specification there is a simple text</font>

233
00:15:07,230 --> 00:15:15,740
output protocols this one under<font color="#E5E5E5"> control</font>

234
00:15:11,399 --> 00:15:18,720
<font color="#CCCCCC">unlink</font><font color="#E5E5E5"> so it's the same for input and</font>

235
00:15:15,740 --> 00:15:25,829
for example<font color="#CCCCCC"> for</font><font color="#E5E5E5"> graphic operation you</font>

236
00:15:18,720 --> 00:15:31,230
can use graphics output<font color="#E5E5E5"> protocol so it's</font>

237
00:15:25,829 --> 00:15:33,779
just a few<font color="#CCCCCC"> of them and there is some</font>

238
00:15:31,230 --> 00:15:37,889
<font color="#E5E5E5">more that our specified system position</font>

239
00:15:33,779 --> 00:15:41,720
but generally what you have to do is to

240
00:15:37,889 --> 00:15:45,629
find<font color="#E5E5E5"> the protocols before calling it so</font>

241
00:15:41,720 --> 00:15:51,319
there<font color="#E5E5E5"> is</font><font color="#CCCCCC"> api's to do that for example</font>

242
00:15:45,629 --> 00:15:55,139
you can find<font color="#E5E5E5"> protocols by unique IDs or</font>

243
00:15:51,319 --> 00:15:59,368
under and from the under for example you

244
00:15:55,139 --> 00:16:03,919
can check if<font color="#E5E5E5"> you're under support more</font>

245
00:15:59,369 --> 00:16:06,780
protocols so which method<font color="#E5E5E5"> under protocol</font>

246
00:16:03,919 --> 00:16:08,939
<font color="#E5E5E5">and you can check if</font>

247
00:16:06,780 --> 00:16:12,150
there is a support<font color="#CCCCCC"> for this</font><font color="#E5E5E5"> specific one</font>

248
00:16:08,940 --> 00:16:15,270
<font color="#CCCCCC">that you are looking for and there is</font>

249
00:16:12,150 --> 00:16:19,290
also another important<font color="#CCCCCC"> ApS</font><font color="#E5E5E5"> is located</font>

250
00:16:15,270 --> 00:16:23,490
protocol and<font color="#E5E5E5"> you've with this API you</font>

251
00:16:19,290 --> 00:16:25,829
can find and locate the<font color="#E5E5E5"> first under so</font>

252
00:16:23,490 --> 00:16:29,430
the<font color="#CCCCCC"> first reference to</font><font color="#E5E5E5"> the protocols</font>

253
00:16:25,830 --> 00:16:43,350
<font color="#E5E5E5">that implements your specify the unique</font>

254
00:16:29,430 --> 00:16:45,630
ID so a few programming<font color="#E5E5E5"> tips about UEFI</font>

255
00:16:43,350 --> 00:16:50,190
<font color="#E5E5E5">your programming there is a function</font>

256
00:16:45,630 --> 00:16:51,750
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it called exit boot services and if</font>

257
00:16:50,190 --> 00:16:53,400
you are making a<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> loader</font><font color="#E5E5E5"> it's</font>

258
00:16:51,750 --> 00:16:56,540
probably one of the last<font color="#CCCCCC"> function you</font>

259
00:16:53,400 --> 00:17:00,180
will call and because after that it will

260
00:16:56,540 --> 00:17:02,640
release all resources<font color="#E5E5E5"> used by your boot</font>

261
00:17:00,180 --> 00:17:04,379
loader<font color="#E5E5E5"> yeah that</font><font color="#CCCCCC"> may be you</font><font color="#E5E5E5"> have</font>

262
00:17:02,640 --> 00:17:06,569
<font color="#E5E5E5">allocated with the memory allocation</font>

263
00:17:04,380 --> 00:17:11,340
function and<font color="#CCCCCC"> things like that and then</font>

264
00:17:06,569 --> 00:17:14,099
you give<font color="#E5E5E5"> an to your operating system so</font>

265
00:17:11,339 --> 00:17:16,139
after that<font color="#CCCCCC"> you couldn't call</font><font color="#E5E5E5"> good</font>

266
00:17:14,099 --> 00:17:19,969
services<font color="#E5E5E5"> API anymore</font>

267
00:17:16,140 --> 00:17:24,600
you shouldn't probably<font color="#CCCCCC"> need will crash</font>

268
00:17:19,970 --> 00:17:26,940
<font color="#CCCCCC">and one other important things if</font>

269
00:17:24,599 --> 00:17:31,919
specially if you do<font color="#CCCCCC"> metal applications</font>

270
00:17:26,940 --> 00:17:34,530
is that<font color="#CCCCCC"> boot services by default is only</font>

271
00:17:31,920 --> 00:17:37,740
available for<font color="#E5E5E5"> their ways of timeouts for</font>

272
00:17:34,530 --> 00:17:40,560
<font color="#E5E5E5">about five minutes</font><font color="#CCCCCC"> so if you want</font><font color="#E5E5E5"> to</font>

273
00:17:37,740 --> 00:17:43,970
make<font color="#E5E5E5"> longer things you have to disable</font>

274
00:17:40,560 --> 00:17:50,700
<font color="#E5E5E5">the watchdog and maybe replace it with</font>

275
00:17:43,970 --> 00:17:54,180
<font color="#E5E5E5">none with no function so you have enough</font>

276
00:17:50,700 --> 00:17:56,810
time<font color="#E5E5E5"> to do your what you want to do with</font>

277
00:17:54,180 --> 00:17:56,810
<font color="#E5E5E5">UEFI</font>

278
00:17:59,520 --> 00:18:07,530
so<font color="#E5E5E5"> we'll all this</font><font color="#CCCCCC"> you're I think ready</font>

279
00:18:04,530 --> 00:18:11,550
to write your first<font color="#E5E5E5"> UEFI application</font>

280
00:18:07,530 --> 00:18:16,139
it's all you<font color="#E5E5E5"> need to know and so what</font>

281
00:18:11,550 --> 00:18:18,139
you need<font color="#E5E5E5"> is something</font><font color="#CCCCCC"> that is almost an</font>

282
00:18:16,140 --> 00:18:22,559
Windows compiler that<font color="#E5E5E5"> can generate</font>

283
00:18:18,140 --> 00:18:26,130
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> veena is something that lets you</font>

284
00:18:22,559 --> 00:18:29,928
define the<font color="#CCCCCC"> entry point with specified</font>

285
00:18:26,130 --> 00:18:34,440
requirements so if<font color="#E5E5E5"> efi your main</font>

286
00:18:29,929 --> 00:18:38,040
function<font color="#CCCCCC"> and</font><font color="#E5E5E5"> something that can respect</font>

287
00:18:34,440 --> 00:18:42,870
<font color="#E5E5E5">the</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> calling convention with all</font>

288
00:18:38,040 --> 00:18:46,340
that you can do your UEFI with<font color="#E5E5E5"> maybe any</font>

289
00:18:42,870 --> 00:18:46,340
language that<font color="#CCCCCC"> provides these services</font>

290
00:18:50,660 --> 00:19:00,120
but it's when I discover that<font color="#CCCCCC"> I think</font>

291
00:18:55,679 --> 00:19:03,120
<font color="#E5E5E5">about I think</font><font color="#CCCCCC"> about well my preferred</font>

292
00:19:00,120 --> 00:19:07,379
compiler<font color="#E5E5E5"> are all this feature so maybe I</font>

293
00:19:03,120 --> 00:19:10,439
could<font color="#CCCCCC"> try a kit and white UEFI be now is</font>

294
00:19:07,380 --> 00:19:18,240
me<font color="#CCCCCC"> my preferred compiler</font><font color="#E5E5E5"> and then scum</font>

295
00:19:10,440 --> 00:19:21,150
<font color="#E5E5E5">what I plan to do is to introducing</font>

296
00:19:18,240 --> 00:19:23,240
maybe what I think it's the easiest<font color="#E5E5E5"> way</font>

297
00:19:21,150 --> 00:19:28,110
to write UEFI application and

298
00:19:23,240 --> 00:19:36,260
surprisingly<font color="#E5E5E5"> it's with free Pascal why</font>

299
00:19:28,110 --> 00:19:36,260
this because instead<font color="#CCCCCC"> of spending times</font>

300
00:19:36,770 --> 00:19:46,230
<font color="#CCCCCC">writing in selling</font><font color="#E5E5E5"> G and the Tanaka</font>

301
00:19:42,500 --> 00:19:51,290
toolkit or<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like that I think it</font>

302
00:19:46,230 --> 00:19:52,950
was more simpler for<font color="#CCCCCC"> me at least</font><font color="#E5E5E5"> to just</font>

303
00:19:51,290 --> 00:19:55,230
tweak

304
00:19:52,950 --> 00:19:57,600
free<font color="#E5E5E5"> Pascal to generate you</font><font color="#CCCCCC"> fiv</font><font color="#E5E5E5"> now is</font>

305
00:19:55,230 --> 00:20:00,750
why<font color="#E5E5E5"> I think it was possible for just</font>

306
00:19:57,600 --> 00:20:03,510
software programmer and<font color="#CCCCCC"> applications</font><font color="#E5E5E5"> of</font>

307
00:20:00,750 --> 00:20:06,750
<font color="#CCCCCC">the programmer</font><font color="#E5E5E5"> it's because free Pascal</font>

308
00:20:03,510 --> 00:20:10,050
already have an internal<font color="#E5E5E5"> link for</font>

309
00:20:06,750 --> 00:20:13,260
<font color="#E5E5E5">Windows and an internal compiler so with</font>

310
00:20:10,050 --> 00:20:16,290
the linker<font color="#CCCCCC"> I shouldn't</font><font color="#E5E5E5"> have to</font>

311
00:20:13,260 --> 00:20:18,300
with LD version or thing<font color="#CCCCCC"> like that</font>

312
00:20:16,290 --> 00:20:25,379
everything should be<font color="#E5E5E5"> directly in my</font>

313
00:20:18,300 --> 00:20:28,620
<font color="#E5E5E5">preferred compiler so if there is no if</font>

314
00:20:25,380 --> 00:20:33,030
the tool<font color="#E5E5E5"> already have a linker there is</font>

315
00:20:28,620 --> 00:20:37,800
no<font color="#E5E5E5"> external dependencies</font><font color="#CCCCCC"> so it should be</font>

316
00:20:33,030 --> 00:20:42,270
really<font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> setup and one last thing</font>

317
00:20:37,800 --> 00:20:46,440
<font color="#E5E5E5">says maybe for me it was well equated</font>

318
00:20:42,270 --> 00:20:49,440
this<font color="#E5E5E5"> under</font><font color="#CCCCCC"> iku because under iku</font><font color="#E5E5E5"> with</font>

319
00:20:46,440 --> 00:20:53,400
<font color="#CCCCCC">Tanaka</font><font color="#E5E5E5"> would have mean to cross compile</font>

320
00:20:49,440 --> 00:20:57,840
or to<font color="#CCCCCC"> pause the world stack and probably</font>

321
00:20:53,400 --> 00:21:00,630
unknown OS from<font color="#E5E5E5"> channel</font><font color="#CCCCCC"> Co and</font><font color="#E5E5E5"> a huge</font>

322
00:20:57,840 --> 00:21:02,899
step on the contrary with free Pascal

323
00:21:00,630 --> 00:21:06,480
<font color="#CCCCCC">you already have it on iku so it's</font>

324
00:21:02,900 --> 00:21:09,630
easier to<font color="#E5E5E5"> start acting for me and I try</font>

325
00:21:06,480 --> 00:21:14,940
<font color="#E5E5E5">to do all my OB programming with iku so</font>

326
00:21:09,630 --> 00:21:17,550
I think<font color="#E5E5E5"> it would be simpler</font><font color="#CCCCCC"> but yeah</font>

327
00:21:14,940 --> 00:21:23,310
it's the that is<font color="#E5E5E5"> the plan but</font><font color="#CCCCCC"> is still</font>

328
00:21:17,550 --> 00:21:26,419
work in<font color="#CCCCCC"> progress so I can show you what</font>

329
00:21:23,310 --> 00:21:26,419
kind<font color="#E5E5E5"> of things I can do</font>

330
00:21:31,809 --> 00:21:36,279
so maybe you can't you<font color="#E5E5E5"> come</font><font color="#CCCCCC"> with</font>

331
00:21:34,389 --> 00:21:37,590
everything<font color="#E5E5E5"> but it's maybe on purpose</font><font color="#CCCCCC"> to</font>

332
00:21:36,279 --> 00:21:42,159
show<font color="#E5E5E5"> you the difference</font>

333
00:21:37,590 --> 00:21:44,799
so actually cheat a<font color="#E5E5E5"> little because for</font>

334
00:21:42,159 --> 00:21:48,159
free Pascal this is a<font color="#CCCCCC"> HelloWorld</font>

335
00:21:44,799 --> 00:21:54,158
application that you<font color="#CCCCCC"> can do with GNU</font>

336
00:21:48,159 --> 00:21:57,129
UEFI on the top and on the show<font color="#E5E5E5"> you the</font>

337
00:21:54,159 --> 00:21:58,840
white so it<font color="#E5E5E5"> is</font><font color="#CCCCCC"> for channel Co but shadow</font>

338
00:21:57,129 --> 00:22:01,718
Co there<font color="#E5E5E5"> is lots of comments that's why</font>

339
00:21:58,840 --> 00:22:04,059
it's<font color="#E5E5E5"> longer but but if you look at the</font>

340
00:22:01,719 --> 00:22:08,830
free<font color="#E5E5E5"> Pascal one and if you know a little</font>

341
00:22:04,059 --> 00:22:11,229
about free<font color="#E5E5E5"> Pascal well it's just</font><font color="#CCCCCC"> the</font>

342
00:22:08,830 --> 00:22:13,330
<font color="#CCCCCC">standout hello world application you</font>

343
00:22:11,229 --> 00:22:15,789
will do in Pascal<font color="#E5E5E5"> and this kind of</font>

344
00:22:13,330 --> 00:22:19,749
application<font color="#CCCCCC"> that</font><font color="#E5E5E5"> compiled</font><font color="#CCCCCC"> out-of-the-box</font>

345
00:22:15,789 --> 00:22:21,849
<font color="#E5E5E5">and one guy back here under UEFI so if</font>

346
00:22:19,749 --> 00:22:26,379
we have time<font color="#CCCCCC"> after the penetration maybe</font>

347
00:22:21,849 --> 00:22:32,979
I will give you start in show you<font color="#E5E5E5"> in the</font>

348
00:22:26,379 --> 00:22:36,218
virtual<font color="#E5E5E5"> machine so it's as I said it's</font>

349
00:22:32,979 --> 00:22:43,419
an early process but<font color="#E5E5E5"> it's already</font>

350
00:22:36,219 --> 00:22:48,279
compiled the UEFI binaries and what I

351
00:22:43,419 --> 00:22:52,229
plan<font color="#E5E5E5"> to do now is port the world and to</font>

352
00:22:48,279 --> 00:22:55,119
<font color="#E5E5E5">implement all</font><font color="#CCCCCC"> one-time language that is</font>

353
00:22:52,229 --> 00:22:57,609
with free Pascal so you can use you can

354
00:22:55,119 --> 00:23:04,029
<font color="#CCCCCC">develop</font><font color="#E5E5E5"> for example console application</font>

355
00:22:57,609 --> 00:23:08,589
in free Pascal and<font color="#E5E5E5"> just</font><font color="#CCCCCC"> run them</font><font color="#E5E5E5"> efi in</font>

356
00:23:04,029 --> 00:23:12,089
UEFI environment and maybe one thing

357
00:23:08,589 --> 00:23:15,399
that will<font color="#E5E5E5"> be weird would be to write</font>

358
00:23:12,089 --> 00:23:18,158
bindings for all<font color="#CCCCCC"> you fe fi protocols</font>

359
00:23:15,399 --> 00:23:20,908
<font color="#E5E5E5">what it means is</font><font color="#CCCCCC"> just to declare our</font>

360
00:23:18,159 --> 00:23:25,719
parameters on each functions and

361
00:23:20,909 --> 00:23:28,989
<font color="#CCCCCC">resistor and declare record with</font><font color="#E5E5E5"> all the</font>

362
00:23:25,719 --> 00:23:31,509
fields<font color="#CCCCCC"> necessary but it's a huge process</font>

363
00:23:28,989 --> 00:23:36,869
so any<font color="#E5E5E5"> help is welcome if you think that</font>

364
00:23:31,509 --> 00:23:40,659
kind of project<font color="#CCCCCC"> you should exist and</font>

365
00:23:36,869 --> 00:23:43,658
maybe one of fun things I like to do<font color="#CCCCCC"> who</font>

366
00:23:40,659 --> 00:23:44,410
with<font color="#CCCCCC"> one</font><font color="#E5E5E5"> time a full runtime library I</font>

367
00:23:43,659 --> 00:23:47,890
should be

368
00:23:44,410 --> 00:23:50,890
to compile the<font color="#E5E5E5"> free Pascal compiler it</font>

369
00:23:47,890 --> 00:23:53,800
just won't be<font color="#E5E5E5"> now is in and you as you</font>

370
00:23:50,890 --> 00:23:57,730
an UEFI application I<font color="#E5E5E5"> may be when it for</font>

371
00:23:53,800 --> 00:24:01,450
<font color="#E5E5E5">directly from the system so this is</font><font color="#CCCCCC"> one</font>

372
00:23:57,730 --> 00:24:04,330
<font color="#CCCCCC">of the funny thing I'd like</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do but it</font>

373
00:24:01,450 --> 00:24:08,200
<font color="#CCCCCC">maybe depends on your L because I only</font>

374
00:24:04,330 --> 00:24:10,960
spend maybe a few days per hour on this

375
00:24:08,200 --> 00:24:12,790
project<font color="#E5E5E5"> so it might take time so if me</font>

376
00:24:10,960 --> 00:24:20,610
help is welcome if<font color="#E5E5E5"> you think it's</font><font color="#CCCCCC"> why to</font>

377
00:24:12,790 --> 00:24:23,470
do so here is a couple<font color="#E5E5E5"> of links about</font>

378
00:24:20,610 --> 00:24:27,639
<font color="#CCCCCC">UEFI programming</font><font color="#E5E5E5"> just link so if you</font>

379
00:24:23,470 --> 00:24:32,380
want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> genu you fi your event</font>

380
00:24:27,640 --> 00:24:35,410
channel<font color="#CCCCCC"> Co there</font><font color="#E5E5E5"> with links and</font><font color="#CCCCCC"> just a</font>

381
00:24:32,380 --> 00:24:37,770
mention<font color="#CCCCCC"> for the first one is when I saw</font>

382
00:24:35,410 --> 00:24:43,020
this article<font color="#CCCCCC"> that I think it's about</font>

383
00:24:37,770 --> 00:24:46,060
doing<font color="#E5E5E5"> you if programming and</font><font color="#CCCCCC"> host</font><font color="#E5E5E5"> and</font>

384
00:24:43,020 --> 00:24:49,930
when I<font color="#CCCCCC"> read this article</font><font color="#E5E5E5"> I think well I</font>

385
00:24:46,060 --> 00:24:52,030
<font color="#CCCCCC">can do that with free</font><font color="#E5E5E5"> Pascal and it will</font>

386
00:24:49,930 --> 00:24:58,740
be<font color="#E5E5E5"> even simpler than what was explained</font>

387
00:24:52,030 --> 00:25:02,500
so just everything starts for<font color="#E5E5E5"> me so</font>

388
00:24:58,740 --> 00:25:04,390
happy you UEFI<font color="#CCCCCC"> aking I hope it was</font>

389
00:25:02,500 --> 00:25:19,650
interesting<font color="#E5E5E5"> for you and if you</font><font color="#CCCCCC"> have a</font>

390
00:25:04,390 --> 00:25:24,730
question so yeah for now<font color="#E5E5E5"> I only used</font>

391
00:25:19,650 --> 00:25:27,460
comes white white<font color="#E5E5E5"> output output console</font>

392
00:25:24,730 --> 00:25:30,870
and memory allocation<font color="#E5E5E5"> so maybe I can</font>

393
00:25:27,460 --> 00:25:30,870
start<font color="#E5E5E5"> just a sample</font>

394
00:25:34,390 --> 00:25:58,100
so here's the command<font color="#E5E5E5"> line to compile</font>

395
00:25:39,520 --> 00:26:00,050
you don't yes yeah yeah<font color="#E5E5E5"> yeah yeah forget</font>

396
00:25:58,100 --> 00:26:03,100
to repeat the question

397
00:26:00,050 --> 00:26:06,139
it was which<font color="#CCCCCC"> protocols were already</font>

398
00:26:03,100 --> 00:26:21,830
implemented<font color="#E5E5E5"> so there is the output</font>

399
00:26:06,140 --> 00:26:24,110
protocol<font color="#E5E5E5"> so</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> is a lot of</font><font color="#CCCCCC"> debugger</font>

400
00:26:21,830 --> 00:26:26,929
<font color="#CCCCCC">loops</font><font color="#E5E5E5"> but it's the output protocol and</font>

401
00:26:24,110 --> 00:26:29,030
there is some memory allocation

402
00:26:26,930 --> 00:26:30,770
functions that are<font color="#E5E5E5"> called so this was</font>

403
00:26:29,030 --> 00:26:32,570
necessary<font color="#CCCCCC"> for example</font><font color="#E5E5E5"> well if you want</font>

404
00:26:30,770 --> 00:26:40,139
<font color="#E5E5E5">to allocate the objects or thing</font><font color="#CCCCCC"> like</font>

405
00:26:32,570 --> 00:26:48,579
that<font color="#CCCCCC"> thank you</font>

406
00:26:40,140 --> 00:26:48,579
[Applause]

