1
00:00:04,650 --> 00:00:10,650
today's first<font color="#E5E5E5"> stop is</font><font color="#CCCCCC"> young tobias</font>

2
00:00:08,100 --> 00:00:13,678
<font color="#CCCCCC">Moberg and he will be</font><font color="#E5E5E5"> presenting</font><font color="#CCCCCC"> sank us</font>

3
00:00:10,650 --> 00:00:21,060
<font color="#CCCCCC">2.0 opus or stresses competing for the</font>

4
00:00:13,679 --> 00:00:24,270
IOT<font color="#E5E5E5"> so let's welcome him thank you</font><font color="#CCCCCC"> very</font>

5
00:00:21,060 --> 00:00:30,360
<font color="#E5E5E5">much everyone</font><font color="#CCCCCC"> good morning ladies and</font>

6
00:00:24,270 --> 00:00:43,440
<font color="#E5E5E5">gentlemen</font><font color="#CCCCCC"> so a couple of</font><font color="#E5E5E5"> things here</font>

7
00:00:30,360 --> 00:00:49,320
that<font color="#E5E5E5"> involved</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> computing okay I say</font>

8
00:00:43,440 --> 00:00:51,329
here computing I'll go through these

9
00:00:49,320 --> 00:00:54,149
things one by<font color="#CCCCCC"> another first</font><font color="#E5E5E5"> introduce</font>

10
00:00:51,329 --> 00:00:55,409
the<font color="#CCCCCC"> basic concepts of what we understand</font>

11
00:00:54,149 --> 00:01:00,719
and the<font color="#E5E5E5"> trust is computing and how</font><font color="#CCCCCC"> you</font>

12
00:00:55,409 --> 00:01:02,789
can<font color="#E5E5E5"> use that</font><font color="#CCCCCC"> I want to make sure that we</font>

13
00:01:00,719 --> 00:01:04,050
understand<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is a talk about an</font>

14
00:01:02,789 --> 00:01:06,270
<font color="#E5E5E5">open source trust a computing platform</font>

15
00:01:04,050 --> 00:01:07,500
<font color="#CCCCCC">as far as I know one of the only</font><font color="#E5E5E5"> open</font>

16
00:01:06,270 --> 00:01:08,460
<font color="#E5E5E5">source trusted computing platforms</font>

17
00:01:07,500 --> 00:01:11,340
<font color="#CCCCCC">available at the moment</font>

18
00:01:08,460 --> 00:01:14,369
and<font color="#E5E5E5"> that this is mostly about embedded</font>

19
00:01:11,340 --> 00:01:15,990
<font color="#CCCCCC">security so we're</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> looking into</font><font color="#E5E5E5"> DRM</font>

20
00:01:14,370 --> 00:01:17,940
for desktop systems or something<font color="#E5E5E5"> like</font>

21
00:01:15,990 --> 00:01:21,089
<font color="#CCCCCC">that this</font><font color="#E5E5E5"> is specifically a security</font>

22
00:01:17,940 --> 00:01:23,130
mechanism<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> embedded world</font><font color="#CCCCCC"> but you</font>

23
00:01:21,090 --> 00:01:24,870
know this is kind of the<font color="#E5E5E5"> first talk of a</font>

24
00:01:23,130 --> 00:01:28,380
security session so I want to talk<font color="#CCCCCC"> a</font>

25
00:01:24,870 --> 00:01:30,600
<font color="#E5E5E5">little bit about what what security</font><font color="#CCCCCC"> is</font>

26
00:01:28,380 --> 00:01:32,460
<font color="#E5E5E5">how security normally works and what you</font>

27
00:01:30,600 --> 00:01:34,919
have<font color="#CCCCCC"> to do to actually get a system</font>

28
00:01:32,460 --> 00:01:37,229
<font color="#E5E5E5">somewhat secure and you see there are a</font>

29
00:01:34,920 --> 00:01:38,610
couple of different<font color="#CCCCCC"> systems on the right</font>

30
00:01:37,230 --> 00:01:40,590
side<font color="#E5E5E5"> have to make sure</font><font color="#CCCCCC"> that I'm speaking</font>

31
00:01:38,610 --> 00:01:42,900
<font color="#CCCCCC">like that there</font><font color="#E5E5E5"> are a couple of</font>

32
00:01:40,590 --> 00:01:44,400
different<font color="#CCCCCC"> systems on the right side of</font>

33
00:01:42,900 --> 00:01:48,810
that slide<font color="#CCCCCC"> that</font><font color="#E5E5E5"> obviously have very</font>

34
00:01:44,400 --> 00:01:51,360
<font color="#E5E5E5">different requirement very different use</font>

35
00:01:48,810 --> 00:01:54,780
cases very different security properties

36
00:01:51,360 --> 00:01:56,940
as well and I think<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very important</font>

37
00:01:54,780 --> 00:02:00,630
that<font color="#E5E5E5"> when we talk</font><font color="#CCCCCC"> about security</font><font color="#E5E5E5"> when we</font>

38
00:01:56,940 --> 00:02:02,370
design<font color="#E5E5E5"> security solutions that we don't</font>

39
00:02:00,630 --> 00:02:04,289
just<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know talk about</font><font color="#E5E5E5"> the features of</font>

40
00:02:02,370 --> 00:02:07,170
specific systems but<font color="#E5E5E5"> that we know</font>

41
00:02:04,290 --> 00:02:09,149
exactly what system we have how that

42
00:02:07,170 --> 00:02:12,030
system<font color="#CCCCCC"> is supposed to work in a specific</font>

43
00:02:09,149 --> 00:02:15,130
context what users do with it how they

44
00:02:12,030 --> 00:02:17,230
interact<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> system</font>

45
00:02:15,130 --> 00:02:19,120
we then<font color="#E5E5E5"> talk about what security</font>

46
00:02:17,230 --> 00:02:24,340
<font color="#E5E5E5">properties we need for this kind of</font>

47
00:02:19,120 --> 00:02:26,560
system that<font color="#E5E5E5"> we understand how security</font>

48
00:02:24,340 --> 00:02:28,360
can possibly be implemented and<font color="#E5E5E5"> what</font>

49
00:02:26,560 --> 00:02:29,860
<font color="#CCCCCC">requirements have to be</font><font color="#E5E5E5"> satisfied</font><font color="#CCCCCC"> by</font>

50
00:02:28,360 --> 00:02:32,950
this implementation<font color="#E5E5E5"> it is I think</font><font color="#CCCCCC"> very</font>

51
00:02:29,860 --> 00:02:34,690
important that we understand that<font color="#E5E5E5"> these</font>

52
00:02:32,950 --> 00:02:36,640
security requirements they are not

53
00:02:34,690 --> 00:02:38,829
features of the systems they<font color="#CCCCCC"> are</font><font color="#E5E5E5"> what we</font>

54
00:02:36,640 --> 00:02:41,679
desire they are what<font color="#CCCCCC"> they're verifying</font>

55
00:02:38,830 --> 00:02:43,540
<font color="#E5E5E5">where we want to be and based on this we</font>

56
00:02:41,680 --> 00:02:45,490
<font color="#CCCCCC">then</font><font color="#E5E5E5"> kind of choose technology to</font>

57
00:02:43,540 --> 00:02:47,940
implement<font color="#E5E5E5"> specific things but we can</font>

58
00:02:45,490 --> 00:02:52,210
<font color="#CCCCCC">only</font><font color="#E5E5E5"> choose these specific technologies</font>

59
00:02:47,940 --> 00:02:54,579
once we know what<font color="#E5E5E5"> kind of attacker we</font>

60
00:02:52,210 --> 00:02:56,860
are supposed<font color="#E5E5E5"> to deal with</font><font color="#CCCCCC"> if we are</font>

61
00:02:54,580 --> 00:03:02,590
<font color="#E5E5E5">working for</font><font color="#CCCCCC"> a system that is like you</font>

62
00:02:56,860 --> 00:03:04,690
know a smart fridge<font color="#E5E5E5"> in a person from</font>

63
00:03:02,590 --> 00:03:06,670
<font color="#E5E5E5">premise and and we want</font><font color="#CCCCCC"> to understand</font>

64
00:03:04,690 --> 00:03:08,260
what attackers would potentially do with

65
00:03:06,670 --> 00:03:09,549
this<font color="#CCCCCC"> system how they</font><font color="#E5E5E5"> would interact</font><font color="#CCCCCC"> with</font>

66
00:03:08,260 --> 00:03:11,859
<font color="#E5E5E5">the system what they could potentially</font>

67
00:03:09,550 --> 00:03:14,050
<font color="#CCCCCC">achieve by</font><font color="#E5E5E5"> abusing the system in one way</font>

68
00:03:11,860 --> 00:03:15,880
<font color="#CCCCCC">or another and</font><font color="#E5E5E5"> obviously that is</font>

69
00:03:14,050 --> 00:03:17,860
<font color="#E5E5E5">completely different from what you have</font>

70
00:03:15,880 --> 00:03:20,320
when you look<font color="#E5E5E5"> into a banking</font><font color="#CCCCCC"> website or</font>

71
00:03:17,860 --> 00:03:21,790
into<font color="#E5E5E5"> one of these little smart card</font>

72
00:03:20,320 --> 00:03:23,560
readers<font color="#E5E5E5"> for authenticating with a</font>

73
00:03:21,790 --> 00:03:26,440
banking website<font color="#CCCCCC"> or what you have</font><font color="#E5E5E5"> when</font>

74
00:03:23,560 --> 00:03:28,180
you talk about<font color="#E5E5E5"> smart cars or safety</font>

75
00:03:26,440 --> 00:03:31,150
<font color="#E5E5E5">critical infrastructure like medical</font>

76
00:03:28,180 --> 00:03:33,040
devices<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the smart grid</font><font color="#E5E5E5"> in all these</font>

77
00:03:31,150 --> 00:03:38,080
contexts we have very very<font color="#CCCCCC"> different</font>

78
00:03:33,040 --> 00:03:41,290
requirements to deal with so talking

79
00:03:38,080 --> 00:03:43,840
about requirements<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about system</font>

80
00:03:41,290 --> 00:03:46,989
models and attacker models<font color="#E5E5E5"> also means</font>

81
00:03:43,840 --> 00:03:50,320
that<font color="#E5E5E5"> we kind of have to deal</font><font color="#CCCCCC"> with how</font>

82
00:03:46,990 --> 00:03:53,140
attacks<font color="#E5E5E5"> evolve over time so this</font><font color="#CCCCCC"> is a</font>

83
00:03:50,320 --> 00:03:56,049
very interesting<font color="#E5E5E5"> xkcd post that shows us</font>

84
00:03:53,140 --> 00:03:59,440
or<font color="#E5E5E5"> that kind of tries to explain how</font>

85
00:03:56,050 --> 00:04:01,030
certain<font color="#E5E5E5"> low-level attacks</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> CPU</font>

86
00:03:59,440 --> 00:04:02,740
architectures<font color="#CCCCCC"> the memory architectures</font>

87
00:04:01,030 --> 00:04:05,230
work so we've all heard about<font color="#CCCCCC"> spectra</font>

88
00:04:02,740 --> 00:04:07,840
<font color="#E5E5E5">and we've all heard about</font><font color="#CCCCCC"> Milltown row</font>

89
00:04:05,230 --> 00:04:09,910
<font color="#E5E5E5">hammer came</font><font color="#CCCCCC"> a few</font><font color="#E5E5E5"> years before and all</font>

90
00:04:07,840 --> 00:04:12,550
<font color="#E5E5E5">of these attacks as</font><font color="#CCCCCC"> they come</font><font color="#E5E5E5"> along they</font>

91
00:04:09,910 --> 00:04:15,490
change<font color="#E5E5E5"> our understanding of systems very</font>

92
00:04:12,550 --> 00:04:17,680
much and if someone tells<font color="#E5E5E5"> us there is</font>

93
00:04:15,490 --> 00:04:21,220
<font color="#E5E5E5">new zero day vulnerability someone tells</font>

94
00:04:17,680 --> 00:04:22,660
us<font color="#E5E5E5"> that oh well actually cloud centers</font>

95
00:04:21,220 --> 00:04:24,530
and and data centers and whatever

96
00:04:22,660 --> 00:04:26,570
<font color="#E5E5E5">actually also vulnerable</font>

97
00:04:24,530 --> 00:04:29,330
<font color="#E5E5E5">two real hammers</font><font color="#CCCCCC"> not just two row hammer</font>

98
00:04:26,570 --> 00:04:31,550
<font color="#E5E5E5">attacks then we have to rethink</font><font color="#CCCCCC"> about</font>

99
00:04:29,330 --> 00:04:33,590
these<font color="#E5E5E5"> models we have to reconsider our</font>

100
00:04:31,550 --> 00:04:36,080
design choices<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> to reconsider our</font>

101
00:04:33,590 --> 00:04:40,520
<font color="#E5E5E5">attack</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> models and understand how we</font>

102
00:04:36,080 --> 00:04:42,229
<font color="#E5E5E5">can adapt a security mechanisms that we</font>

103
00:04:40,520 --> 00:04:44,359
adopted for our systems<font color="#E5E5E5"> that we are</font>

104
00:04:42,230 --> 00:04:45,919
using to<font color="#E5E5E5"> actually deal with</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> new</font>

105
00:04:44,360 --> 00:04:47,990
<font color="#E5E5E5">things or maybe change</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> completely</font>

106
00:04:45,919 --> 00:04:50,150
<font color="#E5E5E5">different mechanisms and that's</font>

107
00:04:47,990 --> 00:04:56,080
<font color="#E5E5E5">something very important and that's why</font>

108
00:04:50,150 --> 00:04:58,520
we<font color="#E5E5E5"> kind of have to rely upon</font><font color="#CCCCCC"> open source</font>

109
00:04:56,080 --> 00:05:00,440
mechanisms to implement security<font color="#CCCCCC"> because</font>

110
00:04:58,520 --> 00:05:02,690
I believe that<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is one of the only</font>

111
00:05:00,440 --> 00:05:04,940
<font color="#E5E5E5">opportunities for us to understand how</font>

112
00:05:02,690 --> 00:05:07,130
<font color="#CCCCCC">these</font><font color="#E5E5E5"> mechanisms work what the exact</font>

113
00:05:04,940 --> 00:05:10,250
security guarantees are and how we can

114
00:05:07,130 --> 00:05:13,040
<font color="#CCCCCC">kind of use them in a well-defined way</font>

115
00:05:10,250 --> 00:05:14,780
to achieve something<font color="#E5E5E5"> rather than just</font>

116
00:05:13,040 --> 00:05:17,150
putting layers<font color="#E5E5E5"> and layers of complexity</font>

117
00:05:14,780 --> 00:05:19,299
<font color="#E5E5E5">on top of each other without actually</font>

118
00:05:17,150 --> 00:05:23,960
fixing the holes that might<font color="#E5E5E5"> be in in</font>

119
00:05:19,300 --> 00:05:26,090
system somewhere so<font color="#E5E5E5"> the fourth point</font>

120
00:05:23,960 --> 00:05:28,969
here<font color="#E5E5E5"> on my list of what</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> to do</font>

121
00:05:26,090 --> 00:05:32,929
to get<font color="#E5E5E5"> security right is to embrace</font>

122
00:05:28,970 --> 00:05:36,430
<font color="#CCCCCC">change to understand how attacks evolve</font>

123
00:05:32,930 --> 00:05:38,870
how systems<font color="#E5E5E5"> evolve and to be able to</font>

124
00:05:36,430 --> 00:05:41,090
<font color="#E5E5E5">adapt your system</font><font color="#CCCCCC"> into your security</font>

125
00:05:38,870 --> 00:05:44,350
methodology your<font color="#E5E5E5"> security approach to</font>

126
00:05:41,090 --> 00:05:46,849
these changes in<font color="#CCCCCC"> attacker</font><font color="#E5E5E5"> models in</font>

127
00:05:44,350 --> 00:05:48,440
vulnerabilities in technology<font color="#CCCCCC"> that</font>

128
00:05:46,850 --> 00:05:52,100
emerges and that might allow you to

129
00:05:48,440 --> 00:05:53,930
implement<font color="#E5E5E5"> better stuff and I think</font>

130
00:05:52,100 --> 00:05:56,030
that's the point that<font color="#E5E5E5"> makes it important</font>

131
00:05:53,930 --> 00:05:58,340
to think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> security requirements not</font>

132
00:05:56,030 --> 00:06:00,080
<font color="#E5E5E5">as features but as requirements because</font>

133
00:05:58,340 --> 00:06:01,969
only that allows you to<font color="#CCCCCC"> actually then</font>

134
00:06:00,080 --> 00:06:04,039
seek for a better technology choose a

135
00:06:01,970 --> 00:06:06,050
better technology<font color="#CCCCCC"> to implement security</font>

136
00:06:04,039 --> 00:06:09,430
in your system<font color="#E5E5E5"> so I think that's the</font>

137
00:06:06,050 --> 00:06:12,350
basic introduction<font color="#CCCCCC"> first is</font><font color="#E5E5E5"> computing</font>

138
00:06:09,430 --> 00:06:13,940
yeah well<font color="#CCCCCC"> the treacherous computing I</font>

139
00:06:12,350 --> 00:06:15,590
was<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> thinking about</font><font color="#E5E5E5"> putting</font><font color="#CCCCCC"> one</font>

140
00:06:13,940 --> 00:06:17,719
<font color="#E5E5E5">of these</font><font color="#CCCCCC"> treacherous</font><font color="#E5E5E5"> computing stickers</font>

141
00:06:15,590 --> 00:06:19,580
on<font color="#E5E5E5"> my laptop before giving a trusted</font>

142
00:06:17,720 --> 00:06:22,490
computing talk at<font color="#CCCCCC"> first term</font><font color="#E5E5E5"> just to get</font>

143
00:06:19,580 --> 00:06:25,940
some plausible deniability for<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> you</font>

144
00:06:22,490 --> 00:06:27,440
know what<font color="#E5E5E5"> so computing according to the</font>

145
00:06:25,940 --> 00:06:30,169
<font color="#E5E5E5">first computing group we</font><font color="#CCCCCC"> talk about</font>

146
00:06:27,440 --> 00:06:33,860
protecting computations at endpoints

147
00:06:30,169 --> 00:06:37,190
protecting data endpoints<font color="#E5E5E5"> using Hardware</font>

148
00:06:33,860 --> 00:06:39,710
extensions<font color="#CCCCCC"> to enforce specific behavior</font>

149
00:06:37,190 --> 00:06:41,120
and well that's<font color="#E5E5E5"> also where it can easily</font>

150
00:06:39,710 --> 00:06:43,460
<font color="#E5E5E5">go bad and that's what I'm in</font><font color="#CCCCCC"> my next</font>

151
00:06:41,120 --> 00:06:45,110
<font color="#E5E5E5">slide is but for now these are kind of</font>

152
00:06:43,460 --> 00:06:46,370
<font color="#E5E5E5">the things you normally have in a</font>

153
00:06:45,110 --> 00:06:49,180
trusted<font color="#E5E5E5"> computing system there are</font>

154
00:06:46,370 --> 00:06:51,800
endorsement keys that<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use to</font>

155
00:06:49,180 --> 00:06:54,050
that<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are kind of hard faith into</font>

156
00:06:51,800 --> 00:06:56,270
your system<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can use to bind</font>

157
00:06:54,050 --> 00:06:58,010
specific<font color="#CCCCCC"> software components or specific</font>

158
00:06:56,270 --> 00:07:00,770
hardware components to a user by using

159
00:06:58,010 --> 00:07:02,960
<font color="#CCCCCC">certificates and</font><font color="#E5E5E5"> you can then use these</font>

160
00:07:00,770 --> 00:07:05,060
these public keys and private key

161
00:07:02,960 --> 00:07:07,640
cryptography there to authenticate these

162
00:07:05,060 --> 00:07:09,740
systems to a third remote party that

163
00:07:07,640 --> 00:07:12,200
kind<font color="#E5E5E5"> of breaks your ideas of anonymity</font>

164
00:07:09,740 --> 00:07:15,410
on the web pretty much so we have this

165
00:07:12,200 --> 00:07:18,560
<font color="#E5E5E5">concept of a trusted third party that</font>

166
00:07:15,410 --> 00:07:21,080
<font color="#E5E5E5">can act as a mediator to kind of</font>

167
00:07:18,560 --> 00:07:22,430
implement<font color="#E5E5E5"> anonymity on top of it but of</font>

168
00:07:21,080 --> 00:07:24,560
course<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to trust it there's no</font>

169
00:07:22,430 --> 00:07:26,810
way around this<font color="#E5E5E5"> in these settings</font><font color="#CCCCCC"> the</font>

170
00:07:24,560 --> 00:07:28,880
<font color="#CCCCCC">interesting things that</font><font color="#E5E5E5"> we mostly work</font>

171
00:07:26,810 --> 00:07:30,530
<font color="#E5E5E5">with</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> waters in the middle there</font><font color="#CCCCCC"> so</font>

172
00:07:28,880 --> 00:07:32,390
this kind of memory curtaining that

173
00:07:30,530 --> 00:07:34,549
gives you guarantee<font color="#CCCCCC"> that</font><font color="#E5E5E5"> for example a</font>

174
00:07:32,390 --> 00:07:36,650
<font color="#CCCCCC">specific piece of</font><font color="#E5E5E5"> data can only be</font>

175
00:07:34,550 --> 00:07:38,720
accessed by<font color="#CCCCCC"> a specific piece of</font><font color="#E5E5E5"> software</font>

176
00:07:36,650 --> 00:07:40,429
<font color="#CCCCCC">that the software</font><font color="#E5E5E5"> cannot be interfered</font>

177
00:07:38,720 --> 00:07:42,620
with<font color="#E5E5E5"> as we also have remote attestation</font>

178
00:07:40,430 --> 00:07:43,850
that is a process<font color="#CCCCCC"> that I'll</font><font color="#E5E5E5"> try to</font>

179
00:07:42,620 --> 00:07:47,540
explain<font color="#E5E5E5"> or the next</font><font color="#CCCCCC"> couple of slides</font>

180
00:07:43,850 --> 00:07:50,210
<font color="#CCCCCC">that allows a remote party to actually</font>

181
00:07:47,540 --> 00:07:52,970
<font color="#E5E5E5">attest that</font><font color="#CCCCCC"> a piece</font><font color="#E5E5E5"> of software as</font><font color="#CCCCCC"> it</font>

182
00:07:50,210 --> 00:07:54,710
executes<font color="#E5E5E5"> is in a state</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can</font>

183
00:07:52,970 --> 00:07:58,550
<font color="#CCCCCC">actually trust it</font><font color="#E5E5E5"> and that's kind of the</font>

184
00:07:54,710 --> 00:08:00,409
<font color="#CCCCCC">building</font><font color="#E5E5E5"> blocks that we</font><font color="#CCCCCC"> talk about</font><font color="#E5E5E5"> in in</font>

185
00:07:58,550 --> 00:08:02,000
<font color="#CCCCCC">practice there is a whole</font><font color="#E5E5E5"> range of</font>

186
00:08:00,410 --> 00:08:03,860
<font color="#E5E5E5">different architectures around already</font>

187
00:08:02,000 --> 00:08:06,290
<font color="#E5E5E5">if you think about Intel CPUs</font><font color="#CCCCCC"> that</font>

188
00:08:03,860 --> 00:08:08,660
implement the<font color="#CCCCCC"> sjx technology or arm that</font>

189
00:08:06,290 --> 00:08:10,400
implements<font color="#CCCCCC"> trust</font><font color="#E5E5E5"> zone or</font><font color="#CCCCCC"> trust</font><font color="#E5E5E5"> platform</font>

190
00:08:08,660 --> 00:08:12,770
modules which is what the next<font color="#CCCCCC"> talk on</font>

191
00:08:10,400 --> 00:08:14,210
this stage is<font color="#E5E5E5"> going to be about they all</font>

192
00:08:12,770 --> 00:08:15,770
have different<font color="#CCCCCC"> features they all</font>

193
00:08:14,210 --> 00:08:18,229
implement<font color="#CCCCCC"> the different</font><font color="#E5E5E5"> subsets at</font>

194
00:08:15,770 --> 00:08:21,349
different extensions to these basic

195
00:08:18,230 --> 00:08:22,910
primitives here<font color="#E5E5E5"> so it matters a lot</font>

196
00:08:21,350 --> 00:08:24,980
which one you choose and that<font color="#E5E5E5"> you</font>

197
00:08:22,910 --> 00:08:28,070
understand<font color="#E5E5E5"> exactly what guarantees you</font>

198
00:08:24,980 --> 00:08:30,230
get out<font color="#E5E5E5"> of this if you then look</font><font color="#CCCCCC"> into</font>

199
00:08:28,070 --> 00:08:31,880
<font color="#E5E5E5">the Wikipedia</font><font color="#CCCCCC"> article about what</font><font color="#E5E5E5"> you can</font>

200
00:08:30,230 --> 00:08:34,280
potentially<font color="#E5E5E5"> do with trusted computing</font>

201
00:08:31,880 --> 00:08:36,110
you find this kind of stuff<font color="#CCCCCC"> and I think</font>

202
00:08:34,280 --> 00:08:37,838
most of us you will agree that<font color="#E5E5E5"> that's</font>

203
00:08:36,110 --> 00:08:41,120
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> not what we are</font><font color="#CCCCCC"> interested in</font>

204
00:08:37,839 --> 00:08:43,820
what we<font color="#E5E5E5"> were always wondering is that is</font>

205
00:08:41,120 --> 00:08:46,280
can<font color="#E5E5E5"> you use these kind of primitives</font><font color="#CCCCCC"> to</font>

206
00:08:43,820 --> 00:08:49,010
do something that really matters<font color="#CCCCCC"> not</font>

207
00:08:46,280 --> 00:08:50,850
protect computer games or or to<font color="#E5E5E5"> do tear</font>

208
00:08:49,010 --> 00:08:53,040
em but protect for example trade

209
00:08:50,850 --> 00:08:55,529
infrastructure<font color="#CCCCCC"> can we use this to get</font>

210
00:08:53,040 --> 00:08:57,509
some<font color="#E5E5E5"> security guarantees about medical</font>

211
00:08:55,529 --> 00:08:59,910
devices<font color="#E5E5E5"> about automotive computing which</font>

212
00:08:57,509 --> 00:09:01,769
<font color="#CCCCCC">is one example I'll show later</font><font color="#E5E5E5"> or about</font>

213
00:08:59,910 --> 00:09:04,139
for example<font color="#CCCCCC"> the</font><font color="#E5E5E5"> smart grid and and</font>

214
00:09:01,769 --> 00:09:06,060
guarantee<font color="#E5E5E5"> that it's very hard to app use</font>

215
00:09:04,139 --> 00:09:08,399
this infrastructure<font color="#E5E5E5"> by an attacker for</font>

216
00:09:06,060 --> 00:09:12,420
<font color="#CCCCCC">example take down an</font><font color="#E5E5E5"> entire country in a</font>

217
00:09:08,399 --> 00:09:14,220
snap second so it's the treacherous

218
00:09:12,420 --> 00:09:16,800
computing approach by Richard Stallman<font color="#E5E5E5"> I</font>

219
00:09:14,220 --> 00:09:20,250
<font color="#E5E5E5">have a couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> sentences from one of</font>

220
00:09:16,800 --> 00:09:25,229
his<font color="#E5E5E5"> papers copied here this is</font>

221
00:09:20,250 --> 00:09:27,149
particularly interesting<font color="#CCCCCC"> if you see the</font>

222
00:09:25,230 --> 00:09:29,850
idea<font color="#E5E5E5"> of</font><font color="#CCCCCC"> trusted computing</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the light</font>

223
00:09:27,149 --> 00:09:31,860
of<font color="#CCCCCC"> recent</font><font color="#E5E5E5"> vulnerabilities in hardware</font>

224
00:09:29,850 --> 00:09:33,839
and<font color="#CCCCCC"> software we have seen so I think</font>

225
00:09:31,860 --> 00:09:35,880
<font color="#E5E5E5">it's very important to understand that</font>

226
00:09:33,839 --> 00:09:39,269
<font color="#CCCCCC">Trust computing technology as we have</font>

227
00:09:35,880 --> 00:09:41,579
<font color="#E5E5E5">today</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> not help you against</font>

228
00:09:39,269 --> 00:09:43,170
vulnerabilities in the trusted<font color="#CCCCCC"> software</font>

229
00:09:41,579 --> 00:09:46,138
you actually deploy<font color="#E5E5E5"> it will never help</font>

230
00:09:43,170 --> 00:09:48,779
you against<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it just makes</font><font color="#E5E5E5"> it harder</font>

231
00:09:46,139 --> 00:09:50,490
<font color="#CCCCCC">to kind of inspect</font><font color="#E5E5E5"> these specific</font>

232
00:09:48,779 --> 00:09:51,930
vulnerabilities to understand what

233
00:09:50,490 --> 00:09:53,639
<font color="#E5E5E5">you're deploying especially if you're on</font>

234
00:09:51,930 --> 00:09:58,079
a<font color="#CCCCCC"> platform</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> deployed that</font><font color="#E5E5E5"> that</font>

235
00:09:53,639 --> 00:10:01,860
supports encrypted deployment of code

236
00:09:58,079 --> 00:10:03,329
and things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that so it also doesn't</font>

237
00:10:01,860 --> 00:10:05,189
protect you against all kinds of<font color="#E5E5E5"> side</font>

238
00:10:03,329 --> 00:10:06,810
<font color="#E5E5E5">channel vulnerabilities these are</font>

239
00:10:05,189 --> 00:10:08,699
specifically<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of scope for</font><font color="#E5E5E5"> many</font>

240
00:10:06,810 --> 00:10:10,518
trusted computing architectures<font color="#E5E5E5"> in the</font>

241
00:10:08,699 --> 00:10:12,870
<font color="#E5E5E5">documentation in the specification and</font>

242
00:10:10,519 --> 00:10:15,269
again<font color="#E5E5E5"> you have to gain</font><font color="#CCCCCC"> some</font>

243
00:10:12,870 --> 00:10:17,339
<font color="#CCCCCC">understanding about these</font><font color="#E5E5E5"> properties to</font>

244
00:10:15,269 --> 00:10:19,439
<font color="#E5E5E5">understand what kind of attack as you</font>

245
00:10:17,339 --> 00:10:22,019
can protect against is<font color="#E5E5E5"> that in an</font>

246
00:10:19,439 --> 00:10:23,579
attacker<font color="#E5E5E5"> that just download some hack</font>

247
00:10:22,019 --> 00:10:24,689
from<font color="#CCCCCC"> a</font><font color="#E5E5E5"> website or are you trying to</font>

248
00:10:23,579 --> 00:10:26,758
<font color="#E5E5E5">protect against the governmental</font>

249
00:10:24,689 --> 00:10:28,560
<font color="#E5E5E5">institution that has really strong</font>

250
00:10:26,759 --> 00:10:30,689
abilities in research<font color="#CCCCCC"> in reverse</font>

251
00:10:28,560 --> 00:10:34,170
engineer<font color="#CCCCCC"> your architectures your designs</font>

252
00:10:30,689 --> 00:10:36,240
<font color="#E5E5E5">and use that to type try to harm your</font>

253
00:10:34,170 --> 00:10:40,019
critical infrastructure<font color="#E5E5E5"> very different</font>

254
00:10:36,240 --> 00:10:42,240
approaches<font color="#CCCCCC"> here</font><font color="#E5E5E5"> so what can</font><font color="#CCCCCC"> I use full</font>

255
00:10:40,019 --> 00:10:45,509
stuff can we do with trusted computing

256
00:10:42,240 --> 00:10:47,339
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> where it all gets interesting</font><font color="#E5E5E5"> to</font>

257
00:10:45,509 --> 00:10:49,230
do useful stuff and you first want<font color="#E5E5E5"> to</font>

258
00:10:47,339 --> 00:10:50,759
make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you use these kind of</font>

259
00:10:49,230 --> 00:10:54,420
primitives<font color="#E5E5E5"> in a way that is</font>

260
00:10:50,759 --> 00:10:57,060
<font color="#CCCCCC">understandable for the developers for</font>

261
00:10:54,420 --> 00:10:59,099
the entities that<font color="#E5E5E5"> deploy software that</font>

262
00:10:57,060 --> 00:11:01,599
is kind of<font color="#CCCCCC"> non-invasive from a privacy</font>

263
00:10:59,100 --> 00:11:05,200
<font color="#E5E5E5">perspective that actually makes sense</font>

264
00:11:01,600 --> 00:11:08,680
and aims<font color="#E5E5E5"> to provide measurable security</font>

265
00:11:05,200 --> 00:11:10,570
<font color="#E5E5E5">for systems that matter and I think in</font>

266
00:11:08,680 --> 00:11:13,270
<font color="#CCCCCC">the samples work which goes on since</font>

267
00:11:10,570 --> 00:11:16,230
2012<font color="#E5E5E5"> already we've been trying to follow</font>

268
00:11:13,270 --> 00:11:19,540
<font color="#E5E5E5">a couple of lines here</font><font color="#CCCCCC"> that aim for</font>

269
00:11:16,230 --> 00:11:21,190
<font color="#E5E5E5">enabling users</font><font color="#CCCCCC"> to use this technology to</font>

270
00:11:19,540 --> 00:11:24,400
<font color="#E5E5E5">understand this technology rather than</font>

271
00:11:21,190 --> 00:11:27,190
restricting them and to<font color="#E5E5E5"> build upon</font><font color="#CCCCCC"> well</font>

272
00:11:24,400 --> 00:11:29,650
understood<font color="#CCCCCC"> open source components</font><font color="#E5E5E5"> like</font>

273
00:11:27,190 --> 00:11:34,000
compiler technology<font color="#E5E5E5"> from LVM</font><font color="#CCCCCC"> and an</font>

274
00:11:29,650 --> 00:11:36,610
<font color="#CCCCCC">open-source microcontroller</font><font color="#E5E5E5"> design and</font>

275
00:11:34,000 --> 00:11:39,580
stick these things together<font color="#E5E5E5"> extend them</font>

276
00:11:36,610 --> 00:11:41,340
<font color="#E5E5E5">to actually build an open-source trusted</font>

277
00:11:39,580 --> 00:11:44,560
computing platform that is aimed to be

278
00:11:41,340 --> 00:11:49,630
analyzed<font color="#E5E5E5"> to be understood</font><font color="#CCCCCC"> to be reused</font>

279
00:11:44,560 --> 00:11:50,890
<font color="#E5E5E5">in various contexts so</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> been talking</font>

280
00:11:49,630 --> 00:11:53,530
about<font color="#E5E5E5"> remote attestation a couple of</font>

281
00:11:50,890 --> 00:11:55,660
times<font color="#E5E5E5"> already I'm not trying to follow</font>

282
00:11:53,530 --> 00:11:57,850
this approach<font color="#CCCCCC"> of making you understand</font>

283
00:11:55,660 --> 00:12:00,370
<font color="#CCCCCC">this technology by</font><font color="#E5E5E5"> presenting exactly</font>

284
00:11:57,850 --> 00:12:01,990
what remote attestation means in the

285
00:12:00,370 --> 00:12:05,470
context of for example<font color="#CCCCCC"> samples like</font>

286
00:12:01,990 --> 00:12:08,170
architectures<font color="#CCCCCC"> for that I</font><font color="#E5E5E5"> think you first</font>

287
00:12:05,470 --> 00:12:10,240
have to understand what kind of risks

288
00:12:08,170 --> 00:12:12,010
there are in microcontroller systems so

289
00:12:10,240 --> 00:12:16,000
one<font color="#E5E5E5"> common thing is</font><font color="#CCCCCC"> that you don't have</font>

290
00:12:12,010 --> 00:12:17,650
any form<font color="#E5E5E5"> of isolation</font><font color="#CCCCCC"> of different</font>

291
00:12:16,000 --> 00:12:20,050
<font color="#E5E5E5">processes in</font><font color="#CCCCCC"> these systems so if you</font>

292
00:12:17,650 --> 00:12:22,660
look<font color="#E5E5E5"> at its use in cars for</font><font color="#CCCCCC"> example or</font>

293
00:12:20,050 --> 00:12:24,609
also<font color="#E5E5E5"> control systems in the power grid</font>

294
00:12:22,660 --> 00:12:26,469
<font color="#CCCCCC">and in industrial</font><font color="#E5E5E5"> control systems you</font>

295
00:12:24,610 --> 00:12:28,780
will<font color="#E5E5E5"> see a lot of very little</font>

296
00:12:26,470 --> 00:12:30,610
microcontrollers deployed like 16-bit MC

297
00:12:28,780 --> 00:12:33,490
use that<font color="#E5E5E5"> often have no security</font>

298
00:12:30,610 --> 00:12:35,140
<font color="#CCCCCC">mechanisms building</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> means if</font><font color="#E5E5E5"> you</font>

299
00:12:33,490 --> 00:12:37,960
in<font color="#E5E5E5"> these contexts</font><font color="#CCCCCC"> deploy some</font>

300
00:12:35,140 --> 00:12:40,090
application and then<font color="#E5E5E5"> you might deploy</font>

301
00:12:37,960 --> 00:12:42,850
<font color="#CCCCCC">another application</font><font color="#E5E5E5"> on your MCU and</font><font color="#CCCCCC"> then</font>

302
00:12:40,090 --> 00:12:44,500
you might deploy a third<font color="#CCCCCC"> application</font>

303
00:12:42,850 --> 00:12:47,440
<font color="#E5E5E5">they all share the</font><font color="#CCCCCC"> same address space</font>

304
00:12:44,500 --> 00:12:48,850
<font color="#E5E5E5">and it's very</font><font color="#CCCCCC"> likely that</font><font color="#E5E5E5"> something goes</font>

305
00:12:47,440 --> 00:12:50,800
wrong so if you have a<font color="#E5E5E5"> buffer overflow</font>

306
00:12:48,850 --> 00:12:51,760
<font color="#CCCCCC">in one of these different components</font>

307
00:12:50,800 --> 00:12:53,910
that<font color="#E5E5E5"> might even come from different</font>

308
00:12:51,760 --> 00:12:57,160
shareholders<font color="#E5E5E5"> for different stakeholders</font>

309
00:12:53,910 --> 00:12:59,560
<font color="#E5E5E5">it's quite likely that you</font><font color="#CCCCCC"> know a buck</font>

310
00:12:57,160 --> 00:13:01,719
in one component compromises<font color="#E5E5E5"> your entire</font>

311
00:12:59,560 --> 00:13:04,569
system compromises the interactions<font color="#CCCCCC"> of</font>

312
00:13:01,720 --> 00:13:04,840
other software molecules<font color="#CCCCCC"> that you rely</font>

313
00:13:04,570 --> 00:13:07,220
on

314
00:13:04,840 --> 00:13:09,860
so if then our<font color="#E5E5E5"> little</font>

315
00:13:07,220 --> 00:13:11,930
there comes along<font color="#E5E5E5"> and wants to get some</font>

316
00:13:09,860 --> 00:13:13,699
measurements<font color="#CCCCCC"> out of the system</font><font color="#E5E5E5"> wants to</font>

317
00:13:11,930 --> 00:13:15,800
get a<font color="#E5E5E5"> sensor reading from your</font>

318
00:13:13,699 --> 00:13:17,599
<font color="#CCCCCC">microcontroller</font><font color="#E5E5E5"> wants to control an</font><font color="#CCCCCC"> X</font>

319
00:13:15,800 --> 00:13:18,949
rate which might be a critical thing

320
00:13:17,600 --> 00:13:21,290
which might be a brake controller<font color="#CCCCCC"> in a</font>

321
00:13:18,949 --> 00:13:23,420
car or<font color="#CCCCCC"> something like that</font><font color="#E5E5E5"> you can</font>

322
00:13:21,290 --> 00:13:26,060
<font color="#E5E5E5">easily end up with</font><font color="#CCCCCC"> situations where this</font>

323
00:13:23,420 --> 00:13:28,519
is not reliable<font color="#E5E5E5"> where you have no</font>

324
00:13:26,060 --> 00:13:30,680
assurance<font color="#E5E5E5"> of integrity</font><font color="#CCCCCC"> of your software</font>

325
00:13:28,519 --> 00:13:33,259
<font color="#E5E5E5">of the security</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the communication</font>

326
00:13:30,680 --> 00:13:35,029
<font color="#CCCCCC">whatsoever</font><font color="#E5E5E5"> we address exactly this</font>

327
00:13:33,259 --> 00:13:37,579
situation<font color="#CCCCCC"> with the samples approach or</font>

328
00:13:35,029 --> 00:13:38,060
with<font color="#CCCCCC"> first computing architectures in</font>

329
00:13:37,579 --> 00:13:41,689
general

330
00:13:38,060 --> 00:13:43,910
so one thing we give you with<font color="#E5E5E5"> this</font>

331
00:13:41,689 --> 00:13:45,980
approach<font color="#CCCCCC"> of memory curtaining</font><font color="#E5E5E5"> is strong</font>

332
00:13:43,910 --> 00:13:48,379
<font color="#CCCCCC">isolation between different</font><font color="#E5E5E5"> components</font>

333
00:13:45,980 --> 00:13:51,069
<font color="#E5E5E5">so for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> this third component the</font>

334
00:13:48,379 --> 00:13:53,689
the red one down there<font color="#E5E5E5"> it just can't be</font>

335
00:13:51,069 --> 00:13:55,878
<font color="#E5E5E5">overlapping with other components in the</font>

336
00:13:53,689 --> 00:13:58,399
system<font color="#CCCCCC"> anymore that are using this</font><font color="#E5E5E5"> kind</font>

337
00:13:55,879 --> 00:14:01,730
of technology primitives<font color="#CCCCCC"> that is we</font>

338
00:13:58,399 --> 00:14:03,470
<font color="#E5E5E5">introduce a little unit in your</font>

339
00:14:01,730 --> 00:14:06,139
microcontroller<font color="#E5E5E5"> that is just a few</font><font color="#CCCCCC"> K</font>

340
00:14:03,470 --> 00:14:08,870
it's big and that allows us<font color="#CCCCCC"> to capture</font>

341
00:14:06,139 --> 00:14:10,639
<font color="#E5E5E5">certain properties of each software</font>

342
00:14:08,870 --> 00:14:12,740
module for example<font color="#CCCCCC"> we would want</font><font color="#E5E5E5"> to know</font>

343
00:14:10,639 --> 00:14:14,629
<font color="#E5E5E5">where the text section of that module is</font>

344
00:14:12,740 --> 00:14:16,699
<font color="#CCCCCC">that is the</font><font color="#E5E5E5"> actual code you're</font><font color="#CCCCCC"> executing</font>

345
00:14:14,629 --> 00:14:18,410
we would want<font color="#E5E5E5"> to know where the data</font>

346
00:14:16,699 --> 00:14:21,139
section<font color="#E5E5E5"> of that particular module</font><font color="#CCCCCC"> is</font>

347
00:14:18,410 --> 00:14:22,639
<font color="#CCCCCC">that we want to</font><font color="#E5E5E5"> of course know the value</font>

348
00:14:21,139 --> 00:14:25,670
of<font color="#E5E5E5"> the program counter and then we can</font>

349
00:14:22,639 --> 00:14:27,379
for<font color="#E5E5E5"> example very simply say that only if</font>

350
00:14:25,670 --> 00:14:29,420
the program counter points<font color="#CCCCCC"> somewhere</font>

351
00:14:27,379 --> 00:14:31,009
into the text section<font color="#CCCCCC"> we can access the</font>

352
00:14:29,420 --> 00:14:33,199
data section<font color="#E5E5E5"> otherwise the data section</font>

353
00:14:31,009 --> 00:14:35,209
<font color="#CCCCCC">is not available so</font><font color="#E5E5E5"> no other module</font>

354
00:14:33,199 --> 00:14:38,059
would ever be able<font color="#E5E5E5"> to interfere with the</font>

355
00:14:35,209 --> 00:14:41,959
confidential<font color="#CCCCCC"> state of that one module we</font>

356
00:14:38,059 --> 00:14:44,959
are trying<font color="#E5E5E5"> to protect now we can also</font>

357
00:14:41,959 --> 00:14:46,579
<font color="#E5E5E5">use these</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> these these properties</font>

358
00:14:44,959 --> 00:14:49,160
of<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> software modules that we</font>

359
00:14:46,579 --> 00:14:51,109
capture to for example generate unique

360
00:14:49,160 --> 00:14:53,930
<font color="#E5E5E5">keys that are related</font><font color="#CCCCCC"> to that</font><font color="#E5E5E5"> module</font><font color="#CCCCCC"> so</font>

361
00:14:51,110 --> 00:14:55,639
<font color="#CCCCCC">if we again extend our microcontroller a</font>

362
00:14:53,930 --> 00:14:59,930
little bit by sticking a triple unit in

363
00:14:55,639 --> 00:15:01,899
and say that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> use the module identity</font>

364
00:14:59,930 --> 00:15:04,729
let's say the text<font color="#E5E5E5"> section and the</font>

365
00:15:01,899 --> 00:15:06,500
addresses<font color="#CCCCCC"> of</font><font color="#E5E5E5"> data section and so forth</font>

366
00:15:04,730 --> 00:15:10,309
<font color="#E5E5E5">to generate a key that is specific to</font>

367
00:15:06,500 --> 00:15:12,259
that<font color="#CCCCCC"> module</font><font color="#E5E5E5"> we can use that he even</font><font color="#CCCCCC"> were</font>

368
00:15:10,309 --> 00:15:13,610
<font color="#CCCCCC">the</font><font color="#E5E5E5"> third party even with</font><font color="#CCCCCC"> a deployer of</font>

369
00:15:12,259 --> 00:15:17,420
that software<font color="#E5E5E5"> to securely communicate</font>

370
00:15:13,610 --> 00:15:20,990
with<font color="#E5E5E5"> the module and</font>

371
00:15:17,420 --> 00:15:23,300
get some guarantees about<font color="#E5E5E5"> that a</font>

372
00:15:20,990 --> 00:15:25,700
specific<font color="#CCCCCC"> module has been deployed in a</font>

373
00:15:23,300 --> 00:15:28,010
secure way on a microcontroller<font color="#CCCCCC"> now of</font>

374
00:15:25,700 --> 00:15:30,890
course there<font color="#E5E5E5"> are some issues here</font><font color="#CCCCCC"> so if</font>

375
00:15:28,010 --> 00:15:32,689
you<font color="#E5E5E5"> think</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> just generating</font><font color="#CCCCCC"> ap</font>

376
00:15:30,890 --> 00:15:34,160
directly from the module code and the

377
00:15:32,690 --> 00:15:35,480
loading context<font color="#E5E5E5"> that would not be really</font>

378
00:15:34,160 --> 00:15:37,100
confidential<font color="#CCCCCC"> because anyone could</font>

379
00:15:35,480 --> 00:15:38,630
potentially know where your module<font color="#E5E5E5"> is</font>

380
00:15:37,100 --> 00:15:40,730
deployed so<font color="#E5E5E5"> you need some</font><font color="#CCCCCC"> additional</font>

381
00:15:38,630 --> 00:15:42,470
software you need for<font color="#CCCCCC"> example or</font><font color="#E5E5E5"> you</font>

382
00:15:40,730 --> 00:15:44,180
need some<font color="#E5E5E5"> additional steps for example</font>

383
00:15:42,470 --> 00:15:46,130
<font color="#CCCCCC">you want to use that endorsement key</font>

384
00:15:44,180 --> 00:15:48,020
that<font color="#E5E5E5"> I've used</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> that is baked into</font>

385
00:15:46,130 --> 00:15:49,880
the<font color="#E5E5E5"> hardware integrated in the key</font>

386
00:15:48,020 --> 00:15:52,660
derivation<font color="#E5E5E5"> process to actually get a</font>

387
00:15:49,880 --> 00:15:55,100
proper secret<font color="#E5E5E5"> that then as well binds</font>

388
00:15:52,660 --> 00:15:56,839
<font color="#E5E5E5">the software module to a specific</font>

389
00:15:55,100 --> 00:15:58,790
microcontroller but that's essentially

390
00:15:56,840 --> 00:16:01,910
<font color="#E5E5E5">all what attestation is about so in this</font>

391
00:15:58,790 --> 00:16:05,569
<font color="#E5E5E5">specific context our little</font><font color="#CCCCCC"> robot knows</font>

392
00:16:01,910 --> 00:16:07,339
pretty<font color="#E5E5E5"> much for sure that he is</font>

393
00:16:05,570 --> 00:16:09,380
<font color="#CCCCCC">communicating with</font><font color="#E5E5E5"> the right piece</font><font color="#CCCCCC"> of</font>

394
00:16:07,340 --> 00:16:11,000
software and<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> even extend this to</font>

395
00:16:09,380 --> 00:16:14,330
multiple pieces of<font color="#E5E5E5"> software so for</font>

396
00:16:11,000 --> 00:16:16,940
example if these other<font color="#E5E5E5"> modules also use</font>

397
00:16:14,330 --> 00:16:19,280
<font color="#E5E5E5">our technology</font><font color="#CCCCCC"> he can even extend these</font>

398
00:16:16,940 --> 00:16:21,920
<font color="#CCCCCC">guarantees to say okay our module is</font>

399
00:16:19,280 --> 00:16:25,010
running on a specific microcontroller

400
00:16:21,920 --> 00:16:27,020
and<font color="#CCCCCC"> it expects another module</font><font color="#E5E5E5"> with a</font>

401
00:16:25,010 --> 00:16:29,060
certain<font color="#CCCCCC"> identity with a certain key to</font>

402
00:16:27,020 --> 00:16:31,370
run on<font color="#E5E5E5"> exactly the same controller and</font>

403
00:16:29,060 --> 00:16:34,939
therefore get a chain<font color="#CCCCCC"> of trust</font><font color="#E5E5E5"> so you</font>

404
00:16:31,370 --> 00:16:37,580
<font color="#E5E5E5">basically can use this to get a path a</font>

405
00:16:34,940 --> 00:16:39,860
trusted path<font color="#E5E5E5"> on one microcontroller</font><font color="#CCCCCC"> that</font>

406
00:16:37,580 --> 00:16:41,690
extends from<font color="#E5E5E5"> an piece of application</font>

407
00:16:39,860 --> 00:16:43,610
code<font color="#E5E5E5"> to a driver</font><font color="#CCCCCC"> module to actual</font>

408
00:16:41,690 --> 00:16:45,470
Hardware access<font color="#E5E5E5"> that's what we do in</font>

409
00:16:43,610 --> 00:16:46,540
samples and then of course<font color="#CCCCCC"> if you have</font>

410
00:16:45,470 --> 00:16:49,190
this kind<font color="#E5E5E5"> of secure communication</font>

411
00:16:46,540 --> 00:16:51,650
remotely you can<font color="#E5E5E5"> extend this</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> two</font>

412
00:16:49,190 --> 00:16:55,850
remote sites<font color="#E5E5E5"> and you get some guarantees</font>

413
00:16:51,650 --> 00:16:57,800
<font color="#CCCCCC">that say that essentially you get</font><font color="#E5E5E5"> a</font>

414
00:16:55,850 --> 00:17:00,770
trusted path between<font color="#E5E5E5"> our input and</font>

415
00:16:57,800 --> 00:17:03,349
<font color="#E5E5E5">output components input and output</font>

416
00:17:00,770 --> 00:17:05,810
device drivers on on<font color="#E5E5E5"> different nodes</font>

417
00:17:03,350 --> 00:17:07,069
<font color="#CCCCCC">over a distributed application I think</font>

418
00:17:05,810 --> 00:17:08,510
<font color="#CCCCCC">that's a pretty</font><font color="#E5E5E5"> cool thing that's a</font>

419
00:17:07,069 --> 00:17:11,770
pretty<font color="#CCCCCC"> strong guarantee that we've not</font>

420
00:17:08,510 --> 00:17:14,599
seen in<font color="#E5E5E5"> industry control</font><font color="#CCCCCC"> system so far</font>

421
00:17:11,770 --> 00:17:16,459
but you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> if you want that kind of</font>

422
00:17:14,599 --> 00:17:18,199
stuff then where do you<font color="#CCCCCC"> go what</font><font color="#E5E5E5"> kind of</font>

423
00:17:16,459 --> 00:17:20,360
application what what kind<font color="#CCCCCC"> of technology</font>

424
00:17:18,200 --> 00:17:25,030
do you<font color="#E5E5E5"> have at the moment</font><font color="#CCCCCC"> to implement</font>

425
00:17:20,359 --> 00:17:25,030
that<font color="#E5E5E5"> and well here is like a map of</font>

426
00:17:25,690 --> 00:17:29,670
hardware<font color="#CCCCCC"> trust computing architectures</font>

427
00:17:28,250 --> 00:17:32,520
<font color="#CCCCCC">that give you at the stage</font>

428
00:17:29,670 --> 00:17:34,050
that if<font color="#CCCCCC"> you isolation</font><font color="#E5E5E5"> and if you look at</font>

429
00:17:32,520 --> 00:17:35,730
the open source<font color="#E5E5E5"> column that's on the</font>

430
00:17:34,050 --> 00:17:37,530
right there<font color="#E5E5E5"> and if you also look at the</font>

431
00:17:35,730 --> 00:17:39,480
<font color="#E5E5E5">light weight the embedded column you</font><font color="#CCCCCC"> see</font>

432
00:17:37,530 --> 00:17:41,730
that basically<font color="#CCCCCC"> Santos</font><font color="#E5E5E5"> is the only thing</font>

433
00:17:39,480 --> 00:17:42,810
that is available<font color="#E5E5E5"> at the moment you</font>

434
00:17:41,730 --> 00:17:48,090
<font color="#E5E5E5">don't have to take pictures</font><font color="#CCCCCC"> the slides</font>

435
00:17:42,810 --> 00:17:50,820
online<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I think that's kind of quite a</font>

436
00:17:48,090 --> 00:17:53,490
<font color="#E5E5E5">unique thing for Santos at the moment</font>

437
00:17:50,820 --> 00:17:54,659
that we are<font color="#E5E5E5"> really the only architecture</font>

438
00:17:53,490 --> 00:17:58,290
that is available<font color="#E5E5E5"> that you can basically</font>

439
00:17:54,660 --> 00:17:59,730
download<font color="#E5E5E5"> deploy on FPGAs</font><font color="#CCCCCC"> that you can</font>

440
00:17:58,290 --> 00:18:01,230
experiment with<font color="#E5E5E5"> that you can build</font>

441
00:17:59,730 --> 00:18:04,730
experimental<font color="#CCCCCC"> software that you can use</font>

442
00:18:01,230 --> 00:18:06,870
<font color="#E5E5E5">for</font><font color="#CCCCCC"> research to actually</font><font color="#E5E5E5"> find out how to</font>

443
00:18:04,730 --> 00:18:08,820
program these kind of modules because

444
00:18:06,870 --> 00:18:13,110
isolation is of not easy<font color="#E5E5E5"> to deal with</font>

445
00:18:08,820 --> 00:18:15,360
<font color="#CCCCCC">how to develop application scenarios on</font>

446
00:18:13,110 --> 00:18:16,560
this<font color="#E5E5E5"> kind of architectures so what I'm</font>

447
00:18:15,360 --> 00:18:18,179
going<font color="#CCCCCC"> to present on the next couple of</font>

448
00:18:16,560 --> 00:18:20,220
slides<font color="#CCCCCC"> is a bit of introduction to</font><font color="#E5E5E5"> what</font>

449
00:18:18,180 --> 00:18:23,010
we've<font color="#E5E5E5"> done to Santos and how it works</font>

450
00:18:20,220 --> 00:18:24,960
and then I would<font color="#E5E5E5"> want to in present an</font>

451
00:18:23,010 --> 00:18:26,960
application scenario from<font color="#E5E5E5"> the automotive</font>

452
00:18:24,960 --> 00:18:29,580
domain that shows you how you<font color="#E5E5E5"> can</font>

453
00:18:26,960 --> 00:18:32,180
<font color="#E5E5E5">securely communicate</font><font color="#CCCCCC"> with in a car</font>

454
00:18:29,580 --> 00:18:34,590
context and make sure that for<font color="#CCCCCC"> example</font>

455
00:18:32,180 --> 00:18:36,750
<font color="#CCCCCC">rope microcontrollers cannot interfere</font>

456
00:18:34,590 --> 00:18:38,340
<font color="#E5E5E5">that remote attackers cannot interfere</font>

457
00:18:36,750 --> 00:18:40,170
with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> communication that actually</font>

458
00:18:38,340 --> 00:18:41,790
controls<font color="#E5E5E5"> the critical behavior of a car</font>

459
00:18:40,170 --> 00:18:43,470
<font color="#E5E5E5">I have a little video if</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> still</font>

460
00:18:41,790 --> 00:18:48,300
<font color="#E5E5E5">time at the end</font><font color="#CCCCCC"> to show</font><font color="#E5E5E5"> that kind of</font>

461
00:18:43,470 --> 00:18:51,600
stuff<font color="#CCCCCC"> so sango's</font><font color="#E5E5E5"> Santos is built upon a</font>

462
00:18:48,300 --> 00:18:53,520
<font color="#E5E5E5">16-bit MCU that's the open msp430 so</font>

463
00:18:51,600 --> 00:18:57,540
it's an<font color="#CCCCCC"> open hardware design that you</font>

464
00:18:53,520 --> 00:18:59,460
<font color="#CCCCCC">can just download in</font><font color="#E5E5E5"> it's very</font><font color="#CCCCCC"> loc-nar a</font>

465
00:18:57,540 --> 00:19:01,620
description<font color="#E5E5E5"> and extend</font><font color="#CCCCCC"> with whatever</font>

466
00:18:59,460 --> 00:19:03,300
<font color="#E5E5E5">kind of stuff you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> so specifically</font>

467
00:19:01,620 --> 00:19:05,040
we put in a little<font color="#CCCCCC"> memory management</font>

468
00:19:03,300 --> 00:19:07,950
control unit<font color="#E5E5E5"> that gives you that</font><font color="#CCCCCC"> kind of</font>

469
00:19:05,040 --> 00:19:10,889
<font color="#CCCCCC">isolation guarantee and we also built in</font>

470
00:19:07,950 --> 00:19:13,350
a<font color="#E5E5E5"> cryptic wall that allows</font><font color="#CCCCCC"> you to</font><font color="#E5E5E5"> store</font>

471
00:19:10,890 --> 00:19:14,910
keys in<font color="#E5E5E5"> hardware so</font><font color="#CCCCCC"> that they</font><font color="#E5E5E5"> never</font><font color="#CCCCCC"> look</font>

472
00:19:13,350 --> 00:19:17,129
<font color="#CCCCCC">too</font><font color="#E5E5E5"> software</font><font color="#CCCCCC"> that they can only be</font><font color="#E5E5E5"> used</font>

473
00:19:14,910 --> 00:19:19,260
by specific algorithms through and

474
00:19:17,130 --> 00:19:24,000
through a hardware API and that cannot

475
00:19:19,260 --> 00:19:25,740
be abused<font color="#E5E5E5"> in other ways where do we</font>

476
00:19:24,000 --> 00:19:27,720
start<font color="#CCCCCC"> with this kind of software modules</font>

477
00:19:25,740 --> 00:19:30,530
and and software isolator stuff so here

478
00:19:27,720 --> 00:19:33,300
it is<font color="#E5E5E5"> in samples you would see a</font>

479
00:19:30,530 --> 00:19:35,910
software<font color="#CCCCCC"> module as I explained</font><font color="#E5E5E5"> before in</font>

480
00:19:33,300 --> 00:19:37,800
the<font color="#E5E5E5"> attestation example as a text</font>

481
00:19:35,910 --> 00:19:39,780
section<font color="#E5E5E5"> that identifies that that</font>

482
00:19:37,800 --> 00:19:41,610
contains the executable code of the

483
00:19:39,780 --> 00:19:43,139
module and<font color="#E5E5E5"> a data section that is</font>

484
00:19:41,610 --> 00:19:45,178
<font color="#CCCCCC">that somewhere</font><font color="#E5E5E5"> else in this continuous</font>

485
00:19:43,140 --> 00:19:47,220
address space and contains the the

486
00:19:45,179 --> 00:19:49,910
runtime data<font color="#E5E5E5"> the runtime state of</font>

487
00:19:47,220 --> 00:19:53,280
Jumanji<font color="#E5E5E5"> and we use these two to actually</font>

488
00:19:49,910 --> 00:19:55,290
<font color="#E5E5E5">generate an identity of</font><font color="#CCCCCC"> the module that</font>

489
00:19:53,280 --> 00:19:57,149
is we<font color="#CCCCCC"> use the</font><font color="#E5E5E5"> maybe a hash of the text</font>

490
00:19:55,290 --> 00:20:00,420
<font color="#CCCCCC">section plus the start and enter traces</font>

491
00:19:57,150 --> 00:20:02,790
<font color="#CCCCCC">of the data section to say that</font><font color="#E5E5E5"> a module</font>

492
00:20:00,420 --> 00:20:04,590
<font color="#E5E5E5">is linked is deployed on a specific node</font>

493
00:20:02,790 --> 00:20:06,570
and that<font color="#E5E5E5"> kind of set up and we can</font>

494
00:20:04,590 --> 00:20:09,330
combine<font color="#E5E5E5"> this with a key that</font><font color="#CCCCCC"> is baked in</font>

495
00:20:06,570 --> 00:20:11,549
<font color="#E5E5E5">hardware to generate specific keys</font>

496
00:20:09,330 --> 00:20:13,500
there is another<font color="#CCCCCC"> extension that</font><font color="#E5E5E5"> I'm</font>

497
00:20:11,549 --> 00:20:14,790
talking about<font color="#E5E5E5"> before</font><font color="#CCCCCC"> that is this entry</font>

498
00:20:13,500 --> 00:20:17,790
<font color="#CCCCCC">point you see there at the beginning</font><font color="#E5E5E5"> of</font>

499
00:20:14,790 --> 00:20:20,820
the sex<font color="#E5E5E5"> of the text</font><font color="#CCCCCC"> section so the</font>

500
00:20:17,790 --> 00:20:23,760
interesting<font color="#E5E5E5"> thing is that san'ko's</font>

501
00:20:20,820 --> 00:20:26,100
modules cannot be accessed<font color="#E5E5E5"> you cannot</font>

502
00:20:23,760 --> 00:20:28,470
access the<font color="#E5E5E5"> code at any given point you</font>

503
00:20:26,100 --> 00:20:30,418
<font color="#E5E5E5">can't just</font><font color="#CCCCCC"> jump to some</font><font color="#E5E5E5"> arbitrary</font>

504
00:20:28,470 --> 00:20:32,220
location in the text section<font color="#E5E5E5"> or or call</font>

505
00:20:30,419 --> 00:20:34,350
an arbitrary<font color="#CCCCCC"> function instead</font><font color="#E5E5E5"> you</font>

506
00:20:32,220 --> 00:20:37,650
declare<font color="#E5E5E5"> a specific function to be entry</font>

507
00:20:34,350 --> 00:20:40,590
point functions for your protected

508
00:20:37,650 --> 00:20:42,210
module and then you can only jump into

509
00:20:40,590 --> 00:20:44,070
these<font color="#CCCCCC"> specific entry point functions and</font>

510
00:20:42,210 --> 00:20:45,540
if you then make sure<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

511
00:20:44,070 --> 00:20:47,580
interfaces of<font color="#E5E5E5"> these functions are</font>

512
00:20:45,540 --> 00:20:49,500
sufficiently restrictive that there are

513
00:20:47,580 --> 00:20:50,820
no let's say function pointers<font color="#E5E5E5"> passed or</font>

514
00:20:49,500 --> 00:20:53,010
stuff like<font color="#E5E5E5"> that that you</font><font color="#CCCCCC"> can easily up</font>

515
00:20:50,820 --> 00:20:54,240
use for a<font color="#CCCCCC"> return oriented programing</font>

516
00:20:53,010 --> 00:20:56,780
attack or something like that<font color="#E5E5E5"> you</font>

517
00:20:54,240 --> 00:20:59,970
<font color="#E5E5E5">actually get very strong guarantees that</font>

518
00:20:56,780 --> 00:21:03,020
your modules are pretty hard to<font color="#E5E5E5"> abuse</font>

519
00:20:59,970 --> 00:21:05,190
that<font color="#CCCCCC"> you that an attacker</font><font color="#E5E5E5"> cannot easily</font>

520
00:21:03,020 --> 00:21:08,070
<font color="#E5E5E5">manipulate your module to change the</font>

521
00:21:05,190 --> 00:21:10,380
control flow<font color="#E5E5E5"> and to make it execute</font>

522
00:21:08,070 --> 00:21:12,450
perform cryptographic operations for

523
00:21:10,380 --> 00:21:16,830
example<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are not intended in the</font>

524
00:21:12,450 --> 00:21:18,480
application source<font color="#CCCCCC"> code the an</font>

525
00:21:16,830 --> 00:21:22,559
<font color="#E5E5E5">interesting side effect of this kind of</font>

526
00:21:18,480 --> 00:21:25,860
<font color="#E5E5E5">setup is by extending</font><font color="#CCCCCC"> a very simple</font>

527
00:21:22,559 --> 00:21:28,020
<font color="#CCCCCC">micro controller I think we we get quite</font>

528
00:21:25,860 --> 00:21:31,770
<font color="#E5E5E5">a strong understanding of how the</font>

529
00:21:28,020 --> 00:21:35,580
architecture<font color="#E5E5E5"> works how instructions are</font>

530
00:21:31,770 --> 00:21:37,590
processed how side channels<font color="#CCCCCC"> evolve</font><font color="#E5E5E5"> or</font>

531
00:21:35,580 --> 00:21:39,270
don't evolve<font color="#CCCCCC"> which is something</font><font color="#E5E5E5"> you</font>

532
00:21:37,590 --> 00:21:42,449
typically don't get on larger

533
00:21:39,270 --> 00:21:44,179
architectures like<font color="#E5E5E5"> for example x86</font><font color="#CCCCCC"> there</font>

534
00:21:42,450 --> 00:21:46,980
<font color="#E5E5E5">is no pipelining here there is no</font>

535
00:21:44,179 --> 00:21:49,320
there's<font color="#E5E5E5"> no speculative execution so this</font>

536
00:21:46,980 --> 00:21:50,880
is in spectral resistant I believe but

537
00:21:49,320 --> 00:21:53,850
of<font color="#E5E5E5"> course there is no proof there that's</font>

538
00:21:50,880 --> 00:21:55,500
<font color="#E5E5E5">something we still have to do this is</font>

539
00:21:53,850 --> 00:21:58,020
also a<font color="#E5E5E5"> very power efficient</font>

540
00:21:55,500 --> 00:22:02,250
architecture so the msp430 basically

541
00:21:58,020 --> 00:22:05,100
runs for I think<font color="#CCCCCC"> 12 years on an ASL that</font>

542
00:22:02,250 --> 00:22:06,840
<font color="#E5E5E5">is more than the shelf life of</font><font color="#CCCCCC"> itself</font><font color="#E5E5E5"> we</font>

543
00:22:05,100 --> 00:22:08,820
<font color="#CCCCCC">have extended it a little bit</font><font color="#E5E5E5"> especially</font>

544
00:22:06,840 --> 00:22:10,470
<font color="#E5E5E5">with</font><font color="#CCCCCC"> a cryptic whore and of course the</font>

545
00:22:08,820 --> 00:22:12,659
power consumption<font color="#CCCCCC"> Rises by this but</font>

546
00:22:10,470 --> 00:22:15,420
<font color="#E5E5E5">that's only</font><font color="#CCCCCC"> 6% if you're not using the</font>

547
00:22:12,660 --> 00:22:17,610
cryptic or continuously so basically we

548
00:22:15,420 --> 00:22:20,610
still have a<font color="#E5E5E5"> very long runtime</font><font color="#CCCCCC"> on</font>

549
00:22:17,610 --> 00:22:22,199
battery power<font color="#E5E5E5"> or or a CPU that is still</font>

550
00:22:20,610 --> 00:22:26,159
suitable<font color="#E5E5E5"> for energy harvesting or</font>

551
00:22:22,200 --> 00:22:27,780
similar technologies<font color="#E5E5E5"> so there's a link</font>

552
00:22:26,160 --> 00:22:29,490
for<font color="#E5E5E5"> the for the source code</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

553
00:22:27,780 --> 00:22:30,840
architecture for<font color="#E5E5E5"> the support software if</font>

554
00:22:29,490 --> 00:22:32,760
<font color="#CCCCCC">you want to have a look</font><font color="#E5E5E5"> at it if you</font>

555
00:22:30,840 --> 00:22:35,490
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to use it I want to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> a bit</font>

556
00:22:32,760 --> 00:22:37,410
about how<font color="#CCCCCC"> keys are managed how keys are</font>

557
00:22:35,490 --> 00:22:39,510
derived in<font color="#E5E5E5"> this architecture</font><font color="#CCCCCC"> so</font>

558
00:22:37,410 --> 00:22:42,090
essentially what you have<font color="#E5E5E5"> is you have a</font>

559
00:22:39,510 --> 00:22:44,070
computing node you have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> san'ko's MCU</font>

560
00:22:42,090 --> 00:22:46,919
we call it n in this context here and

561
00:22:44,070 --> 00:22:48,300
each of<font color="#CCCCCC"> these things</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> a key bake</font><font color="#E5E5E5"> at</font>

562
00:22:46,920 --> 00:22:51,750
the moment<font color="#E5E5E5"> there are static keys but you</font>

563
00:22:48,300 --> 00:22:53,220
can think<font color="#E5E5E5"> of using physically unfilmable</font>

564
00:22:51,750 --> 00:22:55,560
functions to generate these keys

565
00:22:53,220 --> 00:22:57,900
initially something<font color="#E5E5E5"> like that now from</font>

566
00:22:55,560 --> 00:23:02,070
<font color="#CCCCCC">that key we generate</font><font color="#E5E5E5"> a software provider</font>

567
00:22:57,900 --> 00:23:05,910
<font color="#CCCCCC">so we can name a software provider we're</font>

568
00:23:02,070 --> 00:23:07,980
just given an ID and we<font color="#E5E5E5"> can use this ID</font>

569
00:23:05,910 --> 00:23:10,110
<font color="#E5E5E5">to compute a key that is specific to a</font>

570
00:23:07,980 --> 00:23:13,020
<font color="#E5E5E5">software provider and then using this</font>

571
00:23:10,110 --> 00:23:16,199
key the software provider can deploy

572
00:23:13,020 --> 00:23:17,790
software and the identity<font color="#CCCCCC"> of each of</font>

573
00:23:16,200 --> 00:23:20,160
these software modules he deploys or she

574
00:23:17,790 --> 00:23:21,960
deploys will be used<font color="#E5E5E5"> to compute another</font>

575
00:23:20,160 --> 00:23:25,410
key that is a software<font color="#E5E5E5"> module key and</font>

576
00:23:21,960 --> 00:23:27,960
only the software provider can actually

577
00:23:25,410 --> 00:23:30,510
infer this key<font color="#E5E5E5"> offline independent from</font>

578
00:23:27,960 --> 00:23:34,080
what happens on the<font color="#E5E5E5"> MCU and communicate</font>

579
00:23:30,510 --> 00:23:36,180
securely with a<font color="#E5E5E5"> specific module so</font>

580
00:23:34,080 --> 00:23:38,790
that's kind of the<font color="#CCCCCC"> the guarantees you</font>

581
00:23:36,180 --> 00:23:42,140
get you then use to securely communicate

582
00:23:38,790 --> 00:23:44,610
and to<font color="#CCCCCC"> establish at the station</font>

583
00:23:42,140 --> 00:23:47,730
<font color="#E5E5E5">guarantees in your network of san'ko's</font>

584
00:23:44,610 --> 00:23:52,139
modules now what do we do with<font color="#E5E5E5"> this</font>

585
00:23:47,730 --> 00:23:53,340
whole stuff<font color="#CCCCCC"> I think the same thing is</font>

586
00:23:52,140 --> 00:23:54,759
<font color="#E5E5E5">live a lot of times in the last couple</font>

587
00:23:53,340 --> 00:23:57,309
<font color="#E5E5E5">of months</font>

588
00:23:54,759 --> 00:23:59,169
you might<font color="#E5E5E5"> have heard</font><font color="#CCCCCC"> that chorus</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

589
00:23:57,309 --> 00:24:00,820
hacked right<font color="#E5E5E5"> so there have been</font><font color="#CCCCCC"> a couple</font>

590
00:23:59,169 --> 00:24:04,449
<font color="#E5E5E5">of papers</font><font color="#CCCCCC"> in the last</font><font color="#E5E5E5"> couple of</font><font color="#CCCCCC"> years</font>

591
00:24:00,820 --> 00:24:06,849
that show that you can<font color="#CCCCCC"> use the</font><font color="#E5E5E5"> remote</font>

592
00:24:04,449 --> 00:24:10,299
connectivity of<font color="#E5E5E5"> a car the car Wi-Fi</font>

593
00:24:06,849 --> 00:24:12,549
<font color="#E5E5E5">cellular connectivity to interfere with</font>

594
00:24:10,299 --> 00:24:14,049
<font color="#E5E5E5">a car's safety</font><font color="#CCCCCC"> critical function</font>

595
00:24:12,549 --> 00:24:16,359
<font color="#E5E5E5">researchers have shown that you can</font>

596
00:24:14,049 --> 00:24:18,339
<font color="#CCCCCC">actually remotely steer</font><font color="#E5E5E5"> a car off the</font>

597
00:24:16,359 --> 00:24:19,718
road<font color="#E5E5E5"> while it is driving control the car</font>

598
00:24:18,339 --> 00:24:23,259
to engage the<font color="#CCCCCC"> brakes and things like</font>

599
00:24:19,719 --> 00:24:25,269
<font color="#E5E5E5">that this is pretty bad and we've been</font>

600
00:24:23,259 --> 00:24:29,169
employing<font color="#CCCCCC"> san'ko's</font><font color="#E5E5E5"> and the demo</font><font color="#CCCCCC"> set up</font>

601
00:24:25,269 --> 00:24:31,359
to actually mitigate this issue<font color="#CCCCCC"> by</font><font color="#E5E5E5"> not</font>

602
00:24:29,169 --> 00:24:33,849
just providing<font color="#E5E5E5"> authentication on the</font>

603
00:24:31,359 --> 00:24:35,168
internal buses<font color="#E5E5E5"> that provide this kind of</font>

604
00:24:33,849 --> 00:24:37,569
functionality<font color="#E5E5E5"> that exchange messages</font>

605
00:24:35,169 --> 00:24:39,129
<font color="#E5E5E5">between different controllers and make</font>

606
00:24:37,569 --> 00:24:41,799
sure that these<font color="#E5E5E5"> controllers interact and</font>

607
00:24:39,129 --> 00:24:43,329
control the car so<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> you need</font>

608
00:24:41,799 --> 00:24:45,908
<font color="#CCCCCC">truck tog Rafi</font><font color="#E5E5E5"> to kind of protect these</font>

609
00:24:43,329 --> 00:24:47,408
messages<font color="#E5E5E5"> but then again what happens if</font>

610
00:24:45,909 --> 00:24:49,269
you're an attacker<font color="#E5E5E5"> and you manage to</font>

611
00:24:47,409 --> 00:24:51,909
redeploy software somewhere or you

612
00:24:49,269 --> 00:24:55,209
<font color="#E5E5E5">manage to</font><font color="#CCCCCC"> abused a</font><font color="#E5E5E5"> component to abuse</font>

613
00:24:51,909 --> 00:24:57,309
the software on a component<font color="#E5E5E5"> to you know</font>

614
00:24:55,209 --> 00:24:59,229
make an entropy<font color="#E5E5E5"> trip something</font><font color="#CCCCCC"> you would</font>

615
00:24:57,309 --> 00:25:02,168
basically be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to control a lot of</font>

616
00:24:59,229 --> 00:25:03,879
<font color="#CCCCCC">the behavior</font><font color="#E5E5E5"> by this kind of attacks and</font>

617
00:25:02,169 --> 00:25:06,879
<font color="#E5E5E5">then of course</font><font color="#CCCCCC"> your cryptographic keys</font>

618
00:25:03,879 --> 00:25:09,488
would probably need and well the

619
00:25:06,879 --> 00:25:11,468
<font color="#CCCCCC">baseline is you need guarantees</font><font color="#E5E5E5"> on top</font>

620
00:25:09,489 --> 00:25:14,469
of just message authentication<font color="#E5E5E5"> on this</font>

621
00:25:11,469 --> 00:25:17,729
<font color="#E5E5E5">automotive buses that give you some form</font>

622
00:25:14,469 --> 00:25:20,169
of<font color="#E5E5E5"> software security that allow you</font><font color="#CCCCCC"> to</font>

623
00:25:17,729 --> 00:25:21,819
measure the<font color="#E5E5E5"> state of the--of the</font>

624
00:25:20,169 --> 00:25:27,039
individual software<font color="#E5E5E5"> modules that allow</font>

625
00:25:21,819 --> 00:25:30,158
you to<font color="#E5E5E5"> protect</font><font color="#CCCCCC"> peas</font><font color="#E5E5E5"> from being abused by</font>

626
00:25:27,039 --> 00:25:32,019
malicious code by<font color="#CCCCCC"> return oriented</font>

627
00:25:30,159 --> 00:25:38,229
programming programming attacks and

628
00:25:32,019 --> 00:25:40,719
<font color="#E5E5E5">things like that so with a neat</font><font color="#CCCCCC"> design</font>

629
00:25:38,229 --> 00:25:42,549
for deploying software modules in such

630
00:25:40,719 --> 00:25:44,409
reactive systems in such reactive

631
00:25:42,549 --> 00:25:45,969
critical systems and we've also<font color="#E5E5E5"> been</font>

632
00:25:44,409 --> 00:25:47,529
building a little<font color="#E5E5E5"> demo</font><font color="#CCCCCC"> set up</font><font color="#E5E5E5"> that</font>

633
00:25:45,969 --> 00:25:49,239
involves you<font color="#CCCCCC"> know like some car</font>

634
00:25:47,529 --> 00:25:50,979
<font color="#CCCCCC">dashboards some actual car components</font>

635
00:25:49,239 --> 00:25:53,379
<font color="#E5E5E5">that interact with</font><font color="#CCCCCC"> a couple of</font><font color="#E5E5E5"> issues</font>

636
00:25:50,979 --> 00:25:57,459
that<font color="#E5E5E5"> run our san'ko's hardware and that</font>

637
00:25:53,379 --> 00:26:00,189
show that an attacker can<font color="#CCCCCC"> interfere with</font>

638
00:25:57,459 --> 00:26:02,469
<font color="#CCCCCC">the</font><font color="#E5E5E5"> unprotected components might harm</font>

639
00:26:00,190 --> 00:26:05,289
availability on the critical components

640
00:26:02,469 --> 00:26:07,320
<font color="#E5E5E5">but does not interfere with the security</font>

641
00:26:05,289 --> 00:26:10,529
of<font color="#E5E5E5"> the other</font><font color="#CCCCCC"> protective compound</font>

642
00:26:07,320 --> 00:26:12,629
so how<font color="#CCCCCC"> does</font><font color="#E5E5E5"> it all work together</font><font color="#CCCCCC"> so a</font>

643
00:26:10,529 --> 00:26:14,399
car is a fairly complex bus system<font color="#E5E5E5"> you</font>

644
00:26:12,630 --> 00:26:17,120
have a lot of electronic control units

645
00:26:14,399 --> 00:26:19,918
installed there they all interact via

646
00:26:17,120 --> 00:26:20,969
<font color="#E5E5E5">different networks can is just one of</font>

647
00:26:19,919 --> 00:26:23,789
them

648
00:26:20,970 --> 00:26:25,529
there have been specifications<font color="#E5E5E5"> for doing</font>

649
00:26:23,789 --> 00:26:27,720
message authentication<font color="#CCCCCC"> on these bus</font>

650
00:26:25,529 --> 00:26:30,240
systems<font color="#E5E5E5"> they are in the auto</font><font color="#CCCCCC"> saw</font>

651
00:26:27,720 --> 00:26:31,980
standard since<font color="#E5E5E5"> 2015 I think as</font><font color="#CCCCCC"> far as I</font>

652
00:26:30,240 --> 00:26:34,350
know there are<font color="#E5E5E5"> no industrial viable</font>

653
00:26:31,980 --> 00:26:37,620
implementations yet they have<font color="#E5E5E5"> been</font>

654
00:26:34,350 --> 00:26:39,389
academic proposals for communication

655
00:26:37,620 --> 00:26:41,070
protocols that give you<font color="#E5E5E5"> some form of key</font>

656
00:26:39,390 --> 00:26:43,440
exchange<font color="#E5E5E5"> between these components</font><font color="#CCCCCC"> that</font>

657
00:26:41,070 --> 00:26:45,360
<font color="#CCCCCC">give you message authentication there so</font>

658
00:26:43,440 --> 00:26:47,909
it would be pretty<font color="#E5E5E5"> hard for an attacker</font>

659
00:26:45,360 --> 00:26:50,250
to just inject messages<font color="#E5E5E5"> one approach is</font>

660
00:26:47,909 --> 00:26:52,080
layer and we have the first author of

661
00:26:50,250 --> 00:26:54,840
the layer approach<font color="#E5E5E5"> sitting here in the</font>

662
00:26:52,080 --> 00:26:56,668
front<font color="#CCCCCC"> row another</font><font color="#E5E5E5"> approach</font><font color="#CCCCCC"> is that he</font>

663
00:26:54,840 --> 00:27:01,289
can I don't think we have anyone<font color="#E5E5E5"> from</font>

664
00:26:56,669 --> 00:27:03,000
<font color="#CCCCCC">that again here today</font><font color="#E5E5E5"> so this has been</font>

665
00:27:01,289 --> 00:27:05,129
proposed but there are no efficient

666
00:27:03,000 --> 00:27:07,610
implementations yet one issue is that<font color="#E5E5E5"> if</font>

667
00:27:05,130 --> 00:27:10,380
you do your cryptography<font color="#CCCCCC"> and software</font>

668
00:27:07,610 --> 00:27:12,270
<font color="#E5E5E5">well you also have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> timing issue</font>

669
00:27:10,380 --> 00:27:13,590
<font color="#E5E5E5">because many of these microcontrollers</font>

670
00:27:12,270 --> 00:27:16,200
they're just not efficient they're just

671
00:27:13,590 --> 00:27:18,418
<font color="#E5E5E5">not fast enough to do this so that</font><font color="#CCCCCC"> you</font>

672
00:27:16,200 --> 00:27:20,370
actually maintain full control over<font color="#E5E5E5"> your</font>

673
00:27:18,419 --> 00:27:22,679
car and<font color="#CCCCCC"> break-in time you</font><font color="#E5E5E5"> need some</font>

674
00:27:20,370 --> 00:27:24,658
hardware support to do that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> next</font>

675
00:27:22,679 --> 00:27:26,669
<font color="#E5E5E5">thing is of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> what about software</font>

676
00:27:24,659 --> 00:27:28,710
security<font color="#E5E5E5"> so I explained it before if you</font>

677
00:27:26,669 --> 00:27:30,539
would be able<font color="#CCCCCC"> to run a return-oriented</font>

678
00:27:28,710 --> 00:27:32,940
programming attack against one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

679
00:27:30,539 --> 00:27:34,860
software components on a controller<font color="#E5E5E5"> what</font>

680
00:27:32,940 --> 00:27:36,779
<font color="#E5E5E5">unique keys would you be able to control</font>

681
00:27:34,860 --> 00:27:39,059
the software<font color="#E5E5E5"> to actually send fake</font>

682
00:27:36,779 --> 00:27:41,490
messages or to to inject messages that

683
00:27:39,059 --> 00:27:43,500
are<font color="#E5E5E5"> encrypted that are signed that are</font>

684
00:27:41,490 --> 00:27:45,570
so to say authenticated for the network

685
00:27:43,500 --> 00:27:47,190
and control the car<font color="#E5E5E5"> probably yes and</font>

686
00:27:45,570 --> 00:27:50,220
that's<font color="#E5E5E5"> something we wanted to address</font>

687
00:27:47,190 --> 00:27:53,940
here<font color="#CCCCCC"> so what you need</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> top of just</font>

688
00:27:50,220 --> 00:27:55,950
<font color="#E5E5E5">having a protocol that gives you message</font>

689
00:27:53,940 --> 00:28:00,000
authentication<font color="#E5E5E5"> is a way to encapsulate</font>

690
00:27:55,950 --> 00:28:03,299
software<font color="#CCCCCC"> security and</font><font color="#E5E5E5"> and software</font>

691
00:28:00,000 --> 00:28:05,490
component authentication<font color="#E5E5E5"> somehow in that</font>

692
00:28:03,299 --> 00:28:07,860
<font color="#CCCCCC">system</font><font color="#E5E5E5"> and to do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> all fast enough to</font>

693
00:28:05,490 --> 00:28:10,770
do it all with probably hardware support

694
00:28:07,860 --> 00:28:12,270
for<font color="#E5E5E5"> cryptographic operations so</font><font color="#CCCCCC"> that</font>

695
00:28:10,770 --> 00:28:14,908
it's actually<font color="#CCCCCC"> viable</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> real time</font>

696
00:28:12,270 --> 00:28:16,289
context in a<font color="#E5E5E5"> safety-critical systems so</font>

697
00:28:14,909 --> 00:28:19,590
essentially that's where san'ko's comes

698
00:28:16,289 --> 00:28:22,990
into play we have

699
00:28:19,590 --> 00:28:24,550
we have in<font color="#E5E5E5"> such a car Network you</font><font color="#CCCCCC"> have a</font>

700
00:28:22,990 --> 00:28:26,350
lot of<font color="#E5E5E5"> software right</font><font color="#CCCCCC"> you don't just</font>

701
00:28:24,550 --> 00:28:28,750
have your critical application that

702
00:28:26,350 --> 00:28:31,810
consists of let's say a device driver

703
00:28:28,750 --> 00:28:33,610
<font color="#E5E5E5">for your brake</font><font color="#CCCCCC"> pedal and a piece of</font>

704
00:28:31,810 --> 00:28:36,639
application<font color="#CCCCCC"> code</font><font color="#E5E5E5"> that transmits brake</font>

705
00:28:33,610 --> 00:28:38,290
messages to some ABS system and a piece

706
00:28:36,640 --> 00:28:40,120
<font color="#E5E5E5">of software on the ABS system</font><font color="#CCCCCC"> that</font>

707
00:28:38,290 --> 00:28:41,649
<font color="#CCCCCC">gathers information from</font><font color="#E5E5E5"> the different</font>

708
00:28:40,120 --> 00:28:43,239
rotation sensors in the state<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

709
00:28:41,650 --> 00:28:45,760
individual brakes to send out new

710
00:28:43,240 --> 00:28:47,380
signals you also<font color="#E5E5E5"> have like little</font>

711
00:28:45,760 --> 00:28:50,350
operating systems you have<font color="#CCCCCC"> a lot of</font>

712
00:28:47,380 --> 00:28:52,000
software<font color="#E5E5E5"> that controls communication</font>

713
00:28:50,350 --> 00:28:53,949
protocols<font color="#CCCCCC"> that</font><font color="#E5E5E5"> implements communication</font>

714
00:28:52,000 --> 00:28:55,540
protocols<font color="#E5E5E5"> and all that forms a pretty</font>

715
00:28:53,950 --> 00:28:57,210
big<font color="#E5E5E5"> software stack so what we're trying</font>

716
00:28:55,540 --> 00:29:01,000
<font color="#E5E5E5">to do with</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> approach here</font><font color="#CCCCCC"> is to</font>

717
00:28:57,210 --> 00:29:02,800
<font color="#CCCCCC">isolate the critical application code in</font>

718
00:29:01,000 --> 00:29:05,470
<font color="#E5E5E5">these protected modules so</font><font color="#CCCCCC"> that only</font>

719
00:29:02,800 --> 00:29:09,280
they would be able<font color="#E5E5E5"> to encrypt decrypt</font>

720
00:29:05,470 --> 00:29:11,800
<font color="#E5E5E5">use the hardware crypto and protection</font>

721
00:29:09,280 --> 00:29:13,810
primitives of<font color="#E5E5E5"> these architectures while</font>

722
00:29:11,800 --> 00:29:15,580
all the rest<font color="#E5E5E5"> is untrusted that doesn't</font>

723
00:29:13,810 --> 00:29:17,800
mean<font color="#E5E5E5"> that this untrusted software is</font>

724
00:29:15,580 --> 00:29:20,169
unnecessary<font color="#E5E5E5"> it's certainly necessary for</font>

725
00:29:17,800 --> 00:29:22,330
functionality<font color="#CCCCCC"> but it's not necessary to</font>

726
00:29:20,170 --> 00:29:24,010
<font color="#E5E5E5">maintain</font><font color="#CCCCCC"> the security properties of this</font>

727
00:29:22,330 --> 00:29:31,810
<font color="#E5E5E5">distributed application you</font><font color="#CCCCCC"> have in a</font>

728
00:29:24,010 --> 00:29:34,120
core<font color="#E5E5E5"> aware so in a traditional</font><font color="#CCCCCC"> setup you</font>

729
00:29:31,810 --> 00:29:35,889
have<font color="#E5E5E5"> various approaches how this kind of</font>

730
00:29:34,120 --> 00:29:37,510
security can be<font color="#E5E5E5"> harmed you have</font><font color="#CCCCCC"> ro</font>

731
00:29:35,890 --> 00:29:39,400
control<font color="#CCCCCC"> units someone might just stick</font>

732
00:29:37,510 --> 00:29:41,440
in one<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> black box dongles from</font>

733
00:29:39,400 --> 00:29:43,200
your insurer<font color="#CCCCCC"> to inject messages or that</font>

734
00:29:41,440 --> 00:29:45,550
<font color="#E5E5E5">could</font><font color="#CCCCCC"> potentially inject messages</font>

735
00:29:43,200 --> 00:29:49,900
<font color="#CCCCCC">someone might do remote attack against</font>

736
00:29:45,550 --> 00:29:52,149
the car this it's basically<font color="#E5E5E5"> all ruled</font>

737
00:29:49,900 --> 00:29:53,950
out by our approach<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> first</font>

738
00:29:52,150 --> 00:29:56,050
have this kind of software

739
00:29:53,950 --> 00:30:00,280
authentication you then have message

740
00:29:56,050 --> 00:30:01,780
authentication over the bus and trusted

741
00:30:00,280 --> 00:30:06,149
computing<font color="#E5E5E5"> or san'ko's is the</font>

742
00:30:01,780 --> 00:30:08,680
infrastructure to implement this now

743
00:30:06,150 --> 00:30:10,960
<font color="#E5E5E5">talk about performance</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are some</font>

744
00:30:08,680 --> 00:30:13,390
<font color="#E5E5E5">measurements we've done so the</font>

745
00:30:10,960 --> 00:30:15,720
interesting perspective here is that if

746
00:30:13,390 --> 00:30:17,620
<font color="#E5E5E5">you do</font><font color="#CCCCCC"> it in software</font><font color="#E5E5E5"> your</font>

747
00:30:15,720 --> 00:30:20,500
authentication will typically need like

748
00:30:17,620 --> 00:30:22,389
six<font color="#E5E5E5"> seven milliseconds on on a AVR</font>

749
00:30:20,500 --> 00:30:24,610
controller<font color="#E5E5E5"> or on a</font><font color="#CCCCCC"> Tsang costar</font>

750
00:30:22,390 --> 00:30:26,920
controller<font color="#E5E5E5"> if you do it in hardware you</font>

751
00:30:24,610 --> 00:30:28,780
are<font color="#CCCCCC"> actually fast enough you're below</font>

752
00:30:26,920 --> 00:30:30,940
the<font color="#CCCCCC"> three millisecond margin which</font>

753
00:30:28,780 --> 00:30:31,850
allows you to<font color="#CCCCCC"> use this kind of stuff at</font>

754
00:30:30,940 --> 00:30:33,320
least<font color="#E5E5E5"> in a</font>

755
00:30:31,850 --> 00:30:36,080
automotive<font color="#CCCCCC"> context as a safety critical</font>

756
00:30:33,320 --> 00:30:39,049
system<font color="#E5E5E5"> that's quite important another</font>

757
00:30:36,080 --> 00:30:41,149
<font color="#E5E5E5">interesting observation is that the</font>

758
00:30:39,049 --> 00:30:43,490
software<font color="#E5E5E5"> isolation</font><font color="#CCCCCC"> that we do on top of</font>

759
00:30:41,150 --> 00:30:45,500
just doing cryptography isn't very

760
00:30:43,490 --> 00:30:48,440
<font color="#E5E5E5">expensive it just imposes an overhead of</font>

761
00:30:45,500 --> 00:30:51,020
about<font color="#CCCCCC"> 5%</font><font color="#E5E5E5"> maybe which is typically quite</font>

762
00:30:48,440 --> 00:30:54,140
doable<font color="#E5E5E5"> in within the safety margins of</font>

763
00:30:51,020 --> 00:30:56,780
these<font color="#E5E5E5"> systems</font><font color="#CCCCCC"> and of course importantly</font>

764
00:30:54,140 --> 00:31:00,309
there are<font color="#E5E5E5"> many many applications</font><font color="#CCCCCC"> to this</font>

765
00:30:56,780 --> 00:31:02,418
kind<font color="#E5E5E5"> of system that go far beyond</font>

766
00:31:00,309 --> 00:31:04,428
automotive computing so if you think

767
00:31:02,419 --> 00:31:05,750
<font color="#CCCCCC">about</font><font color="#E5E5E5"> smart</font><font color="#CCCCCC"> build applications the smart</font>

768
00:31:04,429 --> 00:31:07,730
<font color="#CCCCCC">grid</font><font color="#E5E5E5"> of the Ukraine has</font><font color="#CCCCCC"> been hacked</font>

769
00:31:05,750 --> 00:31:10,280
<font color="#E5E5E5">quite recently in the take over from</font>

770
00:31:07,730 --> 00:31:14,240
here we really<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> protect these</font>

771
00:31:10,280 --> 00:31:16,668
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> systems</font><font color="#E5E5E5"> in a European context in</font>

772
00:31:14,240 --> 00:31:19,039
a national<font color="#CCCCCC"> security context</font><font color="#E5E5E5"> we want to</font>

773
00:31:16,669 --> 00:31:20,960
protect medical devices we want<font color="#E5E5E5"> to</font>

774
00:31:19,039 --> 00:31:24,850
protect industrial control systems<font color="#E5E5E5"> that</font>

775
00:31:20,960 --> 00:31:24,850
could<font color="#CCCCCC"> potentially also be</font><font color="#E5E5E5"> abused</font><font color="#CCCCCC"> to</font>

776
00:31:24,880 --> 00:31:31,220
actually have disastrous<font color="#CCCCCC"> consequences on</font>

777
00:31:27,860 --> 00:31:33,199
our<font color="#E5E5E5"> society on our countries so there's</font>

778
00:31:31,220 --> 00:31:35,270
a whole<font color="#CCCCCC"> range</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> applications that</font><font color="#E5E5E5"> can</font>

779
00:31:33,200 --> 00:31:38,450
<font color="#CCCCCC">be</font><font color="#E5E5E5"> used here where</font><font color="#CCCCCC"> our technology can</font>

780
00:31:35,270 --> 00:31:40,129
apply and what we outline in<font color="#E5E5E5"> in the the</font>

781
00:31:38,450 --> 00:31:42,549
paper<font color="#E5E5E5"> I'm citing there at the bottom</font><font color="#CCCCCC"> is</font>

782
00:31:40,130 --> 00:31:44,510
essentially<font color="#E5E5E5"> a notion of authentic</font>

783
00:31:42,549 --> 00:31:46,309
execution that you can use in this

784
00:31:44,510 --> 00:31:51,580
context and authentic execution means

785
00:31:46,309 --> 00:31:54,470
that you can essentially<font color="#E5E5E5"> explain all</font>

786
00:31:51,580 --> 00:31:57,860
outputs<font color="#E5E5E5"> of one of these embedded control</font>

787
00:31:54,470 --> 00:31:59,960
systems based on<font color="#E5E5E5"> the inputs you give to</font>

788
00:31:57,860 --> 00:32:02,059
<font color="#E5E5E5">that system and the software</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> of the</font>

789
00:31:59,960 --> 00:32:04,100
system modulo of course bugs in the

790
00:32:02,059 --> 00:32:06,379
hardware<font color="#E5E5E5"> modulo of course bugs in the</font>

791
00:32:04,100 --> 00:32:09,860
<font color="#E5E5E5">software but these orthogonal</font><font color="#CCCCCC"> lines of</font>

792
00:32:06,380 --> 00:32:13,010
research orthogonal<font color="#CCCCCC"> lines of work</font><font color="#E5E5E5"> in in</font>

793
00:32:09,860 --> 00:32:14,719
testing in system verification<font color="#CCCCCC"> to give</font>

794
00:32:13,010 --> 00:32:16,250
you very<font color="#E5E5E5"> strong guarantees that</font><font color="#CCCCCC"> you've</font>

795
00:32:14,720 --> 00:32:18,500
actually implemented the right thing and

796
00:32:16,250 --> 00:32:21,950
that<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are no easily abusable</font>

797
00:32:18,500 --> 00:32:26,320
<font color="#E5E5E5">channels mechanisms in these components</font>

798
00:32:21,950 --> 00:32:29,330
that's what you have to<font color="#E5E5E5"> rule out so</font>

799
00:32:26,320 --> 00:32:30,950
we're actually here<font color="#CCCCCC"> to almost finish</font>

800
00:32:29,330 --> 00:32:34,189
this talk<font color="#E5E5E5"> I still have video to show and</font>

801
00:32:30,950 --> 00:32:36,890
I still want<font color="#CCCCCC"> to summarize</font><font color="#E5E5E5"> this so I</font>

802
00:32:34,190 --> 00:32:40,510
think the key thing<font color="#CCCCCC"> for security is to</font>

803
00:32:36,890 --> 00:32:42,580
focus<font color="#E5E5E5"> on understanding systems</font>

804
00:32:40,510 --> 00:32:44,230
<font color="#CCCCCC">understanding systems</font><font color="#E5E5E5"> understand</font>

805
00:32:42,580 --> 00:32:46,418
attackers understanding security

806
00:32:44,230 --> 00:32:51,519
requirements<font color="#E5E5E5"> without this you will never</font>

807
00:32:46,419 --> 00:32:54,789
be able<font color="#CCCCCC"> to design</font><font color="#E5E5E5"> lasting reliable</font>

808
00:32:51,519 --> 00:32:57,399
security solutions for anything<font color="#CCCCCC"> and it</font>

809
00:32:54,789 --> 00:32:59,080
is my<font color="#E5E5E5"> quite strong belief that to do</font>

810
00:32:57,399 --> 00:33:01,000
this you<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to rely on open</font><font color="#CCCCCC"> source</font>

811
00:32:59,080 --> 00:33:04,299
components<font color="#E5E5E5"> be it</font><font color="#CCCCCC"> hardware be a software</font>

812
00:33:01,000 --> 00:33:07,630
<font color="#CCCCCC">I believe that there is no other way to</font>

813
00:33:04,299 --> 00:33:09,158
actually<font color="#E5E5E5"> come up</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> solution that is</font>

814
00:33:07,630 --> 00:33:12,970
<font color="#E5E5E5">adaptable that can be well understood</font>

815
00:33:09,159 --> 00:33:14,620
<font color="#CCCCCC">and that can actually</font><font color="#E5E5E5"> give you some some</font>

816
00:33:12,970 --> 00:33:16,600
lasting notion of security<font color="#CCCCCC"> for these</font>

817
00:33:14,620 --> 00:33:19,090
<font color="#E5E5E5">systems the next thing is trust</font>

818
00:33:16,600 --> 00:33:20,860
<font color="#CCCCCC">computing is just one little</font><font color="#E5E5E5"> building</font>

819
00:33:19,090 --> 00:33:22,750
block that<font color="#E5E5E5"> gives you certain</font><font color="#CCCCCC"> features</font>

820
00:33:20,860 --> 00:33:25,389
<font color="#CCCCCC">like at a station like</font><font color="#E5E5E5"> key management</font>

821
00:33:22,750 --> 00:33:26,830
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example that you can</font><font color="#E5E5E5"> stick in</font><font color="#CCCCCC"> in two</font>

822
00:33:25,389 --> 00:33:29,199
specific<font color="#CCCCCC"> systems</font><font color="#E5E5E5"> but you have to be</font>

823
00:33:26,830 --> 00:33:31,360
<font color="#E5E5E5">willing to adapt so if it essentially</font>

824
00:33:29,200 --> 00:33:33,010
turns<font color="#E5E5E5"> out at some point that certain</font>

825
00:33:31,360 --> 00:33:35,080
interests of computing<font color="#CCCCCC"> RC architectures</font>

826
00:33:33,010 --> 00:33:37,658
are not<font color="#E5E5E5"> reliable anymore</font><font color="#CCCCCC"> all that you</font>

827
00:33:35,080 --> 00:33:39,490
<font color="#E5E5E5">need stronger guarantees then the when</font>

828
00:33:37,659 --> 00:33:40,720
your choice of architectures provides

829
00:33:39,490 --> 00:33:42,190
you<font color="#E5E5E5"> either want to adopt the</font>

830
00:33:40,720 --> 00:33:44,139
architecture<font color="#E5E5E5"> or you want to</font><font color="#CCCCCC"> adapt your</font>

831
00:33:42,190 --> 00:33:46,590
system enjoy a<font color="#E5E5E5"> tracker model and and go</font>

832
00:33:44,139 --> 00:33:48,969
for a new<font color="#E5E5E5"> design now</font>

833
00:33:46,590 --> 00:33:50,260
<font color="#CCCCCC">Santos is made exactly for</font><font color="#E5E5E5"> this design</font>

834
00:33:48,970 --> 00:33:53,230
<font color="#E5E5E5">course is made for understanding</font>

835
00:33:50,260 --> 00:33:55,809
<font color="#CCCCCC">Santos's is a to a large extent</font><font color="#E5E5E5"> research</font>

836
00:33:53,230 --> 00:33:58,450
prototype<font color="#E5E5E5"> that we built to understand</font>

837
00:33:55,809 --> 00:34:01,408
how to<font color="#E5E5E5"> develop</font><font color="#CCCCCC"> software how to</font><font color="#E5E5E5"> develop</font>

838
00:33:58,450 --> 00:34:03,909
this kind of software<font color="#E5E5E5"> how to use</font>

839
00:34:01,409 --> 00:34:07,269
security<font color="#CCCCCC"> primitives as we know them from</font>

840
00:34:03,909 --> 00:34:09,490
<font color="#CCCCCC">trust computing and how to</font><font color="#E5E5E5"> analyze this</font>

841
00:34:07,269 --> 00:34:11,589
whole<font color="#E5E5E5"> system to understand the</font>

842
00:34:09,489 --> 00:34:14,500
<font color="#E5E5E5">implications to understand the</font>

843
00:34:11,589 --> 00:34:16,389
weaknesses<font color="#CCCCCC"> to understand how</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> adapt</font>

844
00:34:14,500 --> 00:34:19,230
these systems<font color="#E5E5E5"> and change them so that</font>

845
00:34:16,389 --> 00:34:22,720
they<font color="#E5E5E5"> can work as reliable security</font>

846
00:34:19,230 --> 00:34:24,250
solutions in in future scenarios so

847
00:34:22,719 --> 00:34:26,618
<font color="#CCCCCC">Santos is</font><font color="#E5E5E5"> particularly neat in that</font>

848
00:34:24,250 --> 00:34:28,480
<font color="#E5E5E5">sense it's</font><font color="#CCCCCC"> open-source it builds on on</font>

849
00:34:26,619 --> 00:34:30,339
an<font color="#CCCCCC"> open source</font><font color="#E5E5E5"> hardware it extends this</font>

850
00:34:28,480 --> 00:34:32,949
<font color="#E5E5E5">open source hardware it's a very small</font>

851
00:34:30,339 --> 00:34:34,779
<font color="#E5E5E5">trusted computing base only in hardware</font>

852
00:34:32,949 --> 00:34:38,290
that<font color="#CCCCCC"> allows you to do this key</font>

853
00:34:34,780 --> 00:34:40,450
derivation step that<font color="#E5E5E5"> allows you</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> at</font>

854
00:34:38,290 --> 00:34:43,779
the station steps<font color="#E5E5E5"> it has software a test</font>

855
00:34:40,449 --> 00:34:45,489
<font color="#E5E5E5">multiple individual components isolate</font>

856
00:34:43,780 --> 00:34:48,040
multiple individual components it make

857
00:34:45,489 --> 00:34:50,168
them interact in a secure way even in a

858
00:34:48,040 --> 00:34:52,690
distributed<font color="#E5E5E5"> context where you have a</font>

859
00:34:50,168 --> 00:34:54,460
huge<font color="#CCCCCC"> network of</font><font color="#E5E5E5"> this kind of</font>

860
00:34:52,690 --> 00:34:56,770
little<font color="#CCCCCC"> microcontrollers that somehow</font>

861
00:34:54,460 --> 00:34:58,930
must interact<font color="#E5E5E5"> to achieve something</font><font color="#CCCCCC"> to</font>

862
00:34:56,770 --> 00:35:01,300
<font color="#E5E5E5">achieve some safety</font><font color="#CCCCCC"> critical</font>

863
00:34:58,930 --> 00:35:03,009
<font color="#E5E5E5">functionality to achieve some IOT</font>

864
00:35:01,300 --> 00:35:04,900
sensing functionality something like

865
00:35:03,010 --> 00:35:07,330
that<font color="#E5E5E5"> many applications</font><font color="#CCCCCC"> to this kind of</font>

866
00:35:04,900 --> 00:35:09,040
stuff<font color="#E5E5E5"> but of course talking about this</font>

867
00:35:07,330 --> 00:35:12,779
<font color="#E5E5E5">as a research prototype there's a lot of</font>

868
00:35:09,040 --> 00:35:17,740
ongoing<font color="#CCCCCC"> and open stuff to look into so</font>

869
00:35:12,780 --> 00:35:20,380
we've worked a lot<font color="#E5E5E5"> in in in in the the</font>

870
00:35:17,740 --> 00:35:21,910
<font color="#CCCCCC">few parts that</font><font color="#E5E5E5"> are green up</font><font color="#CCCCCC"> there and I</font>

871
00:35:20,380 --> 00:35:24,490
<font color="#CCCCCC">think we understand them quite well</font><font color="#E5E5E5"> so</font>

872
00:35:21,910 --> 00:35:27,879
one of them is IOT trust<font color="#CCCCCC"> assessments so</font>

873
00:35:24,490 --> 00:35:31,020
can you<font color="#E5E5E5"> use a individual trusted</font>

874
00:35:27,880 --> 00:35:33,280
<font color="#CCCCCC">software module in the context</font><font color="#E5E5E5"> of an</font>

875
00:35:31,020 --> 00:35:35,980
untrusted let's say<font color="#E5E5E5"> Kentucky like</font>

876
00:35:33,280 --> 00:35:38,500
<font color="#E5E5E5">operating system kernel and and use this</font>

877
00:35:35,980 --> 00:35:39,820
one<font color="#E5E5E5"> module</font><font color="#CCCCCC"> to do some some inspection of</font>

878
00:35:38,500 --> 00:35:42,220
the running system<font color="#E5E5E5"> can you for example</font>

879
00:35:39,820 --> 00:35:44,050
<font color="#CCCCCC">make sure that you get reliable</font>

880
00:35:42,220 --> 00:35:46,089
<font color="#CCCCCC">information</font><font color="#E5E5E5"> that no one can mess with</font>

881
00:35:44,050 --> 00:35:49,540
about the software<font color="#E5E5E5"> that is currently</font>

882
00:35:46,090 --> 00:35:51,220
<font color="#E5E5E5">running about the maybe</font><font color="#CCCCCC"> even integrity</font>

883
00:35:49,540 --> 00:35:52,660
of<font color="#E5E5E5"> that software has it been modified</font>

884
00:35:51,220 --> 00:35:54,189
<font color="#E5E5E5">has an attack a pre tampering with a</font>

885
00:35:52,660 --> 00:35:55,720
list of<font color="#CCCCCC"> processes things</font><font color="#E5E5E5"> like that</font>

886
00:35:54,190 --> 00:35:57,370
<font color="#E5E5E5">that's what you can do here</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> course</font>

887
00:35:55,720 --> 00:35:58,720
that's<font color="#CCCCCC"> that's kind</font><font color="#E5E5E5"> of invasive already</font>

888
00:35:57,370 --> 00:36:01,630
so that goes into the direction of

889
00:35:58,720 --> 00:36:03,819
treacherous computing another thing

890
00:36:01,630 --> 00:36:05,110
we've been<font color="#CCCCCC"> looking into is secure I also</font>

891
00:36:03,820 --> 00:36:07,450
<font color="#E5E5E5">this is what I've been talking</font><font color="#CCCCCC"> about</font>

892
00:36:05,110 --> 00:36:09,730
<font color="#E5E5E5">before this notion of extending a</font>

893
00:36:07,450 --> 00:36:12,850
trusted path from input devices<font color="#E5E5E5"> over</font>

894
00:36:09,730 --> 00:36:14,560
device drivers over<font color="#E5E5E5"> application modules</font>

895
00:36:12,850 --> 00:36:16,270
that do some data processing again<font color="#CCCCCC"> to</font>

896
00:36:14,560 --> 00:36:18,040
device drivers and<font color="#E5E5E5"> output modules I</font>

897
00:36:16,270 --> 00:36:20,530
think we have a strong even formal

898
00:36:18,040 --> 00:36:22,320
<font color="#CCCCCC">notion about</font><font color="#E5E5E5"> how this can work how what</font>

899
00:36:20,530 --> 00:36:28,120
<font color="#E5E5E5">security guarantees we get out of</font><font color="#CCCCCC"> this</font>

900
00:36:22,320 --> 00:36:29,830
<font color="#CCCCCC">the third thing is programming</font><font color="#E5E5E5"> models</font>

901
00:36:28,120 --> 00:36:31,630
for kind of developing these

902
00:36:29,830 --> 00:36:33,340
applications<font color="#E5E5E5"> and deploying them so we</font>

903
00:36:31,630 --> 00:36:35,650
<font color="#E5E5E5">came</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with a little extension of C</font>

904
00:36:33,340 --> 00:36:38,580
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is a like</font><font color="#E5E5E5"> an reactive style</font>

905
00:36:35,650 --> 00:36:41,710
language that you<font color="#E5E5E5"> can use to write</font>

906
00:36:38,580 --> 00:36:43,720
application modules that can then be

907
00:36:41,710 --> 00:36:45,580
deployed<font color="#CCCCCC"> on multiple nodes</font><font color="#E5E5E5"> and interact</font>

908
00:36:43,720 --> 00:36:47,560
securely and the whole key negotiation

909
00:36:45,580 --> 00:36:49,540
the whole<font color="#CCCCCC"> configuration of that network</font>

910
00:36:47,560 --> 00:36:50,680
is<font color="#E5E5E5"> pretty much automatic it's also</font>

911
00:36:49,540 --> 00:36:52,690
software<font color="#E5E5E5"> that is in the in the public</font>

912
00:36:50,680 --> 00:36:54,009
repositories<font color="#E5E5E5"> but of course there's a lot</font>

913
00:36:52,690 --> 00:36:56,080
of stuff we don't understand very<font color="#E5E5E5"> well</font>

914
00:36:54,010 --> 00:36:57,580
<font color="#CCCCCC">one is of course</font><font color="#E5E5E5"> talking about a</font>

915
00:36:56,080 --> 00:37:00,190
research<font color="#E5E5E5"> prototype they expect their</font>

916
00:36:57,580 --> 00:37:02,110
maturity<font color="#CCCCCC"> issues so</font><font color="#E5E5E5"> I think at the moment</font>

917
00:37:00,190 --> 00:37:02,940
<font color="#E5E5E5">we are still not</font><font color="#CCCCCC"> really sure about what</font>

918
00:37:02,110 --> 00:37:05,069
we need

919
00:37:02,940 --> 00:37:06,540
<font color="#CCCCCC">more Hardware extensions of that you</font>

920
00:37:05,069 --> 00:37:09,420
need to implement<font color="#E5E5E5"> these kind of</font>

921
00:37:06,540 --> 00:37:11,819
guarantees<font color="#CCCCCC"> is that really a cryptic or</font>

922
00:37:09,420 --> 00:37:13,859
is that really<font color="#E5E5E5"> a memory management unit</font>

923
00:37:11,819 --> 00:37:16,230
<font color="#E5E5E5">or would you maybe also need more like a</font>

924
00:37:13,859 --> 00:37:17,910
hardware supported scheduling mechanisms

925
00:37:16,230 --> 00:37:20,490
or maybe would<font color="#E5E5E5"> you need less and you say</font>

926
00:37:17,910 --> 00:37:22,230
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> your cryptography in</font><font color="#E5E5E5"> software is</font>

927
00:37:20,490 --> 00:37:25,529
maybe even much better<font color="#CCCCCC"> because then you</font>

928
00:37:22,230 --> 00:37:27,060
can even change it you can<font color="#E5E5E5"> you can you</font>

929
00:37:25,530 --> 00:37:28,470
can<font color="#E5E5E5"> adapt to</font><font color="#CCCCCC"> false to two</font>

930
00:37:27,060 --> 00:37:29,910
vulnerabilities that<font color="#CCCCCC"> are found in these</font>

931
00:37:28,470 --> 00:37:31,828
algorithms<font color="#CCCCCC"> there are a lot of</font><font color="#E5E5E5"> issues</font>

932
00:37:29,910 --> 00:37:33,839
then of course we also<font color="#E5E5E5"> have issues with</font>

933
00:37:31,829 --> 00:37:37,200
<font color="#E5E5E5">tool maturity so this whole thing builds</font>

934
00:37:33,839 --> 00:37:40,650
on<font color="#CCCCCC"> LLVM which has for our architecture a</font>

935
00:37:37,200 --> 00:37:42,029
couple of weaknesses and the kind of

936
00:37:40,650 --> 00:37:43,710
compiler architecture we've been

937
00:37:42,030 --> 00:37:45,329
building around this has its own

938
00:37:43,710 --> 00:37:46,680
<font color="#E5E5E5">problems and needs to</font><font color="#CCCCCC"> be enhanced</font>

939
00:37:45,329 --> 00:37:49,710
there's a master student<font color="#E5E5E5"> working on this</font>

940
00:37:46,680 --> 00:37:51,930
at the<font color="#E5E5E5"> moment</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a lot of work to</font>

941
00:37:49,710 --> 00:37:54,420
be<font color="#CCCCCC"> done</font><font color="#E5E5E5"> to actually make this a</font><font color="#CCCCCC"> product</font>

942
00:37:51,930 --> 00:37:57,390
<font color="#E5E5E5">that's what it is not what it not is at</font>

943
00:37:54,420 --> 00:37:58,740
the moment then<font color="#E5E5E5"> we also have to</font>

944
00:37:57,390 --> 00:38:00,900
understand the<font color="#E5E5E5"> text against these</font>

945
00:37:58,740 --> 00:38:03,359
architectures better<font color="#E5E5E5"> so even assuming</font>

946
00:38:00,900 --> 00:38:05,550
that isolation<font color="#E5E5E5"> gives you very little</font>

947
00:38:03,359 --> 00:38:07,230
chance for<font color="#E5E5E5"> software attacks like we turn</font>

948
00:38:05,550 --> 00:38:09,030
or in programming or<font color="#CCCCCC"> something like that</font>

949
00:38:07,230 --> 00:38:11,460
<font color="#CCCCCC">we still need</font><font color="#E5E5E5"> to understand side</font>

950
00:38:09,030 --> 00:38:13,380
channels in this context<font color="#E5E5E5"> what can you</font>

951
00:38:11,460 --> 00:38:15,470
learn for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> by observing gaming</font>

952
00:38:13,380 --> 00:38:18,710
behavior of the<font color="#E5E5E5"> system by observing</font>

953
00:38:15,470 --> 00:38:20,578
<font color="#CCCCCC">memory access patterns</font><font color="#E5E5E5"> by observing</font>

954
00:38:18,710 --> 00:38:22,109
<font color="#E5E5E5">interrupt behavior there are many</font>

955
00:38:20,579 --> 00:38:24,180
<font color="#CCCCCC">options where an attacker could</font>

956
00:38:22,109 --> 00:38:26,098
potentially especially in the context<font color="#E5E5E5"> of</font>

957
00:38:24,180 --> 00:38:27,930
an often embedded<font color="#E5E5E5"> device of something</font>

958
00:38:26,099 --> 00:38:30,030
<font color="#E5E5E5">that you might have on</font><font color="#CCCCCC"> your premise that</font>

959
00:38:27,930 --> 00:38:32,279
you might have<font color="#E5E5E5"> unlimited access to that</font>

960
00:38:30,030 --> 00:38:36,569
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> draw open and disassemble and</font>

961
00:38:32,280 --> 00:38:38,670
inspect<font color="#CCCCCC"> that you can interact with</font><font color="#E5E5E5"> by</font>

962
00:38:36,569 --> 00:38:40,650
sending signals<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that you can interact</font>

963
00:38:38,670 --> 00:38:42,869
with<font color="#E5E5E5"> by controlling timing aspects and</font>

964
00:38:40,650 --> 00:38:45,210
so on there<font color="#E5E5E5"> are many issues</font><font color="#CCCCCC"> that an</font>

965
00:38:42,869 --> 00:38:46,619
attacker<font color="#E5E5E5"> could potentially</font><font color="#CCCCCC"> abuse and</font>

966
00:38:45,210 --> 00:38:48,569
another thing is what we are<font color="#CCCCCC"> working on</font>

967
00:38:46,619 --> 00:38:51,030
<font color="#E5E5E5">right now is</font><font color="#CCCCCC"> in this</font><font color="#E5E5E5"> scenario of these</font>

968
00:38:48,569 --> 00:38:52,619
automotive components or powerful

969
00:38:51,030 --> 00:38:53,790
components or medical devices<font color="#E5E5E5"> for</font>

970
00:38:52,619 --> 00:38:56,310
<font color="#CCCCCC">example we really need real-time</font>

971
00:38:53,790 --> 00:39:00,300
<font color="#E5E5E5">guarantees and understanding</font><font color="#CCCCCC"> real-time</font>

972
00:38:56,310 --> 00:39:02,130
<font color="#E5E5E5">is it's not easy especially if you do</font>

973
00:39:00,300 --> 00:39:05,010
cryptographic operations on top of that

974
00:39:02,130 --> 00:39:07,770
because<font color="#E5E5E5"> those</font><font color="#CCCCCC"> taken and not fixed amount</font>

975
00:39:05,010 --> 00:39:09,900
of<font color="#CCCCCC"> times so you normally</font><font color="#E5E5E5"> want to do some</font>

976
00:39:07,770 --> 00:39:11,849
form of<font color="#CCCCCC"> worse</font><font color="#E5E5E5"> case execution time</font>

977
00:39:09,900 --> 00:39:13,110
analysis on<font color="#CCCCCC"> your software to know that</font>

978
00:39:11,849 --> 00:39:14,550
it's done<font color="#E5E5E5"> within</font>

979
00:39:13,110 --> 00:39:15,810
say one mini segment or something like

980
00:39:14,550 --> 00:39:18,450
<font color="#E5E5E5">that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> if you do cryptographic</font>

981
00:39:15,810 --> 00:39:20,670
operations if you have a cryptographic

982
00:39:18,450 --> 00:39:22,350
core in your<font color="#E5E5E5"> component that needs</font><font color="#CCCCCC"> to be</font>

983
00:39:20,670 --> 00:39:24,360
locked to execute an<font color="#CCCCCC"> operation you have</font>

984
00:39:22,350 --> 00:39:26,279
to<font color="#E5E5E5"> wait for that</font><font color="#CCCCCC"> then it comes back all</font>

985
00:39:24,360 --> 00:39:28,950
these kind of<font color="#CCCCCC"> interactions they are very</font>

986
00:39:26,280 --> 00:39:32,670
<font color="#CCCCCC">difficult to manage for this kind</font><font color="#E5E5E5"> of</font>

987
00:39:28,950 --> 00:39:34,620
systems<font color="#E5E5E5"> and of course I've mentioned it</font>

988
00:39:32,670 --> 00:39:36,540
before<font color="#CCCCCC"> you want to have</font><font color="#E5E5E5"> very strong</font>

989
00:39:34,620 --> 00:39:38,880
formal guarantees<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this software</font>

990
00:39:36,540 --> 00:39:40,740
<font color="#CCCCCC">that this Hardware cannot be tampered</font>

991
00:39:38,880 --> 00:39:42,540
<font color="#CCCCCC">with so you want some form of</font>

992
00:39:40,740 --> 00:39:46,350
formalization or formal verification

993
00:39:42,540 --> 00:39:47,940
over these systems<font color="#E5E5E5"> that actually make</font>

994
00:39:46,350 --> 00:39:49,500
<font color="#CCCCCC">sure that if you</font><font color="#E5E5E5"> deploy a piece of</font>

995
00:39:47,940 --> 00:39:52,050
software and<font color="#CCCCCC"> it passes through several</font>

996
00:39:49,500 --> 00:39:55,260
steps<font color="#E5E5E5"> it has no box it has no memory</font>

997
00:39:52,050 --> 00:39:57,060
safety vulnerabilities like the<font color="#CCCCCC"> hardware</font>

998
00:39:55,260 --> 00:39:59,040
thing that you could easily<font color="#CCCCCC"> abused if</font>

999
00:39:57,060 --> 00:40:01,170
it's ever<font color="#E5E5E5"> deployed in a</font><font color="#CCCCCC"> protected module</font>

1000
00:39:59,040 --> 00:40:02,970
and that's an open<font color="#CCCCCC"> line of research</font>

1001
00:40:01,170 --> 00:40:04,800
<font color="#CCCCCC">that's an orthogonal lines</font><font color="#E5E5E5"> that I'm</font>

1002
00:40:02,970 --> 00:40:06,419
pretty<font color="#E5E5E5"> much that I'm very interested in</font>

1003
00:40:04,800 --> 00:40:08,070
<font color="#E5E5E5">it but it's not covered at the moment</font><font color="#CCCCCC"> -</font>

1004
00:40:06,420 --> 00:40:10,500
to an<font color="#E5E5E5"> extent where we could say we are</font>

1005
00:40:08,070 --> 00:40:13,680
<font color="#E5E5E5">we understand this</font><font color="#CCCCCC"> we can deploy</font><font color="#E5E5E5"> this</font>

1006
00:40:10,500 --> 00:40:15,900
kind<font color="#CCCCCC"> of software I think that's the end</font>

1007
00:40:13,680 --> 00:40:17,129
<font color="#E5E5E5">of the technical part I still have a</font>

1008
00:40:15,900 --> 00:40:18,780
video for<font color="#E5E5E5"> you I really</font><font color="#CCCCCC"> want to show you</font>

1009
00:40:17,130 --> 00:40:21,909
a video

1010
00:40:18,780 --> 00:40:21,909
[Music]

1011
00:40:30,910 --> 00:40:34,629
so get<font color="#E5E5E5"> the set up there is no audio</font>

1012
00:40:33,400 --> 00:40:37,450
<font color="#E5E5E5">channel so I'll just talk a little bit</font>

1013
00:40:34,630 --> 00:40:39,220
over it<font color="#E5E5E5"> you see essentially a car</font><font color="#CCCCCC"> setup</font>

1014
00:40:37,450 --> 00:40:42,370
<font color="#E5E5E5">that has several little microcontrollers</font>

1015
00:40:39,220 --> 00:40:44,620
on the right side these<font color="#E5E5E5"> Bingley</font><font color="#CCCCCC"> things</font>

1016
00:40:42,370 --> 00:40:46,180
things<font color="#E5E5E5"> that it also has two</font><font color="#CCCCCC"> dashboards</font>

1017
00:40:44,620 --> 00:40:47,859
normally you don't<font color="#E5E5E5"> have to - sports in a</font>

1018
00:40:46,180 --> 00:40:50,440
car in<font color="#E5E5E5"> this case we have</font><font color="#CCCCCC"> two - sports</font>

1019
00:40:47,860 --> 00:40:52,170
because one is<font color="#E5E5E5"> showing you that the</font>

1020
00:40:50,440 --> 00:40:54,580
right side is<font color="#CCCCCC"> showing</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> how a</font>

1021
00:40:52,170 --> 00:40:56,260
unprotected car<font color="#E5E5E5"> would behave when it is</font>

1022
00:40:54,580 --> 00:40:58,779
under attack<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the left side</font><font color="#E5E5E5"> shows you</font>

1023
00:40:56,260 --> 00:41:03,340
how<font color="#E5E5E5"> our protected setup would behave so</font>

1024
00:40:58,780 --> 00:41:05,650
<font color="#E5E5E5">you have central components that could</font>

1025
00:41:03,340 --> 00:41:08,110
for example simulate an ABS system you

1026
00:41:05,650 --> 00:41:10,570
have these these little<font color="#CCCCCC"> issues on the</font>

1027
00:41:08,110 --> 00:41:12,580
outside that<font color="#E5E5E5"> could for example be brake</font>

1028
00:41:10,570 --> 00:41:14,830
controllers or or controllers that

1029
00:41:12,580 --> 00:41:16,390
measure<font color="#CCCCCC"> rotation speed</font><font color="#E5E5E5"> you have one</font>

1030
00:41:14,830 --> 00:41:19,110
<font color="#CCCCCC">keyboard that's the left keyboard which</font>

1031
00:41:16,390 --> 00:41:21,730
I'm pressing right now<font color="#E5E5E5"> which is used to</font>

1032
00:41:19,110 --> 00:41:23,020
<font color="#E5E5E5">simulate driver interactions so that</font>

1033
00:41:21,730 --> 00:41:25,180
could be your<font color="#E5E5E5"> brake pedal your steering</font>

1034
00:41:23,020 --> 00:41:27,130
wheel<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> increase traction on one</font>

1035
00:41:25,180 --> 00:41:31,120
side you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> increase</font><font color="#CCCCCC"> speed and</font><font color="#E5E5E5"> that is</font>

1036
00:41:27,130 --> 00:41:32,890
all displayed on both dashboards and<font color="#E5E5E5"> the</font>

1037
00:41:31,120 --> 00:41:34,750
individual<font color="#E5E5E5"> microcontrollers will receive</font>

1038
00:41:32,890 --> 00:41:37,150
these messages<font color="#CCCCCC"> and do authentication</font>

1039
00:41:34,750 --> 00:41:39,430
<font color="#CCCCCC">search</font><font color="#E5E5E5"> and find out that they're</font>

1040
00:41:37,150 --> 00:41:41,620
legitimate and then react or not react

1041
00:41:39,430 --> 00:41:43,299
<font color="#E5E5E5">you can use the red keypad</font><font color="#CCCCCC"> now there's</font>

1042
00:41:41,620 --> 00:41:45,069
there's<font color="#CCCCCC"> an</font><font color="#E5E5E5"> attack going</font><font color="#CCCCCC"> on you can use</font>

1043
00:41:43,300 --> 00:41:46,750
the red keypad to actually<font color="#CCCCCC"> simulate the</font>

1044
00:41:45,070 --> 00:41:48,670
attack so an attacker will inject

1045
00:41:46,750 --> 00:41:52,060
messages will execute software on a

1046
00:41:48,670 --> 00:41:54,850
central component and this<font color="#E5E5E5"> will be</font>

1047
00:41:52,060 --> 00:41:56,380
detected<font color="#E5E5E5"> by the protected ECU's that</font>

1048
00:41:54,850 --> 00:41:57,730
show that okay there's<font color="#E5E5E5"> something going</font>

1049
00:41:56,380 --> 00:42:00,370
on there's a bad message being received

1050
00:41:57,730 --> 00:42:01,870
that cannot be<font color="#E5E5E5"> authenticated and this</font>

1051
00:42:00,370 --> 00:42:03,430
<font color="#E5E5E5">results of this message being rejected</font>

1052
00:42:01,870 --> 00:42:06,549
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the controller stays with its</font>

1053
00:42:03,430 --> 00:42:08,529
previous value the<font color="#CCCCCC"> the interesting</font><font color="#E5E5E5"> thing</font>

1054
00:42:06,550 --> 00:42:10,870
is<font color="#CCCCCC"> you see there's a needle dropping on</font>

1055
00:42:08,530 --> 00:42:13,120
<font color="#CCCCCC">the secure display on the left side</font><font color="#E5E5E5"> so</font>

1056
00:42:10,870 --> 00:42:15,220
there<font color="#E5E5E5"> are implications of this attack</font><font color="#CCCCCC"> if</font>

1057
00:42:13,120 --> 00:42:18,910
an attacker control software<font color="#E5E5E5"> on a</font>

1058
00:42:15,220 --> 00:42:21,100
central computing<font color="#CCCCCC"> node of course</font><font color="#E5E5E5"> he will</font>

1059
00:42:18,910 --> 00:42:23,830
<font color="#CCCCCC">probably do something evil</font><font color="#E5E5E5"> let's say</font>

1060
00:42:21,100 --> 00:42:25,779
inhibit the brake system from from

1061
00:42:23,830 --> 00:42:28,569
working properly<font color="#E5E5E5"> he will inhibit</font>

1062
00:42:25,780 --> 00:42:31,000
messages from being passed from<font color="#E5E5E5"> one</font>

1063
00:42:28,570 --> 00:42:33,310
component to<font color="#E5E5E5"> the display or</font><font color="#CCCCCC"> something</font>

1064
00:42:31,000 --> 00:42:36,280
like<font color="#CCCCCC"> that but</font><font color="#E5E5E5"> he does so on only one ECU</font>

1065
00:42:33,310 --> 00:42:38,230
he probably will not be<font color="#CCCCCC"> able to change</font>

1066
00:42:36,280 --> 00:42:40,270
the saved critical behavior of the

1067
00:42:38,230 --> 00:42:42,730
entire<font color="#CCCCCC"> network and</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> an important</font>

1068
00:42:40,270 --> 00:42:44,650
guarantee we get here so by controlling

1069
00:42:42,730 --> 00:42:46,329
<font color="#E5E5E5">this unprotected software you</font>

1070
00:42:44,650 --> 00:42:48,609
availability<font color="#CCCCCC"> guarantees of your network</font>

1071
00:42:46,329 --> 00:42:50,380
<font color="#E5E5E5">but you probably would be able to steer</font>

1072
00:42:48,609 --> 00:42:52,740
your car<font color="#E5E5E5"> in a safe</font><font color="#CCCCCC"> manner of the road</font>

1073
00:42:50,380 --> 00:42:55,359
without just<font color="#E5E5E5"> crashing against an extreme</font>

1074
00:42:52,740 --> 00:42:58,479
that's it I<font color="#CCCCCC"> think I'm done thank</font><font color="#E5E5E5"> you</font>

1075
00:42:55,359 --> 00:43:01,650
very much for listening<font color="#E5E5E5"> to my rumblings</font>

1076
00:42:58,480 --> 00:43:10,539
<font color="#E5E5E5">and I'm happy to answer your</font><font color="#CCCCCC"> questions</font>

1077
00:43:01,650 --> 00:43:10,539
[Applause]

1078
00:43:12,539 --> 00:43:17,890
<font color="#CCCCCC">and from</font><font color="#E5E5E5"> your future work slides</font>

1079
00:43:15,430 --> 00:43:21,730
<font color="#CCCCCC">I took awaited you do not</font><font color="#E5E5E5"> have</font>

1080
00:43:17,890 --> 00:43:23,470
preemption right now so would on<font color="#CCCCCC"> your</font>

1081
00:43:21,730 --> 00:43:26,319
architecture would would<font color="#CCCCCC"> be something</font>

1082
00:43:23,470 --> 00:43:30,160
like<font color="#E5E5E5"> a microkernel be realizable where</font>

1083
00:43:26,319 --> 00:43:32,230
you have force<font color="#E5E5E5"> forceful preemption of</font>

1084
00:43:30,160 --> 00:43:34,990
the untrusted<font color="#CCCCCC"> parts well we have some</font>

1085
00:43:32,230 --> 00:43:37,420
ideas<font color="#CCCCCC"> for implementing preemption so I</font>

1086
00:43:34,990 --> 00:43:38,950
think I will put<font color="#E5E5E5"> it on a future work but</font>

1087
00:43:37,420 --> 00:43:40,270
some microkernel like architecture is

1088
00:43:38,950 --> 00:43:43,868
certainly<font color="#E5E5E5"> underscore for managing</font>

1089
00:43:40,270 --> 00:43:46,329
software<font color="#CCCCCC"> there yes and then the</font><font color="#E5E5E5"> the</font>

1090
00:43:43,869 --> 00:43:48,160
concept of separating the system into

1091
00:43:46,329 --> 00:43:49,539
trusted and untrusted portions<font color="#E5E5E5"> it's</font>

1092
00:43:48,160 --> 00:43:53,649
something that's been done in the past

1093
00:43:49,539 --> 00:43:56,410
<font color="#E5E5E5">for evade F of confidentiality and</font>

1094
00:43:53,650 --> 00:43:58,599
integrity<font color="#E5E5E5"> pretty well researched</font><font color="#CCCCCC"> yes but</font>

1095
00:43:56,410 --> 00:44:01,960
you have you have the the availability

1096
00:43:58,599 --> 00:44:03,640
<font color="#E5E5E5">as a it's the most important thing</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> on</font>

1097
00:44:01,960 --> 00:44:06,490
the<font color="#E5E5E5"> table rate at least</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> these kind of</font>

1098
00:44:03,640 --> 00:44:08,348
<font color="#CCCCCC">systems yes yeah and isn't</font><font color="#E5E5E5"> that an issue</font>

1099
00:44:06,490 --> 00:44:11,049
when you<font color="#CCCCCC"> have the untrusted</font><font color="#E5E5E5"> software</font>

1100
00:44:08,349 --> 00:44:14,559
which could buy some malformed<font color="#CCCCCC"> Hecate</font>

1101
00:44:11,049 --> 00:44:16,720
for example<font color="#CCCCCC"> Maidan</font><font color="#E5E5E5"> mid stop and then</font>

1102
00:44:14,559 --> 00:44:19,210
yeah you have no availability<font color="#E5E5E5"> guarantees</font>

1103
00:44:16,720 --> 00:44:22,990
how do you think you can solve<font color="#E5E5E5"> that for</font>

1104
00:44:19,210 --> 00:44:24,849
this<font color="#E5E5E5"> kind of thing is you so you lose</font>

1105
00:44:22,990 --> 00:44:27,038
<font color="#CCCCCC">the availability</font><font color="#E5E5E5"> guarantees if</font><font color="#CCCCCC"> you're</font>

1106
00:44:24,849 --> 00:44:28,750
untrusted software is<font color="#E5E5E5"> actually required</font>

1107
00:44:27,039 --> 00:44:31,660
<font color="#E5E5E5">to implement them right so that's what I</font>

1108
00:44:28,750 --> 00:44:34,210
meant<font color="#CCCCCC"> before you can isolate the</font>

1109
00:44:31,660 --> 00:44:36,220
application code for security properties

1110
00:44:34,210 --> 00:44:37,750
<font color="#E5E5E5">but not for availability you might lose</font>

1111
00:44:36,220 --> 00:44:39,368
availability there because that depends

1112
00:44:37,750 --> 00:44:41,230
<font color="#CCCCCC">on untrusted</font><font color="#E5E5E5"> paper but of course you can</font>

1113
00:44:39,369 --> 00:44:42,819
extend<font color="#E5E5E5"> that you can slowly say you</font>

1114
00:44:41,230 --> 00:44:44,260
integrate<font color="#E5E5E5"> your scheduler in your trusted</font>

1115
00:44:42,819 --> 00:44:46,058
computing ways to integrate<font color="#E5E5E5"> your</font>

1116
00:44:44,260 --> 00:44:48,039
<font color="#E5E5E5">protocol implementations in your trusted</font>

1117
00:44:46,059 --> 00:44:49,569
computing base and so forth<font color="#E5E5E5"> and by</font>

1118
00:44:48,039 --> 00:44:51,490
combining<font color="#E5E5E5"> these things you</font><font color="#CCCCCC"> actually get</font>

1119
00:44:49,569 --> 00:44:53,680
like<font color="#E5E5E5"> a microphone</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> architecture and</font>

1120
00:44:51,490 --> 00:44:55,240
<font color="#E5E5E5">you get availability yes but of course</font>

1121
00:44:53,680 --> 00:44:58,020
<font color="#E5E5E5">preemption is something you need for</font>

1122
00:44:55,240 --> 00:44:58,020
<font color="#CCCCCC">that which is very</font>

1123
00:45:06,720 --> 00:45:10,430
let's thank<font color="#E5E5E5"> our speaker again</font>

1124
00:45:11,220 --> 00:45:15,370
[Applause]

