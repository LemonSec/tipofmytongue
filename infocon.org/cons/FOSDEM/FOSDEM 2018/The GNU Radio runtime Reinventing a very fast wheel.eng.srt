1
00:00:04,930 --> 00:00:11,809
<font color="#E5E5E5">okay guys</font><font color="#CCCCCC"> so I welcome</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> to my</font>

2
00:00:09,830 --> 00:00:14,690
<font color="#E5E5E5">presentation about gonna</font><font color="#CCCCCC"> raid your</font>

3
00:00:11,809 --> 00:00:18,680
<font color="#CCCCCC">runtime</font><font color="#E5E5E5"> and the subtitle is reinventing</font>

4
00:00:14,690 --> 00:00:20,660
a very fast video<font color="#E5E5E5"> so Derek asked</font><font color="#CCCCCC"> the</font>

5
00:00:18,680 --> 00:00:22,430
<font color="#E5E5E5">question who doesn't know</font><font color="#CCCCCC"> can radio I</font>

6
00:00:20,660 --> 00:00:24,830
think<font color="#CCCCCC"> there were a couple of people or</font>

7
00:00:22,430 --> 00:00:27,740
who never used it<font color="#E5E5E5"> this will be</font><font color="#CCCCCC"> pretty</font>

8
00:00:24,830 --> 00:00:30,019
specific<font color="#CCCCCC"> to</font><font color="#E5E5E5"> grenade you but it might may</font>

9
00:00:27,740 --> 00:00:32,870
also apply to other digital signal

10
00:00:30,019 --> 00:00:36,410
processing frameworks<font color="#E5E5E5"> so yeah my name is</font>

11
00:00:32,870 --> 00:00:37,370
<font color="#CCCCCC">andre</font><font color="#E5E5E5"> Rowley</font><font color="#CCCCCC"> I am yeah I will introduce</font>

12
00:00:36,410 --> 00:00:40,429
myself right now

13
00:00:37,370 --> 00:00:42,650
I will first talk about<font color="#E5E5E5"> the actual state</font>

14
00:00:40,430 --> 00:00:46,460
of dignity or entire runtime so for the

15
00:00:42,650 --> 00:00:49,610
upcoming release<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Radio 3.8 what</font><font color="#E5E5E5"> are</font>

16
00:00:46,460 --> 00:00:52,100
new<font color="#E5E5E5"> features or are there any also I</font>

17
00:00:49,610 --> 00:00:54,920
will talk<font color="#CCCCCC"> about the ignore ad runtime in</font>

18
00:00:52,100 --> 00:00:57,680
the retrospective so what features<font color="#E5E5E5"> did</font>

19
00:00:54,920 --> 00:01:02,689
we or did the previous developers adds

20
00:00:57,680 --> 00:01:06,530
to the runtime and how that did that

21
00:01:02,689 --> 00:01:08,479
come<font color="#CCCCCC"> out in</font><font color="#E5E5E5"> the end</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> then the</font>

22
00:01:06,530 --> 00:01:12,470
new stuff so future of the universe

23
00:01:08,479 --> 00:01:15,110
runtime so I talked with at least<font color="#CCCCCC"> Marcus</font>

24
00:01:12,470 --> 00:01:18,110
and<font color="#CCCCCC"> Percy so we had some like thoughts</font>

25
00:01:15,110 --> 00:01:21,860
and what can we do to improve<font color="#E5E5E5"> the whole</font>

26
00:01:18,110 --> 00:01:24,820
situation<font color="#CCCCCC"> to make things faster or yeah</font>

27
00:01:21,860 --> 00:01:28,370
to improve on other optimization goals

28
00:01:24,820 --> 00:01:32,330
<font color="#E5E5E5">so yeah I am actually</font>

29
00:01:28,370 --> 00:01:35,780
a<font color="#E5E5E5"> EE student at the</font><font color="#CCCCCC"> console Institute of</font>

30
00:01:32,330 --> 00:01:38,960
Technology my primary focus is on DSP

31
00:01:35,780 --> 00:01:42,740
and also communication<font color="#E5E5E5"> engineering</font><font color="#CCCCCC"> I</font>

32
00:01:38,960 --> 00:01:44,720
also currently<font color="#E5E5E5"> run the radio CI so the</font>

33
00:01:42,740 --> 00:01:47,140
little<font color="#E5E5E5"> bill</font><font color="#CCCCCC"> pot thing that is building</font>

34
00:01:44,720 --> 00:01:50,720
all the purest stuff and also<font color="#CCCCCC"> I'm</font>

35
00:01:47,140 --> 00:01:54,620
hurting the web infrastructure so<font color="#CCCCCC"> you</font>

36
00:01:50,720 --> 00:01:59,509
can see nice things on the<font color="#E5E5E5"> website</font><font color="#CCCCCC"> yeah</font>

37
00:01:54,620 --> 00:02:02,600
I started<font color="#E5E5E5"> using and contributing to</font>

38
00:01:59,510 --> 00:02:04,850
<font color="#CCCCCC">create very recently so to start</font><font color="#E5E5E5"> 2016</font>

39
00:02:02,600 --> 00:02:08,690
<font color="#E5E5E5">it's just about two</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> ago so I'm</font>

40
00:02:04,850 --> 00:02:11,780
pretty<font color="#E5E5E5"> young</font><font color="#CCCCCC"> in that</font><font color="#E5E5E5"> respect</font><font color="#CCCCCC"> but I have</font>

41
00:02:08,690 --> 00:02:15,880
a great<font color="#CCCCCC"> interest and will hopefully</font>

42
00:02:11,780 --> 00:02:18,380
contribute more<font color="#CCCCCC"> and more to the radio</font>

43
00:02:15,880 --> 00:02:18,650
infrastructure yeah and I also have fun

44
00:02:18,380 --> 00:02:22,640
with

45
00:02:18,650 --> 00:02:24,079
<font color="#CCCCCC">or sometimes yeah so what's the</font><font color="#E5E5E5"> current</font>

46
00:02:22,640 --> 00:02:27,500
state<font color="#E5E5E5"> so for the upcoming</font>

47
00:02:24,079 --> 00:02:30,829
<font color="#CCCCCC">three-point-nine release the runtime</font>

48
00:02:27,500 --> 00:02:34,129
does not contain like a super new shiny

49
00:02:30,829 --> 00:02:37,430
feature<font color="#E5E5E5"> we want to like push people to</font>

50
00:02:34,129 --> 00:02:41,268
use<font color="#E5E5E5"> it contains a lot of dependency</font>

51
00:02:37,430 --> 00:02:46,159
<font color="#CCCCCC">bumps so the whole radio project is now</font>

52
00:02:41,269 --> 00:02:49,129
porting to QT 5 and<font color="#CCCCCC"> python 3 and gtk 3</font>

53
00:02:46,159 --> 00:02:53,000
and like a lot of<font color="#E5E5E5"> stuff is going</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> but</font>

54
00:02:49,129 --> 00:02:56,120
no like real shiny feature<font color="#E5E5E5"> and this</font>

55
00:02:53,000 --> 00:02:59,659
<font color="#E5E5E5">raises the question are we yet done so</font>

56
00:02:56,120 --> 00:03:03,109
is this whole runtime scheduling thing

57
00:02:59,659 --> 00:03:07,760
done and we can now focus on<font color="#E5E5E5"> only doing</font>

58
00:03:03,109 --> 00:03:10,459
DSP from now on<font color="#CCCCCC"> and</font><font color="#E5E5E5"> unfortunately this</font>

59
00:03:07,760 --> 00:03:12,828
<font color="#E5E5E5">doesn't mean we can</font><font color="#CCCCCC"> stop developing like</font>

60
00:03:10,459 --> 00:03:17,000
the runtime and scheduler and stop

61
00:03:12,829 --> 00:03:20,720
improving basically we have to yeah

62
00:03:17,000 --> 00:03:23,959
<font color="#E5E5E5">improve it and radio is a piece</font><font color="#CCCCCC"> of</font>

63
00:03:20,720 --> 00:03:25,910
<font color="#E5E5E5">software basically electrical engineers</font>

64
00:03:23,959 --> 00:03:29,209
<font color="#CCCCCC">and communication engineers and these P</font>

65
00:03:25,910 --> 00:03:32,660
engineers are attracted to<font color="#E5E5E5"> so most of</font>

66
00:03:29,209 --> 00:03:35,440
the time people work on what they like

67
00:03:32,660 --> 00:03:38,750
<font color="#E5E5E5">to do</font><font color="#CCCCCC"> and that's</font><font color="#E5E5E5"> like these P stuff</font>

68
00:03:35,440 --> 00:03:41,720
<font color="#CCCCCC">runtime is like it's more computer</font>

69
00:03:38,750 --> 00:03:44,389
sciences or you have to do scheduling

70
00:03:41,720 --> 00:03:47,659
<font color="#E5E5E5">you have to do buffer passing or like</font>

71
00:03:44,389 --> 00:03:50,389
buffer handling and that's like a

72
00:03:47,659 --> 00:03:57,108
necessary evil but<font color="#E5E5E5"> you yeah you have to</font>

73
00:03:50,389 --> 00:04:00,319
do it to get your samples around so how

74
00:03:57,109 --> 00:04:03,260
<font color="#E5E5E5">did</font><font color="#CCCCCC"> we come</font><font color="#E5E5E5"> to to the current state so I</font>

75
00:04:00,319 --> 00:04:05,780
have gone gone through the<font color="#E5E5E5"> get history</font>

76
00:04:03,260 --> 00:04:08,209
<font color="#E5E5E5">to like see when new features in the</font>

77
00:04:05,780 --> 00:04:10,400
runtime<font color="#E5E5E5"> can came in so basically already</font>

78
00:04:08,209 --> 00:04:12,650
<font color="#CCCCCC">started</font><font color="#E5E5E5"> out as a simple sample</font>

79
00:04:10,400 --> 00:04:15,470
<font color="#E5E5E5">processing framework so you put in data</font>

80
00:04:12,650 --> 00:04:19,519
<font color="#E5E5E5">on one side you get data out on the</font>

81
00:04:15,470 --> 00:04:23,750
other<font color="#E5E5E5"> side without like other stuff</font>

82
00:04:19,519 --> 00:04:27,050
messing with it then<font color="#E5E5E5"> mm and it was</font>

83
00:04:23,750 --> 00:04:30,200
single thread of<font color="#E5E5E5"> so it was</font><font color="#CCCCCC"> okay out at</font>

84
00:04:27,050 --> 00:04:32,150
the<font color="#E5E5E5"> time for the goal</font><font color="#CCCCCC"> Erik and other</font>

85
00:04:30,200 --> 00:04:36,590
people had to solve the

86
00:04:32,150 --> 00:04:38,989
to solve<font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> just in 2008</font><font color="#CCCCCC"> a</font>

87
00:04:36,590 --> 00:04:43,179
multi-threaded<font color="#E5E5E5"> scheduler the</font><font color="#CCCCCC"> thread per</font>

88
00:04:38,990 --> 00:04:46,160
block scheduler was added to the core

89
00:04:43,180 --> 00:04:48,440
then also message passing was merged so

90
00:04:46,160 --> 00:04:50,740
message<font color="#E5E5E5"> passing is something entirely</font>

91
00:04:48,440 --> 00:04:52,850
different<font color="#CCCCCC"> compared to the symbols</font>

92
00:04:50,740 --> 00:04:55,460
streaming so you know<font color="#E5E5E5"> just like</font>

93
00:04:52,850 --> 00:04:57,950
<font color="#E5E5E5">continuously streaming samples you want</font>

94
00:04:55,460 --> 00:05:03,560
<font color="#E5E5E5">to basically have like packetized data</font>

95
00:04:57,950 --> 00:05:05,930
or like not<font color="#CCCCCC"> backpressure</font><font color="#E5E5E5"> your data then</font>

96
00:05:03,560 --> 00:05:08,120
also a very nice feature like the

97
00:05:05,930 --> 00:05:11,000
tagging capability was merged<font color="#E5E5E5"> so you can</font>

98
00:05:08,120 --> 00:05:14,150
now add metadata to your<font color="#E5E5E5"> to</font><font color="#CCCCCC"> your samples</font>

99
00:05:11,000 --> 00:05:16,670
like<font color="#E5E5E5"> which frequency amplitude and</font>

100
00:05:14,150 --> 00:05:19,130
<font color="#E5E5E5">amplitude but frequency other</font><font color="#CCCCCC"> face</font>

101
00:05:16,670 --> 00:05:23,120
offsets you measured to correct for them

102
00:05:19,130 --> 00:05:25,930
so it<font color="#E5E5E5"> was a nice thing</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> control</font>

103
00:05:23,120 --> 00:05:29,600
port so this was added<font color="#E5E5E5"> to like</font>

104
00:05:25,930 --> 00:05:32,030
introspect<font color="#E5E5E5"> flow graph</font><font color="#CCCCCC"> to have like also</font>

105
00:05:29,600 --> 00:05:33,680
performance counters to see which blocks

106
00:05:32,030 --> 00:05:38,330
are performing well which blocks are

107
00:05:33,680 --> 00:05:41,450
like holding<font color="#E5E5E5"> up the full processing yeah</font>

108
00:05:38,330 --> 00:05:43,010
<font color="#E5E5E5">so it continued and like for the next</font>

109
00:05:41,450 --> 00:05:45,650
release<font color="#E5E5E5"> the singer</font><font color="#CCCCCC"> very scheduler is</font>

110
00:05:43,010 --> 00:05:48,380
thrown out so it's already merged<font color="#E5E5E5"> in</font>

111
00:05:45,650 --> 00:05:50,120
next<font color="#E5E5E5"> so they will want be a single</font>

112
00:05:48,380 --> 00:05:53,540
thread scheduler so we we are<font color="#E5E5E5"> left with</font>

113
00:05:50,120 --> 00:05:57,710
the<font color="#E5E5E5"> thread block scheduler now which is</font>

114
00:05:53,540 --> 00:06:02,050
doing a very<font color="#CCCCCC"> good job but may there</font>

115
00:05:57,710 --> 00:06:05,030
might be some<font color="#E5E5E5"> improvement still so</font>

116
00:06:02,050 --> 00:06:09,590
achievements<font color="#E5E5E5"> right radio is like the</font>

117
00:06:05,030 --> 00:06:12,169
biggest<font color="#E5E5E5"> open source DSP project used we</font>

118
00:06:09,590 --> 00:06:15,109
today we had like<font color="#E5E5E5"> five</font><font color="#CCCCCC"> four five</font>

119
00:06:12,170 --> 00:06:18,110
projects<font color="#E5E5E5"> using</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> it's really good</font>

120
00:06:15,110 --> 00:06:20,510
<font color="#CCCCCC">at what it's doing right now so the back</font>

121
00:06:18,110 --> 00:06:22,970
pressure driven<font color="#CCCCCC"> architecture is great</font>

122
00:06:20,510 --> 00:06:26,030
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> do the sample processing</font><font color="#E5E5E5"> without</font>

123
00:06:22,970 --> 00:06:28,130
hassle<font color="#E5E5E5"> you only have to focus on your</font>

124
00:06:26,030 --> 00:06:30,289
<font color="#CCCCCC">own</font><font color="#E5E5E5"> blocks or the simple block API if</font>

125
00:06:28,130 --> 00:06:32,120
you want to write a fir<font color="#E5E5E5"> filter you you</font>

126
00:06:30,290 --> 00:06:35,330
just focus on what you have<font color="#CCCCCC"> to do to</font>

127
00:06:32,120 --> 00:06:38,570
filter the samples<font color="#E5E5E5"> not how to pass</font>

128
00:06:35,330 --> 00:06:41,659
around<font color="#E5E5E5"> data or to get your data from</font>

129
00:06:38,570 --> 00:06:44,120
your<font color="#CCCCCC"> radio and then somehow manage to</font>

130
00:06:41,660 --> 00:06:45,950
<font color="#E5E5E5">catch up so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is all done by</font><font color="#CCCCCC"> grow</font>

131
00:06:44,120 --> 00:06:49,320
radio it's great

132
00:06:45,950 --> 00:06:51,270
also the gastric boundaries or blocks

133
00:06:49,320 --> 00:06:54,090
are not<font color="#E5E5E5"> interfering with each other in</font>

134
00:06:51,270 --> 00:06:56,430
<font color="#E5E5E5">terms of air concurrency issues or</font>

135
00:06:54,090 --> 00:06:58,619
locking or something<font color="#E5E5E5"> you just do like</font>

136
00:06:56,430 --> 00:07:01,890
sample<font color="#E5E5E5"> processing</font><font color="#CCCCCC"> you don't have a</font>

137
00:06:58,620 --> 00:07:04,500
problem<font color="#E5E5E5"> and this leads to a lot</font><font color="#CCCCCC"> of new</font>

138
00:07:01,890 --> 00:07:06,750
projects<font color="#E5E5E5"> and yeah with today we saw some</font>

139
00:07:04,500 --> 00:07:12,320
and there are<font color="#E5E5E5"> still hundreds of other</font>

140
00:07:06,750 --> 00:07:17,220
projects<font color="#E5E5E5"> and companies</font><font color="#CCCCCC"> using radio so</font>

141
00:07:12,320 --> 00:07:19,890
shortcomings one thing you might notice

142
00:07:17,220 --> 00:07:23,280
when you run like a<font color="#E5E5E5"> blood flow graph</font>

143
00:07:19,890 --> 00:07:25,550
with a lot<font color="#E5E5E5"> of sample process sample</font>

144
00:07:23,280 --> 00:07:28,770
processing<font color="#E5E5E5"> blocks is cache invalidation</font>

145
00:07:25,550 --> 00:07:31,410
<font color="#CCCCCC">so you have like say a hundred</font><font color="#E5E5E5"> blocks</font>

146
00:07:28,770 --> 00:07:34,380
doing stuff<font color="#E5E5E5"> and then the thread per</font>

147
00:07:31,410 --> 00:07:38,310
block scheduler<font color="#E5E5E5"> he will spawn a thread</font>

148
00:07:34,380 --> 00:07:42,540
for<font color="#E5E5E5"> each block and then calling the work</font>

149
00:07:38,310 --> 00:07:44,820
work functions of<font color="#E5E5E5"> each block really</font>

150
00:07:42,540 --> 00:07:48,030
<font color="#E5E5E5">basically hands off the</font><font color="#CCCCCC"> hard work to the</font>

151
00:07:44,820 --> 00:07:50,880
OS and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> OS is then taking the threats</font>

152
00:07:48,030 --> 00:07:53,489
<font color="#E5E5E5">and</font><font color="#CCCCCC"> schedule stem</font><font color="#E5E5E5"> encores and</font><font color="#CCCCCC"> on hyper</font>

153
00:07:50,880 --> 00:07:56,550
<font color="#E5E5E5">threads and</font><font color="#CCCCCC"> it's passing memory around</font>

154
00:07:53,490 --> 00:07:58,710
and arranging<font color="#CCCCCC"> everything which is the</font>

155
00:07:56,550 --> 00:08:01,620
<font color="#CCCCCC">wes</font><font color="#E5E5E5"> is good at that but the OS doesn't</font>

156
00:07:58,710 --> 00:08:03,330
have like<font color="#E5E5E5"> the information how does your</font>

157
00:08:01,620 --> 00:08:08,550
flow graph look<font color="#CCCCCC"> like does it</font><font color="#E5E5E5"> make sense</font>

158
00:08:03,330 --> 00:08:10,349
to like heap like one one stream on one

159
00:08:08,550 --> 00:08:14,000
thread or one CPU

160
00:08:10,350 --> 00:08:16,200
to use the cache and<font color="#CCCCCC"> have not like</font>

161
00:08:14,000 --> 00:08:18,150
invalidate your cache all the time and

162
00:08:16,200 --> 00:08:22,620
then to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to move</font><font color="#E5E5E5"> around between</font>

163
00:08:18,150 --> 00:08:25,979
<font color="#E5E5E5">different CPU blocks also</font><font color="#CCCCCC"> we have a lack</font>

164
00:08:22,620 --> 00:08:29,850
of tests<font color="#E5E5E5"> for core features so if people</font>

165
00:08:25,980 --> 00:08:33,620
like submit<font color="#CCCCCC"> back reports</font><font color="#E5E5E5"> and fixes for</font>

166
00:08:29,850 --> 00:08:35,880
them for coffee<font color="#E5E5E5"> just</font><font color="#CCCCCC"> like tags or or</font>

167
00:08:33,620 --> 00:08:39,000
message<font color="#E5E5E5"> passing or something it's not</font>

168
00:08:35,880 --> 00:08:42,830
always clear if that<font color="#E5E5E5"> only</font><font color="#CCCCCC"> fixes that</font>

169
00:08:39,000 --> 00:08:48,600
back or if it also<font color="#E5E5E5"> in opens up and new</font>

170
00:08:42,830 --> 00:08:49,220
path of bucks coming in so that that's a

171
00:08:48,600 --> 00:08:53,790
bad thing

172
00:08:49,220 --> 00:08:58,710
also the runtime api is sometimes a

173
00:08:53,790 --> 00:09:00,449
little<font color="#E5E5E5"> yeah hidden so you</font>

174
00:08:58,710 --> 00:09:01,860
use just<font color="#E5E5E5"> the normal features and you</font>

175
00:09:00,450 --> 00:09:04,530
will be fine<font color="#CCCCCC"> you won't run</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> issues</font>

176
00:09:01,860 --> 00:09:08,310
but if you start like using<font color="#CCCCCC"> extent</font>

177
00:09:04,530 --> 00:09:11,970
extensive hidden features basically<font color="#E5E5E5"> and</font>

178
00:09:08,310 --> 00:09:16,369
then we remove<font color="#E5E5E5"> them or we update them or</font>

179
00:09:11,970 --> 00:09:19,440
something<font color="#E5E5E5"> happens your blocks break and</font>

180
00:09:16,370 --> 00:09:21,660
probably one of the resolutions later

181
00:09:19,440 --> 00:09:24,330
will<font color="#CCCCCC"> be we want to add like first the</font>

182
00:09:21,660 --> 00:09:27,569
<font color="#E5E5E5">API and then like implement it so we</font>

183
00:09:24,330 --> 00:09:29,550
have a clear clear line where to go<font color="#E5E5E5"> this</font>

184
00:09:27,570 --> 00:09:32,730
probably resulted in just the organic

185
00:09:29,550 --> 00:09:35,219
grown code so<font color="#E5E5E5"> you sort of the timeline</font>

186
00:09:32,730 --> 00:09:38,310
<font color="#E5E5E5">here so it's like eight to nine years</font>

187
00:09:35,220 --> 00:09:40,680
just for<font color="#E5E5E5"> the these features but the</font>

188
00:09:38,310 --> 00:09:43,619
development<font color="#E5E5E5"> started earlier so like ten</font>

189
00:09:40,680 --> 00:09:46,560
years of quote<font color="#E5E5E5"> it's it's quite</font><font color="#CCCCCC"> natural</font>

190
00:09:43,620 --> 00:09:51,270
to<font color="#E5E5E5"> have like some organic structures and</font>

191
00:09:46,560 --> 00:09:53,910
missing missing<font color="#E5E5E5"> dogs so we also have a</font>

192
00:09:51,270 --> 00:09:55,949
lot of lacking face<font color="#CCCCCC"> ft for direct method</font>

193
00:09:53,910 --> 00:09:58,350
<font color="#CCCCCC">calls so if you have like</font><font color="#E5E5E5"> your flow</font>

194
00:09:55,950 --> 00:10:01,290
graph in Python<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can actually call</font>

195
00:09:58,350 --> 00:10:03,120
<font color="#CCCCCC">into blocks</font><font color="#E5E5E5"> and trigger and call</font>

196
00:10:01,290 --> 00:10:05,849
functions<font color="#E5E5E5"> but most of them are not</font>

197
00:10:03,120 --> 00:10:10,380
<font color="#E5E5E5">really</font><font color="#CCCCCC"> that safe and we</font><font color="#E5E5E5"> have no real</font>

198
00:10:05,850 --> 00:10:12,450
means to<font color="#E5E5E5"> protect that right now and also</font>

199
00:10:10,380 --> 00:10:15,900
we have a lot<font color="#CCCCCC"> of wearing</font><font color="#E5E5E5"> code quality so</font>

200
00:10:12,450 --> 00:10:18,900
a lot of contributors over the years

201
00:10:15,900 --> 00:10:21,420
contributed different parts so that's

202
00:10:18,900 --> 00:10:23,630
<font color="#E5E5E5">also quite natural so for the wedding</font>

203
00:10:21,420 --> 00:10:26,699
code quality<font color="#E5E5E5"> I'd just like plotted</font><font color="#CCCCCC"> a</font>

204
00:10:23,630 --> 00:10:29,550
coverage<font color="#E5E5E5"> statistic so in the top we have</font>

205
00:10:26,700 --> 00:10:32,640
<font color="#E5E5E5">the</font><font color="#CCCCCC"> DS P</font><font color="#E5E5E5"> things like</font><font color="#CCCCCC"> geo</font><font color="#E5E5E5"> filter and</font><font color="#CCCCCC"> G</font>

206
00:10:29,550 --> 00:10:35,609
<font color="#CCCCCC">are analog which I very good test tested</font>

207
00:10:32,640 --> 00:10:39,060
quite<font color="#CCCCCC"> well so about 80% of the code</font>

208
00:10:35,610 --> 00:10:40,410
lines run during<font color="#E5E5E5"> tests and then</font>

209
00:10:39,060 --> 00:10:42,989
somewhere in<font color="#CCCCCC"> between you</font><font color="#E5E5E5"> have the</font>

210
00:10:40,410 --> 00:10:45,390
<font color="#CCCCCC">runtime which is sometimes tested by</font>

211
00:10:42,990 --> 00:10:47,820
accident because<font color="#E5E5E5"> it also gets gets run</font>

212
00:10:45,390 --> 00:10:50,090
when you<font color="#E5E5E5"> run anything in grey do but</font>

213
00:10:47,820 --> 00:10:54,480
they also<font color="#E5E5E5"> actually tests in the</font><font color="#CCCCCC"> runtime</font>

214
00:10:50,090 --> 00:10:57,240
<font color="#E5E5E5">but it it's about</font><font color="#CCCCCC"> 60%</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and then we</font>

215
00:10:54,480 --> 00:10:59,250
have like a whole lot<font color="#CCCCCC"> of blocks which is</font>

216
00:10:57,240 --> 00:11:01,980
not<font color="#CCCCCC"> runtime related but in the canary</font>

217
00:10:59,250 --> 00:11:05,430
project<font color="#E5E5E5"> with</font><font color="#CCCCCC"> good job</font><font color="#E5E5E5"> like not tested at</font>

218
00:11:01,980 --> 00:11:07,500
all during<font color="#E5E5E5"> our normal</font><font color="#CCCCCC"> CIE</font><font color="#E5E5E5"> tests so</font>

219
00:11:05,430 --> 00:11:10,130
people encounter bugs and they report in

220
00:11:07,500 --> 00:11:12,890
but it's yeah

221
00:11:10,130 --> 00:11:15,530
then some other<font color="#E5E5E5"> shortcomings people</font>

222
00:11:12,890 --> 00:11:18,140
encounter<font color="#E5E5E5"> and also solve in their own</font>

223
00:11:15,530 --> 00:11:21,230
project is like the integration with

224
00:11:18,140 --> 00:11:24,020
other heterogeneous computing<font color="#CCCCCC"> like</font><font color="#E5E5E5"> if I</font>

225
00:11:21,230 --> 00:11:27,650
own don't only<font color="#E5E5E5"> have</font><font color="#CCCCCC"> like one CPU I want</font>

226
00:11:24,020 --> 00:11:30,500
to use GPU I want to use the an<font color="#E5E5E5"> FPGA or</font>

227
00:11:27,650 --> 00:11:34,280
other these Pico processors

228
00:11:30,500 --> 00:11:38,150
there's no no way of handling this these

229
00:11:34,280 --> 00:11:40,640
custom DMA buffers in<font color="#CCCCCC"> grade</font><font color="#E5E5E5"> yo so people</font>

230
00:11:38,150 --> 00:11:43,010
come up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> solutions</font><font color="#CCCCCC"> at leaf for the</font>

231
00:11:40,640 --> 00:11:46,040
GPU side there are<font color="#E5E5E5"> at least two or three</font>

232
00:11:43,010 --> 00:11:48,819
<font color="#E5E5E5">projects who implemented</font><font color="#CCCCCC"> OpenCL and even</font>

233
00:11:46,040 --> 00:11:51,260
heads<font color="#E5E5E5"> before passing between blocks</font>

234
00:11:48,820 --> 00:11:53,090
since the<font color="#CCCCCC"> runtime doesn't know anything</font>

235
00:11:51,260 --> 00:11:57,050
<font color="#E5E5E5">about this was like finger crossing I</font>

236
00:11:53,090 --> 00:11:59,210
had just passed between<font color="#E5E5E5"> one GPU and then</font>

237
00:11:57,050 --> 00:12:02,089
keep my data on it so I can<font color="#CCCCCC"> use the</font>

238
00:11:59,210 --> 00:12:05,240
<font color="#E5E5E5">maximum performance but also like cloud</font>

239
00:12:02,090 --> 00:12:07,430
or say remote computing I want to<font color="#E5E5E5"> hand</font>

240
00:12:05,240 --> 00:12:09,730
off so I want to<font color="#E5E5E5"> run a flow</font><font color="#CCCCCC"> graph and</font><font color="#E5E5E5"> I</font>

241
00:12:07,430 --> 00:12:13,370
want to hand off<font color="#E5E5E5"> certain parts to other</font>

242
00:12:09,730 --> 00:12:16,430
instances<font color="#CCCCCC"> of my like</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> vis instant</font>

243
00:12:13,370 --> 00:12:18,080
cluster or something<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> pretty hard</font>

244
00:12:16,430 --> 00:12:21,560
to<font color="#E5E5E5"> do in</font><font color="#CCCCCC"> generator</font><font color="#E5E5E5"> right now so you have</font>

245
00:12:18,080 --> 00:12:25,700
<font color="#E5E5E5">to you can for</font><font color="#CCCCCC"> example use 0 mq and then</font>

246
00:12:21,560 --> 00:12:27,439
have one<font color="#E5E5E5"> end implemented and then like</font>

247
00:12:25,700 --> 00:12:29,750
run<font color="#E5E5E5"> another flow graph on the other side</font>

248
00:12:27,440 --> 00:12:32,000
and then you<font color="#CCCCCC"> have to manually make sure</font>

249
00:12:29,750 --> 00:12:35,360
<font color="#E5E5E5">to everything runs at</font><font color="#CCCCCC"> the same time in</font>

250
00:12:32,000 --> 00:12:38,380
his passing<font color="#CCCCCC"> the data</font><font color="#E5E5E5"> correctly also</font>

251
00:12:35,360 --> 00:12:42,440
<font color="#CCCCCC">issues</font><font color="#E5E5E5"> like low latency applications</font>

252
00:12:38,380 --> 00:12:43,220
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is also a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> work was</font><font color="#CCCCCC"> done by</font>

253
00:12:42,440 --> 00:12:46,490
<font color="#E5E5E5">bus seed</font>

254
00:12:43,220 --> 00:12:53,420
<font color="#CCCCCC">Bastian</font><font color="#E5E5E5"> Brussels</font><font color="#CCCCCC"> - for the Wi-Fi stuff</font>

255
00:12:46,490 --> 00:12:55,760
and<font color="#E5E5E5"> basically he had he also looked into</font>

256
00:12:53,420 --> 00:12:57,949
<font color="#E5E5E5">other applications or frameworks and</font>

257
00:12:55,760 --> 00:13:00,140
there was this Microsoft<font color="#E5E5E5"> Syrah which</font>

258
00:12:57,950 --> 00:13:01,030
already<font color="#E5E5E5"> implemented this like</font><font color="#CCCCCC"> ten years</font>

259
00:13:00,140 --> 00:13:05,150
<font color="#CCCCCC">ago</font>

260
00:13:01,030 --> 00:13:08,360
and there are also other<font color="#CCCCCC"> issues with the</font>

261
00:13:05,150 --> 00:13:11,510
current implementation<font color="#E5E5E5"> I skip a</font><font color="#CCCCCC"> little</font>

262
00:13:08,360 --> 00:13:14,900
bit to what we thought of<font color="#E5E5E5"> for the future</font>

263
00:13:11,510 --> 00:13:16,460
<font color="#E5E5E5">of the green</font><font color="#CCCCCC"> ray around time</font><font color="#E5E5E5"> so first I</font>

264
00:13:14,900 --> 00:13:18,230
<font color="#E5E5E5">want to compare to other</font><font color="#CCCCCC"> similar</font>

265
00:13:16,460 --> 00:13:23,279
<font color="#E5E5E5">projects</font><font color="#CCCCCC"> so I</font><font color="#E5E5E5"> already</font><font color="#CCCCCC"> mentioned</font>

266
00:13:18,230 --> 00:13:26,120
<font color="#E5E5E5">Microsoft</font><font color="#CCCCCC"> Syrah what we mean</font><font color="#E5E5E5"> to</font>

267
00:13:23,279 --> 00:13:31,139
design and what's the<font color="#CCCCCC"> timeline for</font><font color="#E5E5E5"> this</font>

268
00:13:26,120 --> 00:13:33,209
for our thoughts<font color="#CCCCCC"> so first question is do</font>

269
00:13:31,139 --> 00:13:34,920
<font color="#CCCCCC">we need to</font><font color="#E5E5E5"> improve the runtime</font><font color="#CCCCCC"> itself</font><font color="#E5E5E5"> at</font>

270
00:13:33,209 --> 00:13:35,869
all<font color="#E5E5E5"> can't we use just already</font>

271
00:13:34,920 --> 00:13:38,998
<font color="#E5E5E5">implemented</font>

272
00:13:35,870 --> 00:13:41,959
<font color="#E5E5E5">yeah processing frameworks or other</font>

273
00:13:38,999 --> 00:13:45,300
computation frameworks to<font color="#E5E5E5"> do the job</font>

274
00:13:41,959 --> 00:13:50,099
<font color="#CCCCCC">even</font><font color="#E5E5E5"> in other signal processing</font>

275
00:13:45,300 --> 00:13:52,920
frameworks<font color="#E5E5E5"> maybe so we have</font><font color="#CCCCCC"> I I did</font><font color="#E5E5E5"> it's</font>

276
00:13:50,100 --> 00:13:55,319
not<font color="#CCCCCC"> a</font><font color="#E5E5E5"> finished list but</font><font color="#CCCCCC"> some projects</font>

277
00:13:52,920 --> 00:13:58,469
who are pretty<font color="#E5E5E5"> similar to what can</font><font color="#CCCCCC"> radio</font>

278
00:13:55,319 --> 00:14:00,420
<font color="#CCCCCC">is</font><font color="#E5E5E5"> doing so</font><font color="#CCCCCC"> sera and</font><font color="#E5E5E5"> there's this SRS</font>

279
00:13:58,470 --> 00:14:03,300
LTE<font color="#E5E5E5"> which are pretty application</font>

280
00:14:00,420 --> 00:14:07,378
<font color="#E5E5E5">specific so one is about Wi-Fi</font><font color="#CCCCCC"> the other</font>

281
00:14:03,300 --> 00:14:10,529
one is<font color="#E5E5E5"> about LTE obviously and also some</font>

282
00:14:07,379 --> 00:14:14,249
<font color="#E5E5E5">other stuff but no other project really</font>

283
00:14:10,529 --> 00:14:17,309
matches the the the goal of<font color="#CCCCCC"> new radio to</font>

284
00:14:14,249 --> 00:14:20,939
have like this generic processing and

285
00:14:17,309 --> 00:14:22,499
also<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the existing ecosystem so</font>

286
00:14:20,939 --> 00:14:25,969
foreign<font color="#E5E5E5"> radio</font><font color="#CCCCCC"> there is already a big</font>

287
00:14:22,499 --> 00:14:29,180
community<font color="#E5E5E5"> and a lot</font><font color="#CCCCCC"> of people doing</font><font color="#E5E5E5"> own</font>

288
00:14:25,970 --> 00:14:34,230
projects on top of the framework and

289
00:14:29,180 --> 00:14:36,479
<font color="#E5E5E5">basically we think</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have to still</font>

290
00:14:34,230 --> 00:14:39,420
continue improving the runtime itself

291
00:14:36,480 --> 00:14:43,610
<font color="#E5E5E5">and can't just use</font><font color="#CCCCCC"> anything else as of</font>

292
00:14:39,420 --> 00:14:46,378
right now<font color="#CCCCCC"> so what are the challenges</font>

293
00:14:43,610 --> 00:14:48,059
<font color="#E5E5E5">would that are not solved currently so I</font>

294
00:14:46,379 --> 00:14:51,899
did like<font color="#CCCCCC"> a list of</font><font color="#E5E5E5"> thought coming so</font>

295
00:14:48,059 --> 00:14:56,279
those are the things we think need to

296
00:14:51,899 --> 00:14:58,439
<font color="#E5E5E5">improve and to continue yeah to</font><font color="#CCCCCC"> provide</font>

297
00:14:56,279 --> 00:15:03,889
<font color="#E5E5E5">radio with a path forward for like new</font>

298
00:14:58,439 --> 00:15:06,870
other developments in in<font color="#E5E5E5"> this regard and</font>

299
00:15:03,889 --> 00:15:09,149
yeah what should<font color="#CCCCCC"> deny</font><font color="#E5E5E5"> API look like so</font>

300
00:15:06,870 --> 00:15:12,240
that's<font color="#E5E5E5"> where like all of you come in</font>

301
00:15:09,149 --> 00:15:14,670
also<font color="#CCCCCC"> to to give us more hints or like</font>

302
00:15:12,240 --> 00:15:16,259
tell<font color="#E5E5E5"> us what you want to see what what's</font>

303
00:15:14,670 --> 00:15:19,378
what's<font color="#E5E5E5"> the current problems or</font>

304
00:15:16,259 --> 00:15:21,870
struggling<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the runtime</font><font color="#E5E5E5"> we see some</font>

305
00:15:19,379 --> 00:15:26,490
projects<font color="#E5E5E5"> not all of them are</font><font color="#CCCCCC"> open source</font>

306
00:15:21,870 --> 00:15:32,660
of<font color="#CCCCCC"> course like hidden between hidden</font><font color="#E5E5E5"> in</font>

307
00:15:26,490 --> 00:15:36,179
in<font color="#E5E5E5"> company walls and what do we yeah</font>

308
00:15:32,660 --> 00:15:38,490
<font color="#CCCCCC">mm-hmm and also</font><font color="#E5E5E5"> how can can we keep</font>

309
00:15:36,179 --> 00:15:42,720
stuff around<font color="#E5E5E5"> without reinventing the</font>

310
00:15:38,490 --> 00:15:44,579
wheel<font color="#E5E5E5"> like</font><font color="#CCCCCC"> miss lights</font><font color="#E5E5E5"> and we don't have</font>

311
00:15:42,720 --> 00:15:46,379
like question answers<font color="#E5E5E5"> for all of these</font>

312
00:15:44,579 --> 00:15:52,579
<font color="#E5E5E5">questions so we still in the</font><font color="#CCCCCC"> process of</font>

313
00:15:46,379 --> 00:15:56,779
<font color="#E5E5E5">working stuff out and first thing is</font>

314
00:15:52,579 --> 00:15:59,910
design theory so<font color="#E5E5E5"> there is already a</font>

315
00:15:56,779 --> 00:16:02,879
thing called like concurrent computing

316
00:15:59,910 --> 00:16:04,799
so that it's just it's describing<font color="#E5E5E5"> what</font>

317
00:16:02,879 --> 00:16:07,439
<font color="#E5E5E5">can write is doing if we leave out all</font>

318
00:16:04,799 --> 00:16:10,620
<font color="#CCCCCC">the digital signal processing and the</font>

319
00:16:07,439 --> 00:16:13,860
radio related stuff basically what we

320
00:16:10,620 --> 00:16:17,730
try<font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve</font><font color="#CCCCCC"> is congruent computing and</font>

321
00:16:13,860 --> 00:16:19,769
there's quite some<font color="#E5E5E5"> ways to describe this</font>

322
00:16:17,730 --> 00:16:23,149
from an academic point of view so

323
00:16:19,769 --> 00:16:27,089
there's like the<font color="#E5E5E5"> actual model is a word</font>

324
00:16:23,149 --> 00:16:30,420
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example Petri</font><font color="#E5E5E5"> Nets</font><font color="#CCCCCC"> or other process</font>

325
00:16:27,089 --> 00:16:33,509
<font color="#CCCCCC">calculi</font><font color="#E5E5E5"> they are called so we can come</font>

326
00:16:30,420 --> 00:16:36,779
<font color="#CCCCCC">up with</font><font color="#E5E5E5"> something that matches modern</font>

327
00:16:33,509 --> 00:16:39,480
<font color="#CCCCCC">radio string</font><font color="#E5E5E5"> and try to apply that</font><font color="#CCCCCC"> and</font>

328
00:16:36,779 --> 00:16:41,970
also the design<font color="#CCCCCC"> goes in the end</font><font color="#E5E5E5"> they</font>

329
00:16:39,480 --> 00:16:44,339
<font color="#CCCCCC">wary because</font><font color="#E5E5E5"> you can optimize</font><font color="#CCCCCC"> for</font>

330
00:16:41,970 --> 00:16:46,049
<font color="#E5E5E5">latency that means in a practical sense</font>

331
00:16:44,339 --> 00:16:49,350
you have<font color="#E5E5E5"> to squeeze</font><font color="#CCCCCC"> down your your</font>

332
00:16:46,049 --> 00:16:52,110
buffer sizes<font color="#E5E5E5"> worry to do very small</font>

333
00:16:49,350 --> 00:16:54,420
<font color="#E5E5E5">sizes or we want to</font><font color="#CCCCCC"> optimize soup for</font>

334
00:16:52,110 --> 00:16:57,269
throughput for example with a<font color="#E5E5E5"> GPU you</font>

335
00:16:54,420 --> 00:17:03,029
<font color="#E5E5E5">need couple of thousands samples to do</font>

336
00:16:57,269 --> 00:17:05,520
like real processing okay<font color="#CCCCCC"> so all the</font>

337
00:17:03,029 --> 00:17:07,648
design goals are obviously<font color="#E5E5E5"> API before</font>

338
00:17:05,520 --> 00:17:09,959
<font color="#CCCCCC">implementation so we are now</font><font color="#E5E5E5"> in the</font>

339
00:17:07,648 --> 00:17:14,069
process of<font color="#E5E5E5"> designing and coming up with</font>

340
00:17:09,959 --> 00:17:16,020
a good<font color="#CCCCCC"> API for</font><font color="#E5E5E5"> people to use in their</font>

341
00:17:14,069 --> 00:17:18,839
<font color="#CCCCCC">own projects and also throughout the</font>

342
00:17:16,020 --> 00:17:21,179
radio tree so there are also a lot<font color="#CCCCCC"> of</font>

343
00:17:18,839 --> 00:17:23,099
blocks there we want to have

344
00:17:21,179 --> 00:17:25,919
configurable scheduling inside the

345
00:17:23,099 --> 00:17:29,610
<font color="#CCCCCC">runtime so that means basically</font><font color="#E5E5E5"> you can</font>

346
00:17:25,919 --> 00:17:32,190
optimize with very little effort or with

347
00:17:29,610 --> 00:17:34,649
<font color="#E5E5E5">not extensive knowledge of the runtime</font>

348
00:17:32,190 --> 00:17:37,559
for latency<font color="#E5E5E5"> but also can optimize for</font>

349
00:17:34,649 --> 00:17:39,209
<font color="#E5E5E5">throughput not only about with buffer</font>

350
00:17:37,559 --> 00:17:42,418
sizes<font color="#E5E5E5"> but with other scheduling</font>

351
00:17:39,210 --> 00:17:44,190
paradigms also include the buffer

352
00:17:42,419 --> 00:17:47,160
<font color="#CCCCCC">management so there was already some</font>

353
00:17:44,190 --> 00:17:51,500
work done<font color="#E5E5E5"> back in 2013</font>

354
00:17:47,160 --> 00:17:55,080
which didn't come<font color="#E5E5E5"> into like the core</font>

355
00:17:51,500 --> 00:17:57,570
unfortunately also<font color="#E5E5E5"> have some more flow</font>

356
00:17:55,080 --> 00:18:00,210
graph<font color="#CCCCCC"> introspection and with that also</font>

357
00:17:57,570 --> 00:18:02,700
remote<font color="#E5E5E5"> computation so those two</font><font color="#CCCCCC"> are also</font>

358
00:18:00,210 --> 00:18:06,200
pretty close together<font color="#CCCCCC"> we get better</font>

359
00:18:02,700 --> 00:18:09,210
introspection we can also have<font color="#E5E5E5"> more</font>

360
00:18:06,200 --> 00:18:11,700
<font color="#CCCCCC">scheduled or flow to other</font><font color="#E5E5E5"> blocks and</font>

361
00:18:09,210 --> 00:18:15,180
have this cross<font color="#E5E5E5"> network communication</font>

362
00:18:11,700 --> 00:18:17,250
basically going and<font color="#E5E5E5"> also we want to keep</font>

363
00:18:15,180 --> 00:18:19,680
all the nice features we<font color="#E5E5E5"> accumulated</font>

364
00:18:17,250 --> 00:18:23,250
over time<font color="#CCCCCC"> so we obviously don't want</font><font color="#E5E5E5"> to</font>

365
00:18:19,680 --> 00:18:25,200
<font color="#E5E5E5">lose multi-threading</font><font color="#CCCCCC"> we want to support</font>

366
00:18:23,250 --> 00:18:28,020
the synchronous streaming which is the

367
00:18:25,200 --> 00:18:36,060
bread and<font color="#CCCCCC"> butter for gainer radio and</font>

368
00:18:28,020 --> 00:18:37,740
<font color="#E5E5E5">also yeah other features be yeah so most</font>

369
00:18:36,060 --> 00:18:41,610
<font color="#E5E5E5">importantly we</font><font color="#CCCCCC"> don't want to reinvent</font>

370
00:18:37,740 --> 00:18:44,280
<font color="#E5E5E5">the</font><font color="#CCCCCC"> wheel we want to continue</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> what</font>

371
00:18:41,610 --> 00:18:46,379
can<font color="#CCCCCC"> radio has accomplished</font><font color="#E5E5E5"> and also we</font>

372
00:18:44,280 --> 00:18:48,480
want to<font color="#E5E5E5"> foster other first projects work</font>

373
00:18:46,380 --> 00:18:50,610
to keep the<font color="#E5E5E5"> maintenance also we don't</font>

374
00:18:48,480 --> 00:18:54,720
<font color="#CCCCCC">want to implement</font><font color="#E5E5E5"> everything ourselves</font>

375
00:18:50,610 --> 00:18:57,060
<font color="#E5E5E5">so using existing libraries for for</font>

376
00:18:54,720 --> 00:19:00,270
<font color="#E5E5E5">example there's there's an a</font><font color="#CCCCCC"> C++ library</font>

377
00:18:57,060 --> 00:19:02,280
for the<font color="#CCCCCC"> ecto</font><font color="#E5E5E5"> model which we might or</font>

378
00:19:00,270 --> 00:19:05,370
might not use to<font color="#CCCCCC"> implement</font><font color="#E5E5E5"> the scheduler</font>

379
00:19:02,280 --> 00:19:09,510
or other projects implementing cross

380
00:19:05,370 --> 00:19:13,739
network communications and yeah a lot<font color="#CCCCCC"> of</font>

381
00:19:09,510 --> 00:19:15,810
<font color="#CCCCCC">things to to look at and yeah we</font><font color="#E5E5E5"> are</font>

382
00:19:13,740 --> 00:19:20,820
actually right now we're at<font color="#E5E5E5"> the step</font>

383
00:19:15,810 --> 00:19:22,770
writing down the API now<font color="#CCCCCC"> then we want</font><font color="#E5E5E5"> to</font>

384
00:19:20,820 --> 00:19:27,750
agree<font color="#CCCCCC"> on a technology</font><font color="#E5E5E5"> from plantation</font>

385
00:19:22,770 --> 00:19:29,670
and yeah<font color="#E5E5E5"> implement the API and the last</font>

386
00:19:27,750 --> 00:19:32,160
point<font color="#E5E5E5"> is basically probably the hardest</font>

387
00:19:29,670 --> 00:19:35,540
<font color="#E5E5E5">is</font><font color="#CCCCCC"> glueing the existing thing together</font>

388
00:19:32,160 --> 00:19:38,880
<font color="#CCCCCC">and</font><font color="#E5E5E5"> me giving</font><font color="#CCCCCC"> people a path</font><font color="#E5E5E5"> forward to</font>

389
00:19:35,540 --> 00:19:42,090
have their<font color="#CCCCCC"> of three modules use their</font>

390
00:19:38,880 --> 00:19:46,620
new features and everything<font color="#E5E5E5"> we want to</font>

391
00:19:42,090 --> 00:19:49,230
provide so for those things we also need

392
00:19:46,620 --> 00:19:53,250
feedback<font color="#E5E5E5"> so basically you can</font><font color="#CCCCCC"> write me</font>

393
00:19:49,230 --> 00:19:55,350
or mark<font color="#E5E5E5"> us an email or</font><font color="#CCCCCC"> pacion and keep</font>

394
00:19:53,250 --> 00:19:57,630
the discussion going or post<font color="#E5E5E5"> I can also</font>

395
00:19:55,350 --> 00:20:00,270
<font color="#E5E5E5">probably post on the discussion radio</font>

396
00:19:57,630 --> 00:20:03,170
mailing list to keep this going

397
00:20:00,270 --> 00:20:07,170
yeah if you have any<font color="#E5E5E5"> questions about</font>

398
00:20:03,170 --> 00:20:09,510
what I told you today<font color="#E5E5E5"> I'm happy</font><font color="#CCCCCC"> to</font>

399
00:20:07,170 --> 00:20:12,150
<font color="#E5E5E5">answer or try</font><font color="#CCCCCC"> to answer</font><font color="#E5E5E5"> I'm also</font>

400
00:20:09,510 --> 00:20:17,340
available with<font color="#E5E5E5"> the email address or with</font>

401
00:20:12,150 --> 00:20:19,530
my<font color="#CCCCCC"> NIC on</font><font color="#E5E5E5"> soleko IRC and yeah we hope to</font>

402
00:20:17,340 --> 00:20:21,928
keep everything in everyone here in the

403
00:20:19,530 --> 00:20:51,960
loop and the whole community<font color="#CCCCCC"> to move</font>

404
00:20:21,929 --> 00:20:53,370
forward<font color="#E5E5E5"> okay so yeah right so one thing</font>

405
00:20:51,960 --> 00:20:56,070
to<font color="#E5E5E5"> tackle those problems would be</font>

406
00:20:53,370 --> 00:20:58,139
basically<font color="#E5E5E5"> writing mock modules or</font>

407
00:20:56,070 --> 00:21:01,500
something<font color="#CCCCCC"> to to mock up the other side</font>

408
00:20:58,140 --> 00:21:03,570
so<font color="#E5E5E5"> you can it should be possible so</font>

409
00:21:01,500 --> 00:21:06,150
other projects are also doing basically

410
00:21:03,570 --> 00:21:09,059
mock modules of hardware<font color="#CCCCCC"> devices or</font>

411
00:21:06,150 --> 00:21:11,520
<font color="#CCCCCC">other databases or something - to mock</font>

412
00:21:09,059 --> 00:21:16,639
the hardware this would be a way to

413
00:21:11,520 --> 00:21:16,639
<font color="#E5E5E5">improve</font><font color="#CCCCCC"> that or and the</font><font color="#E5E5E5"> other thing was</font>

414
00:21:20,420 --> 00:21:26,700
so there's also ways<font color="#CCCCCC"> to run like we more</font>

415
00:21:24,210 --> 00:21:29,970
<font color="#E5E5E5">something on arm I haven't looked into</font>

416
00:21:26,700 --> 00:21:32,490
<font color="#E5E5E5">that right yet but this could be a path</font>

417
00:21:29,970 --> 00:21:39,320
forward<font color="#E5E5E5"> to improve like the support for</font>

418
00:21:32,490 --> 00:21:39,320
<font color="#E5E5E5">that and all the differences</font><font color="#CCCCCC"> to x86</font>

419
00:21:51,110 --> 00:21:59,010
should be way to<font color="#CCCCCC"> HD without other</font>

420
00:21:58,230 --> 00:22:03,020
questions<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

421
00:21:59,010 --> 00:22:03,020
and you go out<font color="#CCCCCC"> take crash with you</font>

422
00:22:06,190 --> 00:22:21,520
we have time I just I just<font color="#CCCCCC"> was yeah</font>

423
00:22:37,450 --> 00:22:42,470
that's that's a problem because<font color="#E5E5E5"> every</font>

424
00:22:40,100 --> 00:22:45,080
<font color="#CCCCCC">one of us</font><font color="#E5E5E5"> three who already thought of</font>

425
00:22:42,470 --> 00:22:47,570
that we all have other things to do<font color="#CCCCCC"> and</font>

426
00:22:45,080 --> 00:22:50,090
<font color="#E5E5E5">don't get like paid full time to to work</font>

427
00:22:47,570 --> 00:22:53,870
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> runtime and</font><font color="#E5E5E5"> the scheduler so we</font>

428
00:22:50,090 --> 00:23:00,260
have to like scramble<font color="#E5E5E5"> time to to work on</font>

429
00:22:53,870 --> 00:23:03,800
that in the free time<font color="#E5E5E5"> also there there's</font>

430
00:23:00,260 --> 00:23:05,990
like no no real<font color="#CCCCCC"> timeline to finish</font>

431
00:23:03,800 --> 00:23:07,850
thinking about the things and<font color="#E5E5E5"> start</font>

432
00:23:05,990 --> 00:23:11,620
implementing so we need to nail that

433
00:23:07,850 --> 00:23:11,620
<font color="#CCCCCC">down pretty</font><font color="#E5E5E5"> soon probably</font>

434
00:23:17,490 --> 00:23:24,880
yeah like it doesn't<font color="#E5E5E5"> match too well to</font>

435
00:23:22,540 --> 00:23:27,810
the academic kind<font color="#E5E5E5"> of research that we</font>

436
00:23:24,880 --> 00:23:27,810
will<font color="#E5E5E5"> have to do first</font>

