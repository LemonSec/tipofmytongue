1
00:00:04,620 --> 00:00:14,280
hello I so now John<font color="#CCCCCC"> and Christian will</font>

2
00:00:10,260 --> 00:00:17,400
talk about<font color="#E5E5E5"> surf so the stage</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> yours</font>

3
00:00:14,280 --> 00:00:20,189
<font color="#CCCCCC">all right</font><font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much good</font>

4
00:00:17,400 --> 00:00:21,959
<font color="#CCCCCC">afternoon everybody and welcome to</font><font color="#E5E5E5"> our</font>

5
00:00:20,189 --> 00:00:25,259
talk on distributed file storage and

6
00:00:21,960 --> 00:00:27,510
multi-tenant clouds using set of s my

7
00:00:25,260 --> 00:00:29,670
<font color="#E5E5E5">name is</font><font color="#CCCCCC"> Kristin Frieda I'm working as a</font>

8
00:00:27,510 --> 00:00:33,420
<font color="#E5E5E5">software</font><font color="#CCCCCC"> engineer at Red Hat</font><font color="#E5E5E5"> obviously</font>

9
00:00:29,670 --> 00:00:34,140
<font color="#E5E5E5">and with me is hello my name</font><font color="#CCCCCC"> is John</font>

10
00:00:33,420 --> 00:00:36,510
spray

11
00:00:34,140 --> 00:00:38,640
I'm also an<font color="#CCCCCC"> engineer at Red Hat's I'm</font>

12
00:00:36,510 --> 00:00:40,620
the former maintainer<font color="#E5E5E5"> of CFS and the</font>

13
00:00:38,640 --> 00:00:44,579
current maintainer of<font color="#E5E5E5"> the set manager</font>

14
00:00:40,620 --> 00:00:46,260
demon<font color="#CCCCCC"> all right so in this presentation</font>

15
00:00:44,579 --> 00:00:48,120
<font color="#CCCCCC">we want</font><font color="#E5E5E5"> to give</font><font color="#CCCCCC"> you a brief overview</font>

16
00:00:46,260 --> 00:00:50,280
<font color="#E5E5E5">about</font><font color="#CCCCCC"> the key components that</font><font color="#E5E5E5"> we are</font>

17
00:00:48,120 --> 00:00:53,129
using to expose actually shared<font color="#CCCCCC"> file</font>

18
00:00:50,280 --> 00:00:54,480
systems within an OpenStack cloud<font color="#E5E5E5"> we're</font>

19
00:00:53,129 --> 00:00:56,968
going to<font color="#CCCCCC"> introduce it to OpenStack</font>

20
00:00:54,480 --> 00:00:59,209
Manila and we will<font color="#CCCCCC"> continue or</font><font color="#E5E5E5"> John will</font>

21
00:00:56,969 --> 00:01:03,960
continue with<font color="#E5E5E5"> the Ceph FS native driver</font>

22
00:00:59,210 --> 00:01:05,850
<font color="#E5E5E5">implementation</font><font color="#CCCCCC"> next will</font><font color="#E5E5E5"> be some</font>

23
00:01:03,960 --> 00:01:09,450
<font color="#CCCCCC">information about is the NFS Ganesha</font>

24
00:01:05,850 --> 00:01:11,880
driver<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is used lately and has some</font>

25
00:01:09,450 --> 00:01:14,240
improvements about the native or using

26
00:01:11,880 --> 00:01:16,770
the native set<font color="#E5E5E5"> of s driver directly</font><font color="#CCCCCC"> and</font>

27
00:01:14,240 --> 00:01:18,899
at the end of the talk we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to</font>

28
00:01:16,770 --> 00:01:21,030
give you an outlook on the future work

29
00:01:18,899 --> 00:01:23,420
<font color="#E5E5E5">that is happening</font><font color="#CCCCCC"> right now with the</font>

30
00:01:21,030 --> 00:01:28,289
upcoming<font color="#E5E5E5"> open</font><font color="#CCCCCC"> stare Queens release and</font>

31
00:01:23,420 --> 00:01:30,090
<font color="#E5E5E5">beyond the Queen's release so before we</font>

32
00:01:28,289 --> 00:01:32,220
talk about<font color="#E5E5E5"> the components that we are</font>

33
00:01:30,090 --> 00:01:34,110
using<font color="#E5E5E5"> let's quickly recap you too late</font>

34
00:01:32,220 --> 00:01:37,380
what's the<font color="#E5E5E5"> challenge that we</font><font color="#CCCCCC"> actually</font>

35
00:01:34,110 --> 00:01:40,369
try<font color="#CCCCCC"> to solve here so what we want to do</font>

36
00:01:37,380 --> 00:01:43,289
is we want<font color="#E5E5E5"> to enable tenants or admin</font>

37
00:01:40,369 --> 00:01:45,720
administrators of<font color="#CCCCCC"> boudreaux machines to</font>

38
00:01:43,289 --> 00:01:49,349
expose or to use a shared file system

39
00:01:45,720 --> 00:01:51,390
<font color="#E5E5E5">across their virtual machines</font><font color="#CCCCCC"> at the</font>

40
00:01:49,349 --> 00:01:53,729
same time we want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be we want</font><font color="#CCCCCC"> this</font>

41
00:01:51,390 --> 00:01:55,679
<font color="#E5E5E5">shared file</font><font color="#CCCCCC"> system to be</font><font color="#E5E5E5"> 10 and aware</font>

42
00:01:53,729 --> 00:01:57,660
meanings<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we don't have like a</font>

43
00:01:55,679 --> 00:02:00,060
<font color="#E5E5E5">single</font><font color="#CCCCCC"> global shared file system for all</font>

44
00:01:57,660 --> 00:02:01,619
the<font color="#E5E5E5"> machines running there but only to a</font>

45
00:02:00,060 --> 00:02:03,179
subset<font color="#E5E5E5"> of the machines and another</font>

46
00:02:01,619 --> 00:02:06,239
subset of machines from a<font color="#E5E5E5"> different</font>

47
00:02:03,179 --> 00:02:10,739
tenant are not able to access of course

48
00:02:06,239 --> 00:02:12,719
<font color="#CCCCCC">data from 1 to 10</font><font color="#E5E5E5"> and a for example the</font>

49
00:02:10,739 --> 00:02:14,909
whole deployment should be<font color="#E5E5E5"> self managed</font>

50
00:02:12,719 --> 00:02:16,739
meaning that the tenant administrator

51
00:02:14,909 --> 00:02:18,299
from<font color="#CCCCCC"> tenant a for example can set up</font>

52
00:02:16,739 --> 00:02:20,130
create shares

53
00:02:18,300 --> 00:02:23,430
the lead<font color="#E5E5E5"> shares for their users</font><font color="#CCCCCC"> and the</font>

54
00:02:20,130 --> 00:02:25,560
<font color="#CCCCCC">arbiter</font><font color="#E5E5E5"> machines and the operator of</font><font color="#CCCCCC"> the</font>

55
00:02:23,430 --> 00:02:28,200
underlying OpenStack cloud and the

56
00:02:25,560 --> 00:02:30,360
storage<font color="#CCCCCC"> Baggins don't need to interact</font>

57
00:02:28,200 --> 00:02:33,570
<font color="#E5E5E5">directly or need to set</font><font color="#CCCCCC"> up the</font><font color="#E5E5E5"> different</font>

58
00:02:30,360 --> 00:02:35,790
file systems<font color="#E5E5E5"> for the administrators as</font>

59
00:02:33,570 --> 00:02:37,920
an operator of<font color="#E5E5E5"> this cloud I want to be</font>

60
00:02:35,790 --> 00:02:40,190
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reuse my</font><font color="#CCCCCC"> actors to work well</font>

61
00:02:37,920 --> 00:02:42,780
hopefully<font color="#E5E5E5"> I want to be able to reuse</font><font color="#CCCCCC"> my</font>

62
00:02:40,190 --> 00:02:45,840
<font color="#E5E5E5">actually available storage back-end</font>

63
00:02:42,780 --> 00:02:49,080
system so for<font color="#E5E5E5"> example if I have already</font>

64
00:02:45,840 --> 00:02:51,140
<font color="#CCCCCC">set running that exposed block storage I</font>

65
00:02:49,080 --> 00:02:53,490
don't want to add another

66
00:02:51,140 --> 00:02:56,279
software-defined storage<font color="#CCCCCC"> I want to reuse</font>

67
00:02:53,490 --> 00:03:01,500
<font color="#E5E5E5">this existing storage form a shared file</font>

68
00:02:56,280 --> 00:03:03,780
systems so<font color="#E5E5E5"> how do</font><font color="#CCCCCC"> we solve that</font><font color="#E5E5E5"> actually</font>

69
00:03:01,500 --> 00:03:06,270
we're using three<font color="#CCCCCC"> different projects to</font>

70
00:03:03,780 --> 00:03:08,640
solve this issue or<font color="#CCCCCC"> this challenge</font><font color="#E5E5E5"> first</font>

71
00:03:06,270 --> 00:03:11,100
we have OpenStack Manila<font color="#E5E5E5"> OpenStack</font>

72
00:03:08,640 --> 00:03:14,040
Manila is the OpenStack shared<font color="#E5E5E5"> file</font>

73
00:03:11,100 --> 00:03:17,239
system<font color="#E5E5E5"> service we're going to use</font><font color="#CCCCCC"> staff</font>

74
00:03:14,040 --> 00:03:19,650
as the software-defined storage solution

75
00:03:17,240 --> 00:03:22,860
<font color="#CCCCCC">backing</font><font color="#E5E5E5"> up your OpenStack cloud and</font>

76
00:03:19,650 --> 00:03:24,660
we're going to<font color="#E5E5E5"> use NFS Ganesha which is</font>

77
00:03:22,860 --> 00:03:30,390
a freely available<font color="#E5E5E5"> NFS server</font>

78
00:03:24,660 --> 00:03:33,030
implementation so let's have a<font color="#CCCCCC"> look at</font>

79
00:03:30,390 --> 00:03:35,279
OpenStack Manila<font color="#E5E5E5"> the OpenStack</font><font color="#CCCCCC"> Molina</font><font color="#E5E5E5"> is</font>

80
00:03:33,030 --> 00:03:37,770
the OpenStack OpenStack shared<font color="#E5E5E5"> file</font>

81
00:03:35,280 --> 00:03:42,180
system<font color="#E5E5E5"> service it actually exposes a</font>

82
00:03:37,770 --> 00:03:44,490
bunch of well one API<font color="#E5E5E5"> that your users</font>

83
00:03:42,180 --> 00:03:46,380
and<font color="#E5E5E5"> administrators of virtual machines</font>

84
00:03:44,490 --> 00:03:49,410
<font color="#E5E5E5">connected are used to request of shared</font>

85
00:03:46,380 --> 00:03:52,769
file system shares<font color="#E5E5E5"> delete shares create</font>

86
00:03:49,410 --> 00:03:54,959
new shares<font color="#CCCCCC"> stuff like</font><font color="#E5E5E5"> that so as a</font>

87
00:03:52,770 --> 00:03:57,540
tenant administrator<font color="#E5E5E5"> that want to use a</font>

88
00:03:54,959 --> 00:04:00,000
shared file system<font color="#E5E5E5"> you send a request</font><font color="#CCCCCC"> to</font>

89
00:03:57,540 --> 00:04:01,590
<font color="#CCCCCC">the Manila API in the Manila</font><font color="#E5E5E5"> API in the</font>

90
00:04:00,000 --> 00:04:03,930
<font color="#E5E5E5">background</font><font color="#CCCCCC"> there's a second service</font>

91
00:04:01,590 --> 00:04:05,730
called<font color="#CCCCCC"> Manila</font><font color="#E5E5E5"> shared service which</font>

92
00:04:03,930 --> 00:04:07,980
actually talks<font color="#E5E5E5"> directly to your storage</font>

93
00:04:05,730 --> 00:04:10,619
cluster and the storage clusters and

94
00:04:07,980 --> 00:04:14,010
exposes for example IP address where you

95
00:04:10,620 --> 00:04:16,350
<font color="#CCCCCC">can mount this chat filesystem and at</font>

96
00:04:14,010 --> 00:04:18,659
the end<font color="#E5E5E5"> of this the tenant administrator</font>

97
00:04:16,350 --> 00:04:21,270
would get back an address and<font color="#E5E5E5"> IP address</font>

98
00:04:18,660 --> 00:04:22,950
for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can use then and</font>

99
00:04:21,269 --> 00:04:26,400
your guest VM to actually mount<font color="#CCCCCC"> this</font>

100
00:04:22,950 --> 00:04:27,930
created share and finally your guest VM

101
00:04:26,400 --> 00:04:32,248
is talking<font color="#E5E5E5"> directly to the storage</font>

102
00:04:27,930 --> 00:04:34,169
back-end now this support existing

103
00:04:32,249 --> 00:04:37,319
one enough for different back-end

104
00:04:34,169 --> 00:04:39,709
drivers<font color="#CCCCCC"> quite a few</font><font color="#E5E5E5"> proba</font><font color="#CCCCCC"> teri drivers</font>

105
00:04:37,319 --> 00:04:42,479
that<font color="#E5E5E5"> are well supported by their vendors</font>

106
00:04:39,709 --> 00:04:45,599
<font color="#E5E5E5">there are some generic drivers for</font>

107
00:04:42,479 --> 00:04:47,969
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> implementations but under</font>

108
00:04:45,599 --> 00:04:50,519
the additional staff<font color="#E5E5E5"> of s there was no</font>

109
00:04:47,969 --> 00:04:53,219
real<font color="#CCCCCC"> production-ready open source drive</font>

110
00:04:50,519 --> 00:04:55,469
<font color="#E5E5E5">available meaning for</font><font color="#CCCCCC"> example that you</font>

111
00:04:53,219 --> 00:04:59,219
have<font color="#E5E5E5"> stuff like highly availability</font>

112
00:04:55,469 --> 00:05:02,998
<font color="#CCCCCC">services running them so set up as</font>

113
00:04:59,219 --> 00:05:04,829
editors<font color="#E5E5E5"> well features and with</font><font color="#CCCCCC"> services</font>

114
00:05:02,999 --> 00:05:07,259
it's now possible to<font color="#E5E5E5"> run really</font><font color="#CCCCCC"> a</font>

115
00:05:04,829 --> 00:05:10,259
production<font color="#CCCCCC"> loud</font><font color="#E5E5E5"> using OpenStack Manila</font>

116
00:05:07,259 --> 00:05:16,110
with a completely open<font color="#E5E5E5"> source cloud</font>

117
00:05:10,259 --> 00:05:18,899
deployment OpenStack deployment so ZFS

118
00:05:16,110 --> 00:05:20,579
is actually<font color="#E5E5E5"> distributed POSIX file</font>

119
00:05:18,899 --> 00:05:23,039
systems that<font color="#E5E5E5"> is built on top of</font>

120
00:05:20,579 --> 00:05:28,289
liberators and<font color="#CCCCCC"> raiders</font><font color="#E5E5E5"> the technologies</font>

121
00:05:23,039 --> 00:05:31,019
that<font color="#E5E5E5"> actually makes</font><font color="#CCCCCC"> f or itself SEF</font>

122
00:05:28,289 --> 00:05:33,058
<font color="#E5E5E5">itself is</font><font color="#CCCCCC"> probably is already well-known</font>

123
00:05:31,019 --> 00:05:36,149
for example for its block storage

124
00:05:33,059 --> 00:05:37,829
service using<font color="#CCCCCC"> ratos block devices</font><font color="#E5E5E5"> radius</font>

125
00:05:36,149 --> 00:05:39,239
block<font color="#E5E5E5"> devices are often used together</font>

126
00:05:37,829 --> 00:05:41,999
without<font color="#E5E5E5"> mistakes in there</font>

127
00:05:39,239 --> 00:05:44,188
to expose volumes<font color="#E5E5E5"> for your virtual</font>

128
00:05:41,999 --> 00:05:47,399
machines<font color="#CCCCCC"> running an OpenStack</font><font color="#E5E5E5"> and it</font>

129
00:05:44,189 --> 00:05:51,839
also exposes<font color="#CCCCCC"> objects services called</font>

130
00:05:47,399 --> 00:05:54,659
<font color="#E5E5E5">using the radius gateway</font><font color="#CCCCCC"> rgw exposing an</font>

131
00:05:51,839 --> 00:06:01,049
s3 and object and<font color="#CCCCCC"> an Swift comfortable</font>

132
00:05:54,659 --> 00:06:02,909
API implementation so the OpenStack

133
00:06:01,049 --> 00:06:05,308
<font color="#E5E5E5">foundation is</font><font color="#CCCCCC"> actually doing surveys</font>

134
00:06:02,909 --> 00:06:08,789
twice a year typically before the

135
00:06:05,309 --> 00:06:11,159
OpenStack summits<font color="#E5E5E5"> and it turned out</font><font color="#CCCCCC"> that</font>

136
00:06:08,789 --> 00:06:13,409
most people<font color="#CCCCCC"> more than 50% of</font><font color="#E5E5E5"> the</font>

137
00:06:11,159 --> 00:06:15,539
operators<font color="#E5E5E5"> actually want to use CFS as</font>

138
00:06:13,409 --> 00:06:17,549
they are<font color="#CCCCCC"> back-end</font><font color="#E5E5E5"> for their</font><font color="#CCCCCC"> Manila</font>

139
00:06:15,539 --> 00:06:20,909
<font color="#CCCCCC">service</font><font color="#E5E5E5"> and there's a good</font><font color="#CCCCCC"> reason</font><font color="#E5E5E5"> for</font>

140
00:06:17,549 --> 00:06:23,039
this as I mentioned<font color="#CCCCCC"> early on most of the</font>

141
00:06:20,909 --> 00:06:25,558
times when<font color="#CCCCCC"> you have or a yourself</font>

142
00:06:23,039 --> 00:06:27,419
cluster running cinder<font color="#E5E5E5"> you might want to</font>

143
00:06:25,559 --> 00:06:28,739
reuse this one right you want<font color="#CCCCCC"> to use</font>

144
00:06:27,419 --> 00:06:33,599
only a singer and software-defined

145
00:06:28,739 --> 00:06:36,029
storage within<font color="#E5E5E5"> your cloud and this drive</font>

146
00:06:33,599 --> 00:06:40,289
actually is a demand to to use set of s

147
00:06:36,029 --> 00:06:42,808
with in Manila so before John is<font color="#E5E5E5"> taking</font>

148
00:06:40,289 --> 00:06:44,259
over and giving you<font color="#E5E5E5"> a more detailed</font><font color="#CCCCCC"> view</font>

149
00:06:42,809 --> 00:06:46,599
on<font color="#CCCCCC"> services</font>

150
00:06:44,259 --> 00:06:49,110
I want to explain a<font color="#E5E5E5"> few key terms</font><font color="#CCCCCC"> that</font>

151
00:06:46,599 --> 00:06:52,710
we are using<font color="#CCCCCC"> during this presentation</font>

152
00:06:49,110 --> 00:06:55,629
<font color="#CCCCCC">when</font><font color="#E5E5E5"> we actually deploy OpenStack clouds</font>

153
00:06:52,710 --> 00:06:58,448
<font color="#CCCCCC">with in Red Hat</font><font color="#E5E5E5"> for our customers at</font>

154
00:06:55,629 --> 00:07:00,430
reddit<font color="#CCCCCC"> we're using a concept or we're</font>

155
00:06:58,449 --> 00:07:02,259
using<font color="#E5E5E5"> a tool called triple Ocho below</font>

156
00:07:00,430 --> 00:07:05,560
actually means OpenStack on OpenStack

157
00:07:02,259 --> 00:07:07,750
<font color="#E5E5E5">and we have a so called under cloud</font>

158
00:07:05,560 --> 00:07:10,599
which is<font color="#E5E5E5"> basically a management node and</font>

159
00:07:07,750 --> 00:07:12,729
<font color="#CCCCCC">this management</font><font color="#E5E5E5"> nodes then deploys and</font>

160
00:07:10,599 --> 00:07:15,370
<font color="#CCCCCC">so-called over cloud</font><font color="#E5E5E5"> this over cloud is</font>

161
00:07:12,729 --> 00:07:17,680
shown here<font color="#E5E5E5"> for example we</font><font color="#CCCCCC"> have a bunch</font>

162
00:07:15,370 --> 00:07:20,590
of controller nodes that for example

163
00:07:17,680 --> 00:07:23,319
expose API services not only<font color="#E5E5E5"> Manila but</font>

164
00:07:20,590 --> 00:07:25,989
let's say Keystone as well the Nova API

165
00:07:23,319 --> 00:07:28,030
and so on and so forth<font color="#E5E5E5"> the controller</font>

166
00:07:25,990 --> 00:07:32,259
nodes are also running a distributed

167
00:07:28,030 --> 00:07:34,330
<font color="#CCCCCC">mariadb cluster and other services as</font>

168
00:07:32,259 --> 00:07:36,280
well of course we have some compute

169
00:07:34,330 --> 00:07:38,650
nodes where your virtual machines are

170
00:07:36,280 --> 00:07:43,210
running<font color="#E5E5E5"> on later on and we have some</font>

171
00:07:38,650 --> 00:07:45,460
storage<font color="#E5E5E5"> nodes</font><font color="#CCCCCC"> there is well we are</font>

172
00:07:43,210 --> 00:07:48,039
<font color="#E5E5E5">supposing or setting up actually a few</font>

173
00:07:45,460 --> 00:07:50,289
different<font color="#CCCCCC"> networks</font><font color="#E5E5E5"> by deploying an over</font>

174
00:07:48,039 --> 00:07:52,630
cloud and we have public networks that

175
00:07:50,289 --> 00:07:56,409
for example expose the IP<font color="#E5E5E5"> I services to</font>

176
00:07:52,630 --> 00:07:58,810
the users<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is also called</font><font color="#CCCCCC"> a control</font>

177
00:07:56,409 --> 00:08:01,630
plane and we<font color="#E5E5E5"> have some private network</font>

178
00:07:58,810 --> 00:08:03,669
<font color="#E5E5E5">networking networks that we are using</font>

179
00:08:01,630 --> 00:08:05,680
<font color="#E5E5E5">for example for the storage traffic in</font>

180
00:08:03,669 --> 00:08:09,460
the background<font color="#CCCCCC"> and these are typically</font>

181
00:08:05,680 --> 00:08:11,590
called<font color="#CCCCCC"> data plane networks and a private</font>

182
00:08:09,460 --> 00:08:13,719
and normally not seen by for<font color="#E5E5E5"> example I</font>

183
00:08:11,590 --> 00:08:18,810
shouldn't be seen by the guest VMs

184
00:08:13,719 --> 00:08:20,710
actually<font color="#CCCCCC"> alright that's that I think</font>

185
00:08:18,810 --> 00:08:23,490
John's going<font color="#E5E5E5"> to tell you a bit more</font>

186
00:08:20,710 --> 00:08:23,489
about<font color="#E5E5E5"> service</font>

187
00:08:27,190 --> 00:08:33,500
so the<font color="#CCCCCC"> native driver for Manila is the</font>

188
00:08:32,210 --> 00:08:35,810
simplest<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that we have at the</font>

189
00:08:33,500 --> 00:08:38,210
<font color="#E5E5E5">moment it's been in OpenStack for a</font>

190
00:08:35,809 --> 00:08:41,299
while now<font color="#CCCCCC"> and it acts as the basis for</font>

191
00:08:38,210 --> 00:08:45,820
<font color="#E5E5E5">what's coming in future releases</font><font color="#CCCCCC"> when we</font>

192
00:08:41,299 --> 00:08:45,819
say native in this context we

193
00:08:51,500 --> 00:08:53,560
you

194
00:08:56,220 --> 00:09:00,440
in

195
00:08:58,220 --> 00:09:02,270
very good performance<font color="#E5E5E5"> because</font><font color="#CCCCCC"> all of the</font>

196
00:09:00,440 --> 00:09:05,510
<font color="#CCCCCC">gas</font><font color="#E5E5E5"> PM's</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> talk to all</font><font color="#CCCCCC"> of the Earth's</font>

197
00:09:02,270 --> 00:09:08,120
<font color="#CCCCCC">T's</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> South cluster that gives</font>

198
00:09:05,510 --> 00:09:09,410
them a scale out<font color="#E5E5E5"> level of bandwidth that</font>

199
00:09:08,120 --> 00:09:11,750
means there<font color="#E5E5E5"> are</font><font color="#CCCCCC"> only limited by</font><font color="#E5E5E5"> the</font>

200
00:09:09,410 --> 00:09:15,199
bandwidth of their own network interface

201
00:09:11,750 --> 00:09:17,690
<font color="#E5E5E5">so if you want to get 10 gigabits or 40</font>

202
00:09:15,200 --> 00:09:19,280
<font color="#E5E5E5">gigabits or whatever of storage into a</font>

203
00:09:17,690 --> 00:09:22,310
virtual<font color="#E5E5E5"> machine in an</font><font color="#CCCCCC"> openstack</font><font color="#E5E5E5"> cloud</font>

204
00:09:19,280 --> 00:09:24,800
this<font color="#E5E5E5"> is where you can do it it's fairly</font>

205
00:09:22,310 --> 00:09:26,930
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> to deploy</font><font color="#E5E5E5"> from the point of view</font>

206
00:09:24,800 --> 00:09:29,270
<font color="#CCCCCC">of the person deploying the cloud</font><font color="#E5E5E5"> itself</font>

207
00:09:26,930 --> 00:09:30,920
because you're<font color="#E5E5E5"> not deploying any extra</font>

208
00:09:29,270 --> 00:09:33,590
protocol gateways or<font color="#E5E5E5"> anything like that</font>

209
00:09:30,920 --> 00:09:35,569
<font color="#CCCCCC">if you're running</font><font color="#E5E5E5"> OpenStack on a fully</font>

210
00:09:33,590 --> 00:09:37,160
<font color="#CCCCCC">open source</font><font color="#E5E5E5"> platform the chances are you</font>

211
00:09:35,570 --> 00:09:39,860
already have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> safe cluster that you're</font>

212
00:09:37,160 --> 00:09:41,839
using for<font color="#CCCCCC"> RBD images via cinder so you</font>

213
00:09:39,860 --> 00:09:46,160
can use the same underlying safe cluster

214
00:09:41,840 --> 00:09:49,880
with a single large<font color="#E5E5E5"> set of s file system</font>

215
00:09:46,160 --> 00:09:51,530
and expose<font color="#CCCCCC"> that as Manila volumes the</font>

216
00:09:49,880 --> 00:09:53,630
way we implement<font color="#CCCCCC"> the</font><font color="#E5E5E5"> concept of a manila</font>

217
00:09:51,530 --> 00:09:56,780
volume<font color="#E5E5E5"> in the cipher</font><font color="#CCCCCC"> personated driver</font>

218
00:09:53,630 --> 00:09:57,890
is simply as a directory<font color="#E5E5E5"> so</font><font color="#CCCCCC"> suffice goes</font>

219
00:09:56,780 --> 00:09:59,900
a little bit further<font color="#E5E5E5"> than what's</font>

220
00:09:57,890 --> 00:10:02,780
<font color="#E5E5E5">required by POSIX in terms of what it</font>

221
00:09:59,900 --> 00:10:05,600
provides<font color="#E5E5E5"> you it gives you her</font><font color="#CCCCCC"> sub</font>

222
00:10:02,780 --> 00:10:08,810
<font color="#CCCCCC">directory quotas and per sub directory</font>

223
00:10:05,600 --> 00:10:10,910
usage data that lets you do an

224
00:10:08,810 --> 00:10:13,369
impression<font color="#E5E5E5"> of a particular directory</font>

225
00:10:10,910 --> 00:10:15,560
<font color="#E5E5E5">being its own file</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> so when you</font>

226
00:10:13,370 --> 00:10:18,500
type DF on one of these<font color="#CCCCCC"> sub tree</font><font color="#E5E5E5"> mounts</font>

227
00:10:15,560 --> 00:10:20,390
you're getting that<font color="#CCCCCC"> per sub tree usage</font>

228
00:10:18,500 --> 00:10:21,980
information<font color="#CCCCCC"> and the quota</font><font color="#E5E5E5"> is being</font>

229
00:10:20,390 --> 00:10:24,620
enforced<font color="#E5E5E5"> to that level</font><font color="#CCCCCC"> so that when</font>

230
00:10:21,980 --> 00:10:26,540
<font color="#E5E5E5">somebody asks</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> a ten gigabytes manila</font>

231
00:10:24,620 --> 00:10:28,840
volume what we're<font color="#E5E5E5"> really giving them is</font>

232
00:10:26,540 --> 00:10:31,010
a directory<font color="#E5E5E5"> with a 10 gigabyte quota</font>

233
00:10:28,840 --> 00:10:33,200
there's a link there<font color="#CCCCCC"> to a presentation</font>

234
00:10:31,010 --> 00:10:36,920
<font color="#E5E5E5">from CERN who are using</font><font color="#CCCCCC"> this driver at</font>

235
00:10:33,200 --> 00:10:41,990
some scale already so here's the network

236
00:10:36,920 --> 00:10:45,229
diagram<font color="#E5E5E5"> and the important part</font><font color="#CCCCCC"> of this</font>

237
00:10:41,990 --> 00:10:46,910
is the red section<font color="#CCCCCC"> at the top where we</font>

238
00:10:45,230 --> 00:10:49,310
have the<font color="#CCCCCC"> safe storage network that's</font>

239
00:10:46,910 --> 00:10:52,400
connected to<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> the backing</font><font color="#E5E5E5"> storage</font>

240
00:10:49,310 --> 00:10:55,219
servers the<font color="#E5E5E5"> vo SDS which typically would</font>

241
00:10:52,400 --> 00:10:57,800
<font color="#CCCCCC">be separate from the networks that</font><font color="#E5E5E5"> you</font>

242
00:10:55,220 --> 00:11:00,860
exposed<font color="#E5E5E5"> to your client workloads and the</font>

243
00:10:57,800 --> 00:11:03,500
reason<font color="#E5E5E5"> for that is that SEF is it has</font>

244
00:11:00,860 --> 00:11:04,350
some security<font color="#E5E5E5"> built in it does have its</font>

245
00:11:03,500 --> 00:11:07,200
own crypt

246
00:11:04,350 --> 00:11:10,830
and<font color="#E5E5E5"> authentication and so on but that's</font>

247
00:11:07,200 --> 00:11:11,880
<font color="#E5E5E5">not designed for use in public</font><font color="#CCCCCC"> it's not</font>

248
00:11:10,830 --> 00:11:13,680
<font color="#CCCCCC">the</font><font color="#E5E5E5"> kind of thing you would expose</font>

249
00:11:11,880 --> 00:11:15,960
directly to the Internet

250
00:11:13,680 --> 00:11:18,180
and it's not the kind<font color="#CCCCCC"> of thing you</font><font color="#E5E5E5"> would</font>

251
00:11:15,960 --> 00:11:19,830
usually<font color="#E5E5E5"> exposed to untrusted</font><font color="#CCCCCC"> client</font>

252
00:11:18,180 --> 00:11:23,729
workloads<font color="#CCCCCC"> that somebody brought to you</font>

253
00:11:19,830 --> 00:11:25,590
and<font color="#E5E5E5"> asked her on your cloud so</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> and a</font>

254
00:11:23,730 --> 00:11:27,900
and 10<font color="#E5E5E5"> and B here are just both</font>

255
00:11:25,590 --> 00:11:29,760
connected<font color="#E5E5E5"> to the same network</font><font color="#CCCCCC"> so they</font>

256
00:11:27,900 --> 00:11:32,420
can potentially<font color="#E5E5E5"> interfere with each</font>

257
00:11:29,760 --> 00:11:34,530
<font color="#E5E5E5">other somewhat and they can certainly</font>

258
00:11:32,420 --> 00:11:37,469
run the risk of interfering with the

259
00:11:34,530 --> 00:11:39,660
underlying<font color="#E5E5E5"> safe cluster the upshot of</font>

260
00:11:37,470 --> 00:11:41,310
that is that you would only use the safe

261
00:11:39,660 --> 00:11:44,069
native driver<font color="#E5E5E5"> if you trust your</font>

262
00:11:41,310 --> 00:11:46,260
workplace<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that is the case for quite</font>

263
00:11:44,070 --> 00:11:48,720
<font color="#E5E5E5">a lot of OpenStack users as it turns out</font>

264
00:11:46,260 --> 00:11:51,870
to<font color="#E5E5E5"> begin with I expected this driver to</font>

265
00:11:48,720 --> 00:11:53,820
have very little uptake<font color="#E5E5E5"> because it has</font>

266
00:11:51,870 --> 00:11:55,680
this<font color="#E5E5E5"> drawback but we've had a bunch</font><font color="#CCCCCC"> of</font>

267
00:11:53,820 --> 00:11:57,150
people<font color="#CCCCCC"> using it</font><font color="#E5E5E5"> because it turns out</font><font color="#CCCCCC"> a</font>

268
00:11:55,680 --> 00:11:58,439
<font color="#E5E5E5">lot of people using OpenStack are just</font>

269
00:11:57,150 --> 00:11:59,490
<font color="#E5E5E5">using it</font><font color="#CCCCCC"> as a way to automate their</font>

270
00:11:58,440 --> 00:12:00,990
infrastructure<font color="#E5E5E5"> for their own work</font>

271
00:11:59,490 --> 00:12:05,580
clothes and<font color="#CCCCCC"> for</font><font color="#E5E5E5"> those people the</font>

272
00:12:00,990 --> 00:12:08,570
security caveat is acceptable<font color="#CCCCCC"> so to</font>

273
00:12:05,580 --> 00:12:11,760
<font color="#E5E5E5">recap the pros here are the performance</font>

274
00:12:08,570 --> 00:12:13,920
it's shown itself to<font color="#E5E5E5"> be popular with</font>

275
00:12:11,760 --> 00:12:15,390
<font color="#CCCCCC">users</font><font color="#E5E5E5"> the implementation is is very</font>

276
00:12:13,920 --> 00:12:17,910
simple it's<font color="#CCCCCC"> just a directory that</font>

277
00:12:15,390 --> 00:12:18,780
<font color="#E5E5E5">somebody's mounting and I didn't mention</font>

278
00:12:17,910 --> 00:12:21,270
<font color="#CCCCCC">a che</font>

279
00:12:18,780 --> 00:12:23,819
but that's because there's<font color="#CCCCCC"> nothing to it</font>

280
00:12:21,270 --> 00:12:26,160
the<font color="#E5E5E5"> safe cluster already provides high</font>

281
00:12:23,820 --> 00:12:28,140
availability<font color="#E5E5E5"> in itself there's no extra</font>

282
00:12:26,160 --> 00:12:30,540
effort needed to<font color="#CCCCCC"> make this solution</font><font color="#E5E5E5"> a</font>

283
00:12:28,140 --> 00:12:32,670
che when<font color="#E5E5E5"> it's used by</font><font color="#CCCCCC"> manila clients in</font>

284
00:12:30,540 --> 00:12:34,980
an<font color="#E5E5E5"> open stack environment and the</font>

285
00:12:32,670 --> 00:12:36,750
<font color="#E5E5E5">downside to emphasize again is that we</font>

286
00:12:34,980 --> 00:12:38,430
are giving<font color="#CCCCCC"> musa PM's direct access to</font>

287
00:12:36,750 --> 00:12:39,960
<font color="#E5E5E5">the storage network which is certainly</font>

288
00:12:38,430 --> 00:12:43,170
<font color="#E5E5E5">not a best practice and is only</font>

289
00:12:39,960 --> 00:12:46,160
<font color="#E5E5E5">acceptable if you can justify it based</font>

290
00:12:43,170 --> 00:12:48,839
on how much<font color="#E5E5E5"> you trust your applications</font>

291
00:12:46,160 --> 00:12:52,709
the other slight downside is<font color="#CCCCCC"> that the</font>

292
00:12:48,840 --> 00:12:54,900
clients<font color="#E5E5E5"> running inside the</font><font color="#CCCCCC"> Nova</font><font color="#E5E5E5"> VMs need</font>

293
00:12:52,710 --> 00:12:57,840
the Ceph software installs<font color="#E5E5E5"> to mount the</font>

294
00:12:54,900 --> 00:12:59,880
<font color="#CCCCCC">Ceph filesystem so the set client is in</font>

295
00:12:57,840 --> 00:13:02,670
the Linux<font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> and so this isn't</font>

296
00:12:59,880 --> 00:13:06,780
massively onerous<font color="#CCCCCC"> but it</font><font color="#E5E5E5"> means that when</font>

297
00:13:02,670 --> 00:13:08,339
<font color="#E5E5E5">you deploy your your clients if there's</font>

298
00:13:06,780 --> 00:13:09,790
a new version of<font color="#CCCCCC"> seth coming out you</font>

299
00:13:08,340 --> 00:13:11,950
need to worry<font color="#CCCCCC"> about things happen</font>

300
00:13:09,790 --> 00:13:14,500
inside<font color="#E5E5E5"> you'll know the</font><font color="#CCCCCC"> vamps so again</font>

301
00:13:11,950 --> 00:13:16,000
only works if you have<font color="#E5E5E5"> a good a very</font>

302
00:13:14,500 --> 00:13:18,130
<font color="#E5E5E5">good relationship</font><font color="#CCCCCC"> with whoever is</font>

303
00:13:16,000 --> 00:13:22,300
running your applications and<font color="#E5E5E5"> whoever is</font>

304
00:13:18,130 --> 00:13:23,770
building those VMs so having talked

305
00:13:22,300 --> 00:13:24,280
<font color="#CCCCCC">about what's wrong</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> the native</font>

306
00:13:23,770 --> 00:13:25,890
driver

307
00:13:24,280 --> 00:13:28,150
<font color="#E5E5E5">I'll pass back</font><font color="#CCCCCC"> to Christian</font><font color="#E5E5E5"> for the</font>

308
00:13:25,890 --> 00:13:31,540
current work<font color="#E5E5E5"> all right</font>

309
00:13:28,150 --> 00:13:33,880
thanks John so because<font color="#CCCCCC"> of these</font>

310
00:13:31,540 --> 00:13:36,670
drawbacks<font color="#CCCCCC"> the engineers</font><font color="#E5E5E5"> were actually</font>

311
00:13:33,880 --> 00:13:38,680
looking<font color="#E5E5E5"> into a different way how to</font>

312
00:13:36,670 --> 00:13:42,699
expose<font color="#CCCCCC"> the shared fire systems to the</font>

313
00:13:38,680 --> 00:13:46,030
users<font color="#E5E5E5"> and what has been implemented is</font>

314
00:13:42,700 --> 00:13:47,830
actually an F aspect<font color="#E5E5E5"> service that</font>

315
00:13:46,030 --> 00:13:52,449
exposes<font color="#CCCCCC"> o that actually uses a set of</font>

316
00:13:47,830 --> 00:13:54,220
<font color="#CCCCCC">SNS to</font><font color="#E5E5E5"> have a fast driver and exposes</font>

317
00:13:52,450 --> 00:13:59,350
the<font color="#E5E5E5"> shared file systems to the guest VMs</font>

318
00:13:54,220 --> 00:14:01,030
using NFS services this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> completed</font>

319
00:13:59,350 --> 00:14:02,620
will be<font color="#E5E5E5"> completely integrated</font><font color="#CCCCCC"> with the</font>

320
00:14:01,030 --> 00:14:05,430
<font color="#E5E5E5">upcoming</font><font color="#CCCCCC"> album</font><font color="#E5E5E5"> stack Queens release</font>

321
00:14:02,620 --> 00:14:07,720
which is<font color="#CCCCCC"> coming out</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a few weeks and</font>

322
00:14:05,430 --> 00:14:08,579
I'm giving<font color="#CCCCCC"> you a little</font><font color="#E5E5E5"> bit more detail</font>

323
00:14:07,720 --> 00:14:12,070
how<font color="#E5E5E5"> this works</font>

324
00:14:08,580 --> 00:14:15,690
<font color="#E5E5E5">so first of all we're using NFS Ganesha</font>

325
00:14:12,070 --> 00:14:19,030
Ganesha is a user space<font color="#CCCCCC"> NFS server</font>

326
00:14:15,690 --> 00:14:22,030
<font color="#E5E5E5">supporting multiple NFS versions and</font>

327
00:14:19,030 --> 00:14:24,520
build on a<font color="#E5E5E5"> very or using a very modular</font>

328
00:14:22,030 --> 00:14:27,490
architecture using pluggable file system

329
00:14:24,520 --> 00:14:30,120
abstraction layers and these file system

330
00:14:27,490 --> 00:14:31,780
abstraction layers<font color="#E5E5E5"> already include</font>

331
00:14:30,120 --> 00:14:34,900
different open source

332
00:14:31,780 --> 00:14:40,140
<font color="#CCCCCC">fire sir fascia</font><font color="#E5E5E5"> shares for example</font>

333
00:14:34,900 --> 00:14:42,670
cluster of s<font color="#CCCCCC"> GPFS lastra</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> set of s</font>

334
00:14:40,140 --> 00:14:45,010
<font color="#CCCCCC">Kanishka makes it possible to actually</font>

335
00:14:42,670 --> 00:14:46,569
dynamically export and update the

336
00:14:45,010 --> 00:14:49,390
configuration<font color="#E5E5E5"> without actually</font>

337
00:14:46,570 --> 00:14:51,490
<font color="#E5E5E5">restarting the service itself so when</font>

338
00:14:49,390 --> 00:14:53,680
you add a<font color="#E5E5E5"> new share to to the Ganesha</font>

339
00:14:51,490 --> 00:14:55,990
server you<font color="#CCCCCC"> don't need to restart it</font><font color="#E5E5E5"> you</font>

340
00:14:53,680 --> 00:14:58,959
just<font color="#E5E5E5"> send a signal using the D bus</font>

341
00:14:55,990 --> 00:15:01,480
protocol and it will update and export

342
00:14:58,960 --> 00:15:05,160
the new service for example<font color="#E5E5E5"> it has also</font>

343
00:15:01,480 --> 00:15:08,920
some some metadata metadata cache

344
00:15:05,160 --> 00:15:10,569
implemented and included so even if so

345
00:15:08,920 --> 00:15:13,270
when you're<font color="#CCCCCC"> using NFS to access a shared</font>

346
00:15:10,570 --> 00:15:15,370
<font color="#E5E5E5">file system not all your requests need</font>

347
00:15:13,270 --> 00:15:19,290
to go to the underlying storage back-end

348
00:15:15,370 --> 00:15:19,290
<font color="#CCCCCC">but some of them are already cached</font>

349
00:15:20,669 --> 00:15:26,529
so how does<font color="#CCCCCC"> it</font><font color="#E5E5E5"> look like when you want</font>

350
00:15:23,139 --> 00:15:29,199
<font color="#CCCCCC">to use the set of SNFs implementation</font>

351
00:15:26,529 --> 00:15:31,119
your tenant is for example<font color="#CCCCCC"> using</font><font color="#E5E5E5"> the</font>

352
00:15:29,199 --> 00:15:33,669
horizon web interface or<font color="#CCCCCC"> the manila</font>

353
00:15:31,119 --> 00:15:36,609
<font color="#E5E5E5">command line interface and sending a</font>

354
00:15:33,669 --> 00:15:38,949
<font color="#CCCCCC">request to the manila api service so</font>

355
00:15:36,609 --> 00:15:40,689
<font color="#CCCCCC">minute manila</font><font color="#E5E5E5"> api services and talking</font>

356
00:15:38,949 --> 00:15:43,319
<font color="#CCCCCC">directly and natively first to the</font>

357
00:15:40,689 --> 00:15:48,189
<font color="#E5E5E5">storage cluster running surf FS and</font>

358
00:15:43,319 --> 00:15:50,559
returning a directory pass next<font color="#CCCCCC"> as</font>

359
00:15:48,189 --> 00:15:52,059
manila service will update and<font color="#E5E5E5"> send the</font>

360
00:15:50,559 --> 00:15:54,819
<font color="#E5E5E5">information to the universe Ganesha</font>

361
00:15:52,059 --> 00:15:58,529
gateway which itself mounts this

362
00:15:54,819 --> 00:16:01,988
directory<font color="#E5E5E5"> pass locally an exposed</font><font color="#CCCCCC"> C NFS</font>

363
00:15:58,529 --> 00:16:03,639
service using the<font color="#E5E5E5"> NFS protocol itself</font><font color="#CCCCCC"> so</font>

364
00:16:01,989 --> 00:16:06,819
at the<font color="#E5E5E5"> end of the day the administrator</font>

365
00:16:03,639 --> 00:16:10,329
has an IP address<font color="#E5E5E5"> with an NFS service</font>

366
00:16:06,819 --> 00:16:12,459
that you can<font color="#E5E5E5"> mount on your guest VMs now</font>

367
00:16:10,329 --> 00:16:14,319
this is how all happening on<font color="#E5E5E5"> the control</font>

368
00:16:12,459 --> 00:16:16,628
plane let's have a look at the data

369
00:16:14,319 --> 00:16:17,919
<font color="#E5E5E5">plane so on the data plane it looks now</font>

370
00:16:16,629 --> 00:16:19,359
a<font color="#E5E5E5"> little bit different</font><font color="#CCCCCC"> because your</font>

371
00:16:17,919 --> 00:16:21,339
clients are no longer<font color="#E5E5E5"> talking directly</font>

372
00:16:19,359 --> 00:16:24,429
<font color="#E5E5E5">to the staff of s demons or the</font><font color="#CCCCCC"> surf</font>

373
00:16:21,339 --> 00:16:28,269
demons<font color="#CCCCCC"> but only talking to the ganesha</font>

374
00:16:24,429 --> 00:16:30,309
<font color="#E5E5E5">in a fest gateway</font><font color="#CCCCCC"> this has some benefits</font>

375
00:16:28,269 --> 00:16:32,679
<font color="#E5E5E5">of course because we can better isolate</font>

376
00:16:30,309 --> 00:16:34,358
traffic from<font color="#CCCCCC"> each other</font><font color="#E5E5E5"> and as John</font>

377
00:16:32,679 --> 00:16:37,720
mentioned<font color="#CCCCCC"> the drawbacks</font><font color="#E5E5E5"> that we have</font>

378
00:16:34,359 --> 00:16:41,639
when using<font color="#E5E5E5"> set</font><font color="#CCCCCC"> FS directly are no longer</font>

379
00:16:37,720 --> 00:16:44,439
come into play<font color="#CCCCCC"> here that it adds</font>

380
00:16:41,639 --> 00:16:48,069
actually well<font color="#E5E5E5"> a kind of men in the</font>

381
00:16:44,439 --> 00:16:50,079
middle<font color="#E5E5E5"> here in the data path so you need</font>

382
00:16:48,069 --> 00:16:52,779
to need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> run the Ganesha service in an</font>

383
00:16:50,079 --> 00:16:54,579
<font color="#E5E5E5">H a mode</font><font color="#CCCCCC"> highly available mode otherwise</font>

384
00:16:52,779 --> 00:16:57,339
<font color="#CCCCCC">it would become a single point of</font>

385
00:16:54,579 --> 00:16:59,888
failure<font color="#CCCCCC"> so what we're doing</font><font color="#E5E5E5"> here when we</font>

386
00:16:57,339 --> 00:17:03,600
set up<font color="#E5E5E5"> on</font><font color="#CCCCCC"> OpenStack deployment using</font>

387
00:16:59,889 --> 00:17:05,709
triple<font color="#E5E5E5"> L we're running pacemaker to</font>

388
00:17:03,600 --> 00:17:08,610
enable or to run<font color="#E5E5E5"> Ganesha and an</font>

389
00:17:05,709 --> 00:17:08,610
<font color="#CCCCCC">active/passive</font><font color="#E5E5E5"> mode</font>

390
00:17:11,599 --> 00:17:17,299
if<font color="#E5E5E5"> we look at the again at the network</font>

391
00:17:14,029 --> 00:17:20,358
level<font color="#E5E5E5"> we now create a new network for</font>

392
00:17:17,299 --> 00:17:21,648
just for the<font color="#E5E5E5"> NFS traffic itself and the</font>

393
00:17:20,358 --> 00:17:24,198
tenants<font color="#E5E5E5"> are no longer</font><font color="#CCCCCC"> directly</font>

394
00:17:21,648 --> 00:17:26,719
connecting to the<font color="#CCCCCC"> Ceph network</font><font color="#E5E5E5"> but to</font>

395
00:17:24,199 --> 00:17:31,129
<font color="#CCCCCC">the NFS network and ganesha has also</font>

396
00:17:26,720 --> 00:17:34,100
<font color="#E5E5E5">connected</font><font color="#CCCCCC"> to this NFS network so</font><font color="#E5E5E5"> you</font>

397
00:17:31,129 --> 00:17:36,498
might wonder actually if those tenants

398
00:17:34,100 --> 00:17:38,178
use the same in a<font color="#E5E5E5"> fast network to access</font>

399
00:17:36,499 --> 00:17:41,179
<font color="#E5E5E5">the data services you might see traffic</font>

400
00:17:38,179 --> 00:17:44,299
<font color="#E5E5E5">from</font><font color="#CCCCCC"> atop each</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> Manila</font>

401
00:17:41,179 --> 00:17:47,210
actually triggers or creates OpenStack

402
00:17:44,299 --> 00:17:49,220
Neutron security rules to isolate

403
00:17:47,210 --> 00:17:57,739
traffic between<font color="#E5E5E5"> different tenants from</font>

404
00:17:49,220 --> 00:18:00,649
each other as I mentioned we<font color="#E5E5E5"> are running</font>

405
00:17:57,739 --> 00:18:04,489
pacemaker<font color="#CCCCCC"> on the controller nodes within</font>

406
00:18:00,649 --> 00:18:06,619
our Trello deployed<font color="#E5E5E5"> environment so</font>

407
00:18:04,489 --> 00:18:08,899
there's a concept within triple<font color="#CCCCCC"> L called</font>

408
00:18:06,619 --> 00:18:10,459
composable roads<font color="#CCCCCC"> in composable roads</font>

409
00:18:08,899 --> 00:18:12,859
<font color="#E5E5E5">actually make it possible that you for</font>

410
00:18:10,460 --> 00:18:16,849
example<font color="#CCCCCC"> define a set of</font><font color="#E5E5E5"> nodes that</font><font color="#CCCCCC"> are</font>

411
00:18:12,859 --> 00:18:18,678
running specific services and it might

412
00:18:16,849 --> 00:18:21,049
be<font color="#E5E5E5"> well it would</font><font color="#CCCCCC"> be a nice idea</font><font color="#E5E5E5"> to</font>

413
00:18:18,679 --> 00:18:24,080
actually<font color="#E5E5E5"> run the few standalone notes</font>

414
00:18:21,049 --> 00:18:26,869
just for the<font color="#CCCCCC"> Ganesha services and with</font>

415
00:18:24,080 --> 00:18:28,879
their<font color="#E5E5E5"> own pacemaker cluster however the</font>

416
00:18:26,869 --> 00:18:30,408
pacemaker cluster at<font color="#E5E5E5"> the moment is tied</font>

417
00:18:28,879 --> 00:18:32,209
to the controller nodes because it's

418
00:18:30,409 --> 00:18:35,119
also<font color="#E5E5E5"> controlling other services as well</font>

419
00:18:32,210 --> 00:18:37,129
so we can't easily remove or move the

420
00:18:35,119 --> 00:18:39,529
pacemaker<font color="#E5E5E5"> service to a different node so</font>

421
00:18:37,129 --> 00:18:41,299
pacemaker<font color="#E5E5E5"> needs to run on the controller</font>

422
00:18:39,529 --> 00:18:42,769
nodes and because of that<font color="#E5E5E5"> Ganesha itself</font>

423
00:18:41,299 --> 00:18:47,658
needs to<font color="#E5E5E5"> run another controller nodes</font>

424
00:18:42,769 --> 00:18:50,029
and for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> needs to restart the</font>

425
00:18:47,659 --> 00:18:52,429
Ganesha container finishes running

426
00:18:50,029 --> 00:18:54,320
container<font color="#CCCCCC"> rights in</font><font color="#E5E5E5"> newer releases with</font>

427
00:18:52,429 --> 00:18:56,599
an<font color="#E5E5E5"> openstack</font><font color="#CCCCCC"> triplet oil was in trouble</font>

428
00:18:54,320 --> 00:18:58,989
<font color="#CCCCCC">Oh needs to</font><font color="#E5E5E5"> restart it on a different</font>

429
00:18:56,599 --> 00:18:58,989
<font color="#CCCCCC">note</font>

430
00:19:00,260 --> 00:19:03,559
[Music]

431
00:19:03,880 --> 00:19:10,160
so to summarize<font color="#E5E5E5"> what are the benefits</font>

432
00:19:07,280 --> 00:19:12,620
<font color="#E5E5E5">using</font><font color="#CCCCCC"> the CFS NFS Drive implementation</font>

433
00:19:10,160 --> 00:19:15,200
we<font color="#CCCCCC"> have better security because we can</font>

434
00:19:12,620 --> 00:19:17,239
actually<font color="#E5E5E5"> isolate the user virtual</font>

435
00:19:15,200 --> 00:19:21,740
machines from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> set of ethnic step</font>

436
00:19:17,240 --> 00:19:24,530
<font color="#CCCCCC">network and its demons</font><font color="#E5E5E5"> we already have</font>

437
00:19:21,740 --> 00:19:26,990
<font color="#E5E5E5">familiar NFS semantics that are included</font>

438
00:19:24,530 --> 00:19:28,910
in most guest operating systems which

439
00:19:26,990 --> 00:19:30,860
isn't for<font color="#E5E5E5"> some guests or for some</font>

440
00:19:28,910 --> 00:19:33,950
operators<font color="#CCCCCC"> pretty important</font><font color="#E5E5E5"> because you</font>

441
00:19:30,860 --> 00:19:38,030
can for<font color="#E5E5E5"> example add safe drivers to your</font>

442
00:19:33,950 --> 00:19:40,400
pet sematary guest system and but

443
00:19:38,030 --> 00:19:44,510
instead NFS itself is widely<font color="#E5E5E5"> supported</font>

444
00:19:40,400 --> 00:19:46,370
already out<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the box we have some</font><font color="#CCCCCC"> pass</font>

445
00:19:44,510 --> 00:19:50,210
separation in the backend storage system

446
00:19:46,370 --> 00:19:52,280
and by using OpenStack Neutron<font color="#E5E5E5"> network</font>

447
00:19:50,210 --> 00:19:56,420
policies we can<font color="#E5E5E5"> actually enable or</font>

448
00:19:52,280 --> 00:19:58,370
enforce<font color="#CCCCCC"> ZZ</font><font color="#E5E5E5"> back-end traffic is isolated</font>

449
00:19:56,420 --> 00:20:00,980
from tenant to tenant and<font color="#E5E5E5"> that gives us</font>

450
00:19:58,370 --> 00:20:02,889
the possibility<font color="#CCCCCC"> to run it more in the</font>

451
00:20:00,980 --> 00:20:05,330
open<font color="#CCCCCC"> in a public cloud environment</font>

452
00:20:02,890 --> 00:20:07,610
<font color="#CCCCCC">compared to for example</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> private cloud</font>

453
00:20:05,330 --> 00:20:13,370
deployment where you can trust<font color="#CCCCCC"> your</font>

454
00:20:07,610 --> 00:20:15,409
<font color="#E5E5E5">little machines but there are also some</font>

455
00:20:13,370 --> 00:20:16,939
drawbacks here so as I mentioned Ganesha

456
00:20:15,410 --> 00:20:18,680
<font color="#E5E5E5">as a man-in-the-middle now in the data</font>

457
00:20:16,940 --> 00:20:21,980
path and your guests are no<font color="#E5E5E5"> longer</font>

458
00:20:18,680 --> 00:20:25,250
directly<font color="#E5E5E5"> to the h AE enabled or H a</font>

459
00:20:21,980 --> 00:20:29,090
<font color="#E5E5E5">Ready Set cluster but to the only to the</font>

460
00:20:25,250 --> 00:20:32,540
Ganesha service so what we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font>

461
00:20:29,090 --> 00:20:34,250
do is actually we would like to<font color="#CCCCCC"> run</font><font color="#E5E5E5"> s</font>

462
00:20:32,540 --> 00:20:37,730
would<font color="#E5E5E5"> be a trunk</font><font color="#CCCCCC"> Anisha and</font><font color="#E5E5E5"> an</font>

463
00:20:34,250 --> 00:20:40,130
<font color="#CCCCCC">active-active mode all run for example</font>

464
00:20:37,730 --> 00:20:43,220
<font color="#CCCCCC">ganesha in a way</font><font color="#E5E5E5"> that we spawn a</font>

465
00:20:40,130 --> 00:20:45,740
separate ganesha instance for every

466
00:20:43,220 --> 00:20:48,140
tenant<font color="#E5E5E5"> so instead of setting up a singer</font>

467
00:20:45,740 --> 00:20:51,380
<font color="#E5E5E5">ganesha service when we deploy the</font>

468
00:20:48,140 --> 00:20:54,950
OpenStack cloud<font color="#E5E5E5"> we could well we could</font>

469
00:20:51,380 --> 00:20:58,190
actually do start<font color="#E5E5E5"> a Ganesha service</font>

470
00:20:54,950 --> 00:21:00,650
third<font color="#E5E5E5"> power tenant on-demand and by</font>

471
00:20:58,190 --> 00:21:02,300
doing<font color="#CCCCCC"> so we would increase the</font>

472
00:21:00,650 --> 00:21:04,340
performance<font color="#E5E5E5"> that we get out of</font><font color="#CCCCCC"> this</font>

473
00:21:02,300 --> 00:21:06,260
<font color="#CCCCCC">total service and not</font><font color="#E5E5E5"> exposing like a</font>

474
00:21:04,340 --> 00:21:07,970
single<font color="#E5E5E5"> point of failure because you only</font>

475
00:21:06,260 --> 00:21:13,129
have a<font color="#CCCCCC"> single</font><font color="#E5E5E5"> commercial</font><font color="#CCCCCC"> service running</font>

476
00:21:07,970 --> 00:21:13,990
<font color="#E5E5E5">and was that sad I'm giving over to John</font>

477
00:21:13,130 --> 00:21:15,460
again

478
00:21:13,990 --> 00:21:19,300
was give me giving you an odd look on

479
00:21:15,460 --> 00:21:22,210
what comes next<font color="#E5E5E5"> so it's fairly clear</font>

480
00:21:19,300 --> 00:21:23,379
<font color="#E5E5E5">that we've got the native driver that</font>

481
00:21:22,210 --> 00:21:26,080
gives you<font color="#E5E5E5"> great performance and</font>

482
00:21:23,380 --> 00:21:29,650
simplicity<font color="#E5E5E5"> but has a big</font><font color="#CCCCCC"> security</font>

483
00:21:26,080 --> 00:21:31,149
problem and the NFS driver<font color="#E5E5E5"> which is much</font>

484
00:21:29,650 --> 00:21:33,010
<font color="#E5E5E5">easier</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> and much more generally</font>

485
00:21:31,150 --> 00:21:36,300
<font color="#CCCCCC">applicable</font><font color="#E5E5E5"> but has some innate</font>

486
00:21:33,010 --> 00:21:36,300
limitations in terms<font color="#E5E5E5"> of performance</font>

487
00:21:36,390 --> 00:21:41,650
<font color="#E5E5E5">naturally we want to build a scale out</font>

488
00:21:38,410 --> 00:21:43,210
<font color="#CCCCCC">manifest solution the way we want to</font><font color="#E5E5E5"> do</font>

489
00:21:41,650 --> 00:21:47,800
that is to have<font color="#CCCCCC"> a tighter integration</font>

490
00:21:43,210 --> 00:21:50,980
between Seth and<font color="#E5E5E5"> Ganesha pacemaker and</font>

491
00:21:47,800 --> 00:21:53,830
<font color="#E5E5E5">chorus Inc are very useful tools for</font><font color="#CCCCCC"> h.a</font>

492
00:21:50,980 --> 00:21:57,280
up to a certain scale but we envisage

493
00:21:53,830 --> 00:21:58,449
<font color="#E5E5E5">that in the future we're gonna have NFS</font>

494
00:21:57,280 --> 00:22:01,690
<font color="#E5E5E5">daemons that need to scale out</font>

495
00:21:58,450 --> 00:22:04,720
potentially as far as<font color="#E5E5E5"> scales out so</font>

496
00:22:01,690 --> 00:22:08,290
potentially up<font color="#CCCCCC"> to hundredths and</font><font color="#E5E5E5"> we'll</font>

497
00:22:04,720 --> 00:22:10,960
also want<font color="#E5E5E5"> to have Ganesha demons that</font>

498
00:22:08,290 --> 00:22:13,389
<font color="#E5E5E5">are created on a perk tenant or per</font>

499
00:22:10,960 --> 00:22:15,429
share basis so have a much<font color="#E5E5E5"> larger volume</font>

500
00:22:13,390 --> 00:22:19,240
<font color="#E5E5E5">of these than pacemaker chorus Inc will</font>

501
00:22:15,429 --> 00:22:21,520
be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> handle SEF fortunately</font>

502
00:22:19,240 --> 00:22:24,610
already has lots of general-purpose bits

503
00:22:21,520 --> 00:22:27,400
for keeping its own services running so

504
00:22:24,610 --> 00:22:30,610
we intend to put<font color="#CCCCCC"> a wrapper around</font><font color="#E5E5E5"> NFS</font>

505
00:22:27,400 --> 00:22:32,980
Ganesha<font color="#E5E5E5"> and</font><font color="#CCCCCC"> run it in a way that it's</font>

506
00:22:30,610 --> 00:22:35,530
slaved to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> South cluster that</font><font color="#E5E5E5"> should</font>

507
00:22:32,980 --> 00:22:38,740
also make it<font color="#E5E5E5"> simpler to deploy because</font>

508
00:22:35,530 --> 00:22:41,889
<font color="#E5E5E5">there's no extra configuration to do for</font>

509
00:22:38,740 --> 00:22:44,679
<font color="#CCCCCC">chorusing pacemaker and</font><font color="#E5E5E5"> also easier to</font>

510
00:22:41,890 --> 00:22:45,940
use for<font color="#E5E5E5"> users in general</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> SAP so</font>

511
00:22:44,679 --> 00:22:49,480
whether you're running<font color="#E5E5E5"> with Manila</font><font color="#CCCCCC"> or</font>

512
00:22:45,940 --> 00:22:51,160
any other environment<font color="#CCCCCC"> we can potentially</font>

513
00:22:49,480 --> 00:22:53,650
<font color="#E5E5E5">give you a single command that both</font>

514
00:22:51,160 --> 00:22:58,110
creates the<font color="#E5E5E5"> filesystem</font><font color="#CCCCCC"> and configures</font>

515
00:22:53,650 --> 00:22:58,110
<font color="#CCCCCC">the skill map NFS on top of it</font>

516
00:22:58,950 --> 00:23:04,809
kubernetes<font color="#E5E5E5"> comes in here as well so</font>

517
00:23:02,830 --> 00:23:07,600
there<font color="#E5E5E5"> are a number of efforts ongoing at</font>

518
00:23:04,809 --> 00:23:09,730
the moment to bring<font color="#CCCCCC"> SEF into kubernetes</font>

519
00:23:07,600 --> 00:23:11,320
environments<font color="#CCCCCC"> and</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> only to provide the</font>

520
00:23:09,730 --> 00:23:12,600
<font color="#E5E5E5">storage to applications running those</font>

521
00:23:11,320 --> 00:23:16,860
<font color="#CCCCCC">environments but</font><font color="#E5E5E5"> also to take advantage</font>

522
00:23:12,600 --> 00:23:16,860
<font color="#CCCCCC">of what people at ease can do</font>

523
00:23:19,870 --> 00:23:25,760
to run our services to<font color="#CCCCCC"> keep our</font><font color="#E5E5E5"> services</font>

524
00:23:22,790 --> 00:23:27,590
up<font color="#E5E5E5"> scale them and so on and that</font><font color="#CCCCCC"> will</font>

525
00:23:25,760 --> 00:23:30,620
apply to<font color="#E5E5E5"> NFS</font><font color="#CCCCCC"> kanesha</font>

526
00:23:27,590 --> 00:23:33,649
so when Seth wants to<font color="#E5E5E5"> create a new</font>

527
00:23:30,620 --> 00:23:36,250
<font color="#CCCCCC">Ganesha demon it will ask kubernetes</font><font color="#E5E5E5"> to</font>

528
00:23:33,650 --> 00:23:39,650
do that for it whether<font color="#E5E5E5"> your application</font>

529
00:23:36,250 --> 00:23:41,650
<font color="#E5E5E5">is based on kubernetes or not so even if</font>

530
00:23:39,650 --> 00:23:44,570
you're<font color="#CCCCCC"> on a traditional OpenStack cloud</font>

531
00:23:41,650 --> 00:23:46,820
you would still probably<font color="#E5E5E5"> be using</font>

532
00:23:44,570 --> 00:23:48,110
kubernetes behind the scenes if you

533
00:23:46,820 --> 00:23:51,040
wanted to surf cluster<font color="#E5E5E5"> that could</font>

534
00:23:48,110 --> 00:23:53,120
provide this<font color="#E5E5E5"> kind of capability for you</font>

535
00:23:51,040 --> 00:23:55,639
so here's a diagram of<font color="#CCCCCC"> what that</font>

536
00:23:53,120 --> 00:23:57,830
solution<font color="#E5E5E5"> looks like Manila is still</font>

537
00:23:55,640 --> 00:24:02,000
there in the top left<font color="#CCCCCC"> and it's calling</font>

538
00:23:57,830 --> 00:24:03,649
<font color="#E5E5E5">down</font><font color="#CCCCCC"> to in the MGR there is the Ceph</font>

539
00:24:02,000 --> 00:24:06,830
manager daemon it's one of the<font color="#E5E5E5"> demons in</font>

540
00:24:03,650 --> 00:24:09,620
a<font color="#E5E5E5"> south cluster and it asks the manager</font>

541
00:24:06,830 --> 00:24:12,889
to create<font color="#E5E5E5"> and delete</font><font color="#CCCCCC"> shares for</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and</font>

542
00:24:09,620 --> 00:24:16,030
on<font color="#CCCCCC"> Manila's behalf the manager calls out</font>

543
00:24:12,890 --> 00:24:19,490
to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bottom there</font><font color="#CCCCCC"> to kubernetes and</font>

544
00:24:16,030 --> 00:24:21,350
<font color="#E5E5E5">asks it to create these pods</font><font color="#CCCCCC"> that</font>

545
00:24:19,490 --> 00:24:22,100
contain a<font color="#E5E5E5"> new service that we intend to</font>

546
00:24:21,350 --> 00:24:26,389
create called

547
00:24:22,100 --> 00:24:28,610
NFS GW which is a sort of<font color="#CCCCCC"> analog to rtw</font>

548
00:24:26,390 --> 00:24:33,410
the<font color="#CCCCCC"> Raiders gateway but</font><font color="#E5E5E5"> it's doing NFS</font>

549
00:24:28,610 --> 00:24:36,350
<font color="#CCCCCC">and</font><font color="#E5E5E5"> those pods would be the the data</font>

550
00:24:33,410 --> 00:24:38,540
path<font color="#E5E5E5"> for the user applications</font><font color="#CCCCCC"> UC Korea</font>

551
00:24:36,350 --> 00:24:43,370
is mentioned at the<font color="#E5E5E5"> bottom left of that</font>

552
00:24:38,540 --> 00:24:45,320
<font color="#E5E5E5">diagram as well that's about the network</font>

553
00:24:43,370 --> 00:24:48,679
configuration that<font color="#E5E5E5"> goes with this so as</font>

554
00:24:45,320 --> 00:24:50,270
well<font color="#E5E5E5"> as creating NFS daemons / tenant we</font>

555
00:24:48,680 --> 00:24:53,150
will<font color="#CCCCCC"> also need</font><font color="#E5E5E5"> to be doing network</font>

556
00:24:50,270 --> 00:24:56,060
configuration<font color="#E5E5E5"> / tenant to give them the</font>

557
00:24:53,150 --> 00:24:59,290
right level of<font color="#E5E5E5"> isolation that's very</font>

558
00:24:56,060 --> 00:25:02,000
much an emerging area<font color="#E5E5E5"> in kubernetes</font>

559
00:24:59,290 --> 00:25:04,820
traditionally kubernetes pods<font color="#CCCCCC"> only had</font>

560
00:25:02,000 --> 00:25:06,110
one IP<font color="#E5E5E5"> and that was all</font><font color="#CCCCCC"> you got but</font>

561
00:25:04,820 --> 00:25:09,350
<font color="#E5E5E5">things are moving fairly quickly in</font>

562
00:25:06,110 --> 00:25:12,229
kubernetes<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> imagine that things</font>

563
00:25:09,350 --> 00:25:14,659
like<font color="#E5E5E5"> these storage containers will</font><font color="#CCCCCC"> be a</font>

564
00:25:12,230 --> 00:25:16,460
sort of<font color="#E5E5E5"> early adopter of the new</font>

565
00:25:14,660 --> 00:25:19,210
improved<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> that's going to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> out</font>

566
00:25:16,460 --> 00:25:19,210
there in communities

567
00:25:20,590 --> 00:25:26,289
so this is the sort of third revision<font color="#E5E5E5"> of</font>

568
00:25:23,440 --> 00:25:28,450
that<font color="#E5E5E5"> same basic diagram but this time</font>

569
00:25:26,289 --> 00:25:30,600
you<font color="#E5E5E5"> can see</font><font color="#CCCCCC"> ten and a and ten and B are</font>

570
00:25:28,450 --> 00:25:33,220
both<font color="#CCCCCC"> talking to their own</font><font color="#E5E5E5"> Ganesha</font>

571
00:25:30,600 --> 00:25:35,439
<font color="#CCCCCC">they're not sharing</font><font color="#E5E5E5"> anything at all</font>

572
00:25:33,220 --> 00:25:40,659
anymore they're fully isolated<font color="#E5E5E5"> which is</font>

573
00:25:35,440 --> 00:25:43,779
kind of what we wanted to<font color="#CCCCCC"> begin</font><font color="#E5E5E5"> with so</font>

574
00:25:40,659 --> 00:25:47,679
this<font color="#CCCCCC"> isn't trivial</font><font color="#E5E5E5"> and it's not all just</font>

575
00:25:43,779 --> 00:25:50,019
<font color="#E5E5E5">planning making a scale out Ganesha</font>

576
00:25:47,679 --> 00:25:52,600
cluster<font color="#E5E5E5"> on top of</font><font color="#CCCCCC"> SEPA fest has some</font>

577
00:25:50,019 --> 00:25:55,179
<font color="#CCCCCC">challenges</font><font color="#E5E5E5"> running it to begin</font><font color="#CCCCCC"> with is</font>

578
00:25:52,600 --> 00:25:57,580
very easy<font color="#E5E5E5"> you can download Ganesha and</font>

579
00:25:55,179 --> 00:25:59,499
do this<font color="#E5E5E5"> today</font><font color="#CCCCCC"> it's a shared file system</font>

580
00:25:57,580 --> 00:26:01,720
<font color="#E5E5E5">you can put</font><font color="#CCCCCC"> multiple</font><font color="#E5E5E5"> front ends in front</font>

581
00:25:59,499 --> 00:26:04,360
of it<font color="#E5E5E5"> and that's all fine but</font><font color="#CCCCCC"> when a</font>

582
00:26:01,720 --> 00:26:06,879
failover<font color="#E5E5E5"> happens we need a little bit</font>

583
00:26:04,360 --> 00:26:09,789
more stuff happening here

584
00:26:06,879 --> 00:26:12,939
so NFS clients have some state with

585
00:26:09,789 --> 00:26:16,360
their NFS server but<font color="#CCCCCC"> the NFS server is</font>

586
00:26:12,940 --> 00:26:18,369
<font color="#E5E5E5">also a separate client that creates a</font>

587
00:26:16,360 --> 00:26:20,439
fair bit<font color="#CCCCCC"> of complication in terms of</font>

588
00:26:18,369 --> 00:26:22,720
what<font color="#E5E5E5"> order you restart services in when</font>

589
00:26:20,440 --> 00:26:24,879
a<font color="#E5E5E5"> failover happens but also at war</font>

590
00:26:22,720 --> 00:26:27,129
points you have<font color="#CCCCCC"> to put the NFS services</font>

591
00:26:24,879 --> 00:26:29,408
into what they call grace<font color="#E5E5E5"> so when you</font>

592
00:26:27,129 --> 00:26:31,418
put an NFS demon<font color="#CCCCCC"> into</font><font color="#E5E5E5"> into grace it</font>

593
00:26:29,409 --> 00:26:36,100
means that it's not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> let any</font>

594
00:26:31,419 --> 00:26:39,190
clients<font color="#E5E5E5"> take any any new locks or access</font>

595
00:26:36,100 --> 00:26:40,959
<font color="#E5E5E5">any</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> files until</font><font color="#CCCCCC"> two failed daemon</font>

596
00:26:39,190 --> 00:26:42,879
that we're currently<font color="#E5E5E5"> replacing has come</font>

597
00:26:40,960 --> 00:26:44,740
back and<font color="#E5E5E5"> that's to prevent</font><font color="#CCCCCC"> locks getting</font>

598
00:26:42,879 --> 00:26:47,769
stolen<font color="#E5E5E5"> and provide the right semantics</font>

599
00:26:44,740 --> 00:26:51,340
<font color="#E5E5E5">for the user application it's quite an</font>

600
00:26:47,769 --> 00:26:53,710
obscure aspect of implementing NFS that

601
00:26:51,340 --> 00:26:55,658
most people aren't<font color="#CCCCCC"> familiar with but</font><font color="#E5E5E5"> it</font>

602
00:26:53,710 --> 00:26:58,299
becomes<font color="#E5E5E5"> very important once you start</font>

603
00:26:55,659 --> 00:26:59,679
doing active actor NFS and<font color="#E5E5E5"> scaling it</font>

604
00:26:58,299 --> 00:27:01,629
<font color="#E5E5E5">out especially</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you're putting it on</font>

605
00:26:59,679 --> 00:27:07,899
top<font color="#E5E5E5"> of another system which is doing its</font>

606
00:27:01,629 --> 00:27:11,740
own<font color="#CCCCCC"> AJ underneath in this case Seth even</font>

607
00:27:07,899 --> 00:27:13,748
further out<font color="#E5E5E5"> MDS is in safe clusters the</font>

608
00:27:11,740 --> 00:27:15,639
metadata servers are themselves<font color="#CCCCCC"> a scale</font>

609
00:27:13,749 --> 00:27:17,350
out<font color="#E5E5E5"> cluster so we'll want to scale out</font>

610
00:27:15,639 --> 00:27:19,629
the MDS at the same time<font color="#CCCCCC"> we scale</font><font color="#E5E5E5"> out</font>

611
00:27:17,350 --> 00:27:23,129
the<font color="#CCCCCC"> MPS daemons</font><font color="#E5E5E5"> to let you do things</font>

612
00:27:19,629 --> 00:27:27,189
<font color="#E5E5E5">like small file workloads efficiently</font>

613
00:27:23,129 --> 00:27:30,399
NFS delegations will speed up<font color="#E5E5E5"> these</font>

614
00:27:27,190 --> 00:27:32,470
workloads<font color="#CCCCCC"> a lot for certain applications</font>

615
00:27:30,399 --> 00:27:34,360
<font color="#CCCCCC">that don't</font><font color="#E5E5E5"> want to keep doing lots of</font>

616
00:27:32,470 --> 00:27:36,549
round trips<font color="#E5E5E5"> all the way down to the</font>

617
00:27:34,360 --> 00:27:39,610
<font color="#CCCCCC">south cluster that allows the so a</font>

618
00:27:36,549 --> 00:27:41,889
delegation<font color="#E5E5E5"> allows the safe cluster to</font>

619
00:27:39,610 --> 00:27:43,508
say to the NFS demons<font color="#CCCCCC"> okay you manage</font>

620
00:27:41,889 --> 00:27:45,959
this<font color="#E5E5E5"> file for the moment you don't have</font>

621
00:27:43,509 --> 00:27:49,570
to ask me to do more accesses to<font color="#E5E5E5"> it</font>

622
00:27:45,960 --> 00:27:51,490
<font color="#CCCCCC">PNF</font><font color="#E5E5E5"> s parallel NFS everybody's been</font>

623
00:27:49,570 --> 00:27:54,399
<font color="#CCCCCC">waiting years p NFS</font>

624
00:27:51,490 --> 00:27:56,559
it might still<font color="#E5E5E5"> happen one day in the</font>

625
00:27:54,399 --> 00:27:58,899
context of<font color="#CCCCCC"> seth what that might look</font>

626
00:27:56,559 --> 00:28:00,970
like<font color="#E5E5E5"> is</font><font color="#CCCCCC"> putting a little lightweight</font>

627
00:27:58,899 --> 00:28:04,119
<font color="#CCCCCC">demon in front of each of the OSDs</font>

628
00:28:00,970 --> 00:28:05,980
that allows<font color="#CCCCCC"> pmf</font><font color="#E5E5E5"> s traffic to go through</font>

629
00:28:04,119 --> 00:28:09,039
<font color="#CCCCCC">it and what that</font><font color="#E5E5E5"> would mean would</font><font color="#CCCCCC"> be</font>

630
00:28:05,980 --> 00:28:11,200
that an individual NFS client<font color="#E5E5E5"> even when</font>

631
00:28:09,039 --> 00:28:12,700
going<font color="#E5E5E5"> via NFS rather than</font><font color="#CCCCCC"> surface native</font>

632
00:28:11,200 --> 00:28:17,700
protocol would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to get the full</font>

633
00:28:12,700 --> 00:28:19,899
bandwidth of the cluster<font color="#E5E5E5"> and finally</font>

634
00:28:17,700 --> 00:28:20,379
there's the use of this outside<font color="#E5E5E5"> of</font>

635
00:28:19,899 --> 00:28:23,860
OpenStack

636
00:28:20,379 --> 00:28:25,539
<font color="#CCCCCC">so Manila is a</font><font color="#E5E5E5"> fairly separable thing</font>

637
00:28:23,860 --> 00:28:27,820
from OpenStack

638
00:28:25,539 --> 00:28:30,279
it will be<font color="#E5E5E5"> interesting to see</font><font color="#CCCCCC"> to what</font>

639
00:28:27,820 --> 00:28:33,730
extent<font color="#CCCCCC"> Manila gets reused in other</font>

640
00:28:30,279 --> 00:28:35,320
<font color="#CCCCCC">environments but</font><font color="#E5E5E5"> also to what extent the</font>

641
00:28:33,730 --> 00:28:37,299
components<font color="#E5E5E5"> that we're building here to</font>

642
00:28:35,320 --> 00:28:39,009
support Manila<font color="#E5E5E5"> get wrapped up in other</font>

643
00:28:37,299 --> 00:28:40,690
<font color="#CCCCCC">environments so much of the same stuff</font>

644
00:28:39,009 --> 00:28:41,889
for<font color="#E5E5E5"> somebody else in Manila they'll also</font>

645
00:28:40,690 --> 00:28:43,750
want in

646
00:28:41,889 --> 00:28:45,639
kubernetes or any other container

647
00:28:43,750 --> 00:28:49,299
orchestrated environment so we

648
00:28:45,639 --> 00:28:51,879
<font color="#CCCCCC">anticipate this stuff that we're</font>

649
00:28:49,299 --> 00:28:55,320
building into<font color="#E5E5E5"> SEF and unsafe for Manila</font>

650
00:28:51,879 --> 00:28:56,980
<font color="#E5E5E5">showing up in other frameworks as well</font>

651
00:28:55,320 --> 00:28:59,080
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> all I've got</font>

652
00:28:56,980 --> 00:29:01,440
thanks<font color="#CCCCCC"> very much</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> your attention any</font>

653
00:28:59,080 --> 00:29:01,439
questions

654
00:29:04,710 --> 00:29:19,789
I did not<font color="#CCCCCC"> so you're asking about</font>

655
00:29:16,559 --> 00:29:22,889
Kerberos which I didn't mention<font color="#E5E5E5"> and</font>

656
00:29:19,789 --> 00:29:25,950
that's because that's a<font color="#E5E5E5"> general-purpose</font>

657
00:29:22,889 --> 00:29:36,330
<font color="#E5E5E5">NFS aspect and it doesn't change if you</font>

658
00:29:25,950 --> 00:29:38,159
<font color="#CCCCCC">ETF so whatever Kerberos support exists</font>

659
00:29:36,330 --> 00:29:41,039
in your NFS demon will still exist when

660
00:29:38,159 --> 00:29:43,700
you're<font color="#E5E5E5"> running on safe I'm not an expert</font>

661
00:29:41,039 --> 00:29:43,700
<font color="#E5E5E5">on the aspect</font>

662
00:30:07,330 --> 00:30:13,480
so I<font color="#E5E5E5"> think the</font><font color="#CCCCCC"> question is what I'm</font>

663
00:30:09,999 --> 00:30:16,149
running NFS<font color="#E5E5E5"> on top of CFS and both</font><font color="#CCCCCC"> of</font>

664
00:30:13,480 --> 00:30:18,369
them are doing<font color="#E5E5E5"> sub mounts</font><font color="#CCCCCC"> sub directory</font>

665
00:30:16,149 --> 00:30:23,049
mounts how are we tracking the metadata

666
00:30:18,369 --> 00:30:27,039
beneath that so the metadata<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> SEF</font>

667
00:30:23,049 --> 00:30:29,019
is completely unchanged<font color="#CCCCCC"> you can mount</font>

668
00:30:27,039 --> 00:30:30,908
the overall<font color="#CCCCCC"> filesystem that's storing</font>

669
00:30:29,019 --> 00:30:33,940
<font color="#E5E5E5">these volumes and you will see all of</font>

670
00:30:30,909 --> 00:30:35,769
the volumes<font color="#E5E5E5"> as sub directories and you</font>

671
00:30:33,940 --> 00:30:38,289
can even read and write to<font color="#CCCCCC"> them</font><font color="#E5E5E5"> safely</font>

672
00:30:35,769 --> 00:30:40,509
at the<font color="#E5E5E5"> same time because our whole</font>

673
00:30:38,289 --> 00:30:42,908
<font color="#CCCCCC">concept of a</font><font color="#E5E5E5"> volume is this sort of sham</font>

674
00:30:40,509 --> 00:30:44,559
where<font color="#E5E5E5"> really</font><font color="#CCCCCC"> it's just a directory we</font>

675
00:30:42,909 --> 00:30:46,029
don't have to really<font color="#E5E5E5"> make any changes at</font>

676
00:30:44,559 --> 00:30:50,700
<font color="#E5E5E5">all and how the metadata is stored on</font>

677
00:30:46,029 --> 00:30:50,700
<font color="#E5E5E5">the backend yes</font>

678
00:30:56,709 --> 00:31:04,820
it's it's still<font color="#E5E5E5"> in service yes sir sorry</font>

679
00:31:00,769 --> 00:31:06,859
the question was<font color="#E5E5E5"> yeah sorry I forgot to</font>

680
00:31:04,820 --> 00:31:08,749
repeat the question there it was<font color="#CCCCCC"> will</font>

681
00:31:06,859 --> 00:31:11,149
the NFS<font color="#E5E5E5"> demon still run on separate us</font>

682
00:31:08,749 --> 00:31:12,919
<font color="#E5E5E5">all they run directly on SEF or the</font>

683
00:31:11,149 --> 00:31:15,918
underlying<font color="#CCCCCC"> Raiders and</font><font color="#E5E5E5"> the answer is it</font>

684
00:31:12,919 --> 00:31:18,279
still<font color="#CCCCCC"> Sapir us</font><font color="#E5E5E5"> just with a more nicely</font>

685
00:31:15,919 --> 00:31:21,940
<font color="#E5E5E5">packaged NFS solution on top</font><font color="#CCCCCC"> of it</font>

686
00:31:18,279 --> 00:31:21,940
<font color="#E5E5E5">that's one question here</font>

687
00:31:33,320 --> 00:31:39,439
right<font color="#E5E5E5"> so the question is why are we</font>

688
00:31:36,090 --> 00:31:42,449
<font color="#CCCCCC">doing file</font><font color="#E5E5E5"> systems and not block devices</font>

689
00:31:39,440 --> 00:31:45,360
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> for workloads</font><font color="#CCCCCC"> that require a shared</font>

690
00:31:42,450 --> 00:31:47,100
file system<font color="#CCCCCC"> so if you have a workload</font>

691
00:31:45,360 --> 00:31:49,649
<font color="#CCCCCC">that requires storage</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is only</font>

692
00:31:47,100 --> 00:31:53,820
<font color="#E5E5E5">accessed by</font><font color="#CCCCCC"> one VM at once</font><font color="#E5E5E5"> then a block</font>

693
00:31:49,649 --> 00:31:55,590
<font color="#E5E5E5">device works well but if you</font><font color="#CCCCCC"> want a file</font>

694
00:31:53,820 --> 00:31:58,320
system<font color="#CCCCCC"> that</font><font color="#E5E5E5"> will be accessed at the same</font>

695
00:31:55,590 --> 00:32:00,418
time by many different<font color="#CCCCCC"> nodes then</font><font color="#E5E5E5"> Manila</font>

696
00:31:58,320 --> 00:32:03,270
is what you want<font color="#E5E5E5"> so cinder cinder is</font>

697
00:32:00,419 --> 00:32:05,730
still great<font color="#E5E5E5"> for a single single node</font>

698
00:32:03,270 --> 00:32:08,100
access and<font color="#E5E5E5"> Manila is primarily for</font>

699
00:32:05,730 --> 00:32:13,860
people<font color="#E5E5E5"> who want shared file systems</font>

700
00:32:08,100 --> 00:32:16,010
<font color="#E5E5E5">access by many notes at once one last</font>

701
00:32:13,860 --> 00:32:16,010
question

702
00:32:16,370 --> 00:32:20,998
[Music]

703
00:32:24,010 --> 00:32:28,150
I'm sorry<font color="#CCCCCC"> icon Hey</font>

704
00:32:36,490 --> 00:32:39,609
[Music]

705
00:32:49,540 --> 00:32:54,399
[Music]

706
00:32:51,610 --> 00:32:56,139
I'm sorry<font color="#E5E5E5"> that the question was when</font>

707
00:32:54,400 --> 00:32:58,300
<font color="#E5E5E5">deploying the the</font><font color="#CCCCCC"> Queen's version of all</font>

708
00:32:56,140 --> 00:33:00,160
of<font color="#CCCCCC"> this with</font><font color="#E5E5E5"> the NFS solution and does</font>

709
00:32:58,300 --> 00:33:02,350
it require any special<font color="#E5E5E5"> dependencies of</font>

710
00:33:00,160 --> 00:33:05,290
<font color="#E5E5E5">configuration especially on the network</font>

711
00:33:02,350 --> 00:33:06,969
side<font color="#E5E5E5"> so whether the</font><font color="#CCCCCC"> Queen's release and</font>

712
00:33:05,290 --> 00:33:09,190
will be fully integrated<font color="#CCCCCC"> on the triple</font>

713
00:33:06,970 --> 00:33:12,160
our<font color="#E5E5E5"> site so when you deploy</font><font color="#CCCCCC"> a nova cloud</font>

714
00:33:09,190 --> 00:33:13,930
using the Red<font color="#E5E5E5"> Hat's triple o then it</font>

715
00:33:12,160 --> 00:33:16,150
will be fully<font color="#CCCCCC"> integrated already you</font>

716
00:33:13,930 --> 00:33:19,150
just<font color="#E5E5E5"> need to enable it during the deploy</font>

717
00:33:16,150 --> 00:33:21,970
time so when you're familiar with<font color="#E5E5E5"> with</font>

718
00:33:19,150 --> 00:33:24,460
<font color="#E5E5E5">triple o you have a bunch of environment</font>

719
00:33:21,970 --> 00:33:28,390
<font color="#CCCCCC">tires that for example set various items</font>

720
00:33:24,460 --> 00:33:30,340
networking stuff like that and with the

721
00:33:28,390 --> 00:33:33,310
<font color="#E5E5E5">Queen's release it will be as simple as</font>

722
00:33:30,340 --> 00:33:35,709
like<font color="#CCCCCC"> just adding an additional included</font>

723
00:33:33,310 --> 00:33:38,230
environment fire<font color="#E5E5E5"> and that will spawn up</font>

724
00:33:35,710 --> 00:33:40,720
and<font color="#E5E5E5"> well</font><font color="#CCCCCC"> deploys again azure</font><font color="#E5E5E5"> services</font>

725
00:33:38,230 --> 00:33:42,730
<font color="#CCCCCC">and other services so</font><font color="#E5E5E5"> you can just use</font>

726
00:33:40,720 --> 00:33:47,500
<font color="#CCCCCC">it basically out of the box</font><font color="#E5E5E5"> that's the</font>

727
00:33:42,730 --> 00:33:49,680
<font color="#CCCCCC">ID okay</font><font color="#E5E5E5"> okay I think that's it thanks</font>

728
00:33:47,500 --> 00:33:49,680
everyone

