1
00:00:05,200 --> 00:00:12,250
hello everybody<font color="#CCCCCC"> so</font>

2
00:00:08,650 --> 00:00:19,390
<font color="#CCCCCC">second only 20</font><font color="#E5E5E5"> minutes to tell you all</font>

3
00:00:12,250 --> 00:00:23,259
the fun stuff<font color="#E5E5E5"> of this about me so very</font>

4
00:00:19,390 --> 00:00:26,859
<font color="#CCCCCC">short just working full time about on my</font>

5
00:00:23,259 --> 00:00:30,009
scale performance<font color="#CCCCCC"> 3 milli fun stuff and</font>

6
00:00:26,859 --> 00:00:34,510
<font color="#E5E5E5">I can you tell much</font><font color="#CCCCCC"> more so little yes I</font>

7
00:00:30,009 --> 00:00:40,269
have only 20<font color="#E5E5E5"> minutes about of try to do</font>

8
00:00:34,510 --> 00:00:43,299
it in<font color="#CCCCCC"> 15 and so well what are my</font><font color="#E5E5E5"> main</font>

9
00:00:40,269 --> 00:00:46,089
problems so in fact if you<font color="#E5E5E5"> if your</font>

10
00:00:43,299 --> 00:00:50,260
problems are<font color="#CCCCCC"> something</font><font color="#E5E5E5"> how to tune your</font>

11
00:00:46,089 --> 00:00:50,860
<font color="#E5E5E5">query or use right in right way</font><font color="#CCCCCC"> MySQL</font>

12
00:00:50,260 --> 00:00:54,220
and<font color="#E5E5E5"> so on</font>

13
00:00:50,860 --> 00:00:55,210
everything you can<font color="#E5E5E5"> read from HT</font><font color="#CCCCCC"> FM it's</font>

14
00:00:54,220 --> 00:00:57,519
not my<font color="#E5E5E5"> problem</font>

15
00:00:55,210 --> 00:00:59,799
so my problem<font color="#E5E5E5"> is it's about what you</font>

16
00:00:57,519 --> 00:01:03,570
cannot fix<font color="#E5E5E5"> which is broken by design</font>

17
00:00:59,799 --> 00:01:06,729
will<font color="#CCCCCC"> not work by design and</font><font color="#E5E5E5"> so on so</font>

18
00:01:03,570 --> 00:01:10,390
many<font color="#E5E5E5"> problems are can only many problems</font>

19
00:01:06,729 --> 00:01:13,860
<font color="#CCCCCC">will</font><font color="#E5E5E5"> just discover and well work in</font>

20
00:01:10,390 --> 00:01:18,430
progress<font color="#CCCCCC"> so it's a progress</font><font color="#E5E5E5"> here</font>

21
00:01:13,860 --> 00:01:23,500
historically<font color="#CCCCCC"> so from 5/5</font><font color="#E5E5E5"> myself</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> fibers</font>

22
00:01:18,430 --> 00:01:26,500
who already<font color="#E5E5E5"> tested</font><font color="#CCCCCC"> medical a two guys</font>

23
00:01:23,500 --> 00:01:31,539
who already move it to five seven at

24
00:01:26,500 --> 00:01:35,409
least<font color="#E5E5E5"> so five five you know we deliver</font>

25
00:01:31,540 --> 00:01:37,600
adjust both some fixes which were

26
00:01:35,409 --> 00:01:40,870
<font color="#CCCCCC">already</font><font color="#E5E5E5"> known in five six we started to</font>

27
00:01:37,600 --> 00:01:42,640
do some<font color="#E5E5E5"> deep changes which bring huge</font>

28
00:01:40,870 --> 00:01:44,740
pain because there was many regression

29
00:01:42,640 --> 00:01:47,350
many<font color="#E5E5E5"> difference and so on the most</font>

30
00:01:44,740 --> 00:01:49,630
painful point in<font color="#E5E5E5"> five six was and rights</font>

31
00:01:47,350 --> 00:01:52,179
were faster than reads so in fact if you

32
00:01:49,630 --> 00:01:54,460
want<font color="#E5E5E5"> to read faster you need to you need</font>

33
00:01:52,180 --> 00:01:56,350
to<font color="#CCCCCC"> send some rights and they will unlock</font>

34
00:01:54,460 --> 00:01:59,710
<font color="#CCCCCC">your reads and you will read faster</font><font color="#E5E5E5"> so</font>

35
00:01:56,350 --> 00:02:02,408
it was completely odd<font color="#CCCCCC"> dumbed</font><font color="#E5E5E5"> what you</font>

36
00:01:59,710 --> 00:02:06,339
want and in five seven finally we fix it

37
00:02:02,409 --> 00:02:08,349
reads so<font color="#E5E5E5"> reads become faster but we</font>

38
00:02:06,340 --> 00:02:10,299
started<font color="#CCCCCC"> to</font><font color="#E5E5E5"> lose in efficiency so there</font>

39
00:02:08,348 --> 00:02:12,909
is always cost on something we always

40
00:02:10,299 --> 00:02:16,390
always<font color="#E5E5E5"> bouncing the code to get the most</font>

41
00:02:12,909 --> 00:02:19,149
optimal stuff so in<font color="#CCCCCC"> a toe we are</font>

42
00:02:16,390 --> 00:02:21,548
fighting<font color="#E5E5E5"> and I think it will be</font><font color="#CCCCCC"> main</font>

43
00:02:19,150 --> 00:02:22,390
<font color="#E5E5E5">find for many years now</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> efficiency</font>

44
00:02:21,549 --> 00:02:24,550
to get the

45
00:02:22,390 --> 00:02:26,739
best<font color="#E5E5E5"> possible performance on the same</font>

46
00:02:24,550 --> 00:02:28,780
<font color="#CCCCCC">card or</font><font color="#E5E5E5"> so no we are not running for the</font>

47
00:02:26,740 --> 00:02:32,530
<font color="#E5E5E5">bigger table</font><font color="#CCCCCC"> you should be more</font>

48
00:02:28,780 --> 00:02:35,380
efficient in the same way<font color="#E5E5E5"> so you will</font>

49
00:02:32,530 --> 00:02:38,100
see some flame graphs<font color="#E5E5E5"> so it was</font><font color="#CCCCCC"> a huge</font>

50
00:02:35,380 --> 00:02:42,250
progress<font color="#CCCCCC"> on 5/7 you can see here once we</font>

51
00:02:38,100 --> 00:02:46,120
<font color="#CCCCCC">delivered on</font><font color="#E5E5E5"> the read</font><font color="#CCCCCC"> only a monstrous</font>

52
00:02:42,250 --> 00:02:50,560
<font color="#E5E5E5">result it we were so happy</font><font color="#CCCCCC"> since this</font>

53
00:02:46,120 --> 00:02:53,350
big machine was upgraded from<font color="#CCCCCC"> 72</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> 96</font>

54
00:02:50,560 --> 00:02:55,480
<font color="#CCCCCC">so we are happy</font><font color="#E5E5E5"> to get more than 2</font>

55
00:02:53,350 --> 00:02:58,209
million square<font color="#E5E5E5"> now so</font><font color="#CCCCCC"> Kate's</font><font color="#E5E5E5"> real</font>

56
00:02:55,480 --> 00:03:01,030
numbers<font color="#E5E5E5"> it's possible but the difference</font>

57
00:02:58,209 --> 00:03:04,330
<font color="#E5E5E5">between 800 and 5/7 not really big and</font>

58
00:03:01,030 --> 00:03:06,550
in fact<font color="#E5E5E5"> well we don't care</font><font color="#CCCCCC"> about this</font>

59
00:03:04,330 --> 00:03:08,860
anymore<font color="#CCCCCC"> it goes with all this sauce</font><font color="#E5E5E5"> and</font>

60
00:03:06,550 --> 00:03:11,320
we can do two million five

61
00:03:08,860 --> 00:03:13,180
so for it only it's fine<font color="#CCCCCC"> we don't charge</font>

62
00:03:11,320 --> 00:03:15,000
<font color="#E5E5E5">this so there'll be probably some</font>

63
00:03:13,180 --> 00:03:19,660
<font color="#E5E5E5">regression because we</font><font color="#CCCCCC"> added new stuff</font>

64
00:03:15,000 --> 00:03:23,040
<font color="#CCCCCC">okay but our main problems it's</font>

65
00:03:19,660 --> 00:03:29,019
<font color="#E5E5E5">everything which was reminding from 5-7</font>

66
00:03:23,040 --> 00:03:30,609
<font color="#E5E5E5">so I will just add potential fixes which</font>

67
00:03:29,019 --> 00:03:34,180
<font color="#CCCCCC">we'll have here and speak about the</font>

68
00:03:30,610 --> 00:03:36,519
problems so on<font color="#CCCCCC"> read-only</font><font color="#E5E5E5"> there is still</font>

69
00:03:34,180 --> 00:03:40,299
<font color="#CCCCCC">Romanian block logs for example so if</font>

70
00:03:36,519 --> 00:03:42,519
you read constantly the same<font color="#E5E5E5"> rows</font><font color="#CCCCCC"> you</font>

71
00:03:40,299 --> 00:03:46,030
will have contention so<font color="#CCCCCC"> it will go just</font>

72
00:03:42,519 --> 00:03:48,190
<font color="#E5E5E5">slower the other the work</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> here</font>

73
00:03:46,030 --> 00:03:50,440
it's just<font color="#E5E5E5"> use query cache or proxy SQL</font>

74
00:03:48,190 --> 00:03:50,920
query cache<font color="#E5E5E5"> there is no more query</font><font color="#CCCCCC"> cache</font>

75
00:03:50,440 --> 00:03:53,260
<font color="#CCCCCC">in NATO</font>

76
00:03:50,920 --> 00:03:56,768
so proxy proxy<font color="#CCCCCC"> Square is the best</font>

77
00:03:53,260 --> 00:03:59,350
solution<font color="#CCCCCC"> look up on sector secondary</font>

78
00:03:56,769 --> 00:04:01,930
indexes on energy<font color="#CCCCCC"> be can</font><font color="#E5E5E5"> be many times</font>

79
00:03:59,350 --> 00:04:04,750
slower<font color="#CCCCCC"> than primary</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> so the main work</font>

80
00:04:01,930 --> 00:04:06,430
around just to use<font color="#E5E5E5"> primary key or</font><font color="#CCCCCC"> while</font>

81
00:04:04,750 --> 00:04:08,200
we are working<font color="#E5E5E5"> in another solution to</font>

82
00:04:06,430 --> 00:04:10,750
<font color="#CCCCCC">speed up all the stuffs</font><font color="#E5E5E5"> there is also</font>

83
00:04:08,200 --> 00:04:12,339
adaptive hash index if you enable but

84
00:04:10,750 --> 00:04:14,860
<font color="#E5E5E5">for the problem as</font><font color="#CCCCCC"> soon as you have</font>

85
00:04:12,340 --> 00:04:18,548
rights<font color="#E5E5E5"> it can slow slow</font><font color="#CCCCCC"> down your staff</font>

86
00:04:14,860 --> 00:04:22,210
<font color="#E5E5E5">so these are hot</font><font color="#CCCCCC"> topics for us here and</font>

87
00:04:18,548 --> 00:04:25,599
<font color="#CCCCCC">for utf-8 it's extremely faster now in a</font>

88
00:04:22,210 --> 00:04:27,640
tall so before<font color="#E5E5E5"> for example in</font><font color="#CCCCCC"> five seven</font>

89
00:04:25,600 --> 00:04:29,810
<font color="#E5E5E5">you are</font><font color="#CCCCCC"> probable you can be ten times</font>

90
00:04:27,640 --> 00:04:33,590
<font color="#CCCCCC">slower if you use eg f8</font>

91
00:04:29,810 --> 00:04:35,780
so at least in<font color="#E5E5E5"> a</font><font color="#CCCCCC"> tow it's only 10</font><font color="#E5E5E5"> 20</font>

92
00:04:33,590 --> 00:04:38,929
<font color="#E5E5E5">percent slower than legend one huge</font>

93
00:04:35,780 --> 00:04:41,299
progress here for double right so this

94
00:04:38,930 --> 00:04:43,550
all<font color="#CCCCCC"> read/write problems</font><font color="#E5E5E5"> double</font><font color="#CCCCCC"> right is</font>

95
00:04:41,300 --> 00:04:45,860
expected to be<font color="#CCCCCC"> fix it</font><font color="#E5E5E5"> engage also a</font>

96
00:04:43,550 --> 00:04:47,300
window will not speak here and will tell

97
00:04:45,860 --> 00:04:50,780
you about the redo log changes we are

98
00:04:47,300 --> 00:04:53,000
<font color="#E5E5E5">doing transaction logging and log</font>

99
00:04:50,780 --> 00:04:56,599
management so I will stick you about

100
00:04:53,000 --> 00:04:57,980
<font color="#CCCCCC">cuts some come</font><font color="#E5E5E5"> in with a</font><font color="#CCCCCC"> doe transaction</font>

101
00:04:56,600 --> 00:05:00,860
installation will still work in progress

102
00:04:57,980 --> 00:05:04,160
<font color="#CCCCCC">there is a huge potential fix here on</font>

103
00:05:00,860 --> 00:05:06,140
update<font color="#CCCCCC"> there formats directly related to</font>

104
00:05:04,160 --> 00:05:10,030
redo logs and insert performance we are

105
00:05:06,140 --> 00:05:12,890
<font color="#E5E5E5">working here but as soon as we keep</font><font color="#CCCCCC"> v3</font>

106
00:05:10,030 --> 00:05:15,770
<font color="#CCCCCC">gadgets</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> if you if you can</font><font color="#E5E5E5"> use</font>

107
00:05:12,890 --> 00:05:17,900
partitions of different tables<font color="#E5E5E5"> you can</font>

108
00:05:15,770 --> 00:05:21,169
go very<font color="#E5E5E5"> fast on yourself otherwise well</font>

109
00:05:17,900 --> 00:05:23,690
<font color="#CCCCCC">b3 is impacting you and for pooch if</font>

110
00:05:21,169 --> 00:05:26,000
<font color="#E5E5E5">George is lagging in your production</font><font color="#CCCCCC"> so</font>

111
00:05:23,690 --> 00:05:28,880
at<font color="#E5E5E5"> least with a toe you can truncate</font>

112
00:05:26,000 --> 00:05:32,500
<font color="#E5E5E5">undo so you can</font><font color="#CCCCCC"> truncate as a space</font>

113
00:05:28,880 --> 00:05:41,060
which is your garbage<font color="#CCCCCC"> correction</font><font color="#E5E5E5"> effect</font>

114
00:05:32,500 --> 00:05:43,340
so to<font color="#CCCCCC"> be short so we touch it</font><font color="#E5E5E5"> so we try</font>

115
00:05:41,060 --> 00:05:46,010
to<font color="#E5E5E5"> select the most</font><font color="#CCCCCC"> kill'em problems we</font>

116
00:05:43,340 --> 00:05:48,229
<font color="#E5E5E5">only have so one the most killing one is</font>

117
00:05:46,010 --> 00:05:50,390
redo log so as soon as<font color="#CCCCCC"> you</font><font color="#E5E5E5"> optimize it</font>

118
00:05:48,229 --> 00:05:52,729
<font color="#CCCCCC">everything's and then you cannot write</font>

119
00:05:50,390 --> 00:05:55,520
on<font color="#CCCCCC"> the redo</font><font color="#E5E5E5"> log as fast as you want your</font>

120
00:05:52,729 --> 00:05:57,050
block<font color="#CCCCCC"> yet</font><font color="#E5E5E5"> so this is the final</font>

121
00:05:55,520 --> 00:05:59,030
bottlenecks<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the heat</font>

122
00:05:57,050 --> 00:06:00,860
well except if you hit some other

123
00:05:59,030 --> 00:06:04,789
problems if you<font color="#E5E5E5"> don't hit them so this</font>

124
00:06:00,860 --> 00:06:07,490
<font color="#CCCCCC">is one so we</font><font color="#E5E5E5"> for this was using this one</font>

125
00:06:04,789 --> 00:06:11,840
<font color="#CCCCCC">we attack it to fixing it all</font><font color="#E5E5E5"> another</font>

126
00:06:07,490 --> 00:06:14,539
<font color="#E5E5E5">one is every IO</font><font color="#CCCCCC"> board workload so in</font>

127
00:06:11,840 --> 00:06:16,130
energy we have global lock<font color="#E5E5E5"> currently as</font>

128
00:06:14,539 --> 00:06:19,610
soon as you start to read something<font color="#E5E5E5"> from</font>

129
00:06:16,130 --> 00:06:21,169
<font color="#CCCCCC">the disk you every i/o operation taking</font>

130
00:06:19,610 --> 00:06:23,810
the global<font color="#E5E5E5"> lock so of course it cannot</font>

131
00:06:21,169 --> 00:06:25,430
scale<font color="#E5E5E5"> and as you have faster and faster</font>

132
00:06:23,810 --> 00:06:29,990
<font color="#E5E5E5">storage you cannot do a faster uighurs</font>

133
00:06:25,430 --> 00:06:34,219
faster storage and so this is related<font color="#CCCCCC"> to</font>

134
00:06:29,990 --> 00:06:38,729
file<font color="#E5E5E5"> system</font><font color="#CCCCCC"> Lakhan and also so for</font>

135
00:06:34,219 --> 00:06:41,580
<font color="#E5E5E5">Rolle working so we</font><font color="#CCCCCC"> takin contribution</font>

136
00:06:38,729 --> 00:06:43,619
<font color="#E5E5E5">from Michigan University so I will speak</font>

137
00:06:41,580 --> 00:06:46,378
<font color="#E5E5E5">about this later</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> now about the</font>

138
00:06:43,619 --> 00:06:49,439
<font color="#E5E5E5">Riddler so what happens inside so well</font><font color="#CCCCCC"> I</font>

139
00:06:46,379 --> 00:06:52,469
suppose<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know and we have</font><font color="#CCCCCC"> the</font>

140
00:06:49,439 --> 00:06:54,239
transaction commit you know<font color="#E5E5E5"> how to use</font>

141
00:06:52,469 --> 00:06:57,360
them<font color="#E5E5E5"> so you flash on every commit or</font><font color="#CCCCCC"> not</font>

142
00:06:54,239 --> 00:06:59,638
<font color="#E5E5E5">or once per second so in what was three</font>

143
00:06:57,360 --> 00:07:02,429
years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> we discovered</font><font color="#CCCCCC"> and we can go</font>

144
00:06:59,639 --> 00:07:04,529
faster<font color="#CCCCCC"> even if with flash on every</font>

145
00:07:02,429 --> 00:07:05,188
<font color="#E5E5E5">commit so in fact the storage is not a</font>

146
00:07:04,529 --> 00:07:07,050
problem

147
00:07:05,189 --> 00:07:10,139
all the problem was<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> looking</font>

148
00:07:07,050 --> 00:07:14,159
inside so all<font color="#E5E5E5"> threats of users files I</font>

149
00:07:10,139 --> 00:07:17,819
fight him to write to redo<font color="#CCCCCC"> work and in</font>

150
00:07:14,159 --> 00:07:19,289
<font color="#CCCCCC">fact this was the</font><font color="#E5E5E5"> old model so you see</font>

151
00:07:17,819 --> 00:07:21,389
the global<font color="#E5E5E5"> lock which is</font><font color="#CCCCCC"> blocking</font>

152
00:07:19,289 --> 00:07:24,719
everybody<font color="#E5E5E5"> and the new models and we have</font>

153
00:07:21,389 --> 00:07:27,059
<font color="#E5E5E5">dedicated log writer thread</font><font color="#CCCCCC"> lock flashes</font>

154
00:07:24,719 --> 00:07:29,939
<font color="#CCCCCC">fed and notifications heads</font><font color="#E5E5E5"> around so</font>

155
00:07:27,059 --> 00:07:31,050
<font color="#E5E5E5">just</font><font color="#CCCCCC"> simplified structure so users</font><font color="#E5E5E5"> are</font>

156
00:07:29,939 --> 00:07:33,659
not block<font color="#CCCCCC"> it anymore</font>

157
00:07:31,050 --> 00:07:36,149
they<font color="#E5E5E5"> are writing directly to</font><font color="#CCCCCC"> the log</font>

158
00:07:33,659 --> 00:07:37,409
buffer and in parallel<font color="#E5E5E5"> we are flashing</font>

159
00:07:36,149 --> 00:07:40,709
all this data<font color="#E5E5E5"> to the disk</font>

160
00:07:37,409 --> 00:07:43,649
so in fact we<font color="#CCCCCC"> are blocking</font><font color="#E5E5E5"> it only by</font>

161
00:07:40,709 --> 00:07:45,779
your storage performance<font color="#CCCCCC"> so faster you</font>

162
00:07:43,649 --> 00:07:47,819
<font color="#E5E5E5">can write faster</font><font color="#CCCCCC"> will your redo log work</font>

163
00:07:45,779 --> 00:07:50,879
there is no more<font color="#E5E5E5"> group iam so we don't</font>

164
00:07:47,819 --> 00:07:52,559
wait in its nature all<font color="#E5E5E5"> grouping by your</font>

165
00:07:50,879 --> 00:07:55,469
<font color="#E5E5E5">flash speed on the disk</font>

166
00:07:52,559 --> 00:07:59,899
<font color="#E5E5E5">that's all so you will go as fast as</font>

167
00:07:55,469 --> 00:08:03,179
<font color="#E5E5E5">your storage can go so this code is</font>

168
00:07:59,899 --> 00:08:05,039
extremely<font color="#E5E5E5"> well instrumented so you can</font>

169
00:08:03,179 --> 00:08:07,378
know exactly<font color="#E5E5E5"> how many</font><font color="#CCCCCC"> weights you</font><font color="#E5E5E5"> have</font>

170
00:08:05,039 --> 00:08:10,739
what<font color="#E5E5E5"> your</font><font color="#CCCCCC"> thread are doing so what</font>

171
00:08:07,379 --> 00:08:13,229
happens inside and all the configuration

172
00:08:10,739 --> 00:08:15,568
<font color="#CCCCCC">is dynamic so you can</font><font color="#E5E5E5"> change whatever</font>

173
00:08:13,229 --> 00:08:17,938
<font color="#E5E5E5">you want inside and see it even resize</font>

174
00:08:15,569 --> 00:08:20,249
your buffers log buffer for example life

175
00:08:17,939 --> 00:08:24,869
or<font color="#E5E5E5"> even stop all the redo log if you</font>

176
00:08:20,249 --> 00:08:27,839
want so this is multi thread model now

177
00:08:24,869 --> 00:08:30,389
but we have<font color="#E5E5E5"> a trade-off</font><font color="#CCCCCC"> so with multi</font>

178
00:08:27,839 --> 00:08:32,969
thread you never can<font color="#E5E5E5"> be faster than</font>

179
00:08:30,389 --> 00:08:35,519
singles head which is that<font color="#CCCCCC"> just</font><font color="#E5E5E5"> doing</font>

180
00:08:32,969 --> 00:08:37,800
<font color="#E5E5E5">alone so it will do</font><font color="#CCCCCC"> write a fin try to</font>

181
00:08:35,519 --> 00:08:39,839
<font color="#CCCCCC">think</font><font color="#E5E5E5"> without</font><font color="#CCCCCC"> any weights without</font><font color="#E5E5E5"> any</font>

182
00:08:37,799 --> 00:08:43,228
centralization so of course it will<font color="#CCCCCC"> be</font>

183
00:08:39,839 --> 00:08:46,199
go faster<font color="#E5E5E5"> than</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the right place with</font>

184
00:08:43,229 --> 00:08:47,560
threads<font color="#E5E5E5"> so there is a trade-off</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font>

185
00:08:46,199 --> 00:08:51,620
<font color="#E5E5E5">only option so we</font>

186
00:08:47,560 --> 00:08:54,589
disappointed them<font color="#CCCCCC"> even driven system</font>

187
00:08:51,620 --> 00:08:57,380
<font color="#E5E5E5">cannot</font><font color="#CCCCCC"> be as fast as</font><font color="#E5E5E5"> spinning so opinion</font>

188
00:08:54,589 --> 00:09:00,470
is the most efficient way<font color="#E5E5E5"> anyway so this</font>

189
00:08:57,380 --> 00:09:02,720
is<font color="#E5E5E5"> painful</font><font color="#CCCCCC"> probably later</font><font color="#E5E5E5"> will will we</font>

190
00:09:00,470 --> 00:09:04,550
<font color="#CCCCCC">will invent something more efficient but</font>

191
00:09:02,720 --> 00:09:06,769
<font color="#E5E5E5">currently</font><font color="#CCCCCC"> only spinning help them to go</font>

192
00:09:04,550 --> 00:09:13,399
as<font color="#CCCCCC"> fast as single user</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> the same</font>

193
00:09:06,769 --> 00:09:17,149
actions so<font color="#E5E5E5"> you can imagine here so what</font>

194
00:09:13,399 --> 00:09:20,149
happens or just to give you an example

195
00:09:17,149 --> 00:09:24,880
<font color="#CCCCCC">so if we do nothing</font><font color="#E5E5E5"> if we</font><font color="#CCCCCC"> don't use redo</font>

196
00:09:20,149 --> 00:09:27,800
<font color="#CCCCCC">lock so you</font><font color="#E5E5E5"> can see this is we're going</font>

197
00:09:24,880 --> 00:09:31,610
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a red line it's</font><font color="#E5E5E5"> about the</font>

198
00:09:27,800 --> 00:09:33,079
current<font color="#CCCCCC"> at</font><font color="#E5E5E5"> all so if we don't do this</font>

199
00:09:31,610 --> 00:09:37,459
changes on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> red lock you see we don't</font>

200
00:09:33,079 --> 00:09:41,149
reach the levels<font color="#E5E5E5"> so this is say let's</font>

201
00:09:37,459 --> 00:09:44,959
see me this is the highest<font color="#CCCCCC"> level than we</font>

202
00:09:41,149 --> 00:09:46,910
get with spinning but spinning<font color="#E5E5E5"> as soon</font>

203
00:09:44,959 --> 00:09:49,640
as you<font color="#CCCCCC"> eat a lot of</font><font color="#E5E5E5"> CPU</font><font color="#CCCCCC"> so then you go</font>

204
00:09:46,910 --> 00:09:56,170
down<font color="#E5E5E5"> so in fact you need the balance</font>

205
00:09:49,640 --> 00:09:56,170
<font color="#CCCCCC">between spinning and even driven</font><font color="#E5E5E5"> and so</font>

206
00:09:56,260 --> 00:10:01,610
currently<font color="#E5E5E5"> what we decided</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> it will be</font>

207
00:09:59,420 --> 00:10:04,219
adaptive spinning<font color="#E5E5E5"> so in fact</font><font color="#CCCCCC"> you K</font><font color="#E5E5E5"> you</font>

208
00:10:01,610 --> 00:10:06,050
<font color="#CCCCCC">can</font><font color="#E5E5E5"> tune at least to say okay</font><font color="#CCCCCC"> as soon as</font>

209
00:10:04,220 --> 00:10:08,510
they reach this level<font color="#E5E5E5"> of CPU usage</font><font color="#CCCCCC"> I</font>

210
00:10:06,050 --> 00:10:10,910
don't want to spin<font color="#E5E5E5"> anymore</font><font color="#CCCCCC"> only as soon</font>

211
00:10:08,510 --> 00:10:14,270
as my<font color="#E5E5E5"> disk become slower than a given</font>

212
00:10:10,910 --> 00:10:15,980
<font color="#E5E5E5">response time I don't spin anymore so at</font>

213
00:10:14,270 --> 00:10:17,779
the<font color="#E5E5E5"> end it will be</font><font color="#CCCCCC"> just out at unit we</font>

214
00:10:15,980 --> 00:10:19,910
will out a<font color="#E5E5E5"> disk our what happens on your</font>

215
00:10:17,779 --> 00:10:23,810
system and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> don't touch anything</font>

216
00:10:19,910 --> 00:10:27,880
<font color="#CCCCCC">but</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> a first</font><font color="#E5E5E5"> release Bob would prefer</font>

217
00:10:23,810 --> 00:10:31,040
<font color="#CCCCCC">to give you some Union</font><font color="#E5E5E5"> points here so</font>

218
00:10:27,880 --> 00:10:33,040
<font color="#CCCCCC">what we have is this for the first</font><font color="#E5E5E5"> time</font>

219
00:10:31,040 --> 00:10:36,260
we<font color="#E5E5E5"> present in the result with</font>

220
00:10:33,040 --> 00:10:37,610
transaction commit one because before it

221
00:10:36,260 --> 00:10:38,149
was<font color="#E5E5E5"> never possible as soon</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> use</font>

222
00:10:37,610 --> 00:10:40,190
one

223
00:10:38,149 --> 00:10:43,850
everything was<font color="#E5E5E5"> level now it becomes</font>

224
00:10:40,190 --> 00:10:47,779
faster<font color="#E5E5E5"> so a to become faster than five</font>

225
00:10:43,850 --> 00:10:52,459
<font color="#E5E5E5">seven five six in</font><font color="#CCCCCC"> purity period right</font>

226
00:10:47,779 --> 00:10:54,620
<font color="#E5E5E5">test and much more faster yet in pure</font>

227
00:10:52,459 --> 00:10:56,750
<font color="#E5E5E5">update so when you</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> on Bombur</font><font color="#CCCCCC"> then</font>

228
00:10:54,620 --> 00:10:58,190
when you<font color="#E5E5E5"> have heavy updates workload so</font>

229
00:10:56,750 --> 00:11:00,829
the difference you will see

230
00:10:58,190 --> 00:11:03,170
what is<font color="#CCCCCC"> amazing</font><font color="#E5E5E5"> heels and you see in</font>

231
00:11:00,829 --> 00:11:06,079
<font color="#E5E5E5">five seven we got huge regression here</font>

232
00:11:03,170 --> 00:11:09,170
and five seven is lower than 56

233
00:11:06,079 --> 00:11:11,540
so in<font color="#E5E5E5"> fact we had two times faster than</font>

234
00:11:09,170 --> 00:11:13,819
<font color="#E5E5E5">five seven fine but we are getting back</font>

235
00:11:11,540 --> 00:11:16,279
these regressions only got since five

236
00:11:13,819 --> 00:11:21,849
six so this was related<font color="#E5E5E5"> to all this work</font>

237
00:11:16,279 --> 00:11:25,689
about<font color="#CCCCCC"> read-only improvement and so on so</font>

238
00:11:21,850 --> 00:11:28,129
<font color="#E5E5E5">we are</font><font color="#CCCCCC"> still not scaling</font><font color="#E5E5E5"> why so because</font>

239
00:11:25,689 --> 00:11:29,569
redo log is<font color="#CCCCCC"> just the first step and</font><font color="#E5E5E5"> we</font>

240
00:11:28,129 --> 00:11:32,509
have next layer<font color="#CCCCCC"> log</font>

241
00:11:29,569 --> 00:11:35,209
so all this transaction<font color="#CCCCCC"> locking lock</font>

242
00:11:32,509 --> 00:11:39,680
<font color="#CCCCCC">management and so on so just to give you</font>

243
00:11:35,209 --> 00:11:43,040
<font color="#E5E5E5">an example how it should be so this is</font>

244
00:11:39,680 --> 00:11:47,508
our prototype<font color="#CCCCCC"> so in current development</font>

245
00:11:43,040 --> 00:11:50,029
version and it's<font color="#E5E5E5"> so if a toe is</font><font color="#CCCCCC"> not</font>

246
00:11:47,509 --> 00:11:55,250
scaling on one so this one<font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> circuit</font>

247
00:11:50,029 --> 00:11:58,670
on<font color="#E5E5E5"> on the left side so this is</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> CPU</font>

248
00:11:55,250 --> 00:12:03,529
socket<font color="#E5E5E5"> and here in fact it's two</font><font color="#CCCCCC"> CPU</font>

249
00:11:58,670 --> 00:12:05,870
<font color="#CCCCCC">socket so we we can reach 400,000</font><font color="#E5E5E5"> days</font>

250
00:12:03,529 --> 00:12:08,089
per second which<font color="#CCCCCC"> is enormous number so</font>

251
00:12:05,870 --> 00:12:11,060
never seen<font color="#E5E5E5"> until now but</font><font color="#CCCCCC"> what this work</font>

252
00:12:08,089 --> 00:12:17,000
is in progress<font color="#CCCCCC"> I hope it will be</font><font color="#E5E5E5"> fixed</font>

253
00:12:11,060 --> 00:12:22,130
<font color="#CCCCCC">soon</font><font color="#E5E5E5"> once we deliver</font><font color="#CCCCCC"> into now what about</font>

254
00:12:17,000 --> 00:12:25,579
<font color="#E5E5E5">I work thoughts so well any i/o boned</font>

255
00:12:22,130 --> 00:12:28,850
workloads<font color="#E5E5E5"> were bloated by storage until</font>

256
00:12:25,579 --> 00:12:30,949
now but now<font color="#CCCCCC"> you you have a huge game</font>

257
00:12:28,850 --> 00:12:33,370
<font color="#CCCCCC">changer is flash storage which is coming</font>

258
00:12:30,949 --> 00:12:37,579
become faster and faster and faster<font color="#E5E5E5"> and</font>

259
00:12:33,370 --> 00:12:39,860
<font color="#E5E5E5">in reality you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> max throughput on</font>

260
00:12:37,579 --> 00:12:43,989
your flash storage but<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have real</font>

261
00:12:39,860 --> 00:12:47,720
performance<font color="#CCCCCC"> today is</font><font color="#E5E5E5"> both driven by i/o</font>

262
00:12:43,990 --> 00:12:50,720
operations per second so in fact the

263
00:12:47,720 --> 00:12:52,399
throughput<font color="#E5E5E5"> is limited but you can like</font>

264
00:12:50,720 --> 00:12:54,230
divide it like a memory access so it's

265
00:12:52,399 --> 00:12:56,959
not like<font color="#CCCCCC"> before you</font><font color="#E5E5E5"> know and we try to</font>

266
00:12:54,230 --> 00:12:58,910
do bigger IO to read more<font color="#E5E5E5"> on whatever</font>

267
00:12:56,959 --> 00:13:01,250
now<font color="#E5E5E5"> you can read small I</font><font color="#CCCCCC"> only use too</font>

268
00:12:58,910 --> 00:13:03,199
much<font color="#E5E5E5"> the same throughput but you you</font>

269
00:13:01,250 --> 00:13:06,290
will<font color="#E5E5E5"> have more operations per second</font>

270
00:13:03,199 --> 00:13:09,270
<font color="#E5E5E5">especially if you need to</font><font color="#CCCCCC"> read few</font>

271
00:13:06,290 --> 00:13:11,550
records from big block you know so it's

272
00:13:09,270 --> 00:13:13,770
smaller blocks<font color="#CCCCCC"> book will give you</font><font color="#E5E5E5"> better</font>

273
00:13:11,550 --> 00:13:17,579
performance but<font color="#E5E5E5"> in fact what happens on</font>

274
00:13:13,770 --> 00:13:23,399
energy<font color="#CCCCCC"> be by default we have</font><font color="#E5E5E5"> 16 K page</font>

275
00:13:17,580 --> 00:13:25,290
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> compression that</font><font color="#CCCCCC"> it is very</font>

276
00:13:23,399 --> 00:13:28,860
popular<font color="#CCCCCC"> so we say okay let's compress</font>

277
00:13:25,290 --> 00:13:30,930
imagine<font color="#E5E5E5"> we can compress</font><font color="#CCCCCC"> it four times so</font>

278
00:13:28,860 --> 00:13:34,860
we will be able<font color="#E5E5E5"> to read four times more</font>

279
00:13:30,930 --> 00:13:37,649
because<font color="#E5E5E5"> so page of 16 K compress it to</font><font color="#CCCCCC"> 4</font>

280
00:13:34,860 --> 00:13:41,100
<font color="#CCCCCC">K and with the same throughput we can</font>

281
00:13:37,649 --> 00:13:43,680
read<font color="#CCCCCC"> form all</font><font color="#E5E5E5"> pages great the problem</font><font color="#CCCCCC"> is</font>

282
00:13:41,100 --> 00:13:46,200
we have<font color="#E5E5E5"> exactly the same</font><font color="#CCCCCC"> buffer pools of</font>

283
00:13:43,680 --> 00:13:49,079
your<font color="#E5E5E5"> memory is not</font><font color="#CCCCCC"> 4</font><font color="#E5E5E5"> times bigger so</font>

284
00:13:46,200 --> 00:13:51,060
once you uncompress your data<font color="#E5E5E5"> it's still</font>

285
00:13:49,080 --> 00:13:53,490
the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> useful data set so in fact you</font>

286
00:13:51,060 --> 00:13:56,250
can read faster but<font color="#CCCCCC"> you cannot use your</font>

287
00:13:53,490 --> 00:13:58,020
data faster because before to read you

288
00:13:56,250 --> 00:14:00,270
need<font color="#E5E5E5"> to process what you already have</font>

289
00:13:58,020 --> 00:14:04,140
otherwise why you read<font color="#CCCCCC"> write this data</font>

290
00:14:00,270 --> 00:14:07,680
and what happens if<font color="#CCCCCC"> you will</font><font color="#E5E5E5"> just</font>

291
00:14:04,140 --> 00:14:10,080
instead of<font color="#E5E5E5"> 16 K page use 4 K page in</font>

292
00:14:07,680 --> 00:14:13,410
reality<font color="#CCCCCC"> fold in the same memory</font><font color="#E5E5E5"> you will</font>

293
00:14:10,080 --> 00:14:14,760
have four times more<font color="#E5E5E5"> useful data and he</font>

294
00:14:13,410 --> 00:14:17,850
really will go fast

295
00:14:14,760 --> 00:14:20,399
so of course this works<font color="#E5E5E5"> if you need only</font>

296
00:14:17,850 --> 00:14:22,440
few data from the same page not<font color="#E5E5E5"> if you</font>

297
00:14:20,399 --> 00:14:25,890
need the whole page<font color="#E5E5E5"> otherwise</font><font color="#CCCCCC"> okay this</font>

298
00:14:22,440 --> 00:14:28,079
<font color="#E5E5E5">will</font><font color="#CCCCCC"> be a case bow</font><font color="#E5E5E5"> but all the</font><font color="#CCCCCC"> store is</font>

299
00:14:25,890 --> 00:14:31,500
not possible just<font color="#E5E5E5"> because we have this</font>

300
00:14:28,079 --> 00:14:33,750
global lock mutex<font color="#E5E5E5"> so global lock for</font>

301
00:14:31,500 --> 00:14:36,089
every<font color="#CCCCCC"> eye operation</font><font color="#E5E5E5"> so as soon as you</font>

302
00:14:33,750 --> 00:14:37,890
start him to read faster this<font color="#E5E5E5"> global</font>

303
00:14:36,089 --> 00:14:41,899
lock is blocking you so<font color="#E5E5E5"> you cannot read</font>

304
00:14:37,890 --> 00:14:44,839
it<font color="#CCCCCC"> any more and so the good news</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font>

305
00:14:41,899 --> 00:14:50,010
in a<font color="#E5E5E5"> toe we fix this</font>

306
00:14:44,839 --> 00:14:52,170
so to validate these changes so we we

307
00:14:50,010 --> 00:14:55,529
got<font color="#E5E5E5"> the chance to use the latest Intel</font>

308
00:14:52,170 --> 00:14:57,839
<font color="#E5E5E5">obtain drive which is alone able to</font>

309
00:14:55,529 --> 00:15:02,850
deliver to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> imagine so just one</font>

310
00:14:57,839 --> 00:15:06,240
single thread<font color="#CCCCCC"> do in</font><font color="#E5E5E5"> Furio can just read</font>

311
00:15:02,850 --> 00:15:08,490
with one gigs per second<font color="#E5E5E5"> so</font><font color="#CCCCCC"> one thousand</font>

312
00:15:06,240 --> 00:15:12,480
megabytes<font color="#E5E5E5"> per second one single thread</font>

313
00:15:08,490 --> 00:15:15,839
<font color="#E5E5E5">so in fact using</font><font color="#CCCCCC"> two drives like this in</font>

314
00:15:12,480 --> 00:15:18,630
theory<font color="#E5E5E5"> with 40 page we</font><font color="#CCCCCC"> are able to do</font>

315
00:15:15,839 --> 00:15:20,790
the 1 million reads per second<font color="#E5E5E5"> but is it</font>

316
00:15:18,630 --> 00:15:24,910
true<font color="#E5E5E5"> this secret</font>

317
00:15:20,790 --> 00:15:28,990
and in fact yes so we<font color="#CCCCCC"> doing more</font><font color="#E5E5E5"> than 1</font>

318
00:15:24,910 --> 00:15:32,079
<font color="#E5E5E5">million</font><font color="#CCCCCC"> real IO board selects per second</font>

319
00:15:28,990 --> 00:15:38,709
so<font color="#CCCCCC"> he</font><font color="#E5E5E5"> is huge so</font><font color="#CCCCCC"> bids to your</font><font color="#E5E5E5"> IO bond</font>

320
00:15:32,079 --> 00:15:40,930
<font color="#E5E5E5">point select here and the same huge jump</font>

321
00:15:38,709 --> 00:15:42,790
in updates because in update it's much

322
00:15:40,930 --> 00:15:45,339
more<font color="#CCCCCC"> expensive so you can have to read</font>

323
00:15:42,790 --> 00:15:47,349
the page update<font color="#E5E5E5"> the page write the page</font>

324
00:15:45,339 --> 00:15:51,070
and so<font color="#E5E5E5"> on so a constantly doing</font><font color="#CCCCCC"> I</font>

325
00:15:47,350 --> 00:15:53,529
operations and well this<font color="#E5E5E5"> is the progress</font>

326
00:15:51,070 --> 00:15:56,440
<font color="#E5E5E5">and we expected from a long time and</font>

327
00:15:53,529 --> 00:15:59,980
finally<font color="#E5E5E5"> a version cannon</font><font color="#CCCCCC"> good on the</font>

328
00:15:56,440 --> 00:16:01,899
same time so we have storage solutions

329
00:15:59,980 --> 00:16:04,420
which<font color="#E5E5E5"> are coming with flash from any</font>

330
00:16:01,899 --> 00:16:09,670
vendors<font color="#E5E5E5"> and we have code which will work</font>

331
00:16:04,420 --> 00:16:11,769
with this and for<font color="#CCCCCC"> the last point I</font>

332
00:16:09,670 --> 00:16:15,490
wanted<font color="#CCCCCC"> to tell</font><font color="#E5E5E5"> you about the cats</font>

333
00:16:11,769 --> 00:16:18,490
<font color="#E5E5E5">so in</font><font color="#CCCCCC"> MySQL it's</font><font color="#E5E5E5"> colored cards initially</font>

334
00:16:15,490 --> 00:16:20,649
it<font color="#E5E5E5"> was</font><font color="#CCCCCC"> believed that and that's just</font>

335
00:16:18,490 --> 00:16:23,079
contention<font color="#E5E5E5"> where transactions scheduling</font>

336
00:16:20,649 --> 00:16:27,940
so was invented by<font color="#E5E5E5"> University of</font>

337
00:16:23,079 --> 00:16:31,779
<font color="#E5E5E5">Michigan and adopted in my</font><font color="#CCCCCC"> school now</font>

338
00:16:27,940 --> 00:16:34,120
<font color="#CCCCCC">available since my CEO Ito</font><font color="#E5E5E5"> so the idea</font>

339
00:16:31,779 --> 00:16:36,490
is<font color="#CCCCCC"> Louisville looks</font><font color="#E5E5E5"> pretty simple so in</font>

340
00:16:34,120 --> 00:16:38,380
fact not all transactions are equal<font color="#E5E5E5"> and</font>

341
00:16:36,490 --> 00:16:41,949
you you have some transactions which

342
00:16:38,380 --> 00:16:43,449
will<font color="#CCCCCC"> look more data</font><font color="#E5E5E5"> some less so some</font>

343
00:16:41,949 --> 00:16:46,300
objects are<font color="#E5E5E5"> more important less</font>

344
00:16:43,449 --> 00:16:50,380
important so<font color="#CCCCCC"> in fact this is a simple</font>

345
00:16:46,300 --> 00:16:53,109
schema<font color="#E5E5E5"> I put you links also here to read</font>

346
00:16:50,380 --> 00:16:55,089
more<font color="#CCCCCC"> about so it's very</font><font color="#E5E5E5"> long paper</font>

347
00:16:53,110 --> 00:16:58,089
<font color="#E5E5E5">scientific paper explaining all the</font>

348
00:16:55,089 --> 00:17:01,660
logic with many examples<font color="#CCCCCC"> and so on so in</font>

349
00:16:58,089 --> 00:17:04,270
fact how to decide tradition<font color="#CCCCCC"> is we just</font>

350
00:17:01,660 --> 00:17:07,149
using FIFO and first came in for some

351
00:17:04,270 --> 00:17:08,740
<font color="#CCCCCC">locket</font><font color="#E5E5E5"> but in fact if you do it in more</font>

352
00:17:07,150 --> 00:17:11,429
smart way so<font color="#CCCCCC"> you don't unlock the</font>

353
00:17:08,740 --> 00:17:13,510
transaction which came<font color="#E5E5E5"> first but</font>

354
00:17:11,429 --> 00:17:17,290
transaction which is blocking more

355
00:17:13,510 --> 00:17:20,619
others<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> better performance</font><font color="#E5E5E5"> but</font>

356
00:17:17,290 --> 00:17:24,849
in<font color="#E5E5E5"> fact</font><font color="#CCCCCC"> all the story it was much more</font>

357
00:17:20,619 --> 00:17:27,849
fun disease because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> turned to a</font>

358
00:17:24,849 --> 00:17:29,740
real a detective<font color="#CCCCCC"> story in fact so</font><font color="#E5E5E5"> there</font>

359
00:17:27,849 --> 00:17:32,689
was a claim about huge<font color="#E5E5E5"> performance</font>

360
00:17:29,740 --> 00:17:35,760
improvement but as soon I<font color="#CCCCCC"> started to</font>

361
00:17:32,690 --> 00:17:37,830
<font color="#CCCCCC">so any frog test</font><font color="#E5E5E5"> did not show any</font>

362
00:17:35,760 --> 00:17:42,180
difference<font color="#CCCCCC"> any difference no gain zero</font>

363
00:17:37,830 --> 00:17:44,340
<font color="#E5E5E5">all you just</font><font color="#CCCCCC"> going slower</font><font color="#E5E5E5"> so well we</font>

364
00:17:42,180 --> 00:17:47,010
started<font color="#E5E5E5"> long</font><font color="#CCCCCC"> investigation and</font>

365
00:17:44,340 --> 00:17:49,740
<font color="#E5E5E5">discussion</font><font color="#CCCCCC"> with guys from Michigan but</font>

366
00:17:47,010 --> 00:17:50,940
because the first impression was<font color="#CCCCCC"> there</font>

367
00:17:49,740 --> 00:17:53,910
<font color="#E5E5E5">just</font><font color="#CCCCCC"> kidding you know there is nothing</font>

368
00:17:50,940 --> 00:17:56,100
<font color="#CCCCCC">real just it's fun something</font><font color="#E5E5E5"> random they</font>

369
00:17:53,910 --> 00:17:58,830
know<font color="#CCCCCC"> Murrieta biology applied the patch</font>

370
00:17:56,100 --> 00:18:01,590
<font color="#CCCCCC">so everything is working we did</font><font color="#E5E5E5"> not</font>

371
00:17:58,830 --> 00:18:04,320
see any results<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so we started on</font>

372
00:18:01,590 --> 00:18:06,990
the sidewalk they want to solve<font color="#E5E5E5"> final</font>

373
00:18:04,320 --> 00:18:08,730
layer so I found the way to to build

374
00:18:06,990 --> 00:18:10,890
this scenario which<font color="#E5E5E5"> shows a difference</font>

375
00:18:08,730 --> 00:18:14,130
<font color="#E5E5E5">so then it was big looping finally we</font>

376
00:18:10,890 --> 00:18:16,200
can see what will be<font color="#E5E5E5"> improve it and as</font>

377
00:18:14,130 --> 00:18:19,140
<font color="#E5E5E5">soon we</font><font color="#CCCCCC"> started to see the</font><font color="#E5E5E5"> workload</font>

378
00:18:16,200 --> 00:18:22,170
<font color="#E5E5E5">sunny stuff</font><font color="#CCCCCC"> had discovered</font><font color="#E5E5E5"> bugs and bugs</font>

379
00:18:19,140 --> 00:18:25,250
in the patch and<font color="#E5E5E5"> then it started to loop</font>

380
00:18:22,170 --> 00:18:28,830
in fact on<font color="#E5E5E5"> the remaster in fiction</font>

381
00:18:25,250 --> 00:18:32,010
retesting again do we have again<font color="#E5E5E5"> we lost</font>

382
00:18:28,830 --> 00:18:34,439
<font color="#E5E5E5">again with what can be again</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> bag</font>

383
00:18:32,010 --> 00:18:36,840
is open<font color="#CCCCCC"> it so and so on</font><font color="#E5E5E5"> so ball in fact</font>

384
00:18:34,440 --> 00:18:40,170
or it's<font color="#E5E5E5"> probably with some nine months</font>

385
00:18:36,840 --> 00:18:43,620
<font color="#CCCCCC">on</font><font color="#E5E5E5"> this in many loops before</font><font color="#CCCCCC"> fixing</font>

386
00:18:40,170 --> 00:18:47,550
everything<font color="#E5E5E5"> and at the end it was still</font>

387
00:18:43,620 --> 00:18:50,729
<font color="#E5E5E5">unclear in which way you should use</font>

388
00:18:47,550 --> 00:18:52,320
which algorithm and again GBA cannot sit

389
00:18:50,730 --> 00:18:55,260
down<font color="#E5E5E5"> and look on</font><font color="#CCCCCC"> the workload</font><font color="#E5E5E5"> and say</font>

390
00:18:52,320 --> 00:18:57,659
okay let's<font color="#CCCCCC"> five minutes around this one</font>

391
00:18:55,260 --> 00:19:00,150
<font color="#CCCCCC">or now I switch to another model again</font>

392
00:18:57,660 --> 00:19:03,090
<font color="#E5E5E5">so finally we've come with solution</font>

393
00:19:00,150 --> 00:19:04,950
which after detection<font color="#E5E5E5"> the problem and</font>

394
00:19:03,090 --> 00:19:07,199
<font color="#E5E5E5">the you</font><font color="#CCCCCC"> will switch from fee for cats</font>

395
00:19:04,950 --> 00:19:09,660
<font color="#CCCCCC">accordion what is better</font><font color="#E5E5E5"> for you in your</font>

396
00:19:07,200 --> 00:19:11,880
current<font color="#CCCCCC"> workloads so we'll just</font><font color="#E5E5E5"> discover</font>

397
00:19:09,660 --> 00:19:18,540
how many locks you<font color="#CCCCCC"> have and decide what</font>

398
00:19:11,880 --> 00:19:20,250
is better so it helps everywhere when

399
00:19:18,540 --> 00:19:22,409
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> rule load contention how you</font>

400
00:19:20,250 --> 00:19:26,460
can recognize<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just follow your</font>

401
00:19:22,410 --> 00:19:28,260
showing<font color="#CCCCCC"> Jean mutex output and you will</font>

402
00:19:26,460 --> 00:19:30,120
see if you<font color="#CCCCCC"> have locks on your current</font>

403
00:19:28,260 --> 00:19:33,270
workload or not so in fact you<font color="#E5E5E5"> need to</font>

404
00:19:30,120 --> 00:19:34,860
go somebody never when it all the

405
00:19:33,270 --> 00:19:36,780
production both

406
00:19:34,860 --> 00:19:40,860
<font color="#E5E5E5">bit questions everybody</font><font color="#CCCCCC"> monitor</font>

407
00:19:36,780 --> 00:19:42,300
production right so well you mean<font color="#E5E5E5"> eater</font>

408
00:19:40,860 --> 00:19:44,830
the<font color="#E5E5E5"> sauce at times so if does you will</font>

409
00:19:42,300 --> 00:19:47,769
see<font color="#E5E5E5"> your spikes and you will see</font><font color="#CCCCCC"> okay</font>

410
00:19:44,830 --> 00:19:51,699
you it's your case<font color="#CCCCCC"> so you will be happy</font>

411
00:19:47,769 --> 00:19:54,700
with<font color="#E5E5E5"> Sato and so here is example with a</font>

412
00:19:51,700 --> 00:19:56,559
soul level<font color="#CCCCCC"> it</font><font color="#E5E5E5"> Pareto distribution so</font>

413
00:19:54,700 --> 00:20:00,789
means them you will have artificial

414
00:19:56,559 --> 00:20:02,678
contention<font color="#E5E5E5"> on data and many</font><font color="#CCCCCC"> threads when</font>

415
00:20:00,789 --> 00:20:05,140
<font color="#E5E5E5">users will fight for the same data so</font>

416
00:20:02,679 --> 00:20:07,899
with a<font color="#E5E5E5"> growing load you can see them</font>

417
00:20:05,140 --> 00:20:09,399
so without<font color="#E5E5E5"> this algorithm you lose</font>

418
00:20:07,899 --> 00:20:10,899
performance who is<font color="#CCCCCC"> growing</font><font color="#E5E5E5"> load with</font>

419
00:20:09,399 --> 00:20:11,799
this one at<font color="#E5E5E5"> least you solve something</font>

420
00:20:10,899 --> 00:20:17,500
<font color="#CCCCCC">okay</font>

421
00:20:11,799 --> 00:20:19,330
but you<font color="#CCCCCC"> should be also realists and well</font>

422
00:20:17,500 --> 00:20:21,519
if you write<font color="#E5E5E5"> your</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> and you</font>

423
00:20:19,330 --> 00:20:24,820
look every time everything so<font color="#E5E5E5"> we'll just</font>

424
00:20:21,519 --> 00:20:27,250
bad programmer right<font color="#E5E5E5"> so we try to avoid</font>

425
00:20:24,820 --> 00:20:29,289
blocking in fact so it's because<font color="#CCCCCC"> if by</font>

426
00:20:27,250 --> 00:20:31,210
<font color="#E5E5E5">design</font><font color="#CCCCCC"> in your</font><font color="#E5E5E5"> application so you don't</font>

427
00:20:29,289 --> 00:20:32,470
want to create<font color="#CCCCCC"> problems and main</font>

428
00:20:31,210 --> 00:20:34,990
problems are<font color="#CCCCCC"> Canon</font>

429
00:20:32,470 --> 00:20:36,789
mostly because in energy<font color="#CCCCCC"> B we have</font>

430
00:20:34,990 --> 00:20:41,320
<font color="#E5E5E5">repeat able to read the transaction is</font>

431
00:20:36,789 --> 00:20:44,169
<font color="#E5E5E5">relation okay we want to move to emitted</font>

432
00:20:41,320 --> 00:20:46,360
read the problems and this currently

433
00:20:44,169 --> 00:20:48,519
<font color="#E5E5E5">it's creating even more problems because</font>

434
00:20:46,360 --> 00:20:51,760
<font color="#CCCCCC">of transaction looking but this is away</font>

435
00:20:48,519 --> 00:20:56,740
what we will<font color="#E5E5E5"> do but in fact even this</font>

436
00:20:51,760 --> 00:20:59,710
case when<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> use read</font><font color="#E5E5E5"> commit you</font>

437
00:20:56,740 --> 00:21:02,010
don't see is any difference you<font color="#E5E5E5"> know you</font>

438
00:20:59,710 --> 00:21:05,440
use what or you don't use or<font color="#E5E5E5"> whatever</font>

439
00:21:02,010 --> 00:21:07,539
everything<font color="#CCCCCC"> is fine so</font><font color="#E5E5E5"> well I think once</font>

440
00:21:05,440 --> 00:21:09,970
will<font color="#E5E5E5"> believe all the fixes and we want</font>

441
00:21:07,539 --> 00:21:12,879
<font color="#E5E5E5">everything will be transparent</font><font color="#CCCCCC"> to me or</font>

442
00:21:09,970 --> 00:21:15,159
you'll be<font color="#E5E5E5"> much more happy even worse</font>

443
00:21:12,880 --> 00:21:21,700
than<font color="#CCCCCC"> before and with</font><font color="#E5E5E5"> this solution</font><font color="#CCCCCC"> is</font>

444
00:21:15,159 --> 00:21:24,039
<font color="#CCCCCC">wrong so go to action</font><font color="#E5E5E5"> download the staff</font>

445
00:21:21,700 --> 00:21:26,559
and the most important point<font color="#E5E5E5"> have fun</font>

446
00:21:24,039 --> 00:21:29,320
because<font color="#E5E5E5"> otherwise we are doing action</font>

447
00:21:26,559 --> 00:21:32,129
<font color="#E5E5E5">and all our job is stupid</font>

448
00:21:29,320 --> 00:21:33,428
so if you don't have<font color="#CCCCCC"> funds disappoint</font>

449
00:21:32,130 --> 00:21:34,500
thank you

450
00:21:33,429 --> 00:21:43,089
I'm on time

451
00:21:34,500 --> 00:21:43,089
[Applause]

452
00:21:43,230 --> 00:21:46,410
[Music]

453
00:21:47,970 --> 00:21:58,270
so any questions<font color="#E5E5E5"> yep yep well so in fact</font>

454
00:21:56,530 --> 00:22:09,490
the main problem<font color="#E5E5E5"> with double</font><font color="#CCCCCC"> life you</font>

455
00:21:58,270 --> 00:22:13,420
see is<font color="#CCCCCC"> guarantees so</font><font color="#E5E5E5"> you have you just</font>

456
00:22:09,490 --> 00:22:15,820
have a small<font color="#E5E5E5"> double right button which</font>

457
00:22:13,420 --> 00:22:19,750
is<font color="#E5E5E5"> very small and especially than we</font>

458
00:22:15,820 --> 00:22:21,429
have working inside<font color="#E5E5E5"> so in fact what is</font>

459
00:22:19,750 --> 00:22:23,970
the problem<font color="#E5E5E5"> with double right so if this</font>

460
00:22:21,430 --> 00:22:27,070
is the<font color="#CCCCCC"> only protection we have today</font>

461
00:22:23,970 --> 00:22:30,910
because of corrupted pages and what's

462
00:22:27,070 --> 00:22:34,060
amazing then no storage vendor can<font color="#CCCCCC"> linux</font>

463
00:22:30,910 --> 00:22:36,070
on<font color="#CCCCCC"> linux can</font><font color="#E5E5E5"> support using it you will</font>

464
00:22:34,060 --> 00:22:38,020
not<font color="#E5E5E5"> have corrupted pages there is no</font>

465
00:22:36,070 --> 00:22:40,929
support<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> fact we need to write it</font>

466
00:22:38,020 --> 00:22:42,879
twice every page<font color="#E5E5E5"> and the only problem</font><font color="#CCCCCC"> is</font>

467
00:22:40,930 --> 00:22:46,930
and<font color="#E5E5E5"> you need to write them sequentially</font>

468
00:22:42,880 --> 00:22:49,420
<font color="#E5E5E5">so in fact you're right time will be two</font>

469
00:22:46,930 --> 00:22:52,660
times<font color="#E5E5E5"> bigger so as soon as</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can write</font>

470
00:22:49,420 --> 00:22:54,550
<font color="#CCCCCC">two times more in parallel</font><font color="#E5E5E5"> everything is</font>

471
00:22:52,660 --> 00:22:57,910
fine<font color="#E5E5E5"> so the new solution is</font><font color="#CCCCCC"> just</font>

472
00:22:54,550 --> 00:23:00,270
allowing<font color="#E5E5E5"> you to write faster in parallel</font>

473
00:22:57,910 --> 00:23:03,460
and because you will have many<font color="#E5E5E5"> rights a</font>

474
00:23:00,270 --> 00:23:06,040
conference<font color="#E5E5E5"> runs going</font><font color="#CCCCCC"> going together and</font>

475
00:23:03,460 --> 00:23:11,770
<font color="#E5E5E5">you will</font><font color="#CCCCCC"> side this</font><font color="#E5E5E5"> latency time which is</font>

476
00:23:06,040 --> 00:23:14,139
<font color="#E5E5E5">increase it by</font><font color="#CCCCCC"> two it's not bigger it</font>

477
00:23:11,770 --> 00:23:15,879
will<font color="#E5E5E5"> be unlocked in fact so young mostly</font>

478
00:23:14,140 --> 00:23:17,980
<font color="#CCCCCC">blocked at only by storage</font><font color="#E5E5E5"> currently are</font>

479
00:23:15,880 --> 00:23:21,940
<font color="#E5E5E5">blocked by design so this is a problem</font>

480
00:23:17,980 --> 00:23:23,620
but as soon<font color="#E5E5E5"> as in veeram will come in</font>

481
00:23:21,940 --> 00:23:24,160
<font color="#E5E5E5">also you just</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't need storage</font>

482
00:23:23,620 --> 00:23:25,810
anymore

483
00:23:24,160 --> 00:23:29,890
because the problem will<font color="#CCCCCC"> you write twice</font>

484
00:23:25,810 --> 00:23:32,200
you will<font color="#E5E5E5"> kill your flash device for</font>

485
00:23:29,890 --> 00:23:33,700
<font color="#CCCCCC">example two times faster so as soon as</font>

486
00:23:32,200 --> 00:23:36,010
you<font color="#E5E5E5"> will have</font><font color="#CCCCCC"> in V ROM which you can</font>

487
00:23:33,700 --> 00:23:38,590
rewrite any time as you want<font color="#CCCCCC"> and it's</font>

488
00:23:36,010 --> 00:23:40,300
battery protected so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't care</font>

489
00:23:38,590 --> 00:23:43,230
anymore it will<font color="#E5E5E5"> just go in memory and</font>

490
00:23:40,300 --> 00:23:43,230
<font color="#E5E5E5">it's fine</font>

491
00:23:46,130 --> 00:23:51,540
yeah but<font color="#CCCCCC"> this is double I first tried to</font>

492
00:23:49,380 --> 00:23:54,990
<font color="#CCCCCC">memory and</font><font color="#E5E5E5"> protected</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> any</font><font color="#CCCCCC"> right to</font>

493
00:23:51,540 --> 00:23:59,720
<font color="#E5E5E5">disk</font><font color="#CCCCCC"> so at</font><font color="#E5E5E5"> least one will be safe</font><font color="#CCCCCC"> it's</font>

494
00:23:54,990 --> 00:23:59,720
fine<font color="#E5E5E5"> other question here</font>

495
00:24:08,460 --> 00:24:13,860
well so we are<font color="#CCCCCC"> working</font><font color="#E5E5E5"> a full redesign</font>

496
00:24:11,820 --> 00:24:15,928
of transaction management so in<font color="#E5E5E5"> fact all</font>

497
00:24:13,860 --> 00:24:18,629
the slogan which happens today which you

498
00:24:15,929 --> 00:24:23,129
<font color="#E5E5E5">may kill you I have a detailed blog post</font>

499
00:24:18,629 --> 00:24:25,498
for example explaining the<font color="#CCCCCC"> stats around</font>

500
00:24:23,129 --> 00:24:29,340
<font color="#E5E5E5">why it will</font><font color="#CCCCCC"> be dangerous</font>

501
00:24:25,499 --> 00:24:31,490
so as soon<font color="#E5E5E5"> the slogan will go you</font><font color="#CCCCCC"> will</font>

502
00:24:29,340 --> 00:24:34,649
they<font color="#CCCCCC"> just kept it with</font><font color="#E5E5E5"> committed</font><font color="#CCCCCC"> rate</font>

503
00:24:31,490 --> 00:24:40,940
<font color="#E5E5E5">don't you know so</font><font color="#CCCCCC"> just be patient</font>

504
00:24:34,649 --> 00:24:40,939
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> canon no question</font>

