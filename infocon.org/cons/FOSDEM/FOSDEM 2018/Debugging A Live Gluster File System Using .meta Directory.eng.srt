1
00:00:04,740 --> 00:00:10,080
<font color="#CCCCCC">oh good afternoon everyone my name is</font>

2
00:00:07,740 --> 00:00:12,539
Ravi<font color="#CCCCCC"> I'm going to talk about debugging a</font>

3
00:00:10,080 --> 00:00:16,169
<font color="#CCCCCC">live blesser file system using a special</font>

4
00:00:12,539 --> 00:00:17,610
directory<font color="#E5E5E5"> called meta meta so before</font>

5
00:00:16,169 --> 00:00:21,689
jumping into the agenda<font color="#CCCCCC"> I will introduce</font>

6
00:00:17,610 --> 00:00:24,419
<font color="#E5E5E5">myself</font><font color="#CCCCCC"> I'm Rafi I said often</font><font color="#E5E5E5"> engineer at</font>

7
00:00:21,689 --> 00:00:25,910
Red Hat<font color="#E5E5E5"> I've been at Red Hat for three</font>

8
00:00:24,420 --> 00:00:28,949
years<font color="#E5E5E5"> almost</font><font color="#CCCCCC"> three and</font><font color="#E5E5E5"> a half years</font>

9
00:00:25,910 --> 00:00:31,439
working in a comments like<font color="#E5E5E5"> RDMA which is</font>

10
00:00:28,949 --> 00:00:33,739
remote direct memory access and snapshot

11
00:00:31,439 --> 00:00:36,870
and then tearing<font color="#E5E5E5"> and then replication</font>

12
00:00:33,739 --> 00:00:38,940
<font color="#E5E5E5">this pretty much about me let's see what</font>

13
00:00:36,870 --> 00:00:41,849
we<font color="#CCCCCC"> have for today so we'll have a quick</font>

14
00:00:38,940 --> 00:00:44,820
overview of blesser and then the

15
00:00:41,850 --> 00:00:48,420
architecture of<font color="#E5E5E5"> glacier as in like</font><font color="#CCCCCC"> a</font>

16
00:00:44,820 --> 00:00:51,030
<font color="#CCCCCC">overview because it involves like a demo</font>

17
00:00:48,420 --> 00:00:54,299
most of them most<font color="#CCCCCC"> of the talks involves</font>

18
00:00:51,030 --> 00:00:56,040
a demo so<font color="#CCCCCC"> Island I will explain the</font>

19
00:00:54,299 --> 00:00:58,229
architecture a little<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit and</font>

20
00:00:56,040 --> 00:01:01,290
then<font color="#CCCCCC"> I will introduce about the meta</font>

21
00:00:58,229 --> 00:01:04,039
translator<font color="#CCCCCC"> and then the</font><font color="#E5E5E5"> basic comments</font>

22
00:01:01,290 --> 00:01:06,960
it provides and<font color="#E5E5E5"> the more advanced</font>

23
00:01:04,040 --> 00:01:09,420
options<font color="#CCCCCC"> through the metallic frames</font>

24
00:01:06,960 --> 00:01:12,240
information memory information<font color="#E5E5E5"> and the</font>

25
00:01:09,420 --> 00:01:15,439
graph information and the translator

26
00:01:12,240 --> 00:01:18,479
like master translator<font color="#CCCCCC"> and then finally</font>

27
00:01:15,439 --> 00:01:20,609
we'll<font color="#E5E5E5"> end up a session with the future</font>

28
00:01:18,479 --> 00:01:26,100
enhancement<font color="#E5E5E5"> and then question question</font>

29
00:01:20,609 --> 00:01:28,169
answer session<font color="#E5E5E5"> yeah so so as everyone</font>

30
00:01:26,100 --> 00:01:30,030
<font color="#CCCCCC">knows glacier is a distributed file</font>

31
00:01:28,170 --> 00:01:32,729
system is<font color="#CCCCCC"> a software-defined</font><font color="#E5E5E5"> network</font>

32
00:01:30,030 --> 00:01:35,219
attached<font color="#E5E5E5"> storage it has multiple nodes</font>

33
00:01:32,729 --> 00:01:36,799
which parts<font color="#E5E5E5"> will necklace to provide one</font>

34
00:01:35,219 --> 00:01:40,130
single name space that can be

35
00:01:36,799 --> 00:01:43,319
excessively a glacier native<font color="#E5E5E5"> planes or</font>

36
00:01:40,130 --> 00:01:46,048
NFS clients or SMB<font color="#E5E5E5"> or we have written</font>

37
00:01:43,319 --> 00:01:48,149
<font color="#E5E5E5">around libraries called</font><font color="#CCCCCC"> lib GF ap</font><font color="#E5E5E5"> you</font>

38
00:01:46,049 --> 00:01:51,299
can access blesser volume<font color="#E5E5E5"> using either</font>

39
00:01:48,149 --> 00:01:53,490
<font color="#E5E5E5">of this access methods and yeah it works</font>

40
00:01:51,299 --> 00:01:57,649
say that through tcp/ip protocol or<font color="#E5E5E5"> our</font>

41
00:01:53,490 --> 00:02:00,568
<font color="#E5E5E5">DMA protocol yeah so glacier has a very</font>

42
00:01:57,649 --> 00:02:02,399
modular architecture<font color="#CCCCCC"> so how it is</font>

43
00:02:00,569 --> 00:02:05,340
achieved is using something called as a

44
00:02:02,399 --> 00:02:08,729
<font color="#E5E5E5">translator a translatory is a module</font>

45
00:02:05,340 --> 00:02:10,850
which gets an<font color="#CCCCCC"> input and it operates on</font>

46
00:02:08,729 --> 00:02:14,280
that input<font color="#E5E5E5"> and it passes that</font>

47
00:02:10,850 --> 00:02:16,370
information<font color="#CCCCCC"> and input</font><font color="#E5E5E5"> into the next</font>

48
00:02:14,280 --> 00:02:19,670
translator<font color="#E5E5E5"> so</font>

49
00:02:16,370 --> 00:02:21,709
all of the glacier process are binaries

50
00:02:19,670 --> 00:02:23,480
<font color="#CCCCCC">I work working based on a graph</font>

51
00:02:21,709 --> 00:02:26,360
something<font color="#E5E5E5"> called as a graph a graph is</font>

52
00:02:23,480 --> 00:02:30,679
nothing but a<font color="#CCCCCC"> collection of a collection</font>

53
00:02:26,360 --> 00:02:34,030
of translators so so I have a<font color="#E5E5E5"> picture</font>

54
00:02:30,680 --> 00:02:36,290
here<font color="#E5E5E5"> it's it's a it's a picture for</font>

55
00:02:34,030 --> 00:02:38,870
<font color="#CCCCCC">Glacial my own process and</font><font color="#E5E5E5"> the server</font>

56
00:02:36,290 --> 00:02:40,849
<font color="#E5E5E5">process well so what it does is for</font>

57
00:02:38,870 --> 00:02:43,310
<font color="#CCCCCC">let's say I have file</font><font color="#E5E5E5"> system or patient</font>

58
00:02:40,849 --> 00:02:45,828
when I file system operations<font color="#E5E5E5"> charts for</font>

59
00:02:43,310 --> 00:02:47,659
example<font color="#E5E5E5"> a</font><font color="#CCCCCC"> tree operation it starts from</font>

60
00:02:45,829 --> 00:02:49,750
<font color="#E5E5E5">the kernel be a first layer and then it</font>

61
00:02:47,659 --> 00:02:52,399
<font color="#CCCCCC">will be given</font><font color="#E5E5E5"> to the user space fuse</font>

62
00:02:49,750 --> 00:02:54,920
<font color="#E5E5E5">process which is this process here and</font>

63
00:02:52,400 --> 00:02:58,129
then we have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> called as</font>

64
00:02:54,920 --> 00:03:01,599
translator which is this one<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is</font>

65
00:02:58,129 --> 00:03:05,349
<font color="#CCCCCC">the graph we have so the graph is is a</font>

66
00:03:01,599 --> 00:03:08,268
representation<font color="#E5E5E5"> of multiple translator so</font>

67
00:03:05,349 --> 00:03:10,339
this process<font color="#E5E5E5"> works based on this graph</font>

68
00:03:08,269 --> 00:03:12,590
<font color="#E5E5E5">so let's</font><font color="#CCCCCC"> say a read operation comes on</font>

69
00:03:10,340 --> 00:03:15,049
from the<font color="#CCCCCC"> VFS it will be given to the</font>

70
00:03:12,590 --> 00:03:17,269
first translator<font color="#CCCCCC"> on the graph</font><font color="#E5E5E5"> and then</font>

71
00:03:15,049 --> 00:03:19,190
it does its operation for<font color="#CCCCCC"> example in the</font>

72
00:03:17,269 --> 00:03:21,260
first here the first translator is the

73
00:03:19,190 --> 00:03:23,359
IO cache<font color="#E5E5E5"> this is nothing but like the</font>

74
00:03:21,260 --> 00:03:27,078
page caching so let's say a read

75
00:03:23,359 --> 00:03:28,790
operation comes so on an offset<font color="#E5E5E5"> so the</font>

76
00:03:27,079 --> 00:03:31,489
IU cache translator checks whether the

77
00:03:28,790 --> 00:03:34,940
<font color="#E5E5E5">whether there is any page hit on on</font>

78
00:03:31,489 --> 00:03:38,090
already<font color="#E5E5E5"> care should condense so if it</font>

79
00:03:34,940 --> 00:03:40,040
has a page<font color="#CCCCCC"> heat then it serves from here</font>

80
00:03:38,090 --> 00:03:42,379
itself<font color="#CCCCCC"> and then will</font><font color="#E5E5E5"> be given the data</font>

81
00:03:40,040 --> 00:03:44,150
into<font color="#E5E5E5"> the back into the BFS otherwise</font>

82
00:03:42,379 --> 00:03:47,149
what it does is it creates a page fault

83
00:03:44,150 --> 00:03:49,310
<font color="#E5E5E5">and then it will be given the the read</font>

84
00:03:47,150 --> 00:03:51,079
call into the next translator<font color="#CCCCCC"> ID flows</font>

85
00:03:49,310 --> 00:03:52,669
from here to here<font color="#E5E5E5"> and this is a</font>

86
00:03:51,079 --> 00:03:54,739
distribute<font color="#E5E5E5"> translate which is the</font>

87
00:03:52,669 --> 00:03:56,419
distribution for<font color="#E5E5E5"> the glacier and we</font><font color="#CCCCCC"> have</font>

88
00:03:54,739 --> 00:03:59,139
a replica translator which<font color="#E5E5E5"> tests the</font>

89
00:03:56,419 --> 00:04:01,069
<font color="#E5E5E5">replica let's say we have a forward</font>

90
00:03:59,139 --> 00:04:03,739
<font color="#CCCCCC">distribution which means you will have</font><font color="#E5E5E5"> a</font>

91
00:04:01,069 --> 00:04:04,940
<font color="#CCCCCC">for child for the</font><font color="#E5E5E5"> distribute translator</font>

92
00:04:03,739 --> 00:04:06,859
<font color="#E5E5E5">let's say we have a three-way</font>

93
00:04:04,940 --> 00:04:09,769
replication which means you will have<font color="#E5E5E5"> a</font>

94
00:04:06,859 --> 00:04:12,139
<font color="#E5E5E5">three child for the replica translator</font>

95
00:04:09,769 --> 00:04:13,760
<font color="#CCCCCC">that's how it works</font><font color="#E5E5E5"> and then the</font><font color="#CCCCCC"> client</font>

96
00:04:12,139 --> 00:04:16,849
<font color="#E5E5E5">process will be given to the server and</font>

97
00:04:13,760 --> 00:04:18,889
<font color="#E5E5E5">and on the upon the return path let's</font>

98
00:04:16,849 --> 00:04:21,199
say you have you read the content from

99
00:04:18,889 --> 00:04:23,449
this<font color="#E5E5E5"> disk then it will flow from here</font><font color="#CCCCCC"> to</font>

100
00:04:21,199 --> 00:04:24,919
till all the way to the<font color="#CCCCCC"> VF s and then</font>

101
00:04:23,449 --> 00:04:28,099
let's say for<font color="#E5E5E5"> this how your cache it</font>

102
00:04:24,919 --> 00:04:28,909
creates<font color="#CCCCCC"> that it is it's that</font><font color="#E5E5E5"> newly</font>

103
00:04:28,099 --> 00:04:32,930
<font color="#CCCCCC">created P</font>

104
00:04:28,910 --> 00:04:35,150
and it works<font color="#E5E5E5"> in on the next read</font><font color="#CCCCCC"> call</font><font color="#E5E5E5"> it</font>

105
00:04:32,930 --> 00:04:37,310
serves from this one this<font color="#E5E5E5"> is the basic</font>

106
00:04:35,150 --> 00:04:40,820
architecture for the glacier<font color="#CCCCCC"> and this is</font>

107
00:04:37,310 --> 00:04:44,150
the translator<font color="#CCCCCC"> model so I explained is</font>

108
00:04:40,820 --> 00:04:45,409
because when we debug the glacier<font color="#E5E5E5"> we</font>

109
00:04:44,150 --> 00:04:47,719
have to look<font color="#E5E5E5"> into the different</font>

110
00:04:45,410 --> 00:04:50,060
<font color="#CCCCCC">different translators what options they</font>

111
00:04:47,720 --> 00:04:53,540
have providing and<font color="#CCCCCC"> how we can look into</font>

112
00:04:50,060 --> 00:04:55,940
<font color="#CCCCCC">the options the</font><font color="#E5E5E5"> file system specific</font>

113
00:04:53,540 --> 00:04:59,080
frames and<font color="#E5E5E5"> latencies all those things</font>

114
00:04:55,940 --> 00:05:03,110
that's the reason why<font color="#CCCCCC"> explain this big</font>

115
00:04:59,080 --> 00:05:05,180
<font color="#E5E5E5">architecture level informations okay so</font>

116
00:05:03,110 --> 00:05:07,370
now talking<font color="#E5E5E5"> about</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> time at a</font>

117
00:05:05,180 --> 00:05:11,540
translator which is the main<font color="#E5E5E5"> part for</font>

118
00:05:07,370 --> 00:05:14,240
this<font color="#E5E5E5"> so it</font><font color="#CCCCCC"> is it provides a dynamic</font>

119
00:05:11,540 --> 00:05:16,670
information<font color="#CCCCCC"> about</font><font color="#E5E5E5"> a mount process let's</font>

120
00:05:14,240 --> 00:05:18,770
say we have a few small process that

121
00:05:16,670 --> 00:05:21,140
accessing<font color="#E5E5E5"> at lesser</font><font color="#CCCCCC"> volume but it does</font>

122
00:05:18,770 --> 00:05:25,070
is it provides a dynamic<font color="#CCCCCC"> information</font>

123
00:05:21,140 --> 00:05:27,159
<font color="#E5E5E5">like like the memory information what</font>

124
00:05:25,070 --> 00:05:30,469
<font color="#E5E5E5">are the</font><font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> operation is ongoing</font>

125
00:05:27,160 --> 00:05:32,540
<font color="#E5E5E5">and what are the internal operation that</font>

126
00:05:30,470 --> 00:05:34,400
resulted let us say a read operation<font color="#E5E5E5"> or</font>

127
00:05:32,540 --> 00:05:36,980
let's say the<font color="#E5E5E5"> name operation which</font>

128
00:05:34,400 --> 00:05:38,859
involves a<font color="#CCCCCC"> log internally so what are</font>

129
00:05:36,980 --> 00:05:41,120
the operation is<font color="#E5E5E5"> on going</font><font color="#CCCCCC"> through</font>

130
00:05:38,860 --> 00:05:43,250
through<font color="#CCCCCC"> the blesser mount process</font>

131
00:05:41,120 --> 00:05:44,830
although<font color="#CCCCCC"> all those kind</font><font color="#E5E5E5"> of dynamic</font>

132
00:05:43,250 --> 00:05:47,540
<font color="#CCCCCC">information you can fish through the</font>

133
00:05:44,830 --> 00:05:49,909
this special<font color="#CCCCCC"> directory</font><font color="#E5E5E5"> so it's very</font>

134
00:05:47,540 --> 00:05:52,550
similar to<font color="#E5E5E5"> Linux progress you might have</font>

135
00:05:49,910 --> 00:05:54,620
<font color="#E5E5E5">already know about Linux progress it it</font>

136
00:05:52,550 --> 00:05:57,770
gives the kernel<font color="#E5E5E5"> level memory</font>

137
00:05:54,620 --> 00:05:59,600
informations<font color="#CCCCCC"> and process wise like the</font>

138
00:05:57,770 --> 00:06:02,659
open<font color="#CCCCCC"> FD is all this</font><font color="#E5E5E5"> information for a</font>

139
00:05:59,600 --> 00:06:05,840
kernel for a Linux<font color="#E5E5E5"> operating system so</font>

140
00:06:02,660 --> 00:06:08,990
<font color="#E5E5E5">it's very similar</font><font color="#CCCCCC"> to the proc effects</font>

141
00:06:05,840 --> 00:06:10,400
<font color="#E5E5E5">filesystem it what</font><font color="#CCCCCC"> matter this</font><font color="#E5E5E5"> is it in</font>

142
00:06:08,990 --> 00:06:13,040
the glacier route<font color="#E5E5E5"> there is a hidden</font>

143
00:06:10,400 --> 00:06:14,450
<font color="#CCCCCC">directory called a dot meta it's not</font>

144
00:06:13,040 --> 00:06:16,190
only hidden<font color="#E5E5E5"> but it's also virtual</font>

145
00:06:14,450 --> 00:06:18,830
because<font color="#CCCCCC"> it which means</font><font color="#E5E5E5"> you cannot see</font>

146
00:06:16,190 --> 00:06:20,900
<font color="#E5E5E5">that</font><font color="#CCCCCC"> directory even if you do LS or LS</font><font color="#E5E5E5"> -</font>

147
00:06:18,830 --> 00:06:23,060
or you can't see this<font color="#E5E5E5"> method</font><font color="#CCCCCC"> directly</font>

148
00:06:20,900 --> 00:06:25,340
because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't want to return any of</font>

149
00:06:23,060 --> 00:06:27,710
the<font color="#E5E5E5"> reader P calls this dot method</font>

150
00:06:25,340 --> 00:06:29,900
cannot should not be returned to the

151
00:06:27,710 --> 00:06:33,380
application<font color="#CCCCCC"> layer because if if at all</font>

152
00:06:29,900 --> 00:06:34,940
you are<font color="#CCCCCC"> doing a CP</font><font color="#E5E5E5"> or R - R of that dot</font>

153
00:06:33,380 --> 00:06:37,610
matter directly should not be exposed

154
00:06:34,940 --> 00:06:39,410
<font color="#CCCCCC">into the top layer so that's why it's a</font>

155
00:06:37,610 --> 00:06:42,380
hidden place<font color="#CCCCCC"> virtual you cannot see if</font>

156
00:06:39,410 --> 00:06:46,160
you<font color="#CCCCCC"> are just</font><font color="#E5E5E5"> doing CD 2 dot meta you can</font>

157
00:06:42,380 --> 00:06:48,560
you can you<font color="#CCCCCC"> can go out</font><font color="#E5E5E5"> to the into that</font>

158
00:06:46,160 --> 00:06:53,510
<font color="#E5E5E5">direct but you won't see that direct in</font>

159
00:06:48,560 --> 00:06:56,800
any of this<font color="#CCCCCC"> list</font><font color="#E5E5E5"> see so so that's and</font>

160
00:06:53,510 --> 00:06:59,930
yeah<font color="#E5E5E5"> so as I said it's a translator so</font>

161
00:06:56,800 --> 00:07:01,460
<font color="#CCCCCC">rating a new</font><font color="#E5E5E5"> future in</font><font color="#CCCCCC"> blesser</font><font color="#E5E5E5"> is very</font>

162
00:06:59,930 --> 00:07:03,830
<font color="#CCCCCC">simple</font><font color="#E5E5E5"> you need to write a translator</font>

163
00:07:01,460 --> 00:07:06,680
<font color="#E5E5E5">and it put it into the appropriate</font>

164
00:07:03,830 --> 00:07:08,719
<font color="#E5E5E5">position in the graph so</font><font color="#CCCCCC"> this translator</font>

165
00:07:06,680 --> 00:07:10,700
but this is a special translator it is

166
00:07:08,720 --> 00:07:12,620
not actually<font color="#CCCCCC"> present in the graph</font><font color="#E5E5E5"> but</font>

167
00:07:10,700 --> 00:07:15,890
it's automatically loaded<font color="#E5E5E5"> into every</font>

168
00:07:12,620 --> 00:07:18,380
<font color="#E5E5E5">mount process every mount process in the</font>

169
00:07:15,890 --> 00:07:21,050
glacier<font color="#E5E5E5"> it is automatically added</font><font color="#CCCCCC"> so you</font>

170
00:07:18,380 --> 00:07:23,390
cannot see in the graph but<font color="#CCCCCC"> it is</font>

171
00:07:21,050 --> 00:07:25,430
automatically added<font color="#CCCCCC"> and this is useful</font>

172
00:07:23,390 --> 00:07:27,770
for<font color="#E5E5E5"> debugging purpose and as well as the</font>

173
00:07:25,430 --> 00:07:30,680
monitoring<font color="#E5E5E5"> because nobody can do is you</font>

174
00:07:27,770 --> 00:07:33,080
can see them<font color="#E5E5E5"> latency or latency for each</font>

175
00:07:30,680 --> 00:07:35,210
of the<font color="#E5E5E5"> file system</font><font color="#CCCCCC"> cause</font><font color="#E5E5E5"> you can see</font>

176
00:07:33,080 --> 00:07:37,280
those how much is the latency<font color="#CCCCCC"> for each</font>

177
00:07:35,210 --> 00:07:40,580
translator<font color="#E5E5E5"> through the meta translator</font>

178
00:07:37,280 --> 00:07:42,500
<font color="#E5E5E5">and the D</font><font color="#CCCCCC"> you information</font><font color="#E5E5E5"> disk usage</font><font color="#CCCCCC"> for</font>

179
00:07:40,580 --> 00:07:45,770
<font color="#E5E5E5">each service you can see those</font>

180
00:07:42,500 --> 00:07:47,450
information<font color="#CCCCCC"> using this translator</font><font color="#E5E5E5"> so the</font>

181
00:07:45,770 --> 00:07:49,400
good<font color="#CCCCCC"> thing about</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that you don't need</font>

182
00:07:47,450 --> 00:07:51,080
<font color="#E5E5E5">to</font><font color="#CCCCCC"> do anything you don't need to alter</font>

183
00:07:49,400 --> 00:07:52,460
you don't need to<font color="#E5E5E5"> send any signals to</font>

184
00:07:51,080 --> 00:07:55,609
the processing you can<font color="#E5E5E5"> just access</font>

185
00:07:52,460 --> 00:07:59,120
through a directory file directory

186
00:07:55,610 --> 00:08:01,370
structure<font color="#E5E5E5"> so like you don't</font><font color="#CCCCCC"> need to put</font>

187
00:07:59,120 --> 00:08:03,200
a NES system<font color="#CCCCCC"> tab or gdb to get all those</font>

188
00:08:01,370 --> 00:08:04,940
information it gives<font color="#E5E5E5"> high level</font>

189
00:08:03,200 --> 00:08:07,760
<font color="#E5E5E5">information like what are the frames for</font>

190
00:08:04,940 --> 00:08:11,360
frame<font color="#CCCCCC"> information for each calls so I</font>

191
00:08:07,760 --> 00:08:13,820
will do<font color="#CCCCCC"> I start</font><font color="#E5E5E5"> with the basic</font><font color="#CCCCCC"> commands</font>

192
00:08:11,360 --> 00:08:18,470
for the meta translator<font color="#E5E5E5"> so I'll switch</font>

193
00:08:13,820 --> 00:08:22,520
<font color="#E5E5E5">into so I will give</font><font color="#CCCCCC"> you the I have a</font>

194
00:08:18,470 --> 00:08:25,070
volume<font color="#E5E5E5"> here this is a very simple volume</font>

195
00:08:22,520 --> 00:08:28,120
<font color="#E5E5E5">it's the volume name is called</font><font color="#CCCCCC"> patchy</font>

196
00:08:25,070 --> 00:08:30,860
<font color="#CCCCCC">it's a</font><font color="#E5E5E5"> distributed replicated volume and</font>

197
00:08:28,120 --> 00:08:32,719
it's a<font color="#CCCCCC"> two-way</font><font color="#E5E5E5"> replicated and to get</font>

198
00:08:30,860 --> 00:08:34,570
<font color="#CCCCCC">distributed that's to cross tube these</font>

199
00:08:32,719 --> 00:08:41,860
are<font color="#E5E5E5"> the servers</font>

200
00:08:34,570 --> 00:08:41,860
the volume is scattered you can see here

201
00:08:43,190 --> 00:08:47,340
so the<font color="#E5E5E5"> volume is shattered all the</font>

202
00:08:45,660 --> 00:08:49,469
<font color="#E5E5E5">volumes are running so what I am going</font>

203
00:08:47,340 --> 00:08:51,720
to do is I'm going<font color="#CCCCCC"> to mount this process</font>

204
00:08:49,470 --> 00:08:53,880
so I'm going to<font color="#E5E5E5"> mount this</font><font color="#CCCCCC"> a small</font><font color="#E5E5E5"> -</font>

205
00:08:51,720 --> 00:08:56,220
together office I will<font color="#E5E5E5"> just</font><font color="#CCCCCC"> quickly do</font>

206
00:08:53,880 --> 00:08:58,950
<font color="#E5E5E5">this so I'm going to mount this</font><font color="#CCCCCC"> into</font>

207
00:08:56,220 --> 00:09:01,620
/mnt<font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> mount a lesser volume</font>

208
00:08:58,950 --> 00:09:03,930
called Apache<font color="#E5E5E5"> into /mnt these are the</font>

209
00:09:01,620 --> 00:09:07,230
mound options<font color="#E5E5E5"> the events tray on it</font>

210
00:09:03,930 --> 00:09:09,209
means the eventing for the the file

211
00:09:07,230 --> 00:09:13,590
system operation<font color="#CCCCCC"> a bending is turned on</font>

212
00:09:09,210 --> 00:09:23,220
for this<font color="#CCCCCC"> mod process okay so I'm sorry</font>

213
00:09:13,590 --> 00:09:27,380
it's already mounted<font color="#CCCCCC"> mount it's already</font>

214
00:09:23,220 --> 00:09:31,710
mounted sorry so this<font color="#E5E5E5"> is the mount point</font>

215
00:09:27,380 --> 00:09:34,200
there is<font color="#E5E5E5"> nothing in here so so now if we</font>

216
00:09:31,710 --> 00:09:43,020
<font color="#CCCCCC">do it ll you can't see this dot</font>

217
00:09:34,200 --> 00:09:52,710
<font color="#CCCCCC">meta-data tree unless yeah sure sure</font>

218
00:09:43,020 --> 00:09:55,800
<font color="#CCCCCC">Church</font><font color="#E5E5E5"> and also it is the this box okay</font>

219
00:09:52,710 --> 00:10:01,380
so if you do<font color="#CCCCCC"> LS you can see that even LS</font>

220
00:09:55,800 --> 00:10:02,969
-<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> here it you can't see that dot</font>

221
00:10:01,380 --> 00:10:05,910
matter directly<font color="#E5E5E5"> because it's a virtual</font>

222
00:10:02,970 --> 00:10:08,760
directly so but if you do<font color="#E5E5E5"> CD 2 dot meta</font>

223
00:10:05,910 --> 00:10:11,160
<font color="#E5E5E5">it is now moved into the dot</font><font color="#CCCCCC"> meant if</font>

224
00:10:08,760 --> 00:10:15,870
you<font color="#CCCCCC"> do PWD can see it's currently</font><font color="#E5E5E5"> in the</font>

225
00:10:11,160 --> 00:10:17,880
/mnt /mnt dot matter<font color="#CCCCCC"> now we can see</font><font color="#E5E5E5"> a</font>

226
00:10:15,870 --> 00:10:19,890
lot of<font color="#E5E5E5"> the information that meta</font>

227
00:10:17,880 --> 00:10:24,720
<font color="#CCCCCC">prophets</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> start with the simple</font>

228
00:10:19,890 --> 00:10:29,100
things so if you do LS sorry if you do

229
00:10:24,720 --> 00:10:31,490
LS begins<font color="#E5E5E5"> okay I'll do one</font><font color="#CCCCCC"> thing ll so</font>

230
00:10:29,100 --> 00:10:34,710
you can be this<font color="#E5E5E5"> command-line arguments</font>

231
00:10:31,490 --> 00:10:37,110
memory<font color="#CCCCCC"> information process latency you</font>

232
00:10:34,710 --> 00:10:40,440
<font color="#E5E5E5">you</font><font color="#CCCCCC"> Eddie of the process versions</font><font color="#E5E5E5"> so</font>

233
00:10:37,110 --> 00:10:42,540
I'll start<font color="#E5E5E5"> with the version so version</font>

234
00:10:40,440 --> 00:10:47,240
is very<font color="#E5E5E5"> simple it provides the</font><font color="#CCCCCC"> blesser</font>

235
00:10:42,540 --> 00:10:50,189
of assertion<font color="#E5E5E5"> as as a</font><font color="#CCCCCC"> jason-- jason--</font>

236
00:10:47,240 --> 00:10:53,430
<font color="#CCCCCC">format so actually there are</font><font color="#E5E5E5"> I mean it</font>

237
00:10:50,190 --> 00:10:55,649
is actually<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> packaged version</font><font color="#E5E5E5"> is 3</font>

238
00:10:53,430 --> 00:11:02,160
<font color="#E5E5E5">10 10 so and then you</font><font color="#CCCCCC"> can</font>

239
00:10:55,649 --> 00:11:03,629
see the command-line arguments<font color="#E5E5E5"> so you</font>

240
00:11:02,160 --> 00:11:06,300
can see the command-line arguments which

241
00:11:03,629 --> 00:11:08,189
<font color="#E5E5E5">this mount process is started the the</font>

242
00:11:06,300 --> 00:11:10,889
process is user login is a localized

243
00:11:08,189 --> 00:11:12,719
<font color="#CCCCCC">English surface and</font><font color="#E5E5E5"> argument is other</font>

244
00:11:10,889 --> 00:11:15,059
histories on and the world<font color="#CCCCCC"> file server</font>

245
00:11:12,720 --> 00:11:17,970
which is which means the server<font color="#E5E5E5"> hostname</font>

246
00:11:15,059 --> 00:11:20,160
<font color="#E5E5E5">and then the volume ID which is</font><font color="#CCCCCC"> the boat</font>

247
00:11:17,970 --> 00:11:22,259
work volume name and then the mount

248
00:11:20,160 --> 00:11:28,050
<font color="#E5E5E5">point this is</font><font color="#CCCCCC"> the process this is the</font>

249
00:11:22,259 --> 00:11:31,199
process<font color="#E5E5E5"> which is shattered and then the</font>

250
00:11:28,050 --> 00:11:33,959
information<font color="#CCCCCC"> about the login so in</font><font color="#E5E5E5"> most</font>

251
00:11:31,199 --> 00:11:37,290
<font color="#CCCCCC">cases we wonder where is the</font><font color="#E5E5E5"> logging</font>

252
00:11:33,959 --> 00:11:38,939
file<font color="#CCCCCC"> in so if sometimes you</font><font color="#E5E5E5"> can</font>

253
00:11:37,290 --> 00:11:40,349
configure<font color="#E5E5E5"> it through the command line</font>

254
00:11:38,939 --> 00:11:42,660
when the process starts or you can

255
00:11:40,350 --> 00:11:44,639
configure it<font color="#E5E5E5"> with volume if volume</font>

256
00:11:42,660 --> 00:11:47,129
options but if you don't know you<font color="#E5E5E5"> don't</font>

257
00:11:44,639 --> 00:11:48,629
need<font color="#E5E5E5"> to you don't research for this</font>

258
00:11:47,129 --> 00:11:50,129
volume file body you can do is you can

259
00:11:48,629 --> 00:11:52,129
<font color="#E5E5E5">just go</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> to the dot</font><font color="#CCCCCC"> my data directory</font>

260
00:11:50,129 --> 00:11:54,449
and<font color="#CCCCCC"> that is there will be a login</font>

261
00:11:52,129 --> 00:11:59,480
directory here so you can just<font color="#CCCCCC"> go to</font>

262
00:11:54,449 --> 00:11:59,479
here<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> that sorry</font>

263
00:12:06,730 --> 00:12:13,310
<font color="#E5E5E5">okay so so here you can see a log file</font>

264
00:12:11,540 --> 00:12:15,410
<font color="#CCCCCC">this is nothing what is</font><font color="#E5E5E5"> sibling</font><font color="#CCCCCC"> to the</font>

265
00:12:13,310 --> 00:12:17,449
actual log file<font color="#E5E5E5"> so if you want to see</font>

266
00:12:15,410 --> 00:12:20,180
the log file you can just go to the

267
00:12:17,450 --> 00:12:23,750
metadata<font color="#E5E5E5"> tree and you can do</font><font color="#CCCCCC"> LS</font><font color="#E5E5E5"> so</font>

268
00:12:20,180 --> 00:12:25,939
whatever it is<font color="#E5E5E5"> to the log file so now</font>

269
00:12:23,750 --> 00:12:28,400
you can see the log file<font color="#E5E5E5"> so if you don't</font>

270
00:12:25,940 --> 00:12:30,530
know about<font color="#E5E5E5"> the log where exactly the log</font>

271
00:12:28,400 --> 00:12:33,280
file is<font color="#CCCCCC"> start but</font><font color="#E5E5E5"> you can just go</font><font color="#CCCCCC"> to the</font>

272
00:12:30,530 --> 00:12:35,540
metadata tree and see the log files<font color="#CCCCCC"> and</font>

273
00:12:33,280 --> 00:12:38,870
another important<font color="#CCCCCC"> thing about</font><font color="#E5E5E5"> the log</font>

274
00:12:35,540 --> 00:12:41,270
log is let's say you have<font color="#E5E5E5"> multiple</font>

275
00:12:38,870 --> 00:12:44,630
client process<font color="#E5E5E5"> for a glass of volume</font>

276
00:12:41,270 --> 00:12:46,699
it's a thousands of client<font color="#CCCCCC"> process are</font>

277
00:12:44,630 --> 00:12:50,660
<font color="#E5E5E5">there for a single</font><font color="#CCCCCC"> volume</font><font color="#E5E5E5"> which means</font>

278
00:12:46,700 --> 00:12:54,680
you can<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a log level for your log</font>

279
00:12:50,660 --> 00:12:57,770
file like debug log trace log and you

280
00:12:54,680 --> 00:13:00,500
know a critical logs but you can also

281
00:12:57,770 --> 00:13:02,180
change<font color="#CCCCCC"> with configure it</font><font color="#E5E5E5"> like through a</font>

282
00:13:00,500 --> 00:13:05,000
glacier commands you<font color="#CCCCCC"> can change that log</font>

283
00:13:02,180 --> 00:13:07,370
level<font color="#CCCCCC"> into</font><font color="#E5E5E5"> trace or debug or warning but</font>

284
00:13:05,000 --> 00:13:09,470
that changes the log level for all<font color="#CCCCCC"> the</font>

285
00:13:07,370 --> 00:13:12,920
clients<font color="#CCCCCC"> let's say you want to debug a</font>

286
00:13:09,470 --> 00:13:15,800
particular client process<font color="#CCCCCC"> you cannot</font>

287
00:13:12,920 --> 00:13:17,959
just<font color="#E5E5E5"> make it you cannot just</font><font color="#CCCCCC"> change</font><font color="#E5E5E5"> the</font>

288
00:13:15,800 --> 00:13:20,569
log level for a single process of course

289
00:13:17,960 --> 00:13:22,550
you can restart<font color="#E5E5E5"> the</font><font color="#CCCCCC"> process with the log</font>

290
00:13:20,570 --> 00:13:24,830
level as a debugger trace but it

291
00:13:22,550 --> 00:13:27,880
requires<font color="#E5E5E5"> a research</font><font color="#CCCCCC"> so how do you change</font>

292
00:13:24,830 --> 00:13:30,710
log level of a single<font color="#E5E5E5"> client process</font>

293
00:13:27,880 --> 00:13:33,110
that you<font color="#E5E5E5"> can do using this log level so</font>

294
00:13:30,710 --> 00:13:37,960
there is a there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> a file</font><font color="#CCCCCC"> called a log</font>

295
00:13:33,110 --> 00:13:40,960
level so you can see what it has so

296
00:13:37,960 --> 00:13:40,960
sorry

297
00:13:45,140 --> 00:13:59,910
so it's<font color="#CCCCCC"> locking the okay so</font><font color="#E5E5E5"> actually it</font>

298
00:13:57,960 --> 00:14:03,330
is there I<font color="#E5E5E5"> don't know how to</font><font color="#CCCCCC"> adjust</font><font color="#E5E5E5"> it</font>

299
00:13:59,910 --> 00:14:05,610
so the log level is actually<font color="#E5E5E5"> one</font><font color="#CCCCCC"> eight</font>

300
00:14:03,330 --> 00:14:07,920
<font color="#E5E5E5">seven right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> you can change the log</font>

301
00:14:05,610 --> 00:14:10,590
level like the log level that there is a

302
00:14:07,920 --> 00:14:15,150
log level number<font color="#CCCCCC"> for trace it's eight</font>

303
00:14:10,590 --> 00:14:15,540
for info it is seven so something<font color="#CCCCCC"> like</font>

304
00:14:15,150 --> 00:14:17,699
<font color="#E5E5E5">that</font>

305
00:14:15,540 --> 00:14:20,610
so to change the log level<font color="#CCCCCC"> but you</font><font color="#E5E5E5"> need</font>

306
00:14:17,700 --> 00:14:23,160
to do is you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> read the log level</font>

307
00:14:20,610 --> 00:14:26,390
number into the log<font color="#E5E5E5"> into this file log</font>

308
00:14:23,160 --> 00:14:28,980
level five<font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's say currently the</font>

309
00:14:26,390 --> 00:14:31,860
currently it has<font color="#CCCCCC"> the log level of seven</font>

310
00:14:28,980 --> 00:14:36,060
which is written there but<font color="#E5E5E5"> it's not it's</font>

311
00:14:31,860 --> 00:14:38,850
<font color="#E5E5E5">not displaying it</font><font color="#CCCCCC"> but I'll just</font><font color="#E5E5E5"> do a</font>

312
00:14:36,060 --> 00:14:41,430
<font color="#CCCCCC">demonic change in that log log level</font>

313
00:14:38,850 --> 00:14:43,440
into a eight which<font color="#E5E5E5"> is price there is</font><font color="#CCCCCC"> a</font>

314
00:14:41,430 --> 00:14:45,689
documentation<font color="#E5E5E5"> what are the numbers for</font>

315
00:14:43,440 --> 00:14:48,450
<font color="#E5E5E5">each log level so what you can do is you</font>

316
00:14:45,690 --> 00:14:52,470
can change<font color="#E5E5E5"> the log level through this</font>

317
00:14:48,450 --> 00:14:56,280
<font color="#E5E5E5">interface</font><font color="#CCCCCC"> so now the data</font><font color="#E5E5E5"> is written and</font>

318
00:14:52,470 --> 00:14:59,580
<font color="#CCCCCC">you can see the log level</font><font color="#E5E5E5"> eight here and</font>

319
00:14:56,280 --> 00:15:04,260
now what<font color="#E5E5E5"> are the changes it has is now</font>

320
00:14:59,580 --> 00:15:06,720
if you select log file and<font color="#CCCCCC"> below you can</font>

321
00:15:04,260 --> 00:15:10,350
<font color="#E5E5E5">see it is started bringing that debug</font>

322
00:15:06,720 --> 00:15:15,440
logs<font color="#E5E5E5"> okay so that's one information</font><font color="#CCCCCC"> okay</font>

323
00:15:10,350 --> 00:15:17,870
quickly<font color="#E5E5E5"> move so that's about the logging</font>

324
00:15:15,440 --> 00:15:21,690
<font color="#E5E5E5">other things</font>

325
00:15:17,870 --> 00:15:24,120
yeah the process<font color="#E5E5E5"> your</font><font color="#CCCCCC"> UUID</font><font color="#E5E5E5"> so the</font>

326
00:15:21,690 --> 00:15:27,510
process here<font color="#E5E5E5"> is each client process</font><font color="#CCCCCC"> has</font>

327
00:15:24,120 --> 00:15:29,760
a unique<font color="#E5E5E5"> identifier</font><font color="#CCCCCC"> so that that</font>

328
00:15:27,510 --> 00:15:33,750
information<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be fetched</font><font color="#E5E5E5"> through this</font>

329
00:15:29,760 --> 00:15:35,790
process<font color="#CCCCCC"> UAD process you ready</font>

330
00:15:33,750 --> 00:15:38,160
this is the process<font color="#CCCCCC"> ready for this</font>

331
00:15:35,790 --> 00:15:39,839
<font color="#E5E5E5">client process</font><font color="#CCCCCC"> how this is helpful is</font>

332
00:15:38,160 --> 00:15:42,030
let's say you have<font color="#E5E5E5"> thousands of clients</font>

333
00:15:39,839 --> 00:15:45,720
<font color="#E5E5E5">which means the information about a</font>

334
00:15:42,030 --> 00:15:48,180
<font color="#CCCCCC">particular event</font><font color="#E5E5E5"> on the client</font><font color="#CCCCCC"> - in the</font>

335
00:15:45,720 --> 00:15:51,480
server logs<font color="#E5E5E5"> is logged through using the</font>

336
00:15:48,180 --> 00:15:54,089
process<font color="#CCCCCC"> ready let's say if you take</font><font color="#E5E5E5"> okay</font>

337
00:15:51,480 --> 00:15:57,430
<font color="#E5E5E5">I'll just copy this one and if you if</font>

338
00:15:54,089 --> 00:16:01,630
you take try the server logs

339
00:15:57,430 --> 00:16:05,739
we start here<font color="#CCCCCC"> in the as a brief see if</font>

340
00:16:01,630 --> 00:16:08,680
you search that thing you can see the

341
00:16:05,740 --> 00:16:12,580
logging<font color="#E5E5E5"> like the logins for this client</font>

342
00:16:08,680 --> 00:16:14,890
like that<font color="#CCCCCC"> it's accepted</font><font color="#E5E5E5"> client from this</font>

343
00:16:12,580 --> 00:16:16,420
mahn point<font color="#E5E5E5"> so let's say you have</font>

344
00:16:14,890 --> 00:16:19,120
thousands of<font color="#E5E5E5"> client</font><font color="#CCCCCC"> there there will be</font>

345
00:16:16,420 --> 00:16:21,310
thousands of lanes like this that the

346
00:16:19,120 --> 00:16:22,960
<font color="#CCCCCC">the</font><font color="#E5E5E5"> connection</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> self establishment</font>

347
00:16:21,310 --> 00:16:25,089
has already happened<font color="#E5E5E5"> or the disconnect</font>

348
00:16:22,960 --> 00:16:26,589
has happened with all with the process

349
00:16:25,089 --> 00:16:28,360
here<font color="#E5E5E5"> D so if you want to</font><font color="#CCCCCC"> know whether</font>

350
00:16:26,589 --> 00:16:30,040
the connection<font color="#E5E5E5"> happens or disconnection</font>

351
00:16:28,360 --> 00:16:32,440
happens<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> need to take the</font>

352
00:16:30,040 --> 00:16:34,660
<font color="#CCCCCC">process v ID and search that process you</font>

353
00:16:32,440 --> 00:16:38,860
<font color="#E5E5E5">ready in the server graph and also when</font>

354
00:16:34,660 --> 00:16:41,410
when when when client makes a log

355
00:16:38,860 --> 00:16:43,210
locking into<font color="#E5E5E5"> the servers if you want to</font>

356
00:16:41,410 --> 00:16:46,990
know which when especially<font color="#E5E5E5"> when you</font>

357
00:16:43,210 --> 00:16:48,730
<font color="#E5E5E5">debug a deadlock kind of scenarios or a</font>

358
00:16:46,990 --> 00:16:51,120
locking issue<font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to see which</font>

359
00:16:48,730 --> 00:16:54,400
client is has<font color="#E5E5E5"> taken a lock from the</font>

360
00:16:51,120 --> 00:16:57,460
<font color="#CCCCCC">servers so in that case the locking has</font>

361
00:16:54,400 --> 00:16:59,500
done with this process<font color="#E5E5E5"> ready so you take</font>

362
00:16:57,460 --> 00:17:02,140
the process<font color="#E5E5E5"> your ID and search in the</font>

363
00:16:59,500 --> 00:17:04,929
log<font color="#E5E5E5"> in the locking translator which</font>

364
00:17:02,140 --> 00:17:06,900
<font color="#CCCCCC">login which client has</font><font color="#E5E5E5"> taken the log</font><font color="#CCCCCC"> so</font>

365
00:17:04,929 --> 00:17:11,620
you<font color="#CCCCCC"> can use the</font><font color="#E5E5E5"> process ready for that</font>

366
00:17:06,900 --> 00:17:14,650
<font color="#E5E5E5">for this kind of informations the thing</font>

367
00:17:11,619 --> 00:17:17,349
is memory<font color="#CCCCCC"> information</font><font color="#E5E5E5"> is very important</font>

368
00:17:14,650 --> 00:17:30,490
so you<font color="#E5E5E5"> can see the memory</font><font color="#CCCCCC"> information</font>

369
00:17:17,349 --> 00:17:33,580
through this<font color="#E5E5E5"> meta interface so yeah so</font>

370
00:17:30,490 --> 00:17:35,230
for a glacial process for a<font color="#CCCCCC"> Glasser</font>

371
00:17:33,580 --> 00:17:38,710
client process you can<font color="#E5E5E5"> see what are the</font>

372
00:17:35,230 --> 00:17:42,070
memories this cluster<font color="#E5E5E5"> mount points s use</font>

373
00:17:38,710 --> 00:17:45,700
it using<font color="#CCCCCC"> this method method interface</font>

374
00:17:42,070 --> 00:17:47,620
<font color="#E5E5E5">and that's</font><font color="#CCCCCC"> through the</font><font color="#E5E5E5"> mat info file so</font>

375
00:17:45,700 --> 00:17:53,160
it says what<font color="#CCCCCC"> are</font><font color="#E5E5E5"> the arena's</font><font color="#CCCCCC"> it is</font>

376
00:17:47,620 --> 00:17:57,129
<font color="#E5E5E5">already</font><font color="#CCCCCC"> allocated the blocks the map</font>

377
00:17:53,160 --> 00:18:01,530
informations<font color="#CCCCCC"> and yeah the free blocks</font>

378
00:17:57,130 --> 00:18:04,300
<font color="#CCCCCC">like that and also from these</font><font color="#E5E5E5"> allocated</font>

379
00:18:01,530 --> 00:18:06,399
spaces for the memory<font color="#E5E5E5"> for this process</font>

380
00:18:04,300 --> 00:18:09,620
you<font color="#E5E5E5"> can also see what are the what are</font>

381
00:18:06,400 --> 00:18:11,090
the data structure Oh

382
00:18:09,620 --> 00:18:14,300
particular data<font color="#CCCCCC"> stretches how much</font>

383
00:18:11,090 --> 00:18:18,080
memory it is already use it like this

384
00:18:14,300 --> 00:18:20,240
this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> this is a data</font><font color="#E5E5E5"> type data</font>

385
00:18:18,080 --> 00:18:22,250
structure we use<font color="#E5E5E5"> it in blesser</font><font color="#CCCCCC"> and how</font>

386
00:18:20,240 --> 00:18:25,220
much that says it is<font color="#E5E5E5"> it has already</font>

387
00:18:22,250 --> 00:18:29,540
<font color="#E5E5E5">consumed let's say you have let's</font><font color="#CCCCCC"> say</font>

388
00:18:25,220 --> 00:18:31,790
you<font color="#E5E5E5"> have a memory leak problem</font><font color="#CCCCCC"> in class</font>

389
00:18:29,540 --> 00:18:35,510
<font color="#E5E5E5">and you are debugging it then you can</font>

390
00:18:31,790 --> 00:18:37,399
look<font color="#E5E5E5"> into this for</font><font color="#CCCCCC"> a look you</font><font color="#E5E5E5"> can look</font>

391
00:18:35,510 --> 00:18:40,100
<font color="#E5E5E5">into this information and see what is</font>

392
00:18:37,400 --> 00:18:42,920
what<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the maximum says you what is the</font>

393
00:18:40,100 --> 00:18:45,169
maximum says allocated for each data

394
00:18:42,920 --> 00:18:47,540
types<font color="#E5E5E5"> and you can see when there is a</font>

395
00:18:45,170 --> 00:18:49,610
<font color="#E5E5E5">memory leak you you could see a one data</font>

396
00:18:47,540 --> 00:18:52,040
type<font color="#CCCCCC"> or</font><font color="#E5E5E5"> one or two that I being a lot of</font>

397
00:18:49,610 --> 00:18:53,990
spaces<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's why you can understand</font>

398
00:18:52,040 --> 00:18:57,440
which<font color="#E5E5E5"> translate which data type is using</font>

399
00:18:53,990 --> 00:18:59,900
this information<font color="#CCCCCC"> this is a global</font><font color="#E5E5E5"> this</font>

400
00:18:57,440 --> 00:19:02,510
<font color="#E5E5E5">is a global data structure and it's</font>

401
00:18:59,900 --> 00:19:04,400
there is also a translator specific data

402
00:19:02,510 --> 00:19:12,620
structure that<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see when we look</font>

403
00:19:04,400 --> 00:19:16,520
into<font color="#E5E5E5"> the graphs and yeah so now I'll</font>

404
00:19:12,620 --> 00:19:18,229
<font color="#E5E5E5">I'll I'll introduce about the I will</font>

405
00:19:16,520 --> 00:19:20,800
talk about<font color="#E5E5E5"> the master translator then</font>

406
00:19:18,230 --> 00:19:25,309
because we don't have much time<font color="#CCCCCC"> left</font><font color="#E5E5E5"> so</font>

407
00:19:20,800 --> 00:19:27,830
<font color="#E5E5E5">this is the translator for the fuse fuse</font>

408
00:19:25,309 --> 00:19:30,410
bridge so all the information<font color="#CCCCCC"> about</font>

409
00:19:27,830 --> 00:19:32,480
latency<font color="#E5E5E5"> so to see the latency</font>

410
00:19:30,410 --> 00:19:36,740
information what<font color="#CCCCCC"> we can Pacific what we</font>

411
00:19:32,480 --> 00:19:40,730
can do is we can<font color="#E5E5E5"> start some operation</font><font color="#CCCCCC"> on</font>

412
00:19:36,740 --> 00:19:46,190
the one point then I will do go<font color="#E5E5E5"> into a</font>

413
00:19:40,730 --> 00:19:48,440
different<font color="#E5E5E5"> terminal and got here and do</font>

414
00:19:46,190 --> 00:19:51,440
<font color="#E5E5E5">it met a dry tree and then</font><font color="#CCCCCC"> master</font>

415
00:19:48,440 --> 00:19:53,240
translator<font color="#E5E5E5"> so if you can see we</font><font color="#CCCCCC"> are here</font>

416
00:19:51,440 --> 00:19:56,030
at the in the mount point<font color="#E5E5E5"> dot met a</font>

417
00:19:53,240 --> 00:19:58,070
translator<font color="#E5E5E5"> and the master translator and</font>

418
00:19:56,030 --> 00:20:00,200
here what we have<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a history what</font>

419
00:19:58,070 --> 00:20:02,330
history<font color="#E5E5E5"> is what are the operation is</font>

420
00:20:00,200 --> 00:20:04,850
<font color="#E5E5E5">going about us what is the operation is</font>

421
00:20:02,330 --> 00:20:07,909
happening on the mount<font color="#E5E5E5"> point</font><font color="#CCCCCC"> feel if you</font>

422
00:20:04,850 --> 00:20:10,669
see the history<font color="#CCCCCC"> you can you can see what</font>

423
00:20:07,910 --> 00:20:14,300
is what<font color="#CCCCCC"> is the operation is</font><font color="#E5E5E5"> going on on</font>

424
00:20:10,670 --> 00:20:16,550
on a few<font color="#E5E5E5"> smart</font><font color="#CCCCCC"> so it says for example</font><font color="#E5E5E5"> it</font>

425
00:20:14,300 --> 00:20:19,580
has<font color="#CCCCCC"> a time and what if the operation is</font>

426
00:20:16,550 --> 00:20:21,020
<font color="#CCCCCC">going</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is like on and I know</font>

427
00:20:19,580 --> 00:20:23,389
<font color="#CCCCCC">descending</font><font color="#E5E5E5"> invalidation</font>

428
00:20:21,020 --> 00:20:27,020
operation and this is an open on this

429
00:20:23,390 --> 00:20:30,740
directory<font color="#E5E5E5"> bless me we did</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> did open</font>

430
00:20:27,020 --> 00:20:33,530
<font color="#E5E5E5">into that we did</font><font color="#CCCCCC"> open in the history</font>

431
00:20:30,740 --> 00:20:35,660
that's the last operation<font color="#CCCCCC"> lobe and</font><font color="#E5E5E5"> you</font>

432
00:20:33,530 --> 00:20:39,290
can see the other other<font color="#E5E5E5"> F sat on the</font>

433
00:20:35,660 --> 00:20:40,760
<font color="#E5E5E5">Linux so all those operations the</font><font color="#CCCCCC"> fuse</font>

434
00:20:39,290 --> 00:20:45,200
operation you can<font color="#E5E5E5"> see the</font><font color="#CCCCCC"> history</font>

435
00:20:40,760 --> 00:20:47,050
through this<font color="#E5E5E5"> interface that's one and</font>

436
00:20:45,200 --> 00:20:50,900
[Music]

437
00:20:47,050 --> 00:20:53,629
yeah<font color="#E5E5E5"> so and as I said I</font><font color="#CCCCCC"> said I</font><font color="#E5E5E5"> already</font>

438
00:20:50,900 --> 00:20:58,490
told you about the the profile

439
00:20:53,630 --> 00:21:03,200
information<font color="#E5E5E5"> so you can see how much</font>

440
00:20:58,490 --> 00:21:10,430
information<font color="#E5E5E5"> okay thing the profiling</font><font color="#CCCCCC"> has</font>

441
00:21:03,200 --> 00:21:13,280
turned on<font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> see a measure</font>

442
00:21:10,430 --> 00:21:14,960
latency things so you<font color="#CCCCCC"> can you can</font><font color="#E5E5E5"> enable</font>

443
00:21:13,280 --> 00:21:23,330
the measure<font color="#CCCCCC"> latent sitting by writing</font>

444
00:21:14,960 --> 00:21:27,010
one<font color="#E5E5E5"> into this one so then now it will</font>

445
00:21:23,330 --> 00:21:32,629
<font color="#CCCCCC">take some time to measure the latencies</font>

446
00:21:27,010 --> 00:21:34,820
<font color="#CCCCCC">let's see if it</font><font color="#E5E5E5"> is already here if it</font>

447
00:21:32,630 --> 00:21:39,770
<font color="#E5E5E5">already turned on you</font><font color="#CCCCCC"> can see what are</font>

448
00:21:34,820 --> 00:21:41,960
the yeah but<font color="#E5E5E5"> it it will take some time</font>

449
00:21:39,770 --> 00:21:44,480
<font color="#E5E5E5">so basically you can see if you if you</font>

450
00:21:41,960 --> 00:21:46,790
turn on measure latency<font color="#CCCCCC"> into</font><font color="#E5E5E5"> if you turn</font>

451
00:21:44,480 --> 00:21:48,560
<font color="#CCCCCC">on that</font><font color="#E5E5E5"> option</font><font color="#CCCCCC"> you can see each latency</font>

452
00:21:46,790 --> 00:21:54,290
through this<font color="#E5E5E5"> interface currently it was</font>

453
00:21:48,560 --> 00:21:58,190
turned off so it<font color="#E5E5E5"> is showing</font><font color="#CCCCCC"> zero the</font>

454
00:21:54,290 --> 00:22:01,399
<font color="#E5E5E5">other things is the options the options</font>

455
00:21:58,190 --> 00:22:03,920
of each translator<font color="#CCCCCC"> so you can see the</font>

456
00:22:01,400 --> 00:22:06,410
graph information through this<font color="#E5E5E5"> interface</font>

457
00:22:03,920 --> 00:22:11,390
which is<font color="#E5E5E5"> there will be directory called</font>

458
00:22:06,410 --> 00:22:13,520
graphs<font color="#E5E5E5"> you can go into graphs and see</font>

459
00:22:11,390 --> 00:22:15,800
you<font color="#CCCCCC"> will have all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> available all the</font>

460
00:22:13,520 --> 00:22:18,350
<font color="#CCCCCC">graph is</font><font color="#E5E5E5"> faced in</font><font color="#CCCCCC"> the graphs</font><font color="#E5E5E5"> let's say a</font>

461
00:22:15,800 --> 00:22:20,480
graph means<font color="#E5E5E5"> as I said it's a collection</font>

462
00:22:18,350 --> 00:22:22,310
of translator so when you disable a

463
00:22:20,480 --> 00:22:24,320
translator it is like a new graph

464
00:22:22,310 --> 00:22:26,149
because you have<font color="#CCCCCC"> removed</font><font color="#E5E5E5"> one node from</font>

465
00:22:24,320 --> 00:22:28,070
the<font color="#E5E5E5"> graph let's say you disabled a</font>

466
00:22:26,150 --> 00:22:31,010
caching translator which means you have

467
00:22:28,070 --> 00:22:33,020
a new trend<font color="#E5E5E5"> you have a new graph so that</font>

468
00:22:31,010 --> 00:22:33,910
<font color="#CCCCCC">information you can see from this where</font>

469
00:22:33,020 --> 00:22:36,040
are they

470
00:22:33,910 --> 00:22:38,500
graphs<font color="#CCCCCC"> the graph history and everything</font>

471
00:22:36,040 --> 00:22:42,100
<font color="#E5E5E5">and what is the active graph so I can</font>

472
00:22:38,500 --> 00:22:47,590
show you a demo<font color="#CCCCCC"> for that like lesser</font>

473
00:22:42,100 --> 00:22:50,409
volume<font color="#CCCCCC"> set performance</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a</font>

474
00:22:47,590 --> 00:22:55,560
translator called<font color="#E5E5E5"> a right behind food</font>

475
00:22:50,410 --> 00:22:58,420
sorry<font color="#CCCCCC"> you</font><font color="#E5E5E5"> there is a translator called</font>

476
00:22:55,560 --> 00:23:01,570
the<font color="#E5E5E5"> transfer</font><font color="#CCCCCC"> God right behind which does</font>

477
00:22:58,420 --> 00:23:04,660
the rate<font color="#E5E5E5"> in the background so I turned</font>

478
00:23:01,570 --> 00:23:06,490
off that that performance<font color="#E5E5E5"> translate</font>

479
00:23:04,660 --> 00:23:08,980
which means you the graph has changed it

480
00:23:06,490 --> 00:23:11,080
because this<font color="#E5E5E5"> translator is now removed</font>

481
00:23:08,980 --> 00:23:21,190
<font color="#E5E5E5">from the graph so you can see the old</font>

482
00:23:11,080 --> 00:23:24,000
graph information through the<font color="#CCCCCC"> method C</font>

483
00:23:21,190 --> 00:23:28,000
now there are only two entries earlier

484
00:23:24,000 --> 00:23:29,830
just one this<font color="#E5E5E5"> Rafi</font><font color="#CCCCCC"> now you have</font><font color="#E5E5E5"> to</font>

485
00:23:28,000 --> 00:23:32,080
because this<font color="#CCCCCC"> is an</font><font color="#E5E5E5"> active one which is</font>

486
00:23:29,830 --> 00:23:34,149
sibling to the already existing<font color="#CCCCCC"> active</font>

487
00:23:32,080 --> 00:23:37,840
<font color="#CCCCCC">graph you can see one</font><font color="#E5E5E5"> more graph is the</font>

488
00:23:34,150 --> 00:23:42,210
old graph so if you go into<font color="#E5E5E5"> the if you</font>

489
00:23:37,840 --> 00:23:45,280
go<font color="#E5E5E5"> into the if you go into the active</font>

490
00:23:42,210 --> 00:23:50,860
active graph you can't see the<font color="#E5E5E5"> rate</font>

491
00:23:45,280 --> 00:23:56,680
<font color="#CCCCCC">behind here but if you go to the if you</font>

492
00:23:50,860 --> 00:24:00,250
go to the old old graph you can see<font color="#CCCCCC"> that</font>

493
00:23:56,680 --> 00:24:02,560
<font color="#E5E5E5">information it's so you see here you can</font>

494
00:24:00,250 --> 00:24:04,330
<font color="#E5E5E5">see</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> behind here</font><font color="#CCCCCC"> right being here</font>

495
00:24:02,560 --> 00:24:06,820
<font color="#CCCCCC">but</font><font color="#E5E5E5"> you can't see that</font><font color="#CCCCCC"> rate behind</font><font color="#E5E5E5"> in</font>

496
00:24:04,330 --> 00:24:08,620
the latest active graph<font color="#E5E5E5"> so all those</font>

497
00:24:06,820 --> 00:24:10,720
informations<font color="#CCCCCC"> like what are the current</font>

498
00:24:08,620 --> 00:24:12,280
graph and the previous graph all those

499
00:24:10,720 --> 00:24:17,640
information can be fished through this

500
00:24:12,280 --> 00:24:23,010
interface<font color="#CCCCCC"> yeah ok</font><font color="#E5E5E5"> so then okay so I'm</font>

501
00:24:17,640 --> 00:24:25,180
winding<font color="#E5E5E5"> up the</font><font color="#CCCCCC"> session with so I</font>

502
00:24:23,010 --> 00:24:27,100
explained about<font color="#CCCCCC"> the</font><font color="#E5E5E5"> infant memory</font>

503
00:24:25,180 --> 00:24:30,280
information<font color="#CCCCCC"> like there's</font><font color="#E5E5E5"> an explanation</font>

504
00:24:27,100 --> 00:24:32,139
<font color="#E5E5E5">of the each lanes body each</font><font color="#CCCCCC"> lane</font><font color="#E5E5E5"> means</font>

505
00:24:30,280 --> 00:24:35,350
says and the number of allocation and

506
00:24:32,140 --> 00:24:38,530
the memory<font color="#CCCCCC"> formations what is each lane</font>

507
00:24:35,350 --> 00:24:41,320
means so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can refer it into this one</font>

508
00:24:38,530 --> 00:24:45,639
<font color="#CCCCCC">and I</font><font color="#E5E5E5"> will talk</font><font color="#CCCCCC"> about the future</font><font color="#E5E5E5"> and</font>

509
00:24:41,320 --> 00:24:47,649
then<font color="#E5E5E5"> this</font><font color="#CCCCCC"> find out yes so what we</font><font color="#E5E5E5"> are</font>

510
00:24:45,640 --> 00:24:52,360
planning<font color="#E5E5E5"> as a future for this translate</font>

511
00:24:47,650 --> 00:24:54,220
we are planning<font color="#CCCCCC"> to give a future</font><font color="#E5E5E5"> like a</font>

512
00:24:52,360 --> 00:24:57,070
free and a drop cash through<font color="#E5E5E5"> this</font>

513
00:24:54,220 --> 00:25:00,309
veteran<font color="#CCCCCC"> solid let's say blessed has a</font>

514
00:24:57,070 --> 00:25:03,879
lot of translator for<font color="#CCCCCC"> caching</font><font color="#E5E5E5"> so each</font>

515
00:25:00,309 --> 00:25:06,399
translator<font color="#E5E5E5"> stores metadata informations</font>

516
00:25:03,880 --> 00:25:10,030
or caches metadata information so you

517
00:25:06,400 --> 00:25:12,460
can<font color="#E5E5E5"> see what are the caching memory how</font>

518
00:25:10,030 --> 00:25:15,940
much cache memory is used and you<font color="#CCCCCC"> can</font>

519
00:25:12,460 --> 00:25:17,950
also do a drop cache or you can also do

520
00:25:15,940 --> 00:25:20,050
a drop cache to drop all the cash in

521
00:25:17,950 --> 00:25:22,929
from the<font color="#CCCCCC"> blesser mount process that is</font>

522
00:25:20,050 --> 00:25:29,309
<font color="#E5E5E5">we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> planning as a future we are and</font>

523
00:25:22,929 --> 00:25:29,309
yeah<font color="#CCCCCC"> okay I'm done</font><font color="#E5E5E5"> any questions</font>

524
00:25:29,410 --> 00:25:35,219
[Applause]

