1
00:00:04,730 --> 00:00:10,410
<font color="#E5E5E5">okay so we were starting in a minute</font><font color="#CCCCCC"> so</font>

2
00:00:07,830 --> 00:00:13,650
the next<font color="#CCCCCC"> stock is is Nakata even broker</font>

3
00:00:10,410 --> 00:00:22,050
<font color="#E5E5E5">by evil no</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> ailment here</font>

4
00:00:13,650 --> 00:00:25,110
yes exactly<font color="#E5E5E5"> so thank you okay so I guess</font>

5
00:00:22,050 --> 00:00:27,410
I can start<font color="#E5E5E5"> right so my name</font><font color="#CCCCCC"> is veneer</font>

6
00:00:25,110 --> 00:00:31,770
<font color="#E5E5E5">that was</font><font color="#CCCCCC"> fantastically well</font><font color="#E5E5E5"> for enhanced</font>

7
00:00:27,410 --> 00:00:35,430
and I'm an engineer at<font color="#CCCCCC"> dorando</font><font color="#E5E5E5"> I'm sure</font>

8
00:00:31,770 --> 00:00:38,399
you before<font color="#CCCCCC"> and I'm very</font><font color="#E5E5E5"> lucky that I get</font>

9
00:00:35,430 --> 00:00:40,890
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> open source</font><font color="#CCCCCC"> software and</font><font color="#E5E5E5"> get paid</font>

10
00:00:38,399 --> 00:00:42,960
<font color="#CCCCCC">for</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> so that's really great</font><font color="#E5E5E5"> and I work</font>

11
00:00:40,890 --> 00:00:46,140
<font color="#E5E5E5">on something that's called NACA</font><font color="#CCCCCC"> DeHaven</font>

12
00:00:42,960 --> 00:00:47,880
broker<font color="#CCCCCC"> a</font><font color="#E5E5E5"> kadhi is a Georgian word that</font>

13
00:00:46,140 --> 00:00:50,370
means<font color="#E5E5E5"> trim so now that makes a bit more</font>

14
00:00:47,880 --> 00:00:52,770
sense for<font color="#E5E5E5"> you and</font><font color="#CCCCCC"> what is it it's a</font>

15
00:00:50,370 --> 00:00:56,430
RESTful API on top<font color="#E5E5E5"> of Kafka</font><font color="#CCCCCC"> rock you</font>

16
00:00:52,770 --> 00:00:58,379
<font color="#CCCCCC">will come to that</font><font color="#E5E5E5"> Sona kadhi is entirely</font>

17
00:00:56,430 --> 00:00:59,850
open<font color="#E5E5E5"> source you can get in on github and</font>

18
00:00:58,379 --> 00:01:01,589
run the exact same version we're running

19
00:00:59,850 --> 00:01:03,960
internally<font color="#E5E5E5"> but we have our</font><font color="#CCCCCC"> own</font>

20
00:01:01,590 --> 00:01:07,500
<font color="#E5E5E5">deployment of course for</font><font color="#CCCCCC"> Zalando</font>

21
00:01:03,960 --> 00:01:10,229
we've got<font color="#E5E5E5"> about I don't know 150 200</font>

22
00:01:07,500 --> 00:01:12,270
teams<font color="#E5E5E5"> of engineers and we have an</font>

23
00:01:10,229 --> 00:01:15,990
architectural services micro services

24
00:01:12,270 --> 00:01:18,240
and<font color="#CCCCCC"> REST API and Jason format so they</font>

25
00:01:15,990 --> 00:01:22,020
use<font color="#E5E5E5"> naka D in order to exchange messages</font>

26
00:01:18,240 --> 00:01:23,818
between<font color="#E5E5E5"> between services</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> quite</font>

27
00:01:22,020 --> 00:01:27,030
well<font color="#CCCCCC"> they seem to be quite happy with</font>

28
00:01:23,819 --> 00:01:28,830
what we do so that's<font color="#E5E5E5"> quite nice and but</font>

29
00:01:27,030 --> 00:01:31,080
<font color="#E5E5E5">that's not all</font><font color="#CCCCCC"> we also use it to archive</font>

30
00:01:28,830 --> 00:01:34,259
all<font color="#CCCCCC"> the data that</font><font color="#E5E5E5"> should be</font><font color="#CCCCCC"> archived</font>

31
00:01:31,080 --> 00:01:38,190
<font color="#E5E5E5">into our own data like and then it can</font>

32
00:01:34,259 --> 00:01:40,940
<font color="#E5E5E5">be used by</font><font color="#CCCCCC"> researchers and data</font>

33
00:01:38,190 --> 00:01:43,470
scientists<font color="#CCCCCC"> and</font><font color="#E5E5E5"> bi people and everything</font>

34
00:01:40,940 --> 00:01:44,550
this<font color="#CCCCCC"> is on</font><font color="#E5E5E5"> you logo and it's actually</font>

35
00:01:43,470 --> 00:01:46,289
<font color="#E5E5E5">showing you that it's not even on the</font>

36
00:01:44,550 --> 00:01:50,429
website yet so you get to see it for the

37
00:01:46,289 --> 00:01:52,860
first time<font color="#CCCCCC"> and let's go back to the</font>

38
00:01:50,429 --> 00:01:55,800
let's see what is it - that's<font color="#CCCCCC"> not ID</font>

39
00:01:52,860 --> 00:01:58,229
it's a RESTful API on<font color="#CCCCCC"> top of Kafka like</font>

40
00:01:55,800 --> 00:01:58,890
you so restful<font color="#E5E5E5"> api</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think that's okay</font>

41
00:01:58,229 --> 00:02:01,950
<font color="#CCCCCC">for everyone</font>

42
00:01:58,890 --> 00:02:07,729
but can I ask you to stand up<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> use</font>

43
00:02:01,950 --> 00:02:11,240
<font color="#E5E5E5">or have used Kafka like</font>

44
00:02:07,729 --> 00:02:13,250
it may be<font color="#CCCCCC"> one-tenth of you</font><font color="#E5E5E5"> if that</font>

45
00:02:11,240 --> 00:02:18,040
okay that's great and who's heard of

46
00:02:13,250 --> 00:02:20,120
<font color="#E5E5E5">NACA</font><font color="#CCCCCC"> D yeah that yeah go through me so</font>

47
00:02:18,040 --> 00:02:22,250
<font color="#CCCCCC">we're going to change that because</font><font color="#E5E5E5"> now</font>

48
00:02:20,120 --> 00:02:24,410
<font color="#E5E5E5">you all have heard of</font><font color="#CCCCCC"> my caddy right</font><font color="#E5E5E5"> so</font>

49
00:02:22,250 --> 00:02:26,390
<font color="#CCCCCC">Kefka</font><font color="#E5E5E5"> IQ is a little bit different than</font>

50
00:02:24,410 --> 00:02:28,520
the<font color="#E5E5E5"> cues in like something like</font><font color="#CCCCCC"> rabbitmq</font>

51
00:02:26,390 --> 00:02:30,850
or something so since not that many of

52
00:02:28,520 --> 00:02:32,780
you used it let's spend a few<font color="#CCCCCC"> minutes to</font>

53
00:02:30,850 --> 00:02:38,120
do a quick recap<font color="#CCCCCC"> right</font>

54
00:02:32,780 --> 00:02:41,630
so in Kafka<font color="#E5E5E5"> and in</font><font color="#CCCCCC"> Accardi</font><font color="#E5E5E5"> you can write</font>

55
00:02:38,120 --> 00:02:43,670
to an append-only log<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and you have</font>

56
00:02:41,630 --> 00:02:46,489
producers<font color="#E5E5E5"> who write and</font><font color="#CCCCCC"> you have</font>

57
00:02:43,670 --> 00:02:48,559
consumers who consume today read what's

58
00:02:46,489 --> 00:02:50,090
on<font color="#CCCCCC"> the log and here you've got one</font>

59
00:02:48,560 --> 00:02:52,459
producer<font color="#E5E5E5"> but it could be several ones</font>

60
00:02:50,090 --> 00:02:55,040
and<font color="#CCCCCC"> he's writing</font><font color="#E5E5E5"> like messages 0 1 2 3 4</font>

61
00:02:52,459 --> 00:02:57,110
<font color="#CCCCCC">5 and consumers</font><font color="#E5E5E5"> they can say well I want</font>

62
00:02:55,040 --> 00:02:59,000
to<font color="#CCCCCC"> stop consuming here and I'll just</font>

63
00:02:57,110 --> 00:03:01,250
<font color="#E5E5E5">sequentially consume everything and I'll</font>

64
00:02:59,000 --> 00:03:03,440
wait when I get catch up to with the

65
00:03:01,250 --> 00:03:06,080
producer for and to write something<font color="#CCCCCC"> and</font>

66
00:03:03,440 --> 00:03:08,510
then<font color="#E5E5E5"> I read</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> etc so the difference is</font>

67
00:03:06,080 --> 00:03:10,160
that<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> have several</font><font color="#CCCCCC"> groups</font><font color="#E5E5E5"> of</font>

68
00:03:08,510 --> 00:03:12,290
consumers and<font color="#E5E5E5"> they can all consume the</font>

69
00:03:10,160 --> 00:03:16,730
same amount the all the data<font color="#E5E5E5"> it's not</font>

70
00:03:12,290 --> 00:03:19,010
distributed to<font color="#E5E5E5"> all of them so what do</font>

71
00:03:16,730 --> 00:03:21,230
you do in Kafka when you want<font color="#CCCCCC"> to have</font>

72
00:03:19,010 --> 00:03:23,060
more throughput<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to</font>

73
00:03:21,230 --> 00:03:25,970
write<font color="#E5E5E5"> a lot of messages we get a lot of</font>

74
00:03:23,060 --> 00:03:29,630
<font color="#E5E5E5">messages</font><font color="#CCCCCC"> well you can create partitions</font>

75
00:03:25,970 --> 00:03:32,269
and<font color="#CCCCCC"> Kafka guarantees order only within a</font>

76
00:03:29,630 --> 00:03:33,739
partition so the producer<font color="#E5E5E5"> gets to write</font>

77
00:03:32,269 --> 00:03:36,109
to either partitioning<font color="#CCCCCC"> it's the truth</font>

78
00:03:33,739 --> 00:03:37,640
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> okay poor choice for him and</font>

79
00:03:36,109 --> 00:03:39,140
the consumers they can read from both

80
00:03:37,640 --> 00:03:41,540
partitions and<font color="#E5E5E5"> they can write twice as</font>

81
00:03:39,140 --> 00:03:45,078
much that's really nice<font color="#E5E5E5"> so Kafka is</font>

82
00:03:41,540 --> 00:03:49,070
<font color="#E5E5E5">actually a distributed streaming</font>

83
00:03:45,079 --> 00:03:53,480
platform so every<font color="#E5E5E5"> partition in Kafka is</font>

84
00:03:49,070 --> 00:03:57,380
replicated on a number<font color="#E5E5E5"> of books on in</font>

85
00:03:53,480 --> 00:03:58,670
your<font color="#CCCCCC"> classroom for us</font><font color="#E5E5E5"> at three but I</font>

86
00:03:57,380 --> 00:04:03,489
think you can configure it to<font color="#E5E5E5"> something</font>

87
00:03:58,670 --> 00:04:06,500
different<font color="#CCCCCC"> and that that's</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> you get</font>

88
00:04:03,489 --> 00:04:08,660
<font color="#CCCCCC">distributed very highly available</font><font color="#E5E5E5"> system</font>

89
00:04:06,500 --> 00:04:11,900
because anybody can<font color="#E5E5E5"> go down it comes</font>

90
00:04:08,660 --> 00:04:14,959
<font color="#E5E5E5">back</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> there's no problem and</font><font color="#CCCCCC"> even</font>

91
00:04:11,900 --> 00:04:17,168
while it's down<font color="#CCCCCC"> things</font><font color="#E5E5E5"> keep working</font><font color="#CCCCCC"> so</font>

92
00:04:14,959 --> 00:04:19,760
that's really great

93
00:04:17,168 --> 00:04:22,969
what does it<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> do with mcaddy</font>

94
00:04:19,760 --> 00:04:25,580
this is the very<font color="#CCCCCC"> high-level architecture</font>

95
00:04:22,970 --> 00:04:28,190
of<font color="#E5E5E5"> Makati we've got Nakata sitting</font>

96
00:04:25,580 --> 00:04:30,650
<font color="#E5E5E5">between the producers and consumers in</font>

97
00:04:28,190 --> 00:04:34,640
<font color="#CCCCCC">our</font><font color="#E5E5E5"> case everyone is under but maybe you</font>

98
00:04:30,650 --> 00:04:37,130
<font color="#E5E5E5">and Kafka on the other side and when a</font>

99
00:04:34,640 --> 00:04:40,760
<font color="#CCCCCC">Cathy does is quite a bit</font><font color="#E5E5E5"> more than</font><font color="#CCCCCC"> just</font>

100
00:04:37,130 --> 00:04:43,120
<font color="#E5E5E5">being some sort of HTTP proxy for</font><font color="#CCCCCC"> Taft</font>

101
00:04:40,760 --> 00:04:47,000
although it is an HTTP proxy for Kafka

102
00:04:43,120 --> 00:04:49,520
it's got a<font color="#E5E5E5"> bunch of other features so in</font>

103
00:04:47,000 --> 00:04:52,190
Kafka you create a topic<font color="#CCCCCC"> as we saw</font>

104
00:04:49,520 --> 00:04:54,380
earlier<font color="#E5E5E5"> and that's your</font><font color="#CCCCCC"> append only log</font>

105
00:04:52,190 --> 00:04:55,850
that has a<font color="#E5E5E5"> number of</font><font color="#CCCCCC"> partition the</font>

106
00:04:54,380 --> 00:04:58,100
equivalent in Makati is called an event

107
00:04:55,850 --> 00:05:01,550
<font color="#E5E5E5">type but essentially it's pretty much</font>

108
00:04:58,100 --> 00:05:03,890
the<font color="#E5E5E5"> same and with your event type you</font>

109
00:05:01,550 --> 00:05:06,590
create it in<font color="#CCCCCC"> a caddy</font><font color="#E5E5E5"> and it appears in</font>

110
00:05:03,890 --> 00:05:09,200
Kafka<font color="#E5E5E5"> okay that's all fine and the caddy</font>

111
00:05:06,590 --> 00:05:12,380
has this nice feature<font color="#E5E5E5"> you can say well</font>

112
00:05:09,200 --> 00:05:15,890
this is<font color="#E5E5E5"> the schema in</font><font color="#CCCCCC"> json schema that</font>

113
00:05:12,380 --> 00:05:21,050
every<font color="#E5E5E5"> single event that is published</font><font color="#CCCCCC"> to</font>

114
00:05:15,890 --> 00:05:24,380
this event type is guaranteed to<font color="#CCCCCC"> -</font>

115
00:05:21,050 --> 00:05:26,720
<font color="#CCCCCC">confronting</font><font color="#E5E5E5"> yeah and you can also do</font>

116
00:05:24,380 --> 00:05:30,590
scheme evolution so there are rules<font color="#CCCCCC"> to</font>

117
00:05:26,720 --> 00:05:33,800
evolve<font color="#E5E5E5"> your schema</font><font color="#CCCCCC"> and only a forward or</font>

118
00:05:30,590 --> 00:05:35,989
only<font color="#CCCCCC"> a backward compatible way so that</font>

119
00:05:33,800 --> 00:05:37,670
all<font color="#CCCCCC"> your consumers will you don't</font>

120
00:05:35,990 --> 00:05:39,830
necessarily know have a<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of</font>

121
00:05:37,670 --> 00:05:44,780
guarantees<font color="#E5E5E5"> with regard to the</font><font color="#CCCCCC"> ability to</font>

122
00:05:39,830 --> 00:05:47,300
read your<font color="#E5E5E5"> messages</font><font color="#CCCCCC"> even when your schema</font>

123
00:05:44,780 --> 00:05:49,849
has evil so these are three features of

124
00:05:47,300 --> 00:05:53,060
Makati<font color="#E5E5E5"> you've got HTTP proxy you've got</font>

125
00:05:49,850 --> 00:05:56,030
schema registry you've got<font color="#E5E5E5"> schema</font>

126
00:05:53,060 --> 00:05:57,590
<font color="#CCCCCC">evolution that forward compatible</font>

127
00:05:56,030 --> 00:05:59,210
backward compatible not<font color="#CCCCCC"> compatible at</font>

128
00:05:57,590 --> 00:06:01,700
all if you want and it's a bit<font color="#CCCCCC"> more</font>

129
00:05:59,210 --> 00:06:05,690
risky<font color="#E5E5E5"> it's got other things</font><font color="#CCCCCC"> too you can</font>

130
00:06:01,700 --> 00:06:08,240
say well I<font color="#E5E5E5"> don't want</font><font color="#CCCCCC"> everyone</font><font color="#E5E5E5"> to read</font>

131
00:06:05,690 --> 00:06:09,620
or write to this event type and I don't

132
00:06:08,240 --> 00:06:11,570
<font color="#E5E5E5">want someone to go and train to my</font>

133
00:06:09,620 --> 00:06:14,390
schema and then break everything<font color="#E5E5E5"> so you</font>

134
00:06:11,570 --> 00:06:16,880
can set per event<font color="#E5E5E5"> type</font><font color="#CCCCCC"> optimization</font>

135
00:06:14,390 --> 00:06:19,280
rules that define<font color="#E5E5E5"> who gets to administer</font>

136
00:06:16,880 --> 00:06:20,840
the schema the event type sorry so

137
00:06:19,280 --> 00:06:21,710
change<font color="#CCCCCC"> the scheme</font><font color="#E5E5E5"> admission to some time</font>

138
00:06:20,840 --> 00:06:24,109
<font color="#E5E5E5">bunch of things</font>

139
00:06:21,710 --> 00:06:25,969
who gets<font color="#CCCCCC"> to write to the event type</font><font color="#E5E5E5"> and</font>

140
00:06:24,110 --> 00:06:27,560
you get to read<font color="#E5E5E5"> from the event type</font>

141
00:06:25,970 --> 00:06:31,379
<font color="#E5E5E5">which is very</font><font color="#CCCCCC"> useful when you have</font>

142
00:06:27,560 --> 00:06:33,569
<font color="#E5E5E5">sensitive data to to put in there</font>

143
00:06:31,379 --> 00:06:35,159
you can also set<font color="#E5E5E5"> a knock over</font><font color="#CCCCCC"> that gets</font>

144
00:06:33,569 --> 00:06:39,719
to read<font color="#CCCCCC"> everything</font><font color="#E5E5E5"> by the way</font>

145
00:06:35,159 --> 00:06:41,400
this<font color="#E5E5E5"> isn't you so that's that's for the</font>

146
00:06:39,719 --> 00:06:43,110
high level view<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Macaulay</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's got</font>

147
00:06:41,400 --> 00:06:45,330
a bunch<font color="#E5E5E5"> of other features</font><font color="#CCCCCC"> but there</font><font color="#E5E5E5"> is</font>

148
00:06:43,110 --> 00:06:47,219
one I<font color="#CCCCCC"> really want to</font><font color="#E5E5E5"> talk about because</font>

149
00:06:45,330 --> 00:06:49,979
I<font color="#E5E5E5"> think that's what makes McCarty</font>

150
00:06:47,219 --> 00:06:51,900
different from the competition<font color="#CCCCCC"> which</font>

151
00:06:49,979 --> 00:06:56,159
would be something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> maybe a</font>

152
00:06:51,900 --> 00:06:59,248
<font color="#E5E5E5">confident platform or</font><font color="#CCCCCC"> geniuses on AWS</font>

153
00:06:56,159 --> 00:07:02,639
what we've<font color="#CCCCCC"> got</font><font color="#E5E5E5"> is called timelines new</font>

154
00:06:59,249 --> 00:07:04,939
logo and<font color="#E5E5E5"> timelines is really cool</font>

155
00:07:02,639 --> 00:07:07,919
<font color="#E5E5E5">because</font><font color="#CCCCCC"> we'll have that problem</font><font color="#E5E5E5"> with</font>

156
00:07:04,939 --> 00:07:10,710
operating a big<font color="#CCCCCC"> kafka cluster we handle</font>

157
00:07:07,919 --> 00:07:13,500
several terabytes of data<font color="#E5E5E5"> they is that</font>

158
00:07:10,710 --> 00:07:16,049
sometimes you want<font color="#E5E5E5"> to move data from</font><font color="#CCCCCC"> one</font>

159
00:07:13,500 --> 00:07:18,840
broker to another or from one<font color="#E5E5E5"> cluster to</font>

160
00:07:16,050 --> 00:07:22,409
another<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> requires copying</font><font color="#E5E5E5"> a lot</font>

161
00:07:18,840 --> 00:07:26,128
of data<font color="#E5E5E5"> between brokers</font><font color="#CCCCCC"> and when we do</font>

162
00:07:22,409 --> 00:07:31,400
<font color="#E5E5E5">that we</font><font color="#CCCCCC"> have a big problem</font><font color="#E5E5E5"> we use more</font>

163
00:07:26,129 --> 00:07:34,770
bandwidth we use more<font color="#E5E5E5"> we have more</font><font color="#CCCCCC"> io</font>

164
00:07:31,400 --> 00:07:38,489
<font color="#E5E5E5">usage which means that everything slows</font>

165
00:07:34,770 --> 00:07:41,818
down<font color="#CCCCCC"> for everyone</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> and if I can take</font>

166
00:07:38,490 --> 00:07:46,110
an example last<font color="#E5E5E5"> year and the last</font><font color="#CCCCCC"> year</font>

167
00:07:41,819 --> 00:07:49,050
we had to rebalance<font color="#CCCCCC"> a cluster because we</font>

168
00:07:46,110 --> 00:07:52,800
wanted<font color="#E5E5E5"> to add three new brokers to the</font>

169
00:07:49,050 --> 00:07:56,669
cluster the<font color="#CCCCCC"> rebalance operation took an</font>

170
00:07:52,800 --> 00:07:58,909
entire<font color="#E5E5E5"> week of copying data around for</font>

171
00:07:56,669 --> 00:08:02,490
an entire week we had people complain

172
00:07:58,909 --> 00:08:04,759
<font color="#E5E5E5">why is</font><font color="#CCCCCC"> Naqada slow because</font><font color="#E5E5E5"> we're</font>

173
00:08:02,490 --> 00:08:06,870
rebalancing<font color="#CCCCCC"> when is</font><font color="#E5E5E5"> it going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> finish</font>

174
00:08:04,759 --> 00:08:08,879
we don't know but it's<font color="#E5E5E5"> probably going to</font>

175
00:08:06,870 --> 00:08:11,339
<font color="#E5E5E5">be a week it</font><font color="#CCCCCC"> was a week so they weren't</font>

176
00:08:08,879 --> 00:08:13,529
<font color="#CCCCCC">happy</font><font color="#E5E5E5"> and we thought well what can</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> do</font>

177
00:08:11,339 --> 00:08:16,110
because sometimes we really<font color="#E5E5E5"> do we need</font>

178
00:08:13,529 --> 00:08:18,479
to move<font color="#CCCCCC"> data around there's no way</font>

179
00:08:16,110 --> 00:08:21,120
<font color="#E5E5E5">around that</font><font color="#CCCCCC"> but can we do it</font><font color="#E5E5E5"> without</font>

180
00:08:18,479 --> 00:08:24,330
actually<font color="#E5E5E5"> copying the data and can we do</font>

181
00:08:21,120 --> 00:08:26,639
it in a way<font color="#CCCCCC"> that will not interrupt</font>

182
00:08:24,330 --> 00:08:29,460
service<font color="#E5E5E5"> either for consumers or</font>

183
00:08:26,639 --> 00:08:32,729
producers so we want to be able<font color="#CCCCCC"> to move</font>

184
00:08:29,460 --> 00:08:35,490
<font color="#E5E5E5">essentially an event type</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> one place</font>

185
00:08:32,729 --> 00:08:37,349
to<font color="#E5E5E5"> another without no one noticing and</font>

186
00:08:35,490 --> 00:08:41,570
without<font color="#CCCCCC"> slowdown</font><font color="#E5E5E5"> and that's what we do</font>

187
00:08:37,349 --> 00:08:44,180
the<font color="#CCCCCC"> timelines</font><font color="#E5E5E5"> so let's imagine</font>

188
00:08:41,570 --> 00:08:46,310
we have an<font color="#E5E5E5"> event type that is</font>

189
00:08:44,179 --> 00:08:48,439
represented by<font color="#CCCCCC"> a topic in our cluster a</font>

190
00:08:46,310 --> 00:08:51,829
and we<font color="#E5E5E5"> want to move it</font><font color="#CCCCCC"> to our</font><font color="#E5E5E5"> cluster B</font>

191
00:08:48,440 --> 00:08:53,509
right<font color="#E5E5E5"> so we've got one producer right</font>

192
00:08:51,829 --> 00:08:55,930
here he's<font color="#E5E5E5"> connected</font><font color="#CCCCCC"> to naka D and the</font>

193
00:08:53,509 --> 00:08:59,420
kadhi<font color="#E5E5E5"> on his behalf writes the messages</font>

194
00:08:55,930 --> 00:09:01,219
to<font color="#E5E5E5"> depend on the log in Kafka and we've</font>

195
00:08:59,420 --> 00:09:03,889
got two<font color="#E5E5E5"> consumers so this can't be</font>

196
00:09:01,220 --> 00:09:07,459
disconnected they have to be able to

197
00:09:03,889 --> 00:09:11,360
<font color="#E5E5E5">keep writing and reading and the data</font>

198
00:09:07,459 --> 00:09:13,279
<font color="#E5E5E5">that is in topic</font><font color="#CCCCCC"> 1 mustn't</font><font color="#E5E5E5"> be moved to</font>

199
00:09:11,360 --> 00:09:16,279
the cluster B because otherwise

200
00:09:13,279 --> 00:09:18,649
everything will<font color="#CCCCCC"> slow down well</font><font color="#E5E5E5"> we decide</font>

201
00:09:16,279 --> 00:09:20,930
<font color="#E5E5E5">to create a timeline we consider the</font>

202
00:09:18,649 --> 00:09:22,519
topic<font color="#CCCCCC"> one is the first timeline</font><font color="#E5E5E5"> and we</font>

203
00:09:20,930 --> 00:09:25,579
say well for<font color="#E5E5E5"> this event I</font><font color="#CCCCCC"> am creating a</font>

204
00:09:22,519 --> 00:09:28,069
<font color="#CCCCCC">new timeline back there you we create a</font>

205
00:09:25,579 --> 00:09:30,469
topic<font color="#E5E5E5"> a different topic</font><font color="#CCCCCC"> in the other</font>

206
00:09:28,069 --> 00:09:33,380
cluster<font color="#E5E5E5"> and of course</font><font color="#CCCCCC"> Naqada keeps track</font>

207
00:09:30,470 --> 00:09:38,269
of<font color="#CCCCCC"> the end of the first term line which</font>

208
00:09:33,380 --> 00:09:40,610
was offset<font color="#CCCCCC"> v and immediately</font><font color="#E5E5E5"> the</font>

209
00:09:38,269 --> 00:09:43,399
producer is connected to<font color="#E5E5E5"> the other topic</font>

210
00:09:40,610 --> 00:09:45,620
and he's publishing<font color="#CCCCCC"> to the new topic</font><font color="#E5E5E5"> and</font>

211
00:09:43,399 --> 00:09:48,079
the consumers<font color="#E5E5E5"> there are still catching</font>

212
00:09:45,620 --> 00:09:51,560
<font color="#E5E5E5">up so they're behind with the the out of</font>

213
00:09:48,079 --> 00:09:55,040
it eventually<font color="#CCCCCC"> some</font><font color="#E5E5E5"> consumers will be</font>

214
00:09:51,560 --> 00:09:57,768
reading from<font color="#E5E5E5"> the new topic others will</font>

215
00:09:55,040 --> 00:09:58,189
<font color="#CCCCCC">be reading still from the old one that's</font>

216
00:09:57,769 --> 00:10:00,110
fine

217
00:09:58,190 --> 00:10:04,579
at some point everyone will have caught

218
00:10:00,110 --> 00:10:06,500
up<font color="#CCCCCC"> okay and because these these topics</font>

219
00:10:04,579 --> 00:10:08,209
they have a<font color="#E5E5E5"> retention time that is set</font>

220
00:10:06,500 --> 00:10:10,600
we send it<font color="#E5E5E5"> to</font><font color="#CCCCCC"> four days but</font><font color="#E5E5E5"> you can set</font>

221
00:10:08,209 --> 00:10:13,160
it to of course<font color="#E5E5E5"> however long you want</font>

222
00:10:10,600 --> 00:10:14,600
eventually the data in the first topic

223
00:10:13,160 --> 00:10:17,329
in the first timeline will disappear

224
00:10:14,600 --> 00:10:19,940
it's gone<font color="#CCCCCC"> so at that</font><font color="#E5E5E5"> point you can</font><font color="#CCCCCC"> just</font>

225
00:10:17,329 --> 00:10:22,130
delete the<font color="#E5E5E5"> old topic and everyone is</font>

226
00:10:19,940 --> 00:10:26,630
<font color="#CCCCCC">writing to</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> and reading from your new</font>

227
00:10:22,130 --> 00:10:30,560
topic a new timeline using<font color="#CCCCCC"> this you can</font>

228
00:10:26,630 --> 00:10:33,949
<font color="#E5E5E5">move the data but</font><font color="#CCCCCC"> you don't move the</font>

229
00:10:30,560 --> 00:10:35,779
<font color="#E5E5E5">data but you</font><font color="#CCCCCC"> move your event type from</font>

230
00:10:33,949 --> 00:10:37,849
one cluster<font color="#E5E5E5"> to another so</font><font color="#CCCCCC"> we've done</font>

231
00:10:35,779 --> 00:10:39,470
<font color="#CCCCCC">that that's fine</font><font color="#E5E5E5"> the producers haven't</font>

232
00:10:37,850 --> 00:10:42,850
noticed<font color="#E5E5E5"> because</font><font color="#CCCCCC"> they kept writing</font><font color="#E5E5E5"> all</font>

233
00:10:39,470 --> 00:10:45,139
the<font color="#E5E5E5"> time no problem so that's fine</font>

234
00:10:42,850 --> 00:10:47,180
no consumers are happy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> because they</font>

235
00:10:45,139 --> 00:10:49,250
kept consuming<font color="#E5E5E5"> just</font><font color="#CCCCCC"> a lil</font><font color="#E5E5E5"> bit of slow</font>

236
00:10:47,180 --> 00:10:53,599
down<font color="#E5E5E5"> at some</font><font color="#CCCCCC"> point for some blocking in</font>

237
00:10:49,250 --> 00:10:54,319
<font color="#E5E5E5">synchronization but that's it and data</font>

238
00:10:53,600 --> 00:10:56,060
hasn't<font color="#E5E5E5"> moved</font>

239
00:10:54,319 --> 00:10:59,939
so<font color="#CCCCCC"> NACADA hasn't been</font><font color="#E5E5E5"> slow</font>

240
00:10:56,060 --> 00:11:03,959
the first time we use this feature<font color="#E5E5E5"> we</font>

241
00:10:59,940 --> 00:11:05,970
need it<font color="#E5E5E5"> for a specific event</font><font color="#CCCCCC"> a much</font>

242
00:11:03,960 --> 00:11:08,430
bigger<font color="#E5E5E5"> Kafka cluster than the one we had</font>

243
00:11:05,970 --> 00:11:11,970
we needed it to<font color="#CCCCCC"> be three four</font><font color="#E5E5E5"> times</font>

244
00:11:08,430 --> 00:11:13,800
<font color="#E5E5E5">bigger we could have added more brokers</font>

245
00:11:11,970 --> 00:11:16,860
to our cluster don't know one week

246
00:11:13,800 --> 00:11:19,189
<font color="#CCCCCC">rebalance have everyone complained for</font><font color="#E5E5E5"> a</font>

247
00:11:16,860 --> 00:11:20,970
week<font color="#E5E5E5"> and then at the</font><font color="#CCCCCC"> end of the</font><font color="#E5E5E5"> event</font>

248
00:11:19,190 --> 00:11:22,710
<font color="#E5E5E5">done the same thing</font>

249
00:11:20,970 --> 00:11:25,470
rebalance everything back to you<font color="#E5E5E5"> only</font><font color="#CCCCCC"> a</font>

250
00:11:22,710 --> 00:11:29,370
few<font color="#CCCCCC"> of the brokers another week of</font>

251
00:11:25,470 --> 00:11:31,500
<font color="#E5E5E5">complaining and</font><font color="#CCCCCC"> and remove the the</font>

252
00:11:29,370 --> 00:11:32,940
brokers<font color="#E5E5E5"> a second</font><font color="#CCCCCC"> planing but their</font><font color="#E5E5E5"> right</font>

253
00:11:31,500 --> 00:11:35,520
to<font color="#E5E5E5"> complain well if it's slow its slow</font>

254
00:11:32,940 --> 00:11:38,100
it's a problem so what we<font color="#E5E5E5"> did is we</font>

255
00:11:35,520 --> 00:11:40,140
<font color="#E5E5E5">created a new cluster that was bigger we</font>

256
00:11:38,100 --> 00:11:41,820
create timelines for every<font color="#E5E5E5"> single</font><font color="#CCCCCC"> event</font>

257
00:11:40,140 --> 00:11:45,060
type that we had we have over<font color="#CCCCCC"> two</font>

258
00:11:41,820 --> 00:11:47,610
<font color="#CCCCCC">thousand and everyone immediately</font>

259
00:11:45,060 --> 00:11:50,489
<font color="#E5E5E5">started using the second cluster and</font>

260
00:11:47,610 --> 00:11:52,140
then what did we<font color="#E5E5E5"> do wait it we left the</font>

261
00:11:50,490 --> 00:11:53,910
<font color="#CCCCCC">old one</font><font color="#E5E5E5"> still there because we knew</font>

262
00:11:52,140 --> 00:11:58,050
we'll have to go back to it<font color="#CCCCCC"> after the</font>

263
00:11:53,910 --> 00:12:00,630
event again<font color="#E5E5E5"> timelines for everyone back</font>

264
00:11:58,050 --> 00:12:01,560
to the old cluster<font color="#E5E5E5"> and when the the</font><font color="#CCCCCC"> big</font>

265
00:12:00,630 --> 00:12:04,290
one was empty

266
00:12:01,560 --> 00:12:07,170
<font color="#E5E5E5">the event was</font><font color="#CCCCCC"> past</font><font color="#E5E5E5"> we could just get</font><font color="#CCCCCC"> rid</font>

267
00:12:04,290 --> 00:12:08,880
<font color="#E5E5E5">of it very easy so that's our</font><font color="#CCCCCC"> first use</font>

268
00:12:07,170 --> 00:12:10,650
<font color="#E5E5E5">of</font><font color="#CCCCCC"> timelines or second use of</font><font color="#E5E5E5"> timelines</font>

269
00:12:08,880 --> 00:12:12,540
<font color="#E5E5E5">we're working on this right now</font><font color="#CCCCCC"> so</font>

270
00:12:10,650 --> 00:12:13,920
<font color="#CCCCCC">feature that's coming up it well you can</font>

271
00:12:12,540 --> 00:12:15,900
<font color="#E5E5E5">use terminals to repartition</font>

272
00:12:13,920 --> 00:12:17,459
<font color="#E5E5E5">a topic</font><font color="#CCCCCC"> if you want more</font><font color="#E5E5E5"> throughput as I</font>

273
00:12:15,900 --> 00:12:19,410
said in the<font color="#CCCCCC"> beginning</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> want more</font>

274
00:12:17,460 --> 00:12:21,060
partitions<font color="#E5E5E5"> now it's got a bunch of</font>

275
00:12:19,410 --> 00:12:23,370
problems<font color="#E5E5E5"> but essentially you could use</font>

276
00:12:21,060 --> 00:12:25,709
<font color="#E5E5E5">timelines create a new</font><font color="#CCCCCC"> topic that</font><font color="#E5E5E5"> has</font>

277
00:12:23,370 --> 00:12:32,820
more partitions<font color="#E5E5E5"> and because we have a</font>

278
00:12:25,710 --> 00:12:35,130
very<font color="#E5E5E5"> nice consumption API you will</font>

279
00:12:32,820 --> 00:12:36,780
actually<font color="#E5E5E5"> the consumers will also get the</font>

280
00:12:35,130 --> 00:12:39,990
data from<font color="#E5E5E5"> all the new partitions</font><font color="#CCCCCC"> that</font>

281
00:12:36,780 --> 00:12:42,030
didn't<font color="#CCCCCC"> even know existed immediately</font><font color="#E5E5E5"> and</font>

282
00:12:39,990 --> 00:12:43,050
we benefit<font color="#CCCCCC"> from all the locking and</font>

283
00:12:42,030 --> 00:12:44,790
synchronization we have already

284
00:12:43,050 --> 00:12:47,189
<font color="#CCCCCC">implemented in timelines</font><font color="#E5E5E5"> so that's</font>

285
00:12:44,790 --> 00:12:51,630
really<font color="#E5E5E5"> nice another thing we can do with</font>

286
00:12:47,190 --> 00:12:54,530
timelines is well actually who says we

287
00:12:51,630 --> 00:12:56,820
need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have only Kafka any</font><font color="#CCCCCC"> pub/sub</font>

288
00:12:54,530 --> 00:12:59,490
model that works in the same way could

289
00:12:56,820 --> 00:13:01,110
work potentially<font color="#E5E5E5"> and by the way who said</font>

290
00:12:59,490 --> 00:13:02,430
we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have a single cluster we</font><font color="#CCCCCC"> can</font>

291
00:13:01,110 --> 00:13:04,260
have several ones and configure<font color="#E5E5E5"> them</font>

292
00:13:02,430 --> 00:13:05,849
differently<font color="#E5E5E5"> depending our users</font>

293
00:13:04,260 --> 00:13:09,360
requirements<font color="#E5E5E5"> and we</font>

294
00:13:05,850 --> 00:13:11,190
move the event types from one cluster<font color="#E5E5E5"> to</font>

295
00:13:09,360 --> 00:13:13,680
<font color="#CCCCCC">another depending on changing</font>

296
00:13:11,190 --> 00:13:17,069
requirements from user which happens

297
00:13:13,680 --> 00:13:20,279
actually<font color="#E5E5E5"> quite a lot so that's it for</font>

298
00:13:17,069 --> 00:13:22,769
<font color="#E5E5E5">timelines</font><font color="#CCCCCC"> Naqada you can find it online</font>

299
00:13:20,279 --> 00:13:24,269
the first<font color="#E5E5E5"> link is</font><font color="#CCCCCC"> mccurdy itself it's</font>

300
00:13:22,769 --> 00:13:26,880
written in Java<font color="#CCCCCC"> it's a spring wheat</font>

301
00:13:24,269 --> 00:13:31,680
application there's all you need to get

302
00:13:26,880 --> 00:13:33,779
<font color="#E5E5E5">started</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> docker images and only one</font>

303
00:13:31,680 --> 00:13:36,089
second link<font color="#E5E5E5"> is an ecosystem we try to</font>

304
00:13:33,779 --> 00:13:37,889
create around<font color="#CCCCCC"> riccati there's a bunch of</font>

305
00:13:36,089 --> 00:13:41,339
client<font color="#CCCCCC"> libraries there's some for Scala</font>

306
00:13:37,889 --> 00:13:43,920
<font color="#E5E5E5">several ones for Java there's a Python</font>

307
00:13:41,339 --> 00:13:47,220
one and I<font color="#E5E5E5"> think there's a go one that's</font>

308
00:13:43,920 --> 00:13:49,110
coming<font color="#E5E5E5"> up at some point we have a web UI</font>

309
00:13:47,220 --> 00:13:49,829
which isn't<font color="#CCCCCC"> open-source yet but we're</font>

310
00:13:49,110 --> 00:13:52,410
working<font color="#E5E5E5"> on it</font>

311
00:13:49,829 --> 00:13:55,319
so you can like see things it's really

312
00:13:52,410 --> 00:14:03,930
really nice<font color="#E5E5E5"> and waiting</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> your</font>

313
00:13:55,319 --> 00:14:06,120
contributions<font color="#CCCCCC"> thank you so we have time</font>

314
00:14:03,930 --> 00:14:08,359
for one<font color="#CCCCCC"> or two</font><font color="#E5E5E5"> questions so</font><font color="#CCCCCC"> if anyone</font>

315
00:14:06,120 --> 00:14:08,360
<font color="#CCCCCC">has a question</font>

316
00:14:20,100 --> 00:14:26,190
any features<font color="#CCCCCC"> that we lose by using naka</font>

317
00:14:22,529 --> 00:14:27,649
<font color="#CCCCCC">D and not Kafka directly yes so one</font>

318
00:14:26,190 --> 00:14:31,560
thing we're<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on at the moment is</font>

319
00:14:27,649 --> 00:14:34,070
<font color="#E5E5E5">log compaction in Kafka unfortunately</font>

320
00:14:31,560 --> 00:14:37,199
doesn't<font color="#E5E5E5"> play well</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> timelines because</font>

321
00:14:34,070 --> 00:14:40,320
you have to somehow we feed the data

322
00:14:37,200 --> 00:14:41,850
from the<font color="#E5E5E5"> old topic to</font><font color="#CCCCCC"> the new one</font><font color="#E5E5E5"> so</font>

323
00:14:40,320 --> 00:14:44,579
what<font color="#E5E5E5"> we're working on a solution for</font>

324
00:14:41,850 --> 00:14:49,880
that<font color="#E5E5E5"> but at the moment you wouldn't be</font>

325
00:14:44,579 --> 00:14:49,880
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use it this</font><font color="#CCCCCC"> is one example yes</font>

326
00:14:51,500 --> 00:15:00,630
sorry we don't<font color="#CCCCCC"> have immediate</font><font color="#E5E5E5"> plans</font><font color="#CCCCCC"> to</font>

327
00:14:58,470 --> 00:15:03,990
do it but it's a possibility<font color="#CCCCCC"> yeah that</font>

328
00:15:00,630 --> 00:15:05,910
could work<font color="#E5E5E5"> sir oh yeah obviously are you</font>

329
00:15:03,990 --> 00:15:08,910
going to<font color="#E5E5E5"> support Kinesis as a as a</font>

330
00:15:05,910 --> 00:15:10,199
<font color="#E5E5E5">back-end so you mean like yeah yeah yeah</font>

331
00:15:08,910 --> 00:15:12,390
<font color="#CCCCCC">we thought</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> it</font>

332
00:15:10,200 --> 00:15:14,250
actually someone implemented some proof

333
00:15:12,390 --> 00:15:16,410
of concept so it's<font color="#E5E5E5"> possible but it's not</font>

334
00:15:14,250 --> 00:15:24,350
<font color="#E5E5E5">production ready yet</font><font color="#CCCCCC"> do you want to</font>

335
00:15:16,410 --> 00:15:24,350
contribute<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> okay thank you</font>

336
00:15:27,770 --> 00:15:32,370
it's stateless

337
00:15:29,370 --> 00:15:34,260
yeah it's stateless<font color="#E5E5E5"> we use it in</font><font color="#CCCCCC"> we're</font>

338
00:15:32,370 --> 00:15:36,410
<font color="#E5E5E5">running on AWS and we use auto scaling</font>

339
00:15:34,260 --> 00:15:39,319
groups and it just changes all the<font color="#E5E5E5"> time</font>

340
00:15:36,410 --> 00:15:42,380
<font color="#E5E5E5">okay okay I guess time is up all right</font>

341
00:15:39,320 --> 00:15:42,380
thank you

