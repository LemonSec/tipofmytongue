1
00:00:12,879 --> 00:00:19,460
sorry<font color="#E5E5E5"> yeah that's okay thank you so we</font>

2
00:00:17,390 --> 00:00:22,400
talked a bit about VPP<font color="#E5E5E5"> this morning's</font>

3
00:00:19,460 --> 00:00:24,860
<font color="#E5E5E5">but but I realize many people here may</font>

4
00:00:22,400 --> 00:00:27,259
not<font color="#E5E5E5"> know</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> DPP so let me</font>

5
00:00:24,860 --> 00:00:32,238
calibrate my<font color="#E5E5E5"> presentation who in the</font>

6
00:00:27,260 --> 00:00:34,489
<font color="#CCCCCC">room knows about VPP</font><font color="#E5E5E5"> okay so some of you</font>

7
00:00:32,238 --> 00:00:39,949
know<font color="#E5E5E5"> but not everybody so I can what I</font>

8
00:00:34,489 --> 00:00:44,180
can do is I can<font color="#E5E5E5"> I can share a few slides</font>

9
00:00:39,950 --> 00:00:47,720
about<font color="#E5E5E5"> what VPP is and then while while</font>

10
00:00:44,180 --> 00:00:51,050
<font color="#CCCCCC">gel gaps was talking I did set up a</font>

11
00:00:47,720 --> 00:00:53,180
quick container demo using using VPP<font color="#E5E5E5"> so</font>

12
00:00:51,050 --> 00:00:55,250
<font color="#E5E5E5">perhaps I will be</font><font color="#CCCCCC"> here and it's very</font>

13
00:00:53,180 --> 00:00:59,420
risky<font color="#E5E5E5"> because I just did it now so we'll</font>

14
00:00:55,250 --> 00:01:01,760
<font color="#E5E5E5">see and maybe we'll have one</font><font color="#CCCCCC"> of those a</font>

15
00:00:59,420 --> 00:01:04,449
demo effect<font color="#E5E5E5"> and then I will share with</font>

16
00:01:01,760 --> 00:01:06,908
you slides<font color="#E5E5E5"> explaining our VPP is</font>

17
00:01:04,449 --> 00:01:11,390
integrated into OpenStack with<font color="#E5E5E5"> ease</font>

18
00:01:06,909 --> 00:01:17,900
<font color="#E5E5E5">networking VPP ml</font><font color="#CCCCCC"> to driver okay</font><font color="#E5E5E5"> so let</font>

19
00:01:11,390 --> 00:01:21,369
me share few slides first<font color="#E5E5E5"> quickly and</font>

20
00:01:17,900 --> 00:01:25,490
then we'll go into<font color="#E5E5E5"> the demo</font>

21
00:01:21,369 --> 00:01:26,119
okay so<font color="#E5E5E5"> VP P stands for vector packet</font>

22
00:01:25,490 --> 00:01:28,130
processing

23
00:01:26,119 --> 00:01:30,860
<font color="#E5E5E5">it's a project it's an</font><font color="#CCCCCC"> open-source</font>

24
00:01:28,130 --> 00:01:32,960
<font color="#CCCCCC">project</font><font color="#E5E5E5"> and the Linux Foundation and it</font>

25
00:01:30,860 --> 00:01:35,240
<font color="#CCCCCC">actually it is a curie under another</font>

26
00:01:32,960 --> 00:01:38,149
<font color="#E5E5E5">umbrella project which is</font><font color="#CCCCCC"> FD dot io</font>

27
00:01:35,240 --> 00:01:40,220
which stands<font color="#E5E5E5"> for fast</font><font color="#CCCCCC"> dot a dot io VPP</font>

28
00:01:38,150 --> 00:01:42,530
<font color="#E5E5E5">is a software</font><font color="#CCCCCC"> that does packet</font>

29
00:01:40,220 --> 00:01:44,840
processing<font color="#E5E5E5"> what that means is that reads</font>

30
00:01:42,530 --> 00:01:47,420
packet and forward them<font color="#E5E5E5"> and modify them</font>

31
00:01:44,840 --> 00:01:49,610
and<font color="#CCCCCC"> follow-up them again so this kind of</font>

32
00:01:47,420 --> 00:01:51,409
<font color="#CCCCCC">of thing which</font><font color="#E5E5E5"> is usually done in Linux</font>

33
00:01:49,610 --> 00:01:53,840
kernel<font color="#CCCCCC"> or in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> of packet forwarding</font>

34
00:01:51,409 --> 00:01:56,840
or in our way right<font color="#CCCCCC"> so it's a</font><font color="#E5E5E5"> software</font>

35
00:01:53,840 --> 00:01:59,900
implementation<font color="#E5E5E5"> usually it works on DP DK</font>

36
00:01:56,840 --> 00:02:04,240
<font color="#E5E5E5">but then you have also I net packet I</font>

37
00:01:59,900 --> 00:02:07,490
use<font color="#CCCCCC"> that on</font><font color="#E5E5E5"> top of which it concedes and</font>

38
00:02:04,240 --> 00:02:11,150
this<font color="#CCCCCC"> project sits here in</font><font color="#E5E5E5"> the in the</font>

39
00:02:07,490 --> 00:02:13,549
<font color="#CCCCCC">intern stack so this morning charge</font><font color="#E5E5E5"> was</font>

40
00:02:11,150 --> 00:02:15,770
talking about<font color="#CCCCCC"> opendaylight which is here</font>

41
00:02:13,550 --> 00:02:17,620
<font color="#CCCCCC">I guess later in the afternoon the</font><font color="#E5E5E5"> days</font>

42
00:02:15,770 --> 00:02:20,769
there will<font color="#E5E5E5"> be a</font><font color="#CCCCCC"> presentation about</font><font color="#E5E5E5"> Oh</font>

43
00:02:17,620 --> 00:02:22,000
infe so<font color="#E5E5E5"> VPP is really low layer right</font>

44
00:02:20,769 --> 00:02:24,310
the<font color="#E5E5E5"> single reading packet forwarding</font>

45
00:02:22,000 --> 00:02:27,540
packet and<font color="#E5E5E5"> the thing which needs</font><font color="#CCCCCC"> to be</font>

46
00:02:24,310 --> 00:02:27,540
really really<font color="#CCCCCC"> fast</font>

47
00:02:28,650 --> 00:02:34,780
so this<font color="#E5E5E5"> Fido project is actually</font><font color="#CCCCCC"> a</font>

48
00:02:32,500 --> 00:02:37,150
<font color="#CCCCCC">multi-party project with many</font><font color="#E5E5E5"> people</font>

49
00:02:34,780 --> 00:02:41,549
<font color="#E5E5E5">coming from many companies complete</font>

50
00:02:37,150 --> 00:02:44,110
<font color="#E5E5E5">contributing so we see</font><font color="#CCCCCC"> people from Intel</font>

51
00:02:41,549 --> 00:02:47,079
<font color="#CCCCCC">Ericsson so many many companies are</font>

52
00:02:44,110 --> 00:02:49,989
actually contributors<font color="#E5E5E5"> and it's a very</font>

53
00:02:47,079 --> 00:02:52,930
active<font color="#E5E5E5"> project right so here it's</font><font color="#CCCCCC"> I I</font>

54
00:02:49,989 --> 00:02:55,720
won't go into the details but<font color="#CCCCCC"> basically</font>

55
00:02:52,930 --> 00:02:59,260
I took<font color="#E5E5E5"> a free project in the same domain</font>

56
00:02:55,720 --> 00:03:01,030
so VSD<font color="#E5E5E5"> PDK</font><font color="#CCCCCC"> and VPP and</font><font color="#E5E5E5"> try to to show</font>

57
00:02:59,260 --> 00:03:06,099
the number<font color="#E5E5E5"> of commits so it's it's it's</font>

58
00:03:01,030 --> 00:03:07,780
<font color="#E5E5E5">a very active project</font><font color="#CCCCCC"> you have many</font>

59
00:03:06,099 --> 00:03:11,500
<font color="#E5E5E5">components but on that I will go quickly</font>

60
00:03:07,780 --> 00:03:12,930
<font color="#CCCCCC">so that's the</font><font color="#E5E5E5"> thing I like well that</font><font color="#CCCCCC"> I</font>

61
00:03:11,500 --> 00:03:16,569
<font color="#E5E5E5">will go quickly</font>

62
00:03:12,930 --> 00:03:23,650
why is VPP fast<font color="#CCCCCC"> and what is what is that</font>

63
00:03:16,569 --> 00:03:26,560
<font color="#CCCCCC">really okay so what DPP does is it it</font>

64
00:03:23,650 --> 00:03:28,540
<font color="#E5E5E5">hit packets and forward them so that</font>

65
00:03:26,560 --> 00:03:30,970
does layer 2 layer<font color="#E5E5E5"> 3 and now we also</font>

66
00:03:28,540 --> 00:03:34,328
have layer 4 what is extremely important

67
00:03:30,970 --> 00:03:35,980
<font color="#E5E5E5">to understand is</font><font color="#CCCCCC"> the secret sauce of EPP</font>

68
00:03:34,329 --> 00:03:39,400
<font color="#CCCCCC">and don't tell it</font><font color="#E5E5E5"> because it's a</font><font color="#CCCCCC"> secret</font>

69
00:03:35,980 --> 00:03:42,970
sauce<font color="#CCCCCC"> it's it works with vectors of</font>

70
00:03:39,400 --> 00:03:45,700
<font color="#E5E5E5">packets in order to make the best use of</font>

71
00:03:42,970 --> 00:03:48,790
instead<font color="#E5E5E5"> instruction cache as well as</font>

72
00:03:45,700 --> 00:03:51,310
data cache<font color="#E5E5E5"> right so what we do is when</font>

73
00:03:48,790 --> 00:03:52,989
we<font color="#CCCCCC"> have to process</font><font color="#E5E5E5"> a packet we go</font>

74
00:03:51,310 --> 00:03:55,299
<font color="#E5E5E5">through save all nodes so for instance</font>

75
00:03:52,989 --> 00:03:57,190
we<font color="#E5E5E5"> can read packet from</font><font color="#CCCCCC"> GP DK</font><font color="#E5E5E5"> and then</font>

76
00:03:55,299 --> 00:03:59,650
we'll get<font color="#E5E5E5"> a bunch of packet from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> PDK</font>

77
00:03:57,190 --> 00:04:02,620
there will be<font color="#E5E5E5"> processed at a tannic</font>

78
00:03:59,650 --> 00:04:05,079
level and then we perhaps<font color="#E5E5E5"> will do ipv6</font>

79
00:04:02,620 --> 00:04:06,849
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right before we do a lookup and then</font>

80
00:04:05,079 --> 00:04:09,250
<font color="#CCCCCC">we'll forward</font><font color="#E5E5E5"> it right so we have</font>

81
00:04:06,849 --> 00:04:13,328
several steps<font color="#E5E5E5"> right if you look at the</font>

82
00:04:09,250 --> 00:04:16,149
<font color="#E5E5E5">usual cut data path</font><font color="#CCCCCC"> as usual code for</font>

83
00:04:13,329 --> 00:04:17,918
data<font color="#E5E5E5"> path it's actually 13</font><font color="#CCCCCC"> all right so</font>

84
00:04:16,149 --> 00:04:20,260
you have<font color="#E5E5E5"> a lot of instructions to do</font>

85
00:04:17,918 --> 00:04:22,240
because forwarding<font color="#E5E5E5"> packet is not that</font>

86
00:04:20,260 --> 00:04:24,580
simple<font color="#CCCCCC"> you may have to do a calls you</font>

87
00:04:22,240 --> 00:04:26,169
may have to do it<font color="#E5E5E5"> not not or not you may</font>

88
00:04:24,580 --> 00:04:28,539
have to do many many things<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so</font>

89
00:04:26,169 --> 00:04:30,789
it's a lot of<font color="#E5E5E5"> lines of code and what</font>

90
00:04:28,539 --> 00:04:31,460
what we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> trying to do is to make sure</font>

91
00:04:30,789 --> 00:04:33,919
<font color="#CCCCCC">that</font>

92
00:04:31,460 --> 00:04:36,109
<font color="#CCCCCC">we execute an instruction to process a</font>

93
00:04:33,919 --> 00:04:39,799
packet this instruction is<font color="#E5E5E5"> actually in</font>

94
00:04:36,110 --> 00:04:42,620
the cache of<font color="#CCCCCC"> the CPU so how can we do</font>

95
00:04:39,800 --> 00:04:45,560
that<font color="#E5E5E5"> either we increase the instruction</font>

96
00:04:42,620 --> 00:04:48,710
cache size and I guess our friends from

97
00:04:45,560 --> 00:04:50,569
from<font color="#CCCCCC"> Intel's are all</font><font color="#E5E5E5"> doing that but what</font>

98
00:04:48,710 --> 00:04:53,090
we can do as well<font color="#E5E5E5"> is try to be smarter</font>

99
00:04:50,569 --> 00:04:56,930
in writing our software and instead<font color="#E5E5E5"> of</font>

100
00:04:53,090 --> 00:04:59,719
<font color="#CCCCCC">executing the full data processing the</font>

101
00:04:56,930 --> 00:05:02,150
full code for every packet<font color="#E5E5E5"> and coming</font>

102
00:04:59,720 --> 00:05:04,759
back again<font color="#CCCCCC"> what we can do is have</font><font color="#E5E5E5"> small</font>

103
00:05:02,150 --> 00:05:07,940
portions of code that are<font color="#E5E5E5"> and that are</font>

104
00:05:04,759 --> 00:05:09,650
applied to<font color="#CCCCCC"> a bunch</font><font color="#E5E5E5"> of packets so this</font>

105
00:05:07,940 --> 00:05:11,690
bunch of packet is actually called a

106
00:05:09,650 --> 00:05:14,359
<font color="#CCCCCC">vector and what we will do is we will</font>

107
00:05:11,690 --> 00:05:17,810
<font color="#E5E5E5">execute a limited number of lines of</font>

108
00:05:14,360 --> 00:05:20,599
<font color="#E5E5E5">code on this bunch of packet so with</font>

109
00:05:17,810 --> 00:05:24,650
that we make<font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> the code is</font>

110
00:05:20,599 --> 00:05:27,320
always<font color="#E5E5E5"> or 99% of the case the code is in</font>

111
00:05:24,650 --> 00:05:30,169
the<font color="#E5E5E5"> cache and then all the packets will</font>

112
00:05:27,320 --> 00:05:33,590
take benefit of<font color="#CCCCCC"> that because the</font><font color="#E5E5E5"> penalty</font>

113
00:05:30,169 --> 00:05:34,849
to fetch the<font color="#E5E5E5"> cache the code from central</font>

114
00:05:33,590 --> 00:05:37,099
<font color="#E5E5E5">memory is actually huge</font>

115
00:05:34,849 --> 00:05:39,080
when you<font color="#E5E5E5"> are processing millions of</font>

116
00:05:37,099 --> 00:05:41,570
packet per second<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> very what</font>

117
00:05:39,080 --> 00:05:44,090
VPP is<font color="#E5E5E5"> about so that secret sauce number</font>

118
00:05:41,570 --> 00:05:46,520
one<font color="#E5E5E5"> secret sauce number two is okay</font>

119
00:05:44,090 --> 00:05:48,859
<font color="#E5E5E5">let's</font><font color="#CCCCCC"> assume we are good with our</font><font color="#E5E5E5"> cache</font>

120
00:05:46,520 --> 00:05:50,508
<font color="#E5E5E5">for the instruction we need we now need</font>

121
00:05:48,860 --> 00:05:53,870
to also<font color="#CCCCCC"> to make sure that when we have</font>

122
00:05:50,509 --> 00:05:57,199
<font color="#E5E5E5">we</font><font color="#CCCCCC"> are fetching data to process the core</font>

123
00:05:53,870 --> 00:06:00,590
<font color="#CCCCCC">the packets</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> a data</font><font color="#E5E5E5"> here as well so in</font>

124
00:05:57,199 --> 00:06:03,110
order<font color="#E5E5E5"> to do that we we will process</font>

125
00:06:00,590 --> 00:06:11,270
packets with quad loops<font color="#E5E5E5"> order loops and</font>

126
00:06:03,110 --> 00:06:14,479
<font color="#E5E5E5">I will show you out so this is a very</font>

127
00:06:11,270 --> 00:06:16,008
slow animated slide so I<font color="#CCCCCC"> ate that so you</font>

128
00:06:14,479 --> 00:06:18,770
have your vector of<font color="#E5E5E5"> packet which arrived</font>

129
00:06:16,009 --> 00:06:21,289
from your NIC<font color="#E5E5E5"> card right or any other</font>

130
00:06:18,770 --> 00:06:23,990
thing could be<font color="#E5E5E5"> is who</font><font color="#CCCCCC"> DPD care if you</font>

131
00:06:21,289 --> 00:06:25,699
have a VM<font color="#CCCCCC"> that can come from a via user</font>

132
00:06:23,990 --> 00:06:30,650
interface<font color="#CCCCCC"> that can come from</font><font color="#E5E5E5"> regular</font>

133
00:06:25,699 --> 00:06:32,659
<font color="#E5E5E5">Linux kernel and this vector</font><font color="#CCCCCC"> of packet</font>

134
00:06:30,650 --> 00:06:34,960
will arrive<font color="#CCCCCC"> here and</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> will</font>

135
00:06:32,659 --> 00:06:37,550
process this vector<font color="#E5E5E5"> of packet and</font>

136
00:06:34,960 --> 00:06:39,500
because we always<font color="#E5E5E5"> have the we</font><font color="#CCCCCC"> always</font>

137
00:06:37,550 --> 00:06:44,389
process a vector so let's assume we<font color="#CCCCCC"> are</font>

138
00:06:39,500 --> 00:06:45,180
<font color="#E5E5E5">in this node called ipv6</font><font color="#CCCCCC"> they write</font><font color="#E5E5E5"> when</font>

139
00:06:44,389 --> 00:06:47,610
packets are

140
00:06:45,180 --> 00:06:49,530
<font color="#CCCCCC">Paquette</font><font color="#E5E5E5"> zero is is being processed</font>

141
00:06:47,610 --> 00:06:51,720
probably zakat won't be in the cash

142
00:06:49,530 --> 00:06:53,969
<font color="#E5E5E5">because before that</font><font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> was the</font>

143
00:06:51,720 --> 00:06:56,190
executive a<font color="#E5E5E5"> pv six</font><font color="#CCCCCC"> lookup and before</font>

144
00:06:53,970 --> 00:06:58,680
that he was<font color="#E5E5E5"> executing ipv6 input so</font>

145
00:06:56,190 --> 00:07:01,889
probably when when packet 0 will be

146
00:06:58,680 --> 00:07:04,229
processed<font color="#E5E5E5"> there is a very little</font>

147
00:07:01,889 --> 00:07:07,259
probability to to have<font color="#E5E5E5"> this</font><font color="#CCCCCC"> pass</font><font color="#E5E5E5"> this</font>

148
00:07:04,229 --> 00:07:10,530
the code of ipv6<font color="#E5E5E5"> rewrite in the</font>

149
00:07:07,259 --> 00:07:12,720
instruction cache<font color="#E5E5E5"> but but now the beauty</font>

150
00:07:10,530 --> 00:07:15,599
of this<font color="#E5E5E5"> model is</font><font color="#CCCCCC"> that for packet 1 2</font><font color="#E5E5E5"> & 3</font>

151
00:07:12,720 --> 00:07:17,970
<font color="#E5E5E5">they will</font><font color="#CCCCCC"> all have the benefit of</font><font color="#E5E5E5"> the</font>

152
00:07:15,600 --> 00:07:22,020
town of the<font color="#E5E5E5"> cache warm up which was done</font>

153
00:07:17,970 --> 00:07:25,139
for for<font color="#E5E5E5"> packet 0 so that is really one</font>

154
00:07:22,020 --> 00:07:28,020
thing which<font color="#CCCCCC"> is fundamental in VPP so if</font>

155
00:07:25,139 --> 00:07:30,449
<font color="#CCCCCC">the assessing this</font><font color="#E5E5E5"> graph is slow what</font>

156
00:07:28,020 --> 00:07:33,630
that means is when we<font color="#E5E5E5"> will then come</font>

157
00:07:30,449 --> 00:07:36,449
back to the AF packet input or to the

158
00:07:33,630 --> 00:07:38,729
<font color="#CCCCCC">DPD key input will</font><font color="#E5E5E5"> probably have a lot</font>

159
00:07:36,449 --> 00:07:41,330
<font color="#E5E5E5">of packet waiting to be processed</font><font color="#CCCCCC"> so</font>

160
00:07:38,729 --> 00:07:44,219
<font color="#CCCCCC">what we do in VPP is we tend to measure</font>

161
00:07:41,330 --> 00:07:47,190
<font color="#E5E5E5">what is the vector size</font><font color="#CCCCCC"> so if we have</font>

162
00:07:44,220 --> 00:07:50,729
small vectors<font color="#E5E5E5"> that</font><font color="#CCCCCC"> means that VPP</font><font color="#E5E5E5"> is</font>

163
00:07:47,190 --> 00:07:53,130
<font color="#CCCCCC">doing nothing because it because</font><font color="#E5E5E5"> it's</font>

164
00:07:50,729 --> 00:07:55,380
processing very small vectors and when

165
00:07:53,130 --> 00:07:57,780
VPP<font color="#E5E5E5"> is very very active or when there</font><font color="#CCCCCC"> is</font>

166
00:07:55,380 --> 00:08:00,570
a lot of<font color="#E5E5E5"> packet to be processed then</font>

167
00:07:57,780 --> 00:08:02,219
we'll have<font color="#CCCCCC"> will have wrong vectors so so</font>

168
00:08:00,570 --> 00:08:08,099
the size of vectors is typically<font color="#E5E5E5"> between</font>

169
00:08:02,220 --> 00:08:10,710
1 to 256<font color="#E5E5E5"> and if you have 256 vector size</font>

170
00:08:08,099 --> 00:08:11,250
that<font color="#E5E5E5"> means that your CPU is under high</font>

171
00:08:10,710 --> 00:08:13,710
pressure

172
00:08:11,250 --> 00:08:15,690
if it's if you have small<font color="#E5E5E5"> packets it</font>

173
00:08:13,710 --> 00:08:19,799
means that your CPU is<font color="#CCCCCC"> no is doing</font>

174
00:08:15,690 --> 00:08:25,560
<font color="#E5E5E5">nothing so that is that is what we do</font>

175
00:08:19,800 --> 00:08:27,659
for for to process<font color="#E5E5E5"> packets of course you</font>

176
00:08:25,560 --> 00:08:30,419
may have vectors that do not go<font color="#CCCCCC"> through</font>

177
00:08:27,659 --> 00:08:33,419
<font color="#CCCCCC">the same score the same path</font><font color="#E5E5E5"> in this</font>

178
00:08:30,419 --> 00:08:35,429
graph<font color="#E5E5E5"> like here you have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> packet which</font>

179
00:08:33,419 --> 00:08:37,529
is<font color="#CCCCCC"> a NOC packet of course</font><font color="#E5E5E5"> this packet</font>

180
00:08:35,429 --> 00:08:39,718
<font color="#CCCCCC">will won't go here so we</font><font color="#E5E5E5"> are not saying</font>

181
00:08:37,529 --> 00:08:45,120
that<font color="#E5E5E5"> all packet have to go in the same</font>

182
00:08:39,719 --> 00:08:48,360
path in<font color="#E5E5E5"> this in this graph</font><font color="#CCCCCC"> okay one of</font>

183
00:08:45,120 --> 00:08:52,800
<font color="#CCCCCC">the beauty of</font><font color="#E5E5E5"> this model as well is this</font>

184
00:08:48,360 --> 00:08:55,230
<font color="#CCCCCC">nodes</font><font color="#E5E5E5"> are actually</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> so file right so</font>

185
00:08:52,800 --> 00:08:57,209
it's really easy<font color="#CCCCCC"> to extend if one wants</font>

186
00:08:55,230 --> 00:08:58,190
to<font color="#E5E5E5"> add nodes to do some special</font>

187
00:08:57,209 --> 00:09:00,530
<font color="#E5E5E5">processing</font><font color="#CCCCCC"> Idol</font>

188
00:08:58,190 --> 00:09:02,780
that<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> for for a</font><font color="#CCCCCC"> curls that</font><font color="#E5E5E5"> can be</font>

189
00:09:00,530 --> 00:09:04,430
for<font color="#E5E5E5"> whatever you want it's really easy</font>

190
00:09:02,780 --> 00:09:06,680
to<font color="#E5E5E5"> extend you just have to write a note</font>

191
00:09:04,430 --> 00:09:08,900
here<font color="#CCCCCC"> you do</font><font color="#E5E5E5"> not modify the rest of the</font>

192
00:09:06,680 --> 00:09:11,060
code so<font color="#CCCCCC"> you can localize of your</font>

193
00:09:08,900 --> 00:09:13,130
<font color="#E5E5E5">specific plug-in that can be open source</font>

194
00:09:11,060 --> 00:09:15,560
or even<font color="#E5E5E5"> close to us you do whatever you</font>

195
00:09:13,130 --> 00:09:17,000
<font color="#CCCCCC">want to is that you are you</font><font color="#E5E5E5"> have you</font>

196
00:09:15,560 --> 00:09:19,939
have your plugins and<font color="#E5E5E5"> you can extend</font>

197
00:09:17,000 --> 00:09:21,980
this graph at<font color="#CCCCCC"> one time without</font><font color="#E5E5E5"> having</font><font color="#CCCCCC"> to</font>

198
00:09:19,940 --> 00:09:30,890
recompile VPP<font color="#E5E5E5"> so that is something</font>

199
00:09:21,980 --> 00:09:33,530
<font color="#E5E5E5">extremely powerful and you can think</font>

200
00:09:30,890 --> 00:09:36,230
about<font color="#E5E5E5"> our acceleration like we see</font>

201
00:09:33,530 --> 00:09:37,970
<font color="#CCCCCC">people I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> Nick cards which are able</font>

202
00:09:36,230 --> 00:09:41,240
or accelerators<font color="#E5E5E5"> which are able to do</font>

203
00:09:37,970 --> 00:09:43,580
crypto<font color="#CCCCCC"> for instance in that ko or that</font>

204
00:09:41,240 --> 00:09:47,240
can do the first you<font color="#E5E5E5"> know levels of</font>

205
00:09:43,580 --> 00:09:48,860
processing<font color="#E5E5E5"> in this graph</font><font color="#CCCCCC"> so that so of</font>

206
00:09:47,240 --> 00:09:50,630
course<font color="#E5E5E5"> vias chooser</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> they have packet</font>

207
00:09:48,860 --> 00:09:53,450
input<font color="#E5E5E5"> these are software nodes but</font>

208
00:09:50,630 --> 00:09:55,340
nothing for by<font color="#CCCCCC"> forbids you having cards</font>

209
00:09:53,450 --> 00:09:58,670
which will do some<font color="#E5E5E5"> level of processing</font>

210
00:09:55,340 --> 00:10:05,660
<font color="#E5E5E5">and inject packet later in this</font><font color="#CCCCCC"> poly in</font>

211
00:09:58,670 --> 00:10:13,130
this processing graph in<font color="#CCCCCC"> VPP okay that</font>

212
00:10:05,660 --> 00:10:15,709
<font color="#E5E5E5">they will skip numbers</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> I when I say</font>

213
00:10:13,130 --> 00:10:18,140
fast what what do I mean<font color="#CCCCCC"> so just few</font>

214
00:10:15,710 --> 00:10:20,960
<font color="#E5E5E5">grafton and I'm sorry this is a bit</font>

215
00:10:18,140 --> 00:10:23,090
older version<font color="#E5E5E5"> and we can't read anything</font>

216
00:10:20,960 --> 00:10:25,670
resolution is not<font color="#E5E5E5"> good</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> can you</font>

217
00:10:23,090 --> 00:10:29,530
<font color="#E5E5E5">read something no it's it's it's</font>

218
00:10:25,670 --> 00:10:29,530
actually<font color="#E5E5E5"> very odd so trust me</font>

219
00:10:29,830 --> 00:10:41,270
that doesn't work<font color="#E5E5E5"> and I will show a live</font>

220
00:10:39,560 --> 00:10:43,729
demo because slides are good but demo

221
00:10:41,270 --> 00:10:46,090
are better so after that<font color="#E5E5E5"> I prepare kind</font>

222
00:10:43,730 --> 00:10:50,030
of a demo<font color="#CCCCCC"> of risky demo but we'll see</font>

223
00:10:46,090 --> 00:10:54,170
what<font color="#E5E5E5"> is important here is I did a test</font>

224
00:10:50,030 --> 00:10:56,930
with ipv4<font color="#E5E5E5"> and test with ipv6</font><font color="#CCCCCC"> by the way</font>

225
00:10:54,170 --> 00:10:58,610
we have with VPP we have also<font color="#E5E5E5"> testing</font>

226
00:10:56,930 --> 00:11:01,250
infrastructure which is all public you

227
00:10:58,610 --> 00:11:02,750
can it's called<font color="#CCCCCC"> sis it it's in the cloud</font>

228
00:11:01,250 --> 00:11:05,630
you<font color="#CCCCCC"> can connect to it it's under</font><font color="#E5E5E5"> the</font>

229
00:11:02,750 --> 00:11:08,180
Linux Foundation and you can rerun the

230
00:11:05,630 --> 00:11:12,020
test<font color="#CCCCCC"> hit</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> measurement</font><font color="#E5E5E5"> all that is</font>

231
00:11:08,180 --> 00:11:16,219
public so with what is interesting<font color="#CCCCCC"> here</font>

232
00:11:12,020 --> 00:11:19,160
is so we<font color="#E5E5E5"> have ipv4 and we have ipv6</font><font color="#CCCCCC"> and</font>

233
00:11:16,220 --> 00:11:22,430
what we did is we increased number<font color="#CCCCCC"> of</font>

234
00:11:19,160 --> 00:11:24,170
calls<font color="#E5E5E5"> right to do routing</font><font color="#CCCCCC"> what routing</font>

235
00:11:22,430 --> 00:11:26,870
means it it means three<font color="#CCCCCC"> operations</font>

236
00:11:24,170 --> 00:11:28,939
basically<font color="#E5E5E5"> one is receiving packet two is</font>

237
00:11:26,870 --> 00:11:33,280
taking your routing<font color="#E5E5E5"> decision and</font><font color="#CCCCCC"> three</font>

238
00:11:28,940 --> 00:11:38,780
is forwarding the packet right so with

239
00:11:33,280 --> 00:11:40,850
<font color="#E5E5E5">two calls we do like twelve forty forty</font>

240
00:11:38,780 --> 00:11:43,310
<font color="#E5E5E5">twenty twenty four million packet per</font>

241
00:11:40,850 --> 00:11:45,560
second<font color="#CCCCCC"> whatever is packet size</font><font color="#E5E5E5"> right so</font>

242
00:11:43,310 --> 00:11:47,300
that is really good and and and one<font color="#E5E5E5"> of</font>

243
00:11:45,560 --> 00:11:49,550
the beauty of<font color="#E5E5E5"> this model is that when</font>

244
00:11:47,300 --> 00:11:51,800
you are<font color="#E5E5E5"> adding calls yeah you have a</font>

245
00:11:49,550 --> 00:11:53,780
linear<font color="#CCCCCC"> increase of the performance with</font>

246
00:11:51,800 --> 00:11:56,060
a number of course<font color="#E5E5E5"> that's extremely</font>

247
00:11:53,780 --> 00:11:58,880
<font color="#CCCCCC">powerful because</font><font color="#E5E5E5"> we did this test from</font>

248
00:11:56,060 --> 00:12:01,130
<font color="#CCCCCC">two to</font><font color="#E5E5E5"> twenty to thirty six calls and we</font>

249
00:11:58,880 --> 00:12:03,110
see this<font color="#E5E5E5"> line your increase thanks to</font>

250
00:12:01,130 --> 00:12:05,150
this<font color="#CCCCCC"> cache effect that we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> taking so</font>

251
00:12:03,110 --> 00:12:07,760
so that<font color="#E5E5E5"> is really good this is with</font><font color="#CCCCCC"> one</font>

252
00:12:05,150 --> 00:12:11,449
<font color="#CCCCCC">minion ipv4 on trees and we have</font><font color="#E5E5E5"> exactly</font>

253
00:12:07,760 --> 00:12:13,760
same effect with ipv6<font color="#E5E5E5"> where we have we</font>

254
00:12:11,450 --> 00:12:17,750
are<font color="#E5E5E5"> increasing number of</font><font color="#CCCCCC"> calls and we</font>

255
00:12:13,760 --> 00:12:19,640
<font color="#E5E5E5">have the same linear increase right here</font>

256
00:12:17,750 --> 00:12:21,350
it's 24 million<font color="#E5E5E5"> packet passing on and</font>

257
00:12:19,640 --> 00:12:24,560
<font color="#CCCCCC">two</font><font color="#E5E5E5"> cores which means</font><font color="#CCCCCC"> twelve million</font>

258
00:12:21,350 --> 00:12:28,460
<font color="#E5E5E5">packets per second</font><font color="#CCCCCC"> pair cause you seem a</font>

259
00:12:24,560 --> 00:12:30,969
bit sleep<font color="#E5E5E5"> I mean wake up 12 millions</font>

260
00:12:28,460 --> 00:12:35,500
<font color="#CCCCCC">packet per second right</font>

261
00:12:30,970 --> 00:12:38,020
<font color="#CCCCCC">Thank You</font><font color="#E5E5E5"> say wow that's what</font><font color="#CCCCCC"> twelve</font>

262
00:12:35,500 --> 00:12:38,880
million<font color="#CCCCCC"> except recipient of coal while</font>

263
00:12:38,020 --> 00:12:42,280
receiving

264
00:12:38,880 --> 00:12:44,439
<font color="#E5E5E5">routing and and then forwarding if you</font>

265
00:12:42,280 --> 00:12:46,990
do the math that's not a lot<font color="#CCCCCC"> of cycles</font>

266
00:12:44,440 --> 00:12:51,600
per<font color="#E5E5E5"> packet right so that's what we do in</font>

267
00:12:46,990 --> 00:12:51,600
<font color="#E5E5E5">this test and then we did the same for</font>

268
00:12:53,760 --> 00:12:58,120
<font color="#E5E5E5">it sounds like some people are still</font>

269
00:12:56,050 --> 00:13:01,180
doing switching in this world so you

270
00:12:58,120 --> 00:13:03,760
have layer two processing here and with

271
00:13:01,180 --> 00:13:07,630
with the layer to process things<font color="#E5E5E5"> this is</font>

272
00:13:03,760 --> 00:13:11,170
a<font color="#E5E5E5"> twenty</font><font color="#CCCCCC"> minions packet per second taco</font>

273
00:13:07,630 --> 00:13:14,080
with the same linear increase<font color="#E5E5E5"> right so</font>

274
00:13:11,170 --> 00:13:16,540
that is pretty<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> and now it's enough</font>

275
00:13:14,080 --> 00:13:19,110
talking<font color="#E5E5E5"> and forgive me if that doesn't</font>

276
00:13:16,540 --> 00:13:25,089
work<font color="#E5E5E5"> because I just did this demo before</font>

277
00:13:19,110 --> 00:13:28,720
<font color="#E5E5E5">here it is so what I</font><font color="#CCCCCC"> did here is I have</font>

278
00:13:25,090 --> 00:13:32,340
<font color="#E5E5E5">I have two containers with an ipv4</font>

279
00:13:28,720 --> 00:13:36,430
address each ipv4 sorry about that<font color="#E5E5E5"> and</font>

280
00:13:32,340 --> 00:13:38,530
<font color="#E5E5E5">and what I did is I</font><font color="#CCCCCC"> put VPP</font><font color="#E5E5E5"> to connect</font>

281
00:13:36,430 --> 00:13:41,469
those two guys and I<font color="#CCCCCC"> will run</font><font color="#E5E5E5"> an IPF</font>

282
00:13:38,530 --> 00:13:44,770
client and an IPF server<font color="#E5E5E5"> between these</font>

283
00:13:41,470 --> 00:13:48,490
guys right so and then please help<font color="#E5E5E5"> me</font>

284
00:13:44,770 --> 00:13:52,600
praying the user the gods of demo<font color="#CCCCCC"> we'll</font>

285
00:13:48,490 --> 00:13:54,150
see whether that will work<font color="#E5E5E5"> so</font><font color="#CCCCCC"> well where</font>

286
00:13:52,600 --> 00:13:59,560
I'm lost

287
00:13:54,150 --> 00:14:02,560
<font color="#CCCCCC">okay so I</font><font color="#E5E5E5"> puff</font><font color="#CCCCCC"> two regular Linux</font>

288
00:13:59,560 --> 00:14:04,839
containers running<font color="#CCCCCC"> iperf it's it this</font>

289
00:14:02,560 --> 00:14:06,609
this<font color="#E5E5E5"> is not a</font><font color="#CCCCCC"> bare-metal service exactly</font>

290
00:14:04,840 --> 00:14:10,780
actually this is a<font color="#CCCCCC"> vm right so i</font><font color="#E5E5E5"> have</font>

291
00:14:06,610 --> 00:14:13,540
two containers<font color="#E5E5E5"> in a vm</font><font color="#CCCCCC"> okay running in</font><font color="#E5E5E5"> a</font>

292
00:14:10,780 --> 00:14:16,089
<font color="#CCCCCC">vm well if i</font><font color="#E5E5E5"> remember</font><font color="#CCCCCC"> correctly and and</font>

293
00:14:13,540 --> 00:14:19,900
these two<font color="#E5E5E5"> containers can do with with</font><font color="#CCCCCC"> a</font>

294
00:14:16,089 --> 00:14:24,940
regular<font color="#E5E5E5"> TCP connection with VPP in</font>

295
00:14:19,900 --> 00:14:27,610
between like<font color="#CCCCCC"> 1337 gigabit well 36 37</font>

296
00:14:24,940 --> 00:14:30,220
<font color="#CCCCCC">gigabit per second</font><font color="#E5E5E5"> so that's cool</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> I</font>

297
00:14:27,610 --> 00:14:32,650
told<font color="#E5E5E5"> you before what</font><font color="#CCCCCC"> is actually</font>

298
00:14:30,220 --> 00:14:36,580
important is what is<font color="#CCCCCC"> the vector</font><font color="#E5E5E5"> size for</font>

299
00:14:32,650 --> 00:14:40,260
that<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so what is let's</font><font color="#E5E5E5"> have a look</font>

300
00:14:36,580 --> 00:14:44,160
<font color="#CCCCCC">let's have a look at</font><font color="#E5E5E5"> the vector size</font>

301
00:14:40,260 --> 00:14:50,110
sure so we have a<font color="#E5E5E5"> magic command for</font><font color="#CCCCCC"> that</font>

302
00:14:44,160 --> 00:14:52,509
so vector size<font color="#E5E5E5"> so these are the nodes in</font>

303
00:14:50,110 --> 00:14:54,430
the<font color="#CCCCCC"> graph so you remember the graph</font><font color="#E5E5E5"> in</font>

304
00:14:52,509 --> 00:15:01,660
the graph we have the we<font color="#E5E5E5"> have all these</font>

305
00:14:54,430 --> 00:15:06,939
<font color="#CCCCCC">just nodes and vector size is thank you</font>

306
00:15:01,660 --> 00:15:11,800
is 6.90 third<font color="#E5E5E5"> right for this tab</font><font color="#CCCCCC"> zero</font>

307
00:15:06,939 --> 00:15:15,069
output and and<font color="#E5E5E5"> and for the TX as well</font>

308
00:15:11,800 --> 00:15:16,540
what that<font color="#E5E5E5"> means is what that means is</font>

309
00:15:15,069 --> 00:15:20,279
the way<font color="#CCCCCC"> you have to understand that is</font>

310
00:15:16,540 --> 00:15:30,219
if we come back<font color="#E5E5E5"> to this presentation</font>

311
00:15:20,279 --> 00:15:32,860
which was he when effect when<font color="#CCCCCC"> the vector</font>

312
00:15:30,220 --> 00:15:35,379
<font color="#CCCCCC">of packet arrives</font><font color="#E5E5E5"> we typically process</font>

313
00:15:32,860 --> 00:15:39,310
<font color="#E5E5E5">six packets here</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> that the</font><font color="#CCCCCC"> average</font>

314
00:15:35,379 --> 00:15:41,980
we do in order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> process 30 gigabit per</font>

315
00:15:39,310 --> 00:15:46,839
second in regular<font color="#E5E5E5"> Linux kernel which is</font>

316
00:15:41,980 --> 00:15:49,089
<font color="#CCCCCC">fan</font><font color="#E5E5E5"> is at the bottleneck</font><font color="#CCCCCC"> so then when</font>

317
00:15:46,839 --> 00:15:51,550
when we are<font color="#CCCCCC"> only</font><font color="#E5E5E5"> processing six packet</font>

318
00:15:49,089 --> 00:15:56,529
that means VPP is<font color="#E5E5E5"> not the bottleneck</font>

319
00:15:51,550 --> 00:15:59,800
here<font color="#CCCCCC"> what that mean is let's have</font><font color="#E5E5E5"> a look</font>

320
00:15:56,529 --> 00:16:01,000
<font color="#E5E5E5">with the bottleneck then so let me run</font>

321
00:15:59,800 --> 00:16:05,829
again this<font color="#CCCCCC"> iPod</font>

322
00:16:01,000 --> 00:16:07,870
and so I<font color="#E5E5E5"> don't know if you</font><font color="#CCCCCC"> are familiar</font>

323
00:16:05,829 --> 00:16:12,489
with<font color="#CCCCCC"> H</font><font color="#E5E5E5"> top but the</font><font color="#CCCCCC"> Hardys kernel</font>

324
00:16:07,870 --> 00:16:14,170
processing the grain is VPP VPP is in

325
00:16:12,490 --> 00:16:16,870
polling mode so it takes<font color="#E5E5E5"> 100 cell</font>

326
00:16:14,170 --> 00:16:19,719
<font color="#E5E5E5">percent CPU when it has to work right so</font>

327
00:16:16,870 --> 00:16:22,180
<font color="#CCCCCC">in red this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a TCP stack so the TCP</font>

328
00:16:19,720 --> 00:16:30,240
stack is actually<font color="#E5E5E5"> the bottleneck here</font>

329
00:16:22,180 --> 00:16:35,368
and if I stop my traffic<font color="#E5E5E5"> of</font>

330
00:16:30,240 --> 00:16:37,259
now everything is at zero VPP<font color="#E5E5E5"> he does</font>

331
00:16:35,369 --> 00:16:39,689
have this<font color="#CCCCCC"> ko so called</font><font color="#E5E5E5"> adaptive mode</font>

332
00:16:37,259 --> 00:16:41,759
<font color="#E5E5E5">when there is traffic pressure it starts</font>

333
00:16:39,689 --> 00:16:46,618
pouring the packets right<font color="#E5E5E5"> so it's an</font>

334
00:16:41,759 --> 00:16:48,959
<font color="#E5E5E5">active loop but when it when</font><font color="#CCCCCC"> it when</font>

335
00:16:46,619 --> 00:16:50,459
there is no longer<font color="#E5E5E5"> a lot of traffic</font>

336
00:16:48,959 --> 00:16:53,128
<font color="#CCCCCC">clashes</font><font color="#E5E5E5"> and it</font><font color="#CCCCCC"> stopped doing</font><font color="#E5E5E5"> that to</font>

337
00:16:50,459 --> 00:16:54,689
avoid burning one core so<font color="#CCCCCC"> that is what</font>

338
00:16:53,129 --> 00:16:57,449
is VPP but this presentation was

339
00:16:54,689 --> 00:16:59,550
supposed<font color="#E5E5E5"> to be about networking VPP and</font>

340
00:16:57,449 --> 00:17:01,769
<font color="#CCCCCC">I only have 10 minutes so I</font><font color="#E5E5E5"> will what I</font>

341
00:16:59,550 --> 00:17:04,589
will<font color="#E5E5E5"> do now is I will switch to</font><font color="#CCCCCC"> the</font>

342
00:17:01,769 --> 00:17:07,399
other presentation explaining you<font color="#E5E5E5"> how's</font>

343
00:17:04,589 --> 00:17:13,319
that that can be<font color="#CCCCCC"> integrated into</font>

344
00:17:07,398 --> 00:17:23,549
OpenStack because all that is<font color="#CCCCCC"> useless</font><font color="#E5E5E5"> if</font>

345
00:17:13,319 --> 00:17:26,908
that is<font color="#E5E5E5"> not integrated somewhere</font><font color="#CCCCCC"> ok ok</font>

346
00:17:23,549 --> 00:17:29,879
<font color="#E5E5E5">so networking VPP is animal to driver</font>

347
00:17:26,909 --> 00:17:32,450
OpenStack it was primarily<font color="#E5E5E5"> designed to</font>

348
00:17:29,880 --> 00:17:35,190
support<font color="#CCCCCC"> energy</font><font color="#E5E5E5"> right at the beginning</font>

349
00:17:32,450 --> 00:17:38,970
<font color="#E5E5E5">what are</font><font color="#CCCCCC"> the OpenStack features we</font>

350
00:17:35,190 --> 00:17:40,649
support with VPP<font color="#CCCCCC"> VLAN vehicle on the</font><font color="#E5E5E5"> VM</font>

351
00:17:38,970 --> 00:17:42,830
connectivity is only with<font color="#E5E5E5"> via chooser</font>

352
00:17:40,649 --> 00:17:45,750
interface otherwise<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that's too</font><font color="#CCCCCC"> slow</font>

353
00:17:42,830 --> 00:17:48,480
<font color="#CCCCCC">we support many security features</font>

354
00:17:45,750 --> 00:17:50,940
including<font color="#CCCCCC"> say regular</font><font color="#E5E5E5"> OpenStack stuff</font>

355
00:17:48,480 --> 00:17:54,000
such as<font color="#E5E5E5"> security groups but very</font>

356
00:17:50,940 --> 00:17:55,470
advanced stuff such as<font color="#E5E5E5"> JSON web token we</font>

357
00:17:54,000 --> 00:17:59,580
<font color="#CCCCCC">certificates I will show you what that</font>

358
00:17:55,470 --> 00:18:04,190
<font color="#CCCCCC">means</font><font color="#E5E5E5"> and we do layer 2 and layer 3 with</font>

359
00:17:59,580 --> 00:18:08,250
a chair and all those stuffs so

360
00:18:04,190 --> 00:18:09,659
networking VPP<font color="#CCCCCC"> as this architecture</font><font color="#E5E5E5"> it's</font>

361
00:18:08,250 --> 00:18:12,659
<font color="#E5E5E5">at CD centric</font>

362
00:18:09,659 --> 00:18:15,690
what that means is when<font color="#CCCCCC"> you when when</font>

363
00:18:12,659 --> 00:18:18,990
Neutron have to create<font color="#E5E5E5"> a port instead of</font>

364
00:18:15,690 --> 00:18:21,480
communicating<font color="#CCCCCC"> directly ways with</font><font color="#E5E5E5"> the</font>

365
00:18:18,990 --> 00:18:25,470
compute nodes<font color="#CCCCCC"> what it does is it will</font>

366
00:18:21,480 --> 00:18:27,960
put that in<font color="#CCCCCC"> at CD and then the the</font>

367
00:18:25,470 --> 00:18:30,029
compute<font color="#CCCCCC"> node will be whether</font><font color="#E5E5E5"> we will</font>

368
00:18:27,960 --> 00:18:32,460
wake<font color="#CCCCCC"> up and will</font><font color="#E5E5E5"> take into</font><font color="#CCCCCC"> account that</font>

369
00:18:30,029 --> 00:18:34,559
stuff<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> very cool because</font><font color="#E5E5E5"> a</font>

370
00:18:32,460 --> 00:18:36,870
<font color="#E5E5E5">problem with OpenStack in such a</font>

371
00:18:34,559 --> 00:18:39,480
distributed system is you don't know

372
00:18:36,870 --> 00:18:41,820
when a<font color="#E5E5E5"> failure will arrive but a</font><font color="#CCCCCC"> failure</font>

373
00:18:39,480 --> 00:18:42,960
will will arrive at some point and what

374
00:18:41,820 --> 00:18:46,560
we are<font color="#CCCCCC"> doing here is</font>

375
00:18:42,960 --> 00:18:48,630
we are making<font color="#E5E5E5"> sure that</font><font color="#CCCCCC"> when let's</font>

376
00:18:46,560 --> 00:18:51,659
assume<font color="#CCCCCC"> neutron wants to create</font><font color="#E5E5E5"> a port on</font>

377
00:18:48,630 --> 00:18:53,910
<font color="#E5E5E5">this VM</font><font color="#CCCCCC"> okay on this on this compute</font>

378
00:18:51,660 --> 00:18:55,590
node<font color="#CCCCCC"> if this compute node is dead for</font>

379
00:18:53,910 --> 00:18:57,630
some reason<font color="#CCCCCC"> so he</font><font color="#E5E5E5"> booting or whatever</font>

380
00:18:55,590 --> 00:18:59,429
you want when it will restart it will

381
00:18:57,630 --> 00:19:02,390
actually fetch the<font color="#E5E5E5"> states from</font><font color="#CCCCCC"> @cd</font>

382
00:18:59,430 --> 00:19:05,190
<font color="#E5E5E5">instead of</font><font color="#CCCCCC"> hitting that</font><font color="#E5E5E5"> them from from</font>

383
00:19:02,390 --> 00:19:07,530
<font color="#E5E5E5">Neutron so it's kind of intent</font><font color="#CCCCCC"> based</font>

384
00:19:05,190 --> 00:19:11,010
<font color="#E5E5E5">networking if you will because</font><font color="#CCCCCC"> Neutron</font>

385
00:19:07,530 --> 00:19:15,030
is writing its intent the desired<font color="#CCCCCC"> States</font>

386
00:19:11,010 --> 00:19:17,730
in in<font color="#CCCCCC"> at CD and then</font><font color="#E5E5E5"> the compute node</font>

387
00:19:15,030 --> 00:19:22,410
<font color="#E5E5E5">actually reading</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> those desired</font>

388
00:19:17,730 --> 00:19:23,820
<font color="#CCCCCC">States</font><font color="#E5E5E5"> and if the agent so let me show</font>

389
00:19:22,410 --> 00:19:26,790
<font color="#E5E5E5">you what that means</font>

390
00:19:23,820 --> 00:19:28,409
so typically creating a port will go

391
00:19:26,790 --> 00:19:30,870
through<font color="#E5E5E5"> these several steps so first</font>

392
00:19:28,410 --> 00:19:34,740
there is<font color="#CCCCCC"> neutron asking to cater port</font>

393
00:19:30,870 --> 00:19:37,860
then this is<font color="#E5E5E5"> stored in a TV later that</font>

394
00:19:34,740 --> 00:19:39,330
will be understood<font color="#E5E5E5"> by</font><font color="#CCCCCC"> the agent</font><font color="#E5E5E5"> and then</font>

395
00:19:37,860 --> 00:19:41,310
the agent would send the<font color="#CCCCCC"> feedback and</font>

396
00:19:39,330 --> 00:19:45,449
we'll notify<font color="#E5E5E5"> Neutron so that</font><font color="#CCCCCC"> the VM can</font>

397
00:19:41,310 --> 00:19:47,879
<font color="#E5E5E5">be created if for some reasons the agent</font>

398
00:19:45,450 --> 00:19:49,530
cash<font color="#E5E5E5"> what it will do when it when it</font>

399
00:19:47,880 --> 00:19:52,350
<font color="#E5E5E5">will restart it it will do what we</font><font color="#CCCCCC"> call</font>

400
00:19:49,530 --> 00:19:54,960
state reconciliation<font color="#E5E5E5"> what that means is</font>

401
00:19:52,350 --> 00:19:58,080
every object within VPP comes with a

402
00:19:54,960 --> 00:20:00,150
<font color="#E5E5E5">unique ID and when we restart this agent</font>

403
00:19:58,080 --> 00:20:03,570
will actually fetch the state from<font color="#CCCCCC"> from</font>

404
00:20:00,150 --> 00:20:06,570
<font color="#CCCCCC">a CD state</font><font color="#E5E5E5"> in federal</font><font color="#CCCCCC"> states from from</font>

405
00:20:03,570 --> 00:20:08,580
<font color="#CCCCCC">DBP and</font><font color="#E5E5E5"> will reconciliate the</font><font color="#CCCCCC"> d we will</font>

406
00:20:06,570 --> 00:20:11,100
do a<font color="#CCCCCC"> diff between</font><font color="#E5E5E5"> those guys and and</font>

407
00:20:08,580 --> 00:20:14,220
remove states which are useless now<font color="#CCCCCC"> and</font>

408
00:20:11,100 --> 00:20:16,949
include new states which are<font color="#E5E5E5"> required so</font>

409
00:20:14,220 --> 00:20:19,470
<font color="#CCCCCC">that is something interesting also</font>

410
00:20:16,950 --> 00:20:22,140
<font color="#CCCCCC">interesting thing is it's very much a 3d</font>

411
00:20:19,470 --> 00:20:26,460
centric which means that if for<font color="#CCCCCC"> some</font>

412
00:20:22,140 --> 00:20:29,430
reasons<font color="#CCCCCC"> at CD files there is</font><font color="#E5E5E5"> another one</font>

413
00:20:26,460 --> 00:20:35,480
<font color="#E5E5E5">which</font><font color="#CCCCCC"> can end over there are many many</font>

414
00:20:29,430 --> 00:20:38,720
cool<font color="#CCCCCC"> features</font><font color="#E5E5E5"> with with networking VPP</font>

415
00:20:35,480 --> 00:20:41,750
one of them is now we<font color="#E5E5E5"> have this</font>

416
00:20:38,720 --> 00:20:45,480
<font color="#CCCCCC">redundancy between</font><font color="#E5E5E5"> layers</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> halters</font>

417
00:20:41,750 --> 00:20:47,850
<font color="#CCCCCC">based on kip arrived d so that so if one</font>

418
00:20:45,480 --> 00:20:49,740
dies<font color="#CCCCCC"> then the other one can end over so</font>

419
00:20:47,850 --> 00:20:52,219
that's<font color="#E5E5E5"> also extremely</font><font color="#CCCCCC"> useful in</font>

420
00:20:49,740 --> 00:20:52,220
production

421
00:20:52,840 --> 00:21:00,830
security<font color="#E5E5E5"> security we</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> hole based</font>

422
00:20:57,019 --> 00:21:02,840
access control so when only few<font color="#CCCCCC"> compute</font>

423
00:21:00,830 --> 00:21:05,029
<font color="#CCCCCC">nor</font><font color="#E5E5E5"> the compute nodes comes with rights</font>

424
00:21:02,840 --> 00:21:07,250
and<font color="#CCCCCC"> there you cannot</font><font color="#E5E5E5"> write and hit</font>

425
00:21:05,029 --> 00:21:09,440
<font color="#CCCCCC">anything in</font><font color="#E5E5E5"> that CD so basically if</font>

426
00:21:07,250 --> 00:21:12,470
there is a<font color="#E5E5E5"> malicious compute node for</font>

427
00:21:09,440 --> 00:21:14,840
some reasons<font color="#E5E5E5"> then you are sure that the</font>

428
00:21:12,470 --> 00:21:16,669
<font color="#E5E5E5">database cannot be overwritten by</font>

429
00:21:14,840 --> 00:21:20,120
someone we would<font color="#CCCCCC"> doesn't have the rights</font>

430
00:21:16,669 --> 00:21:22,940
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that is another</font><font color="#E5E5E5"> cool feature we have</font>

431
00:21:20,120 --> 00:21:25,580
<font color="#E5E5E5">these JSON web tokens</font><font color="#CCCCCC"> that can make</font><font color="#E5E5E5"> sure</font>

432
00:21:22,940 --> 00:21:27,620
that<font color="#E5E5E5"> the states which are written in the</font>

433
00:21:25,580 --> 00:21:30,250
database have been written by<font color="#CCCCCC"> the right</font>

434
00:21:27,620 --> 00:21:35,439
<font color="#E5E5E5">compute node so we have all that right</font>

435
00:21:30,250 --> 00:21:38,299
<font color="#CCCCCC">so I will just go to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> roadmap slide</font>

436
00:21:35,440 --> 00:21:39,919
we are<font color="#E5E5E5"> now have a lot</font><font color="#CCCCCC"> of features</font><font color="#E5E5E5"> the</font>

437
00:21:38,299 --> 00:21:41,960
next thing we need<font color="#CCCCCC"> to work on is this</font>

438
00:21:39,919 --> 00:21:45,049
<font color="#CCCCCC">Vilano where VM that we don't have and</font>

439
00:21:41,960 --> 00:21:47,750
have a better<font color="#E5E5E5"> appending for her for v6</font>

440
00:21:45,049 --> 00:21:49,429
so these are<font color="#CCCCCC"> very the remaining features</font>

441
00:21:47,750 --> 00:21:51,529
we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> now and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> are more than</font>

442
00:21:49,429 --> 00:21:54,230
<font color="#CCCCCC">welcome to contribute or to</font><font color="#E5E5E5"> test it if</font>

443
00:21:51,529 --> 00:21:55,909
you want<font color="#CCCCCC"> I</font><font color="#E5E5E5"> realize I may no longer have</font>

444
00:21:54,230 --> 00:22:00,730
time so do you do we have time for

445
00:21:55,909 --> 00:22:00,730
questions<font color="#CCCCCC"> so ok</font>

446
00:22:03,959 --> 00:22:09,369
<font color="#E5E5E5">five minutes</font><font color="#CCCCCC"> to until the start of</font><font color="#E5E5E5"> the</font>

447
00:22:07,239 --> 00:22:12,279
<font color="#CCCCCC">next presentation before questions I</font>

448
00:22:09,369 --> 00:22:14,529
just<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to for those who aren't on the</font>

449
00:22:12,279 --> 00:22:16,829
mailing list<font color="#CCCCCC"> we're having a gathering</font>

450
00:22:14,529 --> 00:22:22,239
there's some space in the<font color="#CCCCCC"> man</font><font color="#E5E5E5"> campus</font>

451
00:22:16,829 --> 00:22:24,849
cafe later this evening from 7:30 so are

452
00:22:22,239 --> 00:22:26,739
you all well<font color="#CCCCCC"> and some of you are</font><font color="#E5E5E5"> welcome</font>

453
00:22:24,849 --> 00:22:28,198
to<font color="#CCCCCC"> join us</font><font color="#E5E5E5"> come</font><font color="#CCCCCC"> along if there's room</font>

454
00:22:26,739 --> 00:22:30,699
there's room and if there isn't then

455
00:22:28,199 --> 00:22:33,009
then it's it's also the center of<font color="#E5E5E5"> Center</font>

456
00:22:30,699 --> 00:22:34,059
the central part of<font color="#E5E5E5"> town</font><font color="#CCCCCC"> so and so it's</font>

457
00:22:33,009 --> 00:22:41,469
a big enough place we<font color="#CCCCCC"> should</font><font color="#E5E5E5"> be able to</font>

458
00:22:34,059 --> 00:22:43,959
<font color="#E5E5E5">fit</font><font color="#CCCCCC"> a good number of us in VPP used to</font>

459
00:22:41,469 --> 00:22:45,609
connect containers or for OpenStack<font color="#CCCCCC"> I</font>

460
00:22:43,959 --> 00:22:48,129
know it was a lot<font color="#CCCCCC"> of things being showed</font>

461
00:22:45,609 --> 00:22:50,559
in this presentation<font color="#E5E5E5"> is there is another</font>

462
00:22:48,129 --> 00:22:52,059
VPP presentation later which<font color="#CCCCCC"> will go</font>

463
00:22:50,559 --> 00:22:55,349
<font color="#E5E5E5">into more detail I</font><font color="#CCCCCC"> think in</font><font color="#E5E5E5"> the in the</font>

464
00:22:52,059 --> 00:23:02,469
higher level technical<font color="#E5E5E5"> details of VPP</font>

465
00:22:55,349 --> 00:23:06,178
anybody have any questions<font color="#E5E5E5"> okay you</font>

466
00:23:02,469 --> 00:23:06,179
shout it<font color="#E5E5E5"> out I'm Jay John can you</font>

467
00:23:17,589 --> 00:23:22,839
there is<font color="#CCCCCC"> it so the</font><font color="#E5E5E5"> question just just</font>

468
00:23:20,200 --> 00:23:26,409
<font color="#E5E5E5">for the record was does the agent of VPP</font>

469
00:23:22,839 --> 00:23:34,839
<font color="#CCCCCC">repaid replace the agent</font><font color="#E5E5E5"> of neutron on</font>

470
00:23:26,409 --> 00:23:38,830
the compute nodes<font color="#CCCCCC"> I will not say so</font>

471
00:23:34,839 --> 00:23:41,469
there is an I mean there<font color="#E5E5E5"> is not an agent</font>

472
00:23:38,830 --> 00:23:44,379
for<font color="#CCCCCC"> Neutron in general</font><font color="#E5E5E5"> people are you</font>

473
00:23:41,469 --> 00:23:46,659
people may<font color="#E5E5E5"> you use</font><font color="#CCCCCC"> will the agent which</font>

474
00:23:44,379 --> 00:23:48,339
which<font color="#CCCCCC"> is on the compute node will depend</font>

475
00:23:46,659 --> 00:23:50,200
on the<font color="#E5E5E5"> virtual switch you will use right</font>

476
00:23:48,339 --> 00:23:53,070
so if you are<font color="#E5E5E5"> obvious you will get a</font>

477
00:23:50,200 --> 00:23:55,389
neutral agent<font color="#E5E5E5"> if you are</font><font color="#CCCCCC"> using you know</font>

478
00:23:53,070 --> 00:23:58,029
<font color="#E5E5E5">regularly Linux but you will not use</font>

479
00:23:55,389 --> 00:24:00,728
another agent so we have written an

480
00:23:58,029 --> 00:24:03,759
agent which<font color="#CCCCCC"> is running on the compute</font>

481
00:24:00,729 --> 00:24:06,639
nodes and<font color="#E5E5E5"> that</font><font color="#CCCCCC"> will drive VPP so yes the</font>

482
00:24:03,759 --> 00:24:08,829
<font color="#CCCCCC">agent on the compute node replaces this</font>

483
00:24:06,639 --> 00:24:11,408
agent because this agent knows how to

484
00:24:08,829 --> 00:24:14,559
talk<font color="#CCCCCC"> to</font><font color="#E5E5E5"> VPP and knows how to talk</font><font color="#CCCCCC"> to at</font>

485
00:24:11,409 --> 00:24:16,329
CD<font color="#CCCCCC"> I actually have a question as well</font><font color="#E5E5E5"> is</font>

486
00:24:14,559 --> 00:24:19,719
this different from<font color="#E5E5E5"> the honeycomb agent</font>

487
00:24:16,329 --> 00:24:22,119
it<font color="#E5E5E5"> is absolutely honeycomb</font><font color="#CCCCCC"> bees is a net</font>

488
00:24:19,719 --> 00:24:24,549
confidant agent<font color="#E5E5E5"> and here it's a net CD</font>

489
00:24:22,119 --> 00:24:28,599
thing<font color="#E5E5E5"> right so</font><font color="#CCCCCC"> it this one is written in</font>

490
00:24:24,549 --> 00:24:31,119
Python<font color="#CCCCCC"> you say VPP</font><font color="#E5E5E5"> we must be on top of</font>

491
00:24:28,599 --> 00:24:33,549
DP DJ I know there is also an option to

492
00:24:31,119 --> 00:24:38,019
<font color="#CCCCCC">run</font><font color="#E5E5E5"> on top of</font><font color="#CCCCCC"> a DP please can you</font>

493
00:24:33,549 --> 00:24:40,959
explain the benefit sure so in the past

494
00:24:38,019 --> 00:24:43,690
in the past<font color="#E5E5E5"> VPP was a tightly coupled</font>

495
00:24:40,959 --> 00:24:46,479
with the PDK and during the<font color="#E5E5E5"> last version</font>

496
00:24:43,690 --> 00:24:49,479
what we did is trying to have DP DK

497
00:24:46,479 --> 00:24:51,669
being a<font color="#E5E5E5"> plug-in an important</font><font color="#CCCCCC"> plug-in but</font>

498
00:24:49,479 --> 00:24:53,259
but just a plug-in beside<font color="#CCCCCC"> others</font><font color="#E5E5E5"> so</font>

499
00:24:51,669 --> 00:24:55,899
there are many<font color="#CCCCCC"> reasons why</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> having</font>

500
00:24:53,259 --> 00:24:57,639
<font color="#E5E5E5">not using the PDK so</font><font color="#CCCCCC"> forth and since the</font>

501
00:24:55,899 --> 00:24:59,589
demo I was showing<font color="#E5E5E5"> before</font><font color="#CCCCCC"> I was</font>

502
00:24:57,639 --> 00:25:04,658
connecting<font color="#CCCCCC"> regular containers which</font>

503
00:24:59,589 --> 00:25:07,928
doesn't work<font color="#E5E5E5"> with the PDK so so uh no DP</font>

504
00:25:04,659 --> 00:25:09,700
right now I don't<font color="#E5E5E5"> know to be honest with</font>

505
00:25:07,929 --> 00:25:11,619
you because<font color="#E5E5E5"> I</font><font color="#CCCCCC"> have not</font><font color="#E5E5E5"> done a lot</font><font color="#CCCCCC"> of</font>

506
00:25:09,700 --> 00:25:13,899
tests a<font color="#E5E5E5"> lot of tests with it but I know</font>

507
00:25:11,619 --> 00:25:15,458
people<font color="#E5E5E5"> who are using with it</font><font color="#CCCCCC"> working</font>

508
00:25:13,899 --> 00:25:17,678
with<font color="#CCCCCC"> it or I guess there may be some</font>

509
00:25:15,459 --> 00:25:19,089
better performance with<font color="#E5E5E5"> some</font><font color="#CCCCCC"> mini cards</font>

510
00:25:17,679 --> 00:25:21,929
but I'm not too<font color="#E5E5E5"> sure about that so I</font>

511
00:25:19,089 --> 00:25:25,408
don't<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to answer so last question</font>

512
00:25:21,929 --> 00:25:30,839
<font color="#E5E5E5">anybody else have a</font><font color="#CCCCCC"> question</font>

513
00:25:25,409 --> 00:25:30,839
I'll go beyond the usual suspects<font color="#E5E5E5"> yeah</font>

514
00:25:34,940 --> 00:25:41,000
so the question was can<font color="#E5E5E5"> use the</font><font color="#CCCCCC"> BBB</font>

515
00:25:37,320 --> 00:25:44,490
agent<font color="#E5E5E5"> along with the I think</font><font color="#CCCCCC"> Candela</font>

516
00:25:41,000 --> 00:25:47,910
<font color="#E5E5E5">OpenStack OpenStack enables this option</font>

517
00:25:44,490 --> 00:25:50,280
to have hierarchical driver so I I don't

518
00:25:47,910 --> 00:25:52,440
<font color="#E5E5E5">see good reasons</font><font color="#CCCCCC"> why that wouldn't</font><font color="#E5E5E5"> work</font>

519
00:25:50,280 --> 00:25:55,500
but<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> really see the benefit of</font>

520
00:25:52,440 --> 00:25:58,169
<font color="#E5E5E5">doing such a thing right so in theory</font>

521
00:25:55,500 --> 00:26:00,900
yes<font color="#E5E5E5"> but why would you do that I</font><font color="#CCCCCC"> mean if</font>

522
00:25:58,169 --> 00:26:02,309
<font color="#E5E5E5">you use one for water it's</font><font color="#CCCCCC"> probably for</font>

523
00:26:00,900 --> 00:26:05,250
good<font color="#E5E5E5"> reasons so I don't see why you</font>

524
00:26:02,309 --> 00:26:07,740
would you would<font color="#CCCCCC"> have those two guys cuz</font>

525
00:26:05,250 --> 00:26:09,840
<font color="#E5E5E5">it was that</font><font color="#CCCCCC"> alongside</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> again for</font>

526
00:26:07,740 --> 00:26:16,350
the recording the VPP agent alongside

527
00:26:09,840 --> 00:26:21,720
the<font color="#CCCCCC"> OTS ml to it okay or another custom</font>

528
00:26:16,350 --> 00:26:25,408
agent to me a bit like<font color="#CCCCCC"> a Funkenstein</font>

529
00:26:21,720 --> 00:26:29,760
solution<font color="#E5E5E5"> but</font><font color="#CCCCCC"> but but</font><font color="#E5E5E5"> why not why not</font>

530
00:26:25,409 --> 00:26:36,179
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> that's an</font><font color="#E5E5E5"> that's a world of time so</font>

531
00:26:29,760 --> 00:26:37,740
thank<font color="#CCCCCC"> you very much Sean thank you so my</font>

532
00:26:36,179 --> 00:26:42,980
next<font color="#E5E5E5"> speakers are</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> be meeting them</font>

533
00:26:37,740 --> 00:26:42,980
for the first<font color="#E5E5E5"> time on the stage so</font><font color="#CCCCCC"> much</font>

