1
00:00:05,120 --> 00:00:10,010
right so let's<font color="#CCCCCC"> start i'm software</font>

2
00:00:07,670 --> 00:00:14,420
engineer at<font color="#CCCCCC"> red head and this</font><font color="#E5E5E5"> is just</font>

3
00:00:10,010 --> 00:00:16,730
quick summaries what<font color="#CCCCCC"> i do</font><font color="#E5E5E5"> so as some of</font>

4
00:00:14,420 --> 00:00:19,550
<font color="#CCCCCC">the people previously I'm working on</font>

5
00:00:16,730 --> 00:00:22,490
overt and then on<font color="#CCCCCC"> Qbert which is the</font>

6
00:00:19,550 --> 00:00:25,279
<font color="#CCCCCC">virtualization for kubernetes thingy</font>

7
00:00:22,490 --> 00:00:28,009
I must have account a<font color="#E5E5E5"> node and host</font>

8
00:00:25,279 --> 00:00:29,840
management stuff so the things you<font color="#E5E5E5"> can</font>

9
00:00:28,010 --> 00:00:32,090
<font color="#E5E5E5">see</font><font color="#CCCCCC"> on the slide</font><font color="#E5E5E5"> are pretty much the</font>

10
00:00:29,840 --> 00:00:34,370
features<font color="#CCCCCC"> that I've had my hand so on</font><font color="#E5E5E5"> and</font>

11
00:00:32,090 --> 00:00:37,010
the<font color="#E5E5E5"> last thing is I have a</font><font color="#CCCCCC"> block</font><font color="#E5E5E5"> read my</font>

12
00:00:34,370 --> 00:00:40,940
book<font color="#CCCCCC"> that's cool</font>

13
00:00:37,010 --> 00:00:44,210
now<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> is very cross tech</font>

14
00:00:40,940 --> 00:00:45,849
<font color="#E5E5E5">because for device assignment we have to</font>

15
00:00:44,210 --> 00:00:48,680
start<font color="#E5E5E5"> really at the low level we're</font>

16
00:00:45,850 --> 00:00:52,520
starting<font color="#E5E5E5"> somewhere at kernel driver</font>

17
00:00:48,680 --> 00:00:56,019
level<font color="#E5E5E5"> then going up Oh - all the</font><font color="#CCCCCC"> KVM qmu</font>

18
00:00:52,520 --> 00:00:59,930
<font color="#E5E5E5">livered all the way up to the clouds so</font>

19
00:00:56,020 --> 00:01:04,580
let's<font color="#CCCCCC"> as did a small</font><font color="#E5E5E5"> poll who here knows</font>

20
00:00:59,930 --> 00:01:06,470
about device assignment for<font color="#CCCCCC"> VMs that's</font>

21
00:01:04,580 --> 00:01:07,520
not bad and who knows about device

22
00:01:06,470 --> 00:01:13,100
<font color="#E5E5E5">plugins in kubernetes</font>

23
00:01:07,520 --> 00:01:13,610
oh that's a bit worse<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> I'm hoping to</font>

24
00:01:13,100 --> 00:01:16,458
change that

25
00:01:13,610 --> 00:01:19,399
so this tag<font color="#CCCCCC"> that VL goes through is</font>

26
00:01:16,459 --> 00:01:22,759
pretty<font color="#E5E5E5"> much you know started the</font><font color="#CCCCCC"> VF I'll</font>

27
00:01:19,399 --> 00:01:28,090
<font color="#CCCCCC">be CI driver</font><font color="#E5E5E5"> and then go all the way up</font>

28
00:01:22,759 --> 00:01:31,580
this tech to the<font color="#E5E5E5"> kubernetes level so</font>

29
00:01:28,090 --> 00:01:34,640
<font color="#E5E5E5">going on let's start with philosophical</font>

30
00:01:31,580 --> 00:01:37,910
<font color="#E5E5E5">question</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> even is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> device and it</font>

31
00:01:34,640 --> 00:01:40,340
turns<font color="#E5E5E5"> out you can ask</font><font color="#CCCCCC"> 10 people</font><font color="#E5E5E5"> and get</font>

32
00:01:37,910 --> 00:01:42,979
<font color="#E5E5E5">10 responses because</font><font color="#CCCCCC"> it depends on how</font>

33
00:01:40,340 --> 00:01:45,110
far are you from<font color="#E5E5E5"> the kernel itself so</font>

34
00:01:42,979 --> 00:01:47,420
<font color="#E5E5E5">for someone device is directional you</font>

35
00:01:45,110 --> 00:01:50,090
know<font color="#E5E5E5"> GPU that you buy</font><font color="#CCCCCC"> and store and plug</font>

36
00:01:47,420 --> 00:01:52,450
<font color="#CCCCCC">into computer for someone in kernel it</font>

37
00:01:50,090 --> 00:01:56,149
could be just a bunch<font color="#E5E5E5"> of memory regions</font>

38
00:01:52,450 --> 00:01:58,940
<font color="#E5E5E5">for us working on</font><font color="#CCCCCC"> node it's usually</font>

39
00:01:56,149 --> 00:02:01,759
<font color="#E5E5E5">exposed as several paths in the system</font>

40
00:01:58,940 --> 00:02:04,819
so it could be<font color="#CCCCCC"> Sisyphus PCI device or</font>

41
00:02:01,759 --> 00:02:10,098
just under<font color="#E5E5E5"> death for example def KVM</font><font color="#CCCCCC"> is</font>

42
00:02:04,819 --> 00:02:13,519
also a device now to deal with PCI

43
00:02:10,098 --> 00:02:17,299
devices and virtualization<font color="#CCCCCC"> you can't</font>

44
00:02:13,519 --> 00:02:19,320
just make you can't just

45
00:02:17,300 --> 00:02:21,030
transporter device into the<font color="#E5E5E5"> VM right</font>

46
00:02:19,320 --> 00:02:23,489
there needs to be something to<font color="#E5E5E5"> handle</font>

47
00:02:21,030 --> 00:02:27,410
the isolation for virtualization itself

48
00:02:23,490 --> 00:02:31,050
<font color="#CCCCCC">and for that there's a VF</font><font color="#E5E5E5"> i/o PCI driver</font>

49
00:02:27,410 --> 00:02:35,010
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is really a quick overview because</font>

50
00:02:31,050 --> 00:02:37,380
<font color="#E5E5E5">I've this itself is whole talk so if</font>

51
00:02:35,010 --> 00:02:40,290
you're<font color="#E5E5E5"> interested in v-fib see I just</font>

52
00:02:37,380 --> 00:02:43,200
you can see<font color="#CCCCCC"> my different talk</font><font color="#E5E5E5"> what's</font>

53
00:02:40,290 --> 00:02:46,019
important is that<font color="#CCCCCC"> to properly assign</font>

54
00:02:43,200 --> 00:02:50,640
device to VM<font color="#CCCCCC"> it needs to be bound to the</font>

55
00:02:46,020 --> 00:02:52,920
VF<font color="#CCCCCC"> i/o PCI driver unfortunately it's not</font>

56
00:02:50,640 --> 00:02:55,589
<font color="#CCCCCC">that easy because devices come with</font>

57
00:02:52,920 --> 00:02:57,269
different degrees<font color="#E5E5E5"> of isolation so you</font>

58
00:02:55,590 --> 00:02:59,520
may have<font color="#CCCCCC"> a device that's</font><font color="#E5E5E5"> perfectly</font>

59
00:02:57,270 --> 00:03:00,990
<font color="#CCCCCC">isolated on</font><font color="#E5E5E5"> the other hand you may have</font>

60
00:02:59,520 --> 00:03:03,450
several devices that are not really

61
00:03:00,990 --> 00:03:05,210
isolated from each other<font color="#E5E5E5"> and in that</font>

62
00:03:03,450 --> 00:03:08,970
case<font color="#E5E5E5"> they're not really suitable for</font>

63
00:03:05,210 --> 00:03:11,460
<font color="#E5E5E5">virtualization and this isolation is</font>

64
00:03:08,970 --> 00:03:15,320
expressed in something we call our Mme

65
00:03:11,460 --> 00:03:17,850
groups<font color="#E5E5E5"> so I really like the example of</font>

66
00:03:15,320 --> 00:03:21,000
<font color="#CCCCCC">consumer-level GPU so if you have</font>

67
00:03:17,850 --> 00:03:23,250
regular<font color="#E5E5E5"> graphics cards it probably comes</font>

68
00:03:21,000 --> 00:03:26,550
with a sound card on it for the HDMI

69
00:03:23,250 --> 00:03:29,820
output<font color="#E5E5E5"> and in this case both of these</font>

70
00:03:26,550 --> 00:03:32,880
devices<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> single card will be in one</font>

71
00:03:29,820 --> 00:03:36,450
<font color="#E5E5E5">our Mme group so when devices are born</font>

72
00:03:32,880 --> 00:03:39,150
to VF<font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> PCI they become accessible at</font>

73
00:03:36,450 --> 00:03:43,679
def F s death VF i/o and the group

74
00:03:39,150 --> 00:03:46,220
number<font color="#E5E5E5"> there's a more graphic example</font>

75
00:03:43,680 --> 00:03:49,590
it's taken<font color="#E5E5E5"> from the different talk I had</font>

76
00:03:46,220 --> 00:03:53,010
but<font color="#E5E5E5"> it nicely sums up the situation with</font>

77
00:03:49,590 --> 00:03:56,310
our memory groups so<font color="#E5E5E5"> you have several</font>

78
00:03:53,010 --> 00:03:59,040
devices<font color="#E5E5E5"> and some of them are behind</font><font color="#CCCCCC"> PCIe</font>

79
00:03:56,310 --> 00:04:02,310
bridges<font color="#E5E5E5"> so in this case the device</font><font color="#CCCCCC"> 0</font>

80
00:03:59,040 --> 00:04:04,679
<font color="#E5E5E5">does the IR mu</font><font color="#CCCCCC"> group one is</font><font color="#E5E5E5"> in</font>

81
00:04:02,310 --> 00:04:08,280
<font color="#E5E5E5">Automobile Group by itself</font><font color="#CCCCCC"> there's no</font>

82
00:04:04,680 --> 00:04:09,570
bridge on its way to the CPU and this is

83
00:04:08,280 --> 00:04:12,510
the perfect<font color="#CCCCCC"> case because for</font>

84
00:04:09,570 --> 00:04:14,459
<font color="#E5E5E5">virtualization we can pretty much assign</font>

85
00:04:12,510 --> 00:04:16,349
the device by itself<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't have to</font>

86
00:04:14,459 --> 00:04:19,168
deal<font color="#CCCCCC"> with our maybe groups or anything</font>

87
00:04:16,350 --> 00:04:22,230
<font color="#CCCCCC">so</font><font color="#E5E5E5"> that's great second case and that's</font>

88
00:04:19,168 --> 00:04:25,349
<font color="#E5E5E5">the group</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> three it's also great</font>

89
00:04:22,230 --> 00:04:27,919
there happens to be bridge that supports

90
00:04:25,350 --> 00:04:31,560
PCI Express access control services and

91
00:04:27,919 --> 00:04:33,630
this may this owes it to isolate

92
00:04:31,560 --> 00:04:36,990
each of the device<font color="#E5E5E5"> in its own group so</font>

93
00:04:33,630 --> 00:04:39,389
<font color="#CCCCCC">again</font><font color="#E5E5E5"> perfect case</font><font color="#CCCCCC"> the not so perfect</font>

94
00:04:36,990 --> 00:04:43,530
<font color="#E5E5E5">case is if you have bridged it doesn't</font>

95
00:04:39,389 --> 00:04:45,690
support<font color="#E5E5E5"> PCI Express ACS</font><font color="#CCCCCC"> all the devices</font>

96
00:04:43,530 --> 00:04:47,789
behind<font color="#E5E5E5"> that bridge and even that bridge</font>

97
00:04:45,690 --> 00:04:49,230
is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be in a single group and in</font>

98
00:04:47,790 --> 00:04:51,840
that<font color="#E5E5E5"> case you can't really assign just</font>

99
00:04:49,230 --> 00:04:53,370
device<font color="#CCCCCC"> three or device for</font><font color="#E5E5E5"> you'll</font>

100
00:04:51,840 --> 00:05:00,380
probably have to<font color="#E5E5E5"> work with them as as</font>

101
00:04:53,370 --> 00:05:03,780
one whole device now moving up<font color="#E5E5E5"> the stack</font>

102
00:05:00,380 --> 00:05:08,520
<font color="#CCCCCC">now moving</font><font color="#E5E5E5"> up the stack</font><font color="#CCCCCC"> we have labored</font>

103
00:05:03,780 --> 00:05:10,309
so liver this library<font color="#E5E5E5"> and a demon to</font>

104
00:05:08,520 --> 00:05:15,840
manage VMs

105
00:05:10,310 --> 00:05:18,620
<font color="#CCCCCC">I don't base the talk about K KB MQ a</font>

106
00:05:15,840 --> 00:05:22,919
mistake but liver is<font color="#E5E5E5"> also able to manage</font>

107
00:05:18,620 --> 00:05:25,800
like then<font color="#CCCCCC"> and other hypervisor so where</font>

108
00:05:22,919 --> 00:05:27,810
is a<font color="#E5E5E5"> kimi is just handed for me in this</font>

109
00:05:25,800 --> 00:05:29,550
case<font color="#E5E5E5"> because I've worked with it the</font>

110
00:05:27,810 --> 00:05:32,729
most<font color="#CCCCCC"> but</font><font color="#E5E5E5"> in the end this should be</font>

111
00:05:29,550 --> 00:05:35,820
applicable<font color="#E5E5E5"> to other hypervisors</font><font color="#CCCCCC"> to what</font>

112
00:05:32,729 --> 00:05:38,190
liver does is<font color="#E5E5E5"> you may have seen some of</font>

113
00:05:35,820 --> 00:05:41,130
<font color="#E5E5E5">the previous talks with crazy</font><font color="#CCCCCC"> EMU</font>

114
00:05:38,190 --> 00:05:43,830
command lines if you<font color="#E5E5E5"> try to have a you</font>

115
00:05:41,130 --> 00:05:46,020
<font color="#E5E5E5">know proper VM with all the devices that</font>

116
00:05:43,830 --> 00:05:47,280
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be there the virtualized ones</font>

117
00:05:46,020 --> 00:05:50,820
the real ones

118
00:05:47,280 --> 00:05:52,020
it gets really<font color="#E5E5E5"> long and liver</font><font color="#CCCCCC"> tries to</font>

119
00:05:50,820 --> 00:05:55,020
<font color="#E5E5E5">make this better</font>

120
00:05:52,020 --> 00:05:58,830
by creating an obstruction about the

121
00:05:55,020 --> 00:06:01,229
command line<font color="#CCCCCC"> it's an XML format but that</font>

122
00:05:58,830 --> 00:06:03,810
doesn't<font color="#E5E5E5"> matter too much</font><font color="#CCCCCC"> it's mostly</font>

123
00:06:01,229 --> 00:06:06,710
access programmatically anyway now

124
00:06:03,810 --> 00:06:10,169
important part about liver is that

125
00:06:06,710 --> 00:06:13,469
there's a snippet<font color="#CCCCCC"> and you can see that</font>

126
00:06:10,169 --> 00:06:16,530
the<font color="#E5E5E5"> device is given by its address</font>

127
00:06:13,470 --> 00:06:18,570
<font color="#E5E5E5">you're referring to one specific device</font>

128
00:06:16,530 --> 00:06:21,210
not really the<font color="#E5E5E5"> rme group not really</font>

129
00:06:18,570 --> 00:06:23,700
anything<font color="#E5E5E5"> else but we read a specific</font><font color="#CCCCCC"> one</font>

130
00:06:21,210 --> 00:06:26,219
path so it doesn't play well<font color="#CCCCCC"> with I</font>

131
00:06:23,700 --> 00:06:29,460
<font color="#E5E5E5">remove concept because of the grouping</font>

132
00:06:26,220 --> 00:06:34,050
and<font color="#CCCCCC"> they all</font><font color="#E5E5E5"> probably have to work</font>

133
00:06:29,460 --> 00:06:37,260
around that<font color="#E5E5E5"> in the future again going</font>

134
00:06:34,050 --> 00:06:41,430
<font color="#CCCCCC">higher this</font><font color="#E5E5E5"> is actually pretty</font><font color="#CCCCCC"> different</font>

135
00:06:37,260 --> 00:06:44,909
<font color="#E5E5E5">path so for containers this is a again</font>

136
00:06:41,430 --> 00:06:45,120
like 101<font color="#CCCCCC"> keep in mind this is different</font>

137
00:06:44,909 --> 00:06:47,639
from

138
00:06:45,120 --> 00:06:49,800
via file but we<font color="#E5E5E5"> still need</font><font color="#CCCCCC"> to know about</font>

139
00:06:47,639 --> 00:06:51,810
<font color="#E5E5E5">that because those two</font><font color="#CCCCCC"> things are going</font>

140
00:06:49,800 --> 00:06:53,669
<font color="#E5E5E5">to merge at some point and</font><font color="#CCCCCC"> for</font>

141
00:06:51,810 --> 00:06:57,600
<font color="#E5E5E5">containers we don't need any kind of</font>

142
00:06:53,669 --> 00:07:00,240
special driver<font color="#E5E5E5"> luckily on the other hand</font>

143
00:06:57,600 --> 00:07:03,229
we can really<font color="#E5E5E5"> just</font><font color="#CCCCCC"> pass through anything</font>

144
00:07:00,240 --> 00:07:06,150
<font color="#E5E5E5">because we</font><font color="#CCCCCC"> are giving the container is</font>

145
00:07:03,229 --> 00:07:08,729
<font color="#CCCCCC">puff to the</font><font color="#E5E5E5"> device</font><font color="#CCCCCC"> so it can be</font><font color="#E5E5E5"> the</font>

146
00:07:06,150 --> 00:07:11,219
<font color="#E5E5E5">death path or this path or pretty much</font>

147
00:07:08,729 --> 00:07:14,070
any other<font color="#E5E5E5"> path in the system and in case</font>

148
00:07:11,220 --> 00:07:15,360
<font color="#CCCCCC">of a technology that has</font><font color="#E5E5E5"> like well in</font>

149
00:07:14,070 --> 00:07:17,729
slow go

150
00:07:15,360 --> 00:07:20,340
it<font color="#E5E5E5"> supports several flags like</font><font color="#CCCCCC"> digit</font>

151
00:07:17,729 --> 00:07:22,320
<font color="#CCCCCC">edge device</font><font color="#E5E5E5"> that pretty much should set</font>

152
00:07:20,340 --> 00:07:25,349
the<font color="#CCCCCC"> C groups and make sure the device</font><font color="#E5E5E5"> is</font>

153
00:07:22,320 --> 00:07:28,490
accessible in<font color="#CCCCCC"> the container then through</font>

154
00:07:25,350 --> 00:07:32,310
<font color="#E5E5E5">volume you can expose the path itself</font>

155
00:07:28,490 --> 00:07:34,560
<font color="#E5E5E5">the fun part is</font><font color="#CCCCCC"> that you may</font><font color="#E5E5E5"> have to run</font>

156
00:07:32,310 --> 00:07:39,240
the container in privileged mode but

157
00:07:34,560 --> 00:07:41,520
<font color="#CCCCCC">that depends</font><font color="#E5E5E5"> pretty much by what kind of</font>

158
00:07:39,240 --> 00:07:45,180
end point are<font color="#CCCCCC"> you trying to access</font><font color="#E5E5E5"> so</font>

159
00:07:41,520 --> 00:07:50,370
it's a guessing<font color="#CCCCCC"> game</font><font color="#E5E5E5"> why is this useful</font>

160
00:07:45,180 --> 00:07:52,289
<font color="#E5E5E5">well some devices like GPUs</font><font color="#CCCCCC"> expose for</font>

161
00:07:50,370 --> 00:07:55,349
example just<font color="#E5E5E5"> the direct rendering</font>

162
00:07:52,289 --> 00:07:58,500
endpoints instead of you know<font color="#CCCCCC"> having</font><font color="#E5E5E5"> the</font>

163
00:07:55,349 --> 00:08:01,979
<font color="#E5E5E5">whole memory region thingy there are</font>

164
00:07:58,500 --> 00:08:03,150
<font color="#E5E5E5">several files that that you need to do</font>

165
00:08:01,979 --> 00:08:05,479
the rendering itself

166
00:08:03,150 --> 00:08:10,049
they're also<font color="#CCCCCC"> toolkit so if you're using</font>

167
00:08:05,479 --> 00:08:12,120
<font color="#CCCCCC">cuda cuda itself is exposed as a path so</font>

168
00:08:10,050 --> 00:08:18,479
again you can<font color="#E5E5E5"> get that into container</font>

169
00:08:12,120 --> 00:08:21,479
pretty easily<font color="#E5E5E5"> now this is all great but</font>

170
00:08:18,479 --> 00:08:23,969
it doesn't<font color="#E5E5E5"> really work when you're</font>

171
00:08:21,479 --> 00:08:26,130
you're in<font color="#E5E5E5"> cluster right you don't</font><font color="#CCCCCC"> have</font>

172
00:08:23,970 --> 00:08:29,460
one host and you're definitely<font color="#E5E5E5"> not going</font>

173
00:08:26,130 --> 00:08:33,870
<font color="#CCCCCC">to</font><font color="#E5E5E5"> be setting up docker for each host in</font>

174
00:08:29,460 --> 00:08:36,659
that cluster<font color="#CCCCCC"> and this whole thing</font><font color="#E5E5E5"> just</font>

175
00:08:33,870 --> 00:08:40,020
becomes building block for<font color="#CCCCCC"> cuban</font><font color="#E5E5E5"> 80s and</font>

176
00:08:36,659 --> 00:08:45,420
how it does the device assignment<font color="#E5E5E5"> so</font>

177
00:08:40,020 --> 00:08:47,310
that's very<font color="#E5E5E5"> very headed right so</font><font color="#CCCCCC"> i'm</font><font color="#E5E5E5"> not</font>

178
00:08:45,420 --> 00:08:48,990
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> how many introductions to cuban 80s</font>

179
00:08:47,310 --> 00:08:52,079
have you heard today<font color="#CCCCCC"> i hope</font><font color="#E5E5E5"> it's not</font>

180
00:08:48,990 --> 00:08:53,910
<font color="#CCCCCC">that much so</font><font color="#E5E5E5"> i've tried</font><font color="#CCCCCC"> to really</font>

181
00:08:52,080 --> 00:08:56,040
<font color="#E5E5E5">extract only</font><font color="#CCCCCC"> the points that are</font>

182
00:08:53,910 --> 00:08:57,370
<font color="#E5E5E5">required to talk about device assignment</font>

183
00:08:56,040 --> 00:09:00,069
so we have

184
00:08:57,370 --> 00:09:04,200
idea of having decorative<font color="#CCCCCC"> eight</font>

185
00:09:00,070 --> 00:09:07,420
orchestrated containers through<font color="#E5E5E5"> okay</font>

186
00:09:04,200 --> 00:09:12,070
through ports my report is<font color="#E5E5E5"> just several</font>

187
00:09:07,420 --> 00:09:15,099
<font color="#CCCCCC">containers all of these objects</font><font color="#E5E5E5"> within</font>

188
00:09:12,070 --> 00:09:17,620
<font color="#CCCCCC">Cuba these are just resources and that's</font>

189
00:09:15,100 --> 00:09:20,530
<font color="#CCCCCC">the really</font><font color="#E5E5E5"> important part remember</font>

190
00:09:17,620 --> 00:09:22,510
everything is just a resource<font color="#CCCCCC"> and for</font>

191
00:09:20,530 --> 00:09:23,140
this<font color="#E5E5E5"> talk I will just be showing the</font>

192
00:09:22,510 --> 00:09:25,750
resources

193
00:09:23,140 --> 00:09:27,550
<font color="#CCCCCC">Yama's so</font><font color="#E5E5E5"> I believe okay</font><font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> have</font>

194
00:09:25,750 --> 00:09:33,790
<font color="#CCCCCC">resources you will see multiple</font>

195
00:09:27,550 --> 00:09:36,339
resources<font color="#E5E5E5"> later on and the first idea</font><font color="#CCCCCC"> of</font>

196
00:09:33,790 --> 00:09:40,240
device assignment for kubernetes was

197
00:09:36,340 --> 00:09:42,400
added in version 1.3<font color="#CCCCCC"> I'm not sure how</font>

198
00:09:40,240 --> 00:09:44,740
<font color="#CCCCCC">long ago is that but it's quite some</font>

199
00:09:42,400 --> 00:09:46,870
time and there<font color="#CCCCCC"> are people</font><font color="#E5E5E5"> using it</font>

200
00:09:44,740 --> 00:09:48,730
<font color="#E5E5E5">companies using it for machine learning</font>

201
00:09:46,870 --> 00:09:51,970
stuff

202
00:09:48,730 --> 00:09:55,570
it is very vendor specific<font color="#CCCCCC"> as</font><font color="#E5E5E5"> you can</font>

203
00:09:51,970 --> 00:10:00,310
guess from the name and what it does it

204
00:09:55,570 --> 00:10:03,130
<font color="#E5E5E5">allows you to express the need for some</font>

205
00:10:00,310 --> 00:10:06,400
number of<font color="#CCCCCC"> nvidia gpus in in your</font>

206
00:10:03,130 --> 00:10:09,160
<font color="#E5E5E5">container or yeah in the container sorry</font>

207
00:10:06,400 --> 00:10:12,250
<font color="#CCCCCC">and that's pretty much</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is how</font>

208
00:10:09,160 --> 00:10:14,350
it looks<font color="#CCCCCC"> this is the normal ports back</font>

209
00:10:12,250 --> 00:10:16,480
and you can see<font color="#CCCCCC"> that there's some</font>

210
00:10:14,350 --> 00:10:19,210
container and the container<font color="#E5E5E5"> requests</font>

211
00:10:16,480 --> 00:10:22,510
<font color="#E5E5E5">resource that happens to be named NVIDIA</font>

212
00:10:19,210 --> 00:10:25,120
GPU there are several problems with<font color="#E5E5E5"> this</font>

213
00:10:22,510 --> 00:10:27,790
<font color="#CCCCCC">approach one of</font><font color="#E5E5E5"> them being the fact that</font>

214
00:10:25,120 --> 00:10:30,820
<font color="#E5E5E5">it's vendor specific so if you don't</font>

215
00:10:27,790 --> 00:10:34,680
have this<font color="#E5E5E5"> kind of GPUs then well you're</font>

216
00:10:30,820 --> 00:10:38,170
out of<font color="#E5E5E5"> luck the other problem itself is</font>

217
00:10:34,680 --> 00:10:41,979
you may<font color="#E5E5E5"> want some kind of specific GPU</font>

218
00:10:38,170 --> 00:10:45,790
<font color="#E5E5E5">right in case you have part of your</font>

219
00:10:41,980 --> 00:10:47,920
cluster<font color="#E5E5E5"> has these big beefy GPUs that</font>

220
00:10:45,790 --> 00:10:49,240
have a lot<font color="#CCCCCC"> of memory on the other hand</font>

221
00:10:47,920 --> 00:10:51,640
you might<font color="#E5E5E5"> have some that are used just</font>

222
00:10:49,240 --> 00:10:55,420
for rendering<font color="#E5E5E5"> and there's no way to</font>

223
00:10:51,640 --> 00:10:58,449
express<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and for this reason this</font>

224
00:10:55,420 --> 00:11:00,579
<font color="#E5E5E5">pretty specific concept has been</font>

225
00:10:58,450 --> 00:11:04,720
deprecated by something called<font color="#E5E5E5"> device</font>

226
00:11:00,580 --> 00:11:07,470
<font color="#CCCCCC">plugins</font><font color="#E5E5E5"> and device plugins are the main</font>

227
00:11:04,720 --> 00:11:09,910
thing that that<font color="#E5E5E5"> that's interesting</font><font color="#CCCCCC"> for</font>

228
00:11:07,470 --> 00:11:10,570
kubernetes and<font color="#E5E5E5"> for this whole device</font>

229
00:11:09,910 --> 00:11:13,120
ecosystem

230
00:11:10,570 --> 00:11:18,570
<font color="#E5E5E5">that we may have in Cuba eighties it's</font>

231
00:11:13,120 --> 00:11:21,460
not really specific<font color="#E5E5E5"> to VMs it's just a</font>

232
00:11:18,570 --> 00:11:23,950
way<font color="#CCCCCC"> to</font><font color="#E5E5E5"> express some kind of resource</font>

233
00:11:21,460 --> 00:11:26,110
<font color="#E5E5E5">that that is in the system</font><font color="#CCCCCC"> with us edit</font>

234
00:11:23,950 --> 00:11:27,700
<font color="#E5E5E5">and cuber Nettie's</font><font color="#CCCCCC"> 1.8 and</font><font color="#E5E5E5"> that's not a</font>

235
00:11:26,110 --> 00:11:31,150
long time<font color="#CCCCCC"> ago</font>

236
00:11:27,700 --> 00:11:33,040
it's I guess several months<font color="#E5E5E5"> and the</font>

237
00:11:31,150 --> 00:11:34,420
presentation will sometimes shortened it

238
00:11:33,040 --> 00:11:37,689
to<font color="#CCCCCC"> dpi but this is</font><font color="#E5E5E5"> just like</font>

239
00:11:34,420 --> 00:11:41,199
presentation<font color="#E5E5E5"> implementation detail it's</font>

240
00:11:37,690 --> 00:11:43,270
still it's still<font color="#E5E5E5"> very early in alpha and</font>

241
00:11:41,200 --> 00:11:45,250
there was<font color="#CCCCCC"> discussion about enabling</font><font color="#E5E5E5"> them</font>

242
00:11:43,270 --> 00:11:48,040
by<font color="#E5E5E5"> default so kubernetes clusters</font>

243
00:11:45,250 --> 00:11:51,370
wouldn't have to have the feature gate

244
00:11:48,040 --> 00:11:56,530
<font color="#E5E5E5">added but it has been postponed</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that</font>

245
00:11:51,370 --> 00:11:59,650
it's not<font color="#E5E5E5"> yet enabled by default</font><font color="#CCCCCC"> so what</font>

246
00:11:56,530 --> 00:12:00,370
really<font color="#E5E5E5"> is</font><font color="#CCCCCC"> defense plug-in turns</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> is</font>

247
00:11:59,650 --> 00:12:03,790
<font color="#E5E5E5">pretty simple</font>

248
00:12:00,370 --> 00:12:08,050
<font color="#E5E5E5">it has it is a binary that has G RPC</font>

249
00:12:03,790 --> 00:12:10,300
server or maybe more servers<font color="#CCCCCC"> that that</font>

250
00:12:08,050 --> 00:12:13,359
is responsible<font color="#E5E5E5"> for tracking the resource</font>

251
00:12:10,300 --> 00:12:15,699
reporting it and doing the allocation

252
00:12:13,360 --> 00:12:18,430
for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> container itself there are</font><font color="#CCCCCC"> the</font>

253
00:12:15,700 --> 00:12:20,860
<font color="#E5E5E5">three endpoints</font><font color="#CCCCCC"> one of them is register</font>

254
00:12:18,430 --> 00:12:23,020
<font color="#E5E5E5">so first when the device</font><font color="#CCCCCC"> plug-in boots</font>

255
00:12:20,860 --> 00:12:25,510
out you need to<font color="#CCCCCC"> register yourself with</font>

256
00:12:23,020 --> 00:12:27,970
<font color="#E5E5E5">the kubernetes notation with</font><font color="#CCCCCC"> cubelet so</font>

257
00:12:25,510 --> 00:12:30,160
you do<font color="#E5E5E5"> that via the register API very</font>

258
00:12:27,970 --> 00:12:33,820
<font color="#E5E5E5">tell cubelet oh hello I'm a device</font>

259
00:12:30,160 --> 00:12:38,319
<font color="#E5E5E5">plug-in I track this resource just keep</font>

260
00:12:33,820 --> 00:12:41,050
me in mind there's a locate call which

261
00:12:38,320 --> 00:12:44,340
is the one<font color="#CCCCCC"> that's actually</font><font color="#E5E5E5"> called right</font>

262
00:12:41,050 --> 00:12:47,439
<font color="#E5E5E5">when you were creating</font><font color="#CCCCCC"> the container</font><font color="#E5E5E5"> and</font>

263
00:12:44,340 --> 00:12:48,940
it needs to<font color="#CCCCCC"> get</font><font color="#E5E5E5"> the device so this is</font>

264
00:12:47,440 --> 00:12:52,060
the place where you can have some kind

265
00:12:48,940 --> 00:12:54,520
<font color="#CCCCCC">of</font><font color="#E5E5E5"> setup and just make sure</font><font color="#CCCCCC"> that the</font>

266
00:12:52,060 --> 00:12:57,069
<font color="#E5E5E5">device is</font><font color="#CCCCCC"> in correct</font><font color="#E5E5E5"> state and you can</font>

267
00:12:54,520 --> 00:12:59,170
<font color="#CCCCCC">then pass it</font><font color="#E5E5E5"> to the container and</font>

268
00:12:57,070 --> 00:13:02,290
<font color="#E5E5E5">there's of course listed</font><font color="#CCCCCC"> list and watch</font>

269
00:12:59,170 --> 00:13:07,329
that is used<font color="#E5E5E5"> for tracking of the</font>

270
00:13:02,290 --> 00:13:10,689
<font color="#E5E5E5">resources in the device</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> I'm not</font>

271
00:13:07,330 --> 00:13:12,490
<font color="#CCCCCC">sure there could be fourth call because</font>

272
00:13:10,690 --> 00:13:15,930
<font color="#CCCCCC">its current in implementation that's</font>

273
00:13:12,490 --> 00:13:19,150
called initialize and it injects<font color="#E5E5E5"> right</font>

274
00:13:15,930 --> 00:13:21,400
it that's a call that would<font color="#E5E5E5"> be called</font>

275
00:13:19,150 --> 00:13:23,500
right<font color="#E5E5E5"> before the container is started so</font>

276
00:13:21,400 --> 00:13:24,050
you don't<font color="#E5E5E5"> really</font><font color="#CCCCCC"> have to do device setup</font>

277
00:13:23,500 --> 00:13:25,640
in a locker

278
00:13:24,050 --> 00:13:30,500
but it's still in discussion in

279
00:13:25,640 --> 00:13:33,080
kubernetes itself<font color="#E5E5E5"> so the fun bit is we</font>

280
00:13:30,500 --> 00:13:35,420
<font color="#E5E5E5">have one G RPC server /</font><font color="#CCCCCC"> tracked resource</font>

281
00:13:33,080 --> 00:13:37,430
<font color="#E5E5E5">this is great if the resource</font><font color="#CCCCCC"> you're</font>

282
00:13:35,420 --> 00:13:41,680
exposing<font color="#E5E5E5"> is something that you could</font>

283
00:13:37,430 --> 00:13:44,120
<font color="#E5E5E5">call my GPU</font><font color="#CCCCCC"> or whatever</font><font color="#E5E5E5"> the problem with</font>

284
00:13:41,680 --> 00:13:47,300
virtualization<font color="#E5E5E5"> and devices is that</font><font color="#CCCCCC"> you</font>

285
00:13:44,120 --> 00:13:50,420
<font color="#CCCCCC">probably want to expose multiple devices</font>

286
00:13:47,300 --> 00:13:52,339
<font color="#CCCCCC">and I have this code that I really like</font>

287
00:13:50,420 --> 00:13:54,290
<font color="#E5E5E5">you don't really have to understand it</font>

288
00:13:52,339 --> 00:13:58,269
but the thing is<font color="#E5E5E5"> there's a</font><font color="#CCCCCC"> for plug-in</font>

289
00:13:54,290 --> 00:14:01,699
<font color="#E5E5E5">sorry for cycle that runs for each</font>

290
00:13:58,269 --> 00:14:05,420
device in the system and starts the

291
00:14:01,700 --> 00:14:07,820
actual G RPC server so in the end<font color="#CCCCCC"> my</font>

292
00:14:05,420 --> 00:14:11,089
machine<font color="#E5E5E5"> has roughly 50 PCI Express</font>

293
00:14:07,820 --> 00:14:14,209
devices and this thing<font color="#CCCCCC"> just starts 50 G</font>

294
00:14:11,089 --> 00:14:19,399
RPC servers<font color="#CCCCCC"> just to</font><font color="#E5E5E5"> expose something</font>

295
00:14:14,209 --> 00:14:22,839
<font color="#E5E5E5">like this</font><font color="#CCCCCC"> that did this not perfect it's</font>

296
00:14:19,399 --> 00:14:26,149
still alpha let's say it will get better

297
00:14:22,839 --> 00:14:28,070
<font color="#E5E5E5">but yeah when we actually have the</font>

298
00:14:26,149 --> 00:14:31,270
device<font color="#CCCCCC"> plug-in that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know is able to</font>

299
00:14:28,070 --> 00:14:34,279
in this case track PCI Express devices

300
00:14:31,270 --> 00:14:36,819
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is what you get in the Noda</font>

301
00:14:34,279 --> 00:14:39,380
<font color="#E5E5E5">description of the kubernetes node and</font>

302
00:14:36,820 --> 00:14:41,720
there's just<font color="#E5E5E5"> like some namespace</font><font color="#CCCCCC"> which</font>

303
00:14:39,380 --> 00:14:44,420
happens to me<font color="#E5E5E5"> by which happens to be my</font>

304
00:14:41,720 --> 00:14:47,570
<font color="#CCCCCC">blog</font><font color="#E5E5E5"> right now but then what this plugin</font>

305
00:14:44,420 --> 00:14:51,020
exposed<font color="#CCCCCC"> is the actual vendor ID and</font>

306
00:14:47,570 --> 00:14:52,850
device ID<font color="#CCCCCC"> couple</font><font color="#E5E5E5"> I really wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font>

307
00:14:51,020 --> 00:14:54,319
semicolon but<font color="#E5E5E5"> you can't use semicolon so</font>

308
00:14:52,850 --> 00:14:59,029
it looks<font color="#E5E5E5"> different</font><font color="#CCCCCC"> then I'll specie I</font>

309
00:14:54,320 --> 00:15:00,950
but<font color="#E5E5E5"> I mean it we get there and then</font>

310
00:14:59,029 --> 00:15:04,279
there's the number<font color="#E5E5E5"> of resources that</font><font color="#CCCCCC"> are</font>

311
00:15:00,950 --> 00:15:08,029
actually available in case of PCF

312
00:15:04,279 --> 00:15:09,800
Express you'll usually see multiple one

313
00:15:08,029 --> 00:15:12,410
devices<font color="#E5E5E5"> because a lot of</font><font color="#CCCCCC"> the devices are</font>

314
00:15:09,800 --> 00:15:14,329
just<font color="#E5E5E5"> like CPU temperature sensors and</font>

315
00:15:12,410 --> 00:15:16,850
stuff<font color="#CCCCCC"> and these are not</font><font color="#E5E5E5"> really great</font><font color="#CCCCCC"> for</font>

316
00:15:14,329 --> 00:15:19,300
assignment<font color="#E5E5E5"> on the other hand the ones</font>

317
00:15:16,850 --> 00:15:22,910
<font color="#E5E5E5">that you see for example in quantity for</font>

318
00:15:19,300 --> 00:15:24,560
<font color="#E5E5E5">maybe network interfaces or something</font>

319
00:15:22,910 --> 00:15:29,620
like that this one is definitely<font color="#E5E5E5"> a</font>

320
00:15:24,560 --> 00:15:32,869
network interface now that you have this

321
00:15:29,620 --> 00:15:35,180
stuff exposed at<font color="#CCCCCC"> the know level you need</font>

322
00:15:32,870 --> 00:15:36,560
<font color="#E5E5E5">to get that to do actual running</font>

323
00:15:35,180 --> 00:15:39,109
<font color="#E5E5E5">containers</font>

324
00:15:36,560 --> 00:15:42,829
and in this case this is<font color="#E5E5E5"> the ports back</font>

325
00:15:39,110 --> 00:15:46,480
so specification how to have your<font color="#E5E5E5"> port</font>

326
00:15:42,830 --> 00:15:49,400
built and it's similar to<font color="#E5E5E5"> the actual</font>

327
00:15:46,480 --> 00:15:51,650
<font color="#CCCCCC">Nvidia device plug-in where you just</font>

328
00:15:49,400 --> 00:15:54,290
have the request for the specific device

329
00:15:51,650 --> 00:15:57,500
there's one like implementation detail

330
00:15:54,290 --> 00:15:58,819
that the requests<font color="#E5E5E5"> and limit needs to</font>

331
00:15:57,500 --> 00:16:01,580
equal<font color="#E5E5E5"> each other for it to work properly</font>

332
00:15:58,820 --> 00:16:06,110
but again that's<font color="#CCCCCC"> something that might be</font>

333
00:16:01,580 --> 00:16:09,380
improved<font color="#E5E5E5"> later on so what these plugins</font>

334
00:16:06,110 --> 00:16:13,160
are<font color="#E5E5E5"> so they're really flexible tool to</font>

335
00:16:09,380 --> 00:16:14,779
advertise any resource<font color="#E5E5E5"> it does look like</font>

336
00:16:13,160 --> 00:16:18,770
<font color="#CCCCCC">they're they were initially</font><font color="#E5E5E5"> built to</font>

337
00:16:14,779 --> 00:16:22,880
just you know expose one resource<font color="#E5E5E5"> that</font>

338
00:16:18,770 --> 00:16:25,730
is<font color="#E5E5E5"> cloud ready</font><font color="#CCCCCC"> on the other hand you can</font>

339
00:16:22,880 --> 00:16:27,770
<font color="#CCCCCC">heck</font><font color="#E5E5E5"> around it and</font><font color="#CCCCCC"> really think of</font><font color="#E5E5E5"> the</font>

340
00:16:25,730 --> 00:16:28,790
think of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> things you can advertise</font>

341
00:16:27,770 --> 00:16:32,540
<font color="#E5E5E5">that way</font>

342
00:16:28,790 --> 00:16:35,630
so take<font color="#CCCCCC"> def KVM so def KVM happens to be</font>

343
00:16:32,540 --> 00:16:39,140
a device<font color="#CCCCCC"> that we might just</font><font color="#E5E5E5"> expose this</font>

344
00:16:35,630 --> 00:16:40,730
way and mount it<font color="#E5E5E5"> into container that is</font>

345
00:16:39,140 --> 00:16:44,800
great because<font color="#CCCCCC"> then the</font><font color="#E5E5E5"> container could</font>

346
00:16:40,730 --> 00:16:46,910
contain a<font color="#CCCCCC"> VM</font><font color="#E5E5E5"> actual VM that</font><font color="#CCCCCC"> would run so</font>

347
00:16:44,800 --> 00:16:49,010
that's<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> very cool about device</font>

348
00:16:46,910 --> 00:16:51,860
<font color="#CCCCCC">plugins</font><font color="#E5E5E5"> like it's it's flexible enough</font>

349
00:16:49,010 --> 00:16:54,050
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you can really expose anything that</font>

350
00:16:51,860 --> 00:16:56,180
you can represent<font color="#E5E5E5"> by a path in the</font>

351
00:16:54,050 --> 00:16:59,540
<font color="#E5E5E5">system make sure it's in the container</font>

352
00:16:56,180 --> 00:17:02,089
<font color="#E5E5E5">and the whole scheduling and tracking of</font>

353
00:16:59,540 --> 00:17:05,810
the<font color="#E5E5E5"> resource is something you get for</font>

354
00:17:02,089 --> 00:17:08,900
<font color="#E5E5E5">free something</font><font color="#CCCCCC"> to keep in mind is that</font>

355
00:17:05,810 --> 00:17:11,720
there are some<font color="#E5E5E5"> rough edges</font><font color="#CCCCCC"> for example</font>

356
00:17:08,900 --> 00:17:15,110
when when the container<font color="#E5E5E5"> that used the</font>

357
00:17:11,720 --> 00:17:17,780
device dies<font color="#E5E5E5"> there's no signal of of that</font>

358
00:17:15,109 --> 00:17:20,300
event<font color="#E5E5E5"> back to the device</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> so if</font>

359
00:17:17,780 --> 00:17:25,310
you would like<font color="#E5E5E5"> to do some cleanup</font><font color="#CCCCCC"> you're</font>

360
00:17:20,300 --> 00:17:30,879
<font color="#E5E5E5">currently out</font><font color="#CCCCCC"> of luck now Qbert</font>

361
00:17:25,310 --> 00:17:37,870
so who has heard of Qbert<font color="#E5E5E5"> here right</font>

362
00:17:30,880 --> 00:17:41,660
<font color="#CCCCCC">it's improving so giver</font><font color="#E5E5E5"> the idea is</font>

363
00:17:37,870 --> 00:17:44,330
heaven kubernetes<font color="#CCCCCC"> add-on that allows you</font>

364
00:17:41,660 --> 00:17:47,240
<font color="#E5E5E5">to run VMs in kubernetes</font><font color="#CCCCCC"> in the same</font>

365
00:17:44,330 --> 00:17:48,770
<font color="#CCCCCC">cluster</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> the same resources</font><font color="#E5E5E5"> or</font>

366
00:17:47,240 --> 00:17:50,690
similar resources<font color="#E5E5E5"> that you would</font>

367
00:17:48,770 --> 00:17:54,500
normally<font color="#CCCCCC"> use</font>

368
00:17:50,690 --> 00:17:56,560
to do that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> has some custom resources</font>

369
00:17:54,500 --> 00:17:58,910
itself<font color="#E5E5E5"> for the virtual</font><font color="#CCCCCC"> machine itself</font>

370
00:17:56,560 --> 00:18:01,730
<font color="#CCCCCC">you could see the dog before</font><font color="#E5E5E5"> had</font>

371
00:17:58,910 --> 00:18:04,460
migration for example and several

372
00:18:01,730 --> 00:18:07,700
services that are there to manage<font color="#E5E5E5"> the</font>

373
00:18:04,460 --> 00:18:09,950
resources<font color="#E5E5E5"> so this thing is based on</font>

374
00:18:07,700 --> 00:18:12,050
<font color="#CCCCCC">livered and this is very all comes</font>

375
00:18:09,950 --> 00:18:15,140
together because<font color="#E5E5E5"> we have this device</font>

376
00:18:12,050 --> 00:18:16,850
assignment for<font color="#E5E5E5"> VMs truly weird and we</font>

377
00:18:15,140 --> 00:18:21,100
have device plugins in the kubernetes

378
00:18:16,850 --> 00:18:25,250
<font color="#E5E5E5">right so this thing starts to make</font><font color="#CCCCCC"> sense</font>

379
00:18:21,100 --> 00:18:28,010
<font color="#E5E5E5">to have in</font><font color="#CCCCCC"> one place and this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

380
00:18:25,250 --> 00:18:32,960
<font color="#CCCCCC">actual architectural diagram and this</font><font color="#E5E5E5"> is</font>

381
00:18:28,010 --> 00:18:37,550
<font color="#E5E5E5">really sad thing</font><font color="#CCCCCC"> it was up to date five</font>

382
00:18:32,960 --> 00:18:39,290
days ago<font color="#E5E5E5"> but it's now</font><font color="#CCCCCC"> outdated so few</font>

383
00:18:37,550 --> 00:18:41,690
<font color="#E5E5E5">things have changed</font><font color="#CCCCCC"> but anyway this is</font>

384
00:18:39,290 --> 00:18:44,810
<font color="#CCCCCC">the whole</font><font color="#E5E5E5"> architecture</font><font color="#CCCCCC"> or you can see</font>

385
00:18:41,690 --> 00:18:48,410
there's extra service close to the API

386
00:18:44,810 --> 00:18:50,060
server that handles our cost requests on

387
00:18:48,410 --> 00:18:52,400
the<font color="#E5E5E5"> other hand we have a service that's</font>

388
00:18:50,060 --> 00:18:55,220
running<font color="#E5E5E5"> alongside cubelet that handles</font>

389
00:18:52,400 --> 00:18:57,530
the node<font color="#E5E5E5"> level and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> no level is the</font>

390
00:18:55,220 --> 00:18:59,630
important<font color="#E5E5E5"> part here it's called vert</font>

391
00:18:57,530 --> 00:19:03,020
<font color="#CCCCCC">Handler</font><font color="#E5E5E5"> and it previously talked to</font>

392
00:18:59,630 --> 00:19:06,470
<font color="#E5E5E5">labor D to actually inject container to</font>

393
00:19:03,020 --> 00:19:09,950
inject VMs into containers<font color="#E5E5E5"> this</font><font color="#CCCCCC"> has</font>

394
00:19:06,470 --> 00:19:12,200
<font color="#CCCCCC">changed</font><font color="#E5E5E5"> and actually the Liberty is</font>

395
00:19:09,950 --> 00:19:15,260
running in each port where VMs running

396
00:19:12,200 --> 00:19:16,880
<font color="#E5E5E5">so this that's a bit of difference it</font>

397
00:19:15,260 --> 00:19:22,070
doesn't<font color="#CCCCCC"> really</font><font color="#E5E5E5"> change the way we can do</font>

398
00:19:16,880 --> 00:19:25,280
devices on<font color="#CCCCCC"> window</font><font color="#E5E5E5"> so how can you get</font>

399
00:19:22,070 --> 00:19:28,010
devices there turns out the whole<font color="#CCCCCC"> thing</font>

400
00:19:25,280 --> 00:19:31,580
we need<font color="#CCCCCC"> to do is you know</font><font color="#E5E5E5"> just create a</font>

401
00:19:28,010 --> 00:19:35,450
device<font color="#E5E5E5"> plug in and some way of</font>

402
00:19:31,580 --> 00:19:37,970
transforming<font color="#E5E5E5"> the idea that there are</font>

403
00:19:35,450 --> 00:19:41,960
some<font color="#E5E5E5"> devices in the in the port to</font>

404
00:19:37,970 --> 00:19:45,440
deliver itself so the device<font color="#CCCCCC"> plugin</font>

405
00:19:41,960 --> 00:19:48,140
already exists it was<font color="#E5E5E5"> recently moved so</font>

406
00:19:45,440 --> 00:19:51,140
<font color="#CCCCCC">it was previously</font><font color="#E5E5E5"> in my personal github</font>

407
00:19:48,140 --> 00:19:54,950
repo but now it's<font color="#E5E5E5"> under</font><font color="#CCCCCC"> Cubert github</font>

408
00:19:51,140 --> 00:20:00,680
repo<font color="#CCCCCC"> you can fetch it you can try it it</font>

409
00:19:54,950 --> 00:20:04,370
pretty<font color="#E5E5E5"> much works mostly but we will</font>

410
00:20:00,680 --> 00:20:06,890
come to that<font color="#E5E5E5"> but</font><font color="#CCCCCC"> what it does is first</font>

411
00:20:04,370 --> 00:20:10,189
you have<font color="#E5E5E5"> to ensure</font><font color="#CCCCCC"> that vfi OPC is</font>

412
00:20:06,890 --> 00:20:12,560
actually loaded on the host<font color="#E5E5E5"> this already</font>

413
00:20:10,190 --> 00:20:15,110
<font color="#E5E5E5">makes it pretty evil thing because it</font>

414
00:20:12,560 --> 00:20:17,149
runs modprobe inside containers so you

415
00:20:15,110 --> 00:20:19,990
<font color="#E5E5E5">have to make sure that</font><font color="#CCCCCC"> the container has</font>

416
00:20:17,150 --> 00:20:22,760
correct capabilities that<font color="#E5E5E5"> it's</font>

417
00:20:19,990 --> 00:20:25,610
privileged<font color="#E5E5E5"> so pretty evil stuff already</font>

418
00:20:22,760 --> 00:20:29,030
<font color="#CCCCCC">and we are at</font><font color="#E5E5E5"> the first point</font><font color="#CCCCCC"> the next</font>

419
00:20:25,610 --> 00:20:32,090
<font color="#E5E5E5">part is</font><font color="#CCCCCC"> the device tree</font><font color="#E5E5E5"> at least for PC</font>

420
00:20:29,030 --> 00:20:34,160
<font color="#CCCCCC">is nicely</font><font color="#E5E5E5"> exposed</font><font color="#CCCCCC"> under CSFs</font><font color="#E5E5E5"> so we can</font>

421
00:20:32,090 --> 00:20:38,780
just reverse the path you<font color="#CCCCCC"> see this</font><font color="#E5E5E5"> boss</font>

422
00:20:34,160 --> 00:20:41,480
PCI<font color="#E5E5E5"> and devices and get some info about</font>

423
00:20:38,780 --> 00:20:42,020
<font color="#E5E5E5">each device there so you can get the</font>

424
00:20:41,480 --> 00:20:46,520
vendor ID

425
00:20:42,020 --> 00:20:48,350
<font color="#CCCCCC">device ID and the iommu group</font><font color="#E5E5E5"> and then</font>

426
00:20:46,520 --> 00:20:52,340
there's<font color="#CCCCCC"> just the</font><font color="#E5E5E5"> G RPC part where it's</font>

427
00:20:48,350 --> 00:20:55,639
reported back to<font color="#E5E5E5"> queue blood that is</font>

428
00:20:52,340 --> 00:20:57,290
what we have it turns out there's the

429
00:20:55,640 --> 00:20:58,580
<font color="#E5E5E5">amount of things we don't have is</font>

430
00:20:57,290 --> 00:21:01,909
probably<font color="#E5E5E5"> bigger than the amount of</font>

431
00:20:58,580 --> 00:21:05,120
things we have and so one of<font color="#E5E5E5"> the missing</font>

432
00:21:01,910 --> 00:21:07,070
parts<font color="#CCCCCC"> is the iommu group awareness</font><font color="#E5E5E5"> this</font>

433
00:21:05,120 --> 00:21:09,530
<font color="#E5E5E5">turns out to</font><font color="#CCCCCC"> be really tricky</font><font color="#E5E5E5"> in case of</font>

434
00:21:07,070 --> 00:21:10,250
device<font color="#E5E5E5"> plugins because they really work</font>

435
00:21:09,530 --> 00:21:15,889
on

436
00:21:10,250 --> 00:21:18,440
pair device<font color="#E5E5E5"> fragments</font><font color="#CCCCCC"> so you can't</font>

437
00:21:15,890 --> 00:21:21,500
really say oh this device is<font color="#CCCCCC"> actually</font>

438
00:21:18,440 --> 00:21:25,850
bound<font color="#E5E5E5"> to another device this might be</font>

439
00:21:21,500 --> 00:21:28,130
worked around by having a health

440
00:21:25,850 --> 00:21:29,870
<font color="#CCCCCC">purporting of each device today is one</font>

441
00:21:28,130 --> 00:21:32,090
thing<font color="#CCCCCC"> i forgot about device</font><font color="#E5E5E5"> plugins they</font>

442
00:21:29,870 --> 00:21:36,129
also allow you to check health of

443
00:21:32,090 --> 00:21:40,129
devices and this might be<font color="#E5E5E5"> abusable to</font>

444
00:21:36,130 --> 00:21:42,470
plug in the<font color="#CCCCCC"> immu</font><font color="#E5E5E5"> group awareness so you</font>

445
00:21:40,130 --> 00:21:44,570
would rip our report devices<font color="#E5E5E5"> within one</font>

446
00:21:42,470 --> 00:21:46,940
group<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are not to be assigned</font><font color="#E5E5E5"> as</font>

447
00:21:44,570 --> 00:21:47,980
unhealthy<font color="#E5E5E5"> it's kind of</font><font color="#CCCCCC"> a key but</font><font color="#E5E5E5"> it</font>

448
00:21:46,940 --> 00:21:51,650
might work

449
00:21:47,980 --> 00:21:55,790
maybe<font color="#CCCCCC"> a cleaner solution is</font><font color="#E5E5E5"> coming in</font>

450
00:21:51,650 --> 00:21:58,370
<font color="#CCCCCC">cuber Nettie's 111 hopefully and that is</font>

451
00:21:55,790 --> 00:22:00,649
device topology<font color="#E5E5E5"> let that would be really</font>

452
00:21:58,370 --> 00:22:03,000
<font color="#CCCCCC">nice because</font><font color="#E5E5E5"> if you would have the</font>

453
00:22:00,650 --> 00:22:05,940
device topology<font color="#E5E5E5"> expressed</font>

454
00:22:03,000 --> 00:22:08,940
note you could say that<font color="#E5E5E5"> I want this</font>

455
00:22:05,940 --> 00:22:12,330
device<font color="#CCCCCC"> and I expect</font><font color="#E5E5E5"> it to be bound to</font>

456
00:22:08,940 --> 00:22:15,060
multiple<font color="#E5E5E5"> other devices even there might</font>

457
00:22:12,330 --> 00:22:16,889
be some<font color="#CCCCCC"> hoes</font><font color="#E5E5E5"> with that device but just</font>

458
00:22:15,060 --> 00:22:20,970
different<font color="#CCCCCC"> Porgy and in</font><font color="#E5E5E5"> that case this</font>

459
00:22:16,890 --> 00:22:22,890
would work really nicely<font color="#E5E5E5"> now obviously</font>

460
00:22:20,970 --> 00:22:26,730
there's the<font color="#E5E5E5"> device the allocation</font>

461
00:22:22,890 --> 00:22:29,310
problem<font color="#E5E5E5"> so the the fun part with VF</font><font color="#CCCCCC"> io</font>

462
00:22:26,730 --> 00:22:33,060
PCI is that if you if you bind the

463
00:22:29,310 --> 00:22:34,800
device to it<font color="#CCCCCC"> the device is then unusable</font>

464
00:22:33,060 --> 00:22:37,050
<font color="#CCCCCC">for what it does</font><font color="#E5E5E5"> what it has</font><font color="#CCCCCC"> done</font>

465
00:22:34,800 --> 00:22:41,129
previously so if you<font color="#E5E5E5"> bind an</font><font color="#CCCCCC"> ache to VF</font>

466
00:22:37,050 --> 00:22:42,540
<font color="#CCCCCC">IO PCI then it doesn't really</font><font color="#E5E5E5"> work a</font>

467
00:22:41,130 --> 00:22:45,750
snake in the system<font color="#CCCCCC"> anymore it's just</font>

468
00:22:42,540 --> 00:22:48,180
<font color="#E5E5E5">this stub that</font><font color="#CCCCCC"> that is to be</font><font color="#E5E5E5"> passed to</font>

469
00:22:45,750 --> 00:22:52,080
the<font color="#E5E5E5"> VM so in case you would</font><font color="#CCCCCC"> want to</font>

470
00:22:48,180 --> 00:22:55,050
actually deallocate that device after<font color="#CCCCCC"> it</font>

471
00:22:52,080 --> 00:22:58,260
<font color="#E5E5E5">after the VM is done running there's no</font>

472
00:22:55,050 --> 00:23:02,399
way to do<font color="#CCCCCC"> that currently funnily enough</font>

473
00:22:58,260 --> 00:23:05,790
I was thinking a bit about<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and it</font>

474
00:23:02,400 --> 00:23:09,450
turns out that the<font color="#E5E5E5"> VF i endpoint itself</font>

475
00:23:05,790 --> 00:23:14,639
is just open by<font color="#CCCCCC"> eme so you could run</font>

476
00:23:09,450 --> 00:23:17,970
<font color="#E5E5E5">inotify against that</font><font color="#CCCCCC"> endpoint and</font><font color="#E5E5E5"> track</font>

477
00:23:14,640 --> 00:23:19,920
the close call so when the file<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be</font>

478
00:23:17,970 --> 00:23:24,900
closed you can<font color="#E5E5E5"> deallocate the actual via</font>

479
00:23:19,920 --> 00:23:26,970
<font color="#E5E5E5">file part now this is this could solve a</font>

480
00:23:24,900 --> 00:23:29,250
<font color="#E5E5E5">lot it's still not perfect because some</font>

481
00:23:26,970 --> 00:23:32,190
devices<font color="#E5E5E5"> should not be the allocated so</font>

482
00:23:29,250 --> 00:23:34,140
certain GPUs for<font color="#E5E5E5"> example if</font><font color="#CCCCCC"> there</font>

483
00:23:32,190 --> 00:23:36,840
<font color="#E5E5E5">rebounds to their original driver</font>

484
00:23:34,140 --> 00:23:40,200
actually<font color="#CCCCCC"> rip with your</font><font color="#E5E5E5"> host that's great</font>

485
00:23:36,840 --> 00:23:44,459
<font color="#CCCCCC">and also</font><font color="#E5E5E5"> what we don't really have is</font>

486
00:23:40,200 --> 00:23:45,930
the edge case handling this<font color="#E5E5E5"> is something</font>

487
00:23:44,460 --> 00:23:47,580
that's<font color="#E5E5E5"> just really missing</font><font color="#CCCCCC"> from the</font>

488
00:23:45,930 --> 00:23:49,680
source part it's not<font color="#E5E5E5"> missing anything in</font>

489
00:23:47,580 --> 00:23:52,169
a kubernetes<font color="#E5E5E5"> but you still have to take</font>

490
00:23:49,680 --> 00:23:55,590
<font color="#CCCCCC">care</font><font color="#E5E5E5"> of you know when when the</font><font color="#CCCCCC"> cubelet</font>

491
00:23:52,170 --> 00:23:59,810
dies<font color="#CCCCCC"> when the device plug-in dies</font><font color="#E5E5E5"> this</font>

492
00:23:55,590 --> 00:24:04,370
really<font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> be added</font><font color="#E5E5E5"> so how do we</font>

493
00:23:59,810 --> 00:24:07,980
bridge these<font color="#E5E5E5"> two things on the API level</font>

494
00:24:04,370 --> 00:24:09,899
so the first thing we have it's not

495
00:24:07,980 --> 00:24:12,150
exactly what we have<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just an idea</font>

496
00:24:09,900 --> 00:24:14,580
of what we could<font color="#CCCCCC"> have is</font><font color="#E5E5E5"> this</font>

497
00:24:12,150 --> 00:24:16,200
specification<font color="#E5E5E5"> of the device itself so we</font>

498
00:24:14,580 --> 00:24:18,899
request something<font color="#CCCCCC"> that has</font>

499
00:24:16,200 --> 00:24:23,519
<font color="#CCCCCC">mm</font><font color="#E5E5E5"> device thousand in the VM spec so</font>

500
00:24:18,899 --> 00:24:26,370
this is the<font color="#E5E5E5"> Qbert part we need to</font>

501
00:24:23,519 --> 00:24:30,659
translate<font color="#E5E5E5"> that into the actual pot</font>

502
00:24:26,370 --> 00:24:34,139
specification<font color="#E5E5E5"> right there's a tool for</font>

503
00:24:30,659 --> 00:24:36,330
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it's based on concept of kubernetes</font>

504
00:24:34,139 --> 00:24:39,539
initializers so<font color="#CCCCCC"> super neat this</font>

505
00:24:36,330 --> 00:24:42,320
initializer is again<font color="#E5E5E5"> a thing that runs</font>

506
00:24:39,539 --> 00:24:47,000
<font color="#E5E5E5">in the</font><font color="#CCCCCC"> cluster and it's able to mutate</font>

507
00:24:42,320 --> 00:24:49,620
the specification before it is posted<font color="#CCCCCC"> or</font>

508
00:24:47,000 --> 00:24:52,260
before<font color="#E5E5E5"> it is recognized in the API</font>

509
00:24:49,620 --> 00:24:54,959
server and you<font color="#CCCCCC"> can do</font><font color="#E5E5E5"> these to do pretty</font>

510
00:24:52,260 --> 00:24:58,429
much<font color="#E5E5E5"> any mutation of the spec itself so</font>

511
00:24:54,960 --> 00:25:01,260
in this case we could<font color="#E5E5E5"> actually try and</font>

512
00:24:58,429 --> 00:25:03,870
<font color="#E5E5E5">initialize every port submitted to the</font>

513
00:25:01,260 --> 00:25:06,779
cluster look to the corresponding<font color="#CCCCCC"> VM</font>

514
00:25:03,870 --> 00:25:09,000
resource and then do the device transfer

515
00:25:06,779 --> 00:25:13,679
which is<font color="#E5E5E5"> kind of trivial it's almost a</font>

516
00:25:09,000 --> 00:25:16,049
string operation it might not be<font color="#E5E5E5"> needed</font>

517
00:25:13,679 --> 00:25:19,740
at all<font color="#CCCCCC"> there's the fun part</font><font color="#E5E5E5"> it's just</font>

518
00:25:16,049 --> 00:25:21,539
<font color="#CCCCCC">very clean kubernetes</font><font color="#E5E5E5"> way but since</font><font color="#CCCCCC"> vo</font>

519
00:25:19,740 --> 00:25:25,139
<font color="#CCCCCC">we already have the verb handler</font><font color="#E5E5E5"> and</font>

520
00:25:21,539 --> 00:25:27,600
<font color="#CCCCCC">word controller the cluster element</font><font color="#E5E5E5"> this</font>

521
00:25:25,139 --> 00:25:29,820
thing<font color="#E5E5E5"> could be done on</font><font color="#CCCCCC"> that level</font><font color="#E5E5E5"> so</font>

522
00:25:27,600 --> 00:25:34,519
<font color="#E5E5E5">yeah this was just an</font><font color="#CCCCCC"> idea that might</font>

523
00:25:29,820 --> 00:25:42,210
not make it to<font color="#E5E5E5"> real state in the future</font>

524
00:25:34,519 --> 00:25:46,769
so that's<font color="#E5E5E5"> it almost so we have the</font>

525
00:25:42,210 --> 00:25:50,299
device in the port we have<font color="#E5E5E5"> VM XML the</font>

526
00:25:46,769 --> 00:25:54,000
problem is livered expext addresses and

527
00:25:50,299 --> 00:25:56,429
in the port<font color="#E5E5E5"> we might not</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the</font>

528
00:25:54,000 --> 00:25:58,470
devices<font color="#E5E5E5"> device address properly</font>

529
00:25:56,429 --> 00:26:00,659
expressed like if<font color="#E5E5E5"> if the pot mounted the</font>

530
00:25:58,470 --> 00:26:02,850
<font color="#E5E5E5">hole says then every device in the</font>

531
00:26:00,659 --> 00:26:05,340
system would<font color="#E5E5E5"> be in that</font><font color="#CCCCCC"> says within</font>

532
00:26:02,850 --> 00:26:08,370
within<font color="#E5E5E5"> the container</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so how do you</font>

533
00:26:05,340 --> 00:26:10,139
figure out which<font color="#CCCCCC"> addresses which device</font>

534
00:26:08,370 --> 00:26:14,189
addresses are the ones<font color="#CCCCCC"> that you actually</font>

535
00:26:10,139 --> 00:26:17,549
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to assign and this is really just a</font>

536
00:26:14,190 --> 00:26:19,350
brain dump I'd say<font color="#E5E5E5"> so I was thinking I</font>

537
00:26:17,549 --> 00:26:21,389
<font color="#E5E5E5">would</font><font color="#CCCCCC"> like yeah initially you mount the</font>

538
00:26:19,350 --> 00:26:24,870
whole sis and that's<font color="#CCCCCC"> very good</font><font color="#E5E5E5"> the</font>

539
00:26:21,389 --> 00:26:27,870
<font color="#E5E5E5">problem of how do you find out addresses</font>

540
00:26:24,870 --> 00:26:30,760
of the devices<font color="#E5E5E5"> you could try and mount</font>

541
00:26:27,870 --> 00:26:33,070
just the soup<font color="#E5E5E5"> path just</font>

542
00:26:30,760 --> 00:26:36,820
but then there's problem because anyone

543
00:26:33,070 --> 00:26:39,159
else might require that<font color="#CCCCCC"> the port has the</font>

544
00:26:36,820 --> 00:26:42,250
<font color="#E5E5E5">whole sis</font><font color="#CCCCCC"> munted and that would get</font>

545
00:26:39,160 --> 00:26:47,860
<font color="#E5E5E5">overridden by that so yeah something</font>

546
00:26:42,250 --> 00:26:50,860
else like sidecar file for that<font color="#CCCCCC"> yeah I</font>

547
00:26:47,860 --> 00:26:53,530
guess we're<font color="#E5E5E5"> not there yet</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are just</font>

548
00:26:50,860 --> 00:26:56,020
<font color="#E5E5E5">ideas so if you think of</font><font color="#CCCCCC"> different way</font>

549
00:26:53,530 --> 00:27:00,490
that would<font color="#E5E5E5"> be cleaner</font><font color="#CCCCCC"> feel free to</font>

550
00:26:56,020 --> 00:27:05,560
comment so that's pretty much devices in

551
00:27:00,490 --> 00:27:08,470
<font color="#E5E5E5">Qbert in 40 minutes</font><font color="#CCCCCC"> it's quite a lot of</font>

552
00:27:05,560 --> 00:27:10,600
stuff but<font color="#CCCCCC"> that</font><font color="#E5E5E5"> these are the main parts</font>

553
00:27:08,470 --> 00:27:13,030
so there's a proposal how to do that

554
00:27:10,600 --> 00:27:16,480
if you're interested in in the whole

555
00:27:13,030 --> 00:27:19,180
device plugins or in Qbert<font color="#CCCCCC"> give it a</font>

556
00:27:16,480 --> 00:27:22,030
read<font color="#CCCCCC"> the</font><font color="#E5E5E5"> device plug in itself so that</font>

557
00:27:19,180 --> 00:27:24,490
<font color="#CCCCCC">that is now moved under</font><font color="#E5E5E5"> Qbert umbrella</font>

558
00:27:22,030 --> 00:27:27,550
<font color="#E5E5E5">then we have the initializer that I will</font>

559
00:27:24,490 --> 00:27:28,720
probably delete<font color="#CCCCCC"> someday and yeah that's</font>

560
00:27:27,550 --> 00:27:31,750
it for<font color="#CCCCCC"> me</font>

561
00:27:28,720 --> 00:27:34,210
any comments or suggestions about this

562
00:27:31,750 --> 00:27:40,120
<font color="#E5E5E5">approach and the whole state</font><font color="#CCCCCC"> of the</font>

563
00:27:34,210 --> 00:27:44,830
thing<font color="#E5E5E5"> are welcome so this is the real</font>

564
00:27:40,120 --> 00:27:47,229
summary<font color="#E5E5E5"> like</font><font color="#CCCCCC"> vm VMS are real and so is</font>

565
00:27:44,830 --> 00:27:51,270
<font color="#CCCCCC">the device assignment</font><font color="#E5E5E5"> it works if you</font>

566
00:27:47,230 --> 00:27:54,780
<font color="#CCCCCC">work around some</font><font color="#E5E5E5"> of the rough edges</font>

567
00:27:51,270 --> 00:27:54,780
that's the question<font color="#E5E5E5"> time</font>

568
00:28:00,800 --> 00:28:07,320
so the first question was if I have demo

569
00:28:03,750 --> 00:28:09,990
<font color="#CCCCCC">I can probably</font><font color="#E5E5E5"> show you demo after I</font>

570
00:28:07,320 --> 00:28:14,100
wouldn't run it here<font color="#E5E5E5"> because I'd have to</font>

571
00:28:09,990 --> 00:28:17,010
SSH over to my<font color="#E5E5E5"> host so</font><font color="#CCCCCC"> we can stop by</font>

572
00:28:14,100 --> 00:28:18,709
later and<font color="#E5E5E5"> I can show you</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> what was</font>

573
00:28:17,010 --> 00:28:21,270
<font color="#E5E5E5">the second question</font>

574
00:28:18,710 --> 00:28:22,770
<font color="#CCCCCC">USB not yet</font>

575
00:28:21,270 --> 00:28:26,490
give me like few hours and<font color="#CCCCCC"> I'll write</font>

576
00:28:22,770 --> 00:28:28,200
the device plug in for it<font color="#E5E5E5"> like that</font>

577
00:28:26,490 --> 00:28:32,490
there would be pretty<font color="#CCCCCC"> much the</font><font color="#E5E5E5"> same</font>

578
00:28:28,200 --> 00:28:34,500
problems as with PCI so again the<font color="#E5E5E5"> the</font>

579
00:28:32,490 --> 00:28:37,710
<font color="#E5E5E5">only exposing the devices would</font><font color="#CCCCCC"> be</font>

580
00:28:34,500 --> 00:28:42,030
pretty simple<font color="#CCCCCC"> again</font><font color="#E5E5E5"> it would start</font>

581
00:28:37,710 --> 00:28:43,740
around<font color="#CCCCCC"> 1g RPC server /</font><font color="#E5E5E5"> USB device</font><font color="#CCCCCC"> but ya</font>

582
00:28:42,030 --> 00:28:46,170
don't<font color="#CCCCCC"> plug in all the hundred</font>

583
00:28:43,740 --> 00:28:48,840
<font color="#CCCCCC">twenty-eight</font><font color="#E5E5E5"> devices and again you get</font>

584
00:28:46,170 --> 00:28:52,110
to problem how do you<font color="#E5E5E5"> actually find that</font>

585
00:28:48,840 --> 00:28:54,620
in the port<font color="#E5E5E5"> but yeah pretty</font><font color="#CCCCCC"> much the</font>

586
00:28:52,110 --> 00:28:54,620
<font color="#E5E5E5">same thing</font>

587
00:29:24,630 --> 00:29:30,220
yeah so I<font color="#CCCCCC"> won't</font><font color="#E5E5E5"> try to repeat</font><font color="#CCCCCC"> the short</font>

588
00:29:28,450 --> 00:29:32,440
part<font color="#E5E5E5"> of the question</font><font color="#CCCCCC"> so how is this</font>

589
00:29:30,220 --> 00:29:35,740
whole<font color="#CCCCCC"> thing really cloudy because device</font>

590
00:29:32,440 --> 00:29:38,500
assignment is anti patterns for<font color="#E5E5E5"> VMs</font><font color="#CCCCCC"> it's</font>

591
00:29:35,740 --> 00:29:43,300
kind of anti pattern for containers<font color="#E5E5E5"> -</font>

592
00:29:38,500 --> 00:29:46,150
did I<font color="#E5E5E5"> get it right yeah</font><font color="#CCCCCC"> it's it's not</font>

593
00:29:43,300 --> 00:29:49,300
really<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> generic for the general</font>

594
00:29:46,150 --> 00:29:50,800
cloud use case<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is really when</font>

595
00:29:49,300 --> 00:29:52,840
you're when you're when you have

596
00:29:50,800 --> 00:29:55,300
<font color="#E5E5E5">clustered that has very specific</font>

597
00:29:52,840 --> 00:29:57,760
workloads<font color="#CCCCCC"> it's not just about GPU so you</font>

598
00:29:55,300 --> 00:30:00,570
still have network interfaces<font color="#E5E5E5"> and that</font>

599
00:29:57,760 --> 00:30:03,550
is<font color="#CCCCCC"> happening in cube a lot right</font><font color="#E5E5E5"> how do</font>

600
00:30:00,570 --> 00:30:06,309
make your container have<font color="#E5E5E5"> super high</font>

601
00:30:03,550 --> 00:30:09,280
network performance<font color="#E5E5E5"> this is really for</font>

602
00:30:06,309 --> 00:30:12,129
<font color="#E5E5E5">the 5% of use cases that</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

603
00:30:09,280 --> 00:30:15,129
important to<font color="#E5E5E5"> you know to the people that</font>

604
00:30:12,130 --> 00:30:16,990
try to get this in so I wouldn't say

605
00:30:15,130 --> 00:30:18,910
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this is really general generic</font>

606
00:30:16,990 --> 00:30:20,710
<font color="#E5E5E5">cloud way of doing things</font>

607
00:30:18,910 --> 00:30:22,690
it's<font color="#E5E5E5"> really like if you have</font><font color="#CCCCCC"> special</font>

608
00:30:20,710 --> 00:30:26,230
<font color="#E5E5E5">specialized applications that's what</font>

609
00:30:22,690 --> 00:30:29,440
this is<font color="#E5E5E5"> for</font><font color="#CCCCCC"> but yeah I mean</font><font color="#E5E5E5"> we're trying</font>

610
00:30:26,230 --> 00:30:31,809
<font color="#E5E5E5">to</font><font color="#CCCCCC"> or I'm</font><font color="#E5E5E5"> trying to do it as cloudy as</font>

611
00:30:29,440 --> 00:30:33,850
possible and this whole device address

612
00:30:31,809 --> 00:30:36,940
manipulation it's it's just

613
00:30:33,850 --> 00:30:39,070
implementation detail<font color="#E5E5E5"> so if you were to</font>

614
00:30:36,940 --> 00:30:41,830
use<font color="#CCCCCC"> key word with devices unmanned</font><font color="#E5E5E5"> this</font>

615
00:30:39,070 --> 00:30:45,010
this whole thing<font color="#CCCCCC"> really</font><font color="#E5E5E5"> translates to</font>

616
00:30:41,830 --> 00:30:47,020
you know a few<font color="#CCCCCC"> slides back</font><font color="#E5E5E5"> where you</font>

617
00:30:45,010 --> 00:30:49,570
would<font color="#CCCCCC"> just specify this</font><font color="#E5E5E5"> and we do all</font>

618
00:30:47,020 --> 00:30:52,650
the magic<font color="#E5E5E5"> behind it and then you get</font>

619
00:30:49,570 --> 00:30:52,649
<font color="#CCCCCC">your device</font>

620
00:31:12,480 --> 00:31:21,370
yeah<font color="#E5E5E5"> okay the question is how</font><font color="#CCCCCC"> is this</font>

621
00:31:18,070 --> 00:31:23,710
integrated into<font color="#CCCCCC"> scheduler and how it</font>

622
00:31:21,370 --> 00:31:26,560
works with live migration<font color="#CCCCCC"> so the first</font>

623
00:31:23,710 --> 00:31:28,930
part<font color="#E5E5E5"> is great.i right I wrote a lot of</font>

624
00:31:26,560 --> 00:31:31,240
code for that<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> exactly zero lines of</font>

625
00:31:28,930 --> 00:31:34,540
code<font color="#E5E5E5"> the reason for that is</font><font color="#CCCCCC"> because this</font>

626
00:31:31,240 --> 00:31:37,030
plugs<font color="#E5E5E5"> into or the cube scheduler already</font>

627
00:31:34,540 --> 00:31:40,120
works with that it's<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to track the</font>

628
00:31:37,030 --> 00:31:41,860
resources that you know the node exposes

629
00:31:40,120 --> 00:31:43,179
this resource the<font color="#CCCCCC"> pot requires this</font>

630
00:31:41,860 --> 00:31:44,949
resource

631
00:31:43,180 --> 00:31:46,810
it just marriages this thing together

632
00:31:44,950 --> 00:31:49,870
and<font color="#E5E5E5"> then it's</font><font color="#CCCCCC"> able to find the</font><font color="#E5E5E5"> nodes</font>

633
00:31:46,810 --> 00:31:51,639
where the<font color="#E5E5E5"> resources are available</font><font color="#CCCCCC"> the</font>

634
00:31:49,870 --> 00:31:55,709
other<font color="#E5E5E5"> question is how this works with</font>

635
00:31:51,640 --> 00:31:55,710
live migration<font color="#E5E5E5"> the answer is it doesn't</font>

636
00:31:58,830 --> 00:32:03,240
any other questions or comments

637
00:32:23,390 --> 00:32:33,560
<font color="#CCCCCC">okay so I could be used specially USB</font>

638
00:32:26,970 --> 00:32:33,560
driver<font color="#CCCCCC"> - so it's USB over</font><font color="#E5E5E5"> a turret</font>

639
00:32:53,370 --> 00:33:01,050
yeah yeah so that there's<font color="#CCCCCC"> USB over IP</font>

640
00:32:57,150 --> 00:33:05,160
driver that<font color="#E5E5E5"> can be used to use USB over</font>

641
00:33:01,050 --> 00:33:07,889
IP<font color="#CCCCCC"> I think we could</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> with that</font>

642
00:33:05,160 --> 00:33:10,560
I just<font color="#E5E5E5"> I don't see all the challenges</font>

643
00:33:07,890 --> 00:33:13,230
<font color="#CCCCCC">that we would</font><font color="#E5E5E5"> have implementing it but</font>

644
00:33:10,560 --> 00:33:15,780
as long<font color="#CCCCCC"> as</font><font color="#E5E5E5"> again as long</font><font color="#CCCCCC"> as we can get</font>

645
00:33:13,230 --> 00:33:18,990
<font color="#E5E5E5">that represented as device path we could</font>

646
00:33:15,780 --> 00:33:20,310
probably get<font color="#CCCCCC"> it into</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> get it as a</font>

647
00:33:18,990 --> 00:33:24,090
device<font color="#CCCCCC"> plugin</font>

648
00:33:20,310 --> 00:33:26,610
the question is would you require<font color="#E5E5E5"> the</font>

649
00:33:24,090 --> 00:33:29,129
capability to<font color="#E5E5E5"> use the remote USB or</font>

650
00:33:26,610 --> 00:33:30,870
would you require the device itself to

651
00:33:29,130 --> 00:33:33,330
be present<font color="#E5E5E5"> you know this this would be</font>

652
00:33:30,870 --> 00:33:39,899
<font color="#CCCCCC">the</font><font color="#E5E5E5"> main pain point that maybe doesn't</font>

653
00:33:33,330 --> 00:33:42,679
really fit<font color="#E5E5E5"> kubernetes</font><font color="#CCCCCC"> right now but</font>

654
00:33:39,900 --> 00:33:42,680
there

655
00:34:04,460 --> 00:34:10,050
<font color="#E5E5E5">all right yeah the question is about</font>

656
00:34:07,290 --> 00:34:12,900
vendors and hardware compatibility<font color="#E5E5E5"> so</font>

657
00:34:10,050 --> 00:34:14,730
with the legacy<font color="#CCCCCC"> plug-in there could be</font>

658
00:34:12,900 --> 00:34:17,610
<font color="#CCCCCC">something I haven't really seen the</font>

659
00:34:14,730 --> 00:34:19,290
documentation itself<font color="#CCCCCC"> I think they state</font>

660
00:34:17,610 --> 00:34:22,380
<font color="#CCCCCC">that you need to have some kind</font><font color="#E5E5E5"> of GP</font>

661
00:34:19,290 --> 00:34:26,730
<font color="#E5E5E5">for them in case of</font><font color="#CCCCCC"> VF i/o</font><font color="#E5E5E5"> the thing is</font>

662
00:34:22,380 --> 00:34:30,540
<font color="#E5E5E5">we don't put any expectations on the GPU</font>

663
00:34:26,730 --> 00:34:32,280
itself<font color="#E5E5E5"> it's really</font><font color="#CCCCCC"> about about</font><font color="#E5E5E5"> the</font>

664
00:34:30,540 --> 00:34:36,300
vendor<font color="#CCCCCC"> and there is some documentation</font>

665
00:34:32,280 --> 00:34:39,270
<font color="#CCCCCC">about it we know which</font><font color="#E5E5E5"> devices work</font><font color="#CCCCCC"> we</font>

666
00:34:36,300 --> 00:34:42,150
know<font color="#E5E5E5"> devices that don't and there's also</font>

667
00:34:39,270 --> 00:34:44,009
class of devices<font color="#CCCCCC"> that tries to</font><font color="#E5E5E5"> block you</font>

668
00:34:42,150 --> 00:34:47,250
from assigning them and there<font color="#E5E5E5"> are</font>

669
00:34:44,010 --> 00:34:49,560
workarounds for<font color="#E5E5E5"> that so the list is that</font>

670
00:34:47,250 --> 00:34:51,480
there's<font color="#E5E5E5"> not a</font><font color="#CCCCCC"> single page like some of</font>

671
00:34:49,560 --> 00:34:54,900
it is in<font color="#CCCCCC"> upstream documentation for</font>

672
00:34:51,480 --> 00:34:58,020
<font color="#CCCCCC">overt</font><font color="#E5E5E5"> for example most</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> people</font>

673
00:34:54,900 --> 00:35:00,510
tried<font color="#E5E5E5"> that on VF io user</font><font color="#CCCCCC"> list</font>

674
00:34:58,020 --> 00:35:03,180
I guess went when vendors get into this

675
00:35:00,510 --> 00:35:05,700
more they might publish<font color="#E5E5E5"> something but</font>

676
00:35:03,180 --> 00:35:08,129
it's<font color="#E5E5E5"> not really case very having AMD GPU</font>

677
00:35:05,700 --> 00:35:11,640
would make<font color="#E5E5E5"> this unusable</font><font color="#CCCCCC"> it is still</font>

678
00:35:08,130 --> 00:35:14,150
<font color="#E5E5E5">usable</font><font color="#CCCCCC"> it just depends</font><font color="#E5E5E5"> on your rock</font>

679
00:35:11,640 --> 00:35:14,150
pretty much

680
00:35:24,920 --> 00:35:33,390
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> is if I use</font><font color="#E5E5E5"> this in</font>

681
00:35:27,540 --> 00:35:36,509
production<font color="#E5E5E5"> the answer is no this is</font>

682
00:35:33,390 --> 00:35:39,180
<font color="#E5E5E5">still like early you can see that some</font>

683
00:35:36,510 --> 00:35:42,000
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> issues are still unsolved</font>

684
00:35:39,180 --> 00:35:43,950
so I'm just<font color="#E5E5E5"> developing this and trying</font>

685
00:35:42,000 --> 00:35:54,030
to<font color="#CCCCCC"> figure out how to make it work</font><font color="#E5E5E5"> on the</font>

686
00:35:43,950 --> 00:35:58,890
<font color="#E5E5E5">on the lowest level so like this whole</font>

687
00:35:54,030 --> 00:36:01,290
thing<font color="#CCCCCC"> or just the</font><font color="#E5E5E5"> whole thing</font><font color="#CCCCCC"> now I</font>

688
00:35:58,890 --> 00:36:05,279
could do some demo as I said like

689
00:36:01,290 --> 00:36:07,920
outside but I'd say not yet<font color="#E5E5E5"> like</font><font color="#CCCCCC"> the</font>

690
00:36:05,280 --> 00:36:10,200
<font color="#E5E5E5">there's no whole complete demo where I</font>

691
00:36:07,920 --> 00:36:17,040
would launch a note in Cuban<font color="#CCCCCC"> eighties</font>

692
00:36:10,200 --> 00:36:20,040
that<font color="#CCCCCC"> would yeah well you could</font><font color="#E5E5E5"> use that</font>

693
00:36:17,040 --> 00:36:21,590
for<font color="#E5E5E5"> like machine learning</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> probably</font>

694
00:36:20,040 --> 00:36:25,520
best demo for<font color="#E5E5E5"> it</font>

695
00:36:21,590 --> 00:36:28,440
<font color="#E5E5E5">Bitcoin definitely mine bitcoins on it</font>

696
00:36:25,520 --> 00:36:30,440
<font color="#CCCCCC">yeah this would</font><font color="#E5E5E5"> be the main demo use</font>

697
00:36:28,440 --> 00:36:33,930
cases

698
00:36:30,440 --> 00:36:42,230
yeah<font color="#E5E5E5"> Bitcoin as a</font><font color="#CCCCCC"> quote</font><font color="#E5E5E5"> great idea let's</font>

699
00:36:33,930 --> 00:36:42,230
<font color="#CCCCCC">practice that so that's it</font>

700
00:36:58,040 --> 00:37:04,830
yeah so I believe at least<font color="#E5E5E5"> for some</font>

701
00:37:02,370 --> 00:37:08,730
features<font color="#E5E5E5"> the OpenStack Nova is copying</font>

702
00:37:04,830 --> 00:37:10,740
<font color="#E5E5E5">my work from overt so this is a kind of</font>

703
00:37:08,730 --> 00:37:32,760
feedback loop<font color="#CCCCCC"> around how devices work</font>

704
00:37:10,740 --> 00:37:36,330
and maybe<font color="#CCCCCC"> Fabian wants to intercept now</font>

705
00:37:32,760 --> 00:37:39,090
so the answer<font color="#E5E5E5"> is that there is person</font>

706
00:37:36,330 --> 00:37:42,240
from OpenStack Nova<font color="#E5E5E5"> working on the same</font>

707
00:37:39,090 --> 00:37:44,760
things that<font color="#E5E5E5"> I work at and I say</font><font color="#CCCCCC"> were</font>

708
00:37:42,240 --> 00:37:47,029
<font color="#CCCCCC">just</font><font color="#E5E5E5"> like copying each other's work so</font><font color="#CCCCCC"> I</font>

709
00:37:44,760 --> 00:37:50,430
<font color="#E5E5E5">am aware of how OpenStack Nova does that</font>

710
00:37:47,030 --> 00:37:52,520
however<font color="#E5E5E5"> I did that in overt so there are</font>

711
00:37:50,430 --> 00:37:56,040
some<font color="#E5E5E5"> differences that</font><font color="#CCCCCC"> we know about</font><font color="#E5E5E5"> and</font>

712
00:37:52,520 --> 00:37:59,250
yeah maybe maybe the keyword keyword way

713
00:37:56,040 --> 00:38:00,840
will be merger of the of both approaches

714
00:37:59,250 --> 00:38:03,750
that<font color="#E5E5E5"> they'll hopefully take the best</font>

715
00:38:00,840 --> 00:38:08,280
<font color="#E5E5E5">parts of of both and leave the worst</font>

716
00:38:03,750 --> 00:38:11,150
parts out right<font color="#CCCCCC"> that's it</font>

717
00:38:08,280 --> 00:38:11,150
thanks<font color="#CCCCCC"> for coming</font>

