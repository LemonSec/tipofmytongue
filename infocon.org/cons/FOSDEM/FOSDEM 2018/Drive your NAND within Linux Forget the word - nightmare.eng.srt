1
00:00:05,890 --> 00:00:15,980
<font color="#E5E5E5">okay can you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> you hear me yeah so</font>

2
00:00:11,290 --> 00:00:19,848
<font color="#CCCCCC">welcome everyone I'm Michelle</font>

3
00:00:15,980 --> 00:00:23,109
Regan I'll<font color="#E5E5E5"> I work at good clean formerly</font>

4
00:00:19,849 --> 00:00:26,029
free electrons<font color="#CCCCCC"> just</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> starting</font>

5
00:00:23,109 --> 00:00:30,260
<font color="#CCCCCC">windows free electrons</font><font color="#E5E5E5"> at least</font><font color="#CCCCCC"> saw</font>

6
00:00:26,029 --> 00:00:33,590
<font color="#CCCCCC">using</font><font color="#E5E5E5"> services</font><font color="#CCCCCC"> okay so we</font><font color="#E5E5E5"> are renaming</font>

7
00:00:30,260 --> 00:00:36,530
the company because of<font color="#E5E5E5"> our legal legal</font>

8
00:00:33,590 --> 00:00:39,680
<font color="#E5E5E5">disputes</font><font color="#CCCCCC"> if you want more information</font>

9
00:00:36,530 --> 00:00:44,390
you<font color="#E5E5E5"> can go to our check our website</font><font color="#CCCCCC"> good</font>

10
00:00:39,680 --> 00:00:48,290
clean that<font color="#CCCCCC"> calm otherwise it's exactly</font>

11
00:00:44,390 --> 00:00:51,320
<font color="#E5E5E5">the same we are just renaming</font><font color="#CCCCCC"> it same</font>

12
00:00:48,290 --> 00:00:56,080
people<font color="#E5E5E5"> inside same purpose sharing and</font>

13
00:00:51,320 --> 00:00:58,220
contributing on my side<font color="#E5E5E5"> I work a lot I</font>

14
00:00:56,080 --> 00:01:02,530
contributed quite a lot to the non

15
00:00:58,220 --> 00:01:06,280
subsystem the<font color="#E5E5E5"> left monsters and</font>

16
00:01:02,530 --> 00:01:11,600
sometimes I<font color="#E5E5E5"> contributed so on Ahmad</font>

17
00:01:06,280 --> 00:01:15,550
Ahmad<font color="#CCCCCC"> associates so this talk is about</font>

18
00:01:11,600 --> 00:01:18,770
<font color="#CCCCCC">non memories</font><font color="#E5E5E5"> non flash memories</font>

19
00:01:15,550 --> 00:01:22,610
<font color="#CCCCCC">initially I wanted</font><font color="#E5E5E5"> to talk about the</font>

20
00:01:18,770 --> 00:01:25,250
Linux stack mainly but while I<font color="#E5E5E5"> was</font>

21
00:01:22,610 --> 00:01:28,100
writing this<font color="#CCCCCC"> race I found it was kind of</font>

22
00:01:25,250 --> 00:01:32,380
boring<font color="#E5E5E5"> to spend an hour on that so I</font>

23
00:01:28,100 --> 00:01:35,720
added an first introduction<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font>

24
00:01:32,380 --> 00:01:41,919
physical part<font color="#E5E5E5"> how it works actually</font>

25
00:01:35,720 --> 00:01:45,080
<font color="#E5E5E5">physically and I will talk mostly about</font>

26
00:01:41,920 --> 00:01:47,060
at the end<font color="#E5E5E5"> of the talk</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will spend some</font>

27
00:01:45,080 --> 00:01:49,039
<font color="#E5E5E5">time</font><font color="#CCCCCC"> on the exact copy interface which</font>

28
00:01:47,060 --> 00:01:52,690
is<font color="#E5E5E5"> a new one which is currently being</font>

29
00:01:49,040 --> 00:01:58,790
<font color="#CCCCCC">added</font><font color="#E5E5E5"> in the Linux kernel to do some</font>

30
00:01:52,690 --> 00:02:01,460
<font color="#CCCCCC">low-level</font><font color="#E5E5E5"> stuff I'm not a non-expert</font>

31
00:01:58,790 --> 00:02:02,940
<font color="#E5E5E5">if you disagree</font><font color="#CCCCCC"> with me please go talk</font>

32
00:02:01,460 --> 00:02:06,839
to<font color="#CCCCCC"> boys</font><font color="#E5E5E5"> bazillions</font>

33
00:02:02,940 --> 00:02:10,440
which is in this<font color="#E5E5E5"> room</font><font color="#CCCCCC"> I will probably</font>

34
00:02:06,840 --> 00:02:14,970
simplify<font color="#E5E5E5"> some aspect the electrical part</font>

35
00:02:10,440 --> 00:02:17,340
<font color="#E5E5E5">I want I won't talk about</font><font color="#CCCCCC"> no flashes at</font>

36
00:02:14,970 --> 00:02:20,310
all just<font color="#E5E5E5"> none fascist and especially</font><font color="#CCCCCC"> a</font>

37
00:02:17,340 --> 00:02:22,530
<font color="#CCCCCC">SLC</font><font color="#E5E5E5"> land which stands for a single</font>

38
00:02:20,310 --> 00:02:26,550
single-level cell<font color="#CCCCCC"> it's when you</font><font color="#E5E5E5"> have</font>

39
00:02:22,530 --> 00:02:32,070
only one bit<font color="#E5E5E5"> memory cell</font><font color="#CCCCCC"> it's for</font>

40
00:02:26,550 --> 00:02:34,280
simplifying the explanations<font color="#CCCCCC"> okay</font>

41
00:02:32,070 --> 00:02:39,720
before starting the technical part just

42
00:02:34,280 --> 00:02:46,980
some commercial information<font color="#E5E5E5"> nuns were</font>

43
00:02:39,720 --> 00:02:49,350
supposed<font color="#E5E5E5"> to replace hard disk drives the</font>

44
00:02:46,980 --> 00:02:52,200
main goal was to<font color="#CCCCCC"> add the lowest cost per</font>

45
00:02:49,350 --> 00:02:54,570
bit we<font color="#E5E5E5"> will see how we how they achieved</font>

46
00:02:52,200 --> 00:02:58,079
that<font color="#CCCCCC"> with the design the hardware</font><font color="#E5E5E5"> design</font>

47
00:02:54,570 --> 00:03:00,600
and you can<font color="#CCCCCC"> find them in a lot of</font>

48
00:02:58,080 --> 00:03:05,040
<font color="#E5E5E5">flavors</font><font color="#CCCCCC"> I will talk about</font><font color="#E5E5E5"> Ronan's and</font>

49
00:03:00,600 --> 00:03:07,380
<font color="#E5E5E5">well why how you drive them with a non</font>

50
00:03:05,040 --> 00:03:12,870
controller but you can also find them on

51
00:03:07,380 --> 00:03:16,489
spy<font color="#E5E5E5"> buses and there are a lot more and</font>

52
00:03:12,870 --> 00:03:22,500
<font color="#CCCCCC">more</font><font color="#E5E5E5"> manage management does a form of</font>

53
00:03:16,489 --> 00:03:26,700
<font color="#CCCCCC">yemen CSS is the USB</font><font color="#E5E5E5"> sticks and so on so</font>

54
00:03:22,500 --> 00:03:30,989
first let's build our<font color="#E5E5E5"> non</font><font color="#CCCCCC"> sell our non</font>

55
00:03:26,700 --> 00:03:35,820
memory cell<font color="#CCCCCC"> I will start very deep into</font>

56
00:03:30,989 --> 00:03:38,280
the matter with the silicon atom there

57
00:03:35,820 --> 00:03:42,359
is a nucleus with 14 protons and around

58
00:03:38,280 --> 00:03:46,739
it<font color="#E5E5E5"> 14 electrons it makes it electrically</font>

59
00:03:42,360 --> 00:03:50,670
neutral<font color="#CCCCCC"> is very important the last orbit</font>

60
00:03:46,739 --> 00:03:55,950
<font color="#CCCCCC">the four elect</font><font color="#E5E5E5"> four valence electrons</font>

61
00:03:50,670 --> 00:03:59,040
<font color="#CCCCCC">it's called the valence shell</font><font color="#E5E5E5"> so each</font>

62
00:03:55,950 --> 00:04:03,329
electron<font color="#E5E5E5"> will bond with</font><font color="#CCCCCC"> another electron</font>

63
00:03:59,040 --> 00:04:09,390
<font color="#E5E5E5">on of another silicon atom and it will</font>

64
00:04:03,330 --> 00:04:13,080
make the<font color="#E5E5E5"> crystal in a perfect world at</font>

65
00:04:09,390 --> 00:04:14,339
<font color="#CCCCCC">zero Kelvin the absolute zero you won't</font>

66
00:04:13,080 --> 00:04:17,669
have any current

67
00:04:14,340 --> 00:04:23,250
with<font color="#E5E5E5"> silicon it's almost an insulator</font>

68
00:04:17,668 --> 00:04:27,750
but at 20 degrees 20 Celsius degrees<font color="#E5E5E5"> you</font>

69
00:04:23,250 --> 00:04:30,030
have some you get<font color="#E5E5E5"> energy from for</font>

70
00:04:27,750 --> 00:04:32,100
<font color="#E5E5E5">instance the light and if light strokes</font>

71
00:04:30,030 --> 00:04:35,698
an electron it<font color="#CCCCCC"> will jump into the</font><font color="#E5E5E5"> other</font>

72
00:04:32,100 --> 00:04:39,360
the upper orbit with much more energy

73
00:04:35,699 --> 00:04:43,500
<font color="#CCCCCC">and this is a free electron which can</font>

74
00:04:39,360 --> 00:04:45,630
carry<font color="#E5E5E5"> electricity of course</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> don't</font>

75
00:04:43,500 --> 00:04:48,510
<font color="#E5E5E5">apply any voltage it will just drift</font>

76
00:04:45,630 --> 00:04:52,860
randomly until<font color="#E5E5E5"> it lose its energy and</font>

77
00:04:48,510 --> 00:04:57,560
<font color="#E5E5E5">combine back into the whole</font><font color="#CCCCCC"> equation so</font>

78
00:04:52,860 --> 00:05:02,700
<font color="#E5E5E5">to make use of silicon make them more</font>

79
00:04:57,560 --> 00:05:04,620
conductive people invented doping<font color="#CCCCCC"> the</font>

80
00:05:02,700 --> 00:05:08,639
purpose of doping is adding impurities

81
00:05:04,620 --> 00:05:11,280
in the<font color="#E5E5E5"> silicon crystal and these</font>

82
00:05:08,639 --> 00:05:13,860
impurities<font color="#E5E5E5"> are atoms that are that</font><font color="#CCCCCC"> have</font>

83
00:05:11,280 --> 00:05:20,130
one more or one<font color="#CCCCCC"> less</font><font color="#E5E5E5"> electrons on the</font>

84
00:05:13,860 --> 00:05:23,550
valence shell<font color="#E5E5E5"> so doing that you can you</font>

85
00:05:20,130 --> 00:05:25,680
<font color="#E5E5E5">put another atom in in place</font><font color="#CCCCCC"> of a</font>

86
00:05:23,550 --> 00:05:28,560
silicon<font color="#CCCCCC"> atom it will bind</font><font color="#E5E5E5"> let us say</font>

87
00:05:25,680 --> 00:05:31,979
with<font color="#E5E5E5"> four other silicon atoms with</font><font color="#CCCCCC"> it's</font>

88
00:05:28,560 --> 00:05:34,740
four electrons on the valence shell<font color="#E5E5E5"> but</font>

89
00:05:31,979 --> 00:05:38,789
one electron will remain and won't bond

90
00:05:34,740 --> 00:05:42,750
with any other<font color="#E5E5E5"> atom and this is a free</font>

91
00:05:38,789 --> 00:05:44,490
electron<font color="#E5E5E5"> it can carry electricity</font><font color="#CCCCCC"> if you</font>

92
00:05:42,750 --> 00:05:47,160
add<font color="#E5E5E5"> more electrons its</font><font color="#CCCCCC"> n doping of</font>

93
00:05:44,490 --> 00:05:48,599
course if you have<font color="#E5E5E5"> three electrons</font>

94
00:05:47,160 --> 00:05:52,289
instead of fall on the valence shell

95
00:05:48,599 --> 00:05:56,510
<font color="#CCCCCC">it's a P doping</font><font color="#E5E5E5"> or positive you have a</font>

96
00:05:52,289 --> 00:06:02,070
hole it's actually a lack of electron

97
00:05:56,510 --> 00:06:05,490
<font color="#E5E5E5">okay let's put two differently doped</font>

98
00:06:02,070 --> 00:06:09,870
areas<font color="#E5E5E5"> together you make a PN Junction</font>

99
00:06:05,490 --> 00:06:13,470
the<font color="#CCCCCC"> electrons close to the</font><font color="#E5E5E5"> junction will</font>

100
00:06:09,870 --> 00:06:15,840
on the N<font color="#CCCCCC"> side will jump over the</font>

101
00:06:13,470 --> 00:06:22,349
junction<font color="#CCCCCC"> and combine into holes on the P</font>

102
00:06:15,840 --> 00:06:24,719
side<font color="#E5E5E5"> it makes both regions not</font>

103
00:06:22,349 --> 00:06:26,969
electrically neutral<font color="#E5E5E5"> and one will be</font>

104
00:06:24,719 --> 00:06:27,300
<font color="#CCCCCC">positive in the N side and one will be</font>

105
00:06:26,969 --> 00:06:29,520
<font color="#CCCCCC">negative</font>

106
00:06:27,300 --> 00:06:32,430
<font color="#CCCCCC">Seve on the p side</font><font color="#E5E5E5"> because matter was</font>

107
00:06:29,520 --> 00:06:37,729
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> natural is it very much natural</font>

108
00:06:32,430 --> 00:06:40,620
<font color="#CCCCCC">but you</font><font color="#E5E5E5"> added electrons on</font><font color="#CCCCCC"> a side which</font>

109
00:06:37,729 --> 00:06:42,780
was already<font color="#CCCCCC"> enough also if there are</font>

110
00:06:40,620 --> 00:06:46,830
more electrons than<font color="#E5E5E5"> before than protons</font>

111
00:06:42,780 --> 00:06:51,239
in this area and<font color="#E5E5E5"> it makes</font><font color="#CCCCCC"> its negative</font>

112
00:06:46,830 --> 00:06:52,800
it creates electric field here<font color="#CCCCCC"> a barrier</font>

113
00:06:51,240 --> 00:06:54,870
that<font color="#CCCCCC"> is hard to</font><font color="#E5E5E5"> cross for other</font>

114
00:06:52,800 --> 00:06:57,440
electrons on this side<font color="#CCCCCC"> that cannot</font>

115
00:06:54,870 --> 00:07:02,430
combine<font color="#E5E5E5"> with other holes on the P side</font>

116
00:06:57,440 --> 00:07:07,379
<font color="#E5E5E5">so you'd have yeah let's apply a voltage</font>

117
00:07:02,430 --> 00:07:09,060
on it electrons<font color="#E5E5E5"> if you apply a plus</font>

118
00:07:07,379 --> 00:07:14,340
voltage on the<font color="#E5E5E5"> N side electrons will be</font>

119
00:07:09,060 --> 00:07:16,800
attracted but you won't<font color="#E5E5E5"> have any current</font>

120
00:07:14,340 --> 00:07:19,258
actually but if you apply<font color="#CCCCCC"> the plus</font>

121
00:07:16,800 --> 00:07:21,509
<font color="#CCCCCC">voltage on the P side</font><font color="#E5E5E5"> electrons that's</font>

122
00:07:19,259 --> 00:07:24,300
where on the that were close to the

123
00:07:21,509 --> 00:07:26,879
<font color="#E5E5E5">junction will jump from hole to hole</font>

124
00:07:24,300 --> 00:07:29,219
until<font color="#CCCCCC"> they</font><font color="#E5E5E5"> get out of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> secret while</font>

125
00:07:26,879 --> 00:07:33,090
other electrons on the<font color="#CCCCCC"> n side will be</font>

126
00:07:29,219 --> 00:07:42,810
able<font color="#E5E5E5"> to jump</font><font color="#CCCCCC"> across the barrier and this</font>

127
00:07:33,090 --> 00:07:47,549
will imply a current let's have now what

128
00:07:42,810 --> 00:07:52,680
what we call<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> 2 n regions separated</font>

129
00:07:47,550 --> 00:07:54,210
by a<font color="#CCCCCC"> peerage n okay</font><font color="#E5E5E5"> MOSFET is metal</font>

130
00:07:52,680 --> 00:07:56,430
<font color="#CCCCCC">oxide semiconductor field effect</font>

131
00:07:54,210 --> 00:08:01,020
transistor<font color="#E5E5E5"> so metal oxide semiconductor</font>

132
00:07:56,430 --> 00:08:04,159
<font color="#CCCCCC">is actually the this part</font><font color="#E5E5E5"> the leg in the</font>

133
00:08:01,020 --> 00:08:06,710
<font color="#E5E5E5">middle is</font><font color="#CCCCCC"> called the gate metal ok</font><font color="#E5E5E5"> it's</font>

134
00:08:04,159 --> 00:08:10,560
separated<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the P</font><font color="#CCCCCC"> substrate which</font>

135
00:08:06,710 --> 00:08:14,638
<font color="#E5E5E5">also called the bulk by</font><font color="#CCCCCC"> an oxide which</font>

136
00:08:10,560 --> 00:08:18,419
is<font color="#E5E5E5"> an insulator so there you can you can</font>

137
00:08:14,639 --> 00:08:22,879
<font color="#E5E5E5">have actually electricity electrons</font>

138
00:08:18,419 --> 00:08:29,159
moving from here<font color="#E5E5E5"> to</font><font color="#CCCCCC"> here if you apply a</font>

139
00:08:22,879 --> 00:08:31,800
<font color="#E5E5E5">voltage across the external legs</font><font color="#CCCCCC"> it's</font>

140
00:08:29,159 --> 00:08:35,458
the first case we had before with the PN

141
00:08:31,800 --> 00:08:38,159
Junction<font color="#CCCCCC"> you won't have any current</font><font color="#E5E5E5"> if</font>

142
00:08:35,458 --> 00:08:41,250
you<font color="#CCCCCC"> also</font><font color="#E5E5E5"> play a plus voltage on the on</font>

143
00:08:38,159 --> 00:08:44,039
the gate you will have positive charges

144
00:08:41,250 --> 00:08:48,180
<font color="#CCCCCC">here</font><font color="#E5E5E5"> on the gate that will attract</font>

145
00:08:44,039 --> 00:08:50,850
electrons<font color="#E5E5E5"> and create a small channel so</font>

146
00:08:48,180 --> 00:08:54,680
electrons<font color="#E5E5E5"> could go from one</font><font color="#CCCCCC"> inside to</font>

147
00:08:50,850 --> 00:09:02,189
<font color="#CCCCCC">the other one and this</font><font color="#E5E5E5"> creates a current</font>

148
00:08:54,680 --> 00:09:04,920
so this is the basic<font color="#E5E5E5"> of transistor</font><font color="#CCCCCC"> we</font>

149
00:09:02,189 --> 00:09:08,189
all agree that here we cannot store data

150
00:09:04,920 --> 00:09:11,339
yet<font color="#E5E5E5"> and what we want to build is a</font>

151
00:09:08,189 --> 00:09:14,550
memory cell so people added<font color="#E5E5E5"> what we call</font>

152
00:09:11,339 --> 00:09:17,970
a<font color="#E5E5E5"> floating gate here the floating gate</font>

153
00:09:14,550 --> 00:09:21,660
is separated<font color="#CCCCCC"> from the</font><font color="#E5E5E5"> rest from the</font>

154
00:09:17,970 --> 00:09:26,699
other<font color="#E5E5E5"> paths with an insulator</font><font color="#CCCCCC"> okay so</font>

155
00:09:21,660 --> 00:09:29,339
there is<font color="#CCCCCC"> no current going sweet same as</font>

156
00:09:26,699 --> 00:09:31,949
before<font color="#E5E5E5"> if you apply a voltage across the</font>

157
00:09:29,339 --> 00:09:35,300
external legs and<font color="#E5E5E5"> positive voltage on</font>

158
00:09:31,949 --> 00:09:37,649
the on the gate you will<font color="#E5E5E5"> still have your</font>

159
00:09:35,300 --> 00:09:39,089
charges there that will attract

160
00:09:37,649 --> 00:09:42,899
electrons and create this channel

161
00:09:39,089 --> 00:09:46,680
same as before<font color="#E5E5E5"> then you have a current</font>

162
00:09:42,899 --> 00:09:49,709
<font color="#CCCCCC">flowing but if you have electrons in the</font>

163
00:09:46,680 --> 00:09:52,138
<font color="#E5E5E5">floating gate in the center here</font><font color="#CCCCCC"> holes</font>

164
00:09:49,709 --> 00:09:56,209
are not<font color="#E5E5E5"> repealed anymore and instead are</font>

165
00:09:52,139 --> 00:09:59,189
attracted here<font color="#E5E5E5"> and it makes the the jump</font>

166
00:09:56,209 --> 00:10:02,310
too high<font color="#E5E5E5"> for the electrons in the hand</font>

167
00:09:59,189 --> 00:10:04,860
in<font color="#E5E5E5"> the N region</font><font color="#CCCCCC"> so there you don't you</font>

168
00:10:02,310 --> 00:10:06,540
can have any more current<font color="#CCCCCC"> even if you</font>

169
00:10:04,860 --> 00:10:11,310
<font color="#CCCCCC">apply a plus voltage on the gate</font><font color="#E5E5E5"> and</font>

170
00:10:06,540 --> 00:10:14,009
that's why that's how you<font color="#CCCCCC"> store a zero</font><font color="#E5E5E5"> a</font>

171
00:10:11,310 --> 00:10:20,430
logic<font color="#E5E5E5"> zero the previous condition was a</font>

172
00:10:14,009 --> 00:10:23,790
logic one when there was current so the

173
00:10:20,430 --> 00:10:26,939
question is how do we put electrons in

174
00:10:23,790 --> 00:10:28,740
the<font color="#E5E5E5"> floating gate we do that with what</font>

175
00:10:26,939 --> 00:10:33,300
<font color="#CCCCCC">we call</font><font color="#E5E5E5"> the follower node I'm channeling</font>

176
00:10:28,740 --> 00:10:36,149
<font color="#E5E5E5">effect it's quantum mechanics basically</font>

177
00:10:33,300 --> 00:10:37,829
you will apply a high negative<font color="#E5E5E5"> high</font>

178
00:10:36,149 --> 00:10:42,120
<font color="#CCCCCC">positive voltage voltage</font>

179
00:10:37,830 --> 00:10:44,339
on the gate<font color="#E5E5E5"> much higher</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> so</font>

180
00:10:42,120 --> 00:10:49,890
electrons will<font color="#CCCCCC"> be attracted and</font><font color="#E5E5E5"> will</font>

181
00:10:44,339 --> 00:10:52,019
<font color="#CCCCCC">channel through the</font><font color="#E5E5E5"> oxide layer because</font>

182
00:10:49,890 --> 00:10:56,130
they are attracted<font color="#CCCCCC"> here by all the</font>

183
00:10:52,019 --> 00:10:59,160
positive charges on<font color="#CCCCCC"> the gate this</font><font color="#E5E5E5"> region</font>

184
00:10:56,130 --> 00:11:03,630
this<font color="#E5E5E5"> oxide is a bit thicker than this</font>

185
00:10:59,160 --> 00:11:05,329
one so electrons could<font color="#E5E5E5"> channels through</font>

186
00:11:03,630 --> 00:11:07,860
<font color="#E5E5E5">this one but</font><font color="#CCCCCC"> not through this one</font>

187
00:11:05,329 --> 00:11:14,239
<font color="#E5E5E5">otherwise you want you wouldn't have any</font>

188
00:11:07,860 --> 00:11:16,740
any<font color="#E5E5E5"> charge stored so this is called</font>

189
00:11:14,240 --> 00:11:19,440
programming a cell to a zero<font color="#E5E5E5"> state</font>

190
00:11:16,740 --> 00:11:21,510
because once you have<font color="#CCCCCC"> elects</font><font color="#E5E5E5"> electrons</font>

191
00:11:19,440 --> 00:11:25,740
there you don't you can't have any motor

192
00:11:21,510 --> 00:11:27,630
in there in the<font color="#E5E5E5"> other way around</font><font color="#CCCCCC"> if you</font>

193
00:11:25,740 --> 00:11:31,920
want<font color="#E5E5E5"> to raise</font><font color="#CCCCCC"> the cell you have</font><font color="#E5E5E5"> to apply</font>

194
00:11:27,630 --> 00:11:33,899
a high<font color="#E5E5E5"> negative voltage on</font><font color="#CCCCCC"> the gate so</font>

195
00:11:31,920 --> 00:11:36,209
putting a lot<font color="#E5E5E5"> of electrons on the gate</font>

196
00:11:33,899 --> 00:11:40,790
repealing all the electrons in the

197
00:11:36,209 --> 00:11:40,790
<font color="#E5E5E5">floating gate back into the substrate</font>

198
00:11:43,010 --> 00:11:50,700
this is<font color="#E5E5E5"> my</font><font color="#CCCCCC"> MOSFET</font><font color="#E5E5E5"> by actually my</font>

199
00:11:47,160 --> 00:11:53,850
floating gate transistor but the video

200
00:11:50,700 --> 00:11:56,339
<font color="#E5E5E5">is just much simpler you still have the</font>

201
00:11:53,850 --> 00:11:59,270
<font color="#E5E5E5">floating gate here this was the gate</font>

202
00:11:56,339 --> 00:12:02,579
<font color="#E5E5E5">also</font><font color="#CCCCCC"> called the word line we'll see why</font>

203
00:11:59,270 --> 00:12:06,449
<font color="#E5E5E5">both external legs are called the</font><font color="#CCCCCC"> bit</font>

204
00:12:02,579 --> 00:12:09,719
line<font color="#E5E5E5"> if we put two cells like that in</font>

205
00:12:06,450 --> 00:12:13,529
series<font color="#CCCCCC"> while we</font><font color="#E5E5E5"> are supposed to have</font><font color="#CCCCCC"> two</font>

206
00:12:09,720 --> 00:12:17,040
<font color="#E5E5E5">NP</font><font color="#CCCCCC"> and regions side by</font><font color="#E5E5E5"> side but what we</font>

207
00:12:13,529 --> 00:12:21,300
do to gain space is to have only one

208
00:12:17,040 --> 00:12:26,969
<font color="#CCCCCC">region between</font><font color="#E5E5E5"> them and when you create</font>

209
00:12:21,300 --> 00:12:29,939
<font color="#E5E5E5">your new chip you just have to put n</font>

210
00:12:26,970 --> 00:12:32,610
regions regularly on<font color="#E5E5E5"> a P substrate</font><font color="#CCCCCC"> and</font>

211
00:12:29,940 --> 00:12:38,760
that's all<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> your NP NP and</font>

212
00:12:32,610 --> 00:12:40,870
regions it makes the<font color="#E5E5E5"> layout very very</font>

213
00:12:38,760 --> 00:12:44,410
thin and<font color="#E5E5E5"> that's why you can have the</font>

214
00:12:40,870 --> 00:12:47,820
a lot<font color="#E5E5E5"> of a lot of memory cells on the</font>

215
00:12:44,410 --> 00:12:51,040
small area just a side note

216
00:12:47,820 --> 00:12:54,640
<font color="#CCCCCC">imagine you apply a voltage</font><font color="#E5E5E5"> across both</font>

217
00:12:51,040 --> 00:12:57,550
transistors<font color="#CCCCCC"> if you want to get a</font><font color="#E5E5E5"> zero</font>

218
00:12:54,640 --> 00:13:02,199
<font color="#E5E5E5">logic zero on this add</font><font color="#CCCCCC"> this pot on this</font>

219
00:12:57,550 --> 00:13:05,520
<font color="#CCCCCC">pot you'll have to apply a logical</font><font color="#E5E5E5"> one</font>

220
00:13:02,200 --> 00:13:09,160
on both gates<font color="#E5E5E5"> to make both transistors</font>

221
00:13:05,520 --> 00:13:12,100
<font color="#E5E5E5">passing and have the zero</font><font color="#CCCCCC"> here and</font><font color="#E5E5E5"> this</font>

222
00:13:09,160 --> 00:13:19,089
is the NAND gate<font color="#CCCCCC"> this explains the name</font>

223
00:13:12,100 --> 00:13:22,540
of the technology<font color="#CCCCCC"> oK we've created one</font>

224
00:13:19,089 --> 00:13:25,839
cell<font color="#CCCCCC"> now we want a bit modern</font><font color="#E5E5E5"> only one</font>

225
00:13:22,540 --> 00:13:31,930
bit in our chip so we put them in series

226
00:13:25,839 --> 00:13:35,830
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a string of cells we can put as</font>

227
00:13:31,930 --> 00:13:37,449
much<font color="#CCCCCC"> sellers we want in series</font><font color="#E5E5E5"> but you</font>

228
00:13:35,830 --> 00:13:41,080
know<font color="#E5E5E5"> if you want the current to be</font>

229
00:13:37,450 --> 00:13:43,630
passing through the transistors<font color="#E5E5E5"> when it</font>

230
00:13:41,080 --> 00:13:48,940
<font color="#E5E5E5">it's about silicon</font><font color="#CCCCCC"> it's about</font><font color="#E5E5E5"> o it out</font>

231
00:13:43,630 --> 00:13:54,040
<font color="#E5E5E5">0.7</font><font color="#CCCCCC"> volt</font><font color="#E5E5E5"> so we limit ourselves to 32 to</font>

232
00:13:48,940 --> 00:13:55,690
64 cells<font color="#E5E5E5"> on strings</font><font color="#CCCCCC"> in series after</font><font color="#E5E5E5"> it</font>

233
00:13:54,040 --> 00:13:59,680
<font color="#CCCCCC">could be too</font><font color="#E5E5E5"> much for embedded system</font>

234
00:13:55,690 --> 00:14:01,839
for instance so<font color="#E5E5E5"> if you want to read the</font>

235
00:13:59,680 --> 00:14:04,180
value<font color="#E5E5E5"> of one cell inside the string you</font>

236
00:14:01,839 --> 00:14:05,529
have<font color="#E5E5E5"> to apply a positive voltage on the</font>

237
00:14:04,180 --> 00:14:08,199
gate<font color="#E5E5E5"> as we've seen before</font>

238
00:14:05,529 --> 00:14:11,890
<font color="#E5E5E5">but if all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> transistors are not</font>

239
00:14:08,200 --> 00:14:14,589
passing you don't have anything you want

240
00:14:11,890 --> 00:14:16,420
have any current<font color="#E5E5E5"> on this string</font><font color="#CCCCCC"> okay so</font>

241
00:14:14,589 --> 00:14:18,610
what you have<font color="#CCCCCC"> to do is to add an even</font>

242
00:14:16,420 --> 00:14:21,099
<font color="#E5E5E5">higher voltage on all the other gates of</font>

243
00:14:18,610 --> 00:14:24,900
the other cells in<font color="#E5E5E5"> the same string so</font>

244
00:14:21,100 --> 00:14:28,750
the other ones are forced to be passing

245
00:14:24,900 --> 00:14:34,089
this voltage cannot be too high or

246
00:14:28,750 --> 00:14:37,240
you'll have the tuning effect<font color="#E5E5E5"> okay now</font>

247
00:14:34,089 --> 00:14:42,420
you can<font color="#E5E5E5"> fill out</font><font color="#CCCCCC"> with fragile</font><font color="#E5E5E5"> this</font>

248
00:14:37,240 --> 00:14:47,670
design may be so this is a string<font color="#E5E5E5"> but</font>

249
00:14:42,420 --> 00:14:47,670
you can put a lot of strings<font color="#E5E5E5"> in parallel</font>

250
00:14:48,759 --> 00:14:57,290
it makes the block and as I told you

251
00:14:54,199 --> 00:15:00,740
earlier<font color="#CCCCCC"> the gate is now called the world</font>

252
00:14:57,290 --> 00:15:03,410
line because all the gates are connected

253
00:15:00,740 --> 00:15:05,689
together<font color="#CCCCCC"> and I'm making</font><font color="#E5E5E5"> what we call</font><font color="#CCCCCC"> a</font>

254
00:15:03,410 --> 00:15:09,110
<font color="#E5E5E5">page if you are used to deal</font><font color="#CCCCCC"> with NAND</font>

255
00:15:05,689 --> 00:15:13,459
flash<font color="#E5E5E5"> a block a page are terms that you</font>

256
00:15:09,110 --> 00:15:16,329
usually<font color="#CCCCCC"> omit and when you want to select</font>

257
00:15:13,459 --> 00:15:18,829
let's<font color="#E5E5E5"> say you want to program this cell</font>

258
00:15:16,329 --> 00:15:21,709
<font color="#E5E5E5">actually by selecting this salon</font>

259
00:15:18,829 --> 00:15:25,399
<font color="#CCCCCC">applying a high</font><font color="#E5E5E5"> voltage on this gate you</font>

260
00:15:21,709 --> 00:15:29,449
<font color="#CCCCCC">will actually</font><font color="#E5E5E5"> select all the cells</font><font color="#CCCCCC"> in</font>

261
00:15:25,399 --> 00:15:32,290
<font color="#E5E5E5">that string on in that</font><font color="#CCCCCC"> page right and</font>

262
00:15:29,449 --> 00:15:38,899
that's why you can only program and read

263
00:15:32,290 --> 00:15:42,019
entire<font color="#E5E5E5"> pages at a time with non flash</font><font color="#CCCCCC"> if</font>

264
00:15:38,899 --> 00:15:47,119
I go back a<font color="#CCCCCC"> few slides</font><font color="#E5E5E5"> you remember when</font>

265
00:15:42,019 --> 00:15:52,369
<font color="#E5E5E5">I talked</font><font color="#CCCCCC"> about erasings erasing the</font>

266
00:15:47,119 --> 00:15:55,670
cells<font color="#CCCCCC"> by moving out the electrons from</font>

267
00:15:52,369 --> 00:15:57,529
<font color="#CCCCCC">the floating</font><font color="#E5E5E5"> gate actually</font><font color="#CCCCCC"> I told</font><font color="#E5E5E5"> you we</font>

268
00:15:55,670 --> 00:15:59,569
could apply a high<font color="#CCCCCC"> negative voltage</font><font color="#E5E5E5"> on</font>

269
00:15:57,529 --> 00:16:02,509
the gate<font color="#E5E5E5"> but high negative voltage are</font>

270
00:15:59,569 --> 00:16:05,660
not as easy to<font color="#E5E5E5"> obtain so what we do</font>

271
00:16:02,509 --> 00:16:07,639
instead is applying a high positive

272
00:16:05,660 --> 00:16:11,269
<font color="#E5E5E5">voltage</font><font color="#CCCCCC"> from the world on the P</font>

273
00:16:07,639 --> 00:16:14,449
<font color="#E5E5E5">substrate</font><font color="#CCCCCC"> that that has</font><font color="#E5E5E5"> the exact same</font>

274
00:16:11,269 --> 00:16:18,920
effect<font color="#E5E5E5"> of attracting electrons out of</font>

275
00:16:14,449 --> 00:16:23,089
the 14-gauge<font color="#CCCCCC"> one difference a big</font>

276
00:16:18,920 --> 00:16:25,849
difference<font color="#E5E5E5"> the bulk is shared across</font><font color="#CCCCCC"> all</font>

277
00:16:23,089 --> 00:16:28,160
the<font color="#CCCCCC"> cells</font><font color="#E5E5E5"> in one block so when you want</font>

278
00:16:25,850 --> 00:16:30,920
<font color="#E5E5E5">to erase a cell you</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> have to</font>

279
00:16:28,160 --> 00:16:34,269
erase the world block<font color="#CCCCCC"> and that's why we</font>

280
00:16:30,920 --> 00:16:34,269
call<font color="#CCCCCC"> that flash memory because</font>

281
00:16:40,100 --> 00:16:47,270
a few words<font color="#E5E5E5"> about bit flips it's when</font>

282
00:16:44,510 --> 00:16:50,260
you<font color="#CCCCCC"> expect one logical value and</font>

283
00:16:47,270 --> 00:16:55,490
actually<font color="#CCCCCC"> you get</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> one</font>

284
00:16:50,260 --> 00:16:59,410
<font color="#CCCCCC">sells the following all</font><font color="#E5E5E5"> dime effect</font><font color="#CCCCCC"> is</font>

285
00:16:55,490 --> 00:17:01,520
quantum mechanics<font color="#E5E5E5"> so yeah it's it's</font>

286
00:16:59,410 --> 00:17:04,970
<font color="#E5E5E5">stochastically distributed it means</font>

287
00:17:01,520 --> 00:17:07,099
<font color="#E5E5E5">hazards come into the equation</font><font color="#CCCCCC"> and you</font>

288
00:17:04,970 --> 00:17:08,959
<font color="#CCCCCC">can actually you cannot actually know</font>

289
00:17:07,099 --> 00:17:12,469
exactly<font color="#CCCCCC"> how much electrons we will add</font>

290
00:17:08,959 --> 00:17:14,959
in your floating gate<font color="#E5E5E5"> although while</font>

291
00:17:12,470 --> 00:17:18,140
there are other effects<font color="#E5E5E5"> cell might not</font>

292
00:17:14,959 --> 00:17:21,230
be fully<font color="#E5E5E5"> erased all programmed for</font>

293
00:17:18,140 --> 00:17:23,420
instance electrons that<font color="#CCCCCC"> channels through</font>

294
00:17:21,230 --> 00:17:25,459
<font color="#E5E5E5">the oxide</font><font color="#CCCCCC"> layer</font><font color="#E5E5E5"> might not cross the</font>

295
00:17:23,420 --> 00:17:27,920
entire oxide if they're not if they

296
00:17:25,459 --> 00:17:31,780
don't<font color="#CCCCCC"> get</font><font color="#E5E5E5"> enough energy and get shot</font>

297
00:17:27,920 --> 00:17:34,520
into the into the insulator it makes

298
00:17:31,780 --> 00:17:37,850
regions of the insulator or negatively

299
00:17:34,520 --> 00:17:40,340
<font color="#E5E5E5">electrically negative and prevent all</font>

300
00:17:37,850 --> 00:17:44,629
the electrons from from<font color="#CCCCCC"> channellings</font>

301
00:17:40,340 --> 00:17:47,120
through that barrier also<font color="#CCCCCC"> there is data</font>

302
00:17:44,630 --> 00:17:50,950
<font color="#E5E5E5">retention</font><font color="#CCCCCC"> it's when you store data in</font>

303
00:17:47,120 --> 00:17:55,159
one cell<font color="#E5E5E5"> you put</font><font color="#CCCCCC"> you on and</font><font color="#E5E5E5"> away for</font>

304
00:17:50,950 --> 00:17:58,670
<font color="#E5E5E5">four months ago</font><font color="#CCCCCC"> yes maybe</font><font color="#E5E5E5"> 10 years you</font>

305
00:17:55,160 --> 00:18:03,500
will you get it back and when you<font color="#E5E5E5"> look</font>

306
00:17:58,670 --> 00:18:06,320
at<font color="#E5E5E5"> the data in it some some cells that</font>

307
00:18:03,500 --> 00:18:10,790
<font color="#CCCCCC">were</font><font color="#E5E5E5"> programmed to</font><font color="#CCCCCC"> 0 are actually one</font>

308
00:18:06,320 --> 00:18:12,649
because the the electrons when they

309
00:18:10,790 --> 00:18:14,870
<font color="#CCCCCC">channels through the oxide layer they</font>

310
00:18:12,650 --> 00:18:18,140
can also take collide with material and

311
00:18:14,870 --> 00:18:20,149
damaged it a bit so the insulator might

312
00:18:18,140 --> 00:18:25,210
not be an insulator

313
00:18:20,150 --> 00:18:29,300
completely fine<font color="#E5E5E5"> anymore and with time</font>

314
00:18:25,210 --> 00:18:31,310
<font color="#CCCCCC">electrons can get out of it and</font><font color="#E5E5E5"> also</font>

315
00:18:29,300 --> 00:18:34,840
there are<font color="#E5E5E5"> with right disturbances</font><font color="#CCCCCC"> when</font>

316
00:18:31,310 --> 00:18:39,260
you read<font color="#CCCCCC"> on</font><font color="#E5E5E5"> read</font><font color="#CCCCCC"> pages you apply</font>

317
00:18:34,840 --> 00:18:41,810
voltages across the cells be just next

318
00:18:39,260 --> 00:18:46,160
to the<font color="#CCCCCC"> two other pages and</font><font color="#E5E5E5"> yeah it</font>

319
00:18:41,810 --> 00:18:49,639
<font color="#E5E5E5">created disturbances for</font><font color="#CCCCCC"> Esselstyn and</font>

320
00:18:46,160 --> 00:18:51,940
it's about<font color="#CCCCCC"> 100 thousand program and</font>

321
00:18:49,640 --> 00:18:54,970
erase cycles for mlc for instance

322
00:18:51,940 --> 00:18:59,470
it's much less<font color="#CCCCCC"> than that I even talked</font>

323
00:18:54,970 --> 00:19:02,259
<font color="#E5E5E5">about</font><font color="#CCCCCC"> Emily it's</font><font color="#E5E5E5"> multi-level self when</font>

324
00:18:59,470 --> 00:19:09,039
you put multiple<font color="#CCCCCC"> bytes in one memory</font>

325
00:19:02,259 --> 00:19:14,669
cell but it's not very very stable<font color="#E5E5E5"> so</font>

326
00:19:09,039 --> 00:19:18,129
<font color="#E5E5E5">okay we now know how non-flash is built</font>

327
00:19:14,669 --> 00:19:20,259
we have our non chip and<font color="#E5E5E5"> we now want</font><font color="#CCCCCC"> to</font>

328
00:19:18,129 --> 00:19:22,600
drive it

329
00:19:20,259 --> 00:19:23,830
I'm still<font color="#E5E5E5"> talking only about parallel</font>

330
00:19:22,600 --> 00:19:26,649
<font color="#CCCCCC">nodes</font>

331
00:19:23,830 --> 00:19:32,158
you'll have to wire it to your<font color="#CCCCCC"> nine into</font>

332
00:19:26,649 --> 00:19:35,610
your non controller<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is defining</font>

333
00:19:32,159 --> 00:19:39,129
some non protocol<font color="#E5E5E5"> there are</font>

334
00:19:35,610 --> 00:19:42,580
specifications for that<font color="#E5E5E5"> and I will</font>

335
00:19:39,129 --> 00:19:45,549
explain briefly the logic<font color="#CCCCCC"> here you have</font>

336
00:19:42,580 --> 00:19:49,149
an i/o bus<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> eight feet</font><font color="#CCCCCC"> wide or</font>

337
00:19:45,549 --> 00:19:52,990
<font color="#E5E5E5">16-bit wide and a few logic lines for</font>

338
00:19:49,149 --> 00:19:54,758
instance<font color="#E5E5E5"> C stands for chip enable the</font>

339
00:19:52,990 --> 00:19:56,710
<font color="#CCCCCC">none control of the host will assert</font>

340
00:19:54,759 --> 00:20:00,460
this line when it wants to<font color="#CCCCCC"> talk to a</font>

341
00:19:56,710 --> 00:20:03,279
<font color="#E5E5E5">particular unknown</font><font color="#CCCCCC"> G actually the this</font>

342
00:20:00,460 --> 00:20:06,309
is for enabling<font color="#E5E5E5"> one die you may have</font>

343
00:20:03,279 --> 00:20:09,039
multiple<font color="#E5E5E5"> dies in one chip but I will</font>

344
00:20:06,309 --> 00:20:12,700
simplify this and let's say we have we

345
00:20:09,039 --> 00:20:15,340
have only one die in in<font color="#E5E5E5"> this chip the</font>

346
00:20:12,700 --> 00:20:18,610
<font color="#CCCCCC">really busy pin works in the other way</font>

347
00:20:15,340 --> 00:20:21,970
around<font color="#E5E5E5"> the non ship can assert on the</font>

348
00:20:18,610 --> 00:20:26,199
asserted<font color="#E5E5E5"> to indicate that it's busy</font><font color="#CCCCCC"> and</font>

349
00:20:21,970 --> 00:20:31,120
it cannot do another<font color="#E5E5E5"> operation</font><font color="#CCCCCC"> right</font>

350
00:20:26,200 --> 00:20:34,600
<font color="#CCCCCC">protect WP it to let the Nanshan know</font>

351
00:20:31,120 --> 00:20:39,100
that it cannot accept<font color="#E5E5E5"> neither writes</font>

352
00:20:34,600 --> 00:20:41,529
operations<font color="#E5E5E5"> no erase operations and I</font>

353
00:20:39,100 --> 00:20:44,230
will get<font color="#E5E5E5"> back right after for these</font>

354
00:20:41,529 --> 00:20:48,279
lines<font color="#E5E5E5"> first I want to show you the non</font>

355
00:20:44,230 --> 00:20:51,549
protocol<font color="#E5E5E5"> how it works</font><font color="#CCCCCC"> basically there</font>

356
00:20:48,279 --> 00:20:54,039
are<font color="#E5E5E5"> three possible cycles that can</font>

357
00:20:51,549 --> 00:20:57,658
happen<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the bus</font><font color="#E5E5E5"> common cycles address</font>

358
00:20:54,039 --> 00:20:57,658
cycles<font color="#E5E5E5"> and data cycles</font>

359
00:20:58,299 --> 00:21:04,269
and you can have white periods it's when

360
00:21:00,909 --> 00:21:09,099
the redeveloping is actually<font color="#CCCCCC"> just</font>

361
00:21:04,269 --> 00:21:11,379
<font color="#CCCCCC">advised non chip</font><font color="#E5E5E5"> so when a common cycle</font>

362
00:21:09,099 --> 00:21:13,539
is asserted on the bus<font color="#E5E5E5"> the non ship</font>

363
00:21:11,379 --> 00:21:16,839
knows that the common<font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> common</font>

364
00:21:13,539 --> 00:21:19,989
because the common latch enable pin is

365
00:21:16,839 --> 00:21:23,168
<font color="#E5E5E5">also asserted same happens</font><font color="#CCCCCC"> for the</font>

366
00:21:19,989 --> 00:21:26,619
address<font color="#CCCCCC"> slash enable reasonable</font>

367
00:21:23,169 --> 00:21:28,119
reasonable for data when the non

368
00:21:26,619 --> 00:21:31,738
controller<font color="#E5E5E5"> is the master of the burst</font>

369
00:21:28,119 --> 00:21:36,478
all when the Nunchuk<font color="#E5E5E5"> master of the base</font>

370
00:21:31,739 --> 00:21:40,119
of<font color="#E5E5E5"> course when controller address</font>

371
00:21:36,479 --> 00:21:42,849
<font color="#CCCCCC">ascertainment the best it's always a</font>

372
00:21:40,119 --> 00:21:44,289
<font color="#E5E5E5">right in a it's</font><font color="#CCCCCC"> already this one</font><font color="#E5E5E5"> that is</font>

373
00:21:42,849 --> 00:21:48,339
<font color="#E5E5E5">asserted because the non controller is a</font>

374
00:21:44,289 --> 00:21:50,950
master<font color="#E5E5E5"> so when you put together a common</font>

375
00:21:48,339 --> 00:21:54,158
<font color="#E5E5E5">address data</font><font color="#CCCCCC"> and weight cycles that are</font>

376
00:21:50,950 --> 00:21:56,950
<font color="#E5E5E5">non instructions you get an for non</font>

377
00:21:54,159 --> 00:22:02,729
operation<font color="#E5E5E5"> so let's say how it looks</font>

378
00:21:56,950 --> 00:22:06,849
a real<font color="#E5E5E5"> non operation my first example is</font>

379
00:22:02,729 --> 00:22:10,089
able to do a read page you have<font color="#E5E5E5"> to send</font>

380
00:22:06,849 --> 00:22:12,609
the zero byte which is a<font color="#CCCCCC"> command to tell</font>

381
00:22:10,089 --> 00:22:16,119
the moonship we're gonna do<font color="#E5E5E5"> read</font>

382
00:22:12,609 --> 00:22:19,539
operation then a few address cycles<font color="#CCCCCC"> okay</font>

383
00:22:16,119 --> 00:22:21,339
<font color="#E5E5E5">where the way</font><font color="#CCCCCC"> i want to</font><font color="#E5E5E5"> read then the</font>

384
00:22:19,539 --> 00:22:24,219
<font color="#CCCCCC">third qi</font><font color="#E5E5E5"> come on</font>

385
00:22:21,339 --> 00:22:29,379
which means<font color="#E5E5E5"> okay now we can bring the</font>

386
00:22:24,219 --> 00:22:32,019
data<font color="#E5E5E5"> there the non ship will tell the</font>

387
00:22:29,379 --> 00:22:35,320
host<font color="#E5E5E5"> he's retrieving the data and he has</font>

388
00:22:32,019 --> 00:22:39,509
to wait a<font color="#E5E5E5"> bit and then a few data cycles</font>

389
00:22:35,320 --> 00:22:39,509
depending on how much data you asked for

390
00:22:39,659 --> 00:22:45,099
some commands are a bit less complicated

391
00:22:42,669 --> 00:22:47,769
for<font color="#E5E5E5"> instance a result one it's just</font><font color="#CCCCCC"> two</font>

392
00:22:45,099 --> 00:22:50,739
FF<font color="#CCCCCC"> commands one bite and</font><font color="#E5E5E5"> then the chip</font>

393
00:22:47,769 --> 00:22:55,079
will reset itself on the<font color="#E5E5E5"> Assads</font>

394
00:22:50,739 --> 00:22:55,079
<font color="#E5E5E5">redepositing the time</font><font color="#CCCCCC"> it's best</font>

395
00:22:58,299 --> 00:23:05,720
controllers<font color="#E5E5E5"> yeah I are often and with</font>

396
00:23:01,850 --> 00:23:07,879
<font color="#CCCCCC">any associate there are diverse</font>

397
00:23:05,720 --> 00:23:12,559
implementation of them some are really

398
00:23:07,880 --> 00:23:15,429
simple<font color="#CCCCCC"> others are quite complicated I'm</font>

399
00:23:12,559 --> 00:23:18,379
going to talk<font color="#E5E5E5"> about that</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> bit later</font>

400
00:23:15,429 --> 00:23:22,429
its main job<font color="#E5E5E5"> is just to</font><font color="#CCCCCC"> communicate with</font>

401
00:23:18,380 --> 00:23:28,250
the Nunchuk<font color="#CCCCCC"> it can embed more logic for</font>

402
00:23:22,429 --> 00:23:31,390
instance it can<font color="#CCCCCC"> handle it can have a sec</font>

403
00:23:28,250 --> 00:23:35,210
<font color="#CCCCCC">EGC</font><font color="#E5E5E5"> engine ECC is for error correct</font>

404
00:23:31,390 --> 00:23:39,260
<font color="#CCCCCC">correcting code</font><font color="#E5E5E5"> 200 bit flips in</font><font color="#CCCCCC"> the</font>

405
00:23:35,210 --> 00:23:46,510
pages<font color="#CCCCCC"> Oh advanced logic to enhance those</font>

406
00:23:39,260 --> 00:23:51,530
<font color="#E5E5E5">fruit so net now we know how the</font>

407
00:23:46,510 --> 00:23:52,280
electrical<font color="#CCCCCC"> part works what it is to talk</font>

408
00:23:51,530 --> 00:23:54,470
<font color="#E5E5E5">to an on-chip</font>

409
00:23:52,280 --> 00:24:00,350
with an on protocol<font color="#E5E5E5"> so let's see how</font>

410
00:23:54,470 --> 00:24:02,750
it's done<font color="#CCCCCC"> in linux</font><font color="#E5E5E5"> this is the empty</font>

411
00:24:00,350 --> 00:24:07,969
stack and to the e stands<font color="#E5E5E5"> for math</font>

412
00:24:02,750 --> 00:24:10,580
technology<font color="#E5E5E5"> device when you want to</font>

413
00:24:07,970 --> 00:24:15,500
interact<font color="#E5E5E5"> with your non chip you will</font>

414
00:24:10,580 --> 00:24:18,850
pass through these<font color="#E5E5E5"> layers</font><font color="#CCCCCC"> so some of you</font>

415
00:24:15,500 --> 00:24:22,160
may know that<font color="#CCCCCC"> ubi ub ifs layers</font><font color="#E5E5E5"> I'm not</font>

416
00:24:18,850 --> 00:24:27,620
going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about them it's a bit out</font>

417
00:24:22,160 --> 00:24:30,230
of scope the empty layer is an

418
00:24:27,620 --> 00:24:36,100
abstraction level you from here you

419
00:24:30,230 --> 00:24:36,100
don't know<font color="#CCCCCC"> exactly what it's inside</font><font color="#E5E5E5"> if</font>

420
00:24:36,429 --> 00:24:43,280
technology you'll go through<font color="#E5E5E5"> the</font><font color="#CCCCCC"> non</font><font color="#E5E5E5"> Co</font>

421
00:24:41,540 --> 00:24:48,290
which is the framework where all the

422
00:24:43,280 --> 00:24:50,440
logic<font color="#E5E5E5"> must be and the non Co will make</font>

423
00:24:48,290 --> 00:24:53,178
some holders to<font color="#CCCCCC"> the controller driver</font>

424
00:24:50,440 --> 00:24:59,530
that<font color="#CCCCCC"> will drive actually the non</font>

425
00:24:53,179 --> 00:25:01,990
controller<font color="#CCCCCC"> okay in terms</font><font color="#E5E5E5"> of software</font><font color="#CCCCCC"> I</font>

426
00:24:59,530 --> 00:25:06,910
don't know if you can

427
00:25:01,990 --> 00:25:10,980
it's been very<font color="#CCCCCC"> I'm sorry let's say you</font>

428
00:25:06,910 --> 00:25:14,890
want to to make<font color="#CCCCCC"> a read on the</font><font color="#E5E5E5"> non device</font>

429
00:25:10,980 --> 00:25:17,740
you will from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> US</font><font color="#E5E5E5"> do no space you</font>

430
00:25:14,890 --> 00:25:21,640
will use<font color="#E5E5E5"> the</font><font color="#CCCCCC"> search this</font><font color="#E5E5E5"> entity like</font>

431
00:25:17,740 --> 00:25:24,730
device it will<font color="#E5E5E5"> go through</font><font color="#CCCCCC"> the empty</font>

432
00:25:21,640 --> 00:25:29,380
<font color="#CCCCCC">layer okay and the non-core will first</font>

433
00:25:24,730 --> 00:25:31,929
use the common phone book<font color="#E5E5E5"> which is</font>

434
00:25:29,380 --> 00:25:34,870
supposed to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> in the non-core</font><font color="#E5E5E5"> it was</font>

435
00:25:31,929 --> 00:25:38,440
actually at the<font color="#CCCCCC"> beginning this hook will</font>

436
00:25:34,870 --> 00:25:41,320
send we call the common control hook

437
00:25:38,440 --> 00:25:46,590
from<font color="#CCCCCC"> the controller driver with</font><font color="#E5E5E5"> either</font>

438
00:25:41,320 --> 00:25:46,590
command or address cycles<font color="#E5E5E5"> one at a</font><font color="#CCCCCC"> time</font>

439
00:25:46,710 --> 00:25:52,480
<font color="#E5E5E5">then it can it can make wait periods</font>

440
00:25:50,140 --> 00:25:54,550
with<font color="#E5E5E5"> wait</font><font color="#CCCCCC"> funk</font><font color="#E5E5E5"> and already there are</font>

441
00:25:52,480 --> 00:25:57,850
other hooks implemented in the

442
00:25:54,550 --> 00:26:01,770
controller driver<font color="#E5E5E5"> and will retrieve</font><font color="#CCCCCC"> or</font>

443
00:25:57,850 --> 00:26:05,230
<font color="#CCCCCC">write data with a ridge right byte what</font>

444
00:26:01,770 --> 00:26:12,370
hooks that<font color="#CCCCCC"> are in also in the controller</font>

445
00:26:05,230 --> 00:26:20,020
<font color="#E5E5E5">driver but yeah this</font><font color="#CCCCCC"> is the linear view</font>

446
00:26:12,370 --> 00:26:23,500
of the functions that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> called this</font>

447
00:26:20,020 --> 00:26:25,690
has some limitations now I guess when

448
00:26:23,500 --> 00:26:28,929
<font color="#CCCCCC">common film was first</font><font color="#E5E5E5"> introduced in the</font>

449
00:26:25,690 --> 00:26:33,390
in the<font color="#E5E5E5"> kernel it was a perfectly fine to</font>

450
00:26:28,929 --> 00:26:36,190
do things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but today</font>

451
00:26:33,390 --> 00:26:39,610
<font color="#E5E5E5">controllers tend to be more</font><font color="#CCCCCC"> complex and</font>

452
00:26:36,190 --> 00:26:41,770
<font color="#E5E5E5">some of them actually need to</font><font color="#CCCCCC"> order the</font>

453
00:26:39,610 --> 00:26:43,959
<font color="#E5E5E5">world to do the world operation at one</font>

454
00:26:41,770 --> 00:26:47,350
time unconnect do such fine grain

455
00:26:43,960 --> 00:26:50,760
instructions for instance<font color="#CCCCCC"> and English to</font>

456
00:26:47,350 --> 00:26:55,030
coincide<font color="#E5E5E5"> just an</font><font color="#CCCCCC"> odd</font><font color="#E5E5E5"> recycle and so on</font>

457
00:26:50,760 --> 00:26:57,309
so people<font color="#E5E5E5"> started reimplemented the</font>

458
00:26:55,030 --> 00:26:59,580
<font color="#E5E5E5">common from hook from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> controller</font>

459
00:26:57,309 --> 00:26:59,580
driver

460
00:27:01,290 --> 00:27:09,600
so this was overloaded<font color="#E5E5E5"> here</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem</font>

461
00:27:09,150 --> 00:27:13,560
is

462
00:27:09,600 --> 00:27:16,379
come on Punk doesn't embed the<font color="#E5E5E5"> the data</font>

463
00:27:13,560 --> 00:27:21,810
length<font color="#E5E5E5"> you have to reach report</font><font color="#CCCCCC"> right</font>

464
00:27:16,380 --> 00:27:25,740
so some prediction started being done

465
00:27:21,810 --> 00:27:29,220
from the non controller drivers and it

466
00:27:25,740 --> 00:27:31,190
means the non-core wasn't fitting the

467
00:27:29,220 --> 00:27:35,220
need anymore

468
00:27:31,190 --> 00:27:38,280
also<font color="#E5E5E5"> because all the implementations</font>

469
00:27:35,220 --> 00:27:40,290
were really different<font color="#E5E5E5"> when vendo add a</font>

470
00:27:38,280 --> 00:27:42,030
new operation<font color="#E5E5E5"> if you want to support</font>

471
00:27:40,290 --> 00:27:44,190
this operation in the<font color="#E5E5E5"> non call you have</font>

472
00:27:42,030 --> 00:27:46,920
to patch all the controller drivers one

473
00:27:44,190 --> 00:27:52,830
by one<font color="#E5E5E5"> it's a lot it's a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> pain to</font>

474
00:27:46,920 --> 00:27:54,960
<font color="#CCCCCC">maintain and yeah</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> developer</font>

475
00:27:52,830 --> 00:27:57,199
started to implement<font color="#E5E5E5"> only minimal set of</font>

476
00:27:54,960 --> 00:28:02,970
<font color="#CCCCCC">commands</font><font color="#E5E5E5"> just to make they their own</font>

477
00:27:57,200 --> 00:28:05,640
situation<font color="#E5E5E5"> work yeah it was uncomplete so</font>

478
00:28:02,970 --> 00:28:11,220
to<font color="#E5E5E5"> address these limitations</font><font color="#CCCCCC"> we decided</font>

479
00:28:05,640 --> 00:28:16,880
to add another hook in Linux connect the

480
00:28:11,220 --> 00:28:20,340
<font color="#CCCCCC">cop which is just a translation into</font>

481
00:28:16,880 --> 00:28:26,580
internal operation of what the<font color="#E5E5E5"> MTD</font><font color="#CCCCCC"> Co</font>

482
00:28:20,340 --> 00:28:30,600
wants<font color="#E5E5E5"> to achieve the non call will</font>

483
00:28:26,580 --> 00:28:33,929
actually call the implementation of exec

484
00:28:30,600 --> 00:28:36,540
up from the controller driver giving him

485
00:28:33,930 --> 00:28:40,560
an array of<font color="#E5E5E5"> all the instructions he</font>

486
00:28:36,540 --> 00:28:46,139
wants to<font color="#E5E5E5"> to execute to do one non</font>

487
00:28:40,560 --> 00:28:50,990
operation I'm going to detail that it

488
00:28:46,140 --> 00:28:55,290
should enter<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 16</font><font color="#E5E5E5"> in a few weeks and</font>

489
00:28:50,990 --> 00:28:56,970
the<font color="#E5E5E5"> first driver that is the that has</font>

490
00:28:55,290 --> 00:29:02,730
been<font color="#E5E5E5"> migrated to use this interface is</font>

491
00:28:56,970 --> 00:29:04,980
<font color="#CCCCCC">Marvel non controller and other coming</font>

492
00:29:02,730 --> 00:29:06,539
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> want to see a very simple</font>

493
00:29:04,980 --> 00:29:08,940
implementation<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can never look</font>

494
00:29:06,539 --> 00:29:13,110
I have sent some<font color="#CCCCCC"> patches</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> FMC</font>

495
00:29:08,940 --> 00:29:15,510
driver<font color="#E5E5E5"> it's really simple</font><font color="#CCCCCC"> all the</font>

496
00:29:13,110 --> 00:29:18,209
drivers<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the control</font><font color="#E5E5E5"> drivers are</font><font color="#CCCCCC"> gonna</font>

497
00:29:15,510 --> 00:29:27,090
<font color="#CCCCCC">be</font><font color="#E5E5E5"> managed</font><font color="#CCCCCC"> like Oh gonna</font><font color="#E5E5E5"> be migrated</font>

498
00:29:18,210 --> 00:29:28,890
<font color="#CCCCCC">anytime soon I hope so</font><font color="#E5E5E5"> yeah what what</font>

499
00:29:27,090 --> 00:29:31,110
you are<font color="#E5E5E5"> what do you have to do in the</font>

500
00:29:28,890 --> 00:29:33,149
exact of implementation from the

501
00:29:31,110 --> 00:29:35,719
controller<font color="#E5E5E5"> driver's side you</font><font color="#CCCCCC"> will</font>

502
00:29:33,149 --> 00:29:38,100
receive an array of<font color="#E5E5E5"> the instructions</font>

503
00:29:35,720 --> 00:29:41,370
first you have to pass<font color="#CCCCCC"> the request</font><font color="#E5E5E5"> the</font>

504
00:29:38,100 --> 00:29:45,240
sequence<font color="#E5E5E5"> and split it in as much</font>

505
00:29:41,370 --> 00:29:48,330
evaporation<font color="#E5E5E5"> as needed if you can't if</font>

506
00:29:45,240 --> 00:29:50,010
you<font color="#E5E5E5"> think you controller won't handle</font>

507
00:29:48,330 --> 00:29:52,220
this<font color="#CCCCCC"> operation you have to</font><font color="#E5E5E5"> return an</font>

508
00:29:50,010 --> 00:29:56,370
arrow<font color="#E5E5E5"> and this is another difference</font>

509
00:29:52,220 --> 00:29:58,620
<font color="#E5E5E5">with the common folk approach where no</font>

510
00:29:56,370 --> 00:30:00,268
no error code was written

511
00:29:58,620 --> 00:30:05,039
if the<font color="#E5E5E5"> operation cannot be hundred</font>

512
00:30:00,269 --> 00:30:08,130
couldn't be a<font color="#E5E5E5"> hundred this way the</font>

513
00:30:05,039 --> 00:30:10,139
non-core will be able<font color="#E5E5E5"> to maybe try</font>

514
00:30:08,130 --> 00:30:12,630
another way there are multiple<font color="#CCCCCC"> way to do</font>

515
00:30:10,139 --> 00:30:17,269
the<font color="#E5E5E5"> same thing with and and the non</font><font color="#CCCCCC"> co</font>

516
00:30:12,630 --> 00:30:19,919
will be<font color="#E5E5E5"> able to try with other other</font>

517
00:30:17,269 --> 00:30:25,409
with another operation<font color="#E5E5E5"> to do the same</font>

518
00:30:19,919 --> 00:30:29,899
thing even<font color="#CCCCCC"> if the throughput</font><font color="#E5E5E5"> is a bit if</font>

519
00:30:25,409 --> 00:30:29,899
you lose if you<font color="#E5E5E5"> lose a bit</font><font color="#CCCCCC"> of throughput</font>

520
00:30:30,559 --> 00:30:36,149
<font color="#CCCCCC">say for simple for simple controllers</font>

521
00:30:33,630 --> 00:30:38,039
<font color="#CCCCCC">one you can split the operation in just</font>

522
00:30:36,149 --> 00:30:40,860
the instructions<font color="#E5E5E5"> it's quite simple you</font>

523
00:30:38,039 --> 00:30:46,110
<font color="#E5E5E5">can do it by hand</font><font color="#CCCCCC"> otherwise</font><font color="#E5E5E5"> we've</font>

524
00:30:40,860 --> 00:30:51,090
introduced<font color="#CCCCCC"> path in the core so now when</font>

525
00:30:46,110 --> 00:30:52,979
<font color="#E5E5E5">you</font><font color="#CCCCCC"> want to do let's</font><font color="#E5E5E5"> say I read the main</font>

526
00:30:51,090 --> 00:30:56,250
read operation in the non<font color="#E5E5E5"> core will now</font>

527
00:30:52,980 --> 00:31:00,510
call the<font color="#CCCCCC"> exocomp book from the</font>

528
00:30:56,250 --> 00:31:04,860
controller driver and if the

529
00:31:00,510 --> 00:31:07,139
<font color="#CCCCCC">implementation is a bit complicated</font><font color="#E5E5E5"> you</font>

530
00:31:04,860 --> 00:31:09,269
can just call the parser from the<font color="#CCCCCC"> known</font>

531
00:31:07,139 --> 00:31:14,010
framework giving him an array of

532
00:31:09,269 --> 00:31:16,560
supported patterns each supported

533
00:31:14,010 --> 00:31:20,550
<font color="#E5E5E5">pattern has a callback</font>

534
00:31:16,560 --> 00:31:23,820
the<font color="#E5E5E5"> parser will go through the patterns</font>

535
00:31:20,550 --> 00:31:27,149
<font color="#E5E5E5">and whenever it finds one that</font><font color="#CCCCCC"> fits</font><font color="#E5E5E5"> the</font>

536
00:31:23,820 --> 00:31:29,340
needs<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the desired operation it will</font>

537
00:31:27,150 --> 00:31:33,090
call the callback<font color="#E5E5E5"> will judge</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> stop</font>

538
00:31:29,340 --> 00:31:36,060
<font color="#CCCCCC">information</font><font color="#E5E5E5"> that matches this</font><font color="#CCCCCC"> is an</font>

539
00:31:33,090 --> 00:31:38,669
<font color="#E5E5E5">example of what an array of supported</font>

540
00:31:36,060 --> 00:31:44,790
pattern can be<font color="#E5E5E5"> it's a bit simplified of</font>

541
00:31:38,670 --> 00:31:49,590
course<font color="#E5E5E5"> just</font><font color="#CCCCCC"> for the example</font><font color="#E5E5E5"> okay the</font>

542
00:31:44,790 --> 00:31:52,080
first the first the<font color="#CCCCCC"> first pattern is one</font>

543
00:31:49,590 --> 00:31:56,129
common cycle up to<font color="#CCCCCC"> five address cycle</font>

544
00:31:52,080 --> 00:32:02,220
and maybe if you need it you<font color="#CCCCCC"> can do also</font>

545
00:31:56,130 --> 00:32:04,850
up to<font color="#E5E5E5"> 1024 that data cycles the numbers</font>

546
00:32:02,220 --> 00:32:08,250
here are actually<font color="#E5E5E5"> the maximum number of</font>

547
00:32:04,850 --> 00:32:10,469
this kind<font color="#E5E5E5"> of cycle that</font><font color="#CCCCCC"> we can achieve</font>

548
00:32:08,250 --> 00:32:13,770
<font color="#CCCCCC">because there are some limitations for</font>

549
00:32:10,470 --> 00:32:16,710
<font color="#CCCCCC">that in the current</font><font color="#E5E5E5"> controllers the</font>

550
00:32:13,770 --> 00:32:19,290
second one can<font color="#E5E5E5"> either do command assert</font>

551
00:32:16,710 --> 00:32:22,620
a common cycle or a weight cycle<font color="#CCCCCC"> oboe</font>

552
00:32:19,290 --> 00:32:27,780
<font color="#CCCCCC">and the last one</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> do some</font>

553
00:32:22,620 --> 00:32:31,649
<font color="#E5E5E5">data</font><font color="#CCCCCC"> transfer if I go back to my first</font>

554
00:32:27,780 --> 00:32:34,020
examples<font color="#CCCCCC"> there is a reset operation</font>

555
00:32:31,650 --> 00:32:35,160
which was<font color="#E5E5E5"> a command cycle and then</font><font color="#CCCCCC"> a</font>

556
00:32:34,020 --> 00:32:38,310
<font color="#CCCCCC">weight</font><font color="#E5E5E5"> period</font>

557
00:32:35,160 --> 00:32:40,680
well the non<font color="#CCCCCC"> passer will find that the</font>

558
00:32:38,310 --> 00:32:43,320
second<font color="#CCCCCC"> pattern actually</font><font color="#E5E5E5"> matches that</font>

559
00:32:40,680 --> 00:32:48,720
unrealistic with this callback and

560
00:32:43,320 --> 00:32:51,360
<font color="#E5E5E5">that's all for instance if you want to</font>

561
00:32:48,720 --> 00:32:55,110
<font color="#CCCCCC">do a</font><font color="#E5E5E5"> read ID it's one common cycle</font><font color="#CCCCCC"> 100</font>

562
00:32:51,360 --> 00:32:58,770
<font color="#CCCCCC">cycle on let's say six data cycles</font><font color="#E5E5E5"> the</font>

563
00:32:55,110 --> 00:33:01,649
first<font color="#E5E5E5"> pattern match even if the number</font>

564
00:32:58,770 --> 00:33:03,780
of<font color="#CCCCCC"> cycles is not</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> not the same it's</font>

565
00:33:01,650 --> 00:33:07,560
<font color="#E5E5E5">not a problem at all and the first</font>

566
00:33:03,780 --> 00:33:09,240
callback will<font color="#CCCCCC"> be will be read for</font><font color="#E5E5E5"> the</font>

567
00:33:07,560 --> 00:33:12,419
last example<font color="#E5E5E5"> the third one the change</font>

568
00:33:09,240 --> 00:33:14,280
which column you want to assert<font color="#E5E5E5"> a common</font>

569
00:33:12,420 --> 00:33:17,610
cycle<font color="#CCCCCC"> then to address cycle and another</font>

570
00:33:14,280 --> 00:33:22,020
common cycle before<font color="#E5E5E5"> they pay for reading</font>

571
00:33:17,610 --> 00:33:22,500
data this cannot<font color="#E5E5E5"> be</font><font color="#CCCCCC"> handled by any of</font>

572
00:33:22,020 --> 00:33:25,200
the

573
00:33:22,500 --> 00:33:28,680
than here<font color="#CCCCCC"> so we'll have to split</font><font color="#E5E5E5"> it into</font>

574
00:33:25,200 --> 00:33:32,880
sub operations that is done we<font color="#CCCCCC"> buy the</font>

575
00:33:28,680 --> 00:33:36,270
<font color="#CCCCCC">path automatically</font><font color="#E5E5E5"> and for instance it</font>

576
00:33:32,880 --> 00:33:38,430
will find that the<font color="#CCCCCC"> three first cycles</font>

577
00:33:36,270 --> 00:33:40,500
<font color="#E5E5E5">can</font><font color="#CCCCCC"> be handled by</font><font color="#E5E5E5"> the first button</font><font color="#CCCCCC"> so</font>

578
00:33:38,430 --> 00:33:44,430
we'll call this callback<font color="#E5E5E5"> with a swap</font>

579
00:33:40,500 --> 00:33:48,300
<font color="#E5E5E5">operation that matches only these three</font>

580
00:33:44,430 --> 00:33:51,210
cycles then you want a common cycle so

581
00:33:48,300 --> 00:33:53,669
the second pattern<font color="#E5E5E5"> can do that just one</font>

582
00:33:51,210 --> 00:33:56,220
common and finally you want data cycles

583
00:33:53,670 --> 00:33:58,140
that<font color="#E5E5E5"> the third pattern can handle so</font>

584
00:33:56,220 --> 00:34:00,090
this callback will be called but<font color="#E5E5E5"> this</font>

585
00:33:58,140 --> 00:34:03,540
time it will be<font color="#E5E5E5"> called twice because you</font>

586
00:34:00,090 --> 00:34:09,000
can<font color="#E5E5E5"> only on under 1,024 bytes at a time</font>

587
00:34:03,540 --> 00:34:12,239
<font color="#E5E5E5">and</font><font color="#CCCCCC"> 2000 were requested so yeah that's</font>

588
00:34:09,000 --> 00:34:14,550
how<font color="#E5E5E5"> it works and what</font><font color="#CCCCCC"> you should</font>

589
00:34:12,239 --> 00:34:20,638
implement in the controller driver is

590
00:34:14,550 --> 00:34:26,010
this array and<font color="#E5E5E5"> this callback of course</font>

591
00:34:20,639 --> 00:34:28,200
in the non corner or the<font color="#E5E5E5"> hoops the most</font>

592
00:34:26,010 --> 00:34:31,800
important for me what's the exact point

593
00:34:28,199 --> 00:34:34,739
<font color="#E5E5E5">but of course you have to deal with</font><font color="#CCCCCC"> the</font>

594
00:34:31,800 --> 00:34:36,860
<font color="#CCCCCC">other ones I want to</font><font color="#E5E5E5"> speak a little bit</font>

595
00:34:34,739 --> 00:34:42,560
about<font color="#CCCCCC"> the set of</font><font color="#E5E5E5"> data in the first hook</font>

596
00:34:36,860 --> 00:34:46,850
this one<font color="#E5E5E5"> data</font><font color="#CCCCCC"> interface is for timings</font>

597
00:34:42,560 --> 00:34:50,250
<font color="#CCCCCC">may be you know non timings can</font><font color="#E5E5E5"> be of</font>

598
00:34:46,850 --> 00:34:51,239
you have different<font color="#E5E5E5"> speeds the emphasis</font>

599
00:34:50,250 --> 00:34:55,679
if<font color="#CCCCCC"> occations</font>

600
00:34:51,239 --> 00:34:59,669
has six of them<font color="#E5E5E5"> the slowest</font><font color="#CCCCCC"> ones mouth</font>

601
00:34:55,679 --> 00:35:01,710
<font color="#E5E5E5">zero is supported by all</font><font color="#CCCCCC"> the non</font><font color="#E5E5E5"> ships</font>

602
00:34:59,670 --> 00:35:04,950
should be spotted by<font color="#CCCCCC"> all the non ships</font>

603
00:35:01,710 --> 00:35:09,510
but let's say you<font color="#E5E5E5"> want to achieve the</font>

604
00:35:04,950 --> 00:35:11,910
highest highest throughput you<font color="#CCCCCC"> will you</font>

605
00:35:09,510 --> 00:35:15,630
<font color="#E5E5E5">will have to set on</font>

606
00:35:11,910 --> 00:35:19,319
<font color="#E5E5E5">you</font><font color="#CCCCCC"> will have</font><font color="#E5E5E5"> to use let's say mod four</font>

607
00:35:15,630 --> 00:35:22,619
<font color="#E5E5E5">or five that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> really really fast</font><font color="#CCCCCC"> but</font>

608
00:35:19,319 --> 00:35:25,049
<font color="#E5E5E5">for this some tweaking service and tweak</font>

609
00:35:22,619 --> 00:35:28,140
some configuration has to be done<font color="#E5E5E5"> on the</font>

610
00:35:25,049 --> 00:35:31,740
controller side<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is handled</font><font color="#CCCCCC"> by</font>

611
00:35:28,140 --> 00:35:34,500
<font color="#E5E5E5">the setup data interface so you give a</font>

612
00:35:31,740 --> 00:35:37,020
data interface<font color="#E5E5E5"> and first the controller</font>

613
00:35:34,500 --> 00:35:39,059
<font color="#E5E5E5">driver will have to return if yes or no</font>

614
00:35:37,020 --> 00:35:44,430
it can<font color="#E5E5E5"> be handled</font><font color="#CCCCCC"> by this controller</font><font color="#E5E5E5"> and</font>

615
00:35:39,059 --> 00:35:47,099
if it can it<font color="#E5E5E5"> will have to</font><font color="#CCCCCC"> configure</font><font color="#E5E5E5"> the</font>

616
00:35:44,430 --> 00:35:50,490
controller to<font color="#E5E5E5"> use this kind of timing</font>

617
00:35:47,099 --> 00:35:52,589
<font color="#CCCCCC">for this chip and</font><font color="#E5E5E5"> when I say this chip</font>

618
00:35:50,490 --> 00:35:56,788
is actually<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> select the chip with</font>

619
00:35:52,589 --> 00:35:59,369
this hook and<font color="#E5E5E5"> each time you'll have</font><font color="#CCCCCC"> to</font>

620
00:35:56,789 --> 00:36:02,010
<font color="#E5E5E5">switch from one non ship to another one</font>

621
00:35:59,369 --> 00:36:07,890
if your design is<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> you'll</font><font color="#E5E5E5"> have</font>

622
00:36:02,010 --> 00:36:11,400
<font color="#E5E5E5">to you'll have to to switch from one</font>

623
00:36:07,890 --> 00:36:15,000
<font color="#E5E5E5">timing mode to the other one and this is</font>

624
00:36:11,400 --> 00:36:16,859
<font color="#CCCCCC">done</font><font color="#E5E5E5"> in this wreck ship also</font><font color="#CCCCCC"> even if the</font>

625
00:36:15,000 --> 00:36:22,950
name<font color="#E5E5E5"> is confusing you actually select</font>

626
00:36:16,859 --> 00:36:30,328
<font color="#CCCCCC">the</font><font color="#E5E5E5"> die not the entire chip some good</font>

627
00:36:22,950 --> 00:36:32,910
habits<font color="#CCCCCC"> that when you hack into the</font>

628
00:36:30,329 --> 00:36:35,549
<font color="#CCCCCC">non-call you should test of course you</font>

629
00:36:32,910 --> 00:36:39,660
should test but<font color="#E5E5E5"> you should use probably</font>

630
00:36:35,549 --> 00:36:45,390
<font color="#E5E5E5">these these binaries they are from the</font>

631
00:36:39,660 --> 00:36:47,910
<font color="#CCCCCC">MTD uses package I use them a lot</font><font color="#E5E5E5"> if you</font>

632
00:36:45,390 --> 00:36:49,618
<font color="#E5E5E5">are lost I would say you can get the</font>

633
00:36:47,910 --> 00:36:53,399
documentation<font color="#CCCCCC"> but actually this is a</font>

634
00:36:49,619 --> 00:36:55,140
joke<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there is almost none but</font>

635
00:36:53,400 --> 00:36:58,559
instead you should pick the MTD

636
00:36:55,140 --> 00:37:01,020
community<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are lots of people there</font>

637
00:36:58,559 --> 00:37:02,910
that<font color="#CCCCCC"> can</font><font color="#E5E5E5"> help you and the business</font>

638
00:37:01,020 --> 00:37:05,730
<font color="#E5E5E5">forget to put the</font>

639
00:37:02,910 --> 00:37:11,098
<font color="#E5E5E5">incopy it puts them in a quite bad mood</font>

640
00:37:05,730 --> 00:37:13,970
and<font color="#E5E5E5"> I work beside one of them if you</font>

641
00:37:11,099 --> 00:37:18,920
want more<font color="#CCCCCC"> information</font><font color="#E5E5E5"> you can check the</font>

642
00:37:13,970 --> 00:37:18,919
presentation of Boris Brazilian<font color="#CCCCCC"> yes him</font>

643
00:37:19,099 --> 00:37:28,609
he made a a torque at<font color="#E5E5E5"> the a TLC in 2016</font>

644
00:37:24,660 --> 00:37:31,558
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Berlin</font><font color="#E5E5E5"> about the non framework</font>

645
00:37:28,609 --> 00:37:34,558
<font color="#E5E5E5">something more</font><font color="#CCCCCC"> general and also about</font>

646
00:37:31,559 --> 00:37:37,410
the physical<font color="#E5E5E5"> pattern of non flashes</font><font color="#CCCCCC"> I</font>

647
00:37:34,559 --> 00:37:40,470
would suggest you to have a look<font color="#E5E5E5"> at the</font>

648
00:37:37,410 --> 00:37:45,029
<font color="#CCCCCC">an out</font><font color="#E5E5E5"> when the</font><font color="#CCCCCC"> cattle talk at the same</font>

649
00:37:40,470 --> 00:37:47,788
conference yeah that's all if you<font color="#CCCCCC"> have</font>

650
00:37:45,029 --> 00:37:51,270
<font color="#E5E5E5">any questions I will be pleased to</font>

651
00:37:47,789 --> 00:37:59,210
answer them thank you<font color="#E5E5E5"> for your attention</font>

652
00:37:51,270 --> 00:37:59,210
[Applause]

653
00:38:12,089 --> 00:38:21,058
yeah<font color="#E5E5E5"> the question</font><font color="#CCCCCC"> is about the future of</font>

654
00:38:16,069 --> 00:38:24,689
<font color="#E5E5E5">Ronan's</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> yeah it was kind of</font>

655
00:38:21,059 --> 00:38:28,890
announced that<font color="#E5E5E5"> Ronan's</font><font color="#CCCCCC"> will disappear be</font>

656
00:38:24,689 --> 00:38:32,069
replaced by a menses<font color="#CCCCCC"> and it's slowly</font>

657
00:38:28,890 --> 00:38:34,078
happening but we face the fact<font color="#CCCCCC"> that a</font>

658
00:38:32,069 --> 00:38:37,049
lot<font color="#CCCCCC"> of people are still using Ronin</font><font color="#E5E5E5"> and</font>

659
00:38:34,079 --> 00:38:39,299
there is still some<font color="#E5E5E5"> work to</font><font color="#CCCCCC"> do on this</font>

660
00:38:37,049 --> 00:38:41,819
side<font color="#CCCCCC"> but</font><font color="#E5E5E5"> here probably in</font><font color="#CCCCCC"> the next</font>

661
00:38:39,299 --> 00:38:47,059
<font color="#E5E5E5">year's they will the market share of</font>

662
00:38:41,819 --> 00:38:47,058
<font color="#E5E5E5">run-ins will decrease yeah</font>

663
00:38:51,339 --> 00:38:58,940
about spy<font color="#E5E5E5"> spinal I can't answer you on</font>

664
00:38:56,240 --> 00:39:01,450
that<font color="#CCCCCC"> hu can Adam</font><font color="#E5E5E5"> you can ask on the</font>

665
00:38:58,940 --> 00:39:01,450
Middle East

666
00:39:02,050 --> 00:39:11,119
yes

667
00:39:03,320 --> 00:39:15,940
or maybe yeah you can come and<font color="#E5E5E5"> talk to</font>

668
00:39:11,119 --> 00:39:15,940
us at the<font color="#E5E5E5"> end maybe yes</font>

669
00:39:19,410 --> 00:39:22,410
yeah

670
00:39:35,370 --> 00:39:41,819
some work has already been done to

671
00:39:37,980 --> 00:39:47,420
support<font color="#CCCCCC"> oh sorry the question is</font><font color="#E5E5E5"> about</font>

672
00:39:41,820 --> 00:39:51,980
the support of mlc nuns<font color="#E5E5E5"> and how this</font>

673
00:39:47,420 --> 00:39:55,920
could<font color="#CCCCCC"> be</font><font color="#E5E5E5"> used to do to</font><font color="#CCCCCC"> 200mm LC right</font>

674
00:39:51,980 --> 00:39:58,410
actually<font color="#CCCCCC"> the some some work</font><font color="#E5E5E5"> has been</font>

675
00:39:55,920 --> 00:40:02,250
done<font color="#E5E5E5"> about supporting a machine and in</font>

676
00:39:58,410 --> 00:40:06,839
the<font color="#E5E5E5"> Linux kernel it's it's a bit more</font>

677
00:40:02,250 --> 00:40:09,180
complicated<font color="#E5E5E5"> than just knowing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> there</font>

678
00:40:06,840 --> 00:40:10,680
are multiple bits in one cell<font color="#E5E5E5"> because</font>

679
00:40:09,180 --> 00:40:13,259
you have<font color="#CCCCCC"> limitations on the fact that</font>

680
00:40:10,680 --> 00:40:16,220
you can you cannot write pages<font color="#CCCCCC"> in the</font>

681
00:40:13,260 --> 00:40:19,140
order you want<font color="#CCCCCC"> there are a lot of</font>

682
00:40:16,220 --> 00:40:22,669
problematics<font color="#E5E5E5"> around that and work has</font>

683
00:40:19,140 --> 00:40:27,690
been<font color="#E5E5E5"> done but it's not up stream yet and</font>

684
00:40:22,670 --> 00:40:36,860
we we will<font color="#CCCCCC"> lack some time to work on it</font>

685
00:40:27,690 --> 00:40:36,860
<font color="#E5E5E5">I think there was</font><font color="#CCCCCC"> a last question there</font>

686
00:40:44,320 --> 00:40:50,570
if I know<font color="#E5E5E5"> and other systems I choose</font>

687
00:40:46,970 --> 00:40:54,529
this kind of mechanism<font color="#E5E5E5"> actually I'm</font>

688
00:40:50,570 --> 00:40:56,710
<font color="#E5E5E5">pretty new to Linux</font><font color="#CCCCCC"> so no</font><font color="#E5E5E5"> I have to be</font>

689
00:40:54,530 --> 00:40:56,710
honest

690
00:41:04,109 --> 00:41:10,589
<font color="#E5E5E5">okay if you still have any question you</font>

691
00:41:07,140 --> 00:41:11,819
<font color="#CCCCCC">can catch me in for them</font><font color="#E5E5E5"> today otherwise</font>

692
00:41:10,589 --> 00:41:12,620
<font color="#E5E5E5">thank you very much</font>

693
00:41:11,820 --> 00:41:14,820
[Applause]

694
00:41:12,620 --> 00:41:19,279
[Music]

695
00:41:14,820 --> 00:41:19,280
[Applause]

