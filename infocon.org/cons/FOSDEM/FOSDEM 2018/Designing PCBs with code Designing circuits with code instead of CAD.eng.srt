1
00:00:04,640 --> 00:00:10,520
I know everyone<font color="#E5E5E5"> well it's a really</font><font color="#CCCCCC"> full</font>

2
00:00:08,780 --> 00:00:13,010
room I think that's the advantage of

3
00:00:10,520 --> 00:00:16,820
<font color="#E5E5E5">being after</font><font color="#CCCCCC"> the Chi Chi</font><font color="#E5E5E5"> talking between</font>

4
00:00:13,010 --> 00:00:19,520
<font color="#E5E5E5">the new new CAD tools</font>

5
00:00:16,820 --> 00:00:22,670
my name is<font color="#CCCCCC"> Casper and I'm going to talk</font>

6
00:00:19,520 --> 00:00:27,380
about<font color="#E5E5E5"> designing printed circuit boards</font>

7
00:00:22,670 --> 00:00:31,160
<font color="#E5E5E5">using code so</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> description</font>

8
00:00:27,380 --> 00:00:32,750
languages and programming languages<font color="#E5E5E5"> so</font>

9
00:00:31,160 --> 00:00:34,789
just a little<font color="#E5E5E5"> bit about me I'm a</font>

10
00:00:32,750 --> 00:00:37,850
freelance electronic and design engineer

11
00:00:34,789 --> 00:00:41,150
<font color="#E5E5E5">and I love writing code and I love open</font>

12
00:00:37,850 --> 00:00:44,270
<font color="#E5E5E5">source and especially electronics</font><font color="#CCCCCC"> these</font>

13
00:00:41,150 --> 00:00:46,879
are just some<font color="#CCCCCC"> of my projects like like</font>

14
00:00:44,270 --> 00:00:48,920
my paid projects which are<font color="#E5E5E5"> not</font><font color="#CCCCCC"> open</font>

15
00:00:46,880 --> 00:00:51,320
source unfortunately<font color="#E5E5E5"> but there's a</font>

16
00:00:48,920 --> 00:00:56,450
Braille<font color="#CCCCCC"> display and</font><font color="#E5E5E5"> they're kind of a VR</font>

17
00:00:51,320 --> 00:00:58,700
VR<font color="#E5E5E5"> chair controller</font><font color="#CCCCCC"> so you notice I said</font>

18
00:00:56,450 --> 00:01:01,790
I like to<font color="#CCCCCC"> code and that I like hardware</font>

19
00:00:58,700 --> 00:01:04,189
but it didnt like it<font color="#E5E5E5"> didn't say I like</font>

20
00:01:01,790 --> 00:01:07,250
designing<font color="#E5E5E5"> Hardware all that much and</font>

21
00:01:04,188 --> 00:01:09,020
it's<font color="#E5E5E5"> very frustrating</font><font color="#CCCCCC"> would I get very</font>

22
00:01:07,250 --> 00:01:13,840
<font color="#CCCCCC">frustrated with designing electronics</font>

23
00:01:09,020 --> 00:01:17,060
<font color="#E5E5E5">and this is normally a summary of how</font>

24
00:01:13,840 --> 00:01:18,880
electronics designs are done when I've

25
00:01:17,060 --> 00:01:22,040
<font color="#E5E5E5">given this</font><font color="#CCCCCC"> presentation</font><font color="#E5E5E5"> pass but I think</font>

26
00:01:18,880 --> 00:01:25,190
after the clock<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think we're all on the</font>

27
00:01:22,040 --> 00:01:26,869
<font color="#CCCCCC">same page so you normally</font><font color="#E5E5E5"> have a</font>

28
00:01:25,190 --> 00:01:28,789
schematic tool and a piece of B layout

29
00:01:26,869 --> 00:01:31,549
<font color="#CCCCCC">too and you define</font><font color="#E5E5E5"> your connections in</font>

30
00:01:28,790 --> 00:01:34,070
<font color="#CCCCCC">your schematic tool and then you</font><font color="#E5E5E5"> layout</font>

31
00:01:31,549 --> 00:01:36,110
<font color="#E5E5E5">you you route the connections and your</font>

32
00:01:34,070 --> 00:01:38,298
PCB<font color="#CCCCCC"> layer tool on a kind</font><font color="#E5E5E5"> of physical</font>

33
00:01:36,110 --> 00:01:40,400
model of<font color="#E5E5E5"> your board so if you're</font>

34
00:01:38,299 --> 00:01:43,100
designing digital hardware<font color="#E5E5E5"> something to</font>

35
00:01:40,400 --> 00:01:47,659
be run on<font color="#E5E5E5"> FPGAs you actually use</font>

36
00:01:43,100 --> 00:01:49,789
schematic entry as<font color="#CCCCCC"> well but well</font><font color="#E5E5E5"> you can</font>

37
00:01:47,659 --> 00:01:51,979
use schematic entry but<font color="#CCCCCC"> however</font>

38
00:01:49,790 --> 00:01:54,830
description languages were invented in

39
00:01:51,979 --> 00:02:02,000
<font color="#E5E5E5">the 80s and that's largely how people</font>

40
00:01:54,830 --> 00:02:04,610
design<font color="#CCCCCC"> digital hardware the reason</font><font color="#E5E5E5"> for</font>

41
00:02:02,000 --> 00:02:07,000
this is<font color="#CCCCCC"> because schematic entry for</font><font color="#E5E5E5"> this</font>

42
00:02:04,610 --> 00:02:09,649
kind of thing becomes really confusing

43
00:02:07,000 --> 00:02:11,180
<font color="#E5E5E5">you can try and get this URL of this</font>

44
00:02:09,649 --> 00:02:13,760
puzzle here and try<font color="#E5E5E5"> and solve it I</font>

45
00:02:11,180 --> 00:02:16,849
haven't<font color="#CCCCCC"> had time to do it myself yet but</font>

46
00:02:13,760 --> 00:02:18,790
it's not mine<font color="#CCCCCC"> it's someone and it's</font>

47
00:02:16,849 --> 00:02:21,890
available at that<font color="#E5E5E5"> URL</font>

48
00:02:18,790 --> 00:02:23,659
so we use code<font color="#CCCCCC"> describe logic circuits</font>

49
00:02:21,890 --> 00:02:27,980
<font color="#E5E5E5">because it's much</font><font color="#CCCCCC"> easier to</font><font color="#E5E5E5"> manage the</font>

50
00:02:23,659 --> 00:02:30,290
complexity<font color="#E5E5E5"> and so these are known as</font>

51
00:02:27,980 --> 00:02:33,500
<font color="#E5E5E5">hardware description language or</font><font color="#CCCCCC"> HDLs</font>

52
00:02:30,290 --> 00:02:35,329
and that's<font color="#E5E5E5"> the digital</font><font color="#CCCCCC"> circuit</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> the</font>

53
00:02:33,500 --> 00:02:38,299
schematic entry for PCB designs can<font color="#CCCCCC"> be</font>

54
00:02:35,330 --> 00:02:40,730
quite confusing<font color="#CCCCCC"> as well especially if we</font>

55
00:02:38,299 --> 00:02:45,739
have<font color="#E5E5E5"> high pin count components such as</font>

56
00:02:40,730 --> 00:02:47,000
<font color="#E5E5E5">FPGA</font><font color="#CCCCCC"> and these days</font><font color="#E5E5E5"> schematics use a lot</font>

57
00:02:45,739 --> 00:02:50,900
<font color="#E5E5E5">of labels and they kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> jump around</font>

58
00:02:47,000 --> 00:02:53,930
all over<font color="#E5E5E5"> the place and it's often quite</font>

59
00:02:50,900 --> 00:02:57,560
hard to<font color="#CCCCCC"> follow the kind</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> route all</font>

60
00:02:53,930 --> 00:03:00,260
these signals are taking so people have

61
00:02:57,560 --> 00:03:03,319
tried<font color="#CCCCCC"> to extend</font><font color="#E5E5E5"> HTS for analog and mixed</font>

62
00:03:00,260 --> 00:03:05,328
signal design<font color="#E5E5E5"> and very log a was</font>

63
00:03:03,319 --> 00:03:10,000
designed in 1993 and it was merged into

64
00:03:05,329 --> 00:03:10,000
<font color="#CCCCCC">Varick AMS in 2000</font>

65
00:03:10,629 --> 00:03:17,358
there's also analog and mixed signal

66
00:03:13,250 --> 00:03:18,980
extensions for VHDL<font color="#CCCCCC"> and some</font><font color="#E5E5E5"> more</font>

67
00:03:17,359 --> 00:03:21,160
experimental ones where<font color="#E5E5E5"> I couldn't</font>

68
00:03:18,980 --> 00:03:25,040
actually find implementations of but

69
00:03:21,160 --> 00:03:27,319
these is<font color="#E5E5E5"> also spice which I forgot last</font>

70
00:03:25,040 --> 00:03:29,989
time I<font color="#E5E5E5"> gave this stuff</font><font color="#CCCCCC"> but all of these</font>

71
00:03:27,319 --> 00:03:32,119
<font color="#E5E5E5">are</font><font color="#CCCCCC"> really about simulating about</font>

72
00:03:29,989 --> 00:03:35,780
<font color="#E5E5E5">simulating the</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> behavior of your</font>

73
00:03:32,120 --> 00:03:38,599
electronic circuits<font color="#CCCCCC"> and I suppose I'm</font>

74
00:03:35,780 --> 00:03:41,530
interested in just replacing<font color="#E5E5E5"> the</font>

75
00:03:38,599 --> 00:03:44,839
schematic entry<font color="#CCCCCC"> and making</font><font color="#E5E5E5"> that easier</font>

76
00:03:41,530 --> 00:03:46,549
<font color="#CCCCCC">so all</font><font color="#E5E5E5"> these details of what how what</font>

77
00:03:44,840 --> 00:03:49,669
the actual behavior<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the stick of the</font>

78
00:03:46,549 --> 00:03:51,200
the components are is too much detail

79
00:03:49,669 --> 00:03:53,900
and<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> going to be a lot more work</font>

80
00:03:51,200 --> 00:04:00,560
<font color="#CCCCCC">than just</font><font color="#E5E5E5"> defining the actual necklace</font>

81
00:03:53,900 --> 00:04:03,049
<font color="#E5E5E5">or schematics so question really is what</font>

82
00:04:00,560 --> 00:04:07,930
what what's so attractive<font color="#E5E5E5"> about about</font>

83
00:04:03,049 --> 00:04:11,660
this what about<font color="#CCCCCC"> using using software for</font>

84
00:04:07,930 --> 00:04:14,510
using using code for designing<font color="#E5E5E5"> circuits</font>

85
00:04:11,660 --> 00:04:17,449
<font color="#E5E5E5">and you were hoping for fast iterations</font>

86
00:04:14,510 --> 00:04:19,870
like faster iteration cycles and you're

87
00:04:17,449 --> 00:04:23,750
hoping<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use programming constructs and</font>

88
00:04:19,870 --> 00:04:27,140
tools for faster a better design process

89
00:04:23,750 --> 00:04:30,250
and hopefully<font color="#E5E5E5"> you could get modularity</font>

90
00:04:27,140 --> 00:04:30,250
and<font color="#E5E5E5"> reusability</font>

91
00:04:30,380 --> 00:04:38,330
so the first language<font color="#CCCCCC"> that I came across</font>

92
00:04:33,890 --> 00:04:40,610
that<font color="#E5E5E5"> tries to service is pH DL or</font><font color="#CCCCCC"> the PC</font>

93
00:04:38,330 --> 00:04:42,109
<font color="#E5E5E5">hardware description language and this</font>

94
00:04:40,610 --> 00:04:47,380
<font color="#E5E5E5">is what it looks like it's kind of quite</font>

95
00:04:42,110 --> 00:04:50,180
a clean syntax for describing circuits

96
00:04:47,380 --> 00:04:52,460
<font color="#CCCCCC">so but it's its own</font><font color="#E5E5E5"> language so that</font>

97
00:04:50,180 --> 00:04:54,890
<font color="#E5E5E5">come does come with disadvantages</font><font color="#CCCCCC"> you</font>

98
00:04:52,460 --> 00:04:57,500
don't have a<font color="#CCCCCC"> general-purpose language</font>

99
00:04:54,890 --> 00:05:00,740
and it's not as expressive<font color="#CCCCCC"> as a</font>

100
00:04:57,500 --> 00:05:04,120
<font color="#E5E5E5">general-purpose language</font><font color="#CCCCCC"> it's from 2011</font>

101
00:05:00,740 --> 00:05:06,770
like I said it's a new language<font color="#CCCCCC"> the</font>

102
00:05:04,120 --> 00:05:09,590
Kabbalah is Java based and it has an IDE

103
00:05:06,770 --> 00:05:12,229
actually where you can which will<font color="#E5E5E5"> help</font>

104
00:05:09,590 --> 00:05:15,560
you and guide<font color="#CCCCCC"> you in your design process</font>

105
00:05:12,230 --> 00:05:17,720
and it can upper eagle and oak at OCAD

106
00:05:15,560 --> 00:05:19,160
<font color="#E5E5E5">net net list</font><font color="#CCCCCC"> natively</font><font color="#E5E5E5"> currently and</font>

107
00:05:17,720 --> 00:05:22,600
there's some conversion programs for

108
00:05:19,160 --> 00:05:26,750
others but<font color="#CCCCCC"> I haven't investigated fully</font>

109
00:05:22,600 --> 00:05:30,050
<font color="#E5E5E5">so the next one I came across is skittle</font>

110
00:05:26,750 --> 00:05:33,800
<font color="#E5E5E5">and this was created in 2016 and it's</font>

111
00:05:30,050 --> 00:05:38,150
<font color="#E5E5E5">library and language in Python really so</font>

112
00:05:33,800 --> 00:05:40,130
this is<font color="#CCCCCC"> Python what might confuse you a</font>

113
00:05:38,150 --> 00:05:41,989
bit if you're used to Python<font color="#E5E5E5"> is that</font>

114
00:05:40,130 --> 00:05:45,050
there's some operator overloading going

115
00:05:41,990 --> 00:05:47,450
on there and the plus equals has been

116
00:05:45,050 --> 00:05:49,160
overloaded<font color="#CCCCCC"> to make connections and it's</font>

117
00:05:47,450 --> 00:05:50,870
kind of<font color="#E5E5E5"> this implicit circuit in the</font>

118
00:05:49,160 --> 00:05:53,330
background<font color="#E5E5E5"> that's being built up and</font>

119
00:05:50,870 --> 00:05:56,420
then once you if you use the generate

120
00:05:53,330 --> 00:06:02,800
netlist<font color="#E5E5E5"> command it</font><font color="#CCCCCC"> will produce a card</font>

121
00:05:56,420 --> 00:06:05,390
<font color="#E5E5E5">netlist so</font><font color="#CCCCCC"> skittle also has some</font>

122
00:06:02,800 --> 00:06:09,790
provisions<font color="#E5E5E5"> for reusing bits of</font>

123
00:06:05,390 --> 00:06:18,020
<font color="#CCCCCC">subcircuit and this is done through</font>

124
00:06:09,790 --> 00:06:21,140
<font color="#E5E5E5">functions really yeah so you notice that</font>

125
00:06:18,020 --> 00:06:22,669
in the function you<font color="#CCCCCC"> just the arguments</font>

126
00:06:21,140 --> 00:06:25,010
are the inputs and<font color="#CCCCCC"> outputs</font><font color="#E5E5E5"> of the</font>

127
00:06:22,670 --> 00:06:27,740
circuit<font color="#E5E5E5"> so when you</font><font color="#CCCCCC"> reuse the</font><font color="#E5E5E5"> circuit</font>

128
00:06:25,010 --> 00:06:32,060
you you apply<font color="#CCCCCC"> the functions to your</font>

129
00:06:27,740 --> 00:06:35,000
inputs<font color="#E5E5E5"> and output</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> one that's</font>

130
00:06:32,060 --> 00:06:37,040
<font color="#E5E5E5">quite fairly similar</font><font color="#CCCCCC"> in some ways</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> PI</font>

131
00:06:35,000 --> 00:06:42,289
circuit which was created a little<font color="#CCCCCC"> bit</font>

132
00:06:37,040 --> 00:06:46,189
<font color="#E5E5E5">later and is also embedded in Python and</font>

133
00:06:42,289 --> 00:06:48,199
it also outputs<font color="#CCCCCC"> a</font><font color="#E5E5E5"> chi Cadfael</font><font color="#CCCCCC"> though it</font>

134
00:06:46,189 --> 00:06:51,199
outputs<font color="#CCCCCC"> Chi Chi PCB</font><font color="#E5E5E5"> files rather than</font>

135
00:06:48,199 --> 00:06:54,710
lists<font color="#E5E5E5"> so it'll have this means you don't</font>

136
00:06:51,199 --> 00:06:58,520
it makes it a bit<font color="#CCCCCC"> easier to have the the</font>

137
00:06:54,710 --> 00:06:59,989
<font color="#CCCCCC">actus the footprints embedded into your</font>

138
00:06:58,520 --> 00:07:02,359
<font color="#E5E5E5">output</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need to worry about</font>

139
00:06:59,990 --> 00:07:04,610
where your libraries are which<font color="#CCCCCC"> you would</font>

140
00:07:02,360 --> 00:07:12,649
need to do which you<font color="#E5E5E5"> would need to if</font>

141
00:07:04,610 --> 00:07:14,509
<font color="#CCCCCC">you work from</font><font color="#E5E5E5"> a netlist it also has it</font>

142
00:07:12,649 --> 00:07:16,399
kind<font color="#E5E5E5"> of the default way to do things is</font>

143
00:07:14,509 --> 00:07:21,349
in this module away with functions<font color="#E5E5E5"> and</font>

144
00:07:16,399 --> 00:07:25,389
again<font color="#E5E5E5"> inputs and outputs what your your</font>

145
00:07:21,349 --> 00:07:30,110
<font color="#E5E5E5">your parameter rising over when you use</font>

146
00:07:25,389 --> 00:07:38,839
have reusable bits<font color="#E5E5E5"> bicycle also does</font>

147
00:07:30,110 --> 00:07:40,159
layout so you<font color="#E5E5E5"> yeah you can</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can try</font>

148
00:07:38,839 --> 00:07:42,289
<font color="#E5E5E5">and</font><font color="#CCCCCC"> do layout with it and it</font><font color="#E5E5E5"> has some</font>

149
00:07:40,159 --> 00:07:45,800
experiments of support for hooking into

150
00:07:42,289 --> 00:07:46,998
SMT solvers to<font color="#E5E5E5"> try and solve layout as a</font>

151
00:07:45,800 --> 00:07:51,529
<font color="#E5E5E5">constraint problem which is quite</font>

152
00:07:46,999 --> 00:07:57,949
<font color="#CCCCCC">interesting just</font><font color="#E5E5E5"> it's still it's it's</font>

153
00:07:51,529 --> 00:08:00,169
experimental<font color="#CCCCCC"> so I've been I've been</font><font color="#E5E5E5"> kind</font>

154
00:07:57,949 --> 00:08:01,789
of I've contributed a bit<font color="#E5E5E5"> to these</font>

155
00:08:00,169 --> 00:08:05,330
projects in<font color="#E5E5E5"> discussing with the project</font>

156
00:08:01,789 --> 00:08:07,068
creators and I<font color="#E5E5E5"> kind of I've started to</font>

157
00:08:05,330 --> 00:08:10,849
make a playground<font color="#E5E5E5"> for my ideas for what</font>

158
00:08:07,069 --> 00:08:13,490
I would<font color="#CCCCCC"> like</font><font color="#E5E5E5"> in a circuit description</font>

159
00:08:10,849 --> 00:08:15,199
language<font color="#E5E5E5"> early and I decided to do it in</font>

160
00:08:13,490 --> 00:08:21,979
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> because we already have</font><font color="#CCCCCC"> two</font>

161
00:08:15,199 --> 00:08:25,069
in Python now and this is what I started

162
00:08:21,979 --> 00:08:28,490
<font color="#E5E5E5">working on I call it replicant and the</font>

163
00:08:25,069 --> 00:08:31,729
goals are really<font color="#E5E5E5"> too much like the</font>

164
00:08:28,490 --> 00:08:35,688
others it's to make it easier<font color="#CCCCCC"> to do</font>

165
00:08:31,729 --> 00:08:37,519
<font color="#CCCCCC">schematic entry</font><font color="#E5E5E5"> and make it easier</font><font color="#CCCCCC"> to</font>

166
00:08:35,688 --> 00:08:38,899
reason about circuits<font color="#E5E5E5"> and also to</font>

167
00:08:37,519 --> 00:08:40,789
confirm<font color="#E5E5E5"> at words law which is that</font>

168
00:08:38,899 --> 00:08:42,729
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> that can be written in</font>

169
00:08:40,789 --> 00:08:48,740
JavaScript will be written<font color="#CCCCCC"> in</font><font color="#E5E5E5"> JavaScript</font>

170
00:08:42,729 --> 00:08:55,760
<font color="#E5E5E5">and</font><font color="#CCCCCC"> III really want</font><font color="#E5E5E5"> to get down to this</font>

171
00:08:48,740 --> 00:09:01,580
issue of in<font color="#CCCCCC"> fear of if it get really</font>

172
00:08:55,760 --> 00:09:05,300
hard to debug<font color="#E5E5E5"> your circuit programs</font>

173
00:09:01,580 --> 00:09:07,400
really<font color="#E5E5E5"> so that's my goal with with</font>

174
00:09:05,300 --> 00:09:10,699
creating this to try and<font color="#E5E5E5"> use static</font>

175
00:09:07,400 --> 00:09:12,500
analysis and<font color="#E5E5E5"> electrical rules checks and</font>

176
00:09:10,700 --> 00:09:20,690
really make it hard<font color="#E5E5E5"> for you</font><font color="#CCCCCC"> to introduce</font>

177
00:09:12,500 --> 00:09:27,200
errors<font color="#E5E5E5"> yeah I have some</font><font color="#CCCCCC"> otherwise</font><font color="#E5E5E5"> other</font>

178
00:09:20,690 --> 00:09:31,510
<font color="#E5E5E5">ideas such that</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you look at this the</font>

179
00:09:27,200 --> 00:09:35,060
variable<font color="#E5E5E5"> names are</font><font color="#CCCCCC"> used as the schematic</font>

180
00:09:31,510 --> 00:09:36,920
<font color="#E5E5E5">references so the way I do this the way</font>

181
00:09:35,060 --> 00:09:39,949
I'm a<font color="#CCCCCC"> player and we're doing this is to</font>

182
00:09:36,920 --> 00:09:44,930
<font color="#CCCCCC">use JavaScript language transforms which</font>

183
00:09:39,950 --> 00:09:47,720
then when you when you have when you say

184
00:09:44,930 --> 00:09:49,520
my resistor is r1<font color="#CCCCCC"> and you just</font><font color="#E5E5E5"> give it</font>

185
00:09:47,720 --> 00:09:52,580
<font color="#CCCCCC">the value</font><font color="#E5E5E5"> of the risk the resistor and</font>

186
00:09:49,520 --> 00:09:54,949
then<font color="#E5E5E5"> your skin</font><font color="#CCCCCC"> your schematic</font><font color="#E5E5E5"> or in your</font>

187
00:09:52,580 --> 00:09:58,120
output really r1 will be that resistor

188
00:09:54,950 --> 00:10:01,520
so I'm using kind<font color="#E5E5E5"> of these language</font>

189
00:09:58,120 --> 00:10:05,720
language<font color="#E5E5E5"> macros are processing to get</font>

190
00:10:01,520 --> 00:10:08,079
<font color="#E5E5E5">that done and there's an explicit</font>

191
00:10:05,720 --> 00:10:11,540
<font color="#E5E5E5">there's an explicit circuit object so</font>

192
00:10:08,080 --> 00:10:14,150
<font color="#CCCCCC">boo it's both the</font><font color="#E5E5E5"> skittling and pi</font>

193
00:10:11,540 --> 00:10:17,360
circuit there's this implicit circuit

194
00:10:14,150 --> 00:10:19,370
object which is being modified<font color="#E5E5E5"> and yeah</font>

195
00:10:17,360 --> 00:10:21,170
you have<font color="#CCCCCC"> to say I'm instantiating a</font>

196
00:10:19,370 --> 00:10:24,020
circuit and then I will add connections

197
00:10:21,170 --> 00:10:26,990
<font color="#E5E5E5">to it and that's how when you add</font>

198
00:10:24,020 --> 00:10:29,930
connections<font color="#E5E5E5"> you also then implicitly add</font>

199
00:10:26,990 --> 00:10:34,130
the components to the circuit<font color="#E5E5E5"> because</font>

200
00:10:29,930 --> 00:10:37,760
<font color="#CCCCCC">why why yeah and and what I'm hoping to</font>

201
00:10:34,130 --> 00:10:39,590
do is do to do function arguments<font color="#E5E5E5"> so</font>

202
00:10:37,760 --> 00:10:43,970
functions<font color="#CCCCCC"> parameterize</font><font color="#E5E5E5"> over</font>

203
00:10:39,590 --> 00:10:47,030
<font color="#E5E5E5">oh not or not over connections but over</font>

204
00:10:43,970 --> 00:10:49,040
the values in your circuit<font color="#E5E5E5"> so you can</font>

205
00:10:47,030 --> 00:10:50,689
this is a resistor divider and you can

206
00:10:49,040 --> 00:10:54,910
instantiate a new resistor divider with

207
00:10:50,690 --> 00:10:57,980
different values<font color="#CCCCCC"> of different</font><font color="#E5E5E5"> resistors</font>

208
00:10:54,910 --> 00:11:01,510
and then you return<font color="#CCCCCC"> your circuit</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font>

209
00:10:57,980 --> 00:11:01,510
can really<font color="#CCCCCC"> use that</font><font color="#E5E5E5"> in another circuit</font>

210
00:11:03,960 --> 00:11:11,170
so some of the some<font color="#CCCCCC"> of these issues</font>

211
00:11:08,529 --> 00:11:12,220
we've already<font color="#E5E5E5"> touched on but</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> pros</font>

212
00:11:11,170 --> 00:11:14,319
really would really let you define

213
00:11:12,220 --> 00:11:17,800
<font color="#E5E5E5">everything once and</font><font color="#CCCCCC"> you reuse it and you</font>

214
00:11:14,320 --> 00:11:21,190
use programming constructs<font color="#E5E5E5"> to to make</font>

215
00:11:17,800 --> 00:11:22,779
design easier<font color="#CCCCCC"> some of the</font><font color="#E5E5E5"> issues is that</font>

216
00:11:21,190 --> 00:11:26,890
<font color="#E5E5E5">it's hard to visualize what's going</font><font color="#CCCCCC"> on</font>

217
00:11:22,779 --> 00:11:28,779
you<font color="#E5E5E5"> it is kind</font><font color="#CCCCCC"> of it is</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> the</font>

218
00:11:26,890 --> 00:11:31,660
visual<font color="#CCCCCC"> task and</font><font color="#E5E5E5"> you want to see where</font>

219
00:11:28,779 --> 00:11:37,270
the connections are going<font color="#E5E5E5"> it can still</font>

220
00:11:31,660 --> 00:11:38,890
<font color="#CCCCCC">be</font><font color="#E5E5E5"> very tedious and yeah yeah debugging</font>

221
00:11:37,270 --> 00:11:41,140
could be a nightmare<font color="#CCCCCC"> and I've touched a</font>

222
00:11:38,890 --> 00:11:43,360
bit on that one<font color="#E5E5E5"> what I plan to do and</font>

223
00:11:41,140 --> 00:11:45,460
replicate for that<font color="#E5E5E5"> but on the subject</font><font color="#CCCCCC"> of</font>

224
00:11:43,360 --> 00:11:47,800
visualization<font color="#CCCCCC"> because vision</font><font color="#E5E5E5"> with the</font>

225
00:11:45,460 --> 00:11:50,890
schematics I like reading schematics<font color="#CCCCCC"> but</font>

226
00:11:47,800 --> 00:11:52,599
making them can be a pain when<font color="#E5E5E5"> I like</font>

227
00:11:50,890 --> 00:11:54,460
reading good some good schematics so

228
00:11:52,600 --> 00:11:56,410
really we want some<font color="#E5E5E5"> kind of visual</font>

229
00:11:54,460 --> 00:12:02,110
<font color="#CCCCCC">output from our programming for my</font>

230
00:11:56,410 --> 00:12:05,620
circuit<font color="#E5E5E5"> language so</font><font color="#CCCCCC"> there I added</font><font color="#E5E5E5"> this</font>

231
00:12:02,110 --> 00:12:07,180
graph<font color="#E5E5E5"> this outfit to skittle</font><font color="#CCCCCC"> and a cone</font>

232
00:12:05,620 --> 00:12:10,660
made it look a bit<font color="#CCCCCC"> like a schematic</font>

233
00:12:07,180 --> 00:12:15,489
though<font color="#E5E5E5"> who never</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> knew it would never</font>

234
00:12:10,660 --> 00:12:19,089
look<font color="#CCCCCC"> like a somatic and that's kind of</font>

235
00:12:15,490 --> 00:12:21,220
how far I got with<font color="#CCCCCC"> it seemed like it</font><font color="#E5E5E5"> it</font>

236
00:12:19,089 --> 00:12:23,470
would be<font color="#E5E5E5"> okay for simpler circuits but</font>

237
00:12:21,220 --> 00:12:25,920
as things scale up it could get

238
00:12:23,470 --> 00:12:28,330
problematic<font color="#CCCCCC"> my circuit already had some</font>

239
00:12:25,920 --> 00:12:30,130
graph list visualization as well and the

240
00:12:28,330 --> 00:12:33,130
<font color="#CCCCCC">reason this looks</font><font color="#E5E5E5"> like this is</font><font color="#CCCCCC"> that</font>

241
00:12:30,130 --> 00:12:34,689
there was kind<font color="#E5E5E5"> of a prototype for a for</font>

242
00:12:33,130 --> 00:12:36,490
<font color="#CCCCCC">an interactive editor</font><font color="#E5E5E5"> where you could</font>

243
00:12:34,690 --> 00:12:40,180
click<font color="#CCCCCC"> on different</font><font color="#E5E5E5"> nodes so all of these</font>

244
00:12:36,490 --> 00:12:42,580
bits are really nice and clickable and

245
00:12:40,180 --> 00:12:46,680
then it will highlight<font color="#E5E5E5"> on</font><font color="#CCCCCC"> your on your</font>

246
00:12:42,580 --> 00:12:49,209
layout side what what what everything is

247
00:12:46,680 --> 00:12:53,319
<font color="#E5E5E5">so fairly recently I came across a</font>

248
00:12:49,209 --> 00:12:57,130
<font color="#E5E5E5">netlist SVG and that's a lesson that</font>

249
00:12:53,320 --> 00:13:01,330
draws SVG SVG schematics from<font color="#CCCCCC"> OSIS jason</font>

250
00:12:57,130 --> 00:13:06,550
<font color="#CCCCCC">nesmith netlist</font><font color="#E5E5E5"> and they look amazingly</font>

251
00:13:01,330 --> 00:13:10,839
good so we tried to make<font color="#CCCCCC"> an analogue</font>

252
00:13:06,550 --> 00:13:12,699
skin for necklace SVG<font color="#E5E5E5"> and these were</font>

253
00:13:10,839 --> 00:13:15,070
some of<font color="#E5E5E5"> the initial results we got</font><font color="#CCCCCC"> from</font>

254
00:13:12,700 --> 00:13:16,630
that<font color="#E5E5E5"> which is this</font><font color="#CCCCCC"> Amada T's you</font>

255
00:13:15,070 --> 00:13:17,080
<font color="#CCCCCC">wouldn't necessarily draw it like this</font>

256
00:13:16,630 --> 00:13:19,540
<font color="#E5E5E5">but</font>

257
00:13:17,080 --> 00:13:23,110
I think it looks very<font color="#E5E5E5"> promising to me</font>

258
00:13:19,540 --> 00:13:26,110
<font color="#E5E5E5">and this is the most recent example</font><font color="#CCCCCC"> of</font>

259
00:13:23,110 --> 00:13:27,880
that which<font color="#E5E5E5"> was because David Craven has</font>

260
00:13:26,110 --> 00:13:29,740
hooked up necklace if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> do to PI</font>

261
00:13:27,880 --> 00:13:37,060
circuit now and this is one of<font color="#E5E5E5"> the</font>

262
00:13:29,740 --> 00:13:40,180
outputs from<font color="#E5E5E5"> that so the other thing</font>

263
00:13:37,060 --> 00:13:42,489
that I have<font color="#CCCCCC"> been working on is or</font>

264
00:13:40,180 --> 00:13:44,380
thinking<font color="#CCCCCC"> about is we already</font><font color="#E5E5E5"> have quite</font>

265
00:13:42,490 --> 00:13:47,620
a<font color="#E5E5E5"> specific language as electronic</font>

266
00:13:44,380 --> 00:13:50,350
engineers and we already<font color="#E5E5E5"> have a lot</font><font color="#CCCCCC"> of</font>

267
00:13:47,620 --> 00:13:52,420
<font color="#E5E5E5">words and we already and I'd like we'd</font>

268
00:13:50,350 --> 00:13:54,700
like to really reuse that language when

269
00:13:52,420 --> 00:13:59,439
<font color="#CCCCCC">we're when</font><font color="#E5E5E5"> we're in our circuit</font>

270
00:13:54,700 --> 00:14:02,080
description<font color="#E5E5E5"> language so the project</font><font color="#CCCCCC"> I</font>

271
00:13:59,440 --> 00:14:04,330
came<font color="#E5E5E5"> up with this which is called</font>

272
00:14:02,080 --> 00:14:06,370
electro grammar<font color="#E5E5E5"> and I probably don't</font>

273
00:14:04,330 --> 00:14:10,360
<font color="#E5E5E5">have</font><font color="#CCCCCC"> time for</font><font color="#E5E5E5"> the demo but pretty much</font>

274
00:14:06,370 --> 00:14:12,520
it it takes quite the the descriptions

275
00:14:10,360 --> 00:14:14,920
<font color="#CCCCCC">that you normally</font><font color="#E5E5E5"> use in your bill of</font>

276
00:14:12,520 --> 00:14:17,020
materials or on your in yours<font color="#E5E5E5"> in yours</font>

277
00:14:14,920 --> 00:14:20,640
in your schematics<font color="#E5E5E5"> and it gives you a</font>

278
00:14:17,020 --> 00:14:22,569
<font color="#E5E5E5">past output for</font><font color="#CCCCCC"> that so that means</font><font color="#E5E5E5"> that</font>

279
00:14:20,640 --> 00:14:27,360
it<font color="#E5E5E5"> gives you a very quick way of</font>

280
00:14:22,570 --> 00:14:31,630
<font color="#E5E5E5">defining components and it it's kind of</font>

281
00:14:27,360 --> 00:14:33,310
<font color="#CCCCCC">M</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now this first</font><font color="#E5E5E5"> version was</font>

282
00:14:31,630 --> 00:14:37,510
<font color="#E5E5E5">JavaScript only and it does capacitors</font>

283
00:14:33,310 --> 00:14:39,849
resistors<font color="#E5E5E5"> and as LEDs yes surface mount</font>

284
00:14:37,510 --> 00:14:41,590
versions it's a<font color="#E5E5E5"> lack spacer so you can</font>

285
00:14:39,850 --> 00:14:45,160
you<font color="#E5E5E5"> can put things in any order it</font>

286
00:14:41,590 --> 00:14:48,160
understands what you mean and it ignores

287
00:14:45,160 --> 00:14:49,750
invalid input so it's kind of it's

288
00:14:48,160 --> 00:14:52,810
useful<font color="#CCCCCC"> for search applications really</font>

289
00:14:49,750 --> 00:14:58,720
<font color="#E5E5E5">where you might say capacitor you know</font>

290
00:14:52,810 --> 00:15:00,160
for my for my PCB design<font color="#CCCCCC"> one</font><font color="#E5E5E5"> microfarad</font>

291
00:14:58,720 --> 00:15:01,870
<font color="#E5E5E5">and it will understand capacitor 1</font>

292
00:15:00,160 --> 00:15:04,930
<font color="#CCCCCC">microfarad</font><font color="#E5E5E5"> and take that</font><font color="#CCCCCC"> end ignore the</font>

293
00:15:01,870 --> 00:15:09,040
<font color="#E5E5E5">rest</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we're currently working on</font>

294
00:15:04,930 --> 00:15:11,079
<font color="#E5E5E5">electrogram</font><font color="#CCCCCC"> i version</font><font color="#E5E5E5"> 2 which will be</font>

295
00:15:09,040 --> 00:15:14,130
using<font color="#CCCCCC"> enter 4 which so we</font><font color="#E5E5E5"> will have</font>

296
00:15:11,080 --> 00:15:19,240
passes<font color="#E5E5E5"> for JavaScript Python Java C C++</font>

297
00:15:14,130 --> 00:15:21,010
go and we could probably do c-sharp<font color="#CCCCCC"> I</font>

298
00:15:19,240 --> 00:15:23,230
don't know ant<font color="#E5E5E5"> Allah has a lot of</font>

299
00:15:21,010 --> 00:15:25,600
<font color="#E5E5E5">language outputs and we we've been</font>

300
00:15:23,230 --> 00:15:28,730
<font color="#E5E5E5">expanding well David Craven has been</font>

301
00:15:25,600 --> 00:15:31,320
expanding<font color="#CCCCCC"> Tate</font><font color="#E5E5E5"> is doing a lot of work</font>

302
00:15:28,730 --> 00:15:35,970
he's been expanding it to diodes and

303
00:15:31,320 --> 00:15:38,220
transistors<font color="#CCCCCC"> yeah and assembly and</font>

304
00:15:35,970 --> 00:15:39,839
<font color="#E5E5E5">through-hole parts because for even</font><font color="#CCCCCC"> for</font>

305
00:15:38,220 --> 00:15:44,070
<font color="#E5E5E5">transistors we have often</font><font color="#CCCCCC"> have very</font>

306
00:15:39,839 --> 00:15:47,640
<font color="#E5E5E5">structured names for them so it's it's</font>

307
00:15:44,070 --> 00:15:54,570
<font color="#CCCCCC">suitable and we will do well looks</font>

308
00:15:47,640 --> 00:15:55,709
better actually<font color="#CCCCCC"> yeah and we were doing a</font>

309
00:15:54,570 --> 00:15:58,080
strict parser

310
00:15:55,709 --> 00:15:59,550
so that<font color="#CCCCCC"> there'd be a version where you</font>

311
00:15:58,080 --> 00:16:01,740
really have<font color="#CCCCCC"> to put things</font><font color="#E5E5E5"> you have to</font>

312
00:15:59,550 --> 00:16:04,829
<font color="#E5E5E5">say</font><font color="#CCCCCC"> one microfarad</font><font color="#E5E5E5"> and then 10%</font>

313
00:16:01,740 --> 00:16:06,260
tolerance on one microfarad<font color="#E5E5E5"> and they</font>

314
00:16:04,830 --> 00:16:10,890
<font color="#E5E5E5">really have to be in order</font>

315
00:16:06,260 --> 00:16:17,640
so should<font color="#CCCCCC"> you use any of</font><font color="#E5E5E5"> this mmm well</font>

316
00:16:10,890 --> 00:16:19,529
it's<font color="#CCCCCC"> all a bit alpha an</font><font color="#E5E5E5"> experimental so</font>

317
00:16:17,640 --> 00:16:20,640
I think if you're interested<font color="#E5E5E5"> in the</font>

318
00:16:19,529 --> 00:16:23,430
subject<font color="#CCCCCC"> definitely look at</font><font color="#E5E5E5"> these</font>

319
00:16:20,640 --> 00:16:31,140
projects<font color="#E5E5E5"> and try and contribute and try</font>

320
00:16:23,430 --> 00:16:32,430
to get them<font color="#E5E5E5"> into a better</font><font color="#CCCCCC"> state so this</font>

321
00:16:31,140 --> 00:16:35,360
is what's all about schematics really

322
00:16:32,430 --> 00:16:37,500
and the title of the talk is<font color="#CCCCCC"> Shaw</font><font color="#E5E5E5"> and</font>

323
00:16:35,360 --> 00:16:39,390
we're mostly<font color="#CCCCCC"> talking about schematic</font>

324
00:16:37,500 --> 00:16:41,370
netlist entry and of course you can do

325
00:16:39,390 --> 00:16:45,870
other<font color="#CCCCCC"> things</font><font color="#E5E5E5"> with programming languages</font>

326
00:16:41,370 --> 00:16:47,070
and<font color="#CCCCCC"> cock-eyed</font><font color="#E5E5E5"> mantri is Python DSL for</font>

327
00:16:45,870 --> 00:16:49,140
Chi code for prints and<font color="#E5E5E5"> that's being</font>

328
00:16:47,070 --> 00:16:52,110
<font color="#E5E5E5">used in the standard</font><font color="#CCCCCC"> library for</font><font color="#E5E5E5"> Kika to</font>

329
00:16:49,140 --> 00:16:55,020
generate things<font color="#E5E5E5"> there's cute</font><font color="#CCCCCC"> Kirra which</font>

330
00:16:52,110 --> 00:16:57,570
is<font color="#E5E5E5"> a CoffeeScript JavaScript utility for</font>

331
00:16:55,020 --> 00:17:04,379
making complete libraries and that's now

332
00:16:57,570 --> 00:17:06,150
also<font color="#E5E5E5"> being integrated into</font><font color="#CCCCCC"> pi circuit so</font>

333
00:17:04,380 --> 00:17:07,740
layout I already mentioned<font color="#CCCCCC"> pi circuit</font>

334
00:17:06,150 --> 00:17:12,870
can do<font color="#E5E5E5"> layout and of course you can do</font>

335
00:17:07,740 --> 00:17:14,880
<font color="#E5E5E5">scripting within</font><font color="#CCCCCC"> high card and you use</font>

336
00:17:12,869 --> 00:17:20,149
<font color="#E5E5E5">use your programming constructs</font><font color="#CCCCCC"> that way</font>

337
00:17:14,880 --> 00:17:23,429
to help you<font color="#E5E5E5"> make make tasks easier so</font>

338
00:17:20,150 --> 00:17:30,420
kind<font color="#E5E5E5"> of back to this we've</font><font color="#CCCCCC"> just some of</font>

339
00:17:23,429 --> 00:17:33,690
these just unlike on the<font color="#CCCCCC"> third point the</font>

340
00:17:30,420 --> 00:17:35,490
modularity and<font color="#E5E5E5"> reusability</font><font color="#CCCCCC"> there's</font>

341
00:17:33,690 --> 00:17:36,840
<font color="#E5E5E5">obviously other ways you don't</font>

342
00:17:35,490 --> 00:17:38,910
<font color="#E5E5E5">necessarily</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> use programming</font>

343
00:17:36,840 --> 00:17:42,050
language<font color="#CCCCCC"> to make reusable bits of</font>

344
00:17:38,910 --> 00:17:42,050
circuit components and

345
00:17:42,380 --> 00:17:50,100
you can also this would<font color="#E5E5E5"> be another great</font>

346
00:17:48,240 --> 00:17:55,440
thing<font color="#E5E5E5"> that you that would be great to do</font>

347
00:17:50,100 --> 00:17:57,330
in there you can that's<font color="#E5E5E5"> you don't</font>

348
00:17:55,440 --> 00:18:04,140
<font color="#E5E5E5">necessarily need code for this you can</font>

349
00:17:57,330 --> 00:18:07,080
<font color="#E5E5E5">do visual this but kind of under subject</font>

350
00:18:04,140 --> 00:18:10,800
<font color="#CCCCCC">or Rios this is my other project which</font>

351
00:18:07,080 --> 00:18:13,980
is kids face dog which has reusable bits

352
00:18:10,800 --> 00:18:15,570
of like complete project<font color="#E5E5E5"> completely</font>

353
00:18:13,980 --> 00:18:17,400
defined projects that you could possibly

354
00:18:15,570 --> 00:18:22,169
reuse and it would be interesting<font color="#CCCCCC"> to</font>

355
00:18:17,400 --> 00:18:24,780
expand this<font color="#E5E5E5"> to have support for using</font>

356
00:18:22,170 --> 00:18:27,390
this as<font color="#CCCCCC"> in kind</font><font color="#E5E5E5"> of NPM or like a module</font>

357
00:18:24,780 --> 00:18:32,940
repository<font color="#E5E5E5"> to pull in bits of circuits</font>

358
00:18:27,390 --> 00:18:36,830
<font color="#E5E5E5">into your circuit</font><font color="#CCCCCC"> that's me actually so</font>

359
00:18:32,940 --> 00:18:40,380
I can like I could maybe do the demo

360
00:18:36,830 --> 00:18:42,750
<font color="#E5E5E5">I've I mean I'm 18 I it says 18 minutes</font>

361
00:18:40,380 --> 00:18:45,230
<font color="#E5E5E5">I'll try and do the demo while you think</font>

362
00:18:42,750 --> 00:18:45,230
of<font color="#CCCCCC"> questions</font>

363
00:18:57,060 --> 00:19:00,060
<font color="#E5E5E5">okay</font>

364
00:19:25,570 --> 00:19:30,269
yeah so<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the demo of electro guy</font>

365
00:19:28,059 --> 00:19:30,269
myself

366
00:19:35,100 --> 00:19:39,209
that's not electrochemist fault

367
00:19:47,459 --> 00:20:42,129
<font color="#CCCCCC">hmmm it's frozen okay I think I'll take</font>

368
00:19:50,799 --> 00:20:46,839
questions yeah I'm aware that so the

369
00:20:42,129 --> 00:20:49,119
<font color="#E5E5E5">question is whether</font><font color="#CCCCCC"> ERC checks</font><font color="#E5E5E5"> provided</font>

370
00:20:46,839 --> 00:20:51,309
in any<font color="#E5E5E5"> of these circuit</font><font color="#CCCCCC"> description</font>

371
00:20:49,119 --> 00:20:54,279
languages and I'm<font color="#E5E5E5"> aware that definitely</font>

372
00:20:51,309 --> 00:20:57,070
for skittle and pie circuit<font color="#E5E5E5"> they have</font>

373
00:20:54,279 --> 00:20:58,749
<font color="#CCCCCC">built-in</font><font color="#E5E5E5"> GRC functions and it's</font>

374
00:20:57,070 --> 00:21:00,639
<font color="#E5E5E5">something for</font><font color="#CCCCCC"> replicas it's not done yet</font>

375
00:20:58,749 --> 00:21:02,769
<font color="#CCCCCC">obviously I'm just</font><font color="#E5E5E5"> starting out with it</font>

376
00:21:00,639 --> 00:21:06,008
<font color="#E5E5E5">and but it's something I really want to</font>

377
00:21:02,769 --> 00:21:08,619
focus on<font color="#E5E5E5"> kind of seeing where where</font>

378
00:21:06,009 --> 00:21:11,729
static<font color="#E5E5E5"> analysis ends and where the ERC</font>

379
00:21:08,619 --> 00:21:11,728
<font color="#E5E5E5">checks again really</font>

380
00:21:15,610 --> 00:21:17,820
<font color="#E5E5E5">yeah</font>

381
00:21:33,920 --> 00:21:39,660
yeah the closest thing the question<font color="#CCCCCC"> was</font>

382
00:21:36,600 --> 00:21:45,230
whether there was a kind of integrated

383
00:21:39,660 --> 00:21:47,820
<font color="#E5E5E5">solution for visualizing the PCB</font><font color="#CCCCCC"> and the</font>

384
00:21:45,230 --> 00:21:51,240
<font color="#E5E5E5">schematic and</font><font color="#CCCCCC"> the PCB</font><font color="#E5E5E5"> and the code in</font>

385
00:21:47,820 --> 00:21:53,610
one<font color="#E5E5E5"> kind of package and I know Dave Kara</font>

386
00:21:51,240 --> 00:21:55,920
Finnigan from PI<font color="#CCCCCC"> circa</font><font color="#E5E5E5"> is working on on</font>

387
00:21:53,610 --> 00:21:57,510
a viewer<font color="#E5E5E5"> I will be as well for</font><font color="#CCCCCC"> replicate</font>

388
00:21:55,920 --> 00:22:04,020
<font color="#CCCCCC">will probably collaborate on this</font>

389
00:21:57,510 --> 00:22:07,070
<font color="#E5E5E5">somehow yeah but this there's only</font>

390
00:22:04,020 --> 00:22:07,070
<font color="#E5E5E5">there's nothing ready</font>

391
00:22:47,060 --> 00:23:07,409
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> yeah that's</font><font color="#CCCCCC"> I have to</font><font color="#E5E5E5"> so there so</font>

392
00:23:04,290 --> 00:23:09,510
I'm in the well<font color="#E5E5E5"> not really question the</font>

393
00:23:07,410 --> 00:23:12,780
statement was that<font color="#E5E5E5"> there's there's</font>

394
00:23:09,510 --> 00:23:17,570
layout<font color="#CCCCCC"> information is</font><font color="#E5E5E5"> the possibility to</font>

395
00:23:12,780 --> 00:23:19,649
do layout with with<font color="#E5E5E5"> very</font><font color="#CCCCCC"> log a mess I</font>

396
00:23:17,570 --> 00:23:21,419
haven't looked too closely a very<font color="#CCCCCC"> long</font>

397
00:23:19,650 --> 00:23:23,370
<font color="#CCCCCC">MLS in</font><font color="#E5E5E5"> this because it seemed</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> it</font>

398
00:23:21,420 --> 00:23:25,910
<font color="#CCCCCC">was very targeted at simulation and</font>

399
00:23:23,370 --> 00:23:27,810
that's not what I was interested in but

400
00:23:25,910 --> 00:23:32,690
yeah I will also<font color="#E5E5E5"> check out your</font>

401
00:23:27,810 --> 00:23:32,690
presentation but not before

402
00:23:35,610 --> 00:23:42,339
[Applause]

