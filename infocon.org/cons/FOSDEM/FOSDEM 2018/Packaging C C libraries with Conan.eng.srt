1
00:00:04,650 --> 00:00:11,460
so you<font color="#CCCCCC"> Conan and how we use</font><font color="#E5E5E5"> it to</font>

2
00:00:08,220 --> 00:00:14,250
package C and C++ dependencies<font color="#E5E5E5"> but first</font>

3
00:00:11,460 --> 00:00:17,010
<font color="#CCCCCC">I'd introduce myself</font><font color="#E5E5E5"> briefly so I'm</font>

4
00:00:14,250 --> 00:00:20,880
<font color="#CCCCCC">totally you I work at tinker based in</font>

5
00:00:17,010 --> 00:00:24,029
Paris and I use<font color="#E5E5E5"> Conan a lot at work to</font>

6
00:00:20,880 --> 00:00:27,349
package for<font color="#E5E5E5"> Windows every Mac Mac OS</font>

7
00:00:24,029 --> 00:00:30,840
Linux and Android and<font color="#E5E5E5"> iOS</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm also</font>

8
00:00:27,350 --> 00:00:36,449
proud very proud<font color="#E5E5E5"> one-time contributor as</font>

9
00:00:30,840 --> 00:00:38,820
you can see that's<font color="#E5E5E5"> a start so thank you</font>

10
00:00:36,449 --> 00:00:42,000
<font color="#CCCCCC">we are</font><font color="#E5E5E5"> doing an end-to-end encryption</font>

11
00:00:38,820 --> 00:00:45,739
SDK<font color="#E5E5E5"> the first version is</font><font color="#CCCCCC"> available in</font>

12
00:00:42,000 --> 00:00:50,390
JavaScript and we<font color="#CCCCCC"> currently actively</font>

13
00:00:45,739 --> 00:00:53,070
developing the Android<font color="#E5E5E5"> and iOS SDK so</font>

14
00:00:50,390 --> 00:00:55,050
<font color="#CCCCCC">when we decided to</font><font color="#E5E5E5"> develop the native</font>

15
00:00:53,070 --> 00:00:57,660
version<font color="#E5E5E5"> everyone in the team was really</font>

16
00:00:55,050 --> 00:01:02,578
excited because most of us<font color="#CCCCCC"> have our</font>

17
00:00:57,660 --> 00:01:05,160
back-end developers<font color="#E5E5E5"> but at one point</font>

18
00:01:02,579 --> 00:01:10,770
<font color="#CCCCCC">someone asked well what language should</font>

19
00:01:05,160 --> 00:01:13,009
we use and then after a few<font color="#E5E5E5"> days</font><font color="#CCCCCC"> of</font>

20
00:01:10,770 --> 00:01:15,869
constructive and intelligent discussions

21
00:01:13,009 --> 00:01:20,130
we agreed on<font color="#E5E5E5"> three key points</font><font color="#CCCCCC"> that the</font>

22
00:01:15,869 --> 00:01:23,670
language had to have so the first<font color="#E5E5E5"> of all</font>

23
00:01:20,130 --> 00:01:25,380
<font color="#CCCCCC">is write once run everywhere</font><font color="#E5E5E5"> because we</font>

24
00:01:23,670 --> 00:01:28,830
<font color="#E5E5E5">don't want to write everything in Swift</font>

25
00:01:25,380 --> 00:01:31,848
and then in<font color="#E5E5E5"> Catalan or Java we wanted</font>

26
00:01:28,830 --> 00:01:34,800
one code base<font color="#E5E5E5"> then</font><font color="#CCCCCC"> high-performance</font>

27
00:01:31,849 --> 00:01:36,869
<font color="#E5E5E5">especially for</font><font color="#CCCCCC"> mobile devices</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> also</font>

28
00:01:34,800 --> 00:01:38,940
great or at<font color="#E5E5E5"> least good dependency</font>

29
00:01:36,869 --> 00:01:41,399
management and that's why we<font color="#E5E5E5"> chose C++</font>

30
00:01:38,940 --> 00:01:43,679
now I know what you're thinking what<font color="#CCCCCC"> the</font>

31
00:01:41,399 --> 00:01:45,899
hell is this guy talking about<font color="#CCCCCC"> C+ brandy</font>

32
00:01:43,679 --> 00:01:47,940
<font color="#E5E5E5">and good discipline</font><font color="#CCCCCC"> NC management</font><font color="#E5E5E5"> don't</font>

33
00:01:45,899 --> 00:01:50,789
<font color="#CCCCCC">go in the same slide and instru that</font>

34
00:01:47,940 --> 00:01:53,970
usually it looks like this<font color="#E5E5E5"> for the</font>

35
00:01:50,789 --> 00:01:56,399
unusual<font color="#CCCCCC"> support plus dependencies I mean</font>

36
00:01:53,970 --> 00:02:00,539
who doesn't love to<font color="#E5E5E5"> upgrade open SSL on</font>

37
00:01:56,399 --> 00:02:03,869
<font color="#E5E5E5">Windows for example our boost but that</font>

38
00:02:00,539 --> 00:02:04,890
was before<font color="#CCCCCC"> Conan so Conan is</font><font color="#E5E5E5"> a C++</font>

39
00:02:03,869 --> 00:02:07,530
package manager

40
00:02:04,890 --> 00:02:11,090
it works with all the languages but

41
00:02:07,530 --> 00:02:14,129
primarily primarily<font color="#E5E5E5"> design around those</font>

42
00:02:11,090 --> 00:02:16,379
it's disfranchised<font color="#E5E5E5"> so you can oust your</font>

43
00:02:14,129 --> 00:02:18,179
<font color="#E5E5E5">own server that's why what we do it's</font>

44
00:02:16,379 --> 00:02:20,879
open source<font color="#CCCCCC"> available on github</font>

45
00:02:18,180 --> 00:02:23,610
it's written<font color="#CCCCCC"> in Python</font><font color="#E5E5E5"> in Python</font>

46
00:02:20,879 --> 00:02:28,018
compatible with<font color="#CCCCCC"> two</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> so you can</font>

47
00:02:23,610 --> 00:02:31,920
<font color="#E5E5E5">run</font><font color="#CCCCCC"> it everywhere</font><font color="#E5E5E5"> so I have two parts</font>

48
00:02:28,019 --> 00:02:35,159
now<font color="#E5E5E5"> I have one the basic package</font>

49
00:02:31,920 --> 00:02:37,078
creation<font color="#E5E5E5"> upload and retrieval no sort of</font>

50
00:02:35,159 --> 00:02:40,439
package management expect and after that

51
00:02:37,079 --> 00:02:44,129
<font color="#E5E5E5">I'll show you more how we use</font><font color="#CCCCCC"> Conan</font><font color="#E5E5E5"> as a</font>

52
00:02:40,439 --> 00:02:47,970
cross<font color="#E5E5E5"> build tool for Android</font><font color="#CCCCCC"> so first</font>

53
00:02:44,129 --> 00:02:51,149
there's the cone<font color="#E5E5E5"> on</font><font color="#CCCCCC"> create method we</font>

54
00:02:47,970 --> 00:02:54,480
tells you to create packages so you have

55
00:02:51,150 --> 00:02:56,730
a<font color="#E5E5E5"> recipe that</font><font color="#CCCCCC"> I've shown in a bit you</font>

56
00:02:54,480 --> 00:02:59,488
<font color="#E5E5E5">can connect create will read the recipe</font>

57
00:02:56,730 --> 00:03:02,670
run it and it<font color="#E5E5E5"> will store the package in</font>

58
00:02:59,489 --> 00:03:05,340
<font color="#CCCCCC">your local cache</font><font color="#E5E5E5"> after that there's the</font>

59
00:03:02,670 --> 00:03:07,379
canal upload method which will find

60
00:03:05,340 --> 00:03:09,989
local packages you want to upload<font color="#E5E5E5"> and</font>

61
00:03:07,379 --> 00:03:11,358
then upload<font color="#CCCCCC"> it to the remote of your</font>

62
00:03:09,989 --> 00:03:15,329
choice

63
00:03:11,359 --> 00:03:18,989
so here's how a recipe look like it's

64
00:03:15,329 --> 00:03:22,829
playing<font color="#E5E5E5"> path Python so we import this</font>

65
00:03:18,989 --> 00:03:26,519
<font color="#E5E5E5">Conan file from the Conan's Python</font>

66
00:03:22,829 --> 00:03:29,310
module so the canal file is the basic

67
00:03:26,519 --> 00:03:31,199
framework<font color="#E5E5E5"> we will use so we define I</font>

68
00:03:29,310 --> 00:03:34,010
have a small library link on arithmetic

69
00:03:31,199 --> 00:03:39,030
<font color="#E5E5E5">which exposes not</font><font color="#CCCCCC"> function</font>

70
00:03:34,010 --> 00:03:41,099
and so I derive<font color="#E5E5E5"> my arithmetic</font><font color="#CCCCCC"> : class so</font>

71
00:03:39,030 --> 00:03:43,730
there's the future abuse<font color="#E5E5E5"> name the</font>

72
00:03:41,099 --> 00:03:47,069
version<font color="#CCCCCC"> and then there's</font><font color="#E5E5E5"> the settings so</font>

73
00:03:43,730 --> 00:03:49,078
the OS<font color="#E5E5E5"> and arch that you see here are</font>

74
00:03:47,069 --> 00:03:51,298
the<font color="#E5E5E5"> operating system and the</font>

75
00:03:49,079 --> 00:03:54,299
architecture on<font color="#E5E5E5"> which the package we run</font>

76
00:03:51,299 --> 00:03:58,199
<font color="#CCCCCC">will type</font><font color="#E5E5E5"> debugger it is and then</font>

77
00:03:54,299 --> 00:04:00,389
compiler<font color="#E5E5E5"> now we need to retrieve sources</font>

78
00:03:58,199 --> 00:04:05,310
so I will fetch<font color="#E5E5E5"> the source from my</font>

79
00:04:00,389 --> 00:04:10,139
github account<font color="#CCCCCC"> and simply</font><font color="#E5E5E5"> run git clone</font>

80
00:04:05,310 --> 00:04:13,440
<font color="#CCCCCC">and then I will use the Simek helper</font><font color="#E5E5E5"> in</font>

81
00:04:10,139 --> 00:04:18,299
<font color="#E5E5E5">the bid method to configure build and</font>

82
00:04:13,440 --> 00:04:19,829
install my project<font color="#CCCCCC"> I will only</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> Simek</font>

83
00:04:18,298 --> 00:04:22,530
during this presentation

84
00:04:19,829 --> 00:04:26,219
<font color="#CCCCCC">Coenen provides a</font><font color="#E5E5E5"> lots of helper</font><font color="#CCCCCC"> you can</font>

85
00:04:22,530 --> 00:04:30,219
work with my<font color="#CCCCCC"> son auto tools</font><font color="#E5E5E5"> and a lot</font><font color="#CCCCCC"> of</font>

86
00:04:26,219 --> 00:04:34,190
<font color="#CCCCCC">the</font><font color="#E5E5E5"> other sorry lots of others</font><font color="#CCCCCC"> in</font>

87
00:04:30,220 --> 00:04:37,430
and then there's<font color="#E5E5E5"> we need to expose to</font>

88
00:04:34,190 --> 00:04:40,520
<font color="#CCCCCC">our consumers</font><font color="#E5E5E5"> some information in this</font>

89
00:04:37,430 --> 00:04:44,240
<font color="#CCCCCC">case which library they need to link</font>

90
00:04:40,520 --> 00:04:46,460
against<font color="#E5E5E5"> there's others there's other</font>

91
00:04:44,240 --> 00:04:48,860
attributes by default like the include

92
00:04:46,460 --> 00:04:50,539
directory which is<font color="#CCCCCC"> named include by</font>

93
00:04:48,860 --> 00:04:55,370
default so you<font color="#E5E5E5"> don't have to specify</font>

94
00:04:50,539 --> 00:04:58,550
that so then to consume<font color="#E5E5E5"> package you need</font>

95
00:04:55,370 --> 00:05:02,000
to use the<font color="#CCCCCC"> conan install method so</font>

96
00:04:58,550 --> 00:05:03,440
there's an error<font color="#E5E5E5"> in the slides here it's</font>

97
00:05:02,000 --> 00:05:05,000
not<font color="#CCCCCC"> running recipe</font><font color="#E5E5E5"> it's check</font>

98
00:05:03,440 --> 00:05:07,610
requirements

99
00:05:05,000 --> 00:05:10,130
so there's a<font color="#CCCCCC"> conan file dot txt</font><font color="#E5E5E5"> that</font>

100
00:05:07,610 --> 00:05:13,220
<font color="#CCCCCC">i've shown in the next slide</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> you</font>

101
00:05:10,130 --> 00:05:15,770
declare your requirements<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> gonna</font>

102
00:05:13,220 --> 00:05:19,550
install with read<font color="#CCCCCC"> up file then try to</font>

103
00:05:15,770 --> 00:05:22,818
fetch packages in<font color="#CCCCCC"> it</font><font color="#E5E5E5"> either in your</font>

104
00:05:19,550 --> 00:05:25,190
local cache or in remotes and then

105
00:05:22,819 --> 00:05:28,490
finally it<font color="#E5E5E5"> will generate build</font>

106
00:05:25,190 --> 00:05:31,520
information<font color="#E5E5E5"> files in this case see make</font>

107
00:05:28,490 --> 00:05:33,729
so it will<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> Conan bin info dot C</font>

108
00:05:31,520 --> 00:05:39,710
make file containing every include

109
00:05:33,729 --> 00:05:44,810
library directory<font color="#CCCCCC"> targets</font><font color="#E5E5E5"> etc extra like</font>

110
00:05:39,710 --> 00:05:47,210
a<font color="#E5E5E5"> pkg config file so in our current file</font>

111
00:05:44,810 --> 00:05:50,090
dot txt we have simply this section

112
00:05:47,210 --> 00:05:54,049
requires<font color="#E5E5E5"> and we have to put references</font>

113
00:05:50,090 --> 00:05:55,909
to<font color="#CCCCCC"> our packages in Canal references are</font>

114
00:05:54,050 --> 00:05:59,389
composed of the name<font color="#E5E5E5"> of the package it's</font>

115
00:05:55,909 --> 00:06:01,789
version<font color="#E5E5E5"> and then you</font><font color="#CCCCCC"> a username and a</font>

116
00:05:59,389 --> 00:06:04,759
<font color="#E5E5E5">channel so the username</font><font color="#CCCCCC"> is usually the</font>

117
00:06:01,789 --> 00:06:08,960
author<font color="#CCCCCC"> of the recipe</font><font color="#E5E5E5"> in this case me and</font>

118
00:06:04,759 --> 00:06:11,509
the channel can<font color="#CCCCCC"> be compared to a</font><font color="#E5E5E5"> git</font>

119
00:06:08,960 --> 00:06:14,180
branch so like in Conan by default the

120
00:06:11,509 --> 00:06:18,650
stable<font color="#E5E5E5"> branch the stable channel is the</font>

121
00:06:14,180 --> 00:06:22,029
master<font color="#E5E5E5"> branch</font><font color="#CCCCCC"> and then we need to</font><font color="#E5E5E5"> say</font><font color="#CCCCCC"> to</font>

122
00:06:18,650 --> 00:06:25,429
tell Conan we want<font color="#CCCCCC"> see make files</font>

123
00:06:22,029 --> 00:06:27,949
generated here you can put a lot of

124
00:06:25,430 --> 00:06:31,370
<font color="#E5E5E5">other things so I</font><font color="#CCCCCC"> said PKG config can</font>

125
00:06:27,949 --> 00:06:36,199
use even xcode files<font color="#E5E5E5"> don't use that that</font>

126
00:06:31,370 --> 00:06:39,710
yeah<font color="#E5E5E5"> you can use that and then one final</font>

127
00:06:36,199 --> 00:06:42,390
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> change to</font><font color="#CCCCCC"> our project so this</font>

128
00:06:39,710 --> 00:06:44,760
is<font color="#E5E5E5"> see mclean txt</font>

129
00:06:42,390 --> 00:06:47,280
was written before the<font color="#CCCCCC"> Coonan</font>

130
00:06:44,760 --> 00:06:49,530
integration as you can see we have our

131
00:06:47,280 --> 00:06:53,400
calculator project<font color="#E5E5E5"> we have a fine</font>

132
00:06:49,530 --> 00:06:56,099
package then<font color="#E5E5E5"> add executable and finally</font>

133
00:06:53,400 --> 00:07:00,750
we link our<font color="#E5E5E5"> executable to the package</font>

134
00:06:56,100 --> 00:07:02,550
that<font color="#E5E5E5"> we found if use find package with</font>

135
00:07:00,750 --> 00:07:05,490
<font color="#CCCCCC">canal there's only two</font><font color="#E5E5E5"> lines to encode</font>

136
00:07:02,550 --> 00:07:08,610
you have to include the file<font color="#E5E5E5"> that can</font>

137
00:07:05,490 --> 00:07:10,080
ungenerous it previously<font color="#CCCCCC"> and then you</font>

138
00:07:08,610 --> 00:07:11,790
need<font color="#E5E5E5"> to call this</font><font color="#CCCCCC"> Coenen basic</font><font color="#E5E5E5"> set of</font>

139
00:07:10,080 --> 00:07:14,219
macro<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that's it</font>

140
00:07:11,790 --> 00:07:17,580
if you like me<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> like</font>

141
00:07:14,220 --> 00:07:20,820
writing<font color="#E5E5E5"> like package files you can</font>

142
00:07:17,580 --> 00:07:23,430
simply use the targets argument to the

143
00:07:20,820 --> 00:07:26,430
<font color="#CCCCCC">Coenen basic set of macro</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it will</font>

144
00:07:23,430 --> 00:07:30,570
then<font color="#E5E5E5"> come</font><font color="#CCCCCC"> on we'll create</font><font color="#E5E5E5"> a namespace</font>

145
00:07:26,430 --> 00:07:33,210
named<font color="#E5E5E5"> Coenen pkg and add a target for</font>

146
00:07:30,570 --> 00:07:37,230
each of your dependencies so<font color="#E5E5E5"> here I</font>

147
00:07:33,210 --> 00:07:41,909
replaced the arithmetic dot arithmetic

148
00:07:37,230 --> 00:07:49,220
by current pkg arithmetic so time<font color="#E5E5E5"> for a</font>

149
00:07:41,910 --> 00:07:52,650
little<font color="#E5E5E5"> demo so I'm inside the arithmetic</font>

150
00:07:49,220 --> 00:07:56,310
<font color="#E5E5E5">folder and I</font><font color="#CCCCCC"> will use current</font><font color="#E5E5E5"> create to</font>

151
00:07:52,650 --> 00:07:59,520
create the package so can uncreate it

152
00:07:56,310 --> 00:08:06,240
needs two arguments<font color="#CCCCCC"> G path to the recipe</font>

153
00:07:59,520 --> 00:08:13,229
and the<font color="#E5E5E5"> username and channel</font><font color="#CCCCCC"> named</font>

154
00:08:06,240 --> 00:08:15,090
<font color="#CCCCCC">assumptions</font><font color="#E5E5E5"> and so in the so here you</font>

155
00:08:13,230 --> 00:08:18,440
can see<font color="#CCCCCC"> Kannan is running the sauce</font>

156
00:08:15,090 --> 00:08:22,229
methods<font color="#CCCCCC"> planning in the github now is</font>

157
00:08:18,440 --> 00:08:27,630
launching<font color="#CCCCCC"> CMake to build the package</font>

158
00:08:22,230 --> 00:08:34,130
<font color="#E5E5E5">install and done and we can see</font><font color="#CCCCCC"> with the</font>

159
00:08:27,630 --> 00:08:34,130
<font color="#CCCCCC">canal search method</font><font color="#E5E5E5"> of it is made</font>

160
00:08:36,950 --> 00:08:42,860
and here we<font color="#E5E5E5"> can see we have</font><font color="#CCCCCC"> a package in</font>

161
00:08:39,630 --> 00:08:48,030
our local<font color="#E5E5E5"> cache with all those</font><font color="#CCCCCC"> settings</font>

162
00:08:42,860 --> 00:08:51,870
<font color="#E5E5E5">so now</font><font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> upload this package to</font>

163
00:08:48,030 --> 00:08:57,839
my bin tray account<font color="#E5E5E5"> so here I have one</font>

164
00:08:51,870 --> 00:09:00,680
remote<font color="#E5E5E5"> smell</font><font color="#CCCCCC"> FOSDEM and then</font><font color="#E5E5E5"> i rewrite</font>

165
00:08:57,840 --> 00:09:00,680
<font color="#CCCCCC">this</font>

166
00:09:01,560 --> 00:09:15,660
I mean<font color="#E5E5E5"> I can see I pulled the recipe and</font>

167
00:09:09,899 --> 00:09:20,670
then the package<font color="#CCCCCC"> dot</font><font color="#E5E5E5"> Torchic G Z DZ so</font>

168
00:09:15,660 --> 00:09:22,949
now I will<font color="#CCCCCC"> try to use my package I will</font>

169
00:09:20,670 --> 00:09:25,620
on purpose remove it from my<font color="#E5E5E5"> local cache</font>

170
00:09:22,949 --> 00:09:42,029
to show you the<font color="#E5E5E5"> fetching from the server</font>

171
00:09:25,620 --> 00:09:45,779
<font color="#E5E5E5">so so I have my</font><font color="#CCCCCC"> content file txt in my</font>

172
00:09:42,029 --> 00:09:49,050
<font color="#CCCCCC">CMake there's only the to include lines</font>

173
00:09:45,779 --> 00:09:52,410
like I<font color="#E5E5E5"> so I show you you before so let's</font>

174
00:09:49,050 --> 00:09:54,899
create a<font color="#CCCCCC"> build directory and then run</font>

175
00:09:52,410 --> 00:09:57,920
gonna install and give it the D path to

176
00:09:54,899 --> 00:09:57,920
the current file<font color="#CCCCCC"> text</font>

177
00:10:01,520 --> 00:10:09,329
so it tried to<font color="#E5E5E5"> run on the default the</font>

178
00:10:06,120 --> 00:10:12,690
official repository remotes<font color="#E5E5E5"> didn't find</font>

179
00:10:09,330 --> 00:10:16,880
anything and so it<font color="#E5E5E5"> found in</font><font color="#CCCCCC"> Faust them</font>

180
00:10:12,690 --> 00:10:21,600
to 2018<font color="#CCCCCC"> download the package and here</font>

181
00:10:16,880 --> 00:10:27,510
generated the<font color="#CCCCCC"> Simic file now all I need</font>

182
00:10:21,600 --> 00:10:39,000
<font color="#CCCCCC">to do is see make green snake</font><font color="#E5E5E5"> red ninja</font>

183
00:10:27,510 --> 00:10:41,880
<font color="#E5E5E5">and use greater okay so come on</font><font color="#CCCCCC"> also</font>

184
00:10:39,000 --> 00:10:45,240
<font color="#CCCCCC">detected my settings but you</font><font color="#E5E5E5"> can specify</font>

185
00:10:41,880 --> 00:10:47,610
your<font color="#CCCCCC"> own like here I want let's</font><font color="#E5E5E5"> say of</font>

186
00:10:45,240 --> 00:10:53,010
GCC<font color="#CCCCCC"> seven and I want to use a really old</font>

187
00:10:47,610 --> 00:10:56,490
<font color="#E5E5E5">version of GCC six and I use the - s</font>

188
00:10:53,010 --> 00:10:58,350
options to specify the setting so let's

189
00:10:56,490 --> 00:11:01,650
say we want<font color="#CCCCCC"> to be able to align</font><font color="#E5E5E5"> five</font>

190
00:10:58,350 --> 00:11:04,140
with<font color="#E5E5E5"> the newest GCC ABI debug build it</font>

191
00:11:01,650 --> 00:11:07,439
gets a bit<font color="#E5E5E5"> tricky because yeah it's hard</font>

192
00:11:04,140 --> 00:11:09,810
<font color="#E5E5E5">to type it's long</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> so there's a</font>

193
00:11:07,440 --> 00:11:12,030
solution<font color="#E5E5E5"> you can use profiles instead</font>

194
00:11:09,810 --> 00:11:14,630
and<font color="#E5E5E5"> that's what you can use</font><font color="#CCCCCC"> this when</font>

195
00:11:12,030 --> 00:11:17,220
you don't write any settings<font color="#E5E5E5"> it</font>

196
00:11:14,630 --> 00:11:21,150
generates a default<font color="#CCCCCC"> profile</font><font color="#E5E5E5"> so that's</font>

197
00:11:17,220 --> 00:11:24,840
the g1<font color="#CCCCCC"> eternities online machine</font><font color="#E5E5E5"> Linux</font>

198
00:11:21,150 --> 00:11:28,890
<font color="#CCCCCC">except x64 GCC</font><font color="#E5E5E5"> seven and quick PSA by</font>

199
00:11:24,840 --> 00:11:33,150
default Conan will put the lip stood<font color="#CCCCCC"> c++</font>

200
00:11:28,890 --> 00:11:35,939
the old<font color="#E5E5E5"> GCC ABI as a default you don't</font>

201
00:11:33,150 --> 00:11:38,850
if you want the newest you have to use

202
00:11:35,940 --> 00:11:40,620
<font color="#E5E5E5">leaps to C++ 11 that's not something you</font>

203
00:11:38,850 --> 00:11:43,550
want<font color="#E5E5E5"> to discover after building 30</font>

204
00:11:40,620 --> 00:11:46,740
packages like me

205
00:11:43,550 --> 00:11:50,609
so let's refactor<font color="#CCCCCC"> our command line</font><font color="#E5E5E5"> and</font>

206
00:11:46,740 --> 00:11:55,520
we'll use simply<font color="#E5E5E5"> plain version 5 within</font>

207
00:11:50,610 --> 00:11:59,190
us WI in debug mode and now we simply

208
00:11:55,520 --> 00:12:02,120
rerun<font color="#CCCCCC"> cone and create now with the</font>

209
00:11:59,190 --> 00:12:06,270
double dash profile<font color="#E5E5E5"> the option and</font>

210
00:12:02,120 --> 00:12:08,760
<font color="#CCCCCC">giving our profile you</font><font color="#E5E5E5"> can still use the</font>

211
00:12:06,270 --> 00:12:11,970
dash<font color="#CCCCCC"> S option to specify setting to</font>

212
00:12:08,760 --> 00:12:14,700
override the<font color="#E5E5E5"> default ones or the</font><font color="#CCCCCC"> ones</font>

213
00:12:11,970 --> 00:12:21,280
<font color="#CCCCCC">specified in your</font><font color="#E5E5E5"> profile</font>

214
00:12:14,700 --> 00:12:23,650
so now I'll focus more<font color="#E5E5E5"> on the yeah</font><font color="#CCCCCC"> cross</font>

215
00:12:21,280 --> 00:12:26,230
<font color="#E5E5E5">building tool aspect and not so much the</font>

216
00:12:23,650 --> 00:12:29,620
<font color="#E5E5E5">package management</font><font color="#CCCCCC"> to show you how we</font>

217
00:12:26,230 --> 00:12:30,670
can<font color="#E5E5E5"> use content packages to cross</font>

218
00:12:29,620 --> 00:12:34,090
<font color="#E5E5E5">compile for Android</font>

219
00:12:30,670 --> 00:12:37,150
quite simply so we have a list<font color="#E5E5E5"> of</font>

220
00:12:34,090 --> 00:12:40,240
prerequisite for<font color="#E5E5E5"> enjoy building the NDK</font>

221
00:12:37,150 --> 00:12:43,660
<font color="#CCCCCC">of course we will use</font><font color="#E5E5E5"> standalone</font><font color="#CCCCCC"> drain</font>

222
00:12:40,240 --> 00:12:47,370
to<font color="#CCCCCC"> Train and we need a new current</font>

223
00:12:43,660 --> 00:12:51,310
profile but first I want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> introduce</font>

224
00:12:47,370 --> 00:12:54,070
build requirements so if you have a

225
00:12:51,310 --> 00:12:57,010
package<font color="#E5E5E5"> a which in its recipe is</font>

226
00:12:54,070 --> 00:13:00,300
declaring<font color="#E5E5E5"> set that aren't info dot foo</font>

227
00:12:57,010 --> 00:13:03,160
equals bar and that<font color="#E5E5E5"> you have a package B</font>

228
00:13:00,300 --> 00:13:05,939
that declares<font color="#E5E5E5"> a build requirement on</font><font color="#CCCCCC"> the</font>

229
00:13:03,160 --> 00:13:12,370
package a during<font color="#E5E5E5"> the iteration of</font>

230
00:13:05,940 --> 00:13:16,450
package B it will export the environment

231
00:13:12,370 --> 00:13:19,180
<font color="#CCCCCC">viable</font><font color="#E5E5E5"> in inside the environment of your</font>

232
00:13:16,450 --> 00:13:23,770
shell so inside package B you could do

233
00:13:19,180 --> 00:13:27,459
equal dollar foo and you have bar<font color="#E5E5E5"> it's</font>

234
00:13:23,770 --> 00:13:31,689
same thing<font color="#CCCCCC"> with CPP info</font><font color="#E5E5E5"> that we saw in</font>

235
00:13:27,460 --> 00:13:33,880
the previous slide if I declare self dot

236
00:13:31,690 --> 00:13:37,030
<font color="#CCCCCC">CPP in for that sis</font><font color="#E5E5E5"> root equals the path</font>

237
00:13:33,880 --> 00:13:40,210
to my<font color="#E5E5E5"> android sister --it it will appear</font>

238
00:13:37,030 --> 00:13:42,939
inside package B in the recipe as self

239
00:13:40,210 --> 00:13:45,790
that the<font color="#CCCCCC"> depth CPP info</font><font color="#E5E5E5"> that's his route</font>

240
00:13:42,940 --> 00:13:47,980
<font color="#E5E5E5">and why is that useful because the</font><font color="#CCCCCC"> C my</font>

241
00:13:45,790 --> 00:13:49,599
helper will be able<font color="#E5E5E5"> to automatically</font>

242
00:13:47,980 --> 00:13:53,560
detect that<font color="#E5E5E5"> and set the</font><font color="#CCCCCC"> sister</font>

243
00:13:49,600 --> 00:13:56,530
accordingly<font color="#E5E5E5"> so what</font><font color="#CCCCCC"> we'll do</font><font color="#E5E5E5"> we'll build</font>

244
00:13:53,560 --> 00:14:00,819
a standalone<font color="#E5E5E5"> tool chain that we have a</font>

245
00:13:56,530 --> 00:14:04,360
build requirement on the<font color="#E5E5E5"> NDK and then we</font>

246
00:14:00,820 --> 00:14:07,060
will throw the NDK and only use this

247
00:14:04,360 --> 00:14:10,380
tool chain<font color="#E5E5E5"> and her here</font><font color="#CCCCCC"> RS medic</font><font color="#E5E5E5"> will</font>

248
00:14:07,060 --> 00:14:14,890
have also been requirement the two thing

249
00:14:10,380 --> 00:14:19,390
so before that<font color="#CCCCCC"> be fortunate</font><font color="#E5E5E5"> use the</font>

250
00:14:14,890 --> 00:14:22,689
recipes there's<font color="#CCCCCC"> our</font><font color="#E5E5E5"> Android profile as</font>

251
00:14:19,390 --> 00:14:25,930
you<font color="#E5E5E5"> can see the OS</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> arch</font><font color="#CCCCCC"> are we have</font>

252
00:14:22,690 --> 00:14:28,750
been changed<font color="#CCCCCC"> to android arm v8</font>

253
00:14:25,930 --> 00:14:32,199
there's this<font color="#E5E5E5"> OS API level that is</font>

254
00:14:28,750 --> 00:14:36,910
specific to Android and then we'll use a

255
00:14:32,200 --> 00:14:38,650
client<font color="#CCCCCC"> five with lip</font><font color="#E5E5E5"> C++ and there's two</font>

256
00:14:36,910 --> 00:14:44,560
new settings that<font color="#CCCCCC"> have</font><font color="#E5E5E5"> been introduced</font>

257
00:14:38,650 --> 00:14:47,050
in<font color="#E5E5E5"> Canon wine point point</font><font color="#CCCCCC"> O to ease the</font>

258
00:14:44,560 --> 00:14:50,650
<font color="#E5E5E5">development of build requirement</font>

259
00:14:47,050 --> 00:14:53,439
packages because I want the NDK<font color="#E5E5E5"> to run</font>

260
00:14:50,650 --> 00:14:58,660
on my build platform<font color="#E5E5E5"> not on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Android</font>

261
00:14:53,440 --> 00:15:01,420
<font color="#E5E5E5">device and that's why I was build</font><font color="#CCCCCC"> Alps</font>

262
00:14:58,660 --> 00:15:04,540
to make<font color="#E5E5E5"> the difference otherwise</font><font color="#CCCCCC"> you</font>

263
00:15:01,420 --> 00:15:06,579
will get a super cross compiler<font color="#CCCCCC"> that can</font>

264
00:15:04,540 --> 00:15:09,910
<font color="#E5E5E5">run on your mobile phone</font><font color="#CCCCCC"> you don't want</font>

265
00:15:06,580 --> 00:15:13,589
to use that so here<font color="#E5E5E5"> always build equals</font>

266
00:15:09,910 --> 00:15:18,370
Linux and as<font color="#CCCCCC"> building as equals XE d 4</font>

267
00:15:13,589 --> 00:15:22,420
so the NDK recipe<font color="#E5E5E5"> right</font><font color="#CCCCCC"> before same</font>

268
00:15:18,370 --> 00:15:24,910
cannon fire start and then the settings

269
00:15:22,420 --> 00:15:28,439
we only only<font color="#E5E5E5"> need always build</font><font color="#CCCCCC"> an</font>

270
00:15:24,910 --> 00:15:33,790
<font color="#CCCCCC">obstacle because</font><font color="#E5E5E5"> we will fetch the</font>

271
00:15:28,440 --> 00:15:39,190
<font color="#E5E5E5">precompiled binary arts archive for</font>

272
00:15:33,790 --> 00:15:41,410
<font color="#CCCCCC">linux x64 then this package method I</font>

273
00:15:39,190 --> 00:15:44,620
didn't use it<font color="#CCCCCC"> in the previous slide</font>

274
00:15:41,410 --> 00:15:47,439
<font color="#E5E5E5">because</font><font color="#CCCCCC"> C make installs already did the</font>

275
00:15:44,620 --> 00:15:49,390
job<font color="#CCCCCC"> but here there's no C make and all</font>

276
00:15:47,440 --> 00:15:53,350
we want to do is copy everything from

277
00:15:49,390 --> 00:15:56,709
<font color="#E5E5E5">the Android NDK and uncompressed</font>

278
00:15:53,350 --> 00:16:01,450
<font color="#E5E5E5">archieve archive</font><font color="#CCCCCC"> right to our package</font>

279
00:15:56,709 --> 00:16:04,150
folder and then to be able<font color="#CCCCCC"> to build a</font>

280
00:16:01,450 --> 00:16:06,790
<font color="#E5E5E5">standalone to chain we need to have</font>

281
00:16:04,150 --> 00:16:10,209
access<font color="#CCCCCC"> to this bill</font><font color="#E5E5E5"> slash tools folder</font>

282
00:16:06,790 --> 00:16:13,270
<font color="#CCCCCC">that's why we put it in our selves in</font>

283
00:16:10,209 --> 00:16:16,989
<font color="#E5E5E5">folder path so which means in the</font>

284
00:16:13,270 --> 00:16:18,760
<font color="#E5E5E5">standalone to chain recipe this build</font>

285
00:16:16,990 --> 00:16:20,860
tools folder will<font color="#CCCCCC"> be in the</font><font color="#E5E5E5"> path and</font>

286
00:16:18,760 --> 00:16:25,900
once this<font color="#E5E5E5"> tool chain will</font><font color="#CCCCCC"> be created it</font>

287
00:16:20,860 --> 00:16:30,520
will be removed so the tools and recipe

288
00:16:25,900 --> 00:16:32,470
doesn't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> provenance 9</font><font color="#E5E5E5"> we same thing</font>

289
00:16:30,520 --> 00:16:34,240
we need always<font color="#E5E5E5"> build</font><font color="#CCCCCC"> our build and</font><font color="#E5E5E5"> then</font>

290
00:16:32,470 --> 00:16:37,300
we declare<font color="#E5E5E5"> our</font><font color="#CCCCCC"> builder requirements on</font>

291
00:16:34,240 --> 00:16:38,230
the<font color="#E5E5E5"> probably previous package that we</font>

292
00:16:37,300 --> 00:16:41,359
got

293
00:16:38,230 --> 00:16:43,940
in the build command<font color="#E5E5E5"> we only need this</font>

294
00:16:41,360 --> 00:16:47,630
<font color="#CCCCCC">make standard Shane Dallas H which</font><font color="#E5E5E5"> is</font>

295
00:16:43,940 --> 00:16:51,230
located in<font color="#E5E5E5"> the indica tools folder so we</font>

296
00:16:47,630 --> 00:16:57,500
simply run<font color="#E5E5E5"> it and then in the package</font>

297
00:16:51,230 --> 00:17:00,590
info<font color="#E5E5E5"> we set our sis word so bit</font>

298
00:16:57,500 --> 00:17:04,280
requirements can be<font color="#E5E5E5"> specified in two</font>

299
00:17:00,590 --> 00:17:06,920
ways either in the recipe<font color="#E5E5E5"> but it's okay</font>

300
00:17:04,280 --> 00:17:09,530
<font color="#CCCCCC">for a few package</font><font color="#E5E5E5"> but here I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font>

301
00:17:06,920 --> 00:17:11,569
my<font color="#CCCCCC"> tools</font><font color="#E5E5E5"> and each time that I want to</font>

302
00:17:09,530 --> 00:17:13,639
cross compile and I don't<font color="#E5E5E5"> want to use</font><font color="#CCCCCC"> it</font>

303
00:17:11,569 --> 00:17:17,089
to add a<font color="#CCCCCC"> very requirement in every</font>

304
00:17:13,640 --> 00:17:19,670
recipe<font color="#CCCCCC"> so what I can</font><font color="#E5E5E5"> do is add the bill</font>

305
00:17:17,089 --> 00:17:22,429
<font color="#E5E5E5">requires section in my profile</font><font color="#CCCCCC"> and put</font>

306
00:17:19,670 --> 00:17:25,910
it there<font color="#E5E5E5"> and now each time that I will</font>

307
00:17:22,430 --> 00:17:28,670
use this profile<font color="#E5E5E5"> I will use this</font><font color="#CCCCCC"> bill</font>

308
00:17:25,910 --> 00:17:32,840
requirement<font color="#CCCCCC"> so it's time</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> our final</font>

309
00:17:28,670 --> 00:17:34,340
demo<font color="#CCCCCC"> I already don't</font><font color="#E5E5E5"> need it the</font><font color="#CCCCCC"> ndk so</font>

310
00:17:32,840 --> 00:17:39,790
you won't have<font color="#CCCCCC"> to watch</font><font color="#E5E5E5"> the progress bar</font>

311
00:17:34,340 --> 00:17:43,270
<font color="#CCCCCC">for ten</font><font color="#E5E5E5"> minutes so let's simply build</font>

312
00:17:39,790 --> 00:17:43,270
<font color="#E5E5E5">this will</font><font color="#CCCCCC"> chain</font>

313
00:17:46,040 --> 00:17:55,680
Troy profile<font color="#E5E5E5"> I'm a bit</font><font color="#CCCCCC"> because</font>

314
00:17:50,940 --> 00:17:59,270
I only handle one to train our<font color="#CCCCCC"> arm 64</font>

315
00:17:55,680 --> 00:18:03,140
and that's it for sake of simplicity<font color="#CCCCCC"> and</font>

316
00:17:59,270 --> 00:18:10,110
then<font color="#CCCCCC"> I</font><font color="#E5E5E5"> like to</font><font color="#CCCCCC"> Train</font><font color="#E5E5E5"> so I can show you</font>

317
00:18:03,140 --> 00:18:13,130
inside<font color="#CCCCCC"> Mari</font><font color="#E5E5E5"> local cache here</font><font color="#CCCCCC"> I have</font>

318
00:18:10,110 --> 00:18:17,280
<font color="#E5E5E5">everything already packaging packaged</font>

319
00:18:13,130 --> 00:18:22,650
for completion so let's go<font color="#E5E5E5"> into our</font>

320
00:18:17,280 --> 00:18:29,100
previous arithmetic folder and you

321
00:18:22,650 --> 00:18:32,820
<font color="#E5E5E5">couldn't create so now we can see it</font>

322
00:18:29,100 --> 00:18:35,490
<font color="#CCCCCC">cannot put so in your current</font><font color="#E5E5E5"> tells us</font>

323
00:18:32,820 --> 00:18:39,750
your course building<font color="#E5E5E5"> from Linux x264 to</font>

324
00:18:35,490 --> 00:18:43,110
<font color="#CCCCCC">Android</font><font color="#E5E5E5"> and 64 same thing as before and</font>

325
00:18:39,750 --> 00:18:45,980
here there's build<font color="#E5E5E5"> requirements so our</font>

326
00:18:43,110 --> 00:18:50,060
<font color="#E5E5E5">to chain has been correctly detected</font>

327
00:18:45,980 --> 00:18:54,600
simply we haven't changed<font color="#CCCCCC"> the arithmetic</font>

328
00:18:50,060 --> 00:18:57,480
recipe which<font color="#CCCCCC"> is great and</font><font color="#E5E5E5"> now see make</font>

329
00:18:54,600 --> 00:19:00,990
already finds<font color="#CCCCCC"> everything the API level</font>

330
00:18:57,480 --> 00:19:04,770
the<font color="#E5E5E5"> IBI etc the compiler everything gets</font>

331
00:19:00,990 --> 00:19:07,070
<font color="#E5E5E5">built so I can rerun</font><font color="#CCCCCC"> Coenen search sorry</font>

332
00:19:04,770 --> 00:19:07,070
<font color="#CCCCCC">up</font>

333
00:19:09,830 --> 00:19:17,639
and I am now I have to package first one

334
00:19:13,889 --> 00:19:28,080
for my own<font color="#E5E5E5"> night machine and here for</font>

335
00:19:17,639 --> 00:19:32,158
Hajj and Android app<font color="#E5E5E5"> API</font><font color="#CCCCCC"> 21 and that's</font>

336
00:19:28,080 --> 00:19:34,408
it<font color="#E5E5E5"> so I put I added a few</font><font color="#CCCCCC"> things so our</font>

337
00:19:32,159 --> 00:19:38,249
<font color="#E5E5E5">website</font><font color="#CCCCCC"> or documentation</font><font color="#E5E5E5"> there our</font>

338
00:19:34,409 --> 00:19:40,919
github and the<font color="#E5E5E5"> conan website gone on</font>

339
00:19:38,249 --> 00:19:42,149
github<font color="#CCCCCC"> there's also a slack channel on</font>

340
00:19:40,919 --> 00:19:46,519
the CPP<font color="#CCCCCC"> line</font>

341
00:19:42,149 --> 00:19:49,228
slack<font color="#CCCCCC"> you can join the hashtag Conan and</font>

342
00:19:46,519 --> 00:20:06,499
I guess I'll take some questions from

343
00:19:49,229 --> 00:20:06,499
<font color="#E5E5E5">now does it work on the windows yes yes</font>

344
00:20:10,759 --> 00:20:20,070
<font color="#E5E5E5">I I know this so the question is is this</font>

345
00:20:16,710 --> 00:20:22,470
possible to build the<font color="#E5E5E5"> Deb or RPM</font>

346
00:20:20,070 --> 00:20:25,950
packages<font color="#E5E5E5"> directly from :</font>

347
00:20:22,470 --> 00:20:30,269
I don't know I've only packaged the<font color="#CCCCCC"> C++</font>

348
00:20:25,950 --> 00:20:32,609
dependencies from I I have no<font color="#E5E5E5"> knowledge</font>

349
00:20:30,269 --> 00:20:36,359
<font color="#E5E5E5">in distribution package management sorry</font>

350
00:20:32,609 --> 00:20:37,678
<font color="#CCCCCC">a bit of</font><font color="#E5E5E5"> a new</font><font color="#CCCCCC"> Twitter but</font><font color="#E5E5E5"> it might be</font>

351
00:20:36,359 --> 00:20:41,720
<font color="#CCCCCC">possible I don't know I</font><font color="#E5E5E5"> should I should</font>

352
00:20:37,679 --> 00:20:41,720
check yes

353
00:20:44,830 --> 00:20:51,189
<font color="#E5E5E5">okay so the question is how many</font>

354
00:20:48,640 --> 00:20:53,960
packages are already<font color="#E5E5E5"> available</font>

355
00:20:51,190 --> 00:20:58,570
<font color="#E5E5E5">prepackaged and</font><font color="#CCCCCC"> how many I had</font><font color="#E5E5E5"> to be</font>

356
00:20:53,960 --> 00:21:02,299
<font color="#E5E5E5">myself</font><font color="#CCCCCC"> so I started to use Conan in the</font>

357
00:20:58,570 --> 00:21:07,240
0.20 version so the<font color="#E5E5E5"> focus was more on</font>

358
00:21:02,299 --> 00:21:11,179
the<font color="#CCCCCC"> code source and debugging</font>

359
00:21:07,240 --> 00:21:13,640
<font color="#E5E5E5">stabilization etc so there's more</font><font color="#CCCCCC"> and</font>

360
00:21:11,179 --> 00:21:17,510
more<font color="#E5E5E5"> package on the Conan Center and the</font>

361
00:21:13,640 --> 00:21:20,809
bean crafters<font color="#CCCCCC"> repository</font><font color="#E5E5E5"> for boost</font>

362
00:21:17,510 --> 00:21:24,730
<font color="#CCCCCC">there's a recipe that</font><font color="#E5E5E5"> for Android iOS</font>

363
00:21:20,809 --> 00:21:41,720
etc you can use<font color="#E5E5E5"> but I had to do lots</font>

364
00:21:24,730 --> 00:21:45,230
myself<font color="#CCCCCC"> so is this can you make</font><font color="#E5E5E5"> a private</font>

365
00:21:41,720 --> 00:21:47,169
repository<font color="#E5E5E5"> we own our</font><font color="#CCCCCC"> own Conan server</font>

366
00:21:45,230 --> 00:21:50,360
on<font color="#E5E5E5"> our server</font>

367
00:21:47,169 --> 00:21:53,000
<font color="#E5E5E5">at work and yeah you can it's</font>

368
00:21:50,360 --> 00:22:13,699
decentralized<font color="#CCCCCC"> so you can do whatever you</font>

369
00:21:53,000 --> 00:22:16,309
want<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> host your own packages okay</font>

370
00:22:13,700 --> 00:22:19,580
so the question<font color="#E5E5E5"> is does gonna only work</font>

371
00:22:16,309 --> 00:22:24,049
on<font color="#E5E5E5"> C and</font><font color="#CCCCCC"> C++</font><font color="#E5E5E5"> binaries you can package</font>

372
00:22:19,580 --> 00:22:26,570
other languages but the helpers are the

373
00:22:24,049 --> 00:22:29,720
that are<font color="#CCCCCC"> available</font><font color="#E5E5E5"> so the self dot cpp</font>

374
00:22:26,570 --> 00:22:32,450
info DC<font color="#CCCCCC"> mikkel / etc are more focused on</font>

375
00:22:29,720 --> 00:22:36,500
<font color="#CCCCCC">C and C++ but</font><font color="#E5E5E5"> you can do that</font><font color="#CCCCCC"> i packaged</font>

376
00:22:32,450 --> 00:22:39,289
GD<font color="#CCCCCC"> g DK and i think it works also for go</font>

377
00:22:36,500 --> 00:22:42,289
it doesn't really<font color="#E5E5E5"> care</font><font color="#CCCCCC"> about that</font><font color="#E5E5E5"> but</font>

378
00:22:39,289 --> 00:22:44,330
maybe you have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use a different class</font>

379
00:22:42,289 --> 00:22:46,640
than<font color="#E5E5E5"> the conan file let's say the</font>

380
00:22:44,330 --> 00:22:48,830
current<font color="#E5E5E5"> file framework is more designed</font>

381
00:22:46,640 --> 00:22:52,179
around c and c++ but yeah you could make

382
00:22:48,830 --> 00:22:52,178
<font color="#E5E5E5">your own for another language</font>

383
00:23:01,269 --> 00:23:12,950
so<font color="#CCCCCC"> is there competitors</font><font color="#E5E5E5"> in this field</font>

384
00:23:07,789 --> 00:23:16,250
<font color="#E5E5E5">other</font><font color="#CCCCCC"> dynamic</font><font color="#E5E5E5"> so there was previously an</font>

385
00:23:12,950 --> 00:23:18,080
attempt to<font color="#E5E5E5"> for a cross for</font><font color="#CCCCCC"> a cheap</font><font color="#E5E5E5"> as</font>

386
00:23:16,250 --> 00:23:22,820
possible<font color="#CCCCCC"> case</font><font color="#E5E5E5"> manager</font><font color="#CCCCCC"> I think it was</font>

387
00:23:18,080 --> 00:23:26,389
named<font color="#E5E5E5"> B code and it's dead</font><font color="#CCCCCC"> so but</font><font color="#E5E5E5"> on</font>

388
00:23:22,820 --> 00:23:28,250
<font color="#CCCCCC">their</font><font color="#E5E5E5"> repository the guys beyond conan</font>

389
00:23:26,389 --> 00:23:32,090
<font color="#E5E5E5">are very reactive</font><font color="#CCCCCC"> they're backed by a</font>

390
00:23:28,250 --> 00:23:35,510
<font color="#CCCCCC">Jeb frog and yeah they work</font><font color="#E5E5E5"> full-time on</font>

391
00:23:32,090 --> 00:23:37,639
<font color="#E5E5E5">this they're very welcoming you can post</font>

392
00:23:35,510 --> 00:23:49,309
any issues<font color="#E5E5E5"> and there we answer in the</font>

393
00:23:37,639 --> 00:23:52,240
day so if there's already some channel

394
00:23:49,309 --> 00:23:59,210
out<font color="#CCCCCC"> there which packages what they need</font>

395
00:23:52,240 --> 00:24:01,669
so how do I know if if there is already

396
00:23:59,210 --> 00:24:04,639
packages from<font color="#E5E5E5"> for me on other remotes</font>

397
00:24:01,669 --> 00:24:09,019
and so I<font color="#E5E5E5"> used the</font><font color="#CCCCCC"> Quran</font><font color="#E5E5E5"> search method to</font>

398
00:24:04,639 --> 00:24:11,059
you<font color="#E5E5E5"> search inside Maya on tacky in it's</font>

399
00:24:09,019 --> 00:24:13,070
my own<font color="#E5E5E5"> local</font><font color="#CCCCCC"> cache</font><font color="#E5E5E5"> you could use it to</font>

400
00:24:11,059 --> 00:24:16,730
<font color="#E5E5E5">look for remotes by default you only</font>

401
00:24:13,070 --> 00:24:19,879
<font color="#E5E5E5">have two</font><font color="#CCCCCC"> or three</font><font color="#E5E5E5"> remotes</font><font color="#CCCCCC"> installed</font><font color="#E5E5E5"> but</font>

402
00:24:16,730 --> 00:24:23,389
yeah<font color="#E5E5E5"> since</font><font color="#CCCCCC"> I've built</font><font color="#E5E5E5"> everything or</font>

403
00:24:19,880 --> 00:24:25,510
almost myself I'd no use for<font color="#E5E5E5"> good</font>

404
00:24:23,389 --> 00:24:30,010
answers but<font color="#CCCCCC"> I think it works great</font>

405
00:24:25,510 --> 00:24:30,010
<font color="#E5E5E5">should try then yes</font>

406
00:24:35,390 --> 00:24:43,350
yes<font color="#E5E5E5"> so by default sorry the question</font><font color="#CCCCCC"> is</font>

407
00:24:38,700 --> 00:24:46,050
is there a list of remotes that<font color="#E5E5E5"> you can</font>

408
00:24:43,350 --> 00:24:49,969
look for<font color="#CCCCCC"> by default</font><font color="#E5E5E5"> there's the</font><font color="#CCCCCC"> Conant</font>

409
00:24:46,050 --> 00:24:54,649
<font color="#CCCCCC">Center</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> the stable master wrench</font>

410
00:24:49,970 --> 00:24:58,350
<font color="#E5E5E5">deacon</font><font color="#CCCCCC"> on transit and there's another</font>

411
00:24:54,650 --> 00:25:01,290
<font color="#E5E5E5">organization</font><font color="#CCCCCC"> bin crafters that are</font>

412
00:24:58,350 --> 00:25:05,520
<font color="#E5E5E5">making they succeeded in making a module</font>

413
00:25:01,290 --> 00:25:08,250
modular boost installation so I didn't

414
00:25:05,520 --> 00:25:10,980
think<font color="#E5E5E5"> it was possible so yeah you can</font>

415
00:25:08,250 --> 00:25:14,900
<font color="#CCCCCC">they're doing a</font><font color="#E5E5E5"> lot of packages you</font><font color="#CCCCCC"> can</font>

416
00:25:10,980 --> 00:25:14,900
look for that yes

417
00:25:17,210 --> 00:25:22,860
so is there any API for licensing<font color="#CCCCCC"> I</font>

418
00:25:20,340 --> 00:25:25,830
haven't shown in the demo<font color="#E5E5E5"> but in the</font>

419
00:25:22,860 --> 00:25:30,149
attributes<font color="#E5E5E5"> you can use license and I</font>

420
00:25:25,830 --> 00:25:33,480
think it can be yeah<font color="#E5E5E5"> a search in I need</font>

421
00:25:30,150 --> 00:25:44,400
<font color="#CCCCCC">to</font><font color="#E5E5E5"> track but it it will surprise me if</font>

422
00:25:33,480 --> 00:25:47,580
<font color="#E5E5E5">it didn't work so</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> Coenen</font>

423
00:25:44,400 --> 00:25:50,400
relocates the<font color="#E5E5E5"> binaries it downloads no</font>

424
00:25:47,580 --> 00:25:53,129
there's no I I don't think<font color="#E5E5E5"> so there is</font>

425
00:25:50,400 --> 00:26:02,190
no they don't touch the binaries once

426
00:25:53,130 --> 00:26:05,730
it's<font color="#CCCCCC"> a so what do you mean exactly</font><font color="#E5E5E5"> okay</font>

427
00:26:02,190 --> 00:26:06,770
so of<font color="#E5E5E5"> those the packages find their own</font>

428
00:26:05,730 --> 00:26:10,530
requirements

429
00:26:06,770 --> 00:26:14,520
well you declare them I haven't<font color="#E5E5E5"> used</font>

430
00:26:10,530 --> 00:26:18,180
that but if you let's say<font color="#CCCCCC"> I package that</font>

431
00:26:14,520 --> 00:26:20,760
<font color="#CCCCCC">Lib and I want to depend</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> zan Lib on</font>

432
00:26:18,180 --> 00:26:23,100
another package<font color="#E5E5E5"> so I've</font><font color="#CCCCCC"> shown the build</font>

433
00:26:20,760 --> 00:26:28,460
requires attributes<font color="#E5E5E5"> and there's also the</font>

434
00:26:23,100 --> 00:26:35,129
requires attributes so you<font color="#E5E5E5"> just put yes</font>

435
00:26:28,460 --> 00:26:39,900
yes<font color="#CCCCCC"> for bidding</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> cert library</font><font color="#E5E5E5"> yeah</font>

436
00:26:35,130 --> 00:26:43,610
but our<font color="#E5E5E5"> path so I mainly use static</font>

437
00:26:39,900 --> 00:26:46,460
libraries in in work at work but<font color="#E5E5E5"> for</font>

438
00:26:43,610 --> 00:26:49,010
<font color="#CCCCCC">shall library</font><font color="#E5E5E5"> you can buy so yeah okay I</font>

439
00:26:46,460 --> 00:26:53,900
get<font color="#CCCCCC"> I get</font><font color="#E5E5E5"> the by default there's no</font><font color="#CCCCCC"> are</font>

440
00:26:49,010 --> 00:26:56,390
<font color="#E5E5E5">parse</font><font color="#CCCCCC"> ARPA's for on Mac OS</font><font color="#E5E5E5"> they're all</font>

441
00:26:53,900 --> 00:26:59,330
stripped<font color="#E5E5E5"> so you just have the name of</font>

442
00:26:56,390 --> 00:27:02,090
<font color="#E5E5E5">the</font><font color="#CCCCCC"> library and then</font><font color="#E5E5E5"> it's your it's your</font>

443
00:26:59,330 --> 00:27:24,800
work to have some fun with<font color="#E5E5E5"> install name</font>

444
00:27:02,090 --> 00:27:27,649
<font color="#CCCCCC">tool for</font><font color="#E5E5E5"> example so is that your</font>

445
00:27:24,800 --> 00:27:30,490
responsibility<font color="#CCCCCC"> to tell</font><font color="#E5E5E5"> a binary where</font>

446
00:27:27,650 --> 00:27:34,910
the<font color="#E5E5E5"> C++ standard library is on</font><font color="#CCCCCC"> a</font>

447
00:27:30,490 --> 00:27:36,800
<font color="#CCCCCC">non-standard</font><font color="#E5E5E5"> platform so by default</font>

448
00:27:34,910 --> 00:27:41,710
there is<font color="#E5E5E5"> no our</font><font color="#CCCCCC"> path but you can let</font>

449
00:27:36,800 --> 00:27:45,379
them you can yeah but I think<font color="#E5E5E5"> I had to</font>

450
00:27:41,710 --> 00:27:47,450
pay say in the tool<font color="#CCCCCC"> train for</font><font color="#E5E5E5"> example</font>

451
00:27:45,380 --> 00:27:51,440
<font color="#E5E5E5">for Android we want to build a tree with</font>

452
00:27:47,450 --> 00:27:53,900
<font color="#E5E5E5">the static lip C++ so we had to in the</font>

453
00:27:51,440 --> 00:27:57,350
tool train add link<font color="#E5E5E5"> flags for every</font>

454
00:27:53,900 --> 00:28:01,040
package built with that<font color="#E5E5E5"> library and then</font>

455
00:27:57,350 --> 00:28:03,590
it were<font color="#E5E5E5"> but before shared I didn't use</font>

456
00:28:01,040 --> 00:28:06,440
<font color="#CCCCCC">that so it's quite a tricky</font><font color="#E5E5E5"> question</font>

457
00:28:03,590 --> 00:28:09,730
<font color="#E5E5E5">I need maybe we can see after the talk</font>

458
00:28:06,440 --> 00:28:09,730
<font color="#CCCCCC">if you want yes</font>

459
00:28:21,320 --> 00:28:43,010
in the so so how do you do when you have

460
00:28:40,760 --> 00:28:45,530
a library<font color="#E5E5E5"> installed on your system</font><font color="#CCCCCC"> and</font>

461
00:28:43,010 --> 00:28:47,990
already and some the same library

462
00:28:45,530 --> 00:28:50,299
<font color="#E5E5E5">installed with Conan so if you use in</font>

463
00:28:47,990 --> 00:28:54,919
your<font color="#CCCCCC"> Civic file the include that I've</font>

464
00:28:50,299 --> 00:28:57,980
shown it simply<font color="#E5E5E5"> takes precedence over</font>

465
00:28:54,919 --> 00:29:00,590
the<font color="#E5E5E5"> system package III don't remember</font>

466
00:28:57,980 --> 00:29:05,480
exactly the<font color="#CCCCCC"> semester</font><font color="#E5E5E5"> but it's the fine</font>

467
00:29:00,590 --> 00:29:08,299
module and yeah yes<font color="#E5E5E5"> the</font><font color="#CCCCCC"> C make if you</font>

468
00:29:05,480 --> 00:29:10,130
just use fine package or<font color="#E5E5E5"> yeah for</font>

469
00:29:08,299 --> 00:29:13,039
<font color="#E5E5E5">example</font><font color="#CCCCCC"> file package which would usually</font>

470
00:29:10,130 --> 00:29:15,020
find<font color="#E5E5E5"> the system library then if you</font>

471
00:29:13,039 --> 00:29:16,429
<font color="#CCCCCC">serve fine package and include the Khan</font>

472
00:29:15,020 --> 00:29:20,408
online it<font color="#E5E5E5"> would find equivalent</font>

473
00:29:16,429 --> 00:29:20,409
libraries yes

474
00:29:23,440 --> 00:29:30,749
[Applause]

