1
00:00:04,630 --> 00:00:10,969
<font color="#CCCCCC">alright I'll just</font><font color="#E5E5E5"> start sorry about</font><font color="#CCCCCC"> that</font>

2
00:00:08,600 --> 00:00:12,950
maybe we'll get<font color="#E5E5E5"> it</font><font color="#CCCCCC"> working my name is</font>

3
00:00:10,969 --> 00:00:15,349
<font color="#CCCCCC">Morris Fisher I work for National</font>

4
00:00:12,950 --> 00:00:17,450
Instruments which is<font color="#CCCCCC"> a us-based company</font>

5
00:00:15,349 --> 00:00:20,660
<font color="#E5E5E5">in the Atlas</font><font color="#CCCCCC"> research team we make</font>

6
00:00:17,450 --> 00:00:22,580
software-defined radios outside of

7
00:00:20,660 --> 00:00:24,619
building software-defined radios which

8
00:00:22,580 --> 00:00:27,500
you can learn<font color="#CCCCCC"> about in the SDR</font><font color="#E5E5E5"> track</font>

9
00:00:24,619 --> 00:00:29,599
that my colleagues are organizing<font color="#CCCCCC"> I am</font>

10
00:00:27,500 --> 00:00:32,448
also one of the kernel maintainer is for

11
00:00:29,599 --> 00:00:34,580
the FPGA<font color="#E5E5E5"> manager framework the FPGA</font>

12
00:00:32,448 --> 00:00:37,909
manager framework is<font color="#E5E5E5"> fairly recent</font>

13
00:00:34,580 --> 00:00:41,620
we started out around<font color="#E5E5E5"> Linux 4.4 when we</font>

14
00:00:37,909 --> 00:00:48,580
first got<font color="#E5E5E5"> merged all the support for the</font>

15
00:00:41,620 --> 00:00:52,670
basic framework and<font color="#CCCCCC"> Zink and sock fpga</font>

16
00:00:48,580 --> 00:00:56,180
<font color="#E5E5E5">just gonna work</font><font color="#CCCCCC"> ok I'll just</font><font color="#E5E5E5"> keep</font>

17
00:00:52,670 --> 00:00:58,070
talking<font color="#CCCCCC"> for zinc and sock</font><font color="#E5E5E5"> FPGA since</font>

18
00:00:56,180 --> 00:01:00,920
then<font color="#E5E5E5"> we've gotten a</font><font color="#CCCCCC"> bunch of other</font>

19
00:00:58,070 --> 00:01:02,360
drivers<font color="#E5E5E5"> that</font><font color="#CCCCCC"> got merged it's pretty</font>

20
00:01:00,920 --> 00:01:05,930
interesting<font color="#E5E5E5"> because they were from</font>

21
00:01:02,360 --> 00:01:08,930
<font color="#CCCCCC">different</font><font color="#E5E5E5"> types of systems one</font><font color="#CCCCCC"> of them</font>

22
00:01:05,930 --> 00:01:11,390
is actually<font color="#E5E5E5"> still platform board file</font>

23
00:01:08,930 --> 00:01:14,780
<font color="#E5E5E5">based there is</font><font color="#CCCCCC"> a bunch of device tree</font>

24
00:01:11,390 --> 00:01:16,790
based ones<font color="#E5E5E5"> and now new is the PCI</font>

25
00:01:14,780 --> 00:01:18,710
Express<font color="#E5E5E5"> ones which turned out</font><font color="#CCCCCC"> to be a</font>

26
00:01:16,790 --> 00:01:20,300
bit<font color="#CCCCCC"> problematic</font><font color="#E5E5E5"> because when we first</font>

27
00:01:18,710 --> 00:01:22,899
started out with<font color="#CCCCCC"> this framework</font><font color="#E5E5E5"> it was</font>

28
00:01:20,300 --> 00:01:25,820
all pretty<font color="#E5E5E5"> much based on device tree</font>

29
00:01:22,900 --> 00:01:28,280
<font color="#E5E5E5">foolishly enough we assumed we just get</font>

30
00:01:25,820 --> 00:01:30,110
device tree overlays merged<font color="#E5E5E5"> really fast</font>

31
00:01:28,280 --> 00:01:32,480
because<font color="#E5E5E5"> now</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> someone</font><font color="#CCCCCC"> that</font>

32
00:01:30,110 --> 00:01:34,400
<font color="#E5E5E5">actually needs them turns out a lot</font><font color="#CCCCCC"> of</font>

33
00:01:32,480 --> 00:01:36,680
things in the kernel<font color="#E5E5E5"> break</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you just</font>

34
00:01:34,400 --> 00:01:38,540
apply device<font color="#E5E5E5"> to your overlay so we're</font>

35
00:01:36,680 --> 00:01:40,580
still discussing<font color="#E5E5E5"> back and forth with</font>

36
00:01:38,540 --> 00:01:43,670
device tree<font color="#E5E5E5"> maintainer x' on how to get</font>

37
00:01:40,580 --> 00:01:44,990
<font color="#E5E5E5">that merged so right now it still kind</font>

38
00:01:43,670 --> 00:01:46,940
<font color="#E5E5E5">of works only with out of three</font>

39
00:01:44,990 --> 00:01:50,449
<font color="#CCCCCC">solutions on top of FPGA mains</font><font color="#E5E5E5"> your</font>

40
00:01:46,940 --> 00:01:53,450
framework<font color="#CCCCCC"> now back to the problem that</font>

41
00:01:50,450 --> 00:01:54,770
<font color="#E5E5E5">the FPGA</font><font color="#CCCCCC"> Manor</font><font color="#E5E5E5"> manager framework is</font>

42
00:01:53,450 --> 00:01:56,780
trying to solve

43
00:01:54,770 --> 00:01:59,840
it's<font color="#E5E5E5"> basically have a processor</font><font color="#CCCCCC"> that has</font>

44
00:01:56,780 --> 00:02:02,090
some sort<font color="#E5E5E5"> of FPGA connected to it so</font>

45
00:01:59,840 --> 00:02:04,640
<font color="#E5E5E5">that could be something integrated like</font>

46
00:02:02,090 --> 00:02:08,420
<font color="#CCCCCC">DS Inc</font><font color="#E5E5E5"> where you have an ARM processor</font>

47
00:02:04,640 --> 00:02:11,330
and an FPGA in one die or from<font color="#CCCCCC"> altaira</font>

48
00:02:08,419 --> 00:02:15,739
<font color="#E5E5E5">until the same thing called the stock</font>

49
00:02:11,330 --> 00:02:17,810
<font color="#E5E5E5">FPGA</font><font color="#CCCCCC"> there's also other platforms that</font>

50
00:02:15,740 --> 00:02:18,350
<font color="#E5E5E5">are connected</font><font color="#CCCCCC"> by our PCI</font><font color="#E5E5E5"> Express on</font><font color="#CCCCCC"> a</font>

51
00:02:17,810 --> 00:02:22,370
separate

52
00:02:18,350 --> 00:02:25,310
card<font color="#CCCCCC"> or there ask Thomas's problem where</font>

53
00:02:22,370 --> 00:02:28,520
you<font color="#CCCCCC"> have a PCI bus</font><font color="#E5E5E5"> that goes off chip</font>

54
00:02:25,310 --> 00:02:32,140
then connects<font color="#CCCCCC"> to an FPGA and</font><font color="#E5E5E5"> that's</font>

55
00:02:28,520 --> 00:02:35,470
another<font color="#CCCCCC"> challenge we ran into so our</font>

56
00:02:32,140 --> 00:02:38,359
current problem we have is dealing<font color="#E5E5E5"> with</font>

57
00:02:35,470 --> 00:02:42,260
<font color="#E5E5E5">different systems our current solution</font>

58
00:02:38,360 --> 00:02:44,330
we have is<font color="#CCCCCC"> basically only more or less</font>

59
00:02:42,260 --> 00:02:47,090
working<font color="#E5E5E5"> for device</font><font color="#CCCCCC"> two overlays and</font>

60
00:02:44,330 --> 00:02:49,330
device tree based systems<font color="#CCCCCC"> currently on</font>

61
00:02:47,090 --> 00:02:52,880
<font color="#E5E5E5">the</font><font color="#CCCCCC"> list we have a patch set from Intel</font>

62
00:02:49,330 --> 00:02:55,340
<font color="#CCCCCC">where they try</font><font color="#E5E5E5"> to support their data</font>

63
00:02:52,880 --> 00:02:58,760
center<font color="#E5E5E5"> soft their data center</font>

64
00:02:55,340 --> 00:03:01,400
accelerators<font color="#CCCCCC"> that works roughly</font><font color="#E5E5E5"> like</font>

65
00:02:58,760 --> 00:03:04,250
that you have a PCI<font color="#CCCCCC"> Express card</font><font color="#E5E5E5"> that</font>

66
00:03:01,400 --> 00:03:06,770
comes up with a base<font color="#E5E5E5"> bit stream that</font>

67
00:03:04,250 --> 00:03:08,930
contains<font color="#CCCCCC"> a PCI Express</font><font color="#E5E5E5"> endpoint which</font>

68
00:03:06,770 --> 00:03:12,670
then shows<font color="#CCCCCC"> up</font><font color="#E5E5E5"> as a PCI Express device</font>

69
00:03:08,930 --> 00:03:17,600
that then binds<font color="#E5E5E5"> a driver and this driver</font>

70
00:03:12,670 --> 00:03:19,940
<font color="#E5E5E5">then</font><font color="#CCCCCC"> probes</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other things</font><font color="#E5E5E5"> that are in</font>

71
00:03:17,600 --> 00:03:22,239
there<font color="#E5E5E5"> by means of what they call</font><font color="#CCCCCC"> dfl</font>

72
00:03:19,940 --> 00:03:24,500
which is some sort<font color="#CCCCCC"> of self-describing</font>

73
00:03:22,240 --> 00:03:26,150
compressed version of a device three

74
00:03:24,500 --> 00:03:28,010
more or less so it describes<font color="#E5E5E5"> what</font><font color="#CCCCCC"> kind</font>

75
00:03:26,150 --> 00:03:29,920
of<font color="#E5E5E5"> hardware is in the FPGA image and</font>

76
00:03:28,010 --> 00:03:32,810
then<font color="#E5E5E5"> we can go and probe that</font>

77
00:03:29,920 --> 00:03:35,269
instantiate platform devices using<font color="#CCCCCC"> that</font>

78
00:03:32,810 --> 00:03:37,520
and then create a user land interface

79
00:03:35,270 --> 00:03:39,530
that is currently<font color="#E5E5E5"> very specific to Intel</font>

80
00:03:37,520 --> 00:03:42,280
but we're trying<font color="#E5E5E5"> to figure</font><font color="#CCCCCC"> out if we</font><font color="#E5E5E5"> can</font>

81
00:03:39,530 --> 00:03:45,290
<font color="#E5E5E5">generalize that to make cases work</font>

82
00:03:42,280 --> 00:03:48,920
because there's other<font color="#E5E5E5"> cases where you</font>

83
00:03:45,290 --> 00:03:50,209
have discoverable buses where all we

84
00:03:48,920 --> 00:03:52,070
need<font color="#E5E5E5"> to do basically is trigger</font>

85
00:03:50,210 --> 00:03:57,050
reconfiguration and we can make the

86
00:03:52,070 --> 00:03:58,970
other things happen magically<font color="#E5E5E5"> again yeah</font>

87
00:03:57,050 --> 00:04:01,880
it's<font color="#E5E5E5"> I'm a bit lost without its lights</font>

88
00:03:58,970 --> 00:04:04,100
because I'm trying<font color="#E5E5E5"> to remember all the</font>

89
00:04:01,880 --> 00:04:05,510
things<font color="#E5E5E5"> I wanted</font><font color="#CCCCCC"> to talk about I also</font>

90
00:04:04,100 --> 00:04:07,280
wanted to have<font color="#E5E5E5"> time</font><font color="#CCCCCC"> in the end to</font><font color="#E5E5E5"> have</font>

91
00:04:05,510 --> 00:04:09,109
discussions and people yell<font color="#CCCCCC"> at</font><font color="#E5E5E5"> me for</font>

92
00:04:07,280 --> 00:04:10,910
things that<font color="#E5E5E5"> don't work</font>

93
00:04:09,110 --> 00:04:13,340
I had three slides in the end that I

94
00:04:10,910 --> 00:04:13,760
sort<font color="#E5E5E5"> of called the good the bad and the</font>

95
00:04:13,340 --> 00:04:17,298
ugly

96
00:04:13,760 --> 00:04:20,029
so the<font color="#CCCCCC"> gird is definitely that we get</font>

97
00:04:17,298 --> 00:04:22,130
more<font color="#CCCCCC"> and more actually systems supported</font>

98
00:04:20,029 --> 00:04:24,710
the bad is that we can't really run

99
00:04:22,130 --> 00:04:28,010
without any out<font color="#CCCCCC"> of three patches</font><font color="#E5E5E5"> which</font>

100
00:04:24,710 --> 00:04:30,140
is kind<font color="#E5E5E5"> of sad and the ugly is there's</font>

101
00:04:28,010 --> 00:04:32,120
some use<font color="#CCCCCC"> cases we currently</font><font color="#E5E5E5"> flat out</font>

102
00:04:30,140 --> 00:04:35,900
<font color="#E5E5E5">don't support like yours</font>

103
00:04:32,120 --> 00:04:38,030
which is just reprogramming in FPGA from

104
00:04:35,900 --> 00:04:40,489
userland<font color="#CCCCCC"> and then using other kernel</font>

105
00:04:38,030 --> 00:04:43,039
interfaces like PCI Express<font color="#E5E5E5"> to scan</font>

106
00:04:40,490 --> 00:04:46,040
what's in<font color="#CCCCCC"> their steps that we've taken</font>

107
00:04:43,040 --> 00:04:49,580
<font color="#E5E5E5">in that direction is we have split</font><font color="#CCCCCC"> out</font>

108
00:04:46,040 --> 00:04:52,340
<font color="#E5E5E5">the</font><font color="#CCCCCC"> device through</font><font color="#E5E5E5"> specific code</font><font color="#CCCCCC"> and</font>

109
00:04:49,580 --> 00:04:57,080
split the<font color="#E5E5E5"> FPGA region which I'll soon</font>

110
00:04:52,340 --> 00:04:59,960
have slides for as it looks<font color="#CCCCCC"> that we've</font>

111
00:04:57,080 --> 00:05:01,760
split that<font color="#CCCCCC"> out so</font><font color="#E5E5E5"> and we hopefully can</font>

112
00:04:59,960 --> 00:05:04,880
build on top<font color="#CCCCCC"> of that to enable these</font>

113
00:05:01,760 --> 00:05:07,940
kind of use cases<font color="#E5E5E5"> so the idea</font><font color="#CCCCCC"> before was</font>

114
00:05:04,880 --> 00:05:09,290
that<font color="#E5E5E5"> on on board we would scan the</font>

115
00:05:07,940 --> 00:05:16,969
<font color="#E5E5E5">digger yay</font>

116
00:05:09,290 --> 00:05:19,910
<font color="#E5E5E5">all right that's</font><font color="#CCCCCC"> okay go back to those</font>

117
00:05:16,970 --> 00:05:21,919
<font color="#CCCCCC">two pretty there's two things we're</font>

118
00:05:19,910 --> 00:05:24,320
addressing anyway<font color="#E5E5E5"> so just</font><font color="#CCCCCC"> for right</font>

119
00:05:21,919 --> 00:05:27,020
configurations to reprogram<font color="#E5E5E5"> the</font><font color="#CCCCCC"> full</font>

120
00:05:24,320 --> 00:05:29,960
<font color="#E5E5E5">FPGA there's two cases discoverable non</font>

121
00:05:27,020 --> 00:05:31,520
discoverable<font color="#CCCCCC"> the discoverable one is</font>

122
00:05:29,960 --> 00:05:33,530
like where<font color="#E5E5E5"> you can probe and see what's</font>

123
00:05:31,520 --> 00:05:35,510
actually in the image and there's a non

124
00:05:33,530 --> 00:05:37,460
discovery one where you need some<font color="#CCCCCC"> sort</font>

125
00:05:35,510 --> 00:05:39,860
<font color="#CCCCCC">of additional out-of-band description to</font>

126
00:05:37,460 --> 00:05:41,870
make<font color="#E5E5E5"> sure what</font><font color="#CCCCCC"> happened to tell software</font>

127
00:05:39,860 --> 00:05:43,130
what happens then there's also<font color="#E5E5E5"> partial</font>

128
00:05:41,870 --> 00:05:45,350
reconfiguration where you first

129
00:05:43,130 --> 00:05:46,940
<font color="#E5E5E5">programmed the entire FPGA with some</font>

130
00:05:45,350 --> 00:05:49,700
sort of base image that creates<font color="#E5E5E5"> these</font>

131
00:05:46,940 --> 00:05:52,250
sort of slots<font color="#E5E5E5"> and in there you have</font>

132
00:05:49,700 --> 00:05:54,260
regions that you can then reprogram<font color="#E5E5E5"> so</font>

133
00:05:52,250 --> 00:05:56,240
those regions when you reprogram them

134
00:05:54,260 --> 00:05:58,849
need bridges that<font color="#E5E5E5"> you cut because</font>

135
00:05:56,240 --> 00:06:01,130
<font color="#E5E5E5">otherwise the hardware in there might</font>

136
00:05:58,850 --> 00:06:02,960
behave behave somewhat random during

137
00:06:01,130 --> 00:06:05,090
reconfiguration break other things<font color="#CCCCCC"> in</font>

138
00:06:02,960 --> 00:06:08,030
your<font color="#E5E5E5"> design around so that stuff that we</font>

139
00:06:05,090 --> 00:06:09,560
also take<font color="#CCCCCC"> care of the history have sort</font>

140
00:06:08,030 --> 00:06:11,270
<font color="#E5E5E5">of talked through a bit out of</font><font color="#CCCCCC"> order</font>

141
00:06:09,560 --> 00:06:13,310
because<font color="#CCCCCC"> I didn't</font><font color="#E5E5E5"> remember all the facts</font>

142
00:06:11,270 --> 00:06:15,889
because<font color="#CCCCCC"> I assumed this slide to be here</font>

143
00:06:13,310 --> 00:06:19,250
<font color="#E5E5E5">so I'll just</font><font color="#CCCCCC"> skip</font><font color="#E5E5E5"> over that</font><font color="#CCCCCC"> for the sake</font>

144
00:06:15,889 --> 00:06:21,490
of brevity<font color="#CCCCCC"> the players in FPGA manager</font>

145
00:06:19,250 --> 00:06:24,260
framework basically<font color="#E5E5E5"> are three entities</font>

146
00:06:21,490 --> 00:06:26,360
<font color="#CCCCCC">we have managers which</font><font color="#E5E5E5"> basically deals</font>

147
00:06:24,260 --> 00:06:28,580
with<font color="#E5E5E5"> like how does</font><font color="#CCCCCC"> you how do you</font>

148
00:06:26,360 --> 00:06:31,789
actually<font color="#CCCCCC"> program the FPGA that might be</font>

149
00:06:28,580 --> 00:06:34,639
over spy<font color="#CCCCCC"> that</font><font color="#E5E5E5"> might be bit banging spy</font>

150
00:06:31,789 --> 00:06:36,380
that might be talking<font color="#E5E5E5"> to separate block</font>

151
00:06:34,639 --> 00:06:38,450
<font color="#E5E5E5">in your SOC that then does a</font>

152
00:06:36,380 --> 00:06:40,070
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> it might be a</font><font color="#E5E5E5"> CPL d thats</font>

153
00:06:38,450 --> 00:06:42,169
hanging off<font color="#CCCCCC"> that might be something</font>

154
00:06:40,070 --> 00:06:44,450
<font color="#E5E5E5">connected to USB so there's wide</font><font color="#CCCCCC"> word</font>

155
00:06:42,169 --> 00:06:46,490
<font color="#E5E5E5">variety but we don't really want</font><font color="#CCCCCC"> to talk</font>

156
00:06:44,450 --> 00:06:49,310
<font color="#CCCCCC">directly to</font><font color="#E5E5E5"> that</font>

157
00:06:46,490 --> 00:06:51,650
I briefly talked<font color="#CCCCCC"> about the bridges which</font>

158
00:06:49,310 --> 00:06:55,060
basically<font color="#CCCCCC"> separated regions</font><font color="#E5E5E5"> in the FPGA</font>

159
00:06:51,650 --> 00:06:57,530
<font color="#CCCCCC">or the entire eat the entire FPGA during</font>

160
00:06:55,060 --> 00:07:00,560
reconfiguration and then there's regions

161
00:06:57,530 --> 00:07:02,869
which is basically the thing you want to

162
00:07:00,560 --> 00:07:05,300
<font color="#CCCCCC">be talking</font><font color="#E5E5E5"> to in terms of writing</font>

163
00:07:02,870 --> 00:07:07,850
<font color="#E5E5E5">software for the framework and they</font>

164
00:07:05,300 --> 00:07:09,770
model<font color="#CCCCCC"> the part of an FPGA that is</font>

165
00:07:07,850 --> 00:07:11,420
reprogrammable<font color="#CCCCCC"> okay so if you have a</font>

166
00:07:09,770 --> 00:07:13,370
full<font color="#E5E5E5"> FPGA that you completely</font>

167
00:07:11,420 --> 00:07:15,800
reconfigure<font color="#E5E5E5"> that would be one region and</font>

168
00:07:13,370 --> 00:07:18,430
if you do partial reconfiguration<font color="#E5E5E5"> you</font>

169
00:07:15,800 --> 00:07:21,500
might have several regions in there and

170
00:07:18,430 --> 00:07:24,740
each region<font color="#E5E5E5"> has a reference to an FPGA</font>

171
00:07:21,500 --> 00:07:27,200
manager<font color="#E5E5E5"> so it knows how</font><font color="#CCCCCC"> to load firmware</font>

172
00:07:24,740 --> 00:07:30,200
or how to load a bit stream to that part

173
00:07:27,200 --> 00:07:34,810
of<font color="#E5E5E5"> the FPGA</font><font color="#CCCCCC"> or the full FPGA and it also</font>

174
00:07:30,200 --> 00:07:38,210
has a list of<font color="#CCCCCC"> bridges</font><font color="#E5E5E5"> that it needs to</font>

175
00:07:34,810 --> 00:07:41,420
disable or<font color="#E5E5E5"> enable how does it all fit</font>

176
00:07:38,210 --> 00:07:43,760
<font color="#CCCCCC">together basically you</font><font color="#E5E5E5"> have a device has</font>

177
00:07:41,420 --> 00:07:47,330
a couple<font color="#E5E5E5"> of regions each region has</font>

178
00:07:43,760 --> 00:07:49,849
bridges and it has a FPGA manager that

179
00:07:47,330 --> 00:07:51,169
lets you reprogram it<font color="#E5E5E5"> so in the</font>

180
00:07:49,850 --> 00:07:53,450
beginning<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> start out with</font><font color="#E5E5E5"> the</font>

181
00:07:51,170 --> 00:07:56,030
framework<font color="#E5E5E5"> we thought</font><font color="#CCCCCC"> we talk directly to</font>

182
00:07:53,450 --> 00:07:58,570
FPGA manager<font color="#E5E5E5"> turns out talking</font><font color="#CCCCCC"> to</font>

183
00:07:56,030 --> 00:08:03,349
regions as an interface is a better idea

184
00:07:58,570 --> 00:08:05,360
<font color="#E5E5E5">with device</font><font color="#CCCCCC"> tree based regions basically</font>

185
00:08:03,350 --> 00:08:07,880
you can define regions<font color="#E5E5E5"> like that you say</font>

186
00:08:05,360 --> 00:08:10,160
<font color="#E5E5E5">this is a FPGA region you pass it the</font>

187
00:08:07,880 --> 00:08:11,840
reference<font color="#E5E5E5"> to a manager you have a</font>

188
00:08:10,160 --> 00:08:15,860
firmware name which is your<font color="#E5E5E5"> bit stream</font>

189
00:08:11,840 --> 00:08:17,690
and then all the green<font color="#E5E5E5"> stuff would get</font>

190
00:08:15,860 --> 00:08:19,340
<font color="#E5E5E5">applied to the tree</font><font color="#CCCCCC"> Varian overlay</font>

191
00:08:17,690 --> 00:08:21,680
unfortunately we don't have<font color="#E5E5E5"> an interface</font>

192
00:08:19,340 --> 00:08:24,830
<font color="#CCCCCC">for that but it does work</font><font color="#E5E5E5"> if you can</font>

193
00:08:21,680 --> 00:08:26,660
somehow apply to overlay

194
00:08:24,830 --> 00:08:28,190
regions revamped that was the

195
00:08:26,660 --> 00:08:30,080
refactoring<font color="#E5E5E5"> that I talked about before</font>

196
00:08:28,190 --> 00:08:32,179
<font color="#E5E5E5">basically we're trying to separate</font>

197
00:08:30,080 --> 00:08:34,850
separate out the device tree<font color="#E5E5E5"> code that</font>

198
00:08:32,179 --> 00:08:38,030
all<font color="#E5E5E5"> lift in FPGA regions dot</font><font color="#CCCCCC"> C split out</font>

199
00:08:34,850 --> 00:08:41,240
the<font color="#E5E5E5"> Oh F part for device</font><font color="#CCCCCC"> trees so</font><font color="#E5E5E5"> now we</font>

200
00:08:38,030 --> 00:08:43,520
have<font color="#E5E5E5"> needed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make it possible to</font>

201
00:08:41,240 --> 00:08:45,320
register FPGA regions<font color="#E5E5E5"> so this would</font>

202
00:08:43,520 --> 00:08:47,829
allow you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> bring your own device to</font>

203
00:08:45,320 --> 00:08:50,840
<font color="#CCCCCC">bring your own region</font><font color="#E5E5E5"> from a device and</font>

204
00:08:47,830 --> 00:08:53,570
also<font color="#E5E5E5"> to unregister if it your if your</font>

205
00:08:50,840 --> 00:08:56,030
device<font color="#E5E5E5"> goes away and then as interface</font>

206
00:08:53,570 --> 00:08:57,290
you get FPGA region program FPGA where

207
00:08:56,030 --> 00:08:59,270
you pass in the region you<font color="#CCCCCC"> want to</font>

208
00:08:57,290 --> 00:09:01,760
program<font color="#E5E5E5"> and some image info</font>

209
00:08:59,270 --> 00:09:03,920
as part<font color="#CCCCCC"> of that image</font><font color="#E5E5E5"> in full you bring</font>

210
00:09:01,760 --> 00:09:06,319
<font color="#E5E5E5">your buffer that comes from wherever so</font>

211
00:09:03,920 --> 00:09:10,130
that is again sort<font color="#E5E5E5"> of bring your own</font>

212
00:09:06,320 --> 00:09:13,130
buffer we hope to enable things like

213
00:09:10,130 --> 00:09:15,350
that<font color="#CCCCCC"> like Thomas's case where you have</font>

214
00:09:13,130 --> 00:09:16,700
an FPGA that's hanging<font color="#E5E5E5"> off the SOC it</font>

215
00:09:15,350 --> 00:09:18,710
<font color="#E5E5E5">was something like that but we still</font>

216
00:09:16,700 --> 00:09:22,160
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to look at how exactly make that</font>

217
00:09:18,710 --> 00:09:24,260
work from<font color="#E5E5E5"> user</font><font color="#CCCCCC"> land and the DFL party</font>

218
00:09:22,160 --> 00:09:29,240
had talked<font color="#CCCCCC"> about before without</font><font color="#E5E5E5"> sight</font>

219
00:09:24,260 --> 00:09:32,000
also<font color="#CCCCCC"> PCI Express there's read than then</font>

220
00:09:29,240 --> 00:09:33,650
there's the base image<font color="#E5E5E5"> that programs is</font>

221
00:09:32,000 --> 00:09:35,720
programmed in there it has<font color="#CCCCCC"> hardware</font>

222
00:09:33,650 --> 00:09:38,030
<font color="#CCCCCC">description describes what else is in</font>

223
00:09:35,720 --> 00:09:39,980
<font color="#E5E5E5">there so basically based on that</font><font color="#CCCCCC"> TfL</font>

224
00:09:38,030 --> 00:09:42,140
that we parse we then instantiate

225
00:09:39,980 --> 00:09:44,030
bridges<font color="#E5E5E5"> and the manager and all the</font>

226
00:09:42,140 --> 00:09:46,280
regions where<font color="#E5E5E5"> you can then create</font>

227
00:09:44,030 --> 00:09:48,230
additional<font color="#E5E5E5"> devices that implement the</font>

228
00:09:46,280 --> 00:09:50,839
region interface<font color="#E5E5E5"> so then you can go and</font>

229
00:09:48,230 --> 00:09:52,640
<font color="#E5E5E5">program those the current plan for the</font>

230
00:09:50,840 --> 00:09:54,350
Intel cache was to have an<font color="#CCCCCC"> eye octal</font>

231
00:09:52,640 --> 00:09:55,850
interface to<font color="#E5E5E5"> user land because they have</font>

232
00:09:54,350 --> 00:09:58,490
a bunch<font color="#E5E5E5"> of other things</font><font color="#CCCCCC"> that anyway need</font>

233
00:09:55,850 --> 00:09:59,870
to do for for performance counters and

234
00:09:58,490 --> 00:10:02,690
<font color="#E5E5E5">other things that you might want</font><font color="#CCCCCC"> to read</font>

235
00:09:59,870 --> 00:10:08,360
from user land so we hope<font color="#E5E5E5"> to probably</font>

236
00:10:02,690 --> 00:10:10,880
use<font color="#CCCCCC"> that for other cases</font><font color="#E5E5E5"> too</font><font color="#CCCCCC"> as I said</font>

237
00:10:08,360 --> 00:10:12,590
<font color="#E5E5E5">before we have other cases where we're</font>

238
00:10:10,880 --> 00:10:15,230
<font color="#E5E5E5">not entirely sure</font><font color="#CCCCCC"> how to go about</font>

239
00:10:12,590 --> 00:10:18,050
<font color="#E5E5E5">because you might have a non</font>

240
00:10:15,230 --> 00:10:21,920
discoverable FPGA hanging off a bus that

241
00:10:18,050 --> 00:10:23,839
doesn't like USB<font color="#E5E5E5"> and at that point you</font>

242
00:10:21,920 --> 00:10:27,079
<font color="#E5E5E5">might not have device tree to describe</font>

243
00:10:23,840 --> 00:10:31,010
what's<font color="#E5E5E5"> in there so a long time</font><font color="#CCCCCC"> ago I had</font>

244
00:10:27,080 --> 00:10:32,780
<font color="#E5E5E5">to patch that proof of concept basically</font>

245
00:10:31,010 --> 00:10:34,700
<font color="#CCCCCC">attach the header to the</font><font color="#E5E5E5"> bit file that</font>

246
00:10:32,780 --> 00:10:37,300
you can<font color="#E5E5E5"> then parse to then figure</font><font color="#CCCCCC"> out</font>

247
00:10:34,700 --> 00:10:40,700
what's in the FPGA<font color="#CCCCCC"> and then instantiate</font>

248
00:10:37,300 --> 00:10:44,810
the thing the the devices<font color="#CCCCCC"> that are in</font>

249
00:10:40,700 --> 00:10:49,340
<font color="#E5E5E5">there but that</font><font color="#CCCCCC"> didn't go super far so</font>

250
00:10:44,810 --> 00:10:53,209
we're still<font color="#CCCCCC"> looking into</font><font color="#E5E5E5"> that again the</font>

251
00:10:49,340 --> 00:10:55,190
good as I said representing<font color="#E5E5E5"> things with</font>

252
00:10:53,210 --> 00:10:57,020
the device tree worked really well using

253
00:10:55,190 --> 00:10:58,520
overlays works really well assuming<font color="#E5E5E5"> you</font>

254
00:10:57,020 --> 00:11:00,920
<font color="#E5E5E5">can do that from user land which we</font>

255
00:10:58,520 --> 00:11:04,220
can't the hardware support is<font color="#E5E5E5"> growing so</font>

256
00:11:00,920 --> 00:11:06,530
we get more<font color="#E5E5E5"> and</font><font color="#CCCCCC"> more drivers the bad</font><font color="#E5E5E5"> is</font>

257
00:11:04,220 --> 00:11:08,450
that<font color="#CCCCCC"> it it</font><font color="#E5E5E5"> doesn't really work currently</font>

258
00:11:06,530 --> 00:11:12,769
for<font color="#E5E5E5"> non DT platforms but we're working</font>

259
00:11:08,450 --> 00:11:14,629
<font color="#E5E5E5">on</font><font color="#CCCCCC"> that with the int'l into pets</font>

260
00:11:12,769 --> 00:11:18,529
as a reference<font color="#CCCCCC"> because that's the only</font>

261
00:11:14,629 --> 00:11:23,569
platform<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have available and</font><font color="#E5E5E5"> the ugly</font>

262
00:11:18,529 --> 00:11:25,429
well<font color="#CCCCCC"> we</font><font color="#E5E5E5"> currently don't have a user land</font>

263
00:11:23,569 --> 00:11:27,439
interface we definitely need to<font color="#CCCCCC"> come up</font>

264
00:11:25,429 --> 00:11:30,920
with<font color="#CCCCCC"> one that works</font><font color="#E5E5E5"> for everyone</font><font color="#CCCCCC"> which</font>

265
00:11:27,439 --> 00:11:33,170
is<font color="#CCCCCC"> why we</font><font color="#E5E5E5"> don't have one hit some use</font>

266
00:11:30,920 --> 00:11:36,199
<font color="#E5E5E5">cases currently</font><font color="#CCCCCC"> don't work but we're</font>

267
00:11:33,170 --> 00:11:37,910
working on<font color="#CCCCCC"> that but not</font><font color="#E5E5E5"> all this doom</font>

268
00:11:36,199 --> 00:11:42,309
and<font color="#CCCCCC"> gloom here's a picture of my cat</font>

269
00:11:37,910 --> 00:11:53,118
watching TV and let's go to questions

270
00:11:42,309 --> 00:11:54,949
questions<font color="#E5E5E5"> yes yes I mean we had long</font>

271
00:11:53,119 --> 00:11:56,480
discussions<font color="#E5E5E5"> at plumbers about this and</font>

272
00:11:54,949 --> 00:11:59,868
then people had<font color="#CCCCCC"> different</font><font color="#E5E5E5"> opinions on</font>

273
00:11:56,480 --> 00:12:02,389
<font color="#CCCCCC">how well DT overlays worked for PCIe and</font>

274
00:11:59,869 --> 00:12:04,549
<font color="#CCCCCC">Nan</font><font color="#E5E5E5"> DT based platforms</font><font color="#CCCCCC"> I think the</font>

275
00:12:02,389 --> 00:12:06,290
conclusion<font color="#E5E5E5"> was it should work but no one</font>

276
00:12:04,549 --> 00:12:09,470
has actually<font color="#CCCCCC"> tried it</font><font color="#E5E5E5"> but then</font><font color="#CCCCCC"> Lars</font>

277
00:12:06,290 --> 00:12:12,618
<font color="#CCCCCC">Peter Claussen said</font><font color="#E5E5E5"> he did that for a</font>

278
00:12:09,470 --> 00:12:14,209
PCI<font color="#CCCCCC"> Express card they had so there is</font>

279
00:12:12,619 --> 00:12:16,970
definitely<font color="#E5E5E5"> people</font><font color="#CCCCCC"> that have done it</font>

280
00:12:14,209 --> 00:12:27,998
there's just nothing<font color="#E5E5E5"> mainline or patches</font>

281
00:12:16,970 --> 00:12:27,999
public<font color="#E5E5E5"> yes okay</font>

282
00:12:28,370 --> 00:12:51,110
I mean they're using<font color="#E5E5E5"> zhiling</font><font color="#CCCCCC"> safe PJ's</font>

283
00:12:47,779 --> 00:12:52,910
<font color="#CCCCCC">right</font><font color="#E5E5E5"> yeah so I</font><font color="#CCCCCC"> had talked to the people</font>

284
00:12:51,110 --> 00:12:55,370
at<font color="#E5E5E5"> sailings and asked them</font><font color="#CCCCCC"> to send</font><font color="#E5E5E5"> me</font>

285
00:12:52,910 --> 00:12:58,910
<font color="#CCCCCC">Hardware</font><font color="#E5E5E5"> which then resulted in not</font>

286
00:12:55,370 --> 00:13:00,830
getting<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> back so</font><font color="#E5E5E5"> I mean it's</font>

287
00:12:58,910 --> 00:13:02,900
<font color="#E5E5E5">like when I developed the code for the</font>

288
00:13:00,830 --> 00:13:04,730
<font color="#E5E5E5">zinc for partial reconfiguration I don't</font>

289
00:13:02,900 --> 00:13:07,550
have a license<font color="#CCCCCC"> for it so how do I test</font>

290
00:13:04,730 --> 00:13:09,110
it well I don't<font color="#CCCCCC"> I read the manual I</font>

291
00:13:07,550 --> 00:13:11,420
wrote the code<font color="#E5E5E5"> and turns out someone</font>

292
00:13:09,110 --> 00:13:16,220
<font color="#E5E5E5">else used it and it does work but I mean</font>

293
00:13:11,420 --> 00:13:19,060
if I don't<font color="#CCCCCC"> have hardware well there's</font>

294
00:13:16,220 --> 00:13:19,060
nothing I<font color="#E5E5E5"> can do</font>

295
00:13:25,700 --> 00:13:31,130
well I<font color="#E5E5E5"> Alan tell who's the</font><font color="#CCCCCC"> other</font>

296
00:13:28,370 --> 00:13:32,960
maintainer works at<font color="#CCCCCC"> El Tara</font><font color="#E5E5E5"> and I think</font>

297
00:13:31,130 --> 00:13:45,260
he has access<font color="#CCCCCC"> to most of</font><font color="#E5E5E5"> the things they</font>

298
00:13:32,960 --> 00:13:49,700
do so<font color="#CCCCCC"> what did they work with us for</font><font color="#E5E5E5"> the</font>

299
00:13:45,260 --> 00:13:51,560
zinc<font color="#CCCCCC"> yes for zinc MPA</font><font color="#E5E5E5"> I think they have</font>

300
00:13:49,700 --> 00:13:54,730
in their own tree and<font color="#CCCCCC"> FPGA a manager</font>

301
00:13:51,560 --> 00:13:57,680
driver however<font color="#E5E5E5"> that depends on some</font>

302
00:13:54,730 --> 00:13:59,420
firmware code that<font color="#E5E5E5"> there</font><font color="#CCCCCC"> I think in the</font>

303
00:13:57,680 --> 00:14:03,050
<font color="#E5E5E5">process of up streaming so ultimately</font>

304
00:13:59,420 --> 00:14:04,939
<font color="#CCCCCC">zinc MPA should come into</font><font color="#E5E5E5"> place however</font>

305
00:14:03,050 --> 00:14:06,229
the whole thing we<font color="#E5E5E5"> sync MP is a bit</font>

306
00:14:04,940 --> 00:14:08,420
complex<font color="#E5E5E5"> because they have all these</font>

307
00:14:06,230 --> 00:14:11,360
<font color="#CCCCCC">different processors</font><font color="#E5E5E5"> and it's not clear</font>

308
00:14:08,420 --> 00:14:13,310
<font color="#E5E5E5">who does what for every setup so it's a</font>

309
00:14:11,360 --> 00:14:14,870
bit more<font color="#CCCCCC"> difficult than</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> the simple</font>

310
00:14:13,310 --> 00:14:28,510
case<font color="#E5E5E5"> where you have one processor that's</font>

311
00:14:14,870 --> 00:14:28,510
in<font color="#E5E5E5"> charge of doing something yes yes oh</font>

312
00:14:31,030 --> 00:14:36,370
no it's for for actually creating<font color="#CCCCCC"> the</font>

313
00:14:34,100 --> 00:14:39,500
bit streams where you need the license<font color="#CCCCCC"> I</font>

314
00:14:36,370 --> 00:14:42,260
mean in our use case<font color="#CCCCCC"> you can talk about</font>

315
00:14:39,500 --> 00:14:44,570
<font color="#E5E5E5">us why we don't do that as a company I</font>

316
00:14:42,260 --> 00:14:45,170
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> if we sell something</font><font color="#E5E5E5"> to people and</font>

317
00:14:44,570 --> 00:14:46,970
<font color="#E5E5E5">everything</font>

318
00:14:45,170 --> 00:14:48,650
our whole<font color="#CCCCCC"> FPGA code</font><font color="#E5E5E5"> everything is</font>

319
00:14:46,970 --> 00:14:51,020
<font color="#CCCCCC">open-source and</font><font color="#E5E5E5"> we want people to</font>

320
00:14:48,650 --> 00:14:52,970
recreate the images we we make for our

321
00:14:51,020 --> 00:14:55,040
hardware<font color="#E5E5E5"> but the fact that there's no</font>

322
00:14:52,970 --> 00:14:56,630
<font color="#E5E5E5">free license available</font><font color="#CCCCCC"> keeps us from</font>

323
00:14:55,040 --> 00:14:57,980
using the feature which otherwise<font color="#CCCCCC"> is</font>

324
00:14:56,630 --> 00:15:00,260
really cool because<font color="#E5E5E5"> you can do things</font>

325
00:14:57,980 --> 00:15:02,600
like the until<font color="#E5E5E5"> DFL things where you</font>

326
00:15:00,260 --> 00:15:09,250
don't<font color="#E5E5E5"> take down your PC Express link</font>

327
00:15:02,600 --> 00:15:09,250
during recon reconfiguration yes

328
00:15:20,560 --> 00:15:25,000
yeah but<font color="#E5E5E5"> that that's expensive right</font>

329
00:15:37,329 --> 00:15:44,508
yeah that would be so yeah it didn't

330
00:15:40,810 --> 00:15:46,189
respond<font color="#CCCCCC"> to I didn't reply</font><font color="#E5E5E5"> any repeat any</font>

331
00:15:44,509 --> 00:15:48,170
of<font color="#E5E5E5"> the questions</font><font color="#CCCCCC"> but the question was</font>

332
00:15:46,190 --> 00:15:51,620
like<font color="#E5E5E5"> whether you can bake in the image</font>

333
00:15:48,170 --> 00:15:54,079
info<font color="#E5E5E5"> into the the hardware description</font>

334
00:15:51,620 --> 00:15:55,850
<font color="#E5E5E5">into the image and yeah that gets you</font>

335
00:15:54,079 --> 00:15:57,609
<font color="#E5E5E5">back to</font><font color="#CCCCCC"> the discoverable case because</font>

336
00:15:55,850 --> 00:16:01,069
<font color="#CCCCCC">suddenly you can look at what's in there</font>

337
00:15:57,610 --> 00:16:02,959
<font color="#CCCCCC">that's what</font><font color="#E5E5E5"> Intel does with the DFL my</font>

338
00:16:01,069 --> 00:16:05,240
proposal was to use flattened device

339
00:16:02,959 --> 00:16:06,800
tree to sort of<font color="#E5E5E5"> standardize</font><font color="#CCCCCC"> so we'd</font>

340
00:16:05,240 --> 00:16:10,069
create a little<font color="#E5E5E5"> header that goes on</font>

341
00:16:06,800 --> 00:16:12,349
every<font color="#E5E5E5"> bit stream and it seemed smarter</font>

342
00:16:10,069 --> 00:16:15,290
to me<font color="#E5E5E5"> then baking</font><font color="#CCCCCC"> it inside</font><font color="#E5E5E5"> I mean</font>

343
00:16:12,350 --> 00:16:17,240
because because storage on<font color="#CCCCCC"> your on your</font>

344
00:16:15,290 --> 00:16:19,910
<font color="#E5E5E5">SD card or wherever it's way cheaper</font>

345
00:16:17,240 --> 00:16:23,649
than sacrificing block<font color="#CCCCCC"> ram which in</font>

346
00:16:19,910 --> 00:16:23,649
smaller FPGA is you<font color="#E5E5E5"> run out fast</font>

347
00:16:32,430 --> 00:16:36,989
<font color="#E5E5E5">well the</font><font color="#CCCCCC"> workaround we have for dad</font><font color="#E5E5E5"> is</font>

348
00:16:35,040 --> 00:16:38,579
we have sort<font color="#CCCCCC"> of like</font><font color="#E5E5E5"> a revision</font><font color="#CCCCCC"> register</font>

349
00:16:36,990 --> 00:16:41,180
<font color="#E5E5E5">that we then read and figure</font><font color="#CCCCCC"> out okay</font>

350
00:16:38,580 --> 00:16:41,180
what's loaded

351
00:16:44,529 --> 00:16:53,529
I think there was<font color="#CCCCCC"> a patch I think we</font>

352
00:16:48,309 --> 00:16:56,769
might have<font color="#CCCCCC"> let me check on my list yes</font>

353
00:16:53,529 --> 00:16:59,649
<font color="#E5E5E5">so the question was if we support CVP</font>

354
00:16:56,769 --> 00:17:02,979
<font color="#E5E5E5">for</font><font color="#CCCCCC"> Altair our devices</font><font color="#E5E5E5"> if it's on</font><font color="#CCCCCC"> that</font>

355
00:16:59,649 --> 00:17:04,929
<font color="#E5E5E5">list</font><font color="#CCCCCC"> they think it is</font><font color="#E5E5E5"> supported but I</font>

356
00:17:02,979 --> 00:17:07,569
saw definitely patches for that I don't

357
00:17:04,929 --> 00:17:11,069
<font color="#CCCCCC">know</font><font color="#E5E5E5"> at what</font><font color="#CCCCCC"> stage</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are with merging</font>

358
00:17:07,569 --> 00:17:11,069
them but we're looking<font color="#E5E5E5"> at it</font><font color="#CCCCCC"> definitely</font>

359
00:17:11,549 --> 00:17:17,990
other questions

360
00:17:14,490 --> 00:17:26,098
<font color="#E5E5E5">no all right</font>

361
00:17:17,990 --> 00:17:26,098
[Applause]

