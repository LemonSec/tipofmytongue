1
00:00:04,590 --> 00:00:11,480
<font color="#CCCCCC">oh here</font><font color="#E5E5E5"> we go very boring title slide</font>

2
00:00:08,220 --> 00:00:11,480
here anyway

3
00:00:12,440 --> 00:00:16,980
I'm going to talk<font color="#E5E5E5"> about the new cap took</font>

4
00:00:14,940 --> 00:00:20,369
a new circuit analysis package and I'm

5
00:00:16,980 --> 00:00:24,660
also going to talk about how analog

6
00:00:20,369 --> 00:00:26,100
simulation works<font color="#CCCCCC"> to some extent to the</font>

7
00:00:24,660 --> 00:00:31,830
<font color="#CCCCCC">extent that I can do it within</font><font color="#E5E5E5"> the</font>

8
00:00:26,100 --> 00:00:33,300
allotted time<font color="#CCCCCC"> so let's start out with</font>

9
00:00:31,830 --> 00:00:37,559
about<font color="#E5E5E5"> well</font><font color="#CCCCCC"> alright here here's the</font>

10
00:00:33,300 --> 00:00:40,010
outline<font color="#CCCCCC"> so let's start out with how</font>

11
00:00:37,559 --> 00:00:43,169
Lionel Logue simulation works

12
00:00:40,010 --> 00:00:44,968
all right<font color="#CCCCCC"> analog undergrad circuit</font>

13
00:00:43,170 --> 00:00:47,370
<font color="#E5E5E5">theory everybody remember the circuits</font>

14
00:00:44,969 --> 00:00:50,550
one course<font color="#CCCCCC"> at DC analysis where you</font>

15
00:00:47,370 --> 00:00:55,169
nodal analysis<font color="#E5E5E5"> that's the basic idea</font>

16
00:00:50,550 --> 00:00:57,599
here<font color="#CCCCCC"> now in the case in the case of how</font>

17
00:00:55,170 --> 00:01:00,180
a simulator<font color="#E5E5E5"> works you take that</font>

18
00:00:57,600 --> 00:01:02,789
<font color="#E5E5E5">principle and you'd apply the principle</font>

19
00:01:00,180 --> 00:01:04,589
of superposition to stamp the numbers

20
00:01:02,789 --> 00:01:07,880
into<font color="#CCCCCC"> a matrix so if I have a circuit</font>

21
00:01:04,589 --> 00:01:12,720
let's make a current source here and

22
00:01:07,880 --> 00:01:19,860
<font color="#CCCCCC">let's</font><font color="#E5E5E5"> put a resistor</font><font color="#CCCCCC"> here and let's</font><font color="#E5E5E5"> put</font>

23
00:01:12,720 --> 00:01:22,590
a resistor<font color="#CCCCCC"> here I have two nodes</font><font color="#E5E5E5"> and</font>

24
00:01:19,860 --> 00:01:28,050
let's call this let's make<font color="#E5E5E5"> this resistor</font>

25
00:01:22,590 --> 00:01:29,429
hundred ohms<font color="#E5E5E5"> r1 let's make this r2 let's</font>

26
00:01:28,050 --> 00:01:33,330
make that<font color="#CCCCCC"> fifty ohms</font>

27
00:01:29,429 --> 00:01:36,209
<font color="#CCCCCC">I would stamp these if you're</font><font color="#E5E5E5"> doing a</font>

28
00:01:33,330 --> 00:01:38,360
nodal analysis you you'd write the

29
00:01:36,209 --> 00:01:41,039
equations<font color="#E5E5E5"> if you're doing a simulation</font>

30
00:01:38,360 --> 00:01:42,630
<font color="#E5E5E5">what I'm what we do is we go</font><font color="#CCCCCC"> over the</font>

31
00:01:41,039 --> 00:01:45,660
netlist and you stamp<font color="#E5E5E5"> it in you apply</font>

32
00:01:42,630 --> 00:01:48,030
this principle<font color="#E5E5E5"> of superposition so so r1</font>

33
00:01:45,660 --> 00:01:50,550
goes from<font color="#CCCCCC"> one to</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> Tsarist and I would</font>

34
00:01:48,030 --> 00:01:53,340
take<font color="#CCCCCC"> 1 over</font><font color="#E5E5E5"> 100 put it</font><font color="#CCCCCC"> here in the</font>

35
00:01:50,550 --> 00:01:59,848
matrix 1 over 100 put it<font color="#E5E5E5"> here in the</font>

36
00:01:53,340 --> 00:02:02,759
matrix column column<font color="#E5E5E5"> 1</font><font color="#CCCCCC"> 2 Row 1 and Row</font>

37
00:01:59,849 --> 00:02:05,849
Row 1 and<font color="#CCCCCC"> 2 column 1</font><font color="#E5E5E5"> and 2 so node 1</font>

38
00:02:02,759 --> 00:02:08,729
corresponds to this spot in the matrix

39
00:02:05,849 --> 00:02:10,590
<font color="#E5E5E5">no to this spot and the connections</font>

40
00:02:08,729 --> 00:02:13,340
<font color="#CCCCCC">between them would</font><font color="#E5E5E5"> be on the off</font>

41
00:02:10,590 --> 00:02:13,340
diagonals

42
00:02:15,120 --> 00:02:20,950
and so so the so<font color="#E5E5E5"> this resistor would</font>

43
00:02:18,910 --> 00:02:23,140
would kind<font color="#E5E5E5"> of shove that into the matrix</font>

44
00:02:20,950 --> 00:02:24,760
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> actually look at writing</font><font color="#E5E5E5"> the</font>

45
00:02:23,140 --> 00:02:26,950
equations you'd come up<font color="#CCCCCC"> with this and</font>

46
00:02:24,760 --> 00:02:29,049
likewise<font color="#E5E5E5"> the second</font><font color="#CCCCCC"> resistor here this</font>

47
00:02:26,950 --> 00:02:32,859
goes from<font color="#CCCCCC"> no.2</font><font color="#E5E5E5"> to ground I just</font><font color="#CCCCCC"> added</font>

48
00:02:29,050 --> 00:02:36,880
<font color="#CCCCCC">here so here's the matrix that</font><font color="#E5E5E5"> I'd solve</font>

49
00:02:32,860 --> 00:02:39,489
to<font color="#E5E5E5"> do a DC analysis and this is this is</font>

50
00:02:36,880 --> 00:02:41,230
<font color="#CCCCCC">basically how it</font><font color="#E5E5E5"> all all works is we're</font>

51
00:02:39,489 --> 00:02:45,190
starting<font color="#E5E5E5"> with undergrad circuit theory</font>

52
00:02:41,230 --> 00:02:47,950
and and taking<font color="#CCCCCC"> a component</font><font color="#E5E5E5"> at a time</font>

53
00:02:45,190 --> 00:02:50,230
take this component this component this

54
00:02:47,950 --> 00:02:55,390
component and and you add it up<font color="#E5E5E5"> to the</font>

55
00:02:50,230 --> 00:02:56,828
matrix and then<font color="#E5E5E5"> we solve it and now</font><font color="#CCCCCC"> in</font>

56
00:02:55,390 --> 00:02:58,750
terms of<font color="#E5E5E5"> the status of how many</font>

57
00:02:56,829 --> 00:02:59,860
simulators got this far<font color="#E5E5E5"> hey this is</font>

58
00:02:58,750 --> 00:03:06,280
something<font color="#E5E5E5"> I give as a homework</font>

59
00:02:59,860 --> 00:03:08,470
<font color="#E5E5E5">assignment</font><font color="#CCCCCC"> nonlinear DC analysis</font><font color="#E5E5E5"> it gets</font>

60
00:03:06,280 --> 00:03:10,390
a<font color="#E5E5E5"> little more complicated here what we</font>

61
00:03:08,470 --> 00:03:14,579
do is<font color="#CCCCCC"> we'll substitute</font><font color="#E5E5E5"> a linearized</font>

62
00:03:10,390 --> 00:03:14,578
equivalent<font color="#E5E5E5"> you didn't give me</font><font color="#CCCCCC"> an eraser</font>

63
00:03:19,079 --> 00:03:24,930
<font color="#CCCCCC">you substitute a linearized equivalent</font>

64
00:03:22,090 --> 00:03:26,560
here<font color="#E5E5E5"> and if I have a diode</font>

65
00:03:24,930 --> 00:03:30,910
characteristic you know what a diode

66
00:03:26,560 --> 00:03:33,010
looks like I'll I'll essentially make a

67
00:03:30,910 --> 00:03:35,530
resistor that makes the tangent line at

68
00:03:33,010 --> 00:03:38,590
<font color="#CCCCCC">my guess it at the</font><font color="#E5E5E5"> operating</font><font color="#CCCCCC"> point and</font>

69
00:03:35,530 --> 00:03:41,530
I'll stick that<font color="#E5E5E5"> in the matrix and so</font>

70
00:03:38,590 --> 00:03:44,920
I'll have<font color="#CCCCCC"> a resistance and the intercept</font>

71
00:03:41,530 --> 00:03:49,989
here<font color="#E5E5E5"> or or is it this intercept I forgot</font>

72
00:03:44,920 --> 00:03:54,310
which one it is<font color="#E5E5E5"> gets put on the on the</font>

73
00:03:49,989 --> 00:03:56,290
right side as a constant<font color="#E5E5E5"> and since since</font>

74
00:03:54,310 --> 00:03:58,450
I<font color="#E5E5E5"> kind of guessed where to put this I</font>

75
00:03:56,290 --> 00:04:01,209
might have guessed wrong so if I guessed

76
00:03:58,450 --> 00:04:03,010
wrong I'm going<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> and and try</font>

77
00:04:01,209 --> 00:04:06,400
try<font color="#CCCCCC"> again</font><font color="#E5E5E5"> and try again</font><font color="#CCCCCC"> until I get it</font>

78
00:04:03,010 --> 00:04:09,608
<font color="#E5E5E5">right and that</font><font color="#CCCCCC"> iteration is called</font>

79
00:04:06,400 --> 00:04:12,040
Newton's method<font color="#E5E5E5"> it's the way we do it</font>

80
00:04:09,609 --> 00:04:14,709
and pretty much every every simulator

81
00:04:12,040 --> 00:04:19,659
does this with a DC analysis and you

82
00:04:14,709 --> 00:04:23,530
know it's kind of its standard the AC

83
00:04:19,660 --> 00:04:26,200
analysis the AC analysis is essentially

84
00:04:23,530 --> 00:04:27,299
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> thing except with complex</font>

85
00:04:26,200 --> 00:04:31,378
numbers<font color="#E5E5E5"> where</font>

86
00:04:27,300 --> 00:04:32,610
where we'll do a if you have a resistor

87
00:04:31,379 --> 00:04:37,710
it's pretty much<font color="#CCCCCC"> same if you have a</font>

88
00:04:32,610 --> 00:04:40,050
capacitor you do<font color="#CCCCCC"> the J Omega C thing and</font>

89
00:04:37,710 --> 00:04:43,258
and you get the complex number to<font color="#E5E5E5"> stamp</font>

90
00:04:40,050 --> 00:04:49,199
<font color="#E5E5E5">into the</font><font color="#CCCCCC"> matrix</font><font color="#E5E5E5"> and and so it solved for</font>

91
00:04:43,259 --> 00:04:52,169
every<font color="#E5E5E5"> frequency and now in the case of</font><font color="#CCCCCC"> a</font>

92
00:04:49,199 --> 00:04:53,849
linear AC analysis that's pretty<font color="#E5E5E5"> much</font>

93
00:04:52,169 --> 00:04:55,560
what it<font color="#E5E5E5"> is in the case of a in the case</font>

94
00:04:53,849 --> 00:04:57,449
of a nonlinear circuit<font color="#E5E5E5"> like we have</font>

95
00:04:55,560 --> 00:05:00,150
transistors or diodes or something<font color="#E5E5E5"> like</font>

96
00:04:57,449 --> 00:05:02,580
<font color="#CCCCCC">that in the circuit you get this</font>

97
00:05:00,150 --> 00:05:04,440
operating point you get the the actual

98
00:05:02,580 --> 00:05:06,810
slope because the the slope of this

99
00:05:04,440 --> 00:05:09,300
curve<font color="#CCCCCC"> is is essentially the resistance</font>

100
00:05:06,810 --> 00:05:10,710
or the<font color="#E5E5E5"> actual value of resistance</font>

101
00:05:09,300 --> 00:05:13,259
capacitance whatever you're<font color="#E5E5E5"> going to use</font>

102
00:05:10,710 --> 00:05:15,780
<font color="#E5E5E5">you get that from the DC analysis from</font>

103
00:05:13,259 --> 00:05:19,020
the from the iteration of the DC

104
00:05:15,780 --> 00:05:21,568
analysis so it kind of it<font color="#E5E5E5"> it comes as a</font>

105
00:05:19,020 --> 00:05:24,930
byproduct of doing<font color="#CCCCCC"> of computing the</font>

106
00:05:21,569 --> 00:05:27,330
operating point and and so when<font color="#E5E5E5"> you have</font>

107
00:05:24,930 --> 00:05:30,389
an AC analysis the AC is a linear

108
00:05:27,330 --> 00:05:32,008
analysis<font color="#E5E5E5"> but for a nonlinear circuit</font><font color="#CCCCCC"> you</font>

109
00:05:30,389 --> 00:05:35,340
get the<font color="#E5E5E5"> linear approximation</font><font color="#CCCCCC"> at the</font>

110
00:05:32,009 --> 00:05:39,630
operating point every simulator does

111
00:05:35,340 --> 00:05:42,179
this pretty much now<font color="#E5E5E5"> a transient</font>

112
00:05:39,630 --> 00:05:44,219
<font color="#E5E5E5">analysis you can think of it as being</font>

113
00:05:42,180 --> 00:05:45,840
<font color="#CCCCCC">like DC but</font><font color="#E5E5E5"> you step it in time we're</font>

114
00:05:44,219 --> 00:05:47,460
<font color="#CCCCCC">gonna do a DC analysis and then we're</font>

115
00:05:45,840 --> 00:05:49,080
gonna do another DC<font color="#E5E5E5"> analysis and we're</font>

116
00:05:47,460 --> 00:05:53,219
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> an other DC analysis we just</font>

117
00:05:49,080 --> 00:05:56,729
keep<font color="#E5E5E5"> moving ahead in time and but in</font>

118
00:05:53,219 --> 00:06:02,729
terms of<font color="#E5E5E5"> something like capacitors will</font>

119
00:05:56,729 --> 00:06:05,370
use a finite<font color="#E5E5E5"> difference approach to</font>

120
00:06:02,729 --> 00:06:08,969
computing<font color="#E5E5E5"> what to put in for capacitors</font>

121
00:06:05,370 --> 00:06:12,690
and what that pretty<font color="#E5E5E5"> much means is that</font>

122
00:06:08,969 --> 00:06:15,509
if we<font color="#CCCCCC"> look at the map the math here we</font>

123
00:06:12,690 --> 00:06:19,289
have the we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the well the definition</font>

124
00:06:15,509 --> 00:06:22,349
<font color="#CCCCCC">of a capacitor I equals c dv/dt now i</font>

125
00:06:19,289 --> 00:06:24,509
can approximate<font color="#E5E5E5"> this</font><font color="#CCCCCC"> by instead</font><font color="#E5E5E5"> of the</font>

126
00:06:22,349 --> 00:06:25,979
actual having the derivative<font color="#CCCCCC"> i'm going</font>

127
00:06:24,509 --> 00:06:28,469
to make<font color="#E5E5E5"> some approximation of the</font>

128
00:06:25,979 --> 00:06:30,180
derivative<font color="#CCCCCC"> and I've chosen here</font><font color="#E5E5E5"> to make</font>

129
00:06:28,469 --> 00:06:33,690
a very crude approximation of the

130
00:06:30,180 --> 00:06:36,300
derivative<font color="#CCCCCC"> where I just take v-0</font><font color="#E5E5E5"> is that</font>

131
00:06:33,690 --> 00:06:39,659
is the voltage we're solving for<font color="#CCCCCC"> and v1</font>

132
00:06:36,300 --> 00:06:41,659
is<font color="#E5E5E5"> the voltage at</font><font color="#CCCCCC"> the previous time</font>

133
00:06:39,659 --> 00:06:45,840
<font color="#E5E5E5">point</font>

134
00:06:41,659 --> 00:06:47,430
/ the time we're solving for in the time

135
00:06:45,840 --> 00:06:51,479
<font color="#E5E5E5">of the previous time</font><font color="#CCCCCC"> point so this</font>

136
00:06:47,430 --> 00:06:54,930
difference here<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the time step and so</font>

137
00:06:51,479 --> 00:06:57,349
I<font color="#CCCCCC"> I can make that substitution as an</font>

138
00:06:54,930 --> 00:06:59,550
approximation of<font color="#E5E5E5"> the derivative and</font>

139
00:06:57,349 --> 00:07:02,550
mostly they use a better<font color="#E5E5E5"> approximation</font>

140
00:06:59,550 --> 00:07:04,259
<font color="#CCCCCC">than this one but I think but</font><font color="#E5E5E5"> this is a</font>

141
00:07:02,550 --> 00:07:08,419
good<font color="#E5E5E5"> one for a classroom because it's</font>

142
00:07:04,259 --> 00:07:12,120
simple<font color="#E5E5E5"> this one is called Euler's method</font>

143
00:07:08,419 --> 00:07:13,830
<font color="#CCCCCC">but so if I take this expression</font><font color="#E5E5E5"> and I</font>

144
00:07:12,120 --> 00:07:18,419
<font color="#CCCCCC">rearranged it a little bit I can</font><font color="#E5E5E5"> get it</font>

145
00:07:13,830 --> 00:07:22,438
into this form<font color="#CCCCCC"> where I have I equals C</font>

146
00:07:18,419 --> 00:07:27,049
over<font color="#E5E5E5"> H times</font><font color="#CCCCCC"> v-0 minus C over H V</font><font color="#E5E5E5"> 1</font><font color="#CCCCCC"> H</font><font color="#E5E5E5"> is</font>

147
00:07:22,439 --> 00:07:27,050
the time step<font color="#CCCCCC"> and this part here is</font><font color="#E5E5E5"> a</font>

148
00:07:27,080 --> 00:07:33,659
let's call<font color="#E5E5E5"> it a</font><font color="#CCCCCC"> time-dependent constant</font>

149
00:07:30,139 --> 00:07:36,479
meaning<font color="#CCCCCC"> that for this</font><font color="#E5E5E5"> particular time</font>

150
00:07:33,659 --> 00:07:38,370
point<font color="#E5E5E5"> it it it's it's something I</font>

151
00:07:36,479 --> 00:07:39,870
computed<font color="#E5E5E5"> from the previous time point so</font>

152
00:07:38,370 --> 00:07:43,080
it doesn't so I can treat<font color="#CCCCCC"> it as a</font>

153
00:07:39,870 --> 00:07:45,300
constant<font color="#CCCCCC"> for now this part here this v-0</font>

154
00:07:43,080 --> 00:07:47,400
is<font color="#E5E5E5"> the voltage I'm solving for</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font>

155
00:07:45,300 --> 00:07:54,120
C over<font color="#E5E5E5"> H hey that looks kind of like a</font>

156
00:07:47,400 --> 00:07:57,900
resistor so a capacitor is a resistor in

157
00:07:54,120 --> 00:08:01,440
parallel with some kind of a current

158
00:07:57,900 --> 00:08:05,609
<font color="#E5E5E5">source</font><font color="#CCCCCC"> or maybe a resistor in series</font>

159
00:08:01,440 --> 00:08:09,839
with a voltage<font color="#E5E5E5"> source take your pick</font>

160
00:08:05,610 --> 00:08:12,089
they're<font color="#E5E5E5"> really equivalent and as I step</font>

161
00:08:09,839 --> 00:08:16,319
through in time<font color="#CCCCCC"> I just keep updating</font>

162
00:08:12,089 --> 00:08:18,599
<font color="#E5E5E5">this source</font><font color="#CCCCCC"> too to represent the the to</font>

163
00:08:16,319 --> 00:08:19,830
represent the essentially the initial

164
00:08:18,599 --> 00:08:21,240
condition<font color="#E5E5E5"> or not really the initial</font>

165
00:08:19,830 --> 00:08:23,550
<font color="#E5E5E5">condition but the condition at the</font>

166
00:08:21,240 --> 00:08:25,830
<font color="#CCCCCC">previous time step</font><font color="#E5E5E5"> but what this</font>

167
00:08:23,550 --> 00:08:32,010
resistor part is what I stamp into<font color="#E5E5E5"> the</font>

168
00:08:25,830 --> 00:08:34,559
matrix<font color="#E5E5E5"> and now and doctors are similar</font>

169
00:08:32,010 --> 00:08:36,479
in the sense<font color="#CCCCCC"> of how</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> they you can</font>

170
00:08:34,559 --> 00:08:39,390
essentially substitute a resistor and a

171
00:08:36,479 --> 00:08:43,349
source for<font color="#E5E5E5"> an inductor at a particular</font>

172
00:08:39,390 --> 00:08:45,540
increment<font color="#E5E5E5"> now of course it gets</font><font color="#CCCCCC"> updated</font>

173
00:08:43,349 --> 00:08:50,100
<font color="#CCCCCC">every time step giving</font><font color="#E5E5E5"> you the transient</font>

174
00:08:45,540 --> 00:08:51,839
analysis so anyway<font color="#E5E5E5"> the transient</font>

175
00:08:50,100 --> 00:08:54,149
analysis is essentially<font color="#CCCCCC"> like DC in the</font>

176
00:08:51,839 --> 00:08:54,660
sense that it's real numbers stepping in

177
00:08:54,149 --> 00:08:57,210
time

178
00:08:54,660 --> 00:08:59,459
we'll use a finite finite difference

179
00:08:57,210 --> 00:09:01,230
approximation<font color="#E5E5E5"> and the number that I've</font>

180
00:08:59,460 --> 00:09:06,540
called H there is<font color="#CCCCCC"> the step size the</font>

181
00:09:01,230 --> 00:09:08,880
<font color="#E5E5E5">difference</font><font color="#CCCCCC"> between you know the size of</font>

182
00:09:06,540 --> 00:09:10,980
<font color="#E5E5E5">the time step and there's usually some</font>

183
00:09:08,880 --> 00:09:15,600
kind<font color="#E5E5E5"> of automatic control over the step</font>

184
00:09:10,980 --> 00:09:18,360
size that<font color="#E5E5E5"> is it you can you can</font><font color="#CCCCCC"> just</font>

185
00:09:15,600 --> 00:09:21,080
specify a step size<font color="#E5E5E5"> and say we're going</font>

186
00:09:18,360 --> 00:09:23,010
<font color="#E5E5E5">to</font><font color="#CCCCCC"> use this step size but but</font><font color="#E5E5E5"> but every</font>

187
00:09:21,080 --> 00:09:25,170
let's call<font color="#CCCCCC"> it professional-grade</font>

188
00:09:23,010 --> 00:09:29,400
<font color="#E5E5E5">simulator we'll make some attempt to</font>

189
00:09:25,170 --> 00:09:33,540
compute a step size and and<font color="#E5E5E5"> just go and</font>

190
00:09:29,400 --> 00:09:35,430
<font color="#E5E5E5">and use its own</font><font color="#CCCCCC"> there's a difference in</font>

191
00:09:33,540 --> 00:09:37,199
quality<font color="#E5E5E5"> of how well the various ones</font>

192
00:09:35,430 --> 00:09:39,239
<font color="#E5E5E5">work this is one of the advantages</font><font color="#CCCCCC"> of</font>

193
00:09:37,200 --> 00:09:41,340
canoe cap over<font color="#E5E5E5"> the others is the canoe</font>

194
00:09:39,240 --> 00:09:43,530
cap<font color="#E5E5E5"> you don't have to give it any clue</font>

195
00:09:41,340 --> 00:09:44,730
of what step size to use it can figure

196
00:09:43,530 --> 00:09:47,819
it out

197
00:09:44,730 --> 00:09:49,350
others ngspice you have to hint you have

198
00:09:47,820 --> 00:09:52,710
to give it a you have to give it

199
00:09:49,350 --> 00:09:54,300
something<font color="#E5E5E5"> to start with and</font><font color="#CCCCCC"> it and it'll</font>

200
00:09:52,710 --> 00:10:00,120
<font color="#E5E5E5">figure something out</font><font color="#CCCCCC"> and it still</font>

201
00:09:54,300 --> 00:10:03,050
doesn't always get<font color="#CCCCCC"> it right but</font><font color="#E5E5E5"> quarks</font>

202
00:10:00,120 --> 00:10:08,310
tends to be a more a more<font color="#CCCCCC"> steady</font><font color="#E5E5E5"> state</font>

203
00:10:03,050 --> 00:10:11,130
stepping that<font color="#E5E5E5"> doesn't that</font><font color="#CCCCCC"> it's fine for</font>

204
00:10:08,310 --> 00:10:14,040
<font color="#CCCCCC">small simple circuits but it but it</font><font color="#E5E5E5"> but</font>

205
00:10:11,130 --> 00:10:15,810
<font color="#E5E5E5">if you give it something</font><font color="#CCCCCC"> tricky it</font><font color="#E5E5E5"> miss</font>

206
00:10:14,040 --> 00:10:19,380
messes up I mean just giving you an<font color="#E5E5E5"> idea</font>

207
00:10:15,810 --> 00:10:23,339
<font color="#E5E5E5">of how the how the various ones compare</font>

208
00:10:19,380 --> 00:10:25,830
here so anyway most simulators do do

209
00:10:23,340 --> 00:10:27,450
this the quality<font color="#E5E5E5"> varies the flexibility</font>

210
00:10:25,830 --> 00:10:30,510
varies<font color="#E5E5E5"> in other what I mean by the</font>

211
00:10:27,450 --> 00:10:33,990
flexibility varies is that some

212
00:10:30,510 --> 00:10:36,450
simulators<font color="#E5E5E5"> when you do a transient</font>

213
00:10:33,990 --> 00:10:38,670
<font color="#E5E5E5">analysis you you do they always start</font>

214
00:10:36,450 --> 00:10:41,520
<font color="#CCCCCC">over at zero and there there</font><font color="#E5E5E5"> are some</font>

215
00:10:38,670 --> 00:10:43,890
others<font color="#E5E5E5"> that well in</font><font color="#CCCCCC"> canoe cap you can</font>

216
00:10:41,520 --> 00:10:46,650
tweak<font color="#CCCCCC"> it you I can start it run it for a</font>

217
00:10:43,890 --> 00:10:50,819
while at this<font color="#E5E5E5"> time run it for a while</font>

218
00:10:46,650 --> 00:10:52,410
with<font color="#E5E5E5"> rough accuracy then stop it tighten</font>

219
00:10:50,820 --> 00:10:54,990
up the accuracy and run it some more

220
00:10:52,410 --> 00:10:56,449
<font color="#E5E5E5">stop it tighten up the accuracy and run</font>

221
00:10:54,990 --> 00:11:03,360
it some<font color="#E5E5E5"> more so I can tweak it and and</font>

222
00:10:56,450 --> 00:11:04,950
interact with it more<font color="#CCCCCC"> okay enhancements</font>

223
00:11:03,360 --> 00:11:08,130
one of the things that we<font color="#E5E5E5"> haven't really</font>

224
00:11:04,950 --> 00:11:10,589
one<font color="#CCCCCC"> of the enhancements</font><font color="#E5E5E5"> that</font>

225
00:11:08,130 --> 00:11:13,980
well over the basics that<font color="#E5E5E5"> just about</font>

226
00:11:10,589 --> 00:11:16,860
everything does<font color="#CCCCCC"> if you look at a large</font>

227
00:11:13,980 --> 00:11:21,110
circuit these<font color="#CCCCCC"> matrices can</font><font color="#E5E5E5"> get very</font>

228
00:11:16,860 --> 00:11:22,949
large<font color="#CCCCCC"> and so just</font><font color="#E5E5E5"> about all of</font><font color="#CCCCCC"> the</font>

229
00:11:21,110 --> 00:11:24,810
simulators that<font color="#E5E5E5"> you'll ever work with</font>

230
00:11:22,949 --> 00:11:27,000
<font color="#E5E5E5">you some sort of sparse matrix</font>

231
00:11:24,810 --> 00:11:30,479
techniques where they<font color="#E5E5E5"> only store the</font>

232
00:11:27,000 --> 00:11:35,220
<font color="#CCCCCC">active parts because if I have a circuit</font>

233
00:11:30,480 --> 00:11:39,480
with a thousand with oh let's thousand

234
00:11:35,220 --> 00:11:41,100
nodes or or what what I remember my boss

235
00:11:39,480 --> 00:11:43,339
<font color="#E5E5E5">for I was referring to as a small</font>

236
00:11:41,100 --> 00:11:47,279
circuit<font color="#CCCCCC"> only a hundred thousand nodes</font>

237
00:11:43,339 --> 00:11:50,790
<font color="#CCCCCC">you end up with with mostly zeros</font><font color="#E5E5E5"> in</font>

238
00:11:47,279 --> 00:11:53,220
this<font color="#CCCCCC"> matrix</font><font color="#E5E5E5"> and so generally they'll use</font>

239
00:11:50,790 --> 00:11:55,410
some sort of sparse matrix<font color="#E5E5E5"> techniques to</font>

240
00:11:53,220 --> 00:11:57,920
<font color="#E5E5E5">minimize the storage and so that you</font>

241
00:11:55,410 --> 00:12:00,719
don't<font color="#E5E5E5"> have to operate</font><font color="#CCCCCC"> on all those</font><font color="#E5E5E5"> zeros</font>

242
00:11:57,920 --> 00:12:02,759
another enhancement<font color="#E5E5E5"> that something</font>

243
00:12:00,720 --> 00:12:05,850
specific to<font color="#E5E5E5"> the new cap is an</font>

244
00:12:02,759 --> 00:12:08,699
incremental<font color="#E5E5E5"> solver that</font><font color="#CCCCCC"> since</font><font color="#E5E5E5"> it's since</font>

245
00:12:05,850 --> 00:12:11,220
a transient analysis is solving the same

246
00:12:08,699 --> 00:12:13,258
thing over<font color="#E5E5E5"> and over and over now it's</font>

247
00:12:11,220 --> 00:12:17,279
not a transient analysis<font color="#CCCCCC"> it's not just</font>

248
00:12:13,259 --> 00:12:18,360
solving<font color="#E5E5E5"> for</font><font color="#CCCCCC"> every time step but remember</font>

249
00:12:17,279 --> 00:12:20,639
it's nonlinear

250
00:12:18,360 --> 00:12:24,300
so it's also iterating on every time

251
00:12:20,639 --> 00:12:28,529
step so you might<font color="#E5E5E5"> end up with let's say</font>

252
00:12:24,300 --> 00:12:32,880
on<font color="#CCCCCC"> the average maybe five solutions</font><font color="#E5E5E5"> per</font>

253
00:12:28,529 --> 00:12:34,800
time step<font color="#E5E5E5"> and so that's a lot of</font>

254
00:12:32,880 --> 00:12:36,930
<font color="#E5E5E5">solutions one thing that</font><font color="#CCCCCC"> canoe cap does</font>

255
00:12:34,800 --> 00:12:39,389
that the others don't<font color="#E5E5E5"> do actually this</font>

256
00:12:36,930 --> 00:12:41,660
is this is the<font color="#E5E5E5"> original fast spice the</font>

257
00:12:39,389 --> 00:12:44,639
original spice accurate fast spice is

258
00:12:41,660 --> 00:12:46,709
that canoe cap has an incremental solver

259
00:12:44,639 --> 00:12:49,170
so that it doesn't actually<font color="#E5E5E5"> solve the</font>

260
00:12:46,709 --> 00:12:54,810
whole matrix every time it'll it'll just

261
00:12:49,170 --> 00:12:56,969
solve pieces of it in terms<font color="#E5E5E5"> of time step</font>

262
00:12:54,810 --> 00:13:01,258
control there's a number<font color="#E5E5E5"> of things that</font>

263
00:12:56,970 --> 00:13:05,300
they look at<font color="#E5E5E5"> to to determine what time</font>

264
00:13:01,259 --> 00:13:08,639
<font color="#E5E5E5">stepping to use almost all</font><font color="#CCCCCC"> of them use</font>

265
00:13:05,300 --> 00:13:11,430
<font color="#E5E5E5">use something called truncation</font><font color="#CCCCCC"> error as</font>

266
00:13:08,639 --> 00:13:13,500
a means of time step control<font color="#E5E5E5"> so remember</font>

267
00:13:11,430 --> 00:13:15,508
when I when I said<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we're gonna make</font>

268
00:13:13,500 --> 00:13:18,059
this<font color="#CCCCCC"> approximation that hey a capacitor</font>

269
00:13:15,509 --> 00:13:20,130
is like a resistor and<font color="#E5E5E5"> a source that</font><font color="#CCCCCC"> is</font>

270
00:13:18,059 --> 00:13:21,930
<font color="#CCCCCC">an</font><font color="#E5E5E5"> approximation and if you want</font>

271
00:13:20,130 --> 00:13:23,460
accuracy<font color="#CCCCCC"> you got to make your time step</font>

272
00:13:21,930 --> 00:13:25,290
small enough that<font color="#E5E5E5"> the error that's</font>

273
00:13:23,460 --> 00:13:29,880
introduced by this approximation is

274
00:13:25,290 --> 00:13:31,620
small<font color="#E5E5E5"> and so the the error that you get</font>

275
00:13:29,880 --> 00:13:34,589
from<font color="#E5E5E5"> this approximation they call that</font>

276
00:13:31,620 --> 00:13:39,720
truncation error and and so just<font color="#E5E5E5"> about</font>

277
00:13:34,589 --> 00:13:42,120
<font color="#E5E5E5">everything uses that as a as a as</font><font color="#CCCCCC"> part</font>

278
00:13:39,720 --> 00:13:45,180
<font color="#CCCCCC">of the basis for time stepping time step</font>

279
00:13:42,120 --> 00:13:47,279
control<font color="#E5E5E5"> and other and other methods</font><font color="#CCCCCC"> that</font>

280
00:13:45,180 --> 00:13:51,000
some simulators use one thing<font color="#E5E5E5"> that canoe</font>

281
00:13:47,279 --> 00:13:56,070
<font color="#E5E5E5">cap uses and also the cadence simulator</font>

282
00:13:51,000 --> 00:13:57,720
<font color="#E5E5E5">Specter uses is that is</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> the</font>

283
00:13:56,070 --> 00:14:02,339
time step is controlled for<font color="#E5E5E5"> curve</font>

284
00:13:57,720 --> 00:14:07,170
smoothness<font color="#E5E5E5"> so that if you have a let's</font>

285
00:14:02,339 --> 00:14:09,570
say it's actually<font color="#CCCCCC"> how you would how you</font>

286
00:14:07,170 --> 00:14:13,529
would control<font color="#E5E5E5"> an interpolation algorithm</font>

287
00:14:09,570 --> 00:14:15,600
that so that the the<font color="#CCCCCC"> time step is</font>

288
00:14:13,529 --> 00:14:17,330
controlled based on the idea<font color="#CCCCCC"> that hey</font>

289
00:14:15,600 --> 00:14:19,830
assume I want<font color="#E5E5E5"> to know the voltage</font>

290
00:14:17,330 --> 00:14:21,720
<font color="#E5E5E5">halfway between these two time steps</font>

291
00:14:19,830 --> 00:14:23,220
<font color="#CCCCCC">I didn't calculate it</font><font color="#E5E5E5"> but I want to know</font>

292
00:14:21,720 --> 00:14:25,560
<font color="#E5E5E5">that I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know what it is</font><font color="#CCCCCC"> that</font>

293
00:14:23,220 --> 00:14:28,140
anyway how<font color="#E5E5E5"> accurate is</font><font color="#CCCCCC"> that and there's</font>

294
00:14:25,560 --> 00:14:30,719
a way that<font color="#E5E5E5"> you can get</font><font color="#CCCCCC"> a bound on how</font>

295
00:14:28,140 --> 00:14:33,500
<font color="#CCCCCC">accurate that</font><font color="#E5E5E5"> is by by taking</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> next</font>

296
00:14:30,720 --> 00:14:38,300
derivative<font color="#E5E5E5"> and anyway</font><font color="#CCCCCC"> Ganu cap does that</font>

297
00:14:33,500 --> 00:14:40,950
Specter does<font color="#E5E5E5"> that spice does not and and</font>

298
00:14:38,300 --> 00:14:43,579
it'll<font color="#E5E5E5"> tend to give you smoother curve</font>

299
00:14:40,950 --> 00:14:46,800
<font color="#CCCCCC">and</font><font color="#E5E5E5"> another thing that</font><font color="#CCCCCC"> some of them use</font>

300
00:14:43,580 --> 00:14:49,680
for doing time step control is discrete

301
00:14:46,800 --> 00:14:52,290
events and and or what what<font color="#CCCCCC"> vera log</font><font color="#E5E5E5"> a</font>

302
00:14:49,680 --> 00:14:57,150
might call cross events that is if I

303
00:14:52,290 --> 00:14:59,849
have a voltage crosses<font color="#E5E5E5"> a certain point</font>

304
00:14:57,150 --> 00:15:03,270
the time it<font color="#CCCCCC"> crosses is is time can</font>

305
00:14:59,850 --> 00:15:10,320
accurately controlled<font color="#E5E5E5"> and the new cap</font>

306
00:15:03,270 --> 00:15:11,939
does that spice does not<font color="#E5E5E5"> and as far as</font>

307
00:15:10,320 --> 00:15:14,820
there are very few simulators that

308
00:15:11,940 --> 00:15:17,310
<font color="#E5E5E5">actually do that and it makes a big</font>

309
00:15:14,820 --> 00:15:20,930
difference<font color="#CCCCCC"> in speed and accuracy if</font>

310
00:15:17,310 --> 00:15:20,930
you're doing<font color="#E5E5E5"> switching circuits</font>

311
00:15:23,010 --> 00:15:30,520
<font color="#CCCCCC">alright s-parameter simulation</font><font color="#E5E5E5"> that this</font>

312
00:15:28,270 --> 00:15:32,829
is<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> one of the the big points</font>

313
00:15:30,520 --> 00:15:34,569
about quarks<font color="#E5E5E5"> want one</font><font color="#CCCCCC"> of the things that</font>

314
00:15:32,830 --> 00:15:37,510
makes quarks great because it does that

315
00:15:34,570 --> 00:15:39,520
and and most spices don't<font color="#E5E5E5"> and</font><font color="#CCCCCC"> good new</font>

316
00:15:37,510 --> 00:15:41,650
cap does not it's kind of like AC

317
00:15:39,520 --> 00:15:45,730
<font color="#E5E5E5">analysis but it's based on power it's a</font>

318
00:15:41,650 --> 00:15:48,490
linear<font color="#E5E5E5"> analysis like AC but it's</font><font color="#CCCCCC"> based</font>

319
00:15:45,730 --> 00:15:51,340
on<font color="#E5E5E5"> the idea</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that you have</font><font color="#CCCCCC"> two port</font>

320
00:15:48,490 --> 00:15:52,840
blocks that<font color="#CCCCCC"> you give the</font><font color="#E5E5E5"> s-parameters of</font>

321
00:15:51,340 --> 00:15:55,990
the blocks in it and it<font color="#E5E5E5"> makes a</font>

322
00:15:52,840 --> 00:16:00,730
calculation<font color="#CCCCCC"> based on that and it's it's</font>

323
00:15:55,990 --> 00:16:03,280
<font color="#E5E5E5">used by RF designers mostly and</font><font color="#CCCCCC"> alright</font>

324
00:16:00,730 --> 00:16:06,250
quarks has it I think<font color="#E5E5E5"> Zeiss has it the</font>

325
00:16:03,280 --> 00:16:08,550
<font color="#E5E5E5">new cap and ngspice don't we're working</font>

326
00:16:06,250 --> 00:16:08,550
on it

327
00:16:08,670 --> 00:16:13,390
another type of<font color="#CCCCCC"> analysis you</font><font color="#E5E5E5"> might see</font>

328
00:16:11,530 --> 00:16:15,010
is something<font color="#E5E5E5"> called harmonic balance</font>

329
00:16:13,390 --> 00:16:17,590
<font color="#CCCCCC">it's another thing</font><font color="#E5E5E5"> that canoe cap does</font>

330
00:16:15,010 --> 00:16:23,770
not have it's a<font color="#CCCCCC"> steady-state nonlinear</font>

331
00:16:17,590 --> 00:16:28,300
basically basically<font color="#CCCCCC"> you you do the you</font>

332
00:16:23,770 --> 00:16:30,490
figure<font color="#CCCCCC"> out the the</font><font color="#E5E5E5"> nonlinear parameters</font>

333
00:16:28,300 --> 00:16:32,709
<font color="#E5E5E5">like you would in a transient analysis</font>

334
00:16:30,490 --> 00:16:34,530
you you figure out the nonlinear

335
00:16:32,710 --> 00:16:37,300
characteristics<font color="#E5E5E5"> at an operating point</font>

336
00:16:34,530 --> 00:16:38,949
but but<font color="#E5E5E5"> not just</font><font color="#CCCCCC"> the but not</font><font color="#E5E5E5"> just the</font>

337
00:16:37,300 --> 00:16:40,810
first derivative you figure several of

338
00:16:38,950 --> 00:16:42,880
the derivatives<font color="#E5E5E5"> of it at an operating</font>

339
00:16:40,810 --> 00:16:46,689
<font color="#E5E5E5">point and then you do something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> an</font>

340
00:16:42,880 --> 00:16:48,430
AC analysis that computes harmonics<font color="#E5E5E5"> not</font>

341
00:16:46,690 --> 00:16:49,780
just<font color="#E5E5E5"> the not just the fundamental</font>

342
00:16:48,430 --> 00:16:52,359
frequency that you're looking at but

343
00:16:49,780 --> 00:16:55,209
<font color="#CCCCCC">also</font><font color="#E5E5E5"> harmonics and it gives you an</font><font color="#CCCCCC"> idea</font>

344
00:16:52,360 --> 00:16:57,220
of<font color="#E5E5E5"> the distortion in the circuit it's</font>

345
00:16:55,210 --> 00:16:58,540
it's kind of an approximation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

346
00:16:57,220 --> 00:17:04,150
distortion<font color="#CCCCCC"> in the sense that it gives</font>

347
00:16:58,540 --> 00:17:08,170
<font color="#CCCCCC">you well harmonic distortion but</font><font color="#E5E5E5"> and and</font>

348
00:17:04,150 --> 00:17:10,090
so you you don't<font color="#E5E5E5"> get the effect of let's</font>

349
00:17:08,170 --> 00:17:11,950
say clipping distortion you you get the

350
00:17:10,089 --> 00:17:13,780
effects of distortion when you're in the

351
00:17:11,950 --> 00:17:15,580
when you're in the proper operating

352
00:17:13,780 --> 00:17:17,170
<font color="#E5E5E5">region of the devices but you don't get</font>

353
00:17:15,579 --> 00:17:19,329
<font color="#E5E5E5">the effects of the distortion</font><font color="#CCCCCC"> that you</font>

354
00:17:17,170 --> 00:17:22,390
get when you<font color="#E5E5E5"> get when you</font><font color="#CCCCCC"> traverse into</font>

355
00:17:19,329 --> 00:17:28,240
different<font color="#E5E5E5"> regions but but that but</font><font color="#CCCCCC"> it's</font>

356
00:17:22,390 --> 00:17:32,170
<font color="#E5E5E5">used a lot</font><font color="#CCCCCC"> by RF designers</font><font color="#E5E5E5"> digital</font>

357
00:17:28,240 --> 00:17:34,570
simulation works<font color="#CCCCCC"> completely different in</font>

358
00:17:32,170 --> 00:17:35,310
terms of<font color="#E5E5E5"> how in terms of the principles</font>

359
00:17:34,570 --> 00:17:36,960
of it

360
00:17:35,310 --> 00:17:39,300
we don't look at nodal analysis at all

361
00:17:36,960 --> 00:17:41,730
we don't<font color="#E5E5E5"> look at voltages at all and in</font>

362
00:17:39,300 --> 00:17:44,430
terms of<font color="#E5E5E5"> time stepping time stepping is</font>

363
00:17:41,730 --> 00:17:49,260
completely variable there there is no

364
00:17:44,430 --> 00:17:52,620
notion<font color="#E5E5E5"> of of any kind of steady state</font>

365
00:17:49,260 --> 00:17:54,420
<font color="#E5E5E5">but rather it's event-driven and what I</font>

366
00:17:52,620 --> 00:17:57,659
mean<font color="#E5E5E5"> by event-driven is something</font>

367
00:17:54,420 --> 00:18:02,400
happens you compute and something

368
00:17:57,660 --> 00:18:05,580
happens might mean that<font color="#CCCCCC"> III</font><font color="#E5E5E5"> III have a</font>

369
00:18:02,400 --> 00:18:07,110
<font color="#E5E5E5">an input to</font><font color="#CCCCCC"> changes state</font><font color="#E5E5E5"> and I compute</font>

370
00:18:05,580 --> 00:18:09,300
<font color="#CCCCCC">alright what's the effect of</font><font color="#E5E5E5"> this input</font>

371
00:18:07,110 --> 00:18:11,969
<font color="#E5E5E5">to change the state and I'm going to</font>

372
00:18:09,300 --> 00:18:13,889
<font color="#CCCCCC">queue it</font><font color="#E5E5E5"> up I'm gonna say well this is</font>

373
00:18:11,970 --> 00:18:15,630
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to be the effect but it's not</font>

374
00:18:13,890 --> 00:18:17,310
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to happen right away because in</font>

375
00:18:15,630 --> 00:18:19,260
digital devices there's always a time

376
00:18:17,310 --> 00:18:21,300
delay going<font color="#E5E5E5"> through a device so you</font>

377
00:18:19,260 --> 00:18:23,700
don't have any simultaneous equations to

378
00:18:21,300 --> 00:18:26,190
solve at<font color="#CCCCCC"> all</font><font color="#E5E5E5"> in a digital simulation</font>

379
00:18:23,700 --> 00:18:28,230
<font color="#E5E5E5">basically you</font><font color="#CCCCCC"> just say all right here's</font>

380
00:18:26,190 --> 00:18:31,080
a change<font color="#CCCCCC"> that occurred what does that do</font>

381
00:18:28,230 --> 00:18:32,700
<font color="#CCCCCC">and I look</font><font color="#E5E5E5"> at and I look at the devices</font>

382
00:18:31,080 --> 00:18:35,580
that were directly<font color="#CCCCCC"> impacted by those</font>

383
00:18:32,700 --> 00:18:37,880
those changes<font color="#E5E5E5"> and I calculate them and I</font>

384
00:18:35,580 --> 00:18:41,909
and I cue that up<font color="#E5E5E5"> and say that well in</font>

385
00:18:37,880 --> 00:18:45,810
in in in in 15<font color="#E5E5E5"> nanoseconds I'm going to</font>

386
00:18:41,910 --> 00:18:48,060
change that<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> I got</font><font color="#E5E5E5"> another so I</font>

387
00:18:45,810 --> 00:18:49,980
make a note saying that at 15

388
00:18:48,060 --> 00:18:50,520
nanoseconds<font color="#E5E5E5"> this note is going</font><font color="#CCCCCC"> to change</font>

389
00:18:49,980 --> 00:18:52,680
<font color="#CCCCCC">State</font>

390
00:18:50,520 --> 00:18:55,290
well it's going to have some effects<font color="#CCCCCC"> too</font>

391
00:18:52,680 --> 00:18:57,450
so that's going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> propagate</font><font color="#E5E5E5"> and so</font>

392
00:18:55,290 --> 00:19:01,350
that's the way digital simulation works

393
00:18:57,450 --> 00:19:03,300
<font color="#CCCCCC">and since</font><font color="#E5E5E5"> it's since</font><font color="#CCCCCC"> it's event-driven</font>

394
00:19:01,350 --> 00:19:05,250
<font color="#E5E5E5">since there's only it</font><font color="#CCCCCC"> only makes</font>

395
00:19:03,300 --> 00:19:07,770
calculations<font color="#CCCCCC"> when something is changing</font>

396
00:19:05,250 --> 00:19:10,830
it<font color="#E5E5E5"> only calculates the devices that</font>

397
00:19:07,770 --> 00:19:15,420
<font color="#E5E5E5">change it runs a lot</font><font color="#CCCCCC"> faster</font><font color="#E5E5E5"> than analog</font>

398
00:19:10,830 --> 00:19:20,100
simulation<font color="#CCCCCC"> a lot faster</font><font color="#E5E5E5"> and it's how</font>

399
00:19:15,420 --> 00:19:22,560
long<font color="#CCCCCC"> it takes to run</font><font color="#E5E5E5"> depends not at all</font>

400
00:19:20,100 --> 00:19:29,360
on the size of the circuit<font color="#E5E5E5"> but it</font>

401
00:19:22,560 --> 00:19:32,330
depends on the<font color="#CCCCCC"> number of transactions so</font>

402
00:19:29,360 --> 00:19:34,770
because if you have a if<font color="#E5E5E5"> you have a a</font>

403
00:19:32,330 --> 00:19:36,480
big part of<font color="#E5E5E5"> your circuit that isn't</font>

404
00:19:34,770 --> 00:19:37,860
active that<font color="#E5E5E5"> it that it nothing is</font>

405
00:19:36,480 --> 00:19:39,780
changing nothing<font color="#CCCCCC"> is happening</font>

406
00:19:37,860 --> 00:19:42,110
the simulator doesn't have any work to

407
00:19:39,780 --> 00:19:42,110
<font color="#E5E5E5">do</font>

408
00:19:42,740 --> 00:19:49,230
<font color="#E5E5E5">mixed signal analog and digital together</font>

409
00:19:46,380 --> 00:19:52,559
<font color="#E5E5E5">you know some some</font><font color="#CCCCCC"> people will put</font>

410
00:19:49,230 --> 00:19:54,120
<font color="#E5E5E5">put gates in their analog library gates</font>

411
00:19:52,559 --> 00:19:55,850
and flip-flops and stuff in their analog

412
00:19:54,120 --> 00:19:58,168
libraries<font color="#E5E5E5"> I'll make an analog model</font>

413
00:19:55,850 --> 00:20:00,178
<font color="#CCCCCC">they'll</font><font color="#E5E5E5"> make a model of it that puts out</font>

414
00:19:58,169 --> 00:20:04,889
voltages and stuff<font color="#CCCCCC"> and they say hey we</font>

415
00:20:00,179 --> 00:20:06,870
have<font color="#CCCCCC"> mix</font><font color="#E5E5E5"> mode that's not so mixed signal</font>

416
00:20:04,889 --> 00:20:10,019
simulation means that you have a

417
00:20:06,870 --> 00:20:12,209
simulator<font color="#CCCCCC"> that actually does the digital</font>

418
00:20:10,019 --> 00:20:13,769
<font color="#E5E5E5">that I was just talking about and the</font>

419
00:20:12,210 --> 00:20:16,679
<font color="#E5E5E5">analog that</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> before</font>

420
00:20:13,769 --> 00:20:20,580
that<font color="#E5E5E5"> together</font><font color="#CCCCCC"> and it makes</font><font color="#E5E5E5"> a conversion</font>

421
00:20:16,679 --> 00:20:22,139
<font color="#CCCCCC">between them</font><font color="#E5E5E5"> and so the conversions</font>

422
00:20:20,580 --> 00:20:24,389
<font color="#CCCCCC">between them between</font><font color="#E5E5E5"> the analog and</font>

423
00:20:22,139 --> 00:20:26,158
<font color="#CCCCCC">digital one</font><font color="#E5E5E5"> one type of conversion is</font>

424
00:20:24,389 --> 00:20:28,649
you have<font color="#E5E5E5"> analog-to-digital and</font>

425
00:20:26,159 --> 00:20:30,600
digital-to-analog that is the analog to

426
00:20:28,649 --> 00:20:32,850
<font color="#E5E5E5">digital means hey we have voltages we</font>

427
00:20:30,600 --> 00:20:34,860
need logic<font color="#E5E5E5"> states and the digital to</font>

428
00:20:32,850 --> 00:20:38,908
analog means we have logic<font color="#CCCCCC"> states we</font>

429
00:20:34,860 --> 00:20:40,559
need voltages and so in mixed signal

430
00:20:38,909 --> 00:20:46,649
simulation it means you have some

431
00:20:40,559 --> 00:20:52,080
mechanism for<font color="#CCCCCC"> making those</font><font color="#E5E5E5"> those changes</font>

432
00:20:46,649 --> 00:20:53,850
<font color="#CCCCCC">so that that interface and depending on</font>

433
00:20:52,080 --> 00:20:57,059
<font color="#E5E5E5">how sophisticated you want to get some</font>

434
00:20:53,850 --> 00:20:58,918
of<font color="#CCCCCC"> them will do it automatically some of</font>

435
00:20:57,059 --> 00:21:00,870
them you make interface<font color="#E5E5E5"> devices and</font>

436
00:20:58,919 --> 00:21:05,279
stuff<font color="#E5E5E5"> like that canoe cap actually does</font>

437
00:21:00,870 --> 00:21:07,580
it automatically<font color="#CCCCCC"> which it the new cap</font>

438
00:21:05,279 --> 00:21:10,350
has<font color="#CCCCCC"> always done it automatically</font><font color="#E5E5E5"> and</font>

439
00:21:07,580 --> 00:21:12,449
it's something<font color="#CCCCCC"> that as far</font><font color="#E5E5E5"> as I know</font>

440
00:21:10,350 --> 00:21:15,539
<font color="#E5E5E5">very few others</font><font color="#CCCCCC"> actually handle that</font>

441
00:21:12,450 --> 00:21:18,299
<font color="#E5E5E5">part automatically another issue that</font>

442
00:21:15,539 --> 00:21:20,760
<font color="#CCCCCC">comes up is</font><font color="#E5E5E5"> is the time synchronization</font>

443
00:21:18,299 --> 00:21:22,980
<font color="#E5E5E5">and that is</font><font color="#CCCCCC"> since the since the digital</font>

444
00:21:20,760 --> 00:21:26,100
is only actually<font color="#CCCCCC"> active at certain times</font>

445
00:21:22,980 --> 00:21:31,380
you synchronizing the analog and<font color="#CCCCCC"> digital</font>

446
00:21:26,100 --> 00:21:33,059
parts can get kind of tricky<font color="#CCCCCC"> and but but</font>

447
00:21:31,380 --> 00:21:35,460
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> one of those things that that</font>

448
00:21:33,059 --> 00:21:38,908
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> those areas</font><font color="#E5E5E5"> that canoe cap has</font>

449
00:21:35,460 --> 00:21:40,980
actually is<font color="#E5E5E5"> actually at the lead in the</font>

450
00:21:38,909 --> 00:21:45,779
sense that it actually<font color="#E5E5E5"> had this feature</font>

451
00:21:40,980 --> 00:21:48,600
<font color="#E5E5E5">before before even the commercial ones</font>

452
00:21:45,779 --> 00:21:51,269
had it because<font color="#E5E5E5"> because that's because it</font>

453
00:21:48,600 --> 00:21:54,289
was a research project<font color="#E5E5E5"> in the area which</font>

454
00:21:51,269 --> 00:21:57,629
is how the<font color="#E5E5E5"> project kind of originated</font>

455
00:21:54,289 --> 00:21:59,190
<font color="#E5E5E5">but anyway on the mixed signal I really</font>

456
00:21:57,629 --> 00:22:00,490
have to point<font color="#E5E5E5"> out just having gates in</font>

457
00:21:59,190 --> 00:22:02,920
<font color="#E5E5E5">the library that's</font>

458
00:22:00,490 --> 00:22:06,760
real<font color="#CCCCCC"> mixed-signal</font><font color="#E5E5E5"> even though a lot</font><font color="#CCCCCC"> of</font>

459
00:22:02,920 --> 00:22:09,220
<font color="#E5E5E5">people claim it is</font><font color="#CCCCCC"> for Aaron</font><font color="#E5E5E5"> that</font>

460
00:22:06,760 --> 00:22:11,050
Fourier analysis is<font color="#E5E5E5"> another type of</font>

461
00:22:09,220 --> 00:22:15,010
analysis you'll find in a in a

462
00:22:11,050 --> 00:22:17,350
simulation and basically what<font color="#E5E5E5"> this</font><font color="#CCCCCC"> means</font>

463
00:22:15,010 --> 00:22:20,470
<font color="#E5E5E5">is that we're going to run</font><font color="#CCCCCC"> a transient</font>

464
00:22:17,350 --> 00:22:22,300
analysis to get the to get<font color="#E5E5E5"> the results</font>

465
00:22:20,470 --> 00:22:24,700
of<font color="#E5E5E5"> the time domain and then we'll do a</font>

466
00:22:22,300 --> 00:22:27,940
<font color="#CCCCCC">Fourier transform</font><font color="#E5E5E5"> on the results so</font><font color="#CCCCCC"> that</font>

467
00:22:24,700 --> 00:22:29,140
<font color="#CCCCCC">you see frequency data</font><font color="#E5E5E5"> and it's good for</font>

468
00:22:27,940 --> 00:22:34,840
<font color="#CCCCCC">measuring</font><font color="#E5E5E5"> Distortion</font>

469
00:22:29,140 --> 00:22:39,429
things like that<font color="#E5E5E5"> and so as and and and</font>

470
00:22:34,840 --> 00:22:42,100
well<font color="#E5E5E5"> Spice has it</font><font color="#CCCCCC"> it's pretty common to</font>

471
00:22:39,429 --> 00:22:47,620
have it but<font color="#E5E5E5"> the quality of it varies a</font>

472
00:22:42,100 --> 00:22:50,110
lot including<font color="#CCCCCC"> how useful it is and a lot</font>

473
00:22:47,620 --> 00:22:55,120
of what really<font color="#CCCCCC"> effect really affects the</font>

474
00:22:50,110 --> 00:22:57,340
<font color="#E5E5E5">quality of</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> how good your</font><font color="#CCCCCC"> timestep</font>

475
00:22:55,120 --> 00:22:59,649
control is in<font color="#E5E5E5"> the transient analysis</font>

476
00:22:57,340 --> 00:23:01,990
because if the<font color="#CCCCCC"> timestep control and the</font>

477
00:22:59,650 --> 00:23:03,850
<font color="#E5E5E5">transient analysis is poor you're going</font>

478
00:23:01,990 --> 00:23:06,130
to get noise<font color="#E5E5E5"> in the transient analysis</font>

479
00:23:03,850 --> 00:23:08,320
and the noise<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to show up big</font>

480
00:23:06,130 --> 00:23:13,090
<font color="#E5E5E5">time when you do the Fourier transform</font>

481
00:23:08,320 --> 00:23:16,720
of<font color="#E5E5E5"> the noisy signal and so this is an</font>

482
00:23:13,090 --> 00:23:19,300
area where<font color="#E5E5E5"> we're caps better time step</font>

483
00:23:16,720 --> 00:23:22,480
control actually results in<font color="#E5E5E5"> a better</font>

484
00:23:19,300 --> 00:23:25,450
Fourier analysis because actually well

485
00:23:22,480 --> 00:23:28,330
for one for one<font color="#CCCCCC"> that another</font><font color="#E5E5E5"> another</font>

486
00:23:25,450 --> 00:23:32,260
impact on the time step control is<font color="#E5E5E5"> not</font>

487
00:23:28,330 --> 00:23:35,949
just not<font color="#CCCCCC"> just</font><font color="#E5E5E5"> what the signal is doing</font>

488
00:23:32,260 --> 00:23:38,110
but what do<font color="#E5E5E5"> you want and so if we're</font>

489
00:23:35,950 --> 00:23:41,710
<font color="#CCCCCC">gonna do if we're gonna do a Fourier</font>

490
00:23:38,110 --> 00:23:43,419
analysis and let's say I<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> let's</font>

491
00:23:41,710 --> 00:23:45,580
say I want to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> measure</font><font color="#CCCCCC"> distortion</font>

492
00:23:43,420 --> 00:23:48,190
event this distortion of an oscillator

493
00:23:45,580 --> 00:23:50,020
there's a good one<font color="#E5E5E5"> and I have a</font>

494
00:23:48,190 --> 00:23:52,480
<font color="#CCCCCC">fundamental frequency of let's say it's</font>

495
00:23:50,020 --> 00:23:55,809
<font color="#E5E5E5">one kilohertz</font><font color="#CCCCCC"> and I want to measure up</font>

496
00:23:52,480 --> 00:23:59,940
to the I want<font color="#E5E5E5"> I want to measure the</font>

497
00:23:55,809 --> 00:24:03,190
harmonics up to 10 kilohertz<font color="#E5E5E5"> well</font><font color="#CCCCCC"> okay</font>

498
00:23:59,940 --> 00:24:04,929
Nyquist sampling<font color="#CCCCCC"> Theory I need to run</font>

499
00:24:03,190 --> 00:24:07,630
the<font color="#E5E5E5"> sampling</font><font color="#CCCCCC"> rate at</font><font color="#E5E5E5"> 20 kilohertz in</font>

500
00:24:04,929 --> 00:24:10,780
order to get bad accuracy<font color="#E5E5E5"> regardless of</font>

501
00:24:07,630 --> 00:24:13,630
anything<font color="#E5E5E5"> else so that means that I'm</font>

502
00:24:10,780 --> 00:24:19,389
going<font color="#E5E5E5"> to be running a time stepping</font>

503
00:24:13,630 --> 00:24:21,520
a time stepping<font color="#E5E5E5"> frequency</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> 20</font>

504
00:24:19,390 --> 00:24:23,800
kilohertz<font color="#E5E5E5"> one over</font><font color="#CCCCCC"> twenty</font><font color="#E5E5E5"> K as a time</font>

505
00:24:21,520 --> 00:24:25,300
step<font color="#E5E5E5"> minimum time step just to get the</font>

506
00:24:23,800 --> 00:24:27,879
accuracy<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I need for the Fourier</font>

507
00:24:25,300 --> 00:24:30,840
analysis because I might get a<font color="#E5E5E5"> pretty</font>

508
00:24:27,880 --> 00:24:33,430
<font color="#E5E5E5">looking picture if I don't do that but</font>

509
00:24:30,840 --> 00:24:36,010
but it but if I don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> that time</font>

510
00:24:33,430 --> 00:24:38,830
<font color="#E5E5E5">stepping in the transient</font><font color="#CCCCCC"> I'm just not</font>

511
00:24:36,010 --> 00:24:41,290
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get that accuracy</font><font color="#CCCCCC"> I can I can</font>

512
00:24:38,830 --> 00:24:47,040
print out the numbers but<font color="#CCCCCC"> you don't</font>

513
00:24:41,290 --> 00:24:49,420
<font color="#CCCCCC">necessarily believe them and so so</font>

514
00:24:47,040 --> 00:24:52,389
knowing what you're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> do with</font><font color="#CCCCCC"> a</font>

515
00:24:49,420 --> 00:24:54,340
transient analysis that is in this<font color="#E5E5E5"> case</font>

516
00:24:52,390 --> 00:24:55,870
the Fourier analysis<font color="#E5E5E5"> is something you</font>

517
00:24:54,340 --> 00:24:58,030
have<font color="#E5E5E5"> to feed back</font><font color="#CCCCCC"> to the transient</font>

518
00:24:55,870 --> 00:25:00,340
analysis<font color="#E5E5E5"> to and to influence the time</font>

519
00:24:58,030 --> 00:25:02,379
steps so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you get good</font><font color="#CCCCCC"> results</font>

520
00:25:00,340 --> 00:25:04,090
because<font color="#E5E5E5"> you're gonna do a</font><font color="#CCCCCC"> four if you're</font>

521
00:25:02,380 --> 00:25:05,770
<font color="#E5E5E5">going to do a Fourier analysis you want</font>

522
00:25:04,090 --> 00:25:07,480
<font color="#E5E5E5">it to actually</font><font color="#CCCCCC"> do the time</font><font color="#E5E5E5"> stepping at</font>

523
00:25:05,770 --> 00:25:10,629
the<font color="#E5E5E5"> points you want the points the</font>

524
00:25:07,480 --> 00:25:15,150
Fourier transform wants to have if you

525
00:25:10,630 --> 00:25:17,500
do it as a completely completely<font color="#E5E5E5"> wobbly</font>

526
00:25:15,150 --> 00:25:19,750
time step where<font color="#CCCCCC"> the time step can</font>

527
00:25:17,500 --> 00:25:25,270
essentially float and then you

528
00:25:19,750 --> 00:25:26,920
<font color="#E5E5E5">interpolate or resample to get the time</font>

529
00:25:25,270 --> 00:25:34,360
steps<font color="#CCCCCC"> your Fourier transform</font><font color="#E5E5E5"> wants</font>

530
00:25:26,920 --> 00:25:37,890
you're going to lose accuracy<font color="#CCCCCC"> periodic</font>

531
00:25:34,360 --> 00:25:40,780
steady state is<font color="#E5E5E5"> actually a variant on</font>

532
00:25:37,890 --> 00:25:43,920
<font color="#E5E5E5">well it could be a variant on harmonic</font>

533
00:25:40,780 --> 00:25:48,580
balance<font color="#E5E5E5"> or it could be a variant on the</font>

534
00:25:43,920 --> 00:25:50,740
Fourier analysis<font color="#CCCCCC"> the pop popular method</font>

535
00:25:48,580 --> 00:25:52,810
that you see a lot<font color="#E5E5E5"> is actually something</font>

536
00:25:50,740 --> 00:25:54,700
they call a shooting method<font color="#E5E5E5"> which is</font>

537
00:25:52,810 --> 00:25:58,000
based<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the transient analysis in the</font>

538
00:25:54,700 --> 00:26:00,280
<font color="#E5E5E5">Fourier analysis and as far as the</font>

539
00:25:58,000 --> 00:26:02,950
status who has it ngspice actually has a

540
00:26:00,280 --> 00:26:04,389
command<font color="#E5E5E5"> to do this the new cap doesn't</font>

541
00:26:02,950 --> 00:26:10,540
have a command<font color="#E5E5E5"> built-in but you can</font>

542
00:26:04,390 --> 00:26:15,190
write a<font color="#E5E5E5"> script to do it and the the new</font>

543
00:26:10,540 --> 00:26:17,139
cap in terms of accuracy<font color="#CCCCCC"> I don't I I</font>

544
00:26:15,190 --> 00:26:19,600
haven't<font color="#E5E5E5"> had good luck in getting act</font>

545
00:26:17,140 --> 00:26:22,720
getting good<font color="#E5E5E5"> accuracy out of ngspice</font>

546
00:26:19,600 --> 00:26:27,459
<font color="#CCCCCC">I've got it maybe let's say let's say 40</font>

547
00:26:22,720 --> 00:26:31,110
or 50<font color="#E5E5E5"> DB but I've gotten hundred</font><font color="#CCCCCC"> dB</font>

548
00:26:27,460 --> 00:26:34,480
<font color="#CCCCCC">ngah new</font><font color="#E5E5E5"> cat in terms of the noise floor</font>

549
00:26:31,110 --> 00:26:38,080
<font color="#CCCCCC">accuracy</font><font color="#E5E5E5"> and one thing about it is that</font>

550
00:26:34,480 --> 00:26:39,820
<font color="#CCCCCC">to give</font><font color="#E5E5E5"> you an idea</font><font color="#CCCCCC"> that one of the if</font>

551
00:26:38,080 --> 00:26:41,439
<font color="#CCCCCC">you look at the</font><font color="#E5E5E5"> transient analysis one</font>

552
00:26:39,820 --> 00:26:43,240
of the parameters that<font color="#E5E5E5"> you get to tweak</font>

553
00:26:41,440 --> 00:26:45,429
on a simulator is something called real

554
00:26:43,240 --> 00:26:46,750
tall<font color="#CCCCCC"> if you've</font><font color="#E5E5E5"> ever worked with spice</font>

555
00:26:45,429 --> 00:26:51,270
and had to tweak it<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> have</font>

556
00:26:46,750 --> 00:26:54,610
noticed the relative tolerance and and

557
00:26:51,270 --> 00:26:56,710
so typically out of the box you'll look

558
00:26:54,610 --> 00:26:59,529
<font color="#E5E5E5">at the look at the number for real tell</font>

559
00:26:56,710 --> 00:27:01,690
this relative tolerance<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is between</font>

560
00:26:59,529 --> 00:27:03,610
iterations<font color="#CCCCCC"> how close iterations have to</font>

561
00:27:01,690 --> 00:27:05,890
be for it to<font color="#E5E5E5"> be accepted</font><font color="#CCCCCC"> for convergence</font>

562
00:27:03,610 --> 00:27:08,229
<font color="#E5E5E5">and they'll give you</font><font color="#CCCCCC"> a number for</font><font color="#E5E5E5"> rel</font>

563
00:27:05,890 --> 00:27:11,169
towel<font color="#E5E5E5"> if let's say let's say the number</font>

564
00:27:08,230 --> 00:27:13,240
might be point zero<font color="#CCCCCC"> zero one one one</font>

565
00:27:11,169 --> 00:27:15,700
<font color="#E5E5E5">tenth of</font><font color="#CCCCCC"> one percent</font><font color="#E5E5E5"> you think tenth of</font>

566
00:27:13,240 --> 00:27:20,169
a percent that's good well<font color="#E5E5E5"> tenth of a</font>

567
00:27:15,700 --> 00:27:22,029
percent<font color="#CCCCCC"> that's 60 DB so</font><font color="#E5E5E5"> so if you're</font>

568
00:27:20,169 --> 00:27:24,789
<font color="#CCCCCC">going to use a</font><font color="#E5E5E5"> relative of point zero</font>

569
00:27:22,029 --> 00:27:26,559
zero one the<font color="#E5E5E5"> most accurate your for your</font>

570
00:27:24,789 --> 00:27:29,440
noise floor<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be in the</font>

571
00:27:26,559 --> 00:27:34,330
Fourier analysis is 60<font color="#CCCCCC"> DB just</font><font color="#E5E5E5"> based on</font>

572
00:27:29,440 --> 00:27:35,799
that<font color="#CCCCCC"> alone</font><font color="#E5E5E5"> if you want 100 DB you're</font>

573
00:27:34,330 --> 00:27:39,010
gonna have to use a real tile<font color="#E5E5E5"> tight</font>

574
00:27:35,799 --> 00:27:43,450
<font color="#E5E5E5">enough to give you</font><font color="#CCCCCC"> a hundred</font><font color="#E5E5E5"> DB noise</font>

575
00:27:39,010 --> 00:27:45,760
<font color="#E5E5E5">floor and now of course when I</font><font color="#CCCCCC"> say the</font>

576
00:27:43,450 --> 00:27:47,340
point<font color="#E5E5E5"> zero zero one to give you 60 DB</font>

577
00:27:45,760 --> 00:27:50,379
that's<font color="#CCCCCC"> the noise just from that one</font>

578
00:27:47,340 --> 00:27:54,970
source of noise<font color="#E5E5E5"> you're not gonna really</font>

579
00:27:50,380 --> 00:27:56,890
get that good so anyway the idea<font color="#CCCCCC"> of the</font>

580
00:27:54,970 --> 00:27:58,870
period of<font color="#E5E5E5"> the shooting method a periodic</font>

581
00:27:56,890 --> 00:28:00,130
steady state is that there's a number<font color="#E5E5E5"> of</font>

582
00:27:58,870 --> 00:28:01,809
steps<font color="#E5E5E5"> in this it's essentially a</font>

583
00:28:00,130 --> 00:28:04,270
transient analysis a number of steps

584
00:28:01,809 --> 00:28:06,870
<font color="#CCCCCC">basically you</font><font color="#E5E5E5"> start up a transient</font>

585
00:28:04,270 --> 00:28:09,340
analysis and you let it run for a<font color="#E5E5E5"> while</font>

586
00:28:06,870 --> 00:28:10,629
that is you<font color="#E5E5E5"> want to let</font><font color="#CCCCCC"> it run long</font>

587
00:28:09,340 --> 00:28:13,299
enough<font color="#CCCCCC"> for what the thing you're</font>

588
00:28:10,630 --> 00:28:15,460
simulating<font color="#E5E5E5"> to reach steady state because</font>

589
00:28:13,299 --> 00:28:17,408
if you're<font color="#E5E5E5"> trying to do something like an</font>

590
00:28:15,460 --> 00:28:18,940
oscillator or<font color="#E5E5E5"> something like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

591
00:28:17,409 --> 00:28:21,460
turn<font color="#CCCCCC"> on an oscillator and it's going</font><font color="#E5E5E5"> to</font>

592
00:28:18,940 --> 00:28:23,590
<font color="#E5E5E5">take a while for the oscillation to</font>

593
00:28:21,460 --> 00:28:25,330
start for it to build<font color="#E5E5E5"> up and for its own</font>

594
00:28:23,590 --> 00:28:27,549
limiting to come into account so the

595
00:28:25,330 --> 00:28:31,330
<font color="#CCCCCC">till you</font><font color="#E5E5E5"> actually get to steady state</font>

596
00:28:27,549 --> 00:28:35,500
<font color="#E5E5E5">and so you so you'd let your transient</font>

597
00:28:31,330 --> 00:28:36,970
analysis run as the as<font color="#E5E5E5"> whatever the</font>

598
00:28:35,500 --> 00:28:39,789
thing is<font color="#E5E5E5"> you're simulating</font><font color="#CCCCCC"> your reach</font>

599
00:28:36,970 --> 00:28:41,230
<font color="#CCCCCC">reaches steady</font><font color="#E5E5E5"> state and then once</font>

600
00:28:39,789 --> 00:28:42,910
you're there you give it a<font color="#E5E5E5"> shot</font>

601
00:28:41,230 --> 00:28:47,260
you say hey I think<font color="#E5E5E5"> the frequency of</font>

602
00:28:42,910 --> 00:28:49,840
this oscillator is<font color="#CCCCCC"> one kilohertz</font><font color="#E5E5E5"> it it's</font>

603
00:28:47,260 --> 00:28:51,520
<font color="#E5E5E5">it's seven kilohertz but I'm not going</font>

604
00:28:49,840 --> 00:28:52,629
to tell anybody but I think<font color="#CCCCCC"> it's one</font>

605
00:28:51,520 --> 00:28:55,690
kilohertz<font color="#E5E5E5"> so I'll try it</font>

606
00:28:52,630 --> 00:28:57,309
so I'll start out and<font color="#CCCCCC"> run it for a while</font>

607
00:28:55,690 --> 00:28:59,049
I'll run it with the<font color="#E5E5E5"> parameters that I</font>

608
00:28:57,309 --> 00:29:01,030
think are<font color="#E5E5E5"> right for one kilohertz</font><font color="#CCCCCC"> and</font>

609
00:28:59,049 --> 00:29:03,280
<font color="#CCCCCC">then it says no it's</font><font color="#E5E5E5"> not one kilohertz</font>

610
00:29:01,030 --> 00:29:05,260
<font color="#E5E5E5">at six and a half killers and so you're</font>

611
00:29:03,280 --> 00:29:06,940
<font color="#E5E5E5">going to go</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> through a few cycles of</font>

612
00:29:05,260 --> 00:29:10,750
that<font color="#E5E5E5"> so there's an extra iteration</font>

613
00:29:06,940 --> 00:29:12,580
<font color="#E5E5E5">process where you do do a length of</font>

614
00:29:10,750 --> 00:29:15,970
transient with the time<font color="#E5E5E5"> stepping to get</font>

615
00:29:12,580 --> 00:29:18,428
something and and and eventually<font color="#CCCCCC"> you'll</font>

616
00:29:15,970 --> 00:29:20,919
<font color="#E5E5E5">homed in on the length of time to run</font>

617
00:29:18,429 --> 00:29:23,410
the time stepping<font color="#E5E5E5"> to run so</font><font color="#CCCCCC"> that you're</font>

618
00:29:20,919 --> 00:29:27,160
<font color="#E5E5E5">going to get so that</font><font color="#CCCCCC"> you'll</font><font color="#E5E5E5"> get</font>

619
00:29:23,410 --> 00:29:28,299
something at the at the frequency that

620
00:29:27,160 --> 00:29:30,400
<font color="#E5E5E5">you really care so you're going to have</font>

621
00:29:28,299 --> 00:29:32,918
to you try it a<font color="#CCCCCC"> few times that's what</font>

622
00:29:30,400 --> 00:29:34,809
they call shooting and then and then

623
00:29:32,919 --> 00:29:37,600
once you've once you've reached a point

624
00:29:34,809 --> 00:29:40,450
where<font color="#E5E5E5"> it makes sense then you tighten up</font>

625
00:29:37,600 --> 00:29:44,290
the tolerance<font color="#E5E5E5"> and and actually make a</font>

626
00:29:40,450 --> 00:29:46,390
run at that<font color="#CCCCCC"> at those settings to get you</font>

627
00:29:44,290 --> 00:29:48,760
your your your parameters for the

628
00:29:46,390 --> 00:29:52,830
<font color="#E5E5E5">Fourier transform that's pretty much</font>

629
00:29:48,760 --> 00:29:52,830
what a periodic<font color="#E5E5E5"> state entails</font>

630
00:29:53,549 --> 00:29:58,240
complex models so far everything I've

631
00:29:56,440 --> 00:30:00,640
talked about<font color="#E5E5E5"> has been something I can do</font>

632
00:29:58,240 --> 00:30:04,419
with<font color="#E5E5E5"> resistors and capacitors the</font>

633
00:30:00,640 --> 00:30:09,640
complex models are really<font color="#E5E5E5"> resistors and</font>

634
00:30:04,419 --> 00:30:13,750
capacitors<font color="#E5E5E5"> you</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> that basically</font>

635
00:30:09,640 --> 00:30:16,540
<font color="#E5E5E5">basically they you take your device and</font>

636
00:30:13,750 --> 00:30:18,370
you make a sub circuit of it resistors

637
00:30:16,540 --> 00:30:20,230
and capacitors some diodes<font color="#CCCCCC"> you know</font>

638
00:30:18,370 --> 00:30:24,010
<font color="#E5E5E5">nonlinear stuff well diodes really just</font>

639
00:30:20,230 --> 00:30:26,200
a resistor and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> make you make up your</font>

640
00:30:24,010 --> 00:30:28,960
equivalent<font color="#E5E5E5"> circuit and</font><font color="#CCCCCC"> you figure out</font>

641
00:30:26,200 --> 00:30:33,270
the formulas<font color="#E5E5E5"> the nonlinear formulas to</font>

642
00:30:28,960 --> 00:30:35,919
plug in and so<font color="#E5E5E5"> now you have a model and</font>

643
00:30:33,270 --> 00:30:39,040
<font color="#CCCCCC">you years ago</font><font color="#E5E5E5"> people would code these</font>

644
00:30:35,919 --> 00:30:43,150
models in Fortran or C or<font color="#E5E5E5"> whatever but</font>

645
00:30:39,040 --> 00:30:45,520
lately<font color="#E5E5E5"> lately what's what most people</font>

646
00:30:43,150 --> 00:30:48,010
try to do is<font color="#E5E5E5"> avoid that and and code the</font>

647
00:30:45,520 --> 00:30:50,710
<font color="#E5E5E5">models and the later the</font><font color="#CCCCCC"> best thing to</font>

648
00:30:48,010 --> 00:30:52,960
use<font color="#E5E5E5"> now really is</font><font color="#CCCCCC"> verell log</font><font color="#E5E5E5"> a for</font>

649
00:30:50,710 --> 00:30:55,359
writing your model code and

650
00:30:52,960 --> 00:31:03,729
and so for that we'll<font color="#CCCCCC"> use a model</font>

651
00:30:55,359 --> 00:31:06,279
compiler and a<font color="#E5E5E5"> a DMS is a is a free open</font>

652
00:31:03,729 --> 00:31:09,700
<font color="#CCCCCC">source model compiler that that will</font>

653
00:31:06,279 --> 00:31:10,929
generate models<font color="#E5E5E5"> for just about all</font><font color="#CCCCCC"> of</font>

654
00:31:09,700 --> 00:31:14,379
the simulators is something that's

655
00:31:10,929 --> 00:31:18,099
<font color="#E5E5E5">common with</font><font color="#CCCCCC"> them all the</font><font color="#E5E5E5"> new cap model</font>

656
00:31:14,379 --> 00:31:20,769
<font color="#E5E5E5">Jen actually</font><font color="#CCCCCC"> is the the old new cap</font>

657
00:31:18,099 --> 00:31:22,570
model compiler which I'm trying<font color="#E5E5E5"> to</font>

658
00:31:20,769 --> 00:31:25,690
<font color="#CCCCCC">update to make it actually</font><font color="#E5E5E5"> work with</font>

659
00:31:22,570 --> 00:31:27,820
<font color="#E5E5E5">Vera log</font><font color="#CCCCCC"> AMF see what what happened</font>

660
00:31:25,690 --> 00:31:31,179
there<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> the new cap model compiler</font>

661
00:31:27,820 --> 00:31:33,428
<font color="#CCCCCC">actually predated a DMS but when Lauren</font>

662
00:31:31,179 --> 00:31:35,289
<font color="#CCCCCC">was</font><font color="#E5E5E5"> working on the a DMS I figured that</font>

663
00:31:33,429 --> 00:31:36,159
<font color="#E5E5E5">hey I got other things to do if he's</font>

664
00:31:35,289 --> 00:31:38,229
working<font color="#CCCCCC"> on</font><font color="#E5E5E5"> that</font>

665
00:31:36,159 --> 00:31:40,509
go ahead go for it<font color="#E5E5E5"> I'll move on to</font>

666
00:31:38,229 --> 00:31:43,299
<font color="#CCCCCC">something else</font><font color="#E5E5E5"> and so I put mine on the</font>

667
00:31:40,509 --> 00:31:45,700
side and then realize after a while

668
00:31:43,299 --> 00:31:48,039
Laurent says I'm through<font color="#E5E5E5"> with this I'm I</font>

669
00:31:45,700 --> 00:31:49,419
want<font color="#E5E5E5"> to move on and besides that it</font>

670
00:31:48,039 --> 00:31:52,629
didn't do what I wanted<font color="#CCCCCC"> to anyway I</font>

671
00:31:49,419 --> 00:31:54,969
guess I have to<font color="#CCCCCC"> pick it up</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> so</font>

672
00:31:52,629 --> 00:32:03,189
that's<font color="#E5E5E5"> now that is once</font><font color="#CCCCCC"> again become a</font>

673
00:31:54,969 --> 00:32:06,940
work in progress<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> what what is there</font>

674
00:32:03,190 --> 00:32:12,009
about<font color="#E5E5E5"> the new cap the basis of</font><font color="#CCCCCC"> canoe cap</font>

675
00:32:06,940 --> 00:32:14,739
is<font color="#E5E5E5"> that it was essentially a fast spice</font>

676
00:32:12,009 --> 00:32:18,759
<font color="#CCCCCC">mixed mode simulate simulator it kind</font><font color="#E5E5E5"> of</font>

677
00:32:14,739 --> 00:32:21,009
came out<font color="#CCCCCC"> of my PhD research but but the</font>

678
00:32:18,759 --> 00:32:24,989
basis is<font color="#CCCCCC"> spice like it's it's it's based</font>

679
00:32:21,009 --> 00:32:27,989
on the same same theory that<font color="#CCCCCC"> runs spice</font>

680
00:32:24,989 --> 00:32:30,580
<font color="#E5E5E5">with enhancements to do mixed signal</font>

681
00:32:27,989 --> 00:32:33,089
including smart nodes so<font color="#CCCCCC"> that it can</font>

682
00:32:30,580 --> 00:32:37,570
actually<font color="#E5E5E5"> handle the conversion between</font>

683
00:32:33,089 --> 00:32:40,869
<font color="#E5E5E5">digital and analog effectively and then</font>

684
00:32:37,570 --> 00:32:43,799
also there<font color="#E5E5E5"> is there are changes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

685
00:32:40,869 --> 00:32:46,089
transient analysis algorithms

686
00:32:43,799 --> 00:32:50,259
essentially the original fast spice

687
00:32:46,089 --> 00:32:53,529
including including<font color="#E5E5E5"> the use of queues</font>

688
00:32:50,259 --> 00:32:55,979
and a fast incremental solver another

689
00:32:53,529 --> 00:33:01,809
thing<font color="#CCCCCC"> about a new cap that is unique is</font>

690
00:32:55,979 --> 00:33:03,669
the use<font color="#CCCCCC"> of plugins it was kind</font><font color="#E5E5E5"> of a shot</font>

691
00:33:01,809 --> 00:33:05,710
in the dark<font color="#CCCCCC"> at the time we went when I</font>

692
00:33:03,669 --> 00:33:06,400
first started doing it but<font color="#E5E5E5"> but having</font>

693
00:33:05,710 --> 00:33:09,010
having<font color="#E5E5E5"> gone</font>

694
00:33:06,400 --> 00:33:10,660
it's something that<font color="#E5E5E5"> every every free</font>

695
00:33:09,010 --> 00:33:12,580
software project<font color="#E5E5E5"> should do this is</font>

696
00:33:10,660 --> 00:33:18,520
convert as much as possible<font color="#E5E5E5"> to plugins</font>

697
00:33:12,580 --> 00:33:20,740
and the because it's a way of<font color="#E5E5E5"> somebody</font>

698
00:33:18,520 --> 00:33:23,410
says hey I have<font color="#E5E5E5"> this improvement</font><font color="#CCCCCC"> I have</font>

699
00:33:20,740 --> 00:33:25,360
the this this new device model<font color="#E5E5E5"> that you</font>

700
00:33:23,410 --> 00:33:28,120
<font color="#E5E5E5">should include in your simulator</font><font color="#CCCCCC"> I look</font>

701
00:33:25,360 --> 00:33:29,709
at the code it sucks<font color="#E5E5E5"> but still but still</font>

702
00:33:28,120 --> 00:33:31,120
there's some good<font color="#CCCCCC"> stuff in there</font><font color="#E5E5E5"> and I</font>

703
00:33:29,710 --> 00:33:33,880
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to make it available</font><font color="#E5E5E5"> so</font>

704
00:33:31,120 --> 00:33:36,760
here's a<font color="#E5E5E5"> trade-off</font><font color="#CCCCCC"> hmm</font><font color="#E5E5E5"> do I do I say no</font>

705
00:33:33,880 --> 00:33:38,230
<font color="#E5E5E5">I make it not available when it really</font>

706
00:33:36,760 --> 00:33:40,270
is worth<font color="#CCCCCC"> making available</font><font color="#E5E5E5"> or do I</font>

707
00:33:38,230 --> 00:33:42,370
include this<font color="#E5E5E5"> code</font><font color="#CCCCCC"> that to be honest</font>

708
00:33:40,270 --> 00:33:44,650
<font color="#E5E5E5">isn't very good</font><font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be a</font>

709
00:33:42,370 --> 00:33:46,209
maintenance headache<font color="#E5E5E5"> well the idea was</font>

710
00:33:44,650 --> 00:33:51,280
<font color="#CCCCCC">plug ins is that I don't have</font><font color="#E5E5E5"> to make</font>

711
00:33:46,210 --> 00:33:54,700
<font color="#E5E5E5">that choice</font><font color="#CCCCCC"> and so and and so the new</font>

712
00:33:51,280 --> 00:33:56,590
cap<font color="#E5E5E5"> actually lives the actual repository</font>

713
00:33:54,700 --> 00:33:59,470
the development of<font color="#CCCCCC"> a new cap is on</font>

714
00:33:56,590 --> 00:34:01,959
<font color="#CCCCCC">savanna it's on the canoe site</font><font color="#E5E5E5"> but if</font>

715
00:33:59,470 --> 00:34:03,550
you go to github<font color="#E5E5E5"> you can just get your</font>

716
00:34:01,960 --> 00:34:06,160
<font color="#E5E5E5">account on github you</font><font color="#CCCCCC"> can develop</font><font color="#E5E5E5"> a</font>

717
00:34:03,550 --> 00:34:09,040
<font color="#CCCCCC">plugin for it anybody can</font><font color="#E5E5E5"> do this and</font>

718
00:34:06,160 --> 00:34:10,720
and the plugins are just like<font color="#E5E5E5"> native in</font>

719
00:34:09,040 --> 00:34:13,810
terms of how they work in fact all of

720
00:34:10,719 --> 00:34:17,500
<font color="#E5E5E5">the all of the device models and</font>

721
00:34:13,810 --> 00:34:19,960
simulation algorithms and language

722
00:34:17,500 --> 00:34:22,659
formats and a lot of<font color="#E5E5E5"> stuff in canoe cap</font>

723
00:34:19,960 --> 00:34:24,580
is all<font color="#E5E5E5"> plugins</font><font color="#CCCCCC"> even what even what</font>

724
00:34:22,659 --> 00:34:26,140
appears to<font color="#E5E5E5"> be native is all plugins it's</font>

725
00:34:24,580 --> 00:34:28,120
one of the rules is<font color="#CCCCCC"> that anything that</font>

726
00:34:26,139 --> 00:34:31,870
<font color="#E5E5E5">can be a plug-in must be a</font><font color="#CCCCCC"> plugin</font><font color="#E5E5E5"> and</font>

727
00:34:28,120 --> 00:34:33,190
and we and the project practice is what

728
00:34:31,870 --> 00:34:38,440
it preaches in the sense that<font color="#E5E5E5"> all of</font>

729
00:34:33,190 --> 00:34:40,780
<font color="#E5E5E5">these devices are all plugins and</font>

730
00:34:38,440 --> 00:34:44,800
another thing about the plugins that's

731
00:34:40,780 --> 00:34:49,409
neat is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can have wrappers to be</font>

732
00:34:44,800 --> 00:34:52,000
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use foreign code as plugins and</font>

733
00:34:49,409 --> 00:34:54,610
one of the neat wrappers that<font color="#CCCCCC"> canoe cap</font>

734
00:34:52,000 --> 00:34:57,850
has is one that lets it use spice models

735
00:34:54,610 --> 00:35:00,220
as plugins<font color="#E5E5E5"> and there's by spice models</font>

736
00:34:57,850 --> 00:35:02,560
<font color="#E5E5E5">it can use the the old Berkeley spice</font>

737
00:35:00,220 --> 00:35:05,410
models it can use ng spice models as

738
00:35:02,560 --> 00:35:11,230
plugins<font color="#E5E5E5"> don't have to modify</font><font color="#CCCCCC"> them at all</font>

739
00:35:05,410 --> 00:35:13,470
just kind<font color="#E5E5E5"> of wrap</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> it works yeah</font>

740
00:35:11,230 --> 00:35:16,690
<font color="#CCCCCC">that's what I</font><font color="#E5E5E5"> was just talking about</font>

741
00:35:13,470 --> 00:35:19,689
<font color="#CCCCCC">plug-in is</font><font color="#E5E5E5"> basically shared object model</font>

742
00:35:16,690 --> 00:35:20,380
with a with a dispatcher which is a

743
00:35:19,690 --> 00:35:26,740
<font color="#E5E5E5">lookup</font>

744
00:35:20,380 --> 00:35:28,270
method and<font color="#CCCCCC"> and so so you can</font><font color="#E5E5E5"> have as</font>

745
00:35:26,740 --> 00:35:30,549
<font color="#E5E5E5">many of these plugins as you want</font>

746
00:35:28,270 --> 00:35:31,780
there's no no code<font color="#CCCCCC"> in the core</font><font color="#E5E5E5"> that says</font>

747
00:35:30,550 --> 00:35:35,560
you're<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> have a plug-in of a</font>

748
00:35:31,780 --> 00:35:38,620
particular type<font color="#CCCCCC"> it just so you</font><font color="#E5E5E5"> can load</font>

749
00:35:35,560 --> 00:35:40,720
<font color="#E5E5E5">it up</font><font color="#CCCCCC"> with models so so device models</font>

750
00:35:38,620 --> 00:35:42,490
are all<font color="#CCCCCC"> plugins the simulation methods</font>

751
00:35:40,720 --> 00:35:45,879
are all<font color="#E5E5E5"> plugins all of the commands are</font>

752
00:35:42,490 --> 00:35:48,580
<font color="#CCCCCC">plugins the the file formats that it</font>

753
00:35:45,880 --> 00:35:50,650
reads are all<font color="#CCCCCC"> plugins which means that</font>

754
00:35:48,580 --> 00:35:52,930
you<font color="#E5E5E5"> have it has a choice of file formats</font>

755
00:35:50,650 --> 00:35:57,850
it'll read<font color="#CCCCCC"> spice format</font><font color="#E5E5E5"> Specter format</font>

756
00:35:52,930 --> 00:36:01,270
and<font color="#E5E5E5"> Vera log out</font><font color="#CCCCCC"> of the box and</font><font color="#E5E5E5"> Felix is</font>

757
00:35:57,850 --> 00:36:05,190
working<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> quacks format and we have</font>

758
00:36:01,270 --> 00:36:11,890
a<font color="#E5E5E5"> one another</font><font color="#CCCCCC"> plugin that</font><font color="#E5E5E5"> reads a GCM</font>

759
00:36:05,190 --> 00:36:13,600
schematic file directly and and these

760
00:36:11,890 --> 00:36:16,900
can all be loaded and unloaded by<font color="#E5E5E5"> the</font>

761
00:36:13,600 --> 00:36:19,029
user interactively and if you<font color="#E5E5E5"> have it</font>

762
00:36:16,900 --> 00:36:22,690
installed<font color="#CCCCCC"> in like an academic lab</font>

763
00:36:19,030 --> 00:36:24,670
condition<font color="#E5E5E5"> you can let's say the system</font>

764
00:36:22,690 --> 00:36:26,890
administrator installs the basic<font color="#E5E5E5"> canoe</font>

765
00:36:24,670 --> 00:36:29,050
cap but any<font color="#E5E5E5"> anybody who has who's using</font>

766
00:36:26,890 --> 00:36:34,750
it<font color="#E5E5E5"> can make whatever plugins essentially</font>

767
00:36:29,050 --> 00:36:36,910
make your own custom version but they

768
00:36:34,750 --> 00:36:39,730
use a standard DL open interface and

769
00:36:36,910 --> 00:36:45,940
it's basically<font color="#CCCCCC"> C++ derived classes is</font>

770
00:36:39,730 --> 00:36:48,580
the<font color="#E5E5E5"> essentially how it works and I'm not</font>

771
00:36:45,940 --> 00:36:51,970
<font color="#E5E5E5">gonna lie I could go into some detail</font>

772
00:36:48,580 --> 00:36:54,220
here but<font color="#E5E5E5"> I think I'm gonna save this one</font>

773
00:36:51,970 --> 00:36:55,660
<font color="#E5E5E5">another thing that makes it work</font><font color="#CCCCCC"> is</font>

774
00:36:54,220 --> 00:36:58,899
something<font color="#E5E5E5"> that I call</font><font color="#CCCCCC"> the dispatcher</font>

775
00:36:55,660 --> 00:37:02,350
<font color="#CCCCCC">that is when you load a plug-in just</font>

776
00:36:58,900 --> 00:37:04,030
loading it<font color="#E5E5E5"> registers it with the</font>

777
00:37:02,350 --> 00:37:05,830
dispatcher so that it knows that it's

778
00:37:04,030 --> 00:37:08,290
there like I might load a<font color="#E5E5E5"> plug-in the</font>

779
00:37:05,830 --> 00:37:09,880
plug-in might be a resistor model and it

780
00:37:08,290 --> 00:37:11,860
registers<font color="#E5E5E5"> it saying okay this is a</font>

781
00:37:09,880 --> 00:37:13,840
resistor and I make another one<font color="#CCCCCC"> that</font>

782
00:37:11,860 --> 00:37:18,220
says<font color="#E5E5E5"> okay this is a diode model and it</font>

783
00:37:13,840 --> 00:37:21,850
registers<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> that's done when you</font>

784
00:37:18,220 --> 00:37:28,540
load it<font color="#E5E5E5"> and so that's basically</font><font color="#CCCCCC"> a C++</font>

785
00:37:21,850 --> 00:37:31,600
map<font color="#E5E5E5"> you know where associative array</font>

786
00:37:28,540 --> 00:37:33,410
type of thing look up the name<font color="#CCCCCC"> and it</font>

787
00:37:31,600 --> 00:37:36,620
gives you a pointer to<font color="#E5E5E5"> it</font>

788
00:37:33,410 --> 00:37:39,529
and and so in terms of devices<font color="#E5E5E5"> you you</font>

789
00:37:36,620 --> 00:37:41,870
have a essentially a single<font color="#E5E5E5"> instance as</font>

790
00:37:39,530 --> 00:37:44,180
a<font color="#CCCCCC"> plugin and so you want to replicate</font>

791
00:37:41,870 --> 00:37:47,420
devices to build up a netlist it<font color="#E5E5E5"> it</font>

792
00:37:44,180 --> 00:37:50,509
clones it makes<font color="#CCCCCC"> copies of it some more</font>

793
00:37:47,420 --> 00:37:52,570
code<font color="#CCCCCC"> the</font><font color="#E5E5E5"> plug-in</font><font color="#CCCCCC"> types some</font><font color="#E5E5E5"> of the</font>

794
00:37:50,510 --> 00:37:54,770
things<font color="#E5E5E5"> that can be made into</font><font color="#CCCCCC"> plugins</font>

795
00:37:52,570 --> 00:37:59,960
devices commands<font color="#E5E5E5"> I was just talking</font>

796
00:37:54,770 --> 00:38:02,270
<font color="#E5E5E5">about parameter functions for the like</font>

797
00:37:59,960 --> 00:38:05,810
you<font color="#E5E5E5"> can have dot in spice dot per am</font>

798
00:38:02,270 --> 00:38:07,790
with some expression those<font color="#E5E5E5"> functions can</font>

799
00:38:05,810 --> 00:38:11,270
all be plugins measure<font color="#E5E5E5"> measurement</font>

800
00:38:07,790 --> 00:38:13,730
functions and behavioral modeling

801
00:38:11,270 --> 00:38:15,410
languages and all and outputs it says

802
00:38:13,730 --> 00:38:17,500
here but we<font color="#E5E5E5"> don't really have outputs</font>

803
00:38:15,410 --> 00:38:21,529
completely working<font color="#CCCCCC"> because it's hard</font>

804
00:38:17,500 --> 00:38:24,230
almost<font color="#E5E5E5"> there and then I already</font>

805
00:38:21,530 --> 00:38:26,060
mentioned about wrappers<font color="#CCCCCC"> like the like</font>

806
00:38:24,230 --> 00:38:30,920
<font color="#E5E5E5">the spice wrapper that wraps a spice</font>

807
00:38:26,060 --> 00:38:33,470
model so that<font color="#E5E5E5"> kanou cap can use the</font><font color="#CCCCCC"> C</font>

808
00:38:30,920 --> 00:38:40,940
<font color="#E5E5E5">models written for spice as if they were</font>

809
00:38:33,470 --> 00:38:43,910
native more wrapper code<font color="#CCCCCC"> some of the</font>

810
00:38:40,940 --> 00:38:46,580
work<font color="#E5E5E5"> in progress</font><font color="#CCCCCC"> in canoe cap</font><font color="#E5E5E5"> one one of</font>

811
00:38:43,910 --> 00:38:49,430
the hot items going<font color="#E5E5E5"> on right</font><font color="#CCCCCC"> now is we</font>

812
00:38:46,580 --> 00:38:51,380
call this the<font color="#E5E5E5"> guck</font><font color="#CCCCCC"> seder project</font><font color="#E5E5E5"> the</font>

813
00:38:49,430 --> 00:38:54,049
<font color="#E5E5E5">Canuck seder project is essentially a</font>

814
00:38:51,380 --> 00:39:00,140
merger of<font color="#CCCCCC"> the canoe cap and quick</font><font color="#E5E5E5"> seder</font>

815
00:38:54,050 --> 00:39:03,050
<font color="#E5E5E5">the qqx simulator essentially hoping to</font>

816
00:39:00,140 --> 00:39:05,330
bring<font color="#E5E5E5"> because when I look at the two</font>

817
00:39:03,050 --> 00:39:07,970
<font color="#CCCCCC">side by side</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> so there's good stuff</font>

818
00:39:05,330 --> 00:39:09,380
either<font color="#E5E5E5"> either way</font><font color="#CCCCCC"> and both of them can</font>

819
00:39:07,970 --> 00:39:10,790
use what the other one has so we're

820
00:39:09,380 --> 00:39:14,210
trying<font color="#E5E5E5"> to bring them together so</font><font color="#CCCCCC"> that</font>

821
00:39:10,790 --> 00:39:16,490
<font color="#E5E5E5">canoe canoe cap would get the</font><font color="#CCCCCC"> DRF</font>

822
00:39:14,210 --> 00:39:18,680
oriented analysis and<font color="#E5E5E5"> models</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> quicks</font>

823
00:39:16,490 --> 00:39:21,140
has and quarks could get the high

824
00:39:18,680 --> 00:39:23,029
performance<font color="#E5E5E5"> of canoe cap and also the</font>

825
00:39:21,140 --> 00:39:27,410
plugins and<font color="#E5E5E5"> things like that that that's</font>

826
00:39:23,030 --> 00:39:30,350
one hot topic<font color="#E5E5E5"> these going on another one</font>

827
00:39:27,410 --> 00:39:35,560
is updating the<font color="#E5E5E5"> canoe cap model compiler</font>

828
00:39:30,350 --> 00:39:38,060
to take take the<font color="#E5E5E5"> vera log input language</font>

829
00:39:35,560 --> 00:39:43,310
so that<font color="#CCCCCC"> it can be a replacement for a</font>

830
00:39:38,060 --> 00:39:45,080
DMS<font color="#E5E5E5"> and one of the reasons for that is</font>

831
00:39:43,310 --> 00:39:46,340
performance because we're not<font color="#E5E5E5"> getting</font>

832
00:39:45,080 --> 00:39:51,380
the performance<font color="#CCCCCC"> that</font>

833
00:39:46,340 --> 00:39:53,360
like out of a DMS<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then output</font>

834
00:39:51,380 --> 00:39:55,250
plugins<font color="#E5E5E5"> and another thing about the</font>

835
00:39:53,360 --> 00:39:57,980
plugins is I'm<font color="#E5E5E5"> calling them</font><font color="#CCCCCC"> just-in-time</font>

836
00:39:55,250 --> 00:40:00,770
plugins<font color="#CCCCCC"> just-in-time means</font><font color="#E5E5E5"> that you have</font>

837
00:39:57,980 --> 00:40:02,960
something<font color="#E5E5E5"> in your command file that</font>

838
00:40:00,770 --> 00:40:05,470
might generate<font color="#CCCCCC"> something and say hey</font>

839
00:40:02,960 --> 00:40:11,480
<font color="#E5E5E5">compile this and</font><font color="#CCCCCC"> use it as a</font><font color="#E5E5E5"> plug-in</font><font color="#CCCCCC"> and</font>

840
00:40:05,470 --> 00:40:16,250
<font color="#E5E5E5">so so something like let's say the the</font>

841
00:40:11,480 --> 00:40:18,230
spice be behavioral source<font color="#E5E5E5"> in spice</font><font color="#CCCCCC"> its</font>

842
00:40:16,250 --> 00:40:19,700
interpreted in<font color="#E5E5E5"> canoe</font><font color="#CCCCCC"> captain would feed</font>

843
00:40:18,230 --> 00:40:22,430
this off to a compiler which would

844
00:40:19,700 --> 00:40:26,480
compile it and give you C code C++ code

845
00:40:22,430 --> 00:40:30,140
back which would run<font color="#E5E5E5"> a lot faster but</font>

846
00:40:26,480 --> 00:40:53,510
anyway that's<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> much what I have</font><font color="#E5E5E5"> so</font>

847
00:40:30,140 --> 00:40:55,100
questions he says<font color="#E5E5E5"> we do frequency domain</font>

848
00:40:53,510 --> 00:40:57,980
analysis and wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know if we do</font>

849
00:40:55,100 --> 00:41:02,180
wavelet analysis<font color="#E5E5E5"> at this point I</font><font color="#CCCCCC"> think</font>

850
00:40:57,980 --> 00:41:04,100
<font color="#E5E5E5">the answer</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> no I don't I'm not</font><font color="#CCCCCC"> really</font>

851
00:41:02,180 --> 00:41:07,720
sure but<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> really sure</font>

852
00:41:04,100 --> 00:41:07,720
what you're<font color="#CCCCCC"> asking about</font>

853
00:41:15,290 --> 00:41:19,130
I don't do anything conscious

854
00:41:16,970 --> 00:41:20,839
consciously<font color="#E5E5E5"> about it but I'm not I'm not</font>

855
00:41:19,130 --> 00:41:22,990
<font color="#CCCCCC">sure what it</font><font color="#E5E5E5"> would take</font><font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> do</font>

856
00:41:20,840 --> 00:41:22,990
it

857
00:41:23,200 --> 00:41:27,730
any other questions<font color="#E5E5E5"> yeah</font>

858
00:41:37,410 --> 00:41:43,270
yes what would the the operating flow

859
00:41:40,690 --> 00:41:46,630
<font color="#CCCCCC">look like with canoe cap in terms of</font>

860
00:41:43,270 --> 00:41:48,880
front-ends and backends<font color="#E5E5E5"> that's actually</font>

861
00:41:46,630 --> 00:41:51,100
one of the<font color="#E5E5E5"> reasons for wanting to hook</font>

862
00:41:48,880 --> 00:41:52,720
up<font color="#CCCCCC"> with corks because quarks has that</font>

863
00:41:51,100 --> 00:41:54,279
nice user<font color="#CCCCCC"> interface that</font><font color="#E5E5E5"> makes it</font>

864
00:41:52,720 --> 00:41:58,209
interactive<font color="#CCCCCC"> we don't have I don't have</font>

865
00:41:54,280 --> 00:42:00,610
anything<font color="#E5E5E5"> like that usually usually what</font>

866
00:41:58,210 --> 00:42:03,880
hat what what I would do is maybe use

867
00:42:00,610 --> 00:42:08,200
<font color="#E5E5E5">some some schematic program that that</font>

868
00:42:03,880 --> 00:42:10,570
<font color="#CCCCCC">would export either export a spice</font>

869
00:42:08,200 --> 00:42:13,359
netlist or a<font color="#E5E5E5"> vera</font><font color="#CCCCCC"> log netlist i'm trying</font>

870
00:42:10,570 --> 00:42:15,160
to convince<font color="#CCCCCC"> the schematic programs that</font>

871
00:42:13,360 --> 00:42:20,290
<font color="#E5E5E5">they really need</font><font color="#CCCCCC"> to be able to export a</font>

872
00:42:15,160 --> 00:42:22,779
<font color="#E5E5E5">vera log netlist not just spice but so i</font>

873
00:42:20,290 --> 00:42:25,150
might use<font color="#E5E5E5"> something like that</font><font color="#CCCCCC"> as a as a</font>

874
00:42:22,780 --> 00:42:28,330
to generate in that list and then mess

875
00:42:25,150 --> 00:42:33,310
with it by hand<font color="#E5E5E5"> and or and as far</font><font color="#CCCCCC"> as the</font>

876
00:42:28,330 --> 00:42:35,500
output<font color="#CCCCCC"> I've used</font><font color="#E5E5E5"> that that's one of the</font>

877
00:42:33,310 --> 00:42:39,160
things<font color="#CCCCCC"> that's not real good real nice</font>

878
00:42:35,500 --> 00:42:42,430
<font color="#E5E5E5">and is</font><font color="#CCCCCC"> the interface</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> some of the</font>

879
00:42:39,160 --> 00:42:45,520
output viewers but it generates<font color="#CCCCCC"> it</font>

880
00:42:42,430 --> 00:42:47,919
generates reasonably readable files<font color="#E5E5E5"> that</font>

881
00:42:45,520 --> 00:42:49,960
that you<font color="#E5E5E5"> take</font><font color="#CCCCCC"> that and</font><font color="#E5E5E5"> you pipe it</font><font color="#CCCCCC"> to</font>

882
00:42:47,920 --> 00:42:53,470
some of<font color="#CCCCCC"> the tools</font><font color="#E5E5E5"> there's one called</font>

883
00:42:49,960 --> 00:42:56,320
<font color="#CCCCCC">gah I think it is</font><font color="#E5E5E5"> that I've used that</font>

884
00:42:53,470 --> 00:42:58,959
that's a waveform viewer<font color="#CCCCCC"> and I've used</font>

885
00:42:56,320 --> 00:43:02,890
<font color="#E5E5E5">that</font><font color="#CCCCCC"> one quite a bit to view the output</font>

886
00:42:58,960 --> 00:43:04,660
<font color="#CCCCCC">of canoe</font><font color="#E5E5E5"> cap</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> there there used to</font>

887
00:43:02,890 --> 00:43:07,240
be something called<font color="#E5E5E5"> G wave which hasn't</font>

888
00:43:04,660 --> 00:43:09,490
<font color="#E5E5E5">been maintained</font><font color="#CCCCCC"> God is kind of a</font>

889
00:43:07,240 --> 00:43:10,689
somebody else<font color="#E5E5E5"> essentially picked it up</font>

890
00:43:09,490 --> 00:43:12,700
and<font color="#CCCCCC"> it's maintaining</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> and</font>

891
00:43:10,690 --> 00:43:14,200
that's<font color="#E5E5E5"> what I've</font><font color="#CCCCCC"> been using but this is</font>

892
00:43:12,700 --> 00:43:16,180
what one of<font color="#E5E5E5"> the things</font><font color="#CCCCCC"> that's leading</font><font color="#E5E5E5"> to</font>

893
00:43:14,200 --> 00:43:22,319
<font color="#CCCCCC">the working with the crux project to</font>

894
00:43:16,180 --> 00:43:22,319
<font color="#E5E5E5">improve that side yes</font>

895
00:43:22,660 --> 00:43:25,730
[Music]

896
00:43:43,860 --> 00:43:50,829
[Music]

897
00:43:46,660 --> 00:43:54,680
the question was<font color="#E5E5E5"> about have I considered</font>

898
00:43:50,829 --> 00:43:58,329
modeling<font color="#CCCCCC"> the circuits in a symbolic way</font>

899
00:43:54,680 --> 00:44:01,069
<font color="#E5E5E5">and the answer is considered yes</font>

900
00:43:58,329 --> 00:44:03,380
actually<font color="#CCCCCC"> doing something that's another</font>

901
00:44:01,069 --> 00:44:05,750
<font color="#E5E5E5">story</font><font color="#CCCCCC"> there's a matter of</font><font color="#E5E5E5"> the time it</font>

902
00:44:03,380 --> 00:44:07,400
<font color="#CCCCCC">takes</font><font color="#E5E5E5"> to do it but that that kind of</font>

903
00:44:05,750 --> 00:44:09,740
brings up one of the reasons for<font color="#CCCCCC"> plug</font>

904
00:44:07,400 --> 00:44:12,589
<font color="#CCCCCC">ins is that it</font><font color="#E5E5E5"> gives you the an</font>

905
00:44:09,740 --> 00:44:15,200
<font color="#E5E5E5">opportunity to to play with it and make</font>

906
00:44:12,589 --> 00:44:17,058
it<font color="#E5E5E5"> available but also I'm</font><font color="#CCCCCC"> not so</font>

907
00:44:15,200 --> 00:44:21,169
convinced that<font color="#E5E5E5"> it would necessarily make</font>

908
00:44:17,059 --> 00:44:22,760
things faster<font color="#CCCCCC"> but I have I have done I</font>

909
00:44:21,170 --> 00:44:26,529
have<font color="#CCCCCC"> done a little</font><font color="#E5E5E5"> bit of work with</font>

910
00:44:22,760 --> 00:44:29,990
symbolic<font color="#E5E5E5"> analysis and which actually</font>

911
00:44:26,529 --> 00:44:32,990
brings<font color="#E5E5E5"> up another related topic and that</font>

912
00:44:29,990 --> 00:44:35,919
is<font color="#CCCCCC"> the the</font><font color="#E5E5E5"> matrix solver in</font><font color="#CCCCCC"> canoe cap is</font>

913
00:44:32,990 --> 00:44:40,490
capable<font color="#E5E5E5"> of solving symbolic matrices</font>

914
00:44:35,920 --> 00:44:42,920
<font color="#E5E5E5">it's not just limited</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> two true</font>

915
00:44:40,490 --> 00:44:45,618
<font color="#CCCCCC">numerix</font><font color="#E5E5E5"> I mean it it it's a template</font>

916
00:44:42,920 --> 00:44:48,619
class<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> it'll it'll</font><font color="#E5E5E5"> it'll solve it</font>

917
00:44:45,619 --> 00:44:51,650
using anything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can provide</font><font color="#E5E5E5"> the</font>

918
00:44:48,619 --> 00:44:53,779
<font color="#E5E5E5">right operators for and and that</font>

919
00:44:51,650 --> 00:44:55,970
<font color="#E5E5E5">actually makes it kind of neat for doing</font>

920
00:44:53,779 --> 00:44:57,980
symbolic analysis<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> looked into</font><font color="#CCCCCC"> it</font>

921
00:44:55,970 --> 00:45:00,669
<font color="#CCCCCC">but</font><font color="#E5E5E5"> never carried it through never had</font>

922
00:44:57,980 --> 00:45:03,670
the time to<font color="#E5E5E5"> really follow through</font><font color="#CCCCCC"> on it</font>

923
00:45:00,670 --> 00:45:03,670
yes

924
00:45:04,690 --> 00:45:10,089
<font color="#CCCCCC">I don't run it but</font><font color="#E5E5E5"> you know it's one of</font>

925
00:45:06,760 --> 00:45:12,640
<font color="#E5E5E5">those things</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> he asked about</font><font color="#CCCCCC"> SystemC</font>

926
00:45:10,089 --> 00:45:14,230
and I I<font color="#E5E5E5"> don't run it but it's something</font>

927
00:45:12,640 --> 00:45:16,270
<font color="#E5E5E5">that I've</font><font color="#CCCCCC"> been I've looked at</font><font color="#E5E5E5"> and I said</font>

928
00:45:14,230 --> 00:45:21,400
<font color="#CCCCCC">wow this looks neat we need to support</font>

929
00:45:16,270 --> 00:45:22,810
this and and it just<font color="#E5E5E5"> and I look at it</font>

930
00:45:21,400 --> 00:45:25,000
<font color="#E5E5E5">and say well this is</font><font color="#CCCCCC"> not going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

931
00:45:22,810 --> 00:45:27,940
<font color="#E5E5E5">difficult to support at all but I just</font>

932
00:45:25,000 --> 00:45:30,040
<font color="#CCCCCC">never had the</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> to do it</font><font color="#E5E5E5"> in fact</font>

933
00:45:27,940 --> 00:45:34,450
<font color="#E5E5E5">actually one of the one thing that I've</font>

934
00:45:30,040 --> 00:45:38,680
considered again not had the time<font color="#CCCCCC"> to do</font>

935
00:45:34,450 --> 00:45:40,930
it<font color="#CCCCCC"> is that that that system</font><font color="#E5E5E5"> see mostly</font>

936
00:45:38,680 --> 00:45:42,910
<font color="#E5E5E5">it you just take the code and it just</font>

937
00:45:40,930 --> 00:45:45,430
<font color="#CCCCCC">would what it would mean to support it</font>

938
00:45:42,910 --> 00:45:47,078
is a<font color="#CCCCCC"> wrapper</font><font color="#E5E5E5"> actually which it looks</font>

939
00:45:45,430 --> 00:45:50,950
like<font color="#CCCCCC"> it would be actually a lot simpler</font>

940
00:45:47,079 --> 00:45:54,819
than<font color="#E5E5E5"> the spice wrapper and so given the</font>

941
00:45:50,950 --> 00:45:57,970
<font color="#E5E5E5">wrapper hey it run</font><font color="#CCCCCC"> look I could make it</font>

942
00:45:54,819 --> 00:45:59,859
<font color="#E5E5E5">so it run system</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> native well that if</font>

943
00:45:57,970 --> 00:46:02,379
that's<font color="#E5E5E5"> the case we get it to that</font><font color="#CCCCCC"> point</font>

944
00:45:59,859 --> 00:46:04,720
and now here's a way<font color="#E5E5E5"> of supporting</font><font color="#CCCCCC"> Vera</font>

945
00:46:02,380 --> 00:46:09,460
<font color="#CCCCCC">login VHDL is you take Vera</font><font color="#E5E5E5"> log and</font>

946
00:46:04,720 --> 00:46:11,109
convert it to system<font color="#E5E5E5"> C and so I it</font>

947
00:46:09,460 --> 00:46:12,490
<font color="#E5E5E5">actually looks pretty attractive but I</font>

948
00:46:11,109 --> 00:46:29,078
<font color="#CCCCCC">haven't</font><font color="#E5E5E5"> had the</font><font color="#CCCCCC"> time to</font><font color="#E5E5E5"> follow through</font>

949
00:46:12,490 --> 00:46:31,660
<font color="#CCCCCC">with</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and actually do it there it's a</font>

950
00:46:29,079 --> 00:46:34,150
fairly small<font color="#E5E5E5"> oh yes how much of the</font>

951
00:46:31,660 --> 00:46:36,549
<font color="#E5E5E5">development is done by me and how large</font>

952
00:46:34,150 --> 00:46:38,079
of a community there is it's<font color="#E5E5E5"> actually</font>

953
00:46:36,550 --> 00:46:40,569
smaller<font color="#E5E5E5"> than I</font><font color="#CCCCCC"> had hoped</font>

954
00:46:38,079 --> 00:46:41,800
actually<font color="#E5E5E5"> lately it seems that Felix has</font>

955
00:46:40,569 --> 00:46:43,270
been doing most<font color="#E5E5E5"> of the development</font>

956
00:46:41,800 --> 00:46:48,069
<font color="#E5E5E5">because I've been wrapped up on other</font>

957
00:46:43,270 --> 00:46:51,009
stuff<font color="#E5E5E5"> but it so there's somewhat of a</font>

958
00:46:48,069 --> 00:46:52,900
community that's doing development<font color="#CCCCCC"> not</font>

959
00:46:51,010 --> 00:46:54,550
not as much as I would<font color="#E5E5E5"> hope and not as</font>

960
00:46:52,900 --> 00:47:00,490
much<font color="#E5E5E5"> as I would</font><font color="#CCCCCC"> hope</font><font color="#E5E5E5"> the plugins would</font>

961
00:46:54,550 --> 00:47:03,640
have brought on<font color="#CCCCCC"> I I see stuff popping up</font>

962
00:47:00,490 --> 00:47:08,009
on github<font color="#CCCCCC"> that I that</font><font color="#E5E5E5"> that looks kind of</font>

963
00:47:03,640 --> 00:47:10,420
<font color="#CCCCCC">interesting but but so there is some but</font>

964
00:47:08,010 --> 00:47:12,189
you want to join the development

965
00:47:10,420 --> 00:47:22,309
community

966
00:47:12,189 --> 00:47:24,890
could use<font color="#CCCCCC"> some help is a simulator</font>

967
00:47:22,309 --> 00:47:29,179
multi-threaded now the answer<font color="#E5E5E5"> to that</font>

968
00:47:24,890 --> 00:47:33,499
<font color="#E5E5E5">one is the short</font><font color="#CCCCCC"> answer to that one is</font>

969
00:47:29,179 --> 00:47:36,650
no a more and<font color="#E5E5E5"> a more complete answer to</font>

970
00:47:33,499 --> 00:47:38,899
that one is<font color="#CCCCCC"> that the answer is</font><font color="#E5E5E5"> no but</font>

971
00:47:36,650 --> 00:47:40,880
the<font color="#E5E5E5"> code</font><font color="#CCCCCC"> is all reentrant so that it</font>

972
00:47:38,900 --> 00:47:42,739
it's just<font color="#E5E5E5"> a matter of spec'ing out where</font>

973
00:47:40,880 --> 00:47:44,059
<font color="#E5E5E5">two multi-threaded it should not be hard</font>

974
00:47:42,739 --> 00:47:46,369
to<font color="#E5E5E5"> multi threat to make it</font>

975
00:47:44,059 --> 00:47:53,170
multi-threaded<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I'd</font><font color="#E5E5E5"> haven't had the</font>

976
00:47:46,369 --> 00:47:57,170
<font color="#CCCCCC">time to do</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> one one part of in</font>

977
00:47:53,170 --> 00:47:59,679
of answering<font color="#CCCCCC"> that another point related</font>

978
00:47:57,170 --> 00:48:02,449
to the<font color="#E5E5E5"> answer to that question is that</font>

979
00:47:59,679 --> 00:48:04,849
<font color="#E5E5E5">even single threaded the benchmarks that</font>

980
00:48:02,449 --> 00:48:09,349
<font color="#E5E5E5">I've made it beats all the</font>

981
00:48:04,849 --> 00:48:12,589
multi-threaded ones anyway it<font color="#E5E5E5"> beat</font><font color="#CCCCCC"> it</font>

982
00:48:09,349 --> 00:48:14,660
<font color="#CCCCCC">beats all the multi-threaded ones</font><font color="#E5E5E5"> using</font>

983
00:48:12,589 --> 00:48:16,249
multi threads with canoe cab only having

984
00:48:14,660 --> 00:48:23,868
a single<font color="#E5E5E5"> thread in canoe cap still runs</font>

985
00:48:16,249 --> 00:48:27,759
faster and so<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> question sometimes</font>

986
00:48:23,869 --> 00:48:27,759
<font color="#E5E5E5">how much it would actually accomplish</font>

987
00:48:28,809 --> 00:48:37,539
does<font color="#E5E5E5"> that answer your question yeah</font>

988
00:48:32,119 --> 00:48:37,539
<font color="#E5E5E5">anything</font><font color="#CCCCCC"> else yes</font>

989
00:48:41,650 --> 00:48:55,790
<font color="#CCCCCC">can</font><font color="#E5E5E5"> you speak up a bit is it possible to</font>

990
00:48:51,650 --> 00:49:00,190
do<font color="#CCCCCC"> multi domain</font><font color="#E5E5E5"> simulation I'm not</font>

991
00:48:55,790 --> 00:49:00,190
really sure what you mean<font color="#E5E5E5"> by</font><font color="#CCCCCC"> that</font>

992
00:49:16,450 --> 00:49:28,430
<font color="#CCCCCC">I'm not it does it it does have built</font>

993
00:49:25,130 --> 00:49:33,619
<font color="#CCCCCC">built-in</font><font color="#E5E5E5"> conversion between analog and</font>

994
00:49:28,430 --> 00:49:37,009
<font color="#CCCCCC">digital in that sense</font><font color="#E5E5E5"> and and it and it</font>

995
00:49:33,619 --> 00:49:42,920
of<font color="#CCCCCC"> course has</font><font color="#E5E5E5"> the plugins which should</font>

996
00:49:37,010 --> 00:49:45,020
<font color="#E5E5E5">make it at least possible to add that</font>

997
00:49:42,920 --> 00:49:46,700
now in terms of<font color="#E5E5E5"> multi domain if you're</font>

998
00:49:45,020 --> 00:49:51,730
thinking<font color="#E5E5E5"> of something like the different</font>

999
00:49:46,700 --> 00:49:59,540
disciplines<font color="#CCCCCC"> and vera</font><font color="#E5E5E5"> log</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> really</font>

1000
00:49:51,730 --> 00:50:06,070
kind of a<font color="#E5E5E5"> cosmetic thing</font><font color="#CCCCCC"> I'm not really</font>

1001
00:49:59,540 --> 00:50:32,359
<font color="#E5E5E5">sure how to answer that actually</font><font color="#CCCCCC"> alright</font>

1002
00:50:06,070 --> 00:50:36,470
yes right<font color="#CCCCCC"> right yeah</font><font color="#E5E5E5"> the question</font><font color="#CCCCCC"> is in</font>

1003
00:50:32,359 --> 00:50:39,799
the<font color="#E5E5E5"> digital to analog conversion how are</font>

1004
00:50:36,470 --> 00:50:42,098
the digital devices<font color="#CCCCCC"> modeled and the</font>

1005
00:50:39,800 --> 00:50:44,839
answer to that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that as of right now</font>

1006
00:50:42,099 --> 00:50:47,000
it's<font color="#E5E5E5"> fairly simple essentially</font>

1007
00:50:44,839 --> 00:50:49,880
essentially voltage source with

1008
00:50:47,000 --> 00:50:52,849
resistance type of model with with a

1009
00:50:49,880 --> 00:50:57,349
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the wave with a parameter izybelle</font>

1010
00:50:52,849 --> 00:51:01,960
<font color="#CCCCCC">waveform in terms of what can be</font><font color="#E5E5E5"> done</font>

1011
00:50:57,349 --> 00:51:05,270
<font color="#E5E5E5">though is if you look at</font><font color="#CCCCCC"> vera log that</font>

1012
00:51:01,960 --> 00:51:07,310
that how that<font color="#CCCCCC"> is done</font><font color="#E5E5E5"> is defined in</font><font color="#CCCCCC"> vera</font>

1013
00:51:05,270 --> 00:51:16,490
log<font color="#CCCCCC"> AMS is something they call a connect</font>

1014
00:51:07,310 --> 00:51:18,380
module and one of the one bit of<font color="#CCCCCC"> work</font>

1015
00:51:16,490 --> 00:51:20,089
that's<font color="#E5E5E5"> a bit lagging because</font><font color="#CCCCCC"> i've had</font>

1016
00:51:18,380 --> 00:51:22,880
pressure to do other things<font color="#CCCCCC"> is to make</font>

1017
00:51:20,089 --> 00:51:26,109
the connect module itself<font color="#E5E5E5"> be a</font><font color="#CCCCCC"> plugin</font>

1018
00:51:22,880 --> 00:51:28,880
<font color="#CCCCCC">and if the connect module itself</font>

1019
00:51:26,109 --> 00:51:30,859
<font color="#E5E5E5">thinking of that</font><font color="#CCCCCC"> as a plug-in you could</font>

1020
00:51:28,880 --> 00:51:33,500
write a code the code to do<font color="#CCCCCC"> anything you</font>

1021
00:51:30,859 --> 00:51:35,810
want<font color="#E5E5E5"> but in terms of what's actually</font>

1022
00:51:33,500 --> 00:51:40,730
<font color="#E5E5E5">built in</font><font color="#CCCCCC"> I mean what</font><font color="#E5E5E5"> what actually comes</font>

1023
00:51:35,810 --> 00:51:49,040
<font color="#E5E5E5">with it is is pretty much the there's a</font>

1024
00:51:40,730 --> 00:51:54,170
<font color="#CCCCCC">is a fairly</font><font color="#E5E5E5"> simple model</font><font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> yeah</font>

1025
00:51:49,040 --> 00:51:56,329
<font color="#CCCCCC">and yeah that</font><font color="#E5E5E5"> that's true and and one</font>

1026
00:51:54,170 --> 00:51:58,670
one thing<font color="#E5E5E5"> that canoe cap does it's</font>

1027
00:51:56,329 --> 00:52:02,470
actually beyond the Verilog spec is that

1028
00:51:58,670 --> 00:52:04,819
it can it can<font color="#E5E5E5"> actually have the the</font>

1029
00:52:02,470 --> 00:52:07,819
architecture is actually designed<font color="#E5E5E5"> around</font>

1030
00:52:04,819 --> 00:52:09,650
the VHDL concept of separate entity

1031
00:52:07,819 --> 00:52:12,829
architecture where it can have multiple

1032
00:52:09,650 --> 00:52:14,450
<font color="#E5E5E5">architectures for</font><font color="#CCCCCC"> an entity</font><font color="#E5E5E5"> and it and</font>

1033
00:52:12,829 --> 00:52:16,460
it does have<font color="#E5E5E5"> the provision</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> switching</font>

1034
00:52:14,450 --> 00:52:18,770
<font color="#E5E5E5">between architectures on the fly which</font>

1035
00:52:16,460 --> 00:52:21,589
can can kind of<font color="#E5E5E5"> handle some of that</font>

1036
00:52:18,770 --> 00:52:26,240
stuff but but<font color="#E5E5E5"> that's something</font><font color="#CCCCCC"> that</font>

1037
00:52:21,589 --> 00:52:27,950
really it's<font color="#E5E5E5"> something that I was working</font>

1038
00:52:26,240 --> 00:52:28,729
on pretty seriously<font color="#CCCCCC"> a bunch of</font><font color="#E5E5E5"> years ago</font>

1039
00:52:27,950 --> 00:52:33,399
<font color="#E5E5E5">on a kind</font>

1040
00:52:28,730 --> 00:52:33,400
got dropped<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of got pushed aside</font>

1041
00:52:41,960 --> 00:52:45,670
[Applause]

