1
00:00:04,640 --> 00:00:09,559
<font color="#E5E5E5">okay so our final presentation of the</font>

2
00:00:07,160 --> 00:00:12,740
<font color="#E5E5E5">lightning talk round</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> George Roth</font><font color="#CCCCCC"> who</font>

3
00:00:09,559 --> 00:00:15,160
<font color="#E5E5E5">will be talking about slurm</font><font color="#CCCCCC"> so take</font><font color="#E5E5E5"> it</font>

4
00:00:12,740 --> 00:00:15,160
away George

5
00:00:27,540 --> 00:00:33,580
<font color="#E5E5E5">okay I am George</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> work for I'm gonna</font>

6
00:00:31,630 --> 00:00:35,260
present them in<font color="#E5E5E5"> action batch processing</font>

7
00:00:33,580 --> 00:00:37,960
for a<font color="#E5E5E5"> 21st century we're gonna make</font>

8
00:00:35,260 --> 00:00:39,849
batch processing hooligan apparently<font color="#CCCCCC"> I</font>

9
00:00:37,960 --> 00:00:42,040
work for nurse which is the primary

10
00:00:39,850 --> 00:00:44,199
significant computing facility of the

11
00:00:42,040 --> 00:00:47,739
office of science we have<font color="#E5E5E5"> two</font>

12
00:00:44,199 --> 00:00:50,309
supercomputers<font color="#CCCCCC"> Cory and</font><font color="#E5E5E5"> Edison and three</font>

13
00:00:47,739 --> 00:00:53,530
smaller clusters<font color="#E5E5E5"> and together that's</font>

14
00:00:50,309 --> 00:00:56,410
around 800,000<font color="#E5E5E5"> course 50 petabytes of</font>

15
00:00:53,530 --> 00:00:59,199
storage we serve<font color="#E5E5E5"> six thousand scientists</font>

16
00:00:56,410 --> 00:01:02,440
<font color="#E5E5E5">from very different fields and</font>

17
00:00:59,199 --> 00:01:04,899
<font color="#CCCCCC">everything we do</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> open science so what</font>

18
00:01:02,440 --> 00:01:06,580
is learn learn was formerly<font color="#CCCCCC"> called</font><font color="#E5E5E5"> the</font>

19
00:01:04,900 --> 00:01:07,120
simple Linux utility for resource

20
00:01:06,580 --> 00:01:08,920
management

21
00:01:07,120 --> 00:01:11,590
<font color="#E5E5E5">when they reached half a million lines</font>

22
00:01:08,920 --> 00:01:14,320
of code they got rid of the simple<font color="#CCCCCC"> size</font>

23
00:01:11,590 --> 00:01:16,750
<font color="#CCCCCC">only called slurm now it's a highly</font>

24
00:01:14,320 --> 00:01:20,020
scalable workload manager<font color="#CCCCCC"> it runs on I</font>

25
00:01:16,750 --> 00:01:22,619
think<font color="#CCCCCC"> ten</font><font color="#E5E5E5"> thousand nodes on</font><font color="#CCCCCC"> Cori</font><font color="#E5E5E5"> and it</font>

26
00:01:20,020 --> 00:01:26,048
runs<font color="#E5E5E5"> on bigger systems than that as well</font>

27
00:01:22,619 --> 00:01:28,930
like more<font color="#E5E5E5"> than 60% of the 500 fastest</font>

28
00:01:26,049 --> 00:01:31,120
machine the world<font color="#CCCCCC"> grand-slam</font><font color="#E5E5E5"> development</font>

29
00:01:28,930 --> 00:01:33,700
<font color="#E5E5E5">started in 2001 at Lawrence Livermore</font>

30
00:01:31,120 --> 00:01:36,690
<font color="#E5E5E5">National Lab and it's now maintained by</font>

31
00:01:33,700 --> 00:01:42,400
<font color="#CCCCCC">a company called CMD and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> pretty</font>

32
00:01:36,690 --> 00:01:48,429
active<font color="#CCCCCC"> open-source community so how many</font>

33
00:01:42,400 --> 00:01:50,230
here to have an HPC background<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> well</font>

34
00:01:48,430 --> 00:01:53,050
we're gonna<font color="#E5E5E5"> start at the</font><font color="#CCCCCC"> basic</font><font color="#E5E5E5"> so you</font>

35
00:01:50,230 --> 00:01:56,050
might know a lot of<font color="#E5E5E5"> that stuff but the</font>

36
00:01:53,050 --> 00:01:58,539
<font color="#CCCCCC">basic functionality</font><font color="#E5E5E5"> of thumb is you read</font>

37
00:01:56,050 --> 00:02:00,130
the<font color="#E5E5E5"> job script disabilities learn inside</font>

38
00:01:58,540 --> 00:02:02,890
<font color="#E5E5E5">the JavaScript you to whatever you want</font>

39
00:02:00,130 --> 00:02:05,259
to do your<font color="#CCCCCC"> job is cute and the priority</font>

40
00:02:02,890 --> 00:02:08,348
is applied<font color="#CCCCCC"> so if you submit a</font><font color="#E5E5E5"> high</font>

41
00:02:05,260 --> 00:02:12,280
<font color="#E5E5E5">priority job it runs first and then when</font>

42
00:02:08,348 --> 00:02:13,540
the job<font color="#CCCCCC"> gets to run it enforces</font><font color="#E5E5E5"> resource</font>

43
00:02:12,280 --> 00:02:15,879
limits using<font color="#E5E5E5"> cgroups</font>

44
00:02:13,540 --> 00:02:18,129
checks the usage who ran the job<font color="#E5E5E5"> along</font>

45
00:02:15,879 --> 00:02:22,629
it took etc etc and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> tears it down</font>

46
00:02:18,129 --> 00:02:24,190
<font color="#CCCCCC">when the job is</font><font color="#E5E5E5"> finished</font><font color="#CCCCCC"> so some of the</font>

47
00:02:22,629 --> 00:02:26,440
<font color="#CCCCCC">features of storm which make it</font><font color="#E5E5E5"> nice to</font>

48
00:02:24,190 --> 00:02:27,879
use from<font color="#E5E5E5"> the administrative side it's</font>

49
00:02:26,440 --> 00:02:29,800
very<font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> deploy it as a single</font>

50
00:02:27,879 --> 00:02:34,899
configuration<font color="#CCCCCC"> file the documentation is</font>

51
00:02:29,800 --> 00:02:37,730
extensive it's a pretty<font color="#E5E5E5"> user friendly</font><font color="#CCCCCC"> if</font>

52
00:02:34,900 --> 00:02:40,370
you're coming<font color="#CCCCCC"> from HPC I guess</font><font color="#E5E5E5"> it's</font>

53
00:02:37,730 --> 00:02:42,679
scalable<font color="#E5E5E5"> and extremely configurable</font>

54
00:02:40,370 --> 00:02:44,269
<font color="#E5E5E5">which is a good and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> bad thing so you</font>

55
00:02:42,680 --> 00:02:47,090
can do anything you<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> do with</font><font color="#CCCCCC"> it</font>

56
00:02:44,269 --> 00:02:50,930
but it<font color="#CCCCCC"> can get</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> of hand if you're not</font>

57
00:02:47,090 --> 00:02:53,540
<font color="#CCCCCC">careful</font><font color="#E5E5E5"> so the architecture</font><font color="#CCCCCC"> is pretty</font>

58
00:02:50,930 --> 00:02:55,879
simply if a controller<font color="#E5E5E5"> a database server</font>

59
00:02:53,540 --> 00:02:57,500
that keeps track<font color="#CCCCCC"> of the of the jobs</font><font color="#E5E5E5"> and</font>

60
00:02:55,879 --> 00:02:59,870
the resources<font color="#CCCCCC"> to use to run times etc</font>

61
00:02:57,500 --> 00:03:02,239
<font color="#CCCCCC">you have a storm D that</font><font color="#E5E5E5"> runs in to</font>

62
00:02:59,870 --> 00:03:04,120
compute<font color="#E5E5E5"> nodes and it talks to</font><font color="#CCCCCC"> the other</font>

63
00:03:02,239 --> 00:03:08,480
compute nodes in<font color="#E5E5E5"> an hierarchical fashion</font>

64
00:03:04,120 --> 00:03:10,160
<font color="#E5E5E5">so it scales</font><font color="#CCCCCC"> pretty well</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then the</font>

65
00:03:08,480 --> 00:03:13,310
<font color="#E5E5E5">programs you use like s control which is</font>

66
00:03:10,160 --> 00:03:16,400
<font color="#E5E5E5">used to check</font><font color="#CCCCCC"> the state of two nodes and</font>

67
00:03:13,310 --> 00:03:21,590
<font color="#E5E5E5">ask you to check our jobs are</font><font color="#CCCCCC"> queuing go</font>

68
00:03:16,400 --> 00:03:23,000
against the controller it's I think

69
00:03:21,590 --> 00:03:24,319
prudent<font color="#CCCCCC"> to note that there is no</font><font color="#E5E5E5"> single</font>

70
00:03:23,000 --> 00:03:29,950
point<font color="#E5E5E5"> of failure so you can have it</font>

71
00:03:24,319 --> 00:03:32,540
<font color="#CCCCCC">running pretty much disruption free so</font>

72
00:03:29,950 --> 00:03:33,828
I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> give you</font><font color="#CCCCCC"> an example</font><font color="#E5E5E5"> of a job</font>

73
00:03:32,540 --> 00:03:36,709
<font color="#CCCCCC">array so</font><font color="#E5E5E5"> let's say you want to do some</font>

74
00:03:33,829 --> 00:03:39,859
image processing<font color="#CCCCCC"> as it's fashionable</font><font color="#E5E5E5"> now</font>

75
00:03:36,709 --> 00:03:43,280
and you want to get so you put a bash

76
00:03:39,859 --> 00:03:44,930
<font color="#CCCCCC">script really</font><font color="#E5E5E5"> plain bash script you put</font>

77
00:03:43,280 --> 00:03:47,780
the<font color="#CCCCCC"> S</font><font color="#E5E5E5"> pitch directives that slurm</font>

78
00:03:44,930 --> 00:03:48,859
interprets on top and then on the bottom

79
00:03:47,780 --> 00:03:52,040
<font color="#CCCCCC">your ear on</font>

80
00:03:48,859 --> 00:03:53,750
nowadays you<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> container it so you</font>

81
00:03:52,040 --> 00:03:57,138
give the job<font color="#CCCCCC"> a name called image resize</font>

82
00:03:53,750 --> 00:03:59,450
you say I want to<font color="#E5E5E5"> run a hundred of those</font>

83
00:03:57,139 --> 00:04:02,000
jobs<font color="#CCCCCC"> so this is gonna get executed a</font>

84
00:03:59,450 --> 00:04:05,108
hundred times<font color="#E5E5E5"> you want to CPUs per task</font>

85
00:04:02,000 --> 00:04:08,690
<font color="#CCCCCC">and you want</font><font color="#E5E5E5"> ten gigs of memory per task</font>

86
00:04:05,109 --> 00:04:10,400
<font color="#E5E5E5">so and then you type talker on your</font>

87
00:04:08,690 --> 00:04:12,410
<font color="#E5E5E5">talker container and you set the</font>

88
00:04:10,400 --> 00:04:14,209
environment<font color="#E5E5E5"> variable input to the task</font>

89
00:04:12,410 --> 00:04:16,940
ID of the<font color="#E5E5E5"> task</font><font color="#CCCCCC"> that you're currently in</font>

90
00:04:14,209 --> 00:04:20,000
so the first task is gonna have input

91
00:04:16,940 --> 00:04:22,849
equals<font color="#CCCCCC"> wand</font><font color="#E5E5E5"> and input 2 equals</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 3 etc</font>

92
00:04:20,000 --> 00:04:25,010
etc<font color="#E5E5E5"> because</font><font color="#CCCCCC"> this is reduced example you</font>

93
00:04:22,849 --> 00:04:30,219
would usually get the<font color="#E5E5E5"> input files out of</font>

94
00:04:25,010 --> 00:04:33,560
<font color="#CCCCCC">a file like the first second third entry</font>

95
00:04:30,220 --> 00:04:35,599
so what you also can<font color="#CCCCCC"> do is you can build</font>

96
00:04:33,560 --> 00:04:38,389
workflows on top of the schedulers you

97
00:04:35,599 --> 00:04:42,919
can say<font color="#E5E5E5"> I have a high priority that's my</font>

98
00:04:38,389 --> 00:04:45,590
<font color="#CCCCCC">a I job</font><font color="#E5E5E5"> also fashionable now it should</font>

99
00:04:42,919 --> 00:04:47,510
use<font color="#E5E5E5"> five nodes and it can only run after</font>

100
00:04:45,590 --> 00:04:49,429
let's say<font color="#E5E5E5"> the image pre-processing job</font>

101
00:04:47,510 --> 00:04:50,510
has<font color="#CCCCCC"> finished and a storm is</font><font color="#E5E5E5"> going to</font>

102
00:04:49,430 --> 00:04:53,780
take care

103
00:04:50,510 --> 00:04:55,490
<font color="#E5E5E5">it executes in order it also has</font>

104
00:04:53,780 --> 00:04:57,619
advanced features which<font color="#E5E5E5"> are pretty nice</font>

105
00:04:55,490 --> 00:04:59,840
it<font color="#CCCCCC"> has</font><font color="#E5E5E5"> burst buffers it integrates with</font>

106
00:04:57,620 --> 00:05:03,190
containers<font color="#E5E5E5"> not only the</font><font color="#CCCCCC"> wage we just saw</font>

107
00:04:59,840 --> 00:05:06,020
by<font color="#CCCCCC"> executing</font><font color="#E5E5E5"> talker directly but by</font>

108
00:05:03,190 --> 00:05:07,850
using a<font color="#CCCCCC"> plug-in you</font><font color="#E5E5E5"> have the job submit</font>

109
00:05:06,020 --> 00:05:10,969
<font color="#E5E5E5">plug-in that can rewrite the job and you</font>

110
00:05:07,850 --> 00:05:13,430
submit it it can feather<font color="#CCCCCC"> 8 which means</font>

111
00:05:10,970 --> 00:05:15,140
you can run several controllers<font color="#E5E5E5"> and you</font>

112
00:05:13,430 --> 00:05:17,780
submit<font color="#CCCCCC"> the job and it gets submitted</font><font color="#E5E5E5"> to</font>

113
00:05:15,140 --> 00:05:27,110
any controller just<font color="#E5E5E5"> a relatively</font>

114
00:05:17,780 --> 00:05:29,510
extensive amount of<font color="#E5E5E5"> plugins so burst</font>

115
00:05:27,110 --> 00:05:32,500
<font color="#CCCCCC">buffers everything that was developed</font>

116
00:05:29,510 --> 00:05:35,210
with input of nurse<font color="#E5E5E5"> we use it to</font>

117
00:05:32,500 --> 00:05:37,430
provision storage for the<font color="#E5E5E5"> crate data</font>

118
00:05:35,210 --> 00:05:39,380
warp system<font color="#E5E5E5"> so when you launch a job you</font>

119
00:05:37,430 --> 00:05:42,350
can say<font color="#CCCCCC"> ok I</font><font color="#E5E5E5"> want I don't</font><font color="#CCCCCC"> know if</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> hunt</font>

120
00:05:39,380 --> 00:05:45,560
terabytes of SSD and then you can use

121
00:05:42,350 --> 00:05:47,720
that<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> of the job so that's not</font>

122
00:05:45,560 --> 00:05:51,140
useful<font color="#E5E5E5"> for I guess anybody in the room</font>

123
00:05:47,720 --> 00:05:53,150
except one guy<font color="#E5E5E5"> but you can also use a</font>

124
00:05:51,140 --> 00:05:55,520
generic<font color="#E5E5E5"> plugin that uses shell scripts</font>

125
00:05:53,150 --> 00:05:57,979
<font color="#E5E5E5">and then you can</font><font color="#CCCCCC"> provision</font><font color="#E5E5E5"> whatever you</font>

126
00:05:55,520 --> 00:06:01,130
want to in<font color="#E5E5E5"> in this and you can</font>

127
00:05:57,980 --> 00:06:07,130
automatically<font color="#CCCCCC"> staged data in and</font><font color="#E5E5E5"> out for</font>

128
00:06:01,130 --> 00:06:08,719
<font color="#E5E5E5">example you could so I do have to say</font>

129
00:06:07,130 --> 00:06:09,920
full<font color="#E5E5E5"> disclosure that's not implemented</font>

130
00:06:08,720 --> 00:06:11,930
yet you would need to do<font color="#CCCCCC"> that yourself</font>

131
00:06:09,920 --> 00:06:13,970
using shell scripts<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you could pull</font>

132
00:06:11,930 --> 00:06:18,500
data in from s3<font color="#E5E5E5"> and stage it out to s3</font>

133
00:06:13,970 --> 00:06:20,540
<font color="#E5E5E5">and then run your container</font><font color="#CCCCCC"> and say ok</font>

134
00:06:18,500 --> 00:06:21,860
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> my input it's there</font><font color="#CCCCCC"> because it</font>

135
00:06:20,540 --> 00:06:25,960
<font color="#E5E5E5">was staged in by the scheduler</font>

136
00:06:21,860 --> 00:06:25,960
and when you're done<font color="#E5E5E5"> stage it out again</font>

137
00:06:28,090 --> 00:06:32,630
container integration is realized by

138
00:06:30,200 --> 00:06:34,810
<font color="#E5E5E5">BOTS turn causes Bank plugin which is a</font>

139
00:06:32,630 --> 00:06:38,719
bit of an awkward<font color="#E5E5E5"> name I guess as</font>

140
00:06:34,810 --> 00:06:41,720
shifter which is a tool<font color="#E5E5E5"> to run topper on</font>

141
00:06:38,720 --> 00:06:43,520
HPC systems is developed at norsk<font color="#E5E5E5"> there</font>

142
00:06:41,720 --> 00:06:45,260
is a<font color="#E5E5E5"> plugin first learn of</font><font color="#CCCCCC"> course there</font>

143
00:06:43,520 --> 00:06:47,000
is also one for<font color="#E5E5E5"> singularity</font><font color="#CCCCCC"> and it's</font>

144
00:06:45,260 --> 00:06:48,500
very<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use if you want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have an</font>

145
00:06:47,000 --> 00:06:52,390
interactive<font color="#CCCCCC"> session that runs in some</font>

146
00:06:48,500 --> 00:06:54,890
custom pipeline<font color="#E5E5E5"> that you put together</font>

147
00:06:52,390 --> 00:06:56,390
<font color="#E5E5E5">you just</font><font color="#CCCCCC"> do an S to log</font><font color="#E5E5E5"> specify the</font>

148
00:06:54,890 --> 00:06:58,490
image you want<font color="#E5E5E5"> to run and when</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> enter</font>

149
00:06:56,390 --> 00:07:01,159
this interactive session you're going to

150
00:06:58,490 --> 00:07:02,870
be<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> of that container</font><font color="#E5E5E5"> there's a</font>

151
00:07:01,160 --> 00:07:05,600
Java<font color="#CCCCCC"> plugin</font>

152
00:07:02,870 --> 00:07:09,650
<font color="#CCCCCC">ermm is very heavily sea-based it's</font>

153
00:07:05,600 --> 00:07:11,210
<font color="#E5E5E5">based on lure so when you submit</font><font color="#CCCCCC"> a job</font>

154
00:07:09,650 --> 00:07:14,270
<font color="#CCCCCC">request you</font><font color="#E5E5E5"> can modify it on the fly and</font>

155
00:07:11,210 --> 00:07:17,690
make let's say<font color="#E5E5E5"> business decisions which</font>

156
00:07:14,270 --> 00:07:19,250
can be very powerful and very very

157
00:07:17,690 --> 00:07:21,650
flexible<font color="#E5E5E5"> as you can access everything</font>

158
00:07:19,250 --> 00:07:26,180
that the internal state of<font color="#CCCCCC"> therm if you</font>

159
00:07:21,650 --> 00:07:28,130
want to do that there<font color="#E5E5E5"> are more</font><font color="#CCCCCC"> plug-ins</font>

160
00:07:26,180 --> 00:07:31,760
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this which</font><font color="#E5E5E5"> you can read either in C</font>

161
00:07:28,130 --> 00:07:34,760
or in Lua<font color="#E5E5E5"> as well the lower part is also</font>

162
00:07:31,760 --> 00:07:36,320
<font color="#E5E5E5">done by Lawrence Livermore Lab so there</font>

163
00:07:34,760 --> 00:07:38,060
are a<font color="#E5E5E5"> few plugins floating</font><font color="#CCCCCC"> on for let's</font>

164
00:07:36,320 --> 00:07:39,950
<font color="#CCCCCC">say x11 support that forwards the</font>

165
00:07:38,060 --> 00:07:41,960
connection back to your login<font color="#CCCCCC"> node if</font>

166
00:07:39,950 --> 00:07:44,479
you have different<font color="#CCCCCC"> network setups</font><font color="#E5E5E5"> you</font>

167
00:07:41,960 --> 00:07:47,950
can notify the<font color="#E5E5E5"> user if he gets an</font><font color="#CCCCCC"> OEM</font>

168
00:07:44,480 --> 00:07:50,060
<font color="#CCCCCC">and nurse we have</font><font color="#E5E5E5"> a thing</font><font color="#CCCCCC"> that loads</font>

169
00:07:47,950 --> 00:07:51,920
performance tools like the current

170
00:07:50,060 --> 00:07:54,110
<font color="#CCCCCC">module you can</font><font color="#E5E5E5"> request the kernel module</font>

171
00:07:51,920 --> 00:07:55,850
to be loaded when the job runs and then

172
00:07:54,110 --> 00:07:57,520
then strips it down when the job<font color="#E5E5E5"> is</font>

173
00:07:55,850 --> 00:07:59,750
finished

174
00:07:57,520 --> 00:08:02,419
as I'm running<font color="#E5E5E5"> out of time I'm not</font><font color="#CCCCCC"> going</font>

175
00:07:59,750 --> 00:08:04,100
to go too<font color="#E5E5E5"> much into this</font><font color="#CCCCCC"> but and as you</font>

176
00:08:02,420 --> 00:08:06,200
all<font color="#E5E5E5"> have an HPC ground I guess</font><font color="#CCCCCC"> you know</font>

177
00:08:04,100 --> 00:08:09,080
how backfill works<font color="#E5E5E5"> but basically the</font>

178
00:08:06,200 --> 00:08:11,900
scheduler<font color="#CCCCCC"> if you have a big job</font><font color="#E5E5E5"> that</font>

179
00:08:09,080 --> 00:08:13,490
<font color="#E5E5E5">uses a lot of</font><font color="#CCCCCC"> resources</font><font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to</font>

180
00:08:11,900 --> 00:08:16,299
drain<font color="#E5E5E5"> those resources first to be able</font>

181
00:08:13,490 --> 00:08:19,490
<font color="#CCCCCC">to</font><font color="#E5E5E5"> run it and the scheduler uses that</font>

182
00:08:16,300 --> 00:08:23,360
training<font color="#E5E5E5"> to backfill jobs that can take</font>

183
00:08:19,490 --> 00:08:27,130
<font color="#CCCCCC">shorter time to</font><font color="#E5E5E5"> execute those you get a</font>

184
00:08:23,360 --> 00:08:31,100
higher utilization of<font color="#CCCCCC"> your</font><font color="#E5E5E5"> resources and</font>

185
00:08:27,130 --> 00:08:32,710
that<font color="#E5E5E5"> was it any questions right any</font>

186
00:08:31,100 --> 00:08:35,710
questions

187
00:08:32,710 --> 00:08:35,710
Hey

188
00:08:41,260 --> 00:08:47,510
stunt us support<font color="#E5E5E5"> restart we have</font><font color="#CCCCCC"> Intel</font>

189
00:08:44,540 --> 00:08:49,310
<font color="#CCCCCC">KNL system</font><font color="#E5E5E5"> so you can run that in</font>

190
00:08:47,510 --> 00:08:51,769
<font color="#CCCCCC">different node</font><font color="#E5E5E5"> system task support node</font>

191
00:08:49,310 --> 00:08:55,609
restart<font color="#E5E5E5"> but we do not restart it after</font>

192
00:08:51,769 --> 00:08:57,140
every job<font color="#E5E5E5"> all right</font>

193
00:08:55,610 --> 00:09:00,370
and that concludes our lighting talk

194
00:08:57,140 --> 00:09:00,370
<font color="#CCCCCC">round let thank George</font>

