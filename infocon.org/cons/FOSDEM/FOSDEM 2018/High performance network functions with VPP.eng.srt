1
00:00:06,230 --> 00:00:10,139
<font color="#E5E5E5">okay so I'm going to</font>

2
00:00:08,610 --> 00:00:11,879
<font color="#CCCCCC">you know who's</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> be talking about</font>

3
00:00:10,139 --> 00:00:12,730
building<font color="#CCCCCC"> high-performance Network</font>

4
00:00:11,879 --> 00:00:18,279
function

5
00:00:12,730 --> 00:00:19,000
<font color="#E5E5E5">DPP okay hello my name is</font><font color="#CCCCCC"> Ola Turin I'm</font>

6
00:00:18,279 --> 00:00:21,009
an alcoholic

7
00:00:19,000 --> 00:00:22,900
oh sorry I<font color="#CCCCCC"> was wrong</font><font color="#E5E5E5"> meeting I'm</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> coder</font>

8
00:00:21,009 --> 00:00:30,009
<font color="#CCCCCC">I want to be a coder I guess I might</font>

9
00:00:22,900 --> 00:00:32,500
<font color="#CCCCCC">cheat</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> ran a network engineer</font><font color="#E5E5E5"> so my</font>

10
00:00:30,009 --> 00:00:33,879
I got so inspired by the keynote<font color="#CCCCCC"> this</font>

11
00:00:32,500 --> 00:00:37,269
morning with you know all the logo<font color="#E5E5E5"> and</font>

12
00:00:33,879 --> 00:00:39,160
<font color="#E5E5E5">the empathy</font><font color="#CCCCCC"> my wife has just been to</font>

13
00:00:37,269 --> 00:00:42,070
this presentation course and she<font color="#E5E5E5"> told me</font>

14
00:00:39,160 --> 00:00:45,129
<font color="#E5E5E5">that I had 30 seconds to grasp the</font>

15
00:00:42,070 --> 00:00:46,600
attention of the audience and it<font color="#E5E5E5"> really</font>

16
00:00:45,129 --> 00:00:48,489
didn't matter what<font color="#E5E5E5"> you said</font><font color="#CCCCCC"> after that</font>

17
00:00:46,600 --> 00:00:50,140
<font color="#E5E5E5">but if you didn't you know you missed</font>

18
00:00:48,489 --> 00:00:51,930
the first<font color="#E5E5E5"> 30 seconds you could you might</font>

19
00:00:50,140 --> 00:00:56,469
as well<font color="#E5E5E5"> just leave the stage</font>

20
00:00:51,930 --> 00:00:58,629
<font color="#E5E5E5">and you had to start with</font><font color="#CCCCCC"> a story so my</font>

21
00:00:56,469 --> 00:01:00,430
story is<font color="#E5E5E5"> that I come from</font><font color="#CCCCCC"> proprietary</font>

22
00:00:58,629 --> 00:01:05,740
software<font color="#E5E5E5"> in Cisco I've been there for 20</font>

23
00:01:00,430 --> 00:01:09,429
<font color="#CCCCCC">years at least 15 of</font><font color="#E5E5E5"> those working on</font>

24
00:01:05,740 --> 00:01:13,839
<font color="#E5E5E5">proprietary software made me bitter and</font>

25
00:01:09,429 --> 00:01:16,750
cynical<font color="#E5E5E5"> and despondent</font><font color="#CCCCCC"> I guess</font>

26
00:01:13,840 --> 00:01:19,020
because life there was working on you

27
00:01:16,750 --> 00:01:23,860
<font color="#CCCCCC">know with clearcase as your favorite</font>

28
00:01:19,020 --> 00:01:26,679
source code<font color="#E5E5E5"> management system you know</font>

29
00:01:23,860 --> 00:01:28,929
the the<font color="#E5E5E5"> development environment in</font>

30
00:01:26,679 --> 00:01:31,179
itself was was good you know<font color="#CCCCCC"> you got</font>

31
00:01:28,929 --> 00:01:33,580
packets<font color="#E5E5E5"> everything was you know run to</font>

32
00:01:31,179 --> 00:01:35,080
completion in with pointers everywhere

33
00:01:33,580 --> 00:01:37,420
and you had full access<font color="#E5E5E5"> to the packaging</font>

34
00:01:35,080 --> 00:01:38,770
<font color="#E5E5E5">you do whatever you you wanted to do the</font>

35
00:01:37,420 --> 00:01:42,940
<font color="#E5E5E5">packets your date United</font><font color="#CCCCCC"> State</font><font color="#E5E5E5"> to</font>

36
00:01:38,770 --> 00:01:44,470
<font color="#E5E5E5">stretch structures and stuff but then</font>

37
00:01:42,940 --> 00:01:46,390
you<font color="#CCCCCC"> had to</font><font color="#E5E5E5"> deal with all these</font><font color="#CCCCCC"> platforms</font>

38
00:01:44,470 --> 00:01:47,950
<font color="#E5E5E5">which was one thing and the</font><font color="#CCCCCC"> interfaces</font>

39
00:01:46,390 --> 00:01:50,590
to<font color="#CCCCCC"> the platform</font><font color="#E5E5E5"> so you know talk</font><font color="#CCCCCC"> about</font>

40
00:01:47,950 --> 00:01:53,170
pain with<font color="#E5E5E5"> Nick drivers you know we could</font>

41
00:01:50,590 --> 00:01:56,170
always you know walk over to the guy who

42
00:01:53,170 --> 00:01:58,270
wrote<font color="#CCCCCC"> the hardware but or design</font><font color="#E5E5E5"> it but</font>

43
00:01:56,170 --> 00:02:00,340
I didn't<font color="#E5E5E5"> really make</font><font color="#CCCCCC"> life work very much</font>

44
00:01:58,270 --> 00:02:01,750
<font color="#CCCCCC">easier and then you had the other case</font>

45
00:02:00,340 --> 00:02:03,700
of you know we had to double commit all

46
00:02:01,750 --> 00:02:05,649
your code fixes to 150 different

47
00:02:03,700 --> 00:02:07,629
<font color="#E5E5E5">branches and</font><font color="#CCCCCC"> you had to</font><font color="#E5E5E5"> run lots of</font>

48
00:02:05,649 --> 00:02:11,819
sanity checking<font color="#E5E5E5"> or each</font><font color="#CCCCCC"> of those so that</font>

49
00:02:07,629 --> 00:02:17,410
<font color="#E5E5E5">would take you you know a month of of</font>

50
00:02:11,819 --> 00:02:21,030
the pleasurable<font color="#E5E5E5"> work day and but then I</font>

51
00:02:17,410 --> 00:02:24,519
started working<font color="#CCCCCC"> on VPP so VPP is is</font>

52
00:02:21,030 --> 00:02:26,920
<font color="#CCCCCC">open-source something come out of</font><font color="#E5E5E5"> Cisco</font>

53
00:02:24,519 --> 00:02:30,430
but lots of contributors now

54
00:02:26,920 --> 00:02:31,989
it's on github<font color="#CCCCCC"> use Kita's as the sem use</font>

55
00:02:30,430 --> 00:02:34,870
more than tools<font color="#E5E5E5"> modern way</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> doing</font>

56
00:02:31,990 --> 00:02:38,050
development<font color="#CCCCCC"> don't have you talked to any</font>

57
00:02:34,870 --> 00:02:40,690
<font color="#CCCCCC">product managers were you know in my</font>

58
00:02:38,050 --> 00:02:44,110
previous<font color="#CCCCCC"> despondent life</font><font color="#E5E5E5"> you would spend</font>

59
00:02:40,690 --> 00:02:46,840
you know<font color="#E5E5E5"> seven</font><font color="#CCCCCC"> days</font><font color="#E5E5E5"> arguing</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> someone</font>

60
00:02:44,110 --> 00:02:49,060
if you<font color="#E5E5E5"> should write code</font><font color="#CCCCCC"> and now you can</font>

61
00:02:46,840 --> 00:02:52,930
<font color="#E5E5E5">spend you</font><font color="#CCCCCC"> know seven days</font><font color="#E5E5E5"> writing code</font>

62
00:02:49,060 --> 00:02:55,600
<font color="#CCCCCC">and very little</font><font color="#E5E5E5"> argument so that's I'm</font>

63
00:02:52,930 --> 00:02:57,550
very much in love<font color="#E5E5E5"> with open-source I'm</font>

64
00:02:55,600 --> 00:03:00,310
in love with VPP<font color="#E5E5E5"> but I think this way of</font>

65
00:02:57,550 --> 00:03:02,890
<font color="#CCCCCC">working is incredibly much more</font>

66
00:03:00,310 --> 00:03:07,300
efficient and much<font color="#CCCCCC"> more</font><font color="#E5E5E5"> fun and if</font>

67
00:03:02,890 --> 00:03:11,429
things aren't fun at least I built that

68
00:03:07,300 --> 00:03:14,320
way that then I<font color="#E5E5E5"> just shy away from it</font>

69
00:03:11,430 --> 00:03:17,250
<font color="#E5E5E5">whatever</font><font color="#CCCCCC"> must you paid I</font><font color="#E5E5E5"> might be a</font>

70
00:03:14,320 --> 00:03:20,440
<font color="#E5E5E5">first world problem but you get</font><font color="#CCCCCC"> very</font>

71
00:03:17,250 --> 00:03:22,210
reluctant<font color="#CCCCCC"> to do to fix bugs if it takes</font>

72
00:03:20,440 --> 00:03:25,390
you you know<font color="#E5E5E5"> two year from you wrote the</font>

73
00:03:22,210 --> 00:03:29,200
code<font color="#E5E5E5"> until it reaches the customer</font><font color="#CCCCCC"> here</font>

74
00:03:25,390 --> 00:03:31,149
you can fix the bug push the button<font color="#CCCCCC"> runs</font>

75
00:03:29,200 --> 00:03:33,700
<font color="#E5E5E5">through you know</font><font color="#CCCCCC"> all the CI stuff in in</font>

76
00:03:31,150 --> 00:03:36,000
Jenkins<font color="#CCCCCC"> and Garrett and and the code is</font>

77
00:03:33,700 --> 00:03:39,429
there and available for everyone to<font color="#CCCCCC"> use</font>

78
00:03:36,000 --> 00:03:40,960
so<font color="#CCCCCC"> that is a lot more fun I mean does</font>

79
00:03:39,430 --> 00:03:42,510
anyone in<font color="#E5E5E5"> the room disagree with me on</font>

80
00:03:40,960 --> 00:03:45,490
that

81
00:03:42,510 --> 00:03:45,820
<font color="#E5E5E5">no anyone want</font><font color="#CCCCCC"> to go back to the old</font>

82
00:03:45,490 --> 00:03:49,060
world

83
00:03:45,820 --> 00:03:54,730
<font color="#CCCCCC">I mean you have to look so jobs there</font>

84
00:03:49,060 --> 00:03:56,650
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so purpose of this talk is</font>

85
00:03:54,730 --> 00:03:58,200
<font color="#E5E5E5">to make</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> all interview</font><font color="#CCCCCC"> PP developers</font>

86
00:03:56,650 --> 00:04:02,290
at least think<font color="#CCCCCC"> about becoming</font>

87
00:03:58,200 --> 00:04:04,329
<font color="#E5E5E5">contributors to be</font><font color="#CCCCCC"> PP or you know if you</font>

88
00:04:02,290 --> 00:04:06,489
want to do anything with packets<font color="#E5E5E5"> of</font>

89
00:04:04,330 --> 00:04:10,480
<font color="#CCCCCC">course you can do it on snap as well I</font>

90
00:04:06,490 --> 00:04:14,620
mean<font color="#E5E5E5"> snap and and</font><font color="#CCCCCC"> bpp are you know quite</font>

91
00:04:10,480 --> 00:04:16,719
similar<font color="#CCCCCC"> in the approach</font><font color="#E5E5E5"> to life so go a</font>

92
00:04:14,620 --> 00:04:19,298
little bit more<font color="#E5E5E5"> detail on on the VP</font>

93
00:04:16,720 --> 00:04:26,920
architecture and<font color="#E5E5E5"> talk a little bit about</font>

94
00:04:19,298 --> 00:04:30,549
a<font color="#E5E5E5"> DNF written in in</font><font color="#CCCCCC"> VPP so let</font><font color="#E5E5E5"> me just</font>

95
00:04:26,920 --> 00:04:34,120
diverse a little bit with<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> you</font>

96
00:04:30,550 --> 00:04:38,080
<font color="#E5E5E5">know I</font><font color="#CCCCCC"> might take</font><font color="#E5E5E5"> someone here now but</font>

97
00:04:34,120 --> 00:04:39,460
you know this<font color="#CCCCCC"> nfe thing it's clearly</font>

98
00:04:38,080 --> 00:04:41,949
designed by

99
00:04:39,460 --> 00:04:44,440
<font color="#E5E5E5">by someone on you know having retirement</font>

100
00:04:41,949 --> 00:04:48,849
homes in in<font color="#E5E5E5"> South of France which is</font>

101
00:04:44,440 --> 00:04:51,219
<font color="#E5E5E5">where these guys are based</font><font color="#CCCCCC"> it seems</font>

102
00:04:48,849 --> 00:04:54,729
insanely complicated I mean what are

103
00:04:51,220 --> 00:04:56,650
<font color="#CCCCCC">they trying</font><font color="#E5E5E5"> to achieve</font><font color="#CCCCCC"> so I'm what I'm</font>

104
00:04:54,729 --> 00:04:57,659
working on<font color="#CCCCCC"> this summer</font><font color="#E5E5E5"> sort of down here</font>

105
00:04:56,650 --> 00:05:03,039
somewhere

106
00:04:57,660 --> 00:05:10,630
and I'm sure<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is some justification</font>

107
00:05:03,039 --> 00:05:12,130
for<font color="#E5E5E5"> this possibly but yeah III never</font>

108
00:05:10,630 --> 00:05:14,860
figured<font color="#E5E5E5"> it out that might be you</font><font color="#CCCCCC"> know I</font>

109
00:05:12,130 --> 00:05:18,570
might if someone buys me lots of beer

110
00:05:14,860 --> 00:05:22,210
<font color="#E5E5E5">this evening and and you try to inject</font>

111
00:05:18,570 --> 00:05:25,389
some clue into<font color="#E5E5E5"> me why why this is is</font>

112
00:05:22,210 --> 00:05:27,070
really<font color="#CCCCCC"> really necessary</font><font color="#E5E5E5"> especially when</font>

113
00:05:25,389 --> 00:05:29,560
we're talking<font color="#E5E5E5"> about this decompose</font>

114
00:05:27,070 --> 00:05:32,380
<font color="#CCCCCC">Network where you you make these</font><font color="#E5E5E5"> network</font>

115
00:05:29,560 --> 00:05:34,240
functions into small small services I

116
00:05:32,380 --> 00:05:36,190
mean<font color="#CCCCCC"> there's all in a data center</font>

117
00:05:34,240 --> 00:05:38,650
there's all you know your Apache web

118
00:05:36,190 --> 00:05:40,599
servers have doing a few sort of rest

119
00:05:38,650 --> 00:05:44,280
calls do they have all this malarkey

120
00:05:40,599 --> 00:05:46,240
around them<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> not</font>

121
00:05:44,280 --> 00:05:47,888
although you know like I<font color="#CCCCCC"> could see</font><font color="#E5E5E5"> to</font>

122
00:05:46,240 --> 00:05:49,630
Charles who really wants your own net

123
00:05:47,889 --> 00:05:50,949
<font color="#CCCCCC">come from yang in models</font><font color="#E5E5E5"> everything has</font>

124
00:05:49,630 --> 00:05:54,880
to be<font color="#E5E5E5"> modeling in the you know of tools</font>

125
00:05:50,949 --> 00:05:57,430
tools<font color="#E5E5E5"> up on tools</font><font color="#CCCCCC"> Ubuntu to do a</font>

126
00:05:54,880 --> 00:05:59,080
regional<font color="#CCCCCC"> approach</font><font color="#E5E5E5"> for the fork for you</font>

127
00:05:57,430 --> 00:06:01,240
<font color="#CCCCCC">know building Network function doesn't</font>

128
00:05:59,080 --> 00:06:02,770
really<font color="#E5E5E5"> that it was just take take</font>

129
00:06:01,240 --> 00:06:06,669
whatever hardware appliance you have

130
00:06:02,770 --> 00:06:10,810
ported to<font color="#CCCCCC"> and x86 platform stuff</font><font color="#E5E5E5"> it into</font>

131
00:06:06,669 --> 00:06:12,698
a VM and and you're done<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you</font>

132
00:06:10,810 --> 00:06:14,889
can sort of<font color="#E5E5E5"> do the same</font><font color="#CCCCCC"> thing and with</font>

133
00:06:12,699 --> 00:06:18,610
you know<font color="#CCCCCC"> decomposition that you take</font>

134
00:06:14,889 --> 00:06:23,699
take<font color="#E5E5E5"> all the features and to those in</font>

135
00:06:18,610 --> 00:06:26,740
separate<font color="#E5E5E5"> VMs and and declare victory but</font>

136
00:06:23,699 --> 00:06:30,009
what I'm trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at here</font><font color="#CCCCCC"> is</font>

137
00:06:26,740 --> 00:06:34,210
really just<font color="#E5E5E5"> take that micro service that</font>

138
00:06:30,009 --> 00:06:37,990
micro function just<font color="#E5E5E5"> a few sort of bits</font>

139
00:06:34,210 --> 00:06:39,909
of packet mangling and move that on its

140
00:06:37,990 --> 00:06:42,820
own<font color="#E5E5E5"> so that's kind of this idea of</font>

141
00:06:39,909 --> 00:06:47,380
decomposition<font color="#CCCCCC"> and disaggregation</font><font color="#E5E5E5"> and you</font>

142
00:06:42,820 --> 00:06:49,930
can do that with<font color="#CCCCCC"> VPP</font><font color="#E5E5E5"> you can put it on</font>

143
00:06:47,380 --> 00:06:53,139
bare metal<font color="#E5E5E5"> or in DM or in containers or</font>

144
00:06:49,930 --> 00:06:55,610
in eunuch URLs if you like

145
00:06:53,139 --> 00:06:57,440
sort of<font color="#E5E5E5"> the use cases I'm largely</font>

146
00:06:55,610 --> 00:07:02,840
looking at<font color="#E5E5E5"> is with service providers</font><font color="#CCCCCC"> who</font>

147
00:06:57,440 --> 00:07:04,700
need to<font color="#E5E5E5"> ship quite a lot of</font><font color="#CCCCCC"> traffic so</font>

148
00:07:02,840 --> 00:07:08,090
in the last case I'm working<font color="#CCCCCC"> on now is</font>

149
00:07:04,700 --> 00:07:12,979
sort<font color="#E5E5E5"> of building a</font><font color="#CCCCCC"> six</font><font color="#E5E5E5"> tear up bit cgn</font>

150
00:07:08,090 --> 00:07:14,630
like<font color="#CCCCCC"> large gay laugh so it doesn't</font>

151
00:07:12,980 --> 00:07:16,940
really make so much sense<font color="#E5E5E5"> to take that</font>

152
00:07:14,630 --> 00:07:18,139
<font color="#CCCCCC">VM tax or you know have a virtual</font><font color="#E5E5E5"> switch</font>

153
00:07:16,940 --> 00:07:20,210
that then is<font color="#E5E5E5"> going to route packets</font>

154
00:07:18,139 --> 00:07:26,270
<font color="#CCCCCC">through</font><font color="#E5E5E5"> the VMS because you just turn</font>

155
00:07:20,210 --> 00:07:27,888
course<font color="#CCCCCC"> enough providing value so some of</font>

156
00:07:26,270 --> 00:07:30,859
the models were you know looking at

157
00:07:27,889 --> 00:07:32,240
would typically be you know you could

158
00:07:30,860 --> 00:07:33,770
<font color="#CCCCCC">just run</font><font color="#E5E5E5"> you to the bare metal server</font>

159
00:07:32,240 --> 00:07:35,270
then it looks exactly<font color="#E5E5E5"> like all the other</font>

160
00:07:33,770 --> 00:07:38,510
prophets<font color="#CCCCCC"> this is to</font><font color="#E5E5E5"> make right more or</font>

161
00:07:35,270 --> 00:07:42,109
less<font color="#CCCCCC"> but there are some</font><font color="#E5E5E5"> great benefits</font>

162
00:07:38,510 --> 00:07:43,700
<font color="#E5E5E5">in in in sort of the deployment</font><font color="#CCCCCC"> model of</font>

163
00:07:42,110 --> 00:07:46,310
containers and<font color="#CCCCCC"> you can just</font><font color="#E5E5E5"> three speed</font>

164
00:07:43,700 --> 00:07:48,020
a container<font color="#E5E5E5"> within</font><font color="#CCCCCC"> universe and have</font><font color="#E5E5E5"> to</font>

165
00:07:46,310 --> 00:07:50,060
in store constraint<font color="#E5E5E5"> that and deploy so</font>

166
00:07:48,020 --> 00:07:51,770
so perhaps this<font color="#E5E5E5"> person for that</font>

167
00:07:50,060 --> 00:07:53,840
<font color="#E5E5E5">particular use case makes most sense</font>

168
00:07:51,770 --> 00:07:59,419
where we have a container<font color="#E5E5E5"> bound directly</font>

169
00:07:53,840 --> 00:08:01,520
<font color="#E5E5E5">to fiscal physical interfaces and</font><font color="#CCCCCC"> we're</font>

170
00:07:59,419 --> 00:08:05,270
currently about with VPP we currently

171
00:08:01,520 --> 00:08:09,020
have<font color="#E5E5E5"> we can build</font><font color="#CCCCCC"> sa4 for you</font><font color="#E5E5E5"> server</font>

172
00:08:05,270 --> 00:08:13,669
doing what<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> terabyte a little</font>

173
00:08:09,020 --> 00:08:16,070
<font color="#E5E5E5">bit less than a terabyte per second and</font>

174
00:08:13,669 --> 00:08:19,280
<font color="#E5E5E5">that's what fantastic right we're about</font>

175
00:08:16,070 --> 00:08:24,139
<font color="#CCCCCC">a decade after</font><font color="#E5E5E5"> hardware so you can buy</font>

176
00:08:19,280 --> 00:08:28,630
now a you know<font color="#E5E5E5"> one</font><font color="#CCCCCC"> ru server with</font><font color="#E5E5E5"> 6,400</font>

177
00:08:24,139 --> 00:08:31,580
gig ports right 6.4 terabit per second

178
00:08:28,630 --> 00:08:34,909
you know white box programmable with<font color="#CCCCCC"> p4</font>

179
00:08:31,580 --> 00:08:38,110
so you know<font color="#E5E5E5"> where where this is going</font>

180
00:08:34,909 --> 00:08:40,549
you know do you want to do everything on

181
00:08:38,110 --> 00:08:44,180
general-purpose CPUs or not I don't<font color="#E5E5E5"> know</font>

182
00:08:40,549 --> 00:08:47,329
<font color="#E5E5E5">I mean one benefit of competing</font><font color="#CCCCCC"> with</font>

183
00:08:44,179 --> 00:08:48,800
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is that we we make the hardware</font>

184
00:08:47,330 --> 00:08:52,510
<font color="#E5E5E5">guys make their hardware a lot more</font>

185
00:08:48,800 --> 00:08:52,510
programmable as well which<font color="#CCCCCC"> is cool so</font>

186
00:08:53,890 --> 00:09:01,100
<font color="#CCCCCC">what's</font><font color="#E5E5E5"> VPP</font><font color="#CCCCCC"> as said in a</font><font color="#E5E5E5"> few earlier</font>

187
00:08:59,000 --> 00:09:02,750
presentations as well<font color="#E5E5E5"> it's it's largely</font>

188
00:09:01,100 --> 00:09:05,660
framework<font color="#E5E5E5"> for building forwarding</font>

189
00:09:02,750 --> 00:09:06,860
functions it<font color="#E5E5E5"> can be a</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> or if you</font>

190
00:09:05,660 --> 00:09:08,900
want it<font color="#E5E5E5"> to be a reader</font>

191
00:09:06,860 --> 00:09:10,970
it can be a<font color="#E5E5E5"> switch if you only to be a</font>

192
00:09:08,900 --> 00:09:16,579
switch<font color="#E5E5E5"> or it could be anything in</font>

193
00:09:10,970 --> 00:09:20,570
between<font color="#CCCCCC"> written fully in C</font><font color="#E5E5E5"> I think</font>

194
00:09:16,580 --> 00:09:23,180
Andrew<font color="#CCCCCC"> your</font><font color="#E5E5E5"> chenko did a a</font><font color="#CCCCCC"> plugin</font><font color="#E5E5E5"> in Lua</font>

195
00:09:20,570 --> 00:09:26,960
<font color="#E5E5E5">you know taking somebody ideas from the</font>

196
00:09:23,180 --> 00:09:30,650
Lua<font color="#E5E5E5"> guys in the</font><font color="#CCCCCC"> budget</font><font color="#E5E5E5"> so you could look</font>

197
00:09:26,960 --> 00:09:32,990
at alternatives it scales linearly<font color="#CCCCCC"> with</font>

198
00:09:30,650 --> 00:09:37,579
numbers<font color="#E5E5E5"> core number of course you put on</font>

199
00:09:32,990 --> 00:09:41,150
it runs on arm x86<font color="#CCCCCC"> it's purely</font><font color="#E5E5E5"> a data</font>

200
00:09:37,580 --> 00:09:44,570
plane<font color="#E5E5E5"> so somewhere else</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> put the</font>

201
00:09:41,150 --> 00:09:47,480
head on it<font color="#E5E5E5"> although</font><font color="#CCCCCC"> that you know that</font>

202
00:09:44,570 --> 00:09:49,700
<font color="#E5E5E5">boundary is a little bit hard to to</font>

203
00:09:47,480 --> 00:09:52,610
distinguish at at some points you<font color="#E5E5E5"> know</font>

204
00:09:49,700 --> 00:09:53,960
do you put<font color="#CCCCCC"> R inside or outside you put</font>

205
00:09:52,610 --> 00:09:55,870
<font color="#E5E5E5">neighbor discovery inside or outside</font>

206
00:09:53,960 --> 00:09:58,250
where do you put your<font color="#CCCCCC"> reaching protocols</font>

207
00:09:55,870 --> 00:10:01,640
<font color="#E5E5E5">so you can certainly run you know at</font>

208
00:09:58,250 --> 00:10:02,870
home I run<font color="#CCCCCC"> VPP</font><font color="#E5E5E5"> on its own without the</font>

209
00:10:01,640 --> 00:10:06,199
<font color="#E5E5E5">control plane just to see</font><font color="#CCCCCC"> line</font>

210
00:10:02,870 --> 00:10:08,780
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> my CP</font><font color="#CCCCCC"> there works</font>

211
00:10:06,200 --> 00:10:10,370
fine<font color="#E5E5E5"> very integration with the Linux</font>

212
00:10:08,780 --> 00:10:12,439
kernel so you can<font color="#E5E5E5"> pump packets to the</font>

213
00:10:10,370 --> 00:10:15,700
Linux kernel<font color="#E5E5E5"> to run your routing</font>

214
00:10:12,440 --> 00:10:20,990
protocols for example we can pump<font color="#E5E5E5"> over</font>

215
00:10:15,700 --> 00:10:22,790
tap interfaces<font color="#CCCCCC"> safe socket</font><font color="#E5E5E5"> where our own</font>

216
00:10:20,990 --> 00:10:24,380
shared memory interfaces you<font color="#E5E5E5"> can use if</font>

217
00:10:22,790 --> 00:10:26,780
you need<font color="#CCCCCC"> high-performance or we can</font><font color="#E5E5E5"> just</font>

218
00:10:24,380 --> 00:10:29,540
send<font color="#E5E5E5"> a package over</font><font color="#CCCCCC"> a UNIX domain socket</font>

219
00:10:26,780 --> 00:10:31,780
as well lots of tracing logging

220
00:10:29,540 --> 00:10:35,150
encounter so it makes it quite<font color="#CCCCCC"> easy to</font>

221
00:10:31,780 --> 00:10:37,579
<font color="#E5E5E5">after the</font><font color="#CCCCCC"> fact</font><font color="#E5E5E5"> see what happened</font>

222
00:10:35,150 --> 00:10:39,439
we have full tracing of all the you<font color="#E5E5E5"> know</font>

223
00:10:37,580 --> 00:10:41,420
control plane today<font color="#E5E5E5"> to play an API as</font>

224
00:10:39,440 --> 00:10:44,810
well<font color="#CCCCCC"> so you can replay all the</font><font color="#E5E5E5"> commands</font>

225
00:10:41,420 --> 00:10:49,640
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the some controller</font><font color="#CCCCCC"> gave you so you</font>

226
00:10:44,810 --> 00:10:51,979
can easy<font color="#E5E5E5"> to debug</font><font color="#CCCCCC"> you know so VPP</font><font color="#E5E5E5"> enough</font>

227
00:10:49,640 --> 00:10:55,370
<font color="#CCCCCC">senses an OS just</font><font color="#E5E5E5"> without</font><font color="#CCCCCC"> the bootloader</font>

228
00:10:51,980 --> 00:10:57,140
<font color="#CCCCCC">and I had unicorns</font><font color="#E5E5E5"> in parantesis there I</font>

229
00:10:55,370 --> 00:10:59,120
really would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to put it on a unicorn</font>

230
00:10:57,140 --> 00:11:01,189
and<font color="#E5E5E5"> had that bootloader and that would</font>

231
00:10:59,120 --> 00:11:05,270
make<font color="#E5E5E5"> it its own OS but it has a</font>

232
00:11:01,190 --> 00:11:07,430
scheduler it has likely processes<font color="#CCCCCC"> he's a</font>

233
00:11:05,270 --> 00:11:10,670
fairly self-contained<font color="#CCCCCC"> useful an</font>

234
00:11:07,430 --> 00:11:13,430
application<font color="#CCCCCC"> we also have hosts stacked</font>

235
00:11:10,670 --> 00:11:17,180
with our own<font color="#E5E5E5"> TCP implementation</font><font color="#CCCCCC"> SCTP is</font>

236
00:11:13,430 --> 00:11:18,739
also<font color="#E5E5E5"> also coming and the main drivers</font>

237
00:11:17,180 --> 00:11:20,300
beautiful physical<font color="#CCCCCC"> Hardware they come</font>

238
00:11:18,740 --> 00:11:23,060
from DP DK

239
00:11:20,300 --> 00:11:25,310
we also have you know<font color="#CCCCCC"> AF packet tap</font>

240
00:11:23,060 --> 00:11:28,069
<font color="#CCCCCC">mammoths</font><font color="#E5E5E5"> and I think you know</font><font color="#CCCCCC"> it would</font>

241
00:11:25,310 --> 00:11:30,619
<font color="#E5E5E5">make sense to put</font><font color="#CCCCCC"> VPP</font><font color="#E5E5E5"> on top of your AF</font>

242
00:11:28,070 --> 00:11:32,870
<font color="#CCCCCC">XD p as well</font><font color="#E5E5E5"> that would be</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> be</font>

243
00:11:30,620 --> 00:11:35,089
<font color="#E5E5E5">a cool</font><font color="#CCCCCC"> thing to have a thing</font><font color="#E5E5E5"> because</font>

244
00:11:32,870 --> 00:11:37,430
then you could you know you could<font color="#E5E5E5"> split</font>

245
00:11:35,089 --> 00:11:39,470
off control plane traffic<font color="#CCCCCC"> before it hit</font>

246
00:11:37,430 --> 00:11:41,449
VPP for<font color="#CCCCCC"> example so you</font><font color="#E5E5E5"> just left VPP</font>

247
00:11:39,470 --> 00:11:43,580
<font color="#E5E5E5">were doing the data plane and then you</font>

248
00:11:41,450 --> 00:11:47,510
could you know<font color="#CCCCCC"> splitted</font><font color="#E5E5E5"> displayed TCP</font>

249
00:11:43,580 --> 00:11:54,709
port<font color="#CCCCCC"> 179 for</font><font color="#E5E5E5"> BGP for example off in a</font>

250
00:11:47,510 --> 00:11:56,600
<font color="#CCCCCC">XTP</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> send a</font><font color="#E5E5E5"> direct little disco so</font>

251
00:11:54,709 --> 00:11:58,329
you know the highlights this is more for

252
00:11:56,600 --> 00:12:02,330
<font color="#CCCCCC">the people downloading the slide</font>

253
00:11:58,330 --> 00:12:06,050
<font color="#E5E5E5">afterwards so some of the main</font>

254
00:12:02,330 --> 00:12:09,290
<font color="#E5E5E5">differences in in the</font><font color="#CCCCCC"> PP vs. Cisco IOS</font>

255
00:12:06,050 --> 00:12:11,089
which I used<font color="#E5E5E5"> to work on was in iOS we</font>

256
00:12:09,290 --> 00:12:12,500
did<font color="#E5E5E5"> scalar packet processing which i</font>

257
00:12:11,089 --> 00:12:14,750
think is what a<font color="#CCCCCC"> Linux kernel</font><font color="#E5E5E5"> does as</font>

258
00:12:12,500 --> 00:12:17,540
well which is take a single<font color="#E5E5E5"> packet and</font>

259
00:12:14,750 --> 00:12:20,930
run it through every feature you<font color="#CCCCCC"> could</font>

260
00:12:17,540 --> 00:12:24,349
imagine you<font color="#E5E5E5"> know form rx 2 TX and you</font>

261
00:12:20,930 --> 00:12:27,050
would have lots of get an instruction

262
00:12:24,350 --> 00:12:28,760
cache<font color="#CCCCCC"> would you get</font><font color="#E5E5E5"> lots of me sister</font>

263
00:12:27,050 --> 00:12:30,500
<font color="#E5E5E5">you don't flow that because the number</font>

264
00:12:28,760 --> 00:12:33,080
instructions you<font color="#E5E5E5"> passed on a packet</font>

265
00:12:30,500 --> 00:12:36,430
<font color="#CCCCCC">would be very high so the difference</font>

266
00:12:33,080 --> 00:12:40,400
<font color="#CCCCCC">here is that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> take a fairly</font><font color="#E5E5E5"> limited</font>

267
00:12:36,430 --> 00:12:44,060
set<font color="#CCCCCC"> of instructions run those on on up</font>

268
00:12:40,400 --> 00:12:46,100
to 256 packets<font color="#CCCCCC"> and so the first</font><font color="#E5E5E5"> packet</font>

269
00:12:44,060 --> 00:12:47,839
heats up the cache and then<font color="#E5E5E5"> you run the</font>

270
00:12:46,100 --> 00:12:49,850
rest<font color="#E5E5E5"> more or less for free and that also</font>

271
00:12:47,839 --> 00:12:51,920
has benefits<font color="#CCCCCC"> for the for the data cache</font>

272
00:12:49,850 --> 00:12:55,339
because<font color="#E5E5E5"> the tables you look up</font><font color="#CCCCCC"> and you</font>

273
00:12:51,920 --> 00:13:00,380
look<font color="#E5E5E5"> at one particular type</font><font color="#CCCCCC"> of table</font><font color="#E5E5E5"> for</font>

274
00:12:55,339 --> 00:13:02,540
that graph<font color="#CCCCCC"> note we have lots of data</font>

275
00:13:00,380 --> 00:13:04,939
structures<font color="#CCCCCC"> that are are you know</font>

276
00:13:02,540 --> 00:13:07,370
designed and optimized<font color="#E5E5E5"> for packet</font>

277
00:13:04,940 --> 00:13:09,770
forwarding<font color="#E5E5E5"> we don't use pointers we use</font>

278
00:13:07,370 --> 00:13:13,400
indexes or a dynamic arrays which are

279
00:13:09,770 --> 00:13:15,500
very nice to program against each of

280
00:13:13,400 --> 00:13:16,850
these graph nodes are relatively

281
00:13:15,500 --> 00:13:18,290
independent and you could sort of

282
00:13:16,850 --> 00:13:20,240
<font color="#E5E5E5">assemble the graph any which way you</font>

283
00:13:18,290 --> 00:13:22,670
<font color="#E5E5E5">like to</font><font color="#CCCCCC"> achieve whatever forwarding</font>

284
00:13:20,240 --> 00:13:25,370
function you want of<font color="#CCCCCC"> course they are you</font>

285
00:13:22,670 --> 00:13:26,810
know you can't combine your random graph

286
00:13:25,370 --> 00:13:30,050
functions because I wouldn't necessarily

287
00:13:26,810 --> 00:13:32,660
<font color="#E5E5E5">make sense but you can you can add on</font>

288
00:13:30,050 --> 00:13:34,010
graphs as you know as plugins and<font color="#E5E5E5"> you</font>

289
00:13:32,660 --> 00:13:37,490
<font color="#E5E5E5">can inject</font>

290
00:13:34,010 --> 00:13:41,680
or program the graph<font color="#CCCCCC"> in quite a few</font>

291
00:13:37,490 --> 00:13:41,680
places<font color="#CCCCCC"> to you know to add new functions</font>

292
00:13:45,100 --> 00:13:53,510
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> not me I think and we</font><font color="#CCCCCC"> have you</font>

293
00:13:51,500 --> 00:13:59,110
know pretty<font color="#E5E5E5"> much all the features you</font>

294
00:13:53,510 --> 00:14:01,970
<font color="#E5E5E5">they expect from a from sort of a a</font>

295
00:13:59,110 --> 00:14:07,600
framework we have<font color="#E5E5E5"> all the tunneling</font>

296
00:14:01,970 --> 00:14:09,580
mechanisms we have v4 v6 MPLS<font color="#E5E5E5"> bridging</font>

297
00:14:07,600 --> 00:14:12,800
[Music]

298
00:14:09,580 --> 00:14:19,280
sweat<font color="#E5E5E5"> segments routing we have in banner</font>

299
00:14:12,800 --> 00:14:21,740
<font color="#CCCCCC">a.m. IPSec VPN Lisp support lots</font><font color="#E5E5E5"> of</font>

300
00:14:19,280 --> 00:14:24,439
monitoring stuff<font color="#CCCCCC"> a very</font><font color="#E5E5E5"> easy and quick</font>

301
00:14:21,740 --> 00:14:26,330
<font color="#CCCCCC">to</font><font color="#E5E5E5"> to write new functions for for</font><font color="#CCCCCC"> v3 and</font>

302
00:14:24,440 --> 00:14:29,120
these are all<font color="#CCCCCC"> written from scratch I</font>

303
00:14:26,330 --> 00:14:31,940
mean earlier today we<font color="#E5E5E5"> had an argument</font>

304
00:14:29,120 --> 00:14:34,610
about you know how much do you want to

305
00:14:31,940 --> 00:14:37,040
care about<font color="#E5E5E5"> your legacy legacy code and</font>

306
00:14:34,610 --> 00:14:39,710
in some cases it<font color="#CCCCCC"> is nice to just write</font>

307
00:14:37,040 --> 00:14:42,709
<font color="#E5E5E5">things again from scratch because you</font>

308
00:14:39,710 --> 00:14:44,510
tend<font color="#E5E5E5"> to become better you know you</font>

309
00:14:42,710 --> 00:14:45,980
really get things right for<font color="#CCCCCC"> the first</font>

310
00:14:44,510 --> 00:14:47,689
<font color="#E5E5E5">time you implement something and you</font>

311
00:14:45,980 --> 00:14:49,520
know<font color="#E5E5E5"> perhaps on the fourth time you</font>

312
00:14:47,690 --> 00:14:54,230
implement<font color="#CCCCCC"> are you've got it reasonably</font>

313
00:14:49,520 --> 00:14:57,380
right so<font color="#CCCCCC"> I'll at least</font><font color="#E5E5E5"> I'm not</font><font color="#CCCCCC"> too</font>

314
00:14:54,230 --> 00:14:59,680
worried about<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> you provide a</font>

315
00:14:57,380 --> 00:15:01,580
nice new and different and<font color="#E5E5E5"> better</font>

316
00:14:59,680 --> 00:15:03,109
<font color="#E5E5E5">programming environment and then</font>

317
00:15:01,580 --> 00:15:09,050
implement things<font color="#E5E5E5"> from scratch</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font>

318
00:15:03,110 --> 00:15:11,450
carrying things with you<font color="#E5E5E5"> legacy things</font>

319
00:15:09,050 --> 00:15:17,329
with you aren't<font color="#CCCCCC"> necessarily a great</font>

320
00:15:11,450 --> 00:15:20,450
thing so I think you had some of<font color="#CCCCCC"> this</font>

321
00:15:17,330 --> 00:15:24,190
with with Jerome which is I hate<font color="#E5E5E5"> people</font>

322
00:15:20,450 --> 00:15:24,190
doing<font color="#CCCCCC"> oh my god</font>

323
00:15:29,190 --> 00:15:33,900
<font color="#CCCCCC">a few</font><font color="#E5E5E5"> people who do these</font><font color="#CCCCCC"> things with</font>

324
00:15:31,650 --> 00:15:37,199
slides should have a you<font color="#E5E5E5"> know they could</font>

325
00:15:33,900 --> 00:15:39,120
be<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the sort of entertainment industry</font>

326
00:15:37,200 --> 00:15:42,110
or<font color="#E5E5E5"> something have to</font><font color="#CCCCCC"> be an engineering</font>

327
00:15:39,120 --> 00:15:46,530
but he's kind of<font color="#CCCCCC"> sexy at all I</font><font color="#E5E5E5"> mean we</font>

328
00:15:42,110 --> 00:15:49,430
we have<font color="#CCCCCC"> a rx point here you put a gain</font>

329
00:15:46,530 --> 00:15:54,150
input<font color="#CCCCCC"> for example spins</font><font color="#E5E5E5"> round</font><font color="#CCCCCC"> poles</font><font color="#E5E5E5"> gets</font>

330
00:15:49,430 --> 00:15:55,800
256 packets<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> frame since that</font><font color="#CCCCCC"> too</font>

331
00:15:54,150 --> 00:15:59,939
depending you<font color="#E5E5E5"> know if it's Hardware off</font>

332
00:15:55,800 --> 00:16:01,680
no<font color="#CCCCCC"> Hardware on the eight</font><font color="#E5E5E5"> and a type</font>

333
00:15:59,940 --> 00:16:03,480
people just send it directly<font color="#E5E5E5"> drive to</font>

334
00:16:01,680 --> 00:16:05,520
<font color="#CCCCCC">six input otherwise it</font><font color="#E5E5E5"> goes to Ethernet</font>

335
00:16:03,480 --> 00:16:08,280
input and it splits<font color="#E5E5E5"> off here depending</font>

336
00:16:05,520 --> 00:16:10,250
on what<font color="#E5E5E5"> ot2 type you have</font><font color="#CCCCCC"> and it so</font>

337
00:16:08,280 --> 00:16:13,920
trickles through this this graph

338
00:16:10,250 --> 00:16:15,960
checksum is already done by the by the

339
00:16:13,920 --> 00:16:18,479
neck<font color="#CCCCCC"> and then it goes to v4 look up and</font>

340
00:16:15,960 --> 00:16:21,330
you can do you know<font color="#E5E5E5"> rewrite or you can</font>

341
00:16:18,480 --> 00:16:23,510
do load balancing<font color="#CCCCCC"> in case you have you</font>

342
00:16:21,330 --> 00:16:28,080
know multiple<font color="#CCCCCC"> adjacencies going to the</font>

343
00:16:23,510 --> 00:16:30,930
to the same destination in the field<font color="#E5E5E5"> so</font>

344
00:16:28,080 --> 00:16:33,000
<font color="#E5E5E5">you end up you know</font><font color="#CCCCCC"> with most</font><font color="#E5E5E5"> orbit or</font>

345
00:16:30,930 --> 00:16:35,729
the<font color="#E5E5E5"> frame are going more or less the</font>

346
00:16:33,000 --> 00:16:38,010
same path because what<font color="#CCCCCC"> we've seen in</font><font color="#E5E5E5"> in</font>

347
00:16:35,730 --> 00:16:40,470
real traffic is that you know the<font color="#CCCCCC"> the</font>

348
00:16:38,010 --> 00:16:42,960
next packet pretty much looks are quite

349
00:16:40,470 --> 00:16:51,950
likely to<font color="#CCCCCC"> look like the one you're</font>

350
00:16:42,960 --> 00:16:51,950
dealing<font color="#CCCCCC"> with now blah blah blah</font>

351
00:16:53,660 --> 00:17:01,469
<font color="#E5E5E5">so I was thinking I should show you one</font>

352
00:16:58,340 --> 00:17:03,060
<font color="#E5E5E5">natural function that that we built on</font>

353
00:17:01,470 --> 00:17:06,630
top of the EPP this is a very<font color="#E5E5E5"> very</font>

354
00:17:03,060 --> 00:17:10,230
<font color="#E5E5E5">simple one</font><font color="#CCCCCC"> I don't know if anyone knows</font>

355
00:17:06,630 --> 00:17:12,510
<font color="#CCCCCC">about India it so I'm also in</font><font color="#E5E5E5"> the ITF</font>

356
00:17:10,230 --> 00:17:14,940
and<font color="#E5E5E5"> we done lots of</font><font color="#CCCCCC"> work on on v4 to</font>

357
00:17:12,510 --> 00:17:17,879
these six transition mechanisms and this

358
00:17:14,940 --> 00:17:21,900
is one of<font color="#CCCCCC"> these how can you make v4 live</font>

359
00:17:17,880 --> 00:17:25,620
forever<font color="#E5E5E5"> mechanisms which tunnels</font><font color="#CCCCCC"> v4 or</font>

360
00:17:21,900 --> 00:17:27,720
<font color="#CCCCCC">v6 but it splits</font><font color="#E5E5E5"> the v4 address so if</font>

361
00:17:25,619 --> 00:17:29,459
this is an service provider and it has

362
00:17:27,720 --> 00:17:31,320
you know a thousand you can take one

363
00:17:29,460 --> 00:17:34,080
single v4 address and split it among a

364
00:17:31,320 --> 00:17:38,270
thousand customers<font color="#E5E5E5"> and each customer</font>

365
00:17:34,080 --> 00:17:41,699
then gets<font color="#E5E5E5"> 64 ports of UDP and TCP space</font>

366
00:17:38,270 --> 00:17:44,220
no other transport protocol works<font color="#E5E5E5"> well</font>

367
00:17:41,700 --> 00:17:48,270
she's so stupid that you<font color="#CCCCCC"> can't use v6</font>

368
00:17:44,220 --> 00:17:50,460
well that's what you<font color="#E5E5E5"> get and well so</font>

369
00:17:48,270 --> 00:17:51,570
that's a fun thing<font color="#CCCCCC"> now with with you</font>

370
00:17:50,460 --> 00:17:54,360
know<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> all these people who</font>

371
00:17:51,570 --> 00:17:56,340
<font color="#E5E5E5">refuse</font><font color="#CCCCCC"> to move to v6 and and they</font><font color="#E5E5E5"> think</font>

372
00:17:54,360 --> 00:17:59,040
that v4 will just continue to<font color="#E5E5E5"> work the</font>

373
00:17:56,340 --> 00:18:01,919
way it's always worked but<font color="#E5E5E5"> no absolutely</font>

374
00:17:59,040 --> 00:18:05,129
not I mean we're we're day by day making

375
00:18:01,920 --> 00:18:08,040
v4 work worse<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> just have to learn</font>

376
00:18:05,130 --> 00:18:09,840
<font color="#CCCCCC">to live with that so we're you know</font>

377
00:18:08,040 --> 00:18:11,250
<font color="#E5E5E5">seriously thinking about you know one of</font>

378
00:18:09,840 --> 00:18:13,050
the issues<font color="#E5E5E5"> with these tunneling things</font>

379
00:18:11,250 --> 00:18:15,420
which I'm sure you guys<font color="#E5E5E5"> have experienced</font>

380
00:18:13,050 --> 00:18:18,090
as<font color="#CCCCCC"> well as fragmentation and we have a</font>

381
00:18:15,420 --> 00:18:20,820
<font color="#CCCCCC">draft coming</font><font color="#E5E5E5"> up at the London IGF now in</font>

382
00:18:18,090 --> 00:18:23,129
<font color="#E5E5E5">March which basically</font><font color="#CCCCCC"> said well</font><font color="#E5E5E5"> don't do</font>

383
00:18:20,820 --> 00:18:24,870
fragmentation because<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> yeah it sucks</font>

384
00:18:23,130 --> 00:18:28,140
<font color="#CCCCCC">I mean throw your fried moves away</font>

385
00:18:24,870 --> 00:18:29,699
anyway<font color="#E5E5E5"> so which makes</font><font color="#CCCCCC"> you learn</font><font color="#E5E5E5"> people</font>

386
00:18:28,140 --> 00:18:30,960
learn<font color="#CCCCCC"> application developers</font><font color="#E5E5E5"> learn very</font>

387
00:18:29,700 --> 00:18:34,220
quickly when you throw all the<font color="#E5E5E5"> packets</font>

388
00:18:30,960 --> 00:18:38,700
away then<font color="#E5E5E5"> it sort of try something</font><font color="#CCCCCC"> else</font>

389
00:18:34,220 --> 00:18:41,100
<font color="#CCCCCC">but this is</font><font color="#E5E5E5"> essentially you know a v6</font>

390
00:18:38,700 --> 00:18:43,650
only<font color="#E5E5E5"> access network v4 packet comes in</font>

391
00:18:41,100 --> 00:18:45,270
here<font color="#E5E5E5"> you look at the</font><font color="#CCCCCC"> destination address</font>

392
00:18:43,650 --> 00:18:47,580
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the port</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> do either an</font>

393
00:18:45,270 --> 00:18:49,800
algorithmic mapping<font color="#CCCCCC"> order or a table</font>

394
00:18:47,580 --> 00:18:52,169
lookup<font color="#E5E5E5"> figure I'll go to these six</font>

395
00:18:49,800 --> 00:18:54,870
destination addresses send it here and

396
00:18:52,170 --> 00:19:00,330
then this runs a traditional<font color="#CCCCCC"> lat</font><font color="#E5E5E5"> for</font>

397
00:18:54,870 --> 00:19:03,360
<font color="#CCCCCC">four and the graphs nodes for that are</font>

398
00:19:00,330 --> 00:19:05,490
are represented here<font color="#E5E5E5"> so you get Ethernet</font>

399
00:19:03,360 --> 00:19:08,490
input<font color="#CCCCCC"> you do a bit more</font>

400
00:19:05,490 --> 00:19:11,510
before checking the<font color="#E5E5E5"> packet we used to be</font>

401
00:19:08,490 --> 00:19:15,260
<font color="#E5E5E5">for lookup table define the</font><font color="#CCCCCC"> particular</font>

402
00:19:11,510 --> 00:19:18,360
mapping<font color="#E5E5E5"> table to use do the mapping</font>

403
00:19:15,260 --> 00:19:20,190
which generates a v6<font color="#E5E5E5"> packet do v6</font>

404
00:19:18,360 --> 00:19:23,820
rewrite and<font color="#CCCCCC"> shape the packet</font><font color="#E5E5E5"> back out</font>

405
00:19:20,190 --> 00:19:26,580
again<font color="#CCCCCC"> and really you know looking at</font>

406
00:19:23,820 --> 00:19:28,740
this as a micro function<font color="#E5E5E5"> it's you can</font>

407
00:19:26,580 --> 00:19:30,570
skip a lots of things<font color="#CCCCCC"> right because this</font>

408
00:19:28,740 --> 00:19:35,160
<font color="#E5E5E5">packet just loops around it goes into</font>

409
00:19:30,570 --> 00:19:36,600
your it<font color="#CCCCCC"> you're you know</font><font color="#E5E5E5"> graphing comes</font>

410
00:19:35,160 --> 00:19:39,480
<font color="#E5E5E5">back out</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> this you know same</font>

411
00:19:36,600 --> 00:19:41,370
interface or there's no complicated

412
00:19:39,480 --> 00:19:44,700
<font color="#E5E5E5">routing function you need to do here</font>

413
00:19:41,370 --> 00:19:47,729
<font color="#E5E5E5">this is just a bump bump in a wire so</font>

414
00:19:44,700 --> 00:19:48,840
this is a few<font color="#E5E5E5"> hundred lines of code 150</font>

415
00:19:47,730 --> 00:19:53,640
lines of code<font color="#CCCCCC"> or something</font>

416
00:19:48,840 --> 00:19:55,860
and for a particular<font color="#CCCCCC"> project we</font><font color="#E5E5E5"> we did</font>

417
00:19:53,640 --> 00:19:59,970
<font color="#E5E5E5">I'm sure the control plane was a million</font>

418
00:19:55,860 --> 00:20:01,740
lines of<font color="#E5E5E5"> codes it</font><font color="#CCCCCC"> doesn't necessarily</font>

419
00:19:59,970 --> 00:20:03,600
make too much sense but as you<font color="#E5E5E5"> see you</font>

420
00:20:01,740 --> 00:20:06,179
know the only complexity here is what to

421
00:20:03,600 --> 00:20:08,100
<font color="#E5E5E5">do with fragmentation because a</font>

422
00:20:06,179 --> 00:20:10,650
<font color="#E5E5E5">fragmented packet you don't see the TCP</font>

423
00:20:08,100 --> 00:20:13,649
header<font color="#E5E5E5"> and you can't do routing here</font>

424
00:20:10,650 --> 00:20:15,450
unless you see<font color="#CCCCCC"> wave for</font><font color="#E5E5E5"> information</font><font color="#CCCCCC"> so</font>

425
00:20:13,650 --> 00:20:22,800
<font color="#CCCCCC">you do virtual reassembly and you have</font>

426
00:20:15,450 --> 00:20:24,990
to deal with<font color="#E5E5E5"> fragments let me see</font>

427
00:20:22,800 --> 00:20:32,460
so I<font color="#E5E5E5"> thought</font><font color="#CCCCCC"> that for</font><font color="#E5E5E5"> fun should just</font>

428
00:20:24,990 --> 00:20:41,929
show<font color="#CCCCCC"> you the code</font><font color="#E5E5E5"> so this is oh this</font><font color="#CCCCCC"> one</font>

429
00:20:32,460 --> 00:20:41,929
<font color="#E5E5E5">no that one no that one no that one yes</font>

430
00:20:41,990 --> 00:20:53,790
<font color="#CCCCCC">so this is the main graph function and I</font>

431
00:20:49,429 --> 00:20:54,420
can<font color="#CCCCCC"> do that</font><font color="#E5E5E5"> I have a Mac I can do</font>

432
00:20:53,790 --> 00:21:00,950
anything

433
00:20:54,420 --> 00:21:00,950
<font color="#CCCCCC">oh my god it's</font><font color="#E5E5E5"> that big enough yeah</font>

434
00:21:01,340 --> 00:21:07,439
so here I get<font color="#CCCCCC"> a frame</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then left</font><font color="#E5E5E5"> from</font>

435
00:21:05,850 --> 00:21:10,100
tells me how packets there are in the

436
00:21:07,440 --> 00:21:17,250
frame then I spin through an outer loop

437
00:21:10,100 --> 00:21:18,959
through<font color="#CCCCCC"> all those packets and I have one</font>

438
00:21:17,250 --> 00:21:22,290
<font color="#E5E5E5">in</font><font color="#CCCCCC"> the loop here</font>

439
00:21:18,960 --> 00:21:30,240
whereas been through two packets at a

440
00:21:22,290 --> 00:21:33,210
time<font color="#E5E5E5"> so I you know it's quite simple I</font>

441
00:21:30,240 --> 00:21:35,940
have<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> few buffer pointers she</font>

442
00:21:33,210 --> 00:21:37,440
indexes the<font color="#E5E5E5"> buffers solely for</font><font color="#CCCCCC"> head</font>

443
00:21:35,940 --> 00:21:41,390
during<font color="#E5E5E5"> these six header information and</font>

444
00:21:37,440 --> 00:21:45,630
support<font color="#E5E5E5"> these are</font><font color="#CCCCCC"> tcp or UDP ports and</font>

445
00:21:41,390 --> 00:21:47,610
then<font color="#E5E5E5"> next tells me where do I expect</font>

446
00:21:45,630 --> 00:21:54,240
these packets to go next<font color="#E5E5E5"> in the graph so</font>

447
00:21:47,610 --> 00:21:58,679
they go<font color="#E5E5E5"> to the v6 lookup</font><font color="#CCCCCC"> then to keep</font>

448
00:21:54,240 --> 00:22:00,600
the<font color="#E5E5E5"> the memory hierarchy busy so now I'm</font>

449
00:21:58,680 --> 00:22:05,160
processing<font color="#E5E5E5"> in this loop I'm</font><font color="#CCCCCC"> processing</font>

450
00:22:00,600 --> 00:22:06,919
packet<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> & 1 but while I'm doing</font><font color="#CCCCCC"> that</font>

451
00:22:05,160 --> 00:22:09,360
I'm already

452
00:22:06,920 --> 00:22:11,550
prefetching information and the headers

453
00:22:09,360 --> 00:22:14,870
for packets<font color="#E5E5E5"> 2 & 3 so</font><font color="#CCCCCC"> they're ready the</font>

454
00:22:11,550 --> 00:22:14,870
next<font color="#CCCCCC"> time they come around the track</font>

455
00:22:15,290 --> 00:22:24,570
then I would set<font color="#CCCCCC"> up a few pointers here</font>

456
00:22:17,820 --> 00:22:27,510
<font color="#CCCCCC">- to</font><font color="#E5E5E5"> the next next frames</font><font color="#CCCCCC"> so these are</font>

457
00:22:24,570 --> 00:22:30,720
the<font color="#E5E5E5"> two next are the frames of in this</font>

458
00:22:27,510 --> 00:22:33,629
case<font color="#CCCCCC"> ip6 lookup so I just</font><font color="#E5E5E5"> assume that</font>

459
00:22:30,720 --> 00:22:36,510
things<font color="#E5E5E5"> are going to go well</font><font color="#CCCCCC"> that I can</font>

460
00:22:33,630 --> 00:22:38,910
send<font color="#CCCCCC"> this to the IP 6 lookup graph note</font>

461
00:22:36,510 --> 00:22:44,190
that might fail<font color="#E5E5E5"> and then I will unwind</font>

462
00:22:38,910 --> 00:22:47,070
this<font color="#E5E5E5"> later here I just get the pointers</font>

463
00:22:44,190 --> 00:22:50,130
from the<font color="#E5E5E5"> the buffer index</font><font color="#CCCCCC"> I get the</font>

464
00:22:47,070 --> 00:22:54,689
heaviest<font color="#E5E5E5"> v4 headers for both of these</font><font color="#CCCCCC"> -</font>

465
00:22:50,130 --> 00:22:56,760
and you look up in<font color="#E5E5E5"> the ins model table I</font>

466
00:22:54,690 --> 00:22:58,980
have to<font color="#E5E5E5"> figure out to get</font><font color="#CCCCCC"> a pointer to</font>

467
00:22:56,760 --> 00:23:04,230
<font color="#E5E5E5">some domain informations</font><font color="#CCCCCC"> that which is</font>

468
00:22:58,980 --> 00:23:10,320
specific for which<font color="#E5E5E5"> basically finds which</font>

469
00:23:04,230 --> 00:23:12,710
v6 user this<font color="#CCCCCC"> is and then I find the TCP</font>

470
00:23:10,320 --> 00:23:12,710
ports

471
00:23:12,770 --> 00:23:19,940
you know decrement the TTL<font color="#CCCCCC"> to lots of</font>

472
00:23:22,850 --> 00:23:28,488
let's see<font color="#E5E5E5"> and then</font>

473
00:23:26,509 --> 00:23:30,919
here I'll<font color="#E5E5E5"> just do the algorithmic</font>

474
00:23:28,489 --> 00:23:32,959
mapping which is basically take you

475
00:23:30,919 --> 00:23:37,099
<font color="#CCCCCC">thirty two thousand four address you</font>

476
00:23:32,959 --> 00:23:39,379
<font color="#CCCCCC">sixteen is a these</font><font color="#E5E5E5"> people are</font><font color="#CCCCCC"> there a</font>

477
00:23:37,099 --> 00:23:44,059
little<font color="#CCCCCC"> bit of big magical all that stuff</font>

478
00:23:39,379 --> 00:23:47,299
<font color="#E5E5E5">and I return you the the first half of</font>

479
00:23:44,059 --> 00:23:50,899
of the resulting<font color="#E5E5E5"> these six address and</font>

480
00:23:47,299 --> 00:23:56,089
then again I have a<font color="#E5E5E5"> similar function</font><font color="#CCCCCC"> to</font>

481
00:23:50,899 --> 00:23:59,658
get<font color="#CCCCCC"> the v6 suffix then I just knew my my</font>

482
00:23:56,089 --> 00:24:03,168
buffer point<font color="#CCCCCC"> or I'll</font><font color="#E5E5E5"> stop all</font><font color="#CCCCCC"> that</font>

483
00:23:59,659 --> 00:24:05,629
information into<font color="#E5E5E5"> a v6 header or to these</font>

484
00:24:03,169 --> 00:24:07,489
exciters actually like so<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> do</font>

485
00:24:05,629 --> 00:24:11,149
everything here for for two<font color="#CCCCCC"> packets at a</font>

486
00:24:07,489 --> 00:24:15,859
time and then I do a little<font color="#CCCCCC"> bit of</font>

487
00:24:11,149 --> 00:24:19,478
checking<font color="#CCCCCC"> to see if if what I expected</font><font color="#E5E5E5"> to</font>

488
00:24:15,859 --> 00:24:22,158
<font color="#CCCCCC">happen was was correct</font><font color="#E5E5E5"> and then I</font>

489
00:24:19,479 --> 00:24:23,959
evaluate<font color="#CCCCCC"> the buffering</font><font color="#E5E5E5"> and Q both of</font>

490
00:24:22,159 --> 00:24:27,199
those two buffers<font color="#E5E5E5"> and then I go</font><font color="#CCCCCC"> back up</font>

491
00:24:23,959 --> 00:24:29,929
<font color="#CCCCCC">again</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then I have a similar loop</font>

492
00:24:27,199 --> 00:24:33,139
just<font color="#E5E5E5"> for the single packet</font><font color="#CCCCCC"> you know if I</font>

493
00:24:29,929 --> 00:24:35,029
got<font color="#CCCCCC"> 255 packets</font><font color="#E5E5E5"> right there will be one</font>

494
00:24:33,139 --> 00:24:39,998
left over<font color="#E5E5E5"> and I do the</font><font color="#CCCCCC"> same thing for</font>

495
00:24:35,029 --> 00:24:42,919
that one<font color="#CCCCCC"> as one and that</font><font color="#E5E5E5"> does</font><font color="#CCCCCC"> the sense</font>

496
00:24:39,999 --> 00:24:45,499
essentially<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the code required for</font>

497
00:24:42,919 --> 00:24:51,109
<font color="#E5E5E5">that for that you know micro function if</font>

498
00:24:45,499 --> 00:24:52,789
you<font color="#E5E5E5"> like right</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's just an</font>

499
00:24:51,109 --> 00:24:56,349
introduction know how you know<font color="#E5E5E5"> vehicle P</font>

500
00:24:52,789 --> 00:25:00,109
code can look like<font color="#E5E5E5"> code is on github and</font>

501
00:24:56,349 --> 00:25:09,549
<font color="#E5E5E5">it's all open source or we do go into</font>

502
00:25:00,109 --> 00:25:09,549
<font color="#E5E5E5">that repository and yes any question</font>

503
00:25:14,430 --> 00:25:21,780
yes yep

504
00:25:32,090 --> 00:25:37,830
so<font color="#E5E5E5"> so actually the tiny delay it could</font>

505
00:25:36,809 --> 00:25:39,270
be could<font color="#CCCCCC"> you</font><font color="#E5E5E5"> repeat</font><font color="#CCCCCC"> the question</font>

506
00:25:37,830 --> 00:25:42,600
<font color="#E5E5E5">oh sorry</font><font color="#CCCCCC"> yeah so the question is that</font>

507
00:25:39,270 --> 00:25:44,668
<font color="#CCCCCC">you loop is it you know really worth it</font>

508
00:25:42,600 --> 00:25:49,580
you know what<font color="#CCCCCC"> gains do you see for that</font>

509
00:25:44,669 --> 00:25:53,340
I<font color="#E5E5E5"> mean we do see significant gains</font><font color="#CCCCCC"> doing</font>

510
00:25:49,580 --> 00:25:55,830
juleps<font color="#E5E5E5"> actually to the extent that we're</font>

511
00:25:53,340 --> 00:26:00,510
doing<font color="#CCCCCC"> quad loops in the v4</font><font color="#E5E5E5"> lookup node</font>

512
00:25:55,830 --> 00:26:02,879
now<font color="#CCCCCC"> I also</font><font color="#E5E5E5"> do remember the first you</font>

513
00:26:00,510 --> 00:26:04,919
<font color="#E5E5E5">know when I go to CVP</font><font color="#CCCCCC"> Pecola</font><font color="#E5E5E5"> hope gee</font>

514
00:26:02,880 --> 00:26:06,720
there must be a prettier way of writing

515
00:26:04,919 --> 00:26:09,630
this<font color="#E5E5E5"> could</font><font color="#CCCCCC"> I be you know domain-specific</font>

516
00:26:06,720 --> 00:26:13,260
language Oh could you somehow make this

517
00:26:09,630 --> 00:26:14,820
less than<font color="#E5E5E5"> some some guy who</font><font color="#CCCCCC"> invented</font>

518
00:26:13,260 --> 00:26:16,980
<font color="#CCCCCC">this de boracay yes you know lots of</font>

519
00:26:14,820 --> 00:26:18,870
<font color="#E5E5E5">Emacs skeletons</font><font color="#CCCCCC"> doesn't give you all the</font>

520
00:26:16,980 --> 00:26:21,000
outline of this and I know I<font color="#E5E5E5"> would</font>

521
00:26:18,870 --> 00:26:23,039
always write the single packet loop

522
00:26:21,000 --> 00:26:26,340
first and then when you optimize you and

523
00:26:23,039 --> 00:26:28,379
go<font color="#E5E5E5"> back in and do the do loop one issue</font>

524
00:26:26,340 --> 00:26:30,418
is studied it you know so much CPU

525
00:26:28,380 --> 00:26:32,789
specific right so you<font color="#E5E5E5"> might not get a</font>

526
00:26:30,419 --> 00:26:36,600
<font color="#CCCCCC">total it might be great for</font><font color="#E5E5E5"> you know the</font>

527
00:26:32,789 --> 00:26:38,730
latest<font color="#E5E5E5"> it was eons it might not be the</font>

528
00:26:36,600 --> 00:26:40,500
same on a different platform so I yeah I

529
00:26:38,730 --> 00:26:43,440
I get your point<font color="#E5E5E5"> right it would be</font><font color="#CCCCCC"> I</font>

530
00:26:40,500 --> 00:26:45,929
looked an improvement if this could<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font>

531
00:26:43,440 --> 00:26:48,330
lot<font color="#E5E5E5"> more</font><font color="#CCCCCC"> flexible and you could you know</font>

532
00:26:45,929 --> 00:26:52,380
even dynamically adjust this right if

533
00:26:48,330 --> 00:26:57,990
you<font color="#E5E5E5"> or at least generate code in it in a</font>

534
00:26:52,380 --> 00:26:59,250
better<font color="#E5E5E5"> way yeah if nothing else thank</font>

535
00:26:57,990 --> 00:27:05,670
you

536
00:26:59,250 --> 00:27:05,670
[Applause]

