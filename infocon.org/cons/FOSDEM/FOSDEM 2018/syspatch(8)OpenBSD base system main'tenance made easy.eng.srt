1
00:00:05,740 --> 00:00:12,129
hello everyone<font color="#E5E5E5"> welcome thank you for</font>

2
00:00:08,710 --> 00:00:15,520
<font color="#CCCCCC">attending this</font><font color="#E5E5E5"> talk today I'm gonna talk</font>

3
00:00:12,129 --> 00:00:21,070
about<font color="#CCCCCC"> small but handy tool called</font><font color="#E5E5E5"> sis</font>

4
00:00:15,520 --> 00:00:25,330
patch so quickly when I saw my<font color="#E5E5E5"> name is</font>

5
00:00:21,070 --> 00:00:27,880
<font color="#CCCCCC">Antoine</font><font color="#E5E5E5"> I'm known as a</font><font color="#CCCCCC"> J Couto or a J at</font>

6
00:00:25,330 --> 00:00:30,520
<font color="#CCCCCC">OpenBSD dot org</font><font color="#E5E5E5"> I'm also part of the</font>

7
00:00:27,880 --> 00:00:33,430
gnome foundation<font color="#E5E5E5"> and I mostly work on</font>

8
00:00:30,520 --> 00:00:36,909
anything<font color="#E5E5E5"> that helps me put</font><font color="#CCCCCC"> OpenBSD into</font>

9
00:00:33,430 --> 00:00:41,440
production<font color="#CCCCCC"> and for</font><font color="#E5E5E5"> work I'm</font><font color="#CCCCCC"> a head</font><font color="#E5E5E5"> of a</font>

10
00:00:36,909 --> 00:00:42,579
<font color="#CCCCCC">sari at Vaughan privet so what we're</font>

11
00:00:41,440 --> 00:00:45,760
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> today</font>

12
00:00:42,579 --> 00:00:49,389
<font color="#E5E5E5">sis patch this patch is both a tool and</font>

13
00:00:45,760 --> 00:00:52,059
a<font color="#E5E5E5"> built framework for patches the main</font>

14
00:00:49,389 --> 00:00:56,710
tool is basically a very<font color="#CCCCCC"> small shell</font>

15
00:00:52,059 --> 00:00:58,539
script<font color="#E5E5E5"> 220 line of</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> and then we have</font>

16
00:00:56,710 --> 00:01:00,760
the<font color="#E5E5E5"> build framework that's under user</font>

17
00:00:58,539 --> 00:01:03,760
source the<font color="#CCCCCC"> district says patch which is</font>

18
00:01:00,760 --> 00:01:06,520
the usual source tree of your<font color="#CCCCCC"> OpenBSD</font>

19
00:01:03,760 --> 00:01:09,429
installation<font color="#E5E5E5"> that's mainly BSD make</font>

20
00:01:06,520 --> 00:01:11,619
files that replicate what the release

21
00:01:09,430 --> 00:01:15,460
build process does on open BSD as well

22
00:01:11,619 --> 00:01:18,969
as<font color="#CCCCCC"> or poetry during</font><font color="#E5E5E5"> this talk I'm going</font>

23
00:01:15,460 --> 00:01:21,639
<font color="#CCCCCC">to talk about binary patch</font><font color="#E5E5E5"> that's not</font>

24
00:01:18,969 --> 00:01:24,969
really accurate<font color="#CCCCCC"> because we're not doing</font>

25
00:01:21,640 --> 00:01:27,399
<font color="#E5E5E5">binary</font><font color="#CCCCCC"> gypping but we're actually</font>

26
00:01:24,969 --> 00:01:29,740
<font color="#CCCCCC">providing a new version of binaries</font>

27
00:01:27,399 --> 00:01:31,990
libraries etc<font color="#E5E5E5"> there is just easier to</font>

28
00:01:29,740 --> 00:01:36,310
<font color="#CCCCCC">refer to</font><font color="#E5E5E5"> them as as binary patches</font>

29
00:01:31,990 --> 00:01:40,000
though so first of<font color="#E5E5E5"> all a little bit of</font>

30
00:01:36,310 --> 00:01:43,950
history<font color="#CCCCCC"> anyone who had to</font><font color="#E5E5E5"> actually</font>

31
00:01:40,000 --> 00:01:47,679
maintain<font color="#E5E5E5"> open BSD boxin in production</font>

32
00:01:43,950 --> 00:01:49,719
<font color="#CCCCCC">more</font><font color="#E5E5E5"> than a dozen of them</font><font color="#CCCCCC"> hit this</font>

33
00:01:47,679 --> 00:01:52,509
horrible requirement is that<font color="#E5E5E5"> you cannot</font>

34
00:01:49,719 --> 00:01:54,339
easily keep your system<font color="#E5E5E5"> up to date what</font>

35
00:01:52,509 --> 00:01:56,350
I call up to date is not upgrade<font color="#E5E5E5"> from</font>

36
00:01:54,340 --> 00:01:59,140
one release<font color="#CCCCCC"> to another but just to keep</font>

37
00:01:56,350 --> 00:02:03,158
up to<font color="#CCCCCC"> date regarding</font><font color="#E5E5E5"> security and</font>

38
00:01:59,140 --> 00:02:04,929
reliability<font color="#E5E5E5"> patches so up until says</font>

39
00:02:03,159 --> 00:02:07,840
patch you had basically<font color="#E5E5E5"> two</font><font color="#CCCCCC"> solutions</font>

40
00:02:04,929 --> 00:02:11,380
either<font color="#CCCCCC"> you CVS up and then you have to</font>

41
00:02:07,840 --> 00:02:13,330
recreate<font color="#E5E5E5"> a complete release of course</font>

42
00:02:11,380 --> 00:02:14,920
you have to do that to do<font color="#E5E5E5"> everything</font>

43
00:02:13,330 --> 00:02:17,960
manually you have<font color="#E5E5E5"> to use signifies to</font>

44
00:02:14,920 --> 00:02:23,350
<font color="#E5E5E5">verify that the actual</font>

45
00:02:17,960 --> 00:02:25,790
stuff that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> download is is valid</font><font color="#CCCCCC"> so</font>

46
00:02:23,350 --> 00:02:27,769
<font color="#CCCCCC">the 2d function you could do is build a</font>

47
00:02:25,790 --> 00:02:30,980
release from<font color="#E5E5E5"> scratch CVS up from stable</font>

48
00:02:27,770 --> 00:02:32,600
<font color="#CCCCCC">or you keep the ideas D for example</font><font color="#E5E5E5"> six</font>

49
00:02:30,980 --> 00:02:35,149
point to release and you manually patch

50
00:02:32,600 --> 00:02:37,130
it<font color="#CCCCCC"> and you build</font><font color="#E5E5E5"> only the small part</font>

51
00:02:35,150 --> 00:02:39,560
that you wanted to be patched<font color="#E5E5E5"> the big</font>

52
00:02:37,130 --> 00:02:41,810
issue with that is<font color="#E5E5E5"> that if for</font><font color="#CCCCCC"> example</font>

53
00:02:39,560 --> 00:02:44,270
you have a security<font color="#E5E5E5"> issue in your lip</font>

54
00:02:41,810 --> 00:02:46,640
crypto<font color="#E5E5E5"> then of course we rebuild it with</font>

55
00:02:44,270 --> 00:02:49,670
<font color="#CCCCCC">the patch</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> was install</font><font color="#E5E5E5"> shared</font>

56
00:02:46,640 --> 00:02:51,799
libraries but also<font color="#CCCCCC"> start static library</font>

57
00:02:49,670 --> 00:02:53,899
<font color="#E5E5E5">the problem with static</font><font color="#CCCCCC"> library is that</font>

58
00:02:51,800 --> 00:02:56,030
anything<font color="#E5E5E5"> in the base system that is</font>

59
00:02:53,900 --> 00:02:59,540
actually<font color="#CCCCCC"> using this library will not be</font>

60
00:02:56,030 --> 00:03:02,360
rebuilt<font color="#E5E5E5"> so basically your back half</font>

61
00:02:59,540 --> 00:03:03,799
patch really so the only real way<font color="#CCCCCC"> was to</font>

62
00:03:02,360 --> 00:03:05,660
<font color="#E5E5E5">build a complete release from scratch</font>

63
00:03:03,800 --> 00:03:07,310
and<font color="#CCCCCC"> that's a huge</font><font color="#E5E5E5"> pain because that</font>

64
00:03:05,660 --> 00:03:09,799
<font color="#E5E5E5">means that if you want to</font><font color="#CCCCCC"> update</font><font color="#E5E5E5"> a group</font>

65
00:03:07,310 --> 00:03:11,510
of<font color="#CCCCCC"> machines then you have to do a really</font>

66
00:03:09,800 --> 00:03:13,730
really<font color="#CCCCCC"> big upgrade which is like the</font>

67
00:03:11,510 --> 00:03:16,310
same basically the same thing<font color="#E5E5E5"> that you</font>

68
00:03:13,730 --> 00:03:20,060
would do<font color="#E5E5E5"> from one grade to one release</font>

69
00:03:16,310 --> 00:03:23,470
sorry<font color="#CCCCCC"> to and</font><font color="#E5E5E5"> release</font><font color="#CCCCCC"> plus one</font><font color="#E5E5E5"> so it was</font>

70
00:03:20,060 --> 00:03:27,380
really tedious<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to to</font><font color="#E5E5E5"> maintain</font><font color="#CCCCCC"> boxin</font><font color="#E5E5E5"> a</font>

71
00:03:23,470 --> 00:03:30,800
few years<font color="#E5E5E5"> ago i was hired in the company</font>

72
00:03:27,380 --> 00:03:33,799
called<font color="#CCCCCC"> MTA the company</font><font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the</font>

73
00:03:30,800 --> 00:03:36,470
<font color="#CCCCCC">companies job was to put open BSD</font>

74
00:03:33,800 --> 00:03:38,840
<font color="#E5E5E5">machines into production both servers</font>

75
00:03:36,470 --> 00:03:41,060
and<font color="#E5E5E5"> workstation so we had a huge pool of</font>

76
00:03:38,840 --> 00:03:43,750
<font color="#CCCCCC">open BSD machines to maintain all over</font>

77
00:03:41,060 --> 00:03:47,750
the globe<font color="#E5E5E5"> and of course using official</font>

78
00:03:43,750 --> 00:03:52,190
update<font color="#E5E5E5"> facility was really tedious</font><font color="#CCCCCC"> so we</font>

79
00:03:47,750 --> 00:03:54,560
come<font color="#E5E5E5"> up we came up with a tool to</font>

80
00:03:52,190 --> 00:03:57,380
provide binary patches for<font color="#E5E5E5"> the OpenBSD</font>

81
00:03:54,560 --> 00:04:00,200
based system the tool was based on<font color="#E5E5E5"> the</font>

82
00:03:57,380 --> 00:04:03,049
package tool like when you have a new

83
00:04:00,200 --> 00:04:06,739
patch you just install the package<font color="#E5E5E5"> there</font>

84
00:04:03,050 --> 00:04:09,980
was<font color="#E5E5E5"> two issue with that</font><font color="#CCCCCC"> what it works</font>

85
00:04:06,740 --> 00:04:13,310
<font color="#CCCCCC">relatively fine it really abuses the</font>

86
00:04:09,980 --> 00:04:17,298
package tool framework<font color="#E5E5E5"> also</font><font color="#CCCCCC"> you will get</font>

87
00:04:13,310 --> 00:04:19,040
a mismatch<font color="#E5E5E5"> binary</font><font color="#CCCCCC"> well myths match</font>

88
00:04:17,298 --> 00:04:20,810
signatures in your packages<font color="#E5E5E5"> when you</font>

89
00:04:19,040 --> 00:04:23,690
upgrade you in your release let's say

90
00:04:20,810 --> 00:04:24,540
for example<font color="#E5E5E5"> you</font><font color="#CCCCCC"> a great</font><font color="#E5E5E5"> lip crypto using</font>

91
00:04:23,690 --> 00:04:27,380
using

92
00:04:24,540 --> 00:04:32,070
then the<font color="#E5E5E5"> package</font><font color="#CCCCCC"> shoe framework will</font>

93
00:04:27,380 --> 00:04:34,710
record the checksum<font color="#E5E5E5"> of the binary of</font>

94
00:04:32,070 --> 00:04:36,780
course when you later<font color="#E5E5E5"> upgrade to the new</font>

95
00:04:34,710 --> 00:04:38,520
release then the package would still be

96
00:04:36,780 --> 00:04:41,190
installed<font color="#E5E5E5"> but of course the library will</font>

97
00:04:38,520 --> 00:04:42,210
have<font color="#E5E5E5"> changed so there were all kind of</font>

98
00:04:41,190 --> 00:04:47,070
stuff like<font color="#CCCCCC"> that that we're not really</font>

99
00:04:42,210 --> 00:04:49,229
really nice<font color="#CCCCCC"> I would say</font><font color="#E5E5E5"> so we come up</font>

100
00:04:47,070 --> 00:04:54,000
<font color="#CCCCCC">with</font><font color="#E5E5E5"> a small wrapper script called open</font>

101
00:04:49,230 --> 00:04:56,520
up which is again a shell wrapper<font color="#CCCCCC"> that</font>

102
00:04:54,000 --> 00:05:00,450
we used to to keep both<font color="#CCCCCC"> the base system</font>

103
00:04:56,520 --> 00:05:01,710
<font color="#CCCCCC">and the package up-to-date and it's a</font>

104
00:05:00,450 --> 00:05:04,440
wrapper<font color="#CCCCCC"> because it was doing some stuff</font>

105
00:05:01,710 --> 00:05:07,260
<font color="#CCCCCC">around</font><font color="#E5E5E5"> behind the scenes</font><font color="#CCCCCC"> to to deal with</font>

106
00:05:04,440 --> 00:05:10,590
checksum mismatch and stuff like that<font color="#E5E5E5"> so</font>

107
00:05:07,260 --> 00:05:13,020
it worked nicely<font color="#CCCCCC"> it was a bit ugly</font><font color="#E5E5E5"> and</font>

108
00:05:10,590 --> 00:05:14,909
the main issue was that<font color="#E5E5E5"> it was not</font>

109
00:05:13,020 --> 00:05:16,890
official so while<font color="#CCCCCC"> the world there were</font>

110
00:05:14,910 --> 00:05:19,470
<font color="#E5E5E5">there are</font><font color="#CCCCCC"> a few open BSD developer hired</font>

111
00:05:16,890 --> 00:05:23,539
by<font color="#CCCCCC"> this company that's</font><font color="#E5E5E5"> still not of open</font>

112
00:05:19,470 --> 00:05:23,540
BSD provided<font color="#E5E5E5"> a way to stay up to date</font>

113
00:05:25,370 --> 00:05:34,560
so now situation today<font color="#CCCCCC"> so suspended in</font>

114
00:05:30,630 --> 00:05:38,190
open BSD on September 2016 it was the

115
00:05:34,560 --> 00:05:41,130
result of a hackathon in Cambridge<font color="#E5E5E5"> and</font>

116
00:05:38,190 --> 00:05:43,860
that's a<font color="#E5E5E5"> joint work between</font><font color="#CCCCCC"> Robert Nagi</font>

117
00:05:41,130 --> 00:05:46,500
<font color="#CCCCCC">and myself</font><font color="#E5E5E5"> the first support it really</font>

118
00:05:43,860 --> 00:05:48,810
is was open BSD<font color="#E5E5E5"> six on one so that is</font>

119
00:05:46,500 --> 00:05:52,890
the<font color="#CCCCCC"> previews release</font><font color="#E5E5E5"> since we're at six</font>

120
00:05:48,810 --> 00:05:55,230
<font color="#CCCCCC">point two</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> so this tool only</font><font color="#E5E5E5"> makes</font>

121
00:05:52,890 --> 00:05:57,390
sense<font color="#E5E5E5"> on official releases and kernel</font>

122
00:05:55,230 --> 00:05:59,880
<font color="#E5E5E5">you</font><font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> it if you're using like</font>

123
00:05:57,390 --> 00:06:02,940
current or if you use<font color="#CCCCCC"> it</font><font color="#E5E5E5"> using stable</font>

124
00:05:59,880 --> 00:06:05,219
<font color="#E5E5E5">it's really meant to be</font><font color="#CCCCCC"> an additional</font>

125
00:06:02,940 --> 00:06:09,630
<font color="#E5E5E5">layer on top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> your of the regular</font>

126
00:06:05,220 --> 00:06:15,920
release as of<font color="#E5E5E5"> today we support amd64 re</font>

127
00:06:09,630 --> 00:06:18,570
386 and<font color="#E5E5E5"> 164</font><font color="#CCCCCC"> we only support the last</font>

128
00:06:15,920 --> 00:06:22,200
release so<font color="#CCCCCC"> that means that as of today</font>

129
00:06:18,570 --> 00:06:24,280
<font color="#E5E5E5">we don't support 6.1 anymore although it</font>

130
00:06:22,200 --> 00:06:26,740
is still<font color="#E5E5E5"> supported</font>

131
00:06:24,280 --> 00:06:29,650
<font color="#E5E5E5">patches are still available</font><font color="#CCCCCC"> that has</font><font color="#E5E5E5"> CVS</font>

132
00:06:26,740 --> 00:06:34,300
patches<font color="#E5E5E5"> reason for that is a lack of</font>

133
00:06:29,650 --> 00:06:36,460
<font color="#E5E5E5">manpower</font><font color="#CCCCCC"> and also what's important is</font>

134
00:06:34,300 --> 00:06:39,430
<font color="#CCCCCC">that this tool is really a</font><font color="#E5E5E5"> very small</font>

135
00:06:36,460 --> 00:06:41,409
<font color="#E5E5E5">and stupid tool so we really</font><font color="#CCCCCC"> only want</font>

136
00:06:39,430 --> 00:06:43,810
to<font color="#CCCCCC"> use it to keep</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> up-to-date</font>

137
00:06:41,410 --> 00:06:48,480
<font color="#E5E5E5">regarding</font><font color="#CCCCCC"> security and reliability it's</font>

138
00:06:43,810 --> 00:06:50,710
not a new release of<font color="#CCCCCC"> grade tool and</font>

139
00:06:48,480 --> 00:06:52,930
while shell script well basically

140
00:06:50,710 --> 00:06:55,719
<font color="#E5E5E5">because everything we had to</font><font color="#CCCCCC"> basically</font>

141
00:06:52,930 --> 00:06:57,130
implement<font color="#E5E5E5"> this feature we're already in</font>

142
00:06:55,720 --> 00:07:02,830
the base<font color="#E5E5E5"> system we</font><font color="#CCCCCC"> just had to</font>

143
00:06:57,130 --> 00:07:04,450
orchestrate them<font color="#E5E5E5"> so shell script</font><font color="#CCCCCC"> before</font>

144
00:07:02,830 --> 00:07:06,490
<font color="#E5E5E5">coming up with with this patch we</font>

145
00:07:04,450 --> 00:07:10,360
started looking<font color="#CCCCCC"> a bit about what the</font>

146
00:07:06,490 --> 00:07:12,100
others were doing so in<font color="#E5E5E5"> Linux most of</font>

147
00:07:10,360 --> 00:07:13,630
the time everything<font color="#CCCCCC"> is a package so</font><font color="#E5E5E5"> you</font>

148
00:07:12,100 --> 00:07:16,570
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> really have to deal with that you</font>

149
00:07:13,630 --> 00:07:21,190
you can run your<font color="#CCCCCC"> DNF grade or app to</font>

150
00:07:16,570 --> 00:07:23,560
your<font color="#CCCCCC"> grade or whatever as I said</font><font color="#E5E5E5"> our</font>

151
00:07:21,190 --> 00:07:25,600
<font color="#E5E5E5">intern was completely different we don't</font>

152
00:07:23,560 --> 00:07:28,450
want to be a release of grade tool<font color="#E5E5E5"> we</font>

153
00:07:25,600 --> 00:07:30,250
want to be a<font color="#E5E5E5"> maintenance tool also</font>

154
00:07:28,450 --> 00:07:33,700
<font color="#E5E5E5">sometimes roll backs are tricky when</font>

155
00:07:30,250 --> 00:07:36,850
everything is a package so then we

156
00:07:33,700 --> 00:07:39,700
looked at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> FreeBSD to be</font><font color="#E5E5E5"> honest with</font>

157
00:07:36,850 --> 00:07:43,510
<font color="#CCCCCC">Bill jealous about three beers update</font>

158
00:07:39,700 --> 00:07:46,750
for for quite a long<font color="#CCCCCC"> time we looked into</font>

159
00:07:43,510 --> 00:07:50,710
<font color="#E5E5E5">implementing it</font><font color="#CCCCCC"> but that was quite</font>

160
00:07:46,750 --> 00:07:54,190
complicated<font color="#CCCCCC"> much too clever basically</font>

161
00:07:50,710 --> 00:07:59,109
for us<font color="#E5E5E5"> or at</font><font color="#CCCCCC"> least for me</font><font color="#E5E5E5"> also it's very</font>

162
00:07:54,190 --> 00:08:01,510
slow it's horribly slow and it's also a

163
00:07:59,110 --> 00:08:03,340
tool that<font color="#E5E5E5"> will basically allow you to to</font>

164
00:08:01,510 --> 00:08:04,570
upgrade you in your<font color="#E5E5E5"> release and</font><font color="#CCCCCC"> so</font>

165
00:08:03,340 --> 00:08:06,219
that's something<font color="#E5E5E5"> we didn't want to do</font>

166
00:08:04,570 --> 00:08:08,830
and that<font color="#E5E5E5"> that's also</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> part of the</font>

167
00:08:06,220 --> 00:08:11,080
complication of the<font color="#CCCCCC"> tool</font><font color="#E5E5E5"> and regarding</font>

168
00:08:08,830 --> 00:08:18,070
net bsd and dragonfly<font color="#CCCCCC"> as far</font><font color="#E5E5E5"> as I know</font>

169
00:08:11,080 --> 00:08:20,140
it's a source<font color="#E5E5E5"> only so sis patch as I</font>

170
00:08:18,070 --> 00:08:22,330
said sis patch is really really<font color="#E5E5E5"> simple</font>

171
00:08:20,140 --> 00:08:24,909
tool you<font color="#E5E5E5"> have a four option that we will</font>

172
00:08:22,330 --> 00:08:27,430
<font color="#E5E5E5">detail later but basically if you run it</font>

173
00:08:24,910 --> 00:08:29,590
without any argument<font color="#E5E5E5"> it will install all</font>

174
00:08:27,430 --> 00:08:31,180
the missing patches automatically you

175
00:08:29,590 --> 00:08:33,610
don't have to pass it<font color="#E5E5E5"> any option or</font>

176
00:08:31,180 --> 00:08:35,680
anything<font color="#E5E5E5"> so it's just a small utility</font>

177
00:08:33,610 --> 00:08:37,039
that that will basically<font color="#E5E5E5"> fetch and</font>

178
00:08:35,679 --> 00:08:41,319
install

179
00:08:37,039 --> 00:08:41,319
<font color="#E5E5E5">binary patches and</font><font color="#CCCCCC"> well back of course</font>

180
00:08:41,530 --> 00:08:48,170
within the script<font color="#CCCCCC"> we</font><font color="#E5E5E5"> implemented a small</font>

181
00:08:44,570 --> 00:08:51,320
<font color="#CCCCCC">improved function this function is used</font>

182
00:08:48,170 --> 00:08:53,270
<font color="#CCCCCC">to lose privileges while doing some</font>

183
00:08:51,320 --> 00:08:55,490
sensitive stuff like<font color="#E5E5E5"> going online or</font>

184
00:08:53,270 --> 00:08:57,290
<font color="#CCCCCC">like</font><font color="#E5E5E5"> doing cryptographic verification</font>

185
00:08:55,490 --> 00:09:00,470
and stuff like that<font color="#E5E5E5"> so it's really</font>

186
00:08:57,290 --> 00:09:02,719
stupid<font color="#CCCCCC"> when using all your only su that</font>

187
00:09:00,470 --> 00:09:04,880
you do that<font color="#E5E5E5"> where we drop her</font><font color="#CCCCCC"> villages</font>

188
00:09:02,720 --> 00:09:08,570
to a user called<font color="#E5E5E5"> underscore since patch</font>

189
00:09:04,880 --> 00:09:11,300
and then<font color="#E5E5E5"> we do the dangerous</font><font color="#CCCCCC"> stuff</font>

190
00:09:08,570 --> 00:09:14,360
<font color="#E5E5E5">that's exactly</font><font color="#CCCCCC"> what the</font><font color="#E5E5E5"> OpenBSD</font>

191
00:09:11,300 --> 00:09:18,680
<font color="#E5E5E5">installer does and we wanted to</font><font color="#CCCCCC"> a Munich</font>

192
00:09:14,360 --> 00:09:20,660
<font color="#CCCCCC">that behavior we</font><font color="#E5E5E5"> also well you may be</font>

193
00:09:18,680 --> 00:09:23,420
able you<font color="#E5E5E5"> you may want</font><font color="#CCCCCC"> to pass an</font>

194
00:09:20,660 --> 00:09:26,360
argument sorry to<font color="#CCCCCC"> this function</font><font color="#E5E5E5"> like you</font>

195
00:09:23,420 --> 00:09:28,610
may want to<font color="#E5E5E5"> as an unprivileged user go</font>

196
00:09:26,360 --> 00:09:30,440
online<font color="#E5E5E5"> but of course you want to have</font>

197
00:09:28,610 --> 00:09:32,090
the<font color="#E5E5E5"> right to some time download</font>

198
00:09:30,440 --> 00:09:37,010
something and<font color="#E5E5E5"> write it somewhere so with</font>

199
00:09:32,090 --> 00:09:39,530
the<font color="#CCCCCC"> minus</font><font color="#E5E5E5"> F function</font><font color="#CCCCCC"> the privilege the</font>

200
00:09:37,010 --> 00:09:43,610
<font color="#E5E5E5">the losing of the privilege will happen</font>

201
00:09:39,530 --> 00:09:45,800
after<font color="#CCCCCC"> that the file</font><font color="#E5E5E5"> has been created</font><font color="#CCCCCC"> so</font>

202
00:09:43,610 --> 00:09:48,020
as I said<font color="#E5E5E5"> everything that's a network</font>

203
00:09:45,800 --> 00:09:51,530
<font color="#E5E5E5">related or crypto related will be done</font>

204
00:09:48,020 --> 00:09:54,020
using<font color="#E5E5E5"> this function which is basically</font>

205
00:09:51,530 --> 00:10:00,350
what we<font color="#CCCCCC"> do insist patch</font><font color="#E5E5E5"> to to fetch the</font>

206
00:09:54,020 --> 00:10:02,660
the<font color="#E5E5E5"> sha-256 signature file so</font><font color="#CCCCCC"> let's look</font>

207
00:10:00,350 --> 00:10:05,870
a bit about the<font color="#CCCCCC"> options so we have a</font>

208
00:10:02,660 --> 00:10:08,709
batch -<font color="#E5E5E5"> see that's basically check so</font>

209
00:10:05,870 --> 00:10:13,040
check what the what you pay will<font color="#E5E5E5"> patches</font>

210
00:10:08,710 --> 00:10:15,650
around<font color="#CCCCCC"> so what it</font><font color="#E5E5E5"> does it</font><font color="#CCCCCC"> does it will</font>

211
00:10:13,040 --> 00:10:17,230
fetch<font color="#E5E5E5"> the signature file</font><font color="#CCCCCC"> we're using the</font>

212
00:10:15,650 --> 00:10:21,949
command that<font color="#E5E5E5"> was in the</font><font color="#CCCCCC"> previous slide</font>

213
00:10:17,230 --> 00:10:25,610
<font color="#CCCCCC">it will verify it using</font><font color="#E5E5E5"> signify and then</font>

214
00:10:21,950 --> 00:10:28,520
it will pause and compare what's inside

215
00:10:25,610 --> 00:10:30,350
<font color="#CCCCCC">that signature file</font><font color="#E5E5E5"> to the installed</font>

216
00:10:28,520 --> 00:10:32,000
patch on the system<font color="#CCCCCC"> and</font><font color="#E5E5E5"> from that it</font>

217
00:10:30,350 --> 00:10:35,450
will<font color="#E5E5E5"> build a list and display what's</font>

218
00:10:32,000 --> 00:10:38,090
missing nice thing to notice it's

219
00:10:35,450 --> 00:10:40,460
automatically<font color="#E5E5E5"> one bar or our C system</font>

220
00:10:38,090 --> 00:10:42,080
<font color="#E5E5E5">once you</font><font color="#CCCCCC"> upgrade</font><font color="#E5E5E5"> to a new release so</font>

221
00:10:40,460 --> 00:10:43,790
that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that you will see in your G</font>

222
00:10:42,080 --> 00:10:45,920
message output if you have missing

223
00:10:43,790 --> 00:10:48,250
<font color="#CCCCCC">patches and it will send a mail to route</font>

224
00:10:45,920 --> 00:10:48,250
as well

225
00:10:48,700 --> 00:10:55,810
we have<font color="#CCCCCC"> a - election</font><font color="#E5E5E5"> so that's to</font><font color="#CCCCCC"> list</font>

226
00:10:52,910 --> 00:10:58,040
the actually the actual<font color="#E5E5E5"> installed patch</font>

227
00:10:55,810 --> 00:11:00,020
<font color="#E5E5E5">it's a really stupid functionally we'll</font>

228
00:10:58,040 --> 00:11:02,180
just look into into a specified

229
00:11:00,020 --> 00:11:04,130
directory that's<font color="#CCCCCC"> a versus patch and see</font>

230
00:11:02,180 --> 00:11:06,020
if there's anything there if they<font color="#E5E5E5"> are</font>

231
00:11:04,130 --> 00:11:08,060
<font color="#E5E5E5">that means that we have patches that are</font>

232
00:11:06,020 --> 00:11:15,199
<font color="#E5E5E5">installed on the</font><font color="#CCCCCC"> system and in this case</font>

233
00:11:08,060 --> 00:11:18,229
<font color="#E5E5E5">what it will list them now we have</font>

234
00:11:15,200 --> 00:11:20,720
suspect without<font color="#E5E5E5"> any option</font><font color="#CCCCCC"> as I</font>

235
00:11:18,230 --> 00:11:23,960
mentioned that what<font color="#CCCCCC"> we'll install</font><font color="#E5E5E5"> all</font>

236
00:11:20,720 --> 00:11:26,360
the missing patches on your<font color="#E5E5E5"> machine so</font>

237
00:11:23,960 --> 00:11:28,640
it does a few check before<font color="#E5E5E5"> it remove</font>

238
00:11:26,360 --> 00:11:30,830
anything<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> match the actual</font>

239
00:11:28,640 --> 00:11:35,300
<font color="#E5E5E5">release and that's stored under vs.</font>

240
00:11:30,830 --> 00:11:39,110
patch<font color="#E5E5E5"> the year</font><font color="#CCCCCC"> are key they're</font><font color="#E5E5E5"> contained</font>

241
00:11:35,300 --> 00:11:41,870
<font color="#E5E5E5">the actual</font><font color="#CCCCCC"> CVS</font><font color="#E5E5E5"> deep patch so you can</font>

242
00:11:39,110 --> 00:11:44,930
know<font color="#E5E5E5"> exactly what the patch does</font><font color="#CCCCCC"> and it</font>

243
00:11:41,870 --> 00:11:46,700
also<font color="#E5E5E5"> contains your</font><font color="#CCCCCC"> rollback that if</font>

244
00:11:44,930 --> 00:11:48,439
something is something<font color="#E5E5E5"> bad happen in the</font>

245
00:11:46,700 --> 00:11:52,610
machine<font color="#CCCCCC"> you can easily roll back</font><font color="#E5E5E5"> using</font>

246
00:11:48,440 --> 00:11:54,440
<font color="#E5E5E5">that but there is</font><font color="#CCCCCC"> no garbage</font><font color="#E5E5E5"> collection</font>

247
00:11:52,610 --> 00:11:56,090
between<font color="#CCCCCC"> releases like for example</font><font color="#E5E5E5"> we</font>

248
00:11:54,440 --> 00:11:57,680
have<font color="#E5E5E5"> ten patch was installed on your</font>

249
00:11:56,090 --> 00:12:00,770
machine<font color="#E5E5E5"> you upgrade</font><font color="#CCCCCC"> to a new release</font>

250
00:11:57,680 --> 00:12:03,290
then this directory<font color="#E5E5E5"> is still full of the</font>

251
00:12:00,770 --> 00:12:04,670
<font color="#CCCCCC">old patch and</font><font color="#E5E5E5"> a rollback right so the</font>

252
00:12:03,290 --> 00:12:06,349
first<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this patch does is</font>

253
00:12:04,670 --> 00:12:09,800
remove all the<font color="#E5E5E5"> non matching stuff there</font>

254
00:12:06,350 --> 00:12:12,590
and then it will compare the your

255
00:12:09,800 --> 00:12:14,599
install patches against the available

256
00:12:12,590 --> 00:12:17,360
one<font color="#E5E5E5"> using pretty</font><font color="#CCCCCC"> much the same function</font>

257
00:12:14,600 --> 00:12:20,660
<font color="#CCCCCC">that used to</font><font color="#E5E5E5"> list and check for patches</font>

258
00:12:17,360 --> 00:12:22,870
and then<font color="#E5E5E5"> it will loop during the</font>

259
00:12:20,660 --> 00:12:25,610
unproved download and verification<font color="#E5E5E5"> of</font>

260
00:12:22,870 --> 00:12:28,280
the table<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the remote well</font><font color="#E5E5E5"> that are on</font>

261
00:12:25,610 --> 00:12:30,590
<font color="#E5E5E5">our mirror server it will do a few</font>

262
00:12:28,280 --> 00:12:32,420
<font color="#E5E5E5">checks like make sure that we're writing</font>

263
00:12:30,590 --> 00:12:34,760
on the local file system not<font color="#CCCCCC"> on</font><font color="#E5E5E5"> an</font>

264
00:12:32,420 --> 00:12:37,339
<font color="#E5E5E5">affairs that</font><font color="#CCCCCC"> we have enough</font><font color="#E5E5E5"> space</font><font color="#CCCCCC"> that</font>

265
00:12:34,760 --> 00:12:41,600
the<font color="#CCCCCC"> fight system</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> read-only</font><font color="#E5E5E5"> stuff</font>

266
00:12:37,340 --> 00:12:43,820
like that and from there<font color="#E5E5E5"> we pick the</font>

267
00:12:41,600 --> 00:12:45,260
actual list of file that<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font>

268
00:12:43,820 --> 00:12:48,500
<font color="#E5E5E5">install from the tar.gz</font>

269
00:12:45,260 --> 00:12:51,080
<font color="#E5E5E5">and then we create a</font><font color="#CCCCCC"> rollback trouble</font>

270
00:12:48,500 --> 00:12:55,850
using<font color="#E5E5E5"> the actual fight that are on the</font>

271
00:12:51,080 --> 00:12:58,970
system and then we<font color="#CCCCCC"> save once we have</font>

272
00:12:55,850 --> 00:13:00,180
done that we save install the<font color="#E5E5E5"> patches</font>

273
00:12:58,970 --> 00:13:01,830
that<font color="#CCCCCC"> are contained</font>

274
00:13:00,180 --> 00:13:04,650
the<font color="#CCCCCC"> fight story that</font><font color="#E5E5E5"> are contained</font><font color="#CCCCCC"> in</font>

275
00:13:01,830 --> 00:13:07,500
our patch<font color="#CCCCCC"> we're using</font><font color="#E5E5E5"> install - capital</font>

276
00:13:04,650 --> 00:13:09,540
<font color="#E5E5E5">S which is the the safe install that</font>

277
00:13:07,500 --> 00:13:14,070
<font color="#E5E5E5">unlinked the existing target before</font>

278
00:13:09,540 --> 00:13:17,099
<font color="#E5E5E5">installing a new file and then at the</font>

279
00:13:14,070 --> 00:13:19,080
end<font color="#E5E5E5"> of the run</font><font color="#CCCCCC"> if a new kernel was</font>

280
00:13:17,100 --> 00:13:23,100
installed<font color="#E5E5E5"> that is if it was a kernel</font>

281
00:13:19,080 --> 00:13:28,290
patch<font color="#E5E5E5"> then we run reorder kernel we</font>

282
00:13:23,100 --> 00:13:30,960
order kernel is what we call call on

283
00:13:28,290 --> 00:13:33,810
<font color="#CCCCCC">openbsd so it's pretty</font><font color="#E5E5E5"> new feature</font><font color="#CCCCCC"> that</font>

284
00:13:30,960 --> 00:13:36,180
<font color="#CCCCCC">I think it landed like a</font><font color="#E5E5E5"> like six eight</font>

285
00:13:33,810 --> 00:13:39,599
months<font color="#E5E5E5"> ago an internal address</font>

286
00:13:36,180 --> 00:13:41,880
randomized link<font color="#E5E5E5"> and it's basically a</font>

287
00:13:39,600 --> 00:13:45,180
random<font color="#E5E5E5"> and they run the randomization</font>

288
00:13:41,880 --> 00:13:49,140
feature that we added<font color="#CCCCCC"> to or kernel it</font>

289
00:13:45,180 --> 00:13:51,390
<font color="#E5E5E5">shuffles the object linking order and it</font>

290
00:13:49,140 --> 00:13:54,449
does<font color="#E5E5E5"> that at every reboot select each</font>

291
00:13:51,390 --> 00:13:55,949
kernel<font color="#E5E5E5"> that you guys run on</font><font color="#CCCCCC"> OpenBSD are</font>

292
00:13:54,450 --> 00:13:58,890
completely<font color="#E5E5E5"> different one from one</font>

293
00:13:55,950 --> 00:14:02,460
another<font color="#CCCCCC"> so like the internal Delta</font>

294
00:13:58,890 --> 00:14:04,319
between<font color="#E5E5E5"> functions inside the kernel</font><font color="#CCCCCC"> or</font>

295
00:14:02,460 --> 00:14:06,900
not<font color="#CCCCCC"> where one would expect them to be</font>

296
00:14:04,320 --> 00:14:09,990
<font color="#E5E5E5">which makes some particular case of tags</font>

297
00:14:06,900 --> 00:14:14,040
<font color="#E5E5E5">way more difficult it's it's different</font>

298
00:14:09,990 --> 00:14:16,200
<font color="#E5E5E5">from</font><font color="#CCCCCC"> ksl R which is what</font><font color="#E5E5E5"> I think they're</font>

299
00:14:14,040 --> 00:14:20,160
<font color="#CCCCCC">doing on</font><font color="#E5E5E5"> Linux but it has a similar</font><font color="#CCCCCC"> goal</font>

300
00:14:16,200 --> 00:14:22,050
so basically we don't<font color="#E5E5E5"> need to load the</font>

301
00:14:20,160 --> 00:14:24,810
<font color="#CCCCCC">kernel in a random location because the</font>

302
00:14:22,050 --> 00:14:26,279
kernel<font color="#E5E5E5"> itself is randomized so that</font>

303
00:14:24,810 --> 00:14:32,160
that's the main<font color="#CCCCCC"> difference between Karl</font>

304
00:14:26,279 --> 00:14:35,880
<font color="#CCCCCC">and</font><font color="#E5E5E5"> kasl are we have the</font><font color="#CCCCCC"> minus or option</font>

305
00:14:32,160 --> 00:14:39,959
which will<font color="#E5E5E5"> roll</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> the last</font><font color="#CCCCCC"> installed</font>

306
00:14:35,880 --> 00:14:42,270
patch<font color="#CCCCCC"> it's important</font><font color="#E5E5E5"> to note that you</font>

307
00:14:39,959 --> 00:14:44,579
cannot choose which patch you want to

308
00:14:42,270 --> 00:14:46,410
install<font color="#E5E5E5"> whole patches are cumulative if</font>

309
00:14:44,580 --> 00:14:48,029
you want to roll<font color="#CCCCCC"> back a patch you have</font>

310
00:14:46,410 --> 00:14:50,579
to roll back the<font color="#E5E5E5"> entire sequence of</font>

311
00:14:48,029 --> 00:14:53,040
patch that were<font color="#E5E5E5"> before this one so</font>

312
00:14:50,580 --> 00:14:55,920
that's why you can<font color="#E5E5E5"> only always roll back</font>

313
00:14:53,040 --> 00:14:57,540
the last into an installed one so what

314
00:14:55,920 --> 00:15:00,050
it does basically does<font color="#CCCCCC"> the same kind</font><font color="#E5E5E5"> of</font>

315
00:14:57,540 --> 00:15:02,939
checks as we do when installing patches

316
00:15:00,050 --> 00:15:04,979
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then it will get</font><font color="#E5E5E5"> the roll back</font>

317
00:15:02,940 --> 00:15:09,180
<font color="#E5E5E5">trouble from divorces patch directory</font>

318
00:15:04,980 --> 00:15:11,130
<font color="#E5E5E5">and extract it</font><font color="#CCCCCC"> and then of course we</font>

319
00:15:09,180 --> 00:15:12,609
<font color="#E5E5E5">move the ID all his bad directory and</font>

320
00:15:11,130 --> 00:15:17,800
then we<font color="#E5E5E5"> really into</font>

321
00:15:12,610 --> 00:15:21,519
if needed and we have the<font color="#E5E5E5"> minus capital</font>

322
00:15:17,800 --> 00:15:26,290
R which<font color="#E5E5E5"> is basically remove all the</font>

323
00:15:21,519 --> 00:15:27,760
patches we had a few<font color="#CCCCCC"> use case in the</font>

324
00:15:26,290 --> 00:15:31,329
past<font color="#E5E5E5"> for that so that was where</font><font color="#CCCCCC"> it was</font>

325
00:15:27,760 --> 00:15:38,380
<font color="#CCCCCC">implemented</font><font color="#E5E5E5"> and of course as anything in</font>

326
00:15:31,329 --> 00:15:41,019
sis patch<font color="#CCCCCC"> it stops at the first error so</font>

327
00:15:38,380 --> 00:15:43,779
that's how<font color="#E5E5E5"> to basically handle the</font>

328
00:15:41,019 --> 00:15:46,300
patches so let's<font color="#E5E5E5"> have a look at how the</font>

329
00:15:43,779 --> 00:15:51,760
process<font color="#E5E5E5"> and the building of patches</font>

330
00:15:46,300 --> 00:15:55,149
works<font color="#CCCCCC"> so first of all someone notice an</font>

331
00:15:51,760 --> 00:15:57,130
issue with the code so they will tell

332
00:15:55,149 --> 00:15:59,160
the developer<font color="#E5E5E5"> your code</font><font color="#CCCCCC"> sucks or</font>

333
00:15:57,130 --> 00:16:02,019
whatever has a<font color="#E5E5E5"> security issue in it so</font>

334
00:15:59,160 --> 00:16:04,689
we create a fix<font color="#CCCCCC"> we get of course</font>

335
00:16:02,019 --> 00:16:08,320
validation and review it is<font color="#E5E5E5"> committed to</font>

336
00:16:04,690 --> 00:16:10,480
current<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> boom will back port it</font>

337
00:16:08,320 --> 00:16:15,700
to crow to stable and creates the

338
00:16:10,480 --> 00:16:19,089
initial<font color="#CCCCCC"> errata</font><font color="#E5E5E5"> 5gj will then review the</font>

339
00:16:15,700 --> 00:16:23,190
patch<font color="#CCCCCC"> write the</font><font color="#E5E5E5"> W changes on our website</font>

340
00:16:19,089 --> 00:16:26,380
and we create an announcement<font color="#E5E5E5"> then feel</font>

341
00:16:23,190 --> 00:16:29,079
<font color="#E5E5E5">will sign the</font><font color="#CCCCCC"> patch only a handful of</font>

342
00:16:26,380 --> 00:16:32,050
people<font color="#E5E5E5"> are actually able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> or choose to</font>

343
00:16:29,079 --> 00:16:34,660
sign the<font color="#CCCCCC"> other patch file</font><font color="#E5E5E5"> then Robert</font>

344
00:16:32,050 --> 00:16:37,839
will build the patch<font color="#E5E5E5"> using the</font><font color="#CCCCCC"> assigned</font>

345
00:16:34,660 --> 00:16:40,089
<font color="#CCCCCC">pied</font><font color="#E5E5E5"> Fowler and of course then we test</font>

346
00:16:37,839 --> 00:16:45,640
it and then<font color="#E5E5E5"> make it</font><font color="#CCCCCC"> available on our</font>

347
00:16:40,089 --> 00:16:48,399
mirror that's roughly<font color="#E5E5E5"> our process for</font>

348
00:16:45,640 --> 00:16:53,140
<font color="#E5E5E5">dealing with</font><font color="#CCCCCC"> errata but it's not set in</font>

349
00:16:48,399 --> 00:16:56,560
stone<font color="#E5E5E5"> can vary from time to time so</font>

350
00:16:53,140 --> 00:16:58,720
that's actually on<font color="#E5E5E5"> amd64 and</font><font color="#CCCCCC"> a36 those</font>

351
00:16:56,560 --> 00:17:03,099
are actually the<font color="#E5E5E5"> build machine for this</font>

352
00:16:58,720 --> 00:17:06,069
patch so<font color="#CCCCCC"> that quite small they are built</font>

353
00:17:03,100 --> 00:17:12,130
on machines<font color="#E5E5E5"> that don't have any access</font>

354
00:17:06,069 --> 00:17:17,020
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> internet and we for each patch we</font>

355
00:17:12,130 --> 00:17:20,319
do a<font color="#E5E5E5"> complete rebuild of the</font><font color="#CCCCCC"> release I</font>

356
00:17:17,020 --> 00:17:22,240
<font color="#E5E5E5">will go into that a</font><font color="#CCCCCC"> bit later there are</font>

357
00:17:20,319 --> 00:17:24,970
different<font color="#CCCCCC"> types of patches</font>

358
00:17:22,240 --> 00:17:25,420
we have<font color="#E5E5E5"> colonel we have user land and</font>

359
00:17:24,970 --> 00:17:26,980
which

360
00:17:25,420 --> 00:17:29,860
could be an entire release or we have

361
00:17:26,980 --> 00:17:31,540
exam<font color="#CCCCCC"> Ocala</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> XOR implementation and in</font>

362
00:17:29,860 --> 00:17:36,159
which case we are rebuild<font color="#E5E5E5"> to complete</font>

363
00:17:31,540 --> 00:17:39,700
x.org of course all the patches<font color="#E5E5E5"> are</font>

364
00:17:36,160 --> 00:17:43,090
installed on the build machine and all

365
00:17:39,700 --> 00:17:45,640
the<font color="#CCCCCC"> result</font><font color="#E5E5E5"> of building release</font><font color="#CCCCCC"> our</font>

366
00:17:43,090 --> 00:17:50,980
patched release will<font color="#CCCCCC"> be put into a fake</font>

367
00:17:45,640 --> 00:17:54,160
<font color="#E5E5E5">word directory the patch are created by</font>

368
00:17:50,980 --> 00:17:56,860
basically<font color="#E5E5E5"> drifting</font><font color="#CCCCCC"> our current fake</font>

369
00:17:54,160 --> 00:18:00,190
route with<font color="#E5E5E5"> the previous one and that's</font>

370
00:17:56,860 --> 00:18:11,379
how<font color="#CCCCCC"> we know what changed between</font><font color="#E5E5E5"> the</font>

371
00:18:00,190 --> 00:18:13,990
release and<font color="#E5E5E5"> the patched one yes USB and</font>

372
00:18:11,380 --> 00:18:16,090
yes and<font color="#CCCCCC"> say and the initial fake rope</font>

373
00:18:13,990 --> 00:18:19,780
the rectory is just the<font color="#CCCCCC"> ID extracted</font>

374
00:18:16,090 --> 00:18:22,000
official release so<font color="#E5E5E5"> we have a we have a</font>

375
00:18:19,780 --> 00:18:25,690
make fight for that because<font color="#CCCCCC"> each</font>

376
00:18:22,000 --> 00:18:26,920
<font color="#CCCCCC">dispatch dot MK I won't go too</font><font color="#E5E5E5"> much into</font>

377
00:18:25,690 --> 00:18:29,200
the<font color="#E5E5E5"> data is not interesting but</font>

378
00:18:26,920 --> 00:18:33,820
<font color="#E5E5E5">basically where we stripped a bit what</font>

379
00:18:29,200 --> 00:18:35,620
<font color="#E5E5E5">the OpenBSD release process does as well</font>

380
00:18:33,820 --> 00:18:39,730
as some part<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> port's</font><font color="#E5E5E5"> tree and we</font>

381
00:18:35,620 --> 00:18:42,850
assemble them into the into this file so

382
00:18:39,730 --> 00:18:45,580
we fetch and verify the patch<font color="#E5E5E5"> we signify</font>

383
00:18:42,850 --> 00:18:47,709
we create a fake<font color="#E5E5E5"> route using</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> new</font>

384
00:18:45,580 --> 00:18:50,050
<font color="#CCCCCC">prom option because we</font><font color="#E5E5E5"> don't build as I</font>

385
00:18:47,710 --> 00:18:52,990
mean we're to build as route but<font color="#E5E5E5"> we are</font>

386
00:18:50,050 --> 00:18:54,580
<font color="#E5E5E5">losing privileges quite early so when we</font>

387
00:18:52,990 --> 00:18:58,600
install file we need<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to</font>

388
00:18:54,580 --> 00:19:00,970
<font color="#E5E5E5">install them owned by route etcetera so</font>

389
00:18:58,600 --> 00:19:03,850
we're<font color="#E5E5E5"> using an open mount option for</font>

390
00:19:00,970 --> 00:19:07,150
that<font color="#CCCCCC"> and then we'd if the current built</font>

391
00:19:03,850 --> 00:19:11,219
<font color="#CCCCCC">faith hood against the the</font><font color="#E5E5E5"> the former</font>

392
00:19:07,150 --> 00:19:11,220
one and create<font color="#E5E5E5"> the</font><font color="#CCCCCC"> dispatched horrible</font>

393
00:19:12,390 --> 00:19:18,970
so the main<font color="#CCCCCC"> issue</font><font color="#E5E5E5"> we had when we first</font>

394
00:19:16,960 --> 00:19:21,610
<font color="#CCCCCC">started implementing</font><font color="#E5E5E5"> this patch is that</font>

395
00:19:18,970 --> 00:19:25,120
on<font color="#CCCCCC"> open BSD</font><font color="#E5E5E5"> we don't have reproducible</font>

396
00:19:21,610 --> 00:19:28,629
<font color="#E5E5E5">build there is no effort whatsoever into</font>

397
00:19:25,120 --> 00:19:31,030
into<font color="#E5E5E5"> that right</font><font color="#CCCCCC"> now so we didn't look</font>

398
00:19:28,630 --> 00:19:33,630
for<font color="#E5E5E5"> a reproducible build but we</font><font color="#CCCCCC"> looked</font>

399
00:19:31,030 --> 00:19:38,389
for what I call<font color="#E5E5E5"> deterministic builds</font>

400
00:19:33,630 --> 00:19:39,950
<font color="#E5E5E5">that is that we know that if we build</font>

401
00:19:38,390 --> 00:19:41,480
this release on one machine<font color="#E5E5E5"> and that</font>

402
00:19:39,950 --> 00:19:44,300
release on another machine

403
00:19:41,480 --> 00:19:48,500
<font color="#CCCCCC">we</font><font color="#E5E5E5"> end up</font><font color="#CCCCCC"> with at least the same set of</font>

404
00:19:44,300 --> 00:19:50,740
<font color="#CCCCCC">build options first</font><font color="#E5E5E5"> issue we had was</font>

405
00:19:48,500 --> 00:19:54,070
with the<font color="#E5E5E5"> dr archiver</font>

406
00:19:50,740 --> 00:19:57,290
<font color="#CCCCCC">we had to</font><font color="#E5E5E5"> implement the D</font><font color="#CCCCCC"> flat</font><font color="#E5E5E5"> the</font>

407
00:19:54,070 --> 00:20:00,200
deterministic flag<font color="#E5E5E5"> to prevent some</font>

408
00:19:57,290 --> 00:20:04,820
randomness in<font color="#CCCCCC"> the archives for example</font>

409
00:20:00,200 --> 00:20:08,180
we<font color="#CCCCCC"> had code</font><font color="#E5E5E5"> UID GID and M time to</font><font color="#CCCCCC"> zero</font>

410
00:20:04,820 --> 00:20:09,889
<font color="#E5E5E5">and the mode</font><font color="#CCCCCC"> two six four four</font><font color="#E5E5E5"> otherwise</font>

411
00:20:08,180 --> 00:20:11,930
it was completely it could be completely

412
00:20:09,890 --> 00:20:16,670
random<font color="#CCCCCC"> and we had difference in like</font>

413
00:20:11,930 --> 00:20:17,450
each and<font color="#E5E5E5"> every archives so that was</font><font color="#CCCCCC"> easy</font>

414
00:20:16,670 --> 00:20:19,970
<font color="#CCCCCC">to fix</font>

415
00:20:17,450 --> 00:20:22,970
there was a few requirement here and

416
00:20:19,970 --> 00:20:25,060
there to use that new options<font color="#E5E5E5"> but that</font>

417
00:20:22,970 --> 00:20:28,340
was that<font color="#E5E5E5"> was</font><font color="#CCCCCC"> an easy fix</font>

418
00:20:25,060 --> 00:20:31,790
then there was<font color="#E5E5E5"> the the timestamp of the</font>

419
00:20:28,340 --> 00:20:34,909
actual archive which were obviously

420
00:20:31,790 --> 00:20:36,830
<font color="#E5E5E5">different</font><font color="#CCCCCC"> from a</font><font color="#E5E5E5"> for each built the diff</font>

421
00:20:34,910 --> 00:20:41,180
that<font color="#CCCCCC"> SH</font><font color="#E5E5E5"> squid that I mentioned is</font>

422
00:20:36,830 --> 00:20:45,260
<font color="#E5E5E5">actually using</font><font color="#CCCCCC"> CMP for comparison of</font><font color="#E5E5E5"> the</font>

423
00:20:41,180 --> 00:20:47,630
files<font color="#CCCCCC"> and we can actually use a thirty</font>

424
00:20:45,260 --> 00:20:50,450
four bytes offset to skip the<font color="#CCCCCC"> times</font>

425
00:20:47,630 --> 00:20:53,240
<font color="#E5E5E5">tenth index</font><font color="#CCCCCC"> we were</font><font color="#E5E5E5"> actually quite happy</font>

426
00:20:50,450 --> 00:20:56,920
<font color="#CCCCCC">to see that it was so easily possible so</font>

427
00:20:53,240 --> 00:20:56,920
this<font color="#E5E5E5"> problem was also very easy to fix</font>

428
00:20:57,040 --> 00:21:02,260
besides<font color="#CCCCCC"> Tariq archives we also had a</font>

429
00:21:00,080 --> 00:21:04,790
shared<font color="#CCCCCC"> object</font>

430
00:21:02,260 --> 00:21:07,220
OpenBSD will rebuild<font color="#E5E5E5"> all the shared</font>

431
00:21:04,790 --> 00:21:09,379
object in a completely random order<font color="#CCCCCC"> so</font>

432
00:21:07,220 --> 00:21:11,060
<font color="#CCCCCC">of course you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> imagine</font><font color="#E5E5E5"> that when you</font>

433
00:21:09,380 --> 00:21:13,970
<font color="#E5E5E5">G thing one release with another one</font>

434
00:21:11,060 --> 00:21:16,669
<font color="#E5E5E5">that again everything is</font><font color="#CCCCCC"> different so</font>

435
00:21:13,970 --> 00:21:20,210
what we did is that<font color="#E5E5E5"> we basically told</font>

436
00:21:16,670 --> 00:21:23,150
sis patch to use video<font color="#E5E5E5"> F on the shared</font>

437
00:21:20,210 --> 00:21:26,150
object of the previous fake<font color="#CCCCCC"> root</font><font color="#E5E5E5"> the</font>

438
00:21:23,150 --> 00:21:28,910
<font color="#CCCCCC">previews build</font><font color="#E5E5E5"> get the linking order</font>

439
00:21:26,150 --> 00:21:30,710
from there and then apply<font color="#CCCCCC"> it exactly</font><font color="#E5E5E5"> in</font>

440
00:21:28,910 --> 00:21:34,100
the<font color="#E5E5E5"> same order when we build a release</font>

441
00:21:30,710 --> 00:21:36,320
with<font color="#E5E5E5"> a patched release so that</font><font color="#CCCCCC"> was a bit</font>

442
00:21:34,100 --> 00:21:40,520
tricky<font color="#E5E5E5"> to get but in the end it really</font>

443
00:21:36,320 --> 00:21:42,620
<font color="#E5E5E5">actually actually worked fine</font><font color="#CCCCCC"> in the</font>

444
00:21:40,520 --> 00:21:46,340
middle<font color="#E5E5E5"> of you're implementing sis patch</font>

445
00:21:42,620 --> 00:21:50,310
we moved from GCC to<font color="#CCCCCC"> Clank</font><font color="#E5E5E5"> at least on</font>

446
00:21:46,340 --> 00:21:53,820
<font color="#E5E5E5">ng 64 our 386 and arm 64</font>

447
00:21:50,310 --> 00:21:56,129
and we had hit a few bugs that were

448
00:21:53,820 --> 00:21:58,950
<font color="#CCCCCC">related like the assembler does not</font>

449
00:21:56,130 --> 00:22:01,860
properly<font color="#E5E5E5"> set the dot</font><font color="#CCCCCC"> 5 directive</font><font color="#E5E5E5"> when</font>

450
00:21:58,950 --> 00:22:05,160
compiling assembly files<font color="#E5E5E5"> so I was</font>

451
00:22:01,860 --> 00:22:08,820
missing from the object which basically

452
00:22:05,160 --> 00:22:11,240
prevented radial<font color="#E5E5E5"> F to see them and if</font>

453
00:22:08,820 --> 00:22:15,149
they<font color="#CCCCCC"> conceived</font><font color="#E5E5E5"> and and we can't have the</font>

454
00:22:11,240 --> 00:22:16,590
<font color="#E5E5E5">link order so there was I don't</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> it</font>

455
00:22:15,150 --> 00:22:20,850
has been<font color="#E5E5E5"> fixed upstream by the way there</font>

456
00:22:16,590 --> 00:22:24,500
<font color="#E5E5E5">is a bug report about</font><font color="#CCCCCC"> it we also build</font>

457
00:22:20,850 --> 00:22:27,080
most<font color="#E5E5E5"> of our stuff with</font><font color="#CCCCCC"> minus G and</font>

458
00:22:24,500 --> 00:22:30,480
sometimes it's<font color="#E5E5E5"> not a hundred percent</font>

459
00:22:27,080 --> 00:22:37,020
reproducible<font color="#E5E5E5"> the local occasionally</font>

460
00:22:30,480 --> 00:22:40,590
section changes so this particular<font color="#CCCCCC"> issue</font>

461
00:22:37,020 --> 00:22:41,850
is not<font color="#E5E5E5"> fixed yet</font><font color="#CCCCCC"> what you</font><font color="#E5E5E5"> end up</font>

462
00:22:40,590 --> 00:22:44,159
<font color="#CCCCCC">basically is that</font><font color="#E5E5E5"> you have a lot</font><font color="#CCCCCC"> of</font>

463
00:22:41,850 --> 00:22:46,550
folks positive that you have to manually

464
00:22:44,160 --> 00:22:48,840
edit in the<font color="#E5E5E5"> peer list of the</font><font color="#CCCCCC"> OCS patch</font>

465
00:22:46,550 --> 00:22:51,169
it's still under<font color="#CCCCCC"> investigation we have</font>

466
00:22:48,840 --> 00:22:55,639
no idea where this this actual

467
00:22:51,170 --> 00:22:55,640
non-deterministic<font color="#E5E5E5"> thing is coming from</font>

468
00:22:56,570 --> 00:23:02,250
then<font color="#E5E5E5"> we had the funny stuff with with</font>

469
00:22:59,160 --> 00:23:05,970
<font color="#CCCCCC">Pro the configured test for long double</font>

470
00:23:02,250 --> 00:23:09,030
implementation details<font color="#CCCCCC"> props the content</font>

471
00:23:05,970 --> 00:23:14,010
of long double length and that gets

472
00:23:09,030 --> 00:23:17,010
stored<font color="#E5E5E5"> in config module but some of</font>

473
00:23:14,010 --> 00:23:21,780
these bytes are comfy pretty much random

474
00:23:17,010 --> 00:23:24,300
<font color="#E5E5E5">and vary between builds because of the</font>

475
00:23:21,780 --> 00:23:28,020
<font color="#E5E5E5">log only 80 bit and the remaining bytes</font>

476
00:23:24,300 --> 00:23:30,600
or like uninitialized<font color="#E5E5E5"> so we had again it</font>

477
00:23:28,020 --> 00:23:32,850
was not not always<font color="#E5E5E5"> the case</font><font color="#CCCCCC"> it was</font>

478
00:23:30,600 --> 00:23:35,790
completely random<font color="#E5E5E5"> and it was a hard one</font>

479
00:23:32,850 --> 00:23:38,969
<font color="#CCCCCC">to track down but finally we saw that</font><font color="#E5E5E5"> it</font>

480
00:23:35,790 --> 00:23:41,399
was fixed<font color="#E5E5E5"> in Perl a few months before</font><font color="#CCCCCC"> we</font>

481
00:23:38,970 --> 00:23:47,250
<font color="#CCCCCC">started looking into</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> so we just</font><font color="#E5E5E5"> back</font>

482
00:23:41,400 --> 00:23:50,850
ported the patches<font color="#CCCCCC"> there was also</font><font color="#E5E5E5"> the</font>

483
00:23:47,250 --> 00:23:53,430
case of manual<font color="#CCCCCC"> pages created</font><font color="#E5E5E5"> by Perl for</font>

484
00:23:50,850 --> 00:23:55,980
that we didn't come up with<font color="#E5E5E5"> any solution</font>

485
00:23:53,430 --> 00:23:57,700
yet the diff dot<font color="#CCCCCC"> SH script he was said</font>

486
00:23:55,980 --> 00:24:01,599
to<font color="#E5E5E5"> remove there</font>

487
00:23:57,700 --> 00:24:03,729
the<font color="#E5E5E5"> time stamp header then we had a few</font>

488
00:24:01,599 --> 00:24:07,269
funny<font color="#CCCCCC"> things like like time</font><font color="#E5E5E5"> and date</font>

489
00:24:03,729 --> 00:24:09,969
<font color="#CCCCCC">that were in several piece of code</font>

490
00:24:07,269 --> 00:24:14,019
within<font color="#E5E5E5"> the OpenBSD sauce tree</font><font color="#CCCCCC"> like to</font>

491
00:24:09,969 --> 00:24:15,609
display the build date<font color="#E5E5E5"> or whatever</font><font color="#CCCCCC"> so</font>

492
00:24:14,019 --> 00:24:19,629
this<font color="#E5E5E5"> one was easy we</font><font color="#CCCCCC"> just removed</font><font color="#E5E5E5"> it</font>

493
00:24:15,609 --> 00:24:23,408
from<font color="#E5E5E5"> the code well I mean what what</font>

494
00:24:19,629 --> 00:24:24,820
shoes does it have<font color="#E5E5E5"> and also something</font>

495
00:24:23,409 --> 00:24:26,950
that<font color="#E5E5E5"> was really really really well</font>

496
00:24:24,820 --> 00:24:30,039
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> was really unexpected</font><font color="#E5E5E5"> as</font>

497
00:24:26,950 --> 00:24:33,039
that patches<font color="#CCCCCC"> aren't built on the release</font>

498
00:24:30,039 --> 00:24:36,549
machines<font color="#CCCCCC"> the release the</font><font color="#E5E5E5"> release are</font>

499
00:24:33,039 --> 00:24:39,009
actually built by<font color="#E5E5E5"> feel the patches are</font>

500
00:24:36,549 --> 00:24:42,039
built by Robert<font color="#E5E5E5"> so they're not built on</font>

501
00:24:39,009 --> 00:24:45,099
the<font color="#E5E5E5"> same machines obviously and on</font><font color="#CCCCCC"> open</font>

502
00:24:42,039 --> 00:24:46,869
<font color="#CCCCCC">BSD we don't have any automated</font><font color="#E5E5E5"> garbage</font>

503
00:24:45,099 --> 00:24:50,200
<font color="#E5E5E5">collection of old</font><font color="#CCCCCC"> files like for example</font>

504
00:24:46,869 --> 00:24:51,908
<font color="#CCCCCC">if we remove a header</font><font color="#E5E5E5"> then nothing will</font>

505
00:24:50,200 --> 00:24:55,989
automatically remove<font color="#CCCCCC"> it from the system</font>

506
00:24:51,909 --> 00:24:58,690
you<font color="#E5E5E5"> have to do that manually</font><font color="#CCCCCC"> and we</font>

507
00:24:55,989 --> 00:25:00,249
realized that<font color="#E5E5E5"> actually Theo's machine</font>

508
00:24:58,690 --> 00:25:01,329
had a lot of header that<font color="#CCCCCC"> we didn't have</font>

509
00:25:00,249 --> 00:25:03,759
<font color="#CCCCCC">that</font><font color="#E5E5E5"> weren't cleaned</font>

510
00:25:01,329 --> 00:25:05,649
<font color="#CCCCCC">I mean basically that doesn't doesn't</font>

511
00:25:03,759 --> 00:25:11,070
<font color="#E5E5E5">introduce any issue but in this case for</font>

512
00:25:05,649 --> 00:25:13,508
<font color="#CCCCCC">pearl pearl</font><font color="#E5E5E5"> actually picked up a</font>

513
00:25:11,070 --> 00:25:16,089
different option<font color="#E5E5E5"> because the header was</font>

514
00:25:13,509 --> 00:25:20,289
there so of course the bad the final

515
00:25:16,089 --> 00:25:22,359
binary was completely<font color="#CCCCCC"> different and of</font>

516
00:25:20,289 --> 00:25:24,940
course that specific issue is<font color="#CCCCCC"> only</font>

517
00:25:22,359 --> 00:25:26,949
<font color="#E5E5E5">relevant</font><font color="#CCCCCC"> for the first dispatch since</font>

518
00:25:24,940 --> 00:25:33,099
<font color="#E5E5E5">for the second one we compared to</font><font color="#CCCCCC"> our</font>

519
00:25:26,950 --> 00:25:36,429
own built release so what do we<font color="#E5E5E5"> want to</font>

520
00:25:33,099 --> 00:25:39,279
do in the future<font color="#CCCCCC"> so far the tool is</font><font color="#E5E5E5"> very</font>

521
00:25:36,429 --> 00:25:41,979
nice it works really nicely<font color="#E5E5E5"> it's super</font>

522
00:25:39,279 --> 00:25:45,190
simple what we<font color="#CCCCCC"> want to do is to put more</font>

523
00:25:41,979 --> 00:25:47,799
architectures obviously I would really

524
00:25:45,190 --> 00:25:50,979
like if we were if<font color="#CCCCCC"> we would be able to</font>

525
00:25:47,799 --> 00:25:52,629
<font color="#E5E5E5">support the</font><font color="#CCCCCC"> current release and the</font>

526
00:25:50,979 --> 00:25:57,940
previous<font color="#E5E5E5"> one</font><font color="#CCCCCC"> so at least you have</font>

527
00:25:52,629 --> 00:25:59,589
patches<font color="#E5E5E5"> for an entire</font><font color="#CCCCCC"> year that issue</font><font color="#E5E5E5"> is</font>

528
00:25:57,940 --> 00:26:02,440
again<font color="#E5E5E5"> no technical store that we don't</font>

529
00:25:59,589 --> 00:26:05,019
have the manpower to<font color="#E5E5E5"> do that and</font>

530
00:26:02,440 --> 00:26:08,079
something<font color="#CCCCCC"> I'm hopeful as well is to pave</font>

531
00:26:05,019 --> 00:26:09,530
the<font color="#E5E5E5"> role for stable packages</font><font color="#CCCCCC"> we do have</font>

532
00:26:08,079 --> 00:26:12,350
stable packages

533
00:26:09,530 --> 00:26:14,960
as part of the poetry<font color="#E5E5E5"> but they're not</font>

534
00:26:12,350 --> 00:26:18,709
built<font color="#E5E5E5"> so that's it's kind of a pain</font>

535
00:26:14,960 --> 00:26:22,220
torture actually<font color="#CCCCCC"> maintain</font><font color="#E5E5E5"> these and it</font>

536
00:26:18,710 --> 00:26:25,010
would<font color="#E5E5E5"> be also a bit nice to other more</font>

537
00:26:22,220 --> 00:26:27,440
verbose output<font color="#E5E5E5"> when listing sis patch</font>

538
00:26:25,010 --> 00:26:29,840
like listing installed one order to

539
00:26:27,440 --> 00:26:32,860
order<font color="#E5E5E5"> the available one because the the</font>

540
00:26:29,840 --> 00:26:35,389
name or a bit bit tricky<font color="#E5E5E5"> doesn't always</font>

541
00:26:32,860 --> 00:26:39,050
<font color="#E5E5E5">doesn't always tell you where the actual</font>

542
00:26:35,390 --> 00:26:41,780
patch is within<font color="#E5E5E5"> the</font><font color="#CCCCCC"> sorcery and what it</font>

543
00:26:39,050 --> 00:26:44,060
does<font color="#CCCCCC"> I mean zero zero to underscore Lib</font>

544
00:26:41,780 --> 00:26:45,860
SSL<font color="#E5E5E5"> okay you know</font><font color="#CCCCCC"> that something under</font>

545
00:26:44,060 --> 00:26:48,530
Lib SSL but you have no idea<font color="#CCCCCC"> what the</font>

546
00:26:45,860 --> 00:26:51,889
patch<font color="#E5E5E5"> fixes so it would be nice</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

547
00:26:48,530 --> 00:26:55,660
<font color="#CCCCCC">that and something else as well as that</font>

548
00:26:51,890 --> 00:26:59,630
currently<font color="#E5E5E5"> when we install kernel patches</font>

549
00:26:55,660 --> 00:27:02,510
<font color="#CCCCCC">a kernel patch is not a new kernel it's</font>

550
00:26:59,630 --> 00:27:05,840
just the new<font color="#E5E5E5"> object file that were</font>

551
00:27:02,510 --> 00:27:08,900
modified so<font color="#E5E5E5"> that means that we can we</font>

552
00:27:05,840 --> 00:27:11,090
<font color="#CCCCCC">can</font><font color="#E5E5E5"> ship pretty small patches and</font><font color="#CCCCCC"> your</font>

553
00:27:08,900 --> 00:27:13,820
kernel which basically<font color="#E5E5E5"> will be recreated</font>

554
00:27:11,090 --> 00:27:17,179
<font color="#CCCCCC">anyway by the Carl</font><font color="#E5E5E5"> pre-order kernel</font>

555
00:27:13,820 --> 00:27:19,250
mechanism so that's why we<font color="#CCCCCC"> only ship the</font>

556
00:27:17,180 --> 00:27:21,320
<font color="#E5E5E5">different object file the problem we</font>

557
00:27:19,250 --> 00:27:24,680
have is that<font color="#CCCCCC"> on open Beauty we have a</font>

558
00:27:21,320 --> 00:27:28,310
different kernel for SMP machine and

559
00:27:24,680 --> 00:27:30,890
single processor machines so that<font color="#E5E5E5"> works</font>

560
00:27:28,310 --> 00:27:34,490
perfectly fine but if you want<font color="#CCCCCC"> a VM for</font>

561
00:27:30,890 --> 00:27:37,100
<font color="#E5E5E5">example you install it on</font><font color="#CCCCCC"> a single</font>

562
00:27:34,490 --> 00:27:39,380
<font color="#CCCCCC">processor of machines</font><font color="#E5E5E5"> you patch it</font><font color="#CCCCCC"> and</font>

563
00:27:37,100 --> 00:27:43,070
then you want to<font color="#CCCCCC"> upgrade with the end to</font>

564
00:27:39,380 --> 00:27:45,290
<font color="#E5E5E5">josef</font><font color="#CCCCCC"> cpu for CPU</font><font color="#E5E5E5"> eight CPU then sis</font>

565
00:27:43,070 --> 00:27:47,649
patch that<font color="#CCCCCC"> anna nexpaq suspect will get</font>

566
00:27:45,290 --> 00:27:51,530
<font color="#CCCCCC">a</font><font color="#E5E5E5"> kernel patch that will try to build</font>

567
00:27:47,650 --> 00:27:54,620
against<font color="#E5E5E5"> MP machine because you</font><font color="#CCCCCC"> are now</font>

568
00:27:51,530 --> 00:27:57,290
an empty machine<font color="#E5E5E5"> but your installer we</font>

569
00:27:54,620 --> 00:28:01,239
only have installed the<font color="#E5E5E5"> G single</font>

570
00:27:57,290 --> 00:28:05,570
processor object for kernel linking and

571
00:28:01,240 --> 00:28:08,270
boom so yeah so I hope<font color="#CCCCCC"> that one day we</font>

572
00:28:05,570 --> 00:28:13,669
<font color="#E5E5E5">can</font><font color="#CCCCCC"> have one slash bsd for both MP and</font>

573
00:28:08,270 --> 00:28:16,430
SP machine that's pretty much it<font color="#CCCCCC"> off</font>

574
00:28:13,670 --> 00:28:19,340
topic<font color="#CCCCCC"> we are</font><font color="#E5E5E5"> hiring so if you're looking</font>

575
00:28:16,430 --> 00:28:20,330
into development operations whatever

576
00:28:19,340 --> 00:28:21,158
<font color="#E5E5E5">come talk to me</font>

577
00:28:20,330 --> 00:28:24,070
<font color="#E5E5E5">well</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> hi</font>

578
00:28:21,159 --> 00:28:38,229
<font color="#E5E5E5">all kind of different</font><font color="#CCCCCC"> profiles any</font>

579
00:28:24,070 --> 00:28:43,239
questions yes yes

580
00:28:38,229 --> 00:28:46,269
you can't pick one or the<font color="#E5E5E5"> other that's</font>

581
00:28:43,239 --> 00:28:48,460
that's by design<font color="#CCCCCC"> we thought a</font><font color="#E5E5E5"> lot about</font>

582
00:28:46,269 --> 00:29:00,999
<font color="#E5E5E5">it but it's just way easier to do it</font>

583
00:28:48,460 --> 00:29:05,710
this<font color="#E5E5E5"> way yes sorry</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> we know how to do</font>

584
00:29:00,999 --> 00:29:10,869
that<font color="#E5E5E5"> I would very much like to implement</font>

585
00:29:05,710 --> 00:29:14,559
it<font color="#E5E5E5"> but I'm not sure how to integrate it</font>

586
00:29:10,869 --> 00:29:16,840
within<font color="#CCCCCC"> OpenBSD itself itself yet there</font>

587
00:29:14,559 --> 00:29:17,320
is a solution<font color="#E5E5E5"> for</font><font color="#CCCCCC"> it I would like it</font>

588
00:29:16,840 --> 00:29:37,149
personally

589
00:29:17,320 --> 00:29:44,678
yeah yes choose whatever man<font color="#CCCCCC"> I mean it's</font>

590
00:29:37,149 --> 00:29:46,928
it's your box<font color="#E5E5E5"> I I don't</font><font color="#CCCCCC"> know it's it's</font>

591
00:29:44,679 --> 00:29:48,129
it's<font color="#CCCCCC"> not a question I can</font><font color="#E5E5E5"> answer</font><font color="#CCCCCC"> I mean</font>

592
00:29:46,929 --> 00:29:48,789
it's really dependent on your

593
00:29:48,129 --> 00:29:53,259
environment

594
00:29:48,789 --> 00:29:55,658
I mean if usually patches are really

595
00:29:53,259 --> 00:29:58,869
well tested<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> we can screw</font>

596
00:29:55,659 --> 00:30:01,029
something up<font color="#CCCCCC"> I don't feel I don't</font><font color="#E5E5E5"> see</font>

597
00:29:58,869 --> 00:30:05,830
what I what I do like<font color="#E5E5E5"> is having</font><font color="#CCCCCC"> sis</font>

598
00:30:01,029 --> 00:30:06,999
patch check in<font color="#CCCCCC"> chrome but apply</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> most</font>

599
00:30:05,830 --> 00:30:09,009
of the<font color="#E5E5E5"> time you have</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> something</font>

600
00:30:06,999 --> 00:30:10,539
after<font color="#E5E5E5"> you apply your patch like you have</font>

601
00:30:09,009 --> 00:30:12,279
<font color="#E5E5E5">I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know you have a lip crypto or</font>

602
00:30:10,539 --> 00:30:15,840
whatever you have<font color="#E5E5E5"> to restore to</font><font color="#CCCCCC"> daemon</font>

603
00:30:12,279 --> 00:30:15,840
using the library anyway so

604
00:30:28,190 --> 00:30:33,360
if you try<font color="#E5E5E5"> to restore</font><font color="#CCCCCC"> dispatch now if</font>

605
00:30:31,649 --> 00:30:36,779
you have a problem<font color="#CCCCCC"> okay so so the</font>

606
00:30:33,360 --> 00:30:38,269
<font color="#CCCCCC">question</font><font color="#E5E5E5"> is what</font><font color="#CCCCCC"> happens if</font><font color="#E5E5E5"> during the</font>

607
00:30:36,779 --> 00:30:39,419
run of<font color="#CCCCCC"> sis</font><font color="#E5E5E5"> patch you lose the network</font>

608
00:30:38,269 --> 00:30:42,539
okay

609
00:30:39,419 --> 00:30:45,899
if anything happens between at<font color="#E5E5E5"> the</font>

610
00:30:42,539 --> 00:30:48,570
moment of installation of the patch it

611
00:30:45,899 --> 00:30:51,418
and<font color="#E5E5E5"> if any error occurs then it will</font>

612
00:30:48,570 --> 00:30:53,700
stop and<font color="#E5E5E5"> roll back so if you lose the</font>

613
00:30:51,419 --> 00:30:55,440
network<font color="#E5E5E5"> it's not installing anything so</font>

614
00:30:53,700 --> 00:30:57,480
it will just<font color="#E5E5E5"> hang whatever again you can</font>

615
00:30:55,440 --> 00:30:59,580
control<font color="#CCCCCC"> see and there is a trap handler</font>

616
00:30:57,480 --> 00:31:02,399
that<font color="#CCCCCC"> will handle everything so it's</font>

617
00:30:59,580 --> 00:31:07,980
pretty<font color="#E5E5E5"> safe in</font><font color="#CCCCCC"> that regard</font><font color="#E5E5E5"> of course if</font>

618
00:31:02,399 --> 00:31:09,360
you<font color="#CCCCCC"> unplug your machines then</font><font color="#E5E5E5"> okay I</font>

619
00:31:07,980 --> 00:31:11,840
think<font color="#E5E5E5"> we're done thank you</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much for</font>

620
00:31:09,360 --> 00:31:11,840
<font color="#E5E5E5">attention</font>

621
00:31:14,600 --> 00:31:19,100
[Applause]

