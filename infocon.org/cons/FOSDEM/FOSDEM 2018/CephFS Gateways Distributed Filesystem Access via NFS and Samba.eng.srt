1
00:00:04,640 --> 00:00:12,100
let's welcome<font color="#CCCCCC"> Supriya</font><font color="#E5E5E5"> and David and</font>

2
00:00:06,859 --> 00:00:12,100
enjoy the park hello

3
00:00:14,380 --> 00:00:20,590
hello everyone my name is so pretty<font color="#CCCCCC"> I</font>

4
00:00:16,970 --> 00:00:23,240
work as a software developer at<font color="#CCCCCC"> Susi</font><font color="#E5E5E5"> and</font>

5
00:00:20,590 --> 00:00:26,869
my colleague David<font color="#CCCCCC"> he is also a software</font>

6
00:00:23,240 --> 00:00:28,729
developer at Susi<font color="#CCCCCC"> I have been working on</font>

7
00:00:26,869 --> 00:00:31,610
<font color="#E5E5E5">an</font><font color="#CCCCCC"> elephants Ganesha for</font><font color="#E5E5E5"> around one year</font>

8
00:00:28,730 --> 00:00:34,100
<font color="#E5E5E5">now and David here is a Samba</font>

9
00:00:31,610 --> 00:00:37,760
contributor for a long time<font color="#E5E5E5"> today we</font>

10
00:00:34,100 --> 00:00:41,059
<font color="#E5E5E5">want to talk about how summer and</font><font color="#CCCCCC"> NFS</font>

11
00:00:37,760 --> 00:00:42,860
<font color="#CCCCCC">Ganesha worked together with Saif so</font>

12
00:00:41,059 --> 00:00:45,169
today's<font color="#CCCCCC"> a Jetta</font><font color="#E5E5E5"> is very simple we are</font>

13
00:00:42,860 --> 00:00:48,650
<font color="#E5E5E5">trying to find answer for three very</font>

14
00:00:45,170 --> 00:00:51,920
<font color="#E5E5E5">simple questions why what and how why</font>

15
00:00:48,650 --> 00:00:54,470
are we talking about Samba<font color="#CCCCCC"> and in an NFS</font>

16
00:00:51,920 --> 00:00:57,979
Ganesha with respect to surface

17
00:00:54,470 --> 00:00:59,830
what does Samba<font color="#E5E5E5"> in offense Ganesha looks</font>

18
00:00:57,979 --> 00:01:03,260
like what is the<font color="#CCCCCC"> architecture</font><font color="#E5E5E5"> and</font>

19
00:00:59,830 --> 00:01:09,520
finally how these two gateways fare with

20
00:01:03,260 --> 00:01:12,289
respect to a native surface client<font color="#E5E5E5"> so</font>

21
00:01:09,520 --> 00:01:15,110
I'm sure most of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> people are aware</font>

22
00:01:12,290 --> 00:01:18,050
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Ceph architecture so self is</font>

23
00:01:15,110 --> 00:01:22,280
basically a distributed storage system

24
00:01:18,050 --> 00:01:24,920
and you can<font color="#E5E5E5"> access the most basic layer</font>

25
00:01:22,280 --> 00:01:27,980
dados using different interface and one

26
00:01:24,920 --> 00:01:30,350
of them is surface<font color="#E5E5E5"> surface is a</font>

27
00:01:27,980 --> 00:01:34,250
<font color="#E5E5E5">posix-compliant distributed file system</font>

28
00:01:30,350 --> 00:01:37,309
and there are<font color="#E5E5E5"> multiple clients through</font>

29
00:01:34,250 --> 00:01:40,520
which you<font color="#CCCCCC"> can use ffs one is kernel</font>

30
00:01:37,310 --> 00:01:42,890
client then there's also a fuse client

31
00:01:40,520 --> 00:01:47,240
which<font color="#CCCCCC"> is not mentioned here and then</font>

32
00:01:42,890 --> 00:01:50,570
there are<font color="#E5E5E5"> samba</font><font color="#CCCCCC"> an NFS Ganesha</font><font color="#E5E5E5"> so you</font>

33
00:01:47,240 --> 00:01:53,330
may ask why do we<font color="#E5E5E5"> need to exports ffs</font>

34
00:01:50,570 --> 00:01:57,350
using Samba and NFS<font color="#E5E5E5"> Ganesha because it</font>

35
00:01:53,330 --> 00:01:59,929
would make surface available<font color="#CCCCCC"> to even a</font>

36
00:01:57,350 --> 00:02:02,929
wider variety of<font color="#E5E5E5"> clients so let's say if</font>

37
00:01:59,930 --> 00:02:05,000
you have a kernel<font color="#E5E5E5"> client which</font><font color="#CCCCCC"> is not up</font>

38
00:02:02,930 --> 00:02:08,019
<font color="#CCCCCC">to</font><font color="#E5E5E5"> date so you can't use the latest</font>

39
00:02:05,000 --> 00:02:10,639
kernel<font color="#E5E5E5"> surface client and then you don't</font>

40
00:02:08,019 --> 00:02:12,890
get the<font color="#CCCCCC"> advantage of</font><font color="#E5E5E5"> the latest feature</font>

41
00:02:10,639 --> 00:02:14,929
from surface but<font color="#E5E5E5"> you can still use NFS</font>

42
00:02:12,890 --> 00:02:18,649
because almost all<font color="#E5E5E5"> the Linux client</font>

43
00:02:14,930 --> 00:02:22,519
suppose support NFS then<font color="#CCCCCC"> Samba you can</font>

44
00:02:18,650 --> 00:02:25,910
react<font color="#E5E5E5"> sport surface in Windows Mac OS</font>

45
00:02:22,519 --> 00:02:28,610
and<font color="#E5E5E5"> Linux of course so</font>

46
00:02:25,910 --> 00:02:32,780
now I will be talking<font color="#E5E5E5"> more</font><font color="#CCCCCC"> about what is</font>

47
00:02:28,610 --> 00:02:35,810
an<font color="#E5E5E5"> offense Ganesha</font><font color="#CCCCCC"> and if is</font><font color="#E5E5E5"> Ganesha is</font>

48
00:02:32,780 --> 00:02:38,840
an<font color="#E5E5E5"> open source user space NFS server</font><font color="#CCCCCC"> it</font>

49
00:02:35,810 --> 00:02:41,570
supports multiple file system begins at

50
00:02:38,840 --> 00:02:46,760
<font color="#E5E5E5">this point there's ffs there's reduce</font>

51
00:02:41,570 --> 00:02:49,040
<font color="#E5E5E5">gateway</font><font color="#CCCCCC"> read ads</font><font color="#E5E5E5"> cluster IBM</font><font color="#CCCCCC"> gpfs if you</font>

52
00:02:46,760 --> 00:02:50,959
were in<font color="#E5E5E5"> this room before for lizard FS</font>

53
00:02:49,040 --> 00:02:53,750
<font color="#E5E5E5">you may be aware that they</font><font color="#CCCCCC"> are also</font>

54
00:02:50,960 --> 00:02:58,330
planning<font color="#E5E5E5"> to integrate with NFS</font><font color="#CCCCCC"> kanesha</font>

55
00:02:53,750 --> 00:03:03,200
<font color="#E5E5E5">but today we</font><font color="#CCCCCC"> just want to</font><font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> CFS</font>

56
00:02:58,330 --> 00:03:06,320
<font color="#CCCCCC">so it's a very simple</font><font color="#E5E5E5"> idea what NFS</font>

57
00:03:03,200 --> 00:03:10,190
Ganesha is doing here it's basically

58
00:03:06,320 --> 00:03:12,200
translating the NFS protocol<font color="#E5E5E5"> into the</font>

59
00:03:10,190 --> 00:03:15,050
language<font color="#CCCCCC"> that the Radice cluster</font>

60
00:03:12,200 --> 00:03:18,200
understands<font color="#E5E5E5"> and it's doing so by using</font>

61
00:03:15,050 --> 00:03:21,290
the shared library which is lips ffs so

62
00:03:18,200 --> 00:03:24,230
<font color="#E5E5E5">at let's say you have two clients one is</font>

63
00:03:21,290 --> 00:03:26,540
NFS one is<font color="#E5E5E5"> kernel client and you can</font>

64
00:03:24,230 --> 00:03:33,769
<font color="#E5E5E5">mount these two clients and you see the</font>

65
00:03:26,540 --> 00:03:36,109
same file system now<font color="#E5E5E5"> we can go in more</font>

66
00:03:33,770 --> 00:03:40,160
detail about NFS<font color="#CCCCCC"> Ganesha architecture</font>

67
00:03:36,110 --> 00:03:42,320
<font color="#E5E5E5">it's a very modular architecture so when</font>

68
00:03:40,160 --> 00:03:44,030
I said that<font color="#E5E5E5"> it supports multiple file</font>

69
00:03:42,320 --> 00:03:48,320
system backends<font color="#E5E5E5"> it's possible because</font>

70
00:03:44,030 --> 00:03:51,800
<font color="#E5E5E5">it's modular we can start from</font><font color="#CCCCCC"> topmost</font>

71
00:03:48,320 --> 00:03:54,829
and go down so at the top<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a</font>

72
00:03:51,800 --> 00:03:57,920
network<font color="#E5E5E5"> channel and if</font><font color="#CCCCCC"> asked Anisha uses</font>

73
00:03:54,830 --> 00:04:01,250
<font color="#CCCCCC">TI RPC for all the RPC</font><font color="#E5E5E5"> for handling the</font>

74
00:03:57,920 --> 00:04:02,869
RPC<font color="#CCCCCC"> request</font><font color="#E5E5E5"> once so let's imagine you</font>

75
00:04:01,250 --> 00:04:05,600
<font color="#CCCCCC">have</font><font color="#E5E5E5"> an F is client and it sends</font><font color="#CCCCCC"> a</font>

76
00:04:02,870 --> 00:04:09,250
request then this<font color="#E5E5E5"> TI RPC is handling the</font>

77
00:04:05,600 --> 00:04:12,769
<font color="#CCCCCC">request then it passes this to a</font>

78
00:04:09,250 --> 00:04:15,190
duplicate request layer so what this

79
00:04:12,770 --> 00:04:17,840
does<font color="#E5E5E5"> is for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> you have a non</font>

80
00:04:15,190 --> 00:04:19,790
idempotent<font color="#CCCCCC"> request</font><font color="#E5E5E5"> like creating a file</font>

81
00:04:17,839 --> 00:04:22,280
and you<font color="#CCCCCC"> know that once a file has been</font>

82
00:04:19,790 --> 00:04:24,500
created<font color="#E5E5E5"> it cannot be recreated</font><font color="#CCCCCC"> so</font>

83
00:04:22,280 --> 00:04:27,169
instead of talking again to the lower

84
00:04:24,500 --> 00:04:29,090
level and reassuring<font color="#E5E5E5"> that</font><font color="#CCCCCC"> okay should I</font>

85
00:04:27,170 --> 00:04:31,240
<font color="#E5E5E5">create the file or</font><font color="#CCCCCC"> not you</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> have a</font>

86
00:04:29,090 --> 00:04:35,210
cache in between which makes<font color="#CCCCCC"> sure that</font>

87
00:04:31,240 --> 00:04:39,350
some response time is better then any

88
00:04:35,210 --> 00:04:44,659
physical nature<font color="#E5E5E5"> also supports RPC SEC GS</font>

89
00:04:39,350 --> 00:04:46,460
which is support for<font color="#E5E5E5"> Kerberos</font><font color="#CCCCCC"> if we go</font>

90
00:04:44,660 --> 00:04:49,400
down<font color="#E5E5E5"> then there's support for NFS</font>

91
00:04:46,460 --> 00:04:52,130
version 3 and<font color="#E5E5E5"> version 4</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually</font>

92
00:04:49,400 --> 00:04:54,650
<font color="#CCCCCC">supports pmf s4 Gluster also but we are</font>

93
00:04:52,130 --> 00:04:57,340
<font color="#E5E5E5">talking just force ffs so I have not</font>

94
00:04:54,650 --> 00:04:59,929
<font color="#E5E5E5">included it then</font>

95
00:04:57,340 --> 00:05:02,359
so once and if his client<font color="#E5E5E5"> has sent the</font>

96
00:04:59,930 --> 00:05:04,610
NFS request the topmost<font color="#E5E5E5"> layer is now</font>

97
00:05:02,360 --> 00:05:06,860
handling understanding what the request

98
00:05:04,610 --> 00:05:08,920
is and now it<font color="#CCCCCC"> needs to</font><font color="#E5E5E5"> translate that</font>

99
00:05:06,860 --> 00:05:12,020
into<font color="#CCCCCC"> a language that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> filesystem</font>

100
00:05:08,920 --> 00:05:16,040
<font color="#CCCCCC">understands and that is taken care by</font>

101
00:05:12,020 --> 00:05:19,669
the facade layer so<font color="#E5E5E5"> facade is a common</font>

102
00:05:16,040 --> 00:05:22,850
API and using this API all the file

103
00:05:19,670 --> 00:05:25,190
systems are talking to the NFS topmost

104
00:05:22,850 --> 00:05:27,740
layer and that's why you have<font color="#CCCCCC"> multiple</font>

105
00:05:25,190 --> 00:05:29,990
backends because it's just<font color="#E5E5E5"> a common API</font>

106
00:05:27,740 --> 00:05:34,280
you use it and<font color="#E5E5E5"> you plug in your back in</font>

107
00:05:29,990 --> 00:05:37,010
and the most<font color="#CCCCCC"> interesting thing of</font>

108
00:05:34,280 --> 00:05:40,599
<font color="#CCCCCC">anaphase</font><font color="#E5E5E5"> Ganesha is</font><font color="#CCCCCC"> MD cash which is</font>

109
00:05:37,010 --> 00:05:43,670
<font color="#E5E5E5">metadata</font><font color="#CCCCCC"> cache so what it does is that</font>

110
00:05:40,600 --> 00:05:46,760
<font color="#E5E5E5">with the latest</font><font color="#CCCCCC"> Ganesha version we have</font>

111
00:05:43,670 --> 00:05:49,130
chunked caching which means that if<font color="#CCCCCC"> you</font>

112
00:05:46,760 --> 00:05:52,670
<font color="#CCCCCC">are reading a</font><font color="#E5E5E5"> very large file it will</font>

113
00:05:49,130 --> 00:05:55,730
not catch the whole metadata in but it

114
00:05:52,670 --> 00:05:59,780
will cache<font color="#E5E5E5"> in chunks so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the read</font>

115
00:05:55,730 --> 00:06:02,210
response is faster<font color="#E5E5E5"> and so instead of</font>

116
00:05:59,780 --> 00:06:03,890
always<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> to the back-end safe</font><font color="#E5E5E5"> FS</font>

117
00:06:02,210 --> 00:06:06,049
for the request it<font color="#E5E5E5"> will first check in</font>

118
00:06:03,890 --> 00:06:08,289
the cache and<font color="#E5E5E5"> then it will talk so again</font>

119
00:06:06,050 --> 00:06:11,030
the response time should be<font color="#E5E5E5"> better if we</font>

120
00:06:08,290 --> 00:06:15,410
<font color="#E5E5E5">see there are</font><font color="#CCCCCC"> two independent modules</font><font color="#E5E5E5"> as</font>

121
00:06:11,030 --> 00:06:18,590
<font color="#CCCCCC">well there's admin Debus and logging</font><font color="#E5E5E5"> so</font>

122
00:06:15,410 --> 00:06:22,400
using<font color="#CCCCCC"> Devers you can dynamically export</font>

123
00:06:18,590 --> 00:06:24,409
and unexplored the NFS Ganesha so if you

124
00:06:22,400 --> 00:06:26,419
have a production<font color="#E5E5E5"> cluster running and</font>

125
00:06:24,410 --> 00:06:28,160
you don't want<font color="#E5E5E5"> to stop the cluster</font>

126
00:06:26,420 --> 00:06:30,350
change something in the<font color="#E5E5E5"> configuration</font>

127
00:06:28,160 --> 00:06:32,990
file<font color="#E5E5E5"> and then we start the cluster you</font>

128
00:06:30,350 --> 00:06:35,300
can take<font color="#CCCCCC"> advantage of Debus so you can</font>

129
00:06:32,990 --> 00:06:39,670
dynamically change<font color="#E5E5E5"> the configuration and</font>

130
00:06:35,300 --> 00:06:44,350
then there's<font color="#E5E5E5"> logging which is for</font>

131
00:06:39,670 --> 00:06:49,150
tracing and debugging this slide just

132
00:06:44,350 --> 00:06:52,950
reiterates the fact<font color="#CCCCCC"> that I just said now</font>

133
00:06:49,150 --> 00:06:55,590
few key features<font color="#CCCCCC"> of NFS Ganesha</font><font color="#E5E5E5"> are that</font>

134
00:06:52,950 --> 00:06:59,370
using a single server you can export

135
00:06:55,590 --> 00:07:02,729
multiple<font color="#E5E5E5"> file system at one point you</font>

136
00:06:59,370 --> 00:07:07,290
can export multiple<font color="#E5E5E5"> protocols like TCP</font>

137
00:07:02,730 --> 00:07:11,730
UDP<font color="#E5E5E5"> you can also have multiple version</font>

138
00:07:07,290 --> 00:07:13,350
of NFS<font color="#CCCCCC"> like NFS version</font><font color="#E5E5E5"> 3</font><font color="#CCCCCC"> 4 and you</font>

139
00:07:11,730 --> 00:07:15,120
don't need<font color="#E5E5E5"> to have</font><font color="#CCCCCC"> multiple instance of</font>

140
00:07:13,350 --> 00:07:17,970
<font color="#CCCCCC">Venetia running you just modify</font><font color="#E5E5E5"> a single</font>

141
00:07:15,120 --> 00:07:21,030
config file and<font color="#CCCCCC"> you can use the node</font>

142
00:07:17,970 --> 00:07:24,810
then it also supports<font color="#CCCCCC"> Scarborough's</font>

143
00:07:21,030 --> 00:07:26,219
authentication and as<font color="#E5E5E5"> I</font><font color="#CCCCCC"> said using Debus</font>

144
00:07:24,810 --> 00:07:29,330
you can dynamically export and

145
00:07:26,220 --> 00:07:29,330
<font color="#E5E5E5">underscore</font><font color="#CCCCCC"> the entries</font>

146
00:07:29,940 --> 00:07:35,160
those were the generic NFS<font color="#CCCCCC"> Kaneesha</font>

147
00:07:32,250 --> 00:07:38,790
features when we<font color="#CCCCCC"> talk about CFS then</font>

148
00:07:35,160 --> 00:07:41,610
their support for suffix authorization

149
00:07:38,790 --> 00:07:44,490
which means so there are<font color="#CCCCCC"> multiple layers</font>

150
00:07:41,610 --> 00:07:48,000
<font color="#CCCCCC">of security you have Kerberos security</font>

151
00:07:44,490 --> 00:07:49,590
then<font color="#CCCCCC"> first ffs and if</font><font color="#E5E5E5"> as Ganesha is a</font>

152
00:07:48,000 --> 00:07:54,630
client and there's this layer of

153
00:07:49,590 --> 00:07:56,729
<font color="#E5E5E5">security using suffix then the other</font>

154
00:07:54,630 --> 00:08:00,240
feature<font color="#E5E5E5"> which was</font><font color="#CCCCCC"> recently implemented</font>

155
00:07:56,730 --> 00:08:02,460
<font color="#E5E5E5">is read delegation which means that the</font>

156
00:08:00,240 --> 00:08:05,130
<font color="#E5E5E5">client</font><font color="#CCCCCC"> does not</font><font color="#E5E5E5"> need to talk to the</font>

157
00:08:02,460 --> 00:08:08,219
<font color="#E5E5E5">server for every read request</font><font color="#CCCCCC"> it can</font>

158
00:08:05,130 --> 00:08:09,840
just be so the server gives correctly

159
00:08:08,220 --> 00:08:12,450
the to the client that if you are

160
00:08:09,840 --> 00:08:14,909
reading<font color="#E5E5E5"> this file and unless no but he's</font>

161
00:08:12,450 --> 00:08:16,530
writing you can continue reading<font color="#E5E5E5"> but in</font>

162
00:08:14,910 --> 00:08:18,210
case someone<font color="#CCCCCC"> is going to</font><font color="#E5E5E5"> write to the</font>

163
00:08:16,530 --> 00:08:20,159
file there's a callback mechanism which

164
00:08:18,210 --> 00:08:25,830
makes<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> don't read</font><font color="#CCCCCC"> the stale</font>

165
00:08:20,160 --> 00:08:27,920
<font color="#E5E5E5">data and it also supports exporting sub</font>

166
00:08:25,830 --> 00:08:30,330
directories which<font color="#CCCCCC"> I think is really</font>

167
00:08:27,920 --> 00:08:32,580
important in case you want to<font color="#E5E5E5"> have a</font>

168
00:08:30,330 --> 00:08:42,780
load balancing<font color="#E5E5E5"> or you want to have</font>

169
00:08:32,580 --> 00:08:44,910
<font color="#E5E5E5">proper security so but if we talk about</font>

170
00:08:42,780 --> 00:08:47,430
<font color="#E5E5E5">a production setup then of course a</font>

171
00:08:44,910 --> 00:08:49,589
<font color="#E5E5E5">single server is never a good</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> you</font>

172
00:08:47,430 --> 00:08:53,040
have a single<font color="#CCCCCC"> point of</font><font color="#E5E5E5"> failure there's a</font>

173
00:08:49,590 --> 00:08:56,160
<font color="#E5E5E5">bottleneck</font><font color="#CCCCCC"> and because we are react</font>

174
00:08:53,040 --> 00:08:58,530
sporting surface which is a distributed

175
00:08:56,160 --> 00:09:02,430
file system we are not taking<font color="#CCCCCC"> advantage</font>

176
00:08:58,530 --> 00:09:04,500
<font color="#E5E5E5">of that at all the solution would be to</font>

177
00:09:02,430 --> 00:09:08,089
<font color="#E5E5E5">use some H a solution which should</font>

178
00:09:04,500 --> 00:09:08,090
<font color="#E5E5E5">provide</font><font color="#CCCCCC"> us some</font><font color="#E5E5E5"> load balancing</font>

179
00:09:10,040 --> 00:09:16,500
so when we talk<font color="#CCCCCC"> about limits HEA there</font>

180
00:09:13,649 --> 00:09:18,690
are two possible solution one is<font color="#CCCCCC"> active</font>

181
00:09:16,500 --> 00:09:23,670
<font color="#E5E5E5">passive and another one is active active</font>

182
00:09:18,690 --> 00:09:26,490
so in active passive<font color="#E5E5E5"> if there are n</font>

183
00:09:23,670 --> 00:09:29,689
number<font color="#CCCCCC"> of servers running only</font><font color="#E5E5E5"> one is</font>

184
00:09:26,490 --> 00:09:31,949
<font color="#E5E5E5">actively serving the clients in case the</font>

185
00:09:29,690 --> 00:09:34,500
active server goes down<font color="#E5E5E5"> then the other</font>

186
00:09:31,949 --> 00:09:36,269
server becomes<font color="#E5E5E5"> active but the new server</font>

187
00:09:34,500 --> 00:09:39,389
does<font color="#E5E5E5"> not guarantee that it knows</font>

188
00:09:36,269 --> 00:09:41,519
anything about the client<font color="#E5E5E5"> so you are so</font>

189
00:09:39,389 --> 00:09:43,769
we do provide<font color="#E5E5E5"> availability but there's</font>

190
00:09:41,519 --> 00:09:50,760
no guarantee that<font color="#E5E5E5"> it will</font><font color="#CCCCCC"> be consistent</font>

191
00:09:43,769 --> 00:09:53,430
<font color="#CCCCCC">so the Linux se provides a virtual IP so</font>

192
00:09:50,760 --> 00:09:56,089
you provide<font color="#CCCCCC"> a</font><font color="#E5E5E5"> virtual IP for the cluster</font>

193
00:09:53,430 --> 00:10:00,019
of NFS Ganesha nodes that<font color="#CCCCCC"> you have and</font>

194
00:09:56,089 --> 00:10:03,630
NFS client mounts using this virtual<font color="#CCCCCC"> IP</font>

195
00:10:00,019 --> 00:10:06,480
in case the active node goes down then

196
00:10:03,630 --> 00:10:07,949
<font color="#E5E5E5">the virtual IP a also migrates and for</font>

197
00:10:06,480 --> 00:10:10,860
the<font color="#E5E5E5"> client it does not matter it's still</font>

198
00:10:07,949 --> 00:10:13,920
<font color="#CCCCCC">connected</font><font color="#E5E5E5"> to NFS Ganesha but it does not</font>

199
00:10:10,860 --> 00:10:24,120
know<font color="#CCCCCC"> that the Ganesha node has been</font>

200
00:10:13,920 --> 00:10:26,670
migrated so in NFS version<font color="#CCCCCC"> 3 was a</font>

201
00:10:24,120 --> 00:10:28,529
stateless protocol which means that the

202
00:10:26,670 --> 00:10:31,349
server had no idea about the client

203
00:10:28,529 --> 00:10:33,839
state but with NFS version 4 it's a

204
00:10:31,350 --> 00:10:37,440
stateful<font color="#E5E5E5"> protocol which means that the</font>

205
00:10:33,839 --> 00:10:39,089
NFS server should know<font color="#CCCCCC"> the locks taken</font>

206
00:10:37,440 --> 00:10:41,639
by that<font color="#E5E5E5"> line the files</font><font color="#CCCCCC"> open by the</font>

207
00:10:39,089 --> 00:10:45,899
client<font color="#E5E5E5"> and in that case if you want to</font>

208
00:10:41,639 --> 00:10:47,819
have a active active<font color="#CCCCCC"> setup</font><font color="#E5E5E5"> so in that</font>

209
00:10:45,899 --> 00:10:50,819
case we need<font color="#E5E5E5"> somehow that the new server</font>

210
00:10:47,819 --> 00:10:52,949
which takes<font color="#E5E5E5"> over the clients of the</font>

211
00:10:50,819 --> 00:10:56,010
<font color="#E5E5E5">field server should have information</font>

212
00:10:52,949 --> 00:11:00,779
about all<font color="#CCCCCC"> the client State and to</font>

213
00:10:56,010 --> 00:11:03,750
achieve that<font color="#CCCCCC"> NFS Ganesha</font><font color="#E5E5E5"> uses takes</font>

214
00:11:00,779 --> 00:11:05,970
advantage of the already<font color="#E5E5E5"> clustering</font>

215
00:11:03,750 --> 00:11:08,220
solution provided by surface so we<font color="#CCCCCC"> have</font>

216
00:11:05,970 --> 00:11:10,740
we're using<font color="#CCCCCC"> Radice</font><font color="#E5E5E5"> kV to store the</font>

217
00:11:08,220 --> 00:11:13,680
client<font color="#CCCCCC"> State</font><font color="#E5E5E5"> so let's say</font><font color="#CCCCCC"> the server</font>

218
00:11:10,740 --> 00:11:16,769
goes down then<font color="#E5E5E5"> the new active the other</font>

219
00:11:13,680 --> 00:11:18,930
active server should take up<font color="#E5E5E5"> the all the</font>

220
00:11:16,769 --> 00:11:19,889
existing<font color="#E5E5E5"> client</font><font color="#CCCCCC"> of the failed server and</font>

221
00:11:18,930 --> 00:11:22,079
it can read up the

222
00:11:19,889 --> 00:11:24,089
information from the<font color="#CCCCCC"> dados kV and then</font>

223
00:11:22,079 --> 00:11:27,868
it can continue of<font color="#E5E5E5"> course there will be</font>

224
00:11:24,089 --> 00:11:29,639
some delay in the response time but that

225
00:11:27,869 --> 00:11:33,809
is<font color="#CCCCCC"> something we will have to live up</font>

226
00:11:29,639 --> 00:11:54,749
<font color="#CCCCCC">with now I will hand over</font><font color="#E5E5E5"> to David to</font>

227
00:11:33,809 --> 00:11:59,879
talk more about<font color="#CCCCCC"> samba okay thanks for</font>

228
00:11:54,749 --> 00:12:04,290
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> so yeah hopefully you're also all</font>

229
00:11:59,879 --> 00:12:07,649
aware of<font color="#CCCCCC"> Samba in a nutshell it's</font><font color="#E5E5E5"> it</font>

230
00:12:04,290 --> 00:12:10,559
does<font color="#E5E5E5"> file and printer sharing</font><font color="#CCCCCC"> - for the</font>

231
00:12:07,649 --> 00:12:14,399
most<font color="#E5E5E5"> part</font><font color="#CCCCCC"> Windows clients via the SMB</font>

232
00:12:10,559 --> 00:12:18,389
protocol it handles authentication with

233
00:12:14,399 --> 00:12:21,959
with Windows with Active Directory<font color="#CCCCCC"> it</font>

234
00:12:18,389 --> 00:12:25,230
does ID mapping and it can connect as an

235
00:12:21,959 --> 00:12:29,309
Active Directory domain member<font color="#E5E5E5"> or more</font>

236
00:12:25,230 --> 00:12:31,559
recently a domain controller the

237
00:12:29,309 --> 00:12:36,360
protocol<font color="#E5E5E5"> itself it's sort of split</font>

238
00:12:31,559 --> 00:12:41,579
between<font color="#CCCCCC"> the the old ancient craft the</font>

239
00:12:36,360 --> 00:12:43,829
SMB dialect which was yeah quite complex

240
00:12:41,579 --> 00:12:47,248
that had you know a bunch of<font color="#CCCCCC"> a whole</font>

241
00:12:43,829 --> 00:12:49,769
heap of commands<font color="#E5E5E5"> subcommands</font><font color="#CCCCCC"> it did</font>

242
00:12:47,249 --> 00:12:52,860
include at<font color="#CCCCCC"> least for the Linux client</font>

243
00:12:49,769 --> 00:12:56,279
side it included extensions for UNIX

244
00:12:52,860 --> 00:12:59,819
which were quite helpful<font color="#E5E5E5"> but with</font>

245
00:12:56,279 --> 00:13:03,350
Windows<font color="#CCCCCC"> Vista Microsoft</font><font color="#E5E5E5"> sort of made a</font>

246
00:12:59,819 --> 00:13:07,439
clean break<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the previous SMB</font>

247
00:13:03,350 --> 00:13:10,589
dialect and yeah<font color="#E5E5E5"> brought in SMB</font><font color="#CCCCCC"> - which</font>

248
00:13:07,439 --> 00:13:15,149
is much more simplified and at<font color="#E5E5E5"> least</font>

249
00:13:10,589 --> 00:13:17,519
initially it<font color="#CCCCCC"> yeah sort of also</font><font color="#E5E5E5"> offered</font>

250
00:13:15,149 --> 00:13:22,199
some nice things like<font color="#E5E5E5"> larger larger i/o</font>

251
00:13:17,519 --> 00:13:25,709
sizes also<font color="#E5E5E5"> more</font><font color="#CCCCCC"> recently in that</font><font color="#E5E5E5"> it's</font>

252
00:13:22,199 --> 00:13:28,769
it's still evolving<font color="#CCCCCC"> over time</font><font color="#E5E5E5"> there have</font>

253
00:13:25,709 --> 00:13:34,180
been<font color="#E5E5E5"> some some impressive</font><font color="#CCCCCC"> new features</font>

254
00:13:28,769 --> 00:13:37,450
added<font color="#E5E5E5"> with smb3 31.1 we have</font>

255
00:13:34,180 --> 00:13:41,800
now<font color="#E5E5E5"> so SMB direct which is sort of our</font>

256
00:13:37,450 --> 00:13:46,300
DMA extensions for for SMB<font color="#CCCCCC"> multi-channel</font>

257
00:13:41,800 --> 00:13:49,199
<font color="#E5E5E5">so something close</font><font color="#CCCCCC"> to em Pio with other</font>

258
00:13:46,300 --> 00:13:51,969
protocols<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a scuzzy or whatever</font>

259
00:13:49,200 --> 00:13:55,480
<font color="#CCCCCC">witness protocol so this is in allowing</font>

260
00:13:51,970 --> 00:13:58,740
a client<font color="#E5E5E5"> to to monitor and receive</font>

261
00:13:55,480 --> 00:14:03,850
<font color="#CCCCCC">notifications on the</font><font color="#E5E5E5"> state of</font><font color="#CCCCCC"> scale-out</font>

262
00:13:58,740 --> 00:14:10,000
clustered<font color="#CCCCCC"> SMB server also</font><font color="#E5E5E5"> the extensions</font>

263
00:14:03,850 --> 00:14:12,910
for encryption<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> client side</font><font color="#E5E5E5"> we</font>

264
00:14:10,000 --> 00:14:16,080
have at least<font color="#CCCCCC"> alongside Samba</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> most</font>

265
00:14:12,910 --> 00:14:19,410
common one would would then be<font color="#CCCCCC"> Windows</font>

266
00:14:16,080 --> 00:14:22,510
<font color="#CCCCCC">yeah one thing worth mentioning is that</font>

267
00:14:19,410 --> 00:14:24,339
Microsoft nowadays do a great job in in

268
00:14:22,510 --> 00:14:27,310
<font color="#E5E5E5">publishing</font><font color="#CCCCCC"> you know the entire</font>

269
00:14:24,340 --> 00:14:29,710
specifications<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> protocol so it's</font>

270
00:14:27,310 --> 00:14:32,880
no<font color="#CCCCCC"> longer such a</font><font color="#E5E5E5"> you know arduous</font>

271
00:14:29,710 --> 00:14:39,100
reverse engineering process<font color="#CCCCCC"> it's all</font>

272
00:14:32,880 --> 00:14:42,570
done in the open<font color="#CCCCCC"> Mac OS</font><font color="#E5E5E5"> since Mavericks</font>

273
00:14:39,100 --> 00:14:45,910
I think they've used SMB<font color="#E5E5E5"> by default</font>

274
00:14:42,570 --> 00:14:50,080
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> also a common client and with</font>

275
00:14:45,910 --> 00:14:52,500
Linux we have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internal</font><font color="#E5E5E5"> 6ko client</font>

276
00:14:50,080 --> 00:14:57,490
and<font color="#CCCCCC"> SMB client</font>

277
00:14:52,500 --> 00:15:04,600
there's also a more recent<font color="#E5E5E5"> lib smb2 from</font>

278
00:14:57,490 --> 00:15:09,370
Ronnie interesting<font color="#E5E5E5"> we</font><font color="#CCCCCC"> Sabol or scale-out</font>

279
00:15:04,600 --> 00:15:13,510
<font color="#CCCCCC">Samba</font><font color="#E5E5E5"> yeah I think this was initially</font>

280
00:15:09,370 --> 00:15:18,070
sort of implemented<font color="#E5E5E5"> by IBM and soon it</font>

281
00:15:13,510 --> 00:15:22,180
<font color="#E5E5E5">but there we had or we still have CTD be</font>

282
00:15:18,070 --> 00:15:25,450
so Samba<font color="#CCCCCC"> for storing session state</font><font color="#E5E5E5"> uses</font>

283
00:15:22,180 --> 00:15:29,140
<font color="#E5E5E5">a database which is referred to as TD</font>

284
00:15:25,450 --> 00:15:31,540
<font color="#CCCCCC">Beach reveal database in a clustered set</font>

285
00:15:29,140 --> 00:15:34,930
<font color="#CCCCCC">up we then obviously need to share this</font>

286
00:15:31,540 --> 00:15:39,569
information<font color="#E5E5E5"> across nodes participating</font>

287
00:15:34,930 --> 00:15:42,219
in the<font color="#CCCCCC"> cluster so we have this CTD be</font>

288
00:15:39,570 --> 00:15:45,550
when that handles so<font color="#E5E5E5"> outside from the</font>

289
00:15:42,220 --> 00:15:47,710
<font color="#E5E5E5">database it also has basically a</font><font color="#CCCCCC"> H a</font>

290
00:15:45,550 --> 00:15:51,520
stack bolted on to<font color="#E5E5E5"> handle</font>

291
00:15:47,710 --> 00:15:59,200
during our<font color="#CCCCCC"> election of masters</font><font color="#E5E5E5"> failover</font>

292
00:15:51,520 --> 00:16:00,699
within the cluster<font color="#CCCCCC"> I think of sort</font><font color="#E5E5E5"> of</font>

293
00:15:59,200 --> 00:16:03,820
run through most<font color="#E5E5E5"> of those points but</font>

294
00:16:00,700 --> 00:16:07,300
yeah this<font color="#E5E5E5"> is sort of how</font><font color="#CCCCCC"> we then fit in</font>

295
00:16:03,820 --> 00:16:11,050
<font color="#E5E5E5">alongside a safe cluster so we have our</font>

296
00:16:07,300 --> 00:16:16,359
our safe gateway which again<font color="#E5E5E5"> so similar</font>

297
00:16:11,050 --> 00:16:20,530
to NFS Ganesha<font color="#CCCCCC"> we have with sambara</font><font color="#E5E5E5"> VFS</font>

298
00:16:16,360 --> 00:16:23,590
or a file system<font color="#E5E5E5"> abstraction where we we</font>

299
00:16:20,530 --> 00:16:28,209
can then<font color="#E5E5E5"> just</font><font color="#CCCCCC"> plumb</font><font color="#E5E5E5"> lips ffs directly in</font>

300
00:16:23,590 --> 00:16:30,940
there that then<font color="#E5E5E5"> just translates or</font><font color="#CCCCCC"> Samba</font>

301
00:16:28,210 --> 00:16:35,800
then just acts as<font color="#E5E5E5"> a translator from the</font>

302
00:16:30,940 --> 00:16:39,870
SMB<font color="#CCCCCC"> IO packets coming into OSD MBS</font>

303
00:16:35,800 --> 00:16:43,240
requests requests at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> back end</font><font color="#CCCCCC"> and</font>

304
00:16:39,870 --> 00:16:49,810
<font color="#E5E5E5">yeah along the slide there we have the</font>

305
00:16:43,240 --> 00:16:53,290
<font color="#E5E5E5">database for storing persistent</font><font color="#CCCCCC"> state at</font>

306
00:16:49,810 --> 00:16:57,599
<font color="#E5E5E5">this stage with sample you have this</font><font color="#CCCCCC"> VF</font>

307
00:16:53,290 --> 00:17:02,290
<font color="#CCCCCC">SF back end I think added by in-tank</font>

308
00:16:57,600 --> 00:17:05,020
<font color="#E5E5E5">quite a few years ago</font><font color="#CCCCCC"> so that sort of</font>

309
00:17:02,290 --> 00:17:10,149
yeah<font color="#CCCCCC"> plums into</font><font color="#E5E5E5"> most of the hooks that</font>

310
00:17:05,020 --> 00:17:12,700
<font color="#E5E5E5">we have in in the Samba</font><font color="#CCCCCC"> VFS</font><font color="#E5E5E5"> it uses just</font>

311
00:17:10,150 --> 00:17:15,730
static<font color="#CCCCCC"> suffix credentials to</font>

312
00:17:12,700 --> 00:17:17,589
authenticate with the<font color="#CCCCCC"> AF cluster</font><font color="#E5E5E5"> and so</font>

313
00:17:15,730 --> 00:17:21,099
at this stage there's sort of no mapping

314
00:17:17,589 --> 00:17:24,399
between users and<font color="#CCCCCC"> groups on the the SMB</font>

315
00:17:21,099 --> 00:17:26,159
<font color="#E5E5E5">side and you know what's used for the</font>

316
00:17:24,400 --> 00:17:31,000
SEF cluster

317
00:17:26,160 --> 00:17:33,730
it supports POSIX<font color="#CCCCCC"> ackles so</font><font color="#E5E5E5"> Samba</font>

318
00:17:31,000 --> 00:17:36,910
handles mapping between the<font color="#CCCCCC"> NT or</font>

319
00:17:33,730 --> 00:17:39,670
Windows NT<font color="#CCCCCC"> ackles</font><font color="#E5E5E5"> and POSIX</font><font color="#CCCCCC"> ackles and</font>

320
00:17:36,910 --> 00:17:46,170
then we just<font color="#E5E5E5"> add stamp that attribute on</font>

321
00:17:39,670 --> 00:17:46,170
to the<font color="#E5E5E5"> the files and directories</font>

322
00:17:47,680 --> 00:17:53,650
<font color="#CCCCCC">we the C T to be that requires what's</font>

323
00:17:50,950 --> 00:17:57,310
called a clustered mutex helper<font color="#E5E5E5"> so</font>

324
00:17:53,650 --> 00:18:00,940
that's then used for<font color="#E5E5E5"> yeah avoiding split</font>

325
00:17:57,310 --> 00:18:03,990
split brain<font color="#E5E5E5"> within the cluster so we</font>

326
00:18:00,940 --> 00:18:07,630
have sort of<font color="#CCCCCC"> just a</font><font color="#E5E5E5"> standalone utility</font>

327
00:18:03,990 --> 00:18:11,860
which uses<font color="#E5E5E5"> just write-offs locks on the</font>

328
00:18:07,630 --> 00:18:14,620
<font color="#E5E5E5">SEF cluster also</font><font color="#CCCCCC"> SEF we brought our</font>

329
00:18:11,860 --> 00:18:16,479
service integrations<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> here's</font>

330
00:18:14,620 --> 00:18:21,310
something<font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> hopefully push upstream</font>

331
00:18:16,480 --> 00:18:25,060
soon<font color="#CCCCCC"> it just</font><font color="#E5E5E5"> allows or sees sambar then</font>

332
00:18:21,310 --> 00:18:27,429
<font color="#CCCCCC">advertise yeah the the</font><font color="#E5E5E5"> availability of</font>

333
00:18:25,060 --> 00:18:32,850
<font color="#E5E5E5">the service to others have manager</font>

334
00:18:27,430 --> 00:18:36,160
<font color="#E5E5E5">daemon for testing</font>

335
00:18:32,850 --> 00:18:39,750
there's nothing sort of<font color="#CCCCCC"> safe</font><font color="#E5E5E5"> sambar</font>

336
00:18:36,160 --> 00:18:43,030
<font color="#E5E5E5">specific at the moment or integrated so</font>

337
00:18:39,750 --> 00:18:45,340
for the<font color="#E5E5E5"> most part I'm just</font><font color="#CCCCCC"> continuing to</font>

338
00:18:43,030 --> 00:18:50,020
use SMB torture which is quite a

339
00:18:45,340 --> 00:18:53,199
comprehensive<font color="#E5E5E5"> protocol test suite with</font>

340
00:18:50,020 --> 00:18:57,760
<font color="#E5E5E5">the Linux kernel client there's the X of</font>

341
00:18:53,200 --> 00:18:59,740
<font color="#CCCCCC">s</font><font color="#E5E5E5"> or FS test suite and</font><font color="#CCCCCC"> interrupt testing</font>

342
00:18:57,760 --> 00:19:02,700
for the most part it's sort of more<font color="#E5E5E5"> a</font>

343
00:18:59,740 --> 00:19:04,900
manual process at the<font color="#E5E5E5"> moment but</font>

344
00:19:02,700 --> 00:19:10,410
hopefully we'll<font color="#CCCCCC"> get something more</font>

345
00:19:04,900 --> 00:19:10,410
automated now<font color="#E5E5E5"> on to performance</font>

346
00:19:27,159 --> 00:19:34,070
so we did run some benchmarking for<font color="#E5E5E5"> and</font>

347
00:19:31,070 --> 00:19:36,939
if it's<font color="#E5E5E5"> Ganesha and summer and how it</font>

348
00:19:34,070 --> 00:19:41,450
performs with respect to a native

349
00:19:36,940 --> 00:19:43,789
<font color="#E5E5E5">surface</font><font color="#CCCCCC"> corner clanked so this is what</font>

350
00:19:41,450 --> 00:19:48,159
<font color="#CCCCCC">our benchmark</font><font color="#E5E5E5"> setup looks like we have</font>

351
00:19:43,789 --> 00:19:51,529
five OSD nodes<font color="#E5E5E5"> three monitors and six</font>

352
00:19:48,159 --> 00:19:55,789
<font color="#E5E5E5">OSD demon spawn</font><font color="#CCCCCC"> node and we are using</font>

353
00:19:51,529 --> 00:19:59,269
blue store<font color="#CCCCCC"> and we did run benchmark</font><font color="#E5E5E5"> over</font>

354
00:19:55,789 --> 00:20:02,960
<font color="#E5E5E5">ten clients and each client had 16 cores</font>

355
00:19:59,269 --> 00:20:06,019
and 16<font color="#CCCCCC"> gigabytes wrap</font><font color="#E5E5E5"> the public network</font>

356
00:20:02,960 --> 00:20:10,159
was<font color="#E5E5E5"> 10 gigabit per second and cluster</font>

357
00:20:06,019 --> 00:20:12,950
<font color="#E5E5E5">network 100 gigabit per second for</font>

358
00:20:10,159 --> 00:20:16,700
<font color="#CCCCCC">benchmarking we are using fire</font><font color="#E5E5E5"> so we are</font>

359
00:20:12,950 --> 00:20:18,860
reading<font color="#E5E5E5"> writing</font><font color="#CCCCCC"> to data</font><font color="#E5E5E5"> to a file of a</font>

360
00:20:16,700 --> 00:20:21,649
specific size for a specified time<font color="#CCCCCC"> and</font>

361
00:20:18,860 --> 00:20:25,039
we are running<font color="#E5E5E5"> this benchmarking over</font>

362
00:20:21,649 --> 00:20:27,168
the<font color="#CCCCCC"> ten Cline notes and one job type</font>

363
00:20:25,039 --> 00:20:30,440
would look something like number of

364
00:20:27,169 --> 00:20:33,289
workers and for each worker thread we

365
00:20:30,440 --> 00:20:36,950
are running<font color="#E5E5E5"> for these possible block</font>

366
00:20:33,289 --> 00:20:43,279
sizes<font color="#E5E5E5"> and we are we did test only for</font>

367
00:20:36,950 --> 00:20:46,460
the<font color="#E5E5E5"> read</font><font color="#CCCCCC"> write at this stage so at so if</font>

368
00:20:43,279 --> 00:20:48,169
we have<font color="#E5E5E5"> ten clients and on each client</font>

369
00:20:46,460 --> 00:20:51,139
through when we run only<font color="#E5E5E5"> single thread</font>

370
00:20:48,169 --> 00:20:55,309
then you have<font color="#E5E5E5"> x16 jobs and at max we can</font>

371
00:20:51,139 --> 00:20:58,580
have like<font color="#CCCCCC"> 160 jobs so for any physical</font>

372
00:20:55,309 --> 00:21:02,330
<font color="#CCCCCC">Asia I used NFS Kanishka version 2.5 or</font>

373
00:20:58,580 --> 00:21:05,480
<font color="#CCCCCC">2 there's already 2.6 start-up stream</font>

374
00:21:02,330 --> 00:21:08,059
which has<font color="#E5E5E5"> quite a few improvements</font><font color="#CCCCCC"> over</font>

375
00:21:05,480 --> 00:21:11,299
this<font color="#CCCCCC"> version so you should keep</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> mind</font>

376
00:21:08,059 --> 00:21:18,980
<font color="#E5E5E5">when</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at the output</font><font color="#CCCCCC"> safe</font><font color="#E5E5E5"> version</font>

377
00:21:11,299 --> 00:21:22,309
12.2.2 single<font color="#CCCCCC"> NFS Ganesha server and we</font>

378
00:21:18,980 --> 00:21:24,799
mounted<font color="#CCCCCC"> using NFS version 4.0</font><font color="#E5E5E5"> for my</font>

379
00:21:22,309 --> 00:21:25,560
test<font color="#E5E5E5"> I was reading and writing</font><font color="#CCCCCC"> to one</font>

380
00:21:24,799 --> 00:21:30,180
gigabyte

381
00:21:25,560 --> 00:21:35,520
for approximately<font color="#CCCCCC"> two minutes if you see</font>

382
00:21:30,180 --> 00:21:38,430
then<font color="#E5E5E5"> first full disclaimer that I did</font>

383
00:21:35,520 --> 00:21:41,389
not disable caching so the results are

384
00:21:38,430 --> 00:21:43,950
<font color="#CCCCCC">very high for both surface</font><font color="#E5E5E5"> and Ganesha</font>

385
00:21:41,390 --> 00:21:45,900
<font color="#E5E5E5">in real life application I would guess</font>

386
00:21:43,950 --> 00:21:48,960
that<font color="#E5E5E5"> people would be</font><font color="#CCCCCC"> using caching so in</font>

387
00:21:45,900 --> 00:21:51,810
a way it's<font color="#E5E5E5"> okay but maybe we need</font><font color="#CCCCCC"> to be</font>

388
00:21:48,960 --> 00:21:55,010
<font color="#E5E5E5">benchmark with caching disabled if you</font>

389
00:21:51,810 --> 00:21:57,870
see the output then for a single thread

390
00:21:55,010 --> 00:22:00,960
<font color="#CCCCCC">kanesha's bandwidth is approximately</font><font color="#E5E5E5"> 80%</font>

391
00:21:57,870 --> 00:22:03,360
of<font color="#CCCCCC"> what native surface Cardiff Line</font>

392
00:22:00,960 --> 00:22:06,030
provides<font color="#E5E5E5"> but as number of threads</font>

393
00:22:03,360 --> 00:22:10,409
increases the performance degrades both

394
00:22:06,030 --> 00:22:15,530
for CFS and<font color="#E5E5E5"> NFS Ganesha but more for NFS</font>

395
00:22:10,410 --> 00:22:18,750
Ganesha<font color="#E5E5E5"> this is a more comprehensive</font>

396
00:22:15,530 --> 00:22:21,540
<font color="#E5E5E5">readwrite ratio bandwidth comparison for</font>

397
00:22:18,750 --> 00:22:25,920
<font color="#E5E5E5">Ganesha and</font><font color="#CCCCCC"> syphilis so if you look at</font>

398
00:22:21,540 --> 00:22:28,080
the first data point<font color="#CCCCCC"> on x-axis that is</font>

399
00:22:25,920 --> 00:22:30,570
<font color="#E5E5E5">just a single thread and then it's</font>

400
00:22:28,080 --> 00:22:34,550
<font color="#E5E5E5">approximately 80% of what's ffs</font>

401
00:22:30,570 --> 00:22:37,830
bandwidth is but then it degrades so

402
00:22:34,550 --> 00:22:40,110
it's obvious that<font color="#E5E5E5"> as then</font><font color="#CCCCCC"> workers</font>

403
00:22:37,830 --> 00:22:41,639
threads are<font color="#E5E5E5"> increasing a single</font><font color="#CCCCCC"> NFS</font>

404
00:22:40,110 --> 00:22:44,879
<font color="#CCCCCC">Kaneesha server is going</font><font color="#E5E5E5"> to be a</font>

405
00:22:41,640 --> 00:22:48,000
<font color="#CCCCCC">bottleneck</font><font color="#E5E5E5"> and in that case we need</font><font color="#CCCCCC"> to</font>

406
00:22:44,880 --> 00:22:51,900
have multiple<font color="#E5E5E5"> Ganesha servers taking</font>

407
00:22:48,000 --> 00:22:55,860
<font color="#E5E5E5">care of multiple clients this is</font><font color="#CCCCCC"> a lot</font>

408
00:22:51,900 --> 00:22:58,830
latency graph as<font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> number</font>

409
00:22:55,860 --> 00:23:04,790
of threads increases<font color="#E5E5E5"> Ganesha latency</font><font color="#CCCCCC"> is</font>

410
00:22:58,830 --> 00:23:04,790
of course higher now I will hand<font color="#E5E5E5"> over to</font>

411
00:23:19,570 --> 00:23:25,178
yeah so for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> sambar results I just</font>

412
00:23:22,660 --> 00:23:28,870
mention yeah<font color="#E5E5E5"> these are quite preliminary</font>

413
00:23:25,179 --> 00:23:31,120
so I've just<font color="#CCCCCC"> been</font><font color="#E5E5E5"> running these yeah up</font>

414
00:23:28,870 --> 00:23:35,260
to the weekend so the grass I'm showing

415
00:23:31,120 --> 00:23:38,080
us sort<font color="#E5E5E5"> of generated this morning</font><font color="#CCCCCC"> yeah</font>

416
00:23:35,260 --> 00:23:38,590
I'm<font color="#E5E5E5"> running so similar</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> to so</font>

417
00:23:38,080 --> 00:23:41,530
pretty

418
00:23:38,590 --> 00:23:43,799
for NFS<font color="#E5E5E5"> this is just with a slightly</font>

419
00:23:41,530 --> 00:23:48,580
<font color="#E5E5E5">more recent version of safe luminous I</font>

420
00:23:43,799 --> 00:23:51,129
have<font color="#E5E5E5"> sambar 4.6 with</font><font color="#CCCCCC"> three sambar</font>

421
00:23:48,580 --> 00:23:54,730
gateways<font color="#E5E5E5"> set up all sort of exposing</font>

422
00:23:51,130 --> 00:24:00,010
isolated parts of the<font color="#E5E5E5"> CFS</font><font color="#CCCCCC"> straight to</font>

423
00:23:54,730 --> 00:24:03,299
tree<font color="#CCCCCC"> I have up locks or</font><font color="#E5E5E5"> leases disabled</font>

424
00:24:00,010 --> 00:24:07,480
<font color="#E5E5E5">so that's currently one limitation of</font>

425
00:24:03,299 --> 00:24:12,908
<font color="#E5E5E5">one of many limitations of the the</font><font color="#CCCCCC"> safe</font>

426
00:24:07,480 --> 00:24:16,360
<font color="#CCCCCC">sambar</font><font color="#E5E5E5"> setup and I'm using Linux</font><font color="#CCCCCC"> Scott</font>

427
00:24:12,909 --> 00:24:19,480
<font color="#E5E5E5">sipeo as the the client with a</font>

428
00:24:16,360 --> 00:24:21,699
relatively old<font color="#E5E5E5"> colonel but this has a</font>

429
00:24:19,480 --> 00:24:25,480
bunch of back ports on top so it's the

430
00:24:21,700 --> 00:24:33,220
thusly or openSUSE leap<font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> and I'm</font>

431
00:24:25,480 --> 00:24:36,549
using the smb3<font color="#CCCCCC"> 3.0 SMB dialect</font><font color="#E5E5E5"> so in</font>

432
00:24:33,220 --> 00:24:39,640
this case these are<font color="#E5E5E5"> sort of the the</font>

433
00:24:36,549 --> 00:24:44,620
results I had for<font color="#E5E5E5"> for CFS aggregator</font>

434
00:24:39,640 --> 00:24:49,120
bandwidth<font color="#E5E5E5"> across all ten clients so sort</font>

435
00:24:44,620 --> 00:24:54,809
of around<font color="#E5E5E5"> 3.5</font><font color="#CCCCCC"> gigabit</font><font color="#E5E5E5"> per second for</font>

436
00:24:49,120 --> 00:24:56,709
read<font color="#CCCCCC"> and write with the Samba gateway</font>

437
00:24:54,809 --> 00:24:59,799
already gone too far there

438
00:24:56,710 --> 00:25:02,140
and so there's yeah I think<font color="#E5E5E5"> a</font>

439
00:24:59,799 --> 00:25:05,200
considerable drop in in throughput<font color="#CCCCCC"> and</font>

440
00:25:02,140 --> 00:25:08,970
these are a sort of Shaban<font color="#CCCCCC"> Shinya</font>

441
00:25:05,200 --> 00:25:11,559
streaming<font color="#CCCCCC"> they're all streaming</font><font color="#E5E5E5"> io tests</font>

442
00:25:08,970 --> 00:25:17,340
and then we just have a bunch<font color="#E5E5E5"> of</font>

443
00:25:11,559 --> 00:25:21,490
different<font color="#CCCCCC"> io sizes so</font><font color="#E5E5E5"> 4k</font><font color="#CCCCCC"> for the lower</font>

444
00:25:17,340 --> 00:25:25,059
throughput results<font color="#CCCCCC"> one made</font>

445
00:25:21,490 --> 00:25:28,410
<font color="#E5E5E5">and for Meg iOS and then we have one</font>

446
00:25:25,059 --> 00:25:32,678
worker<font color="#CCCCCC"> thread per client</font><font color="#E5E5E5"> of ten clients</font>

447
00:25:28,410 --> 00:25:37,179
<font color="#CCCCCC">for threads or for workers 8 and 16 at</font>

448
00:25:32,679 --> 00:25:39,309
the<font color="#E5E5E5"> end there</font><font color="#CCCCCC"> yes so that's</font><font color="#E5E5E5"> these are</font>

449
00:25:37,179 --> 00:25:42,370
sort of<font color="#E5E5E5"> the results I have to to now</font>

450
00:25:39,309 --> 00:25:45,129
<font color="#E5E5E5">begin</font><font color="#CCCCCC"> their sort of analysis and</font>

451
00:25:42,370 --> 00:25:49,739
determine<font color="#E5E5E5"> where the existing bottlenecks</font>

452
00:25:45,130 --> 00:25:51,790
are<font color="#CCCCCC"> but at this stage I think one of the</font>

453
00:25:49,740 --> 00:25:55,570
again I'm<font color="#E5E5E5"> sort of speculating a little</font>

454
00:25:51,790 --> 00:25:59,050
<font color="#CCCCCC">without going sort of further into the</font>

455
00:25:55,570 --> 00:26:03,030
detailed<font color="#CCCCCC"> results but yeah</font><font color="#E5E5E5"> that at this</font>

456
00:25:59,050 --> 00:26:07,809
stage<font color="#CCCCCC"> sandy uses or has a synchronous</font>

457
00:26:03,030 --> 00:26:12,879
fully synchronous<font color="#E5E5E5"> back-end for yeah</font>

458
00:26:07,809 --> 00:26:15,940
<font color="#E5E5E5">dispatching website FS iOS so I think</font>

459
00:26:12,880 --> 00:26:19,090
converting that from the synchronous

460
00:26:15,940 --> 00:26:22,200
back into something which<font color="#CCCCCC"> Sam but also</font>

461
00:26:19,090 --> 00:26:26,169
offers which is sort of a<font color="#E5E5E5"> pthread pool</font>

462
00:26:22,200 --> 00:26:28,690
for for local<font color="#E5E5E5"> file system</font><font color="#CCCCCC"> IO and I think</font>

463
00:26:26,170 --> 00:26:29,980
there will we should see a significant

464
00:26:28,690 --> 00:26:32,650
<font color="#CCCCCC">improvement</font>

465
00:26:29,980 --> 00:26:36,429
the other one was casing<font color="#CCCCCC"> or</font><font color="#E5E5E5"> client-side</font>

466
00:26:32,650 --> 00:26:39,910
<font color="#CCCCCC">caching so SMB the protocol itself</font>

467
00:26:36,429 --> 00:26:45,250
allows for sort<font color="#E5E5E5"> of considerable caching</font>

468
00:26:39,910 --> 00:26:49,110
and notifications of page breaks<font color="#E5E5E5"> so</font>

469
00:26:45,250 --> 00:26:53,679
similar to<font color="#E5E5E5"> say professors native</font>

470
00:26:49,110 --> 00:26:57,459
capabilities<font color="#E5E5E5"> flags so</font><font color="#CCCCCC"> yeah having</font><font color="#E5E5E5"> some</font>

471
00:26:53,679 --> 00:26:59,890
<font color="#E5E5E5">sort of mapping between these two casing</font>

472
00:26:57,460 --> 00:27:03,340
mechanisms to then fully allow the<font color="#CCCCCC"> the</font>

473
00:26:59,890 --> 00:27:06,850
<font color="#E5E5E5">sis or SMB client to perform occasion</font>

474
00:27:03,340 --> 00:27:13,899
<font color="#E5E5E5">which also I think significantly</font>

475
00:27:06,850 --> 00:27:15,309
<font color="#CCCCCC">improved</font><font color="#E5E5E5"> results there so now</font><font color="#CCCCCC"> onto</font><font color="#E5E5E5"> yeah</font>

476
00:27:13,900 --> 00:27:17,590
challenges and sort of<font color="#E5E5E5"> what we're</font>

477
00:27:15,309 --> 00:27:21,428
currently<font color="#CCCCCC"> working on where we</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to go</font>

478
00:27:17,590 --> 00:27:25,178
with with sambar and<font color="#E5E5E5"> NFS as a gateway</font>

479
00:27:21,429 --> 00:27:29,200
<font color="#CCCCCC">for surf so at the moment we're sort</font><font color="#E5E5E5"> of</font>

480
00:27:25,179 --> 00:27:33,010
focused on<font color="#CCCCCC"> yeah cross protocol support</font>

481
00:27:29,200 --> 00:27:34,870
so and I<font color="#E5E5E5"> think at the</font><font color="#CCCCCC"> moment</font>

482
00:27:33,010 --> 00:27:40,450
NFS Ganesha is is

483
00:27:34,870 --> 00:27:45,669
<font color="#CCCCCC">in ACL support so ideally we'd have the</font>

484
00:27:40,450 --> 00:27:51,670
ACLS<font color="#CCCCCC"> on Samba NFS and</font><font color="#E5E5E5"> the native</font><font color="#CCCCCC"> service</font>

485
00:27:45,670 --> 00:27:55,390
<font color="#E5E5E5">client all consistent coherent casings</font>

486
00:27:51,670 --> 00:27:56,890
so this is more<font color="#E5E5E5"> just at least the</font><font color="#CCCCCC"> Samba</font>

487
00:27:55,390 --> 00:28:01,300
side that then<font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> improved to</font>

488
00:27:56,890 --> 00:28:07,450
<font color="#E5E5E5">allow for leasing or SMB</font><font color="#CCCCCC"> off locks with</font>

489
00:28:01,300 --> 00:28:11,290
CFS unified authentication<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> think it</font>

490
00:28:07,450 --> 00:28:13,920
was VMware<font color="#E5E5E5"> upstream in</font><font color="#CCCCCC"> seth</font><font color="#E5E5E5"> where we're</font>

491
00:28:11,290 --> 00:28:17,139
looking<font color="#E5E5E5"> at adding</font><font color="#CCCCCC"> Active</font><font color="#E5E5E5"> Directory</font>

492
00:28:13,920 --> 00:28:21,130
<font color="#E5E5E5">support as a replacement for well as</font>

493
00:28:17,140 --> 00:28:24,580
something<font color="#CCCCCC"> alongside suffix if that were</font>

494
00:28:21,130 --> 00:28:28,900
to<font color="#CCCCCC"> come in and we could look at yeah</font>

495
00:28:24,580 --> 00:28:30,760
using basically<font color="#E5E5E5"> the the SMB client at</font>

496
00:28:28,900 --> 00:28:33,970
the<font color="#E5E5E5"> Active</font><font color="#CCCCCC"> Directory or Kerberos tickets</font>

497
00:28:30,760 --> 00:28:36,879
to venoth<font color="#CCCCCC"> entik eight with that specific</font>

498
00:28:33,970 --> 00:28:40,210
user we<font color="#CCCCCC"> plus have cluster now so that's</font>

499
00:28:36,880 --> 00:28:45,220
also<font color="#E5E5E5"> something</font><font color="#CCCCCC"> which would be nice to</font>

500
00:28:40,210 --> 00:28:47,740
have a sink<font color="#E5E5E5"> i/o at the yeah Samba</font>

501
00:28:45,220 --> 00:28:49,950
<font color="#E5E5E5">back-end</font><font color="#CCCCCC"> that's something I mentioned</font>

502
00:28:47,740 --> 00:28:53,040
earlier I<font color="#E5E5E5"> think there we would see</font>

503
00:28:49,950 --> 00:28:56,530
considerable performance improvements

504
00:28:53,040 --> 00:29:00,480
multi-channel support<font color="#E5E5E5"> so this is the the</font>

505
00:28:56,530 --> 00:29:03,639
ability<font color="#CCCCCC"> to sort of</font><font color="#E5E5E5"> they utilize multiple</font>

506
00:29:00,480 --> 00:29:06,430
network interfaces on an SMB server and

507
00:29:03,640 --> 00:29:08,950
then sort<font color="#E5E5E5"> of round robin or failover</font>

508
00:29:06,430 --> 00:29:11,980
between those interfaces<font color="#CCCCCC"> and that's not</font>

509
00:29:08,950 --> 00:29:16,410
currently fully supportive with<font color="#E5E5E5"> samba</font>

510
00:29:11,980 --> 00:29:20,860
<font color="#E5E5E5">but hopefully that</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> then come soon</font>

511
00:29:16,410 --> 00:29:23,380
<font color="#E5E5E5">deployment so at the moment</font>

512
00:29:20,860 --> 00:29:26,050
Samba isn't integrated into deep sea

513
00:29:23,380 --> 00:29:28,240
which<font color="#CCCCCC"> is sort of the utility we use for</font>

514
00:29:26,050 --> 00:29:34,930
deploying as<font color="#CCCCCC"> half cluster for the ensues</font>

515
00:29:28,240 --> 00:29:40,720
<font color="#CCCCCC">er witness protocol again</font><font color="#E5E5E5"> this is very</font>

516
00:29:34,930 --> 00:29:43,870
SMB specific so allowing<font color="#E5E5E5"> yeah the Samba</font>

517
00:29:40,720 --> 00:29:45,730
or<font color="#CCCCCC"> surf cluster to notify</font><font color="#E5E5E5"> SME clients</font>

518
00:29:43,870 --> 00:29:48,939
and

519
00:29:45,730 --> 00:29:53,260
yeah sort of<font color="#E5E5E5"> balance</font><font color="#CCCCCC"> load across the SMB</font>

520
00:29:48,940 --> 00:30:00,610
<font color="#E5E5E5">gateways would be something good to have</font>

521
00:29:53,260 --> 00:30:04,030
and finally<font color="#CCCCCC"> yeah the this</font><font color="#E5E5E5"> replacement</font>

522
00:30:00,610 --> 00:30:07,840
for<font color="#CCCCCC"> CTD B</font><font color="#E5E5E5"> or potentially using the</font>

523
00:30:04,030 --> 00:30:12,610
raddest key value store instead<font color="#E5E5E5"> of a</font>

524
00:30:07,840 --> 00:30:16,120
full<font color="#CCCCCC"> h a stack would be I think a nice</font>

525
00:30:12,610 --> 00:30:21,428
simplification<font color="#CCCCCC"> for the architecture of a</font>

526
00:30:16,120 --> 00:30:24,689
<font color="#E5E5E5">clustered Samba gateway and yeah</font>

527
00:30:21,429 --> 00:30:27,640
something<font color="#CCCCCC"> where we're looking</font><font color="#E5E5E5"> into</font>

528
00:30:24,690 --> 00:30:35,679
so now<font color="#CCCCCC"> NFS</font><font color="#E5E5E5"> future</font>

529
00:30:27,640 --> 00:30:38,160
<font color="#E5E5E5">it's the last slide so so upstream is</font>

530
00:30:35,679 --> 00:30:40,660
already have<font color="#E5E5E5"> started working</font><font color="#CCCCCC"> on having</font>

531
00:30:38,160 --> 00:30:43,570
clustering support in NFS<font color="#CCCCCC"> kanesha was</font>

532
00:30:40,660 --> 00:30:47,049
without<font color="#E5E5E5"> using the</font><font color="#CCCCCC"> Linux HEA so it means</font>

533
00:30:43,570 --> 00:30:50,230
that<font color="#E5E5E5"> there will be support in Ganesha</font><font color="#CCCCCC"> to</font>

534
00:30:47,049 --> 00:30:52,450
manage the clients<font color="#CCCCCC"> I think it's more</font>

535
00:30:50,230 --> 00:30:55,750
targeted<font color="#E5E5E5"> toward using Cuban interests</font>

536
00:30:52,450 --> 00:30:58,270
with NFS<font color="#CCCCCC"> Kaneesha</font><font color="#E5E5E5"> then another feature</font>

537
00:30:55,750 --> 00:31:02,620
would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> to have version 4.1 support</font>

538
00:30:58,270 --> 00:31:06,418
which means<font color="#CCCCCC"> be NFS and as Liberatore</font>

539
00:31:02,620 --> 00:31:06,418
service integration would also be nice

540
00:31:07,110 --> 00:31:10,168
thank you

541
00:31:15,380 --> 00:31:18,280
yes<font color="#E5E5E5"> Owen</font>

542
00:31:35,690 --> 00:31:39,530
can you repeat the<font color="#CCCCCC"> question</font>

543
00:32:06,910 --> 00:32:14,410
<font color="#E5E5E5">okay so the question is if P</font><font color="#CCCCCC"> NFS is the</font>

544
00:32:11,660 --> 00:32:22,340
near future of<font color="#E5E5E5"> a nervous condition no</font>

545
00:32:14,410 --> 00:32:25,940
but in<font color="#CCCCCC"> Seth so so I can answer</font><font color="#E5E5E5"> for NF is</font>

546
00:32:22,340 --> 00:32:28,490
Ganesha so I would say yes<font color="#CCCCCC"> the upstream</font>

547
00:32:25,940 --> 00:32:30,880
community is looking<font color="#CCCCCC"> into having P NFS</font>

548
00:32:28,490 --> 00:32:30,880
support

549
00:32:35,030 --> 00:32:41,840
so with<font color="#CCCCCC"> Samba there's</font><font color="#E5E5E5"> at least</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> SME</font>

550
00:32:38,240 --> 00:32:44,360
<font color="#E5E5E5">particle itself</font><font color="#CCCCCC"> it doesn't have anything</font>

551
00:32:41,840 --> 00:32:48,290
similar<font color="#CCCCCC"> to two p NFS or at least at this</font>

552
00:32:44,360 --> 00:32:50,810
<font color="#CCCCCC">stage</font><font color="#E5E5E5"> down the world so I think the</font>

553
00:32:48,290 --> 00:32:53,330
closest would be<font color="#E5E5E5"> multi-channel so just</font>

554
00:32:50,810 --> 00:32:55,820
allowing the clients to sort<font color="#E5E5E5"> of utilize</font>

555
00:32:53,330 --> 00:32:58,490
multiple connections and and round-robin

556
00:32:55,820 --> 00:33:23,929
or stripe across them<font color="#E5E5E5"> but it's still</font>

557
00:32:58,490 --> 00:33:27,620
very<font color="#E5E5E5"> different to P NFS</font><font color="#CCCCCC"> that's true</font>

558
00:33:23,930 --> 00:33:28,970
that's<font color="#E5E5E5"> I think another task which needs</font>

559
00:33:27,620 --> 00:33:33,169
to be<font color="#CCCCCC"> addressed sorry</font>

560
00:33:28,970 --> 00:33:38,690
so the question was<font color="#E5E5E5"> coherent locking</font>

561
00:33:33,170 --> 00:33:42,370
between both NFS and<font color="#E5E5E5"> SMB clients so at</font>

562
00:33:38,690 --> 00:33:45,140
this stage<font color="#CCCCCC"> yeah we sort</font><font color="#E5E5E5"> of support</font>

563
00:33:42,370 --> 00:33:46,850
independent isolated as<font color="#CCCCCC"> in being</font><font color="#E5E5E5"> NFS</font>

564
00:33:45,140 --> 00:33:49,430
setups<font color="#E5E5E5"> but yes</font>

565
00:33:46,850 --> 00:33:54,550
locking would be something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we'd</font>

566
00:33:49,430 --> 00:33:54,550
<font color="#CCCCCC">like to have yes</font>

567
00:34:01,770 --> 00:34:11,040
so the question<font color="#E5E5E5"> was how close is the</font>

568
00:34:05,730 --> 00:34:11,040
EFSF implementation for production use

569
00:34:11,399 --> 00:34:17,618
<font color="#E5E5E5">so I can say that within Sousa we</font>

570
00:34:14,980 --> 00:34:21,310
currently provide<font color="#E5E5E5"> it as a tech preview</font>

571
00:34:17,619 --> 00:34:23,560
<font color="#CCCCCC">for our storage product I think if</font>

572
00:34:21,310 --> 00:34:26,649
you're purely using<font color="#CCCCCC"> it for course amber</font>

573
00:34:23,560 --> 00:34:30,549
or to expose<font color="#CCCCCC"> Seth to SMB clients then</font>

574
00:34:26,649 --> 00:34:32,888
it's absolutely<font color="#CCCCCC"> usable so we found there</font>

575
00:34:30,550 --> 00:34:35,379
have been a few bugs<font color="#E5E5E5"> just with sort of</font>

576
00:34:32,889 --> 00:34:37,780
certain operations<font color="#CCCCCC"> getting through the</font>

577
00:34:35,379 --> 00:34:41,250
<font color="#E5E5E5">VFS and hitting the local file</font><font color="#CCCCCC"> system</font>

578
00:34:37,780 --> 00:34:46,659
but<font color="#E5E5E5"> I think most of them are fixable</font>

579
00:34:41,250 --> 00:34:49,960
so it's<font color="#E5E5E5"> getting there</font><font color="#CCCCCC"> things like you</font>

580
00:34:46,659 --> 00:34:52,240
know scalable performance<font color="#CCCCCC"> that's that</font>

581
00:34:49,960 --> 00:34:59,010
would then<font color="#CCCCCC"> be sort of further out</font><font color="#E5E5E5"> I</font>

582
00:34:52,239 --> 00:34:59,009
<font color="#E5E5E5">think any other questions</font>

583
00:35:01,230 --> 00:35:13,090
otherwise<font color="#CCCCCC"> yeah thanks for coming</font>

584
00:35:05,400 --> 00:35:13,090
[Applause]

585
00:36:57,590 --> 00:37:05,910
for the other person

586
00:36:59,579 --> 00:37:08,749
oh yeah drink<font color="#E5E5E5"> so during this nation we</font>

587
00:37:05,910 --> 00:37:08,749
should<font color="#E5E5E5"> be green yes</font>

