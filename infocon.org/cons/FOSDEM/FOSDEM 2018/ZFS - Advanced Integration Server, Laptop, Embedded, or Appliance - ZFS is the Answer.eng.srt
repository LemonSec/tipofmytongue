1
00:00:04,790 --> 00:00:09,400
I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about</font>

2
00:00:07,000 --> 00:00:14,440
<font color="#CCCCCC">ZFS and advanced integrations between it</font>

3
00:00:09,400 --> 00:00:18,369
and<font color="#CCCCCC"> FreeBSD so my name</font><font color="#E5E5E5"> is Alan Jude I'm</font>

4
00:00:14,440 --> 00:00:20,590
a previously server admin for 16 years

5
00:00:18,369 --> 00:00:22,900
now<font color="#E5E5E5"> recently I got more involved in the</font>

6
00:00:20,590 --> 00:00:26,560
project becoming a documentation

7
00:00:22,900 --> 00:00:29,470
committer in 2014<font color="#E5E5E5"> and then a source</font>

8
00:00:26,560 --> 00:00:32,769
committer in 2015 and then was<font color="#CCCCCC"> elected</font>

9
00:00:29,470 --> 00:00:34,750
to the<font color="#CCCCCC"> FreeBSD core team</font><font color="#E5E5E5"> in 2016</font>

10
00:00:32,769 --> 00:00:37,900
<font color="#E5E5E5">I've also co-authored</font><font color="#CCCCCC"> two books with</font>

11
00:00:34,750 --> 00:00:40,780
<font color="#E5E5E5">Michael</font><font color="#CCCCCC"> Lucas FreeBSD mastery's NFS and</font>

12
00:00:37,900 --> 00:00:43,809
previously<font color="#E5E5E5"> mastered advanced set of s so</font>

13
00:00:40,780 --> 00:00:45,190
if you<font color="#E5E5E5"> want to if some of the stuff here</font>

14
00:00:43,809 --> 00:00:47,680
is a bit advanced<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you want to start</font>

15
00:00:45,190 --> 00:00:49,890
at<font color="#E5E5E5"> the beginning the set of s mastery</font>

16
00:00:47,680 --> 00:00:51,969
book covers the very basics of ZFS<font color="#E5E5E5"> and</font>

17
00:00:49,890 --> 00:00:54,789
getting it<font color="#E5E5E5"> set up and using it on your</font>

18
00:00:51,969 --> 00:00:57,730
<font color="#CCCCCC">computer</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> advance</font><font color="#E5E5E5"> that FS book</font>

19
00:00:54,789 --> 00:00:59,590
covers things like tuning it for running

20
00:00:57,730 --> 00:01:02,680
database servers and things<font color="#E5E5E5"> of that</font>

21
00:00:59,590 --> 00:01:05,680
nature<font color="#CCCCCC"> for my day</font><font color="#E5E5E5"> job I'm</font><font color="#CCCCCC"> the architect</font>

22
00:01:02,680 --> 00:01:07,680
<font color="#E5E5E5">of the scale engine CDN basically a live</font>

23
00:01:05,680 --> 00:01:11,409
video streaming company that I<font color="#E5E5E5"> started</font>

24
00:01:07,680 --> 00:01:13,990
and I also host a<font color="#CCCCCC"> weekly podcast BST</font><font color="#E5E5E5"> now</font>

25
00:01:11,409 --> 00:01:16,479
<font color="#E5E5E5">TV where we talk</font><font color="#CCCCCC"> about the</font><font color="#E5E5E5"> latest news</font>

26
00:01:13,990 --> 00:01:18,669
<font color="#E5E5E5">in all of</font><font color="#CCCCCC"> the bsds</font><font color="#E5E5E5"> and interviewed</font>

27
00:01:16,479 --> 00:01:22,530
developers and system<font color="#E5E5E5"> ins and other</font>

28
00:01:18,670 --> 00:01:25,110
people from<font color="#E5E5E5"> the community</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

29
00:01:22,530 --> 00:01:28,030
<font color="#CCCCCC">230 episodes in our back</font><font color="#E5E5E5"> catalogue now</font>

30
00:01:25,110 --> 00:01:29,490
so there's always something<font color="#CCCCCC"> that you're</font>

31
00:01:28,030 --> 00:01:32,830
interested<font color="#E5E5E5"> in there somewhere</font>

32
00:01:29,490 --> 00:01:34,990
<font color="#E5E5E5">and I use a lot of ZFS myself with over</font>

33
00:01:32,830 --> 00:01:38,860
a petabyte of<font color="#E5E5E5"> storage that</font><font color="#CCCCCC"> I've managed</font>

34
00:01:34,990 --> 00:01:41,530
by<font color="#CCCCCC"> myself so I've</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> it for</font><font color="#CCCCCC"> a</font>

35
00:01:38,860 --> 00:01:42,880
little<font color="#E5E5E5"> bit so for a quick overview for</font>

36
00:01:41,530 --> 00:01:46,180
some people that might<font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> that</font>

37
00:01:42,880 --> 00:01:48,100
familiar with<font color="#CCCCCC"> said</font><font color="#E5E5E5"> if s the device is</font>

38
00:01:46,180 --> 00:01:51,280
<font color="#E5E5E5">basically the combination</font><font color="#CCCCCC"> of a</font>

39
00:01:48,100 --> 00:01:55,270
<font color="#CCCCCC">filesystem and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> volume manager</font><font color="#E5E5E5"> so</font>

40
00:01:51,280 --> 00:01:56,860
<font color="#CCCCCC">it's software</font><font color="#E5E5E5"> raid that is intimately</font>

41
00:01:55,270 --> 00:01:59,289
<font color="#E5E5E5">familiar with the file</font><font color="#CCCCCC"> system so it</font>

42
00:01:56,860 --> 00:02:01,030
knows exactly<font color="#E5E5E5"> which blocks are in use</font>

43
00:01:59,290 --> 00:02:02,860
and which ones are free<font color="#E5E5E5"> so when you</font>

44
00:02:01,030 --> 00:02:04,420
replace<font color="#E5E5E5"> the failed disk</font><font color="#CCCCCC"> it only has to</font>

45
00:02:02,860 --> 00:02:06,189
copy over<font color="#CCCCCC"> the data that</font><font color="#E5E5E5"> was in use and</font>

46
00:02:04,420 --> 00:02:10,390
it gets to skip all the free<font color="#E5E5E5"> space and</font>

47
00:02:06,189 --> 00:02:12,430
so<font color="#CCCCCC"> on and it solves the partitioning</font>

48
00:02:10,389 --> 00:02:13,779
problem<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of taking your hard</font>

49
00:02:12,430 --> 00:02:15,730
drive and slicing<font color="#E5E5E5"> it up into a bunch of</font>

50
00:02:13,780 --> 00:02:18,489
file systems<font color="#E5E5E5"> and having to decide at the</font>

51
00:02:15,730 --> 00:02:19,200
beginning how big you know<font color="#CCCCCC"> /var is</font><font color="#E5E5E5"> going</font>

52
00:02:18,489 --> 00:02:20,550
to be

53
00:02:19,200 --> 00:02:23,579
how big<font color="#CCCCCC"> do</font><font color="#E5E5E5"> home directors are going</font><font color="#CCCCCC"> to</font>

54
00:02:20,550 --> 00:02:25,379
be<font color="#E5E5E5"> it takes the</font><font color="#CCCCCC"> pooled approach it puts</font>

55
00:02:23,580 --> 00:02:27,780
all of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> storage in</font><font color="#CCCCCC"> one big pool and</font>

56
00:02:25,379 --> 00:02:29,760
you build many file systems on<font color="#CCCCCC"> it and</font>

57
00:02:27,780 --> 00:02:31,560
they all take space as<font color="#E5E5E5"> needed out of</font>

58
00:02:29,760 --> 00:02:34,980
<font color="#CCCCCC">that</font><font color="#E5E5E5"> pool</font><font color="#CCCCCC"> and you can also create</font>

59
00:02:31,560 --> 00:02:36,810
reservations to ensure your log file

60
00:02:34,980 --> 00:02:38,429
system doesn't<font color="#E5E5E5"> run out of space just</font>

61
00:02:36,810 --> 00:02:41,099
<font color="#E5E5E5">because people are filling up their home</font>

62
00:02:38,430 --> 00:02:43,709
directories with movies or<font color="#E5E5E5"> something or</font>

63
00:02:41,099 --> 00:02:45,149
<font color="#E5E5E5">potes to stop a certain and a set</font><font color="#CCCCCC"> from</font>

64
00:02:43,709 --> 00:02:48,420
using<font color="#E5E5E5"> more than in such an amount of</font>

65
00:02:45,150 --> 00:02:50,310
space<font color="#CCCCCC"> so this way you don't get the the</font>

66
00:02:48,420 --> 00:02:52,140
<font color="#E5E5E5">free space fragmentation problem right</font>

67
00:02:50,310 --> 00:02:53,580
where you<font color="#E5E5E5"> have 50 gigs free in this</font>

68
00:02:52,140 --> 00:02:55,980
partition and<font color="#E5E5E5"> 50</font><font color="#CCCCCC"> gigs free in that</font>

69
00:02:53,580 --> 00:02:59,700
partition<font color="#E5E5E5"> and you have a 70 gauge VM</font>

70
00:02:55,980 --> 00:03:03,420
image and<font color="#E5E5E5"> nowhere to</font><font color="#CCCCCC"> put it</font><font color="#E5E5E5"> so it's all</font>

71
00:02:59,700 --> 00:03:05,940
sad as well<font color="#CCCCCC"> and importantly any</font><font color="#E5E5E5"> data you</font>

72
00:03:03,420 --> 00:03:08,399
write to the disk<font color="#E5E5E5"> along with it in the</font>

73
00:03:05,940 --> 00:03:10,380
metadata<font color="#CCCCCC"> feds edifice stores</font><font color="#E5E5E5"> it stores a</font>

74
00:03:08,400 --> 00:03:12,180
checksum so that when it reads that<font color="#E5E5E5"> data</font>

75
00:03:10,380 --> 00:03:16,680
back from<font color="#E5E5E5"> the disk it can tell if the</font>

76
00:03:12,180 --> 00:03:18,150
disk has flipped a bit or it got a read

77
00:03:16,680 --> 00:03:20,040
<font color="#E5E5E5">from the wrong sector or something as</font>

78
00:03:18,150 --> 00:03:23,280
long and the data is<font color="#E5E5E5"> not actually what</font>

79
00:03:20,040 --> 00:03:25,290
you wrote<font color="#E5E5E5"> out</font><font color="#CCCCCC"> originally</font><font color="#E5E5E5"> and because</font>

80
00:03:23,280 --> 00:03:27,750
it's the software rate implementation

81
00:03:25,290 --> 00:03:29,638
<font color="#E5E5E5">whether you have a mirror or what's</font>

82
00:03:27,750 --> 00:03:34,410
called<font color="#CCCCCC"> raid Zed which is raid five six</font>

83
00:03:29,639 --> 00:03:37,310
or even<font color="#E5E5E5"> triple parity it can read from</font>

84
00:03:34,410 --> 00:03:39,780
one of the other blocks<font color="#E5E5E5"> and recover it</font>

85
00:03:37,310 --> 00:03:42,090
<font color="#E5E5E5">it also solves the split-brain</font>

86
00:03:39,780 --> 00:03:45,120
problem with a<font color="#CCCCCC"> mirror</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know if you</font>

87
00:03:42,090 --> 00:03:47,040
have a mirror<font color="#E5E5E5"> and it turns out the same</font>

88
00:03:45,120 --> 00:03:48,690
sector on two halves of the mirror<font color="#E5E5E5"> have</font>

89
00:03:47,040 --> 00:03:51,090
different data how do you know which

90
00:03:48,690 --> 00:03:52,380
one's<font color="#E5E5E5"> the right one well if you have a</font>

91
00:03:51,090 --> 00:03:54,090
checksum you know which one's the<font color="#CCCCCC"> right</font>

92
00:03:52,380 --> 00:03:55,590
one<font color="#E5E5E5"> and you can replace the incorrect</font>

93
00:03:54,090 --> 00:03:59,160
one with the correct one and<font color="#E5E5E5"> now both</font>

94
00:03:55,590 --> 00:04:01,769
sides<font color="#E5E5E5"> your mirror agree again whereas</font>

95
00:03:59,160 --> 00:04:03,599
with a hardware<font color="#CCCCCC"> RAID or even</font><font color="#E5E5E5"> this other</font>

96
00:04:01,769 --> 00:04:05,099
software<font color="#CCCCCC"> nearing you would have to just</font>

97
00:04:03,599 --> 00:04:07,530
pick one of<font color="#CCCCCC"> the disks</font><font color="#E5E5E5"> to be the winner</font>

98
00:04:05,099 --> 00:04:11,190
<font color="#E5E5E5">and have it overwrite everything on the</font>

99
00:04:07,530 --> 00:04:13,340
<font color="#E5E5E5">other disk until it matched it also</font>

100
00:04:11,190 --> 00:04:15,510
supports transparent compression so

101
00:04:13,340 --> 00:04:17,250
before<font color="#CCCCCC"> that is written</font><font color="#E5E5E5"> to the disk you</font>

102
00:04:15,510 --> 00:04:20,849
can<font color="#CCCCCC"> run it through</font><font color="#E5E5E5"> the very fast</font><font color="#CCCCCC"> lz4</font>

103
00:04:17,250 --> 00:04:23,550
<font color="#E5E5E5">compressor which can compress a gigabyte</font>

104
00:04:20,849 --> 00:04:26,250
per second per core<font color="#E5E5E5"> even on a</font><font color="#CCCCCC"> laptop so</font>

105
00:04:23,550 --> 00:04:28,500
it's<font color="#E5E5E5"> not going to slow down</font><font color="#CCCCCC"> your writing</font>

106
00:04:26,250 --> 00:04:30,360
to the disk but if your data compresses

107
00:04:28,500 --> 00:04:31,550
<font color="#E5E5E5">two to one like the you know a base</font>

108
00:04:30,360 --> 00:04:35,150
<font color="#CCCCCC">installer freebsd can</font>

109
00:04:31,550 --> 00:04:36,620
is about<font color="#E5E5E5"> two to</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> it means you can</font>

110
00:04:35,150 --> 00:04:37,880
write twice as fast as your<font color="#CCCCCC"> disses</font>

111
00:04:36,620 --> 00:04:41,150
<font color="#E5E5E5">actually capable of</font><font color="#CCCCCC"> writing because you</font>

112
00:04:37,880 --> 00:04:42,860
can press the data then<font color="#CCCCCC"> right and it's</font>

113
00:04:41,150 --> 00:04:45,409
all<font color="#E5E5E5"> copy on</font><font color="#CCCCCC"> right so you get</font>

114
00:04:42,860 --> 00:04:47,270
instantaneous snapshots<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can</font>

115
00:04:45,410 --> 00:04:51,110
<font color="#E5E5E5">create clones where you a writable</font>

116
00:04:47,270 --> 00:04:53,419
snapshot basically<font color="#CCCCCC"> and it means</font><font color="#E5E5E5"> that in</font>

117
00:04:51,110 --> 00:04:55,310
the event<font color="#CCCCCC"> of a crash or</font><font color="#E5E5E5"> a power failure</font>

118
00:04:53,420 --> 00:04:56,630
in<font color="#E5E5E5"> the middle of writing a file the old</font>

119
00:04:55,310 --> 00:04:58,610
<font color="#E5E5E5">version of the file is still preserved</font>

120
00:04:56,630 --> 00:05:00,350
<font color="#E5E5E5">somewhere else on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> disk and it can</font>

121
00:04:58,610 --> 00:05:02,390
roll back<font color="#E5E5E5"> to that instead of having</font>

122
00:05:00,350 --> 00:05:04,010
overwritten<font color="#E5E5E5"> half of the original file</font>

123
00:05:02,390 --> 00:05:07,880
but not<font color="#E5E5E5"> the second half and you end up</font>

124
00:05:04,010 --> 00:05:09,890
<font color="#CCCCCC">with corrupt</font><font color="#E5E5E5"> data and as we said because</font>

125
00:05:07,880 --> 00:05:12,290
<font color="#E5E5E5">it's a combination of the file system</font>

126
00:05:09,890 --> 00:05:14,510
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> volume manager</font><font color="#E5E5E5"> you create many</font>

127
00:05:12,290 --> 00:05:16,250
file systems on top<font color="#E5E5E5"> of the pool</font><font color="#CCCCCC"> and each</font>

128
00:05:14,510 --> 00:05:19,490
one<font color="#E5E5E5"> has tunable parameters like you can</font>

129
00:05:16,250 --> 00:05:21,380
enable<font color="#E5E5E5"> or disable the compression or you</font>

130
00:05:19,490 --> 00:05:23,480
know<font color="#CCCCCC"> crates</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> seven locks or many</font>

131
00:05:21,380 --> 00:05:27,860
other tunable settings<font color="#E5E5E5"> that we'll talk a</font>

132
00:05:23,480 --> 00:05:29,330
little<font color="#E5E5E5"> bit about coming up so a lot of</font>

133
00:05:27,860 --> 00:05:31,670
what we're gonna<font color="#E5E5E5"> talk about is based on</font>

134
00:05:29,330 --> 00:05:35,570
<font color="#E5E5E5">the snapshots and</font><font color="#CCCCCC"> clones you can create</font>

135
00:05:31,670 --> 00:05:37,880
in ZFS<font color="#E5E5E5"> because all data is copy-on-write</font>

136
00:05:35,570 --> 00:05:39,920
<font color="#E5E5E5">meaning instead of</font><font color="#CCCCCC"> overwriting</font><font color="#E5E5E5"> a file</font>

137
00:05:37,880 --> 00:05:41,420
when<font color="#E5E5E5"> it's modified the new space is</font>

138
00:05:39,920 --> 00:05:43,400
allocated<font color="#CCCCCC"> the new version of the files</font>

139
00:05:41,420 --> 00:05:45,260
<font color="#CCCCCC">written over here and then the index</font><font color="#E5E5E5"> is</font>

140
00:05:43,400 --> 00:05:47,840
updated<font color="#CCCCCC"> to point to the new version</font><font color="#E5E5E5"> and</font>

141
00:05:45,260 --> 00:05:50,210
if nothing<font color="#E5E5E5"> else uses the old version</font>

142
00:05:47,840 --> 00:05:51,919
<font color="#E5E5E5">that becomes free space but if you've</font>

143
00:05:50,210 --> 00:05:53,989
taken a snapshot of<font color="#E5E5E5"> the file system</font>

144
00:05:51,920 --> 00:05:56,450
before<font color="#CCCCCC"> you made the change</font><font color="#E5E5E5"> we keep the</font>

145
00:05:53,990 --> 00:05:59,150
<font color="#CCCCCC">old version as well and now you have two</font>

146
00:05:56,450 --> 00:06:01,310
copies<font color="#CCCCCC"> of your</font><font color="#E5E5E5"> file system one before</font>

147
00:05:59,150 --> 00:06:02,750
<font color="#E5E5E5">and one after but it only takes</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> the</font>

148
00:06:01,310 --> 00:06:05,150
space<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the amount of difference there</font>

149
00:06:02,750 --> 00:06:07,580
<font color="#E5E5E5">is any blocks that</font><font color="#CCCCCC"> are the</font><font color="#E5E5E5"> same between</font>

150
00:06:05,150 --> 00:06:09,859
the two file systems are shared<font color="#E5E5E5"> and you</font>

151
00:06:07,580 --> 00:06:11,960
don't have to have twice<font color="#E5E5E5"> as</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> space</font>

152
00:06:09,860 --> 00:06:15,440
<font color="#E5E5E5">to store twice as much</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> versions of</font>

153
00:06:11,960 --> 00:06:19,640
<font color="#E5E5E5">every file</font><font color="#CCCCCC"> so blocks are referenced by a</font>

154
00:06:15,440 --> 00:06:21,770
snapshot<font color="#E5E5E5"> and when the zero reference</font><font color="#CCCCCC"> is</font>

155
00:06:19,640 --> 00:06:24,409
left<font color="#E5E5E5"> it gets becomes free space and can</font>

156
00:06:21,770 --> 00:06:28,640
be overwritten later but the snapshots

157
00:06:24,410 --> 00:06:30,560
allow<font color="#E5E5E5"> you to access the what the file</font>

158
00:06:28,640 --> 00:06:32,630
looked like at the<font color="#CCCCCC"> time you take the</font>

159
00:06:30,560 --> 00:06:34,040
snapshot so if you have a<font color="#E5E5E5"> production</font>

160
00:06:32,630 --> 00:06:36,440
database and it's running<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can take a</font>

161
00:06:34,040 --> 00:06:39,260
<font color="#E5E5E5">snapshot every 10</font><font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> and then you</font>

162
00:06:36,440 --> 00:06:41,570
<font color="#CCCCCC">find out well</font><font color="#E5E5E5"> five minutes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> this</font>

163
00:06:39,260 --> 00:06:43,849
table got accidentally<font color="#E5E5E5"> deleted and then</font>

164
00:06:41,570 --> 00:06:44,479
there's a<font color="#E5E5E5"> snapshot that you can mount</font>

165
00:06:43,850 --> 00:06:47,330
and

166
00:06:44,479 --> 00:06:50,210
yet<font color="#E5E5E5"> what the database</font><font color="#CCCCCC"> looked like ten</font>

167
00:06:47,330 --> 00:06:55,039
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can undelete your</font>

168
00:06:50,210 --> 00:06:57,258
data<font color="#CCCCCC"> the best</font><font color="#E5E5E5"> part is unlike a lot of</font>

169
00:06:55,039 --> 00:06:58,759
other<font color="#CCCCCC"> systems like LVM</font><font color="#E5E5E5"> there's no</font>

170
00:06:57,259 --> 00:07:01,729
<font color="#E5E5E5">performance impact for how many</font>

171
00:06:58,759 --> 00:07:03,559
snapshots<font color="#CCCCCC"> you have because you're always</font>

172
00:07:01,729 --> 00:07:05,389
<font color="#E5E5E5">copy-on-write you're always writing new</font>

173
00:07:03,559 --> 00:07:09,199
data to a new<font color="#E5E5E5"> place and then either</font>

174
00:07:05,389 --> 00:07:11,389
<font color="#CCCCCC">freeing or not</font><font color="#E5E5E5"> the old data if you have</font>

175
00:07:09,199 --> 00:07:13,550
one snapshot<font color="#CCCCCC"> or a hundred snapshots</font><font color="#E5E5E5"> or a</font>

176
00:07:11,389 --> 00:07:15,379
thousand snapshots<font color="#E5E5E5"> it doesn't affect how</font>

177
00:07:13,550 --> 00:07:19,639
<font color="#CCCCCC">long it takes to</font><font color="#E5E5E5"> write new data to the</font>

178
00:07:15,379 --> 00:07:21,740
disk<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the worst impact you can have</font>

179
00:07:19,639 --> 00:07:23,599
<font color="#E5E5E5">is listing all the</font><font color="#CCCCCC"> snapshots</font><font color="#E5E5E5"> can take</font>

180
00:07:21,740 --> 00:07:25,490
longer if you<font color="#CCCCCC"> have 10,000 snapshots but</font>

181
00:07:23,599 --> 00:07:29,180
that's not something<font color="#CCCCCC"> you do that</font>

182
00:07:25,490 --> 00:07:30,860
<font color="#E5E5E5">frequently and the snapshots don't</font>

183
00:07:29,180 --> 00:07:32,599
really take any additional<font color="#E5E5E5"> space</font><font color="#CCCCCC"> it's</font>

184
00:07:30,860 --> 00:07:35,990
like<font color="#E5E5E5"> 100 kilobytes of metadata or</font>

185
00:07:32,599 --> 00:07:38,120
something but if nothing<font color="#E5E5E5"> changes</font><font color="#CCCCCC"> no</font>

186
00:07:35,990 --> 00:07:39,979
extra space is consumed<font color="#E5E5E5"> it's only when</font>

187
00:07:38,120 --> 00:07:43,309
you overwrite a file or change a file

188
00:07:39,979 --> 00:07:45,438
<font color="#E5E5E5">the original version is kept and the new</font>

189
00:07:43,309 --> 00:07:47,809
<font color="#E5E5E5">version is kept and</font><font color="#CCCCCC"> so that consumes</font>

190
00:07:45,439 --> 00:07:49,789
that<font color="#E5E5E5"> the amount of space equal to the</font>

191
00:07:47,809 --> 00:07:53,599
amount<font color="#E5E5E5"> of difference you have in the</font>

192
00:07:49,789 --> 00:07:55,339
files but by using clones which are

193
00:07:53,599 --> 00:07:57,498
basically a writable version of the

194
00:07:55,339 --> 00:08:00,169
snapshot<font color="#E5E5E5"> basically you make a second</font>

195
00:07:57,499 --> 00:08:02,479
file system that<font color="#CCCCCC"> is exactly what the</font>

196
00:08:00,169 --> 00:08:04,159
snapshot was<font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> change it but</font>

197
00:08:02,479 --> 00:08:06,050
any blocks that<font color="#CCCCCC"> are still the same</font><font color="#E5E5E5"> are</font>

198
00:08:04,159 --> 00:08:08,149
still shared so don't consume any

199
00:08:06,050 --> 00:08:09,469
additional space<font color="#E5E5E5"> it allows you to fork</font>

200
00:08:08,149 --> 00:08:10,399
<font color="#E5E5E5">the</font><font color="#CCCCCC"> filesystem kind</font><font color="#E5E5E5"> of like when you do</font>

201
00:08:09,469 --> 00:08:14,270
a clone on github

202
00:08:10,399 --> 00:08:15,529
this way you know<font color="#CCCCCC"> popular thing is if</font>

203
00:08:14,270 --> 00:08:16,698
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> test them upgrade</font><font color="#CCCCCC"> you're</font>

204
00:08:15,529 --> 00:08:18,889
going to upgrade<font color="#CCCCCC"> the database</font><font color="#E5E5E5"> or the</font>

205
00:08:16,699 --> 00:08:21,259
<font color="#E5E5E5">software that's going to use the data</font>

206
00:08:18,889 --> 00:08:23,539
if you snapshot the<font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> and clone</font>

207
00:08:21,259 --> 00:08:26,389
it<font color="#E5E5E5"> you can run the</font><font color="#CCCCCC"> upgrade process on</font>

208
00:08:23,539 --> 00:08:28,610
the clone and if it works<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

209
00:08:26,389 --> 00:08:30,560
<font color="#E5E5E5">promote that</font><font color="#CCCCCC"> to being the</font><font color="#E5E5E5"> the master</font><font color="#CCCCCC"> or</font>

210
00:08:28,610 --> 00:08:32,180
if it didn't you can throw it away

211
00:08:30,560 --> 00:08:34,909
and clone it again and try<font color="#E5E5E5"> again until</font>

212
00:08:32,179 --> 00:08:37,539
<font color="#CCCCCC">you</font><font color="#E5E5E5"> get it working all this without</font>

213
00:08:34,909 --> 00:08:41,809
<font color="#CCCCCC">actually taking up any</font><font color="#E5E5E5"> additional space</font>

214
00:08:37,539 --> 00:08:44,689
so we apply that<font color="#E5E5E5"> concept to</font><font color="#CCCCCC"> your root</font>

215
00:08:41,809 --> 00:08:47,540
filesystem<font color="#E5E5E5"> so if your root filesystem</font>

216
00:08:44,690 --> 00:08:49,310
resides on ZFS<font color="#E5E5E5"> you can take a snapshot</font>

217
00:08:47,540 --> 00:08:52,040
<font color="#E5E5E5">of it before</font><font color="#CCCCCC"> you do an upgrade and</font>

218
00:08:49,310 --> 00:08:55,399
create a clone of<font color="#CCCCCC"> that so</font><font color="#E5E5E5"> now you have</font>

219
00:08:52,040 --> 00:08:56,870
<font color="#CCCCCC">to root file systems your live one</font><font color="#E5E5E5"> and</font>

220
00:08:55,399 --> 00:09:00,260
you have one called before

221
00:08:56,870 --> 00:09:02,360
upgraded<font color="#CCCCCC"> and then you installed the</font>

222
00:09:00,260 --> 00:09:04,970
upgrade and it works<font color="#E5E5E5"> and everybody's</font>

223
00:09:02,360 --> 00:09:07,460
happy<font color="#CCCCCC"> or you</font><font color="#E5E5E5"> saw the upgrade and</font><font color="#CCCCCC"> it</font>

224
00:09:04,970 --> 00:09:09,740
doesn't work<font color="#E5E5E5"> and from the</font><font color="#CCCCCC"> freebsd boot</font>

225
00:09:07,460 --> 00:09:11,750
menu you select the before<font color="#CCCCCC"> i upgraded</font>

226
00:09:09,740 --> 00:09:13,700
<font color="#E5E5E5">the clone of your root filesystem</font>

227
00:09:11,750 --> 00:09:17,200
and your system is now back to<font color="#E5E5E5"> what it</font>

228
00:09:13,700 --> 00:09:19,550
<font color="#CCCCCC">looked like before you did the upgrade</font>

229
00:09:17,200 --> 00:09:23,210
<font color="#CCCCCC">but because</font><font color="#E5E5E5"> that offense lets you create</font>

230
00:09:19,550 --> 00:09:26,000
many file systems<font color="#E5E5E5"> it means that you can</font>

231
00:09:23,210 --> 00:09:29,390
have<font color="#CCCCCC"> control over the</font><font color="#E5E5E5"> granularity so</font>

232
00:09:26,000 --> 00:09:31,580
<font color="#CCCCCC">your home directory</font><font color="#E5E5E5"> doesn't go back to</font>

233
00:09:29,390 --> 00:09:33,770
before<font color="#E5E5E5"> the upgrade so you don't lose any</font>

234
00:09:31,580 --> 00:09:35,779
changes you made there<font color="#CCCCCC"> you only</font><font color="#E5E5E5"> roll</font>

235
00:09:33,770 --> 00:09:39,740
<font color="#E5E5E5">back the file system</font><font color="#CCCCCC"> that contains</font><font color="#E5E5E5"> you</font>

236
00:09:35,779 --> 00:09:42,740
know<font color="#E5E5E5"> user bin and and slash boot but</font>

237
00:09:39,740 --> 00:09:44,870
<font color="#E5E5E5">your male spool your logs your database</font>

238
00:09:42,740 --> 00:09:47,740
none of that gets reverted only the

239
00:09:44,870 --> 00:09:50,360
files you actually want to<font color="#CCCCCC"> rollback</font><font color="#E5E5E5"> and</font>

240
00:09:47,740 --> 00:09:52,970
<font color="#CCCCCC">the bootloader automatically builds a</font>

241
00:09:50,360 --> 00:09:56,000
menu<font color="#E5E5E5"> out of the most recent eight</font>

242
00:09:52,970 --> 00:09:57,980
snapshots<font color="#E5E5E5"> and allows you to roll back to</font>

243
00:09:56,000 --> 00:10:00,980
any of them<font color="#E5E5E5"> and you can also go back</font>

244
00:09:57,980 --> 00:10:04,070
forward<font color="#E5E5E5"> because they're clones you fork</font>

245
00:10:00,980 --> 00:10:06,020
<font color="#E5E5E5">the file system you have both copies</font><font color="#CCCCCC"> so</font>

246
00:10:04,070 --> 00:10:08,630
<font color="#E5E5E5">you can also mount it and cherry-pick</font>

247
00:10:06,020 --> 00:10:15,230
files out<font color="#CCCCCC"> of it or you</font><font color="#E5E5E5"> know fix it</font>

248
00:10:08,630 --> 00:10:17,120
whatever<font color="#E5E5E5"> you want and again it doesn't</font>

249
00:10:15,230 --> 00:10:18,589
<font color="#E5E5E5">you don't end up taking up twice as much</font>

250
00:10:17,120 --> 00:10:20,270
<font color="#E5E5E5">space</font><font color="#CCCCCC"> for two installs the operating</font>

251
00:10:18,589 --> 00:10:23,240
system<font color="#CCCCCC"> the only</font><font color="#E5E5E5"> additional space</font>

252
00:10:20,270 --> 00:10:26,209
consumed<font color="#E5E5E5"> bar how much data was changed</font>

253
00:10:23,240 --> 00:10:27,709
by<font color="#CCCCCC"> the upgrade so if it was</font><font color="#E5E5E5"> just a</font>

254
00:10:26,209 --> 00:10:29,599
security<font color="#E5E5E5"> patch or something</font><font color="#CCCCCC"> it's only</font>

255
00:10:27,709 --> 00:10:33,140
going to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> on the order</font><font color="#CCCCCC"> of a couple</font>

256
00:10:29,600 --> 00:10:34,610
hundred kilobytes or<font color="#E5E5E5"> something so</font>

257
00:10:33,140 --> 00:10:37,670
there's an existing<font color="#E5E5E5"> tool to help you</font>

258
00:10:34,610 --> 00:10:41,110
<font color="#CCCCCC">manage this in the ports tree or through</font>

259
00:10:37,670 --> 00:10:43,279
from packages called<font color="#CCCCCC"> vADM</font><font color="#E5E5E5"> it's</font>

260
00:10:41,110 --> 00:10:44,990
originally from<font color="#E5E5E5"> the Solaris tool with</font>

261
00:10:43,279 --> 00:10:48,320
<font color="#CCCCCC">the same</font><font color="#E5E5E5"> name</font>

262
00:10:44,990 --> 00:10:50,540
however you know this summer<font color="#E5E5E5"> I mentored</font>

263
00:10:48,320 --> 00:10:54,640
a google Summer of Code<font color="#E5E5E5"> project to build</font>

264
00:10:50,540 --> 00:10:56,689
a new so be<font color="#CCCCCC"> ADM is a shell script and</font>

265
00:10:54,640 --> 00:10:58,069
<font color="#E5E5E5">lacks some of the features I would like</font>

266
00:10:56,690 --> 00:11:01,580
to have that<font color="#CCCCCC"> we'll talk a</font><font color="#E5E5E5"> bit more about</font>

267
00:10:58,070 --> 00:11:05,089
<font color="#CCCCCC">later in the presentation</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> there's new</font>

268
00:11:01,580 --> 00:11:07,280
tool<font color="#E5E5E5"> B</font><font color="#CCCCCC"> II</font><font color="#E5E5E5"> and the library for it will</font>

269
00:11:05,089 --> 00:11:08,630
allow you to<font color="#E5E5E5"> do more complicated boot</font>

270
00:11:07,280 --> 00:11:10,670
environments and

271
00:11:08,630 --> 00:11:13,519
do them<font color="#E5E5E5"> via a library so that</font><font color="#CCCCCC"> you can</font>

272
00:11:10,670 --> 00:11:14,930
manage them<font color="#CCCCCC"> for</font><font color="#E5E5E5"> an appliance or from a</font>

273
00:11:13,519 --> 00:11:18,350
web interface<font color="#E5E5E5"> or from a graphical</font>

274
00:11:14,930 --> 00:11:20,149
interface<font color="#E5E5E5"> in your desktop environment so</font>

275
00:11:18,350 --> 00:11:22,610
the new<font color="#E5E5E5"> fool will better support the</font>

276
00:11:20,149 --> 00:11:23,720
file system properties and<font color="#E5E5E5"> other</font>

277
00:11:22,610 --> 00:11:26,509
settings you<font color="#E5E5E5"> can have further boot</font>

278
00:11:23,720 --> 00:11:28,990
environments<font color="#E5E5E5"> but will</font><font color="#CCCCCC"> also support the</font>

279
00:11:26,509 --> 00:11:32,509
<font color="#E5E5E5">concept of a deep boot</font><font color="#CCCCCC"> environment where</font>

280
00:11:28,990 --> 00:11:35,029
instead of controlling<font color="#E5E5E5"> just the root</font>

281
00:11:32,509 --> 00:11:37,670
filesystem<font color="#CCCCCC"> and reverting it you can</font>

282
00:11:35,029 --> 00:11:39,620
ensure that<font color="#CCCCCC"> your like user source</font>

283
00:11:37,670 --> 00:11:41,420
directory<font color="#E5E5E5"> has the matching source for</font>

284
00:11:39,620 --> 00:11:43,069
the matching kernel<font color="#E5E5E5"> in each of your</font>

285
00:11:41,420 --> 00:11:44,630
different boot environments and have a

286
00:11:43,069 --> 00:11:46,729
whole hierarchy that<font color="#E5E5E5"> can step</font><font color="#CCCCCC"> forward</font>

287
00:11:44,630 --> 00:11:48,319
<font color="#CCCCCC">and backward</font><font color="#E5E5E5"> as you switch boot</font>

288
00:11:46,730 --> 00:11:50,630
environments<font color="#E5E5E5"> but again your home</font>

289
00:11:48,319 --> 00:11:52,310
directory stays over<font color="#E5E5E5"> inside and doesn't</font>

290
00:11:50,630 --> 00:11:57,339
get versioned so you always<font color="#E5E5E5"> have your</font>

291
00:11:52,310 --> 00:11:59,689
latest<font color="#E5E5E5"> home directory and</font><font color="#CCCCCC"> part of the</font>

292
00:11:57,339 --> 00:12:01,970
reason we<font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> the library is so that</font>

293
00:11:59,690 --> 00:12:03,560
we could hook<font color="#E5E5E5"> it up</font><font color="#CCCCCC"> with say pkg so that</font>

294
00:12:01,970 --> 00:12:05,149
you automatically create a<font color="#E5E5E5"> new boot</font>

295
00:12:03,560 --> 00:12:08,300
environment<font color="#E5E5E5"> before</font><font color="#CCCCCC"> you run package</font>

296
00:12:05,149 --> 00:12:10,399
upgrade and so if package upgrade and

297
00:12:08,300 --> 00:12:12,079
sells a version<font color="#E5E5E5"> of X that makes your</font>

298
00:12:10,399 --> 00:12:15,920
desktop environment<font color="#E5E5E5"> not start next time</font>

299
00:12:12,079 --> 00:12:17,870
you can just reboot and choose the

300
00:12:15,920 --> 00:12:20,029
snapshot from before and<font color="#E5E5E5"> now your</font>

301
00:12:17,870 --> 00:12:21,920
desktop environment works again which is

302
00:12:20,029 --> 00:12:23,509
<font color="#E5E5E5">really handy</font><font color="#CCCCCC"> when you update</font><font color="#E5E5E5"> your laptop</font>

303
00:12:21,920 --> 00:12:29,800
before<font color="#E5E5E5"> say coming to fuzz them and</font>

304
00:12:23,509 --> 00:12:32,360
giving a presentation so<font color="#CCCCCC"> if you look at</font>

305
00:12:29,800 --> 00:12:34,189
this is the output of ZFS list which

306
00:12:32,360 --> 00:12:36,920
lists all the file systems<font color="#E5E5E5"> I've created</font>

307
00:12:34,189 --> 00:12:38,660
on my<font color="#CCCCCC"> laptop here you can see that</font>

308
00:12:36,920 --> 00:12:41,569
there's a hierarchy called<font color="#CCCCCC"> root and</font>

309
00:12:38,660 --> 00:12:43,880
under it are<font color="#CCCCCC"> a number of file systems</font>

310
00:12:41,569 --> 00:12:47,149
there's one<font color="#E5E5E5"> called default</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> two are</font>

311
00:12:43,880 --> 00:12:49,370
<font color="#E5E5E5">actually snapshots of default at after</font>

312
00:12:47,149 --> 00:12:52,579
<font color="#E5E5E5">the install and after</font><font color="#CCCCCC"> I've installed</font>

313
00:12:49,370 --> 00:12:54,410
some security patches and<font color="#E5E5E5"> then these two</font>

314
00:12:52,579 --> 00:12:56,239
snapshots<font color="#CCCCCC"> have</font><font color="#E5E5E5"> been cloned to make</font>

315
00:12:54,410 --> 00:12:59,240
<font color="#CCCCCC">actual file system</font><font color="#E5E5E5"> of them instead</font><font color="#CCCCCC"> of</font>

316
00:12:56,240 --> 00:13:01,250
<font color="#CCCCCC">just snapshots and as you see the</font>

317
00:12:59,240 --> 00:13:07,279
difference<font color="#E5E5E5"> between what I'm running now</font>

318
00:13:01,250 --> 00:13:09,439
<font color="#CCCCCC">and what was 11.0 p0 is a</font><font color="#E5E5E5"> whole 1.75</font>

319
00:13:07,279 --> 00:13:11,000
megabytes<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> doesn't cost me much to</font>

320
00:13:09,439 --> 00:13:13,069
keep<font color="#CCCCCC"> that around</font><font color="#E5E5E5"> for a while because</font>

321
00:13:11,000 --> 00:13:17,420
<font color="#E5E5E5">it's only consuming less than 2</font>

322
00:13:13,069 --> 00:13:19,729
megabytes of disk<font color="#E5E5E5"> space but if I want</font>

323
00:13:17,420 --> 00:13:23,319
<font color="#E5E5E5">from the boot menu I can select either</font>

324
00:13:19,730 --> 00:13:27,590
<font color="#E5E5E5">these</font><font color="#CCCCCC"> versions</font><font color="#E5E5E5"> and go back to them</font>

325
00:13:23,320 --> 00:13:30,760
and then the rest<font color="#E5E5E5"> of the file systems on</font>

326
00:13:27,590 --> 00:13:32,720
my pool<font color="#CCCCCC"> so I have a</font><font color="#E5E5E5"> slash TMP directory</font>

327
00:13:30,760 --> 00:13:35,330
<font color="#CCCCCC">the USR directory</font>

328
00:13:32,720 --> 00:13:37,670
<font color="#E5E5E5">is created there but it's</font><font color="#CCCCCC"> not mounted</font>

329
00:13:35,330 --> 00:13:40,010
<font color="#E5E5E5">this is so that the files that live in</font>

330
00:13:37,670 --> 00:13:42,400
user bin and user s bin will fall

331
00:13:40,010 --> 00:13:46,640
through and live in the slash partition

332
00:13:42,400 --> 00:13:48,890
<font color="#CCCCCC">and that's the one that we flip back and</font>

333
00:13:46,640 --> 00:13:52,310
forth<font color="#E5E5E5"> with the boot environments like</font><font color="#CCCCCC"> if</font>

334
00:13:48,890 --> 00:13:55,250
you<font color="#E5E5E5"> look at the previous slide</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> root</font>

335
00:13:52,310 --> 00:13:57,800
default is mounted as slash<font color="#CCCCCC"> and these</font>

336
00:13:55,250 --> 00:14:00,640
are the alternate slash partitions I

337
00:13:57,800 --> 00:14:03,410
could use<font color="#E5E5E5"> if I wanted</font><font color="#CCCCCC"> to</font>

338
00:14:00,640 --> 00:14:06,050
<font color="#CCCCCC">whereas my home directory is a</font>

339
00:14:03,410 --> 00:14:08,329
completely separate file system and it

340
00:14:06,050 --> 00:14:09,670
won't go back in time<font color="#E5E5E5"> if I decide to</font>

341
00:14:08,330 --> 00:14:12,680
boot a month old boot environment

342
00:14:09,670 --> 00:14:15,219
<font color="#E5E5E5">because I don't want yeah the slides are</font>

343
00:14:12,680 --> 00:14:18,229
only saved in<font color="#E5E5E5"> today's boot environment</font>

344
00:14:15,220 --> 00:14:19,910
<font color="#CCCCCC">so if I roll back</font><font color="#E5E5E5"> a month I need to be</font>

345
00:14:18,230 --> 00:14:24,140
able<font color="#E5E5E5"> to get the slides that only this is</font>

346
00:14:19,910 --> 00:14:26,839
it today<font color="#CCCCCC"> slash bar again is just a</font>

347
00:14:24,140 --> 00:14:30,260
parent<font color="#CCCCCC"> it doesn't exist currently that's</font>

348
00:14:26,840 --> 00:14:32,530
so that VAR<font color="#E5E5E5"> DD package</font><font color="#CCCCCC"> becomes part of</font>

349
00:14:30,260 --> 00:14:35,230
the root<font color="#E5E5E5"> filesystem</font><font color="#CCCCCC"> so that I can undo</font>

350
00:14:32,530 --> 00:14:39,380
package<font color="#E5E5E5"> upgrade if it doesn't go well</font>

351
00:14:35,230 --> 00:14:42,260
but my audit logs<font color="#CCCCCC"> and my crash dumps</font><font color="#E5E5E5"> and</font>

352
00:14:39,380 --> 00:14:44,990
my log files<font color="#CCCCCC"> I want those two always go</font>

353
00:14:42,260 --> 00:14:46,670
monotonically forward and not go

354
00:14:44,990 --> 00:14:48,740
<font color="#E5E5E5">backwards when I switch boot</font>

355
00:14:46,670 --> 00:14:55,640
environments and I<font color="#CCCCCC"> don't want to lose my</font>

356
00:14:48,740 --> 00:14:58,550
email so<font color="#CCCCCC"> one you see example this is</font>

357
00:14:55,640 --> 00:15:01,790
<font color="#E5E5E5">obviously this</font><font color="#CCCCCC"> laptop it uses boot</font>

358
00:14:58,550 --> 00:15:04,089
environments and if an OS upgrade or a

359
00:15:01,790 --> 00:15:06,800
package upgrade<font color="#CCCCCC"> goes sideways on me</font>

360
00:15:04,090 --> 00:15:10,420
especially<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know I updated this</font>

361
00:15:06,800 --> 00:15:12,410
<font color="#CCCCCC">laptop on Wednesday before I flew here</font>

362
00:15:10,420 --> 00:15:15,680
<font color="#E5E5E5">everything looked like</font><font color="#CCCCCC"> it was working</font>

363
00:15:12,410 --> 00:15:17,030
but you know you never know<font color="#E5E5E5"> what it's</font>

364
00:15:15,680 --> 00:15:19,209
going to<font color="#E5E5E5"> be the the graphics driver</font>

365
00:15:17,030 --> 00:15:21,980
decides it doesn't like the projector or

366
00:15:19,210 --> 00:15:25,880
suddenly<font color="#E5E5E5"> the PDF viewer or seg faults</font>

367
00:15:21,980 --> 00:15:28,310
instead of starting so I can just reboot

368
00:15:25,880 --> 00:15:30,500
<font color="#E5E5E5">select the boot environment from Tuesday</font>

369
00:15:28,310 --> 00:15:33,589
<font color="#CCCCCC">and everything works again and I could</font>

370
00:15:30,500 --> 00:15:35,449
do my presentation but<font color="#E5E5E5"> then I can also</font>

371
00:15:33,590 --> 00:15:38,029
go back forward tomorrow

372
00:15:35,449 --> 00:15:42,199
and figure<font color="#CCCCCC"> out why the</font><font color="#E5E5E5"> PDF viewer is</font>

373
00:15:38,029 --> 00:15:44,569
<font color="#CCCCCC">signaling</font><font color="#E5E5E5"> and like I said it preserves</font>

374
00:15:42,199 --> 00:15:48,459
my home directory<font color="#E5E5E5"> because</font><font color="#CCCCCC"> my slides</font><font color="#E5E5E5"> have</font>

375
00:15:44,569 --> 00:15:48,459
only existed<font color="#E5E5E5"> for a small amount of time</font>

376
00:15:49,419 --> 00:15:54,230
<font color="#CCCCCC">but sometimes you</font><font color="#E5E5E5"> want to go further</font><font color="#CCCCCC"> so</font>

377
00:15:52,279 --> 00:15:56,660
this is all what exists<font color="#CCCCCC"> today</font>

378
00:15:54,230 --> 00:15:58,639
you can have this in<font color="#E5E5E5"> freebsd 11 and it's</font>

379
00:15:56,660 --> 00:16:01,189
all happy but what<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

380
00:15:58,639 --> 00:16:03,559
<font color="#E5E5E5">taking</font><font color="#CCCCCC"> it forward</font><font color="#E5E5E5"> is this concept of a</font>

381
00:16:01,189 --> 00:16:05,509
deep boot environment<font color="#E5E5E5"> some use our</font>

382
00:16:03,559 --> 00:16:08,419
developers have<font color="#E5E5E5"> more complex needs and</font>

383
00:16:05,509 --> 00:16:09,949
preferences<font color="#E5E5E5"> in particular instead of</font>

384
00:16:08,419 --> 00:16:13,249
just having previously<font color="#CCCCCC"> eleven one on my</font>

385
00:16:09,949 --> 00:16:16,189
laptop<font color="#CCCCCC"> what if I a person and I want to</font>

386
00:16:13,249 --> 00:16:21,109
test the same software on FreeBSD 10<font color="#CCCCCC"> 3</font>

387
00:16:16,189 --> 00:16:22,549
<font color="#E5E5E5">FreeBSD 10 for 11 Oh</font><font color="#CCCCCC"> 11 1 and head uh I</font>

388
00:16:21,109 --> 00:16:23,779
can have a boot environment<font color="#E5E5E5"> for each of</font>

389
00:16:22,549 --> 00:16:25,459
those<font color="#E5E5E5"> and easily switch between those</font>

390
00:16:23,779 --> 00:16:28,939
versions<font color="#E5E5E5"> and again keep my home</font>

391
00:16:25,459 --> 00:16:30,858
directory<font color="#CCCCCC"> but I you know</font><font color="#E5E5E5"> want the user</font>

392
00:16:28,939 --> 00:16:34,129
source to match because I can't compile

393
00:16:30,859 --> 00:16:35,419
the VirtualBox<font color="#CCCCCC"> kernel driver without</font><font color="#E5E5E5"> the</font>

394
00:16:34,129 --> 00:16:38,569
matching<font color="#CCCCCC"> source code for the running</font>

395
00:16:35,419 --> 00:16:42,439
kernel so we'd actually<font color="#E5E5E5"> like user source</font>

396
00:16:38,569 --> 00:16:44,419
<font color="#E5E5E5">and probably user obj to live as part of</font>

397
00:16:42,439 --> 00:16:47,059
the boot<font color="#CCCCCC"> environment instead of</font><font color="#E5E5E5"> the</font>

398
00:16:44,419 --> 00:16:53,029
separate file systems so when I switch<font color="#E5E5E5"> I</font>

399
00:16:47,059 --> 00:16:55,969
get the matching source tree<font color="#CCCCCC"> so there's</font>

400
00:16:53,029 --> 00:16:58,939
a<font color="#CCCCCC"> RC script</font><font color="#E5E5E5"> that exists for the scubs</font>

401
00:16:55,970 --> 00:17:01,730
<font color="#E5E5E5">edip</font><font color="#CCCCCC"> SPE</font><font color="#E5E5E5"> that will mount the food</font>

402
00:16:58,939 --> 00:17:04,099
environments that are<font color="#E5E5E5"> children of the</font>

403
00:17:01,730 --> 00:17:07,010
direct the the file system you select as

404
00:17:04,099 --> 00:17:09,500
your<font color="#CCCCCC"> root but the</font><font color="#E5E5E5"> management tool be a</font>

405
00:17:07,010 --> 00:17:17,059
<font color="#E5E5E5">DM doesn't know how to recursively clone</font>

406
00:17:09,500 --> 00:17:23,029
those extra file systems and<font color="#CCCCCC"> so that was</font>

407
00:17:17,059 --> 00:17:27,408
<font color="#E5E5E5">the idea</font><font color="#CCCCCC"> behind writing</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> be e tool as</font>

408
00:17:23,029 --> 00:17:30,740
a<font color="#E5E5E5"> G sock so what this would</font><font color="#CCCCCC"> actually</font>

409
00:17:27,409 --> 00:17:32,299
<font color="#CCCCCC">look like</font><font color="#E5E5E5"> is I have another boot</font>

410
00:17:30,740 --> 00:17:34,850
environment<font color="#CCCCCC"> called newest</font><font color="#E5E5E5"> which maybe</font>

411
00:17:32,299 --> 00:17:37,399
has<font color="#CCCCCC"> FreeBSD head in it</font><font color="#E5E5E5"> and then I can</font>

412
00:17:34,850 --> 00:17:40,070
<font color="#E5E5E5">also clone that and the game we see well</font>

413
00:17:37,399 --> 00:17:42,229
<font color="#E5E5E5">to the one copy of the source tree cost</font>

414
00:17:40,070 --> 00:17:44,510
me one<font color="#E5E5E5"> point three four gigabytes a</font>

415
00:17:42,230 --> 00:17:46,250
second<font color="#E5E5E5"> copy of it cost me zero bytes</font>

416
00:17:44,510 --> 00:17:47,870
<font color="#E5E5E5">because there's no difference between</font>

417
00:17:46,250 --> 00:17:50,480
<font color="#CCCCCC">those copies right now</font>

418
00:17:47,870 --> 00:17:52,580
but if I<font color="#E5E5E5"> change one file here you'll see</font>

419
00:17:50,480 --> 00:17:56,620
<font color="#E5E5E5">this status I'd go</font><font color="#CCCCCC"> up by however</font><font color="#E5E5E5"> many</font>

420
00:17:52,580 --> 00:17:56,620
kilobytes that is for the changes I<font color="#CCCCCC"> make</font>

421
00:17:59,350 --> 00:18:05,929
so<font color="#E5E5E5"> how we take to using this where I</font>

422
00:18:03,260 --> 00:18:09,050
work<font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> building a blue</font>

423
00:18:05,930 --> 00:18:11,360
environment once in a clean<font color="#E5E5E5"> environment</font>

424
00:18:09,050 --> 00:18:15,590
<font color="#CCCCCC">and then shipping it to a hundred</font>

425
00:18:11,360 --> 00:18:18,110
servers<font color="#E5E5E5"> and rebooting</font><font color="#CCCCCC"> onto it so we</font>

426
00:18:15,590 --> 00:18:19,429
<font color="#CCCCCC">basically make up</font><font color="#E5E5E5"> an image with all the</font>

427
00:18:18,110 --> 00:18:22,040
latest security<font color="#E5E5E5"> fixes and</font><font color="#CCCCCC"> many</font>

428
00:18:19,430 --> 00:18:24,700
customizations we want and then<font color="#E5E5E5"> we use</font>

429
00:18:22,040 --> 00:18:27,889
<font color="#E5E5E5">data passes replication feature to</font>

430
00:18:24,700 --> 00:18:30,050
serialize that file system<font color="#CCCCCC"> as a stream</font>

431
00:18:27,890 --> 00:18:34,309
in this case pipe it into<font color="#E5E5E5"> X said</font>

432
00:18:30,050 --> 00:18:36,139
compress it<font color="#E5E5E5"> and put it out</font><font color="#CCCCCC"> to a file we</font>

433
00:18:34,309 --> 00:18:38,830
saw that our<font color="#E5E5E5"> image server and then on</font>

434
00:18:36,140 --> 00:18:40,640
each host<font color="#E5E5E5"> we just download that file</font>

435
00:18:38,830 --> 00:18:43,309
unex

436
00:18:40,640 --> 00:18:45,530
pipe it<font color="#E5E5E5"> into the ZFS receive and now</font>

437
00:18:43,309 --> 00:18:49,670
<font color="#E5E5E5">that exact file system exists on the</font>

438
00:18:45,530 --> 00:18:52,820
server<font color="#E5E5E5"> and then currently we</font><font color="#CCCCCC"> mounted us</font>

439
00:18:49,670 --> 00:18:54,500
under /tmp temporarily<font color="#E5E5E5"> copy over some of</font>

440
00:18:52,820 --> 00:18:56,439
the config files so<font color="#E5E5E5"> we don't lose</font><font color="#CCCCCC"> master</font>

441
00:18:54,500 --> 00:19:02,270
<font color="#CCCCCC">a</font><font color="#E5E5E5"> password and a couple other files and</font>

442
00:18:56,440 --> 00:19:05,720
<font color="#CCCCCC">then we can use the ZFS</font><font color="#E5E5E5"> boot config tool</font>

443
00:19:02,270 --> 00:19:08,389
to say the next<font color="#E5E5E5"> time</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> boot off this</font>

444
00:19:05,720 --> 00:19:09,950
fight in by a boot<font color="#CCCCCC"> environment so</font>

445
00:19:08,390 --> 00:19:11,960
instead of changing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> default</font><font color="#E5E5E5"> one that</font>

446
00:19:09,950 --> 00:19:14,600
<font color="#CCCCCC">it's going</font><font color="#E5E5E5"> to boot every time we say</font>

447
00:19:11,960 --> 00:19:16,970
just the next<font color="#E5E5E5"> time boot off</font><font color="#CCCCCC"> the new one</font>

448
00:19:14,600 --> 00:19:18,350
<font color="#E5E5E5">if it doesn't work we</font><font color="#CCCCCC"> just power cycle</font>

449
00:19:16,970 --> 00:19:21,380
the<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> and it boots back to the</font>

450
00:19:18,350 --> 00:19:25,189
default one<font color="#CCCCCC"> and the upgrade fails</font><font color="#E5E5E5"> but if</font>

451
00:19:21,380 --> 00:19:26,570
it does work<font color="#CCCCCC"> we can bring that in and</font>

452
00:19:25,190 --> 00:19:27,980
say that is now the default<font color="#E5E5E5"> boot</font>

453
00:19:26,570 --> 00:19:32,300
<font color="#CCCCCC">environment and it will boot</font><font color="#E5E5E5"> that every</font>

454
00:19:27,980 --> 00:19:35,000
time<font color="#E5E5E5"> how we'd like to enhance this is</font>

455
00:19:32,300 --> 00:19:38,090
we've<font color="#CCCCCC"> printed a new dataset</font><font color="#E5E5E5"> called slash</font>

456
00:19:35,000 --> 00:19:42,500
CFG and added an extra<font color="#E5E5E5"> line to</font><font color="#CCCCCC"> our</font>

457
00:19:38,090 --> 00:19:46,850
<font color="#E5E5E5">loader comp that mounts</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> before it</font>

458
00:19:42,500 --> 00:19:49,540
runs eg<font color="#E5E5E5"> CRC in this way we can</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> soon</font>

459
00:19:46,850 --> 00:19:52,129
links in our<font color="#E5E5E5"> etc' directory that say</font>

460
00:19:49,540 --> 00:19:54,409
<font color="#CCCCCC">Archie comp is actually over in</font><font color="#E5E5E5"> this</font>

461
00:19:52,130 --> 00:19:57,110
<font color="#E5E5E5">slash CFG directory or something so that</font>

462
00:19:54,410 --> 00:19:59,750
we ship a boot<font color="#CCCCCC"> environment</font><font color="#E5E5E5"> that's the</font>

463
00:19:57,110 --> 00:20:00,219
<font color="#E5E5E5">same on all of our</font><font color="#CCCCCC"> servers and a little</font>

464
00:19:59,750 --> 00:20:02,409
bit of

465
00:20:00,220 --> 00:20:04,000
<font color="#E5E5E5">tonality that each server has lives in</font>

466
00:20:02,409 --> 00:20:05,470
this other<font color="#E5E5E5"> data set that will persist</font>

467
00:20:04,000 --> 00:20:08,230
through the upgrades as we switch

468
00:20:05,470 --> 00:20:10,870
versions<font color="#E5E5E5"> and it saves us from having to</font>

469
00:20:08,230 --> 00:20:13,150
<font color="#E5E5E5">use merge master or</font><font color="#CCCCCC"> etc' update or</font>

470
00:20:10,870 --> 00:20:17,110
<font color="#E5E5E5">something to try</font><font color="#CCCCCC"> to merge changes into</font>

471
00:20:13,150 --> 00:20:19,390
<font color="#E5E5E5">the</font><font color="#CCCCCC"> DCC directory luckily most of the</font>

472
00:20:17,110 --> 00:20:21,908
tools<font color="#E5E5E5"> I have to deal with in freebsd</font>

473
00:20:19,390 --> 00:20:25,330
now support including other config files

474
00:20:21,909 --> 00:20:27,429
<font color="#E5E5E5">like new syslog and syslog</font><font color="#CCCCCC"> and cron and</font>

475
00:20:25,330 --> 00:20:29,799
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> I can create</font><font color="#E5E5E5"> those in a</font>

476
00:20:27,429 --> 00:20:31,809
separate place and have them<font color="#E5E5E5"> included</font>

477
00:20:29,799 --> 00:20:37,809
<font color="#E5E5E5">meaning I don't</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> modify the</font>

478
00:20:31,809 --> 00:20:40,750
default<font color="#CCCCCC"> freebsd config files at all but</font>

479
00:20:37,809 --> 00:20:43,658
this means<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I can do either a minor</font>

480
00:20:40,750 --> 00:20:46,270
or a major upgrade<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a remote server</font><font color="#E5E5E5"> in</font>

481
00:20:43,659 --> 00:20:48,940
just a<font color="#E5E5E5"> couple of seconds I received the</font>

482
00:20:46,270 --> 00:20:51,970
image<font color="#CCCCCC"> split it down and then say</font><font color="#E5E5E5"> reboot</font>

483
00:20:48,940 --> 00:20:53,830
<font color="#E5E5E5">onto it and the</font><font color="#CCCCCC"> machine reboots comes</font>

484
00:20:51,970 --> 00:20:56,980
back and I have the new<font color="#CCCCCC"> version of</font>

485
00:20:53,830 --> 00:20:58,750
<font color="#E5E5E5">FreeBSD then I maybe have to run a</font>

486
00:20:56,980 --> 00:21:01,299
<font color="#E5E5E5">package upgrade if I've done a major</font>

487
00:20:58,750 --> 00:21:07,809
<font color="#E5E5E5">version upgrade but then the system</font>

488
00:21:01,299 --> 00:21:10,690
upgrade is complete so what we'd<font color="#CCCCCC"> like to</font>

489
00:21:07,809 --> 00:21:14,500
do is replace or provide an<font color="#E5E5E5"> alternative</font>

490
00:21:10,690 --> 00:21:16,360
<font color="#E5E5E5">to nano</font><font color="#CCCCCC"> BSD</font><font color="#E5E5E5"> which is a a tool and</font>

491
00:21:14,500 --> 00:21:18,580
<font color="#E5E5E5">previously that was used previously to</font>

492
00:21:16,360 --> 00:21:23,080
<font color="#E5E5E5">build appliances like cream as</font><font color="#CCCCCC"> pfsense</font>

493
00:21:18,580 --> 00:21:24,668
<font color="#E5E5E5">and so on the way it worked with ufs was</font>

494
00:21:23,080 --> 00:21:27,510
you take your hard drive and partition

495
00:21:24,669 --> 00:21:29,919
<font color="#E5E5E5">it in half and</font><font color="#CCCCCC"> you'd have two</font><font color="#E5E5E5"> images and</font>

496
00:21:27,510 --> 00:21:32,350
you boot<font color="#E5E5E5"> up the one and then when you</font>

497
00:21:29,919 --> 00:21:33,789
install<font color="#E5E5E5"> an upgrade or a newer version it</font>

498
00:21:32,350 --> 00:21:36,639
would put<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in the second partition</font>

499
00:21:33,789 --> 00:21:38,020
<font color="#E5E5E5">and boot off of</font><font color="#CCCCCC"> it instead</font><font color="#E5E5E5"> and if that</font>

500
00:21:36,640 --> 00:21:40,480
fails<font color="#E5E5E5"> it would fail back to the first</font>

501
00:21:38,020 --> 00:21:41,620
one<font color="#E5E5E5"> and then you'd basically keep</font>

502
00:21:40,480 --> 00:21:44,200
swapping back and forth as<font color="#CCCCCC"> you're</font>

503
00:21:41,620 --> 00:21:46,689
upgraded always having<font color="#E5E5E5"> your one older</font>

504
00:21:44,200 --> 00:21:49,059
version to fall back on<font color="#E5E5E5"> what was said</font><font color="#CCCCCC"> FS</font>

505
00:21:46,690 --> 00:21:50,250
<font color="#E5E5E5">you can have the last ten versions to</font>

506
00:21:49,059 --> 00:21:53,049
fall back on if you want

507
00:21:50,250 --> 00:21:54,309
<font color="#E5E5E5">and both</font><font color="#CCCCCC"> FreeNAS and pfsense have</font>

508
00:21:53,049 --> 00:21:56,590
actually<font color="#CCCCCC"> switched to this in the latest</font>

509
00:21:54,309 --> 00:21:59,639
versions are using ZFS<font color="#E5E5E5"> and boot</font>

510
00:21:56,590 --> 00:22:01,600
environments to provide that feature

511
00:21:59,640 --> 00:22:05,380
because now you can<font color="#E5E5E5"> have as many old</font>

512
00:22:01,600 --> 00:22:06,668
images you want instead of<font color="#E5E5E5"> only one but</font>

513
00:22:05,380 --> 00:22:09,880
you still get<font color="#CCCCCC"> your firmware style</font>

514
00:22:06,669 --> 00:22:11,500
<font color="#E5E5E5">updates plus you get</font><font color="#CCCCCC"> all the extra</font>

515
00:22:09,880 --> 00:22:13,840
features<font color="#CCCCCC"> of ZFS for free when you do</font>

516
00:22:11,500 --> 00:22:16,750
this so<font color="#CCCCCC"> what</font>

517
00:22:13,840 --> 00:22:20,230
like to do is enhance the next boot

518
00:22:16,750 --> 00:22:22,480
functionality<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> currently ZFS boot</font>

519
00:22:20,230 --> 00:22:24,789
config allows you to write the name<font color="#E5E5E5"> of a</font>

520
00:22:22,480 --> 00:22:27,130
<font color="#CCCCCC">dataset into a little slot</font><font color="#E5E5E5"> in the ZFS</font>

521
00:22:24,789 --> 00:22:29,408
metadata<font color="#E5E5E5"> and when the bootloader sees</font>

522
00:22:27,130 --> 00:22:31,779
that<font color="#E5E5E5"> it mounts to that data set and then</font>

523
00:22:29,409 --> 00:22:33,909
erases that<font color="#CCCCCC"> so that it won't do it the</font>

524
00:22:31,779 --> 00:22:36,460
<font color="#E5E5E5">next time what we'd</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> to do is</font>

525
00:22:33,909 --> 00:22:38,950
configure it with<font color="#CCCCCC"> a feature that are</font>

526
00:22:36,460 --> 00:22:40,539
developing in the<font color="#E5E5E5"> Lumos where if the</font>

527
00:22:38,950 --> 00:22:43,600
system fails<font color="#E5E5E5"> to boot three times in a</font>

528
00:22:40,539 --> 00:22:45,190
row<font color="#CCCCCC"> or it keeps</font><font color="#E5E5E5"> a counter on the</font><font color="#CCCCCC"> fourth</font>

529
00:22:43,600 --> 00:22:48,689
time it'll<font color="#CCCCCC"> actually boot a rescue</font>

530
00:22:45,190 --> 00:22:51,610
environment<font color="#CCCCCC"> they use this on</font><font color="#E5E5E5"> Amazon AWS</font>

531
00:22:48,690 --> 00:22:53,679
<font color="#CCCCCC">because they have no console access so</font>

532
00:22:51,610 --> 00:22:55,029
if their appliance won't start<font color="#E5E5E5"> three</font>

533
00:22:53,679 --> 00:22:56,559
times in a<font color="#E5E5E5"> row if it's in a</font><font color="#CCCCCC"> different</font>

534
00:22:55,029 --> 00:22:58,960
environment that they can always<font color="#E5E5E5"> SSH</font>

535
00:22:56,559 --> 00:23:01,090
<font color="#E5E5E5">into and then mount the broken</font><font color="#CCCCCC"> system</font>

536
00:22:58,960 --> 00:23:02,500
and<font color="#E5E5E5"> figure out what's going on you know</font>

537
00:23:01,090 --> 00:23:03,730
with Amazon where they don't<font color="#CCCCCC"> have any</font>

538
00:23:02,500 --> 00:23:06,279
other recourse<font color="#CCCCCC"> to figure out why the</font>

539
00:23:03,730 --> 00:23:08,320
appliance won't start<font color="#E5E5E5"> so we'd like to</font>

540
00:23:06,279 --> 00:23:12,210
<font color="#CCCCCC">offer that and a couple other optional</font>

541
00:23:08,320 --> 00:23:14,649
features where we have more<font color="#E5E5E5"> than just</font>

542
00:23:12,210 --> 00:23:16,330
<font color="#E5E5E5">unstructured data saying hey boot this</font>

543
00:23:14,649 --> 00:23:18,039
environment<font color="#E5E5E5"> we'd have some kind of</font>

544
00:23:16,330 --> 00:23:21,279
structured thing where we could support

545
00:23:18,039 --> 00:23:30,309
both next<font color="#E5E5E5"> boot and fail boot and all the</font>

546
00:23:21,279 --> 00:23:31,809
other<font color="#E5E5E5"> features</font><font color="#CCCCCC"> we might want with set</font><font color="#E5E5E5"> FS</font>

547
00:23:30,309 --> 00:23:34,809
on<font color="#CCCCCC"> freebsd currently you</font><font color="#E5E5E5"> have two</font>

548
00:23:31,809 --> 00:23:37,870
<font color="#E5E5E5">options for disk encryption the first is</font>

549
00:23:34,809 --> 00:23:41,678
free<font color="#CCCCCC"> base these native block device</font>

550
00:23:37,870 --> 00:23:45,729
encryption<font color="#CCCCCC"> jelly which supports AES</font><font color="#E5E5E5"> xes</font>

551
00:23:41,679 --> 00:23:48,000
and AES CBC this basically encrypts a

552
00:23:45,730 --> 00:23:50,320
full block device with one<font color="#E5E5E5"> key per disk</font>

553
00:23:48,000 --> 00:23:54,399
<font color="#E5E5E5">and it supports booting from encrypted</font>

554
00:23:50,320 --> 00:23:56,080
data sets using<font color="#E5E5E5"> instead of having to</font>

555
00:23:54,399 --> 00:23:58,570
have an unencrypted slash boot partition

556
00:23:56,080 --> 00:24:01,240
with the kernel and<font color="#E5E5E5"> the modules and then</font>

557
00:23:58,570 --> 00:24:04,809
the root filesystem encrypted<font color="#E5E5E5"> with the</font>

558
00:24:01,240 --> 00:24:06,880
<font color="#CCCCCC">new version only</font><font color="#E5E5E5"> the 128 K bootstrap</font>

559
00:24:04,809 --> 00:24:10,389
file needs to be unencrypted<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you have</font>

560
00:24:06,880 --> 00:24:12,279
a small 128<font color="#E5E5E5"> K partition with the GPS</font>

561
00:24:10,390 --> 00:24:14,980
data<font color="#E5E5E5"> fastboot bootstrap file in it and</font>

562
00:24:12,279 --> 00:24:18,549
then a set of<font color="#CCCCCC"> s pool that's</font><font color="#E5E5E5"> completely</font>

563
00:24:14,980 --> 00:24:21,850
encrypted<font color="#CCCCCC"> and you can it boots asks for</font>

564
00:24:18,549 --> 00:24:25,940
<font color="#E5E5E5">the passphrase and mounts the encrypted</font>

565
00:24:21,850 --> 00:24:27,889
<font color="#E5E5E5">filesystem</font><font color="#CCCCCC"> efi support</font>

566
00:24:25,940 --> 00:24:30,980
<font color="#E5E5E5">was supposed</font><font color="#CCCCCC"> to land in December but</font>

567
00:24:27,889 --> 00:24:32,269
<font color="#CCCCCC">will probably land in March instead but</font>

568
00:24:30,980 --> 00:24:34,220
<font color="#E5E5E5">this will allow you to do the same thing</font>

569
00:24:32,269 --> 00:24:37,429
when booting<font color="#E5E5E5"> from EFI rather than legacy</font>

570
00:24:34,220 --> 00:24:39,190
<font color="#CCCCCC">I currently it does require you be at</font>

571
00:24:37,429 --> 00:24:41,659
<font color="#E5E5E5">the console to type in the password</font>

572
00:24:39,190 --> 00:24:43,129
<font color="#E5E5E5">moving it from</font><font color="#CCCCCC"> the bootloader to the</font>

573
00:24:41,659 --> 00:24:45,440
bootstrap which<font color="#E5E5E5"> is the thing that loads</font>

574
00:24:43,129 --> 00:24:46,969
the bootloader<font color="#E5E5E5"> means that</font><font color="#CCCCCC"> serials</font><font color="#E5E5E5"> not</font>

575
00:24:45,440 --> 00:24:50,570
available unless you have like BIOS

576
00:24:46,970 --> 00:24:51,860
serial redirection but regular like

577
00:24:50,570 --> 00:24:55,700
serial port serial isn't available

578
00:24:51,860 --> 00:24:59,269
<font color="#E5E5E5">because we're before</font><font color="#CCCCCC"> the bootloader that</font>

579
00:24:55,700 --> 00:25:00,740
actually has that<font color="#CCCCCC"> support one thing</font><font color="#E5E5E5"> that</font>

580
00:24:59,269 --> 00:25:02,960
we're<font color="#CCCCCC"> looking at addressing hopefully</font>

581
00:25:00,740 --> 00:25:06,070
before<font color="#E5E5E5"> the end of this year is support</font>

582
00:25:02,960 --> 00:25:10,700
for a USB stick with the key files on it

583
00:25:06,070 --> 00:25:16,809
and to support unattended reboots<font color="#E5E5E5"> of a</font>

584
00:25:10,700 --> 00:25:16,809
server but currently<font color="#E5E5E5"> that doesn't work</font>

585
00:25:20,169 --> 00:25:25,090
option<font color="#E5E5E5"> number two that's not available</font>

586
00:25:22,399 --> 00:25:30,110
in previously yet but<font color="#CCCCCC"> is</font><font color="#E5E5E5"> coming</font><font color="#CCCCCC"> is</font>

587
00:25:25,090 --> 00:25:32,269
native encryption<font color="#E5E5E5"> in ZFS</font><font color="#CCCCCC"> with this not</font>

588
00:25:30,110 --> 00:25:35,449
everything is scripted<font color="#E5E5E5"> but the user data</font>

589
00:25:32,269 --> 00:25:40,279
<font color="#CCCCCC">and the filenames are encrypted and this</font>

590
00:25:35,450 --> 00:25:42,129
<font color="#E5E5E5">uses AES GCM or AES</font><font color="#CCCCCC"> ICM part of the</font>

591
00:25:40,279 --> 00:25:46,580
reason<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> is you get the free</font>

592
00:25:42,129 --> 00:25:48,500
checksum with the encryption that<font color="#E5E5E5"> way so</font>

593
00:25:46,580 --> 00:25:51,139
not all<font color="#E5E5E5"> the metadata is encrypted pool</font>

594
00:25:48,500 --> 00:25:54,259
<font color="#E5E5E5">why information has to</font><font color="#CCCCCC"> be not encrypted</font>

595
00:25:51,139 --> 00:25:57,860
so<font color="#CCCCCC"> that the pool</font><font color="#E5E5E5"> can find how to decrypt</font>

596
00:25:54,259 --> 00:25:59,659
stuff<font color="#E5E5E5"> but this allows you to use</font><font color="#CCCCCC"> make</font>

597
00:25:57,860 --> 00:26:02,389
the<font color="#E5E5E5"> decision profile system</font><font color="#CCCCCC"> whether you</font>

598
00:25:59,659 --> 00:26:03,769
want to encrypt it so you can say I<font color="#E5E5E5"> only</font>

599
00:26:02,389 --> 00:26:08,539
<font color="#CCCCCC">want my</font><font color="#E5E5E5"> home directory encrypted not</font>

600
00:26:03,769 --> 00:26:10,279
everything<font color="#E5E5E5"> or vice versa the other nice</font>

601
00:26:08,539 --> 00:26:12,529
thing<font color="#CCCCCC"> about</font><font color="#E5E5E5"> this compared</font><font color="#CCCCCC"> to full disk</font>

602
00:26:10,279 --> 00:26:15,889
encryption<font color="#E5E5E5"> is because you have this</font>

603
00:26:12,529 --> 00:26:17,649
options and keys per file system you can

604
00:26:15,889 --> 00:26:20,658
actually<font color="#CCCCCC"> ensure that</font><font color="#E5E5E5"> data is at best</font>

605
00:26:17,649 --> 00:26:22,189
<font color="#E5E5E5">right for this encryption isn't very</font>

606
00:26:20,659 --> 00:26:23,509
<font color="#CCCCCC">useful if the machine is booted</font><font color="#E5E5E5"> because</font>

607
00:26:22,190 --> 00:26:26,360
you've already mounted the drive and

608
00:26:23,509 --> 00:26:28,039
<font color="#E5E5E5">it's decrypted now but if you have many</font>

609
00:26:26,360 --> 00:26:30,229
<font color="#E5E5E5">file systems and each one has a separate</font>

610
00:26:28,039 --> 00:26:32,059
<font color="#E5E5E5">key you can unmount a file</font><font color="#CCCCCC"> system that</font>

611
00:26:30,230 --> 00:26:33,409
<font color="#E5E5E5">you're not using right</font><font color="#CCCCCC"> now and now the</font>

612
00:26:32,059 --> 00:26:35,090
data's at<font color="#E5E5E5"> rest and it's actually</font>

613
00:26:33,409 --> 00:26:39,049
protected by the<font color="#E5E5E5"> encryption even</font><font color="#CCCCCC"> though</font>

614
00:26:35,090 --> 00:26:42,529
the machines so long<font color="#CCCCCC"> other nice thing is</font>

615
00:26:39,049 --> 00:26:45,289
what they did is split the metadata

616
00:26:42,529 --> 00:26:48,259
where we<font color="#E5E5E5"> stored</font><font color="#CCCCCC"> the checksum in half</font><font color="#E5E5E5"> the</font>

617
00:26:45,289 --> 00:26:50,419
first half is the checksum of the clear

618
00:26:48,259 --> 00:26:53,779
text<font color="#E5E5E5"> and the second half is to check</font>

619
00:26:50,419 --> 00:26:55,220
some of the<font color="#CCCCCC"> ciphertext this allows the</font>

620
00:26:53,779 --> 00:26:57,470
scrub<font color="#CCCCCC"> and we silver and</font><font color="#E5E5E5"> we'll play</font>

621
00:26:55,220 --> 00:26:59,809
simple<font color="#E5E5E5"> disks to be done without the</font>

622
00:26:57,470 --> 00:27:01,190
encryption<font color="#E5E5E5"> keys being loaded so the</font>

623
00:26:59,809 --> 00:27:02,960
storage administrator<font color="#E5E5E5"> doesn't have to</font>

624
00:27:01,190 --> 00:27:04,700
have<font color="#E5E5E5"> access to</font><font color="#CCCCCC"> this the encryption keys</font>

625
00:27:02,960 --> 00:27:07,909
<font color="#E5E5E5">in order</font><font color="#CCCCCC"> to keep the system</font><font color="#E5E5E5"> up and</font>

626
00:27:04,700 --> 00:27:10,190
<font color="#E5E5E5">replace failed drives you can we silver</font>

627
00:27:07,909 --> 00:27:14,350
encrypted data<font color="#E5E5E5"> without having to have</font>

628
00:27:10,190 --> 00:27:18,679
<font color="#E5E5E5">the encryption keys loaded which makes</font>

629
00:27:14,350 --> 00:27:19,998
everything a lot safer<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can have</font>

630
00:27:18,679 --> 00:27:22,730
<font color="#E5E5E5">different keys for different</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> sets</font>

631
00:27:19,999 --> 00:27:27,320
<font color="#E5E5E5">and you get the regular inheritance</font><font color="#CCCCCC"> if</font>

632
00:27:22,730 --> 00:27:29,059
you want again this is available<font color="#E5E5E5"> in ZFS</font>

633
00:27:27,320 --> 00:27:31,580
on<font color="#CCCCCC"> linux and</font><font color="#E5E5E5"> should be available in</font>

634
00:27:29,059 --> 00:27:41,690
<font color="#CCCCCC">freebsd and illumos once it passes some</font>

635
00:27:31,580 --> 00:27:43,279
more code review<font color="#CCCCCC"> for if you're building</font>

636
00:27:41,690 --> 00:27:44,600
an appliance or something on previous

637
00:27:43,279 --> 00:27:46,039
teeth there's another<font color="#E5E5E5"> interesting</font>

638
00:27:44,600 --> 00:27:50,178
feature that's available<font color="#E5E5E5"> now called</font>

639
00:27:46,039 --> 00:27:51,950
channel programs<font color="#E5E5E5"> before</font><font color="#CCCCCC"> now each ZFS</font>

640
00:27:50,179 --> 00:27:55,009
operation you might do<font color="#E5E5E5"> like creating a</font>

641
00:27:51,950 --> 00:27:58,249
data set<font color="#CCCCCC"> or destroying a data set or</font>

642
00:27:55,009 --> 00:28:01,249
renaming<font color="#CCCCCC"> a data set is a</font><font color="#E5E5E5"> transaction and</font>

643
00:27:58,249 --> 00:28:03,019
<font color="#CCCCCC">so that</font><font color="#E5E5E5"> requires all</font><font color="#CCCCCC"> the pending data to</font>

644
00:28:01,249 --> 00:28:06,259
be written<font color="#E5E5E5"> out and then close the</font>

645
00:28:03,019 --> 00:28:08,570
transaction group and open a<font color="#CCCCCC"> new</font><font color="#E5E5E5"> one if</font>

646
00:28:06,259 --> 00:28:11,269
you were<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to do reading</font><font color="#E5E5E5"> 18 data</font>

647
00:28:08,570 --> 00:28:13,939
sets in a<font color="#CCCCCC"> row</font><font color="#E5E5E5"> you have to each of those</font>

648
00:28:11,269 --> 00:28:17,389
<font color="#E5E5E5">separately and it can take you know 15</font>

649
00:28:13,940 --> 00:28:20,619
seconds with channel programs<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a</font>

650
00:28:17,389 --> 00:28:23,418
little bit of<font color="#CCCCCC"> lua</font><font color="#E5E5E5"> in the kernel</font>

651
00:28:20,619 --> 00:28:25,879
<font color="#CCCCCC">basically you create</font><font color="#E5E5E5"> a short script that</font>

652
00:28:23,419 --> 00:28:28,009
the operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> then run</font><font color="#E5E5E5"> so it</font>

653
00:28:25,879 --> 00:28:31,039
can iterate over a list of data sets<font color="#CCCCCC"> or</font>

654
00:28:28,009 --> 00:28:33,499
input and perform<font color="#E5E5E5"> all those operations</font>

655
00:28:31,039 --> 00:28:35,840
<font color="#E5E5E5">in a single syncing context so it</font>

656
00:28:33,499 --> 00:28:39,470
becomes one atomic transaction instead

657
00:28:35,840 --> 00:28:43,059
of<font color="#E5E5E5"> 18 transactions so they created this</font>

658
00:28:39,470 --> 00:28:45,619
at del phix one of the up streams of ZFS

659
00:28:43,059 --> 00:28:47,509
to handle upgrades of their appliance

660
00:28:45,619 --> 00:28:49,139
where they need<font color="#E5E5E5"> to rename some of the</font>

661
00:28:47,509 --> 00:28:51,540
data sets out<font color="#E5E5E5"> of the way and then in</font>

662
00:28:49,140 --> 00:28:53,280
make the new<font color="#CCCCCC"> datasets and they had this</font>

663
00:28:51,540 --> 00:28:55,020
all scripted but<font color="#E5E5E5"> the problem was if</font>

664
00:28:53,280 --> 00:28:57,000
there was a failure halfway through this

665
00:28:55,020 --> 00:28:59,460
they'd have to<font color="#E5E5E5"> try to undo all the</font>

666
00:28:57,000 --> 00:29:01,650
renaming and figure<font color="#CCCCCC"> out how much stuff</font>

667
00:28:59,460 --> 00:29:03,510
they had done<font color="#E5E5E5"> whereas this</font><font color="#CCCCCC"> channel</font>

668
00:29:01,650 --> 00:29:06,710
<font color="#E5E5E5">program means they do all the operations</font>

669
00:29:03,510 --> 00:29:06,710
and<font color="#CCCCCC"> then either succeeds or fails</font>

670
00:29:07,850 --> 00:29:15,300
<font color="#E5E5E5">there's protection against bad things</font>

671
00:29:10,650 --> 00:29:17,900
happening<font color="#E5E5E5"> by having limits so while you</font>

672
00:29:15,300 --> 00:29:20,700
<font color="#E5E5E5">can run this semi arbitrary</font><font color="#CCCCCC"> Lua script</font>

673
00:29:17,900 --> 00:29:22,200
<font color="#CCCCCC">in the kernel</font><font color="#E5E5E5"> that has a limited number</font>

674
00:29:20,700 --> 00:29:24,270
<font color="#E5E5E5">of destruction so</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> perform before</font>

675
00:29:22,200 --> 00:29:26,610
<font color="#CCCCCC">it'll be</font><font color="#E5E5E5"> aborted and it has a limited</font>

676
00:29:24,270 --> 00:29:30,870
<font color="#CCCCCC">amount of</font><font color="#E5E5E5"> memory so you</font><font color="#CCCCCC"> can't create</font><font color="#E5E5E5"> an</font>

677
00:29:26,610 --> 00:29:32,010
<font color="#E5E5E5">infinite loop or</font><font color="#CCCCCC"> something there's a</font>

678
00:29:30,870 --> 00:29:33,719
limited<font color="#E5E5E5"> number</font><font color="#CCCCCC"> of scripts that</font><font color="#E5E5E5"> are</font>

679
00:29:32,010 --> 00:29:36,000
<font color="#CCCCCC">built-in</font><font color="#E5E5E5"> right now it doesn't</font><font color="#CCCCCC"> support</font>

680
00:29:33,720 --> 00:29:38,190
you loading custom scripts at runtime<font color="#CCCCCC"> I</font>

681
00:29:36,000 --> 00:29:40,200
probably will<font color="#CCCCCC"> eventually but right now</font>

682
00:29:38,190 --> 00:29:41,990
there's a small<font color="#CCCCCC"> library of scripts that</font>

683
00:29:40,200 --> 00:29:44,400
are<font color="#E5E5E5"> built in and you can do things like</font>

684
00:29:41,990 --> 00:29:50,310
recursive<font color="#E5E5E5"> roll backs</font><font color="#CCCCCC"> roll back</font><font color="#E5E5E5"> a whole</font>

685
00:29:44,400 --> 00:29:52,080
hierarchy of file systems and<font color="#CCCCCC"> the aim</font>

686
00:29:50,310 --> 00:29:55,669
<font color="#E5E5E5">for the upgrading</font><font color="#CCCCCC"> process there's</font>

687
00:29:52,080 --> 00:29:59,370
another<font color="#E5E5E5"> feature called zpool checkpoints</font>

688
00:29:55,670 --> 00:30:02,460
the idea here is it's like a<font color="#E5E5E5"> pool wide</font>

689
00:29:59,370 --> 00:30:06,689
snapshot so it backs up<font color="#E5E5E5"> the top-level</font>

690
00:30:02,460 --> 00:30:10,410
metadata of the<font color="#CCCCCC"> whole pool</font><font color="#E5E5E5"> in this</font>

691
00:30:06,690 --> 00:30:12,450
checkpoint<font color="#CCCCCC"> and it suspends all freeing</font>

692
00:30:10,410 --> 00:30:14,340
of space so once you<font color="#CCCCCC"> plate the</font>

693
00:30:12,450 --> 00:30:17,610
checkpoint<font color="#E5E5E5"> any disk space you free</font>

694
00:30:14,340 --> 00:30:18,720
doesn't<font color="#E5E5E5"> actually get freed yet but you</font>

695
00:30:17,610 --> 00:30:20,300
create one of<font color="#E5E5E5"> these</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> you do the</font>

696
00:30:18,720 --> 00:30:23,400
upgrade<font color="#CCCCCC"> process</font><font color="#E5E5E5"> on an appliance</font>

697
00:30:20,300 --> 00:30:24,899
<font color="#E5E5E5">especially the</font><font color="#CCCCCC"> headless</font><font color="#E5E5E5"> appliance you</font>

698
00:30:23,400 --> 00:30:27,210
make all the changes<font color="#CCCCCC"> you know rename</font>

699
00:30:24,900 --> 00:30:29,970
some<font color="#CCCCCC"> datasets</font><font color="#E5E5E5"> destroy some file</font><font color="#CCCCCC"> systems</font>

700
00:30:27,210 --> 00:30:32,220
whatever<font color="#CCCCCC"> you want to do and then if</font><font color="#E5E5E5"> your</font>

701
00:30:29,970 --> 00:30:35,090
upgrade process<font color="#E5E5E5"> fails somewhere in that</font>

702
00:30:32,220 --> 00:30:37,680
process<font color="#E5E5E5"> you can just reinforce the pool</font>

703
00:30:35,090 --> 00:30:40,199
<font color="#E5E5E5">at that checkpoint</font><font color="#CCCCCC"> and all the</font>

704
00:30:37,680 --> 00:30:41,970
operations you've done or undone<font color="#E5E5E5"> all</font>

705
00:30:40,200 --> 00:30:44,850
right so these are<font color="#E5E5E5"> not meant to live</font>

706
00:30:41,970 --> 00:30:46,290
<font color="#E5E5E5">long</font><font color="#CCCCCC"> term</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> they cause no</font><font color="#E5E5E5"> data</font>

707
00:30:44,850 --> 00:30:48,840
ever be overwritten<font color="#E5E5E5"> so that you'll be</font>

708
00:30:46,290 --> 00:30:52,409
<font color="#CCCCCC">able to go back but it allows you</font><font color="#E5E5E5"> to</font>

709
00:30:48,840 --> 00:30:55,110
<font color="#CCCCCC">basically save the clean state</font><font color="#E5E5E5"> try the</font>

710
00:30:52,410 --> 00:30:57,510
upgrade<font color="#CCCCCC"> if it doesn't work you can undo</font>

711
00:30:55,110 --> 00:31:00,149
<font color="#CCCCCC">any of</font><font color="#E5E5E5"> these operations</font><font color="#CCCCCC"> you've done even</font>

712
00:30:57,510 --> 00:31:02,360
adding<font color="#E5E5E5"> whole new discs can be undone so</font>

713
00:31:00,150 --> 00:31:03,680
it's a great way to safeguard<font color="#E5E5E5"> against</font>

714
00:31:02,360 --> 00:31:05,330
take when you're<font color="#E5E5E5"> trying to add new</font><font color="#CCCCCC"> discs</font>

715
00:31:03,680 --> 00:31:06,950
<font color="#E5E5E5">for your pool</font><font color="#CCCCCC"> you just pay at the</font>

716
00:31:05,330 --> 00:31:11,480
<font color="#CCCCCC">checkpoint first and you'll be able to</font>

717
00:31:06,950 --> 00:31:12,890
undo<font color="#E5E5E5"> anything that goes wrong yeah and</font>

718
00:31:11,480 --> 00:31:22,310
when you<font color="#E5E5E5"> go back</font><font color="#CCCCCC"> it's as if it never</font>

719
00:31:12,890 --> 00:31:24,410
happened so<font color="#E5E5E5"> when we get the end for</font>

720
00:31:22,310 --> 00:31:27,290
questions I'd like if anybody<font color="#E5E5E5"> has any</font>

721
00:31:24,410 --> 00:31:29,960
<font color="#CCCCCC">ideas on what would make ZFS work better</font>

722
00:31:27,290 --> 00:31:34,700
for you<font color="#E5E5E5"> whether it's as a laptop</font><font color="#CCCCCC"> or a</font>

723
00:31:29,960 --> 00:31:36,880
server or an appliance<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> number</font>

724
00:31:34,700 --> 00:31:40,220
<font color="#CCCCCC">of</font><font color="#E5E5E5"> interesting features coming up soon</font>

725
00:31:36,880 --> 00:31:42,320
<font color="#CCCCCC">the free/busy foundation</font><font color="#E5E5E5"> del phix and</font><font color="#CCCCCC"> IX</font>

726
00:31:40,220 --> 00:31:44,810
systems have partnered together<font color="#CCCCCC"> to</font><font color="#E5E5E5"> bring</font>

727
00:31:42,320 --> 00:31:46,580
the<font color="#E5E5E5"> most requested feature in ZFS to us</font>

728
00:31:44,810 --> 00:31:50,419
we hope<font color="#CCCCCC"> to have it by the end of this</font>

729
00:31:46,580 --> 00:31:53,600
year which<font color="#CCCCCC"> is raid-z Vida expansion so</font>

730
00:31:50,420 --> 00:31:56,360
if you have a raid<font color="#E5E5E5"> Z</font><font color="#CCCCCC"> to like a raid six</font>

731
00:31:53,600 --> 00:31:58,219
of<font color="#CCCCCC"> six</font><font color="#E5E5E5"> hard drives in your home</font><font color="#CCCCCC"> mass or</font>

732
00:31:56,360 --> 00:32:00,080
something<font color="#E5E5E5"> this feature will allow you to</font>

733
00:31:58,220 --> 00:32:02,240
add a seventh<font color="#CCCCCC"> disk</font><font color="#E5E5E5"> and get that</font>

734
00:32:00,080 --> 00:32:05,060
<font color="#E5E5E5">admission additional free space without</font>

735
00:32:02,240 --> 00:32:07,630
<font color="#E5E5E5">having</font><font color="#CCCCCC"> to rebuild</font><font color="#E5E5E5"> the pool it's the</font>

736
00:32:05,060 --> 00:32:10,010
single<font color="#CCCCCC"> most requested</font><font color="#E5E5E5"> feature in ZFS and</font>

737
00:32:07,630 --> 00:32:13,100
<font color="#E5E5E5">with the collaboration of our partner</font>

738
00:32:10,010 --> 00:32:19,040
from illumos<font color="#E5E5E5"> and previous</font><font color="#CCCCCC"> T we'll hope</font>

739
00:32:13,100 --> 00:32:20,899
<font color="#E5E5E5">to have this by the end</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this year</font><font color="#CCCCCC"> and</font>

740
00:32:19,040 --> 00:32:22,070
then there's all I have a couple<font color="#CCCCCC"> of</font>

741
00:32:20,900 --> 00:32:23,480
<font color="#E5E5E5">slides that are</font><font color="#CCCCCC"> rundowns of other</font>

742
00:32:22,070 --> 00:32:26,389
interesting features and<font color="#CCCCCC"> zetas fests</font>

743
00:32:23,480 --> 00:32:27,950
<font color="#CCCCCC">that</font><font color="#E5E5E5"> are coming up</font><font color="#CCCCCC"> first one is dead</font>

744
00:32:26,390 --> 00:32:30,800
standard<font color="#CCCCCC"> compression this is the one I'm</font>

745
00:32:27,950 --> 00:32:32,510
<font color="#CCCCCC">working on myself Facebook has a new</font>

746
00:32:30,800 --> 00:32:35,570
<font color="#E5E5E5">compression algorithm called</font><font color="#CCCCCC"> Zed</font>

747
00:32:32,510 --> 00:32:38,000
standard it's similar compression ratios

748
00:32:35,570 --> 00:32:40,850
to gzip<font color="#E5E5E5"> but somewhere between</font><font color="#CCCCCC"> four and</font>

749
00:32:38,000 --> 00:32:44,390
eight<font color="#E5E5E5"> times faster</font><font color="#CCCCCC"> so by integrating</font>

750
00:32:40,850 --> 00:32:46,939
that with ZFS compared to LZ for the

751
00:32:44,390 --> 00:32:48,740
fast compressor that is NFS defaults<font color="#E5E5E5"> to</font>

752
00:32:46,940 --> 00:32:51,230
now<font color="#E5E5E5"> it gets about</font><font color="#CCCCCC"> three to one</font>

753
00:32:48,740 --> 00:32:54,590
<font color="#E5E5E5">compression on a base install of FreeBSD</font>

754
00:32:51,230 --> 00:32:56,470
<font color="#CCCCCC">we said it two to one but on higher</font>

755
00:32:54,590 --> 00:32:58,850
levels you<font color="#CCCCCC"> can get even</font><font color="#E5E5E5"> better than</font><font color="#CCCCCC"> that</font>

756
00:32:56,470 --> 00:33:00,830
<font color="#CCCCCC">when combined with the compressed</font><font color="#E5E5E5"> art</font>

757
00:32:58,850 --> 00:33:02,780
feature where data that's compressed on

758
00:33:00,830 --> 00:33:05,570
disk<font color="#E5E5E5"> stays compressed in the cache in</font>

759
00:33:02,780 --> 00:33:07,399
RAM means that on the database or

760
00:33:05,570 --> 00:33:10,100
something<font color="#E5E5E5"> of that nature you</font><font color="#CCCCCC"> can fit a</font>

761
00:33:07,400 --> 00:33:13,100
<font color="#CCCCCC">lot more data than you have RAM in</font><font color="#E5E5E5"> your</font>

762
00:33:10,100 --> 00:33:15,149
<font color="#E5E5E5">Ram cache so suddenly afford</font><font color="#CCCCCC"> a gigabyte</font>

763
00:33:13,100 --> 00:33:17,070
database<font color="#CCCCCC"> compress this to 10 gigabyte</font>

764
00:33:15,150 --> 00:33:20,400
and you can catch<font color="#E5E5E5"> the</font><font color="#CCCCCC"> whole thing in 16</font>

765
00:33:17,070 --> 00:33:23,750
gigs of<font color="#E5E5E5"> RAM</font><font color="#CCCCCC"> and get speeds that</font><font color="#E5E5E5"> you</font>

766
00:33:20,400 --> 00:33:23,750
couldn't think of for a database before

767
00:33:23,870 --> 00:33:28,679
one of<font color="#CCCCCC"> the interesting things was this</font>

768
00:33:26,430 --> 00:33:31,080
standard is it has 21 levels of

769
00:33:28,680 --> 00:33:32,790
<font color="#E5E5E5">compression so you know gzip has</font><font color="#CCCCCC"> one</font>

770
00:33:31,080 --> 00:33:36,570
through<font color="#CCCCCC"> nine</font><font color="#E5E5E5"> this has</font><font color="#CCCCCC"> one through twenty</font>

771
00:33:32,790 --> 00:33:37,649
<font color="#CCCCCC">one</font><font color="#E5E5E5"> one of the interesting things you</font>

772
00:33:36,570 --> 00:33:40,500
<font color="#CCCCCC">can do with that is what's called</font>

773
00:33:37,650 --> 00:33:44,550
<font color="#CCCCCC">adapted compression where you</font><font color="#E5E5E5"> modulate</font>

774
00:33:40,500 --> 00:33:46,470
the level of compression you're using to

775
00:33:44,550 --> 00:33:50,700
keep a pipe full so if you're going to

776
00:33:46,470 --> 00:33:52,980
<font color="#E5E5E5">you know cat a file and pipe it in</font>

777
00:33:50,700 --> 00:33:55,020
<font color="#CCCCCC">netcat</font><font color="#E5E5E5"> you put through</font><font color="#CCCCCC"> zed standard with</font>

778
00:33:52,980 --> 00:33:57,510
the<font color="#E5E5E5"> adaptive mode and it will change the</font>

779
00:33:55,020 --> 00:34:00,929
<font color="#E5E5E5">compression level to keep netcat full</font>

780
00:33:57,510 --> 00:34:03,809
but<font color="#E5E5E5"> not spend time compressing for no</font>

781
00:34:00,929 --> 00:34:05,550
reason<font color="#CCCCCC"> so it finds the compression level</font>

782
00:34:03,809 --> 00:34:08,399
that keeps this<font color="#CCCCCC"> food that doesn't</font>

783
00:34:05,550 --> 00:34:09,659
<font color="#CCCCCC">overfill the buffer in that way you get</font>

784
00:34:08,399 --> 00:34:12,779
<font color="#E5E5E5">the same</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so you could do that in</font>

785
00:34:09,659 --> 00:34:14,639
ZFS where if there's<font color="#E5E5E5"> not a lot of data</font>

786
00:34:12,780 --> 00:34:16,470
pending to go to disk<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> spend lots</font>

787
00:34:14,639 --> 00:34:18,600
of time compressing it but if we've got

788
00:34:16,469 --> 00:34:19,949
hundreds<font color="#E5E5E5"> of megabytes piling up and we</font>

789
00:34:18,600 --> 00:34:21,870
<font color="#E5E5E5">really need to start thinking it out to</font>

790
00:34:19,949 --> 00:34:23,580
disk<font color="#E5E5E5"> we can back off the compression</font>

791
00:34:21,870 --> 00:34:24,929
rate<font color="#E5E5E5"> until we find the medium where</font>

792
00:34:23,580 --> 00:34:29,580
we're getting<font color="#E5E5E5"> as much compression as we</font>

793
00:34:24,929 --> 00:34:31,050
can by keeping the<font color="#CCCCCC"> disks busy there are</font>

794
00:34:29,580 --> 00:34:33,270
a number<font color="#E5E5E5"> of improvements to the</font>

795
00:34:31,050 --> 00:34:36,510
resilvered code coming the first one is

796
00:34:33,270 --> 00:34:37,710
sequential<font color="#CCCCCC"> reis /</font><font color="#E5E5E5"> currently as we</font>

797
00:34:36,510 --> 00:34:39,540
<font color="#E5E5E5">mentioned at the beginning when you</font>

798
00:34:37,710 --> 00:34:41,850
<font color="#E5E5E5">resolve our</font><font color="#CCCCCC"> disk instead of s because</font>

799
00:34:39,540 --> 00:34:43,620
it's intimately knows the<font color="#CCCCCC"> file system it</font>

800
00:34:41,850 --> 00:34:45,120
only has to copy data that's<font color="#E5E5E5"> actually</font>

801
00:34:43,620 --> 00:34:49,259
written<font color="#E5E5E5"> out it doesn't</font><font color="#CCCCCC"> have to copy the</font>

802
00:34:45,120 --> 00:34:51,540
free space but it scans this<font color="#E5E5E5"> in the</font>

803
00:34:49,260 --> 00:34:53,370
order it is in the metadata<font color="#E5E5E5"> so you get a</font>

804
00:34:51,540 --> 00:34:55,529
lot<font color="#E5E5E5"> of random leads in the resolver and</font>

805
00:34:53,370 --> 00:34:58,259
it can<font color="#CCCCCC"> actually end up being slower</font><font color="#E5E5E5"> so</font>

806
00:34:55,530 --> 00:35:01,260
to fix<font color="#E5E5E5"> that</font><font color="#CCCCCC"> as it scans</font><font color="#E5E5E5"> the metadata it</font>

807
00:34:58,260 --> 00:35:03,270
builds<font color="#E5E5E5"> this range tree</font><font color="#CCCCCC"> and up to a</font>

808
00:35:01,260 --> 00:35:05,040
couple<font color="#E5E5E5"> hundred megabytes of RAM and once</font>

809
00:35:03,270 --> 00:35:08,160
that's full it takes the largest

810
00:35:05,040 --> 00:35:10,259
contiguous block<font color="#CCCCCC"> of work and performs</font>

811
00:35:08,160 --> 00:35:12,420
the<font color="#E5E5E5"> resilvered and then continue</font>

812
00:35:10,260 --> 00:35:14,280
scanning until it's filled<font color="#E5E5E5"> up the</font><font color="#CCCCCC"> ram</font>

813
00:35:12,420 --> 00:35:15,960
again and it keeps doing<font color="#CCCCCC"> this and that</font>

814
00:35:14,280 --> 00:35:18,300
way you get nice long contiguous

815
00:35:15,960 --> 00:35:21,840
sequential reads and writes and much

816
00:35:18,300 --> 00:35:24,120
higher<font color="#CCCCCC"> performance on the resolver that</font>

817
00:35:21,840 --> 00:35:26,430
work is<font color="#CCCCCC"> being done by Mac senta and then</font>

818
00:35:24,120 --> 00:35:28,580
the smart<font color="#CCCCCC"> Rees over is a feature coming</font>

819
00:35:26,430 --> 00:35:32,569
from those<font color="#E5E5E5"> edifice</font><font color="#CCCCCC"> and linux people</font>

820
00:35:28,580 --> 00:35:34,759
which is smarter prefetcher<font color="#E5E5E5"> for the</font>

821
00:35:32,570 --> 00:35:37,790
resilvered process<font color="#E5E5E5"> draw when those two</font>

822
00:35:34,760 --> 00:35:39,500
<font color="#CCCCCC">are combined</font><font color="#E5E5E5"> we can expect for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> 8x</font>

823
00:35:37,790 --> 00:35:41,630
improvement in the time to reach over<font color="#E5E5E5"> a</font>

824
00:35:39,500 --> 00:35:42,940
<font color="#E5E5E5">fragmented pool which will make a big</font>

825
00:35:41,630 --> 00:35:45,290
difference

826
00:35:42,940 --> 00:35:47,290
there's<font color="#CCCCCC"> also performance enhancements</font>

827
00:35:45,290 --> 00:35:51,400
coming from both FreeBSD and<font color="#E5E5E5"> del phix</font>

828
00:35:47,290 --> 00:35:53,900
for the<font color="#CCCCCC"> Zil which is the ZFS intent log</font>

829
00:35:51,400 --> 00:35:55,940
using<font color="#E5E5E5"> one of the</font><font color="#CCCCCC"> other features</font><font color="#E5E5E5"> of ZFS</font>

830
00:35:53,900 --> 00:35:58,250
you can offload the right cache to a

831
00:35:55,940 --> 00:35:59,990
<font color="#CCCCCC">high-speed device like an SSD so</font>

832
00:35:58,250 --> 00:36:02,090
synchronous writes from<font color="#E5E5E5"> a database can</font>

833
00:35:59,990 --> 00:36:03,410
<font color="#CCCCCC">be flushed</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the SSD</font><font color="#E5E5E5"> and let the</font>

834
00:36:02,090 --> 00:36:05,690
database transaction complete and

835
00:36:03,410 --> 00:36:08,359
continue and then later<font color="#E5E5E5"> are flushed out</font>

836
00:36:05,690 --> 00:36:12,320
<font color="#E5E5E5">to the spinning rest as a large</font>

837
00:36:08,360 --> 00:36:13,640
sequential<font color="#CCCCCC"> write</font><font color="#E5E5E5"> some performance</font>

838
00:36:12,320 --> 00:36:17,240
<font color="#CCCCCC">improvements going</font><font color="#E5E5E5"> on there now</font><font color="#CCCCCC"> that we</font>

839
00:36:13,640 --> 00:36:19,730
have nvme devices and we can have 64

840
00:36:17,240 --> 00:36:22,189
concurrent transactions going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> there</font>

841
00:36:19,730 --> 00:36:25,370
<font color="#E5E5E5">would be a lot</font><font color="#CCCCCC"> of improvement we can get</font>

842
00:36:22,190 --> 00:36:28,370
there<font color="#CCCCCC"> there's also work from</font><font color="#E5E5E5"> Lawrence</font>

843
00:36:25,370 --> 00:36:30,770
Livermore National Labs to make a safe

844
00:36:28,370 --> 00:36:32,330
<font color="#E5E5E5">zpool import for clusters so if you have</font>

845
00:36:30,770 --> 00:36:34,460
multiple<font color="#CCCCCC"> heads that have access to the</font>

846
00:36:32,330 --> 00:36:35,840
same disk<font color="#E5E5E5"> this feature will make sure</font>

847
00:36:34,460 --> 00:36:38,900
that<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> accidentally import the</font>

848
00:36:35,840 --> 00:36:42,470
pool on<font color="#CCCCCC"> remount</font><font color="#E5E5E5"> the filesystem on to the</font>

849
00:36:38,900 --> 00:36:44,510
heads at once<font color="#E5E5E5"> and lastly a device</font>

850
00:36:42,470 --> 00:36:47,779
evacuation which is the<font color="#E5E5E5"> ability to</font>

851
00:36:44,510 --> 00:36:49,880
remove a mirror or a<font color="#CCCCCC"> striped</font><font color="#E5E5E5"> disk from</font>

852
00:36:47,780 --> 00:36:52,460
<font color="#E5E5E5">the pool and basically move all the data</font>

853
00:36:49,880 --> 00:36:53,720
<font color="#E5E5E5">that's on there to other devices so</font><font color="#CCCCCC"> that</font>

854
00:36:52,460 --> 00:37:00,620
you can<font color="#CCCCCC"> actually take a disk</font><font color="#E5E5E5"> out of the</font>

855
00:36:53,720 --> 00:37:05,180
pool<font color="#CCCCCC"> and one of the other interesting</font>

856
00:37:00,620 --> 00:37:06,770
ones is the a shift policy<font color="#E5E5E5"> change when</font>

857
00:37:05,180 --> 00:37:10,609
you create a pool instead of s<font color="#E5E5E5"> but the</font>

858
00:37:06,770 --> 00:37:12,320
default<font color="#CCCCCC"> was 512-byte sectors but</font><font color="#E5E5E5"> you can</font>

859
00:37:10,610 --> 00:37:17,150
either force or detects based on<font color="#E5E5E5"> your</font>

860
00:37:12,320 --> 00:37:19,760
disk<font color="#E5E5E5"> that you have</font><font color="#CCCCCC"> 4k</font><font color="#E5E5E5"> native</font><font color="#CCCCCC"> disks</font><font color="#E5E5E5"> the a</font>

861
00:37:17,150 --> 00:37:23,030
shift policy is to deal<font color="#CCCCCC"> with pools we</font>

862
00:37:19,760 --> 00:37:24,950
created in<font color="#E5E5E5"> 2011 when discs were 512</font>

863
00:37:23,030 --> 00:37:27,620
bytes but<font color="#E5E5E5"> now all the</font><font color="#CCCCCC"> replacement disks</font>

864
00:37:24,950 --> 00:37:29,419
I can buy are 4k setting in allocation

865
00:37:27,620 --> 00:37:32,359
policies they all new space that's

866
00:37:29,420 --> 00:37:35,320
<font color="#E5E5E5">allocated should be aligned to 4k so</font>

867
00:37:32,360 --> 00:37:39,790
that we<font color="#E5E5E5"> won't get the read-modify-write</font>

868
00:37:35,320 --> 00:37:39,790
<font color="#E5E5E5">penalty on the newer drives</font>

869
00:37:43,410 --> 00:38:11,950
so questions yes<font color="#E5E5E5"> in</font><font color="#CCCCCC"> truest there's</font><font color="#E5E5E5"> a</font>

870
00:38:10,119 --> 00:38:14,680
tool<font color="#E5E5E5"> called life preserver</font><font color="#CCCCCC"> that does the</font>

871
00:38:11,950 --> 00:38:16,390
same<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> and I think</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> available</font>

872
00:38:14,680 --> 00:38:18,419
in<font color="#CCCCCC"> the FreeBSD ports tree</font><font color="#E5E5E5"> as well so you</font>

873
00:38:16,390 --> 00:38:20,680
<font color="#E5E5E5">don't have to use</font><font color="#CCCCCC"> true</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> less together</font>

874
00:38:18,420 --> 00:38:23,230
but it's very<font color="#E5E5E5"> much</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same idea</font><font color="#CCCCCC"> oh</font>

875
00:38:20,680 --> 00:38:27,129
sorry<font color="#E5E5E5"> the question</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> is there a tool</font>

876
00:38:23,230 --> 00:38:30,220
like Apple Time<font color="#E5E5E5"> Machine or Solaris have</font>

877
00:38:27,130 --> 00:38:31,660
one called time slider<font color="#E5E5E5"> to use the</font>

878
00:38:30,220 --> 00:38:33,009
snapshot<font color="#E5E5E5"> feature instead of has to be</font>

879
00:38:31,660 --> 00:38:36,220
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to surf backward and forward and</font>

880
00:38:33,009 --> 00:38:38,349
<font color="#E5E5E5">get your backups</font><font color="#CCCCCC"> and the answer</font><font color="#E5E5E5"> was that</font>

881
00:38:36,220 --> 00:38:40,328
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> in true less is called life</font>

882
00:38:38,349 --> 00:39:02,140
preserver<font color="#CCCCCC"> I think it's in the port's</font>

883
00:38:40,329 --> 00:39:04,769
<font color="#E5E5E5">tree for FreeBSD as well so the</font><font color="#CCCCCC"> question</font>

884
00:39:02,140 --> 00:39:08,140
was about the<font color="#CCCCCC"> DD</font><font color="#E5E5E5"> performance improvement</font>

885
00:39:04,769 --> 00:39:10,779
<font color="#E5E5E5">currently this is just a design that</font>

886
00:39:08,140 --> 00:39:13,359
<font color="#E5E5E5">Matt</font><font color="#CCCCCC"> Aaron's came up with of instead of</font>

887
00:39:10,779 --> 00:39:15,720
<font color="#E5E5E5">currently the way DD works is there's a</font>

888
00:39:13,359 --> 00:39:18,460
hash table in memory and then there's a

889
00:39:15,720 --> 00:39:21,160
that same hash table structure exists on

890
00:39:18,460 --> 00:39:22,930
disk<font color="#E5E5E5"> so every time you make a</font><font color="#CCCCCC"> change</font>

891
00:39:21,160 --> 00:39:24,670
there you have to write<font color="#E5E5E5"> out three or</font>

892
00:39:22,930 --> 00:39:27,160
four sectors worth of data<font color="#E5E5E5"> and the</font>

893
00:39:24,670 --> 00:39:30,309
performance can be really<font color="#E5E5E5"> bad and the</font>

894
00:39:27,160 --> 00:39:33,249
hash table ends up usually not fitting

895
00:39:30,309 --> 00:39:37,989
in<font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> so there's two parts</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this the</font>

896
00:39:33,249 --> 00:39:42,759
one is switching<font color="#CCCCCC"> to</font><font color="#E5E5E5"> using a log for the</font>

897
00:39:37,989 --> 00:39:43,869
deegeu<font color="#E5E5E5"> table on disk</font><font color="#CCCCCC"> so when you for a</font>

898
00:39:42,759 --> 00:39:45,400
certain<font color="#E5E5E5"> hash you say we're going</font><font color="#CCCCCC"> to</font>

899
00:39:43,869 --> 00:39:47,380
<font color="#E5E5E5">increment the reference count for this</font>

900
00:39:45,400 --> 00:39:50,019
hash by<font color="#E5E5E5"> one or decrement it by one as</font>

901
00:39:47,380 --> 00:39:53,230
blocks are added<font color="#E5E5E5"> and removed from</font><font color="#CCCCCC"> the</font>

902
00:39:50,019 --> 00:39:56,200
view<font color="#E5E5E5"> and then only once that log gets so</font>

903
00:39:53,230 --> 00:39:58,869
big<font color="#E5E5E5"> will it</font><font color="#CCCCCC"> be compacted</font><font color="#E5E5E5"> and written out</font>

904
00:39:56,200 --> 00:40:00,730
<font color="#E5E5E5">as a hash table again and then another</font>

905
00:39:58,869 --> 00:40:04,180
part<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is an opportunistic</font>

906
00:40:00,730 --> 00:40:09,279
<font color="#E5E5E5">enhancement for the hash table</font><font color="#CCCCCC"> then</font>

907
00:40:04,180 --> 00:40:11,828
you'll<font color="#E5E5E5"> be able to it's called the DD cap</font>

908
00:40:09,279 --> 00:40:13,210
or something<font color="#CCCCCC"> for</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> Aaron</font><font color="#E5E5E5"> you set a</font>

909
00:40:11,829 --> 00:40:16,089
limit<font color="#E5E5E5"> to</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> much memory you want to</font>

910
00:40:13,210 --> 00:40:18,759
dedicate<font color="#E5E5E5"> to the D dupe table and as that</font>

911
00:40:16,089 --> 00:40:20,349
<font color="#E5E5E5">gets full what it will do is when you</font>

912
00:40:18,759 --> 00:40:22,630
want to add a new<font color="#CCCCCC"> entry but there's no</font>

913
00:40:20,349 --> 00:40:25,059
room in<font color="#E5E5E5"> the hash table it will look for</font>

914
00:40:22,630 --> 00:40:26,650
<font color="#CCCCCC">a hash</font><font color="#E5E5E5"> that has</font><font color="#CCCCCC"> a ref count of</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> you</font>

915
00:40:25,059 --> 00:40:28,930
<font color="#CCCCCC">know there's</font><font color="#E5E5E5"> only one block that matches</font>

916
00:40:26,650 --> 00:40:32,769
and remove it from<font color="#E5E5E5"> the D dupe table and</font>

917
00:40:28,930 --> 00:40:34,029
put in<font color="#CCCCCC"> your new entry</font><font color="#E5E5E5"> normally this be a</font>

918
00:40:32,769 --> 00:40:36,788
<font color="#E5E5E5">problem because anybody you do when you</font>

919
00:40:34,029 --> 00:40:38,650
<font color="#E5E5E5">want to</font><font color="#CCCCCC"> free that block but</font><font color="#E5E5E5"> because we</font>

920
00:40:36,789 --> 00:40:42,009
only do<font color="#CCCCCC"> it with</font><font color="#E5E5E5"> ref counts of</font><font color="#CCCCCC"> one it</font>

921
00:40:38,650 --> 00:40:43,509
means if we<font color="#CCCCCC"> go to</font><font color="#E5E5E5"> remove a block and we</font>

922
00:40:42,009 --> 00:40:46,089
search the hash table<font color="#CCCCCC"> and it's not there</font>

923
00:40:43,509 --> 00:40:50,859
<font color="#E5E5E5">we know that it had a ref count of</font><font color="#CCCCCC"> 1 and</font>

924
00:40:46,089 --> 00:40:52,960
can remove it so this allows us<font color="#CCCCCC"> to files</font>

925
00:40:50,859 --> 00:40:54,519
that<font color="#E5E5E5"> of hashes blocks that have been</font>

926
00:40:52,960 --> 00:40:57,400
around<font color="#E5E5E5"> a long time and have never</font>

927
00:40:54,519 --> 00:40:59,430
managed to D dupe for us we remove them

928
00:40:57,400 --> 00:41:01,329
and put<font color="#E5E5E5"> in a new block</font><font color="#CCCCCC"> in hopes that</font>

929
00:40:59,430 --> 00:41:03,109
<font color="#E5E5E5">freshly written block has a higher</font>

930
00:41:01,329 --> 00:41:05,520
chance

931
00:41:03,109 --> 00:41:07,770
eventually<font color="#E5E5E5"> having a duplicate written of</font>

932
00:41:05,520 --> 00:41:11,069
it so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> with the view</font><font color="#E5E5E5"> ceiling</font>

933
00:41:07,770 --> 00:41:12,538
that's<font color="#E5E5E5"> the ceiling feature you can limit</font>

934
00:41:11,069 --> 00:41:15,210
how<font color="#E5E5E5"> much memory will</font><font color="#CCCCCC"> be used</font><font color="#E5E5E5"> by the de</font>

935
00:41:12,539 --> 00:41:17,849
doop table<font color="#CCCCCC"> and that solves</font><font color="#E5E5E5"> most of the</font>

936
00:41:15,210 --> 00:41:20,670
resource problems as is and<font color="#E5E5E5"> then the log</font>

937
00:41:17,849 --> 00:41:23,760
feature<font color="#E5E5E5"> solves the disk</font><font color="#CCCCCC"> i/o problem of</font>

938
00:41:20,670 --> 00:41:26,609
<font color="#CCCCCC">DD but again both of these are</font><font color="#E5E5E5"> just</font>

939
00:41:23,760 --> 00:41:28,559
<font color="#CCCCCC">ideas that the co-founder of ZFS has had</font>

940
00:41:26,609 --> 00:41:30,900
and presented at the dev summit for

941
00:41:28,559 --> 00:41:32,670
someone to use<font color="#CCCCCC"> but his company</font><font color="#E5E5E5"> doesn't</font>

942
00:41:30,900 --> 00:41:35,280
use<font color="#CCCCCC"> d</font><font color="#E5E5E5"> dupe they just use clones of</font>

943
00:41:32,670 --> 00:41:37,609
<font color="#E5E5E5">databases so he's not actively</font><font color="#CCCCCC"> working</font>

944
00:41:35,280 --> 00:41:37,609
<font color="#E5E5E5">on it</font>

945
00:41:40,400 --> 00:41:53,460
any other questions<font color="#E5E5E5"> yeah at the back so</font>

946
00:41:51,510 --> 00:41:55,500
the question<font color="#E5E5E5"> was the example of a laptop</font>

947
00:41:53,460 --> 00:41:56,190
<font color="#E5E5E5">breaking right before presentation was</font>

948
00:41:55,500 --> 00:42:08,369
that<font color="#CCCCCC"> a true story</font>

949
00:41:56,190 --> 00:42:11,990
yes 2016 yeah I no<font color="#E5E5E5"> longer have</font><font color="#CCCCCC"> to carry</font>

950
00:42:08,369 --> 00:42:11,990
<font color="#E5E5E5">two laptops</font><font color="#CCCCCC"> in case that</font><font color="#E5E5E5"> happens</font>

951
00:42:25,540 --> 00:42:30,279
the question was does anyone in the<font color="#E5E5E5"> ZFS</font>

952
00:42:27,760 --> 00:42:32,440
community<font color="#E5E5E5"> had done performance analysis</font>

953
00:42:30,280 --> 00:42:35,340
on the mitigations for Spectre and

954
00:42:32,440 --> 00:42:40,240
meltdown not yet in general those are

955
00:42:35,340 --> 00:42:41,740
<font color="#CCCCCC">syscall level things so they it depends</font>

956
00:42:40,240 --> 00:42:48,399
on the level<font color="#CCCCCC"> of how many Cisco's you're</font>

957
00:42:41,740 --> 00:42:50,200
making so in general<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> there an</font>

958
00:42:48,400 --> 00:42:53,020
increase<font color="#CCCCCC"> in latency there might actually</font>

959
00:42:50,200 --> 00:42:54,700
impact databases relatively heavily but

960
00:42:53,020 --> 00:42:55,930
regular file server<font color="#E5E5E5"> operations are</font>

961
00:42:54,700 --> 00:43:00,930
probably<font color="#E5E5E5"> not going to be impacted that</font>

962
00:42:55,930 --> 00:43:02,799
much so it depends how you're using ZFS

963
00:43:00,930 --> 00:43:07,690
really<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> where it's workload</font>

964
00:43:02,800 --> 00:43:13,060
<font color="#E5E5E5">dependent and each OS is mitigations for</font>

965
00:43:07,690 --> 00:43:16,020
<font color="#E5E5E5">specular meltdown</font><font color="#CCCCCC"> are different and I</font>

966
00:43:13,060 --> 00:43:16,020
<font color="#E5E5E5">think we have time for one</font><font color="#CCCCCC"> more question</font>

967
00:43:26,790 --> 00:43:33,900
so<font color="#CCCCCC"> the question was about ZFS spreading</font>

968
00:43:31,300 --> 00:43:36,580
to other operating systems<font color="#E5E5E5"> yes at the</font>

969
00:43:33,900 --> 00:43:40,990
opens NFS dev summit which was in

970
00:43:36,580 --> 00:43:44,140
<font color="#CCCCCC">November</font><font color="#E5E5E5"> the developer who runs the OS</font>

971
00:43:40,990 --> 00:43:47,979
<font color="#E5E5E5">10 port gave a demo of opens that have s</font>

972
00:43:44,140 --> 00:43:49,509
ported to Windows<font color="#E5E5E5"> that is since been</font>

973
00:43:47,980 --> 00:43:51,070
enhanced more it supports the

974
00:43:49,510 --> 00:43:52,150
<font color="#E5E5E5">replication so you can send and receive</font>

975
00:43:51,070 --> 00:43:56,530
to it

976
00:43:52,150 --> 00:43:57,970
and it also does<font color="#E5E5E5"> the individual file</font>

977
00:43:56,530 --> 00:44:00,880
systems don't<font color="#E5E5E5"> each take a drive letter</font>

978
00:43:57,970 --> 00:44:03,580
anymore<font color="#CCCCCC"> so if you have</font><font color="#E5E5E5"> 40 file systems</font>

979
00:44:00,880 --> 00:44:06,369
you<font color="#CCCCCC"> don't run out of Drive letters it's</font>

980
00:44:03,580 --> 00:44:09,220
still not considered<font color="#E5E5E5"> production quality</font>

981
00:44:06,369 --> 00:44:10,990
at all it's<font color="#E5E5E5"> it's a pre-alpha demo but</font>

982
00:44:09,220 --> 00:44:14,470
there's a github<font color="#CCCCCC"> repo you can check it</font>

983
00:44:10,990 --> 00:44:16,509
out<font color="#CCCCCC"> and it's all native</font><font color="#E5E5E5"> windows</font><font color="#CCCCCC"> api</font>

984
00:44:14,470 --> 00:44:17,410
<font color="#E5E5E5">stuff it's not using the</font><font color="#CCCCCC"> sub system for</font>

985
00:44:16,510 --> 00:44:21,010
<font color="#E5E5E5">linux thing</font>

986
00:44:17,410 --> 00:44:25,060
<font color="#CCCCCC">it's native</font><font color="#E5E5E5"> windows api is for the file</font>

987
00:44:21,010 --> 00:44:26,440
system so we might finally get there to

988
00:44:25,060 --> 00:44:29,730
have the universal file system<font color="#CCCCCC"> that</font>

989
00:44:26,440 --> 00:44:29,730
works in every operating<font color="#CCCCCC"> system</font>

990
00:44:40,220 --> 00:44:46,709
the question was do tones or jails<font color="#E5E5E5"> have</font>

991
00:44:43,770 --> 00:44:49,650
the same priority of access for<font color="#E5E5E5"> by ops</font>

992
00:44:46,710 --> 00:44:51,600
and performance than<font color="#CCCCCC"> the</font><font color="#E5E5E5"> host</font><font color="#CCCCCC"> by default</font>

993
00:44:49,650 --> 00:44:54,300
<font color="#E5E5E5">yes on</font><font color="#CCCCCC"> FreeBSD we have a resource</font>

994
00:44:51,600 --> 00:44:56,610
control system called<font color="#E5E5E5"> our CTL where you</font>

995
00:44:54,300 --> 00:44:58,830
can set kilobyte per second or I up

996
00:44:56,610 --> 00:45:00,540
limits<font color="#E5E5E5"> per jail so you can say the</font>

997
00:44:58,830 --> 00:45:03,380
certain jail can only have 50<font color="#CCCCCC"> I ops or</font>

998
00:45:00,540 --> 00:45:15,330
something<font color="#E5E5E5"> but it's not quite queuing or</font>

999
00:45:03,380 --> 00:45:18,570
<font color="#E5E5E5">priority levels you can't</font><font color="#CCCCCC"> the question</font>

1000
00:45:15,330 --> 00:45:22,319
was can you<font color="#E5E5E5"> I just change the size of</font>

1001
00:45:18,570 --> 00:45:25,770
the cache the Ark<font color="#CCCCCC"> for each zone and know</font>

1002
00:45:22,320 --> 00:45:27,300
<font color="#CCCCCC">ah that might be</font><font color="#E5E5E5"> interesting the</font>

1003
00:45:25,770 --> 00:45:30,420
accounting<font color="#E5E5E5"> of that would get really</font>

1004
00:45:27,300 --> 00:45:32,100
complicated especially<font color="#CCCCCC"> since with</font><font color="#E5E5E5"> phones</font>

1005
00:45:30,420 --> 00:45:34,920
and<font color="#E5E5E5"> stuff the same block could be</font><font color="#CCCCCC"> used</font>

1006
00:45:32,100 --> 00:45:40,950
by both<font color="#CCCCCC"> the host and the jail and then</font>

1007
00:45:34,920 --> 00:45:44,330
who pays for<font color="#E5E5E5"> it and</font><font color="#CCCCCC"> yeah I think</font><font color="#E5E5E5"> we're</font>

1008
00:45:40,950 --> 00:45:44,330
out<font color="#E5E5E5"> of time thank you</font>

1009
00:45:47,590 --> 00:45:51,629
[Applause]

