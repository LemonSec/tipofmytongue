1
00:00:05,940 --> 00:00:12,360
a couple technical difficulties seeing

2
00:00:10,530 --> 00:00:14,489
if switching laptops<font color="#E5E5E5"> gets the</font>

3
00:00:12,360 --> 00:00:17,220
presentation to work again

4
00:00:14,490 --> 00:00:20,039
so<font color="#E5E5E5"> yeah I'm Charles</font><font color="#CCCCCC"> EKKO I worked at</font>

5
00:00:17,220 --> 00:00:23,869
Cisco and the dev net team and cool

6
00:00:20,039 --> 00:00:27,270
looks like we have slides thank you<font color="#CCCCCC"> and</font>

7
00:00:23,870 --> 00:00:29,520
so I do a lot with with<font color="#CCCCCC"> open-source and</font>

8
00:00:27,270 --> 00:00:32,098
with standards<font color="#CCCCCC"> in the dev net team the</font>

9
00:00:29,520 --> 00:00:34,050
<font color="#CCCCCC">idea is helping developers use platforms</font>

10
00:00:32,098 --> 00:00:35,940
and technology that<font color="#E5E5E5"> Cisco provides so in</font>

11
00:00:34,050 --> 00:00:37,529
my case<font color="#CCCCCC"> it's where we're contributing a</font>

12
00:00:35,940 --> 00:00:39,539
lot<font color="#CCCCCC"> to open source</font><font color="#E5E5E5"> where we're</font>

13
00:00:37,530 --> 00:00:42,960
contributing to standards<font color="#E5E5E5"> and where</font>

14
00:00:39,539 --> 00:00:46,199
those play a large role and the products

15
00:00:42,960 --> 00:00:50,239
and<font color="#E5E5E5"> solutions we offer</font><font color="#CCCCCC"> opendaylight</font><font color="#E5E5E5"> is a</font>

16
00:00:46,199 --> 00:00:53,968
good example<font color="#CCCCCC"> open</font><font color="#E5E5E5"> source project that</font>

17
00:00:50,239 --> 00:00:55,890
has support for networking standards

18
00:00:53,969 --> 00:00:58,859
<font color="#CCCCCC">around</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> modeling around</font>

19
00:00:55,890 --> 00:01:01,769
network management<font color="#E5E5E5"> protocols and because</font>

20
00:00:58,859 --> 00:01:03,600
of those<font color="#E5E5E5"> it serves very well as a as a</font>

21
00:01:01,769 --> 00:01:05,039
platform for<font color="#E5E5E5"> network programmability and</font>

22
00:01:03,600 --> 00:01:10,380
<font color="#CCCCCC">that's what I'm here to</font><font color="#E5E5E5"> talk to you</font>

23
00:01:05,040 --> 00:01:11,790
about today so just an agenda<font color="#E5E5E5"> very brief</font>

24
00:01:10,380 --> 00:01:14,130
high-level because you probably<font color="#E5E5E5"> all know</font>

25
00:01:11,790 --> 00:01:16,650
<font color="#E5E5E5">this what is Sdn but it's kind of to</font>

26
00:01:14,130 --> 00:01:17,520
frame the<font color="#CCCCCC"> rest of the</font><font color="#E5E5E5"> the talk and then</font>

27
00:01:16,650 --> 00:01:20,190
what is<font color="#CCCCCC"> opendaylight</font>

28
00:01:17,520 --> 00:01:21,810
<font color="#E5E5E5">again just a</font><font color="#CCCCCC"> very brief summary</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font>

29
00:01:20,190 --> 00:01:26,280
talk a bit about network<font color="#E5E5E5"> programmability</font>

30
00:01:21,810 --> 00:01:28,490
<font color="#CCCCCC">and</font><font color="#E5E5E5"> how it is that</font><font color="#CCCCCC"> opendaylight</font><font color="#E5E5E5"> is very</font>

31
00:01:26,280 --> 00:01:31,890
<font color="#E5E5E5">well suited</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> network programmability</font>

32
00:01:28,490 --> 00:01:33,600
<font color="#E5E5E5">then the idea was</font><font color="#CCCCCC"> to do a demo</font><font color="#E5E5E5"> which I</font>

33
00:01:31,890 --> 00:01:35,670
was worried you know<font color="#E5E5E5"> might not go off</font>

34
00:01:33,600 --> 00:01:36,960
really<font color="#CCCCCC"> well but now it definitely won't</font>

35
00:01:35,670 --> 00:01:39,450
go off well so I'm<font color="#E5E5E5"> just going to show</font>

36
00:01:36,960 --> 00:01:40,710
you some slides<font color="#E5E5E5"> instead and walk you</font>

37
00:01:39,450 --> 00:01:42,690
through<font color="#E5E5E5"> what I would have done in the</font>

38
00:01:40,710 --> 00:01:45,380
demo<font color="#CCCCCC"> but the slides will be available</font>

39
00:01:42,690 --> 00:01:47,850
afterwards and if you're interested<font color="#E5E5E5"> and</font>

40
00:01:45,380 --> 00:01:49,229
<font color="#E5E5E5">there's step by step kind of if you</font>

41
00:01:47,850 --> 00:01:51,149
wanted to do the same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> yourself</font>

42
00:01:49,230 --> 00:01:53,010
<font color="#E5E5E5">because all this is</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> it's all</font>

43
00:01:51,150 --> 00:01:55,320
freely available<font color="#CCCCCC"> and you could do the</font>

44
00:01:53,010 --> 00:01:56,760
<font color="#E5E5E5">same set up</font><font color="#CCCCCC"> yourself</font><font color="#E5E5E5"> and the use case</font>

45
00:01:55,320 --> 00:01:59,070
I'm going<font color="#E5E5E5"> to show is it working</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

46
00:01:56,760 --> 00:02:04,100
<font color="#E5E5E5">EP and then we'll wrap</font><font color="#CCCCCC"> up with some</font>

47
00:01:59,070 --> 00:02:06,320
conclusions<font color="#CCCCCC"> ok so what is Sdn</font>

48
00:02:04,100 --> 00:02:08,908
<font color="#E5E5E5">software-defined networking</font><font color="#CCCCCC"> I guess</font>

49
00:02:06,320 --> 00:02:11,280
<font color="#E5E5E5">we're all aware of that</font><font color="#CCCCCC"> when it first</font>

50
00:02:08,908 --> 00:02:12,989
came out<font color="#CCCCCC"> that the key principle people</font>

51
00:02:11,280 --> 00:02:15,060
thought thought of one of them at<font color="#E5E5E5"> least</font>

52
00:02:12,989 --> 00:02:18,690
was this<font color="#E5E5E5"> separation the control plane</font><font color="#CCCCCC"> in</font>

53
00:02:15,060 --> 00:02:19,560
<font color="#E5E5E5">the data plane would seem like</font><font color="#CCCCCC"> a good</font>

54
00:02:18,690 --> 00:02:21,660
<font color="#E5E5E5">thing</font>

55
00:02:19,560 --> 00:02:24,840
<font color="#CCCCCC">OpenFlow was a protocol that got defined</font>

56
00:02:21,660 --> 00:02:27,540
<font color="#E5E5E5">around that time as a protocol for</font>

57
00:02:24,840 --> 00:02:30,150
<font color="#CCCCCC">Software Defined Networking logical</font>

58
00:02:27,540 --> 00:02:32,850
separation<font color="#E5E5E5"> of the control plane but then</font>

59
00:02:30,150 --> 00:02:34,980
also well because the control plane is

60
00:02:32,850 --> 00:02:36,569
separated instead of having it<font color="#CCCCCC"> just</font>

61
00:02:34,980 --> 00:02:38,519
spread out<font color="#CCCCCC"> over a bunch of</font><font color="#E5E5E5"> different</font>

62
00:02:36,569 --> 00:02:40,350
pieces<font color="#CCCCCC"> of network</font><font color="#E5E5E5"> equipment routers and</font>

63
00:02:38,520 --> 00:02:41,940
switches<font color="#CCCCCC"> you could centralize all</font><font color="#E5E5E5"> that</font>

64
00:02:40,350 --> 00:02:44,730
right as soon as you<font color="#E5E5E5"> break it apart the</font>

65
00:02:41,940 --> 00:02:46,620
data plane may still be distributed but

66
00:02:44,730 --> 00:02:47,790
you could<font color="#E5E5E5"> centralize the control that</font>

67
00:02:46,620 --> 00:02:50,970
was another big<font color="#CCCCCC"> thing that came around</font>

68
00:02:47,790 --> 00:02:52,950
<font color="#E5E5E5">and so those</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> all important aspects</font>

69
00:02:50,970 --> 00:02:55,769
<font color="#E5E5E5">of</font><font color="#CCCCCC"> Software Defined Networking</font><font color="#E5E5E5"> but I</font>

70
00:02:52,950 --> 00:02:57,000
think what's really come about<font color="#CCCCCC"> out of</font>

71
00:02:55,769 --> 00:02:59,480
Software Defined Networking that's

72
00:02:57,000 --> 00:03:02,790
perhaps<font color="#E5E5E5"> more important is</font>

73
00:02:59,480 --> 00:03:05,549
<font color="#CCCCCC">programmability</font><font color="#E5E5E5"> when you make not just</font>

74
00:03:02,790 --> 00:03:07,350
<font color="#E5E5E5">the configuration but the operational</font>

75
00:03:05,550 --> 00:03:09,750
data that's in the network<font color="#E5E5E5"> when you make</font>

76
00:03:07,350 --> 00:03:11,760
that available<font color="#E5E5E5"> to applications through</font>

77
00:03:09,750 --> 00:03:14,390
programmable interfaces<font color="#E5E5E5"> you really</font>

78
00:03:11,760 --> 00:03:16,920
enable a whole<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> functionality</font><font color="#CCCCCC"> and</font>

79
00:03:14,390 --> 00:03:18,299
that's what I<font color="#E5E5E5"> think is where the real</font>

80
00:03:16,920 --> 00:03:25,500
power of<font color="#CCCCCC"> Software Defined Networking</font>

81
00:03:18,300 --> 00:03:26,970
lies so with that in<font color="#CCCCCC"> mind</font><font color="#E5E5E5"> if yeah what</font>

82
00:03:25,500 --> 00:03:28,790
is it<font color="#CCCCCC"> that we then need from an SDN</font>

83
00:03:26,970 --> 00:03:31,079
controller of course it needs to have

84
00:03:28,790 --> 00:03:33,328
networking capabilities and<font color="#E5E5E5"> allow us to</font>

85
00:03:31,079 --> 00:03:36,600
control<font color="#CCCCCC"> our network but we really also</font>

86
00:03:33,329 --> 00:03:39,239
need it<font color="#E5E5E5"> to provide</font><font color="#CCCCCC"> developer friendly</font>

87
00:03:36,600 --> 00:03:41,310
<font color="#E5E5E5">api's that we can use to</font><font color="#CCCCCC"> access all that</font>

88
00:03:39,239 --> 00:03:44,579
<font color="#E5E5E5">information</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> to interact with the</font>

89
00:03:41,310 --> 00:03:47,040
<font color="#CCCCCC">network program programmatically but at</font>

90
00:03:44,579 --> 00:03:48,329
the<font color="#E5E5E5"> same time we don't</font><font color="#CCCCCC"> want to have to</font>

91
00:03:47,040 --> 00:03:50,179
deal with<font color="#E5E5E5"> all the complexity of the</font>

92
00:03:48,329 --> 00:03:52,320
underlying network so<font color="#CCCCCC"> we want some</font>

93
00:03:50,180 --> 00:03:54,690
abstractions there and we also don't

94
00:03:52,320 --> 00:03:56,370
<font color="#CCCCCC">want to care about exactly what</font>

95
00:03:54,690 --> 00:03:58,560
networking<font color="#E5E5E5"> protocol we're going to use</font>

96
00:03:56,370 --> 00:04:00,030
because<font color="#E5E5E5"> it's not like open flow is going</font>

97
00:03:58,560 --> 00:04:01,739
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be running everywhere</font><font color="#E5E5E5"> there's going</font>

98
00:04:00,030 --> 00:04:03,480
to be a<font color="#CCCCCC"> variety of</font><font color="#E5E5E5"> networking protocols</font>

99
00:04:01,739 --> 00:04:04,709
and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't want our</font><font color="#E5E5E5"> application</font><font color="#CCCCCC"> to</font>

100
00:04:03,480 --> 00:04:06,690
have to behave<font color="#CCCCCC"> a lot differently</font>

101
00:04:04,709 --> 00:04:10,829
depending on on which of<font color="#E5E5E5"> those are being</font>

102
00:04:06,690 --> 00:04:12,690
used<font color="#E5E5E5"> so with that in mind</font><font color="#CCCCCC"> then let's</font>

103
00:04:10,829 --> 00:04:15,510
take<font color="#E5E5E5"> a look at open daylight and</font><font color="#CCCCCC"> see</font>

104
00:04:12,690 --> 00:04:19,380
what it provides<font color="#E5E5E5"> in</font><font color="#CCCCCC"> terms of being that</font>

105
00:04:15,510 --> 00:04:21,690
<font color="#E5E5E5">kind of platform so kind of hard to see</font>

106
00:04:19,380 --> 00:04:25,080
with the lighting<font color="#E5E5E5"> here but what's in the</font>

107
00:04:21,690 --> 00:04:26,789
<font color="#E5E5E5">middle here are all the kind of core and</font>

108
00:04:25,080 --> 00:04:29,320
enhanced networking functions that you

109
00:04:26,789 --> 00:04:32,800
<font color="#E5E5E5">would typically</font><font color="#CCCCCC"> expect to find and</font>

110
00:04:29,320 --> 00:04:34,960
the end controller<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> also but then</font>

111
00:04:32,800 --> 00:04:37,480
so<font color="#E5E5E5"> that's kind of</font><font color="#CCCCCC"> table stakes and</font>

112
00:04:34,960 --> 00:04:39,669
<font color="#E5E5E5">opendaylight certainly has all that but</font>

113
00:04:37,480 --> 00:04:42,490
then what<font color="#CCCCCC"> I think is perhaps</font><font color="#E5E5E5"> really key</font>

114
00:04:39,670 --> 00:04:47,230
is above that are the<font color="#E5E5E5"> developer friendly</font>

115
00:04:42,490 --> 00:04:49,540
<font color="#E5E5E5">api's and if there's any way to dim both</font>

116
00:04:47,230 --> 00:04:51,100
the lights a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> because it's it</font>

117
00:04:49,540 --> 00:04:53,080
was it was good<font color="#E5E5E5"> before but</font><font color="#CCCCCC"> I think this</font>

118
00:04:51,100 --> 00:04:55,500
is people you have a hard<font color="#E5E5E5"> time seeing</font>

119
00:04:53,080 --> 00:04:55,500
don't you

120
00:04:56,409 --> 00:04:58,469
<font color="#E5E5E5">you</font>

121
00:05:01,420 --> 00:05:03,480
you

122
00:05:03,750 --> 00:05:10,650
yeah<font color="#E5E5E5"> cough and we'll talk about those</font>

123
00:05:07,800 --> 00:05:14,400
later<font color="#E5E5E5"> that provides that access that</font><font color="#CCCCCC"> you</font>

124
00:05:10,650 --> 00:05:16,200
need for applications<font color="#E5E5E5"> to access the not</font>

125
00:05:14,400 --> 00:05:17,729
just<font color="#CCCCCC"> the configuration but also all the</font>

126
00:05:16,200 --> 00:05:20,490
the<font color="#CCCCCC"> real-time data that the network</font>

127
00:05:17,730 --> 00:05:24,150
knows about then the model driven

128
00:05:20,490 --> 00:05:26,670
abstraction layer the<font color="#E5E5E5"> MD cell that kind</font>

129
00:05:24,150 --> 00:05:28,530
of provides<font color="#E5E5E5"> that</font><font color="#CCCCCC"> level of abstraction</font>

130
00:05:26,670 --> 00:05:30,360
<font color="#CCCCCC">that you need it also provides a</font>

131
00:05:28,530 --> 00:05:32,099
messaging fabric so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

132
00:05:30,360 --> 00:05:34,230
applications can communicate with

133
00:05:32,100 --> 00:05:35,640
everything underneath and not have to

134
00:05:34,230 --> 00:05:37,650
worry<font color="#E5E5E5"> about talking</font><font color="#CCCCCC"> to them individually</font>

135
00:05:35,640 --> 00:05:41,210
<font color="#E5E5E5">they can just interoperate through the</font>

136
00:05:37,650 --> 00:05:43,049
the MD cell and then very<font color="#CCCCCC"> importantly</font>

137
00:05:41,210 --> 00:05:46,200
opendaylight has all these<font color="#E5E5E5"> different</font>

138
00:05:43,050 --> 00:05:48,330
<font color="#CCCCCC">plugins which let you talk to</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> kinds</font>

139
00:05:46,200 --> 00:05:51,140
of different<font color="#CCCCCC"> network Akua</font><font color="#E5E5E5"> equipment not</font>

140
00:05:48,330 --> 00:05:56,370
just open flow<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> but open V switch</font>

141
00:05:51,140 --> 00:05:58,289
<font color="#CCCCCC">VPP</font><font color="#E5E5E5"> physical network</font><font color="#CCCCCC"> equipment from</font>

142
00:05:56,370 --> 00:05:59,850
various<font color="#E5E5E5"> vendors</font><font color="#CCCCCC"> and anything that</font><font color="#E5E5E5"> you</font>

143
00:05:58,290 --> 00:06:02,010
could<font color="#E5E5E5"> possibly have</font><font color="#CCCCCC"> in your network you</font>

144
00:05:59,850 --> 00:06:04,320
<font color="#CCCCCC">can have various</font><font color="#E5E5E5"> plugins that allow</font>

145
00:06:02,010 --> 00:06:10,230
<font color="#CCCCCC">opendaylight</font><font color="#E5E5E5"> to communicate with it very</font>

146
00:06:04,320 --> 00:06:11,159
<font color="#E5E5E5">very well so the software</font><font color="#CCCCCC"> architecture</font>

147
00:06:10,230 --> 00:06:15,330
of<font color="#CCCCCC"> opendaylight</font>

148
00:06:11,160 --> 00:06:18,060
it's written in<font color="#CCCCCC"> Java it makes use of the</font>

149
00:06:15,330 --> 00:06:20,719
<font color="#CCCCCC">maven build system</font><font color="#E5E5E5"> and I think</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> really</font>

150
00:06:18,060 --> 00:06:23,370
<font color="#E5E5E5">key thing</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> based on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> OSGi</font>

151
00:06:20,720 --> 00:06:24,840
<font color="#E5E5E5">framework and we'll look at using carafe</font>

152
00:06:23,370 --> 00:06:28,310
a little bit that's<font color="#E5E5E5"> how you can</font>

153
00:06:24,840 --> 00:06:29,520
dynamically load new capabilities into

154
00:06:28,310 --> 00:06:31,740
<font color="#CCCCCC">opendaylight</font>

155
00:06:29,520 --> 00:06:33,690
at runtime so<font color="#E5E5E5"> initially when it comes up</font>

156
00:06:31,740 --> 00:06:35,310
<font color="#E5E5E5">it's just running like the bare</font>

157
00:06:33,690 --> 00:06:36,900
infrastructure that it needs<font color="#E5E5E5"> to get</font>

158
00:06:35,310 --> 00:06:39,210
itself<font color="#E5E5E5"> running and then you add the</font>

159
00:06:36,900 --> 00:06:41,099
features in and you don't<font color="#E5E5E5"> have to like</font>

160
00:06:39,210 --> 00:06:42,870
take<font color="#CCCCCC"> it down to do that</font><font color="#E5E5E5"> so as your</font>

161
00:06:41,100 --> 00:06:48,030
network<font color="#E5E5E5"> grows and changes you could be</font>

162
00:06:42,870 --> 00:06:49,290
<font color="#E5E5E5">adding new capabilities so with Adam and</font>

163
00:06:48,030 --> 00:06:52,919
the switched gears then<font color="#E5E5E5"> to network</font>

164
00:06:49,290 --> 00:06:54,450
<font color="#E5E5E5">programmability</font><font color="#CCCCCC"> and first of all you</font>

165
00:06:52,919 --> 00:06:57,570
<font color="#CCCCCC">know why do you even</font><font color="#E5E5E5"> care about network</font>

166
00:06:54,450 --> 00:07:00,180
programmability<font color="#CCCCCC"> way back and</font><font color="#E5E5E5"> I guess the</font>

167
00:06:57,570 --> 00:07:01,680
90s there<font color="#E5E5E5"> was this simple network</font>

168
00:07:00,180 --> 00:07:04,229
management protocol<font color="#E5E5E5"> that was</font><font color="#CCCCCC"> defined</font>

169
00:07:01,680 --> 00:07:07,650
it's simple it manages our network it

170
00:07:04,229 --> 00:07:09,719
should be fantastic<font color="#E5E5E5"> right the problem</font>

171
00:07:07,650 --> 00:07:11,280
<font color="#CCCCCC">was it wasn't in fact it wasn't very</font>

172
00:07:09,720 --> 00:07:14,130
useful<font color="#CCCCCC"> at</font><font color="#E5E5E5"> all for configuring network</font>

173
00:07:11,280 --> 00:07:15,679
<font color="#E5E5E5">devices</font><font color="#CCCCCC"> it maybe helped you</font><font color="#E5E5E5"> get a little</font>

174
00:07:14,130 --> 00:07:18,020
bit<font color="#E5E5E5"> of visibility into</font>

175
00:07:15,680 --> 00:07:20,090
<font color="#CCCCCC">stade information and to handle</font><font color="#E5E5E5"> faults</font>

176
00:07:18,020 --> 00:07:22,400
<font color="#E5E5E5">but almost no</font><font color="#CCCCCC"> one was really using</font><font color="#E5E5E5"> it</font>

177
00:07:20,090 --> 00:07:25,609
for configuration<font color="#E5E5E5"> so what everyone had</font>

178
00:07:22,400 --> 00:07:28,758
to resort to was<font color="#E5E5E5"> using the CLI and the</font>

179
00:07:25,610 --> 00:07:32,210
CLI would be like<font color="#CCCCCC"> product specific api's</font>

180
00:07:28,759 --> 00:07:33,949
that are provided and you<font color="#CCCCCC"> could get into</font>

181
00:07:32,210 --> 00:07:35,299
the command<font color="#E5E5E5"> line and you could type you</font>

182
00:07:33,949 --> 00:07:37,370
know the things you<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> know and you</font>

183
00:07:35,300 --> 00:07:38,030
<font color="#E5E5E5">you'd learn it</font><font color="#CCCCCC"> over time you</font><font color="#E5E5E5"> love the</font>

184
00:07:37,370 --> 00:07:40,009
CLI

185
00:07:38,030 --> 00:07:43,969
but if you think<font color="#CCCCCC"> about programmatically</font>

186
00:07:40,009 --> 00:07:45,800
using<font color="#CCCCCC"> a CLI it's very brittle there's</font>

187
00:07:43,970 --> 00:07:48,860
<font color="#E5E5E5">not that kind of nice programming</font>

188
00:07:45,800 --> 00:07:52,310
interface behind it<font color="#E5E5E5"> you have to do a lot</font>

189
00:07:48,860 --> 00:07:54,020
of manipulation<font color="#E5E5E5"> of strings and whatnot</font>

190
00:07:52,310 --> 00:07:56,660
it's it's<font color="#E5E5E5"> going to be painful</font><font color="#CCCCCC"> to</font>

191
00:07:54,020 --> 00:07:58,780
automate<font color="#CCCCCC"> anything when you have only the</font>

192
00:07:56,660 --> 00:08:03,320
CLI<font color="#CCCCCC"> so that wasn't good enough and</font>

193
00:07:58,780 --> 00:08:04,940
operators said hey this<font color="#E5E5E5"> the standards</font>

194
00:08:03,320 --> 00:08:06,770
that<font color="#E5E5E5"> you've provided us for management</font>

195
00:08:04,940 --> 00:08:08,960
or just insufficient we really need

196
00:08:06,770 --> 00:08:11,120
something<font color="#E5E5E5"> better</font><font color="#CCCCCC"> and that was this RFC</font>

197
00:08:08,960 --> 00:08:13,729
and<font color="#E5E5E5"> the IETF</font><font color="#CCCCCC"> they came out it</font><font color="#E5E5E5"> was kind</font>

198
00:08:11,120 --> 00:08:16,810
<font color="#E5E5E5">of realizing that and saying yeah you're</font>

199
00:08:13,729 --> 00:08:19,610
right<font color="#CCCCCC"> we do need something better and</font>

200
00:08:16,810 --> 00:08:21,830
what came out<font color="#CCCCCC"> of those discussions then</font>

201
00:08:19,610 --> 00:08:24,500
was well let's take the best<font color="#E5E5E5"> practices</font>

202
00:08:21,830 --> 00:08:25,969
<font color="#CCCCCC">of</font><font color="#E5E5E5"> what we're doing we're using SNMP in</font>

203
00:08:24,500 --> 00:08:28,099
some ways<font color="#E5E5E5"> and we've learned what we can</font>

204
00:08:25,970 --> 00:08:30,080
and can't do with<font color="#E5E5E5"> it we're using the CLI</font>

205
00:08:28,099 --> 00:08:32,120
and<font color="#CCCCCC"> we've come up with a lot of cool</font>

206
00:08:30,080 --> 00:08:35,029
<font color="#E5E5E5">kind of tools and best practices around</font>

207
00:08:32,120 --> 00:08:37,250
<font color="#E5E5E5">the CLI</font><font color="#CCCCCC"> we know what we need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do</font>

208
00:08:35,029 --> 00:08:39,740
operationally let's take all<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> and</font>

209
00:08:37,250 --> 00:08:41,270
<font color="#E5E5E5">let's think</font><font color="#CCCCCC"> about what type of standards</font>

210
00:08:39,740 --> 00:08:43,580
we really need in the<font color="#E5E5E5"> networking space</font>

211
00:08:41,270 --> 00:08:47,660
<font color="#E5E5E5">to tackle that</font><font color="#CCCCCC"> and what came</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> it</font>

212
00:08:43,580 --> 00:08:50,750
was yang data models<font color="#E5E5E5"> and net conf and</font>

213
00:08:47,660 --> 00:08:53,920
<font color="#CCCCCC">ruskov network management protocols and</font>

214
00:08:50,750 --> 00:08:53,920
<font color="#E5E5E5">now we're</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> take a look at those</font>

215
00:08:54,400 --> 00:09:00,199
so<font color="#CCCCCC"> yang it's a data</font><font color="#E5E5E5"> modeling language</font>

216
00:08:57,560 --> 00:09:02,569
for networking<font color="#E5E5E5"> and when I was mentioning</font>

217
00:09:00,200 --> 00:09:05,029
<font color="#E5E5E5">before the CLI and</font><font color="#CCCCCC"> it being something</font>

218
00:09:02,570 --> 00:09:08,089
<font color="#E5E5E5">you</font><font color="#CCCCCC"> could learn over time and interact</font>

219
00:09:05,029 --> 00:09:10,689
<font color="#CCCCCC">with as a person it's it's not good for</font>

220
00:09:08,089 --> 00:09:13,160
<font color="#CCCCCC">machines it's it</font><font color="#E5E5E5"> doesn't have the</font>

221
00:09:10,690 --> 00:09:13,910
programmatic type of interfaces<font color="#CCCCCC"> that you</font>

222
00:09:13,160 --> 00:09:16,339
want

223
00:09:13,910 --> 00:09:19,730
what<font color="#E5E5E5"> yang does is it gives you</font>

224
00:09:16,339 --> 00:09:22,130
constraints<font color="#E5E5E5"> so you can define your your</font>

225
00:09:19,730 --> 00:09:24,560
data model<font color="#CCCCCC"> for the configuration and and</font>

226
00:09:22,130 --> 00:09:27,079
<font color="#E5E5E5">data of</font><font color="#CCCCCC"> your network device</font><font color="#E5E5E5"> very</font>

227
00:09:24,560 --> 00:09:28,310
precisely<font color="#CCCCCC"> it provides a lot of the</font>

228
00:09:27,079 --> 00:09:29,069
<font color="#E5E5E5">constructs that you would</font><font color="#CCCCCC"> think of</font><font color="#E5E5E5"> when</font>

229
00:09:28,310 --> 00:09:32,459
you think<font color="#E5E5E5"> of</font>

230
00:09:29,070 --> 00:09:35,930
<font color="#CCCCCC">graeme like data structures and reusable</font>

231
00:09:32,459 --> 00:09:38,099
types and all these things<font color="#E5E5E5"> that make</font>

232
00:09:35,930 --> 00:09:40,769
<font color="#E5E5E5">programming in like an object-oriented</font>

233
00:09:38,100 --> 00:09:42,720
<font color="#CCCCCC">se language very easy and intuitive you</font>

234
00:09:40,769 --> 00:09:44,459
can build on tops<font color="#E5E5E5"> of things that that's</font>

235
00:09:42,720 --> 00:09:50,910
really what yang is providing for

236
00:09:44,459 --> 00:09:54,630
<font color="#E5E5E5">network data and configuration</font><font color="#CCCCCC"> this is</font>

237
00:09:50,910 --> 00:09:56,339
<font color="#CCCCCC">just a an example</font><font color="#E5E5E5"> of a very the</font><font color="#CCCCCC"> ITF</font>

238
00:09:54,630 --> 00:09:58,230
interfaces yang model<font color="#E5E5E5"> just to give you</font>

239
00:09:56,339 --> 00:10:01,380
an idea<font color="#CCCCCC"> of what it looks like</font><font color="#E5E5E5"> it's kind</font>

240
00:09:58,230 --> 00:10:03,540
of organizing the<font color="#CCCCCC"> information into</font><font color="#E5E5E5"> a</font>

241
00:10:01,380 --> 00:10:05,670
well-defined way in<font color="#E5E5E5"> this case there's a</font>

242
00:10:03,540 --> 00:10:07,920
container that<font color="#E5E5E5"> has all your interfaces</font>

243
00:10:05,670 --> 00:10:09,779
and then there's a list<font color="#E5E5E5"> in there where</font>

244
00:10:07,920 --> 00:10:11,819
there's an<font color="#E5E5E5"> element for a</font><font color="#CCCCCC"> gender face and</font>

245
00:10:09,779 --> 00:10:15,360
then there's leaf nodes that<font color="#CCCCCC"> have all</font>

246
00:10:11,819 --> 00:10:18,360
the the data that's associated with<font color="#E5E5E5"> a</font>

247
00:10:15,360 --> 00:10:20,100
<font color="#E5E5E5">specific interface so that's what it</font>

248
00:10:18,360 --> 00:10:22,620
<font color="#CCCCCC">looks like in text fortunately</font><font color="#E5E5E5"> there's</font>

249
00:10:20,100 --> 00:10:25,920
some other tools that<font color="#E5E5E5"> let</font><font color="#CCCCCC"> you work with</font>

250
00:10:22,620 --> 00:10:27,660
the angles<font color="#CCCCCC"> pea yang is a great</font>

251
00:10:25,920 --> 00:10:29,610
<font color="#CCCCCC">command-line</font><font color="#E5E5E5"> tool you can validate a</font>

252
00:10:27,660 --> 00:10:31,439
yang model and you can<font color="#CCCCCC"> see it kind of</font>

253
00:10:29,610 --> 00:10:33,449
you one option<font color="#E5E5E5"> is to have it spit out a</font>

254
00:10:31,440 --> 00:10:35,430
tree structure<font color="#E5E5E5"> like what I'm showing</font>

255
00:10:33,449 --> 00:10:38,699
there on the<font color="#E5E5E5"> right hand</font><font color="#CCCCCC"> side again all</font>

256
00:10:35,430 --> 00:10:40,680
<font color="#CCCCCC">open-source yang</font><font color="#E5E5E5"> Explorer lets you look</font>

257
00:10:38,699 --> 00:10:43,279
at<font color="#E5E5E5"> a yang model it's like a GUI based</font>

258
00:10:40,680 --> 00:10:47,310
<font color="#E5E5E5">tool and gives you more of an HTML like</font>

259
00:10:43,279 --> 00:10:49,410
<font color="#E5E5E5">interaction experience with it and then</font>

260
00:10:47,310 --> 00:10:51,560
<font color="#E5E5E5">opendaylight has some great tools built</font>

261
00:10:49,410 --> 00:10:54,829
into<font color="#E5E5E5"> it as part of its yang tools</font>

262
00:10:51,560 --> 00:10:57,239
feature and what that does is lets

263
00:10:54,829 --> 00:11:00,420
<font color="#E5E5E5">opendaylight interact with with yang</font>

264
00:10:57,240 --> 00:11:01,889
models<font color="#CCCCCC"> and adds support for for</font>

265
00:11:00,420 --> 00:11:04,050
interacting with<font color="#E5E5E5"> them through net cough</font>

266
00:11:01,889 --> 00:11:07,350
<font color="#CCCCCC">and rest cough</font><font color="#E5E5E5"> and what opendaylight</font>

267
00:11:04,050 --> 00:11:10,050
does is actually generates code for all

268
00:11:07,350 --> 00:11:11,579
the api's that are defined by the<font color="#E5E5E5"> yang</font>

269
00:11:10,050 --> 00:11:15,120
model<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> take a look at that</font>

270
00:11:11,579 --> 00:11:17,729
now the idea would<font color="#E5E5E5"> be if</font><font color="#CCCCCC"> I had one or</font>

271
00:11:15,120 --> 00:11:21,180
more yang models that are supported by

272
00:11:17,730 --> 00:11:23,639
say a network element<font color="#CCCCCC"> or that I need for</font>

273
00:11:21,180 --> 00:11:25,920
some network function that I'm defining

274
00:11:23,639 --> 00:11:29,819
<font color="#CCCCCC">I can run those through the</font><font color="#E5E5E5"> yang tools</font>

275
00:11:25,920 --> 00:11:32,550
of<font color="#E5E5E5"> opendaylight</font><font color="#CCCCCC"> and it generates in</font><font color="#E5E5E5"> real</font>

276
00:11:29,819 --> 00:11:36,899
<font color="#E5E5E5">time all the the code that I need</font><font color="#CCCCCC"> to</font>

277
00:11:32,550 --> 00:11:38,880
<font color="#CCCCCC">interact with those api's then through</font>

278
00:11:36,899 --> 00:11:40,199
maven you can load those in dynamically

279
00:11:38,880 --> 00:11:41,660
as a<font color="#E5E5E5"> bundle and add them into</font>

280
00:11:40,199 --> 00:11:44,359
opendaylight so

281
00:11:41,660 --> 00:11:46,910
<font color="#E5E5E5">it has the code that you need to support</font>

282
00:11:44,360 --> 00:11:48,830
<font color="#E5E5E5">the</font><font color="#CCCCCC"> api's that are defined by these</font><font color="#E5E5E5"> yang</font>

283
00:11:46,910 --> 00:11:51,050
models<font color="#E5E5E5"> at the same time as an</font>

284
00:11:48,830 --> 00:11:53,360
application<font color="#CCCCCC"> developer you can</font><font color="#E5E5E5"> write your</font>

285
00:11:51,050 --> 00:11:55,130
code that<font color="#CCCCCC"> says well when someone calls</font>

286
00:11:53,360 --> 00:11:58,130
<font color="#E5E5E5">this API what do I want to have happen</font>

287
00:11:55,130 --> 00:12:01,340
<font color="#CCCCCC">and so you can write</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the kind of</font>

288
00:11:58,130 --> 00:12:03,650
real<font color="#CCCCCC"> business logic</font><font color="#E5E5E5"> or feature logic</font>

289
00:12:01,340 --> 00:12:06,980
behind it<font color="#E5E5E5"> and load that in dynamically</font>

290
00:12:03,650 --> 00:12:09,020
as well<font color="#E5E5E5"> so in this way opendaylight can</font>

291
00:12:06,980 --> 00:12:11,450
grow and learn<font color="#CCCCCC"> and add support for new</font>

292
00:12:09,020 --> 00:12:20,290
<font color="#CCCCCC">api is over time all based on yang</font>

293
00:12:11,450 --> 00:12:20,290
models<font color="#E5E5E5"> I mentioned</font><font color="#CCCCCC"> net conf Andres conf</font>

294
00:12:20,330 --> 00:12:24,560
the way this works is yang is just the

295
00:12:22,010 --> 00:12:27,400
data modeling language<font color="#E5E5E5"> it defines what</font>

296
00:12:24,560 --> 00:12:29,599
is the data<font color="#CCCCCC"> that you're</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to send</font>

297
00:12:27,400 --> 00:12:31,910
<font color="#E5E5E5">over the wire</font><font color="#CCCCCC"> but you actually need</font>

298
00:12:29,600 --> 00:12:34,550
<font color="#E5E5E5">something to talk</font><font color="#CCCCCC"> to the device you need</font>

299
00:12:31,910 --> 00:12:38,810
a protocol<font color="#CCCCCC"> for that and that conf is one</font>

300
00:12:34,550 --> 00:12:41,270
protocol it runs over<font color="#E5E5E5"> SSH primarily the</font>

301
00:12:38,810 --> 00:12:44,630
the data<font color="#E5E5E5"> your yang based data is</font>

302
00:12:41,270 --> 00:12:47,660
formatted<font color="#CCCCCC"> in XML it provides a lot of</font>

303
00:12:44,630 --> 00:12:50,360
nice capabilities for<font color="#E5E5E5"> configuration data</font>

304
00:12:47,660 --> 00:12:53,770
things like transactions and the ability

305
00:12:50,360 --> 00:12:55,820
to<font color="#E5E5E5"> roll back the the</font><font color="#CCCCCC"> ability to validate</font>

306
00:12:53,770 --> 00:12:57,980
<font color="#CCCCCC">changes that you're making before you</font>

307
00:12:55,820 --> 00:12:59,300
deploy them the ability to<font color="#E5E5E5"> have</font>

308
00:12:57,980 --> 00:13:01,520
different<font color="#E5E5E5"> data stores like an</font>

309
00:12:59,300 --> 00:13:03,260
operational data<font color="#CCCCCC"> store and a</font>

310
00:13:01,520 --> 00:13:05,930
configuration<font color="#E5E5E5"> data store it gives you a</font>

311
00:13:03,260 --> 00:13:08,150
lot of nice programming capabilities

312
00:13:05,930 --> 00:13:11,390
that you need<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's also a pretty</font>

313
00:13:08,150 --> 00:13:14,120
<font color="#E5E5E5">heavy weight and so less cough is</font>

314
00:13:11,390 --> 00:13:16,000
another network management protocol<font color="#E5E5E5"> that</font>

315
00:13:14,120 --> 00:13:19,750
<font color="#E5E5E5">lets you work with yang models and</font>

316
00:13:16,000 --> 00:13:24,020
that's<font color="#E5E5E5"> more of like</font><font color="#CCCCCC"> a web application</font>

317
00:13:19,750 --> 00:13:25,670
level type of protocol it takes every

318
00:13:24,020 --> 00:13:28,939
<font color="#CCCCCC">Aldus capability that you have with</font>

319
00:13:25,670 --> 00:13:32,300
<font color="#CCCCCC">Netcom</font><font color="#E5E5E5"> and maps it on to a rest-based</font>

320
00:13:28,940 --> 00:13:35,270
API using rest base for like you<font color="#E5E5E5"> know</font>

321
00:13:32,300 --> 00:13:36,530
get put post<font color="#E5E5E5"> and in addition to</font>

322
00:13:35,270 --> 00:13:40,189
<font color="#E5E5E5">supporting</font><font color="#CCCCCC"> XML</font>

323
00:13:36,530 --> 00:13:44,000
it supports formatting<font color="#E5E5E5"> your yang based</font>

324
00:13:40,190 --> 00:13:46,600
data as JSON<font color="#CCCCCC"> so if you're used to kind</font>

325
00:13:44,000 --> 00:13:49,100
of writing<font color="#E5E5E5"> web applications</font><font color="#CCCCCC"> you're using</font>

326
00:13:46,600 --> 00:13:50,390
<font color="#CCCCCC">Python to interact with rest-based API</font>

327
00:13:49,100 --> 00:13:53,300
is this is going to be a much more

328
00:13:50,390 --> 00:13:54,439
<font color="#CCCCCC">intuitive much more developer friendly</font>

329
00:13:53,300 --> 00:13:57,589
way<font color="#CCCCCC"> of interacting</font>

330
00:13:54,440 --> 00:14:01,340
<font color="#E5E5E5">dang models just by using rest-based API</font>

331
00:13:57,590 --> 00:14:02,840
<font color="#CCCCCC">sand and JSON for the data the cool</font>

332
00:14:01,340 --> 00:14:04,940
thing is<font color="#E5E5E5"> it doesn't matter whether you</font>

333
00:14:02,840 --> 00:14:09,410
use net comp or<font color="#CCCCCC"> rest comp</font><font color="#E5E5E5"> or you use</font>

334
00:14:04,940 --> 00:14:13,670
both<font color="#CCCCCC"> that actual data is based on</font><font color="#E5E5E5"> yang</font>

335
00:14:09,410 --> 00:14:16,790
anyways and the data models on the

336
00:14:13,670 --> 00:14:18,620
device can be accessed either<font color="#E5E5E5"> through</font>

337
00:14:16,790 --> 00:14:20,870
<font color="#E5E5E5">net</font><font color="#CCCCCC"> comp</font><font color="#E5E5E5"> or through rest cough or both</font>

338
00:14:18,620 --> 00:14:22,460
at<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> time it's the exact</font><font color="#E5E5E5"> same get</font>

339
00:14:20,870 --> 00:14:23,990
a model that<font color="#E5E5E5"> you're operating with it's</font>

340
00:14:22,460 --> 00:14:30,290
just two different ways<font color="#E5E5E5"> of interacting</font>

341
00:14:23,990 --> 00:14:35,600
<font color="#E5E5E5">with that data so looking at how this</font>

342
00:14:30,290 --> 00:14:37,849
works out with<font color="#E5E5E5"> open daylight then so</font>

343
00:14:35,600 --> 00:14:39,680
this is kind of oriented the same way<font color="#E5E5E5"> as</font>

344
00:14:37,850 --> 00:14:41,570
that<font color="#E5E5E5"> picture</font><font color="#CCCCCC"> I had before with the MD</font>

345
00:14:39,680 --> 00:14:45,770
<font color="#CCCCCC">Sal and</font><font color="#E5E5E5"> all your network functionality</font>

346
00:14:41,570 --> 00:14:48,830
here in the core<font color="#CCCCCC"> Wes</font><font color="#E5E5E5"> cough as a high</font>

347
00:14:45,770 --> 00:14:50,750
level<font color="#CCCCCC"> API being shown up to applications</font>

348
00:14:48,830 --> 00:14:52,400
<font color="#E5E5E5">that sit above open daylight and then</font>

349
00:14:50,750 --> 00:14:54,020
that cough being used to<font color="#E5E5E5"> communicate</font>

350
00:14:52,400 --> 00:14:56,270
<font color="#CCCCCC">with</font><font color="#E5E5E5"> the network</font><font color="#CCCCCC"> devices</font><font color="#E5E5E5"> underneath it</font>

351
00:14:54,020 --> 00:14:59,449
<font color="#E5E5E5">and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> in this example I have it</font>

352
00:14:56,270 --> 00:15:02,480
<font color="#E5E5E5">talking to two different VPP nodes and</font>

353
00:14:59,450 --> 00:15:04,960
then<font color="#CCCCCC"> open wrt node and this just assumed</font>

354
00:15:02,480 --> 00:15:07,970
that<font color="#E5E5E5"> these all support net kampf</font><font color="#CCCCCC"> and</font>

355
00:15:04,960 --> 00:15:11,810
that there's a set<font color="#CCCCCC"> of yang models that</font>

356
00:15:07,970 --> 00:15:13,760
that they support for now when

357
00:15:11,810 --> 00:15:17,719
<font color="#E5E5E5">opendaylight communicates with VPP</font>

358
00:15:13,760 --> 00:15:20,300
<font color="#E5E5E5">number one it would communicate with the</font>

359
00:15:17,720 --> 00:15:22,520
vietcong it would do a<font color="#E5E5E5"> hello exchange</font>

360
00:15:20,300 --> 00:15:25,819
established<font color="#CCCCCC"> an</font><font color="#E5E5E5"> ssh connection to it and</font>

361
00:15:22,520 --> 00:15:30,140
it would learn what yang models VPP

362
00:15:25,820 --> 00:15:32,900
supports it would add that<font color="#E5E5E5"> VPP node into</font>

363
00:15:30,140 --> 00:15:35,000
its<font color="#E5E5E5"> inventory of nodes and then it would</font>

364
00:15:32,900 --> 00:15:37,220
take<font color="#E5E5E5"> those yang models</font><font color="#CCCCCC"> add them to its</font>

365
00:15:35,000 --> 00:15:39,260
cache and generate<font color="#E5E5E5"> all the code in real</font>

366
00:15:37,220 --> 00:15:41,150
time that it<font color="#CCCCCC"> needs to interact with</font>

367
00:15:39,260 --> 00:15:45,140
those yang models and support the<font color="#E5E5E5"> api is</font>

368
00:15:41,150 --> 00:15:47,300
behind them<font color="#CCCCCC"> we then</font><font color="#E5E5E5"> talk to the next</font><font color="#CCCCCC"> vp</font>

369
00:15:45,140 --> 00:15:49,370
node and for the sake of argument<font color="#CCCCCC"> let's</font>

370
00:15:47,300 --> 00:15:51,920
say it supports the<font color="#E5E5E5"> exact same yang</font>

371
00:15:49,370 --> 00:15:54,140
models so then it would add that node

372
00:15:51,920 --> 00:15:57,709
<font color="#E5E5E5">into its inventory but there's actually</font>

373
00:15:54,140 --> 00:16:00,230
<font color="#E5E5E5">new no new yang models to add to its</font>

374
00:15:57,710 --> 00:16:01,850
model cache<font color="#CCCCCC"> no new code that it needs to</font>

375
00:16:00,230 --> 00:16:05,900
<font color="#E5E5E5">generate it's already done all that so</font>

376
00:16:01,850 --> 00:16:08,390
it<font color="#CCCCCC"> doesn't need to do</font><font color="#E5E5E5"> it again now it</font>

377
00:16:05,900 --> 00:16:11,540
to open wrt and adds it into<font color="#E5E5E5"> its</font>

378
00:16:08,390 --> 00:16:14,480
topology<font color="#E5E5E5"> puts it into its node inventory</font>

379
00:16:11,540 --> 00:16:16,400
<font color="#CCCCCC">and let's say the open wrt supports some</font>

380
00:16:14,480 --> 00:16:18,890
of<font color="#CCCCCC"> the same yang models but there's some</font>

381
00:16:16,400 --> 00:16:20,900
<font color="#CCCCCC">new ones as well so then we'd go ahead</font>

382
00:16:18,890 --> 00:16:23,210
<font color="#E5E5E5">and add those</font><font color="#CCCCCC"> to our cache generate the</font>

383
00:16:20,900 --> 00:16:25,069
code and now<font color="#E5E5E5"> open</font><font color="#CCCCCC"> daylight's able to</font>

384
00:16:23,210 --> 00:16:27,170
<font color="#E5E5E5">interact with and control all three of</font>

385
00:16:25,070 --> 00:16:34,910
these network devices<font color="#E5E5E5"> and that can all</font>

386
00:16:27,170 --> 00:16:37,000
happen<font color="#E5E5E5"> at real at runtime</font><font color="#CCCCCC"> okay great so</font>

387
00:16:34,910 --> 00:16:40,130
now<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is where</font><font color="#E5E5E5"> is going to shift</font><font color="#CCCCCC"> to</font>

388
00:16:37,000 --> 00:16:44,600
demo mode but instead I think<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> just</font>

389
00:16:40,130 --> 00:16:45,980
going<font color="#E5E5E5"> to go</font><font color="#CCCCCC"> through some slides so the</font>

390
00:16:44,600 --> 00:16:47,870
idea here<font color="#E5E5E5"> is what if you wanted to go</font>

391
00:16:45,980 --> 00:16:49,730
<font color="#E5E5E5">ahead and install open daylight and get</font>

392
00:16:47,870 --> 00:16:52,730
up<font color="#E5E5E5"> and running with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and get it</font>

393
00:16:49,730 --> 00:16:57,350
working with them<font color="#E5E5E5"> you know what would</font>

394
00:16:52,730 --> 00:17:01,130
you<font color="#E5E5E5"> do and you can just</font><font color="#CCCCCC"> download a tar</font>

395
00:16:57,350 --> 00:17:03,380
or zip file with the open with the open

396
00:17:01,130 --> 00:17:05,599
daylight code<font color="#E5E5E5"> then what I'm going to be</font>

397
00:17:03,380 --> 00:17:07,490
using<font color="#E5E5E5"> this example is nitrogen</font><font color="#CCCCCC"> SR one</font>

398
00:17:05,599 --> 00:17:09,919
that's the<font color="#E5E5E5"> most recent</font><font color="#CCCCCC"> stable version of</font>

399
00:17:07,490 --> 00:17:12,079
open daylight<font color="#E5E5E5"> so you can download that</font>

400
00:17:09,920 --> 00:17:14,180
<font color="#E5E5E5">and then installing it's as simple as</font>

401
00:17:12,079 --> 00:17:16,399
<font color="#CCCCCC">this</font><font color="#E5E5E5"> you just unzip or untie it</font>

402
00:17:14,180 --> 00:17:19,160
depending on<font color="#E5E5E5"> which</font><font color="#CCCCCC"> version you pulled</font>

403
00:17:16,400 --> 00:17:22,010
down<font color="#E5E5E5"> you CD into the directory that that</font>

404
00:17:19,160 --> 00:17:25,940
creates<font color="#E5E5E5"> and then you just execute the</font>

405
00:17:22,010 --> 00:17:28,010
carafe you know dot bins<font color="#CCCCCC"> slush bin</font>

406
00:17:25,940 --> 00:17:31,010
<font color="#CCCCCC">slash carafe and that just kicks off</font>

407
00:17:28,010 --> 00:17:33,020
open<font color="#CCCCCC"> daylight and this will take it</font>

408
00:17:31,010 --> 00:17:36,170
<font color="#CCCCCC">didn't really take zero seconds it</font>

409
00:17:33,020 --> 00:17:38,600
<font color="#E5E5E5">probably takes like five seconds and it</font>

410
00:17:36,170 --> 00:17:42,590
starts up open daylight<font color="#E5E5E5"> and then this is</font>

411
00:17:38,600 --> 00:17:45,350
the interactive<font color="#CCCCCC"> command line for</font><font color="#E5E5E5"> inner</font>

412
00:17:42,590 --> 00:17:47,480
for operating<font color="#E5E5E5"> with open</font><font color="#CCCCCC"> daylight</font><font color="#E5E5E5"> now an</font>

413
00:17:45,350 --> 00:17:50,480
open daylight starts up it starts up

414
00:17:47,480 --> 00:17:52,580
with<font color="#E5E5E5"> no features enabled on it so that's</font>

415
00:17:50,480 --> 00:17:55,190
part of why it starts up really<font color="#E5E5E5"> fast and</font>

416
00:17:52,580 --> 00:17:56,510
then depending<font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> network the</font>

417
00:17:55,190 --> 00:17:59,090
network elements you<font color="#E5E5E5"> want to be able to</font>

418
00:17:56,510 --> 00:18:01,970
talk<font color="#E5E5E5"> to the functionality</font><font color="#CCCCCC"> that you need</font>

419
00:17:59,090 --> 00:18:05,750
<font color="#E5E5E5">you add in</font><font color="#CCCCCC"> the features that</font><font color="#E5E5E5"> that are</font>

420
00:18:01,970 --> 00:18:07,400
important<font color="#E5E5E5"> to you and</font><font color="#CCCCCC"> you do this by you</font>

421
00:18:05,750 --> 00:18:10,550
can do feature list to see<font color="#E5E5E5"> all the</font>

422
00:18:07,400 --> 00:18:13,940
features that<font color="#E5E5E5"> are available</font><font color="#CCCCCC"> list</font><font color="#E5E5E5"> I to</font>

423
00:18:10,550 --> 00:18:16,669
see what's installed<font color="#E5E5E5"> list -</font><font color="#CCCCCC"> R to see</font>

424
00:18:13,940 --> 00:18:19,130
what features<font color="#E5E5E5"> are</font><font color="#CCCCCC"> required you can</font>

425
00:18:16,670 --> 00:18:21,530
<font color="#E5E5E5">install features this way</font>

426
00:18:19,130 --> 00:18:24,289
one at a time<font color="#CCCCCC"> or many</font><font color="#E5E5E5"> and you can</font>

427
00:18:21,530 --> 00:18:28,970
<font color="#CCCCCC">uninstall features and so what I'm</font><font color="#E5E5E5"> going</font>

428
00:18:24,289 --> 00:18:30,860
to show here<font color="#CCCCCC"> is for the demo that I was</font>

429
00:18:28,970 --> 00:18:32,600
<font color="#E5E5E5">going to do I want to be able to use the</font>

430
00:18:30,860 --> 00:18:35,120
user<font color="#E5E5E5"> graphical user interface of</font>

431
00:18:32,600 --> 00:18:37,340
<font color="#CCCCCC">opendaylight</font><font color="#E5E5E5"> and that's called</font><font color="#CCCCCC"> deluxe</font>

432
00:18:35,120 --> 00:18:39,799
<font color="#E5E5E5">and I also wanted the</font><font color="#CCCCCC"> ability to</font>

433
00:18:37,340 --> 00:18:42,080
<font color="#E5E5E5">interact with the</font><font color="#CCCCCC"> Netcom functionality</font>

434
00:18:39,799 --> 00:18:44,210
and the rest<font color="#E5E5E5"> con functionality so these</font>

435
00:18:42,080 --> 00:18:46,129
are the sets of these are all the

436
00:18:44,210 --> 00:18:48,830
features<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I enabled it's a very</font>

437
00:18:46,130 --> 00:18:50,720
small set of the total set of<font color="#CCCCCC"> features</font>

438
00:18:48,830 --> 00:18:54,049
that opendaylight supports but it's

439
00:18:50,720 --> 00:18:57,020
enough for<font color="#E5E5E5"> me to to basically do</font>

440
00:18:54,049 --> 00:19:02,299
something like what<font color="#E5E5E5"> I'm showing here</font><font color="#CCCCCC"> to</font>

441
00:18:57,020 --> 00:19:06,168
<font color="#E5E5E5">create this type of network</font><font color="#CCCCCC"> okay so I</font>

442
00:19:02,299 --> 00:19:08,240
have those<font color="#E5E5E5"> features installed and the</font>

443
00:19:06,169 --> 00:19:11,450
way I want to<font color="#E5E5E5"> use it is to connect</font><font color="#CCCCCC"> the</font>

444
00:19:08,240 --> 00:19:15,610
VPP now VPP you'll hear more<font color="#E5E5E5"> about it</font>

445
00:19:11,450 --> 00:19:17,390
<font color="#CCCCCC">later on</font><font color="#E5E5E5"> today is a very</font>

446
00:19:15,610 --> 00:19:19,850
high-performance<font color="#CCCCCC"> open-source software</font>

447
00:19:17,390 --> 00:19:22,400
<font color="#E5E5E5">for it or in and of itself it doesn't</font>

448
00:19:19,850 --> 00:19:24,230
have<font color="#CCCCCC"> support for Netcom</font><font color="#E5E5E5"> so there is a</font>

449
00:19:22,400 --> 00:19:26,450
component called honeycomb which you see

450
00:19:24,230 --> 00:19:28,700
in this picture<font color="#CCCCCC"> and what that does is</font>

451
00:19:26,450 --> 00:19:31,429
that<font color="#CCCCCC"> adds a net</font><font color="#E5E5E5"> comp interface and a</font>

452
00:19:28,700 --> 00:19:33,860
rest conf interface to VPP<font color="#E5E5E5"> so you can</font>

453
00:19:31,429 --> 00:19:35,929
interact with<font color="#CCCCCC"> it that way otherwise</font>

454
00:19:33,860 --> 00:19:39,500
<font color="#E5E5E5">there's just</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> low-level API and a</font>

455
00:19:35,929 --> 00:19:42,260
CLI<font color="#CCCCCC"> to what you can</font><font color="#E5E5E5"> work with</font><font color="#CCCCCC"> VPP</font><font color="#E5E5E5"> so</font>

456
00:19:39,500 --> 00:19:46,340
what<font color="#CCCCCC"> I did</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> I installed VPP and</font>

457
00:19:42,260 --> 00:19:48,200
honeycomb<font color="#E5E5E5"> on a VM and then I wanted to</font>

458
00:19:46,340 --> 00:19:52,370
<font color="#CCCCCC">have it connect to opendaylight as you</font>

459
00:19:48,200 --> 00:19:55,130
see here using net conf so these are the

460
00:19:52,370 --> 00:19:57,590
steps<font color="#CCCCCC"> to do it and in the slides that</font>

461
00:19:55,130 --> 00:19:59,990
I'll be posting<font color="#E5E5E5"> there's details on how</font>

462
00:19:57,590 --> 00:20:01,309
to do each of these steps<font color="#CCCCCC"> in the demo I</font>

463
00:19:59,990 --> 00:20:05,659
was going to<font color="#E5E5E5"> walk through</font><font color="#CCCCCC"> each of these</font>

464
00:20:01,309 --> 00:20:08,030
but I'll just kind of<font color="#CCCCCC"> show you how it</font>

465
00:20:05,659 --> 00:20:12,340
would<font color="#E5E5E5"> have would have worked the idea</font>

466
00:20:08,030 --> 00:20:15,559
being that<font color="#E5E5E5"> we want to be able to connect</font>

467
00:20:12,340 --> 00:20:17,720
using<font color="#E5E5E5"> that coffee</font><font color="#CCCCCC"> directly into VPP we</font>

468
00:20:15,559 --> 00:20:20,299
can do that we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> also use the CLI to</font>

469
00:20:17,720 --> 00:20:24,049
talk to VPP<font color="#E5E5E5"> what we're going to do or</font>

470
00:20:20,299 --> 00:20:26,720
<font color="#E5E5E5">what I did was I set it up to to use DB</font>

471
00:20:24,049 --> 00:20:31,610
DK by giving it an interface a physical

472
00:20:26,720 --> 00:20:32,640
interface on the VM and then using

473
00:20:31,610 --> 00:20:34,530
postman

474
00:20:32,640 --> 00:20:37,770
<font color="#CCCCCC">I went</font><font color="#E5E5E5"> through the rest comp interface</font>

475
00:20:34,530 --> 00:20:39,810
of<font color="#CCCCCC"> opendaylight and using</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> PUD</font>

476
00:20:37,770 --> 00:20:41,970
remember we saw before<font color="#E5E5E5"> the rest converse</font>

477
00:20:39,810 --> 00:20:46,500
that<font color="#CCCCCC"> we can use so just doing</font><font color="#E5E5E5"> a put</font>

478
00:20:41,970 --> 00:20:49,110
request<font color="#CCCCCC"> I attach VPP to</font><font color="#E5E5E5"> opendaylight and</font>

479
00:20:46,500 --> 00:20:50,580
I think I have a<font color="#E5E5E5"> screenshot of</font><font color="#CCCCCC"> that that</font>

480
00:20:49,110 --> 00:20:53,820
we<font color="#E5E5E5"> can look at I mean if you were</font>

481
00:20:50,580 --> 00:20:56,970
familiar with postman<font color="#E5E5E5"> it's a it's a real</font>

482
00:20:53,820 --> 00:21:02,639
easy<font color="#E5E5E5"> way to interact with rest-based API</font>

483
00:20:56,970 --> 00:21:05,520
<font color="#E5E5E5">is like rest comp okay so because</font><font color="#CCCCCC"> I</font>

484
00:21:02,640 --> 00:21:07,710
enabled<font color="#CCCCCC"> deluxe I have access</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> this</font>

485
00:21:05,520 --> 00:21:09,300
<font color="#E5E5E5">graphical user interface on the bottom</font>

486
00:21:07,710 --> 00:21:13,530
right that's what<font color="#E5E5E5"> it essentially looks</font>

487
00:21:09,300 --> 00:21:16,860
<font color="#E5E5E5">like and as I mentioned here's the the</font>

488
00:21:13,530 --> 00:21:19,860
request I would<font color="#E5E5E5"> make using postman -</font>

489
00:21:16,860 --> 00:21:24,570
it's a put request to add VPP<font color="#CCCCCC"> to the</font>

490
00:21:19,860 --> 00:21:26,669
<font color="#CCCCCC">topology of opendaylight and then if you</font>

491
00:21:24,570 --> 00:21:28,439
want to grab<font color="#CCCCCC"> it later on</font><font color="#E5E5E5"> the postman</font>

492
00:21:26,670 --> 00:21:30,180
collection I'm using is available here

493
00:21:28,440 --> 00:21:34,920
<font color="#CCCCCC">so you'll have</font><font color="#E5E5E5"> access to</font><font color="#CCCCCC"> all this</font>

494
00:21:30,180 --> 00:21:36,360
yourself<font color="#E5E5E5"> as well and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> what it</font>

495
00:21:34,920 --> 00:21:38,010
looks<font color="#E5E5E5"> like in postman here's my</font>

496
00:21:36,360 --> 00:21:40,679
<font color="#CCCCCC">collection of things to interact with</font>

497
00:21:38,010 --> 00:21:44,010
VPP<font color="#CCCCCC"> and with honeycomb and this is just</font>

498
00:21:40,680 --> 00:21:51,060
the<font color="#CCCCCC"> example of the put request</font><font color="#E5E5E5"> and to</font>

499
00:21:44,010 --> 00:21:54,870
add VPP now once I add it what ends up

500
00:21:51,060 --> 00:21:58,050
happening is I have a topology<font color="#E5E5E5"> that</font>

501
00:21:54,870 --> 00:22:00,209
<font color="#E5E5E5">before was empty</font><font color="#CCCCCC"> actually it contained</font>

502
00:21:58,050 --> 00:22:02,370
this it contained<font color="#E5E5E5"> opendaylight itself</font>

503
00:22:00,210 --> 00:22:03,840
and the set of<font color="#E5E5E5"> all the yang models I'm</font>

504
00:22:02,370 --> 00:22:04,649
basically<font color="#E5E5E5"> seeing all the angles that are</font>

505
00:22:03,840 --> 00:22:06,330
<font color="#E5E5E5">in the cache</font>

506
00:22:04,650 --> 00:22:07,710
that's what if I could scroll through

507
00:22:06,330 --> 00:22:09,449
this because<font color="#E5E5E5"> if it was a live demo I</font>

508
00:22:07,710 --> 00:22:11,610
could scroll through you<font color="#E5E5E5"> could see all</font>

509
00:22:09,450 --> 00:22:16,880
the yang models<font color="#E5E5E5"> and you would also see</font>

510
00:22:11,610 --> 00:22:22,080
the<font color="#CCCCCC"> information for the VPP node and</font>

511
00:22:16,880 --> 00:22:23,670
then using the<font color="#E5E5E5"> opendaylight UI you can</font>

512
00:22:22,080 --> 00:22:25,320
actually interact<font color="#E5E5E5"> with these yang models</font>

513
00:22:23,670 --> 00:22:27,900
as well what this is is this<font color="#E5E5E5"> is called</font>

514
00:22:25,320 --> 00:22:30,149
the yang UI each of these is a yang

515
00:22:27,900 --> 00:22:32,220
model<font color="#E5E5E5"> and in this case I'm going into</font>

516
00:22:30,150 --> 00:22:34,860
the network topology yang model<font color="#E5E5E5"> and</font>

517
00:22:32,220 --> 00:22:36,750
going<font color="#CCCCCC"> down it's sort</font><font color="#E5E5E5"> of tree structure</font>

518
00:22:34,860 --> 00:22:39,689
that it defines to get to the

519
00:22:36,750 --> 00:22:42,810
operational data of the network<font color="#CCCCCC"> topology</font>

520
00:22:39,690 --> 00:22:45,700
that<font color="#E5E5E5"> it has and I could query here to</font>

521
00:22:42,810 --> 00:22:47,350
say show<font color="#CCCCCC"> me</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> No</font>

522
00:22:45,700 --> 00:22:49,540
that is if you can still<font color="#E5E5E5"> see this</font>

523
00:22:47,350 --> 00:22:51,730
despite<font color="#E5E5E5"> the lights I'm asking for the</font>

524
00:22:49,540 --> 00:22:55,090
VPP one node that's the node<font color="#CCCCCC"> that I</font>

525
00:22:51,730 --> 00:22:56,890
added into my topology and that would

526
00:22:55,090 --> 00:22:58,480
return<font color="#E5E5E5"> what</font><font color="#CCCCCC"> you see down</font><font color="#E5E5E5"> here at the</font>

527
00:22:56,890 --> 00:23:01,180
bottom if you're able<font color="#CCCCCC"> to see it despite</font>

528
00:22:58,480 --> 00:23:04,300
<font color="#E5E5E5">the lighting is the information for VPP</font>

529
00:23:01,180 --> 00:23:09,030
<font color="#CCCCCC">this is the IP</font><font color="#E5E5E5"> address of</font><font color="#CCCCCC"> my VM with the</font>

530
00:23:04,300 --> 00:23:09,030
<font color="#E5E5E5">DB</font><font color="#CCCCCC"> DK interface that</font><font color="#E5E5E5"> I assigned to it</font>

531
00:23:11,400 --> 00:23:21,120
<font color="#E5E5E5">okay so that's kind</font><font color="#CCCCCC"> of my abbreviated</font>

532
00:23:13,990 --> 00:23:23,680
slide<font color="#CCCCCC"> bass demo and</font><font color="#E5E5E5"> now to wrap up so</font>

533
00:23:21,120 --> 00:23:26,889
key things I want to leave<font color="#CCCCCC"> you with is a</font>

534
00:23:23,680 --> 00:23:29,590
first of<font color="#CCCCCC"> all Sdn it's</font><font color="#E5E5E5"> a lot started out</font>

535
00:23:26,890 --> 00:23:31,870
as open flow it's much more than that<font color="#CCCCCC"> a</font>

536
00:23:29,590 --> 00:23:33,760
great<font color="#E5E5E5"> thing that Sdn brings to us is</font>

537
00:23:31,870 --> 00:23:36,459
<font color="#E5E5E5">network programmability kind of came out</font>

538
00:23:33,760 --> 00:23:40,629
of Sdn and that's a<font color="#CCCCCC"> fantastic benefit of</font>

539
00:23:36,460 --> 00:23:44,500
it and<font color="#E5E5E5"> open daylight as an open source</font>

540
00:23:40,630 --> 00:23:46,600
platform that supports<font color="#E5E5E5"> networking</font>

541
00:23:44,500 --> 00:23:49,870
standards such as<font color="#E5E5E5"> yang and net coffin</font>

542
00:23:46,600 --> 00:23:53,110
<font color="#E5E5E5">rest comp it's set up to</font><font color="#CCCCCC"> be a great</font>

543
00:23:49,870 --> 00:23:56,500
<font color="#CCCCCC">platform for writing Network aware</font>

544
00:23:53,110 --> 00:23:58,419
applications and interacting

545
00:23:56,500 --> 00:24:02,020
programmatically with your network

546
00:23:58,420 --> 00:24:04,450
infrastructure whether it be<font color="#E5E5E5"> virtual or</font>

547
00:24:02,020 --> 00:24:09,210
physical whether it be software<font color="#E5E5E5"> base</font>

548
00:24:04,450 --> 00:24:15,970
like VPP<font color="#E5E5E5"> or some you know real</font>

549
00:24:09,210 --> 00:24:19,510
appliances routers and switches<font color="#E5E5E5"> okay and</font>

550
00:24:15,970 --> 00:24:21,670
I guess that's I<font color="#E5E5E5"> don't need to go into</font>

551
00:24:19,510 --> 00:24:24,690
this<font color="#E5E5E5"> if I have a little bit of time left</font>

552
00:24:21,670 --> 00:24:29,560
<font color="#E5E5E5">I'll save it for questions two minutes</font>

553
00:24:24,690 --> 00:24:31,000
so one question I think<font color="#E5E5E5"> probably just</font>

554
00:24:29,560 --> 00:24:35,740
out of interest how many people would

555
00:24:31,000 --> 00:24:39,280
like<font color="#CCCCCC"> to ask you a</font><font color="#E5E5E5"> question three I'm</font>

556
00:24:35,740 --> 00:24:39,580
gonna go with<font color="#CCCCCC"> this gentleman and</font><font color="#E5E5E5"> see you</font>

557
00:24:39,280 --> 00:24:43,210
Guinea

558
00:24:39,580 --> 00:24:46,419
<font color="#CCCCCC">I was started learning</font><font color="#E5E5E5"> Sdn three years</font>

559
00:24:43,210 --> 00:24:49,090
<font color="#CCCCCC">ago</font><font color="#E5E5E5"> okay I started with viewing Coursera</font>

560
00:24:46,420 --> 00:24:52,090
course<font color="#E5E5E5"> first from the University of</font>

561
00:24:49,090 --> 00:24:53,980
<font color="#E5E5E5">Texas I think and I found that there</font><font color="#CCCCCC"> is</font>

562
00:24:52,090 --> 00:24:56,379
no real application which I walk in

563
00:24:53,980 --> 00:24:57,970
which can be used in production<font color="#E5E5E5"> what</font>

564
00:24:56,380 --> 00:25:00,430
situation<font color="#E5E5E5"> today</font><font color="#CCCCCC"> I mean</font>

565
00:24:57,970 --> 00:25:02,860
can you give just<font color="#E5E5E5"> four examples where it</font>

566
00:25:00,430 --> 00:25:04,690
works in production<font color="#CCCCCC"> in highlord networks</font>

567
00:25:02,860 --> 00:25:07,419
let's say because<font color="#CCCCCC"> what I</font><font color="#E5E5E5"> found it was a</font>

568
00:25:04,690 --> 00:25:10,390
lot<font color="#E5E5E5"> of experiments but not much real</font>

569
00:25:07,420 --> 00:25:14,080
applications even HP who was buzzing it

570
00:25:10,390 --> 00:25:15,970
had no I'm gonna let<font color="#CCCCCC"> him</font><font color="#E5E5E5"> answer the</font>

571
00:25:14,080 --> 00:25:18,580
question because<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> hoping to get a</font>

572
00:25:15,970 --> 00:25:20,650
second<font color="#E5E5E5"> one</font><font color="#CCCCCC"> so I mean</font><font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> just I mean</font>

573
00:25:18,580 --> 00:25:23,980
I'm gonna answer a couple<font color="#E5E5E5"> of different</font>

574
00:25:20,650 --> 00:25:25,780
ways<font color="#CCCCCC"> I don't know if you mean that</font><font color="#E5E5E5"> there</font>

575
00:25:23,980 --> 00:25:27,640
when you say application if<font color="#CCCCCC"> you mean</font>

576
00:25:25,780 --> 00:25:29,800
<font color="#E5E5E5">that people aren't actually deploying</font>

577
00:25:27,640 --> 00:25:31,810
opendaylight<font color="#E5E5E5"> and using it can you know</font>

578
00:25:29,800 --> 00:25:34,120
<font color="#E5E5E5">to control their network</font><font color="#CCCCCC"> I mean that</font>

579
00:25:31,810 --> 00:25:35,290
<font color="#E5E5E5">certainly is happening</font><font color="#CCCCCC"> I think I see it</font>

580
00:25:34,120 --> 00:25:37,689
a little<font color="#E5E5E5"> bit more in the service</font>

581
00:25:35,290 --> 00:25:40,360
provider space than in say enterprise

582
00:25:37,690 --> 00:25:43,210
networks<font color="#E5E5E5"> but but it is being deployed by</font>

583
00:25:40,360 --> 00:25:45,820
<font color="#CCCCCC">large enterprises</font><font color="#E5E5E5"> it's being used in</font>

584
00:25:43,210 --> 00:25:49,420
conjunction<font color="#E5E5E5"> with open OpenStack for like</font>

585
00:25:45,820 --> 00:25:53,770
it in the<font color="#E5E5E5"> OPN</font><font color="#CCCCCC"> EFI project</font><font color="#E5E5E5"> for network</font>

586
00:25:49,420 --> 00:25:55,090
function virtualization<font color="#CCCCCC"> I mean that's</font>

587
00:25:53,770 --> 00:25:56,830
one way<font color="#CCCCCC"> of looking at so sir it</font>

588
00:25:55,090 --> 00:25:58,929
<font color="#E5E5E5">certainly is getting deployed and like</font>

589
00:25:56,830 --> 00:26:00,460
with a lot of<font color="#E5E5E5"> open</font><font color="#CCCCCC"> source technology at</font>

590
00:25:58,930 --> 00:26:02,290
first there's a lot of hype around it

591
00:26:00,460 --> 00:26:04,210
because it seems like<font color="#E5E5E5"> it's great but</font>

592
00:26:02,290 --> 00:26:05,770
<font color="#E5E5E5">then it's not ready for</font><font color="#CCCCCC"> prime time</font><font color="#E5E5E5"> it's</font>

593
00:26:04,210 --> 00:26:07,270
very<font color="#E5E5E5"> brittle</font>

594
00:26:05,770 --> 00:26:09,580
you probably<font color="#E5E5E5"> don't hear as</font><font color="#CCCCCC"> much about</font>

595
00:26:07,270 --> 00:26:10,870
open daylight<font color="#E5E5E5"> today as you did a few</font>

596
00:26:09,580 --> 00:26:13,330
<font color="#CCCCCC">years</font><font color="#E5E5E5"> ago that's because what's been</font>

597
00:26:10,870 --> 00:26:15,100
happening is not super exciting not new

598
00:26:13,330 --> 00:26:18,570
functionality getting added rather it's

599
00:26:15,100 --> 00:26:21,070
getting hardened<font color="#E5E5E5"> and easier to</font><font color="#CCCCCC"> deploy</font>

600
00:26:18,570 --> 00:26:24,040
<font color="#CCCCCC">now what I'm showing here this is within</font>

601
00:26:21,070 --> 00:26:25,149
the<font color="#CCCCCC"> events or</font><font color="#E5E5E5"> step</font><font color="#CCCCCC"> center</font><font color="#E5E5E5"> yep do you</font>

602
00:26:24,040 --> 00:26:26,500
want to join<font color="#E5E5E5"> us sneaking</font><font color="#CCCCCC"> a second</font>

603
00:26:25,150 --> 00:26:27,880
<font color="#E5E5E5">question because you're running</font><font color="#CCCCCC"> out of</font>

604
00:26:26,500 --> 00:26:30,580
time well I'm<font color="#CCCCCC"> just</font><font color="#E5E5E5"> gonna show</font><font color="#CCCCCC"> you about</font>

605
00:26:27,880 --> 00:26:32,680
applications<font color="#E5E5E5"> here's a whole set</font><font color="#CCCCCC"> of open</font>

606
00:26:30,580 --> 00:26:34,360
<font color="#E5E5E5">source applications that run on top</font><font color="#CCCCCC"> of</font>

607
00:26:32,680 --> 00:26:35,860
open<font color="#E5E5E5"> daylight if that's the type</font><font color="#CCCCCC"> of</font>

608
00:26:34,360 --> 00:26:39,510
application you're<font color="#E5E5E5"> looking forward to</font>

609
00:26:35,860 --> 00:26:41,709
and these are all available<font color="#E5E5E5"> through the</font>

610
00:26:39,510 --> 00:26:43,810
through definitely open source dev

611
00:26:41,710 --> 00:26:45,880
<font color="#CCCCCC">Center there and that the links is</font><font color="#E5E5E5"> going</font>

612
00:26:43,810 --> 00:26:48,210
to be in the slides<font color="#CCCCCC"> a second question if</font>

613
00:26:45,880 --> 00:26:48,210
there's time

614
00:26:53,389 --> 00:26:55,449
<font color="#E5E5E5">you</font>

615
00:26:56,430 --> 00:26:59,619
[Applause]

