1
00:04:07,480 --> 00:04:14,790
<font color="#E5E5E5">okay yeah thank you sorry hopefully you</font>

2
00:04:12,340 --> 00:04:18,010
could hear me<font color="#E5E5E5"> but here is how you</font><font color="#CCCCCC"> can</font>

3
00:04:14,790 --> 00:04:21,488
<font color="#E5E5E5">use</font><font color="#CCCCCC"> commonly</font><font color="#E5E5E5"> or where is the place of</font>

4
00:04:18,010 --> 00:04:23,800
<font color="#CCCCCC">Camarillo in</font><font color="#E5E5E5"> voice over IP IP telephony</font>

5
00:04:21,488 --> 00:04:27,370
<font color="#CCCCCC">network e that connecting devices or</font>

6
00:04:23,800 --> 00:04:30,669
connecting the traffic from<font color="#CCCCCC"> devices to</font>

7
00:04:27,370 --> 00:04:33,370
gateways<font color="#CCCCCC"> to media servers could</font><font color="#E5E5E5"> be for</font>

8
00:04:30,669 --> 00:04:36,370
transcoding or could be for some that

9
00:04:33,370 --> 00:04:38,110
kind<font color="#E5E5E5"> of feature could be even like a</font>

10
00:04:36,370 --> 00:04:42,700
gateway to Twitter for instant messaging

11
00:04:38,110 --> 00:04:44,889
<font color="#CCCCCC">so is not only</font><font color="#E5E5E5"> audio</font><font color="#CCCCCC"> video it's also</font>

12
00:04:42,700 --> 00:04:46,620
instant messaging<font color="#CCCCCC"> presence that</font><font color="#E5E5E5"> you can</font>

13
00:04:44,889 --> 00:04:51,460
do it from<font color="#E5E5E5"> ILO and with</font><font color="#CCCCCC"> sip as a</font>

14
00:04:46,620 --> 00:04:54,790
protocol<font color="#CCCCCC"> we are going to monitor</font><font color="#E5E5E5"> the</font>

15
00:04:51,460 --> 00:04:58,510
development<font color="#E5E5E5"> side of as for them its</font>

16
00:04:54,790 --> 00:05:01,690
oriented<font color="#CCCCCC"> for developers I'm</font><font color="#E5E5E5"> gonna speak</font>

17
00:04:58,510 --> 00:05:03,460
about<font color="#E5E5E5"> Camarillo configuration file a bit</font>

18
00:05:01,690 --> 00:05:06,820
which actually is like<font color="#E5E5E5"> a scripting</font>

19
00:05:03,460 --> 00:05:08,710
language<font color="#CCCCCC"> it has a part with global</font>

20
00:05:06,820 --> 00:05:10,450
parameters you could see like<font color="#E5E5E5"> global</font>

21
00:05:08,710 --> 00:05:13,750
variables<font color="#E5E5E5"> from your point of view it's</font>

22
00:05:10,450 --> 00:05:16,510
about<font color="#CCCCCC"> chameleon being configured to</font>

23
00:05:13,750 --> 00:05:19,889
listen on some specific<font color="#CCCCCC"> IP port</font><font color="#E5E5E5"> specific</font>

24
00:05:16,510 --> 00:05:22,719
transport<font color="#E5E5E5"> layer like UDP TCP TLS and</font>

25
00:05:19,889 --> 00:05:26,470
<font color="#E5E5E5">then we have the the part that it's used</font>

26
00:05:22,720 --> 00:05:28,510
for<font color="#E5E5E5"> routing the SIP packet so you will</font>

27
00:05:26,470 --> 00:05:30,639
have to<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> think about</font><font color="#E5E5E5"> camellias</font>

28
00:05:28,510 --> 00:05:33,700
not being a telephony engine but more

29
00:05:30,639 --> 00:05:35,440
like a sip packet router<font color="#CCCCCC"> so you get</font>

30
00:05:33,700 --> 00:05:37,990
<font color="#CCCCCC">access to every seed packet that goes</font>

31
00:05:35,440 --> 00:05:41,020
<font color="#E5E5E5">under the network and it's up</font><font color="#CCCCCC"> to you we</font>

32
00:05:37,990 --> 00:05:43,600
under configuration<font color="#E5E5E5"> file to decide</font><font color="#CCCCCC"> okay</font>

33
00:05:41,020 --> 00:05:46,389
that's Daniel let's see Daniel it's a

34
00:05:43,600 --> 00:05:48,340
local user I<font color="#E5E5E5"> would like to route to it</font>

35
00:05:46,389 --> 00:05:50,710
so it's a<font color="#E5E5E5"> location service that you can</font>

36
00:05:48,340 --> 00:05:53,229
put together and call it sent<font color="#E5E5E5"> to</font><font color="#CCCCCC"> our</font>

37
00:05:50,710 --> 00:05:55,840
device it's a telephone number<font color="#E5E5E5"> that</font>

38
00:05:53,229 --> 00:06:01,440
<font color="#E5E5E5">looks like mobile number then you can</font>

39
00:05:55,840 --> 00:06:03,849
send it<font color="#E5E5E5"> to a gateway toward mobile PSTN</font>

40
00:06:01,440 --> 00:06:06,160
<font color="#CCCCCC">Network so it's up to you to decide</font>

41
00:06:03,849 --> 00:06:08,770
everything<font color="#E5E5E5"> to the very small details</font>

42
00:06:06,160 --> 00:06:12,010
<font color="#E5E5E5">including out education you can drop</font>

43
00:06:08,770 --> 00:06:14,849
scanning attacks and so on so the

44
00:06:12,010 --> 00:06:18,039
scripting language<font color="#CCCCCC"> is giving you the</font>

45
00:06:14,849 --> 00:06:20,440
tools<font color="#E5E5E5"> to decide so you can look at</font>

46
00:06:18,039 --> 00:06:21,460
<font color="#E5E5E5">headers you</font><font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> source IP and a lot</font>

47
00:06:20,440 --> 00:06:26,919
<font color="#E5E5E5">of other at</font>

48
00:06:21,460 --> 00:06:30,669
related to this<font color="#CCCCCC"> package that you</font>

49
00:06:26,919 --> 00:06:33,818
received now<font color="#CCCCCC"> as I said</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> started in</font>

50
00:06:30,669 --> 00:06:35,979
2001<font color="#E5E5E5"> the project at that time there was</font>

51
00:06:33,819 --> 00:06:38,650
not<font color="#E5E5E5"> a clear choice for the scripting</font>

52
00:06:35,979 --> 00:06:40,539
language<font color="#CCCCCC"> it was Paul and Paul still</font>

53
00:06:38,650 --> 00:06:43,388
<font color="#E5E5E5">exist there but somehow it</font><font color="#CCCCCC"> wasn't not</font>

54
00:06:40,539 --> 00:06:45,159
designed for recurrent execution of the

55
00:06:43,389 --> 00:06:47,789
same<font color="#E5E5E5"> script so a lot of</font><font color="#CCCCCC"> libraries don't</font>

56
00:06:45,160 --> 00:06:50,319
care about memory they don't free it

57
00:06:47,789 --> 00:06:52,090
<font color="#CCCCCC">because they expect</font><font color="#E5E5E5"> that the interpreter</font>

58
00:06:50,319 --> 00:06:54,639
is shut down<font color="#E5E5E5"> after the exact</font><font color="#CCCCCC"> one-time</font>

59
00:06:52,090 --> 00:06:57,580
execution of the<font color="#CCCCCC"> script then</font><font color="#E5E5E5"> Python was</font>

60
00:06:54,639 --> 00:07:01,419
not really<font color="#CCCCCC"> that famous</font><font color="#E5E5E5"> and being fast</font>

61
00:06:57,580 --> 00:07:03,039
<font color="#CCCCCC">back in late 90s early 2000 so as we</font>

62
00:07:01,419 --> 00:07:05,740
targeted from<font color="#E5E5E5"> the beginning large</font>

63
00:07:03,039 --> 00:07:08,830
<font color="#E5E5E5">deployments was not a choice</font>

64
00:07:05,740 --> 00:07:12,699
<font color="#CCCCCC">Lua</font><font color="#E5E5E5"> probably was there but somehow we</font>

65
00:07:08,830 --> 00:07:15,159
<font color="#E5E5E5">never found it</font><font color="#CCCCCC"> at that time</font><font color="#E5E5E5"> and probably</font>

66
00:07:12,699 --> 00:07:17,620
<font color="#CCCCCC">was</font><font color="#E5E5E5"> not that developed so the at the end</font>

67
00:07:15,159 --> 00:07:19,569
<font color="#E5E5E5">the decision was writing from scratch</font>

68
00:07:17,620 --> 00:07:22,240
and from scratch and of course we have

69
00:07:19,569 --> 00:07:24,520
some benefits you<font color="#E5E5E5"> can control everything</font>

70
00:07:22,240 --> 00:07:26,710
<font color="#E5E5E5">about that interpreter because you write</font>

71
00:07:24,520 --> 00:07:29,229
it you know<font color="#E5E5E5"> if that action is triggered</font>

72
00:07:26,710 --> 00:07:31,448
<font color="#E5E5E5">it's up to you to do it if</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> return</font>

73
00:07:29,229 --> 00:07:35,770
code<font color="#E5E5E5"> it's return it it's up to you to</font>

74
00:07:31,449 --> 00:07:37,210
<font color="#CCCCCC">interpret it as you like and then of</font>

75
00:07:35,770 --> 00:07:39,400
<font color="#CCCCCC">course you can</font><font color="#E5E5E5"> optimize</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> for your</font>

76
00:07:37,210 --> 00:07:41,530
specific<font color="#E5E5E5"> needs because we know we have</font>

77
00:07:39,400 --> 00:07:45,520
to deal mainly with routing<font color="#CCCCCC"> receipt</font>

78
00:07:41,530 --> 00:07:48,669
packets and<font color="#E5E5E5"> also can control the</font>

79
00:07:45,520 --> 00:07:51,909
<font color="#CCCCCC">evolution of the language how is going</font>

80
00:07:48,669 --> 00:07:55,330
<font color="#E5E5E5">to be developed</font><font color="#CCCCCC"> over the time the</font>

81
00:07:51,909 --> 00:07:57,880
structure<font color="#E5E5E5"> and so on so forth</font><font color="#CCCCCC"> but then a</font>

82
00:07:55,330 --> 00:07:59,919
lot<font color="#CCCCCC"> of drawbacks</font><font color="#E5E5E5"> that we discover over</font>

83
00:07:57,880 --> 00:08:05,440
the time like we had to<font color="#E5E5E5"> reinvent the</font>

84
00:07:59,919 --> 00:08:07,599
wheel for<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of like small operation</font>

85
00:08:05,440 --> 00:08:10,090
you know all these string operations<font color="#E5E5E5"> of</font>

86
00:08:07,599 --> 00:08:12,159
string concatenation<font color="#E5E5E5"> and so on you will</font>

87
00:08:10,090 --> 00:08:14,400
<font color="#E5E5E5">have to implement it in C which is the</font>

88
00:08:12,159 --> 00:08:18,460
language<font color="#E5E5E5"> used for</font><font color="#CCCCCC"> Tama area and then</font>

89
00:08:14,400 --> 00:08:22,030
exported it<font color="#CCCCCC"> to this selfmade</font><font color="#E5E5E5"> scripting</font>

90
00:08:18,460 --> 00:08:24,008
languages then<font color="#E5E5E5"> there are no external</font>

91
00:08:22,030 --> 00:08:26,289
libraries that you<font color="#CCCCCC"> can just import in</font>

92
00:08:24,009 --> 00:08:28,000
use you'll have to write as<font color="#CCCCCC"> a module</font>

93
00:08:26,289 --> 00:08:30,310
inside<font color="#CCCCCC"> comma Ilya if you want to extend</font>

94
00:08:28,000 --> 00:08:33,820
this language or actually also<font color="#CCCCCC"> in the</font>

95
00:08:30,310 --> 00:08:35,230
core you<font color="#CCCCCC"> can do it then is not used</font>

96
00:08:33,820 --> 00:08:37,660
outside the

97
00:08:35,230 --> 00:08:39,640
<font color="#E5E5E5">camellia so practical you don't get the</font>

98
00:08:37,659 --> 00:08:42,280
benefit of<font color="#E5E5E5"> other people testing it</font><font color="#CCCCCC"> in</font>

99
00:08:39,640 --> 00:08:44,380
<font color="#CCCCCC">other condition with different</font><font color="#E5E5E5"> input</font>

100
00:08:42,280 --> 00:08:47,860
that could reveal eventually some side

101
00:08:44,380 --> 00:08:52,540
effects on<font color="#CCCCCC"> different operation and that</font>

102
00:08:47,860 --> 00:08:54,840
would be<font color="#E5E5E5"> useful and also because</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

103
00:08:52,540 --> 00:08:59,550
initial design there are<font color="#CCCCCC"> also some</font>

104
00:08:54,840 --> 00:09:01,930
limitation in<font color="#CCCCCC"> terms of how the</font><font color="#E5E5E5"> script</font>

105
00:08:59,550 --> 00:09:03,969
interpreter behaves<font color="#E5E5E5"> it has a lot of</font>

106
00:09:01,930 --> 00:09:06,370
<font color="#E5E5E5">optimization a</font><font color="#CCCCCC"> startup sort of</font>

107
00:09:03,970 --> 00:09:09,640
compilation<font color="#CCCCCC"> in memory and then making</font>

108
00:09:06,370 --> 00:09:11,260
the reload harder because<font color="#E5E5E5"> we keep a lot</font>

109
00:09:09,640 --> 00:09:14,260
<font color="#CCCCCC">of references to some pointers in</font>

110
00:09:11,260 --> 00:09:17,020
private memory for each process so there

111
00:09:14,260 --> 00:09:20,920
are some limitation that<font color="#E5E5E5"> some people</font>

112
00:09:17,020 --> 00:09:23,530
started to<font color="#E5E5E5"> complain about it so the</font>

113
00:09:20,920 --> 00:09:26,650
solution<font color="#E5E5E5"> over the time was like trying</font>

114
00:09:23,530 --> 00:09:29,890
to<font color="#E5E5E5"> somehow offer an alternative for the</font>

115
00:09:26,650 --> 00:09:33,579
<font color="#E5E5E5">people that</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> like to have this more</font>

116
00:09:29,890 --> 00:09:38,460
or less<font color="#E5E5E5"> main demands</font><font color="#CCCCCC"> about an option to</font>

117
00:09:33,580 --> 00:09:41,290
reload routing logic without<font color="#E5E5E5"> restart and</font>

118
00:09:38,460 --> 00:09:42,940
ability to have more feature and be more

119
00:09:41,290 --> 00:09:44,860
<font color="#E5E5E5">flexible</font><font color="#CCCCCC"> with this scripting</font><font color="#E5E5E5"> languages</font>

120
00:09:42,940 --> 00:09:46,660
because at the<font color="#CCCCCC"> beginning it was only</font>

121
00:09:44,860 --> 00:09:49,630
like<font color="#CCCCCC"> void but now</font><font color="#E5E5E5"> it's integration with</font>

122
00:09:46,660 --> 00:09:51,969
a lot of<font color="#E5E5E5"> other systems</font><font color="#CCCCCC"> backends like no</font>

123
00:09:49,630 --> 00:09:55,150
<font color="#E5E5E5">SQL you know every other</font><font color="#CCCCCC"> dates another</font>

124
00:09:51,970 --> 00:10:00,550
no SQL<font color="#E5E5E5"> popping up and maybe you want to</font>

125
00:09:55,150 --> 00:10:04,030
<font color="#E5E5E5">use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we added like two</font><font color="#E5E5E5"> version ago</font>

126
00:10:00,550 --> 00:10:07,599
a framework<font color="#E5E5E5"> in the core and we</font><font color="#CCCCCC"> named it</font>

127
00:10:04,030 --> 00:10:10,480
camellia embedded interface and idea was

128
00:10:07,600 --> 00:10:14,200
to have a mechanism that<font color="#E5E5E5"> a module</font>

129
00:10:10,480 --> 00:10:15,970
<font color="#E5E5E5">exports a function to this framework and</font>

130
00:10:14,200 --> 00:10:17,860
the framework<font color="#E5E5E5"> propagates it to many</font>

131
00:10:15,970 --> 00:10:21,310
other scripting languages not only our

132
00:10:17,860 --> 00:10:23,380
native scripting language<font color="#E5E5E5"> it also had it</font>

133
00:10:21,310 --> 00:10:28,439
in<font color="#CCCCCC"> five-0 now we are already at</font><font color="#E5E5E5"> the</font>

134
00:10:23,380 --> 00:10:33,280
<font color="#E5E5E5">version</font><font color="#CCCCCC"> 5-1 and</font><font color="#E5E5E5"> it's implemented now for</font>

135
00:10:28,440 --> 00:10:36,430
for scripting engines<font color="#E5E5E5"> Lua Python</font>

136
00:10:33,280 --> 00:10:38,620
JavaScript<font color="#CCCCCC"> and squirrel scripting a</font>

137
00:10:36,430 --> 00:10:42,339
small one which I<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> develop more</font>

138
00:10:38,620 --> 00:10:44,260
for teaching and<font color="#E5E5E5"> having others</font><font color="#CCCCCC"> a small</font>

139
00:10:42,340 --> 00:10:45,790
<font color="#E5E5E5">module that could use as an inspiration</font>

140
00:10:44,260 --> 00:10:49,779
but<font color="#E5E5E5"> is very similar</font><font color="#CCCCCC"> to Lua</font>

141
00:10:45,790 --> 00:10:52,358
<font color="#E5E5E5">and actually in that</font><font color="#CCCCCC"> matter also</font>

142
00:10:49,779 --> 00:10:55,259
similar to the JavaScript<font color="#CCCCCC"> duct-tape</font>

143
00:10:52,359 --> 00:10:57,939
interpreter<font color="#E5E5E5"> we still have some other</font>

144
00:10:55,259 --> 00:11:03,970
<font color="#CCCCCC">modules</font><font color="#E5E5E5"> that allows you to execute</font>

145
00:10:57,939 --> 00:11:05,889
<font color="#E5E5E5">inline scripts or you know application</font>

146
00:11:03,970 --> 00:11:09,129
written in part which was actually<font color="#E5E5E5"> the</font>

147
00:11:05,889 --> 00:11:11,499
<font color="#CCCCCC">first interpreter added in</font><font color="#E5E5E5"> karma Helio</font>

148
00:11:09,129 --> 00:11:16,389
and then<font color="#CCCCCC"> dot net with all this</font><font color="#E5E5E5"> sharp</font>

149
00:11:11,499 --> 00:11:18,339
<font color="#CCCCCC">Visual Basic and then also</font><font color="#E5E5E5"> a Java which</font>

150
00:11:16,389 --> 00:11:20,499
I<font color="#E5E5E5"> haven't really touch about someone</font>

151
00:11:18,339 --> 00:11:22,419
contributed as a matter of fact we have

152
00:11:20,499 --> 00:11:27,669
as you could see in the second slide

153
00:11:22,419 --> 00:11:30,910
over 200 extension now when I say in

154
00:11:27,669 --> 00:11:33,100
line execution<font color="#CCCCCC"> it's we have the default</font>

155
00:11:30,910 --> 00:11:35,108
configuration scripting language with

156
00:11:33,100 --> 00:11:37,239
our routing blocks<font color="#E5E5E5"> and somewhere inside</font>

157
00:11:35,109 --> 00:11:42,069
there is a function you are<font color="#E5E5E5"> on and we</font>

158
00:11:37,239 --> 00:11:45,069
you can pass like a method<font color="#E5E5E5"> name which is</font>

159
00:11:42,069 --> 00:11:48,160
defined<font color="#E5E5E5"> in an external lua script so in</font>

160
00:11:45,069 --> 00:11:50,199
line<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> all so kawaiii leo becomes the</font>

161
00:11:48,160 --> 00:11:52,719
<font color="#CCCCCC">the interpreter of the</font><font color="#E5E5E5"> lua it's</font>

162
00:11:50,199 --> 00:11:55,659
initialized at the<font color="#CCCCCC"> startup and then just</font>

163
00:11:52,720 --> 00:11:57,639
in line execution inside the old native

164
00:11:55,659 --> 00:12:01,199
scripting language which was used for

165
00:11:57,639 --> 00:12:04,629
<font color="#E5E5E5">many years</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> people wanted a bit more</font>

166
00:12:01,199 --> 00:12:06,819
flexibility<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this is if you</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> not</font>

167
00:12:04,629 --> 00:12:08,649
familiar this<font color="#CCCCCC"> is kind of our scripting</font>

168
00:12:06,819 --> 00:12:10,709
languages we define it<font color="#E5E5E5"> throughout as</font>

169
00:12:08,649 --> 00:12:13,869
being the cure for what<font color="#E5E5E5"> would be</font>

170
00:12:10,709 --> 00:12:15,488
equivalent of a function then we had the

171
00:12:13,869 --> 00:12:17,619
name for the route like the name<font color="#E5E5E5"> of the</font>

172
00:12:15,489 --> 00:12:19,899
<font color="#CCCCCC">function parameters we don't provide</font>

173
00:12:17,619 --> 00:12:22,089
<font color="#E5E5E5">because practically each variable is</font>

174
00:12:19,899 --> 00:12:24,159
like global variable in<font color="#CCCCCC"> this scripting</font>

175
00:12:22,089 --> 00:12:27,909
<font color="#CCCCCC">language</font><font color="#E5E5E5"> so it's rather simplified</font>

176
00:12:24,159 --> 00:12:30,579
scripting language<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> we define</font>

177
00:12:27,909 --> 00:12:33,279
our tokens like<font color="#CCCCCC"> URI its request URI the</font>

178
00:12:30,579 --> 00:12:35,108
<font color="#CCCCCC">address of the target and then adding</font>

179
00:12:33,279 --> 00:12:37,799
headers<font color="#E5E5E5"> and so on our function that we</font>

180
00:12:35,109 --> 00:12:40,689
export through our modules<font color="#E5E5E5"> to this</font>

181
00:12:37,799 --> 00:12:44,409
scripting language again<font color="#E5E5E5"> written</font><font color="#CCCCCC"> from</font>

182
00:12:40,689 --> 00:12:47,169
scratch<font color="#E5E5E5"> and now let's look maybe you can</font>

183
00:12:44,409 --> 00:12:48,939
picture a bit this<font color="#E5E5E5"> small function from</font>

184
00:12:47,169 --> 00:12:51,699
<font color="#E5E5E5">our native scripting language and I'll</font>

185
00:12:48,939 --> 00:12:54,219
try<font color="#CCCCCC"> to walk through the four that</font>

186
00:12:51,699 --> 00:12:57,309
implement the<font color="#CCCCCC"> CEM interface and show the</font>

187
00:12:54,220 --> 00:13:00,579
equivalent<font color="#E5E5E5"> and give some information</font>

188
00:12:57,309 --> 00:13:01,980
<font color="#CCCCCC">about this</font><font color="#E5E5E5"> scripting languages so we</font>

189
00:13:00,579 --> 00:13:04,589
<font color="#CCCCCC">already</font><font color="#E5E5E5"> had the</font>

190
00:13:01,980 --> 00:13:06,720
<font color="#CCCCCC">under presentation about Lua in</font>

191
00:13:04,590 --> 00:13:08,640
<font color="#E5E5E5">real-time communication with</font><font color="#CCCCCC"> nanos it</font>

192
00:13:06,720 --> 00:13:10,800
exists in<font color="#CCCCCC"> research and aesthetics is</font>

193
00:13:08,640 --> 00:13:14,790
like<font color="#CCCCCC"> light sitting the RTC world more</font>

194
00:13:10,800 --> 00:13:17,969
only<font color="#E5E5E5"> in terms of scripting it was added</font>

195
00:13:14,790 --> 00:13:22,530
as an extension<font color="#E5E5E5"> for inline execution</font>

196
00:13:17,970 --> 00:13:24,690
like<font color="#E5E5E5"> eight years</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> it's very small and</font>

197
00:13:22,530 --> 00:13:26,699
<font color="#E5E5E5">fast interpreter sometimes you get it in</font>

198
00:13:24,690 --> 00:13:29,430
pair with the<font color="#CCCCCC"> equivalency code that</font>

199
00:13:26,700 --> 00:13:32,460
implemented in native code<font color="#E5E5E5"> and</font><font color="#CCCCCC"> of course</font>

200
00:13:29,430 --> 00:13:35,430
<font color="#E5E5E5">one of the feature that</font><font color="#CCCCCC"> you have with</font>

201
00:13:32,460 --> 00:13:41,520
this scripting engine that you can use

202
00:13:35,430 --> 00:13:46,050
now<font color="#CCCCCC"> you can reload this</font><font color="#E5E5E5"> scripting</font><font color="#CCCCCC"> fine</font>

203
00:13:41,520 --> 00:13:48,300
without<font color="#E5E5E5"> restarting</font><font color="#CCCCCC"> Camellia so</font>

204
00:13:46,050 --> 00:13:51,719
practically down there is the equivalent

205
00:13:48,300 --> 00:13:54,000
that<font color="#E5E5E5"> you'll have to write in lua so</font>

206
00:13:51,720 --> 00:13:56,820
again one slide back this is<font color="#E5E5E5"> native</font>

207
00:13:54,000 --> 00:13:59,070
configuration file about<font color="#E5E5E5"> more or less</font>

208
00:13:56,820 --> 00:14:01,800
<font color="#E5E5E5">adding a header to</font><font color="#CCCCCC"> the same message and</font>

209
00:13:59,070 --> 00:14:04,200
sending out and here it's the<font color="#CCCCCC"> same</font>

210
00:14:01,800 --> 00:14:06,719
<font color="#E5E5E5">testing if it's targeting myself as a</font>

211
00:14:04,200 --> 00:14:10,020
server<font color="#CCCCCC"> then adding a header</font><font color="#E5E5E5"> and sending</font>

212
00:14:06,720 --> 00:14:12,930
out through the socket we are<font color="#CCCCCC"> using</font><font color="#E5E5E5"> it</font>

213
00:14:10,020 --> 00:14:15,300
so<font color="#E5E5E5"> pretty much equivalent but the power</font>

214
00:14:12,930 --> 00:14:17,430
of<font color="#CCCCCC"> this scripting in which using the</font>

215
00:14:15,300 --> 00:14:19,560
scripting language is<font color="#E5E5E5"> not like just</font>

216
00:14:17,430 --> 00:14:21,569
<font color="#E5E5E5">using the</font><font color="#CCCCCC"> equivalent or what we export</font>

217
00:14:19,560 --> 00:14:27,780
from<font color="#E5E5E5"> Camarillo</font><font color="#CCCCCC"> it's importing whatever</font>

218
00:14:21,570 --> 00:14:29,550
other library you find out<font color="#E5E5E5"> there for Lua</font>

219
00:14:27,780 --> 00:14:31,770
<font color="#E5E5E5">maybe you need to interconnect with</font>

220
00:14:29,550 --> 00:14:35,040
<font color="#CCCCCC">CouchDB maybe we need to interconnect</font>

221
00:14:31,770 --> 00:14:38,460
with some self made<font color="#CCCCCC"> api server and</font><font color="#E5E5E5"> you</font>

222
00:14:35,040 --> 00:14:42,270
better<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know HTTP API Wernet</font>

223
00:14:38,460 --> 00:14:44,190
string or RPC libraries in Lua so you

224
00:14:42,270 --> 00:14:48,900
don't need to implement anything<font color="#E5E5E5"> anymore</font>

225
00:14:44,190 --> 00:14:50,820
<font color="#E5E5E5">in C and then it's a link to a larger</font>

226
00:14:48,900 --> 00:14:53,490
file that could be a starting point<font color="#E5E5E5"> if</font>

227
00:14:50,820 --> 00:14:55,440
you want to use Lua for your scripting

228
00:14:53,490 --> 00:14:58,200
languages again you can build anything

229
00:14:55,440 --> 00:15:01,080
like from telephony system to instant

230
00:14:58,200 --> 00:15:06,360
messaging and any other real-time

231
00:15:01,080 --> 00:15:08,970
communication systems with<font color="#CCCCCC"> Camarillo so</font>

232
00:15:06,360 --> 00:15:12,750
used by telecoms with over<font color="#E5E5E5"> ten millions</font>

233
00:15:08,970 --> 00:15:15,300
of phone connected to the platform<font color="#E5E5E5"> the</font>

234
00:15:12,750 --> 00:15:18,180
second one would be<font color="#E5E5E5"> JavaScript but</font>

235
00:15:15,300 --> 00:15:20,189
think about as scripting languages don't

236
00:15:18,180 --> 00:15:22,650
<font color="#E5E5E5">think</font><font color="#CCCCCC"> about that complex stuff that you</font>

237
00:15:20,190 --> 00:15:27,290
get in the browser that<font color="#CCCCCC"> accessed</font><font color="#E5E5E5"> the</font>

238
00:15:22,650 --> 00:15:29,939
HTML elements and so<font color="#E5E5E5"> on there is a basic</font>

239
00:15:27,290 --> 00:15:32,160
scripting language<font color="#CCCCCC"> based behind it with</font>

240
00:15:29,940 --> 00:15:34,830
the you<font color="#CCCCCC"> know the common Matt and string</font>

241
00:15:32,160 --> 00:15:39,199
operation plus the grammar<font color="#E5E5E5"> to define</font>

242
00:15:34,830 --> 00:15:39,200
function objects and structure in

243
00:15:39,740 --> 00:15:47,310
<font color="#E5E5E5">JavaScript it's not any big browser</font>

244
00:15:45,150 --> 00:15:50,910
JavaScript engine it's an<font color="#CCCCCC"> open-source</font>

245
00:15:47,310 --> 00:15:53,760
<font color="#E5E5E5">engine but it's quite fast and easy to</font>

246
00:15:50,910 --> 00:16:00,980
<font color="#E5E5E5">understand it's called</font><font color="#CCCCCC"> duck tape</font><font color="#E5E5E5"> it's</font>

247
00:15:53,760 --> 00:16:00,980
available on github<font color="#E5E5E5"> doesn't have much</font>

248
00:16:01,130 --> 00:16:09,150
like external<font color="#E5E5E5"> libraries that you can</font><font color="#CCCCCC"> use</font>

249
00:16:06,180 --> 00:16:12,060
<font color="#E5E5E5">still</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same descent there but</font>

250
00:16:09,150 --> 00:16:14,250
it's providing no<font color="#CCCCCC"> dependency inside come</font>

251
00:16:12,060 --> 00:16:18,469
earlier because it's the<font color="#E5E5E5"> duct tape</font>

252
00:16:14,250 --> 00:16:21,150
project provides a single<font color="#CCCCCC"> safai file and</font>

253
00:16:18,470 --> 00:16:22,380
include<font color="#E5E5E5"> file that you can import and</font>

254
00:16:21,150 --> 00:16:24,420
they recommend to<font color="#E5E5E5"> use this one so</font>

255
00:16:22,380 --> 00:16:26,040
<font color="#E5E5E5">practically you</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> don't depend</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

256
00:16:24,420 --> 00:16:27,870
next<font color="#CCCCCC"> Enel library you can just</font><font color="#E5E5E5"> have</font>

257
00:16:26,040 --> 00:16:29,969
camellia compile it<font color="#E5E5E5"> and you have this</font>

258
00:16:27,870 --> 00:16:32,160
<font color="#CCCCCC">Java Script which</font><font color="#E5E5E5"> of course gives you</font>

259
00:16:29,970 --> 00:16:36,930
more flexibility in the operation plus

260
00:16:32,160 --> 00:16:40,800
reloading which is one of<font color="#E5E5E5"> the desired</font>

261
00:16:36,930 --> 00:16:43,170
feature inside<font color="#CCCCCC"> camellia</font><font color="#E5E5E5"> then we have up</font>

262
00:16:40,800 --> 00:16:45,120
Python I'm not the original developer of

263
00:16:43,170 --> 00:16:48,240
<font color="#E5E5E5">this module I'm not much into the pair</font>

264
00:16:45,120 --> 00:16:50,550
<font color="#E5E5E5">Python I just</font><font color="#CCCCCC"> added the extension to see</font>

265
00:16:48,240 --> 00:16:54,900
the exports done through the<font color="#CCCCCC"> chemi</font>

266
00:16:50,550 --> 00:16:58,380
framework as a matter of that right now

267
00:16:54,900 --> 00:17:00,900
<font color="#CCCCCC">the reloading</font><font color="#E5E5E5"> it's not working properly</font>

268
00:16:58,380 --> 00:17:04,709
<font color="#E5E5E5">I started to implement it but as I don't</font>

269
00:17:00,900 --> 00:17:10,589
<font color="#E5E5E5">have the proper knowledge to put it that</font>

270
00:17:04,709 --> 00:17:13,200
way to look at to<font color="#CCCCCC"> see how the Python</font>

271
00:17:10,589 --> 00:17:15,300
interpreter<font color="#E5E5E5"> can reload the script</font><font color="#CCCCCC"> I</font>

272
00:17:13,200 --> 00:17:17,940
still<font color="#E5E5E5"> need a bit</font><font color="#CCCCCC"> of time on the other</font>

273
00:17:15,300 --> 00:17:21,290
hand from<font color="#E5E5E5"> the community this seems to be</font>

274
00:17:17,940 --> 00:17:23,339
<font color="#CCCCCC">very popular</font><font color="#E5E5E5"> especially because of the</font>

275
00:17:21,290 --> 00:17:25,199
extensions you have<font color="#E5E5E5"> in Python so</font>

276
00:17:23,339 --> 00:17:27,659
<font color="#E5E5E5">probably if you don't find the library</font>

277
00:17:25,199 --> 00:17:29,100
in Python<font color="#CCCCCC"> for</font><font color="#E5E5E5"> what you need then you all</font>

278
00:17:27,660 --> 00:17:32,789
<font color="#CCCCCC">have to write it anyhow</font>

279
00:17:29,100 --> 00:17:36,240
because very unlikely<font color="#E5E5E5"> to find it</font>

280
00:17:32,789 --> 00:17:38,580
somewhere<font color="#CCCCCC"> else</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> the link and the</font>

281
00:17:36,240 --> 00:17:40,860
<font color="#E5E5E5">equivalent you see it's pretty</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> very</font>

282
00:17:38,580 --> 00:17:43,168
small and<font color="#E5E5E5"> again this is the equivalent</font>

283
00:17:40,860 --> 00:17:45,928
of an existing<font color="#E5E5E5"> common-law routing</font><font color="#CCCCCC"> blog</font>

284
00:17:43,169 --> 00:17:50,039
but otherwise<font color="#E5E5E5"> the benefit would be plug</font>

285
00:17:45,929 --> 00:17:51,750
your own libraries and mix the code from

286
00:17:50,039 --> 00:17:55,049
<font color="#CCCCCC">Camellia point of view you just get a</font>

287
00:17:51,750 --> 00:17:56,610
new<font color="#E5E5E5"> model case are standing for</font>

288
00:17:55,049 --> 00:18:00,418
<font color="#CCCCCC">Camarillo</font><font color="#E5E5E5"> sleep routing with a lot of</font>

289
00:17:56,610 --> 00:18:04,949
<font color="#CCCCCC">other sub modules</font><font color="#E5E5E5"> and functions and the</font>

290
00:18:00,419 --> 00:18:07,890
last I have<font color="#E5E5E5"> implemented for it squirrel</font>

291
00:18:04,950 --> 00:18:10,230
<font color="#E5E5E5">which again was from more or less</font>

292
00:18:07,890 --> 00:18:13,440
splitting from<font color="#E5E5E5"> Lua because why it's a</font>

293
00:18:10,230 --> 00:18:18,390
bit loose<font color="#CCCCCC"> in terms of the grammar for</font>

294
00:18:13,440 --> 00:18:21,240
<font color="#E5E5E5">the language itself and this guy that is</font>

295
00:18:18,390 --> 00:18:24,929
more<font color="#E5E5E5"> or less one main developer try to</font>

296
00:18:21,240 --> 00:18:27,690
have a more<font color="#E5E5E5"> strict scripting languages</font>

297
00:18:24,929 --> 00:18:30,419
<font color="#CCCCCC">on that matter is quite fast as</font><font color="#E5E5E5"> I tested</font>

298
00:18:27,690 --> 00:18:32,520
<font color="#E5E5E5">but in terms of extension and the</font>

299
00:18:30,419 --> 00:18:34,140
structure of<font color="#CCCCCC"> language it's also quite</font>

300
00:18:32,520 --> 00:18:36,030
limited<font color="#CCCCCC"> because it's not</font><font color="#E5E5E5"> that popular</font>

301
00:18:34,140 --> 00:18:38,730
there are some<font color="#E5E5E5"> gaming engine using it</font>

302
00:18:36,030 --> 00:18:41,668
<font color="#E5E5E5">but also with this one again maybe you</font>

303
00:18:38,730 --> 00:18:44,549
can<font color="#CCCCCC"> use</font><font color="#E5E5E5"> it as a teaching mechanism or</font>

304
00:18:41,669 --> 00:18:47,280
you can use<font color="#E5E5E5"> it in embedded interfaces</font>

305
00:18:44,549 --> 00:18:50,370
because<font color="#E5E5E5"> it's also very small and the</font>

306
00:18:47,280 --> 00:18:53,129
interpreter<font color="#E5E5E5"> it's imported in our module</font>

307
00:18:50,370 --> 00:18:55,439
<font color="#E5E5E5">because not so many distribution use</font>

308
00:18:53,130 --> 00:18:58,940
them<font color="#E5E5E5"> and I wanted</font><font color="#CCCCCC"> to have an</font><font color="#E5E5E5"> option</font><font color="#CCCCCC"> to</font>

309
00:18:55,440 --> 00:19:02,100
reload if you want with a very small

310
00:18:58,940 --> 00:19:05,000
interpreter<font color="#E5E5E5"> now what's the state and</font>

311
00:19:02,100 --> 00:19:08,189
pretty much getting<font color="#E5E5E5"> to the end</font>

312
00:19:05,000 --> 00:19:10,320
<font color="#E5E5E5">practically most of the modules that</font><font color="#CCCCCC"> we</font>

313
00:19:08,190 --> 00:19:12,330
<font color="#CCCCCC">implemented in</font><font color="#E5E5E5"> camarillo export their</font>

314
00:19:10,320 --> 00:19:15,120
function<font color="#CCCCCC"> also to the Kimmie framework so</font>

315
00:19:12,330 --> 00:19:17,580
this case our module has now over 600

316
00:19:15,120 --> 00:19:20,428
function that you can<font color="#CCCCCC"> use</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Python in</font>

317
00:19:17,580 --> 00:19:22,918
<font color="#CCCCCC">Lua everything to control like timeout</font>

318
00:19:20,429 --> 00:19:25,559
of<font color="#E5E5E5"> transaction were to</font><font color="#CCCCCC"> routed</font><font color="#E5E5E5"> redirect</font>

319
00:19:22,919 --> 00:19:27,929
of the traffic connecting the calls

320
00:19:25,559 --> 00:19:30,149
<font color="#E5E5E5">together everything that</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> available</font>

321
00:19:27,929 --> 00:19:32,909
<font color="#E5E5E5">in the scripting languages it's pretty</font>

322
00:19:30,150 --> 00:19:35,220
much<font color="#E5E5E5"> there again it's not 100% because</font>

323
00:19:32,909 --> 00:19:37,320
there are some<font color="#E5E5E5"> models that we didn't get</font>

324
00:19:35,220 --> 00:19:40,080
<font color="#E5E5E5">there like the</font><font color="#CCCCCC"> IMS one but</font><font color="#E5E5E5"> that's a big</font>

325
00:19:37,320 --> 00:19:43,710
beast<font color="#E5E5E5"> that needs to be approached at</font>

326
00:19:40,080 --> 00:19:46,379
some point you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> examples</font>

327
00:19:43,710 --> 00:19:48,870
like complete example of telephony

328
00:19:46,380 --> 00:19:52,260
routing engine<font color="#E5E5E5"> with Python</font><font color="#CCCCCC"> Lewis QL</font>

329
00:19:48,870 --> 00:19:54,179
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> in that link and don't forget</font>

330
00:19:52,260 --> 00:19:56,960
if<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> and have a library written</font>

331
00:19:54,180 --> 00:19:59,850
<font color="#E5E5E5">in another</font><font color="#CCCCCC"> language you</font><font color="#E5E5E5"> can still use</font>

332
00:19:56,960 --> 00:20:02,970
<font color="#CCCCCC">inline</font><font color="#E5E5E5"> execution for a lot of</font><font color="#CCCCCC"> these</font>

333
00:19:59,850 --> 00:20:06,689
dotnet languages with mono interpreter

334
00:20:02,970 --> 00:20:09,660
<font color="#E5E5E5">part is still there</font><font color="#CCCCCC"> in Java</font><font color="#E5E5E5"> if you are</font>

335
00:20:06,690 --> 00:20:15,720
having something<font color="#E5E5E5"> that you can reuse</font>

336
00:20:09,660 --> 00:20:17,700
there so probably for<font color="#E5E5E5"> mono as I am the</font>

337
00:20:15,720 --> 00:20:19,560
developer of<font color="#CCCCCC"> that interpreter as well</font>

338
00:20:17,700 --> 00:20:23,610
would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> easier for me</font><font color="#CCCCCC"> to add I haven't</font>

339
00:20:19,560 --> 00:20:25,800
done the<font color="#E5E5E5"> up Paul and up Java and if the</font>

340
00:20:23,610 --> 00:20:28,889
other developers are<font color="#E5E5E5"> not jumping</font><font color="#CCCCCC"> in very</font>

341
00:20:25,800 --> 00:20:33,060
unlikely<font color="#E5E5E5"> that I will allocate resources</font>

342
00:20:28,890 --> 00:20:35,700
for<font color="#E5E5E5"> it's not much I'm really helping</font>

343
00:20:33,060 --> 00:20:38,100
<font color="#CCCCCC">willing</font><font color="#E5E5E5"> to help if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> need but it's</font>

344
00:20:35,700 --> 00:20:40,890
unlikely that<font color="#E5E5E5"> I will do it myself</font><font color="#CCCCCC"> alone</font>

345
00:20:38,100 --> 00:20:42,270
<font color="#E5E5E5">and eventually as a shout out there if</font>

346
00:20:40,890 --> 00:20:45,360
you use Python and<font color="#E5E5E5"> you want to have a</font>

347
00:20:42,270 --> 00:20:46,920
reload<font color="#E5E5E5"> please approach me to test it I</font>

348
00:20:45,360 --> 00:20:50,129
will do the coding<font color="#CCCCCC"> but I need someone to</font>

349
00:20:46,920 --> 00:20:53,340
<font color="#E5E5E5">test and eventually help me if it's a</font>

350
00:20:50,130 --> 00:20:56,870
bit<font color="#E5E5E5"> familiar</font><font color="#CCCCCC"> with embedding Python on</font>

351
00:20:53,340 --> 00:21:01,830
again reloading the scripting languages

352
00:20:56,870 --> 00:21:03,840
<font color="#E5E5E5">so thank you I see a lot of people from</font>

353
00:21:01,830 --> 00:21:06,120
<font color="#E5E5E5">the community</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> terms of developers</font>

354
00:21:03,840 --> 00:21:10,560
likely<font color="#E5E5E5"> 15 here thanks for</font><font color="#CCCCCC"> coming again</font>

355
00:21:06,120 --> 00:21:12,060
<font color="#E5E5E5">to</font><font color="#CCCCCC"> real-time development</font><font color="#E5E5E5"> room here at</font>

356
00:21:10,560 --> 00:21:13,740
for them and helping actually because

357
00:21:12,060 --> 00:21:16,230
some people<font color="#E5E5E5"> will jump and take my place</font>

358
00:21:13,740 --> 00:21:19,580
here once again<font color="#E5E5E5"> thank you if you</font><font color="#CCCCCC"> have a</font>

359
00:21:16,230 --> 00:21:23,940
question until we shift<font color="#E5E5E5"> to the next</font>

360
00:21:19,580 --> 00:21:27,800
<font color="#E5E5E5">presenter please say otherwise Matt I</font>

361
00:21:23,940 --> 00:21:27,800
think<font color="#E5E5E5"> is the next one</font><font color="#CCCCCC"> you should come</font>

362
00:21:34,560 --> 00:21:40,419
yeah I did a very basic benchmark and

363
00:21:38,370 --> 00:21:44,229
practically at that time there was<font color="#E5E5E5"> only</font>

364
00:21:40,420 --> 00:21:47,290
<font color="#CCCCCC">luan Python</font><font color="#E5E5E5"> and for Louie you barely see</font>

365
00:21:44,230 --> 00:21:48,610
any<font color="#E5E5E5"> it's in terms of microseconds and</font>

366
00:21:47,290 --> 00:21:51,340
sometimes I didn't know it was a virtual

367
00:21:48,610 --> 00:21:53,379
<font color="#CCCCCC">machine and I need to know which was the</font>

368
00:21:51,340 --> 00:21:55,689
<font color="#CCCCCC">reason for that because it was</font><font color="#E5E5E5"> like</font>

369
00:21:53,380 --> 00:21:57,490
sometimes the least execution time was

370
00:21:55,690 --> 00:21:58,780
in<font color="#CCCCCC"> Lua</font><font color="#E5E5E5"> sometimes was in the native</font>

371
00:21:57,490 --> 00:22:00,150
scripting language because if you are

372
00:21:58,780 --> 00:22:03,450
familiar<font color="#E5E5E5"> with Lua</font>

373
00:22:00,150 --> 00:22:09,910
exporting is like just execution a port

374
00:22:03,450 --> 00:22:11,860
<font color="#E5E5E5">pointer to the function in Lua</font><font color="#CCCCCC"> last year</font>

375
00:22:09,910 --> 00:22:13,510
in the<font color="#E5E5E5"> lower the room I presented more</font>

376
00:22:11,860 --> 00:22:17,350
about<font color="#E5E5E5"> this interpreter</font><font color="#CCCCCC"> because I'm</font>

377
00:22:13,510 --> 00:22:19,830
somehow<font color="#E5E5E5"> I learn writing programming</font>

378
00:22:17,350 --> 00:22:22,899
languages I'm a computer science

379
00:22:19,830 --> 00:22:25,449
<font color="#CCCCCC">engineer and I did some optimization to</font>

380
00:22:22,900 --> 00:22:29,530
really pass the<font color="#E5E5E5"> pointer at</font><font color="#CCCCCC"> the end it</font>

381
00:22:25,450 --> 00:22:32,770
just<font color="#E5E5E5"> only index one index in direction</font>

382
00:22:29,530 --> 00:22:34,870
<font color="#E5E5E5">in between Lua and the C code</font><font color="#CCCCCC"> Python</font><font color="#E5E5E5"> was</font>

383
00:22:32,770 --> 00:22:37,090
a bit slower<font color="#CCCCCC"> because the guy</font><font color="#E5E5E5"> that</font>

384
00:22:34,870 --> 00:22:39,370
<font color="#CCCCCC">designing</font><font color="#E5E5E5"> the module made it a bit</font>

385
00:22:37,090 --> 00:22:41,740
strange<font color="#CCCCCC"> from</font><font color="#E5E5E5"> my opinion</font><font color="#CCCCCC"> but maybe a bit</font>

386
00:22:39,370 --> 00:22:44,919
<font color="#CCCCCC">better from Python</font><font color="#E5E5E5"> developers because</font>

387
00:22:41,740 --> 00:22:47,020
<font color="#E5E5E5">try to export an object so for each</font>

388
00:22:44,920 --> 00:22:50,010
message<font color="#CCCCCC"> it is creating an object</font><font color="#E5E5E5"> which</font>

389
00:22:47,020 --> 00:22:54,100
takes a<font color="#CCCCCC"> bit longer so it was like twice</font>

390
00:22:50,010 --> 00:22:56,950
<font color="#E5E5E5">slower with Python but it was still like</font>

391
00:22:54,100 --> 00:22:59,800
for<font color="#E5E5E5"> the my</font><font color="#CCCCCC"> testers like 2000</font>

392
00:22:56,950 --> 00:23:02,680
registration per second<font color="#E5E5E5"> in Python in a</font>

393
00:22:59,800 --> 00:23:04,960
single thread<font color="#E5E5E5"> so depending on how many</font>

394
00:23:02,680 --> 00:23:07,150
<font color="#CCCCCC">children</font><font color="#E5E5E5"> and so on but was only</font>

395
00:23:04,960 --> 00:23:13,870
<font color="#E5E5E5">registration so performance is still</font>

396
00:23:07,150 --> 00:23:15,970
good<font color="#E5E5E5"> we have no because this is like</font>

397
00:23:13,870 --> 00:23:18,580
it's<font color="#CCCCCC"> initiated at the</font><font color="#E5E5E5"> start and it's up</font>

398
00:23:15,970 --> 00:23:23,080
<font color="#CCCCCC">to you to use it</font><font color="#E5E5E5"> always with</font><font color="#CCCCCC"> low our</font>

399
00:23:18,580 --> 00:23:25,120
<font color="#E5E5E5">always with native scripting language or</font>

400
00:23:23,080 --> 00:23:27,669
<font color="#CCCCCC">if used</font><font color="#E5E5E5"> in line again</font><font color="#CCCCCC"> we load everything</font>

401
00:23:25,120 --> 00:23:30,429
<font color="#E5E5E5">at startup it's why that reload it's</font>

402
00:23:27,670 --> 00:23:32,110
somehow demanded<font color="#CCCCCC"> because in the</font><font color="#E5E5E5"> past we</font>

403
00:23:30,430 --> 00:23:33,970
didn't<font color="#E5E5E5"> do anything if you change in the</font>

404
00:23:32,110 --> 00:23:35,620
script language<font color="#E5E5E5"> now if you change the</font>

405
00:23:33,970 --> 00:23:37,720
script<font color="#E5E5E5"> leg language</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to send an</font>

406
00:23:35,620 --> 00:23:41,860
RPC command<font color="#E5E5E5"> to</font><font color="#CCCCCC"> come ILO please reload</font>

407
00:23:37,720 --> 00:23:45,240
<font color="#CCCCCC">and then with the</font><font color="#E5E5E5"> next message</font><font color="#CCCCCC"> will read</font>

408
00:23:41,860 --> 00:23:45,240
it from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> file</font><font color="#CCCCCC"> and will be effective</font>

409
00:23:49,600 --> 00:23:56,178
yeah that process until<font color="#E5E5E5"> yeah a process</font>

410
00:23:53,539 --> 00:23:57,889
from the<font color="#CCCCCC"> moment you see the C</font><font color="#E5E5E5"> message</font>

411
00:23:56,179 --> 00:24:00,710
until<font color="#E5E5E5"> it sends out does only that one</font>

412
00:23:57,889 --> 00:24:02,498
but UK<font color="#CCCCCC"> many of them and</font><font color="#E5E5E5"> we have some</font>

413
00:24:00,710 --> 00:24:04,759
<font color="#CCCCCC">acid</font><font color="#E5E5E5"> Kronos framework if you need to</font>

414
00:24:02,499 --> 00:24:09,710
suspend<font color="#E5E5E5"> that do something else and then</font>

415
00:24:04,759 --> 00:24:11,299
resume<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> message later yeah it is</font>

416
00:24:09,710 --> 00:24:18,109
compatible the same function and

417
00:24:11,299 --> 00:24:29,210
exported Stefan<font color="#E5E5E5"> probably yes as I said I</font>

418
00:24:18,109 --> 00:24:32,029
<font color="#E5E5E5">am but again we create processes</font><font color="#CCCCCC"> so</font>

419
00:24:29,210 --> 00:24:33,440
probably it's per process we<font color="#E5E5E5"> don't have</font>

420
00:24:32,029 --> 00:24:35,119
<font color="#E5E5E5">threads I said it like thread but</font>

421
00:24:33,440 --> 00:24:37,190
actually we create processes<font color="#CCCCCC"> and then I</font>

422
00:24:35,119 --> 00:24:41,779
think it's but process a lot but<font color="#E5E5E5"> that's</font>

423
00:24:37,190 --> 00:24:44,419
somehow we are<font color="#E5E5E5"> how we do it in in</font><font color="#CCCCCC"> Kamali</font>

424
00:24:41,779 --> 00:24:49,239
<font color="#E5E5E5">last one here because we get late and</font>

425
00:24:44,419 --> 00:24:49,239
<font color="#E5E5E5">Matt please be around the next speaker</font>

426
00:24:50,919 --> 00:24:59,389
which one no no it's using<font color="#E5E5E5"> duct</font><font color="#CCCCCC"> tape</font>

427
00:24:57,429 --> 00:25:02,210
interpreter which is<font color="#E5E5E5"> written from</font>

428
00:24:59,389 --> 00:25:04,699
<font color="#CCCCCC">scratch but quite popular as I could see</font>

429
00:25:02,210 --> 00:25:07,759
the<font color="#E5E5E5"> feedback from the project it's</font>

430
00:25:04,700 --> 00:25:11,090
embedded<font color="#E5E5E5"> in many other application and</font>

431
00:25:07,759 --> 00:25:16,999
it's also targeting use of<font color="#CCCCCC"> J JavaScript</font>

432
00:25:11,090 --> 00:25:18,350
in embedded devices because J naught J

433
00:25:16,999 --> 00:25:21,590
<font color="#E5E5E5">is</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> using the one from chromium</font>

434
00:25:18,350 --> 00:25:24,498
right which is C++ actually I wanted the

435
00:25:21,590 --> 00:25:27,439
<font color="#CCCCCC">c1</font><font color="#E5E5E5"> and this is maybe</font><font color="#CCCCCC"> not that</font><font color="#E5E5E5"> completed</font>

436
00:25:24,499 --> 00:25:33,100
<font color="#E5E5E5">the</font><font color="#CCCCCC"> one but is very fast</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> impaired</font>

437
00:25:27,440 --> 00:25:36,420
more or less with Lua<font color="#CCCCCC"> okay thank you</font>

438
00:25:33,100 --> 00:25:36,419
[Applause]

