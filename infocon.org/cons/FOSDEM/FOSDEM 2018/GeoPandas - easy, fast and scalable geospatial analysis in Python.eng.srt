1
00:00:04,610 --> 00:00:15,290
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> welcome my</font><font color="#E5E5E5"> name is euros from</font>

2
00:00:10,309 --> 00:00:18,439
Mombasa<font color="#E5E5E5"> I'm going to introduce you to</font>

3
00:00:15,290 --> 00:00:21,380
the<font color="#CCCCCC"> Geo panis library</font><font color="#E5E5E5"> maybe just because</font>

4
00:00:18,439 --> 00:00:25,369
<font color="#CCCCCC">I</font><font color="#E5E5E5"> am also curious</font><font color="#CCCCCC"> who has already</font><font color="#E5E5E5"> heard</font>

5
00:00:21,380 --> 00:00:30,460
of<font color="#E5E5E5"> chief analyst</font><font color="#CCCCCC"> before and who has</font>

6
00:00:25,369 --> 00:00:36,220
already<font color="#E5E5E5"> used it to people cool</font>

7
00:00:30,460 --> 00:00:39,470
so very short<font color="#CCCCCC"> bio myself I'm</font><font color="#E5E5E5"> a teacher</font>

8
00:00:36,220 --> 00:00:42,489
by science engineer<font color="#E5E5E5"> student</font><font color="#CCCCCC"> but I'm</font>

9
00:00:39,470 --> 00:00:45,080
currently working in Paris for the

10
00:00:42,489 --> 00:00:49,780
<font color="#E5E5E5">political</font><font color="#CCCCCC"> ascent for data science and</font>

11
00:00:45,080 --> 00:00:51,979
I'm also a core<font color="#CCCCCC"> developer of pandas so</font>

12
00:00:49,780 --> 00:00:53,629
<font color="#CCCCCC">for this audience</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> have to</font>

13
00:00:51,979 --> 00:00:56,390
<font color="#E5E5E5">explain at the different</font><font color="#CCCCCC"> University</font><font color="#E5E5E5"> and</font>

14
00:00:53,629 --> 00:00:58,729
vector data but<font color="#E5E5E5"> showing this to say that</font>

15
00:00:56,390 --> 00:01:01,580
in this talk I will<font color="#E5E5E5"> focus on vector data</font>

16
00:00:58,729 --> 00:01:02,299
so<font color="#CCCCCC"> even</font><font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> geospatial data</font>

17
00:01:01,580 --> 00:01:05,360
analysis

18
00:01:02,299 --> 00:01:08,539
<font color="#E5E5E5">this talk</font><font color="#CCCCCC"> is about</font><font color="#E5E5E5"> vector data it's</font>

19
00:01:05,360 --> 00:01:13,730
<font color="#E5E5E5">about other typical simple features with</font>

20
00:01:08,540 --> 00:01:15,350
attributes again<font color="#E5E5E5"> for the audience I also</font>

21
00:01:13,730 --> 00:01:17,990
don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to explain that there is a</font>

22
00:01:15,350 --> 00:01:21,740
lot<font color="#CCCCCC"> of open source geospatial software</font><font color="#E5E5E5"> a</font>

23
00:01:17,990 --> 00:01:26,390
full stacks of tools are built<font color="#E5E5E5"> upon and</font>

24
00:01:21,740 --> 00:01:29,479
you have<font color="#E5E5E5"> GDL if</font><font color="#CCCCCC"> juice</font><font color="#E5E5E5"> began that to say</font>

25
00:01:26,390 --> 00:01:32,030
that<font color="#CCCCCC"> in Python it's not no different</font><font color="#E5E5E5"> no</font>

26
00:01:29,480 --> 00:01:33,409
different<font color="#E5E5E5"> there are a lot of Python</font>

27
00:01:32,030 --> 00:01:35,750
packages which<font color="#E5E5E5"> already have been</font>

28
00:01:33,409 --> 00:01:40,840
mentioned in in previous talks as well

29
00:01:35,750 --> 00:01:45,409
<font color="#E5E5E5">that build upon those base libraries so</font>

30
00:01:40,840 --> 00:01:48,110
here for example pipe for 4.4<font color="#E5E5E5"> iris trial</font>

31
00:01:45,409 --> 00:01:51,680
and Fiona are and<font color="#E5E5E5"> Shapley that already</font>

32
00:01:48,110 --> 00:01:55,640
<font color="#CCCCCC">been mentioned</font><font color="#E5E5E5"> Fiona</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> vector</font>

33
00:01:51,680 --> 00:01:59,440
features<font color="#E5E5E5"> of</font><font color="#CCCCCC"> seed of</font><font color="#E5E5E5"> shapely wrapping the</font>

34
00:01:55,640 --> 00:02:02,930
<font color="#CCCCCC">Geo slightly</font><font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to shortly</font>

35
00:01:59,440 --> 00:02:05,120
<font color="#E5E5E5">look a bit more in detail in shapely so</font>

36
00:02:02,930 --> 00:02:08,330
<font color="#CCCCCC">its interface it's using Geo's under the</font>

37
00:02:05,120 --> 00:02:11,420
hood and provides you all<font color="#E5E5E5"> the ability a</font>

38
00:02:08,330 --> 00:02:13,850
capability<font color="#E5E5E5"> the geometry objects now</font>

39
00:02:11,420 --> 00:02:15,720
those special operations predicates<font color="#CCCCCC"> that</font>

40
00:02:13,850 --> 00:02:19,590
you would like<font color="#E5E5E5"> to do on them</font>

41
00:02:15,720 --> 00:02:21,780
very short code snippet to show you a

42
00:02:19,590 --> 00:02:25,140
bit how<font color="#CCCCCC"> it looks like</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can create</font>

43
00:02:21,780 --> 00:02:26,670
a point<font color="#CCCCCC"> I create line</font><font color="#E5E5E5"> string</font><font color="#CCCCCC"> I can do an</font>

44
00:02:25,140 --> 00:02:28,769
operationally for example buffer which

45
00:02:26,670 --> 00:02:31,589
creates<font color="#CCCCCC"> polygon and</font><font color="#E5E5E5"> then I can check</font>

46
00:02:28,770 --> 00:02:34,620
with<font color="#CCCCCC"> a special predicate whether the</font>

47
00:02:31,590 --> 00:02:41,610
polygon contains the<font color="#CCCCCC"> points so a very</font>

48
00:02:34,620 --> 00:02:45,330
nice API<font color="#CCCCCC"> - Geo's</font><font color="#E5E5E5"> but the limitation of</font>

49
00:02:41,610 --> 00:02:47,700
<font color="#E5E5E5">Shapley is it's based</font><font color="#CCCCCC"> on those</font><font color="#E5E5E5"> objects</font>

50
00:02:45,330 --> 00:02:50,580
single objects while in practice<font color="#CCCCCC"> you</font>

51
00:02:47,700 --> 00:02:54,390
option of course<font color="#E5E5E5"> if many of those points</font>

52
00:02:50,580 --> 00:02:57,150
or lines and there's also no<font color="#E5E5E5"> easy way to</font>

53
00:02:54,390 --> 00:03:00,380
work with attributes so not<font color="#E5E5E5"> a bit the</font>

54
00:02:57,150 --> 00:03:04,710
typical data that is attached<font color="#E5E5E5"> to your</font>

55
00:03:00,380 --> 00:03:07,799
geometrical data<font color="#E5E5E5"> yeah yeah</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> medical</font>

56
00:03:04,710 --> 00:03:12,120
data on the other<font color="#E5E5E5"> hand in Python there</font>

57
00:03:07,800 --> 00:03:15,240
is a very strong ecosystem<font color="#E5E5E5"> of tools</font><font color="#CCCCCC"> to</font>

58
00:03:12,120 --> 00:03:20,310
work with<font color="#E5E5E5"> data</font><font color="#CCCCCC"> so a</font><font color="#E5E5E5"> bundle is one of</font>

59
00:03:15,240 --> 00:03:23,670
those<font color="#E5E5E5"> packages that is with the reasons</font>

60
00:03:20,310 --> 00:03:25,709
for the<font color="#E5E5E5"> increasing use of Python in data</font>

61
00:03:23,670 --> 00:03:29,250
science machine learning and academic

62
00:03:25,709 --> 00:03:32,150
research in<font color="#CCCCCC"> general for data analysis it</font>

63
00:03:29,250 --> 00:03:34,680
provides data structures typically

64
00:03:32,150 --> 00:03:38,370
specifically to work with tabular data

65
00:03:34,680 --> 00:03:40,290
and so<font color="#E5E5E5"> spreadsheet like data like our</font>

66
00:03:38,370 --> 00:03:44,550
data frame<font color="#CCCCCC"> you also have a panda's data</font>

67
00:03:40,290 --> 00:03:47,940
frame<font color="#CCCCCC"> and</font><font color="#E5E5E5"> very similar things that maybe</font>

68
00:03:44,550 --> 00:03:51,380
you could do with sequel database tables

69
00:03:47,940 --> 00:03:54,180
you<font color="#E5E5E5"> can also do it</font><font color="#CCCCCC"> for us</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> a very</font>

70
00:03:51,380 --> 00:03:56,519
small snippet<font color="#E5E5E5"> so you have a lot of</font>

71
00:03:54,180 --> 00:03:59,310
input-output functionality and you can

72
00:03:56,520 --> 00:04:01,680
do<font color="#E5E5E5"> there are two operations the</font><font color="#CCCCCC"> first</font>

73
00:03:59,310 --> 00:04:04,260
one is a<font color="#E5E5E5"> boolean filtering which would</font>

74
00:04:01,680 --> 00:04:06,860
be in sequel<font color="#CCCCCC"> where operation and goodbye</font>

75
00:04:04,260 --> 00:04:09,690
operation so many of those<font color="#CCCCCC"> typical data</font>

76
00:04:06,860 --> 00:04:14,940
manipulation<font color="#CCCCCC"> things are</font><font color="#E5E5E5"> available in</font>

77
00:04:09,690 --> 00:04:20,450
pandas<font color="#CCCCCC"> so now</font><font color="#E5E5E5"> but is do pandas japan-us</font>

78
00:04:14,940 --> 00:04:23,210
tries to combine panels<font color="#E5E5E5"> with the</font>

79
00:04:20,450 --> 00:04:27,930
abilities of<font color="#CCCCCC"> Shapley to work with</font>

80
00:04:23,210 --> 00:04:29,460
<font color="#CCCCCC">geometric objects and in that way try</font>

81
00:04:27,930 --> 00:04:34,949
<font color="#E5E5E5">tries to make it easier</font>

82
00:04:29,460 --> 00:04:38,340
<font color="#E5E5E5">to</font><font color="#CCCCCC"> walk with a bunch of geometry objects</font>

83
00:04:34,949 --> 00:04:41,550
and<font color="#E5E5E5"> it's data attributes it was started</font>

84
00:04:38,340 --> 00:04:44,698
by Kelsey<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> already a few years</font>

85
00:04:41,550 --> 00:04:47,099
ago<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> not only pandas</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Shapley</font>

86
00:04:44,699 --> 00:04:49,949
that it will build<font color="#CCCCCC"> upon</font><font color="#E5E5E5"> it also builds</font>

87
00:04:47,099 --> 00:04:52,590
from<font color="#E5E5E5"> many of the other libraries for</font>

88
00:04:49,949 --> 00:04:56,009
example<font color="#CCCCCC"> Fiona</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> G del put</font><font color="#E5E5E5"> input-output</font>

89
00:04:52,590 --> 00:05:01,770
pride for for<font color="#E5E5E5"> the projections are three</font>

90
00:04:56,009 --> 00:05:04,620
spatial index and strong but to give you

91
00:05:01,770 --> 00:05:07,680
<font color="#E5E5E5">really a bit an idea of what is it what</font>

92
00:05:04,620 --> 00:05:13,460
it is how it does it work let's try some

93
00:05:07,680 --> 00:05:15,150
live demo and<font color="#CCCCCC"> I go in</font><font color="#E5E5E5"> Chris this in size</font>

94
00:05:13,460 --> 00:05:22,258
this<font color="#E5E5E5"> is fine</font>

95
00:05:15,150 --> 00:05:24,299
sighs so<font color="#CCCCCC"> importing a few things so the</font>

96
00:05:22,259 --> 00:05:26,099
<font color="#CCCCCC">first thing that do panels can</font><font color="#E5E5E5"> do of</font>

97
00:05:24,300 --> 00:05:27,720
<font color="#E5E5E5">course you want to get data from</font>

98
00:05:26,099 --> 00:05:30,060
<font color="#E5E5E5">somewhere</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> there is a lot of</font>

99
00:05:27,720 --> 00:05:33,330
input-output functionality mainly based

100
00:05:30,060 --> 00:05:37,080
on Fiona<font color="#CCCCCC"> and the Sanji de at this</font>

101
00:05:33,330 --> 00:05:40,800
<font color="#E5E5E5">example data through this notebook</font><font color="#CCCCCC"> I</font>

102
00:05:37,080 --> 00:05:43,859
<font color="#E5E5E5">downloaded some data about share bicycle</font>

103
00:05:40,800 --> 00:05:45,840
sharing system in Paris<font color="#CCCCCC"> different</font>

104
00:05:43,860 --> 00:05:49,680
stations and<font color="#E5E5E5"> how many bikes there are in</font>

105
00:05:45,840 --> 00:05:52,979
the stations<font color="#E5E5E5"> and I also as a Geo Jason</font>

106
00:05:49,680 --> 00:05:59,130
<font color="#E5E5E5">file it's not visible that you see</font><font color="#CCCCCC"> its</font>

107
00:05:52,979 --> 00:06:02,310
adjacent file<font color="#E5E5E5"> and also so I can</font><font color="#CCCCCC"> within</font>

108
00:05:59,130 --> 00:06:07,710
<font color="#CCCCCC">that you can see here how it</font><font color="#E5E5E5"> looks like</font>

109
00:06:02,310 --> 00:06:10,860
I show the first couple of rows so you

110
00:06:07,710 --> 00:06:13,049
have your attributes and then a<font color="#E5E5E5"> column</font>

111
00:06:10,860 --> 00:06:16,050
in this case called geometry which are

112
00:06:13,050 --> 00:06:19,349
your geometrical objects<font color="#E5E5E5"> and for this</font>

113
00:06:16,050 --> 00:06:22,919
data<font color="#CCCCCC"> it are points but I also downloaded</font>

114
00:06:19,349 --> 00:06:25,050
the<font color="#E5E5E5"> different districts of Paris</font><font color="#CCCCCC"> and if</font>

115
00:06:22,919 --> 00:06:29,310
I read in<font color="#CCCCCC"> that one</font><font color="#E5E5E5"> you will see here</font>

116
00:06:25,050 --> 00:06:32,070
<font color="#CCCCCC">anyway scope</font><font color="#E5E5E5"> it inside here the my</font>

117
00:06:29,310 --> 00:06:34,080
geometries<font color="#E5E5E5"> are polygons</font>

118
00:06:32,070 --> 00:06:37,159
so what are those things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I showed</font>

119
00:06:34,080 --> 00:06:41,370
if you look at it it's a Geo data frame

120
00:06:37,160 --> 00:06:44,430
<font color="#E5E5E5">so it's just a data frame like</font><font color="#CCCCCC"> panas</font>

121
00:06:41,370 --> 00:06:47,490
this<font color="#E5E5E5"> so with all the ability to to</font>

122
00:06:44,430 --> 00:06:49,650
<font color="#E5E5E5">handle at manipulated data frame but</font>

123
00:06:47,490 --> 00:06:52,040
with a special<font color="#CCCCCC"> column</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> geometric</font>

124
00:06:49,650 --> 00:06:56,159
column which will enable all<font color="#CCCCCC"> the</font>

125
00:06:52,040 --> 00:06:59,550
geospatial<font color="#E5E5E5"> operations to bounce</font>

126
00:06:56,160 --> 00:07:03,230
so<font color="#CCCCCC"> this column</font><font color="#E5E5E5"> can always be accessed at</font>

127
00:06:59,550 --> 00:07:06,060
geometry<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you there are my points</font>

128
00:07:03,230 --> 00:07:09,750
which<font color="#E5E5E5"> is called</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> series in this case</font>

129
00:07:06,060 --> 00:07:12,830
and if you access a<font color="#E5E5E5"> single element of of</font>

130
00:07:09,750 --> 00:07:18,290
that series<font color="#E5E5E5"> and you will get back those</font>

131
00:07:12,830 --> 00:07:21,300
<font color="#E5E5E5">shapely objects so I still have the</font>

132
00:07:18,290 --> 00:07:26,850
<font color="#CCCCCC">interface of shapely available on the</font>

133
00:07:21,300 --> 00:07:28,890
single objects as I said it's<font color="#E5E5E5"> still a</font>

134
00:07:26,850 --> 00:07:31,680
data frame so all the typical operations

135
00:07:28,890 --> 00:07:37,950
can still do<font color="#E5E5E5"> for example here but I do</font>

136
00:07:31,680 --> 00:07:41,340
here<font color="#E5E5E5"> just one example</font><font color="#CCCCCC"> I do some</font><font color="#E5E5E5"> boolean</font>

137
00:07:37,950 --> 00:07:44,070
filtering by saying I only want those

138
00:07:41,340 --> 00:07:46,909
rows where the the station actually

139
00:07:44,070 --> 00:07:50,820
<font color="#E5E5E5">opened it's actually a working station</font>

140
00:07:46,910 --> 00:07:53,220
or<font color="#CCCCCC"> it's one</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> other abilities of</font>

141
00:07:50,820 --> 00:07:56,159
panels to quickly visualize some of the

142
00:07:53,220 --> 00:07:59,250
other<font color="#CCCCCC"> on some of your attributes</font><font color="#E5E5E5"> for</font>

143
00:07:56,160 --> 00:08:01,650
<font color="#CCCCCC">example here is a the number</font><font color="#E5E5E5"> of bike</font>

144
00:07:59,250 --> 00:08:06,390
stands in all the<font color="#CCCCCC"> stages there you see a</font>

145
00:08:01,650 --> 00:08:07,979
distribution of them but since it's not

146
00:08:06,390 --> 00:08:11,849
<font color="#E5E5E5">a Jew</font><font color="#CCCCCC"> data frame you I'll also</font><font color="#E5E5E5"> have</font>

147
00:08:07,980 --> 00:08:14,970
<font color="#CCCCCC">access to all the typical</font><font color="#E5E5E5"> operations and</font>

148
00:08:11,850 --> 00:08:18,330
predicates<font color="#CCCCCC"> that are available in Gio's</font>

149
00:08:14,970 --> 00:08:22,050
for example I want to<font color="#E5E5E5"> for each district</font>

150
00:08:18,330 --> 00:08:23,640
the area in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> it's in</font>

151
00:08:22,050 --> 00:08:30,290
latitude longitude so the area<font color="#E5E5E5"> is not</font>

152
00:08:23,640 --> 00:08:33,659
saying that much<font color="#E5E5E5"> or I could calculate</font>

153
00:08:30,290 --> 00:08:37,110
for each station<font color="#CCCCCC"> the distance to a</font>

154
00:08:33,659 --> 00:08:41,399
single point<font color="#CCCCCC"> so I took I</font><font color="#E5E5E5"> search for</font>

155
00:08:37,110 --> 00:08:44,949
using geo<font color="#E5E5E5"> PI the</font>

156
00:08:41,399 --> 00:08:47,110
coordinates of the<font color="#CCCCCC"> knot Adam in Paris</font><font color="#E5E5E5"> so</font>

157
00:08:44,949 --> 00:08:49,959
this is this<font color="#E5E5E5"> point so</font><font color="#CCCCCC"> now I want to</font><font color="#E5E5E5"> know</font>

158
00:08:47,110 --> 00:08:52,089
what is the distance from all my

159
00:08:49,959 --> 00:08:56,018
stations to that point and then again

160
00:08:52,089 --> 00:08:58,480
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can very</font><font color="#E5E5E5"> easily calculate and you</font>

161
00:08:56,019 --> 00:09:02,310
get vectorized<font color="#CCCCCC"> element-wise operations</font>

162
00:08:58,480 --> 00:09:02,310
for all<font color="#E5E5E5"> the geometries in the object</font>

163
00:09:03,120 --> 00:09:08,560
<font color="#CCCCCC">another one is for</font><font color="#E5E5E5"> example contains so</font>

164
00:09:06,189 --> 00:09:11,349
which district contains the<font color="#CCCCCC"> knot for</font>

165
00:09:08,560 --> 00:09:15,219
<font color="#E5E5E5">them if you true and false values so I</font>

166
00:09:11,350 --> 00:09:18,279
can do a filtering operation you can

167
00:09:15,220 --> 00:09:20,410
indeed see that this is the<font color="#CCCCCC"> khaki which</font>

168
00:09:18,279 --> 00:09:24,879
is<font color="#CCCCCC"> called</font><font color="#E5E5E5"> not to them so it's logical</font>

169
00:09:20,410 --> 00:09:26,889
<font color="#E5E5E5">that not to them is there so all the</font>

170
00:09:24,879 --> 00:09:29,560
<font color="#E5E5E5">other</font><font color="#CCCCCC"> add typical</font><font color="#E5E5E5"> covers crosses</font>

171
00:09:26,889 --> 00:09:32,170
intersects<font color="#E5E5E5"> all those operations are</font>

172
00:09:29,560 --> 00:09:35,979
<font color="#CCCCCC">available as methods on a</font><font color="#E5E5E5"> Geo data frame</font>

173
00:09:32,170 --> 00:09:39,399
and a<font color="#CCCCCC"> geo</font><font color="#E5E5E5"> service another thing that</font>

174
00:09:35,980 --> 00:09:42,750
<font color="#CCCCCC">giovanna's provides is using</font><font color="#E5E5E5"> macro</font><font color="#CCCCCC"> clip</font>

175
00:09:39,399 --> 00:09:45,579
<font color="#E5E5E5">under the hood to very quickly visualize</font>

176
00:09:42,750 --> 00:09:50,319
some basic visualizations of the data

177
00:09:45,579 --> 00:09:55,000
<font color="#E5E5E5">that you</font><font color="#CCCCCC"> have for example I can plot all</font>

178
00:09:50,319 --> 00:10:02,349
the different districts or can give them

179
00:09:55,000 --> 00:10:04,540
some<font color="#CCCCCC"> colouring or some other</font><font color="#E5E5E5"> column</font><font color="#CCCCCC"> if</font>

180
00:10:02,350 --> 00:10:07,120
all the styling options of metal clip

181
00:10:04,540 --> 00:10:11,589
are available<font color="#CCCCCC"> just to</font><font color="#E5E5E5"> show you a few</font><font color="#CCCCCC"> of</font>

182
00:10:07,120 --> 00:10:14,680
them<font color="#E5E5E5"> the stations are a bunch of points</font>

183
00:10:11,589 --> 00:10:17,290
so because it would<font color="#E5E5E5"> be easier to see</font>

184
00:10:14,680 --> 00:10:19,300
where is something located<font color="#E5E5E5"> if I put some</font>

185
00:10:17,290 --> 00:10:23,589
streets behind<font color="#E5E5E5"> it I downloaded using</font>

186
00:10:19,300 --> 00:10:27,219
another<font color="#E5E5E5"> light library</font><font color="#CCCCCC"> with an antiques</font>

187
00:10:23,589 --> 00:10:33,819
I saved the the streets of Paris as a

188
00:10:27,220 --> 00:10:35,819
shapefile<font color="#CCCCCC"> which I reading here so this</font>

189
00:10:33,819 --> 00:10:40,180
<font color="#E5E5E5">is my</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> and you'll see now</font><font color="#CCCCCC"> I have</font>

190
00:10:35,819 --> 00:10:44,890
<font color="#E5E5E5">line strings in my geometry column so</font>

191
00:10:40,180 --> 00:10:48,069
now I can quickly put some streets

192
00:10:44,890 --> 00:10:50,380
and I can also give<font color="#CCCCCC"> colouring based off</font>

193
00:10:48,070 --> 00:10:53,589
one of my attributes which is also

194
00:10:50,380 --> 00:10:55,900
<font color="#E5E5E5">something you would might want to do so</font>

195
00:10:53,589 --> 00:11:01,089
here the coloring means the number of

196
00:10:55,900 --> 00:11:08,199
available<font color="#CCCCCC"> backs yeah oh</font><font color="#E5E5E5"> here something</font>

197
00:11:01,089 --> 00:11:11,290
else<font color="#CCCCCC"> the bigger districts so some basic</font>

198
00:11:08,200 --> 00:11:15,190
operations<font color="#E5E5E5"> on visualization</font><font color="#CCCCCC"> and of</font>

199
00:11:11,290 --> 00:11:18,099
course<font color="#E5E5E5"> Japan</font><font color="#CCCCCC"> has also has the ability to</font>

200
00:11:15,190 --> 00:11:21,970
<font color="#E5E5E5">do some more advanced operations like</font>

201
00:11:18,100 --> 00:11:27,640
<font color="#E5E5E5">special joints overlays and scissors</font><font color="#CCCCCC"> so</font>

202
00:11:21,970 --> 00:11:33,450
here<font color="#E5E5E5"> a small</font><font color="#CCCCCC"> example of</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> join where I</font>

203
00:11:27,640 --> 00:11:33,449
want to<font color="#E5E5E5"> join for each station in which</font>

204
00:11:33,600 --> 00:11:42,100
district<font color="#E5E5E5"> it is it flies in</font><font color="#CCCCCC"> it's located</font>

205
00:11:37,690 --> 00:11:46,180
<font color="#E5E5E5">in so I can</font><font color="#CCCCCC"> join</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> and now you will</font>

206
00:11:42,100 --> 00:11:50,200
<font color="#E5E5E5">see</font><font color="#CCCCCC"> that here at the end</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a new</font>

207
00:11:46,180 --> 00:11:54,550
column<font color="#E5E5E5"> added to my stations to the name</font>

208
00:11:50,200 --> 00:11:58,779
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> districts and then for example I</font>

209
00:11:54,550 --> 00:12:00,339
count<font color="#E5E5E5"> I can for example goodbye</font><font color="#CCCCCC"> based</font><font color="#E5E5E5"> on</font>

210
00:11:58,779 --> 00:12:03,760
<font color="#E5E5E5">this name and count the number</font><font color="#CCCCCC"> of</font>

211
00:12:00,339 --> 00:12:06,220
stations<font color="#E5E5E5"> in each district</font><font color="#CCCCCC"> I'm not going</font>

212
00:12:03,760 --> 00:12:08,410
<font color="#E5E5E5">to put in too</font><font color="#CCCCCC"> much detail here but then</font>

213
00:12:06,220 --> 00:12:13,180
I can for example<font color="#E5E5E5"> plot the number of</font>

214
00:12:08,410 --> 00:12:19,209
<font color="#E5E5E5">stations of each</font><font color="#CCCCCC"> districts okay</font><font color="#E5E5E5"> so that</font>

215
00:12:13,180 --> 00:12:22,300
was a very short<font color="#E5E5E5"> demo of what</font><font color="#CCCCCC"> do penis</font>

216
00:12:19,209 --> 00:12:26,170
<font color="#E5E5E5">looks like so it gives you a lot of</font>

217
00:12:22,300 --> 00:12:28,479
<font color="#CCCCCC">read/write ability general manipulation</font>

218
00:12:26,170 --> 00:12:31,209
of your<font color="#E5E5E5"> data all the geospatial</font>

219
00:12:28,480 --> 00:12:35,790
predicates<font color="#CCCCCC"> what I didn't</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> that you</font>

220
00:12:31,209 --> 00:12:43,089
can also easily reproject from your data

221
00:12:35,790 --> 00:12:47,560
<font color="#E5E5E5">and then a visualization and charts</font><font color="#CCCCCC"> but</font>

222
00:12:43,089 --> 00:12:47,950
yeah<font color="#E5E5E5"> so I hope</font><font color="#CCCCCC"> that and one of for me at</font>

223
00:12:47,560 --> 00:12:50,560
least

224
00:12:47,950 --> 00:12:52,060
one of the strengths of using<font color="#E5E5E5"> Python</font>

225
00:12:50,560 --> 00:12:55,150
with<font color="#E5E5E5"> with</font><font color="#CCCCCC"> you panel that you can very</font>

226
00:12:52,060 --> 00:12:58,479
interactively explore and analyze

227
00:12:55,150 --> 00:13:01,300
your data there<font color="#E5E5E5"> are also a lot of other</font>

228
00:12:58,480 --> 00:13:04,210
libraries<font color="#CCCCCC"> that I didn't mention here</font>

229
00:13:01,300 --> 00:13:06,870
that<font color="#E5E5E5"> work or can work with</font><font color="#CCCCCC"> with two</font>

230
00:13:04,210 --> 00:13:11,830
pandas dataframes<font color="#E5E5E5"> that guy I don't have</font>

231
00:13:06,870 --> 00:13:15,190
time to go much deeper here<font color="#E5E5E5"> so I hope</font>

232
00:13:11,830 --> 00:13:17,470
<font color="#CCCCCC">that I have shown a bit that it can be</font>

233
00:13:15,190 --> 00:13:19,120
rather it<font color="#E5E5E5"> gives a nice interface and</font>

234
00:13:17,470 --> 00:13:23,710
easy<font color="#E5E5E5"> interface to</font><font color="#CCCCCC"> work with</font><font color="#E5E5E5"> your</font>

235
00:13:19,120 --> 00:13:26,500
geospatial data<font color="#CCCCCC"> but it's also fast it's</font>

236
00:13:23,710 --> 00:13:30,910
also a bit<font color="#E5E5E5"> so much performance to do</font>

237
00:13:26,500 --> 00:13:35,440
that in<font color="#E5E5E5"> pies</font><font color="#CCCCCC"> so at the</font><font color="#E5E5E5"> moment</font>

238
00:13:30,910 --> 00:13:37,209
<font color="#CCCCCC">G openness can be rather slow</font><font color="#E5E5E5"> if you</font>

239
00:13:35,440 --> 00:13:38,830
have a lot<font color="#CCCCCC"> of data</font><font color="#E5E5E5"> and the demon that I</font>

240
00:13:37,210 --> 00:13:42,940
showed there was no<font color="#E5E5E5"> problem at all but</font>

241
00:13:38,830 --> 00:13:45,160
of course it was very<font color="#CCCCCC"> small</font><font color="#E5E5E5"> datasets so</font>

242
00:13:42,940 --> 00:13:47,830
it's<font color="#CCCCCC"> always a bit difficult to say what</font>

243
00:13:45,160 --> 00:13:49,930
<font color="#E5E5E5">is slow well</font><font color="#CCCCCC"> it's fast</font><font color="#E5E5E5"> you will see four</font>

244
00:13:47,830 --> 00:13:51,790
hundred thousand points simple<font color="#E5E5E5"> within</font><font color="#CCCCCC"> a</font>

245
00:13:49,930 --> 00:13:57,430
simple distance operations<font color="#E5E5E5"> each take</font>

246
00:13:51,790 --> 00:13:59,709
more<font color="#E5E5E5"> than a second and once you do yeah</font>

247
00:13:57,430 --> 00:14:02,469
if you do that many times<font color="#E5E5E5"> which is</font>

248
00:13:59,710 --> 00:14:05,410
<font color="#E5E5E5">typical in some analysis it</font><font color="#CCCCCC"> can be</font>

249
00:14:02,470 --> 00:14:09,310
quickly<font color="#CCCCCC"> added but you have some more</font><font color="#E5E5E5"> an</font>

250
00:14:05,410 --> 00:14:11,680
ID<font color="#E5E5E5"> I in the comparison with post</font><font color="#CCCCCC"> j s i</font>

251
00:14:09,310 --> 00:14:16,239
you don't<font color="#E5E5E5"> have to go into the detail of</font>

252
00:14:11,680 --> 00:14:19,120
<font color="#E5E5E5">the special join so it's an example from</font>

253
00:14:16,240 --> 00:14:21,250
the<font color="#CCCCCC"> boundless</font><font color="#E5E5E5"> tutorial</font><font color="#CCCCCC"> i have to say i'm</font>

254
00:14:19,120 --> 00:14:24,280
not<font color="#CCCCCC"> the post yes</font><font color="#E5E5E5"> expert</font><font color="#CCCCCC"> so I don't know</font>

255
00:14:21,250 --> 00:14:26,170
if I it's an optimized query or if my

256
00:14:24,280 --> 00:14:28,060
<font color="#E5E5E5">system was optimized but anyhow it gives</font>

257
00:14:26,170 --> 00:14:30,400
some<font color="#E5E5E5"> speed interesting things because</font>

258
00:14:28,060 --> 00:14:32,770
<font color="#E5E5E5">you can see that</font><font color="#CCCCCC"> both GIS is a lot</font>

259
00:14:30,400 --> 00:14:34,569
<font color="#E5E5E5">faster than Japan as</font><font color="#CCCCCC"> well it's actually</font>

260
00:14:32,770 --> 00:14:37,240
<font color="#CCCCCC">based on the same library under the hood</font>

261
00:14:34,570 --> 00:14:41,140
<font color="#E5E5E5">it's both using</font><font color="#CCCCCC"> Geo's for the same</font>

262
00:14:37,240 --> 00:14:43,510
things so why is the<font color="#CCCCCC"> openness lower</font><font color="#E5E5E5"> it's</font>

263
00:14:41,140 --> 00:14:45,720
because there's a<font color="#E5E5E5"> lot of overhead in</font><font color="#CCCCCC"> the</font>

264
00:14:43,510 --> 00:14:49,240
way that we<font color="#E5E5E5"> use and</font><font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> use a</font>

265
00:14:45,720 --> 00:14:51,790
<font color="#E5E5E5">color distance operation geo pandas we</font>

266
00:14:49,240 --> 00:14:53,650
will call we loop over our objects

267
00:14:51,790 --> 00:14:56,770
<font color="#E5E5E5">called shapely and</font><font color="#CCCCCC"> shapely the ankles</font>

268
00:14:53,650 --> 00:15:01,240
<font color="#E5E5E5">juice so that creates some overheads so</font>

269
00:14:56,770 --> 00:15:03,699
<font color="#E5E5E5">luckily there is a new version of</font><font color="#CCCCCC"> Geo</font>

270
00:15:01,240 --> 00:15:05,500
<font color="#CCCCCC">panels</font><font color="#E5E5E5"> in development which tries to</font>

271
00:15:03,700 --> 00:15:08,050
<font color="#E5E5E5">reduce this overhead</font>

272
00:15:05,500 --> 00:15:11,910
by<font color="#CCCCCC"> only storing the pointer to</font><font color="#E5E5E5"> the</font>

273
00:15:08,050 --> 00:15:15,490
actual juice<font color="#CCCCCC"> geometry objects and</font>

274
00:15:11,910 --> 00:15:18,069
calling<font color="#CCCCCC"> gos directly but still if you</font>

275
00:15:15,490 --> 00:15:22,180
<font color="#E5E5E5">access a single point we still get a</font>

276
00:15:18,070 --> 00:15:24,070
nice<font color="#E5E5E5"> shapely geometry object so the same</font>

277
00:15:22,180 --> 00:15:26,380
<font color="#CCCCCC">API</font><font color="#E5E5E5"> it will have exactly</font><font color="#CCCCCC"> the same API</font>

278
00:15:24,070 --> 00:15:32,230
<font color="#E5E5E5">but much better performance and also</font>

279
00:15:26,380 --> 00:15:35,170
<font color="#E5E5E5">memory use results and well it was</font>

280
00:15:32,230 --> 00:15:37,510
before<font color="#CCCCCC"> and now the green with the new</font>

281
00:15:35,170 --> 00:15:40,420
version so very simple things you<font color="#E5E5E5"> get</font><font color="#CCCCCC"> 10</font>

282
00:15:37,510 --> 00:15:42,400
200 times speed up if<font color="#E5E5E5"> you also see</font><font color="#CCCCCC"> that</font>

283
00:15:40,420 --> 00:15:44,349
<font color="#CCCCCC">for a bit more</font><font color="#E5E5E5"> the advanced ones but</font>

284
00:15:42,400 --> 00:15:48,220
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> not much more or less similar as</font>

285
00:15:44,350 --> 00:15:49,950
<font color="#E5E5E5">posted</font><font color="#CCCCCC"> to is</font><font color="#E5E5E5"> actually also somehow to be</font>

286
00:15:48,220 --> 00:15:56,410
expected since we're using the<font color="#CCCCCC"> same</font>

287
00:15:49,950 --> 00:15:58,300
<font color="#E5E5E5">library</font><font color="#CCCCCC"> under</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> root</font><font color="#E5E5E5"> so you can read a</font>

288
00:15:56,410 --> 00:16:00,370
lot more<font color="#CCCCCC"> about those developments on</font>

289
00:15:58,300 --> 00:16:02,349
those two blog posts<font color="#CCCCCC"> you can also very</font>

290
00:16:00,370 --> 00:16:06,370
easily inside<font color="#E5E5E5"> with Conda there are</font>

291
00:16:02,350 --> 00:16:09,250
libraries<font color="#CCCCCC"> binary binaries available for</font>

292
00:16:06,370 --> 00:16:11,650
the development<font color="#CCCCCC"> version as</font><font color="#E5E5E5"> well so you</font>

293
00:16:09,250 --> 00:16:16,330
can<font color="#E5E5E5"> if you want to try it out certainly</font>

294
00:16:11,650 --> 00:16:20,020
welcome so it's yeah still new so some

295
00:16:16,330 --> 00:16:26,620
<font color="#CCCCCC">real-world</font><font color="#E5E5E5"> usage</font><font color="#CCCCCC"> it's certainly</font><font color="#E5E5E5"> welcome</font>

296
00:16:20,020 --> 00:16:29,319
to this see that so<font color="#E5E5E5"> you see that the</font>

297
00:16:26,620 --> 00:16:35,230
<font color="#E5E5E5">next version will also be</font><font color="#CCCCCC"> costs it is</font>

298
00:16:29,320 --> 00:16:38,530
<font color="#CCCCCC">also scalable just the Python ecosystem</font>

299
00:16:35,230 --> 00:16:40,780
and with based on known<font color="#E5E5E5"> PI pandas so</font>

300
00:16:38,530 --> 00:16:44,310
it's a very strong ecosystem<font color="#E5E5E5"> also</font>

301
00:16:40,780 --> 00:16:47,890
optimized<font color="#E5E5E5"> past as long as you're</font><font color="#CCCCCC"> working</font>

302
00:16:44,310 --> 00:16:54,420
in memory single core then it's very

303
00:16:47,890 --> 00:16:57,010
optimized<font color="#CCCCCC"> it's a typical a limitation of</font>

304
00:16:54,420 --> 00:17:00,250
ecosystem in<font color="#E5E5E5"> Python but there have been</font>

305
00:16:57,010 --> 00:17:07,920
<font color="#E5E5E5">some over the last</font><font color="#CCCCCC"> years developments</font>

306
00:17:00,250 --> 00:17:12,240
<font color="#E5E5E5">and one of the more yeah popular ones is</font>

307
00:17:07,920 --> 00:17:15,150
dusk<font color="#E5E5E5"> which is a library that provides</font>

308
00:17:12,240 --> 00:17:18,220
<font color="#E5E5E5">parallelism and distributed computing</font>

309
00:17:15,150 --> 00:17:19,120
<font color="#CCCCCC">it's written in pure Python</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> lets you</font>

310
00:17:18,220 --> 00:17:21,850
welcome

311
00:17:19,119 --> 00:17:24,819
larger than memory<font color="#CCCCCC"> datasets from just</font>

312
00:17:21,849 --> 00:17:27,399
<font color="#E5E5E5">your laptop to use out the course</font><font color="#CCCCCC"> to big</font>

313
00:17:24,819 --> 00:17:30,250
machines with many<font color="#E5E5E5"> cores or distributed</font>

314
00:17:27,400 --> 00:17:34,570
system is it's a it's<font color="#CCCCCC"> a thousands of</font>

315
00:17:30,250 --> 00:17:37,300
course how does he do that by<font color="#CCCCCC"> just using</font>

316
00:17:34,570 --> 00:17:40,510
<font color="#E5E5E5">the existing ecosystem</font><font color="#CCCCCC"> just uses pandas</font>

317
00:17:37,300 --> 00:17:43,960
or numpy but it will use<font color="#CCCCCC"> blood</font>

318
00:17:40,510 --> 00:17:47,980
algorithms and create<font color="#E5E5E5"> task graphs and it</font>

319
00:17:43,960 --> 00:17:52,480
has a schedule to then execute those

320
00:17:47,980 --> 00:17:57,970
tasks cross so we<font color="#E5E5E5"> can use tasks as well</font>

321
00:17:52,480 --> 00:18:00,370
to paralyze our<font color="#E5E5E5"> new pandas and there has</font>

322
00:17:57,970 --> 00:18:03,400
<font color="#CCCCCC">been an experiment so was a blog post</font>

323
00:18:00,370 --> 00:18:08,520
last summer of<font color="#CCCCCC"> rowdy</font><font color="#E5E5E5"> kicker who did on</font>

324
00:18:03,400 --> 00:18:13,390
the taxi data of New York 120 million

325
00:18:08,520 --> 00:18:16,750
rows of records of a person who

326
00:18:13,390 --> 00:18:20,950
somewhere<font color="#CCCCCC"> took a taxi to another place</font>

327
00:18:16,750 --> 00:18:24,210
<font color="#E5E5E5">everybody wants to do</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> for each of</font>

328
00:18:20,950 --> 00:18:27,490
those rows do a<font color="#E5E5E5"> special joint with the</font>

329
00:18:24,210 --> 00:18:29,650
districts or the<font color="#E5E5E5"> the taxi zones to know</font>

330
00:18:27,490 --> 00:18:34,000
<font color="#E5E5E5">for each point in weeks which taxes on</font>

331
00:18:29,650 --> 00:18:37,870
<font color="#CCCCCC">did start</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> ends</font><font color="#E5E5E5"> so on this laptop we</font>

332
00:18:34,000 --> 00:18:41,200
took more<font color="#E5E5E5"> than three</font><font color="#CCCCCC"> hours with the</font>

333
00:18:37,870 --> 00:18:43,389
<font color="#CCCCCC">version then mature Rockland the person</font>

334
00:18:41,200 --> 00:18:45,850
who collaborates with me on the new

335
00:18:43,390 --> 00:18:49,120
developments<font color="#E5E5E5"> tried</font><font color="#CCCCCC"> it out on this laptop</font>

336
00:18:45,850 --> 00:18:50,379
and<font color="#E5E5E5"> equal</font><font color="#CCCCCC"> variable with a new version</font>

337
00:18:49,120 --> 00:18:53,500
<font color="#CCCCCC">and with paralyzing</font>

338
00:18:50,380 --> 00:18:56,170
<font color="#CCCCCC">its</font><font color="#E5E5E5"> thrilled to do it in eight</font><font color="#CCCCCC"> minutes</font>

339
00:18:53,500 --> 00:18:58,870
<font color="#E5E5E5">and this is based on</font><font color="#CCCCCC"> tasks your panels</font>

340
00:18:56,170 --> 00:19:04,950
which is very experimental<font color="#E5E5E5"> library to</font>

341
00:18:58,870 --> 00:19:07,959
also paralyze the computations of<font color="#CCCCCC"> Chios</font>

342
00:19:04,950 --> 00:19:10,510
so I will almost<font color="#CCCCCC"> subsidized still some</font>

343
00:19:07,960 --> 00:19:15,070
time<font color="#E5E5E5"> for</font><font color="#CCCCCC"> questions but</font><font color="#E5E5E5"> what I would like</font>

344
00:19:10,510 --> 00:19:18,070
<font color="#CCCCCC">to show you</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to also</font><font color="#E5E5E5"> get an ID so</font>

345
00:19:15,070 --> 00:19:19,780
<font color="#CCCCCC">this is the final pots for each tax</font>

346
00:19:18,070 --> 00:19:23,100
<font color="#CCCCCC">season that they made</font><font color="#E5E5E5"> and for each stack</font>

347
00:19:19,780 --> 00:19:28,470
<font color="#E5E5E5">is</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> the color gives the amount of</font>

348
00:19:23,100 --> 00:19:32,580
trips<font color="#CCCCCC"> that were started in that zone</font>

349
00:19:28,470 --> 00:19:37,950
they did at 100 for the<font color="#E5E5E5"> fool of</font>

350
00:19:32,580 --> 00:19:41,760
of 2015<font color="#CCCCCC"> which are 120 million records I</font>

351
00:19:37,950 --> 00:19:46,050
did a small replication of<font color="#E5E5E5"> it but with</font>

352
00:19:41,760 --> 00:19:48,720
only 10 million<font color="#CCCCCC"> records for one</font><font color="#E5E5E5"> month so</font>

353
00:19:46,050 --> 00:19:50,850
with the current<font color="#CCCCCC"> version of</font><font color="#E5E5E5"> Geo panels</font>

354
00:19:48,720 --> 00:19:53,340
it took me about 20 minutes<font color="#CCCCCC"> with the new</font>

355
00:19:50,850 --> 00:19:55,530
<font color="#E5E5E5">version it decreased to</font><font color="#CCCCCC"> 2 minutes and</font>

356
00:19:53,340 --> 00:20:01,020
I'm not<font color="#E5E5E5"> now going to run it in parallel</font>

357
00:19:55,530 --> 00:20:03,510
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> 4 course</font><font color="#E5E5E5"> of my so it created kind</font>

358
00:20:01,020 --> 00:20:04,770
<font color="#E5E5E5">of cluster of course on my</font><font color="#CCCCCC"> machine it's</font>

359
00:20:03,510 --> 00:20:10,620
not<font color="#CCCCCC"> a real cluster because I only have</font>

360
00:20:04,770 --> 00:20:12,960
one worker<font color="#E5E5E5"> which for course that I want</font>

361
00:20:10,620 --> 00:20:16,050
to show you so these are the different

362
00:20:12,960 --> 00:20:21,140
<font color="#CCCCCC">zones</font><font color="#E5E5E5"> there are</font><font color="#CCCCCC"> two hundred sixty three</font>

363
00:20:16,050 --> 00:20:22,310
zones<font color="#CCCCCC"> so it's the data set</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> 1.6</font>

364
00:20:21,140 --> 00:20:26,070
gigabytes

365
00:20:22,310 --> 00:20:29,159
around<font color="#CCCCCC"> 10 million rows and what I</font><font color="#E5E5E5"> will</font>

366
00:20:26,070 --> 00:20:33,540
do is I will reading the data set<font color="#E5E5E5"> to CSV</font>

367
00:20:29,160 --> 00:20:38,490
<font color="#E5E5E5">file</font><font color="#CCCCCC"> I will do a special</font><font color="#E5E5E5"> join with the</font>

368
00:20:33,540 --> 00:20:41,720
zones<font color="#E5E5E5"> and then do some calculations on</font>

369
00:20:38,490 --> 00:20:47,280
that just to give you an<font color="#E5E5E5"> idea</font>

370
00:20:41,720 --> 00:20:50,520
dusk<font color="#E5E5E5"> will then create a task graph it</font>

371
00:20:47,280 --> 00:20:53,610
does it all in chunks and this task

372
00:20:50,520 --> 00:20:57,330
graph will then be executed can be

373
00:20:53,610 --> 00:21:02,939
executed<font color="#CCCCCC"> on</font><font color="#E5E5E5"> a local laptop but also on a</font>

374
00:20:57,330 --> 00:21:10,679
distributed<font color="#E5E5E5"> cluster first going to open</font>

375
00:21:02,940 --> 00:21:12,840
here<font color="#E5E5E5"> the dashboard at dusk provides so</font>

376
00:21:10,680 --> 00:21:19,650
we can see what is<font color="#E5E5E5"> going on so now I</font>

377
00:21:12,840 --> 00:21:19,919
<font color="#CCCCCC">will execute this and</font><font color="#E5E5E5"> hopefully if I go</font>

378
00:21:19,650 --> 00:21:22,989
<font color="#E5E5E5">to</font>

379
00:21:19,920 --> 00:21:22,989
[Music]

380
00:21:24,710 --> 00:21:33,510
the status yeah so you can now you can

381
00:21:29,820 --> 00:21:36,570
<font color="#E5E5E5">see with the</font><font color="#CCCCCC"> progress of the</font>

382
00:21:33,510 --> 00:21:40,340
calculations of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> different tasks</font><font color="#CCCCCC"> you</font>

383
00:21:36,570 --> 00:21:43,620
can<font color="#CCCCCC"> see that it uses my</font><font color="#E5E5E5"> for course and</font>

384
00:21:40,340 --> 00:21:46,350
you<font color="#E5E5E5"> can also see so this the blue blocks</font>

385
00:21:43,620 --> 00:21:48,449
here are the<font color="#CCCCCC"> spatial Jones</font><font color="#E5E5E5"> and so you</font>

386
00:21:46,350 --> 00:21:52,799
can see that<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> actually doing special</font>

387
00:21:48,450 --> 00:21:56,220
<font color="#E5E5E5">joints on parts subsets of the data on</font>

388
00:21:52,799 --> 00:21:58,889
all<font color="#E5E5E5"> the four core so in in parallel on</font>

389
00:21:56,220 --> 00:22:00,750
my laptop<font color="#E5E5E5"> and this can very easily be</font>

390
00:21:58,890 --> 00:22:06,750
scaled to<font color="#E5E5E5"> a big machine</font><font color="#CCCCCC"> with many cores</font>

391
00:22:00,750 --> 00:22:09,960
or even a distributed cluster and

392
00:22:06,750 --> 00:22:14,820
normally it should take around<font color="#E5E5E5"> in this</font>

393
00:22:09,960 --> 00:22:17,520
case around<font color="#CCCCCC"> one</font><font color="#E5E5E5"> minute so my laptop with</font>

394
00:22:14,820 --> 00:22:19,370
my<font color="#CCCCCC"> for course went from two to only</font><font color="#E5E5E5"> one</font>

395
00:22:17,520 --> 00:22:21,779
minute so it's not<font color="#E5E5E5"> a huge speed up but</font>

396
00:22:19,370 --> 00:22:27,209
if you have many<font color="#CCCCCC"> cores could</font><font color="#E5E5E5"> be</font>

397
00:22:21,779 --> 00:22:30,870
certainly more helpful but it was the

398
00:22:27,210 --> 00:22:33,169
last<font color="#E5E5E5"> demo so thank you for your</font>

399
00:22:30,870 --> 00:22:33,168
attention

400
00:22:37,360 --> 00:22:56,320
<font color="#E5E5E5">a little bit of time</font><font color="#CCCCCC"> for questions I</font>

401
00:22:44,770 --> 00:22:59,679
think yeah yeah

402
00:22:56,320 --> 00:23:03,939
so at the moment the building<font color="#E5E5E5"> dot plots</font>

403
00:22:59,679 --> 00:23:05,679
method is based on operative<font color="#CCCCCC"> but yeah</font>

404
00:23:03,940 --> 00:23:09,280
for example the plots in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> block</font>

405
00:23:05,679 --> 00:23:13,299
<font color="#E5E5E5">poster - quickly</font><font color="#CCCCCC"> shot was</font><font color="#E5E5E5"> actually a</font>

406
00:23:09,280 --> 00:23:15,668
bouquet plot so<font color="#E5E5E5"> you can use or leaflet</font>

407
00:23:13,299 --> 00:23:19,929
or<font color="#E5E5E5"> bouquet but they are not</font><font color="#CCCCCC"> built-in in</font>

408
00:23:15,669 --> 00:23:21,309
your panels itself but<font color="#E5E5E5"> it's it could be</font>

409
00:23:19,929 --> 00:23:24,660
<font color="#E5E5E5">added and it's also certainly possible</font>

410
00:23:21,309 --> 00:23:24,660
<font color="#E5E5E5">to</font><font color="#CCCCCC"> talk to them</font>

411
00:23:42,659 --> 00:23:46,890
if it will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> possible</font><font color="#CCCCCC"> or</font>

412
00:23:49,710 --> 00:23:55,410
to do the that you do it in<font color="#CCCCCC"> specially</font>

413
00:23:56,820 --> 00:24:02,830
<font color="#E5E5E5">yeah that should be a should be possible</font>

414
00:24:00,190 --> 00:24:06,190
<font color="#E5E5E5">the at the moment also so one of the</font>

415
00:24:02,830 --> 00:24:09,340
things I didn't mention<font color="#E5E5E5"> is now the data</font>

416
00:24:06,190 --> 00:24:11,080
was<font color="#E5E5E5"> just partitioned in chunks and in</font>

417
00:24:09,340 --> 00:24:14,560
<font color="#E5E5E5">principle they can also be partitioned</font>

418
00:24:11,080 --> 00:24:17,949
<font color="#E5E5E5">in by zone that you can</font><font color="#CCCCCC"> even get the</font>

419
00:24:14,560 --> 00:24:20,649
more efficient<font color="#E5E5E5"> certain I operations can</font>

420
00:24:17,950 --> 00:24:23,410
be<font color="#E5E5E5"> more efficient if they're partition</font>

421
00:24:20,650 --> 00:24:34,900
by zones<font color="#CCCCCC"> but yeah</font><font color="#E5E5E5"> just in general and</font>

422
00:24:23,410 --> 00:24:36,670
<font color="#CCCCCC">not know</font><font color="#E5E5E5"> so with at the moment</font><font color="#CCCCCC"> a to</font>

423
00:24:34,900 --> 00:24:38,740
combine it with<font color="#CCCCCC"> trusted data there</font><font color="#E5E5E5"> is</font>

424
00:24:36,670 --> 00:24:41,250
nothing built into<font color="#CCCCCC"> Jia panels itself</font>

425
00:24:38,740 --> 00:24:41,250
yeah

426
00:24:54,950 --> 00:24:58,190
yeah so the question<font color="#CCCCCC"> was if you</font><font color="#E5E5E5"> are</font>

427
00:24:56,629 --> 00:25:02,359
handling<font color="#CCCCCC"> a hundred</font><font color="#E5E5E5"> million of points is</font>

428
00:24:58,190 --> 00:25:05,299
our<font color="#E5E5E5"> special index so</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> pandas in the</font>

429
00:25:02,359 --> 00:25:06,769
current version we<font color="#CCCCCC"> use our three</font><font color="#E5E5E5"> python</font>

430
00:25:05,299 --> 00:25:09,279
package<font color="#CCCCCC"> which is based on lips special</font>

431
00:25:06,769 --> 00:25:12,769
index which is<font color="#E5E5E5"> used</font><font color="#CCCCCC"> in the special zone</font>

432
00:25:09,279 --> 00:25:15,679
<font color="#E5E5E5">in the new version where we the the</font>

433
00:25:12,769 --> 00:25:22,239
<font color="#E5E5E5">Satanist version we use the STR</font><font color="#CCCCCC"> three of</font>

434
00:25:15,679 --> 00:25:22,239
<font color="#CCCCCC">zeros to improve the spatial</font><font color="#E5E5E5"> terms</font>

435
00:25:25,800 --> 00:25:32,119
[Applause]

