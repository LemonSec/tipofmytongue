1
00:00:05,009 --> 00:00:20,289
<font color="#CCCCCC">alright so next up is max talking about</font>

2
00:00:08,320 --> 00:00:23,080
great<font color="#CCCCCC"> dB welcome</font><font color="#E5E5E5"> everyone thank</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> for</font>

3
00:00:20,289 --> 00:00:25,180
<font color="#CCCCCC">coming to my talk my name is</font><font color="#E5E5E5"> Max says he</font>

4
00:00:23,080 --> 00:00:29,500
already know and I'm a software engineer

5
00:00:25,180 --> 00:00:31,930
at<font color="#E5E5E5"> creo</font><font color="#CCCCCC"> and why you might have not heard</font>

6
00:00:29,500 --> 00:00:35,110
about crazy<font color="#E5E5E5"> B yet I want to tell you a</font>

7
00:00:31,930 --> 00:00:37,960
<font color="#CCCCCC">bit more about</font><font color="#E5E5E5"> creepy</font><font color="#CCCCCC"> creepy B is an</font>

8
00:00:35,110 --> 00:00:39,999
open source<font color="#E5E5E5"> distributed database but</font>

9
00:00:37,960 --> 00:00:42,339
it's kind of special because it's built

10
00:00:39,999 --> 00:00:46,600
<font color="#CCCCCC">on top of elastic search and the scene</font>

11
00:00:42,339 --> 00:00:49,329
and some of you might<font color="#CCCCCC"> wonder</font><font color="#E5E5E5"> why</font><font color="#CCCCCC"> would</font>

12
00:00:46,600 --> 00:00:52,139
<font color="#E5E5E5">you even do that</font><font color="#CCCCCC"> does it does not</font><font color="#E5E5E5"> even</font>

13
00:00:49,329 --> 00:00:55,870
<font color="#CCCCCC">work</font><font color="#E5E5E5"> and I can give you already a hint</font>

14
00:00:52,139 --> 00:01:00,339
<font color="#E5E5E5">it works like a charm</font><font color="#CCCCCC"> and but let's see</font>

15
00:00:55,870 --> 00:01:04,750
why and and<font color="#E5E5E5"> how it works so why are</font><font color="#CCCCCC"> we</font>

16
00:01:00,339 --> 00:01:06,460
talking about<font color="#CCCCCC"> another database</font><font color="#E5E5E5"> so you</font>

17
00:01:04,750 --> 00:01:08,649
you're all very<font color="#CCCCCC"> familiar with</font>

18
00:01:06,460 --> 00:01:11,169
<font color="#CCCCCC">traditional databases</font><font color="#E5E5E5"> sequel databases</font>

19
00:01:08,649 --> 00:01:13,299
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> they're very well</font><font color="#E5E5E5"> researched very</font>

20
00:01:11,170 --> 00:01:16,600
well executed<font color="#CCCCCC"> there's open source</font>

21
00:01:13,299 --> 00:01:18,009
databases like<font color="#E5E5E5"> Postgres my sequel and of</font>

22
00:01:16,600 --> 00:01:22,298
course there<font color="#E5E5E5"> was a commercial course</font>

23
00:01:18,009 --> 00:01:24,609
once<font color="#E5E5E5"> or</font><font color="#CCCCCC"> like Oracle but typically what</font>

24
00:01:22,299 --> 00:01:27,939
you experience<font color="#CCCCCC"> when you run</font><font color="#E5E5E5"> these on a</font>

25
00:01:24,609 --> 00:01:30,939
large scale is that<font color="#E5E5E5"> to to be able to</font>

26
00:01:27,939 --> 00:01:33,309
have<font color="#E5E5E5"> scalable search is can be quite</font>

27
00:01:30,939 --> 00:01:35,079
<font color="#E5E5E5">tricky with these although they are also</font>

28
00:01:33,310 --> 00:01:37,210
making<font color="#CCCCCC"> progress in</font><font color="#E5E5E5"> that direction for</font>

29
00:01:35,079 --> 00:01:40,389
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> so on the other side there are</font>

30
00:01:37,210 --> 00:01:42,939
<font color="#E5E5E5">search engines which are well kind of</font>

31
00:01:40,390 --> 00:01:45,549
like databases but they're optimized for

32
00:01:42,939 --> 00:01:51,119
search<font color="#E5E5E5"> and scale so we have libraries</font>

33
00:01:45,549 --> 00:01:53,590
<font color="#E5E5E5">like</font><font color="#CCCCCC"> leucine for for very efficient</font>

34
00:01:51,119 --> 00:01:57,880
searching local searching of documents

35
00:01:53,590 --> 00:02:00,399
and we have the distributed frameworks

36
00:01:57,880 --> 00:02:03,609
like solar<font color="#E5E5E5"> and elastic search which</font>

37
00:02:00,399 --> 00:02:07,509
which used the<font color="#CCCCCC"> scene</font><font color="#E5E5E5"> to to have</font>

38
00:02:03,609 --> 00:02:10,660
distributed search capability but the

39
00:02:07,509 --> 00:02:13,550
<font color="#CCCCCC">downside is you can typically use sequel</font>

40
00:02:10,660 --> 00:02:16,430
with these search engine and

41
00:02:13,550 --> 00:02:18,890
one might actually asked why it because

42
00:02:16,430 --> 00:02:20,090
sequel is a pretty mature standard<font color="#E5E5E5"> has</font>

43
00:02:18,890 --> 00:02:23,600
<font color="#E5E5E5">been</font><font color="#CCCCCC"> around since</font><font color="#E5E5E5"> the 80s</font>

44
00:02:20,090 --> 00:02:25,670
everybody knows sequel<font color="#E5E5E5"> I mean at</font><font color="#CCCCCC"> least</font>

45
00:02:23,600 --> 00:02:28,010
maybe the kids nowadays not<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> but</font>

46
00:02:25,670 --> 00:02:29,209
I<font color="#CCCCCC"> know secret</font><font color="#E5E5E5"> pretty well and it's</font>

47
00:02:28,010 --> 00:02:33,590
pretty<font color="#E5E5E5"> it makes sense</font>

48
00:02:29,210 --> 00:02:36,440
<font color="#E5E5E5">so why</font><font color="#CCCCCC"> drop that and that's where crazy</font>

49
00:02:33,590 --> 00:02:38,480
becomes so<font color="#CCCCCC"> great</font><font color="#E5E5E5"> to be scalable sequel</font>

50
00:02:36,440 --> 00:02:40,850
database and<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> optimized</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> search</font>

51
00:02:38,480 --> 00:02:42,829
<font color="#E5E5E5">but it doesn't have all that no secret</font>

52
00:02:40,850 --> 00:02:45,560
<font color="#E5E5E5"> that's a very broad that's a</font>

53
00:02:42,830 --> 00:02:47,150
very broad statement<font color="#E5E5E5"> and but basically</font>

54
00:02:45,560 --> 00:02:48,800
what<font color="#CCCCCC"> you see in creativity that there</font>

55
00:02:47,150 --> 00:02:50,959
are no funny<font color="#E5E5E5"> API it's like you have</font>

56
00:02:48,800 --> 00:02:53,780
another date<font color="#E5E5E5"> scalable</font><font color="#CCCCCC"> databases</font>

57
00:02:50,959 --> 00:02:57,380
distributed databases<font color="#E5E5E5"> it's very easy to</font>

58
00:02:53,780 --> 00:03:00,560
configure<font color="#E5E5E5"> and it actually works</font><font color="#CCCCCC"> it's</font>

59
00:02:57,380 --> 00:03:03,170
it's<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> built with tools which have</font>

60
00:03:00,560 --> 00:03:06,500
proven to work<font color="#E5E5E5"> in production and it's</font>

61
00:03:03,170 --> 00:03:08,720
not like another<font color="#E5E5E5"> no sequel database I</font>

62
00:03:06,500 --> 00:03:13,040
don't want to say any names which in

63
00:03:08,720 --> 00:03:16,280
production breaks completely so<font color="#CCCCCC"> crazy</font><font color="#E5E5E5"> be</font>

64
00:03:13,040 --> 00:03:21,620
in a nutshell it's a product<font color="#E5E5E5"> around</font>

65
00:03:16,280 --> 00:03:23,930
since 2014<font color="#E5E5E5"> and the Kitab addresses here</font>

66
00:03:21,620 --> 00:03:27,040
create create and github<font color="#E5E5E5"> it's Apache to</font>

67
00:03:23,930 --> 00:03:30,860
<font color="#E5E5E5">all</font><font color="#CCCCCC"> lessons in the community edition</font><font color="#E5E5E5"> and</font>

68
00:03:27,040 --> 00:03:33,380
so<font color="#CCCCCC"> it is built using elastic</font><font color="#E5E5E5"> social</font>

69
00:03:30,860 --> 00:03:35,780
<font color="#E5E5E5">scene</font><font color="#CCCCCC"> I say totally or that already</font><font color="#E5E5E5"> we</font>

70
00:03:33,380 --> 00:03:38,450
see a bit<font color="#E5E5E5"> more in detail what that means</font>

71
00:03:35,780 --> 00:03:40,370
<font color="#CCCCCC">its sequel 99 compatible which sounds</font>

72
00:03:38,450 --> 00:03:45,280
like really<font color="#CCCCCC"> outdated that's</font><font color="#E5E5E5"> probably all</font>

73
00:03:40,370 --> 00:03:47,870
the<font color="#CCCCCC"> sequel you will ever use</font><font color="#E5E5E5"> and it has</font>

74
00:03:45,280 --> 00:03:49,700
various ways of connecting with<font color="#E5E5E5"> it so it</font>

75
00:03:47,870 --> 00:03:52,100
has like a rest and Postgres interface

76
00:03:49,700 --> 00:03:55,488
so post<font color="#CCCCCC"> cross means that you can</font>

77
00:03:52,100 --> 00:03:57,410
actually use the Postgres client<font color="#E5E5E5"> and the</font>

78
00:03:55,489 --> 00:03:59,060
<font color="#CCCCCC">post was protocol so if you have</font>

79
00:03:57,410 --> 00:04:00,920
existing<font color="#E5E5E5"> infrastructure that connects</font>

80
00:03:59,060 --> 00:04:03,470
with<font color="#E5E5E5"> Postgres you can be pretty much</font>

81
00:04:00,920 --> 00:04:07,190
<font color="#E5E5E5">this plugin</font><font color="#CCCCCC"> crazy</font><font color="#E5E5E5"> be and has like a rest</font>

82
00:04:03,470 --> 00:04:11,750
<font color="#E5E5E5">interface of course but it only accepts</font>

83
00:04:07,190 --> 00:04:13,250
sequel statements so because<font color="#E5E5E5"> i want to</font>

84
00:04:11,750 --> 00:04:17,180
<font color="#E5E5E5">be honest because</font><font color="#CCCCCC"> i might make</font><font color="#E5E5E5"> this</font>

85
00:04:13,250 --> 00:04:19,279
broad statement<font color="#CCCCCC"> I want to tell you I</font>

86
00:04:17,180 --> 00:04:21,650
mean what create EP is really useful<font color="#E5E5E5"> for</font>

87
00:04:19,279 --> 00:04:23,979
<font color="#E5E5E5">so I said it's easy</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> set up it hasn't</font>

88
00:04:21,649 --> 00:04:26,500
have funny api's it has great sky

89
00:04:23,980 --> 00:04:28,420
<font color="#E5E5E5">massive reads and writes it is container</font>

90
00:04:26,500 --> 00:04:32,860
where which not these days is really

91
00:04:28,420 --> 00:04:34,450
<font color="#E5E5E5">important it's not so great if you</font><font color="#CCCCCC"> want</font>

92
00:04:32,860 --> 00:04:36,040
to<font color="#E5E5E5"> use transactions because</font><font color="#CCCCCC"> it doesn't</font>

93
00:04:34,450 --> 00:04:41,080
support transaction<font color="#E5E5E5"> or stuff like</font>

94
00:04:36,040 --> 00:04:44,410
foreign keys so sorry we wouldn't want

95
00:04:41,080 --> 00:04:47,080
that<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> are we</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about the scale</font>

96
00:04:44,410 --> 00:04:51,730
<font color="#CCCCCC">of research</font><font color="#E5E5E5"> so what is it like</font><font color="#CCCCCC"> to use</font>

97
00:04:47,080 --> 00:04:53,710
<font color="#CCCCCC">creativity then</font><font color="#E5E5E5"> so in a way creativity</font>

98
00:04:51,730 --> 00:04:56,380
is just<font color="#CCCCCC"> like like a normal sequel</font>

99
00:04:53,710 --> 00:04:57,940
database<font color="#E5E5E5"> so we can we</font><font color="#CCCCCC"> can use sequel</font>

100
00:04:56,380 --> 00:05:01,300
statements create a table<font color="#E5E5E5"> for some</font>

101
00:04:57,940 --> 00:05:05,350
speakers<font color="#E5E5E5"> we can use primary keys we have</font>

102
00:05:01,300 --> 00:05:07,480
of course<font color="#E5E5E5"> data types integer string and</font>

103
00:05:05,350 --> 00:05:11,410
then if we have like a speaker's table

104
00:05:07,480 --> 00:05:15,430
<font color="#E5E5E5">and a</font><font color="#CCCCCC"> tox table and we can of course</font>

105
00:05:11,410 --> 00:05:17,950
<font color="#E5E5E5">insert data in these two</font><font color="#CCCCCC"> tables</font><font color="#E5E5E5"> and then</font>

106
00:05:15,430 --> 00:05:21,100
for<font color="#CCCCCC"> example like</font><font color="#E5E5E5"> you would in a typical</font>

107
00:05:17,950 --> 00:05:24,039
relational database<font color="#E5E5E5"> do a join on left</font>

108
00:05:21,100 --> 00:05:27,660
join on the<font color="#CCCCCC"> talks tables and join in all</font>

109
00:05:24,040 --> 00:05:31,210
<font color="#CCCCCC">the all the speakers on the speaker ID</font>

110
00:05:27,660 --> 00:05:33,730
that there's more I mean you already

111
00:05:31,210 --> 00:05:39,760
know that from typical<font color="#E5E5E5"> relational</font>

112
00:05:33,730 --> 00:05:42,010
databases that<font color="#E5E5E5"> if you want scalable high</font>

113
00:05:39,760 --> 00:05:44,500
<font color="#E5E5E5">performance you usually</font><font color="#CCCCCC"> denormalize your</font>

114
00:05:42,010 --> 00:05:48,789
<font color="#E5E5E5">schema and that is what a lot of people</font>

115
00:05:44,500 --> 00:05:50,290
do as well<font color="#CCCCCC"> when</font><font color="#E5E5E5"> they use crazy B so we</font>

116
00:05:48,790 --> 00:05:52,060
can<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> have retain the same</font>

117
00:05:50,290 --> 00:05:53,860
information as in<font color="#E5E5E5"> the previous slide</font>

118
00:05:52,060 --> 00:05:55,510
with the<font color="#E5E5E5"> two tables have just one</font>

119
00:05:53,860 --> 00:05:59,590
speaker table and had the speaker name

120
00:05:55,510 --> 00:06:02,320
and an<font color="#E5E5E5"> object column with like title and</font>

121
00:05:59,590 --> 00:06:06,219
string<font color="#E5E5E5"> the title is string an absolutist</font>

122
00:06:02,320 --> 00:06:09,760
string and yeah<font color="#E5E5E5"> inserting data works</font>

123
00:06:06,220 --> 00:06:12,490
like this and the<font color="#CCCCCC"> the beautiful</font><font color="#E5E5E5"> thing is</font>

124
00:06:09,760 --> 00:06:14,740
<font color="#CCCCCC">that you can just</font><font color="#E5E5E5"> select from</font><font color="#CCCCCC"> these</font>

125
00:06:12,490 --> 00:06:18,250
objects<font color="#CCCCCC"> so talk us</font><font color="#E5E5E5"> our column and</font><font color="#CCCCCC"> titles</font>

126
00:06:14,740 --> 00:06:20,440
our field inside that column<font color="#E5E5E5"> you can</font>

127
00:06:18,250 --> 00:06:22,330
<font color="#E5E5E5">just select from it and it's not it</font>

128
00:06:20,440 --> 00:06:25,150
<font color="#CCCCCC">looks</font><font color="#E5E5E5"> like an expensive operation</font><font color="#CCCCCC"> it's</font>

129
00:06:22,330 --> 00:06:29,930
not it's it's it's<font color="#E5E5E5"> the same as having</font>

130
00:06:25,150 --> 00:06:32,090
<font color="#E5E5E5">another column and this has to do</font><font color="#CCCCCC"> with</font>

131
00:06:29,930 --> 00:06:36,830
<font color="#CCCCCC">Oh crikey be actually realizes these</font>

132
00:06:32,090 --> 00:06:39,258
tables<font color="#E5E5E5"> and that we use</font><font color="#CCCCCC"> we've seen under</font>

133
00:06:36,830 --> 00:06:42,198
under the hood<font color="#CCCCCC"> I will get</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to that</font>

134
00:06:39,259 --> 00:06:43,610
in<font color="#E5E5E5"> a second</font><font color="#CCCCCC"> so what online is a crazy be</font>

135
00:06:42,199 --> 00:06:46,639
is<font color="#CCCCCC"> also very great if you have</font>

136
00:06:43,610 --> 00:06:48,590
unstructured data like<font color="#E5E5E5"> this because you</font>

137
00:06:46,639 --> 00:06:55,009
<font color="#E5E5E5">can pretty much</font><font color="#CCCCCC"> just ingest it in</font><font color="#E5E5E5"> this</font>

138
00:06:48,590 --> 00:06:57,880
way very<font color="#CCCCCC"> flexible so when you create the</font>

139
00:06:55,009 --> 00:07:00,500
<font color="#E5E5E5">table because we're distributed database</font>

140
00:06:57,880 --> 00:07:03,370
you can if you<font color="#CCCCCC"> have four node cluster</font>

141
00:07:00,500 --> 00:07:06,500
for instance you can specify

142
00:07:03,370 --> 00:07:10,039
additionally<font color="#E5E5E5"> a clustering scheme so you</font>

143
00:07:06,500 --> 00:07:12,229
can cluster<font color="#E5E5E5"> by four shards</font><font color="#CCCCCC"> so that means</font>

144
00:07:10,039 --> 00:07:14,419
<font color="#E5E5E5">that this table you are creating the</font>

145
00:07:12,229 --> 00:07:17,469
speaker's table<font color="#E5E5E5"> will be split into four</font>

146
00:07:14,419 --> 00:07:20,570
parts<font color="#E5E5E5"> which we call charts you might</font>

147
00:07:17,470 --> 00:07:23,860
recognize this term from<font color="#E5E5E5"> other like a</font>

148
00:07:20,570 --> 00:07:27,949
less from<font color="#E5E5E5"> elasticsearch for instance and</font>

149
00:07:23,860 --> 00:07:29,720
then your<font color="#E5E5E5"> data will be all the names</font>

150
00:07:27,949 --> 00:07:32,300
which have the<font color="#E5E5E5"> same name will be on the</font>

151
00:07:29,720 --> 00:07:35,300
same note that there's hashing involved

152
00:07:32,300 --> 00:07:41,389
so<font color="#E5E5E5"> your data will</font><font color="#CCCCCC"> be evenly partitioned</font>

153
00:07:35,300 --> 00:07:44,090
among the<font color="#E5E5E5"> nodes and of course we also</font>

154
00:07:41,389 --> 00:07:45,680
support replication so that is that you

155
00:07:44,090 --> 00:07:48,799
specify with this with number of

156
00:07:45,680 --> 00:07:52,880
replicas the the good<font color="#E5E5E5"> thing about</font>

157
00:07:48,800 --> 00:07:54,229
<font color="#E5E5E5">replication is of course it makes I mean</font>

158
00:07:52,880 --> 00:07:57,050
here of course<font color="#E5E5E5"> the replicas are not in</font>

159
00:07:54,229 --> 00:07:59,389
the same note<font color="#E5E5E5"> they will be arranged that</font>

160
00:07:57,050 --> 00:08:01,310
they it one node fails then you<font color="#CCCCCC"> can</font>

161
00:07:59,389 --> 00:08:06,979
recover<font color="#E5E5E5"> from another replica</font><font color="#CCCCCC"> of another</font>

162
00:08:01,310 --> 00:08:09,259
node but the<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> thing about replicas</font>

163
00:08:06,979 --> 00:08:11,990
is not only<font color="#E5E5E5"> that they provide for</font>

164
00:08:09,259 --> 00:08:14,150
<font color="#E5E5E5">torrents but also they can</font><font color="#CCCCCC"> actually</font>

165
00:08:11,990 --> 00:08:16,970
increase<font color="#CCCCCC"> your search speed because you</font>

166
00:08:14,150 --> 00:08:21,109
have the data if you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> the data</font>

167
00:08:16,970 --> 00:08:21,979
available<font color="#CCCCCC"> in multiple places so that</font>

168
00:08:21,110 --> 00:08:24,259
<font color="#CCCCCC">makes sense</font>

169
00:08:21,979 --> 00:08:26,240
what additionally you can do in

170
00:08:24,259 --> 00:08:29,570
<font color="#E5E5E5">creativity which is really neat for</font>

171
00:08:26,240 --> 00:08:31,729
instance for time series<font color="#CCCCCC"> data</font><font color="#E5E5E5"> is you can</font>

172
00:08:29,570 --> 00:08:35,270
call<font color="#CCCCCC"> or</font><font color="#E5E5E5"> co-locate your data further and</font>

173
00:08:31,729 --> 00:08:36,679
that<font color="#E5E5E5"> is called a petition table so if</font>

174
00:08:35,270 --> 00:08:38,718
you have this table<font color="#E5E5E5"> here like we had</font>

175
00:08:36,679 --> 00:08:41,959
before<font color="#E5E5E5"> and you might have</font><font color="#CCCCCC"> liked it for a</font>

176
00:08:38,719 --> 00:08:45,110
<font color="#E5E5E5">year</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> every</font><font color="#CCCCCC"> year</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> forced them</font>

177
00:08:41,960 --> 00:08:48,050
you you might at you<font color="#E5E5E5"> spread your data</font>

178
00:08:45,110 --> 00:08:50,690
into<font color="#CCCCCC"> shards with with disgusted by but</font>

179
00:08:48,050 --> 00:08:54,020
you can additionally<font color="#E5E5E5"> petition your table</font>

180
00:08:50,690 --> 00:08:57,770
so you<font color="#CCCCCC"> can specify one or</font><font color="#E5E5E5"> multiple</font>

181
00:08:54,020 --> 00:09:00,770
columns<font color="#CCCCCC"> and that means</font><font color="#E5E5E5"> that for for</font>

182
00:08:57,770 --> 00:09:03,970
every year you will you will so here we

183
00:09:00,770 --> 00:09:07,970
have three years<font color="#E5E5E5"> because we have three</font>

184
00:09:03,970 --> 00:09:10,970
parts<font color="#E5E5E5"> like three petitions for our table</font>

185
00:09:07,970 --> 00:09:14,120
but you can have as many<font color="#E5E5E5"> as</font><font color="#CCCCCC"> you want and</font>

186
00:09:10,970 --> 00:09:18,770
so every<font color="#CCCCCC"> time we have a new value new</font>

187
00:09:14,120 --> 00:09:21,920
<font color="#E5E5E5">year coming you create another primary</font>

188
00:09:18,770 --> 00:09:25,510
<font color="#E5E5E5">and</font><font color="#CCCCCC"> replica charge</font><font color="#E5E5E5"> for the table this is</font>

189
00:09:21,920 --> 00:09:29,060
<font color="#E5E5E5">what we call a petition table and</font>

190
00:09:25,510 --> 00:09:32,030
there's more<font color="#E5E5E5"> they</font><font color="#CCCCCC"> are of course</font><font color="#E5E5E5"> all</font>

191
00:09:29,060 --> 00:09:35,030
kinds of aggregations<font color="#E5E5E5"> there's geosearch</font>

192
00:09:32,030 --> 00:09:38,150
so you you have<font color="#CCCCCC"> geo data type for</font><font color="#E5E5E5"> your</font>

193
00:09:35,030 --> 00:09:43,300
<font color="#CCCCCC">comms</font><font color="#E5E5E5"> and you you can search by distance</font>

194
00:09:38,150 --> 00:09:48,290
<font color="#E5E5E5">or use other geometric methods there are</font>

195
00:09:43,300 --> 00:09:50,870
<font color="#E5E5E5">text analyzers so if you have a by</font>

196
00:09:48,290 --> 00:09:54,589
columns are by default index<font color="#E5E5E5"> always in</font>

197
00:09:50,870 --> 00:09:58,640
<font color="#E5E5E5">crazy</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> but if you have some more</font>

198
00:09:54,590 --> 00:10:00,890
<font color="#CCCCCC">sophisticated ending on your spring in</font>

199
00:09:58,640 --> 00:10:03,080
your<font color="#E5E5E5"> column you can</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can use one of</font>

200
00:10:00,890 --> 00:10:06,400
the built and<font color="#CCCCCC"> analyzes or even write</font>

201
00:10:03,080 --> 00:10:09,890
your own to do that<font color="#E5E5E5"> and to fish</font>

202
00:10:06,400 --> 00:10:13,090
<font color="#E5E5E5">efficiently search for something some</font>

203
00:10:09,890 --> 00:10:16,819
value<font color="#E5E5E5"> no in the column we have</font>

204
00:10:13,090 --> 00:10:19,460
<font color="#CCCCCC">user-defined functions snapshots to</font><font color="#E5E5E5"> back</font>

205
00:10:16,820 --> 00:10:23,600
<font color="#E5E5E5">up your data or restore</font><font color="#CCCCCC"> your data</font><font color="#E5E5E5"> user</font>

206
00:10:19,460 --> 00:10:28,100
<font color="#E5E5E5">management schema privileges encryption</font>

207
00:10:23,600 --> 00:10:31,040
<font color="#CCCCCC">MQTT support and so</font><font color="#E5E5E5"> on but I cannot go</font>

208
00:10:28,100 --> 00:10:32,950
into<font color="#E5E5E5"> this entity to of course but what</font>

209
00:10:31,040 --> 00:10:35,719
is more important now<font color="#E5E5E5"> is to</font><font color="#CCCCCC"> look a bit</font>

210
00:10:32,950 --> 00:10:39,190
how these<font color="#E5E5E5"> features are realized</font><font color="#CCCCCC"> in crazy</font>

211
00:10:35,720 --> 00:10:43,100
<font color="#E5E5E5">be so look a bit at</font><font color="#CCCCCC"> the architecture</font>

212
00:10:39,190 --> 00:10:45,020
thank you<font color="#E5E5E5"> we are of course like a lot of</font>

213
00:10:43,100 --> 00:10:47,150
<font color="#E5E5E5">projects nowadays on the shoulder</font><font color="#CCCCCC"> of</font>

214
00:10:45,020 --> 00:10:52,130
giants so we are distributed sequel

215
00:10:47,150 --> 00:10:54,459
execution engine but we have a large

216
00:10:52,130 --> 00:10:55,899
number<font color="#E5E5E5"> of important dependencies these</font>

217
00:10:54,460 --> 00:10:58,510
these are like<font color="#CCCCCC"> the the</font><font color="#E5E5E5"> most important I</font>

218
00:10:55,899 --> 00:11:01,060
would say<font color="#E5E5E5"> so we use</font><font color="#CCCCCC"> a antler that's like</font>

219
00:10:58,510 --> 00:11:03,010
a<font color="#CCCCCC"> pasta generator</font><font color="#E5E5E5"> to to pause our</font>

220
00:11:01,060 --> 00:11:03,640
statement<font color="#E5E5E5"> to generate an abstract syntax</font>

221
00:11:03,010 --> 00:11:07,350
tree

222
00:11:03,640 --> 00:11:10,120
we have<font color="#CCCCCC"> neti for all communication for</font>

223
00:11:07,350 --> 00:11:10,600
rest interface<font color="#CCCCCC"> Postgres and weapon to</font>

224
00:11:10,120 --> 00:11:12,790
face

225
00:11:10,600 --> 00:11:16,690
we have leucine<font color="#E5E5E5"> which is storage</font>

226
00:11:12,790 --> 00:11:19,029
<font color="#E5E5E5">indexing and our internal query format</font>

227
00:11:16,690 --> 00:11:21,700
that we generate from<font color="#CCCCCC"> the sequel query</font>

228
00:11:19,029 --> 00:11:24,100
<font color="#E5E5E5">and we have elastic search as I</font>

229
00:11:21,700 --> 00:11:27,820
mentioned for<font color="#CCCCCC"> the transport clustering</font>

230
00:11:24,100 --> 00:11:31,480
routing<font color="#E5E5E5"> so this this lets us concentrate</font>

231
00:11:27,820 --> 00:11:36,010
on on the upper sequel execution<font color="#E5E5E5"> part</font>

232
00:11:31,480 --> 00:11:38,940
which is<font color="#E5E5E5"> really</font><font color="#CCCCCC"> nice so I'm</font><font color="#E5E5E5"> not sure who</font>

233
00:11:36,010 --> 00:11:43,390
of you used the<font color="#E5E5E5"> scene before</font>

234
00:11:38,940 --> 00:11:45,630
yeah<font color="#E5E5E5"> some people okay so a very basic</font>

235
00:11:43,390 --> 00:11:50,020
<font color="#E5E5E5">introduction to the scene so the scene</font>

236
00:11:45,630 --> 00:11:53,620
stores documents and these documents<font color="#CCCCCC"> in</font>

237
00:11:50,020 --> 00:11:57,040
create<font color="#E5E5E5"> EP could be I mean is the is what</font>

238
00:11:53,620 --> 00:11:59,860
is<font color="#E5E5E5"> our row data</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> much this is how</font>

239
00:11:57,040 --> 00:12:01,360
<font color="#E5E5E5">rows are translated into documents and</font>

240
00:11:59,860 --> 00:12:03,850
it's completely transparent<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you will</font>

241
00:12:01,360 --> 00:12:05,680
never know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> actually happens but we</font>

242
00:12:03,850 --> 00:12:08,500
wanted to<font color="#E5E5E5"> learn more</font><font color="#CCCCCC"> so I'm telling</font><font color="#E5E5E5"> the</font>

243
00:12:05,680 --> 00:12:11,500
student this<font color="#E5E5E5"> you know and and these</font>

244
00:12:08,500 --> 00:12:13,360
documents<font color="#CCCCCC"> have fields</font><font color="#E5E5E5"> so for instance</font>

245
00:12:11,500 --> 00:12:16,750
that<font color="#E5E5E5"> we always have this underscore ID</font>

246
00:12:13,360 --> 00:12:20,140
field which is like an identifier for

247
00:12:16,750 --> 00:12:22,900
for the document in<font color="#CCCCCC"> our</font><font color="#E5E5E5"> node and our</font>

248
00:12:20,140 --> 00:12:26,589
<font color="#E5E5E5">shard and we have if we have a column</font>

249
00:12:22,900 --> 00:12:30,130
then there you<font color="#CCCCCC"> will</font><font color="#E5E5E5"> have these here</font>

250
00:12:26,589 --> 00:12:32,620
listed<font color="#E5E5E5"> and as I mentioned these fields</font>

251
00:12:30,130 --> 00:12:34,480
are indexed by<font color="#E5E5E5"> default so if you want to</font>

252
00:12:32,620 --> 00:12:35,800
find Bob you can do that very

253
00:12:34,480 --> 00:12:38,440
efficiently you don't need to<font color="#E5E5E5"> create</font><font color="#CCCCCC"> and</font>

254
00:12:35,800 --> 00:12:42,370
<font color="#CCCCCC">exits it's it's</font><font color="#E5E5E5"> durable</font><font color="#CCCCCC"> you can you turn</font>

255
00:12:38,440 --> 00:12:46,000
<font color="#E5E5E5">it off if</font><font color="#CCCCCC"> you want by</font><font color="#E5E5E5"> defaults on and we</font>

256
00:12:42,370 --> 00:12:49,930
have also<font color="#CCCCCC"> do to the</font><font color="#E5E5E5"> scene</font><font color="#CCCCCC"> column store</font>

257
00:12:46,000 --> 00:12:53,440
integrated<font color="#E5E5E5"> so if you have a column that</font>

258
00:12:49,930 --> 00:12:56,109
<font color="#CCCCCC">you want to aggregate sum up some some</font>

259
00:12:53,440 --> 00:12:58,779
numbers in like

260
00:12:56,110 --> 00:13:00,490
revenue : whatever<font color="#E5E5E5"> you can do that very</font>

261
00:12:58,779 --> 00:13:02,649
very<font color="#CCCCCC"> very efficiently</font><font color="#E5E5E5"> due to the column</font>

262
00:13:00,490 --> 00:13:03,940
storage because you can<font color="#E5E5E5"> just aggregate</font>

263
00:13:02,649 --> 00:13:08,250
the whole column you don't have to go

264
00:13:03,940 --> 00:13:12,399
through each row and find the value

265
00:13:08,250 --> 00:13:16,690
elasticsearch<font color="#E5E5E5"> who has worked with</font>

266
00:13:12,399 --> 00:13:18,310
elasticsearch<font color="#E5E5E5"> okay it's about</font><font color="#CCCCCC"> the same</font>

267
00:13:16,690 --> 00:13:22,990
<font color="#E5E5E5">amount of people but different people</font>

268
00:13:18,310 --> 00:13:24,849
<font color="#CCCCCC">then was seen as</font><font color="#E5E5E5"> so and so in ethic</font>

269
00:13:22,990 --> 00:13:27,790
search you<font color="#CCCCCC"> have these core concepts</font><font color="#E5E5E5"> that</font>

270
00:13:24,850 --> 00:13:29,620
revolve about<font color="#CCCCCC"> in the indices charts and</font>

271
00:13:27,790 --> 00:13:32,189
replicas<font color="#E5E5E5"> there was a really good talk</font>

272
00:13:29,620 --> 00:13:35,050
yesterday<font color="#CCCCCC"> from</font><font color="#E5E5E5"> one of the</font><font color="#CCCCCC"> last guys</font>

273
00:13:32,190 --> 00:13:39,160
which<font color="#E5E5E5"> also explained that but let's just</font>

274
00:13:35,050 --> 00:13:41,890
quickly go<font color="#CCCCCC"> over it</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have these</font>

275
00:13:39,160 --> 00:13:46,630
charts<font color="#E5E5E5"> in an index like</font><font color="#CCCCCC"> I mentioned</font>

276
00:13:41,890 --> 00:13:50,529
before<font color="#E5E5E5"> and each charts has a</font><font color="#CCCCCC"> replicas of</font>

277
00:13:46,630 --> 00:13:52,269
course and these replicas are also

278
00:13:50,529 --> 00:13:55,089
<font color="#E5E5E5">useful for search performance</font><font color="#CCCCCC"> or you</font>

279
00:13:52,269 --> 00:13:58,779
said that<font color="#E5E5E5"> so how do tables relate to</font>

280
00:13:55,089 --> 00:14:01,589
illnesses<font color="#E5E5E5"> and charts and create</font><font color="#CCCCCC"> EP</font><font color="#E5E5E5"> so a</font>

281
00:13:58,779 --> 00:14:04,779
<font color="#E5E5E5">create create EP table is always</font>

282
00:14:01,589 --> 00:14:06,610
<font color="#CCCCCC">represented by at least one or less such</font>

283
00:14:04,779 --> 00:14:10,589
index with a mapping if it's not

284
00:14:06,610 --> 00:14:13,720
<font color="#E5E5E5">petitioned then it's just one index and</font>

285
00:14:10,589 --> 00:14:16,440
each index in<font color="#CCCCCC"> elasticsearch has as a</font>

286
00:14:13,720 --> 00:14:19,000
mapping<font color="#E5E5E5"> which kind of looks</font><font color="#CCCCCC"> like this</font>

287
00:14:16,440 --> 00:14:23,829
was<font color="#E5E5E5"> actually it looks</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> I copied</font>

288
00:14:19,000 --> 00:14:28,480
this from the source or if you have our

289
00:14:23,829 --> 00:14:30,459
table<font color="#E5E5E5"> with our speakers you have for</font>

290
00:14:28,480 --> 00:14:34,180
<font color="#E5E5E5">every you have you have for every M</font>

291
00:14:30,459 --> 00:14:37,329
column<font color="#E5E5E5"> you have the name and some</font>

292
00:14:34,180 --> 00:14:42,819
attributes like<font color="#E5E5E5"> keyword is is like a</font>

293
00:14:37,329 --> 00:14:46,269
simple string and so and yeah you can

294
00:14:42,820 --> 00:14:49,890
have nested<font color="#E5E5E5"> properties as well which was</font>

295
00:14:46,269 --> 00:14:53,709
<font color="#E5E5E5">our like objects that we saw previously</font>

296
00:14:49,890 --> 00:14:58,089
<font color="#E5E5E5">so if you have a normal</font><font color="#CCCCCC"> table like t1</font>

297
00:14:53,709 --> 00:15:00,550
which<font color="#E5E5E5"> just which not petitioned you you</font>

298
00:14:58,089 --> 00:15:03,220
have an index for this<font color="#E5E5E5"> table called t1</font>

299
00:15:00,550 --> 00:15:06,279
<font color="#E5E5E5">and might have like four shots that we</font>

300
00:15:03,220 --> 00:15:08,450
saw before you might not<font color="#E5E5E5"> see you like</font>

301
00:15:06,279 --> 00:15:10,910
another table which has three shots

302
00:15:08,450 --> 00:15:13,670
the<font color="#E5E5E5"> same same charts</font><font color="#CCCCCC"> just means like</font>

303
00:15:10,910 --> 00:15:16,250
<font color="#E5E5E5">these it has four shots and then you</font>

304
00:15:13,670 --> 00:15:19,219
have in table t2 which is<font color="#E5E5E5"> partitioned so</font>

305
00:15:16,250 --> 00:15:21,920
and we create these petitions<font color="#E5E5E5"> if you</font>

306
00:15:19,220 --> 00:15:28,510
<font color="#CCCCCC">were here stay but before we had year</font><font color="#E5E5E5"> so</font>

307
00:15:21,920 --> 00:15:31,670
if you have a new value<font color="#CCCCCC"> for for</font><font color="#E5E5E5"> your</font>

308
00:15:28,510 --> 00:15:35,569
year and you<font color="#E5E5E5"> are petitioned by here</font>

309
00:15:31,670 --> 00:15:38,000
thank you<font color="#E5E5E5"> then you you will basically</font>

310
00:15:35,570 --> 00:15:41,420
create<font color="#CCCCCC"> a new index</font><font color="#E5E5E5"> for every for every</font>

311
00:15:38,000 --> 00:15:44,450
year<font color="#E5E5E5"> or every</font><font color="#CCCCCC"> day and that</font><font color="#E5E5E5"> is quite</font>

312
00:15:41,420 --> 00:15:47,360
<font color="#E5E5E5">handy if you if you want to perform data</font>

313
00:15:44,450 --> 00:15:51,580
exclusively on a year or<font color="#E5E5E5"> bathed a basis</font>

314
00:15:47,360 --> 00:15:55,490
like you would in time series<font color="#E5E5E5"> analysis</font>

315
00:15:51,580 --> 00:15:58,370
so how does this all come<font color="#E5E5E5"> together so</font>

316
00:15:55,490 --> 00:16:02,090
when we have a sequel query it<font color="#E5E5E5"> it will</font>

317
00:15:58,370 --> 00:16:03,560
first go through<font color="#E5E5E5"> one of our clients or</font>

318
00:16:02,090 --> 00:16:06,820
submitted by one<font color="#CCCCCC"> of our clients which</font>

319
00:16:03,560 --> 00:16:09,219
can be a weapon<font color="#E5E5E5"> to face or</font><font color="#CCCCCC"> piece equal</font>

320
00:16:06,820 --> 00:16:13,600
<font color="#E5E5E5">crashes our command line increment</font>

321
00:16:09,220 --> 00:16:16,550
utility and a JDBC<font color="#CCCCCC"> PI's</font><font color="#E5E5E5"> and whatever and</font>

322
00:16:13,600 --> 00:16:18,200
then<font color="#E5E5E5"> it</font><font color="#CCCCCC"> arrives</font><font color="#E5E5E5"> on one</font><font color="#CCCCCC"> of the notes</font><font color="#E5E5E5"> and</font>

323
00:16:16,550 --> 00:16:21,560
it doesn't<font color="#E5E5E5"> matter which notes you can</font>

324
00:16:18,200 --> 00:16:23,180
<font color="#E5E5E5">just pick any one and yeah depending</font><font color="#CCCCCC"> on</font>

325
00:16:21,560 --> 00:16:26,329
whether you<font color="#E5E5E5"> thrust</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> Postgres we will</font>

326
00:16:23,180 --> 00:16:28,670
we<font color="#CCCCCC"> will receive your statement then it</font>

327
00:16:26,330 --> 00:16:30,830
goes into the<font color="#E5E5E5"> passer</font><font color="#CCCCCC"> so this is this is</font>

328
00:16:28,670 --> 00:16:33,860
<font color="#CCCCCC">like all bit on top of these other</font>

329
00:16:30,830 --> 00:16:36,710
layers I mentioned so<font color="#CCCCCC"> A+</font><font color="#E5E5E5"> yeah make sense</font>

330
00:16:33,860 --> 00:16:39,320
of sequel statement like syntactically

331
00:16:36,710 --> 00:16:42,200
<font color="#E5E5E5">and then the analyzer it does the</font>

332
00:16:39,320 --> 00:16:45,200
semantic analysis and gets all<font color="#E5E5E5"> the</font>

333
00:16:42,200 --> 00:16:47,890
relational<font color="#CCCCCC"> information looks up the for</font>

334
00:16:45,200 --> 00:16:51,230
<font color="#CCCCCC">example the elasticsearch indices</font><font color="#E5E5E5"> and as</font>

335
00:16:47,890 --> 00:16:53,689
yeah<font color="#CCCCCC"> basically a semantic check and the</font>

336
00:16:51,230 --> 00:16:57,230
planner<font color="#E5E5E5"> it then</font><font color="#CCCCCC"> generates the execution</font>

337
00:16:53,690 --> 00:16:59,660
plan<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> figures out what was what</font>

338
00:16:57,230 --> 00:17:03,140
notes are going to<font color="#E5E5E5"> be involved and then</font>

339
00:16:59,660 --> 00:17:06,879
<font color="#CCCCCC">the executor will will use like the</font>

340
00:17:03,140 --> 00:17:09,859
elasticsearch transport layer here<font color="#E5E5E5"> and</font>

341
00:17:06,880 --> 00:17:12,530
submit the data to all<font color="#E5E5E5"> to</font><font color="#CCCCCC"> all the</font>

342
00:17:09,859 --> 00:17:14,708
<font color="#E5E5E5">involved notes and the notes itself of</font>

343
00:17:12,530 --> 00:17:17,990
<font color="#E5E5E5">course they have they have their own</font>

344
00:17:14,709 --> 00:17:20,189
execution logic again and this all gets

345
00:17:17,990 --> 00:17:23,579
submitted<font color="#E5E5E5"> in the end back to</font>

346
00:17:20,189 --> 00:17:24,990
well lift<font color="#E5E5E5"> up on the storage layer the</font>

347
00:17:23,579 --> 00:17:27,928
<font color="#E5E5E5">data that is necessary</font><font color="#CCCCCC"> and then it's</font>

348
00:17:24,990 --> 00:17:30,059
going<font color="#E5E5E5"> to be sent back merged</font><font color="#CCCCCC"> that can be</font>

349
00:17:27,929 --> 00:17:32,280
multi<font color="#E5E5E5"> with</font><font color="#CCCCCC"> phases involved depending on</font>

350
00:17:30,059 --> 00:17:34,530
on the sequel statements if you have

351
00:17:32,280 --> 00:17:37,260
like a sub<font color="#E5E5E5"> query that you might first do</font>

352
00:17:34,530 --> 00:17:43,168
some some<font color="#E5E5E5"> other</font><font color="#CCCCCC"> operations before</font><font color="#E5E5E5"> you do</font>

353
00:17:37,260 --> 00:17:45,629
the final operation so what is some

354
00:17:43,169 --> 00:17:47,429
highlights from this architecture and

355
00:17:45,630 --> 00:17:50,669
<font color="#E5E5E5">you have distributed storage distributed</font>

356
00:17:47,429 --> 00:17:52,320
execution<font color="#E5E5E5"> you are a master</font><font color="#CCCCCC"> list which</font>

357
00:17:50,669 --> 00:17:54,390
doesn't mean<font color="#E5E5E5"> there's not a master</font>

358
00:17:52,320 --> 00:17:56,220
there's always one master to coordinate

359
00:17:54,390 --> 00:17:58,770
but any node can potentially be the

360
00:17:56,220 --> 00:18:00,870
master so if master fails another one

361
00:17:58,770 --> 00:18:03,270
takes over<font color="#CCCCCC"> and we have obviously</font>

362
00:18:00,870 --> 00:18:05,850
replication which is really neat we

363
00:18:03,270 --> 00:18:09,900
don't depend on<font color="#E5E5E5"> any like storage system</font>

364
00:18:05,850 --> 00:18:13,760
and<font color="#E5E5E5"> we use only local storage so if you</font>

365
00:18:09,900 --> 00:18:15,840
if you use containers<font color="#E5E5E5"> and you want to</font>

366
00:18:13,760 --> 00:18:17,510
shut<font color="#CCCCCC"> down</font><font color="#E5E5E5"> and container bring another</font>

367
00:18:15,840 --> 00:18:20,220
one<font color="#E5E5E5"> up you can totally do</font><font color="#CCCCCC"> that without</font>

368
00:18:17,510 --> 00:18:22,049
worrying<font color="#E5E5E5"> about data</font><font color="#CCCCCC"> persistence</font><font color="#E5E5E5"> if you</font>

369
00:18:20,220 --> 00:18:25,440
of course<font color="#E5E5E5"> if you have replication turned</font>

370
00:18:22,049 --> 00:18:28,530
on and it's it's highly optimized for

371
00:18:25,440 --> 00:18:35,909
search with<font color="#CCCCCC"> machine indexing all the</font>

372
00:18:28,530 --> 00:18:37,590
tables by default so I wanted<font color="#CCCCCC"> to do a</font>

373
00:18:35,909 --> 00:18:39,840
bit more<font color="#CCCCCC"> hands-on</font>

374
00:18:37,590 --> 00:18:44,100
I<font color="#E5E5E5"> realized I probably don't have so much</font>

375
00:18:39,840 --> 00:18:46,490
time<font color="#E5E5E5"> so what what can you do is</font>

376
00:18:44,100 --> 00:18:46,490
<font color="#CCCCCC">creativity</font>

377
00:18:46,940 --> 00:18:52,940
obviously monitoring<font color="#E5E5E5"> is a big thing</font>

378
00:18:49,830 --> 00:18:56,220
where you receive sensor data IOT data

379
00:18:52,940 --> 00:18:59,010
<font color="#CCCCCC">large amounts of data</font><font color="#E5E5E5"> or network events</font>

380
00:18:56,220 --> 00:19:01,679
and you want to make<font color="#CCCCCC"> sense of</font><font color="#E5E5E5"> this data</font>

381
00:18:59,010 --> 00:19:03,720
<font color="#E5E5E5">in</font><font color="#CCCCCC"> real-time</font><font color="#E5E5E5"> which you do when you do</font>

382
00:19:01,679 --> 00:19:06,419
monitoring<font color="#E5E5E5"> or intrusion</font><font color="#CCCCCC"> detection or</font>

383
00:19:03,720 --> 00:19:08,610
something like<font color="#CCCCCC"> that then some people use</font>

384
00:19:06,419 --> 00:19:11,610
<font color="#E5E5E5">it</font><font color="#CCCCCC"> for stream analysis</font><font color="#E5E5E5"> okay it's not</font>

385
00:19:08,610 --> 00:19:15,740
like streaming streaming like in the

386
00:19:11,610 --> 00:19:19,020
sense of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> patchy</font><font color="#E5E5E5"> fling for example but</font>

387
00:19:15,740 --> 00:19:22,049
but you you<font color="#CCCCCC"> can you can you can ingest</font>

388
00:19:19,020 --> 00:19:24,830
theater and raw data and then perform

389
00:19:22,049 --> 00:19:28,950
like at very short intervals

390
00:19:24,830 --> 00:19:31,379
aggregations on this data<font color="#E5E5E5"> so it is</font>

391
00:19:28,950 --> 00:19:32,690
streaming like functionality which a lot

392
00:19:31,380 --> 00:19:35,060
of people<font color="#CCCCCC"> use</font>

393
00:19:32,690 --> 00:19:37,460
of course text search<font color="#E5E5E5"> obviously because</font>

394
00:19:35,060 --> 00:19:40,790
we have the analyzers<font color="#E5E5E5"> in the scene it's</font>

395
00:19:37,460 --> 00:19:42,980
<font color="#E5E5E5">very often use time series I mentioned</font>

396
00:19:40,790 --> 00:19:48,470
with the partitions and you spatial

397
00:19:42,980 --> 00:19:51,800
queries also very<font color="#E5E5E5"> often used so how does</font>

398
00:19:48,470 --> 00:19:57,230
it<font color="#CCCCCC"> look like so</font><font color="#E5E5E5"> this is the admin</font>

399
00:19:51,800 --> 00:19:59,510
interface<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> have like a very good</font>

400
00:19:57,230 --> 00:20:01,010
overview<font color="#CCCCCC"> of your cluster here</font><font color="#E5E5E5"> it's a</font>

401
00:19:59,510 --> 00:20:04,580
general overview page where you can see

402
00:20:01,010 --> 00:20:08,030
is<font color="#E5E5E5"> everything like replicated how much</font>

403
00:20:04,580 --> 00:20:13,129
records we have and some some basic load

404
00:20:08,030 --> 00:20:15,860
information<font color="#E5E5E5"> and we also made that like</font><font color="#CCCCCC"> C</font>

405
00:20:13,130 --> 00:20:18,620
group aware so you you<font color="#E5E5E5"> can use also</font><font color="#CCCCCC"> dis</font>

406
00:20:15,860 --> 00:20:21,350
load information in a container

407
00:20:18,620 --> 00:20:24,739
environment then<font color="#E5E5E5"> we have a couple</font><font color="#CCCCCC"> of</font>

408
00:20:21,350 --> 00:20:28,699
more<font color="#CCCCCC"> pages here my</font><font color="#E5E5E5"> times up</font><font color="#CCCCCC"> I started at</font>

409
00:20:24,740 --> 00:20:31,100
25<font color="#CCCCCC"> ok ok ok ok</font>

410
00:20:28,700 --> 00:20:32,990
I'm done basically<font color="#E5E5E5"> so you have your</font>

411
00:20:31,100 --> 00:20:37,159
tables here<font color="#E5E5E5"> you can see how many shards</font>

412
00:20:32,990 --> 00:20:40,370
partitions you have and note note

413
00:20:37,160 --> 00:20:42,320
information<font color="#E5E5E5"> we have some sharding</font>

414
00:20:40,370 --> 00:20:44,360
information<font color="#CCCCCC"> also to see where where</font>

415
00:20:42,320 --> 00:20:48,830
where which<font color="#E5E5E5"> are this currently and</font>

416
00:20:44,360 --> 00:20:52,370
<font color="#E5E5E5">replicas ok so I mean the bubble line is</font>

417
00:20:48,830 --> 00:20:55,399
<font color="#E5E5E5">elasticsearch useless</font><font color="#CCCCCC"> Ian heavily and</font><font color="#E5E5E5"> a</font>

418
00:20:52,370 --> 00:20:56,989
<font color="#CCCCCC">neti</font><font color="#E5E5E5"> among others and we use the rest</font>

419
00:20:55,400 --> 00:20:58,490
search<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> seen and and a bunch of</font>

420
00:20:56,990 --> 00:21:00,800
<font color="#E5E5E5">other stuff to build a</font><font color="#CCCCCC"> distributed</font>

421
00:20:58,490 --> 00:21:03,380
sequel database on top of it<font color="#CCCCCC"> I think ray</font>

422
00:21:00,800 --> 00:21:06,860
<font color="#E5E5E5">TB is really perfect when you want or</font>

423
00:21:03,380 --> 00:21:08,150
have to<font color="#E5E5E5"> use sequel and if you want to</font>

424
00:21:06,860 --> 00:21:11,419
store<font color="#CCCCCC"> a large amount of</font><font color="#E5E5E5"> structure or</font>

425
00:21:08,150 --> 00:21:15,380
<font color="#E5E5E5">unstructured data and have many thousand</font>

426
00:21:11,420 --> 00:21:17,510
queries a second so I would invite<font color="#CCCCCC"> you</font>

427
00:21:15,380 --> 00:21:19,850
<font color="#CCCCCC">to</font><font color="#E5E5E5"> try it out for yourself you can go on</font>

428
00:21:17,510 --> 00:21:23,540
the download side or use this fancy<font color="#E5E5E5"> car</font>

429
00:21:19,850 --> 00:21:26,659
command if you trust us and<font color="#CCCCCC"> docker</font><font color="#E5E5E5"> and</font>

430
00:21:23,540 --> 00:21:29,330
<font color="#E5E5E5">create is also a</font><font color="#CCCCCC"> possibility you can</font>

431
00:21:26,660 --> 00:21:31,160
check out the docs<font color="#E5E5E5"> and yeah if you want</font>

432
00:21:29,330 --> 00:21:33,379
to<font color="#E5E5E5"> contribute there's some information</font>

433
00:21:31,160 --> 00:21:36,320
how to<font color="#E5E5E5"> contribute and Stack Overflow and</font>

434
00:21:33,380 --> 00:21:38,950
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> we have a select channel as well so</font>

435
00:21:36,320 --> 00:21:38,950
thank you very<font color="#E5E5E5"> much</font>

436
00:21:42,540 --> 00:21:52,200
Thank You<font color="#E5E5E5"> max any questions do you use</font>

437
00:21:48,000 --> 00:21:52,200
parent-child relations in elasticsearch

438
00:21:52,440 --> 00:21:57,940
parent<font color="#E5E5E5"> right if we use parent-child</font>

439
00:21:54,850 --> 00:22:00,580
relations from elasticsearch<font color="#CCCCCC"> i</font><font color="#E5E5E5"> am not</font>

440
00:21:57,940 --> 00:22:02,050
<font color="#E5E5E5">aware that</font><font color="#CCCCCC"> we use</font><font color="#E5E5E5"> that so all the</font>

441
00:22:00,580 --> 00:22:03,879
relations are built on top of

442
00:22:02,050 --> 00:22:06,310
elasticsearch yes<font color="#E5E5E5"> we have our</font><font color="#CCCCCC"> own</font>

443
00:22:03,880 --> 00:22:09,360
<font color="#CCCCCC">relationship alliteration management you</font>

444
00:22:06,310 --> 00:22:12,070
<font color="#E5E5E5">have any performance numbers or</font><font color="#CCCCCC"> i</font>

445
00:22:09,360 --> 00:22:13,929
explicitly didn't go into<font color="#CCCCCC"> performance</font>

446
00:22:12,070 --> 00:22:16,960
because our benchmarking because this is

447
00:22:13,930 --> 00:22:18,940
a sense like<font color="#CCCCCC"> a difficult topic</font><font color="#E5E5E5"> on our</font>

448
00:22:16,960 --> 00:22:21,730
website we<font color="#CCCCCC"> have some benchmark results</font>

449
00:22:18,940 --> 00:22:25,170
if you want to<font color="#E5E5E5"> check it out but like in</font>

450
00:22:21,730 --> 00:22:28,620
<font color="#CCCCCC">the last six talk</font><font color="#E5E5E5"> benchmark is always</font>

451
00:22:25,170 --> 00:22:31,360
subjective<font color="#CCCCCC"> I would say so it's very fast</font>

452
00:22:28,620 --> 00:22:33,639
<font color="#E5E5E5">depends on use case if you if you're</font>

453
00:22:31,360 --> 00:22:36,129
joining like relation like relations<font color="#E5E5E5"> all</font>

454
00:22:33,640 --> 00:22:38,080
the time it's<font color="#E5E5E5"> gonna be a bit slower if</font>

455
00:22:36,130 --> 00:22:40,680
you have demonized schema<font color="#E5E5E5"> like this like</font>

456
00:22:38,080 --> 00:22:44,110
I<font color="#E5E5E5"> showed it it's gotta be very fast so</font>

457
00:22:40,680 --> 00:22:46,270
because I know that elastic elastic is

458
00:22:44,110 --> 00:22:47,949
switching<font color="#CCCCCC"> away from the parent-child</font>

459
00:22:46,270 --> 00:22:51,010
relations because of the<font color="#E5E5E5"> performance</font>

460
00:22:47,950 --> 00:22:53,890
<font color="#CCCCCC">issues among others but</font><font color="#E5E5E5"> that was the</font>

461
00:22:51,010 --> 00:22:57,940
main goal<font color="#CCCCCC"> of dropping type</font><font color="#E5E5E5"> support and</font>

462
00:22:53,890 --> 00:23:01,050
not using<font color="#E5E5E5"> the relations at all yes they</font>

463
00:22:57,940 --> 00:23:04,720
wanted<font color="#E5E5E5"> to switch away from the relation</font>

464
00:23:01,050 --> 00:23:08,860
databases schemas and<font color="#CCCCCC"> everything because</font>

465
00:23:04,720 --> 00:23:11,410
people mistakenly took it for for some

466
00:23:08,860 --> 00:23:14,139
relational databases and try to do joins

467
00:23:11,410 --> 00:23:17,710
which is impossible<font color="#CCCCCC"> on those data</font>

468
00:23:14,140 --> 00:23:21,540
<font color="#E5E5E5">structures</font><font color="#CCCCCC"> to perform good</font><font color="#E5E5E5"> so I'm</font>

469
00:23:17,710 --> 00:23:27,430
wondering<font color="#E5E5E5"> how how you resolve that</font><font color="#CCCCCC"> ok</font>

470
00:23:21,540 --> 00:23:28,570
<font color="#CCCCCC">joins</font><font color="#E5E5E5"> are not impossible but yeah I</font>

471
00:23:27,430 --> 00:23:30,850
agree

472
00:23:28,570 --> 00:23:33,189
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think it will take</font><font color="#CCCCCC"> I just</font>

473
00:23:30,850 --> 00:23:37,330
<font color="#CCCCCC">want to ask have you considered the</font>

474
00:23:33,190 --> 00:23:40,240
<font color="#E5E5E5">stinks</font><font color="#CCCCCC"> before you started</font><font color="#E5E5E5"> the great to</font>

475
00:23:37,330 --> 00:23:44,770
be because<font color="#E5E5E5"> things is out there for</font>

476
00:23:40,240 --> 00:23:48,550
decade and has all functionality<font color="#CCCCCC"> great</font>

477
00:23:44,770 --> 00:23:54,070
to<font color="#E5E5E5"> be here</font><font color="#CCCCCC"> I so</font><font color="#E5E5E5"> you are you asking if I</font>

478
00:23:48,550 --> 00:23:57,340
know things<font color="#E5E5E5"> have you considered</font>

479
00:23:54,070 --> 00:23:59,169
I don't know what<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> okay</font>

480
00:23:57,340 --> 00:24:07,780
so I guess<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> not considered</font><font color="#E5E5E5"> it</font>

481
00:23:59,170 --> 00:24:11,500
sorry so you start<font color="#CCCCCC"> PostgreSQL wire</font>

482
00:24:07,780 --> 00:24:14,889
protocol<font color="#E5E5E5"> what</font><font color="#CCCCCC"> high consistent with your</font>

483
00:24:11,500 --> 00:24:17,410
SQL dialect<font color="#CCCCCC"> be with</font><font color="#E5E5E5"> the Postgres SQL</font>

484
00:24:14,890 --> 00:24:19,720
dialect and what would be<font color="#CCCCCC"> considered a</font>

485
00:24:17,410 --> 00:24:25,270
book<font color="#CCCCCC"> if there was a significant</font>

486
00:24:19,720 --> 00:24:28,300
<font color="#CCCCCC">difference in</font><font color="#E5E5E5"> our code base we have the</font>

487
00:24:25,270 --> 00:24:31,450
sequel logic<font color="#CCCCCC"> tests which help us to keep</font>

488
00:24:28,300 --> 00:24:34,990
<font color="#E5E5E5">track exactly</font><font color="#CCCCCC"> how much we cover from the</font>

489
00:24:31,450 --> 00:24:37,990
sequel dialect<font color="#CCCCCC"> I mentioned nor support</font>

490
00:24:34,990 --> 00:24:41,080
<font color="#CCCCCC">for transaction so obviously we we want</font>

491
00:24:37,990 --> 00:24:43,030
<font color="#E5E5E5">to measure 100 percent but we have a lot</font>

492
00:24:41,080 --> 00:24:45,399
<font color="#CCCCCC">of</font><font color="#E5E5E5"> people who who plaque creative in</font>

493
00:24:43,030 --> 00:24:47,139
instead<font color="#CCCCCC"> of Postgres and</font><font color="#E5E5E5"> it and it worked</font>

494
00:24:45,400 --> 00:24:49,270
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we have information schema and all</font>

495
00:24:47,140 --> 00:24:53,710
this stuff<font color="#E5E5E5"> you would expect from host</font>

496
00:24:49,270 --> 00:24:56,260
<font color="#E5E5E5">Chris I cannot give</font><font color="#CCCCCC"> you all the details</font>

497
00:24:53,710 --> 00:24:59,410
<font color="#CCCCCC">it depends</font><font color="#E5E5E5"> but I would say it's it's</font>

498
00:24:56,260 --> 00:25:02,320
<font color="#E5E5E5">pretty pretty good coverage for most use</font>

499
00:24:59,410 --> 00:25:05,850
cases<font color="#E5E5E5"> okay that's all we have time for</font>

500
00:25:02,320 --> 00:25:05,850
<font color="#CCCCCC">Thank You</font><font color="#E5E5E5"> max thank you</font>

