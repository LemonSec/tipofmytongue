1
00:00:04,630 --> 00:00:12,469
I don't<font color="#E5E5E5"> okay so I think we're out of</font>

2
00:00:09,040 --> 00:00:19,619
time<font color="#CCCCCC"> thank you</font><font color="#E5E5E5"> Quentin</font>

3
00:00:12,470 --> 00:00:19,620
[Applause]

4
00:01:08,830 --> 00:01:13,570
doesn't matter

5
00:01:10,570 --> 00:01:13,570
<font color="#E5E5E5">Hey</font>

6
00:01:18,720 --> 00:01:22,070
you just<font color="#CCCCCC"> spit onto your back</font>

7
00:01:32,590 --> 00:01:42,100
<font color="#E5E5E5">okay folks can</font><font color="#CCCCCC"> be been shipped from the</font>

8
00:01:35,890 --> 00:01:43,030
sides to let more people sit down okay

9
00:01:42,100 --> 00:01:59,798
folks we're starting the next

10
00:01:43,030 --> 00:02:03,579
<font color="#E5E5E5">presentation okay so I'm going to okay</font>

11
00:01:59,799 --> 00:02:05,380
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> introduce my good</font>

12
00:02:03,579 --> 00:02:09,818
friends Magnus son Bjorn<font color="#E5E5E5"> and they're</font>

13
00:02:05,380 --> 00:02:11,799
going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> talking about AF XTP people</font>

14
00:02:09,818 --> 00:02:14,069
that we have some cry from the<font color="#CCCCCC"> room</font>

15
00:02:11,799 --> 00:02:14,069
please

16
00:02:20,370 --> 00:02:26,560
<font color="#CCCCCC">alright let's get goin so my name is</font>

17
00:02:24,189 --> 00:02:27,010
<font color="#E5E5E5">born to Apple and this is my partner</font><font color="#CCCCCC"> in</font>

18
00:02:26,560 --> 00:02:32,019
<font color="#E5E5E5">crime</font>

19
00:02:27,010 --> 00:02:36,159
Magnus<font color="#E5E5E5"> Coulson we're from Intel as you</font>

20
00:02:32,019 --> 00:02:41,099
can see from the nice blue and we have

21
00:02:36,159 --> 00:02:47,620
<font color="#CCCCCC">to tell you a bit about what</font><font color="#E5E5E5"> a FX</font><font color="#CCCCCC"> dps</font>

22
00:02:41,099 --> 00:02:49,450
was that is this better<font color="#E5E5E5"> better</font><font color="#CCCCCC"> ok ok so</font>

23
00:02:47,620 --> 00:02:54,609
you missed<font color="#CCCCCC"> the word from our sponsor</font><font color="#E5E5E5"> but</font>

24
00:02:49,450 --> 00:02:59,230
<font color="#E5E5E5">we'll skip</font><font color="#CCCCCC"> that right ok so why why why</font>

25
00:02:54,609 --> 00:03:01,599
are we doing<font color="#CCCCCC"> this</font><font color="#E5E5E5"> so if you ask most</font>

26
00:02:59,230 --> 00:03:04,179
developers or network application

27
00:03:01,599 --> 00:03:05,619
developers<font color="#E5E5E5"> today like you have to pick</font>

28
00:03:04,180 --> 00:03:07,409
your platform and<font color="#CCCCCC"> you have to</font><font color="#E5E5E5"> pick an</font>

29
00:03:05,620 --> 00:03:11,680
API most people say<font color="#E5E5E5"> Linux and BSD</font>

30
00:03:07,409 --> 00:03:14,200
sockets<font color="#E5E5E5"> so why is that well it supports</font>

31
00:03:11,680 --> 00:03:18,940
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of features it's there</font><font color="#E5E5E5"> it works</font>

32
00:03:14,200 --> 00:03:23,500
<font color="#E5E5E5">people</font><font color="#CCCCCC"> are familiar</font><font color="#E5E5E5"> with it so that's</font>

33
00:03:18,940 --> 00:03:25,359
the<font color="#E5E5E5"> pic so say that this developer wants</font>

34
00:03:23,500 --> 00:03:27,430
<font color="#CCCCCC">to develop</font><font color="#E5E5E5"> a dpi application that's deep</font>

35
00:03:25,359 --> 00:03:30,069
packet inspection application<font color="#E5E5E5"> and he</font>

36
00:03:27,430 --> 00:03:33,910
goes<font color="#E5E5E5"> to was provided by the kernel which</font>

37
00:03:30,069 --> 00:03:36,608
is<font color="#E5E5E5"> the wave packet</font><font color="#CCCCCC"> sock layer after a</font>

38
00:03:33,910 --> 00:03:37,840
while he realized<font color="#E5E5E5"> that</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> I'm not</font>

39
00:03:36,609 --> 00:03:41,470
<font color="#E5E5E5">getting the</font><font color="#CCCCCC"> performance</font>

40
00:03:37,840 --> 00:03:43,269
<font color="#CCCCCC">they're like</font><font color="#E5E5E5"> so what can I do about it</font>

41
00:03:41,470 --> 00:03:45,340
<font color="#E5E5E5">well</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can't throw more course at it</font>

42
00:03:43,269 --> 00:03:51,340
which is I<font color="#E5E5E5"> mean we as Intel would love</font>

43
00:03:45,340 --> 00:03:53,709
that<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's not for everyone</font><font color="#CCCCCC"> so and I</font>

44
00:03:51,340 --> 00:03:55,530
mean it might<font color="#CCCCCC"> not even</font><font color="#E5E5E5"> be possible</font><font color="#CCCCCC"> to</font>

45
00:03:53,709 --> 00:03:59,139
throw<font color="#E5E5E5"> more hardware at the problem so</font>

46
00:03:55,530 --> 00:04:01,720
the typical solution then is to go to a

47
00:03:59,139 --> 00:04:05,769
hardware<font color="#CCCCCC"> down there for example</font><font color="#E5E5E5"> someone</font>

48
00:04:01,720 --> 00:04:08,230
<font color="#CCCCCC">that provides specialized niche or some</font>

49
00:04:05,769 --> 00:04:10,389
kind<font color="#CCCCCC"> of specialized hardware and the</font>

50
00:04:08,230 --> 00:04:12,668
problem<font color="#E5E5E5"> here is that usually with these</font>

51
00:04:10,389 --> 00:04:16,239
<font color="#CCCCCC">hardware you get a proprietary</font><font color="#E5E5E5"> SDK so</font>

52
00:04:12,669 --> 00:04:18,430
<font color="#CCCCCC">you have to</font><font color="#E5E5E5"> change application</font><font color="#CCCCCC"> and if</font>

53
00:04:16,238 --> 00:04:20,409
you want to try another<font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> you</font>

54
00:04:18,430 --> 00:04:25,510
<font color="#E5E5E5">have to change the application once</font>

55
00:04:20,409 --> 00:04:28,389
again<font color="#CCCCCC"> the usual hard to use the usual</font>

56
00:04:25,510 --> 00:04:32,969
lack a lot<font color="#E5E5E5"> of feature that Linux has but</font>

57
00:04:28,389 --> 00:04:32,969
this specific specific<font color="#CCCCCC"> order doesn't add</font>

58
00:04:33,050 --> 00:04:38,430
but then there's software solutions as

59
00:04:36,270 --> 00:04:44,669
well<font color="#E5E5E5"> for example deep decay and there's</font>

60
00:04:38,430 --> 00:04:46,289
PF ring and<font color="#CCCCCC"> rat</font><font color="#E5E5E5"> nap</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> really fast</font>

61
00:04:44,669 --> 00:04:50,039
but they're not really<font color="#CCCCCC"> integrated into</font>

62
00:04:46,289 --> 00:04:54,628
Linux<font color="#CCCCCC"> so again it requires you to</font>

63
00:04:50,039 --> 00:04:55,710
rewrite<font color="#E5E5E5"> your application and the biggest</font>

64
00:04:54,629 --> 00:04:58,289
<font color="#E5E5E5">problem here is that it's not really</font>

65
00:04:55,710 --> 00:05:00,599
<font color="#E5E5E5">integrated</font><font color="#CCCCCC"> into Linux so if you what I</font>

66
00:04:58,289 --> 00:05:02,280
use the feature from Linux then<font color="#E5E5E5"> you're</font>

67
00:05:00,599 --> 00:05:05,789
sort<font color="#E5E5E5"> of you have to re-implement them</font>

68
00:05:02,280 --> 00:05:10,919
yourself<font color="#E5E5E5"> in in your software and that's</font>

69
00:05:05,789 --> 00:05:12,990
not optimal<font color="#CCCCCC"> doing things twice so the</font>

70
00:05:10,919 --> 00:05:15,990
problem statement is so can we<font color="#E5E5E5"> take</font>

71
00:05:12,990 --> 00:05:18,529
these of use and<font color="#E5E5E5"> features of Linux and</font>

72
00:05:15,990 --> 00:05:23,180
<font color="#CCCCCC">command the software and</font><font color="#E5E5E5"> combine</font><font color="#CCCCCC"> it with</font>

73
00:05:18,529 --> 00:05:28,849
the performance<font color="#E5E5E5"> from here and let's see</font>

74
00:05:23,180 --> 00:05:34,590
so what we're proposing is<font color="#E5E5E5"> a new socket</font>

75
00:05:28,849 --> 00:05:39,449
<font color="#E5E5E5">application hosting is a new address</font>

76
00:05:34,590 --> 00:05:42,210
<font color="#CCCCCC">family called xtp</font><font color="#E5E5E5"> and it's a socket</font>

77
00:05:39,449 --> 00:05:44,819
it's a<font color="#E5E5E5"> socket layer and it's it so</font><font color="#CCCCCC"> you</font>

78
00:05:42,210 --> 00:05:48,508
can view<font color="#E5E5E5"> it as the use of space part of</font>

79
00:05:44,819 --> 00:05:51,810
<font color="#CCCCCC">XTP and we just had a great introduction</font>

80
00:05:48,509 --> 00:05:54,539
to XP from our previous<font color="#E5E5E5"> speaker so I</font>

81
00:05:51,810 --> 00:05:56,940
won't dwell<font color="#CCCCCC"> Internet</font>

82
00:05:54,539 --> 00:06:02,250
the solution is free from system calls

83
00:05:56,940 --> 00:06:05,779
<font color="#E5E5E5">so the transmit path and receive path</font>

84
00:06:02,250 --> 00:06:09,150
has<font color="#E5E5E5"> zero system</font><font color="#CCCCCC"> holes we also provide a</font>

85
00:06:05,779 --> 00:06:11,300
new kind of<font color="#E5E5E5"> allocator that if you modify</font>

86
00:06:09,150 --> 00:06:16,799
<font color="#CCCCCC">the device driver and use this</font><font color="#E5E5E5"> allocator</font>

87
00:06:11,300 --> 00:06:19,620
you'll get<font color="#CCCCCC"> two zero copy semantics all</font>

88
00:06:16,800 --> 00:06:24,960
the way<font color="#E5E5E5"> out to use around so</font><font color="#CCCCCC"> that means</font>

89
00:06:19,620 --> 00:06:26,580
that the Nick will DMA<font color="#E5E5E5"> the frame out to</font>

90
00:06:24,960 --> 00:06:32,250
<font color="#E5E5E5">memory in use in the user space</font>

91
00:06:26,580 --> 00:06:35,849
<font color="#CCCCCC">application ok if you do not use this</font>

92
00:06:32,250 --> 00:06:38,819
<font color="#E5E5E5">allocator and use an unmodified driver</font>

93
00:06:35,849 --> 00:06:41,180
<font color="#E5E5E5">you will still get a copy but pretty</font>

94
00:06:38,819 --> 00:06:41,180
good<font color="#E5E5E5"> performance</font>

95
00:06:42,250 --> 00:06:51,169
<font color="#E5E5E5">anyway</font><font color="#CCCCCC"> the last</font><font color="#E5E5E5"> thing is that we do not</font>

96
00:06:47,389 --> 00:06:54,139
expose any hardware details to the user

97
00:06:51,169 --> 00:06:56,539
application so instead we're exposing

98
00:06:54,139 --> 00:06:59,060
virtual hardware descriptors that are

99
00:06:56,539 --> 00:07:03,289
<font color="#E5E5E5">being translated from in in the kernel</font>

100
00:06:59,060 --> 00:07:05,289
<font color="#CCCCCC">to</font><font color="#E5E5E5"> and so the virtual hardware</font>

101
00:07:03,289 --> 00:07:11,259
descriptors are<font color="#E5E5E5"> being translated to</font>

102
00:07:05,289 --> 00:07:13,729
hardware descriptors in the kernel yes

103
00:07:11,259 --> 00:07:17,900
all right one<font color="#CCCCCC"> thing to note so if you're</font>

104
00:07:13,729 --> 00:07:20,330
using the<font color="#CCCCCC"> zero copy mode then</font><font color="#E5E5E5"> your</font>

105
00:07:17,900 --> 00:07:22,130
hardware has to support<font color="#CCCCCC"> Hardware</font>

106
00:07:20,330 --> 00:07:27,250
steering so for example we have two

107
00:07:22,130 --> 00:07:30,260
sockets receiving<font color="#CCCCCC"> to two separate</font><font color="#E5E5E5"> flows</font>

108
00:07:27,250 --> 00:07:33,229
<font color="#E5E5E5">then in order to use</font><font color="#CCCCCC"> zero copy ltu</font>

109
00:07:30,260 --> 00:07:35,930
<font color="#CCCCCC">surround we you must be able to steer</font>

110
00:07:33,229 --> 00:07:41,630
<font color="#E5E5E5">the flows but Magnus will tell bit more</font>

111
00:07:35,930 --> 00:07:44,860
<font color="#E5E5E5">about this later okay</font><font color="#CCCCCC"> so what else our</font>

112
00:07:41,630 --> 00:07:48,409
goal is to<font color="#E5E5E5"> hit 40 gig for large packets</font>

113
00:07:44,860 --> 00:07:50,389
for you gigabit per second and for 64

114
00:07:48,410 --> 00:07:57,260
byte packets<font color="#E5E5E5"> we're hoping for 25</font>

115
00:07:50,389 --> 00:07:59,389
gigabits per second alright<font color="#E5E5E5"> so from</font>

116
00:07:57,260 --> 00:08:03,130
<font color="#CCCCCC">Linux perspective why is this good well</font>

117
00:07:59,389 --> 00:08:05,750
get a<font color="#E5E5E5"> new socket layer that's fast and</font>

118
00:08:03,130 --> 00:08:10,460
we're hoping<font color="#CCCCCC"> to be closer</font><font color="#E5E5E5"> to deep decay</font>

119
00:08:05,750 --> 00:08:12,979
<font color="#E5E5E5">or just a some percent off you get out</font>

120
00:08:10,460 --> 00:08:14,630
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the box support for all network</font>

121
00:08:12,979 --> 00:08:18,469
devices<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> already there</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> in</font>

122
00:08:14,630 --> 00:08:24,139
Linux so a Linux support<font color="#E5E5E5"> a whole lot</font><font color="#CCCCCC"> of</font>

123
00:08:18,470 --> 00:08:26,419
devices what else

124
00:08:24,139 --> 00:08:28,159
it states that<font color="#CCCCCC"> xtp is required which is</font>

125
00:08:26,419 --> 00:08:31,490
<font color="#E5E5E5">not entirely</font><font color="#CCCCCC"> true to get the best</font>

126
00:08:28,159 --> 00:08:34,549
performance<font color="#E5E5E5"> we require</font><font color="#CCCCCC"> XDP but it can</font>

127
00:08:31,490 --> 00:08:38,029
fall back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> a term mode that's based on</font>

128
00:08:34,549 --> 00:08:40,728
<font color="#CCCCCC">SK buffs instead of X 2 XP and it's so</font>

129
00:08:38,029 --> 00:08:43,370
you can<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use the same application</font>

130
00:08:40,729 --> 00:08:45,230
interface for<font color="#CCCCCC"> all the device drivers but</font>

131
00:08:43,370 --> 00:08:48,160
some device drivers will have<font color="#E5E5E5"> better</font>

132
00:08:45,230 --> 00:08:48,160
performance<font color="#E5E5E5"> obviously</font>

133
00:08:49,620 --> 00:08:57,010
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I'll skip</font><font color="#E5E5E5"> I'll wait for the future</font>

134
00:08:52,390 --> 00:08:59,170
<font color="#E5E5E5">work for later fights okay so from deep</font>

135
00:08:57,010 --> 00:09:01,569
<font color="#CCCCCC">k perspective why why should deep decay</font>

136
00:08:59,170 --> 00:09:04,000
care about this well<font color="#E5E5E5"> say that he</font>

137
00:09:01,570 --> 00:09:07,630
implements a promo driver based on a FX

138
00:09:04,000 --> 00:09:10,390
<font color="#CCCCCC">TP then</font><font color="#E5E5E5"> you can still use</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> DPA</font>

139
00:09:07,630 --> 00:09:13,000
applications without<font color="#E5E5E5"> any changes but</font>

140
00:09:10,390 --> 00:09:13,630
instead<font color="#E5E5E5"> of having the device driver in</font>

141
00:09:13,000 --> 00:09:16,480
<font color="#CCCCCC">userspace</font>

142
00:09:13,630 --> 00:09:19,270
<font color="#E5E5E5">you let the</font><font color="#CCCCCC"> colonel</font><font color="#E5E5E5"> handle the the</font>

143
00:09:16,480 --> 00:09:23,080
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> which is honestly the</font><font color="#CCCCCC"> kernel is</font>

144
00:09:19,270 --> 00:09:24,730
pretty good at that<font color="#E5E5E5"> so the goal here</font><font color="#CCCCCC"> is</font>

145
00:09:23,080 --> 00:09:27,010
to have of course<font color="#CCCCCC"> there will</font><font color="#E5E5E5"> be a</font>

146
00:09:24,730 --> 00:09:30,490
performance<font color="#CCCCCC"> hit but we're aiming for</font><font color="#E5E5E5"> 10%</font>

147
00:09:27,010 --> 00:09:35,920
<font color="#CCCCCC">and for some application that that might</font>

148
00:09:30,490 --> 00:09:38,440
be<font color="#CCCCCC"> good enough as a follow-up</font><font color="#E5E5E5"> what</font>

149
00:09:35,920 --> 00:09:42,490
another good thing<font color="#E5E5E5"> is if we leave all</font>

150
00:09:38,440 --> 00:09:44,860
the used space drivers aside<font color="#E5E5E5"> then we can</font>

151
00:09:42,490 --> 00:09:47,320
actually use tip<font color="#CCCCCC"> decay inside</font><font color="#E5E5E5"> containers</font>

152
00:09:44,860 --> 00:09:51,940
which is not possible<font color="#CCCCCC"> today at least</font><font color="#E5E5E5"> not</font>

153
00:09:47,320 --> 00:09:53,020
in<font color="#E5E5E5"> our easy way and another thing is</font>

154
00:09:51,940 --> 00:09:56,560
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> have to re-implement</font>

155
00:09:53,020 --> 00:10:00,730
things like scheduling and back off in

156
00:09:56,560 --> 00:10:03,640
your new use<font color="#CCCCCC"> of the space application</font>

157
00:10:00,730 --> 00:10:05,650
because<font color="#E5E5E5"> the kernel can do this so we</font>

158
00:10:03,640 --> 00:10:09,340
<font color="#CCCCCC">support for example a post is called so</font>

159
00:10:05,650 --> 00:10:11,110
we can first be<font color="#E5E5E5"> polling and then if we</font>

160
00:10:09,340 --> 00:10:17,140
don't<font color="#E5E5E5"> want to do Bispo anymore we just</font>

161
00:10:11,110 --> 00:10:20,770
back off using the<font color="#E5E5E5"> polls is called so</font>

162
00:10:17,140 --> 00:10:25,780
again maybe the goal is to<font color="#E5E5E5"> if the case</font>

163
00:10:20,770 --> 00:10:27,040
is<font color="#E5E5E5"> using this driver then</font><font color="#CCCCCC"> DPA can be can</font>

164
00:10:25,780 --> 00:10:29,140
be<font color="#E5E5E5"> seen as a really good packet</font>

165
00:10:27,040 --> 00:10:33,550
processing library which is currently<font color="#E5E5E5"> is</font>

166
00:10:29,140 --> 00:10:36,090
as well so we<font color="#E5E5E5"> think</font><font color="#CCCCCC"> AF x2p could work</font>

167
00:10:33,550 --> 00:10:42,219
really<font color="#E5E5E5"> good in conjunction with</font><font color="#CCCCCC"> deep CK</font>

168
00:10:36,090 --> 00:10:44,860
all right all right<font color="#E5E5E5"> so enough talk</font>

169
00:10:42,220 --> 00:10:48,400
here's the code<font color="#E5E5E5"> so you start off</font><font color="#CCCCCC"> by</font>

170
00:10:44,860 --> 00:10:51,180
creating a socket<font color="#E5E5E5"> you allocate some</font>

171
00:10:48,400 --> 00:10:54,490
buffers<font color="#E5E5E5"> using your favorite alligator</font>

172
00:10:51,180 --> 00:10:58,770
<font color="#E5E5E5">and the buffer is where where the frame</font>

173
00:10:54,490 --> 00:11:00,940
daughter will be<font color="#E5E5E5"> DMA</font><font color="#CCCCCC"> to you</font><font color="#E5E5E5"> pass this</font>

174
00:10:58,770 --> 00:11:02,120
buffer pointer to the kernel so you

175
00:11:00,940 --> 00:11:07,040
<font color="#CCCCCC">registered</font><font color="#E5E5E5"> memory</font><font color="#CCCCCC"> to</font>

176
00:11:02,120 --> 00:11:09,230
the<font color="#CCCCCC"> kernel you create to the virtual</font>

177
00:11:07,040 --> 00:11:16,819
descriptor rings the<font color="#CCCCCC"> aurochs and TX for</font>

178
00:11:09,230 --> 00:11:19,970
ingress and egress<font color="#CCCCCC"> and then you bind you</font>

179
00:11:16,820 --> 00:11:23,779
bind the socket to certain interface to

180
00:11:19,970 --> 00:11:29,330
state okay I want<font color="#E5E5E5"> to bind</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> findex</font>

181
00:11:23,779 --> 00:11:31,910
<font color="#E5E5E5">and a specific</font><font color="#CCCCCC"> Q in</font><font color="#E5E5E5"> the neck and then in</font>

182
00:11:29,330 --> 00:11:34,820
<font color="#E5E5E5">this example I'm using basic polling so</font>

183
00:11:31,910 --> 00:11:39,560
I read messages from the<font color="#E5E5E5"> ring</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> posted</font>

184
00:11:34,820 --> 00:11:41,600
them send them out<font color="#E5E5E5"> so again I can</font><font color="#CCCCCC"> put</font>

185
00:11:39,560 --> 00:11:49,550
the<font color="#CCCCCC"> whole</font><font color="#E5E5E5"> siskel in there if I want to</font>

186
00:11:41,600 --> 00:11:54,950
back<font color="#CCCCCC"> off</font><font color="#E5E5E5"> right so</font><font color="#CCCCCC"> wait again so where</font>

187
00:11:49,550 --> 00:11:56,630
does<font color="#CCCCCC"> XTP fit within</font><font color="#E5E5E5"> AF x2p so my plan</font>

188
00:11:54,950 --> 00:12:00,980
was<font color="#CCCCCC"> to do some introduction</font><font color="#E5E5E5"> X to be here</font>

189
00:11:56,630 --> 00:12:03,860
but<font color="#E5E5E5"> again I'll skip that</font><font color="#CCCCCC"> so what we've</font>

190
00:12:00,980 --> 00:12:05,930
<font color="#E5E5E5">done</font><font color="#CCCCCC"> is that we're taking the redirect</font>

191
00:12:03,860 --> 00:12:10,010
action from<font color="#CCCCCC"> x2p and I said that you</font>

192
00:12:05,930 --> 00:12:13,670
cannot<font color="#CCCCCC"> own you can on top</font><font color="#E5E5E5"> of redirecting</font>

193
00:12:10,010 --> 00:12:15,950
your frames to other net devices you can

194
00:12:13,670 --> 00:12:21,520
redirect to an AF x2p socket as well

195
00:12:15,950 --> 00:12:21,520
<font color="#E5E5E5">this is just another target for redirect</font>

196
00:12:22,240 --> 00:12:27,950
and some somewhat crazy idea well here

197
00:12:25,730 --> 00:12:30,170
is that maybe<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can't do descriptive</font>

198
00:12:27,950 --> 00:12:31,910
rewriting from X to P as well so we

199
00:12:30,170 --> 00:12:33,650
could<font color="#E5E5E5"> from X the P support another</font>

200
00:12:31,910 --> 00:12:37,459
descriptor format for example Verdi

201
00:12:33,650 --> 00:12:41,089
<font color="#CCCCCC">Annette and then we could do</font><font color="#E5E5E5"> virtual</font>

202
00:12:37,459 --> 00:12:46,760
machine networking using the F<font color="#CCCCCC"> x2 piece</font>

203
00:12:41,089 --> 00:12:48,800
<font color="#CCCCCC">are clear what else</font><font color="#E5E5E5"> right now the</font>

204
00:12:46,760 --> 00:12:51,050
current<font color="#E5E5E5"> patch that only consumes the</font>

205
00:12:48,800 --> 00:12:54,740
frames and<font color="#E5E5E5"> the the received frame that</font>

206
00:12:51,050 --> 00:12:57,500
are being redirected to to stop yet<font color="#E5E5E5"> it's</font>

207
00:12:54,740 --> 00:13:00,740
consumed<font color="#CCCCCC"> but we need to be able to copy</font>

208
00:12:57,500 --> 00:13:03,890
the frame to a socket then pass it on<font color="#CCCCCC"> to</font>

209
00:13:00,740 --> 00:13:05,660
the stack because<font color="#CCCCCC"> then we will</font><font color="#E5E5E5"> have TCP</font>

210
00:13:03,890 --> 00:13:07,850
dump could be able<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> that and have</font>

211
00:13:05,660 --> 00:13:12,140
a much<font color="#CCCCCC"> faster TSP dumped on the current</font>

212
00:13:07,850 --> 00:13:15,459
<font color="#E5E5E5">a packet based one</font><font color="#CCCCCC"> and also I've been</font>

213
00:13:12,140 --> 00:13:17,920
discussing with<font color="#CCCCCC"> Jasper down here</font>

214
00:13:15,459 --> 00:13:19,839
about doing little balancing from x2p

215
00:13:17,920 --> 00:13:22,748
program so you<font color="#E5E5E5"> can receive your frame</font>

216
00:13:19,839 --> 00:13:31,089
<font color="#CCCCCC">and down little balancing it over</font>

217
00:13:22,749 --> 00:13:34,149
multiple sockets right yep<font color="#E5E5E5"> and just a</font>

218
00:13:31,089 --> 00:13:36,429
few notes<font color="#E5E5E5"> on the operation on so if the</font>

219
00:13:34,149 --> 00:13:38,949
driver is unmodified and doesn't ever

220
00:13:36,429 --> 00:13:42,160
<font color="#E5E5E5">have XP support we support something</font>

221
00:13:38,949 --> 00:13:44,589
<font color="#E5E5E5">called HTTP KB which is a mouthful</font><font color="#CCCCCC"> but</font>

222
00:13:42,160 --> 00:13:48,309
<font color="#CCCCCC">that</font><font color="#E5E5E5"> means</font><font color="#CCCCCC"> that you can still run your</font>

223
00:13:44,589 --> 00:13:52,540
XP programs<font color="#CCCCCC"> it'll be slow</font><font color="#E5E5E5"> obviously or</font>

224
00:13:48,309 --> 00:13:54,699
as slow as the<font color="#CCCCCC"> skb pass it is but it</font>

225
00:13:52,540 --> 00:13:58,689
will work<font color="#CCCCCC"> so you can use that on any</font>

226
00:13:54,699 --> 00:14:02,099
device<font color="#CCCCCC"> or any net</font><font color="#E5E5E5"> device driver and in</font>

227
00:13:58,689 --> 00:14:05,379
that they have device in from the kernel

228
00:14:02,100 --> 00:14:08,050
if the device driver has support for<font color="#CCCCCC"> xtp</font>

229
00:14:05,379 --> 00:14:11,740
then you used the mode<font color="#E5E5E5"> in the middle and</font>

230
00:14:08,050 --> 00:14:13,660
that's that's still copy but it's much

231
00:14:11,740 --> 00:14:15,879
faster than the<font color="#E5E5E5"> first one</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> finally</font>

232
00:14:13,660 --> 00:14:18,368
there's the modify driver that's using

233
00:14:15,879 --> 00:14:23,949
the zero copy allocation scheme<font color="#E5E5E5"> and</font>

234
00:14:18,369 --> 00:14:27,579
that's<font color="#E5E5E5"> the fastest one right so I'll</font>

235
00:14:23,949 --> 00:14:29,618
take<font color="#E5E5E5"> a pass on</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> - so how do we do this</font>

236
00:14:27,579 --> 00:14:31,299
<font color="#CCCCCC">zero copy stuff now if you look at</font><font color="#E5E5E5"> the</font>

237
00:14:29,619 --> 00:14:33,069
picture on<font color="#E5E5E5"> the left hand side there</font>

238
00:14:31,299 --> 00:14:35,740
that's the classical<font color="#E5E5E5"> non zero copy case</font>

239
00:14:33,069 --> 00:14:37,420
in<font color="#E5E5E5"> that case they TX and rx descriptors</font>

240
00:14:35,740 --> 00:14:39,189
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> harder' ring is just</font><font color="#E5E5E5"> mapped to</font>

241
00:14:37,420 --> 00:14:40,929
the kernel<font color="#CCCCCC"> they're not visible to users</font>

242
00:14:39,189 --> 00:14:43,689
<font color="#CCCCCC">base same thing with a packet buffer</font>

243
00:14:40,929 --> 00:14:46,029
<font color="#E5E5E5">only visible to</font><font color="#CCCCCC"> the kernel</font>

244
00:14:43,689 --> 00:14:48,849
what<font color="#E5E5E5"> Linux does</font><font color="#CCCCCC"> then is is copy out the</font>

245
00:14:46,029 --> 00:14:50,589
packets in to user space and with the TX

246
00:14:48,850 --> 00:14:53,259
and<font color="#CCCCCC"> rx script it just translates out</font>

247
00:14:50,589 --> 00:14:55,629
into some<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> gnostic format</font><font color="#E5E5E5"> that's</font>

248
00:14:53,259 --> 00:14:56,170
that's in in user<font color="#E5E5E5"> space and that's a</font>

249
00:14:55,629 --> 00:14:57,790
<font color="#E5E5E5">good thing</font>

250
00:14:56,170 --> 00:14:59,529
I mean operating system<font color="#E5E5E5"> is about</font>

251
00:14:57,790 --> 00:15:02,679
hardware abstractions security

252
00:14:59,529 --> 00:15:05,860
robustness isolation<font color="#E5E5E5"> you get that here</font>

253
00:15:02,679 --> 00:15:07,329
so<font color="#E5E5E5"> we want to keep that in our zero copy</font>

254
00:15:05,860 --> 00:15:10,779
solution so the in the zero copy

255
00:15:07,329 --> 00:15:13,269
solution we do not expose TX and rx

256
00:15:10,779 --> 00:15:15,730
descriptor harder rings into user space

257
00:15:13,269 --> 00:15:17,860
<font color="#E5E5E5">they're still translated by by the Linux</font>

258
00:15:15,730 --> 00:15:19,749
<font color="#CCCCCC">kernel</font><font color="#E5E5E5"> into some format which looks</font>

259
00:15:17,860 --> 00:15:22,269
different than other sockets<font color="#E5E5E5"> but it's</font>

260
00:15:19,749 --> 00:15:23,290
still<font color="#E5E5E5"> a hot</font><font color="#CCCCCC"> bag gnostic format and you</font>

261
00:15:22,269 --> 00:15:25,240
know it's going<font color="#E5E5E5"> to be secure</font><font color="#CCCCCC"> and</font>

262
00:15:23,290 --> 00:15:26,829
isolated and<font color="#E5E5E5"> stuff but the key</font>

263
00:15:25,240 --> 00:15:29,049
difference<font color="#E5E5E5"> here is</font><font color="#CCCCCC"> that we take</font><font color="#E5E5E5"> the</font>

264
00:15:26,829 --> 00:15:31,508
packet buffer and map it straight up

265
00:15:29,049 --> 00:15:33,910
<font color="#E5E5E5">into user space so packet</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the neck</font>

266
00:15:31,509 --> 00:15:37,779
<font color="#E5E5E5">are mapped by</font><font color="#CCCCCC"> D D</font><font color="#E5E5E5"> made straight into</font>

267
00:15:33,910 --> 00:15:40,389
user space<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> applications</font>

268
00:15:37,779 --> 00:15:42,699
you<font color="#CCCCCC"> two processes note that the RX and</font>

269
00:15:40,389 --> 00:15:45,009
TX<font color="#CCCCCC"> descriptors</font><font color="#E5E5E5"> are never ever shared</font>

270
00:15:42,699 --> 00:15:47,199
between<font color="#E5E5E5"> these two</font><font color="#CCCCCC"> processes packet</font>

271
00:15:45,009 --> 00:15:49,540
buffer zone<font color="#CCCCCC"> that I can be shared</font><font color="#E5E5E5"> by</font>

272
00:15:47,199 --> 00:15:51,189
default<font color="#E5E5E5"> they're not shared but if you</font>

273
00:15:49,540 --> 00:15:53,290
like<font color="#CCCCCC"> shared memory</font><font color="#E5E5E5"> there's nothing that</font>

274
00:15:51,189 --> 00:15:54,699
hinders you to share the packet<font color="#CCCCCC"> buffers</font>

275
00:15:53,290 --> 00:15:56,679
so<font color="#CCCCCC"> of course you create a huge fault</font>

276
00:15:54,699 --> 00:15:58,479
domain<font color="#E5E5E5"> you know the other process might</font>

277
00:15:56,679 --> 00:16:00,610
actually pollute<font color="#E5E5E5"> your data and so</font><font color="#CCCCCC"> on but</font>

278
00:15:58,480 --> 00:16:02,679
<font color="#CCCCCC">yes yeah you chose</font><font color="#E5E5E5"> it that's what you</font>

279
00:16:00,610 --> 00:16:07,870
get<font color="#E5E5E5"> but it's possible but never win the</font>

280
00:16:02,679 --> 00:16:09,519
descriptors<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so secure it in</font>

281
00:16:07,870 --> 00:16:11,829
<font color="#CCCCCC">isolation that's very important</font><font color="#E5E5E5"> so what</font>

282
00:16:09,519 --> 00:16:13,839
are<font color="#E5E5E5"> the inquire monsier so we make sure</font>

283
00:16:11,829 --> 00:16:16,569
<font color="#CCCCCC">that I mean uses</font><font color="#E5E5E5"> this can never crash</font>

284
00:16:13,839 --> 00:16:18,879
<font color="#CCCCCC">the kernel</font><font color="#E5E5E5"> or another process and also</font>

285
00:16:16,569 --> 00:16:20,618
<font color="#E5E5E5">that you cannot read or</font><font color="#CCCCCC"> write any kernel</font>

286
00:16:18,879 --> 00:16:24,160
<font color="#E5E5E5">data which is you know of course you</font>

287
00:16:20,619 --> 00:16:28,600
have to and<font color="#E5E5E5"> you cannot really write any</font>

288
00:16:24,160 --> 00:16:29,618
<font color="#E5E5E5">packets from any other process so what</font>

289
00:16:28,600 --> 00:16:32,049
do you need in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use let's say</font>

290
00:16:29,619 --> 00:16:36,189
<font color="#E5E5E5">you have two processes at this point a</font>

291
00:16:32,049 --> 00:16:38,019
<font color="#E5E5E5">and B and all your traffic goes in</font>

292
00:16:36,189 --> 00:16:40,029
through a single interface<font color="#E5E5E5"> so you have</font>

293
00:16:38,019 --> 00:16:43,089
to split<font color="#E5E5E5"> up the stream of traffic to</font>

294
00:16:40,029 --> 00:16:46,059
process alien process<font color="#E5E5E5"> P and if they have</font>

295
00:16:43,089 --> 00:16:47,730
like<font color="#CCCCCC"> ap address X</font><font color="#E5E5E5"> a TLS Y then you</font>

296
00:16:46,059 --> 00:16:50,439
actually have<font color="#E5E5E5"> to use some hardware</font>

297
00:16:47,730 --> 00:16:52,629
<font color="#E5E5E5">steering in order to steer this</font><font color="#CCCCCC"> factor</font>

298
00:16:50,439 --> 00:16:54,069
that's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> requirement for for untrusted</font>

299
00:16:52,629 --> 00:16:56,309
applications<font color="#E5E5E5"> multiple address</font>

300
00:16:54,069 --> 00:16:58,868
applications where the flows going

301
00:16:56,309 --> 00:17:01,029
<font color="#E5E5E5">coming from the same port because</font>

302
00:16:58,869 --> 00:17:03,160
otherwise I mean you couldn't just take

303
00:17:01,029 --> 00:17:05,169
<font color="#E5E5E5">that flow and</font><font color="#CCCCCC"> just push it up into</font><font color="#E5E5E5"> a</font>

304
00:17:03,160 --> 00:17:06,520
single<font color="#E5E5E5"> untrusted application and have</font>

305
00:17:05,169 --> 00:17:09,339
that spread<font color="#E5E5E5"> it out because then it would</font>

306
00:17:06,520 --> 00:17:13,148
<font color="#CCCCCC">be able</font><font color="#E5E5E5"> to see any packet and modify any</font>

307
00:17:09,339 --> 00:17:14,888
packet so that's not not a good<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so</font>

308
00:17:13,148 --> 00:17:16,329
<font color="#E5E5E5">but fortunately I mean since like</font><font color="#CCCCCC"> ten</font>

309
00:17:14,888 --> 00:17:19,059
years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> most NICs</font>

310
00:17:16,329 --> 00:17:20,168
actually support classification and if

311
00:17:19,059 --> 00:17:21,879
you look at Nick's today I mean they're

312
00:17:20,169 --> 00:17:23,409
coming<font color="#CCCCCC"> more</font><font color="#E5E5E5"> and more advanced you</font><font color="#CCCCCC"> know</font>

313
00:17:21,880 --> 00:17:25,389
<font color="#E5E5E5">and can do more and more stuff</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

314
00:17:23,409 --> 00:17:27,010
even<font color="#E5E5E5"> download</font><font color="#CCCCCC"> x2p programs international</font>

315
00:17:25,388 --> 00:17:28,178
stuff so they're becoming<font color="#E5E5E5"> more and more</font>

316
00:17:27,010 --> 00:17:30,100
flexible<font color="#E5E5E5"> so I don't think this is</font>

317
00:17:28,179 --> 00:17:33,490
problem but there's always going to be

318
00:17:30,100 --> 00:17:35,289
in some cases<font color="#E5E5E5"> something where you can't</font>

319
00:17:33,490 --> 00:17:38,559
perform<font color="#E5E5E5"> the classification hardware and</font>

320
00:17:35,289 --> 00:17:40,899
in that case you<font color="#CCCCCC"> have to use this</font><font color="#E5E5E5"> TP</font><font color="#CCCCCC"> skb</font>

321
00:17:38,559 --> 00:17:42,250
mode or<font color="#E5E5E5"> they</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> deeply driver mode which</font>

322
00:17:40,899 --> 00:17:44,409
copies out the dating<font color="#CCCCCC"> too</font>

323
00:17:42,250 --> 00:17:46,380
<font color="#CCCCCC">user space</font><font color="#E5E5E5"> and then what we want to</font>

324
00:17:44,410 --> 00:17:49,060
<font color="#E5E5E5">achieve is having than the the</font>

325
00:17:46,380 --> 00:17:50,890
classification being done in<font color="#CCCCCC"> xdt</font><font color="#E5E5E5"> so you</font>

326
00:17:49,060 --> 00:17:52,929
download CP program it does the

327
00:17:50,890 --> 00:17:55,150
classification of course gonna<font color="#E5E5E5"> be</font>

328
00:17:52,930 --> 00:17:58,810
slightly<font color="#CCCCCC"> slower</font><font color="#E5E5E5"> but you know still a lot</font>

329
00:17:55,150 --> 00:18:00,790
better<font color="#E5E5E5"> than before</font><font color="#CCCCCC"> okay let's look</font><font color="#E5E5E5"> at</font>

330
00:17:58,810 --> 00:18:03,060
some<font color="#CCCCCC"> numbers so we have</font><font color="#E5E5E5"> this</font>

331
00:18:00,790 --> 00:18:07,720
experimental<font color="#CCCCCC"> setup here it's the latest</font>

332
00:18:03,060 --> 00:18:11,139
<font color="#E5E5E5">RC that came out Wednesday</font><font color="#CCCCCC"> no Tuesday it</font>

333
00:18:07,720 --> 00:18:13,240
was<font color="#E5E5E5"> it</font><font color="#CCCCCC"> it's just on some Broadwell</font>

334
00:18:11,140 --> 00:18:15,720
<font color="#CCCCCC">server</font><font color="#E5E5E5"> here we just only two</font><font color="#CCCCCC"> cores to</font>

335
00:18:13,240 --> 00:18:19,120
this simple micro benchmarks here<font color="#E5E5E5"> and</font>

336
00:18:15,720 --> 00:18:21,280
the app runs on one chord<font color="#E5E5E5"> and then I</font>

337
00:18:19,120 --> 00:18:24,429
know this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> completely</font><font color="#E5E5E5"> brain-dead</font><font color="#CCCCCC"> but</font>

338
00:18:21,280 --> 00:18:26,290
TX and rx runs on the same core of

339
00:18:24,430 --> 00:18:28,270
course<font color="#CCCCCC"> that's not good but we're gonna</font>

340
00:18:26,290 --> 00:18:31,060
<font color="#E5E5E5">fix that you know it was just a faster</font>

341
00:18:28,270 --> 00:18:33,160
way to get to to this point TX<font color="#CCCCCC"> of course</font>

342
00:18:31,060 --> 00:18:34,690
should run<font color="#CCCCCC"> with some code</font><font color="#E5E5E5"> but it doesn't</font>

343
00:18:33,160 --> 00:18:36,430
at<font color="#CCCCCC"> this point so they will compete as</font>

344
00:18:34,690 --> 00:18:39,940
you will see in<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> the benchmarks</font>

345
00:18:36,430 --> 00:18:43,150
<font color="#E5E5E5">when we use both TX and rx want to use</font>

346
00:18:39,940 --> 00:18:46,840
one<font color="#E5E5E5"> cue pair it's a 40 gigabit portal</font>

347
00:18:43,150 --> 00:18:49,510
Nick and we use an<font color="#CCCCCC"> Excel OH generated</font>

348
00:18:46,840 --> 00:18:54,970
blasting it is 40 gigabits<font color="#E5E5E5"> a second full</font>

349
00:18:49,510 --> 00:18:57,640
traffic all the<font color="#CCCCCC"> time</font><font color="#E5E5E5"> we have three micro</font>

350
00:18:54,970 --> 00:18:59,860
benchmarks we have our X dot which just

351
00:18:57,640 --> 00:19:02,410
<font color="#CCCCCC">receives</font><font color="#E5E5E5"> the packet</font><font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> look at the</font>

352
00:18:59,860 --> 00:19:04,990
data just<font color="#E5E5E5"> drops it</font><font color="#CCCCCC"> t Express is kind of</font>

353
00:19:02,410 --> 00:19:06,940
<font color="#E5E5E5">the opposite it has</font><font color="#CCCCCC"> pre computed</font><font color="#E5E5E5"> TX</font>

354
00:19:04,990 --> 00:19:10,210
packets<font color="#E5E5E5"> just try to send them out as</font>

355
00:19:06,940 --> 00:19:13,450
quickly<font color="#CCCCCC"> as possible only rx only TX</font><font color="#E5E5E5"> and</font>

356
00:19:10,210 --> 00:19:15,610
lt forward is then receive a packet swap

357
00:19:13,450 --> 00:19:18,840
the<font color="#CCCCCC"> mac header</font><font color="#E5E5E5"> send it out again</font><font color="#CCCCCC"> so this</font>

358
00:19:15,610 --> 00:19:21,790
actually does touch touch the data and

359
00:19:18,840 --> 00:19:24,159
we have<font color="#E5E5E5"> four</font><font color="#CCCCCC"> different columns</font><font color="#E5E5E5"> here we</font>

360
00:19:21,790 --> 00:19:26,260
have a packet<font color="#E5E5E5"> v3 that exists already in</font>

361
00:19:24,160 --> 00:19:28,540
Linux<font color="#E5E5E5"> and then we have the three modes</font>

362
00:19:26,260 --> 00:19:30,340
that we have introduced and the first

363
00:19:28,540 --> 00:19:32,530
thing<font color="#CCCCCC"> that you can see is that</font><font color="#E5E5E5"> well even</font>

364
00:19:30,340 --> 00:19:36,610
this<font color="#E5E5E5"> X</font><font color="#CCCCCC"> dpsk be more</font><font color="#E5E5E5"> would work with any</font>

365
00:19:32,530 --> 00:19:38,530
you know<font color="#E5E5E5"> net</font><font color="#CCCCCC"> network device it's like</font>

366
00:19:36,610 --> 00:19:41,199
<font color="#CCCCCC">two to five times as fast</font><font color="#E5E5E5"> as the</font>

367
00:19:38,530 --> 00:19:43,510
<font color="#CCCCCC">previous fastest one</font><font color="#E5E5E5"> and when we</font>

368
00:19:41,200 --> 00:19:45,010
compared<font color="#E5E5E5"> these</font><font color="#CCCCCC"> to two minutes similar</font><font color="#E5E5E5"> to</font>

369
00:19:43,510 --> 00:19:47,350
this so there's nothing<font color="#CCCCCC"> special with</font>

370
00:19:45,010 --> 00:19:49,990
these three so that's pretty<font color="#CCCCCC"> good</font><font color="#E5E5E5"> that</font>

371
00:19:47,350 --> 00:19:51,550
works<font color="#E5E5E5"> on</font><font color="#CCCCCC"> anything and it gives you you</font>

372
00:19:49,990 --> 00:19:53,410
know<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> much the same</font><font color="#E5E5E5"> it's it's a</font>

373
00:19:51,550 --> 00:19:54,700
<font color="#E5E5E5">raw data interface in both cases I think</font>

374
00:19:53,410 --> 00:19:57,129
<font color="#CCCCCC">that's that's good</font>

375
00:19:54,700 --> 00:19:59,109
and then we have X deeply driver case

376
00:19:57,129 --> 00:20:01,418
which<font color="#E5E5E5"> gonna work on any driver with</font><font color="#CCCCCC"> XTP</font>

377
00:19:59,109 --> 00:20:04,480
support<font color="#E5E5E5"> and with</font><font color="#CCCCCC"> ARC stock you</font><font color="#E5E5E5"> can see</font>

378
00:20:01,419 --> 00:20:06,580
it's like 15 times<font color="#CCCCCC"> faster than v3 I</font>

379
00:20:04,480 --> 00:20:08,230
think that's also really<font color="#E5E5E5"> good you can</font>

380
00:20:06,580 --> 00:20:09,999
<font color="#E5E5E5">see that there are dashes on</font><font color="#CCCCCC"> TX pushing</font>

381
00:20:08,230 --> 00:20:11,649
at<font color="#CCCCCC"> the forward so that's one of the</font>

382
00:20:09,999 --> 00:20:15,909
<font color="#E5E5E5">challenges</font><font color="#CCCCCC"> we had with this RFC we</font>

383
00:20:11,649 --> 00:20:17,799
couldn't reuse the<font color="#CCCCCC"> XT PTX and the O's in</font>

384
00:20:15,909 --> 00:20:19,239
the driver<font color="#E5E5E5"> but I think that's going to</font>

385
00:20:17,799 --> 00:20:21,489
<font color="#E5E5E5">be worked out so</font><font color="#CCCCCC"> hopefully we</font><font color="#E5E5E5"> will get</font>

386
00:20:19,239 --> 00:20:24,429
to some change those<font color="#CCCCCC"> indios where</font><font color="#E5E5E5"> we can</font>

387
00:20:21,489 --> 00:20:26,409
actually<font color="#E5E5E5"> use have a mode for</font><font color="#CCCCCC"> this even</font>

388
00:20:24,429 --> 00:20:30,070
in<font color="#E5E5E5"> index here so we'll get some numbers</font>

389
00:20:26,409 --> 00:20:31,299
here<font color="#E5E5E5"> but the code</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> ready but even</font>

390
00:20:30,070 --> 00:20:34,059
<font color="#E5E5E5">better performance you can get with</font><font color="#CCCCCC"> a</font>

391
00:20:31,299 --> 00:20:37,330
<font color="#CCCCCC">0-0 copy one if you we start by just</font>

392
00:20:34,059 --> 00:20:42,039
looking at TX<font color="#CCCCCC"> Bush it's about like 22</font>

393
00:20:37,330 --> 00:20:44,289
times what you have here<font color="#E5E5E5"> and Oryx</font><font color="#CCCCCC"> top</font>

394
00:20:42,039 --> 00:20:46,658
and<font color="#E5E5E5"> on hand it's it's like 17 or</font><font color="#CCCCCC"> that</font>

395
00:20:44,289 --> 00:20:48,100
<font color="#CCCCCC">actors also</font><font color="#E5E5E5"> done 20</font><font color="#CCCCCC"> times but something</font>

396
00:20:46,659 --> 00:20:51,100
to note<font color="#CCCCCC"> that I mean we had a previous</font>

397
00:20:48,100 --> 00:20:54,969
<font color="#CCCCCC">version of this which we called a packet</font>

398
00:20:51,100 --> 00:20:57,609
v4<font color="#CCCCCC"> it's the new version of a packet and</font>

399
00:20:54,970 --> 00:20:59,289
it actually<font color="#CCCCCC"> had like 40</font><font color="#E5E5E5"> times the</font>

400
00:20:57,609 --> 00:21:01,239
<font color="#CCCCCC">performance the reason for that is that</font>

401
00:20:59,289 --> 00:21:03,158
we have done<font color="#E5E5E5"> absolutely no performance</font>

402
00:21:01,239 --> 00:21:05,259
optimization on this code<font color="#E5E5E5"> it's just that</font>

403
00:21:03,159 --> 00:21:06,639
for functionality<font color="#E5E5E5"> while we're this guy</font>

404
00:21:05,259 --> 00:21:08,859
we actually did some performance

405
00:21:06,639 --> 00:21:11,199
optimization so my guess is<font color="#CCCCCC"> that's</font>

406
00:21:08,859 --> 00:21:12,460
there's lots of<font color="#CCCCCC"> low-hanging</font><font color="#E5E5E5"> fruit to be</font>

407
00:21:11,200 --> 00:21:14,830
had here<font color="#CCCCCC"> so this will definitely</font>

408
00:21:12,460 --> 00:21:18,070
<font color="#CCCCCC">increase we have spent no time of</font>

409
00:21:14,830 --> 00:21:20,320
performance of my session this so the

410
00:21:18,070 --> 00:21:22,480
goal is to<font color="#E5E5E5"> get it at</font><font color="#CCCCCC"> least above</font><font color="#E5E5E5"> 30</font>

411
00:21:20,320 --> 00:21:25,749
<font color="#E5E5E5">million packets per second</font><font color="#CCCCCC"> for this 64</font>

412
00:21:22,480 --> 00:21:27,489
byte packets<font color="#CCCCCC"> but</font><font color="#E5E5E5"> still clearly we have</font>

413
00:21:25,749 --> 00:21:30,369
we have working<font color="#E5E5E5"> of my session</font><font color="#CCCCCC"> area to do</font>

414
00:21:27,489 --> 00:21:34,779
<font color="#CCCCCC">basic in all</font><font color="#E5E5E5"> these numbers to me look</font>

415
00:21:30,369 --> 00:21:36,668
promising<font color="#E5E5E5"> there's lots of</font><font color="#CCCCCC"> to to work</font>

416
00:21:34,779 --> 00:21:39,489
that we can do I'm gonna say we have

417
00:21:36,669 --> 00:21:42,039
nine<font color="#CCCCCC"> minutes of course</font><font color="#E5E5E5"> we have to do the</font>

418
00:21:39,489 --> 00:21:43,659
<font color="#CCCCCC">performance optimization work and really</font>

419
00:21:42,039 --> 00:21:45,279
<font color="#CCCCCC">something very important</font><font color="#E5E5E5"> and it's a call</font>

420
00:21:43,659 --> 00:21:48,940
<font color="#E5E5E5">to you guys if you</font><font color="#CCCCCC"> have some real</font>

421
00:21:45,279 --> 00:21:50,499
workloads<font color="#E5E5E5"> please try them out I mean you</font>

422
00:21:48,940 --> 00:21:52,450
know<font color="#CCCCCC"> I throw in micro benchmarks here</font>

423
00:21:50,499 --> 00:21:54,039
<font color="#E5E5E5">it's very</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> from real workloads</font>

424
00:21:52,450 --> 00:21:56,919
and those<font color="#E5E5E5"> for micro benchmarks</font>

425
00:21:54,039 --> 00:21:59,049
if you want to try it<font color="#E5E5E5"> out the RFC is on</font>

426
00:21:56,919 --> 00:22:01,210
the mailing list<font color="#CCCCCC"> just</font><font color="#E5E5E5"> download it and</font>

427
00:21:59,049 --> 00:22:04,929
you know let<font color="#CCCCCC"> us know what works</font><font color="#E5E5E5"> what</font>

428
00:22:01,210 --> 00:22:06,700
doesn't<font color="#E5E5E5"> work please</font><font color="#CCCCCC"> we really want to</font>

429
00:22:04,929 --> 00:22:08,500
make the<font color="#E5E5E5"> Cisco we have a cyst called on</font>

430
00:22:06,700 --> 00:22:12,400
the T<font color="#CCCCCC"> axis to</font><font color="#E5E5E5"> get it going</font>

431
00:22:08,500 --> 00:22:14,110
we'll try to<font color="#E5E5E5"> get that to get rid of it</font>

432
00:22:12,400 --> 00:22:15,970
and<font color="#E5E5E5"> also to get TX of the</font><font color="#CCCCCC"> Earth's core</font>

433
00:22:14,110 --> 00:22:17,139
<font color="#E5E5E5">because I mean you saw that performance</font>

434
00:22:15,970 --> 00:22:19,780
of<font color="#E5E5E5"> their l2 forward</font>

435
00:22:17,140 --> 00:22:21,640
I mean it's limited by<font color="#E5E5E5"> or</font><font color="#CCCCCC"> it's in</font><font color="#E5E5E5"> TX</font>

436
00:22:19,780 --> 00:22:24,360
completing on that core<font color="#E5E5E5"> of course that's</font>

437
00:22:21,640 --> 00:22:27,880
<font color="#E5E5E5">not good but what will fix it</font>

438
00:22:24,360 --> 00:22:31,030
Pakistan you see<font color="#CCCCCC"> xtp talked about also I</font>

439
00:22:27,880 --> 00:22:32,770
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> xtp has metadata support now</font><font color="#E5E5E5"> you be</font>

440
00:22:31,030 --> 00:22:35,050
nice<font color="#E5E5E5"> to tie it</font><font color="#CCCCCC"> into this you can have</font>

441
00:22:32,770 --> 00:22:38,440
metadata maybe maybe it's<font color="#E5E5E5"> hard hard work</font>

442
00:22:35,050 --> 00:22:40,419
<font color="#E5E5E5">load stuff or it's things that the Nick</font>

443
00:22:38,440 --> 00:22:44,110
had already<font color="#E5E5E5"> pre computed for you and you</font>

444
00:22:40,420 --> 00:22:45,850
can you know<font color="#E5E5E5"> get that up there also I</font>

445
00:22:44,110 --> 00:22:48,310
mean let's say<font color="#E5E5E5"> you start an application</font>

446
00:22:45,850 --> 00:22:50,020
<font color="#CCCCCC">you bind to a certain mix can you bind</font>

447
00:22:48,310 --> 00:22:52,780
to certain<font color="#E5E5E5"> qid</font>

448
00:22:50,020 --> 00:22:56,320
let's say<font color="#E5E5E5"> qid</font><font color="#CCCCCC"> 100 and then</font><font color="#E5E5E5"> you run it on</font>

449
00:22:52,780 --> 00:22:58,930
<font color="#CCCCCC">anomaly it doesn't have a q ID 100 you</font>

450
00:22:56,320 --> 00:23:03,189
still want that program to work so<font color="#CCCCCC"> you</font>

451
00:22:58,930 --> 00:23:06,040
should be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> emulate that q ID by</font>

452
00:23:03,190 --> 00:23:07,660
some you know<font color="#E5E5E5"> copying or whatever today</font>

453
00:23:06,040 --> 00:23:09,370
that's<font color="#E5E5E5"> not supported but really want to</font>

454
00:23:07,660 --> 00:23:11,980
<font color="#E5E5E5">be able to have the same program working</font>

455
00:23:09,370 --> 00:23:15,760
<font color="#E5E5E5">on every single</font><font color="#CCCCCC"> nick</font><font color="#E5E5E5"> you know</font>

456
00:23:11,980 --> 00:23:17,590
independent<font color="#CCCCCC"> how</font><font color="#E5E5E5"> many cubes it has most</font>

457
00:23:15,760 --> 00:23:19,570
would like to see<font color="#CCCCCC"> a next EP redirect to</font>

458
00:23:17,590 --> 00:23:21,939
other<font color="#CCCCCC"> Neph devices or XPath today you</font>

459
00:23:19,570 --> 00:23:24,429
redirect<font color="#CCCCCC"> it to the TX path and send it</font>

460
00:23:21,940 --> 00:23:26,830
out<font color="#CCCCCC"> again but it makes a</font><font color="#E5E5E5"> lot of sense in</font>

461
00:23:24,430 --> 00:23:30,630
certain cases<font color="#CCCCCC"> tax to drill</font><font color="#E5E5E5"> directly to</font>

462
00:23:26,830 --> 00:23:33,460
the<font color="#CCCCCC"> aurochs</font><font color="#E5E5E5"> path enough upwards again</font>

463
00:23:30,630 --> 00:23:35,710
today there's<font color="#CCCCCC"> only at least in the</font>

464
00:23:33,460 --> 00:23:37,000
previous<font color="#CCCCCC"> corner in this one you correct</font>

465
00:23:35,710 --> 00:23:39,610
<font color="#E5E5E5">me if I'm wrong yes but you don't have</font>

466
00:23:37,000 --> 00:23:42,700
one<font color="#CCCCCC"> xtp program for the</font><font color="#E5E5E5"> whole your whole</font>

467
00:23:39,610 --> 00:23:45,820
Nick<font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't have it per cube</font><font color="#CCCCCC"> pack but</font>

468
00:23:42,700 --> 00:23:48,580
<font color="#E5E5E5">here if you can open an</font><font color="#CCCCCC"> X AF</font><font color="#E5E5E5"> x DP socket</font>

469
00:23:45,820 --> 00:23:50,830
/<font color="#E5E5E5"> q ID</font><font color="#CCCCCC"> it makes</font><font color="#E5E5E5"> sense to have the next P</font>

470
00:23:48,580 --> 00:23:53,020
<font color="#E5E5E5">program pack you pair you can do this</font>

471
00:23:50,830 --> 00:23:54,970
today<font color="#E5E5E5"> by by just first patch you can</font>

472
00:23:53,020 --> 00:23:57,280
have one X<font color="#E5E5E5"> to</font><font color="#CCCCCC"> B program and fill the</font>

473
00:23:54,970 --> 00:23:58,960
stuff out on qy d in your in your HTTP

474
00:23:57,280 --> 00:24:00,460
program but<font color="#CCCCCC"> it's still easier from a</font>

475
00:23:58,960 --> 00:24:01,960
management point of view to have<font color="#E5E5E5"> this a</font>

476
00:24:00,460 --> 00:24:04,140
separate program since there were just

477
00:24:01,960 --> 00:24:06,580
one monolithic entity

478
00:24:04,140 --> 00:24:09,070
somebody talked about was another

479
00:24:06,580 --> 00:24:13,389
<font color="#E5E5E5">question about</font><font color="#CCCCCC"> XTP support on TX I mean</font>

480
00:24:09,070 --> 00:24:14,710
yeah ii b PF<font color="#CCCCCC"> has</font><font color="#E5E5E5"> TX support but X deeply</font>

481
00:24:13,390 --> 00:24:16,840
doesn't have it<font color="#E5E5E5"> but it makes a lot of</font>

482
00:24:14,710 --> 00:24:19,510
sense<font color="#E5E5E5"> to have</font><font color="#CCCCCC"> it especially in</font>

483
00:24:16,840 --> 00:24:20,649
<font color="#E5E5E5">conjunction with this</font><font color="#CCCCCC"> AF x DP sockets</font>

484
00:24:19,510 --> 00:24:24,310
actually aim to

485
00:24:20,650 --> 00:24:28,260
to execute<font color="#E5E5E5"> the next EP program on the TX</font>

486
00:24:24,310 --> 00:24:31,780
path - that's not in in place today<font color="#CCCCCC"> and</font>

487
00:24:28,260 --> 00:24:33,790
the<font color="#E5E5E5"> cues are really single consumer</font>

488
00:24:31,780 --> 00:24:36,280
single producer just to be as fast as

489
00:24:33,790 --> 00:24:37,990
possible but there are<font color="#CCCCCC"> use cases where</font>

490
00:24:36,280 --> 00:24:40,660
you<font color="#CCCCCC"> really wanted to be multi producer</font>

491
00:24:37,990 --> 00:24:42,550
you<font color="#E5E5E5"> know single consumer or even senior</font>

492
00:24:40,660 --> 00:24:45,070
<font color="#E5E5E5">producer multi consumer so we are nice</font>

493
00:24:42,550 --> 00:24:47,290
to be able to plug in such a ring<font color="#E5E5E5"> into</font>

494
00:24:45,070 --> 00:24:49,290
it<font color="#E5E5E5"> we have try to write the code</font><font color="#CCCCCC"> Solar</font>

495
00:24:47,290 --> 00:24:51,100
the ring structures are completely

496
00:24:49,290 --> 00:24:52,330
abstracted away from the rest of<font color="#E5E5E5"> the</font>

497
00:24:51,100 --> 00:24:54,310
code<font color="#CCCCCC"> you can actually</font><font color="#E5E5E5"> plug in</font><font color="#CCCCCC"> different</font>

498
00:24:52,330 --> 00:24:57,790
ring structures<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we'll be nice</font><font color="#E5E5E5"> if</font>

499
00:24:54,310 --> 00:24:59,350
somebody<font color="#E5E5E5"> could try this out and the</font>

500
00:24:57,790 --> 00:25:01,450
clone packet configuration<font color="#CCCCCC"> just to be</font>

501
00:24:59,350 --> 00:25:03,070
compatible with AF packet<font color="#CCCCCC"> Mahopac it</font>

502
00:25:01,450 --> 00:25:04,630
<font color="#E5E5E5">today it clones the pack it sends it out</font>

503
00:25:03,070 --> 00:25:06,639
<font color="#CCCCCC">to</font><font color="#E5E5E5"> you space and another one is sent</font>

504
00:25:04,630 --> 00:25:08,170
through<font color="#CCCCCC"> the stack</font><font color="#E5E5E5"> we want to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

505
00:25:06,640 --> 00:25:10,380
do the same thing to<font color="#CCCCCC"> save support like</font>

506
00:25:08,170 --> 00:25:13,360
<font color="#CCCCCC">TCP dump</font><font color="#E5E5E5"> Wireshark in these things and</font>

507
00:25:10,380 --> 00:25:15,610
in the<font color="#E5E5E5"> previous version will</font><font color="#CCCCCC"> be the TCP</font>

508
00:25:13,360 --> 00:25:18,490
dump implementation<font color="#E5E5E5"> that took I mean</font>

509
00:25:15,610 --> 00:25:20,889
only<font color="#E5E5E5"> took three four hours to convert</font>

510
00:25:18,490 --> 00:25:23,620
TCP dump and we got<font color="#CCCCCC"> 20x performance</font>

511
00:25:20,890 --> 00:25:25,260
improvement on TCP dump<font color="#E5E5E5"> I think that's</font>

512
00:25:23,620 --> 00:25:27,280
that's this and for four hours of work

513
00:25:25,260 --> 00:25:32,770
<font color="#E5E5E5">so we want to be able to do something</font>

514
00:25:27,280 --> 00:25:35,440
<font color="#CCCCCC">similarly</font><font color="#E5E5E5"> right so we've got five</font>

515
00:25:32,770 --> 00:25:37,480
minutes<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right conclude so we</font>

516
00:25:35,440 --> 00:25:40,600
introduced this<font color="#CCCCCC"> FX TP formula of a</font>

517
00:25:37,480 --> 00:25:42,880
packet v4 it's integrated<font color="#CCCCCC"> xdp it's</font>

518
00:25:40,600 --> 00:25:46,659
basically the user space interface of a

519
00:25:42,880 --> 00:25:48,850
next EP program and the<font color="#E5E5E5"> zero copy we</font>

520
00:25:46,660 --> 00:25:51,700
have it up<font color="#E5E5E5"> to 20 times now we had it up</font>

521
00:25:48,850 --> 00:25:53,560
to<font color="#CCCCCC"> 40 but the current access is 20</font><font color="#E5E5E5"> so we</font>

522
00:25:51,700 --> 00:25:56,020
<font color="#CCCCCC">hope you</font><font color="#E5E5E5"> can bet it will be</font><font color="#CCCCCC"> even better</font>

523
00:25:53,560 --> 00:25:57,550
<font color="#E5E5E5">than this</font><font color="#CCCCCC"> and there's an RFC</font><font color="#E5E5E5"> on the net</font>

524
00:25:56,020 --> 00:25:59,379
<font color="#CCCCCC">mailing</font><font color="#E5E5E5"> list please check it out the</font>

525
00:25:57,550 --> 00:26:01,360
House of course<font color="#E5E5E5"> all the details this is</font>

526
00:25:59,380 --> 00:26:03,010
just an overview<font color="#CCCCCC"> but there's still</font><font color="#E5E5E5"> lots</font>

527
00:26:01,360 --> 00:26:05,830
of performance<font color="#E5E5E5"> of</font><font color="#CCCCCC"> messaging work we need</font>

528
00:26:03,010 --> 00:26:07,870
<font color="#E5E5E5">to do it's there for you to</font><font color="#CCCCCC"> look at and</font>

529
00:26:05,830 --> 00:26:09,399
is there for<font color="#CCCCCC"> just getting the design now</font>

530
00:26:07,870 --> 00:26:10,840
<font color="#E5E5E5">to you to comment on it's not there</font>

531
00:26:09,400 --> 00:26:14,080
because<font color="#CCCCCC"> it</font><font color="#E5E5E5"> has the greatest performance</font>

532
00:26:10,840 --> 00:26:15,580
on earth<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> it should have</font><font color="#E5E5E5"> start to</font>

533
00:26:14,080 --> 00:26:19,990
optimize<font color="#CCCCCC"> performance</font><font color="#E5E5E5"> before it's ready</font>

534
00:26:15,580 --> 00:26:21,220
<font color="#CCCCCC">as we all</font><font color="#E5E5E5"> know but it's</font><font color="#CCCCCC"> very tempting of</font>

535
00:26:19,990 --> 00:26:23,380
course and we think also think there's

536
00:26:21,220 --> 00:26:27,970
lots of exciting<font color="#CCCCCC"> xep extensions to be</font>

537
00:26:23,380 --> 00:26:29,410
had<font color="#CCCCCC"> in conjunction</font><font color="#E5E5E5"> with this and I'm</font><font color="#CCCCCC"> not</font>

538
00:26:27,970 --> 00:26:31,000
<font color="#E5E5E5">going to go through this but there's a</font>

539
00:26:29,410 --> 00:26:33,610
couple<font color="#E5E5E5"> of people in the audience that</font><font color="#CCCCCC"> we</font>

540
00:26:31,000 --> 00:26:39,510
want<font color="#CCCCCC"> to thank</font><font color="#E5E5E5"> and more people here</font>

541
00:26:33,610 --> 00:26:39,510
<font color="#E5E5E5">I see you can find here hey questions</font>

542
00:26:56,100 --> 00:27:00,969
<font color="#E5E5E5">yeah I mean okay so if you started</font><font color="#CCCCCC"> from</font>

543
00:26:58,870 --> 00:27:01,479
scratch<font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean you made a choice</font><font color="#CCCCCC"> what</font>

544
00:27:00,970 --> 00:27:03,940
should I do

545
00:27:01,480 --> 00:27:06,400
so it depends<font color="#E5E5E5"> on if</font><font color="#CCCCCC"> you for example had</font>

546
00:27:03,940 --> 00:27:09,370
very<font color="#E5E5E5"> very tight performance targets</font><font color="#CCCCCC"> or</font>

547
00:27:06,400 --> 00:27:11,169
you were making an embedded system in an

548
00:27:09,370 --> 00:27:14,229
integrated box<font color="#CCCCCC"> then that would</font><font color="#E5E5E5"> probably</font>

549
00:27:11,169 --> 00:27:15,970
you know<font color="#CCCCCC"> you could</font><font color="#E5E5E5"> probably go with</font><font color="#CCCCCC"> DP</font>

550
00:27:14,230 --> 00:27:18,190
<font color="#CCCCCC">DK</font><font color="#E5E5E5"> especially they had different</font>

551
00:27:15,970 --> 00:27:21,070
<font color="#E5E5E5">deployment snares</font><font color="#CCCCCC"> you wanted</font><font color="#E5E5E5"> your code</font>

552
00:27:18,190 --> 00:27:23,290
to<font color="#E5E5E5"> run on both the embedded system a box</font>

553
00:27:21,070 --> 00:27:26,168
<font color="#CCCCCC">you wanted</font><font color="#E5E5E5"> to run in the cloud you</font>

554
00:27:23,290 --> 00:27:27,730
wanted to run on on<font color="#CCCCCC"> somebody</font><font color="#E5E5E5"> server then</font>

555
00:27:26,169 --> 00:27:32,919
go with<font color="#E5E5E5"> if you dick and you could deploy</font>

556
00:27:27,730 --> 00:27:34,390
it anywhere<font color="#E5E5E5"> for example there's many</font>

557
00:27:32,919 --> 00:27:36,880
other<font color="#E5E5E5"> things too I mean DPD care</font>

558
00:27:34,390 --> 00:27:40,059
supports or floating<font color="#E5E5E5"> we don't</font><font color="#CCCCCC"> think that</font>

559
00:27:36,880 --> 00:27:43,500
at this<font color="#CCCCCC"> point</font><font color="#E5E5E5"> as on</font><font color="#CCCCCC"> any other</font><font color="#E5E5E5"> have to be</font>

560
00:27:40,059 --> 00:27:43,500
an either/or choice<font color="#E5E5E5"> right</font>

561
00:27:57,230 --> 00:28:07,380
you know so the<font color="#CCCCCC"> question was why not</font>

562
00:28:04,200 --> 00:28:09,650
already<font color="#CCCCCC"> MA it's a good point where I</font>

563
00:28:07,380 --> 00:28:11,850
<font color="#CCCCCC">should start out looking at</font><font color="#E5E5E5"> that and I</font>

564
00:28:09,650 --> 00:28:15,810
think the main thing<font color="#E5E5E5"> is that it's so</font>

565
00:28:11,850 --> 00:28:18,240
different from<font color="#E5E5E5"> what's in the the</font>

566
00:28:15,810 --> 00:28:20,850
<font color="#E5E5E5">networking stack terms are but I mean</font>

567
00:28:18,240 --> 00:28:22,320
hey it might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> fit</font><font color="#E5E5E5"> but lots of</font>

568
00:28:20,850 --> 00:28:27,689
<font color="#CCCCCC">things where it is</font><font color="#E5E5E5"> inspired by our</font>

569
00:28:22,320 --> 00:28:32,480
Dominion and you know this right yeah

570
00:28:27,690 --> 00:28:36,750
<font color="#E5E5E5">and it's this</font><font color="#CCCCCC"> is my subjective opinion</font>

571
00:28:32,480 --> 00:28:39,800
but it's a bit too<font color="#CCCCCC"> much</font><font color="#E5E5E5"> I'd say for for</font>

572
00:28:36,750 --> 00:28:42,930
most applications<font color="#CCCCCC"> I mean or DMA is for</font>

573
00:28:39,800 --> 00:28:49,649
all the storage<font color="#E5E5E5"> back things there are</font>

574
00:28:42,930 --> 00:28:52,710
too much bets<font color="#E5E5E5"> but I mean might be right</font>

575
00:28:49,650 --> 00:28:54,120
<font color="#CCCCCC">and I mean</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> Orion Bay has been been</font>

576
00:28:52,710 --> 00:28:56,790
around for a long time<font color="#E5E5E5"> so it's really</font>

577
00:28:54,120 --> 00:29:01,100
mature as<font color="#CCCCCC"> well but there's like</font><font color="#E5E5E5"> two</font>

578
00:28:56,790 --> 00:29:01,100
<font color="#CCCCCC">people waving</font><font color="#E5E5E5"> yeah one more</font>

579
00:29:38,340 --> 00:29:55,418
<font color="#E5E5E5">sorry for</font><font color="#CCCCCC"> ya yeah the question</font><font color="#E5E5E5"> visitor</font>

580
00:29:53,980 --> 00:29:59,080
how you design it but let's let's take

581
00:29:55,419 --> 00:30:07,369
that<font color="#E5E5E5"> offline sorry thank you</font>

582
00:29:59,080 --> 00:30:07,369
[Applause]

