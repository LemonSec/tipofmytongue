1
00:00:05,270 --> 00:00:11,129
so we'll start our next<font color="#E5E5E5"> presentation</font>

2
00:00:08,039 --> 00:00:12,509
<font color="#CCCCCC">this time we're going into</font><font color="#E5E5E5"> the formats</font>

3
00:00:11,130 --> 00:00:17,099
and codecs

4
00:00:12,509 --> 00:00:19,529
area<font color="#CCCCCC"> without first</font><font color="#E5E5E5"> speech is about</font>

5
00:00:17,099 --> 00:00:22,500
<font color="#CCCCCC">matroyshka and the low latency streaming</font>

6
00:00:19,529 --> 00:00:31,830
by<font color="#CCCCCC"> Steve a lot</font><font color="#E5E5E5"> even will warm welcome</font>

7
00:00:22,500 --> 00:00:36,750
please<font color="#E5E5E5"> hello so I'm</font><font color="#CCCCCC"> Steve</font><font color="#E5E5E5"> long I created</font>

8
00:00:31,830 --> 00:00:39,890
not<font color="#E5E5E5"> alone the</font><font color="#CCCCCC"> matroska so for those</font><font color="#E5E5E5"> who</font>

9
00:00:36,750 --> 00:00:43,890
<font color="#CCCCCC">don't know you might know the format</font><font color="#E5E5E5"> MKV</font>

10
00:00:39,890 --> 00:00:50,070
<font color="#E5E5E5">so that was the other name</font><font color="#CCCCCC"> for the</font>

11
00:00:43,890 --> 00:00:54,000
format the actual name<font color="#E5E5E5"> so</font><font color="#CCCCCC"> matroska</font><font color="#E5E5E5"> was</font>

12
00:00:50,070 --> 00:00:55,920
created as an open format from<font color="#E5E5E5"> the</font>

13
00:00:54,000 --> 00:00:59,010
beginning for it so it was developed

14
00:00:55,920 --> 00:01:03,059
mostly<font color="#E5E5E5"> on the web with people who mostly</font>

15
00:00:59,010 --> 00:01:03,690
never met each other<font color="#E5E5E5"> so</font><font color="#CCCCCC"> mostly on IRC</font>

16
00:01:03,059 --> 00:01:09,090
<font color="#CCCCCC">meaning</font>

17
00:01:03,690 --> 00:01:11,759
mailing list or the<font color="#CCCCCC"> do9 forum and</font><font color="#E5E5E5"> it's</font>

18
00:01:09,090 --> 00:01:15,179
mixing lots of technologies<font color="#CCCCCC"> that were</font>

19
00:01:11,759 --> 00:01:18,599
kind<font color="#E5E5E5"> of emerging when it was</font><font color="#CCCCCC"> created so</font>

20
00:01:15,179 --> 00:01:21,720
it the idea was to replace<font color="#E5E5E5"> avi there was</font>

21
00:01:18,599 --> 00:01:24,420
all<font color="#CCCCCC"> GATT the time XML unicorn and</font>

22
00:01:21,720 --> 00:01:28,950
Semantic Web<font color="#CCCCCC"> and we mixed all of this</font>

23
00:01:24,420 --> 00:01:32,729
together to create the format<font color="#CCCCCC"> it was</font>

24
00:01:28,950 --> 00:01:35,069
developed<font color="#E5E5E5"> in a way that's inspired by</font>

25
00:01:32,729 --> 00:01:37,500
<font color="#CCCCCC">the what was done on the web</font><font color="#E5E5E5"> so</font>

26
00:01:35,069 --> 00:01:41,069
everything was open<font color="#E5E5E5"> everything was</font>

27
00:01:37,500 --> 00:01:42,899
really free<font color="#CCCCCC"> and the gold the</font><font color="#E5E5E5"> original</font>

28
00:01:41,069 --> 00:01:45,959
goal<font color="#CCCCCC"> was to have</font><font color="#E5E5E5"> a long term storage</font>

29
00:01:42,899 --> 00:01:48,410
format<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that would be</font><font color="#E5E5E5"> usable</font>

30
00:01:45,959 --> 00:01:54,119
for<font color="#E5E5E5"> 10 years for when it was created</font><font color="#CCCCCC"> in</font>

31
00:01:48,410 --> 00:01:57,000
2002<font color="#E5E5E5"> so in 2018 and still</font><font color="#CCCCCC"> you so we</font>

32
00:01:54,119 --> 00:01:59,629
reach we reach that<font color="#E5E5E5"> goal</font><font color="#CCCCCC"> and the other</font>

33
00:01:57,000 --> 00:02:03,539
thing was to have<font color="#CCCCCC"> low overhead because</font>

34
00:01:59,629 --> 00:02:07,590
we've seen since inspired by XML it's

35
00:02:03,539 --> 00:02:12,239
very verbose so we try to remove<font color="#E5E5E5"> as much</font>

36
00:02:07,590 --> 00:02:16,230
velocity<font color="#E5E5E5"> as possible and also streaming</font>

37
00:02:12,239 --> 00:02:18,500
friendly because<font color="#E5E5E5"> it were the old design</font>

38
00:02:16,230 --> 00:02:18,500
was

39
00:02:22,090 --> 00:02:27,910
<font color="#E5E5E5">whether so it's the</font><font color="#CCCCCC"> bassist format for</font>

40
00:02:25,239 --> 00:02:34,060
WebM which was created<font color="#CCCCCC"> by Google and</font>

41
00:02:27,910 --> 00:02:38,829
Mozilla<font color="#CCCCCC"> a few years ago</font><font color="#E5E5E5"> and so you don't</font>

42
00:02:34,060 --> 00:02:44,050
<font color="#E5E5E5">know it's also used as MKV there's also</font>

43
00:02:38,830 --> 00:02:49,810
<font color="#CCCCCC">mka for files</font><font color="#E5E5E5"> with only audio</font><font color="#CCCCCC"> there's</font>

44
00:02:44,050 --> 00:02:55,120
<font color="#CCCCCC">also right now ITF working group 2</font>

45
00:02:49,810 --> 00:02:57,580
standard<font color="#E5E5E5"> to standardize</font><font color="#CCCCCC"> matroska it's</font>

46
00:02:55,120 --> 00:03:00,730
called<font color="#CCCCCC"> Siller so it stands</font><font color="#E5E5E5"> for codec</font>

47
00:02:57,580 --> 00:03:04,330
encoding for lossless archiving and

48
00:03:00,730 --> 00:03:07,319
real-time<font color="#E5E5E5"> transmission</font><font color="#CCCCCC"> so the work group</font>

49
00:03:04,330 --> 00:03:10,989
is working<font color="#CCCCCC"> on IBM L which is the binary</font>

50
00:03:07,319 --> 00:03:13,660
<font color="#E5E5E5">XML that</font><font color="#CCCCCC"> Matroska is using Matroska</font>

51
00:03:10,989 --> 00:03:17,830
<font color="#E5E5E5">which is now splitting actually in three</font>

52
00:03:13,660 --> 00:03:20,019
<font color="#E5E5E5">different documents now</font><font color="#CCCCCC"> that might</font><font color="#E5E5E5"> be</font>

53
00:03:17,830 --> 00:03:24,370
<font color="#E5E5E5">all but at the time each project had</font>

54
00:03:20,019 --> 00:03:27,850
about<font color="#E5E5E5"> 13 contributors</font><font color="#CCCCCC"> 300 commits so</font>

55
00:03:24,370 --> 00:03:29,920
mostly on documentation cleaning the

56
00:03:27,850 --> 00:03:34,480
other documentation<font color="#E5E5E5"> that existed and</font>

57
00:03:29,920 --> 00:03:37,600
improving it<font color="#CCCCCC"> the</font><font color="#E5E5E5"> project</font><font color="#CCCCCC"> the workgroup</font>

58
00:03:34,480 --> 00:03:40,450
<font color="#E5E5E5">starting in 2015 and still ongoing and</font>

59
00:03:37,600 --> 00:03:43,989
still<font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> of work to be done until</font><font color="#E5E5E5"> we</font>

60
00:03:40,450 --> 00:03:46,108
<font color="#E5E5E5">have final RFC's for</font><font color="#CCCCCC"> Matroska</font><font color="#E5E5E5"> the</font>

61
00:03:43,989 --> 00:03:48,730
<font color="#CCCCCC">workgroup is</font><font color="#E5E5E5"> also working on the</font>

62
00:03:46,109 --> 00:03:52,120
<font color="#E5E5E5">standardization of</font><font color="#CCCCCC"> FF v1 which is a</font>

63
00:03:48,730 --> 00:03:56,888
lossless video format<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> flag</font>

64
00:03:52,120 --> 00:04:00,160
<font color="#E5E5E5">which I'm sure you all</font><font color="#CCCCCC"> know so my talk</font>

65
00:03:56,889 --> 00:04:04,209
<font color="#E5E5E5">today is talking about the latency in</font>

66
00:04:00,160 --> 00:04:06,970
<font color="#CCCCCC">Matroska and how it can be used and</font><font color="#E5E5E5"> how</font>

67
00:04:04,209 --> 00:04:08,530
<font color="#CCCCCC">it does it compare to other solutions</font><font color="#E5E5E5"> so</font>

68
00:04:06,970 --> 00:04:10,930
first to make<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> we all talk about</font>

69
00:04:08,530 --> 00:04:15,220
<font color="#CCCCCC">saying</font><font color="#E5E5E5"> the same thing the definition of</font>

70
00:04:10,930 --> 00:04:16,900
latency I found on Wikipedia<font color="#E5E5E5"> is latency</font>

71
00:04:15,220 --> 00:04:19,988
is a time interval<font color="#CCCCCC"> between the</font>

72
00:04:16,899 --> 00:04:22,089
stimulation<font color="#E5E5E5"> and response and or from a</font>

73
00:04:19,988 --> 00:04:24,310
more general point of view a<font color="#E5E5E5"> time delay</font>

74
00:04:22,089 --> 00:04:26,799
between<font color="#E5E5E5"> the cause and the effects of</font>

75
00:04:24,310 --> 00:04:28,590
some<font color="#CCCCCC"> physical change in the system</font>

76
00:04:26,800 --> 00:04:32,370
<font color="#E5E5E5">system</font><font color="#CCCCCC"> being of</font>

77
00:04:28,590 --> 00:04:34,888
so basically here there's a diagram<font color="#CCCCCC"> of</font>

78
00:04:32,370 --> 00:04:38,190
<font color="#E5E5E5">what's happening when you actually do</font>

79
00:04:34,889 --> 00:04:41,580
some for<font color="#E5E5E5"> example live streaming of video</font>

80
00:04:38,190 --> 00:04:44,130
and audio<font color="#CCCCCC"> so first you have for video</font>

81
00:04:41,580 --> 00:04:47,340
<font color="#E5E5E5">you have frames which go into an encoder</font>

82
00:04:44,130 --> 00:04:50,639
then maxing that means<font color="#E5E5E5"> putting it in a</font>

83
00:04:47,340 --> 00:04:54,060
format that<font color="#CCCCCC"> can be for example mixed</font>

84
00:04:50,639 --> 00:04:56,010
with a job<font color="#E5E5E5"> and also adding</font><font color="#CCCCCC"> timestamps</font>

85
00:04:54,060 --> 00:04:58,110
and<font color="#E5E5E5"> stuff like that</font>

86
00:04:56,010 --> 00:05:00,360
then it goes through<font color="#E5E5E5"> the</font><font color="#CCCCCC"> network and</font>

87
00:04:58,110 --> 00:05:03,720
<font color="#E5E5E5">then on the other side</font><font color="#CCCCCC"> does the DES</font>

88
00:05:00,360 --> 00:05:05,370
<font color="#E5E5E5">maxing so to get the encoded frames that</font>

89
00:05:03,720 --> 00:05:07,470
goes through a decoder<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you get</font>

90
00:05:05,370 --> 00:05:11,040
<font color="#E5E5E5">your friends so each of this step</font>

91
00:05:07,470 --> 00:05:13,169
actually introduces a latency<font color="#CCCCCC"> I'm not</font>

92
00:05:11,040 --> 00:05:15,810
going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about all kinds of</font>

93
00:05:13,169 --> 00:05:20,460
latencies<font color="#E5E5E5"> for example not the</font><font color="#CCCCCC"> network</font>

94
00:05:15,810 --> 00:05:24,780
but some<font color="#CCCCCC"> more involved in what mattress</font>

95
00:05:20,460 --> 00:05:28,710
care does so for example when you<font color="#E5E5E5"> okay</font>

96
00:05:24,780 --> 00:05:32,369
that's supposed to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> read</font><font color="#E5E5E5"> so the video</font>

97
00:05:28,710 --> 00:05:36,030
<font color="#E5E5E5">encoding latency for example usually you</font>

98
00:05:32,370 --> 00:05:38,580
have frames 1 2 3 4 etc that come from

99
00:05:36,030 --> 00:05:41,729
the camera then it goes<font color="#E5E5E5"> with the video</font>

100
00:05:38,580 --> 00:05:44,870
encoder and usually when you<font color="#E5E5E5"> have</font>

101
00:05:41,729 --> 00:05:47,370
something pre-recorded the codec can

102
00:05:44,870 --> 00:05:49,560
encode the friends in a different<font color="#CCCCCC"> order</font>

103
00:05:47,370 --> 00:05:52,470
<font color="#E5E5E5">than they are received</font><font color="#CCCCCC"> to have better</font>

104
00:05:49,560 --> 00:05:54,360
coding efficiency but for<font color="#CCCCCC"> live-streaming</font>

105
00:05:52,470 --> 00:05:56,400
you don't want that you<font color="#CCCCCC"> don't want</font><font color="#E5E5E5"> to</font>

106
00:05:54,360 --> 00:05:58,650
have friends<font color="#CCCCCC"> that appear very</font><font color="#E5E5E5"> late</font>

107
00:05:56,400 --> 00:06:02,370
compared<font color="#CCCCCC"> to when they're supposed</font><font color="#E5E5E5"> to do</font>

108
00:05:58,650 --> 00:06:04,349
<font color="#CCCCCC">so for live-streaming you actually have</font>

109
00:06:02,370 --> 00:06:07,110
to put<font color="#E5E5E5"> your encoder in the mode</font><font color="#CCCCCC"> that</font>

110
00:06:04,350 --> 00:06:11,220
always send the pictures in the same

111
00:06:07,110 --> 00:06:16,370
order<font color="#CCCCCC"> so basically</font><font color="#E5E5E5"> live streaming 0 is</font>

112
00:06:11,220 --> 00:06:19,470
always<font color="#CCCCCC"> a special</font><font color="#E5E5E5"> case of encoding and</font>

113
00:06:16,370 --> 00:06:23,280
maxing<font color="#E5E5E5"> and everything it's not the</font>

114
00:06:19,470 --> 00:06:25,560
general<font color="#CCCCCC"> case of how much</font><font color="#E5E5E5"> most people use</font>

115
00:06:23,280 --> 00:06:28,020
a video

116
00:06:25,560 --> 00:06:30,840
<font color="#CCCCCC">and usually but it's growing zits</font><font color="#E5E5E5"> most</font>

117
00:06:28,020 --> 00:06:33,770
<font color="#E5E5E5">people now watch</font><font color="#CCCCCC"> me videos on</font><font color="#E5E5E5"> YouTube or</font>

118
00:06:30,840 --> 00:06:36,359
<font color="#E5E5E5">whatever on</font><font color="#CCCCCC"> a new Facebook and that's</font>

119
00:06:33,770 --> 00:06:39,000
increasingly<font color="#E5E5E5"> going through the web and</font>

120
00:06:36,360 --> 00:06:42,900
network so that's becoming more<font color="#CCCCCC"> and more</font>

121
00:06:39,000 --> 00:06:47,280
important<font color="#CCCCCC"> so how does mattress caste</font>

122
00:06:42,900 --> 00:06:49,289
store information<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> the how when</font>

123
00:06:47,280 --> 00:06:52,070
<font color="#E5E5E5">you look</font><font color="#CCCCCC"> at inside a match for ask a</font>

124
00:06:49,290 --> 00:06:55,920
file you have a first very small<font color="#CCCCCC"> adder</font>

125
00:06:52,070 --> 00:06:58,650
the meta silly<font color="#E5E5E5"> tells you where these</font>

126
00:06:55,920 --> 00:07:01,770
parts are so when you read<font color="#E5E5E5"> here you can</font>

127
00:06:58,650 --> 00:07:03,750
all<font color="#E5E5E5"> quickly go here if you want to then</font>

128
00:07:01,770 --> 00:07:07,049
<font color="#E5E5E5">this parts are the actual audio and</font>

129
00:07:03,750 --> 00:07:09,210
video<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you're going to</font><font color="#E5E5E5"> read here</font>

130
00:07:07,050 --> 00:07:11,100
it's for seeking if you want to go

131
00:07:09,210 --> 00:07:14,539
quickly<font color="#E5E5E5"> to a place if you have that</font>

132
00:07:11,100 --> 00:07:18,419
information<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can go here chapters</font>

133
00:07:14,540 --> 00:07:22,710
like with regular chapters<font color="#E5E5E5"> and tags for</font>

134
00:07:18,419 --> 00:07:25,560
<font color="#CCCCCC">all metadata</font><font color="#E5E5E5"> to tag actually</font><font color="#CCCCCC"> you can</font>

135
00:07:22,710 --> 00:07:29,039
take<font color="#E5E5E5"> this</font><font color="#CCCCCC"> information but also this</font>

136
00:07:25,560 --> 00:07:31,020
information with tanks from here but in

137
00:07:29,040 --> 00:07:32,940
streaming you actually don't have<font color="#E5E5E5"> a lot</font>

138
00:07:31,020 --> 00:07:36,960
<font color="#CCCCCC">of</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> parts you only have the header</font>

139
00:07:32,940 --> 00:07:38,700
and these parts<font color="#CCCCCC"> the meta stick since</font>

140
00:07:36,960 --> 00:07:41,609
you're not going<font color="#E5E5E5"> to seek during live</font>

141
00:07:38,700 --> 00:07:43,890
streaming is useless<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cues you're not</font>

142
00:07:41,610 --> 00:07:46,620
going to sit<font color="#E5E5E5"> back so it's useless as</font>

143
00:07:43,890 --> 00:07:48,390
<font color="#CCCCCC">well you cannot introduce</font><font color="#E5E5E5"> chapters for</font>

144
00:07:46,620 --> 00:07:50,550
the same reason you<font color="#E5E5E5"> got</font><font color="#CCCCCC"> your not going</font>

145
00:07:48,390 --> 00:07:52,800
<font color="#CCCCCC">to</font><font color="#E5E5E5"> seek in the file the only one that</font>

146
00:07:50,550 --> 00:07:55,860
could be used<font color="#CCCCCC"> is tags that you</font><font color="#E5E5E5"> want</font>

147
00:07:52,800 --> 00:08:00,570
<font color="#E5E5E5">actually put before</font><font color="#CCCCCC"> send the</font><font color="#E5E5E5"> ng actual</font>

148
00:07:55,860 --> 00:08:02,880
data<font color="#CCCCCC"> so WebM is actually</font><font color="#E5E5E5"> exactly the</font>

149
00:08:00,570 --> 00:08:04,740
same as<font color="#CCCCCC"> matroska</font><font color="#E5E5E5"> it just have at the</font>

150
00:08:02,880 --> 00:08:07,140
beginning<font color="#CCCCCC"> it says we're</font><font color="#E5E5E5"> doing instead</font><font color="#CCCCCC"> of</font>

151
00:08:04,740 --> 00:08:10,290
<font color="#E5E5E5">much</font><font color="#CCCCCC"> Oscar go otherwise</font><font color="#E5E5E5"> it's the same</font>

152
00:08:07,140 --> 00:08:13,409
thing with<font color="#CCCCCC"> some feature removed so it's</font>

153
00:08:10,290 --> 00:08:14,520
basically<font color="#E5E5E5"> much</font><font color="#CCCCCC"> worse care</font><font color="#E5E5E5"> profile so the</font>

154
00:08:13,410 --> 00:08:17,550
in webaim's

155
00:08:14,520 --> 00:08:20,549
live streaming it would look exactly<font color="#CCCCCC"> the</font>

156
00:08:17,550 --> 00:08:23,160
<font color="#CCCCCC">same as in matroska but most people</font>

157
00:08:20,550 --> 00:08:26,160
don't use actually live streaming this

158
00:08:23,160 --> 00:08:28,500
way they actually<font color="#CCCCCC"> use adaptive streaming</font>

159
00:08:26,160 --> 00:08:30,300
so when<font color="#E5E5E5"> you your connection is better</font>

160
00:08:28,500 --> 00:08:33,289
you can have<font color="#E5E5E5"> better quality or your</font>

161
00:08:30,300 --> 00:08:35,849
connections but you have a lower quality

162
00:08:33,289 --> 00:08:38,169
version<font color="#E5E5E5"> that's why when you do live</font>

163
00:08:35,849 --> 00:08:39,579
streaming in<font color="#E5E5E5"> - which is</font>

164
00:08:38,169 --> 00:08:42,578
one of the version of<font color="#E5E5E5"> al-dabshe</font>

165
00:08:39,578 --> 00:08:45,609
<font color="#E5E5E5">streaming you</font><font color="#CCCCCC"> actually have for example</font>

166
00:08:42,578 --> 00:08:48,370
<font color="#E5E5E5">the audio can be split from</font><font color="#CCCCCC"> the video so</font>

167
00:08:45,610 --> 00:08:51,940
you<font color="#E5E5E5"> can have better quality video</font><font color="#CCCCCC"> with a</font>

168
00:08:48,370 --> 00:08:54,070
lower quality audio<font color="#CCCCCC"> but it the files</font>

169
00:08:51,940 --> 00:08:57,130
actually<font color="#E5E5E5"> looks the same it's always</font>

170
00:08:54,070 --> 00:09:00,310
<font color="#E5E5E5">still</font><font color="#CCCCCC"> ahead around</font><font color="#E5E5E5"> the cluster for Joe</font>

171
00:08:57,130 --> 00:09:02,709
and here<font color="#E5E5E5"> still always a</font><font color="#CCCCCC"> head-on</font><font color="#E5E5E5"> cluster</font>

172
00:09:00,310 --> 00:09:05,469
<font color="#E5E5E5">for video the only special thing is that</font>

173
00:09:02,709 --> 00:09:09,189
<font color="#CCCCCC">the</font><font color="#E5E5E5"> transition here when you go to a</font>

174
00:09:05,470 --> 00:09:12,220
better or lower quality<font color="#E5E5E5"> of bandwidth the</font>

175
00:09:09,190 --> 00:09:14,829
boundaries here have to match always and

176
00:09:12,220 --> 00:09:19,240
in all the versions of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same file</font>

177
00:09:14,829 --> 00:09:22,800
with different qualities so that's<font color="#CCCCCC"> the</font>

178
00:09:19,240 --> 00:09:22,800
that's<font color="#E5E5E5"> actually what</font>

179
00:09:25,990 --> 00:09:31,180
you are using when you're<font color="#CCCCCC"> watching</font>

180
00:09:28,360 --> 00:09:35,800
YouTube<font color="#E5E5E5"> or Netflix</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the kind of</font>

181
00:09:31,180 --> 00:09:39,939
technology<font color="#CCCCCC"> they use</font><font color="#E5E5E5"> so but life</font>

182
00:09:35,800 --> 00:09:43,240
<font color="#E5E5E5">streaming is even different because</font>

183
00:09:39,940 --> 00:09:45,100
that's for even regular faster already

184
00:09:43,240 --> 00:09:48,430
stored for a long<font color="#E5E5E5"> time but live</font>

185
00:09:45,100 --> 00:09:50,800
streaming's actually has even more

186
00:09:48,430 --> 00:09:53,709
<font color="#E5E5E5">constraint so</font><font color="#CCCCCC"> live streaming is</font>

187
00:09:50,800 --> 00:09:56,439
<font color="#E5E5E5">basically when you have the as little</font>

188
00:09:53,709 --> 00:09:59,500
time<font color="#CCCCCC"> between the eyes we saw before do</font>

189
00:09:56,440 --> 00:10:01,839
the<font color="#CCCCCC"> definition of latency isn't as</font>

190
00:09:59,500 --> 00:10:04,240
little time<font color="#E5E5E5"> possible between the moment</font>

191
00:10:01,839 --> 00:10:06,430
the frames are captured and<font color="#E5E5E5"> the friends</font>

192
00:10:04,240 --> 00:10:09,339
are received<font color="#E5E5E5"> user user so you try to</font>

193
00:10:06,430 --> 00:10:13,689
remove as<font color="#CCCCCC"> much as possible stuff that</font>

194
00:10:09,339 --> 00:10:15,760
you have so basically how does match

195
00:10:13,690 --> 00:10:17,950
<font color="#CCCCCC">risqué file</font><font color="#E5E5E5"> in live streaming so</font>

196
00:10:15,760 --> 00:10:21,310
<font color="#E5E5E5">basically a continuous stream of data</font>

197
00:10:17,950 --> 00:10:24,730
<font color="#E5E5E5">coming not it's not a file you're</font>

198
00:10:21,310 --> 00:10:27,250
reading but<font color="#CCCCCC"> a stream</font><font color="#E5E5E5"> so basically this</font>

199
00:10:24,730 --> 00:10:29,610
part is<font color="#CCCCCC"> always there and it's the</font><font color="#E5E5E5"> same</font>

200
00:10:27,250 --> 00:10:29,610
part

201
00:10:29,910 --> 00:10:35,199
so it's<font color="#E5E5E5"> this part that we end</font><font color="#CCCCCC"> here and</font>

202
00:10:32,890 --> 00:10:38,770
so is<font color="#E5E5E5"> the same structure then you have</font>

203
00:10:35,200 --> 00:10:43,660
<font color="#E5E5E5">your audio and video so I took an</font>

204
00:10:38,770 --> 00:10:46,959
example<font color="#E5E5E5"> of a file and from fragmented</font>

205
00:10:43,660 --> 00:10:49,719
mp4 and<font color="#E5E5E5"> I redid</font><font color="#CCCCCC"> it in my Truscott see</font>

206
00:10:46,959 --> 00:10:54,760
the difference so the header on<font color="#CCCCCC"> Matroska</font>

207
00:10:49,720 --> 00:10:56,860
was 460 bytes<font color="#E5E5E5"> big and then each cluster</font>

208
00:10:54,760 --> 00:11:00,760
<font color="#E5E5E5">as a header</font><font color="#CCCCCC"> we're going to see</font><font color="#E5E5E5"> that</font>

209
00:10:56,860 --> 00:11:05,050
after<font color="#E5E5E5"> and then the data the header is 40</font>

210
00:11:00,760 --> 00:11:07,899
25 bytes and<font color="#E5E5E5"> then you have the data so</font>

211
00:11:05,050 --> 00:11:10,779
<font color="#E5E5E5">the extra data is here</font><font color="#CCCCCC"> and that</font><font color="#E5E5E5"> much</font>

212
00:11:07,899 --> 00:11:13,870
data and<font color="#CCCCCC"> folk fragmented and before you</font>

213
00:11:10,779 --> 00:11:17,589
also<font color="#E5E5E5"> have a header and then the data the</font>

214
00:11:13,870 --> 00:11:22,450
<font color="#CCCCCC">the header is was two thousand and 100</font>

215
00:11:17,589 --> 00:11:26,500
bytes<font color="#E5E5E5"> and each the equivalent of a</font>

216
00:11:22,450 --> 00:11:31,120
cluster<font color="#E5E5E5"> and fragmented mp4 the overhead</font>

217
00:11:26,500 --> 00:11:33,610
is for 850<font color="#E5E5E5"> and the data so you</font><font color="#CCCCCC"> can</font>

218
00:11:31,120 --> 00:11:34,690
<font color="#CCCCCC">already see a much worse case saving</font>

219
00:11:33,610 --> 00:11:38,199
space

220
00:11:34,690 --> 00:11:40,480
so that's in more detail<font color="#E5E5E5"> what</font><font color="#CCCCCC"> a cluster</font>

221
00:11:38,199 --> 00:11:42,819
where you<font color="#CCCCCC"> actually save the frame</font><font color="#E5E5E5"> when I</font>

222
00:11:40,480 --> 00:11:46,000
say frame it<font color="#CCCCCC"> can actually be video</font><font color="#E5E5E5"> or</font>

223
00:11:42,819 --> 00:11:49,389
audio<font color="#E5E5E5"> it's exactly the same thing</font><font color="#CCCCCC"> so in</font>

224
00:11:46,000 --> 00:11:52,180
each cluster<font color="#E5E5E5"> you have one</font><font color="#CCCCCC"> timecode for</font>

225
00:11:49,389 --> 00:11:55,089
the cluster<font color="#E5E5E5"> and for each what's called</font>

226
00:11:52,180 --> 00:11:57,878
block<font color="#E5E5E5"> you have a frame and a header so</font>

227
00:11:55,089 --> 00:12:02,160
each frame<font color="#E5E5E5"> has a header that's</font><font color="#CCCCCC"> gear</font>

228
00:11:57,879 --> 00:12:06,550
gives<font color="#E5E5E5"> its timestamp and other stuff so</font>

229
00:12:02,160 --> 00:12:09,279
<font color="#CCCCCC">basically before you start</font><font color="#E5E5E5"> getting the</font>

230
00:12:06,550 --> 00:12:12,430
first<font color="#E5E5E5"> frame on a cluster</font><font color="#CCCCCC"> you have 25</font>

231
00:12:09,279 --> 00:12:14,410
bytes<font color="#E5E5E5"> and for fragmented</font><font color="#CCCCCC"> mp4</font><font color="#E5E5E5"> the</font>

232
00:12:12,430 --> 00:12:18,250
structure is a<font color="#E5E5E5"> bit more complex you have</font>

233
00:12:14,410 --> 00:12:21,699
this atom which consists of more atoms

234
00:12:18,250 --> 00:12:25,449
inside which is like<font color="#CCCCCC"> 1k</font><font color="#E5E5E5"> and then the</font>

235
00:12:21,699 --> 00:12:27,609
actual<font color="#E5E5E5"> data where you have each frame so</font>

236
00:12:25,449 --> 00:12:31,680
<font color="#E5E5E5">you have to I get all this data before</font>

237
00:12:27,610 --> 00:12:31,680
<font color="#CCCCCC">you actually get this frame so there's</font>

238
00:12:33,600 --> 00:12:35,720
and

239
00:12:38,500 --> 00:12:46,480
so here what I call frame<font color="#CCCCCC"> latins is how</font>

240
00:12:43,030 --> 00:12:49,329
many how much time or<font color="#CCCCCC"> how much data it's</font>

241
00:12:46,480 --> 00:12:51,910
kind of the same<font color="#CCCCCC"> do you need to actually</font>

242
00:12:49,330 --> 00:12:55,060
<font color="#E5E5E5">get the end of the first frame that</font><font color="#CCCCCC"> you</font>

243
00:12:51,910 --> 00:12:58,270
can send to<font color="#CCCCCC"> your</font><font color="#E5E5E5"> decoder so here for a</font>

244
00:12:55,060 --> 00:13:01,739
frame of 40k<font color="#CCCCCC"> you would have fallen for</font>

245
00:12:58,270 --> 00:13:04,270
<font color="#E5E5E5">forty thousand and twenty five bytes</font>

246
00:13:01,740 --> 00:13:06,910
<font color="#E5E5E5">before you actually can send it to</font><font color="#CCCCCC"> the</font>

247
00:13:04,270 --> 00:13:09,520
<font color="#E5E5E5">decoder for fragmented at before you</font>

248
00:13:06,910 --> 00:13:16,810
<font color="#E5E5E5">actually have to</font><font color="#CCCCCC"> have this</font><font color="#E5E5E5"> one kill and</font>

249
00:13:09,520 --> 00:13:19,720
then<font color="#CCCCCC"> 40 hundred thousand so again the</font>

250
00:13:16,810 --> 00:13:23,020
latency<font color="#CCCCCC"> is better and matroska again</font>

251
00:13:19,720 --> 00:13:25,750
this that was a<font color="#CCCCCC"> real-life sample and I</font>

252
00:13:23,020 --> 00:13:28,510
died<font color="#E5E5E5"> just transforming too much Oscar to</font>

253
00:13:25,750 --> 00:13:31,630
see the difference but it's the same and

254
00:13:28,510 --> 00:13:33,460
the lower the<font color="#CCCCCC"> bitrate</font><font color="#E5E5E5"> actually the</font>

255
00:13:31,630 --> 00:13:38,680
bigger difference it makes to use

256
00:13:33,460 --> 00:13:40,810
<font color="#CCCCCC">Matroska</font><font color="#E5E5E5"> so basically here</font><font color="#CCCCCC"> the ad the</font>

257
00:13:38,680 --> 00:13:43,420
<font color="#E5E5E5">other thing you have is buffer latency</font>

258
00:13:40,810 --> 00:13:46,270
because<font color="#E5E5E5"> as you can</font><font color="#CCCCCC"> see in in matroska</font>

259
00:13:43,420 --> 00:13:49,270
you send one frame<font color="#CCCCCC"> after the other with</font>

260
00:13:46,270 --> 00:13:52,000
<font color="#E5E5E5">it header in a fragmented and before</font>

261
00:13:49,270 --> 00:13:54,730
it's different<font color="#CCCCCC"> the header for each frame</font>

262
00:13:52,000 --> 00:13:58,120
is actually<font color="#E5E5E5"> stored at</font><font color="#CCCCCC"> the beginning so</font>

263
00:13:54,730 --> 00:14:00,550
in terms of latency<font color="#E5E5E5"> before you get you</font>

264
00:13:58,120 --> 00:14:02,380
get this<font color="#E5E5E5"> you need to know all the</font>

265
00:14:00,550 --> 00:14:05,079
friends<font color="#E5E5E5"> you're going to have in</font><font color="#CCCCCC"> that</font>

266
00:14:02,380 --> 00:14:08,560
whole big block that means<font color="#E5E5E5"> before</font><font color="#CCCCCC"> you</font>

267
00:14:05,080 --> 00:14:11,260
<font color="#E5E5E5">actually get</font><font color="#CCCCCC"> for frame</font><font color="#E5E5E5"> one you need to</font>

268
00:14:08,560 --> 00:14:16,180
<font color="#E5E5E5">have all the friends</font><font color="#CCCCCC"> and wait so you</font>

269
00:14:11,260 --> 00:14:18,939
guys<font color="#E5E5E5"> we see if so if you</font><font color="#CCCCCC"> have blocks of</font>

270
00:14:16,180 --> 00:14:22,660
<font color="#E5E5E5">two seconds in</font><font color="#CCCCCC"> app</font><font color="#E5E5E5"> data streaming then</font>

271
00:14:18,940 --> 00:14:25,750
that means you need to cache two seconds

272
00:14:22,660 --> 00:14:28,329
of data before<font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually can send it</font>

273
00:14:25,750 --> 00:14:30,250
<font color="#E5E5E5">because before</font><font color="#CCCCCC"> you can write this data</font>

274
00:14:28,330 --> 00:14:33,490
you need<font color="#CCCCCC"> to know all that</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so</font>

275
00:14:30,250 --> 00:14:35,640
<font color="#CCCCCC">that's for example in that case two</font>

276
00:14:33,490 --> 00:14:38,590
second<font color="#CCCCCC"> Latins you are in the case of</font>

277
00:14:35,640 --> 00:14:42,310
<font color="#CCCCCC">Moscow it</font><font color="#E5E5E5"> would be just that amount</font><font color="#CCCCCC"> of</font>

278
00:14:38,590 --> 00:14:43,160
data<font color="#E5E5E5"> so</font><font color="#CCCCCC"> 25 bytes</font><font color="#E5E5E5"> and then the amount of</font>

279
00:14:42,310 --> 00:14:49,479
<font color="#E5E5E5">the frame</font>

280
00:14:43,160 --> 00:14:52,939
in this case it was<font color="#CCCCCC"> 20 milliseconds and</font>

281
00:14:49,480 --> 00:14:56,210
then so we already<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that much</font><font color="#E5E5E5"> worse</font>

282
00:14:52,940 --> 00:15:02,060
<font color="#CCCCCC">car has a big advantage here</font><font color="#E5E5E5"> the other</font>

283
00:14:56,210 --> 00:15:05,360
format that's used a<font color="#CCCCCC"> lot in streaming</font>

284
00:15:02,060 --> 00:15:08,150
and that's actually<font color="#E5E5E5"> the format that was</font>

285
00:15:05,360 --> 00:15:12,500
used in Apple's adapting streaming

286
00:15:08,150 --> 00:15:15,530
format<font color="#CCCCCC"> they insisted on using</font><font color="#E5E5E5"> TS so but</font>

287
00:15:12,500 --> 00:15:21,350
<font color="#E5E5E5">now they've</font><font color="#CCCCCC"> changed using</font><font color="#E5E5E5"> fragmented mp4</font>

288
00:15:15,530 --> 00:15:24,589
as well<font color="#CCCCCC"> so the same for one frame in</font>

289
00:15:21,350 --> 00:15:28,600
<font color="#CCCCCC">matroska</font><font color="#E5E5E5"> how does it work in transport</font>

290
00:15:24,590 --> 00:15:35,240
stream so one frame is<font color="#CCCCCC"> actually cut in</font>

291
00:15:28,600 --> 00:15:40,450
<font color="#CCCCCC">184 bytes and then</font><font color="#E5E5E5"> there is each</font><font color="#CCCCCC"> of</font>

292
00:15:35,240 --> 00:15:45,590
these 184 bytes is<font color="#CCCCCC"> encoded in 188 bytes</font>

293
00:15:40,450 --> 00:15:48,050
so each as a header so four bytes header

294
00:15:45,590 --> 00:15:51,620
then a part of the frame then I had a

295
00:15:48,050 --> 00:15:55,579
part<font color="#E5E5E5"> of the frame etc so actually to get</font>

296
00:15:51,620 --> 00:15:58,070
the first frame<font color="#E5E5E5"> you actually have to get</font>

297
00:15:55,580 --> 00:16:02,710
all the parts of the frame<font color="#E5E5E5"> press all the</font>

298
00:15:58,070 --> 00:16:07,280
headers<font color="#E5E5E5"> in the case of the 40,000</font>

299
00:16:02,710 --> 00:16:09,200
kilobytes frame<font color="#E5E5E5"> the overhead extra data</font>

300
00:16:07,280 --> 00:16:12,500
you have<font color="#E5E5E5"> to download compared to the</font>

301
00:16:09,200 --> 00:16:18,380
same to<font color="#E5E5E5"> get to the end of the same frame</font>

302
00:16:12,500 --> 00:16:21,230
is a 869 computer so the 816 is the

303
00:16:18,380 --> 00:16:23,780
difference compared to the 25 bytes<font color="#E5E5E5"> so</font>

304
00:16:21,230 --> 00:16:28,220
there's also less latency<font color="#CCCCCC"> in Matroska</font>

305
00:16:23,780 --> 00:16:32,660
that transpose<font color="#E5E5E5"> trimming actually an</font>

306
00:16:28,220 --> 00:16:36,320
early<font color="#E5E5E5"> so basically we saw the difference</font>

307
00:16:32,660 --> 00:16:38,300
between<font color="#CCCCCC"> Matroska and fragmented and p4</font>

308
00:16:36,320 --> 00:16:41,180
so the eventual of much<font color="#CCCCCC"> were scale</font>

309
00:16:38,300 --> 00:16:46,010
compared to this is a little<font color="#E5E5E5"> kind of</font>

310
00:16:41,180 --> 00:16:48,479
smaller<font color="#CCCCCC"> Latin</font><font color="#E5E5E5"> overhead from</font><font color="#CCCCCC"> the network</font>

311
00:16:46,010 --> 00:16:52,420
<font color="#E5E5E5">that's actually only like</font>

312
00:16:48,480 --> 00:16:55,149
400 bytes difference between the<font color="#CCCCCC"> two</font>

313
00:16:52,420 --> 00:16:58,149
formats<font color="#E5E5E5"> so it's not</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> much but for</font>

314
00:16:55,149 --> 00:17:00,760
<font color="#CCCCCC">example if you buffer two seconds in</font>

315
00:16:58,149 --> 00:17:03,190
adaptive streaming that's<font color="#E5E5E5"> your</font><font color="#CCCCCC"> latency</font>

316
00:17:00,760 --> 00:17:07,650
that<font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have it for a 99</font>

317
00:17:03,190 --> 00:17:07,650
before<font color="#E5E5E5"> I put in much</font><font color="#CCCCCC"> worse Khalid</font>

318
00:17:14,140 --> 00:17:19,959
<font color="#E5E5E5">that I you need to get to the end of the</font>

319
00:17:17,200 --> 00:17:22,540
first frame is like two or three<font color="#CCCCCC"> percent</font>

320
00:17:19,959 --> 00:17:26,290
<font color="#CCCCCC">of data so that's data you could</font>

321
00:17:22,540 --> 00:17:30,280
actually use<font color="#CCCCCC"> for better encoding</font><font color="#E5E5E5"> in your</font>

322
00:17:26,290 --> 00:17:32,800
codec and<font color="#CCCCCC"> well endless the buffer</font>

323
00:17:30,280 --> 00:17:34,840
latency so the amount of<font color="#CCCCCC"> data you</font><font color="#E5E5E5"> need</font>

324
00:17:32,800 --> 00:17:37,060
<font color="#CCCCCC">to get to the end of the first frame is</font>

325
00:17:34,840 --> 00:17:41,199
the same<font color="#E5E5E5"> compared to and before</font><font color="#CCCCCC"> where</font>

326
00:17:37,060 --> 00:17:43,929
you<font color="#E5E5E5"> need to get the whole let's say 20</font>

327
00:17:41,200 --> 00:17:47,740
or<font color="#CCCCCC"> 40 frames before you can actually</font>

328
00:17:43,930 --> 00:17:51,880
start sending them and that's<font color="#CCCCCC"> it's</font>

329
00:17:47,740 --> 00:17:56,830
actually early<font color="#E5E5E5"> so I hope you have a lot</font>

330
00:17:51,880 --> 00:17:59,710
of<font color="#E5E5E5"> questions and I have some stickers in</font>

331
00:17:56,830 --> 00:18:03,730
my bag<font color="#E5E5E5"> and you can also go</font><font color="#CCCCCC"> and video</font>

332
00:17:59,710 --> 00:18:07,030
<font color="#E5E5E5">land</font><font color="#CCCCCC"> booth in building</font><font color="#E5E5E5"> K there's a Wheel</font>

333
00:18:03,730 --> 00:18:10,180
of<font color="#E5E5E5"> Fortune you can win love stuff stuff</font>

334
00:18:07,030 --> 00:18:12,830
and there's also some stickers there and

335
00:18:10,180 --> 00:18:16,010
also<font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you</font>

336
00:18:12,830 --> 00:18:16,010
[Applause]

337
00:18:18,930 --> 00:18:28,990
the old man hello<font color="#E5E5E5"> hello</font><font color="#CCCCCC"> alright how I</font>

338
00:18:26,620 --> 00:18:31,810
have a presentation<font color="#CCCCCC"> just</font><font color="#E5E5E5"> to tell you so</font>

339
00:18:28,990 --> 00:18:34,720
yeah<font color="#E5E5E5"> I am a bit</font><font color="#CCCCCC"> stressed</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> that</font>

340
00:18:31,810 --> 00:18:37,929
<font color="#E5E5E5">I am curious about how</font><font color="#CCCCCC"> you compute the</font>

341
00:18:34,720 --> 00:18:40,870
cluster size<font color="#E5E5E5"> before sending the second</font>

342
00:18:37,930 --> 00:18:42,670
and third frame how do you do we know

343
00:18:40,870 --> 00:18:46,060
the size<font color="#E5E5E5"> of the clusters when we will</font>

344
00:18:42,670 --> 00:19:00,010
need<font color="#E5E5E5"> to white</font><font color="#CCCCCC"> this size in would be</font><font color="#E5E5E5"> in</font>

345
00:18:46,060 --> 00:19:03,190
the between let's<font color="#E5E5E5"> say yes so yeah yeah</font>

346
00:19:00,010 --> 00:19:07,900
as<font color="#E5E5E5"> you said so since it's inspired by</font>

347
00:19:03,190 --> 00:19:12,250
<font color="#E5E5E5">XML actually each element within IBM L</font>

348
00:19:07,900 --> 00:19:15,250
as an<font color="#CCCCCC"> ID and the size of the data that</font>

349
00:19:12,250 --> 00:19:18,160
it contains<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then the</font><font color="#E5E5E5"> actual data</font>

350
00:19:15,250 --> 00:19:21,580
<font color="#E5E5E5">done in live streaming there's a feature</font>

351
00:19:18,160 --> 00:19:24,460
in<font color="#CCCCCC"> Matroska and EB</font><font color="#E5E5E5"> ml actually then</font><font color="#CCCCCC"> well</font>

352
00:19:21,580 --> 00:19:26,889
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> actually tell this element</font>

353
00:19:24,460 --> 00:19:29,560
constant contains data<font color="#E5E5E5"> but I don't know</font>

354
00:19:26,890 --> 00:19:32,050
how much so I'm not telling<font color="#E5E5E5"> you the size</font>

355
00:19:29,560 --> 00:19:35,919
and<font color="#CCCCCC"> you keep reading</font><font color="#E5E5E5"> until you find the</font>

356
00:19:32,050 --> 00:19:39,040
same cluster beginning and then it's a

357
00:19:35,920 --> 00:19:41,410
<font color="#E5E5E5">different one it's called there's</font>

358
00:19:39,040 --> 00:19:44,500
different<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to call it but usually we</font>

359
00:19:41,410 --> 00:19:47,050
<font color="#CCCCCC">call it unknown lengths and so you just</font>

360
00:19:44,500 --> 00:19:49,030
<font color="#E5E5E5">send that</font><font color="#CCCCCC"> to in your stream even though</font>

361
00:19:47,050 --> 00:19:51,250
you<font color="#E5E5E5"> don't know the size you don't need</font>

362
00:19:49,030 --> 00:19:53,379
to wait until<font color="#E5E5E5"> you know what you just</font>

363
00:19:51,250 --> 00:19:56,530
send it and<font color="#E5E5E5"> too bad and on the other</font>

364
00:19:53,380 --> 00:19:58,900
side<font color="#E5E5E5"> the paths are no it has</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

365
00:19:56,530 --> 00:20:01,660
handle that in that case how do you know

366
00:19:58,900 --> 00:20:04,420
in at which level of the<font color="#CCCCCC"> Matroska</font><font color="#E5E5E5"> you</font>

367
00:20:01,660 --> 00:20:08,560
are at the block level or<font color="#E5E5E5"> the cluster</font>

368
00:20:04,420 --> 00:20:12,280
<font color="#CCCCCC">level</font><font color="#E5E5E5"> it is with when the key of</font><font color="#CCCCCC"> mitosis</font>

369
00:20:08,560 --> 00:20:15,700
<font color="#CCCCCC">is</font><font color="#E5E5E5"> a cluster so that's how IBM</font><font color="#CCCCCC"> ml works</font>

370
00:20:12,280 --> 00:20:18,639
<font color="#E5E5E5">so to read an element the ID you</font>

371
00:20:15,700 --> 00:20:21,940
actually you have to actually<font color="#CCCCCC"> know what</font>

372
00:20:18,640 --> 00:20:26,410
the parent is and then<font color="#E5E5E5"> its parent etc so</font>

373
00:20:21,940 --> 00:20:28,660
when you find data<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> not for this</font>

374
00:20:26,410 --> 00:20:31,010
parent you look in the other parent<font color="#CCCCCC"> seed</font>

375
00:20:28,660 --> 00:20:33,410
for this<font color="#E5E5E5"> bound etcetera and then you</font>

376
00:20:31,010 --> 00:20:38,030
actually find that where it belongs<font color="#CCCCCC"> okay</font>

377
00:20:33,410 --> 00:20:47,120
thank you another<font color="#E5E5E5"> question</font><font color="#CCCCCC"> well that's</font>

378
00:20:38,030 --> 00:20:50,330
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> at the end</font><font color="#E5E5E5"> I have two in front so</font>

379
00:20:47,120 --> 00:20:53,209
mpeg-2 transport streams are able<font color="#CCCCCC"> to be</font>

380
00:20:50,330 --> 00:20:57,760
cut off at the the 188<font color="#E5E5E5"> byte boundary</font>

381
00:20:53,210 --> 00:21:00,290
<font color="#E5E5E5">which means that if you've</font><font color="#CCCCCC"> four</font>

382
00:20:57,760 --> 00:21:03,620
contribution sources happening<font color="#CCCCCC"> before</font>

383
00:21:00,290 --> 00:21:05,810
what is distributed you're able<font color="#CCCCCC"> to when</font>

384
00:21:03,620 --> 00:21:08,149
you have multiple<font color="#E5E5E5"> say streams</font><font color="#CCCCCC"> for</font>

385
00:21:05,810 --> 00:21:10,490
resiliency going into your final encode

386
00:21:08,150 --> 00:21:13,100
you can just mix<font color="#CCCCCC"> and match if you've got</font>

387
00:21:10,490 --> 00:21:15,710
network problems or other<font color="#CCCCCC"> kinds of say</font>

388
00:21:13,100 --> 00:21:17,719
encoder issues<font color="#E5E5E5"> are you able or not able</font>

389
00:21:15,710 --> 00:21:32,050
to do that<font color="#CCCCCC"> with mate roster</font><font color="#E5E5E5"> in a similar</font>

390
00:21:17,720 --> 00:21:32,050
way<font color="#E5E5E5"> given the format</font><font color="#CCCCCC"> to question</font>

391
00:21:35,929 --> 00:21:41,760
<font color="#E5E5E5">okay so about</font><font color="#CCCCCC"> live-streaming</font><font color="#E5E5E5"> have been</font>

392
00:21:39,480 --> 00:21:48,090
there been thoughts about program

393
00:21:41,760 --> 00:21:48,539
metadata yet such as EPG<font color="#E5E5E5"> and things like</font>

394
00:21:48,090 --> 00:21:50,908
<font color="#E5E5E5">that</font>

395
00:21:48,539 --> 00:21:53,519
well in the case<font color="#E5E5E5"> of adaptive streaming</font>

396
00:21:50,909 --> 00:21:59,029
usually the<font color="#E5E5E5"> metadata are not in the</font>

397
00:21:53,519 --> 00:21:59,029
stream<font color="#E5E5E5"> it's it can be in the manifest so</font>

398
00:22:00,769 --> 00:22:07,010
so in adaptive streaming<font color="#E5E5E5"> a manifest is</font>

399
00:22:04,409 --> 00:22:10,740
actually<font color="#CCCCCC"> an</font><font color="#E5E5E5"> external file which</font>

400
00:22:07,010 --> 00:22:13,470
<font color="#E5E5E5">describes where to find these files for</font>

401
00:22:10,740 --> 00:22:15,389
example<font color="#CCCCCC"> with a general rule</font><font color="#E5E5E5"> they're not</font>

402
00:22:13,470 --> 00:22:18,659
rewriting<font color="#E5E5E5"> the file every</font><font color="#CCCCCC"> time a new</font>

403
00:22:15,389 --> 00:22:22,139
<font color="#CCCCCC">segment comes and they can put all kinds</font>

404
00:22:18,659 --> 00:22:25,830
<font color="#E5E5E5">of data in there it's it's not related</font>

405
00:22:22,139 --> 00:22:29,158
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the actual data</font><font color="#CCCCCC"> yes but in case of a</font>

406
00:22:25,830 --> 00:22:33,629
single stream life so like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> like I</font>

407
00:22:29,159 --> 00:22:37,500
<font color="#E5E5E5">said earlier you</font><font color="#CCCCCC"> could actually put</font>

408
00:22:33,630 --> 00:22:40,320
these tags so tags you<font color="#CCCCCC"> can like the</font>

409
00:22:37,500 --> 00:22:42,929
author or the<font color="#E5E5E5"> date it was produce or you</font>

410
00:22:40,320 --> 00:22:45,990
can put all<font color="#CCCCCC"> kinds of stuff</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

411
00:22:42,929 --> 00:22:48,929
<font color="#E5E5E5">actually put it here</font><font color="#CCCCCC"> and because it's a</font>

412
00:22:45,990 --> 00:22:52,409
live stream<font color="#CCCCCC"> you could actually put here</font>

413
00:22:48,929 --> 00:22:54,720
and here and<font color="#E5E5E5"> you can add a new</font><font color="#CCCCCC"> one</font>

414
00:22:52,409 --> 00:22:57,389
during<font color="#E5E5E5"> the streaming to actually change</font>

415
00:22:54,720 --> 00:22:59,700
the data<font color="#E5E5E5"> well like if you</font><font color="#CCCCCC"> play a song</font>

416
00:22:57,389 --> 00:23:02,010
and<font color="#CCCCCC"> then that song</font><font color="#E5E5E5"> changes when you</font><font color="#CCCCCC"> have</font>

417
00:22:59,700 --> 00:23:05,070
new<font color="#CCCCCC"> metadata that you can</font><font color="#E5E5E5"> introduce in</font>

418
00:23:02,010 --> 00:23:08,549
the middle<font color="#E5E5E5"> it's it actually exists for</font>

419
00:23:05,070 --> 00:23:10,950
mp3 streaming and you get<font color="#CCCCCC"> ID 3 or I</font>

420
00:23:08,549 --> 00:23:12,658
don't<font color="#E5E5E5"> remember</font><font color="#CCCCCC"> format in the middle of</font>

421
00:23:10,950 --> 00:23:14,580
the stream that<font color="#CCCCCC"> you have to pass and</font>

422
00:23:12,659 --> 00:23:17,490
then you get the new song that's playing

423
00:23:14,580 --> 00:23:21,408
it could be<font color="#CCCCCC"> also done at the</font><font color="#E5E5E5"> same way</font>

424
00:23:17,490 --> 00:23:21,409
with<font color="#CCCCCC"> Matroska</font><font color="#E5E5E5"> okay thank you</font>

425
00:23:27,570 --> 00:23:33,029
I feel that you're mixing<font color="#E5E5E5"> explanation on</font>

426
00:23:30,450 --> 00:23:35,999
file format<font color="#E5E5E5"> and what you put on the</font><font color="#CCCCCC"> wire</font>

427
00:23:33,029 --> 00:23:38,609
<font color="#E5E5E5">for doing the</font><font color="#CCCCCC"> streaming</font><font color="#E5E5E5"> and you are</font>

428
00:23:35,999 --> 00:23:41,729
comparing fragment that mpeg-4 which is

429
00:23:38,609 --> 00:23:44,580
a file<font color="#CCCCCC"> format with the streaming which</font>

430
00:23:41,729 --> 00:23:47,639
is maybe a<font color="#E5E5E5"> chalice or or - whatever</font><font color="#CCCCCC"> and</font>

431
00:23:44,580 --> 00:23:49,619
why<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> you compare to the other ways</font>

432
00:23:47,639 --> 00:23:55,349
<font color="#CCCCCC">people</font><font color="#E5E5E5"> are doing low latency streaming</font>

433
00:23:49,619 --> 00:24:00,379
like RTP or frag or mg<font color="#CCCCCC"> pack which are</font>

434
00:23:55,349 --> 00:24:02,339
<font color="#E5E5E5">the low latency solution</font><font color="#CCCCCC"> today's well</font>

435
00:24:00,379 --> 00:24:05,189
<font color="#E5E5E5">okay</font>

436
00:24:02,339 --> 00:24:08,158
compared<font color="#CCCCCC"> to RTP RTP is a network thing</font>

437
00:24:05,190 --> 00:24:10,919
and<font color="#CCCCCC"> usually they actually there's all</font>

438
00:24:08,159 --> 00:24:13,979
kinds<font color="#E5E5E5"> of formats for RTP but usually</font>

439
00:24:10,919 --> 00:24:16,190
there's not<font color="#CCCCCC"> even a container</font><font color="#E5E5E5"> what that</font>

440
00:24:13,979 --> 00:24:20,159
would be a<font color="#CCCCCC"> mattress guy in this case and</font>

441
00:24:16,190 --> 00:24:23,580
what I'm<font color="#E5E5E5"> talking about here</font><font color="#CCCCCC"> is actually</font>

442
00:24:20,159 --> 00:24:26,039
<font color="#CCCCCC">either files for</font><font color="#E5E5E5"> elapsing streaming</font>

443
00:24:23,580 --> 00:24:29,580
<font color="#E5E5E5">because but that's well you can still</font>

444
00:24:26,039 --> 00:24:32,549
write on the server<font color="#E5E5E5"> while people read it</font>

445
00:24:29,580 --> 00:24:35,428
which is cannot be done in<font color="#E5E5E5"> fragment in</font>

446
00:24:32,549 --> 00:24:37,859
mp4<font color="#CCCCCC"> that's that's why it's mixed between</font>

447
00:24:35,429 --> 00:24:40,259
<font color="#E5E5E5">file formats and streaming format</font>

448
00:24:37,859 --> 00:24:43,289
because<font color="#E5E5E5"> in the case of</font><font color="#CCCCCC"> Matroska it can</font>

449
00:24:40,259 --> 00:24:47,309
be both<font color="#CCCCCC"> in the case</font><font color="#E5E5E5"> of fragmented mp4 it</font>

450
00:24:43,289 --> 00:24:49,950
cannot but compared to RTP<font color="#E5E5E5"> I mean it's</font>

451
00:24:47,309 --> 00:24:53,279
not<font color="#CCCCCC"> the same goal you</font><font color="#E5E5E5"> can probably and</font>

452
00:24:49,950 --> 00:24:56,639
<font color="#E5E5E5">you do get better latency with RTP but</font>

453
00:24:53,279 --> 00:24:58,979
then you<font color="#E5E5E5"> get you don't scale that well</font>

454
00:24:56,639 --> 00:25:01,738
or you have other issues<font color="#E5E5E5"> and that's what</font>

455
00:24:58,979 --> 00:25:03,899
people<font color="#E5E5E5"> on the web at least they're not</font>

456
00:25:01,739 --> 00:25:06,809
<font color="#E5E5E5">using</font><font color="#CCCCCC"> that because</font><font color="#E5E5E5"> that's not how</font>

457
00:25:03,899 --> 00:25:09,988
they're taught<font color="#E5E5E5"> now in</font><font color="#CCCCCC"> dr. technology</font>

458
00:25:06,809 --> 00:25:11,999
<font color="#CCCCCC">were</font><font color="#E5E5E5"> but for example</font><font color="#CCCCCC"> RTP</font><font color="#E5E5E5"> is used for</font>

459
00:25:09,989 --> 00:25:16,169
<font color="#CCCCCC">example if you have twitch or other</font>

460
00:25:11,999 --> 00:25:19,049
stuff I think<font color="#CCCCCC"> Twitter live the client</font><font color="#E5E5E5"> is</font>

461
00:25:16,169 --> 00:25:22,739
<font color="#CCCCCC">actually sending to their server</font><font color="#E5E5E5"> in RTP</font>

462
00:25:19,049 --> 00:25:24,929
format<font color="#CCCCCC"> but then for distribution that's</font>

463
00:25:22,739 --> 00:25:27,229
not a good format for them they need

464
00:25:24,929 --> 00:25:30,140
<font color="#CCCCCC">something else</font>

465
00:25:27,229 --> 00:25:38,149
thank you Steve

466
00:25:30,140 --> 00:25:38,149
[Applause]

