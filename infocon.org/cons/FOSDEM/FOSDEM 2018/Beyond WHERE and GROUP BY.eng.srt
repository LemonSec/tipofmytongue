1
00:00:06,630 --> 00:00:14,530
sorry for this let's talk beyond where

2
00:00:09,639 --> 00:00:16,869
and<font color="#CCCCCC"> goodbye yeah</font><font color="#E5E5E5"> I'm gonna start</font><font color="#CCCCCC"> from</font>

3
00:00:14,530 --> 00:00:18,970
what everybody<font color="#E5E5E5"> knows and this is that</font>

4
00:00:16,869 --> 00:00:21,820
<font color="#CCCCCC">part of SQL that appeared in</font><font color="#E5E5E5"> the very</font>

5
00:00:18,970 --> 00:00:24,340
first planet as<font color="#E5E5E5"> well 86 and this is</font><font color="#CCCCCC"> f</font>

6
00:00:21,820 --> 00:00:26,919
girl<font color="#CCCCCC"> let's select</font><font color="#E5E5E5"> this as we know from</font>

7
00:00:24,340 --> 00:00:28,210
where I grew<font color="#E5E5E5"> by having order by and</font>

8
00:00:26,919 --> 00:00:30,340
limit although<font color="#E5E5E5"> it's not standard so I</font>

9
00:00:28,210 --> 00:00:32,200
didn't put on<font color="#CCCCCC"> the slide it works</font>

10
00:00:30,340 --> 00:00:34,329
<font color="#CCCCCC">everyone</font><font color="#E5E5E5"> knows that I hope everybody's</font>

11
00:00:32,200 --> 00:00:38,230
using that that's fine but really<font color="#E5E5E5"> it's</font>

12
00:00:34,329 --> 00:00:40,320
after 86 it's the time of those 3.1

13
00:00:38,230 --> 00:00:44,129
anybody's using<font color="#CCCCCC"> those 3.1 here</font>

14
00:00:40,320 --> 00:00:47,140
well I<font color="#E5E5E5"> don't you know okay one friend</font>

15
00:00:44,130 --> 00:00:48,970
<font color="#CCCCCC">but</font><font color="#E5E5E5"> actually the technology</font><font color="#CCCCCC"> and software</font>

16
00:00:47,140 --> 00:00:53,230
<font color="#CCCCCC">and</font><font color="#E5E5E5"> hardware move a little bit ahead</font>

17
00:00:48,970 --> 00:00:54,970
from from 86<font color="#E5E5E5"> so why wouldn't we look at</font>

18
00:00:53,230 --> 00:00:57,940
what SQL<font color="#E5E5E5"> scientist</font><font color="#CCCCCC"> or why do we need</font><font color="#E5E5E5"> to</font>

19
00:00:54,970 --> 00:01:01,300
limit ourselves<font color="#E5E5E5"> this</font><font color="#CCCCCC"> eighty nineteen</font>

20
00:00:57,940 --> 00:01:03,250
<font color="#CCCCCC">eighty-six standard the next it's gonna</font>

21
00:01:01,300 --> 00:01:05,560
stand out<font color="#CCCCCC"> of</font><font color="#E5E5E5"> head</font><font color="#CCCCCC"> interesting stuff and</font>

22
00:01:03,250 --> 00:01:07,299
yeah I'm talking only about select<font color="#CCCCCC"> could</font>

23
00:01:05,560 --> 00:01:08,920
<font color="#E5E5E5">be</font><font color="#CCCCCC"> on to</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> go by</font><font color="#E5E5E5"> so trigger stored</font>

24
00:01:07,299 --> 00:01:13,000
procedures all<font color="#E5E5E5"> the stuff are completely</font>

25
00:01:08,920 --> 00:01:15,580
out<font color="#CCCCCC"> of the top so the cosine of was a</font>

26
00:01:13,000 --> 00:01:17,830
<font color="#E5E5E5">scale 92 and it introduced the concept</font>

27
00:01:15,580 --> 00:01:20,440
of set operations where every select<font color="#E5E5E5"> is</font>

28
00:01:17,830 --> 00:01:22,030
looked as as a set<font color="#E5E5E5"> of rows and then you</font>

29
00:01:20,440 --> 00:01:24,009
can do set operations with them and

30
00:01:22,030 --> 00:01:25,810
<font color="#E5E5E5">Union again</font><font color="#CCCCCC"> probably everybody knows</font>

31
00:01:24,010 --> 00:01:26,200
<font color="#E5E5E5">that it wasn't</font><font color="#CCCCCC"> misc well for many many</font>

32
00:01:25,810 --> 00:01:29,080
years

33
00:01:26,200 --> 00:01:31,420
if you have<font color="#CCCCCC"> to selects the Union will</font>

34
00:01:29,080 --> 00:01:33,400
show both row rows that are present<font color="#E5E5E5"> in</font>

35
00:01:31,420 --> 00:01:36,610
both<font color="#CCCCCC"> flights</font><font color="#E5E5E5"> at least and at least</font><font color="#CCCCCC"> once</font>

36
00:01:33,400 --> 00:01:39,100
<font color="#CCCCCC">aligned now there were two other set</font>

37
00:01:36,610 --> 00:01:41,530
operations introduced in<font color="#CCCCCC"> S Curl 92</font><font color="#E5E5E5"> in</font>

38
00:01:39,100 --> 00:01:44,679
<font color="#E5E5E5">this girl yeah learn to do and they will</font>

39
00:01:41,530 --> 00:01:47,530
intersect intersect<font color="#CCCCCC"> will show only rose</font>

40
00:01:44,680 --> 00:01:49,000
<font color="#CCCCCC">that</font><font color="#E5E5E5"> wasn't in both selects and if you</font>

41
00:01:47,530 --> 00:01:51,430
will draw chakra flag in kindergarten

42
00:01:49,000 --> 00:01:53,830
<font color="#E5E5E5">which are called</font><font color="#CCCCCC"> Venn diagrams</font><font color="#E5E5E5"> and then</font>

43
00:01:51,430 --> 00:01:55,180
you will see<font color="#CCCCCC"> that yes</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> the</font>

44
00:01:53,830 --> 00:01:58,439
intersection<font color="#E5E5E5"> of those two circles will</font>

45
00:01:55,180 --> 00:02:01,150
be present<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the final result set and</font>

46
00:01:58,439 --> 00:02:02,949
<font color="#CCCCCC">except which it will show only wrote</font>

47
00:02:01,150 --> 00:02:04,479
<font color="#E5E5E5">representing the first select but not</font>

48
00:02:02,950 --> 00:02:08,229
present in the second select<font color="#E5E5E5"> they're</font>

49
00:02:04,479 --> 00:02:09,908
both part in<font color="#E5E5E5"> mérida</font><font color="#CCCCCC"> bitten see next</font><font color="#E5E5E5"> is</font>

50
00:02:08,229 --> 00:02:12,519
<font color="#E5E5E5">called standard is</font><font color="#CCCCCC"> had an interesting</font>

51
00:02:09,908 --> 00:02:14,649
<font color="#E5E5E5">feature</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> car 99</font><font color="#CCCCCC"> in it introduced</font>

52
00:02:12,519 --> 00:02:16,989
the<font color="#E5E5E5"> concept of common table expressions</font>

53
00:02:14,650 --> 00:02:18,720
now who<font color="#E5E5E5"> knows what is common a common</font>

54
00:02:16,989 --> 00:02:22,240
table expressions

55
00:02:18,720 --> 00:02:24,700
<font color="#E5E5E5">okay good but for others I'll do an</font>

56
00:02:22,240 --> 00:02:26,320
introduction<font color="#CCCCCC"> so this is sub-query in the</font>

57
00:02:24,700 --> 00:02:27,850
from<font color="#E5E5E5"> plot you can see that</font><font color="#CCCCCC"> for</font>

58
00:02:26,320 --> 00:02:30,040
circulating<font color="#CCCCCC"> it's booting the</font><font color="#E5E5E5"> front</font><font color="#CCCCCC"> loss</font>

59
00:02:27,850 --> 00:02:31,810
of<font color="#E5E5E5"> the other query it returns some</font>

60
00:02:30,040 --> 00:02:34,350
results and<font color="#E5E5E5"> that outer query transfer</font>

61
00:02:31,810 --> 00:02:37,270
selects from the result of the sub query

62
00:02:34,350 --> 00:02:41,049
again this existed in my spell<font color="#E5E5E5"> for quite</font>

63
00:02:37,270 --> 00:02:43,300
<font color="#CCCCCC">a while</font><font color="#E5E5E5"> and common table expression can</font>

64
00:02:41,050 --> 00:02:44,620
say pretty<font color="#E5E5E5"> much the same thing but in a</font>

65
00:02:43,300 --> 00:02:46,780
slightly<font color="#CCCCCC"> different syntax when I first</font>

66
00:02:44,620 --> 00:02:49,090
you specify the sub query give it a<font color="#E5E5E5"> name</font>

67
00:02:46,780 --> 00:02:53,110
and<font color="#E5E5E5"> then you select from it so it's</font>

68
00:02:49,090 --> 00:02:55,390
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> much just syntax sugar to do the</font>

69
00:02:53,110 --> 00:02:58,690
same thing with<font color="#CCCCCC"> different words</font><font color="#E5E5E5"> it does</font>

70
00:02:55,390 --> 00:03:00,640
have benefits of better<font color="#CCCCCC"> like better</font>

71
00:02:58,690 --> 00:03:02,770
readability in some cases particularly

72
00:03:00,640 --> 00:03:06,070
have nested<font color="#CCCCCC"> Subway's</font><font color="#E5E5E5"> and getting</font>

73
00:03:02,770 --> 00:03:08,590
<font color="#CCCCCC">difficult to read and in particular when</font>

74
00:03:06,070 --> 00:03:10,269
<font color="#CCCCCC">you have given</font><font color="#E5E5E5"> yourself join a sub query</font>

75
00:03:08,590 --> 00:03:12,970
<font color="#E5E5E5">then it's much better to</font><font color="#CCCCCC"> you City</font>

76
00:03:10,270 --> 00:03:15,280
because just imagine<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is small club</font>

77
00:03:12,970 --> 00:03:17,230
where it's in production<font color="#E5E5E5"> like four pages</font>

78
00:03:15,280 --> 00:03:18,670
on<font color="#CCCCCC"> your screen</font><font color="#E5E5E5"> then you</font><font color="#CCCCCC"> have eight pages</font>

79
00:03:17,230 --> 00:03:19,780
of<font color="#CCCCCC"> two identical sub queries and</font><font color="#E5E5E5"> in to</font>

80
00:03:18,670 --> 00:03:21,190
scroll back<font color="#E5E5E5"> and forth</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> to see</font>

81
00:03:19,780 --> 00:03:22,330
whether<font color="#E5E5E5"> it's the same software or</font>

82
00:03:21,190 --> 00:03:26,470
there's a slight<font color="#CCCCCC"> difference and column</font>

83
00:03:22,330 --> 00:03:28,600
names with<font color="#CCCCCC"> City</font><font color="#E5E5E5"> justified ones but</font>

84
00:03:26,470 --> 00:03:30,280
really it's not<font color="#E5E5E5"> much</font><font color="#CCCCCC"> different from</font>

85
00:03:28,600 --> 00:03:33,609
somewheres in the front claws and I

86
00:03:30,280 --> 00:03:38,110
wouldn't be<font color="#E5E5E5"> even talking about them if</font>

87
00:03:33,610 --> 00:03:40,450
not for recursive cities the recursive

88
00:03:38,110 --> 00:03:42,490
cities is much more interesting feature

89
00:03:40,450 --> 00:03:45,100
<font color="#E5E5E5">it looks like it's almost the same as</font>

90
00:03:42,490 --> 00:03:47,740
<font color="#CCCCCC">non</font><font color="#E5E5E5"> recursive but in fact it's pretty</font>

91
00:03:45,100 --> 00:03:49,060
much game<font color="#E5E5E5"> changer it allows to do things</font>

92
00:03:47,740 --> 00:03:50,230
that are not<font color="#CCCCCC"> possible this code before</font>

93
00:03:49,060 --> 00:03:52,690
so it's not a different way of<font color="#E5E5E5"> saying</font>

94
00:03:50,230 --> 00:03:54,369
the<font color="#CCCCCC"> same thing and let's see how a</font>

95
00:03:52,690 --> 00:03:55,990
<font color="#E5E5E5">course what the courtesy to you look</font>

96
00:03:54,370 --> 00:03:59,800
like<font color="#E5E5E5"> that's the keyboard recursive and</font>

97
00:03:55,990 --> 00:04:02,260
<font color="#E5E5E5">there and then there's a name of</font><font color="#CCCCCC"> city</font>

98
00:03:59,800 --> 00:04:04,330
<font color="#CCCCCC">then</font><font color="#E5E5E5"> there's a hearse select just like</font>

99
00:04:02,260 --> 00:04:07,600
with a regular<font color="#CCCCCC"> city and then does both</font>

100
00:04:04,330 --> 00:04:10,300
Union<font color="#E5E5E5"> all and another select which is</font>

101
00:04:07,600 --> 00:04:11,260
defined in<font color="#CCCCCC"> terms of</font><font color="#E5E5E5"> this very city that</font>

102
00:04:10,300 --> 00:04:13,090
is being<font color="#E5E5E5"> defined</font>

103
00:04:11,260 --> 00:04:16,000
<font color="#E5E5E5">city is defined using itself recursively</font>

104
00:04:13,090 --> 00:04:18,480
<font color="#CCCCCC">which is why it's called recursive</font><font color="#E5E5E5"> so</font>

105
00:04:16,000 --> 00:04:21,370
how such a thing could would be<font color="#E5E5E5"> executed</font>

106
00:04:18,480 --> 00:04:23,890
in this recursive<font color="#E5E5E5"> city we have a select</font>

107
00:04:21,370 --> 00:04:28,419
from the folks<font color="#E5E5E5"> table where name equals</font>

108
00:04:23,890 --> 00:04:31,240
<font color="#E5E5E5">me and the result gets a row</font><font color="#CCCCCC"> for me</font>

109
00:04:28,419 --> 00:04:33,549
let me<font color="#E5E5E5"> the Union all and restart we</font><font color="#CCCCCC"> did</font>

110
00:04:31,240 --> 00:04:35,409
<font color="#E5E5E5">a</font><font color="#CCCCCC"> joint</font><font color="#E5E5E5"> of what was already found that</font>

111
00:04:33,550 --> 00:04:37,629
<font color="#E5E5E5">is the row with me with the table folks</font>

112
00:04:35,409 --> 00:04:40,180
and they select<font color="#CCCCCC"> that second select finds</font>

113
00:04:37,629 --> 00:04:42,669
<font color="#E5E5E5">my father and mother then we do another</font>

114
00:04:40,180 --> 00:04:45,279
<font color="#E5E5E5">select the part after Union all and</font>

115
00:04:42,669 --> 00:04:47,710
<font color="#E5E5E5">rejoin this</font><font color="#CCCCCC"> new to found</font><font color="#E5E5E5"> rows with the</font>

116
00:04:45,279 --> 00:04:50,110
<font color="#E5E5E5">table folks and we find my grandparents</font>

117
00:04:47,710 --> 00:04:51,789
then<font color="#CCCCCC"> that's another select these four</font>

118
00:04:50,110 --> 00:04:53,919
<font color="#E5E5E5">rows are joined</font><font color="#CCCCCC"> with the table folks in</font>

119
00:04:51,789 --> 00:04:56,318
will find eight more<font color="#CCCCCC"> rows and so on and</font>

120
00:04:53,919 --> 00:04:58,568
so forth until the<font color="#E5E5E5"> joint</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> delivering</font>

121
00:04:56,319 --> 00:05:01,120
<font color="#E5E5E5">results until</font><font color="#CCCCCC"> the table Fox is exhausted</font>

122
00:04:58,569 --> 00:05:04,650
this<font color="#E5E5E5"> is how this occurs the city exactly</font>

123
00:05:01,120 --> 00:05:07,569
<font color="#E5E5E5">is executed so</font><font color="#CCCCCC"> in this you see this is</font>

124
00:05:04,650 --> 00:05:10,330
this<font color="#E5E5E5"> table it records tree-like data</font>

125
00:05:07,569 --> 00:05:11,469
structure<font color="#CCCCCC"> where this</font><font color="#E5E5E5"> children and</font>

126
00:05:10,330 --> 00:05:13,779
parents<font color="#E5E5E5"> and their</font><font color="#CCCCCC"> parents and their</font>

127
00:05:11,469 --> 00:05:16,860
<font color="#CCCCCC">parents</font><font color="#E5E5E5"> and traversing recursive data</font>

128
00:05:13,779 --> 00:05:19,029
structure in SQL was not possible<font color="#E5E5E5"> in</font>

129
00:05:16,860 --> 00:05:21,939
standard before recursive cities were

130
00:05:19,029 --> 00:05:23,560
introduced<font color="#CCCCCC"> today are very</font><font color="#E5E5E5"> useful for</font>

131
00:05:21,939 --> 00:05:26,879
these three like structures but also

132
00:05:23,560 --> 00:05:30,669
<font color="#E5E5E5">they useful for data generation and</font>

133
00:05:26,879 --> 00:05:32,469
usually say you have<font color="#CCCCCC"> we just useful for</font>

134
00:05:30,669 --> 00:05:34,810
<font color="#CCCCCC">report</font><font color="#E5E5E5"> so you have an attendance table</font>

135
00:05:32,469 --> 00:05:36,490
for some employee<font color="#E5E5E5"> I don't know the</font>

136
00:05:34,810 --> 00:05:39,550
<font color="#E5E5E5">student and you need to know what days</font>

137
00:05:36,490 --> 00:05:41,289
is locked off then you you would do<font color="#E5E5E5"> live</font>

138
00:05:39,550 --> 00:05:44,949
join with the table for<font color="#E5E5E5"> all working days</font>

139
00:05:41,289 --> 00:05:46,029
for<font color="#CCCCCC"> a particular year and before</font><font color="#E5E5E5"> those</font>

140
00:05:44,949 --> 00:05:48,659
cities you would need probably to

141
00:05:46,029 --> 00:05:51,550
<font color="#CCCCCC">present this table and fill it in</font>

142
00:05:48,659 --> 00:05:54,509
something<font color="#E5E5E5"> PHP for example with for</font><font color="#CCCCCC"> four</font>

143
00:05:51,550 --> 00:05:56,770
days now<font color="#E5E5E5"> you can generate those tables</font>

144
00:05:54,509 --> 00:05:59,169
whenever you<font color="#E5E5E5"> need them using the cursor</font>

145
00:05:56,770 --> 00:06:00,609
cities<font color="#CCCCCC"> in that</font><font color="#E5E5E5"> just for the change I'm</font>

146
00:05:59,169 --> 00:06:03,128
not<font color="#E5E5E5"> doing working</font><font color="#CCCCCC"> days I'm doing all</font>

147
00:06:00,610 --> 00:06:04,569
weekends in<font color="#E5E5E5"> the year 2020 so this occurs</font>

148
00:06:03,129 --> 00:06:07,389
the city it starts from the January

149
00:06:04,569 --> 00:06:09,879
<font color="#CCCCCC">first in 2020 and then every next row is</font>

150
00:06:07,389 --> 00:06:12,219
<font color="#CCCCCC">the previous</font><font color="#E5E5E5"> row plus one day so we will</font>

151
00:06:09,879 --> 00:06:14,139
have<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the days in</font><font color="#E5E5E5"> this year and</font><font color="#CCCCCC"> will</font>

152
00:06:12,219 --> 00:06:16,419
continue<font color="#CCCCCC"> the</font><font color="#E5E5E5"> generation as long as we</font>

153
00:06:14,139 --> 00:06:18,669
stand<font color="#E5E5E5"> we stay within the boundaries of</font>

154
00:06:16,419 --> 00:06:20,680
the<font color="#CCCCCC"> year 2020</font><font color="#E5E5E5"> so we will have a city</font>

155
00:06:18,669 --> 00:06:22,240
<font color="#E5E5E5">that generates all the days for this</font>

156
00:06:20,680 --> 00:06:24,310
<font color="#E5E5E5">year</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we just need to select</font>

157
00:06:22,240 --> 00:06:27,039
only<font color="#E5E5E5"> weekends for it and we all have the</font>

158
00:06:24,310 --> 00:06:28,689
table of<font color="#CCCCCC"> the weekends in this year</font><font color="#E5E5E5"> you</font>

159
00:06:27,039 --> 00:06:30,068
can do it you can join<font color="#E5E5E5"> this table with</font>

160
00:06:28,689 --> 00:06:33,129
<font color="#CCCCCC">another table you</font><font color="#E5E5E5"> can do some</font>

161
00:06:30,069 --> 00:06:34,449
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> reports from it in the third</font>

162
00:06:33,129 --> 00:06:37,750
example<font color="#CCCCCC"> its</font><font color="#E5E5E5"> life even more complex</font>

163
00:06:34,449 --> 00:06:39,159
<font color="#E5E5E5">example it's say</font><font color="#CCCCCC"> nano social it's very</font>

164
00:06:37,750 --> 00:06:41,110
small<font color="#CCCCCC"> social network just eight people</font>

165
00:06:39,159 --> 00:06:41,500
and the<font color="#CCCCCC"> French</font><font color="#E5E5E5"> table saying whose</font>

166
00:06:41,110 --> 00:06:45,970
friends

167
00:06:41,500 --> 00:06:48,430
<font color="#E5E5E5">whom and</font><font color="#CCCCCC"> for and also</font><font color="#E5E5E5"> how to work with</font>

168
00:06:45,970 --> 00:06:50,500
<font color="#CCCCCC">gaff</font><font color="#E5E5E5"> start using the</font><font color="#CCCCCC"> corset ease</font><font color="#E5E5E5"> say we</font>

169
00:06:48,430 --> 00:06:53,500
want to<font color="#CCCCCC"> find a chain of friends</font><font color="#E5E5E5"> that</font>

170
00:06:50,500 --> 00:06:56,020
connects<font color="#E5E5E5"> Chris and Jason so again we</font>

171
00:06:53,500 --> 00:06:57,340
start<font color="#CCCCCC"> with grease</font><font color="#E5E5E5"> and then we start with</font>

172
00:06:56,020 --> 00:07:00,190
<font color="#E5E5E5">the grease name and then we start</font>

173
00:06:57,340 --> 00:07:04,900
happened friends<font color="#CCCCCC"> to it until we get a</font>

174
00:07:00,190 --> 00:07:06,640
chain to Jason so you join for every

175
00:07:04,900 --> 00:07:07,810
next<font color="#E5E5E5"> row we joined the previous row with</font>

176
00:07:06,640 --> 00:07:09,909
the table friends to find<font color="#E5E5E5"> the next</font>

177
00:07:07,810 --> 00:07:12,520
friend because we<font color="#E5E5E5"> don't want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> cycles</font>

178
00:07:09,910 --> 00:07:14,470
in our path of friends<font color="#CCCCCC"> they make</font><font color="#E5E5E5"> sure</font>

179
00:07:12,520 --> 00:07:16,479
that<font color="#CCCCCC"> the new friend is not already</font><font color="#E5E5E5"> in</font>

180
00:07:14,470 --> 00:07:16,930
the<font color="#E5E5E5"> path and if you have found such a</font>

181
00:07:16,480 --> 00:07:19,810
friend

182
00:07:16,930 --> 00:07:21,910
we just<font color="#E5E5E5"> append it to the path we will do</font>

183
00:07:19,810 --> 00:07:24,610
that<font color="#E5E5E5"> until</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> reach the user with the ID</font>

184
00:07:21,910 --> 00:07:26,980
equals 4 which<font color="#E5E5E5"> is Jason so if I'm around</font>

185
00:07:24,610 --> 00:07:31,750
this city<font color="#E5E5E5"> I'll get all the possible</font>

186
00:07:26,980 --> 00:07:33,400
<font color="#CCCCCC">paths between Chris</font><font color="#E5E5E5"> and Jason less for</font><font color="#CCCCCC"> 3</font>

187
00:07:31,750 --> 00:07:35,320
short paths and<font color="#CCCCCC"> 2 little bit longer bus</font>

188
00:07:33,400 --> 00:07:39,599
<font color="#E5E5E5">so that's how you can do graph</font>

189
00:07:35,320 --> 00:07:41,950
structures in<font color="#CCCCCC"> City so it's a summary</font>

190
00:07:39,600 --> 00:07:43,900
there are<font color="#E5E5E5"> non recursive cities and they</font>

191
00:07:41,950 --> 00:07:46,180
are not very<font color="#E5E5E5"> interesting they are just a</font>

192
00:07:43,900 --> 00:07:48,159
<font color="#E5E5E5">different</font><font color="#CCCCCC"> syntax for sub-queries in the</font>

193
00:07:46,180 --> 00:07:50,410
from clause<font color="#E5E5E5"> although they are more</font>

194
00:07:48,160 --> 00:07:52,120
<font color="#CCCCCC">readable and</font><font color="#E5E5E5"> some cases dependent</font>

195
00:07:50,410 --> 00:07:54,130
<font color="#E5E5E5">implementation they could be better</font>

196
00:07:52,120 --> 00:07:55,810
optimized<font color="#E5E5E5"> when and then sub-queries in</font>

197
00:07:54,130 --> 00:07:57,070
the from clause in the<font color="#CCCCCC"> cursus city</font>

198
00:07:55,810 --> 00:07:58,570
that's a totally different<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> it</font>

199
00:07:57,070 --> 00:08:00,340
<font color="#E5E5E5">allows you</font><font color="#CCCCCC"> to do things</font><font color="#E5E5E5"> that were not</font>

200
00:07:58,570 --> 00:08:02,620
<font color="#E5E5E5">possible with a spell before so not new</font>

201
00:08:00,340 --> 00:08:05,200
possibilities<font color="#CCCCCC"> it allows you to</font><font color="#E5E5E5"> query</font>

202
00:08:02,620 --> 00:08:06,910
<font color="#E5E5E5">here</font><font color="#CCCCCC"> at AAG data and graphs</font><font color="#E5E5E5"> and trees it</font>

203
00:08:05,200 --> 00:08:08,740
can<font color="#CCCCCC"> be used</font><font color="#E5E5E5"> for data</font><font color="#CCCCCC"> generation on the</font>

204
00:08:06,910 --> 00:08:10,330
fly whenever<font color="#E5E5E5"> you need them and they</font>

205
00:08:08,740 --> 00:08:11,979
actually make a nice girl<font color="#CCCCCC"> so I've heard</font>

206
00:08:10,330 --> 00:08:14,440
<font color="#CCCCCC">a turing-complete so if you google you</font>

207
00:08:11,979 --> 00:08:16,330
can<font color="#E5E5E5"> find cities that do the salsa doko</font>

208
00:08:14,440 --> 00:08:17,890
that do<font color="#CCCCCC"> brain-fuck interpreter nice girl</font>

209
00:08:16,330 --> 00:08:22,570
and<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> craziest stuff that you</font>

210
00:08:17,890 --> 00:08:24,640
never want to<font color="#E5E5E5"> do with this girl</font><font color="#CCCCCC"> logon</font>

211
00:08:22,570 --> 00:08:26,229
<font color="#E5E5E5">fast</font><font color="#CCCCCC"> for not next</font><font color="#E5E5E5"> distance cosine of his</font>

212
00:08:24,640 --> 00:08:30,130
<font color="#CCCCCC">girl 2003 introduced</font><font color="#E5E5E5"> the concept of</font>

213
00:08:26,229 --> 00:08:33,549
<font color="#E5E5E5">window functions so what are in the</font>

214
00:08:30,130 --> 00:08:35,049
first<font color="#E5E5E5"> just shortly what are the types of</font>

215
00:08:33,549 --> 00:08:36,010
<font color="#CCCCCC">functions in the existence curve so</font>

216
00:08:35,049 --> 00:08:38,978
there are number<font color="#CCCCCC"> of functions in this</font>

217
00:08:36,010 --> 00:08:41,409
girl<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are invoked</font><font color="#CCCCCC"> one Perot and they</font>

218
00:08:38,979 --> 00:08:43,360
deliver as many<font color="#E5E5E5"> results as there</font><font color="#CCCCCC"> are</font>

219
00:08:41,409 --> 00:08:46,180
also if you select<font color="#CCCCCC"> type</font><font color="#E5E5E5"> from a table</font><font color="#CCCCCC"> you</font>

220
00:08:43,360 --> 00:08:48,310
<font color="#E5E5E5">get a table of</font><font color="#CCCCCC"> 10,000</font><font color="#E5E5E5"> rows when you use</font>

221
00:08:46,180 --> 00:08:50,650
normal function like<font color="#CCCCCC"> an card or</font><font color="#E5E5E5"> md5 then</font>

222
00:08:48,310 --> 00:08:52,119
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> 10,000 results there are group</font>

223
00:08:50,650 --> 00:08:54,880
<font color="#E5E5E5">functions there are aggregate functions</font>

224
00:08:52,120 --> 00:08:56,830
<font color="#E5E5E5">they invoked one they invoked one</font>

225
00:08:54,880 --> 00:08:58,720
they deliver one result<font color="#E5E5E5"> per group of</font>

226
00:08:56,830 --> 00:09:01,270
rows and there is all depend on<font color="#E5E5E5"> the</font>

227
00:08:58,720 --> 00:09:03,940
whole group<font color="#CCCCCC"> so if you have those hundred</font>

228
00:09:01,270 --> 00:09:06,160
<font color="#E5E5E5">groups of hundreds in each group the</font>

229
00:09:03,940 --> 00:09:06,640
normal function will deliver<font color="#E5E5E5"> 10,000</font>

230
00:09:06,160 --> 00:09:08,319
results

231
00:09:06,640 --> 00:09:10,240
well aggregate function<font color="#CCCCCC"> look at 100</font>

232
00:09:08,320 --> 00:09:13,270
results<font color="#E5E5E5"> and</font><font color="#CCCCCC"> to enough actions there's</font>

233
00:09:10,240 --> 00:09:16,000
something in the middle<font color="#E5E5E5"> they still they</font>

234
00:09:13,270 --> 00:09:19,420
deliver one result<font color="#E5E5E5"> per row but the</font>

235
00:09:16,000 --> 00:09:21,220
result depends on the whole group as I

236
00:09:19,420 --> 00:09:23,020
don't<font color="#CCCCCC"> look</font><font color="#E5E5E5"> that they don't have the</font>

237
00:09:21,220 --> 00:09:26,310
general<font color="#E5E5E5"> vision looking at every row they</font>

238
00:09:23,020 --> 00:09:31,210
can see overalls<font color="#E5E5E5"> around it as well and</font>

239
00:09:26,310 --> 00:09:33,489
about all rows<font color="#E5E5E5"> around this is example to</font>

240
00:09:31,210 --> 00:09:35,890
<font color="#E5E5E5">explain what is right they call the</font>

241
00:09:33,490 --> 00:09:37,840
window functions<font color="#E5E5E5"> it's typical example</font>

242
00:09:35,890 --> 00:09:42,280
it's called a<font color="#E5E5E5"> moving average if you have</font>

243
00:09:37,840 --> 00:09:44,080
some data<font color="#E5E5E5"> that</font><font color="#CCCCCC"> rotate like a have high</font>

244
00:09:42,280 --> 00:09:46,360
<font color="#E5E5E5">frequency noise and then change slowly</font>

245
00:09:44,080 --> 00:09:48,490
<font color="#E5E5E5">over time and you want to see this slow</font>

246
00:09:46,360 --> 00:09:50,410
change in pattern<font color="#E5E5E5"> then you need to</font>

247
00:09:48,490 --> 00:09:51,820
<font color="#E5E5E5">remove the high frequency noise and this</font>

248
00:09:50,410 --> 00:09:54,490
<font color="#E5E5E5">is often can be done using the moving</font>

249
00:09:51,820 --> 00:09:56,530
average<font color="#E5E5E5"> basically for every data point</font>

250
00:09:54,490 --> 00:09:58,420
you take few points around it<font color="#E5E5E5"> a new</font>

251
00:09:56,530 --> 00:10:01,329
average<font color="#CCCCCC"> of them all and put it</font><font color="#E5E5E5"> inside of</font>

252
00:09:58,420 --> 00:10:02,500
<font color="#E5E5E5">this data point and do that in SQL</font><font color="#CCCCCC"> if</font>

253
00:10:01,330 --> 00:10:03,850
you ever need<font color="#E5E5E5"> to do that in</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> scale</font>

254
00:10:02,500 --> 00:10:06,370
because<font color="#E5E5E5"> usual it's not done in the scale</font>

255
00:10:03,850 --> 00:10:10,420
you need to<font color="#CCCCCC"> calculate the error</font><font color="#E5E5E5"> you</font>

256
00:10:06,370 --> 00:10:12,790
create the average<font color="#E5E5E5"> for overalls starting</font>

257
00:10:10,420 --> 00:10:15,069
from<font color="#E5E5E5"> two rows before current data point</font>

258
00:10:12,790 --> 00:10:16,810
in two rows up to two rows after the

259
00:10:15,070 --> 00:10:18,280
<font color="#E5E5E5">current data point so</font><font color="#CCCCCC"> you have a moving</font>

260
00:10:16,810 --> 00:10:19,780
<font color="#E5E5E5">window that moves with the current row</font>

261
00:10:18,280 --> 00:10:22,150
and that's why they're<font color="#E5E5E5"> called window</font>

262
00:10:19,780 --> 00:10:25,480
functions in your<font color="#CCCCCC"> on average</font><font color="#E5E5E5"> photos</font>

263
00:10:22,150 --> 00:10:27,670
within<font color="#CCCCCC"> this window</font><font color="#E5E5E5"> a more practical</font>

264
00:10:25,480 --> 00:10:31,030
example something<font color="#E5E5E5"> you more likely</font><font color="#CCCCCC"> to be</font>

265
00:10:27,670 --> 00:10:34,000
<font color="#E5E5E5">doing ever and SQL this is a data for</font>

266
00:10:31,030 --> 00:10:36,550
hypothetical example bank which tourists

267
00:10:34,000 --> 00:10:38,170
not database transactions but financial

268
00:10:36,550 --> 00:10:39,760
transaction table<font color="#E5E5E5"> called transactions</font>

269
00:10:38,170 --> 00:10:44,680
<font color="#E5E5E5">and every transaction</font><font color="#CCCCCC"> has a transaction</font>

270
00:10:39,760 --> 00:10:46,480
ID<font color="#CCCCCC"> a customer ID and amount of example</font>

271
00:10:44,680 --> 00:10:49,930
monetary units which<font color="#CCCCCC"> I'll call coins</font>

272
00:10:46,480 --> 00:10:51,970
here because it's the<font color="#CCCCCC"> hype of the</font><font color="#E5E5E5"> day so</font>

273
00:10:49,930 --> 00:10:53,199
and this table<font color="#CCCCCC"> in table transactions</font>

274
00:10:51,970 --> 00:10:54,250
tourists what users did work

275
00:10:53,200 --> 00:10:57,250
transactions for<font color="#CCCCCC"> the and the first</font>

276
00:10:54,250 --> 00:10:59,830
transaction first<font color="#E5E5E5"> user took 50 coins out</font>

277
00:10:57,250 --> 00:11:01,570
<font color="#E5E5E5">of his account then 30 was</font><font color="#CCCCCC"> a put 50</font>

278
00:10:59,830 --> 00:11:04,720
coins<font color="#E5E5E5"> into his account and so on and so</font>

279
00:11:01,570 --> 00:11:06,310
on<font color="#E5E5E5"> and say we want to do</font><font color="#CCCCCC"> two internal to</font>

280
00:11:04,720 --> 00:11:08,200
balance of the balance<font color="#E5E5E5"> on each account</font>

281
00:11:06,310 --> 00:11:11,770
<font color="#CCCCCC">after every operation</font><font color="#E5E5E5"> something</font>

282
00:11:08,200 --> 00:11:14,740
this<font color="#E5E5E5"> so after the first user took 50-50</font>

283
00:11:11,770 --> 00:11:18,100
corn<font color="#E5E5E5"> coins they count the bounces - 54</font>

284
00:11:14,740 --> 00:11:20,260
seconds plus 50 then 50 years<font color="#E5E5E5"> I put 950</font>

285
00:11:18,100 --> 00:11:21,370
<font color="#CCCCCC">on his account</font><font color="#E5E5E5"> balance will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> nine and</font>

286
00:11:20,260 --> 00:11:24,670
<font color="#E5E5E5">hundred and so on and so on</font>

287
00:11:21,370 --> 00:11:26,890
<font color="#E5E5E5">so how can we do this in</font><font color="#CCCCCC"> his girl</font><font color="#E5E5E5"> this</font>

288
00:11:24,670 --> 00:11:28,689
is possible<font color="#E5E5E5"> not even very difficulty we</font>

289
00:11:26,890 --> 00:11:31,120
just need to write<font color="#CCCCCC"> a</font><font color="#E5E5E5"> sub query that will</font>

290
00:11:28,690 --> 00:11:34,600
sum all the transactions<font color="#E5E5E5"> for this</font>

291
00:11:31,120 --> 00:11:36,760
particular<font color="#E5E5E5"> user the transaction ID that</font>

292
00:11:34,600 --> 00:11:40,030
goes above and up to the current

293
00:11:36,760 --> 00:11:42,010
transaction<font color="#E5E5E5"> so summing all those amounts</font>

294
00:11:40,030 --> 00:11:42,339
<font color="#CCCCCC">we will get the run in total and it</font>

295
00:11:42,010 --> 00:11:44,740
works

296
00:11:42,340 --> 00:11:47,230
but yeah so what are the problems<font color="#CCCCCC"> with</font>

297
00:11:44,740 --> 00:11:48,640
<font color="#E5E5E5">this approach first it's well it's not</font>

298
00:11:47,230 --> 00:11:49,270
difficult<font color="#E5E5E5"> but it's not exactly</font><font color="#CCCCCC"> easy</font>

299
00:11:48,640 --> 00:11:51,640
<font color="#E5E5E5">either</font>

300
00:11:49,270 --> 00:11:52,930
so to understand what this software is

301
00:11:51,640 --> 00:11:54,550
doing<font color="#E5E5E5"> the action to look at it in</font>

302
00:11:52,930 --> 00:11:56,439
<font color="#E5E5E5">generating</font><font color="#CCCCCC"> you've had a few times trying</font>

303
00:11:54,550 --> 00:11:58,390
<font color="#E5E5E5">to understand yes that</font><font color="#CCCCCC"> you're some</font>

304
00:11:56,440 --> 00:12:00,910
<font color="#E5E5E5"> this user and</font><font color="#CCCCCC"> then you understand</font>

305
00:11:58,390 --> 00:12:02,980
<font color="#CCCCCC">that it's wrong internal and how this</font>

306
00:12:00,910 --> 00:12:05,469
sub query would<font color="#E5E5E5"> be executed so for every</font>

307
00:12:02,980 --> 00:12:07,000
row in the result<font color="#E5E5E5"> table</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> would</font>

308
00:12:05,470 --> 00:12:09,370
need to read through<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> rows in the</font>

309
00:12:07,000 --> 00:12:11,950
<font color="#E5E5E5">table find rows with</font><font color="#CCCCCC"> the correct</font>

310
00:12:09,370 --> 00:12:14,170
customer<font color="#CCCCCC"> ID incorrectly</font><font color="#E5E5E5"> transaction ID</font>

311
00:12:11,950 --> 00:12:16,180
and then sum them<font color="#E5E5E5"> up however all need to</font>

312
00:12:14,170 --> 00:12:17,740
scan<font color="#E5E5E5"> the</font><font color="#CCCCCC"> table and read the rows so</font>

313
00:12:16,180 --> 00:12:19,870
it'll be<font color="#CCCCCC"> complex it will be quadratic</font>

314
00:12:17,740 --> 00:12:21,790
<font color="#E5E5E5">and if you have the table ten times</font>

315
00:12:19,870 --> 00:12:24,010
larger<font color="#E5E5E5"> the query will take 100 times</font>

316
00:12:21,790 --> 00:12:26,230
longer<font color="#CCCCCC"> so it not</font><font color="#E5E5E5"> always a practical</font>

317
00:12:24,010 --> 00:12:28,689
approach<font color="#CCCCCC"> in the other hand you can do</font>

318
00:12:26,230 --> 00:12:31,120
the same thing with SQL with window

319
00:12:28,690 --> 00:12:33,480
functions when you need to<font color="#E5E5E5"> within</font><font color="#CCCCCC"> the</font>

320
00:12:31,120 --> 00:12:36,190
<font color="#CCCCCC">function need to sum all the roles and</font>

321
00:12:33,480 --> 00:12:37,090
<font color="#CCCCCC">the window will be between unbounded</font>

322
00:12:36,190 --> 00:12:39,220
proceeding<font color="#CCCCCC"> that is from the very</font>

323
00:12:37,090 --> 00:12:42,130
beginning<font color="#E5E5E5"> and up to the</font><font color="#CCCCCC"> current row and</font>

324
00:12:39,220 --> 00:12:44,530
this<font color="#E5E5E5"> is by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way a very rare if not</font>

325
00:12:42,130 --> 00:12:47,170
unique case where SQL standard is not

326
00:12:44,530 --> 00:12:48,760
very unknown very unknown unknowingly

327
00:12:47,170 --> 00:12:51,040
where both<font color="#E5E5E5"> because this is the default</font>

328
00:12:48,760 --> 00:12:54,130
<font color="#CCCCCC">behavior</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> gesture</font><font color="#E5E5E5"> I meet the</font>

329
00:12:51,040 --> 00:12:56,140
window specification and then<font color="#E5E5E5"> you get a</font>

330
00:12:54,130 --> 00:12:59,710
<font color="#CCCCCC">very concise subway very concise query</font>

331
00:12:56,140 --> 00:13:01,420
so<font color="#E5E5E5"> it's first it's a lot shorter</font><font color="#CCCCCC"> to</font>

332
00:12:59,710 --> 00:13:03,040
write and it's easier<font color="#CCCCCC"> to read because</font>

333
00:13:01,420 --> 00:13:05,349
you immediately<font color="#CCCCCC"> see the design in total</font>

334
00:13:03,040 --> 00:13:08,110
but<font color="#CCCCCC"> the</font><font color="#E5E5E5"> most important part is that SQL</font>

335
00:13:05,350 --> 00:13:10,210
sir<font color="#CCCCCC"> let's sure Marie</font><font color="#E5E5E5"> DB whatever also</font>

336
00:13:08,110 --> 00:13:11,710
understands<font color="#E5E5E5"> that this is running total</font>

337
00:13:10,210 --> 00:13:13,630
and if you don't<font color="#E5E5E5"> need to do a software</font><font color="#CCCCCC"> e</font>

338
00:13:11,710 --> 00:13:16,120
because how<font color="#E5E5E5"> would you do the running</font>

339
00:13:13,630 --> 00:13:17,980
total with a pen<font color="#CCCCCC"> and</font><font color="#E5E5E5"> paper when you see</font>

340
00:13:16,120 --> 00:13:19,390
an<font color="#CCCCCC"> x transaction of the</font><font color="#E5E5E5"> user</font><font color="#CCCCCC"> it takes</font>

341
00:13:17,980 --> 00:13:20,269
the<font color="#E5E5E5"> previous balance and you add the</font>

342
00:13:19,390 --> 00:13:22,249
<font color="#E5E5E5">amount of the</font>

343
00:13:20,269 --> 00:13:23,809
<font color="#E5E5E5">next separation so you don't need to</font>

344
00:13:22,249 --> 00:13:25,850
read the<font color="#CCCCCC"> whole table every time</font><font color="#E5E5E5"> to</font>

345
00:13:23,809 --> 00:13:27,410
calculate<font color="#CCCCCC"> the bonds for every row</font><font color="#E5E5E5"> this</font>

346
00:13:25,850 --> 00:13:29,240
<font color="#CCCCCC">is</font><font color="#E5E5E5"> exactly what many people do in this</font>

347
00:13:27,410 --> 00:13:30,529
<font color="#E5E5E5">case for every new euro</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> will take the</font>

348
00:13:29,240 --> 00:13:33,410
<font color="#E5E5E5">previous</font><font color="#CCCCCC"> balance it</font><font color="#E5E5E5"> can add the current</font>

349
00:13:30,529 --> 00:13:35,809
<font color="#E5E5E5">value so it will not do this scanning</font>

350
00:13:33,410 --> 00:13:38,118
table for every row it a little the

351
00:13:35,809 --> 00:13:40,399
liner complexity if you have your table

352
00:13:38,119 --> 00:13:42,740
<font color="#CCCCCC">10 times 10 times</font><font color="#E5E5E5"> larger</font><font color="#CCCCCC"> greater</font><font color="#E5E5E5"> will be</font>

353
00:13:40,399 --> 00:13:44,749
<font color="#E5E5E5">only</font><font color="#CCCCCC"> you'll take on</font><font color="#E5E5E5"> 10 times longer and</font>

354
00:13:42,740 --> 00:13:46,730
<font color="#CCCCCC">I did short benchmarks</font><font color="#E5E5E5"> directly on this</font>

355
00:13:44,749 --> 00:13:48,679
laptop<font color="#E5E5E5"> not very</font><font color="#CCCCCC"> scientific</font><font color="#E5E5E5"> but you can</font>

356
00:13:46,730 --> 00:13:51,589
see that<font color="#E5E5E5"> subcommittee approach it gets</font>

357
00:13:48,679 --> 00:13:54,139
totally unusable very quickly<font color="#CCCCCC"> so</font><font color="#E5E5E5"> three</font>

358
00:13:51,589 --> 00:13:56,110
<font color="#E5E5E5">hours</font><font color="#CCCCCC"> 400,000 throws and then I put an</font>

359
00:13:54,139 --> 00:13:59,119
<font color="#E5E5E5">index on</font><font color="#CCCCCC"> that the best</font><font color="#E5E5E5"> possible index</font>

360
00:13:56,110 --> 00:13:59,869
tune for this<font color="#E5E5E5"> particular</font><font color="#CCCCCC"> subway</font><font color="#E5E5E5"> to make</font>

361
00:13:59,119 --> 00:14:02,449
the most of it

362
00:13:59,869 --> 00:14:05,360
<font color="#E5E5E5">and it's helped a lot and the</font><font color="#CCCCCC"> query</font>

363
00:14:02,449 --> 00:14:06,979
become actually<font color="#CCCCCC"> useful</font><font color="#E5E5E5"> and usable it</font>

364
00:14:05,360 --> 00:14:09,199
could be used up<font color="#CCCCCC"> to honey thousand rows</font>

365
00:14:06,980 --> 00:14:11,389
<font color="#CCCCCC">but still the</font><font color="#E5E5E5"> pure execution time grows</font>

366
00:14:09,199 --> 00:14:13,219
rather quickly<font color="#E5E5E5"> and I would think</font><font color="#CCCCCC"> that if</font>

367
00:14:11,389 --> 00:14:14,779
I<font color="#E5E5E5"> would add a hundred times more rows it</font>

368
00:14:13,220 --> 00:14:16,819
will be just<font color="#E5E5E5"> as unusable as the first</font>

369
00:14:14,779 --> 00:14:19,100
sub<font color="#E5E5E5"> query approach another convenor</font>

370
00:14:16,819 --> 00:14:21,529
function<font color="#CCCCCC"> it grows</font><font color="#E5E5E5"> it's not only much</font>

371
00:14:19,100 --> 00:14:23,929
<font color="#CCCCCC">faster</font><font color="#E5E5E5"> always much faster it also grows</font>

372
00:14:21,529 --> 00:14:26,420
much slower so even if I<font color="#E5E5E5"> would use a</font>

373
00:14:23,929 --> 00:14:29,119
hundred<font color="#E5E5E5"> times larger table it would</font>

374
00:14:26,420 --> 00:14:33,679
<font color="#E5E5E5">probably be perfectly usable even</font><font color="#CCCCCC"> with</font>

375
00:14:29,119 --> 00:14:35,720
the tables mid lunch so what<font color="#CCCCCC"> are window</font>

376
00:14:33,679 --> 00:14:38,119
functions<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> function is they you</font>

377
00:14:35,720 --> 00:14:39,980
provide a<font color="#CCCCCC"> useful way to avoid slows out</font>

378
00:14:38,119 --> 00:14:41,540
<font color="#CCCCCC">places and self joins</font><font color="#E5E5E5"> and they provide</font>

379
00:14:39,980 --> 00:14:44,029
<font color="#E5E5E5">better readability and more important</font>

380
00:14:41,540 --> 00:14:45,699
you<font color="#CCCCCC"> can better convey the meaning of</font>

381
00:14:44,029 --> 00:14:48,049
<font color="#E5E5E5">what</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to do to the optimizer</font><font color="#CCCCCC"> so</font>

382
00:14:45,699 --> 00:14:51,219
<font color="#CCCCCC">it can optimize</font><font color="#E5E5E5"> the credit but and</font><font color="#CCCCCC"> they</font>

383
00:14:48,049 --> 00:14:55,309
<font color="#CCCCCC">you it</font><font color="#E5E5E5"> results in much faster queries</font>

384
00:14:51,220 --> 00:14:58,069
<font color="#CCCCCC">now fast forward in time we get SQL 2011</font>

385
00:14:55,309 --> 00:14:59,449
and this<font color="#E5E5E5"> quote</font><font color="#CCCCCC"> : was write system</font>

386
00:14:58,069 --> 00:15:03,079
version tables introduced in<font color="#CCCCCC"> school</font>

387
00:14:59,449 --> 00:15:05,719
standard 2011<font color="#E5E5E5"> so what are those systems</font>

388
00:15:03,079 --> 00:15:09,258
are<font color="#E5E5E5"> some tables</font><font color="#CCCCCC"> let</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> describe</font><font color="#E5E5E5"> through</font>

389
00:15:05,720 --> 00:15:12,230
or<font color="#E5E5E5"> rather different problems</font><font color="#CCCCCC"> that could</font>

390
00:15:09,259 --> 00:15:13,790
be solved with system version tables<font color="#E5E5E5"> so</font>

391
00:15:12,230 --> 00:15:14,029
I don't know if this ever happened to

392
00:15:13,790 --> 00:15:17,559
you

393
00:15:14,029 --> 00:15:19,850
it did happen<font color="#E5E5E5"> to</font><font color="#CCCCCC"> me quite a lot although</font>

394
00:15:17,559 --> 00:15:23,480
not really<font color="#E5E5E5"> in</font><font color="#CCCCCC"> my skull</font><font color="#E5E5E5"> command line</font>

395
00:15:19,850 --> 00:15:26,119
prompt<font color="#E5E5E5"> but yeah if you</font><font color="#CCCCCC"> mean</font><font color="#E5E5E5"> there is a</font>

396
00:15:23,480 --> 00:15:28,149
<font color="#E5E5E5">real use case for undoing statements</font>

397
00:15:26,119 --> 00:15:30,620
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you didn't actually</font><font color="#E5E5E5"> want to do</font>

398
00:15:28,149 --> 00:15:32,779
another<font color="#E5E5E5"> use case would</font><font color="#CCCCCC"> be doing unleash</font>

399
00:15:30,620 --> 00:15:33,500
on historical data comparing how did

400
00:15:32,779 --> 00:15:35,750
your user<font color="#E5E5E5"> base</font>

401
00:15:33,500 --> 00:15:37,250
last year what people were buying two

402
00:15:35,750 --> 00:15:40,490
years ago people compared to<font color="#CCCCCC"> both people</font>

403
00:15:37,250 --> 00:15:42,470
<font color="#E5E5E5">are</font><font color="#CCCCCC"> buying now or what they're clicking</font>

404
00:15:40,490 --> 00:15:46,880
<font color="#E5E5E5">on or I don't know what hotels in</font>

405
00:15:42,470 --> 00:15:48,470
<font color="#CCCCCC">booking</font><font color="#E5E5E5"> and the third use case is if you</font>

406
00:15:46,880 --> 00:15:50,660
look at your<font color="#E5E5E5"> logs and you find out</font><font color="#CCCCCC"> that</font>

407
00:15:48,470 --> 00:15:51,740
<font color="#E5E5E5">for some</font><font color="#CCCCCC"> reason if a data breach half a</font>

408
00:15:50,660 --> 00:15:54,620
year<font color="#E5E5E5"> ago and it didn't actually notice</font>

409
00:15:51,740 --> 00:15:56,240
that and now you need to dig it up in

410
00:15:54,620 --> 00:15:57,710
unit understand<font color="#CCCCCC"> what data might have</font>

411
00:15:56,240 --> 00:15:58,910
been leaked<font color="#CCCCCC"> and what users need to</font>

412
00:15:57,710 --> 00:16:02,000
<font color="#E5E5E5">change their password</font><font color="#CCCCCC"> and so on this</font>

413
00:15:58,910 --> 00:16:03,829
forensic<font color="#E5E5E5"> data analysis in this these use</font>

414
00:16:02,000 --> 00:16:06,500
cases<font color="#E5E5E5"> all can be solved with system</font>

415
00:16:03,830 --> 00:16:08,420
version tables but this is not<font color="#E5E5E5"> the case</font>

416
00:16:06,500 --> 00:16:11,900
when SQL standard is not unknown<font color="#CCCCCC"> you</font>

417
00:16:08,420 --> 00:16:13,430
<font color="#CCCCCC">verbose</font><font color="#E5E5E5"> so so let's take this is a</font>

418
00:16:11,900 --> 00:16:15,140
normal mode system version table and

419
00:16:13,430 --> 00:16:17,239
let's make<font color="#E5E5E5"> a system version so according</font>

420
00:16:15,140 --> 00:16:19,040
<font color="#CCCCCC">to</font><font color="#E5E5E5"> SQL standard first we need to add two</font>

421
00:16:17,240 --> 00:16:21,230
columns<font color="#E5E5E5"> which are time stamped with</font>

422
00:16:19,040 --> 00:16:22,699
microseconds<font color="#CCCCCC"> they generated columns and</font>

423
00:16:21,230 --> 00:16:24,560
<font color="#E5E5E5">the first one is generate always a slow</font>

424
00:16:22,700 --> 00:16:26,630
start<font color="#CCCCCC"> and</font><font color="#E5E5E5"> second is generate always</font>

425
00:16:24,560 --> 00:16:28,790
<font color="#CCCCCC">wrong and then</font><font color="#E5E5E5"> enjoy</font><font color="#CCCCCC"> the special</font>

426
00:16:26,630 --> 00:16:30,980
incantation<font color="#CCCCCC"> a period for system time</font>

427
00:16:28,790 --> 00:16:32,990
with those two columns and after that

428
00:16:30,980 --> 00:16:34,490
you need<font color="#E5E5E5"> to specify the type this tables</font>

429
00:16:32,990 --> 00:16:35,840
clear to resist erosion<font color="#E5E5E5"> and then you</font>

430
00:16:34,490 --> 00:16:38,360
have a system<font color="#E5E5E5"> version table according</font><font color="#CCCCCC"> to</font>

431
00:16:35,840 --> 00:16:39,740
<font color="#CCCCCC">the</font><font color="#E5E5E5"> SQL standard and green many DB</font>

432
00:16:38,360 --> 00:16:40,760
thought that first<font color="#E5E5E5"> is a little</font><font color="#CCCCCC"> bit to</font>

433
00:16:39,740 --> 00:16:43,010
<font color="#CCCCCC">your borscht or</font><font color="#E5E5E5"> taste</font>

434
00:16:40,760 --> 00:16:44,300
<font color="#E5E5E5">and second he will need to select from</font>

435
00:16:43,010 --> 00:16:45,770
<font color="#E5E5E5">that you just want to have the table</font>

436
00:16:44,300 --> 00:16:46,699
system<font color="#CCCCCC"> doesn't we need to select we</font>

437
00:16:45,770 --> 00:16:48,560
don't really<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to see those</font>

438
00:16:46,700 --> 00:16:51,160
<font color="#CCCCCC">timestamps</font><font color="#E5E5E5"> they just garbage</font><font color="#CCCCCC"> because we</font>

439
00:16:48,560 --> 00:16:54,079
want<font color="#CCCCCC"> to see real</font><font color="#E5E5E5"> data but version so</font>

440
00:16:51,160 --> 00:16:56,000
<font color="#E5E5E5">those SQL standard syntax</font><font color="#CCCCCC"> it's optional</font>

441
00:16:54,080 --> 00:16:58,310
<font color="#E5E5E5">and you can draw it and then</font><font color="#CCCCCC"> table will</font>

442
00:16:56,000 --> 00:17:01,180
still be system version<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you just</font>

443
00:16:58,310 --> 00:17:03,560
<font color="#E5E5E5">won't see timestamps in you later and</font>

444
00:17:01,180 --> 00:17:05,569
why would you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do that because if</font>

445
00:17:03,560 --> 00:17:07,129
you<font color="#CCCCCC"> have a system version table then you</font>

446
00:17:05,569 --> 00:17:08,899
can do this magic<font color="#E5E5E5"> thing so you can</font>

447
00:17:07,130 --> 00:17:10,699
<font color="#E5E5E5">select your select from a table and if</font>

448
00:17:08,900 --> 00:17:12,829
so let you select<font color="#E5E5E5"> on the table and after</font>

449
00:17:10,699 --> 00:17:15,860
the<font color="#E5E5E5"> table name is specified for system</font>

450
00:17:12,829 --> 00:17:18,079
time as of some<font color="#E5E5E5"> specific point in</font><font color="#CCCCCC"> time</font>

451
00:17:15,859 --> 00:17:22,069
and<font color="#E5E5E5"> you see the data as they were at the</font>

452
00:17:18,079 --> 00:17:23,480
<font color="#CCCCCC">table at that point in</font><font color="#E5E5E5"> time and this</font>

453
00:17:22,069 --> 00:17:24,550
solves all those three problems<font color="#E5E5E5"> that I</font>

454
00:17:23,480 --> 00:17:26,540
just mentioned because<font color="#E5E5E5"> if you</font>

455
00:17:24,550 --> 00:17:28,970
accidentally deleted all your data in

456
00:17:26,540 --> 00:17:30,560
<font color="#CCCCCC">the table</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can just insert into the</font>

457
00:17:28,970 --> 00:17:32,180
table the<font color="#E5E5E5"> data as they were in the table</font>

458
00:17:30,560 --> 00:17:34,370
five minutes ago in the data<font color="#CCCCCC"> is</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> and</font>

459
00:17:32,180 --> 00:17:36,320
<font color="#CCCCCC">new and</font><font color="#E5E5E5"> if you want to do</font><font color="#CCCCCC"> analytics on</font>

460
00:17:34,370 --> 00:17:39,070
<font color="#CCCCCC">the historical data</font><font color="#E5E5E5"> you can join this</font>

461
00:17:36,320 --> 00:17:41,240
table with itself<font color="#E5E5E5"> from one year ago and</font>

462
00:17:39,070 --> 00:17:43,189
again you can compare<font color="#E5E5E5"> the data and</font>

463
00:17:41,240 --> 00:17:45,260
derive some musical conclusions<font color="#E5E5E5"> out of</font>

464
00:17:43,190 --> 00:17:46,419
that and if you want<font color="#CCCCCC"> to know what an</font>

465
00:17:45,260 --> 00:17:48,039
intruder saw

466
00:17:46,419 --> 00:17:49,659
a year<font color="#E5E5E5"> ago all you</font><font color="#CCCCCC"> need to do is select</font>

467
00:17:48,039 --> 00:17:51,309
from the table at<font color="#E5E5E5"> exactly this point in</font>

468
00:17:49,659 --> 00:17:51,730
time that<font color="#E5E5E5"> you hopefully have</font><font color="#CCCCCC"> in your</font>

469
00:17:51,309 --> 00:17:54,249
logs

470
00:17:51,730 --> 00:17:56,590
then you see exactly the<font color="#E5E5E5"> data that he</font>

471
00:17:54,249 --> 00:17:58,119
<font color="#E5E5E5">was seen and</font><font color="#CCCCCC"> you'll see what</font><font color="#E5E5E5"> users</font>

472
00:17:56,590 --> 00:17:59,799
existed at that<font color="#CCCCCC"> time what users didn't</font>

473
00:17:58,119 --> 00:18:01,918
change their password since then<font color="#E5E5E5"> and</font>

474
00:17:59,799 --> 00:18:04,950
then you can<font color="#E5E5E5"> alert them and do some</font>

475
00:18:01,919 --> 00:18:04,950
damage control

476
00:18:06,119 --> 00:18:10,840
yeah we'll have<font color="#E5E5E5"> other extensions to</font><font color="#CCCCCC"> ask</font>

477
00:18:09,100 --> 00:18:12,789
to a sure sign that I'll just<font color="#E5E5E5"> only</font>

478
00:18:10,840 --> 00:18:14,350
mention one because he said you<font color="#E5E5E5"> might</font>

479
00:18:12,789 --> 00:18:16,029
<font color="#E5E5E5">take a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> space</font><font color="#CCCCCC"> you might</font><font color="#E5E5E5"> want to</font>

480
00:18:14,350 --> 00:18:17,469
<font color="#E5E5E5">store this is</font><font color="#CCCCCC"> the historical data</font>

481
00:18:16,029 --> 00:18:18,909
separately from the current data because

482
00:18:17,470 --> 00:18:21,519
most<font color="#E5E5E5"> of the time</font><font color="#CCCCCC"> he'll be working with</font>

483
00:18:18,909 --> 00:18:22,749
the current data<font color="#E5E5E5"> and by partitioning by</font>

484
00:18:21,519 --> 00:18:24,999
system time you can<font color="#E5E5E5"> store give the</font>

485
00:18:22,749 --> 00:18:26,739
history<font color="#E5E5E5"> separately so that accumulated</font>

486
00:18:24,999 --> 00:18:28,059
mass of history will<font color="#E5E5E5"> not slow down your</font>

487
00:18:26,739 --> 00:18:31,929
<font color="#CCCCCC">day-to-day operations with the current</font>

488
00:18:28,059 --> 00:18:33,820
data the next<font color="#CCCCCC"> SQL standard that into the</font>

489
00:18:31,929 --> 00:18:35,529
new new feature new SQL standard it's a

490
00:18:33,820 --> 00:18:39,189
squirrel 2016<font color="#E5E5E5"> that's the very new school</font>

491
00:18:35,529 --> 00:18:41,739
standard and it reduced<font color="#E5E5E5"> the operations</font>

492
00:18:39,190 --> 00:18:45,820
for working with JSON<font color="#E5E5E5"> so this is how a</font>

493
00:18:41,739 --> 00:18:47,259
JSON looks in SQL standard<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is a</font>

494
00:18:45,820 --> 00:18:50,109
skill standard functions for working

495
00:18:47,259 --> 00:18:52,570
with JSON then<font color="#CCCCCC"> like many and the last</font>

496
00:18:50,109 --> 00:18:53,980
one is not<font color="#CCCCCC"> yet in my DB oh my squirrel</font>

497
00:18:52,570 --> 00:18:55,539
but although<font color="#E5E5E5"> there are plans to do</font><font color="#CCCCCC"> that</font>

498
00:18:53,980 --> 00:18:58,299
in my skills as a<font color="#CCCCCC"> lob released even with</font>

499
00:18:55,539 --> 00:19:00,609
Jason<font color="#E5E5E5"> table but it's still a very small</font>

500
00:18:58,299 --> 00:19:01,869
<font color="#CCCCCC">Spartan</font><font color="#E5E5E5"> set so both</font><font color="#CCCCCC"> and maybe</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> my</font>

501
00:19:00,609 --> 00:19:03,609
<font color="#CCCCCC">skull</font><font color="#E5E5E5"> there are lots of other functions</font>

502
00:19:01,869 --> 00:19:05,678
to<font color="#E5E5E5"> do something useful with JSON to</font>

503
00:19:03,609 --> 00:19:08,049
modify to<font color="#E5E5E5"> query to get some JSON</font>

504
00:19:05,679 --> 00:19:10,749
metadata and the last three functions to

505
00:19:08,049 --> 00:19:12,789
reformat JSON in compact or lose<font color="#E5E5E5"> weight</font>

506
00:19:10,749 --> 00:19:16,899
<font color="#CCCCCC">although they're only</font><font color="#E5E5E5"> in many DB's are</font>

507
00:19:12,789 --> 00:19:18,489
<font color="#E5E5E5">not in my</font><font color="#CCCCCC"> scroll although but I'm won't</font>

508
00:19:16,899 --> 00:19:20,529
be<font color="#E5E5E5"> talking long about JSON because</font>

509
00:19:18,489 --> 00:19:23,289
<font color="#E5E5E5">everybody know what Jason</font><font color="#CCCCCC"> is everybody</font>

510
00:19:20,529 --> 00:19:25,480
has seen JSON so I just keep it and this

511
00:19:23,289 --> 00:19:27,879
the<font color="#E5E5E5"> last part is not an NES</font><font color="#CCCCCC"> co-signers</font>

512
00:19:25,480 --> 00:19:29,859
at all although<font color="#E5E5E5"> eventually someday might</font>

513
00:19:27,879 --> 00:19:31,658
be this new feature appeared in<font color="#CCCCCC"> many</font>

514
00:19:29,859 --> 00:19:33,820
<font color="#CCCCCC">db10</font><font color="#E5E5E5"> see this aggregate storage</font>

515
00:19:31,659 --> 00:19:35,200
functions so<font color="#E5E5E5"> you can do create function</font>

516
00:19:33,820 --> 00:19:38,109
<font color="#E5E5E5">and create aggregate functions not only</font>

517
00:19:35,200 --> 00:19:39,639
<font color="#E5E5E5">I'm not aggregate function and third</font>

518
00:19:38,109 --> 00:19:41,139
<font color="#CCCCCC">explaining the syntax first I start with</font>

519
00:19:39,639 --> 00:19:43,149
<font color="#CCCCCC">the not aggregate functions perfectly</font>

520
00:19:41,139 --> 00:19:44,769
standard not aggregate function that

521
00:19:43,149 --> 00:19:47,559
reads all data from<font color="#CCCCCC"> a table and</font>

522
00:19:44,769 --> 00:19:50,320
calculate the sum of squares<font color="#CCCCCC"> for a</font>

523
00:19:47,559 --> 00:19:52,029
<font color="#E5E5E5">particular code</font><font color="#CCCCCC"> so it creates</font><font color="#E5E5E5"> so it</font>

524
00:19:50,320 --> 00:19:54,340
creates a cursor for select it reads

525
00:19:52,029 --> 00:19:56,200
<font color="#E5E5E5">rows one</font><font color="#CCCCCC"> by one</font><font color="#E5E5E5"> from the table then the</font>

526
00:19:54,340 --> 00:19:58,800
table is exhausted<font color="#CCCCCC"> continue handler</font>

527
00:19:56,200 --> 00:20:01,470
jumps in and

528
00:19:58,800 --> 00:20:03,780
<font color="#E5E5E5">it adjourns and squares let's perfect</font>

529
00:20:01,470 --> 00:20:06,150
<font color="#CCCCCC">it's done</font><font color="#E5E5E5"> that nothing new should be</font>

530
00:20:03,780 --> 00:20:08,700
<font color="#CCCCCC">learned here and that's</font><font color="#E5E5E5"> how we do an</font>

531
00:20:06,150 --> 00:20:12,020
<font color="#E5E5E5">ugly it function out</font><font color="#CCCCCC"> of it</font><font color="#E5E5E5"> so that's a</font>

532
00:20:08,700 --> 00:20:14,250
keyboard ovulate<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then there's no</font>

533
00:20:12,020 --> 00:20:16,889
accumulator here but there's a<font color="#CCCCCC"> parameter</font>

534
00:20:14,250 --> 00:20:18,660
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> aggregate</font><font color="#E5E5E5"> function and no cursor</font>

535
00:20:16,890 --> 00:20:21,210
<font color="#E5E5E5">if the cursor is implicitly created and</font>

536
00:20:18,660 --> 00:20:23,370
there's a special incantation<font color="#CCCCCC"> H group</font>

537
00:20:21,210 --> 00:20:24,800
next<font color="#E5E5E5"> row which</font><font color="#CCCCCC"> leads a neuro for</font><font color="#E5E5E5"> the</font>

538
00:20:23,370 --> 00:20:27,030
current<font color="#E5E5E5"> go</font>

539
00:20:24,800 --> 00:20:28,980
everything else was exactly the same<font color="#CCCCCC"> as</font>

540
00:20:27,030 --> 00:20:31,200
for non aggregate function<font color="#E5E5E5"> it reads the</font>

541
00:20:28,980 --> 00:20:32,940
rows when the group had<font color="#CCCCCC"> loaded continue</font>

542
00:20:31,200 --> 00:20:36,990
<font color="#CCCCCC">handle jobs in</font><font color="#E5E5E5"> native</font><font color="#CCCCCC"> John's the</font>

543
00:20:32,940 --> 00:20:40,110
accumulated sum of squares for<font color="#CCCCCC"> the</font>

544
00:20:36,990 --> 00:20:42,180
column X and to show the usability of it

545
00:20:40,110 --> 00:20:45,689
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is an example how to do a median</font>

546
00:20:42,180 --> 00:20:48,030
completely in a scale using custom

547
00:20:45,690 --> 00:20:49,470
aggregate functions in<font color="#CCCCCC"> SQL</font><font color="#E5E5E5"> to make it</font>

548
00:20:48,030 --> 00:20:51,300
easier to<font color="#E5E5E5"> read I</font><font color="#CCCCCC"> have like</font><font color="#E5E5E5"> you need to</font>

549
00:20:49,470 --> 00:20:53,400
<font color="#E5E5E5">start reading from</font><font color="#CCCCCC"> this one</font><font color="#E5E5E5"> because this</font>

550
00:20:51,300 --> 00:20:54,840
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the way the execution starts then</font>

551
00:20:53,400 --> 00:20:57,950
<font color="#E5E5E5">does the loop and</font><font color="#CCCCCC"> certain data into the</font>

552
00:20:54,840 --> 00:21:01,110
table<font color="#E5E5E5"> and when that group is exhausted</font>

553
00:20:57,950 --> 00:21:02,790
<font color="#E5E5E5">continue hinder jump in it fat Peaks the</font>

554
00:21:01,110 --> 00:21:04,709
middle row from the table in the

555
00:21:02,790 --> 00:21:07,820
<font color="#CCCCCC">transmitter that's how you</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> me</font>

556
00:21:04,710 --> 00:21:10,820
<font color="#CCCCCC">tenderness curl in meditation</font><font color="#E5E5E5"> see</font>

557
00:21:07,820 --> 00:21:10,820
questions

