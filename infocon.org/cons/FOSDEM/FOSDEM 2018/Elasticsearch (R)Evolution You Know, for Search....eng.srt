1
00:00:05,440 --> 00:00:11,200
good afternoon everybody everybody still

2
00:00:10,010 --> 00:00:14,750
awake

3
00:00:11,200 --> 00:00:17,720
good<font color="#E5E5E5"> let's let's see where we can</font><font color="#CCCCCC"> take</font>

4
00:00:14,750 --> 00:00:20,000
the revolution<font color="#CCCCCC"> evolution thing</font><font color="#E5E5E5"> so I</font>

5
00:00:17,720 --> 00:00:23,150
start<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the revolution and we'll get</font>

6
00:00:20,000 --> 00:00:26,380
<font color="#E5E5E5">to their evolution afterwards so kind of</font>

7
00:00:23,150 --> 00:00:28,939
the<font color="#CCCCCC"> current state</font><font color="#E5E5E5"> of data stores</font><font color="#CCCCCC"> is</font>

8
00:00:26,380 --> 00:00:30,919
maybe some of you know<font color="#CCCCCC"> DV engines</font><font color="#E5E5E5"> come</font>

9
00:00:28,940 --> 00:00:32,480
they have like the<font color="#CCCCCC"> Tuoba</font><font color="#E5E5E5"> index for</font>

10
00:00:30,920 --> 00:00:35,360
programming languages they do the<font color="#E5E5E5"> same</font>

11
00:00:32,479 --> 00:00:37,250
thing for data stores<font color="#E5E5E5"> and it currently</font>

12
00:00:35,360 --> 00:00:40,240
the February<font color="#CCCCCC"> edition</font><font color="#E5E5E5"> looks something</font>

13
00:00:37,250 --> 00:00:43,910
like this<font color="#E5E5E5"> Oracle</font><font color="#CCCCCC"> is still sitting on top</font>

14
00:00:40,240 --> 00:00:45,950
then we have my sequel<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> no going</font>

15
00:00:43,910 --> 00:00:48,260
<font color="#E5E5E5">to be</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> the number one no sequel store</font>

16
00:00:45,950 --> 00:00:51,649
<font color="#E5E5E5">and then we</font><font color="#CCCCCC"> have following Redis</font>

17
00:00:48,260 --> 00:00:53,449
elasticsearch<font color="#CCCCCC"> cassandra</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i kind of</font>

18
00:00:51,649 --> 00:00:56,690
take<font color="#CCCCCC"> you through this story a bit</font><font color="#E5E5E5"> like</font>

19
00:00:53,450 --> 00:00:58,910
how elasticsearch got up to place<font color="#CCCCCC"> nine</font>

20
00:00:56,690 --> 00:01:01,370
here that is kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the revolution part</font>

21
00:00:58,910 --> 00:01:03,620
and for<font color="#E5E5E5"> the evolution part we'll do some</font>

22
00:01:01,370 --> 00:01:07,548
hands-on demos<font color="#E5E5E5"> like what we've</font><font color="#CCCCCC"> been</font>

23
00:01:03,620 --> 00:01:09,229
trying to<font color="#E5E5E5"> change recently and yeah you</font>

24
00:01:07,549 --> 00:01:11,900
can<font color="#CCCCCC"> always discuss</font><font color="#E5E5E5"> about this list</font><font color="#CCCCCC"> I</font>

25
00:01:09,229 --> 00:01:15,229
think it's pretty<font color="#E5E5E5"> reasonable</font><font color="#CCCCCC"> except for</font>

26
00:01:11,900 --> 00:01:17,360
this<font color="#CCCCCC"> one</font><font color="#E5E5E5"> here I'm never sure why this is</font>

27
00:01:15,229 --> 00:01:18,729
on<font color="#E5E5E5"> here especially</font><font color="#CCCCCC"> if you see stuff like</font>

28
00:01:17,360 --> 00:01:21,890
<font color="#E5E5E5">that</font>

29
00:01:18,729 --> 00:01:24,049
the statement is<font color="#E5E5E5"> too complex yeah I</font>

30
00:01:21,890 --> 00:01:29,710
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> it qualifies</font><font color="#E5E5E5"> as a datastore</font>

31
00:01:24,049 --> 00:01:32,380
but anyway<font color="#CCCCCC"> so who uses elasticsearch</font>

32
00:01:29,710 --> 00:01:37,009
<font color="#E5E5E5">that's a good number</font><font color="#CCCCCC"> I like</font><font color="#E5E5E5"> to see that</font>

33
00:01:32,380 --> 00:01:42,080
who is already on version<font color="#CCCCCC"> 6 very nice</font>

34
00:01:37,010 --> 00:01:43,909
<font color="#E5E5E5">who is still on version 2</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> okay</font>

35
00:01:42,080 --> 00:01:45,860
I'll try<font color="#E5E5E5"> to give</font><font color="#CCCCCC"> you some</font><font color="#E5E5E5"> motivation</font>

36
00:01:43,909 --> 00:01:49,340
today<font color="#E5E5E5"> why you might want</font><font color="#CCCCCC"> to upgrade as</font>

37
00:01:45,860 --> 00:01:51,110
<font color="#CCCCCC">well</font><font color="#E5E5E5"> so we'll see and why am</font><font color="#CCCCCC"> I talking</font>

38
00:01:49,340 --> 00:01:52,640
about<font color="#CCCCCC"> that I work for elastic the</font>

39
00:01:51,110 --> 00:01:54,369
company behind the elastic search and

40
00:01:52,640 --> 00:01:56,810
the other<font color="#E5E5E5"> open</font><font color="#CCCCCC"> source products we have</font>

41
00:01:54,369 --> 00:01:58,960
I'm part of<font color="#E5E5E5"> our infrastructure team we</font>

42
00:01:56,810 --> 00:02:02,119
do stuff<font color="#CCCCCC"> like the docker containers</font>

43
00:01:58,960 --> 00:02:04,880
<font color="#E5E5E5">internal testing any</font><font color="#CCCCCC"> automation clouds</font>

44
00:02:02,119 --> 00:02:06,470
<font color="#E5E5E5">and I always say this is a UNIX pipe</font><font color="#CCCCCC"> I</font>

45
00:02:04,880 --> 00:02:08,720
kind of<font color="#E5E5E5"> pipe</font><font color="#CCCCCC"> that into developer</font>

46
00:02:06,470 --> 00:02:11,959
advocacy so I try to talk<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> good</font>

47
00:02:08,720 --> 00:02:13,540
<font color="#CCCCCC">stuff that we do so how did it</font><font color="#E5E5E5"> all get</font>

48
00:02:11,959 --> 00:02:16,190
<font color="#CCCCCC">started</font>

49
00:02:13,540 --> 00:02:17,630
Shai who<font color="#E5E5E5"> started the project and is now</font>

50
00:02:16,190 --> 00:02:21,010
our CEO he

51
00:02:17,630 --> 00:02:23,720
started<font color="#E5E5E5"> blogging at the dude abides calm</font>

52
00:02:21,010 --> 00:02:25,850
<font color="#CCCCCC">that was his</font><font color="#E5E5E5"> blog and it's still up and</font>

53
00:02:23,720 --> 00:02:26,480
he has a blog post how it all got

54
00:02:25,850 --> 00:02:28,250
started

55
00:02:26,480 --> 00:02:30,109
and in the beginning<font color="#CCCCCC"> the product wasn't</font>

56
00:02:28,250 --> 00:02:32,120
<font color="#E5E5E5">called elasticsearch but it had two</font>

57
00:02:30,110 --> 00:02:34,490
predecessors<font color="#CCCCCC"> which were called compass</font>

58
00:02:32,120 --> 00:02:37,550
<font color="#E5E5E5">and how he got started</font><font color="#CCCCCC"> with compass was</font>

59
00:02:34,490 --> 00:02:39,890
his wife wanted to become a<font color="#E5E5E5"> chef a cook</font>

60
00:02:37,550 --> 00:02:41,690
and she moved to<font color="#CCCCCC"> London and</font><font color="#E5E5E5"> as a good</font>

61
00:02:39,890 --> 00:02:44,149
husband he tried to help his wife<font color="#E5E5E5"> and</font>

62
00:02:41,690 --> 00:02:46,310
she had<font color="#E5E5E5"> lots of recipes</font><font color="#CCCCCC"> and he wanted to</font>

63
00:02:44,150 --> 00:02:49,850
<font color="#E5E5E5">write some system</font><font color="#CCCCCC"> to search her recipes</font>

64
00:02:46,310 --> 00:02:53,780
<font color="#E5E5E5">and he kind of over engineered that</font>

65
00:02:49,850 --> 00:02:56,570
because that's how he<font color="#E5E5E5"> got into the full</font>

66
00:02:53,780 --> 00:02:58,340
text<font color="#E5E5E5"> search stuff</font><font color="#CCCCCC"> and she's still</font>

67
00:02:56,570 --> 00:03:00,530
<font color="#CCCCCC">waiting for that</font><font color="#E5E5E5"> recipe search by the</font>

68
00:02:58,340 --> 00:03:02,540
way and it's kind of the running joke

69
00:03:00,530 --> 00:03:04,220
internally when he will ever finish<font color="#CCCCCC"> that</font>

70
00:03:02,540 --> 00:03:07,340
but he says like at the moment<font color="#CCCCCC"> he's a</font>

71
00:03:04,220 --> 00:03:09,890
bit<font color="#E5E5E5"> too busy but</font><font color="#CCCCCC"> maybe at some</font><font color="#E5E5E5"> later</font>

72
00:03:07,340 --> 00:03:11,810
point we will somebody might do a<font color="#E5E5E5"> recipe</font>

73
00:03:09,890 --> 00:03:14,809
search for him so we can kind of move

74
00:03:11,810 --> 00:03:16,970
past that<font color="#CCCCCC"> and he started off with</font>

75
00:03:14,810 --> 00:03:19,310
<font color="#CCCCCC">compost</font><font color="#E5E5E5"> one and then he totally rewrote</font>

76
00:03:16,970 --> 00:03:21,080
<font color="#CCCCCC">that calling it compass two and instead</font>

77
00:03:19,310 --> 00:03:23,330
<font color="#CCCCCC">of having another rewrite calling it</font>

78
00:03:21,080 --> 00:03:24,680
compass<font color="#E5E5E5"> three he called it elastic</font>

79
00:03:23,330 --> 00:03:26,960
<font color="#E5E5E5">search afterwards and everybody knows</font>

80
00:03:24,680 --> 00:03:29,540
three is kind<font color="#E5E5E5"> of the lucky number so</font>

81
00:03:26,960 --> 00:03:31,370
that<font color="#CCCCCC"> one's stuck and that is what is</font>

82
00:03:29,540 --> 00:03:35,060
kind<font color="#E5E5E5"> of widely used to demise most</font>

83
00:03:31,370 --> 00:03:38,000
widely used search engine nowadays so

84
00:03:35,060 --> 00:03:39,700
that was the initial logo<font color="#E5E5E5"> of photoshop</font>

85
00:03:38,000 --> 00:03:42,560
skills have slightly improved since then

86
00:03:39,700 --> 00:03:44,450
<font color="#E5E5E5">but this was the initial elasticsearch</font>

87
00:03:42,560 --> 00:03:46,820
logo and back then<font color="#CCCCCC"> Shai did everything</font>

88
00:03:44,450 --> 00:03:49,700
<font color="#E5E5E5">he wrote the code the documentation the</font>

89
00:03:46,820 --> 00:03:51,560
website he answered<font color="#E5E5E5"> all the questions</font><font color="#CCCCCC"> at</font>

90
00:03:49,700 --> 00:03:53,179
my<font color="#E5E5E5"> previous company we always called him</font>

91
00:03:51,560 --> 00:03:55,070
the search<font color="#CCCCCC"> beast because he was always</font>

92
00:03:53,180 --> 00:03:57,980
doing<font color="#CCCCCC"> something</font><font color="#E5E5E5"> about searching he was</font>

93
00:03:55,070 --> 00:04:00,260
super<font color="#E5E5E5"> productive and yeah stuff</font>

94
00:03:57,980 --> 00:04:03,019
developed pretty well<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see</font>

95
00:04:00,260 --> 00:04:04,910
this is the the fiber<font color="#CCCCCC"> version and he</font>

96
00:04:03,020 --> 00:04:07,790
gave the product the tagline you know

97
00:04:04,910 --> 00:04:10,250
for search was in<font color="#E5E5E5"> the title</font><font color="#CCCCCC"> that's kind</font>

98
00:04:07,790 --> 00:04:12,320
of like the<font color="#CCCCCC"> the core of</font><font color="#E5E5E5"> what the elastic</font>

99
00:04:10,250 --> 00:04:14,570
<font color="#E5E5E5">search is about or at least where it got</font>

100
00:04:12,320 --> 00:04:15,980
<font color="#CCCCCC">started so if you're searching anywhere</font>

101
00:04:14,570 --> 00:04:17,298
there's a good<font color="#E5E5E5"> chance that the elastic</font>

102
00:04:15,980 --> 00:04:19,730
<font color="#E5E5E5">search is kind of</font><font color="#CCCCCC"> doing the search for</font>

103
00:04:17,298 --> 00:04:21,500
you<font color="#CCCCCC"> if you're searching on any of these</font>

104
00:04:19,730 --> 00:04:23,180
sites<font color="#E5E5E5"> behind the search box there's</font>

105
00:04:21,500 --> 00:04:26,300
elastic search doing the actual work for

106
00:04:23,180 --> 00:04:29,810
you<font color="#E5E5E5"> we're not responsible</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the actual</font>

107
00:04:26,300 --> 00:04:32,440
<font color="#E5E5E5">with</font><font color="#CCCCCC"> kind of quality</font><font color="#E5E5E5"> of those it's kind</font>

108
00:04:29,810 --> 00:04:35,390
of<font color="#E5E5E5"> an implementation</font><font color="#CCCCCC"> detail</font>

109
00:04:32,440 --> 00:04:37,940
anyway<font color="#E5E5E5"> so this worked well and then</font>

110
00:04:35,390 --> 00:04:39,830
<font color="#E5E5E5">people figured out that there is more</font>

111
00:04:37,940 --> 00:04:42,200
stuff<font color="#CCCCCC"> that is actually a search</font><font color="#E5E5E5"> problem</font>

112
00:04:39,830 --> 00:04:43,849
<font color="#E5E5E5">so people figured out we want to have</font>

113
00:04:42,200 --> 00:04:45,740
some<font color="#E5E5E5"> visualizations of the data we</font><font color="#CCCCCC"> have</font>

114
00:04:43,850 --> 00:04:47,330
in our system<font color="#E5E5E5"> and then people came</font><font color="#CCCCCC"> and</font>

115
00:04:45,740 --> 00:04:49,070
said like oh we<font color="#CCCCCC"> want to put locks in</font>

116
00:04:47,330 --> 00:04:51,740
there<font color="#CCCCCC"> because having locks is kind of</font><font color="#E5E5E5"> a</font>

117
00:04:49,070 --> 00:04:53,690
search problem<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> we want to</font>

118
00:04:51,740 --> 00:04:54,890
<font color="#E5E5E5">collect our lock somewhere put them in a</font>

119
00:04:53,690 --> 00:04:57,320
system and<font color="#E5E5E5"> then be able to search for</font>

120
00:04:54,890 --> 00:05:00,080
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> arrows or whatever happened in</font>

121
00:04:57,320 --> 00:05:02,060
<font color="#E5E5E5">the system and then kind of</font>

122
00:05:00,080 --> 00:05:02,659
<font color="#CCCCCC">elasticsearch joined forces with cabana</font>

123
00:05:02,060 --> 00:05:05,450
and<font color="#E5E5E5"> beets</font>

124
00:05:02,660 --> 00:05:08,630
<font color="#CCCCCC">Gabanna being a visualization sorry and</font>

125
00:05:05,450 --> 00:05:11,930
locks<font color="#E5E5E5"> - locks - being</font><font color="#CCCCCC"> that part to get a</font>

126
00:05:08,630 --> 00:05:14,510
<font color="#E5E5E5">team and together they formed famous or</font>

127
00:05:11,930 --> 00:05:18,520
infamous<font color="#CCCCCC"> Elks Tech you can see</font>

128
00:05:14,510 --> 00:05:21,710
elasticsearch locks -<font color="#CCCCCC"> cabana</font><font color="#E5E5E5"> and yeah</font>

129
00:05:18,520 --> 00:05:24,440
<font color="#CCCCCC">you get it</font><font color="#E5E5E5"> so that was</font><font color="#CCCCCC"> the attic</font><font color="#E5E5E5"> stack</font>

130
00:05:21,710 --> 00:05:27,260
that is<font color="#E5E5E5"> also working very well and is</font>

131
00:05:24,440 --> 00:05:28,820
widely used here just three very<font color="#CCCCCC"> common</font>

132
00:05:27,260 --> 00:05:30,920
examples who are using the<font color="#E5E5E5"> earth stack</font>

133
00:05:28,820 --> 00:05:33,950
for log aggregation or security

134
00:05:30,920 --> 00:05:36,230
analytics<font color="#E5E5E5"> so Mozilla has a an</font>

135
00:05:33,950 --> 00:05:38,840
<font color="#CCCCCC">open-source product around security</font>

136
00:05:36,230 --> 00:05:40,370
<font color="#E5E5E5">analytics or seen slack is using it</font>

137
00:05:38,840 --> 00:05:42,260
internally<font color="#E5E5E5"> for all the log aggregation</font>

138
00:05:40,370 --> 00:05:45,110
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Blizzard if you're playing any</font>

139
00:05:42,260 --> 00:05:47,719
Blizzard games<font color="#CCCCCC"> there was doing or</font>

140
00:05:45,110 --> 00:05:49,910
aggregating<font color="#E5E5E5"> all the events in</font><font color="#CCCCCC"> the stack</font>

141
00:05:47,720 --> 00:05:52,640
somewhere<font color="#E5E5E5"> and that was working</font><font color="#CCCCCC"> well</font>

142
00:05:49,910 --> 00:05:54,830
until we added another<font color="#CCCCCC"> component</font><font color="#E5E5E5"> this is</font>

143
00:05:52,640 --> 00:05:56,750
<font color="#CCCCCC">feeds it's kind of like a lightweight</font>

144
00:05:54,830 --> 00:05:59,270
<font color="#CCCCCC">agent a shipper or</font><font color="#E5E5E5"> forwarder written in</font>

145
00:05:56,750 --> 00:06:00,820
gold<font color="#CCCCCC"> because log set was Ruby and now</font>

146
00:05:59,270 --> 00:06:02,870
JRuby and<font color="#E5E5E5"> it's always</font><font color="#CCCCCC"> kind of heavy and</font>

147
00:06:00,820 --> 00:06:05,120
<font color="#E5E5E5">telling people if they're not a Java</font>

148
00:06:02,870 --> 00:06:07,850
<font color="#CCCCCC">developer to put</font><font color="#E5E5E5"> the JVM on their nodes</font>

149
00:06:05,120 --> 00:06:11,000
just<font color="#E5E5E5"> to collect logs and that wasn't</font>

150
00:06:07,850 --> 00:06:14,300
<font color="#E5E5E5">really what made people</font><font color="#CCCCCC"> happy</font><font color="#E5E5E5"> and then</font>

151
00:06:11,000 --> 00:06:16,760
kind of<font color="#CCCCCC"> the elk had to</font><font color="#E5E5E5"> evolve and it's</font>

152
00:06:14,300 --> 00:06:19,240
all about it and the elk had to develop

153
00:06:16,760 --> 00:06:21,590
<font color="#E5E5E5">and then it said like maybe I'm an LP</font>

154
00:06:19,240 --> 00:06:23,180
personality<font color="#E5E5E5"> because you see</font>

155
00:06:21,590 --> 00:06:27,020
elasticsearch<font color="#CCCCCC"> lakhs</font><font color="#E5E5E5"> of qivana</font>

156
00:06:23,180 --> 00:06:29,240
beats<font color="#E5E5E5"> that's the LP or sometimes we also</font>

157
00:06:27,020 --> 00:06:32,570
call<font color="#CCCCCC"> it</font><font color="#E5E5E5"> the bank and you can see it's</font>

158
00:06:29,240 --> 00:06:35,420
the<font color="#CCCCCC"> B</font><font color="#E5E5E5"> and the elk horns however since</font>

159
00:06:32,570 --> 00:06:36,890
we're<font color="#CCCCCC"> always about scalability</font><font color="#E5E5E5"> even</font>

160
00:06:35,420 --> 00:06:39,110
marketing figured out that this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font>

161
00:06:36,890 --> 00:06:40,400
<font color="#E5E5E5">very scalable because what happens if in</font>

162
00:06:39,110 --> 00:06:43,460
the future we add another<font color="#CCCCCC"> open source</font>

163
00:06:40,400 --> 00:06:44,280
<font color="#E5E5E5">product then we</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to probably add</font>

164
00:06:43,460 --> 00:06:46,020
another letter

165
00:06:44,280 --> 00:06:48,659
then we need<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> another animal</font>

166
00:06:46,020 --> 00:06:51,150
and it will get harder to make up

167
00:06:48,660 --> 00:06:54,540
animals of more letters<font color="#CCCCCC"> and</font><font color="#E5E5E5"> B then you</font>

168
00:06:51,150 --> 00:06:56,190
<font color="#E5E5E5">need to do the rebranding and rebranding</font>

169
00:06:54,540 --> 00:06:59,639
is always like I always<font color="#CCCCCC"> said fulfilling</font>

170
00:06:56,190 --> 00:07:01,770
rebranding takes like<font color="#CCCCCC"> 10 years so</font><font color="#E5E5E5"> still</font>

171
00:06:59,639 --> 00:07:04,320
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people are saying</font><font color="#CCCCCC"> Elks Dec</font><font color="#E5E5E5"> and</font>

172
00:07:01,770 --> 00:07:06,659
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> totally ok we get</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> are just</font>

173
00:07:04,320 --> 00:07:08,550
trying<font color="#CCCCCC"> to push the name a bit</font><font color="#E5E5E5"> forward</font>

174
00:07:06,660 --> 00:07:10,560
and<font color="#CCCCCC"> what we've gotten</font><font color="#E5E5E5"> to is now we just</font>

175
00:07:08,550 --> 00:07:12,060
call<font color="#CCCCCC"> it the</font><font color="#E5E5E5"> elastic stack because that's</font>

176
00:07:10,560 --> 00:07:13,500
<font color="#CCCCCC">super scalable</font><font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> open-source</font>

177
00:07:12,060 --> 00:07:15,090
product we have we can just<font color="#E5E5E5"> put it into</font>

178
00:07:13,500 --> 00:07:18,150
<font color="#CCCCCC">the</font><font color="#E5E5E5"> elastic stack it will still</font><font color="#CCCCCC"> be the</font>

179
00:07:15,090 --> 00:07:20,010
elastic stack so that's why we call it

180
00:07:18,150 --> 00:07:23,159
the elastic stack and<font color="#E5E5E5"> that was kind of</font>

181
00:07:20,010 --> 00:07:26,370
the revolution so now it's<font color="#E5E5E5"> time</font><font color="#CCCCCC"> to get</font>

182
00:07:23,160 --> 00:07:29,100
to<font color="#CCCCCC"> that evolution</font><font color="#E5E5E5"> what is going on in</font>

183
00:07:26,370 --> 00:07:30,720
the evolution<font color="#CCCCCC"> before we dive into</font><font color="#E5E5E5"> the</font>

184
00:07:29,100 --> 00:07:33,090
demo just<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure that everybody is</font>

185
00:07:30,720 --> 00:07:35,640
familiar<font color="#CCCCCC"> with a few</font><font color="#E5E5E5"> terms cluster is</font>

186
00:07:33,090 --> 00:07:37,619
like all the<font color="#E5E5E5"> different nodes working</font>

187
00:07:35,640 --> 00:07:40,050
kind<font color="#E5E5E5"> of over the same data so you can</font>

188
00:07:37,620 --> 00:07:41,520
commute that cluster and it has spread

189
00:07:40,050 --> 00:07:44,040
<font color="#E5E5E5">out the data internally and you can</font>

190
00:07:41,520 --> 00:07:46,109
query it<font color="#E5E5E5"> in that</font><font color="#CCCCCC"> cluster</font><font color="#E5E5E5"> and know it is</font>

191
00:07:44,040 --> 00:07:48,240
basically<font color="#E5E5E5"> one</font><font color="#CCCCCC"> JVM process of</font><font color="#E5E5E5"> elastic</font>

192
00:07:46,110 --> 00:07:50,640
<font color="#E5E5E5">search running as</font><font color="#CCCCCC"> part of that cluster</font>

193
00:07:48,240 --> 00:07:52,410
<font color="#E5E5E5">and doing the actual work then you have</font>

194
00:07:50,640 --> 00:07:54,630
an index and index is<font color="#E5E5E5"> basically a</font>

195
00:07:52,410 --> 00:07:56,610
<font color="#E5E5E5">collection of stuff that is kind of</font>

196
00:07:54,630 --> 00:08:00,150
similar<font color="#CCCCCC"> and belongs together</font><font color="#E5E5E5"> in the past</font>

197
00:07:56,610 --> 00:08:02,160
we have said it's similar to yeah maybe

198
00:08:00,150 --> 00:08:03,900
a table in the relational<font color="#E5E5E5"> world but that</font>

199
00:08:02,160 --> 00:08:05,039
is a<font color="#E5E5E5"> very bad comparison that we don't</font>

200
00:08:03,900 --> 00:08:07,739
want to say that anymore

201
00:08:05,039 --> 00:08:10,380
but it's something<font color="#E5E5E5"> kind of some things</font>

202
00:08:07,740 --> 00:08:12,450
that<font color="#E5E5E5"> belong together every index is then</font>

203
00:08:10,380 --> 00:08:16,620
made up of<font color="#CCCCCC"> sharks</font><font color="#E5E5E5"> shorts are just</font><font color="#CCCCCC"> like</font>

204
00:08:12,450 --> 00:08:18,870
split up parts<font color="#E5E5E5"> of an index and that one</font>

205
00:08:16,620 --> 00:08:20,520
is<font color="#CCCCCC"> actually then</font><font color="#E5E5E5"> Apache</font><font color="#CCCCCC"> leucine writing</font>

206
00:08:18,870 --> 00:08:22,500
the data<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> background to the disk</font>

207
00:08:20,520 --> 00:08:23,820
because<font color="#E5E5E5"> often</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> asked like</font><font color="#CCCCCC"> what is</font>

208
00:08:22,500 --> 00:08:26,220
the data store behind<font color="#CCCCCC"> it there</font><font color="#E5E5E5"> is no</font>

209
00:08:23,820 --> 00:08:27,780
<font color="#E5E5E5">other data store involved the scene is</font>

210
00:08:26,220 --> 00:08:29,460
actually<font color="#E5E5E5"> writing the data to disk and</font>

211
00:08:27,780 --> 00:08:32,669
doing the kind<font color="#E5E5E5"> of heavy</font>

212
00:08:29,460 --> 00:08:34,710
<font color="#CCCCCC">writing reading curing</font><font color="#E5E5E5"> and elastic</font>

213
00:08:32,669 --> 00:08:38,218
<font color="#E5E5E5">search around it provides the</font><font color="#CCCCCC"> rest api</font>

214
00:08:34,710 --> 00:08:41,880
<font color="#CCCCCC">to</font><font color="#E5E5E5"> community SL and all the</font><font color="#CCCCCC"> sharding and</font>

215
00:08:38,219 --> 00:08:43,530
<font color="#E5E5E5">replication of the data the smallest</font>

216
00:08:41,880 --> 00:08:46,140
thing you're normally writing is a

217
00:08:43,530 --> 00:08:50,790
document and every document has<font color="#E5E5E5"> an ID</font>

218
00:08:46,140 --> 00:08:53,220
<font color="#E5E5E5">and that ID will be hashed to make sure</font>

219
00:08:50,790 --> 00:08:55,439
or to<font color="#E5E5E5"> know into which shard who will</font>

220
00:08:53,220 --> 00:08:56,850
write that document and then you<font color="#E5E5E5"> can</font>

221
00:08:55,440 --> 00:08:57,800
search over<font color="#E5E5E5"> it</font><font color="#CCCCCC"> so these are kind</font><font color="#E5E5E5"> of the</font>

222
00:08:56,850 --> 00:08:59,810
<font color="#E5E5E5">base terms if you</font>

223
00:08:57,800 --> 00:09:03,740
<font color="#CCCCCC">Odie's</font><font color="#E5E5E5"> you're pretty much good for that</font>

224
00:08:59,810 --> 00:09:06,619
demo<font color="#E5E5E5"> so we kind of like to compare that</font>

225
00:09:03,740 --> 00:09:08,180
<font color="#E5E5E5">to a person growing up that the</font>

226
00:09:06,620 --> 00:09:10,519
<font color="#CCCCCC">software's</font><font color="#E5E5E5"> also like a person it's also</font>

227
00:09:08,180 --> 00:09:11,959
growing<font color="#E5E5E5"> up in the beginning</font><font color="#CCCCCC"> it starts a</font>

228
00:09:10,519 --> 00:09:13,430
bit like a toddler and<font color="#CCCCCC"> it has a lot of</font>

229
00:09:11,959 --> 00:09:15,979
potential<font color="#E5E5E5"> and can</font><font color="#CCCCCC"> develop in a lot of</font>

230
00:09:13,430 --> 00:09:17,660
<font color="#E5E5E5">directions</font><font color="#CCCCCC"> and along the way you learn</font>

231
00:09:15,980 --> 00:09:20,209
stuff<font color="#E5E5E5"> when you improve and it's a</font>

232
00:09:17,660 --> 00:09:21,829
continuous learning process<font color="#CCCCCC"> and I'm not</font>

233
00:09:20,209 --> 00:09:24,439
exactly sure at which stage

234
00:09:21,829 --> 00:09:26,510
elasticsearch is right now<font color="#E5E5E5"> if we're kind</font>

235
00:09:24,440 --> 00:09:28,880
of teenagers or if you're kind<font color="#E5E5E5"> of like</font>

236
00:09:26,510 --> 00:09:31,910
in<font color="#E5E5E5"> the 20s or 30s</font><font color="#CCCCCC"> but it's kind</font><font color="#E5E5E5"> of</font>

237
00:09:28,880 --> 00:09:34,370
developing and that<font color="#E5E5E5"> evolution part now</font>

238
00:09:31,910 --> 00:09:36,670
<font color="#E5E5E5">we want to see a bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that evolution</font>

239
00:09:34,370 --> 00:09:39,279
<font color="#CCCCCC">of what is going on in in elasticsearch</font>

240
00:09:36,670 --> 00:09:42,110
so the first thing we have learned is

241
00:09:39,279 --> 00:09:44,089
strictness<font color="#E5E5E5"> in the beginning when you</font>

242
00:09:42,110 --> 00:09:46,250
<font color="#CCCCCC">start a new open-source product what you</font>

243
00:09:44,089 --> 00:09:47,899
want to have is you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have it to</font>

244
00:09:46,250 --> 00:09:50,570
make<font color="#E5E5E5"> it easy to</font><font color="#CCCCCC"> use that product</font><font color="#E5E5E5"> and</font>

245
00:09:47,899 --> 00:09:52,670
that's<font color="#E5E5E5"> what we did like whatever data</font>

246
00:09:50,570 --> 00:09:54,800
<font color="#E5E5E5">you gave us we try to store it even if</font>

247
00:09:52,670 --> 00:09:56,569
there was some syntax error<font color="#E5E5E5"> we try to</font>

248
00:09:54,800 --> 00:09:59,599
work around that<font color="#E5E5E5"> just to make</font><font color="#CCCCCC"> it easy to</font>

249
00:09:56,570 --> 00:10:01,610
<font color="#E5E5E5">get started</font><font color="#CCCCCC"> but as your systems mature</font>

250
00:09:59,600 --> 00:10:03,950
and you get more production<font color="#E5E5E5"> users at</font>

251
00:10:01,610 --> 00:10:06,649
some point you start valuing more

252
00:10:03,950 --> 00:10:09,230
strictness<font color="#E5E5E5"> so you catch errors early</font><font color="#CCCCCC"> on</font>

253
00:10:06,649 --> 00:10:10,940
and there might be<font color="#E5E5E5"> a bit more pain</font>

254
00:10:09,230 --> 00:10:13,279
<font color="#CCCCCC">upfront it might be slightly harder to</font>

255
00:10:10,940 --> 00:10:17,300
get started<font color="#E5E5E5"> but it will take out a lot</font>

256
00:10:13,279 --> 00:10:19,910
<font color="#E5E5E5">of the pain afterwards yeah so if you're</font>

257
00:10:17,300 --> 00:10:21,859
doing<font color="#E5E5E5"> bad stuff don't do that we have</font>

258
00:10:19,910 --> 00:10:23,630
learned we're trying to avoid<font color="#CCCCCC"> bad stuff</font>

259
00:10:21,860 --> 00:10:28,430
<font color="#E5E5E5">that will tell you upfront</font><font color="#CCCCCC"> that's bad</font>

260
00:10:23,630 --> 00:10:32,510
don't do that so the<font color="#E5E5E5"> first thing I can</font>

261
00:10:28,430 --> 00:10:33,920
quickly<font color="#E5E5E5"> show you I'm curing everything</font>

262
00:10:32,510 --> 00:10:37,000
<font color="#CCCCCC">to through Cubana</font>

263
00:10:33,920 --> 00:10:40,279
<font color="#E5E5E5">because it has a kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> nicer way to</font>

264
00:10:37,000 --> 00:10:46,160
query stuff but you can<font color="#CCCCCC"> totally do the</font>

265
00:10:40,279 --> 00:10:47,890
same thing with curl as well is<font color="#E5E5E5"> that</font>

266
00:10:46,160 --> 00:10:53,000
large enough<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the last row to read</font>

267
00:10:47,890 --> 00:10:56,449
good perfect<font color="#CCCCCC"> so what I have here is I</font>

268
00:10:53,000 --> 00:10:58,610
have<font color="#E5E5E5"> the latest</font><font color="#CCCCCC"> five version of</font>

269
00:10:56,449 --> 00:11:02,149
<font color="#CCCCCC">elasticsearch running it's five six I</font>

270
00:10:58,610 --> 00:11:04,100
have three<font color="#E5E5E5"> nodes</font><font color="#CCCCCC"> which is a bit hard to</font>

271
00:11:02,149 --> 00:11:05,990
read here<font color="#CCCCCC"> but you can</font><font color="#E5E5E5"> see I have three</font>

272
00:11:04,100 --> 00:11:08,270
<font color="#E5E5E5">nodes here elasticsearch one two three</font>

273
00:11:05,990 --> 00:11:10,650
<font color="#CCCCCC">one is the master</font><font color="#E5E5E5"> node that is this</font>

274
00:11:08,270 --> 00:11:12,750
little<font color="#CCCCCC"> star here</font>

275
00:11:10,650 --> 00:11:15,180
my cluster<font color="#E5E5E5"> is generally happily running</font>

276
00:11:12,750 --> 00:11:17,220
<font color="#E5E5E5">it's in the</font><font color="#CCCCCC"> green state</font><font color="#E5E5E5"> everything is</font>

277
00:11:15,180 --> 00:11:19,520
good and<font color="#CCCCCC"> working</font><font color="#E5E5E5"> well so</font><font color="#CCCCCC"> the first thing</font>

278
00:11:17,220 --> 00:11:23,970
I wanted<font color="#E5E5E5"> to show off was</font><font color="#CCCCCC"> this strictness</font>

279
00:11:19,520 --> 00:11:26,250
<font color="#CCCCCC">can you see the</font><font color="#E5E5E5"> typo in here yeah it's</font>

280
00:11:23,970 --> 00:11:28,260
hard to<font color="#E5E5E5"> see and even for us it was often</font>

281
00:11:26,250 --> 00:11:30,210
hard to<font color="#E5E5E5"> see typos like that and in</font>

282
00:11:28,260 --> 00:11:32,130
earlier<font color="#E5E5E5"> versions what we would do is if</font>

283
00:11:30,210 --> 00:11:34,170
there was a typo<font color="#E5E5E5"> in elasticsearch didn't</font>

284
00:11:32,130 --> 00:11:36,540
know a specific<font color="#CCCCCC"> parameter</font><font color="#E5E5E5"> it would</font>

285
00:11:34,170 --> 00:11:38,729
silently<font color="#E5E5E5"> ignore it and we would do the</font>

286
00:11:36,540 --> 00:11:41,250
<font color="#E5E5E5">same with configurations</font><font color="#CCCCCC"> and if you have</font>

287
00:11:38,730 --> 00:11:44,600
<font color="#E5E5E5">150 line</font><font color="#CCCCCC"> configuration file</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> have</font>

288
00:11:41,250 --> 00:11:47,220
some<font color="#E5E5E5"> typos in there that is very</font>

289
00:11:44,600 --> 00:11:50,940
<font color="#E5E5E5">annoying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> try to find out so what do</font>

290
00:11:47,220 --> 00:11:53,130
<font color="#CCCCCC">we have added now is</font><font color="#E5E5E5"> if something is</font>

291
00:11:50,940 --> 00:11:55,590
misspelled<font color="#E5E5E5"> elasticsearch will actually</font>

292
00:11:53,130 --> 00:11:56,939
tell you<font color="#CCCCCC"> what is going on and thanks to</font>

293
00:11:55,590 --> 00:11:59,760
<font color="#E5E5E5">the levenshtein distance we can actually</font>

294
00:11:56,940 --> 00:12:03,120
tell you this here we<font color="#E5E5E5"> don't know but</font>

295
00:11:59,760 --> 00:12:06,210
there is something<font color="#CCCCCC"> else that</font><font color="#E5E5E5"> we do know</font>

296
00:12:03,120 --> 00:12:12,080
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is maybe you mean tokenizer</font>

297
00:12:06,210 --> 00:12:12,080
and<font color="#E5E5E5"> so can if I can</font><font color="#CCCCCC"> spell it</font>

298
00:12:12,200 --> 00:12:18,150
<font color="#E5E5E5">it is deprecated</font><font color="#CCCCCC"> to use it like that but</font>

299
00:12:15,000 --> 00:12:21,240
now at least<font color="#E5E5E5"> it works and it will tell</font>

300
00:12:18,150 --> 00:12:23,370
you<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> this is the right way to do it</font><font color="#CCCCCC"> so</font>

301
00:12:21,240 --> 00:12:25,080
<font color="#CCCCCC">strict test we kind of learned that this</font>

302
00:12:23,370 --> 00:12:26,940
<font color="#E5E5E5">is very</font><font color="#CCCCCC"> helpful if you actually show the</font>

303
00:12:25,080 --> 00:12:29,670
<font color="#CCCCCC">errors</font><font color="#E5E5E5"> up front the other</font><font color="#CCCCCC"> thing we have</font>

304
00:12:26,940 --> 00:12:32,010
added in<font color="#E5E5E5"> 5 was the so called bootstrap</font>

305
00:12:29,670 --> 00:12:34,110
checks<font color="#E5E5E5"> so if you have like a note that</font>

306
00:12:32,010 --> 00:12:36,540
is badly configured and we know that you

307
00:12:34,110 --> 00:12:38,790
will<font color="#E5E5E5"> have problems in production we will</font>

308
00:12:36,540 --> 00:12:40,380
<font color="#E5E5E5">not start up that</font><font color="#CCCCCC"> node as soon as it</font><font color="#E5E5E5"> can</font>

309
00:12:38,790 --> 00:12:41,790
form a cluster we always assume if you

310
00:12:40,380 --> 00:12:43,530
are just running<font color="#E5E5E5"> on localhost and you're</font>

311
00:12:41,790 --> 00:12:45,510
not clustering it or you there's no way

312
00:12:43,530 --> 00:12:47,130
to cluster it is it<font color="#E5E5E5"> a development</font>

313
00:12:45,510 --> 00:12:48,480
instance we<font color="#CCCCCC"> don't really</font><font color="#E5E5E5"> care but as</font>

314
00:12:47,130 --> 00:12:49,950
soon<font color="#E5E5E5"> as you</font><font color="#CCCCCC"> can't form a cluster we</font>

315
00:12:48,480 --> 00:12:52,320
<font color="#E5E5E5">assume this might be a production system</font>

316
00:12:49,950 --> 00:12:54,000
<font color="#CCCCCC">and we will actually tell you there is</font>

317
00:12:52,320 --> 00:12:55,890
something<font color="#CCCCCC"> very wrong here for example</font>

318
00:12:54,000 --> 00:12:58,080
<font color="#CCCCCC">you don't</font><font color="#E5E5E5"> have enough file handles or</font>

319
00:12:55,890 --> 00:12:59,880
you're using a specific<font color="#E5E5E5"> Java version</font>

320
00:12:58,080 --> 00:13:01,770
where<font color="#CCCCCC"> we know that the</font><font color="#E5E5E5"> garbage collector</font>

321
00:12:59,880 --> 00:13:04,170
might add<font color="#E5E5E5"> corruptions to your data and</font>

322
00:13:01,770 --> 00:13:06,420
<font color="#E5E5E5">we would rather fail early and tell you</font>

323
00:13:04,170 --> 00:13:09,270
<font color="#E5E5E5">up front like hey this</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> working do</font>

324
00:13:06,420 --> 00:13:10,740
something then fail later on and<font color="#E5E5E5"> lose</font>

325
00:13:09,270 --> 00:13:12,930
your<font color="#E5E5E5"> data and then everybody is</font><font color="#CCCCCC"> super</font>

326
00:13:10,740 --> 00:13:15,630
pissed<font color="#E5E5E5"> and also our support is happier</font>

327
00:13:12,930 --> 00:13:19,469
if we<font color="#CCCCCC"> can avoid stupid</font><font color="#E5E5E5"> mistakes</font><font color="#CCCCCC"> early on</font>

328
00:13:15,630 --> 00:13:21,510
so these<font color="#E5E5E5"> booster checks are actually</font>

329
00:13:19,470 --> 00:13:23,730
making<font color="#E5E5E5"> sure you kind of avoid common</font>

330
00:13:21,510 --> 00:13:24,870
error scenarios<font color="#E5E5E5"> and there is no way to</font>

331
00:13:23,730 --> 00:13:26,459
circumvent

332
00:13:24,870 --> 00:13:28,560
because at first<font color="#CCCCCC"> we thought well we</font>

333
00:13:26,459 --> 00:13:29,279
could<font color="#E5E5E5"> add a flag like</font><font color="#CCCCCC"> overwrite</font><font color="#E5E5E5"> that I</font>

334
00:13:28,560 --> 00:13:31,138
don't care

335
00:13:29,279 --> 00:13:32,760
but then what everybody would do is just

336
00:13:31,139 --> 00:13:34,769
<font color="#CCCCCC">run in production with the flag like</font>

337
00:13:32,760 --> 00:13:38,220
don't care<font color="#CCCCCC"> and we wouldn't have gained</font>

338
00:13:34,769 --> 00:13:40,589
anything<font color="#E5E5E5"> so there's no</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> to avoid</font><font color="#CCCCCC"> that</font>

339
00:13:38,220 --> 00:13:44,699
<font color="#CCCCCC">bootstrap</font><font color="#E5E5E5"> checks are here to stay and</font>

340
00:13:40,589 --> 00:13:47,190
they will be enforced<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> what if you</font>

341
00:13:44,699 --> 00:13:51,420
want to upgrade let's upgrade to version

342
00:13:47,190 --> 00:13:53,610
<font color="#CCCCCC">six</font><font color="#E5E5E5"> so we'll try to do a live major</font>

343
00:13:51,420 --> 00:13:55,740
version upgrade and I'll<font color="#E5E5E5"> actually</font>

344
00:13:53,610 --> 00:13:58,620
upgrade to an internal<font color="#E5E5E5"> build which is</font>

345
00:13:55,740 --> 00:13:59,070
<font color="#E5E5E5">not yet released</font><font color="#CCCCCC"> so let's see how that</font>

346
00:13:58,620 --> 00:14:01,709
<font color="#E5E5E5">goes</font>

347
00:13:59,070 --> 00:14:05,370
I guess if<font color="#E5E5E5"> that works today we can</font>

348
00:14:01,709 --> 00:14:07,859
actually<font color="#E5E5E5"> release it to production</font><font color="#CCCCCC"> okay</font>

349
00:14:05,370 --> 00:14:09,930
so the first<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> you want to do is we</font>

350
00:14:07,860 --> 00:14:12,209
have four if you<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> migrate from</font>

351
00:14:09,930 --> 00:14:14,250
<font color="#E5E5E5">version</font><font color="#CCCCCC"> five to six</font><font color="#E5E5E5"> we have a new tool</font>

352
00:14:12,209 --> 00:14:16,529
which is<font color="#E5E5E5"> called the upgrade assistant</font>

353
00:14:14,250 --> 00:14:18,680
and the upgrade assistant actually first

354
00:14:16,529 --> 00:14:20,310
it tells<font color="#E5E5E5"> you please back up your data</font>

355
00:14:18,680 --> 00:14:21,750
<font color="#E5E5E5">always</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> that</font>

356
00:14:20,310 --> 00:14:24,510
I will skip<font color="#CCCCCC"> that since I don't</font><font color="#E5E5E5"> have any</font>

357
00:14:21,750 --> 00:14:27,120
proper<font color="#E5E5E5"> data in my cluster</font><font color="#CCCCCC"> I will skip</font>

358
00:14:24,510 --> 00:14:30,209
the<font color="#E5E5E5"> backup</font><font color="#CCCCCC"> but if you do that</font><font color="#E5E5E5"> in</font>

359
00:14:27,120 --> 00:14:34,050
<font color="#CCCCCC">production please please</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> it or don't</font>

360
00:14:30,209 --> 00:14:35,550
complain to<font color="#CCCCCC"> us at</font><font color="#E5E5E5"> least okay and then we</font>

361
00:14:34,050 --> 00:14:37,079
have these cluster checks and the cost

362
00:14:35,550 --> 00:14:38,939
<font color="#E5E5E5">of check is</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> telling you</font><font color="#CCCCCC"> here</font>

363
00:14:37,079 --> 00:14:40,500
something is wrong<font color="#E5E5E5"> here</font><font color="#CCCCCC"> I have in that</font>

364
00:14:38,940 --> 00:14:43,019
dot<font color="#CCCCCC"> Kabana</font><font color="#E5E5E5"> index which is kind of like</font>

365
00:14:40,500 --> 00:14:45,120
<font color="#CCCCCC">an internal index storing what is going</font>

366
00:14:43,019 --> 00:14:45,570
on inside<font color="#CCCCCC"> or like what is configured in</font>

367
00:14:45,120 --> 00:14:48,449
<font color="#CCCCCC">cabaña</font>

368
00:14:45,570 --> 00:14:50,130
<font color="#E5E5E5">and that needs to be changed and it</font>

369
00:14:48,449 --> 00:14:51,750
could either forward you to the

370
00:14:50,130 --> 00:14:54,180
<font color="#E5E5E5">documentation to tell you which commands</font>

371
00:14:51,750 --> 00:14:56,220
to<font color="#CCCCCC"> run or we have this reindex helper</font>

372
00:14:54,180 --> 00:14:57,959
here which can<font color="#E5E5E5"> actually do that for you</font>

373
00:14:56,220 --> 00:15:00,570
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> you can see here</font><font color="#CCCCCC"> at gabbana</font>

374
00:14:57,959 --> 00:15:03,000
index we can reindex<font color="#CCCCCC"> and it will</font>

375
00:15:00,570 --> 00:15:05,610
automatically fix all the<font color="#CCCCCC"> stuff you need</font>

376
00:15:03,000 --> 00:15:08,670
<font color="#E5E5E5">to upgrade in the background for you</font><font color="#CCCCCC"> and</font>

377
00:15:05,610 --> 00:15:10,050
it told you<font color="#E5E5E5"> okay I have done that if you</font>

378
00:15:08,670 --> 00:15:11,729
refresh that<font color="#E5E5E5"> here you see we don't have</font>

379
00:15:10,050 --> 00:15:14,430
any indices which need an upgrade

380
00:15:11,730 --> 00:15:17,490
<font color="#E5E5E5">anymore and if I go to the custard check</font>

381
00:15:14,430 --> 00:15:22,649
you can see<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> everything has been</font>

382
00:15:17,490 --> 00:15:24,899
done as we need<font color="#E5E5E5"> it okay so before</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> do</font>

383
00:15:22,649 --> 00:15:26,970
the actual<font color="#E5E5E5"> upgrade</font><font color="#CCCCCC"> I will quickly insert</font>

384
00:15:24,899 --> 00:15:28,500
these three<font color="#CCCCCC"> documents we come back to</font>

385
00:15:26,970 --> 00:15:30,930
them later so<font color="#CCCCCC"> you might want to remember</font>

386
00:15:28,500 --> 00:15:32,850
them<font color="#E5E5E5"> them what I have here I have three</font>

387
00:15:30,930 --> 00:15:35,250
<font color="#CCCCCC">documents they're all in the index</font><font color="#E5E5E5"> types</font>

388
00:15:32,850 --> 00:15:36,610
so this is the index<font color="#E5E5E5"> types they</font><font color="#CCCCCC"> are of</font>

389
00:15:35,250 --> 00:15:40,000
the

390
00:15:36,610 --> 00:15:42,459
pipe type 1 type 2 type 3 and then they

391
00:15:40,000 --> 00:15:44,290
all have the ID<font color="#CCCCCC"> 1 and</font><font color="#E5E5E5"> we'll just store</font>

392
00:15:42,459 --> 00:15:46,119
them we'll get back to them<font color="#CCCCCC"> we'll see</font>

393
00:15:44,290 --> 00:15:48,819
another<font color="#E5E5E5"> thing that we have changed and</font>

394
00:15:46,120 --> 00:15:50,980
we<font color="#CCCCCC"> need those</font><font color="#E5E5E5"> later</font><font color="#CCCCCC"> on for them so let's</font>

395
00:15:48,820 --> 00:15:54,399
insert our<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> documents</font><font color="#CCCCCC"> we've</font><font color="#E5E5E5"> done that</font>

396
00:15:50,980 --> 00:15:57,940
<font color="#E5E5E5">and now we can actually start upgrading</font>

397
00:15:54,399 --> 00:16:01,480
stuff<font color="#E5E5E5"> so I have this running as a dr.</font>

398
00:15:57,940 --> 00:16:04,300
Katrina<font color="#E5E5E5"> and we'll simply change in the</font>

399
00:16:01,480 --> 00:16:08,380
dot and file I will<font color="#E5E5E5"> switch over from the</font>

400
00:16:04,300 --> 00:16:10,329
5<font color="#E5E5E5"> 6 7 version to 6 to 0 which is not yet</font>

401
00:16:08,380 --> 00:16:14,399
released like the current stable version

402
00:16:10,329 --> 00:16:17,349
is 6 1<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> but 6 2 will also</font><font color="#CCCCCC"> be released</font>

403
00:16:14,399 --> 00:16:18,959
<font color="#E5E5E5">relatively soon but you know you always</font>

404
00:16:17,350 --> 00:16:23,260
need to<font color="#E5E5E5"> test your</font><font color="#CCCCCC"> upcoming releases</font>

405
00:16:18,959 --> 00:16:25,750
today is a good<font color="#E5E5E5"> opportunity so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are</font>

406
00:16:23,260 --> 00:16:28,930
<font color="#E5E5E5">changing that to 6.2 and what I would</font>

407
00:16:25,750 --> 00:16:31,390
<font color="#CCCCCC">we'll do then is</font><font color="#E5E5E5"> I will basically shoot</font>

408
00:16:28,930 --> 00:16:33,670
down the node 3 I have here and this

409
00:16:31,390 --> 00:16:35,920
will be<font color="#E5E5E5"> replaced with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> new version so</font>

410
00:16:33,670 --> 00:16:38,979
let's<font color="#CCCCCC"> run this</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> basically kill</font>

411
00:16:35,920 --> 00:16:41,969
the the node and we<font color="#CCCCCC"> created in the</font>

412
00:16:38,980 --> 00:16:44,079
background and you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see here</font>

413
00:16:41,970 --> 00:16:47,170
elasticsearch 3 let me scroll up<font color="#CCCCCC"> here</font>

414
00:16:44,079 --> 00:16:50,680
<font color="#E5E5E5">exit it with code 143 so it was just</font>

415
00:16:47,170 --> 00:16:53,140
killed<font color="#CCCCCC"> and we've got a new color it's</font>

416
00:16:50,680 --> 00:16:55,959
starting up<font color="#CCCCCC"> again</font><font color="#E5E5E5"> in the meantime we can</font>

417
00:16:53,140 --> 00:16:58,360
<font color="#CCCCCC">keep</font><font color="#E5E5E5"> querying that cluster so you can</font>

418
00:16:55,959 --> 00:17:02,589
see right<font color="#CCCCCC"> now we only have 2</font><font color="#E5E5E5"> nodes in</font>

419
00:16:58,360 --> 00:17:04,630
the cluster 1<font color="#CCCCCC"> and 2 which are 5 6 7 and</font>

420
00:17:02,589 --> 00:17:07,030
you can see elasticsearch 3 already<font color="#E5E5E5"> came</font>

421
00:17:04,630 --> 00:17:10,600
<font color="#CCCCCC">back up and join the cluster and this</font><font color="#E5E5E5"> is</font>

422
00:17:07,030 --> 00:17:12,970
<font color="#CCCCCC">now</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> version 6 and while this looked</font>

423
00:17:10,599 --> 00:17:15,219
super simple this<font color="#E5E5E5"> was one</font><font color="#CCCCCC"> of the main</font>

424
00:17:12,970 --> 00:17:17,829
pain points we had in the past<font color="#E5E5E5"> because</font><font color="#CCCCCC"> a</font>

425
00:17:15,220 --> 00:17:20,589
<font color="#E5E5E5">major version upgrade always meant</font>

426
00:17:17,829 --> 00:17:22,089
taking<font color="#E5E5E5"> down the entire cluster and then</font>

427
00:17:20,589 --> 00:17:24,790
upgrading all the notes and<font color="#E5E5E5"> then</font>

428
00:17:22,089 --> 00:17:26,859
restarting them and now<font color="#CCCCCC"> if from</font><font color="#E5E5E5"> 5 to 6</font>

429
00:17:24,790 --> 00:17:30,129
we<font color="#CCCCCC"> have this mixed version</font><font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> do</font>

430
00:17:26,859 --> 00:17:32,469
an upgrade<font color="#CCCCCC"> with a mixed version</font><font color="#E5E5E5"> 5</font><font color="#CCCCCC"> and 6</font>

431
00:17:30,130 --> 00:17:34,570
<font color="#E5E5E5">and we can just rotate one node by the</font>

432
00:17:32,470 --> 00:17:37,929
<font color="#E5E5E5">next until everything is upgraded to</font>

433
00:17:34,570 --> 00:17:41,139
version 6 and in the meantime let me

434
00:17:37,929 --> 00:17:44,800
quickly kill the node<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> and I can show</font>

435
00:17:41,140 --> 00:17:46,960
<font color="#E5E5E5">you that</font><font color="#CCCCCC"> we can still we can keep</font>

436
00:17:44,800 --> 00:17:48,970
<font color="#E5E5E5">viewing the data in the cluster so you</font>

437
00:17:46,960 --> 00:17:50,860
can run this you can see right<font color="#CCCCCC"> now I</font>

438
00:17:48,970 --> 00:17:54,639
have 1<font color="#CCCCCC"> and</font><font color="#E5E5E5"> 3</font>

439
00:17:50,860 --> 00:17:55,959
one was the<font color="#E5E5E5"> or is the masternode that</font>

440
00:17:54,639 --> 00:17:58,029
might take<font color="#E5E5E5"> a little longer when we</font>

441
00:17:55,960 --> 00:17:59,769
killed that<font color="#CCCCCC"> one done and you can still</font>

442
00:17:58,029 --> 00:18:01,750
read your<font color="#E5E5E5"> data and write your data even</font>

443
00:17:59,769 --> 00:18:02,860
<font color="#CCCCCC">though one of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> notes</font><font color="#E5E5E5"> just was kicked</font>

444
00:18:01,750 --> 00:18:06,250
out of the cluster<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> being</font>

445
00:18:02,860 --> 00:18:08,709
restarted<font color="#E5E5E5"> and if I entertain you long</font>

446
00:18:06,250 --> 00:18:12,370
<font color="#CCCCCC">enough that</font><font color="#E5E5E5"> no to join the cluster soon</font>

447
00:18:08,710 --> 00:18:15,399
again hopefully yeah<font color="#E5E5E5"> so you can see</font><font color="#CCCCCC"> two</font>

448
00:18:12,370 --> 00:18:19,360
and<font color="#CCCCCC"> three are already</font><font color="#E5E5E5"> on six</font><font color="#CCCCCC"> to two</font><font color="#E5E5E5"> so</font>

449
00:18:15,399 --> 00:18:21,939
we<font color="#E5E5E5"> can now upgrade the final node</font><font color="#CCCCCC"> the</font>

450
00:18:19,360 --> 00:18:23,799
one thing I<font color="#CCCCCC"> need is I need</font><font color="#E5E5E5"> to copy out</font>

451
00:18:21,940 --> 00:18:25,630
<font color="#CCCCCC">the curl command cabaña is always</font>

452
00:18:23,799 --> 00:18:28,600
<font color="#E5E5E5">connected to one single elasticsearch</font>

453
00:18:25,630 --> 00:18:30,519
node<font color="#E5E5E5"> so when I upgrade the elasticsearch</font>

454
00:18:28,600 --> 00:18:33,070
one node<font color="#E5E5E5"> this is where who</font><font color="#CCCCCC"> Cubana is</font>

455
00:18:30,519 --> 00:18:34,750
talking to<font color="#E5E5E5"> Cabana will not be usable so</font>

456
00:18:33,070 --> 00:18:39,639
we<font color="#E5E5E5"> need</font><font color="#CCCCCC"> we'll need</font><font color="#E5E5E5"> to fold back to curl</font>

457
00:18:34,750 --> 00:18:42,760
in<font color="#E5E5E5"> the meantime so let me kill or</font>

458
00:18:39,639 --> 00:18:45,459
upgrade the elasticsearch one<font color="#E5E5E5"> node you</font>

459
00:18:42,760 --> 00:18:48,070
can<font color="#CCCCCC"> see here stuff is happening in the</font>

460
00:18:45,460 --> 00:18:50,289
<font color="#CCCCCC">background when I try to reload that</font>

461
00:18:48,070 --> 00:18:52,480
page it will<font color="#E5E5E5"> fail because well I cannot</font>

462
00:18:50,289 --> 00:18:55,120
reach my<font color="#CCCCCC"> elastic search node anymore</font>

463
00:18:52,480 --> 00:18:58,539
<font color="#E5E5E5">but we can still check on the command</font>

464
00:18:55,120 --> 00:19:00,879
line<font color="#E5E5E5"> so if I run the curl</font><font color="#CCCCCC"> command</font><font color="#E5E5E5"> you</font>

465
00:18:58,539 --> 00:19:02,019
can<font color="#E5E5E5"> still see the cluster still working</font>

466
00:19:00,880 --> 00:19:03,820
as expected

467
00:19:02,019 --> 00:19:05,380
<font color="#E5E5E5">elastic search</font><font color="#CCCCCC"> too has</font><font color="#E5E5E5"> become the new</font>

468
00:19:03,820 --> 00:19:08,649
master node now

469
00:19:05,380 --> 00:19:10,750
so the<font color="#CCCCCC"> ports were</font><font color="#E5E5E5"> nine thousand two</font>

470
00:19:08,649 --> 00:19:12,729
<font color="#CCCCCC">hundred one was elastic search one the</font>

471
00:19:10,750 --> 00:19:15,220
two is less search<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 3 would</font><font color="#CCCCCC"> be</font>

472
00:19:12,730 --> 00:19:17,740
<font color="#E5E5E5">elastic search</font><font color="#CCCCCC"> three so this</font><font color="#E5E5E5"> is working</font>

473
00:19:15,220 --> 00:19:20,769
<font color="#CCCCCC">and we're basically</font><font color="#E5E5E5"> waiting for the node</font>

474
00:19:17,740 --> 00:19:25,470
to join back so it's back we can switch

475
00:19:20,769 --> 00:19:25,470
back<font color="#CCCCCC"> to Cabana let's</font><font color="#E5E5E5"> refresh</font><font color="#CCCCCC"> that one</font>

476
00:19:27,389 --> 00:19:36,309
we just need to scroll<font color="#CCCCCC"> down</font><font color="#E5E5E5"> here to the</font>

477
00:19:31,000 --> 00:19:38,590
right place where we had<font color="#E5E5E5"> that yet our</font>

478
00:19:36,309 --> 00:19:41,200
data<font color="#E5E5E5"> is still there the cluster has</font><font color="#CCCCCC"> been</font>

479
00:19:38,590 --> 00:19:42,959
fully upgraded now<font color="#CCCCCC"> the</font><font color="#E5E5E5"> remaining thing</font>

480
00:19:41,200 --> 00:19:47,740
we need<font color="#CCCCCC"> to do is we need to upgrade</font>

481
00:19:42,960 --> 00:19:50,260
<font color="#CCCCCC">Cabana</font><font color="#E5E5E5"> so let's run that</font><font color="#CCCCCC"> I just kill the</font>

482
00:19:47,740 --> 00:19:52,090
<font color="#CCCCCC">Cabana node and everybody who's</font>

483
00:19:50,260 --> 00:19:54,490
complaining about<font color="#CCCCCC"> Java taking a long</font>

484
00:19:52,090 --> 00:19:57,908
time<font color="#E5E5E5"> to</font><font color="#CCCCCC"> start up again let's</font><font color="#E5E5E5"> wait until</font>

485
00:19:54,490 --> 00:20:00,070
that node process comes back<font color="#CCCCCC"> because I</font>

486
00:19:57,909 --> 00:20:01,210
always have the<font color="#CCCCCC"> feeling that that one</font>

487
00:20:00,070 --> 00:20:03,879
node thing

488
00:20:01,210 --> 00:20:07,559
is<font color="#E5E5E5"> taking up the most time so we have</font>

489
00:20:03,880 --> 00:20:10,210
killed<font color="#CCCCCC"> Cabana cabana will be gone if we</font>

490
00:20:07,559 --> 00:20:12,610
go here<font color="#CCCCCC"> page</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> available since</font>

491
00:20:10,210 --> 00:20:14,770
<font color="#E5E5E5">Cabana is starting up again the cluster</font>

492
00:20:12,610 --> 00:20:17,139
in the<font color="#E5E5E5"> meantime is happily working in</font>

493
00:20:14,770 --> 00:20:18,700
<font color="#CCCCCC">the background so you</font><font color="#E5E5E5"> can still run your</font>

494
00:20:17,140 --> 00:20:23,370
<font color="#E5E5E5">queries just keep on is not available</font>

495
00:20:18,700 --> 00:20:26,500
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you can see it still it exited and</font>

496
00:20:23,370 --> 00:20:29,320
it's starting up<font color="#CCCCCC"> again and will take</font>

497
00:20:26,500 --> 00:20:33,450
some<font color="#CCCCCC"> time until</font><font color="#E5E5E5"> I don't know a million</font>

498
00:20:29,320 --> 00:20:33,450
<font color="#CCCCCC">NPM dependencies are being loaded I</font>

499
00:20:35,909 --> 00:20:41,100
still have to<font color="#E5E5E5"> keep on a team but yeah</font>

500
00:20:41,159 --> 00:20:48,610
this might<font color="#E5E5E5"> take a while anyway so we</font>

501
00:20:46,870 --> 00:20:52,330
<font color="#CCCCCC">have fully upgraded the</font><font color="#E5E5E5"> major version</font>

502
00:20:48,610 --> 00:20:55,719
now<font color="#E5E5E5"> and now we will be at version 6 and</font>

503
00:20:52,330 --> 00:20:59,980
you can see<font color="#CCCCCC"> Cabana</font><font color="#E5E5E5"> also slightly changed</font>

504
00:20:55,720 --> 00:21:00,549
its color<font color="#CCCCCC"> I always say 3 was black</font><font color="#E5E5E5"> 4 was</font>

505
00:20:59,980 --> 00:21:06,159
white

506
00:21:00,549 --> 00:21:07,690
5 was colorful and<font color="#E5E5E5"> 6 is blue but I have</font>

507
00:21:06,159 --> 00:21:10,240
been told<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is much better</font>

508
00:21:07,690 --> 00:21:12,820
readable if you're<font color="#E5E5E5"> visually impaired or</font>

509
00:21:10,240 --> 00:21:15,190
a<font color="#E5E5E5"> colorblind</font><font color="#CCCCCC"> and like</font><font color="#E5E5E5"> contrasts are</font>

510
00:21:12,820 --> 00:21:18,340
better so this this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the new thing so</font>

511
00:21:15,190 --> 00:21:21,520
this is what you want and you can<font color="#E5E5E5"> see</font>

512
00:21:18,340 --> 00:21:23,860
major version upgrade done everything up

513
00:21:21,520 --> 00:21:26,260
and<font color="#E5E5E5"> running no problems there so that</font>

514
00:21:23,860 --> 00:21:28,719
was surprisingly easy<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> continue</font>

515
00:21:26,260 --> 00:21:31,029
<font color="#E5E5E5">with other features yeah so this was</font>

516
00:21:28,720 --> 00:21:33,130
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> the upgrade</font><font color="#CCCCCC"> it's the train is</font>

517
00:21:31,029 --> 00:21:35,770
<font color="#E5E5E5">running you're just laying the tracks</font>

518
00:21:33,130 --> 00:21:37,419
while you run on them<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> pretty much</font>

519
00:21:35,770 --> 00:21:41,710
<font color="#CCCCCC">the rolling upgrade we've added</font><font color="#E5E5E5"> so</font>

520
00:21:37,419 --> 00:21:44,559
that's kind of nice feature<font color="#E5E5E5"> so</font><font color="#CCCCCC"> other</font>

521
00:21:41,710 --> 00:21:46,330
security things in the context of not

522
00:21:44,559 --> 00:21:48,789
kind<font color="#E5E5E5"> of destroying your cluster are</font>

523
00:21:46,330 --> 00:21:51,879
flood stages if you have used previous

524
00:21:48,789 --> 00:21:55,690
versions before<font color="#CCCCCC"> 6</font><font color="#E5E5E5"> there were</font><font color="#CCCCCC"> 2 flood</font>

525
00:21:51,880 --> 00:21:58,260
stages so<font color="#E5E5E5"> flood stage is pretty much</font><font color="#CCCCCC"> or</font>

526
00:21:55,690 --> 00:22:01,210
you don't<font color="#E5E5E5"> want to run into something and</font>

527
00:21:58,260 --> 00:22:04,690
everything<font color="#E5E5E5"> falls over because you</font><font color="#CCCCCC"> ran</font>

528
00:22:01,210 --> 00:22:07,090
<font color="#CCCCCC">out of disk space so we</font><font color="#E5E5E5"> always had the</font>

529
00:22:04,690 --> 00:22:09,610
low and<font color="#CCCCCC"> the high watermark we told</font><font color="#E5E5E5"> them</font>

530
00:22:07,090 --> 00:22:12,639
so the low water mark was basically we

531
00:22:09,610 --> 00:22:13,600
<font color="#E5E5E5">would not allocate a new</font><font color="#CCCCCC"> chart on a node</font>

532
00:22:12,639 --> 00:22:15,909
if more than

533
00:22:13,600 --> 00:22:18,520
85% of his disk space were used up<font color="#E5E5E5"> and</font>

534
00:22:15,910 --> 00:22:20,980
once you have reached 90%<font color="#E5E5E5"> of disk space</font>

535
00:22:18,520 --> 00:22:23,320
of a<font color="#E5E5E5"> node would try to actively migrate</font>

536
00:22:20,980 --> 00:22:25,150
shards away from that node<font color="#E5E5E5"> problem is if</font>

537
00:22:23,320 --> 00:22:28,750
there is<font color="#E5E5E5"> no more space in the custard it</font>

538
00:22:25,150 --> 00:22:31,120
cannot go<font color="#CCCCCC"> anywhere</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> what we</font>

539
00:22:28,750 --> 00:22:33,070
didn't do is<font color="#E5E5E5"> we never stopped</font><font color="#CCCCCC"> writes</font><font color="#E5E5E5"> so</font>

540
00:22:31,120 --> 00:22:35,139
if you kept<font color="#E5E5E5"> the writing to the same</font>

541
00:22:33,070 --> 00:22:37,059
twist to a shot<font color="#E5E5E5"> that was in a node at</font>

542
00:22:35,140 --> 00:22:38,740
some point you might run out of disk<font color="#E5E5E5"> and</font>

543
00:22:37,059 --> 00:22:41,940
I guess<font color="#E5E5E5"> everybody knows if you run</font><font color="#CCCCCC"> out</font>

544
00:22:38,740 --> 00:22:45,160
of disk<font color="#E5E5E5"> it will be a pretty shitty day</font>

545
00:22:41,940 --> 00:22:46,870
<font color="#E5E5E5">and we're trying to avoid</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> now so we</font>

546
00:22:45,160 --> 00:22:48,940
<font color="#E5E5E5">have added the flood stage the flood</font>

547
00:22:46,870 --> 00:22:51,158
stage<font color="#E5E5E5"> we will</font><font color="#CCCCCC"> basically reject your</font>

548
00:22:48,940 --> 00:22:53,409
rights once you hit this is the default

549
00:22:51,159 --> 00:22:55,900
<font color="#CCCCCC">setting more than</font><font color="#E5E5E5"> 95% of the disk space</font>

550
00:22:53,409 --> 00:22:58,510
<font color="#CCCCCC">use so if you only</font><font color="#E5E5E5"> have 5% of the disk</font>

551
00:22:55,900 --> 00:23:00,700
<font color="#E5E5E5">left we will</font><font color="#CCCCCC"> reject</font><font color="#E5E5E5"> your rights rather</font>

552
00:22:58,510 --> 00:23:04,830
than<font color="#CCCCCC"> potentially corrupting your data</font>

553
00:23:00,700 --> 00:23:08,919
and I<font color="#E5E5E5"> can very</font><font color="#CCCCCC"> quickly show that as well</font>

554
00:23:04,830 --> 00:23:13,689
let me scroll here so I'm adding a new

555
00:23:08,919 --> 00:23:16,270
document into<font color="#E5E5E5"> the index my flood and</font><font color="#CCCCCC"> we</font>

556
00:23:13,690 --> 00:23:18,220
can check how<font color="#CCCCCC"> much disk we have left you</font>

557
00:23:16,270 --> 00:23:20,260
can see here we<font color="#E5E5E5"> have total bytes free in</font>

558
00:23:18,220 --> 00:23:24,730
bytes<font color="#E5E5E5"> we have all the</font><font color="#CCCCCC"> statistics and</font>

559
00:23:20,260 --> 00:23:27,549
what<font color="#E5E5E5"> I'm setting now is that laptop has</font>

560
00:23:24,730 --> 00:23:31,210
250 gigs of disk<font color="#E5E5E5"> so if I set the flood</font>

561
00:23:27,549 --> 00:23:36,059
stages to 400 350<font color="#E5E5E5"> and 306 I will have</font>

562
00:23:31,210 --> 00:23:38,740
hit all the flood stages<font color="#E5E5E5"> immediately and</font>

563
00:23:36,059 --> 00:23:41,080
that will refresh<font color="#E5E5E5"> after 10</font><font color="#CCCCCC"> seconds</font><font color="#E5E5E5"> so</font>

564
00:23:38,740 --> 00:23:45,190
let's<font color="#CCCCCC"> apply</font><font color="#E5E5E5"> that we have set the flood</font>

565
00:23:41,080 --> 00:23:46,720
stages<font color="#CCCCCC"> I can still read my documents we</font>

566
00:23:45,190 --> 00:23:50,049
<font color="#E5E5E5">need to wait for</font><font color="#CCCCCC"> 10 seconds until</font><font color="#E5E5E5"> this</font>

567
00:23:46,720 --> 00:23:53,110
setting is applied but my<font color="#CCCCCC"> write should</font>

568
00:23:50,049 --> 00:23:55,480
now be rejected<font color="#E5E5E5"> so if you're right here</font>

569
00:23:53,110 --> 00:23:57,939
it will<font color="#E5E5E5"> actually tell me it was</font>

570
00:23:55,480 --> 00:23:59,950
<font color="#CCCCCC">forbidden</font><font color="#E5E5E5"> you can only read data or you</font>

571
00:23:57,940 --> 00:24:04,179
can delete data but<font color="#E5E5E5"> you cannot update or</font>

572
00:23:59,950 --> 00:24:05,620
<font color="#E5E5E5">index new data so those are not allowed</font>

573
00:24:04,179 --> 00:24:07,600
because<font color="#E5E5E5"> otherwise you might run out</font><font color="#CCCCCC"> of</font>

574
00:24:05,620 --> 00:24:11,049
<font color="#E5E5E5">this space</font><font color="#CCCCCC"> and corrupted data</font><font color="#E5E5E5"> so we kind</font>

575
00:24:07,600 --> 00:24:14,049
<font color="#E5E5E5">of turned that off</font><font color="#CCCCCC"> let's revert those</font>

576
00:24:11,049 --> 00:24:16,150
settings<font color="#E5E5E5"> so in version 5 I think</font><font color="#CCCCCC"> we</font>

577
00:24:14,049 --> 00:24:17,918
added that to<font color="#E5E5E5"> just set something back to</font>

578
00:24:16,150 --> 00:24:21,450
the default value<font color="#E5E5E5"> you set it to null and</font>

579
00:24:17,919 --> 00:24:24,700
all the<font color="#E5E5E5"> settings will be reverted so</font>

580
00:24:21,450 --> 00:24:26,590
<font color="#E5E5E5">should this command now work if I try to</font>

581
00:24:24,700 --> 00:24:29,700
write another document<font color="#E5E5E5"> in there</font>

582
00:24:26,590 --> 00:24:36,539
any guesses<font color="#CCCCCC"> who thinks this will work</font>

583
00:24:29,700 --> 00:24:40,720
who<font color="#E5E5E5"> thinks this will fail hmm</font>

584
00:24:36,539 --> 00:24:45,519
the rest are undecided<font color="#E5E5E5"> okay so the thing</font>

585
00:24:40,720 --> 00:24:47,499
<font color="#CCCCCC">is once a class or a node once you so if</font>

586
00:24:45,519 --> 00:24:50,230
a shard of<font color="#E5E5E5"> an index has</font><font color="#CCCCCC"> been on a</font><font color="#E5E5E5"> node</font>

587
00:24:47,499 --> 00:24:52,659
that<font color="#CCCCCC"> has hit that</font><font color="#E5E5E5"> flood stage water mark</font>

588
00:24:50,230 --> 00:24:54,519
<font color="#E5E5E5">we will lock</font><font color="#CCCCCC"> that entire index and you</font>

589
00:24:52,659 --> 00:24:57,970
will need to<font color="#E5E5E5"> unlock it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> re-enable</font>

590
00:24:54,519 --> 00:24:59,679
<font color="#CCCCCC">writes</font><font color="#E5E5E5"> so if I run</font><font color="#CCCCCC"> that it will fail</font>

591
00:24:57,970 --> 00:25:02,350
because it's still<font color="#E5E5E5"> in the lock state</font><font color="#CCCCCC"> I</font>

592
00:24:59,679 --> 00:25:05,830
need to unlock<font color="#E5E5E5"> it by setting that index</font>

593
00:25:02,350 --> 00:25:08,678
blocks read<font color="#E5E5E5"> only allow delete</font><font color="#CCCCCC"> I reset</font>

594
00:25:05,830 --> 00:25:10,539
that basically once I reset that then i

595
00:25:08,679 --> 00:25:12,340
<font color="#E5E5E5">can write documents back into my index</font>

596
00:25:10,539 --> 00:25:14,110
<font color="#E5E5E5">so this is a little trap you need to be</font>

597
00:25:12,340 --> 00:25:16,959
aware of once you hit that flood stage

598
00:25:14,110 --> 00:25:19,539
<font color="#CCCCCC">watermark you need to kind</font><font color="#E5E5E5"> of re-enable</font>

599
00:25:16,960 --> 00:25:23,529
the index for writing again otherwise<font color="#E5E5E5"> we</font>

600
00:25:19,539 --> 00:25:25,269
will not<font color="#E5E5E5"> allow</font><font color="#CCCCCC"> rights</font><font color="#E5E5E5"> okay this is one</font>

601
00:25:23,529 --> 00:25:26,769
<font color="#E5E5E5">of the things that will protect the data</font>

602
00:25:25,269 --> 00:25:28,539
<font color="#E5E5E5">in</font><font color="#CCCCCC"> your cluster</font><font color="#E5E5E5"> even though it will</font>

603
00:25:26,769 --> 00:25:31,509
reject new<font color="#CCCCCC"> writes but we think</font><font color="#E5E5E5"> this is</font>

604
00:25:28,539 --> 00:25:33,369
<font color="#E5E5E5">kind of the right trade-off</font><font color="#CCCCCC"> the next</font>

605
00:25:31,509 --> 00:25:35,379
very big feature we have added<font color="#E5E5E5"> our</font>

606
00:25:33,369 --> 00:25:37,119
sequence numbers sequence numbers are

607
00:25:35,379 --> 00:25:40,209
basically<font color="#E5E5E5"> keeping track of every change</font>

608
00:25:37,119 --> 00:25:42,309
<font color="#E5E5E5">you do in your data and add some</font>

609
00:25:40,210 --> 00:25:45,159
sequence number<font color="#CCCCCC"> to that and this</font><font color="#E5E5E5"> is</font>

610
00:25:42,309 --> 00:25:47,049
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> surprisingly hard</font><font color="#CCCCCC"> so let's see</font>

611
00:25:45,159 --> 00:25:48,730
what this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> giving us just to give you</font>

612
00:25:47,049 --> 00:25:51,309
an<font color="#E5E5E5"> impression of</font><font color="#CCCCCC"> what is</font><font color="#E5E5E5"> going on behind</font>

613
00:25:48,730 --> 00:25:52,840
the<font color="#CCCCCC"> scenes so we</font><font color="#E5E5E5"> have the primary shot</font>

614
00:25:51,309 --> 00:25:55,658
here<font color="#E5E5E5"> and you're writing</font><font color="#CCCCCC"> data to the</font>

615
00:25:52,840 --> 00:25:57,610
primary<font color="#E5E5E5"> shot and then that data is</font>

616
00:25:55,659 --> 00:25:59,649
replicated we have two copies<font color="#CCCCCC"> here we</font>

617
00:25:57,610 --> 00:26:02,799
<font color="#CCCCCC">are replicating</font><font color="#E5E5E5"> the data the yellow line</font>

618
00:25:59,649 --> 00:26:05,258
is a local<font color="#E5E5E5"> checkpoint and with every</font>

619
00:26:02,799 --> 00:26:06,940
<font color="#E5E5E5">right we kind of piggyback on the</font>

620
00:26:05,259 --> 00:26:08,470
<font color="#CCCCCC">acknowledgement back with the local</font>

621
00:26:06,940 --> 00:26:10,450
checkpoint and<font color="#E5E5E5"> then we can advance the</font>

622
00:26:08,470 --> 00:26:14,230
global checkpoint so you can see we have

623
00:26:10,450 --> 00:26:16,149
written two and three<font color="#CCCCCC"> now while writing</font>

624
00:26:14,230 --> 00:26:18,700
<font color="#CCCCCC">it</font><font color="#E5E5E5"> out and the</font><font color="#CCCCCC"> acknowledgement back is</font>

625
00:26:16,149 --> 00:26:21,699
basically telling the primary shot<font color="#E5E5E5"> that</font>

626
00:26:18,700 --> 00:26:25,029
those have<font color="#CCCCCC"> been acknowledged</font><font color="#E5E5E5"> and we can</font>

627
00:26:21,700 --> 00:26:28,720
advance the global checkpoint and now we

628
00:26:25,029 --> 00:26:30,639
write<font color="#E5E5E5"> 4 5 6 and then</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> primary shot</font>

629
00:26:28,720 --> 00:26:34,600
dies<font color="#E5E5E5"> or the node with</font><font color="#CCCCCC"> the primary</font><font color="#E5E5E5"> shot</font>

630
00:26:30,639 --> 00:26:37,570
dies and the<font color="#E5E5E5"> replica shot</font><font color="#CCCCCC"> 1 gets 5 & 6</font>

631
00:26:34,600 --> 00:26:39,668
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> replica 2 gets 4 & 6</font>

632
00:26:37,570 --> 00:26:40,389
this one is promoted to<font color="#CCCCCC"> be the</font><font color="#E5E5E5"> new</font>

633
00:26:39,669 --> 00:26:43,300
<font color="#E5E5E5">primary</font>

634
00:26:40,390 --> 00:26:45,040
it has never seen the<font color="#E5E5E5"> for update so it</font>

635
00:26:43,300 --> 00:26:48,100
tells the other<font color="#CCCCCC"> note</font><font color="#E5E5E5"> get rid of that for</font>

636
00:26:45,040 --> 00:26:50,200
update and only<font color="#E5E5E5"> apply the other ones so</font>

637
00:26:48,100 --> 00:26:53,199
this makes<font color="#CCCCCC"> sure all the</font><font color="#E5E5E5"> data is synced</font>

638
00:26:50,200 --> 00:26:56,310
up and we don't<font color="#E5E5E5"> have any</font><font color="#CCCCCC"> phantom writes</font>

639
00:26:53,200 --> 00:26:58,780
<font color="#E5E5E5">or stale writes</font>

640
00:26:56,310 --> 00:27:00,580
this is China for the<font color="#E5E5E5"> integrity of the</font>

641
00:26:58,780 --> 00:27:02,340
<font color="#CCCCCC">data</font><font color="#E5E5E5"> a very important thing and it makes</font>

642
00:27:00,580 --> 00:27:05,530
<font color="#E5E5E5">keeping everything in soon much easier</font>

643
00:27:02,340 --> 00:27:07,770
and you<font color="#CCCCCC"> can actually demo</font><font color="#E5E5E5"> sequence</font>

644
00:27:05,530 --> 00:27:11,800
numbers<font color="#E5E5E5"> which sounds kind of hard but</font>

645
00:27:07,770 --> 00:27:15,400
it's actually<font color="#CCCCCC"> not that hard</font><font color="#E5E5E5"> so I'm</font>

646
00:27:11,800 --> 00:27:18,820
creating<font color="#E5E5E5"> a new index this new index has</font>

647
00:27:15,400 --> 00:27:21,730
one<font color="#E5E5E5"> primary shot and one replica shot</font>

648
00:27:18,820 --> 00:27:27,129
<font color="#CCCCCC">how many shots</font><font color="#E5E5E5"> do we have in total who</font>

649
00:27:21,730 --> 00:27:32,740
is<font color="#E5E5E5"> for one nobody who is for two who is</font>

650
00:27:27,130 --> 00:27:34,870
for more than<font color="#CCCCCC"> two no it's too</font><font color="#E5E5E5"> if one</font>

651
00:27:32,740 --> 00:27:36,880
primary shot and if we say<font color="#E5E5E5"> replica we</font>

652
00:27:34,870 --> 00:27:39,399
say one other copy so it's one primary

653
00:27:36,880 --> 00:27:41,020
shot and one replica shot and since I

654
00:27:39,400 --> 00:27:43,630
<font color="#CCCCCC">need to kill notes again and I still</font>

655
00:27:41,020 --> 00:27:45,280
<font color="#E5E5E5">want to keep using Cabana</font><font color="#CCCCCC"> I say this</font>

656
00:27:43,630 --> 00:27:47,020
data cannot<font color="#CCCCCC"> be allocated</font><font color="#E5E5E5"> to the</font>

657
00:27:45,280 --> 00:27:48,970
<font color="#CCCCCC">elasticsearch one node because Cabana is</font>

658
00:27:47,020 --> 00:27:51,430
talking to<font color="#E5E5E5"> that specific node so this</font>

659
00:27:48,970 --> 00:27:53,530
<font color="#E5E5E5">index one primary shot will be on the</font>

660
00:27:51,430 --> 00:27:55,450
<font color="#E5E5E5">elastic search or one one shot will</font><font color="#CCCCCC"> be</font>

661
00:27:53,530 --> 00:27:57,040
on the elastic search<font color="#CCCCCC"> two node and one</font>

662
00:27:55,450 --> 00:27:59,410
<font color="#E5E5E5">shot will</font><font color="#CCCCCC"> be on the elastic search three</font>

663
00:27:57,040 --> 00:28:02,649
node but I can show<font color="#CCCCCC"> that in a moment so</font>

664
00:27:59,410 --> 00:28:04,150
let's insert<font color="#E5E5E5"> that data it has</font><font color="#CCCCCC"> been</font>

665
00:28:02,650 --> 00:28:07,210
acknowledged<font color="#E5E5E5"> and then we can</font><font color="#CCCCCC"> actually</font>

666
00:28:04,150 --> 00:28:09,550
check<font color="#CCCCCC"> out okay we have two shots as</font>

667
00:28:07,210 --> 00:28:11,710
promised<font color="#E5E5E5"> you can see the primary shot</font>

668
00:28:09,550 --> 00:28:14,290
that is that<font color="#E5E5E5"> P here the primary shot is</font>

669
00:28:11,710 --> 00:28:17,940
<font color="#CCCCCC">on</font><font color="#E5E5E5"> elastic search</font><font color="#CCCCCC"> 3 and the replica shot</font>

670
00:28:14,290 --> 00:28:20,470
<font color="#CCCCCC">is all elastic search to remember that</font>

671
00:28:17,940 --> 00:28:21,670
elastic search 3 is the primary shot we

672
00:28:20,470 --> 00:28:24,490
will need<font color="#E5E5E5"> that</font><font color="#CCCCCC"> knowledge in one minute</font>

673
00:28:21,670 --> 00:28:28,210
<font color="#CCCCCC">and I will probably forget it so I will</font>

674
00:28:24,490 --> 00:28:31,030
<font color="#CCCCCC">ask</font><font color="#E5E5E5"> you and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> you can start inserting</font>

675
00:28:28,210 --> 00:28:33,910
documents and if you have seen inserts

676
00:28:31,030 --> 00:28:36,399
<font color="#E5E5E5">in previous versions this block here</font>

677
00:28:33,910 --> 00:28:38,800
looks very<font color="#CCCCCC"> familiar</font><font color="#E5E5E5"> this one here is new</font>

678
00:28:36,400 --> 00:28:41,140
so we have a sequence<font color="#CCCCCC"> number and a</font>

679
00:28:38,800 --> 00:28:42,970
<font color="#CCCCCC">primary term the</font><font color="#E5E5E5"> frequent number is</font>

680
00:28:41,140 --> 00:28:44,740
<font color="#E5E5E5">basically the number of write operations</font>

681
00:28:42,970 --> 00:28:46,990
so if I do another write operation this

682
00:28:44,740 --> 00:28:49,240
will be incremented here the primary

683
00:28:46,990 --> 00:28:52,900
term will change every time<font color="#E5E5E5"> the primary</font>

684
00:28:49,240 --> 00:28:54,250
shard<font color="#E5E5E5"> changes so when I kill the elastic</font>

685
00:28:52,900 --> 00:28:58,000
search<font color="#E5E5E5"> three nodes</font>

686
00:28:54,250 --> 00:28:59,530
that<font color="#E5E5E5"> primary term should change so let's</font>

687
00:28:58,000 --> 00:29:02,230
do some<font color="#CCCCCC"> write operations so you can see</font>

688
00:28:59,530 --> 00:29:04,899
the<font color="#E5E5E5"> sequence number keeps changing</font>

689
00:29:02,230 --> 00:29:06,670
that's all easy<font color="#CCCCCC"> if I take a specific</font>

690
00:29:04,900 --> 00:29:10,330
document<font color="#E5E5E5"> here for example</font><font color="#CCCCCC"> the document 1</font>

691
00:29:06,670 --> 00:29:11,980
and I insert<font color="#E5E5E5"> it it increments</font><font color="#CCCCCC"> do you</font>

692
00:29:10,330 --> 00:29:15,850
think the increment<font color="#E5E5E5"> also increments when</font>

693
00:29:11,980 --> 00:29:17,080
<font color="#CCCCCC">I do the same operation again</font><font color="#E5E5E5"> yes it</font>

694
00:29:15,850 --> 00:29:18,520
will<font color="#E5E5E5"> because it's just an in-place</font>

695
00:29:17,080 --> 00:29:20,949
update so this will<font color="#CCCCCC"> replace every</font>

696
00:29:18,520 --> 00:29:22,929
version<font color="#E5E5E5"> if I delete that document 1</font>

697
00:29:20,950 --> 00:29:24,910
again<font color="#E5E5E5"> if I delete</font><font color="#CCCCCC"> it ok it increments</font>

698
00:29:22,929 --> 00:29:27,520
<font color="#E5E5E5">the counter if I delete it again</font>

699
00:29:24,910 --> 00:29:30,450
nothing changes<font color="#E5E5E5"> we did increment the</font>

700
00:29:27,520 --> 00:29:32,710
number yeah it does

701
00:29:30,450 --> 00:29:33,970
so we are keeping<font color="#CCCCCC"> track of</font><font color="#E5E5E5"> all the</font>

702
00:29:32,710 --> 00:29:35,440
<font color="#CCCCCC">changes that</font><font color="#E5E5E5"> you send to the cluster</font>

703
00:29:33,970 --> 00:29:37,809
even if we have already<font color="#CCCCCC"> applied and</font><font color="#E5E5E5"> we</font>

704
00:29:35,440 --> 00:29:40,660
don't really<font color="#E5E5E5"> care</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> what they do</font><font color="#CCCCCC"> any</font>

705
00:29:37,809 --> 00:29:44,710
kind of like in the effect afterwards<font color="#CCCCCC"> is</font>

706
00:29:40,660 --> 00:29:49,510
<font color="#E5E5E5">just like counting these operations</font><font color="#CCCCCC"> ok</font>

707
00:29:44,710 --> 00:29:56,620
<font color="#E5E5E5">which one was the primary shot 3 right</font>

708
00:29:49,510 --> 00:29:59,220
<font color="#E5E5E5">so we will kill the 3 note since this is</font>

709
00:29:56,620 --> 00:30:05,049
randomly<font color="#E5E5E5"> allocated let's kill the</font><font color="#CCCCCC"> 3 node</font>

710
00:29:59,220 --> 00:30:06,549
<font color="#E5E5E5">and then you can check and you can see</font>

711
00:30:05,049 --> 00:30:09,340
now the new primary shot is

712
00:30:06,549 --> 00:30:12,820
elasticsearch<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> and the replica shot is</font>

713
00:30:09,340 --> 00:30:16,178
unassigned<font color="#CCCCCC"> why did we not educated on</font>

714
00:30:12,820 --> 00:30:17,530
<font color="#E5E5E5">the elasticsearch 1 node because we have</font>

715
00:30:16,179 --> 00:30:19,450
the short filter where we<font color="#E5E5E5"> told it it</font>

716
00:30:17,530 --> 00:30:21,970
could not go<font color="#CCCCCC"> there</font><font color="#E5E5E5"> why don't we allocate</font>

717
00:30:19,450 --> 00:30:26,530
<font color="#CCCCCC">the replicas copy on the elasticsearch</font>

718
00:30:21,970 --> 00:30:26,980
to node as<font color="#E5E5E5"> well because we don't win</font>

719
00:30:26,530 --> 00:30:28,720
anything

720
00:30:26,980 --> 00:30:30,280
we never allocate the replication<font color="#E5E5E5"> on the</font>

721
00:30:28,720 --> 00:30:32,260
same node because if<font color="#E5E5E5"> that knows</font><font color="#CCCCCC"> node</font>

722
00:30:30,280 --> 00:30:34,030
goes down both the<font color="#E5E5E5"> primary and the</font>

723
00:30:32,260 --> 00:30:36,129
<font color="#CCCCCC">replicas shot will</font><font color="#E5E5E5"> go down and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font>

724
00:30:34,030 --> 00:30:42,760
<font color="#E5E5E5">just wasted half of your disk space you</font>

725
00:30:36,130 --> 00:30:45,880
<font color="#E5E5E5">would not win anything so that was easy</font>

726
00:30:42,760 --> 00:30:50,559
<font color="#E5E5E5">we can keep indexing your documents</font>

727
00:30:45,880 --> 00:30:52,780
let's keep track 1 2 3 4 5<font color="#E5E5E5"> I've inserted</font>

728
00:30:50,559 --> 00:30:55,899
5 new documents which was only<font color="#E5E5E5"> going to</font>

729
00:30:52,780 --> 00:30:59,530
the<font color="#E5E5E5"> primary shot now let's restart that</font>

730
00:30:55,900 --> 00:31:04,900
<font color="#E5E5E5">node it should join as a replica node</font>

731
00:30:59,530 --> 00:31:07,500
again so it will take<font color="#CCCCCC"> a few moments</font>

732
00:31:04,900 --> 00:31:09,520
until<font color="#E5E5E5"> that one comes back up</font>

733
00:31:07,500 --> 00:31:10,990
so right now the<font color="#E5E5E5"> replica shot is</font>

734
00:31:09,520 --> 00:31:12,460
unassigned<font color="#CCCCCC"> but in a moment once that</font>

735
00:31:10,990 --> 00:31:14,020
<font color="#E5E5E5">note comes back up the elasticsearch</font>

736
00:31:12,460 --> 00:31:17,560
<font color="#CCCCCC">three</font><font color="#E5E5E5"> note should be the new replica</font>

737
00:31:14,020 --> 00:31:22,810
shot and elasticsearch<font color="#CCCCCC"> two will stay my</font>

738
00:31:17,560 --> 00:31:23,550
primary shot<font color="#CCCCCC"> at hope the demo gods are</font>

739
00:31:22,810 --> 00:31:31,929
<font color="#E5E5E5">with me</font>

740
00:31:23,550 --> 00:31:36,280
let's check<font color="#CCCCCC"> ok it's a started so this</font>

741
00:31:31,930 --> 00:31:40,060
should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> good let's check</font><font color="#CCCCCC"> again yes</font><font color="#E5E5E5"> so</font>

742
00:31:36,280 --> 00:31:43,200
you can<font color="#CCCCCC"> see elasticsearch 3 is now</font><font color="#E5E5E5"> the</font>

743
00:31:40,060 --> 00:31:45,840
replica shot everything<font color="#E5E5E5"> went as expected</font>

744
00:31:43,200 --> 00:31:48,880
<font color="#E5E5E5">and now comes one of the big</font>

745
00:31:45,840 --> 00:31:52,330
improvements<font color="#E5E5E5"> of this approach</font><font color="#CCCCCC"> when I</font><font color="#E5E5E5"> run</font>

746
00:31:48,880 --> 00:31:54,960
this command here which says tell me<font color="#E5E5E5"> how</font>

747
00:31:52,330 --> 00:31:57,429
we did recovery wise it will tell me

748
00:31:54,960 --> 00:32:00,750
<font color="#E5E5E5">scroll this over a little you can</font><font color="#CCCCCC"> see</font>

749
00:31:57,430 --> 00:32:02,890
elasticsearch<font color="#CCCCCC"> - - elasticsearch 3</font>

750
00:32:00,750 --> 00:32:04,570
<font color="#CCCCCC">recovered five documents those were</font>

751
00:32:02,890 --> 00:32:06,790
exactly<font color="#CCCCCC"> the</font><font color="#E5E5E5"> five documents</font><font color="#CCCCCC"> I inserted</font>

752
00:32:04,570 --> 00:32:08,800
<font color="#CCCCCC">while</font><font color="#E5E5E5"> the primary shot was there but the</font>

753
00:32:06,790 --> 00:32:11,440
<font color="#E5E5E5">replica shot was not there</font><font color="#CCCCCC"> and what we</font>

754
00:32:08,800 --> 00:32:13,720
were<font color="#E5E5E5"> doing in</font><font color="#CCCCCC"> five or in elasticsearch 5</font>

755
00:32:11,440 --> 00:32:15,940
and earlier<font color="#E5E5E5"> versions was we would do a</font>

756
00:32:13,720 --> 00:32:18,880
file<font color="#E5E5E5"> based comparison so we would</font>

757
00:32:15,940 --> 00:32:20,230
compare<font color="#E5E5E5"> the leucine shards and since we</font>

758
00:32:18,880 --> 00:32:21,910
were writing<font color="#E5E5E5"> them independently these</font>

759
00:32:20,230 --> 00:32:23,590
<font color="#CCCCCC">loosing shots were often totally</font>

760
00:32:21,910 --> 00:32:25,180
<font color="#E5E5E5">different and we would basically I think</font>

761
00:32:23,590 --> 00:32:27,340
<font color="#CCCCCC">take a hash of them and if the hash was</font>

762
00:32:25,180 --> 00:32:30,280
not the same<font color="#E5E5E5"> would just copy</font><font color="#CCCCCC"> that file</font>

763
00:32:27,340 --> 00:32:32,800
<font color="#E5E5E5">over so if one node was just kind of</font>

764
00:32:30,280 --> 00:32:35,020
leaving<font color="#E5E5E5"> the cluster for a minute you</font>

765
00:32:32,800 --> 00:32:37,389
might need<font color="#E5E5E5"> to transfer gigabytes of data</font>

766
00:32:35,020 --> 00:32:39,129
<font color="#CCCCCC">for no</font><font color="#E5E5E5"> good reason other than we didn't</font>

767
00:32:37,390 --> 00:32:41,800
have a good<font color="#E5E5E5"> comparison way or way to</font>

768
00:32:39,130 --> 00:32:43,810
replay the missing operations<font color="#E5E5E5"> with that</font>

769
00:32:41,800 --> 00:32:46,090
<font color="#CCCCCC">transaction log we're actually keeping</font>

770
00:32:43,810 --> 00:32:48,399
track of all<font color="#E5E5E5"> those</font><font color="#CCCCCC"> write operations</font><font color="#E5E5E5"> and</font>

771
00:32:46,090 --> 00:32:50,980
we can recover and replay<font color="#E5E5E5"> just those</font>

772
00:32:48,400 --> 00:32:53,080
five operations that we have<font color="#E5E5E5"> missed so</font>

773
00:32:50,980 --> 00:32:55,750
that will make<font color="#E5E5E5"> flaky notes or just</font>

774
00:32:53,080 --> 00:32:58,179
<font color="#CCCCCC">adding nodes that have been</font><font color="#E5E5E5"> disappearing</font>

775
00:32:55,750 --> 00:33:01,120
for a short amount<font color="#CCCCCC"> of time much simpler</font>

776
00:32:58,180 --> 00:33:02,890
and more performant downside<font color="#E5E5E5"> is we need</font>

777
00:33:01,120 --> 00:33:05,229
some more disk<font color="#CCCCCC"> space because we need to</font>

778
00:33:02,890 --> 00:33:07,030
keep track<font color="#CCCCCC"> of the transaction log</font><font color="#E5E5E5"> keep</font>

779
00:33:05,230 --> 00:33:09,910
that in<font color="#E5E5E5"> mind when you kind of plan</font><font color="#CCCCCC"> for</font>

780
00:33:07,030 --> 00:33:12,010
the disk<font color="#E5E5E5"> space you have okay lesson</font>

781
00:33:09,910 --> 00:33:12,580
<font color="#CCCCCC">eight that index</font><font color="#E5E5E5"> and recreate</font><font color="#CCCCCC"> it this</font>

782
00:33:12,010 --> 00:33:15,850
time

783
00:33:12,580 --> 00:33:17,590
<font color="#E5E5E5">I am setting it to</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> sharks and one</font>

784
00:33:15,850 --> 00:33:20,260
<font color="#E5E5E5">replica</font><font color="#CCCCCC"> how many shots do I have in</font>

785
00:33:17,590 --> 00:33:24,520
<font color="#CCCCCC">total twenty</font>

786
00:33:20,260 --> 00:33:27,220
hopefully<font color="#E5E5E5"> let's see if I check the</font>

787
00:33:24,520 --> 00:33:30,250
number of shards<font color="#E5E5E5"> and make this a little</font>

788
00:33:27,220 --> 00:33:34,240
smaller<font color="#E5E5E5"> you can see 20 shots ten primary</font>

789
00:33:30,250 --> 00:33:36,820
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> replica ones and now we can keep</font>

790
00:33:34,240 --> 00:33:38,680
adding<font color="#CCCCCC"> documents and the confusing</font><font color="#E5E5E5"> thing</font>

791
00:33:36,820 --> 00:33:40,780
<font color="#CCCCCC">is keep track of the sequence number for</font>

792
00:33:38,680 --> 00:33:50,890
a bit now we are at<font color="#CCCCCC"> zero if I rounded</font>

793
00:33:40,780 --> 00:33:54,760
<font color="#CCCCCC">again 0 again</font><font color="#E5E5E5"> 0 0 1 0 0 0</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> 2 1 any</font>

794
00:33:50,890 --> 00:33:58,720
ideas why did this might happen<font color="#E5E5E5"> yes the</font>

795
00:33:54,760 --> 00:34:01,390
frequency numbers are per shot so every

796
00:33:58,720 --> 00:34:04,180
shot keeps track of the operations<font color="#E5E5E5"> if I</font>

797
00:34:01,390 --> 00:34:05,950
say this is<font color="#CCCCCC"> the idea I</font><font color="#E5E5E5"> want to insert it</font>

798
00:34:04,180 --> 00:34:07,720
<font color="#E5E5E5">the idea will</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> hashed it will</font><font color="#CCCCCC"> always</font>

799
00:34:05,950 --> 00:34:10,449
land<font color="#E5E5E5"> on the same chart</font><font color="#CCCCCC"> so if I keep</font>

800
00:34:07,720 --> 00:34:11,820
using that<font color="#E5E5E5"> one it will always go to the</font>

801
00:34:10,449 --> 00:34:14,199
same shot and<font color="#E5E5E5"> this will be a nice</font>

802
00:34:11,820 --> 00:34:15,580
increment like it will just every

803
00:34:14,199 --> 00:34:19,689
operation will<font color="#CCCCCC"> go to the same note and</font>

804
00:34:15,580 --> 00:34:20,980
<font color="#CCCCCC">which</font><font color="#E5E5E5"> will keep incrementing so that's</font>

805
00:34:19,690 --> 00:34:22,690
easy

806
00:34:20,980 --> 00:34:24,159
so both the recovery<font color="#E5E5E5"> is</font><font color="#CCCCCC"> much more</font>

807
00:34:22,690 --> 00:34:25,870
performant<font color="#E5E5E5"> and this feature will also</font>

808
00:34:24,159 --> 00:34:28,179
<font color="#E5E5E5">allow totally new features in the near</font>

809
00:34:25,870 --> 00:34:30,759
future<font color="#CCCCCC"> and yes the other thing</font>

810
00:34:28,179 --> 00:34:33,550
especially<font color="#E5E5E5"> Postgres people often ask</font>

811
00:34:30,760 --> 00:34:35,500
like what<font color="#E5E5E5"> if you reach kind of the end</font>

812
00:34:33,550 --> 00:34:37,360
of<font color="#CCCCCC"> that number because</font><font color="#E5E5E5"> Postgres has this</font>

813
00:34:35,500 --> 00:34:40,149
concept of is it the<font color="#E5E5E5"> transaction ID</font><font color="#CCCCCC"> I</font>

814
00:34:37,360 --> 00:34:42,879
think which<font color="#CCCCCC"> is an integer</font><font color="#E5E5E5"> and if you hit</font>

815
00:34:40,149 --> 00:34:45,250
<font color="#CCCCCC">that limit</font><font color="#E5E5E5"> your cluster will go down in</font>

816
00:34:42,879 --> 00:34:47,500
a<font color="#E5E5E5"> very bad</font><font color="#CCCCCC"> way and so people are</font><font color="#E5E5E5"> often</font>

817
00:34:45,250 --> 00:34:51,610
concerned<font color="#E5E5E5"> like how do we roll</font><font color="#CCCCCC"> over that</font>

818
00:34:47,500 --> 00:34:53,949
<font color="#E5E5E5">number</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't for two reasons</font><font color="#E5E5E5"> a</font>

819
00:34:51,610 --> 00:34:56,169
this<font color="#E5E5E5"> is not a global number but this is</font>

820
00:34:53,949 --> 00:34:59,680
per<font color="#E5E5E5"> chart so normally you will have</font>

821
00:34:56,168 --> 00:35:01,960
quite quite a few<font color="#CCCCCC"> shots on one</font><font color="#E5E5E5"> node so</font>

822
00:34:59,680 --> 00:35:04,390
there should<font color="#CCCCCC"> be some room</font><font color="#E5E5E5"> and B this is</font>

823
00:35:01,960 --> 00:35:07,750
not an integer<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a long and as</font>

824
00:35:04,390 --> 00:35:09,670
Bill Gates would say is<font color="#E5E5E5"> 63 bits is</font>

825
00:35:07,750 --> 00:35:12,490
<font color="#E5E5E5">probably enough for your increments for</font>

826
00:35:09,670 --> 00:35:14,890
<font color="#E5E5E5">a long time and we</font><font color="#CCCCCC"> don't plan</font><font color="#E5E5E5"> for</font>

827
00:35:12,490 --> 00:35:17,169
anybody<font color="#E5E5E5"> to or we don't expect anybody to</font>

828
00:35:14,890 --> 00:35:18,670
<font color="#E5E5E5">run into that I don't know how many</font>

829
00:35:17,170 --> 00:35:20,320
<font color="#E5E5E5">write operations you would need to do</font>

830
00:35:18,670 --> 00:35:23,170
<font color="#E5E5E5">for a few</font><font color="#CCCCCC"> years to run into that</font><font color="#E5E5E5"> but</font>

831
00:35:20,320 --> 00:35:25,630
it's<font color="#E5E5E5"> definitely a lot we</font><font color="#CCCCCC"> don't see this</font>

832
00:35:23,170 --> 00:35:27,190
<font color="#E5E5E5">as</font><font color="#CCCCCC"> that is a</font><font color="#E5E5E5"> problem and the other thing</font>

833
00:35:25,630 --> 00:35:30,010
that we will or this feature will allow

834
00:35:27,190 --> 00:35:31,600
<font color="#E5E5E5">in the near future this is under heavy</font>

835
00:35:30,010 --> 00:35:32,400
development<font color="#E5E5E5"> so I'm not promising any</font>

836
00:35:31,600 --> 00:35:36,420
motion numbers it

837
00:35:32,400 --> 00:35:38,490
<font color="#CCCCCC">sixteen</font><font color="#E5E5E5"> X or it might even</font><font color="#CCCCCC"> be 0 7 . x we</font>

838
00:35:36,420 --> 00:35:39,779
will<font color="#E5E5E5"> see is cross data</font><font color="#CCCCCC"> center</font>

839
00:35:38,490 --> 00:35:41,430
replication<font color="#E5E5E5"> because we have the</font>

840
00:35:39,779 --> 00:35:43,230
transaction log and we can then<font color="#CCCCCC"> just</font>

841
00:35:41,430 --> 00:35:45,990
replay those transactions to a different

842
00:35:43,230 --> 00:35:48,630
data center<font color="#CCCCCC"> without</font><font color="#E5E5E5"> adding any big</font>

843
00:35:45,990 --> 00:35:50,578
latency in the communication<font color="#E5E5E5"> so this</font>

844
00:35:48,630 --> 00:35:54,660
will enable great new features in the

845
00:35:50,579 --> 00:35:56,520
<font color="#E5E5E5">future now this is the thing that a lot</font>

846
00:35:54,660 --> 00:35:58,049
of<font color="#E5E5E5"> you might have seen and this is one</font>

847
00:35:56,520 --> 00:36:01,140
<font color="#CCCCCC">of the main hurdles for upgrading</font><font color="#E5E5E5"> or</font>

848
00:35:58,049 --> 00:36:04,349
<font color="#E5E5E5">receive Curtis</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> pipes</font><font color="#CCCCCC"> are going</font>

849
00:36:01,140 --> 00:36:08,940
away<font color="#E5E5E5"> who heard that pipes are going away</font>

850
00:36:04,349 --> 00:36:10,829
<font color="#E5E5E5">in elasticsearch that's not that many so</font>

851
00:36:08,940 --> 00:36:13,289
let's let's<font color="#E5E5E5"> try to clear that up and see</font>

852
00:36:10,829 --> 00:36:16,079
how we can<font color="#E5E5E5"> do that and as you can see</font><font color="#CCCCCC"> in</font>

853
00:36:13,289 --> 00:36:18,299
the<font color="#CCCCCC"> version number this is a very</font>

854
00:36:16,079 --> 00:36:20,279
<font color="#E5E5E5">long-term thing we</font><font color="#CCCCCC"> try to make this as</font>

855
00:36:18,299 --> 00:36:22,109
<font color="#CCCCCC">painless as possible</font><font color="#E5E5E5"> and it will take</font>

856
00:36:20,279 --> 00:36:24,809
<font color="#CCCCCC">multiple years</font><font color="#E5E5E5"> until we find that we</font>

857
00:36:22,109 --> 00:36:28,190
reach<font color="#CCCCCC"> that but first of why are we</font>

858
00:36:24,809 --> 00:36:33,569
getting<font color="#CCCCCC"> rid of</font><font color="#E5E5E5"> those types the thing is</font>

859
00:36:28,190 --> 00:36:36,779
we<font color="#E5E5E5"> kind of lied because this type thing</font>

860
00:36:33,569 --> 00:36:39,058
<font color="#E5E5E5">never really existed we made it up this</font>

861
00:36:36,779 --> 00:36:40,650
was when I said<font color="#CCCCCC"> at the beginning we</font><font color="#E5E5E5"> in</font>

862
00:36:39,059 --> 00:36:42,210
the beginning we try to say well it's

863
00:36:40,650 --> 00:36:47,549
<font color="#E5E5E5">very similar to relational databases</font>

864
00:36:42,210 --> 00:36:50,390
<font color="#CCCCCC">because an index is like a table and</font>

865
00:36:47,549 --> 00:36:56,160
<font color="#CCCCCC">that was</font><font color="#E5E5E5"> just not a very good comparison</font>

866
00:36:50,390 --> 00:37:00,328
so and then we had the type<font color="#CCCCCC"> u which</font><font color="#E5E5E5"> you</font>

867
00:36:56,160 --> 00:37:03,089
could<font color="#E5E5E5"> have in the different types</font><font color="#CCCCCC"> and it</font>

868
00:37:00,329 --> 00:37:04,410
was just wouldn't match together<font color="#E5E5E5"> and the</font>

869
00:37:03,089 --> 00:37:06,180
scene<font color="#E5E5E5"> doesn't have that</font><font color="#CCCCCC"> concept at all</font>

870
00:37:04,410 --> 00:37:08,129
and you would<font color="#E5E5E5"> run</font><font color="#CCCCCC"> into three specific</font>

871
00:37:06,180 --> 00:37:11,819
problems if you were using multiple

872
00:37:08,130 --> 00:37:13,859
types pre index<font color="#E5E5E5"> the first thing is since</font>

873
00:37:11,819 --> 00:37:16,740
we've seen always sees<font color="#E5E5E5"> that the field</font>

874
00:37:13,859 --> 00:37:18,690
name<font color="#E5E5E5"> all the data types for one</font><font color="#CCCCCC"> specific</font>

875
00:37:16,740 --> 00:37:21,689
field name in one index need to be the

876
00:37:18,690 --> 00:37:24,660
same<font color="#E5E5E5"> so for example if you have a user</font>

877
00:37:21,690 --> 00:37:27,000
which has<font color="#CCCCCC"> a which has a</font><font color="#E5E5E5"> field disabled</font>

878
00:37:24,660 --> 00:37:29,490
and<font color="#CCCCCC"> you think in one type it's a</font><font color="#E5E5E5"> boolean</font>

879
00:37:27,000 --> 00:37:31,740
flag and in<font color="#E5E5E5"> another type</font><font color="#CCCCCC"> it's a date</font>

880
00:37:29,490 --> 00:37:33,569
when you<font color="#CCCCCC"> disabled the</font><font color="#E5E5E5"> user this</font><font color="#CCCCCC"> will not</font>

881
00:37:31,740 --> 00:37:38,279
work<font color="#E5E5E5"> because it needs to be of the same</font>

882
00:37:33,569 --> 00:37:40,710
<font color="#CCCCCC">type</font><font color="#E5E5E5"> secondly sparsity is not that great</font>

883
00:37:38,279 --> 00:37:43,829
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> scene you seen</font><font color="#CCCCCC"> seven which is in</font>

884
00:37:40,710 --> 00:37:45,110
<font color="#E5E5E5">elasticsearch</font><font color="#CCCCCC"> six</font><font color="#E5E5E5"> improve that</font><font color="#CCCCCC"> when it's</font>

885
00:37:43,829 --> 00:37:48,350
still kind of a thing

886
00:37:45,110 --> 00:37:49,790
and finally scoring always works kind of

887
00:37:48,350 --> 00:37:51,860
<font color="#E5E5E5">the quality attribute of searching</font>

888
00:37:49,790 --> 00:37:54,020
<font color="#CCCCCC">always works across all the types</font><font color="#E5E5E5"> and</font>

889
00:37:51,860 --> 00:37:55,760
that was<font color="#CCCCCC"> also</font><font color="#E5E5E5"> confusing so we're trying</font>

890
00:37:54,020 --> 00:37:59,090
<font color="#E5E5E5">to get rid of that artificial concept of</font>

891
00:37:55,760 --> 00:38:01,220
types<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is actually the plan of</font>

892
00:37:59,090 --> 00:38:03,800
what we do is it doing in five point six

893
00:38:01,220 --> 00:38:06,140
you can<font color="#CCCCCC"> opt into the single types</font><font color="#E5E5E5"> so</font>

894
00:38:03,800 --> 00:38:07,940
there can only be a single type<font color="#CCCCCC"> or index</font>

895
00:38:06,140 --> 00:38:11,569
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is you can</font><font color="#E5E5E5"> actually enable that in</font>

896
00:38:07,940 --> 00:38:13,610
<font color="#CCCCCC">the</font><font color="#E5E5E5"> configuration in</font><font color="#CCCCCC"> SEC</font><font color="#E5E5E5"> six that X we</font>

897
00:38:11,570 --> 00:38:15,740
will enforce that<font color="#E5E5E5"> so by default every</font>

898
00:38:13,610 --> 00:38:17,750
newly<font color="#E5E5E5"> created index can only have a</font>

899
00:38:15,740 --> 00:38:19,189
single<font color="#CCCCCC"> type</font><font color="#E5E5E5"> anymore if you import an</font>

900
00:38:17,750 --> 00:38:21,290
index from a previous version it can

901
00:38:19,190 --> 00:38:22,940
still have multiple<font color="#E5E5E5"> types but any</font><font color="#CCCCCC"> index</font>

902
00:38:21,290 --> 00:38:25,790
you create can only have a single<font color="#E5E5E5"> type</font>

903
00:38:22,940 --> 00:38:28,250
here in seven<font color="#E5E5E5"> the type will become</font>

904
00:38:25,790 --> 00:38:30,860
<font color="#CCCCCC">optional in the API since we assume that</font>

905
00:38:28,250 --> 00:38:32,720
you have<font color="#CCCCCC"> only a</font><font color="#E5E5E5"> single type there it can</font>

906
00:38:30,860 --> 00:38:34,970
<font color="#E5E5E5">be optional and in version</font><font color="#CCCCCC"> eight the</font>

907
00:38:32,720 --> 00:38:37,600
types<font color="#E5E5E5"> are finally got so this should</font>

908
00:38:34,970 --> 00:38:40,129
allow for kind<font color="#E5E5E5"> of like no hard upgrade</font>

909
00:38:37,600 --> 00:38:42,200
changes or like no breaking changes in

910
00:38:40,130 --> 00:38:44,630
the<font color="#CCCCCC"> upgrade path but it is a kind of</font>

911
00:38:42,200 --> 00:38:47,810
like a multi-year process and we will

912
00:38:44,630 --> 00:38:51,770
<font color="#E5E5E5">try to get there so how do you upgrade</font>

913
00:38:47,810 --> 00:38:54,529
stuff<font color="#E5E5E5"> you remember the three</font><font color="#CCCCCC"> documents I</font>

914
00:38:51,770 --> 00:38:56,840
have<font color="#E5E5E5"> inserted in the beginning I had in</font>

915
00:38:54,530 --> 00:39:00,230
the index types<font color="#E5E5E5"> I had two types type 1</font>

916
00:38:56,840 --> 00:39:01,910
type 2 and type 3<font color="#E5E5E5"> since they were</font>

917
00:39:00,230 --> 00:39:03,050
<font color="#E5E5E5">created in the elasticsearch 5 you could</font>

918
00:39:01,910 --> 00:39:04,359
just insert them and everything is

919
00:39:03,050 --> 00:39:08,030
working<font color="#E5E5E5"> as expected</font>

920
00:39:04,360 --> 00:39:11,090
now if I create a<font color="#CCCCCC"> new document I create</font>

921
00:39:08,030 --> 00:39:13,700
in the index<font color="#E5E5E5"> no types</font><font color="#CCCCCC"> underscore</font><font color="#E5E5E5"> doc</font>

922
00:39:11,090 --> 00:39:16,490
this is the<font color="#CCCCCC"> one we are kind</font><font color="#E5E5E5"> of proposing</font>

923
00:39:13,700 --> 00:39:18,169
you can pick any type it just has to be

924
00:39:16,490 --> 00:39:21,919
a single<font color="#E5E5E5"> one but the one we are</font>

925
00:39:18,170 --> 00:39:23,090
<font color="#CCCCCC">proposing</font><font color="#E5E5E5"> is to use underscore doc since</font>

926
00:39:21,920 --> 00:39:27,110
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> kind of the</font><font color="#E5E5E5"> default we</font><font color="#CCCCCC"> will</font>

927
00:39:23,090 --> 00:39:30,320
expect in<font color="#E5E5E5"> 710 so I am inserting a</font>

928
00:39:27,110 --> 00:39:31,910
document with that type doc here<font color="#E5E5E5"> what</font>

929
00:39:30,320 --> 00:39:36,050
will<font color="#E5E5E5"> happen if I try to insert that</font>

930
00:39:31,910 --> 00:39:37,759
document now as well then I will<font color="#E5E5E5"> run</font>

931
00:39:36,050 --> 00:39:39,350
into<font color="#CCCCCC"> the error that it says like oh you</font>

932
00:39:37,760 --> 00:39:41,600
would have multiple<font color="#CCCCCC"> types in add index</font>

933
00:39:39,350 --> 00:39:43,940
<font color="#CCCCCC">we already have underscore doc</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font>

934
00:39:41,600 --> 00:39:47,390
want to to add that other now this will

935
00:39:43,940 --> 00:39:49,190
<font color="#E5E5E5">not work I'm rejecting that and the</font>

936
00:39:47,390 --> 00:39:51,819
other big question<font color="#E5E5E5"> is how</font><font color="#CCCCCC"> can I actually</font>

937
00:39:49,190 --> 00:39:55,400
migrate my existing data<font color="#CCCCCC"> to that new</font>

938
00:39:51,820 --> 00:39:57,530
single type approach<font color="#CCCCCC"> per index</font><font color="#E5E5E5"> so what I</font>

939
00:39:55,400 --> 00:39:58,850
what you<font color="#E5E5E5"> do is we have that nice</font><font color="#CCCCCC"> reindex</font>

940
00:39:57,530 --> 00:40:01,100
<font color="#CCCCCC">API where you</font><font color="#E5E5E5"> basically</font>

941
00:39:58,850 --> 00:40:03,770
<font color="#E5E5E5">can take documents</font><font color="#CCCCCC"> from one index</font><font color="#E5E5E5"> and</font>

942
00:40:01,100 --> 00:40:05,630
replay them into<font color="#E5E5E5"> another index and we</font>

943
00:40:03,770 --> 00:40:08,150
can also change them in the replay<font color="#CCCCCC"> theme</font>

944
00:40:05,630 --> 00:40:10,430
<font color="#E5E5E5">so I'm taking my documents from my types</font>

945
00:40:08,150 --> 00:40:13,010
index and I replay them into the node

946
00:40:10,430 --> 00:40:14,720
types index and I also run a script

947
00:40:13,010 --> 00:40:19,040
against that where I do the following

948
00:40:14,720 --> 00:40:21,830
<font color="#E5E5E5">change I change the ID to type</font><font color="#CCCCCC"> plus ID</font>

949
00:40:19,040 --> 00:40:23,779
<font color="#E5E5E5">since all my three documents</font><font color="#CCCCCC"> in like</font>

950
00:40:21,830 --> 00:40:25,850
each of the types<font color="#CCCCCC"> have the ID one</font><font color="#E5E5E5"> I need</font>

951
00:40:23,780 --> 00:40:28,850
to do that<font color="#E5E5E5"> so I need to concatenate type</font>

952
00:40:25,850 --> 00:40:30,680
and idea to get<font color="#E5E5E5"> a new unique ID</font><font color="#CCCCCC"> I say</font>

953
00:40:28,850 --> 00:40:32,509
the field<font color="#E5E5E5"> and the score type which was</font>

954
00:40:30,680 --> 00:40:34,640
this kind<font color="#CCCCCC"> of magic field I</font><font color="#E5E5E5"> just</font>

955
00:40:32,510 --> 00:40:36,680
transferred<font color="#CCCCCC"> that the custom field type</font>

956
00:40:34,640 --> 00:40:38,420
so this<font color="#E5E5E5"> is just like any other field but</font>

957
00:40:36,680 --> 00:40:42,440
<font color="#E5E5E5">you can still efficiently filter on</font><font color="#CCCCCC"> that</font>

958
00:40:38,420 --> 00:40:44,510
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> and I say the new type I</font>

959
00:40:42,440 --> 00:40:46,790
said for all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> document is underscored</font>

960
00:40:44,510 --> 00:40:49,160
<font color="#E5E5E5">doc that is the one that</font><font color="#CCCCCC"> I had when I</font>

961
00:40:46,790 --> 00:40:52,730
created<font color="#CCCCCC"> the index so when I run that it</font>

962
00:40:49,160 --> 00:40:56,420
will insert<font color="#E5E5E5"> my</font><font color="#CCCCCC"> three documents that I</font>

963
00:40:52,730 --> 00:40:58,880
had in the types index and if you search

964
00:40:56,420 --> 00:41:00,710
<font color="#CCCCCC">in that</font><font color="#E5E5E5"> no types thing you can see it</font>

965
00:40:58,880 --> 00:41:03,020
has all the documents that we had before

966
00:41:00,710 --> 00:41:05,420
<font color="#CCCCCC">so it has</font><font color="#E5E5E5"> the no type stock that was the</font>

967
00:41:03,020 --> 00:41:07,759
one<font color="#E5E5E5"> I inserted but here you see</font><font color="#CCCCCC"> no types</font>

968
00:41:05,420 --> 00:41:11,420
<font color="#E5E5E5">I had that one that was the type 2 with</font>

969
00:41:07,760 --> 00:41:14,270
the ID<font color="#CCCCCC"> 1 and it replayed that and now</font>

970
00:41:11,420 --> 00:41:17,330
everything<font color="#E5E5E5"> is down to a single type and</font>

971
00:41:14,270 --> 00:41:19,100
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is how you can migrate your data so</font>

972
00:41:17,330 --> 00:41:20,630
either you have like some temporal data

973
00:41:19,100 --> 00:41:23,299
and you just throw away<font color="#E5E5E5"> the old data</font>

974
00:41:20,630 --> 00:41:25,460
then you just switch to<font color="#E5E5E5"> a single type</font>

975
00:41:23,300 --> 00:41:26,780
pattern<font color="#CCCCCC"> or if you have like</font><font color="#E5E5E5"> more</font>

976
00:41:25,460 --> 00:41:28,610
<font color="#E5E5E5">research use case where you keep your</font>

977
00:41:26,780 --> 00:41:30,800
<font color="#E5E5E5">data for</font><font color="#CCCCCC"> a prolonged time you can use</font>

978
00:41:28,610 --> 00:41:34,460
<font color="#CCCCCC">the</font><font color="#E5E5E5"> remix API to just replay stuff to</font>

979
00:41:30,800 --> 00:41:38,810
see how it's going<font color="#CCCCCC"> ok and we're down to</font>

980
00:41:34,460 --> 00:41:41,210
<font color="#CCCCCC">nearly the last one already</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> are</font>

981
00:41:38,810 --> 00:41:43,700
<font color="#CCCCCC">just</font><font color="#E5E5E5"> two things without the demo these</font>

982
00:41:41,210 --> 00:41:46,100
are nice performance improvements we

983
00:41:43,700 --> 00:41:48,710
added the one is automatic<font color="#CCCCCC"> hue resizing</font>

984
00:41:46,100 --> 00:41:50,839
so what automatic hue resizing is and

985
00:41:48,710 --> 00:41:53,450
when<font color="#E5E5E5"> you do a lot of operations they</font>

986
00:41:50,840 --> 00:41:56,210
will queue up<font color="#E5E5E5"> and we wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have an</font>

987
00:41:53,450 --> 00:41:57,919
kind of like a way<font color="#E5E5E5"> to guarantee</font><font color="#CCCCCC"> that</font>

988
00:41:56,210 --> 00:41:59,900
your communities will respond within a

989
00:41:57,920 --> 00:42:01,490
certain<font color="#E5E5E5"> amount</font><font color="#CCCCCC"> of time</font><font color="#E5E5E5"> and either they</font>

990
00:41:59,900 --> 00:42:03,620
can<font color="#E5E5E5"> be done within that certain</font><font color="#CCCCCC"> amount</font>

991
00:42:01,490 --> 00:42:06,709
<font color="#E5E5E5">of time or they will be rejected and</font>

992
00:42:03,620 --> 00:42:08,150
this<font color="#E5E5E5"> community resizing actually make</font>

993
00:42:06,710 --> 00:42:11,130
sure<font color="#CCCCCC"> this happens so for example here I</font>

994
00:42:08,150 --> 00:42:13,860
say the<font color="#E5E5E5"> target response time for</font>

995
00:42:11,130 --> 00:42:16,680
my searches is<font color="#CCCCCC"> two seconds</font><font color="#E5E5E5"> and if you</font>

996
00:42:13,860 --> 00:42:20,700
<font color="#CCCCCC">are currently processing 50 requests per</font>

997
00:42:16,680 --> 00:42:22,950
second your query<font color="#E5E5E5"> depth user your queue</font>

998
00:42:20,700 --> 00:42:25,710
depth can<font color="#CCCCCC"> be a</font><font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> elements and if</font>

999
00:42:22,950 --> 00:42:27,720
you try to add<font color="#E5E5E5"> 101 elements that</font><font color="#CCCCCC"> 100 one</font>

1000
00:42:25,710 --> 00:42:31,080
<font color="#E5E5E5">element will be rejected or 100 the</font>

1001
00:42:27,720 --> 00:42:33,240
first element will be rejected<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

1002
00:42:31,080 --> 00:42:34,920
will rather reject the right then queue

1003
00:42:33,240 --> 00:42:37,229
it up for a very<font color="#E5E5E5"> long amount of time</font><font color="#CCCCCC"> and</font>

1004
00:42:34,920 --> 00:42:39,000
<font color="#E5E5E5">then your client can decide what to do</font>

1005
00:42:37,230 --> 00:42:42,180
<font color="#CCCCCC">retry that operation we'll do</font><font color="#E5E5E5"> something</font>

1006
00:42:39,000 --> 00:42:43,500
<font color="#E5E5E5">else</font><font color="#CCCCCC"> that is the adaptive queue sizing</font>

1007
00:42:42,180 --> 00:42:46,080
where you can basically guarantee a

1008
00:42:43,500 --> 00:42:47,700
response time rather than<font color="#E5E5E5"> queuing up we</font>

1009
00:42:46,080 --> 00:42:52,020
will reject an operation<font color="#E5E5E5"> and you can</font>

1010
00:42:47,700 --> 00:42:54,480
then handle<font color="#E5E5E5"> that in your application and</font>

1011
00:42:52,020 --> 00:42:57,060
the second<font color="#E5E5E5"> nice thing is a big adaptive</font>

1012
00:42:54,480 --> 00:42:59,550
replica selection right now if you

1013
00:42:57,060 --> 00:43:01,799
search for<font color="#E5E5E5"> data you can either go to a</font>

1014
00:42:59,550 --> 00:43:03,450
primary<font color="#E5E5E5"> shot or any replica shot</font><font color="#CCCCCC"> and we</font>

1015
00:43:01,800 --> 00:43:05,850
will<font color="#E5E5E5"> just</font><font color="#CCCCCC"> randomly selected</font><font color="#E5E5E5"> and pretty</font>

1016
00:43:03,450 --> 00:43:08,520
much<font color="#E5E5E5"> run</font><font color="#CCCCCC"> Robin between the</font><font color="#E5E5E5"> shots however</font>

1017
00:43:05,850 --> 00:43:11,069
<font color="#E5E5E5">what happens if one node is busier</font><font color="#CCCCCC"> than</font>

1018
00:43:08,520 --> 00:43:12,990
other nodes and the adaptive<font color="#CCCCCC"> replicas</font>

1019
00:43:11,070 --> 00:43:15,480
selection is exactly doing<font color="#E5E5E5"> that it's</font>

1020
00:43:12,990 --> 00:43:18,600
based on a<font color="#CCCCCC"> very nice paper paper whether</font>

1021
00:43:15,480 --> 00:43:21,180
actually found<font color="#E5E5E5"> out how you can kind of</font>

1022
00:43:18,600 --> 00:43:23,520
<font color="#CCCCCC">weigh how busy a node is and you will</font>

1023
00:43:21,180 --> 00:43:26,700
send requests always to the least busy

1024
00:43:23,520 --> 00:43:29,040
node so your queries are running faster

1025
00:43:26,700 --> 00:43:31,350
<font color="#CCCCCC">so yeah you have</font><font color="#E5E5E5"> this exponentially</font>

1026
00:43:29,040 --> 00:43:33,420
weighted moving average<font color="#CCCCCC"> and basically</font>

1027
00:43:31,350 --> 00:43:35,190
when doing<font color="#CCCCCC"> your requests the node will</font>

1028
00:43:33,420 --> 00:43:37,530
tell you in<font color="#E5E5E5"> the response how busy it is</font>

1029
00:43:35,190 --> 00:43:39,650
<font color="#E5E5E5">and then you</font><font color="#CCCCCC"> can your queries can select</font>

1030
00:43:37,530 --> 00:43:43,050
the least busy shard when doing queries

1031
00:43:39,650 --> 00:43:45,540
<font color="#E5E5E5">and we've done some benchmarks in most</font>

1032
00:43:43,050 --> 00:43:50,130
of the cases even<font color="#E5E5E5"> for the 50th</font>

1033
00:43:45,540 --> 00:43:52,380
percentile it's improving<font color="#E5E5E5"> but</font><font color="#CCCCCC"> a delayed</font>

1034
00:43:50,130 --> 00:43:54,780
<font color="#CCCCCC">or at</font><font color="#E5E5E5"> least in the 99th percentile</font><font color="#CCCCCC"> all</font>

1035
00:43:52,380 --> 00:43:58,440
the<font color="#E5E5E5"> scenarios we tested if you enable</font>

1036
00:43:54,780 --> 00:44:00,990
<font color="#CCCCCC">that setting</font><font color="#E5E5E5"> it will improve in 6.1 at</font>

1037
00:43:58,440 --> 00:44:03,120
least this is disabled by default but

1038
00:44:00,990 --> 00:44:08,879
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can enable</font><font color="#E5E5E5"> this feature to kind of</font>

1039
00:44:03,120 --> 00:44:11,310
try to pick<font color="#CCCCCC"> charts more</font><font color="#E5E5E5"> cleverly the</font>

1040
00:44:08,880 --> 00:44:13,140
other thing is<font color="#CCCCCC"> shrimp can't sleep we</font>

1041
00:44:11,310 --> 00:44:15,960
haven't<font color="#E5E5E5"> had</font><font color="#CCCCCC"> that for a long time and we</font>

1042
00:44:13,140 --> 00:44:18,600
basically<font color="#E5E5E5"> said we will not do split ever</font>

1043
00:44:15,960 --> 00:44:21,150
we changed our mind we<font color="#CCCCCC"> just</font><font color="#E5E5E5"> added split</font>

1044
00:44:18,600 --> 00:44:23,430
in 6.1 so let's take a<font color="#E5E5E5"> quick look what</font>

1045
00:44:21,150 --> 00:44:24,100
they<font color="#E5E5E5"> are doing so shrink is basically</font>

1046
00:44:23,430 --> 00:44:25,629
you<font color="#E5E5E5"> have</font>

1047
00:44:24,100 --> 00:44:28,390
<font color="#E5E5E5">too many copies</font><font color="#CCCCCC"> and you want to combine</font>

1048
00:44:25,630 --> 00:44:32,920
<font color="#E5E5E5">them and hopefully stuff works out and</font>

1049
00:44:28,390 --> 00:44:37,120
it<font color="#E5E5E5"> doesn't end</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> so yeah how do</font>

1050
00:44:32,920 --> 00:44:42,700
<font color="#E5E5E5">we do the shrinking that's not what I</font>

1051
00:44:37,120 --> 00:44:45,940
wanted<font color="#E5E5E5"> the the</font><font color="#CCCCCC"> shrinking is</font><font color="#E5E5E5"> basically</font>

1052
00:44:42,700 --> 00:44:51,580
you always<font color="#E5E5E5"> combine a number</font><font color="#CCCCCC"> of sharks by</font>

1053
00:44:45,940 --> 00:44:56,710
a factor<font color="#E5E5E5"> is</font><font color="#CCCCCC"> very good</font><font color="#E5E5E5"> a number of charts</font>

1054
00:44:51,580 --> 00:44:59,470
by default then not really<font color="#CCCCCC"> because 5 is</font>

1055
00:44:56,710 --> 00:45:03,850
<font color="#CCCCCC">a</font><font color="#E5E5E5"> prime number</font><font color="#CCCCCC"> so the only factor to</font>

1056
00:44:59,470 --> 00:45:11,649
which you can<font color="#E5E5E5"> go is yeah</font><font color="#CCCCCC"> divided by 5</font>

1057
00:45:03,850 --> 00:45:15,100
down<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 1 so let's quickly demo that so</font>

1058
00:45:11,650 --> 00:45:18,100
we have an index called shrink<font color="#CCCCCC"> since I</font>

1059
00:45:15,100 --> 00:45:20,620
have five sharks by default<font color="#CCCCCC"> five primary</font>

1060
00:45:18,100 --> 00:45:22,450
shots by default<font color="#CCCCCC"> if we create that for</font>

1061
00:45:20,620 --> 00:45:24,430
me<font color="#E5E5E5"> if I show the</font><font color="#CCCCCC"> charts</font><font color="#E5E5E5"> you can see I</font>

1062
00:45:22,450 --> 00:45:27,689
have<font color="#E5E5E5"> five primary and five replica shots</font>

1063
00:45:24,430 --> 00:45:30,190
so<font color="#CCCCCC"> ten shots in total and then I say</font>

1064
00:45:27,690 --> 00:45:32,620
<font color="#E5E5E5">before you can actually do that you need</font>

1065
00:45:30,190 --> 00:45:34,060
<font color="#E5E5E5">to tell</font><font color="#CCCCCC"> that index that all the</font><font color="#E5E5E5"> charts</font>

1066
00:45:32,620 --> 00:45:35,859
that<font color="#CCCCCC"> you want to combine need to be on a</font>

1067
00:45:34,060 --> 00:45:38,170
single<font color="#CCCCCC"> note so for example here I say</font>

1068
00:45:35,860 --> 00:45:40,480
all<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> charts need to be on the</font>

1069
00:45:38,170 --> 00:45:42,340
<font color="#E5E5E5">elasticsearch</font><font color="#CCCCCC"> three note and you cannot</font>

1070
00:45:40,480 --> 00:45:43,600
write to<font color="#CCCCCC"> that anymore</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> what is</font>

1071
00:45:42,340 --> 00:45:44,920
<font color="#CCCCCC">happening in the background is to make</font>

1072
00:45:43,600 --> 00:45:47,020
that operation very quick

1073
00:45:44,920 --> 00:45:49,900
we're basically hard linking on the<font color="#E5E5E5"> disk</font>

1074
00:45:47,020 --> 00:45:51,160
<font color="#CCCCCC">all the different charts that we have so</font>

1075
00:45:49,900 --> 00:45:53,770
<font color="#CCCCCC">that operation once you have everything</font>

1076
00:45:51,160 --> 00:45:58,480
<font color="#CCCCCC">on a single shot is super</font><font color="#E5E5E5"> quick so</font><font color="#CCCCCC"> let's</font>

1077
00:45:53,770 --> 00:46:01,000
run<font color="#E5E5E5"> that we have done that we can show</font>

1078
00:45:58,480 --> 00:46:03,310
<font color="#CCCCCC">now here I'm sorting that by shot and</font>

1079
00:46:01,000 --> 00:46:04,930
you<font color="#E5E5E5"> can see every shot is either the</font>

1080
00:46:03,310 --> 00:46:08,049
primary or the<font color="#E5E5E5"> replica at least one of</font>

1081
00:46:04,930 --> 00:46:10,870
them is on the<font color="#E5E5E5"> three node now and now I</font>

1082
00:46:08,050 --> 00:46:13,870
can when can run that operation<font color="#E5E5E5"> where I</font>

1083
00:46:10,870 --> 00:46:15,880
say take the shrink<font color="#E5E5E5"> index run underscore</font>

1084
00:46:13,870 --> 00:46:18,609
shrink<font color="#E5E5E5"> and write the results to the</font>

1085
00:46:15,880 --> 00:46:20,470
shrunk index<font color="#E5E5E5"> so</font><font color="#CCCCCC"> the data will then</font><font color="#E5E5E5"> be</font>

1086
00:46:18,610 --> 00:46:25,030
written<font color="#E5E5E5"> to the shrunk index and go down</font>

1087
00:46:20,470 --> 00:46:27,160
<font color="#CCCCCC">to one</font><font color="#E5E5E5"> shot</font><font color="#CCCCCC"> so it once and I can then</font>

1088
00:46:25,030 --> 00:46:29,320
query the shrunk index or here is the

1089
00:46:27,160 --> 00:46:31,720
<font color="#CCCCCC">number</font><font color="#E5E5E5"> of shots we</font><font color="#CCCCCC"> have one replicas one</font>

1090
00:46:29,320 --> 00:46:33,370
primary shot and they can go<font color="#CCCCCC"> to any node</font>

1091
00:46:31,720 --> 00:46:36,549
<font color="#CCCCCC">again now</font><font color="#E5E5E5"> elasticsearch one realistic</font>

1092
00:46:33,370 --> 00:46:38,259
search to a fine<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> clear that you</font>

1093
00:46:36,550 --> 00:46:41,530
can see we still<font color="#E5E5E5"> have</font><font color="#CCCCCC"> our</font>

1094
00:46:38,260 --> 00:46:44,980
and we can also go the<font color="#CCCCCC"> other way so we</font>

1095
00:46:41,530 --> 00:46:47,770
<font color="#E5E5E5">can also split data splitting pretty</font>

1096
00:46:44,980 --> 00:46:49,180
much looks like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> and that's why we</font>

1097
00:46:47,770 --> 00:46:50,950
always<font color="#E5E5E5"> kind of said this is a very</font>

1098
00:46:49,180 --> 00:46:52,799
violent operation and it's very heavy

1099
00:46:50,950 --> 00:46:55,600
<font color="#E5E5E5">and as we don't really want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do that</font>

1100
00:46:52,800 --> 00:46:59,260
<font color="#E5E5E5">but we have</font><font color="#CCCCCC"> now made some preconditions</font>

1101
00:46:55,600 --> 00:47:01,930
<font color="#CCCCCC">the precondition is</font><font color="#E5E5E5"> you need to define</font>

1102
00:46:59,260 --> 00:47:04,300
the factor into which you<font color="#E5E5E5"> can split</font><font color="#CCCCCC"> it</font>

1103
00:47:01,930 --> 00:47:06,250
<font color="#CCCCCC">up front</font><font color="#E5E5E5"> and we kind of synthetically</font>

1104
00:47:04,300 --> 00:47:08,050
have these different charts than<font color="#E5E5E5"> up</font>

1105
00:47:06,250 --> 00:47:09,430
front but they're kind of packed

1106
00:47:08,050 --> 00:47:11,560
together<font color="#E5E5E5"> so you don't</font><font color="#CCCCCC"> have any overhead</font>

1107
00:47:09,430 --> 00:47:13,210
<font color="#E5E5E5">for them in the beginning but</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

1108
00:47:11,560 --> 00:47:16,660
split<font color="#E5E5E5"> that</font><font color="#CCCCCC"> up very</font><font color="#E5E5E5"> efficiently and</font>

1109
00:47:13,210 --> 00:47:18,880
<font color="#E5E5E5">easily afterwards so just to show you</font>

1110
00:47:16,660 --> 00:47:21,970
what this<font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like is here I create my</font>

1111
00:47:18,880 --> 00:47:25,210
index split with one<font color="#CCCCCC"> chart</font><font color="#E5E5E5"> but in the</font>

1112
00:47:21,970 --> 00:47:28,480
<font color="#E5E5E5">background this has 20 of these to be</font>

1113
00:47:25,210 --> 00:47:31,930
split up<font color="#E5E5E5"> charts</font><font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> created that</font>

1114
00:47:28,480 --> 00:47:35,740
one I'm inserting a document and then I

1115
00:47:31,930 --> 00:47:37,750
say this has one<font color="#E5E5E5"> primary and one replica</font>

1116
00:47:35,740 --> 00:47:39,189
shot<font color="#E5E5E5"> this is what you expect</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> locked</font>

1117
00:47:37,750 --> 00:47:40,540
right again you<font color="#E5E5E5"> always need to block</font>

1118
00:47:39,190 --> 00:47:43,030
<font color="#E5E5E5">right when you do an</font><font color="#CCCCCC"> operation like that</font>

1119
00:47:40,540 --> 00:47:45,279
<font color="#CCCCCC">and then what I'm doing is I say take</font>

1120
00:47:43,030 --> 00:47:47,620
the split index call the underscore

1121
00:47:45,280 --> 00:47:50,830
split on it<font color="#E5E5E5"> and store the result</font><font color="#CCCCCC"> in the</font>

1122
00:47:47,620 --> 00:47:53,109
split in<font color="#CCCCCC"> five index and</font><font color="#E5E5E5"> USA the split in</font>

1123
00:47:50,830 --> 00:47:57,130
<font color="#E5E5E5">five index basically has five primary</font>

1124
00:47:53,110 --> 00:47:59,620
<font color="#E5E5E5">shots so if you run that and then check</font>

1125
00:47:57,130 --> 00:48:02,980
<font color="#E5E5E5">the</font><font color="#CCCCCC"> shot you</font><font color="#E5E5E5"> can see now we have five</font>

1126
00:47:59,620 --> 00:48:04,540
primary and five replica shots and the

1127
00:48:02,980 --> 00:48:06,550
document we had in there is still

1128
00:48:04,540 --> 00:48:10,810
available<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is how we could break</font>

1129
00:48:06,550 --> 00:48:12,790
it<font color="#CCCCCC"> up</font><font color="#E5E5E5"> so that operation here the index</font>

1130
00:48:10,810 --> 00:48:14,799
<font color="#CCCCCC">number of routing shots</font><font color="#E5E5E5"> pick a good</font>

1131
00:48:12,790 --> 00:48:16,779
factor that you can<font color="#E5E5E5"> split into a lot of</font>

1132
00:48:14,800 --> 00:48:18,340
<font color="#E5E5E5">different indices or number of indices</font>

1133
00:48:16,780 --> 00:48:21,700
which you might<font color="#CCCCCC"> be</font><font color="#E5E5E5"> interested in</font>

1134
00:48:18,340 --> 00:48:26,140
don't pick a<font color="#E5E5E5"> primary number here</font><font color="#CCCCCC"> that</font>

1135
00:48:21,700 --> 00:48:28,870
<font color="#E5E5E5">that's not not a great choice okay</font>

1136
00:48:26,140 --> 00:48:31,750
<font color="#E5E5E5">finally benchmarks benchmarks are kind</font>

1137
00:48:28,870 --> 00:48:33,370
<font color="#CCCCCC">of an ongoing theme this</font><font color="#E5E5E5"> is my favorite</font>

1138
00:48:31,750 --> 00:48:35,170
comic whenever I see benchmarks<font color="#E5E5E5"> so</font>

1139
00:48:33,370 --> 00:48:37,120
whenever you see a benchmark of<font color="#E5E5E5"> somebody</font>

1140
00:48:35,170 --> 00:48:39,610
doing<font color="#E5E5E5"> a benchmark against</font><font color="#CCCCCC"> themselves and</font>

1141
00:48:37,120 --> 00:48:41,920
some of their competitors<font color="#E5E5E5"> this is pretty</font>

1142
00:48:39,610 --> 00:48:44,260
<font color="#CCCCCC">much what they are doing</font><font color="#E5E5E5"> they pick some</font>

1143
00:48:41,920 --> 00:48:46,270
some similar conditions and their own

1144
00:48:44,260 --> 00:48:48,100
product is<font color="#E5E5E5"> much better in those similar</font>

1145
00:48:46,270 --> 00:48:50,230
conditions than the others<font color="#E5E5E5"> it always</font>

1146
00:48:48,100 --> 00:48:51,130
reminds me<font color="#E5E5E5"> of I think two</font><font color="#CCCCCC"> years ago or</font>

1147
00:48:50,230 --> 00:48:53,230
so long

1148
00:48:51,130 --> 00:48:54,910
Cassandra<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Couchbase</font><font color="#E5E5E5"> each made a</font>

1149
00:48:53,230 --> 00:48:57,400
benchmark against their two competitors

1150
00:48:54,910 --> 00:48:59,379
<font color="#E5E5E5">and each one of them did that and each</font>

1151
00:48:57,400 --> 00:49:01,210
one managed to find<font color="#CCCCCC"> some scenario where</font>

1152
00:48:59,380 --> 00:49:03,490
there were at least<font color="#E5E5E5"> twice as fast as the</font>

1153
00:49:01,210 --> 00:49:04,870
<font color="#CCCCCC">other two</font><font color="#E5E5E5"> and everybody did that</font><font color="#CCCCCC"> within</font>

1154
00:49:03,490 --> 00:49:07,149
the span of three<font color="#CCCCCC"> months or</font><font color="#E5E5E5"> so and</font>

1155
00:49:04,870 --> 00:49:09,779
that's pretty much<font color="#CCCCCC"> the value of all</font><font color="#E5E5E5"> the</font>

1156
00:49:07,150 --> 00:49:12,340
benchmarks<font color="#E5E5E5"> what you should do instead is</font>

1157
00:49:09,780 --> 00:49:14,590
benchmark very heavily internally we're

1158
00:49:12,340 --> 00:49:17,350
doing that to avoid the slow boiling

1159
00:49:14,590 --> 00:49:20,140
frog problem everybody<font color="#CCCCCC"> aware of</font><font color="#E5E5E5"> what the</font>

1160
00:49:17,350 --> 00:49:22,210
slope boiling frog problem is if you

1161
00:49:20,140 --> 00:49:23,740
throw the<font color="#E5E5E5"> Frog into the boiling water it</font>

1162
00:49:22,210 --> 00:49:25,630
will jump out<font color="#E5E5E5"> because it knows something</font>

1163
00:49:23,740 --> 00:49:28,149
is wrong if you put the<font color="#E5E5E5"> Frog into the</font>

1164
00:49:25,630 --> 00:49:30,100
cold water<font color="#E5E5E5"> and then slowly turn up the</font>

1165
00:49:28,150 --> 00:49:31,810
temperature<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> not jump out because</font>

1166
00:49:30,100 --> 00:49:34,330
it<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> recognize it and you have the</font>

1167
00:49:31,810 --> 00:49:35,770
same thing<font color="#CCCCCC"> for benchmarks so you need</font>

1168
00:49:34,330 --> 00:49:37,299
benchmarks which tell you okay<font color="#CCCCCC"> this</font>

1169
00:49:35,770 --> 00:49:37,960
change made everything<font color="#CCCCCC"> zero point five</font>

1170
00:49:37,300 --> 00:49:40,540
<font color="#CCCCCC">percent</font>

1171
00:49:37,960 --> 00:49:42,640
yes lower and this<font color="#E5E5E5"> other change made</font>

1172
00:49:40,540 --> 00:49:44,860
everything I don't<font color="#CCCCCC"> know 1% slower and</font>

1173
00:49:42,640 --> 00:49:46,000
over time<font color="#E5E5E5"> these would accumulate so you</font>

1174
00:49:44,860 --> 00:49:48,400
will will need to very aggressively

1175
00:49:46,000 --> 00:49:50,080
<font color="#E5E5E5">benchmark that</font><font color="#CCCCCC"> you don't have</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> low</font>

1176
00:49:48,400 --> 00:49:52,540
<font color="#E5E5E5">boiling frog problem that you don't even</font>

1177
00:49:50,080 --> 00:49:54,490
<font color="#E5E5E5">recognize what is going</font><font color="#CCCCCC"> wrong and we</font>

1178
00:49:52,540 --> 00:49:56,740
have<font color="#CCCCCC"> written our own</font><font color="#E5E5E5"> benchmarks and we</font>

1179
00:49:54,490 --> 00:49:59,500
or benchmarking tool and we even<font color="#CCCCCC"> publish</font>

1180
00:49:56,740 --> 00:50:01,359
<font color="#E5E5E5">those all the time</font><font color="#CCCCCC"> so you can see what</font>

1181
00:49:59,500 --> 00:50:03,670
every<font color="#E5E5E5"> single change is doing</font><font color="#CCCCCC"> to the</font>

1182
00:50:01,360 --> 00:50:05,920
performance of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> system over</font><font color="#E5E5E5"> time so</font>

1183
00:50:03,670 --> 00:50:08,920
to<font color="#E5E5E5"> wrap</font><font color="#CCCCCC"> up we are seeing</font><font color="#E5E5E5"> quite a lot of</font>

1184
00:50:05,920 --> 00:50:11,640
stuff in<font color="#E5E5E5"> action it's kind of the growing</font>

1185
00:50:08,920 --> 00:50:15,790
<font color="#E5E5E5">up of elasticsearch we got more strict</font>

1186
00:50:11,640 --> 00:50:18,640
<font color="#E5E5E5">we try to make upgrades less painful</font><font color="#CCCCCC"> we</font>

1187
00:50:15,790 --> 00:50:19,930
try<font color="#E5E5E5"> to make your data safer</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we try</font>

1188
00:50:18,640 --> 00:50:21,100
to<font color="#E5E5E5"> add</font><font color="#CCCCCC"> new features like the</font><font color="#E5E5E5"> sequence</font>

1189
00:50:19,930 --> 00:50:23,169
numbers with the cross data center

1190
00:50:21,100 --> 00:50:25,270
replication<font color="#E5E5E5"> sometimes we have</font><font color="#CCCCCC"> to make</font>

1191
00:50:23,170 --> 00:50:26,850
<font color="#CCCCCC">hard changes like removal of types but</font>

1192
00:50:25,270 --> 00:50:29,259
<font color="#E5E5E5">in the long run it</font><font color="#CCCCCC"> will be a good</font><font color="#E5E5E5"> change</font>

1193
00:50:26,850 --> 00:50:32,049
because we need to clean<font color="#E5E5E5"> up the</font><font color="#CCCCCC"> die</font>

1194
00:50:29,260 --> 00:50:34,150
basically<font color="#CCCCCC"> and then we have seen some</font>

1195
00:50:32,050 --> 00:50:36,220
performance improvements<font color="#CCCCCC"> and shrink and</font>

1196
00:50:34,150 --> 00:50:38,470
<font color="#E5E5E5">split those were two things</font><font color="#CCCCCC"> that people</font>

1197
00:50:36,220 --> 00:50:40,990
requested<font color="#E5E5E5"> for a long time and especially</font>

1198
00:50:38,470 --> 00:50:42,549
<font color="#E5E5E5">the split this with slightly changed</font>

1199
00:50:40,990 --> 00:50:44,759
kind of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> preconditions and</font><font color="#E5E5E5"> that now</font>

1200
00:50:42,550 --> 00:50:49,540
enable the totally<font color="#E5E5E5"> new feature for us</font>

1201
00:50:44,760 --> 00:50:51,160
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> so I always</font>

1202
00:50:49,540 --> 00:50:52,360
take<font color="#E5E5E5"> a picture with you so it can prove</font>

1203
00:50:51,160 --> 00:50:55,750
to my colleagues that<font color="#E5E5E5"> I've been working</font>

1204
00:50:52,360 --> 00:50:58,260
<font color="#CCCCCC">today because</font><font color="#E5E5E5"> nobody knows where I am</font>

1205
00:50:55,750 --> 00:51:01,980
normally I'm just<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> conferences so</font>

1206
00:50:58,260 --> 00:51:01,980
everybody say elasticsearch

1207
00:51:02,390 --> 00:51:08,160
very nice<font color="#CCCCCC"> do we</font><font color="#E5E5E5"> have time for questions</font>

1208
00:51:07,130 --> 00:51:09,360
<font color="#E5E5E5">okay</font>

1209
00:51:08,160 --> 00:51:14,328
[Applause]

1210
00:51:09,360 --> 00:51:14,329
[Music]

1211
00:51:14,460 --> 00:51:16,520
<font color="#E5E5E5">you</font>

