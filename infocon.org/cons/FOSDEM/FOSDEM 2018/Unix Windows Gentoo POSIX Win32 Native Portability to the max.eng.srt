1
00:00:05,160 --> 00:00:12,730
welcome to talk about<font color="#E5E5E5"> portability from</font>

2
00:00:09,160 --> 00:00:18,698
UNIX windows using Gentle my name is

3
00:00:12,730 --> 00:00:21,730
<font color="#CCCCCC">Michele Havana just called me hobby and</font>

4
00:00:18,699 --> 00:00:26,830
I'm working<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> e</font><font color="#E5E5E5"> Schaefer IT</font>

5
00:00:21,730 --> 00:00:31,539
solutions company that merged<font color="#E5E5E5"> last year</font>

6
00:00:26,830 --> 00:00:32,378
<font color="#E5E5E5">from Salomon automation with this is a</font>

7
00:00:31,539 --> 00:00:37,710
shave

8
00:00:32,378 --> 00:00:40,959
<font color="#CCCCCC">paym and yeah</font>

9
00:00:37,710 --> 00:00:45,700
this one what are going<font color="#E5E5E5"> to talk about</font>

10
00:00:40,960 --> 00:00:50,590
<font color="#E5E5E5">today of course there is a challenge</font>

11
00:00:45,700 --> 00:00:53,020
behind but then there<font color="#CCCCCC"> is a difference in</font>

12
00:00:50,590 --> 00:01:00,010
requirements<font color="#CCCCCC"> between</font><font color="#E5E5E5"> application and the</font>

13
00:00:53,020 --> 00:01:02,760
developer another thing is the

14
00:01:00,010 --> 00:01:05,979
difference between UNIX and<font color="#E5E5E5"> Windows</font>

15
00:01:02,760 --> 00:01:10,630
fortunately<font color="#E5E5E5"> did</font><font color="#CCCCCC"> their segment - to fill</font>

16
00:01:05,979 --> 00:01:17,200
the gap in<font color="#CCCCCC"> between</font><font color="#E5E5E5"> but still segment has</font>

17
00:01:10,630 --> 00:01:19,710
a problem with package managers is the

18
00:01:17,200 --> 00:01:24,070
solution<font color="#E5E5E5"> for portability problems</font>

19
00:01:19,710 --> 00:01:28,360
there's<font color="#CCCCCC"> chain to prefix another helper</font>

20
00:01:24,070 --> 00:01:30,369
<font color="#E5E5E5">utility is</font><font color="#CCCCCC"> chain to parity</font><font color="#E5E5E5"> and then I am</font>

21
00:01:28,360 --> 00:01:34,720
talking about the few next<font color="#E5E5E5"> steps</font><font color="#CCCCCC"> I</font>

22
00:01:30,369 --> 00:01:38,160
already know that have to<font color="#CCCCCC"> be done and</font>

23
00:01:34,720 --> 00:01:42,069
finally I'll try to show a<font color="#E5E5E5"> demo video</font>

24
00:01:38,160 --> 00:01:45,520
<font color="#E5E5E5">initially initially initially</font><font color="#CCCCCC"> a plan to</font>

25
00:01:42,069 --> 00:01:50,289
do the live demo<font color="#CCCCCC"> but this would rely on</font>

26
00:01:45,520 --> 00:01:55,869
a<font color="#E5E5E5"> stable internet connection for</font><font color="#CCCCCC"> the</font>

27
00:01:50,289 --> 00:02:00,280
challenge<font color="#E5E5E5"> - Asifa</font><font color="#CCCCCC"> is creating a rare</font>

28
00:01:55,869 --> 00:02:03,550
house<font color="#E5E5E5"> for a customer like this one or</font>

29
00:02:00,280 --> 00:02:05,950
<font color="#CCCCCC">not like this one</font><font color="#E5E5E5"> but similar there is a</font>

30
00:02:03,550 --> 00:02:09,149
software necessary<font color="#CCCCCC"> to to run this</font>

31
00:02:05,950 --> 00:02:13,860
warehouse this software is called<font color="#CCCCCC"> Rama's</font>

32
00:02:09,149 --> 00:02:17,940
short for warehouse management system

33
00:02:13,860 --> 00:02:20,650
yeah<font color="#E5E5E5"> this is a challenge by itself</font>

34
00:02:17,940 --> 00:02:24,609
I'm not talking about<font color="#CCCCCC"> but another</font>

35
00:02:20,650 --> 00:02:29,050
challenge is a warehouse<font color="#CCCCCC"> usually it does</font>

36
00:02:24,610 --> 00:02:31,959
run for a long time up to 20<font color="#CCCCCC"> years</font>

37
00:02:29,050 --> 00:02:34,680
sometimes<font color="#E5E5E5"> even more this is true for the</font>

38
00:02:31,959 --> 00:02:34,680
software<font color="#E5E5E5"> as</font><font color="#CCCCCC"> well</font>

39
00:02:37,770 --> 00:02:45,000
because of being<font color="#E5E5E5"> a software it does need</font>

40
00:02:41,370 --> 00:02:48,000
an operating<font color="#E5E5E5"> system to run on which of</font>

41
00:02:45,000 --> 00:02:50,430
course needs a server<font color="#E5E5E5"> the challenge here</font>

42
00:02:48,000 --> 00:02:53,160
is which operating<font color="#CCCCCC"> system would</font><font color="#E5E5E5"> you</font>

43
00:02:50,430 --> 00:02:58,320
choose<font color="#E5E5E5"> where you can provide</font><font color="#CCCCCC"> 20 years of</font>

44
00:02:53,160 --> 00:03:02,370
support for well actually<font color="#E5E5E5"> within 20</font>

45
00:02:58,320 --> 00:03:04,890
<font color="#E5E5E5">years of software and I'm working</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> a</font>

46
00:03:02,370 --> 00:03:09,150
little more<font color="#CCCCCC"> than 20 years</font><font color="#E5E5E5"> already</font><font color="#CCCCCC"> this</font>

47
00:03:04,890 --> 00:03:14,820
<font color="#CCCCCC">is a Schaefer I have seen</font><font color="#E5E5E5"> lots of</font>

48
00:03:09,150 --> 00:03:19,400
<font color="#E5E5E5">different operating systems some some of</font>

49
00:03:14,820 --> 00:03:25,769
you may remember few things like HP<font color="#E5E5E5"> UNIX</font>

50
00:03:19,400 --> 00:03:28,590
<font color="#E5E5E5">x4 5x is still active with x7 of course</font>

51
00:03:25,770 --> 00:03:35,250
there is<font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> the different variants</font>

52
00:03:28,590 --> 00:03:39,200
redhead<font color="#CCCCCC"> Suzy</font><font color="#E5E5E5"> and the most wrong one most</font>

53
00:03:35,250 --> 00:03:42,200
<font color="#E5E5E5">foreign one is Windows Windows Server in</font>

54
00:03:39,200 --> 00:03:42,200
actually

55
00:03:44,069 --> 00:03:52,649
so how<font color="#E5E5E5"> to overcome this changing</font>

56
00:03:49,150 --> 00:03:54,970
operating systems within<font color="#E5E5E5"> within 20 years</font>

57
00:03:52,650 --> 00:03:58,290
<font color="#E5E5E5">well one could think of</font><font color="#CCCCCC"> Sara</font>

58
00:03:54,970 --> 00:04:00,640
<font color="#E5E5E5">virtualization but this</font><font color="#CCCCCC"> doesn't help to</font>

59
00:03:58,290 --> 00:04:01,769
<font color="#E5E5E5">remove the dependency on the operating</font>

60
00:04:00,640 --> 00:04:06,279
system

61
00:04:01,769 --> 00:04:09,250
but fortunately almost all of<font color="#E5E5E5"> the</font>

62
00:04:06,280 --> 00:04:11,909
software<font color="#CCCCCC"> necessary</font><font color="#E5E5E5"> to to build and run</font>

63
00:04:09,250 --> 00:04:16,350
the<font color="#CCCCCC"> application</font>

64
00:04:11,909 --> 00:04:20,949
when<font color="#E5E5E5"> using open source software</font><font color="#CCCCCC"> actually</font>

65
00:04:16,350 --> 00:04:25,449
to<font color="#E5E5E5"> support or or almost all</font><font color="#CCCCCC"> of those</font>

66
00:04:20,949 --> 00:04:27,789
operating<font color="#CCCCCC"> systems</font><font color="#E5E5E5"> so the solution here</font>

67
00:04:25,449 --> 00:04:31,270
<font color="#CCCCCC">is to create</font><font color="#E5E5E5"> a custom</font><font color="#CCCCCC"> gene you disturb a</font>

68
00:04:27,789 --> 00:04:39,159
distribution<font color="#CCCCCC"> that does run on</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> of</font>

69
00:04:31,270 --> 00:04:40,210
these<font color="#E5E5E5"> operating</font><font color="#CCCCCC"> systems but first let's</font>

70
00:04:39,160 --> 00:04:42,850
<font color="#E5E5E5">have a look at the different</font>

71
00:04:40,210 --> 00:04:47,620
requirements<font color="#CCCCCC"> for the application and the</font>

72
00:04:42,850 --> 00:04:51,010
developer<font color="#CCCCCC"> the application does need the</font>

73
00:04:47,620 --> 00:04:54,250
operating<font color="#E5E5E5"> system an operating</font><font color="#CCCCCC"> system</font>

74
00:04:51,010 --> 00:04:57,010
<font color="#E5E5E5">that surfaces would provide the</font>

75
00:04:54,250 --> 00:05:00,820
<font color="#CCCCCC">filesystem</font><font color="#E5E5E5"> some kind of some</font><font color="#CCCCCC"> kind of</font>

76
00:04:57,010 --> 00:05:04,360
networking some kind of IPC<font color="#E5E5E5"> and of</font>

77
00:05:00,820 --> 00:05:06,940
course process control the developer on

78
00:05:04,360 --> 00:05:08,710
the<font color="#CCCCCC"> other hand it's not a developer that</font>

79
00:05:06,940 --> 00:05:11,889
<font color="#E5E5E5">needs the operating system is</font><font color="#CCCCCC"> the</font>

80
00:05:08,710 --> 00:05:13,888
development<font color="#E5E5E5"> environment the developer</font>

81
00:05:11,889 --> 00:05:17,199
expects<font color="#E5E5E5"> from a development</font><font color="#CCCCCC"> environment</font>

82
00:05:13,889 --> 00:05:20,130
<font color="#E5E5E5">of course editor for the source code</font><font color="#CCCCCC"> a</font>

83
00:05:17,199 --> 00:05:22,530
build system<font color="#E5E5E5"> to create the</font><font color="#CCCCCC"> application</font>

84
00:05:20,130 --> 00:05:25,000
the debugger

85
00:05:22,530 --> 00:05:26,739
unfortunately the developers don't<font color="#E5E5E5"> have</font>

86
00:05:25,000 --> 00:05:31,180
<font color="#E5E5E5">just</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> develop but they also have to</font>

87
00:05:26,740 --> 00:05:33,250
debug<font color="#CCCCCC"> their developed code</font><font color="#E5E5E5"> and to be</font>

88
00:05:31,180 --> 00:05:34,630
able to debug the application<font color="#E5E5E5"> the</font>

89
00:05:33,250 --> 00:05:38,229
developer<font color="#E5E5E5"> or zone it's the application</font>

90
00:05:34,630 --> 00:05:40,389
<font color="#E5E5E5">runtime environment and this is the</font>

91
00:05:38,229 --> 00:05:44,680
reason<font color="#CCCCCC"> why the developer</font><font color="#E5E5E5"> also does need</font>

92
00:05:40,389 --> 00:05:50,130
an<font color="#E5E5E5"> operating system in a more</font><font color="#CCCCCC"> specific</font>

93
00:05:44,680 --> 00:05:54,729
detail the application prefers to run

94
00:05:50,130 --> 00:05:57,010
<font color="#E5E5E5">under on the window support that on the</font>

95
00:05:54,729 --> 00:05:58,349
vendor<font color="#E5E5E5"> provided part of the operating</font>

96
00:05:57,010 --> 00:06:01,539
system

97
00:05:58,350 --> 00:06:05,199
and prefers to be built using<font color="#E5E5E5"> the vendor</font>

98
00:06:01,540 --> 00:06:09,669
support supported to a chain that is as

99
00:06:05,199 --> 00:06:12,520
a company selling<font color="#E5E5E5"> software it is quite</font>

100
00:06:09,669 --> 00:06:14,169
crucial to be<font color="#CCCCCC"> able to buy</font><font color="#E5E5E5"> support</font><font color="#CCCCCC"> from</font>

101
00:06:12,520 --> 00:06:20,109
the event<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the operating system</font>

102
00:06:14,169 --> 00:06:23,710
vendor<font color="#E5E5E5"> so yeah there is if you use a</font>

103
00:06:20,110 --> 00:06:28,600
tool chain<font color="#E5E5E5"> just</font><font color="#CCCCCC"> that she knew tool chain</font>

104
00:06:23,710 --> 00:06:31,409
on my<font color="#CCCCCC"> ax or on Windows you won't get</font>

105
00:06:28,600 --> 00:06:37,330
support from<font color="#E5E5E5"> the operating</font><font color="#CCCCCC"> system vendor</font>

106
00:06:31,410 --> 00:06:40,210
<font color="#E5E5E5">another point is then when using the the</font>

107
00:06:37,330 --> 00:06:43,380
<font color="#E5E5E5">vendor tool chain there are tools to</font>

108
00:06:40,210 --> 00:06:46,948
<font color="#E5E5E5">provide that provide integrity checking</font>

109
00:06:43,380 --> 00:06:54,699
which one<font color="#CCCCCC"> we'll see later</font>

110
00:06:46,949 --> 00:06:58,410
for<font color="#E5E5E5"> developer</font><font color="#CCCCCC"> and the developer prefers</font>

111
00:06:54,699 --> 00:07:03,070
an operating system<font color="#E5E5E5"> independent software</font>

112
00:06:58,410 --> 00:07:06,430
to you to build the application<font color="#E5E5E5"> and the</font>

113
00:07:03,070 --> 00:07:11,080
libraries then operating<font color="#E5E5E5"> system</font>

114
00:07:06,430 --> 00:07:13,449
independent<font color="#E5E5E5"> scripting languages for most</font>

115
00:07:11,080 --> 00:07:17,020
of the time<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> glue code to glue</font>

116
00:07:13,449 --> 00:07:20,229
various<font color="#E5E5E5"> build systems</font><font color="#CCCCCC"> together</font><font color="#E5E5E5"> and for</font>

117
00:07:17,020 --> 00:07:23,740
all those<font color="#E5E5E5"> dependencies necessary to the</font>

118
00:07:20,229 --> 00:07:26,680
for the application it is quite crucial

119
00:07:23,740 --> 00:07:29,110
to have a package<font color="#E5E5E5"> manager which ideally</font>

120
00:07:26,680 --> 00:07:34,659
<font color="#E5E5E5">works</font><font color="#CCCCCC"> at the same time or provides the</font>

121
00:07:29,110 --> 00:07:40,470
same user interface<font color="#CCCCCC"> independent</font><font color="#E5E5E5"> of the</font>

122
00:07:34,659 --> 00:07:44,830
<font color="#CCCCCC">operating system however the</font><font color="#E5E5E5"> debugging</font>

123
00:07:40,470 --> 00:07:47,260
experience<font color="#E5E5E5"> is more important to be</font>

124
00:07:44,830 --> 00:07:50,289
smooth and and working<font color="#E5E5E5"> with the tool</font>

125
00:07:47,260 --> 00:07:55,960
chain<font color="#E5E5E5"> then to be operating system</font>

126
00:07:50,289 --> 00:07:59,880
agnostic so what's the choice<font color="#E5E5E5"> what are</font>

127
00:07:55,960 --> 00:08:02,409
the<font color="#E5E5E5"> choice is up for these requirements</font>

128
00:07:59,880 --> 00:08:04,930
for the application specific part on

129
00:08:02,409 --> 00:08:07,590
<font color="#CCCCCC">Linux</font><font color="#E5E5E5"> of course it's quite easy</font>

130
00:08:04,930 --> 00:08:09,880
<font color="#E5E5E5">there is the gnu toolchain</font><font color="#CCCCCC"> for</font>

131
00:08:07,590 --> 00:08:12,760
<font color="#CCCCCC">integrated king there are things</font><font color="#E5E5E5"> like</font>

132
00:08:09,880 --> 00:08:16,840
<font color="#CCCCCC">variant and debugging of course is</font><font color="#E5E5E5"> done</font>

133
00:08:12,760 --> 00:08:19,380
with gdb as the<font color="#CCCCCC"> backend is the real</font>

134
00:08:16,840 --> 00:08:25,169
debugger<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the developer can choose</font>

135
00:08:19,380 --> 00:08:29,320
whatever GUI what he prefers for<font color="#E5E5E5"> Unix</font>

136
00:08:25,169 --> 00:08:32,740
this is quite similar fortunately she

137
00:08:29,320 --> 00:08:35,349
knew<font color="#E5E5E5"> the</font><font color="#CCCCCC"> GNU Compiler is able to use the</font>

138
00:08:32,740 --> 00:08:39,209
vendor supported<font color="#E5E5E5"> pin utils</font><font color="#CCCCCC"> this is the</font>

139
00:08:35,349 --> 00:08:43,779
mainly the assembler and the linker

140
00:08:39,208 --> 00:08:47,410
different<font color="#E5E5E5"> difference is in the integrity</font>

141
00:08:43,779 --> 00:08:49,300
checking<font color="#E5E5E5"> tours they usually work when</font>

142
00:08:47,410 --> 00:08:53,140
using the at least<font color="#CCCCCC"> they've end up in</font>

143
00:08:49,300 --> 00:08:56,439
<font color="#CCCCCC">Newton's syrup sometimes there are</font>

144
00:08:53,140 --> 00:09:00,220
problems<font color="#CCCCCC"> when using GCC</font><font color="#E5E5E5"> as their base</font>

145
00:08:56,440 --> 00:09:04,209
compiler but usually they work and

146
00:09:00,220 --> 00:09:08,200
unfortunately<font color="#CCCCCC"> even gdb does work so far</font>

147
00:09:04,209 --> 00:09:13,359
<font color="#E5E5E5">and on these operating</font><font color="#CCCCCC"> systems but then</font>

148
00:09:08,200 --> 00:09:16,050
there<font color="#CCCCCC"> is Windows the native torch and</font>

149
00:09:13,360 --> 00:09:18,490
here is the visual studio<font color="#E5E5E5"> compiler</font>

150
00:09:16,050 --> 00:09:22,060
available as a command-line compiler<font color="#CCCCCC"> CL</font>

151
00:09:18,490 --> 00:09:24,850
dot<font color="#CCCCCC"> exam for integrity checking there is</font>

152
00:09:22,060 --> 00:09:27,579
application<font color="#E5E5E5"> verifier and of course the</font>

153
00:09:24,850 --> 00:09:30,420
<font color="#E5E5E5">visual studio is a quite good debugging</font>

154
00:09:27,579 --> 00:09:30,420
<font color="#CCCCCC">IDE</font>

155
00:09:31,650 --> 00:09:38,370
for<font color="#E5E5E5"> the developer to the operating</font>

156
00:09:35,370 --> 00:09:41,670
<font color="#CCCCCC">system</font><font color="#E5E5E5"> independent choice</font>

157
00:09:38,370 --> 00:09:46,170
<font color="#E5E5E5">this software chosen here needs to be</font>

158
00:09:41,670 --> 00:09:48,660
highly portable<font color="#CCCCCC"> I have found the Chi</font><font color="#E5E5E5"> new</font>

159
00:09:46,170 --> 00:09:51,860
built<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> that words make</font>

160
00:09:48,660 --> 00:09:56,329
files and of course<font color="#CCCCCC"> Jeanne leaped</font><font color="#E5E5E5"> or as</font>

161
00:09:51,860 --> 00:10:00,270
the most portable software<font color="#E5E5E5"> found so far</font>

162
00:09:56,330 --> 00:10:04,070
<font color="#E5E5E5">the same applies to scripting languages</font>

163
00:10:00,270 --> 00:10:08,069
like<font color="#CCCCCC"> Besh biotin pearl</font><font color="#E5E5E5"> and similar and</font>

164
00:10:04,070 --> 00:10:12,180
<font color="#CCCCCC">gentle portage is the so far portable</font>

165
00:10:08,070 --> 00:10:14,820
package manager because it doesn't rely

166
00:10:12,180 --> 00:10:19,589
so much on the operating<font color="#E5E5E5"> system except</font>

167
00:10:14,820 --> 00:10:22,680
for a file system<font color="#CCCCCC"> but of the build</font>

168
00:10:19,590 --> 00:10:24,770
instructions<font color="#E5E5E5"> so the real important thing</font>

169
00:10:22,680 --> 00:10:29,810
here is<font color="#E5E5E5"> the build instructions to be</font>

170
00:10:24,770 --> 00:10:35,840
working for any<font color="#E5E5E5"> target operating system</font>

171
00:10:29,810 --> 00:10:38,339
but still how does Windows apply here or

172
00:10:35,840 --> 00:10:43,280
another<font color="#CCCCCC"> way around how to apply these</font>

173
00:10:38,340 --> 00:10:46,680
<font color="#E5E5E5">choice to Windows and</font><font color="#CCCCCC"> Visual Studio</font><font color="#E5E5E5"> well</font>

174
00:10:43,280 --> 00:10:50,069
<font color="#E5E5E5">getting a step back but the problem with</font>

175
00:10:46,680 --> 00:10:54,060
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> actually looking at</font><font color="#CCCCCC"> these pills</font>

176
00:10:50,070 --> 00:10:58,380
<font color="#E5E5E5">tours</font><font color="#CCCCCC"> chinnu tours they do highly rely</font>

177
00:10:54,060 --> 00:11:01,890
on the POSIX API<font color="#E5E5E5"> so let's have a look on</font>

178
00:10:58,380 --> 00:11:05,610
the on the POSIX API and here is where

179
00:11:01,890 --> 00:11:10,710
<font color="#E5E5E5">cyclin comes in into into the game which</font>

180
00:11:05,610 --> 00:11:15,690
is actually a wrapper for<font color="#CCCCCC"> the POSIX API</font>

181
00:11:10,710 --> 00:11:18,990
on<font color="#CCCCCC"> top of the win32 API looking at the</font>

182
00:11:15,690 --> 00:11:21,930
<font color="#CCCCCC">requirements from B from</font><font color="#E5E5E5"> earlier the</font>

183
00:11:18,990 --> 00:11:26,120
open is for the file system but and

184
00:11:21,930 --> 00:11:29,819
<font color="#E5E5E5">segment is able to just map them to</font>

185
00:11:26,120 --> 00:11:33,900
<font color="#E5E5E5">win32</font><font color="#CCCCCC"> api the same applies to</font><font color="#E5E5E5"> networking</font>

186
00:11:29,820 --> 00:11:36,000
and IPC but<font color="#E5E5E5"> it is only partially true</font>

187
00:11:33,900 --> 00:11:39,030
<font color="#CCCCCC">for process control</font>

188
00:11:36,000 --> 00:11:41,490
<font color="#CCCCCC">weenus to create new processes on</font>

189
00:11:39,030 --> 00:11:44,949
<font color="#CCCCCC">Windows there is just a create process</font>

190
00:11:41,490 --> 00:11:49,750
probably<font color="#E5E5E5"> with with an extended version</font>

191
00:11:44,950 --> 00:11:53,139
and it's on this<font color="#CCCCCC"> pan POSIX porn in the</font>

192
00:11:49,750 --> 00:11:56,709
UNIX<font color="#CCCCCC"> world that does quite</font><font color="#E5E5E5"> the same as</font>

193
00:11:53,139 --> 00:12:02,230
create process but<font color="#CCCCCC"> x''k</font><font color="#E5E5E5"> and fork known</font>

194
00:11:56,709 --> 00:12:06,040
from the POSIX API<font color="#CCCCCC"> there is no direct</font>

195
00:12:02,230 --> 00:12:12,579
opponent<font color="#E5E5E5"> in the win32</font><font color="#CCCCCC"> API so Simon does</font>

196
00:12:06,040 --> 00:12:15,550
<font color="#E5E5E5">introduce a</font><font color="#CCCCCC"> segment process ID and need</font>

197
00:12:12,579 --> 00:12:19,060
to<font color="#E5E5E5"> work around missing functionality in</font>

198
00:12:15,550 --> 00:12:24,069
Windows<font color="#E5E5E5"> but it still is able to provide</font>

199
00:12:19,060 --> 00:12:29,709
a working<font color="#E5E5E5"> fork so far but then the</font>

200
00:12:24,070 --> 00:12:32,769
second fork as of now does have problems

201
00:12:29,709 --> 00:12:36,369
<font color="#CCCCCC">with package managers because the</font>

202
00:12:32,769 --> 00:12:38,250
prerequisites to<font color="#E5E5E5"> fork work out on</font>

203
00:12:36,370 --> 00:12:42,240
<font color="#E5E5E5">Windows is that the child</font><font color="#CCCCCC"> process</font>

204
00:12:38,250 --> 00:12:45,579
<font color="#E5E5E5">created as a normal</font><font color="#CCCCCC"> Windows process</font>

205
00:12:42,240 --> 00:12:49,600
requires<font color="#E5E5E5"> the identical process memory</font>

206
00:12:45,579 --> 00:12:52,930
<font color="#E5E5E5">layout then the parent process segment</font>

207
00:12:49,600 --> 00:12:56,709
actually<font color="#E5E5E5"> does start the child process</font>

208
00:12:52,930 --> 00:12:59,109
<font color="#E5E5E5">from the original executables</font><font color="#CCCCCC"> that</font>

209
00:12:56,709 --> 00:13:01,329
suspends the child process<font color="#CCCCCC"> copy to</font>

210
00:12:59,110 --> 00:13:03,550
memory from the<font color="#E5E5E5"> parent</font><font color="#CCCCCC"> process to the</font>

211
00:13:01,329 --> 00:13:06,579
child process<font color="#CCCCCC"> and</font><font color="#E5E5E5"> resumes to child</font>

212
00:13:03,550 --> 00:13:09,459
process but this works only if the

213
00:13:06,579 --> 00:13:12,489
<font color="#E5E5E5">binaries are identical</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> other hand</font>

214
00:13:09,459 --> 00:13:16,479
<font color="#E5E5E5">the package</font><font color="#CCCCCC"> manager</font><font color="#E5E5E5"> his job is to</font>

215
00:13:12,490 --> 00:13:18,220
replace even those binaries actually

216
00:13:16,480 --> 00:13:22,000
replacing whole packages including the

217
00:13:18,220 --> 00:13:25,839
primaries while still using<font color="#CCCCCC"> fork</font><font color="#E5E5E5"> to run</font>

218
00:13:22,000 --> 00:13:30,930
maintenance programs so<font color="#E5E5E5"> you see the gap</font>

219
00:13:25,839 --> 00:13:30,930
<font color="#CCCCCC">so far but there is help</font>

220
00:13:32,139 --> 00:13:40,730
there is a workaround for<font color="#E5E5E5"> this problem</font>

221
00:13:36,519 --> 00:13:43,009
<font color="#E5E5E5">and that</font><font color="#CCCCCC"> when segment is to</font><font color="#E5E5E5"> create the</font>

222
00:13:40,730 --> 00:13:44,899
new<font color="#E5E5E5"> child process and detects the</font>

223
00:13:43,009 --> 00:13:47,230
original<font color="#E5E5E5"> boundaries are not there</font>

224
00:13:44,899 --> 00:13:47,230
<font color="#CCCCCC">anymore</font>

225
00:13:47,379 --> 00:13:52,339
<font color="#E5E5E5">segment now or there are patches to</font>

226
00:13:50,240 --> 00:13:56,480
actually do it though they are not

227
00:13:52,339 --> 00:13:59,959
released inside vignette<font color="#E5E5E5"> to temporarily</font>

228
00:13:56,480 --> 00:14:03,759
create an application directory put the

229
00:13:59,959 --> 00:14:08,089
original executables and dll's<font color="#CCCCCC"> they're</font>

230
00:14:03,759 --> 00:14:10,759
combined with a<font color="#CCCCCC"> Windows specific deal</font>

231
00:14:08,089 --> 00:14:13,129
<font color="#CCCCCC">Ella redirection file</font><font color="#E5E5E5"> this is an empty</font>

232
00:14:10,759 --> 00:14:17,959
file<font color="#E5E5E5"> with application executable</font><font color="#CCCCCC"> named</font>

233
00:14:13,129 --> 00:14:20,949
top local so with<font color="#E5E5E5"> this</font><font color="#CCCCCC"> forces winters</font>

234
00:14:17,959 --> 00:14:25,579
<font color="#CCCCCC">windows to load the</font><font color="#E5E5E5"> dll's</font>

235
00:14:20,949 --> 00:14:27,679
necessary by<font color="#E5E5E5"> the application to look in</font>

236
00:14:25,579 --> 00:14:33,349
this very directory where they<font color="#CCCCCC"> taught</font>

237
00:14:27,679 --> 00:14:35,540
local file is<font color="#E5E5E5"> residing on a detail</font><font color="#CCCCCC"> this</font>

238
00:14:33,350 --> 00:14:38,269
<font color="#E5E5E5">temporary application directory brew</font>

239
00:14:35,540 --> 00:14:41,029
size in the<font color="#CCCCCC"> VAR runs like fork directory</font>

240
00:14:38,269 --> 00:14:45,670
and the original binaries are provided

241
00:14:41,029 --> 00:14:50,139
there as NTFS hard links dispatches

242
00:14:45,670 --> 00:14:53,509
expected to be<font color="#E5E5E5"> released as sanguine 3.0</font>

243
00:14:50,139 --> 00:14:56,929
because<font color="#E5E5E5"> the segment developers find this</font>

244
00:14:53,509 --> 00:15:02,839
is a new feature<font color="#CCCCCC"> worth</font><font color="#E5E5E5"> pumping the major</font>

245
00:14:56,929 --> 00:15:05,629
release number now<font color="#CCCCCC"> into prefix who has</font>

246
00:15:02,839 --> 00:15:09,649
already knows change of prefix<font color="#E5E5E5"> know</font>

247
00:15:05,629 --> 00:15:13,999
quite a<font color="#E5E5E5"> lot I'm not going to talk in</font>

248
00:15:09,649 --> 00:15:18,740
detail<font color="#CCCCCC"> about into prefix just that</font><font color="#E5E5E5"> it it</font>

249
00:15:13,999 --> 00:15:22,579
is working because most or or of the GNU

250
00:15:18,740 --> 00:15:25,309
packages do the<font color="#CCCCCC"> board to install</font><font color="#E5E5E5"> into</font>

251
00:15:22,579 --> 00:15:27,799
<font color="#E5E5E5">whatever to</font><font color="#CCCCCC"> actually you want</font><font color="#E5E5E5"> and this</font>

252
00:15:25,309 --> 00:15:30,139
<font color="#E5E5E5">is the configure</font><font color="#CCCCCC"> arguments - - prefix</font>

253
00:15:27,799 --> 00:15:35,269
hence the name<font color="#E5E5E5"> chain - prefix</font>

254
00:15:30,139 --> 00:15:38,629
I did a talk three years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> and chain</font><font color="#CCCCCC"> -</font>

255
00:15:35,269 --> 00:15:41,389
prefix and how to provide a<font color="#CCCCCC"> long term</font>

256
00:15:38,629 --> 00:15:44,690
support<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Zen's of 20 years support</font>

257
00:15:41,389 --> 00:15:48,060
using change of prefix

258
00:15:44,690 --> 00:15:51,210
but still the<font color="#E5E5E5"> question for win doesn't</font>

259
00:15:48,060 --> 00:15:53,579
end in<font color="#E5E5E5"> Visual</font><font color="#CCCCCC"> Studio okay for Windows</font>

260
00:15:51,210 --> 00:15:57,030
<font color="#E5E5E5">now we have</font><font color="#CCCCCC"> Saguenay</font>

261
00:15:53,580 --> 00:15:58,430
but for<font color="#CCCCCC"> Visual Studio</font><font color="#E5E5E5"> there is something</font>

262
00:15:57,030 --> 00:16:02,339
<font color="#E5E5E5">really</font><font color="#CCCCCC"> new</font>

263
00:15:58,430 --> 00:16:05,219
there is<font color="#CCCCCC"> chained to parity</font><font color="#E5E5E5"> the gender</font>

264
00:16:02,340 --> 00:16:08,030
parity is a wrapper around to visual

265
00:16:05,220 --> 00:16:11,130
studio<font color="#CCCCCC"> compiler common land it does use</font>

266
00:16:08,030 --> 00:16:14,790
division studio<font color="#CCCCCC"> torch and the command</font>

267
00:16:11,130 --> 00:16:18,750
line utilities<font color="#E5E5E5"> CL link lip and and</font>

268
00:16:14,790 --> 00:16:21,990
interlac while providing<font color="#CCCCCC"> it seen you</font>

269
00:16:18,750 --> 00:16:24,690
like comment line to the<font color="#CCCCCC"> built</font><font color="#E5E5E5"> tours</font>

270
00:16:21,990 --> 00:16:29,280
routine you build tours<font color="#E5E5E5"> so there is a</font>

271
00:16:24,690 --> 00:16:32,340
<font color="#CCCCCC">command basically parroted GCC which</font>

272
00:16:29,280 --> 00:16:35,160
understands their shared for example to

273
00:16:32,340 --> 00:16:39,390
<font color="#E5E5E5">create a shared library does</font><font color="#CCCCCC"> rep this</font>

274
00:16:35,160 --> 00:16:43,709
<font color="#E5E5E5">one today</font><font color="#CCCCCC"> microsoft tool</font><font color="#E5E5E5"> chain and does</font>

275
00:16:39,390 --> 00:16:48,810
<font color="#E5E5E5">create a real</font><font color="#CCCCCC"> windows</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> dll or same</font>

276
00:16:43,710 --> 00:16:52,250
for the executable additionally parity

277
00:16:48,810 --> 00:16:56,670
provides a loader library which provides

278
00:16:52,250 --> 00:17:00,560
<font color="#CCCCCC">features like run</font><font color="#E5E5E5"> path embedding as well</font>

279
00:16:56,670 --> 00:17:05,430
as<font color="#E5E5E5"> pre loading</font><font color="#CCCCCC"> will see it dead later in</font>

280
00:17:00,560 --> 00:17:08,669
in in the in<font color="#CCCCCC"> the demo while still parity</font>

281
00:17:05,430 --> 00:17:11,240
is a<font color="#CCCCCC"> segment executable it is available</font>

282
00:17:08,670 --> 00:17:14,910
on github in the<font color="#CCCCCC"> ten to space</font>

283
00:17:11,240 --> 00:17:20,430
recently<font color="#CCCCCC"> i've put it there as chain to</font>

284
00:17:14,910 --> 00:17:22,589
<font color="#E5E5E5">parody so there is a new answer for the</font>

285
00:17:20,430 --> 00:17:27,040
visual studio question<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> called</font>

286
00:17:22,589 --> 00:17:33,100
parity<font color="#E5E5E5"> what are the next steps</font>

287
00:17:27,040 --> 00:17:36,340
for<font color="#E5E5E5"> gender parity</font><font color="#CCCCCC"> it is not yet there it</font>

288
00:17:33,100 --> 00:17:39,419
is not yet comfortable with the mingw

289
00:17:36,340 --> 00:17:41,949
<font color="#CCCCCC">toolchain which is not the native</font>

290
00:17:39,420 --> 00:17:45,970
<font color="#CCCCCC">microsoft or change but still creates</font>

291
00:17:41,950 --> 00:17:50,430
<font color="#CCCCCC">windows boundaries and the loader</font>

292
00:17:45,970 --> 00:17:54,870
<font color="#E5E5E5">library does not use the Microsoft</font>

293
00:17:50,430 --> 00:17:57,430
support<font color="#E5E5E5"> for by link that exit to support</font>

294
00:17:54,870 --> 00:17:59,189
<font color="#E5E5E5">helper function for a delay loading</font>

295
00:17:57,430 --> 00:18:02,290
<font color="#E5E5E5">dll's</font>

296
00:17:59,190 --> 00:18:04,840
hopefully when switching<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the linker</font>

297
00:18:02,290 --> 00:18:10,510
<font color="#CCCCCC">supported delay loading this will</font>

298
00:18:04,840 --> 00:18:14,470
simplify the porting to<font color="#E5E5E5"> 64-bit</font><font color="#CCCCCC"> version 2</font>

299
00:18:10,510 --> 00:18:19,120
<font color="#E5E5E5">prefix there is something different</font>

300
00:18:14,470 --> 00:18:24,700
there is prefix<font color="#E5E5E5"> training a short note</font>

301
00:18:19,120 --> 00:18:28,300
here is you may<font color="#CCCCCC"> have realized that</font><font color="#E5E5E5"> the</font>

302
00:18:24,700 --> 00:18:33,220
windows<font color="#CCCCCC"> that</font><font color="#E5E5E5"> windows does not provide</font>

303
00:18:28,300 --> 00:18:36,159
the<font color="#E5E5E5"> fork except without</font><font color="#CCCCCC"> cycling but when</font>

304
00:18:33,220 --> 00:18:42,040
creating native processes<font color="#E5E5E5"> using the</font>

305
00:18:36,160 --> 00:18:44,620
native compiler<font color="#E5E5E5"> the target boundaries</font>

306
00:18:42,040 --> 00:18:47,500
are not<font color="#CCCCCC"> segments</font><font color="#E5E5E5"> binary so the</font><font color="#CCCCCC"> touchid</font>

307
00:18:44,620 --> 00:18:50,949
boundaries do not are<font color="#CCCCCC"> not able to use</font>

308
00:18:47,500 --> 00:18:56,830
<font color="#CCCCCC">form they</font><font color="#E5E5E5"> just need to use the windows</font>

309
00:18:50,950 --> 00:19:00,430
<font color="#CCCCCC">api fortunately there is prefix training</font>

310
00:18:56,830 --> 00:19:03,909
which is able<font color="#E5E5E5"> to maintain another change</font>

311
00:19:00,430 --> 00:19:06,840
of prefix<font color="#E5E5E5"> but which does not contain the</font>

312
00:19:03,910 --> 00:19:10,840
<font color="#E5E5E5">package manager itself</font><font color="#CCCCCC"> chain to portage</font>

313
00:19:06,840 --> 00:19:14,230
instead there is<font color="#CCCCCC"> a segment prefix which</font>

314
00:19:10,840 --> 00:19:16,510
contains the package<font color="#CCCCCC"> manager and prefix</font>

315
00:19:14,230 --> 00:19:22,180
<font color="#CCCCCC">training does tell this package manager</font>

316
00:19:16,510 --> 00:19:24,610
<font color="#CCCCCC">to manage a different prefix which holds</font>

317
00:19:22,180 --> 00:19:28,540
only binder is created by the native

318
00:19:24,610 --> 00:19:31,990
<font color="#CCCCCC">tool chain</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to cross</font>

319
00:19:28,540 --> 00:19:34,659
compiling<font color="#E5E5E5"> but actually it's not cross</font>

320
00:19:31,990 --> 00:19:37,120
compiling<font color="#E5E5E5"> because they created binaries</font>

321
00:19:34,660 --> 00:19:38,259
can<font color="#CCCCCC"> can</font><font color="#E5E5E5"> be executed within the original</font>

322
00:19:37,120 --> 00:19:42,279
build environment

323
00:19:38,259 --> 00:19:45,289
it's kind of its<font color="#CCCCCC"> kind of multi lip</font>

324
00:19:42,279 --> 00:19:47,569
<font color="#E5E5E5">because it's on the same architecture</font><font color="#CCCCCC"> a</font>

325
00:19:45,289 --> 00:19:51,289
different variant of libraries or

326
00:19:47,569 --> 00:19:54,759
<font color="#E5E5E5">boundaries to execute but still it's</font><font color="#CCCCCC"> not</font>

327
00:19:51,289 --> 00:19:54,759
multi lip because<font color="#E5E5E5"> it's in a different</font>

328
00:19:54,999 --> 00:20:02,179
prefix<font color="#E5E5E5"> so it's not merged into the same</font>

329
00:19:58,039 --> 00:20:07,519
prefix as the original Linux<font color="#CCCCCC"> Marty</font><font color="#E5E5E5"> lip</font>

330
00:20:02,179 --> 00:20:13,219
does and as of<font color="#CCCCCC"> now there</font><font color="#E5E5E5"> are mingw</font>

331
00:20:07,519 --> 00:20:16,699
keywords in center but they refer<font color="#CCCCCC"> to the</font>

332
00:20:13,219 --> 00:20:20,589
real mingw<font color="#CCCCCC"> toolchain</font><font color="#E5E5E5"> and not to parity</font>

333
00:20:16,699 --> 00:20:24,169
<font color="#CCCCCC">for the moment</font><font color="#E5E5E5"> I'm planning</font><font color="#CCCCCC"> to use mingw</font>

334
00:20:20,589 --> 00:20:26,589
keywords<font color="#E5E5E5"> with parity because the idea is</font>

335
00:20:24,169 --> 00:20:31,009
basically to<font color="#E5E5E5"> have gender parity as a</font>

336
00:20:26,589 --> 00:20:37,489
<font color="#CCCCCC">plug-in replacement or for the mingw</font>

337
00:20:31,009 --> 00:20:39,499
<font color="#CCCCCC">georgian</font><font color="#E5E5E5"> but we're not there yet of</font>

338
00:20:37,489 --> 00:20:43,399
course<font color="#CCCCCC"> there are</font><font color="#E5E5E5"> little patches that do</font>

339
00:20:39,499 --> 00:20:45,859
the<font color="#E5E5E5"> blood using parity</font><font color="#CCCCCC"> actual literal</font>

340
00:20:43,399 --> 00:20:48,849
<font color="#CCCCCC">does support using the CL dot exit or</font>

341
00:20:45,859 --> 00:20:54,799
<font color="#E5E5E5">general ready the microsoft word chain</font>

342
00:20:48,849 --> 00:20:57,559
<font color="#E5E5E5">but it's different</font><font color="#CCCCCC"> and quite</font><font color="#E5E5E5"> yeah</font>

343
00:20:54,799 --> 00:21:00,699
<font color="#E5E5E5">incomplete without wrapping the</font><font color="#CCCCCC"> demerits</font>

344
00:20:57,559 --> 00:21:05,769
<font color="#E5E5E5">of</font><font color="#CCCCCC"> to a chain you cannot do</font><font color="#E5E5E5"> a few</font>

345
00:21:00,699 --> 00:21:08,539
features<font color="#CCCCCC"> clipped</font><font color="#E5E5E5"> word usually relies on</font>

346
00:21:05,769 --> 00:21:12,309
so there is of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to patch</font>

347
00:21:08,539 --> 00:21:15,079
slipped or to use the parity<font color="#E5E5E5"> georgian</font>

348
00:21:12,309 --> 00:21:17,649
these parity<font color="#CCCCCC"> liberal patches are not</font>

349
00:21:15,079 --> 00:21:20,959
<font color="#E5E5E5">integrated into</font><font color="#CCCCCC"> chain to prefix yet</font><font color="#E5E5E5"> and</font>

350
00:21:17,649 --> 00:21:26,498
are not yet submitted upstream because

351
00:21:20,959 --> 00:21:31,819
parity is is still under<font color="#CCCCCC"> development</font>

352
00:21:26,499 --> 00:21:36,399
<font color="#E5E5E5">towards the mingw georgian I can't</font>

353
00:21:31,819 --> 00:21:40,279
promise<font color="#CCCCCC"> or I do</font><font color="#E5E5E5"> not expect actually to</font>

354
00:21:36,399 --> 00:21:44,059
to<font color="#CCCCCC"> reduce the complete need for patching</font>

355
00:21:40,279 --> 00:21:46,189
it or when parity provides the<font color="#E5E5E5"> for mingw</font>

356
00:21:44,059 --> 00:21:49,999
<font color="#CCCCCC">Georgian I don't expect</font><font color="#E5E5E5"> this would work</font>

357
00:21:46,189 --> 00:21:52,419
<font color="#CCCCCC">but it could be yeah no I don't think</font>

358
00:21:49,999 --> 00:21:52,419
<font color="#CCCCCC">it's possible</font>

359
00:21:53,169 --> 00:22:00,679
but finally the goal is to<font color="#CCCCCC"> build more</font>

360
00:21:57,620 --> 00:22:06,969
<font color="#E5E5E5">libraries using the visual studio to</font>

361
00:22:00,679 --> 00:22:09,140
chain within chain<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> for a demo video</font>

362
00:22:06,970 --> 00:22:11,630
let's see how<font color="#CCCCCC"> that works out</font>

363
00:22:09,140 --> 00:22:13,780
<font color="#E5E5E5">they have set up in a virtual box in</font>

364
00:22:11,630 --> 00:22:17,809
Windows Server 2016

365
00:22:13,780 --> 00:22:22,190
where is<font color="#CCCCCC"> standards</font><font color="#E5E5E5"> eggwin set up plus</font>

366
00:22:17,809 --> 00:22:25,280
the<font color="#E5E5E5"> segment is HD and this</font><font color="#CCCCCC"> windows I</font>

367
00:22:22,190 --> 00:22:31,309
have installed<font color="#E5E5E5"> or the visual studio</font>

368
00:22:25,280 --> 00:22:34,428
versions from 2008 to 2017<font color="#CCCCCC"> I have set</font><font color="#E5E5E5"> up</font>

369
00:22:31,309 --> 00:22:39,020
a<font color="#E5E5E5"> chain to prefix as the</font><font color="#CCCCCC"> 64 bit</font><font color="#E5E5E5"> segment</font>

370
00:22:34,429 --> 00:22:44,780
prefix in<font color="#CCCCCC"> / frustum center and I have</font>

371
00:22:39,020 --> 00:22:50,030
<font color="#E5E5E5">set up a chained prefix change change</font>

372
00:22:44,780 --> 00:22:53,539
prefix using the cycling prefix from

373
00:22:50,030 --> 00:22:59,840
first<font color="#CCCCCC"> time</font><font color="#E5E5E5"> chain</font><font color="#CCCCCC"> 2 to</font><font color="#E5E5E5"> manage the windows</font>

374
00:22:53,539 --> 00:23:00,919
prefix<font color="#E5E5E5"> in fosston windows let's see how</font>

375
00:22:59,840 --> 00:23:06,199
that<font color="#E5E5E5"> works out</font>

376
00:23:00,919 --> 00:23:08,590
yeah this is aging<font color="#CCCCCC"> into the</font><font color="#E5E5E5"> segment or</font>

377
00:23:06,200 --> 00:23:13,390
<font color="#E5E5E5">the windows box the segment box</font><font color="#CCCCCC"> actually</font>

378
00:23:08,590 --> 00:23:20,840
here can see this is vanilla<font color="#CCCCCC"> segment</font>

379
00:23:13,390 --> 00:23:23,260
22.9 and<font color="#CCCCCC"> i have started this change of</font>

380
00:23:20,840 --> 00:23:23,260
<font color="#E5E5E5">prefix</font>

381
00:23:23,539 --> 00:23:33,440
now I'm going to<font color="#CCCCCC"> replace</font><font color="#E5E5E5"> a dll used by</font>

382
00:23:28,879 --> 00:23:37,219
the currently<font color="#E5E5E5"> running bish currently</font>

383
00:23:33,440 --> 00:23:42,230
<font color="#E5E5E5">running is</font><font color="#CCCCCC"> the prefix page</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> DLL I'm</font>

384
00:23:37,220 --> 00:23:44,809
going to replace is<font color="#CCCCCC"> psyche input and I</font>

385
00:23:42,230 --> 00:23:47,989
have navigated<font color="#E5E5E5"> already now to the</font>

386
00:23:44,809 --> 00:23:57,109
location<font color="#E5E5E5"> of this segment</font><font color="#CCCCCC"> psyche into the</font>

387
00:23:47,989 --> 00:24:01,429
<font color="#CCCCCC">11</font><font color="#E5E5E5"> can you read ever so far nice so the</font>

388
00:23:57,109 --> 00:24:03,889
next step is to replace<font color="#E5E5E5"> this</font><font color="#CCCCCC"> DLL with</font>

389
00:24:01,429 --> 00:24:07,659
the segment provided<font color="#E5E5E5"> DLL it's a</font>

390
00:24:03,889 --> 00:24:12,469
different file but provides the same API

391
00:24:07,659 --> 00:24:17,019
and now we're<font color="#CCCCCC"> using there or vanilla</font>

392
00:24:12,470 --> 00:24:20,389
<font color="#CCCCCC">sigh Qin</font><font color="#E5E5E5"> DLL you can see how it breaks</font>

393
00:24:17,019 --> 00:24:27,739
why does it break it does<font color="#E5E5E5"> tell quite</font>

394
00:24:20,389 --> 00:24:31,189
nice<font color="#E5E5E5"> the different segments know the</font>

395
00:24:27,739 --> 00:24:34,999
current shell does for work or<font color="#CCCCCC"> wants to</font>

396
00:24:31,190 --> 00:24:40,659
<font color="#E5E5E5">for work to execute the LS process in</font>

397
00:24:34,999 --> 00:24:44,149
the child but<font color="#CCCCCC"> cyclin realizes that they</font>

398
00:24:40,659 --> 00:24:47,450
that one of the deals necessary to start

399
00:24:44,149 --> 00:24:52,189
the segment<font color="#E5E5E5"> this new child process from</font>

400
00:24:47,450 --> 00:24:54,200
<font color="#E5E5E5">bash detects that this deal ill while</font>

401
00:24:52,190 --> 00:24:56,649
existing<font color="#E5E5E5"> is loaded to</font><font color="#CCCCCC"> a different</font>

402
00:24:54,200 --> 00:25:00,619
address<font color="#CCCCCC"> compared</font><font color="#E5E5E5"> to the parent process</font>

403
00:24:56,649 --> 00:25:08,268
and this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the reason why cycling fork</font>

404
00:25:00,619 --> 00:25:13,238
currently breaks but<font color="#E5E5E5"> now I'm going to</font>

405
00:25:08,269 --> 00:25:18,700
restore<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> the original</font><font color="#CCCCCC"> DLL for now</font>

406
00:25:13,239 --> 00:25:23,659
but now I'm replacing the cyclin<font color="#E5E5E5"> D lil</font>

407
00:25:18,700 --> 00:25:27,499
with<font color="#E5E5E5"> a segment</font><font color="#CCCCCC"> DLL containing the fog</font>

408
00:25:23,659 --> 00:25:31,039
patches so this is<font color="#CCCCCC"> running</font><font color="#E5E5E5"> layer not so</font>

409
00:25:27,499 --> 00:25:33,170
reliable<font color="#E5E5E5"> here I'm stopping the</font><font color="#CCCCCC"> sshd it</font>

410
00:25:31,039 --> 00:25:38,450
was in cycling

411
00:25:33,170 --> 00:25:40,760
then there<font color="#E5E5E5"> is so there are no</font><font color="#CCCCCC"> segment</font>

412
00:25:38,450 --> 00:25:43,400
processes running<font color="#E5E5E5"> running so</font><font color="#CCCCCC"> I'm able</font><font color="#E5E5E5"> to</font>

413
00:25:40,760 --> 00:25:45,770
replace the segment<font color="#CCCCCC"> Delille then I'm</font>

414
00:25:43,400 --> 00:25:48,140
replacing<font color="#CCCCCC"> the segment de Lille</font><font color="#E5E5E5"> with one</font>

415
00:25:45,770 --> 00:25:51,350
that supports these<font color="#CCCCCC"> so-called four</font>

416
00:25:48,140 --> 00:25:57,020
<font color="#CCCCCC">kuipers hot links</font><font color="#E5E5E5"> and starting the SSH</font>

417
00:25:51,350 --> 00:25:59,090
daemon<font color="#E5E5E5"> again now navigating again that</font>

418
00:25:57,020 --> 00:26:04,160
is very<font color="#E5E5E5"> same I'm doing this very same</font>

419
00:25:59,090 --> 00:26:07,490
again navigating to the<font color="#E5E5E5"> 2t</font><font color="#CCCCCC"> steel ill to</font>

420
00:26:04,160 --> 00:26:10,250
replace here<font color="#E5E5E5"> you can see this is not</font>

421
00:26:07,490 --> 00:26:14,510
vanilla<font color="#E5E5E5"> cycling but segments with</font>

422
00:26:10,250 --> 00:26:17,930
additional patches<font color="#CCCCCC"> I called him the</font>

423
00:26:14,510 --> 00:26:26,390
gentle<font color="#E5E5E5"> patches or actually I do need a</font>

424
00:26:17,930 --> 00:26:32,560
different<font color="#E5E5E5"> name so here there is still</font>

425
00:26:26,390 --> 00:26:33,770
<font color="#E5E5E5">the backup and the original DLL and now</font>

426
00:26:32,560 --> 00:26:37,310
okay

427
00:26:33,770 --> 00:26:41,810
<font color="#E5E5E5">LD did</font><font color="#CCCCCC"> dollar fish</font><font color="#E5E5E5"> shows this is still</font>

428
00:26:37,310 --> 00:26:46,760
the this is still to<font color="#CCCCCC"> be loaded then</font>

429
00:26:41,810 --> 00:26:50,840
replace this<font color="#E5E5E5"> DLL with the segment one so</font>

430
00:26:46,760 --> 00:26:54,740
it's<font color="#CCCCCC"> actually a</font><font color="#E5E5E5"> different one and now LS</font>

431
00:26:50,840 --> 00:26:57,980
barbash is able to fork<font color="#E5E5E5"> even with the</font>

432
00:26:54,740 --> 00:27:03,650
replay<font color="#E5E5E5"> still</font><font color="#CCCCCC"> it does need and execute LS</font>

433
00:26:57,980 --> 00:27:06,620
in the<font color="#E5E5E5"> child process this is necessary</font>

434
00:27:03,650 --> 00:27:07,970
for<font color="#CCCCCC"> gentle portage or for a package</font>

435
00:27:06,620 --> 00:27:11,899
manager running<font color="#E5E5E5"> inside</font>

436
00:27:07,970 --> 00:27:14,390
<font color="#CCCCCC">Seguin to work out because as already</font>

437
00:27:11,900 --> 00:27:17,720
said package managers do replace dll's

438
00:27:14,390 --> 00:27:21,110
<font color="#E5E5E5">and execute represent alike how does</font>

439
00:27:17,720 --> 00:27:25,850
this work let's inspect this<font color="#CCCCCC"> VAR ransack</font>

440
00:27:21,110 --> 00:27:29,600
<font color="#CCCCCC">fork directory there is a directory</font><font color="#E5E5E5"> per</font>

441
00:27:25,850 --> 00:27:33,709
user<font color="#E5E5E5"> and the directory pair application</font>

442
00:27:29,600 --> 00:27:37,520
this application directory does contain

443
00:27:33,710 --> 00:27:43,140
<font color="#E5E5E5">the best</font><font color="#CCCCCC"> @xa the original executable</font>

444
00:27:37,520 --> 00:27:46,620
does contain<font color="#CCCCCC"> the original dll</font>

445
00:27:43,140 --> 00:27:48,300
and the best<font color="#E5E5E5"> at exited local file which</font>

446
00:27:46,620 --> 00:27:51,389
can be<font color="#E5E5E5"> empty this is the deal Ellery</font>

447
00:27:48,300 --> 00:27:55,590
<font color="#CCCCCC">direction file</font><font color="#E5E5E5"> this is how to work</font>

448
00:27:51,390 --> 00:27:58,350
around<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> in cycling can't work</font>

449
00:27:55,590 --> 00:28:02,340
and the<font color="#E5E5E5"> patches are basically accepted</font>

450
00:27:58,350 --> 00:28:11,550
upstream and pending for the next major

451
00:28:02,340 --> 00:28:13,949
release now create some application<font color="#E5E5E5"> I'm</font>

452
00:28:11,550 --> 00:28:19,590
<font color="#E5E5E5">going to create a simple application</font>

453
00:28:13,950 --> 00:28:22,350
here<font color="#E5E5E5"> C++ application and going to</font>

454
00:28:19,590 --> 00:28:25,129
compile it once with the cycling

455
00:28:22,350 --> 00:28:29,899
compiler and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> second time with</font><font color="#E5E5E5"> the</font>

456
00:28:25,130 --> 00:28:33,180
visual studio<font color="#E5E5E5"> compiler repped by parity</font>

457
00:28:29,900 --> 00:28:36,720
<font color="#CCCCCC">this is quite simple the difference to</font>

458
00:28:33,180 --> 00:28:39,690
see is between<font color="#E5E5E5"> segments and the</font><font color="#CCCCCC"> Visual</font>

459
00:28:36,720 --> 00:28:43,370
<font color="#CCCCCC">Studio</font><font color="#E5E5E5"> executable segment does mangle</font>

460
00:28:39,690 --> 00:28:47,420
the<font color="#E5E5E5"> zero argument for the executable as</font>

461
00:28:43,370 --> 00:28:51,540
<font color="#E5E5E5">UNIX path while the windows binary</font>

462
00:28:47,420 --> 00:28:55,610
encounters the real<font color="#CCCCCC"> Windows path</font><font color="#E5E5E5"> and the</font>

463
00:28:51,540 --> 00:29:00,620
application I created just<font color="#E5E5E5"> prints this</font>

464
00:28:55,610 --> 00:29:05,179
<font color="#E5E5E5">zero argument under standard out</font>

465
00:29:00,620 --> 00:29:05,179
<font color="#E5E5E5">compiling this application with sag win</font>

466
00:29:08,060 --> 00:29:18,080
<font color="#E5E5E5">does yield the posix path because</font>

467
00:29:12,500 --> 00:29:22,100
cycling does<font color="#CCCCCC"> mangu</font><font color="#E5E5E5"> this one and unlike</font>

468
00:29:18,080 --> 00:29:27,280
on Linux<font color="#E5E5E5"> and</font><font color="#CCCCCC"> UNIX it's not a dot out but</font>

469
00:29:22,100 --> 00:29:29,929
a dot<font color="#CCCCCC"> except the default output</font><font color="#E5E5E5"> name now</font>

470
00:29:27,280 --> 00:29:34,310
entering the<font color="#CCCCCC"> Train</font><font color="#E5E5E5"> to prefix</font><font color="#CCCCCC"> their</font>

471
00:29:29,930 --> 00:29:37,070
parity is installed already parity is

472
00:29:34,310 --> 00:29:39,230
able to find the<font color="#CCCCCC"> installed visual studio</font>

473
00:29:37,070 --> 00:29:42,110
versions from<font color="#E5E5E5"> the registry which is</font>

474
00:29:39,230 --> 00:29:45,970
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> easily accessible through</font>

475
00:29:42,110 --> 00:29:53,260
<font color="#CCCCCC">cyclin using /proc sanguine you can see</font>

476
00:29:45,970 --> 00:29:59,630
there is Visual Studio 2008 this<font color="#E5E5E5"> is 2010</font>

477
00:29:53,260 --> 00:30:05,480
<font color="#E5E5E5">then there is 2012</font><font color="#CCCCCC"> 3rd 2013</font><font color="#E5E5E5"> Visual</font>

478
00:29:59,630 --> 00:30:08,800
Studio 2013 15 and 17 so<font color="#CCCCCC"> there</font><font color="#E5E5E5"> their</font>

479
00:30:05,480 --> 00:30:12,500
product<font color="#E5E5E5"> title does include a year name</font>

480
00:30:08,800 --> 00:30:14,899
while the<font color="#E5E5E5"> compiler internally just has</font>

481
00:30:12,500 --> 00:30:19,400
an<font color="#CCCCCC"> increasing number except for the</font>

482
00:30:14,900 --> 00:30:20,990
certain they do like<font color="#CCCCCC"> air like the</font>

483
00:30:19,400 --> 00:30:27,880
airplanes where you don't have a<font color="#CCCCCC"> seat</font>

484
00:30:20,990 --> 00:30:32,470
<font color="#E5E5E5">number</font><font color="#CCCCCC"> certain now setup parity to use</font>

485
00:30:27,880 --> 00:30:35,480
the newest<font color="#CCCCCC"> visual studio by default</font>

486
00:30:32,470 --> 00:30:41,740
again<font color="#CCCCCC"> it is creating the registry for</font>

487
00:30:35,480 --> 00:30:41,740
<font color="#CCCCCC">available visual studio and thus</font><font color="#E5E5E5"> setup</font>

488
00:30:42,340 --> 00:30:48,929
configuration<font color="#CCCCCC"> files to use this</font><font color="#E5E5E5"> visual</font>

489
00:30:47,270 --> 00:30:52,389
<font color="#E5E5E5">studio</font>

490
00:30:48,930 --> 00:30:56,080
compiling the application now<font color="#E5E5E5"> looks</font><font color="#CCCCCC"> like</font>

491
00:30:52,390 --> 00:30:59,500
looks quite<font color="#E5E5E5"> similar</font><font color="#CCCCCC"> to done with with</font>

492
00:30:56,080 --> 00:31:05,740
second it's just<font color="#CCCCCC"> a different</font><font color="#E5E5E5"> house</font>

493
00:30:59,500 --> 00:31:08,440
triplet<font color="#CCCCCC"> court I 686 PC win and</font><font color="#E5E5E5"> T and G</font>

494
00:31:05,740 --> 00:31:10,750
<font color="#CCCCCC">plus plus which actually is just</font><font color="#E5E5E5"> a</font>

495
00:31:08,440 --> 00:31:14,560
comment line provided like sheep like

496
00:31:10,750 --> 00:31:17,800
<font color="#E5E5E5">GNU Compiler the</font><font color="#CCCCCC"> backhand cord is is</font>

497
00:31:14,560 --> 00:31:21,940
Visual Studio compilers here<font color="#CCCCCC"> McKenzie</font>

498
00:31:17,800 --> 00:31:25,720
<font color="#E5E5E5">the zero argument is the for Windows</font>

499
00:31:21,940 --> 00:31:31,270
<font color="#CCCCCC">pass because</font><font color="#E5E5E5"> it is a native Windows</font>

500
00:31:25,720 --> 00:31:34,720
application this<font color="#E5E5E5"> egwin</font><font color="#CCCCCC"> ldd on for that</font>

501
00:31:31,270 --> 00:31:37,330
Windows executable<font color="#CCCCCC"> well</font><font color="#E5E5E5"> is able to find</font>

502
00:31:34,720 --> 00:31:41,140
<font color="#E5E5E5">some DLL some native window still else</font>

503
00:31:37,330 --> 00:31:47,470
but the segment<font color="#CCCCCC"> ldd is not able</font><font color="#E5E5E5"> to read</font>

504
00:31:41,140 --> 00:31:52,420
those manifest<font color="#E5E5E5"> embedded dll's this is</font>

505
00:31:47,470 --> 00:31:54,610
like the<font color="#CCCCCC"> side-by-side application</font><font color="#E5E5E5"> the</font>

506
00:31:52,420 --> 00:32:01,530
provided by<font color="#CCCCCC"> Windows segment does not use</font>

507
00:31:54,610 --> 00:32:05,699
this one okay<font color="#CCCCCC"> now for shared library</font>

508
00:32:01,530 --> 00:32:05,700
<font color="#E5E5E5">creating a simple library</font>

509
00:32:06,700 --> 00:32:17,090
that does not so<font color="#E5E5E5"> much do</font><font color="#CCCCCC"> ten returning</font>

510
00:32:11,950 --> 00:32:21,220
<font color="#CCCCCC">17 a header file</font><font color="#E5E5E5"> and using this library</font>

511
00:32:17,090 --> 00:32:21,220
function in the main application file

512
00:32:23,230 --> 00:32:32,660
I'm going<font color="#CCCCCC"> to show beyond the creation of</font>

513
00:32:29,360 --> 00:32:37,610
a<font color="#CCCCCC"> shed library or somehow or carry that</font>

514
00:32:32,660 --> 00:32:41,660
there is the parity<font color="#CCCCCC"> load</font><font color="#E5E5E5"> library which</font>

515
00:32:37,610 --> 00:32:43,909
is able<font color="#E5E5E5"> to listen to the elder library</font>

516
00:32:41,660 --> 00:32:48,770
<font color="#CCCCCC">past environment variety for example</font>

517
00:32:43,910 --> 00:32:50,480
beyond others<font color="#E5E5E5"> but first I'm going to</font>

518
00:32:48,770 --> 00:33:00,230
compile this<font color="#CCCCCC"> with the cycling compiler</font>

519
00:32:50,480 --> 00:33:05,750
again with C++<font color="#CCCCCC"> desh shared output file</font>

520
00:33:00,230 --> 00:33:10,640
<font color="#CCCCCC">name that</font><font color="#E5E5E5"> is lifted is</font><font color="#CCCCCC"> o and the source</font>

521
00:33:05,750 --> 00:33:17,080
file and<font color="#E5E5E5"> finally again linking the final</font>

522
00:33:10,640 --> 00:33:22,120
<font color="#CCCCCC">application just specifying this library</font>

523
00:33:17,080 --> 00:33:24,429
executing does work so far yeah

524
00:33:22,120 --> 00:33:28,149
[Music]

525
00:33:24,430 --> 00:33:29,910
now I'm<font color="#E5E5E5"> moving around to DLL into some</font>

526
00:33:28,150 --> 00:33:33,940
subdirectory

527
00:33:29,910 --> 00:33:38,230
actually this is the data so file is the

528
00:33:33,940 --> 00:33:41,440
real deal<font color="#CCCCCC"> ill for</font><font color="#E5E5E5"> cyclin after moving</font>

529
00:33:38,230 --> 00:33:43,420
the DLL away<font color="#CCCCCC"> cycling</font><font color="#E5E5E5"> is not able to find</font>

530
00:33:41,440 --> 00:33:45,610
this<font color="#CCCCCC"> DLL occur</font><font color="#E5E5E5"> again</font>

531
00:33:43,420 --> 00:33:49,450
well actually<font color="#E5E5E5"> it's Windows not able to</font>

532
00:33:45,610 --> 00:33:52,139
<font color="#E5E5E5">find</font><font color="#CCCCCC"> it a</font><font color="#E5E5E5"> little but because of Windows</font>

533
00:33:49,450 --> 00:33:55,510
using the path environment<font color="#E5E5E5"> variable a</font>

534
00:33:52,140 --> 00:33:56,560
pointing to the new directory does finds

535
00:33:55,510 --> 00:34:00,879
the deal elegant

536
00:33:56,560 --> 00:34:03,610
however with<font color="#CCCCCC"> saguenay it does not work</font>

537
00:34:00,880 --> 00:34:09,460
to use an LD library path to find<font color="#E5E5E5"> the</font>

538
00:34:03,610 --> 00:34:13,870
deal in let's compare this with parity

539
00:34:09,460 --> 00:34:18,550
again the comment<font color="#CCCCCC"> line is pretty</font><font color="#E5E5E5"> much</font>

540
00:34:13,870 --> 00:34:23,199
the same except for the<font color="#E5E5E5"> host triplet the</font>

541
00:34:18,550 --> 00:34:26,110
creation created files<font color="#E5E5E5"> there is the dot</font>

542
00:34:23,199 --> 00:34:28,600
is a file lip-lip table so as<font color="#CCCCCC"> the output</font>

543
00:34:26,110 --> 00:34:34,270
file<font color="#CCCCCC"> this actually is the</font><font color="#E5E5E5"> import library</font>

544
00:34:28,600 --> 00:34:37,149
and additional creation is<font color="#E5E5E5"> the real deal</font>

545
00:34:34,270 --> 00:34:42,850
<font color="#E5E5E5">l this</font><font color="#CCCCCC"> is called</font><font color="#E5E5E5"> lip-lip dot is o dot</font>

546
00:34:37,149 --> 00:34:47,679
<font color="#CCCCCC">DLL again the same command to create</font><font color="#E5E5E5"> the</font>

547
00:34:42,850 --> 00:34:49,230
<font color="#E5E5E5">final</font><font color="#CCCCCC"> application is does work as</font>

548
00:34:47,679 --> 00:34:52,570
<font color="#CCCCCC">expected</font>

549
00:34:49,230 --> 00:34:57,250
now<font color="#E5E5E5"> moving this native</font><font color="#CCCCCC"> Windows library</font>

550
00:34:52,570 --> 00:35:01,990
around<font color="#E5E5E5"> luckily I have to move the DLL</font>

551
00:34:57,250 --> 00:35:05,080
away and now<font color="#E5E5E5"> as expected the application</font>

552
00:35:01,990 --> 00:35:07,660
is<font color="#E5E5E5"> not able to load this DLL of course</font>

553
00:35:05,080 --> 00:35:09,549
because of<font color="#E5E5E5"> being</font><font color="#CCCCCC"> Windows using the past</font>

554
00:35:07,660 --> 00:35:12,490
environment for the applet to point to

555
00:35:09,550 --> 00:35:15,760
the new<font color="#E5E5E5"> deal allocation does work but</font>

556
00:35:12,490 --> 00:35:17,709
also you can<font color="#E5E5E5"> see it is</font><font color="#CCCCCC"> even like LD</font>

557
00:35:15,760 --> 00:35:19,870
library path environment variable<font color="#E5E5E5"> a</font>

558
00:35:17,710 --> 00:35:23,160
which is interpreted<font color="#E5E5E5"> by</font><font color="#CCCCCC"> this loader</font>

559
00:35:19,870 --> 00:35:27,029
library provided<font color="#CCCCCC"> by parity</font><font color="#E5E5E5"> that does</font>

560
00:35:23,160 --> 00:35:27,029
find the Larry<font color="#E5E5E5"> again</font>

561
00:35:28,690 --> 00:35:38,860
let's have a look<font color="#CCCCCC"> and add</font><font color="#E5E5E5"> at the files</font>

562
00:35:32,350 --> 00:35:42,490
created so far<font color="#CCCCCC"> again the leap that is Oh</font>

563
00:35:38,860 --> 00:35:45,520
actually<font color="#E5E5E5"> is is the</font><font color="#CCCCCC"> input</font><font color="#E5E5E5"> library this is</font>

564
00:35:42,490 --> 00:35:49,240
quite<font color="#E5E5E5"> similar to an</font><font color="#CCCCCC"> avi file in inside</font>

565
00:35:45,520 --> 00:35:52,380
<font color="#E5E5E5">when this is the</font><font color="#CCCCCC"> saguenay file command</font>

566
00:35:49,240 --> 00:35:56,319
which just knows about our key files

567
00:35:52,380 --> 00:36:03,040
<font color="#E5E5E5">while the</font><font color="#CCCCCC"> dll file</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> is the</font>

568
00:35:56,320 --> 00:36:07,420
windows<font color="#E5E5E5"> theland so now I'm going</font><font color="#CCCCCC"> to set</font>

569
00:36:03,040 --> 00:36:11,500
lip because<font color="#CCCCCC"> it is a small rivalry</font><font color="#E5E5E5"> in</font>

570
00:36:07,420 --> 00:36:18,030
Windows prefix<font color="#E5E5E5"> which is managed by the</font>

571
00:36:11,500 --> 00:36:21,970
<font color="#E5E5E5">segment installed portage</font><font color="#CCCCCC"> I don't</font>

572
00:36:18,030 --> 00:36:29,320
recalculate dependencies but<font color="#E5E5E5"> this is</font>

573
00:36:21,970 --> 00:36:32,680
portage doing its work for<font color="#E5E5E5"> Windows set</font>

574
00:36:29,320 --> 00:36:35,620
lip the<font color="#CCCCCC"> built</font><font color="#E5E5E5"> system of set lip actually</font>

575
00:36:32,680 --> 00:36:39,040
does not know<font color="#E5E5E5"> anything about Windows it</font>

576
00:36:35,620 --> 00:36:42,819
does know<font color="#CCCCCC"> about mingw</font><font color="#E5E5E5"> but nothing about</font>

577
00:36:39,040 --> 00:36:45,009
<font color="#CCCCCC">Windows and actually this built system</font>

578
00:36:42,820 --> 00:36:49,330
here does the same<font color="#E5E5E5"> the</font><font color="#CCCCCC"> very same</font>

579
00:36:45,010 --> 00:36:51,280
commands as it would do on<font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> the</font>

580
00:36:49,330 --> 00:36:53,380
only difference here is<font color="#E5E5E5"> some you name</font>

581
00:36:51,280 --> 00:36:58,960
but I'm<font color="#E5E5E5"> not sure about how this actually</font>

582
00:36:53,380 --> 00:37:06,010
<font color="#E5E5E5">is is used</font><font color="#CCCCCC"> parity still provides for</font><font color="#E5E5E5"> PEC</font>

583
00:36:58,960 --> 00:37:10,600
for<font color="#E5E5E5"> i v i 586 pcs</font><font color="#CCCCCC"> cycling triplet for me</font>

584
00:37:06,010 --> 00:37:13,000
96.1<font color="#CCCCCC"> this is the actually the profile</font>

585
00:37:10,600 --> 00:37:16,870
still used in<font color="#E5E5E5"> change of prefix as they</font>

586
00:37:13,000 --> 00:37:18,850
<font color="#CCCCCC">win the win and he profiles</font><font color="#E5E5E5"> then set the</font>

587
00:37:16,870 --> 00:37:22,390
<font color="#CCCCCC">set lip</font><font color="#E5E5E5"> build system actually</font><font color="#CCCCCC"> set lib</font>

588
00:37:18,850 --> 00:37:25,990
configure is asking the compiler if the

589
00:37:22,390 --> 00:37:29,859
compiler<font color="#E5E5E5"> is able to produce a</font>

590
00:37:25,990 --> 00:37:33,850
preprocessor error and the error message

591
00:37:29,860 --> 00:37:36,430
<font color="#CCCCCC">showed by parity or the Visual Studio</font>

592
00:37:33,850 --> 00:37:39,819
<font color="#CCCCCC">actually you can see these are real</font>

593
00:37:36,430 --> 00:37:41,390
<font color="#E5E5E5">windows path and this is the full path</font>

594
00:37:39,820 --> 00:37:45,140
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> source</font>

595
00:37:41,390 --> 00:37:50,940
provided to the visual studio by<font color="#E5E5E5"> perigee</font>

596
00:37:45,140 --> 00:37:56,460
continuing testing if you<font color="#CCCCCC"> had a fails</font><font color="#E5E5E5"> to</font>

597
00:37:50,940 --> 00:38:02,760
exist they<font color="#E5E5E5"> are provided by parity as</font>

598
00:37:56,460 --> 00:38:06,060
well<font color="#E5E5E5"> for things that do map to windows</font>

599
00:38:02,760 --> 00:38:10,710
actually<font color="#E5E5E5"> and are available in Windows</font>

600
00:38:06,060 --> 00:38:14,520
<font color="#E5E5E5">often with leading underscore like</font><font color="#CCCCCC"> win32</font>

601
00:38:10,710 --> 00:38:16,470
provides<font color="#E5E5E5"> the underscore</font><font color="#CCCCCC"> opencore which</font>

602
00:38:14,520 --> 00:38:23,960
does basically<font color="#E5E5E5"> the same as the POSIX</font>

603
00:38:16,470 --> 00:38:28,859
open core but back to the<font color="#CCCCCC"> the compiling</font>

604
00:38:23,960 --> 00:38:32,900
<font color="#CCCCCC">they make file used with set Lib just</font>

605
00:38:28,859 --> 00:38:38,160
runs the<font color="#E5E5E5"> compiler uses the original</font>

606
00:38:32,900 --> 00:38:42,060
<font color="#CCCCCC">cheesy</font><font color="#E5E5E5"> comment arguments including the</font>

607
00:38:38,160 --> 00:38:45,839
GCC extension - include - include with

608
00:38:42,060 --> 00:38:49,619
GCC does include the specified argument

609
00:38:45,840 --> 00:38:53,130
specified file<font color="#E5E5E5"> before processing the</font>

610
00:38:49,619 --> 00:38:56,130
real source file<font color="#CCCCCC"> parity actually does</font>

611
00:38:53,130 --> 00:38:59,550
create a temporary source file<font color="#E5E5E5"> put this</font>

612
00:38:56,130 --> 00:39:04,170
- include file set<font color="#E5E5E5"> constant age there</font>

613
00:38:59,550 --> 00:39:06,540
and first and second it puts their

614
00:39:04,170 --> 00:39:10,680
original source<font color="#E5E5E5"> file there it is a</font>

615
00:39:06,540 --> 00:39:13,080
temporary temporary source file and<font color="#E5E5E5"> in</font>

616
00:39:10,680 --> 00:39:16,890
the visual<font color="#CCCCCC"> studio</font><font color="#E5E5E5"> compiler does show</font>

617
00:39:13,080 --> 00:39:20,400
this source file name on the on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> on</font>

618
00:39:16,890 --> 00:39:23,868
<font color="#E5E5E5">the standard out here you can see there</font>

619
00:39:20,400 --> 00:39:23,869
are<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> chops running in parallel</font>

620
00:39:27,559 --> 00:39:37,199
<font color="#E5E5E5">okay for the</font><font color="#CCCCCC"> linker line this</font><font color="#E5E5E5"> is a real</font>

621
00:39:35,819 --> 00:39:41,999
<font color="#CCCCCC">Linux link line</font>

622
00:39:37,199 --> 00:39:45,119
- shared the original see<font color="#CCCCCC"> Flex output</font>

623
00:39:41,999 --> 00:39:52,678
file<font color="#CCCCCC"> Lipsett</font><font color="#E5E5E5"> that is</font><font color="#CCCCCC"> o with the version</font>

624
00:39:45,119 --> 00:39:59,309
number yeah let's look at what has<font color="#CCCCCC"> been</font>

625
00:39:52,679 --> 00:40:03,179
installed now so probably<font color="#CCCCCC"> the cars are</font>

626
00:39:59,309 --> 00:40:06,390
not that readable<font color="#E5E5E5"> first a real file that</font>

627
00:40:03,179 --> 00:40:10,349
is<font color="#CCCCCC"> Lipsett dot is out dot one dot</font><font color="#E5E5E5"> 2.11</font>

628
00:40:06,390 --> 00:40:14,129
<font color="#CCCCCC">this is the input library then there</font><font color="#E5E5E5"> is</font>

629
00:40:10,349 --> 00:40:17,669
<font color="#CCCCCC">Lipsett is a 1 to xi dot dll as the</font>

630
00:40:14,130 --> 00:40:21,419
runtime library and there are symlinks

631
00:40:17,669 --> 00:40:24,689
<font color="#CCCCCC">lips edited this o</font><font color="#E5E5E5"> referring to the</font>

632
00:40:21,419 --> 00:40:28,828
import library<font color="#CCCCCC"> same valid set that is</font>

633
00:40:24,689 --> 00:40:34,709
<font color="#E5E5E5">out at one actually this feels somehow</font>

634
00:40:28,829 --> 00:40:38,219
wrong<font color="#CCCCCC"> and additionally there</font><font color="#E5E5E5"> is a lip</font>

635
00:40:34,709 --> 00:40:41,388
set that<font color="#E5E5E5"> DLL that lip symlink for</font>

636
00:40:38,219 --> 00:40:45,839
compatibility already with the mingw

637
00:40:41,389 --> 00:40:48,630
<font color="#E5E5E5">variant in lip tool which does look out</font>

638
00:40:45,839 --> 00:40:55,709
for linking shared libraries using<font color="#CCCCCC"> the</font>

639
00:40:48,630 --> 00:40:57,499
name scheme lip set that<font color="#E5E5E5"> DLL dot</font><font color="#CCCCCC"> Lib so</font>

640
00:40:55,709 --> 00:41:03,269
that's it so far

641
00:40:57,499 --> 00:41:05,519
for a summary going back<font color="#E5E5E5"> to the</font>

642
00:41:03,269 --> 00:41:08,758
different<font color="#CCCCCC"> requirements for application</font>

643
00:41:05,519 --> 00:41:11,519
developers the portable built

644
00:41:08,759 --> 00:41:14,369
environment to<font color="#E5E5E5"> provide it or using the</font>

645
00:41:11,519 --> 00:41:16,439
POSIX API<font color="#E5E5E5"> on UNIX and Linux it's quite</font>

646
00:41:14,369 --> 00:41:21,389
<font color="#E5E5E5">easy using the</font><font color="#CCCCCC"> host Lib C and on</font><font color="#E5E5E5"> Windows</font>

647
00:41:16,439 --> 00:41:26,459
the second<font color="#CCCCCC"> second dll for the operating</font>

648
00:41:21,389 --> 00:41:30,779
specific<font color="#CCCCCC"> tool chain where which</font><font color="#E5E5E5"> is</font>

649
00:41:26,459 --> 00:41:33,928
needed<font color="#CCCCCC"> for a to provide a new command</font>

650
00:41:30,779 --> 00:41:36,689
line<font color="#E5E5E5"> on UNIX and Linux</font>

651
00:41:33,929 --> 00:41:39,209
it's<font color="#CCCCCC"> Qi news you see using the</font><font color="#E5E5E5"> et</font><font color="#CCCCCC"> 14 you</font>

652
00:41:36,689 --> 00:41:42,199
binutils<font color="#CCCCCC"> and on</font><font color="#E5E5E5"> Windows there is gender</font>

653
00:41:39,209 --> 00:41:42,198
<font color="#E5E5E5">parity wrapping</font>

654
00:41:56,430 --> 00:41:59,469
[Music]

655
00:42:01,990 --> 00:42:10,279
<font color="#CCCCCC">no you can you</font><font color="#E5E5E5"> can run you</font><font color="#CCCCCC"> can you can</font>

656
00:42:07,400 --> 00:42:13,160
run the application from within<font color="#E5E5E5"> the we</font>

657
00:42:10,280 --> 00:42:15,140
should Studio IDE<font color="#E5E5E5"> it just it doesn't</font>

658
00:42:13,160 --> 00:42:17,899
<font color="#E5E5E5">come it just isn't used for compiling</font>

659
00:42:15,140 --> 00:42:24,670
<font color="#E5E5E5">however ever done</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> in a different</font>

660
00:42:17,900 --> 00:42:28,940
<font color="#CCCCCC">project you can configure Visual Studio</font>

661
00:42:24,670 --> 00:42:32,030
<font color="#E5E5E5">as as</font><font color="#CCCCCC"> an make the</font><font color="#E5E5E5"> Visual Studio is</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> N</font>

662
00:42:28,940 --> 00:42:34,730
make project and actually run the<font color="#CCCCCC"> Sai</font>

663
00:42:32,030 --> 00:42:37,310
<font color="#CCCCCC">Quinn make to run the segment</font>

664
00:42:34,730 --> 00:42:39,280
build environment using<font color="#E5E5E5"> parity</font><font color="#CCCCCC"> asta</font>

665
00:42:37,310 --> 00:42:42,470
<font color="#CCCCCC">Christie rumor is the rapping compiler</font>

666
00:42:39,280 --> 00:42:46,250
<font color="#E5E5E5">provide creating the</font><font color="#CCCCCC"> finer windows</font>

667
00:42:42,470 --> 00:42:48,230
binary<font color="#E5E5E5"> and tell the window the visual</font>

668
00:42:46,250 --> 00:42:54,470
<font color="#E5E5E5">studio project</font><font color="#CCCCCC"> this is the output file</font>

669
00:42:48,230 --> 00:42:58,750
<font color="#E5E5E5">the executable and can debug normally in</font>

670
00:42:54,470 --> 00:42:58,750
Visual<font color="#E5E5E5"> Studio yeah</font>

671
00:43:04,570 --> 00:43:11,990
<font color="#E5E5E5">have tried but the windows subsystem for</font>

672
00:43:08,030 --> 00:43:16,100
<font color="#CCCCCC">linux has two major</font><font color="#E5E5E5"> problems here first</font>

673
00:43:11,990 --> 00:43:19,759
it is not able<font color="#E5E5E5"> or it was not</font><font color="#CCCCCC"> per</font>

674
00:43:16,100 --> 00:43:23,240
<font color="#CCCCCC">container</font><font color="#E5E5E5"> tried it at least to call</font>

675
00:43:19,760 --> 00:43:25,310
<font color="#E5E5E5">windows binaries so</font><font color="#CCCCCC"> you cannot run the</font>

676
00:43:23,240 --> 00:43:28,850
<font color="#E5E5E5">windows compiler from within the windows</font>

677
00:43:25,310 --> 00:43:31,310
subsystem<font color="#E5E5E5"> for linux this is the first</font>

678
00:43:28,850 --> 00:43:32,870
<font color="#CCCCCC">problem the second problem is you may</font>

679
00:43:31,310 --> 00:43:36,080
remember this is a wish<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a</font>

680
00:43:32,870 --> 00:43:39,049
Windows Server 2016<font color="#E5E5E5"> and as far</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> I'm</font>

681
00:43:36,080 --> 00:43:41,840
aware<font color="#CCCCCC"> of the windows subsystem</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> linux</font>

682
00:43:39,050 --> 00:43:44,200
only is provided for<font color="#E5E5E5"> Windows desktop</font>

683
00:43:41,840 --> 00:43:44,200
systems

684
00:43:45,410 --> 00:43:51,960
yep when you're<font color="#CCCCCC"> listing the compiler</font>

685
00:43:49,140 --> 00:43:57,060
version<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to use a newsie select</font>

686
00:43:51,960 --> 00:44:01,160
instead of this is the idea<font color="#E5E5E5"> oh maybe I</font>

687
00:43:57,060 --> 00:44:05,460
should remember<font color="#E5E5E5"> the repeat the question</font>

688
00:44:01,160 --> 00:44:09,109
<font color="#E5E5E5">whether the question was if we can use</font>

689
00:44:05,460 --> 00:44:13,040
<font color="#CCCCCC">E's elect instead of parity</font><font color="#E5E5E5"> setup</font>

690
00:44:09,110 --> 00:44:16,040
actually the<font color="#E5E5E5"> idea is to use a select</font>

691
00:44:13,040 --> 00:44:16,040
here

692
00:44:18,400 --> 00:44:21,400
more

693
00:44:25,070 --> 00:44:29,810
<font color="#E5E5E5">question really yeah</font>

694
00:44:37,970 --> 00:44:43,080
the final<font color="#CCCCCC"> application runs on native</font>

695
00:44:41,190 --> 00:44:46,860
speed because it<font color="#CCCCCC"> is compiled as a native</font>

696
00:44:43,080 --> 00:44:50,100
application<font color="#CCCCCC"> no repeating the question</font>

697
00:44:46,860 --> 00:44:52,680
<font color="#CCCCCC">fests</font><font color="#E5E5E5"> probably the question</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> for the</font>

698
00:44:50,100 --> 00:44:55,350
speed of the application when built with

699
00:44:52,680 --> 00:44:59,220
parity<font color="#E5E5E5"> and the answer is it's a native</font>

700
00:44:55,350 --> 00:45:01,430
application<font color="#E5E5E5"> so when there</font><font color="#CCCCCC"> is performance</font>

701
00:44:59,220 --> 00:45:06,270
tuning necessary within<font color="#CCCCCC"> the application</font>

702
00:45:01,430 --> 00:45:08,819
running on Windows<font color="#CCCCCC"> its performance</font>

703
00:45:06,270 --> 00:45:12,080
<font color="#E5E5E5">optimizing as you will do on Windows</font>

704
00:45:08,820 --> 00:45:12,080
with any application

705
00:45:21,980 --> 00:45:25,119
[Music]

706
00:45:28,020 --> 00:45:40,360
options and compound<font color="#E5E5E5"> the question was if</font>

707
00:45:37,480 --> 00:45:43,510
we are able<font color="#CCCCCC"> incenter</font><font color="#E5E5E5"> prefix to use all</font>

708
00:45:40,360 --> 00:45:46,000
those gentle specific options or<font color="#CCCCCC"> chain</font>

709
00:45:43,510 --> 00:45:49,330
<font color="#CCCCCC">to chain to Partridge specific</font>

710
00:45:46,000 --> 00:45:54,880
configuration in<font color="#CCCCCC"> /et see actually yes</font>

711
00:45:49,330 --> 00:45:59,620
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> it's it's a change the system</font><font color="#CCCCCC"> is</font>

712
00:45:54,880 --> 00:46:02,250
<font color="#CCCCCC">chained to portage</font><font color="#E5E5E5"> yeah it's it's a</font>

713
00:45:59,620 --> 00:46:02,250
change of<font color="#CCCCCC"> system</font>

714
00:46:06,880 --> 00:46:11,729
I'm quite<font color="#E5E5E5"> there's quite some few</font><font color="#CCCCCC"> minutes</font>

715
00:46:09,519 --> 00:46:11,729
left

716
00:46:12,449 --> 00:46:18,489
otherwise nope no more questions<font color="#CCCCCC"> I'll</font>

717
00:46:17,199 --> 00:46:21,329
<font color="#CCCCCC">erase yeah</font>

718
00:46:18,489 --> 00:46:21,329
<font color="#CCCCCC">oh ma ma</font>

719
00:46:26,240 --> 00:46:37,490
<font color="#CCCCCC">a</font><font color="#E5E5E5"> question is if if it's only this one</font>

720
00:46:32,420 --> 00:46:41,780
<font color="#CCCCCC">company using this system</font><font color="#E5E5E5"> or there</font><font color="#CCCCCC"> or if</font>

721
00:46:37,490 --> 00:46:45,700
there are<font color="#E5E5E5"> other companies actually there</font>

722
00:46:41,780 --> 00:46:49,700
are no other uses yet probably<font color="#E5E5E5"> because</font>

723
00:46:45,700 --> 00:46:55,250
this is<font color="#E5E5E5"> something I create within this</font>

724
00:46:49,700 --> 00:46:58,939
is a<font color="#CCCCCC"> shaver and at for example I'm</font><font color="#E5E5E5"> at I</font>

725
00:46:55,250 --> 00:47:00,770
am a chain<font color="#E5E5E5"> 2 developer as well so</font><font color="#CCCCCC"> I'm</font>

726
00:46:58,940 --> 00:47:03,140
<font color="#E5E5E5">able to develop change of prefix</font>

727
00:47:00,770 --> 00:47:09,350
<font color="#E5E5E5">including the parity wrapper within the</font>

728
00:47:03,140 --> 00:47:12,140
gentle community and<font color="#E5E5E5"> actually inside</font><font color="#CCCCCC"> the</font>

729
00:47:09,350 --> 00:47:12,860
company<font color="#E5E5E5"> I am the first user</font><font color="#CCCCCC"> for chain</font>

730
00:47:12,140 --> 00:47:15,740
<font color="#CCCCCC">two briefings</font>

731
00:47:12,860 --> 00:47:19,810
there are of course<font color="#E5E5E5"> uses but</font><font color="#CCCCCC"> I don't</font>

732
00:47:15,740 --> 00:47:26,089
know if they are company wise or just

733
00:47:19,810 --> 00:47:29,869
just normal users and but there are

734
00:47:26,090 --> 00:47:31,790
quite<font color="#E5E5E5"> a few chain to prefix users not as</font>

735
00:47:29,869 --> 00:47:34,970
far as<font color="#CCCCCC"> I</font><font color="#E5E5E5"> go in yet because</font><font color="#CCCCCC"> this is quite</font>

736
00:47:31,790 --> 00:47:39,680
<font color="#E5E5E5">new and especially not for the windows</font>

737
00:47:34,970 --> 00:47:42,109
yet because this is even<font color="#CCCCCC"> newer</font><font color="#E5E5E5"> but yeah</font>

738
00:47:39,680 --> 00:47:45,109
<font color="#E5E5E5">there are there</font><font color="#CCCCCC"> are a few people</font>

739
00:47:42,109 --> 00:47:48,430
<font color="#E5E5E5">interested in using chain to prefix from</font>

740
00:47:45,109 --> 00:47:48,430
<font color="#E5E5E5">segment already</font>

741
00:47:51,770 --> 00:47:58,830
yep<font color="#E5E5E5"> without dating a</font><font color="#CCCCCC"> sequin application</font>

742
00:47:56,100 --> 00:48:02,549
like<font color="#CCCCCC"> - that would be</font><font color="#E5E5E5"> in the different</font>

743
00:47:58,830 --> 00:48:05,060
<font color="#CCCCCC">folders or wattage</font><font color="#E5E5E5"> doesn't interfere</font>

744
00:48:02,550 --> 00:48:10,290
with the<font color="#CCCCCC"> text management of stigmatism</font>

745
00:48:05,060 --> 00:48:13,110
<font color="#E5E5E5">or in fact if I run both in one</font><font color="#CCCCCC"> prefix</font>

746
00:48:10,290 --> 00:48:14,790
<font color="#E5E5E5">if I run what</font><font color="#CCCCCC"> is in the same prefix were</font>

747
00:48:13,110 --> 00:48:15,600
sick when installing packages but I

748
00:48:14,790 --> 00:48:18,540
would effectively

749
00:48:15,600 --> 00:48:24,270
<font color="#CCCCCC">- package</font><font color="#E5E5E5"> managers messing around in the</font>

750
00:48:18,540 --> 00:48:29,250
<font color="#CCCCCC">same yeah so the question is if there is</font>

751
00:48:24,270 --> 00:48:32,100
<font color="#CCCCCC">a problem</font><font color="#E5E5E5"> when when</font><font color="#CCCCCC"> chain to prefix does</font>

752
00:48:29,250 --> 00:48:34,590
install binaries applications into the

753
00:48:32,100 --> 00:48:35,850
<font color="#E5E5E5">same file system directories as the</font>

754
00:48:34,590 --> 00:48:39,810
<font color="#E5E5E5">segment</font><font color="#CCCCCC"> package manager</font>

755
00:48:35,850 --> 00:48:43,529
well the question here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the idea of</font>

756
00:48:39,810 --> 00:48:47,190
<font color="#E5E5E5">chain to prefix is to not mess with any</font>

757
00:48:43,530 --> 00:48:50,670
system<font color="#E5E5E5"> directory but chain to prefix</font>

758
00:48:47,190 --> 00:48:53,970
does use its own otherwise<font color="#E5E5E5"> empty file</font>

759
00:48:50,670 --> 00:48:57,560
system directory not touched by<font color="#E5E5E5"> any</font>

760
00:48:53,970 --> 00:49:01,319
<font color="#E5E5E5">system package manager and does install</font>

761
00:48:57,560 --> 00:49:03,450
the chain to<font color="#E5E5E5"> distribution chain to</font>

762
00:49:01,320 --> 00:49:06,630
prefix distribution in<font color="#CCCCCC"> that this one</font>

763
00:49:03,450 --> 00:49:09,169
<font color="#E5E5E5">file system no one</font><font color="#CCCCCC"> else should</font><font color="#E5E5E5"> touch</font>

764
00:49:06,630 --> 00:49:09,170
this one

765
00:49:15,480 --> 00:49:18,200
<font color="#E5E5E5">okay</font>

766
00:49:19,690 --> 00:49:29,969
otherwise thank you thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font>

767
00:49:22,200 --> 00:49:29,968
[Applause]

