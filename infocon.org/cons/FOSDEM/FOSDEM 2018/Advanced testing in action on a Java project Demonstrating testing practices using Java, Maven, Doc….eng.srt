1
00:00:04,740 --> 00:00:11,469
he's the author of<font color="#CCCCCC"> jiggler</font><font color="#E5E5E5"> in action the</font>

2
00:00:07,840 --> 00:00:13,570
CTO of<font color="#E5E5E5"> xwiki says and here to talk to us</font>

3
00:00:11,469 --> 00:00:16,558
about<font color="#E5E5E5"> advanced</font><font color="#CCCCCC"> java testing Vinson</font><font color="#E5E5E5"> thank</font>

4
00:00:13,570 --> 00:00:16,559
you<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much</font>

5
00:00:17,880 --> 00:00:23,918
always nice<font color="#CCCCCC"> to</font><font color="#E5E5E5"> see a full room thank you</font>

6
00:00:20,590 --> 00:00:26,860
for that<font color="#E5E5E5"> so today we're going to</font><font color="#CCCCCC"> advance</font>

7
00:00:23,919 --> 00:00:29,320
<font color="#CCCCCC">to</font><font color="#E5E5E5"> a testing and more importantly</font><font color="#CCCCCC"> what</font>

8
00:00:26,860 --> 00:00:30,910
what's next<font color="#E5E5E5"> so I'm not going to focus on</font>

9
00:00:29,320 --> 00:00:33,070
<font color="#E5E5E5">things</font><font color="#CCCCCC"> that we've all been doing</font><font color="#E5E5E5"> for</font>

10
00:00:30,910 --> 00:00:35,950
<font color="#E5E5E5">years but really trying to focus on</font>

11
00:00:33,070 --> 00:00:39,070
what's next<font color="#CCCCCC"> in the domain of Java unit</font>

12
00:00:35,950 --> 00:00:41,020
testing on Java testing in general<font color="#CCCCCC"> so I</font>

13
00:00:39,070 --> 00:00:43,210
<font color="#CCCCCC">propose the following agenda I'll</font>

14
00:00:41,020 --> 00:00:45,940
<font color="#E5E5E5">explain a bit the context of the talk</font>

15
00:00:43,210 --> 00:00:48,670
and then<font color="#E5E5E5"> we will talk about four domains</font>

16
00:00:45,940 --> 00:00:50,050
<font color="#E5E5E5">of testing that I consider a bit</font>

17
00:00:48,670 --> 00:00:51,339
advanced and we'll ask<font color="#E5E5E5"> the question to</font>

18
00:00:50,050 --> 00:00:53,230
you whether you've you've<font color="#E5E5E5"> done that</font>

19
00:00:51,339 --> 00:00:56,260
already or<font color="#E5E5E5"> are you planning to do</font><font color="#CCCCCC"> that</font>

20
00:00:53,230 --> 00:00:59,620
<font color="#CCCCCC">so one of those</font><font color="#E5E5E5"> is coverage testing and</font>

21
00:00:56,260 --> 00:01:00,998
and strategy<font color="#E5E5E5"> associated</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> this</font>

22
00:00:59,620 --> 00:01:03,640
<font color="#E5E5E5">is something</font><font color="#CCCCCC"> very important for me is</font>

23
00:01:00,999 --> 00:01:05,500
not<font color="#E5E5E5"> just</font><font color="#CCCCCC"> tools</font><font color="#E5E5E5"> and and that are</font><font color="#CCCCCC"> being</font>

24
00:01:03,640 --> 00:01:07,030
used but more importantly strategies

25
00:01:05,500 --> 00:01:10,990
around<font color="#E5E5E5"> those tools how do you use those</font>

26
00:01:07,030 --> 00:01:13,150
<font color="#E5E5E5">tools effectively so for each of</font><font color="#CCCCCC"> those</font>

27
00:01:10,990 --> 00:01:15,250
<font color="#E5E5E5">we will see strategies so the second one</font>

28
00:01:13,150 --> 00:01:16,900
that<font color="#E5E5E5"> I want to talk about is is testing</font>

29
00:01:15,250 --> 00:01:20,140
for<font color="#E5E5E5"> backward</font><font color="#CCCCCC"> compatibility when you've</font>

30
00:01:16,900 --> 00:01:22,840
got API so I detest for that and and

31
00:01:20,140 --> 00:01:24,790
then an advanced one on mutation testing

32
00:01:22,840 --> 00:01:28,240
<font color="#E5E5E5">maybe some of you have heard about that</font>

33
00:01:24,790 --> 00:01:30,280
<font color="#E5E5E5">we will</font><font color="#CCCCCC"> see that</font><font color="#E5E5E5"> how can</font><font color="#CCCCCC"> we use that</font><font color="#E5E5E5"> in</font>

34
00:01:28,240 --> 00:01:32,439
<font color="#E5E5E5">our in our in our tests and what to do</font>

35
00:01:30,280 --> 00:01:34,000
with it<font color="#CCCCCC"> and the last one</font><font color="#E5E5E5"> that I</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

36
00:01:32,439 --> 00:01:36,059
talk about is environment testing<font color="#CCCCCC"> it's</font>

37
00:01:34,000 --> 00:01:38,740
how do you test for<font color="#CCCCCC"> various environments</font>

38
00:01:36,060 --> 00:01:41,530
<font color="#E5E5E5">so let's start the context is I've</font>

39
00:01:38,740 --> 00:01:43,240
learned and I'm using<font color="#E5E5E5"> those strategies</font>

40
00:01:41,530 --> 00:01:44,829
and<font color="#E5E5E5"> tools on the project for next week</font>

41
00:01:43,240 --> 00:01:46,329
it's an open<font color="#E5E5E5"> source project it's 14</font>

42
00:01:44,829 --> 00:01:48,729
<font color="#CCCCCC">years old</font>

43
00:01:46,329 --> 00:01:50,439
this is to give you<font color="#CCCCCC"> some ideas 10-15</font>

44
00:01:48,729 --> 00:01:53,020
active committers it's very extensible

45
00:01:50,439 --> 00:01:55,479
<font color="#E5E5E5">and that's the important because we have</font>

46
00:01:53,020 --> 00:01:56,710
a lot of<font color="#E5E5E5"> api's so one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> items in</font>

47
00:01:55,479 --> 00:01:58,539
the list<font color="#E5E5E5"> was to test for backward</font>

48
00:01:56,710 --> 00:02:01,000
<font color="#CCCCCC">compatibility we want to make sure</font><font color="#E5E5E5"> that</font>

49
00:01:58,539 --> 00:02:03,700
when there<font color="#E5E5E5"> are extensions against</font><font color="#CCCCCC"> xwiki</font>

50
00:02:01,000 --> 00:02:05,549
<font color="#E5E5E5">that they keep working</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> so</font>

51
00:02:03,700 --> 00:02:10,000
we've had to<font color="#E5E5E5"> develop</font><font color="#CCCCCC"> strategies for that</font>

52
00:02:05,549 --> 00:02:11,980
<font color="#E5E5E5">so we use we use maven for our build we</font>

53
00:02:10,000 --> 00:02:14,560
have a lot of plugins<font color="#E5E5E5"> that we use that</font>

54
00:02:11,980 --> 00:02:16,510
<font color="#CCCCCC">we'll see</font><font color="#E5E5E5"> we use Jenkins for our CI and</font>

55
00:02:14,560 --> 00:02:20,440
we're using a pipeline pipeline

56
00:02:16,510 --> 00:02:23,739
libraries in in Jenkins in terms of

57
00:02:20,440 --> 00:02:26,230
context another element<font color="#E5E5E5"> is stamps and</font>

58
00:02:23,739 --> 00:02:29,090
participating<font color="#CCCCCC"> so I work</font><font color="#E5E5E5"> for company</font>

59
00:02:26,230 --> 00:02:30,590
collects<font color="#CCCCCC"> PSS</font><font color="#E5E5E5"> in addition to being a</font>

60
00:02:29,090 --> 00:02:31,910
<font color="#E5E5E5">Prince was developer on the equity</font>

61
00:02:30,590 --> 00:02:33,860
project<font color="#E5E5E5"> and that company is</font>

62
00:02:31,910 --> 00:02:36,680
participating to<font color="#CCCCCC"> our</font><font color="#E5E5E5"> European research</font>

63
00:02:33,860 --> 00:02:40,220
project called stamp and the purpose of

64
00:02:36,680 --> 00:02:43,520
stamp is to is to extend<font color="#E5E5E5"> the</font><font color="#CCCCCC"> domain of</font>

65
00:02:40,220 --> 00:02:45,709
testing about amplifying<font color="#CCCCCC"> test</font><font color="#E5E5E5"> existing</font>

66
00:02:43,520 --> 00:02:47,180
tests and we'll see<font color="#CCCCCC"> that the mutation</font>

67
00:02:45,709 --> 00:02:48,650
testing that<font color="#E5E5E5"> I'm going to mention is</font>

68
00:02:47,180 --> 00:02:51,050
actually<font color="#E5E5E5"> becoming exactly from this</font>

69
00:02:48,650 --> 00:02:53,720
research project<font color="#E5E5E5"> and the same for the</font>

70
00:02:51,050 --> 00:02:57,140
environment testing<font color="#CCCCCC"> so that's the</font>

71
00:02:53,720 --> 00:02:59,290
context now let's let's let's dive in so

72
00:02:57,140 --> 00:03:01,940
today on the<font color="#CCCCCC"> xwiki</font><font color="#E5E5E5"> project this</font><font color="#CCCCCC"> is our</font>

73
00:02:59,290 --> 00:03:04,280
testing status so we<font color="#CCCCCC"> have two two</font>

74
00:03:01,940 --> 00:03:08,420
figures here<font color="#E5E5E5"> one is code coverage we</font>

75
00:03:04,280 --> 00:03:11,180
<font color="#CCCCCC">have about 71% testing coverage over</font><font color="#E5E5E5"> all</font>

76
00:03:08,420 --> 00:03:12,890
of<font color="#E5E5E5"> the whole code base and we</font><font color="#CCCCCC"> have about</font>

77
00:03:11,180 --> 00:03:16,370
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> thousand and four hundred</font><font color="#CCCCCC"> something</font>

78
00:03:12,890 --> 00:03:18,048
automated<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> so they</font><font color="#CCCCCC"> were detect take</font>

79
00:03:16,370 --> 00:03:19,790
quite a<font color="#E5E5E5"> while</font><font color="#CCCCCC"> to execute especially</font>

80
00:03:18,049 --> 00:03:22,340
since we've got<font color="#E5E5E5"> different</font><font color="#CCCCCC"> types of</font><font color="#E5E5E5"> tests</font>

81
00:03:19,790 --> 00:03:25,099
<font color="#E5E5E5">so we've got unit tests with mockito</font>

82
00:03:22,340 --> 00:03:26,750
we've got integration<font color="#E5E5E5"> tests</font><font color="#CCCCCC"> I said sorry</font>

83
00:03:25,099 --> 00:03:29,959
I said Maki to<font color="#CCCCCC"> Abbott yeah some of them</font>

84
00:03:26,750 --> 00:03:30,890
are using<font color="#CCCCCC"> mojito</font><font color="#E5E5E5"> functional UI tests and</font>

85
00:03:29,959 --> 00:03:33,380
these<font color="#E5E5E5"> are the</font><font color="#CCCCCC"> one that take</font><font color="#E5E5E5"> the longest</font>

86
00:03:30,890 --> 00:03:36,140
<font color="#CCCCCC">of course and we use</font><font color="#E5E5E5"> selenium webdriver</font>

87
00:03:33,380 --> 00:03:38,480
<font color="#CCCCCC">so this is very</font><font color="#E5E5E5"> basic</font><font color="#CCCCCC"> this is I think</font>

88
00:03:36,140 --> 00:03:40,670
everyone probably<font color="#E5E5E5"> is doing that</font><font color="#CCCCCC"> on their</font>

89
00:03:38,480 --> 00:03:41,959
<font color="#CCCCCC">java project this</font><font color="#E5E5E5"> is well known</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font>

90
00:03:40,670 --> 00:03:43,850
<font color="#E5E5E5">are doing that that's</font><font color="#CCCCCC"> not what I want</font><font color="#E5E5E5"> to</font>

91
00:03:41,959 --> 00:03:44,540
<font color="#E5E5E5">take to talk about but this</font><font color="#CCCCCC"> is where</font>

92
00:03:43,850 --> 00:03:47,950
we're starting from

93
00:03:44,540 --> 00:03:51,078
<font color="#E5E5E5">so now we want it to go beyond that and</font>

94
00:03:47,950 --> 00:03:54,738
we wanted<font color="#CCCCCC"> to ask ourselves new questions</font>

95
00:03:51,079 --> 00:03:57,230
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> 10,000 tests</font><font color="#E5E5E5"> but I</font>

96
00:03:54,739 --> 00:03:58,790
mean what<font color="#CCCCCC"> are those really exercising</font><font color="#E5E5E5"> in</font>

97
00:03:57,230 --> 00:04:01,638
terms of the whole code base how good

98
00:03:58,790 --> 00:04:02,929
are the exercising the code base<font color="#CCCCCC"> so</font>

99
00:04:01,639 --> 00:04:04,700
that's the coverage testing<font color="#E5E5E5"> that we'll</font>

100
00:04:02,930 --> 00:04:07,069
talk<font color="#CCCCCC"> about another question that</font><font color="#E5E5E5"> I</font>

101
00:04:04,700 --> 00:04:10,459
mentioned quickly is<font color="#E5E5E5"> how can I prevent</font>

102
00:04:07,069 --> 00:04:10,940
breaking the users of my<font color="#E5E5E5"> api's</font><font color="#CCCCCC"> so that's</font>

103
00:04:10,459 --> 00:04:12,049
the back

104
00:04:10,940 --> 00:04:14,840
that's the backward compatibility

105
00:04:12,049 --> 00:04:16,789
testing and very importantly since<font color="#E5E5E5"> we</font>

106
00:04:14,840 --> 00:04:18,228
have a<font color="#E5E5E5"> sizable number</font><font color="#CCCCCC"> of tests we want</font>

107
00:04:16,789 --> 00:04:20,478
to know are they really good I mean<font color="#CCCCCC"> are</font>

108
00:04:18,228 --> 00:04:22,190
they<font color="#CCCCCC"> really testing something because</font>

109
00:04:20,478 --> 00:04:23,990
you can<font color="#E5E5E5"> have a test with no assert the</font>

110
00:04:22,190 --> 00:04:25,969
<font color="#CCCCCC">test would execute</font><font color="#E5E5E5"> you would get test</font>

111
00:04:23,990 --> 00:04:27,800
coverage but they would<font color="#CCCCCC"> that the</font>

112
00:04:25,970 --> 00:04:29,450
exercise anything for<font color="#E5E5E5"> example so how</font>

113
00:04:27,800 --> 00:04:32,389
good are they

114
00:04:29,450 --> 00:04:34,430
in<font color="#E5E5E5"> term of exercising real stuff so this</font>

115
00:04:32,389 --> 00:04:37,430
is<font color="#E5E5E5"> the where the mutation testing is</font>

116
00:04:34,430 --> 00:04:39,500
interesting<font color="#E5E5E5"> and more generally or xwiki</font>

117
00:04:37,430 --> 00:04:42,169
is is a server software it can<font color="#E5E5E5"> be</font>

118
00:04:39,500 --> 00:04:42,889
<font color="#CCCCCC">installed</font><font color="#E5E5E5"> on a lot of environments</font><font color="#CCCCCC"> so</font>

119
00:04:42,169 --> 00:04:46,849
<font color="#CCCCCC">we'll see how</font>

120
00:04:42,889 --> 00:04:49,849
we<font color="#E5E5E5"> ensure that it works fine</font><font color="#CCCCCC"> in various</font>

121
00:04:46,849 --> 00:04:51,319
environments<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I've put little little</font>

122
00:04:49,849 --> 00:04:52,699
text though the green ones for example

123
00:04:51,319 --> 00:04:55,129
that stuff that we've been<font color="#CCCCCC"> doing for</font>

124
00:04:52,699 --> 00:04:58,069
<font color="#CCCCCC">years on the project probably</font><font color="#E5E5E5"> over eight</font>

125
00:04:55,129 --> 00:05:00,620
<font color="#CCCCCC">years</font><font color="#E5E5E5"> now but the one with the</font>

126
00:04:58,069 --> 00:05:02,389
<font color="#CCCCCC">exclamation mark the yellow ones are new</font>

127
00:05:00,620 --> 00:05:05,719
stuff<font color="#CCCCCC"> that we're experimenting at the</font>

128
00:05:02,389 --> 00:05:08,659
moment so we<font color="#CCCCCC"> have a bit less of of years</font>

129
00:05:05,719 --> 00:05:10,520
of return<font color="#CCCCCC"> of experience on those but</font>

130
00:05:08,659 --> 00:05:13,039
we've started<font color="#CCCCCC"> using them and having some</font>

131
00:05:10,520 --> 00:05:14,688
strategies<font color="#CCCCCC"> around them so let's let's</font>

132
00:05:13,039 --> 00:05:17,628
start<font color="#E5E5E5"> with the first one</font><font color="#CCCCCC"> the test</font>

133
00:05:14,689 --> 00:05:20,479
<font color="#E5E5E5">coverage so we're using a jacoco and</font>

134
00:05:17,629 --> 00:05:22,849
<font color="#E5E5E5">clover</font><font color="#CCCCCC"> we're using both so this is not</font>

135
00:05:20,479 --> 00:05:24,979
new<font color="#CCCCCC"> I want to see how many of you</font><font color="#E5E5E5"> are</font>

136
00:05:22,849 --> 00:05:28,310
using<font color="#E5E5E5"> using a measuring test coverage</font>

137
00:05:24,979 --> 00:05:31,550
for your<font color="#E5E5E5"> projects yeah so we have let's</font>

138
00:05:28,310 --> 00:05:33,020
say<font color="#CCCCCC"> 30%</font><font color="#E5E5E5"> less maybe so that's not new</font>

139
00:05:31,550 --> 00:05:35,719
that's<font color="#CCCCCC"> welcoming that's quite well-known</font>

140
00:05:33,020 --> 00:05:36,979
<font color="#CCCCCC">what we're doing though is what's is a</font>

141
00:05:35,719 --> 00:05:39,469
<font color="#E5E5E5">bit different</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> strategy we're</font>

142
00:05:36,979 --> 00:05:41,330
using we call it the ratchet effect<font color="#CCCCCC"> well</font>

143
00:05:39,469 --> 00:05:44,210
it is a<font color="#E5E5E5"> ratchet</font><font color="#CCCCCC"> effect in the sense that</font>

144
00:05:41,330 --> 00:05:45,650
we have a lot of<font color="#E5E5E5"> maven modules so our</font>

145
00:05:44,210 --> 00:05:49,460
<font color="#E5E5E5">software is divided in lots of modules</font>

146
00:05:45,650 --> 00:05:51,948
<font color="#CCCCCC">and for each module</font><font color="#E5E5E5"> we have in the pom</font>

147
00:05:49,460 --> 00:05:54,529
that XML of the maven build<font color="#E5E5E5"> we have a</font>

148
00:05:51,949 --> 00:05:57,050
threshold<font color="#E5E5E5"> that that corresponds to the</font>

149
00:05:54,529 --> 00:06:00,229
current through the<font color="#E5E5E5"> current measure of</font>

150
00:05:57,050 --> 00:06:02,599
the code<font color="#CCCCCC"> coverage for that module ok and</font>

151
00:06:00,229 --> 00:06:05,810
when someone's<font color="#E5E5E5"> a new developers</font>

152
00:06:02,599 --> 00:06:08,930
contribute code to that<font color="#E5E5E5"> module</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> fail</font>

153
00:06:05,810 --> 00:06:11,479
the build<font color="#E5E5E5"> if it's below that the current</font>

154
00:06:08,930 --> 00:06:15,259
level that exists so<font color="#E5E5E5"> in a sense we want</font>

155
00:06:11,479 --> 00:06:17,750
to ensure that new code is at least as

156
00:06:15,259 --> 00:06:21,020
<font color="#CCCCCC">well tested as what exists at the</font>

157
00:06:17,750 --> 00:06:23,149
current time<font color="#CCCCCC"> we're not driving</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> 100%</font>

158
00:06:21,020 --> 00:06:25,849
<font color="#E5E5E5">or</font><font color="#CCCCCC"> 80%</font><font color="#E5E5E5"> we don't care about that what we</font>

159
00:06:23,149 --> 00:06:27,620
want is that it is marginally<font color="#CCCCCC"> the same</font>

160
00:06:25,849 --> 00:06:29,599
or better than what exists at the<font color="#CCCCCC"> moment</font>

161
00:06:27,620 --> 00:06:31,759
we<font color="#E5E5E5"> want to go in the direction in an</font>

162
00:06:29,599 --> 00:06:34,580
upward direction<font color="#CCCCCC"> but we don't care to go</font>

163
00:06:31,759 --> 00:06:36,379
too fast<font color="#E5E5E5"> there</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so if you are if</font>

164
00:06:34,580 --> 00:06:37,699
<font color="#E5E5E5">your developer you</font><font color="#CCCCCC"> commit</font><font color="#E5E5E5"> there it fails</font>

165
00:06:36,379 --> 00:06:40,149
then<font color="#E5E5E5"> you need to increase a little</font><font color="#CCCCCC"> bit</font>

166
00:06:37,699 --> 00:06:42,919
<font color="#E5E5E5">your</font><font color="#CCCCCC"> tests so that</font><font color="#E5E5E5"> they test a bit more</font>

167
00:06:40,149 --> 00:06:44,719
and if actually<font color="#CCCCCC"> you would you go beyond</font>

168
00:06:42,919 --> 00:06:47,270
the current<font color="#E5E5E5"> threshold</font><font color="#CCCCCC"> you're allowed</font><font color="#E5E5E5"> to</font>

169
00:06:44,719 --> 00:06:48,860
<font color="#E5E5E5">change the value in the</font><font color="#CCCCCC"> poem so</font><font color="#E5E5E5"> that</font>

170
00:06:47,270 --> 00:06:51,318
becomes the<font color="#E5E5E5"> new</font><font color="#CCCCCC"> reference for all the</font>

171
00:06:48,860 --> 00:06:53,229
other one that will come<font color="#E5E5E5"> after you</font><font color="#CCCCCC"> so if</font>

172
00:06:51,319 --> 00:06:55,819
we've been<font color="#E5E5E5"> doing this for</font><font color="#CCCCCC"> years and</font>

173
00:06:53,229 --> 00:06:56,449
<font color="#E5E5E5">recently not long ago I've actually</font>

174
00:06:55,819 --> 00:06:58,129
measured

175
00:06:56,449 --> 00:07:00,889
<font color="#E5E5E5">was trying</font><font color="#CCCCCC"> to measure does this have any</font>

176
00:06:58,129 --> 00:07:03,379
effect<font color="#CCCCCC"> on the long run on the whole</font>

177
00:07:00,889 --> 00:07:04,009
<font color="#CCCCCC">codebase</font><font color="#E5E5E5"> so this is the graph you</font><font color="#CCCCCC"> see on</font>

178
00:07:03,379 --> 00:07:06,169
the right

179
00:07:04,009 --> 00:07:08,749
so<font color="#E5E5E5"> I've measured on one year so I've</font>

180
00:07:06,169 --> 00:07:09,889
cooked the the<font color="#E5E5E5"> full coverage on December</font>

181
00:07:08,749 --> 00:07:12,949
of 2016

182
00:07:09,889 --> 00:07:15,620
I took it<font color="#CCCCCC"> again in November 2017</font>

183
00:07:12,949 --> 00:07:17,419
I did some<font color="#CCCCCC"> urbanization I will I can</font>

184
00:07:15,620 --> 00:07:19,759
explain why it's because I'm<font color="#E5E5E5"> using</font>

185
00:07:17,419 --> 00:07:21,258
clever to do that and they don't they

186
00:07:19,759 --> 00:07:24,740
don't<font color="#E5E5E5"> generate exactly the same thing</font>

187
00:07:21,259 --> 00:07:26,509
<font color="#E5E5E5">for some of the code</font><font color="#CCCCCC"> some of the classes</font>

188
00:07:24,740 --> 00:07:27,770
were considered as test classes<font color="#E5E5E5"> some</font>

189
00:07:26,509 --> 00:07:29,539
others<font color="#CCCCCC"> were consider as prediction</font>

190
00:07:27,770 --> 00:07:31,669
<font color="#E5E5E5">classes and somehow I don't know why</font>

191
00:07:29,539 --> 00:07:33,889
exactly<font color="#E5E5E5"> they mixed up clever mix it up a</font>

192
00:07:31,669 --> 00:07:36,799
bit<font color="#CCCCCC"> so I had to separate it a bit and</font>

193
00:07:33,889 --> 00:07:39,129
<font color="#E5E5E5">recompute it but after doing this I</font>

194
00:07:36,800 --> 00:07:41,779
noticed that we<font color="#CCCCCC"> are the</font><font color="#E5E5E5"> 1.9 percent</font>

195
00:07:39,129 --> 00:07:43,909
coverage increase so this is exactly

196
00:07:41,779 --> 00:07:46,069
what we want we want<font color="#E5E5E5"> slow steady</font>

197
00:07:43,909 --> 00:07:48,050
increase always in the upward direction

198
00:07:46,069 --> 00:07:51,740
<font color="#E5E5E5">okay and this is</font><font color="#CCCCCC"> working very well for</font>

199
00:07:48,050 --> 00:07:55,719
us and we so<font color="#CCCCCC"> we measured this</font><font color="#E5E5E5"> clever</font>

200
00:07:51,740 --> 00:07:58,129
thing we measure it with with the

201
00:07:55,719 --> 00:08:01,039
Jenkins pipeline and<font color="#E5E5E5"> that we run</font>

202
00:07:58,129 --> 00:08:03,770
automatically every every<font color="#CCCCCC"> month so it</font>

203
00:08:01,039 --> 00:08:05,960
<font color="#E5E5E5">runs on all the whole codebase so all</font>

204
00:08:03,770 --> 00:08:08,659
the tests that<font color="#CCCCCC"> exercising code from</font>

205
00:08:05,960 --> 00:08:10,219
everywhere<font color="#CCCCCC"> okay because the jackal</font><font color="#E5E5E5"> cool</font>

206
00:08:08,659 --> 00:08:12,409
thing with a<font color="#CCCCCC"> ratchet effect</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> only on a</font>

207
00:08:10,219 --> 00:08:14,270
single<font color="#CCCCCC"> module</font><font color="#E5E5E5"> but this one is a global</font>

208
00:08:12,409 --> 00:08:15,649
<font color="#CCCCCC">computations for</font><font color="#E5E5E5"> the whole code days</font><font color="#CCCCCC"> it</font>

209
00:08:14,270 --> 00:08:17,089
so it's a bit more<font color="#E5E5E5"> complex that's why</font>

210
00:08:15,649 --> 00:08:20,360
we're<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> it in a in the Jenkins</font>

211
00:08:17,089 --> 00:08:25,189
pipeline so that's the first first

212
00:08:20,360 --> 00:08:28,029
domain<font color="#E5E5E5"> I wanted to do to mention second</font>

213
00:08:25,189 --> 00:08:30,229
one is backward compatibility<font color="#E5E5E5"> so this is</font>

214
00:08:28,029 --> 00:08:33,740
mostly interesting is if you're

215
00:08:30,229 --> 00:08:35,510
developing<font color="#E5E5E5"> api's or or SP</font><font color="#CCCCCC"> eyes you're</font>

216
00:08:33,740 --> 00:08:38,630
<font color="#E5E5E5">just developing a product with no API</font>

217
00:08:35,510 --> 00:08:42,019
then it of course<font color="#CCCCCC"> is less interesting so</font>

218
00:08:38,630 --> 00:08:45,290
the way we handle<font color="#E5E5E5"> that is technically is</font>

219
00:08:42,019 --> 00:08:48,560
using a maven<font color="#E5E5E5"> plug-in called</font><font color="#CCCCCC"> Rev API we</font>

220
00:08:45,290 --> 00:08:50,240
used to<font color="#E5E5E5"> use one called clear</font><font color="#CCCCCC"> but it was</font>

221
00:08:48,560 --> 00:08:51,589
not maintained and this<font color="#E5E5E5"> one is a new one</font>

222
00:08:50,240 --> 00:08:54,910
<font color="#E5E5E5">that's been maintained we've actually</font>

223
00:08:51,589 --> 00:08:57,500
worked<font color="#E5E5E5"> quite</font><font color="#CCCCCC"> substantially with the guy</font>

224
00:08:54,910 --> 00:09:00,110
<font color="#E5E5E5">developing this this</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> it</font>

225
00:08:57,500 --> 00:09:02,089
better<font color="#E5E5E5"> and</font><font color="#CCCCCC"> better</font><font color="#E5E5E5"> it supports our source</font>

226
00:09:00,110 --> 00:09:04,760
<font color="#E5E5E5">and binary compatibility so that's</font>

227
00:09:02,089 --> 00:09:06,709
excellent<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us since</font><font color="#E5E5E5"> we really want to</font>

228
00:09:04,760 --> 00:09:08,660
maintain back<font color="#E5E5E5"> a binary compatibility so</font>

229
00:09:06,709 --> 00:09:10,349
<font color="#CCCCCC">when if someone develops an extension</font>

230
00:09:08,660 --> 00:09:12,930
<font color="#E5E5E5">forex wiki is</font><font color="#CCCCCC"> devar Peters</font>

231
00:09:10,350 --> 00:09:14,460
years ago<font color="#CCCCCC"> we want that when he</font><font color="#E5E5E5"> uses this</font>

232
00:09:12,930 --> 00:09:16,170
<font color="#E5E5E5">extension on</font><font color="#CCCCCC"> the new version of xwiki</font>

233
00:09:14,460 --> 00:09:20,190
<font color="#E5E5E5">there is no need</font><font color="#CCCCCC"> to recompile</font><font color="#E5E5E5"> its code</font>

234
00:09:16,170 --> 00:09:22,250
it will<font color="#E5E5E5"> just work as is so so do</font><font color="#CCCCCC"> it so</font>

235
00:09:20,190 --> 00:09:25,770
the way we do that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> ensure</font><font color="#E5E5E5"> this is</font>

236
00:09:22,250 --> 00:09:28,620
that we really<font color="#E5E5E5"> break the build</font>

237
00:09:25,770 --> 00:09:32,490
whenever developer<font color="#CCCCCC"> introduced a</font><font color="#E5E5E5"> change</font>

238
00:09:28,620 --> 00:09:33,960
<font color="#CCCCCC">that changes an API</font><font color="#E5E5E5"> or something that</font>

239
00:09:32,490 --> 00:09:37,170
makes the code not<font color="#CCCCCC"> backward-compatible</font>

240
00:09:33,960 --> 00:09:40,470
<font color="#E5E5E5">from a binary level we break it we want</font>

241
00:09:37,170 --> 00:09:42,240
to<font color="#CCCCCC"> raise attention for</font><font color="#E5E5E5"> the developer</font>

242
00:09:40,470 --> 00:09:45,150
that<font color="#E5E5E5"> something is breaking something</font>

243
00:09:42,240 --> 00:09:47,280
<font color="#E5E5E5">then this developer can decide and</font>

244
00:09:45,150 --> 00:09:50,610
discuss with the community as to<font color="#E5E5E5"> whether</font>

245
00:09:47,280 --> 00:09:52,319
<font color="#E5E5E5">we really want to break this API is</font>

246
00:09:50,610 --> 00:09:53,760
there a very<font color="#E5E5E5"> good reason</font><font color="#CCCCCC"> for doing it</font>

247
00:09:52,320 --> 00:09:55,680
<font color="#E5E5E5">but we want that to</font><font color="#CCCCCC"> be an exception not</font>

248
00:09:53,760 --> 00:09:56,910
the norm<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we want to</font><font color="#E5E5E5"> be very</font>

249
00:09:55,680 --> 00:09:59,400
<font color="#E5E5E5">conservative about backward</font>

250
00:09:56,910 --> 00:10:00,750
compatibility<font color="#E5E5E5"> if it's the case that we</font>

251
00:09:59,400 --> 00:10:03,270
really want<font color="#E5E5E5"> to do it then we add an</font>

252
00:10:00,750 --> 00:10:06,450
ignore in our pump so that<font color="#E5E5E5"> clear so</font>

253
00:10:03,270 --> 00:10:08,699
sorry<font color="#CCCCCC"> not rev API</font><font color="#E5E5E5"> will pass and at the</font>

254
00:10:06,450 --> 00:10:10,760
end when<font color="#CCCCCC"> we do the release of the</font>

255
00:10:08,700 --> 00:10:13,740
version<font color="#E5E5E5"> of the of the software that</font>

256
00:10:10,760 --> 00:10:15,210
<font color="#CCCCCC">gives</font><font color="#E5E5E5"> us actually a very good thing</font><font color="#CCCCCC"> to</font>

257
00:10:13,740 --> 00:10:17,670
put in<font color="#CCCCCC"> our release note because we can</font>

258
00:10:15,210 --> 00:10:19,560
list the full list of<font color="#E5E5E5"> API is that we</font>

259
00:10:17,670 --> 00:10:22,770
have broken voluntarily

260
00:10:19,560 --> 00:10:26,189
okay so first<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that means all of those</font>

261
00:10:22,770 --> 00:10:31,350
will be<font color="#CCCCCC"> lit a list of IPI that we wanted</font>

262
00:10:26,190 --> 00:10:33,240
<font color="#E5E5E5">to</font><font color="#CCCCCC"> break not by error</font><font color="#E5E5E5"> okay but we wanted</font>

263
00:10:31,350 --> 00:10:35,280
<font color="#CCCCCC">to go so this</font><font color="#E5E5E5"> is what I've put on the</font>

264
00:10:33,240 --> 00:10:38,070
right is an<font color="#CCCCCC"> example not</font><font color="#E5E5E5"> only to read it</font>

265
00:10:35,280 --> 00:10:39,660
it's<font color="#E5E5E5"> just we</font><font color="#CCCCCC"> just we actually generate</font>

266
00:10:38,070 --> 00:10:41,880
it<font color="#E5E5E5"> automatically from</font><font color="#CCCCCC"> the palm</font><font color="#E5E5E5"> but</font>

267
00:10:39,660 --> 00:10:43,439
<font color="#CCCCCC">that's it that's</font><font color="#E5E5E5"> a detail now we wanted</font>

268
00:10:41,880 --> 00:10:46,920
<font color="#E5E5E5">to go further than</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> on the equity</font>

269
00:10:43,440 --> 00:10:49,350
project<font color="#E5E5E5"> we wanted to never break</font>

270
00:10:46,920 --> 00:10:50,370
backward compatibility<font color="#E5E5E5"> ever</font><font color="#CCCCCC"> that's</font>

271
00:10:49,350 --> 00:10:53,190
<font color="#CCCCCC">always</font><font color="#E5E5E5"> more ambitious</font>

272
00:10:50,370 --> 00:10:56,610
so what we did is we use the following

273
00:10:53,190 --> 00:10:57,090
<font color="#E5E5E5">strategy whenever something is not good</font>

274
00:10:56,610 --> 00:10:58,440
<font color="#CCCCCC">anymore</font>

275
00:10:57,090 --> 00:11:00,210
and we're replacing it with something

276
00:10:58,440 --> 00:11:02,250
<font color="#E5E5E5">else so we start with a very standard</font>

277
00:11:00,210 --> 00:11:05,700
strategy<font color="#CCCCCC"> of deprecation</font><font color="#E5E5E5"> with the</font>

278
00:11:02,250 --> 00:11:08,000
<font color="#CCCCCC">deprecated</font><font color="#E5E5E5"> a notation that's we will do</font>

279
00:11:05,700 --> 00:11:11,040
<font color="#E5E5E5">that as that's that's very easy now</font>

280
00:11:08,000 --> 00:11:13,140
after this<font color="#E5E5E5"> we modify all our code that</font>

281
00:11:11,040 --> 00:11:15,750
<font color="#E5E5E5">uses this deprecated API so</font><font color="#CCCCCC"> that we have</font>

282
00:11:13,140 --> 00:11:19,020
no more code using it when this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> done</font>

283
00:11:15,750 --> 00:11:21,330
we<font color="#E5E5E5"> move the deprecated code to code to</font>

284
00:11:19,020 --> 00:11:23,620
another<font color="#E5E5E5"> module neither maven module</font>

285
00:11:21,330 --> 00:11:26,320
<font color="#CCCCCC">separate</font><font color="#E5E5E5"> so that's easy to do</font>

286
00:11:23,620 --> 00:11:27,850
you do if you're moving<font color="#E5E5E5"> a full class you</font>

287
00:11:26,320 --> 00:11:30,250
just<font color="#E5E5E5"> need to move it physically to</font>

288
00:11:27,850 --> 00:11:31,779
another<font color="#CCCCCC"> SourceTree</font><font color="#E5E5E5"> but if you just want</font>

289
00:11:30,250 --> 00:11:34,480
to<font color="#E5E5E5"> remove a method a single method there</font>

290
00:11:31,779 --> 00:11:36,760
is<font color="#CCCCCC"> no way in</font><font color="#E5E5E5"> Java to doing that so what</font>

291
00:11:34,480 --> 00:11:39,160
we<font color="#CCCCCC"> do is that's why we use aspectj</font>

292
00:11:36,760 --> 00:11:41,650
so we there's<font color="#E5E5E5"> an aspect a maven plug-in</font>

293
00:11:39,160 --> 00:11:43,959
also<font color="#E5E5E5"> so we just move this part in an</font>

294
00:11:41,650 --> 00:11:46,930
<font color="#CCCCCC">aspect and that other module we call a</font>

295
00:11:43,960 --> 00:11:50,020
legacy module<font color="#E5E5E5"> when it builds he actually</font>

296
00:11:46,930 --> 00:11:51,760
weaves<font color="#CCCCCC"> those aspects</font><font color="#E5E5E5"> onto the onto</font><font color="#CCCCCC"> the</font>

297
00:11:50,020 --> 00:11:53,740
<font color="#CCCCCC">other code the record that doesn't</font>

298
00:11:51,760 --> 00:11:55,990
contain<font color="#E5E5E5"> the deprecation</font><font color="#CCCCCC"> and it generates</font>

299
00:11:53,740 --> 00:11:58,150
a jar that<font color="#E5E5E5"> contains both the code and</font>

300
00:11:55,990 --> 00:12:00,730
the and the aspects and<font color="#E5E5E5"> I've put an</font>

301
00:11:58,150 --> 00:12:03,130
example<font color="#E5E5E5"> here</font><font color="#CCCCCC"> on the right if</font><font color="#E5E5E5"> you can</font>

302
00:12:00,730 --> 00:12:03,460
read this is just<font color="#CCCCCC"> adding one method</font>

303
00:12:03,130 --> 00:12:05,439
called

304
00:12:03,460 --> 00:12:09,940
check programming right<font color="#E5E5E5"> to a class</font>

305
00:12:05,440 --> 00:12:14,740
called API<font color="#CCCCCC"> and it just augments</font><font color="#E5E5E5"> this</font>

306
00:12:09,940 --> 00:12:17,200
class with<font color="#E5E5E5"> these these deprecated API so</font>

307
00:12:14,740 --> 00:12:19,990
this is<font color="#CCCCCC"> a several advantages</font><font color="#E5E5E5"> first it</font>

308
00:12:17,200 --> 00:12:21,520
means<font color="#E5E5E5"> that from for us developers we see</font>

309
00:12:19,990 --> 00:12:23,650
clean code we're not tempted to use

310
00:12:21,520 --> 00:12:25,750
deprecated code<font color="#E5E5E5"> we can we cut because</font>

311
00:12:23,650 --> 00:12:27,490
<font color="#CCCCCC">it's some</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> module and we actually</font>

312
00:12:25,750 --> 00:12:30,880
<font color="#E5E5E5">enforce that we don't ever have</font>

313
00:12:27,490 --> 00:12:32,500
<font color="#E5E5E5">dependencies on legacy module so as so</font>

314
00:12:30,880 --> 00:12:33,880
if someone wants to<font color="#E5E5E5"> add a new dependency</font>

315
00:12:32,500 --> 00:12:36,370
in the pump to a legacy<font color="#E5E5E5"> module it will</font>

316
00:12:33,880 --> 00:12:37,600
<font color="#E5E5E5">actually break the bill so we want to</font>

317
00:12:36,370 --> 00:12:40,209
really<font color="#CCCCCC"> make sure</font><font color="#E5E5E5"> that it doesn't happen</font>

318
00:12:37,600 --> 00:12:41,529
<font color="#E5E5E5">so that's good</font><font color="#CCCCCC"> for us we see clean code</font>

319
00:12:40,209 --> 00:12:43,510
we<font color="#E5E5E5"> don't have the code littered with</font>

320
00:12:41,529 --> 00:12:46,390
deprecated stuff and we<font color="#E5E5E5"> never know what</font>

321
00:12:43,510 --> 00:12:48,580
to<font color="#CCCCCC"> use and people want</font><font color="#E5E5E5"> to go easy way</font>

322
00:12:46,390 --> 00:12:50,020
<font color="#E5E5E5">and take use the deprecated API because</font>

323
00:12:48,580 --> 00:12:52,660
<font color="#CCCCCC">they don't know yet how to use the new</font>

324
00:12:50,020 --> 00:12:54,579
<font color="#E5E5E5">API or whatever so this avoids this</font>

325
00:12:52,660 --> 00:12:57,219
effect<font color="#E5E5E5"> and on the other hand from the</font>

326
00:12:54,580 --> 00:12:59,860
user point of view we release the legacy

327
00:12:57,220 --> 00:13:01,450
modules<font color="#E5E5E5"> when we release X wicked</font>

328
00:12:59,860 --> 00:13:04,089
contains the legacy modules that means

329
00:13:01,450 --> 00:13:05,650
if there are<font color="#CCCCCC"> extensions on our code that</font>

330
00:13:04,089 --> 00:13:07,020
you<font color="#E5E5E5"> just</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> mode those modules from</font>

331
00:13:05,650 --> 00:13:09,850
<font color="#CCCCCC">the outside</font><font color="#E5E5E5"> they will continue to work</font>

332
00:13:07,020 --> 00:13:12,100
okay so<font color="#CCCCCC"> these two</font><font color="#E5E5E5"> win-win</font><font color="#CCCCCC"> and we don't</font>

333
00:13:09,850 --> 00:13:14,050
need since<font color="#E5E5E5"> this code is moved to legacy</font>

334
00:13:12,100 --> 00:13:16,300
we don't care that<font color="#E5E5E5"> this stays there for</font>

335
00:13:14,050 --> 00:13:17,920
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> years actually it has their</font><font color="#CCCCCC"> test</font>

336
00:13:16,300 --> 00:13:20,170
I've been moved to at the<font color="#E5E5E5"> same time in</font>

337
00:13:17,920 --> 00:13:21,880
this legacy module<font color="#E5E5E5"> and provided they</font>

338
00:13:20,170 --> 00:13:24,099
continue to<font color="#E5E5E5"> pass and continues to work</font>

339
00:13:21,880 --> 00:13:26,560
<font color="#CCCCCC">it costs us nothing</font><font color="#E5E5E5"> so basically it</font>

340
00:13:24,100 --> 00:13:32,410
<font color="#E5E5E5">costs very little for us to continue not</font>

341
00:13:26,560 --> 00:13:34,000
<font color="#CCCCCC">to not breaking anything now so those</font>

342
00:13:32,410 --> 00:13:36,610
<font color="#CCCCCC">who tried</font><font color="#E5E5E5"> to do this you see there's a</font>

343
00:13:34,000 --> 00:13:37,270
little<font color="#E5E5E5"> this problem is when you create a</font>

344
00:13:36,610 --> 00:13:40,030
<font color="#CCCCCC">new API</font>

345
00:13:37,270 --> 00:13:41,650
<font color="#E5E5E5">you never get it</font><font color="#CCCCCC"> right the first time</font><font color="#E5E5E5"> it</font>

346
00:13:40,030 --> 00:13:43,240
takes<font color="#CCCCCC"> a very long time to</font><font color="#E5E5E5"> work to create</font>

347
00:13:41,650 --> 00:13:45,760
<font color="#E5E5E5">a new API because you have to turn it</font>

348
00:13:43,240 --> 00:13:47,500
and<font color="#CCCCCC"> you have to see the usage</font><font color="#E5E5E5"> and by the</font>

349
00:13:45,760 --> 00:13:48,970
users<font color="#CCCCCC"> you</font><font color="#E5E5E5"> see okay</font><font color="#CCCCCC"> there are</font><font color="#E5E5E5"> made a</font>

350
00:13:47,500 --> 00:13:53,680
<font color="#E5E5E5">mistake here it would</font><font color="#CCCCCC"> be better to add</font>

351
00:13:48,970 --> 00:13:55,570
this parameter etc and if you so in<font color="#E5E5E5"> the</font>

352
00:13:53,680 --> 00:13:57,219
early phases of a new API you really

353
00:13:55,570 --> 00:13:58,840
need something<font color="#E5E5E5"> more flexible than what</font>

354
00:13:57,220 --> 00:14:00,250
I've discussed<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> what we've</font>

355
00:13:58,840 --> 00:14:03,190
introduced<font color="#E5E5E5"> and a notation called</font>

356
00:14:00,250 --> 00:14:05,800
<font color="#E5E5E5">unstable</font><font color="#CCCCCC"> and when we</font><font color="#E5E5E5"> introduce new</font><font color="#CCCCCC"> api's</font>

357
00:14:03,190 --> 00:14:09,610
<font color="#E5E5E5">where developers are allowed to put an</font>

358
00:14:05,800 --> 00:14:10,540
unstable annotation but we don't want

359
00:14:09,610 --> 00:14:13,210
this<font color="#CCCCCC"> to live forever</font>

360
00:14:10,540 --> 00:14:14,740
<font color="#E5E5E5">that would be a problem</font><font color="#CCCCCC"> so we've also</font><font color="#E5E5E5"> so</font>

361
00:14:13,210 --> 00:14:17,410
when you put an astable you also have to

362
00:14:14,740 --> 00:14:19,830
<font color="#E5E5E5">put a since a notation with the version</font>

363
00:14:17,410 --> 00:14:22,089
<font color="#E5E5E5">it's way in which it was introduced and</font>

364
00:14:19,830 --> 00:14:23,560
and actually if<font color="#E5E5E5"> you put unstable</font>

365
00:14:22,090 --> 00:14:25,210
annotation<font color="#E5E5E5"> without that since our bill</font>

366
00:14:23,560 --> 00:14:27,760
will fail because it<font color="#E5E5E5"> will noticed you</font>

367
00:14:25,210 --> 00:14:30,100
don't<font color="#E5E5E5"> have both okay so these forces to</font>

368
00:14:27,760 --> 00:14:32,530
have them and then our build automatic

369
00:14:30,100 --> 00:14:34,630
checks<font color="#CCCCCC"> automatically checks that these</font>

370
00:14:32,530 --> 00:14:37,360
and stable annotation cannot live longer

371
00:14:34,630 --> 00:14:39,670
than one full cycle<font color="#E5E5E5"> and ferocity</font><font color="#CCCCCC"> a</font>

372
00:14:37,360 --> 00:14:41,500
<font color="#E5E5E5">release cycle</font><font color="#CCCCCC"> is one year so we allow</font>

373
00:14:39,670 --> 00:14:44,229
for<font color="#CCCCCC"> its</font><font color="#E5E5E5"> unstable to last for one year</font>

374
00:14:41,500 --> 00:14:46,450
<font color="#E5E5E5">and then they become mainstream api's</font>

375
00:14:44,230 --> 00:14:51,670
and and then they go<font color="#CCCCCC"> through the</font><font color="#E5E5E5"> process</font>

376
00:14:46,450 --> 00:14:53,200
that<font color="#E5E5E5"> I've explained just before</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

377
00:14:51,670 --> 00:14:54,069
this is our<font color="#CCCCCC"> strategy for backward</font>

378
00:14:53,200 --> 00:14:56,020
compatibility

379
00:14:54,070 --> 00:14:58,450
<font color="#CCCCCC">I mean is it someone doing this</font>

380
00:14:56,020 --> 00:14:58,870
<font color="#E5E5E5">something similar here you raise your</font>

381
00:14:58,450 --> 00:15:01,390
<font color="#E5E5E5">hand</font>

382
00:14:58,870 --> 00:15:03,580
<font color="#E5E5E5">no</font><font color="#CCCCCC"> ok it has worked</font><font color="#E5E5E5"> quite well for us</font>

383
00:15:01,390 --> 00:15:05,410
<font color="#E5E5E5">over the</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> and we are</font><font color="#CCCCCC"> we actually</font>

384
00:15:03,580 --> 00:15:07,210
extensions that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> develop</font><font color="#CCCCCC"> ten years ago</font>

385
00:15:05,410 --> 00:15:13,990
<font color="#E5E5E5">and</font><font color="#CCCCCC"> they still run the next wiki thanks</font>

386
00:15:07,210 --> 00:15:18,520
to this<font color="#E5E5E5"> this thing I would prefer the</font>

387
00:15:13,990 --> 00:15:22,380
<font color="#CCCCCC">ends possible</font><font color="#E5E5E5"> ok next domain is mutation</font>

388
00:15:18,520 --> 00:15:22,380
testing<font color="#E5E5E5"> so this is newer</font>

389
00:15:22,930 --> 00:15:28,300
so this one is we're using<font color="#E5E5E5"> several tools</font>

390
00:15:26,350 --> 00:15:31,720
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to start with two tools called</font>

391
00:15:28,300 --> 00:15:33,370
pit<font color="#CCCCCC"> fittest and</font><font color="#E5E5E5"> decart so I will explain</font>

392
00:15:31,720 --> 00:15:35,710
the<font color="#CCCCCC"> concept so first how many</font><font color="#E5E5E5"> of you are</font>

393
00:15:33,370 --> 00:15:38,890
familiar<font color="#E5E5E5"> with mutation testing or or use</font>

394
00:15:35,710 --> 00:15:41,400
it a bit<font color="#CCCCCC"> ok a bit</font><font color="#E5E5E5"> I would say</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> would</font>

395
00:15:38,890 --> 00:15:44,050
<font color="#CCCCCC">say five percent</font><font color="#E5E5E5"> and maybe of the</font><font color="#CCCCCC"> room</font>

396
00:15:41,400 --> 00:15:45,640
<font color="#CCCCCC">so this</font><font color="#E5E5E5"> pretty new actually</font><font color="#CCCCCC"> it's not</font>

397
00:15:44,050 --> 00:15:46,780
<font color="#E5E5E5">very new it's</font><font color="#CCCCCC"> been gone</font><font color="#E5E5E5"> for a long time</font>

398
00:15:45,640 --> 00:15:48,370
but there are<font color="#E5E5E5"> new tools being developed</font>

399
00:15:46,780 --> 00:15:49,620
<font color="#E5E5E5">and I think it's getting more</font><font color="#CCCCCC"> and more</font>

400
00:15:48,370 --> 00:15:51,180
traction

401
00:15:49,620 --> 00:15:53,610
to be it was more cutting<font color="#E5E5E5"> in the</font>

402
00:15:51,180 --> 00:15:55,260
<font color="#E5E5E5">academia and it's the feeling that it's</font>

403
00:15:53,610 --> 00:15:57,720
<font color="#CCCCCC">getting</font><font color="#E5E5E5"> more and more out of it with</font>

404
00:15:55,260 --> 00:15:59,430
tools<font color="#CCCCCC"> that can really be</font><font color="#E5E5E5"> used for real</font>

405
00:15:57,720 --> 00:16:01,860
so the concept<font color="#CCCCCC"> I will explain the</font>

406
00:15:59,430 --> 00:16:03,270
concept<font color="#E5E5E5"> so imagine you've got code</font>

407
00:16:01,860 --> 00:16:05,850
<font color="#E5E5E5">you've got existing</font><font color="#CCCCCC"> tests</font>

408
00:16:03,270 --> 00:16:08,250
so what mutation testing does is it

409
00:16:05,850 --> 00:16:10,200
modifies<font color="#CCCCCC"> your code under test so not</font>

410
00:16:08,250 --> 00:16:12,120
your<font color="#E5E5E5"> test</font><font color="#CCCCCC"> put the code</font><font color="#E5E5E5"> on the test make</font>

411
00:16:10,200 --> 00:16:15,029
some<font color="#E5E5E5"> mutations some changes to it for</font>

412
00:16:12,120 --> 00:16:16,620
<font color="#E5E5E5">example if you've got a less than sign</font>

413
00:16:15,029 --> 00:16:19,320
somewhere<font color="#E5E5E5"> it will change it to</font><font color="#CCCCCC"> a greater</font>

414
00:16:16,620 --> 00:16:22,500
<font color="#CCCCCC">than if you've got an integral</font><font color="#E5E5E5"> value it</font>

415
00:16:19,320 --> 00:16:24,720
will<font color="#E5E5E5"> change to another value etc of</font><font color="#CCCCCC"> you</font>

416
00:16:22,500 --> 00:16:28,140
<font color="#E5E5E5">are other ones like if you have a method</font>

417
00:16:24,720 --> 00:16:30,210
<font color="#CCCCCC">that returns a string it would remove it</font>

418
00:16:28,140 --> 00:16:32,310
and return<font color="#E5E5E5"> the null instead those kind</font>

419
00:16:30,210 --> 00:16:34,110
of things those are mutations<font color="#E5E5E5"> we call</font>

420
00:16:32,310 --> 00:16:36,029
them mutants<font color="#E5E5E5"> when the other code that</font><font color="#CCCCCC"> I</font>

421
00:16:34,110 --> 00:16:38,820
<font color="#E5E5E5">were to which a mutation has been</font>

422
00:16:36,029 --> 00:16:41,939
applied to and then you rerun<font color="#E5E5E5"> your tests</font>

423
00:16:38,820 --> 00:16:43,890
your existing test<font color="#CCCCCC"> Suites</font><font color="#E5E5E5"> and if it if</font>

424
00:16:41,940 --> 00:16:46,230
it continues to pass<font color="#E5E5E5"> it means that your</font>

425
00:16:43,890 --> 00:16:48,240
tests<font color="#E5E5E5"> have</font><font color="#CCCCCC"> not noticed the change</font><font color="#E5E5E5"> that</font>

426
00:16:46,230 --> 00:16:50,760
means<font color="#E5E5E5"> then they're not good</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> and</font>

427
00:16:48,240 --> 00:16:52,260
<font color="#E5E5E5">globally</font><font color="#CCCCCC"> you do a lot of</font><font color="#E5E5E5"> mutation</font>

428
00:16:50,760 --> 00:16:54,870
several mutation and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> generate the</font>

429
00:16:52,260 --> 00:16:57,870
<font color="#E5E5E5">mutation score which represents</font>

430
00:16:54,870 --> 00:17:02,160
basically<font color="#CCCCCC"> the</font><font color="#E5E5E5"> quality of your</font><font color="#CCCCCC"> tests how</font>

431
00:16:57,870 --> 00:17:03,930
<font color="#E5E5E5">good they are</font><font color="#CCCCCC"> in catching</font><font color="#E5E5E5"> problems</font><font color="#CCCCCC"> so</font>

432
00:17:02,160 --> 00:17:06,500
very<font color="#E5E5E5"> similar to the coverage percentage</font>

433
00:17:03,930 --> 00:17:10,079
<font color="#E5E5E5">and I will show you some</font><font color="#CCCCCC"> screenshots</font><font color="#E5E5E5"> of</font>

434
00:17:06,500 --> 00:17:12,510
<font color="#CCCCCC">Dakotan</font><font color="#E5E5E5"> pit in action showing you both</font>

435
00:17:10,079 --> 00:17:15,480
from the<font color="#E5E5E5"> coverage and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> mutations and</font>

436
00:17:12,510 --> 00:17:17,609
<font color="#CCCCCC">attrition scores</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> decart is</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> a</font>

437
00:17:15,480 --> 00:17:20,819
mutation<font color="#CCCCCC"> engine for pit pit already has</font>

438
00:17:17,609 --> 00:17:22,379
several mutations<font color="#E5E5E5"> and the cut is</font><font color="#CCCCCC"> one is</font>

439
00:17:20,819 --> 00:17:24,599
an additional mutation engine<font color="#E5E5E5"> I will</font>

440
00:17:22,380 --> 00:17:26,520
explain to<font color="#E5E5E5"> you very quickly at the</font><font color="#CCCCCC"> data</font>

441
00:17:24,599 --> 00:17:28,020
<font color="#E5E5E5">for the difference here so</font><font color="#CCCCCC"> this is a</font>

442
00:17:26,520 --> 00:17:30,000
<font color="#E5E5E5">high</font><font color="#CCCCCC"> level schema</font><font color="#E5E5E5"> it shows that for</font>

443
00:17:28,020 --> 00:17:31,950
<font color="#E5E5E5">running pit and the</font><font color="#CCCCCC"> cart you have</font><font color="#E5E5E5"> to get</font>

444
00:17:30,000 --> 00:17:35,220
all the compiled file the source file

445
00:17:31,950 --> 00:17:37,110
dependencies everything it goes in<font color="#E5E5E5"> pit</font>

446
00:17:35,220 --> 00:17:39,809
<font color="#E5E5E5">which makes the modifications to the</font>

447
00:17:37,110 --> 00:17:42,600
source files and it and the cart is an

448
00:17:39,809 --> 00:17:45,090
engine inside pit and it has about<font color="#E5E5E5"> four</font>

449
00:17:42,600 --> 00:17:46,699
extreme mutations so one of<font color="#E5E5E5"> them is</font><font color="#CCCCCC"> that</font>

450
00:17:45,090 --> 00:17:49,080
if you have a method<font color="#CCCCCC"> that returns void</font>

451
00:17:46,700 --> 00:17:52,740
<font color="#E5E5E5">it would actually completely wipe out</font>

452
00:17:49,080 --> 00:17:55,470
the method content and undo nothing<font color="#E5E5E5"> okay</font>

453
00:17:52,740 --> 00:17:57,990
that's extreme if you have a method<font color="#CCCCCC"> that</font>

454
00:17:55,470 --> 00:18:00,060
<font color="#CCCCCC">returns an int it will return a given</font>

455
00:17:57,990 --> 00:18:02,670
value as a static value<font color="#E5E5E5"> which</font><font color="#CCCCCC"> you can</font>

456
00:18:00,060 --> 00:18:04,620
<font color="#E5E5E5">configure in your in your pond</font>

457
00:18:02,670 --> 00:18:07,260
and for a string you can<font color="#CCCCCC"> choose to</font>

458
00:18:04,620 --> 00:18:09,330
return the null or<font color="#E5E5E5"> or any string value</font>

459
00:18:07,260 --> 00:18:10,799
and you see what happened<font color="#CCCCCC"> so these are</font>

460
00:18:09,330 --> 00:18:13,439
<font color="#E5E5E5">really extreme one we want to focus</font>

461
00:18:10,799 --> 00:18:15,270
<font color="#CCCCCC">because it takes a lot of time</font><font color="#E5E5E5"> to run</font><font color="#CCCCCC"> a</font>

462
00:18:13,440 --> 00:18:17,309
lot of<font color="#CCCCCC"> mutation so we wanted to</font><font color="#E5E5E5"> focus on</font>

463
00:18:15,270 --> 00:18:20,129
the extreme ones because they are<font color="#CCCCCC"> the</font>

464
00:18:17,309 --> 00:18:24,000
one that<font color="#CCCCCC"> have the highest value</font><font color="#E5E5E5"> for</font>

465
00:18:20,130 --> 00:18:26,010
fighting problems<font color="#E5E5E5"> so when you run</font><font color="#CCCCCC"> that</font>

466
00:18:24,000 --> 00:18:28,350
<font color="#E5E5E5">this is example of running it on once</font>

467
00:18:26,010 --> 00:18:31,470
more<font color="#CCCCCC"> very small module of xwiki so this</font>

468
00:18:28,350 --> 00:18:33,299
<font color="#E5E5E5">module has 14 classes</font><font color="#CCCCCC"> and this is the</font>

469
00:18:31,470 --> 00:18:35,940
report<font color="#E5E5E5"> generated by pit you see it with</font>

470
00:18:33,299 --> 00:18:38,730
it reports a coverage of<font color="#CCCCCC"> 80%</font><font color="#E5E5E5"> line</font>

471
00:18:35,940 --> 00:18:40,080
coverage of<font color="#E5E5E5"> 80%</font><font color="#CCCCCC"> a mutation score of 71</font>

472
00:18:38,730 --> 00:18:41,820
percent and then you've got to drill

473
00:18:40,080 --> 00:18:44,520
down<font color="#E5E5E5"> on breakage breakdown by package</font>

474
00:18:41,820 --> 00:18:46,950
and you go you can go<font color="#E5E5E5"> till the</font><font color="#CCCCCC"> line</font>

475
00:18:44,520 --> 00:18:49,200
number so that's<font color="#CCCCCC"> very that's that's why</font>

476
00:18:46,950 --> 00:18:52,020
you see the problems<font color="#CCCCCC"> on</font><font color="#E5E5E5"> this example</font>

477
00:18:49,200 --> 00:18:55,320
this<font color="#CCCCCC"> is an equals method for a</font><font color="#E5E5E5"> Java</font>

478
00:18:52,020 --> 00:18:57,418
class<font color="#E5E5E5"> and what it says here it</font><font color="#CCCCCC"> says that</font>

479
00:18:55,320 --> 00:19:00,720
<font color="#E5E5E5">you baby</font><font color="#CCCCCC"> also the bug</font><font color="#E5E5E5"> won't be able to</font>

480
00:18:57,419 --> 00:19:04,860
<font color="#CCCCCC">read so I will describe it on line 112</font>

481
00:19:00,720 --> 00:19:06,660
<font color="#E5E5E5">it says that the code the test has</font>

482
00:19:04,860 --> 00:19:08,790
covered this line<font color="#E5E5E5"> as</font><font color="#CCCCCC"> call this this line</font>

483
00:19:06,660 --> 00:19:13,890
so jacoco shows that<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> being covered</font>

484
00:19:08,790 --> 00:19:15,990
<font color="#E5E5E5">however what what the cut pit are</font>

485
00:19:13,890 --> 00:19:18,990
showing is that<font color="#E5E5E5"> even though it</font><font color="#CCCCCC"> was</font>

486
00:19:15,990 --> 00:19:23,669
covered when those<font color="#CCCCCC"> this body was</font>

487
00:19:18,990 --> 00:19:26,760
replaced by true<font color="#E5E5E5"> returning truth as a</font>

488
00:19:23,669 --> 00:19:29,130
fixed value<font color="#E5E5E5"> it did survive</font><font color="#CCCCCC"> it wasn't</font>

489
00:19:26,760 --> 00:19:30,900
noticed by<font color="#E5E5E5"> the test okay this is exactly</font>

490
00:19:29,130 --> 00:19:32,520
<font color="#CCCCCC">what it shows when it was replaced by</font>

491
00:19:30,900 --> 00:19:34,770
force it was killed the mutation<font color="#E5E5E5"> was</font>

492
00:19:32,520 --> 00:19:37,620
killed so the<font color="#CCCCCC"> test was good for force</font>

493
00:19:34,770 --> 00:19:41,520
test<font color="#E5E5E5"> but not good for true conditions or</font>

494
00:19:37,620 --> 00:19:45,770
<font color="#E5E5E5">returning true and and if we look at the</font>

495
00:19:41,520 --> 00:19:47,970
test<font color="#CCCCCC"> so the test is</font><font color="#E5E5E5"> on on the left here</font>

496
00:19:45,770 --> 00:19:51,629
<font color="#E5E5E5">indeed if we read it</font><font color="#CCCCCC"> we see that</font><font color="#E5E5E5"> we're</font>

497
00:19:47,970 --> 00:19:53,220
just<font color="#E5E5E5"> testing for for asserting true for</font>

498
00:19:51,630 --> 00:19:56,250
comparing things but we're not asserting

499
00:19:53,220 --> 00:19:59,280
false<font color="#E5E5E5"> and and actually</font><font color="#CCCCCC"> we're not testing</font>

500
00:19:56,250 --> 00:20:00,809
for<font color="#E5E5E5"> inequality and if we and so after</font>

501
00:19:59,280 --> 00:20:02,760
I've<font color="#E5E5E5"> run this I've been able to modify</font>

502
00:20:00,809 --> 00:20:04,350
my<font color="#CCCCCC"> test to</font><font color="#E5E5E5"> actually show that so this</font><font color="#CCCCCC"> is</font>

503
00:20:02,760 --> 00:20:06,000
<font color="#E5E5E5">something this is just a very simple</font>

504
00:20:04,350 --> 00:20:08,280
<font color="#CCCCCC">example but something simple to</font>

505
00:20:06,000 --> 00:20:12,260
understand that it's able<font color="#CCCCCC"> to tell me how</font>

506
00:20:08,280 --> 00:20:14,820
good my tests<font color="#E5E5E5"> are and what's missing now</font>

507
00:20:12,260 --> 00:20:17,759
there are some<font color="#E5E5E5"> limitations</font>

508
00:20:14,820 --> 00:20:19,439
first it<font color="#E5E5E5"> takes</font><font color="#CCCCCC"> times</font><font color="#E5E5E5"> to look at all the</font>

509
00:20:17,759 --> 00:20:22,919
reports<font color="#E5E5E5"> generated and find the right</font>

510
00:20:19,440 --> 00:20:24,509
places that are interesting<font color="#CCCCCC"> to modify</font>

511
00:20:22,919 --> 00:20:27,059
because they're not all<font color="#CCCCCC"> they are</font>

512
00:20:24,509 --> 00:20:28,559
interesting<font color="#E5E5E5"> some so if you have if you</font>

513
00:20:27,059 --> 00:20:30,059
<font color="#E5E5E5">have run out</font><font color="#CCCCCC"> of one hour of</font><font color="#E5E5E5"> time ahead</font>

514
00:20:28,559 --> 00:20:32,690
<font color="#CCCCCC">of you you may want to add new tests</font>

515
00:20:30,059 --> 00:20:35,129
elsewhere rather<font color="#E5E5E5"> than try to add new</font>

516
00:20:32,690 --> 00:20:36,360
<font color="#CCCCCC">assertion in an</font><font color="#E5E5E5"> existing test which may</font>

517
00:20:35,130 --> 00:20:37,769
have<font color="#E5E5E5"> more</font><font color="#CCCCCC"> value for</font><font color="#E5E5E5"> you so</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very</font>

518
00:20:36,360 --> 00:20:41,008
important to<font color="#E5E5E5"> find the important places</font>

519
00:20:37,769 --> 00:20:43,620
and there is a concept we call strong

520
00:20:41,009 --> 00:20:47,639
<font color="#E5E5E5">pseudo tested method those are the worst</font>

521
00:20:43,620 --> 00:20:50,639
<font color="#CCCCCC">because it says that no matter what the</font>

522
00:20:47,639 --> 00:20:52,439
<font color="#E5E5E5">value returned value you you change in</font>

523
00:20:50,639 --> 00:20:53,490
<font color="#E5E5E5">the code the test always</font><font color="#CCCCCC"> fell</font><font color="#E5E5E5"> so the</font>

524
00:20:52,440 --> 00:20:55,919
other that<font color="#E5E5E5"> they are the highest</font>

525
00:20:53,490 --> 00:20:58,620
contenders<font color="#E5E5E5"> those are the one you want to</font>

526
00:20:55,919 --> 00:21:01,200
<font color="#E5E5E5">focus on and look at so the what the</font>

527
00:20:58,620 --> 00:21:04,289
team developing<font color="#E5E5E5"> a pit</font><font color="#CCCCCC"> endicott are</font>

528
00:21:01,200 --> 00:21:06,629
working on is<font color="#E5E5E5"> to modify the report so</font>

529
00:21:04,289 --> 00:21:08,490
that<font color="#CCCCCC"> they highlight those because so</font>

530
00:21:06,629 --> 00:21:10,500
help<font color="#E5E5E5"> you focus on having a look at those</font>

531
00:21:08,490 --> 00:21:13,620
there are some others but they're less

532
00:21:10,500 --> 00:21:14,850
<font color="#E5E5E5">they no gray area and you</font><font color="#CCCCCC"> will you can</font>

533
00:21:13,620 --> 00:21:17,100
look at them but<font color="#CCCCCC"> you would</font><font color="#E5E5E5"> take a lot of</font>

534
00:21:14,850 --> 00:21:20,129
<font color="#E5E5E5">time actually to look at them</font><font color="#CCCCCC"> so another</font>

535
00:21:17,100 --> 00:21:22,740
limitation is<font color="#E5E5E5"> that pit by default</font>

536
00:21:20,129 --> 00:21:25,559
<font color="#CCCCCC">doesn't support</font><font color="#E5E5E5"> multi modules that means</font>

537
00:21:22,740 --> 00:21:28,139
that you can run it on<font color="#E5E5E5"> a single</font><font color="#CCCCCC"> module</font>

538
00:21:25,559 --> 00:21:30,509
it will<font color="#CCCCCC"> modify your source code in that</font>

539
00:21:28,139 --> 00:21:33,658
module<font color="#CCCCCC"> but if your test exercise codes</font>

540
00:21:30,509 --> 00:21:35,399
are also in other<font color="#CCCCCC"> modules</font><font color="#E5E5E5"> they're not</font>

541
00:21:33,659 --> 00:21:37,620
<font color="#E5E5E5">taking into account so so they've so</font>

542
00:21:35,399 --> 00:21:40,799
someone has started as<font color="#E5E5E5"> part of the stamp</font>

543
00:21:37,620 --> 00:21:42,959
research project another<font color="#E5E5E5"> another open</font>

544
00:21:40,799 --> 00:21:46,799
<font color="#E5E5E5">source</font><font color="#CCCCCC"> plug-in called PMP for paint</font>

545
00:21:42,960 --> 00:21:49,080
<font color="#E5E5E5">multi projects that allows to do that on</font>

546
00:21:46,799 --> 00:21:51,929
a lot<font color="#CCCCCC"> of them the problem is when we've</font>

547
00:21:49,080 --> 00:21:55,049
executed<font color="#E5E5E5"> I've tried it on X</font><font color="#CCCCCC"> wiki it</font>

548
00:21:51,929 --> 00:21:56,340
takes<font color="#E5E5E5"> very very long for example</font><font color="#CCCCCC"> at</font>

549
00:21:55,049 --> 00:21:58,168
executed just<font color="#CCCCCC"> on what we call xwiki</font>

550
00:21:56,340 --> 00:22:00,330
<font color="#E5E5E5">rendering it took seven plus hours just</font>

551
00:21:58,169 --> 00:22:02,690
to execute fully on the whole<font color="#E5E5E5"> codebase</font>

552
00:22:00,330 --> 00:22:06,570
and for me that<font color="#E5E5E5"> makes it</font><font color="#CCCCCC"> just unusable</font>

553
00:22:02,690 --> 00:22:07,860
<font color="#E5E5E5">so right now the other thing</font><font color="#CCCCCC"> interesting</font>

554
00:22:06,570 --> 00:22:10,230
there<font color="#E5E5E5"> are things that have limitations</font>

555
00:22:07,860 --> 00:22:12,120
<font color="#CCCCCC">so we've defined I've defined a strategy</font>

556
00:22:10,230 --> 00:22:16,559
that<font color="#CCCCCC"> I want to try which</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> could</font>

557
00:22:12,120 --> 00:22:18,508
work in real in<font color="#CCCCCC"> real life so the idea is</font>

558
00:22:16,559 --> 00:22:20,580
I want<font color="#CCCCCC"> to apply the strategy that works</font>

559
00:22:18,509 --> 00:22:22,500
well for us<font color="#E5E5E5"> about the coverage testing</font>

560
00:22:20,580 --> 00:22:25,529
that<font color="#E5E5E5"> I've explained but</font><font color="#CCCCCC"> I want to bring</font>

561
00:22:22,500 --> 00:22:27,720
<font color="#E5E5E5">that to mutation score so I would like</font>

562
00:22:25,529 --> 00:22:29,669
to fail the bill

563
00:22:27,720 --> 00:22:32,580
for a given<font color="#E5E5E5"> module only when the</font>

564
00:22:29,669 --> 00:22:35,490
mutation score generated by by pit<font color="#CCCCCC"> the</font>

565
00:22:32,580 --> 00:22:38,309
<font color="#CCCCCC">cart</font><font color="#E5E5E5"> is under the defined threshold in</font>

566
00:22:35,490 --> 00:22:39,929
the<font color="#CCCCCC"> pom same as the coverage and when</font>

567
00:22:38,309 --> 00:22:41,730
you improve because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> exactly the</font>

568
00:22:39,929 --> 00:22:44,190
same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> in the end in the end it's</font>

569
00:22:41,730 --> 00:22:46,590
<font color="#E5E5E5">it's a measure of how</font><font color="#CCCCCC"> good your tests</font>

570
00:22:44,190 --> 00:22:49,919
are the other one was a measure of how

571
00:22:46,590 --> 00:22:51,750
much<font color="#CCCCCC"> of</font><font color="#E5E5E5"> your code</font><font color="#CCCCCC"> are there</font><font color="#E5E5E5"> tests for</font>

572
00:22:49,919 --> 00:22:53,789
that<font color="#E5E5E5"> code piece of code and this one is</font>

573
00:22:51,750 --> 00:22:54,960
how<font color="#E5E5E5"> good the tests are again for the</font>

574
00:22:53,789 --> 00:22:56,730
piece<font color="#E5E5E5"> of code because it's also</font>

575
00:22:54,960 --> 00:22:58,860
<font color="#E5E5E5">modifying the code so it's exactly the</font>

576
00:22:56,730 --> 00:23:00,470
same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> but it provides a--</font><font color="#E5E5E5"> I have</font>

577
00:22:58,860 --> 00:23:03,229
the feeling that it provides a higher

578
00:23:00,470 --> 00:23:06,870
higher value than just<font color="#E5E5E5"> the line coverage</font>

579
00:23:03,230 --> 00:23:08,850
but<font color="#E5E5E5"> I still need to try</font><font color="#CCCCCC"> it but that's</font>

580
00:23:06,870 --> 00:23:11,399
<font color="#CCCCCC">the idea</font><font color="#E5E5E5"> and then progressively try to</font>

581
00:23:08,850 --> 00:23:14,309
increase the<font color="#E5E5E5"> mutation score over time</font>

582
00:23:11,400 --> 00:23:16,169
<font color="#CCCCCC">well I don't know yet is that going</font><font color="#E5E5E5"> to</font>

583
00:23:14,309 --> 00:23:18,510
<font color="#CCCCCC">be stable</font><font color="#E5E5E5"> I mean is</font><font color="#CCCCCC"> that going to work</font>

584
00:23:16,169 --> 00:23:20,250
<font color="#CCCCCC">as well as the</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> state coverage that</font>

585
00:23:18,510 --> 00:23:26,158
we've been doing<font color="#CCCCCC"> it so this</font><font color="#E5E5E5"> is still an</font>

586
00:23:20,250 --> 00:23:29,280
experiment in progress now we can go

587
00:23:26,159 --> 00:23:31,049
further in<font color="#E5E5E5"> invitation testing there is</font>

588
00:23:29,280 --> 00:23:32,549
another tool called<font color="#CCCCCC"> D spot</font><font color="#E5E5E5"> being</font>

589
00:23:31,049 --> 00:23:36,539
developed also<font color="#CCCCCC"> on the stamp research</font>

590
00:23:32,549 --> 00:23:39,330
project<font color="#E5E5E5"> so it builds on the cart but in</font>

591
00:23:36,539 --> 00:23:42,059
addition<font color="#CCCCCC"> it</font><font color="#E5E5E5"> rejects the</font><font color="#CCCCCC"> result</font><font color="#E5E5E5"> and adds</font>

592
00:23:39,330 --> 00:23:45,809
assertion to<font color="#E5E5E5"> your own tests so it</font>

593
00:23:42,059 --> 00:23:47,580
arguments it amplifies your<font color="#CCCCCC"> own test</font>

594
00:23:45,809 --> 00:23:50,220
<font color="#CCCCCC">feeds by adding missing assertion</font>

595
00:23:47,580 --> 00:23:53,939
automatically<font color="#CCCCCC"> okay so I can</font><font color="#E5E5E5"> even</font>

596
00:23:50,220 --> 00:23:56,700
generate new tests methods<font color="#CCCCCC"> this</font><font color="#E5E5E5"> one is</font>

597
00:23:53,940 --> 00:23:58,169
it's more marketing than the<font color="#E5E5E5"> reality</font>

598
00:23:56,700 --> 00:24:00,840
because<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> not seen it happen but the</font>

599
00:23:58,169 --> 00:24:02,429
assertion do work<font color="#CCCCCC"> it's still being</font>

600
00:24:00,840 --> 00:24:04,370
<font color="#E5E5E5">developed but it still it's usable and</font>

601
00:24:02,429 --> 00:24:06,539
I'm<font color="#CCCCCC"> actually have executed on equity</font>

602
00:24:04,370 --> 00:24:08,699
there are some<font color="#CCCCCC"> ok it's the beginning</font>

603
00:24:06,539 --> 00:24:11,669
<font color="#E5E5E5">that is starting</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be starting</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> work</font>

604
00:24:08,700 --> 00:24:17,789
let's add it like this so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> an</font>

605
00:24:11,669 --> 00:24:19,890
example so I've taken<font color="#E5E5E5"> a some code we had</font>

606
00:24:17,789 --> 00:24:22,320
an original test which is so<font color="#CCCCCC"> which you</font>

607
00:24:19,890 --> 00:24:24,179
<font color="#CCCCCC">see at the</font><font color="#E5E5E5"> bottom and you see this test</font>

608
00:24:22,320 --> 00:24:26,280
<font color="#E5E5E5">is calling it's calling a method called</font>

609
00:24:24,179 --> 00:24:28,830
<font color="#E5E5E5">escape attribute value on the string and</font>

610
00:24:26,280 --> 00:24:33,270
we're<font color="#E5E5E5"> testing what we wanted to</font><font color="#CCCCCC"> verify</font>

611
00:24:28,830 --> 00:24:35,010
in this test is that<font color="#E5E5E5"> those special</font>

612
00:24:33,270 --> 00:24:38,100
<font color="#E5E5E5">characters</font><font color="#CCCCCC"> like less than</font><font color="#E5E5E5"> greater than</font>

613
00:24:35,010 --> 00:24:40,200
<font color="#CCCCCC">etc they are encoded</font><font color="#E5E5E5"> okay this is what</font>

614
00:24:38,100 --> 00:24:41,158
we test and we run this through<font color="#CCCCCC"> this</font>

615
00:24:40,200 --> 00:24:44,849
<font color="#E5E5E5">spot</font>

616
00:24:41,159 --> 00:24:47,460
it generated a<font color="#CCCCCC"> modified test</font><font color="#E5E5E5"> and I've</font>

617
00:24:44,849 --> 00:24:48,869
put in in<font color="#CCCCCC"> read</font><font color="#E5E5E5"> the line</font><font color="#CCCCCC"> that's something</font>

618
00:24:47,460 --> 00:24:51,389
<font color="#E5E5E5">that adds something that was</font><font color="#CCCCCC"> actually</font>

619
00:24:48,869 --> 00:24:53,099
<font color="#CCCCCC">not tested here it automatically</font><font color="#E5E5E5"> added</font>

620
00:24:51,389 --> 00:24:55,080
the line that<font color="#E5E5E5"> and for verifying the</font>

621
00:24:53,099 --> 00:24:57,869
exact content actually<font color="#E5E5E5"> of the escaped</font>

622
00:24:55,080 --> 00:25:00,090
<font color="#E5E5E5">string we were just focusing on the</font>

623
00:24:57,869 --> 00:25:01,709
greater<font color="#E5E5E5"> than or less than but it added</font>

624
00:25:00,090 --> 00:25:03,418
<font color="#CCCCCC">this in</font><font color="#E5E5E5"> addition so for example imagine</font>

625
00:25:01,710 --> 00:25:08,820
<font color="#CCCCCC">that the escape</font><font color="#E5E5E5"> attribute was also</font>

626
00:25:03,419 --> 00:25:10,139
escaping<font color="#E5E5E5"> the a the a</font><font color="#CCCCCC"> literary value we</font>

627
00:25:08,820 --> 00:25:12,299
would not have<font color="#CCCCCC"> noticed it</font><font color="#E5E5E5"> with the test</font>

628
00:25:10,139 --> 00:25:13,799
<font color="#E5E5E5">but with the addition</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was done by</font>

629
00:25:12,299 --> 00:25:16,168
this<font color="#E5E5E5"> part it would have been noticed</font><font color="#CCCCCC"> so</font>

630
00:25:13,799 --> 00:25:18,749
this this amplify the existing<font color="#CCCCCC"> size</font><font color="#E5E5E5"> by</font>

631
00:25:16,169 --> 00:25:22,739
<font color="#E5E5E5">adding new assertions and this is a very</font>

632
00:25:18,749 --> 00:25:24,479
simple example<font color="#CCCCCC"> now the problem is</font><font color="#E5E5E5"> this</font>

633
00:25:22,739 --> 00:25:26,070
part is very<font color="#CCCCCC"> slow at the very slow and</font>

634
00:25:24,479 --> 00:25:28,019
that's that's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> very typical invitation</font>

635
00:25:26,070 --> 00:25:30,269
testing that's the issue many issue is

636
00:25:28,019 --> 00:25:32,909
the<font color="#E5E5E5"> slowness</font><font color="#CCCCCC"> so you have to define a</font>

637
00:25:30,269 --> 00:25:34,739
strategy<font color="#E5E5E5"> that</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> work so my idea the</font>

638
00:25:32,909 --> 00:25:37,169
<font color="#CCCCCC">idea right</font><font color="#E5E5E5"> at the moment that I want to</font>

639
00:25:34,739 --> 00:25:38,940
<font color="#E5E5E5">apply on</font><font color="#CCCCCC"> the project is</font><font color="#E5E5E5"> that we would</font>

640
00:25:37,169 --> 00:25:40,919
<font color="#E5E5E5">not run it on developers machine because</font>

641
00:25:38,940 --> 00:25:45,479
it's too slow<font color="#CCCCCC"> we would run it on the CI</font>

642
00:25:40,919 --> 00:25:47,820
<font color="#E5E5E5">from time to time only and the CI in the</font>

643
00:25:45,479 --> 00:25:51,389
pipeline<font color="#E5E5E5"> for example Jenkins pipeline we</font>

644
00:25:47,820 --> 00:25:53,189
would commit<font color="#E5E5E5"> the generated test like the</font>

645
00:25:51,389 --> 00:25:55,139
one I've just<font color="#E5E5E5"> shown you</font><font color="#CCCCCC"> the test</font>

646
00:25:53,190 --> 00:25:57,090
generated<font color="#E5E5E5"> by this</font><font color="#CCCCCC"> pot we would commit</font>

647
00:25:55,139 --> 00:25:59,728
<font color="#E5E5E5">that in a source treatment of the of the</font>

648
00:25:57,090 --> 00:26:01,678
module where they<font color="#E5E5E5"> are whether the tests</font>

649
00:25:59,729 --> 00:26:03,779
are but in a different<font color="#CCCCCC"> one not in the</font>

650
00:26:01,679 --> 00:26:05,789
<font color="#E5E5E5">same because I don't want to mix the</font>

651
00:26:03,779 --> 00:26:07,559
tests<font color="#E5E5E5"> that are generated manually by</font>

652
00:26:05,789 --> 00:26:10,349
humans and<font color="#CCCCCC"> the one generated by by D</font>

653
00:26:07,559 --> 00:26:12,299
<font color="#CCCCCC">spot so I want</font><font color="#E5E5E5"> to mod because</font><font color="#CCCCCC"> they are</font>

654
00:26:10,349 --> 00:26:13,619
they<font color="#E5E5E5"> are interesting to run we don't</font>

655
00:26:12,299 --> 00:26:15,450
even need to<font color="#CCCCCC"> look at them</font><font color="#E5E5E5"> they're</font>

656
00:26:13,619 --> 00:26:17,428
interesting<font color="#E5E5E5"> because they add stuff that</font>

657
00:26:15,450 --> 00:26:18,960
represents<font color="#E5E5E5"> they've been computed in the</font>

658
00:26:17,429 --> 00:26:21,299
<font color="#E5E5E5">whether they represents</font><font color="#CCCCCC"> exactly what</font>

659
00:26:18,960 --> 00:26:22,889
your code<font color="#CCCCCC"> is doing</font><font color="#E5E5E5"> so if you have a bug</font>

660
00:26:21,299 --> 00:26:24,539
in your code it will<font color="#E5E5E5"> also actually that</font>

661
00:26:22,889 --> 00:26:27,649
you<font color="#E5E5E5"> would have a test to prove</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

662
00:26:24,539 --> 00:26:30,029
<font color="#E5E5E5">bug is actually is actually the behavior</font>

663
00:26:27,649 --> 00:26:31,889
<font color="#E5E5E5">so</font><font color="#CCCCCC"> you we need to</font><font color="#E5E5E5"> be careful</font><font color="#CCCCCC"> about that</font>

664
00:26:30,029 --> 00:26:33,450
but that's not<font color="#CCCCCC"> the</font><font color="#E5E5E5"> goal the goal is that</font>

665
00:26:31,889 --> 00:26:36,570
in the<font color="#CCCCCC"> majority of cases</font><font color="#E5E5E5"> it will easily</font>

666
00:26:33,450 --> 00:26:37,649
just prove the behavior<font color="#E5E5E5"> of your code so</font>

667
00:26:36,570 --> 00:26:39,840
in different<font color="#E5E5E5"> source tree and then you</font>

668
00:26:37,649 --> 00:26:42,299
can configure maven<font color="#E5E5E5"> to have several</font>

669
00:26:39,840 --> 00:26:45,359
source trees or or actually<font color="#CCCCCC"> test trees</font>

670
00:26:42,299 --> 00:26:47,340
in this case so that<font color="#E5E5E5"> it actually runs</font>

671
00:26:45,359 --> 00:26:50,580
both your manual<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> plus the one</font>

672
00:26:47,340 --> 00:26:52,589
generated so that's that's<font color="#E5E5E5"> my</font><font color="#CCCCCC"> that's my</font>

673
00:26:50,580 --> 00:26:53,970
<font color="#E5E5E5">idea at the moment</font><font color="#CCCCCC"> as a as a strategy to</font>

674
00:26:52,589 --> 00:26:56,370
use<font color="#CCCCCC"> the spot</font>

675
00:26:53,970 --> 00:26:58,800
<font color="#E5E5E5">there are some other ideas</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> you</font>

676
00:26:56,370 --> 00:27:01,560
could imagine<font color="#E5E5E5"> yeah having a github</font>

677
00:26:58,800 --> 00:27:03,720
commit hook so<font color="#CCCCCC"> that it</font><font color="#E5E5E5"> actually does</font>

678
00:27:01,560 --> 00:27:06,120
<font color="#CCCCCC">some mutation</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> on the diff on</font><font color="#E5E5E5"> the</font>

679
00:27:03,720 --> 00:27:07,650
new stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> had been modified</font><font color="#CCCCCC"> not on</font>

680
00:27:06,120 --> 00:27:14,639
the whole thing<font color="#CCCCCC"> that would reduce</font><font color="#E5E5E5"> the</font>

681
00:27:07,650 --> 00:27:18,120
time it takes last one environment

682
00:27:14,640 --> 00:27:20,100
<font color="#E5E5E5">testing</font><font color="#CCCCCC"> so this is quite useful</font><font color="#E5E5E5"> I think</font>

683
00:27:18,120 --> 00:27:21,899
<font color="#CCCCCC">for a</font><font color="#E5E5E5"> lot of us actually I mean I'm</font>

684
00:27:20,100 --> 00:27:24,449
<font color="#CCCCCC">interested how</font><font color="#E5E5E5"> many of you have a</font>

685
00:27:21,900 --> 00:27:27,800
<font color="#E5E5E5">software that</font><font color="#CCCCCC"> needs</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be executed</font><font color="#E5E5E5"> or</font>

686
00:27:24,450 --> 00:27:30,450
<font color="#E5E5E5">verified to work on several environments</font>

687
00:27:27,800 --> 00:27:34,379
<font color="#E5E5E5">yeah not that many less than a thought</font>

688
00:27:30,450 --> 00:27:37,380
it's a bad but I would say<font color="#CCCCCC"> 20%</font><font color="#E5E5E5"> yeah in</font>

689
00:27:34,380 --> 00:27:39,930
our case<font color="#CCCCCC"> X wiki</font><font color="#E5E5E5"> runs in a</font><font color="#CCCCCC"> Soviet</font>

690
00:27:37,380 --> 00:27:43,200
container<font color="#E5E5E5"> it needs a database of course</font>

691
00:27:39,930 --> 00:27:46,920
there's no s it runs in the<font color="#E5E5E5"> browser</font><font color="#CCCCCC"> so</font>

692
00:27:43,200 --> 00:27:49,230
we<font color="#CCCCCC"> have a big combination</font><font color="#E5E5E5"> on and</font>

693
00:27:46,920 --> 00:27:52,170
actually<font color="#CCCCCC"> can even</font><font color="#E5E5E5"> run in a cluster mode</font>

694
00:27:49,230 --> 00:27:54,210
so you can be close to not clustered<font color="#CCCCCC"> it</font>

695
00:27:52,170 --> 00:27:56,460
can have an<font color="#E5E5E5"> OpenOffice or Libre Office</font>

696
00:27:54,210 --> 00:27:59,190
server attached to it if you<font color="#E5E5E5"> want to</font>

697
00:27:56,460 --> 00:28:00,540
import<font color="#CCCCCC"> office documents in the wiki</font><font color="#E5E5E5"> so</font>

698
00:27:59,190 --> 00:28:02,310
there<font color="#E5E5E5"> are a</font><font color="#CCCCCC"> lot of variation of</font>

699
00:28:00,540 --> 00:28:03,960
environments<font color="#E5E5E5"> and we want to would like</font>

700
00:28:02,310 --> 00:28:06,300
to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that we test those at the</font>

701
00:28:03,960 --> 00:28:08,100
<font color="#CCCCCC">moment before we</font><font color="#E5E5E5"> did this we</font><font color="#CCCCCC"> were</font>

702
00:28:06,300 --> 00:28:09,780
testing only<font color="#CCCCCC"> a single one</font><font color="#E5E5E5"> automatically</font>

703
00:28:08,100 --> 00:28:12,419
and then from time to time people<font color="#CCCCCC"> were</font>

704
00:28:09,780 --> 00:28:15,600
testing manually stuff but we are no no

705
00:28:12,420 --> 00:28:19,590
no coherent way of doing that so<font color="#CCCCCC"> the</font>

706
00:28:15,600 --> 00:28:21,870
idea<font color="#CCCCCC"> is</font><font color="#E5E5E5"> to use docker here and to run</font>

707
00:28:19,590 --> 00:28:24,540
the functional<font color="#CCCCCC"> test that</font><font color="#E5E5E5"> exists on</font>

708
00:28:21,870 --> 00:28:27,120
various environments built by docker<font color="#CCCCCC"> ok</font>

709
00:28:24,540 --> 00:28:30,420
when<font color="#E5E5E5"> I when we wanted to do this we</font>

710
00:28:27,120 --> 00:28:32,969
thought initially we<font color="#CCCCCC"> thought about using</font>

711
00:28:30,420 --> 00:28:35,130
<font color="#CCCCCC">the darker integration in the CI in</font>

712
00:28:32,970 --> 00:28:37,830
Jenkins<font color="#E5E5E5"> we thought that would be a good</font>

713
00:28:35,130 --> 00:28:41,670
idea<font color="#E5E5E5"> because it has a good integration</font>

714
00:28:37,830 --> 00:28:45,110
<font color="#E5E5E5">but we we drop</font><font color="#CCCCCC"> that and the reason we</font>

715
00:28:41,670 --> 00:28:48,390
dropped it<font color="#E5E5E5"> is because we wanted the</font>

716
00:28:45,110 --> 00:28:50,969
<font color="#E5E5E5">developers on their own machine to be</font>

717
00:28:48,390 --> 00:28:52,290
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> run the various environment when</font>

718
00:28:50,970 --> 00:28:54,150
there is a problem<font color="#E5E5E5"> when there is a bug</font>

719
00:28:52,290 --> 00:28:56,010
someone reports an issue on an issue

720
00:28:54,150 --> 00:28:59,070
tracker in<font color="#CCCCCC"> the given environment we want</font>

721
00:28:56,010 --> 00:29:00,900
<font color="#E5E5E5">to be able</font><font color="#CCCCCC"> to reproduce that locally to</font>

722
00:28:59,070 --> 00:29:03,179
put to<font color="#CCCCCC"> put the break bones and test it</font>

723
00:29:00,900 --> 00:29:07,410
locally<font color="#E5E5E5"> so we drop the idea of doing it</font>

724
00:29:03,180 --> 00:29:09,000
<font color="#CCCCCC">on the CI we want we move to the</font><font color="#E5E5E5"> idea</font>

725
00:29:07,410 --> 00:29:12,090
adding the docker integration inside

726
00:29:09,000 --> 00:29:15,840
<font color="#E5E5E5">them build itself in the maven build in</font>

727
00:29:12,090 --> 00:29:17,730
our case and we<font color="#CCCCCC"> found</font><font color="#E5E5E5"> a very</font><font color="#CCCCCC"> nice maven</font>

728
00:29:15,840 --> 00:29:20,939
plug-in called<font color="#E5E5E5"> fabricate docker maven</font>

729
00:29:17,730 --> 00:29:22,770
<font color="#E5E5E5">plug-in</font><font color="#CCCCCC"> BMP short and also</font><font color="#E5E5E5"> fabricate</font>

730
00:29:20,940 --> 00:29:24,240
guys<font color="#E5E5E5"> they have their own software they</font>

731
00:29:22,770 --> 00:29:26,520
<font color="#CCCCCC">can enough</font><font color="#E5E5E5"> to have to develop some</font>

732
00:29:24,240 --> 00:29:28,500
generic tools such as this<font color="#E5E5E5"> one</font><font color="#CCCCCC"> that</font>

733
00:29:26,520 --> 00:29:30,960
<font color="#CCCCCC">works</font><font color="#E5E5E5"> very well and which allows you to</font>

734
00:29:28,500 --> 00:29:34,800
<font color="#E5E5E5">create to build a docker image from your</font>

735
00:29:30,960 --> 00:29:37,980
<font color="#E5E5E5">build but also to start and stop it so</font>

736
00:29:34,800 --> 00:29:41,430
I'm going<font color="#E5E5E5"> to explain quickly</font><font color="#CCCCCC"> how we do</font>

737
00:29:37,980 --> 00:29:43,920
<font color="#E5E5E5">that here</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we have a module we have a</font>

738
00:29:41,430 --> 00:29:47,910
first module<font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> wiki in</font><font color="#E5E5E5"> our build</font>

739
00:29:43,920 --> 00:29:52,650
where we generate<font color="#CCCCCC"> the an image a docker</font>

740
00:29:47,910 --> 00:29:54,540
image with this<font color="#CCCCCC"> plug-in Forex wiki so</font>

741
00:29:52,650 --> 00:29:57,030
that's for example<font color="#E5E5E5"> in this</font><font color="#CCCCCC"> image you</font>

742
00:29:54,540 --> 00:30:00,840
<font color="#E5E5E5">have got for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> Tomcat and</font><font color="#CCCCCC"> xwiki</font>

743
00:29:57,030 --> 00:30:04,290
<font color="#E5E5E5">deployed in Tomcat so that's the that's</font>

744
00:30:00,840 --> 00:30:06,689
<font color="#CCCCCC">the box at the top</font><font color="#E5E5E5"> and then so so we</font>

745
00:30:04,290 --> 00:30:09,120
generate<font color="#E5E5E5"> this image so when you run it</font>

746
00:30:06,690 --> 00:30:11,130
locally<font color="#E5E5E5"> you are you run the build that</font>

747
00:30:09,120 --> 00:30:15,389
means in your docker in your local

748
00:30:11,130 --> 00:30:17,130
docker registry<font color="#CCCCCC"> you will have this image</font>

749
00:30:15,390 --> 00:30:18,750
built and then when you go to<font color="#E5E5E5"> a</font>

750
00:30:17,130 --> 00:30:20,850
functional test module and you run<font color="#CCCCCC"> that</font>

751
00:30:18,750 --> 00:30:25,110
functional test module<font color="#E5E5E5"> we use these</font><font color="#CCCCCC"> DMP</font>

752
00:30:20,850 --> 00:30:28,139
<font color="#CCCCCC">plug-in to actually start</font><font color="#E5E5E5"> that that that</font>

753
00:30:25,110 --> 00:30:30,899
container based<font color="#E5E5E5"> on that image</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> we</font>

754
00:30:28,140 --> 00:30:33,750
<font color="#E5E5E5">actually start by running</font><font color="#CCCCCC"> at an</font><font color="#E5E5E5"> image</font>

755
00:30:30,900 --> 00:30:35,640
for a<font color="#CCCCCC"> data base it could</font><font color="#E5E5E5"> be by sequel or</font>

756
00:30:33,750 --> 00:30:40,110
Postgres or others then<font color="#E5E5E5"> we run that</font>

757
00:30:35,640 --> 00:30:41,850
image<font color="#CCCCCC"> Forex wiki</font><font color="#E5E5E5"> in Tomcat and and let's</font>

758
00:30:40,110 --> 00:30:44,389
forget at<font color="#E5E5E5"> the moment the bottom just by</font>

759
00:30:41,850 --> 00:30:48,449
<font color="#CCCCCC">having</font><font color="#E5E5E5"> that already we are able to</font>

760
00:30:44,390 --> 00:30:50,250
<font color="#E5E5E5">execute the functional test against this</font>

761
00:30:48,450 --> 00:30:53,670
running instance of<font color="#E5E5E5"> X wiki that has</font>

762
00:30:50,250 --> 00:30:55,110
everything it needs<font color="#E5E5E5"> to</font><font color="#CCCCCC"> execute</font><font color="#E5E5E5"> but we</font>

763
00:30:53,670 --> 00:30:59,580
wanted<font color="#E5E5E5"> to go further than that</font><font color="#CCCCCC"> and be</font>

764
00:30:55,110 --> 00:31:02,610
able also to change the<font color="#CCCCCC"> browsers</font><font color="#E5E5E5"> type of</font>

765
00:30:59,580 --> 00:31:04,590
browsers testing in chrome in Firefox in

766
00:31:02,610 --> 00:31:08,040
Safari in various in various browsers

767
00:31:04,590 --> 00:31:10,199
and various versions of them the problem

768
00:31:08,040 --> 00:31:12,210
is that we using selenium<font color="#CCCCCC"> and it is</font>

769
00:31:10,200 --> 00:31:15,390
selenium<font color="#CCCCCC"> that actually starts</font><font color="#E5E5E5"> the</font>

770
00:31:12,210 --> 00:31:17,070
<font color="#CCCCCC">browser ok so this is in the in the</font>

771
00:31:15,390 --> 00:31:19,920
client space I mean<font color="#E5E5E5"> in the in the build</font>

772
00:31:17,070 --> 00:31:23,520
space so we needed a way<font color="#E5E5E5"> so what we</font>

773
00:31:19,920 --> 00:31:26,400
did is we<font color="#E5E5E5"> created a docker another</font>

774
00:31:23,520 --> 00:31:28,950
docker image<font color="#E5E5E5"> that depends on the</font>

775
00:31:26,400 --> 00:31:31,800
official<font color="#E5E5E5"> maven docker image</font><font color="#CCCCCC"> to which we</font>

776
00:31:28,950 --> 00:31:36,690
added<font color="#CCCCCC"> Firefox and</font><font color="#E5E5E5"> Chrome on the various</font>

777
00:31:31,800 --> 00:31:38,340
browsers<font color="#CCCCCC"> ok and when we run the build we</font>

778
00:31:36,690 --> 00:31:40,110
start in addition to starting<font color="#E5E5E5"> the two</font>

779
00:31:38,340 --> 00:31:43,919
other docker containers we also start

780
00:31:40,110 --> 00:31:46,500
with<font color="#E5E5E5"> this third one and</font><font color="#CCCCCC"> we're telling so</font>

781
00:31:43,920 --> 00:31:48,810
we are inside maven<font color="#E5E5E5"> it starts the three</font>

782
00:31:46,500 --> 00:31:51,690
containers<font color="#E5E5E5"> and there is the</font><font color="#CCCCCC"> moved of</font><font color="#E5E5E5"> the</font>

783
00:31:48,810 --> 00:31:53,970
container containing maven itself so we

784
00:31:51,690 --> 00:31:57,840
we tell this one<font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> execute</font>

785
00:31:53,970 --> 00:32:00,480
<font color="#E5E5E5">maven and run the</font><font color="#CCCCCC"> tests so</font><font color="#E5E5E5"> to run the</font>

786
00:31:57,840 --> 00:32:03,840
<font color="#CCCCCC">test so inside that</font><font color="#E5E5E5"> container</font><font color="#CCCCCC"> okay which</font>

787
00:32:00,480 --> 00:32:05,640
has the various browsers<font color="#E5E5E5"> so the way to</font>

788
00:32:03,840 --> 00:32:09,810
do that is we map<font color="#E5E5E5"> for those who have</font>

789
00:32:05,640 --> 00:32:12,630
used docker<font color="#E5E5E5"> we map the</font><font color="#CCCCCC"> a directory</font><font color="#E5E5E5"> or</font>

790
00:32:09,810 --> 00:32:15,540
inside that container to<font color="#E5E5E5"> the current</font>

791
00:32:12,630 --> 00:32:17,610
<font color="#CCCCCC">directory on the hosts file system so</font>

792
00:32:15,540 --> 00:32:19,889
that it can see the<font color="#CCCCCC"> build the maven</font><font color="#E5E5E5"> they</font>

793
00:32:17,610 --> 00:32:23,399
load the<font color="#CCCCCC"> poem and all the</font><font color="#E5E5E5"> tests they are</font>

794
00:32:19,890 --> 00:32:25,410
visible<font color="#E5E5E5"> from the container</font><font color="#CCCCCC"> okay so and</font>

795
00:32:23,400 --> 00:32:28,820
we run maven and<font color="#E5E5E5"> what we also do is we</font>

796
00:32:25,410 --> 00:32:32,700
<font color="#E5E5E5">also map your local maven repository</font>

797
00:32:28,820 --> 00:32:33,840
<font color="#E5E5E5">directory to that container because if</font>

798
00:32:32,700 --> 00:32:36,930
you<font color="#E5E5E5"> don't do that and it will download</font>

799
00:32:33,840 --> 00:32:41,459
<font color="#CCCCCC">we download</font><font color="#E5E5E5"> of the earth and</font><font color="#CCCCCC"> we'll take</font>

800
00:32:36,930 --> 00:32:44,130
forever<font color="#E5E5E5"> so by doing that it's a bit</font>

801
00:32:41,460 --> 00:32:46,800
complex<font color="#E5E5E5"> conceptually but it allows us</font><font color="#CCCCCC"> to</font>

802
00:32:44,130 --> 00:32:49,230
<font color="#E5E5E5">control all the environments up to the</font>

803
00:32:46,800 --> 00:32:50,940
the client-side environment with the

804
00:32:49,230 --> 00:32:52,890
browser<font color="#E5E5E5"> so there are some</font><font color="#CCCCCC"> issues with</font>

805
00:32:50,940 --> 00:32:54,780
<font color="#CCCCCC">this I have to admit I'm still working</font>

806
00:32:52,890 --> 00:32:56,940
<font color="#E5E5E5">on this one</font><font color="#CCCCCC"> I have an</font><font color="#E5E5E5"> issue where I'm</font>

807
00:32:54,780 --> 00:32:59,460
<font color="#E5E5E5">getting from time to time</font><font color="#CCCCCC"> a very slow</font>

808
00:32:56,940 --> 00:33:03,420
execution when I'm running maven inside

809
00:32:59,460 --> 00:33:07,110
maven thing I<font color="#E5E5E5"> don't know exactly</font><font color="#CCCCCC"> why yet</font>

810
00:33:03,420 --> 00:33:09,900
have to<font color="#E5E5E5"> debug</font><font color="#CCCCCC"> that and I it ends up</font><font color="#E5E5E5"> in</font>

811
00:33:07,110 --> 00:33:11,550
some out<font color="#E5E5E5"> of memory thing and I have no</font>

812
00:33:09,900 --> 00:33:14,250
idea<font color="#CCCCCC"> why so if you've experienced</font><font color="#E5E5E5"> this</font>

813
00:33:11,550 --> 00:33:16,129
I'm<font color="#CCCCCC"> very interested to hear about it so</font>

814
00:33:14,250 --> 00:33:18,300
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> idea that's the strategy</font>

815
00:33:16,130 --> 00:33:19,740
<font color="#E5E5E5">so we've succeeded in</font><font color="#CCCCCC"> having the first</font>

816
00:33:18,300 --> 00:33:21,750
<font color="#E5E5E5">part and</font><font color="#CCCCCC"> we're still</font><font color="#E5E5E5"> working on the</font>

817
00:33:19,740 --> 00:33:24,990
second part with the browser controlling

818
00:33:21,750 --> 00:33:27,150
the browser and<font color="#CCCCCC"> that allows us to</font><font color="#E5E5E5"> have a</font>

819
00:33:24,990 --> 00:33:30,240
<font color="#E5E5E5">different profiles in the bill to run</font>

820
00:33:27,150 --> 00:33:33,260
various configurations so on my sequel

821
00:33:30,240 --> 00:33:35,370
on<font color="#E5E5E5"> port</font><font color="#CCCCCC"> grace we see such container etc</font>

822
00:33:33,260 --> 00:33:37,050
you can't do all of them because<font color="#E5E5E5"> that's</font>

823
00:33:35,370 --> 00:33:42,719
too long<font color="#E5E5E5"> so you have to focus on on the</font>

824
00:33:37,050 --> 00:33:45,750
<font color="#E5E5E5">subset of those so that's a that's about</font>

825
00:33:42,720 --> 00:33:47,730
it so we<font color="#CCCCCC"> experiment we experimenting and</font>

826
00:33:45,750 --> 00:33:49,590
we're trying to progress and<font color="#E5E5E5"> push the</font>

827
00:33:47,730 --> 00:33:52,740
limit every year<font color="#E5E5E5"> trying to discover</font><font color="#CCCCCC"> new</font>

828
00:33:49,590 --> 00:33:55,189
stuff<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are other things we're not</font>

829
00:33:52,740 --> 00:33:57,360
testing<font color="#E5E5E5"> yet one big big one is</font>

830
00:33:55,190 --> 00:33:59,130
<font color="#E5E5E5">performance and stress testing we do it</font>

831
00:33:57,360 --> 00:34:01,409
that we're<font color="#CCCCCC"> doing that in an ad hoc</font>

832
00:33:59,130 --> 00:34:03,750
manner<font color="#E5E5E5"> from time to time but</font><font color="#CCCCCC"> we would</font>

833
00:34:01,410 --> 00:34:06,090
really love to<font color="#E5E5E5"> have that as an automated</font>

834
00:34:03,750 --> 00:34:09,060
process<font color="#E5E5E5"> and something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be</font>

835
00:34:06,090 --> 00:34:11,159
automatically checked regularly<font color="#CCCCCC"> that</font>

836
00:34:09,060 --> 00:34:13,860
<font color="#E5E5E5">would be nice usability testing also is</font>

837
00:34:11,159 --> 00:34:15,480
<font color="#E5E5E5">something not easy to do</font><font color="#CCCCCC"> we would</font><font color="#E5E5E5"> love</font>

838
00:34:13,860 --> 00:34:18,330
<font color="#E5E5E5">to work on something so we do that</font><font color="#CCCCCC"> with</font>

839
00:34:15,480 --> 00:34:21,540
<font color="#CCCCCC">some experiments</font><font color="#E5E5E5"> but we don't do it in</font>

840
00:34:18,330 --> 00:34:23,569
an organized<font color="#CCCCCC"> fashion not</font><font color="#E5E5E5"> automated way</font>

841
00:34:21,540 --> 00:34:27,870
for sure and I'm sure there<font color="#E5E5E5"> are other</font>

842
00:34:23,570 --> 00:34:29,850
other things<font color="#E5E5E5"> too so thank you</font><font color="#CCCCCC"> very much</font>

843
00:34:27,870 --> 00:34:57,810
and<font color="#CCCCCC"> now the</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> if we've got 15</font>

844
00:34:29,850 --> 00:35:02,730
minutes<font color="#CCCCCC"> for questions thank</font><font color="#E5E5E5"> you which</font>

845
00:34:57,810 --> 00:35:04,830
kind of invitation<font color="#E5E5E5"> one ah now yeah the</font>

846
00:35:02,730 --> 00:35:07,770
question is<font color="#E5E5E5"> do I know other mutation</font>

847
00:35:04,830 --> 00:35:09,569
tool that exists<font color="#E5E5E5"> but in the in C++</font><font color="#CCCCCC"> yeah</font>

848
00:35:07,770 --> 00:35:20,550
and no I<font color="#E5E5E5"> don't know this world at all</font>

849
00:35:09,570 --> 00:35:22,110
<font color="#E5E5E5">actually I'm sorry I didn't even know it</font>

850
00:35:20,550 --> 00:35:25,500
<font color="#CCCCCC">was still existing to be honest because</font>

851
00:35:22,110 --> 00:35:30,930
I remember I met<font color="#E5E5E5"> the make the</font><font color="#CCCCCC"> guys</font><font color="#E5E5E5"> of a</font>

852
00:35:25,500 --> 00:35:33,030
guitar<font color="#CCCCCC"> ten more</font><font color="#E5E5E5"> 12 years</font><font color="#CCCCCC"> ago and I try</font>

853
00:35:30,930 --> 00:35:34,290
<font color="#E5E5E5">to get a license there because it was</font>

854
00:35:33,030 --> 00:35:37,020
<font color="#E5E5E5">not an open-source project</font><font color="#CCCCCC"> I don't know</font>

855
00:35:34,290 --> 00:35:39,390
if it<font color="#E5E5E5"> is now okay but the license was</font>

856
00:35:37,020 --> 00:35:41,550
lasting only<font color="#E5E5E5"> like one</font><font color="#CCCCCC"> or two weeks</font><font color="#E5E5E5"> like</font>

857
00:35:39,390 --> 00:35:43,640
<font color="#CCCCCC">I</font><font color="#E5E5E5"> didn't get</font><font color="#CCCCCC"> to explore more</font><font color="#E5E5E5"> so I don't</font>

858
00:35:41,550 --> 00:35:43,640
know

859
00:35:56,320 --> 00:36:01,670
it doesn't get reintroduced<font color="#CCCCCC"> how do</font><font color="#E5E5E5"> I</font>

860
00:35:59,030 --> 00:36:03,710
measure so the question is how do we

861
00:36:01,670 --> 00:36:05,780
<font color="#CCCCCC">ensure that if we remove and the</font>

862
00:36:03,710 --> 00:36:08,300
deprecated method move it out<font color="#E5E5E5"> that it</font>

863
00:36:05,780 --> 00:36:10,040
<font color="#E5E5E5">doesn't get reintroduced later on there</font>

864
00:36:08,300 --> 00:36:13,460
<font color="#E5E5E5">is no specific thing except that we do</font>

865
00:36:10,040 --> 00:36:15,529
<font color="#E5E5E5">code reviews regularly and it would be</font>

866
00:36:13,460 --> 00:36:17,180
it would be I think<font color="#E5E5E5"> quite quickly in our</font>

867
00:36:15,530 --> 00:36:19,970
case quite quickly<font color="#E5E5E5"> noticed if someone</font>

868
00:36:17,180 --> 00:36:21,649
was<font color="#CCCCCC"> doing this but</font><font color="#E5E5E5"> no I mean</font><font color="#CCCCCC"> and</font>

869
00:36:19,970 --> 00:36:23,060
<font color="#E5E5E5">sometimes</font><font color="#CCCCCC"> it could be a good idea maybe</font>

870
00:36:21,650 --> 00:36:26,420
you've made a mistake<font color="#CCCCCC"> and</font><font color="#E5E5E5"> actually it</font>

871
00:36:23,060 --> 00:36:28,009
was<font color="#E5E5E5"> a good idea it could be some good</font>

872
00:36:26,420 --> 00:36:30,109
idea for<font color="#E5E5E5"> that or</font><font color="#CCCCCC"> bad one so I guess</font>

873
00:36:28,010 --> 00:36:38,060
there is no<font color="#CCCCCC"> silver bullet there or</font>

874
00:36:30,109 --> 00:36:43,299
<font color="#CCCCCC">actually I don't</font><font color="#E5E5E5"> have one yes resources</font>

875
00:36:38,060 --> 00:36:43,299
of which one

876
00:36:44,980 --> 00:36:50,079
yes<font color="#E5E5E5"> yes of</font><font color="#CCCCCC"> course I will no xwiki</font><font color="#E5E5E5"> is is</font>

877
00:36:48,589 --> 00:36:52,520
<font color="#E5E5E5">completely open source</font><font color="#CCCCCC"> so you've got</font>

878
00:36:50,079 --> 00:36:54,950
<font color="#E5E5E5">actually I'm now working on this in the</font>

879
00:36:52,520 --> 00:36:56,270
branch<font color="#E5E5E5"> effects wiki because because I</font>

880
00:36:54,950 --> 00:36:57,589
want it<font color="#E5E5E5"> to be completely working</font>

881
00:36:56,270 --> 00:37:00,500
<font color="#CCCCCC">especially the pattern</font><font color="#E5E5E5"> I mentioned that</font>

882
00:36:57,589 --> 00:37:02,029
<font color="#CCCCCC">wearisome issue but yes it's completely</font>

883
00:37:00,500 --> 00:37:04,790
I can put the<font color="#E5E5E5"> link somewhere if you're</font>

884
00:37:02,030 --> 00:37:06,890
interested or you can<font color="#CCCCCC"> contact me</font><font color="#E5E5E5"> on the</font>

885
00:37:04,790 --> 00:37:09,800
slide I have some some information about

886
00:37:06,890 --> 00:37:15,259
me here<font color="#E5E5E5"> so if you get those like you can</font>

887
00:37:09,800 --> 00:37:16,790
get them online from Penta barf yes<font color="#E5E5E5"> no</font>

888
00:37:15,260 --> 00:37:25,300
<font color="#E5E5E5">it's so many</font><font color="#CCCCCC"> main</font><font color="#E5E5E5"> sources of the project</font>

889
00:37:16,790 --> 00:37:25,300
in<font color="#E5E5E5"> the branch yeah yes yes</font>

890
00:37:27,620 --> 00:37:44,150
yes<font color="#CCCCCC"> okay yeah</font><font color="#E5E5E5"> so the question</font><font color="#CCCCCC"> is in the</font>

891
00:37:40,590 --> 00:37:46,410
environment<font color="#E5E5E5"> testing solution strategy</font>

892
00:37:44,150 --> 00:37:48,420
<font color="#CCCCCC">maybe sometimes the database needs to</font><font color="#E5E5E5"> be</font>

893
00:37:46,410 --> 00:37:52,259
<font color="#CCCCCC">in a given state</font><font color="#E5E5E5"> so how do we handle</font>

894
00:37:48,420 --> 00:37:55,020
<font color="#E5E5E5">that</font><font color="#CCCCCC"> in in our case</font><font color="#E5E5E5"> we start with the</font>

895
00:37:52,260 --> 00:37:56,910
<font color="#CCCCCC">empty database</font><font color="#E5E5E5"> it's actually</font><font color="#CCCCCC"> it's what</font>

896
00:37:55,020 --> 00:38:01,530
we provision it I didn't<font color="#CCCCCC"> mention it but</font>

897
00:37:56,910 --> 00:38:03,440
we<font color="#CCCCCC"> provision it</font><font color="#E5E5E5"> each each functional</font>

898
00:38:01,530 --> 00:38:06,900
test or which set of functional<font color="#CCCCCC"> tests</font>

899
00:38:03,440 --> 00:38:10,950
<font color="#CCCCCC">needs a set of extensions</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> xwiki</font><font color="#E5E5E5"> for</font>

900
00:38:06,900 --> 00:38:12,960
to work and we they<font color="#CCCCCC"> are provision in our</font>

901
00:38:10,950 --> 00:38:16,020
build actually<font color="#E5E5E5"> you see when I</font><font color="#CCCCCC"> said I</font>

902
00:38:12,960 --> 00:38:18,840
created an extra docker image containing

903
00:38:16,020 --> 00:38:21,030
maven and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> browser's actually</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> we</font>

904
00:38:18,840 --> 00:38:23,820
run this<font color="#E5E5E5"> when we execute maven on that</font>

905
00:38:21,030 --> 00:38:27,330
inside<font color="#CCCCCC"> that image</font><font color="#E5E5E5"> we actually also have</font>

906
00:38:23,820 --> 00:38:30,420
<font color="#E5E5E5">a plug-in that</font><font color="#CCCCCC"> we run for provisioning</font>

907
00:38:27,330 --> 00:38:32,400
<font color="#E5E5E5">the</font><font color="#CCCCCC"> database at the</font><font color="#E5E5E5"> time so it</font><font color="#CCCCCC"> starts</font>

908
00:38:30,420 --> 00:38:33,870
with<font color="#CCCCCC"> a clean</font><font color="#E5E5E5"> one and we provision it and</font>

909
00:38:32,400 --> 00:38:36,480
we run the<font color="#E5E5E5"> test on</font><font color="#CCCCCC"> the provision</font>

910
00:38:33,870 --> 00:38:38,549
database<font color="#E5E5E5"> we don't have anything specific</font>

911
00:38:36,480 --> 00:38:41,120
we<font color="#E5E5E5"> we don't</font><font color="#CCCCCC"> have anything specific there</font>

912
00:38:38,550 --> 00:38:45,690
<font color="#E5E5E5">but if you were to do</font><font color="#CCCCCC"> it using</font><font color="#E5E5E5"> docker</font>

913
00:38:41,120 --> 00:38:48,060
<font color="#E5E5E5">you could you could imagine</font><font color="#CCCCCC"> saving the</font>

914
00:38:45,690 --> 00:38:51,330
<font color="#CCCCCC">state in another</font><font color="#E5E5E5"> image for</font><font color="#CCCCCC"> example and</font>

915
00:38:48,060 --> 00:38:52,560
restoring<font color="#E5E5E5"> so that it be</font><font color="#CCCCCC"> very fast</font><font color="#E5E5E5"> so if</font>

916
00:38:51,330 --> 00:38:54,450
you have a test that changes the<font color="#CCCCCC"> set</font><font color="#E5E5E5"> of</font>

917
00:38:52,560 --> 00:38:56,310
<font color="#E5E5E5">the</font><font color="#CCCCCC"> database and you want to go back to</font>

918
00:38:54,450 --> 00:38:58,020
the<font color="#E5E5E5"> previous one since with docker it's</font>

919
00:38:56,310 --> 00:39:00,029
very<font color="#E5E5E5"> very fast to actually start the</font>

920
00:38:58,020 --> 00:39:03,420
container you could<font color="#E5E5E5"> actually save that</font>

921
00:39:00,030 --> 00:39:06,270
image image somewhere<font color="#E5E5E5"> and and we we</font>

922
00:39:03,420 --> 00:39:12,000
initialize it in<font color="#E5E5E5"> either container for</font>

923
00:39:06,270 --> 00:39:15,870
example<font color="#E5E5E5"> I guess I have not done that no</font>

924
00:39:12,000 --> 00:39:18,620
we're<font color="#E5E5E5"> not so the question is whether we</font>

925
00:39:15,870 --> 00:39:24,410
use<font color="#CCCCCC"> stored procedures the answer is no</font>

926
00:39:18,620 --> 00:39:24,410
yes yeah now we don't do<font color="#E5E5E5"> that yeah yes</font>

927
00:39:25,480 --> 00:39:40,200
sorry<font color="#CCCCCC"> so hot so the question is how do</font>

928
00:39:37,810 --> 00:39:52,119
we<font color="#E5E5E5"> test upgrades</font><font color="#CCCCCC"> right</font>

929
00:39:40,200 --> 00:39:54,368
upgrade<font color="#CCCCCC"> path</font><font color="#E5E5E5"> yes sorry yes yes yeah yeah</font>

930
00:39:52,119 --> 00:39:56,950
<font color="#CCCCCC">okay real not an</font><font color="#E5E5E5"> empty one great one</font>

931
00:39:54,369 --> 00:39:58,780
with some data<font color="#E5E5E5"> so how do</font><font color="#CCCCCC"> i bread how do</font>

932
00:39:56,950 --> 00:40:00,220
we test when<font color="#CCCCCC"> we when I mean I</font><font color="#E5E5E5"> hold with</font>

933
00:39:58,780 --> 00:40:02,590
this<font color="#E5E5E5"> upgrades basically that upgrades</font>

934
00:40:00,220 --> 00:40:04,029
<font color="#E5E5E5">for people are going to work fine</font><font color="#CCCCCC"> the</font>

935
00:40:02,590 --> 00:40:08,500
answer is we<font color="#CCCCCC"> don't do</font><font color="#E5E5E5"> that automatically</font>

936
00:40:04,030 --> 00:40:11,530
<font color="#E5E5E5">I'm sorry we don't do it yet but that's</font>

937
00:40:08,500 --> 00:40:13,810
<font color="#E5E5E5">something we do it manually</font><font color="#CCCCCC"> we have a</font>

938
00:40:11,530 --> 00:40:16,210
release managers when we do releases so

939
00:40:13,810 --> 00:40:19,240
which with<font color="#CCCCCC"> paestum upgrades</font><font color="#E5E5E5"> but we're</font>

940
00:40:16,210 --> 00:40:20,830
far<font color="#E5E5E5"> from being perfect there we</font><font color="#CCCCCC"> rely I</font>

941
00:40:19,240 --> 00:40:22,359
<font color="#E5E5E5">would say I would say</font><font color="#CCCCCC"> we rely on the</font>

942
00:40:20,830 --> 00:40:23,410
community<font color="#CCCCCC"> the</font><font color="#E5E5E5"> open source community to</font>

943
00:40:22,359 --> 00:40:26,770
tell us when<font color="#E5E5E5"> there are problems</font><font color="#CCCCCC"> there</font>

944
00:40:23,410 --> 00:40:28,299
and<font color="#E5E5E5"> when we fix them</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> it does happen</font>

945
00:40:26,770 --> 00:40:30,730
yes<font color="#E5E5E5"> it does</font><font color="#CCCCCC"> happen that</font><font color="#E5E5E5"> there are cases</font>

946
00:40:28,300 --> 00:40:32,230
<font color="#E5E5E5">where it's not work</font><font color="#CCCCCC"> it's not perfect and</font>

947
00:40:30,730 --> 00:40:33,940
<font color="#CCCCCC">we have to fix things so</font><font color="#E5E5E5"> it would be</font>

948
00:40:32,230 --> 00:40:37,470
nice<font color="#CCCCCC"> if we had something automated I</font>

949
00:40:33,940 --> 00:40:41,290
think that would be<font color="#E5E5E5"> the next step yes</font>

950
00:40:37,470 --> 00:40:43,240
exactly<font color="#CCCCCC"> exactly but first we needed to</font>

951
00:40:41,290 --> 00:40:44,680
have this working<font color="#E5E5E5"> fine first because we</font>

952
00:40:43,240 --> 00:40:50,430
need this as the basis in order<font color="#CCCCCC"> to move</font>

953
00:40:44,680 --> 00:40:50,430
<font color="#CCCCCC">to this</font><font color="#E5E5E5"> level I think yes question</font>

954
00:41:00,710 --> 00:41:04,870
[Laughter]

955
00:41:10,320 --> 00:41:14,170
[Laughter]

956
00:41:45,440 --> 00:41:49,410
I'm not sure I understand fully<font color="#CCCCCC"> what I</font>

957
00:41:47,820 --> 00:41:53,520
can<font color="#E5E5E5"> tell you know if I'm going to answer</font>

958
00:41:49,410 --> 00:41:57,299
<font color="#E5E5E5">your question you tell me</font><font color="#CCCCCC"> what we before</font>

959
00:41:53,520 --> 00:41:59,370
we were<font color="#CCCCCC"> using doctor thing we we</font><font color="#E5E5E5"> needed</font>

960
00:41:57,300 --> 00:42:02,820
the developer needed to the browsers

961
00:41:59,370 --> 00:42:04,080
installed on this machine<font color="#E5E5E5"> and and and we</font>

962
00:42:02,820 --> 00:42:05,700
could<font color="#E5E5E5"> run it because we were able to</font>

963
00:42:04,080 --> 00:42:09,650
generate<font color="#E5E5E5"> an environment very simple</font>

964
00:42:05,700 --> 00:42:11,910
environment<font color="#CCCCCC"> with an hsqldb embedded and</font>

965
00:42:09,650 --> 00:42:15,170
and

966
00:42:11,910 --> 00:42:17,910
<font color="#CCCCCC">a jetty jetty container so the no docker</font>

967
00:42:15,170 --> 00:42:19,890
<font color="#CCCCCC">but</font><font color="#E5E5E5"> we so the need was</font><font color="#CCCCCC"> defied the</font>

968
00:42:17,910 --> 00:42:21,359
browser installed<font color="#E5E5E5"> now we move this</font>

969
00:42:19,890 --> 00:42:23,038
requirements to not having<font color="#CCCCCC"> the browser</font>

970
00:42:21,359 --> 00:42:25,049
requiring any browser installed but

971
00:42:23,039 --> 00:42:27,150
having to have docker installed on the

972
00:42:25,049 --> 00:42:41,038
<font color="#CCCCCC">machine that the only thing</font><font color="#E5E5E5"> that we need</font>

973
00:42:27,150 --> 00:42:42,599
is<font color="#CCCCCC"> having doctor install not yet yes at</font>

974
00:42:41,039 --> 00:42:44,280
<font color="#E5E5E5">the moment</font><font color="#CCCCCC"> yes but maybe</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> are maybe</font>

975
00:42:42,599 --> 00:42:46,680
we'll hit that<font color="#E5E5E5"> problem later on when we</font>

976
00:42:44,280 --> 00:42:48,210
<font color="#CCCCCC">want to test</font><font color="#E5E5E5"> more complex stuff</font><font color="#CCCCCC"> and in</font>

977
00:42:46,680 --> 00:42:52,589
that<font color="#E5E5E5"> case maybe it would be nice to move</font>

978
00:42:48,210 --> 00:42:54,329
through the to the CI for that yeah<font color="#E5E5E5"> but</font>

979
00:42:52,589 --> 00:42:56,460
the CI justice<font color="#E5E5E5"> information</font><font color="#CCCCCC"> CI the CI</font>

980
00:42:54,329 --> 00:42:58,589
does run since it's in part of the bill

981
00:42:56,460 --> 00:43:01,339
now it runs locally<font color="#CCCCCC"> but it also runs</font><font color="#E5E5E5"> on</font>

982
00:42:58,589 --> 00:43:01,339
the CI of<font color="#E5E5E5"> course</font>

983
00:43:20,790 --> 00:43:26,590
yeah I<font color="#CCCCCC"> didn't initially I wanted to have</font>

984
00:43:24,940 --> 00:43:28,420
most<font color="#CCCCCC"> lights</font><font color="#E5E5E5"> on explaining this part but</font>

985
00:43:26,590 --> 00:43:36,100
the timing was too<font color="#E5E5E5"> short you need to do</font>

986
00:43:28,420 --> 00:43:37,630
<font color="#E5E5E5">that it's a bit complex yes</font><font color="#CCCCCC"> the best</font>

987
00:43:36,100 --> 00:43:40,000
would be<font color="#CCCCCC"> if you're interested what I can</font>

988
00:43:37,630 --> 00:43:43,330
do is I can<font color="#E5E5E5"> I can show you some some</font>

989
00:43:40,000 --> 00:43:45,010
some<font color="#E5E5E5"> location some URLs where you can</font>

990
00:43:43,330 --> 00:43:46,569
get that information<font color="#CCCCCC"> it's a bit complex</font>

991
00:43:45,010 --> 00:43:50,740
to<font color="#CCCCCC"> explain I will not</font><font color="#E5E5E5"> remember all the</font>

992
00:43:46,570 --> 00:43:53,560
<font color="#E5E5E5">details it's basically you you do the</font>

993
00:43:50,740 --> 00:43:57,129
you do the mutations and then you've got

994
00:43:53,560 --> 00:43:59,980
some some<font color="#E5E5E5"> Oracle that</font><font color="#CCCCCC"> will tell you</font>

995
00:43:57,130 --> 00:44:04,270
whether those<font color="#E5E5E5"> you need to keep those</font>

996
00:43:59,980 --> 00:44:06,240
mutations or not<font color="#E5E5E5"> and and then you</font><font color="#CCCCCC"> reject</font>

997
00:44:04,270 --> 00:44:09,370
that<font color="#E5E5E5"> and you rerun that several times</font>

998
00:44:06,240 --> 00:44:10,859
<font color="#CCCCCC">but it's a bit</font><font color="#E5E5E5"> stupid yeah I wouldn't be</font>

999
00:44:09,370 --> 00:44:13,150
able<font color="#E5E5E5"> to explain it properly right now</font>

1000
00:44:10,860 --> 00:44:15,610
but I can summarize I do have the

1001
00:44:13,150 --> 00:44:20,730
<font color="#E5E5E5">information and I can share if you're</font>

1002
00:44:15,610 --> 00:44:20,730
interested yeah so<font color="#E5E5E5"> five minutes yes</font>

1003
00:44:29,450 --> 00:44:42,419
sorry I didn't hear yes well<font color="#E5E5E5"> they</font>

1004
00:44:34,290 --> 00:44:46,380
started<font color="#E5E5E5"> by</font><font color="#CCCCCC"> this SS well at the</font><font color="#E5E5E5"> moment we</font>

1005
00:44:42,420 --> 00:44:48,150
and<font color="#E5E5E5"> so the question is are</font><font color="#CCCCCC"> we running on</font>

1006
00:44:46,380 --> 00:44:50,880
the<font color="#E5E5E5"> multiple version of browsers inside</font>

1007
00:44:48,150 --> 00:44:52,230
<font color="#E5E5E5">the</font><font color="#CCCCCC"> dis docker image or</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> Adam</font><font color="#E5E5E5"> at the</font>

1008
00:44:50,880 --> 00:44:54,210
<font color="#E5E5E5">moment we just as you see it's not</font>

1009
00:44:52,230 --> 00:44:56,460
<font color="#E5E5E5">working fully well yet</font><font color="#CCCCCC"> so I'm not at the</font>

1010
00:44:54,210 --> 00:44:57,750
level<font color="#CCCCCC"> you</font><font color="#E5E5E5"> mentioned here yet but it's</font>

1011
00:44:56,460 --> 00:45:00,390
not it's<font color="#E5E5E5"> not going to be a problem</font>

1012
00:44:57,750 --> 00:45:01,950
<font color="#E5E5E5">because we can</font><font color="#CCCCCC"> imagine</font><font color="#E5E5E5"> either having</font>

1013
00:45:00,390 --> 00:45:05,220
several<font color="#E5E5E5"> versions in the same container</font>

1014
00:45:01,950 --> 00:45:07,560
<font color="#E5E5E5">or having several</font><font color="#CCCCCC"> container several</font>

1015
00:45:05,220 --> 00:45:09,509
<font color="#E5E5E5">images for various versions we have the</font>

1016
00:45:07,560 --> 00:45:11,190
two possible options<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> you</font>

1017
00:45:09,510 --> 00:45:13,260
<font color="#E5E5E5">control you will control which one you</font>

1018
00:45:11,190 --> 00:45:21,690
want to run simply with the system

1019
00:45:13,260 --> 00:45:23,430
property that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> passed ah you're right</font>

1020
00:45:21,690 --> 00:45:25,830
<font color="#CCCCCC">that</font><font color="#E5E5E5"> depending on the version of</font>

1021
00:45:23,430 --> 00:45:28,410
selenium you use<font color="#E5E5E5"> it's it has been tested</font>

1022
00:45:25,830 --> 00:45:30,330
with<font color="#E5E5E5"> a given version of the</font><font color="#CCCCCC"> browsers yes</font>

1023
00:45:28,410 --> 00:45:32,339
and there's a and in the release notes

1024
00:45:30,330 --> 00:45:34,440
<font color="#CCCCCC">of selenium you will see these they say</font>

1025
00:45:32,339 --> 00:45:37,230
they say which which browser on which

1026
00:45:34,440 --> 00:45:40,080
version<font color="#E5E5E5"> so yes you will</font><font color="#CCCCCC"> need to</font><font color="#E5E5E5"> very to</font>

1027
00:45:37,230 --> 00:45:41,580
know to<font color="#E5E5E5"> vary but the version but we</font>

1028
00:45:40,080 --> 00:45:45,240
control the version of selenium directly

1029
00:45:41,580 --> 00:45:47,339
in our<font color="#CCCCCC"> palm with the dependency selenium</font>

1030
00:45:45,240 --> 00:45:49,140
is a dependency in the<font color="#E5E5E5"> palm and we have</font>

1031
00:45:47,339 --> 00:45:50,700
the version<font color="#E5E5E5"> of that dependency</font><font color="#CCCCCC"> so you</font>

1032
00:45:49,140 --> 00:45:53,160
can very well imagine that<font color="#E5E5E5"> having</font>

1033
00:45:50,700 --> 00:46:01,470
several<font color="#E5E5E5"> of those with different profiles</font>

1034
00:45:53,160 --> 00:46:02,940
<font color="#E5E5E5">for example yes</font><font color="#CCCCCC"> I agree selenium and</font><font color="#E5E5E5"> I</font>

1035
00:46:01,470 --> 00:46:05,220
we've experienced<font color="#E5E5E5"> that also that</font>

1036
00:46:02,940 --> 00:46:07,260
<font color="#CCCCCC">sometimes it's depending</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the version</font>

1037
00:46:05,220 --> 00:46:09,209
of selenium it works well less well

1038
00:46:07,260 --> 00:46:11,160
let's do<font color="#E5E5E5"> it and it depends</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> test</font>

1039
00:46:09,210 --> 00:46:13,680
<font color="#CCCCCC">also with what they're doing</font><font color="#E5E5E5"> so yes</font>

1040
00:46:11,160 --> 00:46:15,540
there's a bit of we<font color="#CCCCCC"> do things to</font><font color="#E5E5E5"> check</font>

1041
00:46:13,680 --> 00:46:18,180
to select the right selenium version you

1042
00:46:15,540 --> 00:46:20,339
want<font color="#E5E5E5"> to test yes in our case we are very</font>

1043
00:46:18,180 --> 00:46:24,839
<font color="#E5E5E5">interested in testing the latest version</font>

1044
00:46:20,339 --> 00:46:26,130
of<font color="#E5E5E5"> Firefox and Chrome and Safari</font><font color="#CCCCCC"> the</font>

1045
00:46:24,839 --> 00:46:28,230
latest one we're not<font color="#E5E5E5"> we're less</font>

1046
00:46:26,130 --> 00:46:30,240
<font color="#CCCCCC">interested in testing all the previous</font>

1047
00:46:28,230 --> 00:46:35,190
one because<font color="#E5E5E5"> we the change every month or</font>

1048
00:46:30,240 --> 00:46:36,750
<font color="#CCCCCC">so they</font><font color="#E5E5E5"> move very fast yes but we want</font>

1049
00:46:35,190 --> 00:46:37,680
to<font color="#CCCCCC"> ensure we want we want to</font><font color="#E5E5E5"> make sure</font>

1050
00:46:36,750 --> 00:46:39,390
<font color="#CCCCCC">that it works</font>

1051
00:46:37,680 --> 00:46:41,549
with that we want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> work with the</font>

1052
00:46:39,390 --> 00:46:43,830
<font color="#E5E5E5">latest studies reported by by by the</font>

1053
00:46:41,550 --> 00:46:45,510
various browser vendors the<font color="#E5E5E5"> latest</font><font color="#CCCCCC"> fad</font>

1054
00:46:43,830 --> 00:46:49,259
is<font color="#E5E5E5"> this one that's the</font><font color="#CCCCCC"> most important</font>

1055
00:46:45,510 --> 00:47:05,250
<font color="#E5E5E5">one if you want to do more then it's</font>

1056
00:46:49,260 --> 00:47:08,310
more<font color="#E5E5E5"> complex takes more time I'm sure</font>

1057
00:47:05,250 --> 00:47:11,550
<font color="#CCCCCC">they are</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I'm not I</font><font color="#E5E5E5"> haven't tested</font>

1058
00:47:08,310 --> 00:47:13,259
anything<font color="#E5E5E5"> like this on my side but yes it</font>

1059
00:47:11,550 --> 00:47:16,130
<font color="#E5E5E5">that's a good just a good point because</font>

1060
00:47:13,260 --> 00:47:19,350
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> City</font><font color="#E5E5E5"> ID</font><font color="#CCCCCC"> it's massive in term of</font>

1061
00:47:16,130 --> 00:47:21,450
changes and<font color="#E5E5E5"> computation and CPU used if</font>

1062
00:47:19,350 --> 00:47:24,170
you<font color="#E5E5E5"> want to do at a high</font><font color="#CCCCCC"> level</font><font color="#E5E5E5"> what I've</font>

1063
00:47:21,450 --> 00:47:26,910
tried<font color="#E5E5E5"> to do on my side is to try to see</font>

1064
00:47:24,170 --> 00:47:29,700
<font color="#CCCCCC">which</font><font color="#E5E5E5"> running on a single single machine</font>

1065
00:47:26,910 --> 00:47:32,640
what can we do how could<font color="#CCCCCC"> we use those</font>

1066
00:47:29,700 --> 00:47:34,529
tools<font color="#E5E5E5"> and still derive some value even</font>

1067
00:47:32,640 --> 00:47:37,589
<font color="#E5E5E5">if we're</font><font color="#CCCCCC"> not using it in the full way</font>

1068
00:47:34,530 --> 00:47:38,970
<font color="#E5E5E5">that spot that that exists still finding</font>

1069
00:47:37,590 --> 00:47:58,470
something interesting to do is<font color="#CCCCCC"> them</font>

1070
00:47:38,970 --> 00:48:03,779
<font color="#E5E5E5">that's been my focus at the moment it's</font>

1071
00:47:58,470 --> 00:48:07,370
a good question I've never seen a

1072
00:48:03,780 --> 00:48:07,370
problem<font color="#CCCCCC"> but it's a good question</font>

1073
00:48:19,560 --> 00:48:24,070
you might be right yes I don't know I

1074
00:48:22,210 --> 00:48:26,079
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> know for sure</font><font color="#CCCCCC"> what I can</font><font color="#E5E5E5"> tell you</font>

1075
00:48:24,070 --> 00:48:28,630
<font color="#E5E5E5">is that strangely we haven't</font><font color="#CCCCCC"> had any</font>

1076
00:48:26,079 --> 00:48:30,670
problem ever in this domain<font color="#E5E5E5"> and we do</font>

1077
00:48:28,630 --> 00:48:32,140
surveys in a bit but probably<font color="#E5E5E5"> not to</font><font color="#CCCCCC"> the</font>

1078
00:48:30,670 --> 00:48:34,329
level not at<font color="#E5E5E5"> the level that you're doing</font>

1079
00:48:32,140 --> 00:48:36,700
it with very small for<font color="#CCCCCC"> us maybe that's</font>

1080
00:48:34,329 --> 00:48:39,190
why I have not hit the issue<font color="#E5E5E5"> I don't</font>

1081
00:48:36,700 --> 00:48:49,899
<font color="#CCCCCC">know it's a good day</font><font color="#E5E5E5"> it's a good it's a</font>

1082
00:48:39,190 --> 00:48:52,180
<font color="#CCCCCC">good point the question was whether the</font>

1083
00:48:49,900 --> 00:48:53,920
the deprecation strategy and the<font color="#CCCCCC"> legacy</font>

1084
00:48:52,180 --> 00:48:56,440
thing with aspect where you<font color="#E5E5E5"> move to</font>

1085
00:48:53,920 --> 00:48:59,050
somewhere<font color="#E5E5E5"> else</font><font color="#CCCCCC"> it does this impact</font>

1086
00:48:56,440 --> 00:49:02,800
<font color="#CCCCCC">civilization because you know you've got</font>

1087
00:48:59,050 --> 00:49:04,089
the serial<font color="#E5E5E5"> UID with the value and it</font>

1088
00:49:02,800 --> 00:49:06,579
<font color="#CCCCCC">centers</font><font color="#E5E5E5"> because if you're</font><font color="#CCCCCC"> moving things</font>

1089
00:49:04,089 --> 00:49:10,210
out<font color="#E5E5E5"> then it can change but actually</font><font color="#CCCCCC"> in</font>

1090
00:49:06,579 --> 00:49:12,910
practice<font color="#E5E5E5"> actually yes but</font><font color="#CCCCCC"> actually</font>

1091
00:49:10,210 --> 00:49:14,500
<font color="#E5E5E5">doesn't for us because when we</font><font color="#CCCCCC"> do the we</font>

1092
00:49:12,910 --> 00:49:16,180
thinking<font color="#E5E5E5"> about it now when we do the</font>

1093
00:49:14,500 --> 00:49:19,859
<font color="#CCCCCC">weeding</font><font color="#E5E5E5"> with the aspect we put it back</font>

1094
00:49:16,180 --> 00:49:19,859
<font color="#E5E5E5">so it's the same thing</font>

1095
00:49:31,440 --> 00:49:37,769
[Applause]

