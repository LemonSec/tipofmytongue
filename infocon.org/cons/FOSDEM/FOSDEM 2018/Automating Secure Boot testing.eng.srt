1
00:00:04,610 --> 00:00:10,309
so hello<font color="#E5E5E5"> everyone my name</font><font color="#CCCCCC"> is Erica Nunez</font>

2
00:00:07,700 --> 00:00:12,800
I will talk about automating secure boot

3
00:00:10,309 --> 00:00:15,860
testing so I work<font color="#E5E5E5"> for Red Hat</font>

4
00:00:12,800 --> 00:00:18,500
<font color="#CCCCCC">I used</font><font color="#E5E5E5"> I'm the</font><font color="#CCCCCC"> kernel QE team for</font>

5
00:00:15,860 --> 00:00:21,080
<font color="#CCCCCC">Hardware enablement I worked mostly with</font>

6
00:00:18,500 --> 00:00:23,300
<font color="#CCCCCC">arm platforms arm servers Red Hat</font>

7
00:00:21,080 --> 00:00:24,830
support forum servers and after some

8
00:00:23,300 --> 00:00:26,539
<font color="#CCCCCC">time I started</font><font color="#E5E5E5"> picking a few more</font>

9
00:00:24,830 --> 00:00:29,448
testing<font color="#E5E5E5"> so I worked with a firmware</font>

10
00:00:26,539 --> 00:00:34,699
update testing<font color="#E5E5E5"> UEFI related things and</font>

11
00:00:29,449 --> 00:00:37,190
<font color="#E5E5E5">also secure boot so as you most people</font>

12
00:00:34,699 --> 00:00:39,979
<font color="#E5E5E5">have worked about have heard about</font>

13
00:00:37,190 --> 00:00:42,680
secure boot so far so secure boot is a

14
00:00:39,979 --> 00:00:45,140
technology<font color="#E5E5E5"> where the system framer has a</font>

15
00:00:42,680 --> 00:00:47,870
<font color="#E5E5E5">database of keys and if</font><font color="#CCCCCC"> you only boot</font>

16
00:00:45,140 --> 00:00:49,729
the next phases of boot if the the boot

17
00:00:47,870 --> 00:00:51,709
loaders<font color="#CCCCCC"> or next phases of the boot are</font>

18
00:00:49,729 --> 00:00:55,610
signed by<font color="#E5E5E5"> some key that is known by the</font>

19
00:00:51,710 --> 00:00:58,489
<font color="#CCCCCC">fumer so we have pretty much every</font><font color="#E5E5E5"> major</font>

20
00:00:55,610 --> 00:01:00,890
distribution<font color="#E5E5E5"> follows the path that is in</font>

21
00:00:58,489 --> 00:01:03,409
this diagram<font color="#E5E5E5"> so</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> you fi</font><font color="#CCCCCC"> humor it</font>

22
00:01:00,890 --> 00:01:06,530
contains database of keys it will load

23
00:01:03,409 --> 00:01:08,450
in this case shame so<font color="#E5E5E5"> shame is</font><font color="#CCCCCC"> something</font>

24
00:01:06,530 --> 00:01:10,160
that we need for secret boot<font color="#CCCCCC"> support in</font>

25
00:01:08,450 --> 00:01:12,080
Linux distributions<font color="#CCCCCC"> because pretty</font><font color="#E5E5E5"> much</font>

26
00:01:10,160 --> 00:01:13,940
every computer or laptop that you<font color="#E5E5E5"> can</font>

27
00:01:12,080 --> 00:01:16,520
buy today will only come<font color="#CCCCCC"> loaded</font><font color="#E5E5E5"> at</font>

28
00:01:13,940 --> 00:01:19,070
<font color="#CCCCCC">Microsoft</font><font color="#E5E5E5"> keys so in order</font><font color="#CCCCCC"> to not have</font>

29
00:01:16,520 --> 00:01:21,170
everyone<font color="#CCCCCC"> load or load</font><font color="#E5E5E5"> the Fedora key the</font>

30
00:01:19,070 --> 00:01:23,990
right<font color="#E5E5E5"> hat key or</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Ubuntu key or</font>

31
00:01:21,170 --> 00:01:26,480
<font color="#E5E5E5">whatever in</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> laptop to make Linux</font>

32
00:01:23,990 --> 00:01:28,789
<font color="#E5E5E5">distribution just work we just have the</font>

33
00:01:26,480 --> 00:01:30,590
shim<font color="#E5E5E5"> that is some small boot order that</font>

34
00:01:28,790 --> 00:01:33,980
is signed by<font color="#CCCCCC"> Microsoft and it will</font>

35
00:01:30,590 --> 00:01:35,390
contain the key is to load<font color="#CCCCCC"> the whatever</font>

36
00:01:33,980 --> 00:01:37,340
<font color="#E5E5E5">you need to load for the rest of your</font>

37
00:01:35,390 --> 00:01:39,710
<font color="#CCCCCC">distribution</font><font color="#E5E5E5"> so we load the UEFI</font>

38
00:01:37,340 --> 00:01:41,690
firmware loss<font color="#CCCCCC"> the shim that is signed by</font>

39
00:01:39,710 --> 00:01:43,039
Microsoft<font color="#CCCCCC"> we can load that because</font>

40
00:01:41,690 --> 00:01:46,490
Microsoft<font color="#E5E5E5"> keys are probably in your</font>

41
00:01:43,040 --> 00:01:47,960
laptop already<font color="#E5E5E5"> and then the shim</font>

42
00:01:46,490 --> 00:01:50,119
contains the keys for distribution<font color="#E5E5E5"> for</font>

43
00:01:47,960 --> 00:01:52,750
example railhead keys to load the grub

44
00:01:50,120 --> 00:01:55,220
that<font color="#E5E5E5"> is signed by Red Hat themselves</font>

45
00:01:52,750 --> 00:01:56,510
then the Linux<font color="#CCCCCC"> kernel</font><font color="#E5E5E5"> is also signed by</font>

46
00:01:55,220 --> 00:01:59,658
as we<font color="#E5E5E5"> don't need to rely</font><font color="#CCCCCC"> on Microsoft</font>

47
00:01:56,510 --> 00:02:03,650
signing every release<font color="#E5E5E5"> that we do for all</font>

48
00:01:59,659 --> 00:02:05,120
<font color="#CCCCCC">of those other</font><font color="#E5E5E5"> components and so some</font>

49
00:02:03,650 --> 00:02:06,650
other<font color="#CCCCCC"> thing important mentions that for</font>

50
00:02:05,120 --> 00:02:08,509
example kernel modules have to be signed

51
00:02:06,650 --> 00:02:10,310
<font color="#E5E5E5">to otherwise you</font><font color="#CCCCCC"> quit load and sign</font>

52
00:02:08,508 --> 00:02:11,929
kernel modules<font color="#E5E5E5"> that could run</font><font color="#CCCCCC"> arbitrary</font>

53
00:02:10,310 --> 00:02:15,730
code in<font color="#CCCCCC"> your kernel and secure boot</font>

54
00:02:11,930 --> 00:02:15,730
<font color="#E5E5E5">would be moved at all</font>

55
00:02:15,970 --> 00:02:21,190
so some of the<font color="#E5E5E5"> problems that I have to</font>

56
00:02:19,030 --> 00:02:23,920
<font color="#CCCCCC">doubt have</font><font color="#E5E5E5"> to deal with is</font><font color="#CCCCCC"> that it's</font>

57
00:02:21,190 --> 00:02:25,420
difficult<font color="#E5E5E5"> to automate testing for secret</font>

58
00:02:23,920 --> 00:02:27,429
<font color="#E5E5E5">booth</font><font color="#CCCCCC"> because pretty</font><font color="#E5E5E5"> much every</font><font color="#CCCCCC"> rumor</font>

59
00:02:25,420 --> 00:02:30,220
from every vendor will have<font color="#E5E5E5"> different</font>

60
00:02:27,430 --> 00:02:31,870
menus<font color="#E5E5E5"> different settings different names</font>

61
00:02:30,220 --> 00:02:34,180
<font color="#E5E5E5">for example it can</font><font color="#CCCCCC"> be secret boot or</font>

62
00:02:31,870 --> 00:02:36,160
only<font color="#CCCCCC"> load</font><font color="#E5E5E5"> signing</font><font color="#CCCCCC"> but signed binaries</font><font color="#E5E5E5"> or</font>

63
00:02:34,180 --> 00:02:38,110
something completely<font color="#CCCCCC"> different or</font><font color="#E5E5E5"> maybe</font>

64
00:02:36,160 --> 00:02:40,780
<font color="#E5E5E5">just a graphical user interface</font><font color="#CCCCCC"> for that</font>

65
00:02:38,110 --> 00:02:44,140
<font color="#E5E5E5">that is not really helpful to do</font>

66
00:02:40,780 --> 00:02:46,720
automation for that so not<font color="#E5E5E5"> only for</font>

67
00:02:44,140 --> 00:02:48,369
<font color="#E5E5E5">enabling secure boot we may also have to</font>

68
00:02:46,720 --> 00:02:50,380
do the same thing for a lot loading

69
00:02:48,370 --> 00:02:51,850
custom keys that we may need<font color="#E5E5E5"> for another</font>

70
00:02:50,380 --> 00:02:53,769
<font color="#E5E5E5">steps like testing for</font><font color="#CCCCCC"> example that</font>

71
00:02:51,850 --> 00:02:58,930
<font color="#CCCCCC">Colonel model</font><font color="#E5E5E5"> signed with custom keys</font>

72
00:02:53,770 --> 00:03:00,220
work<font color="#E5E5E5"> and that's why before</font><font color="#CCCCCC"> I was before</font>

73
00:02:58,930 --> 00:03:02,110
I started<font color="#E5E5E5"> working with this we didn't</font>

74
00:03:00,220 --> 00:03:05,230
really<font color="#E5E5E5"> have any secure boot automated</font>

75
00:03:02,110 --> 00:03:07,720
testing for for<font color="#E5E5E5"> example CI</font><font color="#CCCCCC"> that will</font>

76
00:03:05,230 --> 00:03:09,070
test<font color="#CCCCCC"> forever better release for example</font>

77
00:03:07,720 --> 00:03:12,370
that<font color="#E5E5E5"> we do that secure boot would be</font>

78
00:03:09,070 --> 00:03:16,359
working<font color="#E5E5E5"> completely and if anything fails</font>

79
00:03:12,370 --> 00:03:19,030
<font color="#E5E5E5">for example if</font><font color="#CCCCCC"> key</font><font color="#E5E5E5"> some signing step is</font>

80
00:03:16,360 --> 00:03:21,520
<font color="#CCCCCC">broken or if we have a grub rebase for</font>

81
00:03:19,030 --> 00:03:23,770
example that has some<font color="#CCCCCC"> broken code that</font>

82
00:03:21,520 --> 00:03:25,780
will fail<font color="#CCCCCC"> to load the</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> lucerna for</font>

83
00:03:23,770 --> 00:03:28,840
<font color="#E5E5E5">example or verify the signature</font>

84
00:03:25,780 --> 00:03:30,610
correctly you know<font color="#E5E5E5"> then we wouldn't</font>

85
00:03:28,840 --> 00:03:36,940
catch that we would<font color="#CCCCCC"> only catch that much</font>

86
00:03:30,610 --> 00:03:39,100
later with some manual testing so if you

87
00:03:36,940 --> 00:03:41,109
load the the<font color="#E5E5E5"> Red Hat Enterprise Linux</font>

88
00:03:39,100 --> 00:03:43,959
installation guide<font color="#CCCCCC"> something that we</font>

89
00:03:41,110 --> 00:03:46,570
need<font color="#E5E5E5"> to do and this</font><font color="#CCCCCC"> is part of what I</font>

90
00:03:43,959 --> 00:03:49,300
want to automate is that we first<font color="#CCCCCC"> need</font>

91
00:03:46,570 --> 00:03:50,590
to<font color="#E5E5E5"> disable secure boot so for example</font>

92
00:03:49,300 --> 00:03:52,390
<font color="#E5E5E5">having a</font><font color="#CCCCCC"> machine where secure boot is</font>

93
00:03:50,590 --> 00:03:54,640
enabled at all times and I<font color="#CCCCCC"> would just</font>

94
00:03:52,390 --> 00:03:56,708
test many times<font color="#E5E5E5"> in that same machine</font><font color="#CCCCCC"> is</font>

95
00:03:54,640 --> 00:03:58,359
<font color="#E5E5E5">not something that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> feasible we need</font>

96
00:03:56,709 --> 00:04:00,070
to<font color="#CCCCCC"> disable it and enable</font><font color="#E5E5E5"> it every time</font>

97
00:03:58,360 --> 00:04:03,190
<font color="#E5E5E5">and that's part of the problem</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> well</font>

98
00:04:00,070 --> 00:04:06,100
<font color="#CCCCCC">so first you need to disable it</font><font color="#E5E5E5"> install</font>

99
00:04:03,190 --> 00:04:09,190
it<font color="#CCCCCC"> by the way this is for</font><font color="#E5E5E5"> the better</font>

100
00:04:06,100 --> 00:04:11,560
<font color="#CCCCCC">release is not</font><font color="#E5E5E5"> for the final</font><font color="#CCCCCC"> release</font><font color="#E5E5E5"> but</font>

101
00:04:09,190 --> 00:04:13,329
that's what I need<font color="#E5E5E5"> to test anyway so</font>

102
00:04:11,560 --> 00:04:17,160
first need to disable<font color="#CCCCCC"> it then you can</font>

103
00:04:13,330 --> 00:04:19,540
perform<font color="#E5E5E5"> the</font><font color="#CCCCCC"> installation as normal then</font>

104
00:04:17,160 --> 00:04:21,489
you need<font color="#E5E5E5"> to load in the</font><font color="#CCCCCC"> keys for example</font>

105
00:04:19,540 --> 00:04:24,729
<font color="#CCCCCC">this is used</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> mock</font><font color="#E5E5E5"> which you tool</font>

106
00:04:21,488 --> 00:04:26,409
<font color="#E5E5E5">user space utility for that we may use</font>

107
00:04:24,729 --> 00:04:28,030
<font color="#CCCCCC">that</font><font color="#E5E5E5"> or not for</font><font color="#CCCCCC"> example we may just</font>

108
00:04:26,410 --> 00:04:29,750
loading<font color="#E5E5E5"> the keys directly in the</font><font color="#CCCCCC"> framer</font>

109
00:04:28,030 --> 00:04:31,669
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then we need to reboot</font>

110
00:04:29,750 --> 00:04:37,550
and then you have the secure boot<font color="#E5E5E5"> system</font>

111
00:04:31,670 --> 00:04:40,760
installed so first solution that we

112
00:04:37,550 --> 00:04:42,740
attempt on that is to<font color="#CCCCCC"> test on virtual</font>

113
00:04:40,760 --> 00:04:45,500
<font color="#CCCCCC">machines using your vmf the biggest</font>

114
00:04:42,740 --> 00:04:48,770
advantage of using<font color="#CCCCCC"> vmf for that is that</font>

115
00:04:45,500 --> 00:04:49,190
it stores the variables in the<font color="#CCCCCC"> NVRAM</font>

116
00:04:48,770 --> 00:04:54,140
file

117
00:04:49,190 --> 00:04:56,210
it's the ovm<font color="#CCCCCC"> F</font><font color="#E5E5E5"> virus file</font><font color="#CCCCCC"> but the ovm F</font>

118
00:04:54,140 --> 00:04:57,979
bars<font color="#E5E5E5"> files</font><font color="#CCCCCC"> the template</font><font color="#E5E5E5"> provided by ovm</font>

119
00:04:56,210 --> 00:05:00,320
F themselves and<font color="#E5E5E5"> basically if you use</font>

120
00:04:57,980 --> 00:05:03,550
something like<font color="#CCCCCC"> Lib word</font><font color="#E5E5E5"> it will copy the</font>

121
00:05:00,320 --> 00:05:06,830
<font color="#CCCCCC">LVM F template</font><font color="#E5E5E5"> virus file template to</font>

122
00:05:03,550 --> 00:05:09,590
machine specific directory and if you

123
00:05:06,830 --> 00:05:11,599
use<font color="#E5E5E5"> that so it's possible</font><font color="#CCCCCC"> to manipulate</font>

124
00:05:09,590 --> 00:05:14,570
that file to<font color="#E5E5E5"> have a machine where</font><font color="#CCCCCC"> SiC</font>

125
00:05:11,600 --> 00:05:16,160
<font color="#CCCCCC">reboots is enabled in</font><font color="#E5E5E5"> femur or not for</font>

126
00:05:14,570 --> 00:05:20,140
<font color="#E5E5E5">example we can do that from the host</font>

127
00:05:16,160 --> 00:05:22,760
<font color="#CCCCCC">machine and then we can accomplish</font>

128
00:05:20,140 --> 00:05:25,010
<font color="#E5E5E5">installing with secure boot</font><font color="#CCCCCC"> disable and</font>

129
00:05:22,760 --> 00:05:26,690
then in automated and<font color="#E5E5E5"> programmatic way</font>

130
00:05:25,010 --> 00:05:28,420
enable it<font color="#CCCCCC"> and then boot the</font><font color="#E5E5E5"> machine</font>

131
00:05:26,690 --> 00:05:31,990
again<font color="#CCCCCC"> with</font><font color="#E5E5E5"> secure boot enabled</font>

132
00:05:28,420 --> 00:05:36,740
unfortunately there is no way to do<font color="#E5E5E5"> that</font>

133
00:05:31,990 --> 00:05:38,270
there's no<font color="#E5E5E5"> tool to do</font><font color="#CCCCCC"> that with the like</font>

134
00:05:36,740 --> 00:05:40,190
some user<font color="#CCCCCC"> spaces</font><font color="#E5E5E5"> that will go and tweak</font>

135
00:05:38,270 --> 00:05:43,760
the file to just flip the bit<font color="#E5E5E5"> that will</font>

136
00:05:40,190 --> 00:05:45,920
<font color="#E5E5E5">make secure boot enabled so a workaround</font>

137
00:05:43,760 --> 00:05:47,870
for<font color="#E5E5E5"> that is to have a pre-prepared file</font>

138
00:05:45,920 --> 00:05:49,820
of<font color="#CCCCCC"> n'ver</font><font color="#E5E5E5"> and file that we will have</font>

139
00:05:47,870 --> 00:05:52,130
secure boot enabled<font color="#E5E5E5"> so we can just</font>

140
00:05:49,820 --> 00:05:54,080
install<font color="#E5E5E5"> it with it secure boot disabled</font>

141
00:05:52,130 --> 00:05:56,000
<font color="#E5E5E5">and then just copy over a file that has</font>

142
00:05:54,080 --> 00:05:57,620
<font color="#CCCCCC">all of the NVRAM settings</font><font color="#E5E5E5"> with secure</font>

143
00:05:56,000 --> 00:05:59,150
boot enable and all of the keys loaded

144
00:05:57,620 --> 00:06:02,110
and then<font color="#CCCCCC"> we can just booting machine</font>

145
00:05:59,150 --> 00:06:04,400
again and<font color="#CCCCCC"> we have secure boot there I</font>

146
00:06:02,110 --> 00:06:06,020
just wanted to mention<font color="#E5E5E5"> here that we're</font>

147
00:06:04,400 --> 00:06:08,060
using a tool called bigger for that it's

148
00:06:06,020 --> 00:06:10,370
a<font color="#E5E5E5"> redhead community project so bicker</font>

149
00:06:08,060 --> 00:06:13,820
bicker is great for hardenable<font color="#CCCCCC"> in</font>

150
00:06:10,370 --> 00:06:15,860
testing it allows you<font color="#E5E5E5"> to locate a</font>

151
00:06:13,820 --> 00:06:17,210
machine that<font color="#E5E5E5"> has for example some</font><font color="#CCCCCC"> PC</font>

152
00:06:15,860 --> 00:06:19,010
hardware<font color="#E5E5E5"> that you need or that has</font>

153
00:06:17,210 --> 00:06:21,469
number of<font color="#E5E5E5"> cores or certain amount of</font>

154
00:06:19,010 --> 00:06:22,940
memory<font color="#E5E5E5"> or certain architectural and then</font>

155
00:06:21,470 --> 00:06:25,280
you can just send a query<font color="#E5E5E5"> and you</font>

156
00:06:22,940 --> 00:06:27,230
reserve a<font color="#E5E5E5"> machine for you or just run a</font>

157
00:06:25,280 --> 00:06:31,190
set<font color="#E5E5E5"> of tests that you</font><font color="#CCCCCC"> have for that so I</font>

158
00:06:27,230 --> 00:06:34,310
have a set<font color="#E5E5E5"> of tests that will verify</font>

159
00:06:31,190 --> 00:06:37,210
<font color="#CCCCCC">that secure boot</font><font color="#E5E5E5"> is enabled for example</font>

160
00:06:34,310 --> 00:06:39,620
<font color="#E5E5E5">that we can and</font><font color="#CCCCCC"> then have plans for</font>

161
00:06:37,210 --> 00:06:41,030
extending<font color="#E5E5E5"> that we'll see that later but</font>

162
00:06:39,620 --> 00:06:42,350
<font color="#CCCCCC">basically I have some bigger tasks</font><font color="#E5E5E5"> that</font>

163
00:06:41,030 --> 00:06:43,309
to do<font color="#E5E5E5"> that in some machine that we</font>

164
00:06:42,350 --> 00:06:45,410
<font color="#E5E5E5">reserved</font>

165
00:06:43,310 --> 00:06:47,270
it also takes<font color="#CCCCCC"> care of his telling new</font>

166
00:06:45,410 --> 00:06:48,770
systems which is great and has support

167
00:06:47,270 --> 00:06:50,960
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> via tour lies workflow</font><font color="#E5E5E5"> that we</font>

168
00:06:48,770 --> 00:06:55,280
need for<font color="#E5E5E5"> chiku</font><font color="#CCCCCC"> boot testing in</font><font color="#E5E5E5"> virtual</font>

169
00:06:50,960 --> 00:06:56,810
<font color="#E5E5E5">machines</font><font color="#CCCCCC"> so this is the outline</font><font color="#E5E5E5"> of the</font>

170
00:06:55,280 --> 00:06:59,299
solution that<font color="#E5E5E5"> I have currently</font>

171
00:06:56,810 --> 00:07:00,830
<font color="#E5E5E5">implemented</font><font color="#CCCCCC"> kickstart a machine</font>

172
00:06:59,300 --> 00:07:03,590
basically<font color="#CCCCCC"> we do Red Hat</font><font color="#E5E5E5"> Enterprise Linux</font>

173
00:07:00,830 --> 00:07:05,599
installation with on the host and then

174
00:07:03,590 --> 00:07:08,570
some<font color="#E5E5E5"> gas machine beaker we automate that</font>

175
00:07:05,600 --> 00:07:12,830
for me then use some<font color="#CCCCCC"> perform some tiny</font>

176
00:07:08,570 --> 00:07:14,840
<font color="#E5E5E5">checks that UEFI is this is in use and</font>

177
00:07:12,830 --> 00:07:16,099
secure boot is disabled<font color="#E5E5E5"> that we should</font>

178
00:07:14,840 --> 00:07:19,039
make sure<font color="#CCCCCC"> for that for the poor</font>

179
00:07:16,100 --> 00:07:20,990
desolation<font color="#E5E5E5"> for the first time after that</font>

180
00:07:19,040 --> 00:07:22,790
we<font color="#E5E5E5"> switch the</font><font color="#CCCCCC"> grass in</font><font color="#E5E5E5"> program file and</font>

181
00:07:20,990 --> 00:07:24,500
then we boot the<font color="#E5E5E5"> guest again and secret</font>

182
00:07:22,790 --> 00:07:30,560
<font color="#CCCCCC">put must be enable that's basically the</font>

183
00:07:24,500 --> 00:07:32,930
<font color="#CCCCCC">first step and it works</font><font color="#E5E5E5"> so has some</font>

184
00:07:30,560 --> 00:07:35,240
problems<font color="#CCCCCC"> that for example multiple</font>

185
00:07:32,930 --> 00:07:37,040
releases of our distribution<font color="#E5E5E5"> may have</font>

186
00:07:35,240 --> 00:07:39,169
different keys so I may have<font color="#CCCCCC"> mini to</font>

187
00:07:37,040 --> 00:07:40,940
have different<font color="#CCCCCC"> env rounds file for every</font>

188
00:07:39,169 --> 00:07:43,820
<font color="#E5E5E5">different configuration or our release</font>

189
00:07:40,940 --> 00:07:45,770
beta beta keys<font color="#CCCCCC"> may not be</font><font color="#E5E5E5"> the same as</font>

190
00:07:43,820 --> 00:07:47,300
well and still<font color="#E5E5E5"> did</font><font color="#CCCCCC"> not solve the problem</font>

191
00:07:45,770 --> 00:07:50,840
of adding<font color="#CCCCCC"> custom case for example</font><font color="#E5E5E5"> for</font>

192
00:07:47,300 --> 00:07:52,310
testing<font color="#E5E5E5"> custom kernel module signing</font>

193
00:07:50,840 --> 00:07:56,299
which is something<font color="#CCCCCC"> that we also want to</font>

194
00:07:52,310 --> 00:07:59,479
<font color="#E5E5E5">cover so different solution</font><font color="#CCCCCC"> for that</font><font color="#E5E5E5"> is</font>

195
00:07:56,300 --> 00:08:01,940
<font color="#CCCCCC">that a VMFS profile</font><font color="#E5E5E5"> also provides this</font>

196
00:07:59,479 --> 00:08:05,840
small UEFI application called<font color="#E5E5E5"> enroll</font>

197
00:08:01,940 --> 00:08:07,400
default<font color="#CCCCCC"> Keys</font><font color="#E5E5E5"> EFI basically it's a EFI</font>

198
00:08:05,840 --> 00:08:10,669
application that you can<font color="#CCCCCC"> run from the</font>

199
00:08:07,400 --> 00:08:13,010
UEFI shell<font color="#E5E5E5"> it will enable secure boot</font>

200
00:08:10,669 --> 00:08:16,280
and enable some keys as<font color="#CCCCCC"> well like the</font>

201
00:08:13,010 --> 00:08:19,520
<font color="#CCCCCC">Microsoft</font><font color="#E5E5E5"> keys and this is a bit handy</font>

202
00:08:16,280 --> 00:08:21,859
you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> I'm for</font><font color="#E5E5E5"> example me used to do</font>

203
00:08:19,520 --> 00:08:25,159
that to<font color="#CCCCCC"> avoid having</font><font color="#E5E5E5"> to have a internal</font>

204
00:08:21,860 --> 00:08:27,890
<font color="#E5E5E5">files pre-prepared however it has a</font>

205
00:08:25,160 --> 00:08:29,510
hard-coded<font color="#E5E5E5"> set of keys</font><font color="#CCCCCC"> still</font><font color="#E5E5E5"> doesn't</font>

206
00:08:27,890 --> 00:08:33,319
solve<font color="#CCCCCC"> the</font><font color="#E5E5E5"> problem of</font><font color="#CCCCCC"> Christian Keys for</font>

207
00:08:29,510 --> 00:08:35,330
custom kernel modules and some of EMF

208
00:08:33,320 --> 00:08:37,550
fields may have the UEFI shell

209
00:08:35,330 --> 00:08:40,130
disabled actually that's what I<font color="#CCCCCC"> wanted</font>

210
00:08:37,549 --> 00:08:42,020
to say so I may<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use something</font>

211
00:08:40,130 --> 00:08:45,530
<font color="#E5E5E5">else like the UEFI shell though it makes</font>

212
00:08:42,020 --> 00:08:47,980
<font color="#CCCCCC">that setup</font><font color="#E5E5E5"> a bit more complicated</font><font color="#CCCCCC"> so our</font>

213
00:08:45,530 --> 00:08:51,140
<font color="#E5E5E5">purpose of solution going further is</font><font color="#CCCCCC"> to</font>

214
00:08:47,980 --> 00:08:53,870
<font color="#E5E5E5">every every time</font><font color="#CCCCCC"> patch</font><font color="#E5E5E5"> the enroll</font>

215
00:08:51,140 --> 00:08:55,850
default<font color="#CCCCCC"> keys efi</font><font color="#E5E5E5"> add some new yorkese</font>

216
00:08:53,870 --> 00:08:58,839
rebuild the application and then repeat

217
00:08:55,850 --> 00:08:58,839
<font color="#E5E5E5">this step</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we had first</font>

218
00:08:59,530 --> 00:09:05,150
so that's pretty much<font color="#E5E5E5"> it for future</font>

219
00:09:03,170 --> 00:09:07,370
plans<font color="#CCCCCC"> as we're using</font><font color="#E5E5E5"> beaker for example</font>

220
00:09:05,150 --> 00:09:11,540
we can have<font color="#E5E5E5"> other bigger tasks that will</font>

221
00:09:07,370 --> 00:09:13,400
do<font color="#CCCCCC"> loading out of tree kernel</font><font color="#E5E5E5"> modules</font>

222
00:09:11,540 --> 00:09:17,150
sign with custom keys I can<font color="#CCCCCC"> do that if</font>

223
00:09:13,400 --> 00:09:20,270
<font color="#CCCCCC">I'd</font><font color="#E5E5E5"> if I</font><font color="#CCCCCC"> have the patched enroll default</font>

224
00:09:17,150 --> 00:09:23,000
<font color="#E5E5E5">Keys EFI application the module is also</font>

225
00:09:20,270 --> 00:09:23,540
not automated<font color="#E5E5E5"> as is described in the</font>

226
00:09:23,000 --> 00:09:24,920
manual

227
00:09:23,540 --> 00:09:27,230
these tools are<font color="#CCCCCC"> a bit difficult to</font>

228
00:09:24,920 --> 00:09:29,270
<font color="#E5E5E5">automate because they require manual</font>

229
00:09:27,230 --> 00:09:31,100
<font color="#E5E5E5">steps there there's no way around that</font>

230
00:09:29,270 --> 00:09:32,900
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we may</font><font color="#E5E5E5"> have to deal</font><font color="#CCCCCC"> with expect</font>

231
00:09:31,100 --> 00:09:34,670
scripts for example or if I expect it's

232
00:09:32,900 --> 00:09:40,130
something that I<font color="#CCCCCC"> will didn't</font><font color="#E5E5E5"> want to go</font>

233
00:09:34,670 --> 00:09:42,199
there<font color="#CCCCCC"> there's also</font><font color="#E5E5E5"> fw TS which is a few</font>

234
00:09:40,130 --> 00:09:44,150
more<font color="#E5E5E5"> tests to it it's maintained by some</font>

235
00:09:42,200 --> 00:09:47,150
people at<font color="#E5E5E5"> canonical it's great tool for</font>

236
00:09:44,150 --> 00:09:48,699
<font color="#CCCCCC">firmer testing I'm interested</font><font color="#E5E5E5"> to see how</font>

237
00:09:47,150 --> 00:09:53,540
that<font color="#E5E5E5"> works in the</font><font color="#CCCCCC"> security environment</font>

238
00:09:48,700 --> 00:09:55,610
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> arm</font><font color="#E5E5E5"> 64 support</font><font color="#CCCCCC"> so actually</font>

239
00:09:53,540 --> 00:09:59,390
arm 64 support for secure boot is a bit

240
00:09:55,610 --> 00:10:00,770
<font color="#CCCCCC">I don't know</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> state is right now</font>

241
00:09:59,390 --> 00:10:03,470
there are some<font color="#CCCCCC"> political issues for</font>

242
00:10:00,770 --> 00:10:06,199
<font color="#CCCCCC">example with Microsoft not allowing you</font>

243
00:10:03,470 --> 00:10:07,940
to<font color="#E5E5E5"> disable secure boot for</font><font color="#CCCCCC"> arm platforms</font>

244
00:10:06,200 --> 00:10:09,710
<font color="#CCCCCC">which is different than</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> next 64</font>

245
00:10:07,940 --> 00:10:11,300
where you<font color="#E5E5E5"> are mandated</font><font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to</font>

246
00:10:09,710 --> 00:10:13,910
disable<font color="#CCCCCC"> it</font><font color="#E5E5E5"> if you're physically present</font>

247
00:10:11,300 --> 00:10:14,990
<font color="#E5E5E5">to the</font><font color="#CCCCCC"> Machine and</font><font color="#E5E5E5"> K as exact is</font>

248
00:10:13,910 --> 00:10:17,810
something else that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to test</font>

249
00:10:14,990 --> 00:10:19,130
there as well<font color="#E5E5E5"> because it</font><font color="#CCCCCC"> make sense</font><font color="#E5E5E5"> if</font>

250
00:10:17,810 --> 00:10:21,410
<font color="#E5E5E5">you have secure boot</font><font color="#CCCCCC"> environment that</font>

251
00:10:19,130 --> 00:10:23,120
you were<font color="#E5E5E5"> able to just KX act two totally</font>

252
00:10:21,410 --> 00:10:28,969
different kernel that is<font color="#E5E5E5"> not going to</font>

253
00:10:23,120 --> 00:10:32,510
care about secure boot at all so that's

254
00:10:28,970 --> 00:10:35,590
<font color="#E5E5E5">pretty much it yeah thank you</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> coming</font>

255
00:10:32,510 --> 00:10:35,590
<font color="#E5E5E5">I hope</font><font color="#CCCCCC"> you have some questions</font>

256
00:10:36,740 --> 00:10:44,330
[Applause]

257
00:10:56,960 --> 00:11:01,500
so<font color="#E5E5E5"> Microsoft provides a service where</font>

258
00:10:59,850 --> 00:11:03,570
you<font color="#E5E5E5"> can send them a binary and they will</font>

259
00:11:01,500 --> 00:11:05,160
verify that<font color="#E5E5E5"> it complies with the secure</font>

260
00:11:03,570 --> 00:11:08,040
boot and then<font color="#E5E5E5"> they will sign it and give</font>

261
00:11:05,160 --> 00:11:10,560
it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you so assume if you malicious</font>

262
00:11:08,040 --> 00:11:13,290
user send them a<font color="#CCCCCC"> binary that</font><font color="#E5E5E5"> will be</font>

263
00:11:10,560 --> 00:11:15,270
signed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you load something</font><font color="#E5E5E5"> with the</font>

264
00:11:13,290 --> 00:11:17,279
different key you could break<font color="#E5E5E5"> that but</font>

265
00:11:15,270 --> 00:11:19,890
it would have to to be signed<font color="#E5E5E5"> by</font>

266
00:11:17,279 --> 00:11:21,660
Microsoft anyway so<font color="#CCCCCC"> shim for example the</font>

267
00:11:19,890 --> 00:11:23,730
<font color="#CCCCCC">redhead bill is on only signed because</font>

268
00:11:21,660 --> 00:11:25,680
<font color="#CCCCCC">it complies with</font><font color="#E5E5E5"> the thing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> will it</font>

269
00:11:23,730 --> 00:11:28,080
will only build other<font color="#E5E5E5"> signed binaries</font>

270
00:11:25,680 --> 00:11:31,640
you can't have something<font color="#E5E5E5"> signed by</font>

271
00:11:28,080 --> 00:11:31,640
<font color="#CCCCCC">Microsoft that</font><font color="#E5E5E5"> will just boot anything</font>

272
00:11:45,690 --> 00:11:50,380
right yeah sorry I forgot to<font color="#E5E5E5"> repeat the</font>

273
00:11:48,040 --> 00:11:50,949
question<font color="#CCCCCC"> both</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> about him</font>

274
00:11:50,380 --> 00:11:53,590
actually

275
00:11:50,950 --> 00:11:57,690
so yeah<font color="#E5E5E5"> Shin</font><font color="#CCCCCC"> Shem contains the the keys</font>

276
00:11:53,590 --> 00:12:07,320
to be able<font color="#E5E5E5"> to to boot the the other</font>

277
00:11:57,690 --> 00:12:09,310
stages of gluten they should do

278
00:12:07,320 --> 00:12:13,410
<font color="#E5E5E5">verification that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> binders</font><font color="#CCCCCC"> that they</font>

279
00:12:09,310 --> 00:12:13,410
are signing comply with the secret<font color="#E5E5E5"> boot</font>

280
00:12:18,730 --> 00:12:25,750
[Music]

281
00:12:20,190 --> 00:12:36,910
sorry sorry I didn't understand the

282
00:12:25,750 --> 00:12:39,850
<font color="#CCCCCC">question so with new arm systems will</font>

283
00:12:36,910 --> 00:12:43,719
include the<font color="#E5E5E5"> Microsoft</font><font color="#CCCCCC"> keys as well is</font>

284
00:12:39,850 --> 00:12:46,080
<font color="#E5E5E5">that the question so I'm not sure about</font>

285
00:12:43,720 --> 00:12:48,670
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I think it's not a</font><font color="#E5E5E5"> result issue yet</font>

286
00:12:46,080 --> 00:12:50,710
<font color="#E5E5E5">the systems that</font><font color="#CCCCCC"> I deal with are not</font>

287
00:12:48,670 --> 00:12:52,420
coming with<font color="#CCCCCC"> the Microsoft keys but</font><font color="#E5E5E5"> there</font>

288
00:12:50,710 --> 00:12:54,880
are mostly prototypes I'm not sure you

289
00:12:52,420 --> 00:12:57,430
<font color="#E5E5E5">can buy</font><font color="#CCCCCC"> and actually arm supported</font>

290
00:12:54,880 --> 00:13:02,920
server<font color="#E5E5E5"> yet for</font><font color="#CCCCCC"> example it is supported</font>

291
00:12:57,430 --> 00:13:04,689
<font color="#CCCCCC">by a Red Hat</font><font color="#E5E5E5"> so I think even if they do</font>

292
00:13:02,920 --> 00:13:07,750
there there are<font color="#E5E5E5"> still some issues for</font>

293
00:13:04,690 --> 00:13:10,420
example<font color="#E5E5E5"> for booting Linux because it's</font>

294
00:13:07,750 --> 00:13:15,880
not totally<font color="#E5E5E5"> compliant with booting just</font>

295
00:13:10,420 --> 00:13:18,540
<font color="#E5E5E5">anything I'm not I'm not able to answer</font>

296
00:13:15,880 --> 00:13:18,540
<font color="#E5E5E5">you better than that</font>

297
00:13:29,600 --> 00:13:38,499
<font color="#E5E5E5">okay then thank you</font>

298
00:13:31,850 --> 00:13:38,499
[Applause]

