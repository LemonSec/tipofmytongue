1
00:00:04,590 --> 00:00:12,450
so good<font color="#E5E5E5"> morning I'm rule I work at em</font>

2
00:00:07,859 --> 00:00:14,850
web<font color="#E5E5E5"> mostly on witty</font><font color="#CCCCCC"> and so I'm gonna</font>

3
00:00:12,450 --> 00:00:16,529
<font color="#E5E5E5">talk about what we T is exactly how it</font>

4
00:00:14,850 --> 00:00:19,289
can<font color="#CCCCCC"> make a little simple hello world</font>

5
00:00:16,529 --> 00:00:22,589
<font color="#E5E5E5">style application with it and how to</font>

6
00:00:19,289 --> 00:00:24,269
<font color="#E5E5E5">create</font><font color="#CCCCCC"> a larger application</font><font color="#E5E5E5"> with stuff</font>

7
00:00:22,589 --> 00:00:27,179
like templates and style sheets<font color="#CCCCCC"> and</font>

8
00:00:24,269 --> 00:00:30,240
internationalization features how you

9
00:00:27,179 --> 00:00:32,310
can maybe make<font color="#E5E5E5"> it look a</font><font color="#CCCCCC"> bit nicer</font>

10
00:00:30,240 --> 00:00:35,129
without necessarily knowing a lot about

11
00:00:32,310 --> 00:00:36,690
CSS with<font color="#E5E5E5"> bootstrap and where you can go</font>

12
00:00:35,130 --> 00:00:38,430
from<font color="#E5E5E5"> there</font><font color="#CCCCCC"> and find more information</font>

13
00:00:36,690 --> 00:00:40,860
about Weezy

14
00:00:38,430 --> 00:00:43,710
so which is<font color="#CCCCCC"> a server-side web framework</font>

15
00:00:40,860 --> 00:00:46,610
written<font color="#CCCCCC"> in C++ it is made for single</font>

16
00:00:43,710 --> 00:00:49,500
page applications<font color="#E5E5E5"> so you can make</font>

17
00:00:46,610 --> 00:00:50,790
restful<font color="#E5E5E5"> web services but the API for it</font>

18
00:00:49,500 --> 00:00:54,300
is currently a bit for<font color="#E5E5E5"> both we're</font>

19
00:00:50,790 --> 00:00:56,010
working on that<font color="#E5E5E5"> that's and making</font>

20
00:00:54,300 --> 00:00:59,519
websites is also possible like our own

21
00:00:56,010 --> 00:01:01,680
<font color="#CCCCCC">website is made with Weezy</font><font color="#E5E5E5"> but our</font>

22
00:00:59,520 --> 00:01:03,720
strong point is really<font color="#E5E5E5"> single page what</font>

23
00:01:01,680 --> 00:01:06,780
<font color="#E5E5E5">web applications that you know act a lot</font>

24
00:01:03,720 --> 00:01:07,830
like<font color="#CCCCCC"> desktop</font><font color="#E5E5E5"> applications</font><font color="#CCCCCC"> and it's very</font>

25
00:01:06,780 --> 00:01:12,210
inspired by cutes

26
00:01:07,830 --> 00:01:14,429
so it's widget based so it doesn't<font color="#E5E5E5"> we</font>

27
00:01:12,210 --> 00:01:18,658
work on<font color="#E5E5E5"> a widget level not</font><font color="#CCCCCC"> on a page</font>

28
00:01:14,429 --> 00:01:20,909
<font color="#E5E5E5">level or request level and it's a</font>

29
00:01:18,659 --> 00:01:23,130
complete abstraction<font color="#E5E5E5"> of many web</font>

30
00:01:20,909 --> 00:01:25,590
technologies and it<font color="#E5E5E5"> adapts to whatever</font>

31
00:01:23,130 --> 00:01:27,749
technologies are<font color="#CCCCCC"> available so you don't</font>

32
00:01:25,590 --> 00:01:30,090
actually need<font color="#CCCCCC"> javascript in your browser</font>

33
00:01:27,749 --> 00:01:31,589
<font color="#E5E5E5">but</font><font color="#CCCCCC"> if you have JavaScript we will we</font>

34
00:01:30,090 --> 00:01:36,749
will<font color="#E5E5E5"> use it and you don't have to write</font>

35
00:01:31,590 --> 00:01:38,880
any JavaScript<font color="#E5E5E5"> so I get this question a</font>

36
00:01:36,749 --> 00:01:41,639
lot<font color="#E5E5E5"> like why would you use</font><font color="#CCCCCC"> C++ for web</font>

37
00:01:38,880 --> 00:01:43,530
development<font color="#E5E5E5"> well I mean my immediate</font>

38
00:01:41,639 --> 00:01:45,298
rebuttal would be<font color="#CCCCCC"> to why</font><font color="#E5E5E5"> would you use</font>

39
00:01:43,530 --> 00:01:46,979
JavaScript for<font color="#E5E5E5"> web development because</font>

40
00:01:45,299 --> 00:01:49,859
the people<font color="#E5E5E5"> that love to use that these</font>

41
00:01:46,979 --> 00:01:53,639
days but this<font color="#E5E5E5"> is a quote by Matt gaunt</font>

42
00:01:49,859 --> 00:01:56,130
both of<font color="#E5E5E5"> god bolts</font><font color="#CCCCCC"> at org Fame</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> CPP con</font>

43
00:01:53,639 --> 00:01:58,380
he said I know sometimes<font color="#E5E5E5"> give C++ a bit</font>

44
00:01:56,130 --> 00:02:00,568
of a bad rap<font color="#E5E5E5"> for having funny defaults</font>

45
00:01:58,380 --> 00:02:04,469
<font color="#E5E5E5">and weird odd edge cases but take a look</font>

46
00:02:00,569 --> 00:02:07,859
<font color="#E5E5E5">JavaScript really and I think like you</font>

47
00:02:04,469 --> 00:02:10,590
<font color="#E5E5E5">can avoid a lot of the weird stuff in</font>

48
00:02:07,859 --> 00:02:13,980
C++ quite easily<font color="#E5E5E5"> and</font><font color="#CCCCCC"> javascript is much</font>

49
00:02:10,590 --> 00:02:17,340
more<font color="#E5E5E5"> in-your-face</font><font color="#CCCCCC"> there are people who</font>

50
00:02:13,980 --> 00:02:19,079
might<font color="#E5E5E5"> say oh yeah but C++ what about</font>

51
00:02:17,340 --> 00:02:22,530
these low-level vulnerabilities but

52
00:02:19,080 --> 00:02:25,019
really the<font color="#E5E5E5"> biggest threats are still</font>

53
00:02:22,530 --> 00:02:27,480
cross-site scripting and<font color="#CCCCCC"> C serve an SQL</font>

54
00:02:25,019 --> 00:02:30,209
injection<font color="#CCCCCC"> a</font><font color="#E5E5E5"> tweety defends against all</font>

55
00:02:27,480 --> 00:02:32,459
of those like we don't<font color="#E5E5E5"> spend too much</font>

56
00:02:30,209 --> 00:02:34,650
time when<font color="#E5E5E5"> using we T thinking about</font>

57
00:02:32,459 --> 00:02:38,970
those kinds<font color="#CCCCCC"> of threats</font><font color="#E5E5E5"> because it's</font>

58
00:02:34,650 --> 00:02:40,769
handled by the<font color="#E5E5E5"> framework</font><font color="#CCCCCC"> and if you just</font>

59
00:02:38,970 --> 00:02:42,720
use best practices and the right tools

60
00:02:40,769 --> 00:02:45,329
<font color="#E5E5E5">like turn on all your compiler warnings</font>

61
00:02:42,720 --> 00:02:47,909
<font color="#CCCCCC">use valgrind</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> address sanitizer use</font>

62
00:02:45,329 --> 00:02:50,400
static<font color="#E5E5E5"> analysis tools it's really not</font>

63
00:02:47,909 --> 00:02:54,030
that<font color="#E5E5E5"> big of a deal and you can find a</font>

64
00:02:50,400 --> 00:02:55,799
lot<font color="#CCCCCC"> of problems</font><font color="#E5E5E5"> that way it's also a</font>

65
00:02:54,030 --> 00:02:58,049
<font color="#E5E5E5">very small footprint which is especially</font>

66
00:02:55,799 --> 00:03:00,750
interested for interesting for embedded

67
00:02:58,049 --> 00:03:02,219
development<font color="#CCCCCC"> so there's no</font><font color="#E5E5E5"> garbage so no</font>

68
00:03:00,750 --> 00:03:05,549
garbage collection you don't need a

69
00:03:02,219 --> 00:03:06,659
runtime you<font color="#E5E5E5"> just need like it's just a</font>

70
00:03:05,549 --> 00:03:10,680
unix-like

71
00:03:06,659 --> 00:03:13,409
kernel and environment that's enough<font color="#CCCCCC"> and</font>

72
00:03:10,680 --> 00:03:15,299
creating small statically linked<font color="#CCCCCC"> I knew</font>

73
00:03:13,409 --> 00:03:17,899
easy as<font color="#CCCCCC"> possible like with the write</font>

74
00:03:15,299 --> 00:03:20,010
compilation<font color="#CCCCCC"> flags you can</font><font color="#E5E5E5"> turn the</font>

75
00:03:17,900 --> 00:03:22,079
widget gallery which is<font color="#CCCCCC"> a largest</font>

76
00:03:20,010 --> 00:03:24,149
example that<font color="#E5E5E5"> uses a lot of the widgets</font>

77
00:03:22,079 --> 00:03:28,439
and<font color="#E5E5E5"> wheatie you can get it sound this</font>

78
00:03:24,150 --> 00:03:30,060
like<font color="#CCCCCC"> 6</font><font color="#E5E5E5"> megabytes or something</font><font color="#CCCCCC"> and it's</font>

79
00:03:28,439 --> 00:03:33,358
quite familiar to<font color="#E5E5E5"> cute developers you</font>

80
00:03:30,060 --> 00:03:35,250
developers<font color="#E5E5E5"> know C++ they know C C++ for</font>

81
00:03:33,359 --> 00:03:38,969
desktop developments and<font color="#E5E5E5"> it's easy</font><font color="#CCCCCC"> for</font>

82
00:03:35,250 --> 00:03:41,219
them<font color="#CCCCCC"> supports does it both occasions to</font>

83
00:03:38,969 --> 00:03:43,560
do it because there are<font color="#E5E5E5"> benefits to</font>

84
00:03:41,219 --> 00:03:46,829
<font color="#E5E5E5">having stuff on the web instead</font><font color="#CCCCCC"> of as a</font>

85
00:03:43,560 --> 00:03:49,140
desktop<font color="#E5E5E5"> application</font><font color="#CCCCCC"> and in terms of</font>

86
00:03:46,829 --> 00:03:51,450
ecosystem<font color="#E5E5E5"> like you can just</font><font color="#CCCCCC"> use wiki for</font>

87
00:03:49,140 --> 00:03:53,518
your weapon a<font color="#CCCCCC"> the stuff and</font><font color="#E5E5E5"> use any C or</font>

88
00:03:51,450 --> 00:03:55,230
C++ library for everything else<font color="#E5E5E5"> you</font>

89
00:03:53,519 --> 00:03:57,269
don't need like awkward

90
00:03:55,230 --> 00:03:59,179
native wrappers or something like<font color="#CCCCCC"> that</font>

91
00:03:57,269 --> 00:04:03,239
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> just use all those native</font>

92
00:03:59,180 --> 00:04:08,040
libraries that are<font color="#CCCCCC"> out there so we t4</font>

93
00:04:03,239 --> 00:04:11,219
was released in September of 2017<font color="#CCCCCC"> and</font>

94
00:04:08,040 --> 00:04:16,320
<font color="#CCCCCC">it's updates witty to suppose was</font><font color="#E5E5E5"> 11 and</font>

95
00:04:11,219 --> 00:04:18,149
it's about time and like nowadays<font color="#CCCCCC"> like</font>

96
00:04:16,320 --> 00:04:20,728
most of these cross compilation<font color="#CCCCCC"> tool</font>

97
00:04:18,149 --> 00:04:24,568
<font color="#E5E5E5">change they will usually have at least</font>

98
00:04:20,728 --> 00:04:25,690
GCC<font color="#E5E5E5"> 5</font><font color="#CCCCCC"> I know like</font><font color="#E5E5E5"> open wrt the current</font>

99
00:04:24,569 --> 00:04:30,700
stable release

100
00:04:25,690 --> 00:04:33,190
is<font color="#CCCCCC"> still on GCC</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> gotten something but</font>

101
00:04:30,700 --> 00:04:35,200
<font color="#E5E5E5">LED he would you already built with that</font>

102
00:04:33,190 --> 00:04:39,969
and then<font color="#E5E5E5"> the</font><font color="#CCCCCC"> next release which he</font><font color="#E5E5E5"> will</font>

103
00:04:35,200 --> 00:04:42,250
<font color="#CCCCCC">also built with</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> so I'm gonna show</font>

104
00:04:39,970 --> 00:04:45,670
<font color="#E5E5E5">you how to make this simple hello world</font>

105
00:04:42,250 --> 00:04:47,230
style application so just something<font color="#CCCCCC"> that</font>

106
00:04:45,670 --> 00:04:50,650
shows hello world this may be a bit

107
00:04:47,230 --> 00:04:53,980
boring<font color="#CCCCCC"> so this one asks for</font><font color="#E5E5E5"> your name</font>

108
00:04:50,650 --> 00:04:56,080
it's just your name<font color="#CCCCCC"> please and</font><font color="#E5E5E5"> then you</font>

109
00:04:53,980 --> 00:04:57,970
can<font color="#CCCCCC"> enter your</font><font color="#E5E5E5"> name in this box and then</font>

110
00:04:56,080 --> 00:05:00,099
there's a<font color="#E5E5E5"> button</font><font color="#CCCCCC"> you can click</font><font color="#E5E5E5"> or you</font>

111
00:04:57,970 --> 00:05:04,870
<font color="#CCCCCC">can press</font><font color="#E5E5E5"> enter inside of the box and</font>

112
00:05:00,100 --> 00:05:06,850
you get<font color="#E5E5E5"> a greeting</font><font color="#CCCCCC"> so of course every</font>

113
00:05:04,870 --> 00:05:09,520
see<font color="#E5E5E5"> most most application starts with</font>

114
00:05:06,850 --> 00:05:13,570
<font color="#CCCCCC">the</font><font color="#E5E5E5"> main function and in our main</font>

115
00:05:09,520 --> 00:05:16,270
function we're gonna create W server

116
00:05:13,570 --> 00:05:19,300
instance using<font color="#CCCCCC"> this special</font><font color="#E5E5E5"> W</font><font color="#CCCCCC"> Brown</font>

117
00:05:16,270 --> 00:05:21,969
<font color="#E5E5E5">function and so this w Brown function</font>

118
00:05:19,300 --> 00:05:24,850
takes your command<font color="#E5E5E5"> line arguments and</font>

119
00:05:21,970 --> 00:05:27,520
configures<font color="#E5E5E5"> the server with them like</font>

120
00:05:24,850 --> 00:05:30,490
which<font color="#E5E5E5"> poor to listen to stuff</font><font color="#CCCCCC"> like that</font>

121
00:05:27,520 --> 00:05:32,049
and then it starts accepting<font color="#CCCCCC"> connections</font>

122
00:05:30,490 --> 00:05:36,120
<font color="#E5E5E5">and when it gets a new connection it</font>

123
00:05:32,050 --> 00:05:40,360
calls this<font color="#E5E5E5"> callback</font><font color="#CCCCCC"> and its callback</font>

124
00:05:36,120 --> 00:05:43,419
then gets<font color="#E5E5E5"> the W environment which is</font>

125
00:05:40,360 --> 00:05:47,080
like user range agent information<font color="#E5E5E5"> stuff</font>

126
00:05:43,419 --> 00:05:49,359
about the current session<font color="#CCCCCC"> and then in</font>

127
00:05:47,080 --> 00:05:51,159
this callback you have to create a<font color="#E5E5E5"> new</font>

128
00:05:49,360 --> 00:05:55,030
instance<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Douga application and</font>

129
00:05:51,160 --> 00:05:57,190
<font color="#E5E5E5">returned apps</font><font color="#CCCCCC"> so that means</font><font color="#E5E5E5"> that there's</font>

130
00:05:55,030 --> 00:05:58,719
one<font color="#E5E5E5"> instance of W application per</font>

131
00:05:57,190 --> 00:06:01,450
session<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we kind of create the</font>

132
00:05:58,720 --> 00:06:04,210
illusion that every<font color="#E5E5E5"> user is using their</font>

133
00:06:01,450 --> 00:06:08,680
<font color="#CCCCCC">own application</font><font color="#E5E5E5"> even though</font><font color="#CCCCCC"> it's could</font>

134
00:06:04,210 --> 00:06:11,109
be<font color="#E5E5E5"> running all in the same</font><font color="#CCCCCC"> process so if</font>

135
00:06:08,680 --> 00:06:12,970
you ran that code<font color="#E5E5E5"> that would work but</font>

136
00:06:11,110 --> 00:06:19,180
<font color="#E5E5E5">you'd get an</font><font color="#CCCCCC"> empty page so</font><font color="#E5E5E5"> that let's</font>

137
00:06:12,970 --> 00:06:22,660
<font color="#E5E5E5">start populating its so this empty page</font>

138
00:06:19,180 --> 00:06:23,870
<font color="#E5E5E5">already has a div elements inside of</font><font color="#CCCCCC"> it</font>

139
00:06:22,660 --> 00:06:25,910
that's a

140
00:06:23,870 --> 00:06:28,970
<font color="#CCCCCC">Roots we call that a double container</font>

141
00:06:25,910 --> 00:06:33,949
widgets<font color="#CCCCCC"> just stop</font><font color="#E5E5E5"> widget thing you can</font>

142
00:06:28,970 --> 00:06:36,650
put stuff<font color="#E5E5E5"> into and so we're gonna add it</font>

143
00:06:33,949 --> 00:06:41,210
<font color="#CCCCCC">up your text so you make a new W text to</font>

144
00:06:36,650 --> 00:06:43,880
give it some string and then use add

145
00:06:41,210 --> 00:06:45,888
widgets<font color="#CCCCCC"> adits which is a bit for both</font><font color="#E5E5E5"> so</font>

146
00:06:43,880 --> 00:06:49,850
we shorten that to just add new which is

147
00:06:45,889 --> 00:06:55,270
exactly the same<font color="#CCCCCC"> then we'll create a</font>

148
00:06:49,850 --> 00:06:58,910
line<font color="#CCCCCC"> edits</font><font color="#E5E5E5"> which is our</font><font color="#CCCCCC"> input and then</font>

149
00:06:55,270 --> 00:07:02,620
Avenue also returns<font color="#CCCCCC"> raw pointers so that</font>

150
00:06:58,910 --> 00:07:08,030
we<font color="#CCCCCC"> could</font><font color="#E5E5E5"> refer</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this editorial later</font>

151
00:07:02,620 --> 00:07:10,190
and we had a button<font color="#E5E5E5"> similarly at a break</font>

152
00:07:08,030 --> 00:07:12,440
I<font color="#E5E5E5"> notice is really verbose way of adding</font>

153
00:07:10,190 --> 00:07:14,750
a break but really when you're using

154
00:07:12,440 --> 00:07:18,639
templates or where you're using layouts

155
00:07:14,750 --> 00:07:22,270
<font color="#CCCCCC">like you don't end up doing this and</font>

156
00:07:18,639 --> 00:07:26,570
then we just<font color="#E5E5E5"> put a little placeholder</font><font color="#CCCCCC"> in</font>

157
00:07:22,270 --> 00:07:28,039
that's so like<font color="#E5E5E5"> an empty</font><font color="#CCCCCC"> W text we</font><font color="#E5E5E5"> set</font>

158
00:07:26,570 --> 00:07:29,900
the text<font color="#E5E5E5"> format of it's too plain</font>

159
00:07:28,039 --> 00:07:34,880
<font color="#E5E5E5">because</font><font color="#CCCCCC"> the default format is</font><font color="#E5E5E5"> just</font>

160
00:07:29,900 --> 00:07:36,950
filtered XHTML and then<font color="#E5E5E5"> we'll create on</font>

161
00:07:34,880 --> 00:07:43,849
<font color="#E5E5E5">the function which will be our slots and</font>

162
00:07:36,950 --> 00:07:51,320
<font color="#E5E5E5">the slot</font><font color="#CCCCCC"> its calls</font><font color="#E5E5E5"> set text on results</font>

163
00:07:43,849 --> 00:07:53,530
to set our greeting and then<font color="#E5E5E5"> another W</font>

164
00:07:51,320 --> 00:07:57,530
spring is passed in which is<font color="#E5E5E5"> like our</font>

165
00:07:53,530 --> 00:08:00,500
<font color="#E5E5E5">special kind of string which is utf-8</font>

166
00:07:57,530 --> 00:08:02,960
encoded unlike STD string which does not

167
00:08:00,500 --> 00:08:05,000
say<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> about the encoding and it</font>

168
00:08:02,960 --> 00:08:08,109
has like localization features which

169
00:08:05,000 --> 00:08:10,849
I'll get to later and it has this

170
00:08:08,110 --> 00:08:14,389
<font color="#E5E5E5">argument substitution feature so you</font><font color="#CCCCCC"> can</font>

171
00:08:10,849 --> 00:08:17,090
say<font color="#E5E5E5"> dot</font><font color="#CCCCCC"> org and you get the text for</font><font color="#E5E5E5"> add</font>

172
00:08:14,389 --> 00:08:21,919
from<font color="#E5E5E5"> the edits and put it in there in</font>

173
00:08:17,090 --> 00:08:23,770
the string<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you can just connect</font>

174
00:08:21,919 --> 00:08:26,930
up the signal so<font color="#E5E5E5"> you connect the</font>

175
00:08:23,770 --> 00:08:29,000
<font color="#CCCCCC">enterprise signal of the edits to this</font>

176
00:08:26,930 --> 00:08:32,990
show greeting function and connect<font color="#CCCCCC"> the</font>

177
00:08:29,000 --> 00:08:33,769
<font color="#E5E5E5">click function to of the button to show</font>

178
00:08:32,990 --> 00:08:38,619
create a function

179
00:08:33,769 --> 00:08:41,328
to<font color="#E5E5E5"> do that the final code and so to run</font>

180
00:08:38,619 --> 00:08:45,439
to build<font color="#E5E5E5"> and run it you do do it like</font>

181
00:08:41,328 --> 00:08:46,758
any other<font color="#CCCCCC"> C++ application you just need</font>

182
00:08:45,439 --> 00:08:48,649
to make<font color="#E5E5E5"> sure that you've got</font><font color="#CCCCCC"> your</font>

183
00:08:46,759 --> 00:08:53,089
includes and your lips rights and you

184
00:08:48,649 --> 00:08:55,839
<font color="#CCCCCC">link with witty Liberty and live with</font>

185
00:08:53,089 --> 00:08:58,489
the HTTP<font color="#E5E5E5"> when you build</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> DNI's built</font>

186
00:08:55,839 --> 00:09:03,129
with live with DD and live with the

187
00:08:58,489 --> 00:09:07,489
<font color="#CCCCCC">httpd</font><font color="#E5E5E5"> if you're doing if debug bolts and</font>

188
00:09:03,129 --> 00:09:09,379
so you run it<font color="#E5E5E5"> then</font><font color="#CCCCCC"> bite well there are</font>

189
00:09:07,489 --> 00:09:11,929
two arguments<font color="#E5E5E5"> that you always have to</font>

190
00:09:09,379 --> 00:09:14,059
give it and that's the dark roots which

191
00:09:11,929 --> 00:09:17,509
is where you<font color="#CCCCCC"> know all of</font><font color="#E5E5E5"> your static</font>

192
00:09:14,059 --> 00:09:20,980
contents resides and HTTP listen to

193
00:09:17,509 --> 00:09:27,040
indicate which<font color="#CCCCCC"> host support to listen on</font>

194
00:09:20,980 --> 00:09:27,040
so I'm gonna show you this<font color="#CCCCCC"> application</font>

195
00:09:29,799 --> 00:09:42,309
we go to localhost 8080<font color="#CCCCCC"> we enter a name</font>

196
00:09:37,489 --> 00:09:42,309
and<font color="#CCCCCC"> press return or click the button</font>

197
00:09:42,339 --> 00:09:47,869
<font color="#CCCCCC">then you get the screening</font><font color="#E5E5E5"> and now to</font>

198
00:09:46,160 --> 00:09:49,809
kind<font color="#E5E5E5"> of demonstrates that this still</font>

199
00:09:47,869 --> 00:09:53,389
works when you turn<font color="#E5E5E5"> off JavaScript</font>

200
00:09:49,809 --> 00:09:56,179
because well I'll<font color="#CCCCCC"> actually first show</font>

201
00:09:53,389 --> 00:09:58,710
the network's<font color="#E5E5E5"> app you see when I do</font>

202
00:09:56,179 --> 00:10:01,829
<font color="#CCCCCC">something here</font>

203
00:09:58,710 --> 00:10:01,830
[Music]

204
00:10:03,650 --> 00:10:13,040
you see it up see that that was actually

205
00:10:07,490 --> 00:10:16,840
<font color="#CCCCCC">a</font><font color="#E5E5E5"> little post that just returns a tiny</font>

206
00:10:13,040 --> 00:10:23,319
response and then we turn off JavaScript

207
00:10:16,840 --> 00:10:26,090
it still works but now it did a full new

208
00:10:23,320 --> 00:10:37,910
request which returned the full HTML

209
00:10:26,090 --> 00:10:43,700
page<font color="#CCCCCC"> and when you turn</font><font color="#E5E5E5"> WebSockets on so</font>

210
00:10:37,910 --> 00:10:46,360
you give it<font color="#E5E5E5"> the</font><font color="#CCCCCC"> extra arguments</font><font color="#E5E5E5"> we</font>

211
00:10:43,700 --> 00:10:46,360
become<font color="#CCCCCC"> fake</font>

212
00:10:49,110 --> 00:10:56,260
so we got this widget<font color="#CCCCCC"> gum fake file</font>

213
00:10:51,910 --> 00:11:06,089
which just turns on<font color="#E5E5E5"> WebSockets</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> when</font>

214
00:10:56,260 --> 00:11:06,090
I run<font color="#E5E5E5"> it again then you see this</font>

215
00:11:15,460 --> 00:11:26,100
now you see this 101<font color="#CCCCCC"> status so now it's</font>

216
00:11:20,580 --> 00:11:26,100
sending everything<font color="#E5E5E5"> in a WebSocket frames</font>

217
00:11:35,270 --> 00:11:44,819
and abroad<font color="#E5E5E5"> the window is a bit small for</font>

218
00:11:38,550 --> 00:11:49,560
it that's yeah<font color="#E5E5E5"> okay so we made a simple</font>

219
00:11:44,820 --> 00:11:52,140
<font color="#CCCCCC">application now</font><font color="#E5E5E5"> but it doesn't look</font>

220
00:11:49,560 --> 00:11:54,170
pretty yet<font color="#E5E5E5"> and if you're making larger</font>

221
00:11:52,140 --> 00:11:57,569
applications you might want to use

222
00:11:54,170 --> 00:11:59,819
<font color="#CCCCCC">better way</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> just always like adding</font>

223
00:11:57,570 --> 00:12:05,430
widgets and just doing<font color="#E5E5E5"> everything from</font>

224
00:11:59,820 --> 00:12:07,740
C++<font color="#CCCCCC"> so in a classic</font><font color="#E5E5E5"> way to design your</font>

225
00:12:05,430 --> 00:12:12,150
full application would<font color="#E5E5E5"> be</font><font color="#CCCCCC"> to use layouts</font>

226
00:12:07,740 --> 00:12:15,690
which is just like using layouts<font color="#CCCCCC"> in</font><font color="#E5E5E5"> GUI</font>

227
00:12:12,150 --> 00:12:18,390
frameworks like<font color="#E5E5E5"> dudes</font><font color="#CCCCCC"> but we're gonna</font>

228
00:12:15,690 --> 00:12:21,900
<font color="#E5E5E5">use templates so for templates you will</font>

229
00:12:18,390 --> 00:12:26,130
have to use<font color="#E5E5E5"> HTML and CSS but if you're</font>

230
00:12:21,900 --> 00:12:28,520
<font color="#E5E5E5">not really strong in CSS you</font><font color="#CCCCCC"> can also</font>

231
00:12:26,130 --> 00:12:31,080
use bootstrap

232
00:12:28,520 --> 00:12:33,960
so the typical<font color="#E5E5E5"> project structure is a</font>

233
00:12:31,080 --> 00:12:36,780
bit<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> so you get your main</font>

234
00:12:33,960 --> 00:12:38,730
directory where all of<font color="#E5E5E5"> your stuff for</font>

235
00:12:36,780 --> 00:12:40,890
<font color="#CCCCCC">your app resides like you could put your</font>

236
00:12:38,730 --> 00:12:42,120
binaries there or<font color="#E5E5E5"> whatever and then</font>

237
00:12:40,890 --> 00:12:44,580
there<font color="#E5E5E5"> will be a prudes</font>

238
00:12:42,120 --> 00:12:46,320
in there and the app root contains stuff

239
00:12:44,580 --> 00:12:50,480
like<font color="#E5E5E5"> configuration of</font><font color="#CCCCCC"> your application</font>

240
00:12:46,320 --> 00:12:52,560
your template files or databases or

241
00:12:50,480 --> 00:12:54,990
internationalization files<font color="#E5E5E5"> so for</font>

242
00:12:52,560 --> 00:12:57,810
example<font color="#E5E5E5"> we'll have a temples of</font><font color="#CCCCCC"> XML</font>

243
00:12:54,990 --> 00:13:00,390
which is a template strings of XML

244
00:12:57,810 --> 00:13:02,880
instance underscore<font color="#E5E5E5"> and</font><font color="#CCCCCC"> L dot</font><font color="#E5E5E5"> XML which</font>

245
00:13:00,390 --> 00:13:05,250
are<font color="#E5E5E5"> English and</font><font color="#CCCCCC"> Dutch translations</font><font color="#E5E5E5"> and</font>

246
00:13:02,880 --> 00:13:07,860
then<font color="#E5E5E5"> we</font><font color="#CCCCCC"> G underscore</font><font color="#E5E5E5"> config tab XML</font>

247
00:13:05,250 --> 00:13:11,430
which is our<font color="#CCCCCC"> bujji configuration and</font>

248
00:13:07,860 --> 00:13:14,880
then in the<font color="#E5E5E5"> dark</font><font color="#CCCCCC"> roots we'll put all our</font>

249
00:13:11,430 --> 00:13:17,550
<font color="#E5E5E5">static web contents like images or style</font>

250
00:13:14,880 --> 00:13:23,040
sheets<font color="#CCCCCC"> and we'll</font><font color="#E5E5E5"> just have a simple</font>

251
00:13:17,550 --> 00:13:24,630
<font color="#E5E5E5">style dot CSS so</font><font color="#CCCCCC"> these templates dot</font><font color="#E5E5E5"> XML</font>

252
00:13:23,040 --> 00:13:28,079
<font color="#CCCCCC">would contain</font><font color="#E5E5E5"> something like this so you</font>

253
00:13:24,630 --> 00:13:30,390
have<font color="#E5E5E5"> messages on the outside tag and</font>

254
00:13:28,080 --> 00:13:31,710
then<font color="#E5E5E5"> you define different messages</font><font color="#CCCCCC"> and</font>

255
00:13:30,390 --> 00:13:34,170
we'll call this one<font color="#CCCCCC"> TP all about</font>

256
00:13:31,710 --> 00:13:34,990
templates<font color="#E5E5E5"> this is just a</font><font color="#CCCCCC"> convention that</font>

257
00:13:34,170 --> 00:13:36,640
<font color="#E5E5E5">I'm using for</font>

258
00:13:34,990 --> 00:13:39,940
<font color="#CCCCCC">unions</font><font color="#E5E5E5"> here so you can call it anything</font>

259
00:13:36,640 --> 00:13:42,699
<font color="#CCCCCC">you want but I'm using a TPL prefix to</font>

260
00:13:39,940 --> 00:13:46,000
make it clear that's<font color="#E5E5E5"> a template</font><font color="#CCCCCC"> and then</font>

261
00:13:42,700 --> 00:13:49,060
<font color="#E5E5E5">you see</font><font color="#CCCCCC"> edit BTN and</font><font color="#E5E5E5"> result those are</font>

262
00:13:46,000 --> 00:13:52,770
variables<font color="#CCCCCC"> and those we're gonna put some</font>

263
00:13:49,060 --> 00:13:55,329
<font color="#E5E5E5">stuff in later and there's a special one</font>

264
00:13:52,770 --> 00:13:58,900
<font color="#CCCCCC">that's a function</font><font color="#E5E5E5"> call</font><font color="#CCCCCC"> so it calls the</font>

265
00:13:55,330 --> 00:14:03,160
TR<font color="#CCCCCC"> function with STR the prompt</font>

266
00:13:58,900 --> 00:14:06,400
arguments and the strings dot XML file

267
00:14:03,160 --> 00:14:09,699
is actually<font color="#E5E5E5"> the same kind of file so it</font>

268
00:14:06,400 --> 00:14:12,699
also has messages on the outside and

269
00:14:09,700 --> 00:14:17,290
then<font color="#CCCCCC"> you define all of</font><font color="#E5E5E5"> your different</font>

270
00:14:12,700 --> 00:14:20,980
translations<font color="#E5E5E5"> that</font><font color="#CCCCCC"> way and or style that</font>

271
00:14:17,290 --> 00:14:24,189
CSS<font color="#E5E5E5"> just the simple</font><font color="#CCCCCC"> lessons the fonts to</font>

272
00:14:20,980 --> 00:14:28,210
<font color="#E5E5E5">sans-serif and then when you want</font><font color="#CCCCCC"> to</font>

273
00:14:24,190 --> 00:14:30,280
load your style sheets<font color="#E5E5E5"> you have to use</font>

274
00:14:28,210 --> 00:14:33,880
the message<font color="#E5E5E5"> resource bundle of the app</font>

275
00:14:30,280 --> 00:14:35,500
and call the use function and then you

276
00:14:33,880 --> 00:14:39,250
give<font color="#CCCCCC"> it the bathtub approach which is</font>

277
00:14:35,500 --> 00:14:40,720
inside<font color="#E5E5E5"> of this app routes but you can</font>

278
00:14:39,250 --> 00:14:44,410
retrieve<font color="#CCCCCC"> it with the app root function</font>

279
00:14:40,720 --> 00:14:46,000
<font color="#E5E5E5">and then you add templates or strings to</font>

280
00:14:44,410 --> 00:14:47,980
load the strings<font color="#E5E5E5"> and you don't need to</font>

281
00:14:46,000 --> 00:14:49,900
add the dot<font color="#CCCCCC"> XML that</font><font color="#E5E5E5"> will be added</font>

282
00:14:47,980 --> 00:14:52,120
automatically<font color="#E5E5E5"> you'll</font><font color="#CCCCCC"> notice</font><font color="#E5E5E5"> that there</font>

283
00:14:49,900 --> 00:14:54,459
<font color="#CCCCCC">is no loading of strings underscore</font><font color="#E5E5E5"> and</font>

284
00:14:52,120 --> 00:14:57,070
<font color="#E5E5E5">L it will also automatically load that</font>

285
00:14:54,460 --> 00:15:01,660
when it detects that the locale is in

286
00:14:57,070 --> 00:15:06,250
<font color="#E5E5E5">Dutch</font><font color="#CCCCCC"> and then you can also add a style</font>

287
00:15:01,660 --> 00:15:08,770
<font color="#E5E5E5">sheet with</font><font color="#CCCCCC"> you style sheet so let's</font>

288
00:15:06,250 --> 00:15:11,560
define<font color="#E5E5E5"> our template now so this</font><font color="#CCCCCC"> is a way</font>

289
00:15:08,770 --> 00:15:16,270
<font color="#CCCCCC">that you can extend widgets</font><font color="#E5E5E5"> to build</font>

290
00:15:11,560 --> 00:15:18,670
larger widgets<font color="#CCCCCC"> so we just inherit from W</font>

291
00:15:16,270 --> 00:15:21,939
templates and first we'll initialize

292
00:15:18,670 --> 00:15:24,280
that with our string so we'll use a TR

293
00:15:21,940 --> 00:15:27,550
function<font color="#E5E5E5"> to retrieve TP all our</font>

294
00:15:24,280 --> 00:15:32,800
templates and then you can register this

295
00:15:27,550 --> 00:15:36,189
TR function<font color="#CCCCCC"> that we're using then you</font>

296
00:15:32,800 --> 00:15:38,709
create a new W liner again<font color="#E5E5E5"> but then you</font>

297
00:15:36,190 --> 00:15:41,080
bind it to this edit variable with bind

298
00:15:38,710 --> 00:15:44,950
widgets and we also have a shorter<font color="#E5E5E5"> form</font>

299
00:15:41,080 --> 00:15:45,960
of that<font color="#E5E5E5"> by new so we find a new push</font>

300
00:15:44,950 --> 00:15:49,560
button<font color="#CCCCCC"> to</font>

301
00:15:45,960 --> 00:15:51,240
<font color="#CCCCCC">Vidia and variable and then every</font>

302
00:15:49,560 --> 00:15:53,880
subsequent<font color="#E5E5E5"> argument</font><font color="#CCCCCC"> is just past</font>

303
00:15:51,240 --> 00:15:56,460
<font color="#CCCCCC">intricate structure of a</font><font color="#E5E5E5"> W</font><font color="#CCCCCC"> push-button</font>

304
00:15:53,880 --> 00:15:59,610
<font color="#CCCCCC">so will you also use the TR function to</font>

305
00:15:56,460 --> 00:16:03,090
get this<font color="#CCCCCC"> read me message and now we'll</font>

306
00:15:59,610 --> 00:16:05,640
leave the results<font color="#CCCCCC"> empty for now</font><font color="#E5E5E5"> then</font>

307
00:16:03,090 --> 00:16:07,050
we're gonna find this show<font color="#E5E5E5"> greeting</font>

308
00:16:05,640 --> 00:16:09,360
function like this so<font color="#E5E5E5"> we could have</font>

309
00:16:07,050 --> 00:16:12,599
<font color="#CCCCCC">captured the edits but</font><font color="#E5E5E5"> to show another</font>

310
00:16:09,360 --> 00:16:15,870
<font color="#E5E5E5">feature we can also use the resolve</font>

311
00:16:12,600 --> 00:16:18,540
function which<font color="#CCCCCC"> will try to find</font><font color="#E5E5E5"> this</font>

312
00:16:15,870 --> 00:16:21,090
variable inside of<font color="#E5E5E5"> your templates and if</font>

313
00:16:18,540 --> 00:16:23,819
it finds it<font color="#CCCCCC"> and if you can cast</font><font color="#E5E5E5"> it to</font>

314
00:16:21,090 --> 00:16:27,390
the type you give it then it<font color="#E5E5E5"> will return</font>

315
00:16:23,820 --> 00:16:31,370
a pointer to<font color="#CCCCCC"> that</font><font color="#E5E5E5"> otherwise it will just</font>

316
00:16:27,390 --> 00:16:35,040
<font color="#E5E5E5">return null pointer and then you can and</font>

317
00:16:31,370 --> 00:16:39,450
them with bind string you can<font color="#E5E5E5"> bind a</font>

318
00:16:35,040 --> 00:16:42,420
string to a variable<font color="#CCCCCC"> so we'll use this</font>

319
00:16:39,450 --> 00:16:44,190
results<font color="#E5E5E5"> string and then set the text</font>

320
00:16:42,420 --> 00:16:50,069
formats to play and<font color="#CCCCCC"> again</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> the</font>

321
00:16:44,190 --> 00:16:54,030
<font color="#E5E5E5">default is XHTML</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we connect our</font>

322
00:16:50,070 --> 00:16:56,520
<font color="#CCCCCC">singles</font><font color="#E5E5E5"> like before and our new main</font>

323
00:16:54,030 --> 00:16:58,680
function<font color="#E5E5E5"> just becomes the using of the</font>

324
00:16:56,520 --> 00:17:00,840
template<font color="#CCCCCC"> and strings and</font><font color="#E5E5E5"> spell that CSS</font>

325
00:16:58,680 --> 00:17:03,810
and<font color="#E5E5E5"> then we create our new hello</font>

326
00:17:00,840 --> 00:17:06,300
templates so building a running is the

327
00:17:03,810 --> 00:17:08,790
<font color="#CCCCCC">thing except</font><font color="#E5E5E5"> that you know you have to</font>

328
00:17:06,300 --> 00:17:13,230
pass in the app<font color="#CCCCCC"> route so it knows where</font>

329
00:17:08,790 --> 00:17:16,010
to<font color="#CCCCCC"> find that one so when you run that</font><font color="#E5E5E5"> it</font>

330
00:17:13,230 --> 00:17:16,010
looks<font color="#E5E5E5"> like this</font>

331
00:17:20,470 --> 00:17:22,530
<font color="#CCCCCC">Oh</font>

332
00:17:26,500 --> 00:17:32,320
<font color="#CCCCCC">but I'm not gonna show</font><font color="#E5E5E5"> any more code and</font>

333
00:17:29,320 --> 00:17:32,320
editors

334
00:17:39,030 --> 00:17:46,680
right<font color="#E5E5E5"> but we have a new well now it</font>

335
00:17:44,490 --> 00:17:49,500
<font color="#E5E5E5">looks a bit nicer</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> you have a</font>

336
00:17:46,680 --> 00:17:54,210
<font color="#E5E5E5">sense</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> font and it still works and now</font>

337
00:17:49,500 --> 00:17:56,850
when I changed my language to<font color="#CCCCCC"> Dutch then</font>

338
00:17:54,210 --> 00:17:58,800
it automatically changed the<font color="#CCCCCC"> language so</font>

339
00:17:56,850 --> 00:18:01,020
it just seems to<font color="#E5E5E5"> be my browser and witty</font>

340
00:17:58,800 --> 00:18:13,590
<font color="#E5E5E5">will automatically use the right message</font>

341
00:18:01,020 --> 00:18:15,600
to resourcebundle<font color="#E5E5E5"> so okay so if you want</font>

342
00:18:13,590 --> 00:18:17,370
<font color="#E5E5E5">to be a bit more lazy and you want to</font>

343
00:18:15,600 --> 00:18:19,409
make something that looks<font color="#E5E5E5"> nice quite</font>

344
00:18:17,370 --> 00:18:22,020
quickly you<font color="#CCCCCC"> could use bootstrap so</font><font color="#E5E5E5"> which</font>

345
00:18:19,410 --> 00:18:23,340
he has support for<font color="#E5E5E5"> teaming so we</font>

346
00:18:22,020 --> 00:18:27,090
<font color="#CCCCCC">supports boost up two</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> three</font>

347
00:18:23,340 --> 00:18:28,919
<font color="#CCCCCC">currently not for yet so you create a</font>

348
00:18:27,090 --> 00:18:30,929
new bootstrap theme you set the version

349
00:18:28,920 --> 00:18:32,580
to three and then you set the<font color="#E5E5E5"> theme and</font>

350
00:18:30,930 --> 00:18:35,400
<font color="#E5E5E5">that will automatically include</font><font color="#CCCCCC"> all the</font>

351
00:18:32,580 --> 00:18:37,020
<font color="#E5E5E5">necessary CSS for bootstrap and it will</font>

352
00:18:35,400 --> 00:18:39,540
add the appropriate classes to<font color="#CCCCCC"> the</font>

353
00:18:37,020 --> 00:18:41,550
appropriate widgets<font color="#E5E5E5"> and which is own</font>

354
00:18:39,540 --> 00:18:44,879
custom widgets will also be in a

355
00:18:41,550 --> 00:18:46,560
bootstrap kind of style<font color="#CCCCCC"> so the template</font>

356
00:18:44,880 --> 00:18:51,290
<font color="#E5E5E5">of XML we can change it by adding</font>

357
00:18:46,560 --> 00:18:55,200
<font color="#CCCCCC">another there's another</font><font color="#E5E5E5"> feature</font><font color="#CCCCCC"> of</font>

358
00:18:51,290 --> 00:18:57,629
variables<font color="#CCCCCC"> like you can add a class to it</font>

359
00:18:55,200 --> 00:19:01,110
so we set the class of the button<font color="#CCCCCC"> - BTN</font>

360
00:18:57,630 --> 00:19:03,330
primary so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> already add the BTN but</font>

361
00:19:01,110 --> 00:19:07,080
then we also add<font color="#CCCCCC"> PGM primary to make a</font>

362
00:19:03,330 --> 00:19:09,960
bit<font color="#E5E5E5"> more fancier button and we'll also</font>

363
00:19:07,080 --> 00:19:14,820
use the ID function to make the label<font color="#E5E5E5"> a</font>

364
00:19:09,960 --> 00:19:16,980
proper label so it's like an ID for the

365
00:19:14,820 --> 00:19:19,710
edits and the<font color="#CCCCCC"> Edit variable is defined</font>

366
00:19:16,980 --> 00:19:24,210
<font color="#E5E5E5">in the same templates and then you just</font>

367
00:19:19,710 --> 00:19:26,130
add some some bootstrap sauce<font color="#CCCCCC"> and the</font>

368
00:19:24,210 --> 00:19:28,590
results<font color="#E5E5E5"> we want to put that in a nice</font>

369
00:19:26,130 --> 00:19:30,720
box so we'll just add<font color="#E5E5E5"> a box around it</font>

370
00:19:28,590 --> 00:19:32,939
<font color="#E5E5E5">but</font><font color="#CCCCCC"> we don't want</font><font color="#E5E5E5"> to always show the</font><font color="#CCCCCC"> box</font>

371
00:19:30,720 --> 00:19:35,460
<font color="#CCCCCC">so then we can</font><font color="#E5E5E5"> use a condition so the</font>

372
00:19:32,940 --> 00:19:40,790
condition is kind<font color="#E5E5E5"> of a cross between a</font>

373
00:19:35,460 --> 00:19:40,790
variable<font color="#CCCCCC"> and a tag so</font>

374
00:19:41,330 --> 00:19:51,020
when this condition is<font color="#CCCCCC"> true then this</font>

375
00:19:43,630 --> 00:19:59,000
block<font color="#E5E5E5"> the template is used so then we</font>

376
00:19:51,020 --> 00:20:02,000
can add this ID function again<font color="#E5E5E5"> and the</font>

377
00:19:59,000 --> 00:20:04,940
default value<font color="#E5E5E5"> value of</font><font color="#CCCCCC"> the condition is</font>

378
00:20:02,000 --> 00:20:09,220
false<font color="#CCCCCC"> so in our callback</font><font color="#E5E5E5"> we'll set the</font>

379
00:20:04,940 --> 00:20:12,110
condition with set condition to true<font color="#CCCCCC"> and</font>

380
00:20:09,220 --> 00:20:14,930
then you<font color="#CCCCCC"> run that the same book you have</font>

381
00:20:12,110 --> 00:20:17,689
<font color="#E5E5E5">to make sure</font><font color="#CCCCCC"> that you also specify</font><font color="#E5E5E5"> the</font>

382
00:20:14,930 --> 00:20:21,680
resources there which is<font color="#E5E5E5"> the place where</font>

383
00:20:17,690 --> 00:20:23,840
all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ouija resources are located so</font>

384
00:20:21,680 --> 00:20:25,280
this will<font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> finds all of</font>

385
00:20:23,840 --> 00:20:43,399
<font color="#E5E5E5">the bootstrap</font><font color="#CCCCCC"> style sheets</font><font color="#E5E5E5"> and stuff</font>

386
00:20:25,280 --> 00:20:46,310
<font color="#CCCCCC">like that</font><font color="#E5E5E5"> so if</font><font color="#CCCCCC"> I run that</font><font color="#E5E5E5"> one then it</font>

387
00:20:43,400 --> 00:20:50,570
looks a bit<font color="#CCCCCC"> nicer and then</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> enter</font>

388
00:20:46,310 --> 00:20:56,540
your<font color="#CCCCCC"> name and it shows like</font><font color="#E5E5E5"> a nice</font>

389
00:20:50,570 --> 00:20:59,330
<font color="#E5E5E5">little box and so where do you go from</font>

390
00:20:56,540 --> 00:21:01,040
<font color="#CCCCCC">here so we know how</font><font color="#E5E5E5"> to make a simple</font>

391
00:20:59,330 --> 00:21:02,780
<font color="#CCCCCC">hello world application we can make it</font>

392
00:21:01,040 --> 00:21:06,379
look a<font color="#CCCCCC"> bit nicer</font><font color="#E5E5E5"> with templates and</font>

393
00:21:02,780 --> 00:21:11,990
stuff so there<font color="#E5E5E5"> are some tutorials so the</font>

394
00:21:06,380 --> 00:21:14,240
<font color="#E5E5E5">Amazon introduction to</font><font color="#CCCCCC"> wiki you probably</font>

395
00:21:11,990 --> 00:21:17,000
<font color="#CCCCCC">don't need any</font><font color="#E5E5E5"> more now but there is</font>

396
00:21:14,240 --> 00:21:20,500
also an introduction to MIDI DB o or ORM

397
00:21:17,000 --> 00:21:23,120
or authentication stuff in<font color="#E5E5E5"> VT off and</font>

398
00:21:20,500 --> 00:21:25,580
there's just a general<font color="#CCCCCC"> wheaty library</font>

399
00:21:23,120 --> 00:21:27,379
<font color="#CCCCCC">overview</font><font color="#E5E5E5"> that you can read you can of</font>

400
00:21:25,580 --> 00:21:30,580
course also find the reference manual<font color="#E5E5E5"> on</font>

401
00:21:27,380 --> 00:21:30,580
our website and

402
00:21:38,310 --> 00:21:45,669
and our widget gallery<font color="#E5E5E5"> is another good</font>

403
00:21:43,390 --> 00:21:48,040
<font color="#CCCCCC">resource</font><font color="#E5E5E5"> if you want to find out more</font>

404
00:21:45,670 --> 00:21:50,620
about all the widgets that<font color="#E5E5E5"> are in</font><font color="#CCCCCC"> witty</font>

405
00:21:48,040 --> 00:21:57,129
so they always<font color="#CCCCCC"> have so we have</font><font color="#E5E5E5"> stuff</font>

406
00:21:50,620 --> 00:21:59,530
like 3d charts for example we have to

407
00:21:57,130 --> 00:22:01,290
teach our all sorts of stuff and<font color="#E5E5E5"> there's</font>

408
00:21:59,530 --> 00:22:04,870
always like a<font color="#E5E5E5"> little code sample</font>

409
00:22:01,290 --> 00:22:09,639
underneath the example so<font color="#CCCCCC"> that it shows</font>

410
00:22:04,870 --> 00:22:11,949
<font color="#E5E5E5">you how to use</font><font color="#CCCCCC"> it and the last thing is</font>

411
00:22:09,640 --> 00:22:19,450
you can of<font color="#CCCCCC"> course go to the source code</font>

412
00:22:11,950 --> 00:22:22,740
<font color="#CCCCCC">at get up</font><font color="#E5E5E5"> and sorry and in this source</font>

413
00:22:19,450 --> 00:22:28,390
code repository you can<font color="#E5E5E5"> find examples</font>

414
00:22:22,740 --> 00:22:33,100
and especially interesting are these

415
00:22:28,390 --> 00:22:34,780
feature examples which zoom in on like

416
00:22:33,100 --> 00:22:38,409
just<font color="#CCCCCC"> a single</font><font color="#E5E5E5"> feature and give you like</font>

417
00:22:34,780 --> 00:22:43,690
the<font color="#E5E5E5"> minimum</font><font color="#CCCCCC"> application that kind of</font>

418
00:22:38,410 --> 00:22:44,770
<font color="#E5E5E5">demonstrates it and that was it thank</font>

419
00:22:43,690 --> 00:22:48,590
you

420
00:22:44,770 --> 00:22:50,629
[Applause]

421
00:22:48,590 --> 00:22:52,689
[Music]

422
00:22:50,630 --> 00:22:52,690
<font color="#E5E5E5">you</font>

