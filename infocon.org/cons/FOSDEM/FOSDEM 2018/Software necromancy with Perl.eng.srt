1
00:00:06,640 --> 00:00:14,629
<font color="#E5E5E5">okay thank you</font><font color="#CCCCCC"> for thank</font><font color="#E5E5E5"> you for coming</font>

2
00:00:09,920 --> 00:00:19,460
<font color="#E5E5E5">are we talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> rescuing a 1980s</font>

3
00:00:14,630 --> 00:00:26,930
<font color="#E5E5E5">for 4gl and second some ancient</font>

4
00:00:19,460 --> 00:00:31,340
telepathic<font color="#E5E5E5"> or software from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> 90s</font><font color="#CCCCCC"> now</font>

5
00:00:26,930 --> 00:00:33,040
my my current client<font color="#E5E5E5"> runs a human</font>

6
00:00:31,340 --> 00:00:39,530
resources management software business

7
00:00:33,040 --> 00:00:43,729
and has a heirloom<font color="#E5E5E5"> 4gl it is heirloom</font>

8
00:00:39,530 --> 00:00:45,440
it is not modern<font color="#E5E5E5"> in the slightest but it</font>

9
00:00:43,729 --> 00:00:49,129
exists with us and it's still useful and

10
00:00:45,440 --> 00:00:50,750
makes money for people as a<font color="#E5E5E5"> example of</font>

11
00:00:49,129 --> 00:00:52,549
what the operation<font color="#E5E5E5"> is like and how it</font>

12
00:00:50,750 --> 00:00:58,070
has been<font color="#E5E5E5"> around and this is this as part</font>

13
00:00:52,549 --> 00:01:01,549
of the building infrastructure it<font color="#E5E5E5"> is a</font>

14
00:00:58,070 --> 00:01:04,129
<font color="#CCCCCC">eyes 50 patch panel</font><font color="#E5E5E5"> somewhere in the</font>

15
00:01:01,549 --> 00:01:06,320
<font color="#CCCCCC">building there was a enough UNIX</font><font color="#E5E5E5"> our</font>

16
00:01:04,129 --> 00:01:08,420
software and often use our<font color="#E5E5E5"> hardware</font>

17
00:01:06,320 --> 00:01:12,080
rather<font color="#E5E5E5"> to connect all of those in and</font>

18
00:01:08,420 --> 00:01:15,860
there was<font color="#CCCCCC"> a little terminal terminal</font>

19
00:01:12,080 --> 00:01:18,800
sockets<font color="#CCCCCC"> in every Navy office and lots of</font>

20
00:01:15,860 --> 00:01:24,530
people<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> an accounting and all that</font>

21
00:01:18,800 --> 00:01:28,580
all that<font color="#E5E5E5"> kind of stuff so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> software</font>

22
00:01:24,530 --> 00:01:38,210
comes from a different<font color="#CCCCCC"> age really but is</font>

23
00:01:28,580 --> 00:01:42,530
<font color="#E5E5E5">indeed still with us now what is what is</font>

24
00:01:38,210 --> 00:01:45,199
a<font color="#E5E5E5"> 40 hour early now it would usually be</font>

25
00:01:42,530 --> 00:01:50,420
a fourth iteration language which which

26
00:01:45,200 --> 00:01:52,159
which means it it does<font color="#CCCCCC"> it</font><font color="#E5E5E5"> works out what</font>

27
00:01:50,420 --> 00:01:54,080
what to do rather<font color="#CCCCCC"> than being told what</font>

28
00:01:52,159 --> 00:01:56,870
to do so<font color="#CCCCCC"> like with SQL you tell it the</font>

29
00:01:54,080 --> 00:01:58,970
<font color="#CCCCCC">results you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's able to itself</font>

30
00:01:56,870 --> 00:02:05,210
<font color="#E5E5E5">work out the</font><font color="#CCCCCC"> stimulus</font><font color="#E5E5E5"> of database</font>

31
00:01:58,970 --> 00:02:07,940
<font color="#CCCCCC">operations to to get</font><font color="#E5E5E5"> that data out but</font>

32
00:02:05,210 --> 00:02:10,250
in our case it<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> doesn't really</font>

33
00:02:07,940 --> 00:02:12,100
mean<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it more means a language</font>

34
00:02:10,250 --> 00:02:14,240
<font color="#E5E5E5">that's very tightly glued to a database</font>

35
00:02:12,100 --> 00:02:17,100
<font color="#E5E5E5">which makes it very</font><font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> build a</font>

36
00:02:14,240 --> 00:02:22,590
<font color="#CCCCCC">database application</font><font color="#E5E5E5"> such as a</font>

37
00:02:17,100 --> 00:02:22,590
<font color="#E5E5E5">such as a HR management software or</font>

38
00:02:25,700 --> 00:02:30,599
at least in business or

39
00:02:27,930 --> 00:02:32,939
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> go classic</font><font color="#CCCCCC"> a level project AVG</font>

40
00:02:30,599 --> 00:02:34,980
<font color="#E5E5E5">libraries running blockbuster with and</font>

41
00:02:32,939 --> 00:02:38,328
these<font color="#E5E5E5"> are all good applications for for</font>

42
00:02:34,980 --> 00:02:42,869
this kind of thing and the fact<font color="#E5E5E5"> that and</font>

43
00:02:38,329 --> 00:02:45,840
the<font color="#E5E5E5"> amount that it can work out work out</font>

44
00:02:42,870 --> 00:02:47,519
which path to take which how to<font color="#E5E5E5"> commit a</font>

45
00:02:45,840 --> 00:02:49,889
query doesn't<font color="#CCCCCC"> really</font><font color="#E5E5E5"> matter that</font><font color="#CCCCCC"> much</font>

46
00:02:47,519 --> 00:02:59,609
it's<font color="#E5E5E5"> more how easily can you build an</font>

47
00:02:49,889 --> 00:03:01,470
application so we have we<font color="#CCCCCC"> have this</font>

48
00:02:59,609 --> 00:03:03,900
system<font color="#CCCCCC"> it's it's in-house its</font>

49
00:03:01,470 --> 00:03:06,480
proprietary<font color="#CCCCCC"> I can't be show you much</font>

50
00:03:03,900 --> 00:03:07,739
much much<font color="#CCCCCC"> of the old code there you</font>

51
00:03:06,480 --> 00:03:10,560
<font color="#E5E5E5">wouldn't you wouldn't want to see</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> see</font>

52
00:03:07,739 --> 00:03:13,709
the old code<font color="#E5E5E5"> but it exists still because</font>

53
00:03:10,560 --> 00:03:16,139
<font color="#E5E5E5">it it's that it's actually making money</font>

54
00:03:13,709 --> 00:03:19,319
<font color="#E5E5E5">for</font><font color="#CCCCCC"> people and in our</font><font color="#E5E5E5"> case and it really</font>

55
00:03:16,139 --> 00:03:21,239
is it's a it runs<font color="#CCCCCC"> impulses it runs</font><font color="#E5E5E5"> pay</font>

56
00:03:19,319 --> 00:03:23,399
<font color="#E5E5E5">off for people and so this software does</font>

57
00:03:21,239 --> 00:03:25,919
<font color="#CCCCCC">generally cause puke</font><font color="#E5E5E5"> cause people to get</font>

58
00:03:23,400 --> 00:03:27,540
paid<font color="#CCCCCC"> and it's also vibrant and</font><font color="#E5E5E5"> so it's</font>

59
00:03:25,919 --> 00:03:30,870
vitally important<font color="#CCCCCC"> that we get this right</font>

60
00:03:27,540 --> 00:03:35,250
<font color="#CCCCCC">we we pay lots of lots of builders who</font>

61
00:03:30,870 --> 00:03:40,229
are much bigger than<font color="#E5E5E5"> us and getting it</font>

62
00:03:35,250 --> 00:03:42,439
wrong<font color="#E5E5E5"> isn't really an option but it</font>

63
00:03:40,229 --> 00:03:47,220
software<font color="#E5E5E5"> is from a different</font><font color="#CCCCCC"> age and</font>

64
00:03:42,439 --> 00:03:49,948
whilst it still compels<font color="#E5E5E5"> under Linux it</font>

65
00:03:47,220 --> 00:03:54,209
originally<font color="#E5E5E5"> was built under I believe</font>

66
00:03:49,949 --> 00:03:57,959
either<font color="#CCCCCC"> MP</font><font color="#E5E5E5"> a risk or of old version</font><font color="#CCCCCC"> of</font>

67
00:03:54,209 --> 00:04:00,709
spark<font color="#CCCCCC"> and the Sonos</font><font color="#E5E5E5"> these days it</font>

68
00:03:57,959 --> 00:04:02,759
compiles under<font color="#CCCCCC"> these two boots Red Hat</font>

69
00:04:00,709 --> 00:04:09,569
that's<font color="#E5E5E5"> not an option</font>

70
00:04:02,759 --> 00:04:15,328
and for sorry huh I'll do my<font color="#E5E5E5"> best</font>

71
00:04:09,569 --> 00:04:19,680
yes<font color="#E5E5E5"> so it's a it still compels I have</font>

72
00:04:15,329 --> 00:04:21,269
<font color="#E5E5E5">32-bit binary see is that that that's</font>

73
00:04:19,680 --> 00:04:23,940
now part that's now something from the

74
00:04:21,269 --> 00:04:29,820
past<font color="#E5E5E5"> we can't have it last forever like</font>

75
00:04:23,940 --> 00:04:31,740
that so<font color="#CCCCCC"> do you</font><font color="#E5E5E5"> think about it and even</font>

76
00:04:29,820 --> 00:04:33,810
compiling it now now<font color="#CCCCCC"> it's quite hard</font><font color="#E5E5E5"> and</font>

77
00:04:31,740 --> 00:04:35,969
the<font color="#E5E5E5"> knowledge for how it all works as</font>

78
00:04:33,810 --> 00:04:38,940
gradually decayed away and we're left

79
00:04:35,969 --> 00:04:40,710
with<font color="#E5E5E5"> we've just</font><font color="#CCCCCC"> it's behavior so we have</font>

80
00:04:38,940 --> 00:04:41,670
users of<font color="#E5E5E5"> a language we don't</font><font color="#CCCCCC"> have the</font>

81
00:04:40,710 --> 00:04:46,440
language authors

82
00:04:41,670 --> 00:04:49,020
<font color="#CCCCCC">themselves around to pretty full push it</font>

83
00:04:46,440 --> 00:04:51,780
forwards so what we need<font color="#E5E5E5"> to do is</font><font color="#CCCCCC"> a</font>

84
00:04:49,020 --> 00:04:53,880
<font color="#CCCCCC">sweep is sweeping at sweep out this</font><font color="#E5E5E5"> 4000</font>

85
00:04:51,780 --> 00:04:56,479
<font color="#E5E5E5">run time from underneath it and we place</font>

86
00:04:53,880 --> 00:05:05,090
<font color="#CCCCCC">it with and with something new and</font>

87
00:04:56,480 --> 00:05:08,750
<font color="#CCCCCC">that's what I've</font><font color="#E5E5E5"> done using</font><font color="#CCCCCC"> pearl so</font>

88
00:05:05,090 --> 00:05:11,400
imagine you're a C programmer in the<font color="#E5E5E5"> 80s</font>

89
00:05:08,750 --> 00:05:16,940
<font color="#CCCCCC">you're your boss has asked you to to</font>

90
00:05:11,400 --> 00:05:18,419
<font color="#E5E5E5">make a and</font><font color="#CCCCCC"> a for GL of</font><font color="#E5E5E5"> some kind quickly</font>

91
00:05:16,940 --> 00:05:21,570
what you<font color="#E5E5E5"> need</font>

92
00:05:18,420 --> 00:05:26,070
well first you<font color="#CCCCCC"> need</font><font color="#E5E5E5"> a database and that</font>

93
00:05:21,570 --> 00:05:28,920
is C<font color="#CCCCCC"> is</font><font color="#E5E5E5"> I am I think it's a</font><font color="#CCCCCC"> Informix</font>

94
00:05:26,070 --> 00:05:32,400
product<font color="#CCCCCC"> Inc downstairs and your fist is</font>

95
00:05:28,920 --> 00:05:35,700
with a big big stack of<font color="#E5E5E5"> them of manuals</font>

96
00:05:32,400 --> 00:05:44,039
for it I<font color="#E5E5E5"> believe it is it is expensive</font>

97
00:05:35,700 --> 00:05:47,400
or<font color="#CCCCCC"> was expensive</font><font color="#E5E5E5"> and it is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> C API to a</font>

98
00:05:44,040 --> 00:05:49,850
non SQL database<font color="#CCCCCC"> so already no SQL</font>

99
00:05:47,400 --> 00:05:49,849
database

100
00:05:52,830 --> 00:05:58,698
and there we are the other thing we need

101
00:05:56,310 --> 00:06:03,810
<font color="#E5E5E5">of</font><font color="#CCCCCC"> course is a is a programming language</font>

102
00:05:58,699 --> 00:06:04,169
<font color="#CCCCCC">and you need to make one</font><font color="#E5E5E5"> of those on the</font>

103
00:06:03,810 --> 00:06:08,789
cheap

104
00:06:04,169 --> 00:06:10,549
see this is 1987 it is before<font color="#CCCCCC"> Pearl</font>

105
00:06:08,789 --> 00:06:14,240
<font color="#CCCCCC">bonpo</font><font color="#E5E5E5"> naught hasn't been released yet</font>

106
00:06:10,550 --> 00:06:16,830
<font color="#CCCCCC">GCC one GCC one came out</font><font color="#E5E5E5"> in May I think</font>

107
00:06:14,240 --> 00:06:18,210
so it's<font color="#CCCCCC"> a free tools for this</font><font color="#E5E5E5"> kind of</font>

108
00:06:16,830 --> 00:06:22,500
thing<font color="#E5E5E5"> don't really exist</font>

109
00:06:18,210 --> 00:06:25,409
so we've so left<font color="#E5E5E5"> to right one</font><font color="#CCCCCC"> and we</font>

110
00:06:22,500 --> 00:06:31,440
need<font color="#CCCCCC"> a a programming language</font><font color="#E5E5E5"> on the</font>

111
00:06:25,409 --> 00:06:41,150
cheap so let's take a<font color="#E5E5E5"> look at it</font><font color="#CCCCCC"> I have</font>

112
00:06:31,440 --> 00:06:45,930
an<font color="#CCCCCC"> excel assets example code yep right</font>

113
00:06:41,150 --> 00:06:49,679
so there is some sample code which I

114
00:06:45,930 --> 00:06:52,199
like which<font color="#E5E5E5"> I've ever put together it has</font>

115
00:06:49,680 --> 00:06:54,710
some odd features you can see all the

116
00:06:52,199 --> 00:07:00,210
the assignments our<font color="#E5E5E5"> back was compared</font><font color="#CCCCCC"> to</font>

117
00:06:54,710 --> 00:07:02,758
everything else<font color="#CCCCCC"> it has has lots</font><font color="#E5E5E5"> of line</font>

118
00:07:00,210 --> 00:07:07,830
<font color="#E5E5E5">numbers much like much like basic and</font>

119
00:07:02,759 --> 00:07:09,479
and indeed<font color="#E5E5E5"> go</font><font color="#CCCCCC"> tease and go subs much</font>

120
00:07:07,830 --> 00:07:11,870
like basic<font color="#E5E5E5"> but they do exactly what you</font>

121
00:07:09,479 --> 00:07:11,870
expect

122
00:07:15,700 --> 00:07:25,020
and you also<font color="#E5E5E5"> also see the the built-in</font>

123
00:07:19,480 --> 00:07:27,340
database<font color="#E5E5E5"> managing where column where</font>

124
00:07:25,020 --> 00:07:30,490
<font color="#CCCCCC">fields from from a column on</font><font color="#E5E5E5"> magically</font>

125
00:07:27,340 --> 00:07:31,869
glued<font color="#CCCCCC"> into global variables there's no</font>

126
00:07:30,490 --> 00:07:37,480
there's<font color="#CCCCCC"> no other</font><font color="#E5E5E5"> class</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> variables</font>

127
00:07:31,870 --> 00:07:41,070
<font color="#E5E5E5">everything's a global and some some</font><font color="#CCCCCC"> Veit</font>

128
00:07:37,480 --> 00:07:45,910
some hack put in to handle<font color="#E5E5E5"> when IO fails</font>

129
00:07:41,070 --> 00:07:48,250
which just just<font color="#E5E5E5"> about does and it is</font>

130
00:07:45,910 --> 00:07:51,360
<font color="#E5E5E5">line structured so here you can see a</font>

131
00:07:48,250 --> 00:07:56,070
line<font color="#E5E5E5"> ik</font><font color="#CCCCCC"> align continuation</font><font color="#E5E5E5"> operator</font><font color="#CCCCCC"> as</font>

132
00:07:51,360 --> 00:07:56,070
new lines<font color="#CCCCCC"> I REM are part of</font><font color="#E5E5E5"> its index</font>

133
00:08:00,840 --> 00:08:05,799
what you can't see there of course is

134
00:08:02,980 --> 00:08:10,180
<font color="#CCCCCC">the is yet ISM is types now it is</font>

135
00:08:05,800 --> 00:08:12,610
wrongish typed by virtue of<font color="#E5E5E5"> being</font>

136
00:08:10,180 --> 00:08:14,230
database<font color="#E5E5E5"> so every every column</font><font color="#CCCCCC"> has a</font>

137
00:08:12,610 --> 00:08:22,120
type and therefore<font color="#CCCCCC"> a few variable has a</font>

138
00:08:14,230 --> 00:08:24,580
type<font color="#CCCCCC"> magic so in in in real life</font><font color="#E5E5E5"> this</font>

139
00:08:22,120 --> 00:08:27,820
this<font color="#CCCCCC"> gets compiled to it to a bytecode</font>

140
00:08:24,580 --> 00:08:30,039
<font color="#E5E5E5">and then and then run by run by some</font>

141
00:08:27,820 --> 00:08:36,309
ancient<font color="#E5E5E5"> C code which doesn't</font><font color="#CCCCCC"> that</font>

142
00:08:30,040 --> 00:08:38,620
doesn't<font color="#E5E5E5"> need to still compile now one</font>

143
00:08:36,309 --> 00:08:41,109
one fun thing about<font color="#E5E5E5"> about the about</font>

144
00:08:38,620 --> 00:08:43,630
about<font color="#CCCCCC"> the types</font><font color="#E5E5E5"> is that we have dual</font>

145
00:08:41,110 --> 00:08:47,110
VARs<font color="#CCCCCC"> I drew I don't know if this is the</font>

146
00:08:43,630 --> 00:08:49,720
<font color="#E5E5E5">first existence of of them I've had</font><font color="#CCCCCC"> kind</font>

147
00:08:47,110 --> 00:08:54,460
<font color="#E5E5E5">of</font><font color="#CCCCCC"> e example which might not</font><font color="#E5E5E5"> be might</font>

148
00:08:49,720 --> 00:08:57,640
might might be<font color="#E5E5E5"> clear ish there so you</font>

149
00:08:54,460 --> 00:09:01,540
can declare a column as a<font color="#E5E5E5"> neighbor to</font>

150
00:08:57,640 --> 00:09:04,180
type and as a in a numeric context<font color="#E5E5E5"> if I</font>

151
00:09:01,540 --> 00:09:06,339
doubts to the<font color="#CCCCCC"> number and in a string</font>

152
00:09:04,180 --> 00:09:09,630
context it'll magically become a string

153
00:09:06,340 --> 00:09:11,970
being<font color="#E5E5E5"> the being the string</font>

154
00:09:09,630 --> 00:09:16,150
<font color="#E5E5E5">representation of the enumeration which</font>

155
00:09:11,970 --> 00:09:23,440
<font color="#CCCCCC">is either either</font><font color="#E5E5E5"> very nice or very very</font>

156
00:09:16,150 --> 00:09:26,439
<font color="#E5E5E5">alien and it does get used in practice</font>

157
00:09:23,440 --> 00:09:30,370
now this this code we want<font color="#E5E5E5"> to run it and</font>

158
00:09:26,440 --> 00:09:39,399
<font color="#E5E5E5">pass it so winter</font><font color="#CCCCCC"> boo depositor</font><font color="#E5E5E5"> so we</font>

159
00:09:30,370 --> 00:09:43,720
have<font color="#CCCCCC"> reg X grammars this is and Simon</font>

160
00:09:39,399 --> 00:09:46,240
<font color="#E5E5E5">cousins module for writing a parser</font>

161
00:09:43,720 --> 00:09:48,399
<font color="#E5E5E5">let's see</font><font color="#CCCCCC"> Buddha build a parcel from</font><font color="#E5E5E5"> a</font>

162
00:09:46,240 --> 00:09:50,649
from from<font color="#CCCCCC"> recursive regular trig</font>

163
00:09:48,399 --> 00:09:51,850
expressions<font color="#CCCCCC"> and there's no need</font><font color="#E5E5E5"> to write</font>

164
00:09:50,649 --> 00:09:55,660
<font color="#E5E5E5">a separate lecture like you would if</font>

165
00:09:51,850 --> 00:09:59,709
you're using<font color="#CCCCCC"> lexomycin</font><font color="#E5E5E5"> to write father</font>

166
00:09:55,660 --> 00:10:02,620
dead simple not not massively<font color="#E5E5E5"> fast but</font>

167
00:09:59,709 --> 00:10:06,819
um there's always<font color="#E5E5E5"> doing as long as your</font>

168
00:10:02,620 --> 00:10:08,589
code is not too big<font color="#E5E5E5"> you're okay so and</font>

169
00:10:06,819 --> 00:10:10,089
of course<font color="#E5E5E5"> it's quite easy but if you</font>

170
00:10:08,589 --> 00:10:12,160
don't know what the case of post<font color="#E5E5E5"> what it</font>

171
00:10:10,089 --> 00:10:14,800
seems is supposed to do you you can go

172
00:10:12,160 --> 00:10:17,889
through it step by step<font color="#E5E5E5"> and build up</font>

173
00:10:14,800 --> 00:10:22,660
<font color="#CCCCCC">your the</font><font color="#E5E5E5"> data parser to</font><font color="#CCCCCC"> Maps what you</font>

174
00:10:17,889 --> 00:10:29,829
have so we do<font color="#E5E5E5"> this and back to</font><font color="#CCCCCC"> our</font>

175
00:10:22,660 --> 00:10:35,019
<font color="#E5E5E5">example so here I am</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at the line</font>

176
00:10:29,829 --> 00:10:38,979
looking<font color="#E5E5E5"> at line 50 the code which we can</font>

177
00:10:35,019 --> 00:10:43,720
explode out into into nice little pause

178
00:10:38,980 --> 00:10:48,399
pause tree like that<font color="#E5E5E5"> and take</font><font color="#CCCCCC"> a closer</font>

179
00:10:43,720 --> 00:10:52,060
look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> that nice</font><font color="#E5E5E5"> and simple</font><font color="#CCCCCC"> for doing</font>

180
00:10:48,399 --> 00:10:58,769
doing<font color="#CCCCCC"> misalignment and then we have our</font>

181
00:10:52,060 --> 00:11:01,869
<font color="#E5E5E5">our grammar for doing this so it's all</font>

182
00:10:58,769 --> 00:11:07,569
it's all breakfast all the way down you

183
00:11:01,870 --> 00:11:11,470
start<font color="#E5E5E5"> at</font><font color="#CCCCCC"> statement set and operations</font>

184
00:11:07,569 --> 00:11:12,790
assignments<font color="#E5E5E5"> blah blah blah and you end</font>

185
00:11:11,470 --> 00:11:14,740
up putting it

186
00:11:12,790 --> 00:11:21,160
building a a parse tree which turns<font color="#E5E5E5"> into</font>

187
00:11:14,740 --> 00:11:26,019
a into a<font color="#E5E5E5"> Perl later structure so hash of</font>

188
00:11:21,160 --> 00:11:30,399
hashes eventually and there you are<font color="#E5E5E5"> you</font>

189
00:11:26,019 --> 00:11:32,079
get data now<font color="#E5E5E5"> that code</font><font color="#CCCCCC"> that was a simple</font>

190
00:11:30,399 --> 00:11:34,589
line in the code<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have little worse</font><font color="#E5E5E5"> a</font>

191
00:11:32,079 --> 00:11:34,589
worse one

192
00:11:36,390 --> 00:11:42,850
now it had like hit a line like<font color="#CCCCCC"> that</font>

193
00:11:41,200 --> 00:11:45,720
which I'm not not<font color="#E5E5E5"> for Thea like</font>

194
00:11:42,850 --> 00:11:49,990
lightning strike there and it's<font color="#CCCCCC"> horrible</font>

195
00:11:45,720 --> 00:11:52,720
how does<font color="#CCCCCC"> it</font><font color="#E5E5E5"> even work you have a Appel</font>

196
00:11:49,990 --> 00:11:56,040
style<font color="#CCCCCC"> ikki there which is which just</font>

197
00:11:52,720 --> 00:12:01,240
<font color="#E5E5E5">means equality operator not assignment</font>

198
00:11:56,040 --> 00:12:07,199
some some random calculations<font color="#E5E5E5"> a line</font>

199
00:12:01,240 --> 00:12:13,690
continuation and another another

200
00:12:07,200 --> 00:12:15,910
everything and<font color="#E5E5E5"> got lots of questions</font>

201
00:12:13,690 --> 00:12:16,960
<font color="#CCCCCC">from that</font><font color="#E5E5E5"> so you first stop worrying</font>

202
00:12:15,910 --> 00:12:18,520
about<font color="#CCCCCC"> what about</font><font color="#E5E5E5"> whether you can make</font>

203
00:12:16,960 --> 00:12:20,950
<font color="#CCCCCC">rigged apps grammars handle the</font>

204
00:12:18,520 --> 00:12:23,260
evaluation order correctly so with with

205
00:12:20,950 --> 00:12:26,410
the with<font color="#CCCCCC"> a</font><font color="#E5E5E5"> multiplication there does</font>

206
00:12:23,260 --> 00:12:29,110
<font color="#E5E5E5">that mean you're adding</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> to TPS</font><font color="#CCCCCC"> num</font>

207
00:12:26,410 --> 00:12:33,160
or does it<font color="#E5E5E5"> mean add one</font><font color="#CCCCCC"> they multiply</font>

208
00:12:29,110 --> 00:12:35,620
<font color="#CCCCCC">the whole whole lot by</font><font color="#E5E5E5"> three and there's</font>

209
00:12:33,160 --> 00:12:37,810
not<font color="#E5E5E5"> much</font><font color="#CCCCCC"> you can do there apart from fun</font>

210
00:12:35,620 --> 00:12:45,120
you<font color="#E5E5E5"> find the old</font><font color="#CCCCCC"> runtime run it and see</font>

211
00:12:37,810 --> 00:12:48,910
<font color="#CCCCCC">what happens now</font><font color="#E5E5E5"> turns out in practice</font>

212
00:12:45,120 --> 00:12:50,740
<font color="#CCCCCC">everything's done</font><font color="#E5E5E5"> in order so</font><font color="#CCCCCC"> 40 L</font>

213
00:12:48,910 --> 00:12:53,319
doesn't<font color="#E5E5E5"> really mean 40</font><font color="#CCCCCC"> L everything</font>

214
00:12:50,740 --> 00:12:57,820
happens in exactly the order<font color="#E5E5E5"> here it</font>

215
00:12:53,320 --> 00:13:00,220
<font color="#E5E5E5">really is turns out a</font><font color="#CCCCCC"> single</font><font color="#E5E5E5"> register</font>

216
00:12:57,820 --> 00:13:05,250
complain assembler for<font color="#E5E5E5"> a single register</font>

217
00:13:00,220 --> 00:13:07,960
virtual machine so here you<font color="#E5E5E5"> have on</font>

218
00:13:05,250 --> 00:13:09,820
means<font color="#CCCCCC"> wack number into accumulator</font>

219
00:13:07,960 --> 00:13:12,840
<font color="#E5E5E5">compared with accumulator set</font>

220
00:13:09,820 --> 00:13:17,170
accumulator again<font color="#CCCCCC"> add one turkey later</font>

221
00:13:12,840 --> 00:13:20,440
all very neat and forgets grammars<font color="#CCCCCC"> lets</font>

222
00:13:17,170 --> 00:13:25,800
you do that quite nicely<font color="#CCCCCC"> so you end</font><font color="#E5E5E5"> up</font>

223
00:13:20,440 --> 00:13:30,150
<font color="#E5E5E5">with a with a nice linear parse tree and</font>

224
00:13:25,800 --> 00:13:36,939
with that you can<font color="#CCCCCC"> you can build</font><font color="#E5E5E5"> your own</font>

225
00:13:30,150 --> 00:13:40,079
your runtime<font color="#E5E5E5"> or you first be prices or</font>

226
00:13:36,940 --> 00:13:45,280
all the lines you pass<font color="#E5E5E5"> lines one by one</font>

227
00:13:40,080 --> 00:13:47,080
reg X grammars doesn't give it's a

228
00:13:45,280 --> 00:13:47,750
<font color="#E5E5E5">reggae so just does he it matches or</font>

229
00:13:47,080 --> 00:13:51,649
doesn't match

230
00:13:47,750 --> 00:13:54,170
so easier to do it'll<font color="#CCCCCC"> line-by-line</font><font color="#E5E5E5"> and</font>

231
00:13:51,649 --> 00:13:57,290
see<font color="#CCCCCC"> what fails</font><font color="#E5E5E5"> did you get it good out</font>

232
00:13:54,170 --> 00:14:01,990
but and then you you flatten<font color="#E5E5E5"> the</font>

233
00:13:57,290 --> 00:14:01,990
resulting<font color="#CCCCCC"> pars hash from Britax grammars</font>

234
00:14:02,259 --> 00:14:09,949
<font color="#CCCCCC">you make a bigger right I know it's cute</font>

235
00:14:04,790 --> 00:14:13,540
it in practice<font color="#E5E5E5"> that looks like this so</font>

236
00:14:09,949 --> 00:14:16,189
you have<font color="#CCCCCC"> dual array of lines you have</font>

237
00:14:13,540 --> 00:14:19,730
<font color="#E5E5E5">again reg X which is</font><font color="#CCCCCC"> dollars line passer</font>

238
00:14:16,189 --> 00:14:21,980
<font color="#E5E5E5">and there's this because it's a</font><font color="#CCCCCC"> purl</font>

239
00:14:19,730 --> 00:14:26,810
there's a magic<font color="#CCCCCC"> sigil if it's not as</font>

240
00:14:21,980 --> 00:14:33,740
<font color="#E5E5E5">forward slash is a hash then you have</font>

241
00:14:26,810 --> 00:14:38,540
you<font color="#E5E5E5"> have data a data basically looks</font>

242
00:14:33,740 --> 00:14:42,189
like<font color="#E5E5E5"> a a deep</font><font color="#CCCCCC"> pearl hash of hash of</font>

243
00:14:38,540 --> 00:14:42,189
hashes<font color="#CCCCCC"> and there you are</font>

244
00:14:43,540 --> 00:14:57,339
so in summary laziness does has has

245
00:14:47,240 --> 00:14:57,339
remained<font color="#E5E5E5"> a virtue since the mid 80s next</font>

246
00:15:06,340 --> 00:15:09,340
<font color="#CCCCCC">ray</font>

247
00:15:10,200 --> 00:15:17,230
so before I go into<font color="#CCCCCC"> a game I'm going to</font>

248
00:15:14,440 --> 00:15:23,040
show you<font color="#E5E5E5"> a demo using</font><font color="#CCCCCC"> a using</font><font color="#E5E5E5"> pearl as</font>

249
00:15:17,230 --> 00:15:27,280
turns out you can do this so demo use

250
00:15:23,040 --> 00:15:28,870
<font color="#CCCCCC">need-need harder to run</font><font color="#E5E5E5"> on and when I</font>

251
00:15:27,280 --> 00:15:30,280
was<font color="#CCCCCC"> feeling</font><font color="#E5E5E5"> around with these</font><font color="#CCCCCC"> things I</font>

252
00:15:28,870 --> 00:15:37,150
use<font color="#E5E5E5"> but those were</font><font color="#CCCCCC"> too nice but it's</font>

253
00:15:30,280 --> 00:15:41,110
hard way you can write<font color="#E5E5E5"> demos on there's</font>

254
00:15:37,150 --> 00:15:44,050
a there's a a con kit some a Commodore

255
00:15:41,110 --> 00:15:50,520
kit but<font color="#E5E5E5"> of course all that's</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> done</font>

256
00:15:44,050 --> 00:15:54,640
<font color="#CCCCCC">now</font><font color="#E5E5E5"> we now have OpenGL that is the</font>

257
00:15:50,520 --> 00:15:57,600
OpenGL rendering rendering pipeline you

258
00:15:54,640 --> 00:16:01,090
pop<font color="#E5E5E5"> your you've pop</font><font color="#CCCCCC"> purim objects</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> n</font>

259
00:15:57,600 --> 00:16:03,460
vertices in at the top<font color="#CCCCCC"> and apples at the</font>

260
00:16:01,090 --> 00:16:09,400
bottom is<font color="#E5E5E5"> your way your</font><font color="#CCCCCC"> bitmap to</font>

261
00:16:03,460 --> 00:16:13,690
display and<font color="#CCCCCC"> how let's do that as</font>

262
00:16:09,400 --> 00:16:15,579
bindings for I still<font color="#E5E5E5"> kind of do STL dot</font>

263
00:16:13,690 --> 00:16:18,850
p.m. kind of<font color="#CCCCCC"> OpenGL</font><font color="#E5E5E5"> but they recommend</font>

264
00:16:15,580 --> 00:16:20,650
to use<font color="#E5E5E5"> OpenGL</font><font color="#CCCCCC"> PN which gives you most</font><font color="#E5E5E5"> of</font>

265
00:16:18,850 --> 00:16:25,780
<font color="#E5E5E5">the and of null version of OpenGL</font><font color="#CCCCCC"> I</font>

266
00:16:20,650 --> 00:16:28,959
think Ron like<font color="#CCCCCC"> 1.6 now but there's</font>

267
00:16:25,780 --> 00:16:37,360
there's enough fun stuff in them in<font color="#CCCCCC"> 1.2</font>

268
00:16:28,960 --> 00:16:44,170
to do some stuff so see how that<font color="#E5E5E5"> works</font>

269
00:16:37,360 --> 00:16:45,790
<font color="#CCCCCC">so making a phenomena is actually pretty</font>

270
00:16:44,170 --> 00:16:47,890
<font color="#CCCCCC">straightforward</font><font color="#E5E5E5"> I'm chopped off the top</font>

271
00:16:45,790 --> 00:16:52,390
there is<font color="#E5E5E5"> your is your use news OpenGL</font>

272
00:16:47,890 --> 00:16:54,490
<font color="#E5E5E5">and it's a it's neatly packaged in in</font>

273
00:16:52,390 --> 00:16:58,569
Debian Ubuntu so it's that<font color="#CCCCCC"> easy to you</font>

274
00:16:54,490 --> 00:17:03,400
to play<font color="#E5E5E5"> with now what we're</font><font color="#CCCCCC"> doing here</font>

275
00:16:58,570 --> 00:17:05,560
is we're defining a a polygon with with

276
00:17:03,400 --> 00:17:13,119
four<font color="#E5E5E5"> corners so a square that fills the</font>

277
00:17:05,560 --> 00:17:17,109
entire<font color="#E5E5E5"> viewport we give each corner</font>

278
00:17:13,119 --> 00:17:21,879
it's<font color="#CCCCCC"> its own</font><font color="#E5E5E5"> RGB value and we make</font><font color="#CCCCCC"> one</font>

279
00:17:17,109 --> 00:17:29,229
<font color="#CCCCCC">of the the corner make the blue value</font>

280
00:17:21,880 --> 00:17:31,919
increase continually<font color="#E5E5E5"> I say I can say</font>

281
00:17:29,230 --> 00:17:31,919
<font color="#CCCCCC">what it looks</font><font color="#E5E5E5"> like</font>

282
00:17:41,530 --> 00:17:45,540
<font color="#CCCCCC">oh yeah</font>

283
00:17:52,900 --> 00:17:57,340
see it gradually<font color="#E5E5E5"> changes color now to</font>

284
00:17:55,720 --> 00:18:01,990
make all that work<font color="#E5E5E5"> you have to define</font>

285
00:17:57,340 --> 00:18:03,909
shaders<font color="#E5E5E5"> now with which are the and the</font>

286
00:18:01,990 --> 00:18:05,680
parts of the pipeline<font color="#E5E5E5"> which you can in</font>

287
00:18:03,910 --> 00:18:09,580
OpenGL<font color="#CCCCCC"> which you can define in a drone</font>

288
00:18:05,680 --> 00:18:11,410
<font color="#CCCCCC">Cote nowadays you can give it code in a</font>

289
00:18:09,580 --> 00:18:14,020
sealer language and it'll it will<font color="#E5E5E5"> run it</font>

290
00:18:11,410 --> 00:18:24,330
in<font color="#CCCCCC"> a GPU and should go then nice and</font>

291
00:18:14,020 --> 00:18:26,679
<font color="#CCCCCC">fast so first we have a vertex shader</font>

292
00:18:24,330 --> 00:18:28,600
<font color="#CCCCCC">this takes</font><font color="#E5E5E5"> all the corners</font><font color="#CCCCCC"> all the</font>

293
00:18:26,679 --> 00:18:31,150
vertices all the corners of<font color="#CCCCCC"> your</font><font color="#E5E5E5"> of your</font>

294
00:18:28,600 --> 00:18:34,330
<font color="#E5E5E5">shape so in our case</font><font color="#CCCCCC"> four points of</font><font color="#E5E5E5"> us</font>

295
00:18:31,150 --> 00:18:37,240
defining a square and you can think<font color="#CCCCCC"> of</font>

296
00:18:34,330 --> 00:18:39,070
to them<font color="#E5E5E5"> this is this is a really there's</font>

297
00:18:37,240 --> 00:18:45,840
a good minimal example it<font color="#E5E5E5"> just passes</font>

298
00:18:39,070 --> 00:18:52,389
<font color="#CCCCCC">pass to see theta straight through and</font>

299
00:18:45,840 --> 00:18:54,669
the more interest more common one is is

300
00:18:52,390 --> 00:18:57,010
that the color is<font color="#CCCCCC"> that is the fragment</font>

301
00:18:54,670 --> 00:19:00,130
shader which is a program which runs<font color="#E5E5E5"> for</font>

302
00:18:57,010 --> 00:19:03,040
<font color="#E5E5E5">every every pixel in your in the output</font>

303
00:19:00,130 --> 00:19:05,380
<font color="#E5E5E5">and here we just take the the color</font>

304
00:19:03,040 --> 00:19:09,428
coming in coming in from the<font color="#E5E5E5"> previous</font>

305
00:19:05,380 --> 00:19:12,370
stage<font color="#E5E5E5"> and a slightly</font><font color="#CCCCCC"> habit stage</font><font color="#E5E5E5"> that</font>

306
00:19:09,429 --> 00:19:17,920
simple<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> do anything and so you</font>

307
00:19:12,370 --> 00:19:20,129
<font color="#E5E5E5">end up</font><font color="#CCCCCC"> with flickering</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> Anakin</font>

308
00:19:17,920 --> 00:19:20,130
<font color="#CCCCCC">square</font>

309
00:19:22,470 --> 00:19:27,649
but now you can<font color="#CCCCCC"> see more</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> one</font>

310
00:19:29,809 --> 00:19:35,580
so you can you<font color="#CCCCCC"> can combine Perl</font><font color="#E5E5E5"> and</font>

311
00:19:33,600 --> 00:19:39,110
<font color="#CCCCCC">OpenGL shader</font><font color="#E5E5E5"> is quite nicely</font><font color="#CCCCCC"> as you</font>

312
00:19:35,580 --> 00:19:39,110
<font color="#CCCCCC">have your your string processing</font>

313
00:19:39,710 --> 00:19:47,309
<font color="#E5E5E5">capabilities up there so I define a</font>

314
00:19:44,870 --> 00:19:49,889
array<font color="#E5E5E5"> containing load of random points</font>

315
00:19:47,309 --> 00:19:52,168
at the top<font color="#E5E5E5"> back and</font><font color="#CCCCCC"> wood into I am in</font>

316
00:19:49,889 --> 00:19:56,519
<font color="#CCCCCC">Interpol string and this</font><font color="#E5E5E5"> matter</font>

317
00:19:52,169 --> 00:19:58,559
<font color="#E5E5E5">magically whack it into the into the</font>

318
00:19:56,519 --> 00:20:00,899
shader source code<font color="#E5E5E5"> so this is in the</font>

319
00:19:58,559 --> 00:20:05,039
semi see<font color="#CCCCCC"> light language there's a</font>

320
00:20:00,899 --> 00:20:07,350
uniform<font color="#CCCCCC"> I mean I think uniform</font><font color="#E5E5E5"> means</font>

321
00:20:05,039 --> 00:20:12,889
constant<font color="#E5E5E5"> roughly</font><font color="#CCCCCC"> a bit vague</font><font color="#E5E5E5"> on this and</font>

322
00:20:07,350 --> 00:20:16,500
<font color="#CCCCCC">vector e vector</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> three points and</font>

323
00:20:12,889 --> 00:20:18,990
<font color="#E5E5E5">then we have a program</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> which this</font>

324
00:20:16,500 --> 00:20:20,279
runs for every<font color="#E5E5E5"> every pixel get goes</font>

325
00:20:18,990 --> 00:20:23,309
through that goes through the<font color="#E5E5E5"> list this</font>

326
00:20:20,279 --> 00:20:25,409
list of<font color="#CCCCCC"> mr.</font><font color="#E5E5E5"> then of points</font><font color="#CCCCCC"> looks at how</font>

327
00:20:23,309 --> 00:20:28,408
far<font color="#E5E5E5"> you're away from</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> these pixels</font>

328
00:20:25,409 --> 00:20:31,080
away<font color="#E5E5E5"> from it when these points we can</font>

329
00:20:28,409 --> 00:20:35,039
connect me use the color as we defined

330
00:20:31,080 --> 00:20:40,529
the the color to vary across across<font color="#E5E5E5"> our</font>

331
00:20:35,039 --> 00:20:41,730
our frame bit<font color="#E5E5E5"> of a hack and if there if</font>

332
00:20:40,529 --> 00:20:42,710
the pixel is placed<font color="#CCCCCC"> at one of these</font>

333
00:20:41,730 --> 00:20:47,789
points

334
00:20:42,710 --> 00:20:49,559
<font color="#CCCCCC">we'll make it white</font><font color="#E5E5E5"> and as it could have</font>

335
00:20:47,789 --> 00:20:55,320
<font color="#CCCCCC">chain as a kind of changes</font><font color="#E5E5E5"> the points</font>

336
00:20:49,559 --> 00:20:59,059
the whole view<font color="#E5E5E5"> pop music Ross and so you</font>

337
00:20:55,320 --> 00:20:59,059
magically get the star field

338
00:21:14,500 --> 00:21:17,950
and if you look closely<font color="#CCCCCC"> this</font><font color="#E5E5E5"> starts</font>

339
00:21:16,419 --> 00:21:21,330
<font color="#E5E5E5">moving across there if done in</font><font color="#CCCCCC"> Pearl</font>

340
00:21:17,950 --> 00:21:25,539
it's done in<font color="#E5E5E5"> public running on the GPU</font>

341
00:21:21,330 --> 00:21:29,070
<font color="#E5E5E5">much better in</font><font color="#CCCCCC"> the darkroom and see what</font>

342
00:21:25,539 --> 00:21:29,070
your classic demo effect from the 80s

343
00:21:29,669 --> 00:21:37,740
thanks<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Pearl okay that's that's</font>

344
00:21:34,090 --> 00:21:37,740
<font color="#CCCCCC">demios gone</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> what some games</font>

345
00:21:46,210 --> 00:21:53,590
<font color="#E5E5E5">okay so I saw some wearing wearing</font>

346
00:21:50,860 --> 00:21:58,389
Pascal t-shirt<font color="#CCCCCC"> I'm glad we have happy</font>

347
00:21:53,590 --> 00:22:00,939
I've had more<font color="#E5E5E5"> fans here say Pascal was</font>

348
00:21:58,389 --> 00:22:03,490
<font color="#E5E5E5">wasn't was quite nice I quite like it</font>

349
00:22:00,940 --> 00:22:06,940
some people don't

350
00:22:03,490 --> 00:22:09,009
and so Pascal had them<font color="#CCCCCC"> orient</font>

351
00:22:06,940 --> 00:22:13,840
orientation and the<font color="#E5E5E5"> Windows version came</font>

352
00:22:09,009 --> 00:22:16,269
with a very<font color="#CCCCCC"> nice GUI library because</font>

353
00:22:13,840 --> 00:22:18,189
<font color="#CCCCCC">Roth</font><font color="#E5E5E5"> was the was the</font><font color="#CCCCCC"> foundation classes</font>

354
00:22:16,269 --> 00:22:19,840
which weren't very<font color="#CCCCCC"> nice-nice</font><font color="#E5E5E5"> later we</font>

355
00:22:18,190 --> 00:22:22,240
<font color="#CCCCCC">get piles lovely that does all Yoram</font>

356
00:22:19,840 --> 00:22:25,809
built-in range checking and<font color="#CCCCCC"> were that</font>

357
00:22:22,240 --> 00:22:29,340
stuff he had had the magic<font color="#E5E5E5"> IDE it</font>

358
00:22:25,809 --> 00:22:33,070
<font color="#E5E5E5">compiles instantly on your</font><font color="#CCCCCC"> on your 386</font>

359
00:22:29,340 --> 00:22:36,580
system<font color="#CCCCCC"> lie</font><font color="#E5E5E5"> be wasn't so good but</font><font color="#CCCCCC"> back</font>

360
00:22:33,070 --> 00:22:40,509
from the the<font color="#E5E5E5"> 80s</font><font color="#CCCCCC"> or 90s 90s</font><font color="#E5E5E5"> I I have a</font>

361
00:22:36,580 --> 00:22:42,549
<font color="#CCCCCC">cover</font><font color="#E5E5E5"> games I wrote in it and but be</font>

362
00:22:40,509 --> 00:22:44,940
nice to see if<font color="#E5E5E5"> I could</font><font color="#CCCCCC"> in if I could</font>

363
00:22:42,549 --> 00:22:44,940
play them again

364
00:22:50,830 --> 00:22:58,030
now<font color="#CCCCCC"> Pascal passcode nowadays</font><font color="#E5E5E5"> so now have</font>

365
00:22:55,240 --> 00:22:59,920
them<font color="#CCCCCC"> tow Pascal I don't know if</font><font color="#E5E5E5"> it still</font>

366
00:22:58,030 --> 00:23:04,480
<font color="#CCCCCC">be</font><font color="#E5E5E5"> still solving my be maintained by</font>

367
00:22:59,920 --> 00:23:06,400
hover who's here as it these days<font color="#E5E5E5"> there</font>

368
00:23:04,480 --> 00:23:09,130
is<font color="#E5E5E5"> free Pascal now it's quite nice</font>

369
00:23:06,400 --> 00:23:12,390
compiler it<font color="#CCCCCC"> just has loads of random</font>

370
00:23:09,130 --> 00:23:15,850
options for<font color="#E5E5E5"> really taking</font><font color="#CCCCCC"> our code so</font>

371
00:23:12,390 --> 00:23:19,840
making<font color="#E5E5E5"> buffer overrun is really hard</font><font color="#CCCCCC"> as</font>

372
00:23:15,850 --> 00:23:22,840
<font color="#E5E5E5">pre rust and all that now my code was</font>

373
00:23:19,840 --> 00:23:27,370
written we can using<font color="#E5E5E5"> a graphics library</font>

374
00:23:22,840 --> 00:23:31,330
<font color="#E5E5E5">and from page looks like that so</font>

375
00:23:27,370 --> 00:23:35,260
corporate Borland<font color="#CCCCCC"> cover at some guy who</font>

376
00:23:31,330 --> 00:23:38,290
knows if it's<font color="#E5E5E5"> it's good nowadays though</font>

377
00:23:35,260 --> 00:23:41,700
the<font color="#E5E5E5"> solution is to replace</font><font color="#CCCCCC"> it and stop</font>

378
00:23:38,290 --> 00:23:48,190
it out<font color="#E5E5E5"> so not being great with Pascal</font>

379
00:23:41,700 --> 00:23:53,500
<font color="#E5E5E5">I've replaced it with Wacom data to turn</font>

380
00:23:48,190 --> 00:23:55,570
<font color="#E5E5E5">it out so you</font><font color="#CCCCCC"> have a little function to</font>

381
00:23:53,500 --> 00:23:57,730
to be placed we draw<font color="#CCCCCC"> up Long's and</font><font color="#E5E5E5"> your</font>

382
00:23:55,570 --> 00:24:00,879
squares and draw circles<font color="#E5E5E5"> and just work</font>

383
00:23:57,730 --> 00:24:02,590
<font color="#CCCCCC">it out it tuned to start out and you</font>

384
00:24:00,880 --> 00:24:06,690
have a<font color="#CCCCCC"> polar</font><font color="#E5E5E5"> process on the</font><font color="#CCCCCC"> other on the</font>

385
00:24:02,590 --> 00:24:10,720
other other end to pick up the data and

386
00:24:06,690 --> 00:24:16,690
you run it it looks<font color="#E5E5E5"> like that you have</font>

387
00:24:10,720 --> 00:24:21,900
code and it works

388
00:24:16,690 --> 00:24:21,900
<font color="#CCCCCC">I did now who would like a game</font>

389
00:25:14,500 --> 00:25:16,530
Oh

390
00:25:17,430 --> 00:25:20,690
let's break my skin<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a minute</font>

391
00:25:40,030 --> 00:25:58,600
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> in theory you'd like a game</font><font color="#E5E5E5"> okay</font>

392
00:25:51,460 --> 00:25:59,980
anyone<font color="#CCCCCC"> three</font><font color="#E5E5E5"> player single works you</font>

393
00:25:58,600 --> 00:26:05,169
have<font color="#CCCCCC"> to work</font><font color="#E5E5E5"> out which</font><font color="#CCCCCC"> which color you</font>

394
00:25:59,980 --> 00:26:06,060
<font color="#CCCCCC">are and hopefully does it move is it</font>

395
00:26:05,170 --> 00:26:08,590
happy

396
00:26:06,060 --> 00:26:13,360
<font color="#E5E5E5">you're these two the buttons work</font><font color="#CCCCCC"> ah</font>

397
00:26:08,590 --> 00:26:17,790
<font color="#CCCCCC">okay me I'll just fun</font><font color="#E5E5E5"> unplugging me plug</font>

398
00:26:13,360 --> 00:26:17,790
that maybe see if that works

399
00:26:24,960 --> 00:26:33,880
run that<font color="#E5E5E5"> again is that no happy yeah</font>

400
00:26:30,940 --> 00:26:37,860
that sucks<font color="#E5E5E5"> okay tell you what can i plug</font>

401
00:26:33,880 --> 00:26:37,860
in<font color="#E5E5E5"> three yeah</font>

402
00:27:02,000 --> 00:27:06,970
is that gonna play<font color="#E5E5E5"> try the d-pad maybe</font>

403
00:27:08,440 --> 00:27:17,020
no<font color="#E5E5E5"> ah sorry</font><font color="#CCCCCC"> guys well that won't last</font>

404
00:27:11,690 --> 00:27:17,020
much I<font color="#E5E5E5"> do thank you very much</font>

405
00:27:20,570 --> 00:27:27,550
[Applause]

406
00:27:23,560 --> 00:27:27,550
any questions

407
00:27:39,670 --> 00:27:59,570
it probably was yes<font color="#CCCCCC"> like this</font>

408
00:27:54,530 --> 00:28:02,330
and<font color="#E5E5E5"> I met a old friend</font><font color="#CCCCCC"> a few months ago</font>

409
00:27:59,570 --> 00:28:05,780
and he<font color="#E5E5E5"> said here</font><font color="#CCCCCC"> that this disc of</font><font color="#E5E5E5"> these</font>

410
00:28:02,330 --> 00:28:12,290
games on him and<font color="#E5E5E5"> I I tried to be tried</font>

411
00:28:05,780 --> 00:28:15,590
to<font color="#E5E5E5"> me in wine</font><font color="#CCCCCC"> and it broke</font><font color="#E5E5E5"> so when so I</font>

412
00:28:12,290 --> 00:28:18,770
<font color="#E5E5E5">I had to recover him and what I wish I</font>

413
00:28:15,590 --> 00:28:21,649
could show Nene was a genuine<font color="#CCCCCC"> mid-90s</font>

414
00:28:18,770 --> 00:28:23,300
<font color="#E5E5E5">and play play</font><font color="#CCCCCC"> bug intron and like which</font>

415
00:28:21,650 --> 00:28:25,970
you know<font color="#E5E5E5"> the motor stalls</font><font color="#CCCCCC"> E and</font><font color="#E5E5E5"> you</font>

416
00:28:23,300 --> 00:28:29,659
could you could cross all all the colors

417
00:28:25,970 --> 00:28:33,790
and<font color="#E5E5E5"> it</font><font color="#CCCCCC"> would and</font><font color="#E5E5E5"> would allow that which</font>

418
00:28:29,660 --> 00:28:33,790
which<font color="#E5E5E5"> I</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> please perfectly</font>

419
00:29:05,139 --> 00:29:10,789
we've been<font color="#CCCCCC"> blessed by the</font><font color="#E5E5E5"> original for</font>

420
00:29:09,019 --> 00:29:12,889
being having<font color="#E5E5E5"> been</font><font color="#CCCCCC"> enough I think upon a</font>

421
00:29:10,789 --> 00:29:16,959
very<font color="#E5E5E5"> tight deadline</font><font color="#CCCCCC"> so many advanced</font>

422
00:29:12,889 --> 00:29:16,958
parsing was was<font color="#E5E5E5"> just what went out and</font>

423
00:29:18,279 --> 00:29:23,929
as little if as possible to you and get

424
00:29:21,529 --> 00:29:26,089
a working<font color="#E5E5E5"> thing we</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this project we</font>

425
00:29:23,929 --> 00:29:30,409
did really<font color="#E5E5E5"> try doing</font><font color="#CCCCCC"> at a line-by-line</font>

426
00:29:26,089 --> 00:29:32,149
<font color="#E5E5E5">and conversion of it but found the bugs</font>

427
00:29:30,409 --> 00:29:33,429
<font color="#CCCCCC">were just accumulating and too quickly</font>

428
00:29:32,149 --> 00:29:35,570
<font color="#CCCCCC">too</font>

429
00:29:33,429 --> 00:29:40,039
<font color="#E5E5E5">there's lots of little nuances in</font>

430
00:29:35,570 --> 00:29:43,329
anything<font color="#E5E5E5"> like that and there's a lot of</font>

431
00:29:40,039 --> 00:29:43,329
code and<font color="#E5E5E5"> it wasn't</font><font color="#CCCCCC"> practical at</font><font color="#E5E5E5"> the end</font>

432
00:29:46,940 --> 00:29:53,930
<font color="#E5E5E5">okay okay</font><font color="#CCCCCC"> thank you</font><font color="#E5E5E5"> very much</font>

433
00:29:50,740 --> 00:29:53,930
[Applause]

