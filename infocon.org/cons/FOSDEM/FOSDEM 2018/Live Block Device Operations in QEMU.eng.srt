1
00:00:04,610 --> 00:00:11,030
<font color="#E5E5E5">I'm part of the cloud engineering group</font>

2
00:00:08,440 --> 00:00:13,510
<font color="#E5E5E5">focusing on integrating lower level</font>

3
00:00:11,030 --> 00:00:16,009
virtualization components with OpenStack

4
00:00:13,510 --> 00:00:17,960
<font color="#E5E5E5">but today I'm going to talk a bit about</font>

5
00:00:16,010 --> 00:00:20,539
what are the different<font color="#CCCCCC"> kinds of life</font>

6
00:00:17,960 --> 00:00:23,300
<font color="#CCCCCC">blog device operations that</font><font color="#E5E5E5"> Cumaean has</font>

7
00:00:20,539 --> 00:00:25,910
to offer<font color="#CCCCCC"> to solve different kinds of</font>

8
00:00:23,300 --> 00:00:28,040
problems<font color="#CCCCCC"> first</font><font color="#E5E5E5"> you'll set a bit of</font>

9
00:00:25,910 --> 00:00:30,800
context<font color="#E5E5E5"> and then we'll see what they are</font>

10
00:00:28,040 --> 00:00:32,780
<font color="#E5E5E5">where they used and how they can be</font>

11
00:00:30,800 --> 00:00:39,200
combined<font color="#E5E5E5"> to solve certain practical</font>

12
00:00:32,780 --> 00:00:41,600
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> I assume most people in this</font>

13
00:00:39,200 --> 00:00:44,300
<font color="#E5E5E5">room are</font><font color="#CCCCCC"> familiar with</font><font color="#E5E5E5"> Kimmy but we'll</font>

14
00:00:41,600 --> 00:00:46,100
do a bit<font color="#CCCCCC"> of background as well just</font><font color="#E5E5E5"> show</font>

15
00:00:44,300 --> 00:00:51,290
of hands how many of heard<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Q in</font><font color="#E5E5E5"> this</font>

16
00:00:46,100 --> 00:00:53,829
room<font color="#CCCCCC"> okay pretty much everybody first</font><font color="#E5E5E5"> of</font>

17
00:00:51,290 --> 00:00:57,230
<font color="#CCCCCC">all set a bit of context for</font>

18
00:00:53,829 --> 00:00:58,670
virtualization<font color="#CCCCCC"> stack</font><font color="#E5E5E5"> kayvyun based for</font>

19
00:00:57,230 --> 00:01:02,750
<font color="#E5E5E5">the benefit of those</font><font color="#CCCCCC"> who aren't</font><font color="#E5E5E5"> familiar</font>

20
00:00:58,670 --> 00:01:04,820
<font color="#E5E5E5">i'm of their power and then</font><font color="#CCCCCC"> we'll see a</font>

21
00:01:02,750 --> 00:01:07,729
small primer on<font color="#CCCCCC"> how to operate a Kimia</font>

22
00:01:04,819 --> 00:01:10,100
instance followed by that quickly super

23
00:01:07,729 --> 00:01:12,620
<font color="#E5E5E5">quickly we'll see how different block</font>

24
00:01:10,100 --> 00:01:15,440
<font color="#E5E5E5">devices</font><font color="#CCCCCC"> and/or block devices</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> general</font>

25
00:01:12,620 --> 00:01:17,510
are configured in<font color="#E5E5E5"> queue and finally we</font>

26
00:01:15,440 --> 00:01:19,970
will<font color="#E5E5E5"> see the different block device</font>

27
00:01:17,510 --> 00:01:23,479
operations long-running ones potentially

28
00:01:19,970 --> 00:01:23,990
long-running to do warious kinds of

29
00:01:23,479 --> 00:01:27,289
needs

30
00:01:23,990 --> 00:01:28,280
tinks and the practical use<font color="#E5E5E5"> case of it</font>

31
00:01:27,290 --> 00:01:30,979
<font color="#E5E5E5">all right</font>

32
00:01:28,280 --> 00:01:34,369
so that's a typical<font color="#CCCCCC"> KVM relation stack</font>

33
00:01:30,979 --> 00:01:37,340
you see at the bottom<font color="#CCCCCC"> linux kernel</font>

34
00:01:34,369 --> 00:01:40,850
module<font color="#CCCCCC"> k vm as a character device</font>

35
00:01:37,340 --> 00:01:43,939
exposed to<font color="#CCCCCC"> queue which</font><font color="#E5E5E5"> will operate it</font>

36
00:01:40,850 --> 00:01:47,390
<font color="#CCCCCC">by i octaves and then sitting</font><font color="#E5E5E5"> on top is</font>

37
00:01:43,939 --> 00:01:50,000
<font color="#CCCCCC">kim you which</font><font color="#E5E5E5"> is your guest as a</font>

38
00:01:47,390 --> 00:01:53,689
complete<font color="#CCCCCC"> process just</font><font color="#E5E5E5"> like any other</font>

39
00:01:50,000 --> 00:01:55,460
process on<font color="#E5E5E5"> your host so Kimmy exists</font>

40
00:01:53,689 --> 00:01:59,059
alongside those processes and<font color="#CCCCCC"> you can</font>

41
00:01:55,460 --> 00:02:03,949
use regular tools<font color="#E5E5E5"> like top</font><font color="#CCCCCC"> PS</font><font color="#E5E5E5"> and so</font>

42
00:01:59,060 --> 00:02:07,430
forth<font color="#E5E5E5"> to to to monitor the various</font>

43
00:02:03,950 --> 00:02:10,848
<font color="#E5E5E5">details and but launching</font><font color="#CCCCCC"> kim you by</font>

44
00:02:07,430 --> 00:02:13,520
with long command lines<font color="#E5E5E5"> can get super</font>

45
00:02:10,848 --> 00:02:15,440
<font color="#E5E5E5">tedious if we are seen libera generated</font>

46
00:02:13,520 --> 00:02:17,630
command line it<font color="#E5E5E5"> goes into pages and</font>

47
00:02:15,440 --> 00:02:20,840
pages<font color="#CCCCCC"> well not really pages but</font>

48
00:02:17,630 --> 00:02:23,600
<font color="#CCCCCC">it sufficiently long</font><font color="#E5E5E5"> so you don't really</font>

49
00:02:20,840 --> 00:02:25,520
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to launch come you by hand although</font>

50
00:02:23,600 --> 00:02:28,310
<font color="#CCCCCC">there</font><font color="#E5E5E5"> are some cases where people do</font>

51
00:02:25,520 --> 00:02:31,400
that this<font color="#CCCCCC"> is where</font><font color="#E5E5E5"> liver comes in as a</font>

52
00:02:28,310 --> 00:02:33,590
hypervisor agnostic library that

53
00:02:31,400 --> 00:02:36,020
provides neat abstractions and other

54
00:02:33,590 --> 00:02:41,020
things<font color="#E5E5E5"> for the</font><font color="#CCCCCC"> lifecycle of a virtual</font>

55
00:02:36,020 --> 00:02:44,120
machine<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> deliberate daemon</font><font color="#E5E5E5"> and</font>

56
00:02:41,020 --> 00:02:49,520
even higher is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> projects like</font>

57
00:02:44,120 --> 00:02:51,470
<font color="#E5E5E5">OpenStack where it operates various</font>

58
00:02:49,520 --> 00:02:54,430
instances<font color="#CCCCCC"> along instant flaunting</font>

59
00:02:51,470 --> 00:02:56,600
processes via<font color="#CCCCCC"> its very driver interface</font>

60
00:02:54,430 --> 00:02:58,570
<font color="#E5E5E5">connecting</font><font color="#CCCCCC"> to Liberty which in turn</font>

61
00:02:56,600 --> 00:03:00,609
<font color="#CCCCCC">docks Kim you</font><font color="#E5E5E5"> and the complete</font>

62
00:02:58,570 --> 00:03:03,709
<font color="#CCCCCC">back-and-forth goes on from there</font><font color="#E5E5E5"> and</font>

63
00:03:00,610 --> 00:03:05,720
<font color="#E5E5E5">even the more recent entrance like uber</font>

64
00:03:03,710 --> 00:03:08,690
also relies<font color="#E5E5E5"> in live</font><font color="#CCCCCC"> word but not</font><font color="#E5E5E5"> exact</font>

65
00:03:05,720 --> 00:03:13,400
same architecture but some of the core

66
00:03:08,690 --> 00:03:16,490
fundamentals remain on the far left<font color="#E5E5E5"> you</font>

67
00:03:13,400 --> 00:03:20,090
see<font color="#CCCCCC"> Libya staffers for</font><font color="#E5E5E5"> the far right</font>

68
00:03:16,490 --> 00:03:21,890
<font color="#CCCCCC">Luca staffers project which is a need</font><font color="#E5E5E5"> to</font>

69
00:03:20,090 --> 00:03:24,080
<font color="#E5E5E5">which you haven't heard it's actually</font>

70
00:03:21,890 --> 00:03:26,869
set of tools that<font color="#E5E5E5"> provides various</font>

71
00:03:24,080 --> 00:03:30,620
utilities to do different<font color="#E5E5E5"> kinds of</font>

72
00:03:26,870 --> 00:03:34,040
<font color="#E5E5E5">things on</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> guest images to safely</font>

73
00:03:30,620 --> 00:03:35,750
access them<font color="#CCCCCC"> resize and and launch</font>

74
00:03:34,040 --> 00:03:38,540
templates<font color="#E5E5E5"> it does a whole bunch</font><font color="#CCCCCC"> of</font>

75
00:03:35,750 --> 00:03:44,000
things<font color="#CCCCCC"> it also uses</font><font color="#E5E5E5"> qmu and live work</font>

76
00:03:38,540 --> 00:03:53,570
also in in various<font color="#E5E5E5"> of its tools to give</font>

77
00:03:44,000 --> 00:03:57,140
you<font color="#CCCCCC"> a</font><font color="#E5E5E5"> different functionality so in this</font>

78
00:03:53,570 --> 00:03:59,989
talk<font color="#E5E5E5"> we'll zoom into the</font><font color="#CCCCCC"> Kunis block</font>

79
00:03:57,140 --> 00:04:02,720
layer and see what functions it<font color="#CCCCCC"> has to</font>

80
00:03:59,990 --> 00:04:05,750
offer and what<font color="#E5E5E5"> practical use case it</font>

81
00:04:02,720 --> 00:04:07,580
solves most<font color="#E5E5E5"> of the times these features</font>

82
00:04:05,750 --> 00:04:10,670
are already<font color="#E5E5E5"> exposed by a high</font><font color="#CCCCCC"> level</font>

83
00:04:07,580 --> 00:04:13,540
libraries like libvirt<font color="#E5E5E5"> or even higher</font>

84
00:04:10,670 --> 00:04:18,108
level management<font color="#E5E5E5"> software like overt and</font>

85
00:04:13,540 --> 00:04:20,630
OpenStack<font color="#E5E5E5"> and so forth but</font><font color="#CCCCCC"> if sometimes</font>

86
00:04:18,108 --> 00:04:23,419
<font color="#E5E5E5">it can be instructive to look under</font><font color="#CCCCCC"> the</font>

87
00:04:20,630 --> 00:04:26,890
<font color="#CCCCCC">hood to see what's happening especially</font>

88
00:04:23,420 --> 00:04:26,890
<font color="#CCCCCC">it helps you during debugging</font>

89
00:04:29,390 --> 00:04:35,250
curious<font color="#CCCCCC"> blocks if</font><font color="#E5E5E5"> system offers a bunch</font>

90
00:04:32,880 --> 00:04:38,520
of things<font color="#E5E5E5"> to begin with a guest visible</font>

91
00:04:35,250 --> 00:04:42,990
<font color="#E5E5E5">emulated storage devices like your</font><font color="#CCCCCC"> vern</font>

92
00:04:38,520 --> 00:04:44,490
<font color="#E5E5E5">scuzzy ide or paralyzed drivers where</font>

93
00:04:42,990 --> 00:04:46,410
the guest knows that it is being

94
00:04:44,490 --> 00:04:49,080
virtualized<font color="#E5E5E5"> like were discussing or</font><font color="#CCCCCC"> were</font>

95
00:04:46,410 --> 00:04:52,500
<font color="#CCCCCC">they block if you run that command on</font>

96
00:04:49,080 --> 00:04:55,710
top you see<font color="#E5E5E5"> and you look for the storage</font>

97
00:04:52,500 --> 00:04:58,650
devices section<font color="#E5E5E5"> you</font><font color="#CCCCCC"> see different kinds</font>

98
00:04:55,710 --> 00:05:00,840
<font color="#E5E5E5">of devices that</font><font color="#CCCCCC"> cumene has to offer so</font>

99
00:04:58,650 --> 00:05:03,530
that<font color="#E5E5E5"> shows you</font><font color="#CCCCCC"> a nice picture</font><font color="#E5E5E5"> of what</font>

100
00:05:00,840 --> 00:05:07,229
all the tools it it offers and then

101
00:05:03,530 --> 00:05:09,390
<font color="#E5E5E5">kumys block layer and generals written</font>

102
00:05:07,230 --> 00:05:12,540
<font color="#E5E5E5">in layers and there's a lot of code</font>

103
00:05:09,390 --> 00:05:14,669
reuse between components<font color="#CCCCCC"> and human</font>

104
00:05:12,540 --> 00:05:18,590
offers the block<font color="#E5E5E5"> different types of</font>

105
00:05:14,670 --> 00:05:21,960
block drivers<font color="#E5E5E5"> one is a format driver</font>

106
00:05:18,590 --> 00:05:24,869
<font color="#E5E5E5">where how data is interpreted on the</font>

107
00:05:21,960 --> 00:05:27,630
host<font color="#E5E5E5"> and most know that's a protocol</font>

108
00:05:24,870 --> 00:05:30,510
driver actually<font color="#E5E5E5"> where they how human</font>

109
00:05:27,630 --> 00:05:33,570
interprets data on the host<font color="#E5E5E5"> and the</font>

110
00:05:30,510 --> 00:05:35,099
format driver is where you<font color="#E5E5E5"> recognize one</font>

111
00:05:33,570 --> 00:05:39,150
<font color="#CCCCCC">of the popular names is</font><font color="#E5E5E5"> the Q curve to</font>

112
00:05:35,100 --> 00:05:42,240
that<font color="#E5E5E5"> Q miss native image format and VMDK</font>

113
00:05:39,150 --> 00:05:43,770
and other formats<font color="#CCCCCC"> that human</font><font color="#E5E5E5"> has to</font>

114
00:05:42,240 --> 00:05:46,020
offer but the native format<font color="#E5E5E5"> is Q curve</font><font color="#CCCCCC"> -</font>

115
00:05:43,770 --> 00:05:48,060
most people<font color="#E5E5E5"> recognize and for the</font>

116
00:05:46,020 --> 00:05:52,109
protocol driver you see things like<font color="#CCCCCC"> SEF</font>

117
00:05:48,060 --> 00:05:57,140
or<font color="#E5E5E5"> a network block and devices and so</font>

118
00:05:52,110 --> 00:05:59,010
<font color="#CCCCCC">forth it also offers different</font><font color="#E5E5E5"> life and</font>

119
00:05:57,140 --> 00:06:01,650
operations<font color="#E5E5E5"> that you can</font><font color="#CCCCCC"> do on block</font>

120
00:05:59,010 --> 00:06:04,740
devices<font color="#E5E5E5"> also offline</font><font color="#CCCCCC"> the most popular is</font>

121
00:06:01,650 --> 00:06:08,370
<font color="#E5E5E5">Q IMG which you can use to create and</font>

122
00:06:04,740 --> 00:06:11,070
images create backing chains and convert

123
00:06:08,370 --> 00:06:14,850
from<font color="#CCCCCC"> one format to another and</font><font color="#E5E5E5"> and a</font>

124
00:06:11,070 --> 00:06:16,860
bunch of other whole things and yeah the

125
00:06:14,850 --> 00:06:20,910
live operations are where and most of

126
00:06:16,860 --> 00:06:22,650
the interesting<font color="#E5E5E5"> stuff happens also</font>

127
00:06:20,910 --> 00:06:24,600
<font color="#CCCCCC">equaling interesting stuff happens</font>

128
00:06:22,650 --> 00:06:28,099
offline but people care in production

129
00:06:24,600 --> 00:06:28,100
stuff that runs<font color="#E5E5E5"> in life</font>

130
00:06:35,680 --> 00:06:40,910
<font color="#E5E5E5">cubillas copy-on-write</font>

131
00:06:37,430 --> 00:06:45,380
overlays as<font color="#E5E5E5"> most would</font><font color="#CCCCCC"> no offers a way</font>

132
00:06:40,910 --> 00:06:47,420
<font color="#E5E5E5">to refer a base image that has say for</font>

133
00:06:45,380 --> 00:06:50,900
example if a<font color="#CCCCCC"> Torah</font><font color="#E5E5E5"> operating system and</font>

134
00:06:47,420 --> 00:06:53,240
then<font color="#E5E5E5"> you can create a an overlay based</font>

135
00:06:50,900 --> 00:06:56,030
on that base image where this overlay

136
00:06:53,240 --> 00:06:58,250
refers to that base image and you<font color="#CCCCCC"> can do</font>

137
00:06:56,030 --> 00:07:01,549
all<font color="#CCCCCC"> kinds of things</font><font color="#E5E5E5"> destructive things</font>

138
00:06:58,250 --> 00:07:03,800
in this overlay and then if you screw up

139
00:07:01,550 --> 00:07:07,010
<font color="#CCCCCC">something you</font><font color="#E5E5E5"> can discard it and go</font><font color="#CCCCCC"> back</font>

140
00:07:03,800 --> 00:07:10,850
to the base overlay and I'm sorry base

141
00:07:07,010 --> 00:07:14,900
image so in<font color="#E5E5E5"> this kind of setup the base</font>

142
00:07:10,850 --> 00:07:17,240
image<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be of any format but the</font>

143
00:07:14,900 --> 00:07:18,830
overlays are always you go to so there's

144
00:07:17,240 --> 00:07:21,530
different<font color="#CCCCCC"> kinds of terminology I'll use</font>

145
00:07:18,830 --> 00:07:23,479
throughout in the talk not one kind<font color="#E5E5E5"> and</font>

146
00:07:21,530 --> 00:07:25,429
the thing is called base images and

147
00:07:23,480 --> 00:07:28,190
overlays when I<font color="#CCCCCC"> said overlay it is</font>

148
00:07:25,430 --> 00:07:31,100
always the image that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> created based</font>

149
00:07:28,190 --> 00:07:32,690
on the first image<font color="#E5E5E5"> in a disk image</font>

150
00:07:31,100 --> 00:07:35,330
backing chain so we'll see what they<font color="#CCCCCC"> are</font>

151
00:07:32,690 --> 00:07:38,960
so when you have a simple backing chain

152
00:07:35,330 --> 00:07:41,450
like<font color="#CCCCCC"> this the first</font><font color="#E5E5E5"> one our Jimmy tries</font>

153
00:07:38,960 --> 00:07:43,640
to read a cluster<font color="#E5E5E5"> it reads from</font><font color="#CCCCCC"> the</font>

154
00:07:41,450 --> 00:07:46,550
existing overlay<font color="#E5E5E5"> if it is</font><font color="#CCCCCC"> allocated or</font>

155
00:07:43,640 --> 00:07:49,280
else it will traverse the backing chain

156
00:07:46,550 --> 00:07:51,890
<font color="#E5E5E5">and read from the other and the base</font>

157
00:07:49,280 --> 00:07:55,820
<font color="#E5E5E5">image and then</font><font color="#CCCCCC"> Q does some caching</font><font color="#E5E5E5"> and</font>

158
00:07:51,890 --> 00:07:58,789
so forth but<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> writes happen on</font>

159
00:07:55,820 --> 00:08:00,550
the overlay image<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> several</font><font color="#E5E5E5"> use</font>

160
00:07:58,790 --> 00:08:05,180
cases<font color="#CCCCCC"> to it the one I just</font><font color="#E5E5E5"> mentioned</font><font color="#CCCCCC"> is</font>

161
00:08:00,550 --> 00:08:06,860
<font color="#E5E5E5">thin provisioning is where the federal</font>

162
00:08:05,180 --> 00:08:09,380
<font color="#E5E5E5">image is their base image and then you</font>

163
00:08:06,860 --> 00:08:13,400
can<font color="#CCCCCC"> create</font><font color="#E5E5E5"> multiple overlays based on it</font>

164
00:08:09,380 --> 00:08:16,070
so you can<font color="#E5E5E5"> give up different tints and</font>

165
00:08:13,400 --> 00:08:18,429
<font color="#CCCCCC">disk images to users and snapshots and</font>

166
00:08:16,070 --> 00:08:21,170
backups<font color="#CCCCCC"> we'll get to that</font>

167
00:08:18,430 --> 00:08:23,150
so how do you<font color="#E5E5E5"> create this minimum</font>

168
00:08:21,170 --> 00:08:25,910
minimum backing chain you see that

169
00:08:23,150 --> 00:08:28,520
command line over there<font color="#E5E5E5"> and I especially</font>

170
00:08:25,910 --> 00:08:31,130
<font color="#E5E5E5">highlight on the bottom one the first</font>

171
00:08:28,520 --> 00:08:33,710
command line creates the base image the

172
00:08:31,130 --> 00:08:35,929
second one creates the overlay<font color="#E5E5E5"> and why</font>

173
00:08:33,710 --> 00:08:38,750
do<font color="#E5E5E5"> I highlight the base image</font><font color="#CCCCCC"> format</font><font color="#E5E5E5"> and</font>

174
00:08:35,929 --> 00:08:41,900
the base image<font color="#CCCCCC"> file</font>

175
00:08:38,750 --> 00:08:46,340
if you don't specify<font color="#CCCCCC"> backing the format</font>

176
00:08:41,900 --> 00:08:48,980
of a raw image file<font color="#CCCCCC"> q will prove it so</font>

177
00:08:46,340 --> 00:08:49,430
that is a potentially<font color="#E5E5E5"> CVE waiting to</font>

178
00:08:48,980 --> 00:08:53,720
happen

179
00:08:49,430 --> 00:08:56,120
why because a malicious guest can write

180
00:08:53,720 --> 00:08:59,840
a header<font color="#E5E5E5"> that can look like you go to</font>

181
00:08:56,120 --> 00:09:00,680
and can corrupt<font color="#E5E5E5"> the</font><font color="#CCCCCC"> image</font><font color="#E5E5E5"> so you don't</font>

182
00:08:59,840 --> 00:09:02,870
want that<font color="#CCCCCC"> to happen</font>

183
00:09:00,680 --> 00:09:05,540
so that's why it is<font color="#E5E5E5"> recommended to</font>

184
00:09:02,870 --> 00:09:08,840
explicitly specify<font color="#CCCCCC"> the backing file</font>

185
00:09:05,540 --> 00:09:22,099
format<font color="#E5E5E5"> and the backing file of course</font>

186
00:09:08,840 --> 00:09:25,160
with us with<font color="#E5E5E5"> those options another thing</font>

187
00:09:22,100 --> 00:09:27,260
to keep in mind<font color="#CCCCCC"> is when Kimmy</font><font color="#E5E5E5"> is already</font>

188
00:09:25,160 --> 00:09:29,719
<font color="#E5E5E5">using a disk image</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't want</font>

189
00:09:27,260 --> 00:09:33,050
external processes to access them

190
00:09:29,720 --> 00:09:35,240
<font color="#E5E5E5">potentially corrupting so to</font><font color="#CCCCCC"> mitigate</font>

191
00:09:33,050 --> 00:09:38,449
that<font color="#CCCCCC"> cueing already offers existing</font>

192
00:09:35,240 --> 00:09:41,090
<font color="#CCCCCC">runtime commands</font><font color="#E5E5E5"> called monitor</font><font color="#CCCCCC"> qmp</font>

193
00:09:38,450 --> 00:09:43,910
monitor commands<font color="#E5E5E5"> and that you can do for</font>

194
00:09:41,090 --> 00:09:46,010
example<font color="#CCCCCC"> if you want to live resize a</font>

195
00:09:43,910 --> 00:09:48,680
guest<font color="#E5E5E5"> that can offer something even</font><font color="#CCCCCC"> to</font>

196
00:09:46,010 --> 00:09:50,540
change<font color="#CCCCCC"> mac and files and and various</font>

197
00:09:48,680 --> 00:09:53,439
<font color="#E5E5E5">other functionality so you don't want to</font>

198
00:09:50,540 --> 00:09:56,020
do that and also<font color="#E5E5E5"> alternatively I</font>

199
00:09:53,440 --> 00:09:59,960
mentioned the<font color="#CCCCCC"> Libya</font><font color="#E5E5E5"> service project that</font>

200
00:09:56,020 --> 00:10:02,449
<font color="#CCCCCC">also offers a tool called guest fish</font>

201
00:09:59,960 --> 00:10:05,120
that will<font color="#E5E5E5"> let you safely in a read-only</font>

202
00:10:02,450 --> 00:10:07,820
manner<font color="#E5E5E5"> access to disk image and examine</font>

203
00:10:05,120 --> 00:10:09,860
its contents<font color="#CCCCCC"> so for example if you if</font>

204
00:10:07,820 --> 00:10:12,140
<font color="#CCCCCC">you're using</font><font color="#E5E5E5"> a federalized</font>

205
00:10:09,860 --> 00:10:14,270
operating system and you mess up Estel

206
00:10:12,140 --> 00:10:16,910
Emacs labeling in it so you<font color="#E5E5E5"> can use this</font>

207
00:10:14,270 --> 00:10:19,819
tool to fire up the disk<font color="#E5E5E5"> image and and</font>

208
00:10:16,910 --> 00:10:25,310
fix<font color="#E5E5E5"> that stuff and again you can make</font>

209
00:10:19,820 --> 00:10:28,430
the<font color="#CCCCCC"> image bootable so feel free to ask</font>

210
00:10:25,310 --> 00:10:31,010
questions<font color="#CCCCCC"> if there are any and and in</font>

211
00:10:28,430 --> 00:10:33,469
more<font color="#E5E5E5"> recent versions of</font><font color="#CCCCCC"> Q</font><font color="#E5E5E5"> it offers disk</font>

212
00:10:31,010 --> 00:10:35,660
image locking so this<font color="#CCCCCC"> essentially</font>

213
00:10:33,470 --> 00:10:37,850
prevents you<font color="#CCCCCC"> to shooting yourself from</font>

214
00:10:35,660 --> 00:10:39,589
the food from on<font color="#E5E5E5"> your foot by not</font>

215
00:10:37,850 --> 00:10:44,560
letting two processes writing to the

216
00:10:39,589 --> 00:10:48,350
same image so that<font color="#CCCCCC"> and it uses the</font>

217
00:10:44,560 --> 00:10:51,400
recent<font color="#CCCCCC"> linux locking mechanism the Open</font>

218
00:10:48,350 --> 00:10:53,260
<font color="#CCCCCC">File</font><font color="#E5E5E5"> description and locks and</font>

219
00:10:51,400 --> 00:10:55,170
<font color="#CCCCCC">as</font><font color="#E5E5E5"> a quick example we won't go into the</font>

220
00:10:53,260 --> 00:10:56,830
details of these things here<font color="#E5E5E5"> because I</font>

221
00:10:55,170 --> 00:10:59,229
wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> mention it for completeness</font>

222
00:10:56,830 --> 00:11:00,880
<font color="#E5E5E5">and and this is a new feature where you</font>

223
00:10:59,230 --> 00:11:03,970
have users may have<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> explicit</font>

224
00:11:00,880 --> 00:11:06,670
action<font color="#E5E5E5"> so</font><font color="#CCCCCC"> to klarion</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> use disk image</font>

225
00:11:03,970 --> 00:11:08,290
with recent human origins<font color="#E5E5E5"> 2.10 or</font>

226
00:11:06,670 --> 00:11:10,930
whatever so you have to specify the

227
00:11:08,290 --> 00:11:13,030
<font color="#CCCCCC">force share option for</font><font color="#E5E5E5"> example if the</font>

228
00:11:10,930 --> 00:11:15,790
disk image<font color="#CCCCCC"> is already in use</font><font color="#E5E5E5"> the food or</font>

229
00:11:13,030 --> 00:11:18,430
<font color="#CCCCCC">queue Cal</font><font color="#E5E5E5"> to file and you want to query</font>

230
00:11:15,790 --> 00:11:22,480
<font color="#CCCCCC">it for read-only information you supply</font>

231
00:11:18,430 --> 00:11:25,719
that for<font color="#CCCCCC"> share flag then</font><font color="#E5E5E5"> it read only</font>

232
00:11:22,480 --> 00:11:28,350
<font color="#CCCCCC">access is allowed to that while</font><font color="#E5E5E5"> rights</font>

233
00:11:25,720 --> 00:11:31,930
are happening<font color="#E5E5E5"> now there are some cases</font>

234
00:11:28,350 --> 00:11:33,760
where<font color="#CCCCCC"> you can get stale information</font><font color="#E5E5E5"> when</font>

235
00:11:31,930 --> 00:11:38,500
you're doing read-only access of that

236
00:11:33,760 --> 00:11:41,110
<font color="#CCCCCC">image why</font><font color="#E5E5E5"> one example could be if Q is</font>

237
00:11:38,500 --> 00:11:45,430
<font color="#E5E5E5">accessing</font><font color="#CCCCCC"> Arisa</font><font color="#E5E5E5"> actively resizing the</font>

238
00:11:41,110 --> 00:11:49,000
disk image<font color="#E5E5E5"> and you try to query</font><font color="#CCCCCC"> for</font>

239
00:11:45,430 --> 00:11:52,650
information<font color="#E5E5E5"> so you you see inconsistent</font>

240
00:11:49,000 --> 00:11:55,570
results so insofar<font color="#E5E5E5"> as you're aware that</font>

241
00:11:52,650 --> 00:11:56,800
information can<font color="#E5E5E5"> be stale sometimes you</font>

242
00:11:55,570 --> 00:12:01,570
can<font color="#E5E5E5"> use this and there are some valid</font>

243
00:11:56,800 --> 00:12:05,589
cases like in<font color="#E5E5E5"> community info falls under</font>

244
00:12:01,570 --> 00:12:08,830
an area where you can safely<font color="#E5E5E5"> query</font><font color="#CCCCCC"> an in</font>

245
00:12:05,590 --> 00:12:10,510
use image so yeah<font color="#E5E5E5"> I just want to</font>

246
00:12:08,830 --> 00:12:12,700
highlight<font color="#E5E5E5"> that there for</font><font color="#CCCCCC"> example</font>

247
00:12:10,510 --> 00:12:15,460
<font color="#E5E5E5">OpenStack and it uses this knowingly</font>

248
00:12:12,700 --> 00:12:17,920
<font color="#E5E5E5">that there is a</font><font color="#CCCCCC"> the chemical initially</font>

249
00:12:15,460 --> 00:12:20,890
<font color="#CCCCCC">stay</font><font color="#E5E5E5"> later because it it runs this</font>

250
00:12:17,920 --> 00:12:22,209
<font color="#E5E5E5">command in a loop so</font><font color="#CCCCCC"> that if it even</font>

251
00:12:20,890 --> 00:12:22,780
misses the information<font color="#E5E5E5"> it'll catch up</font>

252
00:12:22,210 --> 00:12:28,300
<font color="#E5E5E5">again</font>

253
00:12:22,780 --> 00:12:30,459
on the next<font color="#E5E5E5"> run and on the recent</font><font color="#CCCCCC"> term</font>

254
00:12:28,300 --> 00:12:34,000
use the same locking mechanism<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

255
00:12:30,460 --> 00:12:35,980
specified<font color="#CCCCCC"> by the when you configure</font>

256
00:12:34,000 --> 00:12:39,280
<font color="#E5E5E5">block devices</font><font color="#CCCCCC"> there's a locking</font><font color="#E5E5E5"> option</font>

257
00:12:35,980 --> 00:12:42,250
so it<font color="#CCCCCC"> defaults to open file description</font>

258
00:12:39,280 --> 00:12:45,699
locks<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> Linux kernel</font><font color="#CCCCCC"> supports</font>

259
00:12:42,250 --> 00:12:47,470
otherwise it defaults to POSIX locking

260
00:12:45,700 --> 00:12:50,170
<font color="#E5E5E5">if I'm not quite sure but there's some</font>

261
00:12:47,470 --> 00:12:52,600
block people here can confirm but that's

262
00:12:50,170 --> 00:12:57,370
what from a quick look in the code<font color="#CCCCCC"> and</font>

263
00:12:52,600 --> 00:13:01,110
<font color="#E5E5E5">that's what it it it looks</font><font color="#CCCCCC"> so yeah so</font>

264
00:12:57,370 --> 00:13:04,080
that's there's that so

265
00:13:01,110 --> 00:13:06,870
in this part we'll see how do you

266
00:13:04,080 --> 00:13:10,709
operate<font color="#E5E5E5"> a commune instance</font><font color="#CCCCCC"> like</font>

267
00:13:06,870 --> 00:13:14,070
<font color="#E5E5E5">especially tools like libvirt and how it</font>

268
00:13:10,709 --> 00:13:18,540
can send various commands<font color="#E5E5E5"> to modify an</font>

269
00:13:14,070 --> 00:13:21,360
image<font color="#CCCCCC"> or send query</font><font color="#E5E5E5"> commands or modify</font>

270
00:13:18,540 --> 00:13:23,750
the<font color="#E5E5E5"> state of the VM how those kinds of</font>

271
00:13:21,360 --> 00:13:23,750
things are<font color="#E5E5E5"> done</font>

272
00:13:30,920 --> 00:13:38,339
<font color="#CCCCCC">Kimmi offers this human-machine</font><font color="#E5E5E5"> protocol</font>

273
00:13:35,279 --> 00:13:40,680
<font color="#E5E5E5">where it's a JSON RPC interface through</font>

274
00:13:38,339 --> 00:13:43,200
which<font color="#CCCCCC"> Lebert interacts and sends back</font>

275
00:13:40,680 --> 00:13:46,170
<font color="#CCCCCC">and forth commands</font><font color="#E5E5E5"> to to do various</font>

276
00:13:43,200 --> 00:13:48,269
things so you<font color="#E5E5E5"> can send query commands to</font>

277
00:13:46,170 --> 00:13:50,729
query<font color="#E5E5E5"> order the status of migration for</font>

278
00:13:48,269 --> 00:13:52,680
example or if there's a long backup

279
00:13:50,730 --> 00:13:54,540
<font color="#E5E5E5">operation going on hey can</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> tell me</font>

280
00:13:52,680 --> 00:13:57,660
how much more<font color="#E5E5E5"> information to be copied</font>

281
00:13:54,540 --> 00:14:00,569
<font color="#E5E5E5">and and</font><font color="#CCCCCC"> and and existing block device</font>

282
00:13:57,660 --> 00:14:03,449
jobs in progress<font color="#CCCCCC"> many various things</font>

283
00:14:00,570 --> 00:14:07,110
like<font color="#E5E5E5"> that so to get a sense of where</font>

284
00:14:03,450 --> 00:14:09,209
this<font color="#CCCCCC"> qmp is is you know configured</font><font color="#E5E5E5"> if</font>

285
00:14:07,110 --> 00:14:11,760
you look at and<font color="#CCCCCC"> the illiberal configured</font>

286
00:14:09,209 --> 00:14:14,010
<font color="#CCCCCC">queue</font><font color="#E5E5E5"> instance you see a lot of command</font>

287
00:14:11,760 --> 00:14:17,069
line<font color="#CCCCCC"> that is snipped out</font><font color="#E5E5E5"> but focus on</font>

288
00:14:14,010 --> 00:14:20,430
<font color="#CCCCCC">the kind of</font><font color="#E5E5E5"> setup</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> it sets up a</font>

289
00:14:17,070 --> 00:14:22,589
unique<font color="#E5E5E5"> stream socket for</font><font color="#CCCCCC"> back-and-forth</font>

290
00:14:20,430 --> 00:14:26,279
communication which<font color="#CCCCCC"> queue so that's</font>

291
00:14:22,589 --> 00:14:29,459
where it happens so<font color="#CCCCCC"> liberty will work</font>

292
00:14:26,279 --> 00:14:31,170
through<font color="#E5E5E5"> that socket and if you're doing</font>

293
00:14:29,459 --> 00:14:33,930
<font color="#CCCCCC">test and development you can</font><font color="#E5E5E5"> use this</font>

294
00:14:31,170 --> 00:14:36,569
shorthand which is just a sugared form

295
00:14:33,930 --> 00:14:39,540
of the long lengthy command line about

296
00:14:36,570 --> 00:14:41,790
the -<font color="#E5E5E5"> PNP</font><font color="#CCCCCC"> UNIX and provide</font><font color="#E5E5E5"> the socket</font>

297
00:14:39,540 --> 00:14:45,680
and a bunch of other<font color="#CCCCCC"> options so that's</font>

298
00:14:41,790 --> 00:14:50,069
handy there so now that you<font color="#E5E5E5"> set</font><font color="#CCCCCC"> up a</font>

299
00:14:45,680 --> 00:14:52,260
launch<font color="#E5E5E5"> tmu with a socket now you can</font>

300
00:14:50,070 --> 00:14:54,290
connect to<font color="#CCCCCC"> that socket</font><font color="#E5E5E5"> there's different</font>

301
00:14:52,260 --> 00:14:57,630
<font color="#E5E5E5">ways</font><font color="#CCCCCC"> to interact with the qmp monitor</font>

302
00:14:54,290 --> 00:14:59,910
<font color="#E5E5E5">one this is a bit tedious but and can</font>

303
00:14:57,630 --> 00:15:02,420
show actually what is going<font color="#CCCCCC"> on is the</font>

304
00:14:59,910 --> 00:15:04,800
socket<font color="#E5E5E5"> cap utility I invoke this</font>

305
00:15:02,420 --> 00:15:06,660
shortcut utility to connect<font color="#E5E5E5"> to the UNIX</font>

306
00:15:04,800 --> 00:15:10,260
socket<font color="#CCCCCC"> that we just</font><font color="#E5E5E5"> launched which came</font>

307
00:15:06,660 --> 00:15:13,560
in and and supply the red line library

308
00:15:10,260 --> 00:15:16,500
<font color="#E5E5E5">option so that it</font><font color="#CCCCCC"> cash</font>

309
00:15:13,560 --> 00:15:18,989
the<font color="#E5E5E5"> history of commands that</font><font color="#CCCCCC"> a type at</font>

310
00:15:16,500 --> 00:15:20,580
first thing it gives<font color="#E5E5E5"> out is a</font><font color="#CCCCCC"> hay</font>

311
00:15:18,990 --> 00:15:23,490
connection is successfully established

312
00:15:20,580 --> 00:15:26,370
<font color="#E5E5E5">so that's</font><font color="#CCCCCC"> a greeting</font><font color="#E5E5E5"> message it shows so</font>

313
00:15:23,490 --> 00:15:28,770
that's a good indication<font color="#E5E5E5"> after that you</font>

314
00:15:26,370 --> 00:15:31,529
<font color="#E5E5E5">have to explicitly specify</font><font color="#CCCCCC"> this command</font>

315
00:15:28,770 --> 00:15:33,900
called<font color="#CCCCCC"> key capabilities that</font><font color="#E5E5E5"> is for</font>

316
00:15:31,529 --> 00:15:37,710
negotiating<font color="#E5E5E5"> different capabilities in</font>

317
00:15:33,900 --> 00:15:39,959
case so far there hasn't been many<font color="#E5E5E5"> any</font>

318
00:15:37,710 --> 00:15:42,330
use cases for<font color="#E5E5E5"> it but there is</font><font color="#CCCCCC"> an</font>

319
00:15:39,960 --> 00:15:45,089
<font color="#CCCCCC">apparently new feature on</font><font color="#E5E5E5"> the list</font><font color="#CCCCCC"> that</font>

320
00:15:42,330 --> 00:15:46,950
a mailing list<font color="#E5E5E5"> that</font><font color="#CCCCCC"> uses</font><font color="#E5E5E5"> this but for</font>

321
00:15:45,089 --> 00:15:49,790
<font color="#CCCCCC">our purposes what what's important is</font>

322
00:15:46,950 --> 00:15:52,500
that it is mandatory<font color="#E5E5E5"> to specify this</font>

323
00:15:49,790 --> 00:15:56,959
capabilities<font color="#CCCCCC"> for</font><font color="#E5E5E5"> and then you're ready</font>

324
00:15:52,500 --> 00:15:59,250
<font color="#E5E5E5">to send and commands receive query</font>

325
00:15:56,960 --> 00:16:02,610
arbitrary commands that you<font color="#E5E5E5"> can send so</font>

326
00:15:59,250 --> 00:16:06,230
regular<font color="#CCCCCC"> qmb comments but you don't want</font>

327
00:16:02,610 --> 00:16:10,250
to type manual<font color="#E5E5E5"> JSON comments</font><font color="#CCCCCC"> unless I</font>

328
00:16:06,230 --> 00:16:10,250
don't want to<font color="#CCCCCC"> finish</font><font color="#E5E5E5"> that sentence but</font>

329
00:16:10,460 --> 00:16:18,240
yeah but<font color="#CCCCCC"> thankfully</font><font color="#E5E5E5"> that's where</font><font color="#CCCCCC"> weblog</font>

330
00:16:14,850 --> 00:16:23,100
comes to rescue<font color="#E5E5E5"> to automate this all and</font>

331
00:16:18,240 --> 00:16:24,470
provide a convenient<font color="#E5E5E5"> wrapper so and</font>

332
00:16:23,100 --> 00:16:28,560
there are other ways to<font color="#CCCCCC"> interact</font><font color="#E5E5E5"> with</font>

333
00:16:24,470 --> 00:16:31,050
<font color="#CCCCCC">qmp monitor and I mentioned</font><font color="#E5E5E5"> this for</font>

334
00:16:28,560 --> 00:16:32,849
completeness sake and<font color="#E5E5E5"> also some of the</font>

335
00:16:31,050 --> 00:16:35,010
examples that I<font color="#E5E5E5"> sure I'll use the first</font>

336
00:16:32,850 --> 00:16:38,000
<font color="#CCCCCC">one or the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> of the qmp shell that</font>

337
00:16:35,010 --> 00:16:41,370
lives in the<font color="#E5E5E5"> queue meat resource tree</font>

338
00:16:38,000 --> 00:16:42,810
<font color="#CCCCCC">where you can</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> reach it takes</font><font color="#E5E5E5"> key</font>

339
00:16:41,370 --> 00:16:46,680
value pair so<font color="#CCCCCC"> that you don't</font><font color="#E5E5E5"> have to</font>

340
00:16:42,810 --> 00:16:48,810
type out long lengthy JSON comments so

341
00:16:46,680 --> 00:16:50,849
that's convenient<font color="#E5E5E5"> there right</font><font color="#CCCCCC"> so it</font>

342
00:16:48,810 --> 00:16:54,060
leaves in the tree<font color="#E5E5E5"> you just apply a</font>

343
00:16:50,850 --> 00:16:55,890
verbose parameter and a pretty print<font color="#E5E5E5"> one</font>

344
00:16:54,060 --> 00:16:59,550
so that it also prints out<font color="#E5E5E5"> the raw JSON</font>

345
00:16:55,890 --> 00:17:02,459
if you want and supply the path to the

346
00:16:59,550 --> 00:17:04,709
socket<font color="#CCCCCC"> that you launched qmu with so</font>

347
00:17:02,459 --> 00:17:07,609
that's<font color="#CCCCCC"> a communion</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> we're using this</font>

348
00:17:04,709 --> 00:17:11,520
<font color="#E5E5E5">and to show some examples in</font><font color="#CCCCCC"> in in</font><font color="#E5E5E5"> the</font>

349
00:17:07,609 --> 00:17:13,109
<font color="#CCCCCC">next slide and the liberal also offers a</font>

350
00:17:11,520 --> 00:17:16,199
creamy monitor

351
00:17:13,109 --> 00:17:18,569
command<font color="#E5E5E5"> veidt's shell interface through</font>

352
00:17:16,199 --> 00:17:21,870
which you<font color="#CCCCCC"> can type JSON but</font><font color="#E5E5E5"> again that's</font>

353
00:17:18,569 --> 00:17:25,470
<font color="#E5E5E5">only to query now here is a caveat that</font>

354
00:17:21,869 --> 00:17:27,780
you don't want to modify the virtual

355
00:17:25,470 --> 00:17:29,880
machine state behind<font color="#CCCCCC"> Liberty</font>

356
00:17:27,780 --> 00:17:31,830
because then you<font color="#E5E5E5"> get to keep the</font><font color="#CCCCCC"> pieces</font>

357
00:17:29,880 --> 00:17:34,770
<font color="#E5E5E5">if it breaks so it's</font><font color="#CCCCCC"> useful to only</font>

358
00:17:31,830 --> 00:17:43,740
query but not to modify<font color="#E5E5E5"> the virtual</font>

359
00:17:34,770 --> 00:17:47,639
machine<font color="#CCCCCC"> stick so in</font><font color="#E5E5E5"> this part we'll</font>

360
00:17:43,740 --> 00:17:49,710
quickly see a glimpse actually at what

361
00:17:47,640 --> 00:17:55,230
block devices<font color="#E5E5E5"> and how block devices are</font>

362
00:17:49,710 --> 00:17:58,470
configured in Q so Q<font color="#E5E5E5"> means a block</font>

363
00:17:55,230 --> 00:18:01,440
<font color="#E5E5E5">device has a</font><font color="#CCCCCC"> notion of a</font><font color="#E5E5E5"> back end and a</font>

364
00:17:58,470 --> 00:18:05,060
front end where a back end is you can

365
00:18:01,440 --> 00:18:08,640
<font color="#E5E5E5">configure a company a block device and</font>

366
00:18:05,060 --> 00:18:13,830
set up various<font color="#E5E5E5"> things like specify</font><font color="#CCCCCC"> cash</font>

367
00:18:08,640 --> 00:18:15,990
options or specify formats and change

368
00:18:13,830 --> 00:18:18,149
back in file and various other things

369
00:18:15,990 --> 00:18:20,010
<font color="#E5E5E5">that's the it doesn't</font><font color="#CCCCCC"> fine-grained</font>

370
00:18:18,150 --> 00:18:21,780
<font color="#CCCCCC">control it provides there's two</font>

371
00:18:20,010 --> 00:18:25,020
different<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to configure eight one of</font>

372
00:18:21,780 --> 00:18:27,960
these<font color="#E5E5E5"> legacy but still</font><font color="#CCCCCC"> liberal uses that</font>

373
00:18:25,020 --> 00:18:30,540
<font color="#E5E5E5">and the more recent changes</font><font color="#CCCCCC"> are done</font><font color="#E5E5E5"> via</font>

374
00:18:27,960 --> 00:18:32,220
the - block<font color="#CCCCCC"> def</font><font color="#E5E5E5"> command line but we</font>

375
00:18:30,540 --> 00:18:35,639
won't get<font color="#E5E5E5"> into that if you want more</font>

376
00:18:32,220 --> 00:18:37,470
details there's a talk there's been

377
00:18:35,640 --> 00:18:39,290
several talks at<font color="#CCCCCC"> KVM forums previous</font>

378
00:18:37,470 --> 00:18:42,870
<font color="#E5E5E5">kayvyun forums from there you can refer</font>

379
00:18:39,290 --> 00:18:45,090
and also the other notion is a gift

380
00:18:42,870 --> 00:18:48,120
visible<font color="#CCCCCC"> front end</font><font color="#E5E5E5"> device like</font><font color="#CCCCCC"> you're</font>

381
00:18:45,090 --> 00:18:50,310
like a scuzzy<font color="#E5E5E5"> device or something like</font>

382
00:18:48,120 --> 00:18:53,850
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and that</font><font color="#CCCCCC"> can be configured</font><font color="#E5E5E5"> by a</font>

383
00:18:50,310 --> 00:19:01,679
runtime<font color="#CCCCCC"> using the device ad or the -</font>

384
00:18:53,850 --> 00:19:04,830
device command line that<font color="#CCCCCC"> was configuring</font>

385
00:19:01,680 --> 00:19:07,320
on command line so that's sorry that's a

386
00:19:04,830 --> 00:19:10,590
notion<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> walk device now we see</font>

387
00:19:07,320 --> 00:19:13,230
quickly<font color="#E5E5E5"> what it looks like on command</font>

388
00:19:10,590 --> 00:19:16,889
line to configure block<font color="#E5E5E5"> device it's it's</font>

389
00:19:13,230 --> 00:19:18,810
fairly boring<font color="#E5E5E5"> and usually projects like</font>

390
00:19:16,890 --> 00:19:21,030
libvirt will automate<font color="#E5E5E5"> this away</font><font color="#CCCCCC"> but you</font>

391
00:19:18,810 --> 00:19:22,710
can see the complexity to get a sense<font color="#E5E5E5"> of</font>

392
00:19:21,030 --> 00:19:27,899
that<font color="#E5E5E5"> here you're just attaching a</font>

393
00:19:22,710 --> 00:19:32,820
<font color="#CCCCCC">curative device to a</font><font color="#E5E5E5"> disk</font><font color="#CCCCCC"> to a word ayar</font>

394
00:19:27,900 --> 00:19:36,570
block guest device the - block device

395
00:19:32,820 --> 00:19:39,750
and block<font color="#CCCCCC"> def configures the so</font><font color="#E5E5E5"> called</font>

396
00:19:36,570 --> 00:19:42,200
<font color="#E5E5E5">back end and the - device configures the</font>

397
00:19:39,750 --> 00:19:45,600
guest visible<font color="#E5E5E5"> front end</font>

398
00:19:42,200 --> 00:19:47,790
again here details aren't<font color="#CCCCCC"> Kevin forms</font>

399
00:19:45,600 --> 00:19:48,719
<font color="#E5E5E5">talks so we won't get into that I just</font>

400
00:19:47,790 --> 00:19:53,790
wanted to mention it<font color="#CCCCCC"> for completeness</font>

401
00:19:48,720 --> 00:19:56,510
sake<font color="#E5E5E5"> and lastly on this part is the blog</font>

402
00:19:53,790 --> 00:19:59,100
<font color="#CCCCCC">div</font><font color="#E5E5E5"> ad which is the</font><font color="#CCCCCC"> one-time</font>

403
00:19:56,510 --> 00:20:02,760
<font color="#E5E5E5">command-line option again fairly</font>

404
00:19:59,100 --> 00:20:05,399
uninteresting<font color="#CCCCCC"> just not a simple JSON</font>

405
00:20:02,760 --> 00:20:09,270
structure<font color="#CCCCCC"> comment</font><font color="#E5E5E5"> to add a cloud to</font>

406
00:20:05,400 --> 00:20:12,240
block device<font color="#E5E5E5"> what is nice here is in</font>

407
00:20:09,270 --> 00:20:15,810
these recent<font color="#CCCCCC"> changes</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> cue means</font>

408
00:20:12,240 --> 00:20:18,630
<font color="#E5E5E5">block layer in the cue block layer</font><font color="#CCCCCC"> the</font>

409
00:20:15,810 --> 00:20:22,110
<font color="#CCCCCC">command-line equivalent of the</font><font color="#E5E5E5"> JSON is</font>

410
00:20:18,630 --> 00:20:24,390
just a<font color="#CCCCCC"> one is</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> mapping of of the</font>

411
00:20:22,110 --> 00:20:27,270
<font color="#CCCCCC">rock ump if you</font><font color="#E5E5E5"> kind of squint your eyes</font>

412
00:20:24,390 --> 00:20:28,020
<font color="#E5E5E5">and look and look at and the options on</font>

413
00:20:27,270 --> 00:20:30,690
the command line

414
00:20:28,020 --> 00:20:32,760
it's just<font color="#E5E5E5"> direct one is to a tree like</font>

415
00:20:30,690 --> 00:20:35,220
<font color="#E5E5E5">mapping of the above so that's the</font>

416
00:20:32,760 --> 00:20:38,760
convenient way to to<font color="#E5E5E5"> launch if you want</font>

417
00:20:35,220 --> 00:20:40,620
to launch a human instance<font color="#E5E5E5"> by looking at</font>

418
00:20:38,760 --> 00:20:42,420
some<font color="#CCCCCC"> JSON an existing configuration</font>

419
00:20:40,620 --> 00:20:44,580
<font color="#CCCCCC">again you don't</font><font color="#E5E5E5"> want to do that by hand</font>

420
00:20:42,420 --> 00:20:46,020
<font color="#CCCCCC">most of this thing is</font><font color="#E5E5E5"> done by when</font>

421
00:20:44,580 --> 00:20:49,470
you're doing testing<font color="#E5E5E5"> and development and</font>

422
00:20:46,020 --> 00:20:53,180
<font color="#E5E5E5">running from get and so forth so more</font>

423
00:20:49,470 --> 00:20:53,180
details<font color="#CCCCCC"> previous carry informed ops</font>

424
00:20:59,120 --> 00:21:07,830
here we see the part that I wanted<font color="#E5E5E5"> to</font>

425
00:21:03,690 --> 00:21:09,960
talk mostly about the which provides

426
00:21:07,830 --> 00:21:12,270
various use cases so the live block

427
00:21:09,960 --> 00:21:15,660
operations<font color="#E5E5E5"> can there are several</font>

428
00:21:12,270 --> 00:21:18,120
different of them to get to any<font color="#E5E5E5"> of them</font>

429
00:21:15,660 --> 00:21:20,910
first we need to quickly see how<font color="#E5E5E5"> do you</font>

430
00:21:18,120 --> 00:21:23,610
<font color="#CCCCCC">configure a vacuum chain to that and</font>

431
00:21:20,910 --> 00:21:26,850
<font color="#CCCCCC">Akuma offers a couple of commands and</font>

432
00:21:23,610 --> 00:21:28,949
block def<font color="#E5E5E5"> snapshot sync is a yeah it</font>

433
00:21:26,850 --> 00:21:30,840
creates a synchronized snapshot<font color="#E5E5E5"> but this</font>

434
00:21:28,950 --> 00:21:33,150
is an older<font color="#CCCCCC"> version</font><font color="#E5E5E5"> there's also newer</font>

435
00:21:30,840 --> 00:21:35,310
<font color="#E5E5E5">version of it called</font><font color="#CCCCCC"> block</font><font color="#E5E5E5"> def snapshot</font>

436
00:21:33,150 --> 00:21:37,740
but that's more<font color="#E5E5E5"> to do with configuring</font>

437
00:21:35,310 --> 00:21:40,770
<font color="#CCCCCC">it a bit</font><font color="#E5E5E5"> more easily with the recent</font>

438
00:21:37,740 --> 00:21:42,750
<font color="#CCCCCC">changes so what happens essentially</font><font color="#E5E5E5"> when</font>

439
00:21:40,770 --> 00:21:45,629
you do it is same when you do it<font color="#E5E5E5"> when</font>

440
00:21:42,750 --> 00:21:47,790
offline<font color="#CCCCCC"> when</font><font color="#E5E5E5"> a guest is running the</font>

441
00:21:45,630 --> 00:21:51,330
existing with a single<font color="#E5E5E5"> disk the existing</font>

442
00:21:47,790 --> 00:21:53,820
this becomes the backing image and a new

443
00:21:51,330 --> 00:21:56,070
cue card to<font color="#E5E5E5"> overlay is created to track</font>

444
00:21:53,820 --> 00:21:58,409
the new<font color="#CCCCCC"> writes from that point onwards</font>

445
00:21:56,070 --> 00:22:00,720
<font color="#CCCCCC">so the backing the existing this becomes</font>

446
00:21:58,410 --> 00:22:02,640
read-only back in file and all<font color="#E5E5E5"> the new</font>

447
00:22:00,720 --> 00:22:06,990
<font color="#E5E5E5">writes going to the overlay so it's all</font>

448
00:22:02,640 --> 00:22:10,500
life and cue points<font color="#CCCCCC"> the</font><font color="#E5E5E5"> rights to the</font>

449
00:22:06,990 --> 00:22:12,770
new overlay so now overlays have to be

450
00:22:10,500 --> 00:22:16,200
<font color="#CCCCCC">Kokoda</font><font color="#E5E5E5"> format base images can</font><font color="#CCCCCC"> be a VM</font>

451
00:22:12,770 --> 00:22:18,570
raw block device or any of the other

452
00:22:16,200 --> 00:22:20,370
formats<font color="#E5E5E5"> and of course the appealing</font>

453
00:22:18,570 --> 00:22:23,790
aspect here is<font color="#CCCCCC"> that there's no guest</font>

454
00:22:20,370 --> 00:22:26,370
<font color="#E5E5E5">downtime snapshot is instantaneous some</font>

455
00:22:23,790 --> 00:22:29,520
of you here<font color="#CCCCCC"> may have used</font><font color="#E5E5E5"> Kermes</font>

456
00:22:26,370 --> 00:22:32,969
internal snapshots which which<font color="#CCCCCC"> is more</font>

457
00:22:29,520 --> 00:22:34,920
convenient because the snapshot and<font color="#E5E5E5"> the</font>

458
00:22:32,970 --> 00:22:37,830
<font color="#E5E5E5">Delta both of them are located in single</font>

459
00:22:34,920 --> 00:22:40,410
file and that's<font color="#E5E5E5"> nice to</font><font color="#CCCCCC"> copy around</font><font color="#E5E5E5"> and</font>

460
00:22:37,830 --> 00:22:42,689
so forth but it's not the most well

461
00:22:40,410 --> 00:22:45,030
tested code<font color="#CCCCCC"> path and upstream</font>

462
00:22:42,690 --> 00:22:46,020
concentrates more on this external

463
00:22:45,030 --> 00:22:48,030
snapshots

464
00:22:46,020 --> 00:22:49,860
although internal vampires are sometimes

465
00:22:48,030 --> 00:22:51,570
convenient and there's a bit<font color="#CCCCCC"> of a guest</font>

466
00:22:49,860 --> 00:22:53,310
pause involved there as well not too

467
00:22:51,570 --> 00:22:56,399
<font color="#E5E5E5">long but for some it may not be</font>

468
00:22:53,310 --> 00:23:03,020
acceptable<font color="#E5E5E5"> but the recommended upstream</font>

469
00:22:56,400 --> 00:23:05,850
recommends<font color="#E5E5E5"> this format</font><font color="#CCCCCC"> so to see a quick</font>

470
00:23:03,020 --> 00:23:08,970
example<font color="#CCCCCC"> when you start with</font><font color="#E5E5E5"> that base</font>

471
00:23:05,850 --> 00:23:11,879
image<font color="#CCCCCC"> where</font><font color="#E5E5E5"> live humans writing you</font>

472
00:23:08,970 --> 00:23:15,210
<font color="#E5E5E5">launch a bunch of</font>

473
00:23:11,880 --> 00:23:16,890
the block<font color="#CCCCCC"> their snapshots Inc a</font>

474
00:23:15,210 --> 00:23:19,950
synchronized<font color="#E5E5E5"> snapshot command with a</font>

475
00:23:16,890 --> 00:23:23,220
bunch<font color="#E5E5E5"> of parameters it will</font><font color="#CCCCCC"> create the</font>

476
00:23:19,950 --> 00:23:25,500
overlay<font color="#E5E5E5"> again nothing super exciting</font><font color="#CCCCCC"> and</font>

477
00:23:23,220 --> 00:23:27,660
there's a liberal equivalent of it<font color="#E5E5E5"> you</font>

478
00:23:25,500 --> 00:23:29,790
don't<font color="#E5E5E5"> have to launch by a</font><font color="#CCCCCC"> Q</font><font color="#E5E5E5"> mu q MP</font>

479
00:23:27,660 --> 00:23:31,860
right so when<font color="#E5E5E5"> live word provides nice</font>

480
00:23:29,790 --> 00:23:33,420
<font color="#E5E5E5">virtual machine lifecycle manager so I</font>

481
00:23:31,860 --> 00:23:35,820
wanted<font color="#E5E5E5"> to highlight</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it's a simple</font>

482
00:23:33,420 --> 00:23:39,360
<font color="#E5E5E5">fairly command line</font><font color="#CCCCCC"> and the result would</font>

483
00:23:35,820 --> 00:23:42,030
be that<font color="#E5E5E5"> where you see a an overlay</font>

484
00:23:39,360 --> 00:23:44,010
<font color="#E5E5E5">that's pointing to base now</font><font color="#CCCCCC"> earlier the</font>

485
00:23:42,030 --> 00:23:46,830
like human is pointing at the<font color="#E5E5E5"> base image</font>

486
00:23:44,010 --> 00:23:55,770
<font color="#E5E5E5">now it's pointing to the just created</font><font color="#CCCCCC"> q</font>

487
00:23:46,830 --> 00:23:58,530
<font color="#CCCCCC">cap to orally however to manage this</font>

488
00:23:55,770 --> 00:24:01,080
long backing chains can get tedious<font color="#E5E5E5"> and</font>

489
00:23:58,530 --> 00:24:05,610
not only tedious but there can be<font color="#CCCCCC"> io</font>

490
00:24:01,080 --> 00:24:09,929
penalty involved<font color="#E5E5E5"> so for example when you</font>

491
00:24:05,610 --> 00:24:11,850
have a long backing chain<font color="#E5E5E5"> there are</font>

492
00:24:09,930 --> 00:24:15,630
multiple files<font color="#E5E5E5"> to track and I've</font><font color="#CCCCCC"> even</font>

493
00:24:11,850 --> 00:24:18,389
<font color="#CCCCCC">heard some cases where they're somebody</font>

494
00:24:15,630 --> 00:24:20,370
using<font color="#E5E5E5"> hundred backing chain and a</font><font color="#CCCCCC"> disk</font>

495
00:24:18,390 --> 00:24:24,450
<font color="#CCCCCC">Amit but I don't know what their use</font>

496
00:24:20,370 --> 00:24:27,360
case is<font color="#E5E5E5"> so it can get really cumbersome</font>

497
00:24:24,450 --> 00:24:28,950
and also there can be<font color="#CCCCCC"> io penalty so if</font>

498
00:24:27,360 --> 00:24:31,889
<font color="#E5E5E5">you if a cluster that</font><font color="#CCCCCC"> Kimmy wants to</font>

499
00:24:28,950 --> 00:24:34,200
read is not<font color="#E5E5E5"> in the immediate overlay but</font>

500
00:24:31,890 --> 00:24:36,690
somewhere in<font color="#E5E5E5"> between so you gotta</font>

501
00:24:34,200 --> 00:24:41,520
traverse through all the<font color="#E5E5E5"> images</font><font color="#CCCCCC"> and then</font>

502
00:24:36,690 --> 00:24:43,890
pick<font color="#CCCCCC"> that and</font><font color="#E5E5E5"> and then cache it so but</font>

503
00:24:41,520 --> 00:24:46,800
<font color="#E5E5E5">there's some solution for that first is</font>

504
00:24:43,890 --> 00:24:48,600
the<font color="#E5E5E5"> live disk image chambers where you</font>

505
00:24:46,800 --> 00:24:51,389
have a long chain<font color="#E5E5E5"> and the problem is to</font>

506
00:24:48,600 --> 00:24:53,010
merge<font color="#CCCCCC"> that long chain to short</font><font color="#E5E5E5"> so the</font>

507
00:24:51,390 --> 00:24:55,050
<font color="#E5E5E5">simplest</font><font color="#CCCCCC"> solution is to merge all of</font>

508
00:24:53,010 --> 00:24:56,760
them into<font color="#E5E5E5"> the base image so that's</font>

509
00:24:55,050 --> 00:25:00,330
<font color="#E5E5E5">fairly simple right and how do you do</font>

510
00:24:56,760 --> 00:25:03,200
that the first one the snapshot come out

511
00:25:00,330 --> 00:25:07,860
to create<font color="#E5E5E5"> the</font><font color="#CCCCCC"> three overlays and then</font>

512
00:25:03,200 --> 00:25:09,870
you run the commit command so that

513
00:25:07,860 --> 00:25:13,620
<font color="#E5E5E5">please commit all the content from three</font>

514
00:25:09,870 --> 00:25:16,199
overlays back into the base and then you

515
00:25:13,620 --> 00:25:20,250
finally complete<font color="#E5E5E5"> the comic shop</font><font color="#CCCCCC"> and</font>

516
00:25:16,200 --> 00:25:22,140
pivot the<font color="#CCCCCC"> qmu to the base</font><font color="#E5E5E5"> that's it</font>

517
00:25:20,250 --> 00:25:24,150
that's<font color="#E5E5E5"> liberal equivalent now what is</font>

518
00:25:22,140 --> 00:25:25,620
the result<font color="#CCCCCC"> the result is a single</font>

519
00:25:24,150 --> 00:25:27,870
consolidated base image

520
00:25:25,620 --> 00:25:29,820
with all three<font color="#E5E5E5"> images content from all</font>

521
00:25:27,870 --> 00:25:32,699
three<font color="#CCCCCC"> images into</font><font color="#E5E5E5"> the base</font><font color="#CCCCCC"> image</font><font color="#E5E5E5"> the all</font>

522
00:25:29,820 --> 00:25:34,950
intermediate<font color="#E5E5E5"> images are invalid so you</font>

523
00:25:32,700 --> 00:25:36,779
can<font color="#E5E5E5"> throw them away</font><font color="#CCCCCC"> a single image</font><font color="#E5E5E5"> so</font>

524
00:25:34,950 --> 00:25:39,450
that's<font color="#E5E5E5"> a nice way</font><font color="#CCCCCC"> and people also use</font>

525
00:25:36,779 --> 00:25:41,100
this to make efficient<font color="#CCCCCC"> this snapshots</font>

526
00:25:39,450 --> 00:25:42,000
there's<font color="#CCCCCC"> some wiki pages for that</font><font color="#E5E5E5"> will</font>

527
00:25:41,100 --> 00:25:45,539
point<font color="#CCCCCC"> that later</font>

528
00:25:42,000 --> 00:25:48,659
and stream is a new it's<font color="#CCCCCC"> the</font><font color="#E5E5E5"> second one</font>

529
00:25:45,539 --> 00:25:50,730
<font color="#CCCCCC">in this series of</font><font color="#E5E5E5"> four command that I</font>

530
00:25:48,659 --> 00:25:52,650
want to talk<font color="#E5E5E5"> about if you similar to</font>

531
00:25:50,730 --> 00:25:53,520
<font color="#CCCCCC">comment</font><font color="#E5E5E5"> I don't want to go into details</font>

532
00:25:52,650 --> 00:25:57,059
but<font color="#E5E5E5"> just want to mention</font><font color="#CCCCCC"> for</font>

533
00:25:53,520 --> 00:25:59,520
completeness sake but it's it's safer in

534
00:25:57,059 --> 00:26:03,330
the sense that intermediate<font color="#E5E5E5"> overlays can</font>

535
00:25:59,520 --> 00:26:06,809
be valid meaning<font color="#CCCCCC"> in-stream your</font><font color="#E5E5E5"> copying</font>

536
00:26:03,330 --> 00:26:09,000
content from base images<font color="#E5E5E5"> into the top</font>

537
00:26:06,809 --> 00:26:11,760
<font color="#E5E5E5">image so the intermediate images can</font>

538
00:26:09,000 --> 00:26:13,350
remain valid<font color="#CCCCCC"> there's details</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> this it</font>

539
00:26:11,760 --> 00:26:16,350
can<font color="#E5E5E5"> be overwhelming</font><font color="#CCCCCC"> to grasp</font><font color="#E5E5E5"> all of it</font>

540
00:26:13,350 --> 00:26:19,080
in<font color="#CCCCCC"> one go</font><font color="#E5E5E5"> but I just want to mention</font>

541
00:26:16,350 --> 00:26:20,969
that and the other interesting<font color="#CCCCCC"> one is</font>

542
00:26:19,080 --> 00:26:23,039
the mirror command<font color="#CCCCCC"> where you can</font>

543
00:26:20,970 --> 00:26:27,390
synchronize the entire disk image<font color="#CCCCCC"> chain</font>

544
00:26:23,039 --> 00:26:30,179
to a target<font color="#CCCCCC"> where you can synchronize</font>

545
00:26:27,390 --> 00:26:35,490
either<font color="#E5E5E5"> parts of the chain or the full</font>

546
00:26:30,179 --> 00:26:36,870
chain or<font color="#E5E5E5"> only the top image so that's</font>

547
00:26:35,490 --> 00:26:39,750
operation I've been showing<font color="#E5E5E5"> a bunch of</font>

548
00:26:36,870 --> 00:26:42,178
<font color="#E5E5E5">qmv commands so you it's saying please</font>

549
00:26:39,750 --> 00:26:47,270
copy all the content from all the chain

550
00:26:42,179 --> 00:26:51,809
into a target image<font color="#E5E5E5"> called copy file and</font>

551
00:26:47,270 --> 00:26:57,059
complete it<font color="#E5E5E5"> and optionally turn the</font><font color="#CCCCCC"> live</font>

552
00:26:51,809 --> 00:26:59,460
<font color="#CCCCCC">commute to that cup so now that we</font>

553
00:26:57,059 --> 00:27:02,520
mentioned<font color="#E5E5E5"> that this can be combined with</font>

554
00:26:59,460 --> 00:27:04,980
<font color="#E5E5E5">a new well another concept called</font><font color="#CCCCCC"> NBD</font>

555
00:27:02,520 --> 00:27:05,668
server<font color="#CCCCCC"> cumin</font><font color="#E5E5E5"> has built-in network block</font>

556
00:27:04,980 --> 00:27:08,070
device server

557
00:27:05,669 --> 00:27:09,360
where<font color="#CCCCCC"> you can export and this</font><font color="#E5E5E5"> community</font>

558
00:27:08,070 --> 00:27:12,210
<font color="#CCCCCC">so while in use it has a bunch</font><font color="#E5E5E5"> of</font>

559
00:27:09,360 --> 00:27:14,610
<font color="#E5E5E5">commands so and you can combine the just</font>

560
00:27:12,210 --> 00:27:16,080
<font color="#E5E5E5">mentioned mirror command with</font><font color="#CCCCCC"> NVD to</font>

561
00:27:14,610 --> 00:27:19,080
solve an interesting use case called

562
00:27:16,080 --> 00:27:20,580
<font color="#E5E5E5">live virtual machine migration without</font>

563
00:27:19,080 --> 00:27:23,370
<font color="#E5E5E5">having to set up shade storage between</font>

564
00:27:20,580 --> 00:27:25,049
<font color="#CCCCCC">two hosts so fundamentally under the</font>

565
00:27:23,370 --> 00:27:27,330
hood that's what is<font color="#E5E5E5"> happening</font>

566
00:27:25,049 --> 00:27:29,250
<font color="#CCCCCC">kymmie runs the mirror</font><font color="#E5E5E5"> commands a</font>

567
00:27:27,330 --> 00:27:31,080
variant there's<font color="#CCCCCC"> too Ariens but we don't</font>

568
00:27:29,250 --> 00:27:33,870
get into<font color="#E5E5E5"> that but it essentially wants</font>

569
00:27:31,080 --> 00:27:35,789
the same mirror<font color="#E5E5E5"> concept show command it</font>

570
00:27:33,870 --> 00:27:38,340
copies content from source to

571
00:27:35,789 --> 00:27:40,169
destination the destination sets of the

572
00:27:38,340 --> 00:27:43,500
<font color="#CCCCCC">walk to my server destination premium</font>

573
00:27:40,169 --> 00:27:46,559
and exports a a<font color="#CCCCCC"> pre-created disk image</font>

574
00:27:43,500 --> 00:27:49,650
<font color="#E5E5E5">and copies all contents to</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> so the</font>

575
00:27:46,559 --> 00:27:51,690
more details<font color="#CCCCCC"> there at the bottom</font><font color="#E5E5E5"> so on</font>

576
00:27:49,650 --> 00:27:53,700
this light you see<font color="#E5E5E5"> what all</font><font color="#CCCCCC"> I mentioned</font>

577
00:27:51,690 --> 00:27:56,039
<font color="#CCCCCC">from qmu the equivalent live word</font>

578
00:27:53,700 --> 00:27:57,450
automation so it's it's<font color="#E5E5E5"> just a command</font>

579
00:27:56,039 --> 00:27:59,158
<font color="#E5E5E5">for completeness sake and if you want</font>

580
00:27:57,450 --> 00:28:01,710
you<font color="#E5E5E5"> can try this out later</font>

581
00:27:59,159 --> 00:28:04,279
and projects<font color="#E5E5E5"> like</font><font color="#CCCCCC"> higher</font><font color="#E5E5E5"> level</font>

582
00:28:01,710 --> 00:28:06,990
management tools like<font color="#E5E5E5"> OpenStack use the</font>

583
00:28:04,279 --> 00:28:13,110
equivalent<font color="#E5E5E5"> Python API</font><font color="#CCCCCC"> so Philippe work</font>

584
00:28:06,990 --> 00:28:16,970
to do the same things this is the last

585
00:28:13,110 --> 00:28:21,029
primitive again<font color="#E5E5E5"> it's a bit similar to</font>

586
00:28:16,970 --> 00:28:24,690
mirror command for mirror<font color="#E5E5E5"> the point in</font>

587
00:28:21,029 --> 00:28:27,600
time of of a copy is when you end the

588
00:28:24,690 --> 00:28:30,029
<font color="#E5E5E5">synchronization of disks on the source</font>

589
00:28:27,600 --> 00:28:33,449
<font color="#E5E5E5">by issuing the blocks of complete</font>

590
00:28:30,029 --> 00:28:35,370
commands<font color="#E5E5E5"> and for backup the primitive</font>

591
00:28:33,450 --> 00:28:36,929
<font color="#E5E5E5">that you see at the top is when the</font>

592
00:28:35,370 --> 00:28:39,389
point in time is when<font color="#E5E5E5"> you start the</font>

593
00:28:36,929 --> 00:28:43,320
operation<font color="#CCCCCC"> again</font><font color="#E5E5E5"> this can seem subtly</font>

594
00:28:39,390 --> 00:28:46,740
same and there's ways to upstream<font color="#E5E5E5"> at</font>

595
00:28:43,320 --> 00:28:49,490
least thinks is thinking to merge most

596
00:28:46,740 --> 00:28:52,289
of these into a couple of common

597
00:28:49,490 --> 00:28:54,390
<font color="#E5E5E5">commands so but yeah at the moment</font><font color="#CCCCCC"> it</font>

598
00:28:52,289 --> 00:28:56,210
seems a<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> simpler and</font><font color="#E5E5E5"> the interesting</font>

599
00:28:54,390 --> 00:28:59,010
thing<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is it has an extra</font>

600
00:28:56,210 --> 00:29:01,080
synchronization mode along with copying

601
00:28:59,010 --> 00:29:03,990
the<font color="#CCCCCC"> entire chain and so forth</font><font color="#E5E5E5"> it also</font>

602
00:29:01,080 --> 00:29:06,539
offers an incremental flag<font color="#E5E5E5"> that is</font>

603
00:29:03,990 --> 00:29:07,980
useful<font color="#E5E5E5"> for incremental backups so for</font>

604
00:29:06,539 --> 00:29:10,590
<font color="#E5E5E5">that there was a talk at FOSDEM last</font>

605
00:29:07,980 --> 00:29:13,169
year so you<font color="#CCCCCC"> can refer to that</font><font color="#E5E5E5"> one and it</font>

606
00:29:10,590 --> 00:29:15,629
has more details<font color="#E5E5E5"> just</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> how we</font>

607
00:29:13,169 --> 00:29:17,159
combined the mirror<font color="#E5E5E5"> command with NBD you</font>

608
00:29:15,630 --> 00:29:20,940
can also combine the<font color="#E5E5E5"> back up with</font><font color="#CCCCCC"> nvd</font>

609
00:29:17,159 --> 00:29:24,600
<font color="#E5E5E5">for our use cases one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things that</font>

610
00:29:20,940 --> 00:29:29,640
I hear is if you want examine<font color="#E5E5E5"> guest</font><font color="#CCCCCC"> IO</font>

611
00:29:24,600 --> 00:29:32,639
patterns without by an<font color="#E5E5E5"> external tool so</font>

612
00:29:29,640 --> 00:29:34,559
you<font color="#E5E5E5"> can simply copy the entire chain or</font>

613
00:29:32,640 --> 00:29:35,850
<font color="#CCCCCC">only the only</font><font color="#E5E5E5"> the current</font><font color="#CCCCCC"> rights</font>

614
00:29:34,559 --> 00:29:38,279
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> you know when you're examining</font>

615
00:29:35,850 --> 00:29:42,090
guest<font color="#CCCCCC"> IO patterns you want</font><font color="#E5E5E5"> to see the</font>

616
00:29:38,279 --> 00:29:44,960
<font color="#E5E5E5">current patterns and you can say hey</font>

617
00:29:42,090 --> 00:29:48,809
please only<font color="#CCCCCC"> sync all the current</font><font color="#E5E5E5"> writes</font>

618
00:29:44,960 --> 00:29:51,630
to the copy<font color="#CCCCCC"> and a destination</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font>

619
00:29:48,809 --> 00:29:53,190
can do examine<font color="#E5E5E5"> you can examine them</font>

620
00:29:51,630 --> 00:29:55,559
apparently some<font color="#E5E5E5"> wireless</font><font color="#CCCCCC"> counters</font><font color="#E5E5E5"> or</font>

621
00:29:53,190 --> 00:29:57,770
other such use cases<font color="#E5E5E5"> are there for that</font>

622
00:29:55,559 --> 00:30:01,168
<font color="#E5E5E5">so yeah there's that</font>

623
00:29:57,770 --> 00:30:04,139
in summary<font color="#E5E5E5"> there four of</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> come</font>

624
00:30:01,169 --> 00:30:06,870
extreme mirror<font color="#CCCCCC"> backup two of them are a</font>

625
00:30:04,140 --> 00:30:09,809
bit<font color="#E5E5E5"> similar and there's a lot more</font>

626
00:30:06,870 --> 00:30:13,110
details in the<font color="#E5E5E5"> links</font><font color="#CCCCCC"> that I showed below</font>

627
00:30:09,809 --> 00:30:15,690
which as examples and and other<font color="#E5E5E5"> things</font>

628
00:30:13,110 --> 00:30:17,760
<font color="#E5E5E5">that you can refer</font><font color="#CCCCCC"> to so if you have</font>

629
00:30:15,690 --> 00:30:19,320
yeah this is the reference<font color="#CCCCCC"> lie</font><font color="#E5E5E5"> that I</font>

630
00:30:17,760 --> 00:30:21,690
<font color="#E5E5E5">mention which has talks to links to</font>

631
00:30:19,320 --> 00:30:24,270
other<font color="#CCCCCC"> caveum forum talks which you can</font>

632
00:30:21,690 --> 00:30:30,590
look at the gory details<font color="#CCCCCC"> of Q if you are</font>

633
00:30:24,270 --> 00:30:30,590
interested<font color="#CCCCCC"> so any questions if they're</font>

634
00:30:38,480 --> 00:30:44,270
<font color="#E5E5E5">okay so I was totally</font><font color="#CCCCCC"> confused everyone</font>

635
00:30:40,980 --> 00:30:53,289
<font color="#E5E5E5">then thank you</font>

636
00:30:44,270 --> 00:30:53,289
[Applause]

