1
00:00:05,090 --> 00:00:11,440
[Applause]

2
00:00:08,370 --> 00:00:17,740
so yeah this<font color="#E5E5E5"> talk is about</font><font color="#CCCCCC"> how to</font><font color="#E5E5E5"> do</font>

3
00:00:11,440 --> 00:00:18,820
<font color="#CCCCCC">GStreamer on tiny devices so first</font>

4
00:00:17,740 --> 00:00:21,669
<font color="#E5E5E5">question Who am I</font>

5
00:00:18,820 --> 00:00:25,990
my name is<font color="#E5E5E5"> Olivia</font><font color="#CCCCCC"> kite I've been</font><font color="#E5E5E5"> working</font>

6
00:00:21,670 --> 00:00:27,340
on<font color="#E5E5E5"> gstreamer at kelabra since 2007 at</font>

7
00:00:25,990 --> 00:00:30,430
first<font color="#CCCCCC"> I spent a couple of</font><font color="#E5E5E5"> years doing</font>

8
00:00:27,340 --> 00:00:33,070
video calls<font color="#E5E5E5"> most of the</font><font color="#CCCCCC"> apartment audio</font>

9
00:00:30,430 --> 00:00:34,840
<font color="#E5E5E5">and video using</font><font color="#CCCCCC"> gstreamer I built a</font>

10
00:00:33,070 --> 00:00:36,910
framework<font color="#CCCCCC"> called</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> first stream which is</font>

11
00:00:34,840 --> 00:00:40,239
<font color="#E5E5E5">a series of</font><font color="#CCCCCC"> digital elements to do video</font>

12
00:00:36,910 --> 00:00:43,809
calls for protocols like<font color="#E5E5E5"> sip XMPP as</font>

13
00:00:40,239 --> 00:00:46,239
these can<font color="#E5E5E5"> got out of</font><font color="#CCCCCC"> fashion I moved on</font>

14
00:00:43,809 --> 00:00:48,400
<font color="#CCCCCC">to more generic de streamer for all</font>

15
00:00:46,239 --> 00:00:52,900
kinds of devices<font color="#CCCCCC"> all kinds of industries</font>

16
00:00:48,400 --> 00:00:58,390
<font color="#CCCCCC">from</font><font color="#E5E5E5"> TV set-top boxes but also very very</font>

17
00:00:52,900 --> 00:00:59,650
small devices<font color="#CCCCCC"> and some of these</font><font color="#E5E5E5"> you</font>

18
00:00:58,390 --> 00:01:01,600
would<font color="#E5E5E5"> think these tumors is a big</font>

19
00:00:59,650 --> 00:01:03,879
framework<font color="#E5E5E5"> it's a big PC thing it will</font>

20
00:01:01,600 --> 00:01:06,369
never fit<font color="#E5E5E5"> in my device</font><font color="#CCCCCC"> so what kind</font><font color="#E5E5E5"> of</font>

21
00:01:03,879 --> 00:01:07,119
device I am I talking about<font color="#E5E5E5"> when</font><font color="#CCCCCC"> I say a</font>

22
00:01:06,369 --> 00:01:10,750
tiny device

23
00:01:07,119 --> 00:01:13,689
it's a device with not much flash

24
00:01:10,750 --> 00:01:17,439
storage<font color="#E5E5E5"> probably a relatively slow CPU</font>

25
00:01:13,689 --> 00:01:18,850
and not that<font color="#E5E5E5"> much</font><font color="#CCCCCC"> ram by not not fast</font>

26
00:01:17,439 --> 00:01:23,038
<font color="#E5E5E5">for it I mean just maybe a couple</font>

27
00:01:18,850 --> 00:01:25,719
<font color="#E5E5E5">megabytes of space for the application</font>

28
00:01:23,039 --> 00:01:27,640
but first I'll give a<font color="#E5E5E5"> little overview of</font>

29
00:01:25,719 --> 00:01:30,130
<font color="#CCCCCC">gstreamer so when this room knows what</font>

30
00:01:27,640 --> 00:01:33,369
<font color="#CCCCCC">gstreamer is have some hands oh all</font>

31
00:01:30,130 --> 00:01:36,609
<font color="#E5E5E5">right it's very quick</font><font color="#CCCCCC"> already so a</font>

32
00:01:33,369 --> 00:01:39,369
<font color="#CCCCCC">gstreamer is a multimedia framework to</font>

33
00:01:36,609 --> 00:01:41,679
build<font color="#CCCCCC"> applications that</font><font color="#E5E5E5"> process things</font>

34
00:01:39,369 --> 00:01:43,960
like<font color="#E5E5E5"> audio and video probably in a way</font>

35
00:01:41,679 --> 00:01:46,210
that's synchronized<font color="#CCCCCC"> there's a core</font>

36
00:01:43,960 --> 00:01:49,089
framework which doesn't know anything

37
00:01:46,210 --> 00:01:52,568
<font color="#E5E5E5">about audio or video and just processes</font>

38
00:01:49,090 --> 00:01:55,659
time the data in in a pipeline manner

39
00:01:52,569 --> 00:01:57,759
and this<font color="#E5E5E5"> uses a bunch of different</font>

40
00:01:55,659 --> 00:01:59,590
<font color="#E5E5E5">plugins that implement different</font>

41
00:01:57,759 --> 00:02:02,020
<font color="#E5E5E5">functionalities different protocols that</font>

42
00:01:59,590 --> 00:02:05,740
<font color="#E5E5E5">are underneath</font><font color="#CCCCCC"> and it has a very simple</font>

43
00:02:02,020 --> 00:02:09,038
<font color="#CCCCCC">API with not that</font><font color="#E5E5E5"> many and</font><font color="#CCCCCC"> three points</font>

44
00:02:05,740 --> 00:02:11,740
that is used by<font color="#E5E5E5"> applications</font><font color="#CCCCCC"> on top some</font>

45
00:02:09,038 --> 00:02:14,290
of<font color="#E5E5E5"> them are built in GST</font><font color="#CCCCCC"> launch just</font>

46
00:02:11,740 --> 00:02:18,069
inspect<font color="#E5E5E5"> but most of them are obviously</font>

47
00:02:14,290 --> 00:02:19,900
<font color="#E5E5E5">the users applications the plugins there</font>

48
00:02:18,069 --> 00:02:20,239
are a<font color="#E5E5E5"> bunch of tour included but</font><font color="#CCCCCC"> they're</font>

49
00:02:19,900 --> 00:02:21,740
also

50
00:02:20,240 --> 00:02:23,390
<font color="#CCCCCC">third party ones</font><font color="#E5E5E5"> that either people</font>

51
00:02:21,740 --> 00:02:26,030
<font color="#E5E5E5">write their</font><font color="#CCCCCC"> own applications that</font><font color="#E5E5E5"> come</font>

52
00:02:23,390 --> 00:02:28,850
<font color="#CCCCCC">from the hardware vendor or that they</font>

53
00:02:26,030 --> 00:02:30,230
get from other places on the<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> so</font>

54
00:02:28,850 --> 00:02:34,220
<font color="#CCCCCC">gstreamer is about pipelines as I</font>

55
00:02:30,230 --> 00:02:36,859
mentioned<font color="#E5E5E5"> pipeline is a source which</font>

56
00:02:34,220 --> 00:02:37,940
produces data<font color="#E5E5E5"> it has a sink element</font>

57
00:02:36,860 --> 00:02:44,120
which consumes it

58
00:02:37,940 --> 00:02:47,510
it has filters that<font color="#CCCCCC"> take it on one</font><font color="#E5E5E5"> side</font>

59
00:02:44,120 --> 00:02:49,270
and push it out on the<font color="#E5E5E5"> other side the</font>

60
00:02:47,510 --> 00:02:52,130
<font color="#E5E5E5">elements are connected using pads</font>

61
00:02:49,270 --> 00:02:54,020
<font color="#E5E5E5">sourcing pads that first passed reduce</font>

62
00:02:52,130 --> 00:02:57,920
<font color="#E5E5E5">data and if it comes to biasing pads</font>

63
00:02:54,020 --> 00:03:02,740
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> bit inspired by electrical</font>

64
00:02:57,920 --> 00:03:05,410
systems or by other similar frameworks

65
00:03:02,740 --> 00:03:07,400
so<font color="#E5E5E5"> in applications</font>

66
00:03:05,410 --> 00:03:09,740
<font color="#CCCCCC">gstreamer as</font><font color="#E5E5E5"> I said there's not that</font>

67
00:03:07,400 --> 00:03:12,080
many entry points they<font color="#CCCCCC"> have basically</font>

68
00:03:09,740 --> 00:03:14,540
<font color="#E5E5E5">only four types of entry</font><font color="#CCCCCC"> points there is</font>

69
00:03:12,080 --> 00:03:19,850
<font color="#E5E5E5">methods</font><font color="#CCCCCC"> evans</font><font color="#E5E5E5"> inquiries which go from</font>

70
00:03:14,540 --> 00:03:22,850
<font color="#E5E5E5">the application to their framework</font><font color="#CCCCCC"> even</font>

71
00:03:19,850 --> 00:03:23,750
our<font color="#E5E5E5"> shoot</font><font color="#CCCCCC"> and then you will get</font><font color="#E5E5E5"> to reply</font>

72
00:03:22,850 --> 00:03:26,239
from somewhere<font color="#CCCCCC"> else</font>

73
00:03:23,750 --> 00:03:28,400
or maybe not<font color="#E5E5E5"> queries you get</font><font color="#CCCCCC"> the</font>

74
00:03:26,240 --> 00:03:31,340
<font color="#CCCCCC">blocking and</font><font color="#E5E5E5"> you wait for a reply from</font>

75
00:03:28,400 --> 00:03:33,710
them<font color="#E5E5E5"> and messages our messages come from</font>

76
00:03:31,340 --> 00:03:36,170
the<font color="#E5E5E5"> framework from the pipeline to</font><font color="#CCCCCC"> the</font>

77
00:03:33,710 --> 00:03:38,030
application they<font color="#CCCCCC"> can be spontaneous</font>

78
00:03:36,170 --> 00:03:40,820
<font color="#E5E5E5">because</font><font color="#CCCCCC"> they tell you about some event</font>

79
00:03:38,030 --> 00:03:43,670
<font color="#CCCCCC">that just</font><font color="#E5E5E5"> is unpredictable</font><font color="#CCCCCC"> or they can</font>

80
00:03:40,820 --> 00:03:45,680
happen<font color="#CCCCCC"> as</font><font color="#E5E5E5"> a reply</font><font color="#CCCCCC"> to an action</font><font color="#E5E5E5"> that</font>

81
00:03:43,670 --> 00:03:48,019
you've taken so for example there's a

82
00:03:45,680 --> 00:03:49,610
message<font color="#CCCCCC"> that says</font><font color="#E5E5E5"> async done that</font>

83
00:03:48,020 --> 00:03:58,190
happens once you've done<font color="#E5E5E5"> an asynchronous</font>

84
00:03:49,610 --> 00:04:01,190
<font color="#CCCCCC">days you change so do you</font><font color="#E5E5E5"> work it's</font>

85
00:03:58,190 --> 00:04:04,250
perfect for a method<font color="#E5E5E5"> it</font><font color="#CCCCCC"> has it's a</font>

86
00:04:01,190 --> 00:04:07,550
completely<font color="#E5E5E5"> zero copy we have a lot of</font>

87
00:04:04,250 --> 00:04:09,920
different<font color="#CCCCCC"> tools to allow</font><font color="#E5E5E5"> you to transfer</font>

88
00:04:07,550 --> 00:04:13,280
<font color="#E5E5E5">data between different bits without</font>

89
00:04:09,920 --> 00:04:17,000
copying anything<font color="#CCCCCC"> and so we have a</font>

90
00:04:13,280 --> 00:04:19,370
complete mechanism<font color="#CCCCCC"> for negotiations</font><font color="#E5E5E5"> not</font>

91
00:04:17,000 --> 00:04:21,140
<font color="#E5E5E5">only of the</font><font color="#CCCCCC"> format's but also of the</font>

92
00:04:19,370 --> 00:04:23,660
properties of<font color="#CCCCCC"> the memory</font><font color="#E5E5E5"> of the</font>

93
00:04:21,140 --> 00:04:25,310
alignment<font color="#CCCCCC"> maybe even of the type of</font>

94
00:04:23,660 --> 00:04:28,880
<font color="#E5E5E5">memory</font><font color="#CCCCCC"> if you have</font><font color="#E5E5E5"> more than one type of</font>

95
00:04:25,310 --> 00:04:31,490
memory<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your device there is a</font>

96
00:04:28,880 --> 00:04:33,020
reference counting<font color="#E5E5E5"> base system to handle</font>

97
00:04:31,490 --> 00:04:35,450
<font color="#E5E5E5">the buffer lifetime</font>

98
00:04:33,020 --> 00:04:37,310
we have buffer pooling to not reallocate

99
00:04:35,450 --> 00:04:39,130
buffers there's a<font color="#E5E5E5"> whole the whole system</font>

100
00:04:37,310 --> 00:04:41,980
to make<font color="#E5E5E5"> it relatively easy to work with</font>

101
00:04:39,130 --> 00:04:46,280
<font color="#CCCCCC">devices that have</font><font color="#E5E5E5"> Hardware countries</font><font color="#CCCCCC"> and</font>

102
00:04:41,980 --> 00:04:47,900
it includes synchronization so the

103
00:04:46,280 --> 00:04:50,390
framework<font color="#CCCCCC"> does a</font><font color="#E5E5E5"> synchronization</font><font color="#CCCCCC"> between</font>

104
00:04:47,900 --> 00:04:56,419
the different parts<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> you can have</font>

105
00:04:50,390 --> 00:04:58,940
the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> timing and we have a pretty</font>

106
00:04:56,420 --> 00:05:01,340
big load and load and loads of hardware

107
00:04:58,940 --> 00:05:03,500
<font color="#CCCCCC">enable plugins for almost any embedded</font>

108
00:05:01,340 --> 00:05:05,929
<font color="#E5E5E5">hardware in these days and this means</font>

109
00:05:03,500 --> 00:05:08,510
it's really<font color="#E5E5E5"> easy to build a system and</font>

110
00:05:05,930 --> 00:05:10,730
using GST launch the command<font color="#E5E5E5"> line tool</font>

111
00:05:08,510 --> 00:05:13,370
it's really easy to<font color="#E5E5E5"> do a prototype of</font>

112
00:05:10,730 --> 00:05:15,170
<font color="#CCCCCC">the pipeline's you want to process</font><font color="#E5E5E5"> and</font>

113
00:05:13,370 --> 00:05:17,210
even<font color="#CCCCCC"> something</font><font color="#E5E5E5"> a bit more</font><font color="#CCCCCC"> complicated is</font>

114
00:05:15,170 --> 00:05:19,220
very trivial to do in Python<font color="#CCCCCC"> for example</font>

115
00:05:17,210 --> 00:05:22,729
where we have<font color="#CCCCCC"> by things that are really</font>

116
00:05:19,220 --> 00:05:25,430
<font color="#CCCCCC">simple so I'm going</font><font color="#E5E5E5"> to give a quick</font>

117
00:05:22,730 --> 00:05:27,410
example<font color="#E5E5E5"> of one</font><font color="#CCCCCC"> project</font><font color="#E5E5E5"> where we wanted</font>

118
00:05:25,430 --> 00:05:30,880
<font color="#CCCCCC">to put GStreamer on the very simple</font>

119
00:05:27,410 --> 00:05:32,870
device this device<font color="#E5E5E5"> is a security</font><font color="#CCCCCC"> camera</font>

120
00:05:30,880 --> 00:05:35,390
<font color="#CCCCCC">it's pretty small</font>

121
00:05:32,870 --> 00:05:38,780
it has 16<font color="#E5E5E5"> Meg's a flash</font><font color="#CCCCCC"> hello it has one</font>

122
00:05:35,390 --> 00:05:41,210
gig<font color="#E5E5E5"> of ram and there's an</font><font color="#CCCCCC"> RTSP server</font>

123
00:05:38,780 --> 00:05:43,520
and it's an<font color="#CCCCCC"> armed</font><font color="#E5E5E5"> v7 so it's kind of</font><font color="#CCCCCC"> a</font>

124
00:05:41,210 --> 00:05:44,989
standard device<font color="#CCCCCC"> there's so much</font><font color="#E5E5E5"> RAM</font>

125
00:05:43,520 --> 00:05:50,479
<font color="#E5E5E5">because they</font><font color="#CCCCCC"> actually keep evering</font>

126
00:05:44,990 --> 00:05:53,480
buffer<font color="#E5E5E5"> out of video into</font><font color="#CCCCCC"> RAM so the</font>

127
00:05:50,480 --> 00:05:55,400
<font color="#E5E5E5">pipeline on this device is quite simple</font>

128
00:05:53,480 --> 00:05:57,800
the final<font color="#E5E5E5"> entry implements we want to</font>

129
00:05:55,400 --> 00:06:00,229
<font color="#CCCCCC">capture with from this RTSP server we</font>

130
00:05:57,800 --> 00:06:02,300
can<font color="#E5E5E5"> get a live</font><font color="#CCCCCC"> feed from the camera who</font>

131
00:06:00,230 --> 00:06:05,510
wants to capture<font color="#E5E5E5"> it in clips of two</font>

132
00:06:02,300 --> 00:06:07,460
seconds<font color="#E5E5E5"> to</font><font color="#CCCCCC"> upload them to Amazon s3</font><font color="#E5E5E5"> so</font>

133
00:06:05,510 --> 00:06:09,950
to<font color="#CCCCCC"> capture them all we do we have an</font>

134
00:06:07,460 --> 00:06:14,150
<font color="#CCCCCC">RDSP source</font><font color="#E5E5E5"> element which reads from the</font>

135
00:06:09,950 --> 00:06:16,550
<font color="#CCCCCC">RTSP server locally</font><font color="#E5E5E5"> we D payload h.264</font>

136
00:06:14,150 --> 00:06:19,070
we parse it<font color="#E5E5E5"> and then we decided to split</font>

137
00:06:16,550 --> 00:06:20,510
<font color="#CCCCCC">much sync which will wrap it into</font><font color="#E5E5E5"> mp4</font>

138
00:06:19,070 --> 00:06:24,080
files and then we have it before files

139
00:06:20,510 --> 00:06:26,240
we<font color="#CCCCCC"> can upload so it's</font><font color="#E5E5E5"> very simple so on</font>

140
00:06:24,080 --> 00:06:28,880
PC we did a very quick prototype a

141
00:06:26,240 --> 00:06:30,650
simple<font color="#CCCCCC"> Jessie launch line it took me 30</font>

142
00:06:28,880 --> 00:06:32,270
seconds<font color="#E5E5E5"> and I had something that's</font>

143
00:06:30,650 --> 00:06:36,710
worked<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't mean easy</font>

144
00:06:32,270 --> 00:06:40,520
project so I thought<font color="#CCCCCC"> then well maybe I</font>

145
00:06:36,710 --> 00:06:41,989
can do the same thing on my device<font color="#CCCCCC"> so to</font>

146
00:06:40,520 --> 00:06:44,180
do<font color="#CCCCCC"> it</font><font color="#E5E5E5"> it's the same thing on</font><font color="#CCCCCC"> one device</font>

147
00:06:41,990 --> 00:06:47,120
<font color="#E5E5E5">right with a very simple shell script</font>

148
00:06:44,180 --> 00:06:49,650
that<font color="#E5E5E5"> just did the previous command</font>

149
00:06:47,120 --> 00:06:52,350
from<font color="#E5E5E5"> that the whole</font><font color="#CCCCCC"> GStreamer</font><font color="#E5E5E5"> built</font><font color="#CCCCCC"> it's</font>

150
00:06:49,650 --> 00:06:55,710
280 set<font color="#E5E5E5"> instead of</font><font color="#CCCCCC"> megabyte so</font><font color="#E5E5E5"> that</font>

151
00:06:52,350 --> 00:07:01,280
<font color="#CCCCCC">won't fit if you two megabyte</font><font color="#E5E5E5"> so these</font>

152
00:06:55,710 --> 00:07:04,710
are dynamic libraries<font color="#E5E5E5"> and plugins so</font>

153
00:07:01,280 --> 00:07:06,059
that's like<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first version is just to</font>

154
00:07:04,710 --> 00:07:08,489
strip it right you just<font color="#CCCCCC"> stripped</font>

155
00:07:06,060 --> 00:07:11,940
libraries and then it brings<font color="#E5E5E5"> it down</font><font color="#CCCCCC"> to</font>

156
00:07:08,490 --> 00:07:15,570
17 megabytes which more acceptable but

157
00:07:11,940 --> 00:07:17,789
<font color="#E5E5E5">still doesn't hit next version is</font>

158
00:07:15,570 --> 00:07:20,070
replaced<font color="#CCCCCC"> Jessel owned by a small c</font>

159
00:07:17,789 --> 00:07:22,530
program which I have put here<font color="#E5E5E5"> but it's</font>

160
00:07:20,070 --> 00:07:24,150
basically just just launched in<font color="#CCCCCC"> the</font>

161
00:07:22,530 --> 00:07:27,929
little<font color="#E5E5E5"> seat there's almost nothing in</font>

162
00:07:24,150 --> 00:07:31,020
there and a little<font color="#E5E5E5"> make file to build</font>

163
00:07:27,930 --> 00:07:33,000
this so<font color="#CCCCCC"> something for the tool chain but</font>

164
00:07:31,020 --> 00:07:35,460
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is basically just</font><font color="#CCCCCC"> set in the right</font>

165
00:07:33,000 --> 00:07:37,740
<font color="#E5E5E5">tool chain and the package config tab</font>

166
00:07:35,460 --> 00:07:44,039
and linking it<font color="#E5E5E5"> with</font><font color="#CCCCCC"> Lib</font><font color="#E5E5E5"> - there's almost</font>

167
00:07:37,740 --> 00:07:47,370
almost nothing<font color="#E5E5E5"> there so a C program the</font>

168
00:07:44,039 --> 00:07:51,060
<font color="#E5E5E5">binary compiled 13k</font><font color="#CCCCCC"> shape it to 5k like</font>

169
00:07:47,370 --> 00:07:53,340
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> minuscule</font><font color="#E5E5E5"> it's amazing + 17</font>

170
00:07:51,060 --> 00:07:56,849
Mason libraries<font color="#CCCCCC"> corrected</font><font color="#E5E5E5"> still doesn't</font>

171
00:07:53,340 --> 00:07:58,948
fit<font color="#CCCCCC"> so yeah alright solution make a</font>

172
00:07:56,849 --> 00:08:00,060
static build so<font color="#E5E5E5"> we only build in the</font>

173
00:07:58,949 --> 00:08:01,440
<font color="#CCCCCC">parts of the libraries that</font><font color="#E5E5E5"> we're</font>

174
00:08:00,060 --> 00:08:05,550
actually using another part that<font color="#E5E5E5"> we're</font>

175
00:08:01,440 --> 00:08:08,099
not<font color="#CCCCCC"> using so using Lib tool use little</font>

176
00:08:05,550 --> 00:08:11,340
<font color="#CCCCCC">static little lips that's a kind of a</font>

177
00:08:08,099 --> 00:08:15,000
trick to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it compiled statically</font>

178
00:08:11,340 --> 00:08:19,799
<font color="#E5E5E5">only the parts that have la files and</font>

179
00:08:15,000 --> 00:08:22,949
not<font color="#E5E5E5"> the parts that don't so and then if</font>

180
00:08:19,800 --> 00:08:24,449
we did the<font color="#E5E5E5"> v</font><font color="#CCCCCC"> from the device as Ali</font>

181
00:08:22,949 --> 00:08:28,229
found<font color="#E5E5E5"> can just delete them or remove</font>

182
00:08:24,449 --> 00:08:29,849
<font color="#E5E5E5">them and my</font><font color="#CCCCCC"> server Oh which is a bit</font>

183
00:08:28,229 --> 00:08:33,630
like<font color="#CCCCCC"> octo but to build</font><font color="#E5E5E5"> an SDK for</font>

184
00:08:29,849 --> 00:08:36,150
<font color="#CCCCCC">GStreamer so this actually generates</font><font color="#E5E5E5"> le</font>

185
00:08:33,630 --> 00:08:37,588
<font color="#E5E5E5">files so using this I can Saticoy link</font>

186
00:08:36,150 --> 00:08:41,400
the bits from<font color="#E5E5E5"> this room but not the best</font>

187
00:08:37,589 --> 00:08:45,779
from the device<font color="#E5E5E5"> and then I get a binary</font>

188
00:08:41,400 --> 00:08:48,649
that's<font color="#CCCCCC"> 7.5 makes stripped 1.5 mix</font>

189
00:08:45,779 --> 00:08:52,980
<font color="#CCCCCC">alright that's so pretty</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> my work</font>

190
00:08:48,649 --> 00:08:56,370
then I<font color="#E5E5E5"> try it on</font><font color="#CCCCCC"> a device</font><font color="#E5E5E5"> I put it on</font>

191
00:08:52,980 --> 00:08:58,450
the flash I run it<font color="#E5E5E5"> then</font><font color="#CCCCCC"> it I get an</font>

192
00:08:56,370 --> 00:09:00,820
error<font color="#E5E5E5"> the plugins not there</font>

193
00:08:58,450 --> 00:09:03,070
so that's<font color="#E5E5E5"> nice I'm good we need to copy</font>

194
00:09:00,820 --> 00:09:05,200
the plugins<font color="#CCCCCC"> then I'm</font><font color="#E5E5E5"> missing all the</font>

195
00:09:03,070 --> 00:09:08,260
<font color="#CCCCCC">planes</font><font color="#E5E5E5"> so then I copy all the plugins</font>

196
00:09:05,200 --> 00:09:12,639
<font color="#CCCCCC">all of them</font><font color="#E5E5E5"> 17 makes and I'm gonna fit</font>

197
00:09:08,260 --> 00:09:14,350
<font color="#E5E5E5">so I use this command when I run it on</font>

198
00:09:12,639 --> 00:09:16,510
the PC<font color="#E5E5E5"> that tells</font><font color="#CCCCCC"> me exactly which</font>

199
00:09:14,350 --> 00:09:18,339
plugins<font color="#E5E5E5"> in load</font><font color="#CCCCCC"> it loaded so I know</font>

200
00:09:16,510 --> 00:09:23,319
which files<font color="#CCCCCC"> to copy I</font><font color="#E5E5E5"> can copy all of</font>

201
00:09:18,339 --> 00:09:30,750
these files so<font color="#CCCCCC"> that adds 1.7 megabytes</font>

202
00:09:23,320 --> 00:09:33,610
<font color="#E5E5E5">so</font><font color="#CCCCCC"> the nitrous on the device again Oh</font>

203
00:09:30,750 --> 00:09:36,190
whether the plugins not loud yeah

204
00:09:33,610 --> 00:09:37,690
because the<font color="#E5E5E5"> dependent libraries so the</font>

205
00:09:36,190 --> 00:09:39,690
plugins are not static<font color="#CCCCCC"> and doesn't work</font>

206
00:09:37,690 --> 00:09:47,790
<font color="#CCCCCC">I'm back to reading my 17 megabytes</font>

207
00:09:39,690 --> 00:09:50,889
<font color="#E5E5E5">stuff so not good enough so next we have</font>

208
00:09:47,790 --> 00:09:52,540
<font color="#E5E5E5">to statically link all the plugins</font><font color="#CCCCCC"> so</font>

209
00:09:50,889 --> 00:09:54,160
<font color="#E5E5E5">that we can</font><font color="#CCCCCC"> stack it</font><font color="#E5E5E5"> in library and have</font>

210
00:09:52,540 --> 00:09:56,380
a<font color="#E5E5E5"> Bill Nighy static</font><font color="#CCCCCC"> build with</font>

211
00:09:54,160 --> 00:09:59,290
everything<font color="#E5E5E5"> needed for missing any bits</font>

212
00:09:56,380 --> 00:10:03,130
so in<font color="#CCCCCC"> GStreamer to statically link</font>

213
00:09:59,290 --> 00:10:05,140
plugins<font color="#E5E5E5"> first we have to declare the</font>

214
00:10:03,130 --> 00:10:07,810
function<font color="#E5E5E5"> one function per</font><font color="#CCCCCC"> plug-in using</font>

215
00:10:05,140 --> 00:10:10,149
the<font color="#E5E5E5"> first macro in in the C file and</font>

216
00:10:07,810 --> 00:10:12,279
then<font color="#CCCCCC"> just after Jesse on it we</font><font color="#E5E5E5"> you call</font>

217
00:10:10,149 --> 00:10:14,290
<font color="#CCCCCC">this second macro which registers the</font>

218
00:10:12,279 --> 00:10:15,910
plugins so this is only done for<font color="#CCCCCC"> a</font>

219
00:10:14,290 --> 00:10:18,040
static<font color="#CCCCCC"> plugin because</font><font color="#E5E5E5"> for dynamic ones</font>

220
00:10:15,910 --> 00:10:21,189
<font color="#CCCCCC">G's tend</font><font color="#E5E5E5"> to actually</font><font color="#CCCCCC"> iterate the files</font>

221
00:10:18,040 --> 00:10:23,589
and register them for<font color="#E5E5E5"> you but since</font>

222
00:10:21,190 --> 00:10:26,970
<font color="#E5E5E5">they're not in separate files we have to</font>

223
00:10:23,589 --> 00:10:29,949
do it statically and then we link with

224
00:10:26,970 --> 00:10:32,620
<font color="#E5E5E5">man this big al towards the path where</font>

225
00:10:29,949 --> 00:10:35,050
<font color="#E5E5E5">the plugins are and we have been linking</font>

226
00:10:32,620 --> 00:10:36,760
each one<font color="#E5E5E5"> each library separately because</font>

227
00:10:35,050 --> 00:10:43,390
<font color="#E5E5E5">there's nothing to actually</font><font color="#CCCCCC"> guess that</font>

228
00:10:36,760 --> 00:10:47,410
<font color="#CCCCCC">one's keys so static build twenty eight</font>

229
00:10:43,390 --> 00:10:49,480
megabytes<font color="#CCCCCC"> stripped</font><font color="#E5E5E5"> down to five that</font>

230
00:10:47,410 --> 00:10:51,819
that<font color="#CCCCCC"> works on a device</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> actually</font>

231
00:10:49,480 --> 00:10:55,930
works but it's it's so big<font color="#E5E5E5"> it's five</font>

232
00:10:51,819 --> 00:10:59,229
megabytes we could do this so now we

233
00:10:55,930 --> 00:11:00,729
have the compiler for help<font color="#CCCCCC"> compiled</font><font color="#E5E5E5"> with</font>

234
00:10:59,230 --> 00:11:05,290
OS because<font color="#E5E5E5"> this is supposed to make</font>

235
00:11:00,730 --> 00:11:06,940
smaller binaries<font color="#E5E5E5"> and it doesn't do</font>

236
00:11:05,290 --> 00:11:11,329
anything like<font color="#E5E5E5"> they're proven what was</font>

237
00:11:06,940 --> 00:11:13,800
marginal and so well too bad

238
00:11:11,330 --> 00:11:15,720
next step is<font color="#E5E5E5"> to strip all the</font><font color="#CCCCCC"> function</font>

239
00:11:13,800 --> 00:11:18,000
<font color="#E5E5E5">are not</font><font color="#CCCCCC"> needed because in there we have</font>

240
00:11:15,720 --> 00:11:19,770
a lot<font color="#CCCCCC"> of crap that we're not using there</font>

241
00:11:18,000 --> 00:11:21,690
into the whole<font color="#CCCCCC"> Gillian for example</font>

242
00:11:19,770 --> 00:11:25,140
there's a<font color="#E5E5E5"> lot of functions that are</font>

243
00:11:21,690 --> 00:11:28,410
never<font color="#E5E5E5"> called</font><font color="#CCCCCC"> so we can build everything</font>

244
00:11:25,140 --> 00:11:30,960
<font color="#CCCCCC">the whole system is decay with F</font>

245
00:11:28,410 --> 00:11:34,350
function sections<font color="#E5E5E5"> F</font><font color="#CCCCCC"> theta</font><font color="#E5E5E5"> sections that</font>

246
00:11:30,960 --> 00:11:37,770
will make it create one object file one

247
00:11:34,350 --> 00:11:40,080
dot o file for each<font color="#E5E5E5"> function and each</font>

248
00:11:37,770 --> 00:11:42,810
data object which<font color="#E5E5E5"> means we can link</font>

249
00:11:40,080 --> 00:11:47,700
exactly the ones we need and none that

250
00:11:42,810 --> 00:11:49,349
are<font color="#E5E5E5"> not used and then we link and</font>

251
00:11:47,700 --> 00:11:51,600
linking we pass this<font color="#CCCCCC"> arguments the</font>

252
00:11:49,350 --> 00:11:53,640
linker and that will make it remove all

253
00:11:51,600 --> 00:11:58,650
of the objects that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> not actually</font>

254
00:11:53,640 --> 00:12:01,910
called anywhere so that<font color="#CCCCCC"> brings you now</font>

255
00:11:58,650 --> 00:12:04,560
to<font color="#E5E5E5"> four megabytes which is pretty good</font>

256
00:12:01,910 --> 00:12:09,930
next we're<font color="#CCCCCC"> going how</font><font color="#E5E5E5"> can I make it even</font>

257
00:12:04,560 --> 00:12:11,910
<font color="#E5E5E5">smaller so we we</font><font color="#CCCCCC"> recently</font><font color="#E5E5E5"> when I find</font>

258
00:12:09,930 --> 00:12:19,050
which double files<font color="#E5E5E5"> contribute to the</font>

259
00:12:11,910 --> 00:12:21,449
side that's<font color="#E5E5E5"> Inc so we want to what I had</font>

260
00:12:19,050 --> 00:12:25,229
<font color="#E5E5E5">done what I</font><font color="#CCCCCC"> rented to this project was</font>

261
00:12:21,450 --> 00:12:28,380
<font color="#CCCCCC">to take the the</font><font color="#E5E5E5"> output of the linker</font>

262
00:12:25,230 --> 00:12:30,690
<font color="#CCCCCC">read it with object them</font><font color="#E5E5E5"> using the debug</font>

263
00:12:28,380 --> 00:12:32,460
<font color="#CCCCCC">them all finds what's in there and then</font>

264
00:12:30,690 --> 00:12:34,440
find that the old files and<font color="#CCCCCC"> look at</font>

265
00:12:32,460 --> 00:12:37,440
their size<font color="#CCCCCC"> Rose a little python script</font>

266
00:12:34,440 --> 00:12:38,970
and then to know which which of<font color="#E5E5E5"> these</font>

267
00:12:37,440 --> 00:12:41,160
symbols you take space and where I can

268
00:12:38,970 --> 00:12:44,070
focus my optimization<font color="#E5E5E5"> may be removed</font>

269
00:12:41,160 --> 00:12:45,180
<font color="#E5E5E5">from steps from the</font><font color="#CCCCCC"> pipeline maybe some</font>

270
00:12:44,070 --> 00:12:46,260
do something clever

271
00:12:45,180 --> 00:12:49,650
maybe something do<font color="#CCCCCC"> something really</font>

272
00:12:46,260 --> 00:12:52,080
nasty<font color="#CCCCCC"> then I realize there's a tool</font>

273
00:12:49,650 --> 00:12:55,860
<font color="#E5E5E5">called</font><font color="#CCCCCC"> the bloat email off face from</font>

274
00:12:52,080 --> 00:12:58,500
some guys at Google<font color="#E5E5E5"> that is basically</font>

275
00:12:55,860 --> 00:13:01,590
the definition of bloat it's a couple

276
00:12:58,500 --> 00:13:03,690
thousands of lines<font color="#E5E5E5"> of C++ code</font><font color="#CCCCCC"> and when</font>

277
00:13:01,590 --> 00:13:06,360
you do<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it download like</font><font color="#E5E5E5"> three</font>

278
00:13:03,690 --> 00:13:08,310
<font color="#E5E5E5">hundred Meg's of stuff and protobuf and</font>

279
00:13:06,360 --> 00:13:11,550
everything<font color="#CCCCCC"> the line to download the</font>

280
00:13:08,310 --> 00:13:13,500
entire<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> intranet but once you've</font>

281
00:13:11,550 --> 00:13:15,120
downloaded this<font color="#E5E5E5"> 300 megabyte thing and</font>

282
00:13:13,500 --> 00:13:17,730
you<font color="#E5E5E5"> spend like half an hour compiling it</font>

283
00:13:15,120 --> 00:13:19,440
<font color="#CCCCCC">we have this tool</font><font color="#E5E5E5"> that in many cases</font>

284
00:13:17,730 --> 00:13:21,870
works and gives you exactly which

285
00:13:19,440 --> 00:13:23,830
symbols<font color="#E5E5E5"> take space in your binaries</font>

286
00:13:21,870 --> 00:13:28,350
<font color="#CCCCCC">right this it's quick</font><font color="#E5E5E5"> convenient</font>

287
00:13:23,830 --> 00:13:33,459
and doing<font color="#E5E5E5"> that I find out that</font><font color="#CCCCCC"> G Lib is</font>

288
00:13:28,350 --> 00:13:35,769
big and G<font color="#CCCCCC"> Lib</font><font color="#E5E5E5"> has a bunch of bits</font><font color="#CCCCCC"> that</font>

289
00:13:33,459 --> 00:13:37,329
don't<font color="#E5E5E5"> get removed when you do a static</font>

290
00:13:35,769 --> 00:13:42,060
compilation<font color="#E5E5E5"> ever</font><font color="#CCCCCC"> and/or you don't use</font>

291
00:13:37,330 --> 00:13:46,329
them to<font color="#CCCCCC"> things that</font><font color="#E5E5E5"> are really found out</font>

292
00:13:42,060 --> 00:13:48,339
<font color="#CCCCCC">first G Lib as internal plugins that</font><font color="#E5E5E5"> are</font>

293
00:13:46,329 --> 00:13:50,920
called Gao extension points that are

294
00:13:48,339 --> 00:13:53,890
always registered at this one<font color="#E5E5E5"> G lip</font>

295
00:13:50,920 --> 00:13:55,920
starts<font color="#CCCCCC"> and these</font><font color="#E5E5E5"> so it means</font><font color="#CCCCCC"> that they</font>

296
00:13:53,890 --> 00:13:58,300
actually<font color="#E5E5E5"> call the functions which have</font>

297
00:13:55,920 --> 00:14:00,519
<font color="#E5E5E5">references to be</font><font color="#CCCCCC"> seen every</font><font color="#E5E5E5"> function in</font>

298
00:13:58,300 --> 00:14:02,229
the<font color="#E5E5E5"> extension</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> which means that</font>

299
00:14:00,519 --> 00:14:05,019
they<font color="#E5E5E5"> even though you never call them</font>

300
00:14:02,230 --> 00:14:07,540
they get linked in so I didn't<font color="#E5E5E5"> talk</font>

301
00:14:05,019 --> 00:14:09,730
about<font color="#CCCCCC"> very nasty patch</font><font color="#E5E5E5"> to actually just</font>

302
00:14:07,540 --> 00:14:14,079
remove<font color="#E5E5E5"> that all of these do that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font>

303
00:14:09,730 --> 00:14:16,480
<font color="#E5E5E5">care i remove G settings GD</font><font color="#CCCCCC"> pass G I</font>

304
00:14:14,079 --> 00:14:17,620
have<font color="#CCCCCC"> been for applications notification</font>

305
00:14:16,480 --> 00:14:20,910
all these things I don't<font color="#CCCCCC"> care about</font>

306
00:14:17,620 --> 00:14:23,860
right this<font color="#E5E5E5"> is are not</font><font color="#CCCCCC"> used in this case</font>

307
00:14:20,910 --> 00:14:27,040
so that<font color="#CCCCCC"> strips it out to</font><font color="#E5E5E5"> three point</font>

308
00:14:23,860 --> 00:14:28,600
eight megabytes<font color="#CCCCCC"> the other area that I</font>

309
00:14:27,040 --> 00:14:31,000
would<font color="#E5E5E5"> really like to</font><font color="#CCCCCC"> remove is all of</font>

310
00:14:28,600 --> 00:14:33,100
the utf-8 stuff<font color="#E5E5E5"> for this kind of use</font>

311
00:14:31,000 --> 00:14:34,810
<font color="#CCCCCC">case</font><font color="#E5E5E5"> because there are giant tables that</font>

312
00:14:33,100 --> 00:14:40,660
<font color="#CCCCCC">take</font><font color="#E5E5E5"> like over a megabyte</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that don't</font>

313
00:14:34,810 --> 00:14:43,869
compress well and then that's<font color="#E5E5E5"> how I</font>

314
00:14:40,660 --> 00:14:46,209
could get to in the allocated<font color="#E5E5E5"> time so it</font>

315
00:14:43,870 --> 00:14:47,829
wasn't still fitting in there in the

316
00:14:46,209 --> 00:14:49,779
<font color="#E5E5E5">disk and remember this is a special</font>

317
00:14:47,829 --> 00:14:52,270
device because there's<font color="#E5E5E5"> not so much this</font>

318
00:14:49,779 --> 00:14:56,920
but there's a lot<font color="#CCCCCC"> of RAM so you just</font>

319
00:14:52,270 --> 00:14:59,529
compress the binary use upx very nice

320
00:14:56,920 --> 00:15:04,050
little<font color="#E5E5E5"> tool</font><font color="#CCCCCC"> open-source compress down to</font>

321
00:14:59,529 --> 00:15:07,720
<font color="#CCCCCC">two megabytes hmm it fits I'm happy and</font>

322
00:15:04,050 --> 00:15:11,439
this was<font color="#E5E5E5"> basically how we</font><font color="#CCCCCC"> got to simmer</font>

323
00:15:07,720 --> 00:15:12,940
from 300<font color="#E5E5E5"> minutes to two Meg's for our</font>

324
00:15:11,440 --> 00:15:14,350
use case and<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> shipping in</font>

325
00:15:12,940 --> 00:15:16,990
probably hundreds of thousands of

326
00:15:14,350 --> 00:15:23,320
security cameras<font color="#E5E5E5"> and that you buy from</font>

327
00:15:16,990 --> 00:15:24,490
some Tesco or<font color="#E5E5E5"> something what more steps</font>

328
00:15:23,320 --> 00:15:26,800
<font color="#E5E5E5">could make it even smaller so I</font>

329
00:15:24,490 --> 00:15:29,410
mentioned<font color="#E5E5E5"> the utf8 tables in G</font><font color="#CCCCCC"> Lib</font><font color="#E5E5E5"> I</font>

330
00:15:26,800 --> 00:15:31,300
would really<font color="#E5E5E5"> like to remove them somehow</font>

331
00:15:29,410 --> 00:15:33,939
<font color="#CCCCCC">at</font><font color="#E5E5E5"> least for this kind of use case and</font>

332
00:15:31,300 --> 00:15:35,560
then with the various<font color="#E5E5E5"> tools we can</font>

333
00:15:33,940 --> 00:15:36,460
actually probably dig down<font color="#CCCCCC"> I'm pretty</font>

334
00:15:35,560 --> 00:15:38,109
sure there's a

335
00:15:36,460 --> 00:15:40,780
<font color="#CCCCCC">couple</font><font color="#E5E5E5"> more that can be extracted out</font>

336
00:15:38,110 --> 00:15:43,050
that made smaller or removed the play a

337
00:15:40,780 --> 00:15:47,079
bunch<font color="#E5E5E5"> of things we're not really using</font>

338
00:15:43,050 --> 00:15:49,990
so this is basically other the key steps

339
00:15:47,080 --> 00:15:54,660
we<font color="#CCCCCC"> took</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> it smooth fit in our</font>

340
00:15:49,990 --> 00:16:00,490
tiny tiny project<font color="#CCCCCC"> so conclusion</font>

341
00:15:54,660 --> 00:16:01,870
<font color="#CCCCCC">GStreamer is not just for the</font><font color="#E5E5E5"> desktop we</font>

342
00:16:00,490 --> 00:16:04,300
know it's<font color="#E5E5E5"> using a bunch of being</font>

343
00:16:01,870 --> 00:16:07,720
embedded devices<font color="#CCCCCC"> she saw my earlier talk</font>

344
00:16:04,300 --> 00:16:11,439
today<font color="#CCCCCC"> I mentioned that</font><font color="#E5E5E5"> space</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> using</font>

345
00:16:07,720 --> 00:16:14,560
in airplanes<font color="#CCCCCC"> entertainment systems</font><font color="#E5E5E5"> it's</font>

346
00:16:11,440 --> 00:16:17,350
using cars it's using TVs in<font color="#CCCCCC"> Center</font>

347
00:16:14,560 --> 00:16:19,479
boxes<font color="#E5E5E5"> when embedded devices that do</font>

348
00:16:17,350 --> 00:16:23,020
<font color="#CCCCCC">video it's pretty likely to use</font>

349
00:16:19,480 --> 00:16:24,700
<font color="#CCCCCC">GStreamer these days</font><font color="#E5E5E5"> somehow but it's</font>

350
00:16:23,020 --> 00:16:26,890
not<font color="#CCCCCC"> only for</font><font color="#E5E5E5"> these how</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> call bigger</font>

351
00:16:24,700 --> 00:16:28,630
<font color="#CCCCCC">and</font><font color="#E5E5E5"> better devices</font><font color="#CCCCCC"> it's different usable</font>

352
00:16:26,890 --> 00:16:34,240
and<font color="#E5E5E5"> the kind of smaller</font><font color="#CCCCCC"> ones where you</font>

353
00:16:28,630 --> 00:16:42,270
don't have so much so much<font color="#E5E5E5"> space</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> so</font>

354
00:16:34,240 --> 00:16:42,270
<font color="#E5E5E5">basically that's any questions yes</font>

355
00:16:45,240 --> 00:16:54,300
because<font color="#E5E5E5"> these</font><font color="#CCCCCC"> devices cost</font><font color="#E5E5E5"> 30 euros at</font>

356
00:16:51,000 --> 00:16:54,300
at Cosco

357
00:16:54,900 --> 00:16:58,780
yes but the<font color="#E5E5E5"> the reason they have so much</font>

358
00:16:57,580 --> 00:17:01,540
RAM<font color="#CCCCCC"> is that they have a</font><font color="#E5E5E5"> feature that</font>

359
00:16:58,780 --> 00:17:08,889
<font color="#CCCCCC">requires it they store all</font><font color="#E5E5E5"> the video in</font>

360
00:17:01,540 --> 00:17:10,990
<font color="#E5E5E5">RAM so that you can survive so</font><font color="#CCCCCC"> that you</font>

361
00:17:08,890 --> 00:17:14,650
can get the video<font color="#E5E5E5"> from the from back</font><font color="#CCCCCC"> and</font>

362
00:17:10,990 --> 00:17:16,900
time so they don't<font color="#E5E5E5"> always record they</font>

363
00:17:14,650 --> 00:17:18,790
when they have like<font color="#E5E5E5"> some image analysis</font>

364
00:17:16,900 --> 00:17:22,950
in it<font color="#E5E5E5"> and when something</font><font color="#CCCCCC"> happens</font><font color="#E5E5E5"> they</font>

365
00:17:18,790 --> 00:17:25,990
will record the previous X minutes of

366
00:17:22,950 --> 00:17:30,220
video<font color="#E5E5E5"> because the image</font><font color="#CCCCCC"> lines this</font><font color="#E5E5E5"> is</font>

367
00:17:25,990 --> 00:17:32,170
<font color="#CCCCCC">not very</font><font color="#E5E5E5"> good so something happens they</font>

368
00:17:30,220 --> 00:17:33,910
say here's the video<font color="#E5E5E5"> from the last two</font>

369
00:17:32,170 --> 00:17:35,710
minutes<font color="#E5E5E5"> because</font><font color="#CCCCCC"> this is the burglar</font>

370
00:17:33,910 --> 00:17:37,000
entering and then he's walking around

371
00:17:35,710 --> 00:17:38,980
<font color="#CCCCCC">one around for two minutes and then we</font>

372
00:17:37,000 --> 00:17:41,310
<font color="#CCCCCC">realize that it was there was</font><font color="#E5E5E5"> something</font>

373
00:17:38,980 --> 00:17:41,310
in the house

374
00:17:42,370 --> 00:17:53,979
that's why it's surprisingly common and

375
00:17:45,159 --> 00:17:56,490
these<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> Chinese devices any other</font>

376
00:17:53,980 --> 00:17:56,490
question

377
00:18:04,470 --> 00:18:18,870
can you speak<font color="#E5E5E5"> louder</font><font color="#CCCCCC"> sorry no sadly so</font>

378
00:18:18,450 --> 00:18:21,000
sorry

379
00:18:18,870 --> 00:18:23,219
yes<font color="#E5E5E5"> the question is is there any single</font>

380
00:18:21,000 --> 00:18:26,310
fact you used to eliminate the the

381
00:18:23,220 --> 00:18:29,430
desktop dependencies<font color="#E5E5E5"> sadly there isn't</font>

382
00:18:26,310 --> 00:18:33,690
<font color="#E5E5E5">but that the horrible patch I made is</font>

383
00:18:29,430 --> 00:18:36,960
allowable there<font color="#E5E5E5"> and these slides will</font><font color="#CCCCCC"> be</font>

384
00:18:33,690 --> 00:18:46,100
on the<font color="#CCCCCC"> falls that</font><font color="#E5E5E5"> website as soon as I</font>

385
00:18:36,960 --> 00:18:46,100
get<font color="#CCCCCC"> enough</font><font color="#E5E5E5"> internet to upload them yes</font>

386
00:18:54,160 --> 00:18:59,510
so so the<font color="#CCCCCC"> question is would it make</font>

387
00:18:57,080 --> 00:19:03,669
sense<font color="#E5E5E5"> to just</font><font color="#CCCCCC"> have a fork of Julia that</font>

388
00:18:59,510 --> 00:19:06,140
would<font color="#CCCCCC"> volunteer things for gstreamer</font><font color="#E5E5E5"> I</font>

389
00:19:03,670 --> 00:19:08,840
don't want to forge a<font color="#CCCCCC"> lib I don't want</font>

390
00:19:06,140 --> 00:19:10,310
to forge a lip and the Dementors are

391
00:19:08,840 --> 00:19:12,199
quite reasonable so I'm sure if we<font color="#CCCCCC"> had</font>

392
00:19:10,310 --> 00:19:15,580
some<font color="#CCCCCC"> dashes</font><font color="#E5E5E5"> to do this you need they</font>

393
00:19:12,200 --> 00:19:17,780
would take them but also these aren't<font color="#E5E5E5"> I</font>

394
00:19:15,580 --> 00:19:20,090
removed functions that are<font color="#E5E5E5"> used by other</font>

395
00:19:17,780 --> 00:19:21,800
bits of<font color="#CCCCCC"> GStreamer so I really</font><font color="#E5E5E5"> focused</font>

396
00:19:20,090 --> 00:19:25,399
<font color="#E5E5E5">officials are only used by this very</font>

397
00:19:21,800 --> 00:19:29,840
specific pipeline for<font color="#E5E5E5"> this device this</font>

398
00:19:25,400 --> 00:19:30,950
<font color="#E5E5E5">is why for example</font><font color="#CCCCCC"> 1g application or</font>

399
00:19:29,840 --> 00:19:35,060
things like<font color="#CCCCCC"> that might be used somewhere</font>

400
00:19:30,950 --> 00:19:37,700
<font color="#E5E5E5">else</font><font color="#CCCCCC"> in GStreamer there might be mmm</font>

401
00:19:35,060 --> 00:19:42,889
stuff<font color="#E5E5E5"> that uses</font><font color="#CCCCCC"> deepest hair</font><font color="#E5E5E5"> there's a</font>

402
00:19:37,700 --> 00:19:44,900
bunch of plugins right<font color="#E5E5E5"> that do things</font><font color="#CCCCCC"> my</font>

403
00:19:42,890 --> 00:20:00,320
<font color="#E5E5E5">god and</font><font color="#CCCCCC"> something's</font><font color="#E5E5E5"> right at the bus</font>

404
00:19:44,900 --> 00:20:03,490
<font color="#CCCCCC">sink thank you</font><font color="#E5E5E5"> very much I guess</font>

405
00:20:00,320 --> 00:20:03,490
[Applause]

406
00:20:05,310 --> 00:20:10,980
oh yeah and I<font color="#E5E5E5"> forgot collaborize</font><font color="#CCCCCC"> firing</font>

407
00:20:08,340 --> 00:20:13,379
<font color="#E5E5E5">we have a bunch of jump Oh stings on the</font>

408
00:20:10,980 --> 00:20:16,110
carrier boards<font color="#E5E5E5"> on our website call that</font>

409
00:20:13,380 --> 00:20:20,270
allows<font color="#E5E5E5"> carriers and we're looking for</font>

410
00:20:16,110 --> 00:20:20,270
people<font color="#CCCCCC"> all kinds of</font><font color="#E5E5E5"> domains</font><font color="#CCCCCC"> thank you</font>

