1
00:00:05,070 --> 00:00:08,400
[Applause]

2
00:00:09,710 --> 00:00:14,780
hello<font color="#CCCCCC"> I'm JB Dee</font><font color="#E5E5E5"> I actually currently</font>

3
00:00:13,340 --> 00:00:17,050
now working on the instrumentation team

4
00:00:14,780 --> 00:00:20,480
at Google I used to work<font color="#E5E5E5"> on the go team</font>

5
00:00:17,050 --> 00:00:23,750
<font color="#CCCCCC">and recently I</font><font color="#E5E5E5"> was specifically focusing</font>

6
00:00:20,480 --> 00:00:25,699
on the<font color="#E5E5E5"> diagnostic tools and today I will</font>

7
00:00:23,750 --> 00:00:30,050
<font color="#E5E5E5">talk about distributed system</font>

8
00:00:25,699 --> 00:00:31,300
observability at Google so first how

9
00:00:30,050 --> 00:00:35,420
many<font color="#E5E5E5"> of you have heard about</font>

10
00:00:31,300 --> 00:00:38,960
<font color="#E5E5E5">observability</font><font color="#CCCCCC"> ok that's a lot</font><font color="#E5E5E5"> a lot of</font>

11
00:00:35,420 --> 00:00:40,880
<font color="#CCCCCC">pens so since there are</font><font color="#E5E5E5"> many conflicting</font>

12
00:00:38,960 --> 00:00:42,850
definitions of this term I just<font color="#CCCCCC"> want to</font>

13
00:00:40,880 --> 00:00:45,530
you know clarify my definition<font color="#E5E5E5"> first</font>

14
00:00:42,850 --> 00:00:47,120
<font color="#CCCCCC">what I call</font><font color="#E5E5E5"> observe volt or we call</font>

15
00:00:45,530 --> 00:00:50,989
observe robot is this holistic<font color="#CCCCCC"> approach</font>

16
00:00:47,120 --> 00:00:53,288
<font color="#CCCCCC">to be</font><font color="#E5E5E5"> able to observe systems for you</font>

17
00:00:50,989 --> 00:00:57,019
know reliability performance

18
00:00:53,289 --> 00:00:59,809
<font color="#CCCCCC">deployability</font><font color="#E5E5E5"> and other you know such</font>

19
00:00:57,020 --> 00:01:02,270
properties<font color="#CCCCCC"> we look at</font><font color="#E5E5E5"> multiple different</font>

20
00:00:59,809 --> 00:01:05,080
signals in<font color="#E5E5E5"> order to achieve</font><font color="#CCCCCC"> that metric</font>

21
00:01:02,270 --> 00:01:08,330
collection distributed tracing<font color="#E5E5E5"> profiling</font>

22
00:01:05,080 --> 00:01:09,860
<font color="#CCCCCC">login are a few of those so this</font><font color="#E5E5E5"> talk is</font>

23
00:01:08,330 --> 00:01:12,729
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to be more</font><font color="#E5E5E5"> about the</font><font color="#CCCCCC"> motivation</font>

24
00:01:09,860 --> 00:01:15,080
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the concepts we came up in the last</font>

25
00:01:12,729 --> 00:01:18,950
<font color="#CCCCCC">almost</font><font color="#E5E5E5"> 10</font><font color="#CCCCCC"> years to make Google</font>

26
00:01:15,080 --> 00:01:21,320
<font color="#E5E5E5">production systems more observable</font><font color="#CCCCCC"> and I</font>

27
00:01:18,950 --> 00:01:25,280
will<font color="#E5E5E5"> also briefly what we do for</font><font color="#CCCCCC"> Go</font>

28
00:01:21,320 --> 00:01:28,070
service<font color="#CCCCCC"> services so I said signals</font>

29
00:01:25,280 --> 00:01:31,670
I'm not going<font color="#E5E5E5"> to favor</font><font color="#CCCCCC"> one signal type</font>

30
00:01:28,070 --> 00:01:34,520
to another<font color="#E5E5E5"> but rather focus</font><font color="#CCCCCC"> on how we</font>

31
00:01:31,670 --> 00:01:37,250
<font color="#E5E5E5">collect things and why we collect</font><font color="#CCCCCC"> them</font>

32
00:01:34,520 --> 00:01:40,399
the way we<font color="#E5E5E5"> do this talk is going to</font>

33
00:01:37,250 --> 00:01:42,770
mention<font color="#E5E5E5"> a lot of metrics traces and</font>

34
00:01:40,400 --> 00:01:45,979
profiles but don't<font color="#E5E5E5"> assume that these</font><font color="#CCCCCC"> are</font>

35
00:01:42,770 --> 00:01:48,890
<font color="#E5E5E5">the only signal types we care about so</font>

36
00:01:45,979 --> 00:01:50,960
to give<font color="#CCCCCC"> you a</font><font color="#E5E5E5"> little bit history</font><font color="#CCCCCC"> Google</font>

37
00:01:48,890 --> 00:01:53,600
is dominantly<font color="#E5E5E5"> you know distributed</font>

38
00:01:50,960 --> 00:01:55,460
systems company<font color="#CCCCCC"> one of the most common</font>

39
00:01:53,600 --> 00:01:58,339
architectural patterns we use is<font color="#E5E5E5"> the</font>

40
00:01:55,460 --> 00:02:00,470
<font color="#E5E5E5">micro services architecture we</font><font color="#CCCCCC"> have</font>

41
00:01:58,340 --> 00:02:02,509
thousands of you<font color="#CCCCCC"> know different</font><font color="#E5E5E5"> micro</font>

42
00:02:00,470 --> 00:02:05,570
services built and maintained<font color="#CCCCCC"> by</font>

43
00:02:02,509 --> 00:02:07,430
<font color="#E5E5E5">hundreds of different teams and being</font>

44
00:02:05,570 --> 00:02:09,500
<font color="#E5E5E5">able to know observe our systems the</font>

45
00:02:07,430 --> 00:02:13,519
fundamental reason<font color="#CCCCCC"> why Google</font><font color="#E5E5E5"> is</font>

46
00:02:09,500 --> 00:02:15,470
reliable fast<font color="#CCCCCC"> and user friendly in order</font>

47
00:02:13,519 --> 00:02:18,550
to be able<font color="#E5E5E5"> to you know observe our</font>

48
00:02:15,470 --> 00:02:21,030
systems we obviously need<font color="#CCCCCC"> to care about</font>

49
00:02:18,550 --> 00:02:24,450
<font color="#E5E5E5">instrumental instrumental</font>

50
00:02:21,030 --> 00:02:27,120
systems we invented<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> collection</font>

51
00:02:24,450 --> 00:02:29,970
in<font color="#E5E5E5"> you know data export for collection</font>

52
00:02:27,120 --> 00:02:32,400
and export formats as well<font color="#CCCCCC"> as some you</font>

53
00:02:29,970 --> 00:02:35,400
know philosophies<font color="#CCCCCC"> you know in this area</font>

54
00:02:32,400 --> 00:02:36,959
<font color="#E5E5E5">to achieve that in our scale our</font>

55
00:02:35,400 --> 00:02:39,330
instrumentation<font color="#CCCCCC"> state cares about</font>

56
00:02:36,959 --> 00:02:41,580
efficiency<font color="#E5E5E5"> and the overhead of</font><font color="#CCCCCC"> the</font>

57
00:02:39,330 --> 00:02:44,280
collection so<font color="#E5E5E5"> observability</font><font color="#CCCCCC"> is a core</font>

58
00:02:41,580 --> 00:02:47,340
part of our<font color="#E5E5E5"> engineering culture and we</font>

59
00:02:44,280 --> 00:02:51,330
enable it by making<font color="#E5E5E5"> it easy and also low</font>

60
00:02:47,340 --> 00:02:53,190
overhead before digging<font color="#E5E5E5"> more into the</font>

61
00:02:51,330 --> 00:02:55,800
observe<font color="#E5E5E5"> distributed systems of the</font>

62
00:02:53,190 --> 00:02:57,900
royalty<font color="#CCCCCC"> I will explain you why</font><font color="#E5E5E5"> it's a</font>

63
00:02:55,800 --> 00:03:01,489
little<font color="#E5E5E5"> bit more complicated to observe a</font>

64
00:02:57,900 --> 00:03:03,720
distributed<font color="#CCCCCC"> system this is a typical</font><font color="#E5E5E5"> arc</font>

65
00:03:01,489 --> 00:03:05,400
<font color="#E5E5E5">architectural diagram for pretty much</font>

66
00:03:03,720 --> 00:03:08,430
every product<font color="#E5E5E5"> at Google</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we usually</font>

67
00:03:05,400 --> 00:03:11,370
<font color="#E5E5E5">have this user facing business logic</font>

68
00:03:08,430 --> 00:03:13,860
every<font color="#E5E5E5"> front-end server</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> depends on</font>

69
00:03:11,370 --> 00:03:15,420
various other<font color="#E5E5E5"> services in this case you</font>

70
00:03:13,860 --> 00:03:18,630
<font color="#CCCCCC">see that</font><font color="#E5E5E5"> like auth billing and reporting</font>

71
00:03:15,420 --> 00:03:24,029
are those immediate services<font color="#E5E5E5"> the</font>

72
00:03:18,630 --> 00:03:25,799
<font color="#E5E5E5">front-end services depending on and it</font>

73
00:03:24,030 --> 00:03:29,239
you know<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this example all this like</font>

74
00:03:25,799 --> 00:03:31,739
relatively<font color="#CCCCCC"> low-level</font><font color="#E5E5E5"> services depend on</font>

75
00:03:29,239 --> 00:03:32,400
spanner<font color="#E5E5E5"> and eventually hitting the</font>

76
00:03:31,739 --> 00:03:35,850
<font color="#E5E5E5">blobstore</font>

77
00:03:32,400 --> 00:03:38,610
for persistency<font color="#E5E5E5"> in any</font><font color="#CCCCCC"> Microsystems</font>

78
00:03:35,850 --> 00:03:40,049
<font color="#CCCCCC">architecture it is expected</font><font color="#E5E5E5"> some of the</font>

79
00:03:38,610 --> 00:03:42,390
services are becoming<font color="#E5E5E5"> a common</font>

80
00:03:40,049 --> 00:03:44,970
<font color="#E5E5E5">dependency like the blob storage or</font>

81
00:03:42,390 --> 00:03:47,548
spanner<font color="#E5E5E5"> when the rest of the company is</font>

82
00:03:44,970 --> 00:03:49,230
<font color="#CCCCCC">dependent on blob storage it</font><font color="#E5E5E5"> is harder</font>

83
00:03:47,549 --> 00:03:52,470
for<font color="#CCCCCC"> the steam to gather meaningful in</font>

84
00:03:49,230 --> 00:03:54,298
<font color="#E5E5E5">our metrics and profiles and so on</font><font color="#CCCCCC"> it's</font>

85
00:03:52,470 --> 00:03:56,670
hard<font color="#CCCCCC"> for them to</font><font color="#E5E5E5"> tell the root cause of</font>

86
00:03:54,299 --> 00:04:00,780
the problems<font color="#E5E5E5"> that is triggered part by</font>

87
00:03:56,670 --> 00:04:02,790
their users<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> know blob storage</font>

88
00:04:00,780 --> 00:04:05,160
<font color="#E5E5E5">team will see some fluctuations in their</font>

89
00:04:02,790 --> 00:04:07,230
dashboards but may<font color="#E5E5E5"> have a hard time</font>

90
00:04:05,160 --> 00:04:08,730
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> breaking</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> the data and</font>

91
00:04:07,230 --> 00:04:13,619
figuring out<font color="#E5E5E5"> where the problem is</font>

92
00:04:08,730 --> 00:04:16,649
originated<font color="#E5E5E5"> that it's also you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> were</font>

93
00:04:13,620 --> 00:04:19,108
to mention<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> only when the things</font>

94
00:04:16,649 --> 00:04:21,450
are obviously<font color="#E5E5E5"> going wrong</font><font color="#CCCCCC"> infrastructure</font>

95
00:04:19,108 --> 00:04:23,490
teams often<font color="#E5E5E5"> want answers to be able</font><font color="#CCCCCC"> to</font>

96
00:04:21,450 --> 00:04:27,000
<font color="#E5E5E5">just say that you know things are going</font>

97
00:04:23,490 --> 00:04:29,159
<font color="#E5E5E5">right some of the example questions they</font>

98
00:04:27,000 --> 00:04:31,950
want<font color="#CCCCCC"> to ask about</font><font color="#E5E5E5"> their systems are you</font>

99
00:04:29,159 --> 00:04:33,900
know hey are we meeting the<font color="#E5E5E5"> SLO for the</font>

100
00:04:31,950 --> 00:04:36,000
<font color="#CCCCCC">spanner team as the blob storage</font>

101
00:04:33,900 --> 00:04:38,669
<font color="#CCCCCC">I will providing them you know a good</font>

102
00:04:36,000 --> 00:04:40,680
enough service<font color="#CCCCCC"> the service we</font><font color="#E5E5E5"> promise</font><font color="#CCCCCC"> to</font>

103
00:04:38,669 --> 00:04:42,419
serve<font color="#E5E5E5"> or you</font><font color="#CCCCCC"> know what is the</font><font color="#E5E5E5"> impact of</font>

104
00:04:40,680 --> 00:04:44,910
this<font color="#E5E5E5"> high-level</font><font color="#CCCCCC"> service on the blob</font>

105
00:04:42,419 --> 00:04:48,299
storage service or what happens<font color="#E5E5E5"> if this</font>

106
00:04:44,910 --> 00:04:50,130
product grows you know<font color="#CCCCCC"> 10% overnight</font><font color="#E5E5E5"> is</font>

107
00:04:48,300 --> 00:04:52,970
the blob storage deployment going to be

108
00:04:50,130 --> 00:04:58,560
able<font color="#E5E5E5"> to scale and you know what I</font><font color="#CCCCCC"> do</font>

109
00:04:52,970 --> 00:05:01,590
<font color="#CCCCCC">what</font><font color="#E5E5E5"> are the next</font><font color="#CCCCCC"> steps for us this</font><font color="#E5E5E5"> is</font>

110
00:04:58,560 --> 00:05:04,590
the the this is why we want<font color="#E5E5E5"> to be able</font>

111
00:05:01,590 --> 00:05:05,388
<font color="#CCCCCC">to break</font><font color="#E5E5E5"> down</font><font color="#CCCCCC"> our signals in various</font>

112
00:05:04,590 --> 00:05:08,179
different<font color="#E5E5E5"> ways</font>

113
00:05:05,389 --> 00:05:11,669
we call these various different<font color="#CCCCCC"> ways</font>

114
00:05:08,180 --> 00:05:15,330
<font color="#CCCCCC">dimensions and with dimensions you can</font>

115
00:05:11,669 --> 00:05:17,849
query the<font color="#E5E5E5"> collected</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> in you know</font>

116
00:05:15,330 --> 00:05:20,280
<font color="#E5E5E5">ways that will help you to answer some</font>

117
00:05:17,850 --> 00:05:22,680
of these questions<font color="#CCCCCC"> you can query for</font>

118
00:05:20,280 --> 00:05:24,109
<font color="#CCCCCC">example you know</font><font color="#E5E5E5"> you can say give</font><font color="#CCCCCC"> me the</font>

119
00:05:22,680 --> 00:05:27,360
blob storage request latency

120
00:05:24,110 --> 00:05:30,479
distribution for our<font color="#E5E5E5"> pcs originated at</font>

121
00:05:27,360 --> 00:05:33,030
Google<font color="#E5E5E5"> Analytics front-end server or you</font>

122
00:05:30,479 --> 00:05:35,699
can say give<font color="#CCCCCC"> me</font><font color="#E5E5E5"> all these traces and</font>

123
00:05:33,030 --> 00:05:38,698
reports that<font color="#E5E5E5"> contains the specific RPC</font>

124
00:05:35,699 --> 00:05:43,710
or give it a CPU profile for<font color="#E5E5E5"> this</font>

125
00:05:38,699 --> 00:05:47,000
specific library<font color="#CCCCCC"> but only for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> RPC is</font>

126
00:05:43,710 --> 00:05:49,500
<font color="#E5E5E5">you know the cost we have seen observed</font>

127
00:05:47,000 --> 00:05:53,039
<font color="#E5E5E5">for our pieces started at Google</font>

128
00:05:49,500 --> 00:05:55,800
<font color="#CCCCCC">Analytics so it's it's great</font><font color="#E5E5E5"> that you</font>

129
00:05:53,039 --> 00:05:58,349
know<font color="#E5E5E5"> that we now can query this data but</font>

130
00:05:55,800 --> 00:06:00,930
how<font color="#CCCCCC"> do</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually you know</font><font color="#E5E5E5"> collect the</font>

131
00:05:58,349 --> 00:06:02,960
signals in<font color="#E5E5E5"> order to be able</font><font color="#CCCCCC"> to query the</font>

132
00:06:00,930 --> 00:06:06,659
data this way and you know break down

133
00:06:02,960 --> 00:06:10,710
the Diagnostics data<font color="#E5E5E5"> by multiple</font>

134
00:06:06,659 --> 00:06:13,469
dimensions<font color="#CCCCCC"> the answer is</font><font color="#E5E5E5"> we record the</font>

135
00:06:10,710 --> 00:06:15,570
<font color="#E5E5E5">data with various key value pairs</font><font color="#CCCCCC"> we</font>

136
00:06:13,470 --> 00:06:19,110
call these key value pairs tags<font color="#CCCCCC"> at</font>

137
00:06:15,570 --> 00:06:21,210
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> and then the</font><font color="#E5E5E5"> back end for</font><font color="#CCCCCC"> example</font>

138
00:06:19,110 --> 00:06:24,949
if it's a monitoring<font color="#CCCCCC"> backend such as</font>

139
00:06:21,210 --> 00:06:28,650
<font color="#E5E5E5">Prometheus can filter the</font><font color="#CCCCCC"> data by tags</font>

140
00:06:24,949 --> 00:06:31,320
so the entire premise of<font color="#CCCCCC"> micro-services</font>

141
00:06:28,650 --> 00:06:34,289
<font color="#E5E5E5">is you know there should</font><font color="#CCCCCC"> be no tight</font>

142
00:06:31,320 --> 00:06:36,180
coupling between different services<font color="#CCCCCC"> but</font>

143
00:06:34,289 --> 00:06:38,900
then you know how can a low-level

144
00:06:36,180 --> 00:06:42,900
service such<font color="#CCCCCC"> as the blob storage service</font>

145
00:06:38,900 --> 00:06:46,229
can tag correctly<font color="#CCCCCC"> you know if they don't</font>

146
00:06:42,900 --> 00:06:47,710
know<font color="#E5E5E5"> anything about about its dependence</font>

147
00:06:46,229 --> 00:06:50,590
and<font color="#CCCCCC"> their you know</font><font color="#E5E5E5"> business</font>

148
00:06:47,710 --> 00:06:53,919
cases<font color="#CCCCCC"> this is where we</font><font color="#E5E5E5"> get some</font><font color="#CCCCCC"> help</font>

149
00:06:50,590 --> 00:06:57,010
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the world of context propagation so</font>

150
00:06:53,920 --> 00:06:58,750
the tags are produced<font color="#CCCCCC"> at high level</font>

151
00:06:57,010 --> 00:07:02,620
services such<font color="#CCCCCC"> as</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Nell Tech's front</font>

152
00:06:58,750 --> 00:07:04,360
<font color="#CCCCCC">end server</font><font color="#E5E5E5"> and then</font><font color="#CCCCCC"> passed all</font><font color="#E5E5E5"> along</font><font color="#CCCCCC"> to</font>

153
00:07:02,620 --> 00:07:08,200
the low level services<font color="#CCCCCC"> as a part of the</font>

154
00:07:04,360 --> 00:07:10,630
RPC<font color="#E5E5E5"> you can see the from all the way by</font>

155
00:07:08,200 --> 00:07:12,760
them all the way up<font color="#E5E5E5"> to the bottom you</font>

156
00:07:10,630 --> 00:07:14,500
<font color="#CCCCCC">can see</font><font color="#E5E5E5"> the our pieces are</font><font color="#CCCCCC"> tagged</font><font color="#E5E5E5"> so</font>

157
00:07:12,760 --> 00:07:18,550
blob storage actual doesn't know

158
00:07:14,500 --> 00:07:22,150
anything<font color="#E5E5E5"> but it records with the</font>

159
00:07:18,550 --> 00:07:26,140
incoming tags<font color="#CCCCCC"> so</font><font color="#E5E5E5"> the data we collect a</font>

160
00:07:22,150 --> 00:07:27,880
blob store has all these dimensions<font color="#E5E5E5"> so</font>

161
00:07:26,140 --> 00:07:30,190
we<font color="#CCCCCC"> have a culture of</font><font color="#E5E5E5"> producing tags at</font>

162
00:07:27,880 --> 00:07:31,960
the<font color="#CCCCCC"> high level services depending</font><font color="#E5E5E5"> on you</font>

163
00:07:30,190 --> 00:07:35,680
know specific requirements<font color="#E5E5E5"> of the teams</font>

164
00:07:31,960 --> 00:07:39,580
<font color="#E5E5E5">and we propagate these tags</font><font color="#CCCCCC"> all across</font>

165
00:07:35,680 --> 00:07:41,650
with<font color="#E5E5E5"> our pcs then each component in the</font>

166
00:07:39,580 --> 00:07:46,539
system<font color="#E5E5E5"> can record you know metrics</font>

167
00:07:41,650 --> 00:07:48,760
profiles etc with<font color="#CCCCCC"> the incoming tags as I</font>

168
00:07:46,540 --> 00:07:50,290
mentioned in the beginning<font color="#E5E5E5"> we have a you</font>

169
00:07:48,760 --> 00:07:53,020
know<font color="#E5E5E5"> holistic approach because each</font>

170
00:07:50,290 --> 00:07:53,920
signal type is useful to answer a

171
00:07:53,020 --> 00:07:56,680
different<font color="#CCCCCC"> question</font>

172
00:07:53,920 --> 00:07:58,810
for<font color="#E5E5E5"> example distributed traces are not</font>

173
00:07:56,680 --> 00:08:01,120
able to tell you about CPU<font color="#E5E5E5"> hotspots or</font>

174
00:07:58,810 --> 00:08:03,760
CPU samples cannot tell us about the

175
00:08:01,120 --> 00:08:06,040
end-to-end latency problems<font color="#CCCCCC"> so we</font>

176
00:08:03,760 --> 00:08:07,599
collect you<font color="#E5E5E5"> know various signals examine</font>

177
00:08:06,040 --> 00:08:08,920
the problem<font color="#CCCCCC"> from you know various</font>

178
00:08:07,600 --> 00:08:13,480
different with various<font color="#E5E5E5"> different</font>

179
00:08:08,920 --> 00:08:15,310
perspectives<font color="#CCCCCC"> it is we you know each we</font>

180
00:08:13,480 --> 00:08:17,200
short<font color="#E5E5E5"> they realize that it's</font><font color="#CCCCCC"> very hard</font>

181
00:08:15,310 --> 00:08:19,900
<font color="#CCCCCC">for our</font><font color="#E5E5E5"> developers</font><font color="#CCCCCC"> to think about all</font>

182
00:08:17,200 --> 00:08:21,640
these<font color="#E5E5E5"> dimensions signal types and build</font>

183
00:08:19,900 --> 00:08:23,409
<font color="#E5E5E5">highly efficient instrumentation</font>

184
00:08:21,640 --> 00:08:27,669
libraries and instrument<font color="#E5E5E5"> each layer they</font>

185
00:08:23,410 --> 00:08:29,350
depend on that's why we<font color="#CCCCCC"> built a common</font>

186
00:08:27,670 --> 00:08:32,080
framework<font color="#E5E5E5"> and decided</font><font color="#CCCCCC"> to you know</font>

187
00:08:29,350 --> 00:08:34,390
<font color="#CCCCCC">open-source it lately and make</font><font color="#E5E5E5"> it vendor</font>

188
00:08:32,080 --> 00:08:37,930
agnostic<font color="#CCCCCC"> so that everybody</font><font color="#E5E5E5"> can use it</font>

189
00:08:34,390 --> 00:08:41,500
<font color="#E5E5E5">against any provider recently we</font>

190
00:08:37,929 --> 00:08:44,339
announced that<font color="#E5E5E5"> we are our project open</font>

191
00:08:41,500 --> 00:08:47,250
<font color="#CCCCCC">census this is a new holistic</font>

192
00:08:44,340 --> 00:08:50,710
instrumentation framework<font color="#E5E5E5"> is inspired by</font>

193
00:08:47,250 --> 00:08:53,770
Google's internal census project<font color="#E5E5E5"> the</font>

194
00:08:50,710 --> 00:08:56,620
main reason we are open source in this

195
00:08:53,770 --> 00:08:58,360
is we want<font color="#E5E5E5"> to feel</font><font color="#CCCCCC"> that missing building</font>

196
00:08:56,620 --> 00:09:00,430
block in the open source world<font color="#E5E5E5"> we want</font>

197
00:08:58,360 --> 00:09:01,720
<font color="#E5E5E5">you know libraries frameworks and all</font>

198
00:09:00,430 --> 00:09:03,128
sorts of

199
00:09:01,720 --> 00:09:05,050
your<font color="#E5E5E5"> project so we able</font><font color="#CCCCCC"> to instrument</font>

200
00:09:03,129 --> 00:09:06,699
without having to depend<font color="#CCCCCC"> on a</font><font color="#E5E5E5"> vendor and</font>

201
00:09:05,050 --> 00:09:10,420
without you know<font color="#E5E5E5"> having</font><font color="#CCCCCC"> to reinvent</font>

202
00:09:06,699 --> 00:09:12,609
<font color="#E5E5E5">these concepts</font><font color="#CCCCCC"> so we also want to help</font>

203
00:09:10,420 --> 00:09:14,410
other<font color="#CCCCCC"> organizations to</font><font color="#E5E5E5"> adopt these</font>

204
00:09:12,610 --> 00:09:16,540
solutions<font color="#E5E5E5"> because they we already have</font>

205
00:09:14,410 --> 00:09:20,379
built them or you know<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use open</font>

206
00:09:16,540 --> 00:09:22,509
<font color="#CCCCCC">census as a reference implementation so</font>

207
00:09:20,379 --> 00:09:25,209
open census<font color="#CCCCCC"> provides a single set of</font>

208
00:09:22,509 --> 00:09:28,060
<font color="#E5E5E5">libraries currently we have a tag</font>

209
00:09:25,209 --> 00:09:30,790
library metrics and<font color="#E5E5E5"> traces and we will</font>

210
00:09:28,060 --> 00:09:33,550
have more in the future<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> a</font>

211
00:09:30,790 --> 00:09:35,769
language<font color="#E5E5E5"> support for go Java C++ right</font>

212
00:09:33,550 --> 00:09:39,008
now there are more languages I come in

213
00:09:35,769 --> 00:09:41,829
Python PHP<font color="#CCCCCC"> JavaScript C sharp and Erlang</font>

214
00:09:39,009 --> 00:09:43,930
<font color="#E5E5E5">are the next our libraries</font><font color="#CCCCCC"> are vendor</font>

215
00:09:41,829 --> 00:09:46,660
agnostic<font color="#E5E5E5"> and can upload data to any</font>

216
00:09:43,930 --> 00:09:50,920
<font color="#E5E5E5">back-end we have support</font><font color="#CCCCCC"> for primitive</font>

217
00:09:46,660 --> 00:09:52,779
Zipkin<font color="#CCCCCC"> Jaeger</font><font color="#E5E5E5"> and some APM vendors and</font>

218
00:09:50,920 --> 00:09:55,000
some of the<font color="#E5E5E5"> APM vendors actually want to</font>

219
00:09:52,779 --> 00:09:57,879
you know utilize these libraries rather

220
00:09:55,000 --> 00:10:00,040
<font color="#E5E5E5">than inventing their own libraries we</font>

221
00:09:57,879 --> 00:10:02,470
provide out-of-the-box instrumentation

222
00:10:00,040 --> 00:10:08,259
<font color="#E5E5E5">for some you know frameworks such as G</font>

223
00:10:02,470 --> 00:10:12,100
<font color="#E5E5E5">RPC or you know common HTTP library is</font>

224
00:10:08,259 --> 00:10:13,839
like net HTTP package for example<font color="#CCCCCC"> also</font>

225
00:10:12,100 --> 00:10:16,059
you know<font color="#CCCCCC"> like our libraries provides</font>

226
00:10:13,839 --> 00:10:18,850
some introspection<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Kenda</font><font color="#E5E5E5"> can render</font>

227
00:10:16,059 --> 00:10:21,160
a tiny dashboard to report<font color="#CCCCCC"> the usage</font>

228
00:10:18,850 --> 00:10:23,170
from a single process<font color="#E5E5E5"> without</font><font color="#CCCCCC"> having to</font>

229
00:10:21,160 --> 00:10:25,089
<font color="#E5E5E5">really rely on an actual you know</font>

230
00:10:23,170 --> 00:10:27,969
external service you can see what is

231
00:10:25,089 --> 00:10:29,860
<font color="#CCCCCC">going on in a</font><font color="#E5E5E5"> single process</font><font color="#CCCCCC"> it is</font>

232
00:10:27,970 --> 00:10:31,240
extremely useful<font color="#CCCCCC"> if you know that</font><font color="#E5E5E5"> you</font>

233
00:10:29,860 --> 00:10:33,759
know the<font color="#E5E5E5"> problem is</font><font color="#CCCCCC"> coming</font><font color="#E5E5E5"> from one</font>

234
00:10:31,240 --> 00:10:36,939
specific<font color="#CCCCCC"> process or you know you can use</font>

235
00:10:33,759 --> 00:10:39,579
it<font color="#CCCCCC"> during development</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> so speaking</font>

236
00:10:36,939 --> 00:10:43,019
of framework integrations<font color="#CCCCCC"> I'm going to</font>

237
00:10:39,579 --> 00:10:47,199
like give a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit of snippets from</font>

238
00:10:43,019 --> 00:10:49,779
our<font color="#E5E5E5"> G RPC integration</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> Google barrels</font>

239
00:10:47,199 --> 00:10:52,059
are responsible for<font color="#CCCCCC"> our internal gr</font>

240
00:10:49,779 --> 00:10:55,240
pieces stubby observability so these

241
00:10:52,059 --> 00:10:59,350
integrations will be used internally<font color="#E5E5E5"> all</font>

242
00:10:55,240 --> 00:11:02,559
across at<font color="#CCCCCC"> Google to you need to import</font>

243
00:10:59,350 --> 00:11:05,439
our<font color="#E5E5E5"> plugin and pass it as a</font><font color="#CCCCCC"> sender</font><font color="#E5E5E5"> to</font>

244
00:11:02,559 --> 00:11:06,969
the<font color="#E5E5E5"> ER PC client and servers in this</font>

245
00:11:05,439 --> 00:11:09,040
case we<font color="#E5E5E5"> are</font><font color="#CCCCCC"> looking at a server but it's</font>

246
00:11:06,970 --> 00:11:11,769
pretty<font color="#E5E5E5"> much similar for the clients and</font>

247
00:11:09,040 --> 00:11:13,160
then in the handler<font color="#E5E5E5"> you can extend the</font>

248
00:11:11,769 --> 00:11:15,080
<font color="#E5E5E5">incoming tags</font>

249
00:11:13,160 --> 00:11:17,600
from the incoming context<font color="#E5E5E5"> in this case</font>

250
00:11:15,080 --> 00:11:19,910
I'm<font color="#E5E5E5"> just you know in certain hello is an</font>

251
00:11:17,600 --> 00:11:22,340
originator service and insert in the

252
00:11:19,910 --> 00:11:25,520
user IDs so<font color="#CCCCCC"> it will be possible to</font><font color="#E5E5E5"> break</font>

253
00:11:22,340 --> 00:11:28,250
down all you know<font color="#E5E5E5"> collected data it even</font>

254
00:11:25,520 --> 00:11:31,550
at the<font color="#E5E5E5"> very low level services by</font>

255
00:11:28,250 --> 00:11:34,250
originator and user ID so<font color="#E5E5E5"> this is how</font>

256
00:11:31,550 --> 00:11:36,709
you record values<font color="#CCCCCC"> I have a measure here</font>

257
00:11:34,250 --> 00:11:39,740
<font color="#E5E5E5">total hello that represents a number of</font>

258
00:11:36,710 --> 00:11:43,040
times we said hello<font color="#CCCCCC"> stats record will</font>

259
00:11:39,740 --> 00:11:45,290
say one with the tags in the current

260
00:11:43,040 --> 00:11:48,110
incoming context so<font color="#E5E5E5"> you will be able to</font>

261
00:11:45,290 --> 00:11:50,930
tell<font color="#E5E5E5"> the number of hellos by you know</font>

262
00:11:48,110 --> 00:11:53,780
originator service<font color="#E5E5E5"> and by a specific</font>

263
00:11:50,930 --> 00:11:55,699
user<font color="#CCCCCC"> then in</font><font color="#E5E5E5"> your dashboard it looks</font>

264
00:11:53,780 --> 00:11:58,180
like this<font color="#CCCCCC"> you break the you know down</font>

265
00:11:55,700 --> 00:12:01,520
<font color="#E5E5E5">you break down the data by dimensions</font>

266
00:11:58,180 --> 00:12:03,620
the baby<font color="#CCCCCC"> Balu here is representing the</font>

267
00:12:01,520 --> 00:12:05,930
total number of hellos<font color="#CCCCCC"> from our pcs</font>

268
00:12:03,620 --> 00:12:07,460
originated at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> out service and the</font>

269
00:12:05,930 --> 00:12:09,800
purple one is coming from billing for

270
00:12:07,460 --> 00:12:14,810
example<font color="#E5E5E5"> and two other colors are</font>

271
00:12:09,800 --> 00:12:17,030
representing other originators<font color="#E5E5E5"> the</font><font color="#CCCCCC"> gr</font><font color="#E5E5E5"> PC</font>

272
00:12:14,810 --> 00:12:19,459
plugin<font color="#E5E5E5"> also automatically creates traces</font>

273
00:12:17,030 --> 00:12:21,860
for incoming<font color="#E5E5E5"> and outgoing our pcs but</font>

274
00:12:19,460 --> 00:12:25,070
you can also add custom spans using the

275
00:12:21,860 --> 00:12:27,050
trace package<font color="#E5E5E5"> here we have we are</font>

276
00:12:25,070 --> 00:12:28,940
<font color="#E5E5E5">creating a custom child and finishing it</font>

277
00:12:27,050 --> 00:12:32,270
and then you know you can create<font color="#CCCCCC"> as many</font>

278
00:12:28,940 --> 00:12:34,910
spans you want<font color="#CCCCCC"> and annotate them just</font>

279
00:12:32,270 --> 00:12:37,280
propagate the context and whoever's you

280
00:12:34,910 --> 00:12:38,839
know starting new spans<font color="#E5E5E5"> from that</font>

281
00:12:37,280 --> 00:12:40,310
context<font color="#E5E5E5"> will be able</font><font color="#CCCCCC"> to trace the</font>

282
00:12:38,840 --> 00:12:44,540
existing

283
00:12:40,310 --> 00:12:46,189
trace so here's an example<font color="#E5E5E5"> of the you</font>

284
00:12:44,540 --> 00:12:48,230
<font color="#E5E5E5">know the</font><font color="#CCCCCC"> output like all the traces</font>

285
00:12:46,190 --> 00:12:51,320
collected for an RPC you can see the

286
00:12:48,230 --> 00:12:54,910
internal<font color="#CCCCCC"> our pcs made in order</font><font color="#E5E5E5"> to</font>

287
00:12:51,320 --> 00:12:57,350
<font color="#CCCCCC">satisfied or</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> drill incoming requests</font>

288
00:12:54,910 --> 00:13:00,290
<font color="#CCCCCC">open census</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> provides support for</font>

289
00:12:57,350 --> 00:13:04,040
<font color="#E5E5E5">people of if you use tag</font><font color="#CCCCCC"> our tech</font>

290
00:13:00,290 --> 00:13:06,650
package you<font color="#E5E5E5"> can collect CPU samples with</font>

291
00:13:04,040 --> 00:13:08,719
the<font color="#E5E5E5"> tags inside the incoming context and</font>

292
00:13:06,650 --> 00:13:11,600
then you can see you know the hot spots

293
00:13:08,720 --> 00:13:14,530
<font color="#E5E5E5">for specific in a request our pcs and</font>

294
00:13:11,600 --> 00:13:18,200
<font color="#E5E5E5">whatever you have put in your tag tags</font>

295
00:13:14,530 --> 00:13:18,860
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is an RPC</font><font color="#CCCCCC"> ERP</font><font color="#E5E5E5"> so server are</font>

296
00:13:18,200 --> 00:13:20,490
profiled

297
00:13:18,860 --> 00:13:22,320
<font color="#E5E5E5">with open</font><font color="#CCCCCC"> census</font>

298
00:13:20,490 --> 00:13:25,110
we are looking<font color="#CCCCCC"> at a typical you know</font>

299
00:13:22,320 --> 00:13:28,320
<font color="#E5E5E5">visualization from people of data you</font>

300
00:13:25,110 --> 00:13:31,740
can<font color="#CCCCCC"> see the</font><font color="#E5E5E5"> runtime concat strings spend</font>

301
00:13:28,320 --> 00:13:33,840
a<font color="#CCCCCC"> 9-point 43 seconds for our pieces</font>

302
00:13:31,740 --> 00:13:36,300
<font color="#E5E5E5">coming from authentication</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> three</font>

303
00:13:33,840 --> 00:13:40,020
point<font color="#CCCCCC"> twenty seconds for the RPC is</font>

304
00:13:36,300 --> 00:13:41,880
coming<font color="#E5E5E5"> from the analytic service so let</font>

305
00:13:40,020 --> 00:13:43,980
me focus<font color="#E5E5E5"> on some of the core principles</font>

306
00:13:41,880 --> 00:13:46,170
we<font color="#CCCCCC"> have one of our</font><font color="#E5E5E5"> goals is to make</font>

307
00:13:43,980 --> 00:13:47,670
instrumentation as much as possible<font color="#E5E5E5"> with</font>

308
00:13:46,170 --> 00:13:50,069
<font color="#CCCCCC">other engineers</font><font color="#E5E5E5"> thinking too much about</font>

309
00:13:47,670 --> 00:13:51,780
<font color="#CCCCCC">the cost</font><font color="#E5E5E5"> that's why we have this like</font>

310
00:13:50,070 --> 00:13:54,120
<font color="#E5E5E5">separation between instrumentation and</font>

311
00:13:51,780 --> 00:13:56,459
collection<font color="#E5E5E5"> instrumentation is very cheap</font>

312
00:13:54,120 --> 00:13:57,990
actually<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> don't have to collect so</font>

313
00:13:56,460 --> 00:14:01,020
rather than collecting all the metrics

314
00:13:57,990 --> 00:14:03,870
we<font color="#E5E5E5"> defer it user to turn on the</font>

315
00:14:01,020 --> 00:14:06,689
collection<font color="#E5E5E5"> the instrumentation bits are</font>

316
00:14:03,870 --> 00:14:08,520
always there<font color="#E5E5E5"> and you know</font><font color="#CCCCCC"> almost have</font>

317
00:14:06,690 --> 00:14:09,990
zero<font color="#E5E5E5"> impact on the critical path and</font>

318
00:14:08,520 --> 00:14:12,030
then<font color="#E5E5E5"> the you know the end user can</font>

319
00:14:09,990 --> 00:14:13,800
<font color="#CCCCCC">decide</font><font color="#E5E5E5"> what to collect this allows you</font>

320
00:14:12,030 --> 00:14:15,870
know libraries<font color="#E5E5E5"> instrument without</font>

321
00:14:13,800 --> 00:14:17,939
<font color="#E5E5E5">thinking too much about it and then they</font>

322
00:14:15,870 --> 00:14:22,410
provide<font color="#E5E5E5"> their measures and the end user</font>

323
00:14:17,940 --> 00:14:24,720
<font color="#E5E5E5">can enable collection the collection not</font>

324
00:14:22,410 --> 00:14:26,790
it requires<font color="#E5E5E5"> explicit enabling but this</font>

325
00:14:24,720 --> 00:14:29,310
is all the true for disabling it allows

326
00:14:26,790 --> 00:14:31,740
us dynamically<font color="#CCCCCC"> enable disable collection</font>

327
00:14:29,310 --> 00:14:33,900
<font color="#E5E5E5">in production for</font><font color="#CCCCCC"> example imagine</font><font color="#E5E5E5"> it you</font>

328
00:14:31,740 --> 00:14:36,240
know a compression library that is

329
00:14:33,900 --> 00:14:39,000
instrumented to measure the compressed

330
00:14:36,240 --> 00:14:41,280
chunks<font color="#CCCCCC"> until</font><font color="#E5E5E5"> you're suspicious</font><font color="#CCCCCC"> about</font>

331
00:14:39,000 --> 00:14:43,500
this<font color="#CCCCCC"> library</font><font color="#E5E5E5"> you may never need metrics</font>

332
00:14:41,280 --> 00:14:44,939
coming from this<font color="#E5E5E5"> measure but when you do</font>

333
00:14:43,500 --> 00:14:46,650
you<font color="#CCCCCC"> can dynamically enable in the</font>

334
00:14:44,940 --> 00:14:49,830
production<font color="#CCCCCC"> and start receiving</font><font color="#E5E5E5"> metrics</font>

335
00:14:46,650 --> 00:14:52,620
so<font color="#CCCCCC"> observing becoming very</font><font color="#E5E5E5"> easy when you</font>

336
00:14:49,830 --> 00:14:54,600
have<font color="#CCCCCC"> aesthetically list of things</font><font color="#E5E5E5"> to</font>

337
00:14:52,620 --> 00:14:57,080
<font color="#CCCCCC">observe</font><font color="#E5E5E5"> but systems are always</font>

338
00:14:54,600 --> 00:14:59,520
surprising you you cannot really<font color="#E5E5E5"> know</font>

339
00:14:57,080 --> 00:15:02,340
<font color="#E5E5E5">you cannot predict what you should</font>

340
00:14:59,520 --> 00:15:04,170
observe<font color="#E5E5E5"> that's why we encourage</font><font color="#CCCCCC"> a model</font>

341
00:15:02,340 --> 00:15:08,850
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you can dynamically expand the</font>

342
00:15:04,170 --> 00:15:13,319
<font color="#CCCCCC">collection</font><font color="#E5E5E5"> we simple expensive and large</font>

343
00:15:08,850 --> 00:15:16,260
data<font color="#E5E5E5"> everything that is cheap to collect</font>

344
00:15:13,320 --> 00:15:19,080
and a gradable<font color="#E5E5E5"> doesn't have to be you</font>

345
00:15:16,260 --> 00:15:21,900
<font color="#CCCCCC">know sampled examples of these sample</font>

346
00:15:19,080 --> 00:15:24,960
signals are traces for example because

347
00:15:21,900 --> 00:15:28,319
they are large<font color="#E5E5E5"> profiles because they are</font>

348
00:15:24,960 --> 00:15:29,560
<font color="#CCCCCC">expensive</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> other hand we may agree</font>

349
00:15:28,320 --> 00:15:31,240
great and

350
00:15:29,560 --> 00:15:33,520
you know in efficient ways and<font color="#E5E5E5"> produce</font>

351
00:15:31,240 --> 00:15:36,279
cheap in small data to avoid sampling

352
00:15:33,520 --> 00:15:37,870
<font color="#E5E5E5">this is what we do for metric collection</font>

353
00:15:36,279 --> 00:15:40,180
for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> so we don't have to like</font>

354
00:15:37,870 --> 00:15:42,510
<font color="#E5E5E5">sample metrics at all it is great</font>

355
00:15:40,180 --> 00:15:47,680
<font color="#CCCCCC">because then you can see you know</font><font color="#E5E5E5"> your</font>

356
00:15:42,510 --> 00:15:49,960
<font color="#E5E5E5">1999 percentile</font><font color="#CCCCCC"> I was repeating</font><font color="#E5E5E5"> that the</font>

357
00:15:47,680 --> 00:15:52,420
<font color="#E5E5E5">data size could</font><font color="#CCCCCC"> be a reason why we</font>

358
00:15:49,960 --> 00:15:54,940
aggregate or sample data one<font color="#E5E5E5"> of the</font>

359
00:15:52,420 --> 00:15:57,849
other things is we want<font color="#E5E5E5"> to limit the out</font>

360
00:15:54,940 --> 00:16:01,029
<font color="#E5E5E5">band bandwidth spent on data collection</font>

361
00:15:57,850 --> 00:16:03,490
<font color="#E5E5E5">so for signals that are</font><font color="#CCCCCC"> a gradable like</font>

362
00:16:01,029 --> 00:16:07,990
metrics we try to aggregate them inside

363
00:16:03,490 --> 00:16:11,830
the process<font color="#E5E5E5"> or in an agent living near</font>

364
00:16:07,990 --> 00:16:14,110
the process to reduce bandwidth<font color="#E5E5E5"> at</font>

365
00:16:11,830 --> 00:16:16,300
<font color="#E5E5E5">Google we</font><font color="#CCCCCC"> try to use the same</font>

366
00:16:14,110 --> 00:16:17,920
instrumentation libraries nowadays

367
00:16:16,300 --> 00:16:20,380
provide you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> black box</font>

368
00:16:17,920 --> 00:16:24,790
instrumentation for example<font color="#E5E5E5"> a trace</font>

369
00:16:20,380 --> 00:16:26,380
started at a load balancer<font color="#CCCCCC"> you know can</font>

370
00:16:24,790 --> 00:16:28,630
<font color="#CCCCCC">be</font><font color="#E5E5E5"> started at a load balancer then our</font>

371
00:16:26,380 --> 00:16:31,140
engineers can use<font color="#CCCCCC"> the same libraries to</font>

372
00:16:28,630 --> 00:16:33,790
you know add more spends to that trace

373
00:16:31,140 --> 00:16:34,540
you know similar like<font color="#CCCCCC"> microservices</font>

374
00:16:33,790 --> 00:16:37,480
<font color="#E5E5E5">framework</font>

375
00:16:34,540 --> 00:16:39,579
<font color="#CCCCCC">G</font><font color="#E5E5E5"> RPC provides tags in the core set of</font>

376
00:16:37,480 --> 00:16:41,260
instrumentation all of the box so it's

377
00:16:39,580 --> 00:16:43,330
<font color="#CCCCCC">easier for</font><font color="#E5E5E5"> our engineers so you know the</font>

378
00:16:41,260 --> 00:16:45,460
<font color="#E5E5E5">facility what is already</font><font color="#CCCCCC"> there and built</font>

379
00:16:43,330 --> 00:16:47,880
on top of<font color="#CCCCCC"> that rather than</font><font color="#E5E5E5"> thinking</font>

380
00:16:45,460 --> 00:16:50,380
about instrumentation from very scratch

381
00:16:47,880 --> 00:16:53,830
<font color="#E5E5E5">one of the useful</font><font color="#CCCCCC"> tools we have at</font>

382
00:16:50,380 --> 00:16:56,500
Google<font color="#E5E5E5"> is the introspection pages</font><font color="#CCCCCC"> served</font>

383
00:16:53,830 --> 00:16:58,900
from the<font color="#CCCCCC"> server's</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can imagine this</font>

384
00:16:56,500 --> 00:17:01,870
introspection<font color="#E5E5E5"> pages as a small back-end</font>

385
00:16:58,900 --> 00:17:04,000
that<font color="#E5E5E5"> collects and visualizes data this</font>

386
00:17:01,870 --> 00:17:06,069
we<font color="#E5E5E5"> don't have great CSS right now</font>

387
00:17:04,000 --> 00:17:10,170
because<font color="#E5E5E5"> you know distributed systems</font>

388
00:17:06,069 --> 00:17:13,720
engineers don't<font color="#E5E5E5"> know sales as much but</font>

389
00:17:10,170 --> 00:17:15,579
<font color="#E5E5E5">what you can contribute</font><font color="#CCCCCC"> you know it's</font>

390
00:17:13,720 --> 00:17:17,140
great useful tool<font color="#CCCCCC"> to understand what is</font>

391
00:17:15,579 --> 00:17:20,859
<font color="#CCCCCC">happening in the process</font><font color="#E5E5E5"> without really</font>

392
00:17:17,140 --> 00:17:22,750
<font color="#CCCCCC">dependent</font><font color="#E5E5E5"> on a back-end</font><font color="#CCCCCC"> also you know as</font>

393
00:17:20,859 --> 00:17:25,678
I<font color="#CCCCCC"> mentioned it's great for development</font>

394
00:17:22,750 --> 00:17:28,179
time you see the<font color="#E5E5E5"> traces page here</font>

395
00:17:25,679 --> 00:17:30,280
there's a small dashboard<font color="#CCCCCC"> that displays</font>

396
00:17:28,179 --> 00:17:32,140
the<font color="#CCCCCC"> spans with different names and you</font>

397
00:17:30,280 --> 00:17:35,678
know<font color="#E5E5E5"> just displays the latency</font>

398
00:17:32,140 --> 00:17:39,130
distribution you can<font color="#E5E5E5"> see the details for</font>

399
00:17:35,679 --> 00:17:41,430
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> sample traces for each bucket and</font>

400
00:17:39,130 --> 00:17:44,820
the<font color="#E5E5E5"> errored</font><font color="#CCCCCC"> one so it gives you some</font><font color="#E5E5E5"> D</font>

401
00:17:41,430 --> 00:17:48,120
you know keep just a small sample in

402
00:17:44,820 --> 00:17:52,409
memory<font color="#E5E5E5"> and you can get more to</font>

403
00:17:48,120 --> 00:17:54,330
understand what is wrong<font color="#E5E5E5"> to summarize we</font>

404
00:17:52,410 --> 00:17:58,700
have<font color="#E5E5E5"> a holistic</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> we use multiple</font>

405
00:17:54,330 --> 00:18:01,710
<font color="#E5E5E5">signal types</font><font color="#CCCCCC"> tags allow us to</font><font color="#E5E5E5"> break down</font>

406
00:17:58,700 --> 00:18:03,810
<font color="#CCCCCC">our data by</font><font color="#E5E5E5"> dimensions so each team can</font>

407
00:18:01,710 --> 00:18:05,760
produce them<font color="#E5E5E5"> and pass</font><font color="#CCCCCC"> them to</font><font color="#E5E5E5"> the low</font>

408
00:18:03,810 --> 00:18:09,419
<font color="#E5E5E5">level services as a part of their</font><font color="#CCCCCC"> our</font>

409
00:18:05,760 --> 00:18:11,760
pcs we instrument our core frameworks

410
00:18:09,420 --> 00:18:13,070
<font color="#E5E5E5">and you know load balances and service</font>

411
00:18:11,760 --> 00:18:15,780
measures<font color="#CCCCCC"> out-of-the-box</font>

412
00:18:13,070 --> 00:18:18,600
<font color="#E5E5E5">users you know automatically get a lot</font>

413
00:18:15,780 --> 00:18:20,550
of<font color="#E5E5E5"> out-of-the-box instrumentation</font><font color="#CCCCCC"> and</font>

414
00:18:18,600 --> 00:18:23,040
then you know they<font color="#CCCCCC"> can use the same</font>

415
00:18:20,550 --> 00:18:25,050
libraries to add fine-grained details

416
00:18:23,040 --> 00:18:28,139
<font color="#CCCCCC">just like the case and the G RPC you</font>

417
00:18:25,050 --> 00:18:30,840
know server<font color="#E5E5E5"> handler where I was creating</font>

418
00:18:28,140 --> 00:18:34,020
custom<font color="#E5E5E5"> spans our you</font><font color="#CCCCCC"> know</font>

419
00:18:30,840 --> 00:18:37,139
instrumentation library is optimized<font color="#E5E5E5"> to</font>

420
00:18:34,020 --> 00:18:38,520
be<font color="#E5E5E5"> low</font><font color="#CCCCCC"> overhead</font><font color="#E5E5E5"> and low cost</font><font color="#CCCCCC"> it makes it</font>

421
00:18:37,140 --> 00:18:40,170
you know<font color="#E5E5E5"> easier for libraries and</font>

422
00:18:38,520 --> 00:18:43,440
<font color="#CCCCCC">frameworks to instrument without</font>

423
00:18:40,170 --> 00:18:44,820
thinking too<font color="#CCCCCC"> much about</font><font color="#E5E5E5"> the cost</font><font color="#CCCCCC"> I can</font>

424
00:18:43,440 --> 00:18:47,250
say that like once you adopt<font color="#E5E5E5"> these</font>

425
00:18:44,820 --> 00:18:50,010
concepts and<font color="#E5E5E5"> put them in place it gives</font>

426
00:18:47,250 --> 00:18:53,400
you a good<font color="#E5E5E5"> foundation layer open</font><font color="#CCCCCC"> census</font>

427
00:18:50,010 --> 00:18:56,250
is already available<font color="#E5E5E5"> today and is vendor</font>

428
00:18:53,400 --> 00:18:59,670
agnostic we already support<font color="#CCCCCC"> Prometheus</font>

429
00:18:56,250 --> 00:19:01,440
<font color="#CCCCCC">jäger Zipkin and more and more exporters</font>

430
00:18:59,670 --> 00:19:03,060
<font color="#E5E5E5">are coming</font><font color="#CCCCCC"> soon so I</font><font color="#E5E5E5"> really highly</font>

431
00:19:01,440 --> 00:19:04,770
encourage<font color="#CCCCCC"> you to you know</font><font color="#E5E5E5"> take a look</font>

432
00:19:03,060 --> 00:19:08,210
<font color="#E5E5E5">and you know give us feedback and</font>

433
00:19:04,770 --> 00:19:12,400
contribute<font color="#E5E5E5"> and that's all thank you</font>

434
00:19:08,210 --> 00:19:12,400
[Applause]

