1
00:00:07,440 --> 00:00:14,230
okay my name is<font color="#CCCCCC"> Hartmut</font><font color="#E5E5E5"> I'm from</font>

2
00:00:10,629 --> 00:00:18,490
Bielefeld Germany<font color="#CCCCCC"> I studied computer</font>

3
00:00:14,230 --> 00:00:21,880
<font color="#CCCCCC">science uh</font><font color="#E5E5E5"> electric engineering and a</font>

4
00:00:18,490 --> 00:00:24,099
little bit of<font color="#CCCCCC"> biology there and I've</font>

5
00:00:21,880 --> 00:00:27,280
been<font color="#E5E5E5"> using</font><font color="#CCCCCC"> OpenStreetMap for a little</font>

6
00:00:24,100 --> 00:00:29,890
bit over<font color="#CCCCCC"> a decade now and in my day job</font>

7
00:00:27,280 --> 00:00:33,270
<font color="#CCCCCC">I worked as a database</font><font color="#E5E5E5"> support engineer</font>

8
00:00:29,890 --> 00:00:36,190
for<font color="#E5E5E5"> Maria DB and formerly from</font><font color="#CCCCCC"> I school</font>

9
00:00:33,270 --> 00:00:40,629
but it is not related<font color="#E5E5E5"> to today's talk at</font>

10
00:00:36,190 --> 00:00:42,879
<font color="#E5E5E5">all so what I'm going</font><font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> about is</font>

11
00:00:40,629 --> 00:00:48,940
the map<font color="#CCCCCC"> Nick rendering library and how</font>

12
00:00:42,879 --> 00:00:50,800
to use<font color="#E5E5E5"> it from</font><font color="#CCCCCC"> pison so what map Nick</font>

13
00:00:48,940 --> 00:00:53,800
does it is the rendering library<font color="#E5E5E5"> that</font>

14
00:00:50,800 --> 00:00:56,919
for example renders the map parts you

15
00:00:53,800 --> 00:00:59,468
see<font color="#E5E5E5"> an Open Street Map but you can do a</font>

16
00:00:56,920 --> 00:01:01,920
lot of both other things<font color="#E5E5E5"> so it can</font>

17
00:00:59,469 --> 00:01:04,479
process<font color="#E5E5E5"> a lot of different input formats</font>

18
00:01:01,920 --> 00:01:09,430
can produce a lot<font color="#E5E5E5"> of different graphics</font>

19
00:01:04,479 --> 00:01:12,700
formats<font color="#E5E5E5"> this output and it uses specific</font>

20
00:01:09,430 --> 00:01:14,500
style information<font color="#E5E5E5"> to do so and as it is</font>

21
00:01:12,700 --> 00:01:16,899
<font color="#E5E5E5">a library</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> not a standalone program</font>

22
00:01:14,500 --> 00:01:19,149
<font color="#E5E5E5">it also needs a little bit</font><font color="#CCCCCC"> of extra</font>

23
00:01:16,899 --> 00:01:25,329
<font color="#CCCCCC">wrapper code to really make you do what</font>

24
00:01:19,149 --> 00:01:32,649
you<font color="#CCCCCC"> want it to</font><font color="#E5E5E5"> do so first on the input</font>

25
00:01:25,329 --> 00:01:35,408
side we can read several different map

26
00:01:32,649 --> 00:01:39,039
data formats<font color="#E5E5E5"> like shape files which</font><font color="#CCCCCC"> is a</font>

27
00:01:35,409 --> 00:01:41,109
<font color="#E5E5E5">specific geospatial file format or we</font>

28
00:01:39,039 --> 00:01:45,240
can read geospatial data from different

29
00:01:41,109 --> 00:01:48,339
<font color="#E5E5E5">databases mostly posters but also</font><font color="#CCCCCC"> the</font>

30
00:01:45,240 --> 00:01:52,380
<font color="#E5E5E5">case data that Maskull</font><font color="#CCCCCC"> mariadb can</font>

31
00:01:48,340 --> 00:01:55,090
provide and also what spatialite so

32
00:01:52,380 --> 00:02:01,899
<font color="#E5E5E5">spatial enabled version of SQLite can</font>

33
00:01:55,090 --> 00:02:04,140
provide<font color="#E5E5E5"> ant we can natively use geo JSON</font>

34
00:02:01,899 --> 00:02:04,140
<font color="#E5E5E5">files</font>

35
00:02:09,380 --> 00:02:16,980
also via plugins we can read further

36
00:02:15,060 --> 00:02:21,620
file formats<font color="#E5E5E5"> like the native</font>

37
00:02:16,980 --> 00:02:25,019
<font color="#CCCCCC">OpenStreetMap</font><font color="#E5E5E5"> XML format GPX tracks and</font>

38
00:02:21,620 --> 00:02:26,550
<font color="#CCCCCC">why</font><font color="#E5E5E5"> are the detail library different a</font>

39
00:02:25,020 --> 00:02:31,350
raster<font color="#CCCCCC"> image formats</font><font color="#E5E5E5"> like satellite</font>

40
00:02:26,550 --> 00:02:36,540
images<font color="#CCCCCC"> and stuff like that and on the</font>

41
00:02:31,350 --> 00:02:39,560
<font color="#E5E5E5">output side we can produce PNG bitmap</font>

42
00:02:36,540 --> 00:02:42,810
images in high or low calorie solution

43
00:02:39,560 --> 00:02:45,660
that's the usual use case for map tiles

44
00:02:42,810 --> 00:02:48,750
as you see them on besides like<font color="#E5E5E5"> Open</font>

45
00:02:45,660 --> 00:02:51,900
<font color="#E5E5E5">Street Map and other websites that use</font>

46
00:02:48,750 --> 00:02:55,560
Open Street Map data but we can also

47
00:02:51,900 --> 00:02:57,810
produce<font color="#CCCCCC"> jpg which is not the optimal</font>

48
00:02:55,560 --> 00:03:01,050
format but can give you better

49
00:02:57,810 --> 00:03:04,350
<font color="#CCCCCC">compression rates</font><font color="#E5E5E5"> in file size isn't</font><font color="#CCCCCC"> if</font>

50
00:03:01,050 --> 00:03:08,220
you we can produce scalable vector

51
00:03:04,350 --> 00:03:09,840
graphics that<font color="#CCCCCC"> can for</font><font color="#E5E5E5"> example use in</font>

52
00:03:08,220 --> 00:03:13,980
<font color="#CCCCCC">Inkscape or other vector drawing</font>

53
00:03:09,840 --> 00:03:18,540
programs to<font color="#E5E5E5"> first process the generated</font>

54
00:03:13,980 --> 00:03:21,600
<font color="#CCCCCC">maps or we can for printing</font><font color="#E5E5E5"> produce PDF</font>

55
00:03:18,540 --> 00:03:31,078
<font color="#E5E5E5">or the classic PostScript is also still</font>

56
00:03:21,600 --> 00:03:33,870
<font color="#E5E5E5">available and styles so though we need</font>

57
00:03:31,079 --> 00:03:36,450
style<font color="#CCCCCC"> information to specify which</font>

58
00:03:33,870 --> 00:03:39,120
inputs<font color="#E5E5E5"> objects from the input data</font>

59
00:03:36,450 --> 00:03:44,670
stream should look how in the output

60
00:03:39,120 --> 00:03:48,480
image<font color="#CCCCCC"> there are two ways to do that one</font>

61
00:03:44,670 --> 00:03:52,920
is to really use the<font color="#CCCCCC"> map Nik library</font>

62
00:03:48,480 --> 00:03:55,170
functions to define<font color="#E5E5E5"> a style</font><font color="#CCCCCC"> information</font>

63
00:03:52,920 --> 00:03:58,798
on the go<font color="#CCCCCC"> step-by-step</font>

64
00:03:55,170 --> 00:04:02,399
that's<font color="#E5E5E5"> very flexible but also takes a</font>

65
00:03:58,799 --> 00:04:05,250
lot of effort<font color="#E5E5E5"> so as an alternative</font><font color="#CCCCCC"> we</font>

66
00:04:02,400 --> 00:04:08,880
have<font color="#E5E5E5"> a style file format</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is a</font>

67
00:04:05,250 --> 00:04:12,030
special<font color="#E5E5E5"> XML format that is more compact</font>

68
00:04:08,880 --> 00:04:14,269
and more<font color="#E5E5E5"> easy to use but not as</font><font color="#CCCCCC"> flexible</font>

69
00:04:12,030 --> 00:04:16,589
as if you could decide<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your code</font>

70
00:04:14,269 --> 00:04:17,668
<font color="#E5E5E5">depending on certain</font><font color="#CCCCCC"> traditions which</font>

71
00:04:16,589 --> 00:04:20,518
styles to use

72
00:04:17,668 --> 00:04:23,128
but the<font color="#E5E5E5"> typical use case is to use XML</font>

73
00:04:20,519 --> 00:04:26,430
<font color="#E5E5E5">start and there is a rich collection</font><font color="#CCCCCC"> of</font>

74
00:04:23,129 --> 00:04:33,960
different<font color="#E5E5E5"> styles for a bitmap publicly</font>

75
00:04:26,430 --> 00:04:36,960
available and<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> also convert some</font>

76
00:04:33,960 --> 00:04:39,779
other map<font color="#CCCCCC"> stylesheet vomits</font><font color="#E5E5E5"> especially</font>

77
00:04:36,960 --> 00:04:42,719
the<font color="#CCCCCC"> cart of CSS form it into the</font><font color="#E5E5E5"> XML</font>

78
00:04:39,779 --> 00:04:46,860
format that<font color="#E5E5E5"> is needed</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> an APNIC so</font>

79
00:04:42,719 --> 00:04:49,860
<font color="#E5E5E5">street map for some years now actually</font>

80
00:04:46,860 --> 00:04:52,860
uses<font color="#CCCCCC"> car to CSS styles converts these</font><font color="#E5E5E5"> to</font>

81
00:04:49,860 --> 00:04:59,430
map make<font color="#E5E5E5"> XML on the fly and then renders</font>

82
00:04:52,860 --> 00:05:02,759
the map<font color="#CCCCCC"> darts with that</font><font color="#E5E5E5"> and it's already</font>

83
00:04:59,430 --> 00:05:05,419
<font color="#CCCCCC">set map</font><font color="#E5E5E5"> Nick is a library so we</font><font color="#CCCCCC"> need</font>

84
00:05:02,759 --> 00:05:09,629
some<font color="#CCCCCC"> extra code to tell it what</font><font color="#E5E5E5"> to do</font>

85
00:05:05,419 --> 00:05:11,969
and for that as it<font color="#E5E5E5"> is a C++ library we</font>

86
00:05:09,629 --> 00:05:15,960
<font color="#CCCCCC">have</font><font color="#E5E5E5"> the option</font><font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> directly in</font>

87
00:05:11,969 --> 00:05:19,620
C++<font color="#E5E5E5"> well that's complicated</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> easily</font>

88
00:05:15,960 --> 00:05:22,109
crash so as an alternative we have good

89
00:05:19,620 --> 00:05:24,330
pies and bindings<font color="#E5E5E5"> and that's what I'm</font>

90
00:05:22,110 --> 00:05:28,259
mostly going<font color="#CCCCCC"> to talk about in the rest</font>

91
00:05:24,330 --> 00:05:31,020
of<font color="#E5E5E5"> the talk and there's also now some</font>

92
00:05:28,259 --> 00:05:34,009
experimental bindings for PHP<font color="#CCCCCC"> 7</font><font color="#E5E5E5"> but</font>

93
00:05:31,020 --> 00:05:42,688
these do not<font color="#E5E5E5"> support the full range of</font>

94
00:05:34,009 --> 00:05:44,520
<font color="#CCCCCC">mapping capabilities yet if you</font><font color="#E5E5E5"> want to</font>

95
00:05:42,689 --> 00:05:45,509
use map and a comparison together<font color="#E5E5E5"> you</font>

96
00:05:44,520 --> 00:05:47,669
<font color="#E5E5E5">obviously need</font>

97
00:05:45,509 --> 00:05:50,849
Python it doesn't matter if you<font color="#E5E5E5"> want to</font>

98
00:05:47,669 --> 00:05:55,649
use<font color="#CCCCCC"> PI's</font><font color="#E5E5E5"> in version 2 over 3 the</font>

99
00:05:50,849 --> 00:05:57,680
bindings<font color="#E5E5E5"> for both</font><font color="#CCCCCC"> just the</font><font color="#E5E5E5"> author go to</font>

100
00:05:55,649 --> 00:06:00,710
different<font color="#E5E5E5"> APNIC versions around still I</font>

101
00:05:57,680 --> 00:06:03,300
only used method 3 the current one<font color="#CCCCCC"> but</font>

102
00:06:00,710 --> 00:06:11,099
<font color="#CCCCCC">some Linux distributions may still come</font>

103
00:06:03,300 --> 00:06:13,860
<font color="#CCCCCC">with the version</font><font color="#E5E5E5"> 2 libraries and if you</font>

104
00:06:11,099 --> 00:06:16,199
<font color="#E5E5E5">want to add additional stuff</font><font color="#CCCCCC"> to other</font>

105
00:06:13,860 --> 00:06:19,139
generated images<font color="#E5E5E5"> beyond that welcome</font>

106
00:06:16,199 --> 00:06:23,430
APNIC renders itself<font color="#E5E5E5"> you also need the</font>

107
00:06:19,139 --> 00:06:25,439
<font color="#CCCCCC">cairo</font><font color="#E5E5E5"> bindings for</font><font color="#CCCCCC"> Pisan and maybe a</font>

108
00:06:23,430 --> 00:06:27,729
libraries for<font color="#CCCCCC"> SP 3 and 4 for</font><font color="#E5E5E5"> handling</font>

109
00:06:25,439 --> 00:06:33,370
that's what the<font color="#CCCCCC"> Pangu</font>

110
00:06:27,729 --> 00:06:35,889
years so on<font color="#CCCCCC"> counter boon to this would</font>

111
00:06:33,370 --> 00:06:38,680
be<font color="#CCCCCC"> the packages if you need you need the</font>

112
00:06:35,889 --> 00:06:40,719
<font color="#CCCCCC">parson 3 in APNIC bindings</font><font color="#E5E5E5"> if they</font>

113
00:06:38,680 --> 00:06:42,729
<font color="#E5E5E5">haven't installed my Python 3 or map</font>

114
00:06:40,719 --> 00:06:46,330
<font color="#CCCCCC">Nakia these will be installed</font>

115
00:06:42,729 --> 00:06:49,599
automatically and you may need the<font color="#CCCCCC"> pango</font>

116
00:06:46,330 --> 00:06:55,270
font handling<font color="#E5E5E5"> you may if</font><font color="#CCCCCC"> you want to put</font>

117
00:06:49,599 --> 00:07:01,169
additional SVG images on top<font color="#CCCCCC"> need Rs 50</font>

118
00:06:55,270 --> 00:07:10,469
bindings<font color="#E5E5E5"> the general</font><font color="#CCCCCC"> ttk introspection</font>

119
00:07:01,169 --> 00:07:10,469
<font color="#E5E5E5">package to make the other tube work so</font>

120
00:07:10,830 --> 00:07:20,169
Paula metric data sources like<font color="#E5E5E5"> shape</font>

121
00:07:15,159 --> 00:07:23,438
files or database bindings produce<font color="#CCCCCC"> a</font>

122
00:07:20,169 --> 00:07:27,628
data stream that<font color="#E5E5E5"> comes as</font><font color="#CCCCCC"> 4 kinds of</font>

123
00:07:23,439 --> 00:07:30,669
different<font color="#E5E5E5"> objects simple points</font>

124
00:07:27,629 --> 00:07:34,870
one-dimensional lines<font color="#E5E5E5"> two-dimensional</font>

125
00:07:30,669 --> 00:07:39,399
polygons<font color="#E5E5E5"> that cover areas or predefined</font>

126
00:07:34,870 --> 00:07:41,919
raster images they may look<font color="#CCCCCC"> different in</font>

127
00:07:39,399 --> 00:07:46,300
the<font color="#CCCCCC"> actual</font><font color="#E5E5E5"> data source but that what is</font>

128
00:07:41,919 --> 00:07:54,310
what the input API then provides to the

129
00:07:46,300 --> 00:07:57,430
further stages of the library inside map

130
00:07:54,310 --> 00:08:00,279
<font color="#E5E5E5">Nick we have three main different kinds</font>

131
00:07:57,430 --> 00:08:07,029
<font color="#E5E5E5">of objects</font><font color="#CCCCCC"> that is layers</font><font color="#E5E5E5"> styles and</font>

132
00:08:00,279 --> 00:08:10,659
<font color="#CCCCCC">symbolizes the layer is what the what</font>

133
00:08:07,029 --> 00:08:14,349
the<font color="#E5E5E5"> data to base our</font><font color="#CCCCCC"> datasource</font><font color="#E5E5E5"> provides</font>

134
00:08:10,659 --> 00:08:16,449
this data so if you use a<font color="#E5E5E5"> shapefile it's</font>

135
00:08:14,349 --> 00:08:20,080
everything<font color="#CCCCCC"> that is in the shapefile</font><font color="#E5E5E5"> if</font>

136
00:08:16,449 --> 00:08:22,110
you use the database<font color="#CCCCCC"> it is what is</font><font color="#E5E5E5"> good</font>

137
00:08:20,080 --> 00:08:25,620
<font color="#E5E5E5">used by the actual database query you</font>

138
00:08:22,110 --> 00:08:25,620
bind to a layer

139
00:08:26,740 --> 00:08:33,690
then we have styles styles commute zoom

140
00:08:30,550 --> 00:08:37,709
and everything that is<font color="#E5E5E5"> in a layer and</font>

141
00:08:33,690 --> 00:08:42,580
decide how to<font color="#E5E5E5"> actually display these</font>

142
00:08:37,708 --> 00:08:44,589
data items<font color="#E5E5E5"> and we have symbolizes</font>

143
00:08:42,580 --> 00:08:48,160
symbolizes<font color="#E5E5E5"> are the things that actually</font>

144
00:08:44,589 --> 00:08:50,550
do the<font color="#CCCCCC"> work of painting so the simple</font>

145
00:08:48,160 --> 00:08:54,910
<font color="#CCCCCC">stripe behalf is the point simple Iser</font>

146
00:08:50,550 --> 00:08:57,670
that either<font color="#CCCCCC"> just draws a point the</font>

147
00:08:54,910 --> 00:09:01,300
certain position or it draws a<font color="#E5E5E5"> given</font>

148
00:08:57,670 --> 00:09:03,130
image that you<font color="#E5E5E5"> can specify by our point</font>

149
00:09:01,300 --> 00:09:06,880
<font color="#E5E5E5">of interest</font><font color="#CCCCCC"> I can for</font><font color="#E5E5E5"> tops or for gas</font>

150
00:09:03,130 --> 00:09:08,830
stations<font color="#CCCCCC"> or whatever you have</font><font color="#E5E5E5"> then we</font>

151
00:09:06,880 --> 00:09:12,820
<font color="#E5E5E5">have the line it symbolizes the draw</font>

152
00:09:08,830 --> 00:09:16,300
lines in different<font color="#E5E5E5"> styles so for example</font>

153
00:09:12,820 --> 00:09:21,540
if you want<font color="#E5E5E5"> to draw a road</font><font color="#CCCCCC"> you may want</font>

154
00:09:16,300 --> 00:09:27,010
<font color="#CCCCCC">to draw it in yellow and have small</font>

155
00:09:21,540 --> 00:09:29,140
small<font color="#CCCCCC"> earth</font><font color="#E5E5E5"> small black lines at the</font>

156
00:09:27,010 --> 00:09:31,540
side to distinguish them from the

157
00:09:29,140 --> 00:09:34,360
<font color="#CCCCCC">background that's what the lines</font>

158
00:09:31,540 --> 00:09:36,459
symbolize I can do then we have the

159
00:09:34,360 --> 00:09:42,970
<font color="#E5E5E5">polygon</font><font color="#CCCCCC"> symbolized that draws</font><font color="#E5E5E5"> and fits</font>

160
00:09:36,459 --> 00:09:48,189
areas in a given color and style we have

161
00:09:42,970 --> 00:09:50,140
the<font color="#CCCCCC"> raster symbolize it</font><font color="#E5E5E5"> that just puts a</font>

162
00:09:48,190 --> 00:09:52,959
raster image data from the input side

163
00:09:50,140 --> 00:09:57,610
into<font color="#CCCCCC"> the output</font><font color="#E5E5E5"> side and we have some</font>

164
00:09:52,959 --> 00:10:00,069
<font color="#E5E5E5">more sophisticated</font><font color="#CCCCCC"> symbolizes like the</font>

165
00:09:57,610 --> 00:10:02,399
marker symbolizes our can be repeated if

166
00:10:00,070 --> 00:10:05,170
it is used on line or polygon data

167
00:10:02,399 --> 00:10:06,470
whereas the<font color="#E5E5E5"> point is just as</font><font color="#CCCCCC"> the fix for</font>

168
00:10:05,170 --> 00:10:12,209
<font color="#CCCCCC">it</font>

169
00:10:06,470 --> 00:10:13,829
we have<font color="#CCCCCC"> aligned pattern</font><font color="#E5E5E5"> symbolizing but</font>

170
00:10:12,209 --> 00:10:17,518
is similar to the<font color="#CCCCCC"> Marcus of Mars of them</font>

171
00:10:13,829 --> 00:10:19,380
use it<font color="#E5E5E5"> on the line but there's the</font>

172
00:10:17,519 --> 00:10:22,140
<font color="#E5E5E5">marker symbolize of the marker image is</font>

173
00:10:19,380 --> 00:10:22,890
<font color="#E5E5E5">always up right and there's</font><font color="#CCCCCC"> the line pet</font>

174
00:10:22,140 --> 00:10:25,769
<font color="#CCCCCC">and symbolize er</font>

175
00:10:22,890 --> 00:10:28,050
<font color="#CCCCCC">it follows the direction of the line so</font>

176
00:10:25,769 --> 00:10:30,480
lines symbolize<font color="#CCCCCC"> er is</font><font color="#E5E5E5"> used for</font><font color="#CCCCCC"> example</font>

177
00:10:28,050 --> 00:10:33,469
when you<font color="#E5E5E5"> want to draw one by</font><font color="#CCCCCC"> rote which</font>

178
00:10:30,480 --> 00:10:35,610
has these little one-way arrows on it

179
00:10:33,470 --> 00:10:36,930
that would draw the line<font color="#E5E5E5"> in</font><font color="#CCCCCC"> certain</font>

180
00:10:35,610 --> 00:10:40,350
style and then put<font color="#E5E5E5"> little</font><font color="#CCCCCC"> arrows</font><font color="#E5E5E5"> or</font>

181
00:10:36,930 --> 00:10:43,019
symbols on top if<font color="#E5E5E5"> text symbolizes to put</font>

182
00:10:40,350 --> 00:10:45,170
<font color="#E5E5E5">text on the map usually helpful if</font>

183
00:10:43,019 --> 00:10:48,750
things have names<font color="#E5E5E5"> on my map</font>

184
00:10:45,170 --> 00:10:51,959
we have special<font color="#CCCCCC"> markers in Milazzo</font>

185
00:10:48,750 --> 00:10:53,790
<font color="#CCCCCC">called shared symbolize</font><font color="#E5E5E5"> er that is used</font>

186
00:10:51,959 --> 00:10:55,649
<font color="#E5E5E5">for</font><font color="#CCCCCC"> high VIN numbers and</font><font color="#E5E5E5"> stuff where</font>

187
00:10:53,790 --> 00:10:59,339
depending<font color="#E5E5E5"> on the text in the marker the</font>

188
00:10:55,649 --> 00:11:01,019
<font color="#CCCCCC">Marcus size has to be extended</font><font color="#E5E5E5"> and it's</font>

189
00:10:59,339 --> 00:11:04,620
called<font color="#E5E5E5"> shield symbolizes because the</font>

190
00:11:01,019 --> 00:11:08,810
highway<font color="#E5E5E5"> signs on the US highways look</font>

191
00:11:04,620 --> 00:11:11,550
like ancient light shields

192
00:11:08,810 --> 00:11:13,380
we have<font color="#E5E5E5"> polygon patterns symbolized that</font>

193
00:11:11,550 --> 00:11:16,769
is if you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> fill a polygon not</font>

194
00:11:13,380 --> 00:11:19,800
just with a certain color but with a

195
00:11:16,769 --> 00:11:21,779
certain repeated pattern like a<font color="#CCCCCC"> maps you</font>

196
00:11:19,800 --> 00:11:24,180
often have our forests in green and

197
00:11:21,779 --> 00:11:27,180
little<font color="#E5E5E5"> tree symbols in there so you</font>

198
00:11:24,180 --> 00:11:28,709
would have one symbol<font color="#CCCCCC"> that has</font><font color="#E5E5E5"> the</font>

199
00:11:27,180 --> 00:11:31,670
background<font color="#E5E5E5"> color and one tree in it and</font>

200
00:11:28,709 --> 00:11:35,699
it's just repeated to fill the polygon

201
00:11:31,670 --> 00:11:39,870
<font color="#E5E5E5">and we have building similar that sort</font>

202
00:11:35,699 --> 00:11:45,899
of<font color="#CCCCCC"> loss SOI</font><font color="#E5E5E5"> to 3d buildings by taking</font>

203
00:11:39,870 --> 00:11:49,140
the building height<font color="#E5E5E5"> into account so now</font>

204
00:11:45,899 --> 00:11:50,579
let's go to the<font color="#CCCCCC"> bison part and start</font>

205
00:11:49,140 --> 00:11:55,620
with the simplest example<font color="#E5E5E5"> you can have</font>

206
00:11:50,579 --> 00:11:59,579
<font color="#E5E5E5">you just import the map</font><font color="#CCCCCC"> neck bindings we</font>

207
00:11:55,620 --> 00:12:04,470
create a map of 600 pixels wide<font color="#E5E5E5"> 300</font>

208
00:11:59,579 --> 00:12:06,349
pixels high and<font color="#E5E5E5"> we render the map to a</font>

209
00:12:04,470 --> 00:12:10,130
file

210
00:12:06,350 --> 00:12:13,430
<font color="#E5E5E5">file</font><font color="#CCCCCC"> name.for</font><font color="#E5E5E5"> PNG format PNG and</font>

211
00:12:10,130 --> 00:12:17,120
obviously there is nothing<font color="#E5E5E5"> in it yet</font><font color="#CCCCCC"> you</font>

212
00:12:13,430 --> 00:12:20,750
just<font color="#CCCCCC"> get a 300</font><font color="#E5E5E5"> per 600 pixel image with</font>

213
00:12:17,120 --> 00:12:23,600
transparent background<font color="#CCCCCC"> so let's add a</font>

214
00:12:20,750 --> 00:12:28,850
<font color="#E5E5E5">little bit to</font><font color="#CCCCCC"> it first we give the map a</font>

215
00:12:23,600 --> 00:12:33,410
background color<font color="#E5E5E5"> steel blue here then we</font>

216
00:12:28,850 --> 00:12:35,329
define a polygon<font color="#CCCCCC"> symbolize er</font><font color="#E5E5E5"> the only</font>

217
00:12:33,410 --> 00:12:39,980
<font color="#E5E5E5">style information</font><font color="#CCCCCC"> we give it is fill all</font>

218
00:12:35,329 --> 00:12:44,750
the polygons you see in green and<font color="#CCCCCC"> we</font>

219
00:12:39,980 --> 00:12:47,959
have<font color="#E5E5E5"> to set up style rule that binds</font><font color="#CCCCCC"> to</font>

220
00:12:44,750 --> 00:12:51,139
the<font color="#E5E5E5"> symbolise</font><font color="#CCCCCC"> er</font><font color="#E5E5E5"> you have to</font><font color="#CCCCCC"> register</font>

221
00:12:47,959 --> 00:12:54,859
the style rule here under the<font color="#E5E5E5"> name of</font>

222
00:12:51,139 --> 00:12:58,610
countries in the map<font color="#E5E5E5"> and then we define</font>

223
00:12:54,860 --> 00:13:01,250
a layer named world<font color="#E5E5E5"> and that has a data</font>

224
00:12:58,610 --> 00:13:04,040
source<font color="#CCCCCC"> that is a shape file that</font>

225
00:13:01,250 --> 00:13:10,459
contains all borders of all<font color="#E5E5E5"> countries in</font>

226
00:13:04,040 --> 00:13:14,029
<font color="#CCCCCC">the</font><font color="#E5E5E5"> world then we add</font><font color="#CCCCCC"> that Malaya to the</font>

227
00:13:10,459 --> 00:13:15,739
map we do a zoom<font color="#E5E5E5"> all</font><font color="#CCCCCC"> that zooms in on</font>

228
00:13:14,029 --> 00:13:17,899
all the data we have<font color="#E5E5E5"> on the map so that</font>

229
00:13:15,740 --> 00:13:22,459
<font color="#CCCCCC">is the map is exactly as large as it has</font>

230
00:13:17,899 --> 00:13:26,089
to be to draw all data we specified and

231
00:13:22,459 --> 00:13:29,388
again we<font color="#E5E5E5"> run it into</font><font color="#CCCCCC"> a file</font><font color="#E5E5E5"> arms now</font>

232
00:13:26,089 --> 00:13:32,269
<font color="#E5E5E5">obviously something so we see all the</font>

233
00:13:29,389 --> 00:13:33,920
<font color="#CCCCCC">countries in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> world and</font><font color="#E5E5E5"> we also see</font>

234
00:13:32,269 --> 00:13:36,589
the<font color="#E5E5E5"> borders</font><font color="#CCCCCC"> even though I didn't specify</font>

235
00:13:33,920 --> 00:13:38,930
any border style that's actually an

236
00:13:36,589 --> 00:13:42,170
artifact<font color="#E5E5E5"> as the polygons symbolize it as</font>

237
00:13:38,930 --> 00:13:45,500
<font color="#CCCCCC">an tile izing on the borders so that is</font>

238
00:13:42,170 --> 00:13:48,969
what's producing the the borders here we

239
00:13:45,500 --> 00:13:48,970
will turn that<font color="#CCCCCC"> off in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> next example</font>

240
00:13:49,269 --> 00:13:55,790
so the style<font color="#CCCCCC"> rules</font><font color="#E5E5E5"> can also filter on</font>

241
00:13:53,269 --> 00:13:58,339
the input data<font color="#E5E5E5"> now if you want to have a</font>

242
00:13:55,790 --> 00:14:03,769
map<font color="#CCCCCC"> of alt map that has</font><font color="#E5E5E5"> Germany standing</font>

243
00:13:58,339 --> 00:14:06,019
out<font color="#E5E5E5"> we can add</font><font color="#CCCCCC"> oh yeah first of</font><font color="#E5E5E5"> all we</font>

244
00:14:03,769 --> 00:14:09,829
<font color="#E5E5E5">take the symbolized from the last</font>

245
00:14:06,019 --> 00:14:14,079
example<font color="#CCCCCC"> and</font><font color="#E5E5E5"> put analyzing factor to</font><font color="#CCCCCC"> 0 to</font>

246
00:14:09,829 --> 00:14:14,079
get<font color="#E5E5E5"> rid</font><font color="#CCCCCC"> of all these</font><font color="#E5E5E5"> border artifacts</font>

247
00:14:14,250 --> 00:14:21,600
look just the rule<font color="#E5E5E5"> so now we create</font><font color="#CCCCCC"> a</font>

248
00:14:18,720 --> 00:14:23,630
second<font color="#CCCCCC"> symbolize object</font><font color="#E5E5E5"> I'll say</font><font color="#CCCCCC"> okay</font>

249
00:14:21,600 --> 00:14:27,450
this one<font color="#CCCCCC"> is going to</font><font color="#E5E5E5"> be filled in rat</font>

250
00:14:23,630 --> 00:14:31,220
and we set up a second rule<font color="#CCCCCC"> and this</font>

251
00:14:27,450 --> 00:14:36,420
rule gets a<font color="#E5E5E5"> filter so it filters by</font>

252
00:14:31,220 --> 00:14:41,010
expression by the<font color="#E5E5E5"> name by the field is</font>

253
00:14:36,420 --> 00:14:46,650
<font color="#E5E5E5">named name in the input and the name</font>

254
00:14:41,010 --> 00:14:50,010
should<font color="#CCCCCC"> be Germany</font><font color="#E5E5E5"> I'm done we</font><font color="#CCCCCC"> draw it</font>

255
00:14:46,650 --> 00:14:52,050
again<font color="#E5E5E5"> and we have the map now without</font>

256
00:14:50,010 --> 00:15:00,150
the<font color="#E5E5E5"> border artifacts but we have Germany</font>

257
00:14:52,050 --> 00:15:03,930
standing out in red so<font color="#CCCCCC"> that was the</font>

258
00:15:00,150 --> 00:15:08,340
working<font color="#E5E5E5"> in doing it in Python only and</font>

259
00:15:03,930 --> 00:15:13,349
<font color="#CCCCCC">let's now look at the XML version that</font>

260
00:15:08,340 --> 00:15:17,550
is much shorter<font color="#CCCCCC"> as all it does is to</font>

261
00:15:13,350 --> 00:15:19,610
load the world<font color="#E5E5E5"> XML file here</font><font color="#CCCCCC"> zoom</font><font color="#E5E5E5"> in on</font>

262
00:15:17,550 --> 00:15:24,030
the data<font color="#E5E5E5"> again and to render</font><font color="#CCCCCC"> into the</font>

263
00:15:19,610 --> 00:15:27,180
PNG file the map<font color="#E5E5E5"> XML looks like this</font>

264
00:15:24,030 --> 00:15:30,510
starts<font color="#CCCCCC"> with a map tag we can give the</font>

265
00:15:27,180 --> 00:15:33,359
<font color="#CCCCCC">background color we have the</font><font color="#E5E5E5"> polygon</font>

266
00:15:30,510 --> 00:15:36,330
style that<font color="#E5E5E5"> only fields every country in</font>

267
00:15:33,360 --> 00:15:39,570
green<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> second</font><font color="#CCCCCC"> one with the</font>

268
00:15:36,330 --> 00:15:45,930
filter for Germany<font color="#CCCCCC"> but fields in red</font><font color="#E5E5E5"> and</font>

269
00:15:39,570 --> 00:15:48,510
we have<font color="#E5E5E5"> a layer that</font><font color="#CCCCCC"> uses the</font><font color="#E5E5E5"> star we</font>

270
00:15:45,930 --> 00:15:53,609
defined above it uses the country

271
00:15:48,510 --> 00:15:58,040
shapefile again and obviously or

272
00:15:53,610 --> 00:15:58,040
hopefully yeah produces the same result

273
00:16:02,680 --> 00:16:08,540
now<font color="#E5E5E5"> forward using symbolizes in detail I</font>

274
00:16:06,290 --> 00:16:13,480
have created two simple<font color="#CCCCCC"> geo</font><font color="#E5E5E5"> JSON files</font>

275
00:16:08,540 --> 00:16:15,680
that<font color="#CCCCCC"> are values now so instead of the</font>

276
00:16:13,480 --> 00:16:19,370
<font color="#E5E5E5">shapefile I used for all the borders and</font>

277
00:16:15,680 --> 00:16:21,370
I'll use example<font color="#E5E5E5"> one</font><font color="#CCCCCC"> GU</font><font color="#E5E5E5"> Jason now only</font>

278
00:16:19,370 --> 00:16:25,040
<font color="#E5E5E5">have a very simple point symbolized</font>

279
00:16:21,370 --> 00:16:29,810
<font color="#CCCCCC">there just puts a single simple point</font>

280
00:16:25,040 --> 00:16:31,790
<font color="#E5E5E5">PNG image on the point position this is</font>

281
00:16:29,810 --> 00:16:38,359
here's a<font color="#E5E5E5"> trace</font><font color="#CCCCCC"> and file for this just</font>

282
00:16:31,790 --> 00:16:39,860
containing two points so we get a map

283
00:16:38,360 --> 00:16:43,070
<font color="#E5E5E5">that doesn't really look like a map but</font>

284
00:16:39,860 --> 00:16:48,950
only has two points<font color="#CCCCCC"> on it we can do the</font>

285
00:16:43,070 --> 00:16:52,580
same for<font color="#CCCCCC"> jason containing a line this</font>

286
00:16:48,950 --> 00:16:57,470
line also<font color="#E5E5E5"> has extra property name which</font>

287
00:16:52,580 --> 00:16:59,380
is test<font color="#CCCCCC"> read here giving you slightly</font>

288
00:16:57,470 --> 00:17:01,820
more<font color="#CCCCCC"> confused</font>

289
00:16:59,380 --> 00:17:04,609
complicated symbolize<font color="#CCCCCC"> ur so first we</font>

290
00:17:01,820 --> 00:17:08,059
<font color="#CCCCCC">need a slightly more complicated rule</font><font color="#E5E5E5"> so</font>

291
00:17:04,609 --> 00:17:11,479
first we use a line symbolize<font color="#E5E5E5"> ur</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> just</font>

292
00:17:08,059 --> 00:17:13,970
says paint the line in blue<font color="#E5E5E5"> and with the</font>

293
00:17:11,480 --> 00:17:18,679
stroke width of<font color="#E5E5E5"> three pixels or three</font>

294
00:17:13,970 --> 00:17:22,910
points<font color="#CCCCCC"> actually and then we use the text</font>

295
00:17:18,679 --> 00:17:26,510
<font color="#CCCCCC">symbolize</font><font color="#E5E5E5"> ur that has placement line is</font>

296
00:17:22,910 --> 00:17:28,069
text should<font color="#E5E5E5"> be along the line just given</font>

297
00:17:26,510 --> 00:17:31,730
a font name and<font color="#CCCCCC"> it's given a fill</font><font color="#E5E5E5"> color</font>

298
00:17:28,069 --> 00:17:35,120
and<font color="#E5E5E5"> a halo fill that will we would see</font>

299
00:17:31,730 --> 00:17:37,820
in<font color="#CCCCCC"> the example that looks</font><font color="#E5E5E5"> like so this</font>

300
00:17:35,120 --> 00:17:40,520
<font color="#E5E5E5">is all simple</font><font color="#CCCCCC"> tests treat</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> the blue</font>

301
00:17:37,820 --> 00:17:42,080
line<font color="#CCCCCC"> we use the black text on</font><font color="#E5E5E5"> it and the</font>

302
00:17:40,520 --> 00:17:45,170
halo is the slide

303
00:17:42,080 --> 00:17:46,580
white shadow along the letters so<font color="#E5E5E5"> that</font>

304
00:17:45,170 --> 00:17:50,090
they<font color="#E5E5E5"> stick a bit more out from the</font>

305
00:17:46,580 --> 00:17:51,678
background<font color="#E5E5E5"> so even if the text would be</font>

306
00:17:50,090 --> 00:17:56,149
painted on black background it<font color="#E5E5E5"> would</font>

307
00:17:51,679 --> 00:18:00,700
still be<font color="#E5E5E5"> visible</font><font color="#CCCCCC"> then there</font><font color="#E5E5E5"> are the</font>

308
00:17:56,150 --> 00:18:00,700
other<font color="#E5E5E5"> symbolizes our already mentioned</font>

309
00:18:01,600 --> 00:18:09,679
<font color="#CCCCCC">described here once again then finally</font>

310
00:18:06,860 --> 00:18:13,639
you may want<font color="#CCCCCC"> to decorate your map</font><font color="#E5E5E5"> so you</font>

311
00:18:09,680 --> 00:18:15,800
know<font color="#E5E5E5"> don't only want to have rendered we</font>

312
00:18:13,640 --> 00:18:17,980
<font color="#E5E5E5">solved but you also want to have a title</font>

313
00:18:15,800 --> 00:18:21,800
<font color="#E5E5E5">on it a copyright notice on</font><font color="#CCCCCC"> it or stuff</font>

314
00:18:17,980 --> 00:18:24,980
<font color="#E5E5E5">whatever</font><font color="#CCCCCC"> you can think of and for this</font>

315
00:18:21,800 --> 00:18:28,700
we<font color="#CCCCCC"> can combine the map</font><font color="#E5E5E5"> Nick my earnings</font>

316
00:18:24,980 --> 00:18:30,770
and the<font color="#CCCCCC"> Cairo bindings in Pisan as map</font>

317
00:18:28,700 --> 00:18:33,830
<font color="#E5E5E5">Nick can use two different render</font>

318
00:18:30,770 --> 00:18:35,290
Beckett's one is the library called<font color="#CCCCCC"> a GG</font>

319
00:18:33,830 --> 00:18:39,139
that is only<font color="#E5E5E5"> used for</font><font color="#CCCCCC"> high quality</font>

320
00:18:35,290 --> 00:18:42,620
bitmaps<font color="#CCCCCC"> and it can use the Cairo library</font>

321
00:18:39,140 --> 00:18:46,610
<font color="#E5E5E5">both for bitmaps and for all the vector</font>

322
00:18:42,620 --> 00:18:50,000
formats so for SVG PNG epic<font color="#E5E5E5"> SVG PDF and</font>

323
00:18:46,610 --> 00:18:52,820
PostScript<font color="#CCCCCC"> and so here</font><font color="#E5E5E5"> we do</font><font color="#CCCCCC"> not give it</font>

324
00:18:50,000 --> 00:18:58,550
a<font color="#E5E5E5"> file name right</font><font color="#CCCCCC"> away but we first</font>

325
00:18:52,820 --> 00:19:00,620
define<font color="#E5E5E5"> Kairos our first that has the</font>

326
00:18:58,550 --> 00:19:05,360
<font color="#E5E5E5">file name then we create a</font><font color="#CCCCCC"> Cairo drawing</font>

327
00:19:00,620 --> 00:19:11,689
context<font color="#E5E5E5"> then we set up our map as we did</font>

328
00:19:05,360 --> 00:19:16,879
<font color="#E5E5E5">before but now instead to writing to a</font>

329
00:19:11,690 --> 00:19:19,430
file<font color="#E5E5E5"> we render to</font><font color="#CCCCCC"> the Cairo context and</font>

330
00:19:16,880 --> 00:19:22,220
then we can use<font color="#E5E5E5"> that context and put</font>

331
00:19:19,430 --> 00:19:26,720
<font color="#E5E5E5">extra things in there</font><font color="#CCCCCC"> like here simple</font>

332
00:19:22,220 --> 00:19:28,790
rectangle so the two dots are from our

333
00:19:26,720 --> 00:19:35,210
geo<font color="#E5E5E5"> basin map rendered pan-ethnic and</font>

334
00:19:28,790 --> 00:19:39,379
the rectangle is from -<font color="#CCCCCC"> Cairo we can</font>

335
00:19:35,210 --> 00:19:45,320
also<font color="#E5E5E5"> use that</font><font color="#CCCCCC"> for putting extra images</font>

336
00:19:39,380 --> 00:19:47,300
<font color="#CCCCCC">in</font><font color="#E5E5E5"> our map like here our compass rose</font>

337
00:19:45,320 --> 00:19:51,939
<font color="#E5E5E5">that will just tell us where</font><font color="#CCCCCC"> to north on</font>

338
00:19:47,300 --> 00:19:58,040
the map<font color="#E5E5E5"> or we can</font><font color="#CCCCCC"> use the</font><font color="#E5E5E5"> same for text</font>

339
00:19:51,940 --> 00:20:02,180
and so in<font color="#E5E5E5"> summary we now have a solution</font>

340
00:19:58,040 --> 00:20:05,450
<font color="#E5E5E5">that can render us a base map like here</font>

341
00:20:02,180 --> 00:20:07,670
you could put the last title on<font color="#CCCCCC"> top you</font>

342
00:20:05,450 --> 00:20:11,060
couldn't pull<font color="#CCCCCC"> it</font><font color="#E5E5E5"> a copyright notice on</font>

343
00:20:07,670 --> 00:20:14,240
<font color="#E5E5E5">the bottom</font><font color="#CCCCCC"> this special</font><font color="#E5E5E5"> case is a</font>

344
00:20:11,060 --> 00:20:16,129
neighborhood<font color="#CCCCCC"> error map of my area where</font>

345
00:20:14,240 --> 00:20:18,750
<font color="#E5E5E5">live</font>

346
00:20:16,130 --> 00:20:21,210
it's not<font color="#CCCCCC"> very</font><font color="#E5E5E5"> well visible but the extra</font>

347
00:20:18,750 --> 00:20:23,280
markers here on the map<font color="#E5E5E5"> and these</font>

348
00:20:21,210 --> 00:20:25,620
markers have numbers<font color="#E5E5E5"> and corresponds to</font>

349
00:20:23,280 --> 00:20:28,530
the list on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> right so if you look for</font>

350
00:20:25,620 --> 00:20:34,290
the nearest nose or nearest

351
00:20:28,530 --> 00:20:36,030
hospital you know it is in square<font color="#E5E5E5"> F 9 or</font>

352
00:20:34,290 --> 00:20:39,210
if you see the marker here and want to

353
00:20:36,030 --> 00:20:41,460
know<font color="#CCCCCC"> what it</font><font color="#E5E5E5"> is if he could see the</font>

354
00:20:39,210 --> 00:20:42,930
number in<font color="#CCCCCC"> here it would be a 3</font><font color="#E5E5E5"> and he</font>

355
00:20:41,460 --> 00:20:46,920
could look it up on<font color="#CCCCCC"> the index on the</font>

356
00:20:42,930 --> 00:20:49,830
right to find what is market 3 there is

357
00:20:46,920 --> 00:20:52,350
<font color="#E5E5E5">also a JavaScript front-end for that so</font>

358
00:20:49,830 --> 00:20:58,530
you can produce this kind<font color="#E5E5E5"> of map as PDF</font>

359
00:20:52,350 --> 00:21:00,689
yourself on the URL<font color="#CCCCCC"> of Bob actually this</font>

360
00:20:58,530 --> 00:21:05,070
all stems from<font color="#E5E5E5"> a solution</font><font color="#CCCCCC"> called map</font>

361
00:21:00,690 --> 00:21:10,500
asthmatic that is also a web front-end

362
00:21:05,070 --> 00:21:12,689
<font color="#E5E5E5">for creating maps from which I got all</font>

363
00:21:10,500 --> 00:21:15,930
the knowledge for<font color="#E5E5E5"> this and that is used</font>

364
00:21:12,690 --> 00:21:18,750
to<font color="#E5E5E5"> either print single page large format</font>

365
00:21:15,930 --> 00:21:23,310
PDFs<font color="#E5E5E5"> where is the speed and mix it on</font>

366
00:21:18,750 --> 00:21:27,540
the side<font color="#E5E5E5"> or you</font><font color="#CCCCCC"> can also use it using</font>

367
00:21:23,310 --> 00:21:31,980
the PDF our context<font color="#CCCCCC"> Akari Oh to produce</font>

368
00:21:27,540 --> 00:21:34,050
<font color="#E5E5E5">multi-page PDF maps like here are the</font>

369
00:21:31,980 --> 00:21:36,540
<font color="#E5E5E5">first pages of a little</font><font color="#CCCCCC"> atlas put</font>

370
00:21:34,050 --> 00:21:39,960
<font color="#E5E5E5">Liggett so you have a</font><font color="#CCCCCC"> title page</font><font color="#E5E5E5"> you see</font>

371
00:21:36,540 --> 00:21:42,149
<font color="#E5E5E5">which area</font><font color="#CCCCCC"> is on which detail page and</font>

372
00:21:39,960 --> 00:21:44,820
then there are<font color="#E5E5E5"> 60 detail pages behind</font>

373
00:21:42,150 --> 00:21:50,340
this that<font color="#E5E5E5"> form and actually little town</font>

374
00:21:44,820 --> 00:21:53,820
<font color="#CCCCCC">Atlas so what I</font><font color="#E5E5E5"> learned working on this</font>

375
00:21:50,340 --> 00:21:56,010
is<font color="#E5E5E5"> code-wise it turned out to be easier</font>

376
00:21:53,820 --> 00:21:58,740
<font color="#CCCCCC">than I thought at least as long</font><font color="#E5E5E5"> as you</font>

377
00:21:56,010 --> 00:22:01,710
use<font color="#E5E5E5"> XML styles and not the programmatic</font>

378
00:21:58,740 --> 00:22:04,290
starts there's always the devil<font color="#E5E5E5"> in the</font>

379
00:22:01,710 --> 00:22:08,310
details<font color="#E5E5E5"> and in the style it never looks</font>

380
00:22:04,290 --> 00:22:10,230
like you<font color="#E5E5E5"> want to in the first try it is</font>

381
00:22:08,310 --> 00:22:14,159
a very flexible solution if you<font color="#E5E5E5"> want you</font>

382
00:22:10,230 --> 00:22:17,190
to mix mapped render map data<font color="#CCCCCC"> and custom</font>

383
00:22:14,160 --> 00:22:20,970
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the data custom image decorations</font>

384
00:22:17,190 --> 00:22:23,520
<font color="#E5E5E5">and unfortunately what almost also found</font>

385
00:22:20,970 --> 00:22:27,650
is the documentation<font color="#E5E5E5"> of</font><font color="#CCCCCC"> mattnic</font><font color="#E5E5E5"> and</font>

386
00:22:23,520 --> 00:22:33,660
<font color="#E5E5E5">APNIC</font><font color="#CCCCCC"> parts</font><font color="#E5E5E5"> and bindings is not optimal</font>

387
00:22:27,650 --> 00:22:42,450
<font color="#E5E5E5">okay thank you</font>

388
00:22:33,660 --> 00:22:44,400
I also have to sample prints in here but

389
00:22:42,450 --> 00:22:46,260
I think<font color="#CCCCCC"> we</font><font color="#E5E5E5"> ran out of time so if you</font>

390
00:22:44,400 --> 00:22:47,540
<font color="#E5E5E5">want to see them</font><font color="#CCCCCC"> you could do that</font>

391
00:22:46,260 --> 00:23:02,760
outside

392
00:22:47,540 --> 00:23:04,620
<font color="#CCCCCC">any quick questions yeah yes I left that</font>

393
00:23:02,760 --> 00:23:04,920
out<font color="#E5E5E5"> because of the time slot was too</font>

394
00:23:04,620 --> 00:23:09,600
<font color="#E5E5E5">short</font>

395
00:23:04,920 --> 00:23:12,120
I have conversion code for converting

396
00:23:09,600 --> 00:23:14,760
pixel coordinates<font color="#E5E5E5"> into map coordinates</font>

397
00:23:12,120 --> 00:23:25,309
<font color="#E5E5E5">and the other way</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> the map</font>

398
00:23:14,760 --> 00:23:27,510
<font color="#E5E5E5">NIC map object one more maybe look okay</font>

399
00:23:25,309 --> 00:23:35,510
outside

400
00:23:27,510 --> 00:23:35,510
[Applause]

