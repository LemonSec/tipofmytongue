1
00:00:05,800 --> 00:00:11,170
we are ready<font color="#E5E5E5"> to start our</font><font color="#CCCCCC"> next speaker</font>

2
00:00:09,020 --> 00:00:11,170
<font color="#E5E5E5">is</font>

3
00:00:17,300 --> 00:00:22,320
so hi I'm<font color="#E5E5E5"> here</font><font color="#CCCCCC"> to present you a gtk</font>

4
00:00:21,720 --> 00:00:24,660
<font color="#CCCCCC">eraser</font>

5
00:00:22,320 --> 00:00:26,850
it wouldn't<font color="#E5E5E5"> be a technical speak at all</font>

6
00:00:24,660 --> 00:00:29,730
so if you have technical<font color="#CCCCCC"> questions we</font>

7
00:00:26,850 --> 00:00:31,669
can speak<font color="#CCCCCC"> after</font><font color="#E5E5E5"> the talk so duty cares</font>

8
00:00:29,730 --> 00:00:35,310
<font color="#CCCCCC">how to make unsafely</font>

9
00:00:31,669 --> 00:00:37,680
so first what is<font color="#CCCCCC"> Duty K so it's a good</font>

10
00:00:35,310 --> 00:00:41,040
<font color="#CCCCCC">Nam UI your library where we were used</font>

11
00:00:37,680 --> 00:00:43,590
in the Linux environments so

12
00:00:41,040 --> 00:00:46,620
cross-platform<font color="#E5E5E5"> it works as well on the</font>

13
00:00:43,590 --> 00:00:51,830
Mac and<font color="#CCCCCC"> as far as I</font><font color="#E5E5E5"> know it works as</font>

14
00:00:46,620 --> 00:00:55,349
<font color="#E5E5E5">well</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> Windows fine so a bit of history</font>

15
00:00:51,830 --> 00:00:59,070
<font color="#E5E5E5">at first it was studied by very</font><font color="#CCCCCC"> Mary</font><font color="#E5E5E5"> are</font>

16
00:00:55,350 --> 00:01:02,730
littering in 2015 it was when<font color="#E5E5E5"> we were</font>

17
00:00:59,070 --> 00:01:06,119
<font color="#CCCCCC">before</font><font color="#E5E5E5"> office in still at school we</font>

18
00:01:02,730 --> 00:01:09,960
<font color="#E5E5E5">started it to learn a rest so first it</font>

19
00:01:06,119 --> 00:01:13,530
was called<font color="#CCCCCC"> gtk and we have a sub</font><font color="#E5E5E5"> crates</font>

20
00:01:09,960 --> 00:01:15,720
for each<font color="#CCCCCC"> glom library like a</font><font color="#E5E5E5"> Jo JD band</font>

21
00:01:13,530 --> 00:01:21,450
stuff it was all in<font color="#E5E5E5"> the same repository</font>

22
00:01:15,720 --> 00:01:23,520
<font color="#E5E5E5">at the opposite of cranky so the first</font>

23
00:01:21,450 --> 00:01:25,890
<font color="#CCCCCC">implementation was very simple it</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> a</font>

24
00:01:23,520 --> 00:01:28,970
one to one binding so<font color="#CCCCCC"> you had a function</font>

25
00:01:25,890 --> 00:01:33,060
<font color="#CCCCCC">and object</font><font color="#E5E5E5"> it was the same</font><font color="#CCCCCC"> interests so</font>

26
00:01:28,970 --> 00:01:38,490
not<font color="#E5E5E5"> much</font><font color="#CCCCCC"> of entities but you could use a</font>

27
00:01:33,060 --> 00:01:40,740
<font color="#CCCCCC">gtk interest so now the cons so yeah it</font>

28
00:01:38,490 --> 00:01:44,850
<font color="#E5E5E5">was at the time very slow to compile we</font>

29
00:01:40,740 --> 00:01:48,199
were<font color="#E5E5E5"> still in 2015 it wasn't</font><font color="#CCCCCC"> that we had</font>

30
00:01:44,850 --> 00:01:52,740
a<font color="#E5E5E5"> huge</font><font color="#CCCCCC"> macro to generate our signals</font>

31
00:01:48,200 --> 00:01:56,729
wasn't a very very efficient so<font color="#CCCCCC"> also</font>

32
00:01:52,740 --> 00:01:58,979
since it was bound by him<font color="#CCCCCC"> a lot of typos</font>

33
00:01:56,729 --> 00:02:02,760
human errors were there

34
00:01:58,979 --> 00:02:05,400
casting<font color="#CCCCCC"> unrolled</font><font color="#E5E5E5"> yeah just like I said</font>

35
00:02:02,760 --> 00:02:06,780
it was just<font color="#CCCCCC"> a wrapper around</font><font color="#E5E5E5"> the C code</font>

36
00:02:05,400 --> 00:02:09,599
<font color="#CCCCCC">just one</font><font color="#E5E5E5"> to one</font>

37
00:02:06,780 --> 00:02:13,409
not much<font color="#E5E5E5"> safety and at the time the</font>

38
00:02:09,598 --> 00:02:15,810
compiler was getting updated and having

39
00:02:13,409 --> 00:02:19,048
breaking changes like every two<font color="#E5E5E5"> or three</font>

40
00:02:15,810 --> 00:02:22,920
<font color="#CCCCCC">days</font><font color="#E5E5E5"> or so changing the</font><font color="#CCCCCC"> chart thousands</font>

41
00:02:19,049 --> 00:02:28,000
of lines at once was quite long<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a</font>

42
00:02:22,920 --> 00:02:31,869
library<font color="#E5E5E5"> as this big so that's</font>

43
00:02:28,000 --> 00:02:34,720
<font color="#CCCCCC">I think it was at</font><font color="#E5E5E5"> the start</font><font color="#CCCCCC"> of 2016 we</font>

44
00:02:31,870 --> 00:02:37,630
had a new contributor we brought the

45
00:02:34,720 --> 00:02:40,000
gear support some gear is a format which

46
00:02:37,630 --> 00:02:43,680
<font color="#CCCCCC">is used by the</font><font color="#E5E5E5"> genome libraries to</font>

47
00:02:40,000 --> 00:02:46,540
describe<font color="#CCCCCC"> the API and is used by</font><font color="#E5E5E5"> other</font>

48
00:02:43,680 --> 00:02:50,140
languages<font color="#E5E5E5"> to generate as our binding and</font>

49
00:02:46,540 --> 00:02:54,519
that's what we did investor with a whole

50
00:02:50,140 --> 00:02:57,579
new crate<font color="#E5E5E5"> gear which generates all</font><font color="#CCCCCC"> the</font>

51
00:02:54,520 --> 00:03:01,840
code so that's the first thing<font color="#E5E5E5"> we did we</font>

52
00:02:57,580 --> 00:03:05,080
also<font color="#CCCCCC"> reworked</font><font color="#E5E5E5"> all the GD p-- how to</font>

53
00:03:01,840 --> 00:03:07,030
explain the jalebi<font color="#E5E5E5"> is the base and we</font>

54
00:03:05,080 --> 00:03:11,610
had to rewrite it<font color="#E5E5E5"> in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make it a</font>

55
00:03:07,030 --> 00:03:14,530
work to build<font color="#CCCCCC"> upon it that it</font><font color="#E5E5E5"> thought</font>

56
00:03:11,610 --> 00:03:17,530
and so we did<font color="#CCCCCC"> that we have we could</font>

57
00:03:14,530 --> 00:03:20,440
bring<font color="#E5E5E5"> a whole new</font><font color="#CCCCCC"> rating system so now</font>

58
00:03:17,530 --> 00:03:23,920
you can say if a<font color="#E5E5E5"> tray if an object</font>

59
00:03:20,440 --> 00:03:26,410
inherits from another very helpful it

60
00:03:23,920 --> 00:03:29,410
was<font color="#CCCCCC"> a</font><font color="#E5E5E5"> prevents a from a casting from a</font>

61
00:03:26,410 --> 00:03:32,440
type to another<font color="#E5E5E5"> so</font><font color="#CCCCCC"> zit</font><font color="#E5E5E5"> and another</font>

62
00:03:29,410 --> 00:03:35,380
<font color="#CCCCCC">singer which I think it's still</font><font color="#E5E5E5"> a bit of</font>

63
00:03:32,440 --> 00:03:37,840
<font color="#CCCCCC">a debate</font><font color="#E5E5E5"> but we</font><font color="#CCCCCC"> have decided</font><font color="#E5E5E5"> to split</font>

64
00:03:35,380 --> 00:03:40,750
<font color="#E5E5E5">libraries into is their own repository</font>

65
00:03:37,840 --> 00:03:42,970
<font color="#E5E5E5">so now gdb isn't in GT carry repository</font>

66
00:03:40,750 --> 00:03:45,400
anymore it's a the same organization but

67
00:03:42,970 --> 00:03:50,430
<font color="#E5E5E5">not the same repository which has its</font>

68
00:03:45,400 --> 00:03:53,500
issues<font color="#CCCCCC"> the for every read that's Oda Mae</font>

69
00:03:50,430 --> 00:03:58,000
<font color="#CCCCCC">so the</font><font color="#E5E5E5"> neutral system is basically based</font>

70
00:03:53,500 --> 00:04:01,000
<font color="#CCCCCC">on this one is earth</font><font color="#E5E5E5"> so now when you</font>

71
00:03:58,000 --> 00:04:04,870
have<font color="#CCCCCC"> a function for example</font><font color="#E5E5E5"> for the</font>

72
00:04:01,000 --> 00:04:08,019
<font color="#CCCCCC">widget you take is</font><font color="#E5E5E5"> a widget so every</font>

73
00:04:04,870 --> 00:04:12,150
object which implements this<font color="#E5E5E5"> trait can</font>

74
00:04:08,019 --> 00:04:12,150
use<font color="#E5E5E5"> the videos the</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this function so</font>

75
00:04:12,299 --> 00:04:21,220
<font color="#CCCCCC">now</font><font color="#E5E5E5"> why is it better to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> GT k RS over</font>

76
00:04:16,779 --> 00:04:23,440
<font color="#E5E5E5">DT</font><font color="#CCCCCC"> karaoke for a few things so like it's</font>

77
00:04:21,220 --> 00:04:28,600
rotten let's<font color="#E5E5E5"> start with compiler errors</font>

78
00:04:23,440 --> 00:04:31,120
<font color="#E5E5E5">type conversions so in C you can totally</font>

79
00:04:28,600 --> 00:04:34,090
do<font color="#CCCCCC"> that it's not</font><font color="#E5E5E5"> a program not much</font>

80
00:04:31,120 --> 00:04:37,630
<font color="#CCCCCC">texture</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Resta you will do it with by</font>

81
00:04:34,090 --> 00:04:38,919
<font color="#CCCCCC">using the Abkhaz metal it's a big</font>

82
00:04:37,630 --> 00:04:41,630
difference being<font color="#E5E5E5"> your</font>

83
00:04:38,919 --> 00:04:43,580
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> at this</font><font color="#E5E5E5"> point there isn't much</font>

84
00:04:41,630 --> 00:04:48,320
it suggested in<font color="#CCCCCC"> rester we have</font><font color="#E5E5E5"> your</font>

85
00:04:43,580 --> 00:04:51,169
checks have done at compile time<font color="#E5E5E5"> so here</font>

86
00:04:48,320 --> 00:04:54,849
if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> try to make an invalid cast it</font>

87
00:04:51,169 --> 00:04:57,859
will just set fault<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> run it so</font>

88
00:04:54,850 --> 00:04:59,660
it's inconvenient<font color="#E5E5E5"> to discover there is</font>

89
00:04:57,860 --> 00:05:01,940
<font color="#E5E5E5">an error in</font><font color="#CCCCCC"> your code</font>

90
00:04:59,660 --> 00:05:04,610
after being compiled when distributed

91
00:05:01,940 --> 00:05:06,740
and in rest if<font color="#E5E5E5"> you trace the same</font>

92
00:05:04,610 --> 00:05:08,600
<font color="#CCCCCC">testing the type which isn't the</font>

93
00:05:06,740 --> 00:05:10,280
children of a window<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> a</font>

94
00:05:08,600 --> 00:05:12,620
<font color="#E5E5E5">button is the children of a widget but</font>

95
00:05:10,280 --> 00:05:14,690
isn't a bit children of a window<font color="#E5E5E5"> if you</font>

96
00:05:12,620 --> 00:05:16,760
create<font color="#CCCCCC"> you won't compile you will get an</font>

97
00:05:14,690 --> 00:05:19,610
error<font color="#E5E5E5"> so so trait isn't</font><font color="#CCCCCC"> implemented</font>

98
00:05:16,760 --> 00:05:23,870
<font color="#E5E5E5">therefore</font><font color="#CCCCCC"> gtk button it's quite</font>

99
00:05:19,610 --> 00:05:27,050
convenient<font color="#E5E5E5"> so yeah another advantage of</font>

100
00:05:23,870 --> 00:05:30,740
<font color="#E5E5E5">course is a</font><font color="#CCCCCC"> card</font><font color="#E5E5E5"> readability so I didn't</font>

101
00:05:27,050 --> 00:05:32,690
see<font color="#CCCCCC"> very verbose</font><font color="#E5E5E5"> in rest a bit less it's</font>

102
00:05:30,740 --> 00:05:39,889
the<font color="#E5E5E5"> advantage of object-oriented</font>

103
00:05:32,690 --> 00:05:42,350
languages<font color="#CCCCCC"> not to sell you here so some</font>

104
00:05:39,889 --> 00:05:44,900
<font color="#CCCCCC">other</font><font color="#E5E5E5"> games so they are quite a lot</font>

105
00:05:42,350 --> 00:05:46,690
brought by<font color="#E5E5E5"> rested</font><font color="#CCCCCC"> jackie</font><font color="#E5E5E5"> automatic</font>

106
00:05:44,900 --> 00:05:49,390
responding and<font color="#CCCCCC"> manual memory management</font>

107
00:05:46,690 --> 00:05:52,340
<font color="#E5E5E5">brought by the rest compiler or directly</font>

108
00:05:49,390 --> 00:05:54,740
the same consentrate<font color="#E5E5E5"> bonds which are</font>

109
00:05:52,340 --> 00:05:56,390
<font color="#E5E5E5">used for signals for example so like</font>

110
00:05:54,740 --> 00:05:58,610
that you're surely object won't be

111
00:05:56,390 --> 00:06:03,770
destroyed and<font color="#CCCCCC"> called</font><font color="#E5E5E5"> while being the</font>

112
00:05:58,610 --> 00:06:06,650
after been destroyed make sense<font color="#E5E5E5"> and we</font>

113
00:06:03,770 --> 00:06:09,380
enforce<font color="#E5E5E5"> attack when we generate</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> zi</font>

114
00:06:06,650 --> 00:06:12,109
<font color="#E5E5E5">api that</font><font color="#CCCCCC"> if you want a string or</font><font color="#E5E5E5"> pass</font>

115
00:06:09,380 --> 00:06:15,919
which<font color="#CCCCCC"> is very convenient</font><font color="#E5E5E5"> when you have</font>

116
00:06:12,110 --> 00:06:18,560
to to<font color="#E5E5E5"> open the file to</font><font color="#CCCCCC"> specify the title</font>

117
00:06:15,919 --> 00:06:24,409
<font color="#E5E5E5">that you would be sure you won't try to</font>

118
00:06:18,560 --> 00:06:27,050
do something<font color="#E5E5E5"> strange at least so like</font><font color="#CCCCCC"> i</font>

119
00:06:24,410 --> 00:06:33,260
said above everything<font color="#E5E5E5"> related to crochet</font>

120
00:06:27,050 --> 00:06:35,539
also signore's<font color="#CCCCCC"> cutbacks everything so</font>

121
00:06:33,260 --> 00:06:39,500
yeah<font color="#E5E5E5"> some</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> gangs of</font><font color="#CCCCCC"> cars and</font><font color="#E5E5E5"> now</font>

122
00:06:35,539 --> 00:06:41,750
you can't<font color="#E5E5E5"> have arrays which have invalid</font>

123
00:06:39,500 --> 00:06:44,180
size you come to give we don't allow to

124
00:06:41,750 --> 00:06:47,690
give<font color="#E5E5E5"> a size of an array when you give it</font>

125
00:06:44,180 --> 00:06:50,030
a to a function it's a<font color="#E5E5E5"> done</font><font color="#CCCCCC"> an array</font><font color="#E5E5E5"> is</font>

126
00:06:47,690 --> 00:06:50,770
a<font color="#CCCCCC"> five pointer so you have its cylinder</font>

127
00:06:50,030 --> 00:06:53,378
provide

128
00:06:50,770 --> 00:06:55,690
by the type it directly<font color="#E5E5E5"> so no need</font><font color="#CCCCCC"> to</font>

129
00:06:53,379 --> 00:06:58,060
<font color="#E5E5E5">have</font><font color="#CCCCCC"> it give the size anymore very</font>

130
00:06:55,690 --> 00:07:00,460
convenient and<font color="#E5E5E5"> I wrote to have a lot</font>

131
00:06:58,060 --> 00:07:02,440
less<font color="#E5E5E5"> error and of course is a strong</font>

132
00:07:00,460 --> 00:07:05,198
type system which is one<font color="#CCCCCC"> of the biggest</font>

133
00:07:02,440 --> 00:07:08,289
advantage of<font color="#E5E5E5"> Resta so you can't make</font><font color="#CCCCCC"> a</font>

134
00:07:05,199 --> 00:07:12,520
cast<font color="#E5E5E5"> whether however you want Plus what</font>

135
00:07:08,289 --> 00:07:15,520
the function it now at<font color="#E5E5E5"> this point to</font>

136
00:07:12,520 --> 00:07:19,599
what<font color="#E5E5E5"> remains to be done</font><font color="#CCCCCC"> well I think we</font>

137
00:07:15,520 --> 00:07:23,109
<font color="#E5E5E5">are around 90% of bindings automatically</font>

138
00:07:19,599 --> 00:07:25,539
<font color="#CCCCCC">are generated and</font><font color="#E5E5E5"> the most of missing</font>

139
00:07:23,110 --> 00:07:30,009
functionality is functions<font color="#E5E5E5"> objects are</font>

140
00:07:25,539 --> 00:07:33,818
clearly in jio<font color="#E5E5E5"> so I'm starting to write</font>

141
00:07:30,009 --> 00:07:34,690
new things in it directly<font color="#E5E5E5"> we'll see how</font>

142
00:07:33,819 --> 00:07:37,900
much<font color="#E5E5E5"> time</font><font color="#CCCCCC"> it takes</font>

143
00:07:34,690 --> 00:07:41,590
<font color="#E5E5E5">hopefully of humans oh yeah</font>

144
00:07:37,900 --> 00:07:44,560
we started recently<font color="#E5E5E5"> at the last egg</font>

145
00:07:41,590 --> 00:07:48,159
nominal rest<font color="#CCCCCC"> a quest to improve the a</font>

146
00:07:44,560 --> 00:07:50,889
synchronous<font color="#CCCCCC"> report which is a very aster</font>

147
00:07:48,159 --> 00:07:53,139
by a few people<font color="#E5E5E5"> so it's coming and of</font>

148
00:07:50,889 --> 00:07:58,000
course from now the documentation is

149
00:07:53,139 --> 00:08:01,120
generated at the same time as API<font color="#E5E5E5"> so we</font>

150
00:07:58,000 --> 00:08:04,150
directly have a<font color="#CCCCCC"> C documentation</font><font color="#E5E5E5"> not rest</font>

151
00:08:01,120 --> 00:08:07,449
one<font color="#E5E5E5"> so examples are in see a few a lot</font>

152
00:08:04,150 --> 00:08:10,210
of things<font color="#E5E5E5"> aren't perfect</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have still a</font>

153
00:08:07,449 --> 00:08:12,340
<font color="#E5E5E5">lot of work to do in either so it will</font>

154
00:08:10,210 --> 00:08:16,630
be<font color="#E5E5E5"> the next step I think once we are</font>

155
00:08:12,340 --> 00:08:21,099
<font color="#E5E5E5">done with the banking so beyond the</font>

156
00:08:16,630 --> 00:08:24,039
<font color="#CCCCCC">do-deca RS so we had a few people</font><font color="#E5E5E5"> from</font>

157
00:08:21,099 --> 00:08:27,610
<font color="#CCCCCC">the</font><font color="#E5E5E5"> genome community very interesting in</font>

158
00:08:24,039 --> 00:08:30,490
rest we started a<font color="#E5E5E5"> few a quest last year</font>

159
00:08:27,610 --> 00:08:34,390
about<font color="#E5E5E5"> this to write a</font><font color="#CCCCCC"> Signum class</font>

160
00:08:30,490 --> 00:08:39,539
project for<font color="#E5E5E5"> example where the previous</font>

161
00:08:34,390 --> 00:08:43,270
<font color="#E5E5E5">talker is from a genome</font><font color="#CCCCCC"> and yeah Heidi</font>

162
00:08:39,539 --> 00:08:46,270
<font color="#CCCCCC">there</font><font color="#E5E5E5"> is a Federico a big guy in a coma</font>

163
00:08:43,270 --> 00:08:49,569
which is rewriting<font color="#CCCCCC"> a</font><font color="#E5E5E5"> library</font><font color="#CCCCCC"> liber</font><font color="#E5E5E5"> as VG</font>

164
00:08:46,270 --> 00:08:53,640
in<font color="#CCCCCC"> rested</font><font color="#E5E5E5"> directly</font><font color="#CCCCCC"> you think that's</font>

165
00:08:49,570 --> 00:08:56,290
<font color="#E5E5E5">because of</font><font color="#CCCCCC"> him we</font><font color="#E5E5E5"> started it was</font><font color="#CCCCCC"> horses</font>

166
00:08:53,640 --> 00:08:58,390
and of<font color="#E5E5E5"> course yeah we have a</font><font color="#CCCCCC"> SOG</font><font color="#E5E5E5"> number</font>

167
00:08:56,290 --> 00:09:01,089
libraries which start to<font color="#E5E5E5"> have a binding</font>

168
00:08:58,390 --> 00:09:03,430
so just remove from I<font color="#E5E5E5"> don't know where</font>

169
00:09:01,089 --> 00:09:07,090
he is<font color="#CCCCCC"> but</font><font color="#E5E5E5"> yeah</font>

170
00:09:03,430 --> 00:09:10,449
we have a<font color="#CCCCCC"> web key to gtk</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> search</font>

171
00:09:07,090 --> 00:09:12,490
view and a<font color="#E5E5E5"> lot more so as long</font><font color="#CCCCCC"> as it has</font>

172
00:09:10,450 --> 00:09:15,550
a gear file<font color="#CCCCCC"> basically you can generate</font>

173
00:09:12,490 --> 00:09:17,790
<font color="#E5E5E5">it by automatically</font><font color="#CCCCCC"> I don't know how it</font>

174
00:09:15,550 --> 00:09:25,229
goes<font color="#E5E5E5"> for just Ramirez think it's mostly</font>

175
00:09:17,790 --> 00:09:28,630
<font color="#CCCCCC">Road backhand so now we have achieved a</font>

176
00:09:25,230 --> 00:09:31,900
good level I<font color="#E5E5E5"> think at this point I would</font>

177
00:09:28,630 --> 00:09:35,500
not<font color="#E5E5E5"> miss much we are on little details</font>

178
00:09:31,900 --> 00:09:37,240
<font color="#E5E5E5">now having deprecation having more doors</font>

179
00:09:35,500 --> 00:09:40,530
having your better interface<font color="#CCCCCC"> better</font>

180
00:09:37,240 --> 00:09:46,030
<font color="#CCCCCC">world and at this point</font><font color="#E5E5E5"> how we could we</font>

181
00:09:40,530 --> 00:09:48,069
do to<font color="#CCCCCC"> make</font><font color="#E5E5E5"> it even better and Ranma</font><font color="#CCCCCC"> has</font>

182
00:09:46,030 --> 00:09:50,319
been a great leader<font color="#CCCCCC"> for that</font>

183
00:09:48,070 --> 00:09:53,950
it's a another abstraction<font color="#E5E5E5"> there so I</font>

184
00:09:50,320 --> 00:09:56,910
will<font color="#CCCCCC"> let its crater speak for it and</font>

185
00:09:53,950 --> 00:09:56,910
have no<font color="#E5E5E5"> put so Mike</font>

186
00:10:04,670 --> 00:10:11,069
so as<font color="#CCCCCC"> Jung said realm is an obstruction</font>

187
00:10:08,550 --> 00:10:13,109
<font color="#CCCCCC">over GTRs which provides a more</font>

188
00:10:11,069 --> 00:10:16,019
idiomatic<font color="#CCCCCC"> way to create desktop</font>

189
00:10:13,110 --> 00:10:18,149
<font color="#E5E5E5">application and rust and it is based on</font>

190
00:10:16,019 --> 00:10:22,679
<font color="#CCCCCC">GTRs</font><font color="#E5E5E5"> and it also provides some support</font>

191
00:10:18,149 --> 00:10:26,100
<font color="#E5E5E5">for a synchronous programming so first</font>

192
00:10:22,679 --> 00:10:29,100
I'll cover some<font color="#CCCCCC"> pain points</font><font color="#E5E5E5"> I had when</font>

193
00:10:26,100 --> 00:10:32,369
working with GTA RS by developing a web

194
00:10:29,100 --> 00:10:35,040
browser so the<font color="#CCCCCC"> first problem I had is</font>

195
00:10:32,369 --> 00:10:38,100
when<font color="#E5E5E5"> you want to associate some data</font>

196
00:10:35,040 --> 00:10:40,889
with a widget<font color="#E5E5E5"> let's say</font><font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> the model</font>

197
00:10:38,100 --> 00:10:45,089
of your<font color="#E5E5E5"> application when you want</font><font color="#CCCCCC"> to do</font>

198
00:10:40,889 --> 00:10:48,809
that with GTRs because of the safety<font color="#E5E5E5"> we</font>

199
00:10:45,089 --> 00:10:51,779
had in<font color="#E5E5E5"> rust</font><font color="#CCCCCC"> we need to use an RC ref saw</font>

200
00:10:48,809 --> 00:10:55,170
so we<font color="#CCCCCC"> have a ref counted value that we</font>

201
00:10:51,779 --> 00:10:59,100
want<font color="#CCCCCC"> to check the be able</font><font color="#E5E5E5"> to borrow a</font>

202
00:10:55,170 --> 00:11:01,259
check the<font color="#CCCCCC"> burrow at</font><font color="#E5E5E5"> run time so we need</font>

203
00:10:59,100 --> 00:11:04,230
<font color="#E5E5E5">to use this boilerplate code with burrow</font>

204
00:11:01,259 --> 00:11:05,939
mat and burrow<font color="#E5E5E5"> when we want to update</font>

205
00:11:04,230 --> 00:11:08,610
the<font color="#E5E5E5"> model in a signal which is something</font>

206
00:11:05,939 --> 00:11:10,889
<font color="#E5E5E5">we want to do somewhat frequently in geo</font>

207
00:11:08,610 --> 00:11:12,629
applications<font color="#E5E5E5"> so that's never gonna make</font>

208
00:11:10,889 --> 00:11:15,089
<font color="#CCCCCC">its a</font><font color="#E5E5E5"> row prone because we only get the</font>

209
00:11:12,629 --> 00:11:18,720
<font color="#E5E5E5">error at</font><font color="#CCCCCC"> run time</font><font color="#E5E5E5"> instead of at compile</font>

210
00:11:15,089 --> 00:11:21,629
time<font color="#CCCCCC"> so one thing I</font><font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to tell you</font>

211
00:11:18,720 --> 00:11:23,629
that if you can<font color="#E5E5E5"> avoid using ref so it's</font>

212
00:11:21,629 --> 00:11:27,240
a good it's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> good thing to avoid</font><font color="#E5E5E5"> and</font>

213
00:11:23,629 --> 00:11:31,860
what I do<font color="#CCCCCC"> in well is that I I use a</font>

214
00:11:27,240 --> 00:11:34,949
<font color="#E5E5E5">wrestle but I'm just not telling you so</font>

215
00:11:31,860 --> 00:11:37,589
also you can do<font color="#CCCCCC"> a synchronous</font>

216
00:11:34,949 --> 00:11:40,229
programming with<font color="#CCCCCC"> jellyband stuff but</font>

217
00:11:37,589 --> 00:11:42,329
it's<font color="#E5E5E5"> not very ergonomic and I wanted to</font>

218
00:11:40,230 --> 00:11:46,589
<font color="#CCCCCC">integrate realm with the a synchronous</font>

219
00:11:42,329 --> 00:11:49,229
i/o library<font color="#E5E5E5"> universe which is Tokyo and</font>

220
00:11:46,589 --> 00:11:51,299
<font color="#E5E5E5">also since Russ does not provide inner</font>

221
00:11:49,230 --> 00:11:53,549
returns<font color="#E5E5E5"> you cannot do for</font><font color="#CCCCCC"> instance like</font>

222
00:11:51,299 --> 00:11:56,089
in valedictory new class<font color="#E5E5E5"> deriving from</font>

223
00:11:53,549 --> 00:11:58,980
an existing widget to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to use</font>

224
00:11:56,089 --> 00:12:02,100
this new widget like any other widgets

225
00:11:58,980 --> 00:12:05,850
<font color="#E5E5E5">so that's not possible in rust so I</font>

226
00:12:02,100 --> 00:12:07,589
wanted<font color="#E5E5E5"> to which realm be able to dig for</font>

227
00:12:05,850 --> 00:12:11,999
new widgets that<font color="#E5E5E5"> could be used the same</font>

228
00:12:07,589 --> 00:12:14,880
<font color="#E5E5E5">way as the</font><font color="#CCCCCC"> gtk widgets so</font><font color="#E5E5E5"> realm is</font>

229
00:12:11,999 --> 00:12:17,220
inspired by a<font color="#E5E5E5"> language that is called M</font>

230
00:12:14,880 --> 00:12:19,320
that is used for<font color="#E5E5E5"> developing client-side</font>

231
00:12:17,220 --> 00:12:21,270
<font color="#E5E5E5">application so</font><font color="#CCCCCC"> Elm is an eternity</font><font color="#E5E5E5"> to</font>

232
00:12:19,320 --> 00:12:23,490
JavaScript<font color="#CCCCCC"> I found out it provides a</font>

233
00:12:21,270 --> 00:12:26,640
good way to you a<font color="#CCCCCC"> Duhamel</font><font color="#E5E5E5"> view</font>

234
00:12:23,490 --> 00:12:30,780
<font color="#E5E5E5">controller so that's my</font><font color="#CCCCCC"> - inspiration</font>

235
00:12:26,640 --> 00:12:32,340
<font color="#E5E5E5">for realm so in Elm you will declare a</font>

236
00:12:30,780 --> 00:12:34,650
model which is<font color="#CCCCCC"> the data that</font><font color="#E5E5E5"> you</font>

237
00:12:32,340 --> 00:12:36,090
<font color="#CCCCCC">associated with a view</font><font color="#E5E5E5"> and you have an</font>

238
00:12:34,650 --> 00:12:38,250
update function that would take the

239
00:12:36,090 --> 00:12:41,610
model in response to some event<font color="#E5E5E5"> and</font>

240
00:12:38,250 --> 00:12:44,960
return the new model<font color="#E5E5E5"> and you also have a</font>

241
00:12:41,610 --> 00:12:50,490
view function that describes your view

242
00:12:44,960 --> 00:12:53,640
<font color="#E5E5E5">in a declarative way in realm I use that</font>

243
00:12:50,490 --> 00:12:55,500
but I adapted it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Russ so for instance</font>

244
00:12:53,640 --> 00:12:58,319
update and you are not married of a

245
00:12:55,500 --> 00:13:00,600
widget<font color="#E5E5E5"> right and we use mutation when</font>

246
00:12:58,320 --> 00:13:02,790
it's convenient for instance the update

247
00:13:00,600 --> 00:13:05,280
method<font color="#E5E5E5"> will take self a reference that</font>

248
00:13:02,790 --> 00:13:09,120
<font color="#CCCCCC">we can mutate the model instead</font><font color="#E5E5E5"> of</font>

249
00:13:05,280 --> 00:13:12,120
<font color="#E5E5E5">having to return a new model so let's</font>

250
00:13:09,120 --> 00:13:14,970
<font color="#CCCCCC">see how we can use run first we need to</font>

251
00:13:12,120 --> 00:13:17,850
declare<font color="#E5E5E5"> a model which is a normal type</font>

252
00:13:14,970 --> 00:13:21,870
in<font color="#E5E5E5"> row so it could be a struct and then</font>

253
00:13:17,850 --> 00:13:23,460
<font color="#E5E5E5">we use this widget attribute an info of</font>

254
00:13:21,870 --> 00:13:26,460
widget which is the trait we want to

255
00:13:23,460 --> 00:13:28,320
<font color="#E5E5E5">implement and for a window in this case</font>

256
00:13:26,460 --> 00:13:31,530
which will create a window so we need

257
00:13:28,320 --> 00:13:35,490
first<font color="#E5E5E5"> the model</font><font color="#CCCCCC"> meadow which declared</font>

258
00:13:31,530 --> 00:13:38,730
the initial model<font color="#E5E5E5"> of your widget and</font>

259
00:13:35,490 --> 00:13:40,890
then we have messages<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are used to</font>

260
00:13:38,730 --> 00:13:43,260
<font color="#CCCCCC">communicate for instance between widgets</font>

261
00:13:40,890 --> 00:13:46,380
or having a message<font color="#CCCCCC"> genuine there's an</font>

262
00:13:43,260 --> 00:13:47,850
<font color="#CCCCCC">gtk event</font><font color="#E5E5E5"> and you can also be used when</font>

263
00:13:46,380 --> 00:13:49,350
there's a synchronous i/o so for

264
00:13:47,850 --> 00:13:52,110
instance you do a network<font color="#E5E5E5"> request</font><font color="#CCCCCC"> and</font>

265
00:13:49,350 --> 00:13:54,450
when it's done you<font color="#E5E5E5"> receive a message so</font>

266
00:13:52,110 --> 00:13:56,460
we use the derive while the custom

267
00:13:54,450 --> 00:13:59,160
derived message and we have an enum

268
00:13:56,460 --> 00:14:04,920
which has many variants that<font color="#E5E5E5"> can have a</font>

269
00:13:59,160 --> 00:14:07,290
<font color="#E5E5E5">value and</font><font color="#CCCCCC"> then we</font><font color="#E5E5E5"> have the view so it's</font>

270
00:14:04,920 --> 00:14:10,500
still<font color="#CCCCCC"> in the embroidered and we use the</font>

271
00:14:07,290 --> 00:14:12,540
view macro and we now<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> dis</font>

272
00:14:10,500 --> 00:14:15,690
declarative syntax so we can create

273
00:14:12,540 --> 00:14:18,959
<font color="#CCCCCC">gtk widgets and nest them and</font><font color="#E5E5E5"> also set</font>

274
00:14:15,690 --> 00:14:20,820
their properties<font color="#E5E5E5"> we can connect the</font>

275
00:14:18,960 --> 00:14:23,400
click<font color="#CCCCCC"> around for instance</font><font color="#E5E5E5"> which will</font>

276
00:14:20,820 --> 00:14:26,910
<font color="#CCCCCC">send the increment message in this case</font>

277
00:14:23,400 --> 00:14:30,209
and we<font color="#E5E5E5"> can also do bindings meaning that</font>

278
00:14:26,910 --> 00:14:33,810
at the last line we have the<font color="#CCCCCC"> text</font>

279
00:14:30,210 --> 00:14:35,520
<font color="#E5E5E5">property</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the label it is bound to an</font>

280
00:14:33,810 --> 00:14:37,500
<font color="#CCCCCC">attribute of the model</font><font color="#E5E5E5"> so that means</font>

281
00:14:35,520 --> 00:14:40,470
that whenever this attribute of the

282
00:14:37,500 --> 00:14:46,110
model is change<font color="#E5E5E5"> that will update the</font>

283
00:14:40,470 --> 00:14:48,540
view and then<font color="#CCCCCC"> we have this</font><font color="#E5E5E5"> update method</font>

284
00:14:46,110 --> 00:14:50,310
<font color="#E5E5E5">so it takes self by mutable reference</font>

285
00:14:48,540 --> 00:14:54,030
which has access<font color="#CCCCCC"> to the model that we</font>

286
00:14:50,310 --> 00:14:55,229
can modify<font color="#E5E5E5"> when we receive a message so</font>

287
00:14:54,030 --> 00:14:57,540
in this case when<font color="#CCCCCC"> we received a</font>

288
00:14:55,230 --> 00:15:00,240
decrement message we<font color="#E5E5E5"> just change the</font>

289
00:14:57,540 --> 00:15:02,610
counter attribute<font color="#E5E5E5"> of the model and that</font>

290
00:15:00,240 --> 00:15:05,330
<font color="#E5E5E5">will actually</font><font color="#CCCCCC"> update</font><font color="#E5E5E5"> the view even</font>

291
00:15:02,610 --> 00:15:10,740
<font color="#E5E5E5">though it's not shown</font><font color="#CCCCCC"> here</font>

292
00:15:05,330 --> 00:15:12,300
so how does all of that work<font color="#E5E5E5"> so the</font>

293
00:15:10,740 --> 00:15:14,430
widget attribute<font color="#E5E5E5"> will start by</font>

294
00:15:12,300 --> 00:15:16,530
<font color="#CCCCCC">collecting the data binding so it will</font>

295
00:15:14,430 --> 00:15:19,079
analyze<font color="#E5E5E5"> the view check that in this case</font>

296
00:15:16,530 --> 00:15:22,290
the label has a property<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> called</font>

297
00:15:19,080 --> 00:15:24,480
<font color="#E5E5E5">text that is done to the contribute of</font>

298
00:15:22,290 --> 00:15:27,030
the model<font color="#E5E5E5"> and then it will actually</font>

299
00:15:24,480 --> 00:15:30,150
<font color="#CCCCCC">change the code you write you wrote in</font>

300
00:15:27,030 --> 00:15:33,150
the<font color="#CCCCCC"> med update</font><font color="#E5E5E5"> metal to actually update</font>

301
00:15:30,150 --> 00:15:36,209
<font color="#CCCCCC">the view</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> in it we'll see here</font><font color="#E5E5E5"> that</font>

302
00:15:33,150 --> 00:15:38,699
the counter attribute was<font color="#CCCCCC"> changed and it</font>

303
00:15:36,210 --> 00:15:41,490
<font color="#E5E5E5">will use this value</font><font color="#CCCCCC"> to update the view</font>

304
00:15:38,700 --> 00:15:47,450
because<font color="#E5E5E5"> it noticed that there was a</font>

305
00:15:41,490 --> 00:15:50,610
bending in the<font color="#E5E5E5"> view so even though I use</font>

306
00:15:47,450 --> 00:15:55,050
attributes<font color="#CCCCCC"> Ron</font><font color="#E5E5E5"> can work on stable rows</font>

307
00:15:50,610 --> 00:15:58,380
<font color="#E5E5E5">because I</font><font color="#CCCCCC"> used a hack to have the</font>

308
00:15:55,050 --> 00:16:01,530
<font color="#E5E5E5">procedure on macro to work and the</font>

309
00:15:58,380 --> 00:16:04,920
future of run<font color="#E5E5E5"> will may</font><font color="#CCCCCC"> be without</font>

310
00:16:01,530 --> 00:16:07,350
futures<font color="#E5E5E5"> also I will work to improve</font><font color="#CCCCCC"> the</font>

311
00:16:04,920 --> 00:16:10,800
<font color="#CCCCCC">error messages</font><font color="#E5E5E5"> because at the time I</font>

312
00:16:07,350 --> 00:16:14,220
first started<font color="#CCCCCC"> run</font><font color="#E5E5E5"> it was using the old</font>

313
00:16:10,800 --> 00:16:15,689
sink right<font color="#E5E5E5"> so we didn't have</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> to</font>

314
00:16:14,220 --> 00:16:17,400
the position of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tag</font><font color="#E5E5E5"> and so that's</font>

315
00:16:15,690 --> 00:16:19,710
why when<font color="#CCCCCC"> you have an error message</font><font color="#E5E5E5"> it's</font>

316
00:16:17,400 --> 00:16:22,470
shown<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the widget attribute which is</font>

317
00:16:19,710 --> 00:16:26,670
<font color="#E5E5E5">not convenient</font><font color="#CCCCCC"> and I will support more</font>

318
00:16:22,470 --> 00:16:31,040
agility features so do you have any

319
00:16:26,670 --> 00:16:31,040
questions yes

320
00:16:38,910 --> 00:16:56,019
sorry so the question is a take this so

321
00:16:52,779 --> 00:17:01,149
the<font color="#E5E5E5"> question is how does</font><font color="#CCCCCC"> restitch X the</font>

322
00:16:56,019 --> 00:17:03,279
<font color="#CCCCCC">length</font><font color="#E5E5E5"> of arrays at convincing its slice</font>

323
00:17:01,149 --> 00:17:06,849
it's basically an array in rest is a

324
00:17:03,279 --> 00:17:09,369
slice<font color="#E5E5E5"> so in the type you have</font><font color="#CCCCCC"> the</font>

325
00:17:06,849 --> 00:17:11,740
pointer where it starts and<font color="#E5E5E5"> you have its</font>

326
00:17:09,369 --> 00:17:14,799
length in the same point<font color="#E5E5E5"> it's what we</font>

327
00:17:11,740 --> 00:17:18,009
call<font color="#CCCCCC"> at pointers</font><font color="#E5E5E5"> right pointer so when</font>

328
00:17:14,799 --> 00:17:21,549
you<font color="#E5E5E5"> give it to a function we when</font><font color="#CCCCCC"> we</font>

329
00:17:18,009 --> 00:17:24,549
<font color="#E5E5E5">generators</font><font color="#CCCCCC"> Rakata we we we just</font><font color="#E5E5E5"> know the</font>

330
00:17:21,549 --> 00:17:26,888
size of<font color="#E5E5E5"> the slice you</font><font color="#CCCCCC"> can treat you when</font>

331
00:17:24,549 --> 00:17:30,070
you create a slice<font color="#E5E5E5"> you know its size you</font>

332
00:17:26,888 --> 00:17:32,949
can't it's constant so when you pass it

333
00:17:30,070 --> 00:17:35,370
<font color="#CCCCCC">to a function</font><font color="#E5E5E5"> obviously you know</font><font color="#CCCCCC"> its</font>

334
00:17:32,950 --> 00:17:44,700
size<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> can give</font><font color="#E5E5E5"> it to the</font>

335
00:17:35,370 --> 00:17:44,699
<font color="#E5E5E5">adjudication is it other question yes</font>

336
00:17:54,640 --> 00:18:03,500
so the question is do I ain't on the NGO

337
00:17:58,279 --> 00:18:09,559
<font color="#CCCCCC">- instead - to use</font><font color="#E5E5E5"> the Tokyo for I think</font>

338
00:18:03,500 --> 00:18:12,440
that's it<font color="#CCCCCC"> for futures</font><font color="#E5E5E5"> so I don't really</font>

339
00:18:09,559 --> 00:18:16,059
know<font color="#CCCCCC"> for instance</font><font color="#E5E5E5"> with Anthony with</font>

340
00:18:12,440 --> 00:18:20,000
<font color="#E5E5E5">Stark</font><font color="#CCCCCC"> a lot about how to do a</font>

341
00:18:16,059 --> 00:18:21,879
<font color="#E5E5E5">synchronous stuff and I think</font><font color="#CCCCCC"> he will be</font>

342
00:18:20,000 --> 00:18:25,429
<font color="#CCCCCC">the best</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> so this one</font><font color="#E5E5E5"> actually yeah</font>

343
00:18:21,880 --> 00:18:29,179
yes<font color="#CCCCCC"> in the heck fest we had I</font>

344
00:18:25,429 --> 00:18:31,039
<font color="#E5E5E5">implemented the code generator the stuff</font>

345
00:18:29,179 --> 00:18:33,440
to generate<font color="#CCCCCC"> D a synchronous method and</font>

346
00:18:31,039 --> 00:18:35,570
for<font color="#E5E5E5"> now it's just working with callback</font>

347
00:18:33,440 --> 00:18:37,340
so for now there's no support<font color="#E5E5E5"> for</font>

348
00:18:35,570 --> 00:18:40,779
features<font color="#E5E5E5"> that but that may be added in</font>

349
00:18:37,340 --> 00:18:40,779
the future<font color="#CCCCCC"> no pun</font><font color="#E5E5E5"> intended</font>

350
00:19:06,940 --> 00:19:14,690
<font color="#E5E5E5">Eric is</font><font color="#CCCCCC"> the question the question</font><font color="#E5E5E5"> is for</font>

351
00:19:10,250 --> 00:19:16,910
the gear<font color="#E5E5E5"> generator for now</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> asked if</font>

352
00:19:14,690 --> 00:19:18,710
<font color="#E5E5E5">we intended</font><font color="#CCCCCC"> to make it a simpler because</font>

353
00:19:16,910 --> 00:19:22,040
yeah I didn't talk<font color="#E5E5E5"> about</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so I will</font>

354
00:19:18,710 --> 00:19:27,020
go<font color="#E5E5E5"> into details a bit the gear generator</font>

355
00:19:22,040 --> 00:19:28,879
first<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> low level</font><font color="#E5E5E5"> API which</font><font color="#CCCCCC"> isn't</font>

356
00:19:27,020 --> 00:19:32,150
supposed to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> used directly by</font><font color="#E5E5E5"> the</font>

357
00:19:28,880 --> 00:19:34,550
<font color="#E5E5E5">users and then from this it's just</font><font color="#CCCCCC"> right</font>

358
00:19:32,150 --> 00:19:37,580
to<font color="#CCCCCC"> the functions</font><font color="#E5E5E5"> from and all the times</font>

359
00:19:34,550 --> 00:19:41,178
<font color="#E5E5E5">the types from</font><font color="#CCCCCC"> the library</font><font color="#E5E5E5"> and from this</font>

360
00:19:37,580 --> 00:19:43,460
<font color="#E5E5E5">you can have to say we have</font><font color="#CCCCCC"> a new serve</font>

361
00:19:41,179 --> 00:19:45,740
<font color="#CCCCCC">level which is used</font><font color="#E5E5E5"> directly and it</font>

362
00:19:43,460 --> 00:19:49,280
provides the API which causes the

363
00:19:45,740 --> 00:19:52,850
functions<font color="#E5E5E5"> are bound by the role of</font><font color="#CCCCCC"> Ed</font><font color="#E5E5E5"> if</font>

364
00:19:49,280 --> 00:19:54,590
it's<font color="#E5E5E5"> clear so at this point yeah it's a</font>

365
00:19:52,850 --> 00:19:56,870
bit complicated if<font color="#CCCCCC"> you don't know how</font>

366
00:19:54,590 --> 00:20:00,080
gear works<font color="#E5E5E5"> well even</font><font color="#CCCCCC"> if you know it's a</font>

367
00:19:56,870 --> 00:20:02,959
bit so we<font color="#CCCCCC"> in turn the in the two more</font>

368
00:20:00,080 --> 00:20:05,659
<font color="#E5E5E5">weeks to make something better but it's</font>

369
00:20:02,960 --> 00:20:08,780
<font color="#E5E5E5">more like when we have a new someone new</font>

370
00:20:05,660 --> 00:20:11,660
starting a new library using the idea we

371
00:20:08,780 --> 00:20:14,600
<font color="#E5E5E5">take what it says is missing so that's</font>

372
00:20:11,660 --> 00:20:18,200
why we wrote<font color="#CCCCCC"> this huge readme file and</font>

373
00:20:14,600 --> 00:20:20,000
then we add the new elements<font color="#E5E5E5"> and maybe</font>

374
00:20:18,200 --> 00:20:23,840
<font color="#E5E5E5">or someday I will write a guide or</font>

375
00:20:20,000 --> 00:20:25,670
<font color="#CCCCCC">something in</font><font color="#E5E5E5"> order to avoid to just a</font>

376
00:20:23,840 --> 00:20:28,689
lot<font color="#CCCCCC"> more people to have their</font><font color="#E5E5E5"> own</font>

377
00:20:25,670 --> 00:20:28,690
libraries if they want

378
00:20:31,570 --> 00:20:34,730
[Applause]

379
00:20:35,260 --> 00:20:37,320
<font color="#E5E5E5">you</font>

