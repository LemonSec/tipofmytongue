1
00:00:04,620 --> 00:00:09,840
so the first<font color="#E5E5E5"> person is gonna be</font>

2
00:00:07,200 --> 00:00:12,930
<font color="#CCCCCC">Alexander Newman Newman my money Newman</font>

3
00:00:09,840 --> 00:00:16,170
<font color="#CCCCCC">and he's going to</font><font color="#E5E5E5"> speak for five minutes</font>

4
00:00:12,930 --> 00:00:19,500
<font color="#E5E5E5">about</font><font color="#CCCCCC"> five tools and the time</font><font color="#E5E5E5"> starts</font><font color="#CCCCCC"> no</font>

5
00:00:16,170 --> 00:00:24,240
<font color="#E5E5E5">okay great I'm sorry very fast</font><font color="#CCCCCC"> so I</font>

6
00:00:19,500 --> 00:00:26,480
wrote a<font color="#E5E5E5"> few tools like to just show them</font>

7
00:00:24,240 --> 00:00:29,310
to you<font color="#E5E5E5"> the first one is called built go</font>

8
00:00:26,480 --> 00:00:30,660
<font color="#E5E5E5">and what I noticed when developing</font>

9
00:00:29,310 --> 00:00:33,330
<font color="#E5E5E5">another tool</font><font color="#CCCCCC"> that I'm not going</font><font color="#E5E5E5"> to talk</font>

10
00:00:30,660 --> 00:00:35,820
<font color="#E5E5E5">about in a minute that it's not so nice</font>

11
00:00:33,330 --> 00:00:37,649
for<font color="#CCCCCC"> ya like end users to</font><font color="#E5E5E5"> install go</font>

12
00:00:35,820 --> 00:00:40,829
tools for example<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> get the latest</font>

13
00:00:37,649 --> 00:00:42,719
master of the tool called rustic<font color="#E5E5E5"> then</font>

14
00:00:40,829 --> 00:00:44,579
you can just use go get but this is not

15
00:00:42,719 --> 00:00:46,320
so nice<font color="#E5E5E5"> because when you call rustic</font>

16
00:00:44,579 --> 00:00:48,270
version at the<font color="#E5E5E5"> bottom of the slide it</font>

17
00:00:46,320 --> 00:00:50,219
<font color="#E5E5E5">will just say compiled manually and just</font>

18
00:00:48,270 --> 00:00:52,559
to go version and when you extract

19
00:00:50,219 --> 00:00:54,390
release<font color="#CCCCCC"> table all</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> need to go do all</font>

20
00:00:52,559 --> 00:00:55,949
<font color="#CCCCCC">the magic with the go</font><font color="#E5E5E5"> path and so on and</font>

21
00:00:54,390 --> 00:00:58,739
<font color="#CCCCCC">that's for end users and</font><font color="#E5E5E5"> it's not nice</font>

22
00:00:55,950 --> 00:01:01,320
<font color="#E5E5E5">so I wrote a small go program called</font>

23
00:00:58,739 --> 00:01:03,718
<font color="#E5E5E5">built go which you can just run with go</font>

24
00:01:01,320 --> 00:01:06,119
run and it has a built a<font color="#E5E5E5"> gov</font><font color="#CCCCCC"> ignore so</font>

25
00:01:03,719 --> 00:01:08,310
it it's not<font color="#CCCCCC"> compiled</font><font color="#E5E5E5"> with the usual go</font>

26
00:01:06,119 --> 00:01:10,140
code and you<font color="#CCCCCC"> can use</font><font color="#E5E5E5"> it from a check out</font>

27
00:01:08,310 --> 00:01:12,179
<font color="#E5E5E5">of the git repository and you can also</font>

28
00:01:10,140 --> 00:01:13,920
use it from<font color="#E5E5E5"> a really</font><font color="#CCCCCC"> star ball which</font>

29
00:01:12,179 --> 00:01:17,369
<font color="#CCCCCC">means that you can</font><font color="#E5E5E5"> just clone the repo</font>

30
00:01:13,920 --> 00:01:19,080
go run<font color="#CCCCCC"> boot go or extract the tab all</font>

31
00:01:17,369 --> 00:01:20,789
run the<font color="#E5E5E5"> same command and then there you</font>

32
00:01:19,080 --> 00:01:22,319
<font color="#E5E5E5">go and have a nice version number</font><font color="#CCCCCC"> and</font>

33
00:01:20,789 --> 00:01:23,910
for<font color="#E5E5E5"> end users that's really great</font>

34
00:01:22,319 --> 00:01:25,860
<font color="#E5E5E5">because they don't have to fill it</font>

35
00:01:23,910 --> 00:01:28,170
around with the go path and so on and

36
00:01:25,860 --> 00:01:29,849
you<font color="#E5E5E5"> can find</font><font color="#CCCCCC"> that tool</font><font color="#E5E5E5"> and that's a</font>

37
00:01:28,170 --> 00:01:31,170
program on github just copy it<font color="#E5E5E5"> to your</font>

38
00:01:29,849 --> 00:01:33,090
<font color="#E5E5E5">repository use it</font>

39
00:01:31,170 --> 00:01:36,750
there's a small configuration setting at

40
00:01:33,090 --> 00:01:38,550
the top and that's it<font color="#CCCCCC"> bonus</font><font color="#E5E5E5"> is it also</font>

41
00:01:36,750 --> 00:01:40,259
supports like a<font color="#E5E5E5"> cross compilation and</font>

42
00:01:38,550 --> 00:01:43,200
<font color="#E5E5E5">see go and all the other stuff like</font>

43
00:01:40,259 --> 00:01:45,899
<font color="#E5E5E5">build tags next</font><font color="#CCCCCC"> tool is called magma</font>

44
00:01:43,200 --> 00:01:49,920
<font color="#E5E5E5">which is a colloquial</font><font color="#CCCCCC"> German term for</font>

45
00:01:45,899 --> 00:01:55,349
just do it<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> nice because then you</font>

46
00:01:49,920 --> 00:01:57,539
can do this<font color="#CCCCCC"> okay apparently</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I</font>

47
00:01:55,349 --> 00:01:59,429
cannot reload<font color="#E5E5E5"> a slide sorry what it does</font>

48
00:01:57,539 --> 00:02:01,229
there<font color="#CCCCCC"> is there's a fine command which</font>

49
00:01:59,429 --> 00:02:03,929
finds<font color="#E5E5E5"> all the images in</font><font color="#CCCCCC"> the current</font>

50
00:02:01,229 --> 00:02:05,849
<font color="#E5E5E5">directory pipes it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> magma which runs</font>

51
00:02:03,929 --> 00:02:08,340
the mogrify command which is<font color="#E5E5E5"> used</font><font color="#CCCCCC"> to</font>

52
00:02:05,849 --> 00:02:09,179
resize the images and by default<font color="#E5E5E5"> and</font>

53
00:02:08,340 --> 00:02:11,730
<font color="#CCCCCC">there you</font><font color="#E5E5E5"> can see it again</font>

54
00:02:09,179 --> 00:02:13,590
by default it will run<font color="#E5E5E5"> on like for</font>

55
00:02:11,730 --> 00:02:15,359
<font color="#E5E5E5">worker threads which means it's</font>

56
00:02:13,590 --> 00:02:17,730
optimized for<font color="#E5E5E5"> my machine which has four</font>

57
00:02:15,360 --> 00:02:19,680
CPUs<font color="#CCCCCC"> and you can see it's</font>

58
00:02:17,730 --> 00:02:21,629
while it's running it will compute the

59
00:02:19,680 --> 00:02:24,060
the time it will<font color="#CCCCCC"> take</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> through the</font>

60
00:02:21,629 --> 00:02:28,170
complete list and it's much<font color="#E5E5E5"> easier</font><font color="#CCCCCC"> to</font>

61
00:02:24,060 --> 00:02:29,610
<font color="#CCCCCC">use than X arts</font><font color="#E5E5E5"> or even parallel so</font><font color="#CCCCCC"> to</font>

62
00:02:28,170 --> 00:02:32,190
despite that didn't give it the command

63
00:02:29,610 --> 00:02:34,230
and it will<font color="#E5E5E5"> do its thing</font><font color="#CCCCCC"> you can also do</font>

64
00:02:32,190 --> 00:02:36,390
that with for<font color="#E5E5E5"> example IP addresses and</font>

65
00:02:34,230 --> 00:02:38,849
ping them when when there's any like

66
00:02:36,390 --> 00:02:40,829
sort<font color="#E5E5E5"> of error or something</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> it</font>

67
00:02:38,849 --> 00:02:42,540
will<font color="#E5E5E5"> report it to you and write the IP</font>

68
00:02:40,830 --> 00:02:42,989
address or<font color="#CCCCCC"> the string</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you put</font><font color="#E5E5E5"> into</font>

69
00:02:42,540 --> 00:02:46,319
<font color="#E5E5E5">it</font>

70
00:02:42,989 --> 00:02:48,209
just before before the<font color="#E5E5E5"> output so they</font>

71
00:02:46,319 --> 00:02:50,510
can you<font color="#E5E5E5"> can see what the error</font><font color="#CCCCCC"> what</font>

72
00:02:48,209 --> 00:02:53,640
<font color="#CCCCCC">comment what has caused the error oh</font>

73
00:02:50,510 --> 00:02:56,280
<font color="#CCCCCC">yeah you can also do that</font><font color="#E5E5E5"> and some some</font>

74
00:02:53,640 --> 00:02:58,559
<font color="#CCCCCC">other demos next tool is Gobi which</font>

75
00:02:56,280 --> 00:03:00,480
solves the problem that<font color="#E5E5E5"> I had when I'm</font>

76
00:02:58,560 --> 00:03:03,359
running<font color="#CCCCCC"> the eye free window manager on</font>

77
00:03:00,480 --> 00:03:05,280
<font color="#E5E5E5">Linux whenever I plug my laptop into</font><font color="#CCCCCC"> the</font>

78
00:03:03,359 --> 00:03:08,340
docking<font color="#E5E5E5"> station then I need to manually</font>

79
00:03:05,280 --> 00:03:10,530
<font color="#E5E5E5">can you recall x-rounder and configure</font>

80
00:03:08,340 --> 00:03:12,629
<font color="#E5E5E5">all my monitors and then</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> rolled a</font>

81
00:03:10,530 --> 00:03:14,519
shell script for<font color="#CCCCCC"> that and everybody has</font>

82
00:03:12,629 --> 00:03:17,548
written such a shell script and this<font color="#CCCCCC"> is</font>

83
00:03:14,519 --> 00:03:19,920
really really really<font color="#E5E5E5"> bad so I wrote a</font>

84
00:03:17,549 --> 00:03:22,380
small<font color="#E5E5E5"> go-to for that which automates</font>

85
00:03:19,920 --> 00:03:24,630
<font color="#E5E5E5">calling</font><font color="#CCCCCC"> X renderer</font><font color="#E5E5E5"> and subscribes to</font>

86
00:03:22,380 --> 00:03:27,030
extreme<font color="#CCCCCC"> change events so</font><font color="#E5E5E5"> you don't need</font>

87
00:03:24,630 --> 00:03:29,549
to like call<font color="#E5E5E5"> it in a loop or so and it</font>

88
00:03:27,030 --> 00:03:31,590
<font color="#E5E5E5">has a simple configuration</font><font color="#CCCCCC"> in llamó for</font>

89
00:03:29,549 --> 00:03:34,049
example<font color="#E5E5E5"> that there I have like rule</font>

90
00:03:31,590 --> 00:03:36,000
called<font color="#CCCCCC"> docking station I'm making this</font>

91
00:03:34,049 --> 00:03:38,669
rule based on the connected and present

92
00:03:36,000 --> 00:03:41,459
outputs<font color="#CCCCCC"> and then I say</font><font color="#E5E5E5"> that okay</font>

93
00:03:38,669 --> 00:03:43,560
configure a row of<font color="#E5E5E5"> HDMI to an</font><font color="#CCCCCC"> HDMI 3</font>

94
00:03:41,459 --> 00:03:45,690
<font color="#E5E5E5">side-by-side and that's it and there's</font>

95
00:03:43,560 --> 00:03:48,630
also like<font color="#E5E5E5"> a</font><font color="#CCCCCC"> TV rule as a serial number</font>

96
00:03:45,690 --> 00:03:50,459
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the TV used for matching</font><font color="#CCCCCC"> and a</font>

97
00:03:48,630 --> 00:03:53,130
<font color="#E5E5E5">fallback which just enables the internal</font>

98
00:03:50,459 --> 00:03:55,139
display<font color="#CCCCCC"> then you can run it once it will</font>

99
00:03:53,130 --> 00:03:57,418
<font color="#CCCCCC">say okay I detected</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> configuration</font>

100
00:03:55,139 --> 00:03:59,639
<font color="#E5E5E5">called X</font><font color="#CCCCCC"> render</font><font color="#E5E5E5"> and everything is great</font>

101
00:03:57,419 --> 00:04:02,220
or you can run it<font color="#E5E5E5"> for example by a</font>

102
00:03:59,639 --> 00:04:04,019
system D and use go<font color="#CCCCCC"> be watch which will</font>

103
00:04:02,220 --> 00:04:06,840
just subscribe to<font color="#CCCCCC"> the exchange events</font>

104
00:04:04,019 --> 00:04:09,510
and also<font color="#E5E5E5"> regularly Paul X</font><font color="#CCCCCC"> render if</font>

105
00:04:06,840 --> 00:04:10,950
there are any new<font color="#CCCCCC"> any new outputs</font><font color="#E5E5E5"> and it</font>

106
00:04:09,510 --> 00:04:12,569
will just configure this so<font color="#CCCCCC"> well now</font>

107
00:04:10,950 --> 00:04:14,429
when I plug<font color="#E5E5E5"> in</font><font color="#CCCCCC"> my laptop</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> the</font>

108
00:04:12,569 --> 00:04:16,168
docking<font color="#E5E5E5"> station</font><font color="#CCCCCC"> it will</font><font color="#E5E5E5"> just switch on</font>

109
00:04:14,430 --> 00:04:19,260
my<font color="#E5E5E5"> external outputs and everything is</font>

110
00:04:16,168 --> 00:04:21,899
fine so next one is<font color="#CCCCCC"> ducts</font><font color="#E5E5E5"> which is a</font>

111
00:04:19,260 --> 00:04:24,810
small command<font color="#E5E5E5"> that I've that I'm using</font>

112
00:04:21,899 --> 00:04:26,729
to track differences in<font color="#E5E5E5"> output for</font>

113
00:04:24,810 --> 00:04:29,550
<font color="#E5E5E5">commands for example here in the</font>

114
00:04:26,729 --> 00:04:31,150
configuration<font color="#E5E5E5"> I have configured a</font>

115
00:04:29,550 --> 00:04:33,760
command which just<font color="#E5E5E5"> runs</font><font color="#CCCCCC"> the day</font>

116
00:04:31,150 --> 00:04:37,390
command on<font color="#E5E5E5"> unix and</font><font color="#CCCCCC"> i've configured that</font>

117
00:04:33,760 --> 00:04:40,360
<font color="#E5E5E5">it should run at it shouldn't run faster</font>

118
00:04:37,390 --> 00:04:42,430
than every<font color="#E5E5E5"> five seconds what the</font><font color="#CCCCCC"> ducts</font>

119
00:04:40,360 --> 00:04:44,950
command does is on the<font color="#E5E5E5"> first run</font><font color="#CCCCCC"> of the</font>

120
00:04:42,430 --> 00:04:47,470
output it<font color="#CCCCCC"> will just save the output</font><font color="#E5E5E5"> in</font>

121
00:04:44,950 --> 00:04:49,930
this<font color="#E5E5E5"> case the the date to a state file</font>

122
00:04:47,470 --> 00:04:52,450
<font color="#CCCCCC">it makes a note of when the command</font>

123
00:04:49,930 --> 00:04:54,550
whose last run<font color="#E5E5E5"> on the second run</font><font color="#CCCCCC"> there's</font>

124
00:04:52,450 --> 00:04:56,050
<font color="#E5E5E5">nothing to do</font><font color="#CCCCCC"> because it</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> just one</font>

125
00:04:54,550 --> 00:04:58,540
second<font color="#E5E5E5"> after the first one so the</font>

126
00:04:56,050 --> 00:05:00,550
command isn't executed at all and on<font color="#E5E5E5"> the</font>

127
00:04:58,540 --> 00:05:01,900
<font color="#E5E5E5">third run you can see that</font><font color="#CCCCCC"> I waited a</font>

128
00:05:00,550 --> 00:05:04,360
few seconds and then<font color="#E5E5E5"> the date command</font>

129
00:05:01,900 --> 00:05:06,219
<font color="#E5E5E5">was run the</font><font color="#CCCCCC"> output has</font><font color="#E5E5E5"> changed</font><font color="#CCCCCC"> and then</font>

130
00:05:04,360 --> 00:05:09,940
I can see<font color="#E5E5E5"> the diff and I'm using this</font>

131
00:05:06,220 --> 00:05:12,460
one<font color="#CCCCCC"> to for example</font><font color="#E5E5E5"> run this in a cron</font>

132
00:05:09,940 --> 00:05:15,310
<font color="#CCCCCC">table somewhere</font><font color="#E5E5E5"> and have a like find of</font>

133
00:05:12,460 --> 00:05:18,549
a<font color="#CCCCCC"> find command running which reports</font><font color="#E5E5E5"> all</font>

134
00:05:15,310 --> 00:05:20,200
<font color="#E5E5E5">the things that</font><font color="#CCCCCC"> are there yeah last</font>

135
00:05:18,550 --> 00:05:21,970
thing is rustic it's a backup<font color="#CCCCCC"> program</font>

136
00:05:20,200 --> 00:05:22,870
written<font color="#E5E5E5"> and go and unfortunately my</font><font color="#CCCCCC"> time</font>

137
00:05:21,970 --> 00:05:24,940
is up

138
00:05:22,870 --> 00:05:26,710
there's the nice no go<font color="#E5E5E5"> we have a look at</font>

139
00:05:24,940 --> 00:05:28,040
it I<font color="#CCCCCC"> have stickers find me afterwards</font>

140
00:05:26,710 --> 00:05:37,169
thank you

141
00:05:28,040 --> 00:05:37,169
[Applause]

142
00:05:40,800 --> 00:05:48,240
yeah mags are awesome awesome<font color="#E5E5E5"> really</font>

143
00:05:45,039 --> 00:05:55,748
<font color="#E5E5E5">good job and now</font><font color="#CCCCCC"> we have secure prints</font>

144
00:05:48,240 --> 00:05:57,520
<font color="#CCCCCC">that's the</font><font color="#E5E5E5"> time so Luna</font><font color="#CCCCCC"> is going to be</font>

145
00:05:55,749 --> 00:05:59,729
<font color="#E5E5E5">talking about something else I have no</font>

146
00:05:57,520 --> 00:05:59,729
idea

147
00:06:30,380 --> 00:06:33,310
seriously

148
00:06:45,740 --> 00:06:51,190
[Music]

149
00:06:47,240 --> 00:06:51,190
oh the<font color="#CCCCCC"> slides</font><font color="#E5E5E5"> yes</font>

150
00:07:01,120 --> 00:07:08,550
for the next<font color="#E5E5E5"> speaker</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> times will be</font>

151
00:07:04,389 --> 00:07:08,550
part of<font color="#E5E5E5"> the five minutes so</font>

152
00:07:08,960 --> 00:07:16,150
no pressure

153
00:07:11,570 --> 00:07:16,150
all right no I know I can do<font color="#E5E5E5"> things</font>

154
00:07:24,960 --> 00:07:27,710
<font color="#E5E5E5">all right</font>

155
00:07:30,190 --> 00:07:37,250
can people hear<font color="#CCCCCC"> me</font><font color="#E5E5E5"> yes good</font><font color="#CCCCCC"> okay so I'm</font>

156
00:07:34,490 --> 00:07:39,409
gonna give a quick<font color="#E5E5E5"> talk about a tool</font>

157
00:07:37,250 --> 00:07:42,440
that I wrote<font color="#E5E5E5"> called instruments in SQL</font>

158
00:07:39,409 --> 00:07:45,830
<font color="#E5E5E5">it is a tool that lets</font><font color="#CCCCCC"> you log or trace</font>

159
00:07:42,440 --> 00:07:49,729
any and all<font color="#E5E5E5"> SQL statements that run in</font>

160
00:07:45,830 --> 00:07:54,229
your<font color="#CCCCCC"> codebase</font><font color="#E5E5E5"> by wrapping any SQL driver</font>

161
00:07:49,729 --> 00:07:57,140
<font color="#E5E5E5">and exposing its own driver so how it</font>

162
00:07:54,229 --> 00:07:58,840
works is that<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> open up the examples</font>

163
00:07:57,140 --> 00:08:02,930
[Music]

164
00:07:58,840 --> 00:08:06,020
you can wrap any driver<font color="#E5E5E5"> for example my</font>

165
00:08:02,930 --> 00:08:08,930
sequel you<font color="#CCCCCC"> have you call instrument SQL</font>

166
00:08:06,020 --> 00:08:11,330
don't<font color="#E5E5E5"> wrap driver and then you pass in</font>

167
00:08:08,930 --> 00:08:13,940
any tracer<font color="#E5E5E5"> right now we support open</font>

168
00:08:11,330 --> 00:08:16,130
tracing<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> stackdriver tracing</font><font color="#CCCCCC"> open</font>

169
00:08:13,940 --> 00:08:21,620
<font color="#CCCCCC">sensors as</font><font color="#E5E5E5"> well as</font><font color="#CCCCCC"> amazon</font><font color="#E5E5E5"> x ray tracing</font>

170
00:08:16,130 --> 00:08:23,389
<font color="#E5E5E5">and any SQL class that have a context</font>

171
00:08:21,620 --> 00:08:25,370
attached<font color="#E5E5E5"> to them</font><font color="#CCCCCC"> so that means you</font><font color="#E5E5E5"> have</font>

172
00:08:23,389 --> 00:08:27,560
to call query<font color="#E5E5E5"> context</font><font color="#CCCCCC"> instead of query</font>

173
00:08:25,370 --> 00:08:30,710
<font color="#E5E5E5">because otherwise we have</font><font color="#CCCCCC"> no idea where</font>

174
00:08:27,560 --> 00:08:33,589
<font color="#CCCCCC">to send your trace will be sent</font><font color="#E5E5E5"> to the</font>

175
00:08:30,710 --> 00:08:35,929
corresponding tracing tool<font color="#E5E5E5"> but then what</font>

176
00:08:33,589 --> 00:08:37,070
<font color="#CCCCCC">you do is that</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example in my case</font>

177
00:08:35,929 --> 00:08:42,169
we're using<font color="#E5E5E5"> stackdriver</font>

178
00:08:37,070 --> 00:08:43,430
and we then get a lovely trace in<font color="#E5E5E5"> our</font>

179
00:08:42,169 --> 00:08:46,010
<font color="#CCCCCC">stack driver display that looks like</font>

180
00:08:43,429 --> 00:08:48,770
this<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example you can see that we're</font>

181
00:08:46,010 --> 00:08:51,410
spending<font color="#CCCCCC"> half or</font><font color="#E5E5E5"> requests doing</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font>

182
00:08:48,770 --> 00:08:54,050
know what and then we spend about<font color="#CCCCCC"> the</font>

183
00:08:51,410 --> 00:08:56,510
<font color="#E5E5E5">rest of the</font><font color="#CCCCCC"> requests</font><font color="#E5E5E5"> doing SQL queries</font>

184
00:08:54,050 --> 00:08:59,329
and as you can<font color="#CCCCCC"> see we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> running lots</font>

185
00:08:56,510 --> 00:09:01,160
of<font color="#E5E5E5"> unrelated SQL statements in series</font>

186
00:08:59,329 --> 00:09:05,239
<font color="#E5E5E5">which we could potentially improve our</font>

187
00:09:01,160 --> 00:09:05,740
running them in parallel that's<font color="#E5E5E5"> it</font>

188
00:09:05,240 --> 00:09:08,850
questions

189
00:09:05,740 --> 00:09:08,850
[Music]

190
00:09:09,920 --> 00:09:17,530
[Applause]

191
00:09:22,400 --> 00:09:56,030
I think it's<font color="#E5E5E5"> already connected so if you</font>

192
00:09:51,830 --> 00:09:59,200
move to<font color="#E5E5E5"> one</font><font color="#CCCCCC"> side or the</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> oh you</font>

193
00:09:56,030 --> 00:09:59,199
send more things<font color="#E5E5E5"> okay</font>

194
00:10:07,260 --> 00:10:13,350
hi everyone in this<font color="#CCCCCC"> talk I'm gonna talk</font>

195
00:10:11,010 --> 00:10:14,939
about<font color="#CCCCCC"> them to</font><font color="#E5E5E5"> flow and go and this may</font>

196
00:10:13,350 --> 00:10:16,890
look a<font color="#CCCCCC"> bit like</font><font color="#E5E5E5"> a lecture</font><font color="#CCCCCC"> in a</font>

197
00:10:14,940 --> 00:10:19,850
university so it's great<font color="#E5E5E5"> let's look at</font>

198
00:10:16,890 --> 00:10:21,090
lots of numbers<font color="#E5E5E5"> and what is tensorflow</font>

199
00:10:19,850 --> 00:10:23,460
<font color="#CCCCCC">tensorflow</font>

200
00:10:21,090 --> 00:10:25,080
so the official<font color="#CCCCCC"> definition is offender</font>

201
00:10:23,460 --> 00:10:26,970
<font color="#E5E5E5">flow is an open source software</font><font color="#CCCCCC"> so</font>

202
00:10:25,080 --> 00:10:28,380
machine intelligence is mainly for

203
00:10:26,970 --> 00:10:31,230
machine learning<font color="#E5E5E5"> applications such as</font>

204
00:10:28,380 --> 00:10:34,650
<font color="#E5E5E5">neural networks essentially there is a</font>

205
00:10:31,230 --> 00:10:36,810
<font color="#CCCCCC">tensor</font><font color="#E5E5E5"> and it flows the</font><font color="#CCCCCC"> tensor is an</font>

206
00:10:34,650 --> 00:10:39,630
abstraction of a very complex

207
00:10:36,810 --> 00:10:41,699
mathematical concept think of it as a

208
00:10:39,630 --> 00:10:45,360
<font color="#E5E5E5">vector or</font><font color="#CCCCCC"> a mattress that</font><font color="#E5E5E5"> can be of a</font>

209
00:10:41,700 --> 00:10:47,850
<font color="#CCCCCC">very high dimension if a tensor has two</font>

210
00:10:45,360 --> 00:10:50,100
properties<font color="#CCCCCC"> the type</font><font color="#E5E5E5"> of the data inside</font>

211
00:10:47,850 --> 00:10:52,410
for example<font color="#E5E5E5"> int and the structure of it</font>

212
00:10:50,100 --> 00:10:54,990
or the shape of<font color="#CCCCCC"> it which is essentially</font>

213
00:10:52,410 --> 00:10:56,250
the number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> elements and sorry the</font>

214
00:10:54,990 --> 00:10:59,280
<font color="#E5E5E5">number of dimension and the number of</font>

215
00:10:56,250 --> 00:11:01,080
elements<font color="#CCCCCC"> in each dimension the second</font>

216
00:10:59,280 --> 00:11:04,350
part is<font color="#CCCCCC"> the graph which is also called</font>

217
00:11:01,080 --> 00:11:07,890
model and every step of the<font color="#E5E5E5"> computation</font>

218
00:11:04,350 --> 00:11:10,650
is called also every node is<font color="#E5E5E5"> also called</font>

219
00:11:07,890 --> 00:11:12,900
an operation and the tensor<font color="#CCCCCC"> or</font><font color="#E5E5E5"> the set</font>

220
00:11:10,650 --> 00:11:14,819
of them essentially flows<font color="#E5E5E5"> in every step</font>

221
00:11:12,900 --> 00:11:17,400
a different computation is happening<font color="#E5E5E5"> and</font>

222
00:11:14,820 --> 00:11:18,980
you can evaluate the<font color="#CCCCCC"> value of the</font>

223
00:11:17,400 --> 00:11:21,870
computation<font color="#E5E5E5"> at any node and you</font>

224
00:11:18,980 --> 00:11:24,000
<font color="#CCCCCC">obviously also</font><font color="#E5E5E5"> have an output this is</font>

225
00:11:21,870 --> 00:11:25,800
essentially neural networks<font color="#E5E5E5"> in 20</font>

226
00:11:24,000 --> 00:11:30,990
seconds half a minute<font color="#E5E5E5"> and this is also</font>

227
00:11:25,800 --> 00:11:33,359
<font color="#CCCCCC">tons</font><font color="#E5E5E5"> of flow what it does and there are</font>

228
00:11:30,990 --> 00:11:35,460
several<font color="#E5E5E5"> API that are officially</font>

229
00:11:33,360 --> 00:11:38,490
supported in<font color="#CCCCCC"> tensorflow</font>

230
00:11:35,460 --> 00:11:41,400
<font color="#CCCCCC">ago is one of them obviously Python is</font>

231
00:11:38,490 --> 00:11:43,980
the most widely supported one and the

232
00:11:41,400 --> 00:11:46,439
features that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have for go in the</font><font color="#E5E5E5"> API</font>

233
00:11:43,980 --> 00:11:49,110
<font color="#CCCCCC">of</font><font color="#E5E5E5"> tender flow is to train models and</font>

234
00:11:46,440 --> 00:11:50,850
consume those<font color="#CCCCCC"> trained models all</font><font color="#E5E5E5"> the</font>

235
00:11:49,110 --> 00:11:53,340
models are written or practically most

236
00:11:50,850 --> 00:11:55,770
<font color="#E5E5E5">of the models are written in Python for</font>

237
00:11:53,340 --> 00:11:58,440
data science reasons

238
00:11:55,770 --> 00:12:00,120
so I am helping organize this really

239
00:11:58,440 --> 00:12:02,640
cool<font color="#CCCCCC"> challenge that is called backlight</font>

240
00:12:00,120 --> 00:12:05,160
<font color="#E5E5E5">and</font><font color="#CCCCCC"> by helping organize it means usually</font>

241
00:12:02,640 --> 00:12:07,140
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> challenge and then I'm being</font>

242
00:12:05,160 --> 00:12:08,670
asked hey can you solve it and say that

243
00:12:07,140 --> 00:12:11,760
this is something<font color="#E5E5E5"> you can solve in a</font>

244
00:12:08,670 --> 00:12:14,339
reasonable time<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> competition</font><font color="#E5E5E5"> and one</font>

245
00:12:11,760 --> 00:12:17,189
of the challenges<font color="#CCCCCC"> is breaking the into</font>

246
00:12:14,340 --> 00:12:19,110
an<font color="#E5E5E5"> interface that controls</font><font color="#CCCCCC"> a camera</font><font color="#E5E5E5"> and</font>

247
00:12:17,190 --> 00:12:21,440
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> how it looks</font><font color="#E5E5E5"> so you have you</font>

248
00:12:19,110 --> 00:12:23,730
have<font color="#CCCCCC"> to guess the</font><font color="#E5E5E5"> pin and you have to</font>

249
00:12:21,440 --> 00:12:27,900
write the capture to prove that you're

250
00:12:23,730 --> 00:12:30,240
human<font color="#E5E5E5"> and the steps that</font><font color="#CCCCCC"> I decided to</font>

251
00:12:27,900 --> 00:12:33,000
<font color="#CCCCCC">take</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> test-specific proof of concept</font>

252
00:12:30,240 --> 00:12:35,880
is to do to use go<font color="#E5E5E5"> for them</font><font color="#CCCCCC"> shin</font>

253
00:12:33,000 --> 00:12:39,540
<font color="#E5E5E5">learning that trained basically</font><font color="#CCCCCC"> this</font>

254
00:12:35,880 --> 00:12:42,600
capture so a state<font color="#CCCCCC"> model which is kind</font>

255
00:12:39,540 --> 00:12:46,260
of the<font color="#E5E5E5"> brains you can say of the</font><font color="#CCCCCC"> model</font>

256
00:12:42,600 --> 00:12:48,600
was provided<font color="#E5E5E5"> and it could recognize</font>

257
00:12:46,260 --> 00:12:52,170
numbers and translate that<font color="#CCCCCC"> into the</font>

258
00:12:48,600 --> 00:12:54,450
string that is<font color="#E5E5E5"> the digit and my plan for</font>

259
00:12:52,170 --> 00:12:56,400
breaking this screen<font color="#E5E5E5"> the juicer was</font>

260
00:12:54,450 --> 00:12:59,880
<font color="#CCCCCC">longest trade model</font><font color="#E5E5E5"> and then write a</font>

261
00:12:56,400 --> 00:13:01,920
script<font color="#E5E5E5"> or code</font><font color="#CCCCCC"> that essentially gets us</font>

262
00:12:59,880 --> 00:13:04,800
every<font color="#CCCCCC"> password with brute force and</font>

263
00:13:01,920 --> 00:13:10,229
through<font color="#E5E5E5"> this</font><font color="#CCCCCC"> tensorflow</font><font color="#E5E5E5"> help just get</font>

264
00:13:04,800 --> 00:13:12,000
the capture point and<font color="#E5E5E5"> and it was a great</font>

265
00:13:10,230 --> 00:13:13,590
<font color="#E5E5E5">success this is how it looked in the</font>

266
00:13:12,000 --> 00:13:15,060
competition in real life<font color="#CCCCCC"> this is</font>

267
00:13:13,590 --> 00:13:16,170
somebody<font color="#CCCCCC"> actually managed to</font><font color="#E5E5E5"> break I</font>

268
00:13:15,060 --> 00:13:19,079
don't know if you can see but<font color="#E5E5E5"> this is</font>

269
00:13:16,170 --> 00:13:20,849
<font color="#E5E5E5">the IP</font><font color="#CCCCCC"> of the camera and yeah that's it</font>

270
00:13:19,080 --> 00:13:24,510
you can read the full details at the

271
00:13:20,850 --> 00:13:26,430
Gopher<font color="#E5E5E5"> Academy post from a December 28th</font>

272
00:13:24,510 --> 00:13:30,110
this year and you can also find there a

273
00:13:26,430 --> 00:13:30,109
<font color="#E5E5E5">link to the repo with the code</font>

274
00:13:34,600 --> 00:13:45,890
<font color="#CCCCCC">Thank You Debbie look effect</font>

275
00:13:41,260 --> 00:13:57,530
yeah that's<font color="#CCCCCC"> my</font><font color="#E5E5E5"> is suffering</font>

276
00:13:45,890 --> 00:14:00,069
yeah<font color="#E5E5E5"> do not drop this</font><font color="#CCCCCC"> mic for cool</font>

277
00:13:57,530 --> 00:14:00,069
please

278
00:14:01,900 --> 00:14:05,179
[Music]

279
00:14:15,860 --> 00:14:21,230
if you don't really need to<font color="#CCCCCC"> use your own</font>

280
00:14:18,620 --> 00:14:23,450
<font color="#CCCCCC">laptop and you can just send me</font><font color="#E5E5E5"> the link</font>

281
00:14:21,230 --> 00:14:27,010
<font color="#E5E5E5">to the slides</font><font color="#CCCCCC"> that's easier because</font>

282
00:14:23,450 --> 00:14:27,010
<font color="#E5E5E5">there's less cables moving around</font>

283
00:15:14,060 --> 00:15:21,089
<font color="#CCCCCC">in process</font><font color="#E5E5E5"> caching so the context is</font>

284
00:15:17,730 --> 00:15:23,640
writing a web service and serving a

285
00:15:21,090 --> 00:15:29,820
written data but<font color="#CCCCCC"> you have to compute</font>

286
00:15:23,640 --> 00:15:34,080
some expensive stuff called slow web

287
00:15:29,820 --> 00:15:36,030
services and<font color="#E5E5E5"> well I hope you you</font><font color="#CCCCCC"> cache</font>

288
00:15:34,080 --> 00:15:39,720
already because you<font color="#CCCCCC"> have to catch all</font>

289
00:15:36,030 --> 00:15:42,240
the things and I was a bit lazy<font color="#E5E5E5"> and I</font>

290
00:15:39,720 --> 00:15:48,720
did not want to depress<font color="#E5E5E5"> I'm in cash the</font>

291
00:15:42,240 --> 00:15:52,790
<font color="#CCCCCC">already's</font><font color="#E5E5E5"> but um eh may vary so it's</font>

292
00:15:48,720 --> 00:15:57,420
very important in my<font color="#CCCCCC"> opinion to to</font><font color="#E5E5E5"> cash</font>

293
00:15:52,790 --> 00:16:01,770
everything<font color="#CCCCCC"> because it's the less you do</font>

294
00:15:57,420 --> 00:16:04,140
the less you you pay<font color="#E5E5E5"> for and avoid the</font>

295
00:16:01,770 --> 00:16:10,470
network course because I don't I don't

296
00:16:04,140 --> 00:16:14,730
like<font color="#E5E5E5"> network and network sex please</font><font color="#CCCCCC"> we</font>

297
00:16:10,470 --> 00:16:16,320
have seen already<font color="#CCCCCC"> today's</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> fallacies</font>

298
00:16:14,730 --> 00:16:21,570
of the strategical preaching is very

299
00:16:16,320 --> 00:16:24,210
very nice<font color="#CCCCCC"> ok so the first</font><font color="#E5E5E5"> simple simple</font>

300
00:16:21,570 --> 00:16:28,320
<font color="#E5E5E5">cache is a memorization you have a kind</font>

301
00:16:24,210 --> 00:16:31,440
of<font color="#CCCCCC"> map with key and values to</font><font color="#E5E5E5"> store cash</font>

302
00:16:28,320 --> 00:16:34,770
details<font color="#E5E5E5"> but it's a kind of limited if</font>

303
00:16:31,440 --> 00:16:38,910
you have a very<font color="#CCCCCC"> big objects</font><font color="#E5E5E5"> or a lot of</font>

304
00:16:34,770 --> 00:16:46,500
objects<font color="#CCCCCC"> to store you can run</font><font color="#E5E5E5"> out of</font>

305
00:16:38,910 --> 00:16:49,439
memory<font color="#CCCCCC"> but some sometime a free</font><font color="#E5E5E5"> some</font>

306
00:16:46,500 --> 00:16:53,760
<font color="#E5E5E5">data are more frequently requested and</font>

307
00:16:49,440 --> 00:16:55,470
<font color="#E5E5E5">some others and it's kind of</font><font color="#CCCCCC"> diet or</font>

308
00:16:53,760 --> 00:17:02,339
<font color="#E5E5E5">distribution if you have already</font><font color="#CCCCCC"> a</font>

309
00:16:55,470 --> 00:17:04,170
<font color="#CCCCCC">thought of that zipper flew</font><font color="#E5E5E5"> so you have</font>

310
00:17:02,339 --> 00:17:07,530
some some videos that<font color="#CCCCCC"> are more</font><font color="#E5E5E5"> popular</font>

311
00:17:04,170 --> 00:17:11,490
than others<font color="#E5E5E5"> and it's important to to</font>

312
00:17:07,530 --> 00:17:15,540
<font color="#CCCCCC">cache the most popular stuff so it's a</font>

313
00:17:11,490 --> 00:17:18,480
good trade-off to to use<font color="#CCCCCC"> ok</font>

314
00:17:15,540 --> 00:17:25,470
small enough<font color="#E5E5E5"> to</font><font color="#CCCCCC"> keep</font><font color="#E5E5E5"> the most popular</font>

315
00:17:18,480 --> 00:17:26,250
items and<font color="#CCCCCC"> evicts says attempts you you</font>

316
00:17:25,470 --> 00:17:32,490
don't<font color="#E5E5E5"> need anymore</font>

317
00:17:26,250 --> 00:17:36,300
<font color="#E5E5E5">by least recently used eviction so</font><font color="#CCCCCC"> this</font>

318
00:17:32,490 --> 00:17:39,750
<font color="#CCCCCC">has</font><font color="#E5E5E5"> a simple package for LRU cache by</font>

319
00:17:36,300 --> 00:17:42,210
<font color="#E5E5E5">batteries</font><font color="#CCCCCC"> Patrick in cope cash</font><font color="#E5E5E5"> it's very</font>

320
00:17:39,750 --> 00:17:44,850
simple to use<font color="#E5E5E5"> but it doesn't support a</font>

321
00:17:42,210 --> 00:17:50,220
TTL front raise and doesn't support

322
00:17:44,850 --> 00:17:53,159
<font color="#E5E5E5">concurrent access</font><font color="#CCCCCC"> out of the box there's</font>

323
00:17:50,220 --> 00:17:57,830
a more way more<font color="#E5E5E5"> powerful cash see cash</font>

324
00:17:53,160 --> 00:18:02,280
by<font color="#E5E5E5"> capsicum will support for TTL and</font>

325
00:17:57,830 --> 00:18:05,449
full different<font color="#CCCCCC"> pool protected biometrics</font>

326
00:18:02,280 --> 00:18:09,200
is for<font color="#E5E5E5"> fast and safe concurrent access</font>

327
00:18:05,450 --> 00:18:11,610
but beware of sin during<font color="#CCCCCC"> odd when</font>

328
00:18:09,200 --> 00:18:13,740
multiple<font color="#CCCCCC"> recording at</font><font color="#E5E5E5"> the same time we</font>

329
00:18:11,610 --> 00:18:16,409
want a<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> a time so we'll fetch it</font>

330
00:18:13,740 --> 00:18:18,870
as in some time<font color="#E5E5E5"> and you can you can do</font>

331
00:18:16,410 --> 00:18:22,710
bats into<font color="#CCCCCC"> the slow service</font><font color="#E5E5E5"> behind</font><font color="#CCCCCC"> them</font>

332
00:18:18,870 --> 00:18:25,500
<font color="#CCCCCC">so you can</font><font color="#E5E5E5"> use a cash</font><font color="#CCCCCC"> lock where you're</font>

333
00:18:22,710 --> 00:18:29,580
implementing a lot it's just<font color="#E5E5E5"> an example</font>

334
00:18:25,500 --> 00:18:33,030
<font color="#CCCCCC">sir</font><font color="#E5E5E5"> but you can also do better issue if</font>

335
00:18:29,580 --> 00:18:37,020
you constraints<font color="#CCCCCC"> a relate by by serving</font>

336
00:18:33,030 --> 00:18:39,899
<font color="#CCCCCC">state content well</font><font color="#E5E5E5"> so TTL is expired and</font>

337
00:18:37,020 --> 00:18:43,440
a second is<font color="#CCCCCC"> three effects the missing</font>

338
00:18:39,900 --> 00:18:46,200
item<font color="#E5E5E5"> and you can</font><font color="#CCCCCC"> also use a optional and</font>

339
00:18:43,440 --> 00:18:49,050
full of coatings to to<font color="#E5E5E5"> limit your</font>

340
00:18:46,200 --> 00:18:52,050
concurrent<font color="#CCCCCC"> fetches to not purchase so</font>

341
00:18:49,050 --> 00:18:56,780
much<font color="#E5E5E5"> slow and unreliable</font><font color="#CCCCCC"> the service</font>

342
00:18:52,050 --> 00:18:56,780
behind<font color="#E5E5E5"> thank you much</font>

343
00:19:00,660 --> 00:19:06,550
thank you

344
00:19:01,960 --> 00:19:09,150
so Fabian<font color="#CCCCCC"> do you you have</font><font color="#E5E5E5"> sites on my</font>

345
00:19:06,550 --> 00:19:09,149
laptop cool

346
00:19:13,830 --> 00:19:19,389
what is your talk<font color="#CCCCCC"> about it's about</font>

347
00:19:16,770 --> 00:19:21,760
<font color="#E5E5E5">calling get</font><font color="#CCCCCC"> test and automating it and</font>

348
00:19:19,390 --> 00:19:38,760
get my second you're automating it<font color="#CCCCCC"> with</font>

349
00:19:21,760 --> 00:19:42,910
<font color="#E5E5E5">go test</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> thanks thank</font><font color="#CCCCCC"> you</font>

350
00:19:38,760 --> 00:19:46,030
<font color="#CCCCCC">alright hi</font><font color="#E5E5E5"> hello world</font><font color="#CCCCCC"> as I already said</font>

351
00:19:42,910 --> 00:19:48,130
<font color="#E5E5E5">this is about</font><font color="#CCCCCC"> a calling git bisect</font><font color="#E5E5E5"> and</font>

352
00:19:46,030 --> 00:19:50,170
automating it with go test it's a trick

353
00:19:48,130 --> 00:19:52,660
<font color="#E5E5E5">I recently learned there's a solid</font>

354
00:19:50,170 --> 00:19:54,310
chance<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> nothing</font><font color="#CCCCCC"> new to</font><font color="#E5E5E5"> you and if</font>

355
00:19:52,660 --> 00:19:58,510
that's the<font color="#CCCCCC"> case I'm very</font><font color="#E5E5E5"> sorry I</font>

356
00:19:54,310 --> 00:20:04,600
apologize<font color="#CCCCCC"> then just shut off</font><font color="#E5E5E5"> and shut</font>

357
00:19:58,510 --> 00:20:07,030
<font color="#CCCCCC">down so we</font><font color="#E5E5E5"> are I had a huge codebase you</font>

358
00:20:04,600 --> 00:20:09,550
can<font color="#E5E5E5"> see it here and this codebase was</font>

359
00:20:07,030 --> 00:20:11,680
pretty<font color="#E5E5E5"> solid</font><font color="#CCCCCC"> for most of the time and</font>

360
00:20:09,550 --> 00:20:13,629
<font color="#E5E5E5">since I wrote this many many commits</font>

361
00:20:11,680 --> 00:20:16,330
were edit<font color="#E5E5E5"> and at some point a</font><font color="#CCCCCC"> buck was</font>

362
00:20:13,630 --> 00:20:18,040
introduced and what I was<font color="#E5E5E5"> thinking of my</font>

363
00:20:16,330 --> 00:20:20,379
khatma is how I remember<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to be was</font>

364
00:20:18,040 --> 00:20:23,050
<font color="#CCCCCC">not true anymore and I'm really really</font>

365
00:20:20,380 --> 00:20:25,840
<font color="#E5E5E5">sure it wasn't that a long</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> ago it</font>

366
00:20:23,050 --> 00:20:28,090
<font color="#E5E5E5">was very solid before but my</font><font color="#CCCCCC"> tests</font><font color="#E5E5E5"> they</font>

367
00:20:25,840 --> 00:20:32,439
only cover the<font color="#E5E5E5"> backs</font><font color="#CCCCCC"> I already thought</font>

368
00:20:28,090 --> 00:20:34,149
<font color="#CCCCCC">of when I wrote the code so the back I</font>

369
00:20:32,440 --> 00:20:35,920
couldn't have introduced<font color="#E5E5E5"> it in a</font>

370
00:20:34,150 --> 00:20:39,330
<font color="#E5E5E5">gazillion of commits that have happened</font>

371
00:20:35,920 --> 00:20:41,860
in<font color="#E5E5E5"> between so how do I find it so my</font>

372
00:20:39,330 --> 00:20:43,810
favorite tool for<font color="#E5E5E5"> doing this is git</font>

373
00:20:41,860 --> 00:20:46,570
bisect if you never<font color="#CCCCCC"> used git bisect this</font>

374
00:20:43,810 --> 00:20:48,370
performs a binary<font color="#E5E5E5"> search on the commits</font>

375
00:20:46,570 --> 00:20:51,639
in your<font color="#CCCCCC"> history and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can mark commits</font>

376
00:20:48,370 --> 00:20:53,649
by testing them as good or bad<font color="#E5E5E5"> and due</font>

377
00:20:51,640 --> 00:20:57,550
to the<font color="#E5E5E5"> binary search and the logarithmic</font>

378
00:20:53,650 --> 00:21:00,010
effort<font color="#CCCCCC"> it has</font><font color="#E5E5E5"> you yeah you only need a</font>

379
00:20:57,550 --> 00:21:03,730
very<font color="#E5E5E5"> few test cases to actually find the</font>

380
00:21:00,010 --> 00:21:06,250
<font color="#CCCCCC">commits who introduced</font><font color="#E5E5E5"> a buck</font><font color="#CCCCCC"> normally I</font>

381
00:21:03,730 --> 00:21:09,550
do this manually<font color="#E5E5E5"> and I found it a</font><font color="#CCCCCC"> bit</font>

382
00:21:06,250 --> 00:21:11,410
cumbersome you<font color="#CCCCCC"> go on and you</font><font color="#E5E5E5"> say a call</font>

383
00:21:09,550 --> 00:21:13,600
get start<font color="#E5E5E5"> you</font>

384
00:21:11,410 --> 00:21:15,490
initial<font color="#CCCCCC"> committees bad and good and then</font>

385
00:21:13,600 --> 00:21:17,409
you just repeat the<font color="#CCCCCC"> process on and honor</font>

386
00:21:15,490 --> 00:21:21,250
and and<font color="#E5E5E5"> hey repetition come on we're</font>

387
00:21:17,410 --> 00:21:23,890
<font color="#CCCCCC">engineers we can automate this</font><font color="#E5E5E5"> so the go</font>

388
00:21:21,250 --> 00:21:25,330
test is<font color="#E5E5E5"> actually a very</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> good way to</font>

389
00:21:23,890 --> 00:21:27,490
automate this<font color="#CCCCCC"> code you can actually</font>

390
00:21:25,330 --> 00:21:29,439
create a new<font color="#E5E5E5"> goal test for your greedy</font>

391
00:21:27,490 --> 00:21:31,030
regression<font color="#E5E5E5"> but you just identified you</font>

392
00:21:29,440 --> 00:21:32,590
know<font color="#CCCCCC"> it's in there somewhere so just</font>

393
00:21:31,030 --> 00:21:34,870
write a test case<font color="#E5E5E5"> that will actually</font>

394
00:21:32,590 --> 00:21:37,629
<font color="#E5E5E5">pass when the back is not happening and</font>

395
00:21:34,870 --> 00:21:40,179
<font color="#E5E5E5">fails when the back is occurring and if</font>

396
00:21:37,630 --> 00:21:42,400
you write this test<font color="#E5E5E5"> put it in a separate</font>

397
00:21:40,180 --> 00:21:44,950
test file do<font color="#E5E5E5"> not commit this file yet</font>

398
00:21:42,400 --> 00:21:46,810
<font color="#E5E5E5">don't put it into your Reb repository</font>

399
00:21:44,950 --> 00:21:48,400
otherwise it will get lost when you

400
00:21:46,810 --> 00:21:52,360
travel back in time<font color="#E5E5E5"> and the history of</font>

401
00:21:48,400 --> 00:21:54,640
<font color="#E5E5E5">your</font><font color="#CCCCCC"> repository</font><font color="#E5E5E5"> and then you just start</font>

402
00:21:52,360 --> 00:21:56,919
as<font color="#E5E5E5"> usual you call git bisect start on</font>

403
00:21:54,640 --> 00:21:58,390
your repository<font color="#CCCCCC"> you know it wasn't there</font>

404
00:21:56,920 --> 00:22:00,430
in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> beginning so you just mark the</font>

405
00:21:58,390 --> 00:22:03,070
initial commit<font color="#E5E5E5"> as good and you mark the</font>

406
00:22:00,430 --> 00:22:06,010
head of your current branch as bad and

407
00:22:03,070 --> 00:22:09,070
then<font color="#E5E5E5"> you can actually do git bisect run</font>

408
00:22:06,010 --> 00:22:10,840
and let git bisect<font color="#E5E5E5"> run do its magic and</font>

409
00:22:09,070 --> 00:22:12,939
<font color="#E5E5E5">get by that run is cool because it</font>

410
00:22:10,840 --> 00:22:15,370
expects a command that returns with an

411
00:22:12,940 --> 00:22:17,500
exit code of<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> if your code</font><font color="#CCCCCC"> is good</font>

412
00:22:15,370 --> 00:22:18,580
and returns with an<font color="#E5E5E5"> X and code of</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> if</font>

413
00:22:17,500 --> 00:22:21,040
that's not the<font color="#E5E5E5"> case</font>

414
00:22:18,580 --> 00:22:23,050
and if you repeat<font color="#CCCCCC"> this actually after</font>

415
00:22:21,040 --> 00:22:24,520
about five to ten seconds you have<font color="#CCCCCC"> found</font>

416
00:22:23,050 --> 00:22:27,430
the commitment<font color="#CCCCCC"> introduced you're back</font>

417
00:22:24,520 --> 00:22:29,110
<font color="#E5E5E5">and go test is perfect for this</font><font color="#CCCCCC"> because</font>

418
00:22:27,430 --> 00:22:30,880
now you already<font color="#CCCCCC"> have a test</font><font color="#E5E5E5"> case for</font>

419
00:22:29,110 --> 00:22:32,770
<font color="#E5E5E5">this regression case now you can just</font>

420
00:22:30,880 --> 00:22:34,810
<font color="#E5E5E5">commit it you have found what's going on</font>

421
00:22:32,770 --> 00:22:36,460
you<font color="#E5E5E5"> can have found what commit to</font>

422
00:22:34,810 --> 00:22:39,159
introduce the back you<font color="#E5E5E5"> can put it in the</font>

423
00:22:36,460 --> 00:22:40,900
repository<font color="#CCCCCC"> and that's actually</font><font color="#E5E5E5"> all there</font>

424
00:22:39,160 --> 00:22:43,540
is to it<font color="#E5E5E5"> and this is really neat for</font>

425
00:22:40,900 --> 00:22:48,580
automating stuff which was<font color="#E5E5E5"> bothering me</font>

426
00:22:43,540 --> 00:22:51,220
quite a lot before<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I was able to find</font>

427
00:22:48,580 --> 00:22:53,740
<font color="#CCCCCC">yeah I have introduced</font><font color="#E5E5E5"> back myself</font><font color="#CCCCCC"> and I</font>

428
00:22:51,220 --> 00:22:55,870
come<font color="#CCCCCC"> into this test</font><font color="#E5E5E5"> I changed the coach</font>

429
00:22:53,740 --> 00:22:57,760
to be correct again<font color="#E5E5E5"> and I'm done cool</font>

430
00:22:55,870 --> 00:22:59,649
thing is this is<font color="#CCCCCC"> not limited to go</font><font color="#E5E5E5"> test</font>

431
00:22:57,760 --> 00:23:01,210
you can<font color="#CCCCCC"> actually do it with</font><font color="#E5E5E5"> any command</font>

432
00:22:59,650 --> 00:23:02,980
that returns an exit code of<font color="#E5E5E5"> zero and</font>

433
00:23:01,210 --> 00:23:06,400
success and an exit code of<font color="#E5E5E5"> one or</font>

434
00:23:02,980 --> 00:23:08,620
something else<font color="#CCCCCC"> zero on</font><font color="#E5E5E5"> failure go is</font>

435
00:23:06,400 --> 00:23:10,450
perfect<font color="#E5E5E5"> because you</font><font color="#CCCCCC"> can also write a</font>

436
00:23:08,620 --> 00:23:13,030
very very<font color="#E5E5E5"> little tool and</font><font color="#CCCCCC"> call this with</font>

437
00:23:10,450 --> 00:23:15,670
go run and the combination of git bisect

438
00:23:13,030 --> 00:23:19,230
<font color="#E5E5E5">and go test can actually help you</font><font color="#CCCCCC"> to</font>

439
00:23:15,670 --> 00:23:19,230
find bugs<font color="#E5E5E5"> much faster thank you</font>

440
00:23:22,970 --> 00:23:29,970
well that's my charger<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> okay</font>

441
00:23:27,440 --> 00:23:34,770
thank you how many of you have used git

442
00:23:29,970 --> 00:23:36,590
bisect before okay<font color="#E5E5E5"> good the rest you</font>

443
00:23:34,770 --> 00:23:42,270
<font color="#CCCCCC">should use it</font>

444
00:23:36,590 --> 00:23:46,939
Florine yes but not<font color="#E5E5E5"> for</font><font color="#CCCCCC"> gopher cone</font>

445
00:23:42,270 --> 00:23:46,940
<font color="#CCCCCC">Iceland you have another talk</font><font color="#E5E5E5"> come on</font>

446
00:23:48,750 --> 00:23:56,520
is that on the slides here do you need

447
00:23:51,060 --> 00:24:05,629
your he brought his data center<font color="#E5E5E5"> look at</font>

448
00:23:56,520 --> 00:24:05,629
this okay

449
00:24:58,220 --> 00:25:01,339
[Music]

450
00:25:12,859 --> 00:25:25,830
<font color="#E5E5E5">cool you do you so actually 720 is</font>

451
00:25:23,369 --> 00:25:28,049
probably better<font color="#E5E5E5"> but I'm not sure so fun</font>

452
00:25:25,830 --> 00:25:30,330
thing about this guy here other than<font color="#CCCCCC"> Co</font>

453
00:25:28,049 --> 00:25:34,590
<font color="#E5E5E5">organizing</font><font color="#CCCCCC"> gopher con</font><font color="#E5E5E5"> Iceland</font>

454
00:25:30,330 --> 00:25:39,289
he's also maintainer<font color="#E5E5E5"> for one</font><font color="#CCCCCC"> your</font>

455
00:25:34,590 --> 00:25:41,850
maintainer<font color="#E5E5E5"> right for one</font><font color="#CCCCCC"> ID I</font>

456
00:25:39,289 --> 00:25:44,100
contributed to<font color="#CCCCCC"> one ID and you figure out</font>

457
00:25:41,850 --> 00:25:47,820
which one soon yeah thank<font color="#E5E5E5"> you</font>

458
00:25:44,100 --> 00:25:50,488
so hey<font color="#E5E5E5"> everyone I'm fluorine</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> organize</font>

459
00:25:47,820 --> 00:25:55,918
the London go meet up<font color="#E5E5E5"> with some other</font>

460
00:25:50,489 --> 00:25:58,320
<font color="#E5E5E5">people I organized the gopher</font><font color="#CCCCCC"> con</font>

461
00:25:55,919 --> 00:26:00,480
Iceland with Natalie<font color="#E5E5E5"> we'll talk about it</font>

462
00:25:58,320 --> 00:26:02,249
soon<font color="#E5E5E5"> but now I'm here to talk about the</font>

463
00:26:00,480 --> 00:26:05,489
<font color="#E5E5E5">go ID from</font><font color="#CCCCCC"> JetBrains</font>

464
00:26:02,249 --> 00:26:07,049
<font color="#CCCCCC">Rowland</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> quickly for a</font>

465
00:26:05,489 --> 00:26:11,639
couple<font color="#CCCCCC"> of features that it has</font><font color="#E5E5E5"> and I</font>

466
00:26:07,049 --> 00:26:13,440
think<font color="#E5E5E5"> you should give it a try</font><font color="#CCCCCC"> it's</font>

467
00:26:11,639 --> 00:26:16,949
gonna be a bit hard with one<font color="#E5E5E5"> hand but</font>

468
00:26:13,440 --> 00:26:26,450
let's<font color="#E5E5E5"> see how it goes so of no no I'm</font>

469
00:26:16,950 --> 00:26:26,450
not<font color="#E5E5E5"> saying so let me give me a second</font>

470
00:26:26,850 --> 00:26:37,259
that's<font color="#CCCCCC"> why it's fine so</font><font color="#E5E5E5"> hopefully</font>

471
00:26:33,870 --> 00:26:39,928
<font color="#E5E5E5">everybody can see this right so</font><font color="#CCCCCC"> in go</font>

472
00:26:37,259 --> 00:26:42,600
<font color="#E5E5E5">it's really boring to handle errors</font>

473
00:26:39,929 --> 00:26:46,649
properly<font color="#E5E5E5"> right so we can do something</font>

474
00:26:42,600 --> 00:26:48,959
<font color="#CCCCCC">like</font><font color="#E5E5E5"> err dot not</font><font color="#CCCCCC"> kneel and you have that</font>

475
00:26:46,649 --> 00:26:50,428
<font color="#E5E5E5">type of completion and then of course</font>

476
00:26:48,960 --> 00:26:53,299
you're a good girlfriend you're handling

477
00:26:50,429 --> 00:26:56,070
the error<font color="#CCCCCC"> like a true gopher panicking</font>

478
00:26:53,299 --> 00:26:58,500
<font color="#E5E5E5">right the other thing that you can do</font>

479
00:26:56,070 --> 00:27:09,000
<font color="#CCCCCC">quickly with the</font><font color="#E5E5E5"> ID is whenever you have</font>

480
00:26:58,500 --> 00:27:16,019
a query so sorry it's hard in English

481
00:27:09,000 --> 00:27:19,289
hard so the ID like<font color="#E5E5E5"> just you so I I just</font>

482
00:27:16,019 --> 00:27:22,440
typed<font color="#E5E5E5"> DB dot cube with smaller case and</font>

483
00:27:19,289 --> 00:27:27,450
it<font color="#E5E5E5"> just worked and now if I</font><font color="#CCCCCC"> start typing</font>

484
00:27:22,440 --> 00:27:29,370
<font color="#E5E5E5">within a query let's say select it will</font>

485
00:27:27,450 --> 00:27:32,100
automatically start<font color="#E5E5E5"> completing the</font>

486
00:27:29,370 --> 00:27:37,340
sequel query and so on for me if you tie

487
00:27:32,100 --> 00:27:37,340
the IDE<font color="#CCCCCC"> to let's say to a</font><font color="#E5E5E5"> database from</font>

488
00:27:38,000 --> 00:27:43,379
<font color="#E5E5E5">in my case I have a database it knows</font>

489
00:27:41,100 --> 00:27:46,799
already<font color="#CCCCCC"> where to connect and so on so</font>

490
00:27:43,379 --> 00:27:48,840
you<font color="#CCCCCC"> can do a lot lots of cool things</font>

491
00:27:46,799 --> 00:27:51,809
<font color="#CCCCCC">with</font><font color="#E5E5E5"> sequel if you if that's the</font>

492
00:27:48,840 --> 00:27:53,220
database<font color="#E5E5E5"> of choice but switching to</font>

493
00:27:51,809 --> 00:27:59,100
another<font color="#CCCCCC"> project</font><font color="#E5E5E5"> to show</font><font color="#CCCCCC"> you some other</font>

494
00:27:53,220 --> 00:28:02,549
<font color="#E5E5E5">cool features require three three things</font>

495
00:27:59,100 --> 00:28:05,360
<font color="#E5E5E5">so I</font><font color="#CCCCCC"> mean the cheaper neatest project</font>

496
00:28:02,549 --> 00:28:08,429
because that's a that's a fun one<font color="#E5E5E5"> and</font>

497
00:28:05,360 --> 00:28:12,928
<font color="#CCCCCC">let's say I'm</font><font color="#E5E5E5"> looking at this</font><font color="#CCCCCC"> function</font>

498
00:28:08,429 --> 00:28:17,070
<font color="#E5E5E5">I've just opened</font><font color="#CCCCCC"> a random file which is</font>

499
00:28:12,929 --> 00:28:18,299
under I know<font color="#CCCCCC"> chip city L</font><font color="#E5E5E5"> apply that go I</font>

500
00:28:17,070 --> 00:28:20,340
have no idea what<font color="#CCCCCC"> it</font><font color="#E5E5E5"> does</font>

501
00:28:18,299 --> 00:28:23,100
so I would like<font color="#E5E5E5"> to change this function</font>

502
00:28:20,340 --> 00:28:24,809
I<font color="#E5E5E5"> would like to refactor</font><font color="#CCCCCC"> it right so the</font>

503
00:28:23,100 --> 00:28:26,699
ID knows already<font color="#E5E5E5"> to suggest some</font>

504
00:28:24,809 --> 00:28:31,379
possible names for it and let's say I

505
00:28:26,700 --> 00:28:34,019
want to<font color="#E5E5E5"> rename</font><font color="#CCCCCC"> it to</font><font color="#E5E5E5"> lowercase</font><font color="#CCCCCC"> yet right</font>

506
00:28:31,379 --> 00:28:37,199
<font color="#E5E5E5">and the idea will say oh well here's</font>

507
00:28:34,019 --> 00:28:39,640
what<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are want to rename here's the</font>

508
00:28:37,200 --> 00:28:41,860
files and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can preview</font>

509
00:28:39,640 --> 00:28:44,080
what's<font color="#E5E5E5"> gonna be applied and it also</font>

510
00:28:41,860 --> 00:28:46,570
knows how to search<font color="#E5E5E5"> in comments and</font><font color="#CCCCCC"> so</font>

511
00:28:44,080 --> 00:28:48,220
on so whenever you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> you want to</font>

512
00:28:46,570 --> 00:28:51,760
refactor something you'll<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to see</font>

513
00:28:48,220 --> 00:28:55,530
what's<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be changed for you and you</font>

514
00:28:51,760 --> 00:28:58,150
can do that so I<font color="#E5E5E5"> just messed around with</font>

515
00:28:55,530 --> 00:29:00,160
communities but<font color="#E5E5E5"> now let's say oh</font><font color="#CCCCCC"> I</font>

516
00:28:58,150 --> 00:29:03,100
realized I've done a mistake<font color="#CCCCCC"> I want to</font>

517
00:29:00,160 --> 00:29:06,370
<font color="#E5E5E5">go back</font><font color="#CCCCCC"> there is a thing called the</font>

518
00:29:03,100 --> 00:29:09,250
<font color="#E5E5E5">local history show a local history and</font>

519
00:29:06,370 --> 00:29:11,439
then you can actually see what happened

520
00:29:09,250 --> 00:29:14,080
with with the refactoring<font color="#E5E5E5"> or with any</font>

521
00:29:11,440 --> 00:29:14,880
changes<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you are doing</font><font color="#E5E5E5"> right okay</font>

522
00:29:14,080 --> 00:29:17,679
<font color="#CCCCCC">code</font>

523
00:29:14,880 --> 00:29:19,810
undo<font color="#E5E5E5"> that so you can undo that and it</font>

524
00:29:17,680 --> 00:29:26,200
will undo<font color="#CCCCCC"> everything and the</font><font color="#E5E5E5"> last cool</font>

525
00:29:19,810 --> 00:29:27,490
feature<font color="#CCCCCC"> there is a right now this one is</font>

526
00:29:26,200 --> 00:29:31,000
<font color="#CCCCCC">actually cool and I want to show it I</font>

527
00:29:27,490 --> 00:29:34,570
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> care you have the call hierarchy</font>

528
00:29:31,000 --> 00:29:37,090
of any function<font color="#E5E5E5"> so yeah throw it so you</font>

529
00:29:34,570 --> 00:29:38,560
yeah you you can take any function and

530
00:29:37,090 --> 00:29:40,510
you<font color="#E5E5E5"> can see the call hierarchy for it</font>

531
00:29:38,560 --> 00:29:43,270
and all the colors for<font color="#CCCCCC"> that and so on</font>

532
00:29:40,510 --> 00:29:48,640
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you can understand where the changes</font>

533
00:29:43,270 --> 00:29:50,190
propagate inside<font color="#E5E5E5"> thank you thank you</font>

534
00:29:48,640 --> 00:29:53,370
[Applause]

535
00:29:50,190 --> 00:30:36,160
the last<font color="#E5E5E5"> question</font><font color="#CCCCCC"> is how do you exit</font>

536
00:29:53,370 --> 00:30:39,310
<font color="#CCCCCC">Cullen Q so that's</font><font color="#E5E5E5"> probably my Illinois</font>

537
00:30:36,160 --> 00:30:42,730
<font color="#E5E5E5">so we're going from the co-organizer of</font>

538
00:30:39,310 --> 00:30:45,159
<font color="#E5E5E5">gopher con iceland to the organ the one</font>

539
00:30:42,730 --> 00:30:48,700
of the co-organizers of go lab in

540
00:30:45,160 --> 00:30:50,200
<font color="#CCCCCC">Florence Giovanni hi my talk is not</font>

541
00:30:48,700 --> 00:30:51,520
<font color="#CCCCCC">about the conference but</font><font color="#E5E5E5"> it's about</font><font color="#CCCCCC"> a</font>

542
00:30:50,200 --> 00:30:53,860
project<font color="#E5E5E5"> I made in</font><font color="#CCCCCC"> my free time</font>

543
00:30:51,520 --> 00:30:56,350
it's a Nintendo DS simulator<font color="#CCCCCC"> hundred</font>

544
00:30:53,860 --> 00:30:58,330
<font color="#CCCCCC">percent written and go so a Nintendo yes</font>

545
00:30:56,350 --> 00:31:02,050
is this<font color="#CCCCCC"> hand</font><font color="#E5E5E5"> and console you know about</font>

546
00:30:58,330 --> 00:31:05,260
it<font color="#E5E5E5"> it's two CPUs online and 97 as two</font>

547
00:31:02,050 --> 00:31:08,680
<font color="#E5E5E5">different two DS GPUs one per screen and</font>

548
00:31:05,260 --> 00:31:10,150
one 3d GPU and a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> bunch of</font>

549
00:31:08,680 --> 00:31:13,690
hardware<font color="#CCCCCC"> that you also need to</font><font color="#E5E5E5"> emulate</font>

550
00:31:10,150 --> 00:31:15,490
like the<font color="#E5E5E5"> MAS timers and whatnot</font><font color="#CCCCCC"> so first</font>

551
00:31:13,690 --> 00:31:17,890
you<font color="#CCCCCC"> need to write</font><font color="#E5E5E5"> an R 7</font><font color="#CCCCCC"> and online</font>

552
00:31:15,490 --> 00:31:19,660
<font color="#E5E5E5">interpreter from scratch and so</font>

553
00:31:17,890 --> 00:31:22,030
basically<font color="#CCCCCC"> rightness standard pipeline</font>

554
00:31:19,660 --> 00:31:23,950
fetch decode execute of a<font color="#CCCCCC"> CPU emulate</font>

555
00:31:22,030 --> 00:31:25,770
that<font color="#CCCCCC"> dingo you can send the rat the code</font>

556
00:31:23,950 --> 00:31:28,270
is basically<font color="#E5E5E5"> the main loop of them</font>

557
00:31:25,770 --> 00:31:30,790
interpreter<font color="#E5E5E5"> fetching an instruction and</font>

558
00:31:28,270 --> 00:31:33,250
running and I used to<font color="#E5E5E5"> have a lot</font><font color="#CCCCCC"> of</font>

559
00:31:30,790 --> 00:31:36,159
unsafe code in there but then like late

560
00:31:33,250 --> 00:31:39,070
go version<font color="#E5E5E5"> optimize it a lot and I went</font>

561
00:31:36,160 --> 00:31:42,850
back<font color="#CCCCCC"> to automatic</font><font color="#E5E5E5"> go with slices and</font>

562
00:31:39,070 --> 00:31:45,790
everything and really cool job on made

563
00:31:42,850 --> 00:31:48,639
by the government<font color="#E5E5E5"> a nurse and then</font><font color="#CCCCCC"> each</font>

564
00:31:45,790 --> 00:31:50,770
opcode of<font color="#E5E5E5"> course you have to write a lot</font>

565
00:31:48,640 --> 00:31:53,270
<font color="#CCCCCC">of functions like this one this is like</font>

566
00:31:50,770 --> 00:31:55,668
a net opcode<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I</font>

567
00:31:53,270 --> 00:31:59,000
I<font color="#E5E5E5"> didn't with cogeneration so it's about</font>

568
00:31:55,669 --> 00:32:00,740
<font color="#CCCCCC">20 26</font><font color="#E5E5E5"> K lines of generated code because</font>

569
00:31:59,000 --> 00:32:03,020
it's mostly like of<font color="#CCCCCC"> course it's</font>

570
00:32:00,740 --> 00:32:06,289
different<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's similar and some</font>

571
00:32:03,020 --> 00:32:08,240
generics<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> of L</font><font color="#E5E5E5"> P R and</font><font color="#CCCCCC"> then I</font>

572
00:32:06,289 --> 00:32:10,580
also write<font color="#CCCCCC"> an JIT compiler</font><font color="#E5E5E5"> because it</font>

573
00:32:08,240 --> 00:32:13,730
was fun<font color="#CCCCCC"> so it's like a hand roll sheets</font>

574
00:32:10,580 --> 00:32:15,590
from<font color="#CCCCCC"> scratch is about</font><font color="#E5E5E5"> 2,000 lines and</font><font color="#CCCCCC"> it</font>

575
00:32:13,730 --> 00:32:20,090
got no<font color="#E5E5E5"> optimization just a straight</font>

576
00:32:15,590 --> 00:32:21,980
translation from arm to x86 and is a

577
00:32:20,090 --> 00:32:23,539
<font color="#E5E5E5">little bit buggy but it works</font><font color="#CCCCCC"> and this</font>

578
00:32:21,980 --> 00:32:27,440
is an example<font color="#E5E5E5"> of the code</font><font color="#CCCCCC"> so basically</font>

579
00:32:23,539 --> 00:32:29,899
each of<font color="#CCCCCC"> those calls emits</font><font color="#E5E5E5"> one x86</font>

580
00:32:27,440 --> 00:32:33,919
instruction that will later<font color="#E5E5E5"> be executed</font>

581
00:32:29,899 --> 00:32:35,209
<font color="#CCCCCC">I got the test fit</font><font color="#E5E5E5"> for the JIT so that</font>

582
00:32:33,919 --> 00:32:38,110
you compare that<font color="#E5E5E5"> it makes the same</font>

583
00:32:35,210 --> 00:32:41,510
results<font color="#E5E5E5"> compared to the interpreter</font><font color="#CCCCCC"> I</font>

584
00:32:38,110 --> 00:32:42,979
got<font color="#E5E5E5"> I wrote a little debugger because it</font>

585
00:32:41,510 --> 00:32:46,370
was you don't understand what's going<font color="#CCCCCC"> on</font>

586
00:32:42,980 --> 00:32:49,220
<font color="#CCCCCC">and</font><font color="#E5E5E5"> further for the GPU it's about</font><font color="#CCCCCC"> 2,000</font>

587
00:32:46,370 --> 00:32:51,549
lines<font color="#E5E5E5"> of</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> is made</font><font color="#CCCCCC"> is based on STL</font>

588
00:32:49,220 --> 00:32:54,140
just<font color="#CCCCCC"> open the window and then drawn it</font>

589
00:32:51,549 --> 00:32:57,500
this is an<font color="#E5E5E5"> example of a function drawing</font>

590
00:32:54,140 --> 00:32:59,690
like a sprite<font color="#CCCCCC"> in</font><font color="#E5E5E5"> running parallel with</font>

591
00:32:57,500 --> 00:33:03,740
<font color="#E5E5E5">the CPU emulation within the different</font>

592
00:32:59,690 --> 00:33:07,070
go routines and kind of works<font color="#E5E5E5"> I</font><font color="#CCCCCC"> mean</font><font color="#E5E5E5"> it</font>

593
00:33:03,740 --> 00:33:09,679
<font color="#E5E5E5">so not very</font><font color="#CCCCCC"> fast but it</font><font color="#E5E5E5"> works and for 3d</font>

594
00:33:07,070 --> 00:33:11,240
<font color="#E5E5E5">again</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> rasterizer from scratch</font><font color="#CCCCCC"> so</font>

595
00:33:09,679 --> 00:33:13,460
this is an example<font color="#E5E5E5"> of a poly filler</font>

596
00:33:11,240 --> 00:33:17,029
doing like a polygon with textures pixel

597
00:33:13,460 --> 00:33:19,580
<font color="#CCCCCC">pixel there is a lot of</font><font color="#E5E5E5"> again a lot of</font>

598
00:33:17,029 --> 00:33:21,580
<font color="#E5E5E5">duplication here so I went for a code</font>

599
00:33:19,580 --> 00:33:26,000
generation for<font color="#E5E5E5"> the rasterizer as well</font>

600
00:33:21,580 --> 00:33:30,678
it's<font color="#E5E5E5"> about you see 34k lines of generate</font>

601
00:33:26,000 --> 00:33:32,179
code for<font color="#E5E5E5"> this and so basically at the</font>

602
00:33:30,679 --> 00:33:34,669
<font color="#CCCCCC">end of this</font><font color="#E5E5E5"> experience what is missing</font>

603
00:33:32,179 --> 00:33:36,370
<font color="#E5E5E5">in go for</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of project more</font>

604
00:33:34,669 --> 00:33:38,870
optimizations because it's still not

605
00:33:36,370 --> 00:33:40,879
<font color="#E5E5E5">what I can get with C++</font>

606
00:33:38,870 --> 00:33:44,178
if<font color="#E5E5E5"> this was written in C++</font><font color="#CCCCCC"> would be</font>

607
00:33:40,880 --> 00:33:46,159
faster<font color="#CCCCCC"> operator overloading is very</font>

608
00:33:44,179 --> 00:33:48,110
useful for<font color="#E5E5E5"> like geometric code because</font>

609
00:33:46,159 --> 00:33:49,490
you<font color="#E5E5E5"> have vector matrices and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to</font>

610
00:33:48,110 --> 00:33:51,379
have classes<font color="#E5E5E5"> with operating or</font>

611
00:33:49,490 --> 00:33:55,039
overloading<font color="#E5E5E5"> otherwise your code looks</font>

612
00:33:51,380 --> 00:33:57,049
<font color="#CCCCCC">like</font><font color="#E5E5E5"> and and also some kind of</font>

613
00:33:55,039 --> 00:33:59,210
parameterization your code to<font color="#CCCCCC"> avoid like</font>

614
00:33:57,049 --> 00:34:01,520
code generation even<font color="#CCCCCC"> it full-blown</font>

615
00:33:59,210 --> 00:34:04,070
<font color="#E5E5E5">generics actually</font><font color="#CCCCCC"> proposal</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> this the</font>

616
00:34:01,520 --> 00:34:05,629
<font color="#CCCCCC">with some need to go about</font><font color="#E5E5E5"> like</font>

617
00:34:04,070 --> 00:34:08,270
of<font color="#CCCCCC"> parameterization</font><font color="#E5E5E5"> that will be enough</font>

618
00:34:05,630 --> 00:34:10,310
for<font color="#E5E5E5"> my case</font><font color="#CCCCCC"> and then for the</font><font color="#E5E5E5"> g2 need</font>

619
00:34:08,270 --> 00:34:12,110
some<font color="#E5E5E5"> runtime api to register</font><font color="#CCCCCC"> jet code</font>

620
00:34:10,310 --> 00:34:14,090
<font color="#E5E5E5">into the</font><font color="#CCCCCC"> runtime because right now I</font>

621
00:34:12,110 --> 00:34:15,590
need<font color="#E5E5E5"> to if a turn on the G tell me to</font>

622
00:34:14,090 --> 00:34:17,480
disable<font color="#CCCCCC"> the garbage collector</font><font color="#E5E5E5"> because</font>

623
00:34:15,590 --> 00:34:18,950
otherwise<font color="#CCCCCC"> who will panic because</font><font color="#E5E5E5"> he</font>

624
00:34:17,480 --> 00:34:22,850
doesn't<font color="#E5E5E5"> find stack maps for the</font>

625
00:34:18,949 --> 00:34:27,739
generated function so a<font color="#E5E5E5"> little demo</font>

626
00:34:22,850 --> 00:34:31,790
because<font color="#E5E5E5"> video</font><font color="#CCCCCC"> games are cool let's do</font>

627
00:34:27,739 --> 00:34:35,659
like this and it's not<font color="#CCCCCC"> your computer</font><font color="#E5E5E5"> so</font>

628
00:34:31,790 --> 00:34:38,000
I don't have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> demo yeah yeah sorry</font>

629
00:34:35,659 --> 00:34:39,920
office<font color="#E5E5E5"> is mine and</font><font color="#CCCCCC"> then I have a real</font>

630
00:34:38,000 --> 00:34:45,889
demo this<font color="#E5E5E5"> was just video I forgot to</font>

631
00:34:39,920 --> 00:34:47,150
<font color="#E5E5E5">share so I'm sorry</font><font color="#CCCCCC"> I will for for</font><font color="#E5E5E5"> the</font>

632
00:34:45,889 --> 00:34:48,920
<font color="#CCCCCC">videos if</font><font color="#E5E5E5"> you want</font><font color="#CCCCCC"> to have a look but</font>

633
00:34:47,150 --> 00:34:52,070
it's just video for video games running

634
00:34:48,920 --> 00:34:55,580
<font color="#E5E5E5">in the emulator of course and and that's</font>

635
00:34:52,070 --> 00:34:57,500
it<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can look at the code from a</font>

636
00:34:55,580 --> 00:34:59,270
<font color="#E5E5E5">github repository</font><font color="#CCCCCC"> and this is</font><font color="#E5E5E5"> just a</font>

637
00:34:57,500 --> 00:35:00,980
<font color="#CCCCCC">lighting</font><font color="#E5E5E5"> talk if you want to</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will I</font>

638
00:34:59,270 --> 00:35:03,410
will<font color="#CCCCCC"> give a full talk at the go up</font>

639
00:35:00,980 --> 00:35:05,210
conference<font color="#E5E5E5"> we have some stickers and</font>

640
00:35:03,410 --> 00:35:08,799
discount coupons<font color="#CCCCCC"> er available later if</font>

641
00:35:05,210 --> 00:35:08,800
you want to<font color="#E5E5E5"> pick them up thank you much</font>

642
00:35:12,610 --> 00:35:20,810
important question is<font color="#CCCCCC"> the CFP open cool</font>

643
00:35:17,120 --> 00:35:23,600
so if you want<font color="#E5E5E5"> to speak in Florence but</font>

644
00:35:20,810 --> 00:35:24,259
just find the website<font color="#E5E5E5"> call at the Rio</font>

645
00:35:23,600 --> 00:35:30,549
there you go

646
00:35:24,260 --> 00:35:33,200
and fluorine<font color="#CCCCCC"> and Natalie oh there</font><font color="#E5E5E5"> you go</font>

647
00:35:30,550 --> 00:35:35,390
<font color="#CCCCCC">hey they're</font><font color="#E5E5E5"> gonna be talking</font><font color="#CCCCCC"> about a</font>

648
00:35:33,200 --> 00:35:41,439
different<font color="#CCCCCC"> conference which is now go</font><font color="#E5E5E5"> for</font>

649
00:35:35,390 --> 00:35:41,440
<font color="#CCCCCC">ganda in i n that is india is i s</font>

650
00:35:58,430 --> 00:36:03,180
this is a very cool gopher<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Ashley</font>

651
00:36:01,440 --> 00:36:05,160
McNamara made for our conference<font color="#E5E5E5"> and</font>

652
00:36:03,180 --> 00:36:09,060
<font color="#E5E5E5">this is why you should come to Iceland</font>

653
00:36:05,160 --> 00:36:12,390
<font color="#E5E5E5">on May 31st through June 2nd yes they'll</font>

654
00:36:09,060 --> 00:36:13,500
be<font color="#E5E5E5"> cool swag with this gopher other fun</font>

655
00:36:12,390 --> 00:36:15,870
stuff<font color="#E5E5E5"> you should know</font><font color="#CCCCCC"> about our</font>

656
00:36:13,500 --> 00:36:18,240
<font color="#CCCCCC">conference is that at least one of the</font>

657
00:36:15,870 --> 00:36:23,190
workshop givers / speakers is<font color="#E5E5E5"> in the</font>

658
00:36:18,240 --> 00:36:24,450
crowd<font color="#E5E5E5"> one other speaker was in the crowd</font>

659
00:36:23,190 --> 00:36:26,040
earlier<font color="#E5E5E5"> gave a talk</font>

660
00:36:24,450 --> 00:36:28,589
so we<font color="#E5E5E5"> already announced three speakers</font>

661
00:36:26,040 --> 00:36:30,240
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> JB D Peter and Chris we have</font>

662
00:36:28,590 --> 00:36:33,270
<font color="#CCCCCC">five workshops that we're going to</font><font color="#E5E5E5"> give</font>

663
00:36:30,240 --> 00:36:35,430
on<font color="#E5E5E5"> May 31st</font><font color="#CCCCCC"> the talks will be</font><font color="#E5E5E5"> June 1st</font>

664
00:36:33,270 --> 00:36:37,140
June 2nd<font color="#E5E5E5"> this is a great time</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go to</font>

665
00:36:35,430 --> 00:36:40,620
Iceland because it's almost<font color="#E5E5E5"> full of Sun</font>

666
00:36:37,140 --> 00:36:44,129
our call for<font color="#CCCCCC"> papers</font><font color="#E5E5E5"> is open</font><font color="#CCCCCC"> other open</font>

667
00:36:40,620 --> 00:36:47,640
call<font color="#CCCCCC"> for papers are I'm reading this all</font>

668
00:36:44,130 --> 00:36:49,200
<font color="#E5E5E5">from</font><font color="#CCCCCC"> the golang / go</font><font color="#E5E5E5"> repo in the wiki</font>

669
00:36:47,640 --> 00:36:52,230
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can find all of this but</font><font color="#E5E5E5"> you should</font>

670
00:36:49,200 --> 00:36:55,680
<font color="#E5E5E5">submit to</font><font color="#CCCCCC"> our conference and you should</font>

671
00:36:52,230 --> 00:36:58,680
also submit to<font color="#E5E5E5"> go</font><font color="#CCCCCC"> for con</font><font color="#E5E5E5"> Brazil go for</font>

672
00:36:55,680 --> 00:37:00,330
con<font color="#E5E5E5"> in Denver go for con in Singapore go</font>

673
00:36:58,680 --> 00:37:03,120
for con India is<font color="#CCCCCC"> already closed but you</font>

674
00:37:00,330 --> 00:37:04,590
<font color="#E5E5E5">can attend it in go for</font><font color="#CCCCCC"> con</font><font color="#E5E5E5"> Russia is</font>

675
00:37:03,120 --> 00:37:07,859
probably<font color="#E5E5E5"> also closed but you can attend</font>

676
00:37:04,590 --> 00:37:11,880
it as well<font color="#CCCCCC"> and go lab and there is not</font>

677
00:37:07,860 --> 00:37:13,620
<font color="#E5E5E5">going 2019 we don't have prices yet we</font>

678
00:37:11,880 --> 00:37:15,330
<font color="#E5E5E5">promised</font><font color="#CCCCCC"> to announce this soon we</font>

679
00:37:13,620 --> 00:37:19,170
<font color="#E5E5E5">promise to announce the ticket sale soon</font>

680
00:37:15,330 --> 00:37:22,500
as well and if<font color="#E5E5E5"> you have any questions</font>

681
00:37:19,170 --> 00:37:25,410
you<font color="#CCCCCC"> can find us</font><font color="#E5E5E5"> either here or</font><font color="#CCCCCC"> on slack</font>

682
00:37:22,500 --> 00:37:29,100
<font color="#CCCCCC">on Twitter just feel free</font><font color="#E5E5E5"> to ask</font><font color="#CCCCCC"> us</font>

683
00:37:25,410 --> 00:37:32,279
anything<font color="#CCCCCC"> yeah we look forward to the</font>

684
00:37:29,100 --> 00:37:36,150
heat<font color="#E5E5E5"> to see you there and yeah the call</font>

685
00:37:32,280 --> 00:37:39,270
for paper is also<font color="#CCCCCC"> do submit</font><font color="#E5E5E5"> your talk</font>

686
00:37:36,150 --> 00:37:41,620
and we'll do our best<font color="#E5E5E5"> to see you all</font>

687
00:37:39,270 --> 00:37:48,460
<font color="#E5E5E5">there thank you</font>

688
00:37:41,620 --> 00:37:48,460
[Applause]

689
00:37:52,990 --> 00:37:56,500
do you have you<font color="#CCCCCC"> want to use that one</font>

690
00:37:55,240 --> 00:38:04,390
<font color="#E5E5E5">okay</font>

691
00:37:56,500 --> 00:38:05,680
it's a USBC<font color="#E5E5E5"> okay not just put this yeah</font>

692
00:38:04,390 --> 00:38:07,960
it's gonna say that you want<font color="#E5E5E5"> to install</font>

693
00:38:05,680 --> 00:38:09,520
<font color="#E5E5E5">it just</font><font color="#CCCCCC"> say no I'll say if you want</font><font color="#E5E5E5"> to</font>

694
00:38:07,960 --> 00:38:10,750
use a<font color="#E5E5E5"> kicker</font><font color="#CCCCCC"> you can use the clicker</font>

695
00:38:09,520 --> 00:38:14,130
<font color="#E5E5E5">that is right there it's already</font>

696
00:38:10,750 --> 00:38:14,130
connected<font color="#E5E5E5"> so everything should just work</font>

697
00:38:21,960 --> 00:38:27,190
so fun fact<font color="#E5E5E5"> I will go to Iceland it's</font>

698
00:38:25,089 --> 00:38:32,109
right before<font color="#E5E5E5"> my</font><font color="#CCCCCC"> birthday so I want</font><font color="#E5E5E5"> to</font>

699
00:38:27,190 --> 00:38:33,730
celebrate<font color="#E5E5E5"> there so thank you my</font><font color="#CCCCCC"> birth</font>

700
00:38:32,109 --> 00:38:41,078
<font color="#CCCCCC">date the six but I celebrate for a whole</font>

701
00:38:33,730 --> 00:38:43,589
month<font color="#CCCCCC"> so why not he's gonna be talking</font>

702
00:38:41,079 --> 00:38:43,589
<font color="#CCCCCC">about</font><font color="#E5E5E5"> maps</font>

703
00:38:50,010 --> 00:38:55,990
<font color="#E5E5E5">yes hello my name is Bo hue</font><font color="#CCCCCC"> I am going</font>

704
00:38:53,710 --> 00:38:58,589
to blend out<font color="#E5E5E5"> I call it that in touch</font><font color="#CCCCCC"> you</font>

705
00:38:55,990 --> 00:39:03,729
can<font color="#CCCCCC"> call it do it in English</font><font color="#E5E5E5"> it is a</font>

706
00:38:58,589 --> 00:39:07,089
developer UI toolkit management summary

707
00:39:03,730 --> 00:39:10,270
is it it's<font color="#E5E5E5"> in pure go asterisk so it is</font>

708
00:39:07,089 --> 00:39:12,400
in pure go currently however there's a

709
00:39:10,270 --> 00:39:15,940
caveat<font color="#CCCCCC"> you need a separate program to</font>

710
00:39:12,400 --> 00:39:17,290
actually<font color="#E5E5E5"> do</font><font color="#CCCCCC"> most the windowing stuff</font><font color="#E5E5E5"> in</font>

711
00:39:15,940 --> 00:39:19,660
the future<font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to be</font><font color="#CCCCCC"> eliminated</font><font color="#E5E5E5"> and</font>

712
00:39:17,290 --> 00:39:22,029
<font color="#E5E5E5">will be a pure go library but it works</font>

713
00:39:19,660 --> 00:39:24,190
<font color="#E5E5E5">already now so it's a good</font><font color="#CCCCCC"> trade-off</font><font color="#E5E5E5"> to</font>

714
00:39:22,030 --> 00:39:26,829
<font color="#E5E5E5">get started it is cross-platform that</font>

715
00:39:24,190 --> 00:39:28,359
means it runs<font color="#CCCCCC"> on</font><font color="#E5E5E5"> Linux BSD</font><font color="#CCCCCC"> s Mac OS it</font>

716
00:39:26,829 --> 00:39:29,710
probably also<font color="#E5E5E5"> runs on</font><font color="#CCCCCC"> 10-9</font><font color="#E5E5E5"> because</font>

717
00:39:28,359 --> 00:39:32,710
there's<font color="#E5E5E5"> plenty</font><font color="#CCCCCC"> night technology involved</font>

718
00:39:29,710 --> 00:39:35,980
proof technology will run on Windows

719
00:39:32,710 --> 00:39:37,839
<font color="#CCCCCC">there is</font><font color="#E5E5E5"> sort of the other parts of the</font>

720
00:39:35,980 --> 00:39:39,220
<font color="#E5E5E5">coder available</font><font color="#CCCCCC"> I just have to put</font><font color="#E5E5E5"> them</font>

721
00:39:37,839 --> 00:39:41,950
together<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> it actually work</font>

722
00:39:39,220 --> 00:39:43,959
<font color="#E5E5E5">then of</font><font color="#CCCCCC"> course it</font><font color="#E5E5E5"> is a UI toolkit which</font>

723
00:39:41,950 --> 00:39:47,589
is<font color="#E5E5E5"> really great and it is for developers</font>

724
00:39:43,960 --> 00:39:49,420
<font color="#CCCCCC">meaning I mean I want</font><font color="#E5E5E5"> to it's my time</font>

725
00:39:47,589 --> 00:39:50,950
the time is limited<font color="#CCCCCC"> I'm not going to</font>

726
00:39:49,420 --> 00:39:53,140
write fancy<font color="#CCCCCC"> features like animations and</font>

727
00:39:50,950 --> 00:39:53,950
stuff<font color="#CCCCCC"> so it's going to</font><font color="#E5E5E5"> be simple which</font>

728
00:39:53,140 --> 00:39:56,379
<font color="#E5E5E5">as developer</font>

729
00:39:53,950 --> 00:39:57,700
like and<font color="#E5E5E5"> also so you can't complain</font>

730
00:39:56,380 --> 00:40:01,210
<font color="#CCCCCC">about some some</font><font color="#E5E5E5"> kind of the music</font><font color="#CCCCCC"> stuff</font>

731
00:39:57,700 --> 00:40:03,790
<font color="#E5E5E5">unless</font><font color="#CCCCCC"> you fixed yourself so to prove</font>

732
00:40:01,210 --> 00:40:06,339
this<font color="#CCCCCC"> is a real I have a</font><font color="#E5E5E5"> little demo</font>

733
00:40:03,790 --> 00:40:07,869
<font color="#E5E5E5">I think of actual applications written</font>

734
00:40:06,339 --> 00:40:09,578
<font color="#E5E5E5">with this library because of course if</font>

735
00:40:07,869 --> 00:40:10,780
you write a<font color="#CCCCCC"> new I took it you also have</font>

736
00:40:09,579 --> 00:40:13,119
to write application use it

737
00:40:10,780 --> 00:40:14,560
so I've<font color="#E5E5E5"> done a bunch of those just to</font>

738
00:40:13,119 --> 00:40:15,520
figure<font color="#E5E5E5"> out how it works and then of</font>

739
00:40:14,560 --> 00:40:17,410
course<font color="#CCCCCC"> I had to</font><font color="#E5E5E5"> go back</font><font color="#CCCCCC"> and change</font>

740
00:40:15,520 --> 00:40:20,440
though but that means<font color="#E5E5E5"> in the end</font>

741
00:40:17,410 --> 00:40:24,279
something<font color="#E5E5E5"> things do work this is one</font><font color="#CCCCCC"> of</font>

742
00:40:20,440 --> 00:40:27,790
the map applications<font color="#CCCCCC"> I made so it is</font>

743
00:40:24,280 --> 00:40:33,369
just running<font color="#E5E5E5"> on Mac OS</font><font color="#CCCCCC"> and very smooth</font>

744
00:40:27,790 --> 00:40:35,009
as you<font color="#E5E5E5"> can see even have internet</font>

745
00:40:33,369 --> 00:40:37,390
connection<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> that's the first</font>

746
00:40:35,010 --> 00:40:38,890
<font color="#E5E5E5">application what this shows is absolute</font>

747
00:40:37,390 --> 00:40:40,810
positioning basically the map is on<font color="#E5E5E5"> the</font>

748
00:40:38,890 --> 00:40:43,170
back and<font color="#CCCCCC"> on top of</font><font color="#E5E5E5"> that there's some</font>

749
00:40:40,810 --> 00:40:45,670
buttons<font color="#CCCCCC"> here and there's a buttons there</font>

750
00:40:43,170 --> 00:40:47,680
<font color="#CCCCCC">next</font><font color="#E5E5E5"> next application this</font><font color="#CCCCCC"> is actually</font>

751
00:40:45,670 --> 00:40:49,660
why I started writing<font color="#CCCCCC"> this because I</font>

752
00:40:47,680 --> 00:40:51,430
wanted<font color="#CCCCCC"> to make an application</font><font color="#E5E5E5"> then look</font>

753
00:40:49,660 --> 00:40:53,078
for<font color="#E5E5E5"> UI to kids then find the one</font><font color="#CCCCCC"> I</font>

754
00:40:51,430 --> 00:40:54,520
<font color="#E5E5E5">needed so I wrote started writing it</font>

755
00:40:53,079 --> 00:40:55,810
<font color="#CCCCCC">right so it is a</font><font color="#E5E5E5"> database kind of</font>

756
00:40:54,520 --> 00:40:58,420
application<font color="#E5E5E5"> these are the database</font>

757
00:40:55,810 --> 00:41:00,250
<font color="#E5E5E5">connection here if I sort</font><font color="#CCCCCC"> of trimmed it</font>

758
00:40:58,420 --> 00:41:03,000
down a bit<font color="#E5E5E5"> to make it fit these are all</font>

759
00:41:00,250 --> 00:41:06,130
<font color="#E5E5E5">made databases on my local machine</font>

760
00:41:03,000 --> 00:41:08,170
there's there's a<font color="#E5E5E5"> table we can just</font>

761
00:41:06,130 --> 00:41:09,970
<font color="#E5E5E5">write the SQL execute it and then the</font>

762
00:41:08,170 --> 00:41:11,980
results<font color="#CCCCCC"> will be in a table fewer at the</font>

763
00:41:09,970 --> 00:41:14,529
bottom you can<font color="#CCCCCC"> just also select one of</font>

764
00:41:11,980 --> 00:41:16,270
<font color="#CCCCCC">these things</font><font color="#E5E5E5"> probably yeah so I need a</font>

765
00:41:14,530 --> 00:41:18,400
<font color="#E5E5E5">bigger screen when then it just shows</font>

766
00:41:16,270 --> 00:41:20,020
<font color="#CCCCCC">the</font><font color="#E5E5E5"> although</font><font color="#CCCCCC"> the data in there there's</font>

767
00:41:18,400 --> 00:41:21,849
<font color="#E5E5E5">like a tab thing</font><font color="#CCCCCC"> where I can look at the</font>

768
00:41:20,020 --> 00:41:25,270
structure<font color="#E5E5E5"> so this is of course a</font>

769
00:41:21,849 --> 00:41:27,700
polished<font color="#E5E5E5"> thing and basically you can</font>

770
00:41:25,270 --> 00:41:30,550
<font color="#E5E5E5">roll it to get better feeling</font><font color="#CCCCCC"> for what I</font>

771
00:41:27,700 --> 00:41:33,640
<font color="#E5E5E5">needed in the</font><font color="#CCCCCC"> tool kit</font><font color="#E5E5E5"> then there's this</font>

772
00:41:30,550 --> 00:41:36,730
<font color="#E5E5E5">one which is</font><font color="#CCCCCC"> a sort of a proof concept</font>

773
00:41:33,640 --> 00:41:44,078
of a meal application there's some<font color="#E5E5E5"> bunch</font>

774
00:41:36,730 --> 00:41:47,980
<font color="#E5E5E5">of meals here actually</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's render</font>

775
00:41:44,079 --> 00:41:50,050
some<font color="#CCCCCC"> fonts so</font><font color="#E5E5E5"> there's some font awesome</font>

776
00:41:47,980 --> 00:41:52,240
icons<font color="#CCCCCC"> here just to make it</font><font color="#E5E5E5"> really cool I</font>

777
00:41:50,050 --> 00:41:54,130
you can<font color="#E5E5E5"> see the rounded corners</font>

778
00:41:52,240 --> 00:41:55,919
I stole the blue colors<font color="#E5E5E5"> from bootstrap</font>

779
00:41:54,130 --> 00:41:58,630
<font color="#E5E5E5">sorry</font><font color="#CCCCCC"> up to date with</font><font color="#E5E5E5"> the latest</font>

780
00:41:55,920 --> 00:42:00,400
<font color="#E5E5E5">expectations from the web crowd so you</font>

781
00:41:58,630 --> 00:42:03,040
can't complain this is it's ugly<font color="#E5E5E5"> or</font>

782
00:42:00,400 --> 00:42:04,720
<font color="#CCCCCC">something because so standard stuff</font><font color="#E5E5E5"> so</font>

783
00:42:03,040 --> 00:42:06,090
most of the stuff is<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> functional</font>

784
00:42:04,720 --> 00:42:14,100
<font color="#E5E5E5">ready you can</font>

785
00:42:06,090 --> 00:42:16,650
<font color="#CCCCCC">just like</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> loading phones so</font><font color="#E5E5E5"> it</font>

786
00:42:14,100 --> 00:42:19,440
works works<font color="#E5E5E5"> I promise</font>

787
00:42:16,650 --> 00:42:20,790
does anyone recognize<font color="#E5E5E5"> this program yeah</font>

788
00:42:19,440 --> 00:42:22,410
<font color="#CCCCCC">so this</font><font color="#E5E5E5"> is Acme</font>

789
00:42:20,790 --> 00:42:24,360
except of course as you<font color="#CCCCCC"> can see the top</font>

790
00:42:22,410 --> 00:42:26,490
<font color="#E5E5E5">it's it's a bit of a clone written code</font>

791
00:42:24,360 --> 00:42:28,350
it's called AG v<font color="#CCCCCC"> Acme is very mouse</font>

792
00:42:26,490 --> 00:42:31,700
oriented and I like the mouse but it

793
00:42:28,350 --> 00:42:34,860
<font color="#E5E5E5">gives me pains in my wrist so I needed a</font>

794
00:42:31,700 --> 00:42:36,930
VI mode<font color="#E5E5E5"> so I made a sort of</font><font color="#CCCCCC"> clone</font><font color="#E5E5E5"> with</font>

795
00:42:34,860 --> 00:42:38,730
<font color="#E5E5E5">the ipvanish</font><font color="#CCCCCC"> it's working progress</font><font color="#E5E5E5"> it's</font>

796
00:42:36,930 --> 00:42:40,230
already starting<font color="#CCCCCC"> to work I have to get</font>

797
00:42:38,730 --> 00:42:42,690
<font color="#E5E5E5">in a state working start using it for</font>

798
00:42:40,230 --> 00:42:45,690
you<font color="#E5E5E5"> and then we'll go</font><font color="#CCCCCC"> again development</font>

799
00:42:42,690 --> 00:42:47,270
<font color="#E5E5E5">or a bit faster</font><font color="#CCCCCC"> the last</font><font color="#E5E5E5"> application are</font>

800
00:42:45,690 --> 00:42:50,160
back to the presentation

801
00:42:47,270 --> 00:42:53,580
so you've seen<font color="#E5E5E5"> it's real it runs and</font>

802
00:42:50,160 --> 00:42:56,970
works this is a very simple<font color="#E5E5E5"> small code</font>

803
00:42:53,580 --> 00:42:58,529
example of an<font color="#CCCCCC"> application so</font><font color="#E5E5E5"> you import</font>

804
00:42:56,970 --> 00:43:02,160
library you have<font color="#CCCCCC"> a main function you</font>

805
00:42:58,530 --> 00:43:03,840
create a new developer UI<font color="#E5E5E5"> you make a top</font>

806
00:43:02,160 --> 00:43:06,509
UI<font color="#E5E5E5"> in this</font><font color="#CCCCCC"> case is just</font><font color="#E5E5E5"> very simple</font>

807
00:43:03,840 --> 00:43:08,460
<font color="#E5E5E5">button</font><font color="#CCCCCC"> it's a text and there's a call</font>

808
00:43:06,510 --> 00:43:10,590
back here and you render it once and

809
00:43:08,460 --> 00:43:12,990
then you<font color="#E5E5E5"> go into the main loop where</font><font color="#CCCCCC"> you</font>

810
00:43:10,590 --> 00:43:15,330
just select and get the inputs which are

811
00:43:12,990 --> 00:43:18,359
mouse key<font color="#CCCCCC"> that kind of stuff resize</font>

812
00:43:15,330 --> 00:43:20,430
event is also<font color="#CCCCCC"> one of</font><font color="#E5E5E5"> those so then you</font>

813
00:43:18,360 --> 00:43:22,860
pass<font color="#CCCCCC"> it back to the library</font><font color="#E5E5E5"> to actually</font>

814
00:43:20,430 --> 00:43:26,460
process<font color="#E5E5E5"> it into</font><font color="#CCCCCC"> it stuff if you click</font>

815
00:43:22,860 --> 00:43:29,910
the red X in the corner<font color="#E5E5E5"> your programs is</font>

816
00:43:26,460 --> 00:43:32,280
done so<font color="#E5E5E5"> then you quit</font><font color="#CCCCCC"> the main loop</font><font color="#E5E5E5"> I</font>

817
00:43:29,910 --> 00:43:33,930
didn't want to hand<font color="#E5E5E5"> off my main loop to</font>

818
00:43:32,280 --> 00:43:36,000
some other<font color="#CCCCCC"> library</font><font color="#E5E5E5"> so I want to be</font>

819
00:43:33,930 --> 00:43:46,500
<font color="#E5E5E5">that's why you actually write out the</font>

820
00:43:36,000 --> 00:43:47,940
main loop<font color="#CCCCCC"> lot</font><font color="#E5E5E5"> of cool ideas here</font>

821
00:43:46,500 --> 00:43:49,710
unfortunately<font color="#CCCCCC"> I cannot share them with</font>

822
00:43:47,940 --> 00:43:53,600
you you have to come<font color="#E5E5E5"> to me afterwards</font>

823
00:43:49,710 --> 00:43:53,600
and hear more about<font color="#CCCCCC"> them so thank you</font>

824
00:43:58,520 --> 00:44:02,460
apparently there's questions<font color="#E5E5E5"> in Nepali</font>

825
00:44:00,660 --> 00:44:04,200
he's gonna be sitting<font color="#CCCCCC"> at his laptop so</font>

826
00:44:02,460 --> 00:44:11,460
while he's sitting at<font color="#CCCCCC"> his laptop</font>

827
00:44:04,200 --> 00:44:14,310
one<font color="#CCCCCC"> question support is</font><font color="#E5E5E5"> working</font><font color="#CCCCCC"> now it</font>

828
00:44:11,460 --> 00:44:15,840
runs<font color="#CCCCCC"> on Linux BSD Mac OS now it probably</font>

829
00:44:14,310 --> 00:44:18,480
<font color="#CCCCCC">runs on</font><font color="#E5E5E5"> plan</font><font color="#CCCCCC"> nine but haven't tried it</font>

830
00:44:15,840 --> 00:44:20,820
<font color="#E5E5E5">yet and it will run</font><font color="#CCCCCC"> on Windows I just</font>

831
00:44:18,480 --> 00:44:22,620
need to separate<font color="#CCCCCC"> helper tool</font><font color="#E5E5E5"> of its all</font>

832
00:44:20,820 --> 00:44:24,570
the like the parts are available<font color="#E5E5E5"> from</font>

833
00:44:22,620 --> 00:44:28,910
because<font color="#E5E5E5"> of the history and how I've done</font>

834
00:44:24,570 --> 00:44:28,910
<font color="#CCCCCC">it so I</font><font color="#E5E5E5"> just need to have the time</font><font color="#CCCCCC"> to</font>

835
00:44:31,640 --> 00:44:35,580
yeah it I've not released<font color="#CCCCCC"> it yet</font>

836
00:44:33,720 --> 00:44:37,560
I need one more<font color="#E5E5E5"> vacation and then I can</font>

837
00:44:35,580 --> 00:44:40,380
really push through and finish the

838
00:44:37,560 --> 00:44:44,540
publishing soon so he's<font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about</font>

839
00:44:40,380 --> 00:44:44,540
<font color="#CCCCCC">non open source at first</font><font color="#E5E5E5"> time thank you</font>

840
00:44:53,390 --> 00:45:04,730
<font color="#CCCCCC">so his</font><font color="#E5E5E5"> laptop died so we're gonna use my</font>

841
00:44:57,750 --> 00:45:04,730
laptop<font color="#E5E5E5"> well okay</font><font color="#CCCCCC"> leaving again</font>

842
00:45:05,900 --> 00:45:16,310
you're showing your email to<font color="#CCCCCC"> everyone</font>

843
00:45:07,550 --> 00:45:18,680
that's brave okay<font color="#E5E5E5"> so I'm going to tell</font>

844
00:45:16,310 --> 00:45:21,320
you story about the project we<font color="#E5E5E5"> had to do</font>

845
00:45:18,680 --> 00:45:24,379
at work and it's about<font color="#E5E5E5"> columnar data</font>

846
00:45:21,320 --> 00:45:25,790
storage<font color="#CCCCCC"> Ingo let's</font><font color="#E5E5E5"> start by saying that</font>

847
00:45:24,380 --> 00:45:28,490
all data is not created<font color="#CCCCCC"> equal</font>

848
00:45:25,790 --> 00:45:31,820
you may have<font color="#E5E5E5"> a bunch of JSON data they</font>

849
00:45:28,490 --> 00:45:33,620
might<font color="#E5E5E5"> have CSV data and all this is</font>

850
00:45:31,820 --> 00:45:36,140
pretty nice until<font color="#E5E5E5"> you end up having</font>

851
00:45:33,620 --> 00:45:37,880
terabytes<font color="#E5E5E5"> of that and when you have</font>

852
00:45:36,140 --> 00:45:39,529
terabytes<font color="#E5E5E5"> of that your task should you</font>

853
00:45:37,880 --> 00:45:42,440
choose to<font color="#E5E5E5"> accept it is to extract only</font>

854
00:45:39,530 --> 00:45:44,810
some fields in<font color="#E5E5E5"> multi-gigabyte files like</font>

855
00:45:42,440 --> 00:45:46,940
this<font color="#E5E5E5"> so say you only want size and</font>

856
00:45:44,810 --> 00:45:50,960
payload and you don't really<font color="#E5E5E5"> care about</font>

857
00:45:46,940 --> 00:45:55,580
<font color="#E5E5E5">all the rest well you start to do it and</font>

858
00:45:50,960 --> 00:45:58,400
you use encoding<font color="#E5E5E5"> Jason</font><font color="#CCCCCC"> and it dies or</font>

859
00:45:55,580 --> 00:46:00,350
it's<font color="#CCCCCC"> very slow so then you say well</font>

860
00:45:58,400 --> 00:46:02,750
<font color="#CCCCCC">let's be smart and surely someone has</font>

861
00:46:00,350 --> 00:46:04,190
solved this before<font color="#E5E5E5"> and people</font><font color="#CCCCCC"> have done</font>

862
00:46:02,750 --> 00:46:06,110
<font color="#E5E5E5">it people that do big data they have</font>

863
00:46:04,190 --> 00:46:08,120
special formats to store this kind<font color="#CCCCCC"> of</font>

864
00:46:06,110 --> 00:46:10,100
data<font color="#CCCCCC"> and it's columnar data storage</font>

865
00:46:08,120 --> 00:46:13,130
quick intro if you've never<font color="#CCCCCC"> encountered</font>

866
00:46:10,100 --> 00:46:16,069
it<font color="#E5E5E5"> this is how you would represent data</font>

867
00:46:13,130 --> 00:46:18,620
<font color="#CCCCCC">a</font><font color="#E5E5E5"> relational data if you store it in</font>

868
00:46:16,070 --> 00:46:21,350
rows it looks<font color="#E5E5E5"> a bit like this</font><font color="#CCCCCC"> a bit like</font>

869
00:46:18,620 --> 00:46:24,319
CSV if you store it in columns

870
00:46:21,350 --> 00:46:27,500
you just flip<font color="#E5E5E5"> it around</font><font color="#CCCCCC"> and you see that</font>

871
00:46:24,320 --> 00:46:35,390
<font color="#E5E5E5">each of</font><font color="#CCCCCC"> the rows</font><font color="#E5E5E5"> there is one of these</font>

872
00:46:27,500 --> 00:46:37,490
columns okay so and not<font color="#E5E5E5"> only people have</font>

873
00:46:35,390 --> 00:46:40,279
solved it<font color="#CCCCCC"> they have solved it multiple</font>

874
00:46:37,490 --> 00:46:44,140
<font color="#CCCCCC">times</font><font color="#E5E5E5"> so there are two Apache projects</font>

875
00:46:40,280 --> 00:46:46,670
<font color="#CCCCCC">park'</font><font color="#E5E5E5"> and or seen that's already do this</font>

876
00:46:44,140 --> 00:46:49,879
and then you<font color="#E5E5E5"> say well I want</font><font color="#CCCCCC"> to do it</font>

877
00:46:46,670 --> 00:46:53,450
and<font color="#E5E5E5"> go do I have libraries and go for</font>

878
00:46:49,880 --> 00:46:55,430
these<font color="#E5E5E5"> formats</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of for</font><font color="#CCCCCC"> Park</font><font color="#E5E5E5"> and now</font>

879
00:46:53,450 --> 00:46:57,890
for<font color="#CCCCCC"> Orsi yes</font>

880
00:46:55,430 --> 00:46:59,509
you say well perfect<font color="#CCCCCC"> you find this</font>

881
00:46:57,890 --> 00:47:02,359
little<font color="#CCCCCC"> library</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> project</font>

882
00:46:59,510 --> 00:47:04,360
description<font color="#CCCCCC"> then you see</font><font color="#E5E5E5"> okay working</font>

883
00:47:02,360 --> 00:47:07,960
<font color="#CCCCCC">progress and that's</font><font color="#E5E5E5"> the current support</font>

884
00:47:04,360 --> 00:47:13,550
so the build is passing<font color="#CCCCCC"> that is good</font>

885
00:47:07,960 --> 00:47:15,290
coverage error<font color="#CCCCCC"> work in progress</font><font color="#E5E5E5"> and when</font>

886
00:47:13,550 --> 00:47:17,270
you look<font color="#E5E5E5"> at current support right is</font>

887
00:47:15,290 --> 00:47:18,920
empty with a caveat<font color="#CCCCCC"> at the bottom that</font>

888
00:47:17,270 --> 00:47:21,319
<font color="#E5E5E5">says the right to support</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> in late</font>

889
00:47:18,920 --> 00:47:25,220
<font color="#CCCCCC">Sage's</font><font color="#E5E5E5"> however I do not</font><font color="#CCCCCC"> recommend</font><font color="#E5E5E5"> to use</font>

890
00:47:21,319 --> 00:47:29,720
it yet so let's see<font color="#E5E5E5"> let's do some</font>

891
00:47:25,220 --> 00:47:32,899
testing<font color="#CCCCCC"> I take an</font><font color="#E5E5E5"> input file</font><font color="#CCCCCC"> I use the</font>

892
00:47:29,720 --> 00:47:35,000
<font color="#E5E5E5">girl or I convert it</font><font color="#CCCCCC"> to an RC file</font><font color="#E5E5E5"> then</font>

893
00:47:32,900 --> 00:47:37,490
I will take this<font color="#CCCCCC"> horsey file and read it</font>

894
00:47:35,000 --> 00:47:39,470
<font color="#E5E5E5">again and then I will have data out</font><font color="#CCCCCC"> and</font>

895
00:47:37,490 --> 00:47:41,660
my goal is<font color="#CCCCCC"> to compare if what I get</font><font color="#E5E5E5"> out</font>

896
00:47:39,470 --> 00:47:45,520
is the<font color="#E5E5E5"> same thing as I got it as I put</font>

897
00:47:41,660 --> 00:47:48,440
in simple<font color="#E5E5E5"> enough so</font><font color="#CCCCCC"> we do it</font><font color="#E5E5E5"> with go</font>

898
00:47:45,520 --> 00:47:50,390
<font color="#E5E5E5">with the library we saw so we write the</font>

899
00:47:48,440 --> 00:47:52,700
<font color="#E5E5E5">data with a go tool we will read it with</font>

900
00:47:50,390 --> 00:47:58,700
<font color="#E5E5E5">the go tool data out is the same as</font><font color="#CCCCCC"> data</font>

901
00:47:52,700 --> 00:47:59,779
in so<font color="#E5E5E5"> much</font><font color="#CCCCCC"> win but</font><font color="#E5E5E5"> you say well I may</font>

902
00:47:58,700 --> 00:48:02,000
<font color="#E5E5E5">not be using this later</font>

903
00:47:59,780 --> 00:48:05,569
only with my tools<font color="#E5E5E5"> what happens if I use</font>

904
00:48:02,000 --> 00:48:07,760
<font color="#E5E5E5">some official tools well you have</font><font color="#CCCCCC"> see</font>

905
00:48:05,569 --> 00:48:12,589
official<font color="#E5E5E5"> tools data in segmentation</font>

906
00:48:07,760 --> 00:48:16,460
fault core dumped so this is what it

907
00:48:12,589 --> 00:48:17,270
makes me<font color="#E5E5E5"> think we as long as we only use</font>

908
00:48:16,460 --> 00:48:19,549
their tools

909
00:48:17,270 --> 00:48:22,220
everything is beautiful<font color="#CCCCCC"> the moment you</font>

910
00:48:19,549 --> 00:48:25,549
need to do some interoperability<font color="#E5E5E5"> doesn't</font>

911
00:48:22,220 --> 00:48:27,500
work and if your reference tools<font color="#E5E5E5"> crash</font>

912
00:48:25,549 --> 00:48:29,630
<font color="#E5E5E5">it means what</font><font color="#CCCCCC"> you are outputting</font><font color="#E5E5E5"> is not</font>

913
00:48:27,500 --> 00:48:32,710
<font color="#E5E5E5">according</font><font color="#CCCCCC"> to the standard</font><font color="#E5E5E5"> well it's open</font>

914
00:48:29,630 --> 00:48:36,170
<font color="#E5E5E5">source</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> let's fix it well there's a</font>

915
00:48:32,710 --> 00:48:38,450
document<font color="#E5E5E5"> and if you go there there are</font>

916
00:48:36,170 --> 00:48:40,280
some beautiful specs<font color="#E5E5E5"> some pages full of</font>

917
00:48:38,450 --> 00:48:43,220
charts<font color="#E5E5E5"> and graphs and they are</font>

918
00:48:40,280 --> 00:48:44,960
incomplete<font color="#E5E5E5"> so you have to reverse</font>

919
00:48:43,220 --> 00:48:46,308
<font color="#CCCCCC">engineer the</font><font color="#E5E5E5"> C and Java reference</font>

920
00:48:44,960 --> 00:48:49,430
implementations<font color="#E5E5E5"> because there are</font>

921
00:48:46,309 --> 00:48:51,440
constants<font color="#CCCCCC"> that appear nowhere it's even</font>

922
00:48:49,430 --> 00:48:52,669
funnier<font color="#CCCCCC"> because the there are constants</font>

923
00:48:51,440 --> 00:48:54,589
in the Java<font color="#E5E5E5"> and C reference</font>

924
00:48:52,670 --> 00:48:56,270
implementations<font color="#CCCCCC"> that don't match the</font>

925
00:48:54,589 --> 00:49:00,200
<font color="#CCCCCC">ones that are in</font><font color="#E5E5E5"> the go implementation</font>

926
00:48:56,270 --> 00:49:01,579
<font color="#E5E5E5">so you're like</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so conclusions we</font>

927
00:49:00,200 --> 00:49:04,040
sent<font color="#E5E5E5"> a few comments that fixed it for</font>

928
00:49:01,579 --> 00:49:05,750
<font color="#CCCCCC">our case it which is a bit better than</font>

929
00:49:04,040 --> 00:49:08,660
<font color="#CCCCCC">works in my machine</font><font color="#E5E5E5"> because apparently</font>

930
00:49:05,750 --> 00:49:09,950
<font color="#E5E5E5">it works</font><font color="#CCCCCC"> on the developer's machine we</font>

931
00:49:08,660 --> 00:49:13,578
have<font color="#E5E5E5"> converted a few terabytes of data</font>

932
00:49:09,950 --> 00:49:15,710
<font color="#E5E5E5">and now it works for</font><font color="#CCCCCC"> us in our machines</font>

933
00:49:13,579 --> 00:49:19,220
<font color="#E5E5E5">if you try to use it and you lose data</font>

934
00:49:15,710 --> 00:49:20,450
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> blame me in this case the</font><font color="#CCCCCC"> project</font>

935
00:49:19,220 --> 00:49:22,098
was very<font color="#E5E5E5"> clear and very honest about</font>

936
00:49:20,450 --> 00:49:25,759
what they supported and that is

937
00:49:22,099 --> 00:49:27,710
something<font color="#E5E5E5"> really liked and this goes</font>

938
00:49:25,760 --> 00:49:29,359
without<font color="#CCCCCC"> saying but every time that</font>

939
00:49:27,710 --> 00:49:31,520
you're going<font color="#E5E5E5"> to be pulling</font><font color="#CCCCCC"> some library</font>

940
00:49:29,359 --> 00:49:32,369
please<font color="#E5E5E5"> do your due diligence before</font>

941
00:49:31,520 --> 00:49:35,400
using it

942
00:49:32,369 --> 00:49:37,680
trust<font color="#E5E5E5"> but verify</font><font color="#CCCCCC"> and to</font><font color="#E5E5E5"> finish in a</font>

943
00:49:35,400 --> 00:49:39,450
cheerful<font color="#E5E5E5"> note and I think it's why we</font>

944
00:49:37,680 --> 00:49:41,308
are<font color="#CCCCCC"> here</font><font color="#E5E5E5"> we are starting</font><font color="#CCCCCC"> to get to a</font>

945
00:49:39,450 --> 00:49:44,419
point where we have<font color="#E5E5E5"> libraries for almost</font>

946
00:49:41,309 --> 00:49:47,039
anything<font color="#CCCCCC"> and go and</font><font color="#E5E5E5"> open source rules</font>

947
00:49:44,420 --> 00:49:48,329
last thing I<font color="#CCCCCC"> lie</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> you the Apache</font>

948
00:49:47,039 --> 00:49:50,969
foundation does not have only two

949
00:49:48,329 --> 00:49:53,549
formats<font color="#E5E5E5"> they have another one called</font>

950
00:49:50,969 --> 00:49:56,910
<font color="#CCCCCC">arrow</font><font color="#E5E5E5"> that does kind of sorta</font><font color="#CCCCCC"> the same</font>

951
00:49:53,549 --> 00:49:59,099
and the nice people<font color="#E5E5E5"> at influx data have</font>

952
00:49:56,910 --> 00:50:11,368
done go implementation<font color="#E5E5E5"> for that thank</font>

953
00:49:59,099 --> 00:50:13,739
<font color="#E5E5E5">you thank you</font><font color="#CCCCCC"> so we are done so thank</font>

954
00:50:11,369 --> 00:50:15,950
you so<font color="#E5E5E5"> much</font><font color="#CCCCCC"> for coming I hope you enjoy</font>

955
00:50:13,739 --> 00:50:17,910
all<font color="#E5E5E5"> of the talks there was a lot of them</font>

956
00:50:15,950 --> 00:50:24,930
<font color="#CCCCCC">big</font><font color="#E5E5E5"> round of applause</font><font color="#CCCCCC"> to all of the</font>

957
00:50:17,910 --> 00:50:27,598
speakers<font color="#E5E5E5"> because they were amazing and</font>

958
00:50:24,930 --> 00:50:29,219
big<font color="#E5E5E5"> run of the clock a bead round of</font>

959
00:50:27,599 --> 00:50:31,890
applause for<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the people that came in</font>

960
00:50:29,219 --> 00:50:34,210
<font color="#E5E5E5">but also the ones that tried and ended</font>

961
00:50:31,890 --> 00:50:37,598
up outside<font color="#CCCCCC"> thank you to those</font>

962
00:50:34,210 --> 00:50:37,599
[Applause]

