1
00:00:10,510 --> 00:00:21,609
so shall<font color="#CCCCCC"> we start just yes so so</font><font color="#E5E5E5"> hey I'm</font>

2
00:00:19,000 --> 00:00:24,730
young and I'm quickly going<font color="#E5E5E5"> to tell you</font>

3
00:00:21,609 --> 00:00:26,499
about her<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> that I worked at the</font>

4
00:00:24,730 --> 00:00:29,289
German Aerospace Center in<font color="#CCCCCC"> Oakland</font>

5
00:00:26,499 --> 00:00:31,770
<font color="#CCCCCC">Oakland which is a cafe it's the</font>

6
00:00:29,289 --> 00:00:37,840
coprocessor<font color="#E5E5E5"> accelerated filter backaches</font>

7
00:00:31,770 --> 00:00:40,570
<font color="#E5E5E5">filter</font><font color="#CCCCCC"> bank extension library yeah</font><font color="#E5E5E5"> so</font>

8
00:00:37,840 --> 00:00:42,760
maybe some<font color="#CCCCCC"> of you guys know me from</font><font color="#E5E5E5"> last</font>

9
00:00:40,570 --> 00:00:46,390
year and from<font color="#E5E5E5"> three years</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> we are</font>

10
00:00:42,760 --> 00:00:50,849
also presented about doing<font color="#E5E5E5"> stuff and</font>

11
00:00:46,390 --> 00:00:54,820
software-defined radio and on the<font color="#E5E5E5"> GPU so</font>

12
00:00:50,850 --> 00:00:57,070
cafe what is it a bit<font color="#E5E5E5"> of history last</font>

13
00:00:54,820 --> 00:00:58,870
year<font color="#CCCCCC"> I</font><font color="#E5E5E5"> presented a polyphase filter Bank</font>

14
00:00:57,070 --> 00:01:03,280
<font color="#E5E5E5">channel</font><font color="#CCCCCC"> Iser that works with cooter</font><font color="#E5E5E5"> on</font>

15
00:00:58,870 --> 00:01:05,530
<font color="#E5E5E5">NVIDIA GPUs and the reason why I did</font>

16
00:01:03,280 --> 00:01:08,680
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> because I was</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a project it</font>

17
00:01:05,530 --> 00:01:11,890
<font color="#E5E5E5">was doing random access over dvb-t</font><font color="#CCCCCC"> VBR</font>

18
00:01:08,680 --> 00:01:15,430
<font color="#CCCCCC">cs2 basically and it's a multi frequency</font>

19
00:01:11,890 --> 00:01:17,800
random access system<font color="#E5E5E5"> we have 45 channels</font>

20
00:01:15,430 --> 00:01:22,510
and and a receiver we have to separate

21
00:01:17,800 --> 00:01:26,320
<font color="#E5E5E5">them somehow which turned to be a pretty</font>

22
00:01:22,510 --> 00:01:28,900
<font color="#E5E5E5">big test so we have SEC 1550</font><font color="#CCCCCC"> tab filter</font>

23
00:01:26,320 --> 00:01:31,990
because we have<font color="#CCCCCC"> four mega samples or</font>

24
00:01:28,900 --> 00:01:34,210
<font color="#E5E5E5">four</font><font color="#CCCCCC"> megahertz of bandwidth</font><font color="#E5E5E5"> 45 channels</font>

25
00:01:31,990 --> 00:01:36,640
and basically the pass band between the

26
00:01:34,210 --> 00:01:41,020
filters is like 13 kilo Hertz which<font color="#CCCCCC"> is</font>

27
00:01:36,640 --> 00:01:42,909
nothing<font color="#E5E5E5"> and</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> mega Hertz so yeah 1550</font>

28
00:01:41,020 --> 00:01:45,158
tab filter needed and we needed<font color="#CCCCCC"> to run</font>

29
00:01:42,909 --> 00:01:47,950
it<font color="#E5E5E5"> for mega samples per second otherwise</font>

30
00:01:45,159 --> 00:01:50,440
you<font color="#E5E5E5"> know it wouldn't be</font><font color="#CCCCCC"> a real-time so I</font>

31
00:01:47,950 --> 00:01:52,170
tried with<font color="#E5E5E5"> what's in radio because I</font>

32
00:01:50,440 --> 00:01:55,899
knew<font color="#E5E5E5"> they have a super optimized</font>

33
00:01:52,170 --> 00:01:59,500
<font color="#E5E5E5">polyphase filter</font><font color="#CCCCCC"> Bank generalizer for</font>

34
00:01:55,900 --> 00:02:01,810
<font color="#CCCCCC">his CPU</font><font color="#E5E5E5"> but unfortunately with</font><font color="#CCCCCC"> 1550 tab</font>

35
00:01:59,500 --> 00:02:04,960
further and we also<font color="#E5E5E5"> needed</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> more</font>

36
00:02:01,810 --> 00:02:06,820
over sampling<font color="#CCCCCC"> didn't work so we we've</font>

37
00:02:04,960 --> 00:02:10,598
wearable to run<font color="#E5E5E5"> one to two mega samples</font>

38
00:02:06,820 --> 00:02:13,989
per second but<font color="#E5E5E5"> not more so yeah we went</font>

39
00:02:10,598 --> 00:02:17,109
to<font color="#E5E5E5"> the GPU so fortunately we have cooler</font>

40
00:02:13,990 --> 00:02:18,520
or<font color="#CCCCCC"> OpenCL and fortunately</font>

41
00:02:17,110 --> 00:02:22,330
polyphase filter banks

42
00:02:18,520 --> 00:02:26,230
really suitable to run on the GPU<font color="#E5E5E5"> so I</font>

43
00:02:22,330 --> 00:02:28,150
presented it last<font color="#E5E5E5"> year the filter</font><font color="#CCCCCC"> Bank</font>

44
00:02:26,230 --> 00:02:30,970
can do some other things like it can

45
00:02:28,150 --> 00:02:33,280
over sample the<font color="#E5E5E5"> ad output or like you</font>

46
00:02:30,970 --> 00:02:36,190
know factors<font color="#E5E5E5"> that are integers of the</font>

47
00:02:33,280 --> 00:02:38,250
number of filters<font color="#E5E5E5"> example if we have 45</font>

48
00:02:36,190 --> 00:02:41,200
channels we<font color="#CCCCCC"> can over sampling each</font>

49
00:02:38,250 --> 00:02:44,560
<font color="#E5E5E5">channel by a factor of 3 which would</font><font color="#CCCCCC"> be</font>

50
00:02:41,200 --> 00:02:47,109
45 divided<font color="#E5E5E5"> by 15</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> this we were</font><font color="#CCCCCC"> able</font>

51
00:02:44,560 --> 00:02:49,360
<font color="#E5E5E5">to achieve 100 mega samples per second</font>

52
00:02:47,110 --> 00:02:52,630
which is<font color="#E5E5E5"> a serious improvement over 1 to</font>

53
00:02:49,360 --> 00:02:55,240
<font color="#E5E5E5">2 mega samples per second and yeah</font><font color="#CCCCCC"> in</font>

54
00:02:52,630 --> 00:02:59,430
addition<font color="#CCCCCC"> to that back when we did it</font>

55
00:02:55,240 --> 00:03:02,290
last<font color="#E5E5E5"> year</font><font color="#CCCCCC"> I was super lazy and we</font>

56
00:02:59,430 --> 00:03:06,670
basically<font color="#E5E5E5"> did</font><font color="#CCCCCC"> the reshuffling of the</font>

57
00:03:02,290 --> 00:03:08,769
output of the<font color="#CCCCCC"> Q</font><font color="#E5E5E5"> FFT on the CPU now we do</font>

58
00:03:06,670 --> 00:03:10,780
it<font color="#E5E5E5"> with a Q FFT because actually there's</font>

59
00:03:08,770 --> 00:03:13,870
way much faster and<font color="#E5E5E5"> simpler it's just</font>

60
00:03:10,780 --> 00:03:17,650
one line<font color="#CCCCCC"> of code so but I I was just</font>

61
00:03:13,870 --> 00:03:20,380
<font color="#CCCCCC">even too lazy to research that so maybe</font>

62
00:03:17,650 --> 00:03:22,650
we are even now<font color="#E5E5E5"> faster I don't know</font><font color="#CCCCCC"> what</font>

63
00:03:20,380 --> 00:03:26,940
we<font color="#E5E5E5"> should be because Q FFT should be</font>

64
00:03:22,650 --> 00:03:30,070
faster than what I hacked up on the CPU

65
00:03:26,940 --> 00:03:32,560
so yeah but then we had another<font color="#CCCCCC"> program</font>

66
00:03:30,070 --> 00:03:34,900
so of<font color="#E5E5E5"> course we now had all</font><font color="#CCCCCC"> the channels</font>

67
00:03:32,560 --> 00:03:37,630
<font color="#E5E5E5">and then we had some external company</font>

68
00:03:34,900 --> 00:03:41,740
<font color="#E5E5E5">write some pretty awesome</font><font color="#CCCCCC"> DB brcs to</font>

69
00:03:37,630 --> 00:03:44,769
blocks for us and their timing<font color="#E5E5E5"> sync</font>

70
00:03:41,740 --> 00:03:47,080
needed a<font color="#E5E5E5"> 4 x over sampling factor</font><font color="#CCCCCC"> okay</font>

71
00:03:44,770 --> 00:03:49,570
so we can do some over<font color="#E5E5E5"> sampling or</font>

72
00:03:47,080 --> 00:03:50,320
resembling stuff with the filter<font color="#CCCCCC"> bank</font>

73
00:03:49,570 --> 00:03:52,840
<font color="#E5E5E5">channel</font><font color="#CCCCCC"> Iser</font>

74
00:03:50,320 --> 00:03:55,150
but as you heard<font color="#CCCCCC"> before we are pretty</font>

75
00:03:52,840 --> 00:03:57,010
<font color="#E5E5E5">much limited to integer factors of the</font>

76
00:03:55,150 --> 00:03:59,740
<font color="#E5E5E5">number of hit filter breaks that we use</font>

77
00:03:57,010 --> 00:04:02,049
<font color="#E5E5E5">so we could get two for two two six six</font>

78
00:03:59,740 --> 00:04:06,420
six six six times<font color="#E5E5E5"> over sampling which is</font>

79
00:04:02,050 --> 00:04:09,970
close but you know not<font color="#E5E5E5"> close enough so</font>

80
00:04:06,420 --> 00:04:13,208
we needed<font color="#E5E5E5"> an arbitrary sampler and as we</font>

81
00:04:09,970 --> 00:04:16,089
had to<font color="#E5E5E5"> resample 45 channels in</font><font color="#CCCCCC"> parallel</font>

82
00:04:13,209 --> 00:04:19,000
you know just stick it<font color="#CCCCCC"> again on the GPU</font>

83
00:04:16,089 --> 00:04:21,369
<font color="#CCCCCC">I didn't</font><font color="#E5E5E5"> even bother measuring what a</font>

84
00:04:19,000 --> 00:04:25,419
CPU resampler with you because it

85
00:04:21,370 --> 00:04:29,740
<font color="#E5E5E5">probably would</font><font color="#CCCCCC"> be super so so how does</font>

86
00:04:25,419 --> 00:04:31,900
the resampler work so basically<font color="#CCCCCC"> you just</font>

87
00:04:29,740 --> 00:04:33,970
have your<font color="#E5E5E5"> polyphase filter</font><font color="#CCCCCC"> bank</font>

88
00:04:31,900 --> 00:04:36,280
which is kind of like up simply the

89
00:04:33,970 --> 00:04:39,070
<font color="#E5E5E5">sickness if you have like 32 filters in</font>

90
00:04:36,280 --> 00:04:41,890
the bank it up samples the signal by 32

91
00:04:39,070 --> 00:04:45,730
<font color="#CCCCCC">and then what you do is</font><font color="#E5E5E5"> you down</font><font color="#CCCCCC"> simple</font>

92
00:04:41,890 --> 00:04:49,840
again by a basically an appropriate step

93
00:04:45,730 --> 00:04:52,060
length<font color="#E5E5E5"> that</font><font color="#CCCCCC"> gets you close enough</font><font color="#E5E5E5"> to the</font>

94
00:04:49,840 --> 00:04:53,080
needed sample rate<font color="#CCCCCC"> and the cool thing</font>

95
00:04:52,060 --> 00:04:59,050
about that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can basically</font>

96
00:04:53,080 --> 00:05:01,390
<font color="#E5E5E5">skip most of the up samplings part that</font>

97
00:04:59,050 --> 00:05:04,150
you<font color="#E5E5E5"> have done</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> because just skip</font>

98
00:05:01,390 --> 00:05:08,260
computing the output<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the filters so</font>

99
00:05:04,150 --> 00:05:10,060
it's really<font color="#E5E5E5"> neat</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you you don't want</font>

100
00:05:08,260 --> 00:05:13,270
to<font color="#E5E5E5"> just you</font><font color="#CCCCCC"> know skip the filters and</font>

101
00:05:10,060 --> 00:05:15,880
<font color="#E5E5E5">then be close</font><font color="#CCCCCC"> enough to</font><font color="#E5E5E5"> the sampling</font>

102
00:05:13,270 --> 00:05:18,940
rate<font color="#E5E5E5"> arm so you also do interpolation</font>

103
00:05:15,880 --> 00:05:20,800
<font color="#E5E5E5">with</font><font color="#CCCCCC"> I which I think it's minimum mean</font>

104
00:05:18,940 --> 00:05:24,100
square error<font color="#CCCCCC"> I</font><font color="#E5E5E5"> am not hundred percent</font>

105
00:05:20,800 --> 00:05:28,870
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> looked into</font><font color="#E5E5E5"> Harris the book</font>

106
00:05:24,100 --> 00:05:31,840
of Harrison did what he did<font color="#CCCCCC"> yes we have</font>

107
00:05:28,870 --> 00:05:34,180
two<font color="#E5E5E5"> filters that filter the signal</font><font color="#CCCCCC"> and</font>

108
00:05:31,840 --> 00:05:37,330
then<font color="#E5E5E5"> you interpolate between the output</font>

109
00:05:34,180 --> 00:05:42,600
of<font color="#E5E5E5"> both</font><font color="#CCCCCC"> filters</font><font color="#E5E5E5"> to you know we're more</font>

110
00:05:37,330 --> 00:05:45,280
accurate with a resampling time so yeah

111
00:05:42,600 --> 00:05:47,800
<font color="#CCCCCC">so how do you do this so</font><font color="#E5E5E5"> you start as</font>

112
00:05:45,280 --> 00:05:50,679
again<font color="#E5E5E5"> we</font><font color="#CCCCCC"> work with a polyphase</font><font color="#E5E5E5"> filter</font>

113
00:05:47,800 --> 00:05:52,780
<font color="#E5E5E5">Bank</font><font color="#CCCCCC"> if you wanna know</font><font color="#E5E5E5"> more about</font><font color="#CCCCCC"> that</font>

114
00:05:50,680 --> 00:05:54,490
then<font color="#CCCCCC"> you can check maybe</font><font color="#E5E5E5"> my previous</font>

115
00:05:52,780 --> 00:05:57,460
talk because otherwise it gets too

116
00:05:54,490 --> 00:05:58,960
lengthy<font color="#E5E5E5"> so you have your tap fit</font>

117
00:05:57,460 --> 00:06:01,000
<font color="#E5E5E5">attempts for the filter that are</font>

118
00:05:58,960 --> 00:06:04,960
basically<font color="#E5E5E5"> designed as you would have</font>

119
00:06:01,000 --> 00:06:07,960
<font color="#E5E5E5">like one in general</font><font color="#CCCCCC"> fi our filter then</font>

120
00:06:04,960 --> 00:06:09,700
you have that then you<font color="#CCCCCC"> add</font><font color="#E5E5E5"> basically the</font>

121
00:06:07,960 --> 00:06:12,969
second<font color="#E5E5E5"> filter which</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> differential</font>

122
00:06:09,700 --> 00:06:15,550
filter and it's basically for<font color="#CCCCCC"> each step</font>

123
00:06:12,970 --> 00:06:17,920
you take<font color="#E5E5E5"> the difference between the next</font>

124
00:06:15,550 --> 00:06:19,570
<font color="#E5E5E5">step and the actual tab and then you</font>

125
00:06:17,920 --> 00:06:22,540
<font color="#E5E5E5">zero out the last step because</font><font color="#CCCCCC"> you know</font>

126
00:06:19,570 --> 00:06:25,000
you<font color="#E5E5E5"> don't have another tab to make the</font>

127
00:06:22,540 --> 00:06:27,250
calculation<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> pretty</font>

128
00:06:25,000 --> 00:06:30,300
much<font color="#CCCCCC"> it for</font><font color="#E5E5E5"> how to design a differential</font>

129
00:06:27,250 --> 00:06:34,240
filter and then<font color="#E5E5E5"> you do</font><font color="#CCCCCC"> your normal</font>

130
00:06:30,300 --> 00:06:36,640
<font color="#E5E5E5">polyphase filter</font><font color="#CCCCCC"> Bank</font><font color="#E5E5E5"> partitioning so</font>

131
00:06:34,240 --> 00:06:39,130
you know in first filter you have<font color="#E5E5E5"> like</font>

132
00:06:36,640 --> 00:06:41,700
the zero phase and then first phase and

133
00:06:39,130 --> 00:06:41,700
so on

134
00:06:42,680 --> 00:06:49,170
good<font color="#E5E5E5"> so but how do</font><font color="#CCCCCC"> you then actually do</font>

135
00:06:47,160 --> 00:06:50,910
the resampling<font color="#E5E5E5"> so you have the</font>

136
00:06:49,170 --> 00:06:54,690
<font color="#E5E5E5">interpolation rate which is how much you</font>

137
00:06:50,910 --> 00:06:56,640
up<font color="#CCCCCC"> sample</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> basically yeah and</font>

138
00:06:54,690 --> 00:06:58,410
let's keep it<font color="#E5E5E5"> at that</font><font color="#CCCCCC"> that's how much</font>

139
00:06:56,640 --> 00:07:00,650
<font color="#E5E5E5">absinthe</font><font color="#CCCCCC"> you have to decimation rate</font>

140
00:06:58,410 --> 00:07:03,600
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> basically how many</font><font color="#CCCCCC"> filters you skip</font>

141
00:07:00,650 --> 00:07:06,870
then you have the<font color="#E5E5E5"> floating rate which is</font>

142
00:07:03,600 --> 00:07:08,520
like the<font color="#CCCCCC"> difference between</font><font color="#E5E5E5"> your integer</font>

143
00:07:06,870 --> 00:07:10,380
resampling which you would do when

144
00:07:08,520 --> 00:07:12,960
you're<font color="#E5E5E5"> just up</font><font color="#CCCCCC"> sample and down</font><font color="#E5E5E5"> sample by</font>

145
00:07:10,380 --> 00:07:15,450
integer factors and your actual rate

146
00:07:12,960 --> 00:07:16,739
that you want to achieve and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you</font>

147
00:07:15,450 --> 00:07:19,170
have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that is like in the</font>

148
00:07:16,740 --> 00:07:21,380
<font color="#E5E5E5">cumulative rate or maybe more</font>

149
00:07:19,170 --> 00:07:24,740
<font color="#E5E5E5">appropriate it would be an accumulated</font>

150
00:07:21,380 --> 00:07:28,490
<font color="#E5E5E5">step size so this makes basically</font>

151
00:07:24,740 --> 00:07:31,610
<font color="#E5E5E5">finding the right filter more accurate</font>

152
00:07:28,490 --> 00:07:33,630
so how<font color="#E5E5E5"> are these calculated</font>

153
00:07:31,610 --> 00:07:35,430
<font color="#CCCCCC">interpolation rate is basically just the</font>

154
00:07:33,630 --> 00:07:38,880
<font color="#E5E5E5">number of filters you</font><font color="#CCCCCC"> have in your bank</font>

155
00:07:35,430 --> 00:07:40,950
<font color="#CCCCCC">it's pretty easy a decimation rate you</font>

156
00:07:38,880 --> 00:07:42,630
basically<font color="#CCCCCC"> calculate</font><font color="#E5E5E5"> by having your</font>

157
00:07:40,950 --> 00:07:45,750
interpolation rate dividing it by the

158
00:07:42,630 --> 00:07:48,840
rate you want<font color="#E5E5E5"> to use and then you make a</font>

159
00:07:45,750 --> 00:07:51,270
floor<font color="#E5E5E5"> because you need an integer the</font>

160
00:07:48,840 --> 00:07:56,840
floating rate then of course<font color="#CCCCCC"> is just</font>

161
00:07:51,270 --> 00:07:59,310
like the<font color="#E5E5E5"> difference between your real</font>

162
00:07:56,840 --> 00:08:02,099
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> really decimation rate that you</font>

163
00:07:59,310 --> 00:08:04,460
would need and<font color="#E5E5E5"> your interest at integer</font>

164
00:08:02,100 --> 00:08:07,620
decimation rate that you<font color="#E5E5E5"> can achieve</font>

165
00:08:04,460 --> 00:08:10,500
<font color="#E5E5E5">yeah the accumulated rate is then done</font>

166
00:08:07,620 --> 00:08:13,400
in two steps<font color="#E5E5E5"> as we can see later why we</font>

167
00:08:10,500 --> 00:08:16,310
do<font color="#E5E5E5"> it in two steps</font><font color="#CCCCCC"> so first</font><font color="#E5E5E5"> of all you</font>

168
00:08:13,400 --> 00:08:19,590
update your<font color="#E5E5E5"> accumulated rate by adding</font>

169
00:08:16,310 --> 00:08:22,050
the floating rate to it so you start at

170
00:08:19,590 --> 00:08:24,299
<font color="#CCCCCC">zero and then every time you</font><font color="#E5E5E5"> filter your</font>

171
00:08:22,050 --> 00:08:27,270
<font color="#E5E5E5">signal with</font><font color="#CCCCCC"> a filter you just</font><font color="#E5E5E5"> add the</font>

172
00:08:24,300 --> 00:08:30,350
floating rate and this<font color="#E5E5E5"> basically</font>

173
00:08:27,270 --> 00:08:32,970
determines the exact filter you're using

174
00:08:30,350 --> 00:08:36,360
after you have filtered<font color="#E5E5E5"> and the signal</font>

175
00:08:32,970 --> 00:08:38,400
you just basically<font color="#E5E5E5"> do a module</font><font color="#CCCCCC"> II one</font><font color="#E5E5E5"> so</font>

176
00:08:36,360 --> 00:08:40,620
you always have<font color="#CCCCCC"> two</font><font color="#E5E5E5"> accumulated rate</font>

177
00:08:38,400 --> 00:08:43,380
between<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and one</font><font color="#CCCCCC"> so basically all</font>

178
00:08:40,620 --> 00:08:46,230
you<font color="#CCCCCC"> want to know is do I</font><font color="#E5E5E5"> need to get is</font>

179
00:08:43,380 --> 00:08:49,770
the next filter closer to the actual

180
00:08:46,230 --> 00:08:52,630
sampling<font color="#E5E5E5"> rate and</font><font color="#CCCCCC"> the integer or</font><font color="#E5E5E5"> not and</font>

181
00:08:49,770 --> 00:08:57,170
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> that's how you determine it</font>

182
00:08:52,630 --> 00:08:59,540
so yeah<font color="#CCCCCC"> how you do the filter skips</font><font color="#E5E5E5"> so</font>

183
00:08:57,170 --> 00:09:04,490
basically you just<font color="#E5E5E5"> calculate the</font><font color="#CCCCCC"> output</font>

184
00:08:59,540 --> 00:09:06,980
of<font color="#E5E5E5"> your filter at index whatever for</font>

185
00:09:04,490 --> 00:09:08,960
usually you<font color="#CCCCCC"> start it fill to zero you</font>

186
00:09:06,980 --> 00:09:11,960
can<font color="#E5E5E5"> also start at filter like in the and</font>

187
00:09:08,960 --> 00:09:14,630
a<font color="#E5E5E5"> half of the filter</font><font color="#CCCCCC"> Bank which changes</font>

188
00:09:11,960 --> 00:09:18,860
the face a<font color="#E5E5E5"> bit but usually you can get</font>

189
00:09:14,630 --> 00:09:20,870
away with you then you basically<font color="#E5E5E5"> do the</font>

190
00:09:18,860 --> 00:09:22,850
interpolation which is you<font color="#E5E5E5"> take the</font>

191
00:09:20,870 --> 00:09:25,570
<font color="#CCCCCC">output of the normal filter</font><font color="#E5E5E5"> and you add</font>

192
00:09:22,850 --> 00:09:29,540
the output of<font color="#E5E5E5"> the differential filter</font>

193
00:09:25,570 --> 00:09:31,730
multiplied<font color="#E5E5E5"> by the accumulation</font><font color="#CCCCCC"> rate and</font>

194
00:09:29,540 --> 00:09:36,319
then basically<font color="#E5E5E5"> you update this</font>

195
00:09:31,730 --> 00:09:39,350
accumulated rate<font color="#E5E5E5"> according</font><font color="#CCCCCC"> to this or do</font>

196
00:09:36,320 --> 00:09:41,420
you<font color="#E5E5E5"> add the floating rate then you</font>

197
00:09:39,350 --> 00:09:43,310
update<font color="#E5E5E5"> the filter index for your</font><font color="#CCCCCC"> next</font>

198
00:09:41,420 --> 00:09:46,550
output<font color="#CCCCCC"> that you want to calculate</font><font color="#E5E5E5"> and</font>

199
00:09:43,310 --> 00:09:48,739
then you just kept or not not kept<font color="#E5E5E5"> then</font>

200
00:09:46,550 --> 00:09:51,079
you just do the<font color="#E5E5E5"> mod one for the</font>

201
00:09:48,740 --> 00:09:53,870
accumulated rate<font color="#E5E5E5"> to always have it</font>

202
00:09:51,080 --> 00:09:55,760
between<font color="#E5E5E5"> zero and one</font><font color="#CCCCCC"> yeah and then</font><font color="#E5E5E5"> you</font>

203
00:09:53,870 --> 00:09:58,040
update the input because you know if you

204
00:09:55,760 --> 00:10:00,290
for example resampling<font color="#E5E5E5"> to a lower</font>

205
00:09:58,040 --> 00:10:04,060
sampling rate you might just<font color="#E5E5E5"> skip one</font>

206
00:10:00,290 --> 00:10:06,770
input<font color="#CCCCCC"> sampler so</font><font color="#E5E5E5"> you go if you if you</font>

207
00:10:04,060 --> 00:10:09,079
imagine you<font color="#CCCCCC"> have the filter</font><font color="#E5E5E5"> Bank you</font>

208
00:10:06,770 --> 00:10:14,000
<font color="#E5E5E5">basically skip all the filters and go to</font>

209
00:10:09,080 --> 00:10:21,440
the next<font color="#E5E5E5"> round so yeah</font><font color="#CCCCCC"> so how do we</font><font color="#E5E5E5"> get</font>

210
00:10:14,000 --> 00:10:24,260
<font color="#CCCCCC">that now on</font><font color="#E5E5E5"> the GPU so</font><font color="#CCCCCC"> cooler</font><font color="#E5E5E5"> well first</font>

211
00:10:21,440 --> 00:10:25,670
of all short introduction<font color="#E5E5E5"> to cooler so</font>

212
00:10:24,260 --> 00:10:27,520
what is cooter cooter is basically

213
00:10:25,670 --> 00:10:31,130
<font color="#E5E5E5">invidious framework to do</font>

214
00:10:27,520 --> 00:10:32,930
general-purpose computation on the GPU

215
00:10:31,130 --> 00:10:36,770
<font color="#E5E5E5">which is I think</font><font color="#CCCCCC"> mostly used for</font>

216
00:10:32,930 --> 00:10:41,180
<font color="#E5E5E5">scientific calculations and also heavily</font>

217
00:10:36,770 --> 00:10:42,920
<font color="#CCCCCC">now in</font><font color="#E5E5E5"> SDR</font><font color="#CCCCCC"> and it's the architecture of</font>

218
00:10:41,180 --> 00:10:45,349
<font color="#E5E5E5">CUDA or how you would program it is</font>

219
00:10:42,920 --> 00:10:47,750
closely related<font color="#E5E5E5"> to how Nvidia actually</font>

220
00:10:45,350 --> 00:10:51,140
boosts their GPUs<font color="#CCCCCC"> which makes a lot of</font>

221
00:10:47,750 --> 00:10:55,160
sense<font color="#E5E5E5"> so if you have a GPU you usually</font>

222
00:10:51,140 --> 00:10:57,290
<font color="#E5E5E5">have some multi processors on on the</font>

223
00:10:55,160 --> 00:10:58,969
chip which basically<font color="#E5E5E5"> all come with their</font>

224
00:10:57,290 --> 00:11:01,730
<font color="#CCCCCC">own cache</font><font color="#E5E5E5"> and their own values and</font>

225
00:10:58,970 --> 00:11:03,650
<font color="#E5E5E5">whatever not so they have this on chip</font>

226
00:11:01,730 --> 00:11:05,750
memory and the cache which<font color="#CCCCCC"> is super fast</font>

227
00:11:03,650 --> 00:11:06,300
<font color="#E5E5E5">like your normal CPU</font>

228
00:11:05,750 --> 00:11:09,690
probably

229
00:11:06,300 --> 00:11:13,530
would<font color="#E5E5E5"> have and this is pretty</font><font color="#CCCCCC"> vital for</font>

230
00:11:09,690 --> 00:11:17,280
as we see<font color="#CCCCCC"> later yeah every</font>

231
00:11:13,530 --> 00:11:19,620
multiprocessor has tons of a<font color="#E5E5E5"> Lewis or</font>

232
00:11:17,280 --> 00:11:22,709
they're called CUDA cores if you talking

233
00:11:19,620 --> 00:11:26,940
<font color="#CCCCCC">in CUDA language</font><font color="#E5E5E5"> which are basically or</font>

234
00:11:22,710 --> 00:11:29,070
<font color="#E5E5E5">your kernels or your course and they</font>

235
00:11:26,940 --> 00:11:32,280
<font color="#CCCCCC">have this global memory which you</font>

236
00:11:29,070 --> 00:11:35,040
<font color="#CCCCCC">usually see advertised</font><font color="#E5E5E5"> is like with six</font>

237
00:11:32,280 --> 00:11:37,380
gigabyte of ddr3 RAM<font color="#E5E5E5"> that's the global</font>

238
00:11:35,040 --> 00:11:41,390
<font color="#CCCCCC">memory which is super</font><font color="#E5E5E5"> slow when we</font>

239
00:11:37,380 --> 00:11:47,070
usually<font color="#E5E5E5"> try to</font><font color="#CCCCCC"> avoid using that</font><font color="#E5E5E5"> at all</font>

240
00:11:41,390 --> 00:11:48,660
so<font color="#E5E5E5"> um there's another things to it so</font>

241
00:11:47,070 --> 00:11:50,640
basically<font color="#E5E5E5"> how do you map this</font>

242
00:11:48,660 --> 00:11:53,550
architectural stuff to how your program

243
00:11:50,640 --> 00:11:56,280
in CUDA so in CUDA you basically have

244
00:11:53,550 --> 00:11:58,829
<font color="#CCCCCC">three terms that</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> very important you</font>

245
00:11:56,280 --> 00:12:01,050
<font color="#CCCCCC">have the grid the block and then you</font>

246
00:11:58,830 --> 00:12:03,990
have the threat which actually<font color="#E5E5E5"> executes</font>

247
00:12:01,050 --> 00:12:06,089
<font color="#CCCCCC">your computations that</font><font color="#E5E5E5"> you need so the</font>

248
00:12:03,990 --> 00:12:08,520
grid is basically<font color="#E5E5E5"> you can I always</font>

249
00:12:06,090 --> 00:12:11,910
<font color="#E5E5E5">imagine it is</font><font color="#CCCCCC"> if the GPU with all the</font>

250
00:12:08,520 --> 00:12:15,270
stuff on it you have your block which

251
00:12:11,910 --> 00:12:17,520
<font color="#CCCCCC">you could map to multiprocessor it's not</font>

252
00:12:15,270 --> 00:12:20,340
really the case every block gets somehow

253
00:12:17,520 --> 00:12:24,840
executed on one distinct multiprocessor

254
00:12:20,340 --> 00:12:26,670
<font color="#E5E5E5">but I think that it's close enough</font><font color="#CCCCCC"> if</font>

255
00:12:24,840 --> 00:12:28,590
you imagine it like<font color="#E5E5E5"> that and</font><font color="#CCCCCC"> you then</font>

256
00:12:26,670 --> 00:12:33,469
<font color="#CCCCCC">you have to thread which runs on your</font>

257
00:12:28,590 --> 00:12:36,420
coup de coeur another important<font color="#E5E5E5"> thing is</font>

258
00:12:33,470 --> 00:12:41,360
<font color="#E5E5E5">the</font><font color="#CCCCCC"> so called warps</font><font color="#E5E5E5"> which is how the</font>

259
00:12:36,420 --> 00:12:47,130
<font color="#E5E5E5">CUDA or the GPU scheduler schedules</font><font color="#CCCCCC"> your</font>

260
00:12:41,360 --> 00:12:49,740
computations so usually they just yet

261
00:12:47,130 --> 00:12:53,390
stick 32 threads<font color="#E5E5E5"> together they're a warp</font>

262
00:12:49,740 --> 00:12:56,850
and<font color="#CCCCCC"> they are executed concurrently</font><font color="#E5E5E5"> and</font>

263
00:12:53,390 --> 00:13:00,420
all can do<font color="#E5E5E5"> other stuff</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> the</font>

264
00:12:56,850 --> 00:13:04,730
<font color="#E5E5E5">shared memory</font><font color="#CCCCCC"> and the fast cache or</font>

265
00:13:00,420 --> 00:13:04,729
local memory yes

266
00:13:05,270 --> 00:13:11,550
some rules<font color="#CCCCCC"> of</font><font color="#E5E5E5"> thumb</font><font color="#CCCCCC"> how you would</font>

267
00:13:07,740 --> 00:13:14,250
program CUDA so<font color="#E5E5E5"> usually spawn more</font>

268
00:13:11,550 --> 00:13:17,819
threats than<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> course so for</font>

269
00:13:14,250 --> 00:13:19,980
example I think that<font color="#E5E5E5"> tribute that we</font>

270
00:13:17,820 --> 00:13:22,020
used to have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like 2000</font>

271
00:13:19,980 --> 00:13:26,160
<font color="#E5E5E5">something something course but we</font>

272
00:13:22,020 --> 00:13:29,250
spawned like<font color="#CCCCCC"> 32,000 threats probably not</font>

273
00:13:26,160 --> 00:13:31,319
<font color="#E5E5E5">all of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so probably we are having a</font>

274
00:13:29,250 --> 00:13:33,510
bit<font color="#E5E5E5"> of overkill there but usually</font><font color="#CCCCCC"> the</font>

275
00:13:31,320 --> 00:13:36,630
<font color="#E5E5E5">GPUs they have a huge pipeline also for</font>

276
00:13:33,510 --> 00:13:38,550
scheduling of the<font color="#E5E5E5"> threats so if you keep</font>

277
00:13:36,630 --> 00:13:40,950
<font color="#CCCCCC">the</font><font color="#E5E5E5"> pipeline visited by having more</font>

278
00:13:38,550 --> 00:13:44,459
threats than<font color="#E5E5E5"> you have course you gain</font>

279
00:13:40,950 --> 00:13:47,670
something as<font color="#E5E5E5"> already said the global</font>

280
00:13:44,460 --> 00:13:49,410
<font color="#E5E5E5">memory is super slow so first thing you</font>

281
00:13:47,670 --> 00:13:52,170
<font color="#E5E5E5">want to do after your transition</font><font color="#CCCCCC"> your</font>

282
00:13:49,410 --> 00:13:54,569
data from your<font color="#E5E5E5"> host to the GPU</font><font color="#CCCCCC"> which</font>

283
00:13:52,170 --> 00:13:56,849
goes into global memory<font color="#E5E5E5"> you want to</font>

284
00:13:54,570 --> 00:14:00,270
transfer all<font color="#E5E5E5"> the hot stuff that you need</font>

285
00:13:56,850 --> 00:14:02,280
<font color="#E5E5E5">to use frequently to the</font><font color="#CCCCCC"> on ship memory</font>

286
00:14:00,270 --> 00:14:06,360
which<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> configure either as a</font>

287
00:14:02,280 --> 00:14:11,670
cache<font color="#E5E5E5"> or as this s l2 cache or as this</font>

288
00:14:06,360 --> 00:14:15,590
<font color="#E5E5E5">CUDA shared memory yeah something that</font>

289
00:14:11,670 --> 00:14:18,360
<font color="#CCCCCC">you also need to</font><font color="#E5E5E5"> take</font><font color="#CCCCCC"> care of for</font><font color="#E5E5E5"> both</font>

290
00:14:15,590 --> 00:14:22,260
transitioning data from global<font color="#CCCCCC"> memory to</font>

291
00:14:18,360 --> 00:14:24,930
the shared memory<font color="#E5E5E5"> and from basically</font>

292
00:14:22,260 --> 00:14:27,660
<font color="#E5E5E5">accessing the shared memory</font><font color="#CCCCCC"> is that the</font>

293
00:14:24,930 --> 00:14:29,130
GPUs have like two<font color="#E5E5E5"> CPUs they have a</font>

294
00:14:27,660 --> 00:14:33,000
cache line the cache<font color="#CCCCCC"> line is a bit</font>

295
00:14:29,130 --> 00:14:36,780
bigger<font color="#E5E5E5"> if I recall correctly the cache</font>

296
00:14:33,000 --> 00:14:40,020
<font color="#CCCCCC">line is just big enough to</font><font color="#E5E5E5"> provide all</font>

297
00:14:36,780 --> 00:14:45,900
32 threads in a warp<font color="#E5E5E5"> with in a single</font>

298
00:14:40,020 --> 00:14:50,520
memory load with values if adjacent

299
00:14:45,900 --> 00:14:54,620
threats or<font color="#E5E5E5"> access adjacent memory so</font>

300
00:14:50,520 --> 00:14:57,990
let's say your thread<font color="#CCCCCC"> 0x</font><font color="#E5E5E5"> is memory</font><font color="#CCCCCC"> 0 and</font>

301
00:14:54,620 --> 00:15:00,630
thread 1<font color="#CCCCCC"> access the memory at position 1</font>

302
00:14:57,990 --> 00:15:03,090
which is<font color="#CCCCCC"> 10</font><font color="#E5E5E5"> with a 4 byte offset always</font>

303
00:15:00,630 --> 00:15:06,000
so because then you have<font color="#CCCCCC"> like</font><font color="#E5E5E5"> one load</font>

304
00:15:03,090 --> 00:15:08,490
that serves all the threads<font color="#CCCCCC"> if you don't</font>

305
00:15:06,000 --> 00:15:11,550
apply that<font color="#E5E5E5"> and you basically have</font>

306
00:15:08,490 --> 00:15:15,739
multiple memory loads per warp which

307
00:15:11,550 --> 00:15:20,878
seriously slows down computations a lot

308
00:15:15,739 --> 00:15:24,179
so yeah<font color="#E5E5E5"> how do we do this</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> with the</font>

309
00:15:20,879 --> 00:15:26,699
resampler so we<font color="#CCCCCC"> basically do the same</font><font color="#E5E5E5"> as</font>

310
00:15:24,179 --> 00:15:32,429
we did<font color="#E5E5E5"> before with the with a channel</font>

311
00:15:26,699 --> 00:15:35,639
<font color="#CCCCCC">Iser</font><font color="#E5E5E5"> so we have one channel so that did</font>

312
00:15:32,429 --> 00:15:38,850
the channel eyes<font color="#E5E5E5"> our outputs 45 channels</font>

313
00:15:35,639 --> 00:15:42,869
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> resample all 45 channels at once</font>

314
00:15:38,850 --> 00:15:45,569
<font color="#E5E5E5">so we have one channel map-21</font><font color="#CCCCCC"> cuda</font><font color="#E5E5E5"> block</font>

315
00:15:42,869 --> 00:15:49,649
so<font color="#E5E5E5"> if</font><font color="#CCCCCC"> cuda block is</font><font color="#E5E5E5"> basically takes care</font>

316
00:15:45,569 --> 00:15:51,599
of resampling one channel<font color="#CCCCCC"> and each</font>

317
00:15:49,649 --> 00:15:55,860
<font color="#E5E5E5">thread inside this block basically</font>

318
00:15:51,600 --> 00:15:59,850
computes one resampler output so<font color="#E5E5E5"> we only</font>

319
00:15:55,860 --> 00:16:02,249
have concurrency by calculating several

320
00:15:59,850 --> 00:16:05,100
filter output at once<font color="#E5E5E5"> so we don't do</font>

321
00:16:02,249 --> 00:16:07,199
anything<font color="#E5E5E5"> like do the multiplication or</font>

322
00:16:05,100 --> 00:16:09,929
multiplications in the dot product in

323
00:16:07,199 --> 00:16:13,559
parallel and then somehow<font color="#E5E5E5"> see how we add</font>

324
00:16:09,929 --> 00:16:17,089
it we<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> do that we</font><font color="#CCCCCC"> just do the dot</font>

325
00:16:13,559 --> 00:16:20,040
product<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> one kernel and</font>

326
00:16:17,089 --> 00:16:23,999
concurrency comes from processing

327
00:16:20,040 --> 00:16:25,889
several samples at once which also

328
00:16:23,999 --> 00:16:28,139
minimizes synchronization<font color="#CCCCCC"> because we</font>

329
00:16:25,889 --> 00:16:30,720
really don't you need any

330
00:16:28,139 --> 00:16:35,489
synchronization<font color="#CCCCCC"> because the warps</font>

331
00:16:30,720 --> 00:16:38,069
basically synchronize themselves so yeah

332
00:16:35,489 --> 00:16:39,899
<font color="#CCCCCC">filtering calculations most of these</font>

333
00:16:38,069 --> 00:16:42,929
filter calculations and my filter

334
00:16:39,899 --> 00:16:48,449
calculations I mean which filter to use

335
00:16:42,929 --> 00:16:51,988
are done on the<font color="#CCCCCC"> GPU except</font><font color="#E5E5E5"> for one thing</font>

336
00:16:48,449 --> 00:16:53,628
<font color="#E5E5E5">so I made a decision</font><font color="#CCCCCC"> if I have output</font>

337
00:16:51,989 --> 00:16:56,220
from the channel<font color="#CCCCCC"> Iser and</font><font color="#E5E5E5"> one hour</font>

338
00:16:53,629 --> 00:17:00,989
because<font color="#E5E5E5"> I have to transfer that again</font>

339
00:16:56,220 --> 00:17:03,239
back to to<font color="#E5E5E5"> the CPU and I have pretty</font>

340
00:17:00,989 --> 00:17:05,880
good<font color="#E5E5E5"> CPU host code how to do streaming</font>

341
00:17:03,239 --> 00:17:08,760
<font color="#E5E5E5">and I didn't have that for the GPU</font><font color="#CCCCCC"> I</font>

342
00:17:05,880 --> 00:17:12,419
wanted<font color="#E5E5E5"> to process all input samples at</font>

343
00:17:08,760 --> 00:17:17,010
once<font color="#E5E5E5"> which means</font><font color="#CCCCCC"> with an arbitrary</font>

344
00:17:12,419 --> 00:17:19,679
<font color="#E5E5E5">resampler we have a variety of output</font>

345
00:17:17,010 --> 00:17:21,959
samples which also means<font color="#E5E5E5"> I</font><font color="#CCCCCC"> don't know</font>

346
00:17:19,679 --> 00:17:25,319
how many threats to start before I have

347
00:17:21,959 --> 00:17:26,709
to do it so to do that<font color="#CCCCCC"> basically I pre</font>

348
00:17:25,319 --> 00:17:31,210
calculate how<font color="#CCCCCC"> many</font>

349
00:17:26,709 --> 00:17:36,399
<font color="#CCCCCC">the</font><font color="#E5E5E5"> samples I will produce in this round</font>

350
00:17:31,210 --> 00:17:38,440
<font color="#E5E5E5">on the CPU transferred that to the GPU</font>

351
00:17:36,399 --> 00:17:42,510
and they basically prayed for two things

352
00:17:38,440 --> 00:17:45,159
<font color="#E5E5E5">first is that my calculation on the CPU</font>

353
00:17:42,510 --> 00:17:47,620
<font color="#CCCCCC">weren't somehow compromised by doing a</font>

354
00:17:45,159 --> 00:17:50,919
huge<font color="#E5E5E5"> floating point multiplication and</font>

355
00:17:47,620 --> 00:17:54,279
second that<font color="#E5E5E5"> is frequent transfer from</font>

356
00:17:50,919 --> 00:17:58,230
<font color="#E5E5E5">the CPU</font><font color="#CCCCCC"> to the GPU don't slow down my</font>

357
00:17:54,279 --> 00:18:01,929
system<font color="#CCCCCC"> too much so yeah then we just</font>

358
00:17:58,230 --> 00:18:05,590
start our kernels because we always

359
00:18:01,929 --> 00:18:08,140
start kernels in numbers of<font color="#E5E5E5"> 32</font><font color="#CCCCCC"> I might</font>

360
00:18:05,590 --> 00:18:09,699
be doing some wasteful calculations but

361
00:18:08,140 --> 00:18:13,240
<font color="#E5E5E5">I don't care I just throw the</font>

362
00:18:09,700 --> 00:18:15,580
unnecessary<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> away when copying</font><font color="#E5E5E5"> the</font>

363
00:18:13,240 --> 00:18:21,370
data back<font color="#CCCCCC"> from the GPU so we're fine on</font>

364
00:18:15,580 --> 00:18:25,240
<font color="#CCCCCC">that so yeah I actually don't have</font><font color="#E5E5E5"> that</font>

365
00:18:21,370 --> 00:18:28,110
<font color="#CCCCCC">many benchmarks because I was a bit in a</font>

366
00:18:25,240 --> 00:18:30,850
<font color="#CCCCCC">hurry and</font><font color="#E5E5E5"> all I care</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> is that the</font>

367
00:18:28,110 --> 00:18:33,340
<font color="#CCCCCC">chain polyphase Bank channelized</font><font color="#E5E5E5"> a</font>

368
00:18:30,850 --> 00:18:35,049
polyphase filter<font color="#CCCCCC"> Bank resampler was</font>

369
00:18:33,340 --> 00:18:39,070
faster than<font color="#CCCCCC"> four mega samples so I</font>

370
00:18:35,049 --> 00:18:41,889
basically<font color="#CCCCCC"> just pulled them</font><font color="#E5E5E5"> together</font><font color="#CCCCCC"> had</font>

371
00:18:39,070 --> 00:18:45,100
the same<font color="#CCCCCC"> set up 45 channels</font><font color="#E5E5E5"> 1,550 types</font>

372
00:18:41,890 --> 00:18:46,570
prototype filter used for the channel

373
00:18:45,100 --> 00:18:50,969
<font color="#CCCCCC">Iser I think the filter for the</font>

374
00:18:46,570 --> 00:18:53,649
resampler was smaller it was 350 taps

375
00:18:50,970 --> 00:18:56,260
<font color="#E5E5E5">something like that and yeah we</font>

376
00:18:53,649 --> 00:18:59,139
processed 768 samples per channel in

377
00:18:56,260 --> 00:19:02,440
parallel and the result was 25 mega

378
00:18:59,140 --> 00:19:04,029
samples<font color="#E5E5E5"> on average which was pretty good</font>

379
00:19:02,440 --> 00:19:07,710
<font color="#CCCCCC">because that means I probably can</font>

380
00:19:04,029 --> 00:19:12,309
sustain<font color="#E5E5E5"> 4 mega samples for a long time</font>

381
00:19:07,710 --> 00:19:14,799
yeah<font color="#E5E5E5"> so that's pretty much it so</font><font color="#CCCCCC"> last</font>

382
00:19:12,309 --> 00:19:16,960
<font color="#E5E5E5">year I stood here at</font><font color="#CCCCCC"> faust them and said</font>

383
00:19:14,799 --> 00:19:19,270
yeah we're going<font color="#E5E5E5"> to open source it and</font>

384
00:19:16,960 --> 00:19:23,320
until September I was really optimistic

385
00:19:19,270 --> 00:19:27,879
that<font color="#CCCCCC"> I can open source it until</font>

386
00:19:23,320 --> 00:19:29,408
management got wind<font color="#CCCCCC"> that I want to</font><font color="#E5E5E5"> open</font>

387
00:19:27,880 --> 00:19:34,590
source<font color="#E5E5E5"> the stuff and then the</font>

388
00:19:29,409 --> 00:19:37,840
bureaucratic nightmare started so I

389
00:19:34,590 --> 00:19:41,100
really had to go to through a lot<font color="#E5E5E5"> of</font>

390
00:19:37,840 --> 00:19:45,340
<font color="#E5E5E5">bureaucratic stuff</font>

391
00:19:41,100 --> 00:19:47,139
<font color="#CCCCCC">that wouldn't even guarantee me</font><font color="#E5E5E5"> that I</font>

392
00:19:45,340 --> 00:19:49,500
can<font color="#CCCCCC"> open-source it it was just</font><font color="#E5E5E5"> that I</font>

393
00:19:47,140 --> 00:19:53,050
<font color="#E5E5E5">had to put something on the table for</font>

394
00:19:49,500 --> 00:19:55,330
our<font color="#E5E5E5"> Institute's management so they can</font>

395
00:19:53,050 --> 00:19:58,300
then decide the fate of the software

396
00:19:55,330 --> 00:20:00,070
which was I had to<font color="#E5E5E5"> check licenses I mean</font>

397
00:19:58,300 --> 00:20:04,629
of course<font color="#CCCCCC"> that</font><font color="#E5E5E5"> everybody has to</font><font color="#CCCCCC"> do that</font>

398
00:20:00,070 --> 00:20:08,080
um<font color="#CCCCCC"> check the licenses um I chose L</font><font color="#E5E5E5"> gplv3</font>

399
00:20:04,630 --> 00:20:10,060
if anybody's<font color="#CCCCCC"> interested</font><font color="#E5E5E5"> then check</font>

400
00:20:08,080 --> 00:20:12,310
<font color="#CCCCCC">export control which is a real nightmare</font>

401
00:20:10,060 --> 00:20:14,740
because German Aerospace Center doesn't

402
00:20:12,310 --> 00:20:17,379
<font color="#E5E5E5">really have a guy who can</font><font color="#CCCCCC"> help you with</font>

403
00:20:14,740 --> 00:20:19,780
export control so I manually<font color="#E5E5E5"> went</font>

404
00:20:17,380 --> 00:20:23,130
<font color="#CCCCCC">through the German export control list</font>

405
00:20:19,780 --> 00:20:27,129
and if you're doing<font color="#E5E5E5"> communication</font>

406
00:20:23,130 --> 00:20:30,960
basically everything is regulated<font color="#CCCCCC"> even a</font>

407
00:20:27,130 --> 00:20:34,600
tiny F IR filter I think qualifies for

408
00:20:30,960 --> 00:20:37,210
<font color="#E5E5E5">yeah having to be checked if you export</font>

409
00:20:34,600 --> 00:20:39,639
<font color="#E5E5E5">it</font><font color="#CCCCCC"> I just said it's fine I mean the</font>

410
00:20:37,210 --> 00:20:42,400
<font color="#E5E5E5">technology is out there since I don't</font>

411
00:20:39,640 --> 00:20:45,130
<font color="#E5E5E5">know ages there are several already</font>

412
00:20:42,400 --> 00:20:47,470
<font color="#E5E5E5">available resellers ain't ready for</font>

413
00:20:45,130 --> 00:20:50,110
example so I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> it should be fine</font>

414
00:20:47,470 --> 00:20:52,780
there<font color="#CCCCCC"> I had to check with</font><font color="#E5E5E5"> every project</font>

415
00:20:50,110 --> 00:20:54,820
partners and coordinator and get their

416
00:20:52,780 --> 00:20:58,120
<font color="#E5E5E5">written approval that I can</font><font color="#CCCCCC"> open-source</font>

417
00:20:54,820 --> 00:21:00,370
it even though it was<font color="#E5E5E5"> our code but yeah</font>

418
00:20:58,120 --> 00:21:04,500
you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do that and I had to</font>

419
00:21:00,370 --> 00:21:07,060
establish<font color="#CCCCCC"> contributors license agreement</font>

420
00:21:04,500 --> 00:21:10,660
<font color="#CCCCCC">no so there</font><font color="#E5E5E5"> there's nobody to help you</font>

421
00:21:07,060 --> 00:21:12,520
at DLR<font color="#CCCCCC"> and then basically have to do it</font>

422
00:21:10,660 --> 00:21:15,000
<font color="#CCCCCC">yourselves without</font><font color="#E5E5E5"> you takes a lot of</font>

423
00:21:12,520 --> 00:21:18,520
time like researching<font color="#CCCCCC"> what</font><font color="#E5E5E5"> does Apache</font>

424
00:21:15,000 --> 00:21:20,800
<font color="#E5E5E5">what does FSF and you know then come up</font>

425
00:21:18,520 --> 00:21:23,400
<font color="#CCCCCC">with</font><font color="#E5E5E5"> something that</font><font color="#CCCCCC"> is similar to that</font>

426
00:21:20,800 --> 00:21:25,710
<font color="#E5E5E5">but tailored to your needs</font>

427
00:21:23,400 --> 00:21:28,930
<font color="#CCCCCC">also the</font><font color="#E5E5E5"> cool thing is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm leaving</font>

428
00:21:25,710 --> 00:21:31,360
<font color="#CCCCCC">German Aerospace Center in two weeks</font><font color="#E5E5E5"> so</font>

429
00:21:28,930 --> 00:21:33,340
in two<font color="#E5E5E5"> weeks I</font><font color="#CCCCCC"> have to sign the CLA for</font>

430
00:21:31,360 --> 00:21:38,260
my own<font color="#E5E5E5"> code which is pretty neat</font>

431
00:21:33,340 --> 00:21:40,030
or not yeah<font color="#E5E5E5"> so I still had to convince</font>

432
00:21:38,260 --> 00:21:42,700
management<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I wrote wrote like</font>

433
00:21:40,030 --> 00:21:45,730
thousands<font color="#E5E5E5"> of documents and I give</font>

434
00:21:42,700 --> 00:21:48,010
presentations<font color="#CCCCCC"> I had other people</font><font color="#E5E5E5"> give</font>

435
00:21:45,730 --> 00:21:50,830
presentations for me because I'm<font color="#E5E5E5"> not</font>

436
00:21:48,010 --> 00:21:55,390
invited to the management meetings

437
00:21:50,830 --> 00:21:57,850
and<font color="#E5E5E5"> yeah still the whole project was in</font>

438
00:21:55,390 --> 00:22:00,430
jeopardy I wasn't in<font color="#E5E5E5"> contact with Martin</font>

439
00:21:57,850 --> 00:22:03,129
<font color="#E5E5E5">I think also</font><font color="#CCCCCC"> till last</font><font color="#E5E5E5"> week that I might</font>

440
00:22:00,430 --> 00:22:05,050
not<font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to make it</font><font color="#E5E5E5"> and yeah last</font>

441
00:22:03,130 --> 00:22:07,360
<font color="#E5E5E5">Monday I got the green light</font><font color="#CCCCCC"> yeah one</font>

442
00:22:05,050 --> 00:22:11,980
hour<font color="#CCCCCC"> before I</font><font color="#E5E5E5"> went on vacation</font><font color="#CCCCCC"> so I had</font>

443
00:22:07,360 --> 00:22:14,110
<font color="#E5E5E5">nothing done by Thursday pretty much in</font>

444
00:22:11,980 --> 00:22:15,940
terms<font color="#E5E5E5"> of having something for a</font>

445
00:22:14,110 --> 00:22:18,850
<font color="#E5E5E5">presentation so the</font><font color="#CCCCCC"> whole presentation</font>

446
00:22:15,940 --> 00:22:25,480
<font color="#CCCCCC">was done on Thursday afternoon</font><font color="#E5E5E5"> and</font>

447
00:22:18,850 --> 00:22:27,820
that's<font color="#E5E5E5"> it and yeah</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> there was lots of</font>

448
00:22:25,480 --> 00:22:30,280
<font color="#E5E5E5">talk about management</font><font color="#CCCCCC"> I also have to</font>

449
00:22:27,820 --> 00:22:34,240
thank a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> people at</font><font color="#E5E5E5"> my Institute</font>

450
00:22:30,280 --> 00:22:36,850
<font color="#E5E5E5">mostly probably January</font><font color="#CCCCCC"> leaver</font><font color="#E5E5E5"> who is my</font>

451
00:22:34,240 --> 00:22:38,650
group leader<font color="#E5E5E5"> and who fought like</font>

452
00:22:36,850 --> 00:22:43,179
relentlessly for me in all these

453
00:22:38,650 --> 00:22:46,000
management<font color="#E5E5E5"> meetings also haughty who</font>

454
00:22:43,180 --> 00:22:49,000
basically is our<font color="#E5E5E5"> senior lead developer</font>

455
00:22:46,000 --> 00:22:51,550
who also represented me in countless

456
00:22:49,000 --> 00:22:53,410
management meetings and made sure<font color="#CCCCCC"> that</font>

457
00:22:51,550 --> 00:22:55,629
the<font color="#E5E5E5"> people understood hey it's it's good</font>

458
00:22:53,410 --> 00:22:59,410
for us<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> good for everyone that we</font>

459
00:22:55,630 --> 00:23:03,520
<font color="#E5E5E5">open-source</font><font color="#CCCCCC"> dead stuff</font><font color="#E5E5E5"> so yeah also some</font>

460
00:22:59,410 --> 00:23:06,910
<font color="#E5E5E5">special thanks to yoni and Gareth for</font>

461
00:23:03,520 --> 00:23:09,460
the<font color="#E5E5E5"> kung fury images that you saw and</font>

462
00:23:06,910 --> 00:23:14,940
enjoy it I<font color="#CCCCCC"> hope so yeah then thanks for</font>

463
00:23:09,460 --> 00:23:14,940
your<font color="#E5E5E5"> time and have we time for questions</font>

464
00:23:22,309 --> 00:23:47,850
ya know<font color="#E5E5E5"> so</font><font color="#CCCCCC"> no I saw each filter</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so</font>

465
00:23:44,129 --> 00:23:50,549
the question<font color="#CCCCCC"> was whether the the C</font>

466
00:23:47,850 --> 00:23:53,639
filter output is dependent<font color="#CCCCCC"> on the</font>

467
00:23:50,549 --> 00:23:57,049
previous filter output<font color="#E5E5E5"> it's not the</font>

468
00:23:53,639 --> 00:23:59,399
thing with the pre calculation is<font color="#CCCCCC"> that</font>

469
00:23:57,049 --> 00:24:04,309
<font color="#E5E5E5">sometimes as you skip the filters</font>

470
00:23:59,399 --> 00:24:07,408
basically<font color="#E5E5E5"> you over flow your filter</font><font color="#CCCCCC"> bank</font>

471
00:24:04,309 --> 00:24:12,029
earlier or not so in our example<font color="#CCCCCC"> we</font>

472
00:24:07,409 --> 00:24:14,730
could<font color="#CCCCCC"> have had 1440 samples or 1441</font>

473
00:24:12,029 --> 00:24:17,070
samples<font color="#CCCCCC"> produced</font><font color="#E5E5E5"> by the filters I need</font>

474
00:24:14,730 --> 00:24:19,860
to know in advance because I need<font color="#E5E5E5"> to</font>

475
00:24:17,070 --> 00:24:24,720
arrange stuff when copying<font color="#E5E5E5"> so what I did</font>

476
00:24:19,860 --> 00:24:29,039
<font color="#CCCCCC">I basically pre calculated 1440 filter</font>

477
00:24:24,720 --> 00:24:32,490
skips<font color="#CCCCCC"> for that and to see at</font><font color="#E5E5E5"> what filter</font>

478
00:24:29,039 --> 00:24:34,860
do I end up as so because I also needed

479
00:24:32,490 --> 00:24:38,940
<font color="#CCCCCC">to</font><font color="#E5E5E5"> last filter to start it again at the</font>

480
00:24:34,860 --> 00:24:40,229
<font color="#CCCCCC">next call to the GPU</font><font color="#E5E5E5"> that's with where</font>

481
00:24:38,940 --> 00:24:43,080
the<font color="#CCCCCC"> floating-point I was not sure</font>

482
00:24:40,230 --> 00:24:45,990
whether then after<font color="#CCCCCC"> one million calls</font><font color="#E5E5E5"> I</font>

483
00:24:43,080 --> 00:24:49,439
<font color="#E5E5E5">would still be</font><font color="#CCCCCC"> in line with doing all</font>

484
00:24:45,990 --> 00:24:52,409
<font color="#E5E5E5">this multiplication</font><font color="#CCCCCC"> it's in contrary to</font>

485
00:24:49,440 --> 00:24:54,419
just adding all<font color="#E5E5E5"> the time</font><font color="#CCCCCC"> just a tiny</font>

486
00:24:52,409 --> 00:24:57,960
<font color="#E5E5E5">amount so that's it but everything is</font>

487
00:24:54,419 --> 00:25:05,619
concurrently so thank you

488
00:24:57,960 --> 00:25:05,619
[Applause]

