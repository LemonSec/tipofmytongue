1
00:00:05,390 --> 00:00:11,149
so please welcome Magnum<font color="#CCCCCC"> but high</font><font color="#E5E5E5"> enough</font>

2
00:00:09,180 --> 00:00:13,219
<font color="#E5E5E5">he</font><font color="#CCCCCC"> is present</font>

3
00:00:11,150 --> 00:00:16,840
<font color="#CCCCCC">Oscar's Europe</font><font color="#E5E5E5"> and he will give a talk</font>

4
00:00:13,219 --> 00:00:16,840
<font color="#E5E5E5">about posters replication</font>

5
00:00:17,120 --> 00:00:20,339
[Applause]

6
00:00:22,840 --> 00:00:26,630
thank you I guess

7
00:00:24,560 --> 00:00:28,490
<font color="#E5E5E5">you're the crowd who learned that you</font>

8
00:00:26,630 --> 00:00:29,470
have to<font color="#CCCCCC"> get to another</font><font color="#E5E5E5"> rooms very early</font>

9
00:00:28,490 --> 00:00:32,390
at false time right

10
00:00:29,470 --> 00:00:37,760
<font color="#E5E5E5">so</font><font color="#CCCCCC"> usually miss the next</font><font color="#E5E5E5"> talks because</font>

11
00:00:32,390 --> 00:00:40,150
you're in here so it's a<font color="#E5E5E5"> little bit too</font>

12
00:00:37,760 --> 00:00:43,940
<font color="#E5E5E5">loud I'll speak a</font><font color="#CCCCCC"> little bit softer</font><font color="#E5E5E5"> so</font>

13
00:00:40,150 --> 00:00:46,190
first couple words<font color="#CCCCCC"> about myself I said</font>

14
00:00:43,940 --> 00:00:48,019
my name is Magnus<font color="#E5E5E5"> Hollander</font><font color="#CCCCCC"> I work for a</font>

15
00:00:46,190 --> 00:00:50,930
company<font color="#E5E5E5"> called red pill info which is an</font>

16
00:00:48,020 --> 00:00:52,610
<font color="#CCCCCC">open source</font><font color="#E5E5E5"> services business in the</font>

17
00:00:50,930 --> 00:00:56,480
<font color="#E5E5E5">Scandinavian area I'm based out of</font>

18
00:00:52,610 --> 00:00:58,280
Stockholm in Sweden myself<font color="#CCCCCC"> I do a lot of</font>

19
00:00:56,480 --> 00:01:01,400
<font color="#CCCCCC">Postgres work</font><font color="#E5E5E5"> there sort of consulting</font>

20
00:00:58,280 --> 00:01:03,860
training support you know typical open

21
00:01:01,400 --> 00:01:07,070
<font color="#E5E5E5">source business within the post</font><font color="#CCCCCC"> Coast</font>

22
00:01:03,860 --> 00:01:09,289
team<font color="#CCCCCC"> I am a member of</font><font color="#E5E5E5"> the core team one</font>

23
00:01:07,070 --> 00:01:11,389
<font color="#E5E5E5">of the committees on the project and as</font>

24
00:01:09,290 --> 00:01:14,119
<font color="#E5E5E5">mentioned I am currently the president</font>

25
00:01:11,390 --> 00:01:16,100
of postcodes Europe<font color="#CCCCCC"> any one of you</font><font color="#E5E5E5"> is a</font>

26
00:01:14,119 --> 00:01:17,899
member of<font color="#E5E5E5"> postcodes</font><font color="#CCCCCC"> Europe don't</font><font color="#E5E5E5"> forget</font>

27
00:01:16,100 --> 00:01:19,280
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we're about to run elections</font><font color="#E5E5E5"> for</font>

28
00:01:17,899 --> 00:01:22,490
next year<font color="#E5E5E5"> so you can vote everybody else</font>

29
00:01:19,280 --> 00:01:23,810
off<font color="#CCCCCC"> the board you can't actually vote me</font>

30
00:01:22,490 --> 00:01:26,259
off the body<font color="#E5E5E5"> either wait one year and</font>

31
00:01:23,810 --> 00:01:29,260
<font color="#CCCCCC">then you can vote me off the board</font>

32
00:01:26,260 --> 00:01:34,570
anyway we are<font color="#CCCCCC"> here to talk about</font>

33
00:01:29,260 --> 00:01:36,710
replication<font color="#E5E5E5"> so does anyone remember this</font>

34
00:01:34,570 --> 00:01:41,149
does anyone remember the fact that my

35
00:01:36,710 --> 00:01:43,610
clicker stopped working<font color="#E5E5E5"> so remember this</font>

36
00:01:41,150 --> 00:01:50,049
<font color="#CCCCCC">right who is</font><font color="#E5E5E5"> wrong back in these</font><font color="#CCCCCC"> times</font>

37
00:01:43,610 --> 00:01:52,408
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you have this right and</font>

38
00:01:50,049 --> 00:01:53,820
these clusters that<font color="#E5E5E5"> I have</font>

39
00:01:52,409 --> 00:01:56,450
<font color="#CCCCCC">locating with those quests</font><font color="#E5E5E5"> and it just</font>

40
00:01:53,820 --> 00:01:58,859
works<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> place</font><font color="#E5E5E5"> for a long time</font>

41
00:01:56,450 --> 00:02:01,920
<font color="#E5E5E5">didn't have</font><font color="#CCCCCC"> built-in</font><font color="#E5E5E5"> replication right</font>

42
00:01:58,859 --> 00:02:04,048
we had external replication tools<font color="#CCCCCC"> some</font>

43
00:02:01,920 --> 00:02:05,759
<font color="#E5E5E5">of them were easy to use some of them</font>

44
00:02:04,049 --> 00:02:10,910
were as I'd like<font color="#E5E5E5"> to put it actively user</font>

45
00:02:05,759 --> 00:02:13,799
unfriendly<font color="#CCCCCC"> that they worked and that</font>

46
00:02:10,910 --> 00:02:15,840
<font color="#CCCCCC">wasn't</font><font color="#E5E5E5"> really the case back</font><font color="#CCCCCC"> then that</font>

47
00:02:13,799 --> 00:02:18,870
<font color="#E5E5E5">post</font><font color="#CCCCCC"> course didn't have replication it</font>

48
00:02:15,840 --> 00:02:21,209
just wasn't very obvious it obviously

49
00:02:18,870 --> 00:02:23,480
isn't<font color="#E5E5E5"> the case now and</font><font color="#CCCCCC"> the case now is</font>

50
00:02:21,209 --> 00:02:26,160
<font color="#E5E5E5">also still at the post goes has</font>

51
00:02:23,480 --> 00:02:27,690
replication just like them<font color="#CCCCCC"> there many</font>

52
00:02:26,160 --> 00:02:29,970
choices there are<font color="#E5E5E5"> many more choices now</font>

53
00:02:27,690 --> 00:02:31,890
than there used to<font color="#CCCCCC"> be back then</font>

54
00:02:29,970 --> 00:02:33,480
<font color="#E5E5E5">everything used to be an external</font>

55
00:02:31,890 --> 00:02:35,910
replication system<font color="#E5E5E5"> that you put into</font>

56
00:02:33,480 --> 00:02:38,340
your post course<font color="#CCCCCC"> now there are external</font>

57
00:02:35,910 --> 00:02:40,560
<font color="#E5E5E5">and internal options and we still have</font>

58
00:02:38,340 --> 00:02:42,930
to choose<font color="#E5E5E5"> for them right</font><font color="#CCCCCC"> I need to pick</font>

59
00:02:40,560 --> 00:02:45,239
which<font color="#E5E5E5"> one to use or in fact you can pick</font>

60
00:02:42,930 --> 00:02:47,579
<font color="#E5E5E5">more than one depending on exactly what</font>

61
00:02:45,239 --> 00:02:49,530
your requirements are we still have some

62
00:02:47,579 --> 00:02:53,760
<font color="#E5E5E5">there</font><font color="#CCCCCC"> are or to use who have some that</font>

63
00:02:49,530 --> 00:02:55,650
are<font color="#CCCCCC"> very</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> easy to use now when we do</font>

64
00:02:53,760 --> 00:02:58,349
replication we can do it that sort of

65
00:02:55,650 --> 00:03:00,540
many many different<font color="#CCCCCC"> layers usually to</font>

66
00:02:58,349 --> 00:03:01,888
solve different problems<font color="#CCCCCC"> sometimes to</font>

67
00:03:00,540 --> 00:03:02,429
you know shift the blame<font color="#E5E5E5"> to somebody</font>

68
00:03:01,889 --> 00:03:03,720
else

69
00:03:02,430 --> 00:03:06,030
there<font color="#E5E5E5"> are many different reasons</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

70
00:03:03,720 --> 00:03:08,639
<font color="#CCCCCC">it everything</font><font color="#E5E5E5"> starting at the hardware</font>

71
00:03:06,030 --> 00:03:10,980
<font color="#E5E5E5">well what hardware is also software</font>

72
00:03:08,639 --> 00:03:13,079
<font color="#E5E5E5">right but the things that are sold to us</font>

73
00:03:10,980 --> 00:03:14,399
as<font color="#E5E5E5"> if they are hardware which</font><font color="#CCCCCC"> is</font>

74
00:03:13,079 --> 00:03:17,220
software<font color="#CCCCCC"> that somebody else</font><font color="#E5E5E5"> wrote and</font>

75
00:03:14,400 --> 00:03:18,840
<font color="#E5E5E5">firmware</font><font color="#CCCCCC"> anyway up to actually doing the</font>

76
00:03:17,220 --> 00:03:22,500
replication completely in<font color="#E5E5E5"> your</font>

77
00:03:18,840 --> 00:03:24,989
application and<font color="#CCCCCC"> just</font><font color="#E5E5E5"> run across sort of</font>

78
00:03:22,500 --> 00:03:27,030
separate databases so I like<font color="#CCCCCC"> to put this</font>

79
00:03:24,989 --> 00:03:30,720
through you know we have application

80
00:03:27,030 --> 00:03:33,660
level replication<font color="#E5E5E5"> with what I call</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> in</font>

81
00:03:30,720 --> 00:03:36,359
database level replication<font color="#CCCCCC"> which is</font>

82
00:03:33,660 --> 00:03:38,069
basically trigger based right you it's

83
00:03:36,359 --> 00:03:40,590
basically an<font color="#CCCCCC"> application that runs as</font>

84
00:03:38,069 --> 00:03:42,599
triggers<font color="#E5E5E5"> inside of your database you can</font>

85
00:03:40,590 --> 00:03:44,459
write it yourself or<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> use</font>

86
00:03:42,599 --> 00:03:45,569
<font color="#E5E5E5">something else back in the days when</font>

87
00:03:44,459 --> 00:03:48,090
<font color="#E5E5E5">this whole post goes</font>

88
00:03:45,569 --> 00:03:49,890
application was<font color="#E5E5E5"> the truth then this is</font>

89
00:03:48,090 --> 00:03:52,650
<font color="#CCCCCC">basically what Postgres had in the</font><font color="#E5E5E5"> form</font>

90
00:03:49,890 --> 00:03:54,358
of four or five<font color="#E5E5E5"> external different</font>

91
00:03:52,650 --> 00:03:56,909
projects that<font color="#CCCCCC"> would do it and then we</font>

92
00:03:54,359 --> 00:03:58,799
<font color="#E5E5E5">can do database logical replication we</font>

93
00:03:56,909 --> 00:04:01,769
can do database managed physical

94
00:03:58,799 --> 00:04:03,689
replication<font color="#CCCCCC"> we can do operating system</font>

95
00:04:01,769 --> 00:04:06,239
replication which is this point<font color="#E5E5E5"> is</font>

96
00:04:03,689 --> 00:04:08,760
<font color="#CCCCCC">basically things like dr BD or</font><font color="#E5E5E5"> similar</font>

97
00:04:06,239 --> 00:04:10,260
solutions that run transparently in the

98
00:04:08,760 --> 00:04:12,358
operator clock<font color="#E5E5E5"> that tried</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> run</font>

99
00:04:10,260 --> 00:04:14,489
transparently in the<font color="#E5E5E5"> operating system</font>

100
00:04:12,359 --> 00:04:16,949
<font color="#CCCCCC">then of</font><font color="#E5E5E5"> course at the</font><font color="#CCCCCC"> very end we can do</font>

101
00:04:14,489 --> 00:04:21,870
the hardware based replication<font color="#CCCCCC"> which</font>

102
00:04:16,949 --> 00:04:26,130
today basically<font color="#E5E5E5"> means</font><font color="#CCCCCC"> ahsan right let's</font>

103
00:04:21,870 --> 00:04:28,740
go<font color="#E5E5E5"> through the stack from the bottom and</font>

104
00:04:26,130 --> 00:04:31,650
see what options<font color="#E5E5E5"> we have in</font><font color="#CCCCCC"> a post quest</font>

105
00:04:28,740 --> 00:04:34,099
<font color="#E5E5E5">world today</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> last thing that we</font>

106
00:04:31,650 --> 00:04:36,690
can do there<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> sand</font><font color="#E5E5E5"> based replication</font>

107
00:04:34,099 --> 00:04:39,419
<font color="#CCCCCC">this is basically your hardware</font><font color="#E5E5E5"> takes</font>

108
00:04:36,690 --> 00:04:41,669
<font color="#E5E5E5">care of the replication</font><font color="#CCCCCC"> it is typically</font>

109
00:04:39,419 --> 00:04:43,650
a block level replication handled by you

110
00:04:41,669 --> 00:04:46,620
know whatever<font color="#E5E5E5"> firmware is running in</font>

111
00:04:43,650 --> 00:04:48,090
your<font color="#CCCCCC"> son it is</font><font color="#E5E5E5"> transparent to the</font>

112
00:04:46,620 --> 00:04:50,340
operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> and that's the whole</font>

113
00:04:48,090 --> 00:04:53,099
point of it right in the OS you get a

114
00:04:50,340 --> 00:04:54,330
block<font color="#CCCCCC"> device</font><font color="#E5E5E5"> and you have the same type</font>

115
00:04:53,099 --> 00:04:57,780
device somewhere<font color="#E5E5E5"> else and it's all just</font>

116
00:04:54,330 --> 00:04:59,010
<font color="#E5E5E5">magic and the space</font><font color="#CCCCCC"> race runs on top of</font>

117
00:04:57,780 --> 00:05:00,780
file systems<font color="#CCCCCC"> when</font><font color="#E5E5E5"> you mount your</font>

118
00:04:59,010 --> 00:05:02,159
<font color="#E5E5E5">filesystem</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> doctor</font><font color="#E5E5E5"> eyes and you</font>

119
00:05:00,780 --> 00:05:04,830
automatically have<font color="#CCCCCC"> their replicated</font>

120
00:05:02,159 --> 00:05:06,389
solutions where you<font color="#E5E5E5"> can know usually you</font>

121
00:05:04,830 --> 00:05:07,949
can't mount both at the same time<font color="#CCCCCC"> but</font>

122
00:05:06,389 --> 00:05:10,110
<font color="#CCCCCC">you can mount it that for</font><font color="#E5E5E5"> example a</font>

123
00:05:07,949 --> 00:05:11,550
<font color="#E5E5E5">different physical location written and</font>

124
00:05:10,110 --> 00:05:14,610
<font color="#E5E5E5">fell over your database there this is</font>

125
00:05:11,550 --> 00:05:15,990
very common today<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> in in</font><font color="#E5E5E5"> the</font>

126
00:05:14,610 --> 00:05:17,479
scenarios<font color="#E5E5E5"> that I work</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> our customers</font>

127
00:05:15,990 --> 00:05:18,620
<font color="#E5E5E5">in like larger enterprise</font>

128
00:05:17,479 --> 00:05:20,870
everybody has this one way<font color="#E5E5E5"> or another</font>

129
00:05:18,620 --> 00:05:22,520
<font color="#CCCCCC">especially knowing the world of virtual</font>

130
00:05:20,870 --> 00:05:23,779
machines and I'm sure most<font color="#E5E5E5"> of you</font><font color="#CCCCCC"> have</font>

131
00:05:22,520 --> 00:05:25,729
at least at<font color="#CCCCCC"> one point use</font><font color="#E5E5E5"> the virtual</font>

132
00:05:23,779 --> 00:05:28,159
<font color="#CCCCCC">machine</font><font color="#E5E5E5"> right you probably know what</font>

133
00:05:25,729 --> 00:05:29,210
this is now<font color="#E5E5E5"> and those kind of</font><font color="#CCCCCC"> places</font><font color="#E5E5E5"> use</font>

134
00:05:28,159 --> 00:05:33,710
nothing<font color="#E5E5E5"> else right there are all these</font>

135
00:05:29,210 --> 00:05:35,089
<font color="#E5E5E5">massive like VMware cluster things so</font>

136
00:05:33,710 --> 00:05:36,799
it's a<font color="#E5E5E5"> pretty common thing it's a pretty</font>

137
00:05:35,089 --> 00:05:38,059
<font color="#E5E5E5">simple thing you can do this sort of</font>

138
00:05:36,800 --> 00:05:41,629
anything<font color="#CCCCCC"> from just</font><font color="#E5E5E5"> a single rack</font>

139
00:05:38,059 --> 00:05:43,580
<font color="#E5E5E5">replication to</font><font color="#CCCCCC"> neatly site synchronous</font>

140
00:05:41,629 --> 00:05:45,289
and the good thing<font color="#CCCCCC"> about these that</font>

141
00:05:43,580 --> 00:05:47,568
these solutions are sold to be

142
00:05:45,289 --> 00:05:48,529
<font color="#E5E5E5">guaranteed</font><font color="#CCCCCC"> to never fail</font><font color="#E5E5E5"> right because</font>

143
00:05:47,569 --> 00:05:49,969
there are multi sites and they're

144
00:05:48,529 --> 00:05:51,229
following all the best practices<font color="#CCCCCC"> and</font>

145
00:05:49,969 --> 00:05:58,479
<font color="#E5E5E5">things and and of</font><font color="#CCCCCC"> course things that</font>

146
00:05:51,229 --> 00:06:05,300
never<font color="#E5E5E5"> fail a perfect time yeah</font><font color="#CCCCCC"> most</font>

147
00:05:58,479 --> 00:06:07,188
<font color="#E5E5E5">people I know who have had big</font><font color="#CCCCCC"> problems</font>

148
00:06:05,300 --> 00:06:10,789
with it<font color="#E5E5E5"> simply</font><font color="#CCCCCC"> because there is no such</font>

149
00:06:07,189 --> 00:06:13,009
thing as<font color="#E5E5E5"> something that</font><font color="#CCCCCC"> never fails</font><font color="#E5E5E5"> it's</font>

150
00:06:10,789 --> 00:06:14,899
only a matter of when<font color="#E5E5E5"> it fails and if</font>

151
00:06:13,009 --> 00:06:20,479
everything fails at once<font color="#E5E5E5"> or only some</font>

152
00:06:14,899 --> 00:06:22,819
pieces at any given time it in a

153
00:06:20,479 --> 00:06:30,830
<font color="#E5E5E5">spectacular</font><font color="#CCCCCC"> way because it takes</font>

154
00:06:22,819 --> 00:06:34,159
everything down the fact that<font color="#CCCCCC"> this</font>

155
00:06:30,830 --> 00:06:35,779
storage can never pay it<font color="#E5E5E5"> I've seen</font>

156
00:06:34,159 --> 00:06:38,389
scenarios where you<font color="#E5E5E5"> know people lost</font>

157
00:06:35,779 --> 00:06:41,360
some six seven thousand virtual machines

158
00:06:38,389 --> 00:06:43,430
at<font color="#CCCCCC"> once and suddenly</font><font color="#E5E5E5"> the fact that</font>

159
00:06:41,360 --> 00:06:44,509
<font color="#CCCCCC">they're five Postgres databases was</font>

160
00:06:43,430 --> 00:06:51,830
maybe not<font color="#E5E5E5"> the biggest problem in the</font>

161
00:06:44,509 --> 00:06:53,209
<font color="#CCCCCC">world</font><font color="#E5E5E5"> but so this works</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> level but</font>

162
00:06:51,830 --> 00:06:55,008
it's again it's<font color="#E5E5E5"> the whole thing if you</font>

163
00:06:53,209 --> 00:06:56,449
if you design everything<font color="#CCCCCC"> you'd be able</font>

164
00:06:55,009 --> 00:06:59,300
<font color="#E5E5E5">to get one thing that cannot</font><font color="#CCCCCC"> possibly</font>

165
00:06:56,449 --> 00:07:02,089
fail<font color="#E5E5E5"> if it's really painful when</font><font color="#CCCCCC"> it</font>

166
00:06:59,300 --> 00:07:04,029
fails and it<font color="#E5E5E5"> really is a when there is</font>

167
00:07:02,089 --> 00:07:06,589
no such thing as things<font color="#E5E5E5"> that don't fail</font>

168
00:07:04,029 --> 00:07:07,639
it's<font color="#E5E5E5"> infinitely Postgres specific so</font>

169
00:07:06,589 --> 00:07:08,629
we're not<font color="#CCCCCC"> gonna spend a</font><font color="#E5E5E5"> lot of time on</font>

170
00:07:07,639 --> 00:07:10,550
that one<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> gonna move</font><font color="#E5E5E5"> up the stack</font>

171
00:07:08,629 --> 00:07:13,060
instead<font color="#CCCCCC"> a look at the operating system</font>

172
00:07:10,550 --> 00:07:15,340
level<font color="#CCCCCC"> and at this level</font>

173
00:07:13,060 --> 00:07:16,660
basically I mean dr BD is probably the

174
00:07:15,340 --> 00:07:17,739
most common one at<font color="#E5E5E5"> least if</font><font color="#CCCCCC"> you're in</font>

175
00:07:16,660 --> 00:07:20,470
the<font color="#E5E5E5"> linux world there are some other</font>

176
00:07:17,740 --> 00:07:22,870
options<font color="#E5E5E5"> around it and they'll basically</font>

177
00:07:20,470 --> 00:07:24,640
do the<font color="#CCCCCC"> same thing as this</font><font color="#E5E5E5"> replicated</font>

178
00:07:22,870 --> 00:07:26,740
<font color="#CCCCCC">sack</font><font color="#E5E5E5"> right except they're doing it in</font>

179
00:07:24,640 --> 00:07:30,250
the form of<font color="#E5E5E5"> a driver in your</font><font color="#CCCCCC"> operating</font>

180
00:07:26,740 --> 00:07:31,930
system instead<font color="#E5E5E5"> of being a driver in</font>

181
00:07:30,250 --> 00:07:33,790
somebody else's operating system which

182
00:07:31,930 --> 00:07:38,050
is<font color="#E5E5E5"> really what</font><font color="#CCCCCC"> your sign is right it</font>

183
00:07:33,790 --> 00:07:40,120
still<font color="#E5E5E5"> just software</font><font color="#CCCCCC"> it works and fails</font>

184
00:07:38,050 --> 00:07:42,820
<font color="#E5E5E5">in sort of the same</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> as your typical</font>

185
00:07:40,120 --> 00:07:46,020
thumbs it has usually a little<font color="#CCCCCC"> less</font>

186
00:07:42,820 --> 00:07:48,250
performance<font color="#CCCCCC"> but it's even</font><font color="#E5E5E5"> if you're only</font>

187
00:07:46,020 --> 00:07:51,400
worried<font color="#E5E5E5"> about hardware failure of your</font>

188
00:07:48,250 --> 00:07:53,470
<font color="#E5E5E5">hard drives it's not a bad choice</font><font color="#CCCCCC"> for a</font>

189
00:07:51,400 --> 00:07:55,900
system where<font color="#E5E5E5"> you don't need high</font>

190
00:07:53,470 --> 00:07:57,880
performance right but I<font color="#E5E5E5"> mean it</font>

191
00:07:55,900 --> 00:07:59,620
replicates your<font color="#E5E5E5"> disks over TCP and it</font>

192
00:07:57,880 --> 00:08:01,210
replicates<font color="#CCCCCC"> them in a</font><font color="#E5E5E5"> black level so it</font>

193
00:07:59,620 --> 00:08:04,030
doesn't know what data it's replicating

194
00:08:01,210 --> 00:08:06,400
that<font color="#CCCCCC"> obviously can get pretty</font>

195
00:08:04,030 --> 00:08:08,830
inefficient<font color="#CCCCCC"> when it comes to performance</font>

196
00:08:06,400 --> 00:08:10,960
on<font color="#E5E5E5"> the replication side and again it's</font>

197
00:08:08,830 --> 00:08:14,169
not<font color="#CCCCCC"> very specific</font><font color="#E5E5E5"> so we're gonna skip</font>

198
00:08:10,960 --> 00:08:17,080
past that one as<font color="#CCCCCC"> well and see what do</font><font color="#E5E5E5"> we</font>

199
00:08:14,170 --> 00:08:18,700
<font color="#E5E5E5">have</font><font color="#CCCCCC"> failure of the stack in Postgres so</font>

200
00:08:17,080 --> 00:08:20,830
<font color="#CCCCCC">now we're getting to the actual Postgres</font>

201
00:08:18,700 --> 00:08:24,190
<font color="#E5E5E5">science right database physical</font>

202
00:08:20,830 --> 00:08:28,150
replication this is a<font color="#E5E5E5"> transaction log or</font>

203
00:08:24,190 --> 00:08:31,800
<font color="#E5E5E5">now based replication solution in</font><font color="#CCCCCC"> papers</font>

204
00:08:28,150 --> 00:08:33,939
we had this in Postgres 8.3 which is

205
00:08:31,800 --> 00:08:35,980
people who<font color="#E5E5E5"> are still saying</font><font color="#CCCCCC"> that we</font>

206
00:08:33,940 --> 00:08:38,080
didn't<font color="#E5E5E5"> have replication</font><font color="#CCCCCC"> and 8.3</font><font color="#E5E5E5"> and</font>

207
00:08:35,980 --> 00:08:40,240
<font color="#CCCCCC">Infernus he did an excellent</font><font color="#E5E5E5"> it was</font>

208
00:08:38,080 --> 00:08:42,700
highly based so basically the

209
00:08:40,240 --> 00:08:45,250
replication deck was<font color="#E5E5E5"> books from 16</font>

210
00:08:42,700 --> 00:08:48,310
megabytes worth of transactions which is

211
00:08:45,250 --> 00:08:50,740
kind of not<font color="#E5E5E5"> very real time it worked</font>

212
00:08:48,310 --> 00:08:53,380
pretty well<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> foundation</font>

213
00:08:50,740 --> 00:08:55,390
that<font color="#E5E5E5"> the sort of</font><font color="#CCCCCC"> cool replication</font>

214
00:08:53,380 --> 00:08:56,560
<font color="#E5E5E5">options that we have in Postgres today</font>

215
00:08:55,390 --> 00:09:01,000
there were building<font color="#CCCCCC"> on the same</font>

216
00:08:56,560 --> 00:09:02,130
<font color="#E5E5E5">foundation in first was 9.0 this was</font>

217
00:09:01,000 --> 00:09:05,020
turned into streaming<font color="#E5E5E5"> replication</font>

218
00:09:02,130 --> 00:09:07,180
<font color="#CCCCCC">meaning that</font><font color="#E5E5E5"> instead of replicating</font>

219
00:09:05,020 --> 00:09:08,209
<font color="#CCCCCC">decks</font><font color="#E5E5E5"> of 16 megabytes we would now</font>

220
00:09:07,180 --> 00:09:13,069
replicate basically

221
00:09:08,209 --> 00:09:18,189
<font color="#CCCCCC">ah</font><font color="#E5E5E5"> one bite replicate transaction log</font><font color="#CCCCCC"> as</font>

222
00:09:13,069 --> 00:09:20,439
soon as<font color="#E5E5E5"> it's created as</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> postcodes 9.1</font>

223
00:09:18,189 --> 00:09:22,990
support was added for synchronous

224
00:09:20,439 --> 00:09:26,300
meaning that you can be guaranteed<font color="#E5E5E5"> that</font>

225
00:09:22,990 --> 00:09:29,480
<font color="#E5E5E5">when you commit the transaction it is in</font>

226
00:09:26,300 --> 00:09:32,089
at least<font color="#CCCCCC"> two places and the system will</font>

227
00:09:29,480 --> 00:09:35,439
blip and wait<font color="#E5E5E5"> until the commit has</font>

228
00:09:32,089 --> 00:09:40,160
reached<font color="#E5E5E5"> the standby node or standby node</font>

229
00:09:35,439 --> 00:09:41,660
<font color="#CCCCCC">before the transaction</font><font color="#E5E5E5"> is released and</font>

230
00:09:40,160 --> 00:09:43,129
whether this works particularly<font color="#E5E5E5"> in</font>

231
00:09:41,660 --> 00:09:45,139
<font color="#CCCCCC">Postgres which</font><font color="#E5E5E5"> I find very useful is you</font>

232
00:09:43,129 --> 00:09:46,429
<font color="#E5E5E5">can mix synchronous and asynchronous and</font>

233
00:09:45,139 --> 00:09:48,589
<font color="#E5E5E5">you've been able to do that since</font>

234
00:09:46,429 --> 00:09:50,929
<font color="#E5E5E5">version 9.1</font><font color="#CCCCCC"> so you can say</font><font color="#E5E5E5"> that some of</font>

235
00:09:48,589 --> 00:09:53,389
your transactions are very important

236
00:09:50,929 --> 00:09:54,829
they need<font color="#E5E5E5"> to be synchronously replicated</font>

237
00:09:53,389 --> 00:09:56,660
you need the guarantees that they exist

238
00:09:54,829 --> 00:09:58,998
in<font color="#CCCCCC"> multiple places</font><font color="#E5E5E5"> before your</font>

239
00:09:56,660 --> 00:10:00,769
application<font color="#CCCCCC"> proceeds to the next step</font>

240
00:09:58,999 --> 00:10:02,269
<font color="#CCCCCC">well some other</font><font color="#E5E5E5"> things are not</font><font color="#CCCCCC"> that</font>

241
00:10:00,769 --> 00:10:05,029
<font color="#E5E5E5">important and they can run</font>

242
00:10:02,269 --> 00:10:07,129
asynchronously<font color="#CCCCCC"> and you can run this in</font>

243
00:10:05,029 --> 00:10:09,230
<font color="#CCCCCC">the same system you</font><font color="#E5E5E5"> just in your</font>

244
00:10:07,129 --> 00:10:11,569
transaction you just said you know set

245
00:10:09,230 --> 00:10:13,399
synchronous mode equals F and<font color="#E5E5E5"> you get an</font>

246
00:10:11,569 --> 00:10:15,490
asynchronous or synchronous mode equals

247
00:10:13,399 --> 00:10:17,779
<font color="#CCCCCC">M and you get a synchronous one</font>

248
00:10:15,490 --> 00:10:18,699
depending on<font color="#E5E5E5"> your need you should you</font>

249
00:10:17,779 --> 00:10:20,779
know one<font color="#CCCCCC"> of them would be the</font><font color="#E5E5E5"> default</font>

250
00:10:18,699 --> 00:10:25,490
and the other one would<font color="#CCCCCC"> be</font><font color="#E5E5E5"> the one that</font>

251
00:10:20,779 --> 00:10:29,269
you changed into the added<font color="#E5E5E5"> support the</font>

252
00:10:25,490 --> 00:10:31,970
<font color="#E5E5E5">porn commit in version 10 which</font><font color="#CCCCCC"> is your</font>

253
00:10:29,269 --> 00:10:33,679
ability<font color="#CCCCCC"> to basically say well I have 10</font>

254
00:10:31,970 --> 00:10:35,299
servers<font color="#CCCCCC"> and</font><font color="#E5E5E5"> a Walkman has access</font><font color="#CCCCCC"> to</font>

255
00:10:33,679 --> 00:10:37,189
beyond<font color="#E5E5E5"> five</font><font color="#CCCCCC"> of them before I release the</font>

256
00:10:35,299 --> 00:10:39,559
transaction<font color="#E5E5E5"> or no I have five service I</font>

257
00:10:37,189 --> 00:10:43,189
want<font color="#E5E5E5"> them to be on three numbers other</font>

258
00:10:39,559 --> 00:10:44,569
than<font color="#CCCCCC"> two is</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> quad commit nine</font>

259
00:10:43,189 --> 00:10:45,860
<font color="#CCCCCC">six actually added the ability to add</font>

260
00:10:44,569 --> 00:10:48,709
more than<font color="#CCCCCC"> one that</font><font color="#E5E5E5"> they had to be in</font>

261
00:10:45,860 --> 00:10:50,720
<font color="#E5E5E5">order and the quorum commit one in</font><font color="#CCCCCC"> post</font>

262
00:10:48,709 --> 00:10:52,309
<font color="#CCCCCC">press ten is sort of the the one</font><font color="#E5E5E5"> you</font>

263
00:10:50,720 --> 00:10:55,369
really<font color="#E5E5E5"> want if what you're</font><font color="#CCCCCC"> looking for</font>

264
00:10:52,309 --> 00:10:57,709
is more<font color="#E5E5E5"> than two notes worth of</font>

265
00:10:55,369 --> 00:10:58,850
synchronous replication<font color="#E5E5E5"> and at which</font>

266
00:10:57,709 --> 00:11:00,768
point you'll just look<font color="#E5E5E5"> at all your</font>

267
00:10:58,850 --> 00:11:02,629
<font color="#E5E5E5">servers and basically count how many</font>

268
00:11:00,769 --> 00:11:04,429
have<font color="#CCCCCC"> received your synchronous</font>

269
00:11:02,629 --> 00:11:06,860
transaction<font color="#E5E5E5"> and as soon as enough of</font>

270
00:11:04,429 --> 00:11:09,160
them<font color="#E5E5E5"> compare your configuration has</font>

271
00:11:06,860 --> 00:11:12,190
received it it's released

272
00:11:09,160 --> 00:11:14,260
and the<font color="#CCCCCC"> transaction will continue and</font>

273
00:11:12,190 --> 00:11:15,610
<font color="#E5E5E5">there are still things being added to</font>

274
00:11:14,260 --> 00:11:18,330
this<font color="#E5E5E5"> the thing that's Claire</font><font color="#CCCCCC"> Monica</font><font color="#E5E5E5"> so</font>

275
00:11:15,610 --> 00:11:21,250
<font color="#E5E5E5">Elise is their own transactional based</font>

276
00:11:18,330 --> 00:11:22,900
basically as soon every transaction in

277
00:11:21,250 --> 00:11:24,310
<font color="#CCCCCC">Postgres when doing</font><font color="#E5E5E5"> anything it's first</font>

278
00:11:22,900 --> 00:11:27,280
<font color="#E5E5E5">written to the</font><font color="#CCCCCC"> transactional order the</font>

279
00:11:24,310 --> 00:11:29,829
while and then it's written to<font color="#CCCCCC"> the rest</font>

280
00:11:27,280 --> 00:11:33,790
of the<font color="#E5E5E5"> disk</font><font color="#CCCCCC"> and this is primarily used</font>

281
00:11:29,830 --> 00:11:36,010
<font color="#E5E5E5">for</font><font color="#CCCCCC"> proper cover instead</font><font color="#E5E5E5"> of just using</font>

282
00:11:33,790 --> 00:11:38,709
<font color="#E5E5E5">it for that we ship all these changes to</font>

283
00:11:36,010 --> 00:11:41,830
<font color="#E5E5E5">the standby</font><font color="#CCCCCC"> nodes and they basically run</font>

284
00:11:38,710 --> 00:11:43,720
in crash recovery<font color="#E5E5E5"> mode all</font><font color="#CCCCCC"> the time</font><font color="#E5E5E5"> and</font>

285
00:11:41,830 --> 00:11:46,120
they<font color="#CCCCCC"> just keep recovering so as the</font><font color="#E5E5E5"> data</font>

286
00:11:43,720 --> 00:11:47,650
shows up and the transaction log looking

287
00:11:46,120 --> 00:11:49,660
at<font color="#CCCCCC"> it's in the simplest form</font><font color="#E5E5E5"> it's like</font>

288
00:11:47,650 --> 00:11:51,880
sending<font color="#E5E5E5"> binary</font><font color="#CCCCCC"> discs of your database</font>

289
00:11:49,660 --> 00:11:54,400
saying hey<font color="#CCCCCC"> changed this piece of this</font>

290
00:11:51,880 --> 00:11:57,100
<font color="#E5E5E5">disk block over here</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this way and we</font>

291
00:11:54,400 --> 00:11:57,970
<font color="#CCCCCC">just rerun that on the</font><font color="#E5E5E5"> other side so</font>

292
00:11:57,100 --> 00:12:00,670
<font color="#CCCCCC">that one's pretty fast</font>

293
00:11:57,970 --> 00:12:03,310
the common thing<font color="#E5E5E5"> again</font><font color="#CCCCCC"> while level</font>

294
00:12:00,670 --> 00:12:04,660
equals<font color="#CCCCCC"> replica is what you need is this</font>

295
00:12:03,310 --> 00:12:08,680
<font color="#E5E5E5">only you need to set in your post post</font>

296
00:12:04,660 --> 00:12:10,420
<font color="#CCCCCC">call</font><font color="#E5E5E5"> basically you need to add a little</font>

297
00:12:08,680 --> 00:12:13,420
<font color="#E5E5E5">bit of</font><font color="#CCCCCC"> information into</font><font color="#E5E5E5"> the transaction</font>

298
00:12:10,420 --> 00:12:15,339
log<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> it able to</font><font color="#E5E5E5"> perform</font><font color="#CCCCCC"> this</font>

299
00:12:13,420 --> 00:12:17,800
style<font color="#E5E5E5"> replication as opposed to</font><font color="#CCCCCC"> in</font>

300
00:12:15,340 --> 00:12:19,090
<font color="#E5E5E5">version 10 this is also the default so</font>

301
00:12:17,800 --> 00:12:21,130
you<font color="#E5E5E5"> can run all</font><font color="#CCCCCC"> of this out of the</font><font color="#E5E5E5"> box</font>

302
00:12:19,090 --> 00:12:22,450
on<font color="#CCCCCC"> Costco's version 10 on previous</font>

303
00:12:21,130 --> 00:12:24,790
<font color="#CCCCCC">versions</font><font color="#E5E5E5"> you have to enable it you have</font>

304
00:12:22,450 --> 00:12:28,630
to configure<font color="#E5E5E5"> the minimum</font><font color="#CCCCCC"> number of users</font>

305
00:12:24,790 --> 00:12:30,490
that<font color="#E5E5E5"> can log in and do it as well</font><font color="#CCCCCC"> there</font>

306
00:12:28,630 --> 00:12:33,220
<font color="#E5E5E5">are other things</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> want to set</font>

307
00:12:30,490 --> 00:12:36,100
about<font color="#E5E5E5"> this is the synchronous mode</font>

308
00:12:33,220 --> 00:12:38,350
options that you can<font color="#E5E5E5"> again you can set</font>

309
00:12:36,100 --> 00:12:40,470
it on<font color="#E5E5E5"> a per transaction basis</font><font color="#CCCCCC"> where we</font>

310
00:12:38,350 --> 00:12:44,230
<font color="#CCCCCC">have the ability to set it to a</font><font color="#E5E5E5"> local or</font>

311
00:12:40,470 --> 00:12:45,910
remote apply if you said that actually

312
00:12:44,230 --> 00:12:49,030
<font color="#E5E5E5">means that your transaction will also</font>

313
00:12:45,910 --> 00:12:51,370
become locally<font color="#E5E5E5"> asynchronous so if your</font>

314
00:12:49,030 --> 00:12:53,350
primary crashes and<font color="#CCCCCC"> general just reboots</font>

315
00:12:51,370 --> 00:12:56,320
or<font color="#E5E5E5"> something you may actually lose your</font>

316
00:12:53,350 --> 00:13:00,610
<font color="#CCCCCC">very last transaction that is running in</font>

317
00:12:56,320 --> 00:13:02,860
completely<font color="#E5E5E5"> asynchronous mode</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> will</font>

318
00:13:00,610 --> 00:13:04,930
still guarantee consistency on your

319
00:13:02,860 --> 00:13:07,710
database it'll guarantee you know

320
00:13:04,930 --> 00:13:10,859
everything else except that<font color="#E5E5E5"> you may know</font>

321
00:13:07,710 --> 00:13:13,370
by default<font color="#E5E5E5"> about quarter</font><font color="#CCCCCC"> of a second</font>

322
00:13:10,860 --> 00:13:15,480
<font color="#E5E5E5">worth of transaction worst case</font>

323
00:13:13,370 --> 00:13:18,630
<font color="#E5E5E5">obviously that's tunable but something</font>

324
00:13:15,480 --> 00:13:21,120
in that area<font color="#E5E5E5"> if you set</font><font color="#CCCCCC"> it in local</font><font color="#E5E5E5"> that</font>

325
00:13:18,630 --> 00:13:23,310
makes you get your sort<font color="#E5E5E5"> of traditional</font>

326
00:13:21,120 --> 00:13:24,950
asynchronous replication<font color="#CCCCCC"> today is</font>

327
00:13:23,310 --> 00:13:28,410
<font color="#E5E5E5">written synchronously to the local disk</font>

328
00:13:24,950 --> 00:13:30,840
<font color="#CCCCCC">but</font><font color="#E5E5E5"> it's sent asynchronously over to</font>

329
00:13:28,410 --> 00:13:35,339
your standby<font color="#E5E5E5"> switch can be one or</font><font color="#CCCCCC"> twenty</font>

330
00:13:30,840 --> 00:13:38,070
or<font color="#E5E5E5"> a hundred</font><font color="#CCCCCC"> decided to earn then Perez</font>

331
00:13:35,340 --> 00:13:41,640
will replicate the data and when you

332
00:13:38,070 --> 00:13:43,110
commit<font color="#E5E5E5"> coordination happens at the</font>

333
00:13:41,640 --> 00:13:46,860
commit level when you commit on your

334
00:13:43,110 --> 00:13:49,410
master<font color="#CCCCCC"> then the data or the transaction</font>

335
00:13:46,860 --> 00:13:53,060
would<font color="#E5E5E5"> lick until the data has been sent</font>

336
00:13:49,410 --> 00:13:54,930
and written to disk and the standby and

337
00:13:53,060 --> 00:13:57,209
<font color="#CCCCCC">asynchronous mode we wait for one</font>

338
00:13:54,930 --> 00:14:00,540
<font color="#CCCCCC">stander if you have</font><font color="#E5E5E5"> ten standbys will</font>

339
00:13:57,210 --> 00:14:02,550
wait for the fastest one of them and

340
00:14:00,540 --> 00:14:05,280
finally you can also<font color="#E5E5E5"> say</font><font color="#CCCCCC"> analytical</font>

341
00:14:02,550 --> 00:14:08,250
remote<font color="#CCCCCC"> apply where we answer wait for</font>

342
00:14:05,280 --> 00:14:10,920
the<font color="#E5E5E5"> database understand by node to have</font>

343
00:14:08,250 --> 00:14:12,450
completed the crash<font color="#CCCCCC"> recovery of this</font>

344
00:14:10,920 --> 00:14:15,930
transaction so that<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> actually</font>

345
00:14:12,450 --> 00:14:17,580
<font color="#CCCCCC">visible inside</font><font color="#E5E5E5"> of that database because</font>

346
00:14:15,930 --> 00:14:19,739
<font color="#E5E5E5">of these standby nodes you</font><font color="#CCCCCC"> can still</font>

347
00:14:17,580 --> 00:14:22,110
open transactions this<font color="#E5E5E5"> time denotes a</font>

348
00:14:19,740 --> 00:14:24,720
<font color="#E5E5E5">read-only but you can open transactions</font>

349
00:14:22,110 --> 00:14:25,740
you<font color="#CCCCCC"> can get</font><font color="#E5E5E5"> MVCC snapshots across all</font>

350
00:14:24,720 --> 00:14:28,680
your table so<font color="#E5E5E5"> you may have queries</font>

351
00:14:25,740 --> 00:14:29,730
running on old<font color="#E5E5E5"> data</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> things on this</font>

352
00:14:28,680 --> 00:14:32,339
town<font color="#E5E5E5"> but so we use them</font><font color="#CCCCCC"> for many</font>

353
00:14:29,730 --> 00:14:34,020
<font color="#CCCCCC">different things and obviously</font><font color="#E5E5E5"> the</font>

354
00:14:32,340 --> 00:14:37,110
further down the<font color="#CCCCCC"> line at</font><font color="#E5E5E5"> least you go</font>

355
00:14:34,020 --> 00:14:40,170
the lower<font color="#E5E5E5"> things will be but the more</font>

356
00:14:37,110 --> 00:14:40,680
guarantees you have in the<font color="#E5E5E5"> event</font><font color="#CCCCCC"> /</font>

357
00:14:40,170 --> 00:14:45,990
failover

358
00:14:40,680 --> 00:14:48,630
of your replication<font color="#E5E5E5"> system and we</font><font color="#CCCCCC"> had</font>

359
00:14:45,990 --> 00:14:51,660
the three<font color="#CCCCCC"> different methods that we can</font>

360
00:14:48,630 --> 00:14:52,980
do synchronous and the simplest way

361
00:14:51,660 --> 00:14:54,900
you've<font color="#CCCCCC"> set a parameter called</font>

362
00:14:52,980 --> 00:14:58,530
synchronous time by name and<font color="#E5E5E5"> you list</font>

363
00:14:54,900 --> 00:15:01,470
the names of<font color="#CCCCCC"> your standards in</font><font color="#E5E5E5"> this case</font>

364
00:14:58,530 --> 00:15:02,060
I have just s1 s2 and<font color="#E5E5E5"> s3 as soon as</font>

365
00:15:01,470 --> 00:15:04,250
<font color="#E5E5E5">anyone</font>

366
00:15:02,060 --> 00:15:06,859
these<font color="#E5E5E5"> acknowledge that they</font><font color="#CCCCCC"> committed</font>

367
00:15:04,250 --> 00:15:09,260
has reached it your transaction will be

368
00:15:06,860 --> 00:15:11,930
<font color="#E5E5E5">released and the application</font><font color="#CCCCCC"> will keep</font>

369
00:15:09,260 --> 00:15:15,080
moving<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> masternode</font><font color="#E5E5E5"> right this</font>

370
00:15:11,930 --> 00:15:17,689
we've<font color="#E5E5E5"> had since</font><font color="#CCCCCC"> Postgres nine</font><font color="#E5E5E5"> walk</font><font color="#CCCCCC"> the</font>

371
00:15:15,080 --> 00:15:19,460
first<font color="#E5E5E5"> which is the one if you just say</font>

372
00:15:17,690 --> 00:15:21,740
<font color="#E5E5E5">like this it's</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> I'm gonna stop let</font>

373
00:15:19,460 --> 00:15:26,030
me<font color="#E5E5E5"> say in this case two</font><font color="#CCCCCC"> parenthesis one</font>

374
00:15:21,740 --> 00:15:30,170
two three<font color="#E5E5E5"> then</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> wait</font><font color="#CCCCCC"> for s1 and</font><font color="#E5E5E5"> s2 to</font>

375
00:15:26,030 --> 00:15:32,240
finish assuming<font color="#E5E5E5"> that</font><font color="#CCCCCC"> they're online them</font>

376
00:15:30,170 --> 00:15:34,550
go somewhere<font color="#E5E5E5"> safe as to is online then</font>

377
00:15:32,240 --> 00:15:35,900
<font color="#E5E5E5">it'll wait for s1 and s3</font><font color="#CCCCCC"> but it'll</font>

378
00:15:34,550 --> 00:15:40,880
always wait for the<font color="#E5E5E5"> first ones in the</font>

379
00:15:35,900 --> 00:15:42,920
<font color="#E5E5E5">list and then the</font><font color="#CCCCCC"> Koren commit that we</font>

380
00:15:40,880 --> 00:15:45,470
added in<font color="#CCCCCC"> Postgres ten then</font><font color="#E5E5E5"> you set your</font>

381
00:15:42,920 --> 00:15:47,300
<font color="#E5E5E5">synchronous time my name's</font><font color="#CCCCCC"> - only - in</font>

382
00:15:45,470 --> 00:15:50,180
this<font color="#CCCCCC"> case</font><font color="#E5E5E5"> and it will</font><font color="#CCCCCC"> just pick</font>

383
00:15:47,300 --> 00:15:52,819
whichever two of those<font color="#E5E5E5"> are the fastest</font>

384
00:15:50,180 --> 00:15:54,380
one at the moment<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> way you can</font>

385
00:15:52,820 --> 00:15:56,090
<font color="#E5E5E5">say you</font><font color="#CCCCCC"> know you've guaranteed in this</font>

386
00:15:54,380 --> 00:15:58,400
case any<font color="#CCCCCC"> two when we're guaranteed your</font>

387
00:15:56,090 --> 00:16:00,410
transaction<font color="#CCCCCC"> is</font><font color="#E5E5E5"> on the master</font><font color="#CCCCCC"> and on two</font>

388
00:15:58,400 --> 00:16:02,660
of<font color="#CCCCCC"> the stand</font><font color="#E5E5E5"> bytes so if your master</font>

389
00:16:00,410 --> 00:16:06,199
dice you still have your data in<font color="#E5E5E5"> two</font>

390
00:16:02,660 --> 00:16:10,850
places<font color="#E5E5E5"> fully guaranteed</font><font color="#CCCCCC"> at all</font><font color="#E5E5E5"> points</font><font color="#CCCCCC"> of</font>

391
00:16:06,200 --> 00:16:13,490
that and the common themes of these

392
00:16:10,850 --> 00:16:15,440
streaming<font color="#E5E5E5"> replication I would say for</font>

393
00:16:13,490 --> 00:16:17,680
most people who want<font color="#E5E5E5"> to do replication</font>

394
00:16:15,440 --> 00:16:21,500
in Postgres today this is what you do

395
00:16:17,680 --> 00:16:23,540
<font color="#E5E5E5">it's very easy to</font><font color="#CCCCCC"> set up it's pretty</font>

396
00:16:21,500 --> 00:16:27,320
<font color="#E5E5E5">hard to get ready personally I'd</font><font color="#CCCCCC"> like</font>

397
00:16:23,540 --> 00:16:31,010
that in solutions and in particular once

398
00:16:27,320 --> 00:16:33,440
it's working it<font color="#E5E5E5"> doesn't just silently</font>

399
00:16:31,010 --> 00:16:35,390
stop working it's<font color="#E5E5E5"> very easy to monitor</font>

400
00:16:33,440 --> 00:16:37,250
<font color="#E5E5E5">this when you</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> you have to monitor</font>

401
00:16:35,390 --> 00:16:39,170
<font color="#CCCCCC">it we monitor how far behind it is</font>

402
00:16:37,250 --> 00:16:40,640
there's no<font color="#E5E5E5"> way that you can like</font><font color="#CCCCCC"> lose</font>

403
00:16:39,170 --> 00:16:43,550
individual<font color="#E5E5E5"> tables or anything it's</font>

404
00:16:40,640 --> 00:16:46,960
either All or Nothing<font color="#CCCCCC"> it's very</font>

405
00:16:43,550 --> 00:16:49,310
efficient it's very very low overhead

406
00:16:46,960 --> 00:16:50,960
<font color="#E5E5E5">and of course its built-in built-in is</font>

407
00:16:49,310 --> 00:16:53,719
nice we don't have to go download<font color="#CCCCCC"> a</font>

408
00:16:50,960 --> 00:16:55,430
separate package you know<font color="#CCCCCC"> install it</font>

409
00:16:53,720 --> 00:16:56,920
from<font color="#E5E5E5"> whatever repository were using the</font>

410
00:16:55,430 --> 00:16:59,300
things like<font color="#E5E5E5"> that</font>

411
00:16:56,920 --> 00:17:00,620
get me streaming replication working in

412
00:16:59,300 --> 00:17:03,979
a modern<font color="#CCCCCC"> post quest version is</font><font color="#E5E5E5"> really</font>

413
00:17:00,620 --> 00:17:06,849
easy particularly<font color="#E5E5E5"> yen as we do this in</font>

414
00:17:03,980 --> 00:17:06,849
post post version 10

415
00:17:07,310 --> 00:17:10,369
you have your<font color="#CCCCCC"> masternode up and running</font>

416
00:17:09,109 --> 00:17:12,500
already<font color="#E5E5E5"> you want to set up</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> stand</font>

417
00:17:10,369 --> 00:17:15,469
right now<font color="#E5E5E5"> it's basically</font><font color="#CCCCCC"> two commands</font>

418
00:17:12,500 --> 00:17:19,960
first<font color="#E5E5E5"> you run the command PG</font><font color="#CCCCCC"> based</font>

419
00:17:15,470 --> 00:17:22,579
<font color="#CCCCCC">backup which will</font><font color="#E5E5E5"> take a backup of</font><font color="#CCCCCC"> your</font>

420
00:17:19,960 --> 00:17:24,140
master node<font color="#E5E5E5"> so basically we</font><font color="#CCCCCC"> take the</font>

421
00:17:22,579 --> 00:17:26,540
backup<font color="#E5E5E5"> from the master to</font><font color="#CCCCCC"> the standby</font>

422
00:17:24,140 --> 00:17:29,180
<font color="#E5E5E5">and then we</font><font color="#CCCCCC"> provisioned</font>

423
00:17:26,540 --> 00:17:30,080
from there<font color="#E5E5E5"> we'll give the directory just</font>

424
00:17:29,180 --> 00:17:32,390
<font color="#CCCCCC">where we want it</font>

425
00:17:30,080 --> 00:17:36,020
<font color="#CCCCCC">no volume PG SQL or wherever we like to</font>

426
00:17:32,390 --> 00:17:37,100
have it<font color="#CCCCCC"> either the hostname</font><font color="#E5E5E5"> point it to</font>

427
00:17:36,020 --> 00:17:41,180
<font color="#E5E5E5">the</font><font color="#CCCCCC"> primary it could be like the address</font>

428
00:17:37,100 --> 00:17:44,139
<font color="#E5E5E5">or hostname</font><font color="#CCCCCC"> we'll give you the user it</font>

429
00:17:41,180 --> 00:17:47,810
has to live<font color="#CCCCCC"> in for streaming replication</font>

430
00:17:44,140 --> 00:17:49,970
<font color="#E5E5E5">it needs to either be a super user or it</font>

431
00:17:47,810 --> 00:17:53,149
need to be<font color="#E5E5E5"> any user that has the special</font>

432
00:17:49,970 --> 00:17:54,620
replication privilege<font color="#E5E5E5"> which is normally</font>

433
00:17:53,150 --> 00:17:58,190
<font color="#E5E5E5">the recommended one so use a separate</font>

434
00:17:54,620 --> 00:18:01,729
<font color="#E5E5E5">user and</font><font color="#CCCCCC"> that has the privilege to do</font>

435
00:17:58,190 --> 00:18:04,520
replication<font color="#E5E5E5"> then we have the middle</font>

436
00:18:01,730 --> 00:18:05,720
switch -<font color="#CCCCCC"> R which says this is not</font>

437
00:18:04,520 --> 00:18:07,520
actually going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be a backup</font><font color="#CCCCCC"> this is</font>

438
00:18:05,720 --> 00:18:09,020
going to be a replica<font color="#CCCCCC"> and then the</font>

439
00:18:07,520 --> 00:18:12,620
system<font color="#E5E5E5"> will automatically provision the</font>

440
00:18:09,020 --> 00:18:19,430
configuration file<font color="#E5E5E5"> that sets it up as a</font>

441
00:18:12,620 --> 00:18:22,070
replica replication<font color="#CCCCCC"> slipped to make sure</font>

442
00:18:19,430 --> 00:18:24,800
that the<font color="#E5E5E5"> that's the basically</font>

443
00:18:22,070 --> 00:18:26,510
registering their<font color="#E5E5E5"> standby now with the</font>

444
00:18:24,800 --> 00:18:28,159
master so<font color="#CCCCCC"> that the master doesn't</font><font color="#E5E5E5"> delete</font>

445
00:18:26,510 --> 00:18:30,170
data that the standby<font color="#CCCCCC"> no</font><font color="#E5E5E5"> it still needs</font>

446
00:18:28,160 --> 00:18:32,510
if it<font color="#E5E5E5"> fails behind you know if you're</font>

447
00:18:30,170 --> 00:18:35,150
<font color="#CCCCCC">loose</font><font color="#E5E5E5"> the network or reboot the standby</font>

448
00:18:32,510 --> 00:18:36,770
or something like<font color="#E5E5E5"> that and</font><font color="#CCCCCC"> then you can</font>

449
00:18:35,150 --> 00:18:39,140
<font color="#CCCCCC">either loot that P thing in the</font><font color="#E5E5E5"> end</font>

450
00:18:36,770 --> 00:18:40,879
<font color="#CCCCCC">there which</font><font color="#E5E5E5"> is just get a progress</font>

451
00:18:39,140 --> 00:18:42,170
<font color="#E5E5E5">report if you database is big if this</font>

452
00:18:40,880 --> 00:18:44,930
thing runs<font color="#E5E5E5"> for a couple of hours</font><font color="#CCCCCC"> it's</font>

453
00:18:42,170 --> 00:18:47,270
nice to see how far along it<font color="#E5E5E5"> is and then</font>

454
00:18:44,930 --> 00:18:51,350
<font color="#E5E5E5">you don't have to just start this box on</font>

455
00:18:47,270 --> 00:18:53,410
the stand I know when you're done<font color="#E5E5E5"> if you</font>

456
00:18:51,350 --> 00:18:58,429
are<font color="#CCCCCC"> using Postgres prior to version 10</font>

457
00:18:53,410 --> 00:19:00,380
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> also add to this - extreme so</font>

458
00:18:58,430 --> 00:19:01,970
that your replica<font color="#E5E5E5"> doesn't feel so far</font>

459
00:19:00,380 --> 00:19:04,760
behind<font color="#E5E5E5"> before it gets started</font><font color="#CCCCCC"> that it</font>

460
00:19:01,970 --> 00:19:06,250
never actually starts<font color="#E5E5E5"> this can otherwise</font>

461
00:19:04,760 --> 00:19:08,140
<font color="#CCCCCC">be an option</font>

462
00:19:06,250 --> 00:19:10,720
if you're running<font color="#E5E5E5"> it on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> very active</font>

463
00:19:08,140 --> 00:19:12,159
<font color="#E5E5E5">database</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not necessary in</font>

464
00:19:10,720 --> 00:19:15,220
<font color="#CCCCCC">posters version 10 because it's been</font>

465
00:19:12,159 --> 00:19:18,010
changed<font color="#CCCCCC"> to be the default but on</font>

466
00:19:15,220 --> 00:19:21,220
previous<font color="#E5E5E5"> versions add a</font><font color="#CCCCCC"> dash extreme and</font>

467
00:19:18,010 --> 00:19:23,620
<font color="#CCCCCC">that's pretty much it it basically</font><font color="#E5E5E5"> sets</font>

468
00:19:21,220 --> 00:19:25,720
it up<font color="#E5E5E5"> to start replicating before it</font>

469
00:19:23,620 --> 00:19:28,090
finishes<font color="#CCCCCC"> the</font><font color="#E5E5E5"> backup it's not replicated</font>

470
00:19:25,720 --> 00:19:30,669
immediately so<font color="#E5E5E5"> that it doesn't</font><font color="#CCCCCC"> feel</font><font color="#E5E5E5"> so</font>

471
00:19:28,090 --> 00:19:39,158
far<font color="#E5E5E5"> behind</font><font color="#CCCCCC"> that it might not</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to</font>

472
00:19:30,669 --> 00:19:41,860
<font color="#CCCCCC">catch up its architecture and</font><font color="#E5E5E5"> compile</font>

473
00:19:39,159 --> 00:19:44,110
flight<font color="#CCCCCC"> dependent so you can't freely</font><font color="#E5E5E5"> mix</font>

474
00:19:41,860 --> 00:19:46,570
different<font color="#CCCCCC"> compilation suppose squares</font>

475
00:19:44,110 --> 00:19:51,428
different platforms<font color="#E5E5E5"> like you know</font>

476
00:19:46,570 --> 00:19:53,649
between<font color="#CCCCCC"> SPARC and</font><font color="#E5E5E5"> Intel or Windows and</font>

477
00:19:51,429 --> 00:19:56,710
Linux<font color="#E5E5E5"> which kind of works but it's not</font>

478
00:19:53,650 --> 00:19:58,120
<font color="#E5E5E5">really supported</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> whole cluster only</font>

479
00:19:56,710 --> 00:20:00,429
which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the thing that bites most</font>

480
00:19:58,120 --> 00:20:02,530
people right<font color="#E5E5E5"> if you have</font><font color="#CCCCCC"> ten databases</font>

481
00:20:00,429 --> 00:20:04,270
you<font color="#CCCCCC"> have to replicate</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> them it's</font>

482
00:20:02,530 --> 00:20:06,190
the entire<font color="#E5E5E5"> cluster</font><font color="#CCCCCC"> all of them</font><font color="#E5E5E5"> are being</font>

483
00:20:04,270 --> 00:20:09,010
replicated and your standby node is

484
00:20:06,190 --> 00:20:10,419
completely read-only<font color="#E5E5E5"> you can't write</font>

485
00:20:09,010 --> 00:20:11,730
anything on it you can<font color="#E5E5E5"> even create</font>

486
00:20:10,419 --> 00:20:14,380
<font color="#E5E5E5">temporary tables on it</font>

487
00:20:11,730 --> 00:20:17,080
basically the standby node does not<font color="#E5E5E5"> have</font>

488
00:20:14,380 --> 00:20:18,490
its own transaction log so any operation

489
00:20:17,080 --> 00:20:23,830
within the system that<font color="#E5E5E5"> generates</font>

490
00:20:18,490 --> 00:20:25,780
transaction log will just fail and is

491
00:20:23,830 --> 00:20:29,139
primary to<font color="#CCCCCC"> standby only</font><font color="#E5E5E5"> like you can</font>

492
00:20:25,780 --> 00:20:31,658
only replicate in one direction but this

493
00:20:29,140 --> 00:20:33,070
is usually not<font color="#CCCCCC"> a problem</font><font color="#E5E5E5"> if the problem</font>

494
00:20:31,659 --> 00:20:35,590
you're<font color="#E5E5E5"> trying to solve this availability</font>

495
00:20:33,070 --> 00:20:37,870
right<font color="#E5E5E5"> if you're replicating to gain high</font>

496
00:20:35,590 --> 00:20:39,250
<font color="#E5E5E5">availability in your system then</font><font color="#CCCCCC"> you're</font>

497
00:20:37,870 --> 00:20:41,620
<font color="#E5E5E5">probably gonna replicate between</font>

498
00:20:39,250 --> 00:20:43,059
machines that are roughly equal they're

499
00:20:41,620 --> 00:20:44,260
going to be running the same thing if

500
00:20:43,059 --> 00:20:45,908
you're running<font color="#CCCCCC"> Red Hat</font><font color="#E5E5E5"> from your primary</font>

501
00:20:44,260 --> 00:20:48,190
you probably<font color="#E5E5E5"> gonna be running Red Hat on</font>

502
00:20:45,909 --> 00:20:49,179
<font color="#E5E5E5">your standby</font><font color="#CCCCCC"> you know for consistency</font>

503
00:20:48,190 --> 00:20:50,500
and<font color="#E5E5E5"> things like that you're going to be</font>

504
00:20:49,179 --> 00:20:51,909
running<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> same platforms and things</font>

505
00:20:50,500 --> 00:20:54,640
<font color="#E5E5E5">like that but there are other cases</font>

506
00:20:51,909 --> 00:20:56,530
<font color="#E5E5E5">where it can be a problem of</font><font color="#CCCCCC"> course</font>

507
00:20:54,640 --> 00:20:58,360
<font color="#CCCCCC">there are student educational posters</font>

508
00:20:56,530 --> 00:21:01,450
does not come with built-in cluster

509
00:20:58,360 --> 00:21:02,939
management<font color="#CCCCCC"> so no manual</font>

510
00:21:01,450 --> 00:21:06,560
<font color="#E5E5E5">over</font><font color="#CCCCCC"> no</font>

511
00:21:02,940 --> 00:21:09,270
<font color="#E5E5E5">over just provides the infrastructure</font>

512
00:21:06,560 --> 00:21:11,970
<font color="#CCCCCC">you can build a federal solution on top</font>

513
00:21:09,270 --> 00:21:14,129
<font color="#CCCCCC">of it all the plumbing is there</font><font color="#E5E5E5"> or the</font>

514
00:21:11,970 --> 00:21:16,800
API<font color="#CCCCCC"> so</font><font color="#E5E5E5"> there or the monitoring is there</font>

515
00:21:14,130 --> 00:21:20,340
but it's not<font color="#E5E5E5"> shipped and in there and in</font>

516
00:21:16,800 --> 00:21:23,760
doesn't support<font color="#E5E5E5"> they are back well it</font>

517
00:21:20,340 --> 00:21:24,720
isn't easy<font color="#E5E5E5"> fail back particularly if</font>

518
00:21:23,760 --> 00:21:26,250
you're trying<font color="#E5E5E5"> to build these things</font>

519
00:21:24,720 --> 00:21:28,530
<font color="#CCCCCC">yourself there are</font><font color="#E5E5E5"> some very complicated</font>

520
00:21:26,250 --> 00:21:30,620
cases because this is the replication

521
00:21:28,530 --> 00:21:33,870
<font color="#E5E5E5">for example happens that</font><font color="#CCCCCC"> commit level</font>

522
00:21:30,620 --> 00:21:35,820
even as<font color="#CCCCCC"> a master might be ahead of a</font>

523
00:21:33,870 --> 00:21:37,739
<font color="#E5E5E5">standby even if they're in synchronous</font>

524
00:21:35,820 --> 00:21:39,870
<font color="#E5E5E5">because there might be uncommitted data</font>

525
00:21:37,740 --> 00:21:41,790
and we can't control<font color="#E5E5E5"> where we fail</font>

526
00:21:39,870 --> 00:21:42,179
<font color="#E5E5E5">that's kind of the</font><font color="#CCCCCC"> hole then it's not</font><font color="#E5E5E5"> a</font>

527
00:21:41,790 --> 00:21:44,220
failure

528
00:21:42,180 --> 00:21:46,260
really<font color="#E5E5E5"> so it's really</font><font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> get</font>

529
00:21:44,220 --> 00:21:49,320
<font color="#E5E5E5">started</font><font color="#CCCCCC"> but if you want to build</font><font color="#E5E5E5"> really</font>

530
00:21:46,260 --> 00:21:51,060
<font color="#E5E5E5">high availability on top of it it can be</font>

531
00:21:49,320 --> 00:21:53,070
a bit harder<font color="#CCCCCC"> to be maintained of course</font>

532
00:21:51,060 --> 00:21:55,080
<font color="#E5E5E5">that's where we can turn to these</font>

533
00:21:53,070 --> 00:21:56,730
outside<font color="#E5E5E5"> support projects there are</font>

534
00:21:55,080 --> 00:22:00,120
cluster management solutions for<font color="#E5E5E5"> pulse</font>

535
00:21:56,730 --> 00:22:01,470
<font color="#CCCCCC">bars</font><font color="#E5E5E5"> they're just not built that there</font>

536
00:22:00,120 --> 00:22:02,969
are a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> good ones</font><font color="#CCCCCC"> that I would</font>

537
00:22:01,470 --> 00:22:06,390
<font color="#CCCCCC">say are</font><font color="#E5E5E5"> the ones</font><font color="#CCCCCC"> that you should</font>

538
00:22:02,970 --> 00:22:08,360
<font color="#E5E5E5">evaluate today there is a management</font>

539
00:22:06,390 --> 00:22:11,640
tool called<font color="#E5E5E5"> Petrelli</font>

540
00:22:08,360 --> 00:22:12,750
it's designed to be automatic<font color="#E5E5E5"> from round</font>

541
00:22:11,640 --> 00:22:14,820
up there are some others that<font color="#CCCCCC"> were</font>

542
00:22:12,750 --> 00:22:17,400
designed initially to<font color="#E5E5E5"> be manual and I'm</font>

543
00:22:14,820 --> 00:22:20,070
sort of upgraded patron is designed for

544
00:22:17,400 --> 00:22:23,100
automatic failover management<font color="#CCCCCC"> pectin I</font>

545
00:22:20,070 --> 00:22:24,379
did pretty<font color="#E5E5E5"> much everything it uses it</font>

546
00:22:23,100 --> 00:22:27,030
can plug into multiple different

547
00:22:24,380 --> 00:22:29,850
consensus<font color="#E5E5E5"> stores it can use at CD it can</font>

548
00:22:27,030 --> 00:22:31,980
use zookeeper<font color="#CCCCCC"> it give console I believe</font>

549
00:22:29,850 --> 00:22:33,510
the<font color="#E5E5E5"> latest version which I think it's</font>

550
00:22:31,980 --> 00:22:37,080
out now<font color="#CCCCCC"> can actually run without</font><font color="#E5E5E5"> an</font>

551
00:22:33,510 --> 00:22:38,760
external<font color="#E5E5E5"> one as well and it</font><font color="#CCCCCC"> has nice</font>

552
00:22:37,080 --> 00:22:40,679
plugins<font color="#CCCCCC"> to for example</font><font color="#E5E5E5"> ships with</font>

553
00:22:38,760 --> 00:22:43,290
patterns for integrating with<font color="#CCCCCC"> a CH a</font>

554
00:22:40,680 --> 00:22:45,180
proxy so you just<font color="#E5E5E5"> you point your</font>

555
00:22:43,290 --> 00:22:47,220
application at an H a proxy and<font color="#CCCCCC"> Patroni</font>

556
00:22:45,180 --> 00:22:48,350
will control your<font color="#E5E5E5"> postcards nodes it</font>

557
00:22:47,220 --> 00:22:50,260
will control your H

558
00:22:48,350 --> 00:22:53,149
<font color="#CCCCCC">see and you know</font><font color="#E5E5E5"> everything just works</font>

559
00:22:50,260 --> 00:22:55,309
well until it doesn't of<font color="#CCCCCC"> course that's</font>

560
00:22:53,150 --> 00:22:56,539
<font color="#E5E5E5">true of every solution but</font><font color="#CCCCCC"> Patroni works</font>

561
00:22:55,309 --> 00:22:59,480
pretty well

562
00:22:56,539 --> 00:23:02,990
and it's by now<font color="#E5E5E5"> I'd say it's a very well</font>

563
00:22:59,480 --> 00:23:05,270
tested solution the other<font color="#CCCCCC"> reaction</font><font color="#E5E5E5"> that</font>

564
00:23:02,990 --> 00:23:08,299
we<font color="#E5E5E5"> have in the</font><font color="#CCCCCC"> postcode for</font><font color="#E5E5E5"> today's in</font>

565
00:23:05,270 --> 00:23:09,679
who called web manager or web MGR this

566
00:23:08,299 --> 00:23:12,918
is one<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those that</font><font color="#E5E5E5"> was originally</font>

567
00:23:09,679 --> 00:23:15,860
designed<font color="#E5E5E5"> to handle replication clusters</font>

568
00:23:12,919 --> 00:23:18,530
<font color="#E5E5E5">but with manual and has later learned to</font>

569
00:23:15,860 --> 00:23:22,039
do<font color="#CCCCCC"> automatic failover and</font><font color="#E5E5E5"> things as well</font>

570
00:23:18,530 --> 00:23:24,168
I found it traditionally it's easier to

571
00:23:22,039 --> 00:23:26,030
use<font color="#E5E5E5"> than</font><font color="#CCCCCC"> Petronio when it comes to</font>

572
00:23:24,169 --> 00:23:27,730
dealing with manual<font color="#CCCCCC"> Louis</font><font color="#E5E5E5"> because</font>

573
00:23:26,030 --> 00:23:30,110
<font color="#CCCCCC">Patroni wasn't really defined</font><font color="#E5E5E5"> to do that</font>

574
00:23:27,730 --> 00:23:31,820
so if you want to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> that and I mean we</font>

575
00:23:30,110 --> 00:23:33,110
can spend a whole<font color="#CCCCCC"> other talk</font><font color="#E5E5E5"> just</font>

576
00:23:31,820 --> 00:23:34,189
discussing<font color="#E5E5E5"> about whether automatic</font>

577
00:23:33,110 --> 00:23:36,979
failover is actually<font color="#E5E5E5"> a good or a bad</font>

578
00:23:34,190 --> 00:23:39,860
<font color="#CCCCCC">thing that will depend on</font><font color="#E5E5E5"> your situation</font>

579
00:23:36,980 --> 00:23:42,080
<font color="#E5E5E5">so let me do that now</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> manager is</font>

580
00:23:39,860 --> 00:23:44,418
capable of doing both<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> it doesn't</font>

581
00:23:42,080 --> 00:23:46,908
<font color="#CCCCCC">handle connection management</font><font color="#E5E5E5"> in itself</font>

582
00:23:44,419 --> 00:23:48,770
<font color="#E5E5E5">it has my plugins where you can have it</font>

583
00:23:46,909 --> 00:23:51,049
run external commands<font color="#E5E5E5"> to you know</font>

584
00:23:48,770 --> 00:23:53,059
reconfigure things<font color="#E5E5E5"> you can still use</font><font color="#CCCCCC"> it</font>

585
00:23:51,049 --> 00:23:55,610
with things like<font color="#E5E5E5"> H a proxy and just</font><font color="#CCCCCC"> a H</font>

586
00:23:53,059 --> 00:23:58,250
a proxy pulled<font color="#E5E5E5"> your database make sure</font>

587
00:23:55,610 --> 00:24:01,219
<font color="#E5E5E5">it works but it can take a little bit</font>

588
00:23:58,250 --> 00:24:03,080
more integration<font color="#E5E5E5"> for those things</font><font color="#CCCCCC"> but</font>

589
00:24:01,220 --> 00:24:05,960
<font color="#E5E5E5">the advantage is that of course is you</font>

590
00:24:03,080 --> 00:24:12,260
gain a little<font color="#E5E5E5"> bit more flexibility when</font>

591
00:24:05,960 --> 00:24:14,650
<font color="#E5E5E5">it comes</font><font color="#CCCCCC"> to those things I think</font><font color="#E5E5E5"> it's</font>

592
00:24:12,260 --> 00:24:17,000
the<font color="#E5E5E5"> Postgres automatic failover</font><font color="#CCCCCC"> it's</font>

593
00:24:14,650 --> 00:24:18,770
resource agents and configurations and

594
00:24:17,000 --> 00:24:23,510
plugins if you're using a pacemaker in

595
00:24:18,770 --> 00:24:24,740
<font color="#E5E5E5">course Inc</font><font color="#CCCCCC"> one of the strong points of</font>

596
00:24:23,510 --> 00:24:26,450
that one is<font color="#CCCCCC"> throughout if you're using</font>

597
00:24:24,740 --> 00:24:29,090
pacemaker<font color="#CCCCCC"> coursing to manage other</font>

598
00:24:26,450 --> 00:24:31,580
things in<font color="#E5E5E5"> your organization other types</font>

599
00:24:29,090 --> 00:24:33,110
of H a<font color="#E5E5E5"> clusters then it's the</font>

600
00:24:31,580 --> 00:24:34,879
configuration is obviously very similar

601
00:24:33,110 --> 00:24:39,199
it's something that your operations

602
00:24:34,880 --> 00:24:40,850
people<font color="#E5E5E5"> will be comfortable with and used</font>

603
00:24:39,200 --> 00:24:42,710
in things like<font color="#E5E5E5"> that and the traditional</font>

604
00:24:40,850 --> 00:24:45,379
<font color="#CCCCCC">way to</font><font color="#E5E5E5"> set up here is well you set up a</font>

605
00:24:42,710 --> 00:24:46,669
virtual IP and the<font color="#E5E5E5"> pacemaker</font><font color="#CCCCCC"> core sync</font>

606
00:24:45,380 --> 00:24:49,039
combination will

607
00:24:46,669 --> 00:24:50,929
the virtual IP as necessary<font color="#CCCCCC"> to whichever</font>

608
00:24:49,039 --> 00:24:53,389
node<font color="#CCCCCC"> happens to</font><font color="#E5E5E5"> to be the master node</font>

609
00:24:50,929 --> 00:24:55,669
<font color="#CCCCCC">again and the end though</font><font color="#E5E5E5"> it's called</font>

610
00:24:53,389 --> 00:24:58,998
<font color="#CCCCCC">Postgres automatic failover its focus is</font>

611
00:24:55,669 --> 00:25:03,289
doing manual failover of course or<font color="#CCCCCC"> maybe</font>

612
00:24:58,999 --> 00:25:04,970
automatic so if you need<font color="#E5E5E5"> to build</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> high</font>

613
00:25:03,289 --> 00:25:06,379
availability cluster these are all very

614
00:25:04,970 --> 00:25:09,109
good<font color="#E5E5E5"> options there</font><font color="#CCCCCC"> also many options out</font>

615
00:25:06,379 --> 00:25:10,689
<font color="#E5E5E5">there as well</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> today these are sort</font>

616
00:25:09,109 --> 00:25:14,239
of the<font color="#E5E5E5"> main options</font><font color="#CCCCCC"> that you will find</font>

617
00:25:10,690 --> 00:25:17,480
throughout the Postgres world so if we

618
00:25:14,239 --> 00:25:19,190
keep moving<font color="#E5E5E5"> up the stack database</font>

619
00:25:17,480 --> 00:25:22,039
logical<font color="#E5E5E5"> replication is the next level</font>

620
00:25:19,190 --> 00:25:24,440
<font color="#CCCCCC">right this is the many of you</font><font color="#E5E5E5"> probably</font>

621
00:25:22,039 --> 00:25:26,059
<font color="#E5E5E5">know</font><font color="#CCCCCC"> it's new in postcode version</font><font color="#E5E5E5"> 10 we</font>

622
00:25:24,440 --> 00:25:28,399
actually<font color="#E5E5E5"> added a lot of</font><font color="#CCCCCC"> the</font>

623
00:25:26,059 --> 00:25:30,529
infrastructure already in<font color="#CCCCCC"> nine point</font>

624
00:25:28,399 --> 00:25:33,080
<font color="#CCCCCC">four with</font><font color="#E5E5E5"> something called logical</font>

625
00:25:30,529 --> 00:25:35,960
decoding and then it's been built and

626
00:25:33,080 --> 00:25:37,869
<font color="#CCCCCC">that up until prospers version 10 which</font>

627
00:25:35,960 --> 00:25:41,059
is<font color="#E5E5E5"> the first version</font><font color="#CCCCCC"> that released with</font>

628
00:25:37,869 --> 00:25:45,289
<font color="#E5E5E5">built in actual replication sitting on</font>

629
00:25:41,059 --> 00:25:47,450
<font color="#E5E5E5">top of</font><font color="#CCCCCC"> this now this</font><font color="#E5E5E5"> to piggyback on the</font>

630
00:25:45,289 --> 00:25:48,799
<font color="#CCCCCC">right a headlock</font><font color="#E5E5E5"> right it still sits in</font>

631
00:25:47,450 --> 00:25:52,549
the transaction log which means it's

632
00:25:48,799 --> 00:25:53,989
still<font color="#E5E5E5"> very low overhead it's a little</font>

633
00:25:52,549 --> 00:25:56,749
bit more overhead than your physical

634
00:25:53,989 --> 00:25:58,759
<font color="#E5E5E5">application that much from a performance</font>

635
00:25:56,749 --> 00:26:00,820
perspective<font color="#E5E5E5"> it can be a lot</font><font color="#CCCCCC"> more</font>

636
00:25:58,759 --> 00:26:03,350
<font color="#E5E5E5">overhead from a management perspective</font>

637
00:26:00,820 --> 00:26:05,689
<font color="#E5E5E5">but since it's in the transaction</font><font color="#CCCCCC"> length</font>

638
00:26:03,350 --> 00:26:10,459
when we just change instead<font color="#E5E5E5"> of saying my</font>

639
00:26:05,690 --> 00:26:12,440
level<font color="#CCCCCC"> replicas we move to a level logic</font>

640
00:26:10,460 --> 00:26:15,139
of<font color="#E5E5E5"> application it's very much that</font>

641
00:26:12,440 --> 00:26:18,710
<font color="#CCCCCC">simple</font><font color="#E5E5E5"> then you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to set up</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> few</font>

642
00:26:15,139 --> 00:26:20,658
things<font color="#CCCCCC"> many logical application works is</font>

643
00:26:18,710 --> 00:26:23,149
it reconstructs<font color="#CCCCCC"> the changes on a per</font>

644
00:26:20,659 --> 00:26:25,580
<font color="#E5E5E5">roll basis so it's not one of those</font>

645
00:26:23,149 --> 00:26:27,649
<font color="#E5E5E5">solutions that actually</font><font color="#CCCCCC"> replicates</font><font color="#E5E5E5"> your</font>

646
00:26:25,580 --> 00:26:29,928
SQL statements and runs<font color="#E5E5E5"> them again on a</font>

647
00:26:27,649 --> 00:26:32,809
master but instead of<font color="#E5E5E5"> just</font><font color="#CCCCCC"> sending the</font>

648
00:26:29,929 --> 00:26:34,429
binary differences they send the logical

649
00:26:32,809 --> 00:26:38,690
<font color="#E5E5E5">differences saying well I replace the</font>

650
00:26:34,429 --> 00:26:41,779
row that's identified<font color="#E5E5E5"> by this with this</font>

651
00:26:38,690 --> 00:26:46,580
new content<font color="#E5E5E5"> and</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> it on an individual</font>

652
00:26:41,779 --> 00:26:47,840
basis it's still fully transactional so

653
00:26:46,580 --> 00:26:50,869
it's still<font color="#E5E5E5"> integrating without and</font>

654
00:26:47,840 --> 00:26:52,939
<font color="#E5E5E5">that's one of</font><font color="#CCCCCC"> the main reasons why it</font>

655
00:26:50,869 --> 00:26:54,709
can use or one of the good reasons<font color="#E5E5E5"> it</font>

656
00:26:52,940 --> 00:26:56,869
uses the while to make<font color="#E5E5E5"> sure that that's</font>

657
00:26:54,710 --> 00:26:57,180
where you have<font color="#E5E5E5"> your commits and it can</font>

658
00:26:56,869 --> 00:27:00,540
trigger

659
00:26:57,180 --> 00:27:02,640
things<font color="#E5E5E5"> directly on the commits now being</font>

660
00:27:00,540 --> 00:27:04,860
<font color="#E5E5E5">on a very basis instead of being binary</font>

661
00:27:02,640 --> 00:27:06,660
across the whole cluster<font color="#E5E5E5"> means that you</font>

662
00:27:04,860 --> 00:27:08,669
can do table level<font color="#E5E5E5"> partial replication</font>

663
00:27:06,660 --> 00:27:10,920
<font color="#CCCCCC">you don't</font><font color="#E5E5E5"> have to replicate everything</font>

664
00:27:08,670 --> 00:27:14,040
<font color="#CCCCCC">anymore</font><font color="#E5E5E5"> you can say I just</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> get</font>

665
00:27:10,920 --> 00:27:17,090
this one<font color="#E5E5E5"> table over here and you can</font>

666
00:27:14,040 --> 00:27:19,200
<font color="#CCCCCC">also</font><font color="#E5E5E5"> pretty easily do</font><font color="#CCCCCC"> parameter table</font>

667
00:27:17,090 --> 00:27:20,820
<font color="#CCCCCC">bi-directional replication it's still</font>

668
00:27:19,200 --> 00:27:23,250
easy if you say this table is<font color="#CCCCCC"> gonna</font>

669
00:27:20,820 --> 00:27:24,899
<font color="#E5E5E5">replicate from node 1 to node 2 and this</font>

670
00:27:23,250 --> 00:27:28,190
other table<font color="#E5E5E5"> is going to replicate from</font>

671
00:27:24,900 --> 00:27:31,560
node 2 to node 1 but we might have a

672
00:27:28,190 --> 00:27:33,810
master node for<font color="#CCCCCC"> each customer depending</font>

673
00:27:31,560 --> 00:27:36,600
on<font color="#CCCCCC"> location and</font><font color="#E5E5E5"> we just replicate them</font>

674
00:27:33,810 --> 00:27:38,340
in two<font color="#E5E5E5"> different ways</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we have a</font>

675
00:27:36,600 --> 00:27:40,050
view on<font color="#E5E5E5"> top of it or it can be</font>

676
00:27:38,340 --> 00:27:42,300
partitions<font color="#E5E5E5"> or something like that which</font>

677
00:27:40,050 --> 00:27:44,520
the application works<font color="#E5E5E5"> so many scenarios</font>

678
00:27:42,300 --> 00:27:47,000
were actually just being<font color="#E5E5E5"> able to do</font>

679
00:27:44,520 --> 00:27:51,210
table level<font color="#CCCCCC"> bi-directional replication</font>

680
00:27:47,000 --> 00:27:53,490
can be really<font color="#E5E5E5"> really useful</font><font color="#CCCCCC"> and educate</font>

681
00:27:51,210 --> 00:27:56,330
replication is slightly more complex

682
00:27:53,490 --> 00:27:59,310
than to set up than it is to set up

683
00:27:56,330 --> 00:28:06,840
<font color="#E5E5E5">physical streaming application but it is</font>

684
00:27:59,310 --> 00:28:08,780
still<font color="#E5E5E5"> very</font><font color="#CCCCCC"> simple which will then be</font>

685
00:28:06,840 --> 00:28:12,330
master node for this particular table

686
00:28:08,780 --> 00:28:14,820
<font color="#E5E5E5">you create the table every table has to</font>

687
00:28:12,330 --> 00:28:16,679
be<font color="#E5E5E5"> identified in this case if your table</font>

688
00:28:14,820 --> 00:28:19,530
<font color="#CCCCCC">has a</font><font color="#E5E5E5"> primary key it will replicate</font>

689
00:28:16,680 --> 00:28:21,180
based on the primary<font color="#CCCCCC"> key then</font><font color="#E5E5E5"> you create</font>

690
00:28:19,530 --> 00:28:24,270
this thing<font color="#CCCCCC"> called a</font><font color="#E5E5E5"> publication there's</font>

691
00:28:21,180 --> 00:28:27,540
a<font color="#CCCCCC"> crepe publication test pump for this</font>

692
00:28:24,270 --> 00:28:30,120
<font color="#E5E5E5">table it can be multiple tables</font><font color="#CCCCCC"> you can</font>

693
00:28:27,540 --> 00:28:31,530
<font color="#CCCCCC">also filter in tables and then it will</font>

694
00:28:30,120 --> 00:28:35,340
dynamically add new tables and things

695
00:28:31,530 --> 00:28:38,370
<font color="#E5E5E5">like that</font><font color="#CCCCCC"> a publication</font><font color="#E5E5E5"> is the unit of</font>

696
00:28:35,340 --> 00:28:40,530
replication so if you put<font color="#E5E5E5"> 10 tables into</font>

697
00:28:38,370 --> 00:28:42,389
<font color="#E5E5E5">a publication they will</font><font color="#CCCCCC"> replicate as one</font>

698
00:28:40,530 --> 00:28:43,410
unit<font color="#E5E5E5"> and they will move over together</font>

699
00:28:42,390 --> 00:28:45,000
<font color="#E5E5E5">and these</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> things you</font><font color="#CCCCCC"> need to</font>

700
00:28:43,410 --> 00:28:47,370
<font color="#CCCCCC">consider for example if your tables with</font>

701
00:28:45,000 --> 00:28:48,870
foreign keys between<font color="#E5E5E5"> them you can't</font>

702
00:28:47,370 --> 00:28:51,060
replicate the changes to<font color="#CCCCCC"> just one of</font>

703
00:28:48,870 --> 00:28:52,800
<font color="#CCCCCC">them then it's one of those funny things</font>

704
00:28:51,060 --> 00:28:55,500
<font color="#CCCCCC">that might work most of</font><font color="#E5E5E5"> the time</font><font color="#CCCCCC"> but not</font>

705
00:28:52,800 --> 00:28:56,580
<font color="#CCCCCC">all</font><font color="#E5E5E5"> at the time and you want there so</font>

706
00:28:55,500 --> 00:28:58,200
those<font color="#E5E5E5"> are things you</font><font color="#CCCCCC"> need to consider</font>

707
00:28:56,580 --> 00:28:59,490
these are the<font color="#E5E5E5"> cases where logical</font>

708
00:28:58,200 --> 00:29:03,150
replication<font color="#E5E5E5"> can become a little bit more</font>

709
00:28:59,490 --> 00:29:04,370
complicated<font color="#E5E5E5"> then</font><font color="#CCCCCC"> on the standby</font><font color="#E5E5E5"> node you</font>

710
00:29:03,150 --> 00:29:07,240
create the same table

711
00:29:04,370 --> 00:29:10,219
<font color="#CCCCCC">maybe using</font><font color="#E5E5E5"> something like PG dump and</font>

712
00:29:07,240 --> 00:29:12,620
and then you create<font color="#E5E5E5"> a subscription which</font>

713
00:29:10,220 --> 00:29:15,590
is the<font color="#E5E5E5"> other side of this is a</font>

714
00:29:12,620 --> 00:29:18,590
subscription test some connection and

715
00:29:15,590 --> 00:29:20,870
this<font color="#E5E5E5"> is connecting</font><font color="#CCCCCC"> to the database</font><font color="#E5E5E5"> where</font>

716
00:29:18,590 --> 00:29:22,970
we created the publication<font color="#E5E5E5"> and they</font>

717
00:29:20,870 --> 00:29:28,790
would just say publication test problem

718
00:29:22,970 --> 00:29:32,420
<font color="#E5E5E5">this test pub here is of course</font><font color="#CCCCCC"> the same</font>

719
00:29:28,790 --> 00:29:34,760
<font color="#E5E5E5">one that we created</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> and as</font>

720
00:29:32,420 --> 00:29:36,250
soon<font color="#CCCCCC"> as we create this publication go so</font>

721
00:29:34,760 --> 00:29:38,600
as soon as<font color="#E5E5E5"> we create this subscription</font>

722
00:29:36,250 --> 00:29:40,910
<font color="#E5E5E5">reputation of this table</font><font color="#CCCCCC"> will start and</font>

723
00:29:38,600 --> 00:29:42,919
it will<font color="#E5E5E5"> start doing</font><font color="#CCCCCC"> it on a railway rail</font>

724
00:29:40,910 --> 00:29:46,120
basis as soon as I insert<font color="#E5E5E5"> a row it will</font>

725
00:29:42,920 --> 00:29:46,120
<font color="#CCCCCC">get replicated over to the other</font><font color="#E5E5E5"> one</font>

726
00:29:48,310 --> 00:29:52,760
<font color="#CCCCCC">logical implication comes of course with</font>

727
00:29:50,840 --> 00:29:55,790
its own sets<font color="#E5E5E5"> of rivets in this it</font>

728
00:29:52,760 --> 00:29:57,920
doesn't<font color="#E5E5E5"> currently do anything other than</font>

729
00:29:55,790 --> 00:29:59,350
<font color="#E5E5E5">data replication</font><font color="#CCCCCC"> it doesn't do schema</font>

730
00:29:57,920 --> 00:30:01,760
replication so if you do<font color="#E5E5E5"> with your table</font>

731
00:29:59,350 --> 00:30:04,820
<font color="#E5E5E5">you have to remember do enter table in</font>

732
00:30:01,760 --> 00:30:06,710
old notes and you have to do it in like

733
00:30:04,820 --> 00:30:08,620
the right order<font color="#CCCCCC"> and</font><font color="#E5E5E5"> things like that bad</font>

734
00:30:06,710 --> 00:30:11,200
things<font color="#E5E5E5"> can happen otherwise it doesn't</font>

735
00:30:08,620 --> 00:30:14,270
particularly<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> replicate sequences</font>

736
00:30:11,200 --> 00:30:16,100
so if you have your table<font color="#CCCCCC"> within our</font>

737
00:30:14,270 --> 00:30:18,440
primary key based off a sequence or

738
00:30:16,100 --> 00:30:21,080
generated by<font color="#CCCCCC"> corn</font><font color="#E5E5E5"> or something like</font><font color="#CCCCCC"> that</font>

739
00:30:18,440 --> 00:30:23,180
then the values will of course replicate

740
00:30:21,080 --> 00:30:26,389
<font color="#E5E5E5">but the sequence will still be stuck at</font>

741
00:30:23,180 --> 00:30:28,070
<font color="#CCCCCC">one so if</font><font color="#E5E5E5"> you use this for</font><font color="#CCCCCC"> something</font>

742
00:30:26,390 --> 00:30:30,110
<font color="#E5E5E5">I've high availability and you fell</font><font color="#CCCCCC"> over</font>

743
00:30:28,070 --> 00:30:35,419
<font color="#CCCCCC">then all your sequences are going to be</font>

744
00:30:30,110 --> 00:30:36,699
wrong which is<font color="#E5E5E5"> kind of like ooze so it's</font>

745
00:30:35,420 --> 00:30:40,580
not very<font color="#E5E5E5"> good</font><font color="#CCCCCC"> for high</font><font color="#E5E5E5"> availability</font>

746
00:30:36,700 --> 00:30:41,900
replication<font color="#CCCCCC"> is no reason that</font><font color="#E5E5E5"> we</font>

747
00:30:40,580 --> 00:30:43,429
couldn't<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to add things like</font>

748
00:30:41,900 --> 00:30:45,830
schema replication and sequence

749
00:30:43,430 --> 00:30:48,200
replication on<font color="#E5E5E5"> a fundamental</font><font color="#CCCCCC"> level we</font>

750
00:30:45,830 --> 00:30:51,230
just don't<font color="#E5E5E5"> have them</font><font color="#CCCCCC"> today but it means</font>

751
00:30:48,200 --> 00:30:53,810
<font color="#CCCCCC">that today this is</font><font color="#E5E5E5"> really good for data</font>

752
00:30:51,230 --> 00:30:55,910
distribution<font color="#E5E5E5"> and it's not very good for</font>

753
00:30:53,810 --> 00:30:57,620
high<font color="#E5E5E5"> availability</font><font color="#CCCCCC"> so it really</font><font color="#E5E5E5"> depends</font>

754
00:30:55,910 --> 00:30:59,030
on the solution you have<font color="#CCCCCC"> and we also</font>

755
00:30:57,620 --> 00:30:59,570
<font color="#CCCCCC">like something that is</font><font color="#E5E5E5"> called failover</font>

756
00:30:59,030 --> 00:31:01,879
<font color="#CCCCCC">slots</font>

757
00:30:59,570 --> 00:31:04,009
well you guys<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on them called</font>

758
00:31:01,879 --> 00:31:06,350
them failover slots<font color="#E5E5E5"> the general idea</font>

759
00:31:04,009 --> 00:31:08,929
being if you're replicating former<font color="#E5E5E5"> a</font>

760
00:31:06,350 --> 00:31:11,449
master with<font color="#E5E5E5"> logical and physical and</font>

761
00:31:08,929 --> 00:31:13,519
then you failover to your physical<font color="#CCCCCC"> stand</font>

762
00:31:11,450 --> 00:31:17,389
<font color="#CCCCCC">by your logical replication will not</font>

763
00:31:13,519 --> 00:31:19,580
follow so there<font color="#E5E5E5"> are still things that</font>

764
00:31:17,389 --> 00:31:22,279
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to be done</font><font color="#E5E5E5"> when it comes to the</font>

765
00:31:19,580 --> 00:31:24,710
database level logical replication but

766
00:31:22,279 --> 00:31:26,720
the<font color="#E5E5E5"> built</font><font color="#CCCCCC"> in one is still very</font><font color="#E5E5E5"> good and</font>

767
00:31:24,710 --> 00:31:30,590
it covers a<font color="#CCCCCC"> lot of people's use cases</font>

768
00:31:26,720 --> 00:31:33,830
but<font color="#CCCCCC"> is not complete now if you want to</font>

769
00:31:30,590 --> 00:31:35,478
<font color="#E5E5E5">build further on logical replication in</font>

770
00:31:33,830 --> 00:31:39,109
the database there is<font color="#E5E5E5"> an extension for</font>

771
00:31:35,479 --> 00:31:41,570
<font color="#E5E5E5">Postgres</font><font color="#CCCCCC"> competing logical this</font><font color="#E5E5E5"> is</font>

772
00:31:39,109 --> 00:31:44,449
basically an external<font color="#E5E5E5"> version of the</font>

773
00:31:41,570 --> 00:31:46,908
same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> it's where it started</font><font color="#E5E5E5"> it's</font>

774
00:31:44,450 --> 00:31:48,769
been merged<font color="#E5E5E5"> sort of piece by piece into</font>

775
00:31:46,909 --> 00:31:51,619
what is now the logical replication<font color="#E5E5E5"> in</font>

776
00:31:48,769 --> 00:31:53,720
<font color="#CCCCCC">postgis version 10 and</font><font color="#E5E5E5"> you know pieces</font>

777
00:31:51,619 --> 00:31:56,119
of it will be merged into future

778
00:31:53,720 --> 00:31:58,849
<font color="#E5E5E5">versions</font><font color="#CCCCCC"> of hospice but they have more</font>

779
00:31:56,119 --> 00:32:01,158
capabilities<font color="#E5E5E5"> today but it also means</font>

780
00:31:58,849 --> 00:32:03,379
<font color="#E5E5E5">that it's less</font><font color="#CCCCCC"> integrated and it's a</font>

781
00:32:01,159 --> 00:32:05,210
<font color="#E5E5E5">little bit more</font><font color="#CCCCCC"> tricky to work</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> you</font>

782
00:32:03,379 --> 00:32:07,219
don't have<font color="#E5E5E5"> these nice commands that you</font>

783
00:32:05,210 --> 00:32:08,720
call functions for everything and there

784
00:32:07,220 --> 00:32:09,979
are a<font color="#E5E5E5"> few things that are where the docs</font>

785
00:32:08,720 --> 00:32:14,109
<font color="#E5E5E5">are you have to do this in the right</font>

786
00:32:09,979 --> 00:32:16,940
order<font color="#E5E5E5"> otherwise you know</font><font color="#CCCCCC"> Dragons show up</font>

787
00:32:14,109 --> 00:32:19,789
<font color="#E5E5E5">with this support sequence replication</font>

788
00:32:16,940 --> 00:32:21,470
for example<font color="#CCCCCC"> it is a boudreaux based</font>

789
00:32:19,789 --> 00:32:23,029
filtering<font color="#E5E5E5"> so you can say I don't wanna</font>

790
00:32:21,470 --> 00:32:26,929
replicate the table I only want to

791
00:32:23,029 --> 00:32:28,759
<font color="#E5E5E5">replicate rows that match this you can</font>

792
00:32:26,929 --> 00:32:31,039
do column based filtering saying I only

793
00:32:28,759 --> 00:32:34,009
want to<font color="#E5E5E5"> replicate these columns and not</font>

794
00:32:31,039 --> 00:32:35,690
the other ones<font color="#CCCCCC"> for it it supports</font>

795
00:32:34,009 --> 00:32:39,229
merging and conflict resolution so you

796
00:32:35,690 --> 00:32:41,059
<font color="#E5E5E5">can have</font><font color="#CCCCCC"> multiple nodes replicating into</font>

797
00:32:39,229 --> 00:32:42,649
the same<font color="#E5E5E5"> table in a destination for</font>

798
00:32:41,059 --> 00:32:44,690
example or you<font color="#CCCCCC"> can have local changes to</font>

799
00:32:42,649 --> 00:32:47,899
a table<font color="#E5E5E5"> and replicating into the same</font>

800
00:32:44,690 --> 00:32:49,029
one and<font color="#E5E5E5"> you can define ways</font><font color="#CCCCCC"> for what's</font>

801
00:32:47,899 --> 00:32:51,139
<font color="#E5E5E5">going to happen when there is a conflict</font>

802
00:32:49,029 --> 00:32:52,190
<font color="#E5E5E5">because if you write for more than one</font>

803
00:32:51,139 --> 00:32:53,770
place there<font color="#E5E5E5"> will eventually be</font><font color="#CCCCCC"> a</font>

804
00:32:52,190 --> 00:32:57,190
<font color="#E5E5E5">conflict</font><font color="#CCCCCC"> you may think that you're</font>

805
00:32:53,770 --> 00:33:00,600
vacation prevented<font color="#E5E5E5"> that but it didn't it</font>

806
00:32:57,190 --> 00:33:03,010
didn't testing it always doesn't testing

807
00:33:00,600 --> 00:33:05,949
and they remember other<font color="#E5E5E5"> things that PG</font>

808
00:33:03,010 --> 00:33:08,020
<font color="#CCCCCC">illogical</font><font color="#E5E5E5"> adds on top of this the PD</font>

809
00:33:05,950 --> 00:33:11,980
<font color="#E5E5E5">educational supports post was nine point</font>

810
00:33:08,020 --> 00:33:14,650
four net<font color="#E5E5E5"> just post was ten and using PC</font>

811
00:33:11,980 --> 00:33:16,360
<font color="#E5E5E5">logical you can accomplish what's</font>

812
00:33:14,650 --> 00:33:18,160
basically<font color="#E5E5E5"> well there</font><font color="#CCCCCC"> was no such</font><font color="#E5E5E5"> thing</font>

813
00:33:16,360 --> 00:33:21,129
as<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> but very close to zero downtime</font>

814
00:33:18,160 --> 00:33:24,430
<font color="#CCCCCC">upgrades by using</font><font color="#E5E5E5"> logical replication</font>

815
00:33:21,130 --> 00:33:25,950
<font color="#CCCCCC">because physical replication was tied to</font>

816
00:33:24,430 --> 00:33:28,960
specific post code versions<font color="#E5E5E5"> right</font>

817
00:33:25,950 --> 00:33:30,970
versions and platforms and<font color="#CCCCCC"> compiled</font>

818
00:33:28,960 --> 00:33:33,850
flags and things logical<font color="#CCCCCC"> replication is</font>

819
00:33:30,970 --> 00:33:35,560
it you can use in PG logical you can

820
00:33:33,850 --> 00:33:38,889
replicate from post<font color="#E5E5E5"> as my for to</font>

821
00:33:35,560 --> 00:33:41,560
Buster's<font color="#E5E5E5"> ten for example now you will be</font>

822
00:33:38,890 --> 00:33:43,480
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do things mostly</font><font color="#E5E5E5"> these zero</font>

823
00:33:41,560 --> 00:33:45,129
<font color="#E5E5E5">downtown operated things probably using</font>

824
00:33:43,480 --> 00:33:49,660
the<font color="#CCCCCC"> Postgres built-in replication as</font>

825
00:33:45,130 --> 00:33:51,330
well but<font color="#CCCCCC"> only a film</font><font color="#E5E5E5"> version 10 and we</font>

826
00:33:49,660 --> 00:33:56,440
haven't<font color="#CCCCCC"> released version 11 yet so</font>

827
00:33:51,330 --> 00:34:00,370
you'll have to<font color="#E5E5E5"> wait a while</font><font color="#CCCCCC"> for that if</font>

828
00:33:56,440 --> 00:34:02,470
we<font color="#CCCCCC"> continue further up the stack</font><font color="#E5E5E5"> we have</font>

829
00:34:00,370 --> 00:34:05,260
the app in database right this is the

830
00:34:02,470 --> 00:34:07,510
old<font color="#E5E5E5"> trigger based replication systems</font>

831
00:34:05,260 --> 00:34:09,790
and the<font color="#E5E5E5"> people to those are still out</font>

832
00:34:07,510 --> 00:34:14,270
there<font color="#E5E5E5"> right anyone never deployed</font><font color="#CCCCCC"> Sloane</font>

833
00:34:09,790 --> 00:34:20,310
<font color="#CCCCCC">II did you like it</font>

834
00:34:14,270 --> 00:34:23,759
<font color="#E5E5E5">okay there's always one</font><font color="#CCCCCC"> so it is a</font>

835
00:34:20,310 --> 00:34:27,270
really capable system but it's not<font color="#CCCCCC"> very</font>

836
00:34:23,760 --> 00:34:30,240
<font color="#E5E5E5">easy to work with it is actually really</font>

837
00:34:27,270 --> 00:34:33,389
<font color="#E5E5E5">easy to break</font><font color="#CCCCCC"> and when you do you're in</font>

838
00:34:30,239 --> 00:34:35,759
<font color="#E5E5E5">for a lot of pain they did this things</font>

839
00:34:33,389 --> 00:34:37,230
and even<font color="#CCCCCC"> today even</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> P geological</font>

840
00:34:35,760 --> 00:34:39,060
even with all the<font color="#CCCCCC"> dota</font><font color="#E5E5E5"> and stuff there</font>

841
00:34:37,230 --> 00:34:41,010
are things<font color="#CCCCCC"> that slowly can do that they</font>

842
00:34:39,060 --> 00:34:42,299
can<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can set</font><font color="#E5E5E5"> up really really strange</font>

843
00:34:41,010 --> 00:34:46,440
things in<font color="#E5E5E5"> your application with</font>

844
00:34:42,300 --> 00:34:48,990
<font color="#CCCCCC">scrolling and it works pretty</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> with</font>

845
00:34:46,440 --> 00:34:51,179
<font color="#CCCCCC">the karo and Wendy stay</font><font color="#E5E5E5"> which are</font><font color="#CCCCCC"> also</font>

846
00:34:48,989 --> 00:34:53,339
trigger based<font color="#E5E5E5"> system that</font><font color="#CCCCCC"> are basically</font>

847
00:34:51,179 --> 00:34:54,690
simpler to use<font color="#E5E5E5"> now</font><font color="#CCCCCC"> Sony I think that's</font>

848
00:34:53,340 --> 00:34:56,159
their main selling arguments it's really

849
00:34:54,690 --> 00:35:00,750
that they're<font color="#E5E5E5"> much easier to</font><font color="#CCCCCC"> use them</font>

850
00:34:56,159 --> 00:35:04,609
slowly<font color="#CCCCCC"> and they still are</font><font color="#E5E5E5"> they're still</font>

851
00:35:00,750 --> 00:35:07,710
good choices<font color="#E5E5E5"> for cases where the other</font>

852
00:35:04,609 --> 00:35:10,140
solutions<font color="#E5E5E5"> don't apply</font><font color="#CCCCCC"> but they're</font><font color="#E5E5E5"> not</font>

853
00:35:07,710 --> 00:35:12,330
really<font color="#E5E5E5"> your primary target</font><font color="#CCCCCC"> for a long</font>

854
00:35:10,140 --> 00:35:14,520
time<font color="#E5E5E5"> they were the only one we have they</font>

855
00:35:12,330 --> 00:35:16,619
have a lot more overhead<font color="#CCCCCC"> every time you</font>

856
00:35:14,520 --> 00:35:18,270
do an insert it's copied somewhere and

857
00:35:16,619 --> 00:35:20,930
this is all happening in trigger it's

858
00:35:18,270 --> 00:35:23,550
running in user space in the database

859
00:35:20,930 --> 00:35:26,669
and then<font color="#CCCCCC"> you</font><font color="#E5E5E5"> pull it out and you delete</font>

860
00:35:23,550 --> 00:35:28,260
it<font color="#CCCCCC"> and these tools will do sort of all</font>

861
00:35:26,670 --> 00:35:30,330
sorts of weird<font color="#CCCCCC"> things to make sure the</font>

862
00:35:28,260 --> 00:35:32,910
overhead is as<font color="#CCCCCC"> little as possible</font><font color="#E5E5E5"> but</font>

863
00:35:30,330 --> 00:35:34,710
<font color="#CCCCCC">it's still going to be much much worse</font>

864
00:35:32,910 --> 00:35:41,180
than for the logical or physical

865
00:35:34,710 --> 00:35:41,180
built-in resolution<font color="#CCCCCC"> we need to do it</font>

866
00:35:42,020 --> 00:35:48,109
<font color="#CCCCCC">such as you know who in here likes</font>

867
00:35:45,900 --> 00:35:51,240
<font color="#CCCCCC">multi-master everyone sit</font><font color="#E5E5E5"> right</font>

868
00:35:48,109 --> 00:35:55,009
everybody really needs<font color="#CCCCCC"> multi-master</font>

869
00:35:51,240 --> 00:35:57,240
that's my experience<font color="#E5E5E5"> everyone needs it</font>

870
00:35:55,010 --> 00:36:01,020
<font color="#E5E5E5">until they start looking into what they</font>

871
00:35:57,240 --> 00:36:04,368
really need<font color="#E5E5E5"> you know in particular until</font>

872
00:36:01,020 --> 00:36:04,369
they start realizing what it<font color="#E5E5E5"> means</font>

873
00:36:05,330 --> 00:36:09,779
because we most people want when they

874
00:36:07,589 --> 00:36:11,940
<font color="#E5E5E5">say they want</font><font color="#CCCCCC"> multi master is the one</font>

875
00:36:09,780 --> 00:36:13,380
transparent multi master<font color="#E5E5E5"> right the</font><font color="#CCCCCC"> month</font>

876
00:36:11,940 --> 00:36:16,339
or application to remain completely

877
00:36:13,380 --> 00:36:20,180
unchanged<font color="#E5E5E5"> and things to just</font>

878
00:36:16,339 --> 00:36:22,160
<font color="#CCCCCC">we work unfortunately we don't have</font><font color="#E5E5E5"> a</font>

879
00:36:20,180 --> 00:36:24,469
lot of<font color="#E5E5E5"> magic</font>

880
00:36:22,160 --> 00:36:26,629
there are things in clay here like the

881
00:36:24,469 --> 00:36:28,130
speed of light and annoying things<font color="#CCCCCC"> like</font>

882
00:36:26,630 --> 00:36:30,859
that that<font color="#E5E5E5"> we haven't</font><font color="#CCCCCC"> figured out how</font><font color="#E5E5E5"> to</font>

883
00:36:28,130 --> 00:36:33,829
deal<font color="#CCCCCC"> with yet</font><font color="#E5E5E5"> if you're doing a database</font>

884
00:36:30,859 --> 00:36:36,529
in<font color="#E5E5E5"> in the form of your traditional</font>

885
00:36:33,829 --> 00:36:38,749
relational database you cannot do

886
00:36:36,529 --> 00:36:40,430
transparent<font color="#CCCCCC"> multi-master but there</font>

887
00:36:38,749 --> 00:36:41,899
<font color="#E5E5E5">people who saw</font><font color="#CCCCCC"> it who's ever met for</font>

888
00:36:40,430 --> 00:36:43,399
<font color="#CCCCCC">example in you know a salesman</font><font color="#E5E5E5"> from</font>

889
00:36:41,900 --> 00:36:45,349
somebody wants<font color="#CCCCCC"> to sell you a solution</font>

890
00:36:43,400 --> 00:36:47,210
based<font color="#E5E5E5"> on</font><font color="#CCCCCC"> board iraq saying it's</font>

891
00:36:45,349 --> 00:36:49,279
transparent<font color="#CCCCCC"> multi master that will</font><font color="#E5E5E5"> scale</font>

892
00:36:47,210 --> 00:36:51,079
everywhere and will work perfectly<font color="#E5E5E5"> and</font>

893
00:36:49,279 --> 00:36:53,390
<font color="#CCCCCC">whenever</font><font color="#E5E5E5"> that again we purchase all</font><font color="#CCCCCC"> them</font>

894
00:36:51,079 --> 00:37:02,630
<font color="#E5E5E5">what I</font><font color="#CCCCCC"> do I have yeah did you try to</font>

895
00:36:53,390 --> 00:37:04,390
deploy<font color="#E5E5E5"> work</font><font color="#CCCCCC"> using a rack adapt</font><font color="#E5E5E5"> that</font>

896
00:37:02,630 --> 00:37:06,469
application<font color="#CCCCCC"> can do some very good things</font>

897
00:37:04,390 --> 00:37:09,979
<font color="#E5E5E5">but if you</font><font color="#CCCCCC"> just take</font><font color="#E5E5E5"> your regular</font>

898
00:37:06,469 --> 00:37:11,599
application and point to it very bad

899
00:37:09,979 --> 00:37:14,479
things can happen<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the same goes</font><font color="#E5E5E5"> for</font>

900
00:37:11,599 --> 00:37:16,940
all<font color="#E5E5E5"> solutions so the completely</font>

901
00:37:14,479 --> 00:37:20,419
transparent multi master<font color="#E5E5E5"> just doesn't</font>

902
00:37:16,940 --> 00:37:22,160
<font color="#CCCCCC">exist</font><font color="#E5E5E5"> if you want the the consistent</font>

903
00:37:20,420 --> 00:37:25,460
<font color="#CCCCCC">database of your traditional relational</font>

904
00:37:22,160 --> 00:37:28,538
database system there<font color="#E5E5E5"> are some options</font>

905
00:37:25,460 --> 00:37:32,690
<font color="#CCCCCC">with in Postgres still</font><font color="#E5E5E5"> there's a</font><font color="#CCCCCC"> toolkit</font>

906
00:37:28,539 --> 00:37:34,339
<font color="#CCCCCC">for capturing posters called b dr that</font>

907
00:37:32,690 --> 00:37:37,630
has been developed a lot<font color="#E5E5E5"> together with</font>

908
00:37:34,339 --> 00:37:42,038
the<font color="#E5E5E5"> PG logical stuff that does support</font>

909
00:37:37,630 --> 00:37:42,039
<font color="#E5E5E5">geographically distributed multi master</font>

910
00:37:44,049 --> 00:37:47,960
<font color="#CCCCCC">if you</font><font color="#E5E5E5"> manage</font><font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> your</font>

911
00:37:46,279 --> 00:37:49,190
application completely unmodified

912
00:37:47,960 --> 00:37:53,450
against it then you<font color="#CCCCCC"> probably didn't need</font>

913
00:37:49,190 --> 00:37:55,700
<font color="#CCCCCC">no master right goes to most solutions</font>

914
00:37:53,450 --> 00:37:58,368
but if you engineer your application to

915
00:37:55,700 --> 00:38:00,979
work<font color="#E5E5E5"> together with a solution like PDR</font>

916
00:37:58,369 --> 00:38:02,599
yes<font color="#E5E5E5"> it can solve those problems in a lot</font>

917
00:38:00,979 --> 00:38:04,609
<font color="#CCCCCC">of cases</font><font color="#E5E5E5"> probably not to remove them but</font>

918
00:38:02,599 --> 00:38:08,180
<font color="#E5E5E5">in one of</font><font color="#CCCCCC"> those cases now b dr today is</font>

919
00:38:04,609 --> 00:38:11,119
a<font color="#E5E5E5"> purpose press it's not an</font><font color="#CCCCCC"> extension</font>

920
00:38:08,180 --> 00:38:13,700
it's an actual for compose<font color="#E5E5E5"> press which i</font>

921
00:38:11,119 --> 00:38:15,829
think is based on line<font color="#E5E5E5"> four or</font><font color="#CCCCCC"> nine five</font>

922
00:38:13,700 --> 00:38:18,680
at this point they're working their way

923
00:38:15,829 --> 00:38:20,660
towards<font color="#E5E5E5"> newer versions there</font><font color="#CCCCCC"> i think</font>

924
00:38:18,680 --> 00:38:22,640
<font color="#E5E5E5">last I heard to still make it into an</font>

925
00:38:20,660 --> 00:38:23,990
<font color="#E5E5E5">extension in the next major version of</font>

926
00:38:22,640 --> 00:38:26,299
video should hopefully<font color="#E5E5E5"> just be an</font>

927
00:38:23,990 --> 00:38:28,939
<font color="#CCCCCC">extension</font><font color="#E5E5E5"> on top of</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> squares but it's</font>

928
00:38:26,300 --> 00:38:29,750
not there<font color="#CCCCCC"> now</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> hopefully get</font>

929
00:38:28,940 --> 00:38:32,450
there

930
00:38:29,750 --> 00:38:35,750
<font color="#E5E5E5">all these trigger based solutions that</font>

931
00:38:32,450 --> 00:38:39,640
we saw<font color="#E5E5E5"> recorder supports do you know to</font>

932
00:38:35,750 --> 00:38:42,440
master<font color="#CCCCCC"> the big</font><font color="#E5E5E5"> problem with doing</font>

933
00:38:39,640 --> 00:38:43,850
<font color="#E5E5E5">because the treaty-based</font><font color="#CCCCCC"> parts are</font>

934
00:38:42,440 --> 00:38:45,320
asynchronous<font color="#E5E5E5"> and the big problem with a</font>

935
00:38:43,850 --> 00:38:47,319
synchronous multi-master is of course

936
00:38:45,320 --> 00:38:49,610
you will eventually get conflicts<font color="#E5E5E5"> and</font>

937
00:38:47,320 --> 00:38:51,620
you need to<font color="#E5E5E5"> decide what's gonna happen</font>

938
00:38:49,610 --> 00:38:56,540
when you get<font color="#E5E5E5"> a conflict</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right who's</font>

939
00:38:51,620 --> 00:38:58,040
gonna win<font color="#CCCCCC"> and if you can define</font><font color="#E5E5E5"> those</font>

940
00:38:56,540 --> 00:38:59,360
you can define<font color="#CCCCCC"> like very complex</font>

941
00:38:58,040 --> 00:39:02,120
policies for<font color="#E5E5E5"> dealing</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> that and the</font>

942
00:38:59,360 --> 00:39:04,580
<font color="#CCCCCC">two like</font><font color="#E5E5E5"> Ricardo</font><font color="#CCCCCC"> but you have to</font>

943
00:39:02,120 --> 00:39:06,460
<font color="#CCCCCC">actually do it otherwise</font><font color="#E5E5E5"> once you run</font>

944
00:39:04,580 --> 00:39:08,360
into the conflict everything just stops

945
00:39:06,460 --> 00:39:10,820
<font color="#E5E5E5">then that's probably not what</font><font color="#CCCCCC"> you</font>

946
00:39:08,360 --> 00:39:12,440
intended<font color="#E5E5E5"> but my general recommendation</font>

947
00:39:10,820 --> 00:39:13,910
<font color="#E5E5E5">when you are looking at</font><font color="#CCCCCC"> something like</font>

948
00:39:12,440 --> 00:39:15,830
<font color="#CCCCCC">meteor master is you know</font><font color="#E5E5E5"> first look</font>

949
00:39:13,910 --> 00:39:18,950
about<font color="#CCCCCC"> five more times to see</font><font color="#E5E5E5"> if you</font>

950
00:39:15,830 --> 00:39:19,910
really<font color="#CCCCCC"> need multi master because when</font>

951
00:39:18,950 --> 00:39:23,660
we're talking<font color="#CCCCCC"> about these things that</font>

952
00:39:19,910 --> 00:39:26,540
<font color="#E5E5E5">were easy to break yeah</font><font color="#CCCCCC"> that'll be</font><font color="#E5E5E5"> easy</font>

953
00:39:23,660 --> 00:39:28,850
to break<font color="#CCCCCC"> in most scenarios it is a much</font>

954
00:39:26,540 --> 00:39:31,130
<font color="#E5E5E5">harder problem to solve than most people</font>

955
00:39:28,850 --> 00:39:34,490
<font color="#CCCCCC">realize if you want to maintain the</font>

956
00:39:31,130 --> 00:39:39,800
consistent the consistency part that

957
00:39:34,490 --> 00:39:42,229
<font color="#E5E5E5">really is our relational database of</font>

958
00:39:39,800 --> 00:39:46,570
course we can build our replication<font color="#CCCCCC"> all</font>

959
00:39:42,230 --> 00:39:49,070
the way up<font color="#E5E5E5"> in the application itself</font><font color="#CCCCCC"> and</font>

960
00:39:46,570 --> 00:39:50,600
<font color="#E5E5E5">just run connect to five different</font>

961
00:39:49,070 --> 00:39:51,950
<font color="#E5E5E5">databases and run things in five</font>

962
00:39:50,600 --> 00:39:53,390
different databases and<font color="#CCCCCC"> commit them</font><font color="#E5E5E5"> in</font>

963
00:39:51,950 --> 00:39:55,430
all<font color="#E5E5E5"> of them</font><font color="#CCCCCC"> and everything will be fine</font>

964
00:39:53,390 --> 00:39:57,230
right<font color="#E5E5E5"> but actually</font><font color="#CCCCCC"> doing transaction</font>

965
00:39:55,430 --> 00:39:59,180
control at this level<font color="#E5E5E5"> can become very</font>

966
00:39:57,230 --> 00:40:01,460
complicated now you're moving<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

967
00:39:59,180 --> 00:40:04,220
complexity into<font color="#E5E5E5"> your application if what</font>

968
00:40:01,460 --> 00:40:05,780
you're<font color="#CCCCCC"> looking for is consistent</font>

969
00:40:04,220 --> 00:40:07,310
replication which is probably why<font color="#E5E5E5"> you</font>

970
00:40:05,780 --> 00:40:09,380
were<font color="#CCCCCC"> using a relational</font><font color="#E5E5E5"> database in the</font>

971
00:40:07,310 --> 00:40:10,850
first place then trying to<font color="#E5E5E5"> build that in</font>

972
00:40:09,380 --> 00:40:13,990
your application<font color="#CCCCCC"> is probably</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> a very</font>

973
00:40:10,850 --> 00:40:16,130
<font color="#E5E5E5">good idea</font><font color="#CCCCCC"> it's setting yourself up for</font>

974
00:40:13,990 --> 00:40:17,569
for<font color="#E5E5E5"> having to maintain something</font><font color="#CCCCCC"> that</font>

975
00:40:16,130 --> 00:40:23,540
will become really<font color="#CCCCCC"> really complicated</font>

976
00:40:17,570 --> 00:40:25,100
<font color="#E5E5E5">over time so where we take from this</font>

977
00:40:23,540 --> 00:40:26,870
there<font color="#CCCCCC"> are these little options than this</font>

978
00:40:25,100 --> 00:40:30,620
around

979
00:40:26,870 --> 00:40:33,170
things that we want like main problems

980
00:40:30,620 --> 00:40:35,839
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> want to solve</font><font color="#CCCCCC"> with replication</font>

981
00:40:33,170 --> 00:40:37,400
today in<font color="#E5E5E5"> what you're looking for</font>

982
00:40:35,840 --> 00:40:41,030
assembling<font color="#E5E5E5"> the problem of high</font>

983
00:40:37,400 --> 00:40:43,070
availability<font color="#CCCCCC"> then you should really just</font>

984
00:40:41,030 --> 00:40:46,850
be<font color="#CCCCCC"> using Postgres built-in streaming</font>

985
00:40:43,070 --> 00:40:48,830
replication<font color="#E5E5E5"> easy to set up hard to break</font>

986
00:40:46,850 --> 00:40:49,970
these<font color="#CCCCCC"> are very</font><font color="#E5E5E5"> good properties when</font>

987
00:40:48,830 --> 00:40:52,190
we're talking<font color="#CCCCCC"> about building for high</font>

988
00:40:49,970 --> 00:40:54,140
availability<font color="#E5E5E5"> because if it breaks it</font>

989
00:40:52,190 --> 00:40:58,700
<font color="#E5E5E5">will always break in the wrong moment</font><font color="#CCCCCC"> we</font>

990
00:40:54,140 --> 00:41:01,250
know<font color="#E5E5E5"> that that's how it works</font><font color="#CCCCCC"> and use</font>

991
00:40:58,700 --> 00:41:04,129
the fact that<font color="#E5E5E5"> you can mix synchronous</font>

992
00:41:01,250 --> 00:41:07,300
and asynchronous replication<font color="#CCCCCC"> in the same</font>

993
00:41:04,130 --> 00:41:09,710
<font color="#E5E5E5">faster or even between the same notes</font>

994
00:41:07,300 --> 00:41:11,300
because<font color="#E5E5E5"> when doing that in an</font>

995
00:41:09,710 --> 00:41:13,820
intelligent way<font color="#CCCCCC"> and in a controlled way</font>

996
00:41:11,300 --> 00:41:15,170
you can get most of the important

997
00:41:13,820 --> 00:41:17,240
benefits<font color="#E5E5E5"> from</font><font color="#CCCCCC"> doing synchronous</font>

998
00:41:15,170 --> 00:41:20,210
replication<font color="#E5E5E5"> with almost none</font><font color="#CCCCCC"> of the</font>

999
00:41:17,240 --> 00:41:21,799
overhead by simply indicating the

1000
00:41:20,210 --> 00:41:24,110
important things versus<font color="#CCCCCC"> the slightly</font>

1001
00:41:21,800 --> 00:41:25,520
<font color="#E5E5E5">less important things because even on</font>

1002
00:41:24,110 --> 00:41:26,990
the slightly less<font color="#E5E5E5"> important things</font><font color="#CCCCCC"> we're</font>

1003
00:41:25,520 --> 00:41:29,840
not<font color="#E5E5E5"> talking about losing</font><font color="#CCCCCC"> a lot of data</font>

1004
00:41:26,990 --> 00:41:31,520
<font color="#E5E5E5">right in the in</font><font color="#CCCCCC"> asynchronous mode</font><font color="#E5E5E5"> we're</font>

1005
00:41:29,840 --> 00:41:32,510
still<font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> losing a necklace</font>

1006
00:41:31,520 --> 00:41:35,480
than one<font color="#E5E5E5"> second</font>

1007
00:41:32,510 --> 00:41:38,090
<font color="#E5E5E5">worth of transactions which in a lot</font><font color="#CCCCCC"> of</font>

1008
00:41:35,480 --> 00:41:40,520
<font color="#E5E5E5">applications really isn't that much but</font>

1009
00:41:38,090 --> 00:41:43,100
it's very much more than<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> like we</font>

1010
00:41:40,520 --> 00:41:45,860
can<font color="#E5E5E5"> be an observer</font><font color="#CCCCCC"> and saying it</font><font color="#E5E5E5"> is</font>

1011
00:41:43,100 --> 00:41:49,400
actually okay<font color="#CCCCCC"> to lose a few transactions</font>

1012
00:41:45,860 --> 00:41:52,310
but<font color="#E5E5E5"> if we mix those we can get a very</font>

1013
00:41:49,400 --> 00:41:54,020
good<font color="#E5E5E5"> performance</font><font color="#CCCCCC"> tree and if you want to</font>

1014
00:41:52,310 --> 00:41:55,340
build like if what you're setting<font color="#CCCCCC"> up is</font>

1015
00:41:54,020 --> 00:41:56,720
<font color="#E5E5E5">just going to be manually</font><font color="#CCCCCC"> maintained</font>

1016
00:41:55,340 --> 00:41:59,840
your application and<font color="#CCCCCC"> the built-in tools</font>

1017
00:41:56,720 --> 00:42:01,640
do pretty<font color="#CCCCCC"> good</font><font color="#E5E5E5"> job if you want to go a</font>

1018
00:41:59,840 --> 00:42:03,860
<font color="#CCCCCC">step beyond that you need</font><font color="#E5E5E5"> to look at</font>

1019
00:42:01,640 --> 00:42:05,450
<font color="#E5E5E5">things like automatic failover don't</font>

1020
00:42:03,860 --> 00:42:09,740
<font color="#CCCCCC">build your own solution for automatic</font>

1021
00:42:05,450 --> 00:42:13,580
failover look at primarily<font color="#CCCCCC"> Patroni</font><font color="#E5E5E5"> and</font>

1022
00:42:09,740 --> 00:42:16,100
web manager compare how they work

1023
00:42:13,580 --> 00:42:17,600
-<font color="#E5E5E5"> what matches your organization you're</font>

1024
00:42:16,100 --> 00:42:20,150
both fine tools they work in slightly

1025
00:42:17,600 --> 00:42:22,730
different scenarios<font color="#CCCCCC"> I would recommend</font>

1026
00:42:20,150 --> 00:42:24,180
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> evaluate them both look at</font><font color="#CCCCCC"> path</font>

1027
00:42:22,730 --> 00:42:26,400
if you<font color="#CCCCCC"> are</font>

1028
00:42:24,180 --> 00:42:27,990
using things or<font color="#E5E5E5"> for other things</font><font color="#CCCCCC"> going</font>

1029
00:42:26,400 --> 00:42:30,450
to be<font color="#E5E5E5"> using things like pacemaker and</font>

1030
00:42:27,990 --> 00:42:31,979
<font color="#CCCCCC">chorus Inc if you're not doing</font><font color="#E5E5E5"> that</font>

1031
00:42:30,450 --> 00:42:33,480
<font color="#E5E5E5">learn</font><font color="#CCCCCC"> it's an extra piece of</font>

1032
00:42:31,980 --> 00:42:36,030
<font color="#E5E5E5">infrastructure that you're bringing in</font>

1033
00:42:33,480 --> 00:42:38,910
<font color="#E5E5E5">you're probably better off looking at</font>

1034
00:42:36,030 --> 00:42:41,190
<font color="#E5E5E5">these tools to deal with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but if</font>

1035
00:42:38,910 --> 00:42:44,640
you're building high availability<font color="#CCCCCC"> don't</font>

1036
00:42:41,190 --> 00:42:46,050
use logical replication<font color="#E5E5E5"> don't use P</font>

1037
00:42:44,640 --> 00:42:48,299
geological certainly don't use the

1038
00:42:46,050 --> 00:42:50,430
<font color="#CCCCCC">trigger-based ones if you use actual</font>

1039
00:42:48,300 --> 00:42:51,839
<font color="#CCCCCC">who's still using one of slowly Ricardo</font>

1040
00:42:50,430 --> 00:43:00,000
<font color="#E5E5E5">oil and they stay actively in the</font>

1041
00:42:51,839 --> 00:43:07,380
organization using them and not planning

1042
00:43:00,000 --> 00:43:11,480
<font color="#CCCCCC">to replace them by using anything</font><font color="#E5E5E5"> that</font>

1043
00:43:07,380 --> 00:43:13,890
<font color="#E5E5E5">they're planning to replace well</font><font color="#CCCCCC"> yes</font>

1044
00:43:11,480 --> 00:43:18,150
because<font color="#CCCCCC"> at some point your project has</font>

1045
00:43:13,890 --> 00:43:22,920
to officially be finished the other use

1046
00:43:18,150 --> 00:43:25,380
case that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to cover is</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font>

1047
00:43:22,920 --> 00:43:28,319
really<font color="#CCCCCC"> need to do is upload pure read</font>

1048
00:43:25,380 --> 00:43:30,690
queries then we can still use physical

1049
00:43:28,319 --> 00:43:32,460
streaming<font color="#CCCCCC"> application because our</font>

1050
00:43:30,690 --> 00:43:34,650
standby notes are available<font color="#E5E5E5"> or standby</font>

1051
00:43:32,460 --> 00:43:36,630
notes or<font color="#CCCCCC"> read-only you can still get</font>

1052
00:43:34,650 --> 00:43:38,849
multi table and multi statements

1053
00:43:36,630 --> 00:43:41,700
transactional snapshots on<font color="#CCCCCC"> their standby</font>

1054
00:43:38,849 --> 00:43:45,240
<font color="#CCCCCC">nodes they just have to</font><font color="#E5E5E5"> be completely</font>

1055
00:43:41,700 --> 00:43:46,529
<font color="#E5E5E5">redone</font><font color="#CCCCCC"> which goes back to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> previous</font>

1056
00:43:45,240 --> 00:43:48,000
<font color="#CCCCCC">one yes you might want to look at</font>

1057
00:43:46,530 --> 00:43:51,990
management<font color="#E5E5E5"> tools and things like that</font>

1058
00:43:48,000 --> 00:43:54,000
<font color="#CCCCCC">but having</font><font color="#E5E5E5"> this set up really easy</font><font color="#CCCCCC"> every</font>

1059
00:43:51,990 --> 00:43:57,240
<font color="#CCCCCC">leaf</font><font color="#E5E5E5"> stated that is a good choice</font><font color="#CCCCCC"> in</font>

1060
00:43:54,000 --> 00:43:59,520
many cases another data<font color="#E5E5E5"> distribution</font>

1061
00:43:57,240 --> 00:44:01,020
which<font color="#CCCCCC"> is different in that</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> they</font>

1062
00:43:59,520 --> 00:44:03,119
<font color="#E5E5E5">don't just need</font><font color="#CCCCCC"> to run simple read</font>

1063
00:44:01,020 --> 00:44:04,440
queries on our data we might need<font color="#CCCCCC"> to</font>

1064
00:44:03,119 --> 00:44:08,010
replicate different data to different

1065
00:44:04,440 --> 00:44:09,809
<font color="#E5E5E5">places</font><font color="#CCCCCC"> we might need to generate temp</font>

1066
00:44:08,010 --> 00:44:11,490
tables generate reporting tables and

1067
00:44:09,809 --> 00:44:14,430
<font color="#E5E5E5">things like that though if you're using</font>

1068
00:44:11,490 --> 00:44:16,200
Postgres<font color="#CCCCCC"> 10 use logical replication if</font>

1069
00:44:14,430 --> 00:44:17,859
<font color="#CCCCCC">you're not using Postgres</font><font color="#E5E5E5"> 10 and while</font>

1070
00:44:16,200 --> 00:44:20,060
you're not using

1071
00:44:17,859 --> 00:44:23,690
you should<font color="#E5E5E5"> upgrade you should use</font><font color="#CCCCCC"> mr.</font>

1072
00:44:20,060 --> 00:44:25,340
<font color="#CCCCCC">Stan with his</font><font color="#E5E5E5"> net</font><font color="#CCCCCC"> look at PG logical if</font>

1073
00:44:23,690 --> 00:44:28,849
<font color="#E5E5E5">your</font><font color="#CCCCCC"> cooze using post goes</font><font color="#E5E5E5"> nine point</font>

1074
00:44:25,340 --> 00:44:30,200
<font color="#E5E5E5">four or newer this Wikipedia logical if</font>

1075
00:44:28,849 --> 00:44:32,780
the<font color="#CCCCCC"> built-in one isn't good enough for</font>

1076
00:44:30,200 --> 00:44:34,609
<font color="#E5E5E5">you if you need the partition</font>

1077
00:44:32,780 --> 00:44:35,750
replication for example replicating some

1078
00:44:34,609 --> 00:44:39,319
columns or somewhere else

1079
00:44:35,750 --> 00:44:40,400
<font color="#E5E5E5">only then look at P geological and</font><font color="#CCCCCC"> this</font>

1080
00:44:39,320 --> 00:44:42,290
if you're using<font color="#CCCCCC"> slowly you should</font>

1081
00:44:40,400 --> 00:44:45,230
<font color="#E5E5E5">probably look at upgrading your way out</font>

1082
00:44:42,290 --> 00:44:46,640
<font color="#CCCCCC">of Salone unless you are one of the</font>

1083
00:44:45,230 --> 00:44:49,280
<font color="#CCCCCC">people who</font><font color="#E5E5E5"> are in one</font><font color="#CCCCCC"> of these use cases</font>

1084
00:44:46,640 --> 00:44:51,710
that<font color="#E5E5E5"> really</font><font color="#CCCCCC"> only slowly solves then</font>

1085
00:44:49,280 --> 00:44:57,440
you're gonna keep using slumming<font color="#E5E5E5"> just be</font>

1086
00:44:51,710 --> 00:44:59,710
<font color="#E5E5E5">careful because</font><font color="#CCCCCC"> it's easy</font><font color="#E5E5E5"> to break these</font>

1087
00:44:57,440 --> 00:45:02,030
<font color="#CCCCCC">are</font><font color="#E5E5E5"> all good ways of dealing with your</font>

1088
00:44:59,710 --> 00:45:02,840
going<font color="#CCCCCC"> out in different</font><font color="#E5E5E5"> ways</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> what if</font>

1089
00:45:02,030 --> 00:45:06,099
you<font color="#CCCCCC"> need both</font>

1090
00:45:02,840 --> 00:45:11,720
if you need both high<font color="#E5E5E5"> availability</font><font color="#CCCCCC"> and</font>

1091
00:45:06,099 --> 00:45:13,430
do both just put up another note it's a

1092
00:45:11,720 --> 00:45:15,589
very common<font color="#CCCCCC"> scenario that you say you</font>

1093
00:45:13,430 --> 00:45:18,830
use synchronous streaming replication

1094
00:45:15,590 --> 00:45:20,990
between<font color="#CCCCCC"> a high availability clock try</font>

1095
00:45:18,830 --> 00:45:22,848
again<font color="#E5E5E5"> high availability cluster of say</font>

1096
00:45:20,990 --> 00:45:24,649
three nodes<font color="#E5E5E5"> and then you also use</font>

1097
00:45:22,849 --> 00:45:26,869
<font color="#CCCCCC">asynchronous replication to another node</font>

1098
00:45:24,650 --> 00:45:28,520
or to other nodes<font color="#E5E5E5"> where you run your</font>

1099
00:45:26,869 --> 00:45:31,280
read queries for example you can freely

1100
00:45:28,520 --> 00:45:33,619
mix and match these different types of

1101
00:45:31,280 --> 00:45:35,750
replication will be streaming<font color="#CCCCCC"> ones</font>

1102
00:45:33,619 --> 00:45:37,460
<font color="#E5E5E5">support that you have cascading</font>

1103
00:45:35,750 --> 00:45:40,310
replication so you<font color="#CCCCCC"> replicate from node 1</font>

1104
00:45:37,460 --> 00:45:42,770
to<font color="#E5E5E5"> node B and then from node B to C D</font>

1105
00:45:40,310 --> 00:45:44,660
and<font color="#E5E5E5"> E</font><font color="#CCCCCC"> so you can replicate in to read</font>

1106
00:45:42,770 --> 00:45:46,339
clusters that then go into<font color="#CCCCCC"> a</font>

1107
00:45:44,660 --> 00:45:48,440
distribution<font color="#CCCCCC"> no that replicates in too</font>

1108
00:45:46,339 --> 00:45:51,200
many<font color="#CCCCCC"> Reed clusters to conserve of</font>

1109
00:45:48,440 --> 00:45:53,690
network bandwidth<font color="#CCCCCC"> and many sorts of</font>

1110
00:45:51,200 --> 00:45:56,060
things like<font color="#CCCCCC"> that so in many cases if you</font>

1111
00:45:53,690 --> 00:45:59,480
move beyond the simplest needs<font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't</font>

1112
00:45:56,060 --> 00:46:01,609
<font color="#CCCCCC">want to mix different</font><font color="#E5E5E5"> ones of these but</font>

1113
00:45:59,480 --> 00:46:04,339
<font color="#E5E5E5">these should</font><font color="#CCCCCC"> all be</font><font color="#E5E5E5"> sort of their base</font>

1114
00:46:01,609 --> 00:46:09,619
points of where you want to go for<font color="#E5E5E5"> those</font>

1115
00:46:04,339 --> 00:46:12,049
things<font color="#E5E5E5"> and that's all I have do we</font><font color="#CCCCCC"> have</font>

1116
00:46:09,619 --> 00:46:14,510
<font color="#CCCCCC">a couple</font><font color="#E5E5E5"> of minutes for questions yes</font>

1117
00:46:12,050 --> 00:46:15,950
we're three minutes for questions<font color="#E5E5E5"> who</font>

1118
00:46:14,510 --> 00:46:25,380
wants to be the first<font color="#E5E5E5"> one</font>

1119
00:46:15,950 --> 00:46:25,379
[Applause]

1120
00:46:30,580 --> 00:46:36,619
so anybody<font color="#CCCCCC"> yes you have</font><font color="#E5E5E5"> to run</font><font color="#CCCCCC"> to right</font>

1121
00:46:34,910 --> 00:46:39,940
in<font color="#E5E5E5"> the middle and then and then throw</font>

1122
00:46:36,619 --> 00:46:39,940
them I think

1123
00:46:54,400 --> 00:46:58,119
but I think she might have<font color="#CCCCCC"> not turn</font><font color="#E5E5E5"> it</font>

1124
00:46:56,440 --> 00:47:00,430
on for<font color="#E5E5E5"> you</font><font color="#CCCCCC"> like so the question I</font><font color="#E5E5E5"> think</font>

1125
00:46:58,119 --> 00:47:05,799
<font color="#E5E5E5">is how much latency</font><font color="#CCCCCC"> is added by 29</font>

1126
00:47:00,430 --> 00:47:07,270
<font color="#E5E5E5">synchronous replication and if the</font>

1127
00:47:05,799 --> 00:47:09,400
application ends up being broken<font color="#CCCCCC"> over</font>

1128
00:47:07,270 --> 00:47:11,440
time it<font color="#CCCCCC"> really depends on</font><font color="#E5E5E5"> the distance</font>

1129
00:47:09,400 --> 00:47:13,210
<font color="#E5E5E5">between your notes if you're replicating</font>

1130
00:47:11,440 --> 00:47:16,299
like<font color="#CCCCCC"> clothes these are two notes in the</font>

1131
00:47:13,210 --> 00:47:17,890
same data center<font color="#E5E5E5"> or so then it's</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> a</font>

1132
00:47:16,299 --> 00:47:20,650
little<font color="#E5E5E5"> bit of latency but it's very very</font>

1133
00:47:17,890 --> 00:47:23,078
low<font color="#CCCCCC"> obviously if you replicate you</font><font color="#E5E5E5"> know</font>

1134
00:47:20,650 --> 00:47:25,059
across<font color="#E5E5E5"> the Atlantic we</font><font color="#CCCCCC"> have to go there</font>

1135
00:47:23,079 --> 00:47:26,799
and<font color="#E5E5E5"> back I've seen a lot</font><font color="#CCCCCC"> of scenarios</font>

1136
00:47:25,059 --> 00:47:28,270
<font color="#CCCCCC">where</font><font color="#E5E5E5"> you're replicating between two</font>

1137
00:47:26,799 --> 00:47:32,650
data<font color="#CCCCCC"> centers that are in the same city</font>

1138
00:47:28,270 --> 00:47:35,589
<font color="#CCCCCC">and usually</font><font color="#E5E5E5"> like the overhead is or the</font>

1139
00:47:32,650 --> 00:47:37,930
latency overhead is low<font color="#E5E5E5"> enough that you</font>

1140
00:47:35,589 --> 00:47:39,520
<font color="#E5E5E5">barely notice it now if you have an</font>

1141
00:47:37,930 --> 00:47:42,399
application<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> just rapid firing</font>

1142
00:47:39,520 --> 00:47:44,200
very very small transactions<font color="#E5E5E5"> yes you</font>

1143
00:47:42,400 --> 00:47:45,789
will notice the latency<font color="#E5E5E5"> there of course</font>

1144
00:47:44,200 --> 00:47:47,460
<font color="#E5E5E5">but mostly</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> you have multiple</font>

1145
00:47:45,789 --> 00:48:23,980
concurrent things and things like an

1146
00:47:47,460 --> 00:48:25,950
optimization to minimize it so<font color="#CCCCCC"> the</font>

1147
00:48:23,980 --> 00:48:28,450
question<font color="#CCCCCC"> is</font><font color="#E5E5E5"> read replicas can you create</font>

1148
00:48:25,950 --> 00:48:30,759
separate indexes on the<font color="#CCCCCC"> read replicas</font>

1149
00:48:28,450 --> 00:48:32,259
and if you are using the streaming<font color="#CCCCCC"> any</font>

1150
00:48:30,760 --> 00:48:35,109
<font color="#E5E5E5">streaming application then the answer is</font>

1151
00:48:32,260 --> 00:48:36,760
<font color="#E5E5E5">no you can't you</font><font color="#CCCCCC"> are unfortunately</font>

1152
00:48:35,109 --> 00:48:39,160
<font color="#E5E5E5">correct in that you cannot do</font><font color="#CCCCCC"> that now</font>

1153
00:48:36,760 --> 00:48:41,049
if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> use a logical replication then</font>

1154
00:48:39,160 --> 00:48:42,549
you can put separate indexes on the

1155
00:48:41,049 --> 00:48:46,270
receiving<font color="#E5E5E5"> side</font><font color="#CCCCCC"> but in the physical</font>

1156
00:48:42,549 --> 00:48:52,380
<font color="#E5E5E5">replication you cannot it's completely</font>

1157
00:48:46,270 --> 00:48:52,380
read-only anywhere<font color="#E5E5E5"> else</font>

1158
00:48:58,200 --> 00:49:22,348
yes<font color="#E5E5E5"> give</font><font color="#CCCCCC"> us a challenge for example</font>

1159
00:49:22,680 --> 00:49:26,618
<font color="#CCCCCC">different</font><font color="#E5E5E5"> story that's a usable thing</font>

1160
00:49:24,880 --> 00:49:28,809
<font color="#E5E5E5">but it is has</font><font color="#CCCCCC"> the ability to</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> that</font>

1161
00:49:26,619 --> 00:49:31,240
<font color="#E5E5E5">statement level replication</font><font color="#CCCCCC"> in PG Pugh</font>

1162
00:49:28,809 --> 00:49:32,259
<font color="#E5E5E5">and here my recommendation</font><font color="#CCCCCC"> map really is</font>

1163
00:49:31,240 --> 00:49:36,118
don't use it

1164
00:49:32,259 --> 00:49:36,119
but the rest of PG pool is much<font color="#E5E5E5"> better</font>

1165
00:49:40,630 --> 00:49:49,860
[Applause]

1166
00:49:54,730 --> 00:49:57,730
<font color="#E5E5E5">yeah</font>

