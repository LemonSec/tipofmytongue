1
00:00:04,950 --> 00:00:11,080
hi<font color="#E5E5E5"> everyone I'm gay Benson</font><font color="#CCCCCC"> jieb</font><font color="#E5E5E5"> and so I</font>

2
00:00:08,710 --> 00:00:15,160
see usually I work for Red Hat on the

3
00:00:11,080 --> 00:00:18,550
<font color="#CCCCCC">debugger team basically on TV for the</font>

4
00:00:15,160 --> 00:00:29,140
<font color="#E5E5E5">past few</font><font color="#CCCCCC"> years and the</font><font color="#E5E5E5"> projects</font><font color="#CCCCCC"> I've</font>

5
00:00:18,550 --> 00:00:32,168
<font color="#E5E5E5">been working on is called infinity sorry</font>

6
00:00:29,140 --> 00:00:36,129
<font color="#E5E5E5">okay I'll speak louder</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so</font>

7
00:00:32,168 --> 00:00:38,980
first<font color="#E5E5E5"> up what is infinity there's a</font>

8
00:00:36,129 --> 00:00:40,809
little kind<font color="#E5E5E5"> of single sentence it's a</font>

9
00:00:38,980 --> 00:00:43,059
platform independent system<font color="#CCCCCC"> that</font>

10
00:00:40,809 --> 00:00:47,409
basically<font color="#CCCCCC"> its platform</font><font color="#E5E5E5"> independent</font>

11
00:00:43,059 --> 00:00:50,498
system for applications<font color="#CCCCCC"> to expose some</font>

12
00:00:47,409 --> 00:00:54,479
extra functions to software development

13
00:00:50,499 --> 00:00:56,799
<font color="#CCCCCC">tools like you know debuggers monitors</font>

14
00:00:54,479 --> 00:01:00,280
another analysis tool

15
00:00:56,799 --> 00:01:01,929
so I guess throughout this talking<font color="#E5E5E5"> and I</font>

16
00:01:00,280 --> 00:01:04,180
say you<font color="#E5E5E5"> know infinity is tool agnostic</font>

17
00:01:01,929 --> 00:01:06,360
it's not aimed at<font color="#E5E5E5"> any particular tool</font>

18
00:01:04,180 --> 00:01:08,440
but I'm<font color="#E5E5E5"> probably going to say</font><font color="#CCCCCC"> GD</font><font color="#E5E5E5"> being</font>

19
00:01:06,360 --> 00:01:10,439
<font color="#E5E5E5">debugger a lot because that's kind of</font>

20
00:01:08,440 --> 00:01:15,158
where I'm<font color="#CCCCCC"> coming from</font>

21
00:01:10,439 --> 00:01:21,820
so that's what it<font color="#CCCCCC"> is why why do you need</font>

22
00:01:15,159 --> 00:01:23,859
it some some aspects of some

23
00:01:21,820 --> 00:01:27,669
applications need to<font color="#CCCCCC"> be kind of</font>

24
00:01:23,859 --> 00:01:31,359
understood by by the<font color="#CCCCCC"> tools in your</font><font color="#E5E5E5"> user</font>

25
00:01:27,670 --> 00:01:34,329
so for example you may<font color="#CCCCCC"> be working</font><font color="#E5E5E5"> on an</font>

26
00:01:31,359 --> 00:01:40,030
application<font color="#CCCCCC"> and it's using multiple</font>

27
00:01:34,329 --> 00:01:41,770
threats and on your platform the the

28
00:01:40,030 --> 00:01:44,770
<font color="#CCCCCC">threading functionality is provided by a</font>

29
00:01:41,770 --> 00:01:49,479
<font color="#E5E5E5">lid psi which</font><font color="#CCCCCC"> is the the threaded</font>

30
00:01:44,770 --> 00:01:51,600
library so if<font color="#E5E5E5"> you're you so any any</font>

31
00:01:49,479 --> 00:01:54,130
tools<font color="#E5E5E5"> that you then use to connect to</font>

32
00:01:51,600 --> 00:01:55,749
examine<font color="#E5E5E5"> this application they need to</font>

33
00:01:54,130 --> 00:01:57,908
know that<font color="#CCCCCC"> if they see Lippe thread dot</font>

34
00:01:55,749 --> 00:02:00,189
si<font color="#CCCCCC"> if they see the thread in library</font>

35
00:01:57,909 --> 00:02:03,609
<font color="#E5E5E5">then your application</font><font color="#CCCCCC"> is intimate extra</font>

36
00:02:00,189 --> 00:02:06,329
and they need to they need<font color="#CCCCCC"> to do this</font>

37
00:02:03,609 --> 00:02:08,919
extra<font color="#E5E5E5"> bit which for the thread library</font>

38
00:02:06,329 --> 00:02:10,470
<font color="#E5E5E5">there's a second library the thread</font>

39
00:02:08,919 --> 00:02:13,209
debugging library which that<font color="#CCCCCC"> knew all</font>

40
00:02:10,470 --> 00:02:15,640
that<font color="#E5E5E5"> the tool the debugger or whatever</font>

41
00:02:13,210 --> 00:02:17,850
has to<font color="#E5E5E5"> then find the load and it can use</font>

42
00:02:15,640 --> 00:02:21,029
<font color="#E5E5E5">these</font><font color="#CCCCCC"> functions and to introspect</font><font color="#E5E5E5"> your</font>

43
00:02:17,850 --> 00:02:22,620
vacation and find out<font color="#E5E5E5"> in this case the</font>

44
00:02:21,030 --> 00:02:27,420
threads<font color="#E5E5E5"> that your application</font><font color="#CCCCCC"> students</font>

45
00:02:22,620 --> 00:02:28,590
so as they're in<font color="#E5E5E5"> the kind of diagram it</font>

46
00:02:27,420 --> 00:02:32,609
looks<font color="#CCCCCC"> like this so you've got your</font>

47
00:02:28,590 --> 00:02:36,300
application<font color="#CCCCCC"> up there on the</font><font color="#E5E5E5"> left and the</font>

48
00:02:32,610 --> 00:02:37,950
tool the debugger<font color="#E5E5E5"> the monitor is access</font>

49
00:02:36,300 --> 00:02:41,760
in your<font color="#E5E5E5"> application somehow and that's</font>

50
00:02:37,950 --> 00:02:43,859
the red<font color="#CCCCCC"> line and</font><font color="#E5E5E5"> the tool</font><font color="#CCCCCC"> has loaded the</font>

51
00:02:41,760 --> 00:02:45,690
<font color="#CCCCCC">thread debugging library to see</font><font color="#E5E5E5"> what</font>

52
00:02:43,860 --> 00:02:49,140
your application is doing with the

53
00:02:45,690 --> 00:02:51,510
<font color="#E5E5E5">thread in library so already there's</font>

54
00:02:49,140 --> 00:02:54,420
there's a fair amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> knowledge</font><font color="#E5E5E5"> that</font>

55
00:02:51,510 --> 00:02:55,799
we're<font color="#CCCCCC"> baking into thee that has to be</font>

56
00:02:54,420 --> 00:03:00,600
baked into<font color="#E5E5E5"> the tool to make all this</font>

57
00:02:55,800 --> 00:03:01,980
work<font color="#CCCCCC"> so any tools</font><font color="#E5E5E5"> that are going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> deal</font>

58
00:03:00,600 --> 00:03:03,329
<font color="#CCCCCC">with</font><font color="#E5E5E5"> threaded applications here need to</font>

59
00:03:01,980 --> 00:03:04,799
know that if they see the third library

60
00:03:03,330 --> 00:03:07,740
<font color="#E5E5E5">then they need to load</font><font color="#CCCCCC"> the third</font>

61
00:03:04,800 --> 00:03:09,780
debugging library and they also need to

62
00:03:07,740 --> 00:03:11,190
<font color="#CCCCCC">know that if if your application</font><font color="#E5E5E5"> is</font>

63
00:03:09,780 --> 00:03:12,990
statically linked that it may be

64
00:03:11,190 --> 00:03:16,130
threaded anyway<font color="#E5E5E5"> so it may need the</font>

65
00:03:12,990 --> 00:03:16,130
thread debugging library anyway

66
00:03:17,150 --> 00:03:24,780
the tools all need to know<font color="#CCCCCC"> where to</font><font color="#E5E5E5"> find</font>

67
00:03:20,610 --> 00:03:26,520
the thread debugging library with that

68
00:03:24,780 --> 00:03:30,720
relates<font color="#E5E5E5"> to the threading library that</font>

69
00:03:26,520 --> 00:03:35,640
you've loaded<font color="#E5E5E5"> and there's no there's no</font>

70
00:03:30,720 --> 00:03:40,380
<font color="#E5E5E5">standard way</font><font color="#CCCCCC"> to do all</font><font color="#E5E5E5"> this is it's just</font>

71
00:03:35,640 --> 00:03:41,850
a<font color="#CCCCCC"> pattern so</font><font color="#E5E5E5"> they're you know</font><font color="#CCCCCC"> the thread</font>

72
00:03:40,380 --> 00:03:44,490
<font color="#CCCCCC">lipfird to be the thread you building</font>

73
00:03:41,850 --> 00:03:45,840
<font color="#E5E5E5">like but it's just one one</font><font color="#CCCCCC"> example of a</font>

74
00:03:44,490 --> 00:03:48,030
debug like but it's probably<font color="#E5E5E5"> the most</font>

75
00:03:45,840 --> 00:03:50,720
<font color="#CCCCCC">common but there are other</font><font color="#E5E5E5"> there are</font>

76
00:03:48,030 --> 00:03:55,230
other debug libraries that are<font color="#E5E5E5"> used to</font>

77
00:03:50,720 --> 00:03:58,710
examine<font color="#E5E5E5"> runtime linker internals and</font><font color="#CCCCCC"> the</font>

78
00:03:55,230 --> 00:04:01,769
open and<font color="#CCCCCC"> openmp the paralyzation stuff</font>

79
00:03:58,710 --> 00:04:05,580
is either proposin or have<font color="#E5E5E5"> written their</font>

80
00:04:01,770 --> 00:04:07,860
own debug library and this so<font color="#E5E5E5"> this kind</font>

81
00:04:05,580 --> 00:04:09,390
of stuff has to be you<font color="#CCCCCC"> know each each</font>

82
00:04:07,860 --> 00:04:12,000
debug library has to be written kind of

83
00:04:09,390 --> 00:04:14,640
individually and the rules for<font color="#CCCCCC"> finding</font>

84
00:04:12,000 --> 00:04:17,760
the<font color="#E5E5E5"> debug that we have to be written and</font>

85
00:04:14,640 --> 00:04:20,130
also<font color="#CCCCCC"> if I have to how to check the</font><font color="#E5E5E5"> kind</font>

86
00:04:17,760 --> 00:04:21,120
of versions like the<font color="#E5E5E5"> Lib that the</font>

87
00:04:20,130 --> 00:04:23,820
threading library and the thread

88
00:04:21,120 --> 00:04:25,710
debugging library kind of debugging

89
00:04:23,820 --> 00:04:27,060
<font color="#CCCCCC">libraries</font><font color="#E5E5E5"> looking at internal structures</font>

90
00:04:25,710 --> 00:04:28,530
in the threading library so they<font color="#E5E5E5"> have to</font>

91
00:04:27,060 --> 00:04:30,970
make<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that there</font>

92
00:04:28,530 --> 00:04:34,869
for the same versions or whatever in the

93
00:04:30,970 --> 00:04:38,250
same compiler<font color="#E5E5E5"> and all these</font><font color="#CCCCCC"> issues</font><font color="#E5E5E5"> like</font>

94
00:04:34,870 --> 00:04:40,720
can be<font color="#CCCCCC"> and there are currently</font><font color="#E5E5E5"> handled</font>

95
00:04:38,250 --> 00:04:44,470
you know the thread debug library works

96
00:04:40,720 --> 00:04:51,819
and it has for however many years<font color="#E5E5E5"> it's</font>

97
00:04:44,470 --> 00:04:55,810
existed<font color="#E5E5E5"> for most situations</font><font color="#CCCCCC"> so but if</font><font color="#E5E5E5"> I</font>

98
00:04:51,819 --> 00:04:57,250
go back<font color="#CCCCCC"> to the this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the this is</font><font color="#E5E5E5"> a</font>

99
00:04:55,810 --> 00:04:59,460
graphic we just looked at so<font color="#CCCCCC"> that's all</font>

100
00:04:57,250 --> 00:05:02,910
the application<font color="#E5E5E5"> and the two libraries</font>

101
00:04:59,460 --> 00:05:05,799
but this<font color="#CCCCCC"> pictures</font><font color="#E5E5E5"> not complete there's</font>

102
00:05:02,910 --> 00:05:07,750
in<font color="#CCCCCC"> here also</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> C library that the</font>

103
00:05:05,800 --> 00:05:09,160
system<font color="#E5E5E5"> C library so your application</font><font color="#CCCCCC"> is</font>

104
00:05:07,750 --> 00:05:10,840
linked<font color="#E5E5E5"> to the C</font><font color="#CCCCCC"> library the thread in</font>

105
00:05:09,160 --> 00:05:12,400
libraries<font color="#CCCCCC"> linked to the C library and</font>

106
00:05:10,840 --> 00:05:14,549
your tool is linked to the C<font color="#E5E5E5"> library and</font>

107
00:05:12,400 --> 00:05:16,780
also<font color="#CCCCCC"> the thread</font><font color="#E5E5E5"> debugging library and</font>

108
00:05:14,550 --> 00:05:18,639
this is fine if<font color="#E5E5E5"> you use in like a</font>

109
00:05:16,780 --> 00:05:20,289
<font color="#E5E5E5">homogeneous environment</font><font color="#CCCCCC"> if you know</font>

110
00:05:18,639 --> 00:05:21,460
everything's running<font color="#CCCCCC"> on your laptop or</font>

111
00:05:20,289 --> 00:05:25,990
<font color="#CCCCCC">everything's running</font><font color="#E5E5E5"> on one computer</font>

112
00:05:21,460 --> 00:05:27,789
<font color="#CCCCCC">somewhere but it's not fine in a</font>

113
00:05:25,990 --> 00:05:30,159
heterogeneous<font color="#E5E5E5"> environment so if you have</font>

114
00:05:27,789 --> 00:05:31,900
different architectures say<font color="#E5E5E5"> you know</font>

115
00:05:30,159 --> 00:05:34,150
your tool is running on your<font color="#E5E5E5"> laptop and</font>

116
00:05:31,900 --> 00:05:40,150
<font color="#CCCCCC">your application is on some AR x64</font>

117
00:05:34,150 --> 00:05:41,799
server<font color="#E5E5E5"> somewhere or and it's also not it</font>

118
00:05:40,150 --> 00:05:43,330
also<font color="#E5E5E5"> doesn't work in containers where</font>

119
00:05:41,800 --> 00:05:47,320
maybe all<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is running on the</font><font color="#E5E5E5"> same</font>

120
00:05:43,330 --> 00:05:49,270
<font color="#CCCCCC">computer</font><font color="#E5E5E5"> but the the C library</font><font color="#CCCCCC"> and your</font>

121
00:05:47,320 --> 00:05:50,979
applications container is not<font color="#E5E5E5"> the same</font>

122
00:05:49,270 --> 00:05:57,460
as the<font color="#E5E5E5"> C library</font><font color="#CCCCCC"> in your tool container</font>

123
00:05:50,979 --> 00:05:59,050
<font color="#E5E5E5">and in this in this</font><font color="#CCCCCC"> particular case the</font>

124
00:05:57,460 --> 00:06:00,580
<font color="#E5E5E5">C library</font><font color="#CCCCCC"> is going to look</font><font color="#E5E5E5"> like it's the</font>

125
00:05:59,050 --> 00:06:01,840
correct architecture but it may<font color="#E5E5E5"> well be</font>

126
00:06:00,580 --> 00:06:05,740
built<font color="#E5E5E5"> for a different</font><font color="#CCCCCC"> operating system</font>

127
00:06:01,840 --> 00:06:07,659
<font color="#CCCCCC">and it may well then just it may</font><font color="#E5E5E5"> just</font>

128
00:06:05,740 --> 00:06:12,070
crash a debugger when you load it<font color="#CCCCCC"> so</font>

129
00:06:07,659 --> 00:06:15,750
this<font color="#E5E5E5"> is kind of this is</font><font color="#CCCCCC"> kind of why I've</font>

130
00:06:12,070 --> 00:06:15,750
started<font color="#E5E5E5"> been working on this project</font>

131
00:06:15,930 --> 00:06:22,810
<font color="#E5E5E5">obviously you can make</font><font color="#CCCCCC"> special builds of</font>

132
00:06:19,360 --> 00:06:24,340
<font color="#E5E5E5">the debug libraries that you know it's</font>

133
00:06:22,810 --> 00:06:26,199
built for<font color="#E5E5E5"> this thread library but it's</font>

134
00:06:24,340 --> 00:06:28,119
linked<font color="#E5E5E5"> again this against that thread</font>

135
00:06:26,199 --> 00:06:32,440
library<font color="#E5E5E5"> but then you have a kind of</font>

136
00:06:28,120 --> 00:06:34,300
matrix<font color="#E5E5E5"> of different builds of the debug</font>

137
00:06:32,440 --> 00:06:36,210
library<font color="#E5E5E5"> that you have to maintain</font><font color="#CCCCCC"> and it</font>

138
00:06:34,300 --> 00:06:38,140
kind of gets out of hand

139
00:06:36,210 --> 00:06:44,560
so

140
00:06:38,140 --> 00:06:45,760
so<font color="#E5E5E5"> okay so in order to in order to kind</font>

141
00:06:44,560 --> 00:06:48,550
of replace<font color="#CCCCCC"> that third degree with</font>

142
00:06:45,760 --> 00:06:50,670
something else<font color="#E5E5E5"> can I have a look at like</font>

143
00:06:48,550 --> 00:06:53,170
<font color="#CCCCCC">what does what does look for a DVD</font><font color="#E5E5E5"> well</font>

144
00:06:50,670 --> 00:06:58,540
it export it has a bunch of<font color="#E5E5E5"> functions</font>

145
00:06:53,170 --> 00:07:02,500
that<font color="#E5E5E5"> it exports to the tool so they will</font>

146
00:06:58,540 --> 00:07:04,330
in in the<font color="#CCCCCC"> thread debug in the in</font><font color="#E5E5E5"> terms</font>

147
00:07:02,500 --> 00:07:05,520
of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> functions that gdb uses in the</font>

148
00:07:04,330 --> 00:07:08,440
<font color="#E5E5E5">third debugging library</font><font color="#CCCCCC"> they're all</font>

149
00:07:05,520 --> 00:07:10,000
information<font color="#CCCCCC"> to get they're</font><font color="#E5E5E5"> all functions</font>

150
00:07:08,440 --> 00:07:13,960
to<font color="#E5E5E5"> get information about a specific</font>

151
00:07:10,000 --> 00:07:15,610
thread or<font color="#CCCCCC"> two and there's a there's a</font>

152
00:07:13,960 --> 00:07:19,780
function<font color="#CCCCCC"> that allows it</font><font color="#E5E5E5"> to iterate over</font>

153
00:07:15,610 --> 00:07:22,770
<font color="#E5E5E5">all the threads but unlike a lot of</font>

154
00:07:19,780 --> 00:07:25,510
other libraries<font color="#CCCCCC"> lib thread DB is kind of</font>

155
00:07:22,770 --> 00:07:26,950
<font color="#E5E5E5">it's like double ended it exports</font>

156
00:07:25,510 --> 00:07:31,140
functions to the<font color="#E5E5E5"> tool but it also</font>

157
00:07:26,950 --> 00:07:31,140
<font color="#E5E5E5">imports functions back from the tool so</font>

158
00:07:31,890 --> 00:07:38,919
it's it's kind<font color="#CCCCCC"> of important amongst the</font>

159
00:07:35,920 --> 00:07:42,400
functions for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> tools</font><font color="#CCCCCC"> so the debugger</font>

160
00:07:38,920 --> 00:07:43,810
or whatever would say can I<font color="#E5E5E5"> have the I</font>

161
00:07:42,400 --> 00:07:45,969
don't<font color="#CCCCCC"> know the priority of</font><font color="#E5E5E5"> this</font>

162
00:07:43,810 --> 00:07:47,650
particular thread<font color="#E5E5E5"> and then the third</font>

163
00:07:45,970 --> 00:07:51,010
debugging library then comes back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

164
00:07:47,650 --> 00:07:53,200
the tool<font color="#E5E5E5"> and says okay can I</font><font color="#CCCCCC"> have the</font>

165
00:07:51,010 --> 00:07:54,520
can<font color="#E5E5E5"> I have the contents of this block of</font>

166
00:07:53,200 --> 00:07:56,320
<font color="#CCCCCC">memory or</font><font color="#E5E5E5"> can I have the registers of</font>

167
00:07:54,520 --> 00:07:57,450
<font color="#E5E5E5">can I have this register from this</font>

168
00:07:56,320 --> 00:07:59,650
thread

169
00:07:57,450 --> 00:08:02,440
so the third debugging<font color="#CCCCCC"> library is</font>

170
00:07:59,650 --> 00:08:05,229
essentially<font color="#E5E5E5"> drive in the debugger</font><font color="#CCCCCC"> the</font>

171
00:08:02,440 --> 00:08:06,790
the tool<font color="#CCCCCC"> the just kind of</font><font color="#E5E5E5"> handing over</font>

172
00:08:05,230 --> 00:08:09,730
the steering wheel<font color="#E5E5E5"> to the third debug</font>

173
00:08:06,790 --> 00:08:11,800
library just<font color="#E5E5E5"> for a little</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> and then</font>

174
00:08:09,730 --> 00:08:16,300
it comes back<font color="#E5E5E5"> with whatever that that</font>

175
00:08:11,800 --> 00:08:18,490
the debugger<font color="#CCCCCC"> is asked for and the</font>

176
00:08:16,300 --> 00:08:26,010
solution<font color="#CCCCCC"> that I've kind of been working</font>

177
00:08:18,490 --> 00:08:29,110
on for infinity<font color="#CCCCCC"> is to have</font>

178
00:08:26,010 --> 00:08:31,210
<font color="#E5E5E5">platform-independent functions the kind</font>

179
00:08:29,110 --> 00:08:35,440
<font color="#E5E5E5">of equivalent of what the</font><font color="#CCCCCC"> thread debug</font>

180
00:08:31,210 --> 00:08:37,750
<font color="#CCCCCC">lobby</font><font color="#E5E5E5"> has stored in the actual</font><font color="#CCCCCC"> library</font>

181
00:08:35,440 --> 00:08:40,479
so in in<font color="#E5E5E5"> lib</font><font color="#CCCCCC"> P thread for instance if</font>

182
00:08:37,750 --> 00:08:41,770
you have your you know<font color="#CCCCCC"> your application</font>

183
00:08:40,479 --> 00:08:44,590
is<font color="#E5E5E5"> using the thread library the third</font>

184
00:08:41,770 --> 00:08:47,140
library contains the actual thread

185
00:08:44,590 --> 00:08:48,700
<font color="#E5E5E5">library code that it</font><font color="#CCCCCC"> usually doesn't as</font>

186
00:08:47,140 --> 00:08:50,850
well it<font color="#E5E5E5"> has these little functions that</font>

187
00:08:48,700 --> 00:08:50,850
allow

188
00:08:51,160 --> 00:08:56,990
allow<font color="#CCCCCC"> a debugger tool to call into it</font>

189
00:08:54,500 --> 00:09:02,529
and say what is this and it would come

190
00:08:56,990 --> 00:09:04,779
<font color="#CCCCCC">back</font><font color="#E5E5E5"> so this approach have having</font>

191
00:09:02,529 --> 00:09:08,660
platform-independent functions in the

192
00:09:04,779 --> 00:09:10,939
actual the kind<font color="#E5E5E5"> of regular library means</font>

193
00:09:08,660 --> 00:09:12,500
that<font color="#CCCCCC"> locating</font><font color="#E5E5E5"> the functions is trivial</font>

194
00:09:10,940 --> 00:09:15,920
<font color="#CCCCCC">like</font><font color="#E5E5E5"> if your applications using</font><font color="#CCCCCC"> this</font>

195
00:09:12,500 --> 00:09:18,230
library then that the tool can see that

196
00:09:15,920 --> 00:09:21,189
here's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lab</font><font color="#E5E5E5"> Europe here's the actual</font>

197
00:09:18,230 --> 00:09:23,570
<font color="#E5E5E5">file the library that</font><font color="#CCCCCC"> your is that</font><font color="#E5E5E5"> your</font>

198
00:09:21,190 --> 00:09:26,839
<font color="#E5E5E5">application is</font><font color="#CCCCCC"> using and here in</font><font color="#E5E5E5"> that</font>

199
00:09:23,570 --> 00:09:32,240
file is these<font color="#CCCCCC"> infinity functions I can</font>

200
00:09:26,839 --> 00:09:34,190
<font color="#CCCCCC">use it also means that</font><font color="#E5E5E5"> the tools don't</font>

201
00:09:32,240 --> 00:09:36,110
need to know<font color="#E5E5E5"> that some particular</font>

202
00:09:34,190 --> 00:09:39,260
library<font color="#E5E5E5"> is accessed via some other</font>

203
00:09:36,110 --> 00:09:41,360
<font color="#E5E5E5">particular debug library if it if you're</font>

204
00:09:39,260 --> 00:09:44,920
if you can if you connect your

205
00:09:41,360 --> 00:09:44,920
<font color="#E5E5E5">application with a debugger and it finds</font>

206
00:09:45,070 --> 00:09:49,670
<font color="#CCCCCC">Infinity functions to access certain</font>

207
00:09:47,269 --> 00:09:51,829
<font color="#CCCCCC">thread and things then it knows that</font>

208
00:09:49,670 --> 00:09:54,680
<font color="#CCCCCC">okay your</font><font color="#E5E5E5"> application is maybe thread in</font>

209
00:09:51,829 --> 00:09:58,279
so I'll maybe call these<font color="#E5E5E5"> functions to</font>

210
00:09:54,680 --> 00:10:00,849
<font color="#CCCCCC">find out what</font><font color="#E5E5E5"> about it</font><font color="#CCCCCC"> I'm going to edit</font>

211
00:09:58,279 --> 00:10:00,850
<font color="#E5E5E5">myself a little bit</font>

212
00:10:02,200 --> 00:10:07,690
yeah sorry and also this<font color="#E5E5E5"> this method</font>

213
00:10:06,040 --> 00:10:08,889
works nicely with static<font color="#E5E5E5"> linking it it</font>

214
00:10:07,690 --> 00:10:10,990
<font color="#E5E5E5">doesn't really matter where the</font>

215
00:10:08,889 --> 00:10:14,589
functions are where the where the

216
00:10:10,990 --> 00:10:16,769
<font color="#E5E5E5">infinity functions are so if you if your</font>

217
00:10:14,589 --> 00:10:19,570
library<font color="#E5E5E5"> got its threading code from</font>

218
00:10:16,769 --> 00:10:21,220
dynamically<font color="#E5E5E5"> loading the P</font><font color="#CCCCCC"> for so then</font>

219
00:10:19,570 --> 00:10:23,079
the debugger can see that if your

220
00:10:21,220 --> 00:10:25,019
library<font color="#E5E5E5"> doc the thread and if your</font>

221
00:10:23,079 --> 00:10:27,219
application<font color="#CCCCCC"> got the threading</font><font color="#E5E5E5"> library</font>

222
00:10:25,019 --> 00:10:28,750
because it was statically linked in and

223
00:10:27,220 --> 00:10:32,470
<font color="#E5E5E5">as long</font><font color="#CCCCCC"> as the Infinity functions have</font>

224
00:10:28,750 --> 00:10:37,120
followed it then<font color="#CCCCCC"> the debugger can</font><font color="#E5E5E5"> see</font>

225
00:10:32,470 --> 00:10:46,329
that and graphically<font color="#E5E5E5"> this this looks</font>

226
00:10:37,120 --> 00:10:50,860
like<font color="#E5E5E5"> that yeah this is kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that as a</font>

227
00:10:46,329 --> 00:10:52,060
graphic there's no<font color="#E5E5E5"> kind of separate</font>

228
00:10:50,860 --> 00:10:59,699
library you<font color="#CCCCCC"> just have your</font><font color="#E5E5E5"> debug</font>

229
00:10:52,060 --> 00:11:02,410
functions<font color="#CCCCCC"> in the regular library</font><font color="#E5E5E5"> so what</font>

230
00:10:59,699 --> 00:11:04,859
can this<font color="#CCCCCC"> be useful the obvious</font><font color="#E5E5E5"> first</font>

231
00:11:02,410 --> 00:11:07,390
case is fed debugging<font color="#CCCCCC"> because that's the</font>

232
00:11:04,860 --> 00:11:09,390
the one that<font color="#E5E5E5"> I've been kind of working</font>

233
00:11:07,390 --> 00:11:12,870
on already

234
00:11:09,390 --> 00:11:15,220
another<font color="#E5E5E5"> potential uses for when</font>

235
00:11:12,870 --> 00:11:19,540
applications load libraries into

236
00:11:15,220 --> 00:11:21,579
different<font color="#CCCCCC"> Lincoln namespaces which has</font>

237
00:11:19,540 --> 00:11:26,560
been relatively uncommon on on Linux at

238
00:11:21,579 --> 00:11:28,599
least for up until<font color="#CCCCCC"> now</font><font color="#E5E5E5"> maybe because it</font>

239
00:11:26,560 --> 00:11:33,459
didn't work<font color="#CCCCCC"> properly in gdb see but it's</font>

240
00:11:28,600 --> 00:11:35,649
been fixed<font color="#E5E5E5"> so the applications are</font>

241
00:11:33,459 --> 00:11:38,920
basically the debugger would at the

242
00:11:35,649 --> 00:11:40,360
moment if a debugger loads<font color="#E5E5E5"> if the</font>

243
00:11:38,920 --> 00:11:43,180
<font color="#E5E5E5">application loads a library in a</font>

244
00:11:40,360 --> 00:11:45,040
different name space then<font color="#E5E5E5"> gdb at least</font>

245
00:11:43,180 --> 00:11:48,550
won't see that and there's no way for

246
00:11:45,040 --> 00:11:51,699
the<font color="#E5E5E5"> C library</font><font color="#CCCCCC"> C Lib C that has no way to</font>

247
00:11:48,550 --> 00:11:54,339
export<font color="#E5E5E5"> that so as far as gdb since any</font>

248
00:11:51,699 --> 00:11:58,839
program has gone<font color="#E5E5E5"> off into some code that</font>

249
00:11:54,339 --> 00:12:00,639
<font color="#E5E5E5">it has no idea</font><font color="#CCCCCC"> what it is another</font>

250
00:11:58,839 --> 00:12:06,970
potential<font color="#E5E5E5"> use</font><font color="#CCCCCC"> I mentioned earlier is</font>

251
00:12:00,639 --> 00:12:12,279
<font color="#CCCCCC">OpenMP which has its own debug library</font>

252
00:12:06,970 --> 00:12:13,690
to access<font color="#CCCCCC"> various things about for what</font>

253
00:12:12,279 --> 00:12:17,260
it's<font color="#E5E5E5"> doing</font>

254
00:12:13,690 --> 00:12:20,170
<font color="#CCCCCC">a talent ease and address sanitizer and</font>

255
00:12:17,260 --> 00:12:24,850
thread sanitizer from clang clang -

256
00:12:20,170 --> 00:12:27,969
people say clang yeah<font color="#E5E5E5"> they currently use</font>

257
00:12:24,850 --> 00:12:31,720
hacks to calculate things<font color="#E5E5E5"> that are not</font>

258
00:12:27,970 --> 00:12:36,130
exported<font color="#CCCCCC"> and these kind of things where</font>

259
00:12:31,720 --> 00:12:37,810
our tool bakes<font color="#E5E5E5"> in knowledge of the kind</font>

260
00:12:36,130 --> 00:12:39,939
<font color="#E5E5E5">of internals of something else's is</font>

261
00:12:37,810 --> 00:12:45,130
there really like it's the kind of basic

262
00:12:39,940 --> 00:12:47,680
use case<font color="#CCCCCC"> for it and the final potential</font>

263
00:12:45,130 --> 00:12:50,740
<font color="#CCCCCC">use I thought so far as pretty printers</font>

264
00:12:47,680 --> 00:12:55,030
that<font color="#E5E5E5"> gilepsy has like currently</font><font color="#CCCCCC"> they're</font>

265
00:12:50,740 --> 00:12:56,740
written in Python and the actual<font color="#CCCCCC"> Python</font>

266
00:12:55,030 --> 00:12:58,630
code has two parts one<font color="#E5E5E5"> part is that</font>

267
00:12:56,740 --> 00:13:00,280
finding<font color="#E5E5E5"> the thing you're trying to print</font>

268
00:12:58,630 --> 00:13:06,520
<font color="#E5E5E5">and the other part is actually printing</font>

269
00:13:00,280 --> 00:13:07,810
it so the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> printing bit as obviously</font>

270
00:13:06,520 --> 00:13:09,880
would still stay in Python<font color="#E5E5E5"> but the</font>

271
00:13:07,810 --> 00:13:11,290
actual<font color="#CCCCCC"> the bit of finding it</font><font color="#E5E5E5"> encoded in</font>

272
00:13:09,880 --> 00:13:18,850
all the structure offsets and stuff is

273
00:13:11,290 --> 00:13:21,910
<font color="#E5E5E5">really nicely suited for infinity so the</font>

274
00:13:18,850 --> 00:13:29,230
what are<font color="#E5E5E5"> the components of this there's</font>

275
00:13:21,910 --> 00:13:31,540
a compiler which takes kind of a kind<font color="#CCCCCC"> of</font>

276
00:13:29,230 --> 00:13:34,060
textual source and turns it into dwarf

277
00:13:31,540 --> 00:13:36,400
bytecode wrapped in a<font color="#E5E5E5"> little chunk</font><font color="#CCCCCC"> that</font>

278
00:13:34,060 --> 00:13:38,979
goes inside<font color="#E5E5E5"> the binary or shared library</font>

279
00:13:36,400 --> 00:13:44,410
<font color="#E5E5E5">and there's also a tester which allows</font>

280
00:13:38,980 --> 00:13:46,300
you to write unit tests and it allows

281
00:13:44,410 --> 00:13:50,650
you the<font color="#CCCCCC"> ledges write</font><font color="#E5E5E5"> basically unit</font>

282
00:13:46,300 --> 00:13:52,540
tests<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> function itself at the</font>

283
00:13:50,650 --> 00:13:54,459
same time which I kind of think is

284
00:13:52,540 --> 00:13:59,110
pretty important because these functions

285
00:13:54,460 --> 00:14:01,150
<font color="#E5E5E5">are kind of a tool in so like you know</font>

286
00:13:59,110 --> 00:14:04,390
they're<font color="#E5E5E5"> for software development</font><font color="#CCCCCC"> also it</font>

287
00:14:01,150 --> 00:14:09,329
puts<font color="#E5E5E5"> a kind of like a late discovery of</font>

288
00:14:04,390 --> 00:14:11,350
error into it where<font color="#E5E5E5"> so say it could if</font>

289
00:14:09,330 --> 00:14:13,240
things<font color="#E5E5E5"> like the thread debugging</font>

290
00:14:11,350 --> 00:14:15,880
functions in<font color="#E5E5E5"> G</font><font color="#CCCCCC"> Lipsy will not really</font>

291
00:14:13,240 --> 00:14:17,470
going to<font color="#E5E5E5"> be used in G</font><font color="#CCCCCC"> Lipsy until you</font>

292
00:14:15,880 --> 00:14:19,060
start debugging an application with it

293
00:14:17,470 --> 00:14:21,580
so it could<font color="#CCCCCC"> potentially have a deal if</font>

294
00:14:19,060 --> 00:14:23,170
she gets built<font color="#E5E5E5"> and shipped and it has if</font>

295
00:14:21,580 --> 00:14:25,310
<font color="#E5E5E5">it has a broken thread debug</font><font color="#CCCCCC"> doubt then</font>

296
00:14:23,170 --> 00:14:27,349
the first thing<font color="#E5E5E5"> you're going to find is</font>

297
00:14:25,310 --> 00:14:30,079
if someone user tries to debug something

298
00:14:27,350 --> 00:14:31,970
<font color="#CCCCCC">and it the thread debugging is broken so</font>

299
00:14:30,079 --> 00:14:36,729
I wanted<font color="#E5E5E5"> to make it as easy as possible</font>

300
00:14:31,970 --> 00:14:41,660
for people<font color="#CCCCCC"> to write complete</font><font color="#E5E5E5"> test cases</font>

301
00:14:36,730 --> 00:14:45,199
<font color="#CCCCCC">in the code</font><font color="#E5E5E5"> dish yet the other thing</font>

302
00:14:41,660 --> 00:14:46,519
<font color="#E5E5E5">there's a client</font><font color="#CCCCCC"> library which is it's</font>

303
00:14:45,199 --> 00:14:49,699
written<font color="#E5E5E5"> in C and</font><font color="#CCCCCC"> that kind of help</font>

304
00:14:46,519 --> 00:14:54,139
allows applications to kind of manage

305
00:14:49,699 --> 00:14:58,099
and execute the functions and I've got

306
00:14:54,139 --> 00:14:59,959
currently a set of a set<font color="#CCCCCC"> of replacements</font>

307
00:14:58,100 --> 00:15:03,519
for the<font color="#CCCCCC"> Lib the red DB functions that</font>

308
00:14:59,959 --> 00:15:08,569
gdb needs<font color="#CCCCCC"> as kind of</font><font color="#E5E5E5"> fiber than I think</font>

309
00:15:03,519 --> 00:15:11,930
and there's also a lot of since I did

310
00:15:08,569 --> 00:15:13,430
this<font color="#E5E5E5"> since I last presented this a lot</font>

311
00:15:11,930 --> 00:15:14,779
<font color="#E5E5E5">of the questions were basing on the</font>

312
00:15:13,430 --> 00:15:17,359
lines<font color="#E5E5E5"> of what we'd really like to use</font>

313
00:15:14,779 --> 00:15:18,920
this but we'd also like to<font color="#E5E5E5"> still have a</font>

314
00:15:17,360 --> 00:15:22,730
lip for<font color="#CCCCCC"> our DB so that we</font><font color="#E5E5E5"> don't have to</font>

315
00:15:18,920 --> 00:15:26,149
change anything<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I've kind</font><font color="#CCCCCC"> of also</font><font color="#E5E5E5"> now</font>

316
00:15:22,730 --> 00:15:29,059
written a I've kind of been integrating

317
00:15:26,149 --> 00:15:36,680
this into G Lipsey's lipfird DB so that

318
00:15:29,059 --> 00:15:39,410
if if you<font color="#E5E5E5"> are if you're trying to debug</font>

319
00:15:36,680 --> 00:15:44,569
<font color="#CCCCCC">a program using</font><font color="#E5E5E5"> telepathy and and you</font>

320
00:15:39,410 --> 00:15:46,910
load lipfird DB that normal<font color="#E5E5E5"> you if if</font>

321
00:15:44,569 --> 00:15:48,920
<font color="#E5E5E5">you</font><font color="#CCCCCC"> live</font><font color="#E5E5E5"> thread DB as infinity support</font>

322
00:15:46,910 --> 00:15:52,240
and<font color="#E5E5E5"> your</font><font color="#CCCCCC"> G lip C has infinity support</font>

323
00:15:48,920 --> 00:15:54,500
then you'll use infinity<font color="#E5E5E5"> rather than</font>

324
00:15:52,240 --> 00:15:57,069
rather<font color="#E5E5E5"> than the kind of existence</font><font color="#CCCCCC"> app</font>

325
00:15:54,500 --> 00:15:57,069
and

326
00:16:02,790 --> 00:16:15,280
it's like a<font color="#E5E5E5"> it's a bytecode interpreter</font>

327
00:16:05,050 --> 00:16:18,790
basically but it doesn't yeah<font color="#CCCCCC"> there is a</font>

328
00:16:15,280 --> 00:16:22,360
<font color="#E5E5E5">callback</font><font color="#CCCCCC"> it doesn't the client library</font>

329
00:16:18,790 --> 00:16:27,520
knows nothing about<font color="#E5E5E5"> elf</font><font color="#CCCCCC"> so I can kind of</font>

330
00:16:22,360 --> 00:16:29,890
anticipate in any program there's any

331
00:16:27,520 --> 00:16:31,390
program that's kind<font color="#CCCCCC"> of looking at</font><font color="#E5E5E5"> by</font>

332
00:16:29,890 --> 00:16:35,830
<font color="#E5E5E5">news and things has already kind of got</font>

333
00:16:31,390 --> 00:16:37,810
some kind of elf decoder<font color="#E5E5E5"> in it so you'll</font>

334
00:16:35,830 --> 00:16:39,310
kind of you<font color="#E5E5E5"> kind of provide the client</font>

335
00:16:37,810 --> 00:16:42,010
<font color="#E5E5E5">library with the notes</font><font color="#CCCCCC"> it's just</font><font color="#E5E5E5"> the</font>

336
00:16:39,310 --> 00:16:44,829
blocks of data that were<font color="#E5E5E5"> you kind of</font>

337
00:16:42,010 --> 00:16:46,210
passively encoded functions which are at

338
00:16:44,830 --> 00:16:50,200
the moment<font color="#E5E5E5"> the only place to</font><font color="#CCCCCC"> find them</font>

339
00:16:46,210 --> 00:16:53,560
is an elf notes<font color="#CCCCCC"> so you have to</font><font color="#E5E5E5"> take that</font>

340
00:16:50,200 --> 00:16:56,860
out<font color="#E5E5E5"> yeah yeah</font><font color="#CCCCCC"> I mean it's not</font><font color="#E5E5E5"> I mean</font>

341
00:16:53,560 --> 00:17:00,520
<font color="#E5E5E5">even there's a certain amount of things</font>

342
00:16:56,860 --> 00:17:03,610
like I'm<font color="#E5E5E5"> gonna dig</font><font color="#CCCCCC"> myself in a hole here</font>

343
00:17:00,520 --> 00:17:05,379
<font color="#E5E5E5">no cuz I'm yeah I mean that there's</font>

344
00:17:03,610 --> 00:17:08,920
there's other stuff as<font color="#CCCCCC"> well like that</font>

345
00:17:05,380 --> 00:17:10,360
<font color="#E5E5E5">you know if if you'll say you like</font><font color="#CCCCCC"> say</font>

346
00:17:08,920 --> 00:17:12,610
you're a debugger<font color="#E5E5E5"> you know accessing</font>

347
00:17:10,359 --> 00:17:14,229
this stuff you it's not<font color="#E5E5E5"> just the actual</font>

348
00:17:12,609 --> 00:17:15,579
<font color="#E5E5E5">those bits of the elf file that you need</font>

349
00:17:14,230 --> 00:17:16,450
<font color="#CCCCCC">you need that others you need other</font>

350
00:17:15,579 --> 00:17:18,280
stuff that<font color="#E5E5E5"> you need to be able to</font>

351
00:17:16,450 --> 00:17:21,069
relocate and stuff like that<font color="#E5E5E5"> who'd be</font>

352
00:17:18,280 --> 00:17:25,089
able<font color="#E5E5E5"> to read the addresses so it's kind</font>

353
00:17:21,069 --> 00:17:27,310
of like<font color="#E5E5E5"> I kind of thought of it</font><font color="#CCCCCC"> I can't</font>

354
00:17:25,089 --> 00:17:28,750
<font color="#E5E5E5">think of a over an applicative way an</font>

355
00:17:27,310 --> 00:17:31,929
application that<font color="#E5E5E5"> would use it that has</font>

356
00:17:28,750 --> 00:17:35,280
not already got this stuff I can't<font color="#E5E5E5"> think</font>

357
00:17:31,930 --> 00:17:38,320
the<font color="#E5E5E5"> application could could could</font>

358
00:17:35,280 --> 00:17:41,470
support<font color="#CCCCCC"> lib threat DB as it is that</font>

359
00:17:38,320 --> 00:17:43,870
already having all this stuff<font color="#E5E5E5"> so I'm any</font>

360
00:17:41,470 --> 00:17:48,970
kind<font color="#E5E5E5"> of other stuff is that extra at</font>

361
00:17:43,870 --> 00:17:52,840
least<font color="#E5E5E5"> future yeah I mentioned okay gdb</font>

362
00:17:48,970 --> 00:17:54,790
<font color="#CCCCCC">integrations last part</font><font color="#E5E5E5"> initially</font><font color="#CCCCCC"> that</font>

363
00:17:52,840 --> 00:17:57,970
<font color="#E5E5E5">was kind of the final component and</font>

364
00:17:54,790 --> 00:17:59,860
there was no<font color="#E5E5E5"> wrapper inside Liberty but</font>

365
00:17:57,970 --> 00:18:01,930
<font color="#E5E5E5">now that gdb integration is kind of into</font>

366
00:17:59,860 --> 00:18:08,040
the past version one point<font color="#CCCCCC"> naught or</font>

367
00:18:01,930 --> 00:18:08,040
whatever so<font color="#E5E5E5"> that's not a current thing</font>

368
00:18:10,620 --> 00:18:17,830
<font color="#E5E5E5">kind of how long does this talk that</font>

369
00:18:12,580 --> 00:18:19,980
<font color="#CCCCCC">it's still half past I'm gonna get I got</font>

370
00:18:17,830 --> 00:18:29,590
some kind but I'm gonna skip it<font color="#E5E5E5"> I think</font>

371
00:18:19,980 --> 00:18:31,150
I<font color="#CCCCCC"> slept</font><font color="#E5E5E5"> 20 minutes</font><font color="#CCCCCC"> alright anyway I'll</font>

372
00:18:29,590 --> 00:18:33,490
do<font color="#E5E5E5"> really quick because nobody wants to</font>

373
00:18:31,150 --> 00:18:35,440
look at code basically<font color="#E5E5E5"> this is a lip</font>

374
00:18:33,490 --> 00:18:37,510
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a function</font><font color="#E5E5E5"> that thread</font><font color="#CCCCCC"> duty it's</font>

375
00:18:35,440 --> 00:18:39,040
getting the address<font color="#E5E5E5"> of a symbol it's</font>

376
00:18:37,510 --> 00:18:41,049
doing some little special case logic

377
00:18:39,040 --> 00:18:43,960
with it and that's what<font color="#E5E5E5"> it looks like in</font>

378
00:18:41,049 --> 00:18:45,700
C and the Infinity version of it is

379
00:18:43,960 --> 00:18:49,150
<font color="#E5E5E5">basically the same length it's getting</font>

380
00:18:45,700 --> 00:18:50,770
there is<font color="#E5E5E5"> it's loading the thing doing</font>

381
00:18:49,150 --> 00:18:52,510
<font color="#E5E5E5">the little special</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> do I go here do</font>

382
00:18:50,770 --> 00:18:55,480
I go here there we<font color="#CCCCCC"> go here and that's it</font>

383
00:18:52,510 --> 00:19:00,390
<font color="#E5E5E5">so I'm not talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that anymore</font>

384
00:18:55,480 --> 00:19:02,650
<font color="#CCCCCC">this um I guess this</font><font color="#E5E5E5"> sort of shows that</font>

385
00:19:00,390 --> 00:19:06,179
<font color="#E5E5E5">what you will be right and</font><font color="#CCCCCC"> if you're</font>

386
00:19:02,650 --> 00:19:06,179
right in<font color="#CCCCCC"> note so it's kind</font><font color="#E5E5E5"> of</font>

387
00:19:10,460 --> 00:19:16,310
the kind<font color="#E5E5E5"> of general features the</font>

388
00:19:12,660 --> 00:19:18,750
functions have a name in the namespace

389
00:19:16,310 --> 00:19:22,980
<font color="#CCCCCC">in this case the function</font><font color="#E5E5E5"> has one</font>

390
00:19:18,750 --> 00:19:24,510
<font color="#E5E5E5">argument the the actual functions are</font>

391
00:19:22,980 --> 00:19:27,780
<font color="#CCCCCC">written in dwarf bytecode which I'm sure</font>

392
00:19:24,510 --> 00:19:30,360
you all know<font color="#CCCCCC"> what it is</font><font color="#E5E5E5"> it's a it's a</font>

393
00:19:27,780 --> 00:19:32,040
kind<font color="#E5E5E5"> of stack based language so this</font>

394
00:19:30,360 --> 00:19:33,300
<font color="#E5E5E5">function has one argument which means</font>

395
00:19:32,040 --> 00:19:35,760
when<font color="#E5E5E5"> you arrive at</font><font color="#CCCCCC"> the top of the</font>

396
00:19:33,300 --> 00:19:39,600
function<font color="#CCCCCC"> the caller has put that</font>

397
00:19:35,760 --> 00:19:42,150
<font color="#E5E5E5">argument on the stack</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> your this</font>

398
00:19:39,600 --> 00:19:44,969
function here returns<font color="#E5E5E5"> two values so your</font>

399
00:19:42,150 --> 00:19:47,160
function is expected to<font color="#E5E5E5"> return these two</font>

400
00:19:44,970 --> 00:19:47,970
values<font color="#E5E5E5"> and this is this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> checked by</font>

401
00:19:47,160 --> 00:19:53,970
the compiler

402
00:19:47,970 --> 00:19:56,600
so that's a yeah it's<font color="#E5E5E5"> checked by the</font>

403
00:19:53,970 --> 00:19:59,340
compiler it's also<font color="#E5E5E5"> checked by the the</font>

404
00:19:56,600 --> 00:20:01,919
<font color="#E5E5E5">client library when you load it but I'm</font>

405
00:19:59,340 --> 00:20:03,929
at<font color="#E5E5E5"> the moment the compiler checks the</font>

406
00:20:01,920 --> 00:20:07,410
stack but it doesn't lay it out because

407
00:20:03,930 --> 00:20:10,440
<font color="#E5E5E5">I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know how to do that I'm hoping</font>

408
00:20:07,410 --> 00:20:12,540
<font color="#E5E5E5">that at some</font><font color="#CCCCCC"> point in the future</font><font color="#E5E5E5"> someone</font>

409
00:20:10,440 --> 00:20:14,550
else who knows<font color="#E5E5E5"> more about compilers and</font>

410
00:20:12,540 --> 00:20:17,850
<font color="#E5E5E5">me will be having to write these notes</font>

411
00:20:14,550 --> 00:20:23,490
<font color="#E5E5E5">and</font><font color="#CCCCCC"> there go this</font><font color="#E5E5E5"> is easy I'll do it but</font>

412
00:20:17,850 --> 00:20:25,949
<font color="#E5E5E5">not now okay I'm not gonna walk through</font>

413
00:20:23,490 --> 00:20:28,260
<font color="#E5E5E5">this function but it just this just kind</font>

414
00:20:25,950 --> 00:20:33,630
of exists this<font color="#E5E5E5"> is to point something</font><font color="#CCCCCC"> out</font>

415
00:20:28,260 --> 00:20:37,200
<font color="#E5E5E5">this is a another thread debugging that</font>

416
00:20:33,630 --> 00:20:41,310
to get the address<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> cheerless block</font>

417
00:20:37,200 --> 00:20:43,380
or thing to get some kind of value<font color="#E5E5E5"> from</font>

418
00:20:41,310 --> 00:20:45,960
thread-local storage or the<font color="#CCCCCC"> address</font>

419
00:20:43,380 --> 00:20:47,430
rather<font color="#E5E5E5"> and I put this function just to</font>

420
00:20:45,960 --> 00:20:49,290
point<font color="#CCCCCC"> out what this</font><font color="#E5E5E5"> one is doing here is</font>

421
00:20:47,430 --> 00:20:51,000
it's<font color="#E5E5E5"> called in another infinity function</font>

422
00:20:49,290 --> 00:20:56,220
<font color="#E5E5E5">but this</font><font color="#CCCCCC"> function is in</font><font color="#E5E5E5"> the runtime</font>

423
00:20:51,000 --> 00:20:57,480
linker<font color="#E5E5E5"> so it's kind of to</font><font color="#CCCCCC"> illustrate</font>

424
00:20:56,220 --> 00:20:59,070
that<font color="#E5E5E5"> they kind of come</font><font color="#CCCCCC"> from multiple</font>

425
00:20:57,480 --> 00:21:02,700
sources<font color="#E5E5E5"> like at the moment live thready</font>

426
00:20:59,070 --> 00:21:05,550
<font color="#E5E5E5">beers is accessing runtime linker</font>

427
00:21:02,700 --> 00:21:07,920
internals<font color="#CCCCCC"> in a way that means that if</font>

428
00:21:05,550 --> 00:21:11,850
you were to look so if<font color="#E5E5E5"> you were to have</font>

429
00:21:07,920 --> 00:21:13,770
a Lib<font color="#CCCCCC"> P</font><font color="#E5E5E5"> thread from</font><font color="#CCCCCC"> one G's Lipsey with</font>

430
00:21:11,850 --> 00:21:15,060
the runtime linker of another with

431
00:21:13,770 --> 00:21:18,990
different structure offsets it would

432
00:21:15,060 --> 00:21:21,629
fail and if whereas if you use<font color="#CCCCCC"> an</font>

433
00:21:18,990 --> 00:21:23,070
infinity<font color="#CCCCCC"> it's accessing</font><font color="#E5E5E5"> it through an</font>

434
00:21:21,630 --> 00:21:27,450
infinity function in the run

435
00:21:23,070 --> 00:21:28,830
<font color="#CCCCCC">tanka so it kind</font><font color="#E5E5E5"> of opens the door for</font>

436
00:21:27,450 --> 00:21:30,929
that kind of thing to<font color="#E5E5E5"> be done I'm</font><font color="#CCCCCC"> not</font>

437
00:21:28,830 --> 00:21:34,009
sure if there's<font color="#CCCCCC"> any</font><font color="#E5E5E5"> demand</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> it but it</font>

438
00:21:30,929 --> 00:21:34,009
means it's kind of safe

439
00:21:36,950 --> 00:21:46,910
they're<font color="#CCCCCC"> indifferent shared objects so</font>

440
00:21:43,610 --> 00:21:49,370
when you so when<font color="#E5E5E5"> your tool kind of</font>

441
00:21:46,910 --> 00:21:54,680
attaches or starts to inspect<font color="#E5E5E5"> your</font>

442
00:21:49,370 --> 00:21:56,000
process it at like the<font color="#E5E5E5"> wage where I'm</font>

443
00:21:54,680 --> 00:21:58,420
<font color="#E5E5E5">doing in gdb</font><font color="#CCCCCC"> is it's</font><font color="#E5E5E5"> looking at the</font>

444
00:21:56,000 --> 00:22:02,060
actual<font color="#E5E5E5"> files that you've loaded</font>

445
00:21:58,420 --> 00:22:04,400
so when gdb goes through and starts

446
00:22:02,060 --> 00:22:05,629
<font color="#E5E5E5">adding the objects</font><font color="#CCCCCC"> of the of the</font>

447
00:22:04,400 --> 00:22:07,310
application<font color="#E5E5E5"> that you're attached to or</font>

448
00:22:05,630 --> 00:22:10,460
whatever<font color="#CCCCCC"> it's going</font><font color="#E5E5E5"> to add the runtime</font>

449
00:22:07,310 --> 00:22:12,129
linker<font color="#CCCCCC"> and then those those func</font>

450
00:22:10,460 --> 00:22:15,290
functions from<font color="#E5E5E5"> the runtime link you get</font>

451
00:22:12,130 --> 00:22:16,520
given to the<font color="#E5E5E5"> client library and then it</font>

452
00:22:15,290 --> 00:22:17,960
<font color="#E5E5E5">carries on and it adds the thread</font>

453
00:22:16,520 --> 00:22:19,910
library<font color="#E5E5E5"> and it adds those functions to</font>

454
00:22:17,960 --> 00:22:21,320
<font color="#E5E5E5">the client library and</font><font color="#CCCCCC"> I guess I guess</font>

455
00:22:19,910 --> 00:22:26,300
the<font color="#E5E5E5"> answer</font><font color="#CCCCCC"> is the client library links</font>

456
00:22:21,320 --> 00:22:31,580
them the there's kind of a kind of

457
00:22:26,300 --> 00:22:33,070
callback mechanism so when you add you

458
00:22:31,580 --> 00:22:36,110
kind of give the client library the

459
00:22:33,070 --> 00:22:38,200
encoded functions and then it tells<font color="#E5E5E5"> you</font>

460
00:22:36,110 --> 00:22:41,090
<font color="#CCCCCC">that functions have become</font><font color="#E5E5E5"> available so</font>

461
00:22:38,200 --> 00:22:43,580
<font color="#CCCCCC">you only a function only appears in</font><font color="#E5E5E5"> the</font>

462
00:22:41,090 --> 00:22:45,620
debugger when like in<font color="#E5E5E5"> this case if you</font>

463
00:22:43,580 --> 00:22:49,280
added this<font color="#E5E5E5"> the encoded form of this</font>

464
00:22:45,620 --> 00:22:50,510
<font color="#CCCCCC">function but the runtime linker function</font>

465
00:22:49,280 --> 00:22:53,210
wasn't<font color="#E5E5E5"> there then this function</font><font color="#CCCCCC"> would</font>

466
00:22:50,510 --> 00:22:55,190
not<font color="#E5E5E5"> appear in the debugger so the</font>

467
00:22:53,210 --> 00:22:59,990
debugger would not the kind of<font color="#CCCCCC"> assume</font>

468
00:22:55,190 --> 00:23:01,580
you<font color="#E5E5E5"> had no TLS support so the kind of</font>

469
00:22:59,990 --> 00:23:04,550
the functions<font color="#CCCCCC"> arrived at the debugger</font>

470
00:23:01,580 --> 00:23:07,870
kind of more piecewise<font color="#CCCCCC"> then than</font><font color="#E5E5E5"> the</font>

471
00:23:04,550 --> 00:23:07,870
<font color="#E5E5E5">developer DB it's like</font>

472
00:23:33,530 --> 00:23:42,860
this this this this<font color="#CCCCCC"> thing here is the</font>

473
00:23:38,370 --> 00:24:05,699
name<font color="#CCCCCC"> of another</font><font color="#E5E5E5"> infinity function so</font>

474
00:23:42,860 --> 00:24:08,699
yeah yeah well again I<font color="#CCCCCC"> don't know</font><font color="#E5E5E5"> I</font>

475
00:24:05,700 --> 00:24:12,000
<font color="#E5E5E5">don't know about</font><font color="#CCCCCC"> Windows either</font><font color="#E5E5E5"> but the</font>

476
00:24:08,700 --> 00:24:15,780
<font color="#E5E5E5">kind of idea is</font><font color="#CCCCCC"> that the the set</font><font color="#E5E5E5"> of</font>

477
00:24:12,000 --> 00:24:19,200
functions<font color="#CCCCCC"> that the debugger sees is is</font>

478
00:24:15,780 --> 00:24:20,460
kind of like an API so<font color="#E5E5E5"> if if the</font>

479
00:24:19,200 --> 00:24:22,350
debugger sees that you've got this

480
00:24:20,460 --> 00:24:26,460
<font color="#E5E5E5">function thread get to your less address</font>

481
00:24:22,350 --> 00:24:29,459
then it knows that that concept is there

482
00:24:26,460 --> 00:24:32,190
so it<font color="#E5E5E5"> doesn't matter what how this is</font>

483
00:24:29,460 --> 00:24:35,850
implemented<font color="#CCCCCC"> like this is the</font>

484
00:24:32,190 --> 00:24:37,890
<font color="#E5E5E5">implementation from</font><font color="#CCCCCC"> GFC was a</font><font color="#E5E5E5"> Windows</font>

485
00:24:35,850 --> 00:24:39,929
implementation would almost certainly

486
00:24:37,890 --> 00:24:41,580
look completely different<font color="#CCCCCC"> and it maybe</font>

487
00:24:39,930 --> 00:24:47,220
wouldn't<font color="#E5E5E5"> have the concept of a runtime</font>

488
00:24:41,580 --> 00:24:50,899
link or a module<font color="#E5E5E5"> ID</font><font color="#CCCCCC"> I don't know does</font>

489
00:24:47,220 --> 00:24:50,900
that<font color="#CCCCCC"> answer your question</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> whoo</font>

490
00:24:56,600 --> 00:25:04,469
<font color="#E5E5E5">let's have a quick look this is a test</font>

491
00:24:58,770 --> 00:25:06,389
case that<font color="#E5E5E5"> for one of the functions it's</font>

492
00:25:04,470 --> 00:25:08,250
kind of the the way I've<font color="#CCCCCC"> been in the</font>

493
00:25:06,390 --> 00:25:11,160
test cases is this implement thing just

494
00:25:08,250 --> 00:25:12,330
says<font color="#E5E5E5"> it's kind of dislike stubs out all</font>

495
00:25:11,160 --> 00:25:14,580
the<font color="#CCCCCC"> functions that it's going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font>

496
00:25:12,330 --> 00:25:18,050
<font color="#CCCCCC">then it</font><font color="#E5E5E5"> calls the function and checks</font>

497
00:25:14,580 --> 00:25:40,800
<font color="#E5E5E5">that the result is as it is they care</font>

498
00:25:18,050 --> 00:25:44,250
it's a test case yeah so yeah the

499
00:25:40,800 --> 00:25:45,659
current status of all this<font color="#E5E5E5"> lot the note</font>

500
00:25:44,250 --> 00:25:49,290
<font color="#E5E5E5">compiler is complete but it needs</font>

501
00:25:45,660 --> 00:25:53,640
documenting the<font color="#CCCCCC"> testers complete but it</font>

502
00:25:49,290 --> 00:25:55,050
<font color="#CCCCCC">is documenting and the nice note s the</font>

503
00:25:53,640 --> 00:26:00,120
client library<font color="#CCCCCC"> is complete</font><font color="#E5E5E5"> but in</font><font color="#CCCCCC"> these</font>

504
00:25:55,050 --> 00:26:01,560
<font color="#E5E5E5">documentation and some more tests no</font>

505
00:26:00,120 --> 00:26:03,389
client Larry actually<font color="#E5E5E5"> has quite</font><font color="#CCCCCC"> a lot of</font>

506
00:26:01,560 --> 00:26:04,710
<font color="#E5E5E5">tests but it</font><font color="#CCCCCC"> doesn't have it doesn't</font>

507
00:26:03,390 --> 00:26:07,230
have tests that would validate the

508
00:26:04,710 --> 00:26:09,050
specification which in itself I haven't

509
00:26:07,230 --> 00:26:12,000
completely finished right in

510
00:26:09,050 --> 00:26:13,530
but like the specification says that

511
00:26:12,000 --> 00:26:16,830
this<font color="#E5E5E5"> this bytecode should do exactly</font>

512
00:26:13,530 --> 00:26:19,350
<font color="#E5E5E5">this and</font><font color="#CCCCCC"> I say through</font><font color="#E5E5E5"> that and so I</font>

513
00:26:16,830 --> 00:26:24,899
need to write<font color="#E5E5E5"> love test for</font><font color="#CCCCCC"> my code that</font>

514
00:26:19,350 --> 00:26:26,820
<font color="#CCCCCC">doesn't</font><font color="#E5E5E5"> do that which is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> that I have</font>

515
00:26:24,900 --> 00:26:29,010
<font color="#CCCCCC">the stuff to create the broken</font><font color="#E5E5E5"> bytecode</font>

516
00:26:26,820 --> 00:26:30,600
but I don't have their you<font color="#CCCCCC"> know I</font>

517
00:26:29,010 --> 00:26:35,250
<font color="#E5E5E5">haven't sat there and turned away at</font>

518
00:26:30,600 --> 00:26:36,590
writing them all yet<font color="#CCCCCC"> I've got a set of G</font>

519
00:26:35,250 --> 00:26:39,420
<font color="#E5E5E5">Lipsy</font>

520
00:26:36,590 --> 00:26:42,000
<font color="#E5E5E5">Pedro notes the one the ones that gdb</font>

521
00:26:39,420 --> 00:26:45,030
needs<font color="#CCCCCC"> there will</font><font color="#E5E5E5"> be most have tests that</font>

522
00:26:42,000 --> 00:26:47,750
<font color="#CCCCCC">the API</font><font color="#E5E5E5"> that they export isn't</font>

523
00:26:45,030 --> 00:26:49,770
<font color="#CCCCCC">documented with us relatively</font><font color="#E5E5E5"> simple</font><font color="#CCCCCC"> I</font>

524
00:26:47,750 --> 00:26:51,210
don't know if there's<font color="#CCCCCC"> only G Lib C</font>

525
00:26:49,770 --> 00:26:54,690
<font color="#E5E5E5">people here but I'm hoping to get a</font>

526
00:26:51,210 --> 00:26:58,680
patch mailed by February 16th that's<font color="#E5E5E5"> my</font>

527
00:26:54,690 --> 00:27:01,650
date<font color="#CCCCCC"> so</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of I'm kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> working on</font>

528
00:26:58,680 --> 00:27:04,130
getting<font color="#E5E5E5"> this all kind of in fairly soon</font>

529
00:27:01,650 --> 00:27:04,130
overly

530
00:27:04,419 --> 00:27:11,120
the<font color="#E5E5E5"> lips</font><font color="#CCCCCC"> that DB</font><font color="#E5E5E5"> the kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> integration</font>

531
00:27:08,210 --> 00:27:13,100
part of it is is there there's a<font color="#E5E5E5"> there's</font>

532
00:27:11,120 --> 00:27:14,689
a little<font color="#CCCCCC"> gdb modification</font><font color="#E5E5E5"> that it needs</font>

533
00:27:13,100 --> 00:27:19,820
which<font color="#CCCCCC"> is currently native irony so</font>

534
00:27:14,690 --> 00:27:22,340
that's that's future work in the idea

535
00:27:19,820 --> 00:27:29,870
the<font color="#E5E5E5"> gdb integration</font><font color="#CCCCCC"> bit that I mentioned</font>

536
00:27:22,340 --> 00:27:43,928
<font color="#E5E5E5">earlier is kind of post 1.0 so it's not</font>

537
00:27:29,870 --> 00:27:46,580
done yet<font color="#CCCCCC"> I'm hoping</font><font color="#E5E5E5"> very stable it's I</font>

538
00:27:43,929 --> 00:27:49,360
don't like I don't<font color="#CCCCCC"> even</font><font color="#E5E5E5"> remember what I</font>

539
00:27:46,580 --> 00:27:52,580
decided<font color="#E5E5E5"> to call it infinity but as as it</font>

540
00:27:49,360 --> 00:27:55,399
as things progressed<font color="#CCCCCC"> I spent a lot of</font>

541
00:27:52,580 --> 00:27:56,689
time<font color="#CCCCCC"> thinking if something is if</font>

542
00:27:55,399 --> 00:27:59,330
something's<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> change</font><font color="#CCCCCC"> here in the</font>

543
00:27:56,690 --> 00:28:05,120
future<font color="#CCCCCC"> how do I make it</font><font color="#E5E5E5"> so that it fails</font>

544
00:27:59,330 --> 00:28:08,149
gracefully so that<font color="#E5E5E5"> it's hopefully got a</font>

545
00:28:05,120 --> 00:28:10,219
lot of<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> built in stuff so that</font>

546
00:28:08,149 --> 00:28:12,229
<font color="#CCCCCC">you can easily</font><font color="#E5E5E5"> say that</font><font color="#CCCCCC"> this is not</font>

547
00:28:10,220 --> 00:28:15,380
relevant<font color="#CCCCCC"> anymore this is</font><font color="#E5E5E5"> unsupported it</font>

548
00:28:12,230 --> 00:28:17,779
is now supported so<font color="#CCCCCC"> that older older</font>

549
00:28:15,380 --> 00:28:23,720
<font color="#E5E5E5">stuff using newer features can</font>

550
00:28:17,779 --> 00:28:29,000
gracefully fail I'm like time will tell

551
00:28:23,720 --> 00:28:33,649
if<font color="#E5E5E5"> I've actually managed that let's see</font>

552
00:28:29,000 --> 00:28:37,159
if I can<font color="#E5E5E5"> find and show you a demo it's</font>

553
00:28:33,649 --> 00:28:41,239
not very<font color="#E5E5E5"> exciting because it's just</font><font color="#CCCCCC"> it's</font>

554
00:28:37,159 --> 00:28:48,130
essentially<font color="#CCCCCC"> looks exactly like gdb</font>

555
00:28:41,240 --> 00:28:48,130
normally let's see if I can get there

556
00:28:55,850 --> 00:29:12,250
<font color="#CCCCCC">alright are you seeing something</font><font color="#E5E5E5"> yeah</font>

557
00:29:00,830 --> 00:29:15,199
I'm trying to get<font color="#E5E5E5"> listed there</font>

558
00:29:12,250 --> 00:29:19,970
my mind went<font color="#E5E5E5"> blank and I couldn't</font>

559
00:29:15,200 --> 00:29:25,070
<font color="#E5E5E5">remember</font><font color="#CCCCCC"> key hello that just changed</font>

560
00:29:19,970 --> 00:29:27,580
colors that's horrible<font color="#E5E5E5"> to see the change</font>

561
00:29:25,070 --> 00:29:27,580
of colors

562
00:29:37,280 --> 00:29:45,620
<font color="#E5E5E5">that looks good one of these gonna be</font>

563
00:29:40,010 --> 00:29:47,920
black or<font color="#E5E5E5"> white</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> better isn't it I am</font>

564
00:29:45,620 --> 00:29:47,919
<font color="#CCCCCC">back</font>

565
00:29:50,190 --> 00:29:53,210
<font color="#E5E5E5">black on</font><font color="#CCCCCC"> white</font>

566
00:29:55,490 --> 00:29:58,090
right

567
00:30:11,870 --> 00:30:15,070
can<font color="#E5E5E5"> everybody see that</font>

568
00:30:25,730 --> 00:30:34,010
<font color="#E5E5E5">okay so there's an</font><font color="#CCCCCC"> example process 573</font>

569
00:30:36,590 --> 00:30:42,249
and so if I open<font color="#E5E5E5"> another tab</font><font color="#CCCCCC"> that you</font>

570
00:30:40,190 --> 00:30:42,249
<font color="#E5E5E5">know</font>

571
00:30:47,040 --> 00:31:07,250
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> gone</font><font color="#E5E5E5"> back to being small again so</font>

572
00:30:54,030 --> 00:31:07,250
if I go and tell it to load the

573
00:31:24,490 --> 00:31:29,500
<font color="#CCCCCC">should've done this in advance</font><font color="#E5E5E5"> okay</font>

574
00:31:39,920 --> 00:31:42,850
don't you know

575
00:31:49,910 --> 00:31:52,510
<font color="#E5E5E5">-</font>

576
00:31:56,030 --> 00:32:04,310
this is gonna be such an<font color="#CCCCCC"> item to climb</font>

577
00:31:58,070 --> 00:32:11,870
at what did I say it was<font color="#CCCCCC"> 573 there you</font>

578
00:32:04,310 --> 00:32:15,530
go<font color="#CCCCCC"> gotta blow</font><font color="#E5E5E5"> and we can get em this is</font>

579
00:32:11,870 --> 00:32:21,350
a statically linked program with two

580
00:32:15,530 --> 00:32:27,370
threads and so it's also got a TLS

581
00:32:21,350 --> 00:32:27,370
variable which is

582
00:32:31,630 --> 00:32:38,440
<font color="#E5E5E5">but wait a</font><font color="#CCCCCC"> minute it is it's loading the</font>

583
00:32:36,520 --> 00:32:45,160
30 people that lived for<font color="#CCCCCC"> DPS use an</font>

584
00:32:38,440 --> 00:32:47,260
<font color="#CCCCCC">Infiniti yeah because at the last</font><font color="#E5E5E5"> time I</font>

585
00:32:45,160 --> 00:32:48,880
did this<font color="#CCCCCC"> talk everybody has everybody</font>

586
00:32:47,260 --> 00:32:50,379
<font color="#CCCCCC">said oh this is great but</font><font color="#E5E5E5"> can we</font>

587
00:32:48,880 --> 00:33:00,430
actually<font color="#E5E5E5"> have a live</font><font color="#CCCCCC"> ready be</font><font color="#E5E5E5"> on our</font>

588
00:32:50,380 --> 00:33:02,830
system<font color="#E5E5E5"> I'll show you with if I show you</font>

589
00:33:00,430 --> 00:33:06,370
it with the<font color="#CCCCCC"> debug in like tracing</font>

590
00:33:02,830 --> 00:33:09,760
<font color="#E5E5E5">switched on type all that stuff in again</font>

591
00:33:06,370 --> 00:33:12,540
what was it set<font color="#E5E5E5"> there thread to be</font>

592
00:33:09,760 --> 00:33:12,540
<font color="#E5E5E5">search path</font>

593
00:33:19,170 --> 00:33:22,770
this actually<font color="#CCCCCC"> hurts</font>

594
00:33:30,700 --> 00:33:39,679
you know<font color="#CCCCCC"> 573 you</font><font color="#E5E5E5"> should see a ton of</font>

595
00:33:36,980 --> 00:33:42,259
<font color="#E5E5E5">bytecodes get executed</font><font color="#CCCCCC"> though</font><font color="#E5E5E5"> today</font>

596
00:33:39,679 --> 00:33:46,509
<font color="#E5E5E5">right</font><font color="#CCCCCC"> there stuff</font><font color="#E5E5E5"> happening so if I do</font>

597
00:33:42,259 --> 00:33:46,509
that<font color="#E5E5E5"> that print the TLS farewell again</font>

598
00:33:46,629 --> 00:33:55,639
you will get some more<font color="#CCCCCC"> byte codes not a</font>

599
00:33:51,200 --> 00:33:57,519
huge amount like you can see it's hot

600
00:33:55,639 --> 00:33:59,870
this<font color="#E5E5E5"> actually quite a complicated</font>

601
00:33:57,519 --> 00:34:02,029
<font color="#E5E5E5">worthless start the start is about there</font>

602
00:33:59,870 --> 00:34:03,379
and it's going into<font color="#E5E5E5"> this</font><font color="#CCCCCC"> function gets</font>

603
00:34:02,029 --> 00:34:07,190
here less base and then it's also

604
00:34:03,379 --> 00:34:09,168
<font color="#CCCCCC">calling</font><font color="#E5E5E5"> it's going into like it goes</font>

605
00:34:07,190 --> 00:34:10,730
<font color="#E5E5E5">into this this is all thread debugging</font>

606
00:34:09,168 --> 00:34:13,310
stuff but then it goes into the<font color="#E5E5E5"> runtime</font>

607
00:34:10,730 --> 00:34:19,418
<font color="#CCCCCC">linka notes and starts pulling stuff out</font>

608
00:34:13,310 --> 00:34:29,659
from there<font color="#E5E5E5"> and yeah prints a number</font>

609
00:34:19,418 --> 00:34:32,629
<font color="#CCCCCC">Panna and that's it I think yes yeah</font><font color="#E5E5E5"> all</font>

610
00:34:29,659 --> 00:34:35,000
this that each yeah here's<font color="#E5E5E5"> these are</font>

611
00:34:32,629 --> 00:34:38,179
kind of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> bytecode</font><font color="#E5E5E5"> column the ones</font>

612
00:34:35,000 --> 00:34:40,190
with our<font color="#E5E5E5"> X are kind of extra ones at the</font>

613
00:34:38,179 --> 00:34:44,950
client library put in they're<font color="#CCCCCC"> not</font>

614
00:34:40,190 --> 00:34:48,260
they're not<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> note then</font>

615
00:34:44,949 --> 00:34:51,040
<font color="#E5E5E5">well no no</font><font color="#CCCCCC"> the only</font><font color="#E5E5E5"> ones are on these</font>

616
00:34:48,260 --> 00:34:51,040
ones are<font color="#CCCCCC"> in there</font>

617
00:35:20,240 --> 00:35:27,149
yeah<font color="#E5E5E5"> okay I just put all this stuff on</font>

618
00:35:24,390 --> 00:35:30,500
the<font color="#E5E5E5"> screen and then any further</font>

619
00:35:27,150 --> 00:35:30,500
questions I will answer

620
00:35:38,450 --> 00:35:44,939
currently no but it would kind of at the

621
00:35:42,299 --> 00:35:47,038
<font color="#CCCCCC">moment the the way it's going to</font><font color="#E5E5E5"> work is</font>

622
00:35:44,940 --> 00:35:52,950
you<font color="#E5E5E5"> load</font><font color="#CCCCCC"> gdb is still going</font><font color="#E5E5E5"> to low-lived</font>

623
00:35:47,039 --> 00:35:55,049
<font color="#CCCCCC">a DB</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I for the next thing that I</font>

624
00:35:52,950 --> 00:35:58,439
<font color="#CCCCCC">have in my kind</font><font color="#E5E5E5"> of sites is</font><font color="#CCCCCC"> the multiple</font>

625
00:35:55,049 --> 00:35:59,579
<font color="#E5E5E5">namespace thing and there is no debug</font>

626
00:35:58,440 --> 00:36:05,970
library written<font color="#E5E5E5"> for that</font><font color="#CCCCCC"> and I don't</font>

627
00:35:59,579 --> 00:36:10,589
intend<font color="#E5E5E5"> to write one now so yeah so what</font>

628
00:36:05,970 --> 00:36:12,808
my kind<font color="#E5E5E5"> of once this is all in</font><font color="#CCCCCC"> GFC in</font>

629
00:36:10,589 --> 00:36:16,319
their lives for<font color="#E5E5E5"> Debian in the the piece</font>

630
00:36:12,809 --> 00:36:18,569
read my kind of next thing is them to

631
00:36:16,319 --> 00:36:21,770
make gdb access<font color="#E5E5E5"> the</font><font color="#CCCCCC"> infinity functions</font>

632
00:36:18,569 --> 00:36:25,440
by itself<font color="#E5E5E5"> without needing</font><font color="#CCCCCC"> the third DB</font>

633
00:36:21,770 --> 00:36:28,829
<font color="#E5E5E5">and then it will be able to do it</font>

634
00:36:25,440 --> 00:36:30,750
and it<font color="#E5E5E5"> will all happen in gdb and will</font>

635
00:36:28,829 --> 00:36:34,369
it happen in TV<font color="#CCCCCC"> that probably would make</font>

636
00:36:30,750 --> 00:36:34,369
<font color="#E5E5E5">sense of it in DB server as</font><font color="#CCCCCC"> well</font>

637
00:36:46,900 --> 00:36:51,160
but then you would<font color="#E5E5E5"> have if so you have</font>

638
00:36:49,000 --> 00:36:53,200
your gdb server<font color="#CCCCCC"> a new application</font>

639
00:36:51,160 --> 00:36:57,899
creates a new thread and gdb server has

640
00:36:53,200 --> 00:36:57,899
to<font color="#E5E5E5"> communicate with gdb</font><font color="#CCCCCC"> to handle that</font>

641
00:36:58,470 --> 00:37:07,169
what does that it's just evaluating some

642
00:37:03,910 --> 00:37:07,170
scripting<font color="#E5E5E5"> stuff</font>

643
00:37:15,410 --> 00:37:22,879
they're not walking<font color="#CCCCCC"> gbb using the leaf</font>

644
00:37:19,640 --> 00:37:26,660
<font color="#CCCCCC">arrábida them</font><font color="#E5E5E5"> right interpret see if</font>

645
00:37:22,880 --> 00:37:30,730
<font color="#CCCCCC">they're all those</font><font color="#E5E5E5"> yeah in the</font><font color="#CCCCCC"> hopes</font><font color="#E5E5E5"> even</font>

646
00:37:26,660 --> 00:37:30,730
if connected<font color="#CCCCCC"> so g DB server and</font>

647
00:37:30,960 --> 00:37:39,150
you just have to<font color="#E5E5E5"> lose some version of</font>

648
00:37:33,270 --> 00:37:41,329
<font color="#CCCCCC">that de that's</font><font color="#E5E5E5"> compatible enough</font><font color="#CCCCCC"> with</font>

649
00:37:39,150 --> 00:37:41,329
the

650
00:37:45,860 --> 00:37:56,420
you loathsome<font color="#E5E5E5"> version that's using some</font>

651
00:37:50,450 --> 00:37:56,419
<font color="#E5E5E5">opcodes</font><font color="#CCCCCC"> it's not familiar with</font><font color="#E5E5E5"> opcode</font>

652
00:37:57,590 --> 00:38:03,930
below the new enough we<font color="#E5E5E5"> should be</font>

653
00:38:00,420 --> 00:38:08,700
backwards compatible<font color="#CCCCCC"> yeah I mean I guess</font>

654
00:38:03,930 --> 00:38:12,029
<font color="#E5E5E5">they like</font><font color="#CCCCCC"> the the kind</font><font color="#E5E5E5"> of ultimate idea</font>

655
00:38:08,700 --> 00:38:21,930
is a that<font color="#CCCCCC"> gdb just won't need</font><font color="#E5E5E5"> lip</font><font color="#CCCCCC"> 30b</font>

656
00:38:12,030 --> 00:38:43,980
you<font color="#E5E5E5"> will ever pick it up piece of code a</font>

657
00:38:21,930 --> 00:38:48,990
bridge between GDP yeah yeah<font color="#E5E5E5"> oh yeah</font>

658
00:38:43,980 --> 00:38:51,720
well<font color="#CCCCCC"> like</font><font color="#E5E5E5"> there for just</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> debugging</font>

659
00:38:48,990 --> 00:38:53,549
yet it's it's no difference whether it's

660
00:38:51,720 --> 00:38:54,990
in the<font color="#CCCCCC"> DB or whether it's in GDP</font><font color="#E5E5E5"> but</font>

661
00:38:53,550 --> 00:38:58,680
once you start<font color="#CCCCCC"> adding extra things like</font>

662
00:38:54,990 --> 00:39:00,390
<font color="#CCCCCC">deal em open it doesn't</font><font color="#E5E5E5"> make sense to</font>

663
00:38:58,680 --> 00:39:04,440
<font color="#CCCCCC">the obviously doesn't live in the third</font>

664
00:39:00,390 --> 00:39:09,830
DB it doesn't make sense<font color="#CCCCCC"> it doesn't make</font>

665
00:39:04,440 --> 00:39:09,830
<font color="#CCCCCC">sense for</font><font color="#E5E5E5"> me to</font><font color="#CCCCCC"> write a new</font><font color="#E5E5E5"> library</font>

666
00:39:12,060 --> 00:39:20,330
and because then you're going<font color="#E5E5E5"> to expose</font>

667
00:39:17,250 --> 00:39:25,040
a few entry points in infinity terms

668
00:39:20,330 --> 00:39:25,040
<font color="#E5E5E5">keyless</font><font color="#CCCCCC"> address</font>

669
00:39:27,160 --> 00:39:33,899
and those will<font color="#CCCCCC"> be defined in two points</font>

670
00:39:30,570 --> 00:39:36,910
defined in terms of infinity yeah<font color="#E5E5E5"> and</font>

671
00:39:33,900 --> 00:39:40,690
something<font color="#CCCCCC"> we'll need to be aware of this</font>

672
00:39:36,910 --> 00:39:43,210
<font color="#E5E5E5">enterprise and there will be some C code</font>

673
00:39:40,690 --> 00:39:48,940
that will<font color="#E5E5E5"> call</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> some infinity</font>

674
00:39:43,210 --> 00:39:50,590
interpreter<font color="#E5E5E5"> same Ronson function and</font>

675
00:39:48,940 --> 00:39:53,080
there will be different tools that we

676
00:39:50,590 --> 00:39:58,420
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to do the same</font><font color="#E5E5E5"> thing probably the</font>

677
00:39:53,080 --> 00:40:01,420
same entry points both<font color="#CCCCCC"> TV and</font><font color="#E5E5E5"> other</font>

678
00:39:58,420 --> 00:40:04,560
<font color="#E5E5E5">brothers</font><font color="#CCCCCC"> hope you whatever they all want</font>

679
00:40:01,420 --> 00:40:04,560
to<font color="#E5E5E5"> call them into points</font>

680
00:40:05,200 --> 00:40:13,509
rap in the<font color="#E5E5E5"> small gym library that</font>

681
00:40:08,910 --> 00:40:17,819
exposes like<font color="#E5E5E5"> 5c</font><font color="#CCCCCC"> bunions</font><font color="#E5E5E5"> mm-hmm and you</font>

682
00:40:13,510 --> 00:40:20,530
don't see infinity at all right it's

683
00:40:17,820 --> 00:40:29,800
implemented inside<font color="#E5E5E5"> that</font><font color="#CCCCCC"> same library</font>

684
00:40:20,530 --> 00:40:32,050
<font color="#E5E5E5">mm-hmm yeah</font><font color="#CCCCCC"> she said well I</font><font color="#E5E5E5"> guess like</font>

685
00:40:29,800 --> 00:40:35,020
they can they can do kind<font color="#E5E5E5"> of different</font>

686
00:40:32,050 --> 00:40:36,940
things like<font color="#CCCCCC"> this once</font><font color="#E5E5E5"> like at the moment</font>

687
00:40:35,020 --> 00:40:41,170
<font color="#CCCCCC">and all the thread debug stuff</font><font color="#E5E5E5"> is is in</font>

688
00:40:36,940 --> 00:40:42,970
its own block<font color="#E5E5E5"> whereas once kind of</font>

689
00:40:41,170 --> 00:40:44,920
<font color="#CCCCCC">debuggers cannot actually</font><font color="#E5E5E5"> access just an</font>

690
00:40:42,970 --> 00:40:49,000
<font color="#E5E5E5">infant a single infinity function and</font>

691
00:40:44,920 --> 00:40:50,860
there's no<font color="#E5E5E5"> need for there's no need to</font>

692
00:40:49,000 --> 00:40:52,870
<font color="#CCCCCC">have</font><font color="#E5E5E5"> like functions blocked up like that</font>

693
00:40:50,860 --> 00:40:54,610
<font color="#E5E5E5">like what if</font><font color="#CCCCCC"> you want to just access one</font>

694
00:40:52,870 --> 00:40:56,440
single structure offset do you want to

695
00:40:54,610 --> 00:40:58,090
write a whole library for<font color="#E5E5E5"> that what</font>

696
00:40:56,440 --> 00:41:00,910
would<font color="#E5E5E5"> you like your do your debugger</font>

697
00:40:58,090 --> 00:41:03,750
<font color="#E5E5E5">your</font><font color="#CCCCCC"> tool</font><font color="#E5E5E5"> to be able to to call a single</font>

698
00:41:00,910 --> 00:41:03,750
<font color="#CCCCCC">function to</font><font color="#E5E5E5"> get there</font>

699
00:41:16,300 --> 00:41:20,190
<font color="#CCCCCC">the tulips EDB</font>

700
00:41:23,060 --> 00:41:38,360
and that will<font color="#CCCCCC"> go</font><font color="#E5E5E5"> entry points just like</font>

701
00:41:26,990 --> 00:41:39,859
the<font color="#E5E5E5"> points yeah yeah I I think maybe I</font>

702
00:41:38,360 --> 00:41:44,360
kind of need<font color="#CCCCCC"> to sit down and talk about</font>

703
00:41:39,860 --> 00:41:57,950
<font color="#E5E5E5">it and a little bit more comfortably</font>

704
00:41:44,360 --> 00:41:58,310
than standing here but no not at the

705
00:41:57,950 --> 00:41:59,810
moment

706
00:41:58,310 --> 00:42:02,390
there's nothing<font color="#E5E5E5"> to there's nothing</font><font color="#CCCCCC"> to</font>

707
00:41:59,810 --> 00:42:05,090
stop them<font color="#E5E5E5"> being made that way if you</font>

708
00:42:02,390 --> 00:42:06,319
want them<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> they're not</font><font color="#E5E5E5"> allocators i</font>

709
00:42:05,090 --> 00:42:07,910
think what you're asking

710
00:42:06,320 --> 00:42:11,570
yeah they live on the<font color="#E5E5E5"> disk but they</font>

711
00:42:07,910 --> 00:42:15,290
don't live in memory<font color="#E5E5E5"> I've I've kind of</font>

712
00:42:11,570 --> 00:42:18,130
made<font color="#E5E5E5"> it that way at the moment I've made</font>

713
00:42:15,290 --> 00:42:25,880
it that way<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the moment purely because</font>

714
00:42:18,130 --> 00:42:27,650
all current like the<font color="#E5E5E5"> four gdb</font><font color="#CCCCCC"> to do this</font>

715
00:42:25,880 --> 00:42:31,850
stuff now it needs<font color="#CCCCCC"> their files on</font><font color="#E5E5E5"> the</font>

716
00:42:27,650 --> 00:42:34,280
desk so<font color="#CCCCCC"> it didn't make sense to put</font><font color="#E5E5E5"> the</font>

717
00:42:31,850 --> 00:42:39,620
stuff in memory for all<font color="#E5E5E5"> the Imperius</font>

718
00:42:34,280 --> 00:42:44,060
when<font color="#E5E5E5"> when it doesn't make gdb be able to</font>

719
00:42:39,620 --> 00:42:46,730
do<font color="#CCCCCC"> an extra but like the client like the</font>

720
00:42:44,060 --> 00:42:48,890
client library is it doesn't care where

721
00:42:46,730 --> 00:42:50,630
the functions come from like it doesn't

722
00:42:48,890 --> 00:42:53,299
care whether<font color="#E5E5E5"> they've pulled out a memory</font>

723
00:42:50,630 --> 00:42:56,020
or taken from<font color="#E5E5E5"> desk because you just give</font>

724
00:42:53,300 --> 00:42:56,020
it<font color="#E5E5E5"> to them so</font>

725
00:42:57,890 --> 00:43:04,160
<font color="#CCCCCC">I</font><font color="#E5E5E5"> had two ideas</font><font color="#CCCCCC"> one is it's</font><font color="#E5E5E5"> coming off</font>

726
00:43:01,160 --> 00:43:06,170
the<font color="#E5E5E5"> disk and you attached to a running</font>

727
00:43:04,160 --> 00:43:12,020
program<font color="#CCCCCC"> whose Excel peoples been deleted</font>

728
00:43:06,170 --> 00:43:15,470
hmm it's coming from memory is there a

729
00:43:12,020 --> 00:43:19,770
security issue with having an<font color="#E5E5E5"> allocated</font>

730
00:43:15,470 --> 00:43:24,890
section has pointers<font color="#CCCCCC"> too</font>

731
00:43:19,770 --> 00:43:27,060
pls things because some of<font color="#CCCCCC"> that is hmm</font>

732
00:43:24,890 --> 00:43:30,779
at the<font color="#E5E5E5"> moment they're coming from the</font>

733
00:43:27,060 --> 00:43:32,640
desk<font color="#E5E5E5"> and so you can't you can't attach</font>

734
00:43:30,780 --> 00:43:34,200
to<font color="#CCCCCC"> something that is actually here</font><font color="#E5E5E5"> it</font>

735
00:43:32,640 --> 00:43:35,368
was been deleted<font color="#CCCCCC"> there kind of it kind</font>

736
00:43:34,200 --> 00:43:37,529
<font color="#CCCCCC">of went through my head so you could do</font>

737
00:43:35,369 --> 00:43:39,720
all these things with with it<font color="#E5E5E5"> but then</font>

738
00:43:37,530 --> 00:43:42,000
if the executables been<font color="#E5E5E5"> deleted kind of</font>

739
00:43:39,720 --> 00:43:45,390
there<font color="#E5E5E5"> isn't a lot you can do with it and</font>

740
00:43:42,000 --> 00:43:48,810
<font color="#E5E5E5">from</font><font color="#CCCCCC"> gdb terms like if you know if some</font>

741
00:43:45,390 --> 00:43:50,640
some other<font color="#E5E5E5"> use case has</font><font color="#CCCCCC"> and that is</font>

742
00:43:48,810 --> 00:43:53,850
useful<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the notes are loaded into</font>

743
00:43:50,640 --> 00:43:58,140
memory<font color="#E5E5E5"> I mean the other</font><font color="#CCCCCC"> thing is things</font>

744
00:43:53,850 --> 00:44:02,190
like like the I think<font color="#CCCCCC"> the thread</font>

745
00:43:58,140 --> 00:44:03,330
debugging stuff is I don't<font color="#CCCCCC"> remember</font><font color="#E5E5E5"> it</font>

746
00:44:02,190 --> 00:44:04,619
came from but there's a<font color="#E5E5E5"> kind of</font>

747
00:44:03,330 --> 00:44:07,110
requirement<font color="#E5E5E5"> that it can work without</font>

748
00:44:04,619 --> 00:44:09,500
<font color="#E5E5E5">debug info installed</font><font color="#CCCCCC"> where some of</font><font color="#E5E5E5"> the</font>

749
00:44:07,110 --> 00:44:12,840
<font color="#E5E5E5">other things like pretty printers maybe</font>

750
00:44:09,500 --> 00:44:14,670
maybe the pretty infinity if the pretty

751
00:44:12,840 --> 00:44:16,770
printers used infinity functions and

752
00:44:14,670 --> 00:44:22,880
those<font color="#CCCCCC"> infinity functions could go in the</font>

753
00:44:16,770 --> 00:44:22,880
debug info if there was a lot<font color="#CCCCCC"> of them so</font>

754
00:44:23,510 --> 00:44:28,220
<font color="#CCCCCC">more crazy question which is like</font>

755
00:44:25,609 --> 00:44:32,830
<font color="#E5E5E5">sometimes</font><font color="#CCCCCC"> people want to be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font>

756
00:44:28,220 --> 00:44:32,830
<font color="#CCCCCC">GED</font><font color="#E5E5E5"> and like</font><font color="#CCCCCC"> depose</font><font color="#E5E5E5"> it has green</font>

757
00:44:40,720 --> 00:44:45,990
possible that<font color="#E5E5E5"> those</font>

758
00:44:43,890 --> 00:44:47,549
they export<font color="#E5E5E5"> these same functions that</font>

759
00:44:45,990 --> 00:44:50,959
<font color="#CCCCCC">actually work are there other</font>

760
00:44:47,549 --> 00:44:50,960
dependencies on the drag

761
00:44:56,200 --> 00:45:04,750
if they're like if the threading system

762
00:45:01,160 --> 00:45:07,009
<font color="#CCCCCC">you're interested in can fit into the</font>

763
00:45:04,750 --> 00:45:11,570
<font color="#E5E5E5">API</font><font color="#CCCCCC"> of the notes that</font><font color="#E5E5E5"> are currently</font>

764
00:45:07,010 --> 00:45:12,920
<font color="#CCCCCC">there then yeah I guess no extra there</font>

765
00:45:11,570 --> 00:45:17,390
will be<font color="#E5E5E5"> notes to work but I'm not</font>

766
00:45:12,920 --> 00:45:19,840
familiar with<font color="#E5E5E5"> any other threading</font>

767
00:45:17,390 --> 00:45:19,839
systems

768
00:45:27,190 --> 00:45:32,800
currently it is on the layer of proteins

769
00:45:30,040 --> 00:45:33,910
<font color="#CCCCCC">your the bucking go</font><font color="#E5E5E5"> Lance inside</font><font color="#CCCCCC"> the</font>

770
00:45:32,800 --> 00:45:37,780
<font color="#CCCCCC">pipeline</font>

771
00:45:33,910 --> 00:45:39,830
the scheduler decides<font color="#E5E5E5"> to</font><font color="#CCCCCC"> change rather</font>

772
00:45:37,780 --> 00:45:42,830
<font color="#CCCCCC">go to the front</font>

773
00:45:39,830 --> 00:45:48,860
and to support<font color="#CCCCCC"> that we need to come up</font>

774
00:45:42,830 --> 00:45:53,740
<font color="#E5E5E5">with some API that debugger queries like</font>

775
00:45:48,860 --> 00:45:57,440
some higher-level<font color="#CCCCCC"> thank you for this guy</font>

776
00:45:53,740 --> 00:45:59,240
please tell me what is the<font color="#CCCCCC"> tournament</font>

777
00:45:57,440 --> 00:46:02,630
where this protein is running on right

778
00:45:59,240 --> 00:46:04,310
now<font color="#CCCCCC"> I want to schedule this go routine</font>

779
00:46:02,630 --> 00:46:06,050
that's currently<font color="#E5E5E5"> on</font><font color="#CCCCCC"> schedules</font><font color="#E5E5E5"> please</font>

780
00:46:04,310 --> 00:46:08,870
have the schedule<font color="#E5E5E5"> to make it wonderful</font>

781
00:46:06,050 --> 00:46:11,600
<font color="#CCCCCC">right now these are the entry points in</font>

782
00:46:08,870 --> 00:46:14,029
<font color="#CCCCCC">here</font><font color="#E5E5E5"> the level that the debugger needs</font>

783
00:46:11,600 --> 00:46:17,200
to<font color="#CCCCCC"> access how it's implemented</font><font color="#E5E5E5"> to find</font>

784
00:46:14,030 --> 00:46:20,060
<font color="#E5E5E5">seams how others be that components</font>

785
00:46:17,200 --> 00:46:22,750
discover the structures inside<font color="#CCCCCC"> the run</font>

786
00:46:20,060 --> 00:46:25,970
<font color="#E5E5E5">your program where to poke in scheduler</font>

787
00:46:22,750 --> 00:46:28,560
<font color="#E5E5E5">how they describe constructors that</font><font color="#CCCCCC"> can</font>

788
00:46:25,970 --> 00:46:30,569
be bottom that can see

789
00:46:28,560 --> 00:46:34,200
they have disadvantages<font color="#CCCCCC"> it can be</font>

790
00:46:30,570 --> 00:46:38,130
infinity<font color="#E5E5E5"> and then as it advantage that</font>

791
00:46:34,200 --> 00:46:40,609
that<font color="#E5E5E5"> it's architecture independent</font><font color="#CCCCCC"> and</font>

792
00:46:38,130 --> 00:46:43,170
so an infinitely solves that layer of

793
00:46:40,610 --> 00:46:46,320
architecture independence<font color="#E5E5E5"> but it still</font>

794
00:46:43,170 --> 00:46:52,980
need the higher level<font color="#CCCCCC"> entry forms neat</font>

795
00:46:46,320 --> 00:47:04,850
<font color="#E5E5E5">designs and specifies one other comment</font>

796
00:46:52,980 --> 00:47:08,070
<font color="#E5E5E5">before you</font><font color="#CCCCCC"> ask because you asked for</font>

797
00:47:04,850 --> 00:47:10,529
<font color="#E5E5E5">pretty valuable</font><font color="#CCCCCC"> you're less valuable and</font>

798
00:47:08,070 --> 00:47:13,140
<font color="#CCCCCC">you notice these a bunch of all codes at</font>

799
00:47:10,530 --> 00:47:15,240
plan<font color="#CCCCCC"> yeah when</font><font color="#E5E5E5"> he showed that the</font>

800
00:47:13,140 --> 00:47:21,270
<font color="#CCCCCC">blocking</font><font color="#E5E5E5"> enabled a bunch of memory</font>

801
00:47:15,240 --> 00:47:23,959
<font color="#E5E5E5">accesses</font><font color="#CCCCCC"> beckoned for just follow some</font>

802
00:47:21,270 --> 00:47:26,690
points are important<font color="#E5E5E5"> to</font><font color="#CCCCCC"> chasing yeah</font>

803
00:47:23,960 --> 00:47:29,510
if you do that on<font color="#CCCCCC"> the server and the</font>

804
00:47:26,690 --> 00:47:32,930
hose is going to<font color="#E5E5E5"> ask the server</font><font color="#CCCCCC"> EVGA</font>

805
00:47:29,510 --> 00:47:36,470
<font color="#E5E5E5">lsbase</font><font color="#CCCCCC"> that's one rocket on</font><font color="#E5E5E5"> eventually</font>

806
00:47:32,930 --> 00:47:41,660
<font color="#E5E5E5">slowly this link few milliseconds</font>

807
00:47:36,470 --> 00:47:46,180
perhaps if if you move<font color="#E5E5E5"> that all this</font>

808
00:47:41,660 --> 00:47:50,560
station<font color="#E5E5E5"> the right</font><font color="#CCCCCC"> maybe you may have</font>

809
00:47:46,180 --> 00:47:50,560
milliseconds<font color="#CCCCCC"> for each of those</font>

810
00:47:52,810 --> 00:47:59,049
<font color="#E5E5E5">again slowing it down yeah I'm just</font>

811
00:47:56,830 --> 00:48:02,440
<font color="#E5E5E5">thinking</font><font color="#CCCCCC"> like you</font><font color="#E5E5E5"> know first of all</font>

812
00:47:59,050 --> 00:48:04,450
right I<font color="#E5E5E5"> had</font><font color="#CCCCCC"> a threat</font><font color="#E5E5E5"> DB support to</font>

813
00:48:02,440 --> 00:48:05,950
something and it's a nightmare<font color="#CCCCCC"> and I</font>

814
00:48:04,450 --> 00:48:13,299
don't<font color="#E5E5E5"> want ever deal with that again</font>

815
00:48:05,950 --> 00:48:15,640
<font color="#E5E5E5">it'd be nice well and then there's</font><font color="#CCCCCC"> ya</font>

816
00:48:13,300 --> 00:48:17,770
<font color="#E5E5E5">fallback stuff but it seems to me like</font>

817
00:48:15,640 --> 00:48:22,240
<font color="#E5E5E5">you don't need something like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> but</font>

818
00:48:17,770 --> 00:48:27,120
this<font color="#E5E5E5"> scheme good</font><font color="#CCCCCC"> notify are you defined</font>

819
00:48:22,240 --> 00:48:27,120
the<font color="#CCCCCC"> help file extract</font>

820
00:48:27,370 --> 00:48:30,420
like gdb server

821
00:48:31,650 --> 00:48:37,480
generally some other implementations

822
00:48:35,170 --> 00:48:42,849
probably wouldn't know how<font color="#E5E5E5"> either</font>

823
00:48:37,480 --> 00:48:49,210
because<font color="#CCCCCC"> it nothing needs</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> can</font>

824
00:48:42,849 --> 00:48:52,540
<font color="#E5E5E5">either make that new requirement or this</font>

825
00:48:49,210 --> 00:48:55,270
<font color="#E5E5E5">live threat</font><font color="#CCCCCC"> division</font><font color="#E5E5E5"> will have to use</font>

826
00:48:52,540 --> 00:48:57,880
<font color="#E5E5E5">that same</font><font color="#CCCCCC"> simple callback api</font><font color="#E5E5E5"> to just</font>

827
00:48:55,270 --> 00:49:00,839
look up<font color="#E5E5E5"> this different symbol like magic</font>

828
00:48:57,880 --> 00:49:00,839
symbol<font color="#CCCCCC"> meaning sense</font>

829
00:49:15,860 --> 00:49:22,260
<font color="#E5E5E5">the way I imagined it working for GDP</font>

830
00:49:18,660 --> 00:49:24,390
server was that<font color="#CCCCCC"> GD b and e</font><font color="#E5E5E5"> DB server</font>

831
00:49:22,260 --> 00:49:26,700
will both have the<font color="#E5E5E5"> infinity client</font>

832
00:49:24,390 --> 00:49:29,759
library<font color="#E5E5E5"> and TVB would feed their notes</font>

833
00:49:26,700 --> 00:49:31,980
to the one in<font color="#E5E5E5"> the that it held so that</font>

834
00:49:29,760 --> 00:49:33,390
<font color="#CCCCCC">GV will be parsing the elf because</font><font color="#E5E5E5"> i</font>

835
00:49:31,980 --> 00:49:34,920
guess of a gdb server you'll have<font color="#E5E5E5"> the</font>

836
00:49:33,390 --> 00:49:37,290
thing you know sometimes you<font color="#E5E5E5"> might have</font>

837
00:49:34,920 --> 00:49:39,420
like some cut<font color="#E5E5E5"> some</font><font color="#CCCCCC"> lights stripped</font>

838
00:49:37,290 --> 00:49:41,490
binaries over here and you have binaries

839
00:49:39,420 --> 00:49:47,820
with symbols<font color="#CCCCCC"> over here</font><font color="#E5E5E5"> I think that's</font>

840
00:49:41,490 --> 00:49:50,040
pretty common<font color="#E5E5E5"> so that the gdb the gdb</font>

841
00:49:47,820 --> 00:49:52,050
would be will<font color="#CCCCCC"> be loaded in the notes and</font>

842
00:49:50,040 --> 00:49:55,740
<font color="#E5E5E5">then sending them over to do to be</font>

843
00:49:52,050 --> 00:49:57,360
server which would then<font color="#CCCCCC"> and kind of it</font>

844
00:49:55,740 --> 00:49:59,520
<font color="#E5E5E5">would maintain its own copy of they kind</font>

845
00:49:57,360 --> 00:50:02,130
of like each<font color="#E5E5E5"> CD</font><font color="#CCCCCC"> b7 would have its own</font>

846
00:49:59,520 --> 00:50:06,440
<font color="#E5E5E5">copy of the notes and they would execute</font>

847
00:50:02,130 --> 00:50:10,260
there to avoid<font color="#E5E5E5"> the kind of latency and</font>

848
00:50:06,440 --> 00:50:14,900
gdb<font color="#E5E5E5"> I handle any symbol lookups that it</font>

849
00:50:10,260 --> 00:50:14,900
had relocation

850
00:50:22,230 --> 00:50:25,850
it's very<font color="#CCCCCC"> nice meeting</font><font color="#E5E5E5"> people man</font>

851
00:50:25,980 --> 00:50:31,750
<font color="#CCCCCC">don't ask me</font><font color="#E5E5E5"> what done that way back</font>

852
00:50:28,600 --> 00:50:34,120
yeah and you know it is how it is but

853
00:50:31,750 --> 00:50:38,560
it'd be<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> something new didn't</font>

854
00:50:34,120 --> 00:50:44,230
work that way it's more<font color="#CCCCCC"> likes bizarre</font>

855
00:50:38,560 --> 00:50:47,799
because the faceless<font color="#CCCCCC"> consulate function</font>

856
00:50:44,230 --> 00:50:51,970
function point of a yeah<font color="#E5E5E5"> registered is</font>

857
00:50:47,800 --> 00:50:53,710
<font color="#E5E5E5">call</font><font color="#CCCCCC"> that right yeah I don't</font><font color="#E5E5E5"> mean the</font>

858
00:50:51,970 --> 00:50:57,549
lifter<font color="#CCCCCC"> things apart</font><font color="#E5E5E5"> I mean the part</font>

859
00:50:53,710 --> 00:51:00,120
about<font color="#CCCCCC"> be server a special thing</font><font color="#E5E5E5"> in the</font>

860
00:50:57,550 --> 00:51:00,120
<font color="#CCCCCC">core</font><font color="#E5E5E5"> called</font>

861
00:51:02,070 --> 00:51:08,430
<font color="#E5E5E5">that little there's something I know</font>

862
00:51:05,410 --> 00:51:08,430
that<font color="#CCCCCC"> but you mean nuts</font>

863
00:51:23,210 --> 00:51:28,640
<font color="#CCCCCC">is</font><font color="#E5E5E5"> anybody else okay</font>

864
00:51:36,110 --> 00:51:42,750
yeah I've kind<font color="#E5E5E5"> of trying to make it like</font>

865
00:51:39,720 --> 00:51:44,640
as as generic as<font color="#CCCCCC"> possible so like yeah</font>

866
00:51:42,750 --> 00:51:46,590
at the<font color="#E5E5E5"> moment near the note compiler</font>

867
00:51:44,640 --> 00:51:49,109
uses GCC which<font color="#E5E5E5"> Center itself but there's</font>

868
00:51:46,590 --> 00:51:50,880
nothing there's nothing<font color="#CCCCCC"> to stop</font>

869
00:51:49,110 --> 00:51:55,230
there's nothing<font color="#CCCCCC"> forbidding it in</font><font color="#E5E5E5"> the</font>

870
00:51:50,880 --> 00:51:57,030
<font color="#E5E5E5">standard or whatever the spec</font><font color="#CCCCCC"> it's it's</font>

871
00:51:55,230 --> 00:51:59,040
<font color="#E5E5E5">just itself at the moment because that's</font>

872
00:51:57,030 --> 00:52:00,540
<font color="#CCCCCC">what it is</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> kind of they're</font>

873
00:51:59,040 --> 00:52:03,870
self-contained<font color="#E5E5E5"> units they don't rely on</font>

874
00:52:00,540 --> 00:52:05,190
anything else<font color="#CCCCCC"> and elf file they don't</font>

875
00:52:03,870 --> 00:52:10,100
need<font color="#CCCCCC"> the buy order or anything like that</font>

876
00:52:05,190 --> 00:52:13,960
so<font color="#E5E5E5"> they exist kind of on their own cool</font>

877
00:52:10,100 --> 00:52:21,078
<font color="#E5E5E5">all right thank you</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> listening</font>

878
00:52:13,960 --> 00:52:21,079
[Applause]

