1
00:00:05,880 --> 00:00:11,490
everyone<font color="#E5E5E5"> thank you for having me here so</font>

2
00:00:09,780 --> 00:00:13,530
we<font color="#E5E5E5"> are going to</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> talk about</font>

3
00:00:11,490 --> 00:00:16,560
<font color="#CCCCCC">redhead and Microsoft</font><font color="#E5E5E5"> and Linux and</font>

4
00:00:13,530 --> 00:00:19,230
testing<font color="#CCCCCC"> I came from the open</font><font color="#E5E5E5"> source</font>

5
00:00:16,560 --> 00:00:21,479
<font color="#E5E5E5">world and I've</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> doing software</font>

6
00:00:19,230 --> 00:00:24,360
<font color="#E5E5E5">testing and redhead for a very very</font><font color="#CCCCCC"> long</font>

7
00:00:21,480 --> 00:00:26,550
<font color="#CCCCCC">time as</font><font color="#E5E5E5"> you can see and I love to speak</font>

8
00:00:24,360 --> 00:00:28,770
at conferences<font color="#CCCCCC"> I don't have any other</font>

9
00:00:26,550 --> 00:00:32,730
pictures except<font color="#CCCCCC"> somewhere I've been at</font><font color="#E5E5E5"> a</font>

10
00:00:28,770 --> 00:00:35,399
conference<font color="#E5E5E5"> and I am also</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> project</font>

11
00:00:32,729 --> 00:00:38,190
lead of<font color="#E5E5E5"> Kiva TCMS which is an open</font>

12
00:00:35,399 --> 00:00:39,570
<font color="#E5E5E5">source test case</font><font color="#CCCCCC"> management system and</font>

13
00:00:38,190 --> 00:00:41,040
<font color="#E5E5E5">it's an</font><font color="#CCCCCC"> interesting project with an</font>

14
00:00:39,570 --> 00:00:43,260
interesting history<font color="#CCCCCC"> so please</font><font color="#E5E5E5"> check it</font>

15
00:00:41,040 --> 00:00:45,750
out<font color="#E5E5E5"> give me feedbacks report books if</font>

16
00:00:43,260 --> 00:00:48,780
<font color="#E5E5E5">you're you</font><font color="#CCCCCC"> know need something like that</font>

17
00:00:45,750 --> 00:00:50,280
we are happy to<font color="#E5E5E5"> fix books for you</font><font color="#CCCCCC"> and</font>

18
00:00:48,780 --> 00:00:52,380
with that<font color="#E5E5E5"> set I'm done with the</font>

19
00:00:50,280 --> 00:00:55,980
<font color="#E5E5E5">shameless self-promotion and let's talk</font>

20
00:00:52,380 --> 00:00:58,950
<font color="#E5E5E5">about pairwise testing</font><font color="#CCCCCC"> so anyone</font>

21
00:00:55,980 --> 00:00:59,879
familiar with<font color="#E5E5E5"> so what pairwise is okay</font>

22
00:00:58,950 --> 00:01:02,820
<font color="#E5E5E5">one two three</font>

23
00:00:59,880 --> 00:01:04,860
couple<font color="#E5E5E5"> guys okay cool for the rest who</font>

24
00:01:02,820 --> 00:01:09,000
<font color="#CCCCCC">are not familiar</font><font color="#E5E5E5"> I have an example to</font>

25
00:01:04,860 --> 00:01:11,520
<font color="#CCCCCC">demonstrate imagine that</font><font color="#E5E5E5"> our job is to</font>

26
00:01:09,000 --> 00:01:13,049
test this car and you know because we

27
00:01:11,520 --> 00:01:15,420
are<font color="#E5E5E5"> diligent testers and we look</font>

28
00:01:13,049 --> 00:01:17,579
carefully<font color="#E5E5E5"> to what's given</font><font color="#CCCCCC"> to us we see</font>

29
00:01:15,420 --> 00:01:20,460
<font color="#E5E5E5">that we've got a few</font><font color="#CCCCCC"> options for</font>

30
00:01:17,579 --> 00:01:23,008
batteries and a few options for wheels

31
00:01:20,460 --> 00:01:25,889
and<font color="#E5E5E5"> also we have performance mode and</font>

32
00:01:23,009 --> 00:01:27,450
you know<font color="#CCCCCC"> dual</font><font color="#E5E5E5"> engine single engine and</font>

33
00:01:25,889 --> 00:01:30,030
stuff like that<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> have options which</font>

34
00:01:27,450 --> 00:01:32,520
may these are input parameters which may

35
00:01:30,030 --> 00:01:34,979
affect<font color="#E5E5E5"> the performance of the car so</font>

36
00:01:32,520 --> 00:01:36,990
therefore we have<font color="#E5E5E5"> to test them</font><font color="#CCCCCC"> and here</font>

37
00:01:34,979 --> 00:01:39,179
is the list<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> things easier to</font>

38
00:01:36,990 --> 00:01:41,630
comprehend and just for the sake of the

39
00:01:39,179 --> 00:01:44,549
example<font color="#CCCCCC"> I have added some more options</font>

40
00:01:41,630 --> 00:01:47,068
<font color="#CCCCCC">so we can have more combinations in the</font>

41
00:01:44,549 --> 00:01:49,229
example afterwards<font color="#E5E5E5"> and and these ones</font>

42
00:01:47,069 --> 00:01:50,729
<font color="#E5E5E5">I've just</font><font color="#CCCCCC"> make them independent</font><font color="#E5E5E5"> of one</font>

43
00:01:49,229 --> 00:01:54,959
another<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make things simple</font><font color="#E5E5E5"> for</font>

44
00:01:50,729 --> 00:01:57,209
<font color="#CCCCCC">example if you want</font><font color="#E5E5E5"> to do exhaustive</font>

45
00:01:54,959 --> 00:01:59,789
testing of all these<font color="#E5E5E5"> parameters</font><font color="#CCCCCC"> and</font>

46
00:01:57,209 --> 00:02:01,590
<font color="#E5E5E5">they're in possible values we have 32</font>

47
00:01:59,789 --> 00:02:05,369
<font color="#E5E5E5">different combinations between the two</font>

48
00:02:01,590 --> 00:02:07,829
which means<font color="#E5E5E5"> 32 different test</font>

49
00:02:05,369 --> 00:02:10,080
environments that<font color="#E5E5E5"> we need to work with</font>

50
00:02:07,829 --> 00:02:13,769
<font color="#CCCCCC">or in reality if we're testing the</font><font color="#E5E5E5"> car</font>

51
00:02:10,080 --> 00:02:17,160
that<font color="#E5E5E5"> means 32</font><font color="#CCCCCC"> different cars for tests</font>

52
00:02:13,770 --> 00:02:19,410
so that's quite<font color="#E5E5E5"> a lot on</font><font color="#CCCCCC"> top pairwise is</font>

53
00:02:17,160 --> 00:02:22,170
all about reducing<font color="#E5E5E5"> that number</font>

54
00:02:19,410 --> 00:02:24,630
<font color="#CCCCCC">paradise says we should</font><font color="#E5E5E5"> not test all</font>

55
00:02:22,170 --> 00:02:28,380
possible<font color="#E5E5E5"> combinations between all</font>

56
00:02:24,630 --> 00:02:31,680
parameters<font color="#CCCCCC"> that we have</font><font color="#E5E5E5"> and on a website</font>

57
00:02:28,380 --> 00:02:34,019
<font color="#E5E5E5">they</font><font color="#CCCCCC"> claim that in complex software</font>

58
00:02:31,680 --> 00:02:36,450
systems<font color="#CCCCCC"> you don't need to be able</font><font color="#E5E5E5"> to</font>

59
00:02:34,020 --> 00:02:39,210
control<font color="#E5E5E5"> all the input parameters at once</font>

60
00:02:36,450 --> 00:02:41,100
<font color="#E5E5E5">to trigger some defects you need to be</font>

61
00:02:39,210 --> 00:02:43,020
able<font color="#E5E5E5"> to control at most two of them to</font>

62
00:02:41,100 --> 00:02:45,090
trigger pretty much all<font color="#E5E5E5"> of the defects</font>

63
00:02:43,020 --> 00:02:48,630
<font color="#E5E5E5">not all of them but a good amount</font><font color="#CCCCCC"> of</font>

64
00:02:45,090 --> 00:02:50,370
them so if<font color="#E5E5E5"> you can trigger defects by</font>

65
00:02:48,630 --> 00:02:53,310
controlling<font color="#CCCCCC"> only two parameters</font><font color="#E5E5E5"> that</font>

66
00:02:50,370 --> 00:02:55,620
<font color="#E5E5E5">means you can design your tests to take</font>

67
00:02:53,310 --> 00:02:58,650
into<font color="#CCCCCC"> account combinations of two and not</font>

68
00:02:55,620 --> 00:03:01,170
combinations between more parameters so

69
00:02:58,650 --> 00:03:04,950
pairwise is<font color="#E5E5E5"> they it's also called all</font>

70
00:03:01,170 --> 00:03:06,839
pairs<font color="#E5E5E5"> all pairs of two testing and in</font>

71
00:03:04,950 --> 00:03:11,220
<font color="#E5E5E5">this</font><font color="#CCCCCC"> matrix in example if you look at</font><font color="#E5E5E5"> it</font>

72
00:03:06,840 --> 00:03:14,280
<font color="#CCCCCC">it contains all</font><font color="#E5E5E5"> pedals so 60 kilowatt</font>

73
00:03:11,220 --> 00:03:16,080
battery with single engine and then you

74
00:03:14,280 --> 00:03:20,250
know 60 kilowatt battery with draw

75
00:03:16,080 --> 00:03:22,320
engine and then again 60<font color="#E5E5E5"> kV with 21 inch</font>

76
00:03:20,250 --> 00:03:24,840
<font color="#E5E5E5">wheels and with</font><font color="#CCCCCC"> 19-inch wheels and so on</font>

77
00:03:22,320 --> 00:03:26,820
so it contains<font color="#E5E5E5"> all possible pairs of two</font>

78
00:03:24,840 --> 00:03:30,180
but doesn't contain<font color="#E5E5E5"> all possible</font>

79
00:03:26,820 --> 00:03:33,209
combinations and the maximum<font color="#E5E5E5"> size of</font>

80
00:03:30,180 --> 00:03:36,180
this kind of matrices is<font color="#E5E5E5"> determined by</font>

81
00:03:33,209 --> 00:03:38,850
the two<font color="#CCCCCC"> parameters with the largest set</font>

82
00:03:36,180 --> 00:03:41,160
<font color="#CCCCCC">of possible values so in this case we</font>

83
00:03:38,850 --> 00:03:45,170
have battery with<font color="#E5E5E5"> four values and engine</font>

84
00:03:41,160 --> 00:03:45,170
with two<font color="#E5E5E5"> values so yes</font>

85
00:03:47,930 --> 00:03:56,630
which one okay<font color="#E5E5E5"> single and okay yeah</font><font color="#CCCCCC"> bad</font>

86
00:03:55,950 --> 00:04:00,510
<font color="#CCCCCC">example</font>

87
00:03:56,630 --> 00:04:04,590
so that should be so so<font color="#E5E5E5"> this should be</font>

88
00:04:00,510 --> 00:04:08,010
here yeah because<font color="#E5E5E5"> I</font><font color="#CCCCCC"> have create</font><font color="#E5E5E5"> created</font>

89
00:04:04,590 --> 00:04:10,010
this by hand<font color="#E5E5E5"> to be beautiful yeah good</font>

90
00:04:08,010 --> 00:04:13,170
catch thank you<font color="#E5E5E5"> thank you</font>

91
00:04:10,010 --> 00:04:14,910
so yeah that's<font color="#E5E5E5"> the eight in in this</font>

92
00:04:13,170 --> 00:04:17,880
example<font color="#CCCCCC"> eight is the</font><font color="#E5E5E5"> largest possible</font>

93
00:04:14,910 --> 00:04:20,219
value of<font color="#E5E5E5"> this matrix</font><font color="#CCCCCC"> so you take the two</font>

94
00:04:17,880 --> 00:04:22,200
<font color="#CCCCCC">parameters with</font><font color="#E5E5E5"> the most values and</font>

95
00:04:20,220 --> 00:04:23,730
<font color="#CCCCCC">multiply them that's the larger size and</font>

96
00:04:22,200 --> 00:04:28,320
obviously<font color="#E5E5E5"> eight is much smaller than</font>

97
00:04:23,730 --> 00:04:29,720
<font color="#CCCCCC">thirty-two there is a</font><font color="#E5E5E5"> community website</font>

98
00:04:28,320 --> 00:04:32,760
called pairwise<font color="#CCCCCC"> dot-org</font>

99
00:04:29,720 --> 00:04:33,270
<font color="#E5E5E5">Microsoft is sponsoring it and they seem</font>

100
00:04:32,760 --> 00:04:35,610
to<font color="#CCCCCC"> be</font>

101
00:04:33,270 --> 00:04:37,680
<font color="#CCCCCC">to</font><font color="#E5E5E5"> match the the</font><font color="#CCCCCC"> only one</font><font color="#E5E5E5"> entity</font><font color="#CCCCCC"> that is</font>

102
00:04:35,610 --> 00:04:41,280
promoting this kind<font color="#CCCCCC"> of testing at least</font>

103
00:04:37,680 --> 00:04:43,640
to my knowledge<font color="#CCCCCC"> on this website</font><font color="#E5E5E5"> there is</font>

104
00:04:41,280 --> 00:04:45,989
a list<font color="#CCCCCC"> of for a lot</font><font color="#E5E5E5"> of research</font><font color="#CCCCCC"> papers</font>

105
00:04:43,640 --> 00:04:47,400
<font color="#CCCCCC">there's also a list of many different</font>

106
00:04:45,990 --> 00:04:50,010
tooling for<font color="#E5E5E5"> different programming</font>

107
00:04:47,400 --> 00:04:52,830
languages<font color="#E5E5E5"> available from the website</font><font color="#CCCCCC"> the</font>

108
00:04:50,010 --> 00:04:54,539
<font color="#CCCCCC">residuals</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> a pairwise - from</font>

109
00:04:52,830 --> 00:04:58,469
Microsoft available on their github

110
00:04:54,540 --> 00:05:01,740
<font color="#E5E5E5">account</font><font color="#CCCCCC"> and they claim that pairwise</font>

111
00:04:58,470 --> 00:05:04,440
testing is effective at finding<font color="#E5E5E5"> the</font>

112
00:05:01,740 --> 00:05:06,630
effects<font color="#E5E5E5"> and it's a</font><font color="#CCCCCC"> uneffective test</font>

113
00:05:04,440 --> 00:05:09,410
strategy and using these tools<font color="#CCCCCC"> that are</font>

114
00:05:06,630 --> 00:05:13,500
<font color="#CCCCCC">available</font><font color="#E5E5E5"> and knowing how pairwise works</font>

115
00:05:09,410 --> 00:05:15,720
<font color="#CCCCCC">you can actually use it to generate</font><font color="#E5E5E5"> your</font>

116
00:05:13,500 --> 00:05:17,580
test cases with particular parameters

117
00:05:15,720 --> 00:05:20,100
automatically so you<font color="#E5E5E5"> have some tools</font>

118
00:05:17,580 --> 00:05:22,500
that<font color="#E5E5E5"> - that tells you what to do when</font>

119
00:05:20,100 --> 00:05:26,820
you perform testing and this is what<font color="#E5E5E5"> I</font>

120
00:05:22,500 --> 00:05:29,730
what<font color="#E5E5E5"> I did</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> made an experiment which</font>

121
00:05:26,820 --> 00:05:32,969
involves installation testing<font color="#E5E5E5"> of</font>

122
00:05:29,730 --> 00:05:35,940
Enterprise Linux version 6.9<font color="#E5E5E5"> in</font>

123
00:05:32,970 --> 00:05:37,740
particular<font color="#E5E5E5"> where I applied these</font>

124
00:05:35,940 --> 00:05:40,260
techniques to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> entire testing</font>

125
00:05:37,740 --> 00:05:42,480
<font color="#E5E5E5">combined of the product and across all</font>

126
00:05:40,260 --> 00:05:45,900
product variants to see what will<font color="#CCCCCC"> happen</font>

127
00:05:42,480 --> 00:05:48,570
<font color="#CCCCCC">so we're going to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about the</font>

128
00:05:45,900 --> 00:05:52,169
experiment<font color="#CCCCCC"> installation testing very</font>

129
00:05:48,570 --> 00:05:56,580
quickly<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what my team does</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> to</font>

130
00:05:52,170 --> 00:05:59,730
what you know I'm going<font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> we</font>

131
00:05:56,580 --> 00:06:01,729
<font color="#E5E5E5">have this program called anaconda this</font>

132
00:05:59,730 --> 00:06:05,370
is the installation<font color="#CCCCCC"> program for</font><font color="#E5E5E5"> fedora</font>

133
00:06:01,730 --> 00:06:08,310
<font color="#E5E5E5">Enterprise Linux and OS these types of</font>

134
00:06:05,370 --> 00:06:10,200
distributions<font color="#CCCCCC"> and our job is to test</font>

135
00:06:08,310 --> 00:06:12,480
that piece of<font color="#E5E5E5"> software to make sure</font>

136
00:06:10,200 --> 00:06:14,729
Linux can<font color="#CCCCCC"> be installed on</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> computer</font>

137
00:06:12,480 --> 00:06:17,130
<font color="#E5E5E5">and when you click the finish button the</font>

138
00:06:14,730 --> 00:06:19,620
restart button<font color="#E5E5E5"> in this relation screen</font>

139
00:06:17,130 --> 00:06:22,170
you can actually reboot into<font color="#CCCCCC"> a possibly</font>

140
00:06:19,620 --> 00:06:24,360
<font color="#E5E5E5">working system but at least you can</font><font color="#CCCCCC"> be</font>

141
00:06:22,170 --> 00:06:27,720
able<font color="#CCCCCC"> to log</font><font color="#E5E5E5"> into a command line and fix</font>

142
00:06:24,360 --> 00:06:30,180
it<font color="#E5E5E5"> from there and we you</font><font color="#CCCCCC"> know it's</font>

143
00:06:27,720 --> 00:06:32,370
mostly<font color="#CCCCCC"> written in</font><font color="#E5E5E5"> Python with the</font>

144
00:06:30,180 --> 00:06:34,290
graphical<font color="#E5E5E5"> user interface it has also</font>

145
00:06:32,370 --> 00:06:37,400
<font color="#E5E5E5">text mode user interface common line</font>

146
00:06:34,290 --> 00:06:39,960
fully automated interface we have

147
00:06:37,400 --> 00:06:42,270
integrations with different tooling from

148
00:06:39,960 --> 00:06:45,390
<font color="#E5E5E5">Linux so for example here says file</font>

149
00:06:42,270 --> 00:06:47,169
system type<font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> drop-down you have</font>

150
00:06:45,390 --> 00:06:48,759
all possible<font color="#CCCCCC"> file</font><font color="#E5E5E5"> system</font>

151
00:06:47,169 --> 00:06:52,479
types that are<font color="#E5E5E5"> supported</font><font color="#CCCCCC"> in the Linux</font>

152
00:06:48,759 --> 00:06:54,639
distribution<font color="#CCCCCC"> and to be able to perform</font>

153
00:06:52,479 --> 00:06:56,020
partitioning with these<font color="#E5E5E5"> file system</font>

154
00:06:54,639 --> 00:06:58,569
types we actually the installation

155
00:06:56,020 --> 00:07:00,639
program integrates with the<font color="#CCCCCC"> command-line</font>

156
00:06:58,569 --> 00:07:03,969
<font color="#CCCCCC">tools for the that</font><font color="#E5E5E5"> particular file</font>

157
00:07:00,639 --> 00:07:05,349
<font color="#E5E5E5">system</font><font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> one screen but it does</font>

158
00:07:03,969 --> 00:07:08,039
behind<font color="#E5E5E5"> the</font><font color="#CCCCCC"> scenes it does different</font>

159
00:07:05,349 --> 00:07:10,800
things<font color="#CCCCCC"> we also have for example</font>

160
00:07:08,039 --> 00:07:12,969
<font color="#E5E5E5">networking to download from the network</font>

161
00:07:10,800 --> 00:07:14,349
<font color="#CCCCCC">inside</font><font color="#E5E5E5"> of the installation program and</font>

162
00:07:12,969 --> 00:07:16,629
that's<font color="#CCCCCC"> the network manager we don't</font>

163
00:07:14,349 --> 00:07:20,650
manage networking by ourselves<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just</font>

164
00:07:16,629 --> 00:07:23,379
integrate with network manager<font color="#E5E5E5"> and all</font>

165
00:07:20,650 --> 00:07:26,620
these integrations<font color="#CCCCCC"> they can be</font><font color="#E5E5E5"> a source</font>

166
00:07:23,379 --> 00:07:29,110
of<font color="#E5E5E5"> problems and this is</font><font color="#CCCCCC"> usually how our</font>

167
00:07:26,620 --> 00:07:30,849
test<font color="#E5E5E5"> cases I are designed we we try to</font>

168
00:07:29,110 --> 00:07:35,050
<font color="#E5E5E5">design around</font><font color="#CCCCCC"> these integrations and</font>

169
00:07:30,849 --> 00:07:36,520
what<font color="#E5E5E5"> could possibly go</font><font color="#CCCCCC"> wrong</font><font color="#E5E5E5"> from the</font>

170
00:07:35,050 --> 00:07:38,229
point of view<font color="#E5E5E5"> of testing we have nine</font>

171
00:07:36,520 --> 00:07:40,330
different product variants so we have

172
00:07:38,229 --> 00:07:46,870
stuff like client and server and

173
00:07:40,330 --> 00:07:49,589
workstation and we have different CPU

174
00:07:46,870 --> 00:07:52,300
architectures<font color="#E5E5E5"> different hardware that</font>

175
00:07:49,589 --> 00:07:55,689
these variants run on so we have<font color="#E5E5E5"> Intel</font>

176
00:07:52,300 --> 00:07:58,180
32 and 64-bit and we also have IBM power

177
00:07:55,689 --> 00:08:02,770
and IBM mainframe<font color="#CCCCCC"> that we support on the</font>

178
00:07:58,180 --> 00:08:05,319
server world and in<font color="#CCCCCC"> fedora or you know</font>

179
00:08:02,770 --> 00:08:07,870
new versions we<font color="#CCCCCC"> have other hardware</font>

180
00:08:05,319 --> 00:08:11,949
platforms like<font color="#CCCCCC"> arm 64 frog for example</font>

181
00:08:07,870 --> 00:08:14,710
and so this<font color="#CCCCCC"> number can grow now it can</font>

182
00:08:11,949 --> 00:08:17,050
<font color="#E5E5E5">become</font><font color="#CCCCCC"> very large the traditional way of</font>

183
00:08:14,710 --> 00:08:19,899
<font color="#E5E5E5">how the team</font><font color="#CCCCCC"> is handling</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is for</font>

184
00:08:17,050 --> 00:08:22,659
each<font color="#E5E5E5"> product variant which is some</font>

185
00:08:19,899 --> 00:08:24,879
content<font color="#E5E5E5"> set and on a CPU architecture we</font>

186
00:08:22,659 --> 00:08:26,949
<font color="#E5E5E5">have one person that</font><font color="#CCCCCC"> is dedicated</font><font color="#E5E5E5"> to</font>

187
00:08:24,879 --> 00:08:29,860
<font color="#E5E5E5">only that variant and they are</font>

188
00:08:26,949 --> 00:08:32,589
responsible<font color="#CCCCCC"> for testing</font><font color="#E5E5E5"> averaging on</font>

189
00:08:29,860 --> 00:08:36,849
that variant we call them variant owners

190
00:08:32,589 --> 00:08:38,440
or architecture owners<font color="#E5E5E5"> the interesting</font>

191
00:08:36,849 --> 00:08:41,110
<font color="#CCCCCC">thing about all these variants is</font>

192
00:08:38,440 --> 00:08:45,490
actually that they are mostly<font color="#CCCCCC"> the same</font>

193
00:08:41,110 --> 00:08:48,540
thing<font color="#CCCCCC"> the software is the same</font><font color="#E5E5E5"> when it's</font>

194
00:08:45,490 --> 00:08:52,600
when the software is put into the

195
00:08:48,540 --> 00:08:55,839
installation media<font color="#CCCCCC"> our build servers</font>

196
00:08:52,600 --> 00:08:59,500
they have no idea for what kind<font color="#E5E5E5"> of</font>

197
00:08:55,839 --> 00:09:00,700
variant they are<font color="#E5E5E5"> building and the</font>

198
00:08:59,500 --> 00:09:03,880
software itself

199
00:09:00,700 --> 00:09:06,430
very rarely does<font color="#E5E5E5"> any checks on</font><font color="#CCCCCC"> to to see</font>

200
00:09:03,880 --> 00:09:09,130
on what<font color="#E5E5E5"> platform</font><font color="#CCCCCC"> it's running</font><font color="#E5E5E5"> pretty</font>

201
00:09:06,430 --> 00:09:11,469
<font color="#E5E5E5">much all the times we only check what is</font>

202
00:09:09,130 --> 00:09:13,630
<font color="#E5E5E5">the underlying</font><font color="#CCCCCC"> CPU architecture if we</font>

203
00:09:11,470 --> 00:09:16,750
need to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> something which is specific</font>

204
00:09:13,630 --> 00:09:19,840
<font color="#CCCCCC">to that architecture so for the majority</font>

205
00:09:16,750 --> 00:09:22,810
<font color="#CCCCCC">of cases</font><font color="#E5E5E5"> all of</font><font color="#CCCCCC"> these variants work</font>

206
00:09:19,840 --> 00:09:24,520
pretty<font color="#CCCCCC"> much in the same way and when I</font>

207
00:09:22,810 --> 00:09:26,859
told<font color="#E5E5E5"> you I do testing for a long time</font>

208
00:09:24,520 --> 00:09:28,810
I've been<font color="#E5E5E5"> testing installation for the</font>

209
00:09:26,860 --> 00:09:32,770
last 11 years

210
00:09:28,810 --> 00:09:35,589
and I very rarely have<font color="#E5E5E5"> seen books about</font>

211
00:09:32,770 --> 00:09:37,689
something that works on<font color="#E5E5E5"> one variant and</font>

212
00:09:35,590 --> 00:09:42,610
<font color="#E5E5E5">the same thing doesn't</font><font color="#CCCCCC"> work on another</font>

213
00:09:37,690 --> 00:09:44,380
variant so that's why I I think<font color="#CCCCCC"> it's</font>

214
00:09:42,610 --> 00:09:46,210
mostly safe to consider<font color="#E5E5E5"> this product</font>

215
00:09:44,380 --> 00:09:51,460
variants to be independent<font color="#CCCCCC"> and to be the</font>

216
00:09:46,210 --> 00:09:53,860
same thing when<font color="#E5E5E5"> you see while later the</font>

217
00:09:51,460 --> 00:09:55,600
<font color="#E5E5E5">test</font><font color="#CCCCCC"> suite that</font><font color="#E5E5E5"> we primarily use for</font>

218
00:09:53,860 --> 00:09:58,900
installation testing<font color="#E5E5E5"> is split into</font><font color="#CCCCCC"> three</font>

219
00:09:55,600 --> 00:10:02,950
groups<font color="#E5E5E5"> from</font><font color="#CCCCCC"> so-called</font><font color="#E5E5E5"> tier 1 2</font><font color="#CCCCCC"> & 3 tier</font>

220
00:09:58,900 --> 00:10:05,920
<font color="#CCCCCC">1 is</font><font color="#E5E5E5"> a very very small test suite it's</font>

221
00:10:02,950 --> 00:10:08,080
fully<font color="#E5E5E5"> automated it runs against every</font>

222
00:10:05,920 --> 00:10:11,770
single<font color="#CCCCCC"> built against every</font><font color="#E5E5E5"> single</font>

223
00:10:08,080 --> 00:10:14,200
product variant<font color="#E5E5E5"> and it's not subject to</font>

224
00:10:11,770 --> 00:10:16,689
my experiment we don't want to touch<font color="#E5E5E5"> it</font>

225
00:10:14,200 --> 00:10:18,940
tier 2 & 3<font color="#E5E5E5"> is the subject of the</font>

226
00:10:16,690 --> 00:10:21,850
experiment<font color="#CCCCCC"> it's a much much larger test</font>

227
00:10:18,940 --> 00:10:24,250
suite the number of test<font color="#CCCCCC"> cases in in the</font>

228
00:10:21,850 --> 00:10:29,680
tier 2<font color="#CCCCCC"> & 3</font><font color="#E5E5E5"> group is almost 20</font><font color="#CCCCCC"> times as</font>

229
00:10:24,250 --> 00:10:33,310
much compared to tier 1 traditionally we

230
00:10:29,680 --> 00:10:35,859
try to execute<font color="#E5E5E5"> tier 2</font><font color="#CCCCCC"> & 3</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> least once</font>

231
00:10:33,310 --> 00:10:41,020
per<font color="#CCCCCC"> week we try to complete all</font><font color="#E5E5E5"> the</font>

232
00:10:35,860 --> 00:10:42,940
testing our testing campaign is usually

233
00:10:41,020 --> 00:10:46,329
several<font color="#E5E5E5"> months long and during the time</font>

234
00:10:42,940 --> 00:10:49,510
we average around<font color="#CCCCCC"> 6,000 test case</font>

235
00:10:46,330 --> 00:10:52,300
execution which means<font color="#CCCCCC"> 6000 times</font><font color="#E5E5E5"> or a</font>

236
00:10:49,510 --> 00:10:54,250
boot<font color="#E5E5E5"> into installation media take your</font>

237
00:10:52,300 --> 00:10:56,170
time about<font color="#E5E5E5"> 20 to 30 minutes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> complete</font>

238
00:10:54,250 --> 00:10:58,360
<font color="#E5E5E5">the installation and then reboot into</font>

239
00:10:56,170 --> 00:10:58,900
<font color="#CCCCCC">the system to see if it's working</font><font color="#E5E5E5"> as</font>

240
00:10:58,360 --> 00:11:02,050
expected

241
00:10:58,900 --> 00:11:04,150
<font color="#E5E5E5">so that takes quite</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> time you</font>

242
00:11:02,050 --> 00:11:08,140
<font color="#CCCCCC">know</font><font color="#E5E5E5"> obviously that doesn't scale much</font>

243
00:11:04,150 --> 00:11:11,319
<font color="#CCCCCC">and let's see what we</font><font color="#E5E5E5"> can do about</font><font color="#CCCCCC"> it</font>

244
00:11:08,140 --> 00:11:14,910
so I've studied my test suite<font color="#CCCCCC"> and</font>

245
00:11:11,320 --> 00:11:14,910
created very very simple experiment

246
00:11:16,009 --> 00:11:20,060
the first thing is that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually do</font>

247
00:11:18,319 --> 00:11:24,769
some test cases<font color="#CCCCCC"> which are platform</font>

248
00:11:20,060 --> 00:11:26,989
dependent<font color="#E5E5E5"> not many of them mostly on IBM</font>

249
00:11:24,769 --> 00:11:28,730
power and IBM mainframe platforms<font color="#E5E5E5"> so</font>

250
00:11:26,990 --> 00:11:31,160
there isn't<font color="#CCCCCC"> much we can do about</font><font color="#E5E5E5"> them</font>

251
00:11:28,730 --> 00:11:33,980
you<font color="#E5E5E5"> know it's not like we cannot execute</font>

252
00:11:31,160 --> 00:11:35,920
these cases we have<font color="#E5E5E5"> to execute</font><font color="#CCCCCC"> them so</font>

253
00:11:33,980 --> 00:11:38,959
we just take them<font color="#E5E5E5"> and transfer them to</font>

254
00:11:35,920 --> 00:11:39,380
<font color="#CCCCCC">my experiment test plan</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> go on from</font>

255
00:11:38,959 --> 00:11:42,258
there

256
00:11:39,380 --> 00:11:46,490
<font color="#E5E5E5">and then we have a larger</font><font color="#CCCCCC"> group of tests</font>

257
00:11:42,259 --> 00:11:48,170
which<font color="#CCCCCC"> have parameters</font><font color="#E5E5E5"> so stuff</font><font color="#CCCCCC"> like we</font>

258
00:11:46,490 --> 00:11:50,870
have we have a test<font color="#CCCCCC"> cast cold storage</font>

259
00:11:48,170 --> 00:11:54,740
<font color="#CCCCCC">slush ice cozy</font><font color="#E5E5E5"> and that means perform</font>

260
00:11:50,870 --> 00:11:57,410
installation<font color="#CCCCCC"> attach a</font><font color="#E5E5E5"> disk over the</font>

261
00:11:54,740 --> 00:12:01,630
<font color="#CCCCCC">network and place the root filesystem on</font>

262
00:11:57,410 --> 00:12:04,189
that disk<font color="#CCCCCC"> and for that test case we have</font>

263
00:12:01,630 --> 00:12:07,939
authentication<font color="#CCCCCC"> type</font><font color="#E5E5E5"> and we're interested</font>

264
00:12:04,190 --> 00:12:09,470
<font color="#CCCCCC">in only these three and we also have a</font>

265
00:12:07,940 --> 00:12:11,300
networking subsystem that<font color="#E5E5E5"> manages the</font>

266
00:12:09,470 --> 00:12:15,589
<font color="#CCCCCC">ice case the connections in</font><font color="#E5E5E5"> on Linux and</font>

267
00:12:11,300 --> 00:12:17,660
on<font color="#E5E5E5"> our version</font><font color="#CCCCCC"> 6</font><font color="#E5E5E5"> we have to a networking</font>

268
00:12:15,589 --> 00:12:20,810
subsystems which need to<font color="#CCCCCC"> be able to</font><font color="#E5E5E5"> work</font>

269
00:12:17,660 --> 00:12:24,860
pretty<font color="#E5E5E5"> much in the same</font><font color="#CCCCCC"> way so for</font>

270
00:12:20,810 --> 00:12:29,229
testing that means<font color="#CCCCCC"> 6</font><font color="#E5E5E5"> combinations for</font>

271
00:12:24,860 --> 00:12:32,120
<font color="#CCCCCC">only one test case now I said</font><font color="#E5E5E5"> pairwise</font>

272
00:12:29,230 --> 00:12:34,819
is something to do with parameters and

273
00:12:32,120 --> 00:12:36,439
if we try<font color="#E5E5E5"> to apply pairwise here we</font>

274
00:12:34,819 --> 00:12:39,589
don't<font color="#E5E5E5"> get any difference because because</font>

275
00:12:36,439 --> 00:12:43,880
we<font color="#CCCCCC"> have only</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> parameters and looking</font>

276
00:12:39,589 --> 00:12:46,490
at to the existing test<font color="#E5E5E5"> suite almost all</font>

277
00:12:43,880 --> 00:12:48,170
the tests have<font color="#CCCCCC"> only two parameters</font><font color="#E5E5E5"> very</font>

278
00:12:46,490 --> 00:12:51,199
rarely we have three four<font color="#E5E5E5"> or</font><font color="#CCCCCC"> five</font>

279
00:12:48,170 --> 00:12:55,189
parameters<font color="#E5E5E5"> in a test case that we want</font>

280
00:12:51,199 --> 00:12:57,680
to<font color="#E5E5E5"> test but across all variants you know</font>

281
00:12:55,189 --> 00:13:02,120
I have to execute<font color="#E5E5E5"> these six nine times</font>

282
00:12:57,680 --> 00:13:04,370
so it equals 54 and I can consider<font color="#E5E5E5"> the</font>

283
00:13:02,120 --> 00:13:07,149
variant<font color="#E5E5E5"> to be a parameter to testing and</font>

284
00:13:04,370 --> 00:13:09,920
<font color="#E5E5E5">this is what I did I've applied pairwise</font>

285
00:13:07,149 --> 00:13:13,040
across all<font color="#CCCCCC"> parameters including the</font>

286
00:13:09,920 --> 00:13:14,870
product variant<font color="#CCCCCC"> s</font><font color="#E5E5E5"> parameter</font><font color="#CCCCCC"> and now that</font>

287
00:13:13,040 --> 00:13:16,219
we<font color="#E5E5E5"> have three parameters you know we can</font>

288
00:13:14,870 --> 00:13:18,350
do the calculation we see that we get

289
00:13:16,220 --> 00:13:23,389
<font color="#CCCCCC">50% reduction immediately which is yay</font>

290
00:13:18,350 --> 00:13:26,120
<font color="#E5E5E5">cool and the last group of tests that we</font>

291
00:13:23,389 --> 00:13:27,350
have in<font color="#E5E5E5"> our test suite are such that</font>

292
00:13:26,120 --> 00:13:29,870
they do not<font color="#E5E5E5"> have</font><font color="#CCCCCC"> any</font>

293
00:13:27,350 --> 00:13:33,440
visible parameters<font color="#CCCCCC"> now</font><font color="#E5E5E5"> that we care</font>

294
00:13:29,870 --> 00:13:37,310
<font color="#CCCCCC">about and for example</font><font color="#E5E5E5"> we have this code</font>

295
00:13:33,440 --> 00:13:40,310
<font color="#E5E5E5">partitioning slash swap on a VM which</font>

296
00:13:37,310 --> 00:13:43,459
means<font color="#CCCCCC"> estelle Linux</font><font color="#E5E5E5"> you know do the</font>

297
00:13:40,310 --> 00:13:45,380
<font color="#CCCCCC">partitioning</font><font color="#E5E5E5"> don't care what you do</font><font color="#CCCCCC"> as</font>

298
00:13:43,460 --> 00:13:47,600
long<font color="#CCCCCC"> as you place the swap partition on</font>

299
00:13:45,380 --> 00:13:51,439
a VM on logical volume and make sure

300
00:13:47,600 --> 00:13:53,450
that it's working<font color="#E5E5E5"> and the only thing I</font>

301
00:13:51,440 --> 00:13:55,430
can I can do about it<font color="#CCCCCC"> instead of</font>

302
00:13:53,450 --> 00:13:58,790
<font color="#E5E5E5">executing it nine different times for</font>

303
00:13:55,430 --> 00:14:00,949
every<font color="#E5E5E5"> single variant</font><font color="#CCCCCC"> I can randomize</font>

304
00:13:58,790 --> 00:14:03,380
they say<font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to execute only one time</font>

305
00:14:00,950 --> 00:14:05,150
and for every<font color="#CCCCCC"> different build I want to</font>

306
00:14:03,380 --> 00:14:07,760
<font color="#CCCCCC">randomize on what product variant</font><font color="#E5E5E5"> I'm</font>

307
00:14:05,150 --> 00:14:10,280
executing that<font color="#E5E5E5"> cases from these from</font>

308
00:14:07,760 --> 00:14:14,870
this group so this is the third<font color="#E5E5E5"> part</font><font color="#CCCCCC"> of</font>

309
00:14:10,280 --> 00:14:17,390
my experiment<font color="#E5E5E5"> very simple algorithm</font><font color="#CCCCCC"> and</font>

310
00:14:14,870 --> 00:14:19,520
I was very<font color="#E5E5E5"> quick actually</font><font color="#CCCCCC"> to to create</font>

311
00:14:17,390 --> 00:14:21,740
<font color="#CCCCCC">my experiment</font><font color="#E5E5E5"> but I needed some</font>

312
00:14:19,520 --> 00:14:23,630
acceptance criteria<font color="#CCCCCC"> and I know I should</font>

313
00:14:21,740 --> 00:14:26,060
have<font color="#CCCCCC"> done this beforehand but I actually</font>

314
00:14:23,630 --> 00:14:29,720
<font color="#CCCCCC">define them after</font><font color="#E5E5E5"> I I knew how to</font>

315
00:14:26,060 --> 00:14:31,939
execute<font color="#E5E5E5"> the experiment first I obviously</font>

316
00:14:29,720 --> 00:14:34,130
want to have less test cases<font color="#CCCCCC"> case</font>

317
00:14:31,940 --> 00:14:36,740
<font color="#E5E5E5">executions in</font><font color="#CCCCCC"> toto</font><font color="#E5E5E5"> so anything under</font>

318
00:14:34,130 --> 00:14:39,800
<font color="#CCCCCC">6000 will</font><font color="#E5E5E5"> be fine and you can</font><font color="#CCCCCC"> actually</font>

319
00:14:36,740 --> 00:14:41,780
<font color="#E5E5E5">calculate on paper how much savings</font>

320
00:14:39,800 --> 00:14:46,040
<font color="#E5E5E5">you're going</font><font color="#CCCCCC"> to get even before</font><font color="#E5E5E5"> starting</font>

321
00:14:41,780 --> 00:14:47,630
<font color="#CCCCCC">testing the second is more hard to</font>

322
00:14:46,040 --> 00:14:50,839
measure I don't want to be missing

323
00:14:47,630 --> 00:14:53,210
existing<font color="#CCCCCC"> bugs so I want to</font><font color="#E5E5E5"> test less but</font>

324
00:14:50,840 --> 00:14:54,890
at the same time<font color="#E5E5E5"> I don't want to say to</font>

325
00:14:53,210 --> 00:14:58,340
my<font color="#E5E5E5"> product manager yeah everything is</font>

326
00:14:54,890 --> 00:14:59,990
green<font color="#E5E5E5"> because I you know I but I didn't</font>

327
00:14:58,340 --> 00:15:02,390
test<font color="#E5E5E5"> so there were some</font><font color="#CCCCCC"> bugs but I have</font>

328
00:14:59,990 --> 00:15:04,340
no idea<font color="#CCCCCC"> what these</font><font color="#E5E5E5"> boys are and for</font><font color="#CCCCCC"> that</font>

329
00:15:02,390 --> 00:15:06,590
<font color="#CCCCCC">reason I</font><font color="#E5E5E5"> compared the book that I found</font>

330
00:15:04,340 --> 00:15:10,040
during<font color="#CCCCCC"> my experiment with the birds that</font>

331
00:15:06,590 --> 00:15:12,110
<font color="#E5E5E5">the rest of the team has found and the</font>

332
00:15:10,040 --> 00:15:14,660
last one is even<font color="#CCCCCC"> more trickier to</font>

333
00:15:12,110 --> 00:15:16,640
<font color="#E5E5E5">measure don't increase product risk and</font>

334
00:15:14,660 --> 00:15:18,620
for the sake of the<font color="#CCCCCC"> experiment we</font>

335
00:15:16,640 --> 00:15:21,800
measure product risk as the number of

336
00:15:18,620 --> 00:15:24,350
<font color="#E5E5E5">books which are reported as critical and</font>

337
00:15:21,800 --> 00:15:26,750
that<font color="#CCCCCC"> I was not able</font><font color="#E5E5E5"> to find for some</font>

338
00:15:24,350 --> 00:15:29,630
reason and I want<font color="#E5E5E5"> to know why I was not</font>

339
00:15:26,750 --> 00:15:34,610
able<font color="#E5E5E5"> to do this because I want to make</font>

340
00:15:29,630 --> 00:15:37,400
pairwise the main testing strategy so

341
00:15:34,610 --> 00:15:40,190
the results before<font color="#CCCCCC"> we continue</font>

342
00:15:37,400 --> 00:15:41,240
if<font color="#E5E5E5"> anyone isn't clear about this I made</font>

343
00:15:40,190 --> 00:15:43,370
my experiment

344
00:15:41,240 --> 00:15:46,850
in parallel with the rest of<font color="#E5E5E5"> the team so</font>

345
00:15:43,370 --> 00:15:48,529
anything that<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> doing had no impact</font>

346
00:15:46,850 --> 00:15:50,149
<font color="#E5E5E5">on the release schedule of the product</font>

347
00:15:48,529 --> 00:15:52,550
and on the work of the rest of the team

348
00:15:50,149 --> 00:15:55,070
so everybody else was working<font color="#CCCCCC"> like they</font>

349
00:15:52,550 --> 00:15:56,959
were used to<font color="#E5E5E5"> before that and I was doing</font>

350
00:15:55,070 --> 00:16:04,600
<font color="#E5E5E5">everything alone</font><font color="#CCCCCC"> just as an experiment</font>

351
00:15:56,959 --> 00:16:04,599
<font color="#CCCCCC">in parallel this</font><font color="#E5E5E5"> is pretty much my most</font>

352
00:16:05,140 --> 00:16:09,880
<font color="#E5E5E5">if you're quick you can we can do it now</font>

353
00:16:13,460 --> 00:16:16,499
[Music]

354
00:16:23,110 --> 00:16:30,310
no pretty much no<font color="#E5E5E5"> so this is my most</font>

355
00:16:27,740 --> 00:16:33,529
<font color="#E5E5E5">impressive metric I was</font><font color="#CCCCCC"> able to achieve</font>

356
00:16:30,310 --> 00:16:36,260
<font color="#CCCCCC">65% or less test case execution so I</font>

357
00:16:33,529 --> 00:16:41,240
didn't execute<font color="#CCCCCC"> 6,000</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> executed</font><font color="#E5E5E5"> about</font>

358
00:16:36,260 --> 00:16:44,689
<font color="#CCCCCC">2,000 which is cool I was able</font><font color="#E5E5E5"> to</font>

359
00:16:41,240 --> 00:16:47,360
achieve 76%<font color="#E5E5E5"> execution completion rate</font><font color="#CCCCCC"> so</font>

360
00:16:44,690 --> 00:16:50,270
that means from oldest<font color="#CCCCCC"> mm</font><font color="#E5E5E5"> I was</font><font color="#CCCCCC"> able to</font>

361
00:16:47,360 --> 00:16:52,399
complete 76% of them and the historical

362
00:16:50,270 --> 00:16:55,790
average for the<font color="#CCCCCC"> Aero six release of the</font>

363
00:16:52,399 --> 00:16:58,850
team is 85%<font color="#E5E5E5"> so I remind you I was</font>

364
00:16:55,790 --> 00:17:02,120
working<font color="#E5E5E5"> alone if we work as a team using</font>

365
00:16:58,850 --> 00:17:05,390
pairwise<font color="#E5E5E5"> I'm sure we can beat 85% we can</font>

366
00:17:02,120 --> 00:17:06,980
probably do even<font color="#CCCCCC"> 100% if you want to so</font>

367
00:17:05,390 --> 00:17:12,350
<font color="#E5E5E5">that means how much work I was actually</font>

368
00:17:06,980 --> 00:17:14,809
<font color="#E5E5E5">able to complete now about bugs here are</font>

369
00:17:12,349 --> 00:17:16,339
some findings<font color="#E5E5E5"> that I didn't expect and</font>

370
00:17:14,809 --> 00:17:20,000
they were<font color="#E5E5E5"> actually very interesting for</font>

371
00:17:16,339 --> 00:17:22,550
<font color="#E5E5E5">me</font><font color="#CCCCCC"> 30% of</font><font color="#E5E5E5"> all the books that were</font>

372
00:17:20,000 --> 00:17:25,490
<font color="#E5E5E5">reported against installation for that</font>

373
00:17:22,550 --> 00:17:28,099
relation<font color="#E5E5E5"> for that testing campaign came</font>

374
00:17:25,490 --> 00:17:30,140
out<font color="#E5E5E5"> of the tier 1 test suite so they</font>

375
00:17:28,099 --> 00:17:34,100
were actually<font color="#E5E5E5"> discovered very early in</font>

376
00:17:30,140 --> 00:17:36,830
the release cycle<font color="#CCCCCC"> for me that means tier</font>

377
00:17:34,100 --> 00:17:38,959
<font color="#CCCCCC">1 test suite is doing a very good job</font>

378
00:17:36,830 --> 00:17:41,960
we can<font color="#CCCCCC"> probably tweak it a little</font><font color="#E5E5E5"> bit</font>

379
00:17:38,960 --> 00:17:43,580
and<font color="#E5E5E5"> increase</font><font color="#CCCCCC"> that number</font><font color="#E5E5E5"> but maybe we</font>

380
00:17:41,960 --> 00:17:45,230
<font color="#E5E5E5">were going to come to a threshold very</font>

381
00:17:43,580 --> 00:17:48,139
soon and that's<font color="#CCCCCC"> a completely</font><font color="#E5E5E5"> different</font>

382
00:17:45,230 --> 00:17:49,970
experiment<font color="#E5E5E5"> on its own but yeah we don't</font>

383
00:17:48,140 --> 00:17:51,650
want to touch the way we do tier<font color="#CCCCCC"> 1</font>

384
00:17:49,970 --> 00:17:54,700
that's our<font color="#E5E5E5"> first line</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> defense</font>

385
00:17:51,650 --> 00:17:54,700
so it's proven<font color="#CCCCCC"> to be good</font>

386
00:17:54,860 --> 00:18:01,350
the other 30% of the books were actually

387
00:17:57,809 --> 00:18:04,770
<font color="#E5E5E5">found by pairwise</font><font color="#CCCCCC"> so what</font><font color="#E5E5E5"> that means is</font>

388
00:18:01,350 --> 00:18:06,990
it's either<font color="#E5E5E5"> I found some book and I</font>

389
00:18:04,770 --> 00:18:09,870
reported it as<font color="#E5E5E5"> new book or</font><font color="#CCCCCC"> either</font>

390
00:18:06,990 --> 00:18:14,250
somebody else was<font color="#E5E5E5"> able to report it and</font>

391
00:18:09,870 --> 00:18:16,620
I was<font color="#CCCCCC"> able to reproduce and where</font><font color="#E5E5E5"> the</font>

392
00:18:14,250 --> 00:18:18,960
test case is in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> pairwise plan</font><font color="#E5E5E5"> they</font>

393
00:18:16,620 --> 00:18:21,330
<font color="#E5E5E5">are a subset of the test cases of the</font>

394
00:18:18,960 --> 00:18:25,350
food<font color="#CCCCCC"> has plan</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is cool now we do</font>

395
00:18:21,330 --> 00:18:27,480
65% less work<font color="#E5E5E5"> and still find</font><font color="#CCCCCC"> 1/3 of what</font>

396
00:18:25,350 --> 00:18:31,199
<font color="#E5E5E5">we were able</font><font color="#CCCCCC"> to achieve</font><font color="#E5E5E5"> so that's very</font>

397
00:18:27,480 --> 00:18:33,000
<font color="#CCCCCC">good</font><font color="#E5E5E5"> that for me now looks like the</font>

398
00:18:31,200 --> 00:18:34,740
claim that pairwise is is indeed

399
00:18:33,000 --> 00:18:35,610
effective at finding defects<font color="#E5E5E5"> is actually</font>

400
00:18:34,740 --> 00:18:38,490
true

401
00:18:35,610 --> 00:18:39,409
<font color="#E5E5E5">and I I was actually expecting that</font><font color="#CCCCCC"> not</font>

402
00:18:38,490 --> 00:18:43,950
to be<font color="#E5E5E5"> true</font>

403
00:18:39,410 --> 00:18:47,460
<font color="#CCCCCC">and this is very surprising for</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> I</font>

404
00:18:43,950 --> 00:18:50,490
didn't<font color="#E5E5E5"> expect</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> 30% of the books</font>

405
00:18:47,460 --> 00:18:53,100
were found by exploratory testing and

406
00:18:50,490 --> 00:18:55,049
and I went<font color="#E5E5E5"> through every</font><font color="#CCCCCC"> single one</font><font color="#E5E5E5"> of</font>

407
00:18:53,100 --> 00:18:58,649
them<font color="#E5E5E5"> to read you know what the guy did</font>

408
00:18:55,049 --> 00:19:01,620
and how they<font color="#E5E5E5"> found the book</font><font color="#CCCCCC"> and for</font><font color="#E5E5E5"> most</font>

409
00:18:58,650 --> 00:19:02,820
of the time it's<font color="#E5E5E5"> not like somebody was</font>

410
00:19:01,620 --> 00:19:04,760
<font color="#CCCCCC">sitting in front</font><font color="#E5E5E5"> of the computer and</font>

411
00:19:02,820 --> 00:19:08,370
<font color="#E5E5E5">trying to do anything particularly crazy</font>

412
00:19:04,760 --> 00:19:10,950
<font color="#E5E5E5">they were actually following another</font>

413
00:19:08,370 --> 00:19:13,260
test case which steps to reproduce<font color="#E5E5E5"> but</font>

414
00:19:10,950 --> 00:19:16,650
<font color="#E5E5E5">either they did not follow the steps in</font>

415
00:19:13,260 --> 00:19:18,500
<font color="#E5E5E5">exactly the</font><font color="#CCCCCC"> same way</font><font color="#E5E5E5"> or the</font><font color="#CCCCCC"> setup</font>

416
00:19:16,650 --> 00:19:21,059
<font color="#E5E5E5">environment was a little bit different</font>

417
00:19:18,500 --> 00:19:23,640
<font color="#CCCCCC">so maybe if you have a test case which</font>

418
00:19:21,059 --> 00:19:25,860
says you need to<font color="#CCCCCC"> have a rate set up on</font>

419
00:19:23,640 --> 00:19:27,540
the system<font color="#CCCCCC"> the test case</font><font color="#E5E5E5"> itself doesn't</font>

420
00:19:25,860 --> 00:19:28,530
say<font color="#E5E5E5"> if it's going to be rate one rate</font>

421
00:19:27,540 --> 00:19:30,750
zero right

422
00:19:28,530 --> 00:19:34,799
<font color="#E5E5E5">five what type of file system should be</font>

423
00:19:30,750 --> 00:19:38,580
<font color="#E5E5E5">there these kinds</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> things and we we</font>

424
00:19:34,799 --> 00:19:40,250
come across<font color="#E5E5E5"> these edge cases</font><font color="#CCCCCC"> and I'm not</font>

425
00:19:38,580 --> 00:19:43,799
sure if it's a<font color="#CCCCCC"> good thing or a bad thing</font>

426
00:19:40,250 --> 00:19:45,960
<font color="#CCCCCC">one thing is sure it means we have edge</font>

427
00:19:43,799 --> 00:19:48,299
cases<font color="#CCCCCC"> that we have not described in</font>

428
00:19:45,960 --> 00:19:50,549
enough details<font color="#E5E5E5"> so we hit them and we</font>

429
00:19:48,299 --> 00:19:53,639
want to have<font color="#E5E5E5"> more details we have</font><font color="#CCCCCC"> to we</font>

430
00:19:50,549 --> 00:19:55,080
want<font color="#E5E5E5"> to have more automation</font><font color="#CCCCCC"> to be sure</font>

431
00:19:53,640 --> 00:19:57,840
that you know these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> don't regress</font>

432
00:19:55,080 --> 00:20:00,899
in the future you know on the other<font color="#E5E5E5"> hand</font>

433
00:19:57,840 --> 00:20:02,970
we we like<font color="#CCCCCC"> to give test engineers a lot</font>

434
00:20:00,900 --> 00:20:04,530
of<font color="#E5E5E5"> freedom and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> people on</font>

435
00:20:02,970 --> 00:20:07,720
the team even even though we have

436
00:20:04,530 --> 00:20:09,580
automation<font color="#E5E5E5"> and we have to link you know</font>

437
00:20:07,720 --> 00:20:17,470
they use they<font color="#CCCCCC"> use them in different ways</font>

438
00:20:09,580 --> 00:20:21,280
<font color="#E5E5E5">and</font><font color="#CCCCCC"> we have these kind of things stuff</font>

439
00:20:17,470 --> 00:20:25,120
<font color="#CCCCCC">that I was not able to</font><font color="#E5E5E5"> find for critical</font>

440
00:20:21,280 --> 00:20:27,370
<font color="#E5E5E5">works three of which are regressions</font><font color="#CCCCCC"> I</font>

441
00:20:25,120 --> 00:20:29,559
have given the<font color="#CCCCCC"> back numbers</font><font color="#E5E5E5"> but</font>

442
00:20:27,370 --> 00:20:32,049
<font color="#E5E5E5">unfortunately we have</font><font color="#CCCCCC"> a policy anything</font>

443
00:20:29,559 --> 00:20:33,340
that is found<font color="#E5E5E5"> before</font><font color="#CCCCCC"> the product</font><font color="#E5E5E5"> is</font>

444
00:20:32,049 --> 00:20:36,400
<font color="#CCCCCC">released to the general public is</font>

445
00:20:33,340 --> 00:20:38,110
reported as private<font color="#E5E5E5"> so you are not going</font>

446
00:20:36,400 --> 00:20:39,820
<font color="#CCCCCC">to these are in bug zero but you'll you</font>

447
00:20:38,110 --> 00:20:41,799
don't have<font color="#E5E5E5"> access to them unfortunately</font>

448
00:20:39,820 --> 00:20:45,908
so you have to trust<font color="#E5E5E5"> me on</font><font color="#CCCCCC"> that</font>

449
00:20:41,799 --> 00:20:47,860
the first one is after installation<font color="#E5E5E5"> with</font>

450
00:20:45,909 --> 00:20:50,980
<font color="#CCCCCC">IP f t the default route is missing so I</font>

451
00:20:47,860 --> 00:20:54,070
<font color="#CCCCCC">BFT</font><font color="#E5E5E5"> it's like net network attached disco</font>

452
00:20:50,980 --> 00:20:55,630
starting directly from<font color="#E5E5E5"> a former so it's</font>

453
00:20:54,070 --> 00:20:57,309
like<font color="#E5E5E5"> booting</font><font color="#CCCCCC"> current</font><font color="#E5E5E5"> network</font><font color="#CCCCCC"> disk</font>

454
00:20:55,630 --> 00:20:59,110
directly without having local<font color="#CCCCCC"> disk on</font>

455
00:20:57,309 --> 00:21:00,520
<font color="#CCCCCC">the system if the default route is</font>

456
00:20:59,110 --> 00:21:02,649
missing pretty much you know

457
00:21:00,520 --> 00:21:05,470
everything's messed up you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have</font>

458
00:21:02,650 --> 00:21:08,049
networking working<font color="#E5E5E5"> and that turned out</font>

459
00:21:05,470 --> 00:21:10,929
to<font color="#CCCCCC"> be former dependent</font><font color="#E5E5E5"> which is very</font>

460
00:21:08,049 --> 00:21:12,309
<font color="#E5E5E5">good</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> me because</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know that</font>

461
00:21:10,929 --> 00:21:14,080
doesn't<font color="#E5E5E5"> affect the results of my</font>

462
00:21:12,309 --> 00:21:16,720
experiments<font color="#E5E5E5"> so formal</font><font color="#CCCCCC"> Hardware dependent</font>

463
00:21:14,080 --> 00:21:18,908
<font color="#E5E5E5">problems they can happen regardless of</font>

464
00:21:16,720 --> 00:21:20,830
what type<font color="#CCCCCC"> of testing you do</font><font color="#E5E5E5"> so it just</font>

465
00:21:18,909 --> 00:21:23,590
happened that that<font color="#CCCCCC"> particular system</font><font color="#E5E5E5"> was</font>

466
00:21:20,830 --> 00:21:25,178
<font color="#CCCCCC">forty</font><font color="#E5E5E5"> and developers and everybody else</font>

467
00:21:23,590 --> 00:21:29,379
were not<font color="#E5E5E5"> able to reproduce on other</font>

468
00:21:25,179 --> 00:21:31,809
hardware<font color="#E5E5E5"> so yay</font><font color="#CCCCCC"> for me cool the</font><font color="#E5E5E5"> next one</font>

469
00:21:29,380 --> 00:21:33,460
is more serious anaconda the

470
00:21:31,809 --> 00:21:36,610
installation<font color="#CCCCCC"> program of failed to get</font>

471
00:21:33,460 --> 00:21:38,169
kicks<font color="#E5E5E5"> that file from NFS on mainframe so</font>

472
00:21:36,610 --> 00:21:40,059
kickstart files<font color="#E5E5E5"> are text</font><font color="#CCCCCC"> files with</font>

473
00:21:38,169 --> 00:21:42,580
configuration<font color="#E5E5E5"> how to drive the</font>

474
00:21:40,059 --> 00:21:45,190
installation automatically<font color="#E5E5E5"> we have</font>

475
00:21:42,580 --> 00:21:47,559
<font color="#E5E5E5">functionality in the installation</font>

476
00:21:45,190 --> 00:21:50,770
program to bring up networking very

477
00:21:47,559 --> 00:21:52,750
early<font color="#CCCCCC"> right after boot</font><font color="#E5E5E5"> and try to</font>

478
00:21:50,770 --> 00:21:54,429
download<font color="#E5E5E5"> this from the network if they</font>

479
00:21:52,750 --> 00:21:58,390
are specified so that we can continue

480
00:21:54,429 --> 00:22:00,880
unattended<font color="#E5E5E5"> from from that point on and</font>

481
00:21:58,390 --> 00:22:03,070
this<font color="#E5E5E5"> is interesting</font><font color="#CCCCCC"> bug</font><font color="#E5E5E5"> because it's a</font>

482
00:22:00,880 --> 00:22:05,710
regression<font color="#E5E5E5"> fixed by a change for another</font>

483
00:22:03,070 --> 00:22:08,439
<font color="#E5E5E5">bug</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> off</font><font color="#CCCCCC"> the coroner case only on</font>

484
00:22:05,710 --> 00:22:13,600
mainframe<font color="#E5E5E5"> and it happens only on ipv6 it</font>

485
00:22:08,440 --> 00:22:16,539
doesn't happen on ipv4<font color="#E5E5E5"> the reason that I</font>

486
00:22:13,600 --> 00:22:20,110
was not able to<font color="#E5E5E5"> find this type of</font><font color="#CCCCCC"> work</font>

487
00:22:16,539 --> 00:22:21,279
with<font color="#E5E5E5"> pairwise testing is that the the</font>

488
00:22:20,110 --> 00:22:23,928
test case

489
00:22:21,279 --> 00:22:26,240
<font color="#CCCCCC">test with</font><font color="#E5E5E5"> kick start from</font><font color="#CCCCCC"> an FS we have</font>

490
00:22:23,929 --> 00:22:27,980
this thing in<font color="#E5E5E5"> the test plan</font><font color="#CCCCCC"> but this is</font>

491
00:22:26,240 --> 00:22:30,279
one<font color="#CCCCCC"> of these test cases that I consider</font>

492
00:22:27,980 --> 00:22:32,570
independent and I try to randomize and

493
00:22:30,279 --> 00:22:35,149
when I looked at<font color="#E5E5E5"> the results I've always</font>

494
00:22:32,570 --> 00:22:36,678
randomized<font color="#E5E5E5"> this on the into</font><font color="#CCCCCC"> variant only</font>

495
00:22:35,149 --> 00:22:38,449
the Intel Architecture<font color="#CCCCCC"> and I'm nowhere</font>

496
00:22:36,679 --> 00:22:40,039
expert on mainframe so I pretty much

497
00:22:38,450 --> 00:22:43,730
have no idea how to work<font color="#E5E5E5"> with mainframe</font>

498
00:22:40,039 --> 00:22:45,980
<font color="#CCCCCC">and my randomization too was very</font><font color="#E5E5E5"> stupid</font>

499
00:22:43,730 --> 00:22:47,929
he didn't<font color="#E5E5E5"> look at previous executions to</font>

500
00:22:45,980 --> 00:22:50,120
say oh<font color="#CCCCCC"> we've tested this on</font><font color="#E5E5E5"> Intel so</font>

501
00:22:47,929 --> 00:22:52,370
let's try and you<font color="#E5E5E5"> know test or some</font>

502
00:22:50,120 --> 00:22:56,020
other<font color="#E5E5E5"> platform so to make</font><font color="#CCCCCC"> sure that you</font>

503
00:22:52,370 --> 00:22:56,020
know we distribute evenly as possible

504
00:22:57,820 --> 00:23:04,730
next one is again<font color="#E5E5E5"> networking related</font>

505
00:23:01,190 --> 00:23:06,380
<font color="#CCCCCC">iSCSI in the</font><font color="#E5E5E5"> installation program</font><font color="#CCCCCC"> when</font>

506
00:23:04,730 --> 00:23:09,020
<font color="#E5E5E5">you want to attach a natural base</font>

507
00:23:06,380 --> 00:23:10,850
there's a small<font color="#CCCCCC"> checkbox s bind to that</font>

508
00:23:09,020 --> 00:23:12,529
particular network interface if you have

509
00:23:10,850 --> 00:23:16,699
more of<font color="#E5E5E5"> them</font>

510
00:23:12,529 --> 00:23:19,340
I tried testing this very<font color="#CCCCCC"> early in the</font>

511
00:23:16,700 --> 00:23:21,890
testing<font color="#E5E5E5"> campaign and some I must</font>

512
00:23:19,340 --> 00:23:24,620
something<font color="#E5E5E5"> up with my</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> environment</font><font color="#CCCCCC"> I</font>

513
00:23:21,890 --> 00:23:26,299
decided to do this manually and I messed

514
00:23:24,620 --> 00:23:28,070
<font color="#CCCCCC">up then I said to myself</font><font color="#E5E5E5"> okay I'm going</font>

515
00:23:26,299 --> 00:23:30,918
<font color="#CCCCCC">to skip this because</font><font color="#E5E5E5"> you know we have</font>

516
00:23:28,070 --> 00:23:32,210
several<font color="#E5E5E5"> more built to test suite so I'm</font>

517
00:23:30,919 --> 00:23:33,500
going<font color="#CCCCCC"> to skip this because they don't</font>

518
00:23:32,210 --> 00:23:35,890
<font color="#CCCCCC">have</font><font color="#E5E5E5"> time you know I'm doing an</font>

519
00:23:33,500 --> 00:23:39,860
<font color="#CCCCCC">experiment I'm kind of like on</font><font color="#E5E5E5"> the clock</font>

520
00:23:35,890 --> 00:23:42,590
<font color="#CCCCCC">then comes</font><font color="#E5E5E5"> the next build and for some</font>

521
00:23:39,860 --> 00:23:44,719
reason<font color="#CCCCCC"> that particular test case was on</font>

522
00:23:42,590 --> 00:23:47,899
the compute node variant which is a very

523
00:23:44,720 --> 00:23:50,000
minimized<font color="#E5E5E5"> Linux version with less</font>

524
00:23:47,899 --> 00:23:53,029
software available<font color="#CCCCCC"> intended</font><font color="#E5E5E5"> for</font>

525
00:23:50,000 --> 00:23:55,010
high-performance<font color="#CCCCCC"> computing a surprise</font>

526
00:23:53,029 --> 00:23:56,870
surprise<font color="#E5E5E5"> the compute node variant</font>

527
00:23:55,010 --> 00:23:58,760
doesn't have the<font color="#E5E5E5"> ice</font><font color="#CCCCCC"> cozy client-side</font>

528
00:23:56,870 --> 00:24:00,770
tools available<font color="#E5E5E5"> into the installation</font>

529
00:23:58,760 --> 00:24:03,500
program<font color="#E5E5E5"> so the installation</font><font color="#CCCCCC"> program just</font>

530
00:24:00,770 --> 00:24:06,200
hides the screen it<font color="#CCCCCC"> doesn't allow you to</font>

531
00:24:03,500 --> 00:24:09,200
to<font color="#E5E5E5"> access this functionality</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I did</font>

532
00:24:06,200 --> 00:24:11,720
<font color="#CCCCCC">not test again so I skipped this test</font>

533
00:24:09,200 --> 00:24:14,240
case<font color="#E5E5E5"> several times and all the while</font>

534
00:24:11,720 --> 00:24:16,159
there was a problem<font color="#CCCCCC"> so when I learned</font>

535
00:24:14,240 --> 00:24:19,940
about the problem<font color="#E5E5E5"> I went back</font><font color="#CCCCCC"> to the</font>

536
00:24:16,159 --> 00:24:22,010
first<font color="#E5E5E5"> time I skipped my</font><font color="#CCCCCC"> test and tried</font>

537
00:24:19,940 --> 00:24:23,960
to reproduce<font color="#CCCCCC"> and this time I was able to</font>

538
00:24:22,010 --> 00:24:26,539
actually<font color="#CCCCCC"> reproduce correctly so</font><font color="#E5E5E5"> that</font>

539
00:24:23,960 --> 00:24:29,659
means I need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be more diligent as a</font>

540
00:24:26,539 --> 00:24:33,860
person when I do my job and the other

541
00:24:29,659 --> 00:24:35,100
one is again a<font color="#E5E5E5"> regression some errors in</font>

542
00:24:33,860 --> 00:24:37,918
upgrade walk when we do

543
00:24:35,100 --> 00:24:40,139
<font color="#E5E5E5">great we don't want to have these kinds</font>

544
00:24:37,919 --> 00:24:41,549
of<font color="#E5E5E5"> feathers</font><font color="#CCCCCC"> because customers cost you</font>

545
00:24:40,140 --> 00:24:44,100
know if something<font color="#E5E5E5"> is really horribly</font>

546
00:24:41,549 --> 00:24:46,410
broken<font color="#E5E5E5"> then we should have caught this</font>

547
00:24:44,100 --> 00:24:49,110
<font color="#E5E5E5">before the release and if it's not that</font>

548
00:24:46,410 --> 00:24:52,830
<font color="#CCCCCC">bad we try</font><font color="#E5E5E5"> to silence these errors as</font>

549
00:24:49,110 --> 00:24:54,719
much as possible<font color="#E5E5E5"> because there's pretty</font>

550
00:24:52,830 --> 00:24:59,639
<font color="#CCCCCC">much there isn't anything</font><font color="#E5E5E5"> we can do</font>

551
00:24:54,720 --> 00:25:02,910
about<font color="#E5E5E5"> them so first thing</font><font color="#CCCCCC"> I tested this</font>

552
00:24:59,640 --> 00:25:06,870
and I tested<font color="#CCCCCC"> it very</font><font color="#E5E5E5"> very early in some</font>

553
00:25:02,910 --> 00:25:09,929
of the first<font color="#E5E5E5"> builds and then we have</font>

554
00:25:06,870 --> 00:25:11,280
this<font color="#E5E5E5"> kind of policy</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> around</font><font color="#CCCCCC"> if you</font>

555
00:25:09,929 --> 00:25:15,600
have a lot<font color="#CCCCCC"> of work and</font><font color="#E5E5E5"> if tested</font>

556
00:25:11,280 --> 00:25:18,149
something<font color="#CCCCCC"> continue with the stuff that</font>

557
00:25:15,600 --> 00:25:21,090
is<font color="#E5E5E5"> left idle and only then when you're</font>

558
00:25:18,150 --> 00:25:23,789
when you<font color="#E5E5E5"> are done go</font><font color="#CCCCCC"> back and retest</font>

559
00:25:21,090 --> 00:25:25,289
<font color="#CCCCCC">what you've done previously and this is</font>

560
00:25:23,789 --> 00:25:28,530
what happened<font color="#E5E5E5"> in</font><font color="#CCCCCC"> that case</font><font color="#E5E5E5"> I tested it</font>

561
00:25:25,289 --> 00:25:33,480
early it was working<font color="#E5E5E5"> I</font><font color="#CCCCCC"> I said okay this</font>

562
00:25:28,530 --> 00:25:34,889
passes<font color="#CCCCCC"> I moved on to other testing then</font>

563
00:25:33,480 --> 00:25:37,200
there<font color="#E5E5E5"> was a new build there was a</font>

564
00:25:34,890 --> 00:25:40,520
<font color="#CCCCCC">regression that broke and I did not test</font>

565
00:25:37,200 --> 00:25:44,280
for<font color="#E5E5E5"> several releases for several builds</font>

566
00:25:40,520 --> 00:25:48,389
and you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> problem again I</font><font color="#CCCCCC"> skipped I</font>

567
00:25:44,280 --> 00:25:50,129
<font color="#CCCCCC">skipped testing</font><font color="#E5E5E5"> so a few lessons that I</font>

568
00:25:48,390 --> 00:25:52,020
learned from<font color="#E5E5E5"> this experiment</font><font color="#CCCCCC"> and</font>

569
00:25:50,130 --> 00:25:53,700
<font color="#E5E5E5">hopefully they will they</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> something</font>

570
00:25:52,020 --> 00:25:59,100
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can apply to your job</font><font color="#E5E5E5"> or</font>

571
00:25:53,700 --> 00:26:01,590
inspire you to do something<font color="#CCCCCC"> else yeah I</font>

572
00:25:59,100 --> 00:26:04,918
have a lot of free resource now on the

573
00:26:01,590 --> 00:26:07,470
team if we<font color="#CCCCCC"> do</font><font color="#E5E5E5"> 65% percent less actual</font>

574
00:26:04,919 --> 00:26:09,030
testing<font color="#E5E5E5"> then that means I can have</font><font color="#CCCCCC"> only</font>

575
00:26:07,470 --> 00:26:11,640
three or four persons on the<font color="#E5E5E5"> team</font>

576
00:26:09,030 --> 00:26:14,100
working on the product daily<font color="#E5E5E5"> day to day</font>

577
00:26:11,640 --> 00:26:16,679
and I can have the<font color="#E5E5E5"> rest six or seven</font>

578
00:26:14,100 --> 00:26:18,149
<font color="#CCCCCC">people from the team doing automation</font>

579
00:26:16,679 --> 00:26:19,530
all the time<font color="#E5E5E5"> working on infrastructure</font>

580
00:26:18,150 --> 00:26:21,210
all the time I<font color="#E5E5E5"> mean this this is</font><font color="#CCCCCC"> huge</font><font color="#E5E5E5"> if</font>

581
00:26:19,530 --> 00:26:23,129
I have six people<font color="#E5E5E5"> doing automation all</font>

582
00:26:21,210 --> 00:26:28,260
the time<font color="#E5E5E5"> it's like having a second team</font>

583
00:26:23,130 --> 00:26:32,760
<font color="#E5E5E5">this is great</font><font color="#CCCCCC"> the other thing that I</font>

584
00:26:28,260 --> 00:26:35,010
learned for myself<font color="#CCCCCC"> is we need to do pass</font>

585
00:26:32,760 --> 00:26:37,169
we need to do a test<font color="#E5E5E5"> review more</font>

586
00:26:35,010 --> 00:26:39,419
regularly<font color="#E5E5E5"> as a team and I'm not talking</font>

587
00:26:37,169 --> 00:26:41,370
about you know<font color="#E5E5E5"> going to the bug tracker</font>

588
00:26:39,419 --> 00:26:42,659
<font color="#E5E5E5">and see oh we have these new boys so</font><font color="#CCCCCC"> we</font>

589
00:26:41,370 --> 00:26:45,149
have some regressions let's you know

590
00:26:42,659 --> 00:26:47,580
<font color="#E5E5E5">review test cases which are related to</font>

591
00:26:45,150 --> 00:26:48,800
<font color="#E5E5E5">that area</font><font color="#CCCCCC"> and improve it I'm talking</font>

592
00:26:47,580 --> 00:26:50,840
about<font color="#CCCCCC"> city</font>

593
00:26:48,800 --> 00:26:54,139
<font color="#CCCCCC">and reading</font><font color="#E5E5E5"> through the</font><font color="#CCCCCC"> entire</font><font color="#E5E5E5"> test plan</font>

594
00:26:50,840 --> 00:26:56,449
and through all the test cases<font color="#CCCCCC"> as a team</font>

595
00:26:54,140 --> 00:26:57,950
together<font color="#CCCCCC"> maybe you know once a lot or</font>

596
00:26:56,450 --> 00:27:00,020
once<font color="#E5E5E5"> every three months something</font><font color="#CCCCCC"> like</font>

597
00:26:57,950 --> 00:27:03,770
<font color="#CCCCCC">that so</font><font color="#E5E5E5"> that we share knowledge we</font>

598
00:27:00,020 --> 00:27:05,180
<font color="#E5E5E5">exchange ideas</font><font color="#CCCCCC"> and by doing</font><font color="#E5E5E5"> this I had</font>

599
00:27:03,770 --> 00:27:06,860
<font color="#CCCCCC">to do</font><font color="#E5E5E5"> this because I needed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know what</font>

600
00:27:05,180 --> 00:27:08,810
<font color="#E5E5E5">parameters are in there in these test</font>

601
00:27:06,860 --> 00:27:11,330
<font color="#CCCCCC">cases so I can create</font><font color="#E5E5E5"> my experiment and</font>

602
00:27:08,810 --> 00:27:14,300
I found we have test cases<font color="#E5E5E5"> with hidden</font>

603
00:27:11,330 --> 00:27:15,800
parameters<font color="#CCCCCC"> of variables that</font><font color="#E5E5E5"> affect the</font>

604
00:27:14,300 --> 00:27:18,110
way we<font color="#CCCCCC"> do testing which is</font><font color="#E5E5E5"> not</font>

605
00:27:15,800 --> 00:27:20,530
<font color="#E5E5E5">explicitly described so that's hidden</font>

606
00:27:18,110 --> 00:27:22,760
knowledge<font color="#CCCCCC"> within the team I also found</font>

607
00:27:20,530 --> 00:27:25,639
duplicate test cases some<font color="#CCCCCC"> purely</font>

608
00:27:22,760 --> 00:27:28,730
duplicate some which overlap and test

609
00:27:25,640 --> 00:27:30,980
<font color="#E5E5E5">pretty much similar things so all of</font>

610
00:27:28,730 --> 00:27:33,590
these<font color="#CCCCCC"> are sources of optimizations which</font>

611
00:27:30,980 --> 00:27:35,930
we can apply<font color="#E5E5E5"> to the team and I did not</font>

612
00:27:33,590 --> 00:27:38,300
<font color="#E5E5E5">change this because I didn't want to</font>

613
00:27:35,930 --> 00:27:40,430
<font color="#E5E5E5">affect my results anymore</font><font color="#CCCCCC"> I just you</font>

614
00:27:38,300 --> 00:27:43,070
know if ice if I saw<font color="#E5E5E5"> something which is</font>

615
00:27:40,430 --> 00:27:44,810
<font color="#E5E5E5">bad I just</font><font color="#CCCCCC"> left it as it is and</font><font color="#E5E5E5"> simply</font>

616
00:27:43,070 --> 00:27:47,210
executed it because the<font color="#E5E5E5"> rest of the team</font>

617
00:27:44,810 --> 00:27:51,440
<font color="#E5E5E5">they didn't know that was it you know</font>

618
00:27:47,210 --> 00:27:53,450
<font color="#E5E5E5">like like</font><font color="#CCCCCC"> that yeah so</font><font color="#E5E5E5"> perform test</font>

619
00:27:51,440 --> 00:27:58,040
review hopefully regularly as a team

620
00:27:53,450 --> 00:28:00,730
this<font color="#E5E5E5"> is cool and I've observed some</font>

621
00:27:58,040 --> 00:28:03,879
patterns in the way I was performing<font color="#CCCCCC"> my</font>

622
00:28:00,730 --> 00:28:07,160
experiment and the<font color="#E5E5E5"> way we do testing</font>

623
00:28:03,880 --> 00:28:10,460
inside<font color="#E5E5E5"> the team which is particular</font><font color="#CCCCCC"> to</font>

624
00:28:07,160 --> 00:28:12,350
our environment<font color="#E5E5E5"> like like how we set up</font>

625
00:28:10,460 --> 00:28:15,530
<font color="#CCCCCC">systems how we trash this system</font>

626
00:28:12,350 --> 00:28:19,219
afterwards you know this is<font color="#CCCCCC"> also sort</font><font color="#E5E5E5"> of</font>

627
00:28:15,530 --> 00:28:22,129
other optimization<font color="#E5E5E5"> but my advice for you</font>

628
00:28:19,220 --> 00:28:26,270
<font color="#CCCCCC">is</font><font color="#E5E5E5"> actually either take a lot of notes</font>

629
00:28:22,130 --> 00:28:28,580
<font color="#CCCCCC">or have somebody else to watch what you</font>

630
00:28:26,270 --> 00:28:30,920
<font color="#CCCCCC">do and they take notes</font><font color="#E5E5E5"> and then you know</font>

631
00:28:28,580 --> 00:28:32,810
change somebody else does the work and

632
00:28:30,920 --> 00:28:35,300
<font color="#E5E5E5">you take notes</font><font color="#CCCCCC"> then you compare notes</font>

633
00:28:32,810 --> 00:28:37,490
try to find patterns<font color="#E5E5E5"> and this actually</font>

634
00:28:35,300 --> 00:28:39,020
works really<font color="#E5E5E5"> well you know</font><font color="#CCCCCC"> if you have a</font>

635
00:28:37,490 --> 00:28:41,630
lot<font color="#E5E5E5"> of notes then you can read through</font>

636
00:28:39,020 --> 00:28:42,950
<font color="#CCCCCC">all of them</font><font color="#E5E5E5"> and see what you've done</font><font color="#CCCCCC"> and</font>

637
00:28:41,630 --> 00:28:44,810
<font color="#E5E5E5">you know see things that you do</font>

638
00:28:42,950 --> 00:28:48,580
repeatedly maybe they are good maybe not

639
00:28:44,810 --> 00:28:52,070
<font color="#CCCCCC">and all this in the context of pairwise</font>

640
00:28:48,580 --> 00:28:53,990
<font color="#CCCCCC">is that all of these combinations they</font>

641
00:28:52,070 --> 00:28:56,120
can be considered parameter if<font color="#E5E5E5"> I execute</font>

642
00:28:53,990 --> 00:28:58,370
test cases in batches what exactly test

643
00:28:56,120 --> 00:29:00,409
cases are in the batch and just you know

644
00:28:58,370 --> 00:29:02,268
<font color="#CCCCCC">you can do pairwise again and again and</font>

645
00:29:00,410 --> 00:29:04,549
again it<font color="#CCCCCC"> that I've never done this</font>

646
00:29:02,269 --> 00:29:10,969
it's just an idea<font color="#CCCCCC"> it's probably going to</font>

647
00:29:04,549 --> 00:29:14,179
work I<font color="#CCCCCC"> don't know</font><font color="#E5E5E5"> there is there</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> risk</font>

648
00:29:10,969 --> 00:29:17,029
with this testing strategy<font color="#E5E5E5"> because we do</font>

649
00:29:14,179 --> 00:29:19,070
<font color="#E5E5E5">not</font><font color="#CCCCCC"> do all the tests</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> time for</font>

650
00:29:17,029 --> 00:29:22,369
every<font color="#E5E5E5"> single build we we are not going</font>

651
00:29:19,070 --> 00:29:24,080
to<font color="#E5E5E5"> execute them anymore</font><font color="#CCCCCC"> but as a team</font>

652
00:29:22,369 --> 00:29:27,228
<font color="#CCCCCC">I've presented this</font><font color="#E5E5E5"> to my team you know</font>

653
00:29:24,080 --> 00:29:30,228
we have ongoing<font color="#E5E5E5"> talks about this and we</font>

654
00:29:27,229 --> 00:29:31,669
<font color="#E5E5E5">think it's a viable strategy for</font><font color="#CCCCCC"> us to</font>

655
00:29:30,229 --> 00:29:35,059
you know<font color="#E5E5E5"> to do testing</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the whole</font>

656
00:29:31,669 --> 00:29:38,959
product<font color="#CCCCCC"> we think we can minimize the</font>

657
00:29:35,059 --> 00:29:41,299
risk we can mitigate it somehow<font color="#CCCCCC"> the most</font>

658
00:29:38,959 --> 00:29:44,059
<font color="#E5E5E5">important thing is the human factor</font>

659
00:29:41,299 --> 00:29:46,719
<font color="#CCCCCC">especially when you skip testing</font>

660
00:29:44,059 --> 00:29:50,178
everybody needs to know<font color="#E5E5E5"> what's happening</font>

661
00:29:46,719 --> 00:29:53,929
<font color="#CCCCCC">underneath so that's</font><font color="#E5E5E5"> the most important</font>

662
00:29:50,179 --> 00:29:56,149
<font color="#E5E5E5">thing for me</font><font color="#CCCCCC"> and that said I'm done</font>

663
00:29:53,929 --> 00:30:00,909
talking and now it's time for<font color="#E5E5E5"> you to ask</font>

664
00:29:56,149 --> 00:30:04,208
<font color="#E5E5E5">me questions</font><font color="#CCCCCC"> okay first question</font><font color="#E5E5E5"> there</font>

665
00:30:00,909 --> 00:30:04,209
yeah you go ahead

666
00:30:13,419 --> 00:30:26,539
no no I cannot tell<font color="#E5E5E5"> you that so so the</font>

667
00:30:24,529 --> 00:30:28,219
question<font color="#CCCCCC"> was can I tell with how many</font>

668
00:30:26,539 --> 00:30:32,839
<font color="#CCCCCC">bugs we had in the release I cannot tell</font>

669
00:30:28,219 --> 00:30:35,149
you<font color="#E5E5E5"> this you</font><font color="#CCCCCC"> can look at the</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Erato</font>

670
00:30:32,839 --> 00:30:38,329
records<font color="#CCCCCC"> that</font><font color="#E5E5E5"> redhead provides on the</font>

671
00:30:35,149 --> 00:30:40,458
website when we update<font color="#E5E5E5"> and most of the</font>

672
00:30:38,329 --> 00:30:45,999
books are<font color="#CCCCCC"> listed there</font><font color="#E5E5E5"> publicly but not</font>

673
00:30:40,459 --> 00:30:45,999
all<font color="#CCCCCC"> of them yep go</font><font color="#E5E5E5"> ahead</font>

674
00:30:56,140 --> 00:31:01,820
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> is if I have</font>

675
00:30:58,270 --> 00:31:04,670
<font color="#E5E5E5">examples from history that about</font><font color="#CCCCCC"> bucks</font>

676
00:31:01,820 --> 00:31:08,419
which cannot be<font color="#E5E5E5"> found by pairwise with</font>

677
00:31:04,670 --> 00:31:22,460
three or more<font color="#E5E5E5"> four parameters</font><font color="#CCCCCC"> pretty</font>

678
00:31:08,420 --> 00:31:39,740
<font color="#E5E5E5">much like your</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> one for which</font>

679
00:31:22,460 --> 00:31:41,510
one<font color="#E5E5E5"> the first one yeah that's that yeah</font>

680
00:31:39,740 --> 00:31:44,450
maybe<font color="#CCCCCC"> you can answer that for me but</font>

681
00:31:41,510 --> 00:31:49,160
yeah it's this is<font color="#E5E5E5"> not an example of what</font>

682
00:31:44,450 --> 00:31:51,470
he is<font color="#CCCCCC"> asking about and you</font><font color="#E5E5E5"> know I I do</font>

683
00:31:49,160 --> 00:31:53,540
have<font color="#CCCCCC"> access</font><font color="#E5E5E5"> to historical data we keep</font>

684
00:31:51,470 --> 00:31:55,700
track<font color="#CCCCCC"> of everything that we've done in</font>

685
00:31:53,540 --> 00:31:59,180
the<font color="#CCCCCC"> last 15 years with respect to</font>

686
00:31:55,700 --> 00:32:01,190
installation<font color="#CCCCCC"> testing</font><font color="#E5E5E5"> you know but it's</font>

687
00:31:59,180 --> 00:32:04,000
not<font color="#E5E5E5"> very easy to query you have to go</font>

688
00:32:01,190 --> 00:32:07,340
through and read everything manually

689
00:32:04,000 --> 00:32:07,790
yeah<font color="#E5E5E5"> I don't have answer for</font><font color="#CCCCCC"> you right</font>

690
00:32:07,340 --> 00:32:09,889
<font color="#CCCCCC">now</font>

691
00:32:07,790 --> 00:32:13,220
<font color="#E5E5E5">you know we've never looked at this data</font>

692
00:32:09,890 --> 00:32:14,510
<font color="#CCCCCC">before but just</font><font color="#E5E5E5"> based on general feeling</font>

693
00:32:13,220 --> 00:32:16,910
that<font color="#E5E5E5"> you know just from experience</font>

694
00:32:14,510 --> 00:32:21,200
working with the same products for so

695
00:32:16,910 --> 00:32:23,690
much<font color="#E5E5E5"> time you know I believe you know</font>

696
00:32:21,200 --> 00:32:25,670
the<font color="#E5E5E5"> things that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> not going to</font><font color="#E5E5E5"> find</font>

697
00:32:23,690 --> 00:32:32,500
the things that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to miss are</font>

698
00:32:25,670 --> 00:32:32,500
not that many okay go<font color="#E5E5E5"> ahead</font>

699
00:32:53,779 --> 00:32:59,159
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> is is there any</font>

700
00:32:56,639 --> 00:33:01,709
proof<font color="#CCCCCC"> that if we have independent test</font>

701
00:32:59,159 --> 00:33:03,409
parameters<font color="#CCCCCC"> and do pairwise does going</font><font color="#E5E5E5"> to</font>

702
00:33:01,710 --> 00:33:08,129
<font color="#CCCCCC">reduce test</font><font color="#E5E5E5"> coverage</font>

703
00:33:03,409 --> 00:33:10,529
<font color="#E5E5E5">I'm not going to</font><font color="#CCCCCC"> register it well I I</font>

704
00:33:08,129 --> 00:33:12,389
don't<font color="#E5E5E5"> know if there's some research done</font>

705
00:33:10,529 --> 00:33:15,149
<font color="#E5E5E5">on that topic maybe no these white</font>

706
00:33:12,389 --> 00:33:17,369
papers<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I mentioned on the Microsoft</font>

707
00:33:15,149 --> 00:33:19,709
<font color="#CCCCCC">website</font><font color="#E5E5E5"> you know you have to read all</font><font color="#CCCCCC"> of</font>

708
00:33:17,369 --> 00:33:22,349
them I admit I am<font color="#E5E5E5"> more like a practical</font>

709
00:33:19,710 --> 00:33:24,179
guy<font color="#CCCCCC"> I never</font><font color="#E5E5E5"> went to read all</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> you</font>

710
00:33:22,349 --> 00:33:25,619
<font color="#E5E5E5">know just</font><font color="#CCCCCC"> look at the technique</font><font color="#E5E5E5"> and</font>

711
00:33:24,179 --> 00:33:27,089
<font color="#E5E5E5">actually I was taught</font><font color="#CCCCCC"> about this</font>

712
00:33:25,619 --> 00:33:32,369
technique by a former Microsoft engineer

713
00:33:27,089 --> 00:33:34,619
<font color="#E5E5E5">at another conference but yeah I</font><font color="#CCCCCC"> don't</font>

714
00:33:32,369 --> 00:33:37,320
<font color="#CCCCCC">think it's going</font><font color="#E5E5E5"> to reduce coverage</font>

715
00:33:34,619 --> 00:33:40,408
because still you have you have a lot<font color="#CCCCCC"> of</font>

716
00:33:37,320 --> 00:33:43,168
mixture of test case execution<font color="#E5E5E5"> and you</font>

717
00:33:40,409 --> 00:33:45,989
know that adds up<font color="#E5E5E5"> to also with respect</font>

718
00:33:43,169 --> 00:33:49,169
to coverage with previously in different

719
00:33:45,989 --> 00:33:51,989
experiments<font color="#E5E5E5"> we've compared data from</font>

720
00:33:49,169 --> 00:33:54,869
doing manual and automated testing on

721
00:33:51,989 --> 00:33:57,389
different<font color="#CCCCCC"> platforms and coverage</font><font color="#E5E5E5"> for the</font>

722
00:33:54,869 --> 00:33:59,399
installation<font color="#E5E5E5"> program in terms of percent</font>

723
00:33:57,389 --> 00:34:03,299
of code covered<font color="#E5E5E5"> it's pretty much the</font>

724
00:33:59,399 --> 00:34:05,189
<font color="#E5E5E5">same all</font><font color="#CCCCCC"> the time yeah even even if you</font>

725
00:34:03,299 --> 00:34:06,599
do a default install<font color="#E5E5E5"> we don't without</font>

726
00:34:05,190 --> 00:34:08,609
touching anything you know it's pretty

727
00:34:06,599 --> 00:34:12,599
<font color="#E5E5E5">much touches everything in the source</font>

728
00:34:08,609 --> 00:34:14,578
<font color="#E5E5E5">code</font><font color="#CCCCCC"> so yeah we have something like 80%</font>

729
00:34:12,599 --> 00:34:16,349
<font color="#E5E5E5">coverage which you know it's it's really</font>

730
00:34:14,579 --> 00:34:21,839
<font color="#CCCCCC">meaningful might not really meaningful</font>

731
00:34:16,349 --> 00:34:24,349
metric<font color="#E5E5E5"> but okay there you</font><font color="#CCCCCC"> go</font>

732
00:34:21,839 --> 00:34:24,349
you go first

733
00:34:27,270 --> 00:34:42,250
this one this one yes<font color="#E5E5E5"> so these are so</font>

734
00:34:39,250 --> 00:34:44,409
pretty<font color="#E5E5E5"> much</font><font color="#CCCCCC"> all yes are they</font><font color="#E5E5E5"> the</font>

735
00:34:42,250 --> 00:34:46,899
<font color="#E5E5E5">question is if that</font><font color="#CCCCCC"> book the first one</font>

736
00:34:44,409 --> 00:34:52,859
is not covered by<font color="#CCCCCC"> pairwise</font><font color="#E5E5E5"> because it</font>

737
00:34:46,899 --> 00:34:52,859
doesn't have parameters or yeah well

738
00:34:53,369 --> 00:34:58,390
well that test case<font color="#E5E5E5"> is defined it</font>

739
00:34:56,168 --> 00:35:00,730
doesn't have any parameters so we want

740
00:34:58,390 --> 00:35:02,799
to make<font color="#CCCCCC"> sure that distinct code binding</font>

741
00:35:00,730 --> 00:35:04,900
to network interface<font color="#E5E5E5"> actually works</font>

742
00:35:02,800 --> 00:35:05,560
<font color="#CCCCCC">because when you when you select this</font>

743
00:35:04,900 --> 00:35:07,960
<font color="#E5E5E5">option</font>

744
00:35:05,560 --> 00:35:09,759
this creates configuration files which

745
00:35:07,960 --> 00:35:12,940
need<font color="#CCCCCC"> to be corrected</font><font color="#E5E5E5"> need to be present</font>

746
00:35:09,760 --> 00:35:14,980
on<font color="#E5E5E5"> the file system</font><font color="#CCCCCC"> after reboot</font><font color="#E5E5E5"> and</font>

747
00:35:12,940 --> 00:35:18,010
pretty<font color="#E5E5E5"> much all</font><font color="#CCCCCC"> of the bugs that I was</font>

748
00:35:14,980 --> 00:35:20,290
not able<font color="#CCCCCC"> to find out of the group</font><font color="#E5E5E5"> which</font>

749
00:35:18,010 --> 00:35:23,530
<font color="#E5E5E5">don't have parameters explicitly listed</font>

750
00:35:20,290 --> 00:35:25,930
<font color="#E5E5E5">and that was my problem</font><font color="#CCCCCC"> you know because</font>

751
00:35:23,530 --> 00:35:29,260
they<font color="#E5E5E5"> were randomized in such a way or I</font>

752
00:35:25,930 --> 00:35:33,430
didn't test them very well enough<font color="#E5E5E5"> you</font>

753
00:35:29,260 --> 00:35:38,470
know<font color="#E5E5E5"> so I missed them yes go ahead</font>

754
00:35:33,430 --> 00:35:39,759
please<font color="#CCCCCC"> if I have the question is if I</font>

755
00:35:38,470 --> 00:35:41,770
<font color="#E5E5E5">have experience</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> triple</font><font color="#CCCCCC"> ice test</font>

756
00:35:39,760 --> 00:36:01,960
<font color="#E5E5E5">think no I don't have I've heard about</font>

757
00:35:41,770 --> 00:36:04,630
<font color="#E5E5E5">this but I don't</font><font color="#CCCCCC"> have experience so the</font>

758
00:36:01,960 --> 00:36:06,490
the classical example<font color="#E5E5E5"> on not</font><font color="#CCCCCC"> sure one of</font>

759
00:36:04,630 --> 00:36:09,430
<font color="#E5E5E5">the Microsoft articles that they've read</font>

760
00:36:06,490 --> 00:36:11,578
<font color="#CCCCCC">about is if you open the word</font><font color="#E5E5E5"> this is</font>

761
00:36:09,430 --> 00:36:14,109
where they came up<font color="#CCCCCC"> with the idea first</font>

762
00:36:11,579 --> 00:36:16,540
<font color="#CCCCCC">and one</font><font color="#E5E5E5"> of the settings dialog he has</font>

763
00:36:14,109 --> 00:36:17,980
like five or six<font color="#CCCCCC"> checkboxes and you can</font>

764
00:36:16,540 --> 00:36:20,740
check<font color="#E5E5E5"> any one of them in any combination</font>

765
00:36:17,980 --> 00:36:23,319
so that's a lot of combinations and and

766
00:36:20,740 --> 00:36:25,419
there's like thousands of check<font color="#CCCCCC"> boxes in</font>

767
00:36:23,319 --> 00:36:27,430
word for settings and stuff<font color="#E5E5E5"> like that</font>

768
00:36:25,420 --> 00:36:29,890
<font color="#E5E5E5">and if you want to test everything that</font>

769
00:36:27,430 --> 00:36:32,770
<font color="#E5E5E5">just huge so they decided okay look</font>

770
00:36:29,890 --> 00:36:34,480
<font color="#E5E5E5">looked at something there isn't a lot of</font>

771
00:36:32,770 --> 00:36:37,420
<font color="#E5E5E5">information how</font><font color="#CCCCCC"> they came to the</font>

772
00:36:34,480 --> 00:36:39,280
<font color="#CCCCCC">conclusion</font><font color="#E5E5E5"> that two is enough they just</font>

773
00:36:37,420 --> 00:36:41,710
<font color="#CCCCCC">say okay</font><font color="#E5E5E5"> two is enough</font>

774
00:36:39,280 --> 00:36:46,960
I said let's do this<font color="#E5E5E5"> and it's proven</font><font color="#CCCCCC"> in</font>

775
00:36:41,710 --> 00:36:54,070
practice that it works<font color="#E5E5E5"> how much time</font>

776
00:36:46,960 --> 00:36:55,900
we've got<font color="#CCCCCC"> Oh 10 minutes left okay okay</font>

777
00:36:54,070 --> 00:36:58,090
the<font color="#CCCCCC"> question was if I have any</font><font color="#E5E5E5"> -</font><font color="#CCCCCC"> or if</font>

778
00:36:55,900 --> 00:37:00,670
I'm was using a script so<font color="#E5E5E5"> I mentioned</font>

779
00:36:58,090 --> 00:37:03,670
there are<font color="#E5E5E5"> many</font><font color="#CCCCCC"> tools for different</font>

780
00:37:00,670 --> 00:37:06,849
<font color="#E5E5E5">languages in my particular case I did</font>

781
00:37:03,670 --> 00:37:09,010
not use<font color="#E5E5E5"> the official Microsoft - because</font>

782
00:37:06,849 --> 00:37:10,390
<font color="#CCCCCC">that one is</font><font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to compile it and</font>

783
00:37:09,010 --> 00:37:13,390
I'm a Python person don't like<font color="#CCCCCC"> to</font>

784
00:37:10,390 --> 00:37:15,330
<font color="#CCCCCC">compile stuff and you feed it a text</font>

785
00:37:13,390 --> 00:37:16,720
file with<font color="#CCCCCC"> the parameters and it just</font>

786
00:37:15,330 --> 00:37:19,810
outputs

787
00:37:16,720 --> 00:37:23,890
you know the<font color="#E5E5E5"> matrix</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the combinations</font>

788
00:37:19,810 --> 00:37:26,890
<font color="#E5E5E5">I use the Ruby</font><font color="#CCCCCC"> pair wise gem which can</font>

789
00:37:23,890 --> 00:37:29,440
be used also in Ruby scripts and it<font color="#E5E5E5"> also</font>

790
00:37:26,890 --> 00:37:32,790
integrates well with the Ruby testing<font color="#CCCCCC"> -</font>

791
00:37:29,440 --> 00:37:36,250
link<font color="#CCCCCC"> and I use that</font><font color="#E5E5E5"> - you know I fed</font><font color="#CCCCCC"> it</font>

792
00:37:32,790 --> 00:37:38,500
with lists of my test cases<font color="#E5E5E5"> parameters</font>

793
00:37:36,250 --> 00:37:42,430
for every one of them<font color="#CCCCCC"> and just described</font>

794
00:37:38,500 --> 00:37:44,560
this in the clarity folder<font color="#E5E5E5"> just said I</font>

795
00:37:42,430 --> 00:37:47,710
have this and this in this<font color="#E5E5E5"> now</font><font color="#CCCCCC"> let's do</font>

796
00:37:44,560 --> 00:37:49,750
Ruby<font color="#E5E5E5"> do the work and output the list of</font>

797
00:37:47,710 --> 00:37:51,460
cases<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the list of parameters</font><font color="#CCCCCC"> I need</font>

798
00:37:49,750 --> 00:37:54,660
to be executing for every<font color="#E5E5E5"> single build</font>

799
00:37:51,460 --> 00:37:57,400
and actually I've noticed the<font color="#E5E5E5"> Ruby tool</font>

800
00:37:54,660 --> 00:38:00,520
doesn't apply the<font color="#CCCCCC"> pairwise</font><font color="#E5E5E5"> algorithm</font>

801
00:37:57,400 --> 00:38:03,820
very correctly sometimes<font color="#E5E5E5"> it produces</font>

802
00:38:00,520 --> 00:38:05,440
duplicate entries you know but but<font color="#CCCCCC"> that</font>

803
00:38:03,820 --> 00:38:07,330
isn't you know that big of a problem

804
00:38:05,440 --> 00:38:15,220
<font color="#CCCCCC">it's probably</font><font color="#E5E5E5"> like one or two percent of</font>

805
00:38:07,330 --> 00:38:17,859
all times<font color="#E5E5E5"> okay so he says there are</font>

806
00:38:15,220 --> 00:38:21,540
<font color="#E5E5E5">online tools to help you with this but</font>

807
00:38:17,859 --> 00:38:26,430
they<font color="#E5E5E5"> have there are tools</font><font color="#CCCCCC"> for every</font>

808
00:38:21,540 --> 00:38:26,430
<font color="#E5E5E5">popular programming languages out</font><font color="#CCCCCC"> there</font>

809
00:38:27,300 --> 00:38:31,230
<font color="#E5E5E5">okay a question in the back</font>

810
00:38:40,270 --> 00:38:44,770
so the question is<font color="#E5E5E5"> what about how</font>

811
00:38:43,420 --> 00:38:48,870
quickly I find about<font color="#E5E5E5"> can</font><font color="#CCCCCC"> you repeat I</font>

812
00:38:44,770 --> 00:38:48,870
can<font color="#CCCCCC"> kinda don't understand what you mean</font>

813
00:39:10,290 --> 00:39:15,430
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> is if if there were</font>

814
00:39:13,300 --> 00:39:18,310
<font color="#E5E5E5">works or you know that were not found</font>

815
00:39:15,430 --> 00:39:20,259
the<font color="#E5E5E5"> first time maybe but then we</font><font color="#CCCCCC"> we I</font>

816
00:39:18,310 --> 00:39:22,210
test it with different<font color="#E5E5E5"> combination of</font>

817
00:39:20,260 --> 00:39:25,480
<font color="#CCCCCC">parameters in this case in and found</font>

818
00:39:22,210 --> 00:39:29,230
them on the<font color="#E5E5E5"> second time</font><font color="#CCCCCC"> well I don't</font>

819
00:39:25,480 --> 00:39:31,570
have<font color="#E5E5E5"> that information</font><font color="#CCCCCC"> because if I found</font>

820
00:39:29,230 --> 00:39:34,420
something let's say in<font color="#CCCCCC"> in</font><font color="#E5E5E5"> built number</font>

821
00:39:31,570 --> 00:39:37,270
<font color="#CCCCCC">two then I have then I have to go</font><font color="#E5E5E5"> back</font>

822
00:39:34,420 --> 00:39:39,910
to<font color="#CCCCCC"> Bill number one and try to reproduce</font>

823
00:39:37,270 --> 00:39:41,740
<font color="#CCCCCC">that thing and you know</font><font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know if</font>

824
00:39:39,910 --> 00:39:45,370
it's been introduced in<font color="#CCCCCC"> build</font><font color="#E5E5E5"> two or if</font>

825
00:39:41,740 --> 00:39:47,589
it was there before<font color="#E5E5E5"> that it is possible</font>

826
00:39:45,370 --> 00:39:49,420
to<font color="#E5E5E5"> do but that's a lot more</font><font color="#CCCCCC"> work to you</font>

827
00:39:47,590 --> 00:39:56,550
<font color="#CCCCCC">know to</font><font color="#E5E5E5"> get the data in to validate the</font>

828
00:39:49,420 --> 00:39:56,550
statement did I answer or no<font color="#E5E5E5"> okay</font>

829
00:40:10,480 --> 00:40:16,040
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> is about race</font>

830
00:40:13,280 --> 00:40:18,920
conditions<font color="#CCCCCC"> books that depend</font><font color="#E5E5E5"> on timing</font>

831
00:40:16,040 --> 00:40:22,700
<font color="#E5E5E5">and if I had experience with this in the</font>

832
00:40:18,920 --> 00:40:25,760
context of pairwise<font color="#E5E5E5"> first of all during</font>

833
00:40:22,700 --> 00:40:29,899
<font color="#E5E5E5">installation</font><font color="#CCCCCC"> we don't have these kinds</font>

834
00:40:25,760 --> 00:40:32,930
of problems<font color="#CCCCCC"> pretty much none</font><font color="#E5E5E5"> of the time</font>

835
00:40:29,900 --> 00:40:34,580
at one point in time<font color="#CCCCCC"> the installation I</font>

836
00:40:32,930 --> 00:40:36,740
think was multi-threaded but currently

837
00:40:34,580 --> 00:40:39,140
it's I think<font color="#E5E5E5"> it's mostly single threaded</font>

838
00:40:36,740 --> 00:40:41,439
<font color="#CCCCCC">because it was very hard</font><font color="#E5E5E5"> to debug these</font>

839
00:40:39,140 --> 00:40:44,629
things in the installation<font color="#E5E5E5"> environment</font>

840
00:40:41,440 --> 00:40:46,460
<font color="#CCCCCC">you know you have to burn</font><font color="#E5E5E5"> ISO media</font>

841
00:40:44,630 --> 00:40:48,350
reboot systems and stuff<font color="#E5E5E5"> like that it</font>

842
00:40:46,460 --> 00:40:49,790
<font color="#E5E5E5">takes a lot of time simply to get to a</font>

843
00:40:48,350 --> 00:40:51,650
point where you can<font color="#CCCCCC"> debug something</font><font color="#E5E5E5"> and</font>

844
00:40:49,790 --> 00:40:55,640
figure<font color="#CCCCCC"> out what's going on and it may</font>

845
00:40:51,650 --> 00:40:57,770
not be reproducible<font color="#CCCCCC"> that said you know</font>

846
00:40:55,640 --> 00:41:01,190
<font color="#E5E5E5">if you do desktop testing or know</font>

847
00:40:57,770 --> 00:41:04,220
something something<font color="#CCCCCC"> else which can</font><font color="#E5E5E5"> be</font>

848
00:41:01,190 --> 00:41:07,130
<font color="#CCCCCC">easily tested</font><font color="#E5E5E5"> and reproduce</font><font color="#CCCCCC"> then I guess</font>

849
00:41:04,220 --> 00:41:11,799
you<font color="#E5E5E5"> know you you can have</font><font color="#CCCCCC"> problems with</font>

850
00:41:07,130 --> 00:41:14,540
race conditions<font color="#E5E5E5"> but again you know the</font>

851
00:41:11,800 --> 00:41:16,970
race conditions<font color="#CCCCCC"> they happen kinda</font>

852
00:41:14,540 --> 00:41:19,370
<font color="#E5E5E5">randomly so you have you don't have any</font>

853
00:41:16,970 --> 00:41:21,680
idea whether<font color="#E5E5E5"> or not pairwise affected</font>

854
00:41:19,370 --> 00:41:31,940
<font color="#CCCCCC">the you</font><font color="#E5E5E5"> know the happening of</font><font color="#CCCCCC"> the rest</font>

855
00:41:21,680 --> 00:41:34,430
condition well I can well I tend<font color="#CCCCCC"> to</font>

856
00:41:31,940 --> 00:41:36,920
<font color="#CCCCCC">disagree with that because you know</font><font color="#E5E5E5"> if I</font>

857
00:41:34,430 --> 00:41:39,230
<font color="#E5E5E5">run my tests all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> time but I run them</font>

858
00:41:36,920 --> 00:41:41,210
on<font color="#E5E5E5"> the same system with the same load</font>

859
00:41:39,230 --> 00:41:43,370
and you know kind<font color="#CCCCCC"> of in a predictable</font>

860
00:41:41,210 --> 00:42:00,230
<font color="#E5E5E5">environment</font><font color="#CCCCCC"> the rest condition</font><font color="#E5E5E5"> may never</font>

861
00:41:43,370 --> 00:42:03,170
happen<font color="#CCCCCC"> we do this so the question is</font>

862
00:42:00,230 --> 00:42:08,420
have I evaluated<font color="#E5E5E5"> associated code changes</font>

863
00:42:03,170 --> 00:42:12,620
to govern<font color="#E5E5E5"> the parameter selection in</font>

864
00:42:08,420 --> 00:42:15,770
testing we do<font color="#E5E5E5"> this when we design test</font>

865
00:42:12,620 --> 00:42:18,049
cases<font color="#E5E5E5"> like for new functionality for</font>

866
00:42:15,770 --> 00:42:19,650
<font color="#CCCCCC">example we have bugs</font><font color="#E5E5E5"> and we try to</font>

867
00:42:18,050 --> 00:42:21,630
evaluate this

868
00:42:19,650 --> 00:42:24,059
and need to create<font color="#CCCCCC"> new test cases we do</font>

869
00:42:21,630 --> 00:42:25,589
that kind<font color="#CCCCCC"> of analysis but that's</font><font color="#E5E5E5"> all</font>

870
00:42:24,059 --> 00:42:28,319
subject<font color="#E5E5E5"> to the experiment I just took</font>

871
00:42:25,589 --> 00:42:30,719
whatever was<font color="#CCCCCC"> existing</font><font color="#E5E5E5"> at that point in</font>

872
00:42:28,319 --> 00:42:32,369
time<font color="#CCCCCC"> and I knew the team was going to</font>

873
00:42:30,719 --> 00:42:34,619
use the same set<font color="#CCCCCC"> of</font><font color="#E5E5E5"> test cases which</font>

874
00:42:32,369 --> 00:42:42,089
have<font color="#E5E5E5"> been</font><font color="#CCCCCC"> already created</font><font color="#E5E5E5"> before the</font>

875
00:42:34,619 --> 00:42:44,339
release<font color="#E5E5E5"> so I just used</font><font color="#CCCCCC"> that but on the</font>

876
00:42:42,089 --> 00:42:47,308
<font color="#CCCCCC">other hand</font><font color="#E5E5E5"> yes if now now that we know</font>

877
00:42:44,339 --> 00:42:49,609
how pairwise works<font color="#E5E5E5"> we can be</font><font color="#CCCCCC"> thinking</font>

878
00:42:47,309 --> 00:42:53,309
more in terms of<font color="#E5E5E5"> parameters</font><font color="#CCCCCC"> to testing</font>

879
00:42:49,609 --> 00:42:56,189
because<font color="#E5E5E5"> honestly until now we haven't</font>

880
00:42:53,309 --> 00:42:58,709
taught a lot in<font color="#E5E5E5"> terms of parameters</font><font color="#CCCCCC"> so</font>

881
00:42:56,189 --> 00:43:00,959
if the parameters were obvious<font color="#E5E5E5"> yes we</font>

882
00:42:58,709 --> 00:43:02,999
put<font color="#E5E5E5"> them into testing and if they are</font>

883
00:43:00,959 --> 00:43:04,739
weren't that obvious you have to you

884
00:43:02,999 --> 00:43:06,930
know kind<font color="#E5E5E5"> of go to the source code see</font>

885
00:43:04,739 --> 00:43:08,759
what's happening or have some customer

886
00:43:06,930 --> 00:43:11,129
tell you that yes this is<font color="#CCCCCC"> a particular</font>

887
00:43:08,759 --> 00:43:13,489
problem<font color="#CCCCCC"> in one particular environment so</font>

888
00:43:11,130 --> 00:43:15,900
we can you know add parameters to that

889
00:43:13,489 --> 00:43:17,699
<font color="#E5E5E5">and also you have to realize the</font>

890
00:43:15,900 --> 00:43:21,089
existing<font color="#CCCCCC"> tests wait that's a product</font><font color="#E5E5E5"> of</font>

891
00:43:17,699 --> 00:43:23,849
<font color="#E5E5E5">many many years of you know development</font>

892
00:43:21,089 --> 00:43:25,499
of the installation and upgrade of the

893
00:43:23,849 --> 00:43:28,289
<font color="#E5E5E5">test suite</font><font color="#CCCCCC"> you know it's not something</font>

894
00:43:25,499 --> 00:43:31,939
<font color="#E5E5E5">we came up just before the release so</font>

895
00:43:28,289 --> 00:43:31,939
it's based on a lot<font color="#CCCCCC"> of historical data</font>

896
00:43:34,189 --> 00:43:41,290
<font color="#CCCCCC">ok if you don't</font><font color="#E5E5E5"> have more</font><font color="#CCCCCC"> questions</font>

897
00:43:37,729 --> 00:43:48,399
<font color="#E5E5E5">thank you for being here</font>

898
00:43:41,290 --> 00:43:48,400
[Applause]

