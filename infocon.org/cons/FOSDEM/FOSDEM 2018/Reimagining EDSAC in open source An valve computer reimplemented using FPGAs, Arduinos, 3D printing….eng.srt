1
00:00:05,620 --> 00:00:10,969
so please welcome Mary<font color="#E5E5E5"> Bennet for the</font>

2
00:00:09,080 --> 00:00:16,299
next talk and I<font color="#CCCCCC"> think it will also</font><font color="#E5E5E5"> be</font>

3
00:00:10,969 --> 00:00:16,299
some kind of a show as I build up here

4
00:00:21,070 --> 00:00:26,690
good afternoon everyone<font color="#E5E5E5"> today I am</font><font color="#CCCCCC"> going</font>

5
00:00:24,890 --> 00:00:30,289
<font color="#E5E5E5">to tell you</font><font color="#CCCCCC"> about one of</font><font color="#E5E5E5"> the earliest</font>

6
00:00:26,690 --> 00:00:30,890
general-purpose computers at<font color="#CCCCCC"> SAC</font><font color="#E5E5E5"> its</font>

7
00:00:30,289 --> 00:00:34,070
creator

8
00:00:30,890 --> 00:00:37,190
<font color="#E5E5E5">Morris</font><font color="#CCCCCC"> Wilks</font><font color="#E5E5E5"> and our ongoing project to</font>

9
00:00:34,070 --> 00:00:42,229
<font color="#E5E5E5">the</font><font color="#CCCCCC"> imagine EDSAC using modern free and</font>

10
00:00:37,190 --> 00:00:45,050
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> technology our goal is</font><font color="#CCCCCC"> to</font>

11
00:00:42,229 --> 00:00:47,329
introduce school students who will be

12
00:00:45,050 --> 00:00:49,549
the engineers of<font color="#CCCCCC"> the future</font><font color="#E5E5E5"> to the</font>

13
00:00:47,329 --> 00:00:53,389
reality of a computer<font color="#E5E5E5"> which shapes</font>

14
00:00:49,549 --> 00:00:56,350
modern society pure software<font color="#E5E5E5"> simulations</font>

15
00:00:53,389 --> 00:00:59,329
of<font color="#CCCCCC"> edsac have existed for many years</font>

16
00:00:56,350 --> 00:01:02,139
crucially<font color="#E5E5E5"> our project is about</font>

17
00:00:59,329 --> 00:01:05,330
<font color="#E5E5E5">recreating a physical version of</font><font color="#CCCCCC"> Ed Zack</font>

18
00:01:02,139 --> 00:01:08,150
one<font color="#E5E5E5"> where connect two connections can</font>

19
00:01:05,330 --> 00:01:11,000
come loose where paper tape jams<font color="#E5E5E5"> and</font>

20
00:01:08,150 --> 00:01:13,100
sometimes<font color="#CCCCCC"> misfeeds where initial orders</font>

21
00:01:11,000 --> 00:01:16,160
can be Mis entered and where

22
00:01:13,100 --> 00:01:18,380
teleprinters can run out of<font color="#E5E5E5"> paper just</font>

23
00:01:16,160 --> 00:01:21,080
at the<font color="#CCCCCC"> wrong time</font><font color="#E5E5E5"> there will be</font>

24
00:01:18,380 --> 00:01:24,880
demonstrations<font color="#E5E5E5"> with these are we helped</font>

25
00:01:21,080 --> 00:01:24,880
by<font color="#CCCCCC"> my</font><font color="#E5E5E5"> grandmother's assistant Jeremy</font>

26
00:01:28,790 --> 00:01:34,200
these should work<font color="#CCCCCC"> perfectly</font>

27
00:01:31,350 --> 00:01:38,449
due to my hard work<font color="#E5E5E5"> but of course if</font>

28
00:01:34,200 --> 00:01:42,960
anything<font color="#E5E5E5"> goes wrong you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> blame him</font>

29
00:01:38,450 --> 00:01:46,410
let's look<font color="#E5E5E5"> at where it all started from</font>

30
00:01:42,960 --> 00:01:49,139
<font color="#E5E5E5">the night 1822 difference</font><font color="#CCCCCC"> engine of</font>

31
00:01:46,410 --> 00:01:51,690
Charles Babbage<font color="#E5E5E5"> computing was purely</font>

32
00:01:49,140 --> 00:01:54,690
<font color="#E5E5E5">mechanical until the Second World War</font>

33
00:01:51,690 --> 00:01:56,399
code cracking<font color="#E5E5E5"> during the war led</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

34
00:01:54,690 --> 00:01:58,620
emergence of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first election</font>

35
00:01:56,400 --> 00:02:01,770
mechanical and then purely electronic

36
00:01:58,620 --> 00:02:03,780
computers<font color="#E5E5E5"> by the end of the war there</font>

37
00:02:01,770 --> 00:02:06,840
were the Colossus machines at Bletchley

38
00:02:03,780 --> 00:02:12,080
Park in the UK<font color="#E5E5E5"> and designs for</font><font color="#CCCCCC"> ED mmm</font>

39
00:02:06,840 --> 00:02:14,910
<font color="#E5E5E5">yak and the successor edvac in the USA</font>

40
00:02:12,080 --> 00:02:17,730
John von Neumann<font color="#E5E5E5"> who was part of the</font>

41
00:02:14,910 --> 00:02:21,020
advic team was<font color="#E5E5E5"> responsible for two</font>

42
00:02:17,730 --> 00:02:24,660
important design elements using to

43
00:02:21,020 --> 00:02:26,790
<font color="#E5E5E5">complement binary arithmetic</font><font color="#CCCCCC"> and using a</font>

44
00:02:24,660 --> 00:02:30,620
single memory to hold<font color="#E5E5E5"> both the program</font>

45
00:02:26,790 --> 00:02:34,109
<font color="#E5E5E5">and the data on</font><font color="#CCCCCC"> which it was to operate</font>

46
00:02:30,620 --> 00:02:36,810
the<font color="#E5E5E5"> last concept was so fundamental that</font>

47
00:02:34,110 --> 00:02:39,030
<font color="#E5E5E5">all subsequent machines following this</font>

48
00:02:36,810 --> 00:02:45,840
design were known as von Neumann

49
00:02:39,030 --> 00:02:48,270
machines most Wilkes<font color="#E5E5E5"> newly appointed</font>

50
00:02:45,840 --> 00:02:51,180
<font color="#CCCCCC">director of</font><font color="#E5E5E5"> the Cambridge</font><font color="#CCCCCC"> University</font>

51
00:02:48,270 --> 00:02:54,959
mathematical<font color="#E5E5E5"> abayas I learnt of the</font><font color="#CCCCCC"> add</font>

52
00:02:51,180 --> 00:02:57,900
fact design during a 1946 visit by

53
00:02:54,959 --> 00:03:00,540
Leslie Conroy the<font color="#CCCCCC"> remiss of his</font>

54
00:02:57,900 --> 00:03:03,540
mathematical ability was to provide a

55
00:03:00,540 --> 00:03:05,730
computing service for general use<font color="#E5E5E5"> and to</font>

56
00:03:03,540 --> 00:03:08,640
be a center for development of computer

57
00:03:05,730 --> 00:03:12,540
and computational techniques<font color="#CCCCCC"> in the</font>

58
00:03:08,640 --> 00:03:14,820
<font color="#E5E5E5">university works resolved to make</font><font color="#CCCCCC"> a von</font>

59
00:03:12,540 --> 00:03:17,850
<font color="#CCCCCC">Neumann machine available to the</font>

60
00:03:14,820 --> 00:03:20,700
<font color="#E5E5E5">University his approach was relentlessly</font>

61
00:03:17,850 --> 00:03:23,400
practical during on the experience of

62
00:03:20,700 --> 00:03:29,369
edvac he used<font color="#CCCCCC"> only proven methods for</font>

63
00:03:23,400 --> 00:03:32,040
constructing<font color="#E5E5E5"> each part of</font><font color="#CCCCCC"> exact the</font>

64
00:03:29,370 --> 00:03:34,320
resulting computer was slower<font color="#E5E5E5"> and</font>

65
00:03:32,040 --> 00:03:36,630
smaller than other planned contemporary

66
00:03:34,320 --> 00:03:40,410
computers<font color="#E5E5E5"> but ran successful</font>

67
00:03:36,630 --> 00:03:43,590
from<font color="#CCCCCC"> May 1949</font><font color="#E5E5E5"> two years before the much</font>

68
00:03:40,410 --> 00:03:46,070
larger<font color="#CCCCCC"> and more complex ed back on which</font>

69
00:03:43,590 --> 00:03:46,070
it<font color="#E5E5E5"> was based</font>

70
00:03:46,430 --> 00:03:51,950
Ed's accused<font color="#CCCCCC"> mercury delay</font><font color="#E5E5E5"> lines for</font>

71
00:03:49,740 --> 00:03:55,530
memory<font color="#E5E5E5"> and vacuum</font><font color="#CCCCCC"> tubes for logic</font>

72
00:03:51,950 --> 00:03:58,170
<font color="#E5E5E5">despite</font><font color="#CCCCCC"> 3,000 vacuum tubes and the five</font>

73
00:03:55,530 --> 00:04:00,570
foot long delay lines<font color="#E5E5E5"> heads that could</font>

74
00:03:58,170 --> 00:04:03,109
just about fit into a<font color="#CCCCCC"> five meter</font><font color="#E5E5E5"> by for</font>

75
00:04:00,570 --> 00:04:03,109
me<font color="#E5E5E5"> to</font><font color="#CCCCCC"> voom</font>

76
00:04:05,750 --> 00:04:11,970
<font color="#CCCCCC">Ed's that consisted of a control unit to</font>

77
00:04:09,480 --> 00:04:16,200
hold the order being processed<font color="#CCCCCC"> an ALU</font>

78
00:04:11,970 --> 00:04:17,670
<font color="#E5E5E5">holding a 71 bit accumulator and 235 bit</font>

79
00:04:16,200 --> 00:04:20,760
multiplication of<font color="#CCCCCC"> plans</font>

80
00:04:17,670 --> 00:04:24,570
and a general store<font color="#E5E5E5"> initially only</font>

81
00:04:20,760 --> 00:04:30,750
holding 512<font color="#E5E5E5"> 18 bit words which later</font>

82
00:04:24,570 --> 00:04:34,170
increased to<font color="#CCCCCC"> 1,024 words short words on</font>

83
00:04:30,750 --> 00:04:36,390
<font color="#CCCCCC">edsac were</font><font color="#E5E5E5"> 17 bits long since due</font><font color="#CCCCCC"> to</font>

84
00:04:34,170 --> 00:04:39,390
timing issues the topmost<font color="#E5E5E5"> best in every</font>

85
00:04:36,390 --> 00:04:42,240
short word<font color="#E5E5E5"> could not be used long words</font>

86
00:04:39,390 --> 00:04:45,960
could use the topmost<font color="#E5E5E5"> bit and so</font><font color="#CCCCCC"> with 35</font>

87
00:04:42,240 --> 00:04:49,170
bits long the accumulator could hold 71

88
00:04:45,960 --> 00:04:51,270
bits<font color="#E5E5E5"> including the sign this allowed to</font>

89
00:04:49,170 --> 00:04:54,930
long numbers to be multiplied without

90
00:04:51,270 --> 00:04:58,530
losing any precision<font color="#E5E5E5"> and Psyche used to</font>

91
00:04:54,930 --> 00:05:00,390
<font color="#CCCCCC">complement binary numbers unusually</font><font color="#E5E5E5"> the</font>

92
00:04:58,530 --> 00:05:03,239
multiplier was designed to treat numbers

93
00:05:00,390 --> 00:05:06,659
<font color="#CCCCCC">as fixed</font><font color="#E5E5E5"> point fractions in a range</font>

94
00:05:03,240 --> 00:05:08,430
between 1 and minus<font color="#CCCCCC"> 1 therefore</font><font color="#E5E5E5"> the</font>

95
00:05:06,660 --> 00:05:11,090
binary<font color="#CCCCCC"> point was</font><font color="#E5E5E5"> immediately to the</font>

96
00:05:08,430 --> 00:05:11,090
<font color="#CCCCCC">right of the sign</font>

97
00:05:14,760 --> 00:05:20,920
all instruction codes were by design

98
00:05:17,710 --> 00:05:25,599
<font color="#E5E5E5">represented by one moon</font><font color="#CCCCCC"> mnemonic letter</font>

99
00:05:20,920 --> 00:05:27,870
<font color="#E5E5E5">in five bit modified</font><font color="#CCCCCC"> bowed out code</font><font color="#E5E5E5"> so</font>

100
00:05:25,600 --> 00:05:31,360
that's an add instruction for<font color="#CCCCCC"> example</font>

101
00:05:27,870 --> 00:05:34,300
<font color="#E5E5E5">used the EDSAC character for the code of</font>

102
00:05:31,360 --> 00:05:36,970
lesser<font color="#E5E5E5"> a there's no division</font>

103
00:05:34,300 --> 00:05:38,820
instructions nor any way to directly

104
00:05:36,970 --> 00:05:41,920
<font color="#E5E5E5">load a number into the accumulator</font>

105
00:05:38,820 --> 00:05:44,080
<font color="#E5E5E5">instead a store and zero accumulator</font>

106
00:05:41,920 --> 00:05:46,390
instruction followed<font color="#E5E5E5"> by an add</font>

107
00:05:44,080 --> 00:05:49,810
instruction<font color="#E5E5E5"> were necessary</font><font color="#CCCCCC"> to store</font><font color="#E5E5E5"> a</font>

108
00:05:46,390 --> 00:05:52,599
value<font color="#E5E5E5"> in the accumulator there are no</font>

109
00:05:49,810 --> 00:05:54,760
unconditional jump instructions<font color="#E5E5E5"> nor was</font>

110
00:05:52,600 --> 00:05:57,450
there for seed roll call instruction<font color="#E5E5E5"> as</font>

111
00:05:54,760 --> 00:06:00,370
procedures<font color="#E5E5E5"> had not yet been invented</font>

112
00:05:57,450 --> 00:06:03,099
<font color="#E5E5E5">with such a restricted instruction set</font>

113
00:06:00,370 --> 00:06:08,980
and memory cell for defying code was

114
00:06:03,100 --> 00:06:12,700
widely<font color="#E5E5E5"> used</font><font color="#CCCCCC"> edsac use punched paper tape</font>

115
00:06:08,980 --> 00:06:15,160
<font color="#E5E5E5">to input programs</font><font color="#CCCCCC"> a programmer</font><font color="#E5E5E5"> would</font>

116
00:06:12,700 --> 00:06:17,440
provide the<font color="#E5E5E5"> Honduras in program to a</font>

117
00:06:15,160 --> 00:06:19,840
specialist typist<font color="#E5E5E5"> who converted the</font>

118
00:06:17,440 --> 00:06:25,510
program into<font color="#CCCCCC"> edsac Baudot code</font><font color="#E5E5E5"> and</font>

119
00:06:19,840 --> 00:06:27,489
punched the<font color="#CCCCCC"> fifl</font><font color="#E5E5E5"> white tape the</font>

120
00:06:25,510 --> 00:06:30,490
programmer would<font color="#E5E5E5"> then hang their tape on</font>

121
00:06:27,490 --> 00:06:32,740
a rack ready to be<font color="#CCCCCC"> run</font><font color="#E5E5E5"> if there were</font>

122
00:06:30,490 --> 00:06:35,050
then<font color="#CCCCCC"> failed to be errors in the tape</font><font color="#E5E5E5"> a</font>

123
00:06:32,740 --> 00:06:40,930
hand punch could be used to<font color="#CCCCCC"> make small</font>

124
00:06:35,050 --> 00:06:42,940
collections if the program instructed a

125
00:06:40,930 --> 00:06:46,270
printed output<font color="#E5E5E5"> an electromechanical</font>

126
00:06:42,940 --> 00:06:49,030
teleprinters was used<font color="#CCCCCC"> and sack could</font>

127
00:06:46,270 --> 00:06:51,669
send the least significant 5 bits of the

128
00:06:49,030 --> 00:06:55,059
long word being printed in to an

129
00:06:51,670 --> 00:06:57,730
internal buffer when a new character was

130
00:06:55,060 --> 00:07:00,960
received in the internal<font color="#CCCCCC"> buffer</font><font color="#E5E5E5"> the</font>

131
00:06:57,730 --> 00:07:03,160
previous character would be<font color="#CCCCCC"> printed</font>

132
00:07:00,960 --> 00:07:06,010
<font color="#CCCCCC">there's still the problem</font><font color="#E5E5E5"> of</font>

133
00:07:03,160 --> 00:07:10,180
bootstrapping<font color="#E5E5E5"> to save time the initial</font>

134
00:07:06,010 --> 00:07:13,210
<font color="#E5E5E5">32 instructions known as orders in</font><font color="#CCCCCC"> edsac</font>

135
00:07:10,180 --> 00:07:17,320
were hardwired<font color="#E5E5E5"> on a set of unique</font>

136
00:07:13,210 --> 00:07:20,830
selector switches by May 1949<font color="#E5E5E5"> the</font>

137
00:07:17,320 --> 00:07:23,770
initial orders who provided a primitive

138
00:07:20,830 --> 00:07:26,669
relocating assembler taking<font color="#E5E5E5"> advantage of</font>

139
00:07:23,770 --> 00:07:32,590
the<font color="#E5E5E5"> mnemonic notation used in programs</font>

140
00:07:26,670 --> 00:07:35,380
<font color="#E5E5E5">this was the world's first assembler as</font>

141
00:07:32,590 --> 00:07:39,369
an example<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> initial bootstrap</font>

142
00:07:35,380 --> 00:07:42,670
code of a<font color="#E5E5E5"> 32 instructions alongside</font><font color="#CCCCCC"> it's</font>

143
00:07:39,370 --> 00:07:44,950
paper tape representation note that like

144
00:07:42,670 --> 00:07:48,550
<font color="#E5E5E5">Hebrew you need to read the paper tape</font>

145
00:07:44,950 --> 00:07:51,159
<font color="#E5E5E5">from right to left you</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> the paper</font>

146
00:07:48,550 --> 00:07:53,230
take today<font color="#E5E5E5"> each tin the windows of the</font>

147
00:07:51,160 --> 00:07:58,090
Cambridge<font color="#CCCCCC"> University computer lab Tea</font>

148
00:07:53,230 --> 00:08:00,940
<font color="#CCCCCC">Room David wheeler</font><font color="#E5E5E5"> Boswell</font><font color="#CCCCCC"> courses</font>

149
00:07:58,090 --> 00:08:03,310
assistant came up with the technique<font color="#E5E5E5"> to</font>

150
00:08:00,940 --> 00:08:06,640
allow blocks of code to<font color="#E5E5E5"> be reused for</font>

151
00:08:03,310 --> 00:08:08,470
<font color="#CCCCCC">multiple locations</font><font color="#E5E5E5"> the program could</font>

152
00:08:06,640 --> 00:08:10,930
store its current location in<font color="#CCCCCC"> the</font>

153
00:08:08,470 --> 00:08:13,720
<font color="#E5E5E5">accumulator and then jump to the block</font>

154
00:08:10,930 --> 00:08:16,960
of<font color="#CCCCCC"> code to</font><font color="#E5E5E5"> be reused the block of code</font>

155
00:08:13,720 --> 00:08:22,540
<font color="#E5E5E5">would then add the</font><font color="#CCCCCC"> opcode for a jump to</font>

156
00:08:16,960 --> 00:08:25,120
<font color="#CCCCCC">two location also jump to location</font><font color="#E5E5E5"> 2 to</font>

157
00:08:22,540 --> 00:08:28,900
the accumulator and stores at the<font color="#E5E5E5"> final</font>

158
00:08:25,120 --> 00:08:32,620
location of the code this modified code

159
00:08:28,900 --> 00:08:35,919
was then a<font color="#E5E5E5"> link order allowing control</font>

160
00:08:32,620 --> 00:08:38,230
to return to the<font color="#CCCCCC"> original program</font><font color="#E5E5E5"> you</font>

161
00:08:35,919 --> 00:08:42,099
can see the<font color="#CCCCCC"> behavior of the main program</font>

162
00:08:38,230 --> 00:08:45,730
at location P minus 1 it says the

163
00:08:42,100 --> 00:08:48,450
<font color="#E5E5E5">accumulator a location P it stores its</font>

164
00:08:45,730 --> 00:08:52,780
current location<font color="#CCCCCC"> P in the accumulator</font>

165
00:08:48,450 --> 00:08:56,710
<font color="#E5E5E5">before at location P plus 1 it jumps to</font>

166
00:08:52,780 --> 00:09:00,160
<font color="#E5E5E5">the block of</font><font color="#CCCCCC"> code at location Q and the</font>

167
00:08:56,710 --> 00:09:03,610
stars of book<font color="#E5E5E5"> of code at location Q it</font>

168
00:09:00,160 --> 00:09:07,060
adds the value at<font color="#CCCCCC"> location 3 to the</font>

169
00:09:03,610 --> 00:09:10,270
value in the accumulator<font color="#E5E5E5"> by convention</font>

170
00:09:07,060 --> 00:09:13,689
location<font color="#E5E5E5"> 3 held the order for jump to</font>

171
00:09:10,270 --> 00:09:16,569
location<font color="#CCCCCC"> 2 if positive so the addition</font>

172
00:09:13,690 --> 00:09:22,300
created the order<font color="#E5E5E5"> to jump to location P</font>

173
00:09:16,570 --> 00:09:25,070
plus 2 if positive at location Q plus<font color="#CCCCCC"> 1</font>

174
00:09:22,300 --> 00:09:28,339
<font color="#E5E5E5">it then stores the value in</font><font color="#CCCCCC"> ok</font>

175
00:09:25,070 --> 00:09:31,550
q+<font color="#CCCCCC"> are the final location of the block</font>

176
00:09:28,340 --> 00:09:34,760
<font color="#E5E5E5">of code the penultimate orders of the</font>

177
00:09:31,550 --> 00:09:38,599
code block<font color="#E5E5E5"> starts at location Q plus R</font>

178
00:09:34,760 --> 00:09:42,200
minus<font color="#CCCCCC"> one and</font><font color="#E5E5E5"> location Q plus R minus 1</font>

179
00:09:38,600 --> 00:09:46,100
it says the<font color="#E5E5E5"> accumulator</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> ensure the</font>

180
00:09:42,200 --> 00:09:48,620
following jump if positive<font color="#E5E5E5"> is taken then</font>

181
00:09:46,100 --> 00:09:51,140
that location keeps us<font color="#E5E5E5"> are the jump</font>

182
00:09:48,620 --> 00:09:55,640
<font color="#CCCCCC">construction modified at the start of</font>

183
00:09:51,140 --> 00:09:57,830
the block is executed<font color="#E5E5E5"> which returns</font>

184
00:09:55,640 --> 00:10:01,420
<font color="#E5E5E5">control to the point</font><font color="#CCCCCC"> of in the main</font>

185
00:09:57,830 --> 00:10:07,730
program<font color="#CCCCCC"> immediately after the jump</font>

186
00:10:01,420 --> 00:10:08,390
oops of course we know<font color="#E5E5E5"> this today as a</font>

187
00:10:07,730 --> 00:10:10,790
subroutine

188
00:10:08,390 --> 00:10:15,800
but David wheeler<font color="#E5E5E5"> was the first to use</font>

189
00:10:10,790 --> 00:10:18,290
this technique by 1951<font color="#E5E5E5"> and library of 87</font>

190
00:10:15,800 --> 00:10:20,930
subroutines<font color="#E5E5E5"> were available on tape for</font>

191
00:10:18,290 --> 00:10:23,719
general use including<font color="#E5E5E5"> complex numbers</font>

192
00:10:20,930 --> 00:10:27,040
logarithms<font color="#E5E5E5"> and equivalent and the</font>

193
00:10:23,720 --> 00:10:32,990
equivalent<font color="#CCCCCC"> of modern while and for loops</font>

194
00:10:27,040 --> 00:10:36,530
<font color="#E5E5E5">in</font><font color="#CCCCCC"> 1940 in 1951</font><font color="#E5E5E5"> books and wheeler and</font>

195
00:10:32,990 --> 00:10:38,770
their colleague<font color="#E5E5E5"> Dan Lee Gil published</font>

196
00:10:36,530 --> 00:10:41,990
the<font color="#E5E5E5"> first ever book on programming</font>

197
00:10:38,770 --> 00:10:44,510
sadly<font color="#CCCCCC"> seventy years later the first</font>

198
00:10:41,990 --> 00:10:47,830
<font color="#E5E5E5">edition</font><font color="#CCCCCC"> a key historical</font><font color="#E5E5E5"> resource is</font>

199
00:10:44,510 --> 00:10:50,140
only<font color="#CCCCCC"> available as a copyright facsimile</font>

200
00:10:47,830 --> 00:10:52,970
<font color="#CCCCCC">Amazon have two copies</font><font color="#E5E5E5"> available</font>

201
00:10:50,140 --> 00:10:56,449
<font color="#CCCCCC">second-hand</font><font color="#E5E5E5"> for one thousand one hundred</font>

202
00:10:52,970 --> 00:10:58,430
<font color="#CCCCCC">and seventy-five</font><font color="#E5E5E5"> pounds</font><font color="#CCCCCC"> each there is a</font>

203
00:10:56,450 --> 00:11:01,910
downloadable<font color="#CCCCCC"> copy of the second edition</font>

204
00:10:58,430 --> 00:11:04,969
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> essential resource although it</font>

205
00:11:01,910 --> 00:11:12,110
describes<font color="#E5E5E5"> later extensions to</font><font color="#CCCCCC"> edsac</font>

206
00:11:04,970 --> 00:11:14,510
not the original 1949 machine<font color="#CCCCCC"> edsac was</font>

207
00:11:12,110 --> 00:11:18,410
<font color="#E5E5E5">intended</font><font color="#CCCCCC"> to advance scientific research</font>

208
00:11:14,510 --> 00:11:20,930
in the university<font color="#CCCCCC"> in 1951</font><font color="#E5E5E5"> it found a</font>

209
00:11:18,410 --> 00:11:23,180
<font color="#E5E5E5">seventy nine digit plane more than</font>

210
00:11:20,930 --> 00:11:25,540
doubling the<font color="#E5E5E5"> record which had stood</font><font color="#CCCCCC"> for</font>

211
00:11:23,180 --> 00:11:27,829
the preceding<font color="#CCCCCC"> 75 years</font>

212
00:11:25,540 --> 00:11:30,260
Ronald Fisher's paper<font color="#E5E5E5"> on gene</font>

213
00:11:27,830 --> 00:11:32,900
frequencies the same year included a

214
00:11:30,260 --> 00:11:36,319
table of solutions computed by<font color="#E5E5E5"> Wilkes</font>

215
00:11:32,900 --> 00:11:36,910
and wheeler on<font color="#CCCCCC"> edsac</font><font color="#E5E5E5"> this was the first</font>

216
00:11:36,320 --> 00:11:39,250
exam

217
00:11:36,910 --> 00:11:43,900
of a computer being used in<font color="#CCCCCC"> biological</font>

218
00:11:39,250 --> 00:11:47,110
<font color="#CCCCCC">research in 1951</font><font color="#E5E5E5"> hodgkin and huxley</font>

219
00:11:43,900 --> 00:11:50,380
<font color="#E5E5E5">wanted to use</font><font color="#CCCCCC"> edsac</font><font color="#E5E5E5"> for the analysis of</font>

220
00:11:47,110 --> 00:11:53,050
nerve signaling unfortunately<font color="#CCCCCC"> edsac was</font>

221
00:11:50,380 --> 00:11:55,420
<font color="#E5E5E5">offline</font><font color="#CCCCCC"> for six-month refurbishment</font><font color="#E5E5E5"> and</font>

222
00:11:53,050 --> 00:11:57,000
missed out<font color="#CCCCCC"> on</font><font color="#E5E5E5"> involvement in work which</font>

223
00:11:55,420 --> 00:11:59,829
<font color="#CCCCCC">led to a Nobel Prize</font>

224
00:11:57,000 --> 00:12:06,610
however<font color="#CCCCCC"> at SAC</font><font color="#E5E5E5"> did play a big role in</font>

225
00:11:59,830 --> 00:12:08,740
<font color="#E5E5E5">their later work</font><font color="#CCCCCC"> but the first graphical</font>

226
00:12:06,610 --> 00:12:11,050
video game was also<font color="#CCCCCC"> written and played</font>

227
00:12:08,740 --> 00:12:13,540
on<font color="#CCCCCC"> EDSAC</font><font color="#E5E5E5"> an implementation of</font>

228
00:12:11,050 --> 00:12:17,109
<font color="#CCCCCC">tic-tac-toe</font><font color="#E5E5E5"> with graphical output sent</font>

229
00:12:13,540 --> 00:12:20,709
to a cathode ray ray tube an input via a

230
00:12:17,110 --> 00:12:23,280
telephone rotary dial the development of

231
00:12:20,710 --> 00:12:26,380
computing was a massive<font color="#E5E5E5"> public interest</font>

232
00:12:23,280 --> 00:12:30,870
<font color="#CCCCCC">here is how British newspaper</font><font color="#E5E5E5"> the Star</font>

233
00:12:26,380 --> 00:12:30,870
reported on<font color="#CCCCCC"> edsac in 1949</font>

234
00:12:37,800 --> 00:12:44,469
there are many software simulators of

235
00:12:40,750 --> 00:12:47,649
<font color="#CCCCCC">EDSAC but none of these capture the</font>

236
00:12:44,470 --> 00:12:49,810
physical nature of<font color="#CCCCCC"> early computing we</font>

237
00:12:47,649 --> 00:12:53,769
have me<font color="#E5E5E5"> imagine dead sack</font><font color="#CCCCCC"> using a modern</font>

238
00:12:49,810 --> 00:12:57,310
<font color="#CCCCCC">FPGA for the processor</font><font color="#E5E5E5"> and 3d printing</font>

239
00:12:53,769 --> 00:12:59,910
<font color="#E5E5E5">discrete electronics and Arduino for the</font>

240
00:12:57,310 --> 00:13:02,649
delay line<font color="#E5E5E5"> and three key peripherals</font>

241
00:12:59,910 --> 00:13:05,019
everything is<font color="#CCCCCC"> open-source and</font><font color="#E5E5E5"> we have</font>

242
00:13:02,649 --> 00:13:07,230
aimed to<font color="#E5E5E5"> keep the cost of design low to</font>

243
00:13:05,019 --> 00:13:09,880
<font color="#E5E5E5">make the project accessible for schools</font>

244
00:13:07,230 --> 00:13:13,000
in this talk I am going<font color="#CCCCCC"> to look in more</font>

245
00:13:09,880 --> 00:13:15,880
detail at<font color="#E5E5E5"> the use of FPGA boards for the</font>

246
00:13:13,000 --> 00:13:18,640
main<font color="#CCCCCC"> EDSAC of logic one of the</font>

247
00:13:15,880 --> 00:13:23,350
peripherals the paper tape reader<font color="#CCCCCC"> and</font>

248
00:13:18,640 --> 00:13:26,199
the delay line<font color="#CCCCCC"> used for memory</font><font color="#E5E5E5"> this is a</font>

249
00:13:23,350 --> 00:13:30,459
work<font color="#CCCCCC"> in progress</font><font color="#E5E5E5"> currently based on the</font>

250
00:13:26,200 --> 00:13:33,220
original 1949 version of<font color="#CCCCCC"> edsac we</font>

251
00:13:30,459 --> 00:13:38,170
welcome all contributions to extend our

252
00:13:33,220 --> 00:13:41,020
work<font color="#E5E5E5"> an FPGA is a software we</font>

253
00:13:38,170 --> 00:13:44,170
configurable silicon chip there are now

254
00:13:41,020 --> 00:13:46,470
<font color="#CCCCCC">many small fpga boards available</font><font color="#E5E5E5"> which</font>

255
00:13:44,170 --> 00:13:50,380
can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> used to learn silicon chip design</font>

256
00:13:46,470 --> 00:13:52,600
<font color="#E5E5E5">the designs are specified in</font><font color="#CCCCCC"> a hardware</font>

257
00:13:50,380 --> 00:13:56,290
<font color="#CCCCCC">description language and for this</font>

258
00:13:52,600 --> 00:14:00,329
project<font color="#CCCCCC"> we have used barrel lock the my</font>

259
00:13:56,290 --> 00:14:00,329
<font color="#CCCCCC">stone board is a low-cost option</font>

260
00:14:00,750 --> 00:14:07,029
designed<font color="#E5E5E5"> by Ken</font><font color="#CCCCCC"> Boca and our land would</font>

261
00:14:03,899 --> 00:14:09,370
all<font color="#E5E5E5"> board schematics are freely</font>

262
00:14:07,029 --> 00:14:14,110
available<font color="#E5E5E5"> so if you want to make your</font>

263
00:14:09,370 --> 00:14:16,300
own<font color="#CCCCCC"> version of the my storm you</font><font color="#E5E5E5"> can my</font>

264
00:14:14,110 --> 00:14:19,899
storm<font color="#E5E5E5"> in turn uses free and open-source</font>

265
00:14:16,300 --> 00:14:22,750
<font color="#E5E5E5">uses tools by Clifford wolf for verilock</font>

266
00:14:19,899 --> 00:14:25,510
synthesis so you have a completely<font color="#E5E5E5"> free</font>

267
00:14:22,750 --> 00:14:33,130
tool chain<font color="#E5E5E5"> from hardware design to</font>

268
00:14:25,510 --> 00:14:35,560
physical realization<font color="#CCCCCC"> Bill</font><font color="#E5E5E5"> Purvis started</font>

269
00:14:33,130 --> 00:14:38,760
the original<font color="#CCCCCC"> edsac with the original</font>

270
00:14:35,560 --> 00:14:41,680
<font color="#CCCCCC">edsac drawings from Wilkes</font>

271
00:14:38,760 --> 00:14:44,019
<font color="#CCCCCC">yuvigi the logic system</font><font color="#E5E5E5"> using modern</font>

272
00:14:41,680 --> 00:14:47,829
notation<font color="#CCCCCC"> and then Revo sir in Verilog</font>

273
00:14:44,019 --> 00:14:49,660
<font color="#E5E5E5">for use on a heist on board gate level</font>

274
00:14:47,829 --> 00:14:52,660
simulations<font color="#E5E5E5"> can</font>

275
00:14:49,660 --> 00:14:54,370
the design work as expected<font color="#E5E5E5"> there are</font>

276
00:14:52,660 --> 00:14:56,800
physical searches to control the

277
00:14:54,370 --> 00:15:00,610
implementation and provide initial

278
00:14:56,800 --> 00:15:02,620
<font color="#E5E5E5">orders as shown on</font><font color="#CCCCCC"> screen</font><font color="#E5E5E5"> however this</font>

279
00:15:00,610 --> 00:15:04,660
version of<font color="#CCCCCC"> IDI sack</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> relied on</font>

280
00:15:02,620 --> 00:15:08,770
<font color="#E5E5E5">software to simulate the external</font>

281
00:15:04,660 --> 00:15:11,860
peripheral world as part of the 2017

282
00:15:08,770 --> 00:15:14,829
<font color="#E5E5E5">google Summer of Code</font><font color="#CCCCCC"> patent</font><font color="#E5E5E5"> controller</font>

283
00:15:11,860 --> 00:15:17,470
<font color="#E5E5E5">shown on right created a new</font>

284
00:15:14,830 --> 00:15:19,690
implementation<font color="#E5E5E5"> in vogue this</font><font color="#CCCCCC"> was</font>

285
00:15:17,470 --> 00:15:23,200
particularly designed to take advantage

286
00:15:19,690 --> 00:15:25,529
<font color="#CCCCCC">of the my strong p-mod ports so</font><font color="#E5E5E5"> it could</font>

287
00:15:23,200 --> 00:15:28,089
drive external<font color="#CCCCCC"> physical peripherals</font>

288
00:15:25,529 --> 00:15:30,939
let's now look at one<font color="#CCCCCC"> of the peripheral</font>

289
00:15:28,089 --> 00:15:34,060
devices<font color="#E5E5E5"> our reimagining of the paper</font>

290
00:15:30,940 --> 00:15:37,540
tape reader<font color="#E5E5E5"> we don't have access</font><font color="#CCCCCC"> to a</font>

291
00:15:34,060 --> 00:15:40,689
paper tape<font color="#E5E5E5"> punch or indeed any old paper</font>

292
00:15:37,540 --> 00:15:43,779
tape to punch instead<font color="#E5E5E5"> we use a thermal</font>

293
00:15:40,690 --> 00:15:49,390
<font color="#CCCCCC">printer of the type used</font><font color="#E5E5E5"> in a shopping</font>

294
00:15:43,779 --> 00:15:51,850
<font color="#E5E5E5">till to print out paper tape like</font>

295
00:15:49,390 --> 00:15:54,310
traditional paper tape we have<font color="#E5E5E5"> three</font>

296
00:15:51,850 --> 00:15:57,640
holes on<font color="#CCCCCC"> one side then a sprocket all</font>

297
00:15:54,310 --> 00:15:59,560
then two holes on the<font color="#CCCCCC"> other side to read</font>

298
00:15:57,640 --> 00:16:02,410
the tape will shine a light on<font color="#E5E5E5"> the paper</font>

299
00:15:59,560 --> 00:16:06,729
<font color="#E5E5E5">and detects how much is reflected back</font>

300
00:16:02,410 --> 00:16:08,860
using<font color="#CCCCCC"> a light dependent resistor the</font>

301
00:16:06,730 --> 00:16:10,900
light dependent<font color="#E5E5E5"> resistor has a</font>

302
00:16:08,860 --> 00:16:14,320
resistance<font color="#CCCCCC"> which under bright light</font>

303
00:16:10,900 --> 00:16:17,890
drops<font color="#E5E5E5"> to as little</font><font color="#CCCCCC"> as five kilo ohms but</font>

304
00:16:14,320 --> 00:16:20,380
<font color="#E5E5E5">rises to 20 mega ohms in the dark we</font>

305
00:16:17,890 --> 00:16:23,500
connect one end<font color="#E5E5E5"> of the light</font><font color="#CCCCCC"> dependent</font>

306
00:16:20,380 --> 00:16:27,189
resistor to<font color="#CCCCCC"> the 5 volt bail and the</font>

307
00:16:23,500 --> 00:16:30,940
other end to<font color="#CCCCCC"> a 22 kilo ohm pulldown</font>

308
00:16:27,190 --> 00:16:33,580
resistor to ground<font color="#E5E5E5"> will use the voltage</font>

309
00:16:30,940 --> 00:16:37,959
<font color="#E5E5E5">at the mid connection connecting it to</font>

310
00:16:33,580 --> 00:16:40,390
an Arduino and<font color="#CCCCCC"> Org</font><font color="#E5E5E5"> input when the light</font>

311
00:16:37,959 --> 00:16:42,339
dependent<font color="#E5E5E5"> resistor is dark it will have</font>

312
00:16:40,390 --> 00:16:45,279
a very<font color="#E5E5E5"> high</font><font color="#CCCCCC"> resistance compared to the</font>

313
00:16:42,339 --> 00:16:47,650
pulldown resistor following<font color="#CCCCCC"> kirchoff's</font>

314
00:16:45,279 --> 00:16:49,920
law we know the voltage<font color="#E5E5E5"> will distribute</font>

315
00:16:47,650 --> 00:16:52,600
<font color="#CCCCCC">across the resistors proportionately</font>

316
00:16:49,920 --> 00:16:55,949
so the voltage<font color="#E5E5E5"> provided to the analog</font>

317
00:16:52,600 --> 00:16:58,060
input will<font color="#CCCCCC"> be close to zero volts</font>

318
00:16:55,950 --> 00:16:58,980
conversely when the light dependent

319
00:16:58,060 --> 00:17:01,260
<font color="#E5E5E5">resistor</font>

320
00:16:58,980 --> 00:17:04,260
<font color="#CCCCCC">eliminated it will have a low resistance</font>

321
00:17:01,260 --> 00:17:06,689
compared to the pulldown resistor the

322
00:17:04,260 --> 00:17:08,819
voltage now distribute<font color="#CCCCCC"> s--</font><font color="#E5E5E5"> mostly across</font>

323
00:17:06,689 --> 00:17:11,640
the<font color="#E5E5E5"> pulldown resistor and the voltage</font>

324
00:17:08,819 --> 00:17:15,059
<font color="#CCCCCC">provided to the analog input will be</font>

325
00:17:11,640 --> 00:17:17,520
<font color="#E5E5E5">much closer to</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> volts we believe</font>

326
00:17:15,059 --> 00:17:21,530
looking<font color="#E5E5E5"> for low voltages which</font>

327
00:17:17,520 --> 00:17:21,530
correspond to dark holes on the tape

328
00:17:22,429 --> 00:17:28,470
having built our reader<font color="#CCCCCC"> the first step</font>

329
00:17:25,530 --> 00:17:32,600
was to feed a<font color="#E5E5E5"> try old tape through with</font>

330
00:17:28,470 --> 00:17:32,600
an oscilloscope<font color="#CCCCCC"> on the analog inputs</font>

331
00:17:36,740 --> 00:17:42,450
<font color="#CCCCCC">here's what we see</font>

332
00:17:39,679 --> 00:17:44,850
<font color="#E5E5E5">the sensor for the sprocket</font><font color="#CCCCCC"> Hall in</font>

333
00:17:42,450 --> 00:17:46,669
yellow<font color="#E5E5E5"> at the top and the</font><font color="#CCCCCC"> middle data</font>

334
00:17:44,850 --> 00:17:49,590
<font color="#E5E5E5">Hall at the bottom in</font><font color="#CCCCCC"> blue</font>

335
00:17:46,669 --> 00:17:51,809
after some random noise at the start of

336
00:17:49,590 --> 00:17:54,870
<font color="#E5E5E5">the tape the sprocket</font><font color="#CCCCCC"> Hall shows</font><font color="#E5E5E5"> a</font>

337
00:17:51,809 --> 00:17:58,950
regular signal<font color="#E5E5E5"> since it has a hole</font><font color="#CCCCCC"> for</font>

338
00:17:54,870 --> 00:18:02,159
each row<font color="#E5E5E5"> by contrast the data</font><font color="#CCCCCC"> hall has a</font>

339
00:17:58,950 --> 00:18:05,610
mixed signal there<font color="#CCCCCC"> is a there is not a</font>

340
00:18:02,160 --> 00:18:08,700
hole in every row well it does have a

341
00:18:05,610 --> 00:18:15,479
signal it has a larger amplitude<font color="#CCCCCC"> since</font>

342
00:18:08,700 --> 00:18:17,730
it has larger<font color="#CCCCCC"> holes</font><font color="#E5E5E5"> than the sprocket we</font>

343
00:18:15,480 --> 00:18:20,309
then connected the<font color="#CCCCCC"> reader to the Arduino</font>

344
00:18:17,730 --> 00:18:24,530
<font color="#E5E5E5">and used it to collect the raw data from</font>

345
00:18:20,309 --> 00:18:28,889
the<font color="#E5E5E5"> analog pins something at 200 Hertz</font>

346
00:18:24,530 --> 00:18:32,549
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Arduino analog to digital converters</font>

347
00:18:28,890 --> 00:18:36,600
are 10 bit<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Bill the</font><font color="#E5E5E5"> yield values from</font>

348
00:18:32,549 --> 00:18:40,710
<font color="#CCCCCC">0 for 0 volts to 1023</font>

349
00:18:36,600 --> 00:18:43,678
for 5 volts the ports of all<font color="#CCCCCC"> five data</font>

350
00:18:40,710 --> 00:18:47,669
pins and the sprocket pin is<font color="#E5E5E5"> revealing</font>

351
00:18:43,679 --> 00:18:49,950
<font color="#E5E5E5">as expected after</font><font color="#CCCCCC"> an initial random</font>

352
00:18:47,669 --> 00:18:53,220
period while the<font color="#E5E5E5"> blank leader passes the</font>

353
00:18:49,950 --> 00:18:55,919
sensor we see a series<font color="#CCCCCC"> of minima for</font>

354
00:18:53,220 --> 00:18:58,169
each pin corresponding to dark patches

355
00:18:55,919 --> 00:19:00,059
on the tape<font color="#E5E5E5"> the yellow line</font><font color="#CCCCCC"> for the</font>

356
00:18:58,169 --> 00:19:03,750
sprocket<font color="#CCCCCC"> hole shows a regular pattern</font>

357
00:19:00,059 --> 00:19:06,030
<font color="#E5E5E5">with a minimum for each hole however</font>

358
00:19:03,750 --> 00:19:10,230
<font color="#CCCCCC">notice that the signals are quite smooth</font>

359
00:19:06,030 --> 00:19:11,690
no sharp edges<font color="#E5E5E5"> as we meet a hole also</font>

360
00:19:10,230 --> 00:19:14,539
note that<font color="#CCCCCC"> one</font>

361
00:19:11,690 --> 00:19:18,350
signal has a period<font color="#E5E5E5"> of no holes such as</font>

362
00:19:14,539 --> 00:19:20,750
data<font color="#CCCCCC"> hall three shown in purple</font><font color="#E5E5E5"> it rises</font>

363
00:19:18,350 --> 00:19:23,870
<font color="#E5E5E5">to a higher value</font><font color="#CCCCCC"> than when it had a</font>

364
00:19:20,750 --> 00:19:26,299
frequent minima<font color="#E5E5E5"> this is because light</font>

365
00:19:23,870 --> 00:19:30,739
dependent resistors are quite slow to

366
00:19:26,299 --> 00:19:33,740
react<font color="#E5E5E5"> secondly notice</font><font color="#CCCCCC"> that the absolute</font>

367
00:19:30,740 --> 00:19:37,519
value<font color="#E5E5E5"> of individual sensors varies</font>

368
00:19:33,740 --> 00:19:41,360
considerably<font color="#CCCCCC"> the minimum for bits</font><font color="#E5E5E5"> 1 & 2</font>

369
00:19:37,519 --> 00:19:46,220
are around 200 while the maximum<font color="#CCCCCC"> for</font>

370
00:19:41,360 --> 00:19:48,529
bits 0<font color="#CCCCCC"> & 4</font><font color="#E5E5E5"> is around 100 this is because</font>

371
00:19:46,220 --> 00:19:51,289
of stray illumination<font color="#E5E5E5"> from neighboring</font>

372
00:19:48,529 --> 00:19:53,269
LEDs meaning that<font color="#CCCCCC"> census with two</font>

373
00:19:51,289 --> 00:19:56,799
neighbors generally get more light<font color="#E5E5E5"> and</font>

374
00:19:53,269 --> 00:19:59,570
so<font color="#CCCCCC"> will show a load low of reading</font>

375
00:19:56,799 --> 00:20:02,000
finally<font color="#E5E5E5"> notice that</font><font color="#CCCCCC"> the ice bucket</font>

376
00:19:59,570 --> 00:20:04,879
signal has got a smaller range than<font color="#CCCCCC"> the</font>

377
00:20:02,000 --> 00:20:14,779
other pins<font color="#E5E5E5"> since</font><font color="#CCCCCC"> its dark holes are</font>

378
00:20:04,879 --> 00:20:17,570
smaller central to our<font color="#E5E5E5"> approach we will</font>

379
00:20:14,779 --> 00:20:20,389
<font color="#E5E5E5">be detecting the sprocket</font><font color="#CCCCCC"> holes we can't</font>

380
00:20:17,570 --> 00:20:23,809
use absolute values<font color="#CCCCCC"> so instead we will</font>

381
00:20:20,389 --> 00:20:26,389
look for minima in the signal we need to

382
00:20:23,809 --> 00:20:29,629
avoid random<font color="#E5E5E5"> small minima which</font><font color="#CCCCCC"> occur</font>

383
00:20:26,389 --> 00:20:32,870
<font color="#E5E5E5">during the</font><font color="#CCCCCC"> feeding period however we can</font>

384
00:20:29,629 --> 00:20:35,870
see<font color="#E5E5E5"> that the real minima are preceded</font><font color="#CCCCCC"> by</font>

385
00:20:32,870 --> 00:20:38,949
a very fast change in speed<font color="#E5E5E5"> in signal</font>

386
00:20:35,870 --> 00:20:42,199
<font color="#CCCCCC">value a steep slope</font><font color="#E5E5E5"> on the graph</font>

387
00:20:38,950 --> 00:20:47,509
something<font color="#E5E5E5"> that does not occur much with</font>

388
00:20:42,200 --> 00:20:51,289
noise<font color="#CCCCCC"> a brief diversion into</font><font color="#E5E5E5"> calculating</font>

389
00:20:47,509 --> 00:20:53,840
the rate of change<font color="#E5E5E5"> of a signal this is</font>

390
00:20:51,289 --> 00:20:56,840
<font color="#CCCCCC">the</font><font color="#E5E5E5"> slope of the graph at any one point</font>

391
00:20:53,840 --> 00:20:59,559
<font color="#E5E5E5">if we had a continuous function we would</font>

392
00:20:56,840 --> 00:21:02,658
just<font color="#E5E5E5"> use the derivative</font><font color="#CCCCCC"> of the function</font>

393
00:20:59,559 --> 00:21:06,620
however<font color="#E5E5E5"> in this case we</font><font color="#CCCCCC"> have a discrete</font>

394
00:21:02,659 --> 00:21:09,620
data points<font color="#CCCCCC"> so we can measure</font><font color="#E5E5E5"> how much</font>

395
00:21:06,620 --> 00:21:15,979
<font color="#CCCCCC">the signal value changes over time with</font>

396
00:21:09,620 --> 00:21:19,100
each step Delta X divided<font color="#CCCCCC"> by delta T for</font>

397
00:21:15,980 --> 00:21:22,490
adjacent<font color="#E5E5E5"> points</font><font color="#CCCCCC"> we must just subtract</font>

398
00:21:19,100 --> 00:21:26,259
signal valleys<font color="#E5E5E5"> and time values to yield</font>

399
00:21:22,490 --> 00:21:26,259
<font color="#E5E5E5">Delta X and delta T</font>

400
00:21:26,890 --> 00:21:32,210
however we know that the delta<font color="#E5E5E5"> T will</font>

401
00:21:29,900 --> 00:21:36,620
always be the same<font color="#E5E5E5"> since we</font><font color="#CCCCCC"> are set</font>

402
00:21:32,210 --> 00:21:40,130
sampling at 200 Hertz<font color="#E5E5E5"> we will be it will</font>

403
00:21:36,620 --> 00:21:43,810
<font color="#CCCCCC">be 5</font><font color="#E5E5E5"> milliseconds we could just divide</font>

404
00:21:40,130 --> 00:21:45,200
all the<font color="#CCCCCC"> delta x values by a constant</font>

405
00:21:43,810 --> 00:21:49,190
0.005

406
00:21:45,200 --> 00:21:51,590
however the absolute date<font color="#E5E5E5"> value for</font>

407
00:21:49,190 --> 00:21:56,300
rates of<font color="#E5E5E5"> change of signal doesn't matter</font>

408
00:21:51,590 --> 00:21:59,659
<font color="#E5E5E5">just</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is consistent so</font><font color="#CCCCCC"> we can</font>

409
00:21:56,300 --> 00:22:02,720
<font color="#E5E5E5">just ignore the</font><font color="#CCCCCC"> the division and use the</font>

410
00:21:59,660 --> 00:22:05,060
<font color="#E5E5E5">Delta</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> value directly but missing that</font>

411
00:22:02,720 --> 00:22:10,340
<font color="#CCCCCC">the division will also make the</font>

412
00:22:05,060 --> 00:22:13,159
computation<font color="#E5E5E5"> much quicker calculating</font>

413
00:22:10,340 --> 00:22:16,639
slopes in this way<font color="#E5E5E5"> the</font><font color="#CCCCCC"> liens on having a</font>

414
00:22:13,160 --> 00:22:19,370
reasonably smooth signal taking a<font color="#E5E5E5"> close</font>

415
00:22:16,640 --> 00:22:21,940
<font color="#E5E5E5">up look</font><font color="#CCCCCC"> at part of</font><font color="#E5E5E5"> the sprocket signal</font>

416
00:22:19,370 --> 00:22:25,370
we can<font color="#CCCCCC"> see that this is not the case</font>

417
00:22:21,940 --> 00:22:29,300
<font color="#E5E5E5">random variation in the</font><font color="#CCCCCC"> senses</font><font color="#E5E5E5"> makes for</font>

418
00:22:25,370 --> 00:22:31,699
some roughness<font color="#CCCCCC"> the solution is</font>

419
00:22:29,300 --> 00:22:34,430
exponential smoothing<font color="#CCCCCC"> where we can</font>

420
00:22:31,700 --> 00:22:37,010
combine<font color="#CCCCCC"> 1/5 of the current</font><font color="#E5E5E5"> sensor value</font>

421
00:22:34,430 --> 00:22:42,380
with<font color="#CCCCCC"> four-fifths of the previous sensor</font>

422
00:22:37,010 --> 00:22:45,170
value the<font color="#E5E5E5"> result is a smooth signal will</font>

423
00:22:42,380 --> 00:22:48,050
get more<font color="#E5E5E5"> reliable slope estimates which</font>

424
00:22:45,170 --> 00:22:50,720
is good but<font color="#CCCCCC"> at the expense of us</font>

425
00:22:48,050 --> 00:22:55,060
reducing the peaks and<font color="#E5E5E5"> troughs</font><font color="#CCCCCC"> we wish</font>

426
00:22:50,720 --> 00:22:57,620
to detect which is not so good

427
00:22:55,060 --> 00:23:01,159
completing the<font color="#CCCCCC"> dowsers for the 5 data</font>

428
00:22:57,620 --> 00:23:04,129
<font color="#CCCCCC">falls and the spa castle we see two</font>

429
00:23:01,160 --> 00:23:07,630
<font color="#E5E5E5">useful properties first of all they are</font>

430
00:23:04,130 --> 00:23:10,220
<font color="#CCCCCC">all</font><font color="#E5E5E5"> centered around the same value 0</font>

431
00:23:07,630 --> 00:23:12,620
<font color="#CCCCCC">secondly there is</font><font color="#E5E5E5"> a clear distinction</font>

432
00:23:10,220 --> 00:23:18,590
between noise which<font color="#CCCCCC"> has small</font><font color="#E5E5E5"> Delta's</font>

433
00:23:12,620 --> 00:23:21,080
<font color="#E5E5E5">and signal which has large Delta's since</font>

434
00:23:18,590 --> 00:23:23,959
finding<font color="#E5E5E5"> the spa castle is central to</font>

435
00:23:21,080 --> 00:23:26,960
<font color="#E5E5E5">reading the tape we will look at that in</font>

436
00:23:23,960 --> 00:23:29,960
more detail here<font color="#E5E5E5"> as part of the sprocket</font>

437
00:23:26,960 --> 00:23:34,090
signal as we come to the<font color="#E5E5E5"> end of the feed</font>

438
00:23:29,960 --> 00:23:34,090
<font color="#E5E5E5">and tape and see the first few holes</font>

439
00:23:34,190 --> 00:23:44,130
the dulcis show the minima and<font color="#E5E5E5"> Maxima</font>

440
00:23:37,679 --> 00:23:46,320
<font color="#E5E5E5">where the line crosses zero then we are</font>

441
00:23:44,130 --> 00:23:49,130
<font color="#CCCCCC">interested in transitions from negative</font>

442
00:23:46,320 --> 00:23:52,830
to positive<font color="#CCCCCC"> since these will be minima</font>

443
00:23:49,130 --> 00:23:55,799
this is dark<font color="#E5E5E5"> that is dark holes on the</font>

444
00:23:52,830 --> 00:23:58,350
paper tape<font color="#E5E5E5"> however</font><font color="#CCCCCC"> we also get a number</font>

445
00:23:55,799 --> 00:24:02,700
<font color="#CCCCCC">of</font><font color="#E5E5E5"> these in the noise period and the</font>

446
00:23:58,350 --> 00:24:05,158
<font color="#CCCCCC">start</font><font color="#E5E5E5"> of the tape we now look at the</font>

447
00:24:02,700 --> 00:24:08,659
minimum<font color="#E5E5E5"> Delta achieved since the last</font>

448
00:24:05,159 --> 00:24:12,600
minimum to see if this is<font color="#CCCCCC"> a real signal</font>

449
00:24:08,659 --> 00:24:15,000
the blue line traces this value which

450
00:24:12,600 --> 00:24:18,029
resets<font color="#CCCCCC"> us there each time</font><font color="#E5E5E5"> we encounter a</font>

451
00:24:15,000 --> 00:24:21,539
minimum we can<font color="#E5E5E5"> see that the noise for</font>

452
00:24:18,029 --> 00:24:24,539
each value<font color="#E5E5E5"> never goes below minus</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> well</font>

453
00:24:21,539 --> 00:24:27,090
the real signals both for the real

454
00:24:24,539 --> 00:24:29,789
signals the value is<font color="#E5E5E5"> always less</font><font color="#CCCCCC"> than</font>

455
00:24:27,090 --> 00:24:31,789
<font color="#CCCCCC">minus wife choosing a class</font><font color="#E5E5E5"> of point in</font>

456
00:24:29,789 --> 00:24:35,070
the middle<font color="#E5E5E5"> minus 3.5</font>

457
00:24:31,789 --> 00:24:37,799
allows us<font color="#E5E5E5"> to simply distinguish signal</font>

458
00:24:35,070 --> 00:24:43,649
<font color="#E5E5E5">from noise</font><font color="#CCCCCC"> and we can see</font><font color="#E5E5E5"> that we have</font>

459
00:24:37,799 --> 00:24:45,629
<font color="#E5E5E5">found four sprocket holes we now have</font>

460
00:24:43,649 --> 00:24:49,139
<font color="#CCCCCC">everything we need</font><font color="#E5E5E5"> to determine if data</font>

461
00:24:45,630 --> 00:24:55,289
bits are set this is the<font color="#E5E5E5"> dowsers for the</font>

462
00:24:49,140 --> 00:24:58,529
sensor for<font color="#E5E5E5"> data bit</font><font color="#CCCCCC"> too we overlay the</font>

463
00:24:55,289 --> 00:25:01,140
<font color="#E5E5E5">sprocket signal with the Delta each time</font>

464
00:24:58,529 --> 00:25:03,510
we<font color="#E5E5E5"> found a sprocket all we look to see</font>

465
00:25:01,140 --> 00:25:07,409
whether the Delta for the date a bit too

466
00:25:03,510 --> 00:25:10,710
<font color="#E5E5E5">has gone below minus 3.5 since the last</font>

467
00:25:07,409 --> 00:25:16,470
<font color="#E5E5E5">pocket minimum if it has we have</font><font color="#CCCCCC"> a dark</font>

468
00:25:10,710 --> 00:25:19,590
hole<font color="#E5E5E5"> and if not we don't we see that for</font>

469
00:25:16,470 --> 00:25:23,760
data bit<font color="#CCCCCC"> too</font><font color="#E5E5E5"> we have a sequence of four</font>

470
00:25:19,590 --> 00:25:26,820
zeros for<font color="#CCCCCC"> ones</font><font color="#E5E5E5"> four zeros for ones four</font>

471
00:25:23,760 --> 00:25:32,760
zeros for ones or zeros<font color="#E5E5E5"> then nine months</font>

472
00:25:26,820 --> 00:25:35,879
<font color="#CCCCCC">and so on</font><font color="#E5E5E5"> looking better looking back at</font>

473
00:25:32,760 --> 00:25:39,059
our original<font color="#CCCCCC"> oscilloscope image we see</font>

474
00:25:35,880 --> 00:25:42,539
that<font color="#CCCCCC"> s</font><font color="#E5E5E5"> is identical we have a reliable</font>

475
00:25:39,059 --> 00:25:45,180
<font color="#CCCCCC">if relatively slow paper tape reader</font><font color="#E5E5E5"> it</font>

476
00:25:42,539 --> 00:25:47,940
is<font color="#E5E5E5"> simply a master to drive the values</font>

477
00:25:45,180 --> 00:25:51,900
so the<font color="#CCCCCC"> Arduino pin digital pins</font><font color="#E5E5E5"> by a</font>

478
00:25:47,940 --> 00:25:54,840
<font color="#CCCCCC">5-volt to 3.3 volts converter</font><font color="#E5E5E5"> and into</font>

479
00:25:51,900 --> 00:25:58,170
the EDSAC<font color="#E5E5E5"> running on the</font><font color="#CCCCCC"> my stone board</font>

480
00:25:54,840 --> 00:26:01,110
<font color="#E5E5E5">in fact it's so simple that we haven't</font>

481
00:25:58,170 --> 00:26:06,840
actually yet done it<font color="#CCCCCC"> so that will be the</font>

482
00:26:01,110 --> 00:26:08,790
<font color="#CCCCCC">subject of a future talk my assistant</font>

483
00:26:06,840 --> 00:26:12,800
will now give a<font color="#CCCCCC"> demonstration of the</font>

484
00:26:08,790 --> 00:26:12,800
paper tape reader<font color="#CCCCCC"> inoculation</font>

485
00:26:31,470 --> 00:26:36,419
the paper tape contains<font color="#CCCCCC"> the single</font>

486
00:26:34,200 --> 00:26:40,559
binary coding of<font color="#E5E5E5"> the numbers 0 through</font>

487
00:26:36,419 --> 00:26:43,080
31<font color="#CCCCCC"> and some</font><font color="#E5E5E5"> random values to represent</font><font color="#CCCCCC"> a</font>

488
00:26:40,559 --> 00:26:46,678
program each time a<font color="#CCCCCC"> character is read</font>

489
00:26:43,080 --> 00:26:49,379
the signal<font color="#E5E5E5"> LED will flash and since this</font>

490
00:26:46,679 --> 00:26:51,149
is for<font color="#E5E5E5"> demonstration purposes the value</font>

491
00:26:49,379 --> 00:26:54,120
<font color="#CCCCCC">read will be displayed on the</font><font color="#E5E5E5"> Arduino</font>

492
00:26:51,149 --> 00:26:55,768
serial monitor<font color="#E5E5E5"> for those of you at the</font>

493
00:26:54,120 --> 00:26:57,959
front<font color="#E5E5E5"> you</font><font color="#CCCCCC"> may be able to see those</font>

494
00:26:55,769 --> 00:27:00,779
<font color="#E5E5E5">values but the for those of you at the</font>

495
00:26:57,960 --> 00:27:06,059
back we<font color="#CCCCCC"> have printed out this</font><font color="#E5E5E5"> on screen</font>

496
00:27:00,779 --> 00:27:08,879
<font color="#CCCCCC">a 3d printed case was used to minimize</font>

497
00:27:06,059 --> 00:27:10,889
the amount of background<font color="#E5E5E5"> light entering</font>

498
00:27:08,879 --> 00:27:13,980
<font color="#CCCCCC">the chamber where the holes were</font><font color="#E5E5E5"> being</font>

499
00:27:10,889 --> 00:27:17,039
sensed the printer used was a purser

500
00:27:13,980 --> 00:27:20,759
<font color="#CCCCCC">Mendel</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> map</font><font color="#E5E5E5"> and the components were</font>

501
00:27:17,039 --> 00:27:23,639
designed using<font color="#CCCCCC"> openscad written by</font>

502
00:27:20,759 --> 00:27:26,789
<font color="#E5E5E5">Clifford wolf whose</font><font color="#CCCCCC"> program took</font>

503
00:27:23,639 --> 00:27:30,389
approach makes accurate shape design

504
00:27:26,789 --> 00:27:33,149
<font color="#E5E5E5">easy the paper tape reader uses a rubber</font>

505
00:27:30,389 --> 00:27:36,500
wheel on a motor to pull the tape under

506
00:27:33,149 --> 00:27:39,539
an array of light dependent resistors

507
00:27:36,500 --> 00:27:42,990
the signals are then processed<font color="#E5E5E5"> by an</font>

508
00:27:39,539 --> 00:27:44,789
Arduino<font color="#CCCCCC"> a switch and a button on the</font><font color="#E5E5E5"> top</font>

509
00:27:42,990 --> 00:27:48,059
<font color="#E5E5E5">allowed the paper tape to be pulled</font>

510
00:27:44,789 --> 00:27:54,690
through in either direction<font color="#E5E5E5"> with a read</font>

511
00:27:48,059 --> 00:27:57,539
speed of around<font color="#E5E5E5"> ten mohs per second the</font>

512
00:27:54,690 --> 00:28:00,240
wavelength emitted by the LED is chosen

513
00:27:57,539 --> 00:28:03,649
<font color="#CCCCCC">to match the maximum sensitivity of the</font>

514
00:28:00,240 --> 00:28:09,049
light<font color="#E5E5E5"> dependent resistor in this case</font>

515
00:28:03,649 --> 00:28:09,049
550 nanometer green light

516
00:28:18,590 --> 00:28:31,340
<font color="#E5E5E5">oh no no</font><font color="#CCCCCC"> sorry got a bit confused I'm</font>

517
00:28:28,970 --> 00:28:33,350
now going to<font color="#E5E5E5"> look at how we recreated</font>

518
00:28:31,340 --> 00:28:37,158
the delay lines using

519
00:28:33,350 --> 00:28:40,158
<font color="#CCCCCC">edsac</font><font color="#E5E5E5"> the original</font><font color="#CCCCCC"> EDSAC delay lines use</font>

520
00:28:37,159 --> 00:28:43,100
sound to store data bits in a loop<font color="#CCCCCC"> lucas</font>

521
00:28:40,159 --> 00:28:45,409
sound is slower than electricity<font color="#CCCCCC"> many</font>

522
00:28:43,100 --> 00:28:48,760
bits can<font color="#E5E5E5"> be stored as sound forces in a</font>

523
00:28:45,409 --> 00:28:51,350
relatively short tube<font color="#E5E5E5"> piezoelectric</font>

524
00:28:48,760 --> 00:28:54,020
transducers were used to<font color="#E5E5E5"> generate the</font>

525
00:28:51,350 --> 00:28:57,080
sound pulses at one end<font color="#E5E5E5"> and convert them</font>

526
00:28:54,020 --> 00:28:58,960
back<font color="#E5E5E5"> to digital signals at the other the</font>

527
00:28:57,080 --> 00:29:01,639
delay lines were filled with<font color="#CCCCCC"> mercury</font>

528
00:28:58,960 --> 00:29:04,399
because the acoustic impedances of

529
00:29:01,640 --> 00:29:06,130
<font color="#E5E5E5">mercury are almost exactly</font><font color="#CCCCCC"> the same</font><font color="#E5E5E5"> as</font>

530
00:29:04,399 --> 00:29:10,010
<font color="#E5E5E5">that</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the piezoelectric</font><font color="#CCCCCC"> a</font>

531
00:29:06,130 --> 00:29:13,850
piezoelectric crystals this<font color="#E5E5E5"> minimized</font>

532
00:29:10,010 --> 00:29:17,000
<font color="#E5E5E5">energy loss and echoes large transducers</font>

533
00:29:13,850 --> 00:29:19,789
were used to create<font color="#E5E5E5"> a very thin beam of</font>

534
00:29:17,000 --> 00:29:23,809
sound<font color="#E5E5E5"> and avoided echoes from</font><font color="#CCCCCC"> the size</font>

535
00:29:19,789 --> 00:29:25,700
of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> tube but to get the acoustic</font>

536
00:29:23,809 --> 00:29:28,220
impedances<font color="#CCCCCC"> to match as closely as</font>

537
00:29:25,700 --> 00:29:30,350
possible<font color="#CCCCCC"> the mercury had to be kept at a</font>

538
00:29:28,220 --> 00:29:33,770
constant temperature of 40 degrees

539
00:29:30,350 --> 00:29:37,730
<font color="#E5E5E5">Celsius this maid service in the tubes</font>

540
00:29:33,770 --> 00:29:40,429
<font color="#E5E5E5">hot and uncomfortable work the</font>

541
00:29:37,730 --> 00:29:43,610
piezoelectric transducers operated at

542
00:29:40,429 --> 00:29:49,340
500 kilohertz<font color="#E5E5E5"> the speed of sound</font><font color="#CCCCCC"> and</font>

543
00:29:43,610 --> 00:29:53,178
mercury is around about<font color="#E5E5E5"> 1450 kilo meters</font>

544
00:29:49,340 --> 00:29:59,510
per second<font color="#CCCCCC"> so no 5 foot tube</font><font color="#E5E5E5"> they could</font>

545
00:29:53,179 --> 00:30:01,820
store 512 bits hot mercury is<font color="#CCCCCC"> not the</font>

546
00:29:59,510 --> 00:30:04,220
<font color="#E5E5E5">most</font><font color="#CCCCCC"> suitable for fluid for schools to</font>

547
00:30:01,820 --> 00:30:08,389
<font color="#E5E5E5">obtain and</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> what should we use</font>

548
00:30:04,220 --> 00:30:11,179
instead<font color="#CCCCCC"> Alan Turing was</font><font color="#E5E5E5"> involved in</font>

549
00:30:08,390 --> 00:30:13,850
design discussions for<font color="#CCCCCC"> edsac</font><font color="#E5E5E5"> and was</font>

550
00:30:11,179 --> 00:30:16,789
alert to the change challenges of<font color="#E5E5E5"> using</font>

551
00:30:13,850 --> 00:30:20,149
mercury<font color="#E5E5E5"> he advocated the use of</font><font color="#CCCCCC"> gin</font>

552
00:30:16,789 --> 00:30:22,309
which he said had alcohol<font color="#E5E5E5"> and</font><font color="#CCCCCC"> water in</font>

553
00:30:20,149 --> 00:30:24,350
just<font color="#E5E5E5"> the right proportions to give a</font>

554
00:30:22,309 --> 00:30:26,600
zero temperature coefficient<font color="#CCCCCC"> of</font>

555
00:30:24,350 --> 00:30:29,379
propagation velocity at noon tape

556
00:30:26,600 --> 00:30:29,379
temperature

557
00:30:29,470 --> 00:30:35,710
but enough<font color="#E5E5E5"> gin to</font><font color="#CCCCCC"> fill even a modest</font>

558
00:30:32,650 --> 00:30:40,200
tube is still quite expensive<font color="#CCCCCC"> so how</font>

559
00:30:35,710 --> 00:30:42,750
<font color="#CCCCCC">about wine also be really cheap beer</font>

560
00:30:40,200 --> 00:30:48,130
<font color="#E5E5E5">well since we are targeting schools</font>

561
00:30:42,750 --> 00:30:51,840
perhaps<font color="#E5E5E5"> Pepsi is more suitable but for</font>

562
00:30:48,130 --> 00:30:55,059
all these getting<font color="#E5E5E5"> good fluid seals and</font>

563
00:30:51,840 --> 00:31:01,780
waterproof components<font color="#E5E5E5"> was a bit of a</font>

564
00:30:55,059 --> 00:31:04,629
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> in the end we chose</font><font color="#E5E5E5"> air for a</font>

565
00:31:01,780 --> 00:31:08,110
number<font color="#CCCCCC"> of reasons firstly it came ready</font>

566
00:31:04,630 --> 00:31:10,200
<font color="#CCCCCC">packaged with</font><font color="#E5E5E5"> the tube secondly if you</font>

567
00:31:08,110 --> 00:31:13,090
spill sir it didn't<font color="#E5E5E5"> make a mess and</font>

568
00:31:10,200 --> 00:31:15,880
thirdly the speed of sound<font color="#E5E5E5"> is quite low</font>

569
00:31:13,090 --> 00:31:19,379
through air<font color="#CCCCCC"> so you can</font><font color="#E5E5E5"> operate that</font><font color="#CCCCCC"> or</font>

570
00:31:15,880 --> 00:31:22,809
audible frequencies piezoelectric

571
00:31:19,380 --> 00:31:25,780
transducers<font color="#E5E5E5"> and receivers are very very</font>

572
00:31:22,809 --> 00:31:28,600
expensive<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> replaced</font><font color="#E5E5E5"> by a normal</font>

573
00:31:25,780 --> 00:31:31,510
speaker<font color="#E5E5E5"> and microphone which yielded a</font>

574
00:31:28,600 --> 00:31:32,250
delay line which could<font color="#E5E5E5"> hold up to</font><font color="#CCCCCC"> 49</font>

575
00:31:31,510 --> 00:31:35,580
bits

576
00:31:32,250 --> 00:31:38,980
however we found<font color="#CCCCCC"> reflections and echoes</font>

577
00:31:35,580 --> 00:31:44,020
mean that even<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 10 bit word would</font>

578
00:31:38,980 --> 00:31:46,210
degenerate quite quickly<font color="#E5E5E5"> to</font><font color="#CCCCCC"> minimize the</font>

579
00:31:44,020 --> 00:31:48,370
harmful echoes with also be using

580
00:31:46,210 --> 00:31:51,490
parabolic mirrors<font color="#E5E5E5"> at each end of the</font>

581
00:31:48,370 --> 00:31:55,479
tube<font color="#E5E5E5"> the speaker and microphone</font><font color="#CCCCCC"> faced</font>

582
00:31:51,490 --> 00:31:58,830
their respective<font color="#E5E5E5"> Miller when the speaker</font>

583
00:31:55,480 --> 00:32:02,230
admits a sound reflects off<font color="#E5E5E5"> its mirror</font>

584
00:31:58,830 --> 00:32:05,049
which focuses the sound in the other end

585
00:32:02,230 --> 00:32:08,400
of the tube<font color="#E5E5E5"> where parabolic</font><font color="#CCCCCC"> mirror</font>

586
00:32:05,049 --> 00:32:11,860
focuses the sound on the microphone

587
00:32:08,400 --> 00:32:14,890
state stray reflections are minimized

588
00:32:11,860 --> 00:32:19,240
<font color="#CCCCCC">and being at</font><font color="#E5E5E5"> the wrong angle</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font>

589
00:32:14,890 --> 00:32:21,370
focused on the microphone in any way but

590
00:32:19,240 --> 00:32:24,340
in the<font color="#CCCCCC"> end just stuffing</font><font color="#E5E5E5"> the ends with</font>

591
00:32:21,370 --> 00:32:28,899
acoustic foam<font color="#E5E5E5"> seemed to work</font><font color="#CCCCCC"> really well</font>

592
00:32:24,340 --> 00:32:31,750
<font color="#E5E5E5">in a quiet</font><font color="#CCCCCC"> office the microphone is</font>

593
00:32:28,900 --> 00:32:35,169
connected<font color="#E5E5E5"> to ground</font><font color="#CCCCCC"> via pull-up resistor</font>

594
00:32:31,750 --> 00:32:37,990
but needs<font color="#E5E5E5"> amplification and filtering</font><font color="#CCCCCC"> so</font>

595
00:32:35,169 --> 00:32:40,730
it can be passed to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Arduino as a</font>

596
00:32:37,990 --> 00:32:43,370
square wave<font color="#CCCCCC"> I used as</font>

597
00:32:40,730 --> 00:32:46,850
simple circuit based on a<font color="#E5E5E5"> standard audio</font>

598
00:32:43,370 --> 00:32:51,159
<font color="#E5E5E5">amplifier chip with a variable resistor</font>

599
00:32:46,850 --> 00:32:54,260
<font color="#E5E5E5">used to control</font><font color="#CCCCCC"> the volume</font><font color="#E5E5E5"> of the signal</font>

600
00:32:51,160 --> 00:32:59,660
the whole circuit fits easily<font color="#E5E5E5"> on a</font>

601
00:32:54,260 --> 00:33:01,910
standard strip board the yellow line is

602
00:32:59,660 --> 00:33:04,850
the<font color="#E5E5E5"> output straight from the microphone</font>

603
00:33:01,910 --> 00:33:07,850
<font color="#E5E5E5">and the yellow line and the blue line is</font>

604
00:33:04,850 --> 00:33:11,209
<font color="#CCCCCC">the output from</font><font color="#E5E5E5"> the amplifier signal the</font>

605
00:33:07,850 --> 00:33:14,449
blue line is all times larger than the

606
00:33:11,210 --> 00:33:16,780
<font color="#E5E5E5">yellow line per division</font><font color="#CCCCCC"> as you can see</font>

607
00:33:14,450 --> 00:33:19,820
there's a large change in<font color="#CCCCCC"> amplitude</font>

608
00:33:16,780 --> 00:33:25,399
<font color="#E5E5E5">yielding a clean digital signal for the</font>

609
00:33:19,820 --> 00:33:28,040
Arduino on the speaker side the circus

610
00:33:25,400 --> 00:33:30,559
is a lot smaller<font color="#E5E5E5"> to prevent damaging the</font>

611
00:33:28,040 --> 00:33:32,990
speaker<font color="#E5E5E5"> all the Arduino the</font><font color="#CCCCCC"> speaker's</font>

612
00:33:30,559 --> 00:33:36,470
output resistance must<font color="#E5E5E5"> match the</font><font color="#CCCCCC"> input</font>

613
00:33:32,990 --> 00:33:38,140
resistance<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the Arduino the output</font>

614
00:33:36,470 --> 00:33:41,450
<font color="#E5E5E5">resistance is 8 ohms</font>

615
00:33:38,140 --> 00:33:45,530
hence<font color="#CCCCCC"> a</font><font color="#E5E5E5"> standard 10 ohm resistor is</font>

616
00:33:41,450 --> 00:33:49,250
close enough<font color="#E5E5E5"> my assistant will now</font>

617
00:33:45,530 --> 00:33:51,740
demonstrate the air delay line the delay

618
00:33:49,250 --> 00:33:53,419
<font color="#CCCCCC">line will put repeats a</font><font color="#E5E5E5"> pass in twice to</font>

619
00:33:51,740 --> 00:33:56,929
<font color="#E5E5E5">make sure that the tube has</font><font color="#CCCCCC"> been filled</font>

620
00:33:53,419 --> 00:33:59,179
<font color="#E5E5E5">with information after 10 loops the</font>

621
00:33:56,929 --> 00:34:02,299
<font color="#CCCCCC">pattern of the pattern there will be a</font>

622
00:33:59,179 --> 00:34:05,540
pause<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is where this</font><font color="#E5E5E5"> is to clear the</font>

623
00:34:02,299 --> 00:34:08,000
<font color="#E5E5E5">echoes and</font><font color="#CCCCCC"> the tube</font><font color="#E5E5E5"> the pass</font><font color="#CCCCCC"> in is a 10</font>

624
00:34:05,540 --> 00:34:11,350
bit<font color="#CCCCCC"> binary number in decimal</font>

625
00:34:08,000 --> 00:34:11,350
this is 592

626
00:34:15,000 --> 00:34:20,679
you'll<font color="#CCCCCC"> hear a bleep</font><font color="#E5E5E5"> for everyone and</font>

627
00:34:17,800 --> 00:34:25,480
<font color="#CCCCCC">silence forever reserved if the</font>

628
00:34:20,679 --> 00:34:27,009
microphone works the repeating pattern

629
00:34:25,480 --> 00:34:29,650
is not<font color="#E5E5E5"> always the same</font>

630
00:34:27,010 --> 00:34:32,380
due to<font color="#CCCCCC"> echos and other sounds outside</font>

631
00:34:29,650 --> 00:34:37,389
<font color="#E5E5E5">the tube sometimes the first repeated</font>

632
00:34:32,380 --> 00:34:41,560
pattern is<font color="#CCCCCC"> very similar if you want to</font>

633
00:34:37,389 --> 00:34:43,960
hear the<font color="#CCCCCC"> Toobin a bit louder</font><font color="#E5E5E5"> once this</font>

634
00:34:41,560 --> 00:34:49,659
is all done<font color="#CCCCCC"> come</font><font color="#E5E5E5"> forward and we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> show</font>

635
00:34:43,960 --> 00:34:52,179
<font color="#E5E5E5">it to you again these peripherals are</font>

636
00:34:49,659 --> 00:34:54,699
meant for education<font color="#E5E5E5"> so the best way to</font>

637
00:34:52,179 --> 00:34:57,490
use them was to run a tutorial course

638
00:34:54,699 --> 00:35:00,759
<font color="#E5E5E5">and include them as a resource last</font>

639
00:34:57,490 --> 00:35:03,669
September<font color="#E5E5E5"> Lehman Japan</font><font color="#CCCCCC"> a two and</font><font color="#E5E5E5"> a half</font>

640
00:35:00,760 --> 00:35:06,670
day<font color="#E5E5E5"> introduction to</font><font color="#CCCCCC"> bariloche using my</font>

641
00:35:03,670 --> 00:35:09,250
stone boards and the<font color="#CCCCCC"> osis tool</font><font color="#E5E5E5"> chain it</font>

642
00:35:06,670 --> 00:35:12,430
<font color="#E5E5E5">coincided with the 60th</font><font color="#CCCCCC"> anniversary of</font>

643
00:35:09,250 --> 00:35:16,060
the British Computer<font color="#CCCCCC"> Society which was</font>

644
00:35:12,430 --> 00:35:19,149
founded by<font color="#E5E5E5"> Maurice Wilkes but</font><font color="#CCCCCC"> this with</font>

645
00:35:16,060 --> 00:35:21,220
support from the<font color="#E5E5E5"> BCS the event was</font>

646
00:35:19,150 --> 00:35:25,060
<font color="#E5E5E5">organized for 80 students and hobbyists</font>

647
00:35:21,220 --> 00:35:28,990
<font color="#E5E5E5">by the</font><font color="#CCCCCC"> open source specialist group</font><font color="#E5E5E5"> from</font>

648
00:35:25,060 --> 00:35:32,830
the BCS<font color="#CCCCCC"> and the UK Kant's of a computer</font>

649
00:35:28,990 --> 00:35:36,279
conservation society the course combined

650
00:35:32,830 --> 00:35:36,759
<font color="#E5E5E5">introductory talks on FPGA design using</font>

651
00:35:36,280 --> 00:35:40,770
<font color="#E5E5E5">Verilog</font>

652
00:35:36,760 --> 00:35:43,240
<font color="#CCCCCC">with talks on the history of edsac</font>

653
00:35:40,770 --> 00:35:45,759
<font color="#E5E5E5">students were encouraged</font><font color="#CCCCCC"> to bring up the</font>

654
00:35:43,240 --> 00:35:48,700
EDSAC designs and interface them with

655
00:35:45,760 --> 00:35:51,220
one<font color="#CCCCCC"> of the peripherals</font><font color="#E5E5E5"> much of the</font>

656
00:35:48,700 --> 00:35:56,350
<font color="#CCCCCC">material I</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> demonstrated today came</font>

657
00:35:51,220 --> 00:36:00,669
<font color="#E5E5E5">from that</font><font color="#CCCCCC"> workshop in summary edsac was</font>

658
00:35:56,350 --> 00:36:02,920
first one in May 1949 it was one of<font color="#CCCCCC"> the</font>

659
00:36:00,670 --> 00:36:05,650
first general-purpose computers to be

660
00:36:02,920 --> 00:36:08,460
<font color="#E5E5E5">used and was open for the University</font><font color="#CCCCCC"> of</font>

661
00:36:05,650 --> 00:36:12,370
Cambridge students and researchers

662
00:36:08,460 --> 00:36:15,070
<font color="#E5E5E5">racing forward</font><font color="#CCCCCC"> to 2017 mezack has been</font>

663
00:36:12,370 --> 00:36:18,069
reimagined as an<font color="#CCCCCC"> open source</font><font color="#E5E5E5"> educational</font>

664
00:36:15,070 --> 00:36:21,280
project<font color="#E5E5E5"> for schools and hobbyists</font><font color="#CCCCCC"> it</font>

665
00:36:18,070 --> 00:36:22,900
<font color="#E5E5E5">uses three physical peripherals</font><font color="#CCCCCC"> and an</font>

666
00:36:21,280 --> 00:36:24,920
air delay line to aid

667
00:36:22,900 --> 00:36:29,450
understanding the key parts of<font color="#E5E5E5"> the</font>

668
00:36:24,920 --> 00:36:31,700
original<font color="#CCCCCC"> EDSAC I should like</font><font color="#E5E5E5"> to thank</font>

669
00:36:29,450 --> 00:36:33,799
the<font color="#CCCCCC"> International open source team who</font>

670
00:36:31,700 --> 00:36:37,640
helped me put together<font color="#E5E5E5"> the reimagined</font>

671
00:36:33,799 --> 00:36:38,960
<font color="#CCCCCC">EDSAC</font><font color="#E5E5E5"> Allenwood and</font><font color="#CCCCCC"> ken bouck</font><font color="#E5E5E5"> who</font>

672
00:36:37,640 --> 00:36:43,629
created the my storm

673
00:36:38,960 --> 00:36:47,569
<font color="#E5E5E5">Clifford wolf who created Yosef and</font>

674
00:36:43,630 --> 00:36:51,440
<font color="#E5E5E5">openscad Bill Purvis and Haslam conch</font>

675
00:36:47,569 --> 00:36:54,369
<font color="#CCCCCC">Waller who created ed suck</font><font color="#E5E5E5"> the new</font>

676
00:36:51,440 --> 00:36:57,319
<font color="#CCCCCC">conversa</font><font color="#E5E5E5"> dead sack into my</font><font color="#CCCCCC"> belly log</font>

677
00:36:54,369 --> 00:36:59,869
<font color="#E5E5E5">dango ang and Peter Bennett who designed</font>

678
00:36:57,319 --> 00:37:01,670
the peripherals everyone at<font color="#E5E5E5"> chip hack</font>

679
00:36:59,869 --> 00:37:04,519
who<font color="#CCCCCC"> put the peripherals through their</font>

680
00:37:01,670 --> 00:37:07,190
paces<font color="#E5E5E5"> and finally I would</font><font color="#CCCCCC"> like to thank</font>

681
00:37:04,519 --> 00:37:09,649
the<font color="#CCCCCC"> ember cousin team</font><font color="#E5E5E5"> without them I</font>

682
00:37:07,190 --> 00:37:14,599
would not<font color="#E5E5E5"> have an</font><font color="#CCCCCC"> opportunity like this</font>

683
00:37:09,650 --> 00:37:17,299
<font color="#CCCCCC">I hope I have managed to inspire you to</font>

684
00:37:14,599 --> 00:37:19,369
recreate the<font color="#E5E5E5"> project at home this</font>

685
00:37:17,299 --> 00:37:22,880
project is always<font color="#E5E5E5"> looking to</font><font color="#CCCCCC"> be improved</font>

686
00:37:19,369 --> 00:37:27,730
<font color="#E5E5E5">any patches are welcome all the sources</font>

687
00:37:22,880 --> 00:37:36,440
<font color="#CCCCCC">on github thank you for listening</font>

688
00:37:27,730 --> 00:37:36,440
[Applause]

689
00:37:36,710 --> 00:37:47,100
so we still have<font color="#CCCCCC"> time for some questions</font>

690
00:37:40,280 --> 00:37:49,020
<font color="#CCCCCC">pls wafe and we'll come to hi have you</font>

691
00:37:47,100 --> 00:37:50,730
collaborates the tool with the National

692
00:37:49,020 --> 00:37:54,780
Museum<font color="#E5E5E5"> of computing you're working on</font>

693
00:37:50,730 --> 00:37:57,900
their reconstruction<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that site much</font>

694
00:37:54,780 --> 00:38:02,400
with the reconstruction<font color="#E5E5E5"> but we did use</font>

695
00:37:57,900 --> 00:38:07,490
Bill purposes version which he used for

696
00:38:02,400 --> 00:38:07,490
<font color="#CCCCCC">the</font><font color="#E5E5E5"> recreation of the replica</font>

697
00:38:11,330 --> 00:38:15,740
I like the way<font color="#E5E5E5"> you're trying to</font>

698
00:38:13,970 --> 00:38:18,049
introduce the<font color="#CCCCCC"> physicality of the</font>

699
00:38:15,740 --> 00:38:19,339
original<font color="#CCCCCC"> IDI sack into the system did</font>

700
00:38:18,050 --> 00:38:21,680
you consider<font color="#E5E5E5"> whether or not it was</font>

701
00:38:19,340 --> 00:38:33,290
possible<font color="#CCCCCC"> to introduce a valve in any of</font>

702
00:38:21,680 --> 00:38:37,149
your design but it would have<font color="#CCCCCC"> been</font><font color="#E5E5E5"> quite</font>

703
00:38:33,290 --> 00:38:44,000
<font color="#CCCCCC">different</font><font color="#E5E5E5"> difficult to kind of make a</font>

704
00:38:37,150 --> 00:38:46,980
completely vacuum<font color="#E5E5E5"> fills tube it was hard</font>

705
00:38:44,000 --> 00:38:49,870
enough<font color="#CCCCCC"> to</font><font color="#E5E5E5"> fill the delay line with water</font>

706
00:38:46,980 --> 00:38:53,870
[Music]

707
00:38:49,870 --> 00:38:56,990
<font color="#CCCCCC">vacuum all the air from the tube as well</font>

708
00:38:53,870 --> 00:39:04,310
to<font color="#E5E5E5"> create what was necessary</font><font color="#CCCCCC"> for the</font>

709
00:38:56,990 --> 00:39:09,500
valve<font color="#E5E5E5"> do you know oh it's</font><font color="#CCCCCC"> working the</font>

710
00:39:04,310 --> 00:39:12,560
rebuilt in a black<font color="#CCCCCC"> play bar</font><font color="#E5E5E5"> the rebuilt</font>

711
00:39:09,500 --> 00:39:19,190
<font color="#E5E5E5">the rebuilt of the EDSAC in the museum</font>

712
00:39:12,560 --> 00:39:21,040
<font color="#E5E5E5">is it in</font><font color="#CCCCCC"> good shape or I can't quite can</font>

713
00:39:19,190 --> 00:39:25,160
you repeat<font color="#CCCCCC"> the question please</font>

714
00:39:21,040 --> 00:39:29,710
<font color="#E5E5E5">well they are rebuilding exactly</font>

715
00:39:25,160 --> 00:39:29,710
<font color="#CCCCCC">literally apart yes</font><font color="#E5E5E5"> oh is it going</font><font color="#CCCCCC"> no</font>

716
00:39:32,620 --> 00:39:39,770
<font color="#CCCCCC">they did say it was gonna be</font><font color="#E5E5E5"> in 2017</font><font color="#CCCCCC"> but</font>

717
00:39:37,460 --> 00:39:44,060
it's kind of shifting forward a<font color="#E5E5E5"> little</font>

718
00:39:39,770 --> 00:39:46,700
<font color="#E5E5E5">bit but it's it may be out</font><font color="#CCCCCC"> tomorrow and</font>

719
00:39:44,060 --> 00:39:50,450
<font color="#CCCCCC">maybe out</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> couple months</font><font color="#E5E5E5"> time some</font>

720
00:39:46,700 --> 00:39:54,200
<font color="#E5E5E5">specific problems I don't really know</font>

721
00:39:50,450 --> 00:39:57,399
much about<font color="#E5E5E5"> what the holdup but</font><font color="#CCCCCC"> I'm</font>

722
00:39:54,200 --> 00:39:57,399
really<font color="#CCCCCC"> looking forward to it</font>

723
00:40:09,530 --> 00:40:13,240
really no more questions

724
00:40:19,920 --> 00:40:25,739
since the rebuild has been mentioned<font color="#CCCCCC"> are</font>

725
00:40:23,940 --> 00:40:27,630
you going to try<font color="#E5E5E5"> running any of the code</font>

726
00:40:25,739 --> 00:40:29,309
that's<font color="#E5E5E5"> been developed on your your</font>

727
00:40:27,630 --> 00:40:34,950
<font color="#E5E5E5">little head sack on the real thing</font><font color="#CCCCCC"> once</font>

728
00:40:29,309 --> 00:40:36,420
it goes live because<font color="#CCCCCC"> I know one of</font><font color="#E5E5E5"> the</font>

729
00:40:34,950 --> 00:40:38,279
<font color="#E5E5E5">things they're</font><font color="#CCCCCC"> looking</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> is they they</font>

730
00:40:36,420 --> 00:40:40,230
need code to run<font color="#E5E5E5"> on the on the rebuild</font>

731
00:40:38,279 --> 00:40:41,519
<font color="#CCCCCC">to</font><font color="#E5E5E5"> actually have it do something and I</font>

732
00:40:40,230 --> 00:40:44,150
<font color="#CCCCCC">think one of the things they're quite</font>

733
00:40:41,519 --> 00:40:47,758
<font color="#E5E5E5">keen on doing was having children</font>

734
00:40:44,150 --> 00:40:54,839
<font color="#E5E5E5">working on to write programs that they</font>

735
00:40:47,759 --> 00:40:56,160
could run on the rebuild so it was you

736
00:40:54,839 --> 00:40:58,349
<font color="#E5E5E5">develop this as an</font><font color="#CCCCCC"> educational resource</font>

737
00:40:56,160 --> 00:40:59,730
right for kids<font color="#CCCCCC"> so are you planning</font><font color="#E5E5E5"> to</font>

738
00:40:58,349 --> 00:41:02,309
run any<font color="#CCCCCC"> of the programs that they run</font>

739
00:40:59,730 --> 00:41:10,619
<font color="#E5E5E5">right</font><font color="#CCCCCC"> then get working on this on the</font>

740
00:41:02,309 --> 00:41:12,299
<font color="#E5E5E5">actual rebuild programs once we've</font>

741
00:41:10,619 --> 00:41:15,900
managed to interface everything together

742
00:41:12,299 --> 00:41:21,109
<font color="#CCCCCC">and maybe a couple of</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> guys could</font>

743
00:41:15,900 --> 00:41:23,339
help<font color="#E5E5E5"> with that but eventually hopefully</font>

744
00:41:21,109 --> 00:41:26,130
everything<font color="#E5E5E5"> will come together and</font><font color="#CCCCCC"> we'll</font>

745
00:41:23,339 --> 00:41:30,119
<font color="#CCCCCC">be able</font><font color="#E5E5E5"> to do it in an actual</font><font color="#CCCCCC"> school or</font>

746
00:41:26,130 --> 00:41:32,359
in a makerspace<font color="#E5E5E5"> or at home or in a</font>

747
00:41:30,119 --> 00:41:32,359
church

748
00:41:43,220 --> 00:41:49,129
are there any more<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> sir it's</font>

749
00:41:46,700 --> 00:41:52,430
still some minutes left four of your

750
00:41:49,130 --> 00:41:55,160
time so if anyone is<font color="#CCCCCC"> interested I think</font>

751
00:41:52,430 --> 00:41:56,990
to have<font color="#CCCCCC"> a closer look at the things</font><font color="#E5E5E5"> you</font>

752
00:41:55,160 --> 00:41:59,210
brought with<font color="#E5E5E5"> you</font><font color="#CCCCCC"> there is still</font><font color="#E5E5E5"> some</font>

753
00:41:56,990 --> 00:42:03,870
<font color="#CCCCCC">time left for</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> before the</font><font color="#E5E5E5"> next talk</font>

754
00:41:59,210 --> 00:42:07,770
starts thank you<font color="#E5E5E5"> very much</font>

755
00:42:03,870 --> 00:42:08,520
[Applause]

756
00:42:07,770 --> 00:42:11,699
<font color="#E5E5E5">you</font>

757
00:42:08,520 --> 00:42:11,699
[Applause]

