1
00:00:06,210 --> 00:00:12,740
thanks goodness<font color="#CCCCCC"> okay thanks very</font><font color="#E5E5E5"> much</font>

2
00:00:10,450 --> 00:00:16,789
for<font color="#E5E5E5"> being</font><font color="#CCCCCC"> here today guys</font><font color="#E5E5E5"> oh he</font>

3
00:00:12,740 --> 00:00:20,210
<font color="#CCCCCC">hey in the</font><font color="#E5E5E5"> back there cool</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> right</font>

4
00:00:16,789 --> 00:00:23,720
so my name<font color="#CCCCCC"> is</font><font color="#E5E5E5"> neo tan</font><font color="#CCCCCC"> I here</font><font color="#E5E5E5"> to</font>

5
00:00:20,210 --> 00:00:27,460
basically try<font color="#CCCCCC"> to answer you guys</font><font color="#E5E5E5"> five</font>

6
00:00:23,720 --> 00:00:31,009
questions about<font color="#E5E5E5"> my quote answer</font>

7
00:00:27,460 --> 00:00:36,019
<font color="#CCCCCC">basically the</font><font color="#E5E5E5"> question are who what how</font>

8
00:00:31,010 --> 00:00:45,080
why and<font color="#E5E5E5"> where so let's start with who</font>

9
00:00:36,019 --> 00:00:47,769
first we are software engineers<font color="#E5E5E5"> they</font>

10
00:00:45,080 --> 00:00:51,640
have scientists and physicists<font color="#E5E5E5"> and</font>

11
00:00:47,769 --> 00:00:55,089
researchers just<font color="#CCCCCC"> a small group of people</font>

12
00:00:51,640 --> 00:01:01,280
you know<font color="#E5E5E5"> who share</font><font color="#CCCCCC"> a two common interest</font>

13
00:00:55,089 --> 00:01:05,630
machine learning and embedded<font color="#CCCCCC"> systems so</font>

14
00:01:01,280 --> 00:01:09,260
what do<font color="#CCCCCC"> we try to</font><font color="#E5E5E5"> do here essentially we</font>

15
00:01:05,630 --> 00:01:13,399
are trying<font color="#CCCCCC"> to move like make Tessa flow</font>

16
00:01:09,260 --> 00:01:16,610
inferencing to run the smallest device

17
00:01:13,400 --> 00:01:20,060
possible so in this case the

18
00:01:16,610 --> 00:01:22,880
microcontrollers<font color="#E5E5E5"> I'm showing this</font>

19
00:01:20,060 --> 00:01:26,179
particular<font color="#E5E5E5"> microcontroller here just</font><font color="#CCCCCC"> a</font>

20
00:01:22,880 --> 00:01:28,310
<font color="#CCCCCC">saying example because this is the</font>

21
00:01:26,179 --> 00:01:30,530
microcontroller you will be using<font color="#E5E5E5"> for</font>

22
00:01:28,310 --> 00:01:33,859
showing guys that<font color="#CCCCCC"> once more demo</font><font color="#E5E5E5"> after</font>

23
00:01:30,530 --> 00:01:36,159
this one<font color="#E5E5E5"> the microcontroller in this</font>

24
00:01:33,859 --> 00:01:40,939
case is running<font color="#CCCCCC"> at a hundred megahertz</font>

25
00:01:36,159 --> 00:01:45,170
has them much less than one megabyte<font color="#E5E5E5"> of</font>

26
00:01:40,939 --> 00:01:47,169
RAM<font color="#CCCCCC"> you know this is actually was</font><font color="#E5E5E5"> 320 K</font>

27
00:01:45,170 --> 00:01:50,149
is<font color="#E5E5E5"> actually quite large for</font>

28
00:01:47,170 --> 00:01:51,740
microcontroller<font color="#CCCCCC"> right but you know it</font>

29
00:01:50,149 --> 00:01:54,799
has a<font color="#CCCCCC"> touchscreen</font><font color="#E5E5E5"> and everything so</font>

30
00:01:51,740 --> 00:01:57,408
<font color="#E5E5E5">let's give you a break</font><font color="#CCCCCC"> has a flash</font>

31
00:01:54,799 --> 00:02:00,409
memory<font color="#E5E5E5"> but the most important thing here</font>

32
00:01:57,409 --> 00:02:02,630
<font color="#E5E5E5">is the power some of</font><font color="#CCCCCC"> those</font>

33
00:02:00,409 --> 00:02:07,660
<font color="#E5E5E5">microcontrollers are meant to be wrong</font>

34
00:02:02,630 --> 00:02:10,910
coin cell battery for like monsters<font color="#E5E5E5"> so</font>

35
00:02:07,660 --> 00:02:14,390
compared<font color="#E5E5E5"> to</font><font color="#CCCCCC"> running things on maybe PC</font>

36
00:02:10,910 --> 00:02:16,220
<font color="#CCCCCC">GP or cloud</font><font color="#E5E5E5"> well personally I</font><font color="#CCCCCC"> think this</font>

37
00:02:14,390 --> 00:02:18,859
is probably<font color="#CCCCCC"> one of the</font><font color="#E5E5E5"> most important</font>

38
00:02:16,220 --> 00:02:21,550
differences<font color="#E5E5E5"> here is the power</font>

39
00:02:18,860 --> 00:02:21,550
<font color="#E5E5E5">consumption</font>

40
00:02:22,090 --> 00:02:26,810
now let's just look<font color="#CCCCCC"> at a</font><font color="#E5E5E5"> brief demo so</font>

41
00:02:25,250 --> 00:02:32,900
what you'll see<font color="#E5E5E5"> here beside appear in</font>

42
00:02:26,810 --> 00:02:35,000
banana<font color="#CCCCCC"> well this is the mic on so I was</font>

43
00:02:32,900 --> 00:02:37,640
<font color="#CCCCCC">showing and that's a</font><font color="#E5E5E5"> touchscreen we</font>

44
00:02:35,000 --> 00:02:40,450
attempt to draw something there press a

45
00:02:37,640 --> 00:02:51,769
button and see if<font color="#CCCCCC"> the gives back the</font>

46
00:02:40,450 --> 00:02:55,250
<font color="#E5E5E5">correct result so that's me writing a</font>

47
00:02:51,770 --> 00:02:59,270
stuff with another developer<font color="#E5E5E5"> on these</font>

48
00:02:55,250 --> 00:03:02,150
projects well<font color="#E5E5E5"> okay so you can just</font>

49
00:02:59,270 --> 00:03:05,120
<font color="#CCCCCC">barely see it I drew as three and</font><font color="#E5E5E5"> return</font>

50
00:03:02,150 --> 00:03:07,640
the<font color="#E5E5E5"> three as well we only have so much</font>

51
00:03:05,120 --> 00:03:09,260
time to<font color="#CCCCCC"> make</font><font color="#E5E5E5"> this demo so</font><font color="#CCCCCC"> we didn't</font><font color="#E5E5E5"> have</font>

52
00:03:07,640 --> 00:03:12,200
time to<font color="#CCCCCC"> figure</font><font color="#E5E5E5"> out how to print the</font>

53
00:03:09,260 --> 00:03:14,060
<font color="#E5E5E5">proper</font><font color="#CCCCCC"> death</font><font color="#E5E5E5"> tax bigger but if you</font>

54
00:03:12,200 --> 00:03:21,200
squeeze your eyes<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> take a seat as</font>

55
00:03:14,060 --> 00:03:22,400
<font color="#CCCCCC">I</font><font color="#E5E5E5"> ate</font><font color="#CCCCCC"> so on the slides if you want you</font>

56
00:03:21,200 --> 00:03:25,959
if you<font color="#E5E5E5"> guys</font><font color="#CCCCCC"> want check</font><font color="#E5E5E5"> out the demo</font>

57
00:03:22,400 --> 00:03:25,959
<font color="#E5E5E5">there's there's a link</font><font color="#CCCCCC"> here</font>

58
00:03:31,640 --> 00:03:38,958
<font color="#E5E5E5">this is basically the narrow Network</font><font color="#CCCCCC"> we</font>

59
00:03:35,120 --> 00:03:41,810
<font color="#E5E5E5">have been running it's really basic</font><font color="#CCCCCC"> you</font>

60
00:03:38,959 --> 00:03:45,620
know just<font color="#E5E5E5"> add multi-layer perceptron for</font>

61
00:03:41,810 --> 00:03:51,020
the connected layers<font color="#CCCCCC"> its trained on the</font>

62
00:03:45,620 --> 00:03:52,970
<font color="#E5E5E5">and this</font><font color="#CCCCCC"> dataset</font><font color="#E5E5E5"> and the lowest memory</font>

63
00:03:51,020 --> 00:03:56,090
footprint<font color="#E5E5E5"> we can put this on the</font>

64
00:03:52,970 --> 00:03:58,400
<font color="#CCCCCC">microcontroller</font><font color="#E5E5E5"> is about 256 K but if</font>

65
00:03:56,090 --> 00:04:02,000
you do the math it's actually taking

66
00:03:58,400 --> 00:04:03,530
less than a hundred K<font color="#CCCCCC"> just</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> things</font>

67
00:04:02,000 --> 00:04:07,430
that we<font color="#E5E5E5"> need to get a touchscreen and</font>

68
00:04:03,530 --> 00:04:09,800
<font color="#CCCCCC">whatever operating</font><font color="#E5E5E5"> system running does</font>

69
00:04:07,430 --> 00:04:20,120
also<font color="#E5E5E5"> take the RAM but there's a lot</font><font color="#CCCCCC"> ruin</font>

70
00:04:09,800 --> 00:04:27,710
to be optimized here right<font color="#E5E5E5"> and let's</font>

71
00:04:20,120 --> 00:04:30,440
talk about<font color="#E5E5E5"> how we do</font><font color="#CCCCCC"> this so there's a</font>

72
00:04:27,710 --> 00:04:31,549
few technique in use here<font color="#E5E5E5"> the first one</font>

73
00:04:30,440 --> 00:04:33,919
is<font color="#E5E5E5"> quite important</font>

74
00:04:31,550 --> 00:04:37,280
it's called quantization<font color="#CCCCCC"> as you know</font>

75
00:04:33,919 --> 00:04:40,700
most of the<font color="#E5E5E5"> graph intensive flow using</font>

76
00:04:37,280 --> 00:04:45,020
floating<font color="#E5E5E5"> points which each value takes</font>

77
00:04:40,700 --> 00:04:46,969
about 32 bits but Peter<font color="#E5E5E5"> warden if you</font>

78
00:04:45,020 --> 00:04:51,349
<font color="#E5E5E5">google hang up has a really interesting</font>

79
00:04:46,970 --> 00:04:53,450
blog which tells you<font color="#CCCCCC"> how to convert the</font>

80
00:04:51,350 --> 00:04:56,690
folding point into fixed point which

81
00:04:53,450 --> 00:04:59,360
pretty<font color="#CCCCCC"> much goes from 32 bits</font><font color="#E5E5E5"> into a bit</font>

82
00:04:56,690 --> 00:05:01,520
so it turns out<font color="#CCCCCC"> that</font><font color="#E5E5E5"> for inferencing</font>

83
00:04:59,360 --> 00:05:05,060
this is pretty<font color="#CCCCCC"> much all you</font><font color="#E5E5E5"> need as a</font>

84
00:05:01,520 --> 00:05:09,789
result we save<font color="#CCCCCC"> about</font><font color="#E5E5E5"> 75% of the memory</font>

85
00:05:05,060 --> 00:05:11,990
<font color="#E5E5E5">and the other major</font><font color="#CCCCCC"> difference is that</font>

86
00:05:09,790 --> 00:05:14,900
<font color="#E5E5E5">in most machine</font><font color="#CCCCCC"> learning framework</font>

87
00:05:11,990 --> 00:05:20,600
<font color="#E5E5E5">running on cloud PC we have the luxury</font>

88
00:05:14,900 --> 00:05:23,330
of memories<font color="#E5E5E5"> so it so the result is a lot</font>

89
00:05:20,600 --> 00:05:25,070
of unused tensors or buffers<font color="#E5E5E5"> data are</font>

90
00:05:23,330 --> 00:05:28,789
being<font color="#E5E5E5"> kept in</font><font color="#CCCCCC"> the memory even</font><font color="#E5E5E5"> though</font>

91
00:05:25,070 --> 00:05:30,650
<font color="#CCCCCC">it's not</font><font color="#E5E5E5"> used for computation but what</font>

92
00:05:28,789 --> 00:05:34,159
we<font color="#CCCCCC"> have done</font><font color="#E5E5E5"> in micro tensor is used</font>

93
00:05:30,650 --> 00:05:36,260
dynamic tensor allocation which we work

94
00:05:34,160 --> 00:05:39,800
out<font color="#CCCCCC"> exactly which tensor is needed</font><font color="#E5E5E5"> and</font>

95
00:05:36,260 --> 00:05:41,810
loaded from the<font color="#E5E5E5"> storage will just cure</font>

96
00:05:39,800 --> 00:05:44,379
it from the memory<font color="#CCCCCC"> to</font><font color="#E5E5E5"> guarantee that you</font>

97
00:05:41,810 --> 00:05:50,569
have<font color="#E5E5E5"> maximum room for computation here</font>

98
00:05:44,379 --> 00:05:52,189
and because<font color="#CCCCCC"> micro culture is so tiny you</font>

99
00:05:50,569 --> 00:05:55,460
really want to guarantee<font color="#E5E5E5"> that you're</font>

100
00:05:52,189 --> 00:05:58,610
using the<font color="#CCCCCC"> minimum</font><font color="#E5E5E5"> amount of code memory</font>

101
00:05:55,460 --> 00:06:02,500
as possible that also include you are

102
00:05:58,610 --> 00:06:05,870
trying<font color="#E5E5E5"> to walk around from having</font>

103
00:06:02,500 --> 00:06:09,199
specific shion's<font color="#E5E5E5"> who parse the graph and</font>

104
00:06:05,870 --> 00:06:12,469
do other<font color="#CCCCCC"> things so what we did is we</font>

105
00:06:09,199 --> 00:06:15,259
take<font color="#E5E5E5"> whoops sorry we would just get the</font>

106
00:06:12,469 --> 00:06:18,080
tenth of<font color="#E5E5E5"> a graph and just cover it into</font>

107
00:06:15,259 --> 00:06:22,069
C++<font color="#E5E5E5"> code</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> talk about that little</font>

108
00:06:18,080 --> 00:06:26,060
<font color="#E5E5E5">more in the</font><font color="#CCCCCC"> next slide there's no</font>

109
00:06:22,069 --> 00:06:32,509
dependency on math libraries such as

110
00:06:26,060 --> 00:06:34,930
icons we pretty much took<font color="#CCCCCC"> many of</font><font color="#E5E5E5"> the</font>

111
00:06:32,509 --> 00:06:37,639
<font color="#CCCCCC">mathematical routine to guarantee the</font>

112
00:06:34,930 --> 00:06:39,529
this most memory footprint possible<font color="#CCCCCC"> I</font>

113
00:06:37,639 --> 00:06:44,569
mean at least that's<font color="#CCCCCC"> what we are</font><font color="#E5E5E5"> trying</font>

114
00:06:39,529 --> 00:06:47,930
<font color="#CCCCCC">to</font><font color="#E5E5E5"> do now we use embed for rapid</font>

115
00:06:44,569 --> 00:06:50,300
prototyping<font color="#CCCCCC"> and see you if you guys</font>

116
00:06:47,930 --> 00:06:52,279
never<font color="#E5E5E5"> heard or embed I encourage you</font>

117
00:06:50,300 --> 00:06:59,990
guys<font color="#CCCCCC"> Google yup it's pretty awesome</font><font color="#E5E5E5"> for</font>

118
00:06:52,279 --> 00:07:03,710
developing<font color="#E5E5E5"> microcontrollers so this is</font>

119
00:06:59,990 --> 00:07:07,729
the their workflow here<font color="#E5E5E5"> we first quick</font>

120
00:07:03,710 --> 00:07:08,500
<font color="#E5E5E5">collect the data field data into</font>

121
00:07:07,729 --> 00:07:11,359
<font color="#CCCCCC">tensorflow</font>

122
00:07:08,500 --> 00:07:14,479
make you a network of choice<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font>

123
00:07:11,360 --> 00:07:18,680
train your model and<font color="#CCCCCC"> that turns out to</font>

124
00:07:14,479 --> 00:07:21,289
be a polar COBOL file a graph<font color="#E5E5E5"> micro</font>

125
00:07:18,680 --> 00:07:24,560
<font color="#E5E5E5">tensor</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> the graph generate the</font>

126
00:07:21,289 --> 00:07:26,330
successors code and also<font color="#E5E5E5"> it has a low</font>

127
00:07:24,560 --> 00:07:28,699
<font color="#E5E5E5">content library to be included and</font>

128
00:07:26,330 --> 00:07:32,029
<font color="#E5E5E5">imported into embed then you get</font>

129
00:07:28,699 --> 00:07:35,210
compiled and you<font color="#E5E5E5"> flash and run on the</font>

130
00:07:32,029 --> 00:07:44,319
<font color="#E5E5E5">microcontroller that's basically the</font>

131
00:07:35,210 --> 00:07:44,318
flow and<font color="#CCCCCC"> just to iterate on that one</font>

132
00:07:44,469 --> 00:07:50,810
this<font color="#E5E5E5"> is actually</font><font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> command</font><font color="#CCCCCC"> as I</font>

133
00:07:48,229 --> 00:07:55,130
was trying<font color="#E5E5E5"> to you</font><font color="#CCCCCC"> know run and make the</font>

134
00:07:50,810 --> 00:07:57,680
readme file for the project<font color="#E5E5E5"> you will</font>

135
00:07:55,130 --> 00:08:03,289
give you a graph to the micro tensor

136
00:07:57,680 --> 00:08:05,780
<font color="#CCCCCC">CRI</font><font color="#E5E5E5"> come in line interface and then this</font>

137
00:08:03,289 --> 00:08:07,580
<font color="#E5E5E5">little</font><font color="#CCCCCC"> program here</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> checked the</font>

138
00:08:05,780 --> 00:08:10,489
parameter<font color="#E5E5E5"> from the graph which</font><font color="#CCCCCC"> is your</font>

139
00:08:07,580 --> 00:08:15,109
weight and save it somewhere with the

140
00:08:10,490 --> 00:08:21,440
important to<font color="#CCCCCC"> your device also</font><font color="#E5E5E5"> it</font>

141
00:08:15,110 --> 00:08:30,639
generates the<font color="#CCCCCC"> c+ file</font><font color="#E5E5E5"> you need to do</font><font color="#CCCCCC"> a</font>

142
00:08:21,440 --> 00:08:35,179
inferencing on the microcontroller<font color="#E5E5E5"> and</font>

143
00:08:30,639 --> 00:08:38,890
this is roughly<font color="#E5E5E5"> the resulting binary</font>

144
00:08:35,179 --> 00:08:38,890
<font color="#E5E5E5">Intel the size all right</font>

145
00:08:39,219 --> 00:08:47,660
the whole pie chart here<font color="#E5E5E5"> is about</font><font color="#CCCCCC"> 300k</font>

146
00:08:43,120 --> 00:08:49,670
for the<font color="#CCCCCC"> binary</font><font color="#E5E5E5"> but this is not the</font><font color="#CCCCCC"> most</font>

147
00:08:47,660 --> 00:08:52,610
up-to-date result as in<font color="#CCCCCC"> matter of fact</font>

148
00:08:49,670 --> 00:08:56,149
just<font color="#E5E5E5"> a few</font><font color="#CCCCCC"> days ago one of the do</font><font color="#E5E5E5"> the</font>

149
00:08:52,610 --> 00:09:02,540
<font color="#CCCCCC">older Michael</font><font color="#E5E5E5"> back in Austin was managed</font>

150
00:08:56,149 --> 00:09:04,940
to<font color="#E5E5E5"> shape about 66% of the the size of</font>

151
00:09:02,540 --> 00:09:09,770
the original<font color="#CCCCCC"> 300k so the whole thing</font>

152
00:09:04,940 --> 00:09:11,300
right<font color="#E5E5E5"> now is</font><font color="#CCCCCC"> about mostly</font><font color="#E5E5E5"> the the we</font>

153
00:09:09,770 --> 00:09:15,230
were saying<font color="#CCCCCC"> for this</font><font color="#E5E5E5"> portion</font><font color="#CCCCCC"> the whole</font>

154
00:09:11,300 --> 00:09:17,240
<font color="#CCCCCC">thing is</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> something K</font><font color="#E5E5E5"> but</font>

155
00:09:15,230 --> 00:09:19,580
the idea is<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> kind of see exactly</font>

156
00:09:17,240 --> 00:09:21,589
<font color="#CCCCCC">this</font><font color="#E5E5E5"> this is the micro</font><font color="#CCCCCC"> tensor</font><font color="#E5E5E5"> part here</font>

157
00:09:19,580 --> 00:09:24,110
you killed my content library and you

158
00:09:21,589 --> 00:09:28,880
got you have the<font color="#E5E5E5"> generated graph the</font>

159
00:09:24,110 --> 00:09:32,690
whole thing for the for the MLP<font color="#CCCCCC"> Network</font>

160
00:09:28,880 --> 00:09:36,320
<font color="#E5E5E5">I was presenting earlier it's about 26</font>

161
00:09:32,690 --> 00:09:38,779
to 30 K so that's right roughly<font color="#CCCCCC"> your</font>

162
00:09:36,320 --> 00:09:40,190
size<font color="#E5E5E5"> what you can expect and yeah</font>

163
00:09:38,779 --> 00:09:42,200
there's further information<font color="#E5E5E5"> to be done</font>

164
00:09:40,190 --> 00:09:47,270
here but<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> current state of</font>

165
00:09:42,200 --> 00:09:50,060
the work right<font color="#E5E5E5"> now as for the design</font>

166
00:09:47,270 --> 00:09:54,160
<font color="#CCCCCC">micro</font><font color="#E5E5E5"> tends to have three</font><font color="#CCCCCC"> classes let's</font>

167
00:09:50,060 --> 00:09:54,160
talk about the two classes first

168
00:09:55,029 --> 00:10:04,820
<font color="#E5E5E5">operator class is pretty much</font><font color="#CCCCCC"> what you</font>

169
00:09:58,820 --> 00:10:07,370
can<font color="#E5E5E5"> think</font><font color="#CCCCCC"> of as</font><font color="#E5E5E5"> like convolution metric</font>

170
00:10:04,820 --> 00:10:09,550
multiplication<font color="#E5E5E5"> add subtract stuff like</font>

171
00:10:07,370 --> 00:10:09,550
that

172
00:10:09,990 --> 00:10:15,130
it would take<font color="#E5E5E5"> multiple tensor object</font>

173
00:10:12,430 --> 00:10:18,790
here and help it<font color="#CCCCCC"> to the multiple tens of</font>

174
00:10:15,130 --> 00:10:20,790
<font color="#CCCCCC">J pretty much the input-output</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now</font>

175
00:10:18,790 --> 00:10:24,250
we implement the<font color="#E5E5E5"> C reference</font>

176
00:10:20,790 --> 00:10:27,069
implementation but<font color="#E5E5E5"> in the future</font>

177
00:10:24,250 --> 00:10:29,260
hopefully as you<font color="#CCCCCC"> guys or</font><font color="#E5E5E5"> all developers</font>

178
00:10:27,070 --> 00:10:33,190
it's interesting this you<font color="#CCCCCC"> will have like</font>

179
00:10:29,260 --> 00:10:37,240
<font color="#CCCCCC">Cindy implementation or SPI</font><font color="#E5E5E5"> if you have</font>

180
00:10:33,190 --> 00:10:38,710
<font color="#E5E5E5">accelerator for your computation</font><font color="#CCCCCC"> we have</font>

181
00:10:37,240 --> 00:10:40,450
no idea<font color="#E5E5E5"> what</font><font color="#CCCCCC"> kind how we will be going</font>

182
00:10:38,710 --> 00:10:43,240
<font color="#E5E5E5">out there so we want to make</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> future</font>

183
00:10:40,450 --> 00:10:44,980
proof by defining<font color="#CCCCCC"> good interface</font><font color="#E5E5E5"> to</font>

184
00:10:43,240 --> 00:10:48,370
interface with whatever implementation

185
00:10:44,980 --> 00:10:50,020
<font color="#E5E5E5">we can face in the future also</font><font color="#CCCCCC"> you can</font>

186
00:10:48,370 --> 00:10:52,480
implement network interface here<font color="#E5E5E5"> which</font>

187
00:10:50,020 --> 00:10:56,380
can<font color="#E5E5E5"> potentially do distributed</font>

188
00:10:52,480 --> 00:10:58,300
computation here for the tensor class

189
00:10:56,380 --> 00:11:01,090
<font color="#E5E5E5">right now we only implement the rent</font>

190
00:10:58,300 --> 00:11:05,229
answer and<font color="#E5E5E5"> Kisame sitting right there</font>

191
00:11:01,090 --> 00:11:06,700
for as another developer we have<font color="#CCCCCC"> is</font>

192
00:11:05,230 --> 00:11:09,640
<font color="#E5E5E5">implementing or he has already</font>

193
00:11:06,700 --> 00:11:12,520
<font color="#E5E5E5">implemented</font><font color="#CCCCCC"> the paging system</font><font color="#E5E5E5"> which</font>

194
00:11:09,640 --> 00:11:14,530
allow you to paging and out of the say

195
00:11:12,520 --> 00:11:17,860
the flash memory<font color="#E5E5E5"> on the microcontroller</font>

196
00:11:14,530 --> 00:11:21,579
for example the idea<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> allow you to</font>

197
00:11:17,860 --> 00:11:24,970
<font color="#E5E5E5">run any size of deep learning model we</font>

198
00:11:21,580 --> 00:11:30,220
have right now<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> trade off of the</font>

199
00:11:24,970 --> 00:11:33,390
computation time let's talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> why</font>

200
00:11:30,220 --> 00:11:33,390
<font color="#E5E5E5">they're</font><font color="#CCCCCC"> doing this in</font><font color="#E5E5E5"> the first place</font>

201
00:11:34,740 --> 00:11:39,310
<font color="#CCCCCC">right so this is a graph and so</font><font color="#E5E5E5"> they</font>

202
00:11:37,300 --> 00:11:41,229
have everything organized not to scale

203
00:11:39,310 --> 00:11:44,920
this<font color="#E5E5E5"> is how I have things organized in</font>

204
00:11:41,230 --> 00:11:48,970
my head on the horizontal<font color="#CCCCCC"> axis here we</font>

205
00:11:44,920 --> 00:11:50,620
have the cost area if you<font color="#E5E5E5"> look at a</font>

206
00:11:48,970 --> 00:11:56,770
different<font color="#E5E5E5"> platform here you have cloud</font>

207
00:11:50,620 --> 00:11:58,810
GPU CPU<font color="#CCCCCC"> application processing unit</font><font color="#E5E5E5"> it</font>

208
00:11:56,770 --> 00:12:01,660
<font color="#CCCCCC">should go toward that</font><font color="#E5E5E5"> direction for</font>

209
00:11:58,810 --> 00:12:03,699
cloud is more<font color="#E5E5E5"> costly but</font><font color="#CCCCCC"> then at</font><font color="#E5E5E5"> the</font>

210
00:12:01,660 --> 00:12:08,770
<font color="#CCCCCC">same time</font><font color="#E5E5E5"> on the vertical assets you</font>

211
00:12:03,700 --> 00:12:12,930
have more performance what we have seen

212
00:12:08,770 --> 00:12:14,890
is that for<font color="#E5E5E5"> most machine learning while</font>

213
00:12:12,930 --> 00:12:17,140
training<font color="#E5E5E5"> is a bit different but they</font>

214
00:12:14,890 --> 00:12:19,330
<font color="#CCCCCC">just were you</font><font color="#E5E5E5"> forcing most of machine</font>

215
00:12:17,140 --> 00:12:21,800
learning stuff has been<font color="#CCCCCC"> realized</font><font color="#E5E5E5"> like</font>

216
00:12:19,330 --> 00:12:25,760
happening lying on the

217
00:12:21,800 --> 00:12:28,359
your<font color="#E5E5E5"> right-hand</font><font color="#CCCCCC"> side of the slice here</font>

218
00:12:25,760 --> 00:12:32,120
so you get cloud you get<font color="#E5E5E5"> you</font><font color="#CCCCCC"> PU</font><font color="#E5E5E5"> CPU a</font>

219
00:12:28,360 --> 00:12:34,700
<font color="#E5E5E5">APU here but there has me a barrier</font>

220
00:12:32,120 --> 00:12:36,649
<font color="#E5E5E5">really to move inferencing from you know</font>

221
00:12:34,700 --> 00:12:40,990
all the all the cool stuff<font color="#CCCCCC"> onto the MC</font>

222
00:12:36,649 --> 00:12:43,610
use so that's primarily<font color="#E5E5E5"> due to the</font><font color="#CCCCCC"> tools</font>

223
00:12:40,990 --> 00:12:45,380
back in<font color="#E5E5E5"> days we didn't really know how</font>

224
00:12:43,610 --> 00:12:47,390
<font color="#CCCCCC">to move</font><font color="#E5E5E5"> the machine</font><font color="#CCCCCC"> and stop on to here</font>

225
00:12:45,380 --> 00:12:50,000
because<font color="#E5E5E5"> there's really no</font><font color="#CCCCCC"> dedicated to</font>

226
00:12:47,390 --> 00:12:52,970
<font color="#CCCCCC">employees for</font><font color="#E5E5E5"> to do so in fact when</font><font color="#CCCCCC"> we</font>

227
00:12:50,000 --> 00:12:58,130
<font color="#E5E5E5">were writing micro tensor we kind of</font>

228
00:12:52,970 --> 00:13:02,060
<font color="#E5E5E5">needed</font><font color="#CCCCCC"> a few tools to to sort of</font><font color="#E5E5E5"> help</font>

229
00:12:58,130 --> 00:13:04,130
with<font color="#E5E5E5"> this and the algorithm</font><font color="#CCCCCC"> conversation</font>

230
00:13:02,060 --> 00:13:05,800
<font color="#CCCCCC">stop were weren't really in place at the</font>

231
00:13:04,130 --> 00:13:09,260
<font color="#E5E5E5">time most of the machine learning</font>

232
00:13:05,800 --> 00:13:13,510
framework are optimized for<font color="#E5E5E5"> accuracy but</font>

233
00:13:09,260 --> 00:13:16,459
not really<font color="#E5E5E5"> for the size and their speed</font>

234
00:13:13,510 --> 00:13:19,339
<font color="#E5E5E5">back in the days MC</font><font color="#CCCCCC"> Yuna</font><font color="#E5E5E5"> is not as fast</font>

235
00:13:16,459 --> 00:13:20,959
as today so you know it<font color="#E5E5E5"> kind of makes</font>

236
00:13:19,339 --> 00:13:22,880
<font color="#CCCCCC">sense</font><font color="#E5E5E5"> to like it make it</font><font color="#CCCCCC"> possible that</font>

237
00:13:20,959 --> 00:13:30,140
<font color="#E5E5E5">I'm serious faster now to do to do</font>

238
00:13:22,880 --> 00:13:36,399
inferencing on the MC use and<font color="#E5E5E5"> why yeah</font>

239
00:13:30,140 --> 00:13:41,029
and sorry so some of<font color="#E5E5E5"> the application of</font>

240
00:13:36,399 --> 00:13:43,149
device<font color="#CCCCCC"> AI include like sensor fusion</font><font color="#E5E5E5"> you</font>

241
00:13:41,029 --> 00:13:46,760
can fuse multiple sensor together<font color="#E5E5E5"> and</font>

242
00:13:43,149 --> 00:13:48,410
for<font color="#E5E5E5"> IOT device because the bandwidth are</font>

243
00:13:46,760 --> 00:13:50,089
typically low you can always send<font color="#E5E5E5"> the</font>

244
00:13:48,410 --> 00:13:53,089
<font color="#CCCCCC">full image audio data back to the server</font>

245
00:13:50,089 --> 00:13:56,690
<font color="#CCCCCC">so it makes sense to</font><font color="#E5E5E5"> the inferencing on</font>

246
00:13:53,089 --> 00:14:00,170
the<font color="#E5E5E5"> device and then just send the result</font>

247
00:13:56,690 --> 00:14:02,540
back through the cloud and<font color="#CCCCCC"> MCU typically</font>

248
00:14:00,170 --> 00:14:05,630
have a long standby time because there's

249
00:14:02,540 --> 00:14:08,779
a<font color="#E5E5E5"> low power consumption lower cost we</font>

250
00:14:05,630 --> 00:14:14,000
believe all<font color="#E5E5E5"> this point would</font><font color="#CCCCCC"> enable the</font>

251
00:14:08,779 --> 00:14:16,070
new use cases in the future<font color="#CCCCCC"> okay so this</font>

252
00:14:14,000 --> 00:14:20,959
is<font color="#E5E5E5"> the last slide we have so pretty much</font>

253
00:14:16,070 --> 00:14:22,519
where<font color="#E5E5E5"> as you guys can see that the</font><font color="#CCCCCC"> kiha</font>

254
00:14:20,959 --> 00:14:26,079
address is here if<font color="#E5E5E5"> you guys are</font>

255
00:14:22,519 --> 00:14:28,190
interested please<font color="#CCCCCC"> check</font><font color="#E5E5E5"> it out</font>

256
00:14:26,079 --> 00:14:30,560
we are<font color="#E5E5E5"> currently just a bunch of</font>

257
00:14:28,190 --> 00:14:33,709
embedded developers and they have

258
00:14:30,560 --> 00:14:35,040
scientists but we<font color="#E5E5E5"> we welcome all</font>

259
00:14:33,709 --> 00:14:38,699
discipline tubes with

260
00:14:35,040 --> 00:14:42,380
<font color="#E5E5E5">so join this project or to use it</font><font color="#CCCCCC"> peels</font>

261
00:14:38,699 --> 00:14:48,620
<font color="#E5E5E5">are welcome thanks guys</font>

262
00:14:42,380 --> 00:14:50,910
[Applause]

263
00:14:48,620 --> 00:15:04,220
thank you very much Neil you<font color="#E5E5E5"> have plenty</font>

264
00:14:50,910 --> 00:15:04,219
of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> for questions any questions</font>

265
00:15:08,600 --> 00:15:15,980
using flows imposed to it to a bit<font color="#CCCCCC"> or</font>

266
00:15:13,019 --> 00:15:21,030
you need<font color="#CCCCCC"> to start your training from</font>

267
00:15:15,980 --> 00:15:22,579
some from assumptions<font color="#CCCCCC"> that you will</font><font color="#E5E5E5"> need</font>

268
00:15:21,030 --> 00:15:27,300
[Music]

269
00:15:22,579 --> 00:15:29,758
<font color="#E5E5E5">integer numbers all the way down so the</font>

270
00:15:27,300 --> 00:15:34,410
training<font color="#E5E5E5"> is</font><font color="#CCCCCC"> done on</font><font color="#E5E5E5"> simple</font><font color="#CCCCCC"> center floor</font>

271
00:15:29,759 --> 00:15:36,569
you need<font color="#E5E5E5"> to adapt</font><font color="#CCCCCC"> attend ok that's a</font>

272
00:15:34,410 --> 00:15:40,560
<font color="#E5E5E5">very good question</font><font color="#CCCCCC"> we do all the</font>

273
00:15:36,569 --> 00:15:43,649
trainings on tensorflow<font color="#E5E5E5"> what happen is</font>

274
00:15:40,560 --> 00:15:46,138
if you train any graph with<font color="#CCCCCC"> tensorflow</font>

275
00:15:43,649 --> 00:15:49,680
<font color="#E5E5E5">just very good away there is a flow</font>

276
00:15:46,139 --> 00:15:52,500
actually<font color="#E5E5E5"> provide some script for you to</font>

277
00:15:49,680 --> 00:15:55,529
do the grass freezing and<font color="#CCCCCC"> conversation</font>

278
00:15:52,500 --> 00:15:58,199
so when<font color="#E5E5E5"> you do the conversation using</font>

279
00:15:55,529 --> 00:16:00,240
<font color="#CCCCCC">tensor flow tools you are insert a bunch</font>

280
00:15:58,199 --> 00:16:03,420
of conversation operators in your

281
00:16:00,240 --> 00:16:05,069
<font color="#CCCCCC">original graph</font><font color="#E5E5E5"> and what we did here</font><font color="#CCCCCC"> is</font>

282
00:16:03,420 --> 00:16:08,010
all supporting those<font color="#E5E5E5"> conversation</font>

283
00:16:05,069 --> 00:16:10,760
operator to the<font color="#CCCCCC"> micro come to micro</font>

284
00:16:08,010 --> 00:16:13,170
tensor<font color="#E5E5E5"> that's why they are compatible</font>

285
00:16:10,760 --> 00:16:15,510
but<font color="#E5E5E5"> yes training is done in floating</font>

286
00:16:13,170 --> 00:16:18,870
point but there's tools for us<font color="#E5E5E5"> to cover</font>

287
00:16:15,510 --> 00:16:26,790
everything from<font color="#E5E5E5"> floating point to fixed</font>

288
00:16:18,870 --> 00:16:29,010
<font color="#E5E5E5">point to run on the MCU</font><font color="#CCCCCC"> so do you plan</font>

289
00:16:26,790 --> 00:16:30,839
<font color="#E5E5E5">to support more complex networks like</font>

290
00:16:29,010 --> 00:16:37,110
convolutional neural networks<font color="#E5E5E5"> this kind</font>

291
00:16:30,839 --> 00:16:37,630
<font color="#CCCCCC">of things we</font><font color="#E5E5E5"> have to find interface for</font>

292
00:16:37,110 --> 00:16:39,550
your

293
00:16:37,630 --> 00:16:42,250
the one<font color="#E5E5E5"> who's well</font><font color="#CCCCCC"> hopefully make it</font>

294
00:16:39,550 --> 00:16:44,290
<font color="#E5E5E5">easy enough</font><font color="#CCCCCC"> for people</font><font color="#E5E5E5"> who want to</font>

295
00:16:42,250 --> 00:16:46,390
implement<font color="#E5E5E5"> their own operators</font>

296
00:16:44,290 --> 00:16:49,360
you can't just easily just take<font color="#CCCCCC"> a</font><font color="#E5E5E5"> call</font>

297
00:16:46,390 --> 00:16:51,310
and starts<font color="#E5E5E5"> were implementing it but yeah</font>

298
00:16:49,360 --> 00:16:52,900
I guess<font color="#CCCCCC"> don't go by we expect to see</font>

299
00:16:51,310 --> 00:16:55,630
<font color="#E5E5E5">more and</font><font color="#CCCCCC"> more operators</font><font color="#E5E5E5"> being</font>

300
00:16:52,900 --> 00:16:58,650
implemented and<font color="#E5E5E5"> the last question have</font>

301
00:16:55,630 --> 00:17:02,320
you seen TF light but biking<font color="#CCCCCC"> rule yes</font>

302
00:16:58,650 --> 00:17:05,050
<font color="#CCCCCC">sorry recently yeah to be honest I think</font>

303
00:17:02,320 --> 00:17:08,230
<font color="#E5E5E5">it's a really cool idea but I haven't</font>

304
00:17:05,050 --> 00:17:10,448
<font color="#E5E5E5">really spent personal time in sort of</font>

305
00:17:08,230 --> 00:17:14,770
exploring<font color="#E5E5E5"> but Stefan why I really should</font>

306
00:17:10,449 --> 00:17:17,290
explore<font color="#CCCCCC"> we know floodlight is probably</font>

307
00:17:14,770 --> 00:17:18,699
<font color="#E5E5E5">not currently supporting MC use so that</font>

308
00:17:17,290 --> 00:17:21,420
<font color="#CCCCCC">could be one of the major difference</font>

309
00:17:18,699 --> 00:17:21,420
here<font color="#E5E5E5"> at the moment</font>

310
00:17:28,680 --> 00:17:35,880
<font color="#E5E5E5">okay thank you what is your most</font>

311
00:17:31,780 --> 00:17:37,450
restrained<font color="#E5E5E5"> resource is it from</font><font color="#CCCCCC"> your</font>

312
00:17:35,880 --> 00:17:41,380
<font color="#CCCCCC">approachin is it</font>

313
00:17:37,450 --> 00:17:43,630
MC<font color="#E5E5E5"> CPU</font><font color="#CCCCCC"> RAM flash</font><font color="#E5E5E5"> okay that's an</font>

314
00:17:41,380 --> 00:17:45,040
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> question when we were</font>

315
00:17:43,630 --> 00:17:47,260
designed<font color="#E5E5E5"> the thing we were kind of</font>

316
00:17:45,040 --> 00:17:49,180
assuming<font color="#E5E5E5"> the use cases might not be so</font>

317
00:17:47,260 --> 00:17:51,310
time<font color="#CCCCCC"> sensitive so it's gonna be real</font>

318
00:17:49,180 --> 00:17:53,500
near<font color="#E5E5E5"> real time but it's not</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be</font>

319
00:17:51,310 --> 00:17:56,230
give you like 20 frames per<font color="#E5E5E5"> second with</font>

320
00:17:53,500 --> 00:18:00,180
something right so keeping that in<font color="#CCCCCC"> mind</font>

321
00:17:56,230 --> 00:18:02,920
I would<font color="#E5E5E5"> say he said Ram</font>

322
00:18:00,180 --> 00:18:05,890
basically the<font color="#E5E5E5"> more rain you have</font><font color="#CCCCCC"> stopped</font>

323
00:18:02,920 --> 00:18:09,310
<font color="#CCCCCC">less chin and a convolution takes a</font><font color="#E5E5E5"> low</font>

324
00:18:05,890 --> 00:18:12,840
memory<font color="#E5E5E5"> so the more and you have the less</font>

325
00:18:09,310 --> 00:18:16,960
power it<font color="#E5E5E5"> consumes and the faster he runs</font>

326
00:18:12,840 --> 00:18:20,439
so that's personally I think<font color="#E5E5E5"> that's one</font>

327
00:18:16,960 --> 00:18:23,700
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the key thing and growing your</font>

328
00:18:20,440 --> 00:18:27,160
networks<font color="#CCCCCC"> it will again be rom your major</font>

329
00:18:23,700 --> 00:18:29,770
<font color="#CCCCCC">scaring you</font><font color="#E5E5E5"> me if you want to make a</font>

330
00:18:27,160 --> 00:18:32,880
bigger<font color="#CCCCCC"> network yeah yes I would say so</font>

331
00:18:29,770 --> 00:18:35,110
<font color="#CCCCCC">especially in the fully connected layer</font>

332
00:18:32,880 --> 00:18:38,110
the<font color="#E5E5E5"> measurement of the patient</font><font color="#CCCCCC"> dangers</font>

333
00:18:35,110 --> 00:18:40,229
so<font color="#E5E5E5"> large but as I was mentioning</font><font color="#CCCCCC"> that</font>

334
00:18:38,110 --> 00:18:43,270
<font color="#CCCCCC">kisame has sort of implementing</font><font color="#E5E5E5"> this</font>

335
00:18:40,230 --> 00:18:45,220
virtual memory or paging thing<font color="#E5E5E5"> hopefully</font>

336
00:18:43,270 --> 00:18:47,560
<font color="#CCCCCC">to make</font><font color="#E5E5E5"> things ugly easier</font>

337
00:18:45,220 --> 00:18:50,429
there's also trade-off between designs

338
00:18:47,560 --> 00:18:56,690
<font color="#CCCCCC">but yeah that's</font><font color="#E5E5E5"> why we're trying to do</font>

339
00:18:50,429 --> 00:18:56,690
and thank you any more<font color="#E5E5E5"> questions</font>

340
00:18:58,369 --> 00:19:03,799
<font color="#E5E5E5">okay thank you</font><font color="#CCCCCC"> very much</font><font color="#E5E5E5"> Neil all right</font>

341
00:19:01,110 --> 00:19:03,799
guys

342
00:19:03,890 --> 00:19:09,349
[Applause]

