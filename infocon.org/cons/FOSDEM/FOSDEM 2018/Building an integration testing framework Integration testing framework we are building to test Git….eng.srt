1
00:00:05,839 --> 00:00:10,280
we started in<font color="#CCCCCC"> two</font><font color="#E5E5E5"> minutes for the</font>

2
00:00:07,670 --> 00:00:13,490
recording<font color="#CCCCCC"> live stream but</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I</font>

3
00:00:10,280 --> 00:00:17,770
<font color="#E5E5E5">introduced try go walking</font><font color="#CCCCCC"> 4-bit</font><font color="#E5E5E5"> lab that</font>

4
00:00:13,490 --> 00:00:21,920
will talk about<font color="#CCCCCC"> Stoker Cuba needs</font>

5
00:00:17,770 --> 00:00:28,520
<font color="#E5E5E5">integration</font><font color="#CCCCCC"> testing so very interesting</font>

6
00:00:21,920 --> 00:00:30,289
subject<font color="#CCCCCC"> okay hello everyone and I see</font>

7
00:00:28,520 --> 00:00:32,750
that<font color="#E5E5E5"> the rooms also thanks</font><font color="#CCCCCC"> for coming to</font>

8
00:00:30,289 --> 00:00:34,699
<font color="#CCCCCC">listen</font><font color="#E5E5E5"> to my talk</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> name</font><font color="#CCCCCC"> is Greg Osby</font>

9
00:00:32,750 --> 00:00:37,909
<font color="#CCCCCC">zone and I work at</font><font color="#E5E5E5"> gate</font><font color="#CCCCCC"> lab as a senior</font>

10
00:00:34,699 --> 00:00:40,449
developer<font color="#E5E5E5"> focusing mostly on the CI</font>

11
00:00:37,909 --> 00:00:42,859
<font color="#CCCCCC">seedy area but also on test automation</font>

12
00:00:40,449 --> 00:00:45,108
<font color="#E5E5E5">so some of you</font><font color="#CCCCCC"> probably have never heard</font>

13
00:00:42,859 --> 00:00:47,359
<font color="#CCCCCC">about</font><font color="#E5E5E5"> get up so get up is the solution</font>

14
00:00:45,109 --> 00:00:49,789
that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> very similar to github but in</font>

15
00:00:47,359 --> 00:00:52,309
the<font color="#E5E5E5"> open core model which means that we</font>

16
00:00:49,789 --> 00:00:54,139
<font color="#E5E5E5">have a github Community Edition which is</font>

17
00:00:52,309 --> 00:00:57,440
<font color="#CCCCCC">a free</font><font color="#E5E5E5"> software free</font><font color="#CCCCCC"> open-source</font>

18
00:00:54,139 --> 00:01:00,799
<font color="#E5E5E5">software that you can install on your</font>

19
00:00:57,440 --> 00:01:02,318
server so today I<font color="#E5E5E5"> would like to tell you</font>

20
00:01:00,799 --> 00:01:12,500
about<font color="#E5E5E5"> building an end-to-end integration</font>

21
00:01:02,319 --> 00:01:15,890
testing framework<font color="#E5E5E5"> okay I will do my best</font>

22
00:01:12,500 --> 00:01:18,500
<font color="#CCCCCC">okay I'll do my</font><font color="#E5E5E5"> best</font>

23
00:01:15,890 --> 00:01:23,000
an integration testing framework called

24
00:01:18,500 --> 00:01:24,890
github<font color="#CCCCCC"> QA so end-to-end testing is a</font>

25
00:01:23,000 --> 00:01:27,500
strategy<font color="#CCCCCC"> used to check whether</font><font color="#E5E5E5"> your</font>

26
00:01:24,890 --> 00:01:29,990
software works as<font color="#CCCCCC"> expected from start to</font>

27
00:01:27,500 --> 00:01:33,679
finish<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can also use end-to-end</font>

28
00:01:29,990 --> 00:01:36,070
testing<font color="#CCCCCC"> to check</font><font color="#E5E5E5"> whether deployment</font>

29
00:01:33,679 --> 00:01:37,429
process or installation process is<font color="#E5E5E5"> okay</font>

30
00:01:36,070 --> 00:01:39,288
for example

31
00:01:37,429 --> 00:01:42,009
<font color="#E5E5E5">especially when you distribute some kind</font>

32
00:01:39,289 --> 00:01:44,600
of a package<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Debian</font><font color="#E5E5E5"> package or</font>

33
00:01:42,009 --> 00:01:48,079
<font color="#E5E5E5">docker image what we do what we do at</font>

34
00:01:44,600 --> 00:01:50,298
<font color="#E5E5E5">gate lab so we needed a end-to-end</font>

35
00:01:48,079 --> 00:01:53,538
integration testing framework we<font color="#E5E5E5"> because</font>

36
00:01:50,299 --> 00:01:55,939
we<font color="#E5E5E5"> had some major</font><font color="#CCCCCC"> problems in the past</font>

37
00:01:53,539 --> 00:01:58,609
with users not being able<font color="#E5E5E5"> to install</font><font color="#CCCCCC"> get</font>

38
00:01:55,939 --> 00:02:02,059
lab users<font color="#E5E5E5"> not being able to update</font>

39
00:01:58,609 --> 00:02:03,859
<font color="#E5E5E5">github we had some broken major features</font>

40
00:02:02,060 --> 00:02:06,380
like pushing to get up

41
00:02:03,859 --> 00:02:09,258
we had<font color="#E5E5E5"> also some broken deployments</font><font color="#CCCCCC"> to</font>

42
00:02:06,380 --> 00:02:14,049
get lab comm with cost us a lot of

43
00:02:09,258 --> 00:02:17,220
<font color="#E5E5E5">trouble so we knew that we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to</font>

44
00:02:14,050 --> 00:02:19,020
need end-to-end testing framework

45
00:02:17,220 --> 00:02:21,030
and in good<font color="#E5E5E5"> luck we</font><font color="#CCCCCC"> are using merge will</font>

46
00:02:19,020 --> 00:02:23,880
request<font color="#E5E5E5"> workflow which means that we</font>

47
00:02:21,030 --> 00:02:25,290
have<font color="#CCCCCC"> at depend on code review but code</font>

48
00:02:23,880 --> 00:02:28,530
review<font color="#CCCCCC"> is also</font><font color="#E5E5E5"> not a silver bullet</font>

49
00:02:25,290 --> 00:02:30,540
<font color="#E5E5E5">because sometimes contracts between</font>

50
00:02:28,530 --> 00:02:33,510
interfaces are not clearly<font color="#E5E5E5"> visible in</font>

51
00:02:30,540 --> 00:02:35,070
<font color="#E5E5E5">the code so in the past we had a merge</font>

52
00:02:33,510 --> 00:02:37,980
sequence which was basically<font color="#CCCCCC"> one-liner</font>

53
00:02:35,070 --> 00:02:40,650
<font color="#E5E5E5">reviewed by a few senior developers and</font>

54
00:02:37,980 --> 00:02:44,160
no one<font color="#E5E5E5"> was able to spot the bug in the</font>

55
00:02:40,650 --> 00:02:45,980
code<font color="#E5E5E5"> so before</font><font color="#CCCCCC"> that we'll probably</font><font color="#E5E5E5"> need</font>

56
00:02:44,160 --> 00:02:50,850
to build an end-to-end integration

57
00:02:45,980 --> 00:02:52,619
testing framework we discussed our goals

58
00:02:50,850 --> 00:02:56,040
and we decided<font color="#E5E5E5"> that we need to make it</font>

59
00:02:52,620 --> 00:03:00,120
possible<font color="#CCCCCC"> to run tests</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> CIE</font><font color="#E5E5E5"> CD</font>

60
00:02:56,040 --> 00:03:01,769
environment<font color="#CCCCCC"> to automate testing</font><font color="#E5E5E5"> we also</font>

61
00:03:00,120 --> 00:03:04,740
decide that we need<font color="#CCCCCC"> to test installation</font>

62
00:03:01,770 --> 00:03:07,350
<font color="#E5E5E5">process the deployment process</font><font color="#CCCCCC"> that we</font>

63
00:03:04,740 --> 00:03:09,870
<font color="#E5E5E5">want to make it easy to locally</font>

64
00:03:07,350 --> 00:03:13,530
reproduce failures and with that and

65
00:03:09,870 --> 00:03:15,990
that we also want to run tests against

66
00:03:13,530 --> 00:03:17,640
<font color="#E5E5E5">aging production or any other</font>

67
00:03:15,990 --> 00:03:22,560
installation like<font color="#E5E5E5"> on-premises</font>

68
00:03:17,640 --> 00:03:24,238
installation<font color="#E5E5E5"> these were our goals but</font>

69
00:03:22,560 --> 00:03:27,120
our ultimate<font color="#CCCCCC"> goal was to make</font><font color="#E5E5E5"> it</font>

70
00:03:24,239 --> 00:03:29,760
<font color="#E5E5E5">possible to run end-to-end tests in</font>

71
00:03:27,120 --> 00:03:31,519
merge request to catch bugs<font color="#CCCCCC"> before even</font>

72
00:03:29,760 --> 00:03:35,160
merging<font color="#CCCCCC"> them to a stable</font><font color="#E5E5E5"> branch or</font>

73
00:03:31,519 --> 00:03:36,510
master branch<font color="#E5E5E5"> we knew</font><font color="#CCCCCC"> that we're</font><font color="#E5E5E5"> going</font>

74
00:03:35,160 --> 00:03:38,579
<font color="#CCCCCC">to use</font><font color="#E5E5E5"> continuous integration to</font>

75
00:03:36,510 --> 00:03:40,140
automate testing and continuous

76
00:03:38,580 --> 00:03:42,750
integration is a software<font color="#CCCCCC"> development</font>

77
00:03:40,140 --> 00:03:45,119
<font color="#E5E5E5">practice</font><font color="#CCCCCC"> where you</font><font color="#E5E5E5"> wear</font><font color="#CCCCCC"> code is</font>

78
00:03:42,750 --> 00:03:47,900
integrated frequently and<font color="#CCCCCC"> were quite</font>

79
00:03:45,120 --> 00:03:52,019
lucky because<font color="#E5E5E5"> we had our own integrated</font>

80
00:03:47,900 --> 00:03:54,450
github<font color="#E5E5E5"> CI CD solution that's an</font>

81
00:03:52,019 --> 00:03:57,750
integrated product<font color="#E5E5E5"> you can use that</font>

82
00:03:54,450 --> 00:04:00,570
whenever<font color="#E5E5E5"> you push code to github</font><font color="#CCCCCC"> to see</font>

83
00:03:57,750 --> 00:04:02,310
continuous integration feedback<font color="#E5E5E5"> in merge</font>

84
00:04:00,570 --> 00:04:05,100
requests<font color="#E5E5E5"> it's a free open-source</font>

85
00:04:02,310 --> 00:04:08,760
software part of the github<font color="#CCCCCC"> community</font>

86
00:04:05,100 --> 00:04:13,079
<font color="#CCCCCC">edition as well</font><font color="#E5E5E5"> so a few notes</font><font color="#CCCCCC"> about</font>

87
00:04:08,760 --> 00:04:16,649
github CI CD logo in the in the<font color="#E5E5E5"> middle</font>

88
00:04:13,080 --> 00:04:18,630
it's a github instance when we<font color="#E5E5E5"> describe</font>

89
00:04:16,649 --> 00:04:21,089
github CIC architecture we refer to

90
00:04:18,630 --> 00:04:23,550
github instance as a coordinator<font color="#E5E5E5"> the</font>

91
00:04:21,089 --> 00:04:27,239
satellites<font color="#CCCCCC"> around our github runners and</font>

92
00:04:23,550 --> 00:04:30,180
<font color="#E5E5E5">you can add a runner to</font><font color="#CCCCCC"> the project you</font>

93
00:04:27,240 --> 00:04:30,810
<font color="#CCCCCC">can have multiple runners and runners</font>

94
00:04:30,180 --> 00:04:33,210
are<font color="#CCCCCC"> going to</font>

95
00:04:30,810 --> 00:04:35,280
all coordinators API<font color="#E5E5E5"> in order to pick</font>

96
00:04:33,210 --> 00:04:39,989
builds process them and<font color="#E5E5E5"> dimension would</font>

97
00:04:35,280 --> 00:04:44,219
push changes<font color="#E5E5E5"> a push</font><font color="#CCCCCC"> will result to</font><font color="#E5E5E5"> the</font>

98
00:04:39,990 --> 00:04:46,470
merge request<font color="#CCCCCC"> github</font><font color="#E5E5E5"> runner also</font>

99
00:04:44,220 --> 00:04:49,169
supports<font color="#E5E5E5"> workflow with</font><font color="#CCCCCC"> work clothes</font><font color="#E5E5E5"> with</font>

100
00:04:46,470 --> 00:04:52,169
<font color="#CCCCCC">brain tests with Dockers so end-to-end</font>

101
00:04:49,169 --> 00:04:54,630
testing is a great use case for<font color="#E5E5E5"> using</font>

102
00:04:52,169 --> 00:04:57,810
containers<font color="#E5E5E5"> we knew</font><font color="#CCCCCC"> that we want to</font><font color="#E5E5E5"> cover</font>

103
00:04:54,630 --> 00:05:00,469
scenarios like updating<font color="#E5E5E5"> get lab from</font>

104
00:04:57,810 --> 00:05:06,210
latest major version to current version

105
00:05:00,470 --> 00:05:08,270
or using<font color="#CCCCCC"> github</font><font color="#E5E5E5"> CRI to test</font><font color="#CCCCCC"> github CI so</font>

106
00:05:06,210 --> 00:05:10,138
we<font color="#E5E5E5"> wanted a test scenario</font><font color="#CCCCCC"> where we could</font>

107
00:05:08,270 --> 00:05:14,010
start<font color="#E5E5E5"> the container with gait lab</font>

108
00:05:10,139 --> 00:05:18,479
register runner and see<font color="#E5E5E5"> pipelines being</font>

109
00:05:14,010 --> 00:05:21,539
processed correctly<font color="#CCCCCC"> but how to do that</font>

110
00:05:18,479 --> 00:05:24,539
how to<font color="#CCCCCC"> design sort</font><font color="#E5E5E5"> of framework</font><font color="#CCCCCC"> like</font>

111
00:05:21,540 --> 00:05:27,330
that so in github<font color="#E5E5E5"> one of our core values</font>

112
00:05:24,540 --> 00:05:30,540
is<font color="#E5E5E5"> iteration so we decided</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we are</font>

113
00:05:27,330 --> 00:05:32,580
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> trust iteration again</font><font color="#E5E5E5"> and with</font>

114
00:05:30,540 --> 00:05:35,490
that and that we need<font color="#E5E5E5"> to start very</font>

115
00:05:32,580 --> 00:05:39,479
simple so we created a separate<font color="#CCCCCC"> project</font>

116
00:05:35,490 --> 00:05:42,419
called<font color="#CCCCCC"> github</font><font color="#E5E5E5"> QA we decided to use Ruby</font>

117
00:05:39,479 --> 00:05:44,070
capybara<font color="#E5E5E5"> WebKit and r-spec tools because</font>

118
00:05:42,419 --> 00:05:47,000
these were tools that get labs

119
00:05:44,070 --> 00:05:50,969
developers were already<font color="#E5E5E5"> familiar with</font>

120
00:05:47,000 --> 00:05:52,680
and we created<font color="#E5E5E5"> our</font><font color="#CCCCCC"> first and to end</font>

121
00:05:50,970 --> 00:05:55,800
integration testing scenario as you can

122
00:05:52,680 --> 00:05:57,720
see it's very<font color="#E5E5E5"> simple we</font><font color="#CCCCCC"> have a main page</font>

123
00:05:55,800 --> 00:06:00,150
<font color="#CCCCCC">that we are using to sign in using</font>

124
00:05:57,720 --> 00:06:03,240
credential credentials and then we

125
00:06:00,150 --> 00:06:07,400
expect to see text<font color="#E5E5E5"> signing successfully</font>

126
00:06:03,240 --> 00:06:11,970
on a page<font color="#E5E5E5"> so this is pretty simple and</font>

127
00:06:07,400 --> 00:06:15,060
page main is our first page object and

128
00:06:11,970 --> 00:06:17,220
page object it's not<font color="#CCCCCC"> a new pattern where</font>

129
00:06:15,060 --> 00:06:20,400
page objects is a<font color="#E5E5E5"> widely used pattern in</font>

130
00:06:17,220 --> 00:06:22,710
end-to-end testing page objects are very

131
00:06:20,400 --> 00:06:26,700
useful to abstract<font color="#E5E5E5"> away things that you</font>

132
00:06:22,710 --> 00:06:28,349
can do on a page and<font color="#E5E5E5"> later you can also</font>

133
00:06:26,700 --> 00:06:31,080
build<font color="#E5E5E5"> some features on top of page</font>

134
00:06:28,350 --> 00:06:34,080
objects as<font color="#E5E5E5"> you can see our page main</font>

135
00:06:31,080 --> 00:06:39,030
page object is<font color="#CCCCCC"> plain old</font><font color="#E5E5E5"> Ruby object</font>

136
00:06:34,080 --> 00:06:42,479
<font color="#E5E5E5">mixing mixing capybara DSL and</font><font color="#CCCCCC"> using</font>

137
00:06:39,030 --> 00:06:43,500
capybara to fill in forms<font color="#E5E5E5"> click buttons</font>

138
00:06:42,479 --> 00:06:45,210
and

139
00:06:43,500 --> 00:06:50,400
<font color="#E5E5E5">check if there's some content on the</font>

140
00:06:45,210 --> 00:06:53,880
page<font color="#E5E5E5"> we also added github CI</font>

141
00:06:50,400 --> 00:06:56,520
configuration file<font color="#E5E5E5"> to run into an</font>

142
00:06:53,880 --> 00:06:59,190
integration<font color="#E5E5E5"> test on every good push it's</font>

143
00:06:56,520 --> 00:07:00,780
also<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it was also quite simple</font><font color="#CCCCCC"> you</font>

144
00:06:59,190 --> 00:07:05,100
can see that we install some

145
00:07:00,780 --> 00:07:07,380
dependencies like<font color="#E5E5E5"> WebKit</font><font color="#CCCCCC"> that we have</font>

146
00:07:05,100 --> 00:07:09,990
only<font color="#E5E5E5"> one test job for testing gitlab</font>

147
00:07:07,380 --> 00:07:12,120
<font color="#E5E5E5">Community Edition</font><font color="#CCCCCC"> using a feature called</font>

148
00:07:09,990 --> 00:07:14,340
<font color="#E5E5E5">services so we use services to start</font>

149
00:07:12,120 --> 00:07:17,040
container with<font color="#CCCCCC"> github ze latest version</font>

150
00:07:14,340 --> 00:07:20,010
we export some environment variable and

151
00:07:17,040 --> 00:07:23,340
then we<font color="#E5E5E5"> just call a spec with capybara</font>

152
00:07:20,010 --> 00:07:24,000
which is testing<font color="#CCCCCC"> github from the</font>

153
00:07:23,340 --> 00:07:27,210
container

154
00:07:24,000 --> 00:07:28,710
later<font color="#E5E5E5"> we'll refine our CI configuration</font>

155
00:07:27,210 --> 00:07:31,049
file it looks<font color="#CCCCCC"> a little different</font>

156
00:07:28,710 --> 00:07:33,510
<font color="#E5E5E5">differently right now we are not using</font>

157
00:07:31,050 --> 00:07:38,480
services<font color="#E5E5E5"> well we actually use docker in</font>

158
00:07:33,510 --> 00:07:45,000
docker cell service and being QA is a

159
00:07:38,480 --> 00:07:47,640
wrapper around<font color="#E5E5E5"> docker so we knew that</font>

160
00:07:45,000 --> 00:07:49,919
<font color="#CCCCCC">end-to-end testing is not really fast</font>

161
00:07:47,640 --> 00:07:54,000
and<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> eventually will need to</font>

162
00:07:49,919 --> 00:07:56,909
heavily<font color="#E5E5E5"> paralyze our pipelines so</font><font color="#CCCCCC"> we</font>

163
00:07:54,000 --> 00:08:00,330
decided<font color="#E5E5E5"> to</font><font color="#CCCCCC"> design the tool in a way that</font>

164
00:07:56,910 --> 00:08:02,540
it's quite<font color="#E5E5E5"> easy to paralyze</font><font color="#CCCCCC"> tests</font><font color="#E5E5E5"> so we</font>

165
00:08:00,330 --> 00:08:05,460
knew that we that tests have to be

166
00:08:02,540 --> 00:08:06,990
idempotent<font color="#E5E5E5"> and isolated but it's quite</font>

167
00:08:05,460 --> 00:08:10,289
easy<font color="#CCCCCC"> to do that when you are actually</font>

168
00:08:06,990 --> 00:08:13,229
<font color="#E5E5E5">testing a stateful application so we</font>

169
00:08:10,290 --> 00:08:15,960
<font color="#CCCCCC">used feature in get lab called sub drops</font>

170
00:08:13,229 --> 00:08:19,590
so whenever we put up a<font color="#CCCCCC"> gate lab to a</font>

171
00:08:15,960 --> 00:08:22,620
test<font color="#CCCCCC"> harness we create a new</font><font color="#E5E5E5"> sub group</font>

172
00:08:19,590 --> 00:08:24,780
<font color="#E5E5E5">and then we also create a separate</font>

173
00:08:22,620 --> 00:08:27,960
project<font color="#E5E5E5"> for every test example which is</font>

174
00:08:24,780 --> 00:08:30,179
<font color="#E5E5E5">not particularly fast but because we can</font>

175
00:08:27,960 --> 00:08:31,440
paralyze everything and this<font color="#E5E5E5"> is</font>

176
00:08:30,180 --> 00:08:33,690
something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we can</font><font color="#CCCCCC"> actually optimize</font>

177
00:08:31,440 --> 00:08:39,110
later<font color="#CCCCCC"> we decided to stick to this</font>

178
00:08:33,690 --> 00:08:42,870
<font color="#E5E5E5">approach in the next iterations we added</font>

179
00:08:39,110 --> 00:08:46,950
some page objects we implement new test

180
00:08:42,870 --> 00:08:50,280
and then we encountered first major

181
00:08:46,950 --> 00:08:52,200
problem like both I'm taking almost<font color="#CCCCCC"> two</font>

182
00:08:50,280 --> 00:08:54,660
<font color="#CCCCCC">hours to build</font><font color="#E5E5E5"> get lab package and</font>

183
00:08:52,200 --> 00:08:57,210
docker image that we later wanted<font color="#E5E5E5"> to</font>

184
00:08:54,660 --> 00:09:01,980
test so before that<font color="#E5E5E5"> maybe</font>

185
00:08:57,210 --> 00:09:06,360
we can run tests against nightly<font color="#E5E5E5"> built</font>

186
00:09:01,980 --> 00:09:08,880
in 95 lines but feature like pipeline

187
00:09:06,360 --> 00:09:12,600
schedules<font color="#E5E5E5"> was missing also</font><font color="#CCCCCC"> other</font>

188
00:09:08,880 --> 00:09:14,370
features<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we could use like multi</font>

189
00:09:12,600 --> 00:09:17,510
project pipelines or<font color="#E5E5E5"> multi-level</font>

190
00:09:14,370 --> 00:09:20,790
container<font color="#E5E5E5"> registry images were missing</font>

191
00:09:17,510 --> 00:09:23,220
<font color="#CCCCCC">but</font><font color="#E5E5E5"> we were lucky</font><font color="#CCCCCC"> again because we could</font>

192
00:09:20,790 --> 00:09:25,730
build<font color="#E5E5E5"> features that we</font><font color="#CCCCCC"> needed to test</font>

193
00:09:23,220 --> 00:09:28,710
<font color="#CCCCCC">github</font><font color="#E5E5E5"> so we started building features</font>

194
00:09:25,730 --> 00:09:31,560
<font color="#E5E5E5">but first we had</font><font color="#CCCCCC"> to solve a problem of</font>

195
00:09:28,710 --> 00:09:33,470
merging gitlab<font color="#CCCCCC"> community edition to get</font>

196
00:09:31,560 --> 00:09:37,380
good<font color="#E5E5E5"> luck Enterprise Edition because</font>

197
00:09:33,470 --> 00:09:40,620
merge was happening once week which

198
00:09:37,380 --> 00:09:42,030
caused fragile<font color="#E5E5E5"> tests problem so there</font>

199
00:09:40,620 --> 00:09:44,790
are multiple definitions for fragile

200
00:09:42,030 --> 00:09:48,120
tests my<font color="#E5E5E5"> definition</font><font color="#CCCCCC"> is that you have</font>

201
00:09:44,790 --> 00:09:50,160
fragile tests when your tests<font color="#CCCCCC"> are not</font>

202
00:09:48,120 --> 00:09:52,230
able to<font color="#E5E5E5"> adapt to changes in your</font>

203
00:09:50,160 --> 00:09:54,839
<font color="#CCCCCC">codebase</font><font color="#E5E5E5"> so whenever you change</font>

204
00:09:52,230 --> 00:09:57,900
something in the codebase you constantly

205
00:09:54,840 --> 00:10:00,440
need<font color="#CCCCCC"> to update tests so</font><font color="#E5E5E5"> imagine a</font>

206
00:09:57,900 --> 00:10:05,209
scenario like<font color="#CCCCCC"> when some developer</font>

207
00:10:00,440 --> 00:10:09,240
changes<font color="#CCCCCC"> a page layout in</font><font color="#E5E5E5"> gate</font><font color="#CCCCCC"> lock and</font>

208
00:10:05,210 --> 00:10:11,250
because we have a good<font color="#E5E5E5"> documentation</font><font color="#CCCCCC"> he</font>

209
00:10:09,240 --> 00:10:15,240
or<font color="#CCCCCC"> she goes</font><font color="#E5E5E5"> to the github QA project to</font>

210
00:10:11,250 --> 00:10:17,880
update<font color="#CCCCCC"> patch object so we can test</font>

211
00:10:15,240 --> 00:10:20,070
github CI<font color="#E5E5E5"> community</font><font color="#CCCCCC"> edition but because</font>

212
00:10:17,880 --> 00:10:23,220
of the<font color="#E5E5E5"> weekly</font><font color="#CCCCCC"> c2e</font>

213
00:10:20,070 --> 00:10:25,560
emerge<font color="#E5E5E5"> github Enterprise Edition was</font>

214
00:10:23,220 --> 00:10:29,610
instantly outdated and<font color="#E5E5E5"> we had to wait</font>

215
00:10:25,560 --> 00:10:33,239
entire week before<font color="#CCCCCC"> the next merge being</font>

216
00:10:29,610 --> 00:10:35,910
done so we decided to resolve the

217
00:10:33,240 --> 00:10:39,000
problem<font color="#CCCCCC"> by moving all instant test</font>

218
00:10:35,910 --> 00:10:42,120
scenarios to see e and te repositories

219
00:10:39,000 --> 00:10:43,890
and from that<font color="#CCCCCC"> point all our page objects</font>

220
00:10:42,120 --> 00:10:47,520
are living in exactly the<font color="#E5E5E5"> same</font>

221
00:10:43,890 --> 00:10:50,330
<font color="#E5E5E5">repository like views and selectors that</font>

222
00:10:47,520 --> 00:10:52,590
<font color="#E5E5E5">page objects depend on</font><font color="#CCCCCC"> our so we also</font>

223
00:10:50,330 --> 00:10:54,510
change the responsibility of the github

224
00:10:52,590 --> 00:10:57,750
<font color="#E5E5E5">to a project which I told you</font><font color="#CCCCCC"> was a</font>

225
00:10:54,510 --> 00:11:00,780
separate<font color="#CCCCCC"> project and now</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> test</font>

226
00:10:57,750 --> 00:11:03,210
<font color="#E5E5E5">environment orchestration tool</font><font color="#CCCCCC"> week</font><font color="#E5E5E5"> Emma</font>

227
00:11:00,780 --> 00:11:06,120
<font color="#CCCCCC">fie</font><font color="#E5E5E5"> that it ended now available on</font>

228
00:11:03,210 --> 00:11:09,300
rubygems for everyone to<font color="#CCCCCC"> use it also to</font>

229
00:11:06,120 --> 00:11:10,730
test their own instance in order<font color="#CCCCCC"> to make</font>

230
00:11:09,300 --> 00:11:15,389
github QA

231
00:11:10,730 --> 00:11:19,920
<font color="#E5E5E5">life easier we also had to dr. eyes</font><font color="#CCCCCC"> our</font>

232
00:11:15,389 --> 00:11:22,529
test harness and then after a few<font color="#CCCCCC"> more</font>

233
00:11:19,920 --> 00:11:27,089
iteration<font color="#E5E5E5"> our building did a great job</font>

234
00:11:22,529 --> 00:11:29,910
with reducing<font color="#E5E5E5"> the build time down to 20</font>

235
00:11:27,089 --> 00:11:31,670
<font color="#CCCCCC">minutes we are</font><font color="#E5E5E5"> now merging people up</font>

236
00:11:29,910 --> 00:11:33,868
committee addition to<font color="#E5E5E5"> Enterprise Edition</font>

237
00:11:31,670 --> 00:11:35,759
<font color="#CCCCCC">every three hours</font><font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> an</font>

238
00:11:33,869 --> 00:11:38,160
automated process<font color="#CCCCCC"> it's not really</font>

239
00:11:35,759 --> 00:11:41,550
relevant and<font color="#E5E5E5"> important</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> github</font><font color="#CCCCCC"> way</font>

240
00:11:38,160 --> 00:11:44,279
right<font color="#CCCCCC"> now because</font><font color="#E5E5E5"> after we move test</font>

241
00:11:41,550 --> 00:11:45,899
scenarios to see<font color="#CCCCCC"> nte</font><font color="#E5E5E5"> Enterprise Edition</font>

242
00:11:44,279 --> 00:11:47,879
<font color="#CCCCCC">logging behind is not a huge problem</font>

243
00:11:45,899 --> 00:11:50,389
anymore but it's much easier<font color="#CCCCCC"> to develop</font>

244
00:11:47,879 --> 00:11:52,860
features when these two projects<font color="#E5E5E5"> are</font>

245
00:11:50,389 --> 00:11:55,589
synchronized<font color="#E5E5E5"> then we build some features</font>

246
00:11:52,860 --> 00:11:58,350
like<font color="#E5E5E5"> pipeline schedules manual actions</font>

247
00:11:55,589 --> 00:12:00,689
and blocking manual actions<font color="#CCCCCC"> multi-level</font>

248
00:11:58,350 --> 00:12:03,059
container registry<font color="#CCCCCC"> post race and we</font>

249
00:12:00,689 --> 00:12:05,368
found a<font color="#CCCCCC"> workaround for missing feature</font>

250
00:12:03,059 --> 00:12:07,618
called multi project pipelines<font color="#E5E5E5"> and we</font>

251
00:12:05,369 --> 00:12:10,160
are now<font color="#E5E5E5"> working on making it</font><font color="#CCCCCC"> and making</font>

252
00:12:07,619 --> 00:12:13,410
it a first-class feature in<font color="#CCCCCC"> gridlock</font>

253
00:12:10,160 --> 00:12:16,139
and then again<font color="#E5E5E5"> imagine a scenario like</font>

254
00:12:13,410 --> 00:12:18,600
when a team<font color="#CCCCCC"> of front-end developers</font>

255
00:12:16,139 --> 00:12:20,339
decides to rebuild a top navigation<font color="#E5E5E5"> bar</font>

256
00:12:18,600 --> 00:12:23,399
in<font color="#CCCCCC"> github like</font><font color="#E5E5E5"> it's something</font><font color="#CCCCCC"> that we</font>

257
00:12:20,339 --> 00:12:24,899
<font color="#CCCCCC">actually did have a</font><font color="#E5E5E5"> release ago but they</font>

258
00:12:23,399 --> 00:12:27,480
don't know<font color="#E5E5E5"> that there is a</font><font color="#CCCCCC"> QA</font>

259
00:12:24,899 --> 00:12:31,639
subdirectory in the project<font color="#E5E5E5"> holding all</font>

260
00:12:27,480 --> 00:12:35,999
the page objects we<font color="#CCCCCC"> have so they forget</font>

261
00:12:31,639 --> 00:12:39,480
<font color="#E5E5E5">forgot to update page objects so how to</font>

262
00:12:35,999 --> 00:12:42,720
solve<font color="#E5E5E5"> that</font><font color="#CCCCCC"> problem we decided</font><font color="#E5E5E5"> to solve</font>

263
00:12:39,480 --> 00:12:46,759
it by<font color="#E5E5E5"> making it possible</font><font color="#CCCCCC"> to couple every</font>

264
00:12:42,720 --> 00:12:49,199
page object with views and selectors

265
00:12:46,759 --> 00:12:51,629
from the project and this<font color="#E5E5E5"> is not a</font>

266
00:12:49,199 --> 00:12:55,439
<font color="#E5E5E5">perfect solution we're aware of that</font>

267
00:12:51,629 --> 00:12:58,199
it was kind of<font color="#E5E5E5"> 20%</font><font color="#CCCCCC"> after a third</font><font color="#E5E5E5"> 80%</font>

268
00:12:55,439 --> 00:12:59,910
<font color="#CCCCCC">result solution for us and it would be</font>

269
00:12:58,199 --> 00:13:05,008
obviously<font color="#E5E5E5"> much better to a certain</font>

270
00:12:59,910 --> 00:13:06,540
elements existence on generated page but

271
00:13:05,009 --> 00:13:11,490
this<font color="#CCCCCC"> is something that</font><font color="#E5E5E5"> we plan to</font><font color="#CCCCCC"> work</font>

272
00:13:06,540 --> 00:13:13,860
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> next iteration so but this</font>

273
00:13:11,490 --> 00:13:15,990
<font color="#E5E5E5">solution works for now works for us</font>

274
00:13:13,860 --> 00:13:20,220
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> well now</font><font color="#E5E5E5"> because whenever someone</font>

275
00:13:15,990 --> 00:13:23,670
pushes<font color="#E5E5E5"> a code to</font><font color="#CCCCCC"> github</font><font color="#E5E5E5"> with views being</font>

276
00:13:20,220 --> 00:13:25,920
change or<font color="#E5E5E5"> selectors</font>

277
00:13:23,670 --> 00:13:29,699
we have the job<font color="#CCCCCC"> that verifies the</font>

278
00:13:25,920 --> 00:13:32,550
contract between page<font color="#E5E5E5"> objects and views</font>

279
00:13:29,700 --> 00:13:34,980
that<font color="#CCCCCC"> page object depends on in the</font>

280
00:13:32,550 --> 00:13:38,160
continuous integration so it's instantly

281
00:13:34,980 --> 00:13:41,760
<font color="#CCCCCC">visible for developer that github QA is</font>

282
00:13:38,160 --> 00:13:45,120
not<font color="#E5E5E5"> synchronized with the code that have</font>

283
00:13:41,760 --> 00:13:48,540
been changed<font color="#E5E5E5"> we also decided to make</font><font color="#CCCCCC"> it</font>

284
00:13:45,120 --> 00:13:51,690
<font color="#E5E5E5">easier for developers to contribute and</font>

285
00:13:48,540 --> 00:13:54,060
<font color="#E5E5E5">we designed</font><font color="#CCCCCC"> the concept</font><font color="#E5E5E5"> like give</font><font color="#CCCCCC"> lab QA</font>

286
00:13:51,690 --> 00:13:57,750
<font color="#E5E5E5">factories this is this concept is</font><font color="#CCCCCC"> very</font>

287
00:13:54,060 --> 00:14:00,869
similar to<font color="#E5E5E5"> factory bot formerly known as</font>

288
00:13:57,750 --> 00:14:04,650
<font color="#CCCCCC">a factory girl project known for a lot</font>

289
00:14:00,870 --> 00:14:07,050
<font color="#CCCCCC">of Ruby on Rails</font><font color="#E5E5E5"> developers so whenever</font>

290
00:14:04,650 --> 00:14:11,400
you design a factory<font color="#E5E5E5"> you make it part it</font>

291
00:14:07,050 --> 00:14:13,890
is possible to add dependencies<font color="#CCCCCC"> like</font>

292
00:14:11,400 --> 00:14:17,569
project<font color="#CCCCCC"> factory depends on a group being</font>

293
00:14:13,890 --> 00:14:20,760
<font color="#E5E5E5">fabricated before fabricating project so</font>

294
00:14:17,570 --> 00:14:23,700
whenever in the code<font color="#E5E5E5"> someone wants to</font>

295
00:14:20,760 --> 00:14:27,689
fabricate project<font color="#E5E5E5"> but there is no</font>

296
00:14:23,700 --> 00:14:29,280
explicit<font color="#CCCCCC"> explicit group assigned to the</font>

297
00:14:27,690 --> 00:14:32,280
factory<font color="#E5E5E5"> we fabricate all the</font>

298
00:14:29,280 --> 00:14:36,329
<font color="#E5E5E5">dependencies including group for the</font>

299
00:14:32,280 --> 00:14:38,939
project and then we<font color="#E5E5E5"> manage</font><font color="#CCCCCC"> to add manual</font>

300
00:14:36,330 --> 00:14:40,800
action and<font color="#CCCCCC"> with that change we are</font>

301
00:14:38,940 --> 00:14:44,190
checked our ultimate goal of bringing

302
00:14:40,800 --> 00:14:46,410
<font color="#CCCCCC">github QA to merge</font><font color="#E5E5E5"> requests so now</font>

303
00:14:44,190 --> 00:14:52,500
whenever someone clicks<font color="#E5E5E5"> package</font><font color="#CCCCCC"> queue a</font>

304
00:14:46,410 --> 00:14:56,819
manual action<font color="#E5E5E5"> all the get upgrade tests</font>

305
00:14:52,500 --> 00:15:00,480
this<font color="#E5E5E5"> code in</font><font color="#CCCCCC"> a merge request from start</font>

306
00:14:56,820 --> 00:15:02,580
to finish<font color="#E5E5E5"> and obviously because manual</font>

307
00:15:00,480 --> 00:15:05,540
actions are in github<font color="#CCCCCC"> are optional which</font>

308
00:15:02,580 --> 00:15:08,040
means that this stage has been skipped

309
00:15:05,540 --> 00:15:10,620
<font color="#CCCCCC">it's still possible to</font><font color="#E5E5E5"> merge a merge</font>

310
00:15:08,040 --> 00:15:12,180
request without<font color="#E5E5E5"> running end to end</font><font color="#CCCCCC"> test</font>

311
00:15:10,620 --> 00:15:13,800
for your<font color="#E5E5E5"> changes but we have this</font>

312
00:15:12,180 --> 00:15:18,089
feature<font color="#E5E5E5"> called blocking manual actions</font>

313
00:15:13,800 --> 00:15:20,540
when when you make action blocking it's

314
00:15:18,090 --> 00:15:25,260
not possible to merge Ameriquest<font color="#E5E5E5"> until</font>

315
00:15:20,540 --> 00:15:28,920
action succeeds<font color="#CCCCCC"> so now our github QA</font>

316
00:15:25,260 --> 00:15:34,500
process looks<font color="#CCCCCC"> like this</font><font color="#E5E5E5"> in the CEO an or</font>

317
00:15:28,920 --> 00:15:37,260
<font color="#CCCCCC">a II project someone figures QA action</font>

318
00:15:34,500 --> 00:15:40,050
QA action starts a<font color="#E5E5E5"> brand new pipeline in</font>

319
00:15:37,260 --> 00:15:42,270
github<font color="#CCCCCC"> omnibus project Clapham use</font>

320
00:15:40,050 --> 00:15:45,030
project is responsible for<font color="#E5E5E5"> building gait</font>

321
00:15:42,270 --> 00:15:47,180
lab packages building with docker images

322
00:15:45,030 --> 00:15:50,610
and pushing them to the registry<font color="#E5E5E5"> and</font>

323
00:15:47,180 --> 00:15:55,010
also omnibus<font color="#E5E5E5"> later triggers pipeline</font><font color="#CCCCCC"> the</font>

324
00:15:50,610 --> 00:15:57,410
<font color="#E5E5E5">github</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> a project</font><font color="#CCCCCC"> github</font><font color="#E5E5E5"> QA pulls</font>

325
00:15:55,010 --> 00:16:01,230
images from the container registry

326
00:15:57,410 --> 00:16:03,270
<font color="#E5E5E5">orchestrates test environment and runs</font>

327
00:16:01,230 --> 00:16:06,360
<font color="#E5E5E5">end-to-end tests against test</font>

328
00:16:03,270 --> 00:16:08,130
environment<font color="#E5E5E5"> later we propagate pipeline</font>

329
00:16:06,360 --> 00:16:10,740
status upstream directly into the<font color="#E5E5E5"> merge</font>

330
00:16:08,130 --> 00:16:15,960
request to make it possible for

331
00:16:10,740 --> 00:16:18,060
developers<font color="#CCCCCC"> to see the steps and now live</font>

332
00:16:15,960 --> 00:16:20,490
demo<font color="#E5E5E5"> so I know that</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> at</font>

333
00:16:18,060 --> 00:16:23,609
conferences<font color="#CCCCCC"> love</font><font color="#E5E5E5"> live demos there are so</font>

334
00:16:20,490 --> 00:16:25,110
many things<font color="#E5E5E5"> that can go</font><font color="#CCCCCC"> wrong</font><font color="#E5E5E5"> so so</font>

335
00:16:23,610 --> 00:16:29,060
let's hope<font color="#E5E5E5"> that's going to work this</font>

336
00:16:25,110 --> 00:16:31,920
time so I'm going<font color="#E5E5E5"> to open</font><font color="#CCCCCC"> a new console</font>

337
00:16:29,060 --> 00:16:35,839
<font color="#E5E5E5">I'm going to make this text a little</font>

338
00:16:31,920 --> 00:16:41,579
bigger<font color="#CCCCCC"> okay I think it's visible</font><font color="#E5E5E5"> bigger</font>

339
00:16:35,840 --> 00:16:46,310
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> it's okay the second</font><font color="#CCCCCC"> one as</font>

340
00:16:41,580 --> 00:16:46,310
you can<font color="#CCCCCC"> see I have no containers</font><font color="#E5E5E5"> running</font>

341
00:16:46,760 --> 00:16:55,530
now and<font color="#E5E5E5"> now let's try executing comment</font>

342
00:16:49,740 --> 00:17:04,680
like<font color="#E5E5E5"> get lab QA test instance in which</font>

343
00:16:55,530 --> 00:17:08,069
<font color="#CCCCCC">seee</font><font color="#E5E5E5"> okay let's see what happens okay</font><font color="#CCCCCC"> so</font>

344
00:17:04,680 --> 00:17:10,610
let's go up as<font color="#E5E5E5"> you can see we add them</font>

345
00:17:08,069 --> 00:17:15,480
to pull<font color="#E5E5E5"> docker image from docker hub</font>

346
00:17:10,609 --> 00:17:19,530
<font color="#E5E5E5">then we create a docker</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> and then</font>

347
00:17:15,480 --> 00:17:21,720
<font color="#E5E5E5">we start get lab with docker run because</font>

348
00:17:19,530 --> 00:17:23,750
it's the first run it will take a few

349
00:17:21,720 --> 00:17:28,170
<font color="#E5E5E5">minutes for get up to configure itself</font>

350
00:17:23,750 --> 00:17:29,880
so it's<font color="#CCCCCC"> happening here we have</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> la</font>

351
00:17:28,170 --> 00:17:34,640
<font color="#CCCCCC">pomme news project built in to get up</font>

352
00:17:29,880 --> 00:17:37,710
and it's<font color="#CCCCCC"> omnibus doing its work here</font>

353
00:17:34,640 --> 00:17:39,240
yeah<font color="#CCCCCC"> so I can show another thing that</font>

354
00:17:37,710 --> 00:17:42,210
might be<font color="#E5E5E5"> interesting as you can see we</font>

355
00:17:39,240 --> 00:17:46,590
have test instance in which<font color="#CCCCCC"> seee and</font><font color="#E5E5E5"> now</font>

356
00:17:42,210 --> 00:17:47,560
let's go<font color="#E5E5E5"> to our slide number 14</font><font color="#CCCCCC"> and you</font>

357
00:17:46,590 --> 00:17:50,050
can see

358
00:17:47,560 --> 00:17:52,360
I think it's visible that<font color="#E5E5E5"> in the CI</font>

359
00:17:50,050 --> 00:17:55,510
environment<font color="#E5E5E5"> we have pretty much the same</font>

360
00:17:52,360 --> 00:17:58,449
<font color="#CCCCCC">comment and actually get lab -</font><font color="#E5E5E5"> QA</font>

361
00:17:55,510 --> 00:18:00,670
comment<font color="#CCCCCC"> is a wrapper around</font><font color="#E5E5E5"> being</font><font color="#CCCCCC"> away</font>

362
00:17:58,450 --> 00:18:03,880
so<font color="#E5E5E5"> we are running exactly</font><font color="#CCCCCC"> the same</font>

363
00:18:00,670 --> 00:18:07,240
<font color="#E5E5E5">comment in the continuous integration</font>

364
00:18:03,880 --> 00:18:10,810
like we can run locally using<font color="#E5E5E5"> github</font><font color="#CCCCCC"> QA</font>

365
00:18:07,240 --> 00:18:13,930
gem this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a common line interface</font><font color="#E5E5E5"> that</font>

366
00:18:10,810 --> 00:18:14,950
comes from the gem that's available

367
00:18:13,930 --> 00:18:18,340
<font color="#CCCCCC">Rubick</font><font color="#E5E5E5"> gems</font>

368
00:18:14,950 --> 00:18:23,220
so let's go down to<font color="#CCCCCC"> the bottom of</font><font color="#E5E5E5"> the</font>

369
00:18:18,340 --> 00:18:29,020
build log<font color="#E5E5E5"> it's taking a few</font><font color="#CCCCCC"> minutes for</font>

370
00:18:23,220 --> 00:18:39,460
github QA to start<font color="#E5E5E5"> get lab get lab needs</font>

371
00:18:29,020 --> 00:18:42,310
<font color="#E5E5E5">to configure itself so whenever we</font>

372
00:18:39,460 --> 00:18:46,710
trigger a package to a manual<font color="#E5E5E5"> action in</font>

373
00:18:42,310 --> 00:18:50,919
<font color="#CCCCCC">mercy Quest</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> argument to</font><font color="#E5E5E5"> the</font>

374
00:18:46,710 --> 00:18:54,670
developed way C stands<font color="#E5E5E5"> for Community</font>

375
00:18:50,920 --> 00:18:56,860
Edition<font color="#E5E5E5"> obviously but we can pass a new</font>

376
00:18:54,670 --> 00:18:59,170
URL to the image<font color="#E5E5E5"> in the registry here</font>

377
00:18:56,860 --> 00:19:04,179
<font color="#E5E5E5">which means that we can test any image</font>

378
00:18:59,170 --> 00:19:09,370
<font color="#E5E5E5">we get lab this way</font><font color="#CCCCCC"> ok so we are</font><font color="#E5E5E5"> now</font>

379
00:19:04,180 --> 00:19:11,910
starting all the services<font color="#E5E5E5"> a daughter in</font>

380
00:19:09,370 --> 00:19:14,469
the container<font color="#CCCCCC"> as you can see that github</font>

381
00:19:11,910 --> 00:19:20,200
<font color="#E5E5E5">QA is now waiting</font><font color="#CCCCCC"> for get up to start</font>

382
00:19:14,470 --> 00:19:23,130
and<font color="#E5E5E5"> now I can go to my browser</font><font color="#CCCCCC"> and enter</font>

383
00:19:20,200 --> 00:19:29,110
an address like get lab<font color="#CCCCCC"> c e</font>

384
00:19:23,130 --> 00:19:34,960
<font color="#CCCCCC">nightly test yeah and i</font><font color="#E5E5E5"> should</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able</font>

385
00:19:29,110 --> 00:19:41,620
to<font color="#CCCCCC"> log in to get lab as you can see we</font>

386
00:19:34,960 --> 00:19:44,260
have no projects and because<font color="#E5E5E5"> our spec</font>

387
00:19:41,620 --> 00:19:47,919
<font color="#E5E5E5">suit is randomized our spec we decided</font>

388
00:19:44,260 --> 00:19:50,440
to run tests for creating an<font color="#E5E5E5"> issue which</font>

389
00:19:47,920 --> 00:19:53,410
means that an issue<font color="#E5E5E5"> should probably have</font>

390
00:19:50,440 --> 00:19:55,540
dependency for a<font color="#CCCCCC"> project so we should be</font>

391
00:19:53,410 --> 00:19:57,990
able<font color="#E5E5E5"> to see that here after refreshing a</font>

392
00:19:55,540 --> 00:19:57,990
few times

393
00:20:01,830 --> 00:20:07,540
is the first one<font color="#E5E5E5"> so we need to create</font>

394
00:20:04,720 --> 00:20:10,360
all these subgroups<font color="#E5E5E5"> for them for the</font>

395
00:20:07,540 --> 00:20:14,860
github<font color="#E5E5E5"> QA and give up</font><font color="#CCCCCC"> Kwai</font><font color="#E5E5E5"> sandbox</font>

396
00:20:10,360 --> 00:20:17,919
<font color="#E5E5E5">top-level group as well</font><font color="#CCCCCC"> so it can take a</font>

397
00:20:14,860 --> 00:20:29,219
few<font color="#E5E5E5"> seconds</font><font color="#CCCCCC"> I think it should be already</font>

398
00:20:17,920 --> 00:20:29,220
<font color="#E5E5E5">here no not yet</font>

399
00:20:29,910 --> 00:20:32,600
maybe this is one of<font color="#E5E5E5"> these things that</font>

400
00:20:31,950 --> 00:20:34,549
<font color="#E5E5E5">can go</font><font color="#CCCCCC"> wrong</font>

401
00:20:32,600 --> 00:20:40,530
[Laughter]

402
00:20:34,549 --> 00:20:44,460
let's wait<font color="#E5E5E5"> till tomorrow yeah</font>

403
00:20:40,530 --> 00:20:48,299
<font color="#E5E5E5">okay let's maybe</font><font color="#CCCCCC"> go to groups we have a</font>

404
00:20:44,460 --> 00:20:51,510
<font color="#E5E5E5">sound</font><font color="#CCCCCC"> box created we have</font><font color="#E5E5E5"> test name</font>

405
00:20:48,299 --> 00:20:58,710
space<font color="#E5E5E5"> creator no project here yet</font>

406
00:20:51,510 --> 00:21:01,320
oh we have a project<font color="#E5E5E5"> so next we have</font>

407
00:20:58,710 --> 00:21:04,980
<font color="#E5E5E5">text test for sacred variables we have</font>

408
00:21:01,320 --> 00:21:08,870
<font color="#CCCCCC">quite a few tests here but I want to</font>

409
00:21:04,980 --> 00:21:12,299
wait until<font color="#E5E5E5"> r-spec select</font><font color="#CCCCCC"> tests for</font>

410
00:21:08,870 --> 00:21:17,149
creating a new<font color="#E5E5E5"> pipeline okay now we</font><font color="#CCCCCC"> have</font>

411
00:21:12,299 --> 00:21:19,679
<font color="#CCCCCC">tests for the IP I creating camera</font><font color="#E5E5E5"> quest</font>

412
00:21:17,150 --> 00:21:25,549
so we should see a project<font color="#E5E5E5"> with a merge</font>

413
00:21:19,679 --> 00:21:25,549
request<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> security variables so</font>

414
00:21:31,429 --> 00:21:36,419
<font color="#E5E5E5">now as I said we have all the</font><font color="#CCCCCC"> tests</font>

415
00:21:34,320 --> 00:21:38,610
isolated and bind<font color="#CCCCCC"> important and</font><font color="#E5E5E5"> because</font>

416
00:21:36,419 --> 00:21:41,039
we create a separate<font color="#E5E5E5"> project for every</font>

417
00:21:38,610 --> 00:21:47,939
<font color="#E5E5E5">test example</font><font color="#CCCCCC"> these tests are completely</font>

418
00:21:41,039 --> 00:21:51,260
<font color="#CCCCCC">decoupled and isolated yes that's that's</font>

419
00:21:47,940 --> 00:21:55,020
that's why yes it was telling you about

420
00:21:51,260 --> 00:21:58,530
parallelization<font color="#CCCCCC"> right so we</font><font color="#E5E5E5"> can paralyze</font>

421
00:21:55,020 --> 00:22:02,960
the statute and it will<font color="#CCCCCC"> eventually run</font>

422
00:21:58,530 --> 00:22:08,490
much faster<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> okay so we have now</font>

423
00:22:02,960 --> 00:22:11,460
<font color="#CCCCCC">test for</font><font color="#E5E5E5"> CI CD pipelines</font><font color="#CCCCCC"> so we are</font>

424
00:22:08,490 --> 00:22:16,770
pulling<font color="#E5E5E5"> get lap runner</font><font color="#CCCCCC"> we are running</font>

425
00:22:11,460 --> 00:22:22,289
and registering<font color="#CCCCCC"> it</font><font color="#E5E5E5"> and we are pushing</font>

426
00:22:16,770 --> 00:22:23,940
get<font color="#CCCCCC"> lap CI</font><font color="#E5E5E5"> why am L as you can see it</font>

427
00:22:22,289 --> 00:22:25,760
should be there so<font color="#E5E5E5"> you can see that we</font>

428
00:22:23,940 --> 00:22:29,669
have<font color="#E5E5E5"> pipelines running</font>

429
00:22:25,760 --> 00:22:33,299
we have pipeline with all the jobs one

430
00:22:29,669 --> 00:22:37,260
job<font color="#CCCCCC"> managed</font><font color="#E5E5E5"> to succeed we have echo okay</font>

431
00:22:33,299 --> 00:22:39,090
job succeeded<font color="#E5E5E5"> and yeah that's it</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

432
00:22:37,260 --> 00:22:42,070
are now using<font color="#CCCCCC"> get</font><font color="#E5E5E5"> lab CI to test get lab</font>

433
00:22:39,090 --> 00:22:46,540
CI and we are using docker in

434
00:22:42,070 --> 00:22:50,020
actually in docker so it can be quite

435
00:22:46,540 --> 00:22:58,629
complex<font color="#E5E5E5"> but it works</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so let's go</font>

436
00:22:50,020 --> 00:23:00,970
back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the slides</font><font color="#E5E5E5"> okay so a few lessons</font>

437
00:22:58,630 --> 00:23:03,400
learned<font color="#E5E5E5"> first lesson</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> learned</font>

438
00:23:00,970 --> 00:23:05,500
that there is no silver<font color="#E5E5E5"> bullet</font><font color="#CCCCCC"> in</font>

439
00:23:03,400 --> 00:23:07,600
end-to-end testing because how you

440
00:23:05,500 --> 00:23:10,780
end-to-end test your software<font color="#E5E5E5"> heavily</font>

441
00:23:07,600 --> 00:23:15,000
depends on how you manage<font color="#CCCCCC"> to shape</font>

442
00:23:10,780 --> 00:23:19,300
processes around<font color="#E5E5E5"> deployment development</font>

443
00:23:15,000 --> 00:23:21,430
installation process so there's this

444
00:23:19,300 --> 00:23:23,590
great<font color="#E5E5E5"> paper by Fred Brooks about</font>

445
00:23:21,430 --> 00:23:24,970
essential complexity and accidental

446
00:23:23,590 --> 00:23:27,340
complexity and that<font color="#E5E5E5"> there is no silver</font>

447
00:23:24,970 --> 00:23:28,810
<font color="#CCCCCC">bullet in software engineering so I</font>

448
00:23:27,340 --> 00:23:31,330
think that is very<font color="#E5E5E5"> relevant for</font>

449
00:23:28,810 --> 00:23:35,800
<font color="#E5E5E5">end-to-end testing because essential</font>

450
00:23:31,330 --> 00:23:37,929
<font color="#E5E5E5">complexity is you know a deciding</font><font color="#CCCCCC"> factor</font>

451
00:23:35,800 --> 00:23:41,770
in how your<font color="#E5E5E5"> end-to-end testing framework</font>

452
00:23:37,930 --> 00:23:45,190
is going<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> look like another</font>

453
00:23:41,770 --> 00:23:47,050
another lesson learned<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> testing</font>

454
00:23:45,190 --> 00:23:49,810
shows the presence<font color="#CCCCCC"> not the absence of</font>

455
00:23:47,050 --> 00:23:52,149
<font color="#E5E5E5">bugs which in other words means that you</font>

456
00:23:49,810 --> 00:23:54,399
<font color="#CCCCCC">won't</font><font color="#E5E5E5"> catch bugs in code that</font><font color="#CCCCCC"> you don't</font>

457
00:23:52,150 --> 00:23:56,950
<font color="#CCCCCC">have tests nervous for so this is a</font>

458
00:23:54,400 --> 00:23:59,110
great quote by<font color="#E5E5E5"> Edgar the Dijkstra who is</font>

459
00:23:56,950 --> 00:24:01,530
believed to<font color="#CCCCCC"> be a great grandfather of</font>

460
00:23:59,110 --> 00:24:04,810
<font color="#E5E5E5">modern software development and testing</font>

461
00:24:01,530 --> 00:24:07,330
and I think that's that's<font color="#E5E5E5"> true and</font><font color="#CCCCCC"> that</font>

462
00:24:04,810 --> 00:24:11,470
<font color="#CCCCCC">we will</font><font color="#E5E5E5"> eventually eat something more at</font>

463
00:24:07,330 --> 00:24:14,409
<font color="#CCCCCC">git lab to test github so I personally</font>

464
00:24:11,470 --> 00:24:18,820
believe<font color="#E5E5E5"> that canary deployments on</font>

465
00:24:14,410 --> 00:24:21,850
<font color="#E5E5E5">kubernetes are a great huge thing being</font>

466
00:24:18,820 --> 00:24:26,010
able to incrementally roll out your

467
00:24:21,850 --> 00:24:27,939
changes<font color="#CCCCCC"> to your users</font><font color="#E5E5E5"> using tools</font><font color="#CCCCCC"> like</font>

468
00:24:26,010 --> 00:24:32,110
exceptions monitoring<font color="#E5E5E5"> performance</font>

469
00:24:27,940 --> 00:24:34,780
<font color="#E5E5E5">monitoring security testing to guide you</font>

470
00:24:32,110 --> 00:24:38,290
<font color="#CCCCCC">until up to</font><font color="#E5E5E5"> 100%</font>

471
00:24:34,780 --> 00:24:41,260
roll<font color="#CCCCCC"> out is a huge thing and at</font><font color="#E5E5E5"> github</font>

472
00:24:38,290 --> 00:24:43,899
we heavily bet on the<font color="#CCCCCC"> kubernetes</font><font color="#E5E5E5"> and we</font>

473
00:24:41,260 --> 00:24:47,430
are building<font color="#E5E5E5"> a lot of features into</font>

474
00:24:43,900 --> 00:24:49,810
github<font color="#E5E5E5"> to make testing gitlab easier and</font>

475
00:24:47,430 --> 00:24:53,230
because we<font color="#CCCCCC"> are building</font><font color="#E5E5E5"> features</font><font color="#CCCCCC"> it'll</font>

476
00:24:49,810 --> 00:24:54,250
get<font color="#CCCCCC"> love our users can also use this</font>

477
00:24:53,230 --> 00:24:58,210
<font color="#E5E5E5">rotary</font><font color="#CCCCCC"> so</font>

478
00:24:54,250 --> 00:24:59,830
imagine a scenario<font color="#CCCCCC"> when you can you need</font>

479
00:24:58,210 --> 00:25:02,260
<font color="#E5E5E5">test your software then you can feature</font>

480
00:24:59,830 --> 00:25:06,370
test your software then you<font color="#CCCCCC"> can build a</font>

481
00:25:02,260 --> 00:25:11,039
package<font color="#E5E5E5"> test it with a tool</font><font color="#CCCCCC"> like github</font>

482
00:25:06,370 --> 00:25:14,678
<font color="#E5E5E5">QA and then start incremental rollout</font>

483
00:25:11,039 --> 00:25:18,750
<font color="#E5E5E5">guided by techniques like performance</font>

484
00:25:14,679 --> 00:25:21,760
monitoring exceptions monitoring and

485
00:25:18,750 --> 00:25:25,990
<font color="#E5E5E5">security testing for example until you</font>

486
00:25:21,760 --> 00:25:28,270
reach<font color="#CCCCCC"> 100% rollout and</font><font color="#E5E5E5"> only then you</font>

487
00:25:25,990 --> 00:25:30,549
<font color="#CCCCCC">click a merge button in a merge</font><font color="#E5E5E5"> sequence</font>

488
00:25:28,270 --> 00:25:32,230
<font color="#E5E5E5">because only using this strategy we'll</font>

489
00:25:30,549 --> 00:25:34,570
<font color="#CCCCCC">be able to know that</font><font color="#E5E5E5"> your feature is</font>

490
00:25:32,230 --> 00:25:36,760
<font color="#E5E5E5">production ready before merging into</font><font color="#CCCCCC"> the</font>

491
00:25:34,570 --> 00:25:39,059
stable or master branch<font color="#CCCCCC"> I know that a</font>

492
00:25:36,760 --> 00:25:41,408
few<font color="#CCCCCC"> companies are doing that</font><font color="#E5E5E5"> already and</font>

493
00:25:39,059 --> 00:25:46,408
at github we are building a lot<font color="#E5E5E5"> of</font>

494
00:25:41,409 --> 00:25:50,669
<font color="#E5E5E5">features</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make this workflow possible</font>

495
00:25:46,409 --> 00:25:53,799
<font color="#E5E5E5">it might take us a few months together</font>

496
00:25:50,669 --> 00:25:55,390
<font color="#E5E5E5">to be able to test github this way but</font>

497
00:25:53,799 --> 00:25:57,639
<font color="#E5E5E5">we'll eventually probably gather and</font>

498
00:25:55,390 --> 00:26:01,000
we'll also build<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of features that</font>

499
00:25:57,640 --> 00:26:03,789
other people can<font color="#CCCCCC"> use so I believe that</font>

500
00:26:01,000 --> 00:26:07,150
products quality<font color="#E5E5E5"> is not only a perfect</font>

501
00:26:03,789 --> 00:26:09,820
code<font color="#E5E5E5"> products</font><font color="#CCCCCC"> qualities a combination of</font>

502
00:26:07,150 --> 00:26:12,490
users happiness<font color="#E5E5E5"> developers happiness</font>

503
00:26:09,820 --> 00:26:14,530
<font color="#E5E5E5">product managers happiness and company</font>

504
00:26:12,490 --> 00:26:16,440
<font color="#CCCCCC">well-being and I would like to end this</font>

505
00:26:14,530 --> 00:26:18,970
<font color="#E5E5E5">talk with a nice quote from Tom DeMarco</font>

506
00:26:16,440 --> 00:26:20,860
<font color="#E5E5E5">product quality is a function of how</font>

507
00:26:18,970 --> 00:26:23,140
much it changes<font color="#CCCCCC"> world for the better</font>

508
00:26:20,860 --> 00:26:25,178
<font color="#E5E5E5">and I believe</font><font color="#CCCCCC"> that github strives for</font>

509
00:26:23,140 --> 00:26:29,370
changing the<font color="#E5E5E5"> world for the better</font>

510
00:26:25,179 --> 00:26:29,370
that's all thank<font color="#CCCCCC"> you</font>

511
00:26:32,380 --> 00:26:47,510
questions well we are using<font color="#E5E5E5"> so the</font>

512
00:26:43,610 --> 00:26:51,049
question is<font color="#E5E5E5"> are we doing any testing</font>

513
00:26:47,510 --> 00:26:53,799
with real<font color="#CCCCCC"> browsers so good luck QA uses</font>

514
00:26:51,049 --> 00:26:56,720
Google Chrome<font color="#CCCCCC"> browser in a headless mode</font>

515
00:26:53,799 --> 00:26:59,929
<font color="#CCCCCC">took click you know stuff in the gate</font>

516
00:26:56,720 --> 00:27:02,360
lab we<font color="#E5E5E5"> can also disable headless mode</font>

517
00:26:59,929 --> 00:27:05,600
and we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see in the real time what's</font>

518
00:27:02,360 --> 00:27:09,039
happening and how github create

519
00:27:05,600 --> 00:27:09,039
navigates through the gate lab<font color="#E5E5E5"> two</font>

520
00:27:09,429 --> 00:27:18,260
different types now<font color="#E5E5E5"> only Google Chrome a</font>

521
00:27:12,740 --> 00:27:23,289
but now well it's a<font color="#E5E5E5"> start it's the first</font>

522
00:27:18,260 --> 00:27:23,289
iteration right<font color="#CCCCCC"> yes</font>

523
00:27:28,570 --> 00:27:33,408
future<font color="#E5E5E5"> okay so the future despite of the</font>

524
00:27:31,730 --> 00:27:35,840
workflow with<font color="#CCCCCC"> Mirchi quest that i</font>

525
00:27:33,409 --> 00:27:39,679
described<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you is that we are now</font>

526
00:27:35,840 --> 00:27:41,299
<font color="#E5E5E5">working on cloud native helm chart to</font>

527
00:27:39,679 --> 00:27:44,149
make it possible to<font color="#E5E5E5"> deploy get lab to</font>

528
00:27:41,299 --> 00:27:46,549
kubernetes and we are also going to use

529
00:27:44,149 --> 00:27:48,949
<font color="#E5E5E5">home with github query because as i said</font>

530
00:27:46,549 --> 00:27:50,840
<font color="#E5E5E5">we also want to test deployment</font><font color="#CCCCCC"> and the</font>

531
00:27:48,950 --> 00:27:52,549
installation process<font color="#CCCCCC"> and currently we</font>

532
00:27:50,840 --> 00:27:54,918
are building a big monolithic docker

533
00:27:52,549 --> 00:27:57,500
image which were testing<font color="#E5E5E5"> we've developed</font>

534
00:27:54,919 --> 00:28:00,770
way but eventually<font color="#CCCCCC"> we will</font><font color="#E5E5E5"> have a stable</font>

535
00:27:57,500 --> 00:28:03,919
<font color="#CCCCCC">helm chart that</font><font color="#E5E5E5"> will also use to create</font>

536
00:28:00,770 --> 00:28:06,139
<font color="#E5E5E5">a test environment and</font><font color="#CCCCCC"> will need</font><font color="#E5E5E5"> to run</font>

537
00:28:03,919 --> 00:28:08,240
<font color="#E5E5E5">github query against that this kind of</font>

538
00:28:06,140 --> 00:28:12,279
<font color="#E5E5E5">test environment that answer your</font>

539
00:28:08,240 --> 00:28:12,279
<font color="#E5E5E5">question</font><font color="#CCCCCC"> okay thanks</font>

540
00:28:19,809 --> 00:28:26,750
yes we have<font color="#CCCCCC"> Dockers running into Dockers</font>

541
00:28:23,030 --> 00:28:29,629
<font color="#CCCCCC">well this is</font><font color="#E5E5E5"> quite complex so currently</font>

542
00:28:26,750 --> 00:28:32,059
we are<font color="#CCCCCC"> using</font><font color="#E5E5E5"> docker engine in the</font><font color="#CCCCCC"> CIA</font>

543
00:28:29,630 --> 00:28:34,970
<font color="#E5E5E5">environment</font><font color="#CCCCCC"> all our files</font><font color="#E5E5E5"> are being</font>

544
00:28:32,059 --> 00:28:37,668
processed<font color="#E5E5E5"> inside the docker</font><font color="#CCCCCC"> so in order</font>

545
00:28:34,970 --> 00:28:40,669
<font color="#E5E5E5">to make the workflow</font><font color="#CCCCCC"> the same locally</font>

546
00:28:37,669 --> 00:28:42,320
and in the<font color="#CCCCCC"> CIA environment we have to</font>

547
00:28:40,669 --> 00:28:56,809
use docker in docker in the CI

548
00:28:42,320 --> 00:29:00,340
environment<font color="#CCCCCC"> doctoring docker is a</font>

549
00:28:56,809 --> 00:29:00,340
<font color="#E5E5E5">service so</font>

550
00:29:17,420 --> 00:29:24,030
well I'm not<font color="#E5E5E5"> sure if I understand the</font>

551
00:29:19,710 --> 00:29:26,090
question<font color="#CCCCCC"> okay so let's let's</font><font color="#E5E5E5"> meet after</font>

552
00:29:24,030 --> 00:29:29,810
<font color="#CCCCCC">a talk so but I will try to explain</font>

553
00:29:26,090 --> 00:29:36,929
<font color="#E5E5E5">maybe I managed to get it right so in</font>

554
00:29:29,810 --> 00:29:40,889
github way we use docker in docker<font color="#E5E5E5"> but</font>

555
00:29:36,930 --> 00:29:43,050
the architecture<font color="#CCCCCC"> is quite complex github</font>

556
00:29:40,890 --> 00:29:46,410
QA is responsible<font color="#CCCCCC"> for starting</font><font color="#E5E5E5"> container</font>

557
00:29:43,050 --> 00:29:48,690
with<font color="#E5E5E5"> github or multiple containers for</font>

558
00:29:46,410 --> 00:29:50,700
example in the<font color="#E5E5E5"> test scenario where</font><font color="#CCCCCC"> we</font>

559
00:29:48,690 --> 00:29:52,380
test get lab geo which is Enterprise

560
00:29:50,700 --> 00:29:54,990
Edition feature so we<font color="#E5E5E5"> need multiple</font>

561
00:29:52,380 --> 00:29:57,690
<font color="#E5E5E5">containers with good luck but we also</font>

562
00:29:54,990 --> 00:30:00,810
need<font color="#E5E5E5"> to start container with instance</font>

563
00:29:57,690 --> 00:30:02,850
test scenario which<font color="#E5E5E5"> we built whenever we</font>

564
00:30:00,810 --> 00:30:05,300
<font color="#E5E5E5">talk a new version of github or whenever</font>

565
00:30:02,850 --> 00:30:08,550
we build<font color="#CCCCCC"> github we</font><font color="#E5E5E5"> also build a</font>

566
00:30:05,300 --> 00:30:12,030
corresponding integration test<font color="#E5E5E5"> docker</font>

567
00:30:08,550 --> 00:30:13,950
container<font color="#E5E5E5"> so in order to make it</font>

568
00:30:12,030 --> 00:30:17,129
possible<font color="#E5E5E5"> to execute test we linked</font>

569
00:30:13,950 --> 00:30:19,230
containers together<font color="#E5E5E5"> but also inside the</font>

570
00:30:17,130 --> 00:30:22,020
container with test we have docker

571
00:30:19,230 --> 00:30:24,660
available which we do by mounting socket

572
00:30:22,020 --> 00:30:32,820
<font color="#E5E5E5">in the in the in the</font><font color="#CCCCCC"> container</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm</font>

573
00:30:24,660 --> 00:30:35,900
not<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> if this answer</font><font color="#E5E5E5"> is question yes</font>

574
00:30:32,820 --> 00:30:35,899
we<font color="#CCCCCC"> also do that</font>

575
00:30:37,150 --> 00:30:42,559
well it is because<font color="#CCCCCC"> in the CI environment</font>

576
00:30:39,890 --> 00:30:46,040
<font color="#CCCCCC">this is full the doctor in docker using</font>

577
00:30:42,559 --> 00:30:46,670
<font color="#CCCCCC">privilege mode but in the in the local</font>

578
00:30:46,040 --> 00:30:51,010
workflow

579
00:30:46,670 --> 00:30:51,010
this is the single docker engine<font color="#CCCCCC"> okay</font>

580
00:31:03,670 --> 00:31:10,370
now currently<font color="#CCCCCC"> we only do click driven</font>

581
00:31:07,550 --> 00:31:13,070
<font color="#E5E5E5">testing so whenever we want to create a</font>

582
00:31:10,370 --> 00:31:15,439
project or<font color="#E5E5E5"> something like this we click</font>

583
00:31:13,070 --> 00:31:18,950
our<font color="#CCCCCC"> wafer get lab to</font><font color="#E5E5E5"> create a project</font>

584
00:31:15,440 --> 00:31:20,960
<font color="#CCCCCC">group and all the things we're thinking</font>

585
00:31:18,950 --> 00:31:22,910
about<font color="#E5E5E5"> making possible to use the API to</font>

586
00:31:20,960 --> 00:31:25,580
speed up the process a little<font color="#CCCCCC"> but</font>

587
00:31:22,910 --> 00:31:27,260
currently<font color="#E5E5E5"> we are</font><font color="#CCCCCC"> only testing</font><font color="#E5E5E5"> API so we</font>

588
00:31:25,580 --> 00:31:30,439
are not<font color="#E5E5E5"> using API to create</font><font color="#CCCCCC"> resources</font>

589
00:31:27,260 --> 00:31:37,820
<font color="#E5E5E5">our gait lab</font><font color="#CCCCCC"> quick factories depend on</font>

590
00:31:30,440 --> 00:31:39,650
only<font color="#E5E5E5"> page objects currently yes of</font>

591
00:31:37,820 --> 00:31:43,149
course we have<font color="#E5E5E5"> you need to test we have</font>

592
00:31:39,650 --> 00:31:46,520
integration tests<font color="#E5E5E5"> we have feature tests</font>

593
00:31:43,150 --> 00:31:56,720
<font color="#E5E5E5">and integration tests on top of the</font>

594
00:31:46,520 --> 00:31:59,570
testing program<font color="#CCCCCC"> pyranose right so we</font>

595
00:31:56,720 --> 00:32:02,600
have a test scenario<font color="#E5E5E5"> using get lab QA</font>

596
00:31:59,570 --> 00:32:06,290
which is going<font color="#CCCCCC"> to start container with</font>

597
00:32:02,600 --> 00:32:10,969
previous version mount some volumes

598
00:32:06,290 --> 00:32:14,480
<font color="#CCCCCC">share</font><font color="#E5E5E5"> them and after the after</font><font color="#CCCCCC"> stopping</font>

599
00:32:10,970 --> 00:32:16,730
<font color="#E5E5E5">the previous container we use the same</font>

600
00:32:14,480 --> 00:32:18,950
<font color="#CCCCCC">volume</font><font color="#E5E5E5"> use to start the new one and the</font>

601
00:32:16,730 --> 00:32:23,330
code inside<font color="#CCCCCC"> the</font><font color="#E5E5E5"> container is responsible</font>

602
00:32:18,950 --> 00:32:35,260
for<font color="#CCCCCC"> updating gate lock no we don't we</font>

603
00:32:23,330 --> 00:32:35,260
don't<font color="#E5E5E5"> use</font><font color="#CCCCCC"> proceeded</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> okay yes</font>

604
00:32:40,210 --> 00:32:47,409
that we want to<font color="#E5E5E5"> express we don't know</font>

605
00:32:50,919 --> 00:32:56,450
well not<font color="#E5E5E5"> really usually users that</font>

606
00:32:53,870 --> 00:32:59,059
encounter<font color="#E5E5E5"> bugs submit issues with the</font>

607
00:32:56,450 --> 00:33:00,830
description<font color="#CCCCCC"> and we have in our issue</font>

608
00:32:59,059 --> 00:33:03,490
tracker<font color="#CCCCCC"> something</font><font color="#E5E5E5"> like ten thousands of</font>

609
00:33:00,830 --> 00:33:05,990
<font color="#E5E5E5">issues which huge part of these are bags</font>

610
00:33:03,490 --> 00:33:10,370
<font color="#CCCCCC">its which is perfectly</font><font color="#E5E5E5"> normal in that</font>

611
00:33:05,990 --> 00:33:12,200
<font color="#E5E5E5">project</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> that scale but yeah so</font><font color="#CCCCCC"> did</font>

612
00:33:10,370 --> 00:33:14,539
<font color="#CCCCCC">lab clay is still in early development</font>

613
00:33:12,200 --> 00:33:16,220
phase<font color="#E5E5E5"> we would</font><font color="#CCCCCC"> learn to make it</font><font color="#E5E5E5"> easier</font>

614
00:33:14,539 --> 00:33:19,070
to<font color="#E5E5E5"> write tests to use domain-specific</font>

615
00:33:16,220 --> 00:33:22,760
language and stuff<font color="#E5E5E5"> like that but as you</font>

616
00:33:19,070 --> 00:33:39,559
told you we plan to iterate<font color="#CCCCCC"> and yeah</font>

617
00:33:22,760 --> 00:33:42,649
and that's it well yes of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> we when</font>

618
00:33:39,559 --> 00:33:45,980
we design github<font color="#CCCCCC"> Kawai</font><font color="#E5E5E5"> we had to make it</font>

619
00:33:42,649 --> 00:33:48,799
possible to fail the CI pipeline

620
00:33:45,980 --> 00:33:51,049
whenever developed<font color="#CCCCCC"> we encounters an</font>

621
00:33:48,799 --> 00:33:53,570
<font color="#CCCCCC">Engram integration</font><font color="#E5E5E5"> problem and we do</font>

622
00:33:51,049 --> 00:33:56,740
that so<font color="#CCCCCC"> we we</font><font color="#E5E5E5"> check for example exit</font>

623
00:33:53,570 --> 00:34:00,678
status<font color="#E5E5E5"> of the docker engine binary right</font>

624
00:33:56,740 --> 00:34:02,990
<font color="#CCCCCC">we also</font><font color="#E5E5E5"> whenever we encounter exception</font>

625
00:34:00,679 --> 00:34:07,629
on the page<font color="#E5E5E5"> we also</font><font color="#CCCCCC"> failed the pipeline</font>

626
00:34:02,990 --> 00:34:10,099
so<font color="#CCCCCC"> we we had to incorporate</font><font color="#E5E5E5"> a lot of</font>

627
00:34:07,629 --> 00:34:12,460
techniques<font color="#E5E5E5"> like this</font><font color="#CCCCCC"> into the get</font>

628
00:34:10,099 --> 00:34:12,460
upgrade

629
00:34:13,000 --> 00:34:18,020
<font color="#CCCCCC">okay so</font><font color="#E5E5E5"> I think that that's all thank</font>

630
00:34:16,310 --> 00:34:19,850
<font color="#E5E5E5">you</font><font color="#CCCCCC"> very much</font><font color="#E5E5E5"> for listening</font><font color="#CCCCCC"> I really</font>

631
00:34:18,020 --> 00:34:24,989
appreciate you coming<font color="#E5E5E5"> thanks again</font>

632
00:34:19,850 --> 00:34:24,989
[Applause]

