1
00:00:04,660 --> 00:00:11,600
all right we're gonna get<font color="#E5E5E5"> started I am</font>

2
00:00:08,930 --> 00:00:13,969
<font color="#CCCCCC">going to introduce</font><font color="#E5E5E5"> Tristan talking about</font>

3
00:00:11,600 --> 00:00:16,400
introducing<font color="#CCCCCC"> build stream distribution I</font>

4
00:00:13,969 --> 00:00:19,060
got me a little an integration tool<font color="#E5E5E5"> so</font>

5
00:00:16,400 --> 00:00:19,060
let's<font color="#CCCCCC"> give him a hand</font>

6
00:00:19,670 --> 00:00:25,250
[Applause]

7
00:00:24,130 --> 00:00:28,029
mm-hmm

8
00:00:25,250 --> 00:00:28,029
put this

9
00:00:32,650 --> 00:00:41,930
hi so I've come to<font color="#E5E5E5"> talk again about</font>

10
00:00:37,790 --> 00:00:46,580
<font color="#E5E5E5">build stream it's been a year</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> now</font>

11
00:00:41,930 --> 00:00:48,710
it's time<font color="#E5E5E5"> for the second talk so what</font>

12
00:00:46,580 --> 00:00:50,930
last time<font color="#CCCCCC"> I didn't</font><font color="#E5E5E5"> go through this in</font>

13
00:00:48,710 --> 00:00:54,500
the right order<font color="#CCCCCC"> so what is build stream</font>

14
00:00:50,930 --> 00:00:57,019
<font color="#CCCCCC">right</font><font color="#E5E5E5"> before I start talking</font><font color="#CCCCCC"> what is</font>

15
00:00:54,500 --> 00:00:57,410
<font color="#CCCCCC">this</font><font color="#E5E5E5"> guys talking about right so what is</font>

16
00:00:57,020 --> 00:00:59,390
it

17
00:00:57,410 --> 00:01:01,819
so it's an integration<font color="#E5E5E5"> tool we're trying</font>

18
00:00:59,390 --> 00:01:03,530
to call it an integration tool because

19
00:01:01,820 --> 00:01:05,030
we've been calling<font color="#E5E5E5"> it a meta build tool</font>

20
00:01:03,530 --> 00:01:08,840
and nobody really<font color="#E5E5E5"> knows what that</font><font color="#CCCCCC"> means</font>

21
00:01:05,030 --> 00:01:11,240
<font color="#E5E5E5">so it's a tool which builds but it's not</font>

22
00:01:08,840 --> 00:01:13,520
make and it's not see make so it

23
00:01:11,240 --> 00:01:15,408
delegates builds to other systems and<font color="#E5E5E5"> it</font>

24
00:01:13,520 --> 00:01:20,020
puts it<font color="#E5E5E5"> all</font><font color="#CCCCCC"> together and you have</font><font color="#E5E5E5"> an</font>

25
00:01:15,409 --> 00:01:20,020
integration<font color="#E5E5E5"> it's an integration tool</font>

26
00:01:21,700 --> 00:01:26,630
<font color="#CCCCCC">build stream is a pipeline of file</font>

27
00:01:24,650 --> 00:01:29,180
system data<font color="#E5E5E5"> permutations so it's</font>

28
00:01:26,630 --> 00:01:32,060
<font color="#E5E5E5">completely abstract</font><font color="#CCCCCC"> and it lets you run</font>

29
00:01:29,180 --> 00:01:34,670
<font color="#CCCCCC">up operations inside an isolated</font>

30
00:01:32,060 --> 00:01:38,120
environment<font color="#CCCCCC"> in a pipeline</font><font color="#E5E5E5"> where elements</font>

31
00:01:34,670 --> 00:01:41,690
<font color="#E5E5E5">have source inputs and dependency inputs</font>

32
00:01:38,120 --> 00:01:44,060
<font color="#E5E5E5">and they create outputs so the basic of</font>

33
00:01:41,690 --> 00:01:46,880
it is you<font color="#E5E5E5"> have file system data in file</font>

34
00:01:44,060 --> 00:01:50,020
system<font color="#E5E5E5"> data out and things</font><font color="#CCCCCC"> that happen</font>

35
00:01:46,880 --> 00:01:50,020
in<font color="#CCCCCC"> between</font>

36
00:01:50,049 --> 00:01:58,070
sandbox<font color="#CCCCCC"> xck execution environment so we</font>

37
00:01:54,530 --> 00:02:00,350
<font color="#E5E5E5">guarantee that we guarantee there's no</font>

38
00:01:58,070 --> 00:02:04,689
<font color="#E5E5E5">host tool contamination or anything and</font>

39
00:02:00,350 --> 00:02:08,508
everything happens inside<font color="#CCCCCC"> the container</font>

40
00:02:04,689 --> 00:02:10,818
<font color="#CCCCCC">we do caching</font><font color="#E5E5E5"> and sharing of build</font>

41
00:02:08,508 --> 00:02:13,279
results so if you have a lot<font color="#CCCCCC"> of people</font>

42
00:02:10,818 --> 00:02:15,319
building<font color="#CCCCCC"> together</font><font color="#E5E5E5"> already build</font>

43
00:02:13,280 --> 00:02:19,040
something you don't<font color="#E5E5E5"> have to build it</font>

44
00:02:15,319 --> 00:02:21,260
will download it<font color="#E5E5E5"> if it exists and we</font>

45
00:02:19,040 --> 00:02:26,319
reduce<font color="#CCCCCC"> the amount of compiles on the</font>

46
00:02:21,260 --> 00:02:29,149
developer laptop at least and

47
00:02:26,319 --> 00:02:31,970
<font color="#E5E5E5">multipurpose build instructions and</font>

48
00:02:29,150 --> 00:02:35,150
metadata<font color="#CCCCCC"> is to say that you can</font><font color="#E5E5E5"> have a</font>

49
00:02:31,970 --> 00:02:36,769
project that outputs<font color="#E5E5E5"> various things with</font>

50
00:02:35,150 --> 00:02:38,720
the<font color="#E5E5E5"> same stack so generally in</font><font color="#CCCCCC"> Bill</font>

51
00:02:36,769 --> 00:02:41,269
<font color="#E5E5E5">stream you're going to be working</font><font color="#CCCCCC"> with a</font>

52
00:02:38,720 --> 00:02:43,700
series of<font color="#CCCCCC"> components</font><font color="#E5E5E5"> and not just one</font>

53
00:02:41,269 --> 00:02:46,160
<font color="#CCCCCC">component but we have an example at the</font>

54
00:02:43,700 --> 00:02:50,179
end<font color="#E5E5E5"> with just one component and a way to</font>

55
00:02:46,160 --> 00:02:52,609
distribute<font color="#E5E5E5"> it but you can basically have</font>

56
00:02:50,180 --> 00:02:55,130
<font color="#E5E5E5">projects that have different outputs and</font>

57
00:02:52,610 --> 00:02:58,310
using the same stack so you<font color="#CCCCCC"> don't have</font>

58
00:02:55,130 --> 00:03:02,090
to have various collections<font color="#E5E5E5"> of build</font>

59
00:02:58,310 --> 00:03:06,620
stories<font color="#E5E5E5"> for your software</font><font color="#CCCCCC"> and it has a</font>

60
00:03:02,090 --> 00:03:08,510
developer story which is late in the

61
00:03:06,620 --> 00:03:10,280
discovery process<font color="#E5E5E5"> we found out that's</font>

62
00:03:08,510 --> 00:03:18,170
actually<font color="#CCCCCC"> the coolest</font><font color="#E5E5E5"> thing that</font><font color="#CCCCCC"> we do</font>

63
00:03:10,280 --> 00:03:20,299
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> so onto the show so I'm gonna</font>

64
00:03:18,170 --> 00:03:24,500
introduce<font color="#E5E5E5"> our build stream beaver</font>

65
00:03:20,299 --> 00:03:26,900
it was our youngest team member<font color="#E5E5E5"> who we</font>

66
00:03:24,500 --> 00:03:30,350
affectionately called Tristan<font color="#E5E5E5"> because</font>

67
00:03:26,900 --> 00:03:33,109
he's so bright and and it's also<font color="#E5E5E5"> his</font>

68
00:03:30,350 --> 00:03:35,480
<font color="#CCCCCC">name</font><font color="#E5E5E5"> who said that it should</font><font color="#CCCCCC"> definitely</font>

69
00:03:33,109 --> 00:03:38,950
<font color="#E5E5E5">be</font><font color="#CCCCCC"> a beaver because a beaver builds</font>

70
00:03:35,480 --> 00:03:38,950
<font color="#E5E5E5">things in a stream</font>

71
00:03:43,850 --> 00:03:48,660
so here<font color="#E5E5E5"> I've launched it on</font><font color="#CCCCCC"> an epiphany</font>

72
00:03:46,440 --> 00:03:53,040
build but I can see that we<font color="#CCCCCC"> really can't</font>

73
00:03:48,660 --> 00:03:54,180
see this<font color="#E5E5E5"> very well which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> unfortunate</font>

74
00:03:53,040 --> 00:03:58,290
because I have a lot of<font color="#E5E5E5"> these</font>

75
00:03:54,180 --> 00:04:01,440
screenshots<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can't you know</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can't</font>

76
00:03:58,290 --> 00:04:04,560
<font color="#CCCCCC">see that okay well I'll have to</font><font color="#E5E5E5"> explain</font>

77
00:04:01,440 --> 00:04:08,280
as we<font color="#CCCCCC"> go along so what are our</font>

78
00:04:04,560 --> 00:04:10,110
motivations for<font color="#CCCCCC"> doing build stream so</font>

79
00:04:08,280 --> 00:04:12,209
I'm going<font color="#CCCCCC"> to try to jump through this</font>

80
00:04:10,110 --> 00:04:17,820
<font color="#CCCCCC">segment</font><font color="#E5E5E5"> because it can be a lot</font><font color="#CCCCCC"> of</font>

81
00:04:12,209 --> 00:04:20,970
<font color="#E5E5E5">talking so one of the things we wanted</font>

82
00:04:17,820 --> 00:04:22,680
to<font color="#E5E5E5"> do of course</font><font color="#CCCCCC"> we want to save time</font>

83
00:04:20,970 --> 00:04:25,919
we're in automation we're automating

84
00:04:22,680 --> 00:04:28,350
<font color="#E5E5E5">stuff we want to reduce the amount</font><font color="#CCCCCC"> of</font>

85
00:04:25,919 --> 00:04:31,859
work<font color="#CCCCCC"> that people</font><font color="#E5E5E5"> are doing so we want to</font>

86
00:04:28,350 --> 00:04:35,130
kill<font color="#E5E5E5"> cross compilation because from what</font>

87
00:04:31,860 --> 00:04:39,180
I've seen there's a lot of developer

88
00:04:35,130 --> 00:04:41,219
hours and projects spending and these

89
00:04:39,180 --> 00:04:43,020
are like<font color="#E5E5E5"> really good developers that</font>

90
00:04:41,220 --> 00:04:44,610
I've worked<font color="#E5E5E5"> with in other projects and</font>

91
00:04:43,020 --> 00:04:47,010
<font color="#E5E5E5">I'm like what are you</font><font color="#CCCCCC"> doing they're</font>

92
00:04:44,610 --> 00:04:49,500
spending their days<font color="#E5E5E5"> writing these</font>

93
00:04:47,010 --> 00:04:51,750
one-line patches and<font color="#E5E5E5"> up streaming these</font>

94
00:04:49,500 --> 00:04:55,110
one-line patches to projects to make

95
00:04:51,750 --> 00:04:58,950
<font color="#E5E5E5">sure that they compile</font><font color="#CCCCCC"> across</font><font color="#E5E5E5"> upstream</font>

96
00:04:55,110 --> 00:05:00,930
and we think you only really<font color="#CCCCCC"> need to</font>

97
00:04:58,950 --> 00:05:02,280
cross compile the tool chain and<font color="#CCCCCC"> once</font>

98
00:05:00,930 --> 00:05:05,040
you have a tool chain and<font color="#CCCCCC"> you have a</font>

99
00:05:02,280 --> 00:05:08,609
<font color="#E5E5E5">kernel you can boot hardware and from</font>

100
00:05:05,040 --> 00:05:10,590
there you<font color="#E5E5E5"> can just native compile so if</font>

101
00:05:08,610 --> 00:05:14,250
you can do that<font color="#E5E5E5"> and if we can provide</font><font color="#CCCCCC"> a</font>

102
00:05:10,590 --> 00:05:16,799
system that lets<font color="#E5E5E5"> you do that then we can</font>

103
00:05:14,250 --> 00:05:18,870
<font color="#E5E5E5">save on all of those developer hours</font>

104
00:05:16,800 --> 00:05:21,210
doing<font color="#CCCCCC"> menial tasks and I'm sure they'd</font>

105
00:05:18,870 --> 00:05:25,620
all love to<font color="#CCCCCC"> be actually creating</font>

106
00:05:21,210 --> 00:05:27,900
something<font color="#E5E5E5"> fun instead right so smoke</font>

107
00:05:25,620 --> 00:05:31,080
testing builds on new build host

108
00:05:27,900 --> 00:05:34,409
<font color="#CCCCCC">platform some tooling which uses</font><font color="#E5E5E5"> host</font>

109
00:05:31,080 --> 00:05:37,349
tools a lot they need to be vetted<font color="#E5E5E5"> for a</font>

110
00:05:34,410 --> 00:05:39,210
new distro so the new version<font color="#CCCCCC"> of Ubuntu</font>

111
00:05:37,350 --> 00:05:42,750
or<font color="#E5E5E5"> the new version the Debian comes out</font>

112
00:05:39,210 --> 00:05:44,909
it's not<font color="#E5E5E5"> supported by say</font><font color="#CCCCCC"> Yocto or build</font>

113
00:05:42,750 --> 00:05:47,010
<font color="#CCCCCC">route or something and you</font><font color="#E5E5E5"> have to spend</font>

114
00:05:44,910 --> 00:05:50,510
<font color="#E5E5E5">a month or something fixing the bugs and</font>

115
00:05:47,010 --> 00:05:50,510
we don't want that<font color="#E5E5E5"> either</font>

116
00:05:52,009 --> 00:05:58,710
complicated<font color="#CCCCCC"> setup this more pertains to</font>

117
00:05:55,229 --> 00:06:00,389
like historical build tools which have

118
00:05:58,710 --> 00:06:03,930
been invented<font color="#E5E5E5"> like more than 20 years</font>

119
00:06:00,389 --> 00:06:05,999
<font color="#E5E5E5">ago and we we have to keep using them</font>

120
00:06:03,930 --> 00:06:09,110
because<font color="#E5E5E5"> everything depends on them but</font>

121
00:06:05,999 --> 00:06:12,240
we end up like setting up OBS<font color="#CCCCCC"> and these</font>

122
00:06:09,110 --> 00:06:15,509
huge<font color="#E5E5E5"> setups that</font><font color="#CCCCCC"> are not easily</font>

123
00:06:12,240 --> 00:06:17,639
repeatable setups but they work they

124
00:06:15,509 --> 00:06:19,439
work well right<font color="#E5E5E5"> but you can't just set</font>

125
00:06:17,639 --> 00:06:21,569
it up<font color="#E5E5E5"> on your</font><font color="#CCCCCC"> laptop in five minutes and</font>

126
00:06:19,439 --> 00:06:25,919
<font color="#E5E5E5">build something repeatable with that</font>

127
00:06:21,569 --> 00:06:29,789
right monolithic repositories<font color="#CCCCCC"> of</font>

128
00:06:25,919 --> 00:06:32,448
building metadata<font color="#E5E5E5"> this pertains to</font>

129
00:06:29,789 --> 00:06:34,860
projects like<font color="#E5E5E5"> build</font><font color="#CCCCCC"> routes I don't know</font>

130
00:06:32,449 --> 00:06:36,949
everybody's<font color="#CCCCCC"> distribution staff room you</font>

131
00:06:34,860 --> 00:06:40,439
all know about build tools I'm sure

132
00:06:36,949 --> 00:06:43,740
build<font color="#E5E5E5"> route</font><font color="#CCCCCC"> Yocto these kinds</font><font color="#E5E5E5"> of</font>

133
00:06:40,439 --> 00:06:46,620
projects which have metadata in the<font color="#E5E5E5"> same</font>

134
00:06:43,740 --> 00:06:48,870
repo<font color="#E5E5E5"> for the whole stack from the</font>

135
00:06:46,620 --> 00:06:52,589
<font color="#E5E5E5">runtime to your</font><font color="#CCCCCC"> graphic stack and</font>

136
00:06:48,870 --> 00:06:54,990
everything what I've noticed<font color="#E5E5E5"> is you have</font>

137
00:06:52,589 --> 00:06:56,610
a lot of<font color="#E5E5E5"> friction in integrating patches</font>

138
00:06:54,990 --> 00:07:01,379
especially in the lower level of the

139
00:06:56,610 --> 00:07:03,960
stack<font color="#CCCCCC"> or people generate a lot</font><font color="#E5E5E5"> of</font>

140
00:07:01,379 --> 00:07:06,479
breakage<font color="#E5E5E5"> in the upper parts of this</font>

141
00:07:03,960 --> 00:07:08,568
track by prematurely merging stuff in

142
00:07:06,479 --> 00:07:13,740
the lower level of the stack because

143
00:07:08,569 --> 00:07:15,960
<font color="#E5E5E5">upgrading GCC or upgrading G Lib C has</font>

144
00:07:13,740 --> 00:07:21,060
side effects which<font color="#E5E5E5"> are forced upon the</font>

145
00:07:15,960 --> 00:07:23,188
consumers right so we wanted to<font color="#CCCCCC"> reduce</font>

146
00:07:21,060 --> 00:07:25,919
friction<font color="#E5E5E5"> and for that we have a feature</font>

147
00:07:23,189 --> 00:07:27,930
which lets one build stream project

148
00:07:25,919 --> 00:07:29,639
depend on another<font color="#E5E5E5"> build stream project</font>

149
00:07:27,930 --> 00:07:33,149
so you can have completely separate

150
00:07:29,639 --> 00:07:34,830
projects maintained by separate separate

151
00:07:33,149 --> 00:07:38,099
groups and separate teams and

152
00:07:34,830 --> 00:07:40,139
<font color="#CCCCCC">higher-level</font><font color="#E5E5E5"> depending projects can pull</font>

153
00:07:38,099 --> 00:07:42,810
in the changes when they're ready<font color="#CCCCCC"> test</font>

154
00:07:40,139 --> 00:07:45,539
<font color="#E5E5E5">against them report back</font><font color="#CCCCCC"> bugs back to</font>

155
00:07:42,810 --> 00:07:48,240
the<font color="#CCCCCC"> lower stack maintainer x'</font><font color="#E5E5E5"> and such</font>

156
00:07:45,539 --> 00:07:50,399
like this<font color="#E5E5E5"> we hope it's going to be</font><font color="#CCCCCC"> a</font>

157
00:07:48,240 --> 00:07:51,930
better<font color="#E5E5E5"> workflow but we're putting</font><font color="#CCCCCC"> it in</font>

158
00:07:50,399 --> 00:07:55,250
<font color="#E5E5E5">action now</font><font color="#CCCCCC"> and we're gonna see how that</font>

159
00:07:51,930 --> 00:07:55,250
<font color="#E5E5E5">works out</font><font color="#CCCCCC"> for us this year</font>

160
00:07:57,410 --> 00:08:06,270
so yeah we don't want tight coupling of

161
00:08:02,250 --> 00:08:08,370
build systems<font color="#CCCCCC"> and distributions</font><font color="#E5E5E5"> and</font>

162
00:08:06,270 --> 00:08:12,469
distributions what I mean here<font color="#E5E5E5"> is the</font>

163
00:08:08,370 --> 00:08:16,200
the payload<font color="#E5E5E5"> right in a lot of cases</font>

164
00:08:12,470 --> 00:08:19,980
<font color="#E5E5E5">cross systems</font><font color="#CCCCCC"> especially have a tendency</font>

165
00:08:16,200 --> 00:08:22,680
of writing tools for the specific

166
00:08:19,980 --> 00:08:26,820
software<font color="#E5E5E5"> that they're gonna build and</font>

167
00:08:22,680 --> 00:08:29,460
that<font color="#CCCCCC"> makes it difficult to take</font><font color="#E5E5E5"> a tool</font>

168
00:08:26,820 --> 00:08:32,100
that has<font color="#CCCCCC"> been made to</font><font color="#E5E5E5"> make this</font>

169
00:08:29,460 --> 00:08:35,699
<font color="#CCCCCC">distribution</font><font color="#E5E5E5"> and use it to make a</font>

170
00:08:32,100 --> 00:08:38,840
<font color="#E5E5E5">completely different distribution so</font>

171
00:08:35,700 --> 00:08:41,790
you're kind of stuck<font color="#CCCCCC"> with certain</font>

172
00:08:38,840 --> 00:08:43,320
versions and certain setups<font color="#E5E5E5"> depending on</font>

173
00:08:41,789 --> 00:08:50,969
the tools that<font color="#E5E5E5"> you use</font><font color="#CCCCCC"> and we didn't</font>

174
00:08:43,320 --> 00:08:53,250
want<font color="#CCCCCC"> that</font><font color="#E5E5E5"> to creep in yeah so what about</font>

175
00:08:50,970 --> 00:08:55,740
the developers right so we<font color="#E5E5E5"> generally</font>

176
00:08:53,250 --> 00:08:58,080
think<font color="#CCCCCC"> about in the integration crowd we</font>

177
00:08:55,740 --> 00:09:01,500
think about the developers are those

178
00:08:58,080 --> 00:09:03,930
people<font color="#E5E5E5"> who</font><font color="#CCCCCC"> just like pack stuff and run</font>

179
00:09:01,500 --> 00:09:05,670
<font color="#E5E5E5">it on their laptop</font><font color="#CCCCCC"> right and then they</font>

180
00:09:03,930 --> 00:09:07,530
send us a patch or they send us a new

181
00:09:05,670 --> 00:09:10,410
source<font color="#E5E5E5"> rpm and we're supposed to</font>

182
00:09:07,530 --> 00:09:14,610
integrate it and and they said it's

183
00:09:10,410 --> 00:09:16,560
fixed right but they<font color="#CCCCCC"> never tested</font><font color="#E5E5E5"> it on</font>

184
00:09:14,610 --> 00:09:19,890
<font color="#E5E5E5">the integrated</font><font color="#CCCCCC"> system and</font><font color="#E5E5E5"> we blame them</font>

185
00:09:16,560 --> 00:09:24,180
<font color="#E5E5E5">for it but it would have taken</font><font color="#CCCCCC"> them all</font>

186
00:09:19,890 --> 00:09:27,150
day<font color="#CCCCCC"> to like get a rig</font><font color="#E5E5E5"> and find out the</font>

187
00:09:24,180 --> 00:09:29,910
process for<font color="#CCCCCC"> building it on</font><font color="#E5E5E5"> OBS you know</font>

188
00:09:27,150 --> 00:09:32,250
finding the process for<font color="#E5E5E5"> flashing it to a</font>

189
00:09:29,910 --> 00:09:36,630
rig and<font color="#CCCCCC"> doing it</font><font color="#E5E5E5"> we didn't really give</font>

190
00:09:32,250 --> 00:09:38,460
them tools to<font color="#CCCCCC"> make it easy for</font><font color="#E5E5E5"> them so I</font>

191
00:09:36,630 --> 00:09:45,110
<font color="#E5E5E5">think that we're</font><font color="#CCCCCC"> blaming the wrong</font>

192
00:09:38,460 --> 00:09:45,110
<font color="#E5E5E5">people here okay</font>

193
00:09:46,840 --> 00:09:57,140
so a little<font color="#E5E5E5"> segment on what</font><font color="#CCCCCC"> we're doing</font>

194
00:09:53,900 --> 00:10:00,340
about these problems<font color="#E5E5E5"> how we're tackling</font>

195
00:09:57,140 --> 00:10:04,160
them so kill<font color="#E5E5E5"> cross-compilation</font>

196
00:10:00,340 --> 00:10:10,570
right so for this<font color="#CCCCCC"> we're we're</font><font color="#E5E5E5"> looking</font>

197
00:10:04,160 --> 00:10:12,740
into<font color="#E5E5E5"> features which let the sandbox</font>

198
00:10:10,570 --> 00:10:14,960
execute<font color="#CCCCCC"> under a given machine</font>

199
00:10:12,740 --> 00:10:17,210
architecture and we have an abstraction

200
00:10:14,960 --> 00:10:19,340
<font color="#CCCCCC">layer for</font><font color="#E5E5E5"> that and it's probably coming</font>

201
00:10:17,210 --> 00:10:21,860
<font color="#E5E5E5">in the next six</font><font color="#CCCCCC"> months</font><font color="#E5E5E5"> we might see</font>

202
00:10:19,340 --> 00:10:23,420
something<font color="#E5E5E5"> materialized here it's</font>

203
00:10:21,860 --> 00:10:26,420
designed for<font color="#E5E5E5"> this and right now we only</font>

204
00:10:23,420 --> 00:10:29,260
<font color="#CCCCCC">support native builds but we're gonna do</font>

205
00:10:26,420 --> 00:10:29,260
it<font color="#CCCCCC"> I promise</font>

206
00:10:31,500 --> 00:10:37,250
[Music]

207
00:10:33,160 --> 00:10:40,189
<font color="#E5E5E5">yeah so that that will be just a way</font>

208
00:10:37,250 --> 00:10:42,650
<font color="#CCCCCC">that your project can declare or</font><font color="#E5E5E5"> a</font>

209
00:10:40,190 --> 00:10:47,090
configuration option<font color="#CCCCCC"> can say try to</font>

210
00:10:42,650 --> 00:10:48,850
build this on<font color="#CCCCCC"> that hardware</font><font color="#E5E5E5"> and it may</font>

211
00:10:47,090 --> 00:10:54,260
<font color="#CCCCCC">require that you</font><font color="#E5E5E5"> run a</font><font color="#CCCCCC"> virtual machine</font>

212
00:10:48,850 --> 00:10:56,390
<font color="#CCCCCC">to provide an emulated environment on</font>

213
00:10:54,260 --> 00:10:58,069
your<font color="#CCCCCC"> own laptop</font><font color="#E5E5E5"> or that you're connected</font>

214
00:10:56,390 --> 00:11:00,680
to<font color="#E5E5E5"> a build farm and you have real</font>

215
00:10:58,070 --> 00:11:02,450
hardware or development boards to

216
00:11:00,680 --> 00:11:07,839
actually<font color="#E5E5E5"> run the builds and they just</font>

217
00:11:02,450 --> 00:11:12,200
act as slaves<font color="#E5E5E5"> to the the build process</font>

218
00:11:07,840 --> 00:11:15,530
<font color="#E5E5E5">no host tools this is thanks to your</font>

219
00:11:12,200 --> 00:11:18,730
builder<font color="#CCCCCC"> we said we shouldn't have host</font>

220
00:11:15,530 --> 00:11:22,640
tools and I said you're crazy

221
00:11:18,730 --> 00:11:24,770
but yeah it makes a lot of sense<font color="#CCCCCC"> no host</font>

222
00:11:22,640 --> 00:11:28,670
tools we just cut a lot of<font color="#E5E5E5"> problems at</font>

223
00:11:24,770 --> 00:11:31,040
the bud<font color="#E5E5E5"> if you can have a host tool on</font>

224
00:11:28,670 --> 00:11:34,310
<font color="#E5E5E5">your computer there's no reason you</font>

225
00:11:31,040 --> 00:11:37,880
cannot have the same host tool in an SDK

226
00:11:34,310 --> 00:11:42,219
or<font color="#CCCCCC"> enos this route so</font><font color="#E5E5E5"> everything is</font>

227
00:11:37,880 --> 00:11:46,100
controlled this<font color="#E5E5E5"> way we we track every</font>

228
00:11:42,220 --> 00:11:48,850
hash of every binary input into the

229
00:11:46,100 --> 00:11:53,650
build and there's nothing left<font color="#E5E5E5"> to</font><font color="#CCCCCC"> chance</font>

230
00:11:48,850 --> 00:11:53,650
<font color="#CCCCCC">by saying</font><font color="#E5E5E5"> no to no host tools</font>

231
00:11:55,050 --> 00:11:58,829
make it easy<font color="#CCCCCC"> to run the production</font>

232
00:11:57,209 --> 00:12:02,660
environment I kind of already<font color="#E5E5E5"> covered</font>

233
00:11:58,829 --> 00:12:05,339
this so the tool itself<font color="#E5E5E5"> if it can run</font>

234
00:12:02,660 --> 00:12:09,680
<font color="#E5E5E5">it's running something that should</font>

235
00:12:05,339 --> 00:12:12,420
produce<font color="#E5E5E5"> fit for a bit if the source is</font>

236
00:12:09,680 --> 00:12:14,910
ready to do bit for bit reproducible

237
00:12:12,420 --> 00:12:18,120
builds it should be doing bit for bit

238
00:12:14,910 --> 00:12:20,399
reproducible builds on any<font color="#E5E5E5"> machine so</font>

239
00:12:18,120 --> 00:12:21,959
the time it<font color="#E5E5E5"> takes you to set it up is</font>

240
00:12:20,399 --> 00:12:24,560
the time it<font color="#CCCCCC"> takes you to set</font><font color="#E5E5E5"> up a</font>

241
00:12:21,959 --> 00:12:24,560
production<font color="#E5E5E5"> environment</font>

242
00:12:30,490 --> 00:12:35,570
right so reproducible<font color="#E5E5E5"> and</font><font color="#CCCCCC"> repeatable</font>

243
00:12:33,620 --> 00:12:37,370
<font color="#E5E5E5">I've kind of been making a distinction</font>

244
00:12:35,570 --> 00:12:42,670
here<font color="#E5E5E5"> some</font><font color="#CCCCCC"> people are telling me</font><font color="#E5E5E5"> there's</font>

245
00:12:37,370 --> 00:12:45,920
no distinction<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Emmett but so</font>

246
00:12:42,670 --> 00:12:48,199
reproducible builds is getting your

247
00:12:45,920 --> 00:12:50,300
builds to be bit for a bit repeatable so

248
00:12:48,200 --> 00:12:52,460
that every time<font color="#CCCCCC"> you build it you get</font>

249
00:12:50,300 --> 00:12:55,760
<font color="#E5E5E5">exactly the same</font><font color="#CCCCCC"> output and you can</font>

250
00:12:52,460 --> 00:12:58,220
raise<font color="#CCCCCC"> your level of trust</font><font color="#E5E5E5"> a lot and the</font>

251
00:12:55,760 --> 00:13:00,610
things that<font color="#CCCCCC"> are being</font><font color="#E5E5E5"> built because you</font>

252
00:12:58,220 --> 00:13:03,670
know things that are<font color="#E5E5E5"> already tested and</font>

253
00:13:00,610 --> 00:13:06,920
and on the other<font color="#E5E5E5"> side</font><font color="#CCCCCC"> of the story is</font>

254
00:13:03,670 --> 00:13:08,650
when you want<font color="#E5E5E5"> to repeat</font><font color="#CCCCCC"> this process ten</font>

255
00:13:06,920 --> 00:13:10,910
years from<font color="#E5E5E5"> now</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> have this</font>

256
00:13:08,650 --> 00:13:12,590
definitions of everything that you want

257
00:13:10,910 --> 00:13:14,770
to build<font color="#E5E5E5"> and how to deploy</font><font color="#CCCCCC"> your</font>

258
00:13:12,590 --> 00:13:18,050
appliance or whatever it<font color="#E5E5E5"> is you're</font><font color="#CCCCCC"> doing</font>

259
00:13:14,770 --> 00:13:21,110
right<font color="#E5E5E5"> it's important to be able to</font>

260
00:13:18,050 --> 00:13:25,760
<font color="#CCCCCC">actually repeat</font><font color="#E5E5E5"> the setup of creating a</font>

261
00:13:21,110 --> 00:13:27,350
build machine from<font color="#E5E5E5"> scratch because what</font>

262
00:13:25,760 --> 00:13:30,920
we want<font color="#E5E5E5"> to keep our eyes on how</font>

263
00:13:27,350 --> 00:13:32,780
repeatable<font color="#CCCCCC"> the process is because</font><font color="#E5E5E5"> we</font>

264
00:13:30,920 --> 00:13:34,370
can't say right<font color="#CCCCCC"> now what the world is</font>

265
00:13:32,780 --> 00:13:36,470
going<font color="#CCCCCC"> to be like in ten</font><font color="#E5E5E5"> years of course</font>

266
00:13:34,370 --> 00:13:40,580
we'll want<font color="#CCCCCC"> to see</font><font color="#E5E5E5"> I this along the way</font>

267
00:13:36,470 --> 00:13:43,550
<font color="#E5E5E5">so we have processes and a way in in</font>

268
00:13:40,580 --> 00:13:47,300
place<font color="#CCCCCC"> we have a technique in place that</font>

269
00:13:43,550 --> 00:13:51,290
lets us cross compile a<font color="#E5E5E5"> a base</font><font color="#CCCCCC"> runtime</font>

270
00:13:47,300 --> 00:13:53,390
<font color="#CCCCCC">and</font><font color="#E5E5E5"> kernel and boot that just to run a</font>

271
00:13:51,290 --> 00:13:57,589
shell script<font color="#CCCCCC"> without an init system or</font>

272
00:13:53,390 --> 00:13:59,900
<font color="#CCCCCC">anything which will consume some</font><font color="#E5E5E5"> build</font>

273
00:13:57,590 --> 00:14:02,570
instructions that we've generated into a

274
00:13:59,900 --> 00:14:05,980
script which will let you at least

275
00:14:02,570 --> 00:14:08,960
bootstrap before in architectures

276
00:14:05,980 --> 00:14:11,540
machine<font color="#E5E5E5"> to a point where it can at least</font>

277
00:14:08,960 --> 00:14:13,970
<font color="#E5E5E5">run</font><font color="#CCCCCC"> build stream and then you've</font>

278
00:14:11,540 --> 00:14:16,630
completed the<font color="#CCCCCC"> process and you can</font><font color="#E5E5E5"> always</font>

279
00:14:13,970 --> 00:14:16,630
do it<font color="#CCCCCC"> again</font>

280
00:14:18,300 --> 00:14:28,530
<font color="#CCCCCC">I'm gonna run through</font><font color="#E5E5E5"> this because I</font>

281
00:14:21,970 --> 00:14:28,530
have a<font color="#E5E5E5"> walkthrough for you instead so</font>

282
00:14:30,510 --> 00:14:37,689
<font color="#CCCCCC">multi purpose built</font><font color="#E5E5E5"> metadata</font><font color="#CCCCCC"> I create</font><font color="#E5E5E5"> a</font>

283
00:14:34,000 --> 00:14:40,180
I create an app I have to choose if I'm

284
00:14:37,690 --> 00:14:41,560
gonna build up am<font color="#E5E5E5"> I gonna build a</font>

285
00:14:40,180 --> 00:14:45,160
<font color="#CCCCCC">flat-pack I</font><font color="#E5E5E5"> have to build</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> myself</font>

286
00:14:41,560 --> 00:14:47,050
right<font color="#E5E5E5"> if I want to build a snap I have</font>

287
00:14:45,160 --> 00:14:50,170
to build<font color="#CCCCCC"> it</font><font color="#E5E5E5"> myself if I want to build a</font>

288
00:14:47,050 --> 00:14:53,770
<font color="#CCCCCC">debian package or an RPM package</font><font color="#E5E5E5"> usually</font>

289
00:14:50,170 --> 00:14:57,310
somebody's gonna do it for me<font color="#E5E5E5"> but in any</font>

290
00:14:53,770 --> 00:14:58,750
case it would<font color="#CCCCCC"> be nice if I don't have to</font>

291
00:14:57,310 --> 00:15:01,390
maintain like three different

292
00:14:58,750 --> 00:15:03,730
subdirectories of my<font color="#CCCCCC"> bak module to say</font>

293
00:15:01,390 --> 00:15:05,680
well this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> how my</font><font color="#E5E5E5"> OS</font><font color="#CCCCCC"> X bundle works</font>

294
00:15:03,730 --> 00:15:08,680
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> how my</font><font color="#E5E5E5"> flat-pack bundle</font>

295
00:15:05,680 --> 00:15:13,349
works I<font color="#E5E5E5"> just</font><font color="#CCCCCC"> want one</font><font color="#E5E5E5"> build instructions</font>

296
00:15:08,680 --> 00:15:13,349
<font color="#E5E5E5">right so we want that</font>

297
00:15:13,920 --> 00:15:20,709
so basically tools to default<font color="#E5E5E5"> debug</font>

298
00:15:17,950 --> 00:15:22,720
inside my target<font color="#CCCCCC"> environment you have to</font>

299
00:15:20,710 --> 00:15:26,350
put tools into your<font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> if you want</font>

300
00:15:22,720 --> 00:15:28,270
to use them<font color="#E5E5E5"> in your runtime but we have</font>

301
00:15:26,350 --> 00:15:33,480
some<font color="#CCCCCC"> interesting tools that I'm gonna</font>

302
00:15:28,270 --> 00:15:37,660
show<font color="#E5E5E5"> off in this talk that</font><font color="#CCCCCC"> cover</font><font color="#E5E5E5"> that</font>

303
00:15:33,480 --> 00:15:40,180
artifact sharing so<font color="#E5E5E5"> I want to test</font><font color="#CCCCCC"> gtk</font>

304
00:15:37,660 --> 00:15:42,910
against the latest<font color="#E5E5E5"> epiphany and WebKit</font>

305
00:15:40,180 --> 00:15:44,410
<font color="#E5E5E5">and see what side effects happen there</font><font color="#CCCCCC"> I</font>

306
00:15:42,910 --> 00:15:46,120
should be able<font color="#E5E5E5"> to do it without</font>

307
00:15:44,410 --> 00:15:49,829
rebuilding the whole world<font color="#E5E5E5"> because</font>

308
00:15:46,120 --> 00:15:49,830
somebody's<font color="#CCCCCC"> probably built it</font>

309
00:15:50,490 --> 00:15:55,980
testing the changes<font color="#E5E5E5"> okay fun</font>

310
00:15:58,280 --> 00:16:07,620
so now I'm gonna<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to look at the</font>

311
00:16:01,080 --> 00:16:13,080
screen<font color="#CCCCCC"> here so when you're right Steve</font>

312
00:16:07,620 --> 00:16:16,400
<font color="#CCCCCC">show oh my god</font><font color="#E5E5E5"> okay okay let's just</font><font color="#CCCCCC"> try</font>

313
00:16:13,080 --> 00:16:19,290
to<font color="#E5E5E5"> hold this all right</font>

314
00:16:16,400 --> 00:16:24,030
like can you<font color="#E5E5E5"> see the you can't even</font>

315
00:16:19,290 --> 00:16:26,219
<font color="#E5E5E5">really see the colors here right so you</font>

316
00:16:24,030 --> 00:16:31,500
can see that<font color="#E5E5E5"> there are colors yeah but</font>

317
00:16:26,220 --> 00:16:33,750
you know this is not helping yeah<font color="#E5E5E5"> so</font>

318
00:16:31,500 --> 00:16:36,330
basically<font color="#E5E5E5"> we're saying that all of</font><font color="#CCCCCC"> these</font>

319
00:16:33,750 --> 00:16:36,990
elements<font color="#E5E5E5"> are cached these are cached in</font>

320
00:16:36,330 --> 00:16:40,560
purple

321
00:16:36,990 --> 00:16:46,710
these are<font color="#E5E5E5"> cache keys so basically there</font>

322
00:16:40,560 --> 00:16:49,619
is stamp<font color="#CCCCCC"> there abbreviated shah's which</font>

323
00:16:46,710 --> 00:16:53,040
represent the inputs<font color="#E5E5E5"> of a build which is</font>

324
00:16:49,620 --> 00:16:57,150
<font color="#CCCCCC">our prediction of whether it should be</font>

325
00:16:53,040 --> 00:17:01,140
<font color="#CCCCCC">bit for a bit come reproducible it for a</font>

326
00:16:57,150 --> 00:17:04,530
bit exactly the same so this<font color="#E5E5E5"> one is GST</font>

327
00:17:01,140 --> 00:17:12,180
<font color="#CCCCCC">plugins bad has that sha</font><font color="#E5E5E5"> right</font>

328
00:17:04,530 --> 00:17:17,879
<font color="#E5E5E5">everything is built so I have a Epiphany</font>

329
00:17:12,180 --> 00:17:18,990
that's built and I want a hack on<font color="#CCCCCC"> gtk so</font>

330
00:17:17,880 --> 00:17:22,050
I'm<font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> open it</font>

331
00:17:18,990 --> 00:17:27,589
<font color="#CCCCCC">gtk workspace</font><font color="#E5E5E5"> here I'm saying</font>

332
00:17:22,050 --> 00:17:33,800
<font color="#CCCCCC">BSD</font><font color="#E5E5E5"> workspace open and then the element</font>

333
00:17:27,589 --> 00:17:38,939
<font color="#E5E5E5">gta3 BST and then a directory right so</font>

334
00:17:33,800 --> 00:17:43,070
the gta3 BST<font color="#CCCCCC"> is a file which</font><font color="#E5E5E5"> defines how</font>

335
00:17:38,940 --> 00:17:48,420
to build<font color="#CCCCCC"> gtk and stuff about gtk</font><font color="#E5E5E5"> and</font>

336
00:17:43,070 --> 00:17:50,280
here I've basically checked it out<font color="#CCCCCC"> at</font>

337
00:17:48,420 --> 00:17:52,920
<font color="#CCCCCC">exactly the version that I was going</font><font color="#E5E5E5"> to</font>

338
00:17:50,280 --> 00:17:56,399
use<font color="#CCCCCC"> to build according</font><font color="#E5E5E5"> to this project</font>

339
00:17:52,920 --> 00:17:58,500
<font color="#E5E5E5">data and now I have all the source code</font>

340
00:17:56,400 --> 00:18:01,800
inside so

341
00:17:58,500 --> 00:18:04,200
just just<font color="#E5E5E5"> keep in mind</font><font color="#CCCCCC"> that after</font><font color="#E5E5E5"> doing</font>

342
00:18:01,800 --> 00:18:08,669
<font color="#CCCCCC">this</font><font color="#E5E5E5"> I've opened up Emacs and I've</font>

343
00:18:04,200 --> 00:18:12,480
reversed<font color="#CCCCCC"> the gtk</font><font color="#E5E5E5"> label angle so</font><font color="#CCCCCC"> that by</font>

344
00:18:08,670 --> 00:18:15,810
default<font color="#E5E5E5"> it's at 180 degrees so labels</font>

345
00:18:12,480 --> 00:18:27,420
should be<font color="#E5E5E5"> upside</font><font color="#CCCCCC"> down I won't go through</font>

346
00:18:15,810 --> 00:18:29,879
<font color="#CCCCCC">that so I'm gonna show</font><font color="#E5E5E5"> it again and</font><font color="#CCCCCC"> just</font>

347
00:18:27,420 --> 00:18:35,460
<font color="#CCCCCC">see what is the</font><font color="#E5E5E5"> result and hope that</font>

348
00:18:29,880 --> 00:18:37,170
<font color="#E5E5E5">yeah you can't really move okay well</font>

349
00:18:35,460 --> 00:18:42,300
this one is green it says buildable

350
00:18:37,170 --> 00:18:46,440
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> gtk and here waiting waiting</font>

351
00:18:42,300 --> 00:18:49,350
waiting waiting waiting<font color="#E5E5E5"> right and we</font>

352
00:18:46,440 --> 00:18:51,690
have<font color="#E5E5E5"> WebKit here is waiting waiting</font>

353
00:18:49,350 --> 00:18:54,449
waiting<font color="#E5E5E5"> everything that depends on</font><font color="#CCCCCC"> gtk</font>

354
00:18:51,690 --> 00:18:57,090
<font color="#E5E5E5">basically says well</font><font color="#CCCCCC"> gtk is ready to</font>

355
00:18:54,450 --> 00:18:58,860
<font color="#E5E5E5">build and this is my pipeline</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

356
00:18:57,090 --> 00:19:01,830
what's gonna have to happen if I run a

357
00:18:58,860 --> 00:19:04,580
build<font color="#E5E5E5"> right if I want to see</font><font color="#CCCCCC"> epiphany</font>

358
00:19:01,830 --> 00:19:10,070
with a new<font color="#CCCCCC"> gtk I gotta</font><font color="#E5E5E5"> build all that</font>

359
00:19:04,580 --> 00:19:14,010
<font color="#E5E5E5">but I don't want to build WebKit</font><font color="#CCCCCC"> alright</font>

360
00:19:10,070 --> 00:19:17,100
so let's try<font color="#E5E5E5"> without strict mode strict</font>

361
00:19:14,010 --> 00:19:20,820
mode is by default<font color="#E5E5E5"> everything has to be</font>

362
00:19:17,100 --> 00:19:22,949
built every reverse dependency has to be

363
00:19:20,820 --> 00:19:25,340
<font color="#E5E5E5">rebuilt when something</font><font color="#CCCCCC"> changes which is</font>

364
00:19:22,950 --> 00:19:29,340
what you<font color="#E5E5E5"> would want in production builds</font>

365
00:19:25,340 --> 00:19:33,419
but<font color="#E5E5E5"> with without strict mode in place</font>

366
00:19:29,340 --> 00:19:37,139
<font color="#E5E5E5">then we just say</font><font color="#CCCCCC"> that I'm gonna test</font>

367
00:19:33,420 --> 00:19:38,880
something<font color="#CCCCCC"> with the exact version of</font>

368
00:19:37,140 --> 00:19:41,130
<font color="#E5E5E5">everything but I'm not necessarily gonna</font>

369
00:19:38,880 --> 00:19:44,940
<font color="#E5E5E5">rebuild against everything so I'm gonna</font>

370
00:19:41,130 --> 00:19:46,890
<font color="#E5E5E5">lose out in places where I need to</font><font color="#CCCCCC"> do</font>

371
00:19:44,940 --> 00:19:49,680
static<font color="#E5E5E5"> linking for that I need to add</font>

372
00:19:46,890 --> 00:19:51,960
<font color="#E5E5E5">extra sugar to my project to say well no</font>

373
00:19:49,680 --> 00:19:55,200
I need<font color="#E5E5E5"> to be rebuilt strictly every time</font>

374
00:19:51,960 --> 00:19:57,240
because<font color="#E5E5E5"> I</font><font color="#CCCCCC"> consume static libraries but</font>

375
00:19:55,200 --> 00:19:59,280
mostly this<font color="#E5E5E5"> works in a Linux environment</font>

376
00:19:57,240 --> 00:20:02,880
where everything<font color="#E5E5E5"> is dynamic</font>

377
00:19:59,280 --> 00:20:04,730
you can test so here what I wanted<font color="#E5E5E5"> to</font>

378
00:20:02,880 --> 00:20:08,610
show you and<font color="#E5E5E5"> now that</font><font color="#CCCCCC"> the lights are</font><font color="#E5E5E5"> off</font>

379
00:20:04,730 --> 00:20:10,740
<font color="#E5E5E5">you can see the cache keys it says</font>

380
00:20:08,610 --> 00:20:12,000
cached for everything except<font color="#CCCCCC"> for gtk</font>

381
00:20:10,740 --> 00:20:14,820
which is buildable

382
00:20:12,000 --> 00:20:18,690
but the cash<font color="#E5E5E5"> keys have changed color the</font>

383
00:20:14,820 --> 00:20:21,050
dim ones are<font color="#CCCCCC"> sore are the weak cache</font>

384
00:20:18,690 --> 00:20:23,700
keys<font color="#E5E5E5"> they're calculated differently</font>

385
00:20:21,050 --> 00:20:25,740
<font color="#E5E5E5">we're falling back</font><font color="#CCCCCC"> to these ones we're</font>

386
00:20:23,700 --> 00:20:29,550
<font color="#E5E5E5">going to use them</font><font color="#CCCCCC"> and those ones won't</font>

387
00:20:25,740 --> 00:20:33,090
be<font color="#E5E5E5"> pushed upstream things that get</font>

388
00:20:29,550 --> 00:20:35,070
rebuilt<font color="#E5E5E5"> in this case</font><font color="#CCCCCC"> gtk won't get</font>

389
00:20:33,090 --> 00:20:38,750
pushed to a shared<font color="#CCCCCC"> artifact cache</font>

390
00:20:35,070 --> 00:20:41,760
because<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just a local workspace and</font>

391
00:20:38,750 --> 00:20:49,350
<font color="#E5E5E5">this lets us</font><font color="#CCCCCC"> just whip it</font><font color="#E5E5E5"> up together</font>

392
00:20:41,760 --> 00:20:52,410
<font color="#E5E5E5">right so oh yeah</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> gonna build this</font>

393
00:20:49,350 --> 00:20:54,570
<font color="#E5E5E5">but buddy told me he had a fix in</font>

394
00:20:52,410 --> 00:20:58,170
<font color="#CCCCCC">GStreamer so</font><font color="#E5E5E5"> I want to check that out</font>

395
00:20:54,570 --> 00:21:02,189
<font color="#CCCCCC">and add this to my build first</font><font color="#E5E5E5"> so for</font>

396
00:20:58,170 --> 00:21:03,390
that<font color="#E5E5E5"> I'm gonna track</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right I'm gonna</font>

397
00:21:02,190 --> 00:21:06,030
track<font color="#CCCCCC"> GStreamer</font>

398
00:21:03,390 --> 00:21:09,450
<font color="#E5E5E5">and we don't really see well but there's</font>

399
00:21:06,030 --> 00:21:14,070
<font color="#CCCCCC">an info</font><font color="#E5E5E5"> says I found a new revision so</font>

400
00:21:09,450 --> 00:21:16,890
<font color="#E5E5E5">basically inside the file which</font><font color="#CCCCCC"> defines</font>

401
00:21:14,070 --> 00:21:20,100
how to define how to<font color="#E5E5E5"> build</font><font color="#CCCCCC"> GStreamer you</font>

402
00:21:16,890 --> 00:21:23,070
have the the upstream URL<font color="#CCCCCC"> and you have a</font>

403
00:21:20,100 --> 00:21:24,830
tracking<font color="#E5E5E5"> branch and you have the the</font>

404
00:21:23,070 --> 00:21:28,620
commit<font color="#E5E5E5"> sha that</font><font color="#CCCCCC"> you want to build</font>

405
00:21:24,830 --> 00:21:32,760
<font color="#E5E5E5">so BST track will basically take the</font>

406
00:21:28,620 --> 00:21:37,320
branch<font color="#E5E5E5"> information and use it</font><font color="#CCCCCC"> to derive</font>

407
00:21:32,760 --> 00:21:43,379
a new commit sha and say well let's

408
00:21:37,320 --> 00:21:45,629
<font color="#CCCCCC">update your project such that such that</font>

409
00:21:43,380 --> 00:21:47,850
you're building<font color="#CCCCCC"> the latest</font><font color="#E5E5E5"> of this</font>

410
00:21:45,630 --> 00:21:50,340
component<font color="#E5E5E5"> or you can do this recursively</font>

411
00:21:47,850 --> 00:21:54,240
<font color="#E5E5E5">or not right so here I've done git diff</font>

412
00:21:50,340 --> 00:21:56,879
<font color="#E5E5E5">and I can see this well there's this red</font>

413
00:21:54,240 --> 00:22:00,510
<font color="#E5E5E5">mumbo-jumbo</font><font color="#CCCCCC"> which has gone</font><font color="#E5E5E5"> away and some</font>

414
00:21:56,880 --> 00:22:06,120
green fuzzy stuff which<font color="#CCCCCC"> there-there</font>

415
00:22:00,510 --> 00:22:08,930
<font color="#E5E5E5">commit</font><font color="#CCCCCC"> Shaw's right so can</font><font color="#E5E5E5"> we build it</font>

416
00:22:06,120 --> 00:22:12,320
<font color="#E5E5E5">right so now we see before we go</font>

417
00:22:08,930 --> 00:22:15,120
well now we're trying to<font color="#E5E5E5"> build it right</font>

418
00:22:12,320 --> 00:22:17,760
<font color="#E5E5E5">before we go we</font><font color="#CCCCCC"> have this buildable and</font>

419
00:22:15,120 --> 00:22:19,169
which is also<font color="#CCCCCC"> gstreamer but it's also in</font>

420
00:22:17,760 --> 00:22:21,920
non strict mode so we're going<font color="#E5E5E5"> to build</font>

421
00:22:19,170 --> 00:22:21,920
<font color="#E5E5E5">just two things</font>

422
00:22:22,100 --> 00:22:27,090
[Music]

423
00:22:24,150 --> 00:22:32,950
right now we have<font color="#CCCCCC"> our</font><font color="#E5E5E5"> cute UI</font><font color="#CCCCCC"> who's</font>

424
00:22:27,090 --> 00:22:35,560
clicking<font color="#CCCCCC"> away here and Sam really</font><font color="#E5E5E5"> loves</font>

425
00:22:32,950 --> 00:22:41,950
the UI and<font color="#CCCCCC"> the colors</font><font color="#E5E5E5"> so I'm gonna try</font>

426
00:22:35,560 --> 00:22:43,780
to sell it his<font color="#CCCCCC"> name yeah we've</font><font color="#E5E5E5"> got</font>

427
00:22:41,950 --> 00:22:47,080
something<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> interesting it's just a</font>

428
00:22:43,780 --> 00:22:49,240
<font color="#E5E5E5">little hack with the terminal</font><font color="#CCCCCC"> ansi</font>

429
00:22:47,080 --> 00:22:52,120
escape sequences which lets us like

430
00:22:49,240 --> 00:22:54,160
<font color="#CCCCCC">reserve some lines and we have our</font>

431
00:22:52,120 --> 00:22:56,949
rolling log which will<font color="#E5E5E5"> just keep going</font>

432
00:22:54,160 --> 00:22:59,470
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you can you can redirect that</font><font color="#CCCCCC"> to a</font>

433
00:22:56,950 --> 00:23:01,060
log file or<font color="#E5E5E5"> something but while you're</font>

434
00:22:59,470 --> 00:23:05,470
while you're watching the build you have

435
00:23:01,060 --> 00:23:10,090
<font color="#CCCCCC">this which just sticks at the bottom you</font>

436
00:23:05,470 --> 00:23:13,020
have<font color="#E5E5E5"> your different cues here so I've</font>

437
00:23:10,090 --> 00:23:16,959
pulled no elements<font color="#E5E5E5"> from upstream and</font>

438
00:23:13,020 --> 00:23:19,300
there's three actually there's<font color="#CCCCCC"> 0 2</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 0</font>

439
00:23:16,960 --> 00:23:21,040
<font color="#E5E5E5">red</font><font color="#CCCCCC"> is failures right so you have their</font>

440
00:23:19,300 --> 00:23:23,440
three cues and<font color="#E5E5E5"> you can see the things</font>

441
00:23:21,040 --> 00:23:25,180
are moving through the<font color="#CCCCCC"> queues and we</font>

442
00:23:23,440 --> 00:23:27,400
have counters to say<font color="#CCCCCC"> okay what are we</font>

443
00:23:25,180 --> 00:23:29,350
<font color="#CCCCCC">right now doing</font><font color="#E5E5E5"> so we're basically</font>

444
00:23:27,400 --> 00:23:35,140
scheduling<font color="#CCCCCC"> everything that's going</font><font color="#E5E5E5"> on</font>

445
00:23:29,350 --> 00:23:38,620
<font color="#CCCCCC">here and we have a full timer so we've</font>

446
00:23:35,140 --> 00:23:45,660
been going<font color="#CCCCCC"> for 1 minute and 20 seconds</font>

447
00:23:38,620 --> 00:23:45,659
<font color="#E5E5E5">on this slide</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right not</font><font color="#CCCCCC"> bad not bad</font>

448
00:23:46,170 --> 00:23:49,170
so

449
00:23:49,490 --> 00:23:57,170
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> I ought not</font><font color="#CCCCCC"> to wait for it</font><font color="#E5E5E5"> to build</font>

450
00:23:54,309 --> 00:24:00,649
when it finishes build it will tell you

451
00:23:57,170 --> 00:24:03,320
<font color="#CCCCCC">yay we</font><font color="#E5E5E5"> built and you know you don't need</font>

452
00:24:00,650 --> 00:24:08,360
<font color="#E5E5E5">to know but what is interesting</font><font color="#CCCCCC"> is that</font>

453
00:24:03,320 --> 00:24:11,510
<font color="#CCCCCC">gstreamer finished compiling before GT</font>

454
00:24:08,360 --> 00:24:14,870
<font color="#CCCCCC">k3</font><font color="#E5E5E5"> even got to make so GT k3 was running</font>

455
00:24:11,510 --> 00:24:18,890
configure and<font color="#CCCCCC"> GStreamer which switched</font>

456
00:24:14,870 --> 00:24:21,979
to Mezen just just like speeded right

457
00:24:18,890 --> 00:24:26,690
through configure and like killed<font color="#E5E5E5"> it in</font>

458
00:24:21,980 --> 00:24:33,679
<font color="#E5E5E5">this race yeah so looks like Mezen is a</font>

459
00:24:26,690 --> 00:24:35,990
good idea<font color="#CCCCCC"> after all so now I've built</font>

460
00:24:33,679 --> 00:24:41,660
everything<font color="#E5E5E5"> I've got my upside-down</font>

461
00:24:35,990 --> 00:24:49,309
labels<font color="#E5E5E5"> I think and now we can run a</font>

462
00:24:41,660 --> 00:24:59,950
shell<font color="#E5E5E5"> right oh this is even worse</font><font color="#CCCCCC"> oh my</font>

463
00:24:49,309 --> 00:25:05,270
god okay well that<font color="#E5E5E5"> was BST shell</font>

464
00:24:59,950 --> 00:25:07,370
<font color="#E5E5E5">epiphany dot BST right and basically</font>

465
00:25:05,270 --> 00:25:09,410
what we're doing<font color="#E5E5E5"> here</font><font color="#CCCCCC"> is we're taking</font>

466
00:25:07,370 --> 00:25:11,360
<font color="#E5E5E5">all the</font><font color="#CCCCCC"> different little</font><font color="#E5E5E5"> builds that we</font>

467
00:25:09,410 --> 00:25:14,270
have<font color="#CCCCCC"> they're different</font><font color="#E5E5E5"> basically every</font>

468
00:25:11,360 --> 00:25:21,020
artifact is like<font color="#CCCCCC"> the make</font><font color="#E5E5E5"> death deer</font>

469
00:25:14,270 --> 00:25:23,350
equals foo install output stuff<font color="#E5E5E5"> and we</font>

470
00:25:21,020 --> 00:25:25,490
have a<font color="#E5E5E5"> deterministic staging order</font>

471
00:25:23,350 --> 00:25:27,020
dictated by the dependencies<font color="#CCCCCC"> of</font>

472
00:25:25,490 --> 00:25:29,570
everything and<font color="#E5E5E5"> we just whipped them up</font>

473
00:25:27,020 --> 00:25:35,420
<font color="#E5E5E5">into the same</font><font color="#CCCCCC"> directory with hard links</font>

474
00:25:29,570 --> 00:25:38,840
<font color="#E5E5E5">and we run some integration commands</font><font color="#CCCCCC"> all</font>

475
00:25:35,420 --> 00:25:42,910
<font color="#CCCCCC">right so we we update like</font><font color="#E5E5E5"> gcmg</font><font color="#CCCCCC"> setting</font>

476
00:25:38,840 --> 00:25:46,610
<font color="#E5E5E5">schemas and stuff one font caches and</font>

477
00:25:42,910 --> 00:25:50,240
things after staging everything we also

478
00:25:46,610 --> 00:25:51,860
do<font color="#E5E5E5"> this before every build right so</font>

479
00:25:50,240 --> 00:25:55,990
every build has<font color="#CCCCCC"> exactly what you</font>

480
00:25:51,860 --> 00:25:59,049
expected so here<font color="#E5E5E5"> I launched</font><font color="#CCCCCC"> epiphany</font>

481
00:25:55,990 --> 00:26:02,759
<font color="#E5E5E5">from the shell</font>

482
00:25:59,049 --> 00:26:06,399
<font color="#E5E5E5">all right and you have your</font><font color="#CCCCCC"> upside down</font>

483
00:26:02,759 --> 00:26:13,570
loading here<font color="#E5E5E5"> we don't render this with</font>

484
00:26:06,399 --> 00:26:17,738
labels but we're<font color="#E5E5E5"> online and we have this</font>

485
00:26:13,570 --> 00:26:20,439
<font color="#E5E5E5">upside down</font><font color="#CCCCCC"> text here right so so we</font>

486
00:26:17,739 --> 00:26:23,409
know that<font color="#CCCCCC"> we we did run Epiphany with</font>

487
00:26:20,440 --> 00:26:28,059
the<font color="#CCCCCC"> gtk that we hacked</font><font color="#E5E5E5"> to turn the</font>

488
00:26:23,409 --> 00:26:30,970
labels upside down<font color="#CCCCCC"> at least there's some</font>

489
00:26:28,059 --> 00:26:36,908
<font color="#E5E5E5">problems which have been</font><font color="#CCCCCC"> reported about</font>

490
00:26:30,970 --> 00:26:40,299
like<font color="#CCCCCC"> Epiphany specifically it needs to</font>

491
00:26:36,909 --> 00:26:44,679
<font color="#CCCCCC">access</font><font color="#E5E5E5"> the web and in the regular</font>

492
00:26:40,299 --> 00:26:47,230
testing shell environment<font color="#CCCCCC"> we allow like</font>

493
00:26:44,679 --> 00:26:49,359
we don't unshare the name spaces or

494
00:26:47,230 --> 00:26:50,950
unshare the net or<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> like this so</font>

495
00:26:49,359 --> 00:26:55,918
we<font color="#E5E5E5"> don't use a secure container</font>

496
00:26:50,950 --> 00:27:02,009
environment but we still have to like

497
00:26:55,919 --> 00:27:04,960
echo<font color="#CCCCCC"> name server 8.8.8.8 and to resolve</font>

498
00:27:02,009 --> 00:27:07,809
confer it to work<font color="#E5E5E5"> all right so there's</font>

499
00:27:04,960 --> 00:27:10,600
some<font color="#E5E5E5"> little tweaking we're thinking</font>

500
00:27:07,809 --> 00:27:12,960
maybe<font color="#E5E5E5"> some client-side configuration or</font>

501
00:27:10,600 --> 00:27:15,969
project level<font color="#CCCCCC"> configuration this</font><font color="#E5E5E5"> says</font>

502
00:27:12,960 --> 00:27:18,879
this<font color="#E5E5E5"> is how you can create a shell</font>

503
00:27:15,970 --> 00:27:23,559
environment where my<font color="#E5E5E5"> applications should</font>

504
00:27:18,879 --> 00:27:26,139
run but that<font color="#CCCCCC"> can use work you know</font><font color="#E5E5E5"> it's</font>

505
00:27:23,559 --> 00:27:27,730
better<font color="#E5E5E5"> to</font><font color="#CCCCCC"> go with the</font><font color="#E5E5E5"> VM it's better to</font>

506
00:27:26,139 --> 00:27:30,789
actually<font color="#CCCCCC"> distribute what you're done</font>

507
00:27:27,730 --> 00:27:35,930
right so you never know what's on<font color="#CCCCCC"> the</font>

508
00:27:30,789 --> 00:27:45,650
host<font color="#E5E5E5"> anyway so</font>

509
00:27:35,930 --> 00:27:50,150
pipelines<font color="#E5E5E5"> built</font><font color="#CCCCCC"> streamers elements and</font>

510
00:27:45,650 --> 00:27:55,660
pipelines<font color="#E5E5E5"> so let's take a look at what</font>

511
00:27:50,150 --> 00:27:59,750
some plausible pipelines could look<font color="#E5E5E5"> like</font>

512
00:27:55,660 --> 00:28:00,280
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right to give some idea what's going</font>

513
00:27:59,750 --> 00:28:05,020
on

514
00:28:00,280 --> 00:28:09,020
so this one is generate an<font color="#E5E5E5"> image right</font>

515
00:28:05,020 --> 00:28:11,480
so<font color="#E5E5E5"> we're we're not gonna do this but we</font>

516
00:28:09,020 --> 00:28:14,629
thought of doing<font color="#CCCCCC"> this right now right</font>

517
00:28:11,480 --> 00:28:18,590
<font color="#CCCCCC">now</font><font color="#E5E5E5"> in Nome what we have for building</font>

518
00:28:14,630 --> 00:28:23,180
Nome components is we use a<font color="#CCCCCC"> D bootstrap</font>

519
00:28:18,590 --> 00:28:25,580
base which lets us<font color="#CCCCCC"> just say</font><font color="#E5E5E5"> okay I don't</font>

520
00:28:23,180 --> 00:28:27,080
<font color="#CCCCCC">care about my system dependencies I just</font>

521
00:28:25,580 --> 00:28:30,350
want<font color="#E5E5E5"> them to be there and</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> want to try</font>

522
00:28:27,080 --> 00:28:32,270
to build<font color="#E5E5E5"> and run stuff so at</font><font color="#CCCCCC"> least we</font>

523
00:28:30,350 --> 00:28:36,879
<font color="#E5E5E5">have a specific</font><font color="#CCCCCC"> version of we're using</font>

524
00:28:32,270 --> 00:28:39,530
Debian testing<font color="#E5E5E5"> and this is this</font><font color="#CCCCCC"> is</font>

525
00:28:36,880 --> 00:28:42,680
orchestrated outside<font color="#E5E5E5"> of a bill type line</font>

526
00:28:39,530 --> 00:28:46,030
because you cannot<font color="#E5E5E5"> really run the</font>

527
00:28:42,680 --> 00:28:50,960
bootstrap<font color="#CCCCCC"> for multi-strap twice and</font>

528
00:28:46,030 --> 00:28:53,710
expect to<font color="#CCCCCC"> have the same binary result so</font>

529
00:28:50,960 --> 00:28:57,820
<font color="#E5E5E5">we run it on a server continuously and</font>

530
00:28:53,710 --> 00:29:01,160
when we add dependencies it gets re

531
00:28:57,820 --> 00:29:03,860
executive and the result gets<font color="#E5E5E5"> committed</font>

532
00:29:01,160 --> 00:29:07,480
<font color="#E5E5E5">into</font><font color="#CCCCCC"> an OS tree repo</font><font color="#E5E5E5"> which is</font>

533
00:29:03,860 --> 00:29:10,929
controllable so we have a couple<font color="#E5E5E5"> of</font>

534
00:29:07,480 --> 00:29:13,150
hacks like this<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure we get</font>

535
00:29:10,930 --> 00:29:17,810
police' below

536
00:29:13,150 --> 00:29:20,210
data into the into the pipeline<font color="#E5E5E5"> right so</font>

537
00:29:17,810 --> 00:29:24,770
here<font color="#CCCCCC"> we import from</font><font color="#E5E5E5"> an OS tree repo and</font>

538
00:29:20,210 --> 00:29:27,650
then we build stuff so we<font color="#E5E5E5"> can import the</font>

539
00:29:24,770 --> 00:29:30,020
base<font color="#E5E5E5"> system and build stuff and then we</font>

540
00:29:27,650 --> 00:29:32,960
can use a compose element<font color="#E5E5E5"> a compose</font>

541
00:29:30,020 --> 00:29:36,800
element is<font color="#E5E5E5"> going to take what you want</font>

542
00:29:32,960 --> 00:29:40,100
<font color="#E5E5E5">out</font><font color="#CCCCCC"> of what you built and make one</font>

543
00:29:36,800 --> 00:29:44,300
output<font color="#E5E5E5"> which is usually a lot smaller</font>

544
00:29:40,100 --> 00:29:46,280
than<font color="#E5E5E5"> what you had when</font><font color="#CCCCCC"> you just used</font>

545
00:29:44,300 --> 00:29:49,470
everything<font color="#CCCCCC"> that was in make install</font>

546
00:29:46,280 --> 00:29:52,350
right so you want to decide do I<font color="#CCCCCC"> want my</font>

547
00:29:49,470 --> 00:29:54,720
bugging symbols do<font color="#E5E5E5"> I want all the</font>

548
00:29:52,350 --> 00:29:58,139
documentation and<font color="#CCCCCC"> you can tweak your</font>

549
00:29:54,720 --> 00:30:01,919
elements to say well this part should be

550
00:29:58,140 --> 00:30:05,159
<font color="#E5E5E5">in this domain you can</font><font color="#CCCCCC"> handhold all of</font>

551
00:30:01,919 --> 00:30:08,070
this with glob patterns and such<font color="#CCCCCC"> alright</font>

552
00:30:05,159 --> 00:30:14,270
<font color="#E5E5E5">so once you have your</font><font color="#CCCCCC"> compose element we</font>

553
00:30:08,070 --> 00:30:18,389
send it<font color="#E5E5E5"> to this x86 image element is</font>

554
00:30:14,270 --> 00:30:24,929
basically a script that<font color="#E5E5E5"> we have in BST</font>

555
00:30:18,390 --> 00:30:27,419
external repository and this one does it

556
00:30:24,929 --> 00:30:31,440
basically<font color="#E5E5E5"> does what</font><font color="#CCCCCC"> Wieck does from</font>

557
00:30:27,419 --> 00:30:33,659
<font color="#CCCCCC">Yocto it was basic generally based</font><font color="#E5E5E5"> on</font>

558
00:30:31,440 --> 00:30:36,990
what it<font color="#E5E5E5"> was doing so there's a lot</font><font color="#CCCCCC"> of</font>

559
00:30:33,659 --> 00:30:40,440
new there's well new<font color="#E5E5E5"> maybe five or</font><font color="#CCCCCC"> ten</font>

560
00:30:36,990 --> 00:30:43,980
<font color="#E5E5E5">years recent enough</font><font color="#CCCCCC"> options to file</font>

561
00:30:40,440 --> 00:30:47,970
<font color="#E5E5E5">system tools like mkfs to allow you to</font>

562
00:30:43,980 --> 00:30:51,929
<font color="#CCCCCC">generate images</font><font color="#E5E5E5"> using the data that</font><font color="#CCCCCC"> you</font>

563
00:30:47,970 --> 00:30:56,190
<font color="#CCCCCC">have</font><font color="#E5E5E5"> in a directory without</font><font color="#CCCCCC"> ever</font>

564
00:30:51,929 --> 00:30:59,870
becoming a root right<font color="#E5E5E5"> so that in</font>

565
00:30:56,190 --> 00:31:04,169
conjunction<font color="#E5E5E5"> with a</font><font color="#CCCCCC"> dos partition</font><font color="#E5E5E5"> and</font>

566
00:30:59,870 --> 00:31:08,639
another user space utility and syslinux

567
00:31:04,169 --> 00:31:11,159
<font color="#CCCCCC">lets you splice partitions of an image</font>

568
00:31:08,640 --> 00:31:13,549
into<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that you can</font><font color="#E5E5E5"> boot without</font>

569
00:31:11,159 --> 00:31:16,799
<font color="#E5E5E5">needing a loopback mount or anything</font>

570
00:31:13,549 --> 00:31:20,789
<font color="#CCCCCC">that you're not</font><font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> to do on your on</font>

571
00:31:16,799 --> 00:31:24,330
<font color="#CCCCCC">your user so that's one configuration</font>

572
00:31:20,789 --> 00:31:27,960
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is another example</font><font color="#E5E5E5"> of how we do</font>

573
00:31:24,330 --> 00:31:32,549
flat packs and that's coming this week<font color="#CCCCCC"> I</font>

574
00:31:27,960 --> 00:31:34,380
think next<font color="#E5E5E5"> week we were looking at</font><font color="#CCCCCC"> a</font>

575
00:31:32,549 --> 00:31:41,429
release<font color="#E5E5E5"> last week of the free desktop</font>

576
00:31:34,380 --> 00:31:43,320
<font color="#CCCCCC">SDK project so basically this is how we</font>

577
00:31:41,429 --> 00:31:45,059
would<font color="#CCCCCC"> build the gnome stack first we</font>

578
00:31:43,320 --> 00:31:47,520
would import the free<font color="#CCCCCC"> desktop which is</font>

579
00:31:45,059 --> 00:31:51,299
<font color="#E5E5E5">already built it was</font><font color="#CCCCCC"> previously built</font>

580
00:31:47,520 --> 00:31:56,370
with<font color="#CCCCCC"> Yocto plus flat pack builder for</font>

581
00:31:51,299 --> 00:31:58,350
the 1.6 SDKs and<font color="#E5E5E5"> runtimes we're going</font>

582
00:31:56,370 --> 00:32:01,408
we're building them with build stream

583
00:31:58,350 --> 00:32:03,299
from the bootstrap up with the free

584
00:32:01,409 --> 00:32:07,860
desktop<font color="#CCCCCC"> SDK project in</font>

585
00:32:03,299 --> 00:32:10,168
<font color="#CCCCCC">point-8</font><font color="#E5E5E5"> here we just take the same build</font>

586
00:32:07,860 --> 00:32:13,860
metadata that developers use on a

587
00:32:10,169 --> 00:32:18,149
<font color="#E5E5E5">day-to-day basis</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> build and test but</font>

588
00:32:13,860 --> 00:32:20,850
we build it on top of<font color="#CCCCCC"> this sdk and then</font>

589
00:32:18,149 --> 00:32:23,610
we use<font color="#E5E5E5"> similar compose things write</font>

590
00:32:20,850 --> 00:32:25,860
compose<font color="#CCCCCC"> lets you we're</font><font color="#E5E5E5"> going to like</font>

591
00:32:23,610 --> 00:32:28,678
split out the<font color="#E5E5E5"> locale extension of a</font>

592
00:32:25,860 --> 00:32:30,719
<font color="#CCCCCC">flat-pack I'm not sure how I</font><font color="#E5E5E5"> think maybe</font>

593
00:32:28,679 --> 00:32:32,879
half of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> audience is very familiar</font>

594
00:32:30,720 --> 00:32:35,759
<font color="#CCCCCC">with plot flat-pack and knows what I'm</font>

595
00:32:32,879 --> 00:32:39,090
talking about<font color="#E5E5E5"> but you have like SDKs</font>

596
00:32:35,759 --> 00:32:41,399
have different they<font color="#CCCCCC"> have mounts of sorts</font>

597
00:32:39,090 --> 00:32:42,178
you<font color="#CCCCCC"> have locale you have debug</font><font color="#E5E5E5"> you have</font>

598
00:32:41,399 --> 00:32:45,238
different things

599
00:32:42,179 --> 00:32:47,519
<font color="#E5E5E5">split them out and here you</font><font color="#CCCCCC"> just put</font>

600
00:32:45,239 --> 00:32:50,519
some<font color="#E5E5E5"> fairy dust which is</font><font color="#CCCCCC"> like flat pack</font>

601
00:32:47,519 --> 00:32:52,679
meta or<font color="#E5E5E5"> something which informs</font><font color="#CCCCCC"> flat</font>

602
00:32:50,519 --> 00:32:57,059
<font color="#CCCCCC">pack</font><font color="#E5E5E5"> runtime what to do about portals</font>

603
00:32:52,679 --> 00:32:58,859
and stuff permissions and such metadata

604
00:32:57,059 --> 00:33:04,109
that<font color="#E5E5E5"> flat pack would understand but I</font>

605
00:32:58,859 --> 00:33:07,109
<font color="#E5E5E5">have no idea and then you get a check</font>

606
00:33:04,109 --> 00:33:15,658
<font color="#E5E5E5">out that you can make an OS tree repo</font>

607
00:33:07,109 --> 00:33:18,949
and deploy<font color="#CCCCCC"> it as a flat pack right for</font>

608
00:33:15,659 --> 00:33:18,950
today we<font color="#E5E5E5"> have a demo</font>

609
00:33:20,360 --> 00:33:31,610
it's not what I wanted<font color="#CCCCCC"> but at least it's</font>

610
00:33:24,950 --> 00:33:34,820
half of<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I wanted so in this demo we</font>

611
00:33:31,610 --> 00:33:41,000
can see it a little<font color="#CCCCCC"> bit better here in</font>

612
00:33:34,820 --> 00:33:45,320
this demo I'm gonna build Glade on top

613
00:33:41,000 --> 00:33:49,280
<font color="#E5E5E5">of a very specific debian base</font><font color="#CCCCCC"> and then</font>

614
00:33:45,320 --> 00:33:53,419
I'm gonna generate a<font color="#CCCCCC"> Glade package in</font>

615
00:33:49,280 --> 00:33:56,420
that environment<font color="#E5E5E5"> targeting the</font><font color="#CCCCCC"> debian</font>

616
00:33:53,420 --> 00:33:59,410
<font color="#E5E5E5">version which I staged using debian</font>

617
00:33:56,420 --> 00:34:03,980
tooling which was staged<font color="#E5E5E5"> as part of that</font>

618
00:33:59,410 --> 00:34:06,260
<font color="#E5E5E5">import</font><font color="#CCCCCC"> process from OS tree alright so</font>

619
00:34:03,980 --> 00:34:10,850
here<font color="#CCCCCC"> we have a bit of</font><font color="#E5E5E5"> a sample of what</font>

620
00:34:06,260 --> 00:34:14,480
<font color="#E5E5E5">BST files look like this is basically an</font>

621
00:34:10,850 --> 00:34:18,199
import element says let's bring stuff

622
00:34:14,480 --> 00:34:23,389
into the pipeline<font color="#E5E5E5"> using an OS tree</font>

623
00:34:18,199 --> 00:34:25,819
source at a given URL with a<font color="#CCCCCC"> GPG key</font>

624
00:34:23,389 --> 00:34:29,870
that<font color="#CCCCCC"> I'm revision locally to check my</font>

625
00:34:25,820 --> 00:34:32,630
download from that<font color="#CCCCCC"> OS tree repo that</font>

626
00:34:29,870 --> 00:34:40,520
<font color="#E5E5E5">it's sane and it's signed by the people</font>

627
00:34:32,630 --> 00:34:45,860
I expect and we're using<font color="#E5E5E5"> AMD</font><font color="#CCCCCC"> 64 and we</font>

628
00:34:40,520 --> 00:34:47,480
have a ref<font color="#E5E5E5"> alright then we have to do</font>

629
00:34:45,860 --> 00:34:51,169
this something<font color="#CCCCCC"> that's actually</font><font color="#E5E5E5"> a bit</font>

630
00:34:47,480 --> 00:34:53,330
more<font color="#E5E5E5"> freaky because so the import we</font>

631
00:34:51,168 --> 00:34:55,940
we've imported that multi-strap thing

632
00:34:53,330 --> 00:34:58,730
but the multi-strap thing it doesn't

633
00:34:55,940 --> 00:35:01,160
configure because it's running<font color="#CCCCCC"> on a arch</font>

634
00:34:58,730 --> 00:35:04,400
64 and it does like a bunch of different

635
00:35:01,160 --> 00:35:05,899
<font color="#E5E5E5">architectures so we have to when you get</font>

636
00:35:04,400 --> 00:35:08,540
<font color="#CCCCCC">on to a host that</font><font color="#E5E5E5"> you know is going to</font>

637
00:35:05,900 --> 00:35:12,290
<font color="#E5E5E5">build we</font><font color="#CCCCCC"> staged it</font><font color="#E5E5E5"> all and we run</font><font color="#CCCCCC"> D</font>

638
00:35:08,540 --> 00:35:14,630
package configure and<font color="#E5E5E5"> we add a little</font>

639
00:35:12,290 --> 00:35:18,560
<font color="#E5E5E5">bit to</font><font color="#CCCCCC"> that to like remove stuff that we</font>

640
00:35:14,630 --> 00:35:20,540
don't<font color="#E5E5E5"> want and to tiptoe</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> it's</font>

641
00:35:18,560 --> 00:35:22,750
possibly<font color="#E5E5E5"> failing</font><font color="#CCCCCC"> without being</font><font color="#E5E5E5"> really</font>

642
00:35:20,540 --> 00:35:22,750
<font color="#CCCCCC">route</font>

643
00:35:24,410 --> 00:35:30,690
and since we have the install<font color="#E5E5E5"> route here</font>

644
00:35:27,840 --> 00:35:32,910
<font color="#E5E5E5">that indicates that this script element</font>

645
00:35:30,690 --> 00:35:35,700
<font color="#E5E5E5">so it's just a script element which runs</font>

646
00:35:32,910 --> 00:35:38,730
commands it stages this it runs<font color="#E5E5E5"> some</font>

647
00:35:35,700 --> 00:35:42,480
commands and because it said the install

648
00:35:38,730 --> 00:35:45,480
route is slash<font color="#E5E5E5"> the entire output is the</font>

649
00:35:42,480 --> 00:35:47,340
entire sister and it's just<font color="#CCCCCC"> basically</font>

650
00:35:45,480 --> 00:35:50,160
done a transformation on it

651
00:35:47,340 --> 00:35:52,380
and the output<font color="#CCCCCC"> is what we want because</font>

652
00:35:50,160 --> 00:35:56,520
<font color="#E5E5E5">that's an environment we know is safe to</font>

653
00:35:52,380 --> 00:35:59,280
executing so then when<font color="#CCCCCC"> we build Glade we</font>

654
00:35:56,520 --> 00:36:01,160
just use an auto tools element<font color="#E5E5E5"> because</font>

655
00:35:59,280 --> 00:36:08,670
it's nice and<font color="#E5E5E5"> slow</font>

656
00:36:01,160 --> 00:36:10,890
unlike Mezen so it adds padding to your

657
00:36:08,670 --> 00:36:14,930
build time<font color="#E5E5E5"> in the demo when you have</font>

658
00:36:10,890 --> 00:36:14,930
like minutes<font color="#E5E5E5"> to burn in the conference</font>

659
00:36:15,980 --> 00:36:21,870
yeah so basically<font color="#CCCCCC"> we just say I depend</font>

660
00:36:20,310 --> 00:36:26,730
<font color="#E5E5E5">on this this route which I just</font>

661
00:36:21,870 --> 00:36:28,859
<font color="#E5E5E5">previously configured and</font><font color="#CCCCCC"> stage me these</font>

662
00:36:26,730 --> 00:36:32,550
sources<font color="#E5E5E5"> so this is the sources I want to</font>

663
00:36:28,860 --> 00:36:37,280
<font color="#E5E5E5">build</font><font color="#CCCCCC"> I'm using an alias</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> like HTTP</font>

664
00:36:32,550 --> 00:36:40,080
dot dot dot slash slash<font color="#CCCCCC"> gnome Glade get</font>

665
00:36:37,280 --> 00:36:43,010
<font color="#E5E5E5">right and here we have some interesting</font>

666
00:36:40,080 --> 00:36:45,299
<font color="#E5E5E5">stuff the public data</font>

667
00:36:43,010 --> 00:36:48,390
so basically<font color="#E5E5E5"> everything we've seen so</font>

668
00:36:45,300 --> 00:36:52,560
<font color="#CCCCCC">far</font><font color="#E5E5E5"> is either core build stream format</font>

669
00:36:48,390 --> 00:36:54,450
or configurations that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> declared by</font>

670
00:36:52,560 --> 00:36:56,759
the plugins which implement them and

671
00:36:54,450 --> 00:37:00,029
that's all validated so if ever you

672
00:36:56,760 --> 00:37:01,440
specify a typo or<font color="#E5E5E5"> invalid value or</font>

673
00:37:00,030 --> 00:37:07,590
something<font color="#CCCCCC"> you're gonna get an early</font>

674
00:37:01,440 --> 00:37:11,690
<font color="#E5E5E5">abort but the public data is completely</font>

675
00:37:07,590 --> 00:37:16,800
<font color="#CCCCCC">freeform and what's special</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> it is</font>

676
00:37:11,690 --> 00:37:20,850
in a pipeline<font color="#E5E5E5"> such as this every</font><font color="#CCCCCC"> element</font>

677
00:37:16,800 --> 00:37:25,200
can see the<font color="#E5E5E5"> public data on all of the</font>

678
00:37:20,850 --> 00:37:27,299
<font color="#E5E5E5">elements it depends on right so a given</font>

679
00:37:25,200 --> 00:37:33,720
element can say this is some metadata

680
00:37:27,300 --> 00:37:35,870
that<font color="#E5E5E5"> a later element can consume and it</font>

681
00:37:33,720 --> 00:37:37,500
doesn't have<font color="#E5E5E5"> to be bound to any API</font>

682
00:37:35,870 --> 00:37:41,210
constraints

683
00:37:37,500 --> 00:37:44,520
it's rather<font color="#E5E5E5"> freeform so this is actually</font>

684
00:37:41,210 --> 00:37:47,250
informing this element the<font color="#CCCCCC"> D package</font>

685
00:37:44,520 --> 00:37:50,160
deploy element<font color="#E5E5E5"> what are the things</font>

686
00:37:47,250 --> 00:37:55,320
you're gonna need to know to be able<font color="#E5E5E5"> to</font>

687
00:37:50,160 --> 00:37:59,759
make a package<font color="#E5E5E5"> out of me all right then</font>

688
00:37:55,320 --> 00:38:02,190
we move to<font color="#E5E5E5"> this is most of this happens</font>

689
00:37:59,760 --> 00:38:04,710
in Python in<font color="#E5E5E5"> a custom element so</font><font color="#CCCCCC"> we</font>

690
00:38:02,190 --> 00:38:07,860
don't see a<font color="#E5E5E5"> lot of script here but</font>

691
00:38:04,710 --> 00:38:12,230
<font color="#E5E5E5">basically this one the D package deploy</font>

692
00:38:07,860 --> 00:38:14,940
element is<font color="#E5E5E5"> going to take the input</font>

693
00:38:12,230 --> 00:38:17,300
<font color="#CCCCCC">artifacts so that's part of the</font><font color="#E5E5E5"> D</font>

694
00:38:14,940 --> 00:38:20,250
package deploys custom element

695
00:38:17,300 --> 00:38:24,960
configuration which says<font color="#E5E5E5"> tell me what</font>

696
00:38:20,250 --> 00:38:27,900
you want me<font color="#CCCCCC"> to package</font><font color="#E5E5E5"> and tell me what</font>

697
00:38:24,960 --> 00:38:30,210
what part<font color="#E5E5E5"> of my dependencies is the base</font>

698
00:38:27,900 --> 00:38:33,840
right because he has to decide well I'm

699
00:38:30,210 --> 00:38:37,440
gonna stage all<font color="#E5E5E5"> of this dependencies</font><font color="#CCCCCC"> and</font>

700
00:38:33,840 --> 00:38:40,350
try to run on it right<font color="#E5E5E5"> surf on it and</font>

701
00:38:37,440 --> 00:38:44,490
this other dependency<font color="#E5E5E5"> I'm not putting it</font>

702
00:38:40,350 --> 00:38:46,110
there I'm<font color="#E5E5E5"> just gonna build it right</font><font color="#CCCCCC"> so</font>

703
00:38:44,490 --> 00:38:48,089
<font color="#CCCCCC">it puts it in different</font><font color="#E5E5E5"> parts of the</font>

704
00:38:46,110 --> 00:38:50,580
<font color="#CCCCCC">sandbox and one of them is the execution</font>

705
00:38:48,090 --> 00:38:53,100
environment and the other one is what

706
00:38:50,580 --> 00:39:01,319
<font color="#E5E5E5">it's gonna do something</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> it's gonna</font>

707
00:38:53,100 --> 00:39:07,620
package<font color="#CCCCCC"> something yes so I have a</font>

708
00:39:01,320 --> 00:39:12,680
<font color="#E5E5E5">feeling that we might be</font><font color="#CCCCCC"> able to see a</font>

709
00:39:07,620 --> 00:39:12,680
bit better<font color="#E5E5E5"> here all right</font>

710
00:39:14,880 --> 00:39:21,619
<font color="#CCCCCC">I better</font><font color="#E5E5E5"> just okay</font>

711
00:39:23,420 --> 00:39:32,549
what do<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have here</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is this is</font>

712
00:39:28,579 --> 00:39:35,480
the<font color="#E5E5E5"> project right so that's where we</font>

713
00:39:32,549 --> 00:39:48,390
have that key which verifies the input

714
00:39:35,480 --> 00:39:51,420
and here we have<font color="#E5E5E5"> our elements and we</font>

715
00:39:48,390 --> 00:39:56,609
have our cached elements<font color="#E5E5E5"> nice and big</font>

716
00:39:51,420 --> 00:39:58,740
<font color="#CCCCCC">okay and they're already built so I</font>

717
00:39:56,609 --> 00:39:59,359
can't<font color="#E5E5E5"> really build them for you</font><font color="#CCCCCC"> right</font>

718
00:39:58,740 --> 00:40:04,890
now

719
00:39:59,359 --> 00:40:12,710
maybe maybe<font color="#E5E5E5"> I could we try that</font><font color="#CCCCCC"> after if</font>

720
00:40:04,890 --> 00:40:12,710
we have time so<font color="#CCCCCC"> want to take a look at</font>

721
00:40:14,509 --> 00:40:21,750
I'm<font color="#CCCCCC"> gonna check out this that last</font>

722
00:40:17,819 --> 00:40:26,690
element from the slides<font color="#E5E5E5"> right we're</font>

723
00:40:21,750 --> 00:40:34,579
gonna check it out in a<font color="#CCCCCC"> location and</font>

724
00:40:26,690 --> 00:40:34,579
that is there right

725
00:40:38,710 --> 00:40:44,660
what this<font color="#CCCCCC"> D</font><font color="#E5E5E5"> package element did it it</font>

726
00:40:42,200 --> 00:40:47,359
just went<font color="#E5E5E5"> through the different domains</font>

727
00:40:44,660 --> 00:40:49,069
<font color="#E5E5E5">that we use for splitting by default</font><font color="#CCCCCC"> and</font>

728
00:40:47,359 --> 00:40:52,519
we say<font color="#E5E5E5"> okay there's different</font><font color="#CCCCCC"> categories</font>

729
00:40:49,069 --> 00:40:53,808
for stuff and<font color="#E5E5E5"> we just said well I'm</font>

730
00:40:52,519 --> 00:40:56,598
<font color="#CCCCCC">going to take everything</font><font color="#E5E5E5"> in the runtime</font>

731
00:40:53,809 --> 00:41:00,229
package and put it in a runtime it's

732
00:40:56,599 --> 00:41:05,779
really<font color="#E5E5E5"> stupid and straightforward but it</font>

733
00:41:00,229 --> 00:41:09,468
can be tweaked and those categories of

734
00:41:05,779 --> 00:41:12,019
files those split domains as we call

735
00:41:09,469 --> 00:41:14,479
them can also<font color="#E5E5E5"> be</font><font color="#CCCCCC"> configured</font><font color="#E5E5E5"> so you can</font>

736
00:41:12,019 --> 00:41:17,689
do more fancy<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> and it's a work in</font>

737
00:41:14,479 --> 00:41:24,950
<font color="#E5E5E5">progress</font><font color="#CCCCCC"> right which</font><font color="#E5E5E5"> is why doesn't</font>

738
00:41:17,690 --> 00:41:28,210
install cleanly on<font color="#E5E5E5"> my OS so I don't have</font>

739
00:41:24,950 --> 00:41:28,210
<font color="#CCCCCC">a</font><font color="#E5E5E5"> glade right</font>

740
00:41:32,490 --> 00:41:39,379
and I'm doing<font color="#E5E5E5"> for Saul let let</font><font color="#CCCCCC"> me see</font>

741
00:41:35,010 --> 00:41:43,010
what I think what happened when I did

742
00:41:39,380 --> 00:41:47,070
<font color="#E5E5E5">without force all it said you don't</font><font color="#CCCCCC"> have</font>

743
00:41:43,010 --> 00:41:52,260
<font color="#E5E5E5">yeah</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> architecture we didn't sort that</font>

744
00:41:47,070 --> 00:41:54,480
out<font color="#CCCCCC"> and there's also is there missing</font>

745
00:41:52,260 --> 00:41:58,680
description yeah<font color="#E5E5E5"> oh it needs some</font>

746
00:41:54,480 --> 00:42:01,170
description in the metadata<font color="#CCCCCC"> that's just</font>

747
00:41:58,680 --> 00:42:15,299
a warning<font color="#CCCCCC"> okay yeah any any was a bad</font>

748
00:42:01,170 --> 00:42:20,250
mistake you know there's a that that's

749
00:42:15,300 --> 00:42:24,839
really<font color="#E5E5E5"> bad don't do this</font><font color="#CCCCCC"> right but you</font>

750
00:42:20,250 --> 00:42:33,510
know it it works<font color="#CCCCCC"> right except that the</font>

751
00:42:24,839 --> 00:42:36,359
display is<font color="#E5E5E5"> very very small</font><font color="#CCCCCC"> alright but</font>

752
00:42:33,510 --> 00:42:40,050
<font color="#E5E5E5">basically you can you can use it and</font>

753
00:42:36,359 --> 00:42:42,420
it's<font color="#E5E5E5"> running on my host against my host</font>

754
00:42:40,050 --> 00:42:44,570
libraries and what's interesting is<font color="#CCCCCC"> that</font>

755
00:42:42,420 --> 00:42:50,310
<font color="#E5E5E5">I'm running</font>

756
00:42:44,570 --> 00:42:52,380
Debian stretch<font color="#E5E5E5"> and that was so yeah it's</font>

757
00:42:50,310 --> 00:42:54,299
not<font color="#CCCCCC"> I I</font><font color="#E5E5E5"> should have up I should have</font>

758
00:42:52,380 --> 00:42:58,410
built it against<font color="#E5E5E5"> Demian stretch but I</font>

759
00:42:54,300 --> 00:43:01,740
had<font color="#E5E5E5"> only a testing run time available at</font>

760
00:42:58,410 --> 00:43:04,980
the moment<font color="#CCCCCC"> so but what's interesting</font><font color="#E5E5E5"> is</font>

761
00:43:01,740 --> 00:43:09,660
you<font color="#CCCCCC"> can target</font><font color="#E5E5E5"> specific versions and you</font>

762
00:43:04,980 --> 00:43:13,800
can develop your package for fedora<font color="#E5E5E5"> or</font>

763
00:43:09,660 --> 00:43:16,230
for<font color="#E5E5E5"> Debian or for whichever on your gen</font>

764
00:43:13,800 --> 00:43:18,510
<font color="#E5E5E5">2 machine and actually</font><font color="#CCCCCC"> the hosts</font><font color="#E5E5E5"> should</font>

765
00:43:16,230 --> 00:43:20,700
never be relevant in what you're

766
00:43:18,510 --> 00:43:24,839
building anyway right because your host

767
00:43:20,700 --> 00:43:28,220
is always<font color="#E5E5E5"> just a moving target so I</font>

768
00:43:24,839 --> 00:43:28,220
think<font color="#E5E5E5"> that's pretty cool</font>

769
00:43:31,440 --> 00:43:44,480
and right now we're getting<font color="#CCCCCC"> into the</font>

770
00:43:38,270 --> 00:43:47,660
soon we're gonna have<font color="#CCCCCC"> Q&A but should i</font>

771
00:43:44,480 --> 00:43:47,660
<font color="#E5E5E5">let's see</font>

772
00:44:03,130 --> 00:44:18,779
<font color="#CCCCCC">whoops</font><font color="#E5E5E5"> now we said architecture amd64</font>

773
00:44:12,910 --> 00:44:18,779
right yes<font color="#E5E5E5"> uh okay</font>

774
00:44:30,450 --> 00:44:37,750
[Music]

775
00:44:38,030 --> 00:44:40,960
<font color="#E5E5E5">okay</font>

776
00:44:43,740 --> 00:44:51,220
so I'm curious<font color="#E5E5E5"> to see if I killed a</font>

777
00:44:46,420 --> 00:44:54,490
warning with this<font color="#E5E5E5"> and oh my okay</font>

778
00:44:51,220 --> 00:44:57,839
so we we failed our<font color="#CCCCCC"> 80 character</font>

779
00:44:54,490 --> 00:45:05,589
terminal with Sam<font color="#E5E5E5"> I'm sorry</font>

780
00:44:57,839 --> 00:45:09,779
this is horrible outrageous<font color="#E5E5E5"> no no no no</font>

781
00:45:05,589 --> 00:45:17,650
this is horrible<font color="#E5E5E5"> I know I know</font>

782
00:45:09,780 --> 00:45:27,839
there we go but then<font color="#E5E5E5"> nobody can see</font>

783
00:45:17,650 --> 00:45:27,839
<font color="#CCCCCC">anymore okay okay</font>

784
00:45:29,230 --> 00:45:32,320
[Music]

785
00:46:29,390 --> 00:46:45,259
<font color="#E5E5E5">ah yay</font><font color="#CCCCCC"> okay and that should</font><font color="#E5E5E5"> be the same</font>

786
00:46:37,760 --> 00:46:48,070
yeah okay<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> time for the</font>

787
00:46:45,260 --> 00:46:59,180
Spanish Inquisition

788
00:46:48,070 --> 00:47:01,100
yes binary packages<font color="#CCCCCC"> for whatever you're</font>

789
00:46:59,180 --> 00:47:03,680
skipping straight past the source

790
00:47:01,100 --> 00:47:07,040
package stage yes<font color="#E5E5E5"> directly to</font>

791
00:47:03,680 --> 00:47:09,980
essentially<font color="#CCCCCC"> a glorified</font><font color="#E5E5E5"> tar wall so you</font>

792
00:47:07,040 --> 00:47:12,680
have a Debian package<font color="#CCCCCC"> Debian</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> thought</font>

793
00:47:09,980 --> 00:47:16,520
that hair that has never<font color="#E5E5E5"> had nobody s</font>

794
00:47:12,680 --> 00:47:18,799
city or in good oral and you'd have<font color="#CCCCCC"> rpms</font>

795
00:47:16,520 --> 00:47:21,759
<font color="#CCCCCC">that</font><font color="#E5E5E5"> there just has never been a</font>

796
00:47:18,800 --> 00:47:26,420
corresponding I<font color="#CCCCCC"> thought yeah</font><font color="#E5E5E5"> yes right</font>

797
00:47:21,760 --> 00:47:29,300
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> where yes so we want to use</font>

798
00:47:26,420 --> 00:47:31,430
the same build instructions<font color="#CCCCCC"> right and we</font>

799
00:47:29,300 --> 00:47:33,890
want<font color="#E5E5E5"> to treat the packaging systems as</font>

800
00:47:31,430 --> 00:47:38,390
only<font color="#CCCCCC"> a packaging system and not</font><font color="#E5E5E5"> a build</font>

801
00:47:33,890 --> 00:47:41,900
system<font color="#E5E5E5"> all</font><font color="#CCCCCC"> right so these can only</font><font color="#E5E5E5"> ever</font>

802
00:47:38,390 --> 00:47:45,500
be<font color="#E5E5E5"> like released uploaded whatever to a</font>

803
00:47:41,900 --> 00:47:47,210
distribution<font color="#CCCCCC"> that has</font><font color="#E5E5E5"> like made a</font>

804
00:47:45,500 --> 00:47:52,120
decision that<font color="#E5E5E5"> this is an</font><font color="#CCCCCC"> OK way</font><font color="#E5E5E5"> of</font>

805
00:47:47,210 --> 00:47:52,120
working<font color="#CCCCCC"> yes yes</font>

806
00:47:53,310 --> 00:48:00,790
yes question<font color="#CCCCCC"> about I realized</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

807
00:47:58,090 --> 00:48:03,010
all generic<font color="#E5E5E5"> but in practice the compose</font>

808
00:48:00,790 --> 00:48:05,859
<font color="#E5E5E5">stage in the image stage once you have</font>

809
00:48:03,010 --> 00:48:09,040
<font color="#CCCCCC">cashing of the artifacts those stages</font>

810
00:48:05,859 --> 00:48:10,569
<font color="#E5E5E5">tend to be quite long take a lot of time</font>

811
00:48:09,040 --> 00:48:12,910
and<font color="#E5E5E5"> especially if you were going to</font>

812
00:48:10,570 --> 00:48:15,730
build<font color="#E5E5E5"> source package unpack that and</font>

813
00:48:12,910 --> 00:48:17,618
<font color="#E5E5E5">sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> having all of this package and</font>

814
00:48:15,730 --> 00:48:20,950
could you comment on<font color="#E5E5E5"> how we could</font>

815
00:48:17,619 --> 00:48:23,340
<font color="#E5E5E5">improve</font><font color="#CCCCCC"> those stages</font><font color="#E5E5E5"> so so you actually</font>

816
00:48:20,950 --> 00:48:25,660
<font color="#CCCCCC">get the minimum</font><font color="#E5E5E5"> amount of work</font><font color="#CCCCCC"> for these</font>

817
00:48:23,340 --> 00:48:29,350
this<font color="#E5E5E5"> tiny change</font>

818
00:48:25,660 --> 00:48:31,899
okay so or it<font color="#E5E5E5"> just explained in practice</font>

819
00:48:29,350 --> 00:48:41,200
how you<font color="#E5E5E5"> what happens in those papers</font><font color="#CCCCCC"> for</font>

820
00:48:31,900 --> 00:48:45,030
example in the beginning<font color="#E5E5E5"> to create a</font>

821
00:48:41,200 --> 00:48:45,029
system you<font color="#E5E5E5"> to to build on</font><font color="#CCCCCC"> top of</font>

822
00:48:47,910 --> 00:48:58,149
<font color="#E5E5E5">okay so there in that example we don't</font>

823
00:48:53,950 --> 00:49:00,899
<font color="#E5E5E5">use packages at all right</font><font color="#CCCCCC"> but there is</font>

824
00:48:58,150 --> 00:49:03,970
another project that<font color="#E5E5E5"> we have which does</font>

825
00:49:00,900 --> 00:49:06,730
except it's not using build stream yet

826
00:49:03,970 --> 00:49:09,279
<font color="#E5E5E5">and we have something similar which</font>

827
00:49:06,730 --> 00:49:14,200
creates the packages for<font color="#CCCCCC"> our p.m. using</font>

828
00:49:09,280 --> 00:49:17,440
-<font color="#E5E5E5"> BB to skip the build steps and it will</font>

829
00:49:14,200 --> 00:49:19,839
use like<font color="#E5E5E5"> rpm install - - this route and</font>

830
00:49:17,440 --> 00:49:22,359
just<font color="#E5E5E5"> to a place and it will do</font><font color="#CCCCCC"> that but</font>

831
00:49:19,840 --> 00:49:25,480
<font color="#E5E5E5">that's especially</font><font color="#CCCCCC"> because it</font><font color="#E5E5E5"> was for an</font>

832
00:49:22,359 --> 00:49:30,090
organization which was<font color="#E5E5E5"> using rpms</font><font color="#CCCCCC"> and</font>

833
00:49:25,480 --> 00:49:30,090
using<font color="#E5E5E5"> me go image creator</font>

834
00:49:38,820 --> 00:49:45,910
to get the minimal<font color="#CCCCCC"> amount of work to</font>

835
00:49:41,620 --> 00:49:50,109
change create a recall system<font color="#E5E5E5"> based on</font>

836
00:49:45,910 --> 00:49:53,578
<font color="#E5E5E5">what</font><font color="#CCCCCC"> you another</font><font color="#E5E5E5"> one that is there is</font>

837
00:49:50,110 --> 00:49:53,579
[Music]

838
00:49:54,900 --> 00:50:02,260
that's very<font color="#E5E5E5"> difficult to do yeah that's</font>

839
00:49:58,600 --> 00:50:06,720
<font color="#E5E5E5">that</font><font color="#CCCCCC"> on the file level we don't</font><font color="#E5E5E5"> we don't</font>

840
00:50:02,260 --> 00:50:11,350
<font color="#E5E5E5">have that really no it's it's one shot</font>

841
00:50:06,720 --> 00:50:14,200
<font color="#E5E5E5">compose for</font><font color="#CCCCCC"> for compose</font><font color="#E5E5E5"> it's very doable</font>

842
00:50:11,350 --> 00:50:15,910
<font color="#E5E5E5">and for the image constructing the image</font>

843
00:50:14,200 --> 00:50:19,439
is very tricky<font color="#E5E5E5"> because you have</font>

844
00:50:15,910 --> 00:50:28,359
partitions and you need to splice them

845
00:50:19,440 --> 00:50:29,130
but yeah it's it's<font color="#E5E5E5"> difficult anybody</font>

846
00:50:28,360 --> 00:50:39,580
else

847
00:50:29,130 --> 00:50:41,890
yes compiler to compile<font color="#E5E5E5"> the rest of your</font>

848
00:50:39,580 --> 00:50:45,220
system<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that kind of thing</font><font color="#CCCCCC"> so xavier</font>

849
00:50:41,890 --> 00:50:50,520
and<font color="#CCCCCC"> adam are working on the free desktop</font>

850
00:50:45,220 --> 00:50:54,250
<font color="#CCCCCC">sdk project adam's behind you and they</font>

851
00:50:50,520 --> 00:50:57,040
<font color="#E5E5E5">they are doing a</font><font color="#CCCCCC"> project which does the</font>

852
00:50:54,250 --> 00:51:01,900
bootstrap and<font color="#CCCCCC"> i'm not</font><font color="#E5E5E5"> sure</font><font color="#CCCCCC"> where they</font>

853
00:50:57,040 --> 00:51:03,759
are<font color="#E5E5E5"> with it yet but basically yeah</font><font color="#CCCCCC"> i'm</font>

854
00:51:01,900 --> 00:51:05,830
just<font color="#E5E5E5"> not</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> about what's the input</font>

855
00:51:03,760 --> 00:51:08,080
<font color="#E5E5E5">going into the cycle but</font><font color="#CCCCCC"> it should be</font>

856
00:51:05,830 --> 00:51:12,210
<font color="#E5E5E5">circular at this time so you basically</font>

857
00:51:08,080 --> 00:51:16,060
<font color="#E5E5E5">have</font><font color="#CCCCCC"> g lib cGCC</font>

858
00:51:12,210 --> 00:51:23,380
<font color="#CCCCCC">busy box and i think you</font><font color="#E5E5E5"> need a new said</font>

859
00:51:16,060 --> 00:51:25,900
to get through the build of GCC yeah

860
00:51:23,380 --> 00:51:28,270
well build stream has<font color="#CCCCCC"> been doing</font><font color="#E5E5E5"> these</font>

861
00:51:25,900 --> 00:51:30,460
<font color="#E5E5E5">bootstraps since the beginning because</font>

862
00:51:28,270 --> 00:51:33,280
it's very important to us to<font color="#CCCCCC"> know that</font>

863
00:51:30,460 --> 00:51:36,600
<font color="#E5E5E5">we can write right but yes that's a</font>

864
00:51:33,280 --> 00:51:36,600
<font color="#E5E5E5">separate project</font>

865
00:51:39,500 --> 00:51:45,960
yeah yeah the way it works is it the

866
00:51:43,530 --> 00:51:49,650
<font color="#E5E5E5">first time we built it it was from a</font>

867
00:51:45,960 --> 00:51:53,280
free<font color="#E5E5E5"> desktop SDK 1.6 that we were</font>

868
00:51:49,650 --> 00:51:55,650
importing<font color="#CCCCCC"> I believe and now that we've</font>

869
00:51:53,280 --> 00:52:00,330
built it once we<font color="#E5E5E5"> commit it and then and</font>

870
00:51:55,650 --> 00:52:04,020
the first stage is cross<font color="#E5E5E5"> so the first</font>

871
00:52:00,330 --> 00:52:06,900
stage<font color="#E5E5E5"> you generate an output with it</font>

872
00:52:04,020 --> 00:52:09,870
with a target and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> never execute on</font>

873
00:52:06,900 --> 00:52:13,590
the build<font color="#E5E5E5"> any of the binaries</font><font color="#CCCCCC"> that you</font>

874
00:52:09,870 --> 00:52:15,870
generate but then you can<font color="#E5E5E5"> import</font><font color="#CCCCCC"> that on</font>

875
00:52:13,590 --> 00:52:18,500
a foreign<font color="#CCCCCC"> architecture and continue the</font>

876
00:52:15,870 --> 00:52:18,500
build from there

877
00:52:26,470 --> 00:52:42,700
yes how many projects<font color="#CCCCCC"> have been</font><font color="#E5E5E5"> so</font>

878
00:52:39,599 --> 00:52:46,390
during the past<font color="#E5E5E5"> like since</font><font color="#CCCCCC"> gwah</font><font color="#E5E5E5"> tech</font>

879
00:52:42,700 --> 00:52:50,529
<font color="#E5E5E5">we've had a system</font><font color="#CCCCCC"> going on where we</font>

880
00:52:46,390 --> 00:52:55,569
were building from conversions of<font color="#E5E5E5"> JH</font>

881
00:52:50,530 --> 00:53:00,730
build so as far as<font color="#E5E5E5"> gnome goes there's</font>

882
00:52:55,569 --> 00:53:03,369
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> that was in JH build</font><font color="#E5E5E5"> sends</font>

883
00:53:00,730 --> 00:53:06,190
<font color="#E5E5E5">the apps because release team wants to</font>

884
00:53:03,369 --> 00:53:09,040
<font color="#E5E5E5">make the distinction where apps go into</font>

885
00:53:06,190 --> 00:53:12,160
flat packs and only<font color="#E5E5E5"> cord gets built</font>

886
00:53:09,040 --> 00:53:15,220
separately<font color="#CCCCCC"> so those are</font><font color="#E5E5E5"> currently being</font>

887
00:53:12,160 --> 00:53:18,520
<font color="#E5E5E5">built with</font><font color="#CCCCCC"> build stream and we're xavier</font>

888
00:53:15,220 --> 00:53:25,500
should get CI online<font color="#E5E5E5"> next</font><font color="#CCCCCC"> week so that</font>

889
00:53:18,520 --> 00:53:25,500
<font color="#E5E5E5">we have</font><font color="#CCCCCC"> Auto builds asides from that</font>

890
00:53:25,680 --> 00:53:37,328
other projects which cannot<font color="#E5E5E5"> be spoken</font><font color="#CCCCCC"> up</font>

891
00:53:32,280 --> 00:53:40,329
<font color="#E5E5E5">but yeah I'm hoping to</font><font color="#CCCCCC"> get to a point</font>

892
00:53:37,329 --> 00:53:43,420
where I can make<font color="#E5E5E5"> flat packs of</font><font color="#CCCCCC"> glade</font><font color="#E5E5E5"> and</font>

893
00:53:40,329 --> 00:53:46,930
like have it<font color="#E5E5E5"> myself and and we're gonna</font>

894
00:53:43,420 --> 00:53:50,310
talk<font color="#CCCCCC"> with Alexander</font><font color="#E5E5E5"> Larsen about having</font>

895
00:53:46,930 --> 00:53:50,310
support in flat hub as well

896
00:53:52,280 --> 00:54:03,590
<font color="#CCCCCC">in Yoshio other bsd that's what you mean</font>

897
00:54:01,550 --> 00:54:08,600
<font color="#CCCCCC">like not our not other architectures</font>

898
00:54:03,590 --> 00:54:11,870
other platforms<font color="#E5E5E5"> right so we have a</font><font color="#CCCCCC"> UNIX</font>

899
00:54:08,600 --> 00:54:14,270
<font color="#E5E5E5">back-end because right now by default</font><font color="#CCCCCC"> on</font>

900
00:54:11,870 --> 00:54:17,660
<font color="#CCCCCC">Linux we use bubble wrap for the</font>

901
00:54:14,270 --> 00:54:21,320
containers and<font color="#CCCCCC"> we use OS tree for the</font>

902
00:54:17,660 --> 00:54:24,680
artifact<font color="#E5E5E5"> cache because</font><font color="#CCCCCC"> their optimal</font>

903
00:54:21,320 --> 00:54:26,180
solutions for the problem<font color="#E5E5E5"> and we have a</font>

904
00:54:24,680 --> 00:54:28,730
lot of Eunice's out there which just

905
00:54:26,180 --> 00:54:33,410
<font color="#E5E5E5">don't have that and doesn't</font><font color="#CCCCCC"> really make</font>

906
00:54:28,730 --> 00:54:35,270
<font color="#CCCCCC">sense to</font><font color="#E5E5E5"> like make</font><font color="#CCCCCC"> OS</font><font color="#E5E5E5"> tree</font><font color="#CCCCCC"> supported I</font>

907
00:54:33,410 --> 00:54:40,970
don't think that's gonna fly<font color="#CCCCCC"> for every</font>

908
00:54:35,270 --> 00:54:44,120
different<font color="#E5E5E5"> platform AIX</font><font color="#CCCCCC"> solaris right so</font>

909
00:54:40,970 --> 00:54:47,540
we have a UNIX platform<font color="#E5E5E5"> back-end which</font>

910
00:54:44,120 --> 00:54:51,770
requires root and you do<font color="#CCCCCC"> asha root and</font>

911
00:54:47,540 --> 00:54:54,410
you use<font color="#CCCCCC"> tarballs instead we have</font>

912
00:54:51,770 --> 00:54:57,650
somebody<font color="#CCCCCC"> I forget his name last week</font>

913
00:54:54,410 --> 00:55:01,790
came in and started<font color="#E5E5E5"> testing building</font>

914
00:54:57,650 --> 00:55:04,730
gnome on<font color="#E5E5E5"> BSD and he's got some some like</font>

915
00:55:01,790 --> 00:55:07,850
hack patches that we can inspect and use

916
00:55:04,730 --> 00:55:11,600
it to<font color="#E5E5E5"> fix it for</font><font color="#CCCCCC"> BSD but we want to make</font>

917
00:55:07,850 --> 00:55:14,600
better platforms for specific targets

918
00:55:11,600 --> 00:55:19,069
<font color="#E5E5E5">using the technologies which</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> on</font>

919
00:55:14,600 --> 00:55:22,310
those<font color="#E5E5E5"> targets Windows is a long time</font>

920
00:55:19,070 --> 00:55:24,490
<font color="#E5E5E5">coming I think it's not it's not next</font>

921
00:55:22,310 --> 00:55:24,490
<font color="#E5E5E5">week</font>

922
00:55:30,980 --> 00:55:33,910
<font color="#E5E5E5">okay</font>

