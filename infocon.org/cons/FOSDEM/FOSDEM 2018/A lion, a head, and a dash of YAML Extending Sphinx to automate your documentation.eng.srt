1
00:00:04,640 --> 00:00:11,860
<font color="#E5E5E5">first or graphics from stealin from Red</font>

2
00:00:08,420 --> 00:00:16,090
Hat<font color="#CCCCCC"> okay thanks yeah</font>

3
00:00:11,860 --> 00:00:20,060
[Applause]

4
00:00:16,090 --> 00:00:23,540
so show<font color="#CCCCCC"> of hands has anyone in the</font><font color="#E5E5E5"> room</font>

5
00:00:20,060 --> 00:00:24,590
not<font color="#E5E5E5"> heard</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Fink's</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> right</font>

6
00:00:23,540 --> 00:00:25,910
<font color="#E5E5E5">because I have</font><font color="#CCCCCC"> a whole</font><font color="#E5E5E5"> introduction</font>

7
00:00:24,590 --> 00:00:27,890
section here I was just<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> skip</font><font color="#CCCCCC"> it if</font>

8
00:00:25,910 --> 00:00:29,720
<font color="#E5E5E5">everyone had already heard of it so a</font>

9
00:00:27,890 --> 00:00:31,759
very<font color="#E5E5E5"> quick summary</font>

10
00:00:29,720 --> 00:00:33,440
you've got<font color="#E5E5E5"> swings you've got dark utils</font>

11
00:00:31,759 --> 00:00:37,250
<font color="#E5E5E5">and you've got restructure</font><font color="#CCCCCC"> tics and they</font>

12
00:00:33,440 --> 00:00:40,010
all kind<font color="#E5E5E5"> of build on each other the</font>

13
00:00:37,250 --> 00:00:43,790
first to start<font color="#E5E5E5"> off restructured takes is</font>

14
00:00:40,010 --> 00:00:47,540
a<font color="#E5E5E5"> plaintext mark like mark down like</font>

15
00:00:43,790 --> 00:00:50,530
format that you use<font color="#E5E5E5"> to a to mark up</font><font color="#CCCCCC"> your</font>

16
00:00:47,540 --> 00:00:53,240
text<font color="#CCCCCC"> so it supports</font><font color="#E5E5E5"> a couple of things</font>

17
00:00:50,530 --> 00:00:54,200
<font color="#CCCCCC">your basic</font><font color="#E5E5E5"> formatting options whether</font>

18
00:00:53,240 --> 00:00:58,700
you want to mark something as<font color="#E5E5E5"> bold</font>

19
00:00:54,200 --> 00:01:00,620
<font color="#E5E5E5">italic and that it supports linking you</font>

20
00:00:58,700 --> 00:01:03,080
can do substitutions you can mark

21
00:01:00,620 --> 00:01:05,298
obviously<font color="#CCCCCC"> markup</font><font color="#E5E5E5"> your titles for anyone</font>

22
00:01:03,080 --> 00:01:08,869
<font color="#E5E5E5">that's ever used github or something</font><font color="#CCCCCC"> it</font>

23
00:01:05,299 --> 00:01:13,150
looks<font color="#E5E5E5"> very similar to markdown only a</font>

24
00:01:08,869 --> 00:01:15,470
lot<font color="#E5E5E5"> more powerful</font><font color="#CCCCCC"> a lot more extensible</font>

25
00:01:13,150 --> 00:01:19,520
if you feed<font color="#CCCCCC"> that restructure text</font>

26
00:01:15,470 --> 00:01:24,320
through something like rest HTML<font color="#E5E5E5"> it'll</font>

27
00:01:19,520 --> 00:01:25,820
give you HTML output<font color="#E5E5E5"> and this is this is</font>

28
00:01:24,320 --> 00:01:27,380
kind of the basic functionality this is

29
00:01:25,820 --> 00:01:29,240
what a lot of<font color="#CCCCCC"> people to be familiar with</font>

30
00:01:27,380 --> 00:01:31,369
<font color="#E5E5E5">from the restructure</font><font color="#CCCCCC"> text perspective is</font>

31
00:01:29,240 --> 00:01:34,250
what<font color="#CCCCCC"> Wester HTML give you but</font><font color="#E5E5E5"> that's</font>

32
00:01:31,370 --> 00:01:39,170
only a part of<font color="#E5E5E5"> the power of restructure</font>

33
00:01:34,250 --> 00:01:40,909
text other stuff<font color="#CCCCCC"> that we can do</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> is</font>

34
00:01:39,170 --> 00:01:44,150
<font color="#E5E5E5">kind of unique</font><font color="#CCCCCC"> to restructure text</font>

35
00:01:40,909 --> 00:01:45,650
<font color="#E5E5E5">you've got things called</font><font color="#CCCCCC"> roles</font><font color="#E5E5E5"> and</font>

36
00:01:44,150 --> 00:01:46,880
you've got<font color="#E5E5E5"> things called directives</font><font color="#CCCCCC"> I'm</font>

37
00:01:45,650 --> 00:01:47,990
going to go into<font color="#E5E5E5"> a lot more detail in</font>

38
00:01:46,880 --> 00:01:51,470
<font color="#E5E5E5">these over the course</font><font color="#CCCCCC"> of the</font>

39
00:01:47,990 --> 00:01:54,140
presentation<font color="#E5E5E5"> but rolls essentially this</font>

40
00:01:51,470 --> 00:01:56,900
<font color="#E5E5E5">is your</font><font color="#CCCCCC"> role it's something surrounded</font>

41
00:01:54,140 --> 00:01:59,270
by colons<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> you're back Tilda's</font>

42
00:01:56,900 --> 00:02:02,479
and whatever you want<font color="#CCCCCC"> to pass into</font><font color="#E5E5E5"> the</font>

43
00:01:59,270 --> 00:02:05,179
world<font color="#E5E5E5"> you can use roles to do like the</font>

44
00:02:02,479 --> 00:02:06,350
formatting style<font color="#E5E5E5"> markup so</font><font color="#CCCCCC"> - for example</font>

45
00:02:05,180 --> 00:02:08,840
to say something should<font color="#CCCCCC"> be bold or</font>

46
00:02:06,350 --> 00:02:10,970
italic but you can also there's a lot

47
00:02:08,840 --> 00:02:13,640
more<font color="#E5E5E5"> functionality that can be embedded</font>

48
00:02:10,970 --> 00:02:16,939
into<font color="#CCCCCC"> roles</font><font color="#E5E5E5"> the directives then are</font>

49
00:02:13,640 --> 00:02:18,439
indicated<font color="#CCCCCC"> by these two dots</font><font color="#E5E5E5"> the name of</font>

50
00:02:16,939 --> 00:02:21,049
the<font color="#CCCCCC"> directive and they're</font><font color="#E5E5E5"> the two colons</font>

51
00:02:18,439 --> 00:02:23,329
<font color="#CCCCCC">some arguments</font><font color="#E5E5E5"> and optionally somebody</font>

52
00:02:21,049 --> 00:02:26,060
takes this in the example of an

53
00:02:23,330 --> 00:02:28,220
admonition<font color="#E5E5E5"> which is like a</font><font color="#CCCCCC"> call-out in</font>

54
00:02:26,060 --> 00:02:29,750
<font color="#E5E5E5">the</font><font color="#CCCCCC"> document so when you</font><font color="#E5E5E5"> enter this</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> H</font>

55
00:02:28,220 --> 00:02:31,690
<font color="#CCCCCC">jemelle or latex</font><font color="#E5E5E5"> you'll usually see this</font>

56
00:02:29,750 --> 00:02:34,190
<font color="#E5E5E5">as a big call out with a box around it</font>

57
00:02:31,690 --> 00:02:36,650
<font color="#E5E5E5">all of these</font><font color="#CCCCCC"> are provided as part</font><font color="#E5E5E5"> of the</font>

58
00:02:34,190 --> 00:02:38,810
standard<font color="#CCCCCC"> restructured</font><font color="#E5E5E5"> text parser which</font>

59
00:02:36,650 --> 00:02:44,090
is stock utils<font color="#CCCCCC"> which are going</font><font color="#E5E5E5"> to go</font>

60
00:02:38,810 --> 00:02:46,580
into next and<font color="#E5E5E5"> again rendered so</font>

61
00:02:44,090 --> 00:02:49,160
restructure text is essentially your

62
00:02:46,580 --> 00:02:52,700
syntax<font color="#CCCCCC"> doc utils is the thing that</font>

63
00:02:49,160 --> 00:02:55,670
converts that syntax<font color="#E5E5E5"> into your output</font>

64
00:02:52,700 --> 00:02:57,709
form<font color="#CCCCCC"> doc utils</font><font color="#E5E5E5"> all support supports</font>

65
00:02:55,670 --> 00:02:59,869
other kinds<font color="#E5E5E5"> of readers markdown for</font>

66
00:02:57,710 --> 00:03:02,209
example was added<font color="#CCCCCC"> recently as part of a</font>

67
00:02:59,870 --> 00:03:03,470
separate extension but<font color="#E5E5E5"> we sure should</font>

68
00:03:02,209 --> 00:03:07,160
<font color="#E5E5E5">take something that most</font><font color="#CCCCCC"> people would be</font>

69
00:03:03,470 --> 00:03:08,120
<font color="#CCCCCC">familiar</font><font color="#E5E5E5"> with now this is where</font><font color="#CCCCCC"> sphinx</font>

70
00:03:07,160 --> 00:03:10,700
comes in

71
00:03:08,120 --> 00:03:14,959
<font color="#E5E5E5">sphynx builds upon doc utils</font><font color="#CCCCCC"> and it adds</font>

72
00:03:10,700 --> 00:03:17,720
things<font color="#E5E5E5"> like the ability to cross</font>

73
00:03:14,959 --> 00:03:19,790
reference documents build multiple

74
00:03:17,720 --> 00:03:22,280
<font color="#E5E5E5">output documents as opposed to like one</font>

75
00:03:19,790 --> 00:03:25,489
input document equals one<font color="#CCCCCC"> output</font>

76
00:03:22,280 --> 00:03:26,959
document<font color="#E5E5E5"> and basically the whole</font><font color="#CCCCCC"> order</font>

77
00:03:25,490 --> 00:03:28,610
<font color="#E5E5E5">functionality</font><font color="#CCCCCC"> that means you can use</font><font color="#E5E5E5"> it</font>

78
00:03:26,959 --> 00:03:30,200
as a proper documentation tool as

79
00:03:28,610 --> 00:03:33,890
opposed to some way of like storing your

80
00:03:30,200 --> 00:03:35,450
documentation in plain text<font color="#E5E5E5"> and</font><font color="#CCCCCC"> just to</font>

81
00:03:33,890 --> 00:03:38,089
reinforce that doc utils readers

82
00:03:35,450 --> 00:03:40,609
<font color="#CCCCCC">pastures transformers and writers</font>

83
00:03:38,090 --> 00:03:42,380
dealing<font color="#E5E5E5"> with individual files</font><font color="#CCCCCC"> sphinx</font>

84
00:03:40,610 --> 00:03:44,750
extends<font color="#CCCCCC"> that to work with multiple</font><font color="#E5E5E5"> files</font>

85
00:03:42,380 --> 00:03:46,519
<font color="#E5E5E5">and it uses</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> concept called builders</font>

86
00:03:44,750 --> 00:03:49,360
which I'll touch on<font color="#E5E5E5"> here I won't go into</font>

87
00:03:46,519 --> 00:03:49,360
too<font color="#CCCCCC"> much detail up</font>

88
00:03:51,080 --> 00:03:55,040
and the reason<font color="#CCCCCC"> that I'm here</font><font color="#E5E5E5"> talking</font>

89
00:03:52,880 --> 00:03:58,210
about<font color="#E5E5E5"> Sphinx today is the last points on</font>

90
00:03:55,040 --> 00:04:01,579
this list<font color="#E5E5E5"> it has fantastic extensibility</font>

91
00:03:58,210 --> 00:04:03,320
<font color="#E5E5E5">interfaces pretty much anything</font><font color="#CCCCCC"> that you</font>

92
00:04:01,580 --> 00:04:05,150
want<font color="#E5E5E5"> to do with your documentation if</font>

93
00:04:03,320 --> 00:04:08,989
you know how to use things you can do it

94
00:04:05,150 --> 00:04:10,760
this<font color="#E5E5E5"> way and all of</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> when I'm</font>

95
00:04:08,990 --> 00:04:12,320
talking about building documentation the

96
00:04:10,760 --> 00:04:15,200
Sphinx build that's the executable that

97
00:04:12,320 --> 00:04:17,420
<font color="#CCCCCC">most people would be</font><font color="#E5E5E5"> familiar with so</font>

98
00:04:15,200 --> 00:04:21,440
<font color="#E5E5E5">yeah let's get to accepting this stuff</font>

99
00:04:17,420 --> 00:04:23,330
so some warnings before<font color="#CCCCCC"> I start but</font>

100
00:04:21,440 --> 00:04:25,670
<font color="#E5E5E5">Spinks</font><font color="#CCCCCC"> has written</font><font color="#E5E5E5"> in Python it was</font>

101
00:04:23,330 --> 00:04:31,310
initially<font color="#CCCCCC"> developed for</font><font color="#E5E5E5"> the Python API</font>

102
00:04:25,670 --> 00:04:32,900
documentation<font color="#CCCCCC"> so it's still it's</font><font color="#E5E5E5"> sports</font>

103
00:04:31,310 --> 00:04:37,580
multiple different<font color="#E5E5E5"> languages through a</font>

104
00:04:32,900 --> 00:04:39,320
thing called with domains but it's

105
00:04:37,580 --> 00:04:40,669
<font color="#E5E5E5">obviously it's</font><font color="#CCCCCC"> still all written</font><font color="#E5E5E5"> in</font>

106
00:04:39,320 --> 00:04:42,710
Python<font color="#CCCCCC"> so there's a little bit of</font><font color="#E5E5E5"> Python</font>

107
00:04:40,670 --> 00:04:44,150
knowledge expected here when it's<font color="#E5E5E5"> just</font>

108
00:04:42,710 --> 00:04:46,010
when I'm showing<font color="#E5E5E5"> code I'd be keeping the</font>

109
00:04:44,150 --> 00:04:48,739
co2 minimums<font color="#CCCCCC"> no so</font><font color="#E5E5E5"> don't worry about</font>

110
00:04:46,010 --> 00:04:50,150
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I'm gonna be referencing some open</font>

111
00:04:48,740 --> 00:04:53,270
set projects because that's what I work

112
00:04:50,150 --> 00:04:55,580
on<font color="#E5E5E5"> in my</font><font color="#CCCCCC"> day job and I have a github</font>

113
00:04:53,270 --> 00:04:56,840
github link here the slides or should be

114
00:04:55,580 --> 00:04:58,880
<font color="#CCCCCC">available on the</font><font color="#E5E5E5"> fasting website</font>

115
00:04:56,840 --> 00:05:00,140
afterwards<font color="#E5E5E5"> with these links and</font><font color="#CCCCCC"> I'll</font>

116
00:04:58,880 --> 00:05:01,850
also give a<font color="#CCCCCC"> references section at the</font>

117
00:05:00,140 --> 00:05:05,710
<font color="#CCCCCC">end but all the code that I've given</font>

118
00:05:01,850 --> 00:05:05,710
here is all available<font color="#E5E5E5"> in the github repo</font>

119
00:05:06,900 --> 00:05:12,090
so from the<font color="#CCCCCC"> perspective of extending</font>

120
00:05:09,960 --> 00:05:14,609
<font color="#E5E5E5">Sphinx everything starts from the</font>

121
00:05:12,090 --> 00:05:17,310
application object<font color="#CCCCCC"> is fixed this</font><font color="#E5E5E5"> is your</font>

122
00:05:14,610 --> 00:05:20,340
your main entry point<font color="#CCCCCC"> so when you call</font>

123
00:05:17,310 --> 00:05:24,510
<font color="#CCCCCC">Sphinx build</font><font color="#E5E5E5"> when you call like the</font>

124
00:05:20,340 --> 00:05:28,140
builds dark<font color="#CCCCCC"> setup tools</font><font color="#E5E5E5"> command</font><font color="#CCCCCC"> point</font>

125
00:05:24,510 --> 00:05:30,870
<font color="#E5E5E5">all of</font><font color="#CCCCCC"> these call into</font><font color="#E5E5E5"> sync application</font>

126
00:05:28,140 --> 00:05:32,280
the application<font color="#E5E5E5"> object that provides</font><font color="#CCCCCC"> a</font>

127
00:05:30,870 --> 00:05:34,260
<font color="#CCCCCC">load of</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> functions that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

128
00:05:32,280 --> 00:05:36,419
<font color="#E5E5E5">use within your own extension to add</font>

129
00:05:34,260 --> 00:05:38,099
various different capabilities<font color="#E5E5E5"> the</font>

130
00:05:36,420 --> 00:05:39,840
things I'm<font color="#E5E5E5"> going to focus on today here</font>

131
00:05:38,100 --> 00:05:42,330
<font color="#E5E5E5">they're adding configuration values</font>

132
00:05:39,840 --> 00:05:44,460
directives<font color="#E5E5E5"> roles which</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> both</font>

133
00:05:42,330 --> 00:05:49,669
mentioned<font color="#E5E5E5"> before and another thing which</font>

134
00:05:44,460 --> 00:05:53,099
is<font color="#CCCCCC"> syncs only which is</font><font color="#E5E5E5"> hooks firstly</font>

135
00:05:49,670 --> 00:05:55,320
<font color="#E5E5E5">roles just as a reminder</font><font color="#CCCCCC"> loads of these</font>

136
00:05:53,100 --> 00:05:56,940
<font color="#E5E5E5">things that come with like colons and</font>

137
00:05:55,320 --> 00:05:57,420
<font color="#E5E5E5">then back</font><font color="#CCCCCC"> til</font><font color="#E5E5E5"> there's a new person</font>

138
00:05:56,940 --> 00:06:02,670
<font color="#E5E5E5">something</font>

139
00:05:57,420 --> 00:06:04,110
so it's an inline in<font color="#E5E5E5"> like node the</font>

140
00:06:02,670 --> 00:06:07,830
normal ones that are provided like I

141
00:06:04,110 --> 00:06:10,140
said they're used for<font color="#E5E5E5"> formatting your</font>

142
00:06:07,830 --> 00:06:11,729
your<font color="#E5E5E5"> ducks and also a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of like</font>

143
00:06:10,140 --> 00:06:14,370
<font color="#E5E5E5">additional</font><font color="#CCCCCC"> functionality</font><font color="#E5E5E5"> so there's like</font>

144
00:06:11,730 --> 00:06:16,320
an RFC<font color="#E5E5E5"> role there's also I think a pet</font>

145
00:06:14,370 --> 00:06:21,030
role and a couple<font color="#E5E5E5"> of other ones but for</font>

146
00:06:16,320 --> 00:06:22,980
<font color="#E5E5E5">the most part it's quite simple the way</font>

147
00:06:21,030 --> 00:06:27,900
that you go about extending<font color="#E5E5E5"> this they</font>

148
00:06:22,980 --> 00:06:31,020
provide you have to add this function

149
00:06:27,900 --> 00:06:33,060
this<font color="#CCCCCC"> set up function</font><font color="#E5E5E5"> and call the add</font>

150
00:06:31,020 --> 00:06:35,280
world thing on your your application

151
00:06:33,060 --> 00:06:36,690
object this goes in some way we<font color="#CCCCCC"> just</font>

152
00:06:35,280 --> 00:06:39,989
passed<font color="#E5E5E5"> into configuration</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> go into</font>

153
00:06:36,690 --> 00:06:42,630
that in a bit<font color="#CCCCCC"> but</font><font color="#E5E5E5"> this thing at the top</font>

154
00:06:39,990 --> 00:06:44,430
doc utils defines what this<font color="#E5E5E5"> should look</font>

155
00:06:42,630 --> 00:06:45,719
<font color="#E5E5E5">like and you just have to</font><font color="#CCCCCC"> basically copy</font>

156
00:06:44,430 --> 00:06:47,820
and paste that and<font color="#E5E5E5"> put all</font><font color="#CCCCCC"> your</font>

157
00:06:45,720 --> 00:06:52,710
<font color="#E5E5E5">functionality within the actual function</font>

158
00:06:47,820 --> 00:06:55,170
there so<font color="#E5E5E5"> we'll give a real world example</font>

159
00:06:52,710 --> 00:06:56,880
<font color="#CCCCCC">of why</font><font color="#E5E5E5"> you might want</font><font color="#CCCCCC"> to use both so</font>

160
00:06:55,170 --> 00:06:59,790
this is an<font color="#CCCCCC"> example</font><font color="#E5E5E5"> this is taken out of</font>

161
00:06:56,880 --> 00:07:01,980
the<font color="#CCCCCC"> changelog</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> sinks itself</font><font color="#E5E5E5"> it's an</font>

162
00:06:59,790 --> 00:07:05,310
<font color="#E5E5E5">example this is</font><font color="#CCCCCC"> all done manually at the</font>

163
00:07:01,980 --> 00:07:09,600
moment and for in like anyone<font color="#CCCCCC"> that cares</font>

164
00:07:05,310 --> 00:07:11,790
<font color="#CCCCCC">about it days</font><font color="#E5E5E5"> get issue numbers on the</font>

165
00:07:09,600 --> 00:07:14,550
left<font color="#E5E5E5"> and then there's a description of</font>

166
00:07:11,790 --> 00:07:17,220
what issue<font color="#CCCCCC"> was actually</font><font color="#E5E5E5"> fixed in that</font>

167
00:07:14,550 --> 00:07:19,110
release<font color="#E5E5E5"> on the right that would</font><font color="#CCCCCC"> be</font>

168
00:07:17,220 --> 00:07:20,570
really nice<font color="#E5E5E5"> if it's sort of using this</font>

169
00:07:19,110 --> 00:07:21,650
and<font color="#E5E5E5"> just plain</font><font color="#CCCCCC"> text</font>

170
00:07:20,570 --> 00:07:24,500
were<font color="#E5E5E5"> actually able to cross-reference</font>

171
00:07:21,650 --> 00:07:26,810
back to the github<font color="#E5E5E5"> issue so that people</font>

172
00:07:24,500 --> 00:07:28,250
<font color="#E5E5E5">who go and click on this in the output</font>

173
00:07:26,810 --> 00:07:32,810
<font color="#E5E5E5">and say oh well this</font><font color="#CCCCCC"> is all</font><font color="#E5E5E5"> the</font>

174
00:07:28,250 --> 00:07:34,490
<font color="#E5E5E5">information I wanted about the issue so</font>

175
00:07:32,810 --> 00:07:37,970
<font color="#E5E5E5">if we go and we slightly rework this and</font>

176
00:07:34,490 --> 00:07:39,410
we add this<font color="#E5E5E5"> github issue role I've moved</font>

177
00:07:37,970 --> 00:07:42,190
stuff around just<font color="#E5E5E5"> because it looks a</font>

178
00:07:39,410 --> 00:07:45,170
little bit prettier<font color="#CCCCCC"> done</font><font color="#E5E5E5"> this way and</font>

179
00:07:42,190 --> 00:07:47,300
all it takes<font color="#E5E5E5"> is an argument - such is</font>

180
00:07:45,170 --> 00:07:48,950
the exact same issue number that we had

181
00:07:47,300 --> 00:07:51,800
previously<font color="#CCCCCC"> only</font><font color="#E5E5E5"> now instead of being</font><font color="#CCCCCC"> in</font>

182
00:07:48,950 --> 00:07:53,270
plain text<font color="#E5E5E5"> is in the form of a role how</font>

183
00:07:51,800 --> 00:07:56,390
<font color="#E5E5E5">would actually go about to implement</font><font color="#CCCCCC"> in</font>

184
00:07:53,270 --> 00:07:58,969
<font color="#CCCCCC">that you just have basically</font><font color="#E5E5E5"> your role</font>

185
00:07:56,390 --> 00:08:00,530
again remember all these<font color="#CCCCCC"> arguments they</font>

186
00:07:58,970 --> 00:08:03,410
all have<font color="#CCCCCC"> meaning and</font><font color="#E5E5E5"> they're defined by</font>

187
00:08:00,530 --> 00:08:05,210
doc utils<font color="#E5E5E5"> all that we're doing is we</font>

188
00:08:03,410 --> 00:08:08,930
have<font color="#CCCCCC"> our</font><font color="#E5E5E5"> base URL for the repo that we</font>

189
00:08:05,210 --> 00:08:11,510
want we build a doc utils node which is

190
00:08:08,930 --> 00:08:15,200
<font color="#CCCCCC">a</font><font color="#E5E5E5"> reference node which is a URL</font><font color="#CCCCCC"> or URI</font>

191
00:08:11,510 --> 00:08:18,469
<font color="#E5E5E5">and we pass in a</font><font color="#CCCCCC"> URL that</font><font color="#E5E5E5"> we want and</font>

192
00:08:15,200 --> 00:08:21,710
when<font color="#E5E5E5"> we actually go we add the role when</font>

193
00:08:18,470 --> 00:08:25,730
we actually go and render<font color="#E5E5E5"> this in the</font>

194
00:08:21,710 --> 00:08:26,900
<font color="#E5E5E5">output it gives us nice pretty HTML</font>

195
00:08:25,730 --> 00:08:28,160
links and if you're going<font color="#E5E5E5"> you click on</font>

196
00:08:26,900 --> 00:08:30,679
those<font color="#E5E5E5"> it'll bring you to the github</font>

197
00:08:28,160 --> 00:08:32,419
issues and this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> PDF so</font><font color="#E5E5E5"> the slice</font>

198
00:08:30,680 --> 00:08:33,620
for<font color="#E5E5E5"> this you can click on those and they</font>

199
00:08:32,419 --> 00:08:37,880
<font color="#CCCCCC">will indeed bring</font><font color="#E5E5E5"> you to the</font><font color="#CCCCCC"> github</font>

200
00:08:33,620 --> 00:08:40,880
issues which is nice<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so it's a</font>

201
00:08:37,880 --> 00:08:42,289
<font color="#E5E5E5">in line thing</font><font color="#CCCCCC"> is quick</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> of references</font>

202
00:08:40,880 --> 00:08:44,300
<font color="#E5E5E5">something without</font><font color="#CCCCCC"> having to use</font><font color="#E5E5E5"> you</font>

203
00:08:42,289 --> 00:08:46,490
manually<font color="#E5E5E5"> write your</font><font color="#CCCCCC"> URLs for everything</font>

204
00:08:44,300 --> 00:08:48,229
especially<font color="#CCCCCC"> if you decide to</font><font color="#E5E5E5"> change your</font>

205
00:08:46,490 --> 00:08:50,330
issue tracker or something like<font color="#CCCCCC"> that and</font>

206
00:08:48,230 --> 00:08:51,920
you can manage<font color="#CCCCCC"> to keep the IDs the same</font>

207
00:08:50,330 --> 00:08:54,410
you're just going<font color="#E5E5E5"> to change your base</font>

208
00:08:51,920 --> 00:08:55,640
URL<font color="#E5E5E5"> and job done</font><font color="#CCCCCC"> I don't know how</font><font color="#E5E5E5"> you'd</font>

209
00:08:54,410 --> 00:08:59,480
keep your<font color="#CCCCCC"> IDs</font><font color="#E5E5E5"> the same that's a</font>

210
00:08:55,640 --> 00:09:04,010
different issue so if we wanted to<font color="#E5E5E5"> go</font>

211
00:08:59,480 --> 00:09:05,690
the<font color="#E5E5E5"> next step beyond that we wanted to</font>

212
00:09:04,010 --> 00:09:08,090
do a<font color="#E5E5E5"> little more powerful</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is where</font>

213
00:09:05,690 --> 00:09:10,700
directives come in so direct is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> war</font>

214
00:09:08,090 --> 00:09:12,770
so a doc utils<font color="#E5E5E5"> thing but again because</font>

215
00:09:10,700 --> 00:09:16,910
<font color="#E5E5E5">Sphinx has things</font><font color="#CCCCCC"> like the ability to</font>

216
00:09:12,770 --> 00:09:18,290
scrappers<font color="#E5E5E5"> the cross-reference directives</font>

217
00:09:16,910 --> 00:09:19,610
is things tend to<font color="#CCCCCC"> be a hell of a lot</font>

218
00:09:18,290 --> 00:09:23,480
more<font color="#E5E5E5"> power for them they would be in</font>

219
00:09:19,610 --> 00:09:25,460
just<font color="#CCCCCC"> using plain old doc utils so again</font>

220
00:09:23,480 --> 00:09:27,620
a reminder<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what a directive</font>

221
00:09:25,460 --> 00:09:30,800
looks like

222
00:09:27,620 --> 00:09:32,900
and in terms<font color="#E5E5E5"> of running it again</font>

223
00:09:30,800 --> 00:09:34,660
<font color="#E5E5E5">darky tales this time it's instead of a</font>

224
00:09:32,900 --> 00:09:39,199
function<font color="#CCCCCC"> it takes the form of a class</font>

225
00:09:34,660 --> 00:09:43,189
<font color="#E5E5E5">I'm using</font><font color="#CCCCCC"> oh I was</font><font color="#E5E5E5"> expecting</font><font color="#CCCCCC"> to</font>

226
00:09:39,200 --> 00:09:46,010
highlight<font color="#E5E5E5"> that I'm building a tree of</font>

227
00:09:43,190 --> 00:09:47,780
nodes<font color="#E5E5E5"> there's a nicer way of doing this</font>

228
00:09:46,010 --> 00:09:49,310
which I'm going<font color="#E5E5E5"> to go into in a bit</font><font color="#CCCCCC"> but</font>

229
00:09:47,780 --> 00:09:50,660
for<font color="#E5E5E5"> now I'm building a node it's the</font>

230
00:09:49,310 --> 00:09:53,270
section<font color="#E5E5E5"> it's got a tight and it's got</font>

231
00:09:50,660 --> 00:09:54,860
some text<font color="#CCCCCC"> associated with it</font><font color="#E5E5E5"> this is</font>

232
00:09:53,270 --> 00:09:56,600
<font color="#CCCCCC">just a hello world example it</font><font color="#E5E5E5"> doesn't</font>

233
00:09:54,860 --> 00:10:00,020
really do anything<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that's an example</font>

234
00:09:56,600 --> 00:10:02,030
<font color="#CCCCCC">of what a directive</font><font color="#E5E5E5"> would look like if</font>

235
00:10:00,020 --> 00:10:08,980
you<font color="#CCCCCC"> were just using plain old this</font><font color="#E5E5E5"> will</font>

236
00:10:02,030 --> 00:10:11,839
<font color="#E5E5E5">work with doc utils</font><font color="#CCCCCC"> or with</font><font color="#E5E5E5"> Sphinx so</font>

237
00:10:08,980 --> 00:10:13,430
instead of just<font color="#E5E5E5"> graph it cross reference</font>

238
00:10:11,840 --> 00:10:17,150
into the issues let's say that<font color="#E5E5E5"> we wanted</font>

239
00:10:13,430 --> 00:10:19,400
to<font color="#E5E5E5"> dump that</font><font color="#CCCCCC"> information from our issue</font>

240
00:10:17,150 --> 00:10:21,079
tracker<font color="#E5E5E5"> into</font><font color="#CCCCCC"> our documentation</font><font color="#E5E5E5"> I'm not</font>

241
00:10:19,400 --> 00:10:22,550
saying this<font color="#E5E5E5"> is a realistic example</font><font color="#CCCCCC"> I'm</font>

242
00:10:21,080 --> 00:10:24,860
<font color="#CCCCCC">just saying that if we wanted</font><font color="#E5E5E5"> to do this</font>

243
00:10:22,550 --> 00:10:29,479
this could<font color="#E5E5E5"> be something</font><font color="#CCCCCC"> like you wanted</font>

244
00:10:24,860 --> 00:10:31,160
instead of using issues you have for

245
00:10:29,480 --> 00:10:32,600
example a<font color="#CCCCCC"> Yammer</font><font color="#E5E5E5"> file that has some</font>

246
00:10:31,160 --> 00:10:34,520
structured data<font color="#E5E5E5"> in it and you want</font><font color="#CCCCCC"> to</font>

247
00:10:32,600 --> 00:10:38,120
dump<font color="#E5E5E5"> that into your documentation in a</font>

248
00:10:34,520 --> 00:10:41,090
readable format<font color="#CCCCCC"> so we'll take an</font><font color="#E5E5E5"> issue</font>

249
00:10:38,120 --> 00:10:44,630
this is issue<font color="#CCCCCC"> number two for</font><font color="#E5E5E5"> 63 from the</font>

250
00:10:41,090 --> 00:10:48,590
<font color="#CCCCCC">Sphinx issue tracker which was fixed at</font>

251
00:10:44,630 --> 00:10:50,960
some<font color="#E5E5E5"> point and I had it manually written</font>

252
00:10:48,590 --> 00:10:54,710
<font color="#E5E5E5">into the documentation like this so I've</font>

253
00:10:50,960 --> 00:10:56,240
got an issues<font color="#E5E5E5"> this</font><font color="#CCCCCC"> the issues page this</font>

254
00:10:54,710 --> 00:10:58,220
<font color="#CCCCCC">is the name of the issue and some cross</font>

255
00:10:56,240 --> 00:11:02,330
<font color="#CCCCCC">reference who opened</font><font color="#E5E5E5"> it and then a</font>

256
00:10:58,220 --> 00:11:04,070
<font color="#E5E5E5">summary of the bug and</font><font color="#CCCCCC"> this is all</font>

257
00:11:02,330 --> 00:11:05,960
available<font color="#E5E5E5"> by a github and the great</font>

258
00:11:04,070 --> 00:11:09,680
thing is<font color="#CCCCCC"> that github has an API and we</font>

259
00:11:05,960 --> 00:11:12,080
can hook into<font color="#E5E5E5"> that API so instead of</font>

260
00:11:09,680 --> 00:11:14,180
<font color="#CCCCCC">doing that</font><font color="#E5E5E5"> we can just create this</font>

261
00:11:12,080 --> 00:11:15,710
directive github issue directive if we

262
00:11:14,180 --> 00:11:17,329
pass in a single<font color="#CCCCCC"> argument which is the</font>

263
00:11:15,710 --> 00:11:22,010
<font color="#E5E5E5">name of our the number of the direct of</font>

264
00:11:17,330 --> 00:11:26,930
the issue and we<font color="#CCCCCC"> hopefully should</font><font color="#E5E5E5"> we get</font>

265
00:11:22,010 --> 00:11:28,939
<font color="#CCCCCC">some kind</font><font color="#E5E5E5"> of output so the what the API</font>

266
00:11:26,930 --> 00:11:30,380
returns doesn't really matter here<font color="#E5E5E5"> at</font>

267
00:11:28,940 --> 00:11:31,790
<font color="#E5E5E5">github a really good API documentation</font>

268
00:11:30,380 --> 00:11:34,490
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can go and check that</font><font color="#E5E5E5"> out if you</font>

269
00:11:31,790 --> 00:11:36,410
want<font color="#CCCCCC"> but if you could make a request to</font>

270
00:11:34,490 --> 00:11:38,480
this with a<font color="#CCCCCC"> specific issue number</font><font color="#E5E5E5"> it'll</font>

271
00:11:36,410 --> 00:11:40,579
give you a JSON blob with all the

272
00:11:38,480 --> 00:11:42,559
<font color="#CCCCCC">information about</font><font color="#E5E5E5"> your</font>

273
00:11:40,579 --> 00:11:45,170
particular<font color="#E5E5E5"> issue</font><font color="#CCCCCC"> so who opened the issue</font>

274
00:11:42,559 --> 00:11:48,589
<font color="#CCCCCC">what the title is</font><font color="#E5E5E5"> the body and so forth</font>

275
00:11:45,170 --> 00:11:52,368
<font color="#E5E5E5">so if I use the request library to make</font>

276
00:11:48,589 --> 00:11:54,769
<font color="#CCCCCC">requests</font><font color="#E5E5E5"> to the API</font><font color="#CCCCCC"> I do some formatting</font>

277
00:11:52,369 --> 00:11:56,420
<font color="#E5E5E5">of the response that</font><font color="#CCCCCC"> I get</font><font color="#E5E5E5"> back and</font>

278
00:11:54,769 --> 00:12:00,410
return only the stuff that I care<font color="#CCCCCC"> about</font>

279
00:11:56,420 --> 00:12:06,290
which again is the title the<font color="#E5E5E5"> ID who</font>

280
00:12:00,410 --> 00:12:08,899
opened<font color="#E5E5E5"> it and the body that</font><font color="#CCCCCC"> is like</font>

281
00:12:06,290 --> 00:12:12,980
that's basically the issue as<font color="#CCCCCC"> far as I'm</font>

282
00:12:08,899 --> 00:12:15,379
concerned<font color="#CCCCCC"> I can then call that</font><font color="#E5E5E5"> from my</font>

283
00:12:12,980 --> 00:12:17,360
directive again remember the hello world

284
00:12:15,379 --> 00:12:22,339
example I'm building a section a title

285
00:12:17,360 --> 00:12:23,899
and a body of<font color="#E5E5E5"> text and the the IDS mean</font>

286
00:12:22,339 --> 00:12:28,489
that's<font color="#E5E5E5"> a way that I can</font><font color="#CCCCCC"> cross-reference</font>

287
00:12:23,899 --> 00:12:32,360
<font color="#E5E5E5">so your anchor in hate like HTML the</font>

288
00:12:28,489 --> 00:12:35,049
<font color="#E5E5E5">anchor</font><font color="#CCCCCC"> this is your HF in the page and</font>

289
00:12:32,360 --> 00:12:37,369
I'm also using<font color="#E5E5E5"> a literal block which is</font>

290
00:12:35,049 --> 00:12:40,009
<font color="#CCCCCC">like the feedback tool</font><font color="#E5E5E5"> is in markdown</font>

291
00:12:37,369 --> 00:12:41,540
<font color="#E5E5E5">and github markdown</font><font color="#CCCCCC"> it just means that</font>

292
00:12:40,009 --> 00:12:44,869
it's going<font color="#E5E5E5"> to be an amount of space</font>

293
00:12:41,540 --> 00:12:46,069
funds<font color="#E5E5E5"> and it's not going to strip any of</font>

294
00:12:44,869 --> 00:12:48,850
my new lines or anything it's going to

295
00:12:46,069 --> 00:12:48,849
<font color="#E5E5E5">display it like code</font>

296
00:12:50,540 --> 00:12:55,230
and then again<font color="#E5E5E5"> this setup thing this</font>

297
00:12:53,610 --> 00:12:56,699
gets called<font color="#E5E5E5"> by Sphinx it goes and it</font>

298
00:12:55,230 --> 00:12:59,339
looks through every extension that<font color="#E5E5E5"> you</font>

299
00:12:56,699 --> 00:13:02,279
pass through<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> set up function that</font>

300
00:12:59,339 --> 00:13:04,259
<font color="#E5E5E5">tells it what directive it is also what</font>

301
00:13:02,279 --> 00:13:06,959
version of Sphinx is necessary<font color="#E5E5E5"> and</font>

302
00:13:04,259 --> 00:13:08,879
whether it<font color="#E5E5E5"> is suitable</font><font color="#CCCCCC"> to read</font>

303
00:13:06,959 --> 00:13:11,069
documentation<font color="#E5E5E5"> with this extension</font>

304
00:13:08,879 --> 00:13:13,649
enabled in a parallel mode<font color="#E5E5E5"> there's also</font>

305
00:13:11,069 --> 00:13:17,819
a parallel<font color="#CCCCCC"> write safe option which</font>

306
00:13:13,649 --> 00:13:19,319
defaults<font color="#CCCCCC"> the force so</font><font color="#E5E5E5"> going back to the</font>

307
00:13:17,819 --> 00:13:21,628
directive<font color="#CCCCCC"> this is what it looked like</font>

308
00:13:19,319 --> 00:13:29,849
<font color="#E5E5E5">before we</font><font color="#CCCCCC"> go on we render it and we get</font>

309
00:13:21,629 --> 00:13:32,300
nice pretty HTML so a handy little trick

310
00:13:29,850 --> 00:13:36,120
<font color="#E5E5E5">for this building doc utils nodes</font>

311
00:13:32,300 --> 00:13:37,889
manually<font color="#CCCCCC"> tends to get</font><font color="#E5E5E5"> a little bit it</font>

312
00:13:36,120 --> 00:13:40,639
tastes a bit get<font color="#CCCCCC"> a bit complicated</font><font color="#E5E5E5"> and</font>

313
00:13:37,889 --> 00:13:43,170
it also<font color="#E5E5E5"> means that you can't use other</font>

314
00:13:40,639 --> 00:13:44,670
like Sphinx stuff like the<font color="#CCCCCC"> cold</font><font color="#E5E5E5"> block</font>

315
00:13:43,170 --> 00:13:48,389
directive and<font color="#E5E5E5"> stuff within the</font>

316
00:13:44,670 --> 00:13:50,998
documentation so there's a thing that

317
00:13:48,389 --> 00:13:53,279
<font color="#CCCCCC">sinks provides which is nested pass with</font>

318
00:13:50,999 --> 00:13:56,279
titles if you call nested pass with

319
00:13:53,279 --> 00:14:00,600
titles<font color="#E5E5E5"> on a string that contains</font>

320
00:13:56,279 --> 00:14:01,889
<font color="#CCCCCC">restructure text formatted text</font><font color="#E5E5E5"> that</font>

321
00:14:00,600 --> 00:14:04,470
<font color="#E5E5E5">will</font><font color="#CCCCCC"> actually go</font><font color="#E5E5E5"> and it will generate</font>

322
00:14:01,889 --> 00:14:05,790
<font color="#CCCCCC">all the suitable doc utils nose for you</font>

323
00:14:04,470 --> 00:14:08,430
so you<font color="#E5E5E5"> don't need to go and look at the</font>

324
00:14:05,790 --> 00:14:10,319
dark<font color="#E5E5E5"> details reference documentation to</font>

325
00:14:08,430 --> 00:14:12,388
figure out what I<font color="#E5E5E5"> need to use if I once</font>

326
00:14:10,319 --> 00:14:14,040
like a<font color="#CCCCCC"> cross-reference or if I want</font>

327
00:14:12,389 --> 00:14:17,779
literal text<font color="#E5E5E5"> that kind of thing</font>

328
00:14:14,040 --> 00:14:17,779
<font color="#E5E5E5">syntax highlighting and</font><font color="#CCCCCC"> so forth</font>

329
00:14:21,050 --> 00:14:26,930
and all I'm<font color="#CCCCCC"> doing here instead of</font><font color="#E5E5E5"> just</font>

330
00:14:24,830 --> 00:14:30,590
returning<font color="#CCCCCC"> knows I'm now formatting it so</font>

331
00:14:26,930 --> 00:14:37,010
I'm give just returning<font color="#E5E5E5"> strings gives me</font>

332
00:14:30,590 --> 00:14:40,370
the exact<font color="#CCCCCC"> same output - balls</font><font color="#E5E5E5"> directives</font>

333
00:14:37,010 --> 00:14:42,050
<font color="#E5E5E5">the last one doesn't</font><font color="#CCCCCC"> exist in doc utils</font>

334
00:14:40,370 --> 00:14:45,950
it's a<font color="#E5E5E5"> sphinx the only thing which</font><font color="#CCCCCC"> is</font>

335
00:14:42,050 --> 00:14:47,870
events so through the build process<font color="#CCCCCC"> when</font>

336
00:14:45,950 --> 00:14:50,210
<font color="#E5E5E5">you're caught like Sphinx build it will</font>

337
00:14:47,870 --> 00:14:51,920
emit<font color="#E5E5E5"> a series of events you can add your</font>

338
00:14:50,210 --> 00:14:55,850
own<font color="#CCCCCC"> custom events but there's a load of</font>

339
00:14:51,920 --> 00:14:58,430
events that<font color="#E5E5E5"> are added by default by</font>

340
00:14:55,850 --> 00:15:00,440
space so things like when the Builder is

341
00:14:58,430 --> 00:15:02,959
<font color="#E5E5E5">initialized when your configuration is</font>

342
00:15:00,440 --> 00:15:05,060
loaded<font color="#E5E5E5"> when it's</font><font color="#CCCCCC"> all your source</font>

343
00:15:02,960 --> 00:15:06,530
documentation<font color="#E5E5E5"> reading and when it has</font>

344
00:15:05,060 --> 00:15:11,810
<font color="#E5E5E5">your documentation ready and if a</font>

345
00:15:06,530 --> 00:15:13,880
Golduck<font color="#E5E5E5"> tree exists so this is probably</font>

346
00:15:11,810 --> 00:15:16,209
the<font color="#CCCCCC"> most powerful of</font><font color="#E5E5E5"> all of these</font>

347
00:15:13,880 --> 00:15:20,180
because this allows<font color="#E5E5E5"> you</font><font color="#CCCCCC"> to create</font>

348
00:15:16,210 --> 00:15:22,430
<font color="#CCCCCC">brand-new documentation from scratch</font><font color="#E5E5E5"> so</font>

349
00:15:20,180 --> 00:15:23,390
generate<font color="#CCCCCC"> restructured text documents</font>

350
00:15:22,430 --> 00:15:27,130
that didn't exist<font color="#E5E5E5"> before</font>

351
00:15:23,390 --> 00:15:30,290
<font color="#E5E5E5">so for example</font><font color="#CCCCCC"> if you have you</font><font color="#E5E5E5"> have a</font>

352
00:15:27,130 --> 00:15:32,990
million<font color="#CCCCCC"> animal files and they all have</font>

353
00:15:30,290 --> 00:15:34,939
some structured information inside in

354
00:15:32,990 --> 00:15:37,940
them you can<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> want to have to</font>

355
00:15:34,940 --> 00:15:41,000
go on<font color="#E5E5E5"> write a million restructured text</font>

356
00:15:37,940 --> 00:15:42,350
files<font color="#E5E5E5"> that have references or directives</font>

357
00:15:41,000 --> 00:15:45,290
that<font color="#E5E5E5"> reference each one of those</font><font color="#CCCCCC"> Yamma</font>

358
00:15:42,350 --> 00:15:47,270
files you want<font color="#E5E5E5"> to do it automatically so</font>

359
00:15:45,290 --> 00:15:50,209
events is a way that you go about

360
00:15:47,270 --> 00:15:51,890
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> doing this the way that it</font>

361
00:15:50,210 --> 00:15:54,140
works every event is slightly different

362
00:15:51,890 --> 00:15:55,400
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the handlers are all difference as</font>

363
00:15:54,140 --> 00:15:56,960
<font color="#E5E5E5">well they all take different</font><font color="#CCCCCC"> amounts of</font>

364
00:15:55,400 --> 00:15:58,370
argument depending on the<font color="#CCCCCC"> information</font>

365
00:15:56,960 --> 00:16:01,460
that's available at<font color="#E5E5E5"> that point in the</font>

366
00:15:58,370 --> 00:16:04,070
build process the<font color="#E5E5E5"> one that I tend to</font>

367
00:16:01,460 --> 00:16:06,410
fall back on<font color="#CCCCCC"> is the Builder</font><font color="#E5E5E5"> initialized</font>

368
00:16:04,070 --> 00:16:08,360
one because<font color="#E5E5E5"> that means that everything</font>

369
00:16:06,410 --> 00:16:09,800
<font color="#E5E5E5">has been kind of set up in Canfield we</font>

370
00:16:08,360 --> 00:16:11,510
know what output format we're going to

371
00:16:09,800 --> 00:16:13,099
be writing<font color="#E5E5E5"> we've read in our</font>

372
00:16:11,510 --> 00:16:14,689
<font color="#E5E5E5">configuration we've read in our source</font>

373
00:16:13,100 --> 00:16:17,540
files<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only thing we</font><font color="#CCCCCC"> haven't actually</font>

374
00:16:14,690 --> 00:16:19,130
done is started writing out<font color="#E5E5E5"> like our</font>

375
00:16:17,540 --> 00:16:21,760
HTML<font color="#CCCCCC"> our latex or whatever we're</font>

376
00:16:19,130 --> 00:16:21,760
actually writing out

377
00:16:22,520 --> 00:16:29,990
so for example<font color="#CCCCCC"> I</font><font color="#E5E5E5"> gave an example</font><font color="#CCCCCC"> where I</font>

378
00:16:26,120 --> 00:16:31,790
was using<font color="#E5E5E5"> a</font><font color="#CCCCCC"> single-issue</font><font color="#E5E5E5"> and that would</font>

379
00:16:29,990 --> 00:16:33,589
mean<font color="#CCCCCC"> that for every single</font><font color="#E5E5E5"> issue that</font><font color="#CCCCCC"> I</font>

380
00:16:31,790 --> 00:16:35,149
wanted<font color="#CCCCCC"> to reflect in the documentation I</font>

381
00:16:33,589 --> 00:16:37,700
have to go in a<font color="#CCCCCC"> certain directives</font><font color="#E5E5E5"> for</font>

382
00:16:35,149 --> 00:16:40,370
that<font color="#CCCCCC"> powerboats if I wanted</font><font color="#E5E5E5"> to pull down</font>

383
00:16:37,700 --> 00:16:42,320
<font color="#CCCCCC">on the every issue</font><font color="#E5E5E5"> that has</font><font color="#CCCCCC"> been raised</font>

384
00:16:40,370 --> 00:16:44,390
in the last<font color="#E5E5E5"> 30 days and for some reason</font>

385
00:16:42,320 --> 00:16:46,279
put this into my documentation<font color="#E5E5E5"> again I'm</font>

386
00:16:44,390 --> 00:16:48,110
<font color="#E5E5E5">not saying this is a good</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> but I'm</font>

387
00:16:46,279 --> 00:16:51,550
saying<font color="#E5E5E5"> that it is possible and you</font><font color="#CCCCCC"> can</font>

388
00:16:48,110 --> 00:16:53,959
extend this any which way<font color="#E5E5E5"> that you want</font>

389
00:16:51,550 --> 00:16:55,790
so again we're using the github API

390
00:16:53,959 --> 00:17:00,979
<font color="#CCCCCC">we're going to pull in the information</font>

391
00:16:55,790 --> 00:17:02,480
from<font color="#E5E5E5"> the issues</font><font color="#CCCCCC"> endpoint and for each</font><font color="#E5E5E5"> of</font>

392
00:17:00,980 --> 00:17:03,529
the issues<font color="#CCCCCC"> that we retrieve instead of</font>

393
00:17:02,480 --> 00:17:05,480
which<font color="#CCCCCC"> are even just an individual</font>

394
00:17:03,529 --> 00:17:07,459
individual issue we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to retrieve</font>

395
00:17:05,480 --> 00:17:09,650
<font color="#E5E5E5">every single one of them or at least as</font>

396
00:17:07,459 --> 00:17:11,569
<font color="#E5E5E5">many as it'll give us in a page we're</font>

397
00:17:09,650 --> 00:17:13,339
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do some formatting of that in</font>

398
00:17:11,569 --> 00:17:15,079
<font color="#E5E5E5">this case again</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> the number we</font>

399
00:17:13,339 --> 00:17:19,958
<font color="#E5E5E5">want the</font><font color="#CCCCCC"> title we want the body of that</font>

400
00:17:15,079 --> 00:17:19,959
<font color="#CCCCCC">and we want who created the issue</font>

401
00:17:21,910 --> 00:17:27,010
and then when we have all that

402
00:17:23,349 --> 00:17:30,310
information<font color="#E5E5E5"> we're just going</font><font color="#CCCCCC"> to create a</font>

403
00:17:27,010 --> 00:17:32,410
restructure text documents within this

404
00:17:30,310 --> 00:17:33,580
issue subdirectory<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is goes within</font>

405
00:17:32,410 --> 00:17:35,770
<font color="#E5E5E5">my source directory through my</font>

406
00:17:33,580 --> 00:17:38,290
<font color="#E5E5E5">documentation and for each</font><font color="#CCCCCC"> of those</font>

407
00:17:35,770 --> 00:17:39,790
files<font color="#E5E5E5"> were going</font><font color="#CCCCCC"> to do what I did</font><font color="#E5E5E5"> in the</font>

408
00:17:38,290 --> 00:17:42,340
previous directive and<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> going to</font>

409
00:17:39,790 --> 00:17:46,270
manually write a<font color="#CCCCCC"> restructure</font><font color="#E5E5E5"> text</font>

410
00:17:42,340 --> 00:17:50,439
document this isn't<font color="#CCCCCC"> perfect because</font><font color="#E5E5E5"> for</font>

411
00:17:46,270 --> 00:17:52,930
<font color="#CCCCCC">example if your if your your document or</font>

412
00:17:50,440 --> 00:17:55,780
<font color="#E5E5E5">your issues if they contain like stuff</font>

413
00:17:52,930 --> 00:17:58,000
<font color="#CCCCCC">that is Magic for restructure text and</font>

414
00:17:55,780 --> 00:18:00,310
isn't magic<font color="#E5E5E5"> for</font><font color="#CCCCCC"> markdown</font>

415
00:17:58,000 --> 00:18:01,780
then your document might not render

416
00:18:00,310 --> 00:18:04,360
properly but for the sake of a quick

417
00:18:01,780 --> 00:18:05,590
example<font color="#CCCCCC"> this will give you something</font>

418
00:18:04,360 --> 00:18:08,530
approaching<font color="#E5E5E5"> what you'd be</font><font color="#CCCCCC"> looking for</font>

419
00:18:05,590 --> 00:18:13,209
you<font color="#E5E5E5"> could do fancier stuff if you wanted</font>

420
00:18:08,530 --> 00:18:16,030
to<font color="#E5E5E5"> for here I'm indenting the all</font><font color="#CCCCCC"> of the</font>

421
00:18:13,210 --> 00:18:18,850
body of the<font color="#CCCCCC"> issue</font><font color="#E5E5E5"> so just display like a</font>

422
00:18:16,030 --> 00:18:21,160
little<font color="#E5E5E5"> block if I wanted I could instead</font>

423
00:18:18,850 --> 00:18:23,409
pass it like markdown<font color="#CCCCCC"> converted into</font>

424
00:18:21,160 --> 00:18:28,870
restructured text we should be a lot

425
00:18:23,410 --> 00:18:31,570
nicer<font color="#E5E5E5"> looking but again quick demo by</font>

426
00:18:28,870 --> 00:18:34,689
<font color="#CCCCCC">hooking</font><font color="#E5E5E5"> that issue by way of the the</font>

427
00:18:31,570 --> 00:18:36,550
<font color="#E5E5E5">connect function so we had a draw we had</font>

428
00:18:34,690 --> 00:18:38,500
our directive<font color="#CCCCCC"> now we have connect and</font>

429
00:18:36,550 --> 00:18:41,200
again we<font color="#CCCCCC"> return this information which</font>

430
00:18:38,500 --> 00:18:43,960
says what version of<font color="#CCCCCC"> thinks this works</font>

431
00:18:41,200 --> 00:18:45,610
with<font color="#E5E5E5"> and whether it's possible to</font><font color="#CCCCCC"> use</font>

432
00:18:43,960 --> 00:18:49,230
this in a parallel world<font color="#E5E5E5"> and it is</font>

433
00:18:45,610 --> 00:18:49,229
indeed possible<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> parallel</font>

434
00:18:50,050 --> 00:18:56,260
and then we just have like<font color="#E5E5E5"> this central</font>

435
00:18:52,210 --> 00:18:58,270
issues index which will graph it<font color="#CCCCCC"> it will</font>

436
00:18:56,260 --> 00:19:00,430
glob everything that's within<font color="#E5E5E5"> the issue</font>

437
00:18:58,270 --> 00:19:02,889
<font color="#CCCCCC">subdirectory that we have which might be</font>

438
00:19:00,430 --> 00:19:04,300
nothing<font color="#E5E5E5"> if</font><font color="#CCCCCC"> we have no issues but we</font>

439
00:19:02,890 --> 00:19:08,620
<font color="#CCCCCC">always have issues so there will</font><font color="#E5E5E5"> be</font>

440
00:19:04,300 --> 00:19:10,990
stuff<font color="#E5E5E5"> inside that</font><font color="#CCCCCC"> file</font><font color="#E5E5E5"> and when we</font>

441
00:19:08,620 --> 00:19:15,340
render<font color="#E5E5E5"> that we get this nice pretty</font>

442
00:19:10,990 --> 00:19:17,680
format and we<font color="#CCCCCC"> could do a hell of a lot</font>

443
00:19:15,340 --> 00:19:19,689
<font color="#CCCCCC">more with</font><font color="#E5E5E5"> this if we wanted to but</font><font color="#CCCCCC"> for</font>

444
00:19:17,680 --> 00:19:23,650
the<font color="#CCCCCC"> sake of talking</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> this is this is</font>

445
00:19:19,690 --> 00:19:27,160
good enough when it comes to actually

446
00:19:23,650 --> 00:19:30,370
enabling every single extension<font color="#CCCCCC"> all that</font>

447
00:19:27,160 --> 00:19:34,390
you need<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> if you don't have your</font>

448
00:19:30,370 --> 00:19:35,500
extension published on<font color="#CCCCCC"> pi PI then you</font>

449
00:19:34,390 --> 00:19:37,660
can include<font color="#E5E5E5"> it as part</font><font color="#CCCCCC"> of the</font>

450
00:19:35,500 --> 00:19:40,300
<font color="#E5E5E5">documentation itself if you do that you</font>

451
00:19:37,660 --> 00:19:42,070
need to mess around with pythons path

452
00:19:40,300 --> 00:19:44,139
just<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure that it actually</font>

453
00:19:42,070 --> 00:19:47,439
realizes the extension exists and can

454
00:19:44,140 --> 00:19:49,300
use it<font color="#E5E5E5"> if you use like the</font><font color="#CCCCCC"> sweets</font>

455
00:19:47,440 --> 00:19:51,220
QuickStart tool it includes all of<font color="#CCCCCC"> the</font>

456
00:19:49,300 --> 00:19:52,750
necessary like boilerplate that<font color="#CCCCCC"> it's all</font>

457
00:19:51,220 --> 00:19:54,130
commented out<font color="#CCCCCC"> put all the boiler</font><font color="#E5E5E5"> places</font>

458
00:19:52,750 --> 00:19:57,100
at the<font color="#E5E5E5"> top of the files so you can</font><font color="#CCCCCC"> go</font>

459
00:19:54,130 --> 00:19:58,810
and use all<font color="#E5E5E5"> of this and in this case I</font>

460
00:19:57,100 --> 00:20:01,629
had an<font color="#E5E5E5"> issue all an issue directive and</font>

461
00:19:58,810 --> 00:20:03,970
<font color="#E5E5E5">an issue event extension and each of</font>

462
00:20:01,630 --> 00:20:06,700
those I<font color="#CCCCCC"> just</font><font color="#E5E5E5"> wished</font><font color="#CCCCCC"> up by pumping in</font>

463
00:20:03,970 --> 00:20:08,380
there and if I'm using my own extensions

464
00:20:06,700 --> 00:20:10,570
<font color="#E5E5E5">that doesn't mean that</font><font color="#CCCCCC"> I can't use other</font>

465
00:20:08,380 --> 00:20:14,110
people's extensions so there's the

466
00:20:10,570 --> 00:20:16,659
<font color="#CCCCCC">Sphinx contrib</font><font color="#E5E5E5"> reap organization on</font>

467
00:20:14,110 --> 00:20:19,540
github<font color="#E5E5E5"> and the legacy one that still</font>

468
00:20:16,660 --> 00:20:21,340
hasn't<font color="#E5E5E5"> been taken down on</font><font color="#CCCCCC"> bit bucket if</font>

469
00:20:19,540 --> 00:20:23,950
you go searching<font color="#E5E5E5"> through there</font><font color="#CCCCCC"> you'll</font>

470
00:20:21,340 --> 00:20:26,169
<font color="#E5E5E5">find hundreds</font><font color="#CCCCCC"> of extensions for</font><font color="#E5E5E5"> pretty</font>

471
00:20:23,950 --> 00:20:28,480
<font color="#E5E5E5">much everything that you can</font><font color="#CCCCCC"> imagine</font>

472
00:20:26,170 --> 00:20:30,820
from the<font color="#E5E5E5"> OpenStack perspective we have</font>

473
00:20:28,480 --> 00:20:33,310
extensions for things like<font color="#CCCCCC"> auto</font>

474
00:20:30,820 --> 00:20:36,429
<font color="#CCCCCC">generating documentation for</font><font color="#E5E5E5"> all our</font>

475
00:20:33,310 --> 00:20:38,290
configuration<font color="#E5E5E5"> options we have them for</font>

476
00:20:36,430 --> 00:20:39,910
all our command line<font color="#E5E5E5"> tools we ought to</font>

477
00:20:38,290 --> 00:20:41,320
generate all the documentation<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that</font>

478
00:20:39,910 --> 00:20:44,290
basically if<font color="#CCCCCC"> we can also generate</font>

479
00:20:41,320 --> 00:20:45,669
<font color="#E5E5E5">documentation then we</font><font color="#CCCCCC"> oughta generate it</font>

480
00:20:44,290 --> 00:20:47,320
because<font color="#E5E5E5"> people aren't going to write it</font>

481
00:20:45,670 --> 00:20:50,070
otherwise<font color="#E5E5E5"> so it's better if we can pull</font>

482
00:20:47,320 --> 00:20:50,070
that stuff out<font color="#CCCCCC"> of code</font>

483
00:20:51,629 --> 00:20:58,330
yeah<font color="#E5E5E5"> quick</font><font color="#CCCCCC"> some of your that the stuff</font>

484
00:20:55,179 --> 00:21:00,279
that<font color="#CCCCCC"> we went</font><font color="#E5E5E5"> through here directors</font>

485
00:20:58,330 --> 00:21:03,849
walls<font color="#E5E5E5"> connecting and disconnecting</font>

486
00:21:00,279 --> 00:21:07,779
events you've also<font color="#E5E5E5"> got a lot of other</font>

487
00:21:03,849 --> 00:21:11,229
stuff<font color="#CCCCCC"> builders</font><font color="#E5E5E5"> usually the thing that</font>

488
00:21:07,779 --> 00:21:13,539
<font color="#E5E5E5">will generate particular files in a</font>

489
00:21:11,229 --> 00:21:18,159
particular output format so<font color="#E5E5E5"> sinks</font>

490
00:21:13,539 --> 00:21:22,859
provides builders for HTML for latex<font color="#E5E5E5"> for</font>

491
00:21:18,159 --> 00:21:25,059
through PDFs<font color="#E5E5E5"> via extensions get text</font>

492
00:21:22,859 --> 00:21:26,710
pretty much anything you<font color="#E5E5E5"> can think of is</font>

493
00:21:25,059 --> 00:21:28,570
there and if it's not there then there's

494
00:21:26,710 --> 00:21:32,440
an<font color="#E5E5E5"> extension on</font><font color="#CCCCCC"> pie-pie that will let</font>

495
00:21:28,570 --> 00:21:34,570
you do this domains are a way of<font color="#CCCCCC"> kind of</font>

496
00:21:32,440 --> 00:21:37,389
grouping roles<font color="#E5E5E5"> and directives together</font>

497
00:21:34,570 --> 00:21:39,629
so there's a domain for<font color="#E5E5E5"> Python available</font>

498
00:21:37,389 --> 00:21:42,218
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Sphinx there's a domain for C</font>

499
00:21:39,629 --> 00:21:44,639
possibly one for C++ I don't know I've

500
00:21:42,219 --> 00:21:47,769
never<font color="#E5E5E5"> used it</font><font color="#CCCCCC"> again</font>

501
00:21:44,639 --> 00:21:49,809
like in the in<font color="#E5E5E5"> pipe</font><font color="#CCCCCC"> I there's other ones</font>

502
00:21:47,769 --> 00:21:52,629
<font color="#E5E5E5">then for Java there's</font><font color="#CCCCCC"> ones for Ruby</font>

503
00:21:49,809 --> 00:21:54,039
<font color="#E5E5E5">pretty much any mainstream language is</font>

504
00:21:52,629 --> 00:21:56,649
<font color="#E5E5E5">going to have a domain available for it</font>

505
00:21:54,039 --> 00:21:59,139
you can add<font color="#E5E5E5"> your own</font><font color="#CCCCCC"> custom events</font><font color="#E5E5E5"> if</font>

506
00:21:56,649 --> 00:22:01,418
the events<font color="#E5E5E5"> that swing submits normally</font>

507
00:21:59,139 --> 00:22:03,668
aren't<font color="#E5E5E5"> enough</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> you so for example if</font>

508
00:22:01,419 --> 00:22:05,289
<font color="#CCCCCC">you're if you decide that</font><font color="#E5E5E5"> your extension</font>

509
00:22:03,669 --> 00:22:06,669
<font color="#CCCCCC">wants to emit a custom</font><font color="#E5E5E5"> event and then</font>

510
00:22:05,289 --> 00:22:09,070
other extensions could<font color="#E5E5E5"> hook into that</font>

511
00:22:06,669 --> 00:22:10,899
<font color="#E5E5E5">you can do that and then of course you</font>

512
00:22:09,070 --> 00:22:12,789
can<font color="#CCCCCC"> add your own node I don't</font><font color="#E5E5E5"> really</font>

513
00:22:10,899 --> 00:22:14,518
know why you'd want<font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> instead</font>

514
00:22:12,789 --> 00:22:16,330
of<font color="#E5E5E5"> a directive or something but you can</font>

515
00:22:14,519 --> 00:22:20,289
and at the end<font color="#E5E5E5"> of the day that's all</font>

516
00:22:16,330 --> 00:22:21,908
that<font color="#E5E5E5"> matters and it was a lot</font><font color="#CCCCCC"> about the</font>

517
00:22:20,289 --> 00:22:25,119
stuff as<font color="#E5E5E5"> well that I'm not even gonna go</font>

518
00:22:21,909 --> 00:22:27,700
<font color="#CCCCCC">into HTML themes parsers search</font>

519
00:22:25,119 --> 00:22:28,809
<font color="#E5E5E5">languages that kind of stuff to be</font>

520
00:22:27,700 --> 00:22:31,200
honest the only<font color="#E5E5E5"> one of these that I've</font>

521
00:22:28,809 --> 00:22:35,899
ever got anywhere near<font color="#E5E5E5"> its HTML themes</font>

522
00:22:31,200 --> 00:22:38,450
<font color="#E5E5E5">but they're there again if you want them</font>

523
00:22:35,900 --> 00:22:41,000
and yeah that's a<font color="#E5E5E5"> very quick summary of</font>

524
00:22:38,450 --> 00:22:58,420
everything<font color="#E5E5E5"> you can do with</font><font color="#CCCCCC"> Sphinx thanks</font>

525
00:22:41,000 --> 00:22:58,420
<font color="#CCCCCC">listen no difficult ones</font>

526
00:23:26,200 --> 00:23:32,149
do you mean<font color="#E5E5E5"> the code as in the code of</font>

527
00:23:30,320 --> 00:23:39,519
<font color="#CCCCCC">the application</font><font color="#E5E5E5"> or the code of the</font>

528
00:23:32,149 --> 00:23:39,518
extension yeah

529
00:24:24,610 --> 00:24:32,519
[Music]

530
00:24:26,309 --> 00:24:35,678
so so the<font color="#CCCCCC"> question for</font><font color="#E5E5E5"> the recording</font><font color="#CCCCCC"> is</font>

531
00:24:32,519 --> 00:24:38,979
is it a bit like<font color="#E5E5E5"> it's a</font><font color="#CCCCCC"> disadvantage</font>

532
00:24:35,679 --> 00:24:40,869
<font color="#CCCCCC">that</font><font color="#E5E5E5"> unlike markdown or</font><font color="#CCCCCC"> asciidoc or</font>

533
00:24:38,979 --> 00:24:43,299
<font color="#E5E5E5">something if you start writing these</font>

534
00:24:40,869 --> 00:24:45,070
extensions<font color="#E5E5E5"> your documentation becomes</font>

535
00:24:43,299 --> 00:24:46,629
dependent on<font color="#CCCCCC"> these extensions and it's</font>

536
00:24:45,070 --> 00:24:51,789
not<font color="#E5E5E5"> possible to build it without those</font>

537
00:24:46,629 --> 00:24:53,469
extensions yeah so that's that's a

538
00:24:51,789 --> 00:24:56,499
<font color="#CCCCCC">trade-off essentially if you want</font>

539
00:24:53,470 --> 00:24:59,999
<font color="#E5E5E5">there's nothing that says</font><font color="#CCCCCC"> you can't go</font>

540
00:24:56,499 --> 00:25:03,039
<font color="#CCCCCC">and write plain old</font><font color="#E5E5E5"> doc utils</font>

541
00:24:59,999 --> 00:25:04,509
<font color="#CCCCCC">restructured</font><font color="#E5E5E5"> text so</font><font color="#CCCCCC"> without any</font><font color="#E5E5E5"> of the</font>

542
00:25:03,039 --> 00:25:07,299
stuff that<font color="#CCCCCC"> syncs gives you like</font><font color="#E5E5E5"> cross</font>

543
00:25:04,509 --> 00:25:09,399
reference and then that that will render

544
00:25:07,299 --> 00:25:12,549
<font color="#E5E5E5">one github because they use like a</font>

545
00:25:09,399 --> 00:25:16,899
<font color="#CCCCCC">variant of West HTML that'll they render</font>

546
00:25:12,549 --> 00:25:19,690
on any of these like restructure text

547
00:25:16,899 --> 00:25:23,830
render was<font color="#E5E5E5"> online</font><font color="#CCCCCC"> and it'll look lovely</font>

548
00:25:19,690 --> 00:25:25,869
<font color="#E5E5E5">but if you want to build upon this then</font>

549
00:25:23,830 --> 00:25:29,259
you<font color="#E5E5E5"> are trading off a certain amount</font>

550
00:25:25,869 --> 00:25:31,749
that's so much portability<font color="#E5E5E5"> but you do</font>

551
00:25:29,259 --> 00:25:33,340
need<font color="#E5E5E5"> to keep that those extensions you</font>

552
00:25:31,749 --> 00:25:36,190
need to publish<font color="#CCCCCC"> it on pie-pie or include</font>

553
00:25:33,340 --> 00:25:38,199
<font color="#CCCCCC">them in documentation and it that's no</font>

554
00:25:36,190 --> 00:25:41,249
different<font color="#CCCCCC"> to for example if you wanted</font>

555
00:25:38,200 --> 00:25:43,809
<font color="#E5E5E5">to write your documentation in like text</font>

556
00:25:41,249 --> 00:25:47,559
<font color="#E5E5E5">you could write it in like the plain old</font>

557
00:25:43,809 --> 00:25:50,289
text primitives<font color="#E5E5E5"> or you could go and</font>

558
00:25:47,559 --> 00:25:52,450
install a<font color="#E5E5E5"> couple of packages from is it</font>

559
00:25:50,289 --> 00:25:54,369
<font color="#E5E5E5">C pen and this will give you all this</font>

560
00:25:52,450 --> 00:25:56,349
functionality that<font color="#E5E5E5"> you don't so you</font>

561
00:25:54,369 --> 00:25:58,449
don't need to worry<font color="#CCCCCC"> about it</font>

562
00:25:56,349 --> 00:26:00,519
same thing with writing<font color="#E5E5E5"> code you can go</font>

563
00:25:58,450 --> 00:26:01,659
and implement<font color="#E5E5E5"> your own if you're not</font>

564
00:26:00,519 --> 00:26:03,629
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> pipe</font><font color="#E5E5E5"> if you're talking</font>

565
00:26:01,659 --> 00:26:05,529
<font color="#E5E5E5">about C you could go and implement</font>

566
00:26:03,629 --> 00:26:07,478
functionalities to<font color="#E5E5E5"> do something or you</font>

567
00:26:05,529 --> 00:26:08,710
<font color="#E5E5E5">can pull in a library and it means you</font>

568
00:26:07,479 --> 00:26:10,210
know depend on that<font color="#CCCCCC"> library but you</font>

569
00:26:08,710 --> 00:26:12,820
<font color="#E5E5E5">don't have to do</font><font color="#CCCCCC"> all that work manually</font>

570
00:26:10,210 --> 00:26:15,359
<font color="#E5E5E5">so it's a question</font><font color="#CCCCCC"> that trade-offs and</font>

571
00:26:12,820 --> 00:26:18,509
when we're talking<font color="#CCCCCC"> about something like</font>

572
00:26:15,359 --> 00:26:21,849
<font color="#E5E5E5">configuration documentation in OpenStack</font>

573
00:26:18,509 --> 00:26:24,220
like the compute<font color="#E5E5E5"> project has it must</font>

574
00:26:21,849 --> 00:26:25,629
have a thousand options<font color="#E5E5E5"> there's no way</font>

575
00:26:24,220 --> 00:26:27,129
that we want<font color="#CCCCCC"> people to</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to go in</font>

576
00:26:25,629 --> 00:26:28,840
like<font color="#CCCCCC"> every time we change</font><font color="#E5E5E5"> put a</font>

577
00:26:27,129 --> 00:26:30,969
full-stop<font color="#CCCCCC"> in it in a couple of options</font>

578
00:26:28,840 --> 00:26:34,259
<font color="#CCCCCC">go update all the documentation</font><font color="#E5E5E5"> for that</font>

579
00:26:30,970 --> 00:26:34,259
<font color="#E5E5E5">we want to make that automatic</font>

580
00:26:37,220 --> 00:26:44,100
so is there a<font color="#E5E5E5"> catalog of extensions</font>

581
00:26:40,020 --> 00:26:46,830
<font color="#E5E5E5">there is there's a</font><font color="#CCCCCC"> I can't</font><font color="#E5E5E5"> think of the</font>

582
00:26:44,100 --> 00:26:49,500
name<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it now there's a project on read</font>

583
00:26:46,830 --> 00:26:51,810
<font color="#E5E5E5">the Ducks</font><font color="#CCCCCC"> where they've they go through</font>

584
00:26:49,500 --> 00:26:54,060
pipe<font color="#CCCCCC"> I and they just search for there's</font>

585
00:26:51,810 --> 00:26:56,190
markers that<font color="#E5E5E5"> you can use and</font><font color="#CCCCCC"> that was</font>

586
00:26:54,060 --> 00:26:58,050
say this is this week's<font color="#CCCCCC"> extension the</font>

587
00:26:56,190 --> 00:27:00,480
Sphinx<font color="#E5E5E5"> builder and so forth</font>

588
00:26:58,050 --> 00:27:02,070
I can't<font color="#E5E5E5"> think of it off</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> top of my</font>

589
00:27:00,480 --> 00:27:19,010
<font color="#E5E5E5">head but I could put the link into</font><font color="#CCCCCC"> this</font>

590
00:27:02,070 --> 00:27:23,750
slides when I<font color="#E5E5E5"> the upload them later you</font>

591
00:27:19,010 --> 00:27:26,340
you mean what<font color="#E5E5E5"> kind of language</font>

592
00:27:23,750 --> 00:27:28,170
programming language so if you want

593
00:27:26,340 --> 00:27:29,429
<font color="#CCCCCC">question was if I wanted</font><font color="#E5E5E5"> to add an</font>

594
00:27:28,170 --> 00:27:31,340
additional<font color="#E5E5E5"> programming language how</font>

595
00:27:29,430 --> 00:27:34,470
would I go about<font color="#CCCCCC"> doing that yeah</font>

596
00:27:31,340 --> 00:27:36,419
<font color="#CCCCCC">probably the</font><font color="#E5E5E5"> best thing to look at is it</font>

597
00:27:34,470 --> 00:27:41,700
be a domain<font color="#CCCCCC"> while the domain is your way</font>

598
00:27:36,420 --> 00:27:43,560
<font color="#E5E5E5">of grouping</font><font color="#CCCCCC"> all of the stuff together if</font>

599
00:27:41,700 --> 00:27:44,310
the language<font color="#E5E5E5"> has something</font><font color="#CCCCCC"> like doxygen</font>

600
00:27:43,560 --> 00:27:47,010
<font color="#E5E5E5">or something</font>

601
00:27:44,310 --> 00:27:48,440
there's bridges that<font color="#E5E5E5"> exist for</font><font color="#CCCCCC"> oxygen to</font>

602
00:27:47,010 --> 00:27:50,580
<font color="#CCCCCC">sphinx you could use one of</font><font color="#E5E5E5"> those</font>

603
00:27:48,440 --> 00:27:52,140
<font color="#E5E5E5">otherwise you need to implement some</font>

604
00:27:50,580 --> 00:27:53,189
kind<font color="#CCCCCC"> of like a</font><font color="#E5E5E5"> parcel that will pull in</font>

605
00:27:52,140 --> 00:27:56,610
<font color="#E5E5E5">whatever you want from your</font>

606
00:27:53,190 --> 00:27:58,290
documentation<font color="#E5E5E5"> and then emit that a good</font>

607
00:27:56,610 --> 00:28:00,149
place<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start would be to look at an</font>

608
00:27:58,290 --> 00:28:04,379
<font color="#E5E5E5">existing domain so something like the</font>

609
00:28:00,150 --> 00:28:05,550
<font color="#CCCCCC">Ruby domain that's published outside</font><font color="#E5E5E5"> of</font>

610
00:28:04,380 --> 00:28:10,350
things because<font color="#E5E5E5"> you'll see how that's</font>

611
00:28:05,550 --> 00:28:14,389
evolved separately<font color="#CCCCCC"> we'll take them</font>

612
00:28:10,350 --> 00:28:14,389
outside<font color="#E5E5E5"> okay</font>

613
00:28:16,190 --> 00:28:20,030
thank you very<font color="#E5E5E5"> much</font><font color="#CCCCCC"> appreciate it</font>

