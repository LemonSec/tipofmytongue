1
00:00:04,630 --> 00:00:10,840
<font color="#CCCCCC">oh</font><font color="#E5E5E5"> we're gonna get the next talk by</font>

2
00:00:08,048 --> 00:00:17,109
<font color="#E5E5E5">Roman on networking Swiss Army for go</font>

3
00:00:10,840 --> 00:00:17,740
run the<font color="#E5E5E5"> philosopher him okay hi my name</font>

4
00:00:17,109 --> 00:00:19,240
<font color="#CCCCCC">is Roma</font><font color="#E5E5E5"> Moore</font>

5
00:00:17,740 --> 00:00:21,130
I'm working for a residence of tension

6
00:00:19,240 --> 00:00:22,779
<font color="#CCCCCC">here</font><font color="#E5E5E5"> and great to</font><font color="#CCCCCC"> see so</font><font color="#E5E5E5"> many people</font>

7
00:00:21,130 --> 00:00:25,689
<font color="#CCCCCC">around it's always the small</font><font color="#E5E5E5"> rooms are</font>

8
00:00:22,780 --> 00:00:29,830
pretty<font color="#E5E5E5"> full and I want to tell you today</font>

9
00:00:25,690 --> 00:00:32,289
<font color="#E5E5E5">a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> about go and how to solve</font>

10
00:00:29,830 --> 00:00:35,739
networking<font color="#E5E5E5"> problems with it and also in</font>

11
00:00:32,289 --> 00:00:39,579
<font color="#CCCCCC">general</font><font color="#E5E5E5"> why go is such a nice language</font>

12
00:00:35,739 --> 00:00:41,739
<font color="#E5E5E5">to bridge the gap between providing rest</font>

13
00:00:39,579 --> 00:00:44,140
services and still go having the

14
00:00:41,739 --> 00:00:47,349
<font color="#CCCCCC">possibility to</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> low level</font><font color="#CCCCCC"> to</font>

15
00:00:44,140 --> 00:00:50,010
<font color="#E5E5E5">note at the same time and basically</font><font color="#CCCCCC"> I</font>

16
00:00:47,350 --> 00:00:52,329
want to go with<font color="#E5E5E5"> you through three main</font>

17
00:00:50,010 --> 00:00:54,460
points<font color="#CCCCCC"> in my talk first I want to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> a</font>

18
00:00:52,329 --> 00:00:56,710
<font color="#E5E5E5">little bit why I go is so nice for</font>

19
00:00:54,460 --> 00:00:57,940
infrastructure<font color="#E5E5E5"> service</font><font color="#CCCCCC"> writing second</font>

20
00:00:56,710 --> 00:01:00,760
thing is I wanna introduce<font color="#E5E5E5"> you a</font>

21
00:00:57,940 --> 00:01:04,179
networking example or a task<font color="#E5E5E5"> I had to do</font>

22
00:01:00,760 --> 00:01:06,250
to solve and finally I want to show you

23
00:01:04,180 --> 00:01:11,170
how we can solve<font color="#CCCCCC"> that with</font><font color="#E5E5E5"> purely with</font>

24
00:01:06,250 --> 00:01:12,850
go<font color="#E5E5E5"> first let's start with why go</font><font color="#CCCCCC"> it's a</font>

25
00:01:11,170 --> 00:01:14,619
nice<font color="#E5E5E5"> for writing web services and one</font>

26
00:01:12,850 --> 00:01:17,439
thing is<font color="#E5E5E5"> pretty obvious</font>

27
00:01:14,619 --> 00:01:18,789
compared to languages like C<font color="#CCCCCC"> here you</font>

28
00:01:17,439 --> 00:01:21,008
can just for instance<font color="#E5E5E5"> annotate your</font>

29
00:01:18,789 --> 00:01:23,530
structs and just<font color="#E5E5E5"> Marshall</font><font color="#CCCCCC"> today der</font><font color="#E5E5E5"> and</font>

30
00:01:21,009 --> 00:01:25,899
if you<font color="#E5E5E5"> run it you're already done</font><font color="#CCCCCC"> with</font>

31
00:01:23,530 --> 00:01:27,640
<font color="#E5E5E5">creating a chasing that's not something</font>

32
00:01:25,899 --> 00:01:33,759
which<font color="#CCCCCC"> is so trivial with some other</font>

33
00:01:27,640 --> 00:01:35,320
<font color="#CCCCCC">low-level languages see also</font><font color="#E5E5E5"> providing</font>

34
00:01:33,759 --> 00:01:38,009
rest services<font color="#E5E5E5"> is pretty simple here you</font>

35
00:01:35,320 --> 00:01:41,380
see an example<font color="#CCCCCC"> where we</font><font color="#E5E5E5"> are creating a</font>

36
00:01:38,009 --> 00:01:46,060
rest service with a slash user path<font color="#E5E5E5"> it</font>

37
00:01:41,380 --> 00:01:47,770
can<font color="#E5E5E5"> take</font><font color="#CCCCCC"> xml</font><font color="#E5E5E5"> or tracing and there isn't</font>

38
00:01:46,060 --> 00:01:50,140
even a sub path for it where you can

39
00:01:47,770 --> 00:01:53,609
specify the user ID to<font color="#E5E5E5"> fetch it</font><font color="#CCCCCC"> and it</font>

40
00:01:50,140 --> 00:01:57,039
takes<font color="#E5E5E5"> some parameters and then you just</font>

41
00:01:53,609 --> 00:01:59,350
<font color="#CCCCCC">register to find user callback</font><font color="#E5E5E5"> for</font>

42
00:01:57,039 --> 00:02:01,719
looking<font color="#E5E5E5"> up</font><font color="#CCCCCC"> to user based on the ID and</font>

43
00:01:59,350 --> 00:02:03,249
what you see<font color="#CCCCCC"> here is the</font><font color="#E5E5E5"> go restful</font>

44
00:02:01,719 --> 00:02:05,259
framework which<font color="#CCCCCC"> is for instance used</font>

45
00:02:03,249 --> 00:02:07,630
inside kubernetes

46
00:02:05,259 --> 00:02:10,690
so far is good but<font color="#E5E5E5"> there of course other</font>

47
00:02:07,630 --> 00:02:13,090
languages like<font color="#CCCCCC"> Java Python Ruby</font>

48
00:02:10,690 --> 00:02:14,770
they all have nice<font color="#CCCCCC"> web service</font>

49
00:02:13,090 --> 00:02:16,570
frameworks and<font color="#E5E5E5"> there is definitely</font>

50
00:02:14,770 --> 00:02:17,470
<font color="#E5E5E5">nothing wrong with using them instead</font><font color="#CCCCCC"> of</font>

51
00:02:16,570 --> 00:02:19,500
<font color="#E5E5E5">go</font>

52
00:02:17,470 --> 00:02:21,400
<font color="#E5E5E5">might even</font><font color="#CCCCCC"> be better because</font><font color="#E5E5E5"> of</font>

53
00:02:19,500 --> 00:02:23,380
especially with travel because of the

54
00:02:21,400 --> 00:02:27,550
library supporters on but what go also

55
00:02:23,380 --> 00:02:31,710
<font color="#E5E5E5">provides you is working on</font><font color="#CCCCCC"> the low-level</font>

56
00:02:27,550 --> 00:02:34,270
<font color="#E5E5E5">details on your notes here for instance</font>

57
00:02:31,710 --> 00:02:37,450
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> something you would see if you</font>

58
00:02:34,270 --> 00:02:41,800
for<font color="#CCCCCC"> instance try to use</font><font color="#E5E5E5"> pcap</font><font color="#CCCCCC"> extensions</font>

59
00:02:37,450 --> 00:02:45,399
for<font color="#CCCCCC"> Python and when you</font><font color="#E5E5E5"> don't have to</font>

60
00:02:41,800 --> 00:02:46,840
pick<font color="#E5E5E5"> up that</font><font color="#CCCCCC"> Oliver is installed you</font>

61
00:02:45,400 --> 00:02:49,090
will<font color="#E5E5E5"> get a</font><font color="#CCCCCC"> message like this</font><font color="#E5E5E5"> if you want</font>

62
00:02:46,840 --> 00:02:50,530
to pull in your dependencies but Jesus

63
00:02:49,090 --> 00:02:52,000
he will try to compile an extension for

64
00:02:50,530 --> 00:02:53,440
<font color="#E5E5E5">Python and it will just fail because</font><font color="#CCCCCC"> you</font>

65
00:02:52,000 --> 00:02:55,330
don't have to<font color="#E5E5E5"> bet the devil ever is</font>

66
00:02:53,440 --> 00:02:58,090
installed and how do you<font color="#E5E5E5"> solve that</font>

67
00:02:55,330 --> 00:03:00,040
normally you pull in GCC<font color="#CCCCCC"> pick up</font>

68
00:02:58,090 --> 00:03:03,850
developer<font color="#E5E5E5"> ease and then you can finally</font>

69
00:03:00,040 --> 00:03:05,829
add<font color="#CCCCCC"> your application that's a whole</font>

70
00:03:03,850 --> 00:03:09,190
process<font color="#CCCCCC"> name you don't have</font><font color="#E5E5E5"> to kind of</font>

71
00:03:05,830 --> 00:03:11,200
package<font color="#E5E5E5"> the results to bring it to a</font>

72
00:03:09,190 --> 00:03:12,310
node and<font color="#E5E5E5"> that's not really</font><font color="#CCCCCC"> necessary</font>

73
00:03:11,200 --> 00:03:15,100
with code because there you can

74
00:03:12,310 --> 00:03:19,840
<font color="#E5E5E5">extremely easy access all the low-level</font>

75
00:03:15,100 --> 00:03:23,560
details of<font color="#E5E5E5"> notes and to show you how</font>

76
00:03:19,840 --> 00:03:25,630
easy it<font color="#E5E5E5"> is to work with go I came up</font>

77
00:03:23,560 --> 00:03:28,900
with networking example I had<font color="#E5E5E5"> to work</font><font color="#CCCCCC"> on</font>

78
00:03:25,630 --> 00:03:33,250
<font color="#CCCCCC">some time ago it's basically based</font>

79
00:03:28,900 --> 00:03:34,900
around<font color="#CCCCCC"> VM -</font><font color="#E5E5E5"> no host networking so we</font>

80
00:03:33,250 --> 00:03:36,250
have wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> attach virtual machines</font>

81
00:03:34,900 --> 00:03:39,280
<font color="#E5E5E5">to host networks which were already</font>

82
00:03:36,250 --> 00:03:41,310
<font color="#CCCCCC">existing without they need to</font><font color="#E5E5E5"> modify</font>

83
00:03:39,280 --> 00:03:43,420
their host<font color="#E5E5E5"> network too much and</font>

84
00:03:41,310 --> 00:03:44,650
integrate the virtual machines in the

85
00:03:43,420 --> 00:03:46,268
<font color="#E5E5E5">host</font><font color="#CCCCCC"> network for instance you had an</font>

86
00:03:44,650 --> 00:03:48,870
<font color="#E5E5E5">external HTTP server it should get</font><font color="#CCCCCC"> the</font>

87
00:03:46,269 --> 00:03:51,489
<font color="#E5E5E5">THC piece the</font><font color="#CCCCCC"> piece</font><font color="#E5E5E5"> from there and so on</font>

88
00:03:48,870 --> 00:03:53,350
we didn't want to make assumptions<font color="#CCCCCC"> like</font>

89
00:03:51,489 --> 00:03:57,090
that the network already consists of a

90
00:03:53,350 --> 00:03:59,500
bridge or an ordinary interface and

91
00:03:57,090 --> 00:04:02,200
McVie<font color="#E5E5E5"> taps would have been nice</font><font color="#CCCCCC"> to use</font>

92
00:03:59,500 --> 00:04:04,540
there since<font color="#E5E5E5"> they gives you some nice</font>

93
00:04:02,200 --> 00:04:08,018
reduction<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> delays of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> network</font>

94
00:04:04,540 --> 00:04:09,370
traffic compared to bridges and finally

95
00:04:08,019 --> 00:04:11,220
since I'm<font color="#CCCCCC"> working in the communities</font>

96
00:04:09,370 --> 00:04:13,480
<font color="#E5E5E5">area with virtualization add-ons</font><font color="#CCCCCC"> there</font>

97
00:04:11,220 --> 00:04:17,440
we wanted<font color="#E5E5E5"> to have the possibility</font><font color="#CCCCCC"> to</font>

98
00:04:13,480 --> 00:04:19,478
ship our<font color="#E5E5E5"> our code as a single binary</font>

99
00:04:17,440 --> 00:04:21,850
without<font color="#CCCCCC"> dependencies so that we can use</font>

100
00:04:19,478 --> 00:04:23,229
the pretty common pattern of<font color="#E5E5E5"> init</font>

101
00:04:21,850 --> 00:04:25,419
containers from certain communities<font color="#CCCCCC"> so</font>

102
00:04:23,229 --> 00:04:27,340
<font color="#CCCCCC">you'll you just put your Piner</font><font color="#E5E5E5"> in a</font>

103
00:04:25,419 --> 00:04:30,159
container and<font color="#CCCCCC"> then you have to place it</font>

104
00:04:27,340 --> 00:04:31,169
somewhere in the<font color="#E5E5E5"> host so that management</font>

105
00:04:30,160 --> 00:04:32,699
<font color="#CCCCCC">application there</font>

106
00:04:31,169 --> 00:04:35,099
or a<font color="#CCCCCC"> diamond there can find your binary</font>

107
00:04:32,699 --> 00:04:37,590
<font color="#E5E5E5">to use the</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> and therefore you</font>

108
00:04:35,099 --> 00:04:42,419
<font color="#E5E5E5">don't want dynamic dependencies for your</font>

109
00:04:37,590 --> 00:04:44,729
code if we now<font color="#CCCCCC"> look a little bit</font><font color="#E5E5E5"> more</font>

110
00:04:42,419 --> 00:04:45,990
detail on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> tasks what you normally</font>

111
00:04:44,729 --> 00:04:47,370
see<font color="#CCCCCC"> when you do virtual machine</font>

112
00:04:45,990 --> 00:04:50,789
management is you have a bridge on the

113
00:04:47,370 --> 00:04:52,830
node<font color="#E5E5E5"> you attach you have your interface</font>

114
00:04:50,789 --> 00:04:54,419
attached to the bridge<font color="#CCCCCC"> and then you have</font>

115
00:04:52,830 --> 00:04:56,789
to be two machines<font color="#CCCCCC"> here in</font><font color="#E5E5E5"> this case</font><font color="#CCCCCC"> two</font>

116
00:04:54,419 --> 00:04:58,409
this<font color="#E5E5E5"> way I mean this</font><font color="#CCCCCC"> VM they both have</font>

117
00:04:56,789 --> 00:05:02,340
their<font color="#E5E5E5"> own</font><font color="#CCCCCC"> tap</font><font color="#E5E5E5"> devices they're all</font>

118
00:04:58,409 --> 00:05:05,819
attached<font color="#CCCCCC"> to the bridge and if now let's</font>

119
00:05:02,340 --> 00:05:08,818
say the VM<font color="#E5E5E5"> on tap one wants to ping the</font>

120
00:05:05,819 --> 00:05:10,319
vein with the dot<font color="#CCCCCC"> three suffix</font><font color="#E5E5E5"> it can</font>

121
00:05:08,819 --> 00:05:12,300
just<font color="#E5E5E5"> bridge it and if it wants to ping</font>

122
00:05:10,319 --> 00:05:14,150
the<font color="#E5E5E5"> node which has to tether to address</font>

123
00:05:12,300 --> 00:05:17,339
and with<font color="#E5E5E5"> two that's also no problem</font>

124
00:05:14,150 --> 00:05:18,748
now with make<font color="#E5E5E5"> V taps it's a little bit</font>

125
00:05:17,339 --> 00:05:20,580
different<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are advantages that</font><font color="#CCCCCC"> you</font>

126
00:05:18,749 --> 00:05:22,650
can directly attach<font color="#CCCCCC"> McVie taps to the</font>

127
00:05:20,580 --> 00:05:25,109
<font color="#E5E5E5">Ethernet bridge so to the ethernet</font>

128
00:05:22,650 --> 00:05:27,270
device you<font color="#E5E5E5"> don't have to prepare the</font>

129
00:05:25,110 --> 00:05:29,460
<font color="#CCCCCC">node in any way for that and in</font>

130
00:05:27,270 --> 00:05:33,479
principle that works<font color="#CCCCCC"> reddit can talk to</font>

131
00:05:29,460 --> 00:05:35,039
every other<font color="#CCCCCC"> node</font><font color="#E5E5E5"> but it can talk to the</font>

132
00:05:33,479 --> 00:05:37,188
node it's currently<font color="#E5E5E5"> running on that's</font>

133
00:05:35,039 --> 00:05:39,839
limitation of my three tips so the

134
00:05:37,189 --> 00:05:42,120
virtual machine on<font color="#E5E5E5"> negative one</font>

135
00:05:39,839 --> 00:05:44,490
interface can without<font color="#CCCCCC"> any issues</font><font color="#E5E5E5"> reach</font>

136
00:05:42,120 --> 00:05:46,259
the<font color="#E5E5E5"> other metro machine and it can also</font>

137
00:05:44,490 --> 00:05:48,000
reach every other node in the cluster

138
00:05:46,259 --> 00:05:49,710
but it can't reach the node it's

139
00:05:48,000 --> 00:05:52,469
currently<font color="#E5E5E5"> running on so this ping would</font>

140
00:05:49,710 --> 00:05:54,479
fail with<font color="#E5E5E5"> theta2 prefix who wants</font><font color="#CCCCCC"> the</font>

141
00:05:52,469 --> 00:05:59,339
motion for<font color="#E5E5E5"> that is adding extra routes</font>

142
00:05:54,479 --> 00:06:03,770
so you can say<font color="#E5E5E5"> that traffic coming</font><font color="#CCCCCC"> from</font>

143
00:05:59,339 --> 00:06:06,719
that bread from<font color="#E5E5E5"> the dot for suffix IP</font>

144
00:06:03,770 --> 00:06:10,849
should be<font color="#CCCCCC"> routed or</font><font color="#E5E5E5"> wemmick villain on</font>

145
00:06:06,719 --> 00:06:15,080
the node which is<font color="#CCCCCC"> also part of the</font><font color="#E5E5E5"> same</font>

146
00:06:10,849 --> 00:06:20,370
network<font color="#E5E5E5"> and since this is on the node</font>

147
00:06:15,080 --> 00:06:22,258
<font color="#CCCCCC">finally we can ping the node and that is</font>

148
00:06:20,370 --> 00:06:23,819
actually<font color="#CCCCCC"> pretty complex to</font><font color="#E5E5E5"> solve if you</font>

149
00:06:22,259 --> 00:06:25,499
want to make the generic<font color="#CCCCCC"> because you</font>

150
00:06:23,819 --> 00:06:27,870
need a route for every virtual machine

151
00:06:25,499 --> 00:06:30,120
you create and if you don't want to make

152
00:06:27,870 --> 00:06:31,110
any<font color="#E5E5E5"> assumptions about the host and if</font>

153
00:06:30,120 --> 00:06:35,669
you don't want to<font color="#E5E5E5"> make any assumptions</font>

154
00:06:31,110 --> 00:06:38,039
<font color="#CCCCCC">about how the virtual machines gets</font>

155
00:06:35,669 --> 00:06:41,008
therapy I mean except that<font color="#CCCCCC"> it's done by</font>

156
00:06:38,039 --> 00:06:42,690
<font color="#E5E5E5">DHCP it's pretty complex to find a</font>

157
00:06:41,009 --> 00:06:44,790
solution<font color="#E5E5E5"> to get all the pieces together</font>

158
00:06:42,690 --> 00:06:47,670
<font color="#E5E5E5">what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do is if</font>

159
00:06:44,790 --> 00:06:50,730
the<font color="#E5E5E5"> Makri tap one device senses HTTP</font>

160
00:06:47,670 --> 00:06:52,320
<font color="#CCCCCC">request</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> steal it with traffic</font>

161
00:06:50,730 --> 00:06:54,990
control from the<font color="#CCCCCC"> ethernet zero device</font>

162
00:06:52,320 --> 00:06:57,060
<font color="#E5E5E5">move it to a bridge where you then can</font>

163
00:06:54,990 --> 00:06:58,730
which is in<font color="#E5E5E5"> promise creative mode there</font>

164
00:06:57,060 --> 00:07:01,470
you<font color="#E5E5E5"> can analyze the traffic and see</font>

165
00:06:58,730 --> 00:07:03,690
what's going on<font color="#E5E5E5"> and once you're done</font>

166
00:07:01,470 --> 00:07:05,850
with<font color="#E5E5E5"> analyzing you have to re-inject</font>

167
00:07:03,690 --> 00:07:09,800
biomech VLAN to the packet so that<font color="#CCCCCC"> it</font>

168
00:07:05,850 --> 00:07:12,090
finally gets<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the to the cluster or</font>

169
00:07:09,800 --> 00:07:14,460
editorial<font color="#E5E5E5"> order the answer get spectrum</font>

170
00:07:12,090 --> 00:07:16,700
to make<font color="#CCCCCC"> B type one VM</font><font color="#E5E5E5"> and that's what</font>

171
00:07:14,460 --> 00:07:19,590
I'm<font color="#E5E5E5"> trying to show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> now with go and</font>

172
00:07:16,700 --> 00:07:20,640
what we'll<font color="#E5E5E5"> start with</font><font color="#CCCCCC"> vishwananda</font>

173
00:07:19,590 --> 00:07:23,700
<font color="#E5E5E5">metalic that's a net</font><font color="#CCCCCC"> linked</font>

174
00:07:20,640 --> 00:07:26,550
implementation for go<font color="#E5E5E5"> it's based on the</font>

175
00:07:23,700 --> 00:07:28,800
<font color="#E5E5E5">talker networking library originally but</font>

176
00:07:26,550 --> 00:07:31,110
was since then greatly enhanced and in

177
00:07:28,800 --> 00:07:35,250
general already<font color="#CCCCCC"> nice I'm presenting here</font>

178
00:07:31,110 --> 00:07:38,130
<font color="#E5E5E5">I'm using them every day but</font><font color="#CCCCCC"> I never</font>

179
00:07:35,250 --> 00:07:39,450
contributed<font color="#CCCCCC"> there so all the thanks go</font>

180
00:07:38,130 --> 00:07:41,750
to<font color="#E5E5E5"> all the cool developers out there</font>

181
00:07:39,450 --> 00:07:43,710
which we are adding<font color="#E5E5E5"> into libraries and</font>

182
00:07:41,750 --> 00:07:45,360
<font color="#E5E5E5">we will start with something pretty</font>

183
00:07:43,710 --> 00:07:48,900
<font color="#E5E5E5">simple here I'm just importing the</font>

184
00:07:45,360 --> 00:07:51,930
<font color="#E5E5E5">nightly primary and let's just list all</font>

185
00:07:48,900 --> 00:07:53,729
links on the node<font color="#E5E5E5"> and it's very simple</font>

186
00:07:51,930 --> 00:07:55,320
<font color="#CCCCCC">and I'm just printing out to</font><font color="#E5E5E5"> dump</font>

187
00:07:53,730 --> 00:07:59,940
objects again in this year here I have a

188
00:07:55,320 --> 00:08:02,370
local<font color="#CCCCCC"> network</font><font color="#E5E5E5"> that's my my even that my</font>

189
00:07:59,940 --> 00:08:04,140
Wi-Fi<font color="#CCCCCC"> summer</font><font color="#E5E5E5"> to purchase and here I</font>

190
00:08:02,370 --> 00:08:06,930
first effects device which<font color="#E5E5E5"> will usually</font>

191
00:08:04,140 --> 00:08:08,909
<font color="#E5E5E5">it done so pretty simple to get it</font>

192
00:08:06,930 --> 00:08:10,980
already that's<font color="#E5E5E5"> also pretty</font><font color="#CCCCCC"> simple with</font>

193
00:08:08,910 --> 00:08:13,500
the<font color="#CCCCCC"> collaborative core but</font><font color="#E5E5E5"> also notice</font>

194
00:08:10,980 --> 00:08:14,970
with<font color="#CCCCCC"> Netflix I think we can also have</font><font color="#E5E5E5"> a</font>

195
00:08:13,500 --> 00:08:16,830
<font color="#E5E5E5">look on the address is attached in this</font>

196
00:08:14,970 --> 00:08:20,060
case with<font color="#E5E5E5"> linked by name I'm just</font>

197
00:08:16,830 --> 00:08:22,680
fetching<font color="#CCCCCC"> there low interface and and</font>

198
00:08:20,060 --> 00:08:26,070
fetching the<font color="#E5E5E5"> address is assigned to the</font>

199
00:08:22,680 --> 00:08:27,570
<font color="#E5E5E5">to the interface and then just be let's</font>

200
00:08:26,070 --> 00:08:29,909
print the interfaces in this case you

201
00:08:27,570 --> 00:08:33,630
<font color="#E5E5E5">will see</font><font color="#CCCCCC"> ok the</font><font color="#E5E5E5"> long interface has the</font>

202
00:08:29,910 --> 00:08:38,250
typical local host interface local host

203
00:08:33,630 --> 00:08:40,200
address all the creating interfaces is

204
00:08:38,250 --> 00:08:42,179
pretty nice<font color="#E5E5E5"> let's suppose we want to</font>

205
00:08:40,200 --> 00:08:44,099
create<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Mac villain device</font><font color="#E5E5E5"> you just</font>

206
00:08:42,179 --> 00:08:47,609
create a Mac will instruct also with net

207
00:08:44,099 --> 00:08:50,100
link<font color="#E5E5E5"> give it a name</font><font color="#CCCCCC"> you tell it to</font><font color="#E5E5E5"> which</font>

208
00:08:47,610 --> 00:08:53,760
parent interface you want to connect it

209
00:08:50,100 --> 00:08:55,380
<font color="#E5E5E5">in this case my even that device has</font><font color="#CCCCCC"> too</font>

210
00:08:53,760 --> 00:08:58,080
little<font color="#CCCCCC"> too</font><font color="#E5E5E5"> and I've just hard coded it</font>

211
00:08:55,380 --> 00:08:59,340
here and you<font color="#CCCCCC"> can even say in which</font>

212
00:08:58,080 --> 00:09:02,870
<font color="#E5E5E5">moved to make a million children and</font>

213
00:08:59,340 --> 00:09:06,180
then<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> calling out</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and</font>

214
00:09:02,870 --> 00:09:10,650
in this<font color="#E5E5E5"> case I'm and finally fetching it</font>

215
00:09:06,180 --> 00:09:12,810
and printing out and here<font color="#E5E5E5"> we go and he</font>

216
00:09:10,650 --> 00:09:16,050
received<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Mac villian device it was</font>

217
00:09:12,810 --> 00:09:21,150
<font color="#E5E5E5">created and printed out and it was down</font>

218
00:09:16,050 --> 00:09:22,770
<font color="#E5E5E5">at the stage when I fetched it again now</font>

219
00:09:21,150 --> 00:09:25,260
we already have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first part</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> our</font>

220
00:09:22,770 --> 00:09:26,910
solution<font color="#CCCCCC"> a small part</font><font color="#E5E5E5"> but now we've</font>

221
00:09:25,260 --> 00:09:29,130
already<font color="#E5E5E5"> seen</font><font color="#CCCCCC"> how we can create McMillion</font>

222
00:09:26,910 --> 00:09:33,510
<font color="#E5E5E5">devices and so this part is not solved</font>

223
00:09:29,130 --> 00:09:35,280
for puzzle next thing is we<font color="#E5E5E5"> the next</font>

224
00:09:33,510 --> 00:09:36,960
topic we want<font color="#E5E5E5"> to do is with one now want</font>

225
00:09:35,280 --> 00:09:38,939
to<font color="#E5E5E5"> create a</font><font color="#CCCCCC"> sniffle</font><font color="#E5E5E5"> bridge or a bridge</font>

226
00:09:36,960 --> 00:09:42,240
<font color="#CCCCCC">we're born is introspective traffic</font><font color="#E5E5E5"> and</font>

227
00:09:38,940 --> 00:09:46,590
we want to use traffic<font color="#E5E5E5"> control filters</font>

228
00:09:42,240 --> 00:09:48,510
to move to move the packets from the

229
00:09:46,590 --> 00:09:52,200
<font color="#E5E5E5">ethernet device to the sniff asura</font>

230
00:09:48,510 --> 00:09:54,750
bridge<font color="#CCCCCC"> one could also try to use IP</font>

231
00:09:52,200 --> 00:09:57,060
<font color="#E5E5E5">tables but that would not help much</font>

232
00:09:54,750 --> 00:09:59,910
<font color="#CCCCCC">because Mac VLAN and</font><font color="#E5E5E5"> make me</font><font color="#CCCCCC"> tape</font>

233
00:09:57,060 --> 00:10:01,290
interfaces or traffic is so slow<font color="#CCCCCC"> in the</font>

234
00:09:59,910 --> 00:10:03,360
kernel stack it never reaches that

235
00:10:01,290 --> 00:10:06,020
reaches IP tables<font color="#E5E5E5"> so you really have to</font>

236
00:10:03,360 --> 00:10:09,030
use<font color="#E5E5E5"> traffic control also</font><font color="#CCCCCC"> if you do</font><font color="#E5E5E5"> a TC</font>

237
00:10:06,020 --> 00:10:11,370
<font color="#CCCCCC">yeah otherwise it will just</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> work it</font>

238
00:10:09,030 --> 00:10:13,050
will<font color="#CCCCCC"> just ignore any traffic</font><font color="#E5E5E5"> and you</font>

239
00:10:11,370 --> 00:10:15,180
have no influence<font color="#E5E5E5"> on it that's why you</font>

240
00:10:13,050 --> 00:10:17,189
need<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> traffic control so the first</font>

241
00:10:15,180 --> 00:10:19,979
part is we<font color="#E5E5E5"> are just creating a bridge</font>

242
00:10:17,190 --> 00:10:22,470
<font color="#E5E5E5">again you just</font><font color="#CCCCCC"> create a</font><font color="#E5E5E5"> you just</font><font color="#CCCCCC"> create</font>

243
00:10:19,980 --> 00:10:28,410
a bridge struct give the bridge<font color="#E5E5E5"> your</font>

244
00:10:22,470 --> 00:10:30,960
name<font color="#CCCCCC"> at the bridge set the bridge to up</font>

245
00:10:28,410 --> 00:10:32,430
links it up set it to promise<font color="#CCCCCC"> curative</font>

246
00:10:30,960 --> 00:10:35,000
mode otherwise<font color="#E5E5E5"> we won't see</font><font color="#CCCCCC"> much when</font>

247
00:10:32,430 --> 00:10:38,849
we're sniffing the traffic there and

248
00:10:35,000 --> 00:10:43,380
then let's just print from<font color="#E5E5E5"> IPA the</font>

249
00:10:38,850 --> 00:10:45,750
<font color="#E5E5E5">output so that</font><font color="#CCCCCC"> we see the</font><font color="#E5E5E5"> bridge and if</font>

250
00:10:43,380 --> 00:10:47,490
we<font color="#E5E5E5"> go if I'm going down</font><font color="#CCCCCC"> here now you</font><font color="#E5E5E5"> see</font>

251
00:10:45,750 --> 00:10:56,930
it a<font color="#CCCCCC"> sniffer Cyril</font><font color="#E5E5E5"> bridge was created</font>

252
00:10:47,490 --> 00:10:59,100
and<font color="#E5E5E5"> it's in promise creative mode and so</font>

253
00:10:56,930 --> 00:11:00,780
we are one<font color="#E5E5E5"> step farther now we already</font>

254
00:10:59,100 --> 00:11:02,700
<font color="#CCCCCC">have two bridge to Iran in respect to</font>

255
00:11:00,780 --> 00:11:05,610
traffic<font color="#E5E5E5"> so let's deal the packets</font><font color="#CCCCCC"> is</font>

256
00:11:02,700 --> 00:11:08,100
<font color="#E5E5E5">next first to steal the packet we have</font>

257
00:11:05,610 --> 00:11:09,730
to create a ingress<font color="#CCCCCC"> queue</font><font color="#E5E5E5"> disk that's</font>

258
00:11:08,100 --> 00:11:12,760
<font color="#E5E5E5">something you need in</font>

259
00:11:09,730 --> 00:11:15,400
traffic control<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> where</font>

260
00:11:12,760 --> 00:11:17,950
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can then finally attach your filters</font>

261
00:11:15,400 --> 00:11:19,540
to their different interests<font color="#CCCCCC"> both cue</font>

262
00:11:17,950 --> 00:11:22,450
<font color="#CCCCCC">disks but here I'm</font><font color="#E5E5E5"> just using a solid</font>

263
00:11:19,540 --> 00:11:24,730
<font color="#E5E5E5">one adding it to the interface with the</font>

264
00:11:22,450 --> 00:11:28,120
<font color="#E5E5E5">link index</font><font color="#CCCCCC"> to and then when we've</font>

265
00:11:24,730 --> 00:11:31,780
created the cue disk<font color="#E5E5E5"> we create a</font><font color="#CCCCCC"> u-32</font>

266
00:11:28,120 --> 00:11:33,760
filter for traffic control<font color="#E5E5E5"> we tell it</font>

267
00:11:31,780 --> 00:11:37,180
that we're<font color="#CCCCCC"> interested in the Ethernet</font>

268
00:11:33,760 --> 00:11:43,900
packet frame<font color="#E5E5E5"> in the value at offset 20</font>

269
00:11:37,180 --> 00:11:45,760
and the the<font color="#E5E5E5"> 0 X 44 value</font><font color="#CCCCCC"> 644 is just 6</font>

270
00:11:43,900 --> 00:11:47,560
<font color="#E5E5E5">is the port 68 and that's the port from</font>

271
00:11:45,760 --> 00:11:51,010
the that's the<font color="#E5E5E5"> answer from the</font><font color="#CCCCCC"> DHCP</font>

272
00:11:47,560 --> 00:11:54,250
server were interested in and we then

273
00:11:51,010 --> 00:11:56,350
create a<font color="#CCCCCC"> filter where we tell the filter</font>

274
00:11:54,250 --> 00:11:58,150
on which parent interface it should be

275
00:11:56,350 --> 00:12:01,630
located<font color="#E5E5E5"> that's again my Ethernet 0</font>

276
00:11:58,150 --> 00:12:05,890
interface and<font color="#E5E5E5"> that we are interested in</font>

277
00:12:01,630 --> 00:12:11,020
Ethernet<font color="#E5E5E5"> frames and then we're where is</font>

278
00:12:05,890 --> 00:12:13,330
the selector now oh yeah and and<font color="#E5E5E5"> that</font>

279
00:12:11,020 --> 00:12:16,420
the filter<font color="#CCCCCC"> should contain the selector</font>

280
00:12:13,330 --> 00:12:18,310
we prepared<font color="#E5E5E5"> and finally we also want to</font>

281
00:12:16,420 --> 00:12:20,069
tell it<font color="#CCCCCC"> that the action should take if</font>

282
00:12:18,310 --> 00:12:22,239
the filter change with the<font color="#CCCCCC"> matrices</font>

283
00:12:20,070 --> 00:12:25,390
<font color="#E5E5E5">mirroring the traffic so we just create</font>

284
00:12:22,240 --> 00:12:26,920
a net<font color="#CCCCCC"> link numeration and tell it to</font>

285
00:12:25,390 --> 00:12:28,330
which device we want<font color="#E5E5E5"> to mirror the</font>

286
00:12:26,920 --> 00:12:31,900
traffic in<font color="#E5E5E5"> this case I had a device</font>

287
00:12:28,330 --> 00:12:34,270
called<font color="#E5E5E5"> foo and I'm just taking the index</font>

288
00:12:31,900 --> 00:12:37,420
from the interface here<font color="#E5E5E5"> and then finally</font>

289
00:12:34,270 --> 00:12:39,460
filter<font color="#E5E5E5"> add the filters there and will</font>

290
00:12:37,420 --> 00:12:44,319
output the resulting filter to see if it

291
00:12:39,460 --> 00:12:49,750
really<font color="#CCCCCC"> was created</font><font color="#E5E5E5"> and there we go we</font>

292
00:12:44,320 --> 00:12:53,470
now see on<font color="#E5E5E5"> on index tool that's the</font>

293
00:12:49,750 --> 00:12:54,820
device index<font color="#E5E5E5"> a redirect to device</font><font color="#CCCCCC"> food</font>

294
00:12:53,470 --> 00:12:57,040
was created and<font color="#CCCCCC"> we're sealing</font><font color="#E5E5E5"> the</font>

295
00:12:54,820 --> 00:12:59,010
package we're even seeing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and it is</font>

296
00:12:57,040 --> 00:13:02,800
<font color="#CCCCCC">its mere addiction</font>

297
00:12:59,010 --> 00:13:05,939
so we're fara we got one step Farah

298
00:13:02,800 --> 00:13:09,219
<font color="#E5E5E5">we've not stoned the packet next part is</font>

299
00:13:05,940 --> 00:13:11,020
introspecting it and<font color="#E5E5E5"> there go packet</font>

300
00:13:09,220 --> 00:13:13,600
from<font color="#CCCCCC"> google helps you a lot</font><font color="#E5E5E5"> that's a</font>

301
00:13:11,020 --> 00:13:15,520
really nice library<font color="#CCCCCC"> for introspecting</font>

302
00:13:13,600 --> 00:13:18,400
network traffic<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> normally start</font>

303
00:13:15,520 --> 00:13:21,069
by creating<font color="#E5E5E5"> it by opening</font><font color="#CCCCCC"> a pcap</font>

304
00:13:18,400 --> 00:13:22,790
connection to the interface so<font color="#CCCCCC"> that you</font>

305
00:13:21,070 --> 00:13:27,590
can save an electric and

306
00:13:22,790 --> 00:13:30,439
then you tell your packet<font color="#CCCCCC"> what kind of</font>

307
00:13:27,590 --> 00:13:33,170
traffic<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are try to in suspect</font><font color="#E5E5E5"> on by</font>

308
00:13:30,440 --> 00:13:36,050
vibrating a new packet source so we<font color="#CCCCCC"> can</font>

309
00:13:33,170 --> 00:13:37,939
try to<font color="#E5E5E5"> run it and then we see exactly</font>

310
00:13:36,050 --> 00:13:41,359
<font color="#E5E5E5">what we didn't</font><font color="#CCCCCC"> want to see an import</font>

311
00:13:37,940 --> 00:13:43,100
<font color="#CCCCCC">from</font><font color="#E5E5E5"> C code so how we can</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> go around</font>

312
00:13:41,360 --> 00:13:46,820
<font color="#E5E5E5">that and the answer is pretty simple</font>

313
00:13:43,100 --> 00:13:51,050
<font color="#CCCCCC">there is</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> instance from nd layer raw</font>

314
00:13:46,820 --> 00:13:53,120
packet which implements<font color="#CCCCCC"> the packet</font>

315
00:13:51,050 --> 00:13:54,890
reader from gold standard library<font color="#CCCCCC"> I</font>

316
00:13:53,120 --> 00:13:56,240
think that's not<font color="#E5E5E5"> the</font><font color="#CCCCCC"> correct name I</font>

317
00:13:54,890 --> 00:14:01,189
forgot the actual name<font color="#CCCCCC"> of our it's</font>

318
00:13:56,240 --> 00:14:03,110
called<font color="#E5E5E5"> but this raw packet allows you to</font>

319
00:14:01,190 --> 00:14:05,690
listen<font color="#E5E5E5"> on packets you just give it an</font>

320
00:14:03,110 --> 00:14:07,970
interface<font color="#E5E5E5"> and you tell</font><font color="#CCCCCC"> it that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> are</font>

321
00:14:05,690 --> 00:14:10,610
now trying<font color="#E5E5E5"> to listen even it into</font>

322
00:14:07,970 --> 00:14:12,770
<font color="#E5E5E5">Internet Ethernet frames and that's</font>

323
00:14:10,610 --> 00:14:14,450
important here<font color="#E5E5E5"> here you can do something</font>

324
00:14:12,770 --> 00:14:16,400
<font color="#CCCCCC">from pretty easily for instance if you</font>

325
00:14:14,450 --> 00:14:18,320
are<font color="#CCCCCC"> really</font><font color="#E5E5E5"> listening on a normal</font>

326
00:14:16,400 --> 00:14:19,970
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> device you obviously see</font>

327
00:14:18,320 --> 00:14:22,280
Ethernet frames but if<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> using for</font>

328
00:14:19,970 --> 00:14:25,640
instance<font color="#CCCCCC"> millions</font><font color="#E5E5E5"> and you're creating</font>

329
00:14:22,280 --> 00:14:27,199
the photos which we had<font color="#CCCCCC"> before then you</font>

330
00:14:25,640 --> 00:14:28,400
<font color="#E5E5E5">probably have to recalculate the offset</font>

331
00:14:27,200 --> 00:14:29,960
<font color="#CCCCCC">because you're not</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> on Ethernet</font>

332
00:14:28,400 --> 00:14:31,400
<font color="#CCCCCC">frame at the offsets for for</font><font color="#E5E5E5"> instance</font>

333
00:14:29,960 --> 00:14:35,780
finding out the port<font color="#E5E5E5"> would be</font><font color="#CCCCCC"> definitely</font>

334
00:14:31,400 --> 00:14:37,939
wrong and<font color="#E5E5E5"> after we've created that we've</font>

335
00:14:35,780 --> 00:14:39,530
created the<font color="#CCCCCC"> raw connection</font><font color="#E5E5E5"> to the</font>

336
00:14:37,940 --> 00:14:43,040
<font color="#E5E5E5">interface we don't just have to</font>

337
00:14:39,530 --> 00:14:48,199
<font color="#CCCCCC">implement the riteca</font><font color="#E5E5E5"> that data method</font>

338
00:14:43,040 --> 00:14:50,770
where we<font color="#E5E5E5"> are where we</font><font color="#CCCCCC"> are waiting</font><font color="#E5E5E5"> for</font>

339
00:14:48,200 --> 00:14:53,390
packets to read first we're creating<font color="#E5E5E5"> an</font>

340
00:14:50,770 --> 00:14:55,069
data buffer which has the size of the

341
00:14:53,390 --> 00:14:58,430
maximum<font color="#E5E5E5"> transfer unit of the interface</font>

342
00:14:55,070 --> 00:15:01,700
we read the data into that<font color="#E5E5E5"> buffer and</font>

343
00:14:58,430 --> 00:15:03,410
then we are filling in some capture info

344
00:15:01,700 --> 00:15:06,890
like when we captured it how much<font color="#E5E5E5"> we</font>

345
00:15:03,410 --> 00:15:08,240
captured<font color="#E5E5E5"> how big the plate the packet is</font>

346
00:15:06,890 --> 00:15:09,410
<font color="#CCCCCC">at all in this case the reader of us</font>

347
00:15:08,240 --> 00:15:12,170
reach the whole packet so it's the same

348
00:15:09,410 --> 00:15:14,750
value<font color="#CCCCCC"> and we tell the caption for</font><font color="#E5E5E5"> which</font>

349
00:15:12,170 --> 00:15:18,410
interface it was and then we return<font color="#CCCCCC"> the</font>

350
00:15:14,750 --> 00:15:20,450
<font color="#E5E5E5">data and actually there you don't see</font>

351
00:15:18,410 --> 00:15:23,000
much except<font color="#CCCCCC"> that it's now compiling and</font>

352
00:15:20,450 --> 00:15:24,740
<font color="#CCCCCC">no C library was linked in I didn't</font>

353
00:15:23,000 --> 00:15:26,670
really get to<font color="#CCCCCC"> the point</font><font color="#E5E5E5"> to creating a</font>

354
00:15:24,740 --> 00:15:31,610
more<font color="#CCCCCC"> useful example here</font>

355
00:15:26,670 --> 00:15:35,390
and once we have that we can<font color="#CCCCCC"> use the</font>

356
00:15:31,610 --> 00:15:37,560
this new packet<font color="#E5E5E5"> source from before and</font>

357
00:15:35,390 --> 00:15:41,340
listen for packets<font color="#CCCCCC"> there like this</font><font color="#E5E5E5"> and</font>

358
00:15:37,560 --> 00:15:43,260
<font color="#E5E5E5">then have a for loop over these packets</font>

359
00:15:41,340 --> 00:15:48,030
which are<font color="#E5E5E5"> coming in there and then we</font>

360
00:15:43,260 --> 00:15:49,590
<font color="#CCCCCC">can just take the packet and</font><font color="#E5E5E5"> and try to</font>

361
00:15:48,030 --> 00:15:51,120
convert it to<font color="#E5E5E5"> different layers when</font>

362
00:15:49,590 --> 00:15:52,710
we're<font color="#CCCCCC"> working on it in</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> case if I</font>

363
00:15:51,120 --> 00:15:54,920
<font color="#CCCCCC">want to see if it's on the UDP Leah I</font>

364
00:15:52,710 --> 00:15:57,900
just try to<font color="#E5E5E5"> convert it to the UDP layer</font>

365
00:15:54,920 --> 00:15:59,189
by the layer<font color="#CCCCCC"> method and if something</font>

366
00:15:57,900 --> 00:16:01,110
<font color="#CCCCCC">goes back comes back</font>

367
00:15:59,190 --> 00:16:02,640
it's a UDP layer it's a UDP packet

368
00:16:01,110 --> 00:16:05,550
otherwise we can't just continue<font color="#CCCCCC"> we're</font>

369
00:16:02,640 --> 00:16:09,720
not<font color="#CCCCCC"> interested</font><font color="#E5E5E5"> in it then we convert it</font>

370
00:16:05,550 --> 00:16:11,370
to you the people<font color="#E5E5E5"> get to some checksum</font>

371
00:16:09,720 --> 00:16:13,440
calculations on it because we want to

372
00:16:11,370 --> 00:16:15,990
<font color="#E5E5E5">resend it later</font><font color="#CCCCCC"> on that's necessary</font>

373
00:16:13,440 --> 00:16:19,320
<font color="#CCCCCC">otherwise I will get mail from</font><font color="#E5E5E5"> package</font>

374
00:16:15,990 --> 00:16:21,810
<font color="#E5E5E5">and we can also go further and say we're</font>

375
00:16:19,320 --> 00:16:25,940
now only<font color="#E5E5E5"> interested in packets with</font><font color="#CCCCCC"> port</font>

376
00:16:21,810 --> 00:16:29,910
<font color="#CCCCCC">68</font><font color="#E5E5E5"> since the DHCP</font><font color="#CCCCCC"> server is in India</font><font color="#E5E5E5"> and</font>

377
00:16:25,940 --> 00:16:31,410
yeah<font color="#CCCCCC"> so there is a lot more to go packet</font>

378
00:16:29,910 --> 00:16:33,329
but that's in general<font color="#E5E5E5"> on how you can</font>

379
00:16:31,410 --> 00:16:36,300
introspect to traffic there and we can

380
00:16:33,330 --> 00:16:38,070
use<font color="#E5E5E5"> it in</font><font color="#CCCCCC"> our example to extract the IP</font>

381
00:16:36,300 --> 00:16:40,380
address<font color="#CCCCCC"> a MAC address of the TCP ACK</font>

382
00:16:38,070 --> 00:16:43,080
which is very very<font color="#E5E5E5"> valuable information</font>

383
00:16:40,380 --> 00:16:46,200
we're interested in and so<font color="#CCCCCC"> now the next</font>

384
00:16:43,080 --> 00:16:48,930
part<font color="#E5E5E5"> is that we also need routes</font><font color="#CCCCCC"> now we</font>

385
00:16:46,200 --> 00:16:53,400
have<font color="#CCCCCC"> to happy and now we need</font><font color="#E5E5E5"> to create</font>

386
00:16:48,930 --> 00:16:57,959
<font color="#CCCCCC">a route and to create</font><font color="#E5E5E5"> your out we need</font>

387
00:16:53,400 --> 00:17:00,660
<font color="#E5E5E5">to create a destination IP that's the</font>

388
00:16:57,960 --> 00:17:02,820
PFD VM we need to create<font color="#E5E5E5"> the gateway to</font>

389
00:17:00,660 --> 00:17:06,540
get the address for the via part of

390
00:17:02,820 --> 00:17:08,880
their route and in this case since I

391
00:17:06,540 --> 00:17:10,800
wanted to create the demo in this that

392
00:17:08,880 --> 00:17:13,260
<font color="#E5E5E5">the route in this code snippet</font><font color="#CCCCCC"> I'm also</font>

393
00:17:10,800 --> 00:17:15,180
adding a device<font color="#CCCCCC"> to the interface where I</font>

394
00:17:13,260 --> 00:17:16,349
<font color="#CCCCCC">want an</font><font color="#E5E5E5"> address to the interface where I</font>

395
00:17:15,180 --> 00:17:19,130
want<font color="#CCCCCC"> to create you out</font><font color="#E5E5E5"> otherwise I can't</font>

396
00:17:16,349 --> 00:17:21,119
create<font color="#CCCCCC"> your out so I am</font><font color="#E5E5E5"> giving the</font>

397
00:17:19,130 --> 00:17:24,089
interface where I want to add throughout

398
00:17:21,119 --> 00:17:25,560
the address of the<font color="#E5E5E5"> Gateway</font><font color="#CCCCCC"> and it can</font>

399
00:17:24,089 --> 00:17:27,839
simply be assigned to the interface<font color="#E5E5E5"> but</font>

400
00:17:25,560 --> 00:17:33,149
at address then I'm making sure that<font color="#CCCCCC"> the</font>

401
00:17:27,839 --> 00:17:36,060
<font color="#E5E5E5">McQuillan is in upstate and finally</font>

402
00:17:33,150 --> 00:17:38,430
create<font color="#CCCCCC"> the route I give it the index of</font>

403
00:17:36,060 --> 00:17:39,909
the<font color="#CCCCCC"> mech</font><font color="#E5E5E5"> VLAN interface</font><font color="#CCCCCC"> I give</font><font color="#E5E5E5"> it a</font>

404
00:17:38,430 --> 00:17:42,730
destination<font color="#CCCCCC"> appear give it to this</font>

405
00:17:39,910 --> 00:17:47,470
gateway ID and<font color="#E5E5E5"> I at the route and if we</font>

406
00:17:42,730 --> 00:17:49,500
now run<font color="#CCCCCC"> it we will see that the right</font>

407
00:17:47,470 --> 00:17:55,780
route<font color="#E5E5E5"> was</font><font color="#CCCCCC"> added we are now routing from</font>

408
00:17:49,500 --> 00:17:59,530
the<font color="#CCCCCC"> VM IP over to make villain with</font>

409
00:17:55,780 --> 00:18:02,530
therapy to the host and if we go<font color="#CCCCCC"> back to</font>

410
00:17:59,530 --> 00:18:05,740
<font color="#CCCCCC">our example</font><font color="#E5E5E5"> we're now on</font><font color="#CCCCCC"> safari again</font><font color="#E5E5E5"> we</font>

411
00:18:02,530 --> 00:18:07,240
have that part<font color="#E5E5E5"> also edit now we have</font><font color="#CCCCCC"> now</font>

412
00:18:05,740 --> 00:18:08,800
we're almost done but<font color="#E5E5E5"> we're now missing</font>

413
00:18:07,240 --> 00:18:11,650
is we need to write back<font color="#CCCCCC"> to pack it</font>

414
00:18:08,800 --> 00:18:15,070
after we've<font color="#E5E5E5"> read it and therefore</font><font color="#CCCCCC"> we can</font>

415
00:18:11,650 --> 00:18:17,200
again<font color="#CCCCCC"> use the raw packet package and</font>

416
00:18:15,070 --> 00:18:18,939
just<font color="#CCCCCC"> implement the right packet data and</font>

417
00:18:17,200 --> 00:18:23,020
then we<font color="#E5E5E5"> can directly</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> the package</font>

418
00:18:18,940 --> 00:18:26,340
we've read from<font color="#E5E5E5"> go packet with that</font>

419
00:18:23,020 --> 00:18:29,950
handler to a different interface again

420
00:18:26,340 --> 00:18:32,620
and so we<font color="#CCCCCC"> have the party and that's</font>

421
00:18:29,950 --> 00:18:35,140
pretty much<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> here's a here is an</font>

422
00:18:32,620 --> 00:18:36,850
<font color="#CCCCCC">overview</font><font color="#E5E5E5"> of useful libraries I've been</font>

423
00:18:35,140 --> 00:18:38,650
talking about<font color="#E5E5E5"> now and</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> about</font>

424
00:18:36,850 --> 00:18:40,840
libraries which I didn't have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> time</font>

425
00:18:38,650 --> 00:18:43,480
<font color="#CCCCCC">to talk</font><font color="#E5E5E5"> about mostly the NetBeans</font>

426
00:18:40,840 --> 00:18:45,429
library the<font color="#E5E5E5"> go</font><font color="#CCCCCC"> pack</font><font color="#E5E5E5"> and in</font><font color="#CCCCCC"> brought</font>

427
00:18:43,480 --> 00:18:48,160
packet for<font color="#CCCCCC"> packet inspection therefore</font>

428
00:18:45,430 --> 00:18:49,840
<font color="#E5E5E5">iptables you have from Korres iptables</font>

429
00:18:48,160 --> 00:18:51,520
there's an interesting<font color="#E5E5E5"> difference to the</font>

430
00:18:49,840 --> 00:18:54,189
other packages this one<font color="#CCCCCC"> requires</font><font color="#E5E5E5"> that</font>

431
00:18:51,520 --> 00:18:56,980
<font color="#E5E5E5">Peter was to wound the host so here I</font>

432
00:18:54,190 --> 00:18:58,870
didn't completely fulfill the go of my

433
00:18:56,980 --> 00:19:01,300
talk but it's very<font color="#E5E5E5"> you it's still a very</font>

434
00:18:58,870 --> 00:19:04,239
useful ticket<font color="#E5E5E5"> also if you want to send</font>

435
00:19:01,300 --> 00:19:07,480
and receive<font color="#CCCCCC"> DHCP</font><font color="#E5E5E5"> X or whatever you can</font>

436
00:19:04,240 --> 00:19:11,520
use<font color="#E5E5E5"> the HTTP library mentioned here yeah</font>

437
00:19:07,480 --> 00:19:11,520
that's pretty<font color="#E5E5E5"> much</font><font color="#CCCCCC"> it so questions</font>

438
00:19:17,860 --> 00:19:24,370
<font color="#E5E5E5">what the testing strategy in that case</font>

439
00:19:20,580 --> 00:19:25,870
but I<font color="#E5E5E5"> tell the question was what my vote</font>

440
00:19:24,370 --> 00:19:29,699
would be<font color="#E5E5E5"> my testing strategy for such</font>

441
00:19:25,870 --> 00:19:32,439
scenarios<font color="#CCCCCC"> I'm basically just creating</font>

442
00:19:29,700 --> 00:19:33,700
isolated<font color="#E5E5E5"> pictures attaching</font><font color="#CCCCCC"> Maryland's</font>

443
00:19:32,440 --> 00:19:35,440
<font color="#CCCCCC">Magritte apps and all that and</font><font color="#E5E5E5"> just</font>

444
00:19:33,700 --> 00:19:37,900
<font color="#E5E5E5">sending the packets and seeing if it</font>

445
00:19:35,440 --> 00:19:40,630
comes<font color="#CCCCCC"> I mean it's unique privileges so</font>

446
00:19:37,900 --> 00:19:42,040
it's a little<font color="#E5E5E5"> bit harder to test then if</font>

447
00:19:40,630 --> 00:19:43,780
you're running unprivileged code but

448
00:19:42,040 --> 00:19:45,840
works<font color="#CCCCCC"> pretty tough</font><font color="#E5E5E5"> does that answer the</font>

449
00:19:43,780 --> 00:19:45,840
question

450
00:19:47,850 --> 00:19:51,939
<font color="#E5E5E5">yeah sure just</font><font color="#CCCCCC"> writing test scripts</font>

451
00:19:50,590 --> 00:19:57,428
where they're<font color="#CCCCCC"> creating the interfaces</font>

452
00:19:51,940 --> 00:19:59,320
and yeah<font color="#E5E5E5"> so and for instance the net</font>

453
00:19:57,429 --> 00:20:01,390
<font color="#CCCCCC">link library here has some pretty nice</font>

454
00:19:59,320 --> 00:20:03,520
example<font color="#CCCCCC"> of</font><font color="#E5E5E5"> how you can write the test</font>

455
00:20:01,390 --> 00:20:05,590
because they have a lot of tests<font color="#CCCCCC"> so it's</font>

456
00:20:03,520 --> 00:20:08,320
<font color="#E5E5E5">very nice place to start looking when</font>

457
00:20:05,590 --> 00:20:10,330
you want to<font color="#E5E5E5"> automate it it and I mean</font>

458
00:20:08,320 --> 00:20:12,070
we're using parts of that what I've

459
00:20:10,330 --> 00:20:14,710
presented here<font color="#CCCCCC"> for instance in</font><font color="#E5E5E5"> Qbert and</font>

460
00:20:12,070 --> 00:20:19,178
in Qbert we have also end-to-end tests

461
00:20:14,710 --> 00:20:20,710
from from the user<font color="#E5E5E5"> we saw your provision</font>

462
00:20:19,179 --> 00:20:22,960
of<font color="#CCCCCC"> um</font><font color="#E5E5E5"> kubernetes cluster installing our</font>

463
00:20:20,710 --> 00:20:24,100
<font color="#E5E5E5">add-on and then we're creating all the</font>

464
00:20:22,960 --> 00:20:25,780
objects<font color="#E5E5E5"> and then we're checking the</font>

465
00:20:24,100 --> 00:20:27,760
<font color="#CCCCCC">hosts if that really happens</font><font color="#E5E5E5"> so I mean</font>

466
00:20:25,780 --> 00:20:30,070
you<font color="#E5E5E5"> have to test it on all layers</font>

467
00:20:27,760 --> 00:20:32,470
<font color="#E5E5E5">starting from type layer single nodes</font>

468
00:20:30,070 --> 00:20:34,770
with unit tests<font color="#CCCCCC"> basically up to the</font>

469
00:20:32,470 --> 00:20:34,770
<font color="#CCCCCC">August</font>

470
00:20:41,490 --> 00:20:46,220
<font color="#E5E5E5">okay looks like that's it thank you</font>

471
00:20:48,070 --> 00:20:50,129
<font color="#E5E5E5">you</font>

