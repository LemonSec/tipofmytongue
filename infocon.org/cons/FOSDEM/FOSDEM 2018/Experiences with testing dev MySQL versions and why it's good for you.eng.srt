1
00:00:04,610 --> 00:00:14,990
<font color="#E5E5E5">okay fantastic so we'll talk about MySQL</font>

2
00:00:10,280 --> 00:00:16,970
<font color="#CCCCCC">eight today and because that is a</font>

3
00:00:14,990 --> 00:00:21,320
<font color="#E5E5E5">shorter version</font><font color="#CCCCCC"> of my usual presentation</font>

4
00:00:16,970 --> 00:00:26,570
video just<font color="#E5E5E5"> scrap all the stuff I</font><font color="#CCCCCC"> feature</font>

5
00:00:21,320 --> 00:00:30,410
for developers and only focus on<font color="#E5E5E5"> ops</font><font color="#CCCCCC"> now</font>

6
00:00:26,570 --> 00:00:33,980
<font color="#CCCCCC">my skew l8 has been made making a great</font>

7
00:00:30,410 --> 00:00:37,370
strides and getting close to have<font color="#CCCCCC"> GA</font><font color="#E5E5E5"> and</font>

8
00:00:33,980 --> 00:00:40,489
it's now released candidates but it's

9
00:00:37,370 --> 00:00:42,229
still not GA and things are still<font color="#CCCCCC"> being</font>

10
00:00:40,489 --> 00:00:45,080
changed<font color="#E5E5E5"> right so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind of based</font>

11
00:00:42,229 --> 00:00:47,420
or no anyway<font color="#E5E5E5"> just know what things are</font>

12
00:00:45,080 --> 00:00:49,489
<font color="#CCCCCC">subject</font><font color="#E5E5E5"> to change</font><font color="#CCCCCC"> and so you know to</font>

13
00:00:47,420 --> 00:00:52,489
<font color="#CCCCCC">give a crate and a crate is</font><font color="#E5E5E5"> you</font>

14
00:00:49,489 --> 00:00:55,540
I borrowed a lot of<font color="#E5E5E5"> very nice pictures</font>

15
00:00:52,489 --> 00:01:00,309
from Oracle team blogs presentations

16
00:00:55,540 --> 00:01:05,239
<font color="#E5E5E5">documentation and so on okay so what are</font>

17
00:01:00,309 --> 00:01:08,298
nice things in my school<font color="#CCCCCC"> 8:4 oops</font><font color="#E5E5E5"> people</font>

18
00:01:05,239 --> 00:01:11,720
well there are I<font color="#CCCCCC"> think is a lot</font><font color="#E5E5E5"> of great</font>

19
00:01:08,299 --> 00:01:14,600
stuff which are in my school aid in the

20
00:01:11,720 --> 00:01:17,420
areas of<font color="#E5E5E5"> stability high</font><font color="#CCCCCC"> viability</font>

21
00:01:14,600 --> 00:01:20,929
performance<font color="#CCCCCC"> security availability and</font>

22
00:01:17,420 --> 00:01:23,510
<font color="#CCCCCC">and</font><font color="#E5E5E5"> manageability the first thing which</font>

23
00:01:20,930 --> 00:01:26,450
excites me<font color="#E5E5E5"> a lot is a native data</font>

24
00:01:23,510 --> 00:01:30,740
dictionary right<font color="#E5E5E5"> and this is something</font>

25
00:01:26,450 --> 00:01:33,620
is very internal but also very important

26
00:01:30,740 --> 00:01:37,070
<font color="#E5E5E5">and I</font><font color="#CCCCCC"> would say is about 10 years</font>

27
00:01:33,620 --> 00:01:38,930
overdue at this point<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right what is</font>

28
00:01:37,070 --> 00:01:41,300
all<font color="#CCCCCC"> about right and one folks in</font>

29
00:01:38,930 --> 00:01:43,970
<font color="#E5E5E5">operations</font><font color="#CCCCCC"> would care</font><font color="#E5E5E5"> now if you look at</font>

30
00:01:41,300 --> 00:01:48,280
the my school before<font color="#E5E5E5"> my school</font><font color="#CCCCCC"> 8</font><font color="#E5E5E5"> it</font>

31
00:01:43,970 --> 00:01:52,900
<font color="#CCCCCC">would</font><font color="#E5E5E5"> store table</font><font color="#CCCCCC"> information in what so</font>

32
00:01:48,280 --> 00:01:56,030
<font color="#E5E5E5">so called</font><font color="#CCCCCC"> frm files right</font><font color="#E5E5E5"> one file per</font>

33
00:01:52,900 --> 00:01:57,710
table and then if you use in a<font color="#CCCCCC"> GB table</font>

34
00:01:56,030 --> 00:02:00,590
it would also store a copy of

35
00:01:57,710 --> 00:02:02,809
information in a systems system

36
00:02:00,590 --> 00:02:06,409
tablespace<font color="#CCCCCC"> right now probably in</font><font color="#E5E5E5"> a live</font>

37
00:02:02,810 --> 00:02:09,530
site<font color="#CCCCCC"> setup is what this data</font><font color="#E5E5E5"> can be</font>

38
00:02:06,409 --> 00:02:11,840
getting<font color="#E5E5E5"> out of</font><font color="#CCCCCC"> sync for example if you</font>

39
00:02:09,530 --> 00:02:14,270
would have<font color="#E5E5E5"> my school to crash</font><font color="#CCCCCC"> just one</font>

40
00:02:11,840 --> 00:02:16,010
<font color="#CCCCCC">time when</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> were doing I to table</font><font color="#E5E5E5"> you</font>

41
00:02:14,270 --> 00:02:17,750
could have this data to be out of sync

42
00:02:16,010 --> 00:02:20,709
and<font color="#CCCCCC"> you have a lot of</font>

43
00:02:17,750 --> 00:02:24,590
<font color="#E5E5E5">now you know fun money recovering that</font>

44
00:02:20,710 --> 00:02:29,270
<font color="#CCCCCC">mean it also would not</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> quite atomic</font>

45
00:02:24,590 --> 00:02:30,980
right<font color="#E5E5E5"> if you do the single drop table or</font>

46
00:02:29,270 --> 00:02:33,800
a name table<font color="#E5E5E5"> right that's would ever</font>

47
00:02:30,980 --> 00:02:36,019
really success<font color="#E5E5E5"> either fail unless you</font>

48
00:02:33,800 --> 00:02:38,300
<font color="#E5E5E5">crash but if you have some sort of more</font>

49
00:02:36,020 --> 00:02:40,430
complicated scenarios for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> if you</font>

50
00:02:38,300 --> 00:02:43,280
have you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> dropping</font><font color="#E5E5E5"> several tables</font>

51
00:02:40,430 --> 00:02:45,200
one after never before<font color="#E5E5E5"> MySQL eight that</font>

52
00:02:43,280 --> 00:02:47,510
would not be atomic statement you could

53
00:02:45,200 --> 00:02:50,089
have two of them<font color="#E5E5E5"> drop</font><font color="#CCCCCC"> successfully then</font>

54
00:02:47,510 --> 00:02:53,149
one<font color="#E5E5E5"> of em forward to be non-existent you</font>

55
00:02:50,090 --> 00:02:57,500
get an error right boom half done

56
00:02:53,150 --> 00:02:59,300
statement that is<font color="#E5E5E5"> not really what you</font>

57
00:02:57,500 --> 00:03:02,180
would would expect from an other

58
00:02:59,300 --> 00:03:04,430
statements in<font color="#CCCCCC"> MySQL</font><font color="#E5E5E5"> eight fixes that we</font>

59
00:03:02,180 --> 00:03:07,070
also have through that much faster

60
00:03:04,430 --> 00:03:09,709
<font color="#E5E5E5">information schema because now it can</font>

61
00:03:07,070 --> 00:03:12,230
read from those real data dictionary

62
00:03:09,709 --> 00:03:15,260
instead of having to scan a lot<font color="#CCCCCC"> of frm</font>

63
00:03:12,230 --> 00:03:18,140
<font color="#E5E5E5">files</font><font color="#CCCCCC"> and also</font><font color="#E5E5E5"> no more my some system</font>

64
00:03:15,260 --> 00:03:23,780
table<font color="#CCCCCC"> requires and that is another</font>

65
00:03:18,140 --> 00:03:27,380
<font color="#CCCCCC">reason why</font><font color="#E5E5E5"> and how you can could</font>

66
00:03:23,780 --> 00:03:29,330
potentially have<font color="#E5E5E5"> a non transaction</font>

67
00:03:27,380 --> 00:03:31,250
behavior in the future<font color="#CCCCCC"> right</font><font color="#E5E5E5"> you would</font>

68
00:03:29,330 --> 00:03:33,470
<font color="#E5E5E5">be creating</font><font color="#CCCCCC"> stored procedure which goes</font>

69
00:03:31,250 --> 00:03:36,260
in my some tables<font color="#E5E5E5"> boom you crash it</font><font color="#CCCCCC"> at</font>

70
00:03:33,470 --> 00:03:37,850
<font color="#E5E5E5">exactly that time my some tables</font>

71
00:03:36,260 --> 00:03:40,519
corrupted<font color="#E5E5E5"> Torah hell you're going to get</font>

72
00:03:37,850 --> 00:03:45,010
there instead of<font color="#CCCCCC"> pro store</font><font color="#E5E5E5"> procedure</font>

73
00:03:40,519 --> 00:03:48,110
well<font color="#E5E5E5"> no one knows information schema</font>

74
00:03:45,010 --> 00:03:55,209
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a great great example here and</font>

75
00:03:48,110 --> 00:03:58,489
we can see the this query<font color="#E5E5E5"> we</font><font color="#CCCCCC"> join on</font>

76
00:03:55,209 --> 00:04:00,980
information schema<font color="#E5E5E5"> which used to be</font>

77
00:03:58,489 --> 00:04:02,930
pretty<font color="#E5E5E5"> much unusable right even with</font>

78
00:04:00,980 --> 00:04:06,530
relatively<font color="#E5E5E5"> modest</font><font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> tables it</font>

79
00:04:02,930 --> 00:04:09,200
could take a you know many minutes<font color="#E5E5E5"> and</font>

80
00:04:06,530 --> 00:04:11,750
if you would<font color="#E5E5E5"> go to a million table in</font>

81
00:04:09,200 --> 00:04:14,660
this<font color="#CCCCCC"> case it wouldn't not complete even</font>

82
00:04:11,750 --> 00:04:17,810
in<font color="#CCCCCC"> forty hours right now</font><font color="#E5E5E5"> MySQL eight is</font>

83
00:04:14,660 --> 00:04:19,760
able to handle<font color="#CCCCCC"> that quite</font><font color="#E5E5E5"> quite a fact</font>

84
00:04:17,810 --> 00:04:21,530
you officially and even if you're a

85
00:04:19,760 --> 00:04:24,979
million table well it would take a

86
00:04:21,529 --> 00:04:29,119
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of time but you know seventy</font>

87
00:04:24,979 --> 00:04:30,159
<font color="#CCCCCC">eight seconds that still is still usable</font>

88
00:04:29,120 --> 00:04:33,999
right

89
00:04:30,159 --> 00:04:37,058
with such a large<font color="#E5E5E5"> amount of tables</font><font color="#CCCCCC"> utf8</font>

90
00:04:33,999 --> 00:04:39,459
in every area my school<font color="#CCCCCC"> ate</font><font color="#E5E5E5"> go to a lot</font>

91
00:04:37,059 --> 00:04:41,229
<font color="#E5E5E5">of focus and why that</font><font color="#CCCCCC"> is important</font>

92
00:04:39,459 --> 00:04:44,919
<font color="#E5E5E5">especially right now</font><font color="#CCCCCC"> right because even</font>

93
00:04:41,229 --> 00:04:47,709
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> are using some of</font><font color="#E5E5E5"> Western</font>

94
00:04:44,919 --> 00:04:51,698
languages and generally do not<font color="#E5E5E5"> or did</font>

95
00:04:47,709 --> 00:04:54,759
<font color="#CCCCCC">not need utf-8 beforehand then now we</font>

96
00:04:51,699 --> 00:05:00,209
<font color="#E5E5E5">have in all</font><font color="#CCCCCC"> the applications we have</font>

97
00:04:54,759 --> 00:05:04,749
what<font color="#CCCCCC"> emerges right and emojis require</font>

98
00:05:00,209 --> 00:05:06,909
<font color="#CCCCCC">really utf-8</font><font color="#E5E5E5"> so if you are having kind</font>

99
00:05:04,749 --> 00:05:11,499
<font color="#CCCCCC">of you know</font><font color="#E5E5E5"> millennial friendly</font>

100
00:05:06,909 --> 00:05:14,849
applications<font color="#E5E5E5"> then you need to use utf-8</font>

101
00:05:11,499 --> 00:05:18,309
wherever you actually need support for

102
00:05:14,849 --> 00:05:21,998
the you<font color="#E5E5E5"> know languages which don't feel</font>

103
00:05:18,309 --> 00:05:24,759
in enlightened one and in my school

104
00:05:21,999 --> 00:05:28,479
<font color="#E5E5E5">eight utf-8 and before becomes default</font>

105
00:05:24,759 --> 00:05:31,929
<font color="#E5E5E5">and also a lot of performance work has</font>

106
00:05:28,479 --> 00:05:34,959
been has<font color="#CCCCCC"> been done to make my school</font>

107
00:05:31,929 --> 00:05:37,029
much much faster when<font color="#E5E5E5"> it comes to utf-8</font>

108
00:05:34,959 --> 00:05:39,099
<font color="#E5E5E5">I</font><font color="#CCCCCC"> would also</font><font color="#E5E5E5"> be talking about the keys</font>

109
00:05:37,029 --> 00:05:42,249
in MySQL<font color="#CCCCCC"> eight</font><font color="#E5E5E5"> actually becomes slower</font>

110
00:05:39,099 --> 00:05:47,188
but that is typically then you use the

111
00:05:42,249 --> 00:05:50,740
<font color="#E5E5E5">Latin</font><font color="#CCCCCC"> 18</font><font color="#E5E5E5"> character set now a lot of work</font>

112
00:05:47,189 --> 00:05:53,259
has been<font color="#CCCCCC"> done a lot about security as</font>

113
00:05:50,740 --> 00:05:56,169
well in high school<font color="#CCCCCC"> 8 there is support</font>

114
00:05:53,259 --> 00:05:58,929
<font color="#CCCCCC">for</font><font color="#E5E5E5"> roles now we have many different</font>

115
00:05:56,169 --> 00:06:01,990
privileges<font color="#E5E5E5"> instead of super</font><font color="#CCCCCC"> privilege</font>

116
00:05:58,929 --> 00:06:05,859
right where you<font color="#E5E5E5"> can for</font><font color="#CCCCCC"> example give</font>

117
00:06:01,990 --> 00:06:08,229
somebody access to to restart<font color="#CCCCCC"> with</font>

118
00:06:05,860 --> 00:06:10,899
<font color="#CCCCCC">instance but not necessary to do some</font>

119
00:06:08,229 --> 00:06:13,959
<font color="#CCCCCC">maintenance</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> maintenance</font><font color="#E5E5E5"> stuff is</font>

120
00:06:10,899 --> 00:06:16,899
<font color="#E5E5E5">the password history so you can say hey</font>

121
00:06:13,959 --> 00:06:20,189
don't we don't allow<font color="#E5E5E5"> you to set one of</font>

122
00:06:16,899 --> 00:06:24,749
your previous passwords<font color="#E5E5E5"> authentication</font>

123
00:06:20,189 --> 00:06:28,179
<font color="#E5E5E5">in this cases became much more secure</font>

124
00:06:24,749 --> 00:06:31,509
<font color="#CCCCCC">which with sha-2 authentication which</font>

125
00:06:28,179 --> 00:06:36,638
actually use many many rounds<font color="#E5E5E5"> of ACH or</font>

126
00:06:31,509 --> 00:06:39,189
<font color="#E5E5E5">to write for password hashes</font><font color="#CCCCCC"> to make the</font>

127
00:06:36,639 --> 00:06:42,519
<font color="#CCCCCC">brute-force attack much more complicated</font>

128
00:06:39,189 --> 00:06:43,660
<font color="#CCCCCC">but</font><font color="#E5E5E5"> it's also</font><font color="#CCCCCC"> K has a very specially</font>

129
00:06:42,519 --> 00:06:51,310
optimized<font color="#E5E5E5"> cache</font>

130
00:06:43,660 --> 00:06:55,690
so it can authenticate the much<font color="#E5E5E5"> very</font>

131
00:06:51,310 --> 00:06:58,050
quickly at<font color="#CCCCCC"> the same time OpenSSL is now</font>

132
00:06:55,690 --> 00:07:01,000
<font color="#E5E5E5">used</font><font color="#CCCCCC"> both communion and</font><font color="#E5E5E5"> Enterprise</font>

133
00:06:58,050 --> 00:07:03,430
<font color="#E5E5E5">Edition right server is nervous kind of</font>

134
00:07:01,000 --> 00:07:06,720
you know<font color="#E5E5E5"> confusing differences in</font>

135
00:07:03,430 --> 00:07:10,630
behavior and available options<font color="#E5E5E5"> and</font>

136
00:07:06,720 --> 00:07:13,750
<font color="#E5E5E5">another thing I like is what now skip</font>

137
00:07:10,630 --> 00:07:16,270
<font color="#E5E5E5">runs block remote connections in the</font>

138
00:07:13,750 --> 00:07:19,360
past we see many many users<font color="#E5E5E5"> would get</font>

139
00:07:16,270 --> 00:07:21,460
into security incident because they need

140
00:07:19,360 --> 00:07:23,290
<font color="#E5E5E5">to reset</font><font color="#CCCCCC"> the password</font><font color="#E5E5E5"> we start my</font><font color="#CCCCCC"> school</font>

141
00:07:21,460 --> 00:07:26,710
skip<font color="#CCCCCC"> grunts and they fed forget about</font>

142
00:07:23,290 --> 00:07:29,440
that and what they get my school<font color="#E5E5E5"> opened</font>

143
00:07:26,710 --> 00:07:32,039
to<font color="#E5E5E5"> all the internet and now accepting</font>

144
00:07:29,440 --> 00:07:34,360
connections is no password<font color="#E5E5E5"> right now</font>

145
00:07:32,040 --> 00:07:36,210
<font color="#E5E5E5">that's not going to</font><font color="#CCCCCC"> work if you're</font>

146
00:07:34,360 --> 00:07:39,310
<font color="#E5E5E5">resetting the password it</font><font color="#CCCCCC"> will be only</font>

147
00:07:36,210 --> 00:07:41,950
MySQL accessible locally<font color="#E5E5E5"> for until you</font>

148
00:07:39,310 --> 00:07:43,830
<font color="#E5E5E5">recover the password and</font><font color="#CCCCCC"> I just started</font>

149
00:07:41,950 --> 00:07:48,310
back<font color="#E5E5E5"> in a normal way</font>

150
00:07:43,830 --> 00:07:50,590
encryption is also improved in my<font color="#E5E5E5"> school</font>

151
00:07:48,310 --> 00:07:54,070
<font color="#E5E5E5">five seven there is a great start in the</font>

152
00:07:50,590 --> 00:07:55,659
<font color="#E5E5E5">encryption which does encrypt energy</font>

153
00:07:54,070 --> 00:08:00,669
<font color="#CCCCCC">with tablespaces</font><font color="#E5E5E5"> but that would not</font>

154
00:07:55,660 --> 00:08:03,100
increase in<font color="#CCCCCC"> crypt things as a your redo</font>

155
00:08:00,669 --> 00:08:07,120
logs<font color="#E5E5E5"> and undo log stored in the system</font>

156
00:08:03,100 --> 00:08:11,410
tablespace<font color="#CCCCCC"> in MySQL</font><font color="#E5E5E5"> eight fixes that so</font>

157
00:08:07,120 --> 00:08:15,419
all the<font color="#CCCCCC"> information</font><font color="#E5E5E5"> the store all in the</font>

158
00:08:11,410 --> 00:08:18,550
database is<font color="#CCCCCC"> being</font><font color="#E5E5E5"> encrypted</font><font color="#CCCCCC"> innothing</font>

159
00:08:15,419 --> 00:08:22,840
<font color="#E5E5E5">persistent after increment and I think I</font>

160
00:08:18,550 --> 00:08:25,540
<font color="#E5E5E5">would say about that</font><font color="#CCCCCC"> ten years overdue</font>

161
00:08:22,840 --> 00:08:27,909
<font color="#E5E5E5">right so now in this case</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> would not</font>

162
00:08:25,540 --> 00:08:31,750
have<font color="#CCCCCC"> a case</font><font color="#E5E5E5"> where you're after increment</font>

163
00:08:27,910 --> 00:08:32,440
value can be<font color="#E5E5E5"> reset you know to something</font>

164
00:08:31,750 --> 00:08:35,860
<font color="#CCCCCC">else</font>

165
00:08:32,440 --> 00:08:37,810
<font color="#CCCCCC">the in some in some scenarios right and</font>

166
00:08:35,860 --> 00:08:40,240
you would<font color="#CCCCCC"> not be</font><font color="#E5E5E5"> have a chance to get</font>

167
00:08:37,809 --> 00:08:44,709
<font color="#E5E5E5">that you know duplicate</font><font color="#CCCCCC"> 80s IDs and</font>

168
00:08:40,240 --> 00:08:47,350
stuff<font color="#E5E5E5"> like that after manage and do</font>

169
00:08:44,710 --> 00:08:51,480
tablespace that is another area<font color="#E5E5E5"> where</font><font color="#CCCCCC"> I</font>

170
00:08:47,350 --> 00:08:54,370
think<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of folks involved</font><font color="#E5E5E5"> in MySQL</font>

171
00:08:51,480 --> 00:08:55,079
operations had a lot of<font color="#E5E5E5"> problem area</font>

172
00:08:54,370 --> 00:08:59,069
through

173
00:08:55,079 --> 00:09:01,769
right what would happen<font color="#E5E5E5"> before is if you</font>

174
00:08:59,069 --> 00:09:03,509
have some expensive<font color="#E5E5E5"> update queries are</font>

175
00:09:01,769 --> 00:09:06,209
just a select query which was<font color="#CCCCCC"> running</font>

176
00:09:03,509 --> 00:09:10,290
<font color="#CCCCCC">for</font><font color="#E5E5E5"> a long time and our prayer is</font>

177
00:09:06,209 --> 00:09:13,319
<font color="#E5E5E5">created a lot of us undo space in energy</font>

178
00:09:10,290 --> 00:09:16,469
<font color="#CCCCCC">B you could</font><font color="#E5E5E5"> have that space being sort</font>

179
00:09:13,319 --> 00:09:19,170
<font color="#E5E5E5">of let's say stuck stuck forever</font><font color="#CCCCCC"> in the</font>

180
00:09:16,470 --> 00:09:21,449
<font color="#E5E5E5">system tablespace</font><font color="#CCCCCC"> and the only way kind</font>

181
00:09:19,170 --> 00:09:24,259
of<font color="#E5E5E5"> to get it</font><font color="#CCCCCC"> back would be</font><font color="#E5E5E5"> to to</font>

182
00:09:21,449 --> 00:09:28,829
recreate your database<font color="#E5E5E5"> in my square</font>

183
00:09:24,259 --> 00:09:31,709
<font color="#CCCCCC">eight</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have undo tablespace those are</font>

184
00:09:28,829 --> 00:09:34,829
stored in a separate table space by

185
00:09:31,709 --> 00:09:40,500
default<font color="#E5E5E5"> and then it's also automatically</font>

186
00:09:34,829 --> 00:09:43,829
purged<font color="#CCCCCC"> so if you need it for some space</font>

187
00:09:40,500 --> 00:09:46,050
for a period<font color="#E5E5E5"> of time you use</font><font color="#CCCCCC"> it then all</font>

188
00:09:43,829 --> 00:09:50,008
those<font color="#E5E5E5"> workload completed it will</font>

189
00:09:46,050 --> 00:09:54,180
automatically<font color="#E5E5E5"> shifting back self tune</font>

190
00:09:50,009 --> 00:09:57,000
Yin for for energy<font color="#CCCCCC"> B also I think is</font>

191
00:09:54,180 --> 00:10:00,089
very important especially<font color="#E5E5E5"> in in the</font>

192
00:09:57,000 --> 00:10:02,639
cloud<font color="#E5E5E5"> now if you enable</font><font color="#CCCCCC"> this option</font><font color="#E5E5E5"> in a</font>

193
00:10:00,089 --> 00:10:06,959
<font color="#CCCCCC">DB dedicated server</font><font color="#E5E5E5"> then you may be able</font>

194
00:10:02,639 --> 00:10:09,029
<font color="#E5E5E5">to set a MySQL and it will automatically</font>

195
00:10:06,959 --> 00:10:11,660
<font color="#E5E5E5">scale if you instant</font><font color="#CCCCCC"> size in the cloud</font>

196
00:10:09,029 --> 00:10:15,529
for example<font color="#CCCCCC"> by second at least three</font>

197
00:10:11,660 --> 00:10:17,850
most important variables appropriately

198
00:10:15,529 --> 00:10:21,449
<font color="#CCCCCC">it is not complete and I think there</font>

199
00:10:17,850 --> 00:10:24,050
could be a lot more<font color="#CCCCCC"> stuff than with</font>

200
00:10:21,449 --> 00:10:29,399
after<font color="#CCCCCC"> Matic Union</font><font color="#E5E5E5"> that has a great start</font>

201
00:10:24,050 --> 00:10:32,670
<font color="#E5E5E5">now partial update of JSON</font><font color="#CCCCCC"> that is also</font>

202
00:10:29,399 --> 00:10:36,029
<font color="#E5E5E5">another very important performance</font><font color="#CCCCCC"> thing</font>

203
00:10:32,670 --> 00:10:39,569
if you<font color="#CCCCCC"> are storing dogs especially large</font>

204
00:10:36,029 --> 00:10:42,689
documents in the<font color="#E5E5E5"> MySQL actually even in</font>

205
00:10:39,569 --> 00:10:44,550
something like MongoDB<font color="#CCCCCC"> right because if</font>

206
00:10:42,689 --> 00:10:46,259
you are<font color="#CCCCCC"> just updating one field maybe</font>

207
00:10:44,550 --> 00:10:48,240
<font color="#E5E5E5">there is a counter maybe that's little</font>

208
00:10:46,259 --> 00:10:50,459
sometimes<font color="#E5E5E5"> time you need to update it you</font>

209
00:10:48,240 --> 00:10:52,680
<font color="#E5E5E5">don't want a whole document to</font><font color="#CCCCCC"> be kind</font>

210
00:10:50,459 --> 00:10:54,000
of completely<font color="#CCCCCC"> rewritten</font><font color="#E5E5E5"> in the database</font>

211
00:10:52,680 --> 00:10:56,910
<font color="#CCCCCC">that is very expensive</font>

212
00:10:54,000 --> 00:10:59,370
<font color="#E5E5E5">MySQL eight can now just update that</font>

213
00:10:56,910 --> 00:11:01,980
<font color="#E5E5E5">field inside</font><font color="#CCCCCC"> the document without</font>

214
00:10:59,370 --> 00:11:04,500
fetching<font color="#CCCCCC"> that in store attack just</font><font color="#E5E5E5"> you</font>

215
00:11:01,980 --> 00:11:06,720
know we have a very<font color="#CCCCCC"> small point</font><font color="#E5E5E5"> update</font>

216
00:11:04,500 --> 00:11:07,400
and also<font color="#CCCCCC"> it can handle</font><font color="#E5E5E5"> that</font>

217
00:11:06,720 --> 00:11:10,310
if

218
00:11:07,400 --> 00:11:13,640
efficiently<font color="#E5E5E5"> through replication</font><font color="#CCCCCC"> where</font>

219
00:11:10,310 --> 00:11:17,420
you would also<font color="#CCCCCC"> only log with change</font><font color="#E5E5E5"> in a</font>

220
00:11:13,640 --> 00:11:21,910
row based replication for<font color="#CCCCCC"> JSON</font><font color="#E5E5E5"> field not</font>

221
00:11:17,420 --> 00:11:26,150
for<font color="#CCCCCC"> whole</font><font color="#E5E5E5"> we grow if you</font><font color="#CCCCCC"> choose so</font>

222
00:11:21,910 --> 00:11:31,010
invisible<font color="#E5E5E5"> indexes</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this image that's</font>

223
00:11:26,150 --> 00:11:35,780
another feature<font color="#E5E5E5"> I you know</font><font color="#CCCCCC"> held</font><font color="#E5E5E5"> many in</font>

224
00:11:31,010 --> 00:11:37,910
many<font color="#E5E5E5"> years ago</font><font color="#CCCCCC"> and the prolific indexes</font>

225
00:11:35,780 --> 00:11:40,610
<font color="#E5E5E5">is they're easy to add that they're hard</font>

226
00:11:37,910 --> 00:11:43,219
to<font color="#E5E5E5"> drop because it's hard to be quite</font>

227
00:11:40,610 --> 00:11:44,990
sure what that<font color="#E5E5E5"> index is</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> not</font>

228
00:11:43,220 --> 00:11:47,750
needed by<font color="#E5E5E5"> your application</font><font color="#CCCCCC"> and if you</font>

229
00:11:44,990 --> 00:11:50,090
draw<font color="#E5E5E5"> for index which you turned out you</font>

230
00:11:47,750 --> 00:11:52,610
<font color="#E5E5E5">actually need then you often</font><font color="#CCCCCC"> would have</font>

231
00:11:50,090 --> 00:11:55,160
<font color="#E5E5E5">queries run so</font><font color="#CCCCCC"> slow it will cause you</font>

232
00:11:52,610 --> 00:11:57,530
<font color="#E5E5E5">downtime and then it may take you many</font>

233
00:11:55,160 --> 00:12:00,050
<font color="#CCCCCC">hours to go ahead and rebuild that index</font>

234
00:11:57,530 --> 00:12:01,790
back<font color="#E5E5E5"> because that's that's expensive</font>

235
00:12:00,050 --> 00:12:04,640
<font color="#CCCCCC">right</font>

236
00:12:01,790 --> 00:12:07,339
now what now you can do if MySQL is

237
00:12:04,640 --> 00:12:09,199
instead make it index invisible so it

238
00:12:07,340 --> 00:12:12,740
will be still maintained<font color="#E5E5E5"> but not used by</font>

239
00:12:09,200 --> 00:12:14,450
<font color="#E5E5E5">the optimizer and if you support what</font>

240
00:12:12,740 --> 00:12:16,490
there are<font color="#CCCCCC"> some</font><font color="#E5E5E5"> queries you still have</font>

241
00:12:14,450 --> 00:12:21,320
been which<font color="#E5E5E5"> needed you</font><font color="#CCCCCC"> can make it</font>

242
00:12:16,490 --> 00:12:22,820
visible back<font color="#CCCCCC"> instantly right and if it's</font>

243
00:12:21,320 --> 00:12:25,700
actually<font color="#CCCCCC"> not needed you can drop within</font>

244
00:12:22,820 --> 00:12:27,380
<font color="#CCCCCC">a week</font><font color="#E5E5E5"> or a month or whatever you think</font>

245
00:12:25,700 --> 00:12:30,380
<font color="#CCCCCC">is appropriate</font>

246
00:12:27,380 --> 00:12:33,790
<font color="#E5E5E5">simply table storage engine that is</font>

247
00:12:30,380 --> 00:12:36,830
<font color="#E5E5E5">actually one of the</font><font color="#CCCCCC"> things how utf-8 was</font>

248
00:12:33,790 --> 00:12:39,110
optimized<font color="#CCCCCC"> it's much more efficient</font>

249
00:12:36,830 --> 00:12:41,860
storage<font color="#E5E5E5"> engine for internal temporary</font>

250
00:12:39,110 --> 00:12:46,730
tables which are used<font color="#E5E5E5"> for many</font>

251
00:12:41,860 --> 00:12:50,480
complicated<font color="#CCCCCC"> group by</font><font color="#E5E5E5"> group by queries</font>

252
00:12:46,730 --> 00:12:52,550
and you know what it provides is much

253
00:12:50,480 --> 00:12:55,580
more efficient storage<font color="#E5E5E5"> for</font><font color="#CCCCCC"> as temporary</font>

254
00:12:52,550 --> 00:12:58,219
data<font color="#E5E5E5"> especially if you have var car and</font>

255
00:12:55,580 --> 00:13:00,730
var binary columns now right now it

256
00:12:58,220 --> 00:13:04,250
doesn't deal<font color="#E5E5E5"> with global text columns</font>

257
00:13:00,730 --> 00:13:08,240
<font color="#CCCCCC">though still would require energy</font><font color="#E5E5E5"> be a</font>

258
00:13:04,250 --> 00:13:11,150
temporary table<font color="#CCCCCC"> but those are to be</font>

259
00:13:08,240 --> 00:13:15,430
<font color="#E5E5E5">fixed as I understand</font>

260
00:13:11,150 --> 00:13:21,079
backup locks<font color="#E5E5E5"> that's another neat feature</font>

261
00:13:15,430 --> 00:13:25,359
<font color="#E5E5E5">which allow us</font><font color="#CCCCCC"> to prevent</font>

262
00:13:21,080 --> 00:13:29,089
<font color="#CCCCCC">in consistent backups</font><font color="#E5E5E5"> result sometimes</font>

263
00:13:25,360 --> 00:13:31,180
<font color="#E5E5E5">right so now that you can set this</font>

264
00:13:29,089 --> 00:13:35,540
special<font color="#CCCCCC"> aqua</font><font color="#E5E5E5"> backup which would ensure</font>

265
00:13:31,180 --> 00:13:38,199
<font color="#CCCCCC">the backup can be taken successfully</font><font color="#E5E5E5"> and</font>

266
00:13:35,540 --> 00:13:42,800
it would only prevent some only<font color="#E5E5E5"> rare or</font>

267
00:13:38,200 --> 00:13:45,800
operations your normal traffic<font color="#E5E5E5"> would not</font>

268
00:13:42,800 --> 00:13:50,420
be blocked by<font color="#CCCCCC"> the</font><font color="#E5E5E5"> slot instance for</font>

269
00:13:45,800 --> 00:13:53,060
backup optimizer histograms<font color="#CCCCCC"> that gives</font>

270
00:13:50,420 --> 00:13:55,449
us a detailed<font color="#E5E5E5"> statistics on columns not</font>

271
00:13:53,060 --> 00:13:58,670
just indexes and it<font color="#E5E5E5"> really allows</font>

272
00:13:55,450 --> 00:14:00,890
optimizer to do much better choices<font color="#CCCCCC"> in</font>

273
00:13:58,670 --> 00:14:03,699
many cases and what is<font color="#E5E5E5"> interested</font><font color="#CCCCCC"> in</font>

274
00:14:00,890 --> 00:14:07,130
<font color="#E5E5E5">this case I</font><font color="#CCCCCC"> provided as an example</font><font color="#E5E5E5"> it is</font>

275
00:14:03,700 --> 00:14:10,760
<font color="#E5E5E5">this statistics is stored as as JSON</font>

276
00:14:07,130 --> 00:14:13,370
which makes that<font color="#E5E5E5"> much more extensible</font>

277
00:14:10,760 --> 00:14:17,149
<font color="#E5E5E5">and I hope that will allow my</font><font color="#CCCCCC"> skew</font>

278
00:14:13,370 --> 00:14:20,050
optimizer team to roll in more

279
00:14:17,149 --> 00:14:23,089
statistics or<font color="#E5E5E5"> a different format of</font>

280
00:14:20,050 --> 00:14:26,449
those histogram information<font color="#E5E5E5"> without</font>

281
00:14:23,089 --> 00:14:28,370
<font color="#E5E5E5">needing to redesign it completely from</font>

282
00:14:26,450 --> 00:14:31,880
<font color="#CCCCCC">scratch right and wait for many years</font>

283
00:14:28,370 --> 00:14:33,980
for<font color="#CCCCCC"> in your lives</font><font color="#E5E5E5"> an RFP a fix or</font>

284
00:14:31,880 --> 00:14:35,810
improvement in<font color="#CCCCCC"> an optimizer</font><font color="#E5E5E5"> is an</font>

285
00:14:33,980 --> 00:14:38,029
improved cost model which allows<font color="#CCCCCC"> for</font>

286
00:14:35,810 --> 00:14:40,279
<font color="#E5E5E5">example to keep an</font><font color="#CCCCCC"> account how much data</font>

287
00:14:38,029 --> 00:14:43,040
is<font color="#CCCCCC"> cached versus is not rightly sure</font>

288
00:14:40,279 --> 00:14:45,620
which you have to fetch<font color="#E5E5E5"> from a disk</font><font color="#CCCCCC"> here</font>

289
00:14:43,040 --> 00:14:49,630
is a link<font color="#E5E5E5"> of some blog post about more</font>

290
00:14:45,620 --> 00:14:54,079
information<font color="#CCCCCC"> but in general</font><font color="#E5E5E5"> that can be</font>

291
00:14:49,630 --> 00:14:56,000
very important to get the good<font color="#CCCCCC"> execute</font>

292
00:14:54,079 --> 00:14:59,329
<font color="#E5E5E5">or better execution plans for some</font>

293
00:14:56,000 --> 00:15:01,820
workloads in my skill optimizer<font color="#E5E5E5"> I'm</font>

294
00:14:59,329 --> 00:15:03,739
actually<font color="#E5E5E5"> some other helpful changes I</font>

295
00:15:01,820 --> 00:15:05,240
<font color="#E5E5E5">don't have a time to carve them all so</font>

296
00:15:03,740 --> 00:15:08,720
<font color="#CCCCCC">here's a link</font><font color="#E5E5E5"> for you</font>

297
00:15:05,240 --> 00:15:11,810
<font color="#E5E5E5">an official MySQL guide now it has some</font>

298
00:15:08,720 --> 00:15:14,300
<font color="#E5E5E5">more information</font><font color="#CCCCCC"> about MySQL optimizes</font>

299
00:15:11,810 --> 00:15:18,910
<font color="#E5E5E5">my school</font><font color="#CCCCCC"> eight of Gemara specifically</font>

300
00:15:14,300 --> 00:15:22,849
as well as some<font color="#E5E5E5"> other features</font>

301
00:15:18,910 --> 00:15:26,839
performance schema<font color="#E5E5E5"> is getting a much</font>

302
00:15:22,850 --> 00:15:30,320
much faster<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> and partly that is</font>

303
00:15:26,839 --> 00:15:32,089
through<font color="#E5E5E5"> heaven indexes on performance</font>

304
00:15:30,320 --> 00:15:34,030
schema the interesting thing about the

305
00:15:32,089 --> 00:15:36,810
indexes on performance schema

306
00:15:34,030 --> 00:15:39,250
is what<font color="#CCCCCC"> will actually fake indexes and</font>

307
00:15:36,810 --> 00:15:41,829
<font color="#E5E5E5">internally information schema just</font>

308
00:15:39,250 --> 00:15:43,510
pretends<font color="#E5E5E5"> as it has indexes and and this</font>

309
00:15:41,830 --> 00:15:46,960
<font color="#E5E5E5">is because it's</font><font color="#CCCCCC"> in memory and can scan</font>

310
00:15:43,510 --> 00:15:50,470
the data so quickly<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Preda provides</font>

311
00:15:46,960 --> 00:15:53,910
<font color="#CCCCCC">their you know much better</font><font color="#E5E5E5"> execution</font>

312
00:15:50,470 --> 00:15:57,640
<font color="#CCCCCC">plan and works quite neatly it also has</font>

313
00:15:53,910 --> 00:16:00,310
error instrumentations<font color="#E5E5E5"> and response time</font>

314
00:15:57,640 --> 00:16:03,610
histograms both global as<font color="#CCCCCC"> well as</font><font color="#E5E5E5"> per</font>

315
00:16:00,310 --> 00:16:06,280
query query digest<font color="#E5E5E5"> and also includes</font>

316
00:16:03,610 --> 00:16:08,290
query examples in summary by<font color="#E5E5E5"> digest so</font>

317
00:16:06,280 --> 00:16:12,880
you can actually take<font color="#E5E5E5"> great</font><font color="#CCCCCC"> clear</font>

318
00:16:08,290 --> 00:16:17,050
example for some slow<font color="#E5E5E5"> query and run</font>

319
00:16:12,880 --> 00:16:18,730
<font color="#E5E5E5">explain food to see why is it slow here</font>

320
00:16:17,050 --> 00:16:20,859
is example of<font color="#CCCCCC"> the performance scheme in</font>

321
00:16:18,730 --> 00:16:23,530
performance right looking through<font color="#CCCCCC"> the</font>

322
00:16:20,860 --> 00:16:25,810
<font color="#E5E5E5">built-in</font><font color="#CCCCCC"> cease session table</font><font color="#E5E5E5"> which was</font>

323
00:16:23,530 --> 00:16:28,660
designed as a sort of better show

324
00:16:25,810 --> 00:16:30,219
<font color="#E5E5E5">protest list but unfortunately in 5/7</font>

325
00:16:28,660 --> 00:16:33,040
wasn't usable<font color="#E5E5E5"> with large number</font><font color="#CCCCCC"> of</font>

326
00:16:30,220 --> 00:16:36,400
sessions<font color="#E5E5E5"> so like thousand sessions would</font>

327
00:16:33,040 --> 00:16:38,230
take like<font color="#CCCCCC"> 3040 seconds that's</font><font color="#E5E5E5"> not as</font>

328
00:16:36,400 --> 00:16:40,150
<font color="#CCCCCC">much as you</font><font color="#E5E5E5"> probably would want</font><font color="#CCCCCC"> to wait</font>

329
00:16:38,230 --> 00:16:42,880
for<font color="#E5E5E5"> show process list now you can see it</font>

330
00:16:40,150 --> 00:16:46,290
<font color="#E5E5E5">takes a second or two even if there is a</font>

331
00:16:42,880 --> 00:16:49,870
large<font color="#CCCCCC"> number of sessions</font><font color="#E5E5E5"> available</font>

332
00:16:46,290 --> 00:16:52,510
remote management features I think<font color="#E5E5E5"> the</font>

333
00:16:49,870 --> 00:16:54,220
speaker before me mentioned<font color="#E5E5E5"> and show an</font>

334
00:16:52,510 --> 00:16:56,319
action restart<font color="#E5E5E5"> comment which i think is</font>

335
00:16:54,220 --> 00:16:59,680
fantastic to restart the index<font color="#E5E5E5"> and in</font>

336
00:16:56,320 --> 00:17:02,740
<font color="#E5E5E5">our one is set persist which is another</font>

337
00:16:59,680 --> 00:17:05,919
very great<font color="#CCCCCC"> common which allows us</font><font color="#E5E5E5"> to set</font>

338
00:17:02,740 --> 00:17:07,660
<font color="#E5E5E5">a very able to be persisted when the</font>

339
00:17:05,920 --> 00:17:10,810
infant restarts<font color="#E5E5E5"> because there are so</font>

340
00:17:07,660 --> 00:17:12,910
<font color="#E5E5E5">many my school users would set a</font><font color="#CCCCCC"> global</font>

341
00:17:10,810 --> 00:17:15,970
variable<font color="#E5E5E5"> to some value right and just</font>

342
00:17:12,910 --> 00:17:18,190
not modify my<font color="#E5E5E5"> CNF keep my</font><font color="#CCCCCC"> school Ryan</font>

343
00:17:15,970 --> 00:17:20,650
for a few months then<font color="#E5E5E5"> restart and boom</font>

344
00:17:18,190 --> 00:17:24,490
it became behaves differently as much

345
00:17:20,650 --> 00:17:27,430
slower or<font color="#E5E5E5"> or whatever else you may have</font>

346
00:17:24,490 --> 00:17:30,400
changed<font color="#CCCCCC"> and</font><font color="#E5E5E5"> nobody really understands</font>

347
00:17:27,430 --> 00:17:32,350
why because<font color="#E5E5E5"> that change was long</font>

348
00:17:30,400 --> 00:17:35,860
<font color="#CCCCCC">forgotten</font><font color="#E5E5E5"> which says persist you can</font>

349
00:17:32,350 --> 00:17:41,709
<font color="#E5E5E5">ensure what those things</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> happen</font><font color="#CCCCCC"> my</font>

350
00:17:35,860 --> 00:17:44,139
<font color="#CCCCCC">SQL also assumes default</font><font color="#E5E5E5"> is SSD right</font>

351
00:17:41,710 --> 00:17:47,280
now which is<font color="#E5E5E5"> great not a lot of</font><font color="#CCCCCC"> things</font>

352
00:17:44,140 --> 00:17:49,200
are done<font color="#E5E5E5"> for that as of</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> but</font>

353
00:17:47,280 --> 00:17:52,470
but that is good the change in direction

354
00:17:49,200 --> 00:17:55,620
at<font color="#CCCCCC"> least my school is also prepared</font><font color="#E5E5E5"> for</font>

355
00:17:52,470 --> 00:17:58,560
to be able<font color="#CCCCCC"> to ask as a as a replication</font>

356
00:17:55,620 --> 00:18:02,040
master<font color="#CCCCCC"> by</font><font color="#E5E5E5"> default bin log is enabled</font>

357
00:17:58,560 --> 00:18:07,830
<font color="#E5E5E5">looks live updates enabled and log X bar</font>

358
00:18:02,040 --> 00:18:10,470
by default<font color="#E5E5E5"> right so you don't need to to</font>

359
00:18:07,830 --> 00:18:14,570
do anything<font color="#CCCCCC"> right to prepare that to be</font>

360
00:18:10,470 --> 00:18:17,400
<font color="#CCCCCC">usable for</font><font color="#E5E5E5"> configuration query cache is</font>

361
00:18:14,570 --> 00:18:20,550
is removed<font color="#E5E5E5"> right so if you need the</font>

362
00:18:17,400 --> 00:18:25,050
query cache<font color="#E5E5E5"> then you probably should be</font>

363
00:18:20,550 --> 00:18:27,629
looking at at at proxy<font color="#E5E5E5"> SQL right or you</font>

364
00:18:25,050 --> 00:18:31,919
may<font color="#E5E5E5"> have some other caching solution in</font>

365
00:18:27,630 --> 00:18:34,440
place<font color="#E5E5E5"> already</font><font color="#CCCCCC"> native partitioning so</font>

366
00:18:31,920 --> 00:18:37,500
generic partition<font color="#CCCCCC"> has is removed</font><font color="#E5E5E5"> in my</font>

367
00:18:34,440 --> 00:18:40,740
square<font color="#E5E5E5"> 8 it was kind of substantially</font>

368
00:18:37,500 --> 00:18:43,110
slower than a native partition<font color="#CCCCCC"> that</font>

369
00:18:40,740 --> 00:18:45,960
means if you use in storage engines<font color="#E5E5E5"> like</font>

370
00:18:43,110 --> 00:18:47,639
my<font color="#CCCCCC"> sum which does not have a native</font>

371
00:18:45,960 --> 00:18:50,520
partition support then<font color="#CCCCCC"> you would</font><font color="#E5E5E5"> have to</font>

372
00:18:47,640 --> 00:18:53,280
either remove partition into that from

373
00:18:50,520 --> 00:18:57,510
that<font color="#E5E5E5"> or convert a table to energy</font><font color="#CCCCCC"> B</font>

374
00:18:53,280 --> 00:19:00,210
before upgrading resource groups<font color="#E5E5E5"> that is</font>

375
00:18:57,510 --> 00:19:02,160
another<font color="#CCCCCC"> a cool stuff</font><font color="#E5E5E5"> or you can</font>

376
00:19:00,210 --> 00:19:04,170
<font color="#E5E5E5">essentially map some</font><font color="#CCCCCC"> affair queries in</font>

377
00:19:02,160 --> 00:19:07,590
your workload to specific CPU cores

378
00:19:04,170 --> 00:19:11,910
which can help you<font color="#E5E5E5"> to reduce</font><font color="#CCCCCC"> a</font>

379
00:19:07,590 --> 00:19:13,169
contention but then<font color="#CCCCCC"> B it also allows you</font>

380
00:19:11,910 --> 00:19:15,690
<font color="#CCCCCC">to kind of to jail</font>

381
00:19:13,170 --> 00:19:17,090
some of you expensive<font color="#CCCCCC"> queries</font><font color="#E5E5E5"> right so</font>

382
00:19:15,690 --> 00:19:19,080
for example<font color="#E5E5E5"> maybe you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> some</font>

383
00:19:17,090 --> 00:19:21,899
analytical queries which can be very

384
00:19:19,080 --> 00:19:23,760
<font color="#CCCCCC">expensive</font><font color="#E5E5E5"> and if you let your analytics</font>

385
00:19:21,900 --> 00:19:26,010
team to run while they'll consume all

386
00:19:23,760 --> 00:19:28,680
the server resources<font color="#E5E5E5"> you can set it so</font>

387
00:19:26,010 --> 00:19:33,020
<font color="#E5E5E5">they only are able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use no more</font><font color="#CCCCCC"> than</font>

388
00:19:28,680 --> 00:19:37,440
let's say<font color="#E5E5E5"> 2</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> 4 CPU cores and that's it</font>

389
00:19:33,020 --> 00:19:41,250
we also get<font color="#E5E5E5"> the better performance at</font>

390
00:19:37,440 --> 00:19:44,670
scale right you can<font color="#E5E5E5"> see if MySQL again</font>

391
00:19:41,250 --> 00:19:47,130
if you have a<font color="#E5E5E5"> really big iron and really</font>

392
00:19:44,670 --> 00:19:49,820
large enough number of concurrently

393
00:19:47,130 --> 00:19:54,990
active threads<font color="#E5E5E5"> it can beat the previous</font>

394
00:19:49,820 --> 00:19:57,750
MySQL MySQL version we also<font color="#E5E5E5"> like what a</font>

395
00:19:54,990 --> 00:19:58,800
<font color="#E5E5E5">lot of stuff we can</font><font color="#CCCCCC"> use in our pukana</font>

396
00:19:57,750 --> 00:20:03,090
module management

397
00:19:58,800 --> 00:20:06,120
a solution in in my<font color="#E5E5E5"> school</font><font color="#CCCCCC"> 8 especially</font>

398
00:20:03,090 --> 00:20:08,129
much faster<font color="#CCCCCC"> and performance and</font>

399
00:20:06,120 --> 00:20:13,020
information schema and<font color="#E5E5E5"> more information</font>

400
00:20:08,130 --> 00:20:15,450
available<font color="#CCCCCC"> in performance schema is is is</font>

401
00:20:13,020 --> 00:20:16,970
great and lowest to build a lot<font color="#E5E5E5"> more</font>

402
00:20:15,450 --> 00:20:19,830
features<font color="#CCCCCC"> out there</font>

403
00:20:16,970 --> 00:20:22,650
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> now things which are not so great</font>

404
00:20:19,830 --> 00:20:24,810
<font color="#CCCCCC">alcohol and feature requests the single</font>

405
00:20:22,650 --> 00:20:32,070
<font color="#E5E5E5">thread performance still sucks</font><font color="#CCCCCC"> and we</font>

406
00:20:24,810 --> 00:20:35,360
don't have a parallel<font color="#CCCCCC"> query</font><font color="#E5E5E5"> support as</font>

407
00:20:32,070 --> 00:20:40,200
of here at right and<font color="#E5E5E5"> hopefully that will</font>

408
00:20:35,360 --> 00:20:44,669
get<font color="#CCCCCC"> Road nap sometime sometimes so here</font>

409
00:20:40,200 --> 00:20:47,220
is the graph right<font color="#E5E5E5"> from the champion of</font>

410
00:20:44,670 --> 00:20:50,070
my<font color="#E5E5E5"> school single thread performance</font><font color="#CCCCCC"> mark</font>

411
00:20:47,220 --> 00:20:53,270
<font color="#E5E5E5">Callaghan right and actually</font><font color="#CCCCCC"> I share</font>

412
00:20:50,070 --> 00:20:54,780
<font color="#CCCCCC">peat</font><font color="#E5E5E5"> one with the worst regression right</font>

413
00:20:53,270 --> 00:20:57,480
<font color="#CCCCCC">guilty as charged</font>

414
00:20:54,780 --> 00:21:01,050
<font color="#E5E5E5">but you can see what for some cases we</font>

415
00:20:57,480 --> 00:21:04,620
<font color="#E5E5E5">have less</font><font color="#CCCCCC"> than half</font><font color="#E5E5E5"> performance of in</font>

416
00:21:01,050 --> 00:21:07,710
<font color="#E5E5E5">MySQL</font><font color="#CCCCCC"> 8 as we had in in high school</font>

417
00:21:04,620 --> 00:21:09,479
<font color="#CCCCCC">MySQL five right</font><font color="#E5E5E5"> so I think that is</font>

418
00:21:07,710 --> 00:21:13,380
something<font color="#E5E5E5"> they would they would like to</font>

419
00:21:09,480 --> 00:21:15,380
<font color="#E5E5E5">see some some</font><font color="#CCCCCC"> reversed right and it</font>

420
00:21:13,380 --> 00:21:18,030
<font color="#E5E5E5">doesn't have</font><font color="#CCCCCC"> to be this way there is</font>

421
00:21:15,380 --> 00:21:20,820
another database<font color="#E5E5E5"> which is called SQL</font>

422
00:21:18,030 --> 00:21:24,379
Lite which is able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> both add V new</font>

423
00:21:20,820 --> 00:21:27,810
features<font color="#E5E5E5"> in the new releases as</font><font color="#CCCCCC"> well as</font>

424
00:21:24,380 --> 00:21:32,670
have you know single<font color="#E5E5E5"> thread performance</font>

425
00:21:27,810 --> 00:21:35,310
being better release after release and

426
00:21:32,670 --> 00:21:37,950
the last thing if you<font color="#E5E5E5"> guys say</font><font color="#CCCCCC"> incidents</font>

427
00:21:35,310 --> 00:21:40,260
much more information<font color="#CCCCCC"> about</font><font color="#E5E5E5"> MySQL</font><font color="#CCCCCC"> 8 and</font>

428
00:21:37,950 --> 00:21:43,770
MySQL have open source database<font color="#E5E5E5"> in</font>

429
00:21:40,260 --> 00:21:46,320
general we welcome you to to come to

430
00:21:43,770 --> 00:21:49,020
<font color="#E5E5E5">Santa Clara in the United States</font><font color="#CCCCCC"> we will</font>

431
00:21:46,320 --> 00:21:52,230
<font color="#E5E5E5">have a record live conference out there</font>

432
00:21:49,020 --> 00:21:53,940
<font color="#E5E5E5">just want to let you</font><font color="#CCCCCC"> know and that's</font><font color="#E5E5E5"> it</font>

433
00:21:52,230 --> 00:21:57,140
<font color="#E5E5E5">and I</font><font color="#CCCCCC"> think I still have</font><font color="#E5E5E5"> a whole three</font>

434
00:21:53,940 --> 00:21:57,140
minutes<font color="#CCCCCC"> for questions right right</font>

435
00:21:58,490 --> 00:22:03,020
no questions yes

436
00:22:06,870 --> 00:22:13,870
so<font color="#CCCCCC"> even information</font><font color="#E5E5E5"> schema</font>

437
00:22:10,780 --> 00:22:15,520
well yes pretty much instead<font color="#E5E5E5"> of energy</font>

438
00:22:13,870 --> 00:22:18,010
<font color="#E5E5E5">being internal date addiction right and</font>

439
00:22:15,520 --> 00:22:24,960
<font color="#CCCCCC">FM</font><font color="#E5E5E5"> in files now</font><font color="#CCCCCC"> we'll have just you</font><font color="#E5E5E5"> know</font>

440
00:22:18,010 --> 00:22:32,440
one data dictionary<font color="#E5E5E5"> any other questions</font>

441
00:22:24,960 --> 00:22:39,730
thoughts<font color="#E5E5E5"> what never engine what about</font>

442
00:22:32,440 --> 00:22:41,350
never engine well<font color="#E5E5E5"> so so the</font><font color="#CCCCCC"> question is</font>

443
00:22:39,730 --> 00:22:44,200
is memory engine<font color="#E5E5E5"> going to be replaced</font>

444
00:22:41,350 --> 00:22:48,600
right so now we<font color="#CCCCCC"> have this TMP table</font>

445
00:22:44,200 --> 00:22:51,309
engine which<font color="#CCCCCC"> is designed for in memory</font>

446
00:22:48,600 --> 00:22:53,230
<font color="#E5E5E5">temporary tables and those tables have a</font>

447
00:22:51,309 --> 00:22:55,570
very specific workload which is needed

448
00:22:53,230 --> 00:22:58,809
for<font color="#E5E5E5"> to resolve a queries now wherever</font>

449
00:22:55,570 --> 00:23:01,500
that engine is going<font color="#E5E5E5"> to be at a future</font>

450
00:22:58,809 --> 00:23:08,160
<font color="#CCCCCC">time exposed for general purpose use</font><font color="#E5E5E5"> I</font>

451
00:23:01,500 --> 00:23:15,450
honestly don't<font color="#E5E5E5"> know okay well thank you</font>

452
00:23:08,160 --> 00:23:15,450
<font color="#E5E5E5">yes let's make make space for</font><font color="#CCCCCC"> Sarah</font>

