1
00:00:05,430 --> 00:00:11,260
it's not perfect<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> way up there</font>

2
00:00:09,660 --> 00:00:13,410
the day<font color="#CCCCCC"> two more presentation</font>

3
00:00:11,260 --> 00:00:19,200
to go<font color="#E5E5E5"> and the first of their</font>

4
00:00:13,410 --> 00:00:22,890
by against Fryman if<font color="#E5E5E5"> on vert io 1.1</font>

5
00:00:19,200 --> 00:00:27,240
<font color="#CCCCCC">what's new in</font><font color="#E5E5E5"> the next version okay</font>

6
00:00:22,890 --> 00:00:29,030
hi one can you hear me<font color="#E5E5E5"> okay so yes my</font>

7
00:00:27,240 --> 00:00:32,879
name<font color="#CCCCCC"> is</font><font color="#E5E5E5"> Jen's famine I work for Red Hat</font>

8
00:00:29,030 --> 00:00:36,030
<font color="#CCCCCC">and this talk is about recent weather</font>

9
00:00:32,879 --> 00:00:39,120
<font color="#E5E5E5">work that we've been doing on extending</font>

10
00:00:36,030 --> 00:00:41,580
<font color="#CCCCCC">the</font><font color="#E5E5E5"> rudder or specification so the goal</font>

11
00:00:39,120 --> 00:00:44,790
is to extend<font color="#E5E5E5"> where I all in a way to</font>

12
00:00:41,580 --> 00:00:47,400
improve its performance and<font color="#CCCCCC"> also to make</font>

13
00:00:44,790 --> 00:00:51,510
it<font color="#E5E5E5"> work better with workloads</font><font color="#CCCCCC"> that it</font>

14
00:00:47,400 --> 00:00:53,970
currently<font color="#E5E5E5"> doesn't support very well so</font>

15
00:00:51,510 --> 00:00:57,180
I'll give a very very brief<font color="#CCCCCC"> explanation</font>

16
00:00:53,970 --> 00:01:01,800
of what I owe<font color="#E5E5E5"> and just put it into</font>

17
00:00:57,180 --> 00:01:04,530
context<font color="#E5E5E5"> to</font><font color="#CCCCCC"> nfe very shortly before</font>

18
00:01:01,800 --> 00:01:08,130
talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> main new topic and whether</font>

19
00:01:04,530 --> 00:01:12,510
or<font color="#E5E5E5"> not one which is a feature called</font>

20
00:01:08,130 --> 00:01:15,030
text<font color="#E5E5E5"> but</font><font color="#CCCCCC"> cues and eventually if time</font>

21
00:01:12,510 --> 00:01:18,780
allows<font color="#CCCCCC"> I will talk about</font><font color="#E5E5E5"> a few</font><font color="#CCCCCC"> other</font>

22
00:01:15,030 --> 00:01:21,090
developments in the space of word<font color="#CCCCCC"> i/o</font>

23
00:01:18,780 --> 00:01:22,759
that I think are worth<font color="#CCCCCC"> mentioning</font><font color="#E5E5E5"> here</font>

24
00:01:21,090 --> 00:01:25,740
<font color="#E5E5E5">to this crowd</font>

25
00:01:22,759 --> 00:01:29,460
but first that start was what<font color="#CCCCCC"> word I'll</font>

26
00:01:25,740 --> 00:01:33,179
actually<font color="#CCCCCC"> is so</font><font color="#E5E5E5"> when I was an abstraction</font>

27
00:01:29,460 --> 00:01:35,548
I am<font color="#CCCCCC"> for</font><font color="#E5E5E5"> devices and hypervisors and the</font>

28
00:01:33,180 --> 00:01:38,969
idea is to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> a common</font><font color="#CCCCCC"> framework</font><font color="#E5E5E5"> for</font>

29
00:01:35,549 --> 00:01:42,179
i/o virtualization<font color="#E5E5E5"> and at its core it</font>

30
00:01:38,969 --> 00:01:45,178
defines virtual<font color="#E5E5E5"> queues</font><font color="#CCCCCC"> also a way</font><font color="#E5E5E5"> to</font>

31
00:01:42,179 --> 00:01:47,130
configure devices and Magnum stands for

32
00:01:45,179 --> 00:01:48,200
backward compatibility<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> quite</font>

33
00:01:47,130 --> 00:01:51,719
good<font color="#E5E5E5"> at</font><font color="#CCCCCC"> that</font>

34
00:01:48,200 --> 00:01:55,289
so yeah many different<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> that were</font>

35
00:01:51,719 --> 00:01:58,439
on net block console and so on and to a

36
00:01:55,289 --> 00:02:01,619
<font color="#CCCCCC">guess these devices</font><font color="#E5E5E5"> appear as normal PCI</font>

37
00:01:58,439 --> 00:02:06,419
devices or if you are<font color="#CCCCCC"> animated film as</font>

38
00:02:01,619 --> 00:02:09,270
channel devices okay so and to put this

39
00:02:06,420 --> 00:02:12,960
into context<font color="#CCCCCC"> to</font><font color="#E5E5E5"> NFC so we're on a</font>

40
00:02:09,270 --> 00:02:15,660
possible<font color="#E5E5E5"> NFC</font><font color="#CCCCCC"> setup espera you're used</font>

41
00:02:12,960 --> 00:02:18,510
and I really just picked a<font color="#CCCCCC"> random</font>

42
00:02:15,660 --> 00:02:20,450
example let's say you're using<font color="#CCCCCC"> a DVD K</font>

43
00:02:18,510 --> 00:02:22,940
<font color="#E5E5E5">biased application</font>

44
00:02:20,450 --> 00:02:26,629
um and then you have a valet<font color="#E5E5E5"> up front</font>

45
00:02:22,940 --> 00:02:28,819
and in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> guest and you have a very</font>

46
00:02:26,629 --> 00:02:32,239
back end and the<font color="#E5E5E5"> host</font><font color="#CCCCCC"> although in this</font>

47
00:02:28,819 --> 00:02:35,060
<font color="#E5E5E5">case fellow is part of the</font><font color="#CCCCCC"> DPD K library</font>

48
00:02:32,239 --> 00:02:42,050
and in the<font color="#E5E5E5"> host it's part of the O's</font>

49
00:02:35,060 --> 00:02:44,510
<font color="#E5E5E5">tuza in this case also part of</font><font color="#CCCCCC"> 50</font><font color="#E5E5E5"> K</font><font color="#CCCCCC"> and</font>

50
00:02:42,050 --> 00:02:46,069
by the way<font color="#E5E5E5"> I guess most</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> are</font>

51
00:02:44,510 --> 00:02:48,170
familiar with deeply okay but this is so

52
00:02:46,069 --> 00:02:51,859
like a library and provides<font color="#CCCCCC"> the</font><font color="#E5E5E5"> space</font>

53
00:02:48,170 --> 00:02:53,750
drivers and libraries to build fast

54
00:02:51,860 --> 00:02:59,500
package and package processing

55
00:02:53,750 --> 00:03:02,959
applications so yeah this is<font color="#E5E5E5"> the part</font>

56
00:02:59,500 --> 00:03:05,000
talking about the very architecture<font color="#E5E5E5"> at</font>

57
00:03:02,959 --> 00:03:06,590
<font color="#CCCCCC">the top you see</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> device specific</font>

58
00:03:05,000 --> 00:03:09,049
components<font color="#E5E5E5"> this has everything that's</font>

59
00:03:06,590 --> 00:03:09,380
specific to<font color="#CCCCCC"> weather</font><font color="#E5E5E5"> in that block and so</font>

60
00:03:09,049 --> 00:03:11,540
on

61
00:03:09,380 --> 00:03:14,750
at the bottom<font color="#CCCCCC"> you have transport</font>

62
00:03:11,540 --> 00:03:18,769
specific parts as I said<font color="#E5E5E5"> devices can be</font>

63
00:03:14,750 --> 00:03:24,470
PCI devices they can<font color="#E5E5E5"> be also CCW devices</font>

64
00:03:18,769 --> 00:03:30,470
that's<font color="#E5E5E5"> for matrix but I want to talk</font>

65
00:03:24,470 --> 00:03:33,440
about your vodka<font color="#CCCCCC"> part today</font><font color="#E5E5E5"> so we want</font>

66
00:03:30,470 --> 00:03:36,859
<font color="#E5E5E5">to add a new kind of</font><font color="#CCCCCC"> vodkas and so why</font>

67
00:03:33,440 --> 00:03:39,290
do we<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to do this the very</font><font color="#E5E5E5"> bad</font>

68
00:03:36,859 --> 00:03:42,319
<font color="#CCCCCC">queues are defined until where I</font>

69
00:03:39,290 --> 00:03:44,750
wondered oh and I'll call them split

70
00:03:42,319 --> 00:03:47,388
vodkas from now on supposed to pack to

71
00:03:44,750 --> 00:03:51,370
accuse<font color="#E5E5E5"> they're not really fit for</font><font color="#CCCCCC"> a</font>

72
00:03:47,389 --> 00:03:54,950
straightforward<font color="#E5E5E5"> implementation hardware</font>

73
00:03:51,370 --> 00:03:56,569
so I've been expecting<font color="#E5E5E5"> other support</font><font color="#CCCCCC"> for</font>

74
00:03:54,950 --> 00:04:00,200
<font color="#CCCCCC">video</font><font color="#E5E5E5"> for quite a while actually and it</font>

75
00:03:56,569 --> 00:04:01,880
never happened and well I<font color="#E5E5E5"> guess it's</font>

76
00:04:00,200 --> 00:04:04,420
just<font color="#CCCCCC"> because they are too complicated to</font>

77
00:04:01,880 --> 00:04:09,769
implement<font color="#CCCCCC"> I know that</font><font color="#E5E5E5"> one company once</font>

78
00:04:04,420 --> 00:04:12,230
tried it and stopped at some point and

79
00:04:09,769 --> 00:04:14,569
<font color="#E5E5E5">now there are several companies</font><font color="#CCCCCC"> that</font>

80
00:04:12,230 --> 00:04:17,180
make an effort to push forward<font color="#E5E5E5"> in the</font>

81
00:04:14,569 --> 00:04:19,548
space and<font color="#E5E5E5"> actually try implementing what</font>

82
00:04:17,180 --> 00:04:24,139
I all and and<font color="#E5E5E5"> hardware make accelerators</font>

83
00:04:19,548 --> 00:04:26,000
forward but not<font color="#CCCCCC"> all so</font><font color="#E5E5E5"> hardware also</font>

84
00:04:24,139 --> 00:04:29,180
<font color="#E5E5E5">pure software implementation</font><font color="#CCCCCC"> should</font>

85
00:04:26,000 --> 00:04:31,880
benefit from<font color="#E5E5E5"> for a 1.1 and the penguin</font>

86
00:04:29,180 --> 00:04:34,190
layout so

87
00:04:31,880 --> 00:04:37,340
what's the<font color="#E5E5E5"> problem was</font><font color="#CCCCCC"> alway of red</font>

88
00:04:34,190 --> 00:04:41,260
<font color="#CCCCCC">cubes with split batteries so this is</font>

89
00:04:37,340 --> 00:04:45,619
what the data structures of it look like

90
00:04:41,260 --> 00:04:48,380
so<font color="#E5E5E5"> first each request the stored in a</font>

91
00:04:45,620 --> 00:04:50,870
buffer<font color="#E5E5E5"> then</font><font color="#CCCCCC"> men will share between the</font>

92
00:04:48,380 --> 00:04:53,180
driver and the<font color="#E5E5E5"> device the buffer address</font>

93
00:04:50,870 --> 00:04:55,370
and<font color="#E5E5E5"> lengths are stored in the 16 byte</font>

94
00:04:53,180 --> 00:04:58,190
the<font color="#E5E5E5"> script</font><font color="#CCCCCC"> to us and they are</font><font color="#E5E5E5"> stored in</font>

95
00:04:55,370 --> 00:05:00,410
a descriptor table now if the buffer is

96
00:04:58,190 --> 00:05:02,750
not<font color="#E5E5E5"> contiguous and multiple structures</font>

97
00:05:00,410 --> 00:05:06,530
<font color="#E5E5E5">can be chained together</font><font color="#CCCCCC"> by setting a</font>

98
00:05:02,750 --> 00:05:08,690
next field in the descriptor so<font color="#E5E5E5"> we're on</font>

99
00:05:06,530 --> 00:05:11,719
the table to put each descriptor that's

100
00:05:08,690 --> 00:05:14,750
up<font color="#E5E5E5"> to the driver and a request is</font>

101
00:05:11,720 --> 00:05:18,020
identified by a head index which<font color="#CCCCCC"> is 6</font>

102
00:05:14,750 --> 00:05:21,740
which<font color="#CCCCCC"> was</font><font color="#E5E5E5"> a 16-bit offset into after</font>

103
00:05:18,020 --> 00:05:24,469
first descriptor in the table now

104
00:05:21,740 --> 00:05:27,680
<font color="#CCCCCC">happiness's</font><font color="#E5E5E5"> are stored in the available</font>

105
00:05:24,470 --> 00:05:30,170
<font color="#E5E5E5">ring and to signal to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> device which</font>

106
00:05:27,680 --> 00:05:31,880
<font color="#E5E5E5">illnesses are valid the driver also</font>

107
00:05:30,170 --> 00:05:34,940
<font color="#E5E5E5">maintains and available in next in</font>

108
00:05:31,880 --> 00:05:37,430
shared<font color="#CCCCCC"> memory</font><font color="#E5E5E5"> and after executing the</font>

109
00:05:34,940 --> 00:05:40,340
request the device will store the head

110
00:05:37,430 --> 00:05:43,580
index in this new string which<font color="#CCCCCC"> is also</font>

111
00:05:40,340 --> 00:05:45,260
<font color="#E5E5E5">in share memory it also stores the</font>

112
00:05:43,580 --> 00:05:47,680
lengths of the<font color="#CCCCCC"> use part of the buffer</font>

113
00:05:45,260 --> 00:05:50,870
<font color="#E5E5E5">and it then increments to use</font><font color="#CCCCCC"> index</font>

114
00:05:47,680 --> 00:05:52,670
<font color="#CCCCCC">value in the shared memory</font><font color="#E5E5E5"> to signal</font><font color="#CCCCCC"> to</font>

115
00:05:50,870 --> 00:05:58,820
<font color="#E5E5E5">the driver that just descriptor has been</font>

116
00:05:52,670 --> 00:06:01,970
used and so fundamentally<font color="#E5E5E5"> what we see is</font>

117
00:05:58,820 --> 00:06:06,230
that<font color="#CCCCCC"> host</font><font color="#E5E5E5"> and guests communicate by</font>

118
00:06:01,970 --> 00:06:12,050
passing messages<font color="#CCCCCC"> between CPUs using</font>

119
00:06:06,230 --> 00:06:14,240
shared memory and how do<font color="#E5E5E5"> CPUs do this so</font>

120
00:06:12,050 --> 00:06:16,700
at a<font color="#CCCCCC"> very low level when</font><font color="#E5E5E5"> a CPU accesses</font>

121
00:06:14,240 --> 00:06:19,400
memory that has<font color="#CCCCCC"> also modified by another</font>

122
00:06:16,700 --> 00:06:21,680
CPU<font color="#E5E5E5"> this will cause the CPU to</font>

123
00:06:19,400 --> 00:06:23,840
synchronize their<font color="#CCCCCC"> caches and I do this</font>

124
00:06:21,680 --> 00:06:26,390
by<font color="#CCCCCC"> exchanging cache coherence protocol</font>

125
00:06:23,840 --> 00:06:29,960
messages<font color="#E5E5E5"> so beta P they speak to each</font>

126
00:06:26,390 --> 00:06:32,240
<font color="#E5E5E5">other for</font><font color="#CCCCCC"> example for some architectures</font>

127
00:06:29,960 --> 00:06:34,729
when a CPU accesses<font color="#CCCCCC"> no me that was</font>

128
00:06:32,240 --> 00:06:39,950
previously accessed by another CPU<font color="#E5E5E5"> this</font>

129
00:06:34,730 --> 00:06:41,630
will<font color="#CCCCCC"> also</font><font color="#E5E5E5"> cause a cache miss and well</font>

130
00:06:39,950 --> 00:06:43,789
the number of<font color="#E5E5E5"> these cache coherence</font>

131
00:06:41,630 --> 00:06:44,700
messages exchanged and cache misses

132
00:06:43,790 --> 00:06:48,210
<font color="#E5E5E5">there</font>

133
00:06:44,700 --> 00:06:50,070
<font color="#E5E5E5">the impact the communication latency now</font>

134
00:06:48,210 --> 00:06:53,669
let's count<font color="#E5E5E5"> cache misses</font>

135
00:06:50,070 --> 00:06:56,520
when using<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> the queue</font>

136
00:06:53,670 --> 00:06:59,070
<font color="#E5E5E5">consists of five parts and as a buffer</font>

137
00:06:56,520 --> 00:07:01,200
moves<font color="#E5E5E5"> between host and guest</font><font color="#CCCCCC"> each of</font>

138
00:06:59,070 --> 00:07:05,099
these parts is read and written at least

139
00:07:01,200 --> 00:07:08,700
<font color="#E5E5E5">once so this is implying at least five</font>

140
00:07:05,100 --> 00:07:11,820
cache misses<font color="#CCCCCC"> prabhava</font><font color="#E5E5E5"> if no batching is</font>

141
00:07:08,700 --> 00:07:14,969
<font color="#E5E5E5">allowed if we</font><font color="#CCCCCC"> fetch</font><font color="#E5E5E5"> then it gets a</font>

142
00:07:11,820 --> 00:07:19,740
<font color="#E5E5E5">little bit better but</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> so what</font>

143
00:07:14,970 --> 00:07:21,990
can<font color="#CCCCCC"> we do to reduce</font><font color="#E5E5E5"> the overhead so the</font>

144
00:07:19,740 --> 00:07:24,900
issue is<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> information for this</font>

145
00:07:21,990 --> 00:07:26,580
request is spread<font color="#CCCCCC"> over multiple data</font>

146
00:07:24,900 --> 00:07:30,299
structures<font color="#E5E5E5"> and this is causing multiple</font>

147
00:07:26,580 --> 00:07:32,849
cache misses so to reduce the<font color="#E5E5E5"> overheads</font>

148
00:07:30,300 --> 00:07:34,710
<font color="#E5E5E5">we should pack as much information as</font>

149
00:07:32,850 --> 00:07:38,940
possible<font color="#E5E5E5"> into a single data structure</font>

150
00:07:34,710 --> 00:07:42,419
and what follows is a proposal to do

151
00:07:38,940 --> 00:07:45,140
exactly<font color="#E5E5E5"> that this is currently being</font>

152
00:07:42,420 --> 00:07:49,290
discussed<font color="#E5E5E5"> on the video mailing list and</font>

153
00:07:45,140 --> 00:07:53,550
there's a prototype for<font color="#CCCCCC"> dtk also on the</font>

154
00:07:49,290 --> 00:07:56,400
DVD came<font color="#E5E5E5"> hitting list working on</font><font color="#CCCCCC"> qmu and</font>

155
00:07:53,550 --> 00:07:57,600
<font color="#CCCCCC">linux as</font><font color="#E5E5E5"> well but duplicate prototype</font>

156
00:07:56,400 --> 00:08:02,909
was there<font color="#E5E5E5"> first we started with</font>

157
00:07:57,600 --> 00:08:05,130
<font color="#CCCCCC">duplicating and so what we do is we</font><font color="#E5E5E5"> get</font>

158
00:08:02,910 --> 00:08:07,890
rid<font color="#CCCCCC"> of the available and use string and</font>

159
00:08:05,130 --> 00:08:09,719
the next structures<font color="#E5E5E5"> completely and what</font>

160
00:08:07,890 --> 00:08:12,000
we do instead is we<font color="#CCCCCC"> make the</font><font color="#E5E5E5"> guest write</font>

161
00:08:09,720 --> 00:08:16,350
a script us out and descriptor in<font color="#CCCCCC"> order</font>

162
00:08:12,000 --> 00:08:18,510
and in our new descriptor ring<font color="#CCCCCC"> so within</font>

163
00:08:16,350 --> 00:08:22,380
<font color="#E5E5E5">each</font><font color="#CCCCCC"> two script or we add three new</font>

164
00:08:18,510 --> 00:08:27,450
fields of<font color="#CCCCCC"> lacks</font><font color="#E5E5E5"> unavailable</font><font color="#CCCCCC"> but you spit</font>

165
00:08:22,380 --> 00:08:29,969
and the script ID then to make buffers

166
00:08:27,450 --> 00:08:31,710
available to the<font color="#E5E5E5"> host the guests</font><font color="#CCCCCC"> will</font>

167
00:08:29,970 --> 00:08:34,650
write them<font color="#E5E5E5"> into the</font><font color="#CCCCCC"> script</font><font color="#E5E5E5"> us in our new</font>

168
00:08:31,710 --> 00:08:38,189
ring<font color="#E5E5E5"> and then it will flip the available</font>

169
00:08:34,650 --> 00:08:41,459
bit<font color="#E5E5E5"> this implies that it's now okay for</font>

170
00:08:38,190 --> 00:08:43,470
the host<font color="#E5E5E5"> to consume justice quarter and</font>

171
00:08:41,460 --> 00:08:46,500
<font color="#E5E5E5">the house can then process</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> in any</font>

172
00:08:43,470 --> 00:08:48,600
<font color="#CCCCCC">order each descriptor also has an ID</font>

173
00:08:46,500 --> 00:08:51,120
field<font color="#E5E5E5"> as I mentioned and after</font>

174
00:08:48,600 --> 00:08:54,600
<font color="#E5E5E5">processing the</font><font color="#CCCCCC"> host host rights to</font>

175
00:08:51,120 --> 00:08:56,490
process the script ID<font color="#CCCCCC"> back</font><font color="#E5E5E5"> into the ring</font>

176
00:08:54,600 --> 00:08:59,400
and<font color="#E5E5E5"> it flips to use</font><font color="#CCCCCC"> birth</font>

177
00:08:56,490 --> 00:09:01,140
and by this<font color="#CCCCCC"> it's specific telling the</font>

178
00:08:59,400 --> 00:09:03,810
<font color="#CCCCCC">guests that</font><font color="#E5E5E5"> an entry has</font><font color="#CCCCCC"> been used and</font>

179
00:09:01,140 --> 00:09:10,490
then it can that<font color="#E5E5E5"> the guests can</font><font color="#CCCCCC"> use this</font>

180
00:09:03,810 --> 00:09:13,349
again<font color="#E5E5E5"> or can make it available again so</font>

181
00:09:10,490 --> 00:09:17,580
device and<font color="#CCCCCC"> drive are also expected to</font>

182
00:09:13,350 --> 00:09:20,820
<font color="#E5E5E5">maintain internal in northern Germany a</font>

183
00:09:17,580 --> 00:09:23,940
single bit<font color="#E5E5E5"> counter and so starting at</font>

184
00:09:20,820 --> 00:09:25,830
one<font color="#CCCCCC"> and changing value each time</font><font color="#E5E5E5"> the</font>

185
00:09:23,940 --> 00:09:27,840
<font color="#E5E5E5">last descriptor in the ring a success</font>

186
00:09:25,830 --> 00:09:32,730
<font color="#CCCCCC">that has</font><font color="#E5E5E5"> to be flipped when the last one</font>

187
00:09:27,840 --> 00:09:34,290
a success<font color="#E5E5E5"> and as I just mentioned these</font>

188
00:09:32,730 --> 00:09:37,860
<font color="#E5E5E5">bits are</font><font color="#CCCCCC"> passed as</font><font color="#E5E5E5"> available and you</font>

189
00:09:34,290 --> 00:09:40,800
spit and<font color="#CCCCCC"> they descriptors so assuming at</font>

190
00:09:37,860 --> 00:09:42,840
the ring as<font color="#CCCCCC"> zero initialized</font><font color="#E5E5E5"> on the</font>

191
00:09:40,800 --> 00:09:45,030
<font color="#CCCCCC">fasted relation over</font><font color="#E5E5E5"> the ring to mark</font>

192
00:09:42,840 --> 00:09:49,020
the script is available<font color="#E5E5E5"> the available</font>

193
00:09:45,030 --> 00:09:52,189
bit is set to<font color="#E5E5E5"> one and then on an</font>

194
00:09:49,020 --> 00:09:54,449
acceleration<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is set</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> zero and so on</font>

195
00:09:52,190 --> 00:09:58,530
similarly to mark<font color="#E5E5E5"> the script was used</font>

196
00:09:54,450 --> 00:10:01,590
<font color="#E5E5E5">you</font><font color="#CCCCCC"> spit a set by the device on</font><font color="#E5E5E5"> the</font>

197
00:09:58,530 --> 00:10:05,189
first iteration<font color="#E5E5E5"> two one zero and second</font>

198
00:10:01,590 --> 00:10:07,620
one and so on<font color="#E5E5E5"> so what do</font><font color="#CCCCCC"> we get by these</font>

199
00:10:05,190 --> 00:10:10,290
<font color="#E5E5E5">counters well flipping the counter</font>

200
00:10:07,620 --> 00:10:12,840
values allows<font color="#E5E5E5"> the host and</font><font color="#CCCCCC"> gas</font><font color="#E5E5E5"> to detect</font>

201
00:10:10,290 --> 00:10:14,610
new available script us even<font color="#CCCCCC"> after the</font>

202
00:10:12,840 --> 00:10:16,890
ring has<font color="#CCCCCC"> stopped because it could be</font>

203
00:10:14,610 --> 00:10:19,230
<font color="#E5E5E5">that some descriptors we are not touched</font>

204
00:10:16,890 --> 00:10:22,260
<font color="#E5E5E5">in one part of the</font><font color="#CCCCCC"> Ring</font><font color="#E5E5E5"> because we</font>

205
00:10:19,230 --> 00:10:24,000
skipped them and this way we<font color="#E5E5E5"> will know</font>

206
00:10:22,260 --> 00:10:31,130
that this descriptor was made available

207
00:10:24,000 --> 00:10:33,710
and is currently to be used so

208
00:10:31,130 --> 00:10:36,460
as I said we have an implementation and

209
00:10:33,710 --> 00:10:39,620
I was from measuring performance

210
00:10:36,460 --> 00:10:42,920
<font color="#E5E5E5">according</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> 325 44 to stand on</font>

211
00:10:39,620 --> 00:10:44,510
intel-based<font color="#CCCCCC"> servers hosts and guests on</font>

212
00:10:42,920 --> 00:10:47,569
the device<font color="#E5E5E5"> and a test by</font><font color="#CCCCCC"> running</font>

213
00:10:44,510 --> 00:10:50,150
relevant for at the time the petrous

214
00:10:47,570 --> 00:10:53,300
<font color="#E5E5E5">were based on the PDK version 17</font><font color="#CCCCCC"> 11 and</font>

215
00:10:50,150 --> 00:10:58,819
the<font color="#E5E5E5"> patches are now available on github</font>

216
00:10:53,300 --> 00:11:01,760
and hopefully soon also upstream so

217
00:10:58,820 --> 00:11:04,400
apart from micro benchmarks this is the

218
00:11:01,760 --> 00:11:08,270
<font color="#CCCCCC">only real test run I managed</font><font color="#E5E5E5"> to do</font>

219
00:11:04,400 --> 00:11:12,340
before this talk<font color="#E5E5E5"> so with 64 byte packets</font>

220
00:11:08,270 --> 00:11:17,329
<font color="#E5E5E5">who measured we measure</font><font color="#CCCCCC"> the boost from</font>

221
00:11:12,340 --> 00:11:20,570
<font color="#CCCCCC">18.8 to 22.6 Mbps and well</font><font color="#E5E5E5"> this is using</font>

222
00:11:17,330 --> 00:11:23,240
slow<font color="#CCCCCC"> Nix so larger packets simply</font><font color="#E5E5E5"> hit</font>

223
00:11:20,570 --> 00:11:27,830
wire speed on the<font color="#CCCCCC"> setup and I'm working</font>

224
00:11:23,240 --> 00:11:30,470
<font color="#E5E5E5">on benchmarking with larger packets so</font>

225
00:11:27,830 --> 00:11:34,880
if someone is<font color="#E5E5E5"> here familiar with</font><font color="#CCCCCC"> tier X</font>

226
00:11:30,470 --> 00:11:37,250
<font color="#E5E5E5">and in combination</font><font color="#CCCCCC"> with 607 t10 internal</font>

227
00:11:34,880 --> 00:11:43,310
<font color="#E5E5E5">NICs then</font><font color="#CCCCCC"> please talk to</font><font color="#E5E5E5"> me have some</font>

228
00:11:37,250 --> 00:11:47,810
questions yeah so I think we can

229
00:11:43,310 --> 00:11:50,119
conclude that virtues as defined in<font color="#CCCCCC"> 1</font>

230
00:11:47,810 --> 00:11:52,069
dot o are not an optimal data structure

231
00:11:50,120 --> 00:11:54,860
for<font color="#CCCCCC"> host to gas communication and also</font>

232
00:11:52,070 --> 00:11:57,830
<font color="#CCCCCC">not perfectly fine for an easy</font>

233
00:11:54,860 --> 00:11:59,660
implementation hardware<font color="#E5E5E5"> and we're trying</font>

234
00:11:57,830 --> 00:12:05,090
to make this better with what I<font color="#CCCCCC"> wondered</font>

235
00:11:59,660 --> 00:12:07,670
one<font color="#E5E5E5"> on by the way if you want</font><font color="#CCCCCC"> to</font>

236
00:12:05,090 --> 00:12:09,890
<font color="#E5E5E5">participate and</font><font color="#CCCCCC"> rather or work on</font>

237
00:12:07,670 --> 00:12:11,300
whatever specification or you have a new

238
00:12:09,890 --> 00:12:14,060
<font color="#CCCCCC">feature that you want to add you have a</font>

239
00:12:11,300 --> 00:12:16,630
new device that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to add this is</font>

240
00:12:14,060 --> 00:12:18,680
actually<font color="#E5E5E5"> quite easy and also fun to</font>

241
00:12:16,630 --> 00:12:21,740
<font color="#CCCCCC">basically just download</font><font color="#E5E5E5"> your</font>

242
00:12:18,680 --> 00:12:24,650
specification source from<font color="#CCCCCC"> github you</font>

243
00:12:21,740 --> 00:12:27,770
edited its lattice so you have to build

244
00:12:24,650 --> 00:12:30,970
it<font color="#CCCCCC"> compile it and</font><font color="#E5E5E5"> took that to make sure</font>

245
00:12:27,770 --> 00:12:34,430
<font color="#CCCCCC">it looks right</font><font color="#E5E5E5"> and once you've</font><font color="#CCCCCC"> done this</font>

246
00:12:30,970 --> 00:12:38,390
<font color="#E5E5E5">you</font><font color="#CCCCCC"> basically just subscribe to this</font>

247
00:12:34,430 --> 00:12:41,120
<font color="#E5E5E5">video comment mailing list</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> to</font>

248
00:12:38,390 --> 00:12:43,270
reply to confirm your subscription<font color="#E5E5E5"> and</font>

249
00:12:41,120 --> 00:12:45,329
then<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> send your actual</font>

250
00:12:43,270 --> 00:12:49,379
sometimes it's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> one-line</font>

251
00:12:45,329 --> 00:12:50,758
fetch<font color="#CCCCCC"> to reserve just a future bet we</font>

252
00:12:49,379 --> 00:12:53,309
send it to<font color="#CCCCCC"> the mailing list and</font>

253
00:12:50,759 --> 00:12:54,869
everyone's okay<font color="#CCCCCC"> with it then you</font><font color="#E5E5E5"> send</font>

254
00:12:53,309 --> 00:12:57,360
<font color="#CCCCCC">another</font><font color="#E5E5E5"> mail and asked for Bella to</font>

255
00:12:54,869 --> 00:13:00,809
spell<font color="#CCCCCC"> it will run for for a week and</font>

256
00:12:57,360 --> 00:13:09,389
<font color="#E5E5E5">after two weeks of all goes well your</font>

257
00:13:00,809 --> 00:13:11,910
future<font color="#CCCCCC"> is in the specification yet so</font>

258
00:13:09,389 --> 00:13:15,149
that's<font color="#E5E5E5"> the part of my talk but I wanted</font>

259
00:13:11,910 --> 00:13:19,019
to<font color="#E5E5E5"> I was going to talk about your vital</font>

260
00:13:15,149 --> 00:13:21,329
specification now I have some actually

261
00:13:19,019 --> 00:13:25,259
two things<font color="#E5E5E5"> that I wanted</font><font color="#CCCCCC"> to mention that</font>

262
00:13:21,329 --> 00:13:29,670
<font color="#E5E5E5">I</font><font color="#CCCCCC"> think are interesting so one thing is</font>

263
00:13:25,259 --> 00:13:32,670
a<font color="#E5E5E5"> project initiated by Intel PDP a it's</font>

264
00:13:29,670 --> 00:13:37,368
<font color="#E5E5E5">called</font><font color="#CCCCCC"> a virtual</font><font color="#E5E5E5"> data pace data path</font>

265
00:13:32,670 --> 00:13:40,199
accelerator<font color="#E5E5E5"> and</font><font color="#CCCCCC"> also better</font><font color="#E5E5E5"> o as a</font>

266
00:13:37,369 --> 00:13:42,239
<font color="#E5E5E5">paravirtualized device you know</font>

267
00:13:40,199 --> 00:13:44,429
<font color="#CCCCCC">decouples your VM and your physical</font>

268
00:13:42,239 --> 00:13:46,529
devices and that's nice and cloud

269
00:13:44,429 --> 00:13:49,350
environments<font color="#CCCCCC"> because you can easily live</font>

270
00:13:46,529 --> 00:13:52,049
<font color="#CCCCCC">migrate time and so on</font><font color="#E5E5E5"> but in terms of</font>

271
00:13:49,350 --> 00:13:54,179
north-south traffic that doesn't compare

272
00:13:52,049 --> 00:13:58,019
to for example<font color="#CCCCCC"> s RI of the device</font>

273
00:13:54,179 --> 00:14:01,079
obviously<font color="#E5E5E5"> now this picture here which is</font>

274
00:13:58,019 --> 00:14:03,119
probably<font color="#CCCCCC"> not easy to read um it shows</font>

275
00:14:01,079 --> 00:14:11,309
how<font color="#CCCCCC"> it looks without an accelerator</font>

276
00:14:03,119 --> 00:14:14,959
device and<font color="#CCCCCC"> Inter is now working on a</font>

277
00:14:11,309 --> 00:14:20,549
framework<font color="#CCCCCC"> to make</font><font color="#E5E5E5"> it easier</font><font color="#CCCCCC"> to use video</font>

278
00:14:14,959 --> 00:14:24,410
accelerator device so<font color="#E5E5E5"> essentially this</font>

279
00:14:20,549 --> 00:14:27,389
will allow you<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> hardware that can</font>

280
00:14:24,410 --> 00:14:32,488
write and<font color="#E5E5E5"> read the weather all</font><font color="#CCCCCC"> viren</font>

281
00:14:27,389 --> 00:14:36,679
format and it will get you basically<font color="#CCCCCC"> SL</font>

282
00:14:32,489 --> 00:14:40,679
<font color="#CCCCCC">IV like performance and in the data path</font>

283
00:14:36,679 --> 00:14:46,110
<font color="#CCCCCC">and the way they did this will also make</font>

284
00:14:40,679 --> 00:14:47,819
it easier<font color="#CCCCCC"> to barely switch from a</font><font color="#E5E5E5"> set up</font>

285
00:14:46,110 --> 00:14:51,600
where<font color="#CCCCCC"> you</font><font color="#E5E5E5"> just use</font><font color="#CCCCCC"> normal</font><font color="#E5E5E5"> data i/o to</font>

286
00:14:47,819 --> 00:14:55,589
one<font color="#E5E5E5"> that so far that's actually using</font><font color="#CCCCCC"> an</font>

287
00:14:51,600 --> 00:14:58,289
accelerator device so this<font color="#E5E5E5"> picture</font>

288
00:14:55,589 --> 00:14:58,889
includes the external<font color="#E5E5E5"> device and as you</font>

289
00:14:58,289 --> 00:15:01,619
can<font color="#E5E5E5"> see</font>

290
00:14:58,889 --> 00:15:04,709
the control<font color="#CCCCCC"> class is still emulated but</font>

291
00:15:01,619 --> 00:15:09,290
this is not a bad<font color="#CCCCCC"> thing because it's</font><font color="#E5E5E5"> not</font>

292
00:15:04,709 --> 00:15:14,429
<font color="#E5E5E5">performance</font><font color="#CCCCCC"> critical but the data path</font>

293
00:15:09,290 --> 00:15:18,439
is now handled by this<font color="#E5E5E5"> hybrid device and</font>

294
00:15:14,429 --> 00:15:21,119
that<font color="#CCCCCC"> can write directly</font><font color="#E5E5E5"> into the viewing</font>

295
00:15:18,439 --> 00:15:24,029
yeah the solution<font color="#CCCCCC"> well you would usually</font>

296
00:15:21,119 --> 00:15:26,160
do<font color="#CCCCCC"> Pecha dial</font><font color="#E5E5E5"> via shared memory</font><font color="#CCCCCC"> and</font>

297
00:15:24,029 --> 00:15:29,879
interrupts by<font color="#E5E5E5"> irq of these and kicks</font>

298
00:15:26,160 --> 00:15:34,529
<font color="#E5E5E5">doorbell by our identities</font><font color="#CCCCCC"> back-end then</font>

299
00:15:29,879 --> 00:15:36,209
would be hosted<font color="#CCCCCC"> or user but will</font><font color="#E5E5E5"> speedy</font>

300
00:15:34,529 --> 00:15:39,239
<font color="#E5E5E5">PA that's a bit different you have the</font>

301
00:15:36,209 --> 00:15:41,579
<font color="#CCCCCC">jogger</font><font color="#E5E5E5"> kick and just could be depending</font>

302
00:15:39,239 --> 00:15:43,319
on your<font color="#CCCCCC"> guest either part IO based or if</font>

303
00:15:41,579 --> 00:15:47,008
you have a newer<font color="#CCCCCC"> Gaston would</font><font color="#E5E5E5"> be a</font><font color="#CCCCCC"> mile</font>

304
00:15:43,319 --> 00:15:50,729
<font color="#E5E5E5">mapped interrupt notification here is</font>

305
00:15:47,009 --> 00:15:53,249
done via<font color="#CCCCCC"> efi all</font><font color="#E5E5E5"> interrupts</font><font color="#CCCCCC"> lack and</font>

306
00:15:50,730 --> 00:15:55,769
<font color="#CCCCCC">pass-through devices</font><font color="#E5E5E5"> and as I said an</font>

307
00:15:53,249 --> 00:15:59,999
qdq to the<font color="#CCCCCC"> wielding establish the</font>

308
00:15:55,769 --> 00:16:02,369
accelerator device it's also using<font color="#E5E5E5"> vfo</font>

309
00:15:59,999 --> 00:16:07,589
<font color="#E5E5E5">and therefore address space access into</font>

310
00:16:02,369 --> 00:16:09,269
DVM<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the control</font><font color="#E5E5E5"> path is set up by v</font>

311
00:16:07,589 --> 00:16:13,290
host user for the core messages

312
00:16:09,269 --> 00:16:16,069
basically also was mentioning that<font color="#E5E5E5"> here</font>

313
00:16:13,290 --> 00:16:19,129
it's currently not<font color="#CCCCCC"> using</font><font color="#E5E5E5"> a virtual iommu</font>

314
00:16:16,069 --> 00:16:25,319
<font color="#E5E5E5">but that's something we're looking into</font>

315
00:16:19,129 --> 00:16:27,869
<font color="#E5E5E5">that should be improved so well you</font>

316
00:16:25,319 --> 00:16:29,759
might ask if you have a<font color="#CCCCCC"> varial capable</font>

317
00:16:27,869 --> 00:16:33,989
device why don't you just pass through

318
00:16:29,759 --> 00:16:37,410
the entire device to the guest and what

319
00:16:33,989 --> 00:16:39,779
have several reasons<font color="#CCCCCC"> why might not want</font>

320
00:16:37,410 --> 00:16:42,419
<font color="#E5E5E5">to do this and one</font><font color="#CCCCCC"> is that where I was</font>

321
00:16:39,779 --> 00:16:44,299
<font color="#CCCCCC">the Crone spec and things there wasn't</font>

322
00:16:42,419 --> 00:16:48,119
step and<font color="#E5E5E5"> the hardware implementation</font>

323
00:16:44,299 --> 00:16:52,230
<font color="#E5E5E5">would have to keep up with the spec all</font>

324
00:16:48,119 --> 00:16:54,989
the time kind<font color="#E5E5E5"> of unlikely also physical</font>

325
00:16:52,230 --> 00:16:56,699
functions have a lot more<font color="#E5E5E5"> features and</font>

326
00:16:54,989 --> 00:16:58,289
metadata<font color="#E5E5E5"> and so on that a virtual</font>

327
00:16:56,699 --> 00:17:02,279
<font color="#E5E5E5">function</font><font color="#CCCCCC"> doesn't really need</font><font color="#E5E5E5"> to care</font>

328
00:16:58,289 --> 00:17:05,039
<font color="#E5E5E5">about you would inherit all the</font>

329
00:17:02,279 --> 00:17:07,289
<font color="#CCCCCC">pass-through properties and that</font>

330
00:17:05,039 --> 00:17:10,490
includes<font color="#CCCCCC"> also it's harder to</font><font color="#E5E5E5"> live</font>

331
00:17:07,289 --> 00:17:18,470
migrate<font color="#CCCCCC"> without having when no specific</font>

332
00:17:10,490 --> 00:17:21,890
<font color="#E5E5E5">solutions so yeah example in</font><font color="#CCCCCC"> brother'll</font>

333
00:17:18,470 --> 00:17:23,600
<font color="#E5E5E5">0 95 you couldn't really pass through a</font>

334
00:17:21,890 --> 00:17:26,750
device<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> guest because all the</font>

335
00:17:23,599 --> 00:17:31,689
register base<font color="#E5E5E5"> axis was what</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> all based</font>

336
00:17:26,750 --> 00:17:34,580
and eventually the major reason is<font color="#E5E5E5"> that</font>

337
00:17:31,690 --> 00:17:36,740
<font color="#E5E5E5">the nice thing about</font><font color="#CCCCCC"> whether you decid</font>

338
00:17:34,580 --> 00:17:39,770
is that you have a front end<font color="#E5E5E5"> and a back</font>

339
00:17:36,740 --> 00:17:42,580
<font color="#E5E5E5">end and that's decoupled and you can</font>

340
00:17:39,770 --> 00:17:45,530
combine<font color="#E5E5E5"> things so the front end is often</font>

341
00:17:42,580 --> 00:17:50,270
<font color="#CCCCCC">that aesthetic but in the back end</font><font color="#E5E5E5"> it's</font>

342
00:17:45,530 --> 00:17:56,840
more common to have<font color="#CCCCCC"> a choice</font><font color="#E5E5E5"> of the</font>

343
00:17:50,270 --> 00:18:00,160
actual blood i/o back end<font color="#E5E5E5"> okay um this</font>

344
00:17:56,840 --> 00:18:03,649
is another project<font color="#E5E5E5"> that's currently in</font>

345
00:18:00,160 --> 00:18:05,380
<font color="#CCCCCC">the works</font><font color="#E5E5E5"> it's also I'm started by Intel</font>

346
00:18:03,650 --> 00:18:07,940
<font color="#E5E5E5">and this is more about efficient</font>

347
00:18:05,380 --> 00:18:13,280
<font color="#CCCCCC">east/west communication between virtual</font>

348
00:18:07,940 --> 00:18:15,860
machines<font color="#CCCCCC"> so imagine you have a set</font><font color="#E5E5E5"> of</font>

349
00:18:13,280 --> 00:18:17,750
virtual<font color="#E5E5E5"> network functions like I don't</font>

350
00:18:15,860 --> 00:18:19,969
<font color="#E5E5E5">know firewall intrusion detection system</font>

351
00:18:17,750 --> 00:18:23,030
route or whatever and they need to

352
00:18:19,970 --> 00:18:25,760
<font color="#E5E5E5">follow up packets to each other you</font>

353
00:18:23,030 --> 00:18:27,649
would usually put<font color="#E5E5E5"> them into a virtual</font>

354
00:18:25,760 --> 00:18:30,379
switch<font color="#CCCCCC"> in the host and</font><font color="#E5E5E5"> then take it</font>

355
00:18:27,650 --> 00:18:34,340
<font color="#E5E5E5">SCADA there and I transferred one by one</font>

356
00:18:30,380 --> 00:18:36,559
or<font color="#CCCCCC"> to the target young and so not such a</font>

357
00:18:34,340 --> 00:18:41,149
<font color="#CCCCCC">set you have like a long code path and</font>

358
00:18:36,559 --> 00:18:43,910
it doesn't<font color="#E5E5E5"> always scale very well but</font>

359
00:18:41,150 --> 00:18:47,300
<font color="#CCCCCC">what if instead you could send packets</font>

360
00:18:43,910 --> 00:18:49,550
directly from to the target VM without

361
00:18:47,300 --> 00:18:52,909
going<font color="#E5E5E5"> having the data</font><font color="#CCCCCC"> pass going</font><font color="#E5E5E5"> through</font>

362
00:18:49,550 --> 00:18:58,909
the<font color="#CCCCCC"> host code path would</font><font color="#E5E5E5"> be shorter</font><font color="#CCCCCC"> and</font>

363
00:18:52,910 --> 00:19:01,309
it would be<font color="#E5E5E5"> also easier</font><font color="#CCCCCC"> to scale now the</font>

364
00:18:58,910 --> 00:19:04,250
way this works<font color="#E5E5E5"> here is that they</font><font color="#CCCCCC"> have</font>

365
00:19:01,309 --> 00:19:06,889
<font color="#E5E5E5">introduced a new set of vos PCI devices</font>

366
00:19:04,250 --> 00:19:10,429
that you<font color="#CCCCCC"> have in the yams</font><font color="#E5E5E5"> and also V</font>

367
00:19:06,890 --> 00:19:13,610
host<font color="#CCCCCC"> T CIA server and as a central</font>

368
00:19:10,429 --> 00:19:16,790
component in one of the<font color="#E5E5E5"> games and they</font>

369
00:19:13,610 --> 00:19:19,219
<font color="#CCCCCC">are</font><font color="#E5E5E5"> connected by a</font><font color="#CCCCCC"> UNIX</font><font color="#E5E5E5"> sockets and they</font>

370
00:19:16,790 --> 00:19:22,860
speak the existing<font color="#CCCCCC"> vo souza protocol</font>

371
00:19:19,220 --> 00:19:27,960
over<font color="#CCCCCC"> that step things up</font>

372
00:19:22,860 --> 00:19:30,840
so there's a<font color="#E5E5E5"> presentation from</font><font color="#CCCCCC"> KVM forum</font>

373
00:19:27,960 --> 00:19:32,400
about<font color="#CCCCCC"> this</font><font color="#E5E5E5"> just also</font><font color="#CCCCCC"> recording video on</font>

374
00:19:30,840 --> 00:19:35,909
<font color="#CCCCCC">youtube</font><font color="#E5E5E5"> if you were more interested in</font>

375
00:19:32,400 --> 00:19:37,350
<font color="#E5E5E5">this the current status is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> Petrus</font>

376
00:19:35,910 --> 00:19:40,490
on the mailing list<font color="#E5E5E5"> and are being</font>

377
00:19:37,350 --> 00:19:44,580
<font color="#E5E5E5">discussed there are still some design</font>

378
00:19:40,490 --> 00:19:47,310
discussions and so the thing was<font color="#CCCCCC"> that</font>

379
00:19:44,580 --> 00:19:49,669
<font color="#E5E5E5">the way they wanted to do this would</font>

380
00:19:47,310 --> 00:19:53,389
<font color="#E5E5E5">also introduce a lot</font><font color="#CCCCCC"> of code duplication</font>

381
00:19:49,670 --> 00:19:57,720
<font color="#CCCCCC">especially in the</font><font color="#E5E5E5"> V host user part so</font>

382
00:19:53,390 --> 00:20:03,060
Stefan<font color="#E5E5E5"> high energy suggested that they</font>

383
00:19:57,720 --> 00:20:07,080
could use<font color="#CCCCCC"> something similar</font><font color="#E5E5E5"> and okay so</font>

384
00:20:03,060 --> 00:20:09,060
what<font color="#E5E5E5"> IO devices usually</font><font color="#CCCCCC"> we're just you</font>

385
00:20:07,080 --> 00:20:12,360
know<font color="#CCCCCC"> you had</font><font color="#E5E5E5"> your driver</font><font color="#CCCCCC"> and a guest in</font>

386
00:20:09,060 --> 00:20:15,419
yet and later device and<font color="#CCCCCC"> qmu and ho</font>

387
00:20:12,360 --> 00:20:18,000
studio space process<font color="#E5E5E5"> and then it evolved</font>

388
00:20:15,420 --> 00:20:20,790
you had<font color="#E5E5E5"> so vo the</font><font color="#CCCCCC"> V host came along</font>

389
00:20:18,000 --> 00:20:23,990
<font color="#E5E5E5">which kind of allowed you to implement</font>

390
00:20:20,790 --> 00:20:29,159
<font color="#E5E5E5">part of the Verdi or</font><font color="#CCCCCC"> back-end and the</font>

391
00:20:23,990 --> 00:20:31,110
<font color="#E5E5E5">kernel in user space and then the next</font>

392
00:20:29,160 --> 00:20:34,680
thing was<font color="#E5E5E5"> actually the host user which</font>

393
00:20:31,110 --> 00:20:36,449
would allow you to<font color="#E5E5E5"> implement this</font><font color="#CCCCCC"> tag</font>

394
00:20:34,680 --> 00:20:40,830
<font color="#CCCCCC">and</font><font color="#E5E5E5"> in the user space process and the</font>

395
00:20:36,450 --> 00:20:43,530
host now<font color="#CCCCCC"> what I'll do is user is kind</font><font color="#E5E5E5"> of</font>

396
00:20:40,830 --> 00:20:46,290
taking this even one step<font color="#CCCCCC"> further</font><font color="#E5E5E5"> by</font>

397
00:20:43,530 --> 00:20:50,820
moving the<font color="#E5E5E5"> V host device back end into</font>

398
00:20:46,290 --> 00:20:53,399
the guest and it works by tunneling to v

399
00:20:50,820 --> 00:20:56,490
OS user protocol over a new<font color="#CCCCCC"> vertical</font>

400
00:20:53,400 --> 00:21:01,890
<font color="#E5E5E5">device type which is</font><font color="#CCCCCC"> called what our</font>

401
00:20:56,490 --> 00:21:06,330
videos user so yeah the<font color="#E5E5E5"> final type of</font>

402
00:21:01,890 --> 00:21:10,740
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> show this so in this diagram bm2</font>

403
00:21:06,330 --> 00:21:14,610
sees a regular but our net device<font color="#CCCCCC"> be on</font>

404
00:21:10,740 --> 00:21:17,430
tooth<font color="#CCCCCC"> um u uses the existing</font><font color="#E5E5E5"> views a</font>

405
00:21:14,610 --> 00:21:21,320
feature<font color="#E5E5E5"> like if it were talking to host</font>

406
00:21:17,430 --> 00:21:25,740
user space<font color="#E5E5E5"> B host user back end and then</font>

407
00:21:21,320 --> 00:21:28,889
virtual machine 1qm you will tunnel the

408
00:21:25,740 --> 00:21:31,500
<font color="#CCCCCC">user protocol messages from</font><font color="#E5E5E5"> beyond ones</font>

409
00:21:28,890 --> 00:21:36,360
<font color="#E5E5E5">um you to the new word I of us use the</font>

410
00:21:31,500 --> 00:21:41,790
device so that<font color="#E5E5E5"> guest software and VM one</font>

411
00:21:36,360 --> 00:21:44,969
<font color="#E5E5E5">as to be a host user back-end now it's</font>

412
00:21:41,790 --> 00:21:48,510
possible to<font color="#E5E5E5"> reuse</font><font color="#CCCCCC"> existing videos to</font><font color="#E5E5E5"> the</font>

413
00:21:44,970 --> 00:21:52,679
back and software this<font color="#CCCCCC"> but a user since</font>

414
00:21:48,510 --> 00:21:55,920
they<font color="#E5E5E5"> use the same</font><font color="#CCCCCC"> protocol right</font><font color="#E5E5E5"> now a</font>

415
00:21:52,679 --> 00:22:01,980
driver is required<font color="#E5E5E5"> here for the</font><font color="#CCCCCC"> various</font>

416
00:21:55,920 --> 00:22:04,200
<font color="#CCCCCC">user PCI device so that</font><font color="#E5E5E5"> code has to be</font>

417
00:22:01,980 --> 00:22:06,540
<font color="#E5E5E5">read for that as well and the V host</font>

418
00:22:04,200 --> 00:22:10,169
device<font color="#CCCCCC"> back-end earrings they are</font>

419
00:22:06,540 --> 00:22:12,480
<font color="#E5E5E5">accessed</font><font color="#CCCCCC"> through share memory and do not</font>

420
00:22:10,169 --> 00:22:15,570
require<font color="#CCCCCC"> view through the</font><font color="#E5E5E5"> messages to be</font>

421
00:22:12,480 --> 00:22:19,260
exchanged<font color="#CCCCCC"> in a data</font><font color="#E5E5E5"> path so</font><font color="#CCCCCC"> no VM exits</font>

422
00:22:15,570 --> 00:22:21,659
are taking here<font color="#CCCCCC"> when formulas used of</font>

423
00:22:19,260 --> 00:22:25,230
<font color="#CCCCCC">course</font><font color="#E5E5E5"> not at all but even when</font>

424
00:22:21,660 --> 00:22:27,390
interrupts are used then<font color="#CCCCCC"> humne</font><font color="#E5E5E5"> was not</font>

425
00:22:25,230 --> 00:22:32,330
involved<font color="#E5E5E5"> here because we can</font><font color="#CCCCCC"> use the</font>

426
00:22:27,390 --> 00:22:32,330
lightweight<font color="#CCCCCC"> IO a vent of the</font><font color="#E5E5E5"> VM excerpts</font>

427
00:22:34,000 --> 00:22:37,089
[Music]

428
00:22:37,610 --> 00:22:47,600
yeah so Java<font color="#E5E5E5"> can be implemented in guest</font>

429
00:22:41,850 --> 00:22:51,629
user space process using<font color="#E5E5E5"> Linux VF IO PCI</font>

430
00:22:47,600 --> 00:22:53,000
but also<font color="#CCCCCC"> guest ranadivé implementation</font>

431
00:22:51,630 --> 00:22:56,130
would<font color="#E5E5E5"> be possible</font>

432
00:22:53,000 --> 00:23:02,160
also the be host device back and

433
00:22:56,130 --> 00:23:04,880
earrings as I said access just using

434
00:23:02,160 --> 00:23:04,880
<font color="#E5E5E5">shared memory</font>

435
00:23:05,340 --> 00:23:10,530
it's also worth pointing out that just

436
00:23:06,990 --> 00:23:16,559
works<font color="#CCCCCC"> for</font><font color="#E5E5E5"> net device this block devices</font>

437
00:23:10,530 --> 00:23:20,070
<font color="#CCCCCC">gauzy</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> so on another</font><font color="#E5E5E5"> thing I</font><font color="#CCCCCC"> think I</font>

438
00:23:16,559 --> 00:23:22,100
might skip<font color="#E5E5E5"> this year much time</font><font color="#CCCCCC"> we have</font>

439
00:23:20,070 --> 00:23:22,100
left

440
00:23:22,160 --> 00:23:27,570
<font color="#CCCCCC">ok then I mattress script is</font><font color="#E5E5E5"> a</font>

441
00:23:25,220 --> 00:23:31,010
<font color="#CCCCCC">one-sentence so this is just</font><font color="#E5E5E5"> a new idea</font>

442
00:23:27,570 --> 00:23:34,139
<font color="#CCCCCC">to do transparent bonding and</font><font color="#E5E5E5"> a guest by</font>

443
00:23:31,010 --> 00:23:36,929
without having complex configuration by

444
00:23:34,140 --> 00:23:38,790
the user<font color="#E5E5E5"> so the idea is to</font><font color="#CCCCCC"> just have a</font>

445
00:23:36,929 --> 00:23:42,059
video device that has a special<font color="#CCCCCC"> feature</font>

446
00:23:38,790 --> 00:23:44,610
flag and if the<font color="#CCCCCC"> speech of like a scene</font>

447
00:23:42,059 --> 00:23:47,370
<font color="#CCCCCC">in a guest then it we can go and look</font>

448
00:23:44,610 --> 00:23:48,780
for<font color="#E5E5E5"> another</font><font color="#CCCCCC"> SIV device that we can bond</font>

449
00:23:47,370 --> 00:23:51,629
with and then

450
00:23:48,780 --> 00:23:54,180
we could have always<font color="#CCCCCC"> just a fast data</font>

451
00:23:51,630 --> 00:23:57,150
pass over the<font color="#CCCCCC"> SLV device and for</font>

452
00:23:54,180 --> 00:24:00,390
<font color="#E5E5E5">migration we could just put the link of</font>

453
00:23:57,150 --> 00:24:03,960
<font color="#E5E5E5">the</font><font color="#CCCCCC"> SLV</font><font color="#E5E5E5"> device down and then switch over</font>

454
00:24:00,390 --> 00:24:05,910
<font color="#E5E5E5">to whatever device to a migration and on</font>

455
00:24:03,960 --> 00:24:08,460
the target system<font color="#CCCCCC"> see is there another</font>

456
00:24:05,910 --> 00:24:11,850
capable as<font color="#CCCCCC"> IV device that we can</font><font color="#E5E5E5"> use for</font>

457
00:24:08,460 --> 00:24:13,370
data<font color="#CCCCCC"> paths</font><font color="#E5E5E5"> and if not we could just use</font>

458
00:24:11,850 --> 00:24:19,709
the<font color="#CCCCCC"> variable device</font>

459
00:24:13,370 --> 00:24:22,949
so yeah conclusion of my talk so<font color="#CCCCCC"> whether</font>

460
00:24:19,710 --> 00:24:26,580
<font color="#E5E5E5">or not one will be a rather big release</font>

461
00:24:22,950 --> 00:24:28,860
<font color="#CCCCCC">and there were many changes mostly for</font>

462
00:24:26,580 --> 00:24:30,570
the<font color="#CCCCCC"> Peck book use but also some</font><font color="#E5E5E5"> other</font>

463
00:24:28,860 --> 00:24:35,570
things<font color="#E5E5E5"> required for</font><font color="#CCCCCC"> heart</font>

464
00:24:30,570 --> 00:24:39,270
implementations it's worth<font color="#CCCCCC"> taking a look</font>

465
00:24:35,570 --> 00:24:40,830
<font color="#CCCCCC">TDK</font><font color="#E5E5E5"> implementation is available I didn't</font>

466
00:24:39,270 --> 00:24:43,940
put the link in here<font color="#E5E5E5"> but it was in a</font>

467
00:24:40,830 --> 00:24:47,129
<font color="#CCCCCC">previous slide so you</font><font color="#E5E5E5"> can look it up</font>

468
00:24:43,940 --> 00:24:49,770
also if<font color="#E5E5E5"> you're interested</font><font color="#CCCCCC"> in this</font><font color="#E5E5E5"> and in</font>

469
00:24:47,130 --> 00:24:51,810
participating we have<font color="#CCCCCC"> like a</font><font color="#E5E5E5"> monthly</font>

470
00:24:49,770 --> 00:24:54,180
meeting<font color="#E5E5E5"> a monthly call where we</font>

471
00:24:51,810 --> 00:24:56,280
discussed these things<font color="#CCCCCC"> better one-on-one</font>

472
00:24:54,180 --> 00:24:59,360
<font color="#CCCCCC">but not spar over</font><font color="#E5E5E5"> dial features and</font>

473
00:24:56,280 --> 00:25:01,860
you're<font color="#E5E5E5"> welcome to join just contact me</font>

474
00:24:59,360 --> 00:25:06,169
just quite a few companies already

475
00:25:01,860 --> 00:25:09,300
<font color="#CCCCCC">involved and you once are</font><font color="#E5E5E5"> always welcome</font>

476
00:25:06,170 --> 00:25:18,560
so that's the end of my talk<font color="#CCCCCC"> basically</font>

477
00:25:09,300 --> 00:25:18,560
are any questions as one

478
00:25:23,120 --> 00:25:33,360
yes<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> question was the</font>

479
00:25:31,140 --> 00:25:36,240
<font color="#E5E5E5">implementation of paraone</font><font color="#CCCCCC"> that one will</font>

480
00:25:33,360 --> 00:25:40,350
require changes to<font color="#CCCCCC"> qmu and what's the</font>

481
00:25:36,240 --> 00:25:42,780
timeline<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that so right now the next</font>

482
00:25:40,350 --> 00:25:46,949
<font color="#E5E5E5">target</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> to get things from upstream</font>

483
00:25:42,780 --> 00:25:50,570
and<font color="#CCCCCC"> DDK and we're at the moment already</font>

484
00:25:46,950 --> 00:26:07,520
started to<font color="#CCCCCC"> work on the</font><font color="#E5E5E5"> implementation so</font>

485
00:25:50,570 --> 00:26:12,149
as a few months any other questions so

486
00:26:07,520 --> 00:26:14,730
last talk of the day coming<font color="#CCCCCC"> up now in</font>

487
00:26:12,150 --> 00:26:19,169
just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> few minutes</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> Pablo Camarillo</font>

488
00:26:14,730 --> 00:26:22,549
<font color="#CCCCCC">I hope I pronounced ahead</font><font color="#E5E5E5"> and segment</font>

489
00:26:19,169 --> 00:26:22,549
routing v6 with VPP

490
00:26:27,730 --> 00:26:34,799
so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> actually twist</font><font color="#CCCCCC"> people oh</font><font color="#E5E5E5"> it is my</font>

491
00:26:31,799 --> 00:26:34,799
<font color="#E5E5E5">decision</font>

492
00:26:47,080 --> 00:27:16,040
plug it in<font color="#CCCCCC"> just get me</font><font color="#E5E5E5"> give it a lot of</font>

493
00:26:49,550 --> 00:27:17,870
time just<font color="#CCCCCC"> for those leaving</font><font color="#E5E5E5"> one last</font>

494
00:27:16,040 --> 00:27:22,220
reminder that we have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> meet up a little</font>

495
00:27:17,870 --> 00:27:25,850
<font color="#E5E5E5">bit later for the</font><font color="#CCCCCC"> SDN NF VW</font><font color="#E5E5E5"> in the</font>

496
00:27:22,220 --> 00:27:30,050
<font color="#E5E5E5">mannequin piss</font><font color="#CCCCCC"> cafe which is who</font><font color="#E5E5E5"> they</font>

497
00:27:25,850 --> 00:27:33,459
<font color="#E5E5E5">gon come I think around 7:30 so you're</font>

498
00:27:30,050 --> 00:27:33,460
welcome<font color="#CCCCCC"> to join us</font><font color="#E5E5E5"> thank</font><font color="#CCCCCC"> you</font>

499
00:27:42,940 --> 00:27:47,690
<font color="#CCCCCC">fifteen you can use the</font><font color="#E5E5E5"> full</font><font color="#CCCCCC"> 30.if you</font>

500
00:27:46,340 --> 00:27:49,760
want if you don't<font color="#CCCCCC"> want to take any</font>

501
00:27:47,690 --> 00:27:55,310
questions<font color="#E5E5E5"> but so whatever I tell you</font>

502
00:27:49,760 --> 00:27:58,460
<font color="#E5E5E5">that's Wendy okay okay so good afternoon</font>

503
00:27:55,310 --> 00:28:01,460
everyone<font color="#CCCCCC"> last</font><font color="#E5E5E5"> hope of today and then you</font>

504
00:27:58,460 --> 00:28:05,090
can go for beers<font color="#CCCCCC"> so this is my colleague</font>

505
00:28:01,460 --> 00:28:07,190
<font color="#CCCCCC">Amit</font><font color="#E5E5E5"> he's a</font><font color="#CCCCCC"> PhD student from Italy</font><font color="#E5E5E5"> and</font>

506
00:28:05,090 --> 00:28:08,659
<font color="#E5E5E5">I'm a software engineer at Cisco working</font>

507
00:28:07,190 --> 00:28:11,570
in the<font color="#CCCCCC"> Egmore Rajan architecture team</font>

508
00:28:08,660 --> 00:28:13,670
and today<font color="#E5E5E5"> I'm here</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> signal</font>

509
00:28:11,570 --> 00:28:15,230
routing which is something<font color="#E5E5E5"> quite</font>

510
00:28:13,670 --> 00:28:17,450
<font color="#CCCCCC">different from</font><font color="#E5E5E5"> all the talks that</font><font color="#CCCCCC"> we'll</font>

511
00:28:15,230 --> 00:28:19,880
<font color="#CCCCCC">be seeing</font><font color="#E5E5E5"> today because all of them were</font>

512
00:28:17,450 --> 00:28:21,500
focusing on<font color="#CCCCCC"> different platforms and this</font>

513
00:28:19,880 --> 00:28:24,170
one what<font color="#CCCCCC"> is focused is on the</font><font color="#E5E5E5"> actual</font>

514
00:28:21,500 --> 00:28:28,130
protocols on the network<font color="#E5E5E5"> actually on SP</font>

515
00:28:24,170 --> 00:28:29,960
networks and so what I'll try<font color="#E5E5E5"> to do is</font>

516
00:28:28,130 --> 00:28:31,790
give you a<font color="#CCCCCC"> brief overview</font><font color="#E5E5E5"> of signal</font>

517
00:28:29,960 --> 00:28:34,820
routing to<font color="#CCCCCC"> deployment use cases and then</font>

518
00:28:31,790 --> 00:28:36,889
talk a bit about<font color="#CCCCCC"> bbp</font><font color="#E5E5E5"> loops and</font><font color="#CCCCCC"> Sarah</font>

519
00:28:34,820 --> 00:28:39,439
which<font color="#E5E5E5"> you will see later what what it</font>

520
00:28:36,890 --> 00:28:42,080
actually is<font color="#CCCCCC"> so what is signal routing</font>

521
00:28:39,440 --> 00:28:44,180
the idea behind signal routing is that

522
00:28:42,080 --> 00:28:46,070
we actually leverage the<font color="#E5E5E5"> padding of</font>

523
00:28:44,180 --> 00:28:47,930
source routing<font color="#E5E5E5"> so what does this mean</font>

524
00:28:46,070 --> 00:28:50,000
<font color="#CCCCCC">that</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of programming all the</font>

525
00:28:47,930 --> 00:28:51,830
waters in the<font color="#CCCCCC"> netbook what</font><font color="#E5E5E5"> we are</font>

526
00:28:50,000 --> 00:28:54,260
actually doing<font color="#E5E5E5"> is that on the head end</font>

527
00:28:51,830 --> 00:28:56,960
we<font color="#E5E5E5"> are actually adding the</font><font color="#CCCCCC"> list of</font>

528
00:28:54,260 --> 00:28:58,790
segments<font color="#CCCCCC"> that</font><font color="#E5E5E5"> a packet has to</font><font color="#CCCCCC"> traverse</font>

529
00:28:56,960 --> 00:29:01,390
through the network<font color="#E5E5E5"> so what this means</font>

530
00:28:58,790 --> 00:29:03,500
<font color="#E5E5E5">is that if I want to go from madly to</font>

531
00:29:01,390 --> 00:29:05,270
Amsterdam by<font color="#CCCCCC"> a brussels what I</font>

532
00:29:03,500 --> 00:29:06,710
essentially is when<font color="#E5E5E5"> my packet is out</font>

533
00:29:05,270 --> 00:29:09,260
from Madrid I just add one<font color="#CCCCCC"> leader</font>

534
00:29:06,710 --> 00:29:11,030
<font color="#E5E5E5">segment</font><font color="#CCCCCC"> that is saying Brussels</font><font color="#E5E5E5"> and then</font>

535
00:29:09,260 --> 00:29:12,530
Amsterdam<font color="#E5E5E5"> and the packet will follow the</font>

536
00:29:11,030 --> 00:29:14,750
shortest path to Brussels and then you

537
00:29:12,530 --> 00:29:16,580
can go<font color="#E5E5E5"> to Amsterdam that's simple and</font>

538
00:29:14,750 --> 00:29:18,440
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually really</font><font color="#CCCCCC"> a scalable</font>

539
00:29:16,580 --> 00:29:21,020
because<font color="#E5E5E5"> what this means is that you can</font>

540
00:29:18,440 --> 00:29:24,080
implement any trafficking<font color="#E5E5E5"> policy that</font>

541
00:29:21,020 --> 00:29:26,180
you want and you<font color="#CCCCCC"> can actually put this</font>

542
00:29:24,080 --> 00:29:29,540
together<font color="#E5E5E5"> with any</font><font color="#CCCCCC"> NFP deployment that</font>

543
00:29:26,180 --> 00:29:31,490
<font color="#E5E5E5">you want and actually</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the main</font>

544
00:29:29,540 --> 00:29:33,260
benefits<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> we can have policies</font>

545
00:29:31,490 --> 00:29:36,440
and<font color="#CCCCCC"> - and so</font><font color="#E5E5E5"> starting from the data</font>

546
00:29:33,260 --> 00:29:41,629
center<font color="#CCCCCC"> and going traversing</font><font color="#E5E5E5"> the internal</font>

547
00:29:36,440 --> 00:29:42,980
networks through<font color="#CCCCCC"> Dimitra</font><font color="#E5E5E5"> on one so we</font>

548
00:29:41,630 --> 00:29:45,650
have two<font color="#E5E5E5"> data plane instantiations</font>

549
00:29:42,980 --> 00:29:48,260
<font color="#CCCCCC">monofin is</font><font color="#E5E5E5"> MPLS and the other one is</font>

550
00:29:45,650 --> 00:29:50,230
ipv6 so in MPLS what we are just doing

551
00:29:48,260 --> 00:29:53,230
is one segment<font color="#E5E5E5"> is one</font>

552
00:29:50,230 --> 00:29:55,660
<font color="#CCCCCC">let's label and that's</font><font color="#E5E5E5"> it the second</font>

553
00:29:53,230 --> 00:29:57,160
instantiation<font color="#E5E5E5"> is happy v6 so</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> in</font>

554
00:29:55,660 --> 00:29:59,560
<font color="#E5E5E5">hypothesis what we are doing is we are</font>

555
00:29:57,160 --> 00:30:03,460
<font color="#CCCCCC">using an ipv6 routing extension header</font>

556
00:29:59,560 --> 00:30:07,800
which it was defined<font color="#CCCCCC"> 15 years ago and</font><font color="#E5E5E5"> we</font>

557
00:30:03,460 --> 00:30:07,800
have one second<font color="#CCCCCC"> is one I've music</font>

