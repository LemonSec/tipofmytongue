1
00:00:04,620 --> 00:00:09,209
<font color="#E5E5E5">they introduced Holden</font><font color="#CCCCCC"> that will present</font>

2
00:00:07,200 --> 00:00:12,660
you<font color="#E5E5E5"> talk about distributed system</font>

3
00:00:09,209 --> 00:00:15,420
listing with I should have<font color="#CCCCCC"> cut me off</font>

4
00:00:12,660 --> 00:00:18,250
<font color="#E5E5E5">sparking Dean</font>

5
00:00:15,420 --> 00:00:22,990
<font color="#E5E5E5">Kefka is different I love the Kafka</font>

6
00:00:18,250 --> 00:00:25,300
people they're amazing you could use

7
00:00:22,990 --> 00:00:28,750
this<font color="#CCCCCC"> to test Kafka if you tried really</font>

8
00:00:25,300 --> 00:00:30,250
hard<font color="#CCCCCC"> but but the same techniques work</font><font color="#E5E5E5"> so</font>

9
00:00:28,750 --> 00:00:32,470
yeah<font color="#E5E5E5"> my name is Holden my preferred</font>

10
00:00:30,250 --> 00:00:35,620
pronouns<font color="#CCCCCC"> are she or her</font><font color="#E5E5E5"> I'm a developer</font>

11
00:00:32,470 --> 00:00:41,860
advocate at Google<font color="#CCCCCC"> I'm on the Patchi</font>

12
00:00:35,620 --> 00:00:44,440
SPARC PMC<font color="#CCCCCC"> which is nice but I'm very</font>

13
00:00:41,860 --> 00:00:46,090
recently<font color="#E5E5E5"> on the SPARC PMC so if you run</font>

14
00:00:44,440 --> 00:00:50,110
<font color="#CCCCCC">into SPARC bugs they are</font><font color="#E5E5E5"> definitely</font>

15
00:00:46,090 --> 00:00:52,239
someone else's fault only<font color="#CCCCCC"> things that</font>

16
00:00:50,110 --> 00:00:54,820
are new are my fault<font color="#E5E5E5"> I'm a co-author of</font>

17
00:00:52,239 --> 00:00:58,330
<font color="#E5E5E5">two books that O'Reilly is selling down</font>

18
00:00:54,820 --> 00:01:01,000
<font color="#E5E5E5">at the end of the hall</font><font color="#CCCCCC"> and you can</font>

19
00:00:58,330 --> 00:01:02,440
<font color="#E5E5E5">follow me on</font><font color="#CCCCCC"> Twitter and for the people</font>

20
00:01:01,000 --> 00:01:05,140
in the back you<font color="#CCCCCC"> probably cannot read</font>

21
00:01:02,440 --> 00:01:07,630
<font color="#E5E5E5">this bottom part but the slides are</font>

22
00:01:05,140 --> 00:01:10,510
already<font color="#E5E5E5"> linked from</font><font color="#CCCCCC"> the talk doesn't</font>

23
00:01:07,630 --> 00:01:11,949
talk abstract on<font color="#CCCCCC"> FOSDEM</font><font color="#E5E5E5"> so don't worry</font>

24
00:01:10,510 --> 00:01:13,990
<font color="#E5E5E5">about</font><font color="#CCCCCC"> it</font>

25
00:01:11,950 --> 00:01:16,330
if you're<font color="#E5E5E5"> really excited</font><font color="#CCCCCC"> about SPARC and</font>

26
00:01:13,990 --> 00:01:18,339
<font color="#CCCCCC">I'll talk about</font><font color="#E5E5E5"> testing</font><font color="#CCCCCC"> SPARC somehow</font>

27
00:01:16,330 --> 00:01:21,009
gets you excited to write more spark

28
00:01:18,340 --> 00:01:25,119
code I have a bunch of videos<font color="#CCCCCC"> on</font><font color="#E5E5E5"> SPARC</font>

29
00:01:21,009 --> 00:01:27,430
as well<font color="#CCCCCC"> so in addition</font><font color="#E5E5E5"> to being</font><font color="#CCCCCC"> Who I am</font>

30
00:01:25,119 --> 00:01:29,439
professionally I'm trans queer Canadian

31
00:01:27,430 --> 00:01:31,149
and part of<font color="#E5E5E5"> the leather community this</font>

32
00:01:29,439 --> 00:01:33,369
<font color="#CCCCCC">is not really</font><font color="#E5E5E5"> directly related to</font>

33
00:01:31,149 --> 00:01:34,780
<font color="#E5E5E5">anything I'm talking about</font><font color="#CCCCCC"> I just think</font>

34
00:01:33,369 --> 00:01:36,549
it's important to remember that<font color="#E5E5E5"> we all</font>

35
00:01:34,780 --> 00:01:37,750
come<font color="#CCCCCC"> from</font><font color="#E5E5E5"> different backgrounds and</font><font color="#CCCCCC"> we</font>

36
00:01:36,549 --> 00:01:40,030
should be nice<font color="#CCCCCC"> to each</font><font color="#E5E5E5"> other</font>

37
00:01:37,750 --> 00:01:42,789
there's no secret Canadian debugger that

38
00:01:40,030 --> 00:01:44,740
<font color="#E5E5E5">we've been hiding from you</font><font color="#CCCCCC"> we all have</font>

39
00:01:42,789 --> 00:01:48,189
<font color="#CCCCCC">no clue how to</font><font color="#E5E5E5"> debug our distributed</font>

40
00:01:44,740 --> 00:01:51,100
<font color="#CCCCCC">Java code like this is</font><font color="#E5E5E5"> well screwed but</font>

41
00:01:48,189 --> 00:01:53,320
if<font color="#E5E5E5"> we work together we can be you</font><font color="#CCCCCC"> know</font>

42
00:01:51,100 --> 00:01:57,219
get through<font color="#CCCCCC"> our</font><font color="#E5E5E5"> lives with only</font><font color="#CCCCCC"> minimal</font>

43
00:01:53,320 --> 00:01:59,109
amounts of sadness<font color="#E5E5E5"> okay cool</font><font color="#CCCCCC"> so I'm</font>

44
00:01:57,219 --> 00:02:00,548
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to talk about why you should</font><font color="#E5E5E5"> test</font>

45
00:01:59,109 --> 00:02:03,309
and validate your distributed systems

46
00:02:00,549 --> 00:02:06,069
admittedly<font color="#E5E5E5"> you showed up to a talk about</font>

47
00:02:03,310 --> 00:02:07,329
<font color="#E5E5E5">that so you probably care but a little</font>

48
00:02:06,069 --> 00:02:10,630
<font color="#E5E5E5">bit of preaching to the choir</font><font color="#CCCCCC"> II never</font>

49
00:02:07,329 --> 00:02:13,540
hurts<font color="#CCCCCC"> we'll look at normal unit testing</font>

50
00:02:10,630 --> 00:02:16,120
in spark and beam and then we'll talk

51
00:02:13,540 --> 00:02:17,890
<font color="#CCCCCC">about what happens when we actually need</font>

52
00:02:16,120 --> 00:02:19,210
<font color="#CCCCCC">to go from unit testing to try</font><font color="#E5E5E5"> and</font>

53
00:02:17,890 --> 00:02:21,100
testing some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the distributed</font>

54
00:02:19,210 --> 00:02:23,620
properties of our<font color="#E5E5E5"> system and how that</font>

55
00:02:21,100 --> 00:02:25,560
makes<font color="#E5E5E5"> us sad</font><font color="#CCCCCC"> but we can get through it</font>

56
00:02:23,620 --> 00:02:28,510
<font color="#E5E5E5">and then we'll talk about validation</font>

57
00:02:25,560 --> 00:02:30,159
<font color="#E5E5E5">because I think validation is really</font>

58
00:02:28,510 --> 00:02:32,798
and I keep<font color="#E5E5E5"> seeing people building</font>

59
00:02:30,159 --> 00:02:36,040
pipelines<font color="#E5E5E5"> with no validation</font><font color="#CCCCCC"> bills into</font>

60
00:02:32,799 --> 00:02:38,500
it it<font color="#CCCCCC"> just makes me sad and there will</font>

61
00:02:36,040 --> 00:02:40,048
be at<font color="#CCCCCC"> least one</font><font color="#E5E5E5"> panda I hope I may</font><font color="#CCCCCC"> have</font>

62
00:02:38,500 --> 00:02:45,220
actually<font color="#CCCCCC"> taken</font><font color="#E5E5E5"> the Panda</font><font color="#CCCCCC"> out by accident</font>

63
00:02:40,049 --> 00:02:46,689
<font color="#CCCCCC">and several cats and if you come</font><font color="#E5E5E5"> to my</font>

64
00:02:45,220 --> 00:02:49,269
talk<font color="#E5E5E5"> tomorrow</font>

65
00:02:46,689 --> 00:02:51,280
the content is different I do reuse cat

66
00:02:49,269 --> 00:02:54,069
pictures though it's it<font color="#E5E5E5"> takes a long</font>

67
00:02:51,280 --> 00:02:56,049
time to<font color="#E5E5E5"> art his only source these and</font>

68
00:02:54,069 --> 00:02:59,950
it's it's all about<font color="#CCCCCC"> the sustainable</font>

69
00:02:56,049 --> 00:03:01,780
<font color="#CCCCCC">Flickr harvest</font><font color="#E5E5E5"> the Creative Commons tags</font>

70
00:02:59,950 --> 00:03:04,060
just<font color="#CCCCCC"> are</font><font color="#E5E5E5"> refreshed as much as they</font><font color="#CCCCCC"> used</font>

71
00:03:01,780 --> 00:03:06,099
to<font color="#E5E5E5"> be so if</font><font color="#CCCCCC"> you got a cat please take</font>

72
00:03:04,060 --> 00:03:08,049
pictures of your cat<font color="#E5E5E5"> and upload them CC</font>

73
00:03:06,099 --> 00:03:11,888
license to Flickr<font color="#E5E5E5"> so that I can have</font>

74
00:03:08,049 --> 00:03:14,530
fresh cat pictures so I'm hoping you're

75
00:03:11,889 --> 00:03:17,709
nice people<font color="#CCCCCC"> you laughed at</font><font color="#E5E5E5"> my kind of</font>

76
00:03:14,530 --> 00:03:20,230
crappy jokes<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> probably</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> if you</font>

77
00:03:17,709 --> 00:03:22,079
don't<font color="#E5E5E5"> like silly pictures you're sort of</font>

78
00:03:20,230 --> 00:03:25,090
stuck<font color="#CCCCCC"> with</font><font color="#E5E5E5"> me although there is an exit</font>

79
00:03:22,079 --> 00:03:26,889
<font color="#E5E5E5">and you're probably familiar with one of</font>

80
00:03:25,090 --> 00:03:29,680
<font color="#CCCCCC">these</font><font color="#E5E5E5"> languages but apparently not all</font>

81
00:03:26,889 --> 00:03:31,120
of you<font color="#E5E5E5"> are</font><font color="#CCCCCC"> and so if there's</font><font color="#E5E5E5"> something</font>

82
00:03:29,680 --> 00:03:33,609
in an example<font color="#CCCCCC"> which doesn't make</font><font color="#E5E5E5"> sense</font>

83
00:03:31,120 --> 00:03:35,319
<font color="#CCCCCC">please raise your hand and I will</font>

84
00:03:33,609 --> 00:03:37,389
explain that<font color="#E5E5E5"> piece of syntax to you</font>

85
00:03:35,319 --> 00:03:40,030
because it<font color="#CCCCCC"> probably doesn't</font><font color="#E5E5E5"> make sense</font>

86
00:03:37,389 --> 00:03:41,410
to someone else<font color="#E5E5E5"> and it makes sense to</font><font color="#CCCCCC"> me</font>

87
00:03:40,030 --> 00:03:45,310
<font color="#E5E5E5">because I spend far too much time</font>

88
00:03:41,410 --> 00:03:48,698
<font color="#E5E5E5">writing code with underscores in it</font><font color="#CCCCCC"> and</font>

89
00:03:45,310 --> 00:03:52,419
it teaches<font color="#E5E5E5"> me bad habits</font><font color="#CCCCCC"> how many people</font>

90
00:03:48,699 --> 00:03:54,099
are familiar with spark that is a lot of

91
00:03:52,419 --> 00:03:57,760
people how many<font color="#E5E5E5"> people</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> familiar with</font>

92
00:03:54,099 --> 00:04:03,129
<font color="#E5E5E5">beam how many people came here for a</font>

93
00:03:57,760 --> 00:04:07,000
<font color="#E5E5E5">Kafka talk</font><font color="#CCCCCC"> I thank</font><font color="#E5E5E5"> God I'm sorry I'm</font>

94
00:04:03,129 --> 00:04:08,530
<font color="#E5E5E5">sorry okay regardless</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> if you're not</font>

95
00:04:07,000 --> 00:04:11,049
<font color="#E5E5E5">familiar with these</font><font color="#CCCCCC"> particular systems</font>

96
00:04:08,530 --> 00:04:13,840
<font color="#E5E5E5">I'm hoping that the same techniques can</font>

97
00:04:11,049 --> 00:04:15,609
apply to other<font color="#CCCCCC"> things the specific</font>

98
00:04:13,840 --> 00:04:16,840
libraries and code<font color="#E5E5E5"> examples that I'm</font>

99
00:04:15,609 --> 00:04:18,880
<font color="#CCCCCC">going to show you're gonna have to</font>

100
00:04:16,839 --> 00:04:20,469
rewrite but honestly<font color="#E5E5E5"> it's code on the</font>

101
00:04:18,880 --> 00:04:25,210
slide you<font color="#CCCCCC"> should probably</font><font color="#E5E5E5"> rewrite it</font>

102
00:04:20,470 --> 00:04:28,840
anyways cool<font color="#CCCCCC"> so why should we test it</font>

103
00:04:25,210 --> 00:04:31,448
makes us better<font color="#CCCCCC"> people and it avoids</font>

104
00:04:28,840 --> 00:04:35,770
making<font color="#E5E5E5"> our users angry</font><font color="#CCCCCC"> I have some funny</font>

105
00:04:31,449 --> 00:04:38,260
stories<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> which are under</font><font color="#E5E5E5"> NDA so</font>

106
00:04:35,770 --> 00:04:40,580
it's unfortunate<font color="#CCCCCC"> but they may involve</font>

107
00:04:38,260 --> 00:04:45,949
companies that sell books

108
00:04:40,580 --> 00:04:46,758
and that small<font color="#E5E5E5"> little search engine it</font>

109
00:04:45,949 --> 00:04:50,330
<font color="#E5E5E5">can help you save</font><font color="#CCCCCC"> money</font>

110
00:04:46,759 --> 00:04:52,099
AWS or Google<font color="#E5E5E5"> cloud is expensive</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if</font>

111
00:04:50,330 --> 00:04:54,169
we can catch our errors before<font color="#E5E5E5"> we put</font>

112
00:04:52,099 --> 00:04:55,840
them<font color="#E5E5E5"> into production</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can save having</font>

113
00:04:54,169 --> 00:04:57,948
<font color="#CCCCCC">their on</font><font color="#E5E5E5"> our pipeline a second time</font>

114
00:04:55,840 --> 00:05:00,258
<font color="#E5E5E5">repeating</font><font color="#CCCCCC"> the mistakes which I'm not</font>

115
00:04:57,949 --> 00:05:02,090
legally<font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> to discuss is not a lot</font>

116
00:05:00,259 --> 00:05:04,280
of<font color="#E5E5E5"> fun</font><font color="#CCCCCC"> I didn't have to find a new job</font>

117
00:05:02,090 --> 00:05:06,020
<font color="#E5E5E5">after any of these but that's mostly</font>

118
00:05:04,280 --> 00:05:09,049
<font color="#CCCCCC">because in California it's really hard</font>

119
00:05:06,020 --> 00:05:11,930
to hire engineers<font color="#CCCCCC"> and honestly you</font>

120
00:05:09,050 --> 00:05:13,460
probably<font color="#CCCCCC"> already care what</font><font color="#E5E5E5"> validation</font>

121
00:05:11,930 --> 00:05:16,969
<font color="#E5E5E5">I'm not sure if you all care about</font>

122
00:05:13,460 --> 00:05:19,849
<font color="#E5E5E5">validation so fundamentally the idea</font>

123
00:05:16,969 --> 00:05:21,740
behind validation is eventually<font color="#E5E5E5"> even if</font>

124
00:05:19,849 --> 00:05:23,930
we have really good tests we're going to

125
00:05:21,740 --> 00:05:26,360
get on the fail boat<font color="#E5E5E5"> there is no world</font>

126
00:05:23,930 --> 00:05:29,479
<font color="#E5E5E5">in</font><font color="#CCCCCC"> which our software works I've looked</font>

127
00:05:26,360 --> 00:05:31,520
and the closet to Narnia was<font color="#E5E5E5"> did not</font>

128
00:05:29,479 --> 00:05:33,650
<font color="#E5E5E5">have working software</font><font color="#CCCCCC"> either</font><font color="#E5E5E5"> there was</font>

129
00:05:31,520 --> 00:05:36,639
an emergency patch they had to<font color="#E5E5E5"> apply the</font>

130
00:05:33,650 --> 00:05:40,580
trees were down<font color="#E5E5E5"> I guess that didn't</font><font color="#CCCCCC"> work</font>

131
00:05:36,639 --> 00:05:42,529
<font color="#CCCCCC">regardless when we know we're on fire</font><font color="#E5E5E5"> or</font>

132
00:05:40,580 --> 00:05:45,229
were<font color="#CCCCCC"> on the fail boat we can halt</font>

133
00:05:42,529 --> 00:05:47,120
deployment<font color="#E5E5E5"> we can roll</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> we can avoid</font>

134
00:05:45,229 --> 00:05:50,900
recommending<font color="#E5E5E5"> inappropriate products to</font>

135
00:05:47,120 --> 00:05:53,539
minors<font color="#CCCCCC"> we can keep our jobs</font><font color="#E5E5E5"> right and</font>

136
00:05:50,900 --> 00:05:55,729
<font color="#CCCCCC">the</font><font color="#E5E5E5"> problem is if we</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know we're on</font>

137
00:05:53,539 --> 00:05:58,150
fire<font color="#CCCCCC"> the people that find</font><font color="#E5E5E5"> out we're on</font>

138
00:05:55,729 --> 00:06:01,508
fire are our customers and<font color="#E5E5E5"> our customers</font>

139
00:05:58,150 --> 00:06:05,210
<font color="#E5E5E5">sometimes have influence over</font><font color="#CCCCCC"> our lives</font>

140
00:06:01,509 --> 00:06:07,339
and if I if I<font color="#CCCCCC"> know I'm on fire I can</font>

141
00:06:05,210 --> 00:06:09,529
stop<font color="#E5E5E5"> it before I get</font><font color="#CCCCCC"> woken up at</font><font color="#E5E5E5"> 3</font>

142
00:06:07,339 --> 00:06:11,870
o'clock in<font color="#E5E5E5"> the morning</font><font color="#CCCCCC"> I no</font><font color="#E5E5E5"> longer carry</font>

143
00:06:09,529 --> 00:06:13,969
a pager<font color="#E5E5E5"> which was one of</font><font color="#CCCCCC"> my key deciding</font>

144
00:06:11,870 --> 00:06:16,009
factors and choosing jobs but<font color="#E5E5E5"> you</font><font color="#CCCCCC"> may</font>

145
00:06:13,969 --> 00:06:19,339
not<font color="#E5E5E5"> have</font><font color="#CCCCCC"> written yourself of a pager yet</font>

146
00:06:16,009 --> 00:06:21,800
so you may actually care about<font color="#E5E5E5"> this</font><font color="#CCCCCC"> and</font>

147
00:06:19,339 --> 00:06:23,509
<font color="#E5E5E5">the the TLDR is some jerk on another</font>

148
00:06:21,800 --> 00:06:26,300
floor<font color="#E5E5E5"> is going to change the meaning</font><font color="#CCCCCC"> of</font>

149
00:06:23,509 --> 00:06:28,639
some data<font color="#E5E5E5"> you depend on and that's just</font>

150
00:06:26,300 --> 00:06:30,169
gonna happen<font color="#CCCCCC"> if you're lucky you throw a</font>

151
00:06:28,639 --> 00:06:32,330
jerk<font color="#CCCCCC"> that works at the</font><font color="#E5E5E5"> same company</font><font color="#CCCCCC"> as</font>

152
00:06:30,169 --> 00:06:34,940
you and if you're unlucky<font color="#CCCCCC"> third or a</font>

153
00:06:32,330 --> 00:06:37,400
jerk at a vendor who you have no idea

154
00:06:34,940 --> 00:06:42,099
how to contact<font color="#E5E5E5"> and you know it's</font><font color="#CCCCCC"> just</font>

155
00:06:37,400 --> 00:06:46,128
<font color="#E5E5E5">gonna fail and yeah</font><font color="#CCCCCC"> ok continued um</font>

156
00:06:42,099 --> 00:06:48,740
<font color="#CCCCCC">about 39%</font><font color="#E5E5E5"> of people take</font><font color="#CCCCCC"> the results of</font>

157
00:06:46,129 --> 00:06:51,169
their<font color="#E5E5E5"> spark jobs</font><font color="#CCCCCC"> and push them into</font>

158
00:06:48,740 --> 00:06:54,230
<font color="#E5E5E5">production automatically this is</font>

159
00:06:51,169 --> 00:06:57,260
<font color="#E5E5E5">terrifying especially when we</font>

160
00:06:54,230 --> 00:06:59,060
look at the next slide<font color="#E5E5E5"> of has the output</font>

161
00:06:57,260 --> 00:07:02,659
<font color="#CCCCCC">of</font><font color="#E5E5E5"> your spark job ever caused a serious</font>

162
00:06:59,060 --> 00:07:06,650
<font color="#E5E5E5">production problem</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 50% of</font><font color="#CCCCCC"> people</font>

163
00:07:02,660 --> 00:07:08,330
saying<font color="#E5E5E5"> no</font><font color="#CCCCCC"> 16 percent of</font><font color="#E5E5E5"> people had to</font>

164
00:07:06,650 --> 00:07:11,210
<font color="#CCCCCC">update their resume after</font><font color="#E5E5E5"> running spark</font>

165
00:07:08,330 --> 00:07:12,890
and<font color="#E5E5E5"> 30 percent of people did not</font><font color="#CCCCCC"> have to</font>

166
00:07:11,210 --> 00:07:16,250
update<font color="#E5E5E5"> their resume after running spark</font>

167
00:07:12,890 --> 00:07:19,190
but their customers were upset<font color="#CCCCCC"> and so</font>

168
00:07:16,250 --> 00:07:20,780
the the moral<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the story is we we</font>

169
00:07:19,190 --> 00:07:24,560
really we want to try and keep ourselves

170
00:07:20,780 --> 00:07:26,450
in<font color="#E5E5E5"> this half as much as we can</font><font color="#CCCCCC"> also if</font>

171
00:07:24,560 --> 00:07:28,310
you like disagree with these numbers<font color="#E5E5E5"> you</font>

172
00:07:26,450 --> 00:07:30,860
can fill<font color="#CCCCCC"> out this survey</font><font color="#E5E5E5"> here and I'll</font>

173
00:07:28,310 --> 00:07:32,900
take it<font color="#E5E5E5"> into</font><font color="#CCCCCC"> account or more accurately</font>

174
00:07:30,860 --> 00:07:37,070
Google will automatically I'm pretty

175
00:07:32,900 --> 00:07:39,469
lazy so why don't we<font color="#E5E5E5"> test um faking data</font>

176
00:07:37,070 --> 00:07:41,510
is hard<font color="#E5E5E5"> especially with the</font><font color="#CCCCCC"> straighted</font>

177
00:07:39,470 --> 00:07:44,840
systems<font color="#E5E5E5"> I probably can't get away</font><font color="#CCCCCC"> with</font>

178
00:07:41,510 --> 00:07:46,940
<font color="#CCCCCC">three element tests right the good old</font><font color="#E5E5E5"> I</font>

179
00:07:44,840 --> 00:07:48,650
<font color="#CCCCCC">checked I</font><font color="#E5E5E5"> checked no I checked a filled</font>

180
00:07:46,940 --> 00:07:50,930
<font color="#E5E5E5">in one and I checked one with some junk</font>

181
00:07:48,650 --> 00:07:52,789
data is no<font color="#CCCCCC"> longer enough right I'm</font>

182
00:07:50,930 --> 00:07:55,280
testing on<font color="#E5E5E5"> a hundred computers</font><font color="#CCCCCC"> I'd need</font>

183
00:07:52,790 --> 00:07:58,000
more<font color="#E5E5E5"> examples making a terabyte</font><font color="#CCCCCC"> of</font>

184
00:07:55,280 --> 00:08:01,460
examples by hand<font color="#E5E5E5"> is not really scalable</font>

185
00:07:58,000 --> 00:08:03,460
<font color="#E5E5E5">our</font><font color="#CCCCCC"> test</font><font color="#E5E5E5"> can get slow if you</font><font color="#CCCCCC"> work with</font>

186
00:08:01,460 --> 00:08:07,760
Scala<font color="#CCCCCC"> you're already familiar</font><font color="#E5E5E5"> with this</font>

187
00:08:03,460 --> 00:08:09,830
<font color="#CCCCCC">it can take a long</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> writing</font><font color="#E5E5E5"> tests is</font>

188
00:08:07,760 --> 00:08:12,890
effort<font color="#E5E5E5"> and my boss</font><font color="#CCCCCC"> was like well it</font>

189
00:08:09,830 --> 00:08:14,630
<font color="#CCCCCC">works just put it</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> production and</font>

190
00:08:12,890 --> 00:08:18,140
and distributed systems<font color="#CCCCCC"> make our life</font>

191
00:08:14,630 --> 00:08:20,330
terrible<font color="#CCCCCC"> the</font><font color="#E5E5E5"> follow-up is somehow</font>

192
00:08:18,140 --> 00:08:22,070
<font color="#E5E5E5">someone convinced people</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> notebooks</font>

193
00:08:20,330 --> 00:08:24,590
were a great way to interact<font color="#E5E5E5"> with</font>

194
00:08:22,070 --> 00:08:27,349
distributed systems and I<font color="#E5E5E5"> think</font>

195
00:08:24,590 --> 00:08:29,900
notebooks are amazing but they're really

196
00:08:27,350 --> 00:08:32,090
<font color="#E5E5E5">shady for testing and I keep seeing</font>

197
00:08:29,900 --> 00:08:34,220
people<font color="#E5E5E5"> doing like wonderful exploratory</font>

198
00:08:32,090 --> 00:08:35,990
work in their notebooks<font color="#E5E5E5"> and then they</font>

199
00:08:34,220 --> 00:08:38,630
put them into<font color="#E5E5E5"> production</font><font color="#CCCCCC"> and they don't</font>

200
00:08:35,990 --> 00:08:42,140
<font color="#E5E5E5">test them</font><font color="#CCCCCC"> because it was you</font><font color="#E5E5E5"> know too</font>

201
00:08:38,630 --> 00:08:43,070
much work<font color="#CCCCCC"> and this this is sad just</font>

202
00:08:42,140 --> 00:08:45,160
<font color="#CCCCCC">because you</font><font color="#E5E5E5"> put it in our</font><font color="#CCCCCC"> notebook</font>

203
00:08:43,070 --> 00:08:47,390
doesn't mean you don't have to test it

204
00:08:45,160 --> 00:08:50,449
<font color="#CCCCCC">it just means you need to take it out</font><font color="#E5E5E5"> of</font>

205
00:08:47,390 --> 00:08:52,640
a notebook<font color="#CCCCCC"> and so why</font><font color="#E5E5E5"> don't we validate</font>

206
00:08:50,450 --> 00:08:55,970
we already tested<font color="#CCCCCC"> our code what could go</font>

207
00:08:52,640 --> 00:08:58,790
wrong<font color="#E5E5E5"> it turns</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> many things</font>

208
00:08:55,970 --> 00:09:00,680
the other ones are the things<font color="#CCCCCC"> that we</font>

209
00:08:58,790 --> 00:09:02,120
tend<font color="#E5E5E5"> to do for validation which involve</font>

210
00:09:00,680 --> 00:09:04,489
collecting<font color="#CCCCCC"> metrics about</font><font color="#E5E5E5"> the number of</font>

211
00:09:02,120 --> 00:09:05,750
things we've processed<font color="#E5E5E5"> looking up the</font>

212
00:09:04,490 --> 00:09:07,500
size of our outputs and all of these

213
00:09:05,750 --> 00:09:09,090
<font color="#E5E5E5">things get a lot harder</font>

214
00:09:07,500 --> 00:09:10,860
the distributed system<font color="#CCCCCC"> we have to</font>

215
00:09:09,090 --> 00:09:13,170
aggregate this<font color="#CCCCCC"> information across</font><font color="#E5E5E5"> a</font>

216
00:09:10,860 --> 00:09:14,910
whole<font color="#E5E5E5"> bunch</font><font color="#CCCCCC"> of machines</font><font color="#E5E5E5"> and the built-in</font>

217
00:09:13,170 --> 00:09:21,540
things to aggregate these metrics<font color="#CCCCCC"> are</font>

218
00:09:14,910 --> 00:09:24,020
all broken<font color="#CCCCCC"> and so that's</font><font color="#E5E5E5"> great yeah yeah</font>

219
00:09:21,540 --> 00:09:24,020
a question

220
00:09:25,460 --> 00:09:30,510
yeah sure<font color="#E5E5E5"> okay so the distinction</font>

221
00:09:28,830 --> 00:09:33,000
between test<font color="#CCCCCC"> invalidate</font><font color="#E5E5E5"> test is like a</font>

222
00:09:30,510 --> 00:09:36,420
thing that<font color="#CCCCCC"> I can run</font><font color="#E5E5E5"> and it tells me yay</font>

223
00:09:33,000 --> 00:09:39,180
or nay on my code change validate is a

224
00:09:36,420 --> 00:09:41,160
thing which<font color="#CCCCCC"> is on my pipeline and after</font>

225
00:09:39,180 --> 00:09:44,880
I run my pipeline<font color="#E5E5E5"> in production it tells</font>

226
00:09:41,160 --> 00:09:46,890
<font color="#E5E5E5">me this was</font><font color="#CCCCCC"> probably okay right like I</font>

227
00:09:44,880 --> 00:09:52,850
<font color="#CCCCCC">processed</font><font color="#E5E5E5"> the number of</font><font color="#CCCCCC"> records I was</font>

228
00:09:46,890 --> 00:09:52,850
expecting<font color="#E5E5E5"> nothing really looked weird</font>

229
00:09:52,910 --> 00:09:57,270
<font color="#CCCCCC">you you</font><font color="#E5E5E5"> should run your validation stuff</font>

230
00:09:55,980 --> 00:10:00,390
while you're<font color="#E5E5E5"> running your tests as well</font>

231
00:09:57,270 --> 00:10:02,850
<font color="#E5E5E5">but you</font><font color="#CCCCCC"> probably</font><font color="#E5E5E5"> don't want to you know</font>

232
00:10:00,390 --> 00:10:04,819
run<font color="#E5E5E5"> your tests in production you want to</font>

233
00:10:02,850 --> 00:10:07,380
look at your counters and your metrics

234
00:10:04,820 --> 00:10:09,750
explicitly in production and compare

235
00:10:07,380 --> 00:10:11,040
them<font color="#CCCCCC"> to historic values or if you've got</font>

236
00:10:09,750 --> 00:10:12,810
<font color="#E5E5E5">some ground truth about what you're</font>

237
00:10:11,040 --> 00:10:14,670
expecting<font color="#E5E5E5"> you can encode these</font>

238
00:10:12,810 --> 00:10:17,430
validation rules<font color="#E5E5E5"> and have them baked</font>

239
00:10:14,670 --> 00:10:18,839
<font color="#E5E5E5">into your pipeline</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> my tests are</font>

240
00:10:17,430 --> 00:10:22,560
<font color="#E5E5E5">gonna catch the errors</font><font color="#CCCCCC"> that I can think</font>

241
00:10:18,840 --> 00:10:23,970
<font color="#E5E5E5">of and</font><font color="#CCCCCC"> hopefully if I'm lucky</font><font color="#E5E5E5"> validation</font>

242
00:10:22,560 --> 00:10:26,459
will catch the errors which I've<font color="#CCCCCC"> never</font>

243
00:10:23,970 --> 00:10:28,410
thought<font color="#CCCCCC"> of and involved processing like</font>

244
00:10:26,460 --> 00:10:30,330
an extra terabyte of data or just

245
00:10:28,410 --> 00:10:34,319
<font color="#E5E5E5">dropping an extra terabyte of data on</font>

246
00:10:30,330 --> 00:10:36,630
the floor<font color="#CCCCCC"> which I've</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> pipeline</font>

247
00:10:34,320 --> 00:10:40,200
<font color="#E5E5E5">made some really bad recommendations</font>

248
00:10:36,630 --> 00:10:46,020
<font color="#E5E5E5">when we only</font><font color="#CCCCCC"> process about two gigs of</font>

249
00:10:40,200 --> 00:10:52,140
<font color="#E5E5E5">data you know yeah okay uh yeah</font><font color="#CCCCCC"> okay so</font>

250
00:10:46,020 --> 00:10:54,060
this is a cat the cat<font color="#E5E5E5"> is sleeping and</font>

251
00:10:52,140 --> 00:10:56,910
the audience<font color="#E5E5E5"> appears awake so that's</font>

252
00:10:54,060 --> 00:10:59,489
surprising<font color="#E5E5E5"> so our simplest unit</font><font color="#CCCCCC"> test</font>

253
00:10:56,910 --> 00:11:02,219
<font color="#E5E5E5">looks a lot like a traditional unit test</font>

254
00:10:59,490 --> 00:11:04,920
right<font color="#E5E5E5"> we say like this</font><font color="#CCCCCC"> is our input this</font>

255
00:11:02,220 --> 00:11:06,990
is our expected output and of course

256
00:11:04,920 --> 00:11:08,849
because this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> you know a distributed</font>

257
00:11:06,990 --> 00:11:10,500
systems thing we're<font color="#E5E5E5"> gonna use word count</font>

258
00:11:08,850 --> 00:11:12,360
as<font color="#E5E5E5"> our</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> that's just what</font>

259
00:11:10,500 --> 00:11:15,000
<font color="#CCCCCC">everyone uses distributed systems for</font>

260
00:11:12,360 --> 00:11:17,130
that's why it's the default example<font color="#E5E5E5"> and</font>

261
00:11:15,000 --> 00:11:18,840
then we assert<font color="#CCCCCC"> that our tokenizer which</font>

262
00:11:17,130 --> 00:11:20,760
is part of our word count pipeline is

263
00:11:18,840 --> 00:11:22,560
<font color="#CCCCCC">gonna like take this in</font>

264
00:11:20,760 --> 00:11:25,770
and<font color="#E5E5E5"> prettiest our expected output and</font>

265
00:11:22,560 --> 00:11:29,459
this is<font color="#E5E5E5"> really simple</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> has the</font>

266
00:11:25,770 --> 00:11:32,040
downside<font color="#E5E5E5"> really not testing a lot</font><font color="#CCCCCC"> it</font>

267
00:11:29,460 --> 00:11:34,170
will catch bugs<font color="#E5E5E5"> inside of our tokenized</font>

268
00:11:32,040 --> 00:11:36,270
function<font color="#E5E5E5"> right if if I was</font><font color="#CCCCCC"> splitting on</font>

269
00:11:34,170 --> 00:11:38,849
the letter<font color="#E5E5E5"> I and I</font><font color="#CCCCCC"> wasn't</font><font color="#E5E5E5"> expecting to</font>

270
00:11:36,270 --> 00:11:40,680
it will catch<font color="#CCCCCC"> that but it won't catch if</font>

271
00:11:38,850 --> 00:11:44,280
I've<font color="#E5E5E5"> done anything weird with processing</font>

272
00:11:40,680 --> 00:11:45,989
empty data or empty partitions<font color="#CCCCCC"> so it's</font>

273
00:11:44,280 --> 00:11:49,589
<font color="#E5E5E5">not great but it's it's better than</font>

274
00:11:45,990 --> 00:11:51,600
nothing and<font color="#CCCCCC"> in beam we can write</font>

275
00:11:49,590 --> 00:11:54,770
something<font color="#E5E5E5"> similar but it's in Java</font><font color="#CCCCCC"> so</font>

276
00:11:51,600 --> 00:11:58,740
we've got a lot of<font color="#E5E5E5"> extra a legate errs</font>

277
00:11:54,770 --> 00:12:00,810
<font color="#CCCCCC">nomnomnom types so</font><font color="#E5E5E5"> we can go ahead we</font>

278
00:11:58,740 --> 00:12:02,790
can<font color="#CCCCCC"> say</font><font color="#E5E5E5"> this is our expected output I</font>

279
00:12:00,810 --> 00:12:05,130
forgot<font color="#E5E5E5"> to put the input pretended I put</font>

280
00:12:02,790 --> 00:12:07,439
it there<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we run</font><font color="#CCCCCC"> our like</font><font color="#E5E5E5"> fancy</font>

281
00:12:05,130 --> 00:12:09,020
<font color="#E5E5E5">pipeline and we say well we run our</font>

282
00:12:07,440 --> 00:12:11,340
pipeline but we have our<font color="#CCCCCC"> assertion here</font>

283
00:12:09,020 --> 00:12:14,280
and we say like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what I'm</font>

284
00:12:11,340 --> 00:12:16,050
expecting<font color="#E5E5E5"> to come out</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is nice in</font>

285
00:12:14,280 --> 00:12:18,120
being because they actually<font color="#CCCCCC"> thought</font>

286
00:12:16,050 --> 00:12:20,250
about testing when they made<font color="#E5E5E5"> beam so</font>

287
00:12:18,120 --> 00:12:22,500
this is built into<font color="#E5E5E5"> beam</font>

288
00:12:20,250 --> 00:12:27,000
<font color="#E5E5E5">whereas this in spark for some reason is</font>

289
00:12:22,500 --> 00:12:28,500
not<font color="#E5E5E5"> built</font><font color="#CCCCCC"> into spark yeah my attempts to</font>

290
00:12:27,000 --> 00:12:30,870
<font color="#E5E5E5">get</font><font color="#CCCCCC"> it merged have not succeeded despite</font>

291
00:12:28,500 --> 00:12:34,440
being a PMC member I should try again

292
00:12:30,870 --> 00:12:36,270
<font color="#E5E5E5">anyways but but the TLDR is we have our</font>

293
00:12:34,440 --> 00:12:39,750
exciting<font color="#CCCCCC"> word count pipeline</font><font color="#E5E5E5"> we can test</font>

294
00:12:36,270 --> 00:12:41,910
it<font color="#E5E5E5"> but there's no great so where do</font>

295
00:12:39,750 --> 00:12:44,820
these<font color="#CCCCCC"> tests</font><font color="#E5E5E5"> one they run</font><font color="#CCCCCC"> on our local</font>

296
00:12:41,910 --> 00:12:47,370
<font color="#E5E5E5">machine</font><font color="#CCCCCC"> that's not</font><font color="#E5E5E5"> very good but it's</font>

297
00:12:44,820 --> 00:12:50,100
it's better than nothing<font color="#CCCCCC"> and</font><font color="#E5E5E5"> spark</font>

298
00:12:47,370 --> 00:12:53,490
attempts<font color="#E5E5E5"> to simulate a real cluster</font><font color="#CCCCCC"> the</font>

299
00:12:50,100 --> 00:12:56,220
simulation breaks right it's not perfect

300
00:12:53,490 --> 00:12:58,380
it doesn't behave<font color="#E5E5E5"> the same way the real</font>

301
00:12:56,220 --> 00:13:00,690
cluster does when you're adding<font color="#E5E5E5"> files it</font>

302
00:12:58,380 --> 00:13:03,270
doesn't have the same properties<font color="#E5E5E5"> with</font>

303
00:13:00,690 --> 00:13:05,600
like you know failures are difficult to

304
00:13:03,270 --> 00:13:08,670
simulate in a local mode environment

305
00:13:05,600 --> 00:13:10,500
<font color="#CCCCCC">beam</font><font color="#E5E5E5"> also has a local mode it's a little</font>

306
00:13:08,670 --> 00:13:13,579
different<font color="#E5E5E5"> it does less work on the</font>

307
00:13:10,500 --> 00:13:16,560
simulation<font color="#E5E5E5"> and more work on being fast</font>

308
00:13:13,580 --> 00:13:17,940
<font color="#CCCCCC">so this is this is nice the direct</font>

309
00:13:16,560 --> 00:13:20,160
runner is good for writing<font color="#CCCCCC"> a bunch of</font>

310
00:13:17,940 --> 00:13:24,300
being unit tests but it's it's<font color="#CCCCCC"> not</font>

311
00:13:20,160 --> 00:13:26,400
perfect<font color="#CCCCCC"> and another option</font><font color="#E5E5E5"> is you can</font>

312
00:13:24,300 --> 00:13:28,109
<font color="#E5E5E5">like say hey your simulation of a real</font>

313
00:13:26,400 --> 00:13:30,180
cluster isn't enough<font color="#CCCCCC"> I'm just going to</font>

314
00:13:28,110 --> 00:13:33,210
<font color="#E5E5E5">stand up a two node cluster on my</font>

315
00:13:30,180 --> 00:13:34,430
machine<font color="#E5E5E5"> please talk to that and you can</font>

316
00:13:33,210 --> 00:13:38,660
do<font color="#E5E5E5"> that with this very</font>

317
00:13:34,430 --> 00:13:40,099
<font color="#CCCCCC">she'll script you</font><font color="#E5E5E5"> set up that</font><font color="#CCCCCC"> Sh travels</font>

318
00:13:38,660 --> 00:13:42,709
so yeah<font color="#CCCCCC"> Mel whatever and you just shut</font>

319
00:13:40,100 --> 00:13:44,570
this show environment variable which is

320
00:13:42,710 --> 00:13:49,220
definitely the best<font color="#E5E5E5"> way to configure our</font>

321
00:13:44,570 --> 00:13:50,779
<font color="#E5E5E5">software</font><font color="#CCCCCC"> to spark localhost</font><font color="#E5E5E5"> ideally you</font>

322
00:13:49,220 --> 00:13:53,300
would like point this to an actual like

323
00:13:50,779 --> 00:13:54,800
<font color="#E5E5E5">three node cluster rather than you know</font>

324
00:13:53,300 --> 00:13:57,349
two shell scripts running<font color="#E5E5E5"> on your</font>

325
00:13:54,800 --> 00:13:59,510
<font color="#CCCCCC">machine but</font><font color="#E5E5E5"> two shell scripts running on</font>

326
00:13:57,350 --> 00:14:01,550
our machine will catch more errors than

327
00:13:59,510 --> 00:14:05,450
<font color="#E5E5E5">the simulated cluster this gives us</font>

328
00:14:01,550 --> 00:14:08,510
almost<font color="#E5E5E5"> a real cluster experience what</font>

329
00:14:05,450 --> 00:14:10,190
<font color="#CCCCCC">okay so we've essentially covered all of</font>

330
00:14:08,510 --> 00:14:12,920
<font color="#E5E5E5">the testing which</font><font color="#CCCCCC"> isn't going to give us</font>

331
00:14:10,190 --> 00:14:14,660
a lot we're gonna focus on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> testing</font>

332
00:14:12,920 --> 00:14:16,579
which<font color="#CCCCCC"> is going to catch fun problems</font>

333
00:14:14,660 --> 00:14:20,060
like the kinds of problems<font color="#CCCCCC"> which I'm not</font>

334
00:14:16,580 --> 00:14:22,520
going<font color="#CCCCCC"> to think about</font><font color="#E5E5E5"> and this is because</font>

335
00:14:20,060 --> 00:14:24,739
I'm used to writing software that<font color="#E5E5E5"> has to</font>

336
00:14:22,520 --> 00:14:26,750
work<font color="#CCCCCC"> on</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I'm not used to</font>

337
00:14:24,740 --> 00:14:29,779
<font color="#E5E5E5">writing software that has to work on a</font>

338
00:14:26,750 --> 00:14:32,660
few hundred<font color="#CCCCCC"> machines and so we need</font><font color="#E5E5E5"> to</font>

339
00:14:29,779 --> 00:14:34,850
test<font color="#CCCCCC"> that we handle the partitioning</font>

340
00:14:32,660 --> 00:14:36,500
correctly we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> that you know</font>

341
00:14:34,850 --> 00:14:38,300
the serialization<font color="#E5E5E5"> of our things is</font>

342
00:14:36,500 --> 00:14:40,700
actually going to be successful<font color="#CCCCCC"> and if</font>

343
00:14:38,300 --> 00:14:42,829
we're in<font color="#E5E5E5"> a local simulator try is to</font>

344
00:14:40,700 --> 00:14:44,600
<font color="#E5E5E5">serialize the things that are needed</font><font color="#CCCCCC"> but</font>

345
00:14:42,830 --> 00:14:46,520
it's<font color="#CCCCCC"> only once you run on a real cluster</font>

346
00:14:44,600 --> 00:14:51,770
that it<font color="#E5E5E5"> actually you know for sure it's</font>

347
00:14:46,520 --> 00:14:54,110
gonna<font color="#CCCCCC"> work again so how do we</font><font color="#E5E5E5"> do this</font><font color="#CCCCCC"> so</font>

348
00:14:51,770 --> 00:14:57,500
one of the<font color="#CCCCCC"> first problems</font><font color="#E5E5E5"> is if we think</font>

349
00:14:54,110 --> 00:15:00,020
<font color="#CCCCCC">back to here</font><font color="#E5E5E5"> we have this like assertion</font>

350
00:14:57,500 --> 00:15:02,029
that<font color="#E5E5E5"> these two sets are equal</font><font color="#CCCCCC"> but this</font>

351
00:15:00,020 --> 00:15:04,339
is<font color="#CCCCCC"> just comparing</font><font color="#E5E5E5"> the two sets locally</font>

352
00:15:02,029 --> 00:15:07,010
<font color="#E5E5E5">and if I'm going</font><font color="#CCCCCC"> to test a scale I</font>

353
00:15:04,339 --> 00:15:09,680
probably can't bring a terabyte<font color="#E5E5E5"> of data</font>

354
00:15:07,010 --> 00:15:12,160
back<font color="#CCCCCC"> to my machine otherwise you</font><font color="#E5E5E5"> should</font>

355
00:15:09,680 --> 00:15:15,380
just run<font color="#E5E5E5"> your stuff on</font><font color="#CCCCCC"> that machine and</font>

356
00:15:12,160 --> 00:15:20,029
you<font color="#E5E5E5"> know not use any of these things</font>

357
00:15:15,380 --> 00:15:22,640
because<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> terrible right yeah so</font>

358
00:15:20,029 --> 00:15:24,650
that's great<font color="#CCCCCC"> so now we have to figure</font>

359
00:15:22,640 --> 00:15:26,540
out<font color="#E5E5E5"> if our two sets are</font><font color="#CCCCCC"> equal</font>

360
00:15:24,650 --> 00:15:29,810
<font color="#CCCCCC">SPARC has</font><font color="#E5E5E5"> built</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> read set</font>

361
00:15:26,540 --> 00:15:32,300
operations<font color="#E5E5E5"> they look almost</font><font color="#CCCCCC"> exactly like</font>

362
00:15:29,810 --> 00:15:34,160
what you<font color="#E5E5E5"> want except it doesn't know the</font>

363
00:15:32,300 --> 00:15:37,729
difference<font color="#E5E5E5"> between coffee coffee</font><font color="#CCCCCC"> panda</font>

364
00:15:34,160 --> 00:15:39,290
and<font color="#CCCCCC"> panda coffee</font><font color="#E5E5E5"> and if someone says</font>

365
00:15:37,730 --> 00:15:41,510
these two things are equal<font color="#CCCCCC"> I say</font>

366
00:15:39,290 --> 00:15:44,180
someone's stolen my coffee<font color="#E5E5E5"> and I will</font>

367
00:15:41,510 --> 00:15:46,160
cut them so<font color="#E5E5E5"> instead we can use</font><font color="#CCCCCC"> our easy</font>

368
00:15:44,180 --> 00:15:47,359
comparisons<font color="#CCCCCC"> or if you really like</font>

369
00:15:46,160 --> 00:15:50,089
writing<font color="#CCCCCC"> code</font><font color="#E5E5E5"> group</font>

370
00:15:47,360 --> 00:15:52,250
Russians<font color="#CCCCCC"> inspark you can just write a</font><font color="#E5E5E5"> co</font>

371
00:15:50,089 --> 00:15:54,380
<font color="#E5E5E5">group in a zip and then</font><font color="#CCCCCC"> you can actually</font>

372
00:15:52,250 --> 00:15:57,829
compare that<font color="#CCCCCC"> your to distributed</font>

373
00:15:54,380 --> 00:16:00,380
collections are equal and in beam it's

374
00:15:57,829 --> 00:16:01,760
pretty much<font color="#E5E5E5"> the same thing I</font><font color="#CCCCCC"> Yuko</font><font color="#E5E5E5"> group</font>

375
00:16:00,380 --> 00:16:03,800
then<font color="#CCCCCC"> you filter out</font><font color="#E5E5E5"> the records where</font>

376
00:16:01,760 --> 00:16:05,209
everything is already<font color="#E5E5E5"> matched and you P</font>

377
00:16:03,800 --> 00:16:07,339
assert that the result once you've done

378
00:16:05,209 --> 00:16:09,439
your filter is empty and if it's not

379
00:16:07,339 --> 00:16:10,760
empty then something has gone wrong<font color="#E5E5E5"> and</font>

380
00:16:09,440 --> 00:16:14,209
you can see the collections<font color="#CCCCCC"> that</font><font color="#E5E5E5"> were</font>

381
00:16:10,760 --> 00:16:16,819
not empty<font color="#CCCCCC"> but where do we get our</font><font color="#E5E5E5"> data</font>

382
00:16:14,209 --> 00:16:18,619
<font color="#E5E5E5">right</font><font color="#CCCCCC"> if I've made my data if I'm</font>

383
00:16:16,820 --> 00:16:21,110
testing<font color="#CCCCCC"> I'm distributed collection I</font>

384
00:16:18,620 --> 00:16:23,660
actually want to<font color="#E5E5E5"> test something was too</font>

385
00:16:21,110 --> 00:16:25,490
big<font color="#E5E5E5"> for a single machine most people</font>

386
00:16:23,660 --> 00:16:29,300
still generate their data by hand<font color="#CCCCCC"> and</font>

387
00:16:25,490 --> 00:16:31,670
this is<font color="#CCCCCC"> not good enough I don't have the</font>

388
00:16:29,300 --> 00:16:34,130
time<font color="#CCCCCC"> to write a gigabyte of test data</font>

389
00:16:31,670 --> 00:16:37,219
<font color="#E5E5E5">let alone figure out what a gigabyte</font><font color="#CCCCCC"> of</font>

390
00:16:34,130 --> 00:16:39,019
<font color="#E5E5E5">golden set data looks like some people</font>

391
00:16:37,220 --> 00:16:39,320
just<font color="#CCCCCC"> get</font><font color="#E5E5E5"> away</font><font color="#CCCCCC"> with sampling production</font>

392
00:16:39,019 --> 00:16:41,300
data

393
00:16:39,320 --> 00:16:45,160
I think<font color="#E5E5E5"> these answers</font><font color="#CCCCCC"> are definitely</font>

394
00:16:41,300 --> 00:16:50,269
skewed to<font color="#CCCCCC"> the US where</font><font color="#E5E5E5"> privacy is a</font>

395
00:16:45,160 --> 00:16:53,029
flexible<font color="#CCCCCC"> concept I really hope I</font><font color="#E5E5E5"> don't</font>

396
00:16:50,269 --> 00:16:55,190
get fired<font color="#E5E5E5"> for</font><font color="#CCCCCC"> saying that and</font><font color="#E5E5E5"> of course</font>

397
00:16:53,029 --> 00:16:58,399
<font color="#CCCCCC">not at the</font><font color="#E5E5E5"> glorious employer who can do</font>

398
00:16:55,190 --> 00:17:00,610
no wrong<font color="#CCCCCC"> but definitely at other</font>

399
00:16:58,399 --> 00:17:06,730
companies they may<font color="#CCCCCC"> not have</font><font color="#E5E5E5"> the same</font>

400
00:17:00,610 --> 00:17:10,910
restrictions<font color="#E5E5E5"> video camera in the back</font>

401
00:17:06,730 --> 00:17:13,459
right<font color="#E5E5E5"> and so that's maybe</font><font color="#CCCCCC"> not gonna work</font>

402
00:17:10,910 --> 00:17:15,439
for<font color="#CCCCCC"> you but if you work maybe</font><font color="#E5E5E5"> where he's</font>

403
00:17:13,459 --> 00:17:17,959
like it's<font color="#E5E5E5"> not user privacy data it's</font>

404
00:17:15,439 --> 00:17:20,929
like sample data from cows the cows

405
00:17:17,959 --> 00:17:23,240
probably<font color="#CCCCCC"> aren't going</font><font color="#E5E5E5"> to sue you I mean</font>

406
00:17:20,929 --> 00:17:26,000
<font color="#E5E5E5">that you may see you on</font><font color="#CCCCCC"> behalf of</font><font color="#E5E5E5"> the</font>

407
00:17:23,240 --> 00:17:27,799
cows<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you've got a good</font><font color="#E5E5E5"> shot</font><font color="#CCCCCC"> in court</font>

408
00:17:26,000 --> 00:17:31,040
and you can you<font color="#CCCCCC"> can probably just</font><font color="#E5E5E5"> sample</font>

409
00:17:27,799 --> 00:17:34,520
your data for your tests alternatively

410
00:17:31,040 --> 00:17:35,990
we can try and sort of change how we

411
00:17:34,520 --> 00:17:40,309
think<font color="#CCCCCC"> about writing</font><font color="#E5E5E5"> our tests from</font>

412
00:17:35,990 --> 00:17:43,010
<font color="#E5E5E5">golden sets to properties</font><font color="#CCCCCC"> are there any</font>

413
00:17:40,309 --> 00:17:46,970
like recovering<font color="#CCCCCC"> Haskell users are not so</font>

414
00:17:43,010 --> 00:17:49,879
<font color="#E5E5E5">recovering Haskell users one person damn</font>

415
00:17:46,970 --> 00:17:51,890
I was expecting at least<font color="#E5E5E5"> two okay well</font>

416
00:17:49,880 --> 00:17:54,080
that's that's<font color="#E5E5E5"> fine so the Haskell people</font>

417
00:17:51,890 --> 00:17:57,160
<font color="#E5E5E5">definitely looked at testing and said</font>

418
00:17:54,080 --> 00:17:59,659
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not a lot of fun</font><font color="#E5E5E5"> I'm going to</font>

419
00:17:57,160 --> 00:18:00,490
take a lot of time and write some papers

420
00:17:59,660 --> 00:18:03,580
<font color="#CCCCCC">on this</font>

421
00:18:00,490 --> 00:18:05,320
which is what<font color="#CCCCCC"> Haskell people do best but</font>

422
00:18:03,580 --> 00:18:06,850
incidentally<font color="#CCCCCC"> they made some software</font>

423
00:18:05,320 --> 00:18:09,310
which was<font color="#CCCCCC"> really good</font><font color="#E5E5E5"> and the rest of</font>

424
00:18:06,850 --> 00:18:12,639
the world copied<font color="#CCCCCC"> so quick check</font><font color="#E5E5E5"> is</font>

425
00:18:09,310 --> 00:18:16,600
amazing<font color="#CCCCCC"> and Scully check is scholars</font><font color="#E5E5E5"> not</font>

426
00:18:12,640 --> 00:18:17,470
all that<font color="#E5E5E5"> obviously not a ripoff of quick</font>

427
00:18:16,600 --> 00:18:21,129
check

428
00:18:17,470 --> 00:18:24,520
there is a<font color="#E5E5E5"> Python</font><font color="#CCCCCC"> version of Scala</font><font color="#E5E5E5"> track</font>

429
00:18:21,130 --> 00:18:26,140
<font color="#E5E5E5">it behaves pretty much the same it's a</font>

430
00:18:24,520 --> 00:18:31,090
little more difficult<font color="#CCCCCC"> to work with</font>

431
00:18:26,140 --> 00:18:33,940
because<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> whole types thing</font><font color="#CCCCCC"> no</font>

432
00:18:31,090 --> 00:18:36,100
offense to Python<font color="#E5E5E5"> users in the house and</font>

433
00:18:33,940 --> 00:18:38,260
so there's two<font color="#E5E5E5"> libraries to make</font><font color="#CCCCCC"> this</font>

434
00:18:36,100 --> 00:18:39,879
work<font color="#E5E5E5"> with spark no one's bothered making</font>

435
00:18:38,260 --> 00:18:41,650
<font color="#E5E5E5">a library to make this work with beam</font>

436
00:18:39,880 --> 00:18:44,170
yet but if you're<font color="#E5E5E5"> really excited about</font>

437
00:18:41,650 --> 00:18:46,000
property testing<font color="#E5E5E5"> you could totally</font><font color="#CCCCCC"> just</font>

438
00:18:44,170 --> 00:18:49,090
take one of<font color="#CCCCCC"> these libraries and switch</font>

439
00:18:46,000 --> 00:18:51,460
like<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> ten words around</font><font color="#E5E5E5"> and make</font>

440
00:18:49,090 --> 00:18:53,169
it<font color="#E5E5E5"> run</font><font color="#CCCCCC"> on beam I tried doing</font><font color="#E5E5E5"> that on the</font>

441
00:18:51,460 --> 00:18:56,620
<font color="#CCCCCC">airplane but the United Wi-Fi was not</font>

442
00:18:53,170 --> 00:18:58,930
not good enough so we can specify<font color="#E5E5E5"> this</font>

443
00:18:56,620 --> 00:19:01,330
exciting property that when I compute a

444
00:18:58,930 --> 00:19:02,980
thing with a map expression and so here

445
00:19:01,330 --> 00:19:04,810
I'm just<font color="#E5E5E5"> taking an input and I'm saying</font>

446
00:19:02,980 --> 00:19:07,480
<font color="#E5E5E5">I want the length of everything I'm</font>

447
00:19:04,810 --> 00:19:08,860
<font color="#E5E5E5">saying that the result the number</font><font color="#CCCCCC"> of</font>

448
00:19:07,480 --> 00:19:12,250
elements<font color="#CCCCCC"> and my</font><font color="#E5E5E5"> result should</font><font color="#CCCCCC"> not have</font>

449
00:19:08,860 --> 00:19:14,889
changed<font color="#E5E5E5"> this is not all</font><font color="#CCCCCC"> that exciting</font>

450
00:19:12,250 --> 00:19:16,600
<font color="#E5E5E5">but we could actually think about how</font><font color="#CCCCCC"> we</font>

451
00:19:14,890 --> 00:19:18,670
could write a similar<font color="#E5E5E5"> property which</font>

452
00:19:16,600 --> 00:19:19,959
would<font color="#E5E5E5"> be useful to us we might say</font>

453
00:19:18,670 --> 00:19:22,570
<font color="#CCCCCC">something</font><font color="#E5E5E5"> like if we've got a data</font>

454
00:19:19,960 --> 00:19:24,760
<font color="#E5E5E5">ingest pipeline and</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> responsibility</font>

455
00:19:22,570 --> 00:19:26,530
is to kick out invalid records<font color="#E5E5E5"> the</font>

456
00:19:24,760 --> 00:19:28,660
<font color="#E5E5E5">number of records that</font><font color="#CCCCCC"> I have after I</font>

457
00:19:26,530 --> 00:19:30,760
<font color="#E5E5E5">run should be less than the</font><font color="#CCCCCC"> number of</font>

458
00:19:28,660 --> 00:19:32,620
<font color="#E5E5E5">records I had when I started</font><font color="#CCCCCC"> there</font>

459
00:19:30,760 --> 00:19:35,650
should have been some<font color="#E5E5E5"> invalid data that</font>

460
00:19:32,620 --> 00:19:36,340
I<font color="#E5E5E5"> kicked out and if there isn't</font><font color="#CCCCCC"> I didn't</font>

461
00:19:35,650 --> 00:19:38,770
do my job

462
00:19:36,340 --> 00:19:42,220
and if I<font color="#CCCCCC"> produce more records</font><font color="#E5E5E5"> I did</font>

463
00:19:38,770 --> 00:19:44,980
something very<font color="#E5E5E5"> different than</font><font color="#CCCCCC"> my job</font><font color="#E5E5E5"> and</font>

464
00:19:42,220 --> 00:19:47,320
so simple property system<font color="#E5E5E5"> and then we</font>

465
00:19:44,980 --> 00:19:50,890
can<font color="#CCCCCC"> tell it to generate one million</font>

466
00:19:47,320 --> 00:19:55,000
entries<font color="#CCCCCC"> okay I'm glad</font><font color="#E5E5E5"> to see dr. evil</font>

467
00:19:50,890 --> 00:19:56,370
did make<font color="#CCCCCC"> it over here really you you</font><font color="#E5E5E5"> can</font>

468
00:19:55,000 --> 00:19:58,870
<font color="#E5E5E5">change this</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> whatever number you want</font>

469
00:19:56,370 --> 00:20:00,489
<font color="#E5E5E5">the important part is when</font><font color="#CCCCCC"> you're doing</font>

470
00:19:58,870 --> 00:20:02,919
this you<font color="#CCCCCC"> have to point</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> at a real</font>

471
00:20:00,490 --> 00:20:06,070
cluster it's not<font color="#E5E5E5"> if you run it on your</font>

472
00:20:02,920 --> 00:20:07,870
<font color="#CCCCCC">localhost</font><font color="#E5E5E5"> it's just gonna be sad but the</font>

473
00:20:06,070 --> 00:20:09,610
nice thing<font color="#CCCCCC"> is you can you can actually</font>

474
00:20:07,870 --> 00:20:11,469
have the<font color="#E5E5E5"> same properties and you can</font>

475
00:20:09,610 --> 00:20:13,779
<font color="#CCCCCC">have different</font><font color="#E5E5E5"> generator configurations</font>

476
00:20:11,470 --> 00:20:15,399
for your integration<font color="#CCCCCC"> environment</font>

477
00:20:13,779 --> 00:20:16,989
and your<font color="#E5E5E5"> local dev</font><font color="#CCCCCC"> environment so</font><font color="#E5E5E5"> you're</font>

478
00:20:15,399 --> 00:20:18,849
when you're<font color="#CCCCCC"> running this on your local</font>

479
00:20:16,989 --> 00:20:20,200
<font color="#E5E5E5">machine you'll generate a few hundred</font>

480
00:20:18,849 --> 00:20:22,178
examples<font color="#E5E5E5"> but when you run</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font>

481
00:20:20,200 --> 00:20:27,820
integration environment<font color="#CCCCCC"> you generate the</font>

482
00:20:22,179 --> 00:20:33,669
1 million entries<font color="#CCCCCC"> right</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> so this can</font>

483
00:20:27,820 --> 00:20:35,889
get<font color="#E5E5E5"> a bit slow even well okay so the</font>

484
00:20:33,669 --> 00:20:38,349
property tests generate a lot<font color="#E5E5E5"> of tests</font>

485
00:20:35,889 --> 00:20:41,889
right and a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> times what we'll find</font>

486
00:20:38,349 --> 00:20:43,539
<font color="#E5E5E5">out is that</font><font color="#CCCCCC"> yeah it turns out</font><font color="#E5E5E5"> the error</font>

487
00:20:41,889 --> 00:20:45,428
was actually just<font color="#E5E5E5"> really a classical</font>

488
00:20:43,539 --> 00:20:46,869
error might I<font color="#E5E5E5"> just I just</font><font color="#CCCCCC"> screwed up</font>

489
00:20:45,429 --> 00:20:48,099
inside of<font color="#E5E5E5"> my length function or</font>

490
00:20:46,869 --> 00:20:49,589
something<font color="#CCCCCC"> right like</font><font color="#E5E5E5"> I just did</font>

491
00:20:48,099 --> 00:20:52,210
something wrong with parsing the data

492
00:20:49,589 --> 00:20:54,129
<font color="#E5E5E5">and for those things we should try and</font>

493
00:20:52,210 --> 00:20:57,070
catch those errors<font color="#E5E5E5"> in sort of the</font>

494
00:20:54,129 --> 00:20:59,289
classical ways the<font color="#E5E5E5"> only problem is</font><font color="#CCCCCC"> that</font>

495
00:20:57,070 --> 00:21:01,689
the<font color="#CCCCCC"> programming metal model of</font><font color="#E5E5E5"> spark</font>

496
00:20:59,289 --> 00:21:06,158
really encourages<font color="#CCCCCC"> us to</font><font color="#E5E5E5"> write code which</font>

497
00:21:01,690 --> 00:21:07,869
is<font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> to test so let's let's look</font>

498
00:21:06,159 --> 00:21:10,359
at this right eg lambdas<font color="#E5E5E5"> are not always</font>

499
00:21:07,869 --> 00:21:12,218
<font color="#E5E5E5">our friend so I love lambda expressions</font>

500
00:21:10,359 --> 00:21:14,978
I am a recovering Haskell programmer

501
00:21:12,219 --> 00:21:16,929
myself<font color="#CCCCCC"> once upon a</font><font color="#E5E5E5"> time I was</font><font color="#CCCCCC"> a scheme</font>

502
00:21:14,979 --> 00:21:21,969
programmer<font color="#CCCCCC"> I have written a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

503
00:21:16,929 --> 00:21:24,129
lambdas but at some point<font color="#CCCCCC"> writing all of</font>

504
00:21:21,969 --> 00:21:26,259
my functions like this<font color="#CCCCCC"> meaning that when</font>

505
00:21:24,129 --> 00:21:28,748
I want to test my difficult to tokenize

506
00:21:26,259 --> 00:21:33,039
<font color="#E5E5E5">RDD function I have</font><font color="#CCCCCC"> to provide it with</font><font color="#E5E5E5"> a</font>

507
00:21:28,749 --> 00:21:36,279
fake cluster<font color="#E5E5E5"> alternatively if I split</font>

508
00:21:33,039 --> 00:21:38,769
this out<font color="#CCCCCC"> into you know my thing which is</font>

509
00:21:36,279 --> 00:21:40,239
depending on<font color="#E5E5E5"> sparks</font><font color="#CCCCCC"> just distributed</font>

510
00:21:38,769 --> 00:21:42,729
<font color="#CCCCCC">datasets</font><font color="#E5E5E5"> and the thing which really</font>

511
00:21:40,239 --> 00:21:46,359
<font color="#E5E5E5">doesn't care about the data</font><font color="#CCCCCC"> set</font><font color="#E5E5E5"> I can</font>

512
00:21:42,729 --> 00:21:48,399
use<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> really great auto-generated</font>

513
00:21:46,359 --> 00:21:51,070
tests on this<font color="#E5E5E5"> tokenized thing very</font>

514
00:21:48,399 --> 00:21:53,589
quickly and very very effectively

515
00:21:51,070 --> 00:21:55,599
<font color="#E5E5E5">because sometimes</font><font color="#CCCCCC"> my error is</font><font color="#E5E5E5"> inside of</font>

516
00:21:53,589 --> 00:21:58,059
the lambda right<font color="#E5E5E5"> and we should</font><font color="#CCCCCC"> we should</font>

517
00:21:55,599 --> 00:22:02,229
catch those more quickly<font color="#CCCCCC"> the other thing</font>

518
00:21:58,059 --> 00:22:04,690
is<font color="#E5E5E5"> like realistically even even beyond</font>

519
00:22:02,229 --> 00:22:06,700
the fastness of<font color="#E5E5E5"> this has anyone like</font>

520
00:22:04,690 --> 00:22:11,469
enjoyed reading the stack traces from

521
00:22:06,700 --> 00:22:13,899
spark right that's zero people<font color="#CCCCCC"> and it's</font>

522
00:22:11,469 --> 00:22:15,999
not<font color="#CCCCCC"> just that everyone's</font><font color="#E5E5E5"> falling asleep</font>

523
00:22:13,899 --> 00:22:18,699
it's that<font color="#E5E5E5"> spark is incredibly difficult</font>

524
00:22:15,999 --> 00:22:20,349
<font color="#E5E5E5">to debug</font><font color="#CCCCCC"> and so one of the things that</font>

525
00:22:18,700 --> 00:22:21,849
we want in<font color="#CCCCCC"> our</font><font color="#E5E5E5"> test is we want to be</font>

526
00:22:20,349 --> 00:22:23,918
able<font color="#CCCCCC"> to figure</font><font color="#E5E5E5"> out what went wrong and</font>

527
00:22:21,849 --> 00:22:26,499
if we make<font color="#CCCCCC"> our tests only around this</font>

528
00:22:23,919 --> 00:22:27,080
every time<font color="#E5E5E5"> we break something inside of</font>

529
00:22:26,499 --> 00:22:30,110
this

530
00:22:27,080 --> 00:22:31,699
our life<font color="#E5E5E5"> gets really really sad and for</font>

531
00:22:30,110 --> 00:22:33,979
the<font color="#E5E5E5"> people in the back I just</font><font color="#CCCCCC"> took the</font>

532
00:22:31,700 --> 00:22:37,009
lambda expression and gave it a name<font color="#E5E5E5"> and</font>

533
00:22:33,980 --> 00:22:42,139
now that it<font color="#CCCCCC"> has a</font><font color="#E5E5E5"> name it you know feels</font>

534
00:22:37,009 --> 00:22:44,029
important and we can<font color="#CCCCCC"> also test it right</font>

535
00:22:42,139 --> 00:22:46,879
<font color="#E5E5E5">okay so we can do fun things with</font>

536
00:22:44,029 --> 00:22:50,049
<font color="#CCCCCC">datasets</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> TLDR is the spark people</font>

537
00:22:46,879 --> 00:22:57,199
decided they<font color="#E5E5E5"> wanted to rewrite their API</font>

538
00:22:50,049 --> 00:23:00,139
<font color="#CCCCCC">and so yeah whatever rewriting api's</font><font color="#E5E5E5"> all</font>

539
00:22:57,200 --> 00:23:01,489
kinds of<font color="#E5E5E5"> fun</font><font color="#CCCCCC"> we can use</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the same</font>

540
00:23:00,139 --> 00:23:04,879
techniques except instead<font color="#E5E5E5"> of talking</font>

541
00:23:01,489 --> 00:23:07,220
<font color="#E5E5E5">about</font><font color="#CCCCCC"> rdd's we talk about datasets and</font>

542
00:23:04,879 --> 00:23:08,899
I'm<font color="#CCCCCC"> assure that the beam people will</font>

543
00:23:07,220 --> 00:23:11,869
eventually also<font color="#E5E5E5"> decide to rewrite their</font>

544
00:23:08,899 --> 00:23:13,340
API<font color="#CCCCCC"> because it's what</font><font color="#E5E5E5"> we do and then we</font>

545
00:23:11,869 --> 00:23:15,289
<font color="#E5E5E5">can also probably</font><font color="#CCCCCC"> just take the same</font>

546
00:23:13,340 --> 00:23:18,428
techniques<font color="#CCCCCC"> that we already</font><font color="#E5E5E5"> talked</font><font color="#CCCCCC"> about</font>

547
00:23:15,289 --> 00:23:21,320
<font color="#E5E5E5">change the names around and keep</font><font color="#CCCCCC"> going</font>

548
00:23:18,429 --> 00:23:23,059
<font color="#E5E5E5">right here it's pretty much the same</font>

549
00:23:21,320 --> 00:23:25,009
thing we have an equality<font color="#E5E5E5"> function and</font>

550
00:23:23,059 --> 00:23:27,950
this checks that these two<font color="#E5E5E5"> things are</font>

551
00:23:25,009 --> 00:23:29,899
<font color="#CCCCCC">actually equal I mean in this</font><font color="#E5E5E5"> case</font>

552
00:23:27,950 --> 00:23:31,759
<font color="#E5E5E5">they're checking that the same thing is</font>

553
00:23:29,899 --> 00:23:33,859
equal<font color="#CCCCCC"> to itself</font><font color="#E5E5E5"> so this better be true</font>

554
00:23:31,759 --> 00:23:35,600
if it's not there's a bug in<font color="#E5E5E5"> the testing</font>

555
00:23:33,859 --> 00:23:38,600
code but this is how<font color="#E5E5E5"> you would do a</font>

556
00:23:35,600 --> 00:23:41,928
distributed comparison there as well

557
00:23:38,600 --> 00:23:43,998
<font color="#CCCCCC">doo-doo-doo yeh all right so the reason</font>

558
00:23:41,929 --> 00:23:46,100
<font color="#E5E5E5">we care about this is they</font><font color="#CCCCCC"> added schema</font>

559
00:23:43,999 --> 00:23:47,690
information<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> can generate our</font>

560
00:23:46,100 --> 00:23:51,969
generators

561
00:23:47,690 --> 00:23:54,009
from schema<font color="#CCCCCC"> information</font><font color="#E5E5E5"> okay streaming</font>

562
00:23:51,970 --> 00:23:56,840
streaming has all of<font color="#E5E5E5"> these problems</font>

563
00:23:54,009 --> 00:24:04,009
<font color="#E5E5E5">except we also don't know when our test</font>

564
00:23:56,840 --> 00:24:05,330
is done<font color="#CCCCCC"> so the problem is not only do we</font>

565
00:24:04,009 --> 00:24:06,739
<font color="#CCCCCC">have to like figure out</font><font color="#E5E5E5"> how to test them</font>

566
00:24:05,330 --> 00:24:08,330
in distributed collection<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> to</font>

567
00:24:06,739 --> 00:24:10,639
figure<font color="#E5E5E5"> out when we processed all</font><font color="#CCCCCC"> of our</font>

568
00:24:08,330 --> 00:24:11,600
data<font color="#E5E5E5"> and if we've got Kafka I mean we</font>

569
00:24:10,639 --> 00:24:13,428
can figure<font color="#E5E5E5"> out that we've processed</font>

570
00:24:11,600 --> 00:24:15,230
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> that was in Kafka right now</font>

571
00:24:13,429 --> 00:24:16,970
but we<font color="#E5E5E5"> don't know if our test is</font>

572
00:24:15,230 --> 00:24:18,559
<font color="#CCCCCC">finished loading</font><font color="#E5E5E5"> everything</font><font color="#CCCCCC"> into Kafka</font>

573
00:24:16,970 --> 00:24:21,679
<font color="#E5E5E5">and then we end up like these pandas</font>

574
00:24:18,559 --> 00:24:24,649
<font color="#CCCCCC">panda</font><font color="#E5E5E5"> runs independet sits sad but also</font>

575
00:24:21,679 --> 00:24:26,210
<font color="#E5E5E5">cute because our test will fail and how</font>

576
00:24:24,649 --> 00:24:28,428
most<font color="#E5E5E5"> people solve this is they put</font>

577
00:24:26,210 --> 00:24:30,799
asleep 100 in their<font color="#E5E5E5"> tests and then</font>

578
00:24:28,429 --> 00:24:34,159
you're not<font color="#E5E5E5"> this cute panda you're a very</font>

579
00:24:30,799 --> 00:24:38,309
sad other animal<font color="#E5E5E5"> that I don't want to</font>

580
00:24:34,159 --> 00:24:40,830
hug<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> okay though</font>

581
00:24:38,309 --> 00:24:42,779
if you've ever said<font color="#CCCCCC"> to yourself I bet</font>

582
00:24:40,830 --> 00:24:44,908
someone bothered to solve this<font color="#E5E5E5"> problem</font>

583
00:24:42,779 --> 00:24:47,009
<font color="#E5E5E5">three different people have in</font><font color="#CCCCCC"> different</font>

584
00:24:44,909 --> 00:24:48,629
<font color="#CCCCCC">open source libraries and they</font>

585
00:24:47,009 --> 00:24:51,059
essentially hide<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> from you</font><font color="#E5E5E5"> and</font>

586
00:24:48,629 --> 00:24:53,820
screw<font color="#CCCCCC"> around with</font><font color="#E5E5E5"> the underlying system</font>

587
00:24:51,059 --> 00:24:56,399
clock<font color="#E5E5E5"> to guarantee</font><font color="#CCCCCC"> that things have</font>

588
00:24:53,820 --> 00:24:58,229
happened<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is guarantee with a</font>

589
00:24:56,399 --> 00:25:00,570
very flexible version of the word

590
00:24:58,229 --> 00:25:02,489
guarantee<font color="#E5E5E5"> but essentially there's no</font>

591
00:25:00,570 --> 00:25:07,109
sleeps instead your system clock<font color="#E5E5E5"> is just</font>

592
00:25:02,489 --> 00:25:10,979
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to go and it'll probably work if</font>

593
00:25:07,109 --> 00:25:15,059
it<font color="#E5E5E5"> doesn't work for you yeah they're all</font>

594
00:25:10,979 --> 00:25:16,679
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> libraries</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so we can put</font>

595
00:25:15,059 --> 00:25:20,190
these techniques together<font color="#CCCCCC"> into smart</font>

596
00:25:16,679 --> 00:25:23,969
structured streaming we take a new API

597
00:25:20,190 --> 00:25:26,669
another new API<font color="#CCCCCC"> and a third API and put</font>

598
00:25:23,969 --> 00:25:29,989
them together<font color="#CCCCCC"> what could go wrong it</font>

599
00:25:26,669 --> 00:25:32,309
turns<font color="#CCCCCC"> out most things but they actually</font>

600
00:25:29,989 --> 00:25:35,399
the<font color="#CCCCCC"> spark</font><font color="#E5E5E5"> people finally realize that</font>

601
00:25:32,309 --> 00:25:38,489
<font color="#E5E5E5">testing was a first-class</font><font color="#CCCCCC"> citizen and so</font>

602
00:25:35,399 --> 00:25:42,238
you no longer<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to make the system</font>

603
00:25:38,489 --> 00:25:46,349
<font color="#CCCCCC">clock</font><font color="#E5E5E5"> or like instead we have this nice</font>

604
00:25:42,239 --> 00:25:49,979
thing called process all available<font color="#E5E5E5"> much</font>

605
00:25:46,349 --> 00:25:53,359
nicer<font color="#E5E5E5"> much more reasonable you just</font>

606
00:25:49,979 --> 00:25:56,179
write this thing<font color="#CCCCCC"> you pretend</font><font color="#E5E5E5"> that</font>

607
00:25:53,359 --> 00:25:59,668
writing<font color="#CCCCCC"> scholar</font><font color="#E5E5E5"> code is natural to you</font>

608
00:25:56,179 --> 00:26:02,039
<font color="#CCCCCC">and then it just works if you don't</font>

609
00:25:59,669 --> 00:26:03,839
write<font color="#E5E5E5"> scholar code the</font><font color="#CCCCCC"> java version</font><font color="#E5E5E5"> of</font>

610
00:26:02,039 --> 00:26:06,509
it is pretty<font color="#CCCCCC"> much</font><font color="#E5E5E5"> the same thing with</font>

611
00:26:03,839 --> 00:26:09,029
extra angles eating so that's cool

612
00:26:06,509 --> 00:26:10,349
<font color="#CCCCCC">business logic</font><font color="#E5E5E5"> goes here</font><font color="#CCCCCC"> and this is</font>

613
00:26:09,029 --> 00:26:17,729
<font color="#E5E5E5">really the part we</font><font color="#CCCCCC"> wanna test</font>

614
00:26:10,349 --> 00:26:20,668
<font color="#E5E5E5">but spark is amazing so validation</font><font color="#CCCCCC"> and</font>

615
00:26:17,729 --> 00:26:22,379
so yeah<font color="#CCCCCC"> you should run your</font><font color="#E5E5E5"> validation</font>

616
00:26:20,669 --> 00:26:24,809
stuff during<font color="#E5E5E5"> your integration testing as</font>

617
00:26:22,379 --> 00:26:26,309
well this<font color="#CCCCCC"> will</font><font color="#E5E5E5"> probably help you catch</font>

618
00:26:24,809 --> 00:26:28,379
if your validation<font color="#E5E5E5"> rules are wrong</font>

619
00:26:26,309 --> 00:26:31,259
<font color="#E5E5E5">before you put them into</font><font color="#CCCCCC"> production so</font>

620
00:26:28,379 --> 00:26:33,149
<font color="#CCCCCC">how do</font><font color="#E5E5E5"> we validate</font><font color="#CCCCCC"> our jobs both beam</font>

621
00:26:31,259 --> 00:26:35,519
<font color="#CCCCCC">and spark have their</font><font color="#E5E5E5"> built-in counters</font>

622
00:26:33,149 --> 00:26:37,559
<font color="#E5E5E5">they've got things like bytes that</font><font color="#CCCCCC"> have</font>

623
00:26:35,519 --> 00:26:39,779
been read<font color="#E5E5E5"> written and read during each</font>

624
00:26:37,559 --> 00:26:41,759
stage<font color="#E5E5E5"> the number of</font><font color="#CCCCCC"> Records which</font><font color="#E5E5E5"> are</font>

625
00:26:39,779 --> 00:26:43,679
<font color="#E5E5E5">being shuffled around and all sorts of</font>

626
00:26:41,759 --> 00:26:45,839
really<font color="#E5E5E5"> wonderful system metrics that you</font>

627
00:26:43,679 --> 00:26:48,960
probably<font color="#E5E5E5"> don't care about that being</font>

628
00:26:45,839 --> 00:26:50,729
<font color="#E5E5E5">said if GC time spikes</font><font color="#CCCCCC"> a giant amount</font>

629
00:26:48,960 --> 00:26:52,280
you probably want<font color="#CCCCCC"> to investigate that</font>

630
00:26:50,729 --> 00:26:55,640
<font color="#E5E5E5">but that's not really</font>

631
00:26:52,280 --> 00:26:58,790
this is about<font color="#CCCCCC"> you can add the counters</font>

632
00:26:55,640 --> 00:27:00,890
<font color="#E5E5E5">for the things you care</font><font color="#CCCCCC"> about I care</font>

633
00:26:58,790 --> 00:27:03,560
<font color="#E5E5E5">about</font><font color="#CCCCCC"> records which I declare invalid</font>

634
00:27:00,890 --> 00:27:05,810
and kick out of<font color="#E5E5E5"> my pipeline</font><font color="#CCCCCC"> I also care</font>

635
00:27:03,560 --> 00:27:08,149
about<font color="#E5E5E5"> the users for</font><font color="#CCCCCC"> whom</font><font color="#E5E5E5"> I have</font><font color="#CCCCCC"> no idea</font>

636
00:27:05,810 --> 00:27:11,780
what to recommend<font color="#CCCCCC"> and I give the default</font>

637
00:27:08,150 --> 00:27:12,500
recommendation<font color="#CCCCCC"> to and accumulators</font>

638
00:27:11,780 --> 00:27:15,800
<font color="#CCCCCC">inspark</font>

639
00:27:12,500 --> 00:27:20,330
are not perfect<font color="#CCCCCC"> in being there called</font>

640
00:27:15,800 --> 00:27:23,419
counters and they only work some of<font color="#E5E5E5"> the</font>

641
00:27:20,330 --> 00:27:25,129
<font color="#E5E5E5">time but or more specifically their</font>

642
00:27:23,420 --> 00:27:27,920
behavior depends<font color="#E5E5E5"> on which execution</font>

643
00:27:25,130 --> 00:27:31,040
engine<font color="#E5E5E5"> beam is running on that specific</font>

644
00:27:27,920 --> 00:27:32,900
day<font color="#E5E5E5"> so if you run beam on</font><font color="#CCCCCC"> spark it</font>

645
00:27:31,040 --> 00:27:35,000
behaves as well as spark does which is

646
00:27:32,900 --> 00:27:38,120
<font color="#E5E5E5">poorly any from beam on something else</font>

647
00:27:35,000 --> 00:27:41,600
it might work better<font color="#E5E5E5"> but</font><font color="#CCCCCC"> that might</font><font color="#E5E5E5"> get</font>

648
00:27:38,120 --> 00:27:43,129
fixed<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> and so yeah</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we can have</font>

649
00:27:41,600 --> 00:27:45,350
simple rules which are like the

650
00:27:43,130 --> 00:27:47,420
percentage of invalid records<font color="#E5E5E5"> should not</font>

651
00:27:45,350 --> 00:27:49,730
<font color="#E5E5E5">be that high we can also have other</font>

652
00:27:47,420 --> 00:27:51,800
historic rules<font color="#E5E5E5"> like the number of users</font>

653
00:27:49,730 --> 00:27:54,320
should<font color="#CCCCCC"> be greater than the number of</font>

654
00:27:51,800 --> 00:27:55,820
<font color="#E5E5E5">users I had yesterday</font><font color="#CCCCCC"> or if you're at a</font>

655
00:27:54,320 --> 00:27:57,290
failing<font color="#E5E5E5"> company the number</font><font color="#CCCCCC"> of users</font>

656
00:27:55,820 --> 00:27:59,870
should<font color="#CCCCCC"> not have decreased</font><font color="#E5E5E5"> by more than</font>

657
00:27:57,290 --> 00:28:01,220
<font color="#CCCCCC">10 percent or</font><font color="#E5E5E5"> it's time to help the job</font>

658
00:27:59,870 --> 00:28:06,709
because I'm<font color="#E5E5E5"> gonna update my resume</font>

659
00:28:01,220 --> 00:28:09,740
<font color="#E5E5E5">anyways it turns</font><font color="#CCCCCC"> out most people are</font>

660
00:28:06,710 --> 00:28:11,870
really<font color="#E5E5E5"> lazy</font><font color="#CCCCCC"> and the most common</font><font color="#E5E5E5"> thing</font>

661
00:28:09,740 --> 00:28:13,940
that they just<font color="#CCCCCC"> do for</font><font color="#E5E5E5"> validation is they</font>

662
00:28:11,870 --> 00:28:16,879
validate that the output file sizes<font color="#E5E5E5"> are</font>

663
00:28:13,940 --> 00:28:18,470
reasonable which is really<font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> do</font>

664
00:28:16,880 --> 00:28:21,980
<font color="#E5E5E5">and they validate that the execution</font>

665
00:28:18,470 --> 00:28:25,310
<font color="#E5E5E5">time has not spiked or alternatively</font>

666
00:28:21,980 --> 00:28:26,990
also decreased<font color="#CCCCCC"> because</font><font color="#E5E5E5"> that can be a</font>

667
00:28:25,310 --> 00:28:28,760
<font color="#E5E5E5">really good metric for I dumped a bunch</font>

668
00:28:26,990 --> 00:28:31,360
of data on the floor<font color="#E5E5E5"> if my pipeline</font>

669
00:28:28,760 --> 00:28:33,890
finished and you know half as long time

670
00:28:31,360 --> 00:28:36,379
<font color="#E5E5E5">there's some libraries to do this</font><font color="#CCCCCC"> you</font>

671
00:28:33,890 --> 00:28:39,740
<font color="#E5E5E5">should not use any</font><font color="#CCCCCC"> of them even though</font><font color="#E5E5E5"> I</font>

672
00:28:36,380 --> 00:28:41,420
co-wrote<font color="#E5E5E5"> some of them but they're great</font>

673
00:28:39,740 --> 00:28:42,680
concepts and you<font color="#E5E5E5"> can just re implement</font>

674
00:28:41,420 --> 00:28:47,480
all<font color="#E5E5E5"> of this code yourself</font><font color="#CCCCCC"> which I know</font>

675
00:28:42,680 --> 00:28:49,340
is what we love<font color="#CCCCCC"> doing and one thing to</font>

676
00:28:47,480 --> 00:28:51,800
<font color="#E5E5E5">think</font><font color="#CCCCCC"> about is if your</font><font color="#E5E5E5"> property</font><font color="#CCCCCC"> base</font>

677
00:28:49,340 --> 00:28:54,709
<font color="#E5E5E5">tests if any of them can make</font><font color="#CCCCCC"> census</font>

678
00:28:51,800 --> 00:28:56,149
validation rules<font color="#CCCCCC"> for example if we say</font>

679
00:28:54,710 --> 00:28:58,040
things<font color="#E5E5E5"> about the number of records</font>

680
00:28:56,150 --> 00:29:00,740
coming<font color="#E5E5E5"> in and out of different</font><font color="#CCCCCC"> stages in</font>

681
00:28:58,040 --> 00:29:02,450
our validation those can be<font color="#E5E5E5"> in</font><font color="#CCCCCC"> arts</font><font color="#E5E5E5"> or</font>

682
00:29:00,740 --> 00:29:05,000
<font color="#E5E5E5">in</font><font color="#CCCCCC"> our property tests</font><font color="#E5E5E5"> those can</font><font color="#CCCCCC"> be</font>

683
00:29:02,450 --> 00:29:05,930
<font color="#E5E5E5">really good things to assert are true at</font>

684
00:29:05,000 --> 00:29:07,820
<font color="#E5E5E5">runtime</font>

685
00:29:05,930 --> 00:29:09,770
or maybe not<font color="#CCCCCC"> assert</font><font color="#E5E5E5"> because we don't</font>

686
00:29:07,820 --> 00:29:14,149
want<font color="#E5E5E5"> to throw an exception but at least</font>

687
00:29:09,770 --> 00:29:17,870
log<font color="#E5E5E5"> a Python example</font><font color="#CCCCCC"> I promise there was</font>

688
00:29:14,150 --> 00:29:22,280
<font color="#E5E5E5">going to be Python</font><font color="#CCCCCC"> so this is the Python</font>

689
00:29:17,870 --> 00:29:25,550
<font color="#E5E5E5">spark example</font><font color="#CCCCCC"> we keep track</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font>

690
00:29:22,280 --> 00:29:27,889
number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> records that</font><font color="#CCCCCC"> we reject I'm</font>

691
00:29:25,550 --> 00:29:30,500
dividing by<font color="#CCCCCC"> zero so I'm sort of hoping</font>

692
00:29:27,890 --> 00:29:35,930
<font color="#E5E5E5">that I reject all</font><font color="#CCCCCC"> of the records or I</font>

693
00:29:30,500 --> 00:29:37,760
have a magical CPU<font color="#E5E5E5"> from Intel so I have</font>

694
00:29:35,930 --> 00:29:40,670
to I have<font color="#CCCCCC"> to make the Intel jokes it's</font>

695
00:29:37,760 --> 00:29:42,830
pretty much requirement<font color="#CCCCCC"> I mean this is</font>

696
00:29:40,670 --> 00:29:45,170
like the<font color="#E5E5E5"> really really old Intel joke</font>

697
00:29:42,830 --> 00:29:46,399
<font color="#E5E5E5">about floating point numbers anyone</font>

698
00:29:45,170 --> 00:29:48,110
remember<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> okay</font>

699
00:29:46,400 --> 00:29:49,760
some people are nodding their<font color="#E5E5E5"> heads but</font>

700
00:29:48,110 --> 00:29:52,820
I'm also getting the like shut up<font color="#E5E5E5"> and</font>

701
00:29:49,760 --> 00:29:54,440
move<font color="#E5E5E5"> on</font><font color="#CCCCCC"> so we do</font><font color="#E5E5E5"> our rejection count</font>

702
00:29:52,820 --> 00:29:56,090
here and we<font color="#E5E5E5"> keep track</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the number of</font>

703
00:29:54,440 --> 00:30:00,920
<font color="#CCCCCC">Records</font><font color="#E5E5E5"> that which we say are sad</font>

704
00:29:56,090 --> 00:30:02,179
records<font color="#E5E5E5"> Roggin and then we go ahead and</font>

705
00:30:00,920 --> 00:30:04,490
we just printed<font color="#E5E5E5"> out with a print</font>

706
00:30:02,180 --> 00:30:07,190
statement<font color="#CCCCCC"> but ideally we would do</font>

707
00:30:04,490 --> 00:30:10,700
<font color="#E5E5E5">something smarter like maybe not push</font>

708
00:30:07,190 --> 00:30:12,680
the job into production<font color="#E5E5E5"> or sorry not</font>

709
00:30:10,700 --> 00:30:14,960
<font color="#CCCCCC">push the job not</font><font color="#E5E5E5"> push our output into</font>

710
00:30:12,680 --> 00:30:18,650
production<font color="#CCCCCC"> so you would exit one or</font>

711
00:30:14,960 --> 00:30:20,840
whatever you do to indicate to<font color="#E5E5E5"> your you</font>

712
00:30:18,650 --> 00:30:24,470
<font color="#E5E5E5">know</font><font color="#CCCCCC"> airflow not to continue</font><font color="#E5E5E5"> running</font>

713
00:30:20,840 --> 00:30:29,480
<font color="#E5E5E5">without human intervention</font><font color="#CCCCCC"> we can do the</font>

714
00:30:24,470 --> 00:30:31,670
<font color="#E5E5E5">same thing in Scala code yeah this is</font>

715
00:30:29,480 --> 00:30:33,230
the same thing in Scala code<font color="#CCCCCC"> I really</font>

716
00:30:31,670 --> 00:30:36,500
should have<font color="#E5E5E5"> just left it</font><font color="#CCCCCC"> in just Python</font>

717
00:30:33,230 --> 00:30:38,570
code<font color="#E5E5E5"> but we can also use the internal</font>

718
00:30:36,500 --> 00:30:41,960
counters which spark keeps track of<font color="#E5E5E5"> and</font>

719
00:30:38,570 --> 00:30:44,600
beam<font color="#CCCCCC"> and so here</font><font color="#E5E5E5"> I can say I'm expecting</font>

720
00:30:41,960 --> 00:30:46,820
between<font color="#CCCCCC"> three and a thousand records if</font>

721
00:30:44,600 --> 00:30:50,600
this is<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> true</font><font color="#CCCCCC"> I should probably</font>

722
00:30:46,820 --> 00:30:53,300
just<font color="#E5E5E5"> be using pandas because pandas are</font>

723
00:30:50,600 --> 00:30:55,879
much<font color="#E5E5E5"> cuter than spark</font><font color="#CCCCCC"> but we can have an</font>

724
00:30:53,300 --> 00:30:57,740
absolute rule that<font color="#E5E5E5"> says like hey this</font><font color="#CCCCCC"> is</font>

725
00:30:55,880 --> 00:31:02,000
some values and<font color="#E5E5E5"> it's reference to an</font>

726
00:30:57,740 --> 00:31:03,950
internal counter<font color="#E5E5E5"> all right we can also</font>

727
00:31:02,000 --> 00:31:06,740
instead of<font color="#E5E5E5"> an absolute rule we can have</font>

728
00:31:03,950 --> 00:31:08,690
a historic rule where we<font color="#E5E5E5"> say I want this</font>

729
00:31:06,740 --> 00:31:10,970
value<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be within ten percent</font><font color="#E5E5E5"> of where</font>

730
00:31:08,690 --> 00:31:13,040
I was yesterday<font color="#E5E5E5"> or within ten percent of</font>

731
00:31:10,970 --> 00:31:15,110
where I was like the same day<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

732
00:31:13,040 --> 00:31:17,360
last month like whatever cyclic property

733
00:31:15,110 --> 00:31:18,889
<font color="#E5E5E5">this record might hold if we were</font>

734
00:31:17,360 --> 00:31:19,469
<font color="#E5E5E5">looking at orders we would probably</font><font color="#CCCCCC"> use</font>

735
00:31:18,890 --> 00:31:23,460
year over

736
00:31:19,470 --> 00:31:25,140
year<font color="#E5E5E5"> to account for seasonal trends</font><font color="#CCCCCC"> the</font>

737
00:31:23,460 --> 00:31:29,760
same thing<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be done in beam with a</font>

738
00:31:25,140 --> 00:31:33,179
lot<font color="#E5E5E5"> more text because it's in Java</font><font color="#CCCCCC"> so we</font>

739
00:31:29,760 --> 00:31:34,169
can make the same counters<font color="#E5E5E5"> for the words</font>

740
00:31:33,179 --> 00:31:35,880
<font color="#E5E5E5">that we've matched in the words that</font>

741
00:31:34,169 --> 00:31:38,130
<font color="#CCCCCC">we've rejected</font><font color="#E5E5E5"> and then we can have our</font>

742
00:31:35,880 --> 00:31:39,840
<font color="#E5E5E5">assertion here that like these values</font>

743
00:31:38,130 --> 00:31:42,000
<font color="#CCCCCC">should be reasonable after our pipeline</font>

744
00:31:39,840 --> 00:31:43,850
is<font color="#E5E5E5"> run and so we would</font><font color="#CCCCCC"> use this for like</font>

745
00:31:42,000 --> 00:31:45,960
the number<font color="#E5E5E5"> of records that</font><font color="#CCCCCC"> are processed</font>

746
00:31:43,850 --> 00:31:48,059
<font color="#CCCCCC">sorry the number of records that</font><font color="#E5E5E5"> we</font>

747
00:31:45,960 --> 00:31:50,429
rejected<font color="#E5E5E5"> versus kept we probably</font>

748
00:31:48,059 --> 00:31:52,470
wouldn't<font color="#CCCCCC"> use words unless you're</font><font color="#E5E5E5"> just</font>

749
00:31:50,429 --> 00:31:56,730
deploying the word count pipeline again

750
00:31:52,470 --> 00:31:59,400
<font color="#E5E5E5">which is great so if</font><font color="#CCCCCC"> this talk was not</font>

751
00:31:56,730 --> 00:32:02,820
that much with the sleepy pandas for

752
00:31:59,400 --> 00:32:04,740
people there's a bunch of<font color="#E5E5E5"> related things</font>

753
00:32:02,820 --> 00:32:08,100
if anyone's like a really hardcore Java

754
00:32:04,740 --> 00:32:10,770
developer<font color="#CCCCCC"> there's a Java</font><font color="#E5E5E5"> version of this</font>

755
00:32:08,100 --> 00:32:12,809
<font color="#E5E5E5">I should have marked it</font><font color="#CCCCCC"> but one of</font><font color="#E5E5E5"> these</font>

756
00:32:10,770 --> 00:32:14,280
<font color="#E5E5E5">links will take you to a</font><font color="#CCCCCC"> Java thing and</font>

757
00:32:12,809 --> 00:32:16,408
you can't click on any of them because

758
00:32:14,280 --> 00:32:18,658
<font color="#E5E5E5">you're sitting in this room but later</font><font color="#CCCCCC"> on</font>

759
00:32:16,409 --> 00:32:20,690
<font color="#E5E5E5">when you go and look at the PDF you</font><font color="#CCCCCC"> can</font>

760
00:32:18,659 --> 00:32:23,039
<font color="#E5E5E5">figure out which one</font><font color="#CCCCCC"> of these</font><font color="#E5E5E5"> is Java</font>

761
00:32:20,690 --> 00:32:25,710
<font color="#E5E5E5">specific and there is a Java blog post</font>

762
00:32:23,039 --> 00:32:29,450
on how<font color="#CCCCCC"> to do the same</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> there are a</font>

763
00:32:25,710 --> 00:32:29,450
bunch<font color="#E5E5E5"> of github projects because why not</font>

764
00:32:30,470 --> 00:32:35,700
SS check is notable<font color="#E5E5E5"> because it's one of</font>

765
00:32:33,720 --> 00:32:37,200
<font color="#E5E5E5">the ones which isn't</font><font color="#CCCCCC"> written by me as is</font>

766
00:32:35,700 --> 00:32:40,260
the<font color="#CCCCCC"> spark integration tests that's</font>

767
00:32:37,200 --> 00:32:42,270
written<font color="#E5E5E5"> by my former employer who no</font>

768
00:32:40,260 --> 00:32:45,360
<font color="#CCCCCC">longer pays me money but they still make</font>

769
00:32:42,270 --> 00:32:48,210
good<font color="#E5E5E5"> software and Scala</font><font color="#CCCCCC"> check is not</font>

770
00:32:45,360 --> 00:32:50,039
spark or<font color="#E5E5E5"> beam specific but it's a really</font>

771
00:32:48,210 --> 00:32:54,960
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> library and I think everyone</font>

772
00:32:50,039 --> 00:32:57,419
should<font color="#CCCCCC"> check out property testing here's</font>

773
00:32:54,960 --> 00:33:00,360
how<font color="#E5E5E5"> to include spark testing base if you</font>

774
00:32:57,419 --> 00:33:03,659
<font color="#E5E5E5">want to use it in</font><font color="#CCCCCC"> your software SP te</font>

775
00:33:00,360 --> 00:33:06,360
for people who like slow build<font color="#E5E5E5"> times and</font>

776
00:33:03,659 --> 00:33:11,190
warm laptops and maven<font color="#CCCCCC"> for people who</font>

777
00:33:06,360 --> 00:33:12,990
remember the<font color="#E5E5E5"> 90s</font><font color="#CCCCCC"> there are a</font><font color="#E5E5E5"> bunch of</font>

778
00:33:11,190 --> 00:33:15,570
<font color="#E5E5E5">books on spark I'm a co-author of many</font>

779
00:33:12,990 --> 00:33:17,789
of them this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the only</font><font color="#E5E5E5"> one which</font>

780
00:33:15,570 --> 00:33:19,470
<font color="#E5E5E5">really talks about testing because I</font>

781
00:33:17,789 --> 00:33:22,799
thought<font color="#CCCCCC"> people would care about testing</font>

782
00:33:19,470 --> 00:33:25,350
<font color="#E5E5E5">and figure it out on their own</font><font color="#CCCCCC"> it turns</font>

783
00:33:22,799 --> 00:33:27,960
<font color="#E5E5E5">out that was not</font><font color="#CCCCCC"> the case there's only</font>

784
00:33:25,350 --> 00:33:29,610
<font color="#E5E5E5">like one chapter on</font><font color="#CCCCCC"> testing</font><font color="#E5E5E5"> and the</font>

785
00:33:27,960 --> 00:33:32,220
O'Reilly folks have it for sale on their

786
00:33:29,610 --> 00:33:32,939
table and you can also buy it from

787
00:33:32,220 --> 00:33:34,739
Amazon

788
00:33:32,940 --> 00:33:37,019
if you're worried about Jeff Bezos<font color="#E5E5E5"> his</font>

789
00:33:34,739 --> 00:33:41,729
ability to<font color="#E5E5E5"> purchase another newspaper</font><font color="#CCCCCC"> I</font>

790
00:33:37,019 --> 00:33:43,470
I worry about<font color="#E5E5E5"> this greatly okay that</font>

791
00:33:41,729 --> 00:33:44,820
<font color="#CCCCCC">truck</font><font color="#E5E5E5"> goes over a lot better in Seattle</font>

792
00:33:43,470 --> 00:33:45,359
<font color="#E5E5E5">actually it goes over a lot worse</font><font color="#CCCCCC"> in</font>

793
00:33:44,820 --> 00:33:47,908
<font color="#E5E5E5">Seattle</font>

794
00:33:45,359 --> 00:33:51,029
but there's<font color="#E5E5E5"> more of a reaction</font><font color="#CCCCCC"> I will be</font>

795
00:33:47,909 --> 00:33:53,820
in the FASTA HPC room<font color="#E5E5E5"> tomorrow at 4:00</font><font color="#CCCCCC"> I</font>

796
00:33:51,029 --> 00:33:55,049
don't<font color="#E5E5E5"> remember what I'm talking</font><font color="#CCCCCC"> about</font>

797
00:33:53,820 --> 00:33:58,678
which is super awkward

798
00:33:55,049 --> 00:34:01,139
<font color="#CCCCCC">but I already made</font><font color="#E5E5E5"> the slides I just yes</font>

799
00:33:58,679 --> 00:34:03,929
<font color="#CCCCCC">if</font><font color="#E5E5E5"> anyone wants</font><font color="#CCCCCC"> to go to Stockholm</font><font color="#E5E5E5"> I'll</font>

800
00:34:01,139 --> 00:34:06,658
be in<font color="#CCCCCC"> Jay focus</font><font color="#E5E5E5"> if anyone wants an</font>

801
00:34:03,929 --> 00:34:08,849
excuse to go to<font color="#E5E5E5"> California</font><font color="#CCCCCC"> San Jose</font><font color="#E5E5E5"> is a</font>

802
00:34:06,659 --> 00:34:12,750
shitty place to visit<font color="#E5E5E5"> but it's close to</font>

803
00:34:08,849 --> 00:34:16,799
<font color="#E5E5E5">San Francisco and London and Brazil</font>

804
00:34:12,750 --> 00:34:20,369
those are nice places<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Q Khan will</font>

805
00:34:16,799 --> 00:34:22,168
actually be<font color="#E5E5E5"> in San Francisco so I'm</font>

806
00:34:20,369 --> 00:34:24,450
<font color="#E5E5E5">gonna do questions now</font><font color="#CCCCCC"> yes oh that's</font>

807
00:34:22,168 --> 00:34:27,569
<font color="#E5E5E5">okay thanks</font><font color="#CCCCCC"> I think I've got 10</font><font color="#E5E5E5"> minutes</font>

808
00:34:24,449 --> 00:34:31,739
for<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> hopefully yeah 10 minutes</font>

809
00:34:27,569 --> 00:34:33,960
<font color="#CCCCCC">for questions does</font><font color="#E5E5E5"> anyone have questions</font>

810
00:34:31,739 --> 00:34:37,219
<font color="#E5E5E5">or was everyone really zoned out working</font>

811
00:34:33,960 --> 00:34:37,220
<font color="#E5E5E5">on their laptop either way is fine</font>

812
00:34:37,609 --> 00:34:45,020
<font color="#E5E5E5">laptops it was</font><font color="#CCCCCC"> ok yeah</font><font color="#E5E5E5"> a question</font>

813
00:34:55,800 --> 00:35:00,700
sure<font color="#E5E5E5"> so that's that's a great question</font>

814
00:34:58,570 --> 00:35:04,240
the question is what is what<font color="#CCCCCC"> should</font><font color="#E5E5E5"> we</font>

815
00:35:00,700 --> 00:35:05,980
<font color="#E5E5E5">do for validation when it fails and I</font>

816
00:35:04,240 --> 00:35:09,129
think that depends<font color="#E5E5E5"> a lot on your use</font>

817
00:35:05,980 --> 00:35:10,600
case<font color="#CCCCCC"> back when I</font><font color="#E5E5E5"> first started making</font>

818
00:35:09,130 --> 00:35:12,490
<font color="#E5E5E5">recommendation pipelines</font>

819
00:35:10,600 --> 00:35:14,380
I thought recommendations aren't<font color="#E5E5E5"> that</font>

820
00:35:12,490 --> 00:35:16,629
bad if I get them wrong<font color="#E5E5E5"> I'll push it</font>

821
00:35:14,380 --> 00:35:18,940
<font color="#E5E5E5">into</font><font color="#CCCCCC"> production and log it then I found</font>

822
00:35:16,630 --> 00:35:21,430
out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I was wrong</font>

823
00:35:18,940 --> 00:35:22,870
so I think it's<font color="#E5E5E5"> really important if if</font>

824
00:35:21,430 --> 00:35:25,390
we've detected<font color="#E5E5E5"> that something has gone</font>

825
00:35:22,870 --> 00:35:30,520
<font color="#CCCCCC">wrong</font><font color="#E5E5E5"> we don't know how bad it is</font>

826
00:35:25,390 --> 00:35:33,339
normally<font color="#E5E5E5"> so I think it's</font><font color="#CCCCCC"> useful to</font><font color="#E5E5E5"> save</font>

827
00:35:30,520 --> 00:35:35,980
the output<font color="#E5E5E5"> and exit with an error codes</font>

828
00:35:33,340 --> 00:35:37,570
so<font color="#CCCCCC"> that Luigi</font><font color="#E5E5E5"> or airflow</font><font color="#CCCCCC"> or whichever</font>

829
00:35:35,980 --> 00:35:39,760
tool we are<font color="#CCCCCC"> using to coordinate our</font>

830
00:35:37,570 --> 00:35:42,310
pushes to production<font color="#E5E5E5"> does not push our</font>

831
00:35:39,760 --> 00:35:44,560
<font color="#E5E5E5">data to production</font><font color="#CCCCCC"> but I can still go</font>

832
00:35:42,310 --> 00:35:46,540
and look at<font color="#CCCCCC"> my output and manually</font>

833
00:35:44,560 --> 00:35:48,279
validate what happened because<font color="#E5E5E5"> it's</font>

834
00:35:46,540 --> 00:35:50,320
<font color="#E5E5E5">possible like our validation rules don't</font>

835
00:35:48,280 --> 00:35:52,120
have to be perfect<font color="#CCCCCC"> right like we might</font>

836
00:35:50,320 --> 00:35:54,070
have a rule<font color="#E5E5E5"> in there that says like our</font>

837
00:35:52,120 --> 00:35:56,500
user growth is expected<font color="#CCCCCC"> to be like</font>

838
00:35:54,070 --> 00:35:58,840
<font color="#CCCCCC">within</font><font color="#E5E5E5"> 20 percent or something which</font>

839
00:35:56,500 --> 00:36:01,090
happened<font color="#CCCCCC"> that Amazon</font><font color="#E5E5E5"> was like I like</font>

840
00:35:58,840 --> 00:36:03,550
expect my orders to be in this band<font color="#E5E5E5"> and</font>

841
00:36:01,090 --> 00:36:04,630
sometimes you go out<font color="#CCCCCC"> of that band</font><font color="#E5E5E5"> but it</font>

842
00:36:03,550 --> 00:36:06,700
turns out it's<font color="#CCCCCC"> just because there's a</font>

843
00:36:04,630 --> 00:36:09,070
sports game<font color="#CCCCCC"> and that doesn't</font><font color="#E5E5E5"> mean that</font>

844
00:36:06,700 --> 00:36:10,720
<font color="#E5E5E5">your code</font><font color="#CCCCCC"> is wrong</font><font color="#E5E5E5"> but you wanted to</font>

845
00:36:09,070 --> 00:36:12,880
<font color="#E5E5E5">check it before you pushed it through</font>

846
00:36:10,720 --> 00:36:14,890
<font color="#E5E5E5">right you want a human to have to sit</font>

847
00:36:12,880 --> 00:36:17,830
there think<font color="#CCCCCC"> about it and then be</font><font color="#E5E5E5"> able to</font>

848
00:36:14,890 --> 00:36:18,910
blame<font color="#E5E5E5"> that human later</font><font color="#CCCCCC"> related</font><font color="#E5E5E5"> you</font>

849
00:36:17,830 --> 00:36:20,350
should have someone else right now<font color="#CCCCCC"> I'm</font>

850
00:36:18,910 --> 00:36:22,330
just<font color="#E5E5E5"> kidding</font><font color="#CCCCCC"> you don't actually need to</font>

851
00:36:20,350 --> 00:36:24,279
<font color="#E5E5E5">blame the human afterwards I think</font>

852
00:36:22,330 --> 00:36:26,410
<font color="#E5E5E5">blaming people is bad but</font><font color="#CCCCCC"> youyou</font><font color="#E5E5E5"> want a</font>

853
00:36:24,280 --> 00:36:29,500
human<font color="#E5E5E5"> to be able to to look at it and</font>

854
00:36:26,410 --> 00:36:31,620
think like does this warning make sense

855
00:36:29,500 --> 00:36:34,510
<font color="#E5E5E5">given the</font><font color="#CCCCCC"> information I have right like</font>

856
00:36:31,620 --> 00:36:36,339
if<font color="#E5E5E5"> I if I try and write validation rules</font>

857
00:36:34,510 --> 00:36:38,200
which are<font color="#E5E5E5"> always correct like I'm gonna</font>

858
00:36:36,340 --> 00:36:40,120
have to<font color="#E5E5E5"> connect to like the National</font>

859
00:36:38,200 --> 00:36:43,660
Football League<font color="#E5E5E5"> website and that's not a</font>

860
00:36:40,120 --> 00:36:50,040
thing<font color="#E5E5E5"> I want to do nothing against NFL</font>

861
00:36:43,660 --> 00:36:50,040
<font color="#E5E5E5">football okay any yeah</font><font color="#CCCCCC"> a second</font><font color="#E5E5E5"> question</font>

862
00:36:50,850 --> 00:36:55,960
<font color="#E5E5E5">okay so the question</font><font color="#CCCCCC"> is how much</font>

863
00:36:52,870 --> 00:36:58,420
validation<font color="#E5E5E5"> is too much that's a good</font>

864
00:36:55,960 --> 00:37:00,310
question<font color="#E5E5E5"> I think it depends on what the</font>

865
00:36:58,420 --> 00:37:03,880
<font color="#E5E5E5">potential impact is</font><font color="#CCCCCC"> of your pipeline</font>

866
00:37:00,310 --> 00:37:06,058
going<font color="#E5E5E5"> wrong</font><font color="#CCCCCC"> I think if</font><font color="#E5E5E5"> you're if you're</font>

867
00:37:03,880 --> 00:37:11,380
<font color="#CCCCCC">building things</font><font color="#E5E5E5"> which like</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> kill</font>

868
00:37:06,059 --> 00:37:13,150
<font color="#E5E5E5">like maybe self-driving cars I do I</font>

869
00:37:11,380 --> 00:37:16,989
would not say there is particularly<font color="#E5E5E5"> an</font>

870
00:37:13,150 --> 00:37:19,209
upper<font color="#E5E5E5"> bound on</font><font color="#CCCCCC"> the other hand you you</font>

871
00:37:16,989 --> 00:37:21,069
have to<font color="#E5E5E5"> ask yourself essentially is my</font>

872
00:37:19,209 --> 00:37:25,868
time better spent<font color="#CCCCCC"> making more</font><font color="#E5E5E5"> validation</font>

873
00:37:21,069 --> 00:37:28,630
rules<font color="#CCCCCC"> or more tests and I</font><font color="#E5E5E5"> think often</font>

874
00:37:25,869 --> 00:37:30,700
the<font color="#CCCCCC"> answer is more tests and</font><font color="#E5E5E5"> the</font>

875
00:37:28,630 --> 00:37:32,459
<font color="#E5E5E5">validation rules that I tend to see</font>

876
00:37:30,700 --> 00:37:36,489
<font color="#CCCCCC">people be successful with are very</font>

877
00:37:32,459 --> 00:37:38,618
<font color="#CCCCCC">simple and we</font><font color="#E5E5E5"> tend to get a lot</font><font color="#CCCCCC"> of</font>

878
00:37:36,489 --> 00:37:39,940
return on investment<font color="#E5E5E5"> for like the kind</font>

879
00:37:38,619 --> 00:37:42,459
<font color="#E5E5E5">of validation rules we can come up</font><font color="#CCCCCC"> with</font>

880
00:37:39,940 --> 00:37:44,519
<font color="#E5E5E5">and like a week or two</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then sort of</font>

881
00:37:42,459 --> 00:37:47,019
reverting back to<font color="#E5E5E5"> just focusing on tests</font>

882
00:37:44,519 --> 00:37:49,508
<font color="#CCCCCC">but one of the things which i think is</font>

883
00:37:47,019 --> 00:37:51,549
great is if we have an<font color="#E5E5E5"> out edge coming</font>

884
00:37:49,509 --> 00:37:53,019
<font color="#E5E5E5">back and thinking how we often do like</font>

885
00:37:51,549 --> 00:37:56,079
could<font color="#E5E5E5"> I have caught this change with</font>

886
00:37:53,019 --> 00:37:57,819
tests also<font color="#E5E5E5"> like if it was not a thing we</font>

887
00:37:56,079 --> 00:37:58,959
<font color="#E5E5E5">could have caught with tests</font><font color="#CCCCCC"> is it the</font>

888
00:37:57,819 --> 00:38:00,940
kind of<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> I could</font><font color="#E5E5E5"> have caught with a</font>

889
00:37:58,959 --> 00:38:02,558
<font color="#E5E5E5">validation</font><font color="#CCCCCC"> rule like was it something</font>

890
00:38:00,940 --> 00:38:04,690
about<font color="#E5E5E5"> my input that changed drastically</font>

891
00:38:02,559 --> 00:38:08,709
<font color="#CCCCCC">and I could have measured</font><font color="#E5E5E5"> this change</font>

892
00:38:04,690 --> 00:38:11,890
<font color="#E5E5E5">and alerted on it so I think it's it's</font>

893
00:38:08,709 --> 00:38:14,410
very<font color="#E5E5E5"> much unique</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> your specific</font>

894
00:38:11,890 --> 00:38:16,839
problem<font color="#E5E5E5"> space</font><font color="#CCCCCC"> which is a very reasonably</font>

895
00:38:14,410 --> 00:38:18,489
way of not answering<font color="#CCCCCC"> the question</font>

896
00:38:16,839 --> 00:38:33,578
any<font color="#E5E5E5"> other questions for me to not answer</font>

897
00:38:18,489 --> 00:38:36,239
<font color="#E5E5E5">yeah sure so there's there's so the</font>

898
00:38:33,579 --> 00:38:38,969
question is is there any way<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Vout</font>

899
00:38:36,239 --> 00:38:42,549
validate the cost of a validation<font color="#CCCCCC"> rule</font>

900
00:38:38,969 --> 00:38:45,459
versus the cost of it not<font color="#E5E5E5"> running and so</font>

901
00:38:42,549 --> 00:38:47,890
I think most<font color="#E5E5E5"> of our validation rules the</font>

902
00:38:45,459 --> 00:38:51,308
the primary<font color="#E5E5E5"> cost is going to be the</font>

903
00:38:47,890 --> 00:38:53,109
false positives right<font color="#E5E5E5"> because they're</font>

904
00:38:51,309 --> 00:38:55,269
not going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be perfect right</font>

905
00:38:53,109 --> 00:38:58,779
the secondary cost is for some of<font color="#CCCCCC"> these</font>

906
00:38:55,269 --> 00:39:01,419
like keeping<font color="#CCCCCC"> track of</font><font color="#E5E5E5"> I go back here</font>

907
00:38:58,779 --> 00:39:04,420
right<font color="#CCCCCC"> keeping track of</font><font color="#E5E5E5"> the records</font><font color="#CCCCCC"> that</font>

908
00:39:01,420 --> 00:39:08,259
I've<font color="#CCCCCC"> rejected like</font><font color="#E5E5E5"> this thing has some</font>

909
00:39:04,420 --> 00:39:13,869
cost<font color="#E5E5E5"> right this is not free that</font><font color="#CCCCCC"> being</font>

910
00:39:08,259 --> 00:39:16,269
said this<font color="#CCCCCC"> is negligible both spark and</font>

911
00:39:13,869 --> 00:39:18,880
beam and pretty much all of<font color="#E5E5E5"> the systems</font>

912
00:39:16,269 --> 00:39:19,390
that<font color="#E5E5E5"> have systems</font><font color="#CCCCCC"> for collecting</font><font color="#E5E5E5"> metrics</font>

913
00:39:18,880 --> 00:39:22,030
<font color="#E5E5E5">like the</font>

914
00:39:19,390 --> 00:39:24,790
do a poor<font color="#CCCCCC"> job of collecting</font><font color="#E5E5E5"> the metrics</font>

915
00:39:22,030 --> 00:39:26,980
because<font color="#E5E5E5"> they wanted them to be very</font>

916
00:39:24,790 --> 00:39:28,870
cheap to collect right and so they're

917
00:39:26,980 --> 00:39:32,170
<font color="#E5E5E5">not perfect metrics</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> they're very</font>

918
00:39:28,870 --> 00:39:34,359
inexpensive<font color="#E5E5E5"> to collect</font><font color="#CCCCCC"> and so I think by</font>

919
00:39:32,170 --> 00:39:37,540
default like the cost is<font color="#E5E5E5"> has this</font>

920
00:39:34,360 --> 00:39:40,780
<font color="#E5E5E5">validation</font><font color="#CCCCCC"> rules stop me</font><font color="#E5E5E5"> more often than</font>

921
00:39:37,540 --> 00:39:43,420
it saved me<font color="#CCCCCC"> and if that's the</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> yeah</font>

922
00:39:40,780 --> 00:39:45,190
probably<font color="#CCCCCC"> I should try and</font><font color="#E5E5E5"> refine the</font>

923
00:39:43,420 --> 00:39:46,870
rule or think<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> way because</font>

924
00:39:45,190 --> 00:39:49,000
<font color="#CCCCCC">eventually what will happen</font><font color="#E5E5E5"> is someone</font>

925
00:39:46,870 --> 00:39:51,700
<font color="#E5E5E5">will</font><font color="#CCCCCC"> just wake up</font><font color="#E5E5E5"> see the</font><font color="#CCCCCC"> alarm</font><font color="#E5E5E5"> and</font>

926
00:39:49,000 --> 00:39:53,770
<font color="#E5E5E5">press go and then all</font><font color="#CCCCCC"> of my</font><font color="#E5E5E5"> rules are</font>

927
00:39:51,700 --> 00:39:55,870
useless<font color="#E5E5E5"> and I don't want to get there</font>

928
00:39:53,770 --> 00:39:58,540
<font color="#E5E5E5">right and so if it's if it's across that</font>

929
00:39:55,870 --> 00:39:59,710
threshold definitely back off depending

930
00:39:58,540 --> 00:40:05,140
<font color="#E5E5E5">on the people you're working with you</font>

931
00:39:59,710 --> 00:40:06,160
might want to back<font color="#E5E5E5"> off earlier cool that</font>

932
00:40:05,140 --> 00:40:07,990
<font color="#E5E5E5">that</font><font color="#CCCCCC"> was a question I could</font><font color="#E5E5E5"> actually</font>

933
00:40:06,160 --> 00:40:18,700
answer does anyone want to<font color="#E5E5E5"> ask a</font>

934
00:40:07,990 --> 00:40:19,990
<font color="#E5E5E5">question I</font><font color="#CCCCCC"> can answer</font><font color="#E5E5E5"> the question is</font>

935
00:40:18,700 --> 00:40:26,259
why do I<font color="#CCCCCC"> always say</font><font color="#E5E5E5"> we're covering</font>

936
00:40:19,990 --> 00:40:33,759
before<font color="#CCCCCC"> Haskell developer um it's a</font><font color="#E5E5E5"> hmm</font>

937
00:40:26,260 --> 00:40:36,130
<font color="#E5E5E5">it's a bad habit</font><font color="#CCCCCC"> of mine I mostly</font>

938
00:40:33,760 --> 00:40:39,130
because<font color="#E5E5E5"> I tend to work in this problem</font>

939
00:40:36,130 --> 00:40:42,190
<font color="#E5E5E5">space of where we tend to use a lot</font><font color="#CCCCCC"> of</font>

940
00:40:39,130 --> 00:40:43,630
JVM and<font color="#E5E5E5"> Python based software so there's</font>

941
00:40:42,190 --> 00:40:45,610
a lot<font color="#E5E5E5"> of people</font><font color="#CCCCCC"> who have come</font><font color="#E5E5E5"> to us</font><font color="#CCCCCC"> from</font>

942
00:40:43,630 --> 00:40:47,560
the<font color="#CCCCCC"> Haskell community and been like</font><font color="#E5E5E5"> I</font>

943
00:40:45,610 --> 00:40:51,460
love functional programming<font color="#E5E5E5"> but I also</font>

944
00:40:47,560 --> 00:40:52,570
love money<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> there they're like</font>

945
00:40:51,460 --> 00:40:54,750
we're covering<font color="#CCCCCC"> because they're like</font>

946
00:40:52,570 --> 00:40:59,350
<font color="#CCCCCC">types</font><font color="#E5E5E5"> everywhere and then it's like oh</font>

947
00:40:54,750 --> 00:41:01,000
maybe<font color="#E5E5E5"> not here maybe not</font><font color="#CCCCCC"> today and</font><font color="#E5E5E5"> it's</font>

948
00:40:59,350 --> 00:41:03,100
it's<font color="#E5E5E5"> just switching between the</font>

949
00:41:01,000 --> 00:41:04,390
different problem spaces<font color="#E5E5E5"> there's nothing</font>

950
00:41:03,100 --> 00:41:06,069
wrong with<font color="#CCCCCC"> the people that like have</font>

951
00:41:04,390 --> 00:41:08,799
decided they love<font color="#CCCCCC"> Haskell in their life</font>

952
00:41:06,070 --> 00:41:10,960
and<font color="#E5E5E5"> that's just what they want to do but</font>

953
00:41:08,800 --> 00:41:13,570
if you<font color="#E5E5E5"> want to write</font><font color="#CCCCCC"> like truly strongly</font>

954
00:41:10,960 --> 00:41:15,430
<font color="#E5E5E5">typed distributed systems</font><font color="#CCCCCC"> you're not</font>

955
00:41:13,570 --> 00:41:16,930
gonna do these crazy hacks you're gonna

956
00:41:15,430 --> 00:41:20,350
do<font color="#E5E5E5"> different things I mean you'll</font>

957
00:41:16,930 --> 00:41:22,660
<font color="#CCCCCC">probably do quick check but you're</font>

958
00:41:20,350 --> 00:41:24,400
probably<font color="#E5E5E5"> not going to do this like weird</font>

959
00:41:22,660 --> 00:41:25,810
<font color="#E5E5E5">side effect thing in the middle</font><font color="#CCCCCC"> of your</font>

960
00:41:24,400 --> 00:41:27,430
code you're<font color="#CCCCCC"> going to feel bad about</font>

961
00:41:25,810 --> 00:41:29,410
<font color="#CCCCCC">having a side effect in the middle of</font>

962
00:41:27,430 --> 00:41:30,740
<font color="#E5E5E5">your code</font><font color="#CCCCCC"> and you're you're going</font><font color="#E5E5E5"> to not</font>

963
00:41:29,410 --> 00:41:32,270
do that

964
00:41:30,740 --> 00:41:34,250
that being said everyone else is<font color="#CCCCCC"> just</font>

965
00:41:32,270 --> 00:41:35,450
<font color="#CCCCCC">like yeah that's a side effect actually</font>

966
00:41:34,250 --> 00:41:39,560
they<font color="#E5E5E5"> don't even say that they don't</font><font color="#CCCCCC"> even</font>

967
00:41:35,450 --> 00:41:41,750
<font color="#E5E5E5">think that</font><font color="#CCCCCC"> I mean I don't spark spark</font>

968
00:41:39,560 --> 00:41:46,670
has a strong functional paradigm which I

969
00:41:41,750 --> 00:41:49,310
break all the time<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I think that's</font>

970
00:41:46,670 --> 00:41:52,240
<font color="#CCCCCC">probably</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> for questions if anyone</font>

971
00:41:49,310 --> 00:41:56,330
<font color="#E5E5E5">wants to talk to</font><font color="#CCCCCC"> me I am wearing this</font>

972
00:41:52,240 --> 00:41:58,399
<font color="#CCCCCC">and I will</font><font color="#E5E5E5"> be around tomorrow oh right</font>

973
00:41:56,330 --> 00:42:00,500
<font color="#E5E5E5">and this is boo it's very important I</font>

974
00:41:58,400 --> 00:42:03,650
forgot<font color="#E5E5E5"> to introduce my co-presenter her</font>

975
00:42:00,500 --> 00:42:05,990
name is boo and she is a do glar<font color="#CCCCCC"> she has</font>

976
00:42:03,650 --> 00:42:10,280
her own<font color="#E5E5E5"> Google badge</font><font color="#CCCCCC"> which was part of</font>

977
00:42:05,990 --> 00:42:11,930
<font color="#E5E5E5">the contract</font><font color="#CCCCCC"> negotiations</font><font color="#E5E5E5"> who is very</font>

978
00:42:10,280 --> 00:42:15,410
happy<font color="#E5E5E5"> to meet</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> too she can</font>

979
00:42:11,930 --> 00:42:16,759
answer any questions about barking so

980
00:42:15,410 --> 00:42:18,160
that's it thank you<font color="#CCCCCC"> so much for having</font>

981
00:42:16,760 --> 00:42:24,480
me<font color="#E5E5E5"> and listening</font>

982
00:42:18,160 --> 00:42:24,480
[Applause]

