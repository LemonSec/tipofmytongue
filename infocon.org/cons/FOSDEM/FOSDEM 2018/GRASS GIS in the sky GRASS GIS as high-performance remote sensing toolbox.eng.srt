1
00:00:05,500 --> 00:00:11,840
so good morning<font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> to our</font><font color="#E5E5E5"> talk</font>

2
00:00:09,830 --> 00:00:14,269
<font color="#E5E5E5">Roger yes in the sky grass yes is a</font>

3
00:00:11,840 --> 00:00:19,150
<font color="#E5E5E5">high-performance</font><font color="#CCCCCC"> remote</font><font color="#E5E5E5"> sensing</font><font color="#CCCCCC"> toolbox</font>

4
00:00:14,269 --> 00:00:21,619
I'm<font color="#CCCCCC"> markers Nutella part</font><font color="#E5E5E5"> of the grass</font>

5
00:00:19,150 --> 00:00:23,509
<font color="#E5E5E5">development team together with</font><font color="#CCCCCC"> Moore's</font>

6
00:00:21,619 --> 00:00:26,180
Leonard<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Marcos MIT's</font>

7
00:00:23,510 --> 00:00:28,279
<font color="#E5E5E5">we are presenting</font><font color="#CCCCCC"> here latest</font><font color="#E5E5E5"> and</font>

8
00:00:26,180 --> 00:00:31,609
greatest<font color="#E5E5E5"> with the focus on remote</font>

9
00:00:28,279 --> 00:00:34,309
<font color="#E5E5E5">sensing a grass is an OS geo project by</font>

10
00:00:31,609 --> 00:00:36,890
<font color="#E5E5E5">the way exactly today is the 12th</font>

11
00:00:34,309 --> 00:00:40,849
birthday of<font color="#CCCCCC"> Osseo in case you didn't</font>

12
00:00:36,890 --> 00:00:44,120
know<font color="#E5E5E5"> so 12 years</font><font color="#CCCCCC"> ago we found</font><font color="#E5E5E5"> it was</font><font color="#CCCCCC"> geo</font>

13
00:00:40,850 --> 00:00:46,460
in<font color="#E5E5E5"> Chicago on</font><font color="#CCCCCC"> a over a long weekend and</font>

14
00:00:44,120 --> 00:00:50,180
then it all evolved in what you know

15
00:00:46,460 --> 00:00:52,210
with more than 30,000 unique subscribed

16
00:00:50,180 --> 00:00:54,860
people in the various mailing lists<font color="#E5E5E5"> and</font>

17
00:00:52,210 --> 00:00:58,580
conferences<font color="#E5E5E5"> every month somewhere in the</font>

18
00:00:54,860 --> 00:01:02,479
world<font color="#E5E5E5"> well so here we focus on on grass</font>

19
00:00:58,580 --> 00:01:06,950
GIS in this very<font color="#E5E5E5"> first slide I just want</font>

20
00:01:02,479 --> 00:01:09,560
to show the last roughly 35 years in one

21
00:01:06,950 --> 00:01:12,770
slide<font color="#CCCCCC"> you can imagine that the history</font>

22
00:01:09,560 --> 00:01:13,370
<font color="#E5E5E5">is tremendous</font><font color="#CCCCCC"> and grass has come a long</font>

23
00:01:12,770 --> 00:01:17,600
<font color="#E5E5E5">way</font>

24
00:01:13,370 --> 00:01:21,710
developed since 1984 since 99<font color="#E5E5E5"> under the</font>

25
00:01:17,600 --> 00:01:24,800
GNU GPL license available<font color="#CCCCCC"> and yeah we</font>

26
00:01:21,710 --> 00:01:27,860
try<font color="#E5E5E5"> to renew the project continuously</font>

27
00:01:24,800 --> 00:01:31,130
and<font color="#E5E5E5"> of course it's an open development</font>

28
00:01:27,860 --> 00:01:32,990
community what you can see<font color="#E5E5E5"> here all the</font>

29
00:01:31,130 --> 00:01:35,690
various links<font color="#CCCCCC"> to different software</font>

30
00:01:32,990 --> 00:01:40,280
packages<font color="#E5E5E5"> I don't want to mention them</font>

31
00:01:35,690 --> 00:01:43,130
<font color="#E5E5E5">all since grass</font><font color="#CCCCCC"> 72 there</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> seven zero</font>

32
00:01:40,280 --> 00:01:46,270
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> 72 there is time serious</font>

33
00:01:43,130 --> 00:01:49,429
processing<font color="#CCCCCC"> rusta vector and volumetric</font>

34
00:01:46,270 --> 00:01:52,759
data<font color="#E5E5E5"> are available and you</font><font color="#CCCCCC"> can do a lot</font>

35
00:01:49,430 --> 00:01:55,280
of things like also looking<font color="#E5E5E5"> at time</font>

36
00:01:52,760 --> 00:01:57,710
series even<font color="#E5E5E5"> reconstruct them and forth</font>

37
00:01:55,280 --> 00:01:59,510
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a graphical</font><font color="#E5E5E5"> user interface you</font>

38
00:01:57,710 --> 00:02:01,908
can process lidar data you can<font color="#E5E5E5"> process</font>

39
00:01:59,510 --> 00:02:05,049
<font color="#E5E5E5">3d water floats in the morning we had</font>

40
00:02:01,909 --> 00:02:07,670
something<font color="#CCCCCC"> about this and naturally</font>

41
00:02:05,049 --> 00:02:13,300
<font color="#E5E5E5">vector topological vector processing</font>

42
00:02:07,670 --> 00:02:16,270
engine is there and we have<font color="#E5E5E5"> also</font>

43
00:02:13,300 --> 00:02:18,760
dockerfile if you are on docker<font color="#E5E5E5"> for</font>

44
00:02:16,270 --> 00:02:20,850
example we are using<font color="#E5E5E5"> in HPC and we would</font>

45
00:02:18,760 --> 00:02:23,590
see something<font color="#E5E5E5"> more about</font><font color="#CCCCCC"> it later</font><font color="#E5E5E5"> on</font>

46
00:02:20,850 --> 00:02:26,049
<font color="#CCCCCC">justo tell you grass comes naturally</font>

47
00:02:23,590 --> 00:02:28,210
with the<font color="#E5E5E5"> Python interface this Python</font>

48
00:02:26,050 --> 00:02:31,150
interface has<font color="#CCCCCC"> been simplified recently</font>

49
00:02:28,210 --> 00:02:34,300
something<font color="#E5E5E5"> called grass session you can</font>

50
00:02:31,150 --> 00:02:37,210
<font color="#E5E5E5">use just to initiate your session which</font>

51
00:02:34,300 --> 00:02:39,790
means in a few<font color="#CCCCCC"> lines like with grass</font>

52
00:02:37,210 --> 00:02:41,590
session and so on you can<font color="#CCCCCC"> create it and</font>

53
00:02:39,790 --> 00:02:44,079
<font color="#E5E5E5">then your change just go ahead and do</font>

54
00:02:41,590 --> 00:02:46,990
<font color="#E5E5E5">your analysis so nothing complicated and</font>

55
00:02:44,080 --> 00:02:49,540
like other software projects you can<font color="#CCCCCC"> go</font>

56
00:02:46,990 --> 00:02:52,840
through load your data set it is

57
00:02:49,540 --> 00:02:55,660
internally using as before the grass<font color="#CCCCCC"> yes</font>

58
00:02:52,840 --> 00:02:58,660
<font color="#CCCCCC">database</font><font color="#E5E5E5"> but if you work</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this you</font>

59
00:02:55,660 --> 00:03:00,609
do not really have<font color="#CCCCCC"> to think</font><font color="#E5E5E5"> too much</font>

60
00:02:58,660 --> 00:03:02,109
<font color="#CCCCCC">about</font><font color="#E5E5E5"> it what you do have to know is of</font>

61
00:03:00,610 --> 00:03:05,320
course what<font color="#E5E5E5"> the projection is and other</font>

62
00:03:02,110 --> 00:03:10,270
stuff<font color="#E5E5E5"> like that but this session manager</font>

63
00:03:05,320 --> 00:03:13,060
is<font color="#CCCCCC"> doing it or for you recently which</font>

64
00:03:10,270 --> 00:03:16,090
means a<font color="#E5E5E5"> few days ago we</font><font color="#CCCCCC"> published grass</font>

65
00:03:13,060 --> 00:03:20,890
<font color="#CCCCCC">for seven four seven zero actually which</font>

66
00:03:16,090 --> 00:03:23,650
means sorry hey<font color="#CCCCCC"> say four of courses ok</font>

67
00:03:20,890 --> 00:03:25,359
so many numbers seven<font color="#E5E5E5"> four thank you it</font>

68
00:03:23,650 --> 00:03:29,380
comes<font color="#CCCCCC"> with a lot of</font><font color="#E5E5E5"> features which I</font>

69
00:03:25,360 --> 00:03:32,380
cannot list here<font color="#CCCCCC"> there's the</font><font color="#E5E5E5"> web page up</font>

70
00:03:29,380 --> 00:03:33,850
there<font color="#E5E5E5"> you can check the presentation has</font>

71
00:03:32,380 --> 00:03:37,090
been<font color="#CCCCCC"> uploaded just to highlight</font><font color="#E5E5E5"> a few</font>

72
00:03:33,850 --> 00:03:39,549
things<font color="#CCCCCC"> in case you are already</font><font color="#E5E5E5"> using</font>

73
00:03:37,090 --> 00:03:43,540
grass<font color="#E5E5E5"> yes this is an example here</font>

74
00:03:39,550 --> 00:03:45,970
processing<font color="#CCCCCC"> Sentinel data in terms</font><font color="#E5E5E5"> of</font>

75
00:03:43,540 --> 00:03:48,609
white fire<font color="#E5E5E5"> this is a white</font><font color="#CCCCCC"> for some when</font>

76
00:03:45,970 --> 00:03:52,810
Australia<font color="#E5E5E5"> you see the RGB composite</font>

77
00:03:48,610 --> 00:03:54,760
<font color="#E5E5E5">there</font><font color="#CCCCCC"> which is basically</font><font color="#E5E5E5"> showing smoke</font>

78
00:03:52,810 --> 00:03:56,740
and there you<font color="#E5E5E5"> can see more or</font><font color="#CCCCCC"> less</font>

79
00:03:54,760 --> 00:03:58,510
<font color="#CCCCCC">purchased if burning this</font><font color="#E5E5E5"> is a feature</font>

80
00:03:56,740 --> 00:04:00,490
<font color="#E5E5E5">of</font><font color="#CCCCCC"> Sentinel</font><font color="#E5E5E5"> of course but you have</font><font color="#CCCCCC"> all</font>

81
00:03:58,510 --> 00:04:05,230
the<font color="#E5E5E5"> possibilities</font><font color="#CCCCCC"> to process</font>

82
00:04:00,490 --> 00:04:07,210
multispectral data here<font color="#E5E5E5"> you can if you</font>

83
00:04:05,230 --> 00:04:10,899
start grass if you are new to<font color="#CCCCCC"> it you</font><font color="#E5E5E5"> can</font>

84
00:04:07,210 --> 00:04:13,690
now just download the demo data set<font color="#CCCCCC"> one</font>

85
00:04:10,900 --> 00:04:15,370
we are using for a long<font color="#E5E5E5"> time this you</font>

86
00:04:13,690 --> 00:04:17,969
can with a click download and<font color="#CCCCCC"> then go</font>

87
00:04:15,370 --> 00:04:20,440
through all the examples<font color="#CCCCCC"> in the manual</font>

88
00:04:17,970 --> 00:04:22,570
<font color="#CCCCCC">we have been working on</font><font color="#E5E5E5"> auto</font>

89
00:04:20,440 --> 00:04:24,760
rectification it used to be in grass<font color="#CCCCCC"> six</font>

90
00:04:22,570 --> 00:04:27,430
and it took us a few years to<font color="#E5E5E5"> bring it</font>

91
00:04:24,760 --> 00:04:31,420
also<font color="#CCCCCC"> to grow</font><font color="#E5E5E5"> seven because of different</font>

92
00:04:27,430 --> 00:04:34,810
updated concepts<font color="#E5E5E5"> there so</font><font color="#CCCCCC"> let's back our</font>

93
00:04:31,420 --> 00:04:38,680
indeed<font color="#E5E5E5"> our our external are the</font>

94
00:04:34,810 --> 00:04:42,640
possibilities to to use or<font color="#CCCCCC"> even just</font>

95
00:04:38,680 --> 00:04:44,560
register data<font color="#E5E5E5"> in grass database register</font>

96
00:04:42,640 --> 00:04:46,599
means you just<font color="#E5E5E5"> tell it where the</font>

97
00:04:44,560 --> 00:04:47,830
<font color="#E5E5E5">original G ot for whatever file is and</font>

98
00:04:46,600 --> 00:04:52,150
then you<font color="#E5E5E5"> can use it</font><font color="#CCCCCC"> in this session</font>

99
00:04:47,830 --> 00:04:55,570
<font color="#E5E5E5">itself so no need to duplicate data we</font>

100
00:04:52,150 --> 00:05:00,489
fix some handling<font color="#CCCCCC"> with data which</font>

101
00:04:55,570 --> 00:05:03,070
<font color="#CCCCCC">exceeds the 90 90 180 180 degree</font>

102
00:05:00,490 --> 00:05:05,530
definition which happens with global

103
00:05:03,070 --> 00:05:09,430
data which is quite essential if you

104
00:05:05,530 --> 00:05:11,739
work<font color="#CCCCCC"> with such</font><font color="#E5E5E5"> data by the way cloud</font>

105
00:05:09,430 --> 00:05:13,510
<font color="#CCCCCC">optimizer if you can also read because</font>

106
00:05:11,740 --> 00:05:17,800
it<font color="#E5E5E5"> is based on jitter so that's fairly</font>

107
00:05:13,510 --> 00:05:20,440
easy<font color="#CCCCCC"> export improved</font><font color="#E5E5E5"> clipping for vector</font>

108
00:05:17,800 --> 00:05:24,190
data made easy<font color="#E5E5E5"> and then tons of other</font>

109
00:05:20,440 --> 00:05:28,240
fixes which are there just<font color="#E5E5E5"> to now drive</font>

110
00:05:24,190 --> 00:05:32,260
<font color="#E5E5E5">few or more to the topic here</font><font color="#CCCCCC"> which</font>

111
00:05:28,240 --> 00:05:35,500
means<font color="#E5E5E5"> remote sensing we have been adding</font>

112
00:05:32,260 --> 00:05:37,780
<font color="#CCCCCC">more at more satellites</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

113
00:05:35,500 --> 00:05:40,360
atmospheric correction it<font color="#CCCCCC"> is based on</font><font color="#E5E5E5"> 6</font>

114
00:05:37,780 --> 00:05:46,179
<font color="#E5E5E5">s 6 s is also used elsewhere like an arc</font>

115
00:05:40,360 --> 00:05:48,790
<font color="#CCCCCC">C for example</font><font color="#E5E5E5"> and we have been adding a</font>

116
00:05:46,180 --> 00:05:51,430
tool in order<font color="#E5E5E5"> to process more decent</font>

117
00:05:48,790 --> 00:05:53,890
acetylide data more easily<font color="#E5E5E5"> motor</font>

118
00:05:51,430 --> 00:05:56,530
satellite data come with<font color="#CCCCCC"> additional</font>

119
00:05:53,890 --> 00:05:58,030
layers of<font color="#E5E5E5"> qualities on each pixel to get</font>

120
00:05:56,530 --> 00:06:00,130
<font color="#E5E5E5">it information</font><font color="#CCCCCC"> about the qualities that</font>

121
00:05:58,030 --> 00:06:02,919
<font color="#E5E5E5">is extremely</font><font color="#CCCCCC"> useful but it can be a</font>

122
00:06:00,130 --> 00:06:05,730
tricky<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> tricky to</font><font color="#CCCCCC"> process these bit</font>

123
00:06:02,919 --> 00:06:09,940
patterns and so<font color="#E5E5E5"> you have a tool</font><font color="#CCCCCC"> here</font>

124
00:06:05,730 --> 00:06:13,120
which is<font color="#E5E5E5"> helping you with</font><font color="#CCCCCC"> that so I</font>

125
00:06:09,940 --> 00:06:16,480
switch to modes<font color="#E5E5E5"> who will now present on</font>

126
00:06:13,120 --> 00:06:18,930
remote<font color="#E5E5E5"> sensing in grass yes the long</font>

127
00:06:16,480 --> 00:06:18,930
<font color="#E5E5E5">history</font>

128
00:06:23,010 --> 00:06:31,330
so just go<font color="#E5E5E5"> ahead have a seat if</font><font color="#CCCCCC"> you</font>

129
00:06:25,389 --> 00:06:32,740
<font color="#CCCCCC">wanna I mean so yes as Marco said</font><font color="#E5E5E5"> what</font>

130
00:06:31,330 --> 00:06:35,080
<font color="#E5E5E5">kind of zooming in now</font><font color="#CCCCCC"> into the main</font>

131
00:06:32,740 --> 00:06:37,210
topic which is<font color="#E5E5E5"> remote sensing before</font>

132
00:06:35,080 --> 00:06:39,039
then<font color="#CCCCCC"> Marcos myth goes on to show you</font>

133
00:06:37,210 --> 00:06:41,280
<font color="#E5E5E5">example of how to do this in a</font>

134
00:06:39,040 --> 00:06:45,669
high-performance computing environment

135
00:06:41,280 --> 00:06:47,739
so grass<font color="#CCCCCC"> juice has</font><font color="#E5E5E5"> such has a very long</font>

136
00:06:45,669 --> 00:06:51,039
<font color="#CCCCCC">history and the remote sensing Ingrassia</font>

137
00:06:47,740 --> 00:06:53,350
<font color="#CCCCCC">is almost just as long terms</font><font color="#E5E5E5"> of history</font>

138
00:06:51,040 --> 00:06:57,460
you already had first<font color="#CCCCCC"> sub-modules</font>

139
00:06:53,350 --> 00:07:01,450
<font color="#E5E5E5">available in 1986 for grass</font><font color="#CCCCCC"> 1.1</font><font color="#E5E5E5"> and then</font>

140
00:06:57,460 --> 00:07:03,700
from grass 3.0<font color="#CCCCCC"> in 1988 you had a whole</font>

141
00:07:01,450 --> 00:07:06,849
suite of<font color="#E5E5E5"> new modules integrated into the</font>

142
00:07:03,700 --> 00:07:10,690
core grass which are the<font color="#CCCCCC"> I dot something</font>

143
00:07:06,850 --> 00:07:12,700
modules<font color="#CCCCCC"> so the whole imagery</font><font color="#E5E5E5"> family ever</font>

144
00:07:10,690 --> 00:07:15,969
since<font color="#E5E5E5"> we've had steady improvements and</font>

145
00:07:12,700 --> 00:07:17,520
additions<font color="#E5E5E5"> really constantly there's been</font>

146
00:07:15,970 --> 00:07:19,750
constant evolution<font color="#E5E5E5"> also following</font>

147
00:07:17,520 --> 00:07:22,780
obviously the changes in types of

148
00:07:19,750 --> 00:07:25,390
satellite data that we can<font color="#CCCCCC"> use and we've</font>

149
00:07:22,780 --> 00:07:28,150
moved from what you can<font color="#E5E5E5"> see at the top</font>

150
00:07:25,390 --> 00:07:32,289
very simple<font color="#E5E5E5"> text-based console in the</font>

151
00:07:28,150 --> 00:07:35,890
<font color="#E5E5E5">1980s to much more complex and modern</font>

152
00:07:32,289 --> 00:07:37,780
GUI<font color="#E5E5E5"> system to handle all that data what</font>

153
00:07:35,890 --> 00:07:41,260
<font color="#E5E5E5">is quite important I think to understand</font>

154
00:07:37,780 --> 00:07:43,390
also<font color="#E5E5E5"> and somewhat of a product</font><font color="#CCCCCC"> also of</font>

155
00:07:41,260 --> 00:07:44,590
the long history<font color="#CCCCCC"> of grass</font><font color="#E5E5E5"> and the fact</font>

156
00:07:43,390 --> 00:07:46,719
that when grass was written at the

157
00:07:44,590 --> 00:07:49,119
beginning<font color="#E5E5E5"> computers did not have the</font>

158
00:07:46,720 --> 00:07:52,000
same capacities as they do now<font color="#E5E5E5"> a lot of</font>

159
00:07:49,120 --> 00:07:54,729
<font color="#E5E5E5">the grass internal libraries and grass</font>

160
00:07:52,000 --> 00:07:56,830
modules are<font color="#CCCCCC"> very memory efficient so</font><font color="#E5E5E5"> you</font>

161
00:07:54,729 --> 00:07:59,080
can work<font color="#E5E5E5"> with a lot of very heavy heavy</font>

162
00:07:56,830 --> 00:08:03,520
data and we'll go back<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that in the</font>

163
00:07:59,080 --> 00:08:05,950
<font color="#CCCCCC">high-performance computing so what can</font>

164
00:08:03,520 --> 00:08:08,440
<font color="#E5E5E5">you do in terms</font><font color="#CCCCCC"> of remote sensing with</font>

165
00:08:05,950 --> 00:08:10,960
grass<font color="#CCCCCC"> and you know the</font><font color="#E5E5E5"> motivation for</font>

166
00:08:08,440 --> 00:08:12,310
<font color="#E5E5E5">this talk also</font><font color="#CCCCCC"> came from a colleague for</font>

167
00:08:10,960 --> 00:08:13,750
when they told me<font color="#E5E5E5"> oh I've known about</font>

168
00:08:12,310 --> 00:08:15,639
grass chairs for a long time but<font color="#E5E5E5"> I</font>

169
00:08:13,750 --> 00:08:17,520
thought it was a GIS and didn't even

170
00:08:15,639 --> 00:08:21,160
<font color="#E5E5E5">know</font><font color="#CCCCCC"> he can do any remote sensing so</font>

171
00:08:17,520 --> 00:08:24,219
here's an overview<font color="#E5E5E5"> of a series of pixel</font>

172
00:08:21,160 --> 00:08:26,160
<font color="#E5E5E5">based techniques that we have from</font>

173
00:08:24,220 --> 00:08:28,780
pre-processing where you can do

174
00:08:26,160 --> 00:08:32,140
<font color="#E5E5E5">atmospheric correction</font><font color="#CCCCCC"> Panch happening</font><font color="#E5E5E5"> a</font>

175
00:08:28,780 --> 00:08:34,360
whole series<font color="#E5E5E5"> of different techniques</font><font color="#CCCCCC"> to</font>

176
00:08:32,140 --> 00:08:36,370
you have transformation

177
00:08:34,360 --> 00:08:39,430
very<font color="#E5E5E5"> different modules that allow</font><font color="#CCCCCC"> you to</font>

178
00:08:36,370 --> 00:08:41,919
<font color="#E5E5E5">do</font><font color="#CCCCCC"> principal component analysis wavelet</font>

179
00:08:39,429 --> 00:08:43,569
transformations<font color="#E5E5E5"> you can calculate a</font>

180
00:08:41,919 --> 00:08:46,860
whole series of indices vegetation

181
00:08:43,570 --> 00:08:49,390
indices<font color="#CCCCCC"> you have edge detection modules</font>

182
00:08:46,860 --> 00:08:52,240
<font color="#E5E5E5">so a whole series of transformation</font>

183
00:08:49,390 --> 00:08:53,800
possibilities and<font color="#E5E5E5"> and indexes you can</font>

184
00:08:52,240 --> 00:08:56,260
create<font color="#E5E5E5"> you have a whole classification</font>

185
00:08:53,800 --> 00:08:58,229
<font color="#E5E5E5">pixel based classification suite where</font>

186
00:08:56,260 --> 00:09:01,000
<font color="#CCCCCC">you can do maximum</font><font color="#E5E5E5"> likelihood</font><font color="#CCCCCC"> but also</font>

187
00:08:58,230 --> 00:09:03,390
the ice map module<font color="#E5E5E5"> which is probably one</font>

188
00:09:01,000 --> 00:09:06,880
of<font color="#E5E5E5"> the first let's say hierarchical</font>

189
00:09:03,390 --> 00:09:08,800
segmentation<font color="#E5E5E5"> based classification</font>

190
00:09:06,880 --> 00:09:11,670
modules<font color="#E5E5E5"> even though it the output is</font>

191
00:09:08,800 --> 00:09:16,000
pixels<font color="#CCCCCC"> it is based on on very different</font>

192
00:09:11,670 --> 00:09:19,290
<font color="#E5E5E5">levels of hierarchical segmentation you</font>

193
00:09:16,000 --> 00:09:22,300
have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> modern machine learning</font>

194
00:09:19,290 --> 00:09:24,849
techniques where we<font color="#CCCCCC"> normally</font><font color="#E5E5E5"> don't kind</font>

195
00:09:22,300 --> 00:09:26,890
of develop them redevelop the wheel in

196
00:09:24,850 --> 00:09:33,579
in<font color="#CCCCCC"> graph but</font><font color="#E5E5E5"> we use</font><font color="#CCCCCC"> outside</font><font color="#E5E5E5"> tools</font><font color="#CCCCCC"> either</font>

197
00:09:26,890 --> 00:09:36,339
<font color="#CCCCCC">side PI or or</font><font color="#E5E5E5"> r2</font><font color="#CCCCCC"> also exist</font><font color="#E5E5E5"> we also have</font>

198
00:09:33,579 --> 00:09:38,469
a whole host of specialized<font color="#CCCCCC"> modules</font>

199
00:09:36,339 --> 00:09:40,600
which look at specific topics so there's

200
00:09:38,470 --> 00:09:43,060
a whole suite<font color="#CCCCCC"> of modules looking at</font>

201
00:09:40,600 --> 00:09:45,520
evapotranspiration<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> energy</font>

202
00:09:43,060 --> 00:09:47,910
balance modules that use satellite data

203
00:09:45,520 --> 00:09:51,520
<font color="#CCCCCC">to</font><font color="#E5E5E5"> calculate energy balance information</font>

204
00:09:47,910 --> 00:09:55,329
<font color="#CCCCCC">biomass we have a</font><font color="#E5E5E5"> module</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> then that</font>

205
00:09:51,520 --> 00:09:58,149
works<font color="#E5E5E5"> on gravity measures even one which</font>

206
00:09:55,329 --> 00:10:02,859
<font color="#E5E5E5">uses data from</font><font color="#CCCCCC"> a moon mission so you can</font>

207
00:09:58,149 --> 00:10:06,100
do so even<font color="#CCCCCC"> extra-terrestrial</font><font color="#E5E5E5"> planetary</font>

208
00:10:02,860 --> 00:10:09,100
science can be<font color="#E5E5E5"> done with with</font><font color="#CCCCCC"> graph</font><font color="#E5E5E5"> so a</font>

209
00:10:06,100 --> 00:10:11,529
whole series of modules<font color="#E5E5E5"> available</font><font color="#CCCCCC"> in</font>

210
00:10:09,100 --> 00:10:13,630
<font color="#E5E5E5">pixel base</font><font color="#CCCCCC"> may be just as an addition to</font>

211
00:10:11,529 --> 00:10:15,910
<font color="#CCCCCC">say that there's obviously</font><font color="#E5E5E5"> a series of</font>

212
00:10:13,630 --> 00:10:17,829
<font color="#CCCCCC">they'd say generic raster tools which</font>

213
00:10:15,910 --> 00:10:20,230
are<font color="#E5E5E5"> very</font><font color="#CCCCCC"> useful for remote sensing as</font>

214
00:10:17,829 --> 00:10:24,219
well so we do have<font color="#E5E5E5"> a map calculator as</font>

215
00:10:20,230 --> 00:10:27,610
well<font color="#E5E5E5"> which which allows a very very wide</font>

216
00:10:24,220 --> 00:10:30,730
range<font color="#E5E5E5"> of operations there's as Marcus</font>

217
00:10:27,610 --> 00:10:33,880
said time series management<font color="#E5E5E5"> and you can</font>

218
00:10:30,730 --> 00:10:36,550
<font color="#CCCCCC">do a whole</font><font color="#E5E5E5"> series of types of analysis</font>

219
00:10:33,880 --> 00:10:38,370
<font color="#E5E5E5">of these time series</font><font color="#CCCCCC"> so these are all</font>

220
00:10:36,550 --> 00:10:41,010
<font color="#E5E5E5">available</font>

221
00:10:38,370 --> 00:10:42,990
<font color="#CCCCCC">a</font><font color="#E5E5E5"> second part which is let's say more</font>

222
00:10:41,010 --> 00:10:44,760
recent is the object-based image

223
00:10:42,990 --> 00:10:49,080
analysis techniques that have been

224
00:10:44,760 --> 00:10:51,360
<font color="#E5E5E5">developed</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> known as obeah</font><font color="#CCCCCC"> we've</font>

225
00:10:49,080 --> 00:10:55,020
<font color="#E5E5E5">developed a module which does</font>

226
00:10:51,360 --> 00:10:57,750
segmentation so which divides your image

227
00:10:55,020 --> 00:11:00,750
into objects and there's all tool chain

228
00:10:57,750 --> 00:11:03,180
that<font color="#CCCCCC"> has been developed to</font><font color="#E5E5E5"> go from the</font>

229
00:11:00,750 --> 00:11:06,540
<font color="#E5E5E5">automatic</font><font color="#CCCCCC"> let's say segmentation</font>

230
00:11:03,180 --> 00:11:08,609
parameter optimization<font color="#CCCCCC"> all the way to</font>

231
00:11:06,540 --> 00:11:12,089
machine<font color="#E5E5E5"> learning based classification of</font>

232
00:11:08,610 --> 00:11:14,960
the resulting objects<font color="#E5E5E5"> so you know have</font>

233
00:11:12,089 --> 00:11:19,680
the full pipeline available in grass

234
00:11:14,960 --> 00:11:22,400
with wherever possible<font color="#CCCCCC"> the idea to</font><font color="#E5E5E5"> two</font>

235
00:11:19,680 --> 00:11:24,719
<font color="#E5E5E5">parallel eyes and so to to make it</font>

236
00:11:22,400 --> 00:11:28,439
possible<font color="#E5E5E5"> to work on very</font><font color="#CCCCCC"> very large</font>

237
00:11:24,720 --> 00:11:30,480
images in this pipeline<font color="#E5E5E5"> very recently as</font>

238
00:11:28,440 --> 00:11:32,640
well there was the creation of super

239
00:11:30,480 --> 00:11:34,410
module to<font color="#E5E5E5"> create super pixels which has</font>

240
00:11:32,640 --> 00:11:37,160
been kind<font color="#CCCCCC"> of a fashion last</font><font color="#E5E5E5"> years as</font>

241
00:11:34,410 --> 00:11:39,870
well which then allows you to to kind of

242
00:11:37,160 --> 00:11:43,910
reduce<font color="#CCCCCC"> the complexity of an image by by</font>

243
00:11:39,870 --> 00:11:48,029
grouping pixels in a certain way as well

244
00:11:43,910 --> 00:11:50,279
and we're not<font color="#CCCCCC"> stopping so many more</font>

245
00:11:48,029 --> 00:11:52,410
<font color="#E5E5E5">elements</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> being constantly developed</font>

246
00:11:50,279 --> 00:11:54,300
there's a whole suite<font color="#CCCCCC"> of lidar</font><font color="#E5E5E5"> tools as</font>

247
00:11:52,410 --> 00:11:56,040
<font color="#E5E5E5">well that allows</font><font color="#CCCCCC"> you to</font><font color="#E5E5E5"> import lidar to</font>

248
00:11:54,300 --> 00:11:57,810
treat<font color="#CCCCCC"> late Lida</font>

249
00:11:56,040 --> 00:12:01,110
<font color="#E5E5E5">mark has already mentioned the</font><font color="#CCCCCC"> speech</font>

250
00:11:57,810 --> 00:12:03,719
<font color="#E5E5E5">for the creation of ortho photos</font><font color="#CCCCCC"> and</font>

251
00:12:01,110 --> 00:12:06,540
there's current developments going<font color="#E5E5E5"> on</font><font color="#CCCCCC"> we</font>

252
00:12:03,720 --> 00:12:08,160
have several students working on<font color="#E5E5E5"> neural</font>

253
00:12:06,540 --> 00:12:11,120
<font color="#E5E5E5">networks and integration of neural</font>

254
00:12:08,160 --> 00:12:13,650
network techniques into grass currently

255
00:12:11,120 --> 00:12:16,279
there's work going<font color="#CCCCCC"> on on trying to</font>

256
00:12:13,650 --> 00:12:19,100
create what we call semantical<font color="#E5E5E5"> cut lines</font>

257
00:12:16,279 --> 00:12:21,689
which is very helpful when you do tiling

258
00:12:19,100 --> 00:12:23,580
<font color="#CCCCCC">in order</font><font color="#E5E5E5"> to be able to parallel process</font>

259
00:12:21,690 --> 00:12:26,610
your images one<font color="#E5E5E5"> of the problems when you</font>

260
00:12:23,580 --> 00:12:28,620
use classical straight lines is that<font color="#CCCCCC"> you</font>

261
00:12:26,610 --> 00:12:30,959
have edge effects so we're trying<font color="#E5E5E5"> to</font>

262
00:12:28,620 --> 00:12:32,870
create<font color="#CCCCCC"> cut lines that allow you to go</font>

263
00:12:30,959 --> 00:12:34,650
through<font color="#CCCCCC"> the image and cut your tiles</font>

264
00:12:32,870 --> 00:12:38,000
<font color="#E5E5E5">irregular tiles</font>

265
00:12:34,650 --> 00:12:39,630
according to let's say

266
00:12:38,000 --> 00:12:41,130
characteristics<font color="#E5E5E5"> of the image where you</font>

267
00:12:39,630 --> 00:12:43,820
say this<font color="#E5E5E5"> is a good place to cut you know</font>

268
00:12:41,130 --> 00:12:47,279
a long road with things<font color="#E5E5E5"> like that</font>

269
00:12:43,820 --> 00:12:49,890
<font color="#CCCCCC">there's a whole host of extensions so</font>

270
00:12:47,279 --> 00:12:54,740
<font color="#CCCCCC">within a</font><font color="#E5E5E5"> few years ago especially</font><font color="#CCCCCC"> with</font>

271
00:12:49,890 --> 00:12:57,240
the<font color="#E5E5E5"> Python API evolving</font><font color="#CCCCCC"> there's been</font>

272
00:12:54,740 --> 00:13:00,589
more<font color="#E5E5E5"> and more extensions being created</font>

273
00:12:57,240 --> 00:13:03,209
by researchers<font color="#CCCCCC"> all over the world by by</font>

274
00:13:00,589 --> 00:13:05,190
contributors and there's a whole<font color="#E5E5E5"> host of</font>

275
00:13:03,209 --> 00:13:08,550
extensions in remote sensing<font color="#CCCCCC"> as well</font>

276
00:13:05,190 --> 00:13:11,670
being created constantly<font color="#E5E5E5"> and there's</font>

277
00:13:08,550 --> 00:13:14,149
permanent<font color="#E5E5E5"> work on ongoing trying to</font><font color="#CCCCCC"> mean</font>

278
00:13:11,670 --> 00:13:17,760
obviously increase the performance<font color="#E5E5E5"> we</font>

279
00:13:14,149 --> 00:13:19,980
had the debate<font color="#CCCCCC"> not</font><font color="#E5E5E5"> too long ago because</font>

280
00:13:17,760 --> 00:13:23,399
we reached some issues<font color="#E5E5E5"> worrying God</font>

281
00:13:19,980 --> 00:13:26,040
above<font color="#CCCCCC"> two billion objects</font><font color="#E5E5E5"> being created</font>

282
00:13:23,399 --> 00:13:28,350
in in segmentation so we really really

283
00:13:26,040 --> 00:13:29,849
large images<font color="#CCCCCC"> and so these</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> issues</font>

284
00:13:28,350 --> 00:13:33,360
that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are faced with</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> that we're</font>

285
00:13:29,850 --> 00:13:35,760
trying to<font color="#CCCCCC"> work with so</font><font color="#E5E5E5"> I will give the</font>

286
00:13:33,360 --> 00:13:37,170
phone out of<font color="#CCCCCC"> Marcos mitts</font><font color="#E5E5E5"> who will give</font>

287
00:13:35,760 --> 00:13:41,270
you an<font color="#E5E5E5"> example of</font><font color="#CCCCCC"> high-performance</font>

288
00:13:37,170 --> 00:13:41,270
computing with graphs

289
00:13:56,140 --> 00:14:05,270
<font color="#CCCCCC">okay so</font><font color="#E5E5E5"> I will continue</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> provide an</font>

290
00:14:03,260 --> 00:14:07,970
example<font color="#E5E5E5"> how to use class</font><font color="#CCCCCC"> width for</font><font color="#E5E5E5"> high</font>

291
00:14:05,270 --> 00:14:09,680
<font color="#E5E5E5">performance</font><font color="#CCCCCC"> computing</font><font color="#E5E5E5"> first of all I</font>

292
00:14:07,970 --> 00:14:12,589
want<font color="#E5E5E5"> to explain why</font><font color="#CCCCCC"> glass is</font>

293
00:14:09,680 --> 00:14:15,589
particularly suitable to use for HPC

294
00:14:12,589 --> 00:14:17,720
processing first of all all<font color="#CCCCCC"> the grass</font>

295
00:14:15,589 --> 00:14:20,000
modules and the libraries they have a

296
00:14:17,720 --> 00:14:23,690
very low memory footprint they never

297
00:14:20,000 --> 00:14:26,300
load the whole data set<font color="#E5E5E5"> into memory they</font>

298
00:14:23,690 --> 00:14:28,850
always<font color="#E5E5E5"> only</font><font color="#CCCCCC"> post</font><font color="#E5E5E5"> a load that part into</font>

299
00:14:26,300 --> 00:14:31,550
<font color="#E5E5E5">memory</font><font color="#CCCCCC"> that is actually currently</font><font color="#E5E5E5"> frozen</font>

300
00:14:28,850 --> 00:14:35,180
so you<font color="#E5E5E5"> don't need to go to a raster map</font>

301
00:14:31,550 --> 00:14:36,709
that's<font color="#E5E5E5"> a few 50 gigabyte or something</font>

302
00:14:35,180 --> 00:14:40,099
like<font color="#E5E5E5"> this large the actual memory</font>

303
00:14:36,710 --> 00:14:43,130
footprint can be as low<font color="#CCCCCC"> as</font><font color="#E5E5E5"> one megabyte</font>

304
00:14:40,100 --> 00:14:47,110
<font color="#CCCCCC">for example that</font><font color="#E5E5E5"> makes it particularly</font>

305
00:14:43,130 --> 00:14:50,000
suitable to one or two<font color="#E5E5E5"> parallel</font><font color="#CCCCCC"> lysis</font>

306
00:14:47,110 --> 00:14:53,630
heavily and run it<font color="#E5E5E5"> on a high performance</font>

307
00:14:50,000 --> 00:14:57,080
computing system system<font color="#E5E5E5"> second class is</font>

308
00:14:53,630 --> 00:14:59,600
not a single<font color="#CCCCCC"> application you can rather</font>

309
00:14:57,080 --> 00:15:01,970
regard it as a<font color="#CCCCCC"> toolbox</font><font color="#E5E5E5"> and grasp</font>

310
00:14:59,600 --> 00:15:05,270
provides a few hundred tools that can

311
00:15:01,970 --> 00:15:08,930
<font color="#E5E5E5">used independently of each other</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> also</font>

312
00:15:05,270 --> 00:15:13,550
as a<font color="#E5E5E5"> processing environment</font><font color="#CCCCCC"> the example</font>

313
00:15:08,930 --> 00:15:19,640
<font color="#E5E5E5">here is analysis</font><font color="#CCCCCC"> of reconstruction of</font>

314
00:15:13,550 --> 00:15:22,400
NDVI values that's from<font color="#CCCCCC"> motors this</font><font color="#E5E5E5"> I</font>

315
00:15:19,640 --> 00:15:24,800
did globally<font color="#CCCCCC"> of just to show an example</font>

316
00:15:22,400 --> 00:15:27,920
in South America and northern<font color="#E5E5E5"> parts and</font>

317
00:15:24,800 --> 00:15:30,699
Amazon rainforest<font color="#E5E5E5"> there are lots of gaps</font>

318
00:15:27,920 --> 00:15:33,560
and<font color="#E5E5E5"> I want to fill them here I use</font>

319
00:15:30,700 --> 00:15:39,010
harmonic analysis of<font color="#CCCCCC"> time series hunts</font>

320
00:15:33,560 --> 00:15:42,800
just as an example<font color="#CCCCCC"> that's a short</font>

321
00:15:39,010 --> 00:15:45,709
example<font color="#E5E5E5"> for how this looks</font><font color="#CCCCCC"> it in time on</font>

322
00:15:42,800 --> 00:15:47,839
the here on the lower right<font color="#E5E5E5"> so you see</font>

323
00:15:45,709 --> 00:15:50,260
the gaps and<font color="#CCCCCC"> you see one big outlier and</font>

324
00:15:47,839 --> 00:15:54,120
that's the<font color="#E5E5E5"> result what I want to get to</font>

325
00:15:50,260 --> 00:15:57,340
so I want<font color="#CCCCCC"> to reconstruct in space and</font>

326
00:15:54,120 --> 00:15:59,980
with this harmonic analysis of<font color="#E5E5E5"> time</font>

327
00:15:57,340 --> 00:16:01,990
series the whole processing is<font color="#CCCCCC"> actually</font>

328
00:15:59,980 --> 00:16:04,660
done<font color="#CCCCCC"> only in time so I'm not doing any</font>

329
00:16:01,990 --> 00:16:09,670
special interpolation or something<font color="#E5E5E5"> like</font>

330
00:16:04,660 --> 00:16:12,310
this<font color="#E5E5E5"> so my understanding of hyper form</font>

331
00:16:09,670 --> 00:16:15,490
of<font color="#CCCCCC"> high-performance</font><font color="#E5E5E5"> computing or as I</font>

332
00:16:12,310 --> 00:16:18,459
have<font color="#CCCCCC"> used it in</font><font color="#E5E5E5"> this example is I have a</font>

333
00:16:15,490 --> 00:16:21,370
master<font color="#E5E5E5"> node that can also be</font><font color="#CCCCCC"> a compute</font>

334
00:16:18,460 --> 00:16:24,580
node and any number of compute nodes<font color="#E5E5E5"> so</font>

335
00:16:21,370 --> 00:16:27,850
compute nodes are cycle<font color="#CCCCCC"> tative can be 0</font>

336
00:16:24,580 --> 00:16:31,210
compute nodes on thousand compute nodes

337
00:16:27,850 --> 00:16:33,790
<font color="#E5E5E5">depending on what you have the</font>

338
00:16:31,210 --> 00:16:37,030
components then are we have this master

339
00:16:33,790 --> 00:16:38,740
with a job or queue manager<font color="#E5E5E5"> there are</font>

340
00:16:37,030 --> 00:16:41,530
lots<font color="#E5E5E5"> of different job and queue</font>

341
00:16:38,740 --> 00:16:44,200
<font color="#E5E5E5">manager's job schedulers out there</font>

342
00:16:41,530 --> 00:16:46,150
therefore<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> not go into detail just</font>

343
00:16:44,200 --> 00:16:48,220
<font color="#E5E5E5">to mention a few common examples that</font>

344
00:16:46,150 --> 00:16:51,040
<font color="#E5E5E5">you find on</font><font color="#CCCCCC"> university clusters or</font>

345
00:16:48,220 --> 00:16:53,440
something<font color="#E5E5E5"> like this our talk</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> slurm</font>

346
00:16:51,040 --> 00:16:56,260
<font color="#CCCCCC">they're also</font><font color="#E5E5E5"> talks on the other deaf</font>

347
00:16:53,440 --> 00:17:00,700
<font color="#E5E5E5">film</font><font color="#CCCCCC"> profession on HPV computing</font><font color="#E5E5E5"> let's</font>

348
00:16:56,260 --> 00:17:04,839
go into more<font color="#E5E5E5"> about this considerations</font>

349
00:17:00,700 --> 00:17:06,699
when you're running<font color="#E5E5E5"> grass on a</font>

350
00:17:04,839 --> 00:17:09,069
<font color="#E5E5E5">high-performance computing system are</font>

351
00:17:06,699 --> 00:17:11,860
the<font color="#E5E5E5"> actual hardware resources available</font>

352
00:17:09,069 --> 00:17:15,129
for each compute node this is<font color="#E5E5E5"> needed to</font>

353
00:17:11,859 --> 00:17:17,439
like tailor and design your workflow how

354
00:17:15,130 --> 00:17:20,620
much load you<font color="#CCCCCC"> can actually put on each</font>

355
00:17:17,440 --> 00:17:22,420
compute node<font color="#E5E5E5"> otherwise you will get all</font>

356
00:17:20,619 --> 00:17:26,229
sorts of problems<font color="#E5E5E5"> or come to</font><font color="#CCCCCC"> these</font>

357
00:17:22,420 --> 00:17:28,660
problems later on<font color="#CCCCCC"> shortly</font><font color="#E5E5E5"> so the general</font>

358
00:17:26,230 --> 00:17:30,700
idea<font color="#E5E5E5"> here</font><font color="#CCCCCC"> of parallelization</font><font color="#E5E5E5"> is that we</font>

359
00:17:28,660 --> 00:17:34,030
are<font color="#E5E5E5"> running several class commands or</font>

360
00:17:30,700 --> 00:17:36,910
grass modules at the same time on the

361
00:17:34,030 --> 00:17:39,720
<font color="#CCCCCC">same</font><font color="#E5E5E5"> computer note or on different</font>

362
00:17:36,910 --> 00:17:39,720
<font color="#E5E5E5">computers</font>

363
00:17:41,410 --> 00:17:45,920
before we actually<font color="#E5E5E5"> start we need</font><font color="#CCCCCC"> to</font>

364
00:17:43,700 --> 00:17:49,190
create chunks for parallel processing

365
00:17:45,920 --> 00:17:51,080
<font color="#E5E5E5">one option is</font><font color="#CCCCCC"> to create temporal chunks</font>

366
00:17:49,190 --> 00:17:53,690
<font color="#E5E5E5">and the other option is</font><font color="#CCCCCC"> to create</font>

367
00:17:51,080 --> 00:17:56,000
<font color="#CCCCCC">spatial</font><font color="#E5E5E5"> chunks</font><font color="#CCCCCC"> that depends a little bit</font>

368
00:17:53,690 --> 00:17:59,900
on if we<font color="#E5E5E5"> are doing temporal processing</font>

369
00:17:56,000 --> 00:18:02,390
or spatial processing in<font color="#E5E5E5"> the example</font>

370
00:17:59,900 --> 00:18:04,850
here<font color="#CCCCCC"> you see these the solid arrows show</font>

371
00:18:02,390 --> 00:18:07,370
the<font color="#E5E5E5"> temporal</font><font color="#CCCCCC"> slice</font><font color="#E5E5E5"> that I want to</font>

372
00:18:04,850 --> 00:18:11,270
<font color="#E5E5E5">process like I create two slices one and</font>

373
00:18:07,370 --> 00:18:14,449
<font color="#E5E5E5">two and here I actually add a little bit</font>

374
00:18:11,270 --> 00:18:17,750
of overlap<font color="#E5E5E5"> to avoid spatial temporal</font>

375
00:18:14,450 --> 00:18:20,210
discontinuity<font color="#E5E5E5"> and the overlapping part</font>

376
00:18:17,750 --> 00:18:24,440
of one I throw away<font color="#E5E5E5"> and overlapping part</font>

377
00:18:20,210 --> 00:18:26,800
of two I throw away of the dotted lines

378
00:18:24,440 --> 00:18:34,760
and only keep<font color="#E5E5E5"> the solid lines</font><font color="#CCCCCC"> where</font>

379
00:18:26,800 --> 00:18:37,340
seamless<font color="#CCCCCC"> reconstruct a time stack you</font>

380
00:18:34,760 --> 00:18:40,160
<font color="#E5E5E5">can also create spatial trunks</font><font color="#CCCCCC"> that has</font>

381
00:18:37,340 --> 00:18:43,129
also been quickly mentioned previously

382
00:18:40,160 --> 00:18:45,980
with<font color="#CCCCCC"> the dial for example you can create</font>

383
00:18:43,130 --> 00:18:52,330
<font color="#E5E5E5">virtual raster datasets that are</font>

384
00:18:45,980 --> 00:18:54,740
<font color="#E5E5E5">chopping up a large raster into tiles an</font>

385
00:18:52,330 --> 00:18:56,870
important<font color="#CCCCCC"> concept in</font><font color="#E5E5E5"> grass here is the</font>

386
00:18:54,740 --> 00:18:59,480
computational region which is defined<font color="#E5E5E5"> by</font>

387
00:18:56,870 --> 00:19:01,989
the extent north south west<font color="#E5E5E5"> and east and</font>

388
00:18:59,480 --> 00:19:04,700
the number of rows and columns

389
00:19:01,990 --> 00:19:07,990
<font color="#E5E5E5">considering considering these you can</font>

390
00:19:04,700 --> 00:19:12,410
chop<font color="#E5E5E5"> up a</font><font color="#CCCCCC"> roster in any number of</font>

391
00:19:07,990 --> 00:19:14,510
<font color="#E5E5E5">desired tiles you can also create</font>

392
00:19:12,410 --> 00:19:16,340
predefined regions<font color="#E5E5E5"> instead of chopping</font>

393
00:19:14,510 --> 00:19:21,700
<font color="#E5E5E5">up the water physically you simply</font>

394
00:19:16,340 --> 00:19:21,699
predefined<font color="#E5E5E5"> these computational regions</font>

395
00:19:24,550 --> 00:19:34,700
so<font color="#CCCCCC"> these four spatial processing that is</font>

396
00:19:32,240 --> 00:19:36,800
<font color="#CCCCCC">Fernet want</font><font color="#E5E5E5"> to do some spatial</font>

397
00:19:34,700 --> 00:19:41,060
interpolation or<font color="#E5E5E5"> freeing or something</font>

398
00:19:36,800 --> 00:19:43,460
like this<font color="#E5E5E5"> I recommend</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use each time</font>

399
00:19:41,060 --> 00:19:45,000
step as one<font color="#CCCCCC"> trunk</font><font color="#E5E5E5"> for the parallel</font>

400
00:19:43,460 --> 00:19:48,059
processing

401
00:19:45,000 --> 00:19:50,130
because the<font color="#E5E5E5"> spatial chunks might suffer</font>

402
00:19:48,059 --> 00:19:56,520
from<font color="#CCCCCC"> Specialties continuity's which are</font>

403
00:19:50,130 --> 00:19:59,130
very difficult to fix<font color="#CCCCCC"> later on now a</font>

404
00:19:56,520 --> 00:20:04,590
little<font color="#CCCCCC"> bit of the inner</font><font color="#E5E5E5"> workings how</font>

405
00:19:59,130 --> 00:20:08,400
this type HPC workflow would work first

406
00:20:04,590 --> 00:20:10,678
I create a script with actual<font color="#CCCCCC"> grass</font>

407
00:20:08,400 --> 00:20:15,419
commands<font color="#E5E5E5"> that do the actual</font><font color="#CCCCCC"> processing</font>

408
00:20:10,679 --> 00:20:19,409
within a given<font color="#E5E5E5"> class session this I can</font>

409
00:20:15,419 --> 00:20:21,780
<font color="#E5E5E5">run like by hand on a laptop</font><font color="#CCCCCC"> just to</font>

410
00:20:19,409 --> 00:20:24,390
<font color="#E5E5E5">figure out an optimized workflow then I</font>

411
00:20:21,780 --> 00:20:27,629
create a second<font color="#E5E5E5"> script that creates a</font>

412
00:20:24,390 --> 00:20:30,210
unique<font color="#E5E5E5"> class session Marcus has</font>

413
00:20:27,630 --> 00:20:32,490
mentioned this before<font color="#E5E5E5"> this can also be</font>

414
00:20:30,210 --> 00:20:36,059
done<font color="#E5E5E5"> for example of the new Python</font>

415
00:20:32,490 --> 00:20:38,340
interface<font color="#CCCCCC"> one</font><font color="#E5E5E5"> session here I prefer to</font>

416
00:20:36,059 --> 00:20:40,289
do this manually<font color="#E5E5E5"> more or less manually</font>

417
00:20:38,340 --> 00:20:44,010
because<font color="#E5E5E5"> I'm fine tuning the</font><font color="#CCCCCC"> headings a</font>

418
00:20:40,289 --> 00:20:46,350
<font color="#E5E5E5">little bit for HPC processing so this</font>

419
00:20:44,010 --> 00:20:50,039
script number<font color="#CCCCCC"> 2 is then</font><font color="#E5E5E5"> actually running</font>

420
00:20:46,350 --> 00:20:51,780
<font color="#E5E5E5">script number 1 popping the</font><font color="#CCCCCC"> result</font><font color="#E5E5E5"> to a</font>

421
00:20:50,039 --> 00:20:54,929
final destination<font color="#E5E5E5"> and cleans up</font>

422
00:20:51,780 --> 00:20:58,440
everything<font color="#E5E5E5"> script number 3 is highly</font>

423
00:20:54,929 --> 00:21:02,450
dependent<font color="#E5E5E5"> on may not exist at all and</font><font color="#CCCCCC"> on</font>

424
00:20:58,440 --> 00:21:05,400
your<font color="#CCCCCC"> top scheduler</font><font color="#E5E5E5"> that you're using to</font>

425
00:21:02,450 --> 00:21:12,929
<font color="#E5E5E5">manage the</font><font color="#CCCCCC"> different jobs on your HPC</font>

426
00:21:05,400 --> 00:21:15,480
system the last session is divided<font color="#E5E5E5"> into</font>

427
00:21:12,929 --> 00:21:17,610
two components<font color="#E5E5E5"> first we have to set</font><font color="#CCCCCC"> up</font>

428
00:21:15,480 --> 00:21:20,250
the<font color="#CCCCCC"> glass installation</font><font color="#E5E5E5"> some</font>

429
00:21:17,610 --> 00:21:22,289
<font color="#E5E5E5">environmental variables and also paths</font>

430
00:21:20,250 --> 00:21:25,520
<font color="#CCCCCC">like we</font><font color="#E5E5E5"> are the</font><font color="#CCCCCC"> grass libraries and the</font>

431
00:21:22,289 --> 00:21:29,280
grass<font color="#E5E5E5"> there are executables and so on</font>

432
00:21:25,520 --> 00:21:31,980
this<font color="#E5E5E5"> is all done automatically on import</font>

433
00:21:29,280 --> 00:21:34,590
<font color="#E5E5E5">and then the actual session which means</font>

434
00:21:31,980 --> 00:21:37,360
we have to define we are the spatial

435
00:21:34,590 --> 00:21:40,689
<font color="#E5E5E5">data are located</font>

436
00:21:37,360 --> 00:21:42,639
<font color="#E5E5E5">a little bit more into the inner</font>

437
00:21:40,690 --> 00:21:46,330
<font color="#CCCCCC">workings but</font><font color="#E5E5E5"> I won't go into too much</font>

438
00:21:42,640 --> 00:21:52,450
detail<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> for specials hi called</font>

439
00:21:46,330 --> 00:21:58,960
<font color="#E5E5E5">ga.src but the settings of the grass</font>

440
00:21:52,450 --> 00:22:02,500
session and the most important component

441
00:21:58,960 --> 00:22:06,100
for HPC computing with<font color="#CCCCCC"> classes</font><font color="#E5E5E5"> that we</font>

442
00:22:02,500 --> 00:22:09,370
need temporary<font color="#E5E5E5"> like environments sandbox</font>

443
00:22:06,100 --> 00:22:11,159
the whole computation<font color="#E5E5E5"> so that the</font>

444
00:22:09,370 --> 00:22:14,110
different compute nodes are<font color="#E5E5E5"> not in</font>

445
00:22:11,160 --> 00:22:17,080
interfering<font color="#E5E5E5"> with each other and in this</font>

446
00:22:14,110 --> 00:22:19,689
case it's temporary<font color="#CCCCCC"> map set</font><font color="#E5E5E5"> that I'm</font>

447
00:22:17,080 --> 00:22:22,080
creating<font color="#CCCCCC"> yeah I do all the processing</font>

448
00:22:19,690 --> 00:22:26,620
<font color="#E5E5E5">and at the end I copy everything back</font>

449
00:22:22,080 --> 00:22:32,260
cleaning up can<font color="#CCCCCC"> be as</font><font color="#E5E5E5"> simple as RM minus</font>

450
00:22:26,620 --> 00:22:34,149
RF<font color="#E5E5E5"> love by folder and done more</font>

451
00:22:32,260 --> 00:22:36,820
information is of course<font color="#E5E5E5"> also on our</font>

452
00:22:34,150 --> 00:22:39,880
weekly page about<font color="#CCCCCC"> how to set up a grass</font>

453
00:22:36,820 --> 00:22:42,040
session more or less automatically<font color="#E5E5E5"> or</font>

454
00:22:39,880 --> 00:22:47,080
<font color="#E5E5E5">for batch processing</font><font color="#CCCCCC"> there's there are</font>

455
00:22:42,040 --> 00:22:49,210
<font color="#E5E5E5">also a few more examples the important</font>

456
00:22:47,080 --> 00:22:51,730
part of that<font color="#E5E5E5"> job manager that we are</font>

457
00:22:49,210 --> 00:22:53,890
using here is we must have accused

458
00:22:51,730 --> 00:22:57,370
something like this so I<font color="#E5E5E5"> designed</font><font color="#CCCCCC"> I</font>

459
00:22:53,890 --> 00:22:59,080
started<font color="#E5E5E5"> eight jobs for jobs are running</font>

460
00:22:57,370 --> 00:23:01,090
<font color="#E5E5E5">for the next four jobs there are no</font>

461
00:22:59,080 --> 00:23:03,730
hardware resources available so<font color="#CCCCCC"> there in</font>

462
00:23:01,090 --> 00:23:07,449
the queue and they will start when the

463
00:23:03,730 --> 00:23:10,210
first four jobs are finished<font color="#E5E5E5"> now comes</font>

464
00:23:07,450 --> 00:23:12,640
the<font color="#CCCCCC"> problem that we have experienced</font>

465
00:23:10,210 --> 00:23:15,070
what I have experienced<font color="#E5E5E5"> in the past</font><font color="#CCCCCC"> so</font>

466
00:23:12,640 --> 00:23:17,049
<font color="#E5E5E5">let's assume we have a number</font><font color="#CCCCCC"> of jobs</font>

467
00:23:15,070 --> 00:23:19,030
they all do their processing

468
00:23:17,049 --> 00:23:20,950
independently finally I want<font color="#E5E5E5"> to keep all</font>

469
00:23:19,030 --> 00:23:24,250
the results somewhere on a<font color="#E5E5E5"> final</font>

470
00:23:20,950 --> 00:23:26,860
destination<font color="#CCCCCC"> and every job is writing to</font>

471
00:23:24,250 --> 00:23:29,380
a final<font color="#E5E5E5"> destination</font><font color="#CCCCCC"> storage and</font><font color="#E5E5E5"> that's</font>

472
00:23:26,860 --> 00:23:33,370
the situation<font color="#CCCCCC"> at the time and the whole</font>

473
00:23:29,380 --> 00:23:38,049
<font color="#CCCCCC">system</font><font color="#E5E5E5"> is going down and crashing yeah</font>

474
00:23:33,370 --> 00:23:41,830
so it depends on you can put HPC systems

475
00:23:38,049 --> 00:23:43,809
to the limits<font color="#E5E5E5"> and it depends on</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> how</font>

476
00:23:41,830 --> 00:23:45,179
they<font color="#E5E5E5"> are set</font><font color="#CCCCCC"> up it's</font><font color="#E5E5E5"> worth to try out</font>

477
00:23:43,809 --> 00:23:50,010
their limit

478
00:23:45,180 --> 00:23:52,640
first another<font color="#E5E5E5"> example</font><font color="#CCCCCC"> also what we did</font>

479
00:23:50,010 --> 00:23:55,770
<font color="#E5E5E5">recently is land surface temperature</font>

480
00:23:52,640 --> 00:23:57,750
processing we have<font color="#E5E5E5"> in this case a time</font>

481
00:23:55,770 --> 00:24:02,690
series<font color="#E5E5E5"> of about</font><font color="#CCCCCC"> thirty thousand</font><font color="#E5E5E5"> maps</font>

482
00:23:57,750 --> 00:24:05,580
which we process<font color="#CCCCCC"> both</font><font color="#E5E5E5"> HPC methods and</font>

483
00:24:02,690 --> 00:24:09,240
yeah<font color="#CCCCCC"> so essentially we want</font><font color="#E5E5E5"> to get from</font>

484
00:24:05,580 --> 00:24:12,000
gaps in space and time<font color="#E5E5E5"> on the left hand</font>

485
00:24:09,240 --> 00:24:14,280
side<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the fully reconstructed map on</font>

486
00:24:12,000 --> 00:24:16,920
the right<font color="#E5E5E5"> hand side</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to do this</font>

487
00:24:14,280 --> 00:24:20,129
<font color="#CCCCCC">thirty</font><font color="#E5E5E5"> thousand times in Kerala</font>

488
00:24:16,920 --> 00:24:23,700
something like this<font color="#E5E5E5"> most important when</font>

489
00:24:20,130 --> 00:24:25,950
you do HPC processing you need<font color="#CCCCCC"> to have a</font>

490
00:24:23,700 --> 00:24:28,530
good admin<font color="#E5E5E5"> that fixes the system after</font>

491
00:24:25,950 --> 00:24:31,290
<font color="#CCCCCC">you broke it</font><font color="#E5E5E5"> and just for clarification</font>

492
00:24:28,530 --> 00:24:34,170
<font color="#CCCCCC">I'm the one who's breaking it I'm not</font>

493
00:24:31,290 --> 00:24:35,290
<font color="#E5E5E5">the</font><font color="#CCCCCC"> one who's fixing it thank you for</font>

494
00:24:34,170 --> 00:24:44,049
<font color="#CCCCCC">your attention</font>

495
00:24:35,290 --> 00:24:44,049
[Applause]

496
00:25:38,630 --> 00:25:45,750
maybe maybe<font color="#E5E5E5"> not</font><font color="#CCCCCC"> so disk</font><font color="#E5E5E5"> space is usually</font>

497
00:25:41,850 --> 00:25:51,480
<font color="#E5E5E5">fixed the only solution is to buy more</font>

498
00:25:45,750 --> 00:25:54,750
disk space<font color="#CCCCCC"> ya know it's easier to buy</font>

499
00:25:51,480 --> 00:25:57,330
more memory<font color="#E5E5E5"> so if you want one terabyte</font>

500
00:25:54,750 --> 00:25:59,430
more disk<font color="#CCCCCC"> space</font><font color="#E5E5E5"> this is easy to buy but</font>

501
00:25:57,330 --> 00:26:10,080
one terabyte of memory is a<font color="#E5E5E5"> little bit</font>

502
00:25:59,430 --> 00:26:12,690
more of a<font color="#E5E5E5"> problem another solution may</font>

503
00:26:10,080 --> 00:26:14,790
<font color="#CCCCCC">be is to run less drops in parallel and</font>

504
00:26:12,690 --> 00:26:16,620
then use<font color="#E5E5E5"> some external storage where you</font>

505
00:26:14,790 --> 00:26:20,010
have enough disk space<font color="#CCCCCC"> for the final</font>

506
00:26:16,620 --> 00:26:23,840
results then you can avoid the highest

507
00:26:20,010 --> 00:26:23,840
consumption<font color="#E5E5E5"> for intermediate</font>

508
00:26:50,740 --> 00:26:57,860
so I'm actually<font color="#E5E5E5"> never running</font><font color="#CCCCCC"> using the</font>

509
00:26:55,309 --> 00:27:00,260
HPC system on full power<font color="#E5E5E5"> like on full</font>

510
00:26:57,860 --> 00:27:11,178
<font color="#E5E5E5">CPU power because the bottleneck is</font>

511
00:27:00,260 --> 00:27:15,440
reading and writing the<font color="#E5E5E5"> data usually</font><font color="#CCCCCC"> we</font>

512
00:27:11,179 --> 00:27:19,010
do<font color="#E5E5E5"> not create any temporary files but a</font>

513
00:27:15,440 --> 00:27:20,890
workflow<font color="#E5E5E5"> more complicated</font><font color="#CCCCCC"> workflow like</font>

514
00:27:19,010 --> 00:27:24,110
for land surface<font color="#CCCCCC"> temperature</font>

515
00:27:20,890 --> 00:27:27,620
<font color="#E5E5E5">reconstruction consists not only of one</font>

516
00:27:24,110 --> 00:27:30,620
single processing step out<font color="#E5E5E5"> of</font><font color="#CCCCCC"> 15-20</font>

517
00:27:27,620 --> 00:27:33,350
steps and we have to<font color="#E5E5E5"> monitor each step</font>

518
00:27:30,620 --> 00:27:35,559
<font color="#E5E5E5">each step is producing output which has</font>

519
00:27:33,350 --> 00:27:38,299
<font color="#E5E5E5">been becoming input for the</font><font color="#CCCCCC"> next step</font>

520
00:27:35,559 --> 00:27:41,600
<font color="#E5E5E5">depending and the processing you cannot</font>

521
00:27:38,299 --> 00:27:44,960
<font color="#E5E5E5">simply pipe it</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> memory to the next</font>

522
00:27:41,600 --> 00:27:47,149
step because<font color="#E5E5E5"> memory would explode and we</font>

523
00:27:44,960 --> 00:27:49,250
also need sometimes<font color="#CCCCCC"> to keep intermediate</font>

524
00:27:47,150 --> 00:27:52,309
<font color="#E5E5E5">results in order</font><font color="#CCCCCC"> to figure out what went</font>

525
00:27:49,250 --> 00:27:56,600
wrong<font color="#CCCCCC"> if everything went time we simply</font>

526
00:27:52,309 --> 00:27:59,360
delete the power command<font color="#E5E5E5"> RM minus RF</font>

527
00:27:56,600 --> 00:28:02,110
everything<font color="#E5E5E5"> and we have our displays back</font>

528
00:27:59,360 --> 00:28:02,110
for the<font color="#E5E5E5"> next</font>

529
00:28:09,070 --> 00:28:13,580
yes

530
00:28:10,310 --> 00:28:16,129
so yeah that's<font color="#E5E5E5"> part of the optimization</font>

531
00:28:13,580 --> 00:28:19,669
of course you want don't<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to create</font>

532
00:28:16,130 --> 00:28:23,000
too many intermediate products or

533
00:28:19,670 --> 00:28:26,600
intermediate<font color="#CCCCCC"> data but but depending</font><font color="#E5E5E5"> on</font>

534
00:28:23,000 --> 00:28:28,250
<font color="#E5E5E5">the complexity</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the workflow and for</font>

535
00:28:26,600 --> 00:28:30,620
any<font color="#E5E5E5"> VI reconstruction of this</font>

536
00:28:28,250 --> 00:28:34,460
<font color="#CCCCCC">straightforward actually we do</font><font color="#E5E5E5"> not have</font>

537
00:28:30,620 --> 00:28:37,100
any intermediate data because this hunt

538
00:28:34,460 --> 00:28:39,260
<font color="#E5E5E5">procedure is immediately producing the</font>

539
00:28:37,100 --> 00:28:42,620
final output<font color="#E5E5E5"> for land surface</font>

540
00:28:39,260 --> 00:28:44,629
<font color="#CCCCCC">temperature</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> have thirty into</font><font color="#E5E5E5"> the</font>

541
00:28:42,620 --> 00:28:46,969
intermediate<font color="#E5E5E5"> product because the</font>

542
00:28:44,630 --> 00:28:49,640
workflow is complicated<font color="#CCCCCC"> I have to check</font>

543
00:28:46,970 --> 00:28:53,410
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the results are correct that I want</font>

544
00:28:49,640 --> 00:28:53,410
to use as<font color="#CCCCCC"> input for</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> steps</font>

545
00:29:01,500 --> 00:29:09,569
[Applause]

