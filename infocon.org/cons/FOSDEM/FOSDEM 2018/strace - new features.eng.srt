1
00:00:04,640 --> 00:00:10,399
so we are<font color="#E5E5E5"> finally ready to start its</font>

2
00:00:08,240 --> 00:00:13,639
little a<font color="#CCCCCC"> very short now five</font><font color="#E5E5E5"> minutes</font>

3
00:00:10,400 --> 00:00:17,300
show to talk<font color="#CCCCCC"> about new features in</font><font color="#E5E5E5"> this</font>

4
00:00:13,639 --> 00:00:21,350
race I'm Dimitri<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> mentoring of stress</font>

5
00:00:17,300 --> 00:00:23,720
for quite some<font color="#CCCCCC"> time and today I'll give</font>

6
00:00:21,350 --> 00:00:26,779
a short talk about new<font color="#E5E5E5"> features</font><font color="#CCCCCC"> just</font>

7
00:00:23,720 --> 00:00:29,180
just a<font color="#E5E5E5"> few of them because well most of</font>

8
00:00:26,779 --> 00:00:30,529
<font color="#CCCCCC">stuff we are doing</font><font color="#E5E5E5"> is quite boring and</font>

9
00:00:29,180 --> 00:00:33,800
nothing to talk about

10
00:00:30,529 --> 00:00:36,170
<font color="#CCCCCC">but very important for these features</font>

11
00:00:33,800 --> 00:00:37,640
and<font color="#E5E5E5"> other new features to work but if</font>

12
00:00:36,170 --> 00:00:40,250
you're really curious<font color="#CCCCCC"> you could have a</font>

13
00:00:37,640 --> 00:00:43,220
look at<font color="#E5E5E5"> release notes and find dig out</font>

14
00:00:40,250 --> 00:00:46,640
<font color="#CCCCCC">all the boring stuff is there but</font><font color="#E5E5E5"> today</font>

15
00:00:43,220 --> 00:00:49,430
<font color="#E5E5E5">I'll stop remind you about fault</font>

16
00:00:46,640 --> 00:00:52,640
injection<font color="#E5E5E5"> I was talking about last year</font>

17
00:00:49,430 --> 00:00:55,250
<font color="#E5E5E5">and we'll talk about new features</font><font color="#CCCCCC"> some</font>

18
00:00:52,640 --> 00:00:58,570
<font color="#E5E5E5">of them are</font><font color="#CCCCCC"> already included</font><font color="#E5E5E5"> and already</font>

19
00:00:55,250 --> 00:01:01,460
released<font color="#E5E5E5"> and some are still being merged</font>

20
00:00:58,570 --> 00:01:05,330
<font color="#E5E5E5">so this is a recollection from the last</font>

21
00:01:01,460 --> 00:01:07,610
year<font color="#CCCCCC"> hold injection</font><font color="#E5E5E5"> if you just happen</font>

22
00:01:05,330 --> 00:01:09,920
to<font color="#CCCCCC"> miss this new feature</font><font color="#E5E5E5"> it's very</font>

23
00:01:07,610 --> 00:01:13,940
unusual for traditional<font color="#CCCCCC"> strays</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font>

24
00:01:09,920 --> 00:01:16,750
can tamper with system calls<font color="#E5E5E5"> like in</font>

25
00:01:13,940 --> 00:01:19,759
<font color="#E5E5E5">this simple example or</font>

26
00:01:16,750 --> 00:01:22,550
<font color="#E5E5E5">you actually can inject any kind of</font>

27
00:01:19,760 --> 00:01:27,970
<font color="#CCCCCC">Fault in any system</font><font color="#E5E5E5"> call you specify</font>

28
00:01:22,550 --> 00:01:31,550
like in those<font color="#E5E5E5"> indications you want and</font>

29
00:01:27,970 --> 00:01:34,570
this<font color="#E5E5E5"> is also from last year's talk it's</font>

30
00:01:31,550 --> 00:01:37,220
a real bug was<font color="#E5E5E5"> found in Python that's</font>

31
00:01:34,570 --> 00:01:41,360
already fixed now<font color="#E5E5E5"> but you can see that</font>

32
00:01:37,220 --> 00:01:44,030
it just<font color="#E5E5E5"> failed to check</font><font color="#CCCCCC"> its own code</font>

33
00:01:41,360 --> 00:01:47,710
from open<font color="#E5E5E5"> Cisco and from recess</font><font color="#CCCCCC"> call and</font>

34
00:01:44,030 --> 00:01:52,280
that resulted<font color="#E5E5E5"> to sick</font><font color="#CCCCCC"> falls because</font><font color="#E5E5E5"> then</font>

35
00:01:47,710 --> 00:01:56,839
just<font color="#CCCCCC"> exists and fixed upset from a null</font>

36
00:01:52,280 --> 00:01:59,750
pointer another bug was fixed in dynamic

37
00:01:56,840 --> 00:02:03,409
linker<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Lipsy pretty harmless back</font>

38
00:01:59,750 --> 00:02:06,440
but<font color="#E5E5E5"> still was a bug was ignored</font><font color="#CCCCCC"> setting</font>

39
00:02:03,409 --> 00:02:09,019
protection<font color="#E5E5E5"> some portion of</font><font color="#CCCCCC"> memory</font>

40
00:02:06,440 --> 00:02:13,450
expected to be an accessible<font color="#E5E5E5"> but it fell</font>

41
00:02:09,019 --> 00:02:15,230
to check this and it remained accessible

42
00:02:13,450 --> 00:02:17,280
this is not good

43
00:02:15,230 --> 00:02:20,160
<font color="#E5E5E5">that it was fixed</font>

44
00:02:17,280 --> 00:02:21,840
<font color="#CCCCCC">also so this</font><font color="#E5E5E5"> is just a quicker</font>

45
00:02:20,160 --> 00:02:23,220
correction from<font color="#CCCCCC"> the last year's talk if</font>

46
00:02:21,840 --> 00:02:26,220
you are more<font color="#CCCCCC"> interested you can</font><font color="#E5E5E5"> just</font>

47
00:02:23,220 --> 00:02:28,530
have a look<font color="#E5E5E5"> at it and play</font><font color="#CCCCCC"> with it it's</font>

48
00:02:26,220 --> 00:02:33,420
very<font color="#E5E5E5"> useful feature you can use it for</font>

49
00:02:28,530 --> 00:02:37,170
like<font color="#E5E5E5"> regression testing we</font><font color="#CCCCCC"> actually use</font>

50
00:02:33,420 --> 00:02:40,708
<font color="#CCCCCC">it in pursuit of a stress itself</font><font color="#E5E5E5"> so</font>

51
00:02:37,170 --> 00:02:44,160
you're<font color="#CCCCCC"> welcome</font><font color="#E5E5E5"> we implemented more</font>

52
00:02:40,709 --> 00:02:46,709
features in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> this direction so</font><font color="#CCCCCC"> there</font>

53
00:02:44,160 --> 00:02:49,829
is a new option<font color="#E5E5E5"> called inject that can</font>

54
00:02:46,709 --> 00:02:53,970
inject not just four stitches calls but

55
00:02:49,830 --> 00:02:57,750
other<font color="#E5E5E5"> kinds of things</font><font color="#CCCCCC"> like signals to</font>

56
00:02:53,970 --> 00:02:59,489
school vacations or other kinds of

57
00:02:57,750 --> 00:03:04,080
return codes that are<font color="#CCCCCC"> not that useful</font>

58
00:02:59,489 --> 00:03:07,470
and<font color="#CCCCCC"> also delay injection this is</font><font color="#E5E5E5"> last</font>

59
00:03:04,080 --> 00:03:11,430
this<font color="#E5E5E5"> is a quite new feature it's not yet</font>

60
00:03:07,470 --> 00:03:14,100
merged<font color="#CCCCCC"> so you can inject delays in</font>

61
00:03:11,430 --> 00:03:18,989
vacations on entrance to school and then

62
00:03:14,100 --> 00:03:22,560
<font color="#E5E5E5">exiting syscalls and like if stress</font>

63
00:03:18,989 --> 00:03:26,010
wasn't slow<font color="#E5E5E5"> enough you can make it even</font>

64
00:03:22,560 --> 00:03:29,519
<font color="#E5E5E5">slower in specific cases as you can see</font>

65
00:03:26,010 --> 00:03:32,880
in this example<font color="#CCCCCC"> like</font><font color="#E5E5E5"> home or just</font>

66
00:03:29,519 --> 00:03:35,519
magnitude<font color="#E5E5E5"> is so why don't you like three</font>

67
00:03:32,880 --> 00:03:38,489
orders of<font color="#E5E5E5"> magnitude</font><font color="#CCCCCC"> slower</font><font color="#E5E5E5"> just those</font>

68
00:03:35,519 --> 00:03:41,959
specifics<font color="#CCCCCC"> of course you want to</font><font color="#E5E5E5"> besides</font>

69
00:03:38,489 --> 00:03:45,900
miss<font color="#CCCCCC"> city examples where you can also</font>

70
00:03:41,959 --> 00:03:47,820
well silly<font color="#CCCCCC"> I</font><font color="#E5E5E5"> actually been asked several</font>

71
00:03:45,900 --> 00:03:50,280
times<font color="#CCCCCC"> when</font><font color="#E5E5E5"> people wanted to slow down</font>

72
00:03:47,820 --> 00:03:52,739
some<font color="#CCCCCC"> Siskel's to throttle network</font>

73
00:03:50,280 --> 00:03:55,859
traffic for example<font color="#CCCCCC"> and those tools they</font>

74
00:03:52,739 --> 00:04:00,470
that don't implement this like<font color="#E5E5E5"> slow down</font>

75
00:03:55,859 --> 00:04:04,560
rates on or sense or some other Cisco's

76
00:04:00,470 --> 00:04:10,940
<font color="#E5E5E5">another kind of use of</font><font color="#CCCCCC"> this feature is</font>

77
00:04:04,560 --> 00:04:13,579
like<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Port injection case is for</font>

78
00:04:10,940 --> 00:04:16,108
regression testing where<font color="#E5E5E5"> you can</font>

79
00:04:13,579 --> 00:04:19,320
specifically slow down some<font color="#E5E5E5"> process</font>

80
00:04:16,108 --> 00:04:22,560
that's expected<font color="#E5E5E5"> to finish to complete</font>

81
00:04:19,320 --> 00:04:24,960
<font color="#E5E5E5">some operation very fast</font><font color="#CCCCCC"> and if another</font>

82
00:04:22,560 --> 00:04:27,410
process<font color="#E5E5E5"> or thread is waiting for it for</font>

83
00:04:24,960 --> 00:04:31,039
<font color="#CCCCCC">fixed</font><font color="#E5E5E5"> time this will fail</font>

84
00:04:27,410 --> 00:04:34,820
so this way<font color="#E5E5E5"> you can do that</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

85
00:04:31,040 --> 00:04:39,530
inject some delays that<font color="#E5E5E5"> effect control</font>

86
00:04:34,820 --> 00:04:42,430
flow<font color="#CCCCCC"> let's do this my talk consists of</font>

87
00:04:39,530 --> 00:04:46,280
small<font color="#CCCCCC"> blocks and if you have</font><font color="#E5E5E5"> questions</font>

88
00:04:42,430 --> 00:04:48,470
<font color="#E5E5E5">when you see this thing like 5/5 is the</font>

89
00:04:46,280 --> 00:04:52,159
end of block and you<font color="#E5E5E5"> can ask them right</font>

90
00:04:48,470 --> 00:04:56,780
now if you want if not<font color="#E5E5E5"> let's move on to</font>

91
00:04:52,160 --> 00:05:01,010
<font color="#E5E5E5">another block so this year actually last</font>

92
00:04:56,780 --> 00:05:03,289
two years<font color="#CCCCCC"> it would be in a project mmm</font>

93
00:05:01,010 --> 00:05:05,990
it was a google Summer of Code

94
00:05:03,290 --> 00:05:09,700
<font color="#CCCCCC">jin-seok project of two years</font><font color="#E5E5E5"> that</font>

95
00:05:05,990 --> 00:05:13,550
implemented<font color="#CCCCCC"> partial for network traffic</font>

96
00:05:09,700 --> 00:05:17,120
<font color="#CCCCCC">the first year was a magic ground very</font>

97
00:05:13,550 --> 00:05:20,500
<font color="#CCCCCC">groundwork</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> last year we implemented</font>

98
00:05:17,120 --> 00:05:23,690
the most popular knitting protocols

99
00:05:20,500 --> 00:05:28,310
starting with route and you<font color="#E5E5E5"> can see like</font>

100
00:05:23,690 --> 00:05:31,210
<font color="#CCCCCC">nine of</font><font color="#E5E5E5"> them and more are going</font><font color="#CCCCCC"> to be</font>

101
00:05:28,310 --> 00:05:34,370
implemented this year thing<font color="#E5E5E5"> hopefully</font>

102
00:05:31,210 --> 00:05:38,150
how does it look this is a very simple

103
00:05:34,370 --> 00:05:41,570
routing table to to make this<font color="#CCCCCC"> routing</font>

104
00:05:38,150 --> 00:05:43,580
table you you have to create like a

105
00:05:41,570 --> 00:05:45,640
basic container with no network

106
00:05:43,580 --> 00:05:49,510
<font color="#E5E5E5">interfaces</font><font color="#CCCCCC"> just a</font><font color="#E5E5E5"> little back interface</font>

107
00:05:45,640 --> 00:05:54,530
<font color="#CCCCCC">if you create this</font><font color="#E5E5E5"> it will have just</font><font color="#CCCCCC"> for</font>

108
00:05:49,510 --> 00:05:59,360
Colonel Colonel<font color="#E5E5E5"> routes</font>

109
00:05:54,530 --> 00:06:01,570
so how does it<font color="#E5E5E5"> actually look what IP to</font>

110
00:05:59,360 --> 00:06:04,100
<font color="#E5E5E5">see is from the colonel</font>

111
00:06:01,570 --> 00:06:08,680
let's this is going to be a very

112
00:06:04,100 --> 00:06:11,030
impressive<font color="#CCCCCC"> picture be prepared that's</font>

113
00:06:08,680 --> 00:06:14,180
<font color="#E5E5E5">what's going under the</font><font color="#CCCCCC"> coat you see this</font>

114
00:06:11,030 --> 00:06:17,929
is<font color="#CCCCCC"> very</font><font color="#E5E5E5"> structured output I did some</font>

115
00:06:14,180 --> 00:06:22,580
<font color="#E5E5E5">coloring</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> manual sorry</font><font color="#CCCCCC"> I did it by</font>

116
00:06:17,930 --> 00:06:25,250
<font color="#CCCCCC">hand so but you</font><font color="#E5E5E5"> can see that I mean the</font>

117
00:06:22,580 --> 00:06:27,760
tool it doesn't<font color="#E5E5E5"> see any colors</font><font color="#CCCCCC"> it see</font>

118
00:06:25,250 --> 00:06:27,760
<font color="#E5E5E5">structures</font>

119
00:06:28,070 --> 00:06:40,099
oh sorry<font color="#E5E5E5"> it's just very simple</font><font color="#CCCCCC"> you'll</font>

120
00:06:37,520 --> 00:06:43,010
<font color="#E5E5E5">see schools but without all these</font>

121
00:06:40,100 --> 00:06:45,830
structures it would be just string or

122
00:06:43,010 --> 00:06:48,190
pointer<font color="#E5E5E5"> depending on what kind of</font><font color="#CCCCCC"> as you</font>

123
00:06:45,830 --> 00:06:51,020
<font color="#E5E5E5">if you know we've sent</font><font color="#CCCCCC"> two it would</font><font color="#E5E5E5"> be</font>

124
00:06:48,190 --> 00:06:53,900
instead of this instead of this

125
00:06:51,020 --> 00:06:56,890
<font color="#CCCCCC">structure that starts here</font><font color="#E5E5E5"> yeah</font>

126
00:06:53,900 --> 00:06:58,700
<font color="#CCCCCC">we carry barricades fields</font><font color="#E5E5E5"> you would see</font>

127
00:06:56,890 --> 00:07:01,340
I'm sorry

128
00:06:58,700 --> 00:07:05,510
it would see<font color="#E5E5E5"> just in all the stresses</font>

129
00:07:01,340 --> 00:07:08,960
would see just a string<font color="#E5E5E5"> a binder thing</font>

130
00:07:05,510 --> 00:07:18,920
that means<font color="#E5E5E5"> nothing but here you see like</font>

131
00:07:08,960 --> 00:07:22,549
a structured output almost<font color="#E5E5E5"> no but also</font>

132
00:07:18,920 --> 00:07:26,000
supported you<font color="#CCCCCC"> can see on this</font><font color="#E5E5E5"> none</font><font color="#CCCCCC"> of</font>

133
00:07:22,550 --> 00:07:30,080
them so it's almost like<font color="#CCCCCC"> a knitting</font>

134
00:07:26,000 --> 00:07:32,600
debugger without probably we can't

135
00:07:30,080 --> 00:07:36,200
<font color="#E5E5E5">really inject all this stuff inside the</font>

136
00:07:32,600 --> 00:07:40,910
program<font color="#E5E5E5"> but you can see all this gory</font>

137
00:07:36,200 --> 00:07:43,219
details<font color="#E5E5E5"> something let's go on another</font>

138
00:07:40,910 --> 00:07:47,930
<font color="#E5E5E5">set of features to implement that is</font>

139
00:07:43,220 --> 00:07:49,210
related<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Cisco specifications</font><font color="#CCCCCC"> States</font>

140
00:07:47,930 --> 00:07:53,240
as you<font color="#E5E5E5"> probably know have a lot</font><font color="#CCCCCC"> of</font>

141
00:07:49,210 --> 00:07:56,599
<font color="#CCCCCC">children</font><font color="#E5E5E5"> like it can filters</font><font color="#CCCCCC"> is caused</font>

142
00:07:53,240 --> 00:07:59,230
by<font color="#CCCCCC"> glasses this time we decided</font><font color="#E5E5E5"> to add</font>

143
00:07:56,600 --> 00:08:02,090
some<font color="#E5E5E5"> more</font><font color="#CCCCCC"> classes but to avoid</font>

144
00:07:59,230 --> 00:08:04,720
collisions with system calls<font color="#E5E5E5"> we edit</font>

145
00:08:02,090 --> 00:08:08,179
prefix<font color="#E5E5E5"> so all new system</font><font color="#CCCCCC"> call classes</font>

146
00:08:04,720 --> 00:08:12,590
started with perfect<font color="#E5E5E5"> it's a percent sign</font>

147
00:08:08,180 --> 00:08:15,110
<font color="#E5E5E5">and all traditional system system call</font>

148
00:08:12,590 --> 00:08:18,080
classes are<font color="#CCCCCC"> also have this prefix so</font>

149
00:08:15,110 --> 00:08:21,050
these are traditional<font color="#CCCCCC"> and we also did</font>

150
00:08:18,080 --> 00:08:24,800
like<font color="#E5E5E5"> four different start</font><font color="#CCCCCC"> feminists</font>

151
00:08:21,050 --> 00:08:26,930
calls you can see in this<font color="#E5E5E5"> example how it</font>

152
00:08:24,800 --> 00:08:31,070
looks<font color="#E5E5E5"> like what does it mean to</font><font color="#CCCCCC"> persons</font>

153
00:08:26,930 --> 00:08:37,210
get<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> way to describe all start</font>

154
00:08:31,070 --> 00:08:41,030
process family<font color="#CCCCCC"> just calls</font><font color="#E5E5E5"> why so so many</font>

155
00:08:37,210 --> 00:08:48,620
how do how many<font color="#CCCCCC"> F start system</font>

156
00:08:41,030 --> 00:08:52,250
the way -<font color="#CCCCCC"> Linux kernel do</font><font color="#E5E5E5"> you think 5x5</font>

157
00:08:48,620 --> 00:08:56,600
well<font color="#CCCCCC"> 64-bit architectures usually have</font>

158
00:08:52,250 --> 00:08:59,330
to them<font color="#CCCCCC"> 32 bits also - but different and</font>

159
00:08:56,600 --> 00:09:01,850
<font color="#E5E5E5">there is also an</font><font color="#CCCCCC"> engine</font><font color="#E5E5E5"> system call</font><font color="#CCCCCC"> that</font>

160
00:08:59,330 --> 00:09:03,650
modern architectures don't have but<font color="#CCCCCC"> you</font>

161
00:09:01,850 --> 00:09:06,770
<font color="#E5E5E5">don't have to worry</font><font color="#CCCCCC"> about all these</font>

162
00:09:03,650 --> 00:09:09,380
details<font color="#E5E5E5"> just use the system call</font><font color="#CCCCCC"> cross</font>

163
00:09:06,770 --> 00:09:15,170
name<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's all as you can see in</font>

164
00:09:09,380 --> 00:09:17,570
this example on the<font color="#CCCCCC"> trench it</font><font color="#E5E5E5"> sounds</font>

165
00:09:15,170 --> 00:09:19,280
<font color="#E5E5E5">here of the project we decided but we</font>

166
00:09:17,570 --> 00:09:22,250
found out well we don't still have

167
00:09:19,280 --> 00:09:23,110
support for regular<font color="#CCCCCC"> expressions how</font>

168
00:09:22,250 --> 00:09:26,990
could<font color="#CCCCCC"> that</font><font color="#E5E5E5"> be</font>

169
00:09:23,110 --> 00:09:29,840
so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> did this and you can see that the</font>

170
00:09:26,990 --> 00:09:38,480
same example<font color="#E5E5E5"> from the previous slide</font>

171
00:09:29,840 --> 00:09:40,420
could be could be like<font color="#E5E5E5"> using you can do</font>

172
00:09:38,480 --> 00:09:46,060
the same thing using regular expressions

173
00:09:40,420 --> 00:09:48,469
<font color="#CCCCCC">I don't</font><font color="#E5E5E5"> think it looks easier to use but</font>

174
00:09:46,060 --> 00:09:49,099
with expressions you can<font color="#CCCCCC"> do all</font>

175
00:09:48,470 --> 00:09:55,120
different<font color="#CCCCCC"> things</font>

176
00:09:49,100 --> 00:09:55,120
oh thank you the time is<font color="#E5E5E5"> going back</font>

177
00:09:57,790 --> 00:10:03,920
another feature of system called

178
00:10:01,910 --> 00:10:09,020
specifications is conditional

179
00:10:03,920 --> 00:10:11,839
expressions<font color="#CCCCCC"> as you probably know</font><font color="#E5E5E5"> system</font>

180
00:10:09,020 --> 00:10:16,760
calls are added like<font color="#CCCCCC"> every or almost</font>

181
00:10:11,839 --> 00:10:18,680
every<font color="#E5E5E5"> gnu/linux carries and they're not</font>

182
00:10:16,760 --> 00:10:20,930
added to<font color="#E5E5E5"> all architectures at the same</font>

183
00:10:18,680 --> 00:10:24,050
time it's<font color="#E5E5E5"> not normally the case for</font>

184
00:10:20,930 --> 00:10:26,930
example the<font color="#E5E5E5"> recent from a stat family</font>

185
00:10:24,050 --> 00:10:30,050
called statics<font color="#E5E5E5"> it was added for many</font>

186
00:10:26,930 --> 00:10:33,829
architectures but not for all and for

187
00:10:30,050 --> 00:10:37,430
<font color="#E5E5E5">example you</font><font color="#CCCCCC"> write a somewhat portable</font>

188
00:10:33,830 --> 00:10:39,050
script using a stress it will<font color="#E5E5E5"> get into</font>

189
00:10:37,430 --> 00:10:42,620
<font color="#E5E5E5">the</font><font color="#CCCCCC"> situation that</font><font color="#E5E5E5"> it works in most</font>

190
00:10:39,050 --> 00:10:46,280
<font color="#E5E5E5">cases but doesn't work on a</font><font color="#CCCCCC"> Mohnish</font>

191
00:10:42,620 --> 00:10:50,280
architectures like<font color="#CCCCCC"> italian where statics</font>

192
00:10:46,280 --> 00:10:53,069
<font color="#E5E5E5">up to this point is not yet right up so</font>

193
00:10:50,280 --> 00:10:55,650
using this conditional specification you

194
00:10:53,070 --> 00:11:01,560
can<font color="#E5E5E5"> walk around this and this is a real</font>

195
00:10:55,650 --> 00:11:07,430
case example<font color="#CCCCCC"> you will probably seen this</font>

196
00:11:01,560 --> 00:11:11,670
<font color="#E5E5E5">or</font><font color="#CCCCCC"> will see in</font><font color="#E5E5E5"> future</font><font color="#CCCCCC"> that BBC switched</font>

197
00:11:07,430 --> 00:11:16,050
from open to open<font color="#E5E5E5"> it internally and also</font>

198
00:11:11,670 --> 00:11:19,319
<font color="#E5E5E5">to for implementing open library call so</font>

199
00:11:16,050 --> 00:11:22,640
if you used<font color="#E5E5E5"> to trace by open it no</font>

200
00:11:19,320 --> 00:11:28,890
longer<font color="#CCCCCC"> works starting with with Lib C</font>

201
00:11:22,640 --> 00:11:32,130
2.26<font color="#CCCCCC"> but if you</font><font color="#E5E5E5"> switch to open</font><font color="#CCCCCC"> add you</font>

202
00:11:28,890 --> 00:11:36,930
<font color="#E5E5E5">won't be able</font><font color="#CCCCCC"> to trace all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> blue</font>

203
00:11:32,130 --> 00:11:39,930
<font color="#CCCCCC">pieces</font><font color="#E5E5E5"> it's not good so you can use the</font>

204
00:11:36,930 --> 00:11:42,079
<font color="#E5E5E5">list but it's not portable</font><font color="#CCCCCC"> because open</font>

205
00:11:39,930 --> 00:11:45,930
is not<font color="#E5E5E5"> available on some architectures</font>

206
00:11:42,080 --> 00:11:48,900
so how can write a portable<font color="#CCCCCC"> straigh</font>

207
00:11:45,930 --> 00:11:53,339
script<font color="#E5E5E5"> you can use a regular</font><font color="#CCCCCC"> expression</font>

208
00:11:48,900 --> 00:11:55,890
<font color="#CCCCCC">or you can use the condition so there</font>

209
00:11:53,340 --> 00:11:57,720
<font color="#E5E5E5">are two examples</font><font color="#CCCCCC"> which one</font><font color="#E5E5E5"> is easy to</font>

210
00:11:55,890 --> 00:12:01,350
read<font color="#E5E5E5"> do you thing a regular</font><font color="#CCCCCC"> expression</font>

211
00:11:57,720 --> 00:12:04,290
or condition I think<font color="#CCCCCC"> addition that's why</font>

212
00:12:01,350 --> 00:12:06,300
we added condition this<font color="#E5E5E5"> piped with</font><font color="#CCCCCC"> the</font>

213
00:12:04,290 --> 00:12:08,699
regular expressions you can<font color="#E5E5E5"> describe the</font>

214
00:12:06,300 --> 00:12:12,949
<font color="#CCCCCC">same thing but it's usually looks more</font>

215
00:12:08,700 --> 00:12:12,950
complex yes

216
00:12:12,980 --> 00:12:21,260
so it's it it says<font color="#CCCCCC"> that this is called</font>

217
00:12:18,160 --> 00:12:24,699
specification<font color="#E5E5E5"> it doesn't happen to match</font>

218
00:12:21,260 --> 00:12:25,939
any real system<font color="#E5E5E5"> call so you can write</font>

219
00:12:24,700 --> 00:12:28,880
fubar

220
00:12:25,940 --> 00:12:30,320
and it will<font color="#E5E5E5"> States</font><font color="#CCCCCC"> will not</font><font color="#E5E5E5"> trace any</font>

221
00:12:28,880 --> 00:12:39,980
football because there is no<font color="#CCCCCC"> four bars</font>

222
00:12:30,320 --> 00:12:41,720
<font color="#E5E5E5">is</font><font color="#CCCCCC"> called if you just type a Cisco or a</font>

223
00:12:39,980 --> 00:12:44,090
<font color="#CCCCCC">ghost version that doesn't</font><font color="#E5E5E5"> match any</font>

224
00:12:41,720 --> 00:12:52,750
<font color="#E5E5E5">Cisco a stress will not run it will</font>

225
00:12:44,090 --> 00:12:52,750
issue an error<font color="#CCCCCC"> as you can see yes sorry</font>

226
00:12:55,060 --> 00:13:03,849
why not make a<font color="#E5E5E5"> condition the default</font>

227
00:12:59,300 --> 00:13:07,150
<font color="#E5E5E5">behavior was the</font><font color="#CCCCCC"> question first of</font><font color="#E5E5E5"> all</font>

228
00:13:03,850 --> 00:13:14,330
you won't detect any accidental<font color="#E5E5E5"> errors</font>

229
00:13:07,150 --> 00:13:17,689
people<font color="#CCCCCC"> do errors sometimes it would be a</font>

230
00:13:14,330 --> 00:13:20,720
change of behavior<font color="#E5E5E5"> and for the project</font>

231
00:13:17,690 --> 00:13:24,440
of 26<font color="#E5E5E5"> or 27 year old it's not a good</font>

232
00:13:20,720 --> 00:13:27,140
<font color="#E5E5E5">idea actually to change behavior</font><font color="#CCCCCC"> in a</font>

233
00:13:24,440 --> 00:13:31,610
decorative<font color="#E5E5E5"> incompatible way for not I'm</font>

234
00:13:27,140 --> 00:13:35,020
not<font color="#CCCCCC"> really good reason ok the last topic</font>

235
00:13:31,610 --> 00:13:38,210
is advanced<font color="#E5E5E5"> Cisco filters new syntax</font>

236
00:13:35,020 --> 00:13:39,920
<font color="#CCCCCC">this</font><font color="#E5E5E5"> was implemented also as a part of</font>

237
00:13:38,210 --> 00:13:42,440
google Summer of Code project last year

238
00:13:39,920 --> 00:13:48,229
<font color="#E5E5E5">and it allows even more flexible</font>

239
00:13:42,440 --> 00:13:51,730
specification of Cisco's<font color="#E5E5E5"> for example you</font>

240
00:13:48,230 --> 00:13:55,280
can<font color="#CCCCCC"> chase by</font><font color="#E5E5E5"> file description number</font>

241
00:13:51,730 --> 00:13:58,370
<font color="#E5E5E5">without traditional</font><font color="#CCCCCC"> syntax you can just</font>

242
00:13:55,280 --> 00:14:00,860
either<font color="#E5E5E5"> trace by specification as you can</font>

243
00:13:58,370 --> 00:14:03,650
see<font color="#E5E5E5"> you could</font><font color="#CCCCCC"> see before</font><font color="#E5E5E5"> or you can done</font>

244
00:14:00,860 --> 00:14:05,980
by<font color="#CCCCCC"> description number now</font><font color="#E5E5E5"> you can</font>

245
00:14:03,650 --> 00:14:09,290
combine<font color="#E5E5E5"> all these</font><font color="#CCCCCC"> things you can combine</font>

246
00:14:05,980 --> 00:14:11,840
<font color="#CCCCCC">sections default astray is Trace you</font>

247
00:14:09,290 --> 00:14:15,770
don't have to specify it<font color="#E5E5E5"> it's written</font>

248
00:14:11,840 --> 00:14:17,810
<font color="#E5E5E5">here trace but you can omit it as you</font>

249
00:14:15,770 --> 00:14:22,400
can<font color="#E5E5E5"> see on following slides you can also</font>

250
00:14:17,810 --> 00:14:24,829
combine different kinds of things<font color="#E5E5E5"> like</font>

251
00:14:22,400 --> 00:14:25,990
you can as<font color="#E5E5E5"> you consume this</font><font color="#CCCCCC"> example you</font>

252
00:14:24,830 --> 00:14:29,140
<font color="#E5E5E5">can trace</font>

253
00:14:25,990 --> 00:14:32,140
reduce coal and<font color="#E5E5E5"> dump on the walls sits</font>

254
00:14:29,140 --> 00:14:36,220
coal that access a<font color="#E5E5E5"> specific file</font><font color="#CCCCCC"> this</font>

255
00:14:32,140 --> 00:14:40,000
<font color="#CCCCCC">way</font><font color="#E5E5E5"> you will see that in slightly a</font>

256
00:14:36,220 --> 00:14:45,160
typical example you can see<font color="#E5E5E5"> that some</font>

257
00:14:40,000 --> 00:14:47,320
program accesses different things but we

258
00:14:45,160 --> 00:14:50,199
<font color="#CCCCCC">dump on the loss of them but</font><font color="#E5E5E5"> actually</font>

259
00:14:47,320 --> 00:14:52,240
interesting<font color="#E5E5E5"> why dumping the zero could</font>

260
00:14:50,200 --> 00:14:56,380
be interesting<font color="#E5E5E5"> living well I've seen</font>

261
00:14:52,240 --> 00:14:58,870
once it was not<font color="#E5E5E5"> a device but a file in</font>

262
00:14:56,380 --> 00:15:02,050
real<font color="#E5E5E5"> life it was not a good idea to</font>

263
00:14:58,870 --> 00:15:05,170
replace a zero with<font color="#CCCCCC"> the file I think</font>

264
00:15:02,050 --> 00:15:08,189
somebody just with a suppressor

265
00:15:05,170 --> 00:15:12,399
privileges or directed output there and

266
00:15:08,190 --> 00:15:17,230
some did something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this stupid</font>

267
00:15:12,399 --> 00:15:20,740
<font color="#E5E5E5">thing and well you can use logical</font>

268
00:15:17,230 --> 00:15:25,800
expressions like and not brackets this

269
00:15:20,740 --> 00:15:29,620
way<font color="#E5E5E5"> you can do very flexible filtering</font>

270
00:15:25,800 --> 00:15:34,660
as you can see you can select<font color="#E5E5E5"> only those</font>

271
00:15:29,620 --> 00:15:37,810
<font color="#CCCCCC">Cisco's that work with files</font><font color="#E5E5E5"> but doesn't</font>

272
00:15:34,660 --> 00:15:39,760
take<font color="#CCCCCC"> descriptions as arguments or and</font>

273
00:15:37,810 --> 00:15:43,359
doesn't return<font color="#E5E5E5"> descriptions is written</font>

274
00:15:39,760 --> 00:15:46,000
within<font color="#CCCCCC"> a</font><font color="#E5E5E5"> return value or you can all</font>

275
00:15:43,360 --> 00:15:48,850
kinds of combinations<font color="#CCCCCC"> illogical</font>

276
00:15:46,000 --> 00:15:52,060
expressions as you consume these

277
00:15:48,850 --> 00:15:59,160
examples in the first example<font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't</font>

278
00:15:52,060 --> 00:15:59,160
see anything<font color="#CCCCCC"> just</font>

279
00:15:59,250 --> 00:16:04,200
as you could<font color="#CCCCCC"> expect cut walks with a</font>

280
00:16:02,430 --> 00:16:06,270
file it<font color="#E5E5E5"> opens</font><font color="#CCCCCC"> it it does</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> with</font>

281
00:16:04,200 --> 00:16:12,360
<font color="#CCCCCC">it but you don't</font><font color="#E5E5E5"> see all these</font><font color="#CCCCCC"> sis calls</font>

282
00:16:06,270 --> 00:16:15,140
on the doors<font color="#CCCCCC"> that are specified this</font><font color="#E5E5E5"> is</font>

283
00:16:12,360 --> 00:16:22,920
another example<font color="#E5E5E5"> of that kind of</font>

284
00:16:15,140 --> 00:16:24,920
combination<font color="#E5E5E5"> you can use like they</font>

285
00:16:22,920 --> 00:16:28,709
probably see you you couldn't specify

286
00:16:24,920 --> 00:16:29,250
what kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> Cisco's you want to stack</font>

287
00:16:28,710 --> 00:16:32,070
trace

288
00:16:29,250 --> 00:16:34,470
so all these<font color="#E5E5E5"> calls in traditional</font>

289
00:16:32,070 --> 00:16:37,110
<font color="#E5E5E5">syndics all cisco selected filtration</font>

290
00:16:34,470 --> 00:16:39,960
<font color="#E5E5E5">would be</font><font color="#CCCCCC"> sector east if you</font><font color="#E5E5E5"> request it</font>

291
00:16:37,110 --> 00:16:43,860
<font color="#E5E5E5">now you can select which of those Cisco</font>

292
00:16:39,960 --> 00:16:47,250
SATA trace it<font color="#CCCCCC"> actually stack traced so</font>

293
00:16:43,860 --> 00:16:49,260
you can see this<font color="#CCCCCC"> program accesses</font>

294
00:16:47,250 --> 00:16:51,540
description number one but we're

295
00:16:49,260 --> 00:16:54,030
interesting<font color="#E5E5E5"> we're interested only in</font>

296
00:16:51,540 --> 00:16:59,430
<font color="#E5E5E5">doors close is called to have a look</font>

297
00:16:54,030 --> 00:17:00,720
<font color="#CCCCCC">rate</font><font color="#E5E5E5"> goes from</font><font color="#CCCCCC"> as you can see it's it's</font>

298
00:16:59,430 --> 00:17:04,020
from exit hunter

299
00:17:00,720 --> 00:17:08,310
so what cut probably<font color="#CCCCCC"> does</font><font color="#E5E5E5"> it installs an</font>

300
00:17:04,020 --> 00:17:11,310
exit<font color="#CCCCCC"> angle that closes</font><font color="#E5E5E5"> standard output</font>

301
00:17:08,310 --> 00:17:14,909
and it's actually what's happening as

302
00:17:11,310 --> 00:17:21,800
<font color="#E5E5E5">you can see in this example so that's</font>

303
00:17:14,910 --> 00:17:21,800
most<font color="#E5E5E5"> more less old</font><font color="#CCCCCC"> this</font>

304
00:17:22,030 --> 00:17:37,860
who's this<font color="#E5E5E5"> living this is a mascot Oh</font>

305
00:17:28,860 --> 00:17:37,860
<font color="#E5E5E5">stress up to last year had no</font><font color="#CCCCCC"> mask so</font>

306
00:17:38,830 --> 00:17:49,770
we're very<font color="#CCCCCC"> happy but</font><font color="#E5E5E5"> we have one meet</font>

307
00:17:44,260 --> 00:17:49,770
<font color="#E5E5E5">our new mascot if you have any questions</font>

308
00:17:57,100 --> 00:18:00,459
gasp is

309
00:18:05,630 --> 00:18:11,270
so the question was why one might want

310
00:18:09,110 --> 00:18:17,620
<font color="#E5E5E5">to filter something in a stress hurdle</font>

311
00:18:11,270 --> 00:18:20,470
then<font color="#CCCCCC"> parse</font><font color="#E5E5E5"> a straight output right well</font>

312
00:18:17,620 --> 00:18:25,010
tracing<font color="#E5E5E5"> makes things slow</font>

313
00:18:20,470 --> 00:18:29,020
if you don't need something<font color="#E5E5E5"> then you</font>

314
00:18:25,010 --> 00:18:33,080
don't<font color="#E5E5E5"> chase it you don't pass always</font>

315
00:18:29,020 --> 00:18:35,740
<font color="#CCCCCC">imagine how many</font><font color="#E5E5E5"> she's</font><font color="#CCCCCC"> hole see you you</font>

316
00:18:33,080 --> 00:18:38,720
<font color="#E5E5E5">have to issue to fetch all this memory</font>

317
00:18:35,740 --> 00:18:45,010
from Tracy<font color="#CCCCCC"> if you don't need this</font>

318
00:18:38,720 --> 00:18:45,010
you just don't that's<font color="#E5E5E5"> right</font>

319
00:18:46,330 --> 00:18:49,110
yes please

320
00:18:51,670 --> 00:19:04,600
yes it's not really<font color="#CCCCCC"> neat link tracing</font>

321
00:18:59,350 --> 00:19:07,629
its its advanced parsing<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the traffic</font>

322
00:19:04,600 --> 00:19:11,860
that<font color="#CCCCCC"> goes because</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> default if its</font>

323
00:19:07,630 --> 00:19:15,490
treated<font color="#CCCCCC"> as a string</font><font color="#E5E5E5"> it means nothing or</font>

324
00:19:11,860 --> 00:19:17,409
almost<font color="#E5E5E5"> nothing it's a</font><font color="#CCCCCC"> parsing</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> not</font>

325
00:19:15,490 --> 00:19:21,700
additional tracing capability<font color="#CCCCCC"> it's</font>

326
00:19:17,410 --> 00:19:23,940
additional parsing of things so this is

327
00:19:21,700 --> 00:19:26,320
calls are the same

328
00:19:23,940 --> 00:19:40,240
<font color="#CCCCCC">it could</font><font color="#E5E5E5"> be any kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Cisco it could</font>

329
00:19:26,320 --> 00:19:43,330
be just read right yes please for<font color="#CCCCCC"> genus</font>

330
00:19:40,240 --> 00:19:46,510
protocols<font color="#CCCCCC"> and I'm not sure because it's</font>

331
00:19:43,330 --> 00:19:48,879
not<font color="#E5E5E5"> something you can distinguish from a</font>

332
00:19:46,510 --> 00:20:08,140
circuit<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> once the circuit is</font>

333
00:19:48,880 --> 00:20:13,620
a<font color="#E5E5E5"> knitting circuit you</font><font color="#CCCCCC"> can would make</font>

334
00:20:08,140 --> 00:20:16,680
<font color="#E5E5E5">sense to some kind of plug-in system to</font>

335
00:20:13,620 --> 00:20:20,050
so one would someone would just

336
00:20:16,680 --> 00:20:23,760
implement a parser for this chunk of

337
00:20:20,050 --> 00:20:34,870
memory<font color="#CCCCCC"> the</font><font color="#E5E5E5"> state should fetch it and</font>

338
00:20:23,760 --> 00:20:37,330
give to plug<font color="#E5E5E5"> into from tracing something</font>

339
00:20:34,870 --> 00:20:41,219
<font color="#E5E5E5">at the port that destination that system</font>

340
00:20:37,330 --> 00:20:41,220
<font color="#CCCCCC">for</font><font color="#E5E5E5"> something use this</font><font color="#CCCCCC"> plug-in for</font>

341
00:20:50,030 --> 00:21:01,020
it's no<font color="#CCCCCC"> genie</font>

342
00:20:52,280 --> 00:21:05,178
<font color="#CCCCCC">it's what's going on the network before</font>

343
00:21:01,020 --> 00:21:05,179
your<font color="#CCCCCC"> make for</font><font color="#E5E5E5"> example a</font><font color="#CCCCCC"> few things</font>

344
00:21:10,820 --> 00:21:34,379
yes this also<font color="#E5E5E5"> could make sense yeah just</font>

345
00:21:27,650 --> 00:21:37,380
oh you're asking<font color="#E5E5E5"> forgiveness yeah this</font>

346
00:21:34,380 --> 00:21:40,230
makes things not to<font color="#E5E5E5"> replicate all this</font>

347
00:21:37,380 --> 00:21:43,770
work making Wireshark and speed<font color="#E5E5E5"> amp and</font>

348
00:21:40,230 --> 00:21:46,130
what<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> else yep any more</font>

349
00:21:43,770 --> 00:21:46,129
questions

350
00:21:49,160 --> 00:21:59,690
we can choose something for a name<font color="#E5E5E5"> yes I</font>

351
00:21:54,630 --> 00:21:59,690
<font color="#CCCCCC">think it's it's charged</font><font color="#E5E5E5"> yes</font>

352
00:22:01,940 --> 00:22:11,110
<font color="#E5E5E5">he's nice isn't it any more questions</font>

353
00:22:07,670 --> 00:22:21,380
<font color="#CCCCCC">no</font><font color="#E5E5E5"> then thank you</font>

354
00:22:11,110 --> 00:22:21,379
[Applause]

