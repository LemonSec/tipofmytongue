1
00:00:04,810 --> 00:00:10,559
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> sorry for that</font>

2
00:00:07,350 --> 00:00:12,600
delay technical problems<font color="#CCCCCC"> you know tech</font>

3
00:00:10,559 --> 00:00:15,329
<font color="#E5E5E5">conference who would believe it so</font>

4
00:00:12,600 --> 00:00:18,060
without<font color="#E5E5E5"> further ado we now have</font><font color="#CCCCCC"> Stefan</font>

5
00:00:15,330 --> 00:00:21,180
Faneca would talk to<font color="#CCCCCC"> us about enabling</font>

6
00:00:18,060 --> 00:00:23,330
real-time computing in OpenStack<font color="#E5E5E5"> thank</font>

7
00:00:21,180 --> 00:00:23,330
you

8
00:00:24,140 --> 00:00:29,360
so yeah talking<font color="#CCCCCC"> about a presentation and</font>

9
00:00:27,690 --> 00:00:33,719
when I do running<font color="#E5E5E5"> on time so I'm</font><font color="#CCCCCC"> gonna</font>

10
00:00:29,360 --> 00:00:35,160
<font color="#E5E5E5">speak</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this a little bit stop me if I</font>

11
00:00:33,719 --> 00:00:36,480
happens that there's a laser<font color="#CCCCCC"> point</font><font color="#E5E5E5"> at</font>

12
00:00:35,160 --> 00:00:38,129
<font color="#E5E5E5">the end of</font><font color="#CCCCCC"> this source at me if I happen</font>

13
00:00:36,480 --> 00:00:43,968
to point the laser somebody's eyes by

14
00:00:38,129 --> 00:00:47,218
mistake<font color="#E5E5E5"> so a little bit</font><font color="#CCCCCC"> of background</font>

15
00:00:43,969 --> 00:00:48,600
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is a pretty broad presentation that</font>

16
00:00:47,219 --> 00:00:49,800
covers a good few<font color="#CCCCCC"> technologies so I'm</font>

17
00:00:48,600 --> 00:00:51,629
going to<font color="#E5E5E5"> give a quick run-through of</font>

18
00:00:49,800 --> 00:00:53,879
some of the technologies I'm going to be

19
00:00:51,629 --> 00:00:56,178
talking<font color="#CCCCCC"> about here first</font><font color="#E5E5E5"> and then I'll</font>

20
00:00:53,879 --> 00:00:58,409
<font color="#E5E5E5">move into like a deeper dive are there</font>

21
00:00:56,179 --> 00:01:02,489
dysfunctionality how this is implemented

22
00:00:58,409 --> 00:01:03,539
and how<font color="#E5E5E5"> it works</font><font color="#CCCCCC"> so in case you haven't</font>

23
00:01:02,489 --> 00:01:08,700
heard<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it</font>

24
00:01:03,539 --> 00:01:12,479
OpenStack<font color="#E5E5E5"> is a big deal it's an open</font>

25
00:01:08,700 --> 00:01:14,430
<font color="#E5E5E5">source cloud computing system made up of</font>

26
00:01:12,479 --> 00:01:16,170
a load of little project<font color="#E5E5E5"> a load of</font>

27
00:01:14,430 --> 00:01:18,030
individual projects<font color="#E5E5E5"> that focus</font><font color="#CCCCCC"> on</font>

28
00:01:16,170 --> 00:01:20,880
<font color="#E5E5E5">various aspects of a functioning cloud</font>

29
00:01:18,030 --> 00:01:22,859
so<font color="#E5E5E5"> you have services for for networking</font>

30
00:01:20,880 --> 00:01:25,548
<font color="#E5E5E5">you have services for compute you have</font>

31
00:01:22,859 --> 00:01:27,809
services<font color="#CCCCCC"> to</font><font color="#E5E5E5"> block storage and so forth</font>

32
00:01:25,549 --> 00:01:30,060
the thing I'm going to<font color="#E5E5E5"> be talking</font><font color="#CCCCCC"> about</font>

33
00:01:27,810 --> 00:01:34,350
<font color="#E5E5E5">here today is Nova which is the compute</font>

34
00:01:30,060 --> 00:01:36,570
service<font color="#CCCCCC"> I'm an</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> sec Nova core</font>

35
00:01:34,350 --> 00:01:41,189
developer<font color="#CCCCCC"> basically one of the</font>

36
00:01:36,570 --> 00:01:42,449
maintainer<font color="#CCCCCC"> and</font><font color="#E5E5E5"> most of my</font><font color="#CCCCCC"> focus on</font>

37
00:01:41,189 --> 00:01:46,889
OpenStack

38
00:01:42,450 --> 00:01:52,200
Nova is on enabling<font color="#CCCCCC"> nfe functionality so</font>

39
00:01:46,890 --> 00:01:54,359
high performance compute huge pages<font color="#CCCCCC"> CPU</font>

40
00:01:52,200 --> 00:02:01,200
pinning<font color="#E5E5E5"> deck editing which I'm going to</font>

41
00:01:54,359 --> 00:02:03,719
go into<font color="#E5E5E5"> here OpenStack from a high level</font>

42
00:02:01,200 --> 00:02:06,149
perspective it tries<font color="#CCCCCC"> to be as much of a</font>

43
00:02:03,719 --> 00:02:08,008
cloud as possible so<font color="#E5E5E5"> you should</font>

44
00:02:06,149 --> 00:02:09,990
realistically never have to<font color="#E5E5E5"> know</font>

45
00:02:08,008 --> 00:02:12,059
anything<font color="#E5E5E5"> about the underlying</font><font color="#CCCCCC"> hardware</font>

46
00:02:09,990 --> 00:02:13,740
capabilities of the cloud<font color="#E5E5E5"> that you're</font>

47
00:02:12,060 --> 00:02:15,360
running<font color="#E5E5E5"> on you were able to create</font>

48
00:02:13,740 --> 00:02:17,670
servers you're able to<font color="#E5E5E5"> create</font><font color="#CCCCCC"> networks</font>

49
00:02:15,360 --> 00:02:20,660
<font color="#E5E5E5">images attached</font><font color="#CCCCCC"> shape things together</font>

50
00:02:17,670 --> 00:02:24,470
it's all nice<font color="#CCCCCC"> and kind of like</font><font color="#E5E5E5"> abstract</font>

51
00:02:20,660 --> 00:02:27,470
in cloudy<font color="#CCCCCC"> and that's that's what 90% of</font>

52
00:02:24,470 --> 00:02:29,359
<font color="#CCCCCC">people</font><font color="#E5E5E5"> are looking for but the problem</font>

53
00:02:27,470 --> 00:02:31,220
with this kind<font color="#E5E5E5"> of cloud abstractions in</font>

54
00:02:29,360 --> 00:02:33,470
there is when<font color="#E5E5E5"> you talk</font><font color="#CCCCCC"> you get down into</font>

55
00:02:31,220 --> 00:02:37,609
the<font color="#E5E5E5"> nitty-gritty of the the kind of</font>

56
00:02:33,470 --> 00:02:40,010
features that telco users or scientific

57
00:02:37,610 --> 00:02:42,770
users are looking<font color="#E5E5E5"> for those cloud</font>

58
00:02:40,010 --> 00:02:45,950
abstractions tend to hamper your your

59
00:02:42,770 --> 00:02:47,540
performance<font color="#CCCCCC"> and that's not something</font>

60
00:02:45,950 --> 00:02:52,220
<font color="#CCCCCC">that you want the basically</font><font color="#E5E5E5"> means opus</font>

61
00:02:47,540 --> 00:02:56,359
<font color="#E5E5E5">tech isn't useful for your use cases so</font>

62
00:02:52,220 --> 00:02:58,580
we've been<font color="#E5E5E5"> working on kind of fixing a</font>

63
00:02:56,360 --> 00:03:01,760
few of these issues for<font color="#CCCCCC"> itay since</font>

64
00:02:58,580 --> 00:03:04,190
before<font color="#E5E5E5"> the juno release which was three</font>

65
00:03:01,760 --> 00:03:06,500
or four<font color="#CCCCCC"> years</font><font color="#E5E5E5"> ago so we've implemented a</font>

66
00:03:04,190 --> 00:03:08,540
couple<font color="#E5E5E5"> of a couple</font><font color="#CCCCCC"> of features</font><font color="#E5E5E5"> during</font>

67
00:03:06,500 --> 00:03:10,370
that time to kind<font color="#CCCCCC"> of close</font><font color="#E5E5E5"> this</font>

68
00:03:08,540 --> 00:03:14,570
performance gap with like normal bare

69
00:03:10,370 --> 00:03:17,000
metal<font color="#E5E5E5"> so things like allowing you to</font>

70
00:03:14,570 --> 00:03:19,970
attach<font color="#CCCCCC"> SR iõve devices to instances</font>

71
00:03:17,000 --> 00:03:25,190
allowing you to pin the CPUs of your

72
00:03:19,970 --> 00:03:27,680
instances to<font color="#E5E5E5"> hosts cause huge pages like</font>

73
00:03:25,190 --> 00:03:30,140
representing your<font color="#E5E5E5"> hop or your guests</font>

74
00:03:27,680 --> 00:03:33,530
apology like<font color="#CCCCCC"> an Ummah away of fashion</font>

75
00:03:30,140 --> 00:03:36,619
and then the last two releases we've

76
00:03:33,530 --> 00:03:38,240
worked on<font color="#CCCCCC"> two particular features one of</font>

77
00:03:36,620 --> 00:03:39,800
which I'm going to talk<font color="#E5E5E5"> today the</font>

78
00:03:38,240 --> 00:03:40,940
real-time<font color="#CCCCCC"> policy and then another one</font>

79
00:03:39,800 --> 00:03:47,440
which I'm not<font color="#E5E5E5"> really going to focus on</font>

80
00:03:40,940 --> 00:03:50,359
which is<font color="#CCCCCC"> emulator</font><font color="#E5E5E5"> phase policy so for</font>

81
00:03:47,440 --> 00:03:52,790
anyone that isn't aware what real-time

82
00:03:50,360 --> 00:03:55,489
is real-time means that<font color="#CCCCCC"> you're if you</font>

83
00:03:52,790 --> 00:03:58,730
have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> real-time</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> and you're</font>

84
00:03:55,489 --> 00:04:02,000
<font color="#E5E5E5">you're guaranteed that that</font><font color="#CCCCCC"> will meet</font>

85
00:03:58,730 --> 00:04:03,590
<font color="#E5E5E5">certain timing constraints so if you're</font>

86
00:04:02,000 --> 00:04:06,230
<font color="#E5E5E5">delivering messages of a network that</font>

87
00:04:03,590 --> 00:04:07,670
<font color="#CCCCCC">those messages</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be delivered at a</font>

88
00:04:06,230 --> 00:04:09,890
certain<font color="#E5E5E5"> amount of time something will</font>

89
00:04:07,670 --> 00:04:11,420
happen<font color="#E5E5E5"> like on a given repetition it</font>

90
00:04:09,890 --> 00:04:13,730
doesn't mean that it's fast or<font color="#E5E5E5"> anything</font>

91
00:04:11,420 --> 00:04:16,760
it just<font color="#E5E5E5"> means that it's</font><font color="#CCCCCC"> consistent</font><font color="#E5E5E5"> and</font>

92
00:04:13,730 --> 00:04:18,349
<font color="#E5E5E5">this is important from again the telco</font>

93
00:04:16,760 --> 00:04:21,620
perspective because<font color="#E5E5E5"> if you're</font><font color="#CCCCCC"> talking</font>

94
00:04:18,350 --> 00:04:22,700
about<font color="#E5E5E5"> sending voice packets or something</font>

95
00:04:21,620 --> 00:04:23,780
<font color="#CCCCCC">of</font><font color="#E5E5E5"> your network you need to make sure</font>

96
00:04:22,700 --> 00:04:27,169
<font color="#CCCCCC">that they actually</font><font color="#E5E5E5"> get where they're</font>

97
00:04:23,780 --> 00:04:28,849
supposed to be<font color="#E5E5E5"> getting so there's a</font>

98
00:04:27,169 --> 00:04:30,890
couple<font color="#E5E5E5"> of prerequisites for what I'm</font>

99
00:04:28,850 --> 00:04:32,840
going to<font color="#E5E5E5"> be talking about here the first</font>

100
00:04:30,890 --> 00:04:33,310
of these is<font color="#E5E5E5"> that you you need suitable</font>

101
00:04:32,840 --> 00:04:36,849
<font color="#CCCCCC">hardware</font>

102
00:04:33,310 --> 00:04:39,670
this is a bit of a there's a bit<font color="#CCCCCC"> of a</font>

103
00:04:36,850 --> 00:04:42,370
tricky area because if you go<font color="#CCCCCC"> on</font><font color="#E5E5E5"> to like</font>

104
00:04:39,670 --> 00:04:43,870
the<font color="#CCCCCC"> real-time</font><font color="#E5E5E5"> Linux kernel wiki's and</font>

105
00:04:42,370 --> 00:04:46,000
stuff their<font color="#E5E5E5"> list hardware and they'll</font>

106
00:04:43,870 --> 00:04:48,040
say well<font color="#E5E5E5"> we</font><font color="#CCCCCC"> tested on this hardware</font><font color="#E5E5E5"> and</font>

107
00:04:46,000 --> 00:04:49,990
<font color="#E5E5E5">the performers wasn't that great and it</font>

108
00:04:48,040 --> 00:04:52,240
was better<font color="#CCCCCC"> on this particular chip than</font>

109
00:04:49,990 --> 00:04:54,220
this chip<font color="#CCCCCC"> and they very rarely give a</font>

110
00:04:52,240 --> 00:04:55,540
reason<font color="#E5E5E5"> for why it's better there's just</font>

111
00:04:54,220 --> 00:04:58,360
<font color="#E5E5E5">something in the</font><font color="#CCCCCC"> under side underlying</font>

112
00:04:55,540 --> 00:05:02,620
architecture those chips<font color="#CCCCCC"> that makes</font><font color="#E5E5E5"> it</font>

113
00:04:58,360 --> 00:05:04,000
<font color="#E5E5E5">better for real-time newspapers all the</font>

114
00:05:02,620 --> 00:05:07,000
testing that ended<font color="#E5E5E5"> up here was on a</font>

115
00:05:04,000 --> 00:05:08,830
standard like<font color="#CCCCCC"> Intel</font><font color="#E5E5E5"> Xeon base Michael</font>

116
00:05:07,000 --> 00:05:11,320
Michael semi server or<font color="#E5E5E5"> something</font>

117
00:05:08,830 --> 00:05:12,969
no go obviously you're going to<font color="#CCCCCC"> need</font>

118
00:05:11,320 --> 00:05:15,400
OpenStack<font color="#E5E5E5"> Pike or newer because</font><font color="#CCCCCC"> as</font>

119
00:05:12,970 --> 00:05:18,760
<font color="#E5E5E5">mentioned before this functionality</font>

120
00:05:15,400 --> 00:05:20,919
wasn't available<font color="#E5E5E5"> before</font><font color="#CCCCCC"> pike you're</font>

121
00:05:18,760 --> 00:05:23,830
going to need a recent enough<font color="#E5E5E5"> version</font><font color="#CCCCCC"> a</font>

122
00:05:20,920 --> 00:05:27,640
live<font color="#CCCCCC"> firt</font><font color="#E5E5E5"> because this all hooks down</font>

123
00:05:23,830 --> 00:05:29,080
into liver<font color="#CCCCCC"> deep down</font><font color="#E5E5E5"> and then you're</font>

124
00:05:27,640 --> 00:05:32,500
<font color="#E5E5E5">going to need a kernel that has the</font>

125
00:05:29,080 --> 00:05:34,630
<font color="#CCCCCC">real-time preempt patches applied so</font>

126
00:05:32,500 --> 00:05:36,130
send to us packages this you can get

127
00:05:34,630 --> 00:05:38,920
<font color="#CCCCCC">rail versions to</font><font color="#E5E5E5"> this I don't know about</font>

128
00:05:36,130 --> 00:05:41,080
<font color="#CCCCCC">it going</font><font color="#E5E5E5"> to but I did all my testing for</font>

129
00:05:38,920 --> 00:05:46,540
<font color="#E5E5E5">this on the sensor server</font><font color="#CCCCCC"> got for this</font>

130
00:05:41,080 --> 00:05:49,780
job from<font color="#E5E5E5"> the whole configuration of the</font>

131
00:05:46,540 --> 00:05:50,590
<font color="#E5E5E5">hardware level when</font><font color="#CCCCCC"> you're benchmarking</font>

132
00:05:49,780 --> 00:05:53,409
<font color="#CCCCCC">a system</font>

133
00:05:50,590 --> 00:05:55,840
these<font color="#E5E5E5"> seem kind of things come up</font><font color="#CCCCCC"> you</font>

134
00:05:53,410 --> 00:05:58,780
want<font color="#E5E5E5"> to disable kind of like fancy</font>

135
00:05:55,840 --> 00:06:00,460
features<font color="#E5E5E5"> of power management things like</font>

136
00:05:58,780 --> 00:06:02,830
turbo boost<font color="#E5E5E5"> and that you want</font><font color="#CCCCCC"> Europe</font>

137
00:06:00,460 --> 00:06:03,969
<font color="#E5E5E5">you're you don't want any magic going on</font>

138
00:06:02,830 --> 00:06:05,830
<font color="#E5E5E5">in your hardware you don't want it</font>

139
00:06:03,970 --> 00:06:08,080
faster<font color="#E5E5E5"> than the CPU because it decided</font>

140
00:06:05,830 --> 00:06:09,609
<font color="#E5E5E5">that</font><font color="#CCCCCC"> oh you</font><font color="#E5E5E5"> know you were going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> save</font>

141
00:06:08,080 --> 00:06:11,320
you a little<font color="#E5E5E5"> bit of power you want it</font>

142
00:06:09,610 --> 00:06:13,060
one in a hundred<font color="#E5E5E5"> percent a hundred</font>

143
00:06:11,320 --> 00:06:15,520
percent of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> time</font>

144
00:06:13,060 --> 00:06:18,370
so basically<font color="#CCCCCC"> disable</font><font color="#E5E5E5"> hyper</font><font color="#CCCCCC"> varying power</font>

145
00:06:15,520 --> 00:06:20,289
management turbo we've set canopy and

146
00:06:18,370 --> 00:06:22,170
then from the software<font color="#E5E5E5"> perspective the</font>

147
00:06:20,290 --> 00:06:27,610
<font color="#CCCCCC">real-time kernel that</font><font color="#E5E5E5"> I mentioned before</font>

148
00:06:22,170 --> 00:06:29,830
<font color="#E5E5E5">the real-time</font><font color="#CCCCCC"> KVM module and there's a</font>

149
00:06:27,610 --> 00:06:32,170
<font color="#E5E5E5">utility called change we should</font>

150
00:06:29,830 --> 00:06:35,020
<font color="#E5E5E5">configure like your grub</font><font color="#CCCCCC"> kernel boot</font>

151
00:06:32,170 --> 00:06:38,350
parameters for you<font color="#CCCCCC"> tuned</font><font color="#E5E5E5"> comes with</font>

152
00:06:35,020 --> 00:06:39,469
profiles for for<font color="#E5E5E5"> real time that you can</font>

153
00:06:38,350 --> 00:06:41,810
you sort through

154
00:06:39,470 --> 00:06:44,030
positive and that<font color="#E5E5E5"> just passed through</font>

155
00:06:41,810 --> 00:06:49,100
<font color="#E5E5E5">those kind</font><font color="#CCCCCC"> of leap time</font><font color="#E5E5E5"> that we've</font>

156
00:06:44,030 --> 00:06:52,150
parameters so instead of the<font color="#E5E5E5"> kernels</font>

157
00:06:49,100 --> 00:06:54,950
<font color="#CCCCCC">instead of installing</font><font color="#E5E5E5"> the tune profiles</font>

158
00:06:52,150 --> 00:07:00,489
<font color="#CCCCCC">configuring those team profiles</font><font color="#E5E5E5"> enabling</font>

159
00:06:54,950 --> 00:07:00,490
huge<font color="#CCCCCC"> pages and then this last option</font>

160
00:07:00,610 --> 00:07:09,890
this last option is an over specific

161
00:07:05,480 --> 00:07:11,870
<font color="#E5E5E5">thing which lets you determine what</font>

162
00:07:09,890 --> 00:07:14,000
<font color="#E5E5E5">caused on your system Nova is allowed to</font>

163
00:07:11,870 --> 00:07:17,060
<font color="#E5E5E5">touch when you're talking about</font>

164
00:07:14,000 --> 00:07:19,910
<font color="#CCCCCC">real-time</font><font color="#E5E5E5"> Linux you should</font><font color="#CCCCCC"> usually leave</font>

165
00:07:17,060 --> 00:07:23,720
a<font color="#E5E5E5"> couple of cause for non</font><font color="#CCCCCC"> preemptable</font>

166
00:07:19,910 --> 00:07:25,520
processes<font color="#E5E5E5"> so the the preamp patches make</font>

167
00:07:23,720 --> 00:07:28,310
most things in the Linux kernel<font color="#CCCCCC"> clean</font>

168
00:07:25,520 --> 00:07:29,930
<font color="#E5E5E5">suburban</font><font color="#CCCCCC"> about everything so the the</font>

169
00:07:28,310 --> 00:07:31,820
general<font color="#E5E5E5"> best practice is to get leave a</font>

170
00:07:29,930 --> 00:07:35,660
couple<font color="#E5E5E5"> of cause</font><font color="#CCCCCC"> that the scheduler can</font>

171
00:07:31,820 --> 00:07:37,250
keep for itself<font color="#CCCCCC"> so yeah basically</font>

172
00:07:35,660 --> 00:07:41,870
<font color="#CCCCCC">isolating a couple of</font><font color="#E5E5E5"> calls from the</font>

173
00:07:37,250 --> 00:07:42,770
from Nova<font color="#CCCCCC"> to guess what you're actually</font>

174
00:07:41,870 --> 00:07:44,390
going<font color="#E5E5E5"> to be running from your</font>

175
00:07:42,770 --> 00:07:46,669
<font color="#CCCCCC">application perspective</font><font color="#E5E5E5"> is entirely</font>

176
00:07:44,390 --> 00:07:49,520
dependent<font color="#CCCCCC"> on what you're trying to do</font>

177
00:07:46,669 --> 00:07:51,620
<font color="#E5E5E5">for the sake</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> testing I just went and</font>

178
00:07:49,520 --> 00:07:53,210
used<font color="#E5E5E5"> the exact</font><font color="#CCCCCC"> same configuration for my</font>

179
00:07:51,620 --> 00:07:56,270
<font color="#E5E5E5">guess as I had</font><font color="#CCCCCC"> on my</font><font color="#E5E5E5"> host that meant</font>

180
00:07:53,210 --> 00:08:00,080
<font color="#CCCCCC">that I was using the</font><font color="#E5E5E5"> real-time</font><font color="#CCCCCC"> kernel</font>

181
00:07:56,270 --> 00:08:01,760
again and the tuned profile only<font color="#CCCCCC"> this</font>

182
00:08:00,080 --> 00:08:03,469
<font color="#E5E5E5">time I went for the guest profile which</font>

183
00:08:01,760 --> 00:08:06,050
again<font color="#E5E5E5"> is a bit like it's</font><font color="#CCCCCC"> packaged and</font>

184
00:08:03,470 --> 00:08:07,940
available<font color="#CCCCCC"> if you already have a</font>

185
00:08:06,050 --> 00:08:09,500
<font color="#CCCCCC">real-time application</font><font color="#E5E5E5"> whether that's</font>

186
00:08:07,940 --> 00:08:11,510
<font color="#E5E5E5">something that you've got from like you</font>

187
00:08:09,500 --> 00:08:14,180
bought in an<font color="#E5E5E5"> application</font><font color="#CCCCCC"> form Ericsson</font>

188
00:08:11,510 --> 00:08:16,240
or something at the<font color="#E5E5E5"> NF that cut it they</font>

189
00:08:14,180 --> 00:08:19,640
think you<font color="#E5E5E5"> should obviously use that</font>

190
00:08:16,240 --> 00:08:23,630
again<font color="#E5E5E5"> install a lot of stuff</font><font color="#CCCCCC"> enable</font><font color="#E5E5E5"> the</font>

191
00:08:19,640 --> 00:08:25,250
<font color="#E5E5E5">profile in April huge burgers and then</font>

192
00:08:23,630 --> 00:08:30,800
we<font color="#E5E5E5"> actually finally get into the nitty</font>

193
00:08:25,250 --> 00:08:34,669
other the open<font color="#E5E5E5"> sex stuff</font><font color="#CCCCCC"> OpenStack</font><font color="#E5E5E5"> Nova</font>

194
00:08:30,800 --> 00:08:37,430
has two ways of configuring a guest<font color="#CCCCCC"> the</font>

195
00:08:34,669 --> 00:08:39,079
first of those is via image<font color="#CCCCCC"> property so</font>

196
00:08:37,429 --> 00:08:41,299
when you<font color="#E5E5E5"> create an</font><font color="#CCCCCC"> image you can set</font>

197
00:08:39,080 --> 00:08:43,550
certain<font color="#E5E5E5"> properties saying I need this</font>

198
00:08:41,299 --> 00:08:46,849
specific CPU feature for this<font color="#E5E5E5"> image to</font>

199
00:08:43,549 --> 00:08:49,339
<font color="#E5E5E5">work the other way is what they call</font>

200
00:08:46,850 --> 00:08:52,400
flavors so<font color="#E5E5E5"> flavors dictate how much</font>

201
00:08:49,339 --> 00:08:54,740
<font color="#E5E5E5">memory or your VM is going to have how</font>

202
00:08:52,400 --> 00:08:57,589
much CPU<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to have that</font><font color="#E5E5E5"> kind of</font>

203
00:08:54,740 --> 00:08:58,820
<font color="#CCCCCC">load it also allows you to use a thing</font>

204
00:08:57,589 --> 00:09:02,000
<font color="#CCCCCC">called extra specs which</font><font color="#E5E5E5"> are like</font>

205
00:08:58,820 --> 00:09:04,490
scheduler hints so they'll say<font color="#E5E5E5"> I want</font>

206
00:09:02,000 --> 00:09:07,120
CPU pinning I want real time I want real

207
00:09:04,490 --> 00:09:08,990
time to use these<font color="#E5E5E5"> cause this kind of a</font>

208
00:09:07,120 --> 00:09:10,670
<font color="#E5E5E5">there's three things that we're going</font><font color="#CCCCCC"> to</font>

209
00:09:08,990 --> 00:09:13,600
want<font color="#E5E5E5"> to configure here the first of</font>

210
00:09:10,670 --> 00:09:17,540
<font color="#E5E5E5">these is CPU policy which dictates</font>

211
00:09:13,600 --> 00:09:19,550
whether your<font color="#E5E5E5"> guests</font><font color="#CCCCCC"> caus are pinned to</font>

212
00:09:17,540 --> 00:09:21,980
the whole<font color="#E5E5E5"> set up we're going to want</font>

213
00:09:19,550 --> 00:09:23,719
them pinned<font color="#E5E5E5"> the second of these is</font>

214
00:09:21,980 --> 00:09:25,850
whether you're enabling<font color="#E5E5E5"> real-time</font>

215
00:09:23,720 --> 00:09:26,839
because<font color="#E5E5E5"> it's a real time demo obviously</font>

216
00:09:25,850 --> 00:09:29,320
you're going to be enabling real-time

217
00:09:26,839 --> 00:09:31,280
<font color="#E5E5E5">and then the last of these is huge pages</font>

218
00:09:29,320 --> 00:09:34,160
which<font color="#CCCCCC"> you usually want</font><font color="#E5E5E5"> from a</font>

219
00:09:31,280 --> 00:09:35,300
performance standpoint<font color="#E5E5E5"> you've also got</font>

220
00:09:34,160 --> 00:09:38,630
the other two<font color="#E5E5E5"> things but</font><font color="#CCCCCC"> again I'm not</font>

221
00:09:35,300 --> 00:09:41,390
<font color="#E5E5E5">going to talk</font><font color="#CCCCCC"> about these today it's</font>

222
00:09:38,630 --> 00:09:43,939
going back<font color="#CCCCCC"> to that OpenStack the</font>

223
00:09:41,390 --> 00:09:45,680
<font color="#CCCCCC">command-line client will create in a</font>

224
00:09:43,940 --> 00:09:48,800
flavor we've got four CPUs

225
00:09:45,680 --> 00:09:52,130
<font color="#CCCCCC">four gigs around 20 gigs of disk</font><font color="#E5E5E5"> space</font>

226
00:09:48,800 --> 00:09:55,550
and we're calling we're giving it a name

227
00:09:52,130 --> 00:09:57,530
<font color="#E5E5E5">RT once more and then we're</font><font color="#CCCCCC"> going to set</font>

228
00:09:55,550 --> 00:10:00,229
these are extra specs which again I like

229
00:09:57,530 --> 00:10:03,500
scheduler hints so there's<font color="#E5E5E5"> four</font><font color="#CCCCCC"> of these</font>

230
00:10:00,230 --> 00:10:05,300
here the first of<font color="#E5E5E5"> these the CPU policy</font>

231
00:10:03,500 --> 00:10:07,580
is the one that determines whether<font color="#CCCCCC"> your</font>

232
00:10:05,300 --> 00:10:09,770
guests<font color="#E5E5E5"> caus are pinned on a dedicated</font>

233
00:10:07,580 --> 00:10:11,600
means that we<font color="#E5E5E5"> want our guests caus to be</font>

234
00:10:09,770 --> 00:10:14,600
pinned to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> host cores so I'd be a</font>

235
00:10:11,600 --> 00:10:18,380
one-to-one mapping<font color="#CCCCCC"> between</font><font color="#E5E5E5"> guest core</font>

236
00:10:14,600 --> 00:10:21,080
processes and your<font color="#CCCCCC"> host course the</font>

237
00:10:18,380 --> 00:10:24,339
second of those<font color="#E5E5E5"> real time we want to</font>

238
00:10:21,080 --> 00:10:28,120
<font color="#CCCCCC">enable the real time and we also want to</font>

239
00:10:24,339 --> 00:10:30,380
tell<font color="#E5E5E5"> Nova that some of those cause</font>

240
00:10:28,120 --> 00:10:33,459
<font color="#CCCCCC">shouldn't</font><font color="#E5E5E5"> be marked as real time pause</font>

241
00:10:30,380 --> 00:10:37,400
again<font color="#E5E5E5"> because we use in the</font><font color="#CCCCCC"> linux kernel</font>

242
00:10:33,459 --> 00:10:39,680
<font color="#E5E5E5">for our</font><font color="#CCCCCC"> guests</font><font color="#E5E5E5"> here and we want some of</font>

243
00:10:37,400 --> 00:10:43,939
those<font color="#CCCCCC"> cause</font><font color="#E5E5E5"> to be non real time</font>

244
00:10:39,680 --> 00:10:49,099
for scheduler processes and then the

245
00:10:43,940 --> 00:10:51,260
last<font color="#E5E5E5"> one is one</font><font color="#CCCCCC"> gig huge pages and then</font>

246
00:10:49,100 --> 00:10:53,300
we create a server with this flavor<font color="#E5E5E5"> and</font>

247
00:10:51,260 --> 00:10:58,189
with some sample image that doesn't

248
00:10:53,300 --> 00:10:59,540
<font color="#E5E5E5">really</font><font color="#CCCCCC"> matter so the interesting thing</font>

249
00:10:58,190 --> 00:11:01,820
<font color="#CCCCCC">about how this works</font>

250
00:10:59,540 --> 00:11:06,250
this only works<font color="#CCCCCC"> no over supports a</font>

251
00:11:01,820 --> 00:11:11,120
couple of a<font color="#CCCCCC"> couple of hypervisor drivers</font>

252
00:11:06,250 --> 00:11:12,830
this only works with<font color="#E5E5E5"> libvirt</font><font color="#CCCCCC"> KBM so if</font>

253
00:11:11,120 --> 00:11:16,880
you're using<font color="#E5E5E5"> Zen or something sorry this</font>

254
00:11:12,830 --> 00:11:19,250
you're out a lot<font color="#CCCCCC"> so what's interesting</font>

255
00:11:16,880 --> 00:11:20,840
to look at here<font color="#CCCCCC"> is the the liberal XML</font>

256
00:11:19,250 --> 00:11:23,600
that<font color="#E5E5E5"> Nova will generate</font><font color="#CCCCCC"> for you or what</font>

257
00:11:20,840 --> 00:11:25,070
that<font color="#E5E5E5"> actually how that reflects like</font>

258
00:11:23,600 --> 00:11:28,490
<font color="#E5E5E5">beat down what kind</font><font color="#CCCCCC"> of calls and</font><font color="#E5E5E5"> stuff</font>

259
00:11:25,070 --> 00:11:31,400
is making<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the host so the first of</font>

260
00:11:28,490 --> 00:11:33,710
these is the the CPU tune element this

261
00:11:31,400 --> 00:11:36,189
<font color="#CCCCCC">will be if you do like dump XML for your</font>

262
00:11:33,710 --> 00:11:38,840
liver domain you'll get a big XML love

263
00:11:36,190 --> 00:11:41,840
with all the information<font color="#CCCCCC"> about your your</font>

264
00:11:38,840 --> 00:11:47,690
<font color="#CCCCCC">guest in it if we look at just</font><font color="#E5E5E5"> the CPU</font><font color="#CCCCCC"> -</font>

265
00:11:41,840 --> 00:11:49,280
one CPU<font color="#CCCCCC"> tune</font><font color="#E5E5E5"> it's an element that</font>

266
00:11:47,690 --> 00:11:51,050
specifies which of your your<font color="#E5E5E5"> host</font>

267
00:11:49,280 --> 00:11:53,360
physical CPUs<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there may be CPU</font>

268
00:11:51,050 --> 00:11:55,670
would be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do so that CPU pinning</font>

269
00:11:53,360 --> 00:12:00,350
that<font color="#E5E5E5"> I was talking about this determines</font>

270
00:11:55,670 --> 00:12:01,790
that for you so there's two important

271
00:12:00,350 --> 00:12:04,190
attributes to note here the first<font color="#CCCCCC"> needs</font>

272
00:12:01,790 --> 00:12:09,709
is the<font color="#CCCCCC"> be CPU pin 1 and the be CPU</font>

273
00:12:04,190 --> 00:12:14,480
scheduler<font color="#E5E5E5"> one be CPU pin how that works</font>

274
00:12:09,710 --> 00:12:19,580
under the<font color="#E5E5E5"> hood</font><font color="#CCCCCC"> because a</font><font color="#E5E5E5"> Linux function</font>

275
00:12:14,480 --> 00:12:22,580
which is<font color="#E5E5E5"> set affinity if you look at</font>

276
00:12:19,580 --> 00:12:25,070
your<font color="#CCCCCC"> your qmu process and you look at</font>

277
00:12:22,580 --> 00:12:26,780
the threads that<font color="#CCCCCC"> qmu has spawned it has</font>

278
00:12:25,070 --> 00:12:29,870
an individual played for every single

279
00:12:26,780 --> 00:12:32,750
<font color="#E5E5E5">one of your</font><font color="#CCCCCC"> guest</font><font color="#E5E5E5"> your guest cause so</font>

280
00:12:29,870 --> 00:12:39,170
each<font color="#CCCCCC"> v CPU is basically a host processor</font>

281
00:12:32,750 --> 00:12:41,170
<font color="#CCCCCC">k vm process and by as configuring this</font>

282
00:12:39,170 --> 00:12:44,660
property what we're saying is that<font color="#E5E5E5"> the</font>

283
00:12:41,170 --> 00:12:46,060
first<font color="#CCCCCC"> B CPU in the instance we want</font><font color="#E5E5E5"> it</font>

284
00:12:44,660 --> 00:12:49,290
pinned to

285
00:12:46,060 --> 00:12:51,310
<font color="#E5E5E5">poor</font><font color="#CCCCCC"> to on the</font><font color="#E5E5E5"> host we want the first</font>

286
00:12:49,290 --> 00:12:55,860
<font color="#CCCCCC">PCP you they need to be pinned to the</font>

287
00:12:51,310 --> 00:12:58,989
third<font color="#E5E5E5"> quarter the house and so forth and</font>

288
00:12:55,860 --> 00:13:01,360
it called<font color="#CCCCCC"> Liverpool's</font><font color="#E5E5E5"> the set affinity</font>

289
00:12:58,990 --> 00:13:02,820
function on<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and if we go and we</font>

290
00:13:01,360 --> 00:13:07,030
<font color="#CCCCCC">look using</font><font color="#E5E5E5"> potassium</font>

291
00:13:02,820 --> 00:13:09,040
<font color="#CCCCCC">command at the pinning information for</font>

292
00:13:07,030 --> 00:13:12,790
<font color="#E5E5E5">these cause we see that in fact they are</font>

293
00:13:09,040 --> 00:13:14,890
actually<font color="#CCCCCC"> find two hosts cause</font><font color="#E5E5E5"> and</font>

294
00:13:12,790 --> 00:13:16,300
nothing else<font color="#E5E5E5"> if assuming you have your</font>

295
00:13:14,890 --> 00:13:17,260
<font color="#E5E5E5">host configured correctly nothing else</font>

296
00:13:16,300 --> 00:13:19,839
<font color="#CCCCCC">you'll be running</font><font color="#E5E5E5"> on these which means</font>

297
00:13:17,260 --> 00:13:22,780
<font color="#CCCCCC">that you're</font><font color="#E5E5E5"> getting essentially 100%</font><font color="#CCCCCC"> of</font>

298
00:13:19,840 --> 00:13:28,990
your performance for<font color="#CCCCCC"> each</font><font color="#E5E5E5"> of your guests</font>

299
00:13:22,780 --> 00:13:33,610
cause the other one then if the<font color="#CCCCCC"> B</font><font color="#E5E5E5"> CPU</font>

300
00:13:28,990 --> 00:13:35,740
scheduler attribute so this is again

301
00:13:33,610 --> 00:13:38,620
<font color="#CCCCCC">another optional element and what</font><font color="#E5E5E5"> this</font>

302
00:13:35,740 --> 00:13:41,580
determines is the scheduler type that

303
00:13:38,620 --> 00:13:43,960
your<font color="#E5E5E5"> CPU threads are going</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> using</font>

304
00:13:41,580 --> 00:13:45,970
under<font color="#E5E5E5"> normal circumstances this will</font>

305
00:13:43,960 --> 00:13:47,880
<font color="#E5E5E5">just use the standard scheduler courses</font>

306
00:13:45,970 --> 00:13:50,830
that<font color="#CCCCCC"> your whatever</font><font color="#E5E5E5"> your host is using</font>

307
00:13:47,880 --> 00:13:55,300
naturally we<font color="#CCCCCC"> don't want that what we</font>

308
00:13:50,830 --> 00:14:01,330
want is we want<font color="#E5E5E5"> people of one of the</font>

309
00:13:55,300 --> 00:14:02,979
wheel<font color="#E5E5E5"> type priorities to be applied how</font>

310
00:14:01,330 --> 00:14:05,920
<font color="#E5E5E5">that works under</font><font color="#CCCCCC"> the hood is again</font>

311
00:14:02,980 --> 00:14:07,720
another<font color="#E5E5E5"> kernel function this</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> the</font>

312
00:14:05,920 --> 00:14:10,860
previous<font color="#CCCCCC"> one was</font><font color="#E5E5E5"> set affinity this is</font>

313
00:14:07,720 --> 00:14:16,090
set<font color="#E5E5E5"> schedule ax</font><font color="#CCCCCC"> and as the name suggests</font>

314
00:14:10,860 --> 00:14:18,340
<font color="#CCCCCC">you pass in a process ID</font><font color="#E5E5E5"> and you tell it</font>

315
00:14:16,090 --> 00:14:21,070
what scheduler policy you<font color="#E5E5E5"> want to be</font>

316
00:14:18,340 --> 00:14:24,840
<font color="#CCCCCC">applying</font><font color="#E5E5E5"> to that</font><font color="#CCCCCC"> process</font><font color="#E5E5E5"> ID and various</font>

317
00:14:21,070 --> 00:14:24,840
magical happen and<font color="#CCCCCC"> that'll get applied</font>

318
00:14:25,020 --> 00:14:33,670
and for this<font color="#E5E5E5"> to validate this we have a</font>

319
00:14:28,500 --> 00:14:35,950
<font color="#E5E5E5">CHR T application you pass in a process</font>

320
00:14:33,670 --> 00:14:38,290
ID to this and it<font color="#E5E5E5"> will give you the</font>

321
00:14:35,950 --> 00:14:40,810
scheduling<font color="#E5E5E5"> policy that's</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> and</font>

322
00:14:38,290 --> 00:14:43,510
<font color="#E5E5E5">the scheduling priority the priority is</font>

323
00:14:40,810 --> 00:14:46,900
a value from<font color="#E5E5E5"> naught some</font><font color="#CCCCCC"> 99 and that</font>

324
00:14:43,510 --> 00:14:48,430
determines if<font color="#E5E5E5"> you've got two</font><font color="#CCCCCC"> things that</font>

325
00:14:46,900 --> 00:14:49,000
they're conflicting which<font color="#CCCCCC"> are those will</font>

326
00:14:48,430 --> 00:14:51,279
take

327
00:14:49,000 --> 00:14:54,730
<font color="#CCCCCC">see over the other process laughing</font>

328
00:14:51,279 --> 00:14:56,939
<font color="#CCCCCC">about the</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> note</font>

329
00:14:54,730 --> 00:15:00,339
here<font color="#E5E5E5"> the first two calls that</font><font color="#CCCCCC"> we had</font>

330
00:14:56,939 --> 00:15:02,589
<font color="#E5E5E5">were using like I said we had told we'd</font>

331
00:15:00,339 --> 00:15:04,449
<font color="#CCCCCC">mask those because we didn't want</font><font color="#E5E5E5"> every</font>

332
00:15:02,589 --> 00:15:06,550
core you<font color="#CCCCCC"> know I guess to</font><font color="#E5E5E5"> be running with</font>

333
00:15:04,449 --> 00:15:09,430
<font color="#CCCCCC">a</font><font color="#E5E5E5"> real time policy because the kernel</font>

334
00:15:06,550 --> 00:15:11,709
isn't necessarily guaranteed to work

335
00:15:09,430 --> 00:15:15,099
that way so<font color="#CCCCCC"> they're using</font><font color="#E5E5E5"> the standard</font>

336
00:15:11,709 --> 00:15:16,959
<font color="#E5E5E5">other policy for this</font><font color="#CCCCCC"> and then the other</font>

337
00:15:15,100 --> 00:15:18,579
<font color="#CCCCCC">two cores which is where if we</font><font color="#E5E5E5"> were</font>

338
00:15:16,959 --> 00:15:20,018
running<font color="#E5E5E5"> an application this is</font><font color="#CCCCCC"> the cause</font>

339
00:15:18,579 --> 00:15:22,628
the<font color="#E5E5E5"> guest cause that</font><font color="#CCCCCC"> will actually run</font>

340
00:15:20,019 --> 00:15:29,620
<font color="#E5E5E5">our application on they are scheduled</font>

341
00:15:22,629 --> 00:15:32,680
with<font color="#E5E5E5"> via the FIFO policy we also talked</font>

342
00:15:29,620 --> 00:15:34,990
about huge pages<font color="#E5E5E5"> as far as that's</font>

343
00:15:32,680 --> 00:15:38,469
implemented there's a memory<font color="#E5E5E5"> back in a</font>

344
00:15:34,990 --> 00:15:41,139
tribute<font color="#E5E5E5"> you</font><font color="#CCCCCC"> say what piece</font><font color="#E5E5E5"> we configure</font>

345
00:15:38,470 --> 00:15:42,699
what page size we wanted we and then

346
00:15:41,139 --> 00:15:44,290
there's some other<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> there that</font>

347
00:15:42,699 --> 00:15:47,469
<font color="#CCCCCC">doesn't really</font><font color="#E5E5E5"> matter</font><font color="#CCCCCC"> Nova does</font><font color="#E5E5E5"> all of</font>

348
00:15:44,290 --> 00:15:49,329
this for<font color="#E5E5E5"> you and if we go and we</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at</font>

349
00:15:47,470 --> 00:15:51,000
again<font color="#E5E5E5"> the qmu process we get the process</font>

350
00:15:49,329 --> 00:15:53,500
<font color="#CCCCCC">ID for that and we</font><font color="#E5E5E5"> look through</font><font color="#CCCCCC"> the</font>

351
00:15:51,000 --> 00:15:55,209
<font color="#E5E5E5">through the huge page mapping for each</font>

352
00:15:53,500 --> 00:15:56,889
of those processes

353
00:15:55,209 --> 00:16:01,109
<font color="#E5E5E5">we'll see that it is actually indeed</font>

354
00:15:56,889 --> 00:16:01,110
mapped to the qmu process as we'd<font color="#CCCCCC"> expect</font>

355
00:16:01,680 --> 00:16:07,300
if we because we<font color="#CCCCCC"> created</font><font color="#E5E5E5"> the server</font><font color="#CCCCCC"> if</font>

356
00:16:05,680 --> 00:16:09,579
we go and<font color="#E5E5E5"> log</font><font color="#CCCCCC"> into that server then you</font>

357
00:16:07,300 --> 00:16:12,719
<font color="#CCCCCC">can use an application called</font><font color="#E5E5E5"> cyclic</font>

358
00:16:09,579 --> 00:16:17,109
test which will evaluate the<font color="#E5E5E5"> real-time</font>

359
00:16:12,720 --> 00:16:18,519
readiness of<font color="#E5E5E5"> your system that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> that</font>

360
00:16:17,110 --> 00:16:22,269
<font color="#E5E5E5">will give you a measurement of</font><font color="#CCCCCC"> your</font>

361
00:16:18,519 --> 00:16:23,860
<font color="#CCCCCC">latency from</font><font color="#E5E5E5"> what I've been told</font><font color="#CCCCCC"> you</font>

362
00:16:22,269 --> 00:16:27,930
want you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be looking for</font>

363
00:16:23,860 --> 00:16:31,689
something<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the below 20 mic</font>

364
00:16:27,930 --> 00:16:33,399
microseconds I think of latency<font color="#E5E5E5"> on</font>

365
00:16:31,689 --> 00:16:35,740
average anything below 20 you're usually

366
00:16:33,399 --> 00:16:37,100
pretty<font color="#CCCCCC"> good you wouldn't expect</font><font color="#E5E5E5"> this to</font>

367
00:16:35,740 --> 00:16:40,519
ever hit zero for

368
00:16:37,100 --> 00:16:42,920
using the<font color="#CCCCCC"> real-time fient patches in the</font>

369
00:16:40,519 --> 00:16:44,959
<font color="#E5E5E5">kernel you might if you had your own</font>

370
00:16:42,920 --> 00:16:47,569
<font color="#CCCCCC">real-time application</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> DNF or something</font>

371
00:16:44,959 --> 00:16:48,649
from a telco<font color="#E5E5E5"> but for the kernel patches</font>

372
00:16:47,570 --> 00:16:54,709
you're not going to see that kind<font color="#CCCCCC"> of</font>

373
00:16:48,649 --> 00:16:57,320
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> so yeah a</font><font color="#E5E5E5"> wrap up from a usability</font>

374
00:16:54,709 --> 00:16:59,119
perspective<font color="#CCCCCC"> today if</font><font color="#E5E5E5"> you go and you soil</font>

375
00:16:57,320 --> 00:17:00,860
<font color="#E5E5E5">OpenStack you</font><font color="#CCCCCC"> can figure</font><font color="#E5E5E5"> your hosts</font>

376
00:16:59,120 --> 00:17:04,010
correctly and you're using a recent

377
00:17:00,860 --> 00:17:06,530
release<font color="#E5E5E5"> you create your flavor</font><font color="#CCCCCC"> you set</font>

378
00:17:04,010 --> 00:17:08,629
your various<font color="#E5E5E5"> favorite rebukes and then</font>

379
00:17:06,530 --> 00:17:11,178
you boot your instance<font color="#E5E5E5"> and you now have</font>

380
00:17:08,630 --> 00:17:13,449
real-time<font color="#E5E5E5"> compute within your cloud</font>

381
00:17:11,179 --> 00:17:15,799
wherever that may be

382
00:17:13,449 --> 00:17:18,380
so yeah<font color="#CCCCCC"> that's keeping the real-time</font>

383
00:17:15,799 --> 00:17:21,729
thanks for listening

384
00:17:18,380 --> 00:17:21,729
[Applause]

385
00:17:23,369 --> 00:17:28,018
if anyone has any<font color="#CCCCCC"> questions ciao</font>

386
00:17:31,120 --> 00:17:34,209
[Music]

387
00:17:41,380 --> 00:17:44,519
can you say that<font color="#E5E5E5"> yet</font>

388
00:17:57,940 --> 00:18:04,290
[Music]

389
00:18:00,960 --> 00:18:06,240
so even if I heard you<font color="#CCCCCC"> correctly</font><font color="#E5E5E5"> you're</font>

390
00:18:04,290 --> 00:18:08,100
saying<font color="#E5E5E5"> if you boot multiple instances</font>

391
00:18:06,240 --> 00:18:10,790
and they're pinned<font color="#CCCCCC"> they'll use the same</font>

392
00:18:08,100 --> 00:18:12,929
host<font color="#E5E5E5"> that we pin to the same host CPUs</font>

393
00:18:10,790 --> 00:18:21,389
<font color="#CCCCCC">do we do anything to prevent that</font><font color="#E5E5E5"> from</font>

394
00:18:12,930 --> 00:18:24,660
happening<font color="#E5E5E5"> we use yes so from Nova</font>

395
00:18:21,390 --> 00:18:28,050
perspective<font color="#E5E5E5"> the recommendation</font><font color="#CCCCCC"> that we</font>

396
00:18:24,660 --> 00:18:30,990
have is if you have pinned instances and

397
00:18:28,050 --> 00:18:33,330
non pinned instances the non pinned

398
00:18:30,990 --> 00:18:35,040
instances aren't aware<font color="#CCCCCC"> of the pinning</font>

399
00:18:33,330 --> 00:18:37,169
information that<font color="#CCCCCC"> they'll just stomp all</font>

400
00:18:35,040 --> 00:18:38,700
over<font color="#E5E5E5"> your the cause they'll float across</font>

401
00:18:37,170 --> 00:18:42,150
<font color="#CCCCCC">cause and they'll use</font><font color="#E5E5E5"> anything</font><font color="#CCCCCC"> that they</font>

402
00:18:38,700 --> 00:18:45,120
can the recommendation we have for that

403
00:18:42,150 --> 00:18:47,880
issues a normal feature called<font color="#CCCCCC"> host</font>

404
00:18:45,120 --> 00:18:49,679
<font color="#E5E5E5">aggregates where you divide you</font>

405
00:18:47,880 --> 00:18:51,540
eventually<font color="#E5E5E5"> essentially divide your cloud</font>

406
00:18:49,680 --> 00:18:54,540
into multiple<font color="#CCCCCC"> parts and you're saying</font>

407
00:18:51,540 --> 00:18:57,960
<font color="#E5E5E5">this part of my cloud ie these servers</font>

408
00:18:54,540 --> 00:19:01,170
<font color="#CCCCCC">are allowed to run</font><font color="#E5E5E5"> real time processes</font>

409
00:18:57,960 --> 00:19:04,590
or pin processes<font color="#E5E5E5"> these ones are allowed</font>

410
00:19:01,170 --> 00:19:07,440
to use<font color="#CCCCCC"> non pinned processes and that</font>

411
00:19:04,590 --> 00:19:09,600
just stops them from<font color="#E5E5E5"> overlapping for if</font>

412
00:19:07,440 --> 00:19:12,150
you have cheap in processes<font color="#CCCCCC"> noble</font><font color="#E5E5E5"> will</font>

413
00:19:09,600 --> 00:19:15,240
make sure that the two servers won't

414
00:19:12,150 --> 00:19:16,710
<font color="#E5E5E5">overlap there'll be no overlap so you'll</font>

415
00:19:15,240 --> 00:19:18,150
give<font color="#CCCCCC"> four cores or whatever to one</font>

416
00:19:16,710 --> 00:19:20,910
server<font color="#CCCCCC"> and then if you give four to</font>

417
00:19:18,150 --> 00:19:22,680
another guest<font color="#E5E5E5"> there'll be four different</font>

418
00:19:20,910 --> 00:19:25,290
cause and<font color="#E5E5E5"> if it's not able</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that it</font>

419
00:19:22,680 --> 00:19:26,640
was appealed to schedule so I'll make

420
00:19:25,290 --> 00:19:28,940
<font color="#E5E5E5">sure</font><font color="#CCCCCC"> that we don't open</font><font color="#E5E5E5"> that that</font>

421
00:19:26,640 --> 00:19:28,940
doesn't<font color="#CCCCCC"> happen</font>

422
00:19:35,600 --> 00:19:38,639
[Music]

423
00:19:44,400 --> 00:19:49,309
[Music]

424
00:19:45,820 --> 00:19:53,539
so the question was one of the drawbacks

425
00:19:49,309 --> 00:19:55,309
<font color="#E5E5E5">if you have CPU pinning already</font><font color="#CCCCCC"> what are</font>

426
00:19:53,539 --> 00:19:58,190
the drawbacks of adding real time to

427
00:19:55,309 --> 00:20:01,460
that so they I know<font color="#E5E5E5"> that there are</font>

428
00:19:58,190 --> 00:20:03,980
<font color="#E5E5E5">performance impacts of using</font><font color="#CCCCCC"> real time</font>

429
00:20:01,460 --> 00:20:05,059
within<font color="#E5E5E5"> the kernel real time</font><font color="#CCCCCC"> I think I</font>

430
00:20:03,980 --> 00:20:07,850
said<font color="#E5E5E5"> that at the beginning real time</font>

431
00:20:05,059 --> 00:20:11,389
doesn't necessarily mean faster<font color="#E5E5E5"> it just</font>

432
00:20:07,850 --> 00:20:13,070
means it's more<font color="#E5E5E5"> deterministic so the</font>

433
00:20:11,390 --> 00:20:14,720
general recommendation<font color="#E5E5E5"> would be</font><font color="#CCCCCC"> you'd</font>

434
00:20:13,070 --> 00:20:16,789
use real time<font color="#E5E5E5"> if your application</font>

435
00:20:14,720 --> 00:20:19,130
requires<font color="#E5E5E5"> real time knowing that</font><font color="#CCCCCC"> it is</font>

436
00:20:16,789 --> 00:20:22,340
<font color="#E5E5E5">going to require more resources or</font>

437
00:20:19,130 --> 00:20:24,530
you're going<font color="#E5E5E5"> to get less who puts if you</font>

438
00:20:22,340 --> 00:20:26,360
don't require<font color="#CCCCCC"> that real time you</font>

439
00:20:24,530 --> 00:20:28,309
shouldn't<font color="#E5E5E5"> yeah you should need</font><font color="#CCCCCC"> it</font>

440
00:20:26,360 --> 00:20:31,780
because you're better off use increasing

441
00:20:28,309 --> 00:20:31,780
your resource utilization<font color="#CCCCCC"> as possible</font>

442
00:20:36,370 --> 00:20:44,689
yes so the<font color="#CCCCCC"> question was in the</font>

443
00:20:42,590 --> 00:20:46,580
benchmarks to<font color="#CCCCCC"> de-stress I stressed</font><font color="#E5E5E5"> the</font>

444
00:20:44,690 --> 00:20:51,049
<font color="#CCCCCC">guest</font><font color="#E5E5E5"> did they also stress the</font><font color="#CCCCCC"> host and</font>

445
00:20:46,580 --> 00:20:53,178
other<font color="#E5E5E5"> guests did you say</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> as part of</font>

446
00:20:51,049 --> 00:20:54,770
part of<font color="#E5E5E5"> the deployment process Vitesse</font>

447
00:20:53,179 --> 00:20:56,809
the expectation is that you<font color="#E5E5E5"> would stress</font>

448
00:20:54,770 --> 00:20:59,540
<font color="#CCCCCC">the host first to make</font><font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that the</font>

449
00:20:56,809 --> 00:21:03,799
host is actually configured<font color="#E5E5E5"> so there</font>

450
00:20:59,540 --> 00:21:05,780
there's a real-time evaluation tool<font color="#CCCCCC"> RT</font>

451
00:21:03,799 --> 00:21:06,799
<font color="#CCCCCC">eval which you're supposed to use to</font>

452
00:21:05,780 --> 00:21:09,649
<font color="#E5E5E5">make</font><font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> it is configured</font>

453
00:21:06,799 --> 00:21:11,120
<font color="#CCCCCC">correctly</font><font color="#E5E5E5"> and then you use something</font>

454
00:21:09,650 --> 00:21:13,549
like cyclic<font color="#E5E5E5"> test to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that your</font>

455
00:21:11,120 --> 00:21:16,250
latency<font color="#E5E5E5"> is is what you'd expect</font><font color="#CCCCCC"> yeah so</font>

456
00:21:13,549 --> 00:21:17,690
that was done<font color="#E5E5E5"> before anything else was</font>

457
00:21:16,250 --> 00:21:25,360
deployed<font color="#E5E5E5"> on top just to make</font><font color="#CCCCCC"> sure that</font>

458
00:21:17,690 --> 00:21:25,360
the host kernel was configuring yeah<font color="#E5E5E5"> I</font>

459
00:21:27,370 --> 00:21:30,168
didn't answer

460
00:21:28,669 --> 00:21:32,809
no<font color="#E5E5E5"> I didn't know there were several</font>

461
00:21:30,169 --> 00:21:34,520
processes they would that<font color="#E5E5E5"> would actually</font>

462
00:21:32,809 --> 00:21:39,250
be a nice<font color="#E5E5E5"> yesterday because</font>

463
00:21:34,520 --> 00:21:41,600
<font color="#E5E5E5">theoretically there should be no impact</font>

464
00:21:39,250 --> 00:21:44,150
theoretically yeah<font color="#CCCCCC"> but I imagine that</font>

465
00:21:41,600 --> 00:21:46,909
<font color="#E5E5E5">probably would be some impact</font><font color="#CCCCCC"> you'd be</font>

466
00:21:44,150 --> 00:21:50,780
trying<font color="#E5E5E5"> to keep as much logic</font><font color="#CCCCCC"> even the</font>

467
00:21:46,910 --> 00:21:53,809
way that<font color="#CCCCCC"> I deployed this I used this</font>

468
00:21:50,780 --> 00:21:54,320
still isn't supported in triple<font color="#E5E5E5"> o like</font>

469
00:21:53,809 --> 00:21:56,360
<font color="#CCCCCC">red hats</font>

470
00:21:54,320 --> 00:21:58,820
deployment tools so I was using<font color="#E5E5E5"> dev set</font>

471
00:21:56,360 --> 00:22:01,040
for this and it<font color="#E5E5E5"> was an</font><font color="#CCCCCC"> all-in-one</font>

472
00:21:58,820 --> 00:22:02,720
<font color="#E5E5E5">deployment so I heard like Neutron</font><font color="#CCCCCC"> and</font>

473
00:22:01,040 --> 00:22:05,510
stuff<font color="#E5E5E5"> running on that that</font><font color="#CCCCCC"> compute</font><font color="#E5E5E5"> note</font>

474
00:22:02,720 --> 00:22:07,730
<font color="#E5E5E5">I should</font><font color="#CCCCCC"> have had any</font><font color="#E5E5E5"> of that there</font><font color="#CCCCCC"> they</font>

475
00:22:05,510 --> 00:22:09,679
were all isolated<font color="#CCCCCC"> but I realistically I</font>

476
00:22:07,730 --> 00:22:11,210
should<font color="#E5E5E5"> only have had the compute service</font>

477
00:22:09,679 --> 00:22:13,309
running on that<font color="#E5E5E5"> and everything else</font>

478
00:22:11,210 --> 00:22:14,870
should<font color="#CCCCCC"> be on a</font><font color="#E5E5E5"> different machine it</font>

479
00:22:13,309 --> 00:22:18,610
would<font color="#CCCCCC"> be there's actually something I'll</font>

480
00:22:14,870 --> 00:22:18,610
probably<font color="#E5E5E5"> go and do when I go home</font>

481
00:22:19,370 --> 00:22:28,790
<font color="#E5E5E5">I I did a quest did I try running two</font>

482
00:22:26,120 --> 00:22:30,050
things<font color="#CCCCCC"> I did</font><font color="#E5E5E5"> but I didn't benchmark</font><font color="#CCCCCC"> it</font>

483
00:22:28,790 --> 00:22:32,240
was<font color="#E5E5E5"> only just to make sure that it</font>

484
00:22:30,050 --> 00:22:34,600
didn't work<font color="#E5E5E5"> and there was no funky stuff</font>

485
00:22:32,240 --> 00:22:34,600
going<font color="#E5E5E5"> on</font>

486
00:22:43,550 --> 00:22:49,550
so the question was if the VM<font color="#E5E5E5"> is pinned</font>

487
00:22:46,690 --> 00:22:54,100
<font color="#CCCCCC">so one</font><font color="#E5E5E5"> CPU is it possible to like</font>

488
00:22:49,550 --> 00:22:57,740
migrate to<font color="#CCCCCC"> different</font><font color="#E5E5E5"> host no you sort of</font>

489
00:22:54,100 --> 00:22:59,959
this is a long-standing<font color="#E5E5E5"> bug with Nova we</font>

490
00:22:57,740 --> 00:23:01,370
don't provide as<font color="#E5E5E5"> part of a life so a</font>

491
00:22:59,960 --> 00:23:03,020
live migration<font color="#E5E5E5"> for anyone that's</font><font color="#CCCCCC"> not a</font>

492
00:23:01,370 --> 00:23:04,699
way it means<font color="#E5E5E5"> that your instance is</font>

493
00:23:03,020 --> 00:23:07,010
running<font color="#CCCCCC"> and you move it on to a</font>

494
00:23:04,700 --> 00:23:09,410
different<font color="#E5E5E5"> host and the incidence stays</font>

495
00:23:07,010 --> 00:23:11,660
<font color="#E5E5E5">running with minimal downtime</font><font color="#CCCCCC"> like</font>

496
00:23:09,410 --> 00:23:14,060
microseconds<font color="#CCCCCC"> it's usually a little</font><font color="#E5E5E5"> more</font>

497
00:23:11,660 --> 00:23:17,450
<font color="#E5E5E5">than that but almost no noticeable</font>

498
00:23:14,060 --> 00:23:19,940
downtown the problem with how we do like

499
00:23:17,450 --> 00:23:21,200
motivations is we don't pass sufficient

500
00:23:19,940 --> 00:23:25,970
information<font color="#CCCCCC"> as part of</font><font color="#E5E5E5"> the light</font>

501
00:23:21,200 --> 00:23:28,520
migration<font color="#E5E5E5"> request to recalculate the CPU</font>

502
00:23:25,970 --> 00:23:31,010
map pinning in from mapping on the

503
00:23:28,520 --> 00:23:32,960
destination<font color="#E5E5E5"> side so what ends up</font>

504
00:23:31,010 --> 00:23:36,320
happening is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you use the exact same</font>

505
00:23:32,960 --> 00:23:39,020
cause<font color="#CCCCCC"> W use in on the source</font><font color="#E5E5E5"> on the host</font>

506
00:23:36,320 --> 00:23:40,610
we don't regenerate<font color="#E5E5E5"> that which means if</font>

507
00:23:39,020 --> 00:23:43,370
you already had an instance<font color="#E5E5E5"> running</font>

508
00:23:40,610 --> 00:23:46,070
there and the cause<font color="#E5E5E5"> will be you have</font>

509
00:23:43,370 --> 00:23:48,020
were using<font color="#CCCCCC"> cause five to ten and this</font>

510
00:23:46,070 --> 00:23:50,710
use<font color="#CCCCCC"> cause three to seven</font><font color="#E5E5E5"> then though it</font>

511
00:23:48,020 --> 00:23:55,720
would<font color="#E5E5E5"> be there two or</font><font color="#CCCCCC"> three call overlap</font>

512
00:23:50,710 --> 00:23:58,190
<font color="#E5E5E5">yeah so it's a long standing of bug and</font>

513
00:23:55,720 --> 00:24:00,260
the reason it probably hasn't<font color="#E5E5E5"> been fixed</font>

514
00:23:58,190 --> 00:24:02,590
<font color="#E5E5E5">is because of fixes really really</font>

515
00:24:00,260 --> 00:24:02,590
difficult

516
00:24:10,940 --> 00:24:14,160
[Music]

517
00:24:15,670 --> 00:24:20,600
so you're saying that the<font color="#CCCCCC"> scheduler</font>

518
00:24:19,190 --> 00:24:25,700
<font color="#E5E5E5">isn't properly evaluating the</font>

519
00:24:20,600 --> 00:24:27,379
<font color="#E5E5E5">destination it kind of it's a dumb like</font>

520
00:24:25,700 --> 00:24:29,330
how it's doing<font color="#E5E5E5"> it is a little bit daft</font>

521
00:24:27,380 --> 00:24:32,600
<font color="#CCCCCC">all</font><font color="#E5E5E5"> it's looking at is do I have</font><font color="#CCCCCC"> enough</font>

522
00:24:29,330 --> 00:24:33,860
<font color="#E5E5E5">three CPUs and it will attempt</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find</font>

523
00:24:32,600 --> 00:24:35,600
<font color="#CCCCCC">the</font><font color="#E5E5E5"> pinning information and if you have</font>

524
00:24:33,860 --> 00:24:38,719
enough free CPUs it's not a scheduling

525
00:24:35,600 --> 00:24:41,120
<font color="#CCCCCC">issue per se so you you will have enough</font>

526
00:24:38,720 --> 00:24:42,860
<font color="#CCCCCC">three CPUs and it's able</font><font color="#E5E5E5"> to do the</font>

527
00:24:41,120 --> 00:24:45,280
appropriate mapping<font color="#CCCCCC"> but when it actually</font>

528
00:24:42,860 --> 00:24:47,870
<font color="#CCCCCC">gets there it doesn't recalculate that</font>

529
00:24:45,280 --> 00:24:48,950
so it's more it's not<font color="#E5E5E5"> the conductor</font><font color="#CCCCCC"> I</font>

530
00:24:47,870 --> 00:24:51,379
can't<font color="#E5E5E5"> think of the</font><font color="#CCCCCC"> name of the</font><font color="#E5E5E5"> actual</font>

531
00:24:48,950 --> 00:24:53,150
specific service that would<font color="#E5E5E5"> do that but</font>

532
00:24:51,380 --> 00:24:54,890
it's it's only in<font color="#E5E5E5"> fact that we should be</font>

533
00:24:53,150 --> 00:24:56,210
regenerating this<font color="#E5E5E5"> XML and we don't it's</font>

534
00:24:54,890 --> 00:24:59,510
a<font color="#E5E5E5"> long-standing bug and it's annoying</font>

535
00:24:56,210 --> 00:25:01,820
but the recommendation usually is like

536
00:24:59,510 --> 00:25:03,920
don't like migrate instances with

537
00:25:01,820 --> 00:25:05,540
pinning<font color="#E5E5E5"> and realistically if you have</font>

538
00:25:03,920 --> 00:25:07,340
CPU pinning on<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you're talk worried</font>

539
00:25:05,540 --> 00:25:09,950
about determinism<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> you've</font>

540
00:25:07,340 --> 00:25:13,070
<font color="#CCCCCC">probably don't want to be like migrating</font>

541
00:25:09,950 --> 00:25:21,710
in most cases is a bit of<font color="#CCCCCC"> a niche use</font>

542
00:25:13,070 --> 00:25:22,010
case any<font color="#E5E5E5"> other questions I think</font><font color="#CCCCCC"> we're</font>

543
00:25:21,710 --> 00:25:24,820
good

544
00:25:22,010 --> 00:25:24,820
thanks guys

545
00:25:27,810 --> 00:25:29,870
<font color="#E5E5E5">you</font>

