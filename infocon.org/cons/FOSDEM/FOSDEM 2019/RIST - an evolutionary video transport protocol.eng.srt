1
00:00:05,030 --> 00:00:10,500
so our next<font color="#E5E5E5"> talk is about tourists</font>

2
00:00:07,850 --> 00:00:13,018
<font color="#CCCCCC">reliable</font><font color="#E5E5E5"> internet stream</font><font color="#CCCCCC"> transport</font><font color="#E5E5E5"> for</font>

3
00:00:10,500 --> 00:00:20,040
missing<font color="#CCCCCC"> new protocol</font>

4
00:00:13,019 --> 00:00:21,840
please welcome<font color="#E5E5E5"> Kieran thank you for the</font>

5
00:00:20,040 --> 00:00:25,110
introduction Christopher<font color="#E5E5E5"> if you want to</font>

6
00:00:21,840 --> 00:00:30,000
email me<font color="#CCCCCC"> or send me horrible tweets you</font>

7
00:00:25,110 --> 00:00:32,189
can tweet<font color="#CCCCCC"> me there</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> like to</font>

8
00:00:30,000 --> 00:00:34,110
introduce<font color="#E5E5E5"> wrists</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> all one of the</font>

9
00:00:32,189 --> 00:00:37,410
goals<font color="#E5E5E5"> of</font><font color="#CCCCCC"> what risks</font><font color="#E5E5E5"> is trying to achieve</font>

10
00:00:34,110 --> 00:00:39,510
<font color="#E5E5E5">and the goals of risk that low latency</font>

11
00:00:37,410 --> 00:00:41,250
<font color="#CCCCCC">divert</font><font color="#E5E5E5"> a video between generally</font>

12
00:00:39,510 --> 00:00:42,570
professional devices or between<font color="#E5E5E5"> from</font>

13
00:00:41,250 --> 00:00:43,739
point-to-point video<font color="#CCCCCC"> or</font>

14
00:00:42,570 --> 00:00:45,899
<font color="#CCCCCC">point-to-multipoint video not</font>

15
00:00:43,739 --> 00:00:48,510
necessarily to<font color="#CCCCCC"> end-users so during the</font>

16
00:00:45,899 --> 00:00:50,879
production process<font color="#CCCCCC"> often</font><font color="#E5E5E5"> so not in the</font>

17
00:00:48,510 --> 00:00:52,860
browser but between<font color="#E5E5E5"> different video</font>

18
00:00:50,879 --> 00:00:55,559
<font color="#CCCCCC">devices that are not browser-based</font>

19
00:00:52,860 --> 00:00:57,360
at a really low<font color="#CCCCCC"> latency and</font><font color="#E5E5E5"> the goal is</font>

20
00:00:55,559 --> 00:00:59,309
<font color="#E5E5E5">really to have packet recovery on the</font>

21
00:00:57,360 --> 00:01:01,530
<font color="#CCCCCC">lossy network it says</font><font color="#E5E5E5"> internet but this</font>

22
00:00:59,309 --> 00:01:03,239
could also<font color="#E5E5E5"> be a lossy one of some sort</font>

23
00:01:01,530 --> 00:01:04,530
may may not<font color="#E5E5E5"> necessarily be the</font><font color="#CCCCCC"> Internet</font>

24
00:01:03,239 --> 00:01:05,700
<font color="#CCCCCC">it</font><font color="#E5E5E5"> could could be</font><font color="#CCCCCC"> a wireless</font><font color="#E5E5E5"> link for</font>

25
00:01:04,530 --> 00:01:08,340
example<font color="#CCCCCC"> between</font><font color="#E5E5E5"> different to different</font>

26
00:01:05,700 --> 00:01:10,440
<font color="#E5E5E5">places and the other kind of goal is</font>

27
00:01:08,340 --> 00:01:12,450
backwards compatibility so at the moment

28
00:01:10,440 --> 00:01:16,590
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> much all of this stuff is</font><font color="#CCCCCC"> done</font>

29
00:01:12,450 --> 00:01:18,000
with a transport stream in UDP and the

30
00:01:16,590 --> 00:01:20,970
goal<font color="#E5E5E5"> of what they're</font><font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> achieve</font>

31
00:01:18,000 --> 00:01:22,380
in<font color="#CCCCCC"> wrists</font><font color="#E5E5E5"> is to do that have some level</font>

32
00:01:20,970 --> 00:01:24,780
<font color="#CCCCCC">of backward compatibility so you could</font>

33
00:01:22,380 --> 00:01:26,880
send to<font color="#CCCCCC"> a non</font><font color="#E5E5E5"> risk capable device and it</font>

34
00:01:24,780 --> 00:01:27,990
<font color="#E5E5E5">will at least operate normally it may it</font>

35
00:01:26,880 --> 00:01:29,130
may it may not be able<font color="#E5E5E5"> to gain</font><font color="#CCCCCC"> the</font>

36
00:01:27,990 --> 00:01:33,598
<font color="#CCCCCC">benefits of risk but it will still work</font>

37
00:01:29,130 --> 00:01:36,720
<font color="#CCCCCC">so the background to this who came up</font>

38
00:01:33,599 --> 00:01:37,740
<font color="#E5E5E5">with</font><font color="#CCCCCC"> risk</font><font color="#E5E5E5"> and this is it unusually at an</font>

39
00:01:36,720 --> 00:01:39,330
open source of event this<font color="#CCCCCC"> is a</font>

40
00:01:37,740 --> 00:01:42,509
specification written by a closed

41
00:01:39,330 --> 00:01:43,560
<font color="#E5E5E5">industry</font><font color="#CCCCCC"> forum of manufacturers but</font>

42
00:01:42,509 --> 00:01:46,679
there's a bright<font color="#CCCCCC"> side</font><font color="#E5E5E5"> I'll talk about in</font>

43
00:01:43,560 --> 00:01:48,030
a minute<font color="#CCCCCC"> and they haven't any interested</font>

44
00:01:46,679 --> 00:01:49,679
in that there's a<font color="#E5E5E5"> lot of all this</font>

45
00:01:48,030 --> 00:01:51,090
reliable internet streaming kind of

46
00:01:49,679 --> 00:01:52,560
technology already<font color="#E5E5E5"> done in a proprietary</font>

47
00:01:51,090 --> 00:01:53,910
<font color="#E5E5E5">domain at the moment there's lots of</font>

48
00:01:52,560 --> 00:01:56,280
different proprietary<font color="#E5E5E5"> protocols that</font>

49
00:01:53,910 --> 00:01:58,700
people use and they want the<font color="#CCCCCC"> ability to</font>

50
00:01:56,280 --> 00:02:01,080
<font color="#E5E5E5">have something open standard based and</font>

51
00:01:58,700 --> 00:02:02,489
ideally building<font color="#E5E5E5"> on IETF you can see</font>

52
00:02:01,080 --> 00:02:03,959
that they've gone<font color="#E5E5E5"> and</font><font color="#CCCCCC"> done their own</font>

53
00:02:02,489 --> 00:02:06,420
thing a little<font color="#E5E5E5"> bit here</font>

54
00:02:03,959 --> 00:02:08,009
rightly or<font color="#CCCCCC"> wrongly</font><font color="#E5E5E5"> but the idea is to</font>

55
00:02:06,420 --> 00:02:09,300
build<font color="#E5E5E5"> on existing IETF standards which</font>

56
00:02:08,008 --> 00:02:11,190
are<font color="#E5E5E5"> free and</font><font color="#CCCCCC"> open source and published</font>

57
00:02:09,300 --> 00:02:14,280
and so<font color="#E5E5E5"> wrist was published in October</font>

58
00:02:11,190 --> 00:02:16,019
<font color="#CCCCCC">2018</font><font color="#E5E5E5"> and what was unusual</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> is</font>

59
00:02:14,280 --> 00:02:17,610
wrist was published<font color="#E5E5E5"> under a Creative</font>

60
00:02:16,019 --> 00:02:18,180
Commons license<font color="#E5E5E5"> so usually</font><font color="#CCCCCC"> most things</font>

61
00:02:17,610 --> 00:02:21,209
in broad

62
00:02:18,180 --> 00:02:22,859
designed actually to keep people out to

63
00:02:21,209 --> 00:02:24,870
<font color="#CCCCCC">actually gate keep a bit like</font><font color="#E5E5E5"> for</font>

64
00:02:22,859 --> 00:02:27,329
scientific publishing news industry<font color="#E5E5E5"> it's</font>

65
00:02:24,870 --> 00:02:29,280
exactly the same phenomenon<font color="#E5E5E5"> things are</font>

66
00:02:27,329 --> 00:02:32,579
kept<font color="#E5E5E5"> behind paywalls they're kept behind</font>

67
00:02:29,280 --> 00:02:34,019
secrecy<font color="#E5E5E5"> so design to make sure only</font><font color="#CCCCCC"> a</font>

68
00:02:32,579 --> 00:02:36,269
few<font color="#E5E5E5"> people can implement it a few people</font>

69
00:02:34,019 --> 00:02:37,560
<font color="#E5E5E5">can understand it and if you were here</font>

70
00:02:36,269 --> 00:02:38,730
<font color="#CCCCCC">in the last</font><font color="#E5E5E5"> presentation and it's not</font>

71
00:02:37,560 --> 00:02:40,980
villains fault cause<font color="#E5E5E5"> villain is trying</font>

72
00:02:38,730 --> 00:02:43,230
to improve things but<font color="#E5E5E5"> he used a lot of</font>

73
00:02:40,980 --> 00:02:44,790
<font color="#E5E5E5">acronyms and a lot of</font><font color="#CCCCCC"> terms and if this</font>

74
00:02:43,230 --> 00:02:47,010
is all deliberately or otherwise there

75
00:02:44,790 --> 00:02:49,138
to make it<font color="#E5E5E5"> not</font><font color="#CCCCCC"> possible for people</font><font color="#E5E5E5"> to</font>

76
00:02:47,010 --> 00:02:50,429
understand so that<font color="#CCCCCC"> only a few</font><font color="#E5E5E5"> people can</font>

77
00:02:49,139 --> 00:02:51,780
understand this and<font color="#E5E5E5"> make a lot of money</font>

78
00:02:50,430 --> 00:02:53,069
<font color="#CCCCCC">out of it</font><font color="#E5E5E5"> and not have</font><font color="#CCCCCC"> open-source</font>

79
00:02:51,780 --> 00:02:55,950
<font color="#CCCCCC">implementation</font><font color="#E5E5E5"> so this is actually</font>

80
00:02:53,069 --> 00:02:57,689
<font color="#E5E5E5">although lots of the process was bad</font>

81
00:02:55,950 --> 00:02:59,040
<font color="#E5E5E5">from</font><font color="#CCCCCC"> an open-source standpoint</font>

82
00:02:57,689 --> 00:03:00,569
<font color="#E5E5E5">publishing under Creative Commons</font>

83
00:02:59,040 --> 00:03:02,189
license is<font color="#E5E5E5"> a big deal because it lets</font>

84
00:03:00,569 --> 00:03:03,599
people<font color="#CCCCCC"> actually understand and</font><font color="#E5E5E5"> implement</font>

85
00:03:02,189 --> 00:03:05,790
this<font color="#E5E5E5"> and find</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> problems instead of</font>

86
00:03:03,599 --> 00:03:09,388
you<font color="#CCCCCC"> know living in</font><font color="#E5E5E5"> acronyms soup where</font>

87
00:03:05,790 --> 00:03:12,239
things are closed and<font color="#E5E5E5"> yeah so why not</font>

88
00:03:09,389 --> 00:03:13,829
<font color="#CCCCCC">tcp is the question that's obvious</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> i</font>

89
00:03:12,239 --> 00:03:15,239
can't go into<font color="#CCCCCC"> this because you could</font>

90
00:03:13,829 --> 00:03:17,909
write a<font color="#E5E5E5"> book about this this is a whole</font>

91
00:03:15,239 --> 00:03:20,430
research<font color="#E5E5E5"> field in itself but at least to</font>

92
00:03:17,909 --> 00:03:22,108
begin<font color="#E5E5E5"> with traditional tcp drops</font>

93
00:03:20,430 --> 00:03:24,060
transmission rate with packet loss

94
00:03:22,109 --> 00:03:25,500
<font color="#E5E5E5">there's lots of work you know the dev</font>

95
00:03:24,060 --> 00:03:27,959
rooms you can<font color="#E5E5E5"> find out about how they're</font>

96
00:03:25,500 --> 00:03:30,299
changing<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in actually in our use</font>

97
00:03:27,959 --> 00:03:32,970
case we don't generally<font color="#E5E5E5"> have throughput</font>

98
00:03:30,299 --> 00:03:35,069
drops per se and<font color="#CCCCCC"> i</font><font color="#E5E5E5"> talked about how that</font>

99
00:03:32,970 --> 00:03:37,530
might<font color="#E5E5E5"> be different later but generally</font>

100
00:03:35,069 --> 00:03:38,970
we just have random packet loss packet

101
00:03:37,530 --> 00:03:40,290
loss because of<font color="#E5E5E5"> switch capacities packet</font>

102
00:03:38,970 --> 00:03:42,199
loss for other reasons<font color="#CCCCCC"> and we don't</font>

103
00:03:40,290 --> 00:03:45,328
necessarily<font color="#E5E5E5"> want this is usually</font><font color="#CCCCCC"> a</font>

104
00:03:42,199 --> 00:03:46,979
constant bitrate transport stream and we

105
00:03:45,329 --> 00:03:49,819
want still constant throughput<font color="#E5E5E5"> and we</font>

106
00:03:46,979 --> 00:03:52,500
just want random packet loss<font color="#CCCCCC"> to be fixed</font>

107
00:03:49,819 --> 00:03:55,560
<font color="#CCCCCC">at UDP itself has native</font><font color="#E5E5E5"> support for</font>

108
00:03:52,500 --> 00:03:57,449
multicast<font color="#CCCCCC"> so I mentioned for example</font><font color="#E5E5E5"> if</font>

109
00:03:55,560 --> 00:03:59,609
you had a one it's very<font color="#E5E5E5"> common to</font>

110
00:03:57,449 --> 00:04:03,659
multicast traffic across<font color="#E5E5E5"> that one in a</font>

111
00:03:59,609 --> 00:04:05,519
closed environment<font color="#CCCCCC"> it's quite</font><font color="#E5E5E5"> easy then</font>

112
00:04:03,659 --> 00:04:06,530
to<font color="#CCCCCC"> have specific</font><font color="#E5E5E5"> receivers</font><font color="#CCCCCC"> request</font>

113
00:04:05,519 --> 00:04:10,349
retransmits

114
00:04:06,530 --> 00:04:12,509
<font color="#CCCCCC">as a result so</font><font color="#E5E5E5"> a particular receiver can</font>

115
00:04:10,349 --> 00:04:13,948
go<font color="#E5E5E5"> and you could have a single sender</font>

116
00:04:12,509 --> 00:04:15,779
sending to hundreds of<font color="#E5E5E5"> different devices</font>

117
00:04:13,949 --> 00:04:17,250
<font color="#CCCCCC">and each receiver</font><font color="#E5E5E5"> could go and request</font><font color="#CCCCCC"> a</font>

118
00:04:15,780 --> 00:04:18,899
retransmit in a multicast<font color="#CCCCCC"> environment</font>

119
00:04:17,250 --> 00:04:20,298
quite easily if they happen to be lost

120
00:04:18,899 --> 00:04:22,500
on<font color="#E5E5E5"> a particular network segment</font>

121
00:04:20,298 --> 00:04:24,388
<font color="#CCCCCC">backwards</font><font color="#E5E5E5"> compatibility as I mentioned</font>

122
00:04:22,500 --> 00:04:26,940
<font color="#CCCCCC">again want to</font><font color="#E5E5E5"> send risk streams to</font>

123
00:04:24,389 --> 00:04:30,050
existing<font color="#CCCCCC"> devices it's also a lot easier</font>

124
00:04:26,940 --> 00:04:31,990
<font color="#E5E5E5">in UDP</font><font color="#CCCCCC"> LAN to do</font><font color="#E5E5E5"> multiple thing to send</font>

125
00:04:30,050 --> 00:04:35,740
to send<font color="#E5E5E5"> traffic down</font>

126
00:04:31,990 --> 00:04:37,750
to pull<font color="#E5E5E5"> internet connections</font><font color="#CCCCCC"> and also</font>

127
00:04:35,740 --> 00:04:39,850
<font color="#E5E5E5">the other interesting thing about UDP</font>

128
00:04:37,750 --> 00:04:41,200
itself is and this<font color="#CCCCCC"> is becoming</font><font color="#E5E5E5"> more</font>

129
00:04:39,850 --> 00:04:43,090
common for<font color="#CCCCCC"> example on the web with</font>

130
00:04:41,200 --> 00:04:45,550
protocols like quick<font color="#E5E5E5"> wife UTP 3 now</font>

131
00:04:43,090 --> 00:04:47,229
<font color="#CCCCCC">let's the application handle all the</font>

132
00:04:45,550 --> 00:04:48,490
<font color="#CCCCCC">congestion control decisions</font><font color="#E5E5E5"> and that</font>

133
00:04:47,230 --> 00:04:49,960
means people<font color="#CCCCCC"> can do all sorts of</font>

134
00:04:48,490 --> 00:04:53,440
interesting<font color="#CCCCCC"> things you're not curtailed</font>

135
00:04:49,960 --> 00:04:57,370
by<font color="#CCCCCC"> the</font><font color="#E5E5E5"> legacy of the</font><font color="#CCCCCC"> colonel that</font><font color="#E5E5E5"> the</font>

136
00:04:53,440 --> 00:04:59,040
sender or receiver is using which you

137
00:04:57,370 --> 00:05:01,540
<font color="#CCCCCC">may</font><font color="#E5E5E5"> not be able to change in some</font><font color="#CCCCCC"> cases</font>

138
00:04:59,040 --> 00:05:03,760
<font color="#E5E5E5">so what are things</font><font color="#CCCCCC"> done corrupt so what</font>

139
00:05:01,540 --> 00:05:05,970
did<font color="#E5E5E5"> people use currently really</font><font color="#CCCCCC"> actually</font>

140
00:05:03,760 --> 00:05:08,200
<font color="#E5E5E5">really really basic</font><font color="#CCCCCC"> 1990s technology</font>

141
00:05:05,970 --> 00:05:11,140
forward<font color="#E5E5E5"> error correction and this is an</font>

142
00:05:08,200 --> 00:05:14,560
example<font color="#E5E5E5"> of it</font><font color="#CCCCCC"> 70</font><font color="#E5E5E5"> 20</font><font color="#CCCCCC"> 20 3-1 really</font><font color="#E5E5E5"> really</font>

143
00:05:11,140 --> 00:05:16,539
basic in this case so it's built<font color="#CCCCCC"> around</font>

144
00:05:14,560 --> 00:05:18,940
the<font color="#CCCCCC"> idea of these packet groups in rows</font>

145
00:05:16,540 --> 00:05:21,130
and<font color="#E5E5E5"> columns</font><font color="#CCCCCC"> so in turn if you can see</font>

146
00:05:18,940 --> 00:05:23,050
the colors<font color="#CCCCCC"> very well but row FEC is</font>

147
00:05:21,130 --> 00:05:25,000
shown in blue and<font color="#E5E5E5"> as a packet is lost</font>

148
00:05:23,050 --> 00:05:28,240
across<font color="#E5E5E5"> a row that's corrected</font><font color="#CCCCCC"> using the</font>

149
00:05:25,000 --> 00:05:30,070
FEC packet and same with the columns so

150
00:05:28,240 --> 00:05:32,050
if<font color="#CCCCCC"> a packets</font><font color="#E5E5E5"> lost in a column the red</font>

151
00:05:30,070 --> 00:05:34,180
packet can<font color="#CCCCCC"> be used as a very simples</font><font color="#E5E5E5"> or</font>

152
00:05:32,050 --> 00:05:36,490
operation can<font color="#E5E5E5"> be used</font><font color="#CCCCCC"> XOR operation</font><font color="#E5E5E5"> can</font>

153
00:05:34,180 --> 00:05:38,380
<font color="#E5E5E5">be used to correct</font><font color="#CCCCCC"> that packet but the</font>

154
00:05:36,490 --> 00:05:41,170
biggest<font color="#E5E5E5"> problem</font><font color="#CCCCCC"> is those</font><font color="#E5E5E5"> matrix matrices</font>

155
00:05:38,380 --> 00:05:43,480
have bounded size and you can't<font color="#E5E5E5"> handle</font>

156
00:05:41,170 --> 00:05:44,530
<font color="#CCCCCC">any loss larger than the</font><font color="#E5E5E5"> matrix so</font>

157
00:05:43,480 --> 00:05:46,450
retransmits

158
00:05:44,530 --> 00:05:49,659
<font color="#E5E5E5">or</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> possible work the other solution to</font>

159
00:05:46,450 --> 00:05:52,270
this<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> already existing open</font>

160
00:05:49,660 --> 00:05:54,400
<font color="#CCCCCC">source software that does this it's a</font>

161
00:05:52,270 --> 00:05:59,620
problem<font color="#CCCCCC"> certain people</font><font color="#E5E5E5"> have been trying</font>

162
00:05:54,400 --> 00:06:01,989
<font color="#CCCCCC">to solve for</font><font color="#E5E5E5"> one since 2007</font><font color="#CCCCCC"> a great RTP</font>

163
00:05:59,620 --> 00:06:04,570
from<font color="#CCCCCC"> video LAN</font><font color="#E5E5E5"> was one of them it to be</font>

164
00:06:01,990 --> 00:06:06,430
honest<font color="#CCCCCC"> the author did it when it wasn't</font>

165
00:06:04,570 --> 00:06:09,070
cool no one was really doing this at the

166
00:06:06,430 --> 00:06:11,400
time<font color="#E5E5E5"> this was considered not</font><font color="#CCCCCC"> ofay and</font>

167
00:06:09,070 --> 00:06:13,750
now it's quite commonplace and

168
00:06:11,400 --> 00:06:16,390
<font color="#CCCCCC">aggregated CPU is an example such that</font>

169
00:06:13,750 --> 00:06:19,060
it lets you aggregate links but also as

170
00:06:16,390 --> 00:06:21,580
a side effect has retransmission

171
00:06:19,060 --> 00:06:23,380
<font color="#CCCCCC">built-in there's also as</font><font color="#E5E5E5"> I've last</font><font color="#CCCCCC"> year</font>

172
00:06:21,580 --> 00:06:26,140
<font color="#E5E5E5">SRT from I think it's a Canadian company</font>

173
00:06:23,380 --> 00:06:27,760
<font color="#E5E5E5">high vision</font><font color="#CCCCCC"> it's a pretty monolithic</font>

174
00:06:26,140 --> 00:06:30,550
code base<font color="#CCCCCC"> so I would say it does the</font>

175
00:06:27,760 --> 00:06:32,890
same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> it does retransmits</font><font color="#E5E5E5"> quite</font>

176
00:06:30,550 --> 00:06:34,120
easily<font color="#CCCCCC"> I would say personally they built</font>

177
00:06:32,890 --> 00:06:38,020
it around<font color="#E5E5E5"> a file transfer</font><font color="#CCCCCC"> application</font>

178
00:06:34,120 --> 00:06:41,680
<font color="#E5E5E5">and then added live the big</font><font color="#CCCCCC"> downside is</font>

179
00:06:38,020 --> 00:06:43,030
it<font color="#E5E5E5"> supports</font><font color="#CCCCCC"> single link at the moment my</font>

180
00:06:41,680 --> 00:06:44,950
<font color="#E5E5E5">understanding but someone can shoot me</font>

181
00:06:43,030 --> 00:06:45,849
if<font color="#E5E5E5"> I'm wrong is they have a proprietary</font>

182
00:06:44,950 --> 00:06:47,259
<font color="#CCCCCC">at all it does</font>

183
00:06:45,849 --> 00:06:49,270
multiple links but shoot me if I'm wrong

184
00:06:47,259 --> 00:06:52,240
one big<font color="#E5E5E5"> advantage it has built an</font>

185
00:06:49,270 --> 00:06:54,729
encryption<font color="#E5E5E5"> that is a big thing and to be</font>

186
00:06:52,240 --> 00:06:56,080
first<font color="#CCCCCC"> ISM it's a very complex code base</font>

187
00:06:54,729 --> 00:06:58,300
<font color="#E5E5E5">and people have lost</font><font color="#CCCCCC"> for specification</font>

188
00:06:56,080 --> 00:07:00,219
and<font color="#E5E5E5"> they actually wrote one</font><font color="#CCCCCC"> to to my</font>

189
00:06:58,300 --> 00:07:01,899
shock<font color="#E5E5E5"> and it's actually 89 pages and</font>

190
00:07:00,219 --> 00:07:04,300
exceptionally detailed<font color="#E5E5E5"> it's a very</font>

191
00:07:01,899 --> 00:07:05,709
complex protocol and to be<font color="#E5E5E5"> fair to them</font>

192
00:07:04,300 --> 00:07:07,029
if<font color="#E5E5E5"> someone actually had to you know no</font>

193
00:07:05,709 --> 00:07:08,619
<font color="#CCCCCC">two</font><font color="#E5E5E5"> people sat down</font><font color="#CCCCCC"> actually wrote this</font>

194
00:07:07,029 --> 00:07:09,669
<font color="#E5E5E5">thing which is amazing and</font><font color="#CCCCCC"> as I</font>

195
00:07:08,619 --> 00:07:11,110
mentioned<font color="#E5E5E5"> before various other</font>

196
00:07:09,669 --> 00:07:13,419
proprietary<font color="#E5E5E5"> solutions and they're all</font>

197
00:07:11,110 --> 00:07:14,979
some variant of the FEC I showed before

198
00:07:13,419 --> 00:07:16,688
usually hope well hopefully<font color="#E5E5E5"> something</font>

199
00:07:14,979 --> 00:07:18,128
<font color="#E5E5E5">more advanced than this 1990 stuff so</font>

200
00:07:16,689 --> 00:07:19,949
there's much more advanced<font color="#E5E5E5"> FEC out there</font>

201
00:07:18,129 --> 00:07:22,929
has much better protection and

202
00:07:19,949 --> 00:07:25,719
retransmissions so they're mixing some

203
00:07:22,929 --> 00:07:28,058
kind of solution<font color="#E5E5E5"> around that I forgot to</font>

204
00:07:25,719 --> 00:07:29,439
<font color="#E5E5E5">mention before the other downside</font><font color="#CCCCCC"> of FPC</font>

205
00:07:28,059 --> 00:07:31,869
is there's quite a lot<font color="#CCCCCC"> of overhead</font><font color="#E5E5E5"> so if</font>

206
00:07:29,439 --> 00:07:34,119
you don't actually<font color="#E5E5E5"> have loss you can</font>

207
00:07:31,869 --> 00:07:35,649
waste up to<font color="#CCCCCC"> I think 25%</font><font color="#E5E5E5"> overhead just</font>

208
00:07:34,119 --> 00:07:39,490
adding these matrices that<font color="#E5E5E5"> you won't</font>

209
00:07:35,649 --> 00:07:40,509
actually<font color="#E5E5E5"> end up</font><font color="#CCCCCC"> using so sort of</font><font color="#E5E5E5"> a quick</font>

210
00:07:39,490 --> 00:07:42,639
primer to<font color="#CCCCCC"> RTP</font>

211
00:07:40,509 --> 00:07:45,159
a real-time transport protocol and rtcp

212
00:07:42,639 --> 00:07:46,179
it's a<font color="#CCCCCC"> real-time control protocol that's</font>

213
00:07:45,159 --> 00:07:48,998
right

214
00:07:46,179 --> 00:07:51,008
these are the main protocols<font color="#E5E5E5"> used for</font>

215
00:07:48,999 --> 00:07:53,829
udp-based live video<font color="#CCCCCC"> for</font><font color="#E5E5E5"> example</font>

216
00:07:51,009 --> 00:07:57,339
WebRTC<font color="#CCCCCC"> example</font><font color="#E5E5E5"> uses RTP</font><font color="#CCCCCC"> various other</font>

217
00:07:53,829 --> 00:08:00,069
applications<font color="#E5E5E5"> so usually the main traffic</font>

218
00:07:57,339 --> 00:08:02,919
is sent<font color="#E5E5E5"> on port</font><font color="#CCCCCC"> N and then</font><font color="#E5E5E5"> n</font><font color="#CCCCCC"> plus one</font><font color="#E5E5E5"> is</font>

219
00:08:00,069 --> 00:08:05,169
for<font color="#E5E5E5"> the control and feedback data so</font>

220
00:08:02,919 --> 00:08:08,619
what the sender does is periodically

221
00:08:05,169 --> 00:08:10,719
send<font color="#CCCCCC"> our TCP packets on port n plus one</font>

222
00:08:08,619 --> 00:08:12,639
to keep<font color="#E5E5E5"> state and now I have an example</font>

223
00:08:10,719 --> 00:08:14,259
<font color="#CCCCCC">of</font><font color="#E5E5E5"> that in a minute</font><font color="#CCCCCC"> so they receive and</font>

224
00:08:12,639 --> 00:08:17,499
then the receiver responds using

225
00:08:14,259 --> 00:08:19,599
<font color="#E5E5E5">receiver report</font><font color="#CCCCCC"> or TCP</font><font color="#E5E5E5"> packets and if</font>

226
00:08:17,499 --> 00:08:21,699
grandly described isn't that traversal

227
00:08:19,599 --> 00:08:23,469
but it's a not<font color="#CCCCCC"> really natural</font><font color="#E5E5E5"> versatile</font>

228
00:08:21,699 --> 00:08:25,509
per se it's as I'll show in<font color="#E5E5E5"> a second</font>

229
00:08:23,469 --> 00:08:27,459
this is a<font color="#CCCCCC"> permit this</font><font color="#E5E5E5"> is a standard</font>

230
00:08:25,509 --> 00:08:30,099
functionality<font color="#CCCCCC"> of</font><font color="#E5E5E5"> not and what's what's</font>

231
00:08:27,459 --> 00:08:32,860
useful<font color="#E5E5E5"> is this RTP not or TCP can be of</font>

232
00:08:30,099 --> 00:08:35,078
a multiple link so main video goes<font color="#CCCCCC"> that</font>

233
00:08:32,860 --> 00:08:38,620
main content usually video goes over<font color="#CCCCCC"> the</font>

234
00:08:35,078 --> 00:08:40,419
main<font color="#E5E5E5"> pull</font><font color="#CCCCCC"> N and rtcp over n plus one</font><font color="#E5E5E5"> so</font>

235
00:08:38,620 --> 00:08:42,459
this<font color="#E5E5E5"> diagram shows not traversal quote</font>

236
00:08:40,419 --> 00:08:45,670
<font color="#E5E5E5">unquote</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> action the sender sends</font><font color="#CCCCCC"> a</font>

237
00:08:42,458 --> 00:08:47,500
<font color="#CCCCCC">some tpod sender sends RTP feeds usually</font>

238
00:08:45,670 --> 00:08:49,120
the sender<font color="#CCCCCC"> is behind</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> firewall so I can</font>

239
00:08:47,500 --> 00:08:51,100
rock up somewhere<font color="#E5E5E5"> like frost them as a</font>

240
00:08:49,120 --> 00:08:53,730
hopefully this will be<font color="#E5E5E5"> able to show</font>

241
00:08:51,100 --> 00:08:55,660
<font color="#CCCCCC">plugin</font><font color="#E5E5E5"> that's usually knotted and</font>

242
00:08:53,730 --> 00:08:57,309
receivers are<font color="#E5E5E5"> usually in a sort of</font>

243
00:08:55,660 --> 00:08:59,230
central facility where port forwarding

244
00:08:57,309 --> 00:09:02,589
<font color="#E5E5E5">and</font><font color="#CCCCCC"> firewall</font><font color="#E5E5E5"> you know rule</font>

245
00:08:59,230 --> 00:09:07,320
<font color="#E5E5E5">controls can</font><font color="#CCCCCC"> be done so sender sends a</font>

246
00:09:02,590 --> 00:09:10,810
feed down put<font color="#E5E5E5"> n rtcp packets go across</font>

247
00:09:07,320 --> 00:09:12,910
on n plus<font color="#CCCCCC"> one to the</font><font color="#E5E5E5"> receiver behind the</font>

248
00:09:10,810 --> 00:09:15,369
firewall<font color="#CCCCCC"> the</font><font color="#E5E5E5"> receiver then swaps the</font>

249
00:09:12,910 --> 00:09:18,069
source<font color="#E5E5E5"> port and destination ports sends</font>

250
00:09:15,370 --> 00:09:20,890
it sends a return messages back to<font color="#CCCCCC"> the</font>

251
00:09:18,070 --> 00:09:22,720
external method source port and lists

252
00:09:20,890 --> 00:09:25,000
and<font color="#E5E5E5"> as a result the stateful NAT passes</font>

253
00:09:22,720 --> 00:09:26,920
it through so this<font color="#E5E5E5"> actually surprises</font>

254
00:09:25,000 --> 00:09:28,450
lots<font color="#E5E5E5"> of people when they realize you can</font>

255
00:09:26,920 --> 00:09:31,060
do<font color="#E5E5E5"> that but this</font><font color="#CCCCCC"> is exactly how DNS</font>

256
00:09:28,450 --> 00:09:32,500
<font color="#E5E5E5">works so you do DNS</font><font color="#CCCCCC"> when you do</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> DNS</font>

257
00:09:31,060 --> 00:09:34,420
it sends<font color="#CCCCCC"> unis</font><font color="#E5E5E5"> we pack</font><font color="#CCCCCC"> it up to a DNS</font>

258
00:09:32,500 --> 00:09:35,770
server<font color="#CCCCCC"> you're on that</font><font color="#E5E5E5"> at home assuming</font>

259
00:09:34,420 --> 00:09:41,620
you're using you know one<font color="#E5E5E5"> that one that</font>

260
00:09:35,770 --> 00:09:43,120
one or<font color="#CCCCCC"> 8.88</font><font color="#E5E5E5"> not your route of</font><font color="#CCCCCC"> DNS you</font>

261
00:09:41,620 --> 00:09:44,410
send out<font color="#CCCCCC"> you DV you do we pack it</font><font color="#E5E5E5"> to one</font>

262
00:09:43,120 --> 00:09:46,480
<font color="#E5E5E5">this DNS server and it responds in</font>

263
00:09:44,410 --> 00:09:48,069
exactly the same fashion so that's why I

264
00:09:46,480 --> 00:09:49,390
was saying<font color="#E5E5E5"> it's a bit grand to call this</font>

265
00:09:48,070 --> 00:09:51,580
natural<font color="#E5E5E5"> versal this is basic</font><font color="#CCCCCC"> NAT</font>

266
00:09:49,390 --> 00:09:53,380
functionality but some people seem to

267
00:09:51,580 --> 00:09:57,610
think<font color="#E5E5E5"> this is a bit yeah</font><font color="#CCCCCC"> this seems to</font>

268
00:09:53,380 --> 00:10:02,290
be traversal based so<font color="#CCCCCC"> acknowledgments</font>

269
00:09:57,610 --> 00:10:04,360
and<font color="#E5E5E5"> so again RTP 101 sorry if you're</font>

270
00:10:02,290 --> 00:10:06,760
<font color="#E5E5E5">unaware of this every</font><font color="#CCCCCC"> LTB packet has a</font>

271
00:10:04,360 --> 00:10:09,280
sequence<font color="#E5E5E5"> number so as a number that the</font>

272
00:10:06,760 --> 00:10:13,090
increment<font color="#CCCCCC"> for every packet</font><font color="#E5E5E5"> unfortunately</font>

273
00:10:09,280 --> 00:10:14,790
<font color="#CCCCCC">at 16-bit</font><font color="#E5E5E5"> probably the RTP</font><font color="#CCCCCC"> developers</font>

274
00:10:13,090 --> 00:10:18,430
back in the 90s couldn't<font color="#E5E5E5"> really foresee</font>

275
00:10:14,790 --> 00:10:19,870
actually bandwidth<font color="#E5E5E5"> is quite high so 16</font>

276
00:10:18,430 --> 00:10:21,459
bits<font color="#CCCCCC"> actually wraps around pretty</font>

277
00:10:19,870 --> 00:10:23,440
quickly these days<font color="#E5E5E5"> certainly on high</font>

278
00:10:21,460 --> 00:10:26,440
bitrate video very<font color="#E5E5E5"> very quickly</font><font color="#CCCCCC"> in</font>

279
00:10:23,440 --> 00:10:27,940
<font color="#E5E5E5">uncompressed video so there's an</font><font color="#CCCCCC"> example</font>

280
00:10:26,440 --> 00:10:31,320
<font color="#E5E5E5">of what a negative</font><font color="#CCCCCC"> acknowledgment looks</font>

281
00:10:27,940 --> 00:10:33,940
like so<font color="#E5E5E5"> this is not like TTP where there</font>

282
00:10:31,320 --> 00:10:36,070
there are acts in general this<font color="#E5E5E5"> is just</font>

283
00:10:33,940 --> 00:10:38,980
negative acknowledgement so packets

284
00:10:36,070 --> 00:10:40,240
which aren't received<font color="#CCCCCC"> are requested for</font>

285
00:10:38,980 --> 00:10:41,710
<font color="#CCCCCC">retransmission and</font><font color="#E5E5E5"> I'll show you a bit</font>

286
00:10:40,240 --> 00:10:44,530
more<font color="#CCCCCC"> button</font><font color="#E5E5E5"> about that in a minute</font>

287
00:10:41,710 --> 00:10:47,470
so first packet comes through second one

288
00:10:44,530 --> 00:10:49,569
fails<font color="#E5E5E5"> the receiver then requests a</font>

289
00:10:47,470 --> 00:10:51,460
retransmit and the sender then transmits

290
00:10:49,570 --> 00:10:54,850
it back and I'll explain<font color="#E5E5E5"> that how the</font>

291
00:10:51,460 --> 00:10:56,350
signaling<font color="#E5E5E5"> works in a second so there's</font>

292
00:10:54,850 --> 00:10:57,580
two types<font color="#CCCCCC"> of negative</font><font color="#E5E5E5"> acknowledgement</font>

293
00:10:56,350 --> 00:10:59,410
message the<font color="#E5E5E5"> first of which is a bit</font>

294
00:10:57,580 --> 00:11:01,150
<font color="#CCCCCC">masked this is</font><font color="#E5E5E5"> already IETF standardized</font>

295
00:10:59,410 --> 00:11:04,360
already exists<font color="#CCCCCC"> for I think with decades</font>

296
00:11:01,150 --> 00:11:06,880
possibly<font color="#CCCCCC"> and it uses a base sequence</font>

297
00:11:04,360 --> 00:11:08,620
number the bits in bold adjust the the

298
00:11:06,880 --> 00:11:11,140
codes to identify that type of<font color="#CCCCCC"> our TCP</font>

299
00:11:08,620 --> 00:11:13,690
packet<font color="#E5E5E5"> uses a base sequence number and a</font>

300
00:11:11,140 --> 00:11:17,319
bit mask so in<font color="#E5E5E5"> in this example</font>

301
00:11:13,690 --> 00:11:19,150
the base of 100<font color="#E5E5E5"> is lost and then there's</font>

302
00:11:17,320 --> 00:11:20,500
a 16-bit<font color="#CCCCCC"> mass</font><font color="#E5E5E5"> showing how the next</font>

303
00:11:19,150 --> 00:11:22,120
following<font color="#E5E5E5"> 16-bit packets whether they be</font>

304
00:11:20,500 --> 00:11:23,610
received or they've<font color="#CCCCCC"> been lost</font><font color="#E5E5E5"> and then</font>

305
00:11:22,120 --> 00:11:27,310
you just come you<font color="#CCCCCC"> just add</font><font color="#E5E5E5"> more and</font><font color="#CCCCCC"> more</font>

306
00:11:23,610 --> 00:11:31,600
at the<font color="#E5E5E5"> bottom fields along to add to</font>

307
00:11:27,310 --> 00:11:32,619
show to show<font color="#E5E5E5"> subsequent packets being</font>

308
00:11:31,600 --> 00:11:34,780
lost<font color="#E5E5E5"> and this is really</font><font color="#CCCCCC"> useful for just</font>

309
00:11:32,620 --> 00:11:37,990
random packet loss the odd couple here

310
00:11:34,780 --> 00:11:41,230
<font color="#CCCCCC">and there and</font><font color="#E5E5E5"> then they've gone now</font><font color="#CCCCCC"> and</font>

311
00:11:37,990 --> 00:11:42,940
decided to<font color="#E5E5E5"> do their own finger bit</font><font color="#CCCCCC"> and</font>

312
00:11:41,230 --> 00:11:44,560
implemented ranges<font color="#E5E5E5"> so this is where you</font>

313
00:11:42,940 --> 00:11:47,440
have a range<font color="#E5E5E5"> so if you say I lose 100</font>

314
00:11:44,560 --> 00:11:50,140
packets this this field<font color="#CCCCCC"> this type of</font>

315
00:11:47,440 --> 00:11:53,830
<font color="#E5E5E5">packet is designed to signal ranges very</font>

316
00:11:50,140 --> 00:11:56,380
low very<font color="#E5E5E5"> very quickly so they've used</font>

317
00:11:53,830 --> 00:11:59,770
<font color="#E5E5E5">the application specific type 2</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> 4</font><font color="#CCCCCC"> and</font>

318
00:11:56,380 --> 00:12:02,950
there's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> ASCII string</font><font color="#CCCCCC"> our ast to signal</font>

319
00:11:59,770 --> 00:12:05,410
that<font color="#E5E5E5"> and you can see that they're losing</font>

320
00:12:02,950 --> 00:12:07,900
packets at the bottom so I<font color="#CCCCCC"> think it</font>

321
00:12:05,410 --> 00:12:09,790
<font color="#E5E5E5">starts 100</font><font color="#CCCCCC"> - do they lose 19 packets to</font>

322
00:12:07,900 --> 00:12:11,800
be<font color="#E5E5E5"> honest this is</font><font color="#CCCCCC"> kind of pointless</font>

323
00:12:09,790 --> 00:12:13,900
this is<font color="#CCCCCC"> over-engineering if if you've</font>

324
00:12:11,800 --> 00:12:15,699
lost<font color="#E5E5E5"> that many packets to begin with the</font>

325
00:12:13,900 --> 00:12:17,760
overhead have had it adding a<font color="#E5E5E5"> few more</font>

326
00:12:15,700 --> 00:12:19,750
of these<font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> going to sort of be</font>

327
00:12:17,760 --> 00:12:21,880
consequential<font color="#CCCCCC"> because you're</font><font color="#E5E5E5"> going to</font>

328
00:12:19,750 --> 00:12:24,340
have to retransmit so much you're going

329
00:12:21,880 --> 00:12:26,860
<font color="#E5E5E5">to save a few bytes</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> sending a range</font>

330
00:12:24,340 --> 00:12:28,450
packet but so what you're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

331
00:12:26,860 --> 00:12:30,310
<font color="#E5E5E5">to spend huge amounts of it back anyway</font>

332
00:12:28,450 --> 00:12:35,290
<font color="#E5E5E5">it's not as if the return channel is</font>

333
00:12:30,310 --> 00:12:36,579
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be busy and so how does the</font>

334
00:12:35,290 --> 00:12:38,860
receiver know when it receives a

335
00:12:36,580 --> 00:12:41,110
retransmission<font color="#CCCCCC"> as opposed to remain it</font>

336
00:12:38,860 --> 00:12:46,330
don't they've done this in<font color="#CCCCCC"> a really</font>

337
00:12:41,110 --> 00:12:49,000
<font color="#CCCCCC">bizarre way</font><font color="#E5E5E5"> so the SSRC I think is the</font>

338
00:12:46,330 --> 00:12:51,670
source<font color="#CCCCCC"> it's base I forget</font><font color="#E5E5E5"> the acronym</font>

339
00:12:49,000 --> 00:12:53,950
now but it's it's essentially an

340
00:12:51,670 --> 00:12:55,810
identifier<font color="#E5E5E5"> for the source and what</font>

341
00:12:53,950 --> 00:12:57,730
they've<font color="#CCCCCC"> done to signal a retransmission</font>

342
00:12:55,810 --> 00:13:01,359
is set the lowest significant bit<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

343
00:12:57,730 --> 00:13:02,440
SSRC to<font color="#CCCCCC"> one</font><font color="#E5E5E5"> as which is a really bizarre</font>

344
00:13:01,360 --> 00:13:06,310
way<font color="#E5E5E5"> of doing it because</font><font color="#CCCCCC"> there's already</font>

345
00:13:02,440 --> 00:13:07,330
an<font color="#CCCCCC"> existing standard RFC</font><font color="#E5E5E5"> 45 88 which you</font>

346
00:13:06,310 --> 00:13:09,219
can look<font color="#E5E5E5"> up and</font><font color="#CCCCCC"> you can see there's</font>

347
00:13:07,330 --> 00:13:10,780
already a way of signaling<font color="#E5E5E5"> exactly how</font>

348
00:13:09,220 --> 00:13:13,030
it<font color="#CCCCCC"> should have been</font><font color="#E5E5E5"> done so</font><font color="#CCCCCC"> they've come</font>

349
00:13:10,780 --> 00:13:14,890
<font color="#E5E5E5">up with this hack to do it that's almost</font>

350
00:13:13,030 --> 00:13:16,449
<font color="#E5E5E5">a decoder then knows what the what</font><font color="#CCCCCC"> the</font>

351
00:13:14,890 --> 00:13:17,800
retransmission is so it looks at the LSB

352
00:13:16,450 --> 00:13:20,339
and<font color="#E5E5E5"> says oh it's one so it's a</font>

353
00:13:17,800 --> 00:13:22,390
retransmission then it can then<font color="#CCCCCC"> it can</font>

354
00:13:20,339 --> 00:13:24,970
figure out<font color="#CCCCCC"> - retransmission and</font><font color="#E5E5E5"> put the</font>

355
00:13:22,390 --> 00:13:26,560
packet straight into its buffer<font color="#E5E5E5"> where it</font>

356
00:13:24,970 --> 00:13:29,230
needs<font color="#E5E5E5"> to be</font>

357
00:13:26,560 --> 00:13:31,660
and then the rest<font color="#E5E5E5"> of it as I mentioned</font>

358
00:13:29,230 --> 00:13:33,819
becomes application-specific so the rate

359
00:13:31,660 --> 00:13:34,540
at<font color="#CCCCCC"> which the receiver requests</font>

360
00:13:33,819 --> 00:13:36,459
retransmits

361
00:13:34,540 --> 00:13:37,660
that's completely implementation defined

362
00:13:36,459 --> 00:13:40,359
so it<font color="#E5E5E5"> means people can do all</font><font color="#CCCCCC"> sorts of</font>

363
00:13:37,660 --> 00:13:41,800
weird trickery if they wanted<font color="#CCCCCC"> to there's</font>

364
00:13:40,360 --> 00:13:43,720
a whole bunch of problems<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> just</font>

365
00:13:41,800 --> 00:13:45,729
completely independently defined how to

366
00:13:43,720 --> 00:13:47,829
handle<font color="#E5E5E5"> so let's say let's say the</font>

367
00:13:45,730 --> 00:13:49,839
connectivity cuts for a second or<font color="#CCCCCC"> two</font>

368
00:13:47,829 --> 00:13:52,120
seconds<font color="#E5E5E5"> and you have to</font><font color="#CCCCCC"> retransmit you</font>

369
00:13:49,839 --> 00:13:54,399
know tens of thousands<font color="#E5E5E5"> of packets how do</font>

370
00:13:52,120 --> 00:13:55,930
you handle this thundering herd response

371
00:13:54,399 --> 00:13:57,759
and<font color="#E5E5E5"> that's you know that's if that's an</font>

372
00:13:55,930 --> 00:14:00,099
implementation defined problem that's

373
00:13:57,759 --> 00:14:01,480
not really we not<font color="#E5E5E5"> even sure how you</font>

374
00:14:00,100 --> 00:14:06,100
could<font color="#CCCCCC"> really explain</font><font color="#E5E5E5"> it in the protocol</font>

375
00:14:01,480 --> 00:14:07,389
<font color="#E5E5E5">itself so implementation wise there's</font>

376
00:14:06,100 --> 00:14:08,829
two open source ones that I<font color="#E5E5E5"> know of</font>

377
00:14:07,389 --> 00:14:10,779
there might be some others there's new

378
00:14:08,829 --> 00:14:13,300
pipe which<font color="#CCCCCC"> in example</font><font color="#E5E5E5"> two actually</font>

379
00:14:10,779 --> 00:14:14,860
hopefully I will take the risk of<font color="#CCCCCC"> the</font>

380
00:14:13,300 --> 00:14:18,219
live demo<font color="#E5E5E5"> and show</font><font color="#CCCCCC"> you that and there's</font>

381
00:14:14,860 --> 00:14:19,600
VLC within I think<font color="#E5E5E5"> 4.0</font><font color="#CCCCCC"> J BT</font><font color="#E5E5E5"> which has</font>

382
00:14:18,220 --> 00:14:21,970
the<font color="#E5E5E5"> risk protocol and there's a bunch of</font>

383
00:14:19,600 --> 00:14:24,069
proprietary solutions video<font color="#CCCCCC"> flow 6e and</font>

384
00:14:21,970 --> 00:14:26,920
I think some also some<font color="#E5E5E5"> hardware ones so</font>

385
00:14:24,069 --> 00:14:28,149
we've tested<font color="#E5E5E5"> all four of those</font><font color="#CCCCCC"> in</font>

386
00:14:26,920 --> 00:14:29,649
combination<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they can talk and</font>

387
00:14:28,149 --> 00:14:31,750
<font color="#E5E5E5">request</font><font color="#CCCCCC"> free transmits and they work</font>

388
00:14:29,649 --> 00:14:32,980
fine<font color="#CCCCCC"> the hardware ones if someone wants</font>

389
00:14:31,750 --> 00:14:34,079
to give me some hardware to test yeah

390
00:14:32,980 --> 00:14:37,629
sure

391
00:14:34,079 --> 00:14:38,829
future work<font color="#E5E5E5"> encryption this will so you</font>

392
00:14:37,629 --> 00:14:40,240
<font color="#E5E5E5">could already do encryption at a</font>

393
00:14:38,829 --> 00:14:41,800
different layer so<font color="#CCCCCC"> you could run a VPN</font>

394
00:14:40,240 --> 00:14:43,779
between your devices<font color="#CCCCCC"> for example that</font>

395
00:14:41,800 --> 00:14:45,279
works perfectly fine but you could we

396
00:14:43,779 --> 00:14:46,480
may also<font color="#CCCCCC"> want to do encryption in the</font>

397
00:14:45,279 --> 00:14:49,629
protocol<font color="#CCCCCC"> itself</font><font color="#E5E5E5"> and this will probably</font>

398
00:14:46,480 --> 00:14:53,470
<font color="#E5E5E5">be DTLS</font><font color="#CCCCCC"> null packet removal in</font><font color="#E5E5E5"> the</font>

399
00:14:49,629 --> 00:14:55,420
protocol so lots of streams have null

400
00:14:53,470 --> 00:14:57,399
packets<font color="#CCCCCC"> and if the contents not</font>

401
00:14:55,420 --> 00:14:59,019
difficult it's still padded to CBR and

402
00:14:57,399 --> 00:15:00,939
<font color="#E5E5E5">you'll you'll see in a minute most of</font>

403
00:14:59,019 --> 00:15:02,410
the streams<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> show the demo will</font>

404
00:15:00,939 --> 00:15:05,920
be null packets because<font color="#E5E5E5"> they're just one</font>

405
00:15:02,410 --> 00:15:08,350
<font color="#E5E5E5">solid color</font><font color="#CCCCCC"> bitrate</font><font color="#E5E5E5"> changes so there can</font>

406
00:15:05,920 --> 00:15:09,910
be a<font color="#E5E5E5"> point where the actual link</font>

407
00:15:08,350 --> 00:15:11,589
throughput capacity drops and you'll

408
00:15:09,910 --> 00:15:14,050
want<font color="#E5E5E5"> to actually</font><font color="#CCCCCC"> change the encoders bit</font>

409
00:15:11,589 --> 00:15:15,730
rates so how do you how do you signal

410
00:15:14,050 --> 00:15:17,079
that there's already IETF work to do

411
00:15:15,730 --> 00:15:20,679
this<font color="#E5E5E5"> because in video conferencing this</font>

412
00:15:17,079 --> 00:15:22,329
is already<font color="#E5E5E5"> a thing pull mode I'm not</font>

413
00:15:20,679 --> 00:15:24,639
sure if they<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that in the as</font>

414
00:15:22,329 --> 00:15:26,138
part of the protocol<font color="#CCCCCC"> but I mentioned the</font>

415
00:15:24,639 --> 00:15:30,249
decoder<font color="#CCCCCC"> needs port forwarding</font><font color="#E5E5E5"> you could</font>

416
00:15:26,139 --> 00:15:33,279
have a situation where<font color="#CCCCCC"> your your encoder</font>

417
00:15:30,249 --> 00:15:34,990
is actually in not in front<font color="#E5E5E5"> of the</font>

418
00:15:33,279 --> 00:15:37,300
<font color="#E5E5E5">firewall</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> decoders behind that and</font>

419
00:15:34,990 --> 00:15:38,589
<font color="#CCCCCC">how do</font><font color="#E5E5E5"> you get the protocol to work</font>

420
00:15:37,300 --> 00:15:39,939
without port forwarding<font color="#E5E5E5"> and there's</font>

421
00:15:38,589 --> 00:15:40,570
various<font color="#CCCCCC"> things for</font><font color="#E5E5E5"> example VL so you can</font>

422
00:15:39,939 --> 00:15:43,540
do this

423
00:15:40,570 --> 00:15:44,980
already with<font color="#CCCCCC"> RTP via I think RTSP</font><font color="#E5E5E5"> but</font>

424
00:15:43,540 --> 00:15:47,290
that needs to kind of be implemented a

425
00:15:44,980 --> 00:15:49,000
bit differently<font color="#E5E5E5"> they also nen want to</font>

426
00:15:47,290 --> 00:15:49,689
then the bottom bit is for when they're

427
00:15:49,000 --> 00:15:53,590
<font color="#E5E5E5">going a bit</font><font color="#CCCCCC"> crazy</font>

428
00:15:49,690 --> 00:15:55,090
um<font color="#E5E5E5"> scalable</font><font color="#CCCCCC"> video for those</font><font color="#E5E5E5"> who aren't</font>

429
00:15:53,590 --> 00:15:58,030
aware syllable video is when you<font color="#CCCCCC"> have a</font>

430
00:15:55,090 --> 00:16:00,940
<font color="#E5E5E5">video stream that allows you to lose</font>

431
00:15:58,030 --> 00:16:04,959
data<font color="#CCCCCC"> but still be recover</font><font color="#E5E5E5"> a sort of a</font>

432
00:16:00,940 --> 00:16:08,800
lower resolution copy or a lower frame

433
00:16:04,960 --> 00:16:11,800
rate copy this is really nice in theory

434
00:16:08,800 --> 00:16:14,229
<font color="#E5E5E5">it doesn't</font><font color="#CCCCCC"> work in practice it's often</font>

435
00:16:11,800 --> 00:16:16,180
easier<font color="#E5E5E5"> just as you see now on the</font><font color="#CCCCCC"> web</font>

436
00:16:14,230 --> 00:16:17,890
for<font color="#CCCCCC"> example just</font><font color="#E5E5E5"> encode the</font><font color="#CCCCCC"> video at</font>

437
00:16:16,180 --> 00:16:20,770
multiple bit rates and switch people

438
00:16:17,890 --> 00:16:22,330
<font color="#E5E5E5">have tried scalable video I'm surprised</font>

439
00:16:20,770 --> 00:16:24,520
they're reviving this<font color="#E5E5E5"> 2,000 a</font><font color="#CCCCCC"> year a</font>

440
00:16:22,330 --> 00:16:26,620
technology<font color="#E5E5E5"> because very</font><font color="#CCCCCC"> few</font><font color="#E5E5E5"> people can</font>

441
00:16:24,520 --> 00:16:28,210
do it right<font color="#E5E5E5"> it's very very complex to</font>

442
00:16:26,620 --> 00:16:30,700
<font color="#CCCCCC">implement and</font><font color="#E5E5E5"> the benefits kind of</font>

443
00:16:28,210 --> 00:16:32,490
<font color="#E5E5E5">aren't there</font><font color="#CCCCCC"> often then this is where</font>

444
00:16:30,700 --> 00:16:35,080
they go really<font color="#E5E5E5"> really crazy</font>

445
00:16:32,490 --> 00:16:37,510
retransmissions on uncompressed video<font color="#E5E5E5"> so</font>

446
00:16:35,080 --> 00:16:39,130
<font color="#CCCCCC">vilom told you all about the</font>

447
00:16:37,510 --> 00:16:41,620
complexities of doing uncompressed video

448
00:16:39,130 --> 00:16:44,250
and all these<font color="#E5E5E5"> crazy rules and now they</font>

449
00:16:41,620 --> 00:16:47,920
want to add retransmissions to that say

450
00:16:44,250 --> 00:16:49,360
already in the tens of gigabits<font color="#CCCCCC"> of range</font>

451
00:16:47,920 --> 00:16:51,400
and now you want to add they want to add

452
00:16:49,360 --> 00:16:52,360
retransmissions for some reason this<font color="#E5E5E5"> is</font>

453
00:16:51,400 --> 00:16:57,040
where<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> they're slightly losing</font>

454
00:16:52,360 --> 00:17:00,010
the plot is it yeah<font color="#E5E5E5"> right this is always</font>

455
00:16:57,040 --> 00:17:03,900
<font color="#E5E5E5">the tricky bit live demo over the FOSDEM</font>

456
00:17:00,010 --> 00:17:03,900
Wi-Fi could<font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually get a stream oh</font>

457
00:17:04,500 --> 00:17:08,470
this is it well<font color="#E5E5E5"> I think the hottest bit</font>

458
00:17:06,849 --> 00:17:13,810
of the live demo is will the<font color="#E5E5E5"> HDMI work</font>

459
00:17:08,470 --> 00:17:16,839
or will<font color="#CCCCCC"> movie</font><font color="#E5E5E5"> will we be</font><font color="#CCCCCC"> using xrandr so</font>

460
00:17:13,810 --> 00:17:20,490
I did cheat<font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> and in hindsight maybe</font>

461
00:17:16,839 --> 00:17:20,490
with the cheating was<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> yeah ooh</font>

462
00:17:29,309 --> 00:17:36,070
so kinda not<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> like showing</font><font color="#E5E5E5"> a</font>

463
00:17:34,179 --> 00:17:36,370
quadrant<font color="#CCCCCC"> a</font><font color="#E5E5E5"> quarter of the screen but so</font>

464
00:17:36,070 --> 00:17:39,908
be it

465
00:17:36,370 --> 00:17:41,350
um oh no I think it's<font color="#E5E5E5"> just</font><font color="#CCCCCC"> resized than</font>

466
00:17:39,909 --> 00:17:43,840
the<font color="#CCCCCC"> alt + VLC hasn't gotten restart</font>

467
00:17:41,350 --> 00:17:45,939
itself<font color="#CCCCCC"> but anyway so I I was hoping to</font>

468
00:17:43,840 --> 00:17:47,799
cheat<font color="#E5E5E5"> when we did cheat by</font><font color="#CCCCCC"> using a VPN</font>

469
00:17:45,940 --> 00:17:51,130
but what we<font color="#E5E5E5"> discovered kind of during</font>

470
00:17:47,799 --> 00:17:53,220
testing is most<font color="#E5E5E5"> VPS of losing why</font><font color="#CCCCCC"> God in</font>

471
00:17:51,130 --> 00:17:55,720
this<font color="#E5E5E5"> case but a lot of VPNs can't handle</font>

472
00:17:53,220 --> 00:18:00,789
pumping 50 megabits<font color="#E5E5E5"> of UDP traffic</font>

473
00:17:55,720 --> 00:18:04,510
through them they<font color="#CCCCCC"> just collapse</font><font color="#E5E5E5"> so no no</font>

474
00:18:00,789 --> 00:18:05,950
bit no but we want to show I<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

475
00:18:04,510 --> 00:18:12,129
<font color="#E5E5E5">show the I want to show</font><font color="#CCCCCC"> you the come</font>

476
00:18:05,950 --> 00:18:14,770
<font color="#E5E5E5">online as well</font><font color="#CCCCCC"> alright I just forget</font>

477
00:18:12,130 --> 00:18:20,080
<font color="#E5E5E5">about the corner from so I also you want</font>

478
00:18:14,770 --> 00:18:21,639
that right so<font color="#CCCCCC"> a bit so I can actually so</font>

479
00:18:20,080 --> 00:18:24,760
you actually<font color="#E5E5E5"> see is correcting packets</font>

480
00:18:21,640 --> 00:18:31,450
as we speak which<font color="#CCCCCC"> is good this</font><font color="#E5E5E5"> is one</font><font color="#CCCCCC"> of</font>

481
00:18:24,760 --> 00:18:35,230
<font color="#E5E5E5">those fancy</font><font color="#CCCCCC"> touch pads so the sender and</font>

482
00:18:31,450 --> 00:18:38,320
so this is a you pipe<font color="#CCCCCC"> based encoder in</font>

483
00:18:35,230 --> 00:18:40,419
the office and a the you pipe example

484
00:18:38,320 --> 00:18:43,360
decode receiver here and then that's

485
00:18:40,419 --> 00:18:44,409
being pumped<font color="#E5E5E5"> into VLC for testing so</font>

486
00:18:43,360 --> 00:18:46,149
what you can see is the sender and

487
00:18:44,409 --> 00:18:48,520
<font color="#E5E5E5">receiver are estimating round-trip times</font>

488
00:18:46,149 --> 00:18:50,229
<font color="#CCCCCC">know the calculating round-trip times</font>

489
00:18:48,520 --> 00:18:52,809
throughout<font color="#E5E5E5"> the process so every I think</font>

490
00:18:50,230 --> 00:18:54,820
it's every second<font color="#E5E5E5"> and as a result the</font>

491
00:18:52,809 --> 00:18:56,408
receiver is using that<font color="#E5E5E5"> to figure out how</font>

492
00:18:54,820 --> 00:18:58,120
many retransmissions it can send within

493
00:18:56,409 --> 00:19:00,520
the bounds of latency that's<font color="#E5E5E5"> configured</font>

494
00:18:58,120 --> 00:19:06,309
so I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> it's configured to</font><font color="#CCCCCC"> one-second</font>

495
00:19:00,520 --> 00:19:07,690
latency correctly or maybe three yeah<font color="#E5E5E5"> so</font>

496
00:19:06,309 --> 00:19:09,158
<font color="#CCCCCC">unfortunately</font><font color="#E5E5E5"> I want to talk about</font>

497
00:19:07,690 --> 00:19:11,890
repairs<font color="#E5E5E5"> it's actually stopped repairing</font>

498
00:19:09,159 --> 00:19:13,419
but<font color="#E5E5E5"> it was repairing a lot before so you</font>

499
00:19:11,890 --> 00:19:15,490
<font color="#E5E5E5">can act</font><font color="#CCCCCC"> you and you'll see a ton</font><font color="#E5E5E5"> of</font>

500
00:19:13,419 --> 00:19:17,500
green terminal input but<font color="#E5E5E5"> you will see</font><font color="#CCCCCC"> it</font>

501
00:19:15,490 --> 00:19:18,520
<font color="#CCCCCC">send retransmissions and you'll see that</font>

502
00:19:17,500 --> 00:19:19,779
it's actually lost nothing which is

503
00:19:18,520 --> 00:19:22,090
<font color="#E5E5E5">quite good</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> the stream is</font><font color="#CCCCCC"> 10</font>

504
00:19:19,779 --> 00:19:23,679
megabits or did you cheat and lower<font color="#CCCCCC"> it</font>

505
00:19:22,090 --> 00:19:25,600
still<font color="#E5E5E5"> 10 megabits but the</font><font color="#CCCCCC"> intention was</font>

506
00:19:23,679 --> 00:19:26,740
<font color="#E5E5E5">to do 50 and really saturate the Wi-Fi</font>

507
00:19:25,600 --> 00:19:29,080
but that probably<font color="#E5E5E5"> would have killed all</font>

508
00:19:26,740 --> 00:19:32,290
your<font color="#E5E5E5"> other devices</font><font color="#CCCCCC"> but</font>

509
00:19:29,080 --> 00:19:33,850
<font color="#E5E5E5">nevermind</font><font color="#CCCCCC"> I thought doing any repairs</font>

510
00:19:32,290 --> 00:19:35,740
<font color="#E5E5E5">but you you should be</font><font color="#CCCCCC"> able to see</font><font color="#E5E5E5"> it</font>

511
00:19:33,850 --> 00:19:37,480
<font color="#E5E5E5">send repairs packets if it was repairing</font>

512
00:19:35,740 --> 00:19:43,570
but<font color="#E5E5E5"> subs law when I want to</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> about</font>

513
00:19:37,480 --> 00:19:44,890
repairs it doesn't and<font color="#E5E5E5"> when was it was</font>

514
00:19:43,570 --> 00:19:46,300
it wasn't there we go<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> it's doing</font>

515
00:19:44,890 --> 00:19:48,430
some repairs<font color="#CCCCCC"> so you can see</font><font color="#E5E5E5"> that it's</font>

516
00:19:46,300 --> 00:19:51,190
<font color="#E5E5E5">found its found holes between 1968 and</font>

517
00:19:48,430 --> 00:19:52,600
194 and<font color="#CCCCCC"> it's requesting retransmissions</font>

518
00:19:51,190 --> 00:19:53,800
and gradually repairing them<font color="#CCCCCC"> it's found</font>

519
00:19:52,600 --> 00:19:56,409
another hole and<font color="#CCCCCC"> it's sent another</font>

520
00:19:53,800 --> 00:19:59,320
retransmission but so<font color="#E5E5E5"> so and you can</font>

521
00:19:56,410 --> 00:20:02,020
<font color="#E5E5E5">also see since I</font><font color="#CCCCCC"> am where</font><font color="#E5E5E5"> 21 seconds</font>

522
00:19:59,320 --> 00:20:06,220
left so since I<font color="#CCCCCC"> think we configured it</font>

523
00:20:02,020 --> 00:20:08,620
<font color="#CCCCCC">to</font><font color="#E5E5E5"> one second</font><font color="#CCCCCC"> but that gives</font><font color="#E5E5E5"> me about I</font>

524
00:20:06,220 --> 00:20:09,880
have about<font color="#CCCCCC"> a 20 millisecond ping to the</font>

525
00:20:08,620 --> 00:20:12,639
office so that<font color="#E5E5E5"> gives me 50 different</font>

526
00:20:09,880 --> 00:20:14,050
<font color="#E5E5E5">attempts roughly to retransmit so</font>

527
00:20:12,640 --> 00:20:16,900
there's a very good chance I'll<font color="#CCCCCC"> be able</font>

528
00:20:14,050 --> 00:20:19,030
<font color="#E5E5E5">to get that packet back so like them</font>

529
00:20:16,900 --> 00:20:31,500
<font color="#CCCCCC">know kind</font><font color="#E5E5E5"> of worked which is yeah that's</font>

530
00:20:19,030 --> 00:20:31,500
great<font color="#CCCCCC"> any question</font>

531
00:20:41,400 --> 00:20:46,960
in your future<font color="#E5E5E5"> work items slide there</font>

532
00:20:44,860 --> 00:20:48,969
was no mention<font color="#E5E5E5"> of any sort</font><font color="#CCCCCC"> of multi cast</font>

533
00:20:46,960 --> 00:20:51,400
or multi routing is that stuff that

534
00:20:48,970 --> 00:20:53,590
<font color="#CCCCCC">they're considering</font><font color="#E5E5E5"> it's just way far</font>

535
00:20:51,400 --> 00:20:55,600
off<font color="#CCCCCC"> for they consider that out of the</font>

536
00:20:53,590 --> 00:20:58,510
domain<font color="#E5E5E5"> what do you mean by multi</font><font color="#CCCCCC"> route</font>

537
00:20:55,600 --> 00:21:00,310
<font color="#CCCCCC">say about multiple</font><font color="#E5E5E5"> links that's already</font>

538
00:20:58,510 --> 00:21:02,980
supported so that's<font color="#E5E5E5"> already part of the</font>

539
00:21:00,310 --> 00:21:04,750
protocol it<font color="#E5E5E5"> said it recommends you send</font>

540
00:21:02,980 --> 00:21:06,790
the retransmit down<font color="#E5E5E5"> the reach or it's</font>

541
00:21:04,750 --> 00:21:08,650
<font color="#E5E5E5">possible down both links and you</font>

542
00:21:06,790 --> 00:21:10,270
duplicate the retransmit down both links

543
00:21:08,650 --> 00:21:12,280
and it's again implementation<font color="#CCCCCC"> define how</font>

544
00:21:10,270 --> 00:21:14,230
you want<font color="#CCCCCC"> to balance</font><font color="#E5E5E5"> the links that's</font>

545
00:21:12,280 --> 00:21:16,780
completely up to the way the sender<font color="#E5E5E5"> and</font>

546
00:21:14,230 --> 00:21:19,690
receiver want to do it<font color="#E5E5E5"> and that's either</font>

547
00:21:16,780 --> 00:21:22,270
<font color="#E5E5E5">multi casting already supported again at</font>

548
00:21:19,690 --> 00:21:23,680
the beginning<font color="#CCCCCC"> so the receivers a</font>

549
00:21:22,270 --> 00:21:25,450
multicast receiver requests

550
00:21:23,680 --> 00:21:28,540
retransmissions from its source<font color="#E5E5E5"> and it's</font>

551
00:21:25,450 --> 00:21:31,390
<font color="#E5E5E5">recommended</font><font color="#CCCCCC"> I think you have</font><font color="#E5E5E5"> to do it</font>

552
00:21:28,540 --> 00:21:32,920
that way<font color="#E5E5E5"> you have to include your</font>

553
00:21:31,390 --> 00:21:34,210
retransmissions in the multicast so that

554
00:21:32,920 --> 00:21:35,950
all receivers<font color="#E5E5E5"> can benefit from the</font>

555
00:21:34,210 --> 00:21:39,580
retransmission<font color="#E5E5E5"> because the chances are</font>

556
00:21:35,950 --> 00:21:41,770
<font color="#CCCCCC">inability if let's say</font><font color="#E5E5E5"> there's a trunk</font>

557
00:21:39,580 --> 00:21:43,929
line you know there's loss on a

558
00:21:41,770 --> 00:21:45,280
particular fiber line in that part of

559
00:21:43,930 --> 00:21:46,900
<font color="#E5E5E5">the world the chances are there's quite</font>

560
00:21:45,280 --> 00:21:48,250
a few receivers that have actually lost

561
00:21:46,900 --> 00:21:55,810
the packet so all of all receivers<font color="#E5E5E5"> can</font>

562
00:21:48,250 --> 00:22:00,430
benefit from<font color="#E5E5E5"> it thank</font><font color="#CCCCCC"> you no but for</font><font color="#E5E5E5"> the</font>

563
00:21:55,810 --> 00:22:02,409
<font color="#CCCCCC">for the online</font><font color="#E5E5E5"> audience yeah I forgot to</font>

564
00:22:00,430 --> 00:22:04,680
repeat the question sorry<font color="#E5E5E5"> the question</font>

565
00:22:02,410 --> 00:22:08,170
<font color="#CCCCCC">before was about multicast and multi</font>

566
00:22:04,680 --> 00:22:11,380
<font color="#CCCCCC">Multi multi link</font><font color="#E5E5E5"> question is this</font>

567
00:22:08,170 --> 00:22:14,020
protocol also<font color="#E5E5E5"> designed with</font><font color="#CCCCCC"> 5g in mind</font>

568
00:22:11,380 --> 00:22:17,230
like where you can have<font color="#E5E5E5"> network slicing</font>

569
00:22:14,020 --> 00:22:21,100
and<font color="#CCCCCC"> sort of different quality of service</font>

570
00:22:17,230 --> 00:22:22,600
levels I'm not the<font color="#CCCCCC"> expert on 5g there</font>

571
00:22:21,100 --> 00:22:24,399
are people in the<font color="#CCCCCC"> room who are</font><font color="#E5E5E5"> where</font>

572
00:22:22,600 --> 00:22:28,510
where is my me I'm<font color="#E5E5E5"> looking to look at</font>

573
00:22:24,400 --> 00:22:30,880
him that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> figure I know but if the</font>

574
00:22:28,510 --> 00:22:32,890
<font color="#E5E5E5">ports UDP</font><font color="#CCCCCC"> 32 DP so you can set the type</font>

575
00:22:30,880 --> 00:22:34,840
<font color="#CCCCCC">of service and different</font><font color="#E5E5E5"> flags which is</font>

576
00:22:32,890 --> 00:22:39,010
what<font color="#E5E5E5"> people do because it would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> nice</font>

577
00:22:34,840 --> 00:22:41,020
if<font color="#E5E5E5"> you do Alliant but actually like the</font>

578
00:22:39,010 --> 00:22:43,870
<font color="#E5E5E5">network link and what you're going</font><font color="#CCCCCC"> to</font>

579
00:22:41,020 --> 00:22:46,570
<font color="#CCCCCC">use you can say yeah and from what I</font>

580
00:22:43,870 --> 00:22:49,659
understand from 5g is because you have

581
00:22:46,570 --> 00:22:50,080
low latency on 5g I think you could if

582
00:22:49,660 --> 00:22:53,019
the<font color="#CCCCCC"> Opera</font>

583
00:22:50,080 --> 00:22:54,639
<font color="#CCCCCC">- would sign the right</font><font color="#E5E5E5"> commercial</font>

584
00:22:53,019 --> 00:22:55,570
agreement with you to<font color="#E5E5E5"> support TRS and</font>

585
00:22:54,640 --> 00:22:56,799
<font color="#E5E5E5">diffserv</font>

586
00:22:55,570 --> 00:22:59,260
<font color="#E5E5E5">they could follow the rules</font>

587
00:22:56,799 --> 00:23:01,929
theoretically that should be<font color="#CCCCCC"> possible</font>

588
00:22:59,260 --> 00:23:03,760
and<font color="#E5E5E5"> I well it was marketed also possible</font>

589
00:23:01,929 --> 00:23:06,549
for forgery and it<font color="#E5E5E5"> never happened</font>

590
00:23:03,760 --> 00:23:09,549
so<font color="#E5E5E5"> will</font><font color="#CCCCCC"> he buy</font><font color="#E5E5E5"> believer</font><font color="#CCCCCC"> 5/5 to supports</font>

591
00:23:06,549 --> 00:23:12,158
<font color="#CCCCCC">multicast or new projects 5g media</font>

592
00:23:09,549 --> 00:23:20,470
project but I look in having<font color="#CCCCCC"> multi cross</font>

593
00:23:12,159 --> 00:23:22,419
links that was not widely deployed so

594
00:23:20,470 --> 00:23:24,580
it's more<font color="#E5E5E5"> of a theory versus practice</font>

595
00:23:22,419 --> 00:23:27,899
problem but yes it's you could do it I

596
00:23:24,580 --> 00:23:27,899
think<font color="#CCCCCC"> we've toughened</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> surf shortly</font>

597
00:23:30,519 --> 00:23:34,690
have you done benchmarks against

598
00:23:32,049 --> 00:23:36,340
existing retransmit<font color="#E5E5E5"> based type things</font>

599
00:23:34,690 --> 00:23:43,630
like<font color="#E5E5E5"> as</font><font color="#CCCCCC"> hurty like you mentioned were</font>

600
00:23:36,340 --> 00:23:46,240
quick<font color="#E5E5E5"> yes we have but I think we saw</font>

601
00:23:43,630 --> 00:23:48,429
<font color="#E5E5E5">from</font><font color="#CCCCCC"> what I understand from this is</font><font color="#E5E5E5"> what</font>

602
00:23:46,240 --> 00:23:49,630
were<font color="#CCCCCC"> Raphael told me I forgot the last</font>

603
00:23:48,429 --> 00:23:52,539
<font color="#E5E5E5">slide actually which is thanks to</font>

604
00:23:49,630 --> 00:23:54,580
<font color="#E5E5E5">Raphael</font><font color="#CCCCCC"> and because it's on the rather</font>

605
00:23:52,539 --> 00:23:59,710
but thanks to my colleagues for<font color="#CCCCCC"> doing</font>

606
00:23:54,580 --> 00:24:01,570
this work<font color="#E5E5E5"> because</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> so we did we have</font>

607
00:23:59,710 --> 00:24:03,070
done some testing and from what I

608
00:24:01,570 --> 00:24:05,500
understand<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> as good as if not</font>

609
00:24:03,070 --> 00:24:07,210
<font color="#CCCCCC">better but</font><font color="#E5E5E5"> this was I only got the data</font>

610
00:24:05,500 --> 00:24:09,190
<font color="#E5E5E5">literally yesterday</font><font color="#CCCCCC"> know the</font><font color="#E5E5E5"> truth this</font>

611
00:24:07,210 --> 00:24:15,870
<font color="#CCCCCC">morning so if I</font><font color="#E5E5E5"> haven't verified it</font>

612
00:24:09,190 --> 00:24:15,870
myself<font color="#CCCCCC"> so other questions</font>

613
00:24:23,010 --> 00:24:31,099
[Applause]

