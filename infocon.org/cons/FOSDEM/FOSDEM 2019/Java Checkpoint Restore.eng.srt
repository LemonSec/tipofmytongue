1
00:00:05,140 --> 00:00:10,520
<font color="#CCCCCC">all right hello</font><font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> I'm Christine</font>

2
00:00:08,900 --> 00:00:11,420
flood everybody's talked about how long

3
00:00:10,520 --> 00:00:15,200
they worked<font color="#E5E5E5"> on Java</font>

4
00:00:11,420 --> 00:00:17,000
<font color="#CCCCCC">I started in 1998</font><font color="#E5E5E5"> working for Sun</font>

5
00:00:15,200 --> 00:00:19,939
Microsystems I worked on<font color="#E5E5E5"> the first</font>

6
00:00:17,000 --> 00:00:21,529
production quality JVM<font color="#E5E5E5"> called exact VM</font>

7
00:00:19,939 --> 00:00:22,220
which was back before there was even<font color="#CCCCCC"> a</font>

8
00:00:21,529 --> 00:00:31,369
<font color="#E5E5E5">hot spot</font>

9
00:00:22,220 --> 00:00:33,650
so there are my credentials<font color="#E5E5E5"> I'm here to</font>

10
00:00:31,369 --> 00:00:36,559
talk<font color="#E5E5E5"> to</font><font color="#CCCCCC"> you about fast startup for Java</font>

11
00:00:33,650 --> 00:00:38,839
applications<font color="#CCCCCC"> I work for Red Hat and</font><font color="#E5E5E5"> I</font>

12
00:00:36,559 --> 00:00:40,370
work in the Linux echo<font color="#E5E5E5"> system and people</font>

13
00:00:38,839 --> 00:00:42,890
<font color="#CCCCCC">were saying</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> ghost starts up really</font>

14
00:00:40,370 --> 00:00:44,449
<font color="#E5E5E5">fast and and Java is too slow so</font><font color="#CCCCCC"> I</font>

15
00:00:42,890 --> 00:00:45,860
started<font color="#CCCCCC"> thinking about</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> we could</font><font color="#E5E5E5"> do</font>

16
00:00:44,449 --> 00:00:49,400
to make<font color="#E5E5E5"> Java start up faster and</font>

17
00:00:45,860 --> 00:00:51,409
<font color="#CCCCCC">checkpoint restore was a clear solution</font>

18
00:00:49,400 --> 00:00:55,339
in my mind<font color="#E5E5E5"> so what do I mean</font><font color="#CCCCCC"> by</font>

19
00:00:51,409 --> 00:00:57,890
checkpoint restore<font color="#E5E5E5"> you have your Java VM</font>

20
00:00:55,339 --> 00:00:59,360
you've loaded<font color="#E5E5E5"> all your classes you've</font>

21
00:00:57,890 --> 00:01:01,010
warmed<font color="#E5E5E5"> up your JIT you've run some</font>

22
00:00:59,360 --> 00:01:02,570
sample<font color="#E5E5E5"> things you've got everything</font><font color="#CCCCCC"> the</font>

23
00:01:01,010 --> 00:01:04,849
way<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want it</font><font color="#CCCCCC"> to run quickly</font><font color="#E5E5E5"> and</font>

24
00:01:02,570 --> 00:01:07,340
you've read a<font color="#E5E5E5"> couple of</font><font color="#CCCCCC"> GC so you've got</font>

25
00:01:04,849 --> 00:01:09,169
your heap as tight as<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> what you</font>

26
00:01:07,340 --> 00:01:11,300
do then<font color="#CCCCCC"> is you run the checkpoint and</font>

27
00:01:09,170 --> 00:01:13,400
that rates out the state of<font color="#CCCCCC"> your JVM to</font>

28
00:01:11,300 --> 00:01:14,750
the<font color="#CCCCCC"> file system</font><font color="#E5E5E5"> now I want to be clear</font>

29
00:01:13,400 --> 00:01:16,790
<font color="#E5E5E5">here this is not object serialization</font>

30
00:01:14,750 --> 00:01:19,550
this is more of a bit blit<font color="#E5E5E5"> right it's a</font>

31
00:01:16,790 --> 00:01:21,050
<font color="#CCCCCC">bulk copy of the memory</font><font color="#E5E5E5"> out to disk so</font>

32
00:01:19,550 --> 00:01:26,600
<font color="#CCCCCC">it can be quickly</font><font color="#E5E5E5"> copied and quickly</font>

33
00:01:21,050 --> 00:01:28,399
restored so another thing<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> cool is</font>

34
00:01:26,600 --> 00:01:30,259
<font color="#CCCCCC">once you</font><font color="#E5E5E5"> have those JVM image files</font>

35
00:01:28,400 --> 00:01:32,120
you're not limited to restoring<font color="#CCCCCC"> it once</font>

36
00:01:30,260 --> 00:01:34,730
so let's<font color="#E5E5E5"> say you have an application</font>

37
00:01:32,120 --> 00:01:36,920
<font color="#CCCCCC">that has a you know a large startup time</font>

38
00:01:34,730 --> 00:01:38,630
you can build it up<font color="#CCCCCC"> write</font><font color="#E5E5E5"> out an image</font>

39
00:01:36,920 --> 00:01:40,430
<font color="#E5E5E5">and then later on when you're running</font><font color="#CCCCCC"> it</font>

40
00:01:38,630 --> 00:01:43,158
<font color="#CCCCCC">you can say hey I'm</font><font color="#E5E5E5"> going to run it here</font>

41
00:01:40,430 --> 00:01:45,580
here here and<font color="#CCCCCC"> here so this</font><font color="#E5E5E5"> is another</font>

42
00:01:43,159 --> 00:01:48,680
way to deploy<font color="#E5E5E5"> your</font><font color="#CCCCCC"> Java applications</font>

43
00:01:45,580 --> 00:01:51,530
<font color="#CCCCCC">it's not quite as pretty as write once</font>

44
00:01:48,680 --> 00:01:54,350
run everywhere was but it gives us the

45
00:01:51,530 --> 00:01:56,930
<font color="#E5E5E5">ability to come</font><font color="#CCCCCC"> up very</font><font color="#E5E5E5"> quickly with</font><font color="#CCCCCC"> a</font>

46
00:01:54,350 --> 00:01:59,240
hot JVM that has all of<font color="#E5E5E5"> the capabilities</font>

47
00:01:56,930 --> 00:02:01,190
that<font color="#CCCCCC"> you expect</font><font color="#E5E5E5"> from open JDK that has</font>

48
00:01:59,240 --> 00:02:02,929
the dynamic<font color="#E5E5E5"> class loading it has</font>

49
00:02:01,190 --> 00:02:07,190
everything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you could</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> and it's</font>

50
00:02:02,930 --> 00:02:08,810
all right<font color="#CCCCCC"> there and</font><font color="#E5E5E5"> available so another</font>

51
00:02:07,190 --> 00:02:10,609
use case<font color="#E5E5E5"> I had to</font><font color="#CCCCCC"> bring this up</font><font color="#E5E5E5"> right</font>

52
00:02:08,810 --> 00:02:13,130
<font color="#CCCCCC">I'm not the</font><font color="#E5E5E5"> first person to talk</font><font color="#CCCCCC"> about</font>

53
00:02:10,610 --> 00:02:15,440
<font color="#E5E5E5">doing this for Java IBM had a paper on</font>

54
00:02:13,130 --> 00:02:17,510
<font color="#CCCCCC">it inria had a</font><font color="#E5E5E5"> couple of papers</font><font color="#CCCCCC"> on it</font>

55
00:02:15,440 --> 00:02:18,310
<font color="#E5E5E5">I'm just doing it a quick and dirty</font><font color="#CCCCCC"> way</font>

56
00:02:17,510 --> 00:02:20,440
which I'll get to<font color="#E5E5E5"> in</font>

57
00:02:18,310 --> 00:02:21,430
but let's say you're running some sort

58
00:02:20,440 --> 00:02:25,000
<font color="#E5E5E5">of</font><font color="#CCCCCC"> long-running number-crunching</font>

59
00:02:21,430 --> 00:02:26,560
<font color="#E5E5E5">application on</font><font color="#CCCCCC"> java maybe you don't</font><font color="#E5E5E5"> want</font>

60
00:02:25,000 --> 00:02:29,349
that<font color="#E5E5E5"> to crash and I'll go away so you</font>

61
00:02:26,560 --> 00:02:33,610
can<font color="#E5E5E5"> checkpoint every</font><font color="#CCCCCC"> iteration</font><font color="#E5E5E5"> and then</font>

62
00:02:29,349 --> 00:02:35,920
if you do have an unfortunate crash<font color="#CCCCCC"> you</font>

63
00:02:33,610 --> 00:02:40,030
can just<font color="#E5E5E5"> restore from the last working</font>

64
00:02:35,920 --> 00:02:41,619
iteration and keep<font color="#E5E5E5"> going or that's</font>

65
00:02:40,030 --> 00:02:43,060
another<font color="#E5E5E5"> application you can</font><font color="#CCCCCC"> replay the</font>

66
00:02:41,620 --> 00:02:46,569
crash if you have a crash<font color="#CCCCCC"> that you know</font>

67
00:02:43,060 --> 00:02:49,000
happens<font color="#E5E5E5"> every iteration</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can save the</font>

68
00:02:46,569 --> 00:02:52,540
world<font color="#CCCCCC"> right</font><font color="#E5E5E5"> before the crash happens and</font>

69
00:02:49,000 --> 00:02:54,130
then rather than<font color="#CCCCCC"> having to wait 10 hours</font>

70
00:02:52,540 --> 00:02:55,600
for<font color="#E5E5E5"> your</font><font color="#CCCCCC"> machine to get back into the</font>

71
00:02:54,130 --> 00:02:58,780
crash<font color="#E5E5E5"> state you can bring it up</font>

72
00:02:55,600 --> 00:03:00,340
<font color="#CCCCCC">immediately at</font><font color="#E5E5E5"> the bug</font><font color="#CCCCCC"> State alright so</font>

73
00:02:58,780 --> 00:03:02,560
let<font color="#CCCCCC"> me be clear here I'm not proposing</font>

74
00:03:00,340 --> 00:03:04,540
<font color="#CCCCCC">anything heroic</font><font color="#E5E5E5"> when IBM and</font><font color="#CCCCCC"> in Oriya</font>

75
00:03:02,560 --> 00:03:07,000
did it they<font color="#CCCCCC"> started</font><font color="#E5E5E5"> from the JVM and</font>

76
00:03:04,540 --> 00:03:08,950
they wanted<font color="#E5E5E5"> to work all of</font><font color="#CCCCCC"> the JVM data</font>

77
00:03:07,000 --> 00:03:11,650
structures<font color="#E5E5E5"> I want to do something</font><font color="#CCCCCC"> quick</font>

78
00:03:08,950 --> 00:03:14,200
and<font color="#CCCCCC"> dirty</font><font color="#E5E5E5"> there's already utility</font><font color="#CCCCCC"> out</font>

79
00:03:11,650 --> 00:03:16,180
there in the Linux world<font color="#CCCCCC"> creo and that</font>

80
00:03:14,200 --> 00:03:17,920
does<font color="#E5E5E5"> the heavy lifting</font><font color="#CCCCCC"> for us</font><font color="#E5E5E5"> today</font>

81
00:03:16,180 --> 00:03:20,049
<font color="#E5E5E5">without me doing</font><font color="#CCCCCC"> anything I can</font>

82
00:03:17,920 --> 00:03:21,369
<font color="#CCCCCC">checkpoint and restore well they can</font>

83
00:03:20,049 --> 00:03:23,829
<font color="#E5E5E5">checkpointing restore Linux process I</font>

84
00:03:21,370 --> 00:03:26,290
can<font color="#E5E5E5"> checkpoint and restore most Java</font>

85
00:03:23,829 --> 00:03:31,600
processes without any additions to the

86
00:03:26,290 --> 00:03:34,358
JVM so checkpoint<font color="#CCCCCC"> restore in userspace</font>

87
00:03:31,600 --> 00:03:36,870
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> Linux utility I'll go into a little</font>

88
00:03:34,359 --> 00:03:39,310
<font color="#CCCCCC">bit more</font><font color="#E5E5E5"> detail about how it works later</font>

89
00:03:36,870 --> 00:03:41,079
<font color="#CCCCCC">it handles a lot of the</font><font color="#E5E5E5"> things you</font>

90
00:03:39,310 --> 00:03:43,209
wouldn't<font color="#E5E5E5"> expect</font><font color="#CCCCCC"> it to like files and</font>

91
00:03:41,079 --> 00:03:46,329
sockets<font color="#E5E5E5"> pretty much all</font><font color="#CCCCCC"> of the hairy</font>

92
00:03:43,209 --> 00:03:48,639
stuff it can do<font color="#E5E5E5"> and if you want to read</font>

93
00:03:46,329 --> 00:03:50,230
<font color="#E5E5E5">more</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it you</font><font color="#CCCCCC"> can read</font><font color="#E5E5E5"> it there and</font>

94
00:03:48,639 --> 00:03:51,670
<font color="#E5E5E5">there's there are people here</font><font color="#CCCCCC"> that</font>

95
00:03:50,230 --> 00:03:54,010
actually<font color="#E5E5E5"> work on creo I don't know if</font>

96
00:03:51,670 --> 00:03:57,069
they're in<font color="#E5E5E5"> the room right now but there</font>

97
00:03:54,010 --> 00:03:58,959
<font color="#E5E5E5">are people here at FOSDEM so this is</font>

98
00:03:57,069 --> 00:04:00,280
used mostly for process migration the

99
00:03:58,959 --> 00:04:02,920
<font color="#E5E5E5">DevOps folks who want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> move</font><font color="#CCCCCC"> on a</font>

100
00:04:00,280 --> 00:04:04,680
<font color="#E5E5E5">process somewhere else quick process</font>

101
00:04:02,920 --> 00:04:08,649
<font color="#E5E5E5">spin up which is why I got interested</font>

102
00:04:04,680 --> 00:04:10,510
<font color="#E5E5E5">container migration so the other reason</font>

103
00:04:08,650 --> 00:04:12,700
I got interested<font color="#E5E5E5"> is because I'm old and</font>

104
00:04:10,510 --> 00:04:14,980
I used to<font color="#CCCCCC"> work on lists machines a long</font>

105
00:04:12,700 --> 00:04:15,850
time ago and<font color="#E5E5E5"> I really miss</font><font color="#CCCCCC"> being able to</font>

106
00:04:14,980 --> 00:04:18,039
<font color="#E5E5E5">save the world</font>

107
00:04:15,850 --> 00:04:20,350
imagine you have a read eval print loop

108
00:04:18,039 --> 00:04:21,849
and you've done some stuff and you've

109
00:04:20,350 --> 00:04:24,070
got your<font color="#E5E5E5"> state where you think you want</font>

110
00:04:21,850 --> 00:04:26,349
it you<font color="#CCCCCC"> can save the state</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that world</font>

111
00:04:24,070 --> 00:04:27,789
<font color="#CCCCCC">and then you can do some more changes</font>

112
00:04:26,349 --> 00:04:30,969
and<font color="#CCCCCC"> if they don't</font><font color="#E5E5E5"> work you can come</font><font color="#CCCCCC"> back</font>

113
00:04:27,789 --> 00:04:32,120
to where you were they also had the

114
00:04:30,970 --> 00:04:33,650
ability<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do in</font>

115
00:04:32,120 --> 00:04:35,870
incremental<font color="#E5E5E5"> builds right so if you do</font>

116
00:04:33,650 --> 00:04:37,698
that<font color="#CCCCCC"> save the world once</font><font color="#E5E5E5"> do some stuff</font>

117
00:04:35,870 --> 00:04:39,860
<font color="#E5E5E5">save the world</font><font color="#CCCCCC"> again you don't have</font><font color="#E5E5E5"> to</font>

118
00:04:37,699 --> 00:04:41,150
<font color="#E5E5E5">copy the whole memory</font><font color="#CCCCCC"> stayed out you</font>

119
00:04:39,860 --> 00:04:42,470
only<font color="#E5E5E5"> have to copy the stuff that's</font>

120
00:04:41,150 --> 00:04:47,780
changed<font color="#E5E5E5"> since the</font><font color="#CCCCCC"> last</font><font color="#E5E5E5"> time you did</font><font color="#CCCCCC"> it</font>

121
00:04:42,470 --> 00:04:49,520
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that is extremely</font><font color="#E5E5E5"> powerful so</font><font color="#CCCCCC"> okay</font>

122
00:04:47,780 --> 00:04:51,260
so most<font color="#E5E5E5"> of this is</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> there in</font><font color="#CCCCCC"> creo</font>

123
00:04:49,520 --> 00:04:53,570
why are we talking<font color="#CCCCCC"> about having</font><font color="#E5E5E5"> a Java</font>

124
00:04:51,260 --> 00:04:56,630
API and that's<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there are some</font>

125
00:04:53,570 --> 00:04:58,669
things<font color="#E5E5E5"> we as JVM guys can see as</font>

126
00:04:56,630 --> 00:05:02,990
potential opportunities<font color="#E5E5E5"> for this if we</font>

127
00:04:58,669 --> 00:05:05,180
had a Java API<font color="#CCCCCC"> one example is let's say</font>

128
00:05:02,990 --> 00:05:07,400
you wanted<font color="#CCCCCC"> to save the world</font><font color="#E5E5E5"> well you</font>

129
00:05:05,180 --> 00:05:09,889
could do a full<font color="#CCCCCC"> compaction of your heap</font>

130
00:05:07,400 --> 00:05:11,750
and get it all the way<font color="#CCCCCC"> down you know if</font>

131
00:05:09,889 --> 00:05:13,580
it was<font color="#E5E5E5"> 64 gigabytes</font><font color="#CCCCCC"> but you did have</font><font color="#E5E5E5"> two</font>

132
00:05:11,750 --> 00:05:15,979
full<font color="#E5E5E5"> GCS you got it all copied out and</font>

133
00:05:13,580 --> 00:05:17,810
you got it<font color="#E5E5E5"> down to</font><font color="#CCCCCC"> two gigabytes that</font>

134
00:05:15,979 --> 00:05:19,280
way we can give memory back<font color="#CCCCCC"> to the OS</font>

135
00:05:17,810 --> 00:05:20,990
<font color="#CCCCCC">and then when we write</font><font color="#E5E5E5"> it out we</font><font color="#CCCCCC"> don't</font>

136
00:05:19,280 --> 00:05:22,760
<font color="#E5E5E5">have to worry about all</font><font color="#CCCCCC"> that space</font><font color="#E5E5E5"> it'll</font>

137
00:05:20,990 --> 00:05:24,410
<font color="#CCCCCC">make</font><font color="#E5E5E5"> it faster</font><font color="#CCCCCC"> to copy it</font><font color="#E5E5E5"> out to disk</font>

138
00:05:22,760 --> 00:05:25,729
<font color="#E5E5E5">and</font><font color="#CCCCCC"> make it faster if you</font><font color="#E5E5E5"> want to</font>

139
00:05:24,410 --> 00:05:27,530
transfer<font color="#E5E5E5"> it across the network</font><font color="#CCCCCC"> and</font>

140
00:05:25,729 --> 00:05:32,599
hopefully<font color="#CCCCCC"> make it faster</font><font color="#E5E5E5"> to restore as</font>

141
00:05:27,530 --> 00:05:33,380
well<font color="#CCCCCC"> okay so I'm a GC weeny</font><font color="#E5E5E5"> right and</font>

142
00:05:32,600 --> 00:05:34,729
I've worked on a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of garbage</font>

143
00:05:33,380 --> 00:05:37,159
<font color="#E5E5E5">collector so I see this</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> first</font>

144
00:05:34,729 --> 00:05:40,039
thing I see<font color="#CCCCCC"> is a GC optimization that</font><font color="#E5E5E5"> we</font>

145
00:05:37,160 --> 00:05:41,810
can do so you have<font color="#CCCCCC"> your</font><font color="#E5E5E5"> Java process</font>

146
00:05:40,039 --> 00:05:43,430
<font color="#E5E5E5">you're building up all of your data</font>

147
00:05:41,810 --> 00:05:45,320
<font color="#E5E5E5">structures you're running parallel GC</font>

148
00:05:43,430 --> 00:05:47,210
and you're<font color="#E5E5E5"> getting rid of stuff but then</font>

149
00:05:45,320 --> 00:05:50,599
it's time<font color="#CCCCCC"> to checkpoint it and hey</font>

150
00:05:47,210 --> 00:05:52,609
<font color="#E5E5E5">wouldn't it be cool if we</font><font color="#CCCCCC"> went in and we</font>

151
00:05:50,599 --> 00:05:54,530
<font color="#CCCCCC">got</font><font color="#E5E5E5"> rid of parallel GC and we put in</font>

152
00:05:52,610 --> 00:05:56,539
<font color="#E5E5E5">epsilon GC they do nothing garbage</font>

153
00:05:54,530 --> 00:05:58,820
collector we could get rid of your card

154
00:05:56,539 --> 00:06:01,340
tables<font color="#E5E5E5"> we could get rid of the card mark</font>

155
00:05:58,820 --> 00:06:03,500
in<font color="#E5E5E5"> your card table to just maintain your</font>

156
00:06:01,340 --> 00:06:05,150
card tables and so when you went and<font color="#E5E5E5"> you</font>

157
00:06:03,500 --> 00:06:06,710
actually<font color="#E5E5E5"> restored this thing and ran it</font>

158
00:06:05,150 --> 00:06:08,270
if you're<font color="#CCCCCC"> doing something quick and</font>

159
00:06:06,710 --> 00:06:10,070
<font color="#E5E5E5">dirty like you know function as a</font>

160
00:06:08,270 --> 00:06:13,010
service or<font color="#CCCCCC"> something like that</font><font color="#E5E5E5"> you now</font>

161
00:06:10,070 --> 00:06:14,150
have less<font color="#E5E5E5"> space you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> faster</font><font color="#CCCCCC"> runtime</font>

162
00:06:13,010 --> 00:06:16,310
because you don't have the card marks

163
00:06:14,150 --> 00:06:20,479
<font color="#E5E5E5">and life is good</font>

164
00:06:16,310 --> 00:06:21,860
<font color="#E5E5E5">and that is</font><font color="#CCCCCC"> totally</font><font color="#E5E5E5"> doable if you have</font>

165
00:06:20,479 --> 00:06:25,490
any questions or if you doubt me please

166
00:06:21,860 --> 00:06:28,370
speak up<font color="#CCCCCC"> there was a really fascinating</font>

167
00:06:25,490 --> 00:06:31,910
paper at<font color="#CCCCCC"> PL di a few years ago on remix</font>

168
00:06:28,370 --> 00:06:33,440
and they paid<font color="#CCCCCC"> attention to</font><font color="#E5E5E5"> the hardware</font>

169
00:06:31,910 --> 00:06:35,750
counters to see when they<font color="#E5E5E5"> got you know</font>

170
00:06:33,440 --> 00:06:37,969
<font color="#CCCCCC">cache thrashing and they were able to</font>

171
00:06:35,750 --> 00:06:39,440
<font color="#E5E5E5">pad their data structures this is the</font>

172
00:06:37,970 --> 00:06:41,060
kind<font color="#CCCCCC"> of thing that you</font><font color="#E5E5E5"> know I was a</font>

173
00:06:39,440 --> 00:06:43,880
little skeptical of I mean<font color="#E5E5E5"> they showed</font>

174
00:06:41,060 --> 00:06:45,110
good results on<font color="#E5E5E5"> some benchmarks but I</font>

175
00:06:43,880 --> 00:06:46,320
can<font color="#CCCCCC"> believe that there are</font><font color="#E5E5E5"> times where</font>

176
00:06:45,110 --> 00:06:48,000
this would slow you down

177
00:06:46,320 --> 00:06:49,610
and the good<font color="#E5E5E5"> thing about checkpoint and</font>

178
00:06:48,000 --> 00:06:51,630
<font color="#E5E5E5">restore is you can do this kind</font><font color="#CCCCCC"> of work</font>

179
00:06:49,610 --> 00:06:52,920
<font color="#E5E5E5">while you're doing the build up phase</font>

180
00:06:51,630 --> 00:06:54,570
because that's the time it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> the</font>

181
00:06:52,920 --> 00:06:56,910
time<font color="#E5E5E5"> critical so if you want to monitor</font>

182
00:06:54,570 --> 00:07:01,230
<font color="#CCCCCC">performance counters and do things</font><font color="#E5E5E5"> like</font>

183
00:06:56,910 --> 00:07:02,280
<font color="#CCCCCC">this you can</font><font color="#E5E5E5"> and then later on</font><font color="#CCCCCC"> you know</font>

184
00:07:01,230 --> 00:07:07,320
at the restore time you'll<font color="#E5E5E5"> have</font>

185
00:07:02,280 --> 00:07:10,229
something<font color="#E5E5E5"> faster all right</font><font color="#CCCCCC"> so there's</font>

186
00:07:07,320 --> 00:07:11,580
also some JVM specific parameters that

187
00:07:10,230 --> 00:07:13,290
we're going<font color="#E5E5E5"> to need to restore if we</font>

188
00:07:11,580 --> 00:07:15,690
want this<font color="#E5E5E5"> to work right</font><font color="#CCCCCC"> right things get</font>

189
00:07:13,290 --> 00:07:17,880
cached in the JVM and some of them are

190
00:07:15,690 --> 00:07:20,040
<font color="#E5E5E5">cached in in clear places like the</font>

191
00:07:17,880 --> 00:07:21,600
number<font color="#CCCCCC"> of available processors things</font>

192
00:07:20,040 --> 00:07:23,010
like that you're going to<font color="#E5E5E5"> want to fix</font>

193
00:07:21,600 --> 00:07:24,990
those right if you save it<font color="#CCCCCC"> on an a</font>

194
00:07:23,010 --> 00:07:27,390
processor machine<font color="#E5E5E5"> you restore it on a</font>

195
00:07:24,990 --> 00:07:28,650
<font color="#CCCCCC">two processor machine you're</font><font color="#E5E5E5"> probably</font>

196
00:07:27,390 --> 00:07:31,469
going to<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> do a little bit of</font>

197
00:07:28,650 --> 00:07:33,270
cleanup<font color="#E5E5E5"> also you know if you have eight</font>

198
00:07:31,470 --> 00:07:34,650
garbage collection threads<font color="#E5E5E5"> in the first</font>

199
00:07:33,270 --> 00:07:36,419
one and<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> restoring it over here</font>

200
00:07:34,650 --> 00:07:37,530
<font color="#E5E5E5">you might want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> think about tuning it</font>

201
00:07:36,420 --> 00:07:40,950
<font color="#CCCCCC">to the machine you're actually running</font>

202
00:07:37,530 --> 00:07:42,450
<font color="#E5E5E5">on so we probably this is another reason</font>

203
00:07:40,950 --> 00:07:44,849
why<font color="#E5E5E5"> we want to have control in the</font><font color="#CCCCCC"> Java</font>

204
00:07:42,450 --> 00:07:50,130
world<font color="#E5E5E5"> of some of the things when we do</font>

205
00:07:44,850 --> 00:07:53,160
the restore<font color="#CCCCCC"> secure network connections</font>

206
00:07:50,130 --> 00:07:54,690
<font color="#E5E5E5">and handshakes</font><font color="#CCCCCC"> I don't know for sure the</font>

207
00:07:53,160 --> 00:07:56,940
<font color="#CCCCCC">creo handles at all properly</font><font color="#E5E5E5"> I'm hoping</font>

208
00:07:54,690 --> 00:07:58,410
to talk to<font color="#CCCCCC"> the creo guy later today but</font>

209
00:07:56,940 --> 00:07:59,790
<font color="#CCCCCC">I suspect</font><font color="#E5E5E5"> there's some stuff that we're</font>

210
00:07:58,410 --> 00:08:04,770
going<font color="#E5E5E5"> to want to do when we restore the</font>

211
00:07:59,790 --> 00:08:06,240
JVM to make sure they're right<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> we</font>

212
00:08:04,770 --> 00:08:08,190
want<font color="#E5E5E5"> to bring your</font><font color="#CCCCCC"> work-stealing cues to</font>

213
00:08:06,240 --> 00:08:10,080
quiescence right if we want<font color="#E5E5E5"> to we want</font>

214
00:08:08,190 --> 00:08:12,060
<font color="#E5E5E5">to get everything to a sane</font><font color="#CCCCCC"> state before</font>

215
00:08:10,080 --> 00:08:13,229
<font color="#CCCCCC">we checkpoint it maybe we want</font><font color="#E5E5E5"> to get</font>

216
00:08:12,060 --> 00:08:17,940
rid of your work still in queues and

217
00:08:13,230 --> 00:08:19,470
recreate<font color="#E5E5E5"> them one startup and maybe you</font>

218
00:08:17,940 --> 00:08:21,270
want to specify one check<font color="#E5E5E5"> pointing a</font>

219
00:08:19,470 --> 00:08:23,640
curse right you can do this<font color="#CCCCCC"> from Linux</font>

220
00:08:21,270 --> 00:08:25,289
<font color="#E5E5E5">from outside of</font><font color="#CCCCCC"> the JVM</font><font color="#E5E5E5"> but maybe then</font>

221
00:08:23,640 --> 00:08:26,669
you're getting the<font color="#E5E5E5"> JVM in a state where</font>

222
00:08:25,290 --> 00:08:28,830
it's got a lot of<font color="#E5E5E5"> garbage and it's</font>

223
00:08:26,670 --> 00:08:31,230
<font color="#CCCCCC">inconsistent if we control it from</font>

224
00:08:28,830 --> 00:08:33,630
<font color="#E5E5E5">inside of Java so you've got a loop it</font>

225
00:08:31,230 --> 00:08:35,400
creates a lot<font color="#CCCCCC"> of garbage you get to the</font>

226
00:08:33,630 --> 00:08:37,559
end of the loop and all of<font color="#CCCCCC"> that garbage</font>

227
00:08:35,400 --> 00:08:38,760
can<font color="#E5E5E5"> go away it's all temporary</font><font color="#CCCCCC"> maybe</font>

228
00:08:37,559 --> 00:08:41,669
that's where you<font color="#E5E5E5"> want to be doing</font><font color="#CCCCCC"> your</font>

229
00:08:38,760 --> 00:08:43,229
safe points and<font color="#E5E5E5"> having an</font><font color="#CCCCCC"> API to</font><font color="#E5E5E5"> Java</font>

230
00:08:41,669 --> 00:08:48,030
<font color="#E5E5E5">allows the Java programmer to have</font>

231
00:08:43,229 --> 00:08:49,290
control over when<font color="#CCCCCC"> that happens so have I</font>

232
00:08:48,030 --> 00:08:50,910
given<font color="#E5E5E5"> you motivation that we need to be</font>

233
00:08:49,290 --> 00:08:54,870
<font color="#CCCCCC">able to do this from inside of</font><font color="#E5E5E5"> Java is</font>

234
00:08:50,910 --> 00:08:57,689
anybody buying what I'm selling<font color="#CCCCCC"> ok so I</font>

235
00:08:54,870 --> 00:09:01,100
have<font color="#CCCCCC"> a proposed API for Java and this is</font>

236
00:08:57,690 --> 00:09:01,100
not set<font color="#CCCCCC"> in stone this</font><font color="#E5E5E5"> is</font>

237
00:09:03,069 --> 00:09:11,689
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so I have</font><font color="#E5E5E5"> just this is from my head</font>

238
00:09:08,540 --> 00:09:13,519
what I would like<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> so I'm open for</font>

239
00:09:11,689 --> 00:09:15,559
<font color="#CCCCCC">people to come up</font><font color="#E5E5E5"> and talk to me</font><font color="#CCCCCC"> about</font>

240
00:09:13,519 --> 00:09:17,929
where I'm wrong or what else we need<font color="#CCCCCC"> to</font>

241
00:09:15,559 --> 00:09:19,610
that<font color="#E5E5E5"> we don't have but we want to be</font>

242
00:09:17,929 --> 00:09:21,649
able to<font color="#E5E5E5"> check the world that's obvious</font>

243
00:09:19,610 --> 00:09:23,089
we want to know that we're running<font color="#E5E5E5"> on an</font>

244
00:09:21,649 --> 00:09:26,839
appropriate Linux kernel<font color="#E5E5E5"> that can do</font>

245
00:09:23,089 --> 00:09:28,699
this<font color="#CCCCCC"> I have no plans as of yet</font><font color="#E5E5E5"> to do it</font>

246
00:09:26,839 --> 00:09:30,949
for Solaris<font color="#E5E5E5"> or any other operating</font>

247
00:09:28,699 --> 00:09:32,359
system<font color="#CCCCCC"> I don't know what's what</font><font color="#E5E5E5"> what</font>

248
00:09:30,949 --> 00:09:33,769
tools are<font color="#E5E5E5"> there and what aren't but</font>

249
00:09:32,360 --> 00:09:36,040
that's the thing<font color="#E5E5E5"> that you have to do</font>

250
00:09:33,769 --> 00:09:38,089
before<font color="#CCCCCC"> you do</font><font color="#E5E5E5"> it to make sure it's there</font>

251
00:09:36,040 --> 00:09:40,160
<font color="#CCCCCC">save the</font><font color="#E5E5E5"> world</font><font color="#CCCCCC"> we'll save the</font><font color="#E5E5E5"> world</font>

252
00:09:38,089 --> 00:09:42,170
exactly<font color="#CCCCCC"> the way you're currently running</font>

253
00:09:40,160 --> 00:09:43,519
<font color="#E5E5E5">so we're not going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do anything clever</font>

254
00:09:42,170 --> 00:09:45,819
we're just going to<font color="#E5E5E5"> save it out so you</font>

255
00:09:43,519 --> 00:09:47,959
<font color="#CCCCCC">can get back to that bug that you had</font>

256
00:09:45,819 --> 00:09:49,670
<font color="#CCCCCC">save the world incremental gives you the</font>

257
00:09:47,959 --> 00:09:50,868
<font color="#CCCCCC">ability to do a faster save world</font>

258
00:09:49,670 --> 00:09:54,248
because you're only<font color="#E5E5E5"> saving the bits of</font>

259
00:09:50,869 --> 00:09:56,209
change<font color="#CCCCCC"> save the world with epsilon</font><font color="#E5E5E5"> G see</font>

260
00:09:54,249 --> 00:09:57,679
whether that belongs there or<font color="#E5E5E5"> not I</font>

261
00:09:56,209 --> 00:10:01,128
don't<font color="#CCCCCC"> know but that was one of my use</font>

262
00:09:57,679 --> 00:10:03,319
cases<font color="#E5E5E5"> so I put it up there</font><font color="#CCCCCC"> optimize the</font>

263
00:10:01,129 --> 00:10:06,649
world<font color="#E5E5E5"> so we can</font><font color="#CCCCCC"> run back-to-back full</font>

264
00:10:03,319 --> 00:10:08,540
GCS<font color="#E5E5E5"> we can optimize</font><font color="#CCCCCC"> the memory layout I</font>

265
00:10:06,649 --> 00:10:10,220
don't know what else<font color="#CCCCCC"> can go</font><font color="#E5E5E5"> in there</font>

266
00:10:08,540 --> 00:10:13,339
<font color="#E5E5E5">right it's it's this big open question</font>

267
00:10:10,220 --> 00:10:15,709
of what could we do<font color="#CCCCCC"> you can restore</font><font color="#E5E5E5"> the</font>

268
00:10:13,339 --> 00:10:17,749
world<font color="#E5E5E5"> obviously and maybe even migrate</font>

269
00:10:15,709 --> 00:10:19,219
<font color="#E5E5E5">the world like I</font><font color="#CCCCCC"> said this isn't set in</font>

270
00:10:17,749 --> 00:10:21,410
stone<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is just what I'm thinking</font>

271
00:10:19,220 --> 00:10:30,439
about<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now I welcome any</font><font color="#E5E5E5"> and all</font>

272
00:10:21,410 --> 00:10:31,939
feedback except<font color="#E5E5E5"> from Alexa okay so</font>

273
00:10:30,439 --> 00:10:33,618
what's the<font color="#E5E5E5"> current status</font><font color="#CCCCCC"> I have a</font>

274
00:10:31,939 --> 00:10:34,849
prototype<font color="#CCCCCC"> that uses J and I just so I</font>

275
00:10:33,619 --> 00:10:36,199
<font color="#E5E5E5">could play with</font><font color="#CCCCCC"> it I</font><font color="#E5E5E5"> don't have</font>

276
00:10:34,850 --> 00:10:38,029
<font color="#E5E5E5">everything I can check the world I can</font>

277
00:10:36,199 --> 00:10:40,099
save the world<font color="#CCCCCC"> and I can restore the</font>

278
00:10:38,029 --> 00:10:41,899
<font color="#E5E5E5">world from the command line and I'll get</font>

279
00:10:40,100 --> 00:10:44,980
into<font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> later why it's hard to</font>

280
00:10:41,899 --> 00:10:47,389
restore<font color="#E5E5E5"> the world from Java right now</font>

281
00:10:44,980 --> 00:10:51,350
<font color="#E5E5E5">but it shows</font><font color="#CCCCCC"> the cria works and it does</font>

282
00:10:47,389 --> 00:10:52,790
what<font color="#E5E5E5"> we want to do test random is one of</font>

283
00:10:51,350 --> 00:10:54,949
my other things I<font color="#E5E5E5"> like is random numbers</font>

284
00:10:52,790 --> 00:10:56,389
so this generates a whole bunch of

285
00:10:54,949 --> 00:10:58,729
random<font color="#CCCCCC"> numbers and bends them into</font>

286
00:10:56,389 --> 00:10:59,809
different<font color="#E5E5E5"> bins and so we do the</font><font color="#CCCCCC"> setup</font>

287
00:10:58,730 --> 00:11:01,850
where<font color="#E5E5E5"> we do all</font><font color="#CCCCCC"> the random</font><font color="#E5E5E5"> number</font>

288
00:10:59,809 --> 00:11:04,040
generation in the binning<font color="#E5E5E5"> and then we</font>

289
00:11:01,850 --> 00:11:06,199
save the<font color="#E5E5E5"> world</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then when we restore</font>

290
00:11:04,040 --> 00:11:07,939
the<font color="#E5E5E5"> world it just gives us the output</font><font color="#CCCCCC"> of</font>

291
00:11:06,199 --> 00:11:09,889
<font color="#E5E5E5">what the bidding was it tells us the</font>

292
00:11:07,939 --> 00:11:11,269
data the<font color="#E5E5E5"> information about the data this</font>

293
00:11:09,889 --> 00:11:12,240
<font color="#E5E5E5">is sort of the use case that I'm</font>

294
00:11:11,269 --> 00:11:13,980
envisioning for<font color="#CCCCCC"> the</font>

295
00:11:12,240 --> 00:11:16,050
is that you have some big setup<font color="#E5E5E5"> phase</font>

296
00:11:13,980 --> 00:11:17,550
that generates a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of garbage and then</font>

297
00:11:16,050 --> 00:11:19,979
you have some small fast thing that<font color="#E5E5E5"> runs</font>

298
00:11:17,550 --> 00:11:22,979
afterwards<font color="#E5E5E5"> and this just shows</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

299
00:11:19,980 --> 00:11:25,200
<font color="#CCCCCC">know we we ran our big program we had</font>

300
00:11:22,980 --> 00:11:27,540
<font color="#E5E5E5">Java running we dumped it out</font>

301
00:11:25,200 --> 00:11:29,550
we have no<font color="#CCCCCC"> java running and we restored</font>

302
00:11:27,540 --> 00:11:31,260
it<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it all works so this is just</font><font color="#E5E5E5"> to</font>

303
00:11:29,550 --> 00:11:35,969
<font color="#E5E5E5">show that this does work</font><font color="#CCCCCC"> for Java which</font>

304
00:11:31,260 --> 00:11:38,550
was one of<font color="#CCCCCC"> my first concerns and yes I</font>

305
00:11:35,970 --> 00:11:40,529
have I have restored<font color="#E5E5E5"> multiple the same</font>

306
00:11:38,550 --> 00:11:44,760
store JVM multiple times with no

307
00:11:40,529 --> 00:11:48,300
problems<font color="#CCCCCC"> I ran a little prototype</font><font color="#E5E5E5"> that</font>

308
00:11:44,760 --> 00:11:49,800
called it from Java<font color="#CCCCCC"> there are some</font>

309
00:11:48,300 --> 00:11:51,089
things<font color="#E5E5E5"> here that surprised me and it</font>

310
00:11:49,800 --> 00:11:52,319
shouldn't<font color="#CCCCCC"> have I'm feeling kind of</font>

311
00:11:51,089 --> 00:11:55,529
stupid<font color="#E5E5E5"> about that but I'll print it out</font>

312
00:11:52,320 --> 00:11:57,600
here<font color="#CCCCCC"> so I wanted to</font><font color="#E5E5E5"> time the first step</font>

313
00:11:55,529 --> 00:11:59,130
in time<font color="#E5E5E5"> the second step and I did the</font>

314
00:11:57,600 --> 00:12:01,320
first<font color="#CCCCCC"> step on Monday and the second step</font>

315
00:11:59,130 --> 00:12:05,430
on Tuesday<font color="#E5E5E5"> and it said</font><font color="#CCCCCC"> that it took</font><font color="#E5E5E5"> 25</font>

316
00:12:01,320 --> 00:12:07,110
<font color="#E5E5E5">hours so that's one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the things if you</font>

317
00:12:05,430 --> 00:12:09,120
<font color="#CCCCCC">cache variables like the current time in</font>

318
00:12:07,110 --> 00:12:13,770
milliseconds<font color="#E5E5E5"> it's the current time from</font>

319
00:12:09,120 --> 00:12:15,360
before you<font color="#E5E5E5"> check</font><font color="#CCCCCC"> pointed it checkpoint</font>

320
00:12:13,770 --> 00:12:16,649
restore<font color="#E5E5E5"> this is actually interesting</font>

321
00:12:15,360 --> 00:12:19,649
thing which<font color="#E5E5E5"> is where you call save the</font>

322
00:12:16,649 --> 00:12:21,060
world<font color="#E5E5E5"> and you can sort of think</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that</font>

323
00:12:19,649 --> 00:12:22,470
like a fork<font color="#CCCCCC"> you have an option of what</font>

324
00:12:21,060 --> 00:12:25,469
<font color="#CCCCCC">you do next you can keep running</font><font color="#E5E5E5"> your</font>

325
00:12:22,470 --> 00:12:29,250
<font color="#CCCCCC">java program or you can stop it either</font>

326
00:12:25,470 --> 00:12:31,440
way<font color="#CCCCCC"> and so that's just</font><font color="#E5E5E5"> gives you an</font><font color="#CCCCCC"> idea</font>

327
00:12:29,250 --> 00:12:32,880
<font color="#CCCCCC">of what it what</font><font color="#E5E5E5"> checkpoint we store</font>

328
00:12:31,440 --> 00:12:36,950
check the<font color="#E5E5E5"> world save the</font><font color="#CCCCCC"> world save</font><font color="#E5E5E5"> the</font>

329
00:12:32,880 --> 00:12:39,750
world twice that stuff all works now

330
00:12:36,950 --> 00:12:41,310
<font color="#CCCCCC">alright so how does creo work under the</font>

331
00:12:39,750 --> 00:12:44,640
covers because<font color="#E5E5E5"> if you're skeptical like</font>

332
00:12:41,310 --> 00:12:45,930
it<font color="#E5E5E5"> I am you want to know at some</font><font color="#CCCCCC"> point</font>

333
00:12:44,640 --> 00:12:47,670
in time<font color="#E5E5E5"> this is what your Java process</font>

334
00:12:45,930 --> 00:12:49,829
<font color="#E5E5E5">look</font><font color="#CCCCCC"> like it's changed since</font><font color="#E5E5E5"> then I</font>

335
00:12:47,670 --> 00:12:51,540
<font color="#E5E5E5">think but</font><font color="#CCCCCC"> you have some</font><font color="#E5E5E5"> GC</font><font color="#CCCCCC"> threads some</font>

336
00:12:49,829 --> 00:12:54,029
compiler threads some Java threads<font color="#CCCCCC"> I'm</font>

337
00:12:51,540 --> 00:12:55,439
not going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about all</font><font color="#E5E5E5"> those all</font>

338
00:12:54,029 --> 00:12:58,730
I'm<font color="#E5E5E5"> gonna say is</font><font color="#CCCCCC"> that they are all</font>

339
00:12:55,440 --> 00:13:01,260
mirrored in the /proc hierarchy so

340
00:12:58,730 --> 00:13:03,180
anything I can do for<font color="#CCCCCC"> the Java pit</font><font color="#E5E5E5"> I can</font>

341
00:13:01,260 --> 00:13:04,200
do for all<font color="#E5E5E5"> of the sub kids and that's</font>

342
00:13:03,180 --> 00:13:07,410
<font color="#E5E5E5">the last time I'm going to talk</font><font color="#CCCCCC"> about</font>

343
00:13:04,200 --> 00:13:10,020
the<font color="#E5E5E5"> sub</font><font color="#CCCCCC"> kids alright so the kre-o</font>

344
00:13:07,410 --> 00:13:12,209
process is<font color="#E5E5E5"> really cool it calls it's</font>

345
00:13:10,020 --> 00:13:15,029
built<font color="#E5E5E5"> on top of</font><font color="#CCCCCC"> P</font><font color="#E5E5E5"> trace and it causes a</font>

346
00:13:12,209 --> 00:13:16,529
<font color="#CCCCCC">cease that seizes the Java process and</font>

347
00:13:15,029 --> 00:13:19,800
stops it and<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course this is recursive</font>

348
00:13:16,529 --> 00:13:22,589
<font color="#E5E5E5">and it's it it seizes all of the threads</font>

349
00:13:19,800 --> 00:13:25,770
<font color="#E5E5E5">under the Java</font><font color="#CCCCCC"> process it then</font><font color="#E5E5E5"> inserts</font>

350
00:13:22,589 --> 00:13:27,870
some parasite code<font color="#E5E5E5"> into the Java process</font>

351
00:13:25,770 --> 00:13:29,670
and this code<font color="#CCCCCC"> now runs with all of the</font>

352
00:13:27,870 --> 00:13:31,410
permissions<font color="#E5E5E5"> that the Java process had so</font>

353
00:13:29,670 --> 00:13:36,000
it can it can do anything that<font color="#E5E5E5"> you have</font>

354
00:13:31,410 --> 00:13:37,530
a<font color="#CCCCCC"> process could do so one thing that is</font>

355
00:13:36,000 --> 00:13:40,860
is that<font color="#CCCCCC"> it can copy all the virtual</font>

356
00:13:37,530 --> 00:13:42,750
<font color="#E5E5E5">memory right and this is from s</font><font color="#CCCCCC"> Maps</font><font color="#E5E5E5"> so</font>

357
00:13:40,860 --> 00:13:44,040
it can copy all<font color="#CCCCCC"> of the contents of</font><font color="#E5E5E5"> all</font>

358
00:13:42,750 --> 00:13:46,410
your auxilary data structures

359
00:13:44,040 --> 00:13:47,699
this was my heap<font color="#CCCCCC"> all of these things get</font>

360
00:13:46,410 --> 00:13:54,030
copied out to the file<font color="#CCCCCC"> system and it's</font>

361
00:13:47,700 --> 00:13:56,070
bit<font color="#E5E5E5"> bloated it's very fast and</font><font color="#CCCCCC"> you have</font>

362
00:13:54,030 --> 00:13:57,720
<font color="#E5E5E5">map files and those all get copied</font><font color="#CCCCCC"> over</font>

363
00:13:56,070 --> 00:14:01,970
there too<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> in somewhere</font>

364
00:13:57,720 --> 00:14:04,110
else<font color="#CCCCCC"> in the proc structure and so on</font>

365
00:14:01,970 --> 00:14:06,450
<font color="#CCCCCC">basically the file descriptor numbers</font>

366
00:14:04,110 --> 00:14:10,200
the core parameters everything<font color="#E5E5E5"> can get</font>

367
00:14:06,450 --> 00:14:11,880
<font color="#CCCCCC">access to everything it can</font><font color="#E5E5E5"> get access</font>

368
00:14:10,200 --> 00:14:14,700
<font color="#E5E5E5">to the registers</font><font color="#CCCCCC"> and the trap and the</font>

369
00:14:11,880 --> 00:14:16,020
stack using<font color="#CCCCCC"> pete ray speak user I don't</font>

370
00:14:14,700 --> 00:14:19,860
know if anybody<font color="#CCCCCC"> out here ever programmed</font>

371
00:14:16,020 --> 00:14:22,650
<font color="#E5E5E5">a trs-80 I did and peek and poke were</font>

372
00:14:19,860 --> 00:14:26,420
really<font color="#E5E5E5"> cool way back then so having peek</font>

373
00:14:22,650 --> 00:14:26,420
user is very nostalgic for me

374
00:14:26,780 --> 00:14:32,970
the parasite code can read like I said

375
00:14:31,470 --> 00:14:37,080
it operates with all<font color="#CCCCCC"> the permissions</font><font color="#E5E5E5"> of</font>

376
00:14:32,970 --> 00:14:38,730
<font color="#CCCCCC">the Java process</font><font color="#E5E5E5"> then they can</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> the</font>

377
00:14:37,080 --> 00:14:40,260
<font color="#CCCCCC">pee trace code to clean up the parasite</font>

378
00:14:38,730 --> 00:14:44,330
code to restore the<font color="#CCCCCC"> original code and</font>

379
00:14:40,260 --> 00:14:44,330
your<font color="#E5E5E5"> Java process can just keep going</font>

380
00:14:45,140 --> 00:14:52,290
<font color="#E5E5E5">and it</font><font color="#CCCCCC"> detaches and</font><font color="#E5E5E5"> we go on</font><font color="#CCCCCC"> the reverse</font>

381
00:14:49,680 --> 00:14:55,319
is pretty much an inverse except that

382
00:14:52,290 --> 00:14:56,760
the<font color="#E5E5E5"> kre-o process morphs itself into the</font>

383
00:14:55,320 --> 00:15:01,140
Java<font color="#CCCCCC"> process which I thought was</font><font color="#E5E5E5"> pretty</font>

384
00:14:56,760 --> 00:15:03,600
cool<font color="#CCCCCC"> if you have any questions or if you</font>

385
00:15:01,140 --> 00:15:04,949
have<font color="#CCCCCC"> any</font><font color="#E5E5E5"> ideas I'm hoping open to</font>

386
00:15:03,600 --> 00:15:05,580
questions<font color="#CCCCCC"> now but</font><font color="#E5E5E5"> if you want</font><font color="#CCCCCC"> to contact</font>

387
00:15:04,950 --> 00:15:07,890
me<font color="#CCCCCC"> later</font>

388
00:15:05,580 --> 00:15:15,180
CHF at<font color="#CCCCCC"> read Hakam and I'd love to hear</font>

389
00:15:07,890 --> 00:15:17,670
<font color="#CCCCCC">from you</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> I don't have</font><font color="#E5E5E5"> that timing in</font>

390
00:15:15,180 --> 00:15:19,709
front of me<font color="#E5E5E5"> the question was how long</font>

391
00:15:17,670 --> 00:15:23,310
<font color="#E5E5E5">does it take to take to get a snapshot</font>

392
00:15:19,710 --> 00:15:26,400
<font color="#CCCCCC">I haven't worried about that</font><font color="#E5E5E5"> the restore</font>

393
00:15:23,310 --> 00:15:28,199
process is very<font color="#CCCCCC"> fast but I don't</font><font color="#E5E5E5"> have</font>

394
00:15:26,400 --> 00:15:29,430
the numbers in<font color="#E5E5E5"> front of me we are kind</font>

395
00:15:28,200 --> 00:15:30,870
of trying<font color="#CCCCCC"> to optimize the restore</font>

396
00:15:29,430 --> 00:15:31,920
<font color="#E5E5E5">process is there a reason why you would</font>

397
00:15:30,870 --> 00:15:34,310
<font color="#CCCCCC">want to optimize the checkpointing</font>

398
00:15:31,920 --> 00:15:34,310
process

399
00:15:50,800 --> 00:15:55,550
that is an awesome<font color="#E5E5E5"> idea</font>

400
00:15:53,089 --> 00:15:57,140
what's your name<font color="#CCCCCC"> Sonny I will give you</font>

401
00:15:55,550 --> 00:15:58,939
credit<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that idea I think that's an</font>

402
00:15:57,140 --> 00:16:00,339
excellent use case and I will<font color="#CCCCCC"> look into</font>

403
00:15:58,940 --> 00:16:02,930
it

404
00:16:00,339 --> 00:16:06,770
<font color="#CCCCCC">the question was how long does it take</font>

405
00:16:02,930 --> 00:16:08,899
to take<font color="#E5E5E5"> a to check point your Java</font>

406
00:16:06,770 --> 00:16:10,189
program and I haven't worried about that

407
00:16:08,899 --> 00:16:12,740
<font color="#E5E5E5">because I</font><font color="#CCCCCC"> assumed that it didn't</font><font color="#E5E5E5"> matter</font>

408
00:16:10,190 --> 00:16:15,140
<font color="#E5E5E5">but he wants a heap to heap dump and</font>

409
00:16:12,740 --> 00:16:16,550
that takes too long so if I<font color="#E5E5E5"> can do a</font>

410
00:16:15,140 --> 00:16:22,130
<font color="#CCCCCC">check point faster than he can do a heap</font>

411
00:16:16,550 --> 00:16:24,829
dump<font color="#CCCCCC"> he's</font><font color="#E5E5E5"> gonna be happy with me yes</font><font color="#CCCCCC"> how</font>

412
00:16:22,130 --> 00:16:26,209
do you handle file descriptors<font color="#E5E5E5"> during</font>

413
00:16:24,830 --> 00:16:30,320
restore time when the files are not

414
00:16:26,209 --> 00:16:32,089
there<font color="#E5E5E5"> anymore</font><font color="#CCCCCC"> on another machine that's</font>

415
00:16:30,320 --> 00:16:34,940
an excellent question and I defer to

416
00:16:32,089 --> 00:16:37,010
<font color="#CCCCCC">crea to do that I know</font><font color="#E5E5E5"> that they have</font>

417
00:16:34,940 --> 00:16:38,420
done it and in the worst<font color="#E5E5E5"> case scenario</font>

418
00:16:37,010 --> 00:16:39,890
if they don't do<font color="#E5E5E5"> it then you have to run</font>

419
00:16:38,420 --> 00:16:47,329
<font color="#E5E5E5">your</font><font color="#CCCCCC"> java in a container</font><font color="#E5E5E5"> but I don't</font>

420
00:16:39,890 --> 00:16:49,430
know I think it's oh thank you if the

421
00:16:47,330 --> 00:16:51,500
files<font color="#E5E5E5"> are on</font><font color="#CCCCCC"> the destination system</font><font color="#E5E5E5"> I</font>

422
00:16:49,430 --> 00:16:54,050
<font color="#E5E5E5">know they accrue</font><font color="#CCCCCC"> you will abort the</font>

423
00:16:51,500 --> 00:16:56,300
restore it will just<font color="#CCCCCC"> not work the files</font>

424
00:16:54,050 --> 00:17:00,170
need to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> there need to</font><font color="#CCCCCC"> be at</font><font color="#E5E5E5"> least the</font>

425
00:16:56,300 --> 00:17:02,959
same size because<font color="#CCCCCC"> crea wants to read</font><font color="#E5E5E5"> at</font>

426
00:17:00,170 --> 00:17:06,230
the position the process used<font color="#E5E5E5"> to read</font>

427
00:17:02,959 --> 00:17:08,389
and it's it makes sense to<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> same</font>

428
00:17:06,230 --> 00:17:09,949
<font color="#CCCCCC">files there because else you get</font>

429
00:17:08,390 --> 00:17:11,620
something<font color="#E5E5E5"> else back or your right to the</font>

430
00:17:09,949 --> 00:17:14,540
wrong location

431
00:17:11,619 --> 00:17:21,139
are there any other<font color="#E5E5E5"> questions yes back</font>

432
00:17:14,540 --> 00:17:25,490
there I suppose already had to wait for

433
00:17:21,140 --> 00:17:26,059
<font color="#E5E5E5">the mic so when we spin the process back</font>

434
00:17:25,490 --> 00:17:29,270
up again

435
00:17:26,059 --> 00:17:31,100
certain VM structures like the<font color="#CCCCCC"> runtime</font>

436
00:17:29,270 --> 00:17:32,690
thread pools<font color="#E5E5E5"> are going to be dependent</font>

437
00:17:31,100 --> 00:17:34,669
on<font color="#E5E5E5"> things like the number of CPUs in the</font>

438
00:17:32,690 --> 00:17:35,630
machine so<font color="#CCCCCC"> if you go from a larger</font>

439
00:17:34,670 --> 00:17:38,690
machine<font color="#E5E5E5"> to a smaller one</font>

440
00:17:35,630 --> 00:17:39,080
<font color="#E5E5E5">you risk crunching the destination</font>

441
00:17:38,690 --> 00:17:41,030
machine

442
00:17:39,080 --> 00:17:42,949
<font color="#E5E5E5">because it's now got a very large VM</font>

443
00:17:41,030 --> 00:17:44,720
thread pool<font color="#E5E5E5"> that's what I said that</font>

444
00:17:42,950 --> 00:17:47,210
<font color="#CCCCCC">that's why I think we need a java</font>

445
00:17:44,720 --> 00:17:48,950
restore process<font color="#E5E5E5"> the Java restore process</font>

446
00:17:47,210 --> 00:17:49,430
<font color="#E5E5E5">is going to have to be smart</font><font color="#CCCCCC"> about some</font>

447
00:17:48,950 --> 00:17:51,290
things

448
00:17:49,430 --> 00:17:53,540
and the number of<font color="#E5E5E5"> processors on the</font>

449
00:17:51,290 --> 00:17:55,580
machine the<font color="#E5E5E5"> size of the heap things like</font>

450
00:17:53,540 --> 00:17:57,530
that<font color="#E5E5E5"> the restore process is going to</font>

451
00:17:55,580 --> 00:17:58,669
have to be smart about<font color="#E5E5E5"> or there's got to</font>

452
00:17:57,530 --> 00:18:01,450
be an interface to let the drive a

453
00:17:58,670 --> 00:18:04,130
developer tell the<font color="#CCCCCC"> restored processor</font>

454
00:18:01,450 --> 00:18:08,000
<font color="#CCCCCC">the you know I want this you know I want</font>

455
00:18:04,130 --> 00:18:11,120
these<font color="#CCCCCC"> particular parameters so have you</font>

456
00:18:08,000 --> 00:18:12,710
given<font color="#CCCCCC"> thought</font><font color="#E5E5E5"> about how to handle random</font>

457
00:18:11,120 --> 00:18:15,139
<font color="#E5E5E5">numbers and</font><font color="#CCCCCC"> other stuff that's required</font>

458
00:18:12,710 --> 00:18:18,440
for security or certificates or some

459
00:18:15,140 --> 00:18:20,330
secure stuff generation<font color="#CCCCCC"> cuz</font><font color="#E5E5E5"> it might get</font>

460
00:18:18,440 --> 00:18:25,910
<font color="#CCCCCC">check point and then it comes becomes</font>

461
00:18:20,330 --> 00:18:28,580
predictable<font color="#CCCCCC"> at the next startup that's a</font>

462
00:18:25,910 --> 00:18:32,860
great question<font color="#E5E5E5"> I will add</font><font color="#CCCCCC"> that to my</font>

463
00:18:28,580 --> 00:18:35,240
list<font color="#E5E5E5"> what's your name you okay thank you</font>

464
00:18:32,860 --> 00:18:40,070
<font color="#E5E5E5">are there any other questions or any</font>

465
00:18:35,240 --> 00:18:43,090
other<font color="#CCCCCC"> things I missed and software</font>

466
00:18:40,070 --> 00:18:46,790
development by committee I love<font color="#E5E5E5"> this yes</font>

467
00:18:43,090 --> 00:18:49,429
it does not need root access<font color="#E5E5E5"> because it</font>

468
00:18:46,790 --> 00:18:50,300
goes in as the it has the<font color="#CCCCCC"> same</font>

469
00:18:49,430 --> 00:18:52,160
<font color="#CCCCCC">permission well</font>

470
00:18:50,300 --> 00:18:53,899
cRIO process needs<font color="#E5E5E5"> root access but</font>

471
00:18:52,160 --> 00:19:00,280
that's already in there<font color="#CCCCCC"> the it goes</font><font color="#E5E5E5"> in</font>

472
00:18:53,900 --> 00:19:00,280
has<font color="#E5E5E5"> the permissions of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> java vm yes</font>

473
00:19:23,600 --> 00:19:29,360
if<font color="#CCCCCC"> I can condense that</font><font color="#E5E5E5"> small talk did</font>

474
00:19:26,190 --> 00:19:29,360
<font color="#E5E5E5">everything first and</font><font color="#CCCCCC"> they did it better</font>

475
00:19:29,780 --> 00:19:35,820
I didn't want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> turn</font><font color="#E5E5E5"> out that way</font><font color="#CCCCCC"> are</font>

476
00:19:33,390 --> 00:19:37,380
you<font color="#CCCCCC"> also credited the things that</font><font color="#E5E5E5"> small</font>

477
00:19:35,820 --> 00:19:39,600
talk stole which was the snapshot from

478
00:19:37,380 --> 00:19:41,610
<font color="#CCCCCC">the list machine</font><font color="#E5E5E5"> which I had next to me</font>

479
00:19:39,600 --> 00:19:44,399
running<font color="#CCCCCC"> while I was developing</font><font color="#E5E5E5"> these</font>

480
00:19:41,610 --> 00:19:46,409
snapshots<font color="#CCCCCC"> there for small talk</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> Lisp</font>

481
00:19:44,400 --> 00:19:48,810
did it first<font color="#E5E5E5"> no small taking</font>

482
00:19:46,410 --> 00:19:52,200
credit here just to be clear<font color="#CCCCCC"> which</font><font color="#E5E5E5"> I</font>

483
00:19:48,810 --> 00:19:55,010
<font color="#E5E5E5">would did it last however I don't know</font>

484
00:19:52,200 --> 00:19:57,540
we're not<font color="#CCCCCC"> done yet</font>

485
00:19:55,010 --> 00:20:22,020
<font color="#CCCCCC">are there any other questions or</font>

486
00:19:57,540 --> 00:20:25,620
comments yes so monotonic monotonic<font color="#E5E5E5"> time</font>

487
00:20:22,020 --> 00:20:27,540
is<font color="#E5E5E5"> indeed a problem with process</font>

488
00:20:25,620 --> 00:20:31,110
migration<font color="#CCCCCC"> and container migration and</font>

489
00:20:27,540 --> 00:20:33,710
<font color="#CCCCCC">yes our</font><font color="#E5E5E5"> currently discussions for a new</font>

490
00:20:31,110 --> 00:20:37,469
Linux kernel<font color="#E5E5E5"> night namespace for time</font>

491
00:20:33,710 --> 00:20:38,610
clock monotonic<font color="#CCCCCC"> but this is nothing</font>

492
00:20:37,470 --> 00:20:41,370
there<font color="#E5E5E5"> yet it's still under discussion</font>

493
00:20:38,610 --> 00:20:46,620
<font color="#CCCCCC">but it's a no known problem with and</font>

494
00:20:41,370 --> 00:20:47,760
process migration yes all right<font color="#E5E5E5"> I don't</font>

495
00:20:46,620 --> 00:20:49,830
<font color="#CCCCCC">know how much time</font><font color="#E5E5E5"> we have are we</font>

496
00:20:47,760 --> 00:20:54,270
worried there's a question way in the

497
00:20:49,830 --> 00:20:57,439
back so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can run it's great that I</font>

498
00:20:54,270 --> 00:20:57,440
<font color="#E5E5E5">get to tell him what</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> for once</font>

499
00:20:59,500 --> 00:21:04,630
so as I understand your primary<font color="#CCCCCC"> use case</font>

500
00:21:02,110 --> 00:21:06,908
is to<font color="#E5E5E5"> restore the</font><font color="#CCCCCC"> original process on</font>

501
00:21:04,630 --> 00:21:10,770
the original machine<font color="#E5E5E5"> from a snapshot</font><font color="#CCCCCC"> but</font>

502
00:21:06,909 --> 00:21:14,080
<font color="#CCCCCC">I can also</font><font color="#E5E5E5"> imagine</font><font color="#CCCCCC"> that you want</font><font color="#E5E5E5"> to like</font>

503
00:21:10,770 --> 00:21:15,460
warm up<font color="#E5E5E5"> the JVM</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> warm up the process</font>

504
00:21:14,080 --> 00:21:18,370
and then scale<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> a number of</font>

505
00:21:15,460 --> 00:21:20,409
<font color="#E5E5E5">different</font><font color="#CCCCCC"> systems but then the file</font>

506
00:21:18,370 --> 00:21:22,570
handles as you mentioned before<font color="#CCCCCC"> becomes</font>

507
00:21:20,409 --> 00:21:24,690
a problem<font color="#E5E5E5"> and</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> network</font><font color="#CCCCCC"> socket</font><font color="#E5E5E5"> so is</font>

508
00:21:22,570 --> 00:21:28,240
there any plans to<font color="#CCCCCC"> go in that direction</font>

509
00:21:24,690 --> 00:21:30,640
<font color="#CCCCCC">I'm sure that once this spins up right</font>

510
00:21:28,240 --> 00:21:32,740
now<font color="#CCCCCC"> ok I used</font><font color="#E5E5E5"> to work in</font><font color="#CCCCCC"> Sun labs and</font>

511
00:21:30,640 --> 00:21:34,270
I'm not a<font color="#E5E5E5"> very practical person</font><font color="#CCCCCC"> I want</font>

512
00:21:32,740 --> 00:21:36,070
to prove<font color="#CCCCCC"> that it's pragmatic and that we</font>

513
00:21:34,270 --> 00:21:37,330
can do it but there are<font color="#E5E5E5"> details</font><font color="#CCCCCC"> like</font>

514
00:21:36,070 --> 00:21:39,639
that that<font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> need to be worked</font>

515
00:21:37,330 --> 00:21:41,280
out in a<font color="#CCCCCC"> long-term if people want to</font>

516
00:21:39,640 --> 00:21:43,929
want it to just work for Java<font color="#CCCCCC"> I</font>

517
00:21:41,280 --> 00:21:45,190
acknowledge that<font color="#E5E5E5"> but I think this is</font>

518
00:21:43,929 --> 00:21:48,010
<font color="#E5E5E5">cool and I</font><font color="#CCCCCC"> think it's worth talking</font>

519
00:21:45,190 --> 00:21:50,830
about and<font color="#E5E5E5"> getting getting spun up and I</font>

520
00:21:48,010 --> 00:21:53,710
hope you guys agree are we anywhere else

521
00:21:50,830 --> 00:21:56,730
are<font color="#CCCCCC"> we done I think we're done thank you</font>

522
00:21:53,710 --> 00:21:56,730
Thank<font color="#E5E5E5"> You Christine</font>

523
00:21:59,680 --> 00:22:01,740
<font color="#CCCCCC">you</font>

