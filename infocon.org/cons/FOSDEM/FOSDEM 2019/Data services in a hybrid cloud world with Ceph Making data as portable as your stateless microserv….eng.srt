1
00:00:22,100 --> 00:00:28,180
[Music]

2
00:00:24,250 --> 00:00:28,180
can you try<font color="#E5E5E5"> to sit there</font>

3
00:00:43,010 --> 00:00:47,839
hello hello<font color="#CCCCCC"> all right</font>

4
00:00:56,880 --> 00:01:00,150
that's right

5
00:01:07,710 --> 00:01:20,889
so thank you<font color="#E5E5E5"> good morning</font><font color="#CCCCCC"> everyone thank</font>

6
00:01:18,400 --> 00:01:23,920
you<font color="#CCCCCC"> for</font><font color="#E5E5E5"> coming so early in the morning</font>

7
00:01:20,890 --> 00:01:26,470
<font color="#CCCCCC">Friday I didn't bushy-tailed</font><font color="#E5E5E5"> my name is</font>

8
00:01:23,920 --> 00:01:28,650
sage while<font color="#E5E5E5"> I work at Red Hat on the Ceph</font>

9
00:01:26,470 --> 00:01:31,929
project<font color="#CCCCCC"> I've been working on</font><font color="#E5E5E5"> stuff for</font>

10
00:01:28,650 --> 00:01:33,700
almost 15<font color="#CCCCCC"> years now and today</font><font color="#E5E5E5"> I'm going</font>

11
00:01:31,930 --> 00:01:36,610
to talk<font color="#CCCCCC"> about some of</font><font color="#E5E5E5"> the multi cluster</font>

12
00:01:33,700 --> 00:01:39,729
<font color="#E5E5E5">or multi cloud hybrid cloud capabilities</font>

13
00:01:36,610 --> 00:01:41,440
in the<font color="#E5E5E5"> stuff storage system so just</font>

14
00:01:39,729 --> 00:01:42,610
<font color="#E5E5E5">briefly let</font><font color="#CCCCCC"> me go through</font><font color="#E5E5E5"> I'm going to</font>

15
00:01:41,440 --> 00:01:45,700
give the the briefest of introductions

16
00:01:42,610 --> 00:01:46,930
<font color="#E5E5E5">about</font><font color="#CCCCCC"> SEF</font><font color="#E5E5E5"> just for a little bit of</font>

17
00:01:45,700 --> 00:01:48,610
background<font color="#CCCCCC"> I'm going to talk about</font><font color="#E5E5E5"> what</font>

18
00:01:46,930 --> 00:01:50,410
I<font color="#E5E5E5"> mean by data services and what</font><font color="#CCCCCC"> the</font>

19
00:01:48,610 --> 00:01:52,630
business<font color="#E5E5E5"> problems are that I'm looking</font>

20
00:01:50,410 --> 00:01:54,910
<font color="#CCCCCC">at</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> trying to solve and</font><font color="#E5E5E5"> then we'll</font>

21
00:01:52,630 --> 00:01:57,130
just<font color="#E5E5E5"> go through files block storage file</font>

22
00:01:54,910 --> 00:01:59,259
storage and<font color="#E5E5E5"> then object storage we'll</font>

23
00:01:57,130 --> 00:02:01,899
talk a little<font color="#CCCCCC"> bit about edge scenarios</font>

24
00:01:59,259 --> 00:02:05,290
<font color="#E5E5E5">and then try to wrap it up</font><font color="#CCCCCC"> talk a</font><font color="#E5E5E5"> little</font>

25
00:02:01,900 --> 00:02:09,310
<font color="#E5E5E5">bit about the future and build a</font>

26
00:02:05,290 --> 00:02:13,060
<font color="#E5E5E5">coherent picture so</font><font color="#CCCCCC"> SEF is a unified</font>

27
00:02:09,310 --> 00:02:16,000
storage platform<font color="#CCCCCC"> it provides an object</font>

28
00:02:13,060 --> 00:02:18,580
storage API<font color="#E5E5E5"> a block storage service and</font>

29
00:02:16,000 --> 00:02:21,550
a distributed file system it's all built

30
00:02:18,580 --> 00:02:23,080
upon<font color="#CCCCCC"> Rados which is a reliable</font><font color="#E5E5E5"> autonomic</font>

31
00:02:21,550 --> 00:02:24,730
distributed object store the part that

32
00:02:23,080 --> 00:02:26,830
replicates your data it places it<font color="#E5E5E5"> across</font>

33
00:02:24,730 --> 00:02:29,260
lots of different nodes<font color="#E5E5E5"> handles failures</font>

34
00:02:26,830 --> 00:02:31,780
and recovery and provides availability

35
00:02:29,260 --> 00:02:33,250
and all that good<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then all</font>

36
00:02:31,780 --> 00:02:35,080
these<font color="#E5E5E5"> three these three</font><font color="#CCCCCC"> services are</font>

37
00:02:33,250 --> 00:02:38,830
built on top of<font color="#CCCCCC"> that underlying</font><font color="#E5E5E5"> storage</font>

38
00:02:35,080 --> 00:02:41,200
infrastructure<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> is an open source</font>

39
00:02:38,830 --> 00:02:43,570
upstream project obviously<font color="#E5E5E5"> we release</font>

40
00:02:41,200 --> 00:02:46,359
<font color="#CCCCCC">every nine months</font><font color="#E5E5E5"> every release is named</font>

41
00:02:43,570 --> 00:02:47,980
after a species<font color="#CCCCCC"> of cephalopod Nautilus</font>

42
00:02:46,360 --> 00:02:49,750
is the next release that's coming out

43
00:02:47,980 --> 00:02:51,518
later<font color="#E5E5E5"> this month at the</font><font color="#CCCCCC"> end of February</font>

44
00:02:49,750 --> 00:02:55,060
and<font color="#CCCCCC"> the one after that is going to be</font>

45
00:02:51,519 --> 00:02:57,160
octopus<font color="#E5E5E5"> it's about nine</font><font color="#CCCCCC"> months later so</font>

46
00:02:55,060 --> 00:02:59,080
the features and<font color="#E5E5E5"> things that may be</font>

47
00:02:57,160 --> 00:03:00,850
talking<font color="#E5E5E5"> about</font><font color="#CCCCCC"> today are mostly going</font><font color="#E5E5E5"> to</font>

48
00:02:59,080 --> 00:03:03,130
<font color="#E5E5E5">be focused on</font><font color="#CCCCCC"> it's a mix of</font><font color="#E5E5E5"> what's</font>

49
00:03:00,850 --> 00:03:04,150
exists in Nautilus and<font color="#E5E5E5"> previously and</font>

50
00:03:03,130 --> 00:03:05,530
I'm also going to be talking<font color="#CCCCCC"> about</font>

51
00:03:04,150 --> 00:03:07,680
<font color="#E5E5E5">things that</font><font color="#CCCCCC"> we're planning and we're</font>

52
00:03:05,530 --> 00:03:11,560
going to<font color="#E5E5E5"> be building building after</font><font color="#CCCCCC"> that</font>

53
00:03:07,680 --> 00:03:14,010
so for the<font color="#CCCCCC"> Ceph project</font><font color="#E5E5E5"> we like to talk</font>

54
00:03:11,560 --> 00:03:16,390
<font color="#CCCCCC">about having</font><font color="#E5E5E5"> four sort of key priorities</font>

55
00:03:14,010 --> 00:03:18,769
<font color="#CCCCCC">the first of those is</font><font color="#E5E5E5"> usability and</font>

56
00:03:16,390 --> 00:03:21,410
management and<font color="#E5E5E5"> seth has grown up</font><font color="#CCCCCC"> over</font>

57
00:03:18,770 --> 00:03:23,540
years and built by system<font color="#CCCCCC"> administrators</font>

58
00:03:21,410 --> 00:03:25,220
forces some administrators<font color="#E5E5E5"> and as a</font>

59
00:03:23,540 --> 00:03:27,019
result has developed a reputation for

60
00:03:25,220 --> 00:03:29,180
being<font color="#E5E5E5"> hard to use and complicated and</font>

61
00:03:27,020 --> 00:03:30,860
difficult<font color="#E5E5E5"> and so on and so one of our</font>

62
00:03:29,180 --> 00:03:33,800
key focuses over the past two years<font color="#E5E5E5"> has</font>

63
00:03:30,860 --> 00:03:35,120
really<font color="#E5E5E5"> been to simplify the system so</font>

64
00:03:33,800 --> 00:03:37,730
that<font color="#CCCCCC"> people can understand</font><font color="#E5E5E5"> it without</font>

65
00:03:35,120 --> 00:03:39,350
being a sexpert so a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> effort goes</font>

66
00:03:37,730 --> 00:03:41,090
<font color="#CCCCCC">into that if you want to</font><font color="#E5E5E5"> hear more about</font>

67
00:03:39,350 --> 00:03:43,130
some<font color="#CCCCCC"> of the things</font><font color="#E5E5E5"> we're doing should</font>

68
00:03:41,090 --> 00:03:46,240
attend<font color="#E5E5E5"> the software dev room there are a</font>

69
00:03:43,130 --> 00:03:49,519
whole slew<font color="#CCCCCC"> of stuff talks this</font><font color="#E5E5E5"> afternoon</font>

70
00:03:46,240 --> 00:03:51,950
<font color="#CCCCCC">performance is</font><font color="#E5E5E5"> also key when we build</font>

71
00:03:49,520 --> 00:03:53,480
<font color="#CCCCCC">SEF everything</font><font color="#E5E5E5"> with hard drives</font><font color="#CCCCCC"> and so</font>

72
00:03:51,950 --> 00:03:55,670
the<font color="#E5E5E5"> software models you choose and so on</font>

73
00:03:53,480 --> 00:03:57,260
<font color="#E5E5E5">we're a little bit different and today</font>

74
00:03:55,670 --> 00:03:58,790
new<font color="#E5E5E5"> hardware is moving to</font>

75
00:03:57,260 --> 00:04:00,590
high-performance flash and so there's a

76
00:03:58,790 --> 00:04:03,950
lot<font color="#CCCCCC"> of work</font><font color="#E5E5E5"> going into optimizing</font><font color="#CCCCCC"> cess</font>

77
00:04:00,590 --> 00:04:06,620
so<font color="#E5E5E5"> that it will go much much faster</font><font color="#CCCCCC"> and</font>

78
00:04:03,950 --> 00:04:08,750
then the last<font color="#E5E5E5"> two we're making sure</font><font color="#CCCCCC"> that</font>

79
00:04:06,620 --> 00:04:10,040
stuff will work<font color="#E5E5E5"> and live well in a</font>

80
00:04:08,750 --> 00:04:12,170
container environment in a container

81
00:04:10,040 --> 00:04:14,600
world so making sure<font color="#CCCCCC"> that stuff</font><font color="#E5E5E5"> works</font>

82
00:04:12,170 --> 00:04:16,039
well kubernetes<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a big priority and</font>

83
00:04:14,600 --> 00:04:18,620
then the last one<font color="#E5E5E5"> was some mainly</font><font color="#CCCCCC"> gonna</font>

84
00:04:16,040 --> 00:04:20,420
<font color="#CCCCCC">be focusing on</font><font color="#E5E5E5"> today is making</font><font color="#CCCCCC"> stuff</font>

85
00:04:18,620 --> 00:04:22,610
work in a multi cloud and hybrid cloud

86
00:04:20,420 --> 00:04:26,600
world<font color="#CCCCCC"> and I'll talk about a</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about</font>

87
00:04:22,610 --> 00:04:27,590
why in a second<font color="#E5E5E5"> so first I want to give</font>

88
00:04:26,600 --> 00:04:29,960
a<font color="#E5E5E5"> little bit of background about what I</font>

89
00:04:27,590 --> 00:04:33,140
<font color="#E5E5E5">mean by</font><font color="#CCCCCC"> David services and and why we</font>

90
00:04:29,960 --> 00:04:36,469
<font color="#CCCCCC">are</font><font color="#E5E5E5"> here today</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> first point is</font>

91
00:04:33,140 --> 00:04:38,300
<font color="#CCCCCC">that</font><font color="#E5E5E5"> the future is cloudy so IT</font>

92
00:04:36,470 --> 00:04:40,220
organizations today<font color="#CCCCCC"> tend to have</font>

93
00:04:38,300 --> 00:04:41,750
multiple<font color="#E5E5E5"> private data centers and</font>

94
00:04:40,220 --> 00:04:43,220
infrastructure spread across lots of

95
00:04:41,750 --> 00:04:45,290
data centers they also tend<font color="#E5E5E5"> to consume</font>

96
00:04:43,220 --> 00:04:46,580
multiple public clouds and have

97
00:04:45,290 --> 00:04:48,640
different<font color="#CCCCCC"> applications and</font><font color="#E5E5E5"> different</font>

98
00:04:46,580 --> 00:04:52,460
<font color="#E5E5E5">data sets and all these different</font><font color="#CCCCCC"> places</font>

99
00:04:48,640 --> 00:04:53,930
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it's only getting</font><font color="#E5E5E5"> worse</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> that</font>

100
00:04:52,460 --> 00:04:57,049
infrastructure<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> on-premise is</font>

101
00:04:53,930 --> 00:04:59,090
starting to<font color="#E5E5E5"> use private cloud services</font>

102
00:04:57,050 --> 00:05:00,260
<font color="#CCCCCC">and so it's really just a cluster of</font>

103
00:04:59,090 --> 00:05:03,679
different clouds some of them private

104
00:05:00,260 --> 00:05:05,599
some of them public<font color="#E5E5E5"> and application</font>

105
00:05:03,680 --> 00:05:07,460
developers are increasingly building

106
00:05:05,600 --> 00:05:09,110
their applications<font color="#CCCCCC"> by</font><font color="#E5E5E5"> consuming sort of</font>

107
00:05:07,460 --> 00:05:12,650
self-service storage<font color="#E5E5E5"> resources whether</font>

108
00:05:09,110 --> 00:05:14,570
<font color="#E5E5E5">it's compute or storage</font><font color="#CCCCCC"> and if it's</font><font color="#E5E5E5"> not</font>

109
00:05:12,650 --> 00:05:16,580
already<font color="#E5E5E5"> true today the next generation</font>

110
00:05:14,570 --> 00:05:19,010
of<font color="#CCCCCC"> applications</font><font color="#E5E5E5"> that people are</font><font color="#CCCCCC"> building</font>

111
00:05:16,580 --> 00:05:20,390
are going to be built specifically<font color="#E5E5E5"> on</font>

112
00:05:19,010 --> 00:05:22,669
top of<font color="#E5E5E5"> these services so it's going to</font>

113
00:05:20,390 --> 00:05:25,450
be a cloud native<font color="#E5E5E5"> world and for all the</font>

114
00:05:22,669 --> 00:05:27,580
talk about stateless micro services and

115
00:05:25,450 --> 00:05:30,500
<font color="#E5E5E5">container orchestration and so on</font>

116
00:05:27,580 --> 00:05:32,979
<font color="#CCCCCC">they're great but in reality</font><font color="#E5E5E5"> in the</font><font color="#CCCCCC"> real</font>

117
00:05:30,500 --> 00:05:34,930
<font color="#CCCCCC">world applications have lots of state</font>

118
00:05:32,980 --> 00:05:38,110
lots of data that they depend<font color="#E5E5E5"> on and</font>

119
00:05:34,930 --> 00:05:39,550
store<font color="#E5E5E5"> and state is hard to move and it's</font>

120
00:05:38,110 --> 00:05:41,110
hard<font color="#CCCCCC"> to</font><font color="#E5E5E5"> move it in a safe and coherent</font>

121
00:05:39,550 --> 00:05:43,240
way and so that you don't disrupt<font color="#E5E5E5"> your</font>

122
00:05:41,110 --> 00:05:45,940
application<font color="#E5E5E5"> as anybody who's had to do</font>

123
00:05:43,240 --> 00:05:47,860
some sort of data migration by hand has

124
00:05:45,940 --> 00:05:50,530
<font color="#CCCCCC">has experienced and this is a tricky</font>

125
00:05:47,860 --> 00:05:52,810
problem so when we talk about data

126
00:05:50,530 --> 00:05:55,359
services we're talking<font color="#CCCCCC"> about sort</font><font color="#E5E5E5"> of</font>

127
00:05:52,810 --> 00:05:58,060
three key areas<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first is data</font>

128
00:05:55,360 --> 00:05:59,940
<font color="#CCCCCC">placement and portability so where I</font>

129
00:05:58,060 --> 00:06:02,140
have<font color="#E5E5E5"> a data set where should I put it</font>

130
00:05:59,940 --> 00:06:03,550
<font color="#CCCCCC">can I once I store it in one</font><font color="#E5E5E5"> particular</font>

131
00:06:02,140 --> 00:06:05,620
<font color="#E5E5E5">place can I move it to somewhere</font><font color="#CCCCCC"> else</font>

132
00:06:03,550 --> 00:06:07,060
<font color="#E5E5E5">maybe it starts out</font><font color="#CCCCCC"> on premise and I</font>

133
00:06:05,620 --> 00:06:09,940
want to move<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> cloud later or the</font>

134
00:06:07,060 --> 00:06:11,320
other way around<font color="#CCCCCC"> and can I do that in a</font>

135
00:06:09,940 --> 00:06:12,760
seamless<font color="#E5E5E5"> way</font><font color="#CCCCCC"> without interrupting the</font>

136
00:06:11,320 --> 00:06:15,480
applications<font color="#CCCCCC"> that</font><font color="#E5E5E5"> are consuming that</font>

137
00:06:12,760 --> 00:06:18,490
<font color="#E5E5E5">data</font><font color="#CCCCCC"> so the second piece of this is</font>

138
00:06:15,480 --> 00:06:19,390
introspection<font color="#E5E5E5"> you know I'm a large</font>

139
00:06:18,490 --> 00:06:20,560
organization

140
00:06:19,390 --> 00:06:23,289
<font color="#E5E5E5">I have infrastructure spread across</font>

141
00:06:20,560 --> 00:06:26,130
multiple<font color="#E5E5E5"> private and public clouds I'm</font>

142
00:06:23,290 --> 00:06:29,050
storing 20 petabytes of data<font color="#E5E5E5"> what is it</font>

143
00:06:26,130 --> 00:06:30,969
<font color="#E5E5E5">who who stored it what type of data is</font>

144
00:06:29,050 --> 00:06:33,700
it<font color="#E5E5E5"> can I delete</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> how much is it</font>

145
00:06:30,970 --> 00:06:36,370
<font color="#CCCCCC">costing me those sorts of</font><font color="#E5E5E5"> things and</font>

146
00:06:33,700 --> 00:06:39,270
then<font color="#E5E5E5"> sort of the third area is around</font>

147
00:06:36,370 --> 00:06:41,710
policy driven management of that data<font color="#CCCCCC"> so</font>

148
00:06:39,270 --> 00:06:45,070
can<font color="#CCCCCC"> I automate the process of</font><font color="#E5E5E5"> deleting</font>

149
00:06:41,710 --> 00:06:46,810
<font color="#CCCCCC">old data I'm after</font><font color="#E5E5E5"> I've sorted for two</font>

150
00:06:45,070 --> 00:06:49,210
years for compliance reasons<font color="#E5E5E5"> that sort</font>

151
00:06:46,810 --> 00:06:51,400
of thing<font color="#CCCCCC"> can</font><font color="#E5E5E5"> I ensure</font><font color="#CCCCCC"> that this</font>

152
00:06:49,210 --> 00:06:53,049
particular<font color="#CCCCCC"> data set stays in the EU</font><font color="#E5E5E5"> so</font>

153
00:06:51,400 --> 00:06:55,510
that it complies with certain laws and

154
00:06:53,050 --> 00:06:57,040
<font color="#CCCCCC">legal restrictions</font><font color="#E5E5E5"> I'm kind of</font><font color="#CCCCCC"> optimized</font>

155
00:06:55,510 --> 00:06:59,140
where this<font color="#E5E5E5"> particular data set is placed</font>

156
00:06:57,040 --> 00:07:02,080
based on the cost and<font color="#CCCCCC"> the performance</font>

157
00:06:59,140 --> 00:07:04,120
<font color="#CCCCCC">that I need</font><font color="#E5E5E5"> over time and I can can I</font>

158
00:07:02,080 --> 00:07:05,950
build automation<font color="#E5E5E5"> and policy around all</font>

159
00:07:04,120 --> 00:07:08,590
of<font color="#CCCCCC"> those processes so</font><font color="#E5E5E5"> that I don't have</font>

160
00:07:05,950 --> 00:07:11,229
<font color="#E5E5E5">to do that manually so data services</font>

161
00:07:08,590 --> 00:07:14,200
tends to sort<font color="#CCCCCC"> of encompass</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> three</font>

162
00:07:11,229 --> 00:07:15,700
these<font color="#CCCCCC"> three key areas for the most part</font>

163
00:07:14,200 --> 00:07:18,250
I'm<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be focusing on the first</font>

164
00:07:15,700 --> 00:07:20,320
<font color="#E5E5E5">area around where</font><font color="#CCCCCC"> do I put my data</font><font color="#E5E5E5"> and</font>

165
00:07:18,250 --> 00:07:22,570
can I<font color="#E5E5E5"> move it around for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> purposes of</font>

166
00:07:20,320 --> 00:07:24,490
this<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> and it's also important to</font>

167
00:07:22,570 --> 00:07:26,800
realize<font color="#CCCCCC"> that data service is</font><font color="#E5E5E5"> about more</font>

168
00:07:24,490 --> 00:07:28,510
<font color="#CCCCCC">than just</font><font color="#E5E5E5"> the data and</font><font color="#CCCCCC"> just the</font><font color="#E5E5E5"> store</font>

169
00:07:26,800 --> 00:07:30,160
system<font color="#CCCCCC"> because the reality</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that it's</font>

170
00:07:28,510 --> 00:07:31,810
not<font color="#CCCCCC"> just that</font><font color="#E5E5E5"> you're storing data it's</font>

171
00:07:30,160 --> 00:07:34,180
that that data<font color="#E5E5E5"> is being consumed by some</font>

172
00:07:31,810 --> 00:07:35,320
application that's modifying it or

173
00:07:34,180 --> 00:07:37,570
presenting it to the<font color="#CCCCCC"> world or doing</font>

174
00:07:35,320 --> 00:07:39,070
<font color="#E5E5E5">something useful with it and so if you</font>

175
00:07:37,570 --> 00:07:40,780
<font color="#E5E5E5">ever move if you're gonna move the data</font>

176
00:07:39,070 --> 00:07:41,790
to<font color="#E5E5E5"> another data center or to another</font>

177
00:07:40,780 --> 00:07:43,830
cluster<font color="#E5E5E5"> or</font>

178
00:07:41,790 --> 00:07:45,240
on<font color="#CCCCCC"> or</font><font color="#E5E5E5"> off premise</font><font color="#CCCCCC"> you also have to move</font>

179
00:07:43,830 --> 00:07:46,080
<font color="#E5E5E5">the application</font><font color="#CCCCCC"> that's consuming</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and</font>

180
00:07:45,240 --> 00:07:48,470
you have to make<font color="#CCCCCC"> sure that that</font>

181
00:07:46,080 --> 00:07:50,580
<font color="#E5E5E5">migration is done in coordination with</font>

182
00:07:48,470 --> 00:07:51,810
whatever<font color="#E5E5E5"> the</font><font color="#CCCCCC"> process is</font><font color="#E5E5E5"> around moving</font>

183
00:07:50,580 --> 00:07:55,440
<font color="#E5E5E5">that application</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make sure it all</font>

184
00:07:51,810 --> 00:07:57,930
works<font color="#CCCCCC"> and so for this reason</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> believe</font>

185
00:07:55,440 --> 00:08:00,390
<font color="#E5E5E5">that container platforms are key because</font>

186
00:07:57,930 --> 00:08:01,940
<font color="#CCCCCC">you if you are going to do that</font><font color="#E5E5E5"> sort of</font>

187
00:08:00,390 --> 00:08:04,169
migration you have to have this<font color="#E5E5E5"> this</font>

188
00:08:01,940 --> 00:08:05,969
relationship<font color="#CCCCCC"> between the application</font>

189
00:08:04,170 --> 00:08:09,500
<font color="#CCCCCC">migration and the storage migration and</font>

190
00:08:05,970 --> 00:08:12,210
coordinate<font color="#E5E5E5"> that whole process</font><font color="#CCCCCC"> and so</font>

191
00:08:09,500 --> 00:08:13,890
you're gonna<font color="#E5E5E5"> hear about kubernetes</font><font color="#CCCCCC"> off</font>

192
00:08:12,210 --> 00:08:15,150
<font color="#CCCCCC">and on throughout this talk and</font><font color="#E5E5E5"> that's</font>

193
00:08:13,890 --> 00:08:17,250
why<font color="#E5E5E5"> because it's sort of the</font><font color="#CCCCCC"> first</font>

194
00:08:15,150 --> 00:08:18,810
opportunity where<font color="#CCCCCC"> we have a coherent</font>

195
00:08:17,250 --> 00:08:21,810
stack<font color="#E5E5E5"> that's managing both your</font>

196
00:08:18,810 --> 00:08:25,010
applications and<font color="#E5E5E5"> your storage</font><font color="#CCCCCC"> and some</font>

197
00:08:21,810 --> 00:08:25,010
possibility<font color="#E5E5E5"> of automating this process</font>

198
00:08:25,310 --> 00:08:31,530
so we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> break this</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> into sort</font>

199
00:08:29,100 --> 00:08:33,510
of<font color="#E5E5E5"> five data use areas or sort of</font>

200
00:08:31,530 --> 00:08:35,640
underlying business problems that

201
00:08:33,510 --> 00:08:37,919
organizations are<font color="#CCCCCC"> trying to solve with</font>

202
00:08:35,640 --> 00:08:39,960
<font color="#E5E5E5">their data so the first is simply</font>

203
00:08:37,919 --> 00:08:41,520
<font color="#CCCCCC">multi-tier you have different kinds of</font>

204
00:08:39,960 --> 00:08:43,169
<font color="#CCCCCC">data they have different performance</font><font color="#E5E5E5"> and</font>

205
00:08:41,520 --> 00:08:44,600
<font color="#E5E5E5">storage capacity requirements and you</font>

206
00:08:43,169 --> 00:08:47,010
want to have different<font color="#E5E5E5"> tiers of storage</font>

207
00:08:44,600 --> 00:08:48,660
<font color="#E5E5E5">where you want to put</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> data and it</font>

208
00:08:47,010 --> 00:08:50,370
might vary over<font color="#CCCCCC"> time so it might be that</font>

209
00:08:48,660 --> 00:08:52,260
<font color="#E5E5E5">when you first write it it needs to be</font>

210
00:08:50,370 --> 00:08:54,090
high performance as ages you can<font color="#E5E5E5"> move it</font>

211
00:08:52,260 --> 00:08:55,860
to<font color="#E5E5E5"> a slower tier for archive for some</font>

212
00:08:54,090 --> 00:08:57,200
period<font color="#CCCCCC"> of time and then delete it</font><font color="#E5E5E5"> so</font>

213
00:08:55,860 --> 00:09:00,390
having different<font color="#E5E5E5"> tiers of storage is key</font>

214
00:08:57,200 --> 00:09:02,250
the second is mobility<font color="#CCCCCC"> the</font><font color="#E5E5E5"> ability to</font>

215
00:09:00,390 --> 00:09:04,949
move an application<font color="#CCCCCC"> and</font><font color="#E5E5E5"> its data</font><font color="#CCCCCC"> between</font>

216
00:09:02,250 --> 00:09:06,990
sites<font color="#E5E5E5"> presumably with minimal or</font><font color="#CCCCCC"> no</font>

217
00:09:04,950 --> 00:09:09,420
downtime<font color="#CCCCCC"> or</font><font color="#E5E5E5"> availability interruption</font>

218
00:09:06,990 --> 00:09:11,550
<font color="#E5E5E5">and this might be</font><font color="#CCCCCC"> that you're taking an</font>

219
00:09:09,420 --> 00:09:12,719
<font color="#CCCCCC">entire site and moving it</font><font color="#E5E5E5"> or it might</font><font color="#CCCCCC"> be</font>

220
00:09:11,550 --> 00:09:15,930
<font color="#CCCCCC">that you're moving just</font><font color="#E5E5E5"> sort of a piece</font>

221
00:09:12,720 --> 00:09:19,710
<font color="#E5E5E5">of one</font><font color="#CCCCCC"> application perhaps</font><font color="#E5E5E5"> in a site and</font>

222
00:09:15,930 --> 00:09:22,650
<font color="#CCCCCC">moving it to another the third is</font>

223
00:09:19,710 --> 00:09:23,880
disaster recovery<font color="#E5E5E5"> so if you have your</font>

224
00:09:22,650 --> 00:09:25,770
infrastructure spread across multiple

225
00:09:23,880 --> 00:09:27,750
multiple clouds or multiple data centers

226
00:09:25,770 --> 00:09:31,350
<font color="#CCCCCC">you want to be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> tolerate an</font>

227
00:09:27,750 --> 00:09:33,990
entire site going<font color="#E5E5E5"> down and then</font>

228
00:09:31,350 --> 00:09:36,510
reinstate the data<font color="#E5E5E5"> in another site s-sir</font>

229
00:09:33,990 --> 00:09:39,120
for business<font color="#E5E5E5"> continuity</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> don't go out</font>

230
00:09:36,510 --> 00:09:40,830
of<font color="#E5E5E5"> business</font><font color="#CCCCCC"> and often in this case you</font>

231
00:09:39,120 --> 00:09:42,770
want sort of<font color="#CCCCCC"> a</font><font color="#E5E5E5"> point in time consistent</font>

232
00:09:40,830 --> 00:09:45,360
view of that data when<font color="#E5E5E5"> you move when you</font>

233
00:09:42,770 --> 00:09:47,069
restart<font color="#CCCCCC"> your whole</font><font color="#E5E5E5"> infrastructure so</font>

234
00:09:45,360 --> 00:09:48,780
that<font color="#E5E5E5"> misses if you</font><font color="#CCCCCC"> crashed</font><font color="#E5E5E5"> and you can</font>

235
00:09:47,070 --> 00:09:50,460
pick<font color="#E5E5E5"> up where</font><font color="#CCCCCC"> you left off</font><font color="#E5E5E5"> maybe you can</font>

236
00:09:48,780 --> 00:09:52,290
tolerate<font color="#CCCCCC"> till</font><font color="#E5E5E5"> you can tolerate the loss</font>

237
00:09:50,460 --> 00:09:53,800
<font color="#E5E5E5">at the last few minutes of transactions</font>

238
00:09:52,290 --> 00:09:57,010
<font color="#E5E5E5">or a few seconds</font>

239
00:09:53,800 --> 00:10:00,550
you need a coherent copy<font color="#E5E5E5"> the fourth case</font>

240
00:09:57,010 --> 00:10:02,350
<font color="#CCCCCC">is what I'll</font><font color="#E5E5E5"> call stretch</font><font color="#CCCCCC"> is a similar</font>

241
00:10:00,550 --> 00:10:04,120
situation<font color="#CCCCCC"> where you</font><font color="#E5E5E5"> want to tolerate</font><font color="#CCCCCC"> a</font>

242
00:10:02,350 --> 00:10:06,250
site outage but you want<font color="#E5E5E5"> to do it</font>

243
00:10:04,120 --> 00:10:08,110
<font color="#E5E5E5">without any loss of availability</font><font color="#CCCCCC"> so in</font>

244
00:10:06,250 --> 00:10:10,390
the disaster<font color="#CCCCCC"> recovery case</font><font color="#E5E5E5"> you lose the</font>

245
00:10:08,110 --> 00:10:11,709
data<font color="#E5E5E5"> center you</font><font color="#CCCCCC"> panic and you restart</font>

246
00:10:10,390 --> 00:10:15,189
everything<font color="#E5E5E5"> in a secondary data center</font>

247
00:10:11,709 --> 00:10:17,109
<font color="#E5E5E5">and maybe you lost a little bit but you</font>

248
00:10:15,190 --> 00:10:19,120
didn't go<font color="#E5E5E5"> out of</font><font color="#CCCCCC"> business in the stretch</font>

249
00:10:17,110 --> 00:10:21,670
case<font color="#E5E5E5"> you don't even notice your</font>

250
00:10:19,120 --> 00:10:23,500
application doesn't<font color="#E5E5E5"> go down and then the</font>

251
00:10:21,670 --> 00:10:25,360
final scenario<font color="#E5E5E5"> is edge so you might have</font>

252
00:10:23,500 --> 00:10:26,519
you know a<font color="#E5E5E5"> bunch of central data centers</font>

253
00:10:25,360 --> 00:10:29,140
and<font color="#E5E5E5"> then you have a whole</font><font color="#CCCCCC"> bunch of</font>

254
00:10:26,519 --> 00:10:30,990
satellite<font color="#E5E5E5"> data centers or mobile sites</font>

255
00:10:29,140 --> 00:10:33,040
or something like<font color="#E5E5E5"> that and they're all</font>

256
00:10:30,990 --> 00:10:34,690
generating<font color="#E5E5E5"> data or consuming data and</font>

257
00:10:33,040 --> 00:10:37,329
you<font color="#E5E5E5"> want all this to sort of be managed</font>

258
00:10:34,690 --> 00:10:40,060
and<font color="#E5E5E5"> and coherent</font><font color="#CCCCCC"> so these are</font><font color="#E5E5E5"> sort of</font>

259
00:10:37,329 --> 00:10:42,670
the five business cases<font color="#E5E5E5"> that</font><font color="#CCCCCC"> will we'll</font>

260
00:10:40,060 --> 00:10:44,349
<font color="#CCCCCC">be</font><font color="#E5E5E5"> referencing throughout the talk and</font>

261
00:10:42,670 --> 00:10:46,899
we ideally<font color="#CCCCCC"> want to solve all these</font>

262
00:10:44,350 --> 00:10:51,070
problems right in order<font color="#E5E5E5"> to have sort of</font>

263
00:10:46,899 --> 00:10:53,019
the<font color="#E5E5E5"> the Nirvana of storage and finally</font>

264
00:10:51,070 --> 00:10:54,100
sort of last preliminary point a lot<font color="#E5E5E5"> of</font>

265
00:10:53,019 --> 00:10:55,810
this is<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to come down to whether</font>

266
00:10:54,100 --> 00:10:57,100
you're<font color="#E5E5E5"> doing synchronous replication or</font>

267
00:10:55,810 --> 00:10:59,079
whether you're<font color="#E5E5E5"> doing asynchronous</font>

268
00:10:57,100 --> 00:11:01,660
replication<font color="#E5E5E5"> so in a synchronous</font>

269
00:10:59,079 --> 00:11:03,579
replication model<font color="#E5E5E5"> your application does</font>

270
00:11:01,660 --> 00:11:05,709
a<font color="#E5E5E5"> right it's written to all of the</font>

271
00:11:03,579 --> 00:11:07,660
replicas<font color="#CCCCCC"> of that data and only</font><font color="#E5E5E5"> after</font>

272
00:11:05,709 --> 00:11:09,189
they're all sort of persisted does the

273
00:11:07,660 --> 00:11:13,390
application<font color="#CCCCCC"> say ok I'm done</font><font color="#E5E5E5"> with my</font>

274
00:11:09,190 --> 00:11:14,950
right<font color="#E5E5E5"> in an asynchronous model</font><font color="#CCCCCC"> you wish</font>

275
00:11:13,390 --> 00:11:16,930
<font color="#E5E5E5">to a right</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> might write to some of the</font>

276
00:11:14,950 --> 00:11:19,270
copies<font color="#CCCCCC"> and the application says it's</font>

277
00:11:16,930 --> 00:11:21,520
done and then in the background<font color="#E5E5E5"> later</font>

278
00:11:19,270 --> 00:11:23,920
over time that<font color="#E5E5E5"> make copies to additional</font>

279
00:11:21,520 --> 00:11:27,640
additional replicas<font color="#E5E5E5"> so</font><font color="#CCCCCC"> in synchronous</font>

280
00:11:23,920 --> 00:11:29,170
replication<font color="#CCCCCC"> you tend to have</font><font color="#E5E5E5"> a higher</font>

281
00:11:27,640 --> 00:11:31,860
rate latency because<font color="#E5E5E5"> you're waiting</font><font color="#CCCCCC"> for</font>

282
00:11:29,170 --> 00:11:34,959
all the replicas<font color="#CCCCCC"> to write and complete</font>

283
00:11:31,860 --> 00:11:36,040
but you have a<font color="#E5E5E5"> consistent model because</font>

284
00:11:34,959 --> 00:11:37,079
all of<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> because we're</font>

285
00:11:36,040 --> 00:11:39,819
always in sync

286
00:11:37,079 --> 00:11:40,959
presumably<font color="#E5E5E5"> I mean your application can</font>

287
00:11:39,820 --> 00:11:42,520
go on and usually<font color="#CCCCCC"> when we talk about</font>

288
00:11:40,959 --> 00:11:44,979
synchronous replication we're talking

289
00:11:42,520 --> 00:11:46,480
about like a single<font color="#CCCCCC"> staff cluster</font>

290
00:11:44,980 --> 00:11:48,070
because internally to<font color="#CCCCCC"> the Ceph cluster</font>

291
00:11:46,480 --> 00:11:51,430
we're doing synchronous replication<font color="#E5E5E5"> and</font>

292
00:11:48,070 --> 00:11:54,399
in the async case<font color="#CCCCCC"> your</font><font color="#E5E5E5"> application might</font>

293
00:11:51,430 --> 00:11:56,410
write and then another<font color="#E5E5E5"> cluster might</font>

294
00:11:54,399 --> 00:11:58,029
have an asynchronous copy<font color="#CCCCCC"> if you have a</font>

295
00:11:56,410 --> 00:11:59,439
failure<font color="#E5E5E5"> of the first cluster and you</font>

296
00:11:58,029 --> 00:12:02,079
<font color="#E5E5E5">have to pick up where you left off and</font>

297
00:11:59,440 --> 00:12:03,250
you might have stale data so whether

298
00:12:02,079 --> 00:12:05,890
you're doing<font color="#CCCCCC"> secret replication or</font>

299
00:12:03,250 --> 00:12:07,240
asynchronous replication depends on what

300
00:12:05,890 --> 00:12:12,129
the needs<font color="#CCCCCC"> are</font><font color="#E5E5E5"> gratification are</font>

301
00:12:07,240 --> 00:12:14,619
and latency and so on<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so we're</font>

302
00:12:12,129 --> 00:12:17,619
gonna talk about block storage<font color="#E5E5E5"> and then</font>

303
00:12:14,619 --> 00:12:18,850
file<font color="#CCCCCC"> in</font><font color="#E5E5E5"> an object so when we talk about</font>

304
00:12:17,619 --> 00:12:22,209
block storage we're talking about a

305
00:12:18,850 --> 00:12:24,459
<font color="#E5E5E5">virtual disk device so a virtual disk</font>

306
00:12:22,209 --> 00:12:25,719
<font color="#E5E5E5">it's generally</font><font color="#CCCCCC"> used exclusively by an</font>

307
00:12:24,459 --> 00:12:27,550
application<font color="#CCCCCC"> because usually you're</font>

308
00:12:25,720 --> 00:12:28,959
layering<font color="#E5E5E5"> a local</font><font color="#CCCCCC"> filesystem</font><font color="#E5E5E5"> on top it</font>

309
00:12:27,550 --> 00:12:31,389
assumes it's the only<font color="#E5E5E5"> one consuming that</font>

310
00:12:28,959 --> 00:12:33,399
disk and writing to it so block devices

311
00:12:31,389 --> 00:12:35,800
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to provide strong consistency</font><font color="#E5E5E5"> and</font>

312
00:12:33,399 --> 00:12:37,300
they usually<font color="#CCCCCC"> performance sensitive they</font>

313
00:12:35,800 --> 00:12:39,179
know you reads and writes<font color="#E5E5E5"> usually have</font>

314
00:12:37,300 --> 00:12:41,740
snapshot features around<font color="#E5E5E5"> it</font>

315
00:12:39,179 --> 00:12:43,179
and these<font color="#E5E5E5"> days are</font><font color="#CCCCCC"> usually stop</font>

316
00:12:41,740 --> 00:12:44,800
provisioning so you're<font color="#CCCCCC"> usually asking</font>

317
00:12:43,179 --> 00:12:48,329
cinder for a block<font color="#CCCCCC"> device or you're</font>

318
00:12:44,800 --> 00:12:51,128
asking kubernetes<font color="#E5E5E5"> for persistent volume</font>

319
00:12:48,329 --> 00:12:53,170
<font color="#E5E5E5">or maybe you're emailing your IT admin</font>

320
00:12:51,129 --> 00:12:56,410
and asking for<font color="#CCCCCC"> a loan but</font><font color="#E5E5E5"> hopefully</font>

321
00:12:53,170 --> 00:12:58,740
hopefully<font color="#E5E5E5"> not</font><font color="#CCCCCC"> the latter so relatively</font>

322
00:12:56,410 --> 00:13:01,209
<font color="#E5E5E5">simple model what can we do</font>

323
00:12:58,740 --> 00:13:02,410
I'm<font color="#E5E5E5"> well today and actually from the</font>

324
00:13:01,209 --> 00:13:04,689
beginning<font color="#CCCCCC"> RVD has always supported</font>

325
00:13:02,410 --> 00:13:06,309
multiple tiers so within<font color="#E5E5E5"> a single</font><font color="#CCCCCC"> SEF</font>

326
00:13:04,689 --> 00:13:07,839
cluster you can create different<font color="#CCCCCC"> ratos</font>

327
00:13:06,309 --> 00:13:09,279
pools of storage<font color="#E5E5E5"> that are mapped</font><font color="#CCCCCC"> to</font>

328
00:13:07,839 --> 00:13:10,869
different<font color="#E5E5E5"> storage devices or maybe a</font>

329
00:13:09,279 --> 00:13:14,920
specific<font color="#CCCCCC"> set of devices</font><font color="#E5E5E5"> in a particular</font>

330
00:13:10,869 --> 00:13:17,259
rack or data<font color="#E5E5E5"> center and and you can</font>

331
00:13:14,920 --> 00:13:18,459
store an RVD image in one of those pools

332
00:13:17,259 --> 00:13:20,290
so you might have a pool<font color="#E5E5E5"> that's high</font>

333
00:13:18,459 --> 00:13:21,998
<font color="#E5E5E5">performance back by SSDs you might have</font>

334
00:13:20,290 --> 00:13:23,498
<font color="#E5E5E5">another pool that's lower performance</font>

335
00:13:21,999 --> 00:13:25,299
with hard drives<font color="#CCCCCC"> maybe it's even a</font>

336
00:13:23,499 --> 00:13:26,649
<font color="#CCCCCC">researcher</font><font color="#E5E5E5"> coded so you get these</font>

337
00:13:25,299 --> 00:13:28,600
multiple tiers of<font color="#CCCCCC"> storage depending on</font>

338
00:13:26,649 --> 00:13:30,279
the quality of service<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you want so</font>

339
00:13:28,600 --> 00:13:32,619
so<font color="#E5E5E5"> that's great we sort of cover the</font>

340
00:13:30,279 --> 00:13:34,540
multi tier case<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> Nautilus we also</font>

341
00:13:32,619 --> 00:13:38,439
have a new feature<font color="#CCCCCC"> called RVD</font><font color="#E5E5E5"> live</font>

342
00:13:34,540 --> 00:13:39,910
migration<font color="#E5E5E5"> that allows an in use image so</font>

343
00:13:38,439 --> 00:13:42,399
for example if you have a VM that's

344
00:13:39,910 --> 00:13:44,529
running consuming a block device<font color="#E5E5E5"> you can</font>

345
00:13:42,399 --> 00:13:46,269
do a lot of migration<font color="#E5E5E5"> of that RVD image</font>

346
00:13:44,529 --> 00:13:48,220
from<font color="#E5E5E5"> run one tier of storage</font><font color="#CCCCCC"> to another</font>

347
00:13:46,269 --> 00:13:51,549
without<font color="#E5E5E5"> interrupting or restarting the</font>

348
00:13:48,220 --> 00:13:53,369
VM so you've always<font color="#E5E5E5"> been able to live</font>

349
00:13:51,549 --> 00:13:55,480
migrate the VM<font color="#CCCCCC"> to</font><font color="#E5E5E5"> another machine</font>

350
00:13:53,369 --> 00:13:56,829
<font color="#E5E5E5">consuming the same storage but you</font>

351
00:13:55,480 --> 00:13:59,110
haven't<font color="#E5E5E5"> been</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to move the storage to</font>

352
00:13:56,829 --> 00:14:00,128
new performance<font color="#CCCCCC"> tier wall to be and</font><font color="#E5E5E5"> is</font>

353
00:13:59,110 --> 00:14:02,049
still<font color="#E5E5E5"> running so this has that</font>

354
00:14:00,129 --> 00:14:03,879
<font color="#CCCCCC">capability and that's</font><font color="#E5E5E5"> new in the novel</font>

355
00:14:02,049 --> 00:14:05,529
release<font color="#E5E5E5"> Nautilus release</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> out this</font>

356
00:14:03,879 --> 00:14:08,160
month<font color="#E5E5E5"> so that sort of gives you multi</font>

357
00:14:05,529 --> 00:14:10,720
tier<font color="#E5E5E5"> and you gives you some mobility</font>

358
00:14:08,160 --> 00:14:12,309
<font color="#E5E5E5">within the same</font><font color="#CCCCCC"> within</font><font color="#E5E5E5"> the same data</font>

359
00:14:10,720 --> 00:14:14,679
<font color="#E5E5E5">center or within the same stuff cluster</font>

360
00:14:12,309 --> 00:14:16,900
at least so what happens if you<font color="#E5E5E5"> want to</font>

361
00:14:14,679 --> 00:14:19,400
stretch<font color="#CCCCCC"> across sites</font>

362
00:14:16,900 --> 00:14:21,410
so you can also stretch a<font color="#E5E5E5"> stuffed</font>

363
00:14:19,400 --> 00:14:23,449
cluster across<font color="#E5E5E5"> multiple data centers</font><font color="#CCCCCC"> you</font>

364
00:14:21,410 --> 00:14:26,089
<font color="#E5E5E5">know two or</font><font color="#CCCCCC"> three datacenters</font><font color="#E5E5E5"> and in</font>

365
00:14:23,450 --> 00:14:28,130
that case you<font color="#E5E5E5"> simply deploy your stuff</font>

366
00:14:26,090 --> 00:14:30,920
humans<font color="#E5E5E5"> across two sites you have some</font>

367
00:14:28,130 --> 00:14:32,660
big fat link between them<font color="#CCCCCC"> you set up</font>

368
00:14:30,920 --> 00:14:33,860
<font color="#E5E5E5">your crush rules so</font><font color="#CCCCCC"> that your replicas</font>

369
00:14:32,660 --> 00:14:35,630
are placed appropriately<font color="#E5E5E5"> so you have</font>

370
00:14:33,860 --> 00:14:37,610
some replicas<font color="#E5E5E5"> and one data center</font><font color="#CCCCCC"> and</font>

371
00:14:35,630 --> 00:14:41,480
sub replicas<font color="#E5E5E5"> and another make sure you</font>

372
00:14:37,610 --> 00:14:43,600
have enough monitors<font color="#E5E5E5"> and lots people</font><font color="#CCCCCC"> do</font>

373
00:14:41,480 --> 00:14:46,040
this<font color="#E5E5E5"> it works</font>

374
00:14:43,600 --> 00:14:47,690
<font color="#E5E5E5">your application</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> now move between</font>

375
00:14:46,040 --> 00:14:49,310
<font color="#E5E5E5">data centers</font><font color="#CCCCCC"> because the</font><font color="#E5E5E5"> storage is</font>

376
00:14:47,690 --> 00:14:53,810
<font color="#CCCCCC">available in both</font><font color="#E5E5E5"> yep so do the single</font>

377
00:14:49,310 --> 00:14:55,130
Ceph storage available<font color="#CCCCCC"> in</font><font color="#E5E5E5"> both sites the</font>

378
00:14:53,810 --> 00:14:58,520
data<font color="#E5E5E5"> doesn't move because it's sort of</font>

379
00:14:55,130 --> 00:14:59,450
already<font color="#CCCCCC"> in both places</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's</font>

380
00:14:58,520 --> 00:15:00,620
important<font color="#E5E5E5"> to remember that the</font>

381
00:14:59,450 --> 00:15:03,140
performance is going<font color="#E5E5E5"> to be different</font>

382
00:15:00,620 --> 00:15:04,880
because<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a wide area net network</font>

383
00:15:03,140 --> 00:15:06,170
<font color="#CCCCCC">length between the two sites</font><font color="#E5E5E5"> stuff is</font>

384
00:15:04,880 --> 00:15:08,510
doing<font color="#E5E5E5"> synchronous replication which</font>

385
00:15:06,170 --> 00:15:11,060
means every right has<font color="#E5E5E5"> to cross that</font>

386
00:15:08,510 --> 00:15:12,950
length so this may or may not<font color="#E5E5E5"> fit but</font>

387
00:15:11,060 --> 00:15:14,689
<font color="#E5E5E5">the use case but it does solve sort of</font>

388
00:15:12,950 --> 00:15:16,160
the disaster recovery use case where if

389
00:15:14,690 --> 00:15:18,020
you lose one data center<font color="#E5E5E5"> something you</font>

390
00:15:16,160 --> 00:15:19,780
set up your crush rules properly<font color="#E5E5E5"> your</font>

391
00:15:18,020 --> 00:15:23,780
cluster will continue to operate

392
00:15:19,780 --> 00:15:25,339
<font color="#E5E5E5">accessible in the other site and you can</font>

393
00:15:23,780 --> 00:15:26,900
also sort<font color="#E5E5E5"> of combine these things so you</font>

394
00:15:25,340 --> 00:15:28,850
might have<font color="#CCCCCC"> a single</font><font color="#E5E5E5"> stuff cluster across</font>

395
00:15:26,900 --> 00:15:31,130
<font color="#E5E5E5">multiple sites you</font><font color="#CCCCCC"> have one radio spool</font>

396
00:15:28,850 --> 00:15:32,390
that's stretched across them with<font color="#CCCCCC"> a</font>

397
00:15:31,130 --> 00:15:34,430
particular<font color="#E5E5E5"> crushable but then you also</font>

398
00:15:32,390 --> 00:15:35,780
have<font color="#CCCCCC"> radio spools that</font><font color="#E5E5E5"> are confined each</font>

399
00:15:34,430 --> 00:15:37,640
data center so<font color="#E5E5E5"> you have all tiers of</font>

400
00:15:35,780 --> 00:15:38,990
service<font color="#CCCCCC"> it might be that</font><font color="#E5E5E5"> some v ends</font>

401
00:15:37,640 --> 00:15:42,350
<font color="#E5E5E5">only need local storage they don't need</font>

402
00:15:38,990 --> 00:15:45,020
that multi-site redundancy<font color="#E5E5E5"> others do and</font>

403
00:15:42,350 --> 00:15:47,810
<font color="#E5E5E5">so depending</font><font color="#CCCCCC"> on what what tier what type</font>

404
00:15:45,020 --> 00:15:49,699
<font color="#CCCCCC">of service you need</font><font color="#E5E5E5"> you can get that to</font>

405
00:15:47,810 --> 00:15:51,680
your applications<font color="#CCCCCC"> I mean if you can find</font>

406
00:15:49,700 --> 00:15:53,360
all these<font color="#E5E5E5"> things you can even leverage</font>

407
00:15:51,680 --> 00:15:55,459
this<font color="#CCCCCC"> capability for migration so you</font>

408
00:15:53,360 --> 00:15:57,980
might have an application<font color="#E5E5E5"> that starts</font>

409
00:15:55,460 --> 00:16:00,440
out using the local radio<font color="#CCCCCC"> spool in one</font>

410
00:15:57,980 --> 00:16:02,660
data center<font color="#CCCCCC"> you live migrate that to the</font>

411
00:16:00,440 --> 00:16:03,920
stretch pool then you<font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> even live</font>

412
00:16:02,660 --> 00:16:06,230
migrate the<font color="#E5E5E5"> virtual machine to another</font>

413
00:16:03,920 --> 00:16:07,939
<font color="#E5E5E5">data center where</font><font color="#CCCCCC"> we started whatever it</font>

414
00:16:06,230 --> 00:16:09,020
is and then<font color="#CCCCCC"> you could live migrate it to</font>

415
00:16:07,940 --> 00:16:10,730
the rate of<font color="#E5E5E5"> spool in the other data</font>

416
00:16:09,020 --> 00:16:12,350
center so if you can bind<font color="#E5E5E5"> all these</font>

417
00:16:10,730 --> 00:16:13,880
things<font color="#E5E5E5"> using a</font><font color="#CCCCCC"> start to</font><font color="#E5E5E5"> cluster you can</font>

418
00:16:12,350 --> 00:16:16,490
sort of<font color="#E5E5E5"> get the full breadth of mobility</font>

419
00:16:13,880 --> 00:16:17,290
<font color="#E5E5E5">and disaster recovery and edge sites and</font>

420
00:16:16,490 --> 00:16:20,720
so on

421
00:16:17,290 --> 00:16:22,550
so it sounds pretty<font color="#CCCCCC"> good</font><font color="#E5E5E5"> but the thing</font>

422
00:16:20,720 --> 00:16:24,500
<font color="#CCCCCC">to keep in</font><font color="#E5E5E5"> mind is doing stretch</font>

423
00:16:22,550 --> 00:16:26,329
clusters is a little bit sketchy<font color="#E5E5E5"> it</font>

424
00:16:24,500 --> 00:16:28,010
isn't necessarily what you want what we

425
00:16:26,330 --> 00:16:29,360
want<font color="#CCCCCC"> to do so the first thing</font><font color="#E5E5E5"> to keep in</font>

426
00:16:28,010 --> 00:16:29,810
<font color="#E5E5E5">mind</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> the network latency between</font>

427
00:16:29,360 --> 00:16:32,360
<font color="#CCCCCC">those</font>

428
00:16:29,810 --> 00:16:34,369
is critical<font color="#CCCCCC"> so you need low latency</font><font color="#E5E5E5"> for</font>

429
00:16:32,360 --> 00:16:36,529
performance<font color="#E5E5E5"> because within a</font><font color="#CCCCCC"> raters pool</font>

430
00:16:34,370 --> 00:16:39,350
we're doing synchronous replication<font color="#CCCCCC"> you</font>

431
00:16:36,529 --> 00:16:41,360
also need to<font color="#E5E5E5"> keep in mind that you need</font>

432
00:16:39,350 --> 00:16:43,100
<font color="#E5E5E5">to have high bandwidth because if you</font>

433
00:16:41,360 --> 00:16:44,240
have a failure situation<font color="#E5E5E5"> then you're</font>

434
00:16:43,100 --> 00:16:45,710
gonna have a lot of<font color="#E5E5E5"> data</font><font color="#CCCCCC"> falling</font><font color="#E5E5E5"> across</font>

435
00:16:44,240 --> 00:16:48,680
that link in<font color="#CCCCCC"> order to do rebuilds and</font>

436
00:16:45,710 --> 00:16:49,880
recovery and<font color="#CCCCCC"> that might be</font><font color="#E5E5E5"> more than you</font>

437
00:16:48,680 --> 00:16:51,829
<font color="#CCCCCC">expected you may be able to sustain</font><font color="#E5E5E5"> that</font>

438
00:16:49,880 --> 00:16:54,800
<font color="#CCCCCC">while you're still doing your normal</font>

439
00:16:51,830 --> 00:16:55,910
application reads and writes<font color="#CCCCCC"> it's also</font>

440
00:16:54,800 --> 00:16:57,949
important<font color="#E5E5E5"> to keep in</font><font color="#CCCCCC"> mind</font><font color="#E5E5E5"> that it's</font>

441
00:16:55,910 --> 00:17:00,800
relatively inflexible<font color="#CCCCCC"> sort of building</font>

442
00:16:57,950 --> 00:17:02,390
<font color="#E5E5E5">these big</font><font color="#CCCCCC"> stretches tough clusters so it</font>

443
00:17:00,800 --> 00:17:04,069
<font color="#CCCCCC">might work</font><font color="#E5E5E5"> for two or three data centers</font>

444
00:17:02,390 --> 00:17:06,189
it's not clear that<font color="#CCCCCC"> you want to</font><font color="#E5E5E5"> build a</font>

445
00:17:04,069 --> 00:17:09,170
<font color="#CCCCCC">stretch</font><font color="#E5E5E5"> cluster across 20 data centers</font>

446
00:17:06,189 --> 00:17:10,880
or it's even likely<font color="#CCCCCC"> that you're gonna</font>

447
00:17:09,170 --> 00:17:12,230
have 20 data<font color="#E5E5E5"> centers with low latency</font>

448
00:17:10,880 --> 00:17:13,430
links that are close enough<font color="#CCCCCC"> together</font>

449
00:17:12,230 --> 00:17:15,740
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> would even want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do this in</font>

450
00:17:13,430 --> 00:17:17,540
the<font color="#E5E5E5"> first</font><font color="#CCCCCC"> place and</font><font color="#E5E5E5"> you can't take</font><font color="#CCCCCC"> two</font>

451
00:17:15,740 --> 00:17:19,939
sort of existing stuff clusters that

452
00:17:17,540 --> 00:17:21,230
sort of you already<font color="#E5E5E5"> had and decide</font><font color="#CCCCCC"> later</font>

453
00:17:19,939 --> 00:17:22,880
that you want to join<font color="#E5E5E5"> them together so</font>

454
00:17:21,230 --> 00:17:24,290
you<font color="#E5E5E5"> can have this capability</font><font color="#CCCCCC"> you can't</font>

455
00:17:22,880 --> 00:17:25,880
take<font color="#CCCCCC"> two stuff clusters and smush them</font>

456
00:17:24,290 --> 00:17:27,349
together<font color="#E5E5E5"> later you have to sort of build</font>

457
00:17:25,880 --> 00:17:29,590
it and pre<font color="#CCCCCC"> plan</font><font color="#E5E5E5"> ahead of time</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> there</font>

458
00:17:27,349 --> 00:17:35,090
in<font color="#E5E5E5"> order to do this sort of situation</font>

459
00:17:29,590 --> 00:17:36,230
<font color="#CCCCCC">and finally deploying a</font><font color="#E5E5E5"> stretch cluster</font>

460
00:17:35,090 --> 00:17:38,270
<font color="#E5E5E5">means you have a high degree of coupling</font>

461
00:17:36,230 --> 00:17:39,710
<font color="#E5E5E5">you have all of the storage</font>

462
00:17:38,270 --> 00:17:41,540
infrastructure<font color="#E5E5E5"> across multiple data</font>

463
00:17:39,710 --> 00:17:44,120
centers<font color="#CCCCCC"> and multiple failure domains</font>

464
00:17:41,540 --> 00:17:46,428
<font color="#E5E5E5">that's has a single point of failure of</font>

465
00:17:44,120 --> 00:17:47,989
a single<font color="#E5E5E5"> instance of staff a single</font>

466
00:17:46,429 --> 00:17:49,820
piece of<font color="#E5E5E5"> software</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> responsible so</font>

467
00:17:47,990 --> 00:17:51,440
if something<font color="#E5E5E5"> goes</font><font color="#CCCCCC"> wrong with SEF if it's</font>

468
00:17:49,820 --> 00:17:52,610
a bug or<font color="#CCCCCC"> something it's gonna affect all</font>

469
00:17:51,440 --> 00:17:55,130
your sites<font color="#E5E5E5"> are not just one of your</font>

470
00:17:52,610 --> 00:17:57,709
sites so you<font color="#CCCCCC"> definitely want to be a</font>

471
00:17:55,130 --> 00:18:00,530
<font color="#CCCCCC">muse caution if you're taking a sort</font><font color="#E5E5E5"> of</font>

472
00:17:57,710 --> 00:18:03,710
a stretch<font color="#E5E5E5"> across to approach so what can</font>

473
00:18:00,530 --> 00:18:08,450
<font color="#E5E5E5">we do</font><font color="#CCCCCC"> instead so our BD also has an</font>

474
00:18:03,710 --> 00:18:10,550
async mirroring capability so instead

475
00:18:08,450 --> 00:18:12,140
<font color="#E5E5E5">you would have an existing stuff cluster</font>

476
00:18:10,550 --> 00:18:14,210
with a normal rate of<font color="#E5E5E5"> pool a normal our</font>

477
00:18:12,140 --> 00:18:16,550
body image<font color="#E5E5E5"> doing synchronous replication</font>

478
00:18:14,210 --> 00:18:18,260
within that site<font color="#E5E5E5"> and then on top of</font><font color="#CCCCCC"> that</font>

479
00:18:16,550 --> 00:18:19,909
<font color="#E5E5E5">we layer an asynchronous mirroring</font>

480
00:18:18,260 --> 00:18:22,310
capability that<font color="#E5E5E5"> lets you mirror that</font>

481
00:18:19,910 --> 00:18:25,130
image to<font color="#CCCCCC"> a second stuff cluster or</font>

482
00:18:22,310 --> 00:18:27,649
another pool in another site<font color="#CCCCCC"> the way it</font>

483
00:18:25,130 --> 00:18:29,990
does this is on the primary<font color="#E5E5E5"> image and we</font>

484
00:18:27,650 --> 00:18:31,520
<font color="#E5E5E5">maintain a write journal so we have a</font>

485
00:18:29,990 --> 00:18:33,230
log of<font color="#CCCCCC"> the sequence of writes</font><font color="#E5E5E5"> that are</font>

486
00:18:31,520 --> 00:18:35,120
happening to that to that<font color="#E5E5E5"> device and</font>

487
00:18:33,230 --> 00:18:36,800
then there are<font color="#E5E5E5"> mirror daemons that just</font>

488
00:18:35,120 --> 00:18:38,989
sort<font color="#E5E5E5"> of send all those rights over cross</font>

489
00:18:36,800 --> 00:18:41,210
to the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> cluster and so you end</font><font color="#CCCCCC"> up</font>

490
00:18:38,990 --> 00:18:41,779
<font color="#E5E5E5">with a disaster recovery backup copy</font><font color="#CCCCCC"> of</font>

491
00:18:41,210 --> 00:18:44,119
the

492
00:18:41,779 --> 00:18:45,469
<font color="#E5E5E5">in another site there's a little bit of</font>

493
00:18:44,119 --> 00:18:46,668
<font color="#CCCCCC">performance</font><font color="#E5E5E5"> overhead on</font><font color="#CCCCCC"> the primary</font>

494
00:18:45,469 --> 00:18:48,859
<font color="#CCCCCC">because we're maintaining the sprite</font>

495
00:18:46,669 --> 00:18:50,090
<font color="#CCCCCC">Journal in reality people mitigate this</font>

496
00:18:48,859 --> 00:18:53,449
by<font color="#CCCCCC"> putting that right</font><font color="#E5E5E5"> journal and a</font>

497
00:18:50,090 --> 00:18:54,529
separate<font color="#E5E5E5"> SSD high-performance pool so if</font>

498
00:18:53,450 --> 00:18:55,849
you weren't already doing<font color="#E5E5E5"> that it might</font>

499
00:18:54,529 --> 00:18:57,529
actually<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a performance win tour</font>

500
00:18:55,849 --> 00:19:00,129
depends but you'll have<font color="#E5E5E5"> more</font>

501
00:18:57,529 --> 00:19:02,299
infrastructure<font color="#E5E5E5"> to support it</font>

502
00:19:00,129 --> 00:19:04,340
honestly<font color="#E5E5E5"> I actually can't remember if we</font>

503
00:19:02,299 --> 00:19:05,929
implemented<font color="#E5E5E5"> this or not but at least in</font>

504
00:19:04,340 --> 00:19:07,369
principle<font color="#E5E5E5"> you could configure in a delay</font>

505
00:19:05,929 --> 00:19:09,469
for that<font color="#CCCCCC"> replication so if you wanted</font>

506
00:19:07,369 --> 00:19:10,879
like<font color="#CCCCCC"> a five</font><font color="#E5E5E5"> minute old copy in case you</font>

507
00:19:09,469 --> 00:19:12,529
<font color="#CCCCCC">accidentally fat-finger and destroy your</font>

508
00:19:10,879 --> 00:19:15,738
primary copy you could have you<font color="#E5E5E5"> could</font>

509
00:19:12,529 --> 00:19:18,169
configure that as well<font color="#E5E5E5"> but this</font><font color="#CCCCCC"> RBD</font>

510
00:19:15,739 --> 00:19:19,700
mirroring feature has<font color="#E5E5E5"> been supportive</font>

511
00:19:18,169 --> 00:19:21,229
since luminous and since then we've been

512
00:19:19,700 --> 00:19:24,619
<font color="#E5E5E5">improving the tooling and automation</font>

513
00:19:21,229 --> 00:19:27,710
around<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and then if you have a failure</font>

514
00:19:24,619 --> 00:19:29,359
<font color="#E5E5E5">on</font><font color="#CCCCCC"> your primary</font><font color="#E5E5E5"> site</font><font color="#CCCCCC"> you lose your</font>

515
00:19:27,710 --> 00:19:31,099
cluster a<font color="#E5E5E5"> the whole site goes</font><font color="#CCCCCC"> down goes</font>

516
00:19:29,359 --> 00:19:33,109
<font color="#E5E5E5">off the network or stuff explodes or</font>

517
00:19:31,099 --> 00:19:34,729
<font color="#CCCCCC">something like that</font><font color="#E5E5E5"> then you have</font><font color="#CCCCCC"> your</font>

518
00:19:33,109 --> 00:19:36,678
backup<font color="#E5E5E5"> image in the secondary site</font>

519
00:19:34,729 --> 00:19:38,179
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> a point in</font><font color="#E5E5E5"> time consistent</font>

520
00:19:36,679 --> 00:19:40,429
<font color="#E5E5E5">because it's</font><font color="#CCCCCC"> ordering the mirroring</font><font color="#E5E5E5"> of</font>

521
00:19:38,179 --> 00:19:42,109
<font color="#CCCCCC">Rights</font><font color="#E5E5E5"> across the image and the second</font>

522
00:19:40,429 --> 00:19:44,509
site appears<font color="#E5E5E5"> as though you know there's</font>

523
00:19:42,109 --> 00:19:46,279
a craft<font color="#E5E5E5"> or something and distributing so</font>

524
00:19:44,509 --> 00:19:47,929
it's a<font color="#E5E5E5"> point in time consistent copy and</font>

525
00:19:46,279 --> 00:19:50,210
it's asynchronous<font color="#E5E5E5"> so you might lose the</font>

526
00:19:47,929 --> 00:19:52,429
last<font color="#E5E5E5"> few rights but depending on</font><font color="#CCCCCC"> what</font>

527
00:19:50,210 --> 00:19:54,499
your<font color="#E5E5E5"> latency and bandwidth limitations</font>

528
00:19:52,429 --> 00:19:55,909
are on that<font color="#E5E5E5"> link presumably hopefully</font>

529
00:19:54,499 --> 00:19:57,440
it's not<font color="#E5E5E5"> that much maybe a few seconds</font>

530
00:19:55,909 --> 00:19:59,589
and then<font color="#E5E5E5"> you can restart your</font>

531
00:19:57,440 --> 00:20:02,899
<font color="#E5E5E5">application in the secondary site and</font>

532
00:19:59,589 --> 00:20:04,879
<font color="#E5E5E5">there the whole</font><font color="#CCCCCC"> lifecycle is considered</font>

533
00:20:02,899 --> 00:20:06,709
<font color="#E5E5E5">here so if the primary site comes back</font>

534
00:20:04,879 --> 00:20:08,089
up then there's all the code to sort of

535
00:20:06,710 --> 00:20:09,409
resynchronize it might roll back the

536
00:20:08,089 --> 00:20:10,668
rights that<font color="#E5E5E5"> got lost and then we</font>

537
00:20:09,409 --> 00:20:12,409
<font color="#E5E5E5">synchronized with</font><font color="#CCCCCC"> the new rights</font><font color="#E5E5E5"> that</font>

538
00:20:10,669 --> 00:20:13,929
happened<font color="#CCCCCC"> inside B you can flip the</font>

539
00:20:12,409 --> 00:20:16,009
master back<font color="#CCCCCC"> between the</font><font color="#E5E5E5"> two sites</font>

540
00:20:13,929 --> 00:20:18,710
although all the<font color="#E5E5E5"> tooling and so on</font>

541
00:20:16,009 --> 00:20:24,950
around that exists<font color="#E5E5E5"> so it's a sort of a</font>

542
00:20:18,710 --> 00:20:27,019
<font color="#E5E5E5">complete robust solution</font><font color="#CCCCCC"> so the the sort</font>

543
00:20:24,950 --> 00:20:29,450
of<font color="#E5E5E5"> the first primary consumer this is</font>

544
00:20:27,019 --> 00:20:31,129
OpenStack cinder over the<font color="#E5E5E5"> last several</font>

545
00:20:29,450 --> 00:20:33,440
<font color="#E5E5E5">releases there's been an addition of our</font>

546
00:20:31,129 --> 00:20:35,269
<font color="#E5E5E5">B replication drivers investment in a</font>

547
00:20:33,440 --> 00:20:38,830
lot<font color="#CCCCCC"> of the tooling that deploys it</font>

548
00:20:35,269 --> 00:20:42,080
figures it over<font color="#CCCCCC"> aquatic Queens in rocky</font>

549
00:20:38,830 --> 00:20:45,489
but<font color="#E5E5E5"> it's sort of an</font><font color="#CCCCCC"> Islamic completely</font>

550
00:20:42,080 --> 00:20:47,570
satisfying<font color="#E5E5E5"> solution so there's a lot</font><font color="#CCCCCC"> of</font>

551
00:20:45,489 --> 00:20:50,059
tooling around setting<font color="#E5E5E5"> this up and</font>

552
00:20:47,570 --> 00:20:52,609
configuring<font color="#E5E5E5"> it on sort</font><font color="#CCCCCC"> of the key thing</font>

553
00:20:50,059 --> 00:20:53,928
is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> if you have even</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you have</font>

554
00:20:52,609 --> 00:20:54,460
this all<font color="#CCCCCC"> set up</font><font color="#E5E5E5"> and OpenStack and you</font>

555
00:20:53,929 --> 00:20:57,370
lose<font color="#E5E5E5"> it</font>

556
00:20:54,460 --> 00:20:59,830
<font color="#CCCCCC">open sex</font><font color="#E5E5E5"> site</font><font color="#CCCCCC"> stores</font><font color="#E5E5E5"> will come back on</font>

557
00:20:57,370 --> 00:21:01,209
the secondary<font color="#E5E5E5"> site but it doesn't set up</font>

558
00:20:59,830 --> 00:21:04,840
all your<font color="#E5E5E5"> Nova attachments it doesn't</font>

559
00:21:01,210 --> 00:21:07,870
actually restart<font color="#CCCCCC"> your VMs and I</font><font color="#E5E5E5"> think</font>

560
00:21:04,840 --> 00:21:09,760
this really<font color="#CCCCCC"> highlights the limitations</font>

561
00:21:07,870 --> 00:21:12,699
<font color="#E5E5E5">of how much you can do in the storage or</font>

562
00:21:09,760 --> 00:21:14,860
<font color="#E5E5E5">infrastructure layer without sort of the</font>

563
00:21:12,700 --> 00:21:16,180
<font color="#E5E5E5">cooperation of the layers above it it's</font>

564
00:21:14,860 --> 00:21:18,459
hard for an infrastructure<font color="#CCCCCC"> layer that's</font>

565
00:21:16,180 --> 00:21:20,020
just providing like beams and storage to

566
00:21:18,460 --> 00:21:21,160
know what to do with your storage<font color="#E5E5E5"> even</font>

567
00:21:20,020 --> 00:21:22,900
<font color="#CCCCCC">if you implement all these</font><font color="#E5E5E5"> fancy</font>

568
00:21:21,160 --> 00:21:24,540
capabilities of doing<font color="#E5E5E5"> migration or</font>

569
00:21:22,900 --> 00:21:26,620
disaster recovery

570
00:21:24,540 --> 00:21:27,850
<font color="#CCCCCC">what you</font><font color="#E5E5E5"> really need is sort of a</font>

571
00:21:26,620 --> 00:21:29,830
complete<font color="#CCCCCC"> picture of what your</font>

572
00:21:27,850 --> 00:21:31,120
infrastructure looks like how you define

573
00:21:29,830 --> 00:21:34,179
your applications and how you set up

574
00:21:31,120 --> 00:21:35,739
<font color="#E5E5E5">your entire application stack which is</font>

575
00:21:34,180 --> 00:21:38,260
<font color="#E5E5E5">really what you get with kubernetes and</font>

576
00:21:35,740 --> 00:21:42,220
<font color="#E5E5E5">why why we're excited</font><font color="#CCCCCC"> about it</font><font color="#E5E5E5"> so more</font>

577
00:21:38,260 --> 00:21:43,629
<font color="#CCCCCC">on that later</font><font color="#E5E5E5"> so that's that's what we</font>

578
00:21:42,220 --> 00:21:45,280
can do<font color="#CCCCCC"> with block so</font><font color="#E5E5E5"> we can do lots of</font>

579
00:21:43,630 --> 00:21:46,690
stuff within<font color="#CCCCCC"> a single</font><font color="#E5E5E5"> cluster and</font><font color="#CCCCCC"> we</font>

580
00:21:45,280 --> 00:21:48,670
have this our buddy mirroring capability

581
00:21:46,690 --> 00:21:50,460
<font color="#CCCCCC">across multiple clusters</font>

582
00:21:48,670 --> 00:21:54,210
[Music]

583
00:21:50,460 --> 00:21:56,230
<font color="#CCCCCC">Steff house also has</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> off</font><font color="#E5E5E5"> s</font><font color="#CCCCCC"> a file a</font>

584
00:21:54,210 --> 00:21:58,630
complete distributed file system

585
00:21:56,230 --> 00:22:00,250
so such FS is awesome<font color="#E5E5E5"> it's been</font><font color="#CCCCCC"> stable</font>

586
00:21:58,630 --> 00:22:02,830
since<font color="#CCCCCC"> kraken we've</font><font color="#E5E5E5"> had multiple metadata</font>

587
00:22:00,250 --> 00:22:04,810
servers for several releases now we've

588
00:22:02,830 --> 00:22:08,110
<font color="#E5E5E5">had snapshots</font><font color="#CCCCCC"> support it since mimic</font>

589
00:22:04,810 --> 00:22:09,520
just the previous<font color="#E5E5E5"> release stuff if s</font>

590
00:22:08,110 --> 00:22:10,990
supports multiple<font color="#CCCCCC"> Rados pools</font>

591
00:22:09,520 --> 00:22:12,610
<font color="#E5E5E5">so within</font><font color="#CCCCCC"> Rados again you can have</font>

592
00:22:10,990 --> 00:22:14,380
different pools backed by<font color="#CCCCCC"> ASUS tees or</font>

593
00:22:12,610 --> 00:22:16,360
hard disks or different<font color="#E5E5E5"> wraps and rows</font>

594
00:22:14,380 --> 00:22:17,650
data centers all that stuff<font color="#CCCCCC"> and in</font><font color="#E5E5E5"> South</font>

595
00:22:16,360 --> 00:22:20,740
a fast you can map a particular

596
00:22:17,650 --> 00:22:22,000
<font color="#CCCCCC">subdirectory to any Rado spool so the</font>

597
00:22:20,740 --> 00:22:24,670
new file is created in that directory

598
00:22:22,000 --> 00:22:26,260
<font color="#E5E5E5">gets stored in that location</font><font color="#CCCCCC"> so if</font><font color="#E5E5E5"> s is</font>

599
00:22:24,670 --> 00:22:28,270
fast and scalable it's got quotas

600
00:22:26,260 --> 00:22:31,510
volumes sub volumes<font color="#CCCCCC"> all</font><font color="#E5E5E5"> this good stuff</font>

601
00:22:28,270 --> 00:22:35,139
<font color="#E5E5E5">and you can provision it with</font><font color="#CCCCCC"> manila</font><font color="#E5E5E5"> or</font>

602
00:22:31,510 --> 00:22:38,200
with kubernetes<font color="#CCCCCC"> PV</font><font color="#E5E5E5"> persistent volume</font>

603
00:22:35,140 --> 00:22:40,900
drivers so south of<font color="#E5E5E5"> us is great it's a</font>

604
00:22:38,200 --> 00:22:43,330
little bit<font color="#E5E5E5"> different than our</font><font color="#CCCCCC"> BD in that</font>

605
00:22:40,900 --> 00:22:45,160
an RB d client talks directly<font color="#E5E5E5"> to all the</font>

606
00:22:43,330 --> 00:22:46,510
<font color="#CCCCCC">OSDs that are storing the data</font><font color="#E5E5E5"> so you</font>

607
00:22:45,160 --> 00:22:48,730
have<font color="#E5E5E5"> sort of a direct data path between</font>

608
00:22:46,510 --> 00:22:50,080
the<font color="#CCCCCC"> r BD client</font><font color="#E5E5E5"> either the kernel that's</font>

609
00:22:48,730 --> 00:22:51,340
mapping the device or<font color="#E5E5E5"> the</font><font color="#CCCCCC"> virtual</font>

610
00:22:50,080 --> 00:22:53,740
machine<font color="#E5E5E5"> that's consuming the virtual</font>

611
00:22:51,340 --> 00:22:56,139
disk<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the size of s you also have a</font>

612
00:22:53,740 --> 00:22:58,420
<font color="#E5E5E5">direct data path for file data but when</font>

613
00:22:56,140 --> 00:22:59,410
you're talking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the you're interacting</font>

614
00:22:58,420 --> 00:23:02,200
with<font color="#E5E5E5"> the file system namespace</font>

615
00:22:59,410 --> 00:23:03,910
directories doing reader create

616
00:23:02,200 --> 00:23:05,440
rename open all that<font color="#E5E5E5"> stuff you're</font>

617
00:23:03,910 --> 00:23:06,820
<font color="#E5E5E5">talking to a metadata server so you have</font>

618
00:23:05,440 --> 00:23:07,309
a second set<font color="#CCCCCC"> of metadata servers that</font>

619
00:23:06,820 --> 00:23:09,499
managed

620
00:23:07,309 --> 00:23:11,210
file system namespace<font color="#E5E5E5"> coordinate access</font>

621
00:23:09,499 --> 00:23:12,559
to all the files make sure that the

622
00:23:11,210 --> 00:23:14,600
clients are<font color="#E5E5E5"> cooperating and doing the</font>

623
00:23:12,559 --> 00:23:17,928
right thing<font color="#E5E5E5"> I'm so slightly</font><font color="#CCCCCC"> different</font>

624
00:23:14,600 --> 00:23:19,580
model<font color="#CCCCCC"> um</font><font color="#E5E5E5"> so the first question can</font><font color="#CCCCCC"> we</font>

625
00:23:17,929 --> 00:23:21,379
<font color="#E5E5E5">take stuff of s and stretch it across</font>

626
00:23:19,580 --> 00:23:24,199
multiple<font color="#E5E5E5"> data centers the same way we do</font>

627
00:23:21,379 --> 00:23:25,939
<font color="#E5E5E5">our VD</font><font color="#CCCCCC"> many answer is yes you</font><font color="#E5E5E5"> can do it</font>

628
00:23:24,200 --> 00:23:28,309
but it<font color="#E5E5E5"> has all the same limitations</font>

629
00:23:25,940 --> 00:23:29,419
<font color="#E5E5E5">right so if you stretch it across data</font>

630
00:23:28,309 --> 00:23:31,428
centers<font color="#CCCCCC"> you have to be careful about the</font>

631
00:23:29,419 --> 00:23:34,129
latency the failure domains all that

632
00:23:31,429 --> 00:23:37,340
stuff<font color="#CCCCCC"> so the same same issues apply so</font>

633
00:23:34,129 --> 00:23:39,529
use caution<font color="#E5E5E5"> and in addition</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that in</font>

634
00:23:37,340 --> 00:23:41,809
our BD while you had a<font color="#E5E5E5"> direct data path</font>

635
00:23:39,529 --> 00:23:44,360
to the OS DS and stuff FS you're also

636
00:23:41,809 --> 00:23:45,980
talking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the metadata servers so you</font>

637
00:23:44,360 --> 00:23:48,889
have this<font color="#CCCCCC"> additional concern that you</font>

638
00:23:45,980 --> 00:23:50,240
want to make<font color="#CCCCCC"> sure that if well you have</font>

639
00:23:48,889 --> 00:23:51,860
this<font color="#E5E5E5"> problem that if the metadata</font><font color="#CCCCCC"> server</font>

640
00:23:50,240 --> 00:23:53,899
<font color="#E5E5E5">that's active is on the other data</font>

641
00:23:51,860 --> 00:23:55,998
center then all your metadata access is

642
00:23:53,899 --> 00:23:57,350
going<font color="#CCCCCC"> to go</font><font color="#E5E5E5"> across the link</font><font color="#CCCCCC"> I mean for</font>

643
00:23:55,999 --> 00:23:59,119
file workloads<font color="#E5E5E5"> in particular and</font>

644
00:23:57,350 --> 00:24:02,330
metadata performance tends to be<font color="#E5E5E5"> very</font>

645
00:23:59,119 --> 00:24:04,340
important at least for in general

646
00:24:02,330 --> 00:24:05,689
general purpose file workloads<font color="#E5E5E5"> maybe if</font>

647
00:24:04,340 --> 00:24:07,279
your application it's not such a concern

648
00:24:05,690 --> 00:24:07,789
but<font color="#E5E5E5"> you need to pay</font><font color="#CCCCCC"> attention to where</font>

649
00:24:07,279 --> 00:24:11,059
your metadata

650
00:24:07,789 --> 00:24:13,249
<font color="#E5E5E5">servers</font><font color="#CCCCCC"> are placed so again stretch you</font>

651
00:24:11,059 --> 00:24:16,490
<font color="#E5E5E5">can do it maybe it's not not the the</font>

652
00:24:13,249 --> 00:24:18,740
panacea<font color="#E5E5E5"> that that you'd hope it was so</font>

653
00:24:16,490 --> 00:24:20,179
what what can<font color="#CCCCCC"> we do sort</font><font color="#E5E5E5"> of beyond this</font>

654
00:24:18,740 --> 00:24:21,799
that's what<font color="#E5E5E5"> stuff will do</font><font color="#CCCCCC"> stuff the</font><font color="#E5E5E5"> best</font>

655
00:24:20,179 --> 00:24:23,029
we'll do today<font color="#E5E5E5"> and one of the things</font>

656
00:24:21,799 --> 00:24:25,490
that we<font color="#E5E5E5"> could do with</font><font color="#CCCCCC"> Stefan fest</font><font color="#E5E5E5"> to</font>

657
00:24:23,029 --> 00:24:26,809
improve the<font color="#E5E5E5"> multi cluster capability</font>

658
00:24:25,490 --> 00:24:29,029
since we're going<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about a couple</font>

659
00:24:26,809 --> 00:24:30,918
<font color="#E5E5E5">of different</font><font color="#CCCCCC"> options so the first thing</font>

660
00:24:29,029 --> 00:24:32,600
<font color="#CCCCCC">that we could do and we're</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font>

661
00:24:30,919 --> 00:24:34,940
<font color="#E5E5E5">doing is something called snap mirroring</font>

662
00:24:32,600 --> 00:24:36,709
and the basic<font color="#E5E5E5"> idea here is that we</font>

663
00:24:34,940 --> 00:24:38,509
already have a robust snapshot

664
00:24:36,710 --> 00:24:39,950
capability and stuff<font color="#CCCCCC"> if s you can take</font>

665
00:24:38,509 --> 00:24:41,389
any directory in the<font color="#CCCCCC"> filesystem and</font>

666
00:24:39,950 --> 00:24:42,590
create a snapshot<font color="#E5E5E5"> on it and you</font>

667
00:24:41,389 --> 00:24:44,209
subdirectory at any time you don't have

668
00:24:42,590 --> 00:24:46,580
to pre-plan<font color="#CCCCCC"> your volumes or anything</font><font color="#E5E5E5"> and</font>

669
00:24:44,210 --> 00:24:48,820
those snapshots<font color="#E5E5E5"> provide a very</font>

670
00:24:46,580 --> 00:24:53,149
<font color="#CCCCCC">fine-grained point in time consistency</font>

671
00:24:48,820 --> 00:24:55,158
<font color="#CCCCCC">and additionally Ceph of s has something</font>

672
00:24:53,149 --> 00:24:57,110
called<font color="#E5E5E5"> our stats which are recursive</font>

673
00:24:55,159 --> 00:24:59,269
<font color="#E5E5E5">it's recursive metadata on any</font>

674
00:24:57,110 --> 00:25:01,219
<font color="#E5E5E5">subdirectory in the system and one of</font>

675
00:24:59,269 --> 00:25:03,320
those attributes<font color="#E5E5E5"> is called</font><font color="#CCCCCC"> RC time which</font>

676
00:25:01,220 --> 00:25:05,600
is essentially the<font color="#E5E5E5"> the</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> recent</font>

677
00:25:03,320 --> 00:25:06,918
modification of anything<font color="#E5E5E5"> beneath this</font><font color="#CCCCCC"> a</font>

678
00:25:05,600 --> 00:25:10,240
particular point<font color="#CCCCCC"> in the filesystem</font>

679
00:25:06,919 --> 00:25:12,440
<font color="#CCCCCC">hierarchy</font><font color="#E5E5E5"> and if you find these</font><font color="#CCCCCC"> things</font>

680
00:25:10,240 --> 00:25:14,659
with something like<font color="#CCCCCC"> arcing</font><font color="#E5E5E5"> something</font>

681
00:25:12,440 --> 00:25:17,299
that's just<font color="#E5E5E5"> copying files across then</font>

682
00:25:14,659 --> 00:25:19,009
you can build a<font color="#E5E5E5"> system where you create</font>

683
00:25:17,299 --> 00:25:19,639
a<font color="#CCCCCC"> snapshot periodically say every</font><font color="#E5E5E5"> 10</font>

684
00:25:19,009 --> 00:25:22,160
<font color="#E5E5E5">minutes</font>

685
00:25:19,640 --> 00:25:23,770
of part<font color="#E5E5E5"> of your data set</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then use</font>

686
00:25:22,160 --> 00:25:25,640
that<font color="#E5E5E5"> recursive</font><font color="#CCCCCC"> see time to identify</font>

687
00:25:23,770 --> 00:25:27,350
efficiently what the changes have been

688
00:25:25,640 --> 00:25:29,030
in that subdirectory<font color="#CCCCCC"> and then quickly</font>

689
00:25:27,350 --> 00:25:31,490
just copy them over<font color="#E5E5E5"> to a second data</font>

690
00:25:29,030 --> 00:25:33,290
<font color="#E5E5E5">second cluster and then create the same</font>

691
00:25:31,490 --> 00:25:34,850
snapshot when you're done on the second

692
00:25:33,290 --> 00:25:36,409
cluster<font color="#CCCCCC"> and so you could set up a</font>

693
00:25:34,850 --> 00:25:38,689
<font color="#CCCCCC">schedule where every 10</font><font color="#E5E5E5"> minutes you take</font>

694
00:25:36,410 --> 00:25:40,100
<font color="#E5E5E5">a snapshot mural</font><font color="#CCCCCC"> and JDate across and</font>

695
00:25:38,690 --> 00:25:42,380
then create the same snapshot<font color="#E5E5E5"> and you</font>

696
00:25:40,100 --> 00:25:47,959
have this<font color="#E5E5E5"> sort of disaster recovery type</font>

697
00:25:42,380 --> 00:25:50,060
situation<font color="#CCCCCC"> this matches pretty closely</font>

698
00:25:47,960 --> 00:25:53,110
<font color="#CCCCCC">features</font><font color="#E5E5E5"> that are exist in many existing</font>

699
00:25:50,060 --> 00:25:55,970
<font color="#E5E5E5">enterprise products with similar names</font>

700
00:25:53,110 --> 00:25:57,860
and it's<font color="#E5E5E5"> not that</font><font color="#CCCCCC"> hard</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do so sort of</font>

701
00:25:55,970 --> 00:25:59,390
<font color="#CCCCCC">the main</font><font color="#E5E5E5"> missing piece is that there if</font>

702
00:25:57,860 --> 00:26:01,070
we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> flush operations so that</font><font color="#CCCCCC"> we</font>

703
00:25:59,390 --> 00:26:02,480
know<font color="#CCCCCC"> that those are stat that our site</font>

704
00:26:01,070 --> 00:26:03,590
value<font color="#CCCCCC"> can be</font><font color="#E5E5E5"> trusted before we start</font>

705
00:26:02,480 --> 00:26:05,540
synchronizing stuff because they're

706
00:26:03,590 --> 00:26:07,939
<font color="#CCCCCC">normally lazily</font><font color="#E5E5E5"> updated</font><font color="#CCCCCC"> it's actually a</font>

707
00:26:05,540 --> 00:26:09,350
pull<font color="#CCCCCC"> request</font><font color="#E5E5E5"> and flight to do that and</font>

708
00:26:07,940 --> 00:26:11,090
we<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to modify our</font><font color="#CCCCCC"> sinks so</font><font color="#E5E5E5"> that I</font>

709
00:26:09,350 --> 00:26:12,560
can use that<font color="#CCCCCC"> RC time to efficiently</font>

710
00:26:11,090 --> 00:26:14,330
identify change files<font color="#E5E5E5"> before</font><font color="#CCCCCC"> it</font>

711
00:26:12,560 --> 00:26:15,440
synchronizes it and then you<font color="#E5E5E5"> want to</font>

712
00:26:14,330 --> 00:26:17,419
<font color="#E5E5E5">build some scripting and tooling around</font>

713
00:26:15,440 --> 00:26:18,410
automating the<font color="#CCCCCC"> process</font><font color="#E5E5E5"> but this is</font>

714
00:26:17,420 --> 00:26:20,000
<font color="#E5E5E5">something that you could do</font><font color="#CCCCCC"> instead of</font>

715
00:26:18,410 --> 00:26:24,290
<font color="#E5E5E5">it would match existing enterprise</font>

716
00:26:20,000 --> 00:26:26,360
<font color="#E5E5E5">features that people</font><font color="#CCCCCC"> are used to but one</font>

717
00:26:24,290 --> 00:26:28,280
of<font color="#E5E5E5"> the it raises the question</font><font color="#CCCCCC"> of do we</font>

718
00:26:26,360 --> 00:26:30,260
really<font color="#E5E5E5"> need that that strong point in</font>

719
00:26:28,280 --> 00:26:31,970
time consistency in order to create a

720
00:26:30,260 --> 00:26:33,860
disaster<font color="#E5E5E5"> recovery well the easy answer</font>

721
00:26:31,970 --> 00:26:35,090
<font color="#CCCCCC">is yes</font><font color="#E5E5E5"> because you have no idea what's</font>

722
00:26:33,860 --> 00:26:36,139
<font color="#CCCCCC">running on top of your file system it</font>

723
00:26:35,090 --> 00:26:36,679
might<font color="#CCCCCC"> be a</font><font color="#E5E5E5"> database it might be</font>

724
00:26:36,140 --> 00:26:39,350
<font color="#E5E5E5">something else</font>

725
00:26:36,680 --> 00:26:41,050
and<font color="#E5E5E5"> applications consuming the POSIX</font>

726
00:26:39,350 --> 00:26:43,850
interface might require<font color="#CCCCCC"> that consistency</font>

727
00:26:41,050 --> 00:26:48,310
<font color="#E5E5E5">the reality is that actually that's not</font>

728
00:26:43,850 --> 00:26:50,350
always<font color="#E5E5E5"> the case and in</font><font color="#CCCCCC"> fact many other</font>

729
00:26:48,310 --> 00:26:52,520
distributed file systems have geo

730
00:26:50,350 --> 00:26:55,159
replication features that don't<font color="#E5E5E5"> provide</font>

731
00:26:52,520 --> 00:26:57,260
<font color="#CCCCCC">fun consistency and people seem to be</font>

732
00:26:55,160 --> 00:26:59,300
<font color="#E5E5E5">totally happy with them so maybe they</font>

733
00:26:57,260 --> 00:27:00,770
provide a consistent<font color="#E5E5E5"> copy of a</font>

734
00:26:59,300 --> 00:27:02,389
particular file<font color="#E5E5E5"> but they don't provide</font>

735
00:27:00,770 --> 00:27:05,180
coherency<font color="#CCCCCC"> and ordering between</font><font color="#E5E5E5"> files</font>

736
00:27:02,390 --> 00:27:06,680
that are updated and it turns out<font color="#CCCCCC"> that a</font>

737
00:27:05,180 --> 00:27:08,690
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of applications that</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> using file</font>

738
00:27:06,680 --> 00:27:11,150
storage<font color="#E5E5E5"> and would benefit</font><font color="#CCCCCC"> from having a</font>

739
00:27:08,690 --> 00:27:13,190
<font color="#CCCCCC">geo replication disaster recovery tech</font>

740
00:27:11,150 --> 00:27:14,420
capability<font color="#CCCCCC"> I'm don't actually need that</font>

741
00:27:13,190 --> 00:27:16,130
strong<font color="#E5E5E5"> consistency</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know maybe</font>

742
00:27:14,420 --> 00:27:17,810
they're just<font color="#E5E5E5"> like storing images and</font>

743
00:27:16,130 --> 00:27:19,640
they don't care<font color="#E5E5E5"> if they store two images</font>

744
00:27:17,810 --> 00:27:22,240
<font color="#E5E5E5">in a particular order and they only got</font>

745
00:27:19,640 --> 00:27:24,590
the<font color="#E5E5E5"> second one on</font><font color="#CCCCCC"> their resulting site</font>

746
00:27:22,240 --> 00:27:25,880
and often maybe you're just<font color="#E5E5E5"> casually</font>

747
00:27:24,590 --> 00:27:30,560
using<font color="#E5E5E5"> the file system and you don't</font><font color="#CCCCCC"> you</font>

748
00:27:25,880 --> 00:27:31,940
don't<font color="#E5E5E5"> care</font><font color="#CCCCCC"> so if we decide that we don't</font>

749
00:27:30,560 --> 00:27:32,620
<font color="#CCCCCC">need</font><font color="#E5E5E5"> that strong consistency there are</font>

750
00:27:31,940 --> 00:27:36,760
other<font color="#E5E5E5"> things</font>

751
00:27:32,620 --> 00:27:40,629
that we can do<font color="#CCCCCC"> a simple idea would be to</font>

752
00:27:36,760 --> 00:27:42,158
<font color="#E5E5E5">have</font><font color="#CCCCCC"> an update log that</font><font color="#E5E5E5"> art is generated</font>

753
00:27:40,630 --> 00:27:43,840
by<font color="#CCCCCC"> each of the metadata servers of all</font>

754
00:27:42,159 --> 00:27:45,460
the files that are<font color="#CCCCCC"> changed</font><font color="#E5E5E5"> and feed that</font>

755
00:27:43,840 --> 00:27:48,720
<font color="#CCCCCC">to a bunch of workers</font><font color="#E5E5E5"> I can just copy</font>

756
00:27:45,460 --> 00:27:51,190
<font color="#E5E5E5">those files across to a remote system</font>

757
00:27:48,720 --> 00:27:52,630
<font color="#CCCCCC">and this has some benefits over the</font><font color="#E5E5E5"> snap</font>

758
00:27:51,190 --> 00:27:53,890
marrying model because<font color="#E5E5E5"> you get sort of</font>

759
00:27:52,630 --> 00:27:56,110
more timely updates as<font color="#CCCCCC"> soon</font><font color="#E5E5E5"> as you</font>

760
00:27:53,890 --> 00:27:58,000
modify a file<font color="#E5E5E5"> we get copied over to the</font>

761
00:27:56,110 --> 00:28:01,510
<font color="#E5E5E5">other side</font><font color="#CCCCCC"> I mean it should be able</font><font color="#E5E5E5"> to</font>

762
00:27:58,000 --> 00:28:02,650
scale pretty<font color="#E5E5E5"> well</font><font color="#CCCCCC"> the limitation of</font>

763
00:28:01,510 --> 00:28:03,908
course is<font color="#E5E5E5"> that it doesn't</font><font color="#CCCCCC"> give you a</font>

764
00:28:02,650 --> 00:28:06,970
point in time consistency across

765
00:28:03,909 --> 00:28:08,350
multiple<font color="#E5E5E5"> files in the file system</font><font color="#CCCCCC"> so it</font>

766
00:28:06,970 --> 00:28:10,000
only<font color="#E5E5E5"> suitable for for certain</font>

767
00:28:08,350 --> 00:28:11,230
applications and there are some

768
00:28:10,000 --> 00:28:12,580
implementation challenges around

769
00:28:11,230 --> 00:28:13,840
<font color="#E5E5E5">ordering and making sure that you</font>

770
00:28:12,580 --> 00:28:15,490
<font color="#E5E5E5">actually do the mirroring properly but</font>

771
00:28:13,840 --> 00:28:20,470
I'm<font color="#CCCCCC"> nothing that's that's terribly</font>

772
00:28:15,490 --> 00:28:22,480
difficult so we have<font color="#E5E5E5"> options so this one</font>

773
00:28:20,470 --> 00:28:24,429
I'm going to<font color="#E5E5E5"> take a quick aside and talk</font>

774
00:28:22,480 --> 00:28:27,029
a little bit about what it means<font color="#CCCCCC"> to sort</font>

775
00:28:24,429 --> 00:28:29,260
<font color="#CCCCCC">of satisfy the migration use case so</font>

776
00:28:27,029 --> 00:28:31,059
consider you have<font color="#E5E5E5"> an application</font><font color="#CCCCCC"> in</font>

777
00:28:29,260 --> 00:28:32,890
storage in<font color="#CCCCCC"> one datacenter</font><font color="#E5E5E5"> and you want</font>

778
00:28:31,059 --> 00:28:34,149
to move<font color="#E5E5E5"> it to another how would you</font>

779
00:28:32,890 --> 00:28:35,679
actually go<font color="#CCCCCC"> about doing this and</font><font color="#E5E5E5"> sort of</font>

780
00:28:34,149 --> 00:28:37,719
independent<font color="#E5E5E5"> of file</font><font color="#CCCCCC"> or block storage or</font>

781
00:28:35,679 --> 00:28:40,899
object storage<font color="#CCCCCC"> what what what's the</font>

782
00:28:37,720 --> 00:28:43,000
basic process so the simplest<font color="#CCCCCC"> model of</font>

783
00:28:40,899 --> 00:28:45,520
migrating data is just that you have<font color="#E5E5E5"> an</font>

784
00:28:43,000 --> 00:28:47,710
<font color="#CCCCCC">application and data inside hey you stop</font>

785
00:28:45,520 --> 00:28:49,690
it<font color="#E5E5E5"> copy all the data and then</font><font color="#CCCCCC"> you start</font>

786
00:28:47,710 --> 00:28:51,070
it up again<font color="#CCCCCC"> inside B that works fine</font>

787
00:28:49,690 --> 00:28:52,570
that's what<font color="#E5E5E5"> we've all done in the past</font>

788
00:28:51,070 --> 00:28:55,120
when we've had<font color="#E5E5E5"> to move things around</font>

789
00:28:52,570 --> 00:28:56,260
between<font color="#E5E5E5"> sites or servers your</font>

790
00:28:55,120 --> 00:28:57,850
application doesn't<font color="#E5E5E5"> have to be modified</font>

791
00:28:56,260 --> 00:28:59,890
<font color="#E5E5E5">it's it's the exclusive user of the</font>

792
00:28:57,850 --> 00:29:00,939
storage but<font color="#E5E5E5"> there's a long service</font>

793
00:28:59,890 --> 00:29:01,899
disruption because<font color="#CCCCCC"> you actually</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to</font>

794
00:29:00,940 --> 00:29:05,049
stop it while you're<font color="#E5E5E5"> doing the migration</font>

795
00:29:01,899 --> 00:29:06,428
<font color="#E5E5E5">so certainly not</font><font color="#CCCCCC"> very satisfying</font><font color="#E5E5E5"> you can</font>

796
00:29:05,049 --> 00:29:08,260
<font color="#E5E5E5">improve on this</font><font color="#CCCCCC"> situation a</font><font color="#E5E5E5"> bit if you</font>

797
00:29:06,429 --> 00:29:09,789
sort<font color="#E5E5E5"> of</font><font color="#CCCCCC"> pre-staged the data so while</font>

798
00:29:08,260 --> 00:29:12,340
your application<font color="#CCCCCC"> is still running inside</font>

799
00:29:09,789 --> 00:29:13,809
a you might copy<font color="#E5E5E5"> make a full copy of the</font>

800
00:29:12,340 --> 00:29:17,529
data<font color="#E5E5E5"> but it's sort of getting</font><font color="#CCCCCC"> all the</font>

801
00:29:13,809 --> 00:29:18,970
stale so it's like<font color="#CCCCCC"> 99.9% up-to-date then</font>

802
00:29:17,529 --> 00:29:20,799
<font color="#E5E5E5">you stop the</font><font color="#CCCCCC"> application into a final</font>

803
00:29:18,970 --> 00:29:22,720
<font color="#E5E5E5">pass on the data to</font><font color="#CCCCCC"> make sure you get</font>

804
00:29:20,799 --> 00:29:24,549
<font color="#E5E5E5">those last few changes and then start it</font>

805
00:29:22,720 --> 00:29:27,730
<font color="#E5E5E5">up inside</font><font color="#CCCCCC"> B so this</font><font color="#E5E5E5"> is an improvement</font>

806
00:29:24,549 --> 00:29:29,529
<font color="#E5E5E5">and you you shorten</font><font color="#CCCCCC"> that the</font>

807
00:29:27,730 --> 00:29:31,899
availability gap<font color="#E5E5E5"> while you're shutting</font>

808
00:29:29,529 --> 00:29:33,669
down<font color="#CCCCCC"> the application</font><font color="#E5E5E5"> and in fact with</font>

809
00:29:31,899 --> 00:29:35,739
the<font color="#CCCCCC"> our beti async mirroring you might</font>

810
00:29:33,669 --> 00:29:38,279
be able<font color="#E5E5E5"> to do this in a pretty efficient</font>

811
00:29:35,740 --> 00:29:40,480
way because<font color="#CCCCCC"> you could set up already</font>

812
00:29:38,279 --> 00:29:43,390
<font color="#CCCCCC">asynchronous Marylyn extinct earnestly</font>

813
00:29:40,480 --> 00:29:44,440
mirroring to<font color="#E5E5E5"> side B so it's got let it</font>

814
00:29:43,390 --> 00:29:45,450
build up as copy it's got basically

815
00:29:44,440 --> 00:29:48,299
<font color="#CCCCCC">everything but if you</font>

816
00:29:45,450 --> 00:29:50,580
<font color="#CCCCCC">pause the application</font><font color="#E5E5E5"> switch the</font><font color="#CCCCCC"> RBD</font>

817
00:29:48,299 --> 00:29:54,090
master<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> other site</font><font color="#E5E5E5"> and the startup</font>

818
00:29:50,580 --> 00:29:56,210
<font color="#CCCCCC">for</font><font color="#E5E5E5"> application so it's a bit better but</font>

819
00:29:54,090 --> 00:29:59,189
you still<font color="#CCCCCC"> have this availability gap</font>

820
00:29:56,210 --> 00:30:01,350
<font color="#CCCCCC">what would</font><font color="#E5E5E5"> be even</font><font color="#CCCCCC"> better is if you</font>

821
00:29:59,190 --> 00:30:02,850
could start<font color="#E5E5E5"> up the application in the</font>

822
00:30:01,350 --> 00:30:04,529
second<font color="#E5E5E5"> site</font><font color="#CCCCCC"> while it's still</font><font color="#E5E5E5"> running in</font>

823
00:30:02,850 --> 00:30:07,908
the<font color="#E5E5E5"> first site and then you can sort of</font>

824
00:30:04,529 --> 00:30:11,510
seamlessly switch over<font color="#E5E5E5"> traffic from one</font>

825
00:30:07,909 --> 00:30:13,230
<font color="#CCCCCC">instance</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> application to the other</font>

826
00:30:11,510 --> 00:30:15,029
<font color="#CCCCCC">that would be great</font>

827
00:30:13,230 --> 00:30:16,529
but it<font color="#E5E5E5"> needs this</font><font color="#CCCCCC"> ability</font><font color="#E5E5E5"> to sort</font><font color="#CCCCCC"> of</font>

828
00:30:15,029 --> 00:30:19,289
temporarily be active active in<font color="#E5E5E5"> both</font>

829
00:30:16,529 --> 00:30:20,519
sites<font color="#E5E5E5"> so if you can do that then it's</font>

830
00:30:19,289 --> 00:30:22,529
awesome<font color="#E5E5E5"> right you have no loss of</font>

831
00:30:20,519 --> 00:30:25,019
availability<font color="#CCCCCC"> concurrent access</font><font color="#E5E5E5"> to the</font>

832
00:30:22,529 --> 00:30:26,370
same data<font color="#E5E5E5"> and if there's any performance</font>

833
00:30:25,019 --> 00:30:27,990
degradation it's only<font color="#E5E5E5"> during that sort</font>

834
00:30:26,370 --> 00:30:29,340
of interim period where<font color="#CCCCCC"> you're you're</font>

835
00:30:27,990 --> 00:30:31,700
<font color="#CCCCCC">replicating across</font><font color="#E5E5E5"> both sites</font>

836
00:30:29,340 --> 00:30:35,129
<font color="#CCCCCC">I mean in</font><font color="#E5E5E5"> fact that's</font><font color="#CCCCCC"> really just a</font>

837
00:30:31,700 --> 00:30:36,570
generalization<font color="#E5E5E5"> of the case that you can</font>

838
00:30:35,130 --> 00:30:38,010
actually<font color="#E5E5E5"> do this active active</font>

839
00:30:36,570 --> 00:30:40,639
replication in general right<font color="#E5E5E5"> that's sort</font>

840
00:30:38,010 --> 00:30:43,408
of the key<font color="#CCCCCC"> heart piece of</font><font color="#E5E5E5"> this process</font>

841
00:30:40,639 --> 00:30:44,908
and if<font color="#E5E5E5"> you can do that you can have</font>

842
00:30:43,409 --> 00:30:48,120
highly available<font color="#CCCCCC"> access to your data in</font>

843
00:30:44,909 --> 00:30:51,049
<font color="#E5E5E5">both sites and it's</font><font color="#CCCCCC"> awesome</font><font color="#E5E5E5"> but the it</font>

844
00:30:48,120 --> 00:30:53,668
<font color="#E5E5E5">brings up sort of key</font><font color="#CCCCCC"> questions right</font>

845
00:30:51,049 --> 00:30:55,350
can<font color="#E5E5E5"> you have an app can your application</font>

846
00:30:53,669 --> 00:30:55,649
tolerate concurrent access to the same

847
00:30:55,350 --> 00:30:57,629
data

848
00:30:55,649 --> 00:31:00,029
<font color="#E5E5E5">how are you replicating the data across</font>

849
00:30:57,630 --> 00:31:01,380
those two<font color="#E5E5E5"> copies are you doing it</font>

850
00:31:00,029 --> 00:31:03,179
synchronously<font color="#E5E5E5"> or asynchronously</font><font color="#CCCCCC"> and</font>

851
00:31:01,380 --> 00:31:05,669
<font color="#E5E5E5">what's the consistency model right if</font>

852
00:31:03,179 --> 00:31:07,529
you got those two instances<font color="#E5E5E5"> so both</font>

853
00:31:05,669 --> 00:31:10,769
trying to<font color="#E5E5E5"> modify the data what happens</font>

854
00:31:07,529 --> 00:31:12,210
if they collide<font color="#E5E5E5"> or can they collide so</font>

855
00:31:10,769 --> 00:31:13,500
these are sort<font color="#CCCCCC"> of key</font><font color="#E5E5E5"> questions key</font>

856
00:31:12,210 --> 00:31:16,049
<font color="#E5E5E5">questions you have to understand about</font>

857
00:31:13,500 --> 00:31:18,120
<font color="#CCCCCC">your application</font><font color="#E5E5E5"> behavior in order</font><font color="#CCCCCC"> to do</font>

858
00:31:16,049 --> 00:31:22,620
in<font color="#CCCCCC"> order to</font><font color="#E5E5E5"> do this sort of sort</font><font color="#CCCCCC"> of</font>

859
00:31:18,120 --> 00:31:24,268
thing<font color="#CCCCCC"> so coming back</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> setup s and the</font>

860
00:31:22,620 --> 00:31:26,219
sort of again the panacea would be and

861
00:31:24,269 --> 00:31:27,630
the thing<font color="#E5E5E5"> that everybody asks asks for</font>

862
00:31:26,220 --> 00:31:29,639
and once when you hear<font color="#CCCCCC"> about a new</font>

863
00:31:27,630 --> 00:31:31,380
distributed file system is can I just

864
00:31:29,639 --> 00:31:33,269
have<font color="#CCCCCC"> my file system</font><font color="#E5E5E5"> replicated in</font>

865
00:31:31,380 --> 00:31:34,830
multiple<font color="#CCCCCC"> data centers</font><font color="#E5E5E5"> and have it active</font>

866
00:31:33,269 --> 00:31:35,940
and<font color="#CCCCCC"> available in all data centers and</font>

867
00:31:34,830 --> 00:31:37,379
everybody can<font color="#CCCCCC"> access it whenever they</font>

868
00:31:35,940 --> 00:31:38,700
want<font color="#CCCCCC"> and they</font><font color="#E5E5E5"> get good performance and</font>

869
00:31:37,380 --> 00:31:39,659
<font color="#E5E5E5">everything is</font><font color="#CCCCCC"> consistent everything just</font>

870
00:31:38,700 --> 00:31:41,519
works right that's what that's what

871
00:31:39,659 --> 00:31:43,549
people<font color="#E5E5E5"> ask for and</font><font color="#CCCCCC"> you always sort of</font>

872
00:31:41,519 --> 00:31:45,690
<font color="#E5E5E5">shake your head and say yeah maybe and</font>

873
00:31:43,549 --> 00:31:48,299
the reality<font color="#E5E5E5"> is that we don't we don't</font>

874
00:31:45,690 --> 00:31:49,620
have<font color="#CCCCCC"> a general-purpose</font><font color="#E5E5E5"> bi-directional or</font>

875
00:31:48,299 --> 00:31:51,809
multi-directional<font color="#CCCCCC"> file replication</font>

876
00:31:49,620 --> 00:31:54,149
protocol<font color="#E5E5E5"> and the reason is it's really</font>

877
00:31:51,809 --> 00:31:56,668
<font color="#CCCCCC">hard to do that with POSIX</font><font color="#E5E5E5"> right the the</font>

878
00:31:54,149 --> 00:31:57,629
file system interface<font color="#CCCCCC"> in UNIX and Linux</font>

879
00:31:56,669 --> 00:31:59,310
<font color="#E5E5E5">is extreme</font>

880
00:31:57,630 --> 00:32:01,170
complicated and there are<font color="#CCCCCC"> a</font><font color="#E5E5E5"> million</font>

881
00:31:59,310 --> 00:32:03,690
opportunities<font color="#CCCCCC"> for conflicts</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font>

882
00:32:01,170 --> 00:32:05,880
that<font color="#CCCCCC"> when there's conflicts on file data</font>

883
00:32:03,690 --> 00:32:06,990
<font color="#E5E5E5">right if you're modifying the file in</font>

884
00:32:05,880 --> 00:32:08,220
multiple sites one of them<font color="#E5E5E5"> may be</font>

885
00:32:06,990 --> 00:32:09,900
truncates the file the other<font color="#E5E5E5"> one</font>

886
00:32:08,220 --> 00:32:11,550
<font color="#CCCCCC">overwrite the part of the file</font><font color="#E5E5E5"> and then</font>

887
00:32:09,900 --> 00:32:13,170
<font color="#E5E5E5">you try to like asynchronously mirror</font>

888
00:32:11,550 --> 00:32:15,810
those what do<font color="#E5E5E5"> you do and how do you</font>

889
00:32:13,170 --> 00:32:18,240
reconcile<font color="#E5E5E5"> those changes and there are</font>

890
00:32:15,810 --> 00:32:19,320
possibilities for conflict<font color="#E5E5E5"> on things</font>

891
00:32:18,240 --> 00:32:20,850
like rename right if you have two

892
00:32:19,320 --> 00:32:22,439
directories<font color="#E5E5E5"> and two different sites</font>

893
00:32:20,850 --> 00:32:25,139
rename the directory into the other one

894
00:32:22,440 --> 00:32:26,430
that's it's an impossible conflict<font color="#CCCCCC"> to</font>

895
00:32:25,140 --> 00:32:29,040
<font color="#CCCCCC">resolve get to pick one or</font><font color="#E5E5E5"> the other and</font>

896
00:32:26,430 --> 00:32:32,220
then<font color="#E5E5E5"> the other</font><font color="#CCCCCC"> end of the</font><font color="#E5E5E5"> end is</font>

897
00:32:29,040 --> 00:32:33,659
confused or whatever<font color="#E5E5E5"> so I'm it's in a in</font>

898
00:32:32,220 --> 00:32:35,640
a general<font color="#CCCCCC"> sense</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> a synchronous</font>

899
00:32:33,660 --> 00:32:37,560
replication with POSIX leads<font color="#E5E5E5"> to these</font>

900
00:32:35,640 --> 00:32:41,040
conflicts<font color="#E5E5E5"> and and there's no easy way</font><font color="#CCCCCC"> to</font>

901
00:32:37,560 --> 00:32:42,750
resolve<font color="#E5E5E5"> them but the reality is</font><font color="#CCCCCC"> that you</font>

902
00:32:41,040 --> 00:32:44,540
would<font color="#E5E5E5"> never actually do this</font><font color="#CCCCCC"> unless the</font>

903
00:32:42,750 --> 00:32:48,510
applications are specifically designed

904
00:32:44,540 --> 00:32:50,850
<font color="#CCCCCC">to cooperate in the storage right you</font>

905
00:32:48,510 --> 00:32:54,240
don't necessarily have arbitrary users

906
00:32:50,850 --> 00:32:55,080
doing<font color="#E5E5E5"> any operation and in</font><font color="#CCCCCC"> situations</font>

907
00:32:54,240 --> 00:32:57,150
where<font color="#E5E5E5"> you're trying to have them</font>

908
00:32:55,080 --> 00:32:58,199
<font color="#E5E5E5">consuming the shared storage and you</font>

909
00:32:57,150 --> 00:32:59,630
wouldn't assign your application that

910
00:32:58,200 --> 00:33:02,370
way<font color="#E5E5E5"> because it would immediately break</font>

911
00:32:59,630 --> 00:33:03,950
<font color="#E5E5E5">so if you have an</font><font color="#CCCCCC"> application that's</font>

912
00:33:02,370 --> 00:33:06,620
using<font color="#E5E5E5"> storage that's designed to</font>

913
00:33:03,950 --> 00:33:09,120
cooperate<font color="#E5E5E5"> in in the in the file layer</font>

914
00:33:06,620 --> 00:33:11,250
that so such<font color="#E5E5E5"> that they</font><font color="#CCCCCC"> carefully avoid</font>

915
00:33:09,120 --> 00:33:12,959
those types<font color="#CCCCCC"> of conflicts you know a good</font>

916
00:33:11,250 --> 00:33:14,640
example<font color="#CCCCCC"> of this is like the the mailed</font>

917
00:33:12,960 --> 00:33:16,260
or storage protocol that that mail

918
00:33:14,640 --> 00:33:18,030
servers use right they have a particular

919
00:33:16,260 --> 00:33:19,770
scheme where they write<font color="#E5E5E5"> new messages and</font>

920
00:33:18,030 --> 00:33:22,440
<font color="#E5E5E5">rename them</font><font color="#CCCCCC"> drug</font><font color="#E5E5E5"> between directories</font>

921
00:33:19,770 --> 00:33:26,250
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> able to tolerate conflicts when</font>

922
00:33:22,440 --> 00:33:29,910
they're<font color="#CCCCCC"> they're using an NFS server then</font>

923
00:33:26,250 --> 00:33:31,980
that's great<font color="#CCCCCC"> um</font><font color="#E5E5E5"> so you know the other</font>

924
00:33:29,910 --> 00:33:34,920
<font color="#E5E5E5">classic example would be that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font>

925
00:33:31,980 --> 00:33:37,920
content<font color="#CCCCCC"> source</font><font color="#E5E5E5"> you're just writing new</font>

926
00:33:34,920 --> 00:33:39,030
files<font color="#E5E5E5"> you're reading existing files</font>

927
00:33:37,920 --> 00:33:40,620
you're not renaming them you're not

928
00:33:39,030 --> 00:33:42,629
<font color="#E5E5E5">doing anything like that and as long as</font>

929
00:33:40,620 --> 00:33:44,189
<font color="#E5E5E5">you're doing sort of a simplified set</font>

930
00:33:42,630 --> 00:33:46,800
<font color="#E5E5E5">subset of the operations</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can do</font>

931
00:33:44,190 --> 00:33:48,690
in POSIX<font color="#E5E5E5"> then you're fine</font><font color="#CCCCCC"> right you can</font>

932
00:33:46,800 --> 00:33:49,740
use the shared file system<font color="#CCCCCC"> your</font>

933
00:33:48,690 --> 00:33:53,000
applications<font color="#CCCCCC"> aren't going to conflict</font>

934
00:33:49,740 --> 00:33:55,350
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can scale out your application ned's</font>

935
00:33:53,000 --> 00:33:57,420
<font color="#E5E5E5">but I think the thing to realize</font><font color="#CCCCCC"> is as</font>

936
00:33:55,350 --> 00:33:59,490
soon<font color="#E5E5E5"> as</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> start to</font><font color="#CCCCCC"> simplify the set of</font>

937
00:33:57,420 --> 00:34:01,440
POSIX operations<font color="#E5E5E5"> that you use it starts</font>

938
00:33:59,490 --> 00:34:03,180
to sound less<font color="#CCCCCC"> like file storage</font><font color="#E5E5E5"> and more</font>

939
00:34:01,440 --> 00:34:04,530
like object<font color="#E5E5E5"> storage and so it begs the</font>

940
00:34:03,180 --> 00:34:05,850
question<font color="#CCCCCC"> that</font><font color="#E5E5E5"> maybe that application</font>

941
00:34:04,530 --> 00:34:07,740
shouldn't really be<font color="#E5E5E5"> using the file layer</font>

942
00:34:05,850 --> 00:34:08,929
to<font color="#E5E5E5"> get this sort of magic</font>

943
00:34:07,740 --> 00:34:11,159
<font color="#CCCCCC">multi-directional</font>

944
00:34:08,929 --> 00:34:13,160
replication maybe you should just be

945
00:34:11,159 --> 00:34:15,690
your application<font color="#CCCCCC"> to use object directly</font>

946
00:34:13,159 --> 00:34:17,879
so let's talk<font color="#CCCCCC"> about object storage and a</font>

947
00:34:15,690 --> 00:34:21,300
little about<font color="#CCCCCC"> about why why that might</font>

948
00:34:17,880 --> 00:34:24,330
make sense<font color="#E5E5E5"> so why does object storage so</font>

949
00:34:21,300 --> 00:34:25,860
great<font color="#E5E5E5"> it's based on HTTP which means</font>

950
00:34:24,330 --> 00:34:27,870
<font color="#E5E5E5">that Interop it operates well with web</font>

951
00:34:25,860 --> 00:34:31,410
caches<font color="#E5E5E5"> and CD ends and so on lots of</font>

952
00:34:27,870 --> 00:34:34,230
existing libraries and object api's give

953
00:34:31,409 --> 00:34:35,639
you an atomic object replacement<font color="#E5E5E5"> which</font>

954
00:34:34,230 --> 00:34:38,280
means that if you<font color="#CCCCCC"> put you</font><font color="#E5E5E5"> know a 10</font>

955
00:34:35,639 --> 00:34:39,900
gigabyte image file to replace an old

956
00:34:38,280 --> 00:34:42,090
one<font color="#E5E5E5"> only</font><font color="#CCCCCC"> when you're</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you're</font>

957
00:34:39,900 --> 00:34:43,440
sort<font color="#E5E5E5"> of completely written the file or</font>

958
00:34:42,090 --> 00:34:44,850
<font color="#CCCCCC">the new</font><font color="#E5E5E5"> object does it atomically</font>

959
00:34:43,440 --> 00:34:47,760
replace the previous<font color="#CCCCCC"> version</font><font color="#E5E5E5"> so you</font>

960
00:34:44,850 --> 00:34:51,060
don't<font color="#E5E5E5"> have sort of existing education is</font>

961
00:34:47,760 --> 00:34:52,620
there and the fact that you can't sort

962
00:34:51,060 --> 00:34:54,659
<font color="#CCCCCC">of overwrite the middle of an existing</font>

963
00:34:52,620 --> 00:34:56,429
object means that the implementations

964
00:34:54,659 --> 00:34:58,740
are much simpler<font color="#CCCCCC"> the consistency model</font>

965
00:34:56,429 --> 00:34:59,790
is much<font color="#E5E5E5"> simpler you rather have the old</font>

966
00:34:58,740 --> 00:35:02,790
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the new one and they're</font>

967
00:34:59,790 --> 00:35:04,410
completely<font color="#E5E5E5"> different and so on the</font>

968
00:35:02,790 --> 00:35:06,000
<font color="#E5E5E5">namespace is flat so it's</font><font color="#CCCCCC"> very easy to</font>

969
00:35:04,410 --> 00:35:08,250
scale out when you're actually<font color="#CCCCCC"> designing</font>

970
00:35:06,000 --> 00:35:10,440
<font color="#E5E5E5">the backend architecture and there's no</font>

971
00:35:08,250 --> 00:35:12,240
rename and so it's<font color="#E5E5E5"> just it's a</font>

972
00:35:10,440 --> 00:35:14,280
simplified storage model<font color="#E5E5E5"> that lends</font>

973
00:35:12,240 --> 00:35:15,720
<font color="#CCCCCC">itself very easily to simplified</font>

974
00:35:14,280 --> 00:35:18,900
consistency models and replication

975
00:35:15,720 --> 00:35:20,370
models and implementations<font color="#E5E5E5"> and it's</font>

976
00:35:18,900 --> 00:35:24,240
sufficiently<font color="#CCCCCC"> powerful that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do a</font>

977
00:35:20,370 --> 00:35:26,040
lot<font color="#E5E5E5"> and I would</font><font color="#CCCCCC"> argue also that there's</font>

978
00:35:24,240 --> 00:35:27,990
going to be a lot of object storage<font color="#E5E5E5"> in</font>

979
00:35:26,040 --> 00:35:29,610
our future<font color="#E5E5E5"> so I'm not going to say</font><font color="#CCCCCC"> that</font>

980
00:35:27,990 --> 00:35:31,379
file is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> away in fact I'm</font>

981
00:35:29,610 --> 00:35:34,320
saying it definitely<font color="#E5E5E5"> won't go away</font><font color="#CCCCCC"> file</font>

982
00:35:31,380 --> 00:35:36,630
is critical we have a huge existing set

983
00:35:34,320 --> 00:35:38,280
<font color="#E5E5E5">of applications that consume file and</font>

984
00:35:36,630 --> 00:35:39,390
the file<font color="#E5E5E5"> interfaces is really useful</font>

985
00:35:38,280 --> 00:35:41,400
like there's a lot of stuff that<font color="#E5E5E5"> the</font>

986
00:35:39,390 --> 00:35:43,049
POSIX API gives<font color="#E5E5E5"> you that's genuinely</font>

987
00:35:41,400 --> 00:35:45,240
<font color="#CCCCCC">useable</font><font color="#E5E5E5"> to applications</font><font color="#CCCCCC"> it's just not</font>

988
00:35:43,050 --> 00:35:46,980
for<font color="#E5E5E5"> everything block isn't going</font><font color="#CCCCCC"> away</font>

989
00:35:45,240 --> 00:35:48,180
either<font color="#CCCCCC"> it's sort of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> backbone of all</font>

990
00:35:46,980 --> 00:35:50,780
the virtual machine<font color="#CCCCCC"> and container</font>

991
00:35:48,180 --> 00:35:53,669
infrastructures it's how things<font color="#CCCCCC"> boot up</font>

992
00:35:50,780 --> 00:35:54,870
but most<font color="#E5E5E5"> of the data that we store in</font>

993
00:35:53,670 --> 00:35:56,220
the<font color="#E5E5E5"> future you know the zettabytes</font>

994
00:35:54,870 --> 00:35:58,259
inside of bytes of data that<font color="#E5E5E5"> the world</font>

995
00:35:56,220 --> 00:36:00,720
is producing<font color="#E5E5E5"> isn't going to go in a</font>

996
00:35:58,260 --> 00:36:02,430
block<font color="#CCCCCC"> device or a file system that's</font>

997
00:36:00,720 --> 00:36:03,689
<font color="#E5E5E5">going to land in object storage now all</font>

998
00:36:02,430 --> 00:36:05,850
those cat pictures surveillance

999
00:36:03,690 --> 00:36:07,470
abilities<font color="#E5E5E5"> videos medical imaging video</font>

1000
00:36:05,850 --> 00:36:09,420
telemetry all that stuff it's<font color="#E5E5E5"> going to</font>

1001
00:36:07,470 --> 00:36:10,799
be<font color="#E5E5E5"> stored in objects in the next</font>

1002
00:36:09,420 --> 00:36:12,420
<font color="#E5E5E5">generation of applications</font><font color="#CCCCCC"> that people</font>

1003
00:36:10,800 --> 00:36:13,950
are<font color="#CCCCCC"> designing are going to be storing</font>

1004
00:36:12,420 --> 00:36:17,280
all<font color="#CCCCCC"> of their bulk content</font><font color="#E5E5E5"> and object</font>

1005
00:36:13,950 --> 00:36:18,330
stores as well<font color="#E5E5E5"> so it behooves us to pay</font>

1006
00:36:17,280 --> 00:36:20,220
attention<font color="#CCCCCC"> to</font><font color="#E5E5E5"> how we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve</font>

1007
00:36:18,330 --> 00:36:22,319
these more complicated<font color="#E5E5E5"> problems around</font>

1008
00:36:20,220 --> 00:36:25,140
multiple<font color="#E5E5E5"> sites and consistency</font>

1009
00:36:22,319 --> 00:36:25,589
in the<font color="#E5E5E5"> object storage world so the rate</font>

1010
00:36:25,140 --> 00:36:29,848
<font color="#E5E5E5">of Skateway</font>

1011
00:36:25,589 --> 00:36:32,429
<font color="#E5E5E5">witch's ss3</font><font color="#CCCCCC"> API</font><font color="#E5E5E5"> has a rich set of</font>

1012
00:36:29,849 --> 00:36:36,239
Federation and replication<font color="#CCCCCC"> multi cluster</font>

1013
00:36:32,429 --> 00:36:39,709
capabilities today<font color="#E5E5E5"> so the way that</font><font color="#CCCCCC"> rgw</font>

1014
00:36:36,239 --> 00:36:42,419
views the world<font color="#CCCCCC"> a</font><font color="#E5E5E5"> federation is through</font>

1015
00:36:39,709 --> 00:36:45,269
<font color="#E5E5E5">zones and zone groups and</font><font color="#CCCCCC"> named phases</font>

1016
00:36:42,419 --> 00:36:50,189
<font color="#E5E5E5">so a zone is a set of</font><font color="#CCCCCC"> Rado spools that</font>

1017
00:36:45,269 --> 00:36:51,359
<font color="#E5E5E5">are storing rate of data or s3 data so</font>

1018
00:36:50,189 --> 00:36:53,549
<font color="#CCCCCC">it's collection</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> Redis pools in one</font>

1019
00:36:51,359 --> 00:36:55,529
cluster and<font color="#E5E5E5"> a set of</font><font color="#CCCCCC"> rgw demons that</font><font color="#E5E5E5"> are</font>

1020
00:36:53,549 --> 00:36:56,729
<font color="#E5E5E5">serving up that data so usually probably</font>

1021
00:36:55,529 --> 00:36:58,489
<font color="#E5E5E5">what you think about</font><font color="#CCCCCC"> rate of Skateway</font>

1022
00:36:56,729 --> 00:37:00,779
deployment today is what just one zone

1023
00:36:58,489 --> 00:37:03,150
the zone<font color="#E5E5E5"> group is just a collection</font><font color="#CCCCCC"> of</font>

1024
00:37:00,779 --> 00:37:04,549
<font color="#E5E5E5">several zones that may be spread across</font>

1025
00:37:03,150 --> 00:37:06,809
<font color="#E5E5E5">the single cluster or multiple clusters</font>

1026
00:37:04,549 --> 00:37:09,059
that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> some sort of replication rate</font>

1027
00:37:06,809 --> 00:37:10,559
relationship and you<font color="#E5E5E5"> can do</font><font color="#CCCCCC"> active</font>

1028
00:37:09,059 --> 00:37:12,630
<font color="#E5E5E5">passive you can do active active so you</font>

1029
00:37:10,559 --> 00:37:14,969
<font color="#E5E5E5">can put in either zone and it will</font>

1030
00:37:12,630 --> 00:37:16,619
replicate in both directions and then a

1031
00:37:14,969 --> 00:37:18,299
namespace<font color="#CCCCCC"> it's a collection of zones</font>

1032
00:37:16,619 --> 00:37:21,599
that have<font color="#CCCCCC"> the same set of</font><font color="#E5E5E5"> buckets and</font>

1033
00:37:18,299 --> 00:37:23,699
users defined so you can think<font color="#CCCCCC"> about you</font>

1034
00:37:21,599 --> 00:37:25,199
know the Amazon s3<font color="#E5E5E5"> is having a single</font>

1035
00:37:23,699 --> 00:37:26,429
<font color="#E5E5E5">global namespace right yeah if you</font>

1036
00:37:25,199 --> 00:37:28,799
create an s3 user it exists everywhere

1037
00:37:26,429 --> 00:37:31,169
<font color="#E5E5E5">in the world</font><font color="#CCCCCC"> a bucket exists on one site</font>

1038
00:37:28,799 --> 00:37:32,519
<font color="#E5E5E5">but</font><font color="#CCCCCC"> if you try</font><font color="#E5E5E5"> to read a particular</font>

1039
00:37:31,169 --> 00:37:34,348
<font color="#E5E5E5">bucket it's always going to send you to</font>

1040
00:37:32,519 --> 00:37:35,788
the<font color="#E5E5E5"> right zone or the right region to</font>

1041
00:37:34,349 --> 00:37:37,650
read your<font color="#E5E5E5"> data so it's a global</font>

1042
00:37:35,789 --> 00:37:38,969
namespace<font color="#E5E5E5"> so</font><font color="#CCCCCC"> a three-dose gateway you</font>

1043
00:37:37,650 --> 00:37:40,979
have the same<font color="#E5E5E5"> concept but</font><font color="#CCCCCC"> you can create</font>

1044
00:37:38,969 --> 00:37:42,900
multiple namespaces if you want for

1045
00:37:40,979 --> 00:37:45,959
different<font color="#E5E5E5"> organizations or teams or</font>

1046
00:37:42,900 --> 00:37:47,759
whatever it is and<font color="#E5E5E5"> then the key thing</font>

1047
00:37:45,959 --> 00:37:49,618
<font color="#E5E5E5">with one of the points with greatest</font>

1048
00:37:47,759 --> 00:37:51,419
<font color="#E5E5E5">gateway</font><font color="#CCCCCC"> Federation is that the failover</font>

1049
00:37:49,619 --> 00:37:53,249
between sites and zones is driven

1050
00:37:51,419 --> 00:37:55,408
externally<font color="#E5E5E5"> at least currently so the</font>

1051
00:37:53,249 --> 00:37:56,698
idea is that it's<font color="#CCCCCC"> very easy</font><font color="#E5E5E5"> within a</font>

1052
00:37:55,409 --> 00:37:58,199
<font color="#CCCCCC">stuffed cluster to tell when something</font>

1053
00:37:56,699 --> 00:37:59,249
fails<font color="#E5E5E5"> and what to do about it</font>

1054
00:37:58,199 --> 00:38:01,469
because you're sort<font color="#E5E5E5"> of within a single</font>

1055
00:37:59,249 --> 00:38:03,658
<font color="#E5E5E5">data center if you</font><font color="#CCCCCC"> have multiple data</font>

1056
00:38:01,469 --> 00:38:05,159
centers<font color="#E5E5E5"> and a data center goes down it's</font>

1057
00:38:03,659 --> 00:38:07,890
harder to<font color="#E5E5E5"> sort of have this extra</font>

1058
00:38:05,159 --> 00:38:09,479
<font color="#CCCCCC">criminal view of who's down and who's</font><font color="#E5E5E5"> up</font>

1059
00:38:07,890 --> 00:38:11,400
<font color="#E5E5E5">and where you wanted with the master is</font>

1060
00:38:09,479 --> 00:38:12,598
so<font color="#E5E5E5"> reduce</font><font color="#CCCCCC"> gateway doesn't try to solve</font>

1061
00:38:11,400 --> 00:38:15,329
<font color="#E5E5E5">that problem itself it assumes that</font>

1062
00:38:12,599 --> 00:38:16,979
something above it whether it's a human

1063
00:38:15,329 --> 00:38:20,689
operator<font color="#CCCCCC"> or some other</font><font color="#E5E5E5"> automation is</font>

1064
00:38:16,979 --> 00:38:25,140
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to decide on</font><font color="#CCCCCC"> how to deal with</font><font color="#E5E5E5"> that</font>

1065
00:38:20,689 --> 00:38:26,459
<font color="#E5E5E5">so just to view this visually you might</font>

1066
00:38:25,140 --> 00:38:28,499
have<font color="#E5E5E5"> three different stuff clusters each</font>

1067
00:38:26,459 --> 00:38:30,118
of them<font color="#CCCCCC"> has two zones</font><font color="#E5E5E5"> some of them might</font>

1068
00:38:28,499 --> 00:38:33,058
be grouped into replication groups<font color="#E5E5E5"> or</font>

1069
00:38:30,119 --> 00:38:35,130
sorry zone groups so<font color="#E5E5E5"> XA and xB might be</font>

1070
00:38:33,059 --> 00:38:35,850
replicating all the same data<font color="#E5E5E5"> other</font>

1071
00:38:35,130 --> 00:38:37,320
zones might be

1072
00:38:35,850 --> 00:38:38,839
they're not replicating with anybody

1073
00:38:37,320 --> 00:38:41,940
else<font color="#E5E5E5"> they're just sort of independent</font>

1074
00:38:38,840 --> 00:38:44,400
collections of buckets and data other

1075
00:38:41,940 --> 00:38:46,170
ones might be replicating and so on and

1076
00:38:44,400 --> 00:38:48,120
I guess<font color="#CCCCCC"> that's sort</font><font color="#E5E5E5"> of the key</font>

1077
00:38:46,170 --> 00:38:50,040
limitation with<font color="#CCCCCC"> this architecture</font><font color="#E5E5E5"> today</font>

1078
00:38:48,120 --> 00:38:52,490
<font color="#E5E5E5">is that the initial set of use</font><font color="#CCCCCC"> cases</font>

1079
00:38:50,040 --> 00:38:54,870
that we<font color="#E5E5E5"> built this</font><font color="#CCCCCC"> floor were for</font>

1080
00:38:52,490 --> 00:38:56,370
<font color="#E5E5E5">operators who are operating clusters and</font>

1081
00:38:54,870 --> 00:38:58,950
dealing with<font color="#E5E5E5"> disaster recovery use cases</font>

1082
00:38:56,370 --> 00:39:01,440
<font color="#E5E5E5">so the granularity of replication in</font><font color="#CCCCCC"> rgw</font>

1083
00:38:58,950 --> 00:39:05,009
today is on a per zone basis<font color="#E5E5E5"> so you say</font>

1084
00:39:01,440 --> 00:39:06,330
<font color="#E5E5E5">this entire cluster of buckets is going</font>

1085
00:39:05,010 --> 00:39:08,310
to be replicated<font color="#CCCCCC"> to an entire</font><font color="#E5E5E5"> tire other</font>

1086
00:39:06,330 --> 00:39:10,290
cluster<font color="#CCCCCC"> buckets</font><font color="#E5E5E5"> and so if my whole data</font>

1087
00:39:08,310 --> 00:39:13,590
center<font color="#CCCCCC"> goes down then my object</font><font color="#E5E5E5"> storage</font>

1088
00:39:10,290 --> 00:39:15,480
service<font color="#E5E5E5"> is still</font><font color="#CCCCCC"> wet the way that it's</font>

1089
00:39:13,590 --> 00:39:17,130
internally implemented<font color="#CCCCCC"> them all the data</font>

1090
00:39:15,480 --> 00:39:18,420
structures and internal behaviors are

1091
00:39:17,130 --> 00:39:20,820
written such that<font color="#CCCCCC"> we can also do it on</font><font color="#E5E5E5"> a</font>

1092
00:39:18,420 --> 00:39:22,350
per bucket basis but all the<font color="#E5E5E5"> tooling and</font>

1093
00:39:20,820 --> 00:39:24,420
automation and and so on is still done

1094
00:39:22,350 --> 00:39:26,370
<font color="#CCCCCC">on a</font><font color="#E5E5E5"> persona basis so we have some</font>

1095
00:39:24,420 --> 00:39:28,080
additional<font color="#CCCCCC"> work to</font><font color="#E5E5E5"> do so that you can</font>

1096
00:39:26,370 --> 00:39:30,509
say I want<font color="#E5E5E5"> this single bucket to be</font>

1097
00:39:28,080 --> 00:39:33,150
replicated<font color="#CCCCCC"> to another site and</font><font color="#E5E5E5"> this</font>

1098
00:39:30,510 --> 00:39:35,190
other<font color="#CCCCCC"> one not to be so that's one</font><font color="#E5E5E5"> of the</font>

1099
00:39:33,150 --> 00:39:36,840
the initial<font color="#E5E5E5"> gaps but in the current</font>

1100
00:39:35,190 --> 00:39:38,790
state today<font color="#E5E5E5"> it sort of follows</font><font color="#CCCCCC"> the</font>

1101
00:39:36,840 --> 00:39:40,170
disaster recovery use cases<font color="#E5E5E5"> and it</font>

1102
00:39:38,790 --> 00:39:41,279
solves<font color="#E5E5E5"> the stretch cases where you want</font>

1103
00:39:40,170 --> 00:39:43,200
to have the same<font color="#E5E5E5"> data set across</font>

1104
00:39:41,280 --> 00:39:44,790
multiple data centers<font color="#CCCCCC"> you can access the</font>

1105
00:39:43,200 --> 00:39:46,890
data read and write it in both locations

1106
00:39:44,790 --> 00:39:50,400
and data will replicate in both

1107
00:39:46,890 --> 00:39:52,650
directions<font color="#CCCCCC"> and sort of going back to</font>

1108
00:39:50,400 --> 00:39:55,680
<font color="#CCCCCC">that</font><font color="#E5E5E5"> active active case I was talking</font>

1109
00:39:52,650 --> 00:39:58,170
about a<font color="#E5E5E5"> minute ago with</font><font color="#CCCCCC"> Seth FS rgw also</font>

1110
00:39:55,680 --> 00:40:00,720
has an NFS export capability<font color="#E5E5E5"> and that's</font>

1111
00:39:58,170 --> 00:40:02,430
<font color="#CCCCCC">an was recently built when</font><font color="#E5E5E5"> I'm with the</font>

1112
00:40:00,720 --> 00:40:04,439
purpose of just sort of<font color="#E5E5E5"> copying data</font>

1113
00:40:02,430 --> 00:40:05,609
into the object store<font color="#CCCCCC"> or copying</font><font color="#E5E5E5"> it out</font>

1114
00:40:04,440 --> 00:40:07,770
so you<font color="#E5E5E5"> can sort of transition</font>

1115
00:40:05,610 --> 00:40:10,050
applications on the object but if you

1116
00:40:07,770 --> 00:40:12,330
wanted<font color="#E5E5E5"> to you could export both</font><font color="#CCCCCC"> sites</font>

1117
00:40:10,050 --> 00:40:13,800
<font color="#E5E5E5">the NFS and read and write</font><font color="#CCCCCC"> to both of</font>

1118
00:40:12,330 --> 00:40:15,600
them<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you'd have this bi-directional</font>

1119
00:40:13,800 --> 00:40:16,890
replication<font color="#CCCCCC"> as long as you sort</font><font color="#E5E5E5"> of</font>

1120
00:40:15,600 --> 00:40:19,650
<font color="#E5E5E5">follow the rules because</font>

1121
00:40:16,890 --> 00:40:21,180
<font color="#E5E5E5">POSIX is a rich API object is a very</font>

1122
00:40:19,650 --> 00:40:22,440
<font color="#E5E5E5">simple API and so you can't do</font>

1123
00:40:21,180 --> 00:40:24,660
<font color="#CCCCCC">everything right you</font><font color="#E5E5E5"> can't run an</font>

1124
00:40:22,440 --> 00:40:26,700
arbitrary application<font color="#CCCCCC"> on top of the NFS</font>

1125
00:40:24,660 --> 00:40:29,850
export you have to only write<font color="#E5E5E5"> complete</font>

1126
00:40:26,700 --> 00:40:31,919
files and read read read files do<font color="#E5E5E5"> no</font>

1127
00:40:29,850 --> 00:40:34,670
renames and things like<font color="#E5E5E5"> that but you</font>

1128
00:40:31,920 --> 00:40:36,990
could<font color="#E5E5E5"> do it but you'd be better off</font><font color="#CCCCCC"> just</font>

1129
00:40:34,670 --> 00:40:38,100
making your<font color="#CCCCCC"> application directly consume</font>

1130
00:40:36,990 --> 00:40:40,410
the object storage<font color="#E5E5E5"> because that's really</font>

1131
00:40:38,100 --> 00:40:44,040
<font color="#E5E5E5">what it's doing right it's using the</font>

1132
00:40:40,410 --> 00:40:46,529
storage<font color="#E5E5E5"> as a bunch of assets that</font>

1133
00:40:44,040 --> 00:40:48,210
that are immutable<font color="#CCCCCC"> use an</font><font color="#E5E5E5"> API that</font>

1134
00:40:46,530 --> 00:40:51,600
<font color="#E5E5E5">matches that and you'll</font><font color="#CCCCCC"> be you'll be</font>

1135
00:40:48,210 --> 00:40:53,790
happier<font color="#CCCCCC"> the way that the rate of</font>

1136
00:40:51,600 --> 00:40:55,980
Skateway<font color="#E5E5E5"> Federation is designed and is</font>

1137
00:40:53,790 --> 00:40:58,320
pluggable so sort of the the<font color="#CCCCCC"> usual</font>

1138
00:40:55,980 --> 00:41:00,300
behavior<font color="#CCCCCC"> is that a zone is replicating</font>

1139
00:40:58,320 --> 00:41:03,390
data<font color="#E5E5E5"> from another zone or other zones in</font>

1140
00:41:00,300 --> 00:41:04,140
its own group<font color="#CCCCCC"> but you can plug</font><font color="#E5E5E5"> in</font>

1141
00:41:03,390 --> 00:41:05,790
different<font color="#E5E5E5"> behavior</font>

1142
00:41:04,140 --> 00:41:07,290
so back in<font color="#CCCCCC"> luminous we added one for</font>

1143
00:41:05,790 --> 00:41:08,759
<font color="#CCCCCC">elasticsearch so you could have a zone</font>

1144
00:41:07,290 --> 00:41:10,500
<font color="#CCCCCC">that instead of copying all the</font><font color="#E5E5E5"> data and</font>

1145
00:41:08,760 --> 00:41:12,540
metadata<font color="#E5E5E5"> would just take all the data</font>

1146
00:41:10,500 --> 00:41:14,700
all the metadata<font color="#E5E5E5"> and it would dump it</font>

1147
00:41:12,540 --> 00:41:17,150
all an elastic search and then present a

1148
00:41:14,700 --> 00:41:20,009
query<font color="#CCCCCC"> API so you could do searches over</font>

1149
00:41:17,150 --> 00:41:23,130
<font color="#E5E5E5">object names and sizes and owners and</font><font color="#CCCCCC"> so</font>

1150
00:41:20,010 --> 00:41:24,810
on you<font color="#E5E5E5"> can do you can define indexes</font>

1151
00:41:23,130 --> 00:41:27,570
over custom metadata that<font color="#E5E5E5"> you put on the</font>

1152
00:41:24,810 --> 00:41:30,000
<font color="#CCCCCC">object so you</font><font color="#E5E5E5"> can do searches so that's</font>

1153
00:41:27,570 --> 00:41:31,560
existed for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> while in mimic to the</font>

1154
00:41:30,000 --> 00:41:35,630
previous stuff release we added a cloud

1155
00:41:31,560 --> 00:41:39,450
sync plug-in which allowed you to have a

1156
00:41:35,630 --> 00:41:40,890
zone that<font color="#E5E5E5"> would essentially take</font><font color="#CCCCCC"> data</font>

1157
00:41:39,450 --> 00:41:44,189
from<font color="#CCCCCC"> the other zones and</font><font color="#E5E5E5"> it would push</font>

1158
00:41:40,890 --> 00:41:46,049
<font color="#CCCCCC">it all into s3</font><font color="#E5E5E5"> either by taking all the</font>

1159
00:41:44,190 --> 00:41:47,910
buckets<font color="#E5E5E5"> and putting them all into</font><font color="#CCCCCC"> s3 or</font>

1160
00:41:46,050 --> 00:41:50,010
<font color="#E5E5E5">mapping them all to a single s3 bucket</font>

1161
00:41:47,910 --> 00:41:51,270
<font color="#E5E5E5">or maybe a subset of buckets</font><font color="#CCCCCC"> and it</font>

1162
00:41:50,010 --> 00:41:53,550
would do<font color="#E5E5E5"> some best effort to try</font><font color="#CCCCCC"> to</font>

1163
00:41:51,270 --> 00:41:55,410
rewrite the<font color="#CCCCCC"> Akal so that it would</font><font color="#E5E5E5"> be it</font>

1164
00:41:53,550 --> 00:41:58,620
was<font color="#E5E5E5"> still</font><font color="#CCCCCC"> usable in the</font><font color="#E5E5E5"> s3 environment</font>

1165
00:41:55,410 --> 00:42:00,779
<font color="#CCCCCC">so</font><font color="#E5E5E5"> it's just replicating out s3 in cloud</font>

1166
00:41:58,620 --> 00:42:03,600
sync and<font color="#E5E5E5"> in Nautilus we're adding two</font>

1167
00:42:00,780 --> 00:42:05,970
new ones<font color="#CCCCCC"> one is an archive zone where</font>

1168
00:42:03,600 --> 00:42:07,470
you<font color="#CCCCCC"> basically define a zone that enables</font>

1169
00:42:05,970 --> 00:42:09,930
bucket versioning so we preserve<font color="#E5E5E5"> all</font>

1170
00:42:07,470 --> 00:42:11,279
copies<font color="#E5E5E5"> of an object past copies and I'll</font>

1171
00:42:09,930 --> 00:42:12,750
just<font color="#E5E5E5"> copy everything and</font><font color="#CCCCCC"> it'll create</font><font color="#E5E5E5"> an</font>

1172
00:42:11,280 --> 00:42:15,780
archive<font color="#E5E5E5"> of sort of all the data that</font>

1173
00:42:12,750 --> 00:42:18,510
<font color="#E5E5E5">you've ever stored</font><font color="#CCCCCC"> overall time for</font>

1174
00:42:15,780 --> 00:42:19,860
archive backup purposes<font color="#CCCCCC"> and then the</font>

1175
00:42:18,510 --> 00:42:25,410
other new one is kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> exciting it's a</font>

1176
00:42:19,860 --> 00:42:26,580
<font color="#E5E5E5">pub sub zone so it it essentially builds</font>

1177
00:42:25,410 --> 00:42:28,500
in the<font color="#E5E5E5"> necks of all the updates that</font>

1178
00:42:26,580 --> 00:42:30,540
have happened<font color="#E5E5E5"> and then presents a set of</font>

1179
00:42:28,500 --> 00:42:33,570
<font color="#E5E5E5">api's so that you can</font><font color="#CCCCCC"> subscribe to</font>

1180
00:42:30,540 --> 00:42:36,950
<font color="#CCCCCC">events so they did a great</font><font color="#E5E5E5"> demo of this</font>

1181
00:42:33,570 --> 00:42:39,420
<font color="#E5E5E5">in a talk for Q Khan in Seattle where</font>

1182
00:42:36,950 --> 00:42:41,850
when you do a put into an object<font color="#E5E5E5"> it</font>

1183
00:42:39,420 --> 00:42:43,890
generates an event that then gets fed<font color="#E5E5E5"> to</font>

1184
00:42:41,850 --> 00:42:45,810
<font color="#CCCCCC">K native which is a serverless framework</font>

1185
00:42:43,890 --> 00:42:48,000
for kubernetes and<font color="#E5E5E5"> triggers a lambda</font>

1186
00:42:45,810 --> 00:42:49,830
<font color="#E5E5E5">function to go do</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> that's how</font>

1187
00:42:48,000 --> 00:42:51,540
you can do you can<font color="#E5E5E5"> trigger events</font>

1188
00:42:49,830 --> 00:42:52,090
through<font color="#CCCCCC"> the object store using the pub</font>

1189
00:42:51,540 --> 00:42:54,020
stuff

1190
00:42:52,090 --> 00:42:56,480
there's also work to feed<font color="#CCCCCC"> this into</font>

1191
00:42:54,020 --> 00:42:58,490
Kafka and<font color="#E5E5E5"> and</font><font color="#CCCCCC"> cue</font><font color="#E5E5E5"> also so</font><font color="#CCCCCC"> there a couple</font>

1192
00:42:56,480 --> 00:43:01,790
<font color="#E5E5E5">different</font><font color="#CCCCCC"> models you</font><font color="#E5E5E5"> can use it but</font>

1193
00:42:58,490 --> 00:43:03,680
<font color="#CCCCCC">that's also</font><font color="#E5E5E5"> new and Nautilus and the way</font>

1194
00:43:01,790 --> 00:43:06,200
we the way we're<font color="#CCCCCC"> thinking</font><font color="#E5E5E5"> about this is</font>

1195
00:43:03,680 --> 00:43:07,850
not<font color="#E5E5E5"> just</font><font color="#CCCCCC"> in terms of stuff clusters that</font>

1196
00:43:06,200 --> 00:43:11,029
<font color="#CCCCCC">are backed by bare metal sitting in your</font>

1197
00:43:07,850 --> 00:43:14,720
<font color="#E5E5E5">own data centers</font><font color="#CCCCCC"> so for example with the</font>

1198
00:43:11,030 --> 00:43:16,700
cloud sync module the idea is that

1199
00:43:14,720 --> 00:43:18,589
<font color="#E5E5E5">you're gonna have data stored in lots of</font>

1200
00:43:16,700 --> 00:43:21,470
<font color="#CCCCCC">different sites</font><font color="#E5E5E5"> locally and also in</font>

1201
00:43:18,590 --> 00:43:23,030
<font color="#E5E5E5">public clouds</font><font color="#CCCCCC"> and when you're using</font>

1202
00:43:21,470 --> 00:43:24,919
public<font color="#E5E5E5"> cloud storage</font><font color="#CCCCCC"> you would</font>

1203
00:43:23,030 --> 00:43:27,860
presumably you would have a sort of a

1204
00:43:24,920 --> 00:43:30,020
<font color="#E5E5E5">thin</font><font color="#CCCCCC"> set footprint</font><font color="#E5E5E5"> in that cloud and ec2</font>

1205
00:43:27,860 --> 00:43:32,030
or<font color="#E5E5E5"> whatever that's just managing sort of</font>

1206
00:43:30,020 --> 00:43:33,530
a gateway role and storing some<font color="#E5E5E5"> internal</font>

1207
00:43:32,030 --> 00:43:35,960
state<font color="#E5E5E5"> about</font><font color="#CCCCCC"> what is replicating locally</font>

1208
00:43:33,530 --> 00:43:39,470
and so on<font color="#E5E5E5"> what his role</font><font color="#CCCCCC"> is and the</font>

1209
00:43:35,960 --> 00:43:40,610
<font color="#CCCCCC">Federated</font><font color="#E5E5E5"> mesh because the the reasoning</font>

1210
00:43:39,470 --> 00:43:43,549
<font color="#E5E5E5">here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that you're never going to</font>

1211
00:43:40,610 --> 00:43:45,740
compete with actual<font color="#E5E5E5"> os3 by building an</font>

1212
00:43:43,550 --> 00:43:47,840
s3 service<font color="#E5E5E5"> on top of like ec2 instances</font>

1213
00:43:45,740 --> 00:43:49,250
right<font color="#E5E5E5"> if you can it's because Amazon</font>

1214
00:43:47,840 --> 00:43:51,740
totally screwed up<font color="#E5E5E5"> their pricing right</font>

1215
00:43:49,250 --> 00:43:54,860
there<font color="#E5E5E5"> they're optimized for Pacific for</font>

1216
00:43:51,740 --> 00:43:57,399
efficiency<font color="#E5E5E5"> and so what you really</font><font color="#CCCCCC"> want</font>

1217
00:43:54,860 --> 00:43:59,780
to do is if you do have<font color="#CCCCCC"> a footprint in a</font>

1218
00:43:57,400 --> 00:44:01,220
public<font color="#E5E5E5"> cloud service then you want to</font>

1219
00:43:59,780 --> 00:44:03,260
leverage their<font color="#CCCCCC"> storage</font><font color="#E5E5E5"> services that</font>

1220
00:44:01,220 --> 00:44:05,540
they're operating<font color="#E5E5E5"> efficiently</font><font color="#CCCCCC"> and</font>

1221
00:44:03,260 --> 00:44:07,520
optimizing for price<font color="#E5E5E5"> and so on and you</font>

1222
00:44:05,540 --> 00:44:10,430
<font color="#E5E5E5">just really need that that gateway in</font>

1223
00:44:07,520 --> 00:44:11,810
order to<font color="#CCCCCC"> access</font><font color="#E5E5E5"> so when we view</font><font color="#CCCCCC"> the rate</font>

1224
00:44:10,430 --> 00:44:14,839
of<font color="#E5E5E5"> Gateway Federation you're gonna have</font>

1225
00:44:11,810 --> 00:44:15,980
thick sites that are<font color="#E5E5E5"> on-premise that are</font>

1226
00:44:14,840 --> 00:44:17,120
actually storing lots of data<font color="#E5E5E5"> and then</font>

1227
00:44:15,980 --> 00:44:19,040
you're gonna have thin sites that are

1228
00:44:17,120 --> 00:44:24,980
just gateways to<font color="#E5E5E5"> an external</font><font color="#CCCCCC"> storage</font>

1229
00:44:19,040 --> 00:44:26,870
service that you're<font color="#E5E5E5"> making yourself</font><font color="#CCCCCC"> rgw</font>

1230
00:44:24,980 --> 00:44:29,840
can also address<font color="#E5E5E5"> most of the tearing use</font>

1231
00:44:26,870 --> 00:44:32,330
cases<font color="#E5E5E5"> so today and you can have multiple</font>

1232
00:44:29,840 --> 00:44:33,550
<font color="#CCCCCC">ratos pools</font><font color="#E5E5E5"> within a set cluster that</font>

1233
00:44:32,330 --> 00:44:35,960
<font color="#E5E5E5">are mapped to different</font><font color="#CCCCCC"> storage types</font>

1234
00:44:33,550 --> 00:44:38,210
<font color="#E5E5E5">and when you put an object</font><font color="#CCCCCC"> you can</font>

1235
00:44:35,960 --> 00:44:40,010
<font color="#E5E5E5">choose which tier that object is</font><font color="#CCCCCC"> going</font>

1236
00:44:38,210 --> 00:44:42,080
<font color="#E5E5E5">to go to or</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> set a</font><font color="#CCCCCC"> policy on the</font>

1237
00:44:40,010 --> 00:44:43,250
bucket so<font color="#CCCCCC"> that new objects</font><font color="#E5E5E5"> that are</font>

1238
00:44:42,080 --> 00:44:47,870
written<font color="#E5E5E5"> on the bucket will</font><font color="#CCCCCC"> go to a</font>

1239
00:44:43,250 --> 00:44:49,220
<font color="#E5E5E5">particular tier and currently you get</font>

1240
00:44:47,870 --> 00:44:51,230
there's a limited<font color="#E5E5E5"> ability</font><font color="#CCCCCC"> to set some</font>

1241
00:44:49,220 --> 00:44:53,899
policy to automatically expire objects

1242
00:44:51,230 --> 00:44:56,360
<font color="#CCCCCC">I mean Nautilus</font><font color="#E5E5E5"> there's a new feature</font><font color="#CCCCCC"> in</font>

1243
00:44:53,900 --> 00:45:00,130
<font color="#E5E5E5">our GW that implements the Amazon s3</font><font color="#CCCCCC"> I</font>

1244
00:44:56,360 --> 00:45:00,130
believe it's called<font color="#E5E5E5"> the lifecycle</font>

1245
00:45:00,559 --> 00:45:05,609
bucket lifecycle<font color="#E5E5E5"> object lifecycle</font><font color="#CCCCCC"> I</font>

1246
00:45:03,150 --> 00:45:07,349
always mess up<font color="#CCCCCC"> the term</font><font color="#E5E5E5"> um but it's</font>

1247
00:45:05,609 --> 00:45:09,299
basically establishing a policy<font color="#E5E5E5"> on the</font>

1248
00:45:07,349 --> 00:45:11,040
bucket that<font color="#E5E5E5"> automatically adjusts the</font>

1249
00:45:09,299 --> 00:45:12,960
tearing so maybe your objects land<font color="#E5E5E5"> in</font>

1250
00:45:11,040 --> 00:45:14,250
one<font color="#E5E5E5"> tier initially over time they move</font>

1251
00:45:12,960 --> 00:45:16,940
to another<font color="#E5E5E5"> tier and then eventually they</font>

1252
00:45:14,250 --> 00:45:19,260
<font color="#E5E5E5">are expired so that's new and Nautilus</font>

1253
00:45:16,940 --> 00:45:21,900
<font color="#CCCCCC">and it will do</font><font color="#E5E5E5"> the tearing between</font>

1254
00:45:19,260 --> 00:45:25,500
different<font color="#CCCCCC"> Rados pools in the future we'd</font>

1255
00:45:21,900 --> 00:45:27,030
like to extend<font color="#E5E5E5"> this right so so that</font>

1256
00:45:25,500 --> 00:45:28,470
when you're tearing you can tear not

1257
00:45:27,030 --> 00:45:29,549
just within<font color="#E5E5E5"> the same cluster</font><font color="#CCCCCC"> to</font>

1258
00:45:28,470 --> 00:45:31,680
different<font color="#E5E5E5"> rate of</font><font color="#CCCCCC"> spools but you can</font>

1259
00:45:29,549 --> 00:45:34,170
tear<font color="#E5E5E5"> to other stuff clusters and to</font>

1260
00:45:31,680 --> 00:45:36,149
external<font color="#CCCCCC"> objects doors so that</font><font color="#E5E5E5"> you could</font>

1261
00:45:34,170 --> 00:45:37,380
have something<font color="#CCCCCC"> initially land in your</font>

1262
00:45:36,150 --> 00:45:39,359
<font color="#E5E5E5">local cluster and then</font><font color="#CCCCCC"> you get pushed</font>

1263
00:45:37,380 --> 00:45:42,089
<font color="#E5E5E5">out to</font><font color="#CCCCCC"> s3 maybe it pushes</font><font color="#E5E5E5"> out the</font>

1264
00:45:39,359 --> 00:45:43,520
glacier<font color="#E5E5E5"> something like that</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the</font>

1265
00:45:42,089 --> 00:45:46,740
plan

1266
00:45:43,520 --> 00:45:48,599
<font color="#CCCCCC">it's lots to do</font><font color="#E5E5E5"> so trying to sort of</font>

1267
00:45:46,740 --> 00:45:52,470
take<font color="#E5E5E5"> all this information I've thrown at</font>

1268
00:45:48,599 --> 00:45:53,849
you around<font color="#CCCCCC"> Raiders</font><font color="#E5E5E5"> gateway</font><font color="#CCCCCC"> um as far as</font>

1269
00:45:52,470 --> 00:45:56,069
<font color="#E5E5E5">what we have</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> and what we where</font>

1270
00:45:53,849 --> 00:45:57,660
we're going<font color="#CCCCCC"> so today we you rate</font><font color="#E5E5E5"> us</font>

1271
00:45:56,069 --> 00:46:00,089
<font color="#E5E5E5">gateway as a gateway</font><font color="#CCCCCC"> to a single</font>

1272
00:45:57,660 --> 00:46:01,980
greatest cluster so as the name implies

1273
00:46:00,089 --> 00:46:03,750
and we sort of have a bunch of<font color="#CCCCCC"> geo</font>

1274
00:46:01,980 --> 00:46:05,640
replication features tacked on but it's

1275
00:46:03,750 --> 00:46:07,440
mostly a gateway<font color="#E5E5E5"> to a cluster</font><font color="#CCCCCC"> that's the</font>

1276
00:46:05,640 --> 00:46:09,660
way we<font color="#CCCCCC"> think about</font><font color="#E5E5E5"> it I'm in the future</font>

1277
00:46:07,440 --> 00:46:11,010
what we'd like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do is shift to a mode</font>

1278
00:46:09,660 --> 00:46:12,839
of<font color="#E5E5E5"> thinking where the rate of</font><font color="#CCCCCC"> gateway is</font>

1279
00:46:11,010 --> 00:46:14,210
really a gateway<font color="#E5E5E5"> to sort of a whole mess</font>

1280
00:46:12,839 --> 00:46:16,380
a whole collection<font color="#E5E5E5"> of</font><font color="#CCCCCC"> different sites</font>

1281
00:46:14,210 --> 00:46:17,940
<font color="#CCCCCC">and so when you're when you're</font><font color="#E5E5E5"> talking</font>

1282
00:46:16,380 --> 00:46:19,230
to<font color="#E5E5E5"> the Gateway</font><font color="#CCCCCC"> maybe the data that</font>

1283
00:46:17,940 --> 00:46:20,640
<font color="#CCCCCC">you're interacting with this local maybe</font>

1284
00:46:19,230 --> 00:46:22,470
it's remote<font color="#E5E5E5"> maybe we were practicing</font>

1285
00:46:20,640 --> 00:46:24,390
your requests maybe we're<font color="#CCCCCC"> placing it</font>

1286
00:46:22,470 --> 00:46:27,569
somewhere<font color="#E5E5E5"> else but really it's a</font>

1287
00:46:24,390 --> 00:46:30,868
federated topology<font color="#CCCCCC"> mesh of different</font>

1288
00:46:27,569 --> 00:46:33,509
<font color="#CCCCCC">sites today when</font><font color="#E5E5E5"> you talk to Rios</font>

1289
00:46:30,869 --> 00:46:35,220
<font color="#CCCCCC">gateway</font><font color="#E5E5E5"> if it's not</font><font color="#CCCCCC"> sort of locally</font>

1290
00:46:33,510 --> 00:46:36,569
it'll issue a redirect<font color="#CCCCCC"> that bounces you</font>

1291
00:46:35,220 --> 00:46:38,490
to the right<font color="#E5E5E5"> gateway for the other site</font>

1292
00:46:36,569 --> 00:46:41,700
where your data is<font color="#E5E5E5"> located</font><font color="#CCCCCC"> I'm similar</font>

1293
00:46:38,490 --> 00:46:42,479
to what you<font color="#E5E5E5"> get with them at UW</font><font color="#CCCCCC"> ss3 and</font>

1294
00:46:41,700 --> 00:46:44,609
there's some tricks you<font color="#E5E5E5"> can do with</font>

1295
00:46:42,480 --> 00:46:46,470
dynamic DNS to sort of get you the right

1296
00:46:44,609 --> 00:46:49,980
DNS to the right site I've met<font color="#E5E5E5"> people</font>

1297
00:46:46,470 --> 00:46:51,450
<font color="#E5E5E5">have done and in</font><font color="#CCCCCC"> the future we might do</font>

1298
00:46:49,980 --> 00:46:53,010
<font color="#E5E5E5">that redirect or we might actually do a</font>

1299
00:46:51,450 --> 00:46:55,558
proxy<font color="#E5E5E5"> right so it might be</font><font color="#CCCCCC"> that you have</font>

1300
00:46:53,010 --> 00:46:56,640
a site where you're always your

1301
00:46:55,559 --> 00:46:58,349
application is always talking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> one</font>

1302
00:46:56,640 --> 00:46:59,730
<font color="#CCCCCC">gateway</font><font color="#E5E5E5"> and it's just actually proxying</font>

1303
00:46:58,349 --> 00:47:01,589
you to remote sites where your data is

1304
00:46:59,730 --> 00:47:02,790
so you don't<font color="#CCCCCC"> really</font><font color="#E5E5E5"> have to think</font><font color="#CCCCCC"> of</font>

1305
00:47:01,589 --> 00:47:04,349
where your data is placed and where<font color="#E5E5E5"> it's</font>

1306
00:47:02,790 --> 00:47:05,670
been migrated to and we're sort<font color="#E5E5E5"> of</font>

1307
00:47:04,349 --> 00:47:08,069
seamlessly moving it around<font color="#E5E5E5"> behind the</font>

1308
00:47:05,670 --> 00:47:10,240
scenes or applying some policy so<font color="#E5E5E5"> you</font>

1309
00:47:08,069 --> 00:47:13,089
can get your<font color="#CCCCCC"> data</font>

1310
00:47:10,240 --> 00:47:14,709
and finally today<font color="#CCCCCC"> rgw replicates</font><font color="#E5E5E5"> at zone</font>

1311
00:47:13,089 --> 00:47:17,078
granularity<font color="#CCCCCC"> to sort of address</font><font color="#E5E5E5"> those</font>

1312
00:47:14,710 --> 00:47:18,160
disaster recovery use<font color="#CCCCCC"> cases</font><font color="#E5E5E5"> but in the</font>

1313
00:47:17,079 --> 00:47:19,839
<font color="#E5E5E5">future we want to make that more</font>

1314
00:47:18,160 --> 00:47:22,029
flexible so that<font color="#E5E5E5"> you can on a per bucket</font>

1315
00:47:19,839 --> 00:47:23,859
basis<font color="#E5E5E5"> decide where a bucket is placed</font>

1316
00:47:22,029 --> 00:47:24,880
<font color="#CCCCCC">whether its replicated</font><font color="#E5E5E5"> and across</font>

1317
00:47:23,859 --> 00:47:26,710
<font color="#E5E5E5">multiple sites or whether you're</font>

1318
00:47:24,880 --> 00:47:28,900
migrating<font color="#CCCCCC"> it</font><font color="#E5E5E5"> between sites so that</font><font color="#CCCCCC"> you</font>

1319
00:47:26,710 --> 00:47:31,029
can take you<font color="#E5E5E5"> know one application using</font>

1320
00:47:28,900 --> 00:47:33,579
a bucket<font color="#CCCCCC"> and move it to</font><font color="#E5E5E5"> somewhere else</font>

1321
00:47:31,029 --> 00:47:38,619
<font color="#CCCCCC">and move the</font><font color="#E5E5E5"> data with it without</font><font color="#CCCCCC"> having</font>

1322
00:47:33,579 --> 00:47:40,509
<font color="#CCCCCC">to</font><font color="#E5E5E5"> move</font><font color="#CCCCCC"> the whole</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> whole site</font><font color="#E5E5E5"> okay so</font>

1323
00:47:38,619 --> 00:47:42,839
<font color="#E5E5E5">it's sort of the last set of scenarios I</font>

1324
00:47:40,509 --> 00:47:48,609
<font color="#E5E5E5">want to think about is stuff at the edge</font>

1325
00:47:42,839 --> 00:47:49,990
I'm almost out of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> actually just</font>

1326
00:47:48,609 --> 00:47:51,700
<font color="#E5E5E5">get the</font><font color="#CCCCCC"> edge sites cause something</font>

1327
00:47:49,990 --> 00:47:53,859
interesting<font color="#E5E5E5"> so why do I keep</font><font color="#CCCCCC"> copping</font>

1328
00:47:51,700 --> 00:47:55,598
about kubernetes<font color="#CCCCCC"> I think the key thing</font>

1329
00:47:53,859 --> 00:47:57,308
<font color="#CCCCCC">to</font><font color="#E5E5E5"> remember is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> regardless of what</font>

1330
00:47:55,599 --> 00:47:59,890
<font color="#E5E5E5">the storage can do you need to move the</font>

1331
00:47:57,309 --> 00:48:02,619
applications with it<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so um it's</font>

1332
00:47:59,890 --> 00:48:04,118
<font color="#E5E5E5">really giving you you your application</font>

1333
00:48:02,619 --> 00:48:05,410
<font color="#E5E5E5">mobility as a partnership between moving</font>

1334
00:48:04,119 --> 00:48:07,150
<font color="#E5E5E5">the application that's consuming the</font>

1335
00:48:05,410 --> 00:48:09,730
storage and<font color="#CCCCCC"> the store is moving the</font>

1336
00:48:07,150 --> 00:48:11,740
storage which<font color="#E5E5E5"> is why we're so interested</font>

1337
00:48:09,730 --> 00:48:13,960
in kubernetes<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> rook project which</font>

1338
00:48:11,740 --> 00:48:16,660
runs<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Ceph cluster in kubernetes</font><font color="#E5E5E5"> in a</font>

1339
00:48:13,960 --> 00:48:18,700
<font color="#E5E5E5">sane way and that sort of falls into the</font>

1340
00:48:16,660 --> 00:48:20,140
persistent volume category<font color="#E5E5E5"> which is file</font>

1341
00:48:18,700 --> 00:48:22,598
and block storage<font color="#E5E5E5"> that are attached to</font>

1342
00:48:20,140 --> 00:48:25,420
your containers<font color="#E5E5E5"> and increasingly object</font>

1343
00:48:22,599 --> 00:48:26,829
storage where we're<font color="#CCCCCC"> building the tools</font>

1344
00:48:25,420 --> 00:48:29,170
to sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> automatically</font><font color="#CCCCCC"> provisioned</font>

1345
00:48:26,829 --> 00:48:30,549
storage in kubernetes<font color="#CCCCCC"> and buckets to</font>

1346
00:48:29,170 --> 00:48:33,160
attach to applications in the same way

1347
00:48:30,549 --> 00:48:34,538
you do do blocking object storage<font color="#CCCCCC"> so</font>

1348
00:48:33,160 --> 00:48:36,339
lots of lots of stuff<font color="#E5E5E5"> going</font><font color="#CCCCCC"> on there</font><font color="#E5E5E5"> and</font>

1349
00:48:34,539 --> 00:48:39,279
that's sort<font color="#E5E5E5"> of where we see</font><font color="#CCCCCC"> where we see</font>

1350
00:48:36,339 --> 00:48:41,828
<font color="#E5E5E5">the future so summarizing bringing it</font>

1351
00:48:39,279 --> 00:48:43,779
all together<font color="#CCCCCC"> data services are really</font>

1352
00:48:41,829 --> 00:48:46,029
<font color="#E5E5E5">about this mobility introspection and</font>

1353
00:48:43,779 --> 00:48:48,339
policy stuff already has sort of a lot

1354
00:48:46,029 --> 00:48:49,630
of<font color="#CCCCCC"> key</font><font color="#E5E5E5"> features that that give you some</font>

1355
00:48:48,339 --> 00:48:51,880
of this<font color="#E5E5E5"> but also there are some clear</font>

1356
00:48:49,630 --> 00:48:53,109
gaps might be haven't sort of solved all

1357
00:48:51,880 --> 00:48:55,299
the problems yet<font color="#E5E5E5"> and I think we're in</font>

1358
00:48:53,109 --> 00:48:56,859
<font color="#CCCCCC">good shape on a block side on the object</font>

1359
00:48:55,299 --> 00:48:58,480
we have<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> things solved but sort</font>

1360
00:48:56,859 --> 00:49:00,069
of there's a lot<font color="#E5E5E5"> of work to do and on</font>

1361
00:48:58,480 --> 00:49:03,309
the file<font color="#E5E5E5"> there's a lot there's even more</font>

1362
00:49:00,069 --> 00:49:06,308
<font color="#E5E5E5">to do our key efforts are really around</font>

1363
00:49:03,309 --> 00:49:08,079
<font color="#E5E5E5">driven around defining what the use</font>

1364
00:49:06,309 --> 00:49:11,500
cases are for<font color="#E5E5E5"> in the kubernetes</font>

1365
00:49:08,079 --> 00:49:13,539
environment<font color="#E5E5E5"> you know around rwo in order</font>

1366
00:49:11,500 --> 00:49:15,250
to be<font color="#CCCCCC"> efficient volumes dynamic bucket</font>

1367
00:49:13,539 --> 00:49:16,930
provisioning<font color="#E5E5E5"> and so on and sort of</font>

1368
00:49:15,250 --> 00:49:18,009
addressing the features in the storage

1369
00:49:16,930 --> 00:49:19,299
system that<font color="#CCCCCC"> we need</font><font color="#E5E5E5"> to make all that</font>

1370
00:49:18,009 --> 00:49:19,839
stuff work<font color="#E5E5E5"> integrating it with</font>

1371
00:49:19,299 --> 00:49:20,950
kubernetes

1372
00:49:19,839 --> 00:49:21,500
<font color="#CCCCCC">that's really the way we're approaching</font>

1373
00:49:20,950 --> 00:49:23,720
<font color="#E5E5E5">it</font>

1374
00:49:21,500 --> 00:49:28,010
and that mostly comes down to extending

1375
00:49:23,720 --> 00:49:29,689
<font color="#CCCCCC">rgw and also</font><font color="#E5E5E5"> where we're planning and</font>

1376
00:49:28,010 --> 00:49:31,430
deciding<font color="#CCCCCC"> what</font><font color="#E5E5E5"> we want to do for set of s</font>

1377
00:49:29,690 --> 00:49:34,070
what will<font color="#CCCCCC"> keep cluster features we want</font>

1378
00:49:31,430 --> 00:49:35,899
to add in the future<font color="#E5E5E5"> so sort of the</font>

1379
00:49:34,070 --> 00:49:37,369
<font color="#CCCCCC">bottom</font><font color="#E5E5E5"> line</font><font color="#CCCCCC"> you know if you</font><font color="#E5E5E5"> talk to me</font>

1380
00:49:35,900 --> 00:49:38,990
two<font color="#CCCCCC"> years ago</font><font color="#E5E5E5"> and I talked</font><font color="#CCCCCC"> about what</font>

1381
00:49:37,369 --> 00:49:41,030
<font color="#CCCCCC">stuff is</font><font color="#E5E5E5"> it's it's software-defined</font>

1382
00:49:38,990 --> 00:49:43,520
storage<font color="#CCCCCC"> it's a unified platform with</font><font color="#E5E5E5"> bio</font>

1383
00:49:41,030 --> 00:49:44,900
block and object Hardware agnostic you

1384
00:49:43,520 --> 00:49:46,609
know really thinking about set in terms

1385
00:49:44,900 --> 00:49:49,060
<font color="#E5E5E5">of</font><font color="#CCCCCC"> a single</font><font color="#E5E5E5"> instance in a data center</font>

1386
00:49:46,609 --> 00:49:50,900
<font color="#CCCCCC">and as we sort of</font><font color="#E5E5E5"> move</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the future</font>

1387
00:49:49,060 --> 00:49:53,480
<font color="#E5E5E5">increasingly we're thinking about stuff</font>

1388
00:49:50,900 --> 00:49:55,490
<font color="#E5E5E5">in the context of you have lots of</font>

1389
00:49:53,480 --> 00:49:56,810
clusters<font color="#E5E5E5"> across lots of sites and you</font>

1390
00:49:55,490 --> 00:49:58,399
really need a platform<font color="#CCCCCC"> that lets you</font>

1391
00:49:56,810 --> 00:50:00,020
<font color="#E5E5E5">manage your data</font><font color="#CCCCCC"> across all of them and</font>

1392
00:49:58,400 --> 00:50:01,430
migrate<font color="#E5E5E5"> data and so forth</font><font color="#CCCCCC"> so we're</font>

1393
00:50:00,020 --> 00:50:05,530
increasingly thinking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> these multi</font>

1394
00:50:01,430 --> 00:50:05,529
cluster multi-cloud use cases

