1
00:00:04,910 --> 00:00:09,920
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> next up</font><font color="#E5E5E5"> we're gonna have</font><font color="#CCCCCC"> Michael</font>

2
00:00:07,920 --> 00:00:14,969
<font color="#CCCCCC">Johnson was gonna</font><font color="#E5E5E5"> be talking</font><font color="#CCCCCC"> about</font>

3
00:00:09,920 --> 00:00:18,029
<font color="#E5E5E5">tracing</font><font color="#CCCCCC"> and containers with LT</font><font color="#E5E5E5"> TNG so hi</font>

4
00:00:14,970 --> 00:00:21,180
can everyone<font color="#E5E5E5"> hear me all right yeah okay</font>

5
00:00:18,029 --> 00:00:23,939
so I'm here<font color="#E5E5E5"> to talk to you about delta T</font>

6
00:00:21,180 --> 00:00:26,670
<font color="#CCCCCC">and</font><font color="#E5E5E5"> G</font><font color="#CCCCCC"> n containers and I want to say LT</font>

7
00:00:23,940 --> 00:00:30,119
<font color="#E5E5E5">t</font><font color="#CCCCCC"> & G stands for the Linux trace toolkit</font>

8
00:00:26,670 --> 00:00:33,150
next generation which is<font color="#CCCCCC"> a name we don't</font>

9
00:00:30,119 --> 00:00:34,620
<font color="#E5E5E5">really like but it's it's been</font><font color="#CCCCCC"> like that</font>

10
00:00:33,150 --> 00:00:36,300
since the<font color="#CCCCCC"> beginning and it stuck with us</font>

11
00:00:34,620 --> 00:00:41,489
so<font color="#CCCCCC"> protip</font><font color="#E5E5E5"> choose your project</font><font color="#CCCCCC"> name</font>

12
00:00:36,300 --> 00:00:43,800
wisely<font color="#CCCCCC"> so my name is Mikkel</font><font color="#E5E5E5"> John so I</font>

13
00:00:41,489 --> 00:00:45,660
work at officios which is the company

14
00:00:43,800 --> 00:00:49,680
that<font color="#CCCCCC"> those</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> does most of</font><font color="#E5E5E5"> the</font>

15
00:00:45,660 --> 00:00:51,360
<font color="#CCCCCC">development work behind LT TNG I am my</font>

16
00:00:49,680 --> 00:00:53,489
background is<font color="#E5E5E5"> not in development but</font>

17
00:00:51,360 --> 00:00:56,700
mostly in system administration<font color="#E5E5E5"> so I do</font>

18
00:00:53,489 --> 00:00:59,339
mostly all the<font color="#CCCCCC"> CI work</font><font color="#E5E5E5"> the porting to</font>

19
00:00:56,700 --> 00:01:02,760
different architectures builds them and

20
00:00:59,340 --> 00:01:04,460
so<font color="#CCCCCC"> on</font><font color="#E5E5E5"> and since last year I</font><font color="#CCCCCC"> started</font>

21
00:01:02,760 --> 00:01:07,560
developing<font color="#E5E5E5"> new features integrating</font>

22
00:01:04,459 --> 00:01:14,068
container support into the<font color="#CCCCCC"> ltte</font><font color="#E5E5E5"> and G</font>

23
00:01:07,560 --> 00:01:16,020
toolkit<font color="#CCCCCC"> so just a</font><font color="#E5E5E5"> quick overview of what</font>

24
00:01:14,069 --> 00:01:18,929
I'm gonna cover today<font color="#CCCCCC"> so this is a</font>

25
00:01:16,020 --> 00:01:20,848
<font color="#CCCCCC">follow up to</font><font color="#E5E5E5"> last year's talk</font><font color="#CCCCCC"> if you</font>

26
00:01:18,929 --> 00:01:22,860
were here<font color="#CCCCCC"> last year I apologize there's</font>

27
00:01:20,849 --> 00:01:25,740
gonna<font color="#E5E5E5"> be a lot of the same material</font>

28
00:01:22,860 --> 00:01:27,599
covered<font color="#E5E5E5"> because last year was I was</font>

29
00:01:25,740 --> 00:01:31,860
explaining a proof of concept but now

30
00:01:27,599 --> 00:01:35,640
we're in<font color="#CCCCCC"> the implementation</font><font color="#E5E5E5"> phase</font><font color="#CCCCCC"> so</font>

31
00:01:31,860 --> 00:01:37,470
yeah I'll cover<font color="#E5E5E5"> why well first what</font><font color="#CCCCCC"> ltte</font>

32
00:01:35,640 --> 00:01:40,470
energy for people<font color="#E5E5E5"> that are aware of what</font>

33
00:01:37,470 --> 00:01:43,560
it is<font color="#E5E5E5"> what do</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> mean by supporting</font>

34
00:01:40,470 --> 00:01:45,840
containers in<font color="#CCCCCC"> the in</font><font color="#E5E5E5"> alpha TNG and our</font>

35
00:01:43,560 --> 00:01:49,649
<font color="#E5E5E5">progress since last year talk and I'll</font>

36
00:01:45,840 --> 00:01:51,179
go over<font color="#E5E5E5"> the feature we have now and the</font>

37
00:01:49,649 --> 00:01:59,099
<font color="#E5E5E5">features were planning</font><font color="#CCCCCC"> to implement this</font>

38
00:01:51,179 --> 00:02:01,590
year so what LT<font color="#E5E5E5"> TNG it's it's a suite of</font>

39
00:01:59,099 --> 00:02:04,800
tracing tools<font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> two tracers</font>

40
00:02:01,590 --> 00:02:06,899
when<font color="#E5E5E5"> Colonel base which is kernel</font>

41
00:02:04,800 --> 00:02:08,880
modules you insert in a in a<font color="#E5E5E5"> Linux</font>

42
00:02:06,899 --> 00:02:11,340
kernel<font color="#E5E5E5"> and the N</font><font color="#CCCCCC"> one is a user</font><font color="#E5E5E5"> space</font>

43
00:02:08,880 --> 00:02:13,230
tracer which is a set of libraries which

44
00:02:11,340 --> 00:02:15,540
you link into your<font color="#E5E5E5"> project and then add</font>

45
00:02:13,230 --> 00:02:19,079
<font color="#E5E5E5">a trace point in them</font>

46
00:02:15,540 --> 00:02:21,569
so how can you<font color="#E5E5E5"> describe</font><font color="#CCCCCC"> what is a tracer</font>

47
00:02:19,080 --> 00:02:24,930
<font color="#E5E5E5">for to start</font><font color="#CCCCCC"> it could be described as a</font>

48
00:02:21,569 --> 00:02:25,950
fast<font color="#E5E5E5"> non-blocking structured</font><font color="#CCCCCC"> binary</font>

49
00:02:24,930 --> 00:02:29,730
logging framework

50
00:02:25,950 --> 00:02:35,459
so basically logging but faster<font color="#E5E5E5"> and more</font>

51
00:02:29,730 --> 00:02:37,170
flexible so the kernel tracer is used to

52
00:02:35,459 --> 00:02:40,379
get<font color="#CCCCCC"> low-level</font><font color="#E5E5E5"> information about your</font>

53
00:02:37,170 --> 00:02:42,599
<font color="#E5E5E5">system so you could you can get</font><font color="#CCCCCC"> sis</font>

54
00:02:40,379 --> 00:02:45,239
<font color="#CCCCCC">calls and their parameters</font><font color="#E5E5E5"> scheduling</font>

55
00:02:42,599 --> 00:02:47,640
event<font color="#CCCCCC"> a UI</font><font color="#E5E5E5"> events so it gives you a</font>

56
00:02:45,239 --> 00:02:51,629
really in-depth view of<font color="#E5E5E5"> what's happening</font>

57
00:02:47,640 --> 00:02:54,238
<font color="#CCCCCC">inside your kernel and then the user</font>

58
00:02:51,629 --> 00:02:56,548
space tracer will be used<font color="#E5E5E5"> to well</font>

59
00:02:54,239 --> 00:03:00,180
<font color="#E5E5E5">applications have</font><font color="#CCCCCC"> to be modified to use</font>

60
00:02:56,549 --> 00:03:02,159
the<font color="#E5E5E5"> app the user space race or so trace</font>

61
00:03:00,180 --> 00:03:03,989
points have to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> added</font><font color="#E5E5E5"> to them but</font>

62
00:03:02,159 --> 00:03:06,840
afterwards<font color="#E5E5E5"> if your application is</font>

63
00:03:03,989 --> 00:03:08,489
instrumented then the<font color="#E5E5E5"> two</font><font color="#CCCCCC"> tracers can</font><font color="#E5E5E5"> be</font>

64
00:03:06,840 --> 00:03:14,579
used together<font color="#E5E5E5"> to correlate information</font>

65
00:03:08,489 --> 00:03:17,010
with with the kernel formation<font color="#CCCCCC"> so our</font>

66
00:03:14,579 --> 00:03:17,370
tools use a common trace format which<font color="#CCCCCC"> is</font>

67
00:03:17,010 --> 00:03:20,548
called

68
00:03:17,370 --> 00:03:22,980
a<font color="#E5E5E5"> CDF so it's what's produced by both</font>

69
00:03:20,549 --> 00:03:24,930
tracers<font color="#CCCCCC"> and then what's consumed by the</font>

70
00:03:22,980 --> 00:03:29,369
tooling and<font color="#CCCCCC"> the analysis scripts and so</font>

71
00:03:24,930 --> 00:03:31,260
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> CTF format is</font><font color="#E5E5E5"> also its aspect and</font>

72
00:03:29,370 --> 00:03:35,639
<font color="#CCCCCC">spec</font><font color="#E5E5E5"> format that's also used by other</font>

73
00:03:31,260 --> 00:03:41,519
<font color="#E5E5E5">project like gdb for their trace tracing</font>

74
00:03:35,639 --> 00:03:44,099
functions<font color="#CCCCCC"> to the tooling is called ltte</font>

75
00:03:41,519 --> 00:03:46,079
<font color="#CCCCCC">energy tools so it's a common tooling</font>

76
00:03:44,099 --> 00:03:47,940
<font color="#CCCCCC">that that's used that</font><font color="#E5E5E5"> you use to control</font>

77
00:03:46,079 --> 00:03:49,829
<font color="#E5E5E5">both the kernel tracer and the user</font>

78
00:03:47,940 --> 00:03:54,510
space racer<font color="#E5E5E5"> with the same kind of</font>

79
00:03:49,829 --> 00:03:56,400
commands and primitives<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we have</font>

80
00:03:54,510 --> 00:03:58,530
a<font color="#E5E5E5"> command line trace reader which is</font>

81
00:03:56,400 --> 00:04:01,199
basically a command line<font color="#CCCCCC"> tool that's</font>

82
00:03:58,530 --> 00:04:03,659
used<font color="#E5E5E5"> to read the binary tracers the</font>

83
00:04:01,199 --> 00:04:07,590
trade binary traces<font color="#E5E5E5"> and convert them to</font>

84
00:04:03,659 --> 00:04:09,090
<font color="#E5E5E5">human readable text format and also</font>

85
00:04:07,590 --> 00:04:11,690
could be<font color="#CCCCCC"> used</font><font color="#E5E5E5"> to convert between</font>

86
00:04:09,090 --> 00:04:14,879
different binary<font color="#E5E5E5"> trace formats and so on</font>

87
00:04:11,690 --> 00:04:17,719
and we also have multiple graphical

88
00:04:14,879 --> 00:04:20,399
trace readers which are you<font color="#CCCCCC"> eyes that</font>

89
00:04:17,720 --> 00:04:22,500
<font color="#E5E5E5">gives you a graphical view of the</font>

90
00:04:20,399 --> 00:04:25,049
content of traces so there's one<font color="#E5E5E5"> that's</font>

91
00:04:22,500 --> 00:04:26,480
<font color="#E5E5E5">called trace</font><font color="#CCCCCC"> compass and then so and</font>

92
00:04:25,050 --> 00:04:33,740
<font color="#CCCCCC">there's also</font><font color="#E5E5E5"> out</font>

93
00:04:26,480 --> 00:04:38,480
<font color="#CCCCCC">gingy scope so why would you want to use</font>

94
00:04:33,740 --> 00:04:42,050
<font color="#CCCCCC">LT TNG</font><font color="#E5E5E5"> because it gives you a combined</font>

95
00:04:38,480 --> 00:04:46,910
view of<font color="#CCCCCC"> colonel and</font><font color="#E5E5E5"> user space and also</font>

96
00:04:42,050 --> 00:04:49,070
<font color="#E5E5E5">it's a very</font><font color="#CCCCCC"> low overhead lugging</font>

97
00:04:46,910 --> 00:04:51,280
interesting solution so it can be used

98
00:04:49,070 --> 00:04:57,260
on<font color="#E5E5E5"> production system that</font><font color="#CCCCCC"> have actual</font>

99
00:04:51,280 --> 00:04:59,659
<font color="#E5E5E5">production work clothes well without</font>

100
00:04:57,260 --> 00:05:01,820
<font color="#E5E5E5">having much of well there's always a</font>

101
00:04:59,660 --> 00:05:03,740
small<font color="#E5E5E5"> impact but the impact is usually</font>

102
00:05:01,820 --> 00:05:06,770
low enough to<font color="#CCCCCC"> be used on</font><font color="#E5E5E5"> production</font>

103
00:05:03,740 --> 00:05:08,180
<font color="#E5E5E5">system so the difference of logging</font>

104
00:05:06,770 --> 00:05:11,030
framework<font color="#CCCCCC"> where if you would set your</font>

105
00:05:08,180 --> 00:05:12,680
logging framework to be a verbal debug

106
00:05:11,030 --> 00:05:17,179
output would usually have a<font color="#E5E5E5"> very big</font>

107
00:05:12,680 --> 00:05:20,330
<font color="#E5E5E5">impact on on the running system</font><font color="#CCCCCC"> it also</font>

108
00:05:17,180 --> 00:05:22,010
can be<font color="#CCCCCC"> enabled disabled and reconfigured</font>

109
00:05:20,330 --> 00:05:24,440
at runtime<font color="#E5E5E5"> so if you have a running</font>

110
00:05:22,010 --> 00:05:27,050
system and something<font color="#E5E5E5"> happens instead of</font>

111
00:05:24,440 --> 00:05:29,210
<font color="#E5E5E5">having to reconfigure the daemon to</font>

112
00:05:27,050 --> 00:05:31,100
output more information and then we

113
00:05:29,210 --> 00:05:33,200
start<font color="#CCCCCC"> the service without the</font><font color="#E5E5E5"> T and G</font>

114
00:05:31,100 --> 00:05:35,270
you<font color="#CCCCCC"> can just start a tracing session in</font>

115
00:05:33,200 --> 00:05:37,430
the background<font color="#E5E5E5"> attach it to</font><font color="#CCCCCC"> your running</font>

116
00:05:35,270 --> 00:05:39,469
<font color="#CCCCCC">system and then get the information you</font>

117
00:05:37,430 --> 00:05:42,260
<font color="#E5E5E5">need to troubleshoot the problem without</font>

118
00:05:39,470 --> 00:05:45,950
<font color="#E5E5E5">having to restart or reconfigure the</font>

119
00:05:42,260 --> 00:05:49,400
system it also provides you flexible

120
00:05:45,950 --> 00:05:51,680
storage<font color="#E5E5E5"> of traces so traces</font><font color="#CCCCCC"> can be just</font>

121
00:05:49,400 --> 00:05:53,330
basically this simply written<font color="#E5E5E5"> to the</font>

122
00:05:51,680 --> 00:05:55,970
local<font color="#E5E5E5"> disk but they can also be streamed</font>

123
00:05:53,330 --> 00:05:58,880
over<font color="#CCCCCC"> the network or they can be stored</font>

124
00:05:55,970 --> 00:06:00,920
<font color="#E5E5E5">in memory ring buffers and only get the</font>

125
00:05:58,880 --> 00:06:03,800
<font color="#E5E5E5">disk on certain events when you really</font>

126
00:06:00,920 --> 00:06:06,530
need the data<font color="#E5E5E5"> but otherwise just spin in</font>

127
00:06:03,800 --> 00:06:12,830
memory and<font color="#CCCCCC"> have a very low impact on</font>

128
00:06:06,530 --> 00:06:15,919
<font color="#E5E5E5">your system</font><font color="#CCCCCC"> and now</font><font color="#E5E5E5"> in the context of LT</font>

129
00:06:12,830 --> 00:06:17,840
<font color="#CCCCCC">TNG what is the content well not</font><font color="#E5E5E5"> only in</font>

130
00:06:15,920 --> 00:06:20,180
the context<font color="#CCCCCC"> that what is a container</font><font color="#E5E5E5"> and</font>

131
00:06:17,840 --> 00:06:25,549
how can we observe<font color="#E5E5E5"> it with</font><font color="#CCCCCC"> delta</font><font color="#E5E5E5"> T</font>

132
00:06:20,180 --> 00:06:30,170
<font color="#E5E5E5">energy so the problem we faced was that</font>

133
00:06:25,550 --> 00:06:31,880
<font color="#E5E5E5">from a kernel perspective there is no</font>

134
00:06:30,170 --> 00:06:34,520
single concept<font color="#E5E5E5"> of a container so</font><font color="#CCCCCC"> you</font>

135
00:06:31,880 --> 00:06:36,200
cannot like read<font color="#E5E5E5"> a data structure</font><font color="#CCCCCC"> that</font>

136
00:06:34,520 --> 00:06:36,859
in the kernel<font color="#E5E5E5"> that would list all the</font>

137
00:06:36,200 --> 00:06:39,560
existing<font color="#CCCCCC"> care</font>

138
00:06:36,860 --> 00:06:40,280
<font color="#CCCCCC">no the</font><font color="#E5E5E5"> articles the existing containers</font>

139
00:06:39,560 --> 00:06:45,469
in their names

140
00:06:40,280 --> 00:06:49,008
and so on so<font color="#E5E5E5"> we have to</font><font color="#CCCCCC"> find other</font>

141
00:06:45,469 --> 00:06:51,080
solutions<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get this information</font><font color="#CCCCCC"> and</font>

142
00:06:49,009 --> 00:06:55,340
also<font color="#E5E5E5"> there's multiple container</font><font color="#CCCCCC"> runtimes</font>

143
00:06:51,080 --> 00:06:57,530
like<font color="#E5E5E5"> lxd Rockette darker and many others</font>

144
00:06:55,340 --> 00:06:59,239
<font color="#E5E5E5">that</font><font color="#CCCCCC"> all use the same</font><font color="#E5E5E5"> kind of facilities</font>

145
00:06:57,530 --> 00:07:02,780
in the kernel but I'll do it<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

146
00:06:59,240 --> 00:07:06,199
their own<font color="#CCCCCC"> way and if we want to</font><font color="#E5E5E5"> be a</font>

147
00:07:02,780 --> 00:07:08,330
<font color="#E5E5E5">generic as possible</font><font color="#CCCCCC"> and support all the</font>

148
00:07:06,199 --> 00:07:10,340
use cases of<font color="#CCCCCC"> all your users we have to</font>

149
00:07:08,330 --> 00:07:11,710
support<font color="#E5E5E5"> all those different container</font>

150
00:07:10,340 --> 00:07:15,159
runtimes

151
00:07:11,710 --> 00:07:18,620
so what we<font color="#E5E5E5"> came</font><font color="#CCCCCC"> up with is that all</font>

152
00:07:15,159 --> 00:07:21,020
other containers are all based on<font color="#E5E5E5"> the</font>

153
00:07:18,620 --> 00:07:22,610
<font color="#CCCCCC">same kernel subsystem so basically the</font>

154
00:07:21,020 --> 00:07:24,590
namespace<font color="#E5E5E5"> cgroups</font>

155
00:07:22,610 --> 00:07:28,370
and also other<font color="#E5E5E5"> isolation and security</font>

156
00:07:24,590 --> 00:07:37,340
subsystems<font color="#E5E5E5"> depending on on on the</font>

157
00:07:28,370 --> 00:07:40,430
runtime so<font color="#E5E5E5"> and now what does it</font><font color="#CCCCCC"> mean to</font>

158
00:07:37,340 --> 00:07:43,638
support containers in<font color="#CCCCCC"> a TT</font><font color="#E5E5E5"> and G so we</font>

159
00:07:40,430 --> 00:07:47,150
can divide this path<font color="#CCCCCC"> into main objective</font>

160
00:07:43,639 --> 00:07:49,669
the<font color="#CCCCCC"> first one is that the traces will</font>

161
00:07:47,150 --> 00:07:52,279
produce the<font color="#E5E5E5"> data you extract</font><font color="#CCCCCC"> from your</font>

162
00:07:49,669 --> 00:07:56,378
system without<font color="#CCCCCC"> et energy needs to be</font>

163
00:07:52,279 --> 00:07:58,490
<font color="#E5E5E5">needs could contain information that</font>

164
00:07:56,379 --> 00:08:02,479
<font color="#E5E5E5">related to containers so you can</font>

165
00:07:58,490 --> 00:08:04,430
basically like filter events<font color="#E5E5E5"> based</font><font color="#CCCCCC"> on</font>

166
00:08:02,479 --> 00:08:06,199
let's say<font color="#E5E5E5"> I want to know all the</font><font color="#CCCCCC"> SIS</font>

167
00:08:04,430 --> 00:08:07,669
<font color="#E5E5E5">calls that are all the</font><font color="#CCCCCC"> rites of skulls</font>

168
00:08:06,199 --> 00:08:10,129
<font color="#CCCCCC">that are coming from this</font><font color="#E5E5E5"> container</font>

169
00:08:07,669 --> 00:08:11,779
instead<font color="#E5E5E5"> of having the list of all skulls</font>

170
00:08:10,129 --> 00:08:16,939
that<font color="#E5E5E5"> are done by all the containers on</font>

171
00:08:11,779 --> 00:08:21,889
<font color="#CCCCCC">the system and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other main task would</font>

172
00:08:16,939 --> 00:08:26,960
be to adjust<font color="#E5E5E5"> our tooling that which is</font>

173
00:08:21,889 --> 00:08:28,819
currently which currently assumes<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a</font>

174
00:08:26,960 --> 00:08:31,669
monolithic<font color="#E5E5E5"> system which it was</font><font color="#CCCCCC"> designed</font>

175
00:08:28,819 --> 00:08:33,380
before containers existed<font color="#E5E5E5"> so</font><font color="#CCCCCC"> adjust our</font>

176
00:08:31,669 --> 00:08:35,360
tooling<font color="#E5E5E5"> and our deployment strategies so</font>

177
00:08:33,380 --> 00:08:42,469
we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> it get it's easier to use</font>

178
00:08:35,360 --> 00:08:45,170
<font color="#E5E5E5">LT TNG in container systems so the the</font>

179
00:08:42,469 --> 00:08:45,960
main<font color="#CCCCCC"> task we tackled last year since the</font>

180
00:08:45,170 --> 00:08:48,390
the

181
00:08:45,960 --> 00:08:52,980
my talk<font color="#CCCCCC"> last year was the trace content</font>

182
00:08:48,390 --> 00:08:55,620
so the features are developed they're

183
00:08:52,980 --> 00:08:57,270
not they<font color="#CCCCCC"> haven't it</font><font color="#E5E5E5"> there haven't been</font>

184
00:08:55,620 --> 00:08:59,880
released yet but<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are huge for</font>

185
00:08:57,270 --> 00:09:02,670
<font color="#E5E5E5">version</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 12 LT TNG which should be</font>

186
00:08:59,880 --> 00:09:08,370
released<font color="#CCCCCC"> around April a</font><font color="#E5E5E5"> twin of this</font>

187
00:09:02,670 --> 00:09:12,270
year so the main<font color="#E5E5E5"> features are so we</font>

188
00:09:08,370 --> 00:09:15,750
added to the kernel tracer<font color="#CCCCCC"> a state dump</font>

189
00:09:12,270 --> 00:09:18,329
of<font color="#E5E5E5"> the namespaces</font><font color="#CCCCCC"> so that will help you</font>

190
00:09:15,750 --> 00:09:21,209
to get the state of the system at

191
00:09:18,330 --> 00:09:23,279
tracing<font color="#CCCCCC"> startup also we</font><font color="#E5E5E5"> added context to</font>

192
00:09:21,209 --> 00:09:27,540
classify and filter<font color="#E5E5E5"> events with</font>

193
00:09:23,279 --> 00:09:29,760
namespaces<font color="#E5E5E5"> and we already add but we the</font>

194
00:09:27,540 --> 00:09:33,149
<font color="#CCCCCC">Cisco events that will be used to track</font>

195
00:09:29,760 --> 00:09:37,110
namespace changes so I'll go<font color="#E5E5E5"> over more</font>

196
00:09:33,149 --> 00:09:39,330
details on each<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those features and</font>

197
00:09:37,110 --> 00:09:41,040
<font color="#E5E5E5">also and the same kind of</font><font color="#CCCCCC"> support was</font>

198
00:09:39,330 --> 00:09:43,709
also added to<font color="#CCCCCC"> the user space tracer but</font>

199
00:09:41,040 --> 00:09:46,920
only the<font color="#E5E5E5"> namespace context was added</font>

200
00:09:43,709 --> 00:09:48,630
<font color="#E5E5E5">because from user space there's the</font><font color="#CCCCCC"> view</font>

201
00:09:46,920 --> 00:09:52,140
<font color="#E5E5E5">you have from our container is much more</font>

202
00:09:48,630 --> 00:09:54,839
limited<font color="#E5E5E5"> than from the</font><font color="#CCCCCC"> Locarno side and</font>

203
00:09:52,140 --> 00:09:58,080
what is still<font color="#CCCCCC"> missing</font><font color="#E5E5E5"> is having some</font>

204
00:09:54,839 --> 00:10:01,320
more<font color="#E5E5E5"> events that come</font><font color="#CCCCCC"> directly from</font><font color="#E5E5E5"> the</font>

205
00:09:58,080 --> 00:10:04,200
container runtimes<font color="#E5E5E5"> you get a view</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

206
00:10:01,320 --> 00:10:11,070
<font color="#CCCCCC">lifecycle</font><font color="#E5E5E5"> of the containers and some</font>

207
00:10:04,200 --> 00:10:13,290
<font color="#E5E5E5">more metadata from the containers</font><font color="#CCCCCC"> so for</font>

208
00:10:11,070 --> 00:10:15,779
the specific features first was the

209
00:10:13,290 --> 00:10:19,219
context so what is an entity<font color="#CCCCCC"> jah-el</font>

210
00:10:15,779 --> 00:10:22,410
wealth is an LT TNG context<font color="#E5E5E5"> it's</font>

211
00:10:19,220 --> 00:10:24,720
basically a metadata<font color="#E5E5E5"> field field that</font>

212
00:10:22,410 --> 00:10:27,270
you add<font color="#CCCCCC"> to a trace event so if you have</font>

213
00:10:24,720 --> 00:10:30,650
an event<font color="#E5E5E5"> that says</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> an event</font>

214
00:10:27,270 --> 00:10:30,650
from the<font color="#E5E5E5"> kernel for example which is a</font>

215
00:10:31,070 --> 00:10:37,560
<font color="#CCCCCC">scale for example well</font><font color="#E5E5E5"> you want you can</font>

216
00:10:34,620 --> 00:10:39,300
add<font color="#E5E5E5"> information to this to this like</font>

217
00:10:37,560 --> 00:10:42,599
logging statement you<font color="#E5E5E5"> would add metadata</font>

218
00:10:39,300 --> 00:10:44,459
for a week or<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the current</font><font color="#CCCCCC"> context we</font>

219
00:10:42,600 --> 00:10:46,620
currently have or like process ID

220
00:10:44,459 --> 00:10:49,619
threads ID process<font color="#E5E5E5"> name so you could</font>

221
00:10:46,620 --> 00:10:51,570
basically enable those<font color="#E5E5E5"> context on your</font>

222
00:10:49,620 --> 00:10:53,670
tracing session and each of your event

223
00:10:51,570 --> 00:10:56,510
would be tagged with<font color="#CCCCCC"> the proper</font>

224
00:10:53,670 --> 00:10:56,510
<font color="#CCCCCC">information</font>

225
00:10:57,260 --> 00:11:04,670
it's useful<font color="#CCCCCC"> for</font><font color="#E5E5E5"> when you manually read</font>

226
00:11:00,470 --> 00:11:07,190
traces text traces but<font color="#E5E5E5"> it's also very</font>

227
00:11:04,670 --> 00:11:10,969
useful for<font color="#E5E5E5"> filtering so if you want for</font>

228
00:11:07,190 --> 00:11:13,610
<font color="#E5E5E5">example to only get the</font><font color="#CCCCCC"> SIS calls that</font>

229
00:11:10,970 --> 00:11:17,420
come from<font color="#E5E5E5"> a specific hit</font><font color="#CCCCCC"> well you could</font>

230
00:11:13,610 --> 00:11:20,570
add a context and<font color="#E5E5E5"> then add a filter that</font>

231
00:11:17,420 --> 00:11:23,349
<font color="#CCCCCC">would say only read the events that come</font>

232
00:11:20,570 --> 00:11:26,840
from<font color="#E5E5E5"> the speed in the context of</font>

233
00:11:23,350 --> 00:11:30,050
containers<font color="#CCCCCC"> so we added context for each</font>

234
00:11:26,840 --> 00:11:35,510
<font color="#E5E5E5">of the namespace type that are in the</font>

235
00:11:30,050 --> 00:11:39,650
kernel<font color="#CCCCCC"> so and this enable enables us to</font>

236
00:11:35,510 --> 00:11:45,319
do filtering<font color="#E5E5E5"> on the events per container</font>

237
00:11:39,650 --> 00:11:47,120
<font color="#E5E5E5">and on the user space side</font><font color="#CCCCCC"> it all we can</font>

238
00:11:45,320 --> 00:11:48,830
have the same context<font color="#E5E5E5"> so basically have</font>

239
00:11:47,120 --> 00:11:51,110
the same<font color="#E5E5E5"> container ID to the user space</font>

240
00:11:48,830 --> 00:11:53,690
events and then it will allow<font color="#CCCCCC"> you to</font>

241
00:11:51,110 --> 00:11:56,270
correlate events between<font color="#E5E5E5"> a kernel trace</font>

242
00:11:53,690 --> 00:11:58,010
and a user space<font color="#E5E5E5"> race</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> would and you</font>

243
00:11:56,270 --> 00:12:03,770
will be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to know they come from the</font>

244
00:11:58,010 --> 00:12:07,550
same container so here's an example<font color="#E5E5E5"> of a</font>

245
00:12:03,770 --> 00:12:08,930
text<font color="#E5E5E5"> representation of a Cisco event</font>

246
00:12:07,550 --> 00:12:12,819
they get time<font color="#CCCCCC"> of this</font><font color="#E5E5E5"> is called event</font>

247
00:12:08,930 --> 00:12:15,290
and you<font color="#E5E5E5"> can see that the we added a</font>

248
00:12:12,820 --> 00:12:17,840
namespaces you can see a<font color="#E5E5E5"> namespace</font><font color="#CCCCCC"> sorry</font>

249
00:12:15,290 --> 00:12:20,810
<font color="#E5E5E5">the namespace for</font><font color="#CCCCCC"> the the pit NS</font><font color="#E5E5E5"> names</font>

250
00:12:17,840 --> 00:12:24,890
<font color="#E5E5E5">is context in green so basically it</font>

251
00:12:20,810 --> 00:12:28,040
<font color="#CCCCCC">gives you an ID for this patinas inside</font>

252
00:12:24,890 --> 00:12:31,340
the kernel there's no kind there's no

253
00:12:28,040 --> 00:12:32,990
concept of containers as I said before

254
00:12:31,340 --> 00:12:35,840
but there's only namespaces and

255
00:12:32,990 --> 00:12:37,820
namespace don't have names or<font color="#CCCCCC"> there they</font>

256
00:12:35,840 --> 00:12:41,300
<font color="#E5E5E5">can only be referred</font><font color="#CCCCCC"> to by the inode</font>

257
00:12:37,820 --> 00:12:43,340
<font color="#E5E5E5">number of the link in the proc file</font>

258
00:12:41,300 --> 00:12:45,829
system which they are exposed to user

259
00:12:43,340 --> 00:12:48,970
space<font color="#E5E5E5"> so that's the only unique ID we</font>

260
00:12:45,830 --> 00:12:54,740
found that we<font color="#E5E5E5"> could use</font><font color="#CCCCCC"> to identify</font>

261
00:12:48,970 --> 00:12:57,440
namespaces<font color="#CCCCCC"> and so you can see in this</font>

262
00:12:54,740 --> 00:13:00,320
example<font color="#CCCCCC"> that the event is tagged with</font>

263
00:12:57,440 --> 00:13:02,450
the context paid NS so you know<font color="#E5E5E5"> who from</font>

264
00:13:00,320 --> 00:13:05,870
<font color="#E5E5E5">which container it comes and we you can</font>

265
00:13:02,450 --> 00:13:08,270
also see that<font color="#E5E5E5"> since this is a pit and s</font>

266
00:13:05,870 --> 00:13:09,110
then the PID would be different<font color="#E5E5E5"> inside</font>

267
00:13:08,270 --> 00:13:10,730
the container

268
00:13:09,110 --> 00:13:14,390
outside of<font color="#E5E5E5"> it so you can see in the</font>

269
00:13:10,730 --> 00:13:15,980
<font color="#E5E5E5">field PID and VT ID the view in orange</font>

270
00:13:14,390 --> 00:13:19,220
from the<font color="#E5E5E5"> host and the view inside the</font>

271
00:13:15,980 --> 00:13:21,709
container<font color="#E5E5E5"> so in this example this</font><font color="#CCCCCC"> is a</font>

272
00:13:19,220 --> 00:13:25,160
<font color="#E5E5E5">docker container running radius server</font>

273
00:13:21,709 --> 00:13:26,959
so the the the<font color="#E5E5E5"> the init process is ready</font>

274
00:13:25,160 --> 00:13:29,209
server and you<font color="#E5E5E5"> can see that it's</font><font color="#CCCCCC"> bid is</font>

275
00:13:26,959 --> 00:13:36,140
<font color="#CCCCCC">1 inside the container but on the host</font>

276
00:13:29,209 --> 00:13:38,839
<font color="#E5E5E5">it's 11,000 something and so the same</font>

277
00:13:36,140 --> 00:13:41,269
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> we did the same thing</font><font color="#CCCCCC"> for the</font>

278
00:13:38,839 --> 00:13:42,980
user space tracer context<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can see</font>

279
00:13:41,269 --> 00:13:49,279
the same kind<font color="#CCCCCC"> of values and the same</font>

280
00:13:42,980 --> 00:13:51,230
kind<font color="#E5E5E5"> of filters and</font><font color="#CCCCCC"> so if you wanted in</font>

281
00:13:49,279 --> 00:13:55,490
<font color="#E5E5E5">here is an example of the commands you</font>

282
00:13:51,230 --> 00:13:57,350
would have to run to enable a tracing

283
00:13:55,490 --> 00:13:59,209
session of<font color="#E5E5E5"> all the statistical events</font>

284
00:13:57,350 --> 00:14:07,550
are deaf<font color="#E5E5E5"> are coming from a specific</font>

285
00:13:59,209 --> 00:14:09,140
<font color="#E5E5E5">docker container on your oath we also</font>

286
00:14:07,550 --> 00:14:12,380
have which we call<font color="#CCCCCC"> the</font><font color="#E5E5E5"> the tracker</font>

287
00:14:09,140 --> 00:14:15,410
<font color="#E5E5E5">feature which is basically a simpler</font>

288
00:14:12,380 --> 00:14:17,899
filtering system<font color="#E5E5E5"> that's much faster</font><font color="#CCCCCC"> and</font>

289
00:14:15,410 --> 00:14:20,480
we already<font color="#E5E5E5"> have an</font><font color="#CCCCCC"> implementation for</font>

290
00:14:17,899 --> 00:14:22,430
<font color="#CCCCCC">PID</font><font color="#E5E5E5"> so basically to trace specific</font><font color="#CCCCCC"> key</font>

291
00:14:20,480 --> 00:14:24,709
IDs on the<font color="#E5E5E5"> system without</font><font color="#CCCCCC"> having to use</font>

292
00:14:22,430 --> 00:14:27,769
<font color="#E5E5E5">the filtering rules and we're planning</font>

293
00:14:24,709 --> 00:14:30,018
<font color="#E5E5E5">to add the same the same</font><font color="#CCCCCC"> feet we'll</font>

294
00:14:27,769 --> 00:14:33,500
<font color="#E5E5E5">adding namespace support to this tracker</font>

295
00:14:30,019 --> 00:14:35,240
feature<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can basically trace all</font>

296
00:14:33,500 --> 00:14:40,730
<font color="#E5E5E5">the events</font><font color="#CCCCCC"> that come</font><font color="#E5E5E5"> from a container on</font>

297
00:14:35,240 --> 00:14:45,110
<font color="#CCCCCC">the inside the kernel</font><font color="#E5E5E5"> without with more</font>

298
00:14:40,730 --> 00:14:47,060
much more<font color="#CCCCCC"> easily and the other feature</font>

299
00:14:45,110 --> 00:14:49,730
which<font color="#E5E5E5"> we worked on is the state dump so</font>

300
00:14:47,060 --> 00:14:52,130
what is what's<font color="#CCCCCC"> unintel what's a state</font>

301
00:14:49,730 --> 00:14:54,350
dump in LT<font color="#CCCCCC"> TNG</font><font color="#E5E5E5"> terminologies when you</font>

302
00:14:52,130 --> 00:14:57,260
start tracing<font color="#CCCCCC"> there are certain events</font>

303
00:14:54,350 --> 00:15:00,380
<font color="#CCCCCC">that are emitted which gives you a view</font>

304
00:14:57,260 --> 00:15:02,449
<font color="#CCCCCC">of the current state of the system so</font>

305
00:15:00,380 --> 00:15:04,550
<font color="#E5E5E5">for example a list of all the pits a</font>

306
00:15:02,449 --> 00:15:07,609
list of all the open<font color="#E5E5E5"> FD is a list of all</font>

307
00:15:04,550 --> 00:15:10,969
the block device and so on and so we

308
00:15:07,610 --> 00:15:16,070
added to this information<font color="#CCCCCC"> to the we</font>

309
00:15:10,970 --> 00:15:18,620
added to the process information<font color="#CCCCCC"> in the</font>

310
00:15:16,070 --> 00:15:19,970
<font color="#CCCCCC">namespace context so now you can</font><font color="#E5E5E5"> have</font>

311
00:15:18,620 --> 00:15:22,430
you<font color="#E5E5E5"> can</font>

312
00:15:19,970 --> 00:15:23,839
have an initial state<font color="#CCCCCC"> of your containers</font>

313
00:15:22,430 --> 00:15:26,300
when you start tracing and you can use

314
00:15:23,839 --> 00:15:30,970
this<font color="#CCCCCC"> too</font><font color="#E5E5E5"> when you do analysis afterwards</font>

315
00:15:26,300 --> 00:15:35,149
<font color="#E5E5E5">to build an</font><font color="#CCCCCC"> initial state of the system</font>

316
00:15:30,970 --> 00:15:38,389
<font color="#E5E5E5">and so we</font><font color="#CCCCCC"> added this information to all</font>

317
00:15:35,149 --> 00:15:40,370
<font color="#E5E5E5">the same same namespaces and also the</font>

318
00:15:38,389 --> 00:15:42,529
PID in user<font color="#E5E5E5"> name space are hierarchical</font>

319
00:15:40,370 --> 00:15:43,970
so they there's a year<font color="#E5E5E5"> our key you can</font>

320
00:15:42,529 --> 00:15:46,130
add you can<font color="#E5E5E5"> have containers</font><font color="#CCCCCC"> and</font>

321
00:15:43,970 --> 00:15:47,720
containers and containers<font color="#E5E5E5"> so this is the</font>

322
00:15:46,130 --> 00:15:52,850
<font color="#CCCCCC">information is also provided for</font>

323
00:15:47,720 --> 00:15:56,269
<font color="#E5E5E5">modeling and you can see the events that</font>

324
00:15:52,850 --> 00:15:59,779
<font color="#E5E5E5">are generated</font><font color="#CCCCCC"> when you start tracing</font><font color="#E5E5E5"> and</font>

325
00:15:56,269 --> 00:16:03,560
you can see that they now contain the ID

326
00:15:59,779 --> 00:16:10,670
number<font color="#CCCCCC"> of the for example the</font><font color="#E5E5E5"> process</font>

327
00:16:03,560 --> 00:16:13,359
<font color="#E5E5E5">PID</font><font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> and so this the second big</font>

328
00:16:10,670 --> 00:16:16,010
task we have<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be to make</font><font color="#E5E5E5"> our</font>

329
00:16:13,360 --> 00:16:18,529
tooling<font color="#E5E5E5"> aware of containers currently</font>

330
00:16:16,010 --> 00:16:20,300
all the tooling in<font color="#E5E5E5"> alta TNG expect a</font>

331
00:16:18,529 --> 00:16:24,139
<font color="#E5E5E5">single to be running</font><font color="#CCCCCC"> on a single system</font>

332
00:16:20,300 --> 00:16:27,500
<font color="#E5E5E5">with with a single view</font><font color="#CCCCCC"> of the mounts</font>

333
00:16:24,139 --> 00:16:30,709
the<font color="#E5E5E5"> no ID mapping so a</font><font color="#CCCCCC"> single view of</font>

334
00:16:27,500 --> 00:16:32,569
what our user<font color="#CCCCCC"> IDs what P IDs are but</font>

335
00:16:30,709 --> 00:16:35,119
when you're in a containerized system

336
00:16:32,569 --> 00:16:36,349
<font color="#E5E5E5">depending on where you're</font><font color="#CCCCCC"> running or</font>

337
00:16:35,120 --> 00:16:38,480
were from where you're observing a

338
00:16:36,350 --> 00:16:41,089
process it in have and<font color="#CCCCCC"> I appeared that's</font>

339
00:16:38,480 --> 00:16:42,440
different from if you observe it in<font color="#E5E5E5"> the</font>

340
00:16:41,089 --> 00:16:45,529
whole story<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> containers so that</font>

341
00:16:42,440 --> 00:16:47,990
<font color="#E5E5E5">about things that we have to adjust in</font>

342
00:16:45,529 --> 00:16:53,860
art we have to<font color="#CCCCCC"> adjust those assumption</font>

343
00:16:47,990 --> 00:16:56,990
in our tooling and also if we<font color="#CCCCCC"> want to</font>

344
00:16:53,860 --> 00:16:59,660
give some easier<font color="#CCCCCC"> solution for deploying</font>

345
00:16:56,990 --> 00:17:01,430
a LT<font color="#CCCCCC"> change in container system we have</font>

346
00:16:59,660 --> 00:17:03,620
to review the security<font color="#CCCCCC"> how we do</font>

347
00:17:01,430 --> 00:17:08,059
security<font color="#E5E5E5"> because right now it's pretty</font>

348
00:17:03,620 --> 00:17:10,069
<font color="#E5E5E5">simple it's based on UNIX IDs and file</font>

349
00:17:08,059 --> 00:17:12,589
system permissions and so on on on UNIX

350
00:17:10,069 --> 00:17:15,949
socket<font color="#E5E5E5"> so if we don't if we do like bind</font>

351
00:17:12,589 --> 00:17:18,260
mounts to expose<font color="#CCCCCC"> a UNIX socket</font><font color="#E5E5E5"> from the</font>

352
00:17:15,949 --> 00:17:20,390
a daemon running into the in the host<font color="#E5E5E5"> on</font>

353
00:17:18,260 --> 00:17:24,220
inside containers<font color="#E5E5E5"> then we have a whole</font>

354
00:17:20,390 --> 00:17:31,310
problem of like what's what's a UID and

355
00:17:24,220 --> 00:17:33,470
<font color="#CCCCCC">we can control tracing and so well</font>

356
00:17:31,310 --> 00:17:35,360
so currently the support the support

357
00:17:33,470 --> 00:17:36,950
<font color="#E5E5E5">deployment is pretty simple is</font><font color="#CCCCCC"> that you</font>

358
00:17:35,360 --> 00:17:39,770
have the kernel<font color="#E5E5E5"> tracer inside the host</font>

359
00:17:36,950 --> 00:17:42,350
and<font color="#E5E5E5"> you have your one instance of a user</font>

360
00:17:39,770 --> 00:17:44,480
<font color="#E5E5E5">space racer inside of each container but</font>

361
00:17:42,350 --> 00:17:46,879
what<font color="#CCCCCC"> we're where we</font><font color="#E5E5E5"> want to go is to</font>

362
00:17:44,480 --> 00:17:48,980
<font color="#E5E5E5">have a single instance of the tracer in</font>

363
00:17:46,880 --> 00:17:52,460
both user space and kernel inside<font color="#E5E5E5"> dolls</font>

364
00:17:48,980 --> 00:17:54,050
and then<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> access</font><font color="#E5E5E5"> and then give</font>

365
00:17:52,460 --> 00:17:55,970
access<font color="#E5E5E5"> to this resource</font><font color="#CCCCCC"> through the</font>

366
00:17:54,050 --> 00:17:57,950
containers<font color="#E5E5E5"> so you wouldn't have to do a</font>

367
00:17:55,970 --> 00:18:00,110
full<font color="#CCCCCC"> installation of LT TNG inside of</font>

368
00:17:57,950 --> 00:18:01,880
each container and you could control the

369
00:18:00,110 --> 00:18:04,699
<font color="#E5E5E5">whole system as a whole</font><font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of</font>

370
00:18:01,880 --> 00:18:09,980
<font color="#E5E5E5">having seeing the containers as each</font>

371
00:18:04,700 --> 00:18:11,900
whole system and so that's the division

372
00:18:09,980 --> 00:18:14,390
<font color="#E5E5E5">that the decouple the container were</font>

373
00:18:11,900 --> 00:18:19,040
tooling vision we have for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> future</font>

374
00:18:14,390 --> 00:18:20,960
<font color="#E5E5E5">and we really want to</font><font color="#CCCCCC"> know what what</font><font color="#E5E5E5"> are</font>

375
00:18:19,040 --> 00:18:23,720
your needs and your use case<font color="#CCCCCC"> so if you</font>

376
00:18:20,960 --> 00:18:25,370
use containers<font color="#E5E5E5"> and you use tracing</font><font color="#CCCCCC"> or if</font>

377
00:18:23,720 --> 00:18:27,290
you don't<font color="#E5E5E5"> use tracing right now but is</font>

378
00:18:25,370 --> 00:18:30,889
something<font color="#CCCCCC"> that you're</font><font color="#E5E5E5"> interested in we</font>

379
00:18:27,290 --> 00:18:32,420
really want to<font color="#E5E5E5"> know</font><font color="#CCCCCC"> about what are you</font>

380
00:18:30,890 --> 00:18:34,340
use is<font color="#E5E5E5"> what what's your current pain</font>

381
00:18:32,420 --> 00:18:37,760
points<font color="#E5E5E5"> and how we can make things better</font>

382
00:18:34,340 --> 00:18:41,419
<font color="#E5E5E5">for you to you to use tracing so you can</font>

383
00:18:37,760 --> 00:18:43,220
contact us<font color="#E5E5E5"> on our C Twitter and</font><font color="#CCCCCC"> we also</font>

384
00:18:41,420 --> 00:18:45,710
<font color="#E5E5E5">have a development and user amazing</font>

385
00:18:43,220 --> 00:18:50,990
<font color="#E5E5E5">mailing list so does anyone have</font>

386
00:18:45,710 --> 00:18:56,870
questions that's<font color="#E5E5E5"> going to make things</font>

387
00:18:50,990 --> 00:19:01,970
easy<font color="#E5E5E5"> oh yeah that's not gonna make it to</font>

388
00:18:56,870 --> 00:19:03,530
the<font color="#E5E5E5"> camera about</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> we are</font>

389
00:19:01,970 --> 00:19:05,510
<font color="#E5E5E5">fitting right now for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> will you</font>

390
00:19:03,530 --> 00:19:08,000
<font color="#CCCCCC">have like</font><font color="#E5E5E5"> several containers with an</font>

391
00:19:05,510 --> 00:19:11,360
<font color="#CCCCCC">Orchestrator like where natus being able</font>

392
00:19:08,000 --> 00:19:13,400
to<font color="#E5E5E5"> trace something running in a</font><font color="#CCCCCC"> pod</font><font color="#E5E5E5"> in a</font>

393
00:19:11,360 --> 00:19:16,040
<font color="#E5E5E5">node in a class that</font><font color="#CCCCCC"> it's it's a hard</font>

394
00:19:13,400 --> 00:19:17,140
problem right now<font color="#CCCCCC"> so I'm sorry I</font><font color="#E5E5E5"> really</font>

395
00:19:16,040 --> 00:19:19,610
can't<font color="#CCCCCC"> really</font><font color="#E5E5E5"> real</font>

396
00:19:17,140 --> 00:19:21,230
thrashing in<font color="#CCCCCC"> coordinator</font><font color="#E5E5E5"> so you have</font>

397
00:19:19,610 --> 00:19:23,600
like a kubernetes cluster<font color="#E5E5E5"> we</font><font color="#CCCCCC"> serve</font><font color="#E5E5E5"> all</font>

398
00:19:21,230 --> 00:19:26,750
instances of our application<font color="#CCCCCC"> drowning as</font>

399
00:19:23,600 --> 00:19:31,310
well nodes having<font color="#E5E5E5"> a tool to be able to</font>

400
00:19:26,750 --> 00:19:34,100
<font color="#E5E5E5">trace these obligations without like</font>

401
00:19:31,310 --> 00:19:36,260
going<font color="#E5E5E5"> inside the</font><font color="#CCCCCC"> port or the</font><font color="#E5E5E5"> container</font>

402
00:19:34,100 --> 00:19:38,000
or going to the note and then tracing

403
00:19:36,260 --> 00:19:40,160
<font color="#E5E5E5">from the node</font><font color="#CCCCCC"> okay so if you have a</font>

404
00:19:38,000 --> 00:19:41,330
cluster<font color="#E5E5E5"> yeah with containers and you</font>

405
00:19:40,160 --> 00:19:42,520
want to trace a specific application

406
00:19:41,330 --> 00:19:45,220
<font color="#E5E5E5">inside us</font>

407
00:19:42,520 --> 00:19:48,070
<font color="#E5E5E5">perfect containers yes a bit container</font>

408
00:19:45,220 --> 00:19:51,940
well yeah we don't<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> solution for</font>

409
00:19:48,070 --> 00:19:53,500
<font color="#CCCCCC">now in there in the line of</font><font color="#E5E5E5"> problems</font>

410
00:19:51,940 --> 00:19:55,660
that<font color="#E5E5E5"> we are facing the last</font><font color="#CCCCCC"> idea soon so</font>

411
00:19:53,500 --> 00:19:56,200
<font color="#E5E5E5">you think that's one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> problems</font>

412
00:19:55,660 --> 00:19:59,080
<font color="#CCCCCC">right now</font>

413
00:19:56,200 --> 00:20:01,060
<font color="#CCCCCC">okay by pressing on on clusters</font><font color="#E5E5E5"> of</font>

414
00:19:59,080 --> 00:20:04,240
containers<font color="#E5E5E5"> not</font><font color="#CCCCCC"> safe containers</font><font color="#E5E5E5"> yeah I</font>

415
00:20:01,060 --> 00:20:06,520
know that<font color="#E5E5E5"> well what a lot of people that</font>

416
00:20:04,240 --> 00:20:08,950
are using<font color="#E5E5E5"> containers right now that are</font>

417
00:20:06,520 --> 00:20:11,110
talking<font color="#E5E5E5"> to</font><font color="#CCCCCC"> us that it's that there's a</font>

418
00:20:08,950 --> 00:20:13,510
yeah well there's a shift in before

419
00:20:11,110 --> 00:20:15,760
systems were static<font color="#E5E5E5"> and they were you</font>

420
00:20:13,510 --> 00:20:17,290
would configure<font color="#E5E5E5"> manually each of them</font>

421
00:20:15,760 --> 00:20:19,180
but right<font color="#E5E5E5"> now they're spawning</font>

422
00:20:17,290 --> 00:20:21,000
containers and<font color="#E5E5E5"> we would need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

423
00:20:19,180 --> 00:20:22,870
<font color="#E5E5E5">some way</font><font color="#CCCCCC"> of auto</font><font color="#E5E5E5"> configuration</font>

424
00:20:21,000 --> 00:20:24,760
<font color="#E5E5E5">auto-configure in tracing into</font><font color="#CCCCCC"> their</font>

425
00:20:22,870 --> 00:20:27,189
containers and having remote

426
00:20:24,760 --> 00:20:28,600
administration but that's that's

427
00:20:27,190 --> 00:20:30,400
something<font color="#E5E5E5"> we're interesting into in</font>

428
00:20:28,600 --> 00:20:31,530
looking at but<font color="#E5E5E5"> that's we don't</font><font color="#CCCCCC"> add it</font>

429
00:20:30,400 --> 00:20:36,570
right<font color="#CCCCCC"> now</font>

430
00:20:31,530 --> 00:20:36,570
all right<font color="#E5E5E5"> out of time thank you</font><font color="#CCCCCC"> Thanks</font>

431
00:20:36,880 --> 00:20:40,769
[Applause]

