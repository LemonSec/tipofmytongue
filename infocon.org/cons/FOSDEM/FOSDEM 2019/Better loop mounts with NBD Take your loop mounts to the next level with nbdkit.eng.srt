1
00:00:04,610 --> 00:00:10,219
and welcome<font color="#CCCCCC"> to my talk</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> loop</font>

2
00:00:07,790 --> 00:00:11,990
mounting and going beyond ordinary<font color="#CCCCCC"> loop</font>

3
00:00:10,219 --> 00:00:15,379
mounting<font color="#E5E5E5"> that you're used to now</font><font color="#CCCCCC"> I'm</font>

4
00:00:11,990 --> 00:00:17,119
sure<font color="#E5E5E5"> hopefully</font><font color="#CCCCCC"> most of you</font><font color="#E5E5E5"> here know</font>

5
00:00:15,379 --> 00:00:18,560
what loop mounting is but in case you

6
00:00:17,119 --> 00:00:22,040
don't I'm<font color="#E5E5E5"> just going</font><font color="#CCCCCC"> to give you a very</font>

7
00:00:18,560 --> 00:00:25,189
quick<font color="#CCCCCC"> demo of what I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> call</font>

8
00:00:22,040 --> 00:00:28,099
traditional<font color="#E5E5E5"> old-fashioned regular loop</font>

9
00:00:25,190 --> 00:00:29,990
mounting<font color="#E5E5E5"> so I've got a file on my laptop</font>

10
00:00:28,100 --> 00:00:33,620
<font color="#E5E5E5">here it's obviously it's a fedora disk</font>

11
00:00:29,990 --> 00:00:35,800
image it's<font color="#E5E5E5"> six gigabytes in size</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I</font>

12
00:00:33,620 --> 00:00:40,459
use the command<font color="#CCCCCC"> la set up to associate</font>

13
00:00:35,800 --> 00:00:43,250
files<font color="#E5E5E5"> with Linux kernel block devices</font><font color="#CCCCCC"> I</font>

14
00:00:40,460 --> 00:00:45,950
don't<font color="#E5E5E5"> have any loop</font><font color="#CCCCCC"> setup at the</font><font color="#E5E5E5"> moment</font>

15
00:00:43,250 --> 00:00:47,960
<font color="#E5E5E5">but I can associate this file with a</font>

16
00:00:45,950 --> 00:00:51,710
<font color="#E5E5E5">Linux kernel block device called devil</font>

17
00:00:47,960 --> 00:00:55,280
OOP<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> and I can look at partitions</font>

18
00:00:51,710 --> 00:00:57,770
<font color="#E5E5E5">and I can mount them that's loop</font>

19
00:00:55,280 --> 00:00:59,840
mounting and that's what<font color="#CCCCCC"> live mounting</font>

20
00:00:57,770 --> 00:01:01,489
does so that's that's<font color="#E5E5E5"> just</font><font color="#CCCCCC"> ordinary loop</font>

21
00:00:59,840 --> 00:01:02,660
mounting it's not necessarily what we're

22
00:01:01,489 --> 00:01:05,840
going to<font color="#E5E5E5"> be talking about</font><font color="#CCCCCC"> today although</font>

23
00:01:02,660 --> 00:01:08,060
conceptually<font color="#E5E5E5"> it's very similar now</font>

24
00:01:05,840 --> 00:01:10,670
traditional loop mounting is fine if

25
00:01:08,060 --> 00:01:13,040
it's a plain file<font color="#E5E5E5"> it falls over very</font>

26
00:01:10,670 --> 00:01:16,370
<font color="#CCCCCC">very quickly what happens if you've got</font>

27
00:01:13,040 --> 00:01:18,170
a compressed<font color="#CCCCCC"> disk image this isn't a</font>

28
00:01:16,370 --> 00:01:21,920
disk image that I've compressed<font color="#E5E5E5"> this is</font>

29
00:01:18,170 --> 00:01:23,570
how cloud images are distributed by the

30
00:01:21,920 --> 00:01:26,270
Fedora community and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> one that I</font>

31
00:01:23,570 --> 00:01:28,250
<font color="#CCCCCC">just downloaded from the</font><font color="#E5E5E5"> Fedora website</font>

32
00:01:26,270 --> 00:01:28,789
in exactly this<font color="#CCCCCC"> form I didn't modify in</font>

33
00:01:28,250 --> 00:01:31,549
any way

34
00:01:28,790 --> 00:01:33,830
it's<font color="#CCCCCC"> exed compressed and of course you</font>

35
00:01:31,549 --> 00:01:35,570
could turn<font color="#E5E5E5"> that</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> a loop device and</font>

36
00:01:33,830 --> 00:01:37,280
what would happen<font color="#CCCCCC"> is you'd end up with a</font>

37
00:01:35,570 --> 00:01:39,139
loop device that contained<font color="#E5E5E5"> exed</font>

38
00:01:37,280 --> 00:01:42,650
<font color="#E5E5E5">compressed data and it's my contention</font>

39
00:01:39,140 --> 00:01:45,200
<font color="#E5E5E5">today that that is not</font><font color="#CCCCCC"> what you meant by</font>

40
00:01:42,650 --> 00:01:47,450
<font color="#E5E5E5">loop mounting this what you what you</font>

41
00:01:45,200 --> 00:01:49,400
want it<font color="#E5E5E5"> to do is you'd like it to kind</font>

42
00:01:47,450 --> 00:01:52,939
<font color="#E5E5E5">of transparently uncompress so you can</font>

43
00:01:49,400 --> 00:01:54,799
see the data inside and we<font color="#E5E5E5"> can do that</font>

44
00:01:52,939 --> 00:01:57,949
<font color="#CCCCCC">using a command called NBD kit</font><font color="#E5E5E5"> which I'm</font>

45
00:01:54,799 --> 00:02:01,000
going to<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about in a minute</font><font color="#E5E5E5"> and that</font>

46
00:01:57,950 --> 00:02:05,030
creates the process which is<font color="#CCCCCC"> running</font><font color="#E5E5E5"> and</font>

47
00:02:01,000 --> 00:02:07,759
now I use<font color="#E5E5E5"> a command to associate</font><font color="#CCCCCC"> that</font>

48
00:02:05,030 --> 00:02:09,348
process<font color="#E5E5E5"> with a loop device it's a</font>

49
00:02:07,759 --> 00:02:12,770
different command<font color="#E5E5E5"> it's MBD client it's</font>

50
00:02:09,348 --> 00:02:15,679
conceptually similar and you can see

51
00:02:12,770 --> 00:02:17,180
there look the size four oh nine six

52
00:02:15,680 --> 00:02:18,320
megabytes four<font color="#E5E5E5"> gigabytes so that's not</font>

53
00:02:17,180 --> 00:02:20,390
the compress

54
00:02:18,320 --> 00:02:21,859
that's the<font color="#E5E5E5"> uncompressed size what this</font>

55
00:02:20,390 --> 00:02:23,570
is doing is<font color="#CCCCCC"> its transparently</font>

56
00:02:21,860 --> 00:02:26,060
uncompressing it's not uncompressing the

57
00:02:23,570 --> 00:02:27,739
whole thing<font color="#E5E5E5"> it's only uncompressing the</font>

58
00:02:26,060 --> 00:02:34,400
blocks that are being used when you

59
00:02:27,740 --> 00:02:43,040
request<font color="#E5E5E5"> them and I can mount that and I</font>

60
00:02:34,400 --> 00:02:47,390
can look at<font color="#CCCCCC"> it and I can even</font><font color="#E5E5E5"> crate</font>

61
00:02:43,040 --> 00:02:50,000
files etc<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> is what I'm going to</font>

62
00:02:47,390 --> 00:02:53,690
be talking<font color="#CCCCCC"> about today</font><font color="#E5E5E5"> how does this</font>

63
00:02:50,000 --> 00:02:55,430
<font color="#E5E5E5">differ from</font><font color="#CCCCCC"> loop mounting well</font><font color="#E5E5E5"> in both</font>

64
00:02:53,690 --> 00:02:56,210
cases<font color="#E5E5E5"> got a kernel</font><font color="#CCCCCC"> module on the left</font>

65
00:02:55,430 --> 00:02:59,180
<font color="#CCCCCC">hand</font><font color="#E5E5E5"> side</font>

66
00:02:56,210 --> 00:03:01,610
<font color="#E5E5E5">Luque oh it's a kernel module</font><font color="#CCCCCC"> and it's</font>

67
00:02:59,180 --> 00:03:04,750
configured using<font color="#E5E5E5"> a command</font><font color="#CCCCCC"> line utility</font>

68
00:03:01,610 --> 00:03:07,520
<font color="#E5E5E5">ello</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> and you use that</font><font color="#CCCCCC"> to create</font>

69
00:03:04,750 --> 00:03:09,740
Linux kernel block devices<font color="#E5E5E5"> like dev loop</font>

70
00:03:07,520 --> 00:03:12,710
<font color="#CCCCCC">zero on the</font><font color="#E5E5E5"> right hand side I've got</font><font color="#CCCCCC"> a</font>

71
00:03:09,740 --> 00:03:14,210
kernel module<font color="#CCCCCC"> MBD doc ko</font><font color="#E5E5E5"> it's configured</font>

72
00:03:12,710 --> 00:03:16,430
using<font color="#CCCCCC"> a</font><font color="#E5E5E5"> command line</font><font color="#CCCCCC"> client</font>

73
00:03:14,210 --> 00:03:18,830
MBD client<font color="#CCCCCC"> and it creates loop devices</font>

74
00:03:16,430 --> 00:03:21,410
or Linux kernel block devices<font color="#CCCCCC"> bev</font><font color="#E5E5E5"> MBD</font>

75
00:03:18,830 --> 00:03:23,480
<font color="#CCCCCC">zero etc but the back end as you can see</font>

76
00:03:21,410 --> 00:03:26,660
is a little<font color="#CCCCCC"> bit different</font><font color="#E5E5E5"> on the left</font>

77
00:03:23,480 --> 00:03:28,940
<font color="#E5E5E5">hand side the back end is it's talking</font>

78
00:03:26,660 --> 00:03:31,790
<font color="#E5E5E5">over internal Linux kernel</font><font color="#CCCCCC"> api's like</font>

79
00:03:28,940 --> 00:03:33,859
the VFS<font color="#CCCCCC"> two to the file</font><font color="#E5E5E5"> which is</font>

80
00:03:31,790 --> 00:03:36,590
associated<font color="#E5E5E5"> with the loop device on the</font>

81
00:03:33,860 --> 00:03:38,000
<font color="#CCCCCC">right</font><font color="#E5E5E5"> hand side we've got a user process</font>

82
00:03:36,590 --> 00:03:40,220
running<font color="#E5E5E5"> and this is critical we've got a</font>

83
00:03:38,000 --> 00:03:42,800
user process<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case it's called</font>

84
00:03:40,220 --> 00:03:45,170
<font color="#E5E5E5">MBD kit but I should say that other MBD</font>

85
00:03:42,800 --> 00:03:48,110
servers are available<font color="#CCCCCC"> and other very</font>

86
00:03:45,170 --> 00:03:50,780
very<font color="#E5E5E5"> good</font><font color="#CCCCCC"> NBD servers are available</font><font color="#E5E5E5"> and</font>

87
00:03:48,110 --> 00:03:55,790
it's talking the kernel is talking to

88
00:03:50,780 --> 00:03:59,840
<font color="#E5E5E5">that process using a tcp port or a UNIX</font>

89
00:03:55,790 --> 00:04:02,390
domain socket as you as you require<font color="#CCCCCC"> now</font>

90
00:03:59,840 --> 00:04:05,630
<font color="#E5E5E5">I'm going to demonstrate in this talk</font>

91
00:04:02,390 --> 00:04:07,399
<font color="#CCCCCC">NBD</font><font color="#E5E5E5"> kit which is a MBD server that I</font>

92
00:04:05,630 --> 00:04:11,900
wrote with a guy<font color="#CCCCCC"> called Eric Blake is a</font>

93
00:04:07,400 --> 00:04:13,700
brilliant term free software hacker<font color="#CCCCCC"> MBD</font>

94
00:04:11,900 --> 00:04:15,230
kid is slightly<font color="#CCCCCC"> different</font><font color="#E5E5E5"> from other NBD</font>

95
00:04:13,700 --> 00:04:17,930
servers in<font color="#CCCCCC"> that we have this plug-in</font><font color="#E5E5E5"> API</font>

96
00:04:15,230 --> 00:04:20,029
<font color="#CCCCCC">it's a stable API</font><font color="#E5E5E5"> which means that you</font>

97
00:04:17,930 --> 00:04:21,858
can write a plug-in<font color="#E5E5E5"> now or indeed</font><font color="#CCCCCC"> you</font>

98
00:04:20,029 --> 00:04:24,349
could have written a plug-in<font color="#E5E5E5"> in back in</font>

99
00:04:21,858 --> 00:04:25,969
2013<font color="#CCCCCC"> when we started the project and it</font>

100
00:04:24,350 --> 00:04:27,890
would<font color="#E5E5E5"> still be compile a ball with NBD</font>

101
00:04:25,970 --> 00:04:29,540
kit now and it's still compiler<font color="#CCCCCC"> bull in</font>

102
00:04:27,890 --> 00:04:31,050
the future as we<font color="#CCCCCC"> go</font><font color="#E5E5E5"> up we're</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> going</font>

103
00:04:29,540 --> 00:04:34,229
to<font color="#E5E5E5"> break</font><font color="#CCCCCC"> plugins</font>

104
00:04:31,050 --> 00:04:36,840
the source level<font color="#E5E5E5"> it also has an</font><font color="#CCCCCC"> API</font>

105
00:04:34,229 --> 00:04:40,860
<font color="#E5E5E5">guarantee that means you can compile</font>

106
00:04:36,840 --> 00:04:42,960
your<font color="#CCCCCC"> plugin</font><font color="#E5E5E5"> and you can distribute it</font>

107
00:04:40,860 --> 00:04:45,360
separately from<font color="#E5E5E5"> a</font><font color="#CCCCCC"> MIDI kit</font><font color="#E5E5E5"> as a binary</font>

108
00:04:42,960 --> 00:04:46,469
<font color="#E5E5E5">and loaded into a media kit at some</font>

109
00:04:45,360 --> 00:04:48,360
point<font color="#E5E5E5"> later on we're not going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> break</font>

110
00:04:46,470 --> 00:04:49,889
<font color="#E5E5E5">that even even as we evolve m UD case</font>

111
00:04:48,360 --> 00:04:52,409
and in<font color="#E5E5E5"> fact we</font><font color="#CCCCCC"> evolved</font><font color="#E5E5E5"> the API we don't</font>

112
00:04:49,889 --> 00:04:53,789
break source or binary compatibility<font color="#E5E5E5"> if</font>

113
00:04:52,409 --> 00:04:54,629
you don't want to write a plug-in<font color="#CCCCCC"> and</font>

114
00:04:53,789 --> 00:04:55,919
I'm going<font color="#E5E5E5"> to show you in a minute how</font>

115
00:04:54,629 --> 00:04:57,090
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can write a plug-in you'll see it's</font>

116
00:04:55,919 --> 00:04:59,639
very<font color="#E5E5E5"> simple but if you don't want to</font>

117
00:04:57,090 --> 00:05:01,799
write a plug-in<font color="#E5E5E5"> many other plugins are</font>

118
00:04:59,639 --> 00:05:05,280
available<font color="#CCCCCC"> and I've listed the</font><font color="#E5E5E5"> ones which</font>

119
00:05:01,800 --> 00:05:06,990
are<font color="#CCCCCC"> in MBD kick</font><font color="#E5E5E5"> 1.10 on here some of</font>

120
00:05:05,280 --> 00:05:10,080
these plugins aren't quite like<font color="#E5E5E5"> the</font>

121
00:05:06,990 --> 00:05:11,219
others these are plugins<font color="#CCCCCC"> like</font><font color="#E5E5E5"> Perl</font>

122
00:05:10,080 --> 00:05:12,870
Python and<font color="#E5E5E5"> what they are</font><font color="#CCCCCC"> they're</font>

123
00:05:11,219 --> 00:05:15,000
basically<font color="#E5E5E5"> gateways to writing plugins</font>

124
00:05:12,870 --> 00:05:16,409
<font color="#E5E5E5">into in</font><font color="#CCCCCC"> non-si languages so you</font><font color="#E5E5E5"> can</font>

125
00:05:15,000 --> 00:05:19,500
write<font color="#E5E5E5"> plugins and scripting languages</font>

126
00:05:16,409 --> 00:05:23,879
<font color="#E5E5E5">even in shell scripts if you're not very</font>

127
00:05:19,500 --> 00:05:25,620
happy<font color="#CCCCCC"> with writing</font><font color="#E5E5E5"> C plugins now the</font>

128
00:05:23,879 --> 00:05:27,210
other concept<font color="#E5E5E5"> that MBD kit has is</font>

129
00:05:25,620 --> 00:05:29,159
filters you can<font color="#E5E5E5"> think of a plug-in</font><font color="#CCCCCC"> if</font>

130
00:05:27,210 --> 00:05:31,909
you like is a kind<font color="#CCCCCC"> of data source it's</font>

131
00:05:29,159 --> 00:05:36,569
like a source of disk images but filters

132
00:05:31,909 --> 00:05:39,060
<font color="#E5E5E5">they apply modifications changes to that</font>

133
00:05:36,569 --> 00:05:41,759
data<font color="#E5E5E5"> source as an example here the</font>

134
00:05:39,060 --> 00:05:43,529
partition<font color="#E5E5E5"> plugin if your source is</font><font color="#CCCCCC"> a</font>

135
00:05:41,759 --> 00:05:45,300
<font color="#CCCCCC">hole disk image</font><font color="#E5E5E5"> a partitioned disk image</font>

136
00:05:43,529 --> 00:05:47,279
but you<font color="#E5E5E5"> really want to serve one of the</font>

137
00:05:45,300 --> 00:05:49,560
partitions over<font color="#CCCCCC"> MBD you can apply the</font>

138
00:05:47,279 --> 00:05:52,740
partition filter which selects<font color="#E5E5E5"> a</font>

139
00:05:49,560 --> 00:05:54,960
partition and<font color="#CCCCCC"> each running MBD can</font>

140
00:05:52,740 --> 00:05:57,599
instance must have exactly<font color="#E5E5E5"> one plugin</font>

141
00:05:54,960 --> 00:05:59,130
<font color="#E5E5E5">running in it but it can have a 0</font><font color="#CCCCCC"> or any</font>

142
00:05:57,599 --> 00:06:01,949
number<font color="#CCCCCC"> of filters and in this case I've</font>

143
00:05:59,130 --> 00:06:04,020
selected the file<font color="#CCCCCC"> plug-in so I can my</font>

144
00:06:01,949 --> 00:06:05,430
source is a local file<font color="#E5E5E5"> but as it's a</font>

145
00:06:04,020 --> 00:06:08,370
compressed file I'm going<font color="#CCCCCC"> to apply the</font>

146
00:06:05,430 --> 00:06:09,930
<font color="#CCCCCC">exit filter on top</font><font color="#E5E5E5"> to transparently</font>

147
00:06:08,370 --> 00:06:12,000
uncompress it<font color="#E5E5E5"> and then I'm going to</font>

148
00:06:09,930 --> 00:06:13,680
<font color="#E5E5E5">apply the partition filter to select a</font>

149
00:06:12,000 --> 00:06:15,330
<font color="#CCCCCC">partition and then I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> apply</font>

150
00:06:13,680 --> 00:06:17,310
the cow filter because I want<font color="#CCCCCC"> to make a</font>

151
00:06:15,330 --> 00:06:20,099
writable overlay which<font color="#E5E5E5"> I can say that</font>

152
00:06:17,310 --> 00:06:23,250
<font color="#E5E5E5">took you care too far later and this</font><font color="#CCCCCC"> is</font>

153
00:06:20,099 --> 00:06:27,240
<font color="#CCCCCC">how you would Express that</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> MVD</font>

154
00:06:23,250 --> 00:06:29,370
<font color="#E5E5E5">command line so you put every</font><font color="#CCCCCC"> d kip the</font>

155
00:06:27,240 --> 00:06:30,539
name of the program the list of the

156
00:06:29,370 --> 00:06:32,009
filters now you might<font color="#CCCCCC"> think</font><font color="#E5E5E5"> of these</font>

157
00:06:30,539 --> 00:06:34,740
<font color="#E5E5E5">filters if you like</font><font color="#CCCCCC"> as being in reverse</font>

158
00:06:32,009 --> 00:06:36,900
order<font color="#E5E5E5"> or they're in reverse order</font><font color="#CCCCCC"> from</font>

159
00:06:34,740 --> 00:06:38,909
the distance they<font color="#CCCCCC"> are from the plug-in</font>

160
00:06:36,900 --> 00:06:40,620
if you see what I mean<font color="#E5E5E5"> or another way to</font>

161
00:06:38,909 --> 00:06:42,480
think<font color="#E5E5E5"> about it is that when an</font><font color="#CCCCCC"> NBD</font>

162
00:06:40,620 --> 00:06:43,800
request comes<font color="#CCCCCC"> into the server</font>

163
00:06:42,480 --> 00:06:46,590
travels through the filters in this

164
00:06:43,800 --> 00:06:49,440
order<font color="#CCCCCC"> and then at the bottom here I've</font>

165
00:06:46,590 --> 00:06:51,000
got the<font color="#E5E5E5"> the name of the plug-in and then</font>

166
00:06:49,440 --> 00:06:52,650
any parameters that the plug-in needs

167
00:06:51,000 --> 00:06:53,880
obviously<font color="#CCCCCC"> the file plug-in needs to know</font>

168
00:06:52,650 --> 00:06:56,090
<font color="#E5E5E5">which file</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to serve so I've</font>

169
00:06:53,880 --> 00:07:00,240
<font color="#E5E5E5">given</font><font color="#CCCCCC"> that the disc name the file name</font>

170
00:06:56,090 --> 00:07:02,190
and then filters may also require

171
00:07:00,240 --> 00:07:05,040
parameters as well in this case the

172
00:07:02,190 --> 00:07:06,480
partition filter wants<font color="#E5E5E5"> to know which</font>

173
00:07:05,040 --> 00:07:12,210
partition<font color="#CCCCCC"> you want to serve so</font><font color="#E5E5E5"> you have</font>

174
00:07:06,480 --> 00:07:14,460
to give that as a parameter now<font color="#CCCCCC"> I wanted</font>

175
00:07:12,210 --> 00:07:16,229
<font color="#E5E5E5">to demonstrate actually writing a</font>

176
00:07:14,460 --> 00:07:18,989
<font color="#E5E5E5">plug-in and</font><font color="#CCCCCC"> well obviously do it</font><font color="#E5E5E5"> very</font>

177
00:07:16,230 --> 00:07:20,010
<font color="#E5E5E5">quickly so I don't bore you</font><font color="#CCCCCC"> and I was</font>

178
00:07:18,990 --> 00:07:23,460
<font color="#E5E5E5">trying to think</font><font color="#CCCCCC"> you know what could</font><font color="#E5E5E5"> I</font>

179
00:07:20,010 --> 00:07:24,870
what could I do to demonstrate<font color="#E5E5E5"> to</font>

180
00:07:23,460 --> 00:07:27,510
demonstrate writing a<font color="#CCCCCC"> plugin I thought</font>

181
00:07:24,870 --> 00:07:30,030
I'd write<font color="#E5E5E5"> a test device</font><font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

182
00:07:27,510 --> 00:07:32,280
write a<font color="#E5E5E5"> Linux kernel device to test the</font>

183
00:07:30,030 --> 00:07:34,380
bad blocks command now<font color="#E5E5E5"> quite a young</font>

184
00:07:32,280 --> 00:07:36,150
audience here and we<font color="#E5E5E5"> haven't used the</font>

185
00:07:34,380 --> 00:07:39,120
bad blocks command for a really long

186
00:07:36,150 --> 00:07:43,560
<font color="#E5E5E5">time perhaps since we've had IDE this in</font>

187
00:07:39,120 --> 00:07:46,950
the early 90s<font color="#E5E5E5"> but before then</font><font color="#CCCCCC"> all great</font>

188
00:07:43,560 --> 00:07:49,770
people<font color="#E5E5E5"> will remember our allel and in FM</font>

189
00:07:46,950 --> 00:07:53,729
<font color="#CCCCCC">disks everyone's looking a bit confused</font>

190
00:07:49,770 --> 00:07:55,799
but floppy disks remember those<font color="#CCCCCC"> no in</font>

191
00:07:53,730 --> 00:07:58,230
those<font color="#E5E5E5"> in those systems</font><font color="#CCCCCC"> when there was an</font>

192
00:07:55,800 --> 00:08:01,140
error on the surface of<font color="#E5E5E5"> the disk</font><font color="#CCCCCC"> I mean</font>

193
00:07:58,230 --> 00:08:02,760
that would appear on<font color="#CCCCCC"> the file that the</font>

194
00:08:01,140 --> 00:08:05,280
filesystem layer so<font color="#E5E5E5"> you had to run the</font>

195
00:08:02,760 --> 00:08:09,539
bad blocks<font color="#E5E5E5"> come out and first to find</font>

196
00:08:05,280 --> 00:08:11,250
these bad sectors and then it would sort

197
00:08:09,540 --> 00:08:13,260
of produce<font color="#E5E5E5"> a list of blocks which were</font>

198
00:08:11,250 --> 00:08:14,970
bad<font color="#E5E5E5"> and it would pass it over to mkfs</font>

199
00:08:13,260 --> 00:08:18,570
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> kfs can actually work around</font>

200
00:08:14,970 --> 00:08:22,260
this<font color="#E5E5E5"> bye-bye yeah anyway so that's the</font>

201
00:08:18,570 --> 00:08:23,790
<font color="#E5E5E5">bad blocks command and this is the</font>

202
00:08:22,260 --> 00:08:25,260
device<font color="#E5E5E5"> I'm going to write to test that</font>

203
00:08:23,790 --> 00:08:27,510
it's going<font color="#E5E5E5"> to be a big</font><font color="#CCCCCC"> virtual device</font>

204
00:08:25,260 --> 00:08:30,930
<font color="#E5E5E5">it's gonna have a bad sector somewhere</font>

205
00:08:27,510 --> 00:08:34,380
in it<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> idea is whenever the</font>

206
00:08:30,930 --> 00:08:36,450
kernel requests or reads from that bad

207
00:08:34,380 --> 00:08:37,770
sector so whenever<font color="#E5E5E5"> my request contains</font>

208
00:08:36,450 --> 00:08:41,460
the bad sector is<font color="#E5E5E5"> going to return an</font>

209
00:08:37,770 --> 00:08:42,659
error<font color="#E5E5E5"> but any other place</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the disk</font>

210
00:08:41,460 --> 00:08:45,060
<font color="#CCCCCC">that it tries to</font><font color="#E5E5E5"> read a script and</font>

211
00:08:42,659 --> 00:08:48,870
<font color="#E5E5E5">return some data so nice and simple demo</font>

212
00:08:45,060 --> 00:08:50,939
let's let's write<font color="#CCCCCC"> that now</font><font color="#E5E5E5"> what's a good</font>

213
00:08:48,870 --> 00:08:52,700
<font color="#CCCCCC">language for writing</font><font color="#E5E5E5"> Linux kernel block</font>

214
00:08:50,940 --> 00:08:55,650
devices<font color="#E5E5E5"> in</font>

215
00:08:52,700 --> 00:08:59,100
- yep

216
00:08:55,650 --> 00:09:01,230
- so the first<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> MBDA is going to do</font>

217
00:08:59,100 --> 00:09:04,170
is it's<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> send me a request for</font>

218
00:09:01,230 --> 00:09:08,700
the size of the<font color="#CCCCCC"> disk so I'm just going</font>

219
00:09:04,170 --> 00:09:12,270
<font color="#CCCCCC">to return return</font><font color="#E5E5E5"> any size doesn't matter</font>

220
00:09:08,700 --> 00:09:13,950
64 megabytes is fine<font color="#CCCCCC"> and then anybody</font>

221
00:09:12,270 --> 00:09:17,040
<font color="#CCCCCC">kit will send me a request each time</font>

222
00:09:13,950 --> 00:09:20,040
there's a read so I'm gonna the request

223
00:09:17,040 --> 00:09:21,900
is called P read<font color="#E5E5E5"> and the parameters for</font>

224
00:09:20,040 --> 00:09:25,110
that so yeah dollar<font color="#CCCCCC"> Wang that's that's</font>

225
00:09:21,900 --> 00:09:26,760
the literal string he read dollar<font color="#CCCCCC"> two is</font>

226
00:09:25,110 --> 00:09:31,730
a handle which we're not using here

227
00:09:26,760 --> 00:09:36,060
<font color="#CCCCCC">dollar</font><font color="#E5E5E5"> three is the size in bytes and</font>

228
00:09:31,730 --> 00:09:40,260
the dollar<font color="#CCCCCC"> 4 is the offset in bytes of</font>

229
00:09:36,060 --> 00:09:42,449
<font color="#E5E5E5">the request</font><font color="#CCCCCC"> so right</font><font color="#E5E5E5"> her error case</font>

230
00:09:40,260 --> 00:09:45,300
so the error case is if my request

231
00:09:42,450 --> 00:09:46,800
contains<font color="#E5E5E5"> the bad bad sectoral bad bytes</font>

232
00:09:45,300 --> 00:09:50,790
so I'm going to put the bad bite at a

233
00:09:46,800 --> 00:09:53,219
hundred thousand so if my offset is is

234
00:09:50,790 --> 00:09:54,599
less than the bad<font color="#CCCCCC"> buy and the offset</font>

235
00:09:53,220 --> 00:09:56,550
<font color="#E5E5E5">plus the size is bigger than the bad</font>

236
00:09:54,600 --> 00:09:59,670
bite that<font color="#E5E5E5"> means that the bad bite is in</font>

237
00:09:56,550 --> 00:10:01,140
the request<font color="#E5E5E5"> agreed little done pair</font>

238
00:09:59,670 --> 00:10:03,449
programming where you<font color="#E5E5E5"> have people</font>

239
00:10:01,140 --> 00:10:04,590
looking<font color="#E5E5E5"> at you you can pair frogging</font>

240
00:10:03,450 --> 00:10:05,610
with a<font color="#E5E5E5"> hundred people</font><font color="#CCCCCC"> that gave you a</font>

241
00:10:04,590 --> 00:10:09,450
<font color="#CCCCCC">shoulder</font>

242
00:10:05,610 --> 00:10:14,790
okay so my offset less than the bad bite

243
00:10:09,450 --> 00:10:18,180
<font color="#E5E5E5">that was a hundred thousand and so and</font>

244
00:10:14,790 --> 00:10:22,110
the the size<font color="#E5E5E5"> sorry they offset plus the</font>

245
00:10:18,180 --> 00:10:27,000
size it's also dollar<font color="#CCCCCC"> four plus the</font><font color="#E5E5E5"> size</font>

246
00:10:22,110 --> 00:10:28,950
if that's greater than<font color="#E5E5E5"> the bad bite I've</font>

247
00:10:27,000 --> 00:10:31,500
got the right<font color="#CCCCCC"> number of zeros there</font><font color="#E5E5E5"> so</font>

248
00:10:28,950 --> 00:10:35,250
this<font color="#E5E5E5"> is my error case so I just have to</font>

249
00:10:31,500 --> 00:10:37,680
echo the error number that I want<font color="#E5E5E5"> so a</font>

250
00:10:35,250 --> 00:10:39,210
<font color="#CCCCCC">IO and then just something that</font><font color="#E5E5E5"> goes in</font>

251
00:10:37,680 --> 00:10:42,560
syslog<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I have seen that</font><font color="#CCCCCC"> to stutter</font>

252
00:10:39,210 --> 00:10:44,760
<font color="#CCCCCC">and I have to exit with an error</font><font color="#E5E5E5"> code</font>

253
00:10:42,560 --> 00:10:46,199
<font color="#E5E5E5">right so that's that's the error case</font>

254
00:10:44,760 --> 00:10:49,650
the other case is what I'm<font color="#E5E5E5"> just reading</font>

255
00:10:46,200 --> 00:10:52,620
somewhere<font color="#E5E5E5"> else in</font><font color="#CCCCCC"> the disk</font><font color="#E5E5E5"> and I want I</font>

256
00:10:49,650 --> 00:10:55,380
<font color="#E5E5E5">want to have to return a block of size</font>

257
00:10:52,620 --> 00:10:56,820
bytes back to<font color="#CCCCCC"> Emma diecut</font><font color="#E5E5E5"> so I'm gonna</font>

258
00:10:55,380 --> 00:11:03,480
return<font color="#E5E5E5"> just zeros doesn't matter what I</font>

259
00:10:56,820 --> 00:11:06,310
<font color="#E5E5E5">return so pay is DD from</font><font color="#CCCCCC"> def zero</font>

260
00:11:03,480 --> 00:11:10,300
<font color="#E5E5E5">I'm type here and I want to return</font>

261
00:11:06,310 --> 00:11:13,150
<font color="#E5E5E5">exactly</font><font color="#CCCCCC"> bytes dollar three sighs I'm</font>

262
00:11:10,300 --> 00:11:16,300
<font color="#E5E5E5">going to return so if I</font><font color="#CCCCCC"> said the block</font>

263
00:11:13,150 --> 00:11:17,650
size to<font color="#CCCCCC"> be dollar three and I set the</font>

264
00:11:16,300 --> 00:11:22,780
count to what and<font color="#CCCCCC"> that should return</font>

265
00:11:17,650 --> 00:11:25,860
that number of<font color="#E5E5E5"> zeros</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so yeah so</font>

266
00:11:22,780 --> 00:11:31,000
that<font color="#CCCCCC"> that's it that's my complete</font><font color="#E5E5E5"> bash</font>

267
00:11:25,860 --> 00:11:33,010
script<font color="#E5E5E5"> Linux block device</font><font color="#CCCCCC"> and so to do</font>

268
00:11:31,000 --> 00:11:34,630
that I'm<font color="#CCCCCC"> just going to</font><font color="#E5E5E5"> run it</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we're</font>

269
00:11:33,010 --> 00:11:37,630
an immediate name of the plug-in which

270
00:11:34,630 --> 00:11:38,530
is<font color="#CCCCCC"> Shah and the</font><font color="#E5E5E5"> Shah plug-in needs the</font>

271
00:11:37,630 --> 00:11:42,670
name of the script<font color="#CCCCCC"> which</font><font color="#E5E5E5"> I've just</font>

272
00:11:38,530 --> 00:11:45,339
<font color="#CCCCCC">written so moment of truth here</font><font color="#E5E5E5"> if I</font>

273
00:11:42,670 --> 00:11:47,949
associate<font color="#CCCCCC"> that</font><font color="#E5E5E5"> right so a good thing</font>

274
00:11:45,340 --> 00:11:50,920
<font color="#CCCCCC">there is the size</font><font color="#E5E5E5"> 64 megabytes remember</font>

275
00:11:47,950 --> 00:11:52,750
we remember<font color="#CCCCCC"> we set the size the 64</font>

276
00:11:50,920 --> 00:11:57,760
megabytes so<font color="#E5E5E5"> that's good</font>

277
00:11:52,750 --> 00:11:59,590
and now if I run<font color="#E5E5E5"> bad blocks that worked</font>

278
00:11:57,760 --> 00:12:01,290
<font color="#E5E5E5">now you might say why is that printed</font>

279
00:11:59,590 --> 00:12:03,520
<font color="#CCCCCC">out for numbers when there was only one</font>

280
00:12:01,290 --> 00:12:06,040
bad block and the reason<font color="#E5E5E5"> for this is</font>

281
00:12:03,520 --> 00:12:09,130
<font color="#CCCCCC">that</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> the bad blocks commands</font><font color="#E5E5E5"> read</font>

282
00:12:06,040 --> 00:12:12,939
the<font color="#CCCCCC"> disc in 4k chunks</font><font color="#E5E5E5"> and when it hits a</font>

283
00:12:09,130 --> 00:12:14,260
bad for catch uncle put has to be in one

284
00:12:12,940 --> 00:12:15,700
<font color="#CCCCCC">cage hung so it just says well there</font>

285
00:12:14,260 --> 00:12:18,250
must<font color="#E5E5E5"> be four bad chunks so</font><font color="#CCCCCC"> it doesn't it</font>

286
00:12:15,700 --> 00:12:19,960
<font color="#E5E5E5">doesn't sort of go in any deeper and try</font>

287
00:12:18,250 --> 00:12:21,640
to work out which of the blocks is bad

288
00:12:19,960 --> 00:12:24,100
it's just that's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> way bad blocks</font>

289
00:12:21,640 --> 00:12:26,380
works so it's good<font color="#CCCCCC"> that bad blocks</font><font color="#E5E5E5"> we've</font>

290
00:12:24,100 --> 00:12:30,060
proven here doesn't<font color="#E5E5E5"> have any bugs even</font>

291
00:12:26,380 --> 00:12:31,950
<font color="#CCCCCC">though nobody's used this since 1992</font>

292
00:12:30,060 --> 00:12:33,959
<font color="#E5E5E5">yeah all right</font>

293
00:12:31,950 --> 00:12:36,850
thank<font color="#E5E5E5"> you thank you very much</font>

294
00:12:33,960 --> 00:12:39,620
[Applause]

295
00:12:36,850 --> 00:12:41,779
<font color="#E5E5E5">okay so you don't have to write</font><font color="#CCCCCC"> plugins</font>

296
00:12:39,620 --> 00:12:42,950
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can use existing plugins we've got</font>

297
00:12:41,779 --> 00:12:43,939
loads of<font color="#E5E5E5"> them I don't know what to</font>

298
00:12:42,950 --> 00:12:45,529
demonstrate<font color="#E5E5E5"> so I'm just going</font><font color="#CCCCCC"> to</font>

299
00:12:43,940 --> 00:12:47,420
demonstrate<font color="#CCCCCC"> two fairly</font><font color="#E5E5E5"> much at random</font>

300
00:12:45,529 --> 00:12:49,610
<font color="#E5E5E5">the floppy</font><font color="#CCCCCC"> plug-in</font><font color="#E5E5E5"> and the memory</font>

301
00:12:47,420 --> 00:12:53,510
<font color="#E5E5E5">plug-in which is a ram disk so the</font>

302
00:12:49,610 --> 00:12:55,190
floppy<font color="#CCCCCC"> plug in first</font><font color="#E5E5E5"> real simple</font><font color="#CCCCCC"> you see</font>

303
00:12:53,510 --> 00:12:57,589
<font color="#E5E5E5">a media kit name of the plug-in which is</font>

304
00:12:55,190 --> 00:12:58,700
floppy<font color="#E5E5E5"> any directory this happens to be</font>

305
00:12:57,589 --> 00:13:03,230
the directory of<font color="#CCCCCC"> the source code of a</font>

306
00:12:58,700 --> 00:13:04,880
MIDI kit<font color="#E5E5E5"> and same old</font><font color="#CCCCCC"> EMA</font><font color="#E5E5E5"> decline</font>

307
00:13:03,230 --> 00:13:08,089
command to associate<font color="#CCCCCC"> that with a loop</font>

308
00:13:04,880 --> 00:13:12,730
device<font color="#E5E5E5"> and should pop up in a second</font>

309
00:13:08,089 --> 00:13:16,610
there<font color="#E5E5E5"> it goes</font><font color="#CCCCCC"> so that popped up that's</font><font color="#E5E5E5"> a</font>

310
00:13:12,730 --> 00:13:20,709
that is a floppy disk image which

311
00:13:16,610 --> 00:13:22,820
contains the source of a media kit and

312
00:13:20,709 --> 00:13:25,250
what exactly<font color="#E5E5E5"> happened there well what I</font>

313
00:13:22,820 --> 00:13:27,200
did was<font color="#CCCCCC"> I</font><font color="#E5E5E5"> took a a file system from my</font>

314
00:13:25,250 --> 00:13:30,260
<font color="#E5E5E5">host I turned it into a floppy disk like</font>

315
00:13:27,200 --> 00:13:32,839
a fat formatted<font color="#CCCCCC"> you know MBR partition</font>

316
00:13:30,260 --> 00:13:37,040
<font color="#CCCCCC">disk image and I loop mounted it on my</font>

317
00:13:32,839 --> 00:13:38,720
host again why is that useful<font color="#E5E5E5"> well one</font>

318
00:13:37,040 --> 00:13:40,670
thing you<font color="#E5E5E5"> can actually genuinely use</font>

319
00:13:38,720 --> 00:13:44,240
this for<font color="#CCCCCC"> is to export disk images really</font>

320
00:13:40,670 --> 00:13:46,010
really easily to<font color="#E5E5E5"> virtual</font><font color="#CCCCCC"> machines or two</font>

321
00:13:44,240 --> 00:13:47,990
containers some container systems let

322
00:13:46,010 --> 00:13:50,029
you just export a disk image and it gets

323
00:13:47,990 --> 00:13:51,829
a loop mounted inside<font color="#CCCCCC"> the container</font><font color="#E5E5E5"> when</font>

324
00:13:50,029 --> 00:13:53,810
this is<font color="#E5E5E5"> actually really</font><font color="#CCCCCC"> really useful</font><font color="#E5E5E5"> is</font>

325
00:13:51,829 --> 00:13:56,410
actually not<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the loop mounting case</font>

326
00:13:53,810 --> 00:13:59,569
that's when you're creating<font color="#E5E5E5"> a pixie</font>

327
00:13:56,410 --> 00:14:00,920
<font color="#E5E5E5">client a pixie server and your pixie</font>

328
00:13:59,570 --> 00:14:03,020
client needs to<font color="#E5E5E5"> be given a root</font>

329
00:14:00,920 --> 00:14:04,370
filesystem<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> traditional way you</font>

330
00:14:03,020 --> 00:14:06,740
do that<font color="#E5E5E5"> is you</font><font color="#CCCCCC"> have you create</font><font color="#E5E5E5"> like a</font>

331
00:14:04,370 --> 00:14:09,589
massive<font color="#E5E5E5"> init Rama fest that you</font><font color="#CCCCCC"> TFTP</font>

332
00:14:06,740 --> 00:14:11,899
over to the<font color="#CCCCCC"> client</font><font color="#E5E5E5"> at boot time which is</font>

333
00:14:09,589 --> 00:14:15,020
slow<font color="#CCCCCC"> TFTP is unreliable it's not</font>

334
00:14:11,899 --> 00:14:17,750
<font color="#E5E5E5">encrypted etc etc MBD is encryption</font>

335
00:14:15,020 --> 00:14:21,560
authenticated it's a<font color="#E5E5E5"> super efficient</font>

336
00:14:17,750 --> 00:14:23,120
protocol thanks very much<font color="#E5E5E5"> and yeah it's</font>

337
00:14:21,560 --> 00:14:24,439
<font color="#CCCCCC">just a much better protocol to the</font><font color="#E5E5E5"> only</font>

338
00:14:23,120 --> 00:14:26,690
fetches the<font color="#E5E5E5"> bits that it actually</font><font color="#CCCCCC"> needs</font>

339
00:14:24,440 --> 00:14:28,820
to<font color="#E5E5E5"> read so you can have much bigger</font><font color="#CCCCCC"> root</font>

340
00:14:26,690 --> 00:14:31,520
filesystem so it's actually it's a<font color="#E5E5E5"> kind</font>

341
00:14:28,820 --> 00:14:36,110
of useful<font color="#E5E5E5"> thing to do</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> next</font>

342
00:14:31,520 --> 00:14:42,380
demonstration<font color="#E5E5E5"> is a rhombus</font>

343
00:14:36,110 --> 00:14:44,930
so<font color="#E5E5E5"> Linux of course has a ram</font><font color="#CCCCCC"> disk driver</font>

344
00:14:42,380 --> 00:14:48,529
inside<font color="#CCCCCC"> it is however much more</font>

345
00:14:44,930 --> 00:14:50,598
convenient<font color="#E5E5E5"> to be able to write Ram disks</font>

346
00:14:48,529 --> 00:14:52,609
in<font color="#E5E5E5"> userspace and in this case we've</font>

347
00:14:50,599 --> 00:14:56,179
written a simple<font color="#E5E5E5"> ramdisk called the</font>

348
00:14:52,609 --> 00:14:59,269
memory<font color="#CCCCCC"> plugin which allow</font><font color="#E5E5E5"> it's</font>

349
00:14:56,179 --> 00:15:01,339
implemented using a sparse array so it's

350
00:14:59,269 --> 00:15:04,069
<font color="#E5E5E5">not limited by the size of e it's not</font>

351
00:15:01,339 --> 00:15:05,449
limited<font color="#CCCCCC"> by the</font><font color="#E5E5E5"> size</font><font color="#CCCCCC"> of RAM in virtual</font>

352
00:15:04,069 --> 00:15:07,399
size you can actually<font color="#E5E5E5"> create really</font>

353
00:15:05,449 --> 00:15:09,468
really really massive<font color="#CCCCCC"> disks</font><font color="#E5E5E5"> and in</font><font color="#CCCCCC"> this</font>

354
00:15:07,399 --> 00:15:12,589
case I'm going to create the<font color="#E5E5E5"> most</font>

355
00:15:09,469 --> 00:15:14,439
<font color="#E5E5E5">massive</font><font color="#CCCCCC"> disk</font><font color="#E5E5E5"> that you can create with</font>

356
00:15:12,589 --> 00:15:16,549
the biggest that Linux supports

357
00:15:14,439 --> 00:15:19,488
essentially until we eventually<font color="#E5E5E5"> moved to</font>

358
00:15:16,549 --> 00:15:21,559
128 bit block sizes<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is 2 to the</font>

359
00:15:19,489 --> 00:15:24,249
<font color="#E5E5E5">power 63 minus 1 it's</font><font color="#CCCCCC"> this it's the</font>

360
00:15:21,559 --> 00:15:27,199
largest sign<font color="#CCCCCC"> 64-bit integer you</font><font color="#E5E5E5"> can have</font>

361
00:15:24,249 --> 00:15:28,939
how big is<font color="#CCCCCC"> that 2 to</font><font color="#E5E5E5"> the power 63 minus</font>

362
00:15:27,199 --> 00:15:31,519
1 in terms of this<font color="#E5E5E5"> well I went on to</font>

363
00:15:28,939 --> 00:15:33,608
Amazon<font color="#E5E5E5"> to</font><font color="#CCCCCC"> try and work</font><font color="#E5E5E5"> out how much it</font>

364
00:15:31,519 --> 00:15:36,679
<font color="#E5E5E5">would cost you to buy that many disks</font>

365
00:15:33,609 --> 00:15:38,899
<font color="#CCCCCC">and</font><font color="#E5E5E5"> it turns like</font><font color="#CCCCCC"> that so that's</font><font color="#E5E5E5"> 300</font>

366
00:15:36,679 --> 00:15:41,689
million<font color="#E5E5E5"> euros I was very disappointed</font>

367
00:15:38,899 --> 00:15:44,509
<font color="#E5E5E5">that Amazon doesn't actually</font><font color="#CCCCCC"> let you</font>

368
00:15:41,689 --> 00:15:45,919
<font color="#E5E5E5">create an order for</font><font color="#CCCCCC"> 300 million</font><font color="#E5E5E5"> euros</font><font color="#CCCCCC"> I</font>

369
00:15:44,509 --> 00:15:47,839
could have screenshotted here because it

370
00:15:45,919 --> 00:15:49,789
the field this isn't big enough it

371
00:15:47,839 --> 00:15:51,979
doesn't<font color="#E5E5E5"> let you do that it just</font><font color="#CCCCCC"> says you</font>

372
00:15:49,789 --> 00:15:54,589
can't do that<font color="#E5E5E5"> but anyway it's 300</font>

373
00:15:51,979 --> 00:15:56,619
million<font color="#E5E5E5"> euros on Amazon</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we can just</font>

374
00:15:54,589 --> 00:15:59,869
<font color="#CCCCCC">create it</font><font color="#E5E5E5"> here much</font><font color="#CCCCCC"> more cheaply</font>

375
00:15:56,619 --> 00:16:02,949
<font color="#E5E5E5">associated with a loop device you can</font>

376
00:15:59,869 --> 00:16:05,329
see the size there<font color="#CCCCCC"> is just massive and</font>

377
00:16:02,949 --> 00:16:08,539
I'm going<font color="#E5E5E5"> to use GPT for partitioning</font>

378
00:16:05,329 --> 00:16:11,719
because MBR<font color="#CCCCCC"> is limited to</font><font color="#E5E5E5"> 2</font><font color="#CCCCCC"> terabytes</font><font color="#E5E5E5"> so</font>

379
00:16:08,539 --> 00:16:14,598
just all defaults yeah that's<font color="#CCCCCC"> what the</font>

380
00:16:11,720 --> 00:16:16,879
<font color="#E5E5E5">partition so looks like 8 exabytes it's</font>

381
00:16:14,599 --> 00:16:20,599
actually 8 exabytes<font color="#CCCCCC"> minus 1 byte but hey</font>

382
00:16:16,879 --> 00:16:21,799
and<font color="#E5E5E5"> I'm going to use butter</font><font color="#CCCCCC"> FS now what</font>

383
00:16:20,599 --> 00:16:25,129
are my other choices I could<font color="#E5E5E5"> have used</font>

384
00:16:21,799 --> 00:16:27,889
<font color="#CCCCCC">ext for could I</font><font color="#E5E5E5"> what's the limit of file</font>

385
00:16:25,129 --> 00:16:30,109
<font color="#E5E5E5">systems</font><font color="#CCCCCC"> needs</font><font color="#E5E5E5"> before nobody knows</font>

386
00:16:27,889 --> 00:16:32,869
there's one exabyte so we'd<font color="#E5E5E5"> have 7 extra</font>

387
00:16:30,109 --> 00:16:34,879
bytes wasted<font color="#CCCCCC"> exif</font><font color="#E5E5E5"> s is possible but</font>

388
00:16:32,869 --> 00:16:36,859
<font color="#CCCCCC">extra vest has</font><font color="#E5E5E5"> like quite a high</font>

389
00:16:34,879 --> 00:16:38,959
metadata overhead actually that's<font color="#E5E5E5"> unfair</font>

390
00:16:36,859 --> 00:16:41,539
<font color="#E5E5E5">and expects</font><font color="#CCCCCC"> X of s</font><font color="#E5E5E5"> has a really nice low</font>

391
00:16:38,959 --> 00:16:45,169
metadata overhead but it's about 1%<font color="#E5E5E5"> 1%</font>

392
00:16:41,539 --> 00:16:47,569
of X<font color="#E5E5E5"> 8 X bytes is too big for my laptop</font>

393
00:16:45,169 --> 00:16:50,809
unfortunately<font color="#CCCCCC"> so I'm going</font><font color="#E5E5E5"> to use butter</font>

394
00:16:47,569 --> 00:16:53,539
FS and you can just see there but<font color="#E5E5E5"> if s</font>

395
00:16:50,809 --> 00:16:58,419
absolute champ<font color="#CCCCCC"> it</font><font color="#E5E5E5"> totally just creates</font>

396
00:16:53,539 --> 00:17:02,439
an 8 X<font color="#E5E5E5"> by file system and I can mount it</font>

397
00:16:58,419 --> 00:17:05,270
and I can you know<font color="#CCCCCC"> I've got</font><font color="#E5E5E5"> 8 exabytes</font>

398
00:17:02,440 --> 00:17:08,600
I'm gonna<font color="#E5E5E5"> I'm just gonna shown this so I</font>

399
00:17:05,270 --> 00:17:10,790
can so<font color="#CCCCCC"> I just go in there</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> show</font>

400
00:17:08,599 --> 00:17:17,958
<font color="#E5E5E5">you</font><font color="#CCCCCC"> a bit I mean I played around</font><font color="#E5E5E5"> with</font>

401
00:17:10,790 --> 00:17:25,099
this<font color="#E5E5E5"> and it you know I</font><font color="#CCCCCC"> missed that</font>

402
00:17:17,959 --> 00:17:28,970
question I'm afraid<font color="#CCCCCC"> you hit okay so the</font>

403
00:17:25,099 --> 00:17:31,219
question<font color="#CCCCCC"> was how many</font><font color="#E5E5E5"> bugs in anything</font>

404
00:17:28,970 --> 00:17:33,350
<font color="#CCCCCC">actually do you hit</font><font color="#E5E5E5"> when you try</font><font color="#CCCCCC"> to use</font>

405
00:17:31,220 --> 00:17:35,120
the very last block which<font color="#E5E5E5"> is only</font><font color="#CCCCCC"> 511</font>

406
00:17:33,350 --> 00:17:36,800
bytes long and the answer is you

407
00:17:35,120 --> 00:17:41,149
definitely<font color="#CCCCCC"> hit bugs in Kaimuki</font><font color="#E5E5E5"> and we</font>

408
00:17:36,800 --> 00:17:42,830
can't handle<font color="#E5E5E5"> that case it's mine so yeah</font>

409
00:17:41,150 --> 00:17:47,990
you<font color="#E5E5E5"> can create you know but repair sub</font>

410
00:17:42,830 --> 00:17:52,309
volume sub<font color="#CCCCCC"> B</font><font color="#E5E5E5"> whatever where is it but</font><font color="#CCCCCC"> er</font>

411
00:17:47,990 --> 00:17:53,960
FS<font color="#CCCCCC"> file system DF I think etc and you</font>

412
00:17:52,309 --> 00:17:55,280
know it just<font color="#CCCCCC"> works</font><font color="#E5E5E5"> is it's great and the</font>

413
00:17:53,960 --> 00:17:59,990
because<font color="#E5E5E5"> the next thing</font><font color="#CCCCCC"> is that when I</font>

414
00:17:55,280 --> 00:18:01,850
<font color="#E5E5E5">click to the next slide that's gone by</font>

415
00:17:59,990 --> 00:18:03,530
this<font color="#E5E5E5"> this software I'm using will will</font>

416
00:18:01,850 --> 00:18:05,719
kill em<font color="#E5E5E5"> you</font><font color="#CCCCCC"> leak it everything's</font>

417
00:18:03,530 --> 00:18:08,330
destroyed<font color="#E5E5E5"> and it goes away so it's a</font>

418
00:18:05,720 --> 00:18:09,650
great for<font color="#CCCCCC"> testing</font><font color="#E5E5E5"> and other other things</font>

419
00:18:08,330 --> 00:18:10,760
<font color="#CCCCCC">that are</font><font color="#E5E5E5"> useful for testing there are</font>

420
00:18:09,650 --> 00:18:12,679
some plugins there which<font color="#E5E5E5"> are various</font>

421
00:18:10,760 --> 00:18:15,050
sorts of testing and some filters I'm

422
00:18:12,679 --> 00:18:16,610
going to talk<font color="#E5E5E5"> about now which are super</font>

423
00:18:15,050 --> 00:18:20,450
useful if you're testing file systems<font color="#E5E5E5"> or</font>

424
00:18:16,610 --> 00:18:21,709
the limits of file systems so the first

425
00:18:20,450 --> 00:18:23,300
step filter I'm going to talk<font color="#CCCCCC"> about</font>

426
00:18:21,710 --> 00:18:27,290
which is useful<font color="#E5E5E5"> testing is the delay</font>

427
00:18:23,300 --> 00:18:29,659
filter you can inject delays into<font color="#E5E5E5"> the</font>

428
00:18:27,290 --> 00:18:31,580
<font color="#E5E5E5">MVD</font><font color="#CCCCCC"> ricci</font><font color="#E5E5E5"> request you</font><font color="#CCCCCC"> can specify the</font>

429
00:18:29,660 --> 00:18:33,710
<font color="#E5E5E5">number of</font><font color="#CCCCCC"> seconds or number of</font>

430
00:18:31,580 --> 00:18:35,809
milliseconds<font color="#E5E5E5"> this is useful if</font><font color="#CCCCCC"> you were</font>

431
00:18:33,710 --> 00:18:37,580
testing say a distributed file system

432
00:18:35,809 --> 00:18:39,410
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> test it all on one machine</font>

433
00:18:37,580 --> 00:18:41,000
<font color="#CCCCCC">but you wanted to</font><font color="#E5E5E5"> simulate the effects</font>

434
00:18:39,410 --> 00:18:43,070
of<font color="#CCCCCC"> having like a really</font><font color="#E5E5E5"> really remote</font>

435
00:18:41,000 --> 00:18:45,800
node or something like<font color="#E5E5E5"> that that has a</font>

436
00:18:43,070 --> 00:18:48,230
long delay<font color="#E5E5E5"> you just inject delays into</font>

437
00:18:45,800 --> 00:18:52,190
that device<font color="#E5E5E5"> to</font><font color="#CCCCCC"> simulate that so it's</font>

438
00:18:48,230 --> 00:18:52,670
<font color="#E5E5E5">very simple filter this filter is</font><font color="#CCCCCC"> also a</font>

439
00:18:52,190 --> 00:18:54,890
lot of<font color="#CCCCCC"> fun</font>

440
00:18:52,670 --> 00:18:57,559
it's the error filter and it jet injects

441
00:18:54,890 --> 00:18:59,870
<font color="#E5E5E5">errors so obvious views for testing here</font>

442
00:18:57,559 --> 00:19:01,730
there's two ways to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> this the first</font>

443
00:18:59,870 --> 00:19:02,750
<font color="#CCCCCC">ray</font><font color="#E5E5E5"> here is we we say you know we</font><font color="#CCCCCC"> want a</font>

444
00:19:01,730 --> 00:19:05,150
particular<font color="#E5E5E5"> arrow and we want to</font>

445
00:19:02,750 --> 00:19:06,800
generalize<font color="#CCCCCC"> there a rate of</font><font color="#E5E5E5"> 10% means</font>

446
00:19:05,150 --> 00:19:09,230
that at random<font color="#CCCCCC"> 10% of errors</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> going</font>

447
00:19:06,800 --> 00:19:11,750
to fail<font color="#E5E5E5"> however</font><font color="#CCCCCC"> I think the second way</font>

448
00:19:09,230 --> 00:19:14,570
<font color="#CCCCCC">of doing this is is more useful for most</font>

449
00:19:11,750 --> 00:19:15,340
people he was saying<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> error rate is</font>

450
00:19:14,570 --> 00:19:17,110
<font color="#CCCCCC">100 percent</font>

451
00:19:15,340 --> 00:19:18,999
<font color="#CCCCCC">100%</font><font color="#E5E5E5"> of requests are going to fail</font>

452
00:19:17,110 --> 00:19:22,870
reliably it's<font color="#E5E5E5"> gonna fail all time</font>

453
00:19:18,999 --> 00:19:24,340
<font color="#E5E5E5">however</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> gated on the error file now</font>

454
00:19:22,870 --> 00:19:26,110
what what that means is that if<font color="#E5E5E5"> that</font>

455
00:19:24,340 --> 00:19:28,749
error file doesn't exist<font color="#E5E5E5"> or</font><font color="#CCCCCC"> you delete</font>

456
00:19:26,110 --> 00:19:31,299
<font color="#CCCCCC">it</font><font color="#E5E5E5"> no errors are injected the error</font>

457
00:19:28,749 --> 00:19:33,190
filter is turned off when you turn<font color="#E5E5E5"> the</font>

458
00:19:31,299 --> 00:19:34,779
when you create that<font color="#E5E5E5"> file</font><font color="#CCCCCC"> the error</font>

459
00:19:33,190 --> 00:19:35,889
filter is turned on<font color="#E5E5E5"> this is why</font><font color="#CCCCCC"> elem</font>

460
00:19:34,779 --> 00:19:38,309
unique it's running so it's<font color="#E5E5E5"> just</font>

461
00:19:35,889 --> 00:19:40,899
<font color="#E5E5E5">checking the error file all the time and</font>

462
00:19:38,309 --> 00:19:42,730
and that's like<font color="#E5E5E5"> super useful of testing</font>

463
00:19:40,899 --> 00:19:44,408
because<font color="#CCCCCC"> obviously</font><font color="#E5E5E5"> you can inject errors</font>

464
00:19:42,730 --> 00:19:46,299
when you want them<font color="#E5E5E5"> to be injected and</font>

465
00:19:44,409 --> 00:19:48,669
<font color="#CCCCCC">then turn off error check it turn off</font>

466
00:19:46,299 --> 00:19:50,110
<font color="#E5E5E5">error injection and see if your file</font>

467
00:19:48,669 --> 00:19:54,159
<font color="#E5E5E5">system recovers or whatever you want it</font>

468
00:19:50,110 --> 00:19:56,860
to<font color="#E5E5E5"> do and the third filter which is very</font>

469
00:19:54,159 --> 00:19:58,210
simple filter<font color="#E5E5E5"> but also useful</font><font color="#CCCCCC"> is the log</font>

470
00:19:56,860 --> 00:19:59,709
filter<font color="#CCCCCC"> you know you</font><font color="#E5E5E5"> just give</font><font color="#CCCCCC"> it the</font>

471
00:19:58,210 --> 00:20:02,279
<font color="#E5E5E5">name of a log file and it writes the log</font>

472
00:19:59,710 --> 00:20:03,999
file in<font color="#CCCCCC"> that format and in the next</font>

473
00:20:02,279 --> 00:20:06,129
<font color="#E5E5E5">demonstration I'm going to show</font><font color="#CCCCCC"> you</font>

474
00:20:03,999 --> 00:20:08,379
we're going<font color="#E5E5E5"> to have like some graphical</font>

475
00:20:06,129 --> 00:20:09,820
visualization of what happens<font color="#E5E5E5"> inside</font>

476
00:20:08,379 --> 00:20:11,860
file systems when you do things like

477
00:20:09,820 --> 00:20:13,840
creating file systems it's important to

478
00:20:11,860 --> 00:20:17,740
note that<font color="#CCCCCC"> MBD kit is not a graphical</font>

479
00:20:13,840 --> 00:20:18,879
<font color="#CCCCCC">tool</font><font color="#E5E5E5"> a media has known nothing there's</font>

480
00:20:17,740 --> 00:20:20,169
<font color="#CCCCCC">nothing about graphics or anything like</font>

481
00:20:18,879 --> 00:20:22,059
that<font color="#E5E5E5"> what's actually happening here</font><font color="#CCCCCC"> is</font>

482
00:20:20,169 --> 00:20:23,830
that<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> using the</font><font color="#E5E5E5"> log filter we're</font>

483
00:20:22,059 --> 00:20:25,480
writing a log file<font color="#CCCCCC"> and we've got a</font>

484
00:20:23,830 --> 00:20:27,610
second graphical program<font color="#E5E5E5"> just the</font>

485
00:20:25,480 --> 00:20:29,340
<font color="#E5E5E5">program that I wrote for</font><font color="#CCCCCC"> this talk which</font>

486
00:20:27,610 --> 00:20:31,508
is tailing that log file and<font color="#E5E5E5"> then</font>

487
00:20:29,340 --> 00:20:33,100
creating<font color="#CCCCCC"> the visualizations</font><font color="#E5E5E5"> that you'll</font>

488
00:20:31,509 --> 00:20:35,139
see so NBD care is<font color="#E5E5E5"> not a graphical</font>

489
00:20:33,100 --> 00:20:38,730
program it's<font color="#E5E5E5"> just a command line tool</font>

490
00:20:35,139 --> 00:20:41,139
<font color="#CCCCCC">stroke server</font><font color="#E5E5E5"> so let's have a look at</font>

491
00:20:38,730 --> 00:20:44,200
what it looks<font color="#CCCCCC"> like to</font><font color="#E5E5E5"> create a file</font>

492
00:20:41,139 --> 00:20:45,279
<font color="#CCCCCC">system so</font><font color="#E5E5E5"> slightly long mu</font><font color="#CCCCCC"> d command</font>

493
00:20:44,200 --> 00:20:47,559
line<font color="#CCCCCC"> here</font><font color="#E5E5E5"> but hopefully</font><font color="#CCCCCC"> you should</font><font color="#E5E5E5"> be</font>

494
00:20:45,279 --> 00:20:49,809
able<font color="#E5E5E5"> to understand what's</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> on well</font>

495
00:20:47,559 --> 00:20:52,658
creating<font color="#E5E5E5"> a memory memory</font><font color="#CCCCCC"> plugin so</font><font color="#E5E5E5"> we're</font>

496
00:20:49,809 --> 00:20:55,299
creating a ram disk<font color="#CCCCCC"> 64 megabytes</font><font color="#E5E5E5"> and</font>

497
00:20:52,659 --> 00:20:56,409
we're using<font color="#CCCCCC"> that log file</font><font color="#E5E5E5"> to to create</font>

498
00:20:55,299 --> 00:20:58,418
the log file which<font color="#CCCCCC"> we're going to tail</font>

499
00:20:56,409 --> 00:21:00,309
with<font color="#CCCCCC"> a second process and we're</font>

500
00:20:58,419 --> 00:21:01,899
<font color="#CCCCCC">inserting delay is no the delays to be</font>

501
00:21:00,309 --> 00:21:02,830
honest here<font color="#E5E5E5"> adjust so</font><font color="#CCCCCC"> that it slows it</font>

502
00:21:01,899 --> 00:21:04,748
down a<font color="#E5E5E5"> little bit to make</font><font color="#CCCCCC"> it a little</font>

503
00:21:02,830 --> 00:21:07,059
<font color="#E5E5E5">bit easier to see otherwise everything</font>

504
00:21:04,749 --> 00:21:09,970
goes<font color="#E5E5E5"> past too quickly so</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> run a</font>

505
00:21:07,059 --> 00:21:11,350
beauty kit<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is my second program</font>

506
00:21:09,970 --> 00:21:17,369
which is which is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to visualize</font>

507
00:21:11,350 --> 00:21:20,230
<font color="#CCCCCC">things and same old</font><font color="#E5E5E5"> command to associate</font>

508
00:21:17,369 --> 00:21:23,459
the<font color="#CCCCCC"> MB diecut instance with a loop</font>

509
00:21:20,230 --> 00:21:25,990
device<font color="#E5E5E5"> now</font><font color="#CCCCCC"> hopefully</font><font color="#E5E5E5"> you can see that</font>

510
00:21:23,460 --> 00:21:28,119
little<font color="#E5E5E5"> black flash is going on those are</font>

511
00:21:25,990 --> 00:21:29,560
<font color="#CCCCCC">reeds</font><font color="#E5E5E5"> so what's happening there</font><font color="#CCCCCC"> is that</font>

512
00:21:28,119 --> 00:21:32,649
<font color="#E5E5E5">because we've created</font><font color="#CCCCCC"> alerts</font>

513
00:21:29,560 --> 00:21:34,480
<font color="#CCCCCC">or block device the colonel you dev</font><font color="#E5E5E5"> it's</font>

514
00:21:32,650 --> 00:21:36,070
<font color="#E5E5E5">looking like saying is there an LVN</font><font color="#CCCCCC"> PV</font>

515
00:21:34,480 --> 00:21:37,900
there is or you know is there a

516
00:21:36,070 --> 00:21:39,550
<font color="#CCCCCC">filesystem</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a partition</font><font color="#E5E5E5"> there I</font>

517
00:21:37,900 --> 00:21:43,050
<font color="#E5E5E5">should know about</font><font color="#CCCCCC"> it's a ram this so</font>

518
00:21:39,550 --> 00:21:45,370
it's<font color="#E5E5E5"> not this empty but it has to check</font>

519
00:21:43,050 --> 00:21:54,870
now<font color="#E5E5E5"> let's partition it I'm going to</font><font color="#CCCCCC"> use</font>

520
00:21:45,370 --> 00:21:56,709
GPT all defaults GPT works by<font color="#CCCCCC"> creating a</font>

521
00:21:54,870 --> 00:21:59,110
partition table at the<font color="#E5E5E5"> beginning</font><font color="#CCCCCC"> of the</font>

522
00:21:56,710 --> 00:22:01,000
disk<font color="#E5E5E5"> and a secondary or backup partition</font>

523
00:21:59,110 --> 00:22:02,530
table at the<font color="#E5E5E5"> end of the disk</font><font color="#CCCCCC"> and those</font>

524
00:22:01,000 --> 00:22:04,450
are<font color="#CCCCCC"> represented</font><font color="#E5E5E5"> in red those</font><font color="#CCCCCC"> are rights</font>

525
00:22:02,530 --> 00:22:05,950
<font color="#E5E5E5">and you probably also saw a little black</font>

526
00:22:04,450 --> 00:22:09,130
flashes there again we've created

527
00:22:05,950 --> 00:22:13,900
another<font color="#E5E5E5"> Linux kernel device and again</font>

528
00:22:09,130 --> 00:22:18,400
<font color="#CCCCCC">you'd have us</font><font color="#E5E5E5"> check it so let's create a</font>

529
00:22:13,900 --> 00:22:20,020
file system<font color="#E5E5E5"> in there</font><font color="#CCCCCC"> the big thing that</font>

530
00:22:18,400 --> 00:22:22,060
happens there is this lump of blue that

531
00:22:20,020 --> 00:22:26,860
<font color="#CCCCCC">happens at the beginning</font><font color="#E5E5E5"> blue in this</font>

532
00:22:22,060 --> 00:22:29,710
diagram<font color="#CCCCCC"> represents discards modern mkfs</font>

533
00:22:26,860 --> 00:22:32,649
always issues<font color="#CCCCCC"> a big discard or trim over</font>

534
00:22:29,710 --> 00:22:34,510
the entire<font color="#E5E5E5"> partition the reason for that</font>

535
00:22:32,650 --> 00:22:37,480
is it<font color="#CCCCCC"> just makes SSDs work much more</font>

536
00:22:34,510 --> 00:22:41,560
efficiently<font color="#E5E5E5"> if you do that</font><font color="#CCCCCC"> other notable</font>

537
00:22:37,480 --> 00:22:43,390
<font color="#E5E5E5">features the the red bar</font><font color="#CCCCCC"> here is some</font>

538
00:22:41,560 --> 00:22:45,190
kind of<font color="#E5E5E5"> metadata I mean I'm in a storage</font>

539
00:22:43,390 --> 00:22:47,080
<font color="#CCCCCC">room full of file system expert</font><font color="#E5E5E5"> so</font>

540
00:22:45,190 --> 00:22:48,370
hopefully you<font color="#E5E5E5"> know better than</font><font color="#CCCCCC"> idea</font>

541
00:22:47,080 --> 00:22:49,750
what's<font color="#E5E5E5"> going on here but that that's</font>

542
00:22:48,370 --> 00:22:53,830
<font color="#E5E5E5">probably an inode table or something</font>

543
00:22:49,750 --> 00:22:57,580
like that<font color="#CCCCCC"> big lump of red here could be</font>

544
00:22:53,830 --> 00:22:59,800
<font color="#CCCCCC">the</font><font color="#E5E5E5"> journal maybe</font><font color="#CCCCCC"> little red dots I</font>

545
00:22:57,580 --> 00:23:01,300
think those are<font color="#E5E5E5"> backups super blocks if</font>

546
00:22:59,800 --> 00:23:04,870
<font color="#E5E5E5">you notice as for red dots and there's</font>

547
00:23:01,300 --> 00:23:09,250
also for backup super blocks let's mount

548
00:23:04,870 --> 00:23:12,750
that I'm not touching<font color="#E5E5E5"> their laptop here</font>

549
00:23:09,250 --> 00:23:12,750
but something<font color="#E5E5E5"> funny happens in a second</font>

550
00:23:13,290 --> 00:23:18,610
it goes<font color="#E5E5E5"> it's writing</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> interesting</font>

551
00:23:16,540 --> 00:23:21,250
isn't it we've just<font color="#E5E5E5"> mounted the displace</font>

552
00:23:18,610 --> 00:23:22,990
writing to it this is<font color="#CCCCCC"> this is lazy block</font>

553
00:23:21,250 --> 00:23:25,180
group initialization it's<font color="#E5E5E5"> another very</font>

554
00:23:22,990 --> 00:23:29,020
common<font color="#E5E5E5"> feature of modern file systems</font>

555
00:23:25,180 --> 00:23:31,270
<font color="#CCCCCC">that they because disks are really</font>

556
00:23:29,020 --> 00:23:32,800
really really big these days<font color="#CCCCCC"> and writing</font>

557
00:23:31,270 --> 00:23:36,129
to them relative<font color="#CCCCCC"> to the size of</font><font color="#E5E5E5"> the disk</font>

558
00:23:32,800 --> 00:23:38,919
is<font color="#E5E5E5"> really really really slow</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you</font>

559
00:23:36,130 --> 00:23:41,140
wouldn't<font color="#E5E5E5"> want your mkfs to to sit there</font>

560
00:23:38,920 --> 00:23:44,190
<font color="#CCCCCC">for you know hours on end writing the</font>

561
00:23:41,140 --> 00:23:46,890
writing<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the block group metadata</font>

562
00:23:44,190 --> 00:23:48,779
and in any case<font color="#E5E5E5"> why would you do</font><font color="#CCCCCC"> that</font>

563
00:23:46,890 --> 00:23:50,850
because<font color="#CCCCCC"> you can't use all</font><font color="#E5E5E5"> of those block</font>

564
00:23:48,779 --> 00:23:52,980
<font color="#E5E5E5">fruits for writing because writing is so</font>

565
00:23:50,850 --> 00:23:56,219
slow compared to<font color="#CCCCCC"> the size</font><font color="#E5E5E5"> of the disks</font>

566
00:23:52,980 --> 00:23:58,080
<font color="#E5E5E5">so it makes so much more sense for file</font>

567
00:23:56,220 --> 00:24:00,539
systems to defer all this stuff to<font color="#E5E5E5"> the</font>

568
00:23:58,080 --> 00:24:02,908
kernel<font color="#E5E5E5"> so when the disk is mounted the</font>

569
00:24:00,539 --> 00:24:04,980
kernel sees that our uninitialized or

570
00:24:02,909 --> 00:24:06,990
uncreated block groups and block group

571
00:24:04,980 --> 00:24:08,730
metadata and it creates that<font color="#E5E5E5"> in the</font>

572
00:24:06,990 --> 00:24:10,380
<font color="#E5E5E5">background</font><font color="#CCCCCC"> and it</font><font color="#E5E5E5"> doesn't matter anyway</font>

573
00:24:08,730 --> 00:24:12,330
<font color="#CCCCCC">because</font><font color="#E5E5E5"> you can't write</font><font color="#CCCCCC"> to those new</font>

574
00:24:10,380 --> 00:24:13,919
block groups<font color="#E5E5E5"> faster you know you can't</font>

575
00:24:12,330 --> 00:24:16,559
write<font color="#CCCCCC"> to it faster than they're being</font>

576
00:24:13,919 --> 00:24:19,470
created anyway so it's fine<font color="#E5E5E5"> so let's</font>

577
00:24:16,559 --> 00:24:22,320
mount this so it mounted it I'm going to

578
00:24:19,470 --> 00:24:25,260
<font color="#CCCCCC">tone it so</font><font color="#E5E5E5"> that I can</font><font color="#CCCCCC"> just makes it</font><font color="#E5E5E5"> more</font>

579
00:24:22,320 --> 00:24:27,990
convenient<font color="#E5E5E5"> for</font><font color="#CCCCCC"> me to put some files</font><font color="#E5E5E5"> on</font>

580
00:24:25,260 --> 00:24:32,070
there so that's again copy<font color="#E5E5E5"> the</font><font color="#CCCCCC"> MVD kits</font>

581
00:24:27,990 --> 00:24:35,429
source code you see that<font color="#E5E5E5"> nothing</font>

582
00:24:32,070 --> 00:24:38,789
<font color="#CCCCCC">actually is written until I sync we know</font>

583
00:24:35,429 --> 00:24:40,350
this right<font color="#CCCCCC"> when you write</font><font color="#E5E5E5"> to a</font><font color="#CCCCCC"> disk the</font>

584
00:24:38,789 --> 00:24:42,000
<font color="#CCCCCC">writes don't hit the disk immediately</font>

585
00:24:40,350 --> 00:24:43,049
they get state they get stored in<font color="#E5E5E5"> memory</font>

586
00:24:42,000 --> 00:24:44,970
for a little bit and then they get

587
00:24:43,049 --> 00:24:47,850
<font color="#CCCCCC">written a few</font><font color="#E5E5E5"> seconds later</font><font color="#CCCCCC"> unless you</font>

588
00:24:44,970 --> 00:24:51,960
do a sync which forces<font color="#E5E5E5"> that right and of</font>

589
00:24:47,850 --> 00:24:54,809
<font color="#E5E5E5">course when you delete that</font><font color="#CCCCCC"> directory</font>

590
00:24:51,960 --> 00:24:57,899
even when<font color="#E5E5E5"> I sync actually it's not gonna</font>

591
00:24:54,809 --> 00:24:59,490
<font color="#CCCCCC">really change that and again</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font>

592
00:24:57,899 --> 00:25:01,049
why<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is you know when you delete</font>

593
00:24:59,490 --> 00:25:02,370
files on this<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> really delete</font>

594
00:25:01,049 --> 00:25:05,820
them it simply marks them in the<font color="#E5E5E5"> block</font>

595
00:25:02,370 --> 00:25:07,590
group as<font color="#CCCCCC"> being unused</font><font color="#E5E5E5"> and and then you</font>

596
00:25:05,820 --> 00:25:08,970
know later on<font color="#E5E5E5"> they those blocks get</font>

597
00:25:07,590 --> 00:25:10,559
reused for other files<font color="#E5E5E5"> that you create</font>

598
00:25:08,970 --> 00:25:12,779
but it's not deleted but<font color="#E5E5E5"> there it there</font>

599
00:25:10,559 --> 00:25:14,700
is of<font color="#CCCCCC"> course a command for modern file</font>

600
00:25:12,779 --> 00:25:17,730
systems anyway that we<font color="#E5E5E5"> can use to</font>

601
00:25:14,700 --> 00:25:19,289
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> tell it please go and discard</font>

602
00:25:17,730 --> 00:25:24,179
<font color="#E5E5E5">them that's the FS trim command so</font>

603
00:25:19,289 --> 00:25:27,470
that's that issues<font color="#CCCCCC"> a discard command or</font>

604
00:25:24,179 --> 00:25:27,470
discard<font color="#E5E5E5"> request to the file system</font>

605
00:25:35,860 --> 00:25:41,199
so that was a nice<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> my final demo</font>

606
00:25:39,220 --> 00:25:42,850
so that<font color="#CCCCCC"> wasn't that</font><font color="#E5E5E5"> was a nice one</font>

607
00:25:41,200 --> 00:25:44,350
<font color="#E5E5E5">showing a</font><font color="#CCCCCC"> single file system but I</font><font color="#E5E5E5"> think</font>

608
00:25:42,850 --> 00:25:47,740
more<font color="#E5E5E5"> interesting is when</font><font color="#CCCCCC"> you actually</font>

609
00:25:44,350 --> 00:25:50,980
run<font color="#E5E5E5"> multiple copies of</font><font color="#CCCCCC"> NBD</font><font color="#E5E5E5"> kit to create</font>

610
00:25:47,740 --> 00:25:52,480
multiple devices<font color="#E5E5E5"> and this is the longest</font>

611
00:25:50,980 --> 00:25:55,179
<font color="#CCCCCC">MVD</font><font color="#E5E5E5"> kick</font><font color="#CCCCCC"> command-line that</font><font color="#E5E5E5"> you'll</font>

612
00:25:52,480 --> 00:25:57,390
probably<font color="#E5E5E5"> ever see actually about</font><font color="#CCCCCC"> 32</font>

613
00:25:55,179 --> 00:26:03,399
there's any two important changes here

614
00:25:57,390 --> 00:26:07,690
the first one<font color="#E5E5E5"> is previously</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> only</font>

615
00:26:03,399 --> 00:26:10,178
running one one copy of<font color="#CCCCCC"> MVD kit and so I</font>

616
00:26:07,690 --> 00:26:12,309
could<font color="#E5E5E5"> just have it listening on tcp tcp</font>

617
00:26:10,179 --> 00:26:15,490
port one oh eight oh nine<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is a</font>

618
00:26:12,309 --> 00:26:16,840
default<font color="#E5E5E5"> port for</font><font color="#CCCCCC"> MBD however i'm</font><font color="#E5E5E5"> going</font>

619
00:26:15,490 --> 00:26:17,980
<font color="#E5E5E5">to run five copies of</font><font color="#CCCCCC"> a midi kit this</font>

620
00:26:16,840 --> 00:26:20,350
time they can't all be listening<font color="#E5E5E5"> on the</font>

621
00:26:17,980 --> 00:26:22,000
same port<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm going to</font><font color="#E5E5E5"> use a UNIX</font>

622
00:26:20,350 --> 00:26:25,809
domain socket and that's the<font color="#E5E5E5"> purpose of</font>

623
00:26:22,000 --> 00:26:28,860
the -<font color="#E5E5E5"> view option here and the second</font>

624
00:26:25,809 --> 00:26:31,240
change is is I'm using the error filter

625
00:26:28,860 --> 00:26:33,789
and I'm using this in the way<font color="#E5E5E5"> that we</font>

626
00:26:31,240 --> 00:26:36,820
<font color="#E5E5E5">described</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> you set the error</font>

627
00:26:33,789 --> 00:26:39,250
rate to 100%<font color="#CCCCCC"> but we have we gate this on</font>

628
00:26:36,820 --> 00:26:40,899
the presence or<font color="#E5E5E5"> absence</font><font color="#CCCCCC"> of an error file</font>

629
00:26:39,250 --> 00:26:43,090
so the error filters turned off because

630
00:26:40,899 --> 00:26:45,969
<font color="#E5E5E5">the error file doesn't</font><font color="#CCCCCC"> exist</font><font color="#E5E5E5"> but it gets</font>

631
00:26:43,090 --> 00:26:49,620
<font color="#E5E5E5">turned on later on so I'm going</font><font color="#CCCCCC"> to start</font>

632
00:26:45,970 --> 00:26:49,620
<font color="#E5E5E5">five copies of a media kit</font>

633
00:26:54,170 --> 00:26:59,030
I'll<font color="#E5E5E5"> just show you what's</font><font color="#CCCCCC"> going on on</font>

634
00:26:55,910 --> 00:27:01,910
the file system here so we've<font color="#E5E5E5"> got five</font>

635
00:26:59,030 --> 00:27:03,860
log files<font color="#E5E5E5"> as you'd expect</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that those</font>

636
00:27:01,910 --> 00:27:06,560
are<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be tailed by the graphical</font>

637
00:27:03,860 --> 00:27:08,540
viewer<font color="#E5E5E5"> we've got five sockets there are</font>

638
00:27:06,560 --> 00:27:11,320
five copies of<font color="#CCCCCC"> MDK</font><font color="#E5E5E5"> hiding behind those</font>

639
00:27:08,540 --> 00:27:17,960
UNIX<font color="#E5E5E5"> the main sockets</font>

640
00:27:11,320 --> 00:27:20,750
lets me run the graphical view<font color="#CCCCCC"> five</font>

641
00:27:17,960 --> 00:27:24,740
<font color="#E5E5E5">devices this time hopefully not too</font>

642
00:27:20,750 --> 00:27:28,040
small<font color="#E5E5E5"> okay and now I'm going to</font>

643
00:27:24,740 --> 00:27:38,960
associate<font color="#CCCCCC"> the five</font><font color="#E5E5E5"> MIT kits with the</font>

644
00:27:28,040 --> 00:27:40,010
five<font color="#CCCCCC"> leap devices and now I'm going to</font>

645
00:27:38,960 --> 00:27:42,140
create<font color="#E5E5E5"> a raid array so I'm going to</font>

646
00:27:40,010 --> 00:27:43,340
<font color="#E5E5E5">create</font><font color="#CCCCCC"> a raid 5 array</font><font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to</font>

647
00:27:42,140 --> 00:27:45,770
<font color="#E5E5E5">create a raid fiber where I'm going to</font>

648
00:27:43,340 --> 00:27:52,459
use the first<font color="#E5E5E5"> four disks as data disks</font>

649
00:27:45,770 --> 00:27:57,230
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the last</font><font color="#E5E5E5"> disk as a hot spare let's</font>

650
00:27:52,460 --> 00:27:59,150
get that<font color="#E5E5E5"> going</font><font color="#CCCCCC"> you can see what's</font>

651
00:27:57,230 --> 00:28:00,680
happening<font color="#E5E5E5"> here is the term it's reading</font>

652
00:27:59,150 --> 00:28:03,260
the<font color="#E5E5E5"> first three disks and creating a</font>

653
00:28:00,680 --> 00:28:05,600
parity disk on the<font color="#E5E5E5"> fourth disk people</font>

654
00:28:03,260 --> 00:28:07,220
who know about raid will be thinking why

655
00:28:05,600 --> 00:28:09,260
is that<font color="#E5E5E5"> parity this not being striped</font>

656
00:28:07,220 --> 00:28:10,670
over all of the<font color="#E5E5E5"> data this and that the</font>

657
00:28:09,260 --> 00:28:12,650
<font color="#E5E5E5">reason for</font><font color="#CCCCCC"> that is simply that because</font>

658
00:28:10,670 --> 00:28:14,150
these disks are so small they're like 64

659
00:28:12,650 --> 00:28:16,850
megabytes the stripe size is<font color="#E5E5E5"> actually</font>

660
00:28:14,150 --> 00:28:19,040
smaller than<font color="#E5E5E5"> the than the entire disk so</font>

661
00:28:16,850 --> 00:28:22,070
that<font color="#CCCCCC"> there's one parity disk and there's</font>

662
00:28:19,040 --> 00:28:24,200
three data<font color="#E5E5E5"> disks</font><font color="#CCCCCC"> I just let's</font><font color="#E5E5E5"> have a</font>

663
00:28:22,070 --> 00:28:27,679
look at the kernel messages should<font color="#E5E5E5"> be</font>

664
00:28:24,200 --> 00:28:31,040
interesting in a minute<font color="#CCCCCC"> all right so</font>

665
00:28:27,680 --> 00:28:36,710
that's<font color="#E5E5E5"> some let's just partition that as</font>

666
00:28:31,040 --> 00:28:40,090
<font color="#E5E5E5">before all defaults and there we can</font>

667
00:28:36,710 --> 00:28:40,090
<font color="#CCCCCC">create a file system on there as</font><font color="#E5E5E5"> well</font>

668
00:28:42,400 --> 00:28:50,210
this looks a lot<font color="#E5E5E5"> like it</font><font color="#CCCCCC"> did last</font><font color="#E5E5E5"> time</font>

669
00:28:45,770 --> 00:28:51,980
except there's no trim<font color="#E5E5E5"> now the MD driver</font>

670
00:28:50,210 --> 00:28:54,380
<font color="#CCCCCC">in the</font><font color="#E5E5E5"> kernel doesn't believe</font><font color="#CCCCCC"> that you</font>

671
00:28:51,980 --> 00:28:55,790
can send<font color="#CCCCCC"> discard</font><font color="#E5E5E5"> requests to devices I</font>

672
00:28:54,380 --> 00:28:58,850
guess because<font color="#E5E5E5"> they've been burned in the</font>

673
00:28:55,790 --> 00:29:00,800
<font color="#CCCCCC">past</font><font color="#E5E5E5"> there is a way to do this you can</font>

674
00:28:58,850 --> 00:29:02,810
<font color="#E5E5E5">set like a commander</font><font color="#CCCCCC"> colonel command</font>

675
00:29:00,800 --> 00:29:06,919
line flag which is<font color="#E5E5E5"> something weird like</font>

676
00:29:02,810 --> 00:29:10,250
raid 4 5 6 . discards are<font color="#CCCCCC"> fine or</font>

677
00:29:06,920 --> 00:29:11,960
<font color="#CCCCCC">something however as this is quite</font>

678
00:29:10,250 --> 00:29:13,970
literally my work<font color="#E5E5E5"> laptop I don't happen</font>

679
00:29:11,960 --> 00:29:16,450
<font color="#CCCCCC">to have</font><font color="#E5E5E5"> that on my colonel command line</font>

680
00:29:13,970 --> 00:29:23,440
so it's just<font color="#E5E5E5"> not issuing discards to the</font>

681
00:29:16,450 --> 00:29:23,440
underlying devices<font color="#E5E5E5"> and I can mount this</font>

682
00:29:23,620 --> 00:29:32,500
and I will let's just<font color="#CCCCCC"> chain it so I can</font>

683
00:29:26,660 --> 00:29:38,300
get in there<font color="#CCCCCC"> and</font><font color="#E5E5E5"> stuff let's create some</font>

684
00:29:32,500 --> 00:29:39,620
files in there<font color="#E5E5E5"> and now of course the</font>

685
00:29:38,300 --> 00:29:43,280
<font color="#E5E5E5">interesting thing is what happens when I</font>

686
00:29:39,620 --> 00:29:44,600
inject<font color="#E5E5E5"> an error into this but you can</font>

687
00:29:43,280 --> 00:29:47,149
see<font color="#CCCCCC"> what happened there quite</font>

688
00:29:44,600 --> 00:29:50,600
dramatically actually it detected first

689
00:29:47,150 --> 00:29:53,930
of all that the the<font color="#CCCCCC"> error occurred on</font>

690
00:29:50,600 --> 00:29:55,610
the second<font color="#CCCCCC"> disk</font><font color="#E5E5E5"> and unfortunate the</font>

691
00:29:53,930 --> 00:29:57,530
second<font color="#E5E5E5"> disk is called</font><font color="#CCCCCC"> MBD</font><font color="#E5E5E5"> one here</font>

692
00:29:55,610 --> 00:30:00,560
<font color="#E5E5E5">because</font><font color="#CCCCCC"> I'm starting from</font><font color="#E5E5E5"> zero for the</font>

693
00:29:57,530 --> 00:30:02,690
<font color="#E5E5E5">disk numbering and you can see also it</font>

694
00:30:00,560 --> 00:30:06,050
started to do<font color="#E5E5E5"> a recovery</font><font color="#CCCCCC"> so it started</font>

695
00:30:02,690 --> 00:30:09,290
<font color="#E5E5E5">to read from the remaining good disks</font>

696
00:30:06,050 --> 00:30:12,050
<font color="#E5E5E5">and created an extra parity disk on the</font>

697
00:30:09,290 --> 00:30:16,070
hot spare<font color="#CCCCCC"> took a</font><font color="#E5E5E5"> little bit of time</font>

698
00:30:12,050 --> 00:30:18,770
we're<font color="#CCCCCC"> injecting delays here and that</font>

699
00:30:16,070 --> 00:30:19,879
yeah<font color="#E5E5E5"> although</font><font color="#CCCCCC"> we're injecting delays so</font>

700
00:30:18,770 --> 00:30:21,290
it's a bit slower than<font color="#E5E5E5"> normally you can</font>

701
00:30:19,880 --> 00:30:23,270
<font color="#CCCCCC">imagine what how it would be if this</font>

702
00:30:21,290 --> 00:30:27,010
<font color="#E5E5E5">wasn't a 64 megabyte this but this was</font>

703
00:30:23,270 --> 00:30:29,690
you know<font color="#CCCCCC"> 6.4 terabytes or something</font>

704
00:30:27,010 --> 00:30:31,520
recovery on raid<font color="#E5E5E5"> 5 takes a really long</font>

705
00:30:29,690 --> 00:30:34,370
<font color="#CCCCCC">time and</font><font color="#E5E5E5"> fortunately way that raid 5</font>

706
00:30:31,520 --> 00:30:37,190
works is if<font color="#E5E5E5"> you then get an another disk</font>

707
00:30:34,370 --> 00:30:38,659
<font color="#E5E5E5">failing at certain points during</font><font color="#CCCCCC"> the</font>

708
00:30:37,190 --> 00:30:40,400
<font color="#E5E5E5">recovery you</font><font color="#CCCCCC"> can actually lose all your</font>

709
00:30:38,660 --> 00:30:44,390
data<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's kind of the reason</font><font color="#CCCCCC"> why</font>

710
00:30:40,400 --> 00:30:45,800
we don't use<font color="#E5E5E5"> raid 5 in production on you</font>

711
00:30:44,390 --> 00:30:48,890
know certainly on larger systems these

712
00:30:45,800 --> 00:30:51,800
<font color="#E5E5E5">days however</font><font color="#CCCCCC"> you know it's still a good</font>

713
00:30:48,890 --> 00:30:54,140
demo<font color="#CCCCCC"> I should</font><font color="#E5E5E5"> just very quickly note</font>

714
00:30:51,800 --> 00:30:57,649
that when I clicked the

715
00:30:54,140 --> 00:30:59,390
<font color="#CCCCCC">error</font><font color="#E5E5E5"> button there it didn't the</font>

716
00:30:57,650 --> 00:31:00,770
graphical tool didn't start injecting

717
00:30:59,390 --> 00:31:02,870
errors all happened was the graphical

718
00:31:00,770 --> 00:31:05,000
tool<font color="#CCCCCC"> crated a file called error two and</font>

719
00:31:02,870 --> 00:31:07,070
an<font color="#CCCCCC"> NB d kitten notices of that file</font>

720
00:31:05,000 --> 00:31:09,710
exists and starts to inject errors on

721
00:31:07,070 --> 00:31:11,389
that<font color="#E5E5E5"> disk now although all that</font><font color="#CCCCCC"> dramatic</font>

722
00:31:09,710 --> 00:31:14,540
stuff happened<font color="#E5E5E5"> in the background</font><font color="#CCCCCC"> the</font>

723
00:31:11,390 --> 00:31:16,220
actual file system you know is fine<font color="#E5E5E5"> that</font>

724
00:31:14,540 --> 00:31:18,680
there's no<font color="#E5E5E5"> errors on the on the file</font>

725
00:31:16,220 --> 00:31:21,350
system<font color="#CCCCCC"> or raid array level it's just</font><font color="#E5E5E5"> the</font>

726
00:31:18,680 --> 00:31:23,030
dramatic stuff happens<font color="#E5E5E5"> below there</font><font color="#CCCCCC"> and</font>

727
00:31:21,350 --> 00:31:25,600
of<font color="#CCCCCC"> course I can you know I can</font><font color="#E5E5E5"> inject</font>

728
00:31:23,030 --> 00:31:27,620
more errors on it on a second<font color="#CCCCCC"> disk and</font>

729
00:31:25,600 --> 00:31:28,790
and this time now we're<font color="#E5E5E5"> running in</font>

730
00:31:27,620 --> 00:31:30,590
degraded mode so this<font color="#E5E5E5"> is like the</font>

731
00:31:28,790 --> 00:31:33,500
<font color="#E5E5E5">minimum this raid array can support</font>

732
00:31:30,590 --> 00:31:35,389
<font color="#E5E5E5">without actually failing</font><font color="#CCCCCC"> because at the</font>

733
00:31:33,500 --> 00:31:37,760
moment<font color="#CCCCCC"> although you know</font><font color="#E5E5E5"> although there</font>

734
00:31:35,390 --> 00:31:39,380
wasn't<font color="#CCCCCC"> it</font><font color="#E5E5E5"> another error I'm still just</font>

735
00:31:37,760 --> 00:31:41,750
<font color="#E5E5E5">about</font><font color="#CCCCCC"> okay although</font><font color="#E5E5E5"> if there was another</font>

736
00:31:39,380 --> 00:31:44,660
error<font color="#E5E5E5"> if I clicked another button two</font>

737
00:31:41,750 --> 00:31:46,280
things would<font color="#E5E5E5"> happen you'd see errors</font>

738
00:31:44,660 --> 00:31:47,840
you'd see errors actually<font color="#E5E5E5"> appearing at</font>

739
00:31:46,280 --> 00:31:49,820
the file system level<font color="#E5E5E5"> and the second</font>

740
00:31:47,840 --> 00:31:51,679
thing<font color="#E5E5E5"> that would happen is I'd</font><font color="#CCCCCC"> have to</font>

741
00:31:49,820 --> 00:31:53,840
reboot my<font color="#E5E5E5"> laptop</font><font color="#CCCCCC"> because you cannot and</font>

742
00:31:51,680 --> 00:31:57,290
I could not<font color="#E5E5E5"> work out how to do this you</font>

743
00:31:53,840 --> 00:31:59,209
cannot then unmount<font color="#CCCCCC"> a raid array that's</font>

744
00:31:57,290 --> 00:32:00,830
in that state it just is<font color="#CCCCCC"> absolutely</font>

745
00:31:59,210 --> 00:32:02,090
impossible<font color="#E5E5E5"> I had no idea why there's</font>

746
00:32:00,830 --> 00:32:04,399
tons of stuff<font color="#E5E5E5"> about this on stack</font>

747
00:32:02,090 --> 00:32:05,780
<font color="#E5E5E5">overflow</font><font color="#CCCCCC"> however I don't want to reboot</font>

748
00:32:04,400 --> 00:32:07,370
my laptop in the middle<font color="#CCCCCC"> of talk so I'm</font>

749
00:32:05,780 --> 00:32:09,950
not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that but you trust me</font>

750
00:32:07,370 --> 00:32:11,300
this<font color="#CCCCCC"> it's this is a thing it's probably</font>

751
00:32:09,950 --> 00:32:12,110
<font color="#E5E5E5">a kernel bug or something I don't</font><font color="#CCCCCC"> know</font>

752
00:32:11,300 --> 00:32:13,669
<font color="#E5E5E5">that there we go</font>

753
00:32:12,110 --> 00:32:17,419
instead what I'm going<font color="#CCCCCC"> to do actually is</font>

754
00:32:13,670 --> 00:32:19,450
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> gonna you mount</font><font color="#CCCCCC"> that and stop</font>

755
00:32:17,420 --> 00:32:22,619
the raid array

756
00:32:19,450 --> 00:32:22,619
[Music]

757
00:32:27,740 --> 00:32:37,029
so in summary<font color="#CCCCCC"> loop mounting popular</font>

758
00:32:33,080 --> 00:32:40,158
great<font color="#E5E5E5"> somewhat limited limited to plain</font>

759
00:32:37,029 --> 00:32:43,669
uncompressed files on your<font color="#CCCCCC"> local hard</font>

760
00:32:40,159 --> 00:32:44,809
<font color="#E5E5E5">disk which you know gets you a long way</font>

761
00:32:43,669 --> 00:32:48,649
<font color="#CCCCCC">obviously because people have been</font>

762
00:32:44,809 --> 00:32:52,789
looting for years once you have a user

763
00:32:48,649 --> 00:32:54,320
process<font color="#E5E5E5"> running at</font><font color="#CCCCCC"> MBD server</font><font color="#E5E5E5"> every</font>

764
00:32:52,789 --> 00:32:57,309
<font color="#CCCCCC">decade is why</font><font color="#E5E5E5"> I've shown here but other</font>

765
00:32:54,320 --> 00:33:00,139
<font color="#E5E5E5">NBD servers are available</font><font color="#CCCCCC"> and very</font><font color="#E5E5E5"> good</font>

766
00:32:57,309 --> 00:33:01,668
you<font color="#E5E5E5"> have a user process and within that</font>

767
00:33:00,140 --> 00:33:07,220
user process you can do all<font color="#E5E5E5"> kinds of</font>

768
00:33:01,669 --> 00:33:09,230
quite great stuff MBD kit has lots of

769
00:33:07,220 --> 00:33:11,510
<font color="#CCCCCC">plugins but we also have this stable API</font>

770
00:33:09,230 --> 00:33:12,679
<font color="#E5E5E5">and</font><font color="#CCCCCC"> ABI guarantee which means you can</font>

771
00:33:11,510 --> 00:33:14,179
write<font color="#CCCCCC"> your own</font><font color="#E5E5E5"> secure in the knowledge</font>

772
00:33:12,679 --> 00:33:18,020
<font color="#CCCCCC">you'll don't have to</font><font color="#E5E5E5"> rewrite your</font><font color="#CCCCCC"> test</font>

773
00:33:14,179 --> 00:33:19,549
<font color="#E5E5E5">down the line</font><font color="#CCCCCC"> and so I think</font><font color="#E5E5E5"> this would</font>

774
00:33:18,020 --> 00:33:21,770
<font color="#CCCCCC">be</font><font color="#E5E5E5"> a good way</font><font color="#CCCCCC"> to do filesystem</font>

775
00:33:19,549 --> 00:33:24,799
<font color="#E5E5E5">development and testing interestingly</font>

776
00:33:21,770 --> 00:33:26,629
this<font color="#CCCCCC"> is not in fact how we use</font><font color="#E5E5E5"> MBD kit</font>

777
00:33:24,799 --> 00:33:28,520
at Red Hat<font color="#E5E5E5"> we actually use it</font><font color="#CCCCCC"> for</font>

778
00:33:26,630 --> 00:33:31,399
<font color="#CCCCCC">something which is</font><font color="#E5E5E5"> related but a little</font>

779
00:33:28,520 --> 00:33:35,570
bit different<font color="#CCCCCC"> Weezer as a way to get to</font>

780
00:33:31,399 --> 00:33:37,639
expose proprietary storage<font color="#E5E5E5"> proprietary</font>

781
00:33:35,570 --> 00:33:42,049
hypervisor datas<font color="#CCCCCC"> and by proprietary I of</font>

782
00:33:37,640 --> 00:33:44,630
course I mean VMware and expose all that

783
00:33:42,049 --> 00:33:47,389
data and<font color="#E5E5E5"> NASA's as well and expose</font><font color="#CCCCCC"> that</font>

784
00:33:44,630 --> 00:33:50,020
data to free world<font color="#CCCCCC"> software so</font><font color="#E5E5E5"> you know</font>

785
00:33:47,390 --> 00:33:53,270
<font color="#E5E5E5">to Linux and BSD</font>

786
00:33:50,020 --> 00:33:56,240
although<font color="#E5E5E5"> loop mounting is super</font>

787
00:33:53,270 --> 00:33:58,309
convenient<font color="#E5E5E5"> it's also dangerous if you</font>

788
00:33:56,240 --> 00:33:59,659
don't trust the<font color="#E5E5E5"> data in</font><font color="#CCCCCC"> your disks</font><font color="#E5E5E5"> if</font>

789
00:33:58,309 --> 00:34:02,240
you just downloaded<font color="#E5E5E5"> a disk from</font>

790
00:33:59,659 --> 00:34:05,149
somewhere or<font color="#CCCCCC"> you've</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> worse you allow</font>

791
00:34:02,240 --> 00:34:06,980
users<font color="#CCCCCC"> to upload their cloud</font><font color="#E5E5E5"> images and</font>

792
00:34:05,149 --> 00:34:08,299
you just<font color="#E5E5E5"> loop mount them for some</font><font color="#CCCCCC"> reason</font>

793
00:34:06,980 --> 00:34:10,609
<font color="#E5E5E5">that's a terribly bad thing to do</font>

794
00:34:08,300 --> 00:34:13,429
because<font color="#CCCCCC"> it exposes your</font><font color="#E5E5E5"> hosts kernel to</font>

795
00:34:10,609 --> 00:34:15,969
bugs in file systems within<font color="#E5E5E5"> that disk</font><font color="#CCCCCC"> I</font>

796
00:34:13,429 --> 00:34:18,320
mean it's like worse than<font color="#CCCCCC"> a root exploit</font>

797
00:34:15,969 --> 00:34:20,060
<font color="#E5E5E5">if you're in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> situation you should</font>

798
00:34:18,320 --> 00:34:22,369
use<font color="#CCCCCC"> live</font><font color="#E5E5E5"> guest</font><font color="#CCCCCC"> FS which is our</font><font color="#E5E5E5"> sister</font>

799
00:34:20,060 --> 00:34:24,980
project live<font color="#E5E5E5"> gastrofest</font>

800
00:34:22,369 --> 00:34:26,450
does interoperate with<font color="#CCCCCC"> NBD kit and it</font>

801
00:34:24,980 --> 00:34:28,639
works by<font color="#CCCCCC"> creating a virtual machine</font>

802
00:34:26,449 --> 00:34:31,810
<font color="#E5E5E5">which</font><font color="#CCCCCC"> heart which protects your house</font>

803
00:34:28,639 --> 00:34:35,589
<font color="#E5E5E5">from the possible mal effects of the</font>

804
00:34:31,810 --> 00:34:39,020
contents of<font color="#E5E5E5"> the disk if you want to</font>

805
00:34:35,589 --> 00:34:41,529
reproduce<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I have shown you in this</font>

806
00:34:39,020 --> 00:34:43,429
<font color="#E5E5E5">talk then you will need that</font>

807
00:34:41,530 --> 00:34:45,919
BDK at one point eight<font color="#E5E5E5"> point three</font>

808
00:34:43,429 --> 00:34:49,070
<font color="#E5E5E5">however it's not really necessary to</font>

809
00:34:45,918 --> 00:34:51,888
<font color="#CCCCCC">have</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> version earlier versions</font><font color="#E5E5E5"> of</font>

810
00:34:49,070 --> 00:34:54,440
<font color="#E5E5E5">finalists say thee the API</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the ABI</font>

811
00:34:51,889 --> 00:34:58,400
have been<font color="#E5E5E5"> stable since 2013 which</font><font color="#CCCCCC"> is</font>

812
00:34:54,440 --> 00:34:59,960
back when we<font color="#CCCCCC"> started with 0.1 however</font>

813
00:34:58,400 --> 00:35:01,220
you know yeah if you want to<font color="#E5E5E5"> reproduce</font>

814
00:34:59,960 --> 00:35:02,780
exactly<font color="#CCCCCC"> what I've done</font><font color="#E5E5E5"> and all the</font>

815
00:35:01,220 --> 00:35:05,180
<font color="#E5E5E5">things I've shown you here you will need</font>

816
00:35:02,780 --> 00:35:08,740
<font color="#E5E5E5">that particular version</font><font color="#CCCCCC"> it's available</font>

817
00:35:05,180 --> 00:35:13,490
in all major<font color="#E5E5E5"> distros</font><font color="#CCCCCC"> so it's in</font><font color="#E5E5E5"> fedora</font>

818
00:35:08,740 --> 00:35:15,709
<font color="#CCCCCC">Debian testing so Buster has one point</font>

819
00:35:13,490 --> 00:35:17,419
eight point<font color="#E5E5E5"> three I believe and Sid has</font>

820
00:35:15,710 --> 00:35:19,090
one point<font color="#E5E5E5"> ten which</font><font color="#CCCCCC"> is the version</font><font color="#E5E5E5"> that</font>

821
00:35:17,420 --> 00:35:21,350
<font color="#E5E5E5">we released a couple of weeks</font><font color="#CCCCCC"> ago I</font>

822
00:35:19,090 --> 00:35:23,560
<font color="#CCCCCC">would</font><font color="#E5E5E5"> also say</font><font color="#CCCCCC"> to do if you want</font><font color="#E5E5E5"> to do</font>

823
00:35:21,350 --> 00:35:26,690
loop mounting you should have<font color="#CCCCCC"> MBD client</font>

824
00:35:23,560 --> 00:35:28,580
3.18 or 3.19 which was released<font color="#E5E5E5"> just a</font>

825
00:35:26,690 --> 00:35:31,300
few<font color="#E5E5E5"> days ago the reason for that is that</font>

826
00:35:28,580 --> 00:35:33,590
3.17 had kind<font color="#E5E5E5"> of an annoying bug with</font>

827
00:35:31,300 --> 00:35:36,470
<font color="#CCCCCC">with just effects loop mounting it's</font>

828
00:35:33,590 --> 00:35:38,810
just kind of annoying<font color="#CCCCCC"> so but 3.18 fixes</font>

829
00:35:36,470 --> 00:35:41,209
that<font color="#E5E5E5"> there were also a few bugs in</font>

830
00:35:38,810 --> 00:35:43,609
kernel before 4.18<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think they</font>

831
00:35:41,210 --> 00:35:46,340
would<font color="#E5E5E5"> genuinely affect you but you might</font>

832
00:35:43,609 --> 00:35:47,509
<font color="#E5E5E5">be better</font><font color="#CCCCCC"> off if you do find any</font>

833
00:35:46,340 --> 00:35:50,210
problems you<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> better off looking</font>

834
00:35:47,510 --> 00:35:52,460
<font color="#CCCCCC">at</font><font color="#E5E5E5"> Carol</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> point 18 or above because</font>

835
00:35:50,210 --> 00:35:53,140
there were some<font color="#CCCCCC"> things that were tidied</font>

836
00:35:52,460 --> 00:35:55,910
up a bit

837
00:35:53,140 --> 00:35:58,368
now we also have support<font color="#CCCCCC"> for freebsd</font>

838
00:35:55,910 --> 00:35:59,540
<font color="#CCCCCC">openbsd</font><font color="#E5E5E5"> and haiku</font><font color="#CCCCCC"> hike</font><font color="#E5E5E5"> it was a great</font>

839
00:35:58,369 --> 00:36:01,820
<font color="#E5E5E5">operating system I was</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> running</font>

840
00:35:59,540 --> 00:36:03,529
it for a little<font color="#E5E5E5"> while</font><font color="#CCCCCC"> it's like just</font>

841
00:36:01,820 --> 00:36:06,920
works really well it's brilliant

842
00:36:03,530 --> 00:36:08,359
however those don't have kernel<font color="#CCCCCC"> MBD loop</font>

843
00:36:06,920 --> 00:36:10,730
<font color="#E5E5E5">clients so you can't do any loop man</font>

844
00:36:08,359 --> 00:36:13,730
<font color="#CCCCCC">singh with them but they</font><font color="#E5E5E5"> useful for you</font>

845
00:36:10,730 --> 00:36:15,680
know as acting as<font color="#E5E5E5"> an Ambu server to be</font>

846
00:36:13,730 --> 00:36:17,660
consumed by other<font color="#CCCCCC"> MBD clients on other</font>

847
00:36:15,680 --> 00:36:19,069
machines<font color="#CCCCCC"> if you want to</font><font color="#E5E5E5"> find a beauty</font>

848
00:36:17,660 --> 00:36:20,660
kit go to your favorite<font color="#E5E5E5"> search engine</font>

849
00:36:19,070 --> 00:36:23,050
and<font color="#CCCCCC"> type in ebony</font><font color="#E5E5E5"> kit and I'm sure it'll</font>

850
00:36:20,660 --> 00:36:25,670
be<font color="#CCCCCC"> the top of</font><font color="#E5E5E5"> the listing and this talk</font>

851
00:36:23,050 --> 00:36:28,400
may be<font color="#E5E5E5"> downloaded there's a link this</font>

852
00:36:25,670 --> 00:36:30,109
<font color="#CCCCCC">link is on the FA's den page as well I</font>

853
00:36:28,400 --> 00:36:32,000
wouldn't<font color="#E5E5E5"> recommend running this talks it</font>

854
00:36:30,109 --> 00:36:33,650
does loads of weird pseudo stuff which

855
00:36:32,000 --> 00:36:35,950
is<font color="#E5E5E5"> very applicable to my laptop but</font>

856
00:36:33,650 --> 00:36:38,510
probably not applicable<font color="#CCCCCC"> to your systems</font>

857
00:36:35,950 --> 00:36:40,220
<font color="#CCCCCC">however</font><font color="#E5E5E5"> certainly download it and have</font><font color="#CCCCCC"> a</font>

858
00:36:38,510 --> 00:36:42,320
<font color="#E5E5E5">look at how we've done it and and and</font>

859
00:36:40,220 --> 00:36:46,029
how we implement<font color="#CCCCCC"> this</font><font color="#E5E5E5"> and with that</font><font color="#CCCCCC"> I'd</font>

860
00:36:42,320 --> 00:36:46,030
like to say are there<font color="#E5E5E5"> any questions</font>

861
00:36:46,960 --> 00:36:53,539
[Applause]

862
00:36:49,590 --> 00:36:59,759
[Music]

863
00:36:53,539 --> 00:37:03,269
hi<font color="#CCCCCC"> great project</font><font color="#E5E5E5"> currently if you create</font>

864
00:36:59,759 --> 00:37:07,200
an empty<font color="#E5E5E5"> queue Cal</font><font color="#CCCCCC"> - and then say fire</font>

865
00:37:03,269 --> 00:37:08,848
up<font color="#CCCCCC"> qmu and install some stuff</font><font color="#E5E5E5"> into it it</font>

866
00:37:07,200 --> 00:37:11,279
doesn't<font color="#E5E5E5"> compress on the fly you can only</font>

867
00:37:08,849 --> 00:37:14,609
compress<font color="#E5E5E5"> after the fact</font><font color="#CCCCCC"> does this allow</font>

868
00:37:11,279 --> 00:37:16,619
you to get<font color="#E5E5E5"> around that</font><font color="#CCCCCC"> so the question</font>

869
00:37:14,609 --> 00:37:18,930
was about<font color="#CCCCCC"> QK - compression where</font>

870
00:37:16,619 --> 00:37:21,960
basically the way that<font color="#CCCCCC"> qk2</font><font color="#E5E5E5"> compression</font>

871
00:37:18,930 --> 00:37:23,940
works is that you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> only you can only</font>

872
00:37:21,960 --> 00:37:26,670
compress when<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> initially creating</font>

873
00:37:23,940 --> 00:37:28,950
the<font color="#E5E5E5"> QK - and then when you when you</font>

874
00:37:26,670 --> 00:37:30,450
later on<font color="#CCCCCC"> write to that same compress q</font>

875
00:37:28,950 --> 00:37:34,680
<font color="#CCCCCC">co</font><font color="#E5E5E5"> - you're actually writing</font>

876
00:37:30,450 --> 00:37:36,029
uncompressed<font color="#CCCCCC"> qk to clusters</font><font color="#E5E5E5"> and this</font>

877
00:37:34,680 --> 00:37:38,129
does<font color="#E5E5E5"> not solve that I'm afraid</font><font color="#CCCCCC"> because</font>

878
00:37:36,029 --> 00:37:40,559
that is an inherent<font color="#E5E5E5"> issue with the QL to</font>

879
00:37:38,130 --> 00:37:42,000
format there ain't<font color="#E5E5E5"> gonna be solved</font>

880
00:37:40,559 --> 00:37:44,369
anytime soon but<font color="#E5E5E5"> you should ask</font><font color="#CCCCCC"> Kevin</font>

881
00:37:42,000 --> 00:37:46,200
<font color="#E5E5E5">wolf and I'm sure he will consider your</font>

882
00:37:44,369 --> 00:37:47,490
<font color="#E5E5E5">request</font><font color="#CCCCCC"> I'm afraid of this does not</font>

883
00:37:46,200 --> 00:37:49,649
<font color="#E5E5E5">solve that the other thing that this</font>

884
00:37:47,490 --> 00:37:52,649
<font color="#CCCCCC">does not</font><font color="#E5E5E5"> solve is we do not allow</font>

885
00:37:49,650 --> 00:37:54,359
writing to compress<font color="#CCCCCC"> exceed files</font>

886
00:37:52,650 --> 00:37:56,490
although<font color="#E5E5E5"> we could do that if somebody</font>

887
00:37:54,359 --> 00:37:58,348
wanted to<font color="#E5E5E5"> add</font><font color="#CCCCCC"> that as a feature</font><font color="#E5E5E5"> there's</font>

888
00:37:56,490 --> 00:37:59,519
nothing in there's<font color="#E5E5E5"> nothing in our</font>

889
00:37:58,349 --> 00:38:02,519
<font color="#CCCCCC">software that prevents that from</font>

890
00:37:59,519 --> 00:38:06,029
happening<font color="#CCCCCC"> but it's quite difficult</font>

891
00:38:02,519 --> 00:38:07,649
because the way that the lzma format is

892
00:38:06,029 --> 00:38:09,660
arranged you have these compressed

893
00:38:07,650 --> 00:38:11,759
blocks<font color="#E5E5E5"> and you can certainly you can</font>

894
00:38:09,660 --> 00:38:14,609
seek to<font color="#CCCCCC"> a block and read it which is how</font>

895
00:38:11,759 --> 00:38:17,069
the filter works<font color="#CCCCCC"> but if you want to</font>

896
00:38:14,609 --> 00:38:18,930
write - you'd have<font color="#CCCCCC"> to actually expand</font>

897
00:38:17,069 --> 00:38:21,150
the file by shoveling<font color="#E5E5E5"> all the data</font>

898
00:38:18,930 --> 00:38:22,828
resides to fit the larger<font color="#CCCCCC"> blocking this</font>

899
00:38:21,150 --> 00:38:24,269
is entirely possible diseases<font color="#E5E5E5"> there's</font>

900
00:38:22,829 --> 00:38:26,220
nothing in<font color="#CCCCCC"> NBD kit that</font><font color="#E5E5E5"> would prevent us</font>

901
00:38:24,269 --> 00:38:28,109
doing this it's<font color="#CCCCCC"> just it's complicated</font>

902
00:38:26,220 --> 00:38:30,089
and slow so nobody's done it<font color="#E5E5E5"> now what</font>

903
00:38:28,109 --> 00:38:32,098
you can do with the exit filter however

904
00:38:30,089 --> 00:38:33,930
<font color="#E5E5E5">is you can put a cow filter on</font><font color="#CCCCCC"> top and</font>

905
00:38:32,099 --> 00:38:36,269
then<font color="#E5E5E5"> you can save your</font><font color="#CCCCCC"> changes out to a</font>

906
00:38:33,930 --> 00:38:38,250
queue cow<font color="#E5E5E5"> to file after the fact so</font>

907
00:38:36,269 --> 00:38:40,740
basically you'd end up with<font color="#E5E5E5"> an X file</font>

908
00:38:38,250 --> 00:38:42,180
that's the same and then a<font color="#E5E5E5"> qko file</font>

909
00:38:40,740 --> 00:38:45,089
containing the differences<font color="#CCCCCC"> that you've</font>

910
00:38:42,180 --> 00:38:46,410
written<font color="#CCCCCC"> I hope that's somewhat</font><font color="#E5E5E5"> clear and</font>

911
00:38:45,089 --> 00:38:47,190
the key<font color="#CCCCCC"> cutting</font><font color="#E5E5E5"> wouldn't be compressed</font>

912
00:38:46,410 --> 00:38:48,990
right

913
00:38:47,190 --> 00:38:52,700
thank you<font color="#E5E5E5"> I know there's no official</font><font color="#CCCCCC"> Gen</font>

914
00:38:48,990 --> 00:38:52,700
<font color="#CCCCCC">2 package for this part</font><font color="#E5E5E5"> of get</font><font color="#CCCCCC"> one added</font>

915
00:38:53,740 --> 00:38:58,459
looking at kernel version it seems

916
00:38:56,120 --> 00:39:00,140
rather new software would you consider

917
00:38:58,460 --> 00:39:02,780
well we are<font color="#E5E5E5"> probably with possible are</font>

918
00:39:00,140 --> 00:39:05,350
you confident enough to<font color="#E5E5E5"> call em BTN</font><font color="#CCCCCC"> MVD</font>

919
00:39:02,780 --> 00:39:08,900
<font color="#CCCCCC">kits stable</font>

920
00:39:05,350 --> 00:39:13,700
well they were I'm<font color="#E5E5E5"> not this</font><font color="#CCCCCC"> thought but</font>

921
00:39:08,900 --> 00:39:16,340
<font color="#CCCCCC">I do maintain a MIDI since 2001 and</font><font color="#E5E5E5"> it's</font>

922
00:39:13,700 --> 00:39:19,339
actually existed since<font color="#E5E5E5"> before that there</font>

923
00:39:16,340 --> 00:39:21,110
<font color="#CCCCCC">was</font><font color="#E5E5E5"> recently and those have been fixed</font>

924
00:39:19,340 --> 00:39:23,300
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> why we recommend that</font><font color="#CCCCCC"> version</font>

925
00:39:21,110 --> 00:39:25,430
but it's been around<font color="#CCCCCC"> very long and it's</font>

926
00:39:23,300 --> 00:39:26,630
it's actually<font color="#E5E5E5"> this is something very few</font>

927
00:39:25,430 --> 00:39:30,350
people<font color="#E5E5E5"> would know is actually all that</font>

928
00:39:26,630 --> 00:39:32,570
of<font color="#CCCCCC"> I scusi so</font><font color="#E5E5E5"> what yeah so it's been in</font>

929
00:39:30,350 --> 00:39:38,029
the kernel for I mean like for<font color="#E5E5E5"> 20 years</font>

930
00:39:32,570 --> 00:39:40,850
1997<font color="#CCCCCC"> yeah 1997</font><font color="#E5E5E5"> so I'm just saying 4.18</font>

931
00:39:38,030 --> 00:39:42,290
because there were some bugs<font color="#E5E5E5"> in I mean</font>

932
00:39:40,850 --> 00:39:44,390
I'd say<font color="#CCCCCC"> there</font><font color="#E5E5E5"> were some bugs but they</font>

933
00:39:42,290 --> 00:39:47,050
they probably wouldn't<font color="#E5E5E5"> have affected you</font>

934
00:39:44,390 --> 00:39:50,660
see it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> like it was</font><font color="#E5E5E5"> bugging before</font>

935
00:39:47,050 --> 00:39:53,720
4.18<font color="#E5E5E5"> at all</font><font color="#CCCCCC"> it was</font><font color="#E5E5E5"> working fine it's</font>

936
00:39:50,660 --> 00:39:54,859
just<font color="#CCCCCC"> that</font><font color="#E5E5E5"> if you did hit a bug in the</font>

937
00:39:53,720 --> 00:39:57,169
kernel driver you probably want to

938
00:39:54,860 --> 00:40:00,140
<font color="#CCCCCC">upgrade to poor</font><font color="#E5E5E5"> point 18 because there</font>

939
00:39:57,170 --> 00:40:04,370
are a<font color="#E5E5E5"> bunch of fixes they're not fair</font>

940
00:40:00,140 --> 00:40:06,980
yeah there<font color="#E5E5E5"> actually is a freebsd client</font>

941
00:40:04,370 --> 00:40:09,080
<font color="#CCCCCC">do</font><font color="#E5E5E5"> its again gate filter thing somebody</font>

942
00:40:06,980 --> 00:40:10,150
wrote<font color="#E5E5E5"> it's for scale</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> but it's just</font>

943
00:40:09,080 --> 00:40:15,259
<font color="#CCCCCC">manner</font>

944
00:40:10,150 --> 00:40:17,240
got any more<font color="#CCCCCC"> question</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> I'm well</font>

945
00:40:15,260 --> 00:40:20,090
aware that<font color="#CCCCCC"> an</font><font color="#E5E5E5"> MIDI</font><font color="#CCCCCC"> kit offers a lot of</font>

946
00:40:17,240 --> 00:40:21,890
flexibility<font color="#E5E5E5"> so but I'm</font><font color="#CCCCCC"> wondering like</font><font color="#E5E5E5"> as</font>

947
00:40:20,090 --> 00:40:23,810
an alternative approach<font color="#E5E5E5"> just for having</font>

948
00:40:21,890 --> 00:40:25,129
<font color="#E5E5E5">a basic block device without ever</font>

949
00:40:23,810 --> 00:40:28,310
injection and so on

950
00:40:25,130 --> 00:40:31,280
you could expose a<font color="#CCCCCC"> disk image in a few</font>

951
00:40:28,310 --> 00:40:34,790
<font color="#E5E5E5">fewest file system are you aware of any</font>

952
00:40:31,280 --> 00:40:38,510
performance comparison between like this

953
00:40:34,790 --> 00:40:40,670
<font color="#E5E5E5">approach and</font><font color="#CCCCCC"> NBD kit yes so this is</font><font color="#E5E5E5"> this</font>

954
00:40:38,510 --> 00:40:42,680
<font color="#CCCCCC">is actually interesting there have</font><font color="#E5E5E5"> been</font>

955
00:40:40,670 --> 00:40:45,560
for<font color="#CCCCCC"> example fuse drivers that have</font>

956
00:40:42,680 --> 00:40:47,839
exposed for example there's a fuse

957
00:40:45,560 --> 00:40:51,350
<font color="#CCCCCC">driver that exposed</font><font color="#E5E5E5"> partition block</font>

958
00:40:47,840 --> 00:40:54,080
<font color="#CCCCCC">devices to get around that to provide a</font>

959
00:40:51,350 --> 00:40:56,240
sort of way<font color="#E5E5E5"> to that I would say that I</font>

960
00:40:54,080 --> 00:40:58,460
<font color="#E5E5E5">would be surprised</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the MVD kit or</font>

961
00:40:56,240 --> 00:41:00,229
<font color="#CCCCCC">the MVD approach wasn't way faster than</font>

962
00:40:58,460 --> 00:41:02,090
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I mean like much faster we have</font>

963
00:41:00,230 --> 00:41:02,970
<font color="#E5E5E5">really concentrated in at one point</font>

964
00:41:02,090 --> 00:41:05,790
<font color="#CCCCCC">Tensei</font>

965
00:41:02,970 --> 00:41:09,660
on performance<font color="#E5E5E5"> as our number one thing</font>

966
00:41:05,790 --> 00:41:11,550
in 1.10<font color="#E5E5E5"> and I would imagine</font><font color="#CCCCCC"> that it's</font>

967
00:41:09,660 --> 00:41:13,950
just it would blow that way out<font color="#E5E5E5"> of the</font>

968
00:41:11,550 --> 00:41:15,480
<font color="#E5E5E5">water but I haven't tested it</font><font color="#CCCCCC"> so I don't</font>

969
00:41:13,950 --> 00:41:22,319
<font color="#E5E5E5">want to claim that</font><font color="#CCCCCC"> it's definitely true</font>

970
00:41:15,480 --> 00:41:24,090
<font color="#CCCCCC">but if it isn't it</font><font color="#E5E5E5"> it should be</font><font color="#CCCCCC"> yeah so</font>

971
00:41:22,320 --> 00:41:25,230
it's good<font color="#CCCCCC"> that you mentioned fuse</font>

972
00:41:24,090 --> 00:41:26,880
because<font color="#CCCCCC"> I like to</font><font color="#E5E5E5"> think of this as</font><font color="#CCCCCC"> like</font>

973
00:41:25,230 --> 00:41:28,740
<font color="#E5E5E5">being fuse for block devices</font>

974
00:41:26,880 --> 00:41:30,930
you know fuse of<font color="#CCCCCC"> filesystems is</font><font color="#E5E5E5"> also</font>

975
00:41:28,740 --> 00:41:34,859
brilliant<font color="#E5E5E5"> but it's for file systems</font><font color="#CCCCCC"> and</font>

976
00:41:30,930 --> 00:41:37,500
<font color="#CCCCCC">this is like fuse block devices</font><font color="#E5E5E5"> yeah so</font>

977
00:41:34,860 --> 00:41:39,630
I pretty much like the<font color="#E5E5E5"> overall direction</font>

978
00:41:37,500 --> 00:41:41,760
this is taking which<font color="#CCCCCC"> is making</font><font color="#E5E5E5"> it</font>

979
00:41:39,630 --> 00:41:43,170
possible<font color="#CCCCCC"> to to write stuff in userspace</font>

980
00:41:41,760 --> 00:41:45,440
that historically<font color="#E5E5E5"> was only</font><font color="#CCCCCC"> possible to</font>

981
00:41:43,170 --> 00:41:47,760
<font color="#CCCCCC">you and in the kernel and especially</font>

982
00:41:45,440 --> 00:41:51,060
making<font color="#E5E5E5"> it possible to do things in</font>

983
00:41:47,760 --> 00:41:54,030
<font color="#E5E5E5">userspace unprivileged the only problem</font>

984
00:41:51,060 --> 00:41:56,549
with that<font color="#CCCCCC"> that I see is</font><font color="#E5E5E5"> NBD and the NPD</font>

985
00:41:54,030 --> 00:41:59,100
of cars<font color="#E5E5E5"> route in order to mostly just to</font>

986
00:41:56,550 --> 00:41:59,610
drop<font color="#E5E5E5"> a block</font><font color="#CCCCCC"> Tobias yes that's the real</font>

987
00:41:59,100 --> 00:42:01,920
problem

988
00:41:59,610 --> 00:42:05,880
<font color="#CCCCCC">so the</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> about you know why</font>

989
00:42:01,920 --> 00:42:08,100
does this require<font color="#CCCCCC"> sudo</font><font color="#E5E5E5"> why do we require</font>

990
00:42:05,880 --> 00:42:08,970
<font color="#CCCCCC">very</font><font color="#E5E5E5"> privileges for this I say that</font>

991
00:42:08,100 --> 00:42:11,370
<font color="#CCCCCC">they've guessed the</font><font color="#E5E5E5"> best does not</font>

992
00:42:08,970 --> 00:42:15,330
require<font color="#CCCCCC"> sublet</font><font color="#E5E5E5"> isn't it</font>

993
00:42:11,370 --> 00:42:18,720
<font color="#CCCCCC">looping back to diffuse</font><font color="#E5E5E5"> one possible</font>

994
00:42:15,330 --> 00:42:20,069
approach is really first of<font color="#E5E5E5"> all the the</font>

995
00:42:18,720 --> 00:42:22,049
<font color="#E5E5E5">loopback device is something</font><font color="#CCCCCC"> that really</font>

996
00:42:20,070 --> 00:42:24,210
<font color="#E5E5E5">ought to to go</font><font color="#CCCCCC"> away there's no inherent</font>

997
00:42:22,050 --> 00:42:28,050
<font color="#E5E5E5">reason we couldn't in the kernel make it</font>

998
00:42:24,210 --> 00:42:30,200
so<font color="#CCCCCC"> that you can mount any any file not</font>

999
00:42:28,050 --> 00:42:32,870
just<font color="#CCCCCC"> a block device</font><font color="#E5E5E5"> a file directly</font>

1000
00:42:30,200 --> 00:42:35,069
without having<font color="#E5E5E5"> to you know have this</font>

1001
00:42:32,870 --> 00:42:36,560
weird intermediary where you create a

1002
00:42:35,070 --> 00:42:41,490
<font color="#CCCCCC">holy backrest and</font><font color="#E5E5E5"> then that would all</font>

1003
00:42:36,560 --> 00:42:44,610
make<font color="#E5E5E5"> it pop or help the</font><font color="#CCCCCC"> privilege issue</font>

1004
00:42:41,490 --> 00:42:46,830
<font color="#CCCCCC">I believe that the really foods that</font><font color="#E5E5E5"> you</font>

1005
00:42:44,610 --> 00:42:49,500
<font color="#E5E5E5">then and whether unit is hardened to</font>

1006
00:42:46,830 --> 00:42:51,270
somebody<font color="#E5E5E5"> just plugging in a basically</font>

1007
00:42:49,500 --> 00:42:55,170
what it's a global namespace

1008
00:42:51,270 --> 00:42:57,690
<font color="#E5E5E5">it's /dev is a global namespace we don't</font>

1009
00:42:55,170 --> 00:43:00,540
want to want<font color="#E5E5E5"> unprivileged users mucking</font>

1010
00:42:57,690 --> 00:43:01,980
around<font color="#E5E5E5"> with the global namespace</font><font color="#CCCCCC"> yeah an</font>

1011
00:43:00,540 --> 00:43:03,779
<font color="#E5E5E5">unprivileged users should be</font><font color="#CCCCCC"> able to</font>

1012
00:43:01,980 --> 00:43:05,580
mount any given file<font color="#E5E5E5"> in their home</font>

1013
00:43:03,780 --> 00:43:07,980
directory<font color="#E5E5E5"> without having to create</font>

1014
00:43:05,580 --> 00:43:09,600
<font color="#E5E5E5">something in</font><font color="#CCCCCC"> /dev so get a</font><font color="#E5E5E5"> hundred of</font>

1015
00:43:07,980 --> 00:43:11,430
loopback but<font color="#CCCCCC"> we'd help</font><font color="#E5E5E5"> with that that</font>

1016
00:43:09,600 --> 00:43:15,450
issue the other<font color="#E5E5E5"> thing that we are</font>

1017
00:43:11,430 --> 00:43:18,779
there's a with<font color="#CCCCCC"> queues so</font><font color="#E5E5E5"> making a fuse</font>

1018
00:43:15,450 --> 00:43:20,460
driver is it's got<font color="#CCCCCC"> fairly large</font><font color="#E5E5E5"> API but</font>

1019
00:43:18,780 --> 00:43:23,430
what would<font color="#E5E5E5"> be really</font><font color="#CCCCCC"> useful I think for</font>

1020
00:43:20,460 --> 00:43:26,870
<font color="#E5E5E5">this is a simplified way</font><font color="#CCCCCC"> of exposing</font>

1021
00:43:23,430 --> 00:43:29,460
just a single file or<font color="#CCCCCC"> refuse</font><font color="#E5E5E5"> rehab yeah</font>

1022
00:43:26,870 --> 00:43:30,810
yeah I mean so there are<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> a</font>

1023
00:43:29,460 --> 00:43:34,440
number<font color="#E5E5E5"> of problems with doing this</font>

1024
00:43:30,810 --> 00:43:36,000
<font color="#E5E5E5">unprivileged</font><font color="#CCCCCC"> and I think actually you</font>

1025
00:43:34,440 --> 00:43:37,530
<font color="#CCCCCC">rot</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> life</font><font color="#E5E5E5"> like local namespaces I</font>

1026
00:43:36,000 --> 00:43:40,020
think they knew their definition<font color="#CCCCCC"> office</font>

1027
00:43:37,530 --> 00:43:42,150
<font color="#CCCCCC">you</font><font color="#E5E5E5"> they've seized those devices being</font>

1028
00:43:40,020 --> 00:43:45,900
being crated and that runs a whole bunch

1029
00:43:42,150 --> 00:43:47,430
of code<font color="#E5E5E5"> against them and I it's my</font>

1030
00:43:45,900 --> 00:43:50,490
<font color="#E5E5E5">belief that you dev is not really</font>

1031
00:43:47,430 --> 00:43:52,680
hardened to doing<font color="#E5E5E5"> that against you know</font>

1032
00:43:50,490 --> 00:43:54,270
any old<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> that you just throw in</font>

1033
00:43:52,680 --> 00:43:55,830
there that any user could could throw

1034
00:43:54,270 --> 00:43:57,630
them<font color="#E5E5E5"> all right so I</font><font color="#CCCCCC"> think we've run out</font>

1035
00:43:55,830 --> 00:43:59,130
of time<font color="#E5E5E5"> but thanks everybody for</font>

1036
00:43:57,630 --> 00:44:01,550
attending and<font color="#E5E5E5"> I hope you have a good</font>

1037
00:43:59,130 --> 00:44:01,550
falls down

1038
00:44:05,450 --> 00:44:08,529
[Music]

