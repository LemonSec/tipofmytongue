1
00:00:05,879 --> 00:00:11,739
so I guess there would be no microphone

2
00:00:09,370 --> 00:00:20,918
<font color="#CCCCCC">there</font><font color="#E5E5E5"> without some news from the herd</font>

3
00:00:11,740 --> 00:00:24,159
<font color="#CCCCCC">and I so good</font><font color="#E5E5E5"> morning</font><font color="#CCCCCC"> everybody</font><font color="#E5E5E5"> and</font>

4
00:00:20,919 --> 00:00:28,900
<font color="#E5E5E5">thanks for</font><font color="#CCCCCC"> coming so I won't</font><font color="#E5E5E5"> talk about</font>

5
00:00:24,159 --> 00:00:32,560
<font color="#CCCCCC">a specific bit of the herd</font><font color="#E5E5E5"> but general</font>

6
00:00:28,900 --> 00:00:36,060
news and you know<font color="#CCCCCC"> plans for the</font><font color="#E5E5E5"> future</font>

7
00:00:32,560 --> 00:00:38,500
just the usual introduction to the herd

8
00:00:36,060 --> 00:00:40,840
<font color="#CCCCCC">it's actually all about freedom</font><font color="#E5E5E5"> zero</font>

9
00:00:38,500 --> 00:00:44,380
being able to run<font color="#CCCCCC"> whatever</font><font color="#E5E5E5"> in with</font>

10
00:00:40,840 --> 00:00:46,540
whichever situation for any purpose and

11
00:00:44,380 --> 00:00:48,940
notably that's the<font color="#E5E5E5"> freedom for actual</font>

12
00:00:46,540 --> 00:00:52,540
users on the system<font color="#CCCCCC"> it shouldn't have to</font>

13
00:00:48,940 --> 00:00:55,780
ask<font color="#E5E5E5"> the system administrator</font><font color="#CCCCCC"> to do some</font>

14
00:00:52,540 --> 00:00:58,030
crazy<font color="#E5E5E5"> things like partition the disk or</font>

15
00:00:55,780 --> 00:01:00,190
something<font color="#E5E5E5"> like this as long as they have</font>

16
00:00:58,030 --> 00:01:02,470
the<font color="#CCCCCC"> right to access</font><font color="#E5E5E5"> a disk or some area</font>

17
00:01:00,190 --> 00:01:05,950
or<font color="#E5E5E5"> whatever this should be</font><font color="#CCCCCC"> able to just</font>

18
00:01:02,470 --> 00:01:08,140
run<font color="#CCCCCC"> F disk</font><font color="#E5E5E5"> and things like this and also</font>

19
00:01:05,950 --> 00:01:10,510
network access<font color="#E5E5E5"> you should</font><font color="#CCCCCC"> be able to run</font>

20
00:01:08,140 --> 00:01:12,070
<font color="#CCCCCC">a VPN as a user and things like</font><font color="#E5E5E5"> this</font>

21
00:01:10,510 --> 00:01:15,370
there's no<font color="#CCCCCC"> reason you shouldn't</font><font color="#E5E5E5"> be able</font>

22
00:01:12,070 --> 00:01:17,050
to<font color="#CCCCCC"> and</font><font color="#E5E5E5"> also the freedom</font><font color="#CCCCCC"> to innovate if</font>

23
00:01:15,370 --> 00:01:19,570
you want to store<font color="#E5E5E5"> your data</font><font color="#CCCCCC"> in a</font>

24
00:01:17,050 --> 00:01:21,670
<font color="#CCCCCC">different way and</font><font color="#E5E5E5"> with an experimental</font>

25
00:01:19,570 --> 00:01:22,570
<font color="#E5E5E5">file system you should</font><font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to do</font>

26
00:01:21,670 --> 00:01:25,659
<font color="#E5E5E5">this</font>

27
00:01:22,570 --> 00:01:27,279
just try new things<font color="#CCCCCC"> without</font><font color="#E5E5E5"> the fear</font><font color="#CCCCCC"> of</font>

28
00:01:25,659 --> 00:01:29,470
<font color="#CCCCCC">crashing the</font><font color="#E5E5E5"> machine just because the</font>

29
00:01:27,280 --> 00:01:32,350
<font color="#E5E5E5">system will</font><font color="#CCCCCC"> actually prevent you from</font>

30
00:01:29,470 --> 00:01:34,298
doing<font color="#E5E5E5"> bad things like this you would</font>

31
00:01:32,350 --> 00:01:36,369
like to give a PCI card<font color="#CCCCCC"> the experimental</font>

32
00:01:34,299 --> 00:01:39,159
<font color="#CCCCCC">PCI card</font><font color="#E5E5E5"> through a program which will</font>

33
00:01:36,370 --> 00:01:41,740
drive<font color="#E5E5E5"> it in a safe</font><font color="#CCCCCC"> way and</font><font color="#E5E5E5"> all kinds of</font>

34
00:01:39,159 --> 00:01:44,530
things<font color="#CCCCCC"> like this and</font><font color="#E5E5E5"> also the freedom</font>

35
00:01:41,740 --> 00:01:46,929
from the<font color="#E5E5E5"> program's themselves if they</font>

36
00:01:44,530 --> 00:01:49,630
crash then<font color="#CCCCCC"> okay that's</font><font color="#E5E5E5"> fine if a driver</font>

37
00:01:46,930 --> 00:01:53,530
crashes<font color="#CCCCCC"> okay that's</font><font color="#E5E5E5"> fine</font><font color="#CCCCCC"> it shouldn't</font>

38
00:01:49,630 --> 00:01:56,920
harm the rest of the system<font color="#CCCCCC"> so</font><font color="#E5E5E5"> to give</font>

39
00:01:53,530 --> 00:01:59,470
an ID<font color="#E5E5E5"> and this is how it works</font><font color="#CCCCCC"> you have</font>

40
00:01:56,920 --> 00:02:02,470
the kernel here a<font color="#CCCCCC"> microkernel which</font><font color="#E5E5E5"> only</font>

41
00:01:59,470 --> 00:02:05,820
handles the tasks<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> and IPC between</font>

42
00:02:02,470 --> 00:02:11,260
userland programs and then you have

43
00:02:05,820 --> 00:02:13,660
several<font color="#E5E5E5"> routes started</font><font color="#CCCCCC"> services</font><font color="#E5E5E5"> like PFI</font>

44
00:02:11,260 --> 00:02:16,390
net from<font color="#E5E5E5"> the tcp/ip stack proc to know</font>

45
00:02:13,660 --> 00:02:18,200
<font color="#E5E5E5">what is a process who has a</font><font color="#CCCCCC"> bid and</font>

46
00:02:16,390 --> 00:02:22,250
<font color="#E5E5E5">which identity</font>

47
00:02:18,200 --> 00:02:24,709
has each process<font color="#E5E5E5"> earth which knows who</font>

48
00:02:22,250 --> 00:02:27,349
is who<font color="#E5E5E5"> and</font><font color="#CCCCCC"> x2 a first-to-file system and</font>

49
00:02:24,709 --> 00:02:29,510
then when you have<font color="#CCCCCC"> a shell which is</font>

50
00:02:27,349 --> 00:02:31,399
starting<font color="#E5E5E5"> Mississippi actually they are</font>

51
00:02:29,510 --> 00:02:34,160
talking<font color="#CCCCCC"> with X two</font><font color="#E5E5E5"> FS to access the</font>

52
00:02:31,400 --> 00:02:37,730
files<font color="#E5E5E5"> and it goes through</font><font color="#CCCCCC"> also that X 2</font>

53
00:02:34,160 --> 00:02:40,040
<font color="#E5E5E5">FS knows who is that program which is</font>

54
00:02:37,730 --> 00:02:42,619
asking me to<font color="#CCCCCC"> read a file or</font><font color="#E5E5E5"> whatever and</font>

55
00:02:40,040 --> 00:02:45,019
it checks with odd<font color="#E5E5E5"> who he is according</font>

56
00:02:42,620 --> 00:02:49,220
<font color="#CCCCCC">to what is told on on the file</font><font color="#E5E5E5"> system</font>

57
00:02:45,019 --> 00:02:51,349
and<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the permissions I mean so the</font>

58
00:02:49,220 --> 00:02:53,720
thing<font color="#CCCCCC"> is if the server crashes then</font>

59
00:02:51,349 --> 00:02:56,119
that's not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> a problem if the</font><font color="#E5E5E5"> PFI</font>

60
00:02:53,720 --> 00:02:59,750
net stack crashes then that's<font color="#E5E5E5"> fine we</font>

61
00:02:56,120 --> 00:03:02,959
start<font color="#E5E5E5"> another one and then thinks we</font>

62
00:02:59,750 --> 00:03:05,930
continue<font color="#E5E5E5"> it's nice to</font><font color="#CCCCCC"> debug</font><font color="#E5E5E5"> because you</font>

63
00:03:02,959 --> 00:03:08,569
can run<font color="#E5E5E5"> gdb on a file system and things</font>

64
00:03:05,930 --> 00:03:10,430
like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> the whole</font><font color="#E5E5E5"> console is actually</font>

65
00:03:08,569 --> 00:03:12,319
a<font color="#E5E5E5"> user</font><font color="#CCCCCC"> learned application so we could</font>

66
00:03:10,430 --> 00:03:15,140
implement<font color="#CCCCCC"> the crazy things like Chinese</font>

67
00:03:12,319 --> 00:03:18,738
in text mode and that<font color="#E5E5E5"> is using glyphs on</font>

68
00:03:15,140 --> 00:03:22,850
the fly<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> show them and with a</font>

69
00:03:18,739 --> 00:03:25,430
<font color="#E5E5E5">normal VGA card and the kernel itself</font>

70
00:03:22,850 --> 00:03:26,780
only handles<font color="#E5E5E5"> the</font><font color="#CCCCCC"> task memory</font><font color="#E5E5E5"> and IPC and</font>

71
00:03:25,430 --> 00:03:30,769
nothing more<font color="#E5E5E5"> than this</font>

72
00:03:26,780 --> 00:03:33,170
normally<font color="#E5E5E5"> I talk about it more later</font><font color="#CCCCCC"> this</font>

73
00:03:30,769 --> 00:03:35,540
<font color="#CCCCCC">also provides a virtualization at</font><font color="#E5E5E5"> a</font>

74
00:03:33,170 --> 00:03:37,819
really fine grain because<font color="#E5E5E5"> you can choose</font>

75
00:03:35,540 --> 00:03:39,980
for<font color="#E5E5E5"> each</font><font color="#CCCCCC"> program which tcp/ip stack it</font>

76
00:03:37,819 --> 00:03:43,850
will use which root<font color="#CCCCCC"> filesystem it will</font>

77
00:03:39,980 --> 00:03:45,828
use which notion of process it will use

78
00:03:43,850 --> 00:03:48,200
which notion of user it will<font color="#E5E5E5"> use and</font>

79
00:03:45,829 --> 00:03:52,250
which is exactly the<font color="#E5E5E5"> same as on Linux</font>

80
00:03:48,200 --> 00:03:54,920
with name name services and all kinds<font color="#E5E5E5"> of</font>

81
00:03:52,250 --> 00:03:57,980
separation<font color="#CCCCCC"> except that here it's deep</font>

82
00:03:54,920 --> 00:04:00,440
<font color="#E5E5E5">inside the structure of the neuron</font><font color="#CCCCCC"> that</font>

83
00:03:57,980 --> 00:04:05,869
it's that way so it's not<font color="#E5E5E5"> like on Linux</font>

84
00:04:00,440 --> 00:04:07,160
<font color="#E5E5E5">oh we forgot to</font><font color="#CCCCCC"> to separate</font><font color="#E5E5E5"> some support</font>

85
00:04:05,870 --> 00:04:09,349
for<font color="#E5E5E5"> instance and network</font><font color="#CCCCCC"> support I</font>

86
00:04:07,160 --> 00:04:11,900
forgot about<font color="#E5E5E5"> this in the herd you cannot</font>

87
00:04:09,349 --> 00:04:13,518
forget about compartmentalizing things

88
00:04:11,900 --> 00:04:16,478
just because that's<font color="#E5E5E5"> the way it is done</font>

89
00:04:13,519 --> 00:04:22,880
<font color="#E5E5E5">anyway you do not have another way than</font>

90
00:04:16,478 --> 00:04:25,490
having<font color="#E5E5E5"> separations between processes</font><font color="#CCCCCC"> so</font>

91
00:04:22,880 --> 00:04:27,409
you can do crazy things like<font color="#E5E5E5"> have an</font><font color="#CCCCCC"> FTP</font>

92
00:04:25,490 --> 00:04:31,699
<font color="#CCCCCC">FS running on top of the tcp/ip</font><font color="#E5E5E5"> stack</font>

93
00:04:27,409 --> 00:04:34,219
<font color="#CCCCCC">and then when</font><font color="#E5E5E5"> I so FS opening an</font><font color="#CCCCCC"> ISO on</font>

94
00:04:31,699 --> 00:04:38,150
<font color="#CCCCCC">ftp server</font><font color="#E5E5E5"> and then run a shell within</font>

95
00:04:34,219 --> 00:04:42,110
the<font color="#E5E5E5"> iso image it's like this you</font><font color="#CCCCCC"> so you</font>

96
00:04:38,150 --> 00:04:45,438
you set<font color="#E5E5E5"> and translator on</font><font color="#CCCCCC"> ftp</font><font color="#E5E5E5"> c'mon and</font>

97
00:04:42,110 --> 00:04:48,050
then you can<font color="#CCCCCC"> open a URL</font><font color="#E5E5E5"> and then start</font>

98
00:04:45,439 --> 00:04:51,069
<font color="#CCCCCC">an iso file system and</font><font color="#E5E5E5"> then you can look</font>

99
00:04:48,050 --> 00:04:54,770
at it and the nice thing<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that since</font>

100
00:04:51,069 --> 00:04:59,060
LS just looks at the<font color="#E5E5E5"> root of the iso</font>

101
00:04:54,770 --> 00:05:01,430
image<font color="#E5E5E5"> then in the iso translator only</font>

102
00:04:59,060 --> 00:05:03,379
has to ask ftp effort to download a bit

103
00:05:01,430 --> 00:05:05,330
of the iso image<font color="#E5E5E5"> so you don't have to</font>

104
00:05:03,379 --> 00:05:07,849
download<font color="#E5E5E5"> everything just to see what's</font>

105
00:05:05,330 --> 00:05:11,628
in there<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> really a nice</font><font color="#CCCCCC"> thing</font>

106
00:05:07,849 --> 00:05:13,520
<font color="#CCCCCC">and you can permanently store this kind</font>

107
00:05:11,629 --> 00:05:16,580
of<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> so this set</font><font color="#CCCCCC"> runs for instance</font>

108
00:05:13,520 --> 00:05:19,460
you can store it in your home<font color="#CCCCCC"> I have a</font>

109
00:05:16,580 --> 00:05:22,818
little<font color="#E5E5E5"> example like here</font><font color="#CCCCCC"> I have a</font>

110
00:05:19,460 --> 00:05:25,609
signature file which each time I open it

111
00:05:22,819 --> 00:05:27,589
I get another content just<font color="#E5E5E5"> because it's</font>

112
00:05:25,610 --> 00:05:30,889
a translator behind which<font color="#E5E5E5"> just starts</font>

113
00:05:27,589 --> 00:05:33,259
fortune<font color="#E5E5E5"> for its open of the file so you</font>

114
00:05:30,889 --> 00:05:35,089
have nice things<font color="#E5E5E5"> like this which are</font>

115
00:05:33,259 --> 00:05:38,449
possible thanks to<font color="#E5E5E5"> and this kind of</font>

116
00:05:35,089 --> 00:05:41,569
flexibility<font color="#E5E5E5"> and just to show you</font><font color="#CCCCCC"> so I</font>

117
00:05:38,449 --> 00:05:44,870
have a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> processes of course so</font>

118
00:05:41,569 --> 00:05:47,509
there's X 2 FS here the old server and

119
00:05:44,870 --> 00:05:50,180
all kinds of<font color="#CCCCCC"> an translators for</font>

120
00:05:47,509 --> 00:05:53,469
<font color="#E5E5E5">different</font><font color="#CCCCCC"> services and</font><font color="#E5E5E5"> if I kill one</font><font color="#CCCCCC"> of</font>

121
00:05:50,180 --> 00:05:57,080
them then that's fine the rest continues

122
00:05:53,469 --> 00:05:59,270
so the<font color="#E5E5E5"> herd is a real thing what is</font>

123
00:05:57,080 --> 00:06:01,789
actually it's<font color="#CCCCCC"> really stable I don't</font>

124
00:05:59,270 --> 00:06:04,310
remember when I reinstalled the<font color="#CCCCCC"> boxes</font>

125
00:06:01,789 --> 00:06:07,219
I'm using and this one for<font color="#CCCCCC"> instance</font><font color="#E5E5E5"> I've</font>

126
00:06:04,310 --> 00:06:08,899
been copying over<font color="#E5E5E5"> and over in virtual</font>

127
00:06:07,219 --> 00:06:11,620
machines between<font color="#E5E5E5"> my different</font><font color="#CCCCCC"> laptops</font>

128
00:06:08,899 --> 00:06:15,229
<font color="#E5E5E5">and I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> remember when I installed it</font>

129
00:06:11,620 --> 00:06:17,389
the<font color="#CCCCCC"> Debian build is on like this</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> they</font>

130
00:06:15,229 --> 00:06:20,389
keep building Debian packages<font color="#E5E5E5"> all day</font>

131
00:06:17,389 --> 00:06:23,899
long and yes from times to times<font color="#E5E5E5"> there</font>

132
00:06:20,389 --> 00:06:26,180
is<font color="#E5E5E5"> maybe a program which takes all</font>

133
00:06:23,899 --> 00:06:28,819
resources because it does make<font color="#CCCCCC"> minus</font><font color="#E5E5E5"> J</font>

134
00:06:26,180 --> 00:06:31,009
all things like this<font color="#E5E5E5"> and then the system</font>

135
00:06:28,819 --> 00:06:33,919
locks but then yeah that's<font color="#E5E5E5"> the normal</font>

136
00:06:31,009 --> 00:06:37,189
kind of things when a process tries to

137
00:06:33,919 --> 00:06:39,139
eat all<font color="#E5E5E5"> resources</font><font color="#CCCCCC"> of a system but</font><font color="#E5E5E5"> yeah</font>

138
00:06:37,189 --> 00:06:43,000
<font color="#E5E5E5">usually</font><font color="#CCCCCC"> it just</font><font color="#E5E5E5"> works</font>

139
00:06:39,139 --> 00:06:45,870
we have like<font color="#CCCCCC"> 3/4 of Debian</font><font color="#E5E5E5"> building</font>

140
00:06:43,000 --> 00:06:49,110
which<font color="#E5E5E5"> is really a thing</font>

141
00:06:45,870 --> 00:06:52,770
you don't have things without patches

142
00:06:49,110 --> 00:06:54,780
like<font color="#E5E5E5"> Firefox or</font><font color="#CCCCCC"> LibreOffice but all the</font>

143
00:06:52,770 --> 00:06:57,299
dependencies basically are there except

144
00:06:54,780 --> 00:06:59,640
a<font color="#E5E5E5"> few things like cargo and things like</font>

145
00:06:57,300 --> 00:07:02,580
<font color="#E5E5E5">this which we are which we are working</font>

146
00:06:59,640 --> 00:07:05,729
<font color="#E5E5E5">on but</font><font color="#CCCCCC"> basically we have XFC ignore KD</font>

147
00:07:02,580 --> 00:07:08,789
these kind of things do work and it's

148
00:07:05,730 --> 00:07:10,890
supporting upstream<font color="#CCCCCC"> so this is really an</font>

149
00:07:08,790 --> 00:07:13,980
apprentice<font color="#E5E5E5"> in</font><font color="#CCCCCC"> operating system which</font>

150
00:07:10,890 --> 00:07:16,800
does exist in in upstream<font color="#E5E5E5"> like GCC</font><font color="#CCCCCC"> T Lib</font>

151
00:07:13,980 --> 00:07:17,990
<font color="#CCCCCC">C</font><font color="#E5E5E5"> LLVM and we are working on ongoing</font>

152
00:07:16,800 --> 00:07:20,820
rest

153
00:07:17,990 --> 00:07:22,740
so that's progressing<font color="#E5E5E5"> so we have the</font>

154
00:07:20,820 --> 00:07:24,050
Debian distribution which is<font color="#E5E5E5"> really well</font>

155
00:07:22,740 --> 00:07:28,050
<font color="#CCCCCC">supported we have the installation</font>

156
00:07:24,050 --> 00:07:31,650
<font color="#E5E5E5">working just like a normal DB on</font><font color="#CCCCCC"> port on</font>

157
00:07:28,050 --> 00:07:34,140
on Linux or on KPBS<font color="#CCCCCC"> D</font><font color="#E5E5E5"> and there are</font><font color="#CCCCCC"> gigs</font>

158
00:07:31,650 --> 00:07:37,109
<font color="#CCCCCC">Sdn are</font><font color="#E5E5E5"> ongoing</font><font color="#CCCCCC"> there is a lot</font><font color="#E5E5E5"> of work</font>

159
00:07:34,140 --> 00:07:39,390
on<font color="#E5E5E5"> geeks a SD arc</font><font color="#CCCCCC"> maybe it's on post but</font>

160
00:07:37,110 --> 00:07:43,260
there are people<font color="#E5E5E5"> working on</font><font color="#CCCCCC"> it from</font><font color="#E5E5E5"> x to</font>

161
00:07:39,390 --> 00:07:46,530
x so<font color="#CCCCCC"> geeks</font><font color="#E5E5E5"> SD would probably provide one</font>

162
00:07:43,260 --> 00:07:51,300
of<font color="#E5E5E5"> the most pure new operating system</font>

163
00:07:46,530 --> 00:07:55,979
with<font color="#CCCCCC"> no corner</font><font color="#E5E5E5"> etc and so it's on its</font>

164
00:07:51,300 --> 00:07:58,800
track so now what what what's the future

165
00:07:55,980 --> 00:08:02,220
<font color="#CCCCCC">the thing is there are many many many</font>

166
00:07:58,800 --> 00:08:04,230
<font color="#E5E5E5">existing bits in different places which</font>

167
00:08:02,220 --> 00:08:07,980
just need polishing so I would give a

168
00:08:04,230 --> 00:08:10,920
few examples<font color="#CCCCCC"> that's the idea of in 10%</font>

169
00:08:07,980 --> 00:08:14,400
<font color="#CCCCCC">time you get 90% of the thing done and</font>

170
00:08:10,920 --> 00:08:17,250
then for the 90mm<font color="#E5E5E5"> for the 10 remaining</font>

171
00:08:14,400 --> 00:08:19,739
<font color="#E5E5E5">percent you have to take</font><font color="#CCCCCC"> 90% of the time</font>

172
00:08:17,250 --> 00:08:21,720
and<font color="#E5E5E5"> people a lot of people don't take</font>

173
00:08:19,740 --> 00:08:23,970
<font color="#E5E5E5">that trying to make it just work</font>

174
00:08:21,720 --> 00:08:26,790
completely<font color="#E5E5E5"> they had something funny and</font>

175
00:08:23,970 --> 00:08:28,530
then they start they stop there that's a

176
00:08:26,790 --> 00:08:30,840
bit<font color="#E5E5E5"> sad because then there are a lot of</font>

177
00:08:28,530 --> 00:08:33,679
things and we show<font color="#E5E5E5"> what's wrong which</font>

178
00:08:30,840 --> 00:08:37,679
are not completely working<font color="#E5E5E5"> but almost</font>

179
00:08:33,679 --> 00:08:40,770
<font color="#E5E5E5">then I show the ongoing project IDs and</font>

180
00:08:37,679 --> 00:08:43,859
a<font color="#E5E5E5"> couple of crazy ideas that we could</font>

181
00:08:40,770 --> 00:08:47,840
experiment with so for instance there is

182
00:08:43,860 --> 00:08:51,120
HTTP<font color="#E5E5E5"> FS and</font><font color="#CCCCCC"> ftp FS which work quite fine</font>

183
00:08:47,840 --> 00:08:53,190
most of the time so you<font color="#E5E5E5"> can do like you</font>

184
00:08:51,120 --> 00:08:55,620
<font color="#E5E5E5">CD to a directory and then you can</font>

185
00:08:53,190 --> 00:08:58,200
install all the files<font color="#E5E5E5"> with that kind of</font>

186
00:08:55,620 --> 00:08:58,830
name<font color="#E5E5E5"> and that's really efficient because</font>

187
00:08:58,200 --> 00:09:01,950
<font color="#E5E5E5">you don't</font>

188
00:08:58,830 --> 00:09:03,930
have to do downloading or whatever<font color="#E5E5E5"> it's</font>

189
00:09:01,950 --> 00:09:07,230
<font color="#CCCCCC">just normal</font><font color="#E5E5E5"> shell operations</font>

190
00:09:03,930 --> 00:09:11,880
I think this almost works fine because

191
00:09:07,230 --> 00:09:15,210
the HTTP server here provides an HTML

192
00:09:11,880 --> 00:09:18,450
file which HTTP FS can pass correctly

193
00:09:15,210 --> 00:09:24,180
but there are all other<font color="#E5E5E5"> kinds of image</font>

194
00:09:18,450 --> 00:09:27,780
<font color="#CCCCCC">of HTML image page that HT PFS has</font>

195
00:09:24,180 --> 00:09:30,150
troubles with with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> FTP FS it works</font>

196
00:09:27,780 --> 00:09:32,040
<font color="#E5E5E5">quite fine as well so you can just</font><font color="#CCCCCC"> find</font>

197
00:09:30,150 --> 00:09:34,490
some files<font color="#E5E5E5"> because you don't remember</font>

198
00:09:32,040 --> 00:09:37,410
where it<font color="#E5E5E5"> is and then it does it for you</font>

199
00:09:34,490 --> 00:09:39,660
<font color="#E5E5E5">of course you have FTP clients which can</font>

200
00:09:37,410 --> 00:09:42,089
do this kind of thing but<font color="#CCCCCC"> just usual</font>

201
00:09:39,660 --> 00:09:46,079
just use your shell<font color="#E5E5E5"> with normal tools</font>

202
00:09:42,090 --> 00:09:49,080
<font color="#E5E5E5">and it will work fine</font><font color="#CCCCCC"> we have name space</font>

203
00:09:46,080 --> 00:09:51,600
based translators so that's a funny

204
00:09:49,080 --> 00:09:54,300
thing<font color="#CCCCCC"> so you can look</font><font color="#E5E5E5"> at the software</font>

205
00:09:51,600 --> 00:09:56,280
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> dodgy set in you happened come</font>

206
00:09:54,300 --> 00:09:58,589
<font color="#E5E5E5">on come on here</font><font color="#CCCCCC"> come a comma here</font><font color="#E5E5E5"> and</font>

207
00:09:56,280 --> 00:10:00,959
<font color="#E5E5E5">then you can see the into it so the idea</font>

208
00:09:58,590 --> 00:10:03,570
is that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a translator behind the</font>

209
00:10:00,960 --> 00:10:07,770
actual file system<font color="#CCCCCC"> on whatever and then</font>

210
00:10:03,570 --> 00:10:10,950
<font color="#E5E5E5">it</font><font color="#CCCCCC"> sees</font><font color="#E5E5E5"> that you have put these commas</font>

211
00:10:07,770 --> 00:10:12,660
<font color="#E5E5E5">and then it will start at RFS</font><font color="#CCCCCC"> and</font>

212
00:10:10,950 --> 00:10:14,910
translator so you can<font color="#CCCCCC"> actually enter</font>

213
00:10:12,660 --> 00:10:18,180
into it and then look what's in there

214
00:10:14,910 --> 00:10:21,719
and again<font color="#CCCCCC"> tah is indexed so you do not</font>

215
00:10:18,180 --> 00:10:24,030
<font color="#E5E5E5">have to read</font><font color="#CCCCCC"> all of the tower file you</font>

216
00:10:21,720 --> 00:10:25,980
could<font color="#CCCCCC"> chain them you have in disk image</font>

217
00:10:24,030 --> 00:10:28,800
and then you open<font color="#E5E5E5"> a partition within it</font>

218
00:10:25,980 --> 00:10:33,300
and then you open<font color="#CCCCCC"> the</font><font color="#E5E5E5"> X 2 FS 5 system</font>

219
00:10:28,800 --> 00:10:35,400
<font color="#E5E5E5">within it so I'm not sure these this one</font>

220
00:10:33,300 --> 00:10:37,349
is<font color="#CCCCCC"> working but it's the kind of thing</font>

221
00:10:35,400 --> 00:10:39,480
that<font color="#CCCCCC"> that should be possible and</font>

222
00:10:37,350 --> 00:10:41,580
<font color="#E5E5E5">possibly it's not so many lines of code</font>

223
00:10:39,480 --> 00:10:43,410
<font color="#CCCCCC">to get it working so yeah</font><font color="#E5E5E5"> please</font>

224
00:10:41,580 --> 00:10:48,030
somebody have a look and have fun with

225
00:10:43,410 --> 00:10:50,550
implementing<font color="#E5E5E5"> this in</font><font color="#CCCCCC"> box FS if you have</font>

226
00:10:48,030 --> 00:10:53,339
<font color="#CCCCCC">a name box file</font><font color="#E5E5E5"> it's all in males into</font>

227
00:10:50,550 --> 00:10:56,550
just one file<font color="#E5E5E5"> you</font><font color="#CCCCCC"> could start</font><font color="#E5E5E5"> em box FS</font>

228
00:10:53,340 --> 00:11:00,540
and then manipulate things<font color="#E5E5E5"> inside it</font>

229
00:10:56,550 --> 00:11:03,630
<font color="#CCCCCC">just put some random</font><font color="#E5E5E5"> IDs</font><font color="#CCCCCC"> that's kind of</font>

230
00:11:00,540 --> 00:11:05,760
<font color="#E5E5E5">IDs you could have an XML FS you open an</font>

231
00:11:03,630 --> 00:11:08,580
XML file and<font color="#CCCCCC"> then you can draws into it</font>

232
00:11:05,760 --> 00:11:12,450
<font color="#E5E5E5">with directories so you can find for</font>

233
00:11:08,580 --> 00:11:16,980
instance<font color="#E5E5E5"> the h1 sections and then just</font>

234
00:11:12,450 --> 00:11:22,290
get the<font color="#E5E5E5"> text of each and h1 section in a</font>

235
00:11:16,980 --> 00:11:24,660
nice way there are some experiments with

236
00:11:22,290 --> 00:11:27,750
being able to write all these kinds of

237
00:11:24,660 --> 00:11:31,520
translators in<font color="#E5E5E5"> high-level languages</font><font color="#CCCCCC"> so</font>

238
00:11:27,750 --> 00:11:34,920
in<font color="#E5E5E5"> perl in</font><font color="#CCCCCC"> lisp in java in python there</font>

239
00:11:31,520 --> 00:11:37,350
<font color="#E5E5E5">these are mostly experimental but some</font>

240
00:11:34,920 --> 00:11:40,170
of them are<font color="#CCCCCC"> working and it's just a bit</font>

241
00:11:37,350 --> 00:11:41,990
<font color="#E5E5E5">of polishing the existing thing and to</font>

242
00:11:40,170 --> 00:11:46,760
have<font color="#E5E5E5"> something which would work and</font>

243
00:11:41,990 --> 00:11:46,760
allow a lot<font color="#E5E5E5"> of different possibilities</font>

244
00:11:46,890 --> 00:11:54,360
I'm not detailing those but there are

245
00:11:50,160 --> 00:11:56,579
more<font color="#CCCCCC"> GFS</font><font color="#E5E5E5"> to open a FS on file system and</font>

246
00:11:54,360 --> 00:11:58,680
<font color="#E5E5E5">it is read-only but at least it works</font>

247
00:11:56,580 --> 00:12:02,310
but<font color="#CCCCCC"> no right</font>

248
00:11:58,680 --> 00:12:05,849
validity<font color="#E5E5E5"> would be fine notice to notice</font>

249
00:12:02,310 --> 00:12:10,560
the modifications of a file run I've

250
00:12:05,850 --> 00:12:15,480
shown it with the fortune program<font color="#E5E5E5"> Union</font>

251
00:12:10,560 --> 00:12:18,119
FS<font color="#CCCCCC"> you to Union</font><font color="#E5E5E5"> some file systems so</font>

252
00:12:15,480 --> 00:12:21,630
these are just<font color="#E5E5E5"> to polish and to get them</font>

253
00:12:18,120 --> 00:12:25,470
working will you<font color="#CCCCCC"> find then there is</font>

254
00:12:21,630 --> 00:12:30,480
ongoing work<font color="#CCCCCC"> a lot of on</font><font color="#E5E5E5"> the hardware</font>

255
00:12:25,470 --> 00:12:33,780
support field<font color="#E5E5E5"> because we</font><font color="#CCCCCC"> have to have</font>

256
00:12:30,480 --> 00:12:36,990
<font color="#CCCCCC">this</font><font color="#E5E5E5"> to continue being able to start the</font>

257
00:12:33,780 --> 00:12:39,990
<font color="#E5E5E5">whole on on machines so recently we've</font>

258
00:12:36,990 --> 00:12:42,600
introduced a PCI arbiter which allows<font color="#CCCCCC"> to</font>

259
00:12:39,990 --> 00:12:45,690
have<font color="#E5E5E5"> a safe concurrent access to PCI</font>

260
00:12:42,600 --> 00:12:46,350
config space up to now we would just let

261
00:12:45,690 --> 00:12:49,110
programs

262
00:12:46,350 --> 00:12:52,500
<font color="#E5E5E5">poke at</font><font color="#CCCCCC"> IO ports and concurrently and</font><font color="#E5E5E5"> of</font>

263
00:12:49,110 --> 00:12:54,420
course<font color="#E5E5E5"> it would</font><font color="#CCCCCC"> be a nightmare</font><font color="#E5E5E5"> if two</font>

264
00:12:52,500 --> 00:12:58,410
programs do the same at the<font color="#E5E5E5"> same time</font>

265
00:12:54,420 --> 00:12:58,890
and so<font color="#CCCCCC"> I talked about</font><font color="#E5E5E5"> it last year</font><font color="#CCCCCC"> the</font>

266
00:12:58,410 --> 00:13:00,810
nice

267
00:12:58,890 --> 00:13:02,910
the really cool thing would be to<font color="#E5E5E5"> be</font>

268
00:13:00,810 --> 00:13:05,489
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use an iommu to make it safe</font>

269
00:13:02,910 --> 00:13:08,459
<font color="#E5E5E5">that is the PCI arbiter would give</font>

270
00:13:05,490 --> 00:13:10,470
literally give<font color="#E5E5E5"> a PCIe</font><font color="#CCCCCC"> card</font><font color="#E5E5E5"> to a process</font>

271
00:13:08,460 --> 00:13:13,830
just<font color="#CCCCCC"> a process</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> actually</font>

272
00:13:10,470 --> 00:13:16,190
<font color="#CCCCCC">fine-grained virtualization and then</font><font color="#E5E5E5"> the</font>

273
00:13:13,830 --> 00:13:19,410
<font color="#E5E5E5">process would be able</font><font color="#CCCCCC"> to drive the car</font>

274
00:13:16,190 --> 00:13:23,520
without anybody else interfering with it

275
00:13:19,410 --> 00:13:25,529
and without<font color="#E5E5E5"> giving that process</font>

276
00:13:23,520 --> 00:13:29,899
access to<font color="#CCCCCC"> the whole memory</font><font color="#E5E5E5"> and things</font>

277
00:13:25,529 --> 00:13:34,020
like this because<font color="#E5E5E5"> of DMA thanks to iommu</font>

278
00:13:29,899 --> 00:13:37,680
<font color="#CCCCCC">so that would be</font><font color="#E5E5E5"> really cool</font><font color="#CCCCCC"> just just</font>

279
00:13:34,020 --> 00:13:41,970
to make drivers<font color="#CCCCCC"> well</font><font color="#E5E5E5"> separated</font><font color="#CCCCCC"> we have</font>

280
00:13:37,680 --> 00:13:44,040
an<font color="#E5E5E5"> ACP</font><font color="#CCCCCC"> eye translator</font><font color="#E5E5E5"> pending commit to</font>

281
00:13:41,970 --> 00:13:46,320
provide access to<font color="#E5E5E5"> a CPA</font><font color="#CCCCCC"> impressions just</font>

282
00:13:44,040 --> 00:13:48,329
just like being able to shut<font color="#CCCCCC"> down the</font>

283
00:13:46,320 --> 00:13:51,000
<font color="#CCCCCC">machine it's really complex to shut down</font>

284
00:13:48,330 --> 00:13:55,200
<font color="#E5E5E5">the</font><font color="#CCCCCC"> machine actually</font><font color="#E5E5E5"> you have to do some</font>

285
00:13:51,000 --> 00:13:59,810
<font color="#CCCCCC">ACPI</font><font color="#E5E5E5"> but yes we should have</font><font color="#CCCCCC"> it at some</font>

286
00:13:55,200 --> 00:14:04,050
point<font color="#E5E5E5"> um using ramp</font><font color="#CCCCCC"> I talked about</font><font color="#E5E5E5"> it</font>

287
00:13:59,810 --> 00:14:06,630
<font color="#E5E5E5">some years</font><font color="#CCCCCC"> ago because the ramp is</font>

288
00:14:04,050 --> 00:14:09,029
really supported by a lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> and</font>

289
00:14:06,630 --> 00:14:12,000
also<font color="#CCCCCC"> lib</font><font color="#E5E5E5"> guest FS to access file systems</font>

290
00:14:09,029 --> 00:14:15,330
<font color="#E5E5E5">without having to implement the thing is</font>

291
00:14:12,000 --> 00:14:17,760
we<font color="#E5E5E5"> don't want to</font><font color="#CCCCCC"> in -</font><font color="#E5E5E5"> to maintain file</font>

292
00:14:15,330 --> 00:14:20,279
systems and device drivers<font color="#CCCCCC"> because</font>

293
00:14:17,760 --> 00:14:24,899
that's a<font color="#E5E5E5"> lot of work and instead we can</font>

294
00:14:20,279 --> 00:14:26,970
<font color="#CCCCCC">just put</font><font color="#E5E5E5"> that into a process and then we</font>

295
00:14:24,899 --> 00:14:28,829
just provide the proper interface<font color="#E5E5E5"> to</font>

296
00:14:26,970 --> 00:14:33,390
make it interact with<font color="#E5E5E5"> the rest of the</font>

297
00:14:28,829 --> 00:14:37,170
system we have a bit<font color="#CCCCCC"> of a 64-bit kernel</font>

298
00:14:33,390 --> 00:14:39,899
<font color="#E5E5E5">support there are few bits missing</font><font color="#CCCCCC"> to</font>

299
00:14:37,170 --> 00:14:44,550
let<font color="#E5E5E5"> a xxx boot in 32-bit and userland</font>

300
00:14:39,899 --> 00:14:46,649
<font color="#E5E5E5">run on top</font><font color="#CCCCCC"> of a 64-bit kernel and so at</font>

301
00:14:44,550 --> 00:14:49,469
least we could manage a lot of<font color="#E5E5E5"> memory</font>

302
00:14:46,649 --> 00:14:53,880
<font color="#E5E5E5">easily and then try to bootstrap a</font>

303
00:14:49,470 --> 00:14:55,350
<font color="#E5E5E5">64-bit user none it looks like an easy</font>

304
00:14:53,880 --> 00:14:57,660
thing but bootstrapping

305
00:14:55,350 --> 00:14:59,850
a user none but really bootstrapping

306
00:14:57,660 --> 00:15:03,029
that means putting<font color="#E5E5E5"> the information of</font>

307
00:14:59,850 --> 00:15:05,790
<font color="#CCCCCC">sixty bit hell exists in</font><font color="#E5E5E5"> Auto Kampf in</font>

308
00:15:03,029 --> 00:15:08,189
GCC<font color="#E5E5E5"> in G</font><font color="#CCCCCC"> Lipsy etc etc it's</font><font color="#E5E5E5"> all these</font>

309
00:15:05,790 --> 00:15:10,439
kind of programs which need<font color="#CCCCCC"> to be open</font>

310
00:15:08,190 --> 00:15:12,149
to<font color="#CCCCCC"> be made aware</font><font color="#E5E5E5"> of this and so that's</font>

311
00:15:10,440 --> 00:15:15,839
kind of work<font color="#E5E5E5"> but yeah that would be</font>

312
00:15:12,149 --> 00:15:17,820
<font color="#CCCCCC">really great and also</font><font color="#E5E5E5"> SMP support the</font>

313
00:15:15,839 --> 00:15:19,290
thing is the herd itself is already

314
00:15:17,820 --> 00:15:21,570
parallel<font color="#E5E5E5"> because we have several</font>

315
00:15:19,290 --> 00:15:24,240
translators running in parallel<font color="#E5E5E5"> and we</font>

316
00:15:21,570 --> 00:15:27,959
have threats which are<font color="#E5E5E5"> working</font><font color="#CCCCCC"> file is</font>

317
00:15:24,240 --> 00:15:30,270
<font color="#E5E5E5">just at the kernel side that we</font><font color="#CCCCCC"> don't</font>

318
00:15:27,959 --> 00:15:32,640
have an SMP support but actually mark

319
00:15:30,270 --> 00:15:35,560
itself does have<font color="#E5E5E5"> some support</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just</font>

320
00:15:32,640 --> 00:15:38,290
that it's an old<font color="#CCCCCC"> mouse that</font>

321
00:15:35,560 --> 00:15:40,779
that the whole<font color="#E5E5E5"> system is using</font><font color="#CCCCCC"> we're a</font>

322
00:15:38,290 --> 00:15:43,240
<font color="#CCCCCC">simply support wasn't updated to passing</font>

323
00:15:40,779 --> 00:15:45,759
<font color="#CCCCCC">a CPI tables and all kinds of thing like</font>

324
00:15:43,240 --> 00:15:48,810
this so it's that bit<font color="#E5E5E5"> which should be</font>

325
00:15:45,759 --> 00:15:51,999
done<font color="#E5E5E5"> and then of course fixing the bugs</font>

326
00:15:48,810 --> 00:15:55,959
<font color="#CCCCCC">that have</font><font color="#E5E5E5"> remained since it wasn't</font>

327
00:15:51,999 --> 00:16:00,309
tested<font color="#CCCCCC"> form for a long time but at least</font>

328
00:15:55,959 --> 00:16:02,819
<font color="#E5E5E5">just because I show that</font><font color="#CCCCCC"> we remove as</font>

329
00:16:00,309 --> 00:16:06,209
much drivers from<font color="#CCCCCC"> the corner as possible</font>

330
00:16:02,819 --> 00:16:09,729
<font color="#CCCCCC">it</font><font color="#E5E5E5"> should be easier because we have less</font>

331
00:16:06,209 --> 00:16:16,719
source code to<font color="#E5E5E5"> make sure works in SP</font>

332
00:16:09,730 --> 00:16:19,329
mode<font color="#CCCCCC"> so no</font><font color="#E5E5E5"> drivers in the kernel</font><font color="#CCCCCC"> so the</font>

333
00:16:16,720 --> 00:16:22,180
<font color="#E5E5E5">for for the whole system the</font><font color="#CCCCCC"> idea is</font>

334
00:16:19,329 --> 00:16:26,378
that the kernel provides<font color="#E5E5E5"> tasks memory</font>

335
00:16:22,180 --> 00:16:28,689
and<font color="#E5E5E5"> IPC</font><font color="#CCCCCC"> that's the basics that was</font>

336
00:16:26,379 --> 00:16:31,300
chosen<font color="#E5E5E5"> but at the moment we have drivers</font>

337
00:16:28,689 --> 00:16:33,639
<font color="#E5E5E5">in there and we used</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have network</font>

338
00:16:31,300 --> 00:16:36,849
drivers but we have gotten<font color="#E5E5E5"> rhythm of</font>

339
00:16:33,639 --> 00:16:39,579
them into user space so<font color="#E5E5E5"> I talked about</font>

340
00:16:36,850 --> 00:16:42,370
<font color="#CCCCCC">it some years ago but we still have</font>

341
00:16:39,579 --> 00:16:45,160
these drivers just because nobody<font color="#CCCCCC"> took</font>

342
00:16:42,370 --> 00:16:49,569
<font color="#CCCCCC">the time to</font><font color="#E5E5E5"> move them out so how could</font>

343
00:16:45,160 --> 00:16:52,089
<font color="#E5E5E5">we move them and to userland just do it</font>

344
00:16:49,569 --> 00:16:56,139
well there's one<font color="#CCCCCC"> issue</font><font color="#E5E5E5"> it's how do you</font>

345
00:16:52,089 --> 00:16:58,480
<font color="#E5E5E5">actually boot the system and the</font>

346
00:16:56,139 --> 00:17:01,209
solution will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> and to just use another</font>

347
00:16:58,480 --> 00:17:05,169
<font color="#CCCCCC">crap loaded module</font><font color="#E5E5E5"> so how does it put</font>

348
00:17:01,209 --> 00:17:07,780
right now<font color="#E5E5E5"> right now crap loads the</font>

349
00:17:05,169 --> 00:17:10,600
kernel<font color="#E5E5E5"> and two modules</font><font color="#CCCCCC"> under</font><font color="#E5E5E5"> the file</font>

350
00:17:07,780 --> 00:17:15,549
system and the exact server which knows

351
00:17:10,599 --> 00:17:18,730
how<font color="#CCCCCC"> to exec how to</font><font color="#E5E5E5"> execute a program and</font>

352
00:17:15,549 --> 00:17:21,339
the kernel has<font color="#E5E5E5"> the disk driver</font><font color="#CCCCCC"> so the</font>

353
00:17:18,730 --> 00:17:25,870
first thing that<font color="#E5E5E5"> happens is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> X 2</font><font color="#CCCCCC"> FS</font>

354
00:17:21,339 --> 00:17:29,049
starts the minimal<font color="#CCCCCC"> hard dish translators</font>

355
00:17:25,869 --> 00:17:32,850
<font color="#E5E5E5">so to know what is a process who is who</font>

356
00:17:29,049 --> 00:17:36,668
and<font color="#E5E5E5"> startup scripts so the idea is that</font>

357
00:17:32,850 --> 00:17:38,799
<font color="#CCCCCC">X 2 FS knows it</font><font color="#E5E5E5"> has to stop them it has</font>

358
00:17:36,669 --> 00:17:41,500
exact you have to exact it to execute

359
00:17:38,799 --> 00:17:45,129
<font color="#CCCCCC">them and open files which contain the</font>

360
00:17:41,500 --> 00:17:48,760
code for<font color="#E5E5E5"> this and to get the data we use</font>

361
00:17:45,130 --> 00:17:49,299
the disk drivers and then startup can

362
00:17:48,760 --> 00:17:52,179
start

363
00:17:49,299 --> 00:17:57,190
in it and then in it can start a tcp/ip

364
00:17:52,179 --> 00:17:59,649
<font color="#E5E5E5">stack which uses user level network</font>

365
00:17:57,190 --> 00:18:03,970
drivers and so here we<font color="#E5E5E5"> have a system</font>

366
00:17:59,649 --> 00:18:06,518
<font color="#CCCCCC">which just works</font><font color="#E5E5E5"> with the disk as an</font>

367
00:18:03,970 --> 00:18:08,289
additional<font color="#E5E5E5"> module</font><font color="#CCCCCC"> the whole thing will</font>

368
00:18:06,519 --> 00:18:11,679
<font color="#E5E5E5">be the same except that yes we have to</font>

369
00:18:08,289 --> 00:18:14,559
<font color="#E5E5E5">have a crap load the disk module so</font><font color="#CCCCCC"> that</font>

370
00:18:11,679 --> 00:18:17,889
<font color="#E5E5E5">X 2 FS can indeed load data from</font><font color="#CCCCCC"> the</font>

371
00:18:14,559 --> 00:18:21,369
disk<font color="#CCCCCC"> right from</font><font color="#E5E5E5"> here maybe we will</font><font color="#CCCCCC"> have</font>

372
00:18:17,889 --> 00:18:24,279
to add<font color="#E5E5E5"> the PCI arbiter here so that the</font>

373
00:18:21,369 --> 00:18:28,539
disk driver can access safely to an<font color="#E5E5E5"> NPC</font>

374
00:18:24,279 --> 00:18:31,359
<font color="#CCCCCC">I card a while later on xorg</font><font color="#E5E5E5"> will access</font>

375
00:18:28,539 --> 00:18:33,549
to the PCI as well but<font color="#E5E5E5"> then it's just</font>

376
00:18:31,359 --> 00:18:36,389
all the<font color="#E5E5E5"> same and then we really</font><font color="#CCCCCC"> have</font>

377
00:18:33,549 --> 00:18:39,129
everything<font color="#CCCCCC"> running in userland</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> root</font>

378
00:18:36,389 --> 00:18:43,719
when the kernel<font color="#CCCCCC"> on in HoN does this kind</font>

379
00:18:39,129 --> 00:18:47,350
of thing<font color="#CCCCCC"> ok so to conclude there are a</font>

380
00:18:43,720 --> 00:18:49,509
lot of nice<font color="#CCCCCC"> things that you</font><font color="#E5E5E5"> we have in</font>

381
00:18:47,350 --> 00:18:53,129
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> heard and a lot</font><font color="#CCCCCC"> of things that</font>

382
00:18:49,509 --> 00:18:57,039
we could achieve if just<font color="#E5E5E5"> you polished it</font>

383
00:18:53,129 --> 00:19:00,158
<font color="#E5E5E5">it's it's fun to hard on something to</font>

384
00:18:57,039 --> 00:19:01,809
have something<font color="#E5E5E5"> starting to work it's</font>

385
00:19:00,159 --> 00:19:04,239
better to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> it finished</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font>

386
00:19:01,809 --> 00:19:06,549
<font color="#E5E5E5">people can really use</font><font color="#CCCCCC"> it</font>

387
00:19:04,239 --> 00:19:08,529
it's something that I've often seen I

388
00:19:06,549 --> 00:19:10,269
get patches<font color="#CCCCCC"> and then they are</font><font color="#E5E5E5"> not</font>

389
00:19:08,529 --> 00:19:13,269
completely<font color="#E5E5E5"> working and say this this</font>

390
00:19:10,269 --> 00:19:14,830
<font color="#E5E5E5">that is not</font><font color="#CCCCCC"> alright and then I get no</font>

391
00:19:13,269 --> 00:19:16,499
response<font color="#E5E5E5"> and that's really a concern</font>

392
00:19:14,830 --> 00:19:19,989
<font color="#CCCCCC">because I kind of do</font><font color="#E5E5E5"> this myself</font>

393
00:19:16,499 --> 00:19:23,799
so sometimes<font color="#E5E5E5"> people have other things to</font>

394
00:19:19,989 --> 00:19:25,450
do<font color="#CCCCCC"> okay that's</font><font color="#E5E5E5"> fine but yes if people</font>

395
00:19:23,799 --> 00:19:29,639
can help with<font color="#CCCCCC"> just finishing the</font>

396
00:19:25,450 --> 00:19:29,639
existing things and that would<font color="#E5E5E5"> be great</font>

397
00:19:30,210 --> 00:19:35,769
<font color="#CCCCCC">when I see the microkernel room</font>

398
00:19:33,480 --> 00:19:38,289
presentations<font color="#E5E5E5"> I see that there</font><font color="#CCCCCC"> are a lot</font>

399
00:19:35,769 --> 00:19:41,169
of<font color="#E5E5E5"> microkernel things and that's great</font>

400
00:19:38,289 --> 00:19:43,480
<font color="#E5E5E5">to have something which is a real OS</font><font color="#CCCCCC"> I</font>

401
00:19:41,169 --> 00:19:46,509
mean and that<font color="#CCCCCC"> you have a whole</font>

402
00:19:43,480 --> 00:19:49,029
<font color="#CCCCCC">distribution with usual programs and</font>

403
00:19:46,509 --> 00:19:51,460
people<font color="#E5E5E5"> just log into it and and have</font>

404
00:19:49,029 --> 00:19:55,149
their usual comments and the unknown

405
00:19:51,460 --> 00:19:59,529
plus it's<font color="#E5E5E5"> really hard it was mentioned</font>

406
00:19:55,149 --> 00:20:02,320
in<font color="#E5E5E5"> the Debian on risk 5 and talked that</font>

407
00:19:59,529 --> 00:20:04,720
just getting<font color="#CCCCCC"> perl to compile is</font>

408
00:20:02,320 --> 00:20:06,490
really a lot of<font color="#E5E5E5"> work and we don't have</font>

409
00:20:04,720 --> 00:20:09,850
<font color="#E5E5E5">it on the whole because somebody did it</font>

410
00:20:06,490 --> 00:20:12,010
in the past<font color="#CCCCCC"> and we do</font><font color="#E5E5E5"> have it for GCC</font><font color="#CCCCCC"> 4G</font>

411
00:20:09,850 --> 00:20:14,139
gdb and<font color="#CCCCCC"> all kinds of things so we have</font>

412
00:20:12,010 --> 00:20:18,310
<font color="#CCCCCC">already all of this which is already</font>

413
00:20:14,140 --> 00:20:21,700
<font color="#E5E5E5">there we just</font><font color="#CCCCCC"> need a</font><font color="#E5E5E5"> few things</font><font color="#CCCCCC"> to have</font>

414
00:20:18,310 --> 00:20:25,149
it<font color="#E5E5E5"> even more to the point</font><font color="#CCCCCC"> of being a</font>

415
00:20:21,700 --> 00:20:26,860
usable system<font color="#E5E5E5"> so thanks for listening</font>

416
00:20:25,150 --> 00:20:27,760
<font color="#CCCCCC">and thanks for all the people who have</font>

417
00:20:26,860 --> 00:20:29,679
been working<font color="#E5E5E5"> on it</font>

418
00:20:27,760 --> 00:20:52,810
you have the<font color="#CCCCCC"> website for</font><font color="#E5E5E5"> more</font>

419
00:20:29,680 --> 00:20:55,630
<font color="#E5E5E5">information</font><font color="#CCCCCC"> thanks the question so I</font>

420
00:20:52,810 --> 00:20:57,210
should what we could do and what

421
00:20:55,630 --> 00:21:00,520
happened in the<font color="#E5E5E5"> past three years</font>

422
00:20:57,210 --> 00:21:03,280
<font color="#E5E5E5">basically what I mentioned here and so</font>

423
00:21:00,520 --> 00:21:05,889
the PCI arbiter<font color="#E5E5E5"> on a CPI translator the</font>

424
00:21:03,280 --> 00:21:10,030
<font color="#CCCCCC">run password I think this is the first</font>

425
00:21:05,890 --> 00:21:12,820
year in<font color="#E5E5E5"> 2016 so</font><font color="#CCCCCC"> basically these points</font>

426
00:21:10,030 --> 00:21:15,070
are<font color="#E5E5E5"> the ones which are hot but there are</font>

427
00:21:12,820 --> 00:21:17,740
not many<font color="#CCCCCC"> people</font><font color="#E5E5E5"> working on</font><font color="#CCCCCC"> it so it's at</font>

428
00:21:15,070 --> 00:21:19,830
<font color="#E5E5E5">a really slow pace there is nobody cool</font>

429
00:21:17,740 --> 00:21:22,930
time<font color="#E5E5E5"> or things</font><font color="#CCCCCC"> like this it's only a</font>

430
00:21:19,830 --> 00:21:32,590
<font color="#CCCCCC">part time I mean in a home time</font>

431
00:21:22,930 --> 00:21:36,430
<font color="#E5E5E5">basically what was finished so</font><font color="#CCCCCC"> the PCI</font>

432
00:21:32,590 --> 00:21:39,129
arbiter is finished<font color="#E5E5E5"> I mean here my hurt</font>

433
00:21:36,430 --> 00:21:43,600
system here is actually showing it<font color="#E5E5E5"> I</font>

434
00:21:39,130 --> 00:21:46,150
think<font color="#E5E5E5"> yes so the X walk actually uses it</font>

435
00:21:43,600 --> 00:21:48,100
nowadays<font color="#E5E5E5"> to to access because</font><font color="#CCCCCC"> we have an</font>

436
00:21:46,150 --> 00:21:51,370
entity<font color="#E5E5E5"> which accesses and the network</font>

437
00:21:48,100 --> 00:21:53,139
ball and<font color="#CCCCCC"> XO</font><font color="#E5E5E5"> as well so yes we'd have to</font>

438
00:21:51,370 --> 00:21:58,758
<font color="#CCCCCC">have we had to have something finished</font>

439
00:21:53,140 --> 00:22:00,820
for this<font color="#CCCCCC"> ok we can</font>

440
00:21:58,759 --> 00:22:00,820
<font color="#CCCCCC">you</font>

