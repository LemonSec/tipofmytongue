1
00:00:04,899 --> 00:00:10,490
please welcome<font color="#E5E5E5"> Robert Smith who's a</font>

2
00:00:07,750 --> 00:00:12,290
passion of<font color="#CCCCCC"> comic disc pecker and is also</font>

3
00:00:10,490 --> 00:00:14,629
<font color="#CCCCCC">the director of software</font><font color="#E5E5E5"> engineering at</font>

4
00:00:12,290 --> 00:00:17,240
<font color="#E5E5E5">Righetti which is one of the big part of</font>

5
00:00:14,630 --> 00:00:21,770
computing<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> players in the</font>

6
00:00:17,240 --> 00:00:25,400
<font color="#E5E5E5">universal</font><font color="#CCCCCC"> at their base in San</font><font color="#E5E5E5"> Francisco</font>

7
00:00:21,770 --> 00:00:27,230
or actually in Berkeley<font color="#CCCCCC"> and he's going</font>

8
00:00:25,400 --> 00:00:30,229
to<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> forests and</font><font color="#E5E5E5"> open source</font>

9
00:00:27,230 --> 00:00:32,448
quantum software development<font color="#CCCCCC"> right cool</font>

10
00:00:30,230 --> 00:00:35,210
<font color="#CCCCCC">I'm super</font><font color="#E5E5E5"> happy to</font><font color="#CCCCCC"> be here</font>

11
00:00:32,448 --> 00:00:37,519
my background is very very much in

12
00:00:35,210 --> 00:00:39,250
<font color="#E5E5E5">software only</font><font color="#CCCCCC"> in the past</font><font color="#E5E5E5"> few years I</font>

13
00:00:37,519 --> 00:00:41,510
<font color="#E5E5E5">kind of get into the quantum business</font>

14
00:00:39,250 --> 00:00:43,790
and so being at an<font color="#E5E5E5"> open-source</font>

15
00:00:41,510 --> 00:00:46,070
conference and seeing<font color="#E5E5E5"> that quantum is</font>

16
00:00:43,790 --> 00:00:49,460
here at the<font color="#E5E5E5"> open source conference is</font>

17
00:00:46,070 --> 00:00:51,470
really<font color="#E5E5E5"> exciting</font><font color="#CCCCCC"> for me before I start I</font>

18
00:00:49,460 --> 00:00:52,970
just want to understand the<font color="#CCCCCC"> audience a</font>

19
00:00:51,470 --> 00:00:56,210
little<font color="#E5E5E5"> bit better how many of you are</font>

20
00:00:52,970 --> 00:00:58,610
<font color="#E5E5E5">not sort of professionally in quantum</font>

21
00:00:56,210 --> 00:00:59,960
<font color="#CCCCCC">computing not an academia</font><font color="#E5E5E5"> quantum</font>

22
00:00:58,610 --> 00:01:00,350
computing in academia or<font color="#E5E5E5"> anything like</font>

23
00:00:59,960 --> 00:01:02,989
<font color="#E5E5E5">that</font>

24
00:01:00,350 --> 00:01:06,500
all right that's that's good that's

25
00:01:02,989 --> 00:01:08,570
really<font color="#CCCCCC"> great how many so this is my</font>

26
00:01:06,500 --> 00:01:10,250
<font color="#E5E5E5">personal just kind of what I want to</font>

27
00:01:08,570 --> 00:01:13,699
know how many<font color="#E5E5E5"> of</font><font color="#CCCCCC"> you know anything about</font>

28
00:01:10,250 --> 00:01:17,360
Lisp<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right that's pretty good -</font>

29
00:01:13,700 --> 00:01:22,150
that's<font color="#E5E5E5"> more</font><font color="#CCCCCC"> than I would expect</font><font color="#E5E5E5"> cool a</font>

30
00:01:17,360 --> 00:01:22,150
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> about Righetti so we build</font>

31
00:01:22,540 --> 00:01:27,170
get the<font color="#E5E5E5"> little mouse pointer of the way</font>

32
00:01:24,740 --> 00:01:29,479
we build<font color="#CCCCCC"> Universal gate based hybrid</font>

33
00:01:27,170 --> 00:01:31,910
classical quantum<font color="#CCCCCC"> computers so these are</font>

34
00:01:29,480 --> 00:01:34,040
machines that<font color="#E5E5E5"> are not just they don't</font>

35
00:01:31,910 --> 00:01:35,840
just do quantum computations they

36
00:01:34,040 --> 00:01:39,050
interact with<font color="#CCCCCC"> the classical computer as</font>

37
00:01:35,840 --> 00:01:40,250
well very<font color="#CCCCCC"> much in concert classical</font>

38
00:01:39,050 --> 00:01:42,140
computer might<font color="#CCCCCC"> produce results that</font>

39
00:01:40,250 --> 00:01:43,850
<font color="#E5E5E5">affect the quantum computation the</font>

40
00:01:42,140 --> 00:01:45,380
quantum<font color="#E5E5E5"> computer might produce results</font>

41
00:01:43,850 --> 00:01:51,619
that<font color="#E5E5E5"> affect affect</font><font color="#CCCCCC"> a classical</font>

42
00:01:45,380 --> 00:01:52,369
computation as was said in<font color="#E5E5E5"> the last in</font>

43
00:01:51,620 --> 00:01:54,170
<font color="#E5E5E5">the keynote</font>

44
00:01:52,370 --> 00:01:56,810
the<font color="#CCCCCC"> Kuan computers aren't</font><font color="#E5E5E5"> really doing</font>

45
00:01:54,170 --> 00:01:58,909
computations right now that exceed what

46
00:01:56,810 --> 00:02:00,590
<font color="#CCCCCC">a classical</font><font color="#E5E5E5"> computer can do but</font>

47
00:01:58,909 --> 00:02:02,060
nonetheless they do<font color="#E5E5E5"> interesting</font>

48
00:02:00,590 --> 00:02:04,700
computations they're doing real

49
00:02:02,060 --> 00:02:06,680
computations they're not just they're

50
00:02:04,700 --> 00:02:08,929
not<font color="#E5E5E5"> just you</font><font color="#CCCCCC"> know theoretical equations</font>

51
00:02:06,680 --> 00:02:10,670
or anything like<font color="#E5E5E5"> that you can compute</font>

52
00:02:08,929 --> 00:02:13,640
real things about the physical<font color="#E5E5E5"> world for</font>

53
00:02:10,669 --> 00:02:15,649
instance<font color="#CCCCCC"> we're a full-stack company so</font>

54
00:02:13,640 --> 00:02:17,989
we do<font color="#CCCCCC"> everything in-house more or less</font>

55
00:02:15,650 --> 00:02:18,470
all<font color="#CCCCCC"> the way from the design</font><font color="#E5E5E5"> of silicon</font>

56
00:02:17,990 --> 00:02:20,690
chips

57
00:02:18,470 --> 00:02:22,880
fabrication<font color="#E5E5E5"> of chips</font><font color="#CCCCCC"> we have our own</font>

58
00:02:20,690 --> 00:02:24,079
fabrication facility everything in

59
00:02:22,880 --> 00:02:27,200
between<font color="#CCCCCC"> all the way to building</font>

60
00:02:24,080 --> 00:02:29,180
applications on top<font color="#CCCCCC"> of the chip or</font><font color="#E5E5E5"> on</font>

61
00:02:27,200 --> 00:02:32,260
top of the computer<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have a very wide</font>

62
00:02:29,180 --> 00:02:36,110
<font color="#CCCCCC">range of papers published</font><font color="#E5E5E5"> again</font>

63
00:02:32,260 --> 00:02:38,510
<font color="#CCCCCC">basically any of</font><font color="#E5E5E5"> these horizontals here</font>

64
00:02:36,110 --> 00:02:40,670
<font color="#E5E5E5">we</font><font color="#CCCCCC"> probably have a paper in</font><font color="#E5E5E5"> and our</font>

65
00:02:38,510 --> 00:02:43,970
flagship<font color="#E5E5E5"> product is called quantum cloud</font>

66
00:02:40,670 --> 00:02:46,309
services so quantum cloud services is

67
00:02:43,970 --> 00:02:50,030
something that we<font color="#CCCCCC"> just released publicly</font>

68
00:02:46,310 --> 00:02:51,830
as a beta<font color="#E5E5E5"> as far as I know it's the</font>

69
00:02:50,030 --> 00:02:54,170
fastest<font color="#E5E5E5"> quantum programming environment</font>

70
00:02:51,830 --> 00:02:58,370
<font color="#CCCCCC">available right now it's</font><font color="#E5E5E5"> about 30 times</font>

71
00:02:54,170 --> 00:02:59,989
faster<font color="#E5E5E5"> than an HTTP based service</font><font color="#CCCCCC"> this</font>

72
00:02:58,370 --> 00:03:01,459
comes<font color="#E5E5E5"> from a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> different things all</font>

73
00:02:59,990 --> 00:03:02,990
<font color="#CCCCCC">across the stack and this</font><font color="#E5E5E5"> is one of the</font>

74
00:03:01,459 --> 00:03:05,000
benefits<font color="#CCCCCC"> of being</font><font color="#E5E5E5"> a full stack company</font>

75
00:03:02,990 --> 00:03:07,160
it's not just that we<font color="#CCCCCC"> got some you</font><font color="#E5E5E5"> know</font>

76
00:03:05,000 --> 00:03:08,240
clever<font color="#CCCCCC"> hardware trick-or or something</font>

77
00:03:07,160 --> 00:03:10,790
like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it really took a combination</font>

78
00:03:08,240 --> 00:03:14,870
<font color="#CCCCCC">of</font><font color="#E5E5E5"> infrastructure hardware and software</font>

79
00:03:10,790 --> 00:03:17,870
to<font color="#CCCCCC"> gain</font><font color="#E5E5E5"> these speed ups</font><font color="#CCCCCC"> so as a part of</font>

80
00:03:14,870 --> 00:03:19,790
this as a part of the<font color="#CCCCCC"> kuan cloud</font>

81
00:03:17,870 --> 00:03:21,980
services you get your own qmi it's a

82
00:03:19,790 --> 00:03:25,010
virtual machine<font color="#E5E5E5"> comes pre-loaded with a</font>

83
00:03:21,980 --> 00:03:28,160
bunch of software including our forest

84
00:03:25,010 --> 00:03:29,720
<font color="#CCCCCC">sdk</font><font color="#E5E5E5"> so force sdk is the software</font>

85
00:03:28,160 --> 00:03:32,660
<font color="#E5E5E5">development</font><font color="#CCCCCC"> kit that includes a very</font>

86
00:03:29,720 --> 00:03:34,700
<font color="#E5E5E5">powerful arrangement of software to</font>

87
00:03:32,660 --> 00:03:37,100
write build and execute quantum programs

88
00:03:34,700 --> 00:03:39,709
<font color="#E5E5E5">this includes a compiler a simulator a</font>

89
00:03:37,100 --> 00:03:46,940
<font color="#E5E5E5">Python API and a set of optional</font>

90
00:03:39,709 --> 00:03:48,890
libraries<font color="#E5E5E5"> on top of that so pretty</font><font color="#CCCCCC"> early</font>

91
00:03:46,940 --> 00:03:51,829
on<font color="#E5E5E5"> at Righetti I joined</font><font color="#CCCCCC"> Righetti when it</font>

92
00:03:48,890 --> 00:03:54,500
was<font color="#E5E5E5"> around 20 or so people</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> early</font>

93
00:03:51,830 --> 00:03:56,600
on<font color="#CCCCCC"> at</font><font color="#E5E5E5"> Righetti we were very interested</font><font color="#CCCCCC"> I</font>

94
00:03:54,500 --> 00:03:59,600
actually<font color="#CCCCCC"> credit it to will Zhang a lot</font>

95
00:03:56,600 --> 00:04:02,989
who planted the seed at<font color="#CCCCCC"> the company to</font>

96
00:03:59,600 --> 00:04:05,359
try to maintain sort<font color="#E5E5E5"> of openness in a</font>

97
00:04:02,989 --> 00:04:08,630
lot<font color="#E5E5E5"> of our ideas</font><font color="#CCCCCC"> and a</font><font color="#E5E5E5"> lot of our</font>

98
00:04:05,360 --> 00:04:10,820
software<font color="#CCCCCC"> and so on</font><font color="#E5E5E5"> so being in kind of</font>

99
00:04:08,630 --> 00:04:12,829
<font color="#E5E5E5">open source</font><font color="#CCCCCC"> slash open standards isn't</font>

100
00:04:10,820 --> 00:04:15,230
something<font color="#E5E5E5"> that's relatively new we've</font>

101
00:04:12,830 --> 00:04:17,780
been doing it<font color="#CCCCCC"> for the past three or so</font>

102
00:04:15,230 --> 00:04:20,120
years<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the big milestones</font>

103
00:04:17,779 --> 00:04:21,890
was about three years<font color="#CCCCCC"> ago we released an</font>

104
00:04:20,120 --> 00:04:24,620
open<font color="#CCCCCC"> standard for a quantum instruction</font>

105
00:04:21,890 --> 00:04:27,320
language called quill so quill is this

106
00:04:24,620 --> 00:04:29,060
assembly looking code it's not<font color="#E5E5E5"> assembly</font>

107
00:04:27,320 --> 00:04:30,530
doesn't run natively on<font color="#E5E5E5"> the machine it</font>

108
00:04:29,060 --> 00:04:32,120
requires<font color="#CCCCCC"> further</font><font color="#E5E5E5"> compilation but it</font>

109
00:04:30,530 --> 00:04:33,859
looks<font color="#E5E5E5"> like an assembly code</font>

110
00:04:32,120 --> 00:04:37,850
that describes<font color="#E5E5E5"> hybrid classical quantum</font>

111
00:04:33,860 --> 00:04:39,530
programs<font color="#CCCCCC"> and we we publish a standard</font>

112
00:04:37,850 --> 00:04:41,870
and a little bit to my surprise

113
00:04:39,530 --> 00:04:44,179
certainly we saw these little libraries

114
00:04:41,870 --> 00:04:46,250
popping up<font color="#E5E5E5"> somebody wrote</font><font color="#CCCCCC"> something in</font>

115
00:04:44,180 --> 00:04:48,979
Haskell for<font color="#E5E5E5"> instance to construct quill</font>

116
00:04:46,250 --> 00:04:50,870
circuits<font color="#CCCCCC"> I myself</font><font color="#E5E5E5"> out of interest wrote</font>

117
00:04:48,979 --> 00:04:52,280
something in<font color="#E5E5E5"> Lisp</font><font color="#CCCCCC"> somebody else</font><font color="#E5E5E5"> wrote</font>

118
00:04:50,870 --> 00:04:54,710
something in oak<font color="#CCCCCC"> Hamill just all these</font>

119
00:04:52,280 --> 00:04:56,840
<font color="#E5E5E5">things</font><font color="#CCCCCC"> came out and that sort of is a</font>

120
00:04:54,710 --> 00:04:58,489
testament<font color="#CCCCCC"> to kind of you</font><font color="#E5E5E5"> know when you</font>

121
00:04:56,840 --> 00:05:00,859
provide<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> open that's</font>

122
00:04:58,490 --> 00:05:02,150
well specified that's well documented it

123
00:05:00,860 --> 00:05:05,479
gets<font color="#E5E5E5"> adopted and people are kind</font><font color="#CCCCCC"> of</font>

124
00:05:02,150 --> 00:05:07,489
interested in<font color="#E5E5E5"> it since the release of</font>

125
00:05:05,479 --> 00:05:09,409
the standard for quill we've you know

126
00:05:07,490 --> 00:05:11,900
<font color="#CCCCCC">had a good handful of</font><font color="#E5E5E5"> different open</font>

127
00:05:09,410 --> 00:05:15,350
<font color="#CCCCCC">source libraries all of these are</font>

128
00:05:11,900 --> 00:05:17,900
homegrown<font color="#CCCCCC"> or at least adopted by us</font><font color="#E5E5E5"> and</font>

129
00:05:15,350 --> 00:05:19,940
<font color="#E5E5E5">then beyond</font><font color="#CCCCCC"> that we've you know</font>

130
00:05:17,900 --> 00:05:22,870
contributed back to any<font color="#E5E5E5"> number of open</font>

131
00:05:19,940 --> 00:05:26,419
source projects<font color="#E5E5E5"> one of my favorite was a</font>

132
00:05:22,870 --> 00:05:29,090
tool<font color="#E5E5E5"> for editing CAD files</font><font color="#CCCCCC"> and we</font><font color="#E5E5E5"> found</font>

133
00:05:26,419 --> 00:05:30,919
a<font color="#E5E5E5"> few bugs in it contributed back</font><font color="#CCCCCC"> it's</font>

134
00:05:29,090 --> 00:05:33,739
nice to you<font color="#E5E5E5"> know design these quantum</font>

135
00:05:30,919 --> 00:05:35,270
circuits as you know you know<font color="#E5E5E5"> within CAD</font>

136
00:05:33,740 --> 00:05:42,830
and finding these<font color="#CCCCCC"> things and being able</font>

137
00:05:35,270 --> 00:05:45,229
to<font color="#E5E5E5"> contribute back so I'll very briefly</font>

138
00:05:42,830 --> 00:05:46,639
<font color="#CCCCCC">talk about kind</font><font color="#E5E5E5"> of the force SDK you can</font>

139
00:05:45,229 --> 00:05:49,460
kind<font color="#CCCCCC"> of think of</font><font color="#E5E5E5"> it as a sort of layered</font>

140
00:05:46,639 --> 00:05:50,930
architecture<font color="#E5E5E5"> like so at the top you have</font>

141
00:05:49,460 --> 00:05:53,270
<font color="#CCCCCC">your applications the things you're</font>

142
00:05:50,930 --> 00:05:54,950
building<font color="#E5E5E5"> on top</font><font color="#CCCCCC"> of the platform this</font>

143
00:05:53,270 --> 00:05:56,570
includes Grove which contains a lot<font color="#CCCCCC"> of</font>

144
00:05:54,950 --> 00:05:58,880
<font color="#E5E5E5">different textbook algorithms a lot of</font>

145
00:05:56,570 --> 00:06:02,210
different things you'd<font color="#CCCCCC"> find in</font><font color="#E5E5E5"> any sort</font>

146
00:05:58,880 --> 00:06:04,400
of course on<font color="#E5E5E5"> quantum computing for</font>

147
00:06:02,210 --> 00:06:05,750
instance we<font color="#CCCCCC"> just released an alpha</font>

148
00:06:04,400 --> 00:06:08,510
version<font color="#E5E5E5"> of something</font><font color="#CCCCCC"> called force</font>

149
00:06:05,750 --> 00:06:10,639
benchmarking which contains a lot<font color="#CCCCCC"> of</font>

150
00:06:08,510 --> 00:06:12,919
very<font color="#E5E5E5"> very easy to read routines for how</font>

151
00:06:10,639 --> 00:06:15,470
to benchmark<font color="#E5E5E5"> and classify the quality of</font>

152
00:06:12,919 --> 00:06:17,180
a quantum<font color="#CCCCCC"> computer and then</font><font color="#E5E5E5"> we have a</font>

153
00:06:15,470 --> 00:06:18,349
bunch of partner apps and these this is

154
00:06:17,180 --> 00:06:19,700
kind of<font color="#CCCCCC"> the layer where you</font><font color="#E5E5E5"> would build</font>

155
00:06:18,349 --> 00:06:21,770
if you are interested in building

156
00:06:19,700 --> 00:06:24,229
programs for<font color="#E5E5E5"> your</font><font color="#CCCCCC"> clone</font><font color="#E5E5E5"> computer or for</font>

157
00:06:21,770 --> 00:06:26,450
a quantum<font color="#CCCCCC"> computer</font><font color="#E5E5E5"> below that is Pike</font>

158
00:06:24,229 --> 00:06:27,710
<font color="#E5E5E5">well it's a Python library that allows</font>

159
00:06:26,450 --> 00:06:29,659
you to write quill programs<font color="#E5E5E5"> that</font>

160
00:06:27,710 --> 00:06:32,299
contains a lot more<font color="#CCCCCC"> than that</font><font color="#E5E5E5"> contains</font>

161
00:06:29,660 --> 00:06:34,039
an<font color="#E5E5E5"> API to talk the</font><font color="#CCCCCC"> machine it contains a</font>

162
00:06:32,300 --> 00:06:36,380
good API<font color="#E5E5E5"> for interacting</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

163
00:06:34,039 --> 00:06:38,060
compiler that<font color="#E5E5E5"> contains some mathematical</font>

164
00:06:36,380 --> 00:06:39,770
routines if you want to translate sort

165
00:06:38,060 --> 00:06:43,610
of a mathematical<font color="#CCCCCC"> problem into a</font><font color="#E5E5E5"> quantum</font>

166
00:06:39,770 --> 00:06:46,068
computing problem and so on below<font color="#CCCCCC"> that</font>

167
00:06:43,610 --> 00:06:48,229
<font color="#E5E5E5">we have a little RPC framework</font>

168
00:06:46,069 --> 00:06:49,509
just to have<font color="#CCCCCC"> everything</font><font color="#E5E5E5"> in the stack</font>

169
00:06:48,229 --> 00:06:52,008
communicate with each other

170
00:06:49,509 --> 00:06:54,279
below that is a compiler called quill

171
00:06:52,009 --> 00:06:57,050
<font color="#CCCCCC">see this is</font><font color="#E5E5E5"> the compiler that'll take</font>

172
00:06:54,279 --> 00:06:59,210
<font color="#E5E5E5">quill code and compile</font><font color="#CCCCCC"> it to the native</font>

173
00:06:57,050 --> 00:07:00,819
gate set of the quantum computer<font color="#CCCCCC"> the</font>

174
00:06:59,210 --> 00:07:03,229
native instruction side of the machine

175
00:07:00,819 --> 00:07:05,389
<font color="#CCCCCC">on the</font><font color="#E5E5E5"> right here you could</font><font color="#CCCCCC"> imagine this</font>

176
00:07:03,229 --> 00:07:07,039
this<font color="#E5E5E5"> box right here</font><font color="#CCCCCC"> going down and down</font>

177
00:07:05,389 --> 00:07:08,449
and down that's you know that's<font color="#E5E5E5"> where</font>

178
00:07:07,039 --> 00:07:10,339
you<font color="#CCCCCC"> actually start executing things on</font>

179
00:07:08,449 --> 00:07:12,229
the machine<font color="#E5E5E5"> that gets is a firmware</font>

180
00:07:10,339 --> 00:07:15,529
<font color="#CCCCCC">level that</font><font color="#E5E5E5"> gets into the control system</font>

181
00:07:12,229 --> 00:07:17,270
level and<font color="#E5E5E5"> so on</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> to the left you can</font>

182
00:07:15,529 --> 00:07:18,649
replace all of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> of course</font><font color="#E5E5E5"> with a</font>

183
00:07:17,270 --> 00:07:20,120
simulator that's going to be a lot

184
00:07:18,649 --> 00:07:22,069
<font color="#E5E5E5">slower than the real machine of</font><font color="#CCCCCC"> course</font>

185
00:07:20,120 --> 00:07:23,860
but serves as a good method<font color="#CCCCCC"> for</font>

186
00:07:22,069 --> 00:07:26,270
debugging<font color="#E5E5E5"> and so on so there we have</font>

187
00:07:23,860 --> 00:07:27,559
something called<font color="#E5E5E5"> the</font><font color="#CCCCCC"> qvm</font><font color="#E5E5E5"> the quantum</font>

188
00:07:26,270 --> 00:07:29,839
virtual machine which<font color="#CCCCCC"> I'll talk about in</font>

189
00:07:27,559 --> 00:07:33,460
<font color="#E5E5E5">a little</font><font color="#CCCCCC"> bit in</font><font color="#E5E5E5"> PI</font><font color="#CCCCCC"> qvm which is</font>

190
00:07:29,839 --> 00:07:37,270
<font color="#E5E5E5">something built into</font><font color="#CCCCCC"> PI quill it's a</font>

191
00:07:33,460 --> 00:07:37,270
simulator written in Python

192
00:07:37,520 --> 00:07:42,589
hence<font color="#E5E5E5"> person let's talk I'm going to</font>

193
00:07:39,349 --> 00:07:50,959
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about two main components</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> the</font>

194
00:07:42,589 --> 00:07:54,229
compiler<font color="#E5E5E5"> and specifically the</font><font color="#CCCCCC"> qvm so the</font>

195
00:07:50,959 --> 00:07:55,939
<font color="#CCCCCC">qvm it seems like everybody in</font><font color="#E5E5E5"> there</font>

196
00:07:54,229 --> 00:07:57,498
brother and sister<font color="#E5E5E5"> and dog has kind of</font>

197
00:07:55,939 --> 00:08:00,589
<font color="#E5E5E5">made a simulator these days there's a</font>

198
00:07:57,499 --> 00:08:02,120
billion<font color="#E5E5E5"> of them online simulating a</font>

199
00:08:00,589 --> 00:08:05,120
quantum computer it's kind of a fun

200
00:08:02,120 --> 00:08:06,559
problem to work through it's a it's a

201
00:08:05,120 --> 00:08:08,269
thing that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> do if</font><font color="#E5E5E5"> you're</font>

202
00:08:06,559 --> 00:08:11,120
going<font color="#CCCCCC"> to be working with</font><font color="#E5E5E5"> quantum</font>

203
00:08:08,269 --> 00:08:12,289
computing at all<font color="#CCCCCC"> but there is a lot of</font>

204
00:08:11,120 --> 00:08:15,229
<font color="#E5E5E5">great</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> that you can put into a</font>

205
00:08:12,289 --> 00:08:16,699
simulator<font color="#E5E5E5"> to make it more efficient to</font>

206
00:08:15,229 --> 00:08:20,860
<font color="#E5E5E5">make it more useful to</font><font color="#CCCCCC"> make it better</font>

207
00:08:16,699 --> 00:08:25,099
for<font color="#CCCCCC"> debugging and so on so our simulator</font>

208
00:08:20,860 --> 00:08:28,490
the one that we call kind<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> qvm is</font>

209
00:08:25,099 --> 00:08:30,259
very very high performance<font color="#CCCCCC"> if you can</font>

210
00:08:28,490 --> 00:08:31,699
<font color="#E5E5E5">throw it on any machine I mean you know</font>

211
00:08:30,259 --> 00:08:33,349
<font color="#E5E5E5">they</font><font color="#CCCCCC"> think the biggest</font><font color="#E5E5E5"> we've thrown it</font>

212
00:08:31,699 --> 00:08:35,419
on is something<font color="#CCCCCC"> that has like 12</font>

213
00:08:33,349 --> 00:08:37,579
terabytes of memory and<font color="#E5E5E5"> you know for</font>

214
00:08:35,419 --> 00:08:40,578
socket motherboard with you know

215
00:08:37,578 --> 00:08:43,458
something like<font color="#CCCCCC"> 224 logical cores or</font>

216
00:08:40,578 --> 00:08:45,439
<font color="#E5E5E5">something like that and it'll use all of</font>

217
00:08:43,458 --> 00:08:47,810
it<font color="#E5E5E5"> it's completely multi-threaded it's a</font>

218
00:08:45,440 --> 00:08:50,240
good way to heat<font color="#CCCCCC"> up</font><font color="#E5E5E5"> your house if that's</font>

219
00:08:47,810 --> 00:08:52,010
what you're aiming<font color="#E5E5E5"> to do it can execute</font>

220
00:08:50,240 --> 00:08:54,889
the entire<font color="#CCCCCC"> quo language it does all the</font>

221
00:08:52,010 --> 00:08:56,149
classical all the quantum stuff<font color="#CCCCCC"> it has</font>

222
00:08:54,889 --> 00:08:58,130
<font color="#E5E5E5">lots and lots of different</font><font color="#CCCCCC"> ways</font><font color="#E5E5E5"> to</font>

223
00:08:56,149 --> 00:08:59,930
<font color="#E5E5E5">execute programs kind of the standard</font>

224
00:08:58,130 --> 00:09:02,210
ways do something called<font color="#CCCCCC"> standard</font>

225
00:08:59,930 --> 00:09:05,270
pure state evolution it kind of assumes

226
00:09:02,210 --> 00:09:08,090
that your computer is perfect that has

227
00:09:05,270 --> 00:09:09,980
no errors that it's you<font color="#E5E5E5"> know kind of</font>

228
00:09:08,090 --> 00:09:12,050
living in<font color="#CCCCCC"> that you know</font><font color="#E5E5E5"> fairytale land</font>

229
00:09:09,980 --> 00:09:13,880
<font color="#CCCCCC">but</font><font color="#E5E5E5"> then you have these</font><font color="#CCCCCC"> other execution</font>

230
00:09:12,050 --> 00:09:16,550
modes like the stochastic pure state

231
00:09:13,880 --> 00:09:18,860
evolution full density matrix<font color="#E5E5E5"> simulation</font>

232
00:09:16,550 --> 00:09:21,319
if you want that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then some other</font>

233
00:09:18,860 --> 00:09:22,820
<font color="#CCCCCC">things I haven't</font><font color="#E5E5E5"> personally found</font>

234
00:09:21,320 --> 00:09:24,410
particularly<font color="#CCCCCC"> use for them but stuff like</font>

235
00:09:22,820 --> 00:09:26,570
<font color="#E5E5E5">the path integral formulation if you</font>

236
00:09:24,410 --> 00:09:29,839
want to compute just a single amplitude

237
00:09:26,570 --> 00:09:31,310
<font color="#E5E5E5">of your exponentially sized state like I</font>

238
00:09:29,840 --> 00:09:33,170
said I can simulate perfect in in

239
00:09:31,310 --> 00:09:34,640
perfect quantum computers<font color="#E5E5E5"> but the thing</font>

240
00:09:33,170 --> 00:09:36,469
I'm most<font color="#E5E5E5"> excited about about the</font>

241
00:09:34,640 --> 00:09:38,330
simulator is actually as a part of the

242
00:09:36,470 --> 00:09:40,640
simulator contains a compiler that

243
00:09:38,330 --> 00:09:42,200
compiles the quill code into native

244
00:09:40,640 --> 00:09:43,580
instructions of your<font color="#E5E5E5"> computer so it's</font>

245
00:09:42,200 --> 00:09:45,410
not<font color="#E5E5E5"> trying to interpret the instructions</font>

246
00:09:43,580 --> 00:09:48,410
<font color="#E5E5E5">actually compiles it all the machine</font>

247
00:09:45,410 --> 00:09:50,140
code<font color="#CCCCCC"> and because of that you get really</font>

248
00:09:48,410 --> 00:09:52,189
really<font color="#CCCCCC"> fast</font><font color="#E5E5E5"> execution sometimes</font>

249
00:09:50,140 --> 00:09:54,319
outperforming<font color="#E5E5E5"> some state-of-the-art</font>

250
00:09:52,190 --> 00:09:56,830
<font color="#CCCCCC">simulators you know</font><font color="#E5E5E5"> written in you know</font>

251
00:09:54,320 --> 00:10:00,710
the finest<font color="#E5E5E5"> you know toothpick and</font>

252
00:09:56,830 --> 00:10:03,140
<font color="#E5E5E5">tweezers you</font><font color="#CCCCCC"> know C code</font><font color="#E5E5E5"> sometimes</font><font color="#CCCCCC"> by 2x</font>

253
00:10:00,710 --> 00:10:06,350
because it dynamically<font color="#E5E5E5"> it's able to do</font>

254
00:10:03,140 --> 00:10:08,420
what a compiler does and so<font color="#CCCCCC"> I want to</font>

255
00:10:06,350 --> 00:10:11,600
show a<font color="#CCCCCC"> little demonstration</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> just</font>

256
00:10:08,420 --> 00:10:12,370
a real<font color="#E5E5E5"> quick one so if I run the</font><font color="#CCCCCC"> qvm</font>

257
00:10:11,600 --> 00:10:15,680
program

258
00:10:12,370 --> 00:10:17,210
I'm gonna<font color="#CCCCCC"> save verbose</font><font color="#E5E5E5"> and I'm just</font>

259
00:10:15,680 --> 00:10:19,219
<font color="#CCCCCC">gonna run one</font><font color="#E5E5E5"> of the standard standard</font>

260
00:10:17,210 --> 00:10:22,190
benchmark modes which computes a<font color="#CCCCCC"> GHz</font>

261
00:10:19,220 --> 00:10:25,760
<font color="#CCCCCC">State</font><font color="#E5E5E5"> entangled</font><font color="#CCCCCC"> state ax and say I</font><font color="#E5E5E5"> think</font>

262
00:10:22,190 --> 00:10:27,800
the default<font color="#CCCCCC"> is 26 qubits so if you see</font>

263
00:10:25,760 --> 00:10:30,020
it run it you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see each gate these</font>

264
00:10:27,800 --> 00:10:32,839
gates over<font color="#E5E5E5"> here the Hadamard at the top</font>

265
00:10:30,020 --> 00:10:36,319
see not<font color="#CCCCCC"> taking</font><font color="#E5E5E5"> about 500 milliseconds on</font>

266
00:10:32,840 --> 00:10:39,350
my laptop per gate<font color="#CCCCCC"> will let it get to</font>

267
00:10:36,320 --> 00:10:41,900
the end<font color="#CCCCCC"> just so</font><font color="#E5E5E5"> you can feel how long</font>

268
00:10:39,350 --> 00:10:43,970
this stuff takes to compare on a real

269
00:10:41,900 --> 00:10:45,860
actual quantum computer each of those

270
00:10:43,970 --> 00:10:48,770
gates would take on<font color="#E5E5E5"> the order of maybe</font>

271
00:10:45,860 --> 00:10:50,870
50 nanoseconds or so so we see the<font color="#E5E5E5"> run</font>

272
00:10:48,770 --> 00:10:54,199
<font color="#E5E5E5">time at the end was about 20 seconds and</font>

273
00:10:50,870 --> 00:10:56,390
all of this was<font color="#CCCCCC"> without compilation so</font>

274
00:10:54,200 --> 00:10:58,580
if I tell<font color="#E5E5E5"> it to compile what it's going</font>

275
00:10:56,390 --> 00:11:00,949
to do is take the quill program that was

276
00:10:58,580 --> 00:11:03,370
that's being benchmark here<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> gonna</font>

277
00:11:00,950 --> 00:11:05,990
compile to machine code and<font color="#CCCCCC"> then run it</font>

278
00:11:03,370 --> 00:11:09,170
and so if we do that<font color="#CCCCCC"> you just see the</font>

279
00:11:05,990 --> 00:11:11,900
difference is a lot<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> just you know</font>

280
00:11:09,170 --> 00:11:14,530
<font color="#E5E5E5">got 10x</font><font color="#CCCCCC"> speed up just by pre compiling</font>

281
00:11:11,900 --> 00:11:14,530
the circuit

282
00:11:15,790 --> 00:11:19,430
want to move on<font color="#E5E5E5"> from the simulator</font><font color="#CCCCCC"> and</font>

283
00:11:18,020 --> 00:11:23,780
talk about<font color="#CCCCCC"> our compiler which I'm even</font>

284
00:11:19,430 --> 00:11:25,069
more<font color="#CCCCCC"> excited about so as far as</font><font color="#E5E5E5"> I</font>

285
00:11:23,780 --> 00:11:27,380
understand

286
00:11:25,070 --> 00:11:30,290
quill<font color="#E5E5E5"> C is the only truly sort of</font>

287
00:11:27,380 --> 00:11:32,450
general-purpose<font color="#CCCCCC"> fully automatic</font>

288
00:11:30,290 --> 00:11:35,349
<font color="#E5E5E5">optimizing compiler which means it's</font>

289
00:11:32,450 --> 00:11:38,180
sort of turnkey<font color="#CCCCCC"> you can run the program</font>

290
00:11:35,350 --> 00:11:39,830
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> compile it doesn't need any extra</font>

291
00:11:38,180 --> 00:11:41,750
<font color="#CCCCCC">information you'll need</font><font color="#E5E5E5"> to give it</font>

292
00:11:39,830 --> 00:11:43,370
specific steps on how to compile or

293
00:11:41,750 --> 00:11:45,200
anything like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you give it</font><font color="#E5E5E5"> your</font>

294
00:11:43,370 --> 00:11:47,630
program and<font color="#CCCCCC"> it will compile to specific</font>

295
00:11:45,200 --> 00:11:50,420
architecture<font color="#CCCCCC"> it was built with</font>

296
00:11:47,630 --> 00:11:52,100
portability<font color="#E5E5E5"> in mind</font><font color="#CCCCCC"> of course we</font><font color="#E5E5E5"> use it</font>

297
00:11:50,420 --> 00:11:54,290
at<font color="#CCCCCC"> Righetti computing to compile</font><font color="#E5E5E5"> for our</font>

298
00:11:52,100 --> 00:11:57,680
architectures<font color="#E5E5E5"> we were trying to</font><font color="#CCCCCC"> build</font><font color="#E5E5E5"> as</font>

299
00:11:54,290 --> 00:12:00,170
<font color="#E5E5E5">a general purpose tool because you know</font>

300
00:11:57,680 --> 00:12:03,079
we<font color="#E5E5E5"> designed different chips we try out</font>

301
00:12:00,170 --> 00:12:04,550
different gate sets and every<font color="#E5E5E5"> single</font>

302
00:12:03,080 --> 00:12:06,740
<font color="#E5E5E5">time</font><font color="#CCCCCC"> we do that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't want</font><font color="#E5E5E5"> to have to</font>

303
00:12:04,550 --> 00:12:09,400
like rewind and and figure<font color="#CCCCCC"> out how to</font>

304
00:12:06,740 --> 00:12:12,590
recompile our programs and<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> I</font>

305
00:12:09,400 --> 00:12:14,390
can<font color="#E5E5E5"> compile any unitary gate at least in</font>

306
00:12:12,590 --> 00:12:15,800
a unitary gate that feasibly fits in

307
00:12:14,390 --> 00:12:18,590
memory<font color="#E5E5E5"> and that you have time to compile</font>

308
00:12:15,800 --> 00:12:22,189
for so you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> two three four queue</font>

309
00:12:18,590 --> 00:12:24,050
gates it doesn't matter<font color="#CCCCCC"> and most</font>

310
00:12:22,190 --> 00:12:26,570
interestingly it<font color="#CCCCCC"> has a</font><font color="#E5E5E5"> lot in it and</font>

311
00:12:24,050 --> 00:12:29,990
we're<font color="#E5E5E5"> still</font><font color="#CCCCCC"> adding to it of</font><font color="#E5E5E5"> course</font><font color="#CCCCCC"> lots</font>

312
00:12:26,570 --> 00:12:31,730
<font color="#E5E5E5">and lots of different</font><font color="#CCCCCC"> ways of</font><font color="#E5E5E5"> optimizing</font>

313
00:12:29,990 --> 00:12:33,250
<font color="#CCCCCC">your program it does a lot of things</font>

314
00:12:31,730 --> 00:12:36,110
that<font color="#E5E5E5"> have a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> similarity to</font>

315
00:12:33,250 --> 00:12:37,910
classical compiler<font color="#E5E5E5"> theory so it does</font>

316
00:12:36,110 --> 00:12:40,340
something<font color="#E5E5E5"> similar to register allocation</font>

317
00:12:37,910 --> 00:12:42,319
it tries<font color="#CCCCCC"> to figure out what qubits</font><font color="#E5E5E5"> what</font>

318
00:12:40,340 --> 00:12:44,390
actual physical qubits it should use

319
00:12:42,320 --> 00:12:46,070
given your logical qubits in the program

320
00:12:44,390 --> 00:12:48,290
does something<font color="#E5E5E5"> similar to people</font>

321
00:12:46,070 --> 00:12:50,840
<font color="#E5E5E5">optimization will scan sections of your</font>

322
00:12:48,290 --> 00:12:53,270
<font color="#E5E5E5">code</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> try to compress or optimize</font>

323
00:12:50,840 --> 00:12:55,280
them flow analysis<font color="#E5E5E5"> when you have</font>

324
00:12:53,270 --> 00:12:57,590
classical portions of<font color="#E5E5E5"> your program when</font>

325
00:12:55,280 --> 00:13:00,980
<font color="#CCCCCC">you have jump statements and loops and</font>

326
00:12:57,590 --> 00:13:02,420
if statements and<font color="#CCCCCC"> whatever it</font><font color="#E5E5E5"> analyzes</font>

327
00:13:00,980 --> 00:13:03,920
the control flow of<font color="#E5E5E5"> your program it does</font>

328
00:13:02,420 --> 00:13:07,130
all the classical stuff like dead code

329
00:13:03,920 --> 00:13:08,839
elimination and all that<font color="#E5E5E5"> and then for</font>

330
00:13:07,130 --> 00:13:10,520
some<font color="#E5E5E5"> cases like tube qubit gates it</font>

331
00:13:08,840 --> 00:13:12,650
actually has routines for doing optimal

332
00:13:10,520 --> 00:13:14,360
compilation it will it will compile it

333
00:13:12,650 --> 00:13:16,689
in the best<font color="#E5E5E5"> way that you</font><font color="#CCCCCC"> know</font>

334
00:13:14,360 --> 00:13:19,040
mathematics has proven to<font color="#CCCCCC"> be the</font><font color="#E5E5E5"> best</font>

335
00:13:16,690 --> 00:13:20,270
<font color="#CCCCCC">like I said I'm a</font><font color="#E5E5E5"> software person I've</font>

336
00:13:19,040 --> 00:13:22,520
been<font color="#E5E5E5"> writing software since I was like</font>

337
00:13:20,270 --> 00:13:23,870
eight years<font color="#E5E5E5"> old</font><font color="#CCCCCC"> and it's definitely</font><font color="#E5E5E5"> one</font>

338
00:13:22,520 --> 00:13:25,220
of the<font color="#E5E5E5"> most interesting pieces of</font>

339
00:13:23,870 --> 00:13:28,660
software<font color="#E5E5E5"> that I've been able to work on</font>

340
00:13:25,220 --> 00:13:28,660
in<font color="#CCCCCC"> my career me and my colleagues</font>

341
00:13:28,880 --> 00:13:35,870
so I can show a<font color="#E5E5E5"> little demo of this as</font>

342
00:13:30,800 --> 00:13:37,849
well<font color="#CCCCCC"> we kind of follow the standard of</font>

343
00:13:35,870 --> 00:13:40,400
being very<font color="#CCCCCC"> UNIX II with</font><font color="#E5E5E5"> the application</font>

344
00:13:37,850 --> 00:13:42,620
so just by<font color="#CCCCCC"> default</font><font color="#E5E5E5"> if you run it it's</font>

345
00:13:40,400 --> 00:13:46,310
going<font color="#E5E5E5"> to take input</font><font color="#CCCCCC"> from standard n if I</font>

346
00:13:42,620 --> 00:13:49,610
make like<font color="#E5E5E5"> a Bell State for instance and</font>

347
00:13:46,310 --> 00:13:52,069
end it<font color="#CCCCCC"> it</font><font color="#E5E5E5"> compiles it by default to one</font>

348
00:13:49,610 --> 00:13:54,470
of<font color="#E5E5E5"> our</font><font color="#CCCCCC"> eight qubit rings that we have so</font>

349
00:13:52,070 --> 00:13:57,020
it compiled that<font color="#CCCCCC"> hata martin and see</font><font color="#E5E5E5"> not</font>

350
00:13:54,470 --> 00:13:59,630
<font color="#E5E5E5">at the top to that program</font><font color="#CCCCCC"> out there it</font>

351
00:13:57,020 --> 00:14:03,560
turned it into<font color="#CCCCCC"> z rotations</font><font color="#E5E5E5"> x rotations</font>

352
00:13:59,630 --> 00:14:06,260
and<font color="#E5E5E5"> CZ so in this case the default ship</font>

353
00:14:03,560 --> 00:14:10,060
that it compiles to<font color="#E5E5E5"> is one where CZ is</font>

354
00:14:06,260 --> 00:14:10,060
the gate that<font color="#E5E5E5"> can operate between edges</font>

355
00:14:10,180 --> 00:14:15,380
<font color="#CCCCCC">one of our researchers</font><font color="#E5E5E5"> at work was a</font>

356
00:14:13,790 --> 00:14:18,079
messing<font color="#E5E5E5"> around with the bernstein</font>

357
00:14:15,380 --> 00:14:20,030
<font color="#CCCCCC">maserati algorithm which for those</font>

358
00:14:18,080 --> 00:14:21,110
unfamiliar contains kind of<font color="#E5E5E5"> this portion</font>

359
00:14:20,030 --> 00:14:23,600
<font color="#CCCCCC">of the algorithm where you</font><font color="#E5E5E5"> have to</font>

360
00:14:21,110 --> 00:14:24,890
<font color="#E5E5E5">define something called an oracle and</font>

361
00:14:23,600 --> 00:14:26,810
depending on what<font color="#E5E5E5"> your goals are as a</font>

362
00:14:24,890 --> 00:14:28,880
researcher<font color="#E5E5E5"> maybe you're not trying to</font>

363
00:14:26,810 --> 00:14:30,199
think<font color="#E5E5E5"> about exactly how to construct</font>

364
00:14:28,880 --> 00:14:31,580
this<font color="#E5E5E5"> oracle maybe you're just I don't</font>

365
00:14:30,200 --> 00:14:32,690
know trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get your work done and</font>

366
00:14:31,580 --> 00:14:34,840
<font color="#E5E5E5">you just</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to try running it on the</font>

367
00:14:32,690 --> 00:14:38,390
<font color="#E5E5E5">quantum</font><font color="#CCCCCC"> computer so what he did</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> he</font>

368
00:14:34,840 --> 00:14:40,460
<font color="#E5E5E5">defined this giant matrix</font><font color="#CCCCCC"> that's what</font>

369
00:14:38,390 --> 00:14:42,770
all these ones and zeros and<font color="#E5E5E5"> all this</font>

370
00:14:40,460 --> 00:14:44,330
stuff<font color="#E5E5E5"> are and then his actual program so</font>

371
00:14:42,770 --> 00:14:47,240
you see he does a<font color="#E5E5E5"> bunch of he doesn't X</font>

372
00:14:44,330 --> 00:14:52,120
<font color="#CCCCCC">get a bunch of</font><font color="#E5E5E5"> Hadamard</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> giant</font><font color="#CCCCCC"> five</font>

373
00:14:47,240 --> 00:14:57,200
<font color="#E5E5E5">qubit</font><font color="#CCCCCC"> operator and so on and so if I</font><font color="#E5E5E5"> cat</font>

374
00:14:52,120 --> 00:14:59,360
<font color="#CCCCCC">Bernstein Boz irani in to quill C and</font>

375
00:14:57,200 --> 00:15:02,870
I'm gonna make<font color="#E5E5E5"> it measure gate depth in</font>

376
00:14:59,360 --> 00:15:05,320
and all<font color="#E5E5E5"> of that it'll think about it for</font>

377
00:15:02,870 --> 00:15:05,320
a second

378
00:15:06,380 --> 00:15:11,210
and it gives<font color="#CCCCCC"> the answer so it</font><font color="#E5E5E5"> decomposed</font>

379
00:15:08,900 --> 00:15:12,530
this<font color="#E5E5E5"> five cubed gate into a bunch of</font>

380
00:15:11,210 --> 00:15:14,900
gates we can see at<font color="#E5E5E5"> the bottom it</font>

381
00:15:12,530 --> 00:15:18,829
compiled it into a circuit that's of

382
00:15:14,900 --> 00:15:20,630
depth<font color="#E5E5E5"> 2746 gates which is way too many</font>

383
00:15:18,830 --> 00:15:22,910
to execute a<font color="#E5E5E5"> knee current quantum</font>

384
00:15:20,630 --> 00:15:24,770
computer for the record<font color="#E5E5E5"> but it starts</font>

385
00:15:22,910 --> 00:15:26,959
giving<font color="#CCCCCC"> it</font><font color="#E5E5E5"> an idea of how this circuit</font>

386
00:15:24,770 --> 00:15:33,740
would actually be<font color="#E5E5E5"> realized on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> real</font>

387
00:15:26,960 --> 00:15:35,840
machine<font color="#CCCCCC"> so one point</font><font color="#E5E5E5"> that that</font><font color="#CCCCCC"> I like to</font>

388
00:15:33,740 --> 00:15:39,680
<font color="#CCCCCC">make is that I really really believe</font><font color="#E5E5E5"> in</font>

389
00:15:35,840 --> 00:15:42,290
<font color="#E5E5E5">automatic compilation</font><font color="#CCCCCC"> sometimes I feel</font>

390
00:15:39,680 --> 00:15:44,569
<font color="#E5E5E5">that that some folks in the field are</font>

391
00:15:42,290 --> 00:15:46,610
<font color="#CCCCCC">maybe like in</font><font color="#E5E5E5"> the 1950s</font><font color="#CCCCCC"> or something</font>

392
00:15:44,570 --> 00:15:48,500
where I know our quantum computers

393
00:15:46,610 --> 00:15:49,940
currently aren't<font color="#E5E5E5"> these machines that can</font>

394
00:15:48,500 --> 00:15:51,740
<font color="#E5E5E5">execute hundreds or thousands or</font>

395
00:15:49,940 --> 00:15:53,420
millions of gates yet like we're still

396
00:15:51,740 --> 00:15:55,670
kind of poking around with you know

397
00:15:53,420 --> 00:15:57,410
gates measured between<font color="#E5E5E5"> 10 and 100 cubits</font>

398
00:15:55,670 --> 00:15:59,209
<font color="#E5E5E5">we're still looking at gate depths that</font>

399
00:15:57,410 --> 00:16:01,370
<font color="#E5E5E5">are you know measured you know still on</font>

400
00:15:59,210 --> 00:16:03,620
in on both<font color="#E5E5E5"> your hands and it is</font>

401
00:16:01,370 --> 00:16:06,110
<font color="#CCCCCC">reasonable to construct programs by hand</font>

402
00:16:03,620 --> 00:16:10,430
<font color="#E5E5E5">that way but in general to not have a</font>

403
00:16:06,110 --> 00:16:12,410
tool that<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> to to study the</font>

404
00:16:10,430 --> 00:16:14,959
mathematics of<font color="#E5E5E5"> a problem to debug things</font>

405
00:16:12,410 --> 00:16:17,680
to even see how decomposes<font color="#CCCCCC"> into you know</font>

406
00:16:14,960 --> 00:16:20,480
the actual<font color="#E5E5E5"> native code of your machine I</font>

407
00:16:17,680 --> 00:16:22,969
think<font color="#CCCCCC"> it's I think</font><font color="#E5E5E5"> it's not good to have</font>

408
00:16:20,480 --> 00:16:24,710
<font color="#CCCCCC">such a tool I also think that computers</font>

409
00:16:22,970 --> 00:16:26,480
are<font color="#E5E5E5"> just exceedingly good at doing what</font>

410
00:16:24,710 --> 00:16:29,180
they do I mean compilers these day like

411
00:16:26,480 --> 00:16:30,890
GCC clang all<font color="#E5E5E5"> of those they're amazing</font>

412
00:16:29,180 --> 00:16:33,979
they're incredible<font color="#E5E5E5"> if you can see what</font>

413
00:16:30,890 --> 00:16:36,199
like<font color="#E5E5E5"> Intel's Fortran compiler does does</font>

414
00:16:33,980 --> 00:16:37,640
amazing<font color="#E5E5E5"> things on its real testament</font>

415
00:16:36,200 --> 00:16:39,530
<font color="#CCCCCC">that computers are really good</font><font color="#E5E5E5"> at</font>

416
00:16:37,640 --> 00:16:41,750
figuring<font color="#E5E5E5"> things out at calculating</font>

417
00:16:39,530 --> 00:16:43,640
<font color="#E5E5E5">things so I do have this belief that</font>

418
00:16:41,750 --> 00:16:45,860
like if we're able<font color="#E5E5E5"> to like confidently</font>

419
00:16:43,640 --> 00:16:48,830
write C for small microcontrollers that

420
00:16:45,860 --> 00:16:50,510
contain you<font color="#E5E5E5"> know K of RAM</font><font color="#CCCCCC"> then we can</font>

421
00:16:48,830 --> 00:16:51,980
write quill or<font color="#E5E5E5"> some other instruction</font>

422
00:16:50,510 --> 00:16:54,740
set<font color="#CCCCCC"> for a quantum computer that</font><font color="#E5E5E5"> passes</font>

423
00:16:51,980 --> 00:16:56,900
<font color="#E5E5E5">through a compiler as quill C perfect at</font>

424
00:16:54,740 --> 00:16:59,810
this<font color="#E5E5E5"> and is</font><font color="#CCCCCC"> it like outperforming like</font>

425
00:16:56,900 --> 00:17:01,340
hand compiled circuits no but can quill

426
00:16:59,810 --> 00:17:05,480
C compile a circuit faster than you

427
00:17:01,340 --> 00:17:06,980
could almost<font color="#E5E5E5"> surely yes sometimes</font>

428
00:17:05,480 --> 00:17:08,540
circuits<font color="#E5E5E5"> take like I don't know three</font>

429
00:17:06,980 --> 00:17:10,610
days by hand to figure out even what

430
00:17:08,540 --> 00:17:12,589
what to do so I want to<font color="#E5E5E5"> give a little</font>

431
00:17:10,609 --> 00:17:15,020
<font color="#CCCCCC">example to show what quill C even</font><font color="#E5E5E5"> thinks</font>

432
00:17:12,589 --> 00:17:16,909
about<font color="#E5E5E5"> so if I pass the verbose option</font>

433
00:17:15,020 --> 00:17:19,490
<font color="#E5E5E5">I'm going to compile this</font><font color="#CCCCCC"> Berenstain baz</font>

434
00:17:16,910 --> 00:17:20,360
<font color="#CCCCCC">irani circuit again but this time going</font>

435
00:17:19,490 --> 00:17:21,640
to<font color="#E5E5E5"> say</font>

436
00:17:20,359 --> 00:17:26,000
just tell me<font color="#E5E5E5"> everything you're thinking</font>

437
00:17:21,640 --> 00:17:26,569
<font color="#CCCCCC">compiler</font><font color="#E5E5E5"> and this is everything oh of</font>

438
00:17:26,000 --> 00:17:30,500
course

439
00:17:26,569 --> 00:17:34,450
maybe<font color="#E5E5E5"> scroll after it stops thinking or</font>

440
00:17:30,500 --> 00:17:37,400
I'll just<font color="#CCCCCC"> control see it you can see</font>

441
00:17:34,450 --> 00:17:39,500
here it's it's<font color="#E5E5E5"> going through it's</font>

442
00:17:37,400 --> 00:17:42,350
looking at different sub sequences

443
00:17:39,500 --> 00:17:44,600
here's looking at<font color="#CCCCCC"> RX r z RX</font><font color="#E5E5E5"> it's going</font>

444
00:17:42,350 --> 00:17:46,250
to try to collapse<font color="#E5E5E5"> that in some way and</font>

445
00:17:44,600 --> 00:17:50,000
it<font color="#E5E5E5"> just continues until it you know it</font>

446
00:17:46,250 --> 00:17:51,620
<font color="#CCCCCC">just tears your program apart lots</font><font color="#E5E5E5"> and</font>

447
00:17:50,000 --> 00:17:53,990
<font color="#E5E5E5">lots of interesting stuff i like seeing</font>

448
00:17:51,620 --> 00:17:58,610
<font color="#E5E5E5">the compiler think because it again</font>

449
00:17:53,990 --> 00:17:59,870
reminds me<font color="#CCCCCC"> that smarter than</font><font color="#E5E5E5"> i am</font><font color="#CCCCCC"> i want</font>

450
00:17:58,610 --> 00:18:01,428
to talk<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little bit about</font><font color="#E5E5E5"> what even a</font>

451
00:17:59,870 --> 00:18:04,879
compiler target for a quantum computer

452
00:18:01,429 --> 00:18:06,830
looks like generally you<font color="#CCCCCC"> have a graph of</font>

453
00:18:04,880 --> 00:18:08,720
qubits<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are connected in some way</font>

454
00:18:06,830 --> 00:18:11,000
physically<font color="#E5E5E5"> on a chip somebody actually</font>

455
00:18:08,720 --> 00:18:13,070
etched metal or something<font color="#CCCCCC"> into the chip</font>

456
00:18:11,000 --> 00:18:16,040
<font color="#CCCCCC">to link these qubits together so you</font>

457
00:18:13,070 --> 00:18:17,899
<font color="#E5E5E5">have a graph of qubits each single qubit</font>

458
00:18:16,040 --> 00:18:19,370
can<font color="#E5E5E5"> have some operation on</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> usually</font>

459
00:18:17,900 --> 00:18:22,370
<font color="#E5E5E5">for superconducting qubits you're firing</font>

460
00:18:19,370 --> 00:18:24,049
<font color="#E5E5E5">some microwave pulse</font><font color="#CCCCCC"> for example in</font>

461
00:18:22,370 --> 00:18:26,629
quill you<font color="#CCCCCC"> could have an</font><font color="#E5E5E5"> R X PI over</font><font color="#CCCCCC"> 2</font>

462
00:18:24,049 --> 00:18:29,540
gate or an<font color="#CCCCCC"> RZ totally parametric or</font>

463
00:18:26,630 --> 00:18:32,360
fixed each qubit pair can have

464
00:18:29,540 --> 00:18:35,030
operations<font color="#E5E5E5"> some example gates are</font><font color="#CCCCCC"> CCC</font>

465
00:18:32,360 --> 00:18:36,049
not example parametric data<font color="#CCCCCC"> C phase</font>

466
00:18:35,030 --> 00:18:39,379
where you can<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> give it a</font>

467
00:18:36,049 --> 00:18:41,480
<font color="#CCCCCC">parameter and then there</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> even gates</font>

468
00:18:39,380 --> 00:18:44,049
<font color="#E5E5E5">that happen on qubit triplets or</font>

469
00:18:41,480 --> 00:18:46,640
quadruplets and whatever<font color="#CCCCCC"> and one</font><font color="#E5E5E5"> of the</font>

470
00:18:44,049 --> 00:18:48,710
you know examples<font color="#E5E5E5"> that I know is the</font>

471
00:18:46,640 --> 00:18:50,600
mole mer Sorensen gate for ion traps

472
00:18:48,710 --> 00:18:53,590
where you can actually perform a gate

473
00:18:50,600 --> 00:18:55,699
simultaneously on many qubits

474
00:18:53,590 --> 00:18:57,379
importantly though it may be that

475
00:18:55,700 --> 00:18:58,970
depending on<font color="#E5E5E5"> the design</font><font color="#CCCCCC"> of your quantum</font>

476
00:18:57,380 --> 00:19:03,110
computer different qubits might have

477
00:18:58,970 --> 00:19:04,700
different<font color="#E5E5E5"> operations tuned for them so</font>

478
00:19:03,110 --> 00:19:06,260
we could<font color="#CCCCCC"> imagine a four qubit quantum</font>

479
00:19:04,700 --> 00:19:07,400
computer I mean this is<font color="#E5E5E5"> crazy I</font><font color="#CCCCCC"> don't</font>

480
00:19:06,260 --> 00:19:10,400
<font color="#E5E5E5">think anybody would</font><font color="#CCCCCC"> actually build</font><font color="#E5E5E5"> this</font>

481
00:19:07,400 --> 00:19:12,380
to be clear where each qubit here has

482
00:19:10,400 --> 00:19:14,390
some single qubit operations but each

483
00:19:12,380 --> 00:19:16,910
qubit pair has a different set of native

484
00:19:14,390 --> 00:19:19,250
operations so what this<font color="#CCCCCC"> diagram is</font>

485
00:19:16,910 --> 00:19:21,890
showing is that qubit<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one may</font>

486
00:19:19,250 --> 00:19:23,809
support<font color="#E5E5E5"> a</font><font color="#CCCCCC"> seesee operation on them cubed</font>

487
00:19:21,890 --> 00:19:27,380
<font color="#CCCCCC">zero and two might only</font><font color="#E5E5E5"> ever see not</font>

488
00:19:23,809 --> 00:19:29,570
only<font color="#E5E5E5"> in one direction</font><font color="#CCCCCC"> you know and so on</font>

489
00:19:27,380 --> 00:19:31,850
<font color="#E5E5E5">and so forth and so</font><font color="#CCCCCC"> we design</font><font color="#E5E5E5"> Quilici to</font>

490
00:19:29,570 --> 00:19:34,250
accommodate chip designs that may have

491
00:19:31,850 --> 00:19:36,409
this and<font color="#CCCCCC"> so quill</font><font color="#E5E5E5"> see</font>

492
00:19:34,250 --> 00:19:38,060
<font color="#E5E5E5">compiled a circuit there and like</font><font color="#CCCCCC"> I</font>

493
00:19:36,410 --> 00:19:41,570
would challenge<font color="#E5E5E5"> you to try to construct</font>

494
00:19:38,060 --> 00:19:43,610
a<font color="#CCCCCC"> GHz state on an architecture that has</font>

495
00:19:41,570 --> 00:19:45,710
this<font color="#E5E5E5"> I mean I don't know</font><font color="#CCCCCC"> I'd</font><font color="#E5E5E5"> be a waste</font>

496
00:19:43,610 --> 00:19:49,580
of time<font color="#CCCCCC"> I think it's probably waste of</font>

497
00:19:45,710 --> 00:19:51,290
time to make<font color="#E5E5E5"> the</font><font color="#CCCCCC"> chip - so for FOSDEM</font>

498
00:19:49,580 --> 00:19:53,570
kind of as a testament to this we

499
00:19:51,290 --> 00:19:55,270
<font color="#CCCCCC">actually ported</font><font color="#E5E5E5"> Quilici</font><font color="#CCCCCC"> to what we know</font>

500
00:19:53,570 --> 00:19:58,340
about google's<font color="#CCCCCC"> Brist</font><font color="#E5E5E5"> Bristlecone</font>

501
00:19:55,270 --> 00:19:59,510
architecture which<font color="#CCCCCC"> is 72</font><font color="#E5E5E5"> qubits we</font>

502
00:19:58,340 --> 00:20:02,480
ported it to<font color="#E5E5E5"> IBM's</font>

503
00:19:59,510 --> 00:20:04,810
IBM<font color="#CCCCCC"> qx5 chip</font><font color="#E5E5E5"> again what we could learn</font>

504
00:20:02,480 --> 00:20:07,190
<font color="#CCCCCC">about it from papers online everything</font>

505
00:20:04,810 --> 00:20:10,520
any program<font color="#CCCCCC"> that was written in quill</font>

506
00:20:07,190 --> 00:20:13,840
<font color="#E5E5E5">any program that works in Grove anything</font>

507
00:20:10,520 --> 00:20:17,300
at all will compile to any of our chips

508
00:20:13,840 --> 00:20:20,419
<font color="#CCCCCC">- again what</font><font color="#E5E5E5"> we could find about the</font>

509
00:20:17,300 --> 00:20:22,460
Bristlecone chip by Google IBM qx5 chip

510
00:20:20,420 --> 00:20:25,820
<font color="#E5E5E5">but not only that it'll</font><font color="#CCCCCC"> actually try</font><font color="#E5E5E5"> to</font>

511
00:20:22,460 --> 00:20:27,530
optimize<font color="#CCCCCC"> for those architectures it can</font>

512
00:20:25,820 --> 00:20:29,510
<font color="#E5E5E5">work with the full chip</font><font color="#CCCCCC"> or you can</font>

513
00:20:27,530 --> 00:20:32,149
actually<font color="#E5E5E5"> select</font><font color="#CCCCCC"> sub graphs</font><font color="#E5E5E5"> of that chip</font>

514
00:20:29,510 --> 00:20:33,710
<font color="#CCCCCC">and it will compile for those and again</font>

515
00:20:32,150 --> 00:20:36,050
<font color="#E5E5E5">as far</font><font color="#CCCCCC"> as I know I</font><font color="#E5E5E5"> don't really know</font><font color="#CCCCCC"> of</font>

516
00:20:33,710 --> 00:20:40,940
other<font color="#E5E5E5"> compilers that are able to to kind</font>

517
00:20:36,050 --> 00:20:43,100
of do<font color="#E5E5E5"> this job so as</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> demo I'm</font>

518
00:20:40,940 --> 00:20:46,700
actually wrote a<font color="#CCCCCC"> program with this</font>

519
00:20:43,100 --> 00:20:51,649
<font color="#CCCCCC">mullmer Sorensen Gates if I look at</font><font color="#E5E5E5"> it</font>

520
00:20:46,700 --> 00:20:54,260
you<font color="#CCCCCC"> can see this crazy crazy</font><font color="#E5E5E5"> big gate I</font>

521
00:20:51,650 --> 00:20:55,820
think this one's on<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> for cubits</font><font color="#E5E5E5"> the</font>

522
00:20:54,260 --> 00:20:57,790
program down here<font color="#E5E5E5"> is just doing</font><font color="#CCCCCC"> mulmer</font>

523
00:20:55,820 --> 00:21:01,820
<font color="#CCCCCC">Sorensen on for</font><font color="#E5E5E5"> cubits</font>

524
00:20:57,790 --> 00:21:06,610
so if I<font color="#E5E5E5"> cat</font><font color="#CCCCCC"> mulmer</font><font color="#E5E5E5"> Sorensen</font><font color="#CCCCCC"> into quill</font>

525
00:21:01,820 --> 00:21:11,740
see<font color="#CCCCCC"> I'm going to show the gate depth and</font>

526
00:21:06,610 --> 00:21:14,209
I'm<font color="#CCCCCC"> going to compile it for</font><font color="#E5E5E5"> our 8q ring</font>

527
00:21:11,740 --> 00:21:19,670
it'll do something<font color="#CCCCCC"> so gate that this is</font>

528
00:21:14,210 --> 00:21:24,700
about<font color="#CCCCCC"> 319 if I do</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> Bristlecone</font><font color="#E5E5E5"> raise</font>

529
00:21:19,670 --> 00:21:24,700
if I can spell<font color="#CCCCCC"> it right grace</font>

530
00:21:26,420 --> 00:21:30,360
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it more and</font><font color="#CCCCCC"> actually</font>

531
00:21:28,440 --> 00:21:34,020
found<font color="#E5E5E5"> a smaller gate</font><font color="#CCCCCC"> DEP not by a lot</font>

532
00:21:30,360 --> 00:21:38,909
but a<font color="#CCCCCC"> little bit we could</font><font color="#E5E5E5"> do it</font><font color="#CCCCCC"> for IBM</font>

533
00:21:34,020 --> 00:21:40,110
<font color="#CCCCCC">qx5 and by the way this argument</font><font color="#E5E5E5"> here</font>

534
00:21:38,910 --> 00:21:42,180
<font color="#E5E5E5">this is a</font><font color="#CCCCCC"> argument is actually</font>

535
00:21:40,110 --> 00:21:44,909
parametric you can supply<font color="#CCCCCC"> to file to</font>

536
00:21:42,180 --> 00:21:46,650
describe the chip that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> instead</font>

537
00:21:44,910 --> 00:21:48,720
<font color="#CCCCCC">of</font><font color="#E5E5E5"> like baking it into the compiler so</font>

538
00:21:46,650 --> 00:21:52,560
this one it<font color="#E5E5E5"> like doubled the gate death</font>

539
00:21:48,720 --> 00:21:54,510
took it<font color="#E5E5E5"> took</font><font color="#CCCCCC"> six hundred gates I want to</font>

540
00:21:52,560 --> 00:21:58,020
show one last<font color="#E5E5E5"> thing where we</font><font color="#CCCCCC"> have some</font>

541
00:21:54,510 --> 00:22:00,690
advanced features<font color="#CCCCCC"> of the compiler that</font>

542
00:21:58,020 --> 00:22:05,580
<font color="#CCCCCC">can</font><font color="#E5E5E5"> even optimize it more so the</font>

543
00:22:00,690 --> 00:22:08,490
argument is enable state prep enable

544
00:22:05,580 --> 00:22:09,960
state prep reductions<font color="#CCCCCC"> so again like</font><font color="#E5E5E5"> a</font>

545
00:22:08,490 --> 00:22:13,290
normal compiler you know with<font color="#CCCCCC"> your</font>

546
00:22:09,960 --> 00:22:15,960
<font color="#E5E5E5">compiling C code you pass Oh 3 or minus</font>

547
00:22:13,290 --> 00:22:18,389
F fast math or whatever<font color="#E5E5E5"> we have similar</font>

548
00:22:15,960 --> 00:22:19,830
things this argument here says compile

549
00:22:18,390 --> 00:22:22,440
the program<font color="#E5E5E5"> and assume</font><font color="#CCCCCC"> that we're</font>

550
00:22:19,830 --> 00:22:23,760
starting<font color="#CCCCCC"> in initial</font><font color="#E5E5E5"> zero state typically</font>

551
00:22:22,440 --> 00:22:26,160
<font color="#E5E5E5">that's what you assume when you write a</font>

552
00:22:23,760 --> 00:22:30,000
quantum program<font color="#CCCCCC"> and if you can make that</font>

553
00:22:26,160 --> 00:22:32,910
<font color="#E5E5E5">assumption</font><font color="#CCCCCC"> it'll actually take</font><font color="#E5E5E5"> that into</font>

554
00:22:30,000 --> 00:22:34,470
<font color="#CCCCCC">account</font><font color="#E5E5E5"> in the compilation process</font><font color="#CCCCCC"> it'll</font>

555
00:22:32,910 --> 00:22:37,050
partially simulate it and<font color="#CCCCCC"> we actually</font>

556
00:22:34,470 --> 00:22:38,280
get<font color="#CCCCCC"> down to a gate depth of a third</font><font color="#E5E5E5"> of</font>

557
00:22:37,050 --> 00:22:39,720
what we<font color="#E5E5E5"> got before so there are all</font>

558
00:22:38,280 --> 00:22:42,510
different<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> you can coax the compiler</font>

559
00:22:39,720 --> 00:22:48,810
into compiling things<font color="#E5E5E5"> and get more</font><font color="#CCCCCC"> and</font>

560
00:22:42,510 --> 00:22:50,700
<font color="#CCCCCC">more efficient circuits so qpm</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> quill</font>

561
00:22:48,810 --> 00:22:55,290
<font color="#CCCCCC">C are free to download</font><font color="#E5E5E5"> we just released</font>

562
00:22:50,700 --> 00:22:56,640
the Windows version<font color="#E5E5E5"> we for the</font><font color="#CCCCCC"> cubm we</font>

563
00:22:55,290 --> 00:22:58,889
do have an open source<font color="#CCCCCC"> alternative like</font>

564
00:22:56,640 --> 00:23:01,620
I said the<font color="#E5E5E5"> PI</font><font color="#CCCCCC"> qvm it doesn't have all of</font>

565
00:22:58,890 --> 00:23:04,110
the things<font color="#E5E5E5"> but it is licensed under</font>

566
00:23:01,620 --> 00:23:06,239
Apache<font color="#CCCCCC"> 2 it's much</font><font color="#E5E5E5"> slower if you're</font>

567
00:23:04,110 --> 00:23:07,830
doing<font color="#E5E5E5"> it for lots of qubits but if all</font>

568
00:23:06,240 --> 00:23:09,690
<font color="#E5E5E5">of your work is in Python it's actually</font>

569
00:23:07,830 --> 00:23:11,159
much<font color="#CCCCCC"> faster if you're doing one or</font><font color="#E5E5E5"> two</font>

570
00:23:09,690 --> 00:23:14,160
<font color="#E5E5E5">or</font><font color="#CCCCCC"> three cubic computations because</font>

571
00:23:11,160 --> 00:23:16,860
<font color="#E5E5E5">there's no overhead communicating</font><font color="#CCCCCC"> with</font>

572
00:23:14,160 --> 00:23:18,390
this<font color="#E5E5E5"> external process and so on and</font>

573
00:23:16,860 --> 00:23:20,639
there's<font color="#E5E5E5"> no real alternative</font><font color="#CCCCCC"> to quill C</font>

574
00:23:18,390 --> 00:23:23,250
and maybe in that<font color="#CCCCCC"> case</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't want</font>

575
00:23:20,640 --> 00:23:25,380
to use this thing then you<font color="#CCCCCC"> can you know</font>

576
00:23:23,250 --> 00:23:29,670
compile things by hand<font color="#CCCCCC"> ER or use some of</font>

577
00:23:25,380 --> 00:23:31,890
the more<font color="#E5E5E5"> manual alternatives so I wanted</font>

578
00:23:29,670 --> 00:23:34,830
<font color="#CCCCCC">to talk a</font><font color="#E5E5E5"> little bit about kind of from</font>

579
00:23:31,890 --> 00:23:38,460
a<font color="#CCCCCC"> startup perspective open and</font><font color="#E5E5E5"> close</font>

580
00:23:34,830 --> 00:23:39,720
source software<font color="#CCCCCC"> and so it's a</font><font color="#E5E5E5"> little bit</font>

581
00:23:38,460 --> 00:23:42,870
tricky at a<font color="#E5E5E5"> startup</font>

582
00:23:39,720 --> 00:23:46,350
like what you should decide to<font color="#CCCCCC"> do when</font>

583
00:23:42,870 --> 00:23:49,918
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> work in</font><font color="#CCCCCC"> software especially</font>

584
00:23:46,350 --> 00:23:52,080
<font color="#CCCCCC">when the startup is small like</font><font color="#E5E5E5"> Righetti</font>

585
00:23:49,919 --> 00:23:52,650
<font color="#E5E5E5">and when all your competition is quite</font>

586
00:23:52,080 --> 00:23:54,960
large

587
00:23:52,650 --> 00:23:57,659
from the perspective<font color="#CCCCCC"> open-source there's</font>

588
00:23:54,960 --> 00:24:00,090
a lot of great<font color="#CCCCCC"> things languages should</font>

589
00:23:57,659 --> 00:24:01,020
definitely be<font color="#CCCCCC"> open sourced it's nice</font>

590
00:24:00,090 --> 00:24:02,970
when you<font color="#CCCCCC"> have a language that's</font>

591
00:24:01,020 --> 00:24:06,090
<font color="#E5E5E5">open-source and API is because people</font>

592
00:24:02,970 --> 00:24:07,590
can help<font color="#E5E5E5"> develop them and so</font><font color="#CCCCCC"> on it's</font>

593
00:24:06,090 --> 00:24:09,000
good when your RPC framework is

594
00:24:07,590 --> 00:24:10,500
<font color="#E5E5E5">open-source because that means people</font>

595
00:24:09,000 --> 00:24:13,470
can plug<font color="#E5E5E5"> into your architecture in</font>

596
00:24:10,500 --> 00:24:15,270
various ways<font color="#CCCCCC"> and</font><font color="#E5E5E5"> open-source allows us</font>

597
00:24:13,470 --> 00:24:19,320
to like understand what customers

598
00:24:15,270 --> 00:24:23,460
<font color="#CCCCCC">actually want and use more on the other</font>

599
00:24:19,320 --> 00:24:25,020
hand<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a company</font><font color="#E5E5E5"> again like ours when</font>

600
00:24:23,460 --> 00:24:27,390
you develop a lot<font color="#CCCCCC"> of great IP and</font>

601
00:24:25,020 --> 00:24:28,860
everything<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> something that you</font>

602
00:24:27,390 --> 00:24:31,020
<font color="#CCCCCC">necessarily just want to give away</font><font color="#E5E5E5"> it's</font>

603
00:24:28,860 --> 00:24:33,539
something that that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to kind</font><font color="#CCCCCC"> of</font>

604
00:24:31,020 --> 00:24:34,710
hold close<font color="#E5E5E5"> to</font><font color="#CCCCCC"> yourself it's something</font>

605
00:24:33,539 --> 00:24:38,280
<font color="#E5E5E5">that you can use this competitive</font>

606
00:24:34,710 --> 00:24:39,360
advantage<font color="#CCCCCC"> I actually don't really want</font>

607
00:24:38,280 --> 00:24:43,139
<font color="#E5E5E5">to waste time talking about it because</font>

608
00:24:39,360 --> 00:24:47,059
<font color="#CCCCCC">I'm just</font><font color="#E5E5E5"> kidding anyway</font><font color="#CCCCCC"> so actually what</font>

609
00:24:43,140 --> 00:24:51,799
I want to do is kind<font color="#E5E5E5"> of live at FOSDEM</font>

610
00:24:47,059 --> 00:24:55,309
<font color="#CCCCCC">open-source quill C and then why not</font>

611
00:24:51,799 --> 00:24:55,309
which one<font color="#E5E5E5"> is this</font>

612
00:25:07,770 --> 00:25:21,280
<font color="#E5E5E5">so we'll see hopefully should</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> visible</font>

613
00:25:10,720 --> 00:25:22,870
to<font color="#E5E5E5"> you</font><font color="#CCCCCC"> qvm</font><font color="#E5E5E5"> let's I think UVM became</font>

614
00:25:21,280 --> 00:25:25,120
public there shouldn't be<font color="#E5E5E5"> the private</font>

615
00:25:22,870 --> 00:25:26,459
symbol anymore<font color="#CCCCCC"> yeah I think</font><font color="#E5E5E5"> it's public</font>

616
00:25:25,120 --> 00:25:28,899
now

617
00:25:26,460 --> 00:25:32,830
so anyway feel<font color="#CCCCCC"> free to start looking at</font>

618
00:25:28,900 --> 00:25:35,140
<font color="#E5E5E5">the code</font><font color="#CCCCCC"> all of the code is</font><font color="#E5E5E5"> licensed</font>

619
00:25:32,830 --> 00:25:39,639
under<font color="#E5E5E5"> Apache</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> one little</font>

620
00:25:35,140 --> 00:25:42,460
<font color="#CCCCCC">front-end UI component that's a GPL so</font>

621
00:25:39,640 --> 00:25:44,800
no other licenses and there no EULA's<font color="#E5E5E5"> no</font>

622
00:25:42,460 --> 00:25:47,560
anything<font color="#CCCCCC"> it should</font><font color="#E5E5E5"> be all free and</font>

623
00:25:44,800 --> 00:25:49,180
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> so you guys are truly the</font>

624
00:25:47,560 --> 00:25:51,370
<font color="#E5E5E5">first to know it wasn't announced</font><font color="#CCCCCC"> or</font>

625
00:25:49,180 --> 00:25:56,440
<font color="#CCCCCC">anything any earlier</font><font color="#E5E5E5"> and you saw it with</font>

626
00:25:51,370 --> 00:25:58,360
your<font color="#CCCCCC"> own eyes so so I'm American and</font>

627
00:25:56,440 --> 00:25:59,890
hopefully nobody<font color="#CCCCCC"> like mistook my shirt</font>

628
00:25:58,360 --> 00:26:01,149
for being like<font color="#E5E5E5"> Colonel</font><font color="#CCCCCC"> Sanders or</font>

629
00:25:59,890 --> 00:26:04,300
something

630
00:26:01,150 --> 00:26:06,100
my shirt is in fact John McCarthy who

631
00:26:04,300 --> 00:26:11,860
<font color="#E5E5E5">was the inventor</font><font color="#CCCCCC"> of Lisp</font>

632
00:26:06,100 --> 00:26:14,020
<font color="#CCCCCC">and early on</font><font color="#E5E5E5"> we wrote the qvm an initial</font>

633
00:26:11,860 --> 00:26:18,250
prototype<font color="#CCCCCC"> in Lisp and the compiler and</font>

634
00:26:14,020 --> 00:26:19,900
Lisp<font color="#CCCCCC"> I don't think many of the</font>

635
00:26:18,250 --> 00:26:21,700
<font color="#CCCCCC">innovations that we've had could have</font>

636
00:26:19,900 --> 00:26:25,690
happened if were not originally written

637
00:26:21,700 --> 00:26:29,490
in Lisp we don't have teams<font color="#E5E5E5"> of you know</font>

638
00:26:25,690 --> 00:26:31,990
<font color="#E5E5E5">tens or hundreds of developers</font>

639
00:26:29,490 --> 00:26:33,040
<font color="#CCCCCC">originally the team was the software</font>

640
00:26:31,990 --> 00:26:34,660
team was actually<font color="#CCCCCC"> like two or three</font>

641
00:26:33,040 --> 00:26:37,389
<font color="#CCCCCC">people way back when the company was</font>

642
00:26:34,660 --> 00:26:38,290
<font color="#CCCCCC">twenty people</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> developing and Lisp was</font>

643
00:26:37,390 --> 00:26:40,750
pretty

644
00:26:38,290 --> 00:26:44,170
time and<font color="#CCCCCC"> money efficient more or less</font>

645
00:26:40,750 --> 00:26:46,240
<font color="#E5E5E5">it's very snappy to develop</font><font color="#CCCCCC"> more over</font>

646
00:26:44,170 --> 00:26:49,780
<font color="#E5E5E5">like quantum computing is an interesting</font>

647
00:26:46,240 --> 00:26:50,740
<font color="#E5E5E5">field in that not I don't think anybody</font>

648
00:26:49,780 --> 00:26:52,810
has<font color="#E5E5E5"> really figured out a great</font>

649
00:26:50,740 --> 00:26:54,940
expressive syntax for expressing

650
00:26:52,810 --> 00:26:56,919
programs for being able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take an idea</font>

651
00:26:54,940 --> 00:27:00,010
<font color="#CCCCCC">on</font><font color="#E5E5E5"> one's mind</font><font color="#CCCCCC"> and actually convert it</font>

652
00:26:56,920 --> 00:27:03,250
into something that that runs<font color="#E5E5E5"> on a</font>

653
00:27:00,010 --> 00:27:04,750
<font color="#E5E5E5">machine I mean quill and and Kasim and</font>

654
00:27:03,250 --> 00:27:06,790
all of<font color="#E5E5E5"> these things are good starts I</font>

655
00:27:04,750 --> 00:27:08,980
<font color="#CCCCCC">think they describe a machine</font>

656
00:27:06,790 --> 00:27:10,450
representation of a program<font color="#E5E5E5"> but they</font>

657
00:27:08,980 --> 00:27:12,580
don't necessarily<font color="#CCCCCC"> make it</font><font color="#E5E5E5"> easy to take</font>

658
00:27:10,450 --> 00:27:15,310
an idea<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know in one's mind and put</font>

659
00:27:12,580 --> 00:27:16,659
it on<font color="#CCCCCC"> paper and so</font><font color="#E5E5E5"> Lisp is a wonderful</font>

660
00:27:15,310 --> 00:27:19,030
substrate for testing<font color="#CCCCCC"> too</font>

661
00:27:16,660 --> 00:27:21,340
syntactic abstractions different ways of

662
00:27:19,030 --> 00:27:22,720
arranging characters on a screen in

663
00:27:21,340 --> 00:27:27,310
<font color="#CCCCCC">order to express some type of</font>

664
00:27:22,720 --> 00:27:30,970
computation<font color="#E5E5E5"> the real real real reason</font>

665
00:27:27,310 --> 00:27:31,960
though<font color="#E5E5E5"> is that a compiler and</font><font color="#CCCCCC"> optimising</font>

666
00:27:30,970 --> 00:27:33,400
compiler<font color="#CCCCCC"> I don't know if anybody's</font>

667
00:27:31,960 --> 00:27:35,860
hacked on<font color="#E5E5E5"> you know an optimizing</font>

668
00:27:33,400 --> 00:27:37,540
compiler<font color="#CCCCCC"> before but they're</font><font color="#E5E5E5"> very</font>

669
00:27:35,860 --> 00:27:38,919
<font color="#CCCCCC">difficult to debug if you get a wrong</font>

670
00:27:37,540 --> 00:27:40,750
answer<font color="#CCCCCC"> you put in let's say we were</font>

671
00:27:38,920 --> 00:27:42,610
<font color="#E5E5E5">compiling that</font><font color="#CCCCCC"> mullmer source and</font><font color="#E5E5E5"> gates</font>

672
00:27:40,750 --> 00:27:45,400
<font color="#E5E5E5">and at the end we detect that's the</font>

673
00:27:42,610 --> 00:27:48,729
wrong answer<font color="#E5E5E5"> like where do you start to</font>

674
00:27:45,400 --> 00:27:50,680
<font color="#E5E5E5">even debug something like that</font><font color="#CCCCCC"> and so in</font>

675
00:27:48,730 --> 00:27:52,920
Lisp<font color="#CCCCCC"> in particularly with Emacs and</font>

676
00:27:50,680 --> 00:27:55,570
<font color="#E5E5E5">slime which are both also free software</font>

677
00:27:52,920 --> 00:27:57,490
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> inspect everything</font><font color="#E5E5E5"> you can open</font>

678
00:27:55,570 --> 00:27:59,889
up<font color="#CCCCCC"> everything live while the code is</font>

679
00:27:57,490 --> 00:28:01,360
<font color="#CCCCCC">running</font><font color="#E5E5E5"> while the compiler is running</font>

680
00:27:59,890 --> 00:28:02,920
you can<font color="#CCCCCC"> actually open a repple and</font>

681
00:28:01,360 --> 00:28:04,929
inspect<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> state inside the</font>

682
00:28:02,920 --> 00:28:06,340
compiler inspect what it's doing how

683
00:28:04,930 --> 00:28:08,470
it's working<font color="#E5E5E5"> all of that stuff not just</font>

684
00:28:06,340 --> 00:28:12,250
verbose printing out on the screen but

685
00:28:08,470 --> 00:28:13,990
actual interactivity<font color="#CCCCCC"> you know and</font>

686
00:28:12,250 --> 00:28:17,170
there's kind<font color="#E5E5E5"> of the usual argument of</font>

687
00:28:13,990 --> 00:28:18,390
you know<font color="#CCCCCC"> it's lips</font><font color="#E5E5E5"> Lisp so maybe it's</font>

688
00:28:17,170 --> 00:28:20,800
hard<font color="#E5E5E5"> to learn or something like that</font>

689
00:28:18,390 --> 00:28:23,440
<font color="#CCCCCC">almost all of</font><font color="#E5E5E5"> our programmers</font><font color="#CCCCCC"> barring me</font>

690
00:28:20,800 --> 00:28:26,230
and I<font color="#E5E5E5"> think one other were professional</font>

691
00:28:23,440 --> 00:28:27,520
Lisp programmers<font color="#E5E5E5"> prior and most people</font>

692
00:28:26,230 --> 00:28:29,410
are<font color="#E5E5E5"> productive within a few days it's</font>

693
00:28:27,520 --> 00:28:31,330
<font color="#E5E5E5">not like a purely functional language or</font>

694
00:28:29,410 --> 00:28:33,010
anything like<font color="#E5E5E5"> that if you want to mutate</font>

695
00:28:31,330 --> 00:28:34,990
state and do all<font color="#CCCCCC"> that stuff</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

696
00:28:33,010 --> 00:28:38,230
<font color="#CCCCCC">absolutely do it I have to do it for the</font>

697
00:28:34,990 --> 00:28:39,400
<font color="#E5E5E5">qvm to make it efficient</font><font color="#CCCCCC"> so most people</font>

698
00:28:38,230 --> 00:28:40,630
can learn it and<font color="#CCCCCC"> if you're interested in</font>

699
00:28:39,400 --> 00:28:42,580
learning it there's a free book it's

700
00:28:40,630 --> 00:28:45,040
been<font color="#E5E5E5"> out for</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know how long now</font>

701
00:28:42,580 --> 00:28:46,810
<font color="#CCCCCC">ten years or so practical Common Lisp if</font>

702
00:28:45,040 --> 00:28:49,899
all of you probably<font color="#E5E5E5"> are programmers</font>

703
00:28:46,810 --> 00:28:54,280
already<font color="#E5E5E5"> so if you want to check it out</font>

704
00:28:49,900 --> 00:28:56,650
great<font color="#E5E5E5"> book so if you</font><font color="#CCCCCC"> find</font><font color="#E5E5E5"> yourself</font>

705
00:28:54,280 --> 00:29:00,940
<font color="#E5E5E5">wanting to be in</font><font color="#CCCCCC"> superposition with the</font>

706
00:28:56,650 --> 00:29:05,260
beer<font color="#E5E5E5"> at some point</font><font color="#CCCCCC"> I invented this beer</font>

707
00:29:00,940 --> 00:29:07,330
<font color="#E5E5E5">plus you over root to challenge</font><font color="#CCCCCC"> if</font>

708
00:29:05,260 --> 00:29:08,860
anybody<font color="#E5E5E5"> again you guys are</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> to</font>

709
00:29:07,330 --> 00:29:10,510
<font color="#CCCCCC">know of the first three people if you</font>

710
00:29:08,860 --> 00:29:12,760
solve any<font color="#E5E5E5"> of the issues on github we</font>

711
00:29:10,510 --> 00:29:14,770
tried to even internally keep a list<font color="#E5E5E5"> of</font>

712
00:29:12,760 --> 00:29:17,800
<font color="#E5E5E5">issues if you fix a bug if you just make</font>

713
00:29:14,770 --> 00:29:21,210
any interesting contribution<font color="#CCCCCC"> I'm happy</font>

714
00:29:17,800 --> 00:29:24,580
to have<font color="#E5E5E5"> a beer with you it'll</font><font color="#CCCCCC"> be on me I</font>

715
00:29:21,210 --> 00:29:26,430
should say thanks to all<font color="#CCCCCC"> of my</font>

716
00:29:24,580 --> 00:29:29,379
colleagues<font color="#E5E5E5"> at regatta but in particular</font>

717
00:29:26,430 --> 00:29:30,370
<font color="#E5E5E5">I'd like</font><font color="#CCCCCC"> to give thanks</font><font color="#E5E5E5"> to Eric Peterson</font>

718
00:29:29,380 --> 00:29:33,130
he's one of<font color="#E5E5E5"> the</font>

719
00:29:30,370 --> 00:29:35,889
principal architects<font color="#E5E5E5"> of the compiler</font>

720
00:29:33,130 --> 00:29:38,770
he's also an algebraic topology<font color="#E5E5E5"> so he</font>

721
00:29:35,890 --> 00:29:40,660
thinks<font color="#CCCCCC"> about</font><font color="#E5E5E5"> like chips as like you know</font>

722
00:29:38,770 --> 00:29:42,940
<font color="#CCCCCC">and dimensional simplices and all this</font>

723
00:29:40,660 --> 00:29:46,720
<font color="#E5E5E5">stuff that doesn't make any sense</font>

724
00:29:42,940 --> 00:29:49,660
<font color="#E5E5E5">mark skill back lauren Capilouto will</font>

725
00:29:46,720 --> 00:29:51,520
<font color="#CCCCCC">zhang chad</font><font color="#E5E5E5"> Righetti</font><font color="#CCCCCC"> and the rest of the</font>

726
00:29:49,660 --> 00:29:53,380
team really for<font color="#E5E5E5"> for supporting building</font>

727
00:29:51,520 --> 00:29:55,240
this<font color="#E5E5E5"> effort and for really</font><font color="#CCCCCC"> thinking</font>

728
00:29:53,380 --> 00:29:58,360
about quantum software engineering is

729
00:29:55,240 --> 00:30:02,380
like a thing<font color="#E5E5E5"> unto itself</font><font color="#CCCCCC"> my emails</font><font color="#E5E5E5"> down</font>

730
00:29:58,360 --> 00:30:04,780
there<font color="#CCCCCC"> the code</font><font color="#E5E5E5"> on github is Righetti /qv</font>

731
00:30:02,380 --> 00:30:06,550
<font color="#CCCCCC">m and Righetti slash</font><font color="#E5E5E5"> cool c and we do</font>

732
00:30:04,780 --> 00:30:08,080
<font color="#E5E5E5">have a slack channel if you go to</font>

733
00:30:06,550 --> 00:30:10,330
<font color="#E5E5E5">Righetti slash community you can find</font>

734
00:30:08,080 --> 00:30:12,220
<font color="#CCCCCC">the link to our slack</font><font color="#E5E5E5"> channel</font><font color="#CCCCCC"> i'm on it</font>

735
00:30:10,330 --> 00:30:14,710
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other people are on it happy to</font>

736
00:30:12,220 --> 00:30:16,350
chat about<font color="#E5E5E5"> this stuff and thank you all</font>

737
00:30:14,710 --> 00:30:28,680
<font color="#E5E5E5">for listening it's really fun</font>

738
00:30:16,350 --> 00:30:28,679
[Applause]

739
00:30:56,369 --> 00:31:05,379
yes that's right<font color="#CCCCCC"> so the simulator</font><font color="#E5E5E5"> is</font>

740
00:31:03,220 --> 00:31:08,919
going to just simulate a quill program

741
00:31:05,379 --> 00:31:11,918
<font color="#CCCCCC">oh yes</font><font color="#E5E5E5"> so the question</font><font color="#CCCCCC"> was well first</font>

742
00:31:08,919 --> 00:31:13,600
<font color="#E5E5E5">there</font><font color="#CCCCCC"> was a</font><font color="#E5E5E5"> comment saying that</font><font color="#CCCCCC"> that I</font>

743
00:31:11,919 --> 00:31:16,389
said that the<font color="#E5E5E5"> compiler was is only</font><font color="#CCCCCC"> of</font>

744
00:31:13,600 --> 00:31:17,980
its kind<font color="#CCCCCC"> and in this gentleman said that</font>

745
00:31:16,389 --> 00:31:20,729
there<font color="#E5E5E5"> are there is some other software</font>

746
00:31:17,980 --> 00:31:24,759
that provides<font color="#CCCCCC"> a lot of similar features</font>

747
00:31:20,730 --> 00:31:26,799
<font color="#CCCCCC">and none</font><font color="#E5E5E5"> the question</font><font color="#CCCCCC"> was does is a</font>

748
00:31:24,759 --> 00:31:29,350
simulator general enough<font color="#CCCCCC"> to support</font>

749
00:31:26,799 --> 00:31:33,759
other architectures<font color="#E5E5E5"> like the IBM</font><font color="#CCCCCC"> qx5 for</font>

750
00:31:29,350 --> 00:31:35,769
instance the simulator<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> developed</font>

751
00:31:33,759 --> 00:31:37,090
from<font color="#E5E5E5"> a theory of something that we wrote</font>

752
00:31:35,769 --> 00:31:38,950
in the quill paper called<font color="#E5E5E5"> the quantum</font>

753
00:31:37,090 --> 00:31:41,350
abstract machine<font color="#E5E5E5"> so it's a simulator for</font>

754
00:31:38,950 --> 00:31:44,710
<font color="#E5E5E5">in abstract</font><font color="#CCCCCC"> machine it's a classical</font>

755
00:31:41,350 --> 00:31:47,139
simulation it doesn't restrict<font color="#E5E5E5"> itself to</font>

756
00:31:44,710 --> 00:31:48,730
<font color="#E5E5E5">any particular gate or architecture well</font>

757
00:31:47,139 --> 00:31:52,059
whatever gate you throw at<font color="#E5E5E5"> it it will</font>

758
00:31:48,730 --> 00:31:54,029
simulate<font color="#CCCCCC"> I will not error if</font><font color="#E5E5E5"> you say I'm</font>

759
00:31:52,059 --> 00:31:55,990
doing<font color="#E5E5E5"> this gate on this architecture</font>

760
00:31:54,029 --> 00:31:58,480
<font color="#CCCCCC">presumably you would pass it through the</font>

761
00:31:55,990 --> 00:32:00,009
compiler first before simulating it if

762
00:31:58,480 --> 00:32:02,110
you wanted to<font color="#E5E5E5"> restrict it to</font><font color="#CCCCCC"> the gates</font>

763
00:32:00,009 --> 00:32:05,889
of<font color="#E5E5E5"> that architecture</font><font color="#CCCCCC"> with that said</font>

764
00:32:02,110 --> 00:32:08,379
<font color="#CCCCCC">however for instance with our chips we</font>

765
00:32:05,889 --> 00:32:09,820
do develop noise models that are you

766
00:32:08,379 --> 00:32:12,639
know similar<font color="#E5E5E5"> or at least</font><font color="#CCCCCC"> somewhat</font>

767
00:32:09,820 --> 00:32:15,279
characteristic of of our chips and you

768
00:32:12,639 --> 00:32:16,809
can supply<font color="#E5E5E5"> that to</font><font color="#CCCCCC"> the qvm and it will</font>

769
00:32:15,279 --> 00:32:18,669
be<font color="#E5E5E5"> able to it will be able to simulate</font>

770
00:32:16,809 --> 00:32:20,678
that<font color="#E5E5E5"> but otherwise there isn't any like</font>

771
00:32:18,669 --> 00:32:23,460
<font color="#E5E5E5">hard-line restriction on the gates that</font>

772
00:32:20,679 --> 00:32:23,460
it<font color="#E5E5E5"> simulates</font><font color="#CCCCCC"> no</font>

773
00:32:25,820 --> 00:32:40,649
yep so yeah<font color="#E5E5E5"> so I don't think I'm the</font>

774
00:32:39,300 --> 00:32:44,220
<font color="#CCCCCC">best</font><font color="#E5E5E5"> person to answer this I</font><font color="#CCCCCC"> think you</font>

775
00:32:40,650 --> 00:32:46,350
yes<font color="#CCCCCC"> I keep</font><font color="#E5E5E5"> forgetting what fields in</font>

776
00:32:44,220 --> 00:32:47,940
terms<font color="#CCCCCC"> of practical applicability what</font>

777
00:32:46,350 --> 00:32:50,270
fields is quantum computing sort of good

778
00:32:47,940 --> 00:32:52,320
or useful for I don't<font color="#CCCCCC"> think I'm the</font>

779
00:32:50,270 --> 00:32:54,510
greatest<font color="#E5E5E5"> person to answer this</font><font color="#CCCCCC"> question</font>

780
00:32:52,320 --> 00:32:56,939
I<font color="#E5E5E5"> think I definitely</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> learn a lot</font>

781
00:32:54,510 --> 00:32:59,520
from<font color="#E5E5E5"> the people here</font><font color="#CCCCCC"> but my take on it</font>

782
00:32:56,940 --> 00:33:01,650
<font color="#E5E5E5">is there are two things that that we've</font>

783
00:32:59,520 --> 00:33:03,080
definitely been focusing<font color="#E5E5E5"> on two things</font>

784
00:33:01,650 --> 00:33:06,540
<font color="#CCCCCC">that</font><font color="#E5E5E5"> seem to</font><font color="#CCCCCC"> be popular in</font><font color="#E5E5E5"> the field</font>

785
00:33:03,080 --> 00:33:08,610
<font color="#CCCCCC">quantum chemistry simulating dynamic</font>

786
00:33:06,540 --> 00:33:11,070
simulating different aspects of

787
00:33:08,610 --> 00:33:12,870
molecules<font color="#E5E5E5"> finding energy states and</font>

788
00:33:11,070 --> 00:33:15,510
<font color="#CCCCCC">energy levels</font><font color="#E5E5E5"> and so on</font>

789
00:33:12,870 --> 00:33:18,090
<font color="#CCCCCC">and optimization problem is usually</font>

790
00:33:15,510 --> 00:33:20,250
finding the maximum<font color="#CCCCCC"> or minimum of some</font>

791
00:33:18,090 --> 00:33:23,189
constrained optimization problem I would

792
00:33:20,250 --> 00:33:24,630
say so that ties<font color="#CCCCCC"> in to logistics and and</font>

793
00:33:23,190 --> 00:33:26,700
<font color="#E5E5E5">what-have-you but</font><font color="#CCCCCC"> I do want to reiterate</font>

794
00:33:24,630 --> 00:33:29,880
we haven't solved<font color="#E5E5E5"> a problem</font><font color="#CCCCCC"> on a quantum</font>

795
00:33:26,700 --> 00:33:31,470
computer<font color="#CCCCCC"> again that I know of that</font><font color="#E5E5E5"> like</font>

796
00:33:29,880 --> 00:33:33,000
outperforms something that we've

797
00:33:31,470 --> 00:33:34,530
competed classically we've done great

798
00:33:33,000 --> 00:33:35,970
<font color="#E5E5E5">proof of concepts you know kind of</font>

799
00:33:34,530 --> 00:33:38,389
<font color="#E5E5E5">almost the hello world of</font><font color="#CCCCCC"> quantum</font>

800
00:33:35,970 --> 00:33:42,270
computation<font color="#CCCCCC"> almost</font><font color="#E5E5E5"> seems to be computing</font>

801
00:33:38,390 --> 00:33:43,710
<font color="#CCCCCC">the energy of like a dihydrogen molecule</font>

802
00:33:42,270 --> 00:33:47,220
at different bond distances it's

803
00:33:43,710 --> 00:33:48,840
something you can compute today<font color="#E5E5E5"> but</font>

804
00:33:47,220 --> 00:33:50,670
that's<font color="#E5E5E5"> also something that</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> laptop</font>

805
00:33:48,840 --> 00:33:57,620
<font color="#CCCCCC">compute so but those seem to be</font><font color="#E5E5E5"> the</font>

806
00:33:50,670 --> 00:33:57,620
<font color="#E5E5E5">promising areas yep</font>

807
00:33:59,330 --> 00:34:03,289
it's called<font color="#E5E5E5"> postpartum</font>

808
00:34:35,800 --> 00:34:41,750
yeah the question<font color="#E5E5E5"> is what's the state</font><font color="#CCCCCC"> of</font>

809
00:34:38,629 --> 00:34:43,668
post quantum crypto<font color="#CCCCCC"> I actually don't</font>

810
00:34:41,750 --> 00:34:45,469
know anything about<font color="#E5E5E5"> it and I</font><font color="#CCCCCC"> think we</font>

811
00:34:43,668 --> 00:34:47,179
have a talk later<font color="#CCCCCC"> that's going to be</font>

812
00:34:45,469 --> 00:34:49,779
<font color="#E5E5E5">about it so that's definitely something</font>

813
00:34:47,179 --> 00:35:09,910
I'm interested<font color="#E5E5E5"> in hearing about as well</font>

814
00:34:49,780 --> 00:35:13,190
<font color="#E5E5E5">yep</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> Yeah</font><font color="#E5E5E5"> right</font>

815
00:35:09,910 --> 00:35:14,960
<font color="#E5E5E5">sure the question is I said quill</font><font color="#CCCCCC"> is</font>

816
00:35:13,190 --> 00:35:17,210
like<font color="#E5E5E5"> anise it's like an assembly like</font>

817
00:35:14,960 --> 00:35:20,240
language is there like an equivalent<font color="#E5E5E5"> of</font>

818
00:35:17,210 --> 00:35:22,040
like the end binary that would be like

819
00:35:20,240 --> 00:35:25,089
loaded into memory where it<font color="#E5E5E5"> actually</font>

820
00:35:22,040 --> 00:35:28,250
<font color="#CCCCCC">gets executed quill like other sort</font><font color="#E5E5E5"> of</font>

821
00:35:25,090 --> 00:35:30,230
big air quotes<font color="#E5E5E5"> assembly</font><font color="#CCCCCC"> quote-unquote</font>

822
00:35:28,250 --> 00:35:33,020
languages are not<font color="#E5E5E5"> true assemblies</font>

823
00:35:30,230 --> 00:35:35,990
they're not languages that run native on

824
00:35:33,020 --> 00:35:38,960
the machine<font color="#CCCCCC"> generally not</font><font color="#E5E5E5"> even a binary</font>

825
00:35:35,990 --> 00:35:40,819
encoding runs native on the machine<font color="#CCCCCC"> in</font>

826
00:35:38,960 --> 00:35:42,619
the end these things<font color="#E5E5E5"> at least with</font>

827
00:35:40,820 --> 00:35:44,030
current control systems<font color="#E5E5E5"> I and on</font>

828
00:35:42,619 --> 00:35:45,710
microwave<font color="#CCCCCC"> devices to be</font><font color="#E5E5E5"> clear</font>

829
00:35:44,030 --> 00:35:47,810
superconducting devices that are driven

830
00:35:45,710 --> 00:35:49,369
by microwaves<font color="#E5E5E5"> usually in the end the</font>

831
00:35:47,810 --> 00:35:51,170
quote that<font color="#E5E5E5"> the quill program will be</font>

832
00:35:49,369 --> 00:35:54,260
<font color="#E5E5E5">something general that has all these you</font>

833
00:35:51,170 --> 00:35:55,160
<font color="#E5E5E5">know funny gates like if I go back and</font>

834
00:35:54,260 --> 00:35:56,960
<font color="#CCCCCC">look at this</font>

835
00:35:55,160 --> 00:35:59,299
you know there's<font color="#CCCCCC"> mullmer Sorenson thing</font>

836
00:35:56,960 --> 00:36:01,420
<font color="#E5E5E5">like even though it looks like assembly</font>

837
00:35:59,300 --> 00:36:03,770
<font color="#E5E5E5">that's definitely not something any</font>

838
00:36:01,420 --> 00:36:07,550
superconducting computer will run an ion

839
00:36:03,770 --> 00:36:09,530
trap<font color="#CCCCCC"> or some can run this natively but</font>

840
00:36:07,550 --> 00:36:10,910
<font color="#E5E5E5">not any superconducting chip and so what</font>

841
00:36:09,530 --> 00:36:12,740
happens<font color="#E5E5E5"> is this passes through a</font>

842
00:36:10,910 --> 00:36:15,140
<font color="#E5E5E5">compiler</font><font color="#CCCCCC"> and you get quill back out</font><font color="#E5E5E5"> but</font>

843
00:36:12,740 --> 00:36:17,379
this quill is now in one-to-one mapping

844
00:36:15,140 --> 00:36:19,240
with what your machine<font color="#CCCCCC"> will run</font>

845
00:36:17,380 --> 00:36:21,700
generally<font color="#CCCCCC"> after that you're going to</font>

846
00:36:19,240 --> 00:36:24,339
<font color="#E5E5E5">pass it</font><font color="#CCCCCC"> to another sort of translator</font>

847
00:36:21,700 --> 00:36:27,430
<font color="#E5E5E5">almost like a true assembler now which</font>

848
00:36:24,340 --> 00:36:29,800
gets turned into code that runs on<font color="#CCCCCC"> your</font>

849
00:36:27,430 --> 00:36:32,470
control<font color="#CCCCCC"> system even when it</font><font color="#E5E5E5"> gets on the</font>

850
00:36:29,800 --> 00:36:34,360
control system however<font color="#E5E5E5"> it's not going to</font>

851
00:36:32,470 --> 00:36:36,790
be like one<font color="#E5E5E5"> single binary that runs</font>

852
00:36:34,360 --> 00:36:38,770
<font color="#E5E5E5">single threaded often times since qubits</font>

853
00:36:36,790 --> 00:36:40,810
can<font color="#E5E5E5"> be excited in parallel you're</font>

854
00:36:38,770 --> 00:36:42,310
actually loading<font color="#E5E5E5"> this code onto a bunch</font>

855
00:36:40,810 --> 00:36:45,910
<font color="#E5E5E5">of things that are</font><font color="#CCCCCC"> driving a bunch</font><font color="#E5E5E5"> of</font>

856
00:36:42,310 --> 00:36:48,009
different D to a converters and ATD

857
00:36:45,910 --> 00:36:49,509
converters for<font color="#E5E5E5"> readout and so on so</font>

858
00:36:48,010 --> 00:37:08,620
there is a little<font color="#E5E5E5"> bit more that has to</font>

859
00:36:49,510 --> 00:37:11,920
<font color="#CCCCCC">happen after</font><font color="#E5E5E5"> this for a compilation yeah</font>

860
00:37:08,620 --> 00:37:15,040
so one of the main metrics there are a

861
00:37:11,920 --> 00:37:18,070
few metrics<font color="#CCCCCC"> but one of them were like</font>

862
00:37:15,040 --> 00:37:19,240
the 30x thing came from<font color="#CCCCCC"> was one of the</font>

863
00:37:18,070 --> 00:37:19,960
popular<font color="#E5E5E5"> things that we do there's an</font>

864
00:37:19,240 --> 00:37:22,509
algorithm<font color="#E5E5E5"> called</font>

865
00:37:19,960 --> 00:37:24,610
sorry the question<font color="#CCCCCC"> was</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> did the 30x</font>

866
00:37:22,510 --> 00:37:30,370
come from I<font color="#E5E5E5"> stayed at 30 X speed up</font>

867
00:37:24,610 --> 00:37:32,920
before where'd that come from<font color="#E5E5E5"> so yeah so</font>

868
00:37:30,370 --> 00:37:37,509
generally the comparison was kind<font color="#E5E5E5"> of the</font>

869
00:37:32,920 --> 00:37:40,060
realm of HTTP HTTP based services where

870
00:37:37,510 --> 00:37:41,710
<font color="#CCCCCC">you construct a job of some</font><font color="#E5E5E5"> sort you</font>

871
00:37:40,060 --> 00:37:44,830
<font color="#CCCCCC">have a program that you'd like</font><font color="#E5E5E5"> to run</font>

872
00:37:41,710 --> 00:37:47,410
<font color="#E5E5E5">you ship it off to you know some service</font>

873
00:37:44,830 --> 00:37:49,720
<font color="#E5E5E5">ingesting this job it processes it</font>

874
00:37:47,410 --> 00:37:52,120
packages up the answer<font color="#E5E5E5"> sends</font><font color="#CCCCCC"> it back to</font>

875
00:37:49,720 --> 00:37:53,470
<font color="#CCCCCC">you over the Internet and perhaps</font><font color="#E5E5E5"> first</font>

876
00:37:52,120 --> 00:37:55,060
a<font color="#E5E5E5"> lot of programming and quantum</font>

877
00:37:53,470 --> 00:37:57,220
computing<font color="#CCCCCC"> you either have to</font><font color="#E5E5E5"> do that a</font>

878
00:37:55,060 --> 00:37:59,560
lot<font color="#CCCCCC"> because maybe you're</font><font color="#E5E5E5"> scanning over a</font>

879
00:37:57,220 --> 00:38:02,470
range of things<font color="#E5E5E5"> or your</font><font color="#CCCCCC"> program itself</font>

880
00:37:59,560 --> 00:38:05,470
<font color="#E5E5E5">is</font><font color="#CCCCCC"> actually changing frequently you</font>

881
00:38:02,470 --> 00:38:08,680
might be generating a new circuit<font color="#E5E5E5"> for</font>

882
00:38:05,470 --> 00:38:10,629
every run of your of<font color="#E5E5E5"> your program so you</font>

883
00:38:08,680 --> 00:38:13,270
might be<font color="#E5E5E5"> optimizing let's suppose you're</font>

884
00:38:10,630 --> 00:38:15,460
finding the maximum<font color="#E5E5E5"> of something you</font>

885
00:38:13,270 --> 00:38:17,560
construct an initial program you send it

886
00:38:15,460 --> 00:38:19,540
you get the answer back<font color="#CCCCCC"> you evaluate</font>

887
00:38:17,560 --> 00:38:21,160
<font color="#E5E5E5">whether that was good or bad maybe it's</font>

888
00:38:19,540 --> 00:38:23,080
not good<font color="#CCCCCC"> so you take a</font><font color="#E5E5E5"> step in another</font>

889
00:38:21,160 --> 00:38:25,420
direction construct a new circuit send

890
00:38:23,080 --> 00:38:27,610
it receive<font color="#CCCCCC"> it so those types</font><font color="#E5E5E5"> of use</font>

891
00:38:25,420 --> 00:38:31,280
cases<font color="#E5E5E5"> were what we were comparing to</font>

892
00:38:27,610 --> 00:38:33,340
specifically<font color="#E5E5E5"> vqe and QA</font><font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> a algorithm</font>

893
00:38:31,280 --> 00:38:35,720
if you're familiar with those names

894
00:38:33,340 --> 00:38:38,210
<font color="#E5E5E5">that's what we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> comparing it to where</font>

895
00:38:35,720 --> 00:38:40,939
the speed ups come from<font color="#E5E5E5"> our locality</font>

896
00:38:38,210 --> 00:38:43,250
with the machine<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> qmi you're</font>

897
00:38:40,940 --> 00:38:45,110
actually<font color="#E5E5E5"> running local to the chip</font>

898
00:38:43,250 --> 00:38:46,760
itself<font color="#CCCCCC"> you're your virtual machine is</font>

899
00:38:45,110 --> 00:38:51,890
actually resident on<font color="#CCCCCC"> the machine with</font>

900
00:38:46,760 --> 00:38:54,800
<font color="#CCCCCC">the control system what is it called</font>

901
00:38:51,890 --> 00:38:57,290
<font color="#E5E5E5">fast reset with fast</font><font color="#CCCCCC"> feedback or active</font>

902
00:38:54,800 --> 00:38:59,540
reset is another one where we<font color="#E5E5E5"> can zero</font>

903
00:38:57,290 --> 00:39:01,370
the state of the<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> by kind of</font>

904
00:38:59,540 --> 00:39:03,650
forcing it<font color="#CCCCCC"> to be zero we</font><font color="#E5E5E5"> can send pulses</font>

905
00:39:01,370 --> 00:39:05,240
<font color="#E5E5E5">in measure and and bring it</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> to the</font>

906
00:39:03,650 --> 00:39:06,500
<font color="#E5E5E5">zero state as opposed to kind of</font>

907
00:39:05,240 --> 00:39:08,569
<font color="#CCCCCC">stepping off the</font><font color="#E5E5E5"> background letting the</font>

908
00:39:06,500 --> 00:39:11,150
<font color="#E5E5E5">Machine kind of slowly get back so you</font>

909
00:39:08,570 --> 00:39:12,500
can really iterate your program fast and

910
00:39:11,150 --> 00:39:14,150
the third thing that we introduced is

911
00:39:12,500 --> 00:39:16,550
something called parametric compilation

912
00:39:14,150 --> 00:39:18,230
where<font color="#E5E5E5"> the compiler itself not only takes</font>

913
00:39:16,550 --> 00:39:20,090
a fixed<font color="#CCCCCC"> set of gates</font><font color="#E5E5E5"> but can actually</font>

914
00:39:18,230 --> 00:39:21,980
take a parametric description of your

915
00:39:20,090 --> 00:39:23,780
gates where you have<font color="#CCCCCC"> unknown variables</font>

916
00:39:21,980 --> 00:39:26,090
<font color="#E5E5E5">and still compile it into your native</font>

917
00:39:23,780 --> 00:39:27,260
<font color="#E5E5E5">gate set and with that with parametric</font>

918
00:39:26,090 --> 00:39:30,290
compilation that means you don't have to

919
00:39:27,260 --> 00:39:32,390
compile each loop around<font color="#E5E5E5"> when you hit</font>

920
00:39:30,290 --> 00:39:33,650
the<font color="#E5E5E5"> actual hardware and so that's kind</font>

921
00:39:32,390 --> 00:39:37,060
of where the<font color="#E5E5E5"> speed ups came from those</font>

922
00:39:33,650 --> 00:39:37,060
are the problems<font color="#CCCCCC"> that we compared</font><font color="#E5E5E5"> to</font>

923
00:39:46,180 --> 00:39:50,419
yeah<font color="#E5E5E5"> so</font><font color="#CCCCCC"> qvm will execute</font><font color="#E5E5E5"> anything</font>

924
00:39:48,800 --> 00:39:51,740
<font color="#E5E5E5">whatever you throw at it whatever gates</font>

925
00:39:50,420 --> 00:39:55,210
you throw at it that'll be fine so

926
00:39:51,740 --> 00:39:59,810
there's no restriction there<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> I</font>

927
00:39:55,210 --> 00:40:01,910
don't<font color="#CCCCCC"> think I'll get it right can quill</font>

928
00:39:59,810 --> 00:40:04,960
see in the<font color="#CCCCCC"> qvm operate with different</font>

929
00:40:01,910 --> 00:40:07,430
native gate sets<font color="#CCCCCC"> qvm will run anything</font>

930
00:40:04,960 --> 00:40:08,990
<font color="#E5E5E5">any gate set it doesn't matter as long</font>

931
00:40:07,430 --> 00:40:13,520
<font color="#E5E5E5">as it understands the actual</font>

932
00:40:08,990 --> 00:40:17,240
representation<font color="#E5E5E5"> of the gate</font><font color="#CCCCCC"> we'll see I</font>

933
00:40:13,520 --> 00:40:19,790
would say mostly yes<font color="#CCCCCC"> quill C is able to</font>

934
00:40:17,240 --> 00:40:22,819
<font color="#CCCCCC">operate with most of the gates that</font><font color="#E5E5E5"> show</font>

935
00:40:19,790 --> 00:40:25,730
up in literature rotation gates<font color="#E5E5E5"> you know</font>

936
00:40:22,820 --> 00:40:27,590
<font color="#CCCCCC">a big handful of to qubit gates</font><font color="#E5E5E5"> it's</font>

937
00:40:25,730 --> 00:40:29,510
relatively straightforward<font color="#CCCCCC"> to extend it</font>

938
00:40:27,590 --> 00:40:31,190
<font color="#CCCCCC">with more</font><font color="#E5E5E5"> two qubit gates</font><font color="#CCCCCC"> we had to do</font>

939
00:40:29,510 --> 00:40:32,810
that when<font color="#E5E5E5"> we were reporting it for the</font>

940
00:40:31,190 --> 00:40:34,820
IBM architecture we had to go<font color="#E5E5E5"> through a</font>

941
00:40:32,810 --> 00:40:37,759
<font color="#CCCCCC">process of making</font><font color="#E5E5E5"> sure at every step</font>

942
00:40:34,820 --> 00:40:40,580
<font color="#E5E5E5">along the</font><font color="#CCCCCC"> way we knew how to optimize</font>

943
00:40:37,760 --> 00:40:45,170
for<font color="#CCCCCC"> those gates</font><font color="#E5E5E5"> and so on</font><font color="#CCCCCC"> out of a box</font>

944
00:40:40,580 --> 00:40:48,920
<font color="#E5E5E5">you can't say</font><font color="#CCCCCC"> compile for my</font><font color="#E5E5E5"> wacky</font>

945
00:40:45,170 --> 00:40:51,589
<font color="#CCCCCC">two-qubit mullmer Sorensen</font><font color="#E5E5E5"> and don't do</font>

946
00:40:48,920 --> 00:40:53,450
any rotations do these you<font color="#E5E5E5"> know funky</font><font color="#CCCCCC"> on</font>

947
00:40:51,589 --> 00:40:53,930
<font color="#CCCCCC">the one</font><font color="#E5E5E5"> cubed operations or something</font>

948
00:40:53,450 --> 00:40:55,819
like<font color="#E5E5E5"> that</font>

949
00:40:53,930 --> 00:40:57,288
compiler would need to be<font color="#E5E5E5"> told a little</font>

950
00:40:55,819 --> 00:40:59,660
bit more about that<font color="#E5E5E5"> so out of the box</font>

951
00:40:57,289 --> 00:41:01,760
and won't get<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but if it falls into</font>

952
00:40:59,660 --> 00:41:04,549
any of the gates that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> in sort of the</font>

953
00:41:01,760 --> 00:41:07,490
<font color="#E5E5E5">general superconducting regime like any</font>

954
00:41:04,549 --> 00:41:11,500
of the I swap<font color="#E5E5E5"> parametric I swap all of</font>

955
00:41:07,490 --> 00:41:11,500
those things it does work out<font color="#E5E5E5"> of the box</font>

956
00:41:13,839 --> 00:41:39,828
by missing<font color="#E5E5E5"> anybody yep the question is</font>

957
00:41:35,599 --> 00:41:41,799
these quantum machine images<font color="#E5E5E5"> is it all</font>

958
00:41:39,829 --> 00:41:44,299
just<font color="#CCCCCC"> simulate or does have real back-end</font>

959
00:41:41,799 --> 00:41:45,230
<font color="#E5E5E5">actually the major point of it is the</font>

960
00:41:44,299 --> 00:41:47,660
real<font color="#E5E5E5"> back-end</font>

961
00:41:45,230 --> 00:41:49,700
<font color="#E5E5E5">the simulation is more of a</font><font color="#CCCCCC"> bonus</font><font color="#E5E5E5"> in</font>

962
00:41:47,660 --> 00:41:52,368
<font color="#E5E5E5">fact we</font><font color="#CCCCCC"> just load a</font><font color="#E5E5E5"> qvm onto the things</font>

963
00:41:49,700 --> 00:41:54,589
and<font color="#E5E5E5"> you can run the</font><font color="#CCCCCC"> qvm you know just</font>

964
00:41:52,369 --> 00:41:59,180
like a normal UNIX programming and what

965
00:41:54,589 --> 00:42:01,130
<font color="#E5E5E5">you can do is you know run it</font><font color="#CCCCCC"> as a</font>

966
00:41:59,180 --> 00:42:02,839
service and now you can you know connect

967
00:42:01,130 --> 00:42:03,950
up to<font color="#CCCCCC"> it so the simulation</font><font color="#E5E5E5"> is something</font>

968
00:42:02,839 --> 00:42:06,288
that you kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> get for free the real</font>

969
00:42:03,950 --> 00:42:09,319
point of<font color="#E5E5E5"> the QM is is so that these</font>

970
00:42:06,289 --> 00:42:11,210
virtual<font color="#CCCCCC"> machines can lay residents with</font>

971
00:42:09,319 --> 00:42:13,220
the quantum hardware<font color="#E5E5E5"> itself and you get</font>

972
00:42:11,210 --> 00:42:15,829
full<font color="#E5E5E5"> 100% control it's</font><font color="#CCCCCC"> not being</font>

973
00:42:13,220 --> 00:42:17,390
mediated<font color="#CCCCCC"> you're not in a</font><font color="#E5E5E5"> queue anything</font>

974
00:42:15,829 --> 00:42:21,250
like<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> get sort</font><font color="#CCCCCC"> of immediate</font>

975
00:42:17,390 --> 00:42:21,250
one-to-one access with the<font color="#E5E5E5"> machine</font>

976
00:42:25,780 --> 00:42:30,620
yep<font color="#CCCCCC"> so the question is how do we share</font>

977
00:42:28,820 --> 00:42:32,900
<font color="#E5E5E5">those</font><font color="#CCCCCC"> resources across</font><font color="#E5E5E5"> several machines</font>

978
00:42:30,620 --> 00:42:34,250
<font color="#E5E5E5">just coarse-grained booking you go we</font>

979
00:42:32,900 --> 00:42:36,350
<font color="#E5E5E5">have something called</font><font color="#CCCCCC"> QC and we have a</font>

980
00:42:34,250 --> 00:42:39,290
<font color="#CCCCCC">QC s</font><font color="#E5E5E5"> command line app which is</font><font color="#CCCCCC"> also open</font>

981
00:42:36,350 --> 00:42:41,330
source<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> do QC s</font><font color="#CCCCCC"> reserve and you</font>

982
00:42:39,290 --> 00:42:43,400
reserve a<font color="#E5E5E5"> block of time where</font><font color="#CCCCCC"> the</font>

983
00:42:41,330 --> 00:42:45,890
<font color="#CCCCCC">machine is yours in only</font><font color="#E5E5E5"> years and so if</font>

984
00:42:43,400 --> 00:42:48,560
it's<font color="#CCCCCC"> available you can get it we also</font>

985
00:42:45,890 --> 00:42:52,160
<font color="#E5E5E5">allow booking on what we call certain</font>

986
00:42:48,560 --> 00:42:54,259
sub lattices<font color="#CCCCCC"> I don't I</font><font color="#E5E5E5"> don't remember if</font>

987
00:42:52,160 --> 00:42:56,210
there's a little<font color="#E5E5E5"> cute image of a little</font>

988
00:42:54,260 --> 00:42:58,070
lattice yeah you can see this guy

989
00:42:56,210 --> 00:43:01,400
pulling a little lattice<font color="#CCCCCC"> quote-unquote</font>

990
00:42:58,070 --> 00:43:03,680
out from the<font color="#E5E5E5"> 16</font><font color="#CCCCCC"> Q ring</font><font color="#E5E5E5"> you can book</font>

991
00:43:01,400 --> 00:43:08,510
smaller chunks of the<font color="#CCCCCC"> Machine</font><font color="#E5E5E5"> and</font>

992
00:43:03,680 --> 00:43:28,149
<font color="#E5E5E5">operate on just</font><font color="#CCCCCC"> Lowe's I think that's it</font>

993
00:43:08,510 --> 00:43:29,930
<font color="#CCCCCC">for time right ok</font><font color="#E5E5E5"> so the question is</font>

994
00:43:28,150 --> 00:43:32,780
<font color="#CCCCCC">compilation' involves some type of</font>

995
00:43:29,930 --> 00:43:34,549
optimization<font color="#E5E5E5"> problem what heuristic</font><font color="#CCCCCC"> does</font>

996
00:43:32,780 --> 00:43:36,560
it<font color="#E5E5E5"> use or what different heuristics</font><font color="#CCCCCC"> they</font>

997
00:43:34,550 --> 00:43:39,230
use<font color="#E5E5E5"> I want to give it the snarky answer</font>

998
00:43:36,560 --> 00:43:41,270
and say read the source<font color="#E5E5E5"> now that it's</font>

999
00:43:39,230 --> 00:43:42,350
available<font color="#E5E5E5"> but it</font><font color="#CCCCCC"> actually uses</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font>

1000
00:43:41,270 --> 00:43:45,530
<font color="#CCCCCC">different things</font><font color="#E5E5E5"> so it depends exactly</font>

1001
00:43:42,350 --> 00:43:47,509
<font color="#CCCCCC">what</font><font color="#E5E5E5"> it's compiling</font><font color="#CCCCCC"> and so a good</font><font color="#E5E5E5"> amount</font>

1002
00:43:45,530 --> 00:43:50,330
of it<font color="#E5E5E5"> I probably can't scroll back</font><font color="#CCCCCC"> to it</font>

1003
00:43:47,510 --> 00:43:52,160
<font color="#CCCCCC">a good amount of it is doing</font><font color="#E5E5E5"> people</font>

1004
00:43:50,330 --> 00:43:54,140
reward rewriting so it actually<font color="#E5E5E5"> has a</font>

1005
00:43:52,160 --> 00:43:55,700
bunch of rewrite rules and this is

1006
00:43:54,140 --> 00:43:57,890
probably<font color="#CCCCCC"> the easiest</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> add</font><font color="#CCCCCC"> to the</font>

1007
00:43:55,700 --> 00:44:00,470
<font color="#E5E5E5">compiler so if anybody has like a cool</font>

1008
00:43:57,890 --> 00:44:01,790
circuit identity that they like<font color="#E5E5E5"> they can</font>

1009
00:44:00,470 --> 00:44:03,319
<font color="#CCCCCC">put in the compiled in the compiler will</font>

1010
00:44:01,790 --> 00:44:05,420
<font color="#CCCCCC">suddenly know about it and</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to</font>

1011
00:44:03,320 --> 00:44:07,090
<font color="#E5E5E5">apply it automatically so finding</font>

1012
00:44:05,420 --> 00:44:09,470
sequences of<font color="#CCCCCC"> gates</font><font color="#E5E5E5"> and shortening them</font>

1013
00:44:07,090 --> 00:44:11,180
sometimes it<font color="#E5E5E5"> just met it sometimes it</font>

1014
00:44:09,470 --> 00:44:13,250
<font color="#E5E5E5">just multiplies the gates out and just</font>

1015
00:44:11,180 --> 00:44:15,169
does an optimal<font color="#CCCCCC"> 2 Q compilation for</font>

1016
00:44:13,250 --> 00:44:16,970
instance if you have a bunch of<font color="#CCCCCC"> 2q</font><font color="#E5E5E5"> gates</font>

1017
00:44:15,170 --> 00:44:18,260
kind of in a row it's just<font color="#CCCCCC"> gonna</font>

1018
00:44:16,970 --> 00:44:22,850
<font color="#CCCCCC">multiply them</font><font color="#E5E5E5"> out and then do a</font>

1019
00:44:18,260 --> 00:44:24,580
reexpansion on them<font color="#CCCCCC"> and then lastly</font><font color="#E5E5E5"> in</font>

1020
00:44:22,850 --> 00:44:27,200
some<font color="#CCCCCC"> cases actually</font><font color="#E5E5E5"> has to do</font><font color="#CCCCCC"> like a</font>

1021
00:44:24,580 --> 00:44:29,950
stochastic gradient and not stochastic

1022
00:44:27,200 --> 00:44:32,720
just a<font color="#CCCCCC"> grading ascent or something for</font>

1023
00:44:29,950 --> 00:44:34,220
for certain<font color="#E5E5E5"> types of compilation but</font>

1024
00:44:32,720 --> 00:44:35,720
definitely not<font color="#CCCCCC"> enough time</font><font color="#E5E5E5"> to get into</font>

1025
00:44:34,220 --> 00:44:36,980
<font color="#CCCCCC">that lots and lots of</font><font color="#E5E5E5"> different</font>

1026
00:44:35,720 --> 00:44:41,470
optimization problems and<font color="#E5E5E5"> come</font>

1027
00:44:36,980 --> 00:44:41,470
<font color="#E5E5E5">Tyler certainly all right</font>

1028
00:44:41,680 --> 00:44:51,669
[Applause]

