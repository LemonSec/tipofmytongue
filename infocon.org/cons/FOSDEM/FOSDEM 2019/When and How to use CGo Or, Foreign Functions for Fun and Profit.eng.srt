1
00:00:05,899 --> 00:00:10,280
before I get<font color="#CCCCCC"> started</font><font color="#E5E5E5"> if you happen to</font>

2
00:00:08,000 --> 00:00:13,099
have<font color="#E5E5E5"> a laptop up there are a bunch of</font>

3
00:00:10,280 --> 00:00:14,450
code that<font color="#E5E5E5"> go along</font><font color="#CCCCCC"> with these slides</font><font color="#E5E5E5"> and</font>

4
00:00:13,099 --> 00:00:15,980
they are probably<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be more</font>

5
00:00:14,450 --> 00:00:18,710
informative than<font color="#E5E5E5"> the slides themselves</font>

6
00:00:15,980 --> 00:00:19,640
<font color="#CCCCCC">so if you want to just take</font><font color="#E5E5E5"> a look at</font>

7
00:00:18,710 --> 00:00:23,270
them<font color="#E5E5E5"> they're in the bottom right corner</font>

8
00:00:19,640 --> 00:00:25,460
as well<font color="#CCCCCC"> so like</font><font color="#E5E5E5"> I was introduced my name</font>

9
00:00:23,270 --> 00:00:27,800
<font color="#E5E5E5">is Liz most importantly I came from</font>

10
00:00:25,460 --> 00:00:29,570
<font color="#CCCCCC">Brooklyn</font><font color="#E5E5E5"> so if I seem kind of tired and</font>

11
00:00:27,800 --> 00:00:31,220
<font color="#E5E5E5">out</font><font color="#CCCCCC"> of it</font><font color="#E5E5E5"> that's because I am</font><font color="#CCCCCC"> very badly</font>

12
00:00:29,570 --> 00:00:34,580
jet-lagged

13
00:00:31,220 --> 00:00:37,339
I am a queer trans polyamorous woman I

14
00:00:34,580 --> 00:00:40,489
live with my<font color="#CCCCCC"> family and</font><font color="#E5E5E5"> my very cute dog</font>

15
00:00:37,339 --> 00:00:42,320
<font color="#CCCCCC">if you follow me on Twitter you won't</font>

16
00:00:40,489 --> 00:00:43,820
get anything about go but if<font color="#E5E5E5"> you want</font>

17
00:00:42,320 --> 00:00:47,890
pictures<font color="#E5E5E5"> of</font><font color="#CCCCCC"> dogs I can</font><font color="#E5E5E5"> absolutely</font>

18
00:00:43,820 --> 00:00:52,040
provide that<font color="#CCCCCC"> my current employer is</font>

19
00:00:47,890 --> 00:00:54,890
VMware a recent acquire of a company

20
00:00:52,040 --> 00:00:55,610
called<font color="#CCCCCC"> hefty oh and let's just</font><font color="#E5E5E5"> get this</font>

21
00:00:54,890 --> 00:00:58,940
<font color="#E5E5E5">out of the way</font>

22
00:00:55,610 --> 00:01:01,040
I don't like go that much but it seems

23
00:00:58,940 --> 00:01:02,540
like y'all don't really likes ego that

24
00:01:01,040 --> 00:01:08,179
<font color="#E5E5E5">much so I</font><font color="#CCCCCC"> think we're gonna get</font><font color="#E5E5E5"> along</font>

25
00:01:02,540 --> 00:01:11,330
<font color="#E5E5E5">just great</font><font color="#CCCCCC"> I work on coburn ADIZ I work</font>

26
00:01:08,180 --> 00:01:12,500
with<font color="#CCCCCC"> cig cluster</font><font color="#E5E5E5"> lifecycle</font><font color="#CCCCCC"> and a bunch</font>

27
00:01:11,330 --> 00:01:15,020
<font color="#CCCCCC">of projects</font><font color="#E5E5E5"> that won't mean</font><font color="#CCCCCC"> anything</font>

28
00:01:12,500 --> 00:01:19,940
very inside kubernetes baseball but<font color="#E5E5E5"> I do</font>

29
00:01:15,020 --> 00:01:22,580
go<font color="#E5E5E5"> a lot all day every day</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is</font>

30
00:01:19,940 --> 00:01:25,700
<font color="#E5E5E5">the most important part of this talk why</font>

31
00:01:22,580 --> 00:01:28,250
not see you go<font color="#E5E5E5"> I'm going to channel my</font>

32
00:01:25,700 --> 00:01:29,590
<font color="#E5E5E5">coworker Dave Chaney he has a very good</font>

33
00:01:28,250 --> 00:01:32,360
talk

34
00:01:29,590 --> 00:01:35,810
<font color="#E5E5E5">Sego is not go just go ahead and google</font>

35
00:01:32,360 --> 00:01:38,150
it but to summarize<font color="#CCCCCC"> its</font><font color="#E5E5E5"> make compilation</font>

36
00:01:35,810 --> 00:01:39,170
<font color="#E5E5E5">more complicated less portable no</font>

37
00:01:38,150 --> 00:01:42,350
<font color="#E5E5E5">cross-compilation</font>

38
00:01:39,170 --> 00:01:46,940
more seg faults<font color="#E5E5E5"> no back traces less</font>

39
00:01:42,350 --> 00:01:48,770
tooling<font color="#E5E5E5"> it's a mess</font><font color="#CCCCCC"> it's it's it's going</font>

40
00:01:46,940 --> 00:01:52,490
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be very</font><font color="#E5E5E5"> difficult to debug when it</font>

41
00:01:48,770 --> 00:01:55,908
goes<font color="#CCCCCC"> wrong and it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to so why</font>

42
00:01:52,490 --> 00:01:58,970
should you<font color="#CCCCCC"> use ego because you</font><font color="#E5E5E5"> have to</font>

43
00:01:55,909 --> 00:02:00,790
basically<font color="#E5E5E5"> sometimes sometimes it's</font>

44
00:01:58,970 --> 00:02:03,679
<font color="#CCCCCC">really the only</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get what</font><font color="#CCCCCC"> you want</font>

45
00:02:00,790 --> 00:02:06,130
<font color="#CCCCCC">I'm going to</font><font color="#E5E5E5"> start off with calling C</font>

46
00:02:03,680 --> 00:02:08,299
from doe which is a little bit<font color="#E5E5E5"> easier</font>

47
00:02:06,130 --> 00:02:12,769
<font color="#CCCCCC">show of hands how many people</font><font color="#E5E5E5"> actually</font>

48
00:02:08,299 --> 00:02:15,350
write C from time to time all right

49
00:02:12,770 --> 00:02:17,700
well not all of<font color="#E5E5E5"> you so the rest of you</font>

50
00:02:15,350 --> 00:02:22,620
can tune out for the<font color="#CCCCCC"> next</font><font color="#E5E5E5"> couple slides</font>

51
00:02:17,700 --> 00:02:26,339
this is a very basic<font color="#CCCCCC"> C function</font><font color="#E5E5E5"> on the</font>

52
00:02:22,620 --> 00:02:28,530
left is a header file<font color="#CCCCCC"> C separates the</font>

53
00:02:26,340 --> 00:02:30,810
<font color="#CCCCCC">declaration</font><font color="#E5E5E5"> of a function from the</font>

54
00:02:28,530 --> 00:02:33,350
actual<font color="#E5E5E5"> implementation think of it sort</font>

55
00:02:30,810 --> 00:02:36,570
of like<font color="#CCCCCC"> an interface but a lot clunkier</font>

56
00:02:33,350 --> 00:02:38,460
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> define a</font><font color="#CCCCCC"> function on the left and</font>

57
00:02:36,570 --> 00:02:40,200
then I actually<font color="#E5E5E5"> implement it on the</font>

58
00:02:38,460 --> 00:02:43,620
right<font color="#E5E5E5"> making</font><font color="#CCCCCC"> sure to include those</font>

59
00:02:40,200 --> 00:02:48,570
<font color="#CCCCCC">headers if you don't understand the</font>

60
00:02:43,620 --> 00:02:52,830
types unsigned integer<font color="#CCCCCC"> 32 bit underscore</font>

61
00:02:48,570 --> 00:02:55,140
type<font color="#E5E5E5"> everything in C back then they</font><font color="#CCCCCC"> had</font>

62
00:02:52,830 --> 00:02:56,880
to use<font color="#E5E5E5"> as few characters as possible</font><font color="#CCCCCC"> so</font>

63
00:02:55,140 --> 00:03:01,109
everything<font color="#E5E5E5"> is as confusing as you can</font>

64
00:02:56,880 --> 00:03:03,150
<font color="#CCCCCC">imagine it being</font><font color="#E5E5E5"> this is what makes you</font>

65
00:03:01,110 --> 00:03:06,470
know<font color="#E5E5E5"> you're dealing with C though if you</font>

66
00:03:03,150 --> 00:03:11,220
see import C somewhere in your stack

67
00:03:06,470 --> 00:03:17,180
<font color="#E5E5E5">you're dealing with C go</font><font color="#CCCCCC"> and it</font><font color="#E5E5E5"> uses</font>

68
00:03:11,220 --> 00:03:19,380
comments so that's not ideal<font color="#CCCCCC"> perhaps</font>

69
00:03:17,180 --> 00:03:20,940
<font color="#E5E5E5">you're just like oh it's</font><font color="#CCCCCC"> a comment I</font>

70
00:03:19,380 --> 00:03:22,680
could ignore<font color="#E5E5E5"> it no you have to pay</font><font color="#CCCCCC"> very</font>

71
00:03:20,940 --> 00:03:24,300
close attention to<font color="#E5E5E5"> it and if you get the</font>

72
00:03:22,680 --> 00:03:26,760
space is wrong it's probably<font color="#E5E5E5"> not going</font>

73
00:03:24,300 --> 00:03:29,640
to<font color="#E5E5E5"> work and it has to be exactly before</font>

74
00:03:26,760 --> 00:03:31,799
<font color="#E5E5E5">import C otherwise it won't work</font><font color="#CCCCCC"> but</font>

75
00:03:29,640 --> 00:03:36,089
this<font color="#E5E5E5"> is basically how</font><font color="#CCCCCC"> it works</font>

76
00:03:31,800 --> 00:03:40,980
you'll notice that<font color="#CCCCCC"> ad</font><font color="#E5E5E5"> 1 does not start</font>

77
00:03:36,090 --> 00:03:44,250
with<font color="#CCCCCC"> a capital letter C</font><font color="#E5E5E5"> is a not a real</font>

78
00:03:40,980 --> 00:03:46,950
module so it can break rules like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> C</font>

79
00:03:44,250 --> 00:03:48,840
is just<font color="#E5E5E5"> a sort of pseudo module that</font>

80
00:03:46,950 --> 00:03:50,940
says hey I<font color="#E5E5E5"> want to call out</font><font color="#CCCCCC"> from here</font>

81
00:03:48,840 --> 00:03:53,820
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is what the code</font><font color="#E5E5E5"> itself looks like</font>

82
00:03:50,940 --> 00:03:57,590
I'm<font color="#E5E5E5"> sorry it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> small but the actual</font>

83
00:03:53,820 --> 00:03:59,970
code is on the bottom<font color="#E5E5E5"> of the slides</font>

84
00:03:57,590 --> 00:04:02,520
<font color="#CCCCCC">important thing to know here</font><font color="#E5E5E5"> the import</font>

85
00:03:59,970 --> 00:04:05,190
<font color="#E5E5E5">C always gets its own line no</font><font color="#CCCCCC"> matter how</font>

86
00:04:02,520 --> 00:04:07,980
many<font color="#E5E5E5"> other imports you have because it's</font>

87
00:04:05,190 --> 00:04:12,750
not<font color="#E5E5E5"> actually an import it's being used</font>

88
00:04:07,980 --> 00:04:17,130
by the parser<font color="#CCCCCC"> so basically it's just a</font>

89
00:04:12,750 --> 00:04:20,850
huge mess<font color="#CCCCCC"> so if I run</font><font color="#E5E5E5"> this I'm going to</font>

90
00:04:17,130 --> 00:04:22,469
get an error message<font color="#CCCCCC"> everybody's always</font>

91
00:04:20,850 --> 00:04:23,910
really disappointed when<font color="#E5E5E5"> I don't do live</font>

92
00:04:22,470 --> 00:04:26,340
demos<font color="#E5E5E5"> because they don't get to see me</font>

93
00:04:23,910 --> 00:04:28,820
screw<font color="#CCCCCC"> up so I've simulated demo syndrome</font>

94
00:04:26,340 --> 00:04:28,820
for you

95
00:04:28,870 --> 00:04:31,150
so you're going to<font color="#E5E5E5"> need to do a cast</font>

96
00:04:30,430 --> 00:04:33,670
here

97
00:04:31,150 --> 00:04:35,830
that's that type<font color="#E5E5E5"> I'm Erica</font><font color="#CCCCCC"> I mentioned</font>

98
00:04:33,670 --> 00:04:37,660
before<font color="#CCCCCC"> even though they're both integer</font>

99
00:04:35,830 --> 00:04:40,810
types there is<font color="#E5E5E5"> no coercion you're going</font>

100
00:04:37,660 --> 00:04:44,080
to have to<font color="#CCCCCC"> coerce</font><font color="#E5E5E5"> everything yourself</font><font color="#CCCCCC"> so</font>

101
00:04:40,810 --> 00:04:46,030
here<font color="#E5E5E5"> we go 10 plus 1 is 11</font><font color="#CCCCCC"> it's a very</font>

102
00:04:44,080 --> 00:04:47,590
very difficult function there's no way

103
00:04:46,030 --> 00:04:50,700
we could have<font color="#E5E5E5"> implemented this</font><font color="#CCCCCC"> in native</font>

104
00:04:47,590 --> 00:04:53,770
go we had to use CEO it was the only<font color="#E5E5E5"> way</font>

105
00:04:50,700 --> 00:04:57,250
<font color="#CCCCCC">and</font><font color="#E5E5E5"> now we're gonna go back into call</font>

106
00:04:53,770 --> 00:04:59,580
<font color="#E5E5E5">and go from</font><font color="#CCCCCC"> see this is probably</font><font color="#E5E5E5"> less</font>

107
00:04:57,250 --> 00:05:02,290
<font color="#CCCCCC">likely to</font><font color="#E5E5E5"> come</font><font color="#CCCCCC"> up for</font><font color="#E5E5E5"> go programmers</font>

108
00:04:59,580 --> 00:05:04,659
<font color="#CCCCCC">unless you're doing something kind</font><font color="#E5E5E5"> of</font>

109
00:05:02,290 --> 00:05:07,180
<font color="#E5E5E5">weird</font><font color="#CCCCCC"> I do some things that are kind</font><font color="#E5E5E5"> of</font>

110
00:05:04,660 --> 00:05:09,550
weird so I have to deal with<font color="#CCCCCC"> this and</font>

111
00:05:07,180 --> 00:05:13,180
I'm just<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to start out</font><font color="#CCCCCC"> with the</font>

112
00:05:09,550 --> 00:05:16,170
export<font color="#E5E5E5"> function at the</font><font color="#CCCCCC"> top</font><font color="#E5E5E5"> export means</font>

113
00:05:13,180 --> 00:05:20,350
<font color="#E5E5E5">I am</font><font color="#CCCCCC"> I want this to be callable</font>

114
00:05:16,170 --> 00:05:22,450
externally by default<font color="#E5E5E5"> nothing from go</font>

115
00:05:20,350 --> 00:05:24,940
code will be callable by an external<font color="#CCCCCC"> see</font>

116
00:05:22,450 --> 00:05:27,460
library it is not a<font color="#CCCCCC"> well-behaved</font><font color="#E5E5E5"> citizen</font>

117
00:05:24,940 --> 00:05:30,310
in<font color="#CCCCCC"> that sense so I'm</font><font color="#E5E5E5"> going to export</font>

118
00:05:27,460 --> 00:05:33,039
<font color="#E5E5E5">this side note if you</font><font color="#CCCCCC"> have an export</font>

119
00:05:30,310 --> 00:05:35,590
statement<font color="#CCCCCC"> you can't have certain kinds</font>

120
00:05:33,040 --> 00:05:37,510
<font color="#E5E5E5">of comments</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> wearing your file</font>

121
00:05:35,590 --> 00:05:38,560
because it's compiled into a header and

122
00:05:37,510 --> 00:05:40,360
<font color="#E5E5E5">there will be a bunch of weird error</font>

123
00:05:38,560 --> 00:05:45,340
messages<font color="#CCCCCC"> and you won't understand so</font>

124
00:05:40,360 --> 00:05:47,410
keep your<font color="#E5E5E5"> file separate here</font><font color="#CCCCCC"> this is not</font>

125
00:05:45,340 --> 00:05:51,010
the standard<font color="#E5E5E5"> string that you might</font>

126
00:05:47,410 --> 00:05:54,460
expect<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a C string and yes there</font>

127
00:05:51,010 --> 00:05:57,940
<font color="#CCCCCC">is a difference</font><font color="#E5E5E5"> so this is a string in C</font>

128
00:05:54,460 --> 00:06:00,549
it's a series of<font color="#E5E5E5"> bytes terminated by a</font>

129
00:05:57,940 --> 00:06:05,230
null byte which is not the character<font color="#E5E5E5"> 0</font>

130
00:06:00,550 --> 00:06:07,450
it is actually<font color="#E5E5E5"> just 0 0 as bytes and</font>

131
00:06:05,230 --> 00:06:13,840
this is similar<font color="#E5E5E5"> to</font><font color="#CCCCCC"> how it works in go</font>

132
00:06:07,450 --> 00:06:16,060
but not quite<font color="#CCCCCC"> go</font><font color="#E5E5E5"> stores a length and C</font>

133
00:06:13,840 --> 00:06:18,340
just<font color="#CCCCCC"> says go until you find the end of</font>

134
00:06:16,060 --> 00:06:20,200
it if you've<font color="#E5E5E5"> ever had a weird C program</font>

135
00:06:18,340 --> 00:06:21,549
that just<font color="#E5E5E5"> went off the rails</font><font color="#CCCCCC"> it's</font>

136
00:06:20,200 --> 00:06:23,260
because you forgot<font color="#CCCCCC"> to include the</font><font color="#E5E5E5"> no</font>

137
00:06:21,550 --> 00:06:25,390
<font color="#CCCCCC">byte and it just kept going</font><font color="#E5E5E5"> forever</font>

138
00:06:23,260 --> 00:06:27,310
<font color="#E5E5E5">there are advantages to both the main</font>

139
00:06:25,390 --> 00:06:30,610
advantage to the C approaches that<font color="#E5E5E5"> it is</font>

140
00:06:27,310 --> 00:06:32,200
smaller and that matters<font color="#CCCCCC"> sometimes the</font>

141
00:06:30,610 --> 00:06:35,100
main advantage to the go<font color="#E5E5E5"> approach is</font>

142
00:06:32,200 --> 00:06:38,169
that<font color="#E5E5E5"> it doesn't break all of the time so</font>

143
00:06:35,100 --> 00:06:39,820
<font color="#CCCCCC">this function takes</font><font color="#E5E5E5"> that character and</font>

144
00:06:38,169 --> 00:06:40,390
it turns it<font color="#CCCCCC"> into a string that go knows</font>

145
00:06:39,820 --> 00:06:43,480
how to me

146
00:06:40,390 --> 00:06:46,510
<font color="#CCCCCC">callate and then we can put all of this</font>

147
00:06:43,480 --> 00:06:48,640
back together again<font color="#CCCCCC"> if you want to</font>

148
00:06:46,510 --> 00:06:50,590
export functions<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to call the</font>

149
00:06:48,640 --> 00:06:53,039
<font color="#E5E5E5">package main even if it's not actually</font>

150
00:06:50,590 --> 00:06:55,390
<font color="#E5E5E5">main you have to have that little main</font>

151
00:06:53,040 --> 00:06:57,700
stands at the bottom<font color="#E5E5E5"> even though it</font>

152
00:06:55,390 --> 00:07:01,419
doesn't<font color="#E5E5E5"> actually do something I'm sorry</font>

153
00:06:57,700 --> 00:07:02,740
<font color="#CCCCCC">it wasn't my fault now</font>

154
00:07:01,420 --> 00:07:04,780
here's what it's going<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> like when</font>

155
00:07:02,740 --> 00:07:07,150
we<font color="#CCCCCC"> actually use it you remember those</font>

156
00:07:04,780 --> 00:07:09,640
header files I told you about<font color="#E5E5E5"> with with</font>

157
00:07:07,150 --> 00:07:11,830
<font color="#E5E5E5">C well we're going to define</font><font color="#CCCCCC"> our own</font>

158
00:07:09,640 --> 00:07:14,860
header files now let's take a look at it

159
00:07:11,830 --> 00:07:16,479
oh there's and there's some yeah let's

160
00:07:14,860 --> 00:07:20,230
don't worry about<font color="#E5E5E5"> it</font>

161
00:07:16,480 --> 00:07:22,240
that's it's technically text but<font color="#E5E5E5"> treat</font>

162
00:07:20,230 --> 00:07:24,460
<font color="#E5E5E5">it as a binary file don't don't look at</font>

163
00:07:22,240 --> 00:07:26,520
<font color="#CCCCCC">it I'm</font><font color="#E5E5E5"> going to give you a brief</font>

164
00:07:24,460 --> 00:07:28,989
introduction<font color="#E5E5E5"> to make files because</font>

165
00:07:26,520 --> 00:07:32,560
you're not going to be able to avoid it

166
00:07:28,990 --> 00:07:36,250
<font color="#CCCCCC">I'm sorry so this is sort</font><font color="#E5E5E5"> of a typical</font>

167
00:07:32,560 --> 00:07:39,490
make file<font color="#E5E5E5"> we've got outputs on the Left</font>

168
00:07:36,250 --> 00:07:42,040
inputs on the<font color="#E5E5E5"> right that has to be a tab</font>

169
00:07:39,490 --> 00:07:43,570
character<font color="#CCCCCC"> which is harder to explain to</font>

170
00:07:42,040 --> 00:07:44,740
<font color="#E5E5E5">Python people I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> you go people</font>

171
00:07:43,570 --> 00:07:49,990
<font color="#E5E5E5">already know that you should be using</font>

172
00:07:44,740 --> 00:07:52,570
<font color="#E5E5E5">tabs</font><font color="#CCCCCC"> and there's a bunch</font><font color="#E5E5E5"> of weird weird</font>

173
00:07:49,990 --> 00:07:55,120
symbols there which are entirely under

174
00:07:52,570 --> 00:07:58,599
<font color="#E5E5E5">global you're just going to have to</font>

175
00:07:55,120 --> 00:08:01,240
<font color="#CCCCCC">trust</font><font color="#E5E5E5"> me that dollars at means the</font><font color="#CCCCCC"> app</font>

176
00:07:58,600 --> 00:08:03,220
sign which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the target that I'm</font>

177
00:08:01,240 --> 00:08:06,820
pointing<font color="#CCCCCC"> at which is output</font><font color="#E5E5E5"> in this case</font>

178
00:08:03,220 --> 00:08:10,000
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> other one means all of</font><font color="#E5E5E5"> the input</font>

179
00:08:06,820 --> 00:08:11,500
files<font color="#E5E5E5"> I just remember those two and I</font>

180
00:08:10,000 --> 00:08:15,130
swap them<font color="#E5E5E5"> around until</font><font color="#CCCCCC"> my program</font>

181
00:08:11,500 --> 00:08:18,790
compiles<font color="#E5E5E5"> so this this is what make is</font>

182
00:08:15,130 --> 00:08:20,310
<font color="#E5E5E5">going to turn it into now we've got a</font>

183
00:08:18,790 --> 00:08:24,790
couple<font color="#CCCCCC"> different steps that</font><font color="#E5E5E5"> we need</font>

184
00:08:20,310 --> 00:08:26,740
<font color="#CCCCCC">we're going to first create</font><font color="#E5E5E5"> those header</font>

185
00:08:24,790 --> 00:08:28,840
files because we need those header files

186
00:08:26,740 --> 00:08:34,270
<font color="#E5E5E5">so that we can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> call this</font>

187
00:08:28,840 --> 00:08:36,220
function<font color="#E5E5E5"> from C we</font><font color="#CCCCCC"> use the go tool to</font>

188
00:08:34,270 --> 00:08:38,679
export header there's a bunch of really

189
00:08:36,220 --> 00:08:40,420
<font color="#E5E5E5">good documentation on this but this is</font>

190
00:08:38,679 --> 00:08:41,620
<font color="#E5E5E5">sort of what</font><font color="#CCCCCC"> to vaguely</font><font color="#E5E5E5"> Google when</font>

191
00:08:40,419 --> 00:08:45,040
you're<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> remember how you do</font>

192
00:08:41,620 --> 00:08:47,620
this we built<font color="#CCCCCC"> AC archive which is</font>

193
00:08:45,040 --> 00:08:50,689
<font color="#CCCCCC">basically goes way of saying this</font><font color="#E5E5E5"> is</font>

194
00:08:47,620 --> 00:08:55,040
code<font color="#CCCCCC"> that looks kind of like C</font>

195
00:08:50,690 --> 00:08:56,540
so see files can use it<font color="#E5E5E5"> when you compile</font>

196
00:08:55,040 --> 00:08:58,490
<font color="#E5E5E5">everything together you just</font><font color="#CCCCCC"> sort of</font>

197
00:08:56,540 --> 00:09:00,079
like throw all of<font color="#E5E5E5"> the things on the</font>

198
00:08:58,490 --> 00:09:02,930
command line<font color="#E5E5E5"> until a compiles all</font>

199
00:09:00,080 --> 00:09:05,930
together<font color="#E5E5E5"> and here is how it</font><font color="#CCCCCC"> actually</font>

200
00:09:02,930 --> 00:09:09,410
works<font color="#CCCCCC"> so we have a binary called go from</font>

201
00:09:05,930 --> 00:09:12,170
<font color="#E5E5E5">C we take in main dot C which I showed</font>

202
00:09:09,410 --> 00:09:15,439
<font color="#CCCCCC">you earlier</font><font color="#E5E5E5"> the complicated header file</font>

203
00:09:12,170 --> 00:09:17,870
and<font color="#CCCCCC"> that archive</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> C code of go code</font>

204
00:09:15,440 --> 00:09:21,350
that we<font color="#E5E5E5"> created</font><font color="#CCCCCC"> we throw it all together</font>

205
00:09:17,870 --> 00:09:23,899
<font color="#E5E5E5">and we</font><font color="#CCCCCC"> add pthread on the</font><font color="#E5E5E5"> end because</font>

206
00:09:21,350 --> 00:09:25,820
<font color="#CCCCCC">you need the pthread</font><font color="#E5E5E5"> library and it's</font>

207
00:09:23,899 --> 00:09:29,270
not<font color="#E5E5E5"> included in C go expert for some</font>

208
00:09:25,820 --> 00:09:31,580
reason<font color="#CCCCCC"> just it's there you need</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> do it</font>

209
00:09:29,270 --> 00:09:34,939
<font color="#E5E5E5">otherwise your code won't compile</font><font color="#CCCCCC"> it's</font>

210
00:09:31,580 --> 00:09:37,190
how programming<font color="#E5E5E5"> is sometimes</font><font color="#CCCCCC"> if I do</font>

211
00:09:34,940 --> 00:09:39,050
make<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going to compile all</font><font color="#CCCCCC"> of these</font>

212
00:09:37,190 --> 00:09:41,029
things together<font color="#E5E5E5"> you can see it's</font>

213
00:09:39,050 --> 00:09:44,870
expanded all of those weird symbols<font color="#E5E5E5"> that</font>

214
00:09:41,029 --> 00:09:48,670
I used<font color="#E5E5E5"> everything looks nice perfect</font><font color="#CCCCCC"> hey</font>

215
00:09:44,870 --> 00:09:51,860
<font color="#E5E5E5">that's you say hello to</font><font color="#CCCCCC"> my fake code</font>

216
00:09:48,670 --> 00:09:54,140
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> now we get into</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> very</font>

217
00:09:51,860 --> 00:09:59,330
exciting which is pointers<font color="#E5E5E5"> and memory</font>

218
00:09:54,140 --> 00:10:01,490
<font color="#CCCCCC">now go looks a lot like</font><font color="#E5E5E5"> C but it has a</font>

219
00:09:59,330 --> 00:10:02,930
lot of very big differences<font color="#E5E5E5"> but the</font>

220
00:10:01,490 --> 00:10:05,810
biggest<font color="#CCCCCC"> difference is that</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> garbage</font>

221
00:10:02,930 --> 00:10:08,180
collected<font color="#E5E5E5"> so when you create a new value</font>

222
00:10:05,810 --> 00:10:10,250
in go you<font color="#E5E5E5"> can assume</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it will be</font>

223
00:10:08,180 --> 00:10:13,370
<font color="#CCCCCC">available until</font><font color="#E5E5E5"> you don't need it</font>

224
00:10:10,250 --> 00:10:14,930
<font color="#E5E5E5">anymore with C you basically have to</font>

225
00:10:13,370 --> 00:10:17,270
assume the opposite<font color="#E5E5E5"> you have to assume</font>

226
00:10:14,930 --> 00:10:18,979
it's already<font color="#E5E5E5"> not available unless</font><font color="#CCCCCC"> you</font>

227
00:10:17,270 --> 00:10:20,540
want it<font color="#E5E5E5"> to</font><font color="#CCCCCC"> not be available in which you</font>

228
00:10:18,980 --> 00:10:22,910
which case you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> assume it's</font>

229
00:10:20,540 --> 00:10:24,529
<font color="#CCCCCC">already available and keep very careful</font>

230
00:10:22,910 --> 00:10:26,420
track<font color="#E5E5E5"> of this all in your head and</font>

231
00:10:24,529 --> 00:10:29,900
<font color="#E5E5E5">there's a reason we don't</font><font color="#CCCCCC"> write C</font>

232
00:10:26,420 --> 00:10:33,620
anymore well some of<font color="#E5E5E5"> us do but there's a</font>

233
00:10:29,900 --> 00:10:36,079
reason we prefer<font color="#CCCCCC"> not to</font><font color="#E5E5E5"> so this is what</font>

234
00:10:33,620 --> 00:10:37,850
<font color="#E5E5E5">allocating something in go looks like</font>

235
00:10:36,079 --> 00:10:40,579
<font color="#E5E5E5">you all</font><font color="#CCCCCC"> know how</font><font color="#E5E5E5"> to do this this is what</font>

236
00:10:37,850 --> 00:10:42,410
allocating in and C looks like<font color="#E5E5E5"> somebody</font>

237
00:10:40,579 --> 00:10:44,599
once told me<font color="#CCCCCC"> that malloc was the Swiss</font>

238
00:10:42,410 --> 00:10:46,939
Army<font color="#CCCCCC"> knife of C commands</font><font color="#E5E5E5"> and that's</font>

239
00:10:44,600 --> 00:10:49,490
always how I remember<font color="#E5E5E5"> that function I</font>

240
00:10:46,940 --> 00:10:54,020
don't think that's true<font color="#CCCCCC"> and</font><font color="#E5E5E5"> here's how</font>

241
00:10:49,490 --> 00:10:56,029
<font color="#E5E5E5">you free it at the end we use point and</font>

242
00:10:54,020 --> 00:10:57,770
it<font color="#E5E5E5"> goes out of scope and</font><font color="#CCCCCC"> goes just</font><font color="#E5E5E5"> like</font>

243
00:10:56,029 --> 00:11:01,430
<font color="#E5E5E5">ah we don't need that</font><font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> we will</font>

244
00:10:57,770 --> 00:11:03,610
get rid of it here we use<font color="#CCCCCC"> the point</font><font color="#E5E5E5"> and</font>

245
00:11:01,430 --> 00:11:05,920
then we call free with it

246
00:11:03,610 --> 00:11:09,220
if that free points to<font color="#E5E5E5"> something that</font>

247
00:11:05,920 --> 00:11:12,279
isn't<font color="#E5E5E5"> a valid pointer</font><font color="#CCCCCC"> who knows what'll</font>

248
00:11:09,220 --> 00:11:14,829
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> it's undefined if you have</font>

249
00:11:12,279 --> 00:11:15,339
<font color="#E5E5E5">already called free on it maybe nothing</font>

250
00:11:14,829 --> 00:11:17,859
will<font color="#E5E5E5"> happen</font>

251
00:11:15,339 --> 00:11:20,050
maybe it'll sag fault<font color="#E5E5E5"> if somebody called</font>

252
00:11:17,860 --> 00:11:22,810
free before<font color="#CCCCCC"> they passed it to you</font><font color="#E5E5E5"> the</font>

253
00:11:20,050 --> 00:11:26,349
<font color="#E5E5E5">the code up there</font><font color="#CCCCCC"> might actually seg</font>

254
00:11:22,810 --> 00:11:31,089
fault<font color="#CCCCCC"> when you action</font><font color="#E5E5E5"> when you try to</font>

255
00:11:26,350 --> 00:11:35,440
get the things sorry sorry<font color="#CCCCCC"> bad at</font>

256
00:11:31,089 --> 00:11:39,790
cameras<font color="#E5E5E5"> what happens if you</font><font color="#CCCCCC"> forget to</font>

257
00:11:35,440 --> 00:11:41,410
call free uh nothing<font color="#E5E5E5"> it looks fine but</font>

258
00:11:39,790 --> 00:11:43,480
<font color="#CCCCCC">then you have to</font><font color="#E5E5E5"> run this horrible</font>

259
00:11:41,410 --> 00:11:45,279
program called<font color="#E5E5E5"> valgrind which is going</font>

260
00:11:43,480 --> 00:11:46,810
<font color="#CCCCCC">to tell</font><font color="#E5E5E5"> you whether or not you've</font>

261
00:11:45,279 --> 00:11:48,339
accidentally made a mistake somewhere

262
00:11:46,810 --> 00:11:52,000
<font color="#CCCCCC">and it's going to</font><font color="#E5E5E5"> have all</font><font color="#CCCCCC"> this output</font>

263
00:11:48,339 --> 00:11:53,529
and it's<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to say oh you you failed</font>

264
00:11:52,000 --> 00:11:56,230
to free something<font color="#E5E5E5"> up and it's pretty</font>

265
00:11:53,529 --> 00:11:58,060
easy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> track</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> in your tiny little</font>

266
00:11:56,230 --> 00:11:58,959
program but once things<font color="#CCCCCC"> get a little</font><font color="#E5E5E5"> bit</font>

267
00:11:58,060 --> 00:12:02,050
bigger<font color="#CCCCCC"> it's going</font><font color="#E5E5E5"> to get more</font>

268
00:11:58,959 --> 00:12:04,000
complicated<font color="#CCCCCC"> that's why you used to have</font>

269
00:12:02,050 --> 00:12:06,250
<font color="#CCCCCC">to restart your</font><font color="#E5E5E5"> computer every couple of</font>

270
00:12:04,000 --> 00:12:11,410
<font color="#E5E5E5">days because it like leaked memory so</font>

271
00:12:06,250 --> 00:12:14,019
badly<font color="#CCCCCC"> right very different approaches</font><font color="#E5E5E5"> to</font>

272
00:12:11,410 --> 00:12:16,149
pointers<font color="#E5E5E5"> very different approaches to</font>

273
00:12:14,019 --> 00:12:20,100
<font color="#E5E5E5">memory management what happens when you</font>

274
00:12:16,149 --> 00:12:20,100
need<font color="#CCCCCC"> to pass things between</font><font color="#E5E5E5"> those two</font>

275
00:12:20,370 --> 00:12:27,670
<font color="#CCCCCC">some things are ok if you pass a go</font>

276
00:12:23,140 --> 00:12:31,000
pointer to<font color="#E5E5E5"> see and only use it while you</font>

277
00:12:27,670 --> 00:12:33,310
<font color="#CCCCCC">are in the C code that is fine</font><font color="#E5E5E5"> same if</font>

278
00:12:31,000 --> 00:12:36,850
you pass a C pointer to go<font color="#E5E5E5"> if you only</font>

279
00:12:33,310 --> 00:12:40,000
<font color="#E5E5E5">use it briefly that's fine if you</font><font color="#CCCCCC"> schoo</font>

280
00:12:36,850 --> 00:12:42,579
store<font color="#CCCCCC"> a go pointer in C memory you can</font>

281
00:12:40,000 --> 00:12:44,680
do that but<font color="#CCCCCC"> only until you</font><font color="#E5E5E5"> return and</font>

282
00:12:42,579 --> 00:12:46,689
there's a bunch<font color="#E5E5E5"> of weird special cases</font>

283
00:12:44,680 --> 00:12:50,939
and<font color="#CCCCCC"> the documents</font><font color="#E5E5E5"> for Java</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Darwin</font>

284
00:12:46,690 --> 00:12:54,220
and invalid is basically everything<font color="#CCCCCC"> else</font>

285
00:12:50,940 --> 00:12:57,070
<font color="#CCCCCC">just be</font><font color="#E5E5E5"> careful and read</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Segoe</font>

286
00:12:54,220 --> 00:13:00,040
documentation very carefully I read it

287
00:12:57,070 --> 00:13:02,560
10 or<font color="#E5E5E5"> 20</font><font color="#CCCCCC"> times before I I gave up</font>

288
00:13:00,040 --> 00:13:04,769
<font color="#E5E5E5">summarized it as best I can and issued</font>

289
00:13:02,560 --> 00:13:07,479
<font color="#CCCCCC">this stern warning to all of you now</font>

290
00:13:04,769 --> 00:13:08,380
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> all been kind of trivial how</font>

291
00:13:07,480 --> 00:13:12,670
about something a<font color="#CCCCCC"> little bit more</font>

292
00:13:08,380 --> 00:13:14,980
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> about a little magic who</font>

293
00:13:12,670 --> 00:13:17,349
likes<font color="#E5E5E5"> using imagemagick</font><font color="#CCCCCC"> it's everybody's</font>

294
00:13:14,980 --> 00:13:23,889
favorite library to use right

295
00:13:17,350 --> 00:13:27,670
this is an<font color="#E5E5E5"> example very simple</font><font color="#CCCCCC"> see image</font>

296
00:13:23,889 --> 00:13:31,930
<font color="#CCCCCC">magic program it takes in</font><font color="#E5E5E5"> that wizard</font>

297
00:13:27,670 --> 00:13:35,439
friend<font color="#E5E5E5"> which is defined as logo : and it</font>

298
00:13:31,930 --> 00:13:38,109
outputs it<font color="#E5E5E5"> to logo</font><font color="#CCCCCC"> JPEG and that's all</font>

299
00:13:35,439 --> 00:13:43,599
it<font color="#E5E5E5"> does and just</font><font color="#CCCCCC"> doing that takes like</font>

300
00:13:38,110 --> 00:13:46,389
15 lines of<font color="#E5E5E5"> C so how do we do this here</font>

301
00:13:43,600 --> 00:13:49,600
<font color="#CCCCCC">uh</font><font color="#E5E5E5"> well it's actually not too bad to</font>

302
00:13:46,389 --> 00:13:51,639
translate this<font color="#CCCCCC"> you put C dot in front of</font>

303
00:13:49,600 --> 00:13:55,930
all of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> functions before you can</font>

304
00:13:51,639 --> 00:13:58,569
actually use Oh what's this package

305
00:13:55,930 --> 00:14:00,878
config<font color="#E5E5E5"> another wonderful</font><font color="#CCCCCC"> thing that</font>

306
00:13:58,569 --> 00:14:03,670
<font color="#E5E5E5">people very</font><font color="#CCCCCC"> much miss</font><font color="#E5E5E5"> about having to</font>

307
00:14:00,879 --> 00:14:06,399
deal with<font color="#CCCCCC"> C</font><font color="#E5E5E5"> what is package config well</font>

308
00:14:03,670 --> 00:14:10,000
you need a lot of<font color="#E5E5E5"> arguments</font><font color="#CCCCCC"> to the C</font>

309
00:14:06,399 --> 00:14:12,610
compiler<font color="#E5E5E5"> to get image magic to work you</font>

310
00:14:10,000 --> 00:14:14,949
need all of these otherwise it's going

311
00:14:12,610 --> 00:14:19,449
to<font color="#E5E5E5"> yell at you and rather than having to</font>

312
00:14:14,949 --> 00:14:21,699
<font color="#E5E5E5">copy them in specifically you</font><font color="#CCCCCC"> can if you</font>

313
00:14:19,449 --> 00:14:23,319
want to this isn't all of<font color="#E5E5E5"> them I left</font>

314
00:14:21,699 --> 00:14:26,410
out some of the defines and the compiler

315
00:14:23,319 --> 00:14:29,170
<font color="#E5E5E5">will work but it will yell</font><font color="#CCCCCC"> at you or you</font>

316
00:14:26,410 --> 00:14:32,230
could<font color="#CCCCCC"> just use</font><font color="#E5E5E5"> the package config it's</font>

317
00:14:29,170 --> 00:14:34,719
much<font color="#E5E5E5"> easier assuming it works if it</font>

318
00:14:32,230 --> 00:14:38,459
doesn't<font color="#CCCCCC"> I I</font><font color="#E5E5E5"> don't know what to do</font>

319
00:14:34,720 --> 00:14:40,949
probably somebody in<font color="#E5E5E5"> here does and</font>

320
00:14:38,459 --> 00:14:44,079
<font color="#CCCCCC">there's this</font><font color="#E5E5E5"> little handy defer function</font>

321
00:14:40,949 --> 00:14:47,859
this<font color="#E5E5E5"> is you can use some of</font><font color="#CCCCCC"> these nifty</font>

322
00:14:44,079 --> 00:14:50,410
year-ago features when you're doing<font color="#E5E5E5"> C</font><font color="#CCCCCC"> so</font>

323
00:14:47,860 --> 00:14:51,759
rather<font color="#E5E5E5"> than having to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> twos</font><font color="#E5E5E5"> or</font>

324
00:14:50,410 --> 00:14:53,319
jumps<font color="#E5E5E5"> or something to make sure your</font>

325
00:14:51,759 --> 00:14:56,050
code bit cleans up just throw it in a

326
00:14:53,319 --> 00:15:00,040
<font color="#E5E5E5">defer we're making things better already</font>

327
00:14:56,050 --> 00:15:03,099
and the full demo is on the github page

328
00:15:00,040 --> 00:15:04,319
which I keep<font color="#E5E5E5"> throwing to now we're gonna</font>

329
00:15:03,100 --> 00:15:08,470
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about something</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> more fun</font>

330
00:15:04,319 --> 00:15:12,339
<font color="#E5E5E5">dynamic libraries</font><font color="#CCCCCC"> who's heard somebody</font>

331
00:15:08,470 --> 00:15:17,079
say go binaries are static who knows

332
00:15:12,339 --> 00:15:20,199
what<font color="#CCCCCC"> that means this is a this is</font><font color="#E5E5E5"> a</font>

333
00:15:17,079 --> 00:15:22,870
specific<font color="#CCCCCC"> crowd I think</font><font color="#E5E5E5"> so dynamic</font>

334
00:15:20,199 --> 00:15:24,519
libraries are they have different

335
00:15:22,870 --> 00:15:26,769
extensions on different operating

336
00:15:24,519 --> 00:15:28,269
systems<font color="#E5E5E5"> but</font><font color="#CCCCCC"> basically they're a</font><font color="#E5E5E5"> bunch of</font>

337
00:15:26,769 --> 00:15:29,860
code<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is available for other</font>

338
00:15:28,269 --> 00:15:32,470
programs to use

339
00:15:29,860 --> 00:15:34,030
and there are<font color="#CCCCCC"> specific ways that you can</font>

340
00:15:32,470 --> 00:15:37,960
use them<font color="#E5E5E5"> and you have to assume that</font>

341
00:15:34,030 --> 00:15:40,390
<font color="#E5E5E5">they'll be</font><font color="#CCCCCC"> available at run time some</font>

342
00:15:37,960 --> 00:15:43,810
people<font color="#CCCCCC"> think there are</font><font color="#E5E5E5"> a mistake so here</font>

343
00:15:40,390 --> 00:15:45,819
is a pretty simple C program I'm<font color="#E5E5E5"> not</font>

344
00:15:43,810 --> 00:15:48,579
doing anything dynamic yet<font color="#E5E5E5"> when I</font>

345
00:15:45,820 --> 00:15:50,950
compile<font color="#CCCCCC"> this</font><font color="#E5E5E5"> it's going to turn into a</font>

346
00:15:48,580 --> 00:15:54,340
bunch of objects in memory<font color="#E5E5E5"> that looks</font>

347
00:15:50,950 --> 00:15:56,440
something like this<font color="#E5E5E5"> so main gets stored</font>

348
00:15:54,340 --> 00:15:58,600
at a specific<font color="#E5E5E5"> address local function</font>

349
00:15:56,440 --> 00:16:01,150
gets started at a specific<font color="#CCCCCC"> address and</font>

350
00:15:58,600 --> 00:16:04,690
then they can call each other just fine

351
00:16:01,150 --> 00:16:07,480
now<font color="#E5E5E5"> what if I'm using some</font><font color="#CCCCCC"> other library</font>

352
00:16:04,690 --> 00:16:09,880
<font color="#E5E5E5">I've included live one</font><font color="#CCCCCC"> and Lib</font><font color="#E5E5E5"> two dot H</font>

353
00:16:07,480 --> 00:16:12,270
<font color="#E5E5E5">and now I'm calling</font><font color="#CCCCCC"> them both</font><font color="#E5E5E5"> from local</font>

354
00:16:09,880 --> 00:16:15,130
function what is this<font color="#E5E5E5"> going to look</font><font color="#CCCCCC"> like</font>

355
00:16:12,270 --> 00:16:18,750
well the<font color="#CCCCCC"> two functions</font><font color="#E5E5E5"> that I know about</font>

356
00:16:15,130 --> 00:16:21,670
<font color="#E5E5E5">are</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> be defined properly but the</font>

357
00:16:18,750 --> 00:16:24,400
<font color="#E5E5E5">two shared functions are going to be</font>

358
00:16:21,670 --> 00:16:28,060
undefined<font color="#CCCCCC"> until I go to run the binary</font>

359
00:16:24,400 --> 00:16:31,140
<font color="#E5E5E5">when the linker the dynamic linker is</font>

360
00:16:28,060 --> 00:16:34,390
going to find them search them out<font color="#E5E5E5"> and</font>

361
00:16:31,140 --> 00:16:37,449
link them<font color="#CCCCCC"> into the program properly</font><font color="#E5E5E5"> so</font>

362
00:16:34,390 --> 00:16:40,210
it can<font color="#E5E5E5"> run we're going to use</font><font color="#CCCCCC"> a cool</font>

363
00:16:37,450 --> 00:16:42,100
program<font color="#CCCCCC"> called ldd</font><font color="#E5E5E5"> when a program has</font>

364
00:16:40,210 --> 00:16:43,600
<font color="#E5E5E5">that few letters in it you know it's</font>

365
00:16:42,100 --> 00:16:47,590
going<font color="#E5E5E5"> to be doing something obscure and</font>

366
00:16:43,600 --> 00:16:52,180
frustrating<font color="#E5E5E5"> so this is the LD</font><font color="#CCCCCC"> D output</font>

367
00:16:47,590 --> 00:16:54,640
<font color="#CCCCCC">for Dinko which is a common go testing</font>

368
00:16:52,180 --> 00:16:56,650
utility<font color="#CCCCCC"> there's a lot</font><font color="#E5E5E5"> of stuff we don't</font>

369
00:16:54,640 --> 00:16:58,120
<font color="#E5E5E5">care</font><font color="#CCCCCC"> about most</font><font color="#E5E5E5"> of it get rid of all of</font>

370
00:16:56,650 --> 00:17:01,630
<font color="#E5E5E5">those</font><font color="#CCCCCC"> numbers they</font><font color="#E5E5E5"> don't mean anything</font>

371
00:16:58,120 --> 00:17:05,560
<font color="#E5E5E5">to me</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are the common dependencies</font>

372
00:17:01,630 --> 00:17:09,550
you<font color="#CCCCCC"> will see in most go binaries you</font>

373
00:17:05,560 --> 00:17:11,230
need C you need<font color="#E5E5E5"> LD which is the library</font>

374
00:17:09,550 --> 00:17:13,149
that<font color="#CCCCCC"> allows you to use dynamic link</font>

375
00:17:11,230 --> 00:17:15,610
libraries<font color="#E5E5E5"> which is fun</font>

376
00:17:13,150 --> 00:17:17,530
you need threads remember how I added

377
00:17:15,609 --> 00:17:21,219
threads<font color="#E5E5E5"> in up there this is why you need</font>

378
00:17:17,530 --> 00:17:26,800
<font color="#CCCCCC">it probably and</font><font color="#E5E5E5"> whatever video so is I</font>

379
00:17:21,220 --> 00:17:30,820
don't know<font color="#CCCCCC"> so we're going</font><font color="#E5E5E5"> to add this</font>

380
00:17:26,800 --> 00:17:34,450
library<font color="#E5E5E5"> in that we defined using - L</font><font color="#CCCCCC"> ad</font>

381
00:17:30,820 --> 00:17:37,540
<font color="#CCCCCC">lib it's not</font><font color="#E5E5E5"> lad Lib even though that</font>

382
00:17:34,450 --> 00:17:39,880
might be fun it's -<font color="#E5E5E5"> L ad lib and there's</font>

383
00:17:37,540 --> 00:17:43,260
no space because remember this is<font color="#E5E5E5"> C</font>

384
00:17:39,880 --> 00:17:46,770
characters are<font color="#E5E5E5"> very precious</font>

385
00:17:43,260 --> 00:17:48,450
so we're going<font color="#E5E5E5"> to install this</font><font color="#CCCCCC"> this is</font>

386
00:17:46,770 --> 00:17:50,129
not<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> the command to use the</font>

387
00:17:48,450 --> 00:17:51,960
command<font color="#E5E5E5"> use is something like this</font>

388
00:17:50,130 --> 00:17:54,570
because<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> the prop the</font>

389
00:17:51,960 --> 00:17:55,950
files right and the libraries<font color="#E5E5E5"> you're</font>

390
00:17:54,570 --> 00:18:00,510
looking for probably<font color="#E5E5E5"> aren't on the right</font>

391
00:17:55,950 --> 00:18:04,140
path<font color="#CCCCCC"> this is the important part</font>

392
00:18:00,510 --> 00:18:07,080
-<font color="#E5E5E5"> I adds a path to look for header files</font>

393
00:18:04,140 --> 00:18:10,650
<font color="#E5E5E5">- L adds a path to look for actual</font>

394
00:18:07,080 --> 00:18:15,419
<font color="#E5E5E5">compiled library files and then only</font>

395
00:18:10,650 --> 00:18:19,100
<font color="#E5E5E5">then can you install this</font><font color="#CCCCCC"> library you</font>

396
00:18:15,420 --> 00:18:21,510
can<font color="#E5E5E5"> see here one of</font><font color="#CCCCCC"> these isn't</font><font color="#E5E5E5"> found</font>

397
00:18:19,100 --> 00:18:24,360
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is how you can tell without running</font>

398
00:18:21,510 --> 00:18:27,210
<font color="#E5E5E5">a program</font><font color="#CCCCCC"> whether</font><font color="#E5E5E5"> or not it's going to</font>

399
00:18:24,360 --> 00:18:30,300
<font color="#CCCCCC">actually run properly that not</font><font color="#E5E5E5"> found</font>

400
00:18:27,210 --> 00:18:33,900
means this program is not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to run</font>

401
00:18:30,300 --> 00:18:37,409
<font color="#CCCCCC">properly but I can pass in a specific</font>

402
00:18:33,900 --> 00:18:40,380
<font color="#E5E5E5">path so that it will run properly just</font>

403
00:18:37,410 --> 00:18:42,870
pass in this long<font color="#E5E5E5"> variable on</font><font color="#CCCCCC"> the</font>

404
00:18:40,380 --> 00:18:45,210
command line<font color="#CCCCCC"> so I'd note you can do some</font>

405
00:18:42,870 --> 00:18:48,590
<font color="#CCCCCC">really fun stuff</font><font color="#E5E5E5"> with this because you</font>

406
00:18:45,210 --> 00:18:51,780
can modify you<font color="#CCCCCC"> can insert your own</font>

407
00:18:48,590 --> 00:18:53,790
<font color="#E5E5E5">libraries for things</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> Lib C and P</font>

408
00:18:51,780 --> 00:18:55,680
thread and do all<font color="#CCCCCC"> sorts of</font><font color="#E5E5E5"> nasty things</font>

409
00:18:53,790 --> 00:18:58,889
to executables that<font color="#E5E5E5"> aren't suspecting it</font>

410
00:18:55,680 --> 00:19:01,800
<font color="#E5E5E5">that is another talk for another time</font>

411
00:18:58,890 --> 00:19:04,680
I have about five minutes left<font color="#CCCCCC"> and now I</font>

412
00:19:01,800 --> 00:19:07,250
am happy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take any questions that</font>

413
00:19:04,680 --> 00:19:07,250
anybody has

414
00:19:13,639 --> 00:19:28,860
<font color="#E5E5E5">questions/comments</font><font color="#CCCCCC"> thinly veiled insults</font>

415
00:19:16,139 --> 00:19:32,489
anyone sorry what was that<font color="#E5E5E5"> if you're</font>

416
00:19:28,860 --> 00:19:36,959
gonna make<font color="#E5E5E5"> it can you make a static</font>

417
00:19:32,490 --> 00:19:39,480
binary using<font color="#E5E5E5"> a dynamic</font><font color="#CCCCCC"> library yes</font><font color="#E5E5E5"> can</font>

418
00:19:36,960 --> 00:19:43,259
<font color="#E5E5E5">you make a static binary using a</font>

419
00:19:39,480 --> 00:19:45,480
dynamically<font color="#CCCCCC"> linked library</font><font color="#E5E5E5"> yes you can</font>

420
00:19:43,259 --> 00:19:50,129
and in<font color="#E5E5E5"> fact the that's what</font><font color="#CCCCCC"> NGO is going</font>

421
00:19:45,480 --> 00:19:54,480
to try to do by default<font color="#CCCCCC"> but sometimes</font>

422
00:19:50,129 --> 00:19:58,019
you will<font color="#CCCCCC"> need to</font><font color="#E5E5E5"> use these things in</font>

423
00:19:54,480 --> 00:20:00,029
<font color="#E5E5E5">different places depending</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font>

424
00:19:58,019 --> 00:20:02,250
specific needs<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is something that</font><font color="#CCCCCC"> I</font>

425
00:20:00,029 --> 00:20:04,970
ran<font color="#E5E5E5"> into and I found</font><font color="#CCCCCC"> very frustrating so</font>

426
00:20:02,250 --> 00:20:09,259
this was how I figured it<font color="#CCCCCC"> out</font>

427
00:20:04,970 --> 00:20:09,259
anyone else<font color="#E5E5E5"> Oh over there</font>

428
00:20:11,549 --> 00:20:15,960
you just<font color="#E5E5E5"> don't have any other option</font>

429
00:20:18,960 --> 00:20:25,450
the motivating example for oh<font color="#E5E5E5"> yes what</font>

430
00:20:23,350 --> 00:20:27,820
are<font color="#E5E5E5"> some examples</font><font color="#CCCCCC"> of situations where</font>

431
00:20:25,450 --> 00:20:30,310
<font color="#E5E5E5">you</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> have to use</font><font color="#CCCCCC"> C and there</font>

432
00:20:27,820 --> 00:20:32,439
aren't any<font color="#E5E5E5"> other options available the</font>

433
00:20:30,310 --> 00:20:35,889
motivating example for me to<font color="#CCCCCC"> learn seiga</font>

434
00:20:32,440 --> 00:20:39,610
was writing<font color="#E5E5E5"> Postgres extensions</font><font color="#CCCCCC"> Postgres</font>

435
00:20:35,890 --> 00:20:43,780
is written in<font color="#E5E5E5"> c and</font><font color="#CCCCCC"> c++ you can write</font>

436
00:20:39,610 --> 00:20:47,560
extensions in<font color="#E5E5E5"> C</font><font color="#CCCCCC"> or C++</font><font color="#E5E5E5"> and if you do</font>

437
00:20:43,780 --> 00:20:49,960
that then you can mostly<font color="#E5E5E5"> write the</font>

438
00:20:47,560 --> 00:20:52,659
extension<font color="#E5E5E5"> in go and have a little bit of</font>

439
00:20:49,960 --> 00:20:54,400
<font color="#CCCCCC">wrapper code</font><font color="#E5E5E5"> and for what I was</font><font color="#CCCCCC"> doing</font>

440
00:20:52,660 --> 00:20:57,010
which was<font color="#CCCCCC"> converted he's</font><font color="#E5E5E5"> related that</font>

441
00:20:54,400 --> 00:21:00,130
was much<font color="#CCCCCC"> easier for</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> some other</font>

442
00:20:57,010 --> 00:21:04,300
<font color="#E5E5E5">examples are</font><font color="#CCCCCC"> anything</font><font color="#E5E5E5"> to do with gooeys</font>

443
00:21:00,130 --> 00:21:09,520
<font color="#E5E5E5">might require a binary thing</font><font color="#CCCCCC"> some some</font>

444
00:21:04,300 --> 00:21:11,860
really<font color="#CCCCCC"> nasty library like</font><font color="#E5E5E5"> image</font><font color="#CCCCCC"> magic or</font>

445
00:21:09,520 --> 00:21:13,870
something<font color="#CCCCCC"> like that I think that</font>

446
00:21:11,860 --> 00:21:16,149
tensorflow library that was mentioned

447
00:21:13,870 --> 00:21:17,979
<font color="#CCCCCC">last time</font><font color="#E5E5E5"> probably had to do some see</font>

448
00:21:16,150 --> 00:21:19,750
those stuff behind<font color="#E5E5E5"> the</font><font color="#CCCCCC"> scenes a good</font>

449
00:21:17,980 --> 00:21:21,520
library will wrap all of<font color="#E5E5E5"> this so you</font>

450
00:21:19,750 --> 00:21:24,370
<font color="#E5E5E5">don't have to worry about it</font>

451
00:21:21,520 --> 00:21:28,270
but behind the scenes something like

452
00:21:24,370 --> 00:21:30,899
this is<font color="#E5E5E5"> probably happening anyone else</font>

453
00:21:28,270 --> 00:21:30,900
over<font color="#E5E5E5"> there</font>

454
00:21:40,679 --> 00:21:48,119
yes you can't yes<font color="#CCCCCC"> can you use all of the</font>

455
00:21:44,609 --> 00:21:52,789
<font color="#E5E5E5">go features when you are right in when</font>

456
00:21:48,119 --> 00:21:56,549
you are<font color="#E5E5E5"> writing in go and see go</font><font color="#CCCCCC"> kind of</font>

457
00:21:52,789 --> 00:22:01,408
<font color="#E5E5E5">it's difficult to use</font><font color="#CCCCCC"> things like</font><font color="#E5E5E5"> using</font>

458
00:21:56,549 --> 00:22:04,139
channels inside of<font color="#E5E5E5"> C code is sometimes</font>

459
00:22:01,409 --> 00:22:07,950
possible<font color="#E5E5E5"> sometimes not but if you're</font>

460
00:22:04,139 --> 00:22:10,289
calling C code from go that go code can

461
00:22:07,950 --> 00:22:11,970
use any<font color="#E5E5E5"> language features you want it's</font>

462
00:22:10,289 --> 00:22:15,658
just<font color="#CCCCCC"> when you pass some of the more</font>

463
00:22:11,970 --> 00:22:19,049
complicated<font color="#CCCCCC"> some of the more complicated</font>

464
00:22:15,659 --> 00:22:20,700
go constructs across the see barrier

465
00:22:19,049 --> 00:22:24,840
<font color="#E5E5E5">that's when things get a little bit</font>

466
00:22:20,700 --> 00:22:28,139
<font color="#E5E5E5">complicated and more information and</font>

467
00:22:24,840 --> 00:22:30,570
<font color="#E5E5E5">that is the C go</font><font color="#CCCCCC"> Docs have</font><font color="#E5E5E5"> a really</font>

468
00:22:28,139 --> 00:22:36,139
great list<font color="#E5E5E5"> of what you can and can't</font>

469
00:22:30,570 --> 00:22:36,139
pass across<font color="#E5E5E5"> that barrier</font><font color="#CCCCCC"> yes in the back</font>

470
00:22:43,340 --> 00:22:51,350
<font color="#CCCCCC">um</font><font color="#E5E5E5"> yes</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> I noticed any differences</font>

471
00:22:48,180 --> 00:22:54,000
where the<font color="#CCCCCC"> sea is better than the NGO</font>

472
00:22:51,350 --> 00:22:56,129
<font color="#E5E5E5">mostly the difference is that it's</font>

473
00:22:54,000 --> 00:22:58,560
better at being able<font color="#CCCCCC"> to do the thing</font>

474
00:22:56,130 --> 00:23:02,010
that<font color="#E5E5E5"> I need it to do because it can and</font>

475
00:22:58,560 --> 00:23:04,290
go can't<font color="#CCCCCC"> I don't really like</font><font color="#E5E5E5"> writing</font><font color="#CCCCCC"> C</font>

476
00:23:02,010 --> 00:23:08,820
on purpose because<font color="#CCCCCC"> it said false</font><font color="#E5E5E5"> a whole</font>

477
00:23:04,290 --> 00:23:09,840
<font color="#E5E5E5">bunch and it's really frustrating</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I</font>

478
00:23:08,820 --> 00:23:11,730
haven't<font color="#E5E5E5"> I</font>

479
00:23:09,840 --> 00:23:15,270
I can't think<font color="#E5E5E5"> of a reason why</font><font color="#CCCCCC"> you would</font>

480
00:23:11,730 --> 00:23:17,640
use C go unless<font color="#E5E5E5"> you absolutely had to</font><font color="#CCCCCC"> I</font>

481
00:23:15,270 --> 00:23:19,980
don't<font color="#E5E5E5"> think I noticed it being</font>

482
00:23:17,640 --> 00:23:21,900
particularly faster or anything like

483
00:23:19,980 --> 00:23:24,210
that but<font color="#CCCCCC"> again you saw my examples they</font>

484
00:23:21,900 --> 00:23:26,850
were all<font color="#CCCCCC"> very trivial</font><font color="#E5E5E5"> so there are</font>

485
00:23:24,210 --> 00:23:28,290
<font color="#E5E5E5">probably some</font><font color="#CCCCCC"> go veterans out there who</font>

486
00:23:26,850 --> 00:23:29,100
can answer your<font color="#E5E5E5"> question better</font><font color="#CCCCCC"> than I</font>

487
00:23:28,290 --> 00:23:34,710
can

488
00:23:29,100 --> 00:23:40,760
I think I had<font color="#CCCCCC"> one over here any</font><font color="#E5E5E5"> advice</font>

489
00:23:34,710 --> 00:23:43,680
on testing<font color="#CCCCCC"> AC</font><font color="#E5E5E5"> go project</font><font color="#CCCCCC"> do it</font>

490
00:23:40,760 --> 00:23:46,950
[Music]

491
00:23:43,680 --> 00:23:51,480
you can test see you can test go

492
00:23:46,950 --> 00:23:53,250
<font color="#CCCCCC">I know specific advice</font><font color="#E5E5E5"> all of the</font>

493
00:23:51,480 --> 00:23:54,570
projects that<font color="#E5E5E5"> I tested I tested by</font>

494
00:23:53,250 --> 00:23:55,920
running<font color="#E5E5E5"> the code a whole bunch and</font>

495
00:23:54,570 --> 00:24:03,840
hoping it didn't fail when I was<font color="#E5E5E5"> on</font>

496
00:23:55,920 --> 00:24:08,370
<font color="#CCCCCC">stage right okay</font><font color="#E5E5E5"> any performance issues</font>

497
00:24:03,840 --> 00:24:11,220
<font color="#E5E5E5">in terms of</font><font color="#CCCCCC"> FF I overhead probably</font><font color="#E5E5E5"> sorry</font>

498
00:24:08,370 --> 00:24:14,520
I am<font color="#E5E5E5"> I know enough about this to</font><font color="#CCCCCC"> give</font>

499
00:24:11,220 --> 00:24:17,730
this talk<font color="#E5E5E5"> but I am NOT a I am NOT an</font>

500
00:24:14,520 --> 00:24:21,750
expert in profiling<font color="#CCCCCC"> NGO</font><font color="#E5E5E5"> or any of that</font>

501
00:24:17,730 --> 00:24:23,760
<font color="#E5E5E5">sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so there's probably</font>

502
00:24:21,750 --> 00:24:26,580
somebody<font color="#CCCCCC"> in here who</font><font color="#E5E5E5"> is that's the go</font>

503
00:24:23,760 --> 00:24:28,379
dev room so<font color="#E5E5E5"> just go up to random people</font>

504
00:24:26,580 --> 00:24:29,610
<font color="#E5E5E5">in this room and</font><font color="#CCCCCC"> bother them until you</font>

505
00:24:28,380 --> 00:24:39,420
find<font color="#E5E5E5"> somebody who knows the right</font>

506
00:24:29,610 --> 00:24:43,020
questions make some new friends<font color="#CCCCCC"> I've</font>

507
00:24:39,420 --> 00:24:46,970
used rust<font color="#E5E5E5"> interacting with</font><font color="#CCCCCC"> C it's a</font>

508
00:24:43,020 --> 00:24:50,220
<font color="#E5E5E5">little bit</font><font color="#CCCCCC"> easier because rust just like</font>

509
00:24:46,970 --> 00:24:54,690
it's much<font color="#E5E5E5"> more similar</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> C there aren't</font>

510
00:24:50,220 --> 00:24:56,730
problems quite<font color="#E5E5E5"> as much with the</font><font color="#CCCCCC"> like</font>

511
00:24:54,690 --> 00:25:00,840
pointers and that sort of thing<font color="#CCCCCC"> I've</font>

512
00:24:56,730 --> 00:25:02,730
also<font color="#CCCCCC"> used</font><font color="#E5E5E5"> the Python</font><font color="#CCCCCC"> FF I and that is</font>

513
00:25:00,840 --> 00:25:05,540
worse because<font color="#CCCCCC"> you have to manage all of</font>

514
00:25:02,730 --> 00:25:08,460
the explicit reference counting<font color="#CCCCCC"> yourself</font>

515
00:25:05,540 --> 00:25:11,159
<font color="#CCCCCC">basically like manually incrementing and</font>

516
00:25:08,460 --> 00:25:14,100
decrementing<font color="#E5E5E5"> reference counts as you do</font>

517
00:25:11,160 --> 00:25:15,870
that there<font color="#CCCCCC"> is psyphon which is different</font>

518
00:25:14,100 --> 00:25:19,199
from<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I used I've heard that's</font><font color="#E5E5E5"> a lot</font>

519
00:25:15,870 --> 00:25:20,989
nicer<font color="#CCCCCC"> so I would put go somewhere in the</font>

520
00:25:19,200 --> 00:25:23,520
<font color="#CCCCCC">middle of the FO Phi's</font><font color="#E5E5E5"> that I've used</font>

521
00:25:20,990 --> 00:25:26,280
<font color="#E5E5E5">and I am out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> time</font>

522
00:25:23,520 --> 00:25:28,650
so if anybody wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> ask</font><font color="#CCCCCC"> me more</font>

523
00:25:26,280 --> 00:25:30,470
questions<font color="#CCCCCC"> it's not a lot of</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> here</font>

524
00:25:28,650 --> 00:25:33,480
<font color="#CCCCCC">with pink hair I should be easy to find</font>

525
00:25:30,470 --> 00:25:33,850
<font color="#E5E5E5">and enjoy</font><font color="#CCCCCC"> the rest of</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> conference</font>

526
00:25:33,480 --> 00:25:44,180
<font color="#E5E5E5">everyone</font>

527
00:25:33,850 --> 00:25:44,179
[Applause]

