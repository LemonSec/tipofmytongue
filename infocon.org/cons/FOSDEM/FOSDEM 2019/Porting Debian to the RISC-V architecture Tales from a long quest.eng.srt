1
00:00:04,810 --> 00:00:10,219
so morning everybody my name is<font color="#E5E5E5"> cast</font>

2
00:00:08,090 --> 00:00:11,750
<font color="#CCCCCC">maka I'm one</font><font color="#E5E5E5"> of the demo developers who</font>

3
00:00:10,219 --> 00:00:14,450
<font color="#E5E5E5">are working on the</font><font color="#CCCCCC"> Debian risk</font><font color="#E5E5E5"> 5</font><font color="#CCCCCC"> port</font>

4
00:00:11,750 --> 00:00:16,430
and today I'm going<font color="#E5E5E5"> to tell you the</font>

5
00:00:14,450 --> 00:00:19,640
story<font color="#CCCCCC"> of how the debian risk live port</font>

6
00:00:16,430 --> 00:00:22,310
<font color="#E5E5E5">came to life what we have achieved until</font>

7
00:00:19,640 --> 00:00:23,930
now which obstacles we had to tackle to

8
00:00:22,310 --> 00:00:26,599
edit completely new architecture to a

9
00:00:23,930 --> 00:00:28,400
<font color="#E5E5E5">binary distribution like</font><font color="#CCCCCC"> Debian</font><font color="#E5E5E5"> I'll</font>

10
00:00:26,600 --> 00:00:30,380
show you what we<font color="#E5E5E5"> have achieved what</font><font color="#CCCCCC"> we</font>

11
00:00:28,400 --> 00:00:32,390
are<font color="#E5E5E5"> planning</font><font color="#CCCCCC"> to achieve and give you an</font>

12
00:00:30,380 --> 00:00:34,610
outlook<font color="#E5E5E5"> about what we hope</font><font color="#CCCCCC"> to have</font>

13
00:00:32,390 --> 00:00:37,220
within the next<font color="#E5E5E5"> one</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> two years</font><font color="#CCCCCC"> I'll</font>

14
00:00:34,610 --> 00:00:38,510
start<font color="#E5E5E5"> with a short introduction of the</font>

15
00:00:37,220 --> 00:00:40,519
risk raft architecture because I know

16
00:00:38,510 --> 00:00:42,320
there are<font color="#E5E5E5"> people around here who come</font>

17
00:00:40,520 --> 00:00:44,060
from the Debian<font color="#CCCCCC"> site not</font><font color="#E5E5E5"> from the risk</font><font color="#CCCCCC"> 5</font>

18
00:00:42,320 --> 00:00:48,140
side and are not familiar<font color="#E5E5E5"> with the deeds</font>

19
00:00:44,060 --> 00:00:50,329
of risk 5 so I keep<font color="#E5E5E5"> it short so what</font>

20
00:00:48,140 --> 00:00:52,190
<font color="#E5E5E5">suscribe risk 5 is a CPU instruction set</font>

21
00:00:50,329 --> 00:00:53,780
architecture that<font color="#E5E5E5"> has been designed at</font>

22
00:00:52,190 --> 00:00:55,849
<font color="#E5E5E5">the University of Berkeley originally as</font>

23
00:00:53,780 --> 00:00:59,480
a student<font color="#CCCCCC"> project has grown a bit since</font>

24
00:00:55,850 --> 00:01:03,980
then<font color="#E5E5E5"> and everybody</font><font color="#CCCCCC"> is free to implement</font>

25
00:00:59,480 --> 00:01:05,990
<font color="#E5E5E5">CPUs based on the</font><font color="#CCCCCC"> rest 5</font><font color="#E5E5E5"> I say and the</font>

26
00:01:03,980 --> 00:01:07,610
specification that<font color="#CCCCCC"> defines the size a is</font>

27
00:01:05,990 --> 00:01:11,330
<font color="#CCCCCC">available under free licensed under CC</font>

28
00:01:07,610 --> 00:01:13,070
<font color="#CCCCCC">buy and to make</font><font color="#E5E5E5"> sure that</font>

29
00:01:11,330 --> 00:01:15,679
implementations actually conform to the

30
00:01:13,070 --> 00:01:18,199
specification the<font color="#CCCCCC"> risk Y</font><font color="#E5E5E5"> Foundation has</font>

31
00:01:15,680 --> 00:01:20,270
registered<font color="#E5E5E5"> trademarks on the name risk 5</font>

32
00:01:18,200 --> 00:01:21,860
and you're only allowed to<font color="#E5E5E5"> call you</font>

33
00:01:20,270 --> 00:01:23,960
implementation describe it if actually

34
00:01:21,860 --> 00:01:25,070
conforms to the spec to make sure that

35
00:01:23,960 --> 00:01:32,419
we<font color="#E5E5E5"> don't get incompatible</font>

36
00:01:25,070 --> 00:01:34,609
implementations the Rue scribe<font color="#CCCCCC"> is</font><font color="#E5E5E5"> a</font>

37
00:01:32,420 --> 00:01:37,659
exists in three different<font color="#CCCCCC"> rinds</font>

38
00:01:34,610 --> 00:01:39,710
it's available in<font color="#E5E5E5"> 32-bit 64-bit and</font>

39
00:01:37,659 --> 00:01:41,510
still work in progress<font color="#CCCCCC"> one hunt</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> T</font>

40
00:01:39,710 --> 00:01:45,408
8-bit so for<font color="#CCCCCC"> practical purposes is</font>

41
00:01:41,510 --> 00:01:47,119
<font color="#E5E5E5">32-bit and 64-bit</font><font color="#CCCCCC"> right now</font><font color="#E5E5E5"> it has been</font>

42
00:01:45,409 --> 00:01:49,130
<font color="#E5E5E5">designed to be modular to scale from</font>

43
00:01:47,119 --> 00:01:53,450
microcontrollers up to supercomputing

44
00:01:49,130 --> 00:01:56,210
<font color="#E5E5E5">and the as a designers are trying to</font>

45
00:01:53,450 --> 00:01:57,799
have only non-patentable<font color="#E5E5E5"> technology in</font>

46
00:01:56,210 --> 00:01:59,658
the eyes a specification so that it is

47
00:01:57,799 --> 00:02:01,939
possible<font color="#CCCCCC"> to actually implement</font><font color="#E5E5E5"> or</font>

48
00:01:59,659 --> 00:02:04,250
<font color="#E5E5E5">ascribe CPU without having to</font><font color="#CCCCCC"> buy patent</font>

49
00:02:01,939 --> 00:02:07,908
licenses<font color="#E5E5E5"> there is no formal</font><font color="#CCCCCC"> legal</font>

50
00:02:04,250 --> 00:02:09,530
guarantee for<font color="#E5E5E5"> that but the designers</font>

51
00:02:07,909 --> 00:02:12,770
have put<font color="#CCCCCC"> quite a bit of effort to make</font>

52
00:02:09,530 --> 00:02:14,510
<font color="#CCCCCC">sure there are no patent problems so we</font>

53
00:02:12,770 --> 00:02:16,580
know what<font color="#CCCCCC"> r</font><font color="#E5E5E5"> ascribe is what</font><font color="#CCCCCC"> describe is</font>

54
00:02:14,510 --> 00:02:18,060
not<font color="#CCCCCC"> prescribed is</font><font color="#E5E5E5"> not a specific CPU</font>

55
00:02:16,580 --> 00:02:19,950
<font color="#CCCCCC">it's just an instruction</font><font color="#E5E5E5"> set</font>

56
00:02:18,060 --> 00:02:24,330
the set of commands<font color="#E5E5E5"> and the behavior but</font>

57
00:02:19,950 --> 00:02:26,280
not<font color="#E5E5E5"> a specific chip and while the</font>

58
00:02:24,330 --> 00:02:28,080
specification<font color="#CCCCCC"> isn't a free license</font>

59
00:02:26,280 --> 00:02:30,870
<font color="#E5E5E5">there's of course the</font><font color="#CCCCCC"> possibility to</font>

60
00:02:28,080 --> 00:02:34,800
implement a proprietary<font color="#E5E5E5"> CPUs based on</font>

61
00:02:30,870 --> 00:02:36,989
the<font color="#CCCCCC"> is a there</font><font color="#E5E5E5"> are already some and one</font>

62
00:02:34,800 --> 00:02:39,390
thing that's somewhat of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> problem</font><font color="#E5E5E5"> for</font>

63
00:02:36,989 --> 00:02:41,819
<font color="#CCCCCC">open source projects</font><font color="#E5E5E5"> is that</font><font color="#CCCCCC"> the</font>

64
00:02:39,390 --> 00:02:45,119
stewardship of prescribed in<font color="#E5E5E5"> the hands</font>

65
00:02:41,819 --> 00:02:46,890
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> descry foundation is open</font><font color="#E5E5E5"> in the</font>

66
00:02:45,120 --> 00:02:48,810
<font color="#CCCCCC">way the semiconductor industry defines</font>

67
00:02:46,890 --> 00:02:50,640
<font color="#CCCCCC">determine open but not exactly</font><font color="#E5E5E5"> in the</font>

68
00:02:48,810 --> 00:02:52,800
<font color="#CCCCCC">way</font><font color="#E5E5E5"> open source projects</font><font color="#CCCCCC"> defined the</font>

69
00:02:50,640 --> 00:02:54,268
term open<font color="#E5E5E5"> all the specific</font>

70
00:02:52,800 --> 00:02:56,760
specifications once they are released

71
00:02:54,269 --> 00:02:57,560
<font color="#E5E5E5">are available on the free licenses or no</font>

72
00:02:56,760 --> 00:03:01,200
problem with that

73
00:02:57,560 --> 00:03:04,680
but taking part in the<font color="#E5E5E5"> specification</font>

74
00:03:01,200 --> 00:03:07,190
<font color="#CCCCCC">process itself requires</font><font color="#E5E5E5"> a risk right</font>

75
00:03:04,680 --> 00:03:09,330
<font color="#CCCCCC">Foundation membership which requires</font>

76
00:03:07,190 --> 00:03:10,769
signing a nondisclosure agreement which

77
00:03:09,330 --> 00:03:13,100
is why<font color="#CCCCCC"> many open-source</font><font color="#E5E5E5"> developers like</font>

78
00:03:10,769 --> 00:03:16,110
me are not<font color="#E5E5E5"> a member of the foundation</font>

79
00:03:13,100 --> 00:03:17,459
most of the software<font color="#E5E5E5"> stuff is</font><font color="#CCCCCC"> actually</font>

80
00:03:16,110 --> 00:03:19,830
handled outside<font color="#E5E5E5"> the foundation but</font><font color="#CCCCCC"> the</font>

81
00:03:17,459 --> 00:03:22,560
<font color="#CCCCCC">actual</font><font color="#E5E5E5"> is a specification runs inside</font>

82
00:03:19,830 --> 00:03:24,390
<font color="#E5E5E5">the foundation and getting access to</font>

83
00:03:22,560 --> 00:03:27,120
pre-release documents actually requires

84
00:03:24,390 --> 00:03:29,820
<font color="#E5E5E5">membership everybody can become a member</font>

85
00:03:27,120 --> 00:03:31,769
as the personal member but personal

86
00:03:29,820 --> 00:03:34,230
members don't have voting<font color="#CCCCCC"> rights</font><font color="#E5E5E5"> so</font>

87
00:03:31,769 --> 00:03:37,200
<font color="#E5E5E5">actual decisions get made by corporate</font>

88
00:03:34,230 --> 00:03:38,970
entities in the four days<font color="#CCCCCC"> now so why is</font>

89
00:03:37,200 --> 00:03:41,160
it<font color="#CCCCCC"> called</font><font color="#E5E5E5"> risk</font><font color="#CCCCCC"> 5 that's rather easy it's</font>

90
00:03:38,970 --> 00:03:44,070
a classic<font color="#CCCCCC"> Euler</font><font color="#E5E5E5"> RISC architecture like</font>

91
00:03:41,160 --> 00:03:45,630
there have already<font color="#E5E5E5"> been lot and it's the</font>

92
00:03:44,070 --> 00:03:49,040
fifth<font color="#E5E5E5"> major</font><font color="#CCCCCC"> RISC architecture</font><font color="#E5E5E5"> designed</font>

93
00:03:45,630 --> 00:03:51,359
<font color="#E5E5E5">at</font><font color="#CCCCCC"> Berkley so the name</font><font color="#E5E5E5"> is rather obvious</font>

94
00:03:49,040 --> 00:03:53,820
<font color="#E5E5E5">there have been other RISC architectures</font>

95
00:03:51,359 --> 00:03:56,100
for<font color="#CCCCCC"> example mips if you have</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> DSL</font>

96
00:03:53,820 --> 00:03:58,829
router at home<font color="#E5E5E5"> chances are about</font><font color="#CCCCCC"> 95%</font>

97
00:03:56,100 --> 00:04:02,010
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it smooth based</font><font color="#E5E5E5"> if you're carrying</font>

98
00:03:58,829 --> 00:04:05,940
<font color="#E5E5E5">a</font><font color="#CCCCCC"> smartphone it's about 95% are based</font>

99
00:04:02,010 --> 00:04:08,280
and there are several others<font color="#CCCCCC"> most of</font>

100
00:04:05,940 --> 00:04:11,340
them are closed architectures designed

101
00:04:08,280 --> 00:04:15,600
by companies<font color="#E5E5E5"> mips is just now slowly</font>

102
00:04:11,340 --> 00:04:18,238
changing there is opening up a bit<font color="#CCCCCC"> Sun</font>

103
00:04:15,600 --> 00:04:20,909
<font color="#E5E5E5">Microsystems has actually specified</font>

104
00:04:18,238 --> 00:04:22,560
spark<font color="#CCCCCC"> in an actual</font><font color="#E5E5E5"> place than that</font><font color="#CCCCCC"> but</font>

105
00:04:20,910 --> 00:04:25,190
that's then it itself is<font color="#E5E5E5"> not really</font>

106
00:04:22,560 --> 00:04:28,770
<font color="#CCCCCC">available so one has to buy the standard</font>

107
00:04:25,190 --> 00:04:31,169
<font color="#E5E5E5">which again is</font><font color="#CCCCCC"> not nice for those</font>

108
00:04:28,770 --> 00:04:32,020
communities<font color="#CCCCCC"> there has</font><font color="#E5E5E5"> been open</font><font color="#CCCCCC"> risk</font><font color="#E5E5E5"> and</font>

109
00:04:31,169 --> 00:04:36,370
actually

110
00:04:32,020 --> 00:04:37,690
instruction set architecture<font color="#CCCCCC"> so why yet</font>

111
00:04:36,370 --> 00:04:41,620
another one there are already so many

112
00:04:37,690 --> 00:04:44,590
choose from<font color="#E5E5E5"> this</font><font color="#CCCCCC"> craft has been</font><font color="#E5E5E5"> designed</font>

113
00:04:41,620 --> 00:04:47,020
at<font color="#CCCCCC"> university one of the targets of the</font>

114
00:04:44,590 --> 00:04:48,219
Equestria has been<font color="#E5E5E5"> teaching and</font><font color="#CCCCCC"> clothes</font>

115
00:04:47,020 --> 00:04:49,750
<font color="#E5E5E5">lacking pictures are not suitable for</font>

116
00:04:48,220 --> 00:04:52,180
teaching because you're legally not

117
00:04:49,750 --> 00:04:54,069
allowed to just implement<font color="#E5E5E5"> an x86 CPU</font>

118
00:04:52,180 --> 00:04:57,159
without having a license from Intel and

119
00:04:54,069 --> 00:05:00,669
AMD spark has<font color="#CCCCCC"> the problem that is only</font>

120
00:04:57,159 --> 00:05:03,569
<font color="#E5E5E5">halfway open and the spark designers</font>

121
00:05:00,669 --> 00:05:07,030
have actually made<font color="#CCCCCC"> some choices that</font>

122
00:05:03,569 --> 00:05:09,909
well people<font color="#E5E5E5"> wouldn't do now today</font><font color="#CCCCCC"> an</font>

123
00:05:07,030 --> 00:05:13,500
openness is the fully open design<font color="#E5E5E5"> but</font>

124
00:05:09,909 --> 00:05:17,009
open risk has a historical problem

125
00:05:13,500 --> 00:05:19,900
<font color="#CCCCCC">originally when openness was designed</font>

126
00:05:17,009 --> 00:05:23,020
one of<font color="#CCCCCC"> the juicy supporters for open</font>

127
00:05:19,900 --> 00:05:25,120
risk<font color="#CCCCCC"> didn't allow the cooperate</font>

128
00:05:23,020 --> 00:05:27,698
assignment of his<font color="#E5E5E5"> contributions to the</font>

129
00:05:25,120 --> 00:05:29,469
FSF and the sfsf requires a copyright

130
00:05:27,699 --> 00:05:31,180
assignment<font color="#E5E5E5"> to get code in jesusí</font>

131
00:05:29,469 --> 00:05:32,620
upstream<font color="#E5E5E5"> without this copyright</font>

132
00:05:31,180 --> 00:05:34,629
assignment support<font color="#CCCCCC"> for openness could</font>

133
00:05:32,620 --> 00:05:37,150
never go<font color="#E5E5E5"> upstream which is why all</font>

134
00:05:34,629 --> 00:05:40,240
<font color="#E5E5E5">efforts to</font><font color="#CCCCCC"> broaden the use of</font><font color="#E5E5E5"> open risk</font>

135
00:05:37,150 --> 00:05:42,489
have actually failed right now this<font color="#E5E5E5"> has</font>

136
00:05:40,240 --> 00:05:45,520
changed<font color="#CCCCCC"> an oprah's developer is right</font>

137
00:05:42,490 --> 00:05:47,139
now working on<font color="#E5E5E5"> re-implementing all the</font>

138
00:05:45,520 --> 00:05:50,529
<font color="#CCCCCC">openness GCC support in getting it</font>

139
00:05:47,139 --> 00:05:53,639
<font color="#E5E5E5">upstream but well in the meantime we</font>

140
00:05:50,529 --> 00:05:56,469
<font color="#E5E5E5">have several user prescribed so</font><font color="#CCCCCC"> with e</font>

141
00:05:53,639 --> 00:05:58,090
<font color="#CCCCCC">prescribed has been designed to avoid</font>

142
00:05:56,469 --> 00:06:02,080
some of<font color="#E5E5E5"> the decisions that</font><font color="#CCCCCC"> older</font>

143
00:05:58,090 --> 00:06:03,789
architectures have<font color="#CCCCCC"> had</font><font color="#E5E5E5"> it's designed to</font>

144
00:06:02,080 --> 00:06:06,039
be easily<font color="#E5E5E5"> possible to be easily</font>

145
00:06:03,789 --> 00:06:07,840
<font color="#E5E5E5">implementable and to be extendable at</font>

146
00:06:06,039 --> 00:06:11,169
the same time we'll get<font color="#E5E5E5"> to the</font>

147
00:06:07,840 --> 00:06:13,029
extensions<font color="#CCCCCC"> in a few minutes one thing</font>

148
00:06:11,169 --> 00:06:15,758
that's important is that<font color="#E5E5E5"> respect follows</font>

149
00:06:13,029 --> 00:06:19,569
a strict upstream policy so all<font color="#CCCCCC"> tool</font>

150
00:06:15,759 --> 00:06:21,819
<font color="#E5E5E5">chain stuff is handled in</font><font color="#CCCCCC"> upstream</font><font color="#E5E5E5"> so we</font>

151
00:06:19,569 --> 00:06:23,800
don't want<font color="#E5E5E5"> 5,000 force of binutils</font>

152
00:06:21,819 --> 00:06:26,710
compilers<font color="#E5E5E5"> whatever we want to have</font>

153
00:06:23,800 --> 00:06:29,800
everything standard in<font color="#E5E5E5"> upstream the</font>

154
00:06:26,710 --> 00:06:31,960
essay<font color="#CCCCCC"> itself consists of several several</font>

155
00:06:29,800 --> 00:06:34,479
<font color="#CCCCCC">modules which are</font><font color="#E5E5E5"> labeled with</font>

156
00:06:31,960 --> 00:06:36,460
characters as<font color="#E5E5E5"> you can see there</font><font color="#CCCCCC"> there's</font>

157
00:06:34,479 --> 00:06:37,240
the base is a which is<font color="#CCCCCC"> just the</font><font color="#E5E5E5"> integer</font>

158
00:06:36,460 --> 00:06:41,198
operations

159
00:06:37,240 --> 00:06:42,639
there's<font color="#CCCCCC"> harbor multiply</font><font color="#E5E5E5"> Atomics seeing a</font>

160
00:06:41,199 --> 00:06:44,740
<font color="#E5E5E5">double precision floating point and all</font>

161
00:06:42,639 --> 00:06:45,270
those together<font color="#CCCCCC"> I called the general</font>

162
00:06:44,740 --> 00:06:46,770
purpose set

163
00:06:45,270 --> 00:06:50,460
which is what one would<font color="#CCCCCC"> expect</font><font color="#E5E5E5"> for</font>

164
00:06:46,770 --> 00:06:51,990
system to run<font color="#E5E5E5"> Linux BSD whatever then</font>

165
00:06:50,460 --> 00:06:54,330
there's the compressed instruction set

166
00:06:51,990 --> 00:06:56,520
<font color="#CCCCCC">which is actually not new instructions</font>

167
00:06:54,330 --> 00:06:58,919
<font color="#E5E5E5">but a shorter encoding for existing</font>

168
00:06:56,520 --> 00:07:00,870
instructions<font color="#E5E5E5"> normal instructions in risk</font>

169
00:06:58,920 --> 00:07:04,410
<font color="#E5E5E5">cry for 32 bits long</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> compressed</font>

170
00:07:00,870 --> 00:07:05,970
instructions provide a selected set of

171
00:07:04,410 --> 00:07:08,100
instruction with a shorter 16-bit

172
00:07:05,970 --> 00:07:11,190
encoding which has the<font color="#CCCCCC"> advantage of</font>

173
00:07:08,100 --> 00:07:12,510
using having less cache pressure<font color="#E5E5E5"> having</font>

174
00:07:11,190 --> 00:07:17,460
less memory bandwidth requirements

175
00:07:12,510 --> 00:07:21,120
<font color="#CCCCCC">better</font><font color="#E5E5E5"> performance and if one wants to</font>

176
00:07:17,460 --> 00:07:24,030
specify which bits of the<font color="#CCCCCC"> eyes</font><font color="#E5E5E5"> a cpu</font>

177
00:07:21,120 --> 00:07:27,450
supports you get an as as i specify like

178
00:07:24,030 --> 00:07:30,719
you can see<font color="#E5E5E5"> below</font><font color="#CCCCCC"> I am a FD is a v60</font>

179
00:07:27,450 --> 00:07:33,150
<font color="#CCCCCC">fuji</font><font color="#E5E5E5"> when the</font><font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> distributions have</font>

180
00:07:30,720 --> 00:07:37,290
started porting<font color="#E5E5E5"> for is 5 we had to</font>

181
00:07:33,150 --> 00:07:39,239
decide about<font color="#E5E5E5"> whether to assume the</font>

182
00:07:37,290 --> 00:07:41,730
compressed exchanging<font color="#E5E5E5"> as available or</font>

183
00:07:39,240 --> 00:07:44,400
<font color="#CCCCCC">not that had some discussions at that</font>

184
00:07:41,730 --> 00:07:46,110
time all<font color="#E5E5E5"> the binary distributions that</font>

185
00:07:44,400 --> 00:07:49,830
are<font color="#CCCCCC"> working on risk rafts that support</font>

186
00:07:46,110 --> 00:07:51,870
<font color="#CCCCCC">right now assume that the C extension is</font>

187
00:07:49,830 --> 00:07:53,969
there there is<font color="#CCCCCC"> work</font><font color="#E5E5E5"> on a platform</font>

188
00:07:51,870 --> 00:07:56,370
<font color="#E5E5E5">specification which defines that all</font>

189
00:07:53,970 --> 00:08:02,190
risk 5 unique<font color="#CCCCCC"> Star platforms shall have</font>

190
00:07:56,370 --> 00:08:04,200
to see extension<font color="#E5E5E5"> the</font><font color="#CCCCCC"> SA has</font><font color="#E5E5E5"> three</font>

191
00:08:02,190 --> 00:08:06,480
<font color="#CCCCCC">privileged modes</font><font color="#E5E5E5"> machine mode is the</font>

192
00:08:04,200 --> 00:08:08,219
highest<font color="#E5E5E5"> level microcontrollers usually</font>

193
00:08:06,480 --> 00:08:10,200
only<font color="#E5E5E5"> implement machine mode if you</font><font color="#CCCCCC"> want</font>

194
00:08:08,220 --> 00:08:16,800
to run Linux or BSD<font color="#CCCCCC"> you need all three</font>

195
00:08:10,200 --> 00:08:18,180
<font color="#CCCCCC">modes the 32 64 and 128 bit ISAs are</font>

196
00:08:16,800 --> 00:08:20,250
actually independent from each other

197
00:08:18,180 --> 00:08:23,460
<font color="#E5E5E5">that's probably strange to people</font><font color="#CCCCCC"> who</font>

198
00:08:20,250 --> 00:08:26,130
are used in<font color="#CCCCCC"> architecture where every 64</font>

199
00:08:23,460 --> 00:08:28,979
<font color="#E5E5E5">bit CPU also runs 32-bit code that's not</font>

200
00:08:26,130 --> 00:08:32,400
<font color="#CCCCCC">the case on</font><font color="#E5E5E5"> describe we have a similar</font>

201
00:08:28,980 --> 00:08:34,110
<font color="#CCCCCC">effect on am 64 I'm 64 CPUs can</font>

202
00:08:32,400 --> 00:08:35,760
optionally support<font color="#E5E5E5"> 32-bit</font><font color="#CCCCCC"> coupet they</font>

203
00:08:34,110 --> 00:08:37,680
don't have to and<font color="#E5E5E5"> actually there's quite</font>

204
00:08:35,760 --> 00:08:41,760
<font color="#CCCCCC">a bit of I'm 64 servers which only</font><font color="#E5E5E5"> run</font>

205
00:08:37,679 --> 00:08:44,640
64-bit code and no 32-bit code short

206
00:08:41,760 --> 00:08:47,010
<font color="#CCCCCC">site</font><font color="#E5E5E5"> note on metal inspector</font><font color="#CCCCCC"> in</font>

207
00:08:44,640 --> 00:08:50,130
discussions about<font color="#E5E5E5"> risk life often people</font>

208
00:08:47,010 --> 00:08:52,470
claim<font color="#E5E5E5"> ya risk right this is the solution</font>

209
00:08:50,130 --> 00:08:53,850
to<font color="#E5E5E5"> met on inspector it's an open</font>

210
00:08:52,470 --> 00:08:55,740
architecture we don't have any problems

211
00:08:53,850 --> 00:08:59,190
with that<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> just nonsense</font><font color="#E5E5E5"> because</font>

212
00:08:55,740 --> 00:09:01,110
<font color="#E5E5E5">metal inspector our implementation</font><font color="#CCCCCC"> bugs</font>

213
00:08:59,190 --> 00:09:02,520
not<font color="#E5E5E5"> back in the design of</font><font color="#CCCCCC"> the</font>

214
00:09:01,110 --> 00:09:05,400
instruction set<font color="#CCCCCC"> architecture but in</font>

215
00:09:02,520 --> 00:09:07,439
specific<font color="#E5E5E5"> chip implementations so why</font>

216
00:09:05,400 --> 00:09:09,449
currently we have<font color="#E5E5E5"> no where's five chips</font>

217
00:09:07,440 --> 00:09:12,120
which do speculative execution<font color="#E5E5E5"> which is</font>

218
00:09:09,450 --> 00:09:14,190
the base<font color="#CCCCCC"> perspective now down</font><font color="#E5E5E5"> so</font>

219
00:09:12,120 --> 00:09:16,410
currently there is no<font color="#CCCCCC"> risk</font><font color="#E5E5E5"> five chip</font>

220
00:09:14,190 --> 00:09:17,880
that's vulnerable<font color="#CCCCCC"> nobody can guarantee</font>

221
00:09:16,410 --> 00:09:20,130
<font color="#E5E5E5">that that won't happen in the future</font>

222
00:09:17,880 --> 00:09:24,689
when<font color="#E5E5E5"> we get chips that do speculative</font>

223
00:09:20,130 --> 00:09:26,160
execution<font color="#E5E5E5"> so now we have a nice a but if</font>

224
00:09:24,690 --> 00:09:28,080
you want to use nice it would like to

225
00:09:26,160 --> 00:09:30,689
<font color="#E5E5E5">have</font><font color="#CCCCCC"> hardware or at least</font><font color="#E5E5E5"> otherwise run</font>

226
00:09:28,080 --> 00:09:33,810
code there<font color="#E5E5E5"> are multiple</font><font color="#CCCCCC"> options we can</font>

227
00:09:30,690 --> 00:09:36,120
do<font color="#E5E5E5"> QM emulation humor has support for</font>

228
00:09:33,810 --> 00:09:39,599
<font color="#E5E5E5">both user space as well as full system</font>

229
00:09:36,120 --> 00:09:41,370
emulation<font color="#CCCCCC"> we have CPU designs which can</font>

230
00:09:39,600 --> 00:09:43,680
be instantiated<font color="#E5E5E5"> in free programmable</font>

231
00:09:41,370 --> 00:09:47,850
gate arrays<font color="#E5E5E5"> I'll get to that later</font><font color="#CCCCCC"> on</font>

232
00:09:43,680 --> 00:09:49,530
and we also have real CPU chips<font color="#CCCCCC"> last</font>

233
00:09:47,850 --> 00:09:51,570
year<font color="#E5E5E5"> at first them we had the</font>

234
00:09:49,530 --> 00:09:53,939
<font color="#E5E5E5">presentation of the sci-fi freedom you</font>

235
00:09:51,570 --> 00:09:57,870
<font color="#CCCCCC">540 which is the first Linux capable</font>

236
00:09:53,940 --> 00:09:59,820
prescribed chip<font color="#CCCCCC"> in the world there</font><font color="#E5E5E5"> is</font>

237
00:09:57,870 --> 00:10:03,210
the lowest project which is<font color="#E5E5E5"> working on</font>

238
00:09:59,820 --> 00:10:06,270
<font color="#E5E5E5">designing and the community sock but</font>

239
00:10:03,210 --> 00:10:08,610
that's still a lot<font color="#CCCCCC"> of work and until</font><font color="#E5E5E5"> we</font>

240
00:10:06,270 --> 00:10:12,750
actually have those chips on our desks

241
00:10:08,610 --> 00:10:17,310
<font color="#CCCCCC">will</font><font color="#E5E5E5"> probably take three four five</font><font color="#CCCCCC"> more</font>

242
00:10:12,750 --> 00:10:19,470
years doing chip design is hard and what

243
00:10:17,310 --> 00:10:21,449
<font color="#E5E5E5">it</font><font color="#CCCCCC"> needs working needs</font><font color="#E5E5E5"> to be paid then</font>

244
00:10:19,470 --> 00:10:25,230
<font color="#CCCCCC">they're struck t shakti is a project</font><font color="#E5E5E5"> in</font>

245
00:10:21,450 --> 00:10:28,110
<font color="#E5E5E5">india which aims at designing a full</font>

246
00:10:25,230 --> 00:10:30,510
family<font color="#E5E5E5"> of</font><font color="#CCCCCC"> RISC five chips from small IT</font>

247
00:10:28,110 --> 00:10:32,580
style<font color="#E5E5E5"> embedded stuff up to super</font>

248
00:10:30,510 --> 00:10:35,370
computer hardware and the<font color="#CCCCCC"> Schechter team</font>

249
00:10:32,580 --> 00:10:38,370
has recently<font color="#E5E5E5"> actually taped out the</font>

250
00:10:35,370 --> 00:10:42,300
first locally produced<font color="#CCCCCC"> Linux capable</font>

251
00:10:38,370 --> 00:10:45,030
chip so what you<font color="#E5E5E5"> here see is a is a</font>

252
00:10:42,300 --> 00:10:47,339
picture of actual risk<font color="#CCCCCC"> five hardware the</font>

253
00:10:45,030 --> 00:10:49,350
left one is<font color="#CCCCCC"> the prototype that had been</font>

254
00:10:47,339 --> 00:10:51,870
presented<font color="#E5E5E5"> at last forced and the right</font>

255
00:10:49,350 --> 00:10:54,240
one is one of<font color="#CCCCCC"> the early</font><font color="#E5E5E5"> G</font><font color="#CCCCCC"> Lipsy</font>

256
00:10:51,870 --> 00:10:56,850
development systems that is the

257
00:10:54,240 --> 00:10:58,860
<font color="#E5E5E5">prototype chip that</font><font color="#CCCCCC"> is an</font><font color="#E5E5E5"> FPGA board</font>

258
00:10:56,850 --> 00:11:01,890
which<font color="#E5E5E5"> acts as Southbridge and provides</font>

259
00:10:58,860 --> 00:11:05,060
PCI Express<font color="#E5E5E5"> and that's a PCI</font><font color="#CCCCCC"> Express</font>

260
00:11:01,890 --> 00:11:05,060
nvme SSD

261
00:11:07,180 --> 00:11:12,670
so why<font color="#CCCCCC"> porting gaming to describe</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> a</font>

262
00:11:10,750 --> 00:11:14,650
physics point of view<font color="#E5E5E5"> Debian and risk</font>

263
00:11:12,670 --> 00:11:15,760
<font color="#CCCCCC">laughs a</font><font color="#E5E5E5"> perfect match we have open</font>

264
00:11:14,650 --> 00:11:17,620
source<font color="#CCCCCC"> hardware we have</font><font color="#E5E5E5"> open</font><font color="#CCCCCC"> source</font>

265
00:11:15,760 --> 00:11:21,220
software<font color="#E5E5E5"> and we would like to combine</font>

266
00:11:17,620 --> 00:11:23,380
those two<font color="#E5E5E5"> there have been efforts of</font>

267
00:11:21,220 --> 00:11:25,180
porting<font color="#CCCCCC"> Debian to open risk but this</font>

268
00:11:23,380 --> 00:11:27,430
<font color="#E5E5E5">those have not been</font><font color="#CCCCCC"> successful because</font>

269
00:11:25,180 --> 00:11:29,670
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the juicy problematic because we</font>

270
00:11:27,430 --> 00:11:32,319
would have<font color="#CCCCCC"> to have have shipped</font>

271
00:11:29,670 --> 00:11:33,670
different GCC versions<font color="#E5E5E5"> on different</font>

272
00:11:32,320 --> 00:11:35,140
platforms<font color="#E5E5E5"> which is something that Debian</font>

273
00:11:33,670 --> 00:11:37,089
does not do Debian<font color="#E5E5E5"> uses the same</font>

274
00:11:35,140 --> 00:11:41,080
versions<font color="#CCCCCC"> on</font><font color="#E5E5E5"> all platforms so that</font><font color="#CCCCCC"> was</font>

275
00:11:37,090 --> 00:11:43,180
<font color="#E5E5E5">not an option the risk</font><font color="#CCCCCC"> rise</font><font color="#E5E5E5"> Abe is</font>

276
00:11:41,080 --> 00:11:44,860
probably the first<font color="#CCCCCC"> optimized a that has</font>

277
00:11:43,180 --> 00:11:46,449
a<font color="#E5E5E5"> realistic chance of actually gaining</font>

278
00:11:44,860 --> 00:11:49,450
<font color="#E5E5E5">mass market traction there are a lot of</font>

279
00:11:46,450 --> 00:11:52,720
<font color="#E5E5E5">companies supporting describe right now</font>

280
00:11:49,450 --> 00:11:55,930
<font color="#E5E5E5">and things in the</font><font color="#CCCCCC"> semiconductor</font><font color="#E5E5E5"> industry</font>

281
00:11:52,720 --> 00:11:58,630
are slowly changing<font color="#CCCCCC"> it's become slowly</font>

282
00:11:55,930 --> 00:12:01,270
possible to actually<font color="#CCCCCC"> have community</font>

283
00:11:58,630 --> 00:12:04,090
let's<font color="#E5E5E5"> say production it's still very</font>

284
00:12:01,270 --> 00:12:06,460
<font color="#E5E5E5">much expensive but things are changing</font>

285
00:12:04,090 --> 00:12:08,200
<font color="#CCCCCC">in the industry and within a few years</font>

286
00:12:06,460 --> 00:12:12,750
<font color="#E5E5E5">it might be possible to</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> have</font>

287
00:12:08,200 --> 00:12:14,470
community<font color="#E5E5E5"> let chip designs mass-produced</font>

288
00:12:12,750 --> 00:12:17,290
<font color="#E5E5E5">yeah</font>

289
00:12:14,470 --> 00:12:20,170
the first work on porting Debian<font color="#E5E5E5"> has</font>

290
00:12:17,290 --> 00:12:22,680
started<font color="#E5E5E5"> in early 2015 and at that time a</font>

291
00:12:20,170 --> 00:12:25,060
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of stuff was still</font><font color="#E5E5E5"> a movement</font>

292
00:12:22,680 --> 00:12:28,750
<font color="#CCCCCC">beneath yields GCC were changing</font>

293
00:12:25,060 --> 00:12:31,089
<font color="#E5E5E5">everyday gilepsy was in its early</font>

294
00:12:28,750 --> 00:12:33,880
infancy and the<font color="#E5E5E5"> linux kernel</font><font color="#CCCCCC"> as well</font>

295
00:12:31,090 --> 00:12:36,340
<font color="#E5E5E5">things have been changing about every</font>

296
00:12:33,880 --> 00:12:38,020
two days and<font color="#E5E5E5"> code</font><font color="#CCCCCC"> generation</font><font color="#E5E5E5"> actually</font>

297
00:12:36,340 --> 00:12:39,340
got incompatible from one week<font color="#CCCCCC"> to</font>

298
00:12:38,020 --> 00:12:41,380
<font color="#CCCCCC">another because of changes and</font><font color="#E5E5E5"> the</font>

299
00:12:39,340 --> 00:12:45,400
compiler in the vineyard<font color="#CCCCCC"> hills which</font>

300
00:12:41,380 --> 00:12:47,560
meant well<font color="#CCCCCC"> if i build stuff today I</font>

301
00:12:45,400 --> 00:12:50,500
probably cannot link it<font color="#E5E5E5"> against stuff</font>

302
00:12:47,560 --> 00:12:52,050
built<font color="#E5E5E5"> in two weeks which is kind of said</font>

303
00:12:50,500 --> 00:12:55,120
if you want to<font color="#E5E5E5"> do binary distribution</font>

304
00:12:52,050 --> 00:12:57,310
<font color="#E5E5E5">then there was somewhat of culture</font><font color="#CCCCCC"> clash</font>

305
00:12:55,120 --> 00:12:59,080
between people<font color="#CCCCCC"> from the hardware design</font>

306
00:12:57,310 --> 00:13:02,920
world<font color="#E5E5E5"> and from the soft design world</font>

307
00:12:59,080 --> 00:13:07,360
that took say half a year to sort<font color="#E5E5E5"> all</font>

308
00:13:02,920 --> 00:13:09,130
that out<font color="#E5E5E5"> and another problem was at that</font>

309
00:13:07,360 --> 00:13:11,020
<font color="#E5E5E5">time we had no</font><font color="#CCCCCC"> queuing no</font><font color="#E5E5E5"> support so</font>

310
00:13:09,130 --> 00:13:13,930
there was only spike spike is<font color="#CCCCCC"> a CPU</font>

311
00:13:11,020 --> 00:13:18,730
architecture emulator which emulates the

312
00:13:13,930 --> 00:13:20,329
<font color="#E5E5E5">basic response</font><font color="#CCCCCC"> of you it only emulates a</font>

313
00:13:18,730 --> 00:13:24,259
block<font color="#E5E5E5"> device and the</font>

314
00:13:20,329 --> 00:13:25,719
serial console but no network so think

315
00:13:24,259 --> 00:13:28,339
you want<font color="#E5E5E5"> to put separate distribution</font>

316
00:13:25,720 --> 00:13:31,279
you build a root system with something

317
00:13:28,339 --> 00:13:31,910
you want to<font color="#CCCCCC"> compile something</font><font color="#E5E5E5"> and find</font>

318
00:13:31,279 --> 00:13:33,470
<font color="#CCCCCC">ok</font>

319
00:13:31,910 --> 00:13:34,910
I need another bit of<font color="#E5E5E5"> software well</font>

320
00:13:33,470 --> 00:13:37,239
normally you<font color="#CCCCCC"> just download it but</font><font color="#E5E5E5"> if you</font>

321
00:13:34,910 --> 00:13:40,850
have no<font color="#CCCCCC"> network</font><font color="#E5E5E5"> that's kind of difficult</font>

322
00:13:37,239 --> 00:13:42,649
<font color="#E5E5E5">so shut down emulator</font><font color="#CCCCCC"> unmount block</font>

323
00:13:40,850 --> 00:13:44,629
device mount block device on host copy

324
00:13:42,649 --> 00:13:46,730
files in<font color="#E5E5E5"> amount block device emulator</font>

325
00:13:44,629 --> 00:13:50,110
again start working<font color="#E5E5E5"> if you have done</font>

326
00:13:46,730 --> 00:13:50,110
that<font color="#E5E5E5"> 20 times</font><font color="#CCCCCC"> you want something</font><font color="#E5E5E5"> else</font>

327
00:13:51,220 --> 00:13:56,619
yeah<font color="#CCCCCC"> due to the API breaks and the</font>

328
00:13:54,079 --> 00:13:58,969
<font color="#CCCCCC">incompatibility is in the tool chain all</font>

329
00:13:56,619 --> 00:14:00,949
early attempts<font color="#CCCCCC"> at actually building</font>

330
00:13:58,970 --> 00:14:03,769
packages have not been successful

331
00:14:00,949 --> 00:14:06,109
so both fedora and<font color="#E5E5E5"> Debian developers</font>

332
00:14:03,769 --> 00:14:07,970
have chosen instead<font color="#E5E5E5"> to work on getting</font>

333
00:14:06,110 --> 00:14:10,429
stuff<font color="#E5E5E5"> upstream and getting stuff</font>

334
00:14:07,970 --> 00:14:13,309
<font color="#CCCCCC">Benefield</font><font color="#E5E5E5"> GCC gilepsy kernel stabilized</font>

335
00:14:10,429 --> 00:14:14,509
so<font color="#E5E5E5"> that we have a stable ABI and can be</font>

336
00:14:13,309 --> 00:14:21,019
sure that<font color="#E5E5E5"> stuff that we build today</font>

337
00:14:14,509 --> 00:14:23,059
<font color="#E5E5E5">still works tomorrow</font><font color="#CCCCCC"> that included some</font>

338
00:14:21,019 --> 00:14:27,189
modifications<font color="#CCCCCC"> to the linker</font><font color="#E5E5E5"> for Debian</font>

339
00:14:23,059 --> 00:14:30,049
<font color="#E5E5E5">stomata</font><font color="#CCCCCC"> yak</font><font color="#E5E5E5"> support that included</font>

340
00:14:27,189 --> 00:14:32,299
<font color="#CCCCCC">getting in agreement about using device</font>

341
00:14:30,049 --> 00:14:34,689
tree for a<font color="#E5E5E5"> hardware</font><font color="#CCCCCC"> description similar</font>

342
00:14:32,299 --> 00:14:39,439
to what we<font color="#E5E5E5"> use on arm and on PowerPC and</font>

343
00:14:34,689 --> 00:14:42,199
recently also MIPS and<font color="#E5E5E5"> well things we're</font>

344
00:14:39,439 --> 00:14:46,368
looking<font color="#CCCCCC"> to add well</font><font color="#E5E5E5"> until early 2016</font><font color="#CCCCCC"> and</font>

345
00:14:42,199 --> 00:14:48,618
we had some form of de ja vu because we

346
00:14:46,369 --> 00:14:51,139
wanted<font color="#E5E5E5"> to get GCC support upstream and</font>

347
00:14:48,619 --> 00:14:53,569
the people who wrote<font color="#E5E5E5"> the GCC support</font>

348
00:14:51,139 --> 00:14:55,699
<font color="#E5E5E5">were happy to do a copyright assignment</font>

349
00:14:53,569 --> 00:14:56,868
<font color="#E5E5E5">and fortunately some of them had work</font>

350
00:14:55,699 --> 00:14:59,628
contracts with the University<font color="#E5E5E5"> of</font>

351
00:14:56,869 --> 00:15:00,980
<font color="#E5E5E5">California which gave the</font><font color="#CCCCCC"> UC be the</font>

352
00:14:59,629 --> 00:15:03,169
copyright in some of the computer

353
00:15:00,980 --> 00:15:04,879
contributions<font color="#E5E5E5"> and UCP was happy to</font>

354
00:15:03,169 --> 00:15:07,160
license the stuff<font color="#CCCCCC"> under</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> free</font><font color="#E5E5E5"> license</font>

355
00:15:04,879 --> 00:15:09,199
<font color="#CCCCCC">under GPL and the beast in a</font><font color="#E5E5E5"> problem but</font>

356
00:15:07,160 --> 00:15:11,569
they were not<font color="#E5E5E5"> willing to</font><font color="#CCCCCC"> agree</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a</font>

357
00:15:09,199 --> 00:15:12,709
copyright assignment<font color="#E5E5E5"> so we were exactly</font>

358
00:15:11,569 --> 00:15:14,509
in the same situation that<font color="#E5E5E5"> they're open</font>

359
00:15:12,709 --> 00:15:16,910
risk people have been facing beforehand

360
00:15:14,509 --> 00:15:19,459
<font color="#E5E5E5">and thinks we're looking</font><font color="#CCCCCC"> dour</font><font color="#E5E5E5"> rather</font>

361
00:15:16,910 --> 00:15:22,790
diam<font color="#CCCCCC"> it took nearly a year to get the</font>

362
00:15:19,459 --> 00:15:25,189
<font color="#E5E5E5">legal stuff sorted out so end of 2 7</font>

363
00:15:22,790 --> 00:15:27,439
2016 the stuff could actually go

364
00:15:25,189 --> 00:15:31,219
upstream<font color="#E5E5E5"> and from then on vineyard</font><font color="#CCCCCC"> Hills</font>

365
00:15:27,439 --> 00:15:32,689
and<font color="#E5E5E5"> Jesus he went rather fast just a few</font>

366
00:15:31,220 --> 00:15:34,040
weeks after<font color="#E5E5E5"> the legal stuff had been</font>

367
00:15:32,689 --> 00:15:35,660
sorted out

368
00:15:34,040 --> 00:15:39,709
when upstream three months later Jesus

369
00:15:35,660 --> 00:15:41,709
he was upstream then came gilepsy and

370
00:15:39,709 --> 00:15:43,579
<font color="#E5E5E5">Colonel the gilepsy and the colonel are</font>

371
00:15:41,709 --> 00:15:45,138
very much<font color="#CCCCCC"> depending on</font><font color="#E5E5E5"> each other</font>

372
00:15:43,579 --> 00:15:48,680
<font color="#CCCCCC">because they use low-level interfaces</font>

373
00:15:45,139 --> 00:15:50,029
<font color="#E5E5E5">and getting death specified out so that</font>

374
00:15:48,680 --> 00:15:52,008
the<font color="#E5E5E5"> G</font><font color="#CCCCCC"> Lipsy people were happy</font><font color="#E5E5E5"> and that</font>

375
00:15:50,029 --> 00:15:56,829
the<font color="#E5E5E5"> colonel people were happy</font><font color="#CCCCCC"> took</font>

376
00:15:52,009 --> 00:15:59,120
<font color="#CCCCCC">merely a further year</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> there on so</font>

377
00:15:56,829 --> 00:16:01,219
effectively<font color="#E5E5E5"> at last forced them exactly</font>

378
00:15:59,120 --> 00:16:04,190
one year<font color="#CCCCCC"> ago we were</font><font color="#E5E5E5"> there that we had</font>

379
00:16:01,220 --> 00:16:06,529
to chain<font color="#E5E5E5"> colonel things were working</font>

380
00:16:04,190 --> 00:16:08,899
things<font color="#E5E5E5"> who have swim we could start with</font>

381
00:16:06,529 --> 00:16:10,699
a<font color="#E5E5E5"> bootstrap of the distribution there</font>

382
00:16:08,899 --> 00:16:12,920
were some tools<font color="#E5E5E5"> that were still missing</font>

383
00:16:10,699 --> 00:16:14,630
<font color="#CCCCCC">gdb</font><font color="#E5E5E5"> Linux support is still missing we</font>

384
00:16:12,920 --> 00:16:16,729
have been metal support but not fallen

385
00:16:14,630 --> 00:16:19,130
asleep<font color="#E5E5E5"> bugging as you have heard</font>

386
00:16:16,730 --> 00:16:20,440
probably<font color="#CCCCCC"> in the talk</font><font color="#E5E5E5"> before LLVM and</font>

387
00:16:19,130 --> 00:16:23,810
clang support is still<font color="#CCCCCC"> work-in-progress</font>

388
00:16:20,440 --> 00:16:27,259
<font color="#E5E5E5">we hope to sometime this year have a</font>

389
00:16:23,810 --> 00:16:29,569
release<font color="#CCCCCC"> that will probably work for</font>

390
00:16:27,259 --> 00:16:32,930
disputing users Java<font color="#E5E5E5"> has been a problem</font>

391
00:16:29,569 --> 00:16:34,969
<font color="#CCCCCC">we have Java support now but only</font>

392
00:16:32,930 --> 00:16:37,969
<font color="#E5E5E5">interpreter support not just in time</font>

393
00:16:34,970 --> 00:16:41,839
compiler<font color="#CCCCCC"> support so Java works but its</font>

394
00:16:37,970 --> 00:16:44,959
<font color="#CCCCCC">dock slow getting chip support is</font><font color="#E5E5E5"> still</font>

395
00:16:41,839 --> 00:16:48,319
quite a bit<font color="#CCCCCC"> of</font><font color="#E5E5E5"> work rust depends on the</font>

396
00:16:44,959 --> 00:16:55,790
LLVM<font color="#E5E5E5"> rolling is something that to my</font>

397
00:16:48,319 --> 00:17:03,410
knowledge<font color="#E5E5E5"> nobody is working</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> okay</font>

398
00:16:55,790 --> 00:17:05,569
somebody<font color="#E5E5E5"> is working on</font><font color="#CCCCCC"> going and then</font>

399
00:17:03,410 --> 00:17:08,599
<font color="#E5E5E5">there of course other languages and</font>

400
00:17:05,569 --> 00:17:10,790
other<font color="#E5E5E5"> compilers v8 is the JavaScript</font>

401
00:17:08,599 --> 00:17:14,270
engine for<font color="#CCCCCC"> node.js</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> not</font>

402
00:17:10,790 --> 00:17:16,280
working<font color="#E5E5E5"> yet yet so now we have compilers</font>

403
00:17:14,270 --> 00:17:19,010
we have been utils we can build code we

404
00:17:16,280 --> 00:17:20,928
can build<font color="#CCCCCC"> packages</font><font color="#E5E5E5"> but we are starting</font>

405
00:17:19,010 --> 00:17:22,609
from<font color="#E5E5E5"> scratch we have nothing for those</font>

406
00:17:20,929 --> 00:17:24,980
<font color="#E5E5E5">craft</font><font color="#CCCCCC"> architecture so how do I get a</font>

407
00:17:22,609 --> 00:17:27,438
distribution<font color="#E5E5E5"> from thin air we have</font>

408
00:17:24,980 --> 00:17:29,750
nothing<font color="#E5E5E5"> well I need a cross compiler so</font>

409
00:17:27,439 --> 00:17:33,169
I run a compiler on a PC<font color="#CCCCCC"> but generate</font>

410
00:17:29,750 --> 00:17:34,909
code for<font color="#CCCCCC"> ascribe and make use of the</font>

411
00:17:33,169 --> 00:17:36,860
Debian multi architecture support which

412
00:17:34,909 --> 00:17:38,210
<font color="#E5E5E5">allows us</font><font color="#CCCCCC"> to have code for multiple</font>

413
00:17:36,860 --> 00:17:42,199
architectures within one root<font color="#CCCCCC"> filesystem</font>

414
00:17:38,210 --> 00:17:44,320
<font color="#E5E5E5">so I can readily generate packages for</font>

415
00:17:42,200 --> 00:17:46,929
<font color="#E5E5E5">new architecture</font>

416
00:17:44,320 --> 00:17:48,668
that of<font color="#CCCCCC"> course requires</font><font color="#E5E5E5"> getting</font><font color="#CCCCCC"> his</font>

417
00:17:46,929 --> 00:17:50,259
crash support into the into the true

418
00:17:48,669 --> 00:17:53,049
<font color="#E5E5E5">giant packages that we had in Debian but</font>

419
00:17:50,259 --> 00:17:57,309
as the support had just been<font color="#E5E5E5"> released</font><font color="#CCCCCC"> a</font>

420
00:17:53,049 --> 00:17:59,080
few<font color="#E5E5E5"> weeks ago the</font><font color="#CCCCCC"> binutils GCC packages</font>

421
00:17:57,309 --> 00:18:01,360
in<font color="#CCCCCC"> debian of course did not yet have</font>

422
00:17:59,080 --> 00:18:03,039
risk<font color="#E5E5E5"> 5 support so the first step was</font>

423
00:18:01,360 --> 00:18:06,959
actually packaging new versions of all

424
00:18:03,039 --> 00:18:06,960
that and getting them into<font color="#E5E5E5"> experimental</font>

425
00:18:07,350 --> 00:18:12,580
then how does<font color="#E5E5E5"> one start in bootstrapping</font>

426
00:18:10,720 --> 00:18:15,700
<font color="#E5E5E5">in your</font><font color="#CCCCCC"> architecture</font><font color="#E5E5E5"> I needed the base</font>

427
00:18:12,580 --> 00:18:17,860
set of packages<font color="#E5E5E5"> so which packages and</font>

428
00:18:15,700 --> 00:18:20,440
how<font color="#CCCCCC"> many are that well</font>

429
00:18:17,860 --> 00:18:22,149
Debian has<font color="#CCCCCC"> package priorities and the</font>

430
00:18:20,440 --> 00:18:25,899
packages<font color="#E5E5E5"> with the priority required are</font>

431
00:18:22,149 --> 00:18:28,120
the other base packages set and well

432
00:18:25,899 --> 00:18:29,739
priority required<font color="#CCCCCC"> ok that's easy just</font><font color="#E5E5E5"> a</font>

433
00:18:28,120 --> 00:18:31,439
handful of package the<font color="#E5E5E5"> 285 package</font>

434
00:18:29,740 --> 00:18:34,629
that's no problem

435
00:18:31,440 --> 00:18:36,580
well actually it<font color="#CCCCCC"> is because those</font>

436
00:18:34,629 --> 00:18:39,580
packages<font color="#E5E5E5"> have dependencies they want</font>

437
00:18:36,580 --> 00:18:42,428
libraries and those libraries have

438
00:18:39,580 --> 00:18:43,840
dependencies themselves and to make to

439
00:18:42,429 --> 00:18:46,809
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to build those libraries</font><font color="#CCCCCC"> I</font>

440
00:18:43,840 --> 00:18:48,279
needed a lot<font color="#E5E5E5"> of other stuff</font><font color="#CCCCCC"> so I need</font>

441
00:18:46,809 --> 00:18:49,360
dependencies of dependencies of

442
00:18:48,279 --> 00:18:52,269
dependencies of dependencies of

443
00:18:49,360 --> 00:18:54,189
<font color="#E5E5E5">dependencies to build stuff which ends</font>

444
00:18:52,269 --> 00:18:57,059
<font color="#E5E5E5">up in several</font><font color="#CCCCCC"> hundred packages I have</font>

445
00:18:54,190 --> 00:19:01,509
stopped counting at nearly<font color="#CCCCCC"> four hundred</font>

446
00:18:57,059 --> 00:19:03,610
<font color="#E5E5E5">one of those problems is that for</font>

447
00:19:01,509 --> 00:19:06,309
<font color="#CCCCCC">example</font><font color="#E5E5E5"> if you have source code that</font>

448
00:19:03,610 --> 00:19:10,120
uses<font color="#CCCCCC"> miss</font><font color="#E5E5E5"> on to build</font><font color="#CCCCCC"> Miss on uses</font>

449
00:19:06,309 --> 00:19:11,918
Python<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Python building Python is a</font>

450
00:19:10,120 --> 00:19:16,120
problem<font color="#CCCCCC"> insofar as</font><font color="#E5E5E5"> python has</font><font color="#CCCCCC"> lots of</font>

451
00:19:11,919 --> 00:19:19,090
dependencies<font color="#CCCCCC"> because</font><font color="#E5E5E5"> python has has</font>

452
00:19:16,120 --> 00:19:20,649
modules for ton of stuff<font color="#E5E5E5"> and to build</font>

453
00:19:19,090 --> 00:19:23,949
<font color="#CCCCCC">pipe</font><font color="#E5E5E5"> in the python package you have</font><font color="#CCCCCC"> to</font>

454
00:19:20,649 --> 00:19:27,508
have all that<font color="#E5E5E5"> stuff so</font><font color="#CCCCCC"> that gets a lot</font>

455
00:19:23,950 --> 00:19:30,129
<font color="#E5E5E5">of rather large dependency chain</font>

456
00:19:27,509 --> 00:19:32,889
dependency issues are<font color="#CCCCCC"> twofold</font><font color="#E5E5E5"> one are</font>

457
00:19:30,129 --> 00:19:36,779
deep dependency chains<font color="#E5E5E5"> as I've just</font>

458
00:19:32,889 --> 00:19:40,059
<font color="#E5E5E5">shown an example to build one</font><font color="#CCCCCC"> of the</font>

459
00:19:36,779 --> 00:19:42,669
command<font color="#E5E5E5"> line base packages we had to</font>

460
00:19:40,059 --> 00:19:44,950
<font color="#E5E5E5">cross build some 80 or 90 other packages</font>

461
00:19:42,669 --> 00:19:48,700
<font color="#CCCCCC">just to get the</font><font color="#E5E5E5"> built environment set up</font>

462
00:19:44,950 --> 00:19:51,759
to be able<font color="#E5E5E5"> to compile a similar single</font>

463
00:19:48,700 --> 00:19:54,460
simple package another problem<font color="#CCCCCC"> our</font>

464
00:19:51,759 --> 00:19:56,740
circular dependency chains<font color="#CCCCCC"> which is</font>

465
00:19:54,460 --> 00:19:57,720
where the caches is its tail<font color="#E5E5E5"> packages in</font>

466
00:19:56,740 --> 00:20:00,270
<font color="#E5E5E5">the base system</font>

467
00:19:57,720 --> 00:20:02,220
for example audit audit<font color="#E5E5E5"> requires open</font>

468
00:20:00,270 --> 00:20:04,770
<font color="#E5E5E5">add up for building open</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> up in turn</font>

469
00:20:02,220 --> 00:20:07,680
requires service<font color="#E5E5E5"> SSL for building cyrus</font>

470
00:20:04,770 --> 00:20:11,430
SSL requires<font color="#CCCCCC"> painful building and</font><font color="#E5E5E5"> Pam</font>

471
00:20:07,680 --> 00:20:14,360
<font color="#CCCCCC">okay as auto for building so the cat has</font>

472
00:20:11,430 --> 00:20:18,660
just found its tail<font color="#E5E5E5"> how to resolve that</font>

473
00:20:14,360 --> 00:20:20,429
<font color="#E5E5E5">we have to build packages with smaller</font>

474
00:20:18,660 --> 00:20:22,500
feature sets to just remove certain

475
00:20:20,430 --> 00:20:25,770
<font color="#E5E5E5">features from the packages to break the</font>

476
00:20:22,500 --> 00:20:28,140
cycle<font color="#CCCCCC"> and doing that</font><font color="#E5E5E5"> by hand</font><font color="#CCCCCC"> is rather</font>

477
00:20:25,770 --> 00:20:31,139
tedious so<font color="#E5E5E5"> Debian has</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> mechanism for</font>

478
00:20:28,140 --> 00:20:32,790
<font color="#CCCCCC">that</font><font color="#E5E5E5"> that is called build profiles so</font>

479
00:20:31,140 --> 00:20:35,640
you can build a package with different

480
00:20:32,790 --> 00:20:37,590
feature profiles and during the

481
00:20:35,640 --> 00:20:39,090
bootstrap process<font color="#CCCCCC"> we</font><font color="#E5E5E5"> actually have added</font>

482
00:20:37,590 --> 00:20:40,980
several build profiles to<font color="#CCCCCC"> the number</font><font color="#E5E5E5"> of</font>

483
00:20:39,090 --> 00:20:45,120
packages to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to break those</font>

484
00:20:40,980 --> 00:20:48,450
dependency cycles<font color="#E5E5E5"> what what you see here</font>

485
00:20:45,120 --> 00:20:51,060
is the dependency<font color="#CCCCCC"> graph of Firefox</font><font color="#E5E5E5"> just</font>

486
00:20:48,450 --> 00:20:54,780
to give<font color="#E5E5E5"> you an impression that</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> top</font>

487
00:20:51,060 --> 00:20:56,250
there is the Firefox source the boxes

488
00:20:54,780 --> 00:20:59,600
<font color="#CCCCCC">that are</font><font color="#E5E5E5"> elected</font><font color="#CCCCCC"> by the brownish lines</font>

489
00:20:56,250 --> 00:21:02,580
<font color="#E5E5E5">are direct built dependencies</font><font color="#CCCCCC"> of Firefox</font>

490
00:20:59,600 --> 00:21:04,110
<font color="#CCCCCC">each of those</font><font color="#E5E5E5"> built dependencies has</font>

491
00:21:02,580 --> 00:21:06,000
runtime dependencies which are all those

492
00:21:04,110 --> 00:21:07,860
<font color="#CCCCCC">blooood lines going</font><font color="#E5E5E5"> to different</font>

493
00:21:06,000 --> 00:21:09,360
<font color="#E5E5E5">packages and that's just the first level</font>

494
00:21:07,860 --> 00:21:12,570
of dependencies because<font color="#E5E5E5"> all of those</font>

495
00:21:09,360 --> 00:21:14,370
blue<font color="#CCCCCC"> Ashla</font><font color="#E5E5E5"> with packages have</font>

496
00:21:12,570 --> 00:21:16,530
dependability penances on their own

497
00:21:14,370 --> 00:21:17,939
which have<font color="#CCCCCC"> runtime depends so if you</font>

498
00:21:16,530 --> 00:21:20,820
look at that<font color="#E5E5E5"> graph you can probably</font>

499
00:21:17,940 --> 00:21:24,740
imagine that building<font color="#E5E5E5"> Firefox comes very</font>

500
00:21:20,820 --> 00:21:24,740
very<font color="#E5E5E5"> very late in the bootstrap process</font>

501
00:21:27,410 --> 00:21:31,170
I've said that we've started cross

502
00:21:29,700 --> 00:21:34,290
building because<font color="#CCCCCC"> we had no native code</font>

503
00:21:31,170 --> 00:21:38,220
<font color="#CCCCCC">and cross building is not as easy as</font>

504
00:21:34,290 --> 00:21:40,920
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> a TF builds several package which</font>

505
00:21:38,220 --> 00:21:43,710
will finally<font color="#E5E5E5"> they won't cross</font><font color="#CCCCCC"> build</font>

506
00:21:40,920 --> 00:21:45,470
properly there are differences in cross

507
00:21:43,710 --> 00:21:49,980
build support in different<font color="#CCCCCC"> build systems</font>

508
00:21:45,470 --> 00:21:52,650
people often<font color="#CCCCCC"> say</font><font color="#E5E5E5"> new</font><font color="#CCCCCC"> Auto tools all</font>

509
00:21:49,980 --> 00:21:52,910
stuff<font color="#E5E5E5"> ugly stuff and for just leave me</font>

510
00:21:52,650 --> 00:21:55,950
alone

511
00:21:52,910 --> 00:21:58,200
but no other tools has one major

512
00:21:55,950 --> 00:22:00,780
advantage cross building effectively

513
00:21:58,200 --> 00:22:02,430
<font color="#E5E5E5">works out of the</font><font color="#CCCCCC"> box</font><font color="#E5E5E5"> effectively</font>

514
00:22:00,780 --> 00:22:05,100
everything built with<font color="#E5E5E5"> audit hoods just</font>

515
00:22:02,430 --> 00:22:06,810
<font color="#E5E5E5">cross bills that's unfortunately</font>

516
00:22:05,100 --> 00:22:09,120
<font color="#E5E5E5">something that we cannot say about many</font>

517
00:22:06,810 --> 00:22:10,330
<font color="#CCCCCC">CMake and mizzen</font><font color="#E5E5E5"> based projects both</font>

518
00:22:09,120 --> 00:22:13,268
<font color="#CCCCCC">cynic</font><font color="#E5E5E5"> and Maison</font>

519
00:22:10,330 --> 00:22:16,899
have a theory support for cross building

520
00:22:13,269 --> 00:22:18,070
but many packages<font color="#E5E5E5"> that use Maison and</font><font color="#CCCCCC"> C</font>

521
00:22:16,899 --> 00:22:20,080
make don't make use of the

522
00:22:18,070 --> 00:22:22,599
infrastructure that<font color="#E5E5E5"> those</font><font color="#CCCCCC"> do provide and</font>

523
00:22:20,080 --> 00:22:24,549
in practice<font color="#E5E5E5"> we had to fiddle around with</font>

524
00:22:22,599 --> 00:22:27,119
many of the<font color="#CCCCCC"> mizzen</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> sim accusing</font>

525
00:22:24,549 --> 00:22:32,469
packages to actually make them<font color="#CCCCCC"> crossbows</font>

526
00:22:27,119 --> 00:22:35,228
<font color="#E5E5E5">pearl is well just strange proclaims to</font>

527
00:22:32,469 --> 00:22:36,999
be cross buildable<font color="#E5E5E5"> well the way pro</font>

528
00:22:35,229 --> 00:22:39,159
cross building works is that the<font color="#E5E5E5"> per</font>

529
00:22:36,999 --> 00:22:41,619
<font color="#E5E5E5">configure script requires an</font><font color="#CCCCCC"> SSH</font>

530
00:22:39,159 --> 00:22:43,419
<font color="#E5E5E5">connection to system already running the</font>

531
00:22:41,619 --> 00:22:45,070
architecture<font color="#E5E5E5"> I want to build</font><font color="#CCCCCC"> for and</font>

532
00:22:43,419 --> 00:22:46,809
then run the configure script natively

533
00:22:45,070 --> 00:22:49,299
<font color="#CCCCCC">on the architecture which obviously does</font>

534
00:22:46,809 --> 00:22:51,339
not<font color="#E5E5E5"> work in a good</font><font color="#CCCCCC"> strapping scenario so</font>

535
00:22:49,299 --> 00:22:53,440
<font color="#E5E5E5">the only way to build pearl is actually</font>

536
00:22:51,339 --> 00:22:55,859
build all the rest<font color="#CCCCCC"> so I have a native</font>

537
00:22:53,440 --> 00:22:59,139
compiler and then built or natively

538
00:22:55,859 --> 00:23:04,149
<font color="#E5E5E5">another common problem is generators</font>

539
00:22:59,139 --> 00:23:06,488
make files sometimes<font color="#CCCCCC"> compile code which</font>

540
00:23:04,149 --> 00:23:08,708
they then execute to execute to generate

541
00:23:06,489 --> 00:23:10,299
further source code that<font color="#E5E5E5"> works on a</font>

542
00:23:08,709 --> 00:23:12,369
native build so if the if the compiler

543
00:23:10,299 --> 00:23:14,408
is running on a<font color="#CCCCCC"> PC and the binary I'm</font>

544
00:23:12,369 --> 00:23:14,708
creating is for<font color="#CCCCCC"> a PC</font><font color="#E5E5E5"> no problem with</font>

545
00:23:14,409 --> 00:23:16,089
that

546
00:23:14,709 --> 00:23:17,379
when in the crossbolt setting I'm

547
00:23:16,089 --> 00:23:19,928
running a compiler on a PC<font color="#CCCCCC"> but</font>

548
00:23:17,379 --> 00:23:21,968
generating code for<font color="#CCCCCC"> escribe and the PC</font>

549
00:23:19,929 --> 00:23:25,899
cannot<font color="#E5E5E5"> just execute the</font><font color="#CCCCCC"> described code</font>

550
00:23:21,969 --> 00:23:27,820
so that<font color="#CCCCCC"> does not</font><font color="#E5E5E5"> work proper build</font>

551
00:23:25,899 --> 00:23:29,139
systems should take care<font color="#E5E5E5"> of that and in</font>

552
00:23:27,820 --> 00:23:32,320
a<font color="#E5E5E5"> cross good setting use the proper</font>

553
00:23:29,139 --> 00:23:36,399
compiler for for the code generators

554
00:23:32,320 --> 00:23:39,158
<font color="#E5E5E5">another option if one has qmo support is</font>

555
00:23:36,399 --> 00:23:41,549
using<font color="#CCCCCC"> qme user land emulation that helps</font>

556
00:23:39,159 --> 00:23:45,669
but we didn't have<font color="#E5E5E5"> that in the beginning</font>

557
00:23:41,549 --> 00:23:49,649
another<font color="#E5E5E5"> thing is that many upstream</font>

558
00:23:45,669 --> 00:23:53,409
packages<font color="#E5E5E5"> don't properly separate between</font>

559
00:23:49,649 --> 00:23:54,939
<font color="#E5E5E5">host arch and build arch tools so if I</font>

560
00:23:53,409 --> 00:23:59,409
for example want to call<font color="#E5E5E5"> package config</font>

561
00:23:54,940 --> 00:24:04,059
to get the<font color="#CCCCCC"> juicy parameters for linking</font>

562
00:23:59,409 --> 00:24:05,979
to library those are at<font color="#CCCCCC"> least somewhat</font>

563
00:24:04,059 --> 00:24:07,239
architecture<font color="#E5E5E5"> dependent so I need the</font>

564
00:24:05,979 --> 00:24:09,820
package config for<font color="#E5E5E5"> the correct</font>

565
00:24:07,239 --> 00:24:11,950
architecture and many make files<font color="#E5E5E5"> just</font>

566
00:24:09,820 --> 00:24:14,379
don't take that<font color="#CCCCCC"> into account</font><font color="#E5E5E5"> and always</font>

567
00:24:11,950 --> 00:24:16,329
call the package config<font color="#E5E5E5"> for the</font>

568
00:24:14,379 --> 00:24:20,320
architecture the compiler runs on which

569
00:24:16,329 --> 00:24:22,120
is wrong if I'm cross compiling<font color="#E5E5E5"> and then</font>

570
00:24:20,320 --> 00:24:24,370
there<font color="#E5E5E5"> are some cases of</font>

571
00:24:22,120 --> 00:24:26,080
packages that are not multi-touch<font color="#E5E5E5"> codes</font>

572
00:24:24,370 --> 00:24:28,750
double with themselves<font color="#E5E5E5"> that can happen</font>

573
00:24:26,080 --> 00:24:30,990
<font color="#E5E5E5">I'm using a tool to build a package</font>

574
00:24:28,750 --> 00:24:33,550
which has a library dependency<font color="#E5E5E5"> and the</font>

575
00:24:30,990 --> 00:24:35,530
<font color="#CCCCCC">code I'm trying to compile for escribe</font>

576
00:24:33,550 --> 00:24:37,720
also requires<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> library in the</font>

577
00:24:35,530 --> 00:24:39,730
risk<font color="#CCCCCC"> 5 version</font><font color="#E5E5E5"> with most libraries in</font>

578
00:24:37,720 --> 00:24:41,590
<font color="#E5E5E5">Debian it's possible to</font><font color="#CCCCCC"> Co install both</font>

579
00:24:39,730 --> 00:24:43,180
at the same time<font color="#CCCCCC"> but their libraries</font>

580
00:24:41,590 --> 00:24:45,010
where that doesn't<font color="#E5E5E5"> or doesn't yet</font>

581
00:24:43,180 --> 00:24:48,130
<font color="#E5E5E5">properly work so we had to work around</font>

582
00:24:45,010 --> 00:24:51,010
<font color="#CCCCCC">that then there's of course general</font>

583
00:24:48,130 --> 00:24:54,400
portability stuff that had happy to

584
00:24:51,010 --> 00:24:58,120
dependent<font color="#E5E5E5"> how long is an</font><font color="#CCCCCC"> INT isn't in</font><font color="#E5E5E5"> 16</font>

585
00:24:54,400 --> 00:25:00,070
<font color="#E5E5E5">bits 32</font><font color="#CCCCCC"> bits 64 bits that changes from</font>

586
00:24:58,120 --> 00:25:02,469
<font color="#E5E5E5">architecture</font><font color="#CCCCCC"> to architecture there's n</font>

587
00:25:00,070 --> 00:25:05,350
<font color="#CCCCCC">dienes so the way numbers are</font>

588
00:25:02,470 --> 00:25:08,950
represented<font color="#CCCCCC"> in memory the very common</font>

589
00:25:05,350 --> 00:25:10,659
occurrence<font color="#E5E5E5"> is that upstream ships</font>

590
00:25:08,950 --> 00:25:16,590
outdated<font color="#E5E5E5"> convicts up and configures</font>

591
00:25:10,660 --> 00:25:19,630
outer cone files the FSF recommends that

592
00:25:16,590 --> 00:25:21,129
auto confuses should always regenerate

593
00:25:19,630 --> 00:25:22,630
<font color="#E5E5E5">convicts have been gone</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> guests from</font>

594
00:25:21,130 --> 00:25:24,190
current<font color="#E5E5E5"> upstream so that new</font>

595
00:25:22,630 --> 00:25:26,080
architectures automatically get

596
00:25:24,190 --> 00:25:29,890
supported when many upstream<font color="#E5E5E5"> authors</font>

597
00:25:26,080 --> 00:25:32,139
just put the versions they have used

598
00:25:29,890 --> 00:25:33,850
when building the real<font color="#CCCCCC"> table or which I</font>

599
00:25:32,140 --> 00:25:36,900
<font color="#CCCCCC">wrote and they don't know about describe</font>

600
00:25:33,850 --> 00:25:39,399
so we had to<font color="#E5E5E5"> replace those</font>

601
00:25:36,900 --> 00:25:42,970
another thing that's rather common is

602
00:25:39,400 --> 00:25:46,630
atomic support<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a tiny but</font>

603
00:25:42,970 --> 00:25:48,430
important difference<font color="#E5E5E5"> how to call how to</font>

604
00:25:46,630 --> 00:25:52,000
link in<font color="#CCCCCC"> lippy</font><font color="#E5E5E5"> thread there is the -</font>

605
00:25:48,430 --> 00:25:53,940
pthread flag to the compiler<font color="#CCCCCC"> and just -</font>

606
00:25:52,000 --> 00:25:57,640
LP thread which just links the library

607
00:25:53,940 --> 00:25:59,680
problem<font color="#E5E5E5"> with that is on</font><font color="#CCCCCC"> PCs just linking</font>

608
00:25:57,640 --> 00:26:02,200
the<font color="#CCCCCC"> pthread</font><font color="#E5E5E5"> library is enough that works</font>

609
00:25:59,680 --> 00:26:04,420
<font color="#E5E5E5">that's the case for</font><font color="#CCCCCC"> x86 and AMD</font><font color="#E5E5E5"> 64</font>

610
00:26:02,200 --> 00:26:07,560
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> not the case for</font><font color="#CCCCCC"> quite</font><font color="#E5E5E5"> a bunch of</font>

611
00:26:04,420 --> 00:26:10,180
<font color="#E5E5E5">other architectures and as most</font>

612
00:26:07,560 --> 00:26:12,399
developers<font color="#E5E5E5"> probably develop on PC</font>

613
00:26:10,180 --> 00:26:14,110
hardware<font color="#E5E5E5"> they just don't look at</font>

614
00:26:12,400 --> 00:26:16,530
<font color="#E5E5E5">something like that so we had to patch</font>

615
00:26:14,110 --> 00:26:19,060
quite a number<font color="#E5E5E5"> of packages for that and</font>

616
00:26:16,530 --> 00:26:21,129
then there are packages<font color="#E5E5E5"> that actually</font>

617
00:26:19,060 --> 00:26:24,190
require<font color="#E5E5E5"> handcrafting header files for</font>

618
00:26:21,130 --> 00:26:28,180
each new architecture<font color="#E5E5E5"> Lib Lib tree error</font>

619
00:26:24,190 --> 00:26:31,120
is one of those<font color="#E5E5E5"> examples then there's</font>

620
00:26:28,180 --> 00:26:34,210
type constraints we have<font color="#E5E5E5"> Atomics but on</font>

621
00:26:31,120 --> 00:26:35,590
risk<font color="#CCCCCC"> 5 Atomics</font><font color="#E5E5E5"> are only supported on</font>

622
00:26:34,210 --> 00:26:36,670
native word size is not on smaller

623
00:26:35,590 --> 00:26:41,209
object

624
00:26:36,670 --> 00:26:44,360
the PC architecture<font color="#E5E5E5"> allows using</font><font color="#CCCCCC"> Atomics</font>

625
00:26:41,210 --> 00:26:45,230
<font color="#E5E5E5">on arbitrary object sizes that's not the</font>

626
00:26:44,360 --> 00:26:47,449
case<font color="#E5E5E5"> on risk right</font>

627
00:26:45,230 --> 00:26:49,100
we have<font color="#CCCCCC"> Lib atomic</font><font color="#E5E5E5"> which abstract that</font>

628
00:26:47,450 --> 00:26:51,320
away so if<font color="#E5E5E5"> people use</font><font color="#CCCCCC"> lab atomic that's</font>

629
00:26:49,100 --> 00:26:53,240
not a<font color="#E5E5E5"> problem but again</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> upstream</font>

630
00:26:51,320 --> 00:26:54,980
projects just<font color="#E5E5E5"> assume that the atomic</font>

631
00:26:53,240 --> 00:26:57,920
work on arbitrary<font color="#E5E5E5"> sizes because that's</font>

632
00:26:54,980 --> 00:27:01,160
<font color="#E5E5E5">just the case on PCs</font><font color="#CCCCCC"> but that's not true</font>

633
00:26:57,920 --> 00:27:03,170
for<font color="#E5E5E5"> all</font><font color="#CCCCCC"> other architectures</font><font color="#E5E5E5"> and then</font>

634
00:27:01,160 --> 00:27:06,680
there is of<font color="#CCCCCC"> course stone</font><font color="#E5E5E5"> edge stuff like</font>

635
00:27:03,170 --> 00:27:09,170
looking in the<font color="#E5E5E5"> x11 sources which doesn't</font>

636
00:27:06,680 --> 00:27:12,800
make decisions based on properties like

637
00:27:09,170 --> 00:27:14,420
even in 32-bit then do something<font color="#E5E5E5"> if you</font>

638
00:27:12,800 --> 00:27:17,720
look into the x11 sources<font color="#E5E5E5"> there's really</font>

639
00:27:14,420 --> 00:27:19,850
<font color="#E5E5E5">if architecture is</font><font color="#CCCCCC"> foo</font><font color="#E5E5E5"> then list of code</font>

640
00:27:17,720 --> 00:27:24,950
if architecture is bar then list of code

641
00:27:19,850 --> 00:27:27,110
if it is bars<font color="#E5E5E5"> list of code and so we had</font>

642
00:27:24,950 --> 00:27:29,360
<font color="#CCCCCC">to write just</font><font color="#E5E5E5"> new code</font>

643
00:27:27,110 --> 00:27:31,100
<font color="#E5E5E5">for</font><font color="#CCCCCC"> that we try to</font><font color="#E5E5E5"> get it upstream but</font>

644
00:27:29,360 --> 00:27:34,040
that didn't<font color="#E5E5E5"> work because the x11</font>

645
00:27:31,100 --> 00:27:35,959
developers<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> want to add code for</font>

646
00:27:34,040 --> 00:27:38,870
new architectures<font color="#CCCCCC"> because they say x11</font>

647
00:27:35,960 --> 00:27:42,170
<font color="#E5E5E5">it's in maintenance mode and we don't</font>

648
00:27:38,870 --> 00:27:43,699
want new architectures<font color="#E5E5E5"> abstract and then</font>

649
00:27:42,170 --> 00:27:46,430
of course<font color="#E5E5E5"> there's the problem of</font>

650
00:27:43,700 --> 00:27:48,920
compiler support<font color="#E5E5E5"> we like rust so</font>

651
00:27:46,430 --> 00:27:49,520
building for example Firefox<font color="#E5E5E5"> and some</font>

652
00:27:48,920 --> 00:27:51,020
other stuff

653
00:27:49,520 --> 00:27:54,610
currently does not<font color="#E5E5E5"> work because we don't</font>

654
00:27:51,020 --> 00:27:57,020
<font color="#CCCCCC">have a</font><font color="#E5E5E5"> working</font><font color="#CCCCCC"> wescorp</font><font color="#E5E5E5"> alligator yeah</font>

655
00:27:54,610 --> 00:27:58,780
<font color="#E5E5E5">doing all the</font><font color="#CCCCCC"> package bootstrap getting</font>

656
00:27:57,020 --> 00:28:01,639
the ordering<font color="#CCCCCC"> rights</font>

657
00:27:58,780 --> 00:28:03,680
fetching packages is rather tedious<font color="#E5E5E5"> and</font>

658
00:28:01,640 --> 00:28:07,010
of course we would<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to have that</font>

659
00:28:03,680 --> 00:28:09,260
automated fully automating that is way

660
00:28:07,010 --> 00:28:12,620
<font color="#E5E5E5">more</font><font color="#CCCCCC"> complicated than one would expect</font>

661
00:28:09,260 --> 00:28:14,660
<font color="#CCCCCC">at first</font><font color="#E5E5E5"> sight</font><font color="#CCCCCC"> a Debian developer has</font>

662
00:28:12,620 --> 00:28:17,510
some years ago<font color="#E5E5E5"> written his master thesis</font>

663
00:28:14,660 --> 00:28:20,720
about good probability issues which has

664
00:28:17,510 --> 00:28:22,280
helped a<font color="#CCCCCC"> lot and there's a tool by</font>

665
00:28:20,720 --> 00:28:26,530
Hammacher owner which is<font color="#E5E5E5"> called reboot</font>

666
00:28:22,280 --> 00:28:28,610
strap which at least as<font color="#E5E5E5"> far</font><font color="#CCCCCC"> as possible</font>

667
00:28:26,530 --> 00:28:30,980
<font color="#E5E5E5">automates the early boot strip so</font>

668
00:28:28,610 --> 00:28:32,870
getting<font color="#E5E5E5"> new tools getting compiler</font>

669
00:28:30,980 --> 00:28:36,110
<font color="#E5E5E5">getting various new tools getting</font>

670
00:28:32,870 --> 00:28:40,250
<font color="#E5E5E5">several basic libraries which will which</font>

671
00:28:36,110 --> 00:28:42,379
we were<font color="#E5E5E5"> very happy to have so now we</font>

672
00:28:40,250 --> 00:28:43,850
have packages<font color="#E5E5E5"> but we want to have a</font>

673
00:28:42,380 --> 00:28:44,750
proper distribution<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we need to</font><font color="#E5E5E5"> get</font>

674
00:28:43,850 --> 00:28:47,719
those packages<font color="#CCCCCC"> into Debian</font>

675
00:28:44,750 --> 00:28:49,450
infrastructure Debian has two major

676
00:28:47,720 --> 00:28:52,310
<font color="#E5E5E5">types of architecture</font>

677
00:28:49,450 --> 00:28:54,950
so regular<font color="#E5E5E5"> architectures which have</font>

678
00:28:52,310 --> 00:28:57,169
regular stable releases gets security

679
00:28:54,950 --> 00:29:00,320
support for stable releases<font color="#CCCCCC"> and we have</font>

680
00:28:57,170 --> 00:29:03,380
ports architectures which is somewhat<font color="#E5E5E5"> of</font>

681
00:29:00,320 --> 00:29:05,330
<font color="#CCCCCC">the world of the kindergarten of daring</font>

682
00:29:03,380 --> 00:29:07,040
architectures new architectures usually

683
00:29:05,330 --> 00:29:09,800
start in ports<font color="#E5E5E5"> because they're</font>

684
00:29:07,040 --> 00:29:12,889
incomplete<font color="#CCCCCC"> there might be stability</font>

685
00:29:09,800 --> 00:29:14,720
issues at the<font color="#CCCCCC"> beginning and bugs</font><font color="#E5E5E5"> import</font>

686
00:29:12,890 --> 00:29:17,750
architectures don't influence regular

687
00:29:14,720 --> 00:29:20,470
architectures so just unstable they're

688
00:29:17,750 --> 00:29:23,480
unstable testing stable migrations<font color="#CCCCCC"> on</font>

689
00:29:20,470 --> 00:29:25,550
regular architectures still runs<font color="#CCCCCC"> even if</font>

690
00:29:23,480 --> 00:29:28,910
a package is broken<font color="#E5E5E5"> on one of the</font><font color="#CCCCCC"> port</font>

691
00:29:25,550 --> 00:29:31,879
architectures then<font color="#E5E5E5"> for post</font>

692
00:29:28,910 --> 00:29:34,550
architectures we have a bit<font color="#CCCCCC"> more freedom</font>

693
00:29:31,880 --> 00:29:37,100
for<font color="#E5E5E5"> example the post architectures</font><font color="#CCCCCC"> have</font>

694
00:29:34,550 --> 00:29:39,260
an additional suite<font color="#E5E5E5"> in the Debian</font>

695
00:29:37,100 --> 00:29:40,669
archive which<font color="#E5E5E5"> is called unreleased which</font>

696
00:29:39,260 --> 00:29:42,890
is allowed<font color="#CCCCCC"> to carry</font><font color="#E5E5E5"> architecture</font>

697
00:29:40,670 --> 00:29:47,120
specific patches which<font color="#E5E5E5"> are not in the</font>

698
00:29:42,890 --> 00:29:49,760
main package<font color="#CCCCCC"> cause this is only for</font>

699
00:29:47,120 --> 00:29:52,699
<font color="#CCCCCC">temporary</font><font color="#E5E5E5"> stuff so the aim is</font><font color="#CCCCCC"> that</font>

700
00:29:49,760 --> 00:29:55,040
having<font color="#E5E5E5"> unreleased empty that's the final</font>

701
00:29:52,700 --> 00:29:56,510
aim<font color="#E5E5E5"> that while we're working on that</font>

702
00:29:55,040 --> 00:30:01,399
<font color="#E5E5E5">there is some stuff which we currently</font>

703
00:29:56,510 --> 00:30:03,320
can only keep<font color="#CCCCCC"> and unreleased so that's</font>

704
00:30:01,400 --> 00:30:06,350
where we<font color="#CCCCCC"> are right now we have a bunch</font>

705
00:30:03,320 --> 00:30:08,360
<font color="#CCCCCC">of packages we aim at</font><font color="#E5E5E5"> becoming a regular</font>

706
00:30:06,350 --> 00:30:11,540
they've been<font color="#CCCCCC"> architectures</font><font color="#E5E5E5"> sometime in</font>

707
00:30:08,360 --> 00:30:14,840
the future<font color="#CCCCCC"> but that</font><font color="#E5E5E5"> requires being able</font>

708
00:30:11,540 --> 00:30:17,690
to<font color="#E5E5E5"> build about 95% of the archive and we</font>

709
00:30:14,840 --> 00:30:22,250
<font color="#CCCCCC">are not there yet</font><font color="#E5E5E5"> this is a package</font>

710
00:30:17,690 --> 00:30:24,650
<font color="#CCCCCC">build graph the greyish line year has</font>

711
00:30:22,250 --> 00:30:26,300
been the<font color="#E5E5E5"> percentage of those five</font>

712
00:30:24,650 --> 00:30:28,970
packages<font color="#E5E5E5"> that we have been built that</font>

713
00:30:26,300 --> 00:30:31,850
<font color="#E5E5E5">have been built this graph is several</font>

714
00:30:28,970 --> 00:30:35,600
<font color="#E5E5E5">months old the spike that</font><font color="#CCCCCC"> you see here</font>

715
00:30:31,850 --> 00:30:39,469
has<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> been created by porting the</font>

716
00:30:35,600 --> 00:30:41,899
<font color="#CCCCCC">Haskell</font><font color="#E5E5E5"> compiler at that point in time</font>

717
00:30:39,470 --> 00:30:43,880
<font color="#E5E5E5">we got half the</font><font color="#CCCCCC"> bootstrap</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> build a</font>

718
00:30:41,900 --> 00:30:45,940
bunch of<font color="#E5E5E5"> Haskell packages which gave the</font>

719
00:30:43,880 --> 00:30:48,650
<font color="#E5E5E5">dries in available packages</font>

720
00:30:45,940 --> 00:30:50,900
<font color="#E5E5E5">unfortunately the number of packages</font>

721
00:30:48,650 --> 00:30:53,300
<font color="#CCCCCC">actually has dropped down</font><font color="#E5E5E5"> again in the</font>

722
00:30:50,900 --> 00:30:55,310
meantime<font color="#E5E5E5"> because we have some packages</font>

723
00:30:53,300 --> 00:30:56,810
<font color="#CCCCCC">which we had been able to</font><font color="#E5E5E5"> build in the</font>

724
00:30:55,310 --> 00:30:57,460
past but<font color="#E5E5E5"> we which</font><font color="#CCCCCC"> we cannot build</font>

725
00:30:56,810 --> 00:30:59,908
<font color="#E5E5E5">anymore</font>

726
00:30:57,460 --> 00:31:03,359
one of the problems is

727
00:30:59,909 --> 00:31:05,819
that's several upstream sources that

728
00:31:03,359 --> 00:31:08,218
<font color="#E5E5E5">have in</font><font color="#CCCCCC"> the past been</font><font color="#E5E5E5"> using C or C++</font><font color="#CCCCCC"> and</font>

729
00:31:05,819 --> 00:31:11,009
moving to rust<font color="#E5E5E5"> so we could build the old</font>

730
00:31:08,219 --> 00:31:12,539
<font color="#E5E5E5">C or C++ based versions but we can't</font>

731
00:31:11,009 --> 00:31:15,179
currently build the new left based

732
00:31:12,539 --> 00:31:18,658
<font color="#CCCCCC">version so we had to drop out some</font>

733
00:31:15,179 --> 00:31:21,539
packages<font color="#E5E5E5"> another problem is the Qt</font><font color="#CCCCCC"> echo</font>

734
00:31:18,659 --> 00:31:25,019
<font color="#CCCCCC">system</font><font color="#E5E5E5"> which in the past has had its own</font>

735
00:31:21,539 --> 00:31:26,849
<font color="#CCCCCC">C++ Pazza which has now moved</font><font color="#E5E5E5"> to using</font>

736
00:31:25,019 --> 00:31:29,999
<font color="#CCCCCC">LLVM which brings us to the</font><font color="#E5E5E5"> problem that</font>

737
00:31:26,849 --> 00:31:34,079
<font color="#CCCCCC">we don't</font><font color="#E5E5E5"> yet have</font><font color="#CCCCCC"> LLVM we're currently</font>

738
00:31:29,999 --> 00:31:37,309
<font color="#CCCCCC">at 85 85 84 or 85</font><font color="#E5E5E5"> percent of packages</font>

739
00:31:34,079 --> 00:31:42,690
which provides a rather<font color="#E5E5E5"> usable system</font>

740
00:31:37,309 --> 00:31:44,069
<font color="#CCCCCC">but of</font><font color="#E5E5E5"> course it's not everything yet to</font>

741
00:31:42,690 --> 00:31:45,989
<font color="#CCCCCC">become a release our collection</font>

742
00:31:44,069 --> 00:31:47,879
officially supported stable at least

743
00:31:45,989 --> 00:31:49,709
architecture we need to have to have an

744
00:31:47,879 --> 00:31:52,439
installer support that's<font color="#E5E5E5"> work in</font>

745
00:31:49,709 --> 00:31:54,690
progress but what<font color="#E5E5E5"> you finished</font><font color="#CCCCCC"> we need</font>

746
00:31:52,440 --> 00:31:56,639
to have enough built ease<font color="#E5E5E5"> with</font>

747
00:31:54,690 --> 00:31:57,779
redundancy<font color="#E5E5E5"> abilities are the package</font>

748
00:31:56,639 --> 00:31:59,339
builders<font color="#CCCCCC"> that</font><font color="#E5E5E5"> mean users to</font>

749
00:31:57,779 --> 00:32:02,099
automatically compile packages<font color="#E5E5E5"> for all</font>

750
00:31:59,339 --> 00:32:04,408
architectures<font color="#E5E5E5"> and we need to have</font>

751
00:32:02,099 --> 00:32:06,418
everything in infrastructure managed by

752
00:32:04,409 --> 00:32:08,669
the domain<font color="#E5E5E5"> system administrators which</font>

753
00:32:06,419 --> 00:32:09,959
have requirements<font color="#E5E5E5"> so they want</font><font color="#CCCCCC"> reg</font>

754
00:32:08,669 --> 00:32:12,269
knowledgeable server great<font color="#CCCCCC"> hardware</font>

755
00:32:09,959 --> 00:32:15,599
remote management capabilities which is

756
00:32:12,269 --> 00:32:18,299
somewhat difficult with small chip

757
00:32:15,599 --> 00:32:20,729
prototype development boards so that's

758
00:32:18,299 --> 00:32:23,099
also something<font color="#E5E5E5"> we hope to</font><font color="#CCCCCC"> get within</font><font color="#E5E5E5"> the</font>

759
00:32:20,729 --> 00:32:24,329
next<font color="#E5E5E5"> years but we haven't yet and of</font>

760
00:32:23,099 --> 00:32:26,218
course<font color="#CCCCCC"> there need to be people to take</font>

761
00:32:24,329 --> 00:32:30,749
care of<font color="#E5E5E5"> the architecture</font><font color="#CCCCCC"> ok we have</font>

762
00:32:26,219 --> 00:32:32,759
those the Debian installer support is

763
00:32:30,749 --> 00:32:35,069
work in<font color="#CCCCCC"> progress</font><font color="#E5E5E5"> it's possible to build</font>

764
00:32:32,759 --> 00:32:39,509
Debian installer<font color="#CCCCCC"> first-five</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> them</font>

765
00:32:35,069 --> 00:32:42,299
<font color="#CCCCCC">install agate</font><font color="#E5E5E5"> but it's not really usable</font>

766
00:32:39,509 --> 00:32:44,219
yet<font color="#CCCCCC"> we have two</font><font color="#E5E5E5"> issues</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are still</font>

767
00:32:42,299 --> 00:32:46,979
<font color="#CCCCCC">being worked</font><font color="#E5E5E5"> on one is that we</font><font color="#CCCCCC"> have</font>

768
00:32:44,219 --> 00:32:50,519
problems<font color="#CCCCCC"> with elf utils somebody is</font>

769
00:32:46,979 --> 00:32:53,399
<font color="#E5E5E5">working on those that's the last big</font>

770
00:32:50,519 --> 00:32:55,259
blocker<font color="#E5E5E5"> to get in the Debian installer</font>

771
00:32:53,399 --> 00:32:57,329
released another thing is that we

772
00:32:55,259 --> 00:32:59,549
currently don't<font color="#E5E5E5"> yet have bootloader</font>

773
00:32:57,329 --> 00:33:03,029
support the you would port for<font color="#CCCCCC"> escribe</font>

774
00:32:59,549 --> 00:33:06,820
is still<font color="#E5E5E5"> rather new</font>

775
00:33:03,029 --> 00:33:09,190
just yesterday two<font color="#E5E5E5"> days ago the first</font>

776
00:33:06,820 --> 00:33:11,439
open<font color="#CCCCCC"> SPI codebase</font><font color="#E5E5E5"> which we would need</font>

777
00:33:09,190 --> 00:33:13,269
for<font color="#CCCCCC"> that has</font><font color="#E5E5E5"> been published so that's</font>

778
00:33:11,440 --> 00:33:16,929
something<font color="#CCCCCC"> that will that I will that I</font>

779
00:33:13,269 --> 00:33:18,700
will look into into the next<font color="#CCCCCC"> week's then</font>

780
00:33:16,929 --> 00:33:20,860
there's the topic of the<font color="#CCCCCC"> two-bit support</font>

781
00:33:18,700 --> 00:33:24,010
currently<font color="#CCCCCC"> we only support our v60 for</font>

782
00:33:20,860 --> 00:33:26,019
<font color="#CCCCCC">64-bit RISC five because</font><font color="#E5E5E5"> that's where</font>

783
00:33:24,010 --> 00:33:28,690
<font color="#E5E5E5">most of the work has gone in</font><font color="#CCCCCC"> where we</font>

784
00:33:26,019 --> 00:33:30,429
<font color="#E5E5E5">have</font><font color="#CCCCCC"> Hardware</font><font color="#E5E5E5"> 32-bit support is still</font>

785
00:33:28,690 --> 00:33:32,919
<font color="#CCCCCC">working progress because we</font><font color="#E5E5E5"> don't have</font>

786
00:33:30,429 --> 00:33:35,289
32-bit support in gilepsy yet<font color="#E5E5E5"> and the</font>

787
00:33:32,919 --> 00:33:36,840
kernel support<font color="#E5E5E5"> for 32-bit</font><font color="#CCCCCC"> is also not</font>

788
00:33:35,289 --> 00:33:40,240
complete because<font color="#E5E5E5"> that needs to</font><font color="#CCCCCC"> be</font>

789
00:33:36,840 --> 00:33:43,178
coordinated<font color="#E5E5E5"> with gilepsy</font><font color="#CCCCCC"> and we have the</font>

790
00:33:40,240 --> 00:33:46,269
problem<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you might</font><font color="#CCCCCC"> have heard of the</font>

791
00:33:43,179 --> 00:33:51,429
year 2038 problem that we have a time

792
00:33:46,269 --> 00:33:54,669
<font color="#CCCCCC">tag overflow in a few</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> and we want</font>

793
00:33:51,429 --> 00:33:56,350
<font color="#E5E5E5">to ascribe to</font><font color="#CCCCCC"> do that the</font><font color="#E5E5E5"> right way but</font>

794
00:33:54,669 --> 00:33:58,450
that requires infrastructure in the

795
00:33:56,350 --> 00:34:00,340
kernel<font color="#E5E5E5"> and in</font><font color="#CCCCCC"> july pc which hasn't</font><font color="#E5E5E5"> been</font>

796
00:33:58,450 --> 00:34:03,100
there in<font color="#E5E5E5"> previously lip series which is</font>

797
00:34:00,340 --> 00:34:05,129
just now getting<font color="#CCCCCC"> into gilepsy and we</font>

798
00:34:03,100 --> 00:34:07,689
didn't<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> release a 32-bit port</font>

799
00:34:05,130 --> 00:34:08,950
<font color="#CCCCCC">that</font><font color="#E5E5E5"> would be badly incompatible in a</font>

800
00:34:07,690 --> 00:34:13,540
few years because<font color="#E5E5E5"> we would have maybe</font><font color="#CCCCCC"> I</font>

801
00:34:08,949 --> 00:34:18,219
<font color="#E5E5E5">break to handle the year 2038 problem so</font>

802
00:34:13,540 --> 00:34:20,290
that takes a bit<font color="#E5E5E5"> fedora and Red Hat</font>

803
00:34:18,219 --> 00:34:23,348
probably won't release 32-bit ports

804
00:34:20,290 --> 00:34:25,149
<font color="#CCCCCC">debian might do it we'd see if</font>

805
00:34:23,349 --> 00:34:28,929
interesting<font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> becomes available</font>

806
00:34:25,149 --> 00:34:30,779
for<font color="#E5E5E5"> 32-bit platforms the way such</font>

807
00:34:28,929 --> 00:34:35,200
<font color="#CCCCCC">hardware could become available</font><font color="#E5E5E5"> are</font>

808
00:34:30,780 --> 00:34:36,849
small<font color="#CCCCCC"> fpga implementations designing</font>

809
00:34:35,199 --> 00:34:40,569
CPUs on field<font color="#E5E5E5"> programmable gate arrays</font>

810
00:34:36,849 --> 00:34:44,409
is a common technique<font color="#CCCCCC"> in commercial CPU</font>

811
00:34:40,570 --> 00:34:47,980
development<font color="#CCCCCC"> but in the source field</font><font color="#E5E5E5"> that</font>

812
00:34:44,409 --> 00:34:53,159
hasn't been done very<font color="#E5E5E5"> much because</font><font color="#CCCCCC"> for</font>

813
00:34:47,980 --> 00:34:55,599
all available<font color="#E5E5E5"> FPGA types one had to have</font>

814
00:34:53,159 --> 00:34:57,849
propriety proprietary compiler<font color="#E5E5E5"> tool</font>

815
00:34:55,599 --> 00:35:00,910
<font color="#E5E5E5">chains FPGA tool chains from the big</font>

816
00:34:57,849 --> 00:35:02,740
<font color="#CCCCCC">fpga venice and well</font><font color="#E5E5E5"> open-source</font>

817
00:35:00,910 --> 00:35:06,339
developers<font color="#E5E5E5"> won't don't want to build</font>

818
00:35:02,740 --> 00:35:08,080
<font color="#E5E5E5">this stuff based on proprietary tools in</font>

819
00:35:06,339 --> 00:35:11,740
<font color="#E5E5E5">recent years there has been a lot</font><font color="#CCCCCC"> of</font>

820
00:35:08,080 --> 00:35:13,270
<font color="#E5E5E5">effort to</font><font color="#CCCCCC"> reverse engineer the FPGA</font>

821
00:35:11,740 --> 00:35:15,529
bitstream configuration format and to

822
00:35:13,270 --> 00:35:17,570
<font color="#CCCCCC">implement</font><font color="#E5E5E5"> free to chains for FPGAs</font>

823
00:35:15,530 --> 00:35:19,550
we actually<font color="#E5E5E5"> have one that's fully</font>

824
00:35:17,570 --> 00:35:22,220
working that's project<font color="#CCCCCC"> I storm which is</font>

825
00:35:19,550 --> 00:35:24,200
packaged in the IBM<font color="#E5E5E5"> so you can actually</font>

826
00:35:22,220 --> 00:35:28,339
<font color="#E5E5E5">implement</font><font color="#CCCCCC"> the CPU with tools</font><font color="#E5E5E5"> in Debian</font>

827
00:35:24,200 --> 00:35:30,259
<font color="#E5E5E5">and run it on an FPGA</font><font color="#CCCCCC"> there's project</font>

828
00:35:28,340 --> 00:35:32,810
trellis which is currently work<font color="#CCCCCC"> in</font>

829
00:35:30,260 --> 00:35:34,580
progress<font color="#CCCCCC"> there's a talk tomorrow</font><font color="#E5E5E5"> just</font>

830
00:35:32,810 --> 00:35:38,240
obsessed from here from the project

831
00:35:34,580 --> 00:35:40,580
<font color="#CCCCCC">Hellas project leader about his support</font>

832
00:35:38,240 --> 00:35:41,390
for the<font color="#E5E5E5"> ECP 5 FPGA series what's</font>

833
00:35:40,580 --> 00:35:44,000
interesting with it

834
00:35:41,390 --> 00:35:46,460
PC p5 is that it's about<font color="#E5E5E5"> 10 times the</font>

835
00:35:44,000 --> 00:35:47,500
size then the small<font color="#CCCCCC"> eyes 40 that we have</font>

836
00:35:46,460 --> 00:35:51,320
supported<font color="#E5E5E5"> right now</font>

837
00:35:47,500 --> 00:35:54,380
problem<font color="#E5E5E5"> with the sizes</font><font color="#CCCCCC"> I can implement</font><font color="#E5E5E5"> a</font>

838
00:35:51,320 --> 00:35:56,750
<font color="#E5E5E5">CPU on lettuce as 40 but that's more</font>

839
00:35:54,380 --> 00:35:59,390
<font color="#E5E5E5">microcontroller class something</font><font color="#CCCCCC"> Lina's</font>

840
00:35:56,750 --> 00:36:04,880
capable with memory<font color="#CCCCCC"> management unit in</font>

841
00:35:59,390 --> 00:36:06,620
that<font color="#CCCCCC"> size is very very difficult David</font>

842
00:36:04,880 --> 00:36:10,580
Shaw has actually<font color="#E5E5E5"> implemented an open</font>

843
00:36:06,620 --> 00:36:13,130
risk CPU on a new<font color="#E5E5E5"> CP 5 and it's planning</font>

844
00:36:10,580 --> 00:36:16,279
<font color="#E5E5E5">also</font><font color="#CCCCCC"> to do a risk RAF implementation on</font>

845
00:36:13,130 --> 00:36:19,790
<font color="#E5E5E5">one then this project x-ray for even</font>

846
00:36:16,280 --> 00:36:22,730
bigger FPGA is from darlings<font color="#E5E5E5"> that's in</font>

847
00:36:19,790 --> 00:36:25,550
<font color="#E5E5E5">rather early stage things are moving</font>

848
00:36:22,730 --> 00:36:27,920
forward<font color="#E5E5E5"> but I wouldn't hold my breath</font>

849
00:36:25,550 --> 00:36:30,590
while waiting that will probably<font color="#CCCCCC"> take</font>

850
00:36:27,920 --> 00:36:34,400
<font color="#E5E5E5">one or two more</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> until we have</font>

851
00:36:30,590 --> 00:36:36,530
<font color="#E5E5E5">something that finally works there well</font>

852
00:36:34,400 --> 00:36:39,320
<font color="#E5E5E5">FPGAs are nice</font><font color="#CCCCCC"> I can actually</font><font color="#E5E5E5"> in place</font>

853
00:36:36,530 --> 00:36:40,940
<font color="#E5E5E5">update my CPU if I have a better version</font>

854
00:36:39,320 --> 00:36:45,620
<font color="#CCCCCC">of my CPU ok compile it</font>

855
00:36:40,940 --> 00:36:49,760
place in the<font color="#E5E5E5"> FPGA</font><font color="#CCCCCC"> you FPU a new CPU but</font>

856
00:36:45,620 --> 00:36:52,730
<font color="#E5E5E5">a few disadvantages the clock rates that</font>

857
00:36:49,760 --> 00:36:55,130
<font color="#CCCCCC">I can achieve</font><font color="#E5E5E5"> are rather low so if you</font>

858
00:36:52,730 --> 00:36:59,540
get<font color="#CCCCCC"> 200 megahertz that's already rather</font>

859
00:36:55,130 --> 00:37:01,250
<font color="#CCCCCC">fast</font><font color="#E5E5E5"> more realistic on cheap FPGAs is</font>

860
00:36:59,540 --> 00:37:04,940
something about 50 megahertz which by

861
00:37:01,250 --> 00:37:06,940
today's standards is just slow getting

862
00:37:04,940 --> 00:37:09,710
fast chips is rather<font color="#E5E5E5"> expensive and</font>

863
00:37:06,940 --> 00:37:13,750
compared with actual mass manufactures

864
00:37:09,710 --> 00:37:17,990
as<font color="#CCCCCC"> X they use a lot of</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of current</font>

865
00:37:13,750 --> 00:37:20,480
another<font color="#E5E5E5"> problem is getting memory</font><font color="#CCCCCC"> modern</font>

866
00:37:17,990 --> 00:37:24,140
<font color="#E5E5E5">memory interfaces are very very complex</font>

867
00:37:20,480 --> 00:37:27,990
and attaching modern double<font color="#E5E5E5"> data rate</font>

868
00:37:24,140 --> 00:37:31,650
memory<font color="#E5E5E5"> to an FPGA is difficult</font>

869
00:37:27,990 --> 00:37:33,000
that requires a<font color="#E5E5E5"> specific file layer that</font>

870
00:37:31,650 --> 00:37:36,720
requires an appropriate memory

871
00:37:33,000 --> 00:37:38,880
controller<font color="#E5E5E5"> that's not easy so we have</font>

872
00:37:36,720 --> 00:37:42,390
<font color="#E5E5E5">currently only the choice either use</font>

873
00:37:38,880 --> 00:37:46,470
memory that's easier to<font color="#E5E5E5"> address but it's</font>

874
00:37:42,390 --> 00:37:49,200
slower and it's more expensive<font color="#CCCCCC"> or if</font>

875
00:37:46,470 --> 00:37:52,890
somebody manages to<font color="#E5E5E5"> reverse-engineer the</font>

876
00:37:49,200 --> 00:37:55,859
common<font color="#CCCCCC"> cdfi layers in the bigger</font><font color="#E5E5E5"> FPGAs</font>

877
00:37:52,890 --> 00:38:02,730
<font color="#E5E5E5">we might be using standard</font><font color="#CCCCCC"> DDI memory</font>

878
00:37:55,859 --> 00:38:04,560
but<font color="#CCCCCC"> that will take</font><font color="#E5E5E5"> AB</font><font color="#CCCCCC"> well we have</font><font color="#E5E5E5"> FPGAs</font>

879
00:38:02,730 --> 00:38:05,910
but there are also projects for<font color="#E5E5E5"> ethics I</font>

880
00:38:04,560 --> 00:38:09,270
have already mentioned the low res

881
00:38:05,910 --> 00:38:11,520
project which is<font color="#E5E5E5"> working on</font><font color="#CCCCCC"> a v60 flow</font>

882
00:38:09,270 --> 00:38:14,820
<font color="#E5E5E5">community sock the current development</font>

883
00:38:11,520 --> 00:38:18,150
version of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> blo risk</font><font color="#E5E5E5"> sock runs on an</font>

884
00:38:14,820 --> 00:38:19,859
FPGA<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> actually runs</font><font color="#E5E5E5"> Debian</font><font color="#CCCCCC"> the</font>

885
00:38:18,150 --> 00:38:24,240
software<font color="#E5E5E5"> development for</font><font color="#CCCCCC"> that chip is</font>

886
00:38:19,859 --> 00:38:26,670
<font color="#E5E5E5">actually using Debian then of course if</font>

887
00:38:24,240 --> 00:38:28,890
I want to<font color="#CCCCCC"> mass-produce</font><font color="#E5E5E5"> a chip there's</font>

888
00:38:26,670 --> 00:38:30,930
<font color="#E5E5E5">not only digital logic in it</font><font color="#CCCCCC"> the CPU</font>

889
00:38:28,890 --> 00:38:32,460
itself<font color="#E5E5E5"> is digital logic but I need what</font>

890
00:38:30,930 --> 00:38:33,330
is<font color="#E5E5E5"> regulators I need analog digital</font>

891
00:38:32,460 --> 00:38:35,460
converters

892
00:38:33,330 --> 00:38:37,710
I need a<font color="#E5E5E5"> random number generator</font><font color="#CCCCCC"> I need</font>

893
00:38:35,460 --> 00:38:39,240
a<font color="#CCCCCC"> browser detection to make sure that</font>

894
00:38:37,710 --> 00:38:41,099
the voltage doesn't<font color="#E5E5E5"> drop too much</font><font color="#CCCCCC"> so</font>

895
00:38:39,240 --> 00:38:42,810
there's a lot<font color="#CCCCCC"> of analog technology which</font>

896
00:38:41,099 --> 00:38:45,810
you also need to<font color="#CCCCCC"> produce</font><font color="#E5E5E5"> at your chip</font>

897
00:38:42,810 --> 00:38:47,460
<font color="#CCCCCC">and there's a</font><font color="#E5E5E5"> spin-off in Columbia</font>

898
00:38:45,810 --> 00:38:49,410
spin-off of the university<font color="#CCCCCC"> industry</font>

899
00:38:47,460 --> 00:38:51,869
<font color="#CCCCCC">alder Santana</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Colombia which</font><font color="#E5E5E5"> is</font>

900
00:38:49,410 --> 00:38:57,029
<font color="#E5E5E5">working on providing</font><font color="#CCCCCC"> open source license</font>

901
00:38:51,869 --> 00:39:01,290
<font color="#E5E5E5">and lock components for such CPU there's</font>

902
00:38:57,030 --> 00:39:03,150
also an interesting<font color="#E5E5E5"> project</font><font color="#CCCCCC"> several</font>

903
00:39:01,290 --> 00:39:06,060
<font color="#CCCCCC">people will say that's</font><font color="#E5E5E5"> just insane but</font>

904
00:39:03,150 --> 00:39:08,280
nonetheless I find it interesting<font color="#CCCCCC"> the</font>

905
00:39:06,060 --> 00:39:12,299
liberal<font color="#CCCCCC"> silicon alliance is a group of</font>

906
00:39:08,280 --> 00:39:16,290
people from<font color="#CCCCCC"> chip design world which are</font>

907
00:39:12,300 --> 00:39:17,940
<font color="#E5E5E5">trying to define a standard silicon chip</font>

908
00:39:16,290 --> 00:39:21,210
manufacturing process<font color="#E5E5E5"> currently you have</font>

909
00:39:17,940 --> 00:39:24,180
<font color="#E5E5E5">one problem you want to please chip you</font>

910
00:39:21,210 --> 00:39:27,570
go to one chip<font color="#E5E5E5"> fab and say okay here's</font>

911
00:39:24,180 --> 00:39:31,410
my design<font color="#E5E5E5"> do that for</font><font color="#CCCCCC"> me you have to use</font>

912
00:39:27,570 --> 00:39:33,810
a set of<font color="#E5E5E5"> standard cell libraries from</font>

913
00:39:31,410 --> 00:39:36,569
<font color="#CCCCCC">your fab you are not allowed to</font><font color="#E5E5E5"> disclose</font>

914
00:39:33,810 --> 00:39:38,910
how those look like<font color="#E5E5E5"> so if you want to</font>

915
00:39:36,570 --> 00:39:41,220
build<font color="#CCCCCC"> your</font><font color="#E5E5E5"> chip in another fab you can't</font>

916
00:39:38,910 --> 00:39:42,000
just take<font color="#CCCCCC"> your design to another fab</font><font color="#E5E5E5"> you</font>

917
00:39:41,220 --> 00:39:44,160
have to read

918
00:39:42,000 --> 00:39:46,740
<font color="#CCCCCC">you'd</font><font color="#E5E5E5"> you chip with their stem at</font>

919
00:39:44,160 --> 00:39:49,109
<font color="#CCCCCC">celebre</font><font color="#E5E5E5"> there is no portability between</font>

920
00:39:46,740 --> 00:39:51,149
<font color="#CCCCCC">fabs</font><font color="#E5E5E5"> and the liberal Silicon Alliance is</font>

921
00:39:49,109 --> 00:39:53,190
working<font color="#CCCCCC"> on defining a standardized</font>

922
00:39:51,150 --> 00:39:56,369
process<font color="#E5E5E5"> that is actually transferable</font>

923
00:39:53,190 --> 00:39:59,400
<font color="#CCCCCC">from one factor</font><font color="#E5E5E5"> another they've started</font>

924
00:39:56,369 --> 00:40:01,800
very very<font color="#E5E5E5"> small</font><font color="#CCCCCC"> they currently have done</font>

925
00:39:59,400 --> 00:40:04,619
the first prototype chips which<font color="#E5E5E5"> are</font>

926
00:40:01,800 --> 00:40:07,170
based on<font color="#CCCCCC"> one micrometer node size</font><font color="#E5E5E5"> that's</font>

927
00:40:04,619 --> 00:40:09,840
technology from the early 80s<font color="#E5E5E5"> so nothing</font>

928
00:40:07,170 --> 00:40:11,849
you could build a modern CPU in but

929
00:40:09,840 --> 00:40:14,250
<font color="#E5E5E5">that's a</font><font color="#CCCCCC"> long-term project they're</font>

930
00:40:11,849 --> 00:40:16,710
<font color="#CCCCCC">estimating a</font><font color="#E5E5E5"> time frame</font><font color="#CCCCCC"> of perhaps</font><font color="#E5E5E5"> 10</font><font color="#CCCCCC"> or</font>

931
00:40:14,250 --> 00:40:19,800
15 years<font color="#E5E5E5"> so nothing for tomorrow</font><font color="#CCCCCC"> but</font>

932
00:40:16,710 --> 00:40:22,530
nonetheless<font color="#E5E5E5"> interesting and then there's</font>

933
00:40:19,800 --> 00:40:24,540
<font color="#E5E5E5">chips</font><font color="#CCCCCC"> omegas which is a project</font><font color="#E5E5E5"> to</font>

934
00:40:22,530 --> 00:40:27,630
<font color="#CCCCCC">improve</font><font color="#E5E5E5"> the software side</font><font color="#CCCCCC"> forensic</font>

935
00:40:24,540 --> 00:40:32,400
design which also has a talk tomorrow

936
00:40:27,630 --> 00:40:36,050
upstairs they are aiming to produce a

937
00:40:32,400 --> 00:40:41,970
community-funded small<font color="#CCCCCC"> CPU this</font><font color="#E5E5E5"> is</font>

938
00:40:36,050 --> 00:40:45,810
16-bit 32-bit 660<font color="#CCCCCC"> aks</font><font color="#E5E5E5"> that 80 type stuff</font>

939
00:40:41,970 --> 00:40:48,359
and have actually managed to<font color="#E5E5E5"> get the</font>

940
00:40:45,810 --> 00:40:50,520
design done<font color="#E5E5E5"> but in the first round the</font>

941
00:40:48,359 --> 00:40:54,000
funding for the<font color="#E5E5E5"> actual mass production</font>

942
00:40:50,520 --> 00:40:57,990
<font color="#E5E5E5">of the chip didn't work out</font><font color="#CCCCCC"> there trying</font>

943
00:40:54,000 --> 00:41:01,470
to do another<font color="#E5E5E5"> run</font><font color="#CCCCCC"> and we'd see how far</font>

944
00:40:57,990 --> 00:41:03,149
<font color="#E5E5E5">they get so that's my talk so far</font>

945
00:41:01,470 --> 00:41:10,879
<font color="#E5E5E5">questions</font>

946
00:41:03,150 --> 00:41:10,880
[Applause]

947
00:41:36,040 --> 00:41:58,730
it still<font color="#E5E5E5"> needs to be</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I try to</font>

948
00:41:56,420 --> 00:42:01,030
repeat that because<font color="#CCCCCC"> people</font><font color="#E5E5E5"> of the stream</font>

949
00:41:58,730 --> 00:42:05,990
probably haven't heard the comment<font color="#E5E5E5"> and</font>

950
00:42:01,030 --> 00:42:08,990
so to get rust<font color="#CCCCCC"> one does</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> need to</font>

951
00:42:05,990 --> 00:42:11,240
<font color="#CCCCCC">have LLVM working but there are also</font>

952
00:42:08,990 --> 00:42:13,819
less specific patches<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 11 which also</font>

953
00:42:11,240 --> 00:42:27,229
<font color="#E5E5E5">need to be ported which would also need</font>

954
00:42:13,820 --> 00:42:28,790
<font color="#E5E5E5">to be done yeah to be abstract the</font>

955
00:42:27,230 --> 00:42:31,750
question was how<font color="#CCCCCC"> has there been handing</font>

956
00:42:28,790 --> 00:42:36,220
<font color="#E5E5E5">those patches currently not at all</font>

957
00:42:31,750 --> 00:42:39,580
we haven't actually<font color="#E5E5E5"> looked into that yet</font>

958
00:42:36,220 --> 00:42:39,580
further<font color="#E5E5E5"> questions</font>

959
00:42:55,250 --> 00:43:15,810
I'm sorry it didn't just didn't

960
00:42:57,630 --> 00:43:18,600
understand that<font color="#E5E5E5"> because the question was</font>

961
00:43:15,810 --> 00:43:23,520
<font color="#CCCCCC">Debian has</font><font color="#E5E5E5"> rather recently bootstrapped</font>

962
00:43:18,600 --> 00:43:25,589
<font color="#CCCCCC">I'm 64 and how much of</font><font color="#E5E5E5"> the bootstrapping</font>

963
00:43:23,520 --> 00:43:29,070
procedure has have<font color="#CCCCCC"> we been able to reuse</font>

964
00:43:25,590 --> 00:43:32,030
for<font color="#E5E5E5"> living risk right bootstrap actually</font>

965
00:43:29,070 --> 00:43:34,440
quite a bit during the<font color="#CCCCCC"> I'm 64 bootstrap</font>

966
00:43:32,030 --> 00:43:37,410
<font color="#E5E5E5">several packages have gained build</font>

967
00:43:34,440 --> 00:43:41,370
profiles<font color="#E5E5E5"> to make dependency cycle</font>

968
00:43:37,410 --> 00:43:45,060
resolution easier and<font color="#E5E5E5"> that has actually</font>

969
00:43:41,370 --> 00:43:48,270
helped a lot<font color="#E5E5E5"> the risk</font><font color="#CCCCCC"> five specific</font>

970
00:43:45,060 --> 00:43:52,410
<font color="#CCCCCC">stuff of course</font><font color="#E5E5E5"> can't take anything from</font>

971
00:43:48,270 --> 00:43:55,410
I'm 64<font color="#E5E5E5"> but the infrastructure has gotten</font>

972
00:43:52,410 --> 00:43:57,540
a lot<font color="#E5E5E5"> better and there are people like</font>

973
00:43:55,410 --> 00:43:59,870
<font color="#CCCCCC">hammer owner who has</font><font color="#E5E5E5"> written the reboot</font>

974
00:43:57,540 --> 00:44:03,180
<font color="#CCCCCC">row two that I had mentioned</font><font color="#E5E5E5"> working</font>

975
00:43:59,870 --> 00:44:06,560
prominently on<font color="#E5E5E5"> making bootstrap ability</font>

976
00:44:03,180 --> 00:44:11,520
better<font color="#E5E5E5"> by fixing cross architecture box</font>

977
00:44:06,560 --> 00:44:14,630
<font color="#E5E5E5">by adding more more build profiles so</font>

978
00:44:11,520 --> 00:44:14,630
<font color="#E5E5E5">that definitely has helped</font>

979
00:44:18,750 --> 00:44:25,319
I actually don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> that has been</font>

980
00:44:23,339 --> 00:44:28,880
handled by lawyers behind closed doors

981
00:44:25,319 --> 00:44:28,880
<font color="#E5E5E5">and I have no information about that</font>

982
00:44:29,599 --> 00:44:35,670
like not within Debian<font color="#E5E5E5"> Debian okay I</font>

983
00:44:32,849 --> 00:44:37,440
just<font color="#CCCCCC"> repeated how was the legal problem</font>

984
00:44:35,670 --> 00:44:40,640
with the copyright assignment of the

985
00:44:37,440 --> 00:44:43,170
<font color="#E5E5E5">jizya code to the FSF been resolved</font><font color="#CCCCCC"> I</font>

986
00:44:40,640 --> 00:44:44,848
really cannot tell<font color="#E5E5E5"> that because they put</font>

987
00:44:43,170 --> 00:44:46,619
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that had been</font><font color="#E5E5E5"> handled between</font>

988
00:44:44,849 --> 00:44:48,329
<font color="#CCCCCC">the rs5 Foundation and the University</font><font color="#E5E5E5"> of</font>

989
00:44:46,619 --> 00:44:50,760
Berkeley and they haven't told<font color="#E5E5E5"> the</font>

990
00:44:48,329 --> 00:44:52,740
public in which<font color="#E5E5E5"> specific way in</font>

991
00:44:50,760 --> 00:45:31,230
<font color="#E5E5E5">agreement was</font><font color="#CCCCCC"> reached so I can tell</font>

992
00:44:52,740 --> 00:45:32,790
anything<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> just repeat for the stream</font>

993
00:45:31,230 --> 00:45:38,940
wasn't<font color="#E5E5E5"> us</font>

994
00:45:32,790 --> 00:45:40,619
the question was that when that<font color="#CCCCCC"> the the</font>

995
00:45:38,940 --> 00:45:44,010
base<font color="#CCCCCC"> packer set</font><font color="#E5E5E5"> appears</font><font color="#CCCCCC"> to be growing</font>

996
00:45:40,619 --> 00:45:45,660
compared to past ports<font color="#E5E5E5"> when the</font><font color="#CCCCCC"> de</font>

997
00:45:44,010 --> 00:45:47,490
<font color="#CCCCCC">two-bit arm had been ported the base</font>

998
00:45:45,660 --> 00:45:50,040
package<font color="#CCCCCC"> set had been something around</font>

999
00:45:47,490 --> 00:45:54,959
200 something packages now we have

1000
00:45:50,040 --> 00:45:57,630
reached nearly<font color="#CCCCCC"> 400 and which which</font>

1001
00:45:54,960 --> 00:46:00,480
problems have been the major pain point

1002
00:45:57,630 --> 00:46:02,970
<font color="#E5E5E5">in porting the first major pain point is</font>

1003
00:46:00,480 --> 00:46:04,910
has been<font color="#CCCCCC"> Perl the lack of cross</font>

1004
00:46:02,970 --> 00:46:08,520
bootstrap ability of Perl<font color="#CCCCCC"> because</font>

1005
00:46:04,910 --> 00:46:10,859
because all<font color="#CCCCCC"> of the packaging</font>

1006
00:46:08,520 --> 00:46:14,190
infrastructure<font color="#E5E5E5"> Debian is based on Perl</font>

1007
00:46:10,859 --> 00:46:17,910
<font color="#E5E5E5">so you need Perl for almost everything</font>

1008
00:46:14,190 --> 00:46:23,190
<font color="#CCCCCC">so getting getting</font><font color="#E5E5E5"> Perl ready has been a</font>

1009
00:46:17,910 --> 00:46:25,290
<font color="#E5E5E5">real problem the second one in my</font><font color="#CCCCCC"> view</font>

1010
00:46:23,190 --> 00:46:30,319
has<font color="#E5E5E5"> been</font><font color="#CCCCCC"> maison but perhaps where's</font>

1011
00:46:25,290 --> 00:46:30,319
Manuela<font color="#E5E5E5"> perhaps you can comment on that</font>

1012
00:46:51,720 --> 00:46:56,189
can you<font color="#E5E5E5"> talk a bit louder just</font><font color="#CCCCCC"> don't</font>

1013
00:47:37,829 --> 00:47:51,809
<font color="#CCCCCC">many small changes</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> there were</font>

1014
00:47:49,569 --> 00:47:51,808
patches

1015
00:48:03,700 --> 00:48:09,799
<font color="#CCCCCC">okay I'll</font><font color="#E5E5E5"> just repeat</font><font color="#CCCCCC"> that for the</font>

1016
00:48:05,990 --> 00:48:11,720
people<font color="#E5E5E5"> listening on the stream</font><font color="#CCCCCC"> one of</font>

1017
00:48:09,800 --> 00:48:14,090
the pain points<font color="#E5E5E5"> in the early bootstrap</font>

1018
00:48:11,720 --> 00:48:15,470
had been that Jill<font color="#E5E5E5"> observer for his</font>

1019
00:48:14,090 --> 00:48:17,450
craft had only been in experimental

1020
00:48:15,470 --> 00:48:19,750
because we had to use<font color="#CCCCCC"> a newer version</font>

1021
00:48:17,450 --> 00:48:22,279
than all the other<font color="#CCCCCC"> gaming architectures</font>

1022
00:48:19,750 --> 00:48:26,210
<font color="#E5E5E5">and that</font><font color="#CCCCCC"> cost some compatibility</font>

1023
00:48:22,280 --> 00:48:28,220
<font color="#E5E5E5">problems in the old bootstrap and then</font>

1024
00:48:26,210 --> 00:48:32,240
one problem hasn't<font color="#CCCCCC"> been coded Hills</font>

1025
00:48:28,220 --> 00:48:36,080
<font color="#E5E5E5">because Co utils</font><font color="#CCCCCC"> uses help too man</font>

1026
00:48:32,240 --> 00:48:38,359
to generate<font color="#E5E5E5"> man</font><font color="#CCCCCC"> pages and help to man</font>

1027
00:48:36,080 --> 00:48:40,660
<font color="#E5E5E5">does not work in a cross setting and</font>

1028
00:48:38,360 --> 00:48:43,460
that<font color="#E5E5E5"> took quite a bit of</font><font color="#CCCCCC"> workarounds</font>

1029
00:48:40,660 --> 00:48:45,620
<font color="#E5E5E5">that should be resolved in</font><font color="#CCCCCC"> a newer car</font>

1030
00:48:43,460 --> 00:48:47,960
utility version<font color="#CCCCCC"> than we had at</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> time</font>

1031
00:48:45,620 --> 00:49:09,710
but when we<font color="#CCCCCC"> did</font><font color="#E5E5E5"> the bootstrap that was</font>

1032
00:48:47,960 --> 00:49:12,110
indeed a problem that's of course

1033
00:49:09,710 --> 00:49:16,070
another problem when one<font color="#CCCCCC"> builds an</font>

1034
00:49:12,110 --> 00:49:18,680
architecture in emulation<font color="#CCCCCC"> qmo and one</font>

1035
00:49:16,070 --> 00:49:20,720
has<font color="#E5E5E5"> to handle the back the</font><font color="#CCCCCC"> problem is is</font>

1036
00:49:18,680 --> 00:49:22,700
<font color="#E5E5E5">the back in the code I'm trying to debug</font>

1037
00:49:20,720 --> 00:49:25,879
or is the<font color="#CCCCCC"> blackened</font><font color="#E5E5E5"> emulation I'm using</font>

1038
00:49:22,700 --> 00:49:27,859
to run the code we had some cases where

1039
00:49:25,880 --> 00:49:31,330
the code<font color="#CCCCCC"> actually was fine</font><font color="#E5E5E5"> and the back</font>

1040
00:49:27,860 --> 00:49:35,830
was in the emulator which of course has

1041
00:49:31,330 --> 00:49:39,259
<font color="#E5E5E5">needed time</font><font color="#CCCCCC"> and a lot of debugging</font><font color="#E5E5E5"> so</font>

1042
00:49:35,830 --> 00:49:42,710
having real<font color="#E5E5E5"> hardware is of course better</font>

1043
00:49:39,260 --> 00:49:45,410
but when you<font color="#E5E5E5"> start such a port of you</font>

1044
00:49:42,710 --> 00:49:47,570
only have<font color="#E5E5E5"> emulators I'm supposed to UM</font>

1045
00:49:45,410 --> 00:49:50,710
64 port had the same problem you started

1046
00:49:47,570 --> 00:49:53,780
with the<font color="#CCCCCC"> original architecture emulator</font>

1047
00:49:50,710 --> 00:49:56,120
so that's<font color="#CCCCCC"> something that's nearly</font>

1048
00:49:53,780 --> 00:49:57,830
<font color="#E5E5E5">unavoidable if you do an early bootstrap</font>

1049
00:49:56,120 --> 00:49:59,509
that<font color="#E5E5E5"> is easier if you wait with</font>

1050
00:49:57,830 --> 00:50:02,450
bootstrapping<font color="#E5E5E5"> until the architecture has</font>

1051
00:49:59,510 --> 00:50:05,510
already brought used but of course you

1052
00:50:02,450 --> 00:50:07,220
want to<font color="#E5E5E5"> distribute software early in the</font>

1053
00:50:05,510 --> 00:50:10,430
release of new architecture to<font color="#CCCCCC"> make the</font>

1054
00:50:07,220 --> 00:50:12,759
architecture actually<font color="#E5E5E5"> usable further</font>

1055
00:50:10,430 --> 00:50:12,759
questions

1056
00:50:13,070 --> 00:50:19,860
<font color="#E5E5E5">so you've been talking about issues</font>

1057
00:50:15,410 --> 00:50:23,819
across population<font color="#E5E5E5"> support</font><font color="#CCCCCC"> systems know</font>

1058
00:50:19,860 --> 00:50:34,800
<font color="#E5E5E5">that you have</font><font color="#CCCCCC"> food</font><font color="#E5E5E5"> systems always just</font>

1059
00:50:23,820 --> 00:50:37,050
<font color="#CCCCCC">something we have</font><font color="#E5E5E5"> tried</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get the</font>

1060
00:50:34,800 --> 00:50:38,940
<font color="#CCCCCC">cross-compilation patches</font><font color="#E5E5E5"> upstream in</font>

1061
00:50:37,050 --> 00:50:40,620
some cases that has worked and<font color="#E5E5E5"> they were</font>

1062
00:50:38,940 --> 00:50:44,880
accepted in some cases<font color="#E5E5E5"> they weren't</font>

1063
00:50:40,620 --> 00:50:46,620
because some people consider cross blood

1064
00:50:44,880 --> 00:50:48,330
<font color="#E5E5E5">support in maintenance</font><font color="#CCCCCC"> burden because</font>

1065
00:50:46,620 --> 00:50:49,799
you have to think<font color="#CCCCCC"> of things which</font><font color="#E5E5E5"> you</font>

1066
00:50:48,330 --> 00:50:57,770
don't<font color="#E5E5E5"> have to think when building</font>

1067
00:50:49,800 --> 00:50:59,940
natively and<font color="#E5E5E5"> well some upstream</font><font color="#CCCCCC"> offers</font>

1068
00:50:57,770 --> 00:51:02,009
<font color="#E5E5E5">don't see bootstrapping a new</font>

1069
00:50:59,940 --> 00:51:05,070
architecture as a relevant problem for

1070
00:51:02,010 --> 00:51:20,430
their software that's unfortunately<font color="#E5E5E5"> but</font>

1071
00:51:05,070 --> 00:51:24,000
that's reality yes we carried the

1072
00:51:20,430 --> 00:51:25,109
patches in<font color="#CCCCCC"> the Debian packages but</font><font color="#E5E5E5"> we we</font>

1073
00:51:24,000 --> 00:51:29,130
would have preferred<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have them</font>

1074
00:51:25,110 --> 00:51:31,020
upstream<font color="#E5E5E5"> but they weren't accepted just</font>

1075
00:51:29,130 --> 00:51:32,880
<font color="#E5E5E5">because the up some developers consider</font>

1076
00:51:31,020 --> 00:51:36,390
x11<font color="#CCCCCC"> to be in maintenance</font><font color="#E5E5E5"> mode they don't</font>

1077
00:51:32,880 --> 00:51:43,070
want feature<font color="#CCCCCC"> additions</font><font color="#E5E5E5"> even if it's just</font>

1078
00:51:36,390 --> 00:51:43,069
<font color="#CCCCCC">a new architecture any</font><font color="#E5E5E5"> more questions</font>

1079
00:51:56,140 --> 00:52:03,440
we have a CI system<font color="#E5E5E5"> running</font><font color="#CCCCCC"> reboot</font><font color="#E5E5E5"> strap</font>

1080
00:52:00,829 --> 00:52:05,690
<font color="#CCCCCC">em ooh</font><font color="#E5E5E5"> groans base boot strap tool which</font>

1081
00:52:03,440 --> 00:52:08,570
works with<font color="#E5E5E5"> cross building and we have</font>

1082
00:52:05,690 --> 00:52:10,940
<font color="#E5E5E5">Jenkins jobs doing that so if you have</font>

1083
00:52:08,570 --> 00:52:13,670
packages that are part of the base

1084
00:52:10,940 --> 00:52:15,440
systems<font color="#CCCCCC"> it's helpful to look at the</font>

1085
00:52:13,670 --> 00:52:20,750
Jenkins results and see if your stuff

1086
00:52:15,440 --> 00:52:22,160
fails Debian has<font color="#CCCCCC"> Porter</font><font color="#E5E5E5"> boxes for</font>

1087
00:52:20,750 --> 00:52:23,900
multiple architectures on which you as a

1088
00:52:22,160 --> 00:52:25,578
package maintainer can<font color="#CCCCCC"> log in on each</font>

1089
00:52:23,900 --> 00:52:27,560
architecture that<font color="#E5E5E5"> Debian supports and</font>

1090
00:52:25,579 --> 00:52:28,640
try to<font color="#E5E5E5"> build</font><font color="#CCCCCC"> your stuff</font><font color="#E5E5E5"> and of course</font>

1091
00:52:27,560 --> 00:52:30,470
you can cross but<font color="#CCCCCC"> we have cross</font>

1092
00:52:28,640 --> 00:52:32,480
compilers<font color="#E5E5E5"> in Debian we ship cross</font>

1093
00:52:30,470 --> 00:52:36,669
compilers<font color="#CCCCCC"> for all architectures</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font>

1094
00:52:32,480 --> 00:52:39,170
support in Debian so the Debian

1095
00:52:36,670 --> 00:52:45,470
packaging tools<font color="#E5E5E5"> actually support cross</font>

1096
00:52:39,170 --> 00:52:51,020
building packages<font color="#CCCCCC"> so we can just say s</font>

1097
00:52:45,470 --> 00:52:53,149
build - -<font color="#E5E5E5"> host arch is risk 564 and it</font>

1098
00:52:51,020 --> 00:52:54,829
runs across compiler and tries to<font color="#E5E5E5"> cross</font>

1099
00:52:53,150 --> 00:52:56,270
both your package<font color="#E5E5E5"> so if your package</font>

1100
00:52:54,829 --> 00:52:59,650
maintainer it's rather easy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> check</font>

1101
00:52:56,270 --> 00:52:59,650
whether<font color="#E5E5E5"> your stuff is cross buildable</font>

1102
00:52:59,829 --> 00:53:04,790
<font color="#E5E5E5">that's more of a problem</font><font color="#CCCCCC"> upstream is</font>

1103
00:53:02,000 --> 00:53:08,270
more of a problem we had some

1104
00:53:04,790 --> 00:53:13,759
discussions<font color="#E5E5E5"> yesterday</font><font color="#CCCCCC"> evening</font><font color="#E5E5E5"> about ways</font>

1105
00:53:08,270 --> 00:53:16,220
<font color="#E5E5E5">to provide risk 5 machine instances to</font>

1106
00:53:13,760 --> 00:53:18,349
upstream developers to enable them<font color="#CCCCCC"> to</font>

1107
00:53:16,220 --> 00:53:21,109
test build their code and debug issues

1108
00:53:18,349 --> 00:53:23,230
<font color="#E5E5E5">on native hardware that's being worked</font>

1109
00:53:21,109 --> 00:53:23,230
on

1110
00:53:30,200 --> 00:53:36,419
before you<font color="#E5E5E5"> spend time bootstrapping</font><font color="#CCCCCC"> a</font>

1111
00:53:32,910 --> 00:53:38,520
<font color="#E5E5E5">new 32-bit architecture we've already</font>

1112
00:53:36,420 --> 00:53:47,119
seen<font color="#E5E5E5"> problems in Debian with 32-bit</font>

1113
00:53:38,520 --> 00:53:50,369
<font color="#CCCCCC">platform just repeat that for the screen</font>

1114
00:53:47,119 --> 00:53:52,770
<font color="#CCCCCC">the common was that we should try to</font>

1115
00:53:50,369 --> 00:53:55,290
<font color="#E5E5E5">avoid</font><font color="#CCCCCC"> bootstrapping risk why 32-bit</font>

1116
00:53:52,770 --> 00:53:57,240
because other 32-bit architectures in

1117
00:53:55,290 --> 00:53:59,390
Debian are already struggling<font color="#CCCCCC"> with</font>

1118
00:53:57,240 --> 00:54:02,339
keeping<font color="#E5E5E5"> up and building large packages</font>

1119
00:53:59,390 --> 00:54:04,770
one known problem is building stuff like

1120
00:54:02,339 --> 00:54:08,839
<font color="#CCCCCC">AD</font><font color="#E5E5E5"> back build</font><font color="#CCCCCC"> or Firefox which is a</font>

1121
00:54:04,770 --> 00:54:08,839
problem<font color="#CCCCCC"> on 32-bit architectures in fact</font>

1122
00:54:30,760 --> 00:54:38,670
very<font color="#E5E5E5"> nicely okay I'll just repeat</font><font color="#CCCCCC"> that</font>

1123
00:54:36,670 --> 00:54:41,230
for the business on the stream

1124
00:54:38,670 --> 00:54:44,400
<font color="#CCCCCC">counterpoint to that argument when one</font>

1125
00:54:41,230 --> 00:54:46,750
<font color="#E5E5E5">is targeting</font><font color="#CCCCCC"> CPM limitations on</font><font color="#E5E5E5"> FPGAs</font>

1126
00:54:44,400 --> 00:54:48,880
<font color="#CCCCCC">64-bit architectures are</font><font color="#E5E5E5"> a problem</font>

1127
00:54:46,750 --> 00:54:51,490
because<font color="#E5E5E5"> they use a lot more FPGA</font>

1128
00:54:48,880 --> 00:54:53,560
resources than 32-bit architectures way

1129
00:54:51,490 --> 00:54:57,490
more than double<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> dubidouxs</font>

1130
00:54:53,560 --> 00:55:00,430
architectures<font color="#E5E5E5"> and getting a 32-bit risc</font>

1131
00:54:57,490 --> 00:55:04,029
<font color="#CCCCCC">rive</font><font color="#E5E5E5"> cpu linux capable on an FPGA is</font>

1132
00:55:00,430 --> 00:55:07,180
quite doable<font color="#E5E5E5"> even</font><font color="#CCCCCC"> on on smaller</font><font color="#E5E5E5"> not tiny</font>

1133
00:55:04,030 --> 00:55:12,340
but<font color="#E5E5E5"> smaller scale FPGAs but 64-bit</font><font color="#CCCCCC"> CPUs</font>

1134
00:55:07,180 --> 00:55:17,359
<font color="#E5E5E5">is a problem in resource usage any more</font>

1135
00:55:12,340 --> 00:55:25,840
questions<font color="#E5E5E5"> okay thanks</font>

1136
00:55:17,360 --> 00:55:25,840
[Applause]

