1
00:00:05,490 --> 00:00:12,670
one of the reason I did<font color="#E5E5E5"> this though is</font>

2
00:00:08,080 --> 00:00:16,119
that in my current<font color="#E5E5E5"> like</font><font color="#CCCCCC"> day-to-day</font><font color="#E5E5E5"> I</font>

3
00:00:12,670 --> 00:00:18,670
have to deal<font color="#CCCCCC"> with kubernetes clusters</font>

4
00:00:16,119 --> 00:00:21,009
Linux machines and in general like

5
00:00:18,670 --> 00:00:23,470
whatever happens in<font color="#E5E5E5"> that clusters in</font>

6
00:00:21,010 --> 00:00:26,560
those<font color="#CCCCCC"> clusters</font><font color="#E5E5E5"> so it's a bit</font><font color="#CCCCCC"> difficult</font>

7
00:00:23,470 --> 00:00:30,820
sometimes to understand things like we

8
00:00:26,560 --> 00:00:33,699
create<font color="#E5E5E5"> SAS database so one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> things</font>

9
00:00:30,820 --> 00:00:35,079
<font color="#E5E5E5">we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know is for example how many</font>

10
00:00:33,699 --> 00:00:37,358
bytes have been written in<font color="#E5E5E5"> that file</font>

11
00:00:35,079 --> 00:00:39,129
today<font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> and it turns out that</font>

12
00:00:37,359 --> 00:00:41,170
<font color="#CCCCCC">it's not</font><font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> straightforward</font><font color="#E5E5E5"> that</font>

13
00:00:39,129 --> 00:00:44,108
these counting's so we started exploring

14
00:00:41,170 --> 00:00:47,350
<font color="#E5E5E5">a</font><font color="#CCCCCC"> bit about how can</font><font color="#E5E5E5"> you shut those</font>

15
00:00:44,109 --> 00:00:49,210
information from the kernel and<font color="#E5E5E5"> turn it</font>

16
00:00:47,350 --> 00:00:51,159
<font color="#CCCCCC">out that then some point we discovered</font>

17
00:00:49,210 --> 00:00:52,899
<font color="#E5E5E5">that there's this</font><font color="#CCCCCC"> thing called if you</font>

18
00:00:51,159 --> 00:00:54,879
have<font color="#CCCCCC"> saw myself like I didn't know about</font>

19
00:00:52,899 --> 00:00:58,569
<font color="#E5E5E5">it if you have like one year and a half</font>

20
00:00:54,879 --> 00:01:00,849
ago but<font color="#CCCCCC"> had this opportunity to explore</font>

21
00:00:58,569 --> 00:01:04,570
a bit and so I wrap it<font color="#CCCCCC"> up this tool to</font>

22
00:01:00,850 --> 00:01:07,630
tell everyone else<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> every PS</font>

23
00:01:04,569 --> 00:01:10,479
stands for extended<font color="#E5E5E5"> vpf vpf is basically</font>

24
00:01:07,630 --> 00:01:12,070
a unique feature<font color="#CCCCCC"> that lets you get some</font>

25
00:01:10,479 --> 00:01:14,860
<font color="#CCCCCC">information from</font><font color="#E5E5E5"> the machine you're</font>

26
00:01:12,070 --> 00:01:17,798
running on using a<font color="#E5E5E5"> Cisco it's</font>

27
00:01:14,860 --> 00:01:20,049
historically<font color="#E5E5E5"> stands for</font><font color="#CCCCCC"> Berkeley packet</font>

28
00:01:17,799 --> 00:01:23,109
<font color="#E5E5E5">filters so it seems to everyone that is</font>

29
00:01:20,049 --> 00:01:26,140
about just<font color="#CCCCCC"> networking</font><font color="#E5E5E5"> but it turns out</font>

30
00:01:23,109 --> 00:01:28,419
<font color="#E5E5E5">that</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> actually at Bethel is not</font>

31
00:01:26,140 --> 00:01:32,140
in<font color="#CCCCCC"> Linux machines because it has been</font>

32
00:01:28,420 --> 00:01:34,570
extended to do many more<font color="#CCCCCC"> things in this</font>

33
00:01:32,140 --> 00:01:36,969
context we are<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> BPF as a</font>

34
00:01:34,570 --> 00:01:38,589
tracing framework<font color="#CCCCCC"> this is the use case</font>

35
00:01:36,969 --> 00:01:39,908
that<font color="#E5E5E5"> was focusing on because they wanted</font>

36
00:01:38,590 --> 00:01:43,149
to extract the<font color="#E5E5E5"> information from my</font>

37
00:01:39,909 --> 00:01:45,549
machines but he turns out that<font color="#CCCCCC"> they can</font>

38
00:01:43,149 --> 00:01:48,340
actually be<font color="#CCCCCC"> used for other things</font><font color="#E5E5E5"> I will</font>

39
00:01:45,549 --> 00:01:50,679
tell a bit more<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> things</font>

40
00:01:48,340 --> 00:01:51,039
<font color="#CCCCCC">you can use also so that</font><font color="#E5E5E5"> you know about</font>

41
00:01:50,679 --> 00:01:55,170
it

42
00:01:51,039 --> 00:01:55,170
<font color="#E5E5E5">but it's not</font><font color="#CCCCCC"> okay what I'm showing here</font>

43
00:01:55,499 --> 00:02:04,298
<font color="#E5E5E5">BPF is itself it's not about</font><font color="#CCCCCC"> like</font>

44
00:02:00,850 --> 00:02:06,428
extracting informations or doing things

45
00:02:04,299 --> 00:02:11,620
<font color="#E5E5E5">basically like</font><font color="#CCCCCC"> instruments in the kernel</font>

46
00:02:06,429 --> 00:02:13,480
but is<font color="#E5E5E5"> something that you can use that</font>

47
00:02:11,620 --> 00:02:15,370
<font color="#CCCCCC">you can use to instrument</font><font color="#E5E5E5"> out other</font>

48
00:02:13,480 --> 00:02:15,760
other frameworks that are<font color="#E5E5E5"> already in the</font>

49
00:02:15,370 --> 00:02:19,900
corner

50
00:02:15,760 --> 00:02:23,099
right so for example the colonel has

51
00:02:19,900 --> 00:02:25,659
some tracing back<font color="#E5E5E5"> hands that</font><font color="#CCCCCC"> you can use</font>

52
00:02:23,099 --> 00:02:27,399
static trace points key probes<font color="#E5E5E5"> you</font>

53
00:02:25,659 --> 00:02:30,730
<font color="#E5E5E5">probes will you see them</font>

54
00:02:27,400 --> 00:02:34,599
so you basically use<font color="#CCCCCC"> the BPF</font><font color="#E5E5E5"> to access</font>

55
00:02:30,730 --> 00:02:37,030
those tracing frameworks<font color="#CCCCCC"> VBF itself it's</font>

56
00:02:34,599 --> 00:02:38,738
not<font color="#E5E5E5"> a tracing framework it is the tool</font>

57
00:02:37,030 --> 00:02:41,799
<font color="#CCCCCC">that you use to instrumentation</font>

58
00:02:38,739 --> 00:02:43,090
framework to go to the<font color="#CCCCCC"> kernel and use</font>

59
00:02:41,799 --> 00:02:46,239
the tracing framework<font color="#E5E5E5"> right</font>

60
00:02:43,090 --> 00:02:48,819
instead of going there like the kernel

61
00:02:46,239 --> 00:02:51,900
module or with<font color="#CCCCCC"> a Cisco you go there</font>

62
00:02:48,819 --> 00:02:54,369
<font color="#CCCCCC">using VPS</font><font color="#E5E5E5"> one of those rating framers is</font>

63
00:02:51,900 --> 00:02:57,340
that was<font color="#E5E5E5"> posted by</font><font color="#CCCCCC"> the kernel is the</font>

64
00:02:54,370 --> 00:02:59,859
static trace<font color="#E5E5E5"> points static trace points</font>

65
00:02:57,340 --> 00:03:01,510
are<font color="#CCCCCC"> basically trace</font><font color="#E5E5E5"> pantera fixed and in</font>

66
00:02:59,859 --> 00:03:05,290
the kernel that<font color="#E5E5E5"> are ready there for you</font>

67
00:03:01,510 --> 00:03:07,899
to<font color="#E5E5E5"> use they are defined if everyone can</font>

68
00:03:05,290 --> 00:03:13,328
see there's this folder where you<font color="#CCCCCC"> can</font>

69
00:03:07,900 --> 00:03:14,680
see by basically printing<font color="#CCCCCC"> a file where</font>

70
00:03:13,329 --> 00:03:19,030
you can<font color="#E5E5E5"> see all the static</font><font color="#CCCCCC"> race</font><font color="#E5E5E5"> point</font>

71
00:03:14,680 --> 00:03:20,919
<font color="#CCCCCC">defined in your</font><font color="#E5E5E5"> machine</font><font color="#CCCCCC"> and those</font><font color="#E5E5E5"> have</font>

72
00:03:19,030 --> 00:03:22,359
<font color="#CCCCCC">been defined</font><font color="#E5E5E5"> by the kernel developers so</font>

73
00:03:20,919 --> 00:03:26,079
<font color="#E5E5E5">they are ready there they have their</font>

74
00:03:22,359 --> 00:03:28,269
arguments<font color="#CCCCCC"> or returns</font><font color="#E5E5E5"> and you can extract</font>

75
00:03:26,079 --> 00:03:32,769
information from<font color="#CCCCCC"> them</font><font color="#E5E5E5"> we will see out</font>

76
00:03:28,269 --> 00:03:35,139
after what's very interesting<font color="#E5E5E5"> for</font>

77
00:03:32,769 --> 00:03:37,319
everyone<font color="#E5E5E5"> on the other end is to be able</font>

78
00:03:35,139 --> 00:03:40,750
<font color="#E5E5E5">to define dynamic tracing</font>

79
00:03:37,319 --> 00:03:43,828
functionalities so those can<font color="#CCCCCC"> be in the</font>

80
00:03:40,750 --> 00:03:47,169
kernel or in your user space programs

81
00:03:43,829 --> 00:03:51,310
<font color="#E5E5E5">namely</font><font color="#CCCCCC"> key probes in new probes so key</font>

82
00:03:47,169 --> 00:03:53,079
probes are is the<font color="#CCCCCC"> McCain that lets you</font>

83
00:03:51,310 --> 00:03:55,209
extract<font color="#CCCCCC"> information from</font><font color="#E5E5E5"> the kernel so</font>

84
00:03:53,079 --> 00:03:57,459
you don't<font color="#E5E5E5"> attach key probes on a binary</font>

85
00:03:55,209 --> 00:04:01,989
<font color="#E5E5E5">but your touch key probes on the kernel</font>

86
00:03:57,459 --> 00:04:03,730
itself<font color="#CCCCCC"> so your key probe can</font><font color="#E5E5E5"> be attached</font>

87
00:04:01,989 --> 00:04:06,849
to a kernel function<font color="#CCCCCC"> for example if you</font>

88
00:04:03,730 --> 00:04:08,709
want to<font color="#E5E5E5"> see as a the example I made</font>

89
00:04:06,849 --> 00:04:11,530
before<font color="#E5E5E5"> how many</font><font color="#CCCCCC"> bytes</font><font color="#E5E5E5"> have written for a</font>

90
00:04:08,709 --> 00:04:12,940
file you have<font color="#CCCCCC"> touch of EFS right the FS</font>

91
00:04:11,530 --> 00:04:16,209
right is the function<font color="#CCCCCC"> that physical</font>

92
00:04:12,940 --> 00:04:18,488
calls in the kernel every time a file is

93
00:04:16,209 --> 00:04:21,880
written<font color="#E5E5E5"> so every fun everything in the</font>

94
00:04:18,488 --> 00:04:26,138
uses<font color="#CCCCCC"> a file so that's</font><font color="#E5E5E5"> it and the FS ntfs</font>

95
00:04:21,880 --> 00:04:28,010
read on the other end<font color="#E5E5E5"> we do probes you</font>

96
00:04:26,139 --> 00:04:30,050
<font color="#E5E5E5">can attach</font><font color="#CCCCCC"> to your</font><font color="#E5E5E5"> programs</font><font color="#CCCCCC"> functions</font>

97
00:04:28,010 --> 00:04:32,440
<font color="#CCCCCC">we will see that in a program that I</font>

98
00:04:30,050 --> 00:04:37,010
<font color="#E5E5E5">have it's called</font><font color="#CCCCCC"> cattle day show cats</font>

99
00:04:32,440 --> 00:04:39,640
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I mean fun I mean in the main</font>

100
00:04:37,010 --> 00:04:42,500
package it's a good program it<font color="#E5E5E5"> has a</font>

101
00:04:39,640 --> 00:04:44,419
variable<font color="#E5E5E5"> it has a function that reasons</font>

102
00:04:42,500 --> 00:04:46,040
<font color="#CCCCCC">are variable that is an integer</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

103
00:04:44,420 --> 00:04:48,140
the counter<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> reverses that this</font>

104
00:04:46,040 --> 00:04:51,950
program received and it<font color="#E5E5E5"> is in your space</font>

105
00:04:48,140 --> 00:04:55,060
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you can attach to</font><font color="#CCCCCC"> it by attaching</font>

106
00:04:51,950 --> 00:04:57,920
<font color="#E5E5E5">the</font><font color="#CCCCCC"> you probe and then there are 6 DP</font>

107
00:04:55,060 --> 00:05:00,530
it's this focus not<font color="#E5E5E5"> about</font><font color="#CCCCCC"> gtp but</font><font color="#E5E5E5"> I want</font>

108
00:04:57,920 --> 00:05:02,930
to tell<font color="#CCCCCC"> you every mortises x TP</font><font color="#E5E5E5"> is</font>

109
00:05:00,530 --> 00:05:05,090
expressed data path and this framework

110
00:05:02,930 --> 00:05:08,720
built on top of the<font color="#CCCCCC"> PPF</font><font color="#E5E5E5"> to allow you to</font>

111
00:05:05,090 --> 00:05:10,969
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> do bucket mangling and mail</font>

112
00:05:08,720 --> 00:05:16,040
<font color="#E5E5E5">your</font><font color="#CCCCCC"> packets so you can do like you find</font>

113
00:05:10,970 --> 00:05:19,100
<font color="#E5E5E5">things</font><font color="#CCCCCC"> like firewalls</font><font color="#E5E5E5"> but it tell it it</font>

114
00:05:16,040 --> 00:05:22,340
allows you<font color="#E5E5E5"> to do more than</font><font color="#CCCCCC"> just like you</font>

115
00:05:19,100 --> 00:05:24,350
know<font color="#E5E5E5"> reject the packets in kernel space</font>

116
00:05:22,340 --> 00:05:26,710
you can<font color="#CCCCCC"> reject</font><font color="#E5E5E5"> the packets directly in</font>

117
00:05:24,350 --> 00:05:30,890
the network cards<font color="#E5E5E5"> so that you don't even</font>

118
00:05:26,710 --> 00:05:34,549
populate<font color="#E5E5E5"> a task</font><font color="#CCCCCC"> extract</font><font color="#E5E5E5"> the socket</font>

119
00:05:30,890 --> 00:05:36,380
buffer struct for<font color="#CCCCCC"> the packet that</font><font color="#E5E5E5"> gives</font>

120
00:05:34,550 --> 00:05:39,050
you a great<font color="#E5E5E5"> performance improvement</font>

121
00:05:36,380 --> 00:05:41,630
<font color="#CCCCCC">because the kernel didn't even process</font>

122
00:05:39,050 --> 00:05:46,150
the packet so this the biggest<font color="#E5E5E5"> thing is</font>

123
00:05:41,630 --> 00:05:49,150
all<font color="#CCCCCC"> about doing</font><font color="#E5E5E5"> the processing of your</font>

124
00:05:46,150 --> 00:05:49,150
<font color="#E5E5E5">information</font>

125
00:05:55,550 --> 00:05:57,610
you

126
00:05:58,309 --> 00:06:03,979
<font color="#CCCCCC">you've them in userspace</font><font color="#E5E5E5"> there's some</font>

127
00:06:01,389 --> 00:06:06,799
there's a<font color="#E5E5E5"> mechanism in</font><font color="#CCCCCC"> the EPF that's</font>

128
00:06:03,979 --> 00:06:09,169
called<font color="#E5E5E5"> Maps</font><font color="#CCCCCC"> there are a wide set of maps</font>

129
00:06:06,799 --> 00:06:11,599
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> can use that basically allows</font>

130
00:06:09,169 --> 00:06:14,269
you to aggregate information<font color="#CCCCCC"> kernel</font>

131
00:06:11,599 --> 00:06:16,459
<font color="#E5E5E5">level so that</font><font color="#CCCCCC"> you don't overwhelm a</font><font color="#E5E5E5"> user</font>

132
00:06:14,269 --> 00:06:19,429
<font color="#E5E5E5">space because the kernel can easily deal</font>

133
00:06:16,459 --> 00:06:21,169
with like thousands of packets<font color="#E5E5E5"> for</font>

134
00:06:19,429 --> 00:06:23,899
example that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to analyze but</font>

135
00:06:21,169 --> 00:06:25,808
<font color="#E5E5E5">it's better to</font><font color="#CCCCCC"> not send them all of them</font>

136
00:06:23,899 --> 00:06:27,919
in user space if you<font color="#E5E5E5"> just want to know</font>

137
00:06:25,809 --> 00:06:29,269
<font color="#E5E5E5">the bytes at the packet have been</font>

138
00:06:27,919 --> 00:06:31,899
written<font color="#E5E5E5"> in</font><font color="#CCCCCC"> ten seconds you can do that</font>

139
00:06:29,269 --> 00:06:31,899
internal space

140
00:06:32,229 --> 00:06:40,149
the life<font color="#E5E5E5"> cycle of a Nvidia program is</font>

141
00:06:35,259 --> 00:06:43,429
quite simple<font color="#E5E5E5"> when you have seen it</font>

142
00:06:40,149 --> 00:06:46,569
<font color="#CCCCCC">initially it seems a bit crazy</font><font color="#E5E5E5"> that you</font>

143
00:06:43,429 --> 00:06:50,419
have this situation<font color="#E5E5E5"> but the idea is that</font>

144
00:06:46,569 --> 00:06:54,009
you<font color="#CCCCCC"> have a program that is</font><font color="#E5E5E5"> written for a</font>

145
00:06:50,419 --> 00:06:57,318
specific<font color="#CCCCCC"> instruction set that is the</font><font color="#E5E5E5"> BPF</font>

146
00:06:54,009 --> 00:07:00,949
assembly basically<font color="#CCCCCC"> sunset that runs on</font>

147
00:06:57,319 --> 00:07:03,879
<font color="#E5E5E5">the</font><font color="#CCCCCC"> vpf Delta machine</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> vpf virtual</font>

148
00:07:00,949 --> 00:07:06,979
machine is implemented<font color="#E5E5E5"> in the kernel and</font>

149
00:07:03,879 --> 00:07:09,439
it has a thing<font color="#CCCCCC"> called</font><font color="#E5E5E5"> static very fired</font>

150
00:07:06,979 --> 00:07:12,079
that is a<font color="#E5E5E5"> process in the kernel</font><font color="#CCCCCC"> that</font>

151
00:07:09,439 --> 00:07:16,159
basically ensures that you don't<font color="#CCCCCC"> kernel</font>

152
00:07:12,079 --> 00:07:19,189
panic this machine so as<font color="#E5E5E5"> opposite to</font>

153
00:07:16,159 --> 00:07:22,729
<font color="#CCCCCC">write writing</font><font color="#E5E5E5"> a kernel</font><font color="#CCCCCC"> module that of</font>

154
00:07:19,189 --> 00:07:24,049
<font color="#E5E5E5">course gives you like more opportunities</font>

155
00:07:22,729 --> 00:07:28,068
in<font color="#CCCCCC"> terminal customization</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font>

156
00:07:24,049 --> 00:07:31,188
kernel any BPF cannot kernel panic<font color="#E5E5E5"> your</font>

157
00:07:28,069 --> 00:07:35,209
nation<font color="#E5E5E5"> or in</font><font color="#CCCCCC"> general doesn't</font><font color="#E5E5E5"> tell a</font>

158
00:07:31,189 --> 00:07:37,639
<font color="#E5E5E5">little bad things and this is both nice</font>

159
00:07:35,209 --> 00:07:39,559
thing<font color="#E5E5E5"> but also bad thing because</font>

160
00:07:37,639 --> 00:07:43,489
<font color="#CCCCCC">sometimes you just want to</font><font color="#E5E5E5"> do things and</font>

161
00:07:39,559 --> 00:07:47,719
it doesn't<font color="#CCCCCC"> allow</font><font color="#E5E5E5"> you but it's nice that</font>

162
00:07:43,489 --> 00:07:50,839
there's something looking<font color="#E5E5E5"> at us and then</font>

163
00:07:47,719 --> 00:07:53,139
<font color="#E5E5E5">they be PFC scold there so basically</font><font color="#CCCCCC"> you</font>

164
00:07:50,839 --> 00:07:57,199
have this<font color="#CCCCCC"> a BPF byte</font><font color="#E5E5E5"> so that you can</font>

165
00:07:53,139 --> 00:08:00,349
compile with for<font color="#CCCCCC"> example clank</font><font color="#E5E5E5"> as a</font>

166
00:07:57,199 --> 00:08:03,739
back-end<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> called vpf so you plan a</font>

167
00:08:00,349 --> 00:08:05,959
<font color="#E5E5E5">meet BPF and you basically can write a c</font>

168
00:08:03,739 --> 00:08:07,849
program that means<font color="#CCCCCC"> if you have</font>

169
00:08:05,959 --> 00:08:09,949
<font color="#CCCCCC">programmed and then with the</font><font color="#E5E5E5"> cisco BPF</font>

170
00:08:07,849 --> 00:08:11,039
you load the program<font color="#CCCCCC"> all this thing</font>

171
00:08:09,949 --> 00:08:14,880
seems<font color="#CCCCCC"> crazy</font>

172
00:08:11,040 --> 00:08:18,000
but there are higher level of programs

173
00:08:14,880 --> 00:08:19,920
<font color="#E5E5E5">that lets you do things and then by</font>

174
00:08:18,000 --> 00:08:21,840
passing these argument to the<font color="#E5E5E5"> VP of</font>

175
00:08:19,920 --> 00:08:23,910
<font color="#E5E5E5">Cisco you load the program the SATA</font>

176
00:08:21,840 --> 00:08:27,659
query file reads<font color="#CCCCCC"> a program be sure</font><font color="#E5E5E5"> that</font>

177
00:08:23,910 --> 00:08:32,460
<font color="#E5E5E5">everything is</font><font color="#CCCCCC"> ok and then the</font><font color="#E5E5E5"> VP of</font>

178
00:08:27,660 --> 00:08:34,500
Cisco WPF diem understand which<font color="#CCCCCC"> profit</font>

179
00:08:32,460 --> 00:08:36,150
what kind of tremendous is a keeper by

180
00:08:34,500 --> 00:08:39,900
you progress<font color="#E5E5E5"> static response whatever</font>

181
00:08:36,150 --> 00:08:42,870
<font color="#E5E5E5">and if it's the case</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the program</font>

182
00:08:39,900 --> 00:08:45,390
registers itself to a map<font color="#E5E5E5"> that it's what</font>

183
00:08:42,870 --> 00:08:46,950
lets you get information back a user

184
00:08:45,390 --> 00:08:50,880
<font color="#E5E5E5">space is basically your communication</font>

185
00:08:46,950 --> 00:08:53,790
medium to get out like for example you

186
00:08:50,880 --> 00:08:55,380
<font color="#CCCCCC">buy</font><font color="#E5E5E5"> contract is a thing right</font>

187
00:08:53,790 --> 00:08:58,170
you called<font color="#CCCCCC"> implement contract with this</font>

188
00:08:55,380 --> 00:09:00,210
with<font color="#E5E5E5"> a VPS</font><font color="#CCCCCC"> and to get back</font><font color="#E5E5E5"> the</font>

189
00:08:58,170 --> 00:09:02,699
information<font color="#E5E5E5"> from contract for your own</font>

190
00:09:00,210 --> 00:09:06,300
contract<font color="#E5E5E5"> you will have to use a map</font><font color="#CCCCCC"> that</font>

191
00:09:02,700 --> 00:09:09,000
gives<font color="#E5E5E5"> you a stream of the connection</font>

192
00:09:06,300 --> 00:09:12,030
<font color="#E5E5E5">that would been open and the</font><font color="#CCCCCC"> masters</font>

193
00:09:09,000 --> 00:09:14,490
part there says if<font color="#E5E5E5"> your program are not</font>

194
00:09:12,030 --> 00:09:17,939
doing complete so basically you cannot

195
00:09:14,490 --> 00:09:19,260
you cannot do loops so that's because of

196
00:09:17,940 --> 00:09:22,860
the<font color="#CCCCCC"> city to verify it doesn't allow you</font>

197
00:09:19,260 --> 00:09:25,740
<font color="#E5E5E5">to</font><font color="#CCCCCC"> do that but if your loop</font><font color="#E5E5E5"> is for</font>

198
00:09:22,860 --> 00:09:28,110
example<font color="#CCCCCC"> like to like you have a list of</font>

199
00:09:25,740 --> 00:09:30,030
<font color="#CCCCCC">server</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> list of IPs for your your</font>

200
00:09:28,110 --> 00:09:32,640
network interface that you have to

201
00:09:30,030 --> 00:09:36,540
control these kind of things<font color="#E5E5E5"> if it's a</font>

202
00:09:32,640 --> 00:09:38,610
fixed loop that you have to do like it

203
00:09:36,540 --> 00:09:40,650
has a set<font color="#E5E5E5"> of elements</font><font color="#CCCCCC"> you already know</font>

204
00:09:38,610 --> 00:09:43,560
how<font color="#E5E5E5"> to compile time you can now roll the</font>

205
00:09:40,650 --> 00:09:47,449
loop with a<font color="#E5E5E5"> pragmatic</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> for example or</font>

206
00:09:43,560 --> 00:09:51,030
you<font color="#E5E5E5"> can just write</font><font color="#CCCCCC"> down 10</font><font color="#E5E5E5"> times</font><font color="#CCCCCC"> 3 and</font>

207
00:09:47,450 --> 00:09:53,670
what<font color="#E5E5E5"> about today I mean saying that this</font>

208
00:09:51,030 --> 00:09:56,250
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> pretty crazy some of you know</font>

209
00:09:53,670 --> 00:09:58,770
this I started doing this talk one year

210
00:09:56,250 --> 00:10:02,010
<font color="#CCCCCC">ago and well maybe it's because it here</font>

211
00:09:58,770 --> 00:10:03,810
is false then so the people<font color="#CCCCCC"> that</font><font color="#E5E5E5"> come</font>

212
00:10:02,010 --> 00:10:05,160
here are<font color="#E5E5E5"> more like on the</font><font color="#CCCCCC"> edge of this</font>

213
00:10:03,810 --> 00:10:07,380
<font color="#CCCCCC">kind</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> especially for the</font><font color="#E5E5E5"> Linux</font>

214
00:10:05,160 --> 00:10:10,829
kernel<font color="#E5E5E5"> but in general no one knows what</font>

215
00:10:07,380 --> 00:10:13,710
are the<font color="#E5E5E5"> application today one</font><font color="#CCCCCC"> of the</font>

216
00:10:10,830 --> 00:10:17,130
<font color="#E5E5E5">most common is</font><font color="#CCCCCC"> TCP dump who use this</font>

217
00:10:13,710 --> 00:10:20,310
year TCP dump<font color="#E5E5E5"> or</font><font color="#CCCCCC"> using it everyone</font>

218
00:10:17,130 --> 00:10:21,279
basically<font color="#E5E5E5"> not</font><font color="#CCCCCC"> your there</font><font color="#E5E5E5"> but they see</font>

219
00:10:20,310 --> 00:10:25,359
you

220
00:10:21,279 --> 00:10:28,029
tissie freedom is program<font color="#E5E5E5"> that lets you</font>

221
00:10:25,360 --> 00:10:29,350
basically<font color="#E5E5E5"> dump</font><font color="#CCCCCC"> stuff it</font><font color="#E5E5E5"> dumps out the</font>

222
00:10:28,029 --> 00:10:31,660
packet that<font color="#CCCCCC"> you're receiving</font><font color="#E5E5E5"> in this</font>

223
00:10:29,350 --> 00:10:36,100
machine<font color="#CCCCCC"> or a</font><font color="#E5E5E5"> specific network interface</font>

224
00:10:31,660 --> 00:10:38,769
you're pointing<font color="#CCCCCC"> to the TCP dump program</font>

225
00:10:36,100 --> 00:10:43,089
then using here<font color="#CCCCCC"> basically gets all the</font>

226
00:10:38,769 --> 00:10:46,120
IP packets and happy before<font color="#CCCCCC"> and TCP</font><font color="#E5E5E5"> and</font>

227
00:10:43,089 --> 00:10:50,589
on port 80<font color="#E5E5E5"> so this will be HTTP traffic</font>

228
00:10:46,120 --> 00:10:53,589
<font color="#E5E5E5">and if you pass the D parameter to TCP</font>

229
00:10:50,589 --> 00:10:56,889
<font color="#E5E5E5">dump it comes out the BPF program that</font>

230
00:10:53,589 --> 00:11:00,129
it's loading to do that<font color="#E5E5E5"> so TCP</font><font color="#CCCCCC"> dump</font>

231
00:10:56,889 --> 00:11:06,220
actually uses<font color="#E5E5E5"> maybe a program even if</font>

232
00:11:00,129 --> 00:11:09,459
you didn't<font color="#E5E5E5"> really see them so</font><font color="#CCCCCC"> BPF are a</font>

233
00:11:06,220 --> 00:11:11,470
mainstream thing now<font color="#E5E5E5"> even if maybe you</font>

234
00:11:09,459 --> 00:11:13,268
are not yet like implementing them in

235
00:11:11,470 --> 00:11:16,360
your programs there's rare thing for

236
00:11:13,269 --> 00:11:19,810
<font color="#E5E5E5">everyone</font><font color="#CCCCCC"> and the things</font><font color="#E5E5E5"> that dumps out</font>

237
00:11:16,360 --> 00:11:21,610
here is the<font color="#CCCCCC"> instruction set</font><font color="#E5E5E5"> that it's</font>

238
00:11:19,810 --> 00:11:24,459
you the<font color="#E5E5E5"> the portion</font><font color="#CCCCCC"> of destruction said</font>

239
00:11:21,610 --> 00:11:28,269
that<font color="#E5E5E5"> this is using and if you look at it</font>

240
00:11:24,459 --> 00:11:30,670
it's<font color="#E5E5E5"> basically like a reflection of the</font>

241
00:11:28,269 --> 00:11:32,439
RFS implementation right<font color="#E5E5E5"> so these two</font>

242
00:11:30,670 --> 00:11:37,349
<font color="#CCCCCC">instructions mean is this an eternity</font>

243
00:11:32,439 --> 00:11:39,790
<font color="#CCCCCC">before packet I don't do this thing like</font>

244
00:11:37,350 --> 00:11:44,470
<font color="#E5E5E5">automatically so like if I will not have</font>

245
00:11:39,790 --> 00:11:49,259
<font color="#E5E5E5">written this year</font><font color="#CCCCCC"> I will no no but I did</font>

246
00:11:44,470 --> 00:11:57,309
the<font color="#E5E5E5"> math</font><font color="#CCCCCC"> at home and</font><font color="#E5E5E5"> protesting</font><font color="#CCCCCC"> so and</font>

247
00:11:49,259 --> 00:12:00,129
is<font color="#CCCCCC"> SRC X plus 14 on port 80</font><font color="#E5E5E5"> so 15 extra</font>

248
00:11:57,309 --> 00:12:04,480
decimal and same<font color="#CCCCCC"> thing for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> situation</font>

249
00:12:00,129 --> 00:12:06,759
so since I didn't specify here<font color="#CCCCCC"> SRC</font><font color="#E5E5E5"> 80</font>

250
00:12:04,480 --> 00:12:10,629
and<font color="#CCCCCC"> destination 80 this</font><font color="#E5E5E5"> is a sure</font>

251
00:12:06,759 --> 00:12:13,059
assuming<font color="#E5E5E5"> that it's always</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> T and it's</font>

252
00:12:10,629 --> 00:12:18,220
basically adding two instructions but

253
00:12:13,059 --> 00:12:20,439
for source and buffer decision who uses

254
00:12:18,220 --> 00:12:27,009
kubernetes containers docker whatever

255
00:12:20,439 --> 00:12:28,469
raise your<font color="#E5E5E5"> hands one of the main one</font><font color="#CCCCCC"> of</font>

256
00:12:27,009 --> 00:12:35,949
<font color="#CCCCCC">the main the main</font>

257
00:12:28,470 --> 00:12:40,600
basically isolation isolation technique

258
00:12:35,949 --> 00:12:43,540
that contain runtime uses to basically

259
00:12:40,600 --> 00:12:45,639
allow<font color="#CCCCCC"> you to share</font><font color="#E5E5E5"> your kernel between</font>

260
00:12:43,540 --> 00:12:50,469
your container and the<font color="#CCCCCC"> O's machine is</font>

261
00:12:45,639 --> 00:12:53,319
second second<font color="#CCCCCC"> what does</font><font color="#E5E5E5"> succumb to</font>

262
00:12:50,470 --> 00:12:56,319
basically like if you go<font color="#E5E5E5"> to the doctor</font>

263
00:12:53,319 --> 00:12:59,860
repo you will see it an obvious actually

264
00:12:56,319 --> 00:13:03,329
<font color="#CCCCCC">different now you will see</font><font color="#E5E5E5"> that it has a</font>

265
00:12:59,860 --> 00:13:07,600
predefined<font color="#CCCCCC"> set of rules that basically</font>

266
00:13:03,329 --> 00:13:10,059
doesn't allow you<font color="#E5E5E5"> to CAPTCHAs admin so</font>

267
00:13:07,600 --> 00:13:14,110
you don't<font color="#E5E5E5"> become network</font><font color="#CCCCCC"> administrator's</font>

268
00:13:10,059 --> 00:13:17,259
<font color="#CCCCCC">or niskin things and it turns out the</font>

269
00:13:14,110 --> 00:13:21,059
<font color="#CCCCCC">sacrum has an EVP of subsystem that you</font>

270
00:13:17,259 --> 00:13:23,740
can use to define your<font color="#E5E5E5"> own like rules</font><font color="#CCCCCC"> as</font>

271
00:13:21,059 --> 00:13:25,449
compared<font color="#CCCCCC"> to like because the</font><font color="#E5E5E5"> complex you</font>

272
00:13:23,740 --> 00:13:26,860
like just<font color="#E5E5E5"> define rules a block this is</font>

273
00:13:25,449 --> 00:13:29,050
called block this is called block<font color="#CCCCCC"> this</font>

274
00:13:26,860 --> 00:13:31,149
<font color="#CCCCCC">cisco</font><font color="#E5E5E5"> but turns out that with the BPF</font>

275
00:13:29,050 --> 00:13:35,219
<font color="#E5E5E5">subsystem you can actually write write</font>

276
00:13:31,149 --> 00:13:38,759
your own rules<font color="#CCCCCC"> if process</font><font color="#E5E5E5"> ID is odd</font>

277
00:13:35,220 --> 00:13:41,470
<font color="#E5E5E5">block the cisco by</font><font color="#CCCCCC"> these kinetics</font>

278
00:13:38,759 --> 00:13:44,170
<font color="#CCCCCC">probably the use case I</font><font color="#E5E5E5"> just told it's</font>

279
00:13:41,470 --> 00:13:46,779
probably a bit silly but it's something

280
00:13:44,170 --> 00:13:50,259
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> and in this situation I just</font>

281
00:13:46,779 --> 00:13:54,250
<font color="#E5E5E5">compiled this program here and the</font>

282
00:13:50,259 --> 00:13:59,529
<font color="#E5E5E5">program I did is printing later</font><font color="#CCCCCC"> and then</font>

283
00:13:54,250 --> 00:14:03,279
<font color="#E5E5E5">oh and then it is solving a filter with</font>

284
00:13:59,529 --> 00:14:06,429
this<font color="#E5E5E5"> function I defined here as you</font><font color="#CCCCCC"> can</font>

285
00:14:03,279 --> 00:14:10,120
<font color="#E5E5E5">see I'm basically</font><font color="#CCCCCC"> writing using a DSL to</font>

286
00:14:06,429 --> 00:14:13,709
write<font color="#CCCCCC"> a</font><font color="#E5E5E5"> BPF assembly here you're not</font>

287
00:14:10,120 --> 00:14:16,540
need you<font color="#E5E5E5"> don't really need</font><font color="#CCCCCC"> due to that</font><font color="#E5E5E5"> I</font>

288
00:14:13,709 --> 00:14:19,209
didn't really<font color="#CCCCCC"> know what</font><font color="#E5E5E5"> I was doing yeah</font>

289
00:14:16,540 --> 00:14:24,429
<font color="#E5E5E5">I took to me so much to laugh with that</font>

290
00:14:19,209 --> 00:14:26,258
<font color="#E5E5E5">thing but it turns out</font><font color="#CCCCCC"> that like I could</font>

291
00:14:24,429 --> 00:14:28,360
have<font color="#E5E5E5"> written this in C and compile with</font>

292
00:14:26,259 --> 00:14:30,339
<font color="#CCCCCC">Clan and copied it here and it's</font>

293
00:14:28,360 --> 00:14:31,809
basically<font color="#E5E5E5"> the</font><font color="#CCCCCC"> process that</font><font color="#E5E5E5"> I used but</font><font color="#CCCCCC"> I</font>

294
00:14:30,339 --> 00:14:34,410
really want to be<font color="#E5E5E5"> very cool</font><font color="#CCCCCC"> and right</font>

295
00:14:31,809 --> 00:14:41,790
there there's only so that<font color="#CCCCCC"> what city</font>

296
00:14:34,410 --> 00:14:43,230
and then basically I load that<font color="#E5E5E5"> hello</font>

297
00:14:41,790 --> 00:14:46,199
that<font color="#CCCCCC"> beef</font><font color="#E5E5E5"> your program is a comp with</font>

298
00:14:43,230 --> 00:14:49,379
those instructions and this filter<font color="#E5E5E5"> is</font>

299
00:14:46,199 --> 00:14:51,889
<font color="#E5E5E5">installed in the</font><font color="#CCCCCC"> NI</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so I'm</font>

300
00:14:49,379 --> 00:14:56,069
blocking all the<font color="#E5E5E5"> right so everything and</font>

301
00:14:51,889 --> 00:14:58,980
on this architecture and I give back<font color="#E5E5E5"> any</font>

302
00:14:56,069 --> 00:15:03,120
<font color="#CCCCCC">perb when you try to right</font><font color="#E5E5E5"> so everything</font>

303
00:14:58,980 --> 00:15:05,550
I'm gonna<font color="#E5E5E5"> right after this second preju</font>

304
00:15:03,120 --> 00:15:07,410
stration is<font color="#E5E5E5"> gonna be denied</font><font color="#CCCCCC"> so I just</font>

305
00:15:05,550 --> 00:15:13,139
started<font color="#E5E5E5"> that program I made with</font><font color="#CCCCCC"> us</font>

306
00:15:07,410 --> 00:15:15,959
<font color="#CCCCCC">trace</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> to see and the first call</font>

307
00:15:13,139 --> 00:15:19,819
<font color="#CCCCCC">went</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> all the others just gave</font>

308
00:15:15,959 --> 00:15:19,819
<font color="#E5E5E5">it back and exited the program</font>

309
00:15:19,850 --> 00:15:26,970
what are more practical examples<font color="#E5E5E5"> trace</font>

310
00:15:24,000 --> 00:15:30,540
file open by<font color="#CCCCCC"> filename</font><font color="#E5E5E5"> everything a bunch</font>

311
00:15:26,970 --> 00:15:32,879
<font color="#E5E5E5">of them</font><font color="#CCCCCC"> go runtime</font><font color="#E5E5E5"> events for</font><font color="#CCCCCC"> XDP</font>

312
00:15:30,540 --> 00:15:34,589
firewalls and pattern rewriting trace

313
00:15:32,879 --> 00:15:38,759
commands<font color="#E5E5E5"> and in a bash shell</font><font color="#CCCCCC"> write a key</font>

314
00:15:34,589 --> 00:15:41,040
<font color="#CCCCCC">logger whatever you want to write one</font><font color="#E5E5E5"> of</font>

315
00:15:38,759 --> 00:15:43,500
the use case I use a lot<font color="#CCCCCC"> these since</font><font color="#E5E5E5"> our</font>

316
00:15:41,040 --> 00:15:46,199
<font color="#E5E5E5">for influx trace clearly done against</font>

317
00:15:43,500 --> 00:15:48,389
the<font color="#E5E5E5"> database like I don't do the core</font><font color="#CCCCCC"> of</font>

318
00:15:46,199 --> 00:15:51,209
influx<font color="#E5E5E5"> EB so I don't really know where</font>

319
00:15:48,389 --> 00:15:54,240
to<font color="#E5E5E5"> I don't really want to mangle with</font>

320
00:15:51,209 --> 00:15:58,008
their cold<font color="#CCCCCC"> because</font><font color="#E5E5E5"> the core engineers</font>

321
00:15:54,240 --> 00:16:03,420
<font color="#E5E5E5">don't allow me but I really want to</font><font color="#CCCCCC"> set</font>

322
00:15:58,009 --> 00:16:07,649
so I just load<font color="#CCCCCC"> on a VPS</font><font color="#E5E5E5"> program to see</font>

323
00:16:03,420 --> 00:16:10,199
what's happening yes<font color="#E5E5E5"> it's crazy</font>

324
00:16:07,649 --> 00:16:13,139
and no one's<font color="#E5E5E5"> want ready to do all of</font>

325
00:16:10,199 --> 00:16:15,959
that this statement is probably<font color="#E5E5E5"> to</font>

326
00:16:13,139 --> 00:16:18,839
another conference<font color="#E5E5E5"> is not a fault so</font><font color="#CCCCCC"> our</font>

327
00:16:15,959 --> 00:16:24,869
level<font color="#E5E5E5"> EP is are not fit for most</font><font color="#CCCCCC"> people</font>

328
00:16:18,839 --> 00:16:30,389
but let's see them anyway<font color="#CCCCCC"> an interesting</font>

329
00:16:24,870 --> 00:16:33,870
project is a visor go BPF if you are a

330
00:16:30,389 --> 00:16:39,709
good programmer<font color="#E5E5E5"> you might want to just</font>

331
00:16:33,870 --> 00:16:43,430
load your<font color="#CCCCCC"> BPF program using go</font><font color="#E5E5E5"> actually</font>

332
00:16:39,709 --> 00:16:43,430
go BPF is

333
00:16:43,880 --> 00:16:51,180
basically<font color="#E5E5E5"> a binding that lets you load</font>

334
00:16:47,090 --> 00:16:53,700
<font color="#CCCCCC">EPF programs and compile</font><font color="#E5E5E5"> them and load</font>

335
00:16:51,180 --> 00:16:55,859
them so you just provide the C program

336
00:16:53,700 --> 00:16:58,020
as I did here<font color="#E5E5E5"> like I you to read file</font>

337
00:16:55,860 --> 00:17:01,440
<font color="#E5E5E5">bash redline see I will go to that</font>

338
00:16:58,020 --> 00:17:02,939
<font color="#CCCCCC">program</font><font color="#E5E5E5"> a second or you can give</font><font color="#CCCCCC"> gob EPF</font>

339
00:17:01,440 --> 00:17:05,490
the program<font color="#E5E5E5"> ready</font><font color="#CCCCCC"> compile the difference</font>

340
00:17:02,940 --> 00:17:07,320
is<font color="#CCCCCC"> that if you</font><font color="#E5E5E5"> ask Bob if you have to</font>

341
00:17:05,490 --> 00:17:09,450
compile the program<font color="#E5E5E5"> in the target</font>

342
00:17:07,319 --> 00:17:12,359
machine<font color="#CCCCCC"> you</font><font color="#E5E5E5"> will need to have the</font>

343
00:17:09,450 --> 00:17:14,190
compiler basically<font color="#E5E5E5"> while if you give the</font>

344
00:17:12,359 --> 00:17:17,250
<font color="#E5E5E5">program</font><font color="#CCCCCC"> already compiled you</font><font color="#E5E5E5"> just I have</font>

345
00:17:14,190 --> 00:17:22,110
a simple binary<font color="#E5E5E5"> in the target machine</font>

346
00:17:17,250 --> 00:17:27,960
<font color="#E5E5E5">but the real innovation in this repo is</font>

347
00:17:22,109 --> 00:17:31,050
that it allows you<font color="#E5E5E5"> to register to</font><font color="#CCCCCC"> the</font>

348
00:17:27,960 --> 00:17:33,780
maps that<font color="#E5E5E5"> I told you about before using</font>

349
00:17:31,050 --> 00:17:37,070
go channels<font color="#E5E5E5"> so you can actually read the</font>

350
00:17:33,780 --> 00:17:39,330
map in a concurrent way

351
00:17:37,070 --> 00:17:42,450
let's go very fast through this program

352
00:17:39,330 --> 00:17:44,639
I<font color="#CCCCCC"> just read this budget line see here</font>

353
00:17:42,450 --> 00:17:46,680
<font color="#E5E5E5">what is this</font><font color="#CCCCCC"> doing is that it's</font>

354
00:17:44,640 --> 00:17:48,870
<font color="#E5E5E5">basically doing some verification</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I</font>

355
00:17:46,680 --> 00:17:51,390
required for the<font color="#CCCCCC"> static verified</font><font color="#E5E5E5"> to let</font>

356
00:17:48,870 --> 00:17:53,520
<font color="#E5E5E5">your program work and then you get the</font>

357
00:17:51,390 --> 00:17:56,760
current<font color="#E5E5E5"> process ID</font><font color="#CCCCCC"> I register it in this</font>

358
00:17:53,520 --> 00:17:58,980
<font color="#E5E5E5">event that I created here that it's</font>

359
00:17:56,760 --> 00:18:00,870
coming<font color="#CCCCCC"> from this struct that is</font><font color="#E5E5E5"> also</font>

360
00:17:58,980 --> 00:18:03,270
which is reading my<font color="#E5E5E5"> go program so you</font>

361
00:18:00,870 --> 00:18:04,979
have to maintain when<font color="#CCCCCC"> I send the</font><font color="#E5E5E5"> data</font>

362
00:18:03,270 --> 00:18:08,129
with the<font color="#E5E5E5"> map I have to maintain the</font>

363
00:18:04,980 --> 00:18:13,500
struck pot in the VFC program<font color="#E5E5E5"> and in my</font>

364
00:18:08,130 --> 00:18:16,530
go program and then I register this<font color="#E5E5E5"> vpf</font>

365
00:18:13,500 --> 00:18:20,400
per photon map that<font color="#E5E5E5"> the PFF output is</font>

366
00:18:16,530 --> 00:18:22,080
the map<font color="#CCCCCC"> that you want to use when you</font>

367
00:18:20,400 --> 00:18:23,430
<font color="#CCCCCC">want to</font><font color="#E5E5E5"> have a generic map to send</font>

368
00:18:22,080 --> 00:18:26,389
things like if you don't<font color="#CCCCCC"> want to use a</font>

369
00:18:23,430 --> 00:18:29,340
specific<font color="#E5E5E5"> one this one is generic and</font>

370
00:18:26,390 --> 00:18:32,580
it's always registered and works very

371
00:18:29,340 --> 00:18:36,030
<font color="#CCCCCC">well for like the bargain use cases so</font>

372
00:18:32,580 --> 00:18:39,449
big after<font color="#CCCCCC"> fatwood here and this is the</font>

373
00:18:36,030 --> 00:18:43,170
same<font color="#CCCCCC"> relying events here and rely</font><font color="#E5E5E5"> on</font>

374
00:18:39,450 --> 00:18:47,210
events<font color="#E5E5E5"> in this in this case here</font><font color="#CCCCCC"> so I</font>

375
00:18:43,170 --> 00:18:47,210
registered to<font color="#CCCCCC"> this table and every time</font>

376
00:18:47,880 --> 00:18:56,940
every time the function<font color="#CCCCCC"> redline is</font>

377
00:18:52,350 --> 00:18:59,490
called on<font color="#CCCCCC"> bosch i send an event</font><font color="#E5E5E5"> so this</font>

378
00:18:56,940 --> 00:19:03,300
thing is basically<font color="#E5E5E5"> you start the bash</font>

379
00:18:59,490 --> 00:19:05,700
shell<font color="#E5E5E5"> everywhere in the machine</font><font color="#CCCCCC"> and</font>

380
00:19:03,300 --> 00:19:09,030
every time<font color="#E5E5E5"> red line is the function in</font>

381
00:19:05,700 --> 00:19:11,130
bash that's called<font color="#E5E5E5"> whenever command is</font>

382
00:19:09,030 --> 00:19:13,980
issued so when you write<font color="#E5E5E5"> a command in</font>

383
00:19:11,130 --> 00:19:16,980
bash<font color="#CCCCCC"> read lies receives it</font><font color="#E5E5E5"> we done is a</font>

384
00:19:13,980 --> 00:19:20,520
function so you're getting the argument

385
00:19:16,980 --> 00:19:23,010
of the function<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you send it to the</font>

386
00:19:20,520 --> 00:19:26,879
map and the map receives please receive

387
00:19:23,010 --> 00:19:30,030
<font color="#E5E5E5">dingo here in this table and then this</font>

388
00:19:26,880 --> 00:19:34,170
<font color="#E5E5E5">table as a channel and it's connected to</font>

389
00:19:30,030 --> 00:19:36,330
the table and then you just get the

390
00:19:34,170 --> 00:19:40,860
<font color="#E5E5E5">information out of</font><font color="#CCCCCC"> nine</font><font color="#E5E5E5"> channel using</font>

391
00:19:36,330 --> 00:19:43,560
<font color="#E5E5E5">the for loop here</font><font color="#CCCCCC"> and then you print</font>

392
00:19:40,860 --> 00:19:46,469
them basically<font color="#E5E5E5"> out so if I load this</font>

393
00:19:43,560 --> 00:19:49,679
program in a UNIX machine<font color="#E5E5E5"> what happens</font>

394
00:19:46,470 --> 00:19:53,970
is that<font color="#E5E5E5"> I just see</font><font color="#CCCCCC"> all the bash</font><font color="#E5E5E5"> comment</font>

395
00:19:49,680 --> 00:19:58,800
issues another interesting<font color="#E5E5E5"> project</font>

396
00:19:53,970 --> 00:20:02,190
<font color="#E5E5E5">always in a visor is vpf trace vpf</font>

397
00:19:58,800 --> 00:20:05,100
<font color="#CCCCCC">Tracey's an iron level language that has</font>

398
00:20:02,190 --> 00:20:08,460
<font color="#E5E5E5">been written for the purpose of doing VP</font>

399
00:20:05,100 --> 00:20:12,530
of tracing and it's a bit<font color="#E5E5E5"> easier because</font>

400
00:20:08,460 --> 00:20:15,240
you don't<font color="#E5E5E5"> have to deal with all</font><font color="#CCCCCC"> of this</font>

401
00:20:12,530 --> 00:20:18,540
this<font color="#CCCCCC"> is still</font><font color="#E5E5E5"> very good because it's</font>

402
00:20:15,240 --> 00:20:20,400
very extensible like you can write

403
00:20:18,540 --> 00:20:23,070
<font color="#CCCCCC">you're basing your</font><font color="#E5E5E5"> own go program and</font>

404
00:20:20,400 --> 00:20:26,340
<font color="#CCCCCC">into having it interact the VPS program</font>

405
00:20:23,070 --> 00:20:29,520
<font color="#E5E5E5">but if you just need some specialized</font>

406
00:20:26,340 --> 00:20:32,429
tool like<font color="#CCCCCC"> justit's just</font><font color="#E5E5E5"> extract all the</font>

407
00:20:29,520 --> 00:20:34,200
<font color="#E5E5E5">right maybe you don't need like to do</font>

408
00:20:32,430 --> 00:20:38,100
anything else<font color="#CCCCCC"> we</font><font color="#E5E5E5"> never just want to see</font>

409
00:20:34,200 --> 00:20:40,380
them<font color="#E5E5E5"> it's easier to use VP of trace I'm</font>

410
00:20:38,100 --> 00:20:42,480
always talking<font color="#CCCCCC"> about this</font><font color="#E5E5E5"> aisle visor</font>

411
00:20:40,380 --> 00:20:46,320
because<font color="#CCCCCC"> it's the Linux Foundation VP</font>

412
00:20:42,480 --> 00:20:48,750
Africa project<font color="#CCCCCC"> it's basically right now</font>

413
00:20:46,320 --> 00:20:52,389
the main contributor to<font color="#CCCCCC"> BPF other</font>

414
00:20:48,750 --> 00:20:58,159
contributors<font color="#CCCCCC"> that are very notable</font>

415
00:20:52,390 --> 00:21:01,400
me and<font color="#E5E5E5"> I talking our</font><font color="#CCCCCC"> cilium that is</font>

416
00:20:58,159 --> 00:21:04,159
<font color="#CCCCCC">basically doing</font><font color="#E5E5E5"> they are doing</font><font color="#CCCCCC"> there as</font>

417
00:21:01,400 --> 00:21:06,049
the end for kubernetes but they are they

418
00:21:04,159 --> 00:21:08,990
basically wrote the documentation<font color="#E5E5E5"> for a</font>

419
00:21:06,049 --> 00:21:12,110
BPF like if you write the beep you<font color="#CCCCCC"> have</font>

420
00:21:08,990 --> 00:21:15,500
<font color="#E5E5E5">the commutation</font><font color="#CCCCCC"> dr. go</font><font color="#E5E5E5"> whatever search</font>

421
00:21:12,110 --> 00:21:21,049
engine years<font color="#E5E5E5"> I will</font><font color="#CCCCCC"> know you basically</font>

422
00:21:15,500 --> 00:21:23,720
find them or well that's what I found

423
00:21:21,049 --> 00:21:27,860
actually I didn't find<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> harder</font>

424
00:21:23,720 --> 00:21:30,110
documentation else and other

425
00:21:27,860 --> 00:21:35,330
contributors<font color="#E5E5E5"> are the</font><font color="#CCCCCC"> gather came both we</font>

426
00:21:30,110 --> 00:21:38,928
are<font color="#E5E5E5"> one of them there and all the others</font>

427
00:21:35,330 --> 00:21:41,360
<font color="#CCCCCC">I will tell them about</font><font color="#E5E5E5"> that later</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> I</font>

428
00:21:38,929 --> 00:21:45,470
<font color="#E5E5E5">advisor is the main contributor actually</font>

429
00:21:41,360 --> 00:21:50,860
and Brandon Greg that is working on

430
00:21:45,470 --> 00:21:53,150
<font color="#E5E5E5">Netflix doing performance created this</font>

431
00:21:50,860 --> 00:21:55,428
graph we<font color="#CCCCCC"> are showing</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> all the</font>

432
00:21:53,150 --> 00:21:58,909
interaction point with the<font color="#CCCCCC"> bps using BPF</font>

433
00:21:55,429 --> 00:22:02,840
trace so you can easily<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that I was</font>

434
00:21:58,909 --> 00:22:04,250
always<font color="#CCCCCC"> talking about VV v FS</font><font color="#E5E5E5"> so if</font>

435
00:22:02,840 --> 00:22:07,970
you're<font color="#CCCCCC"> interesting in the five</font><font color="#E5E5E5"> system</font>

436
00:22:04,250 --> 00:22:10,360
you can go as down<font color="#E5E5E5"> as you want down to</font>

437
00:22:07,970 --> 00:22:12,650
the<font color="#E5E5E5"> device drivers same things or socket</font>

438
00:22:10,360 --> 00:22:15,260
<font color="#E5E5E5">paintings for</font><font color="#CCCCCC"> the scheduled for virtual</font>

439
00:22:12,650 --> 00:22:16,280
memory you can interact<font color="#CCCCCC"> the assist calls</font>

440
00:22:15,260 --> 00:22:20,600
you can interact<font color="#E5E5E5"> with the system</font>

441
00:22:16,280 --> 00:22:22,190
libraries after the applications<font color="#E5E5E5"> and you</font>

442
00:22:20,600 --> 00:22:26,899
can connect to all of this thing using

443
00:22:22,190 --> 00:22:31,820
the<font color="#CCCCCC"> trace behind</font><font color="#E5E5E5"> a set trace points are</font>

444
00:22:26,900 --> 00:22:34,700
<font color="#CCCCCC">where profile interval K</font><font color="#E5E5E5"> probe you probe</font>

445
00:22:31,820 --> 00:22:37,309
<font color="#E5E5E5">USD T yes it is very interesting</font><font color="#CCCCCC"> I</font>

446
00:22:34,700 --> 00:22:38,570
didn't<font color="#CCCCCC"> toss in the slides because</font><font color="#E5E5E5"> you</font>

447
00:22:37,309 --> 00:22:42,799
don't want to<font color="#E5E5E5"> get to</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> this all very</font>

448
00:22:38,570 --> 00:22:45,289
<font color="#E5E5E5">long but it's basically allow you to</font>

449
00:22:42,799 --> 00:22:47,870
define<font color="#E5E5E5"> static trace points in your</font>

450
00:22:45,289 --> 00:22:51,260
programs<font color="#E5E5E5"> one of the most notable project</font>

451
00:22:47,870 --> 00:22:55,158
that uses this is<font color="#E5E5E5"> no</font><font color="#CCCCCC"> js'</font><font color="#E5E5E5"> nodejs already</font>

452
00:22:51,260 --> 00:22:58,580
<font color="#E5E5E5">has</font><font color="#CCCCCC"> USD T is</font><font color="#E5E5E5"> defined so that for</font><font color="#CCCCCC"> example</font>

453
00:22:55,159 --> 00:23:01,850
you can get all they are going to<font color="#CCCCCC"> node</font>

454
00:22:58,580 --> 00:23:04,340
functions using<font color="#CCCCCC"> us</font><font color="#E5E5E5"> titties because the</font>

455
00:23:01,850 --> 00:23:05,100
node program will it's not<font color="#CCCCCC"> I compiled to</font>

456
00:23:04,340 --> 00:23:07,529
an object

457
00:23:05,100 --> 00:23:10,980
so I will do I do<font color="#E5E5E5"> these can things</font>

458
00:23:07,529 --> 00:23:12,830
<font color="#E5E5E5">without an interpreter language using</font>

459
00:23:10,980 --> 00:23:18,019
<font color="#E5E5E5">yes</font>

460
00:23:12,830 --> 00:23:18,019
and what about<font color="#CCCCCC"> Gordon</font><font color="#E5E5E5"> it is yeah</font><font color="#CCCCCC"> finally</font>

461
00:23:18,259 --> 00:23:22,830
<font color="#CCCCCC">turns out that there's</font><font color="#E5E5E5"> not really</font>

462
00:23:20,820 --> 00:23:28,860
<font color="#CCCCCC">anything for kubernetes there are a</font>

463
00:23:22,830 --> 00:23:32,850
bunch of project round but not a lot of

464
00:23:28,860 --> 00:23:34,860
projects<font color="#E5E5E5"> are like in a group</font><font color="#CCCCCC"> that active</font>

465
00:23:32,850 --> 00:23:39,379
element is them in a way that<font color="#CCCCCC"> they</font><font color="#E5E5E5"> are</font>

466
00:23:34,860 --> 00:23:43,709
using<font color="#E5E5E5"> used very broadly in the community</font>

467
00:23:39,379 --> 00:23:47,250
<font color="#CCCCCC">we my friend alone out there</font><font color="#E5E5E5"> we had an</font>

468
00:23:43,710 --> 00:23:50,279
idea<font color="#CCCCCC"> to use vpf trace against kubernetes</font>

469
00:23:47,250 --> 00:23:53,970
<font color="#E5E5E5">clusters and</font><font color="#CCCCCC"> we create this plug-in</font>

470
00:23:50,279 --> 00:23:56,940
called<font color="#CCCCCC"> qct</font><font color="#E5E5E5"> I'll trace then Brendan</font><font color="#CCCCCC"> read</font>

471
00:23:53,970 --> 00:23:59,789
notice at it and we contributed<font color="#E5E5E5"> that I</font>

472
00:23:56,940 --> 00:24:03,690
of I so basically<font color="#E5E5E5"> so now it's a virus or</font>

473
00:23:59,789 --> 00:24:07,710
<font color="#CCCCCC">qcr trace I will have a demo shortly</font>

474
00:24:03,690 --> 00:24:10,769
<font color="#E5E5E5">there's a little disclaimer</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not</font>

475
00:24:07,710 --> 00:24:14,190
my laptop that's very funny<font color="#CCCCCC"> I left my</font>

476
00:24:10,769 --> 00:24:16,529
laptop<font color="#E5E5E5"> at home</font><font color="#CCCCCC"> so this laptop so if you</font>

477
00:24:14,190 --> 00:24:21,000
see they're not<font color="#E5E5E5"> around</font><font color="#CCCCCC"> it's not my fault</font>

478
00:24:16,529 --> 00:24:23,759
<font color="#CCCCCC">and</font><font color="#E5E5E5"> if it doesn't work is another so yes</font>

479
00:24:21,000 --> 00:24:27,090
of course<font color="#E5E5E5"> you can all function rather</font>

480
00:24:23,759 --> 00:24:30,330
<font color="#E5E5E5">than the</font><font color="#CCCCCC"> faceless</font><font color="#E5E5E5"> and so you can find</font>

481
00:24:27,090 --> 00:24:32,730
<font color="#CCCCCC">that you CTL face in</font><font color="#E5E5E5"> IO visor the</font>

482
00:24:30,330 --> 00:24:35,090
philosophy behind<font color="#CCCCCC"> VP of tracing qcl</font>

483
00:24:32,730 --> 00:24:37,320
traces that<font color="#E5E5E5"> they are UNIX tools</font>

484
00:24:35,090 --> 00:24:41,100
<font color="#CCCCCC">following the UNIX philosophy so you</font>

485
00:24:37,320 --> 00:24:42,240
just run<font color="#E5E5E5"> them see the result</font><font color="#CCCCCC"> and they're</font>

486
00:24:41,100 --> 00:24:44,340
gone

487
00:24:42,240 --> 00:24:47,070
it's not a kind<font color="#E5E5E5"> of tool that you can use</font>

488
00:24:44,340 --> 00:24:50,399
like to let your program render forever

489
00:24:47,070 --> 00:24:53,129
<font color="#E5E5E5">or that you can</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> to other things</font>

490
00:24:50,399 --> 00:24:54,719
<font color="#CCCCCC">it's just AI want to</font><font color="#E5E5E5"> see all the</font><font color="#CCCCCC"> five</font>

491
00:24:53,129 --> 00:24:58,080
written<font color="#CCCCCC"> I want to see all the</font><font color="#E5E5E5"> connection</font>

492
00:24:54,720 --> 00:25:01,350
you see them and they're<font color="#E5E5E5"> done</font><font color="#CCCCCC"> the usage</font>

493
00:24:58,080 --> 00:25:03,120
is<font color="#CCCCCC"> qct I'll trace run weekly</font><font color="#E5E5E5"> F trace</font>

494
00:25:01,350 --> 00:25:07,110
program<font color="#E5E5E5"> and then since we are in</font>

495
00:25:03,120 --> 00:25:08,219
kubernetes<font color="#E5E5E5"> your node or your pod so you</font>

496
00:25:07,110 --> 00:25:11,668
can touch a<font color="#CCCCCC"> program to a pod</font>

497
00:25:08,220 --> 00:25:14,629
specifically or to a node and then you

498
00:25:11,669 --> 00:25:14,629
just attach<font color="#E5E5E5"> a TTI</font>

499
00:25:17,280 --> 00:25:25,810
an interesting use case<font color="#E5E5E5"> it's seeing for</font>

500
00:25:21,130 --> 00:25:29,560
example<font color="#CCCCCC"> the distribution of read</font><font color="#E5E5E5"> in a</font>

501
00:25:25,810 --> 00:25:32,379
file<font color="#E5E5E5"> like you're reading a file</font><font color="#CCCCCC"> right</font>

502
00:25:29,560 --> 00:25:36,310
<font color="#E5E5E5">but you never know how</font><font color="#CCCCCC"> you're reading</font>

503
00:25:32,380 --> 00:25:39,030
<font color="#CCCCCC">right it's a question that</font><font color="#E5E5E5"> the first</font>

504
00:25:36,310 --> 00:25:40,810
time<font color="#E5E5E5"> I asked myself this question is</font>

505
00:25:39,030 --> 00:25:44,290
what do<font color="#E5E5E5"> you mean with that</font>

506
00:25:40,810 --> 00:25:46,270
<font color="#CCCCCC">oh I</font><font color="#E5E5E5"> read it right</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> just really right</font>

507
00:25:44,290 --> 00:25:48,399
<font color="#E5E5E5">you don't just read</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> file</font><font color="#CCCCCC"> you can read</font>

508
00:25:46,270 --> 00:25:50,889
it in different ways<font color="#E5E5E5"> you can read it in</font>

509
00:25:48,400 --> 00:25:53,040
chunks of like<font color="#E5E5E5"> one gigabyte or in</font>

510
00:25:50,890 --> 00:25:55,900
<font color="#CCCCCC">chocolate one two kilobytes right and</font>

511
00:25:53,040 --> 00:25:57,730
that gives you different performances so

512
00:25:55,900 --> 00:26:01,000
like if you're<font color="#CCCCCC"> writing your</font><font color="#E5E5E5"> data is like</font>

513
00:25:57,730 --> 00:26:04,270
we do and you're<font color="#E5E5E5"> reading the writing</font>

514
00:26:01,000 --> 00:26:09,430
files a lot this is<font color="#E5E5E5"> a very huge</font>

515
00:26:04,270 --> 00:26:12,430
difference like if you write cache to<font color="#E5E5E5"> a</font>

516
00:26:09,430 --> 00:26:15,190
file<font color="#E5E5E5"> in chunk of one gigabyte or of one</font>

517
00:26:12,430 --> 00:26:17,770
kilowatt<font color="#E5E5E5"> and this tool</font><font color="#CCCCCC"> gives you an</font>

518
00:26:15,190 --> 00:26:21,480
insight<font color="#CCCCCC"> of that maybe</font><font color="#E5E5E5"> a phrase and by</font>

519
00:26:17,770 --> 00:26:24,970
extension few situation clusters and

520
00:26:21,480 --> 00:26:26,950
since with qcl trace or previous race

521
00:26:24,970 --> 00:26:30,190
you can define<font color="#CCCCCC"> your output format</font><font color="#E5E5E5"> you</font>

522
00:26:26,950 --> 00:26:32,820
can like write CSV and<font color="#CCCCCC"> then you can</font><font color="#E5E5E5"> pipe</font>

523
00:26:30,190 --> 00:26:37,780
it as I said before<font color="#E5E5E5"> so UNIX philosophy</font>

524
00:26:32,820 --> 00:26:40,629
<font color="#CCCCCC">so you can pipe it to to</font><font color="#E5E5E5"> another program</font>

525
00:26:37,780 --> 00:26:44,230
<font color="#CCCCCC">like visa data that lets you plot your</font>

526
00:26:40,630 --> 00:26:44,890
results in a different way than<font color="#E5E5E5"> you CTL</font>

527
00:26:44,230 --> 00:26:47,800
<font color="#E5E5E5">three stars</font>

528
00:26:44,890 --> 00:26:51,400
so<font color="#E5E5E5"> Q</font><font color="#CCCCCC"> CTL VP of trace has functions to</font>

529
00:26:47,800 --> 00:26:53,649
<font color="#CCCCCC">aggregate your results like instagrams</font>

530
00:26:51,400 --> 00:26:55,570
<font color="#CCCCCC">you can see the maps of</font><font color="#E5E5E5"> Sam's these gun</font>

531
00:26:53,650 --> 00:26:59,070
things but if<font color="#E5E5E5"> you want to aggregate them</font>

532
00:26:55,570 --> 00:27:02,679
yourself<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do that user</font><font color="#E5E5E5"> space</font>

533
00:26:59,070 --> 00:27:03,100
<font color="#E5E5E5">there's a demo time Leo you think it</font>

534
00:27:02,680 --> 00:27:06,240
will work

535
00:27:03,100 --> 00:27:06,240
who knows

536
00:27:07,779 --> 00:27:20,210
so I try to do my<font color="#CCCCCC"> best</font><font color="#E5E5E5"> to be comfortable</font>

537
00:27:13,190 --> 00:27:21,970
this machine so have these<font color="#CCCCCC"> correlates</font>

538
00:27:20,210 --> 00:27:27,470
<font color="#E5E5E5">this application called Caturday</font>

539
00:27:21,970 --> 00:27:28,820
that shows<font color="#CCCCCC"> cat</font><font color="#E5E5E5"> seems fine and basically</font>

540
00:27:27,470 --> 00:27:30,919
it's a<font color="#E5E5E5"> department with you with</font><font color="#CCCCCC"> tree</font>

541
00:27:28,820 --> 00:27:35,000
<font color="#E5E5E5">containers and runs this cat or taking</font>

542
00:27:30,919 --> 00:27:38,480
that as an HTTP server that shows you

543
00:27:35,000 --> 00:27:43,010
<font color="#E5E5E5">cat in the browser and cats in the</font>

544
00:27:38,480 --> 00:27:55,039
terminal<font color="#CCCCCC"> with a row endpoint</font><font color="#E5E5E5"> so just run</font>

545
00:27:43,010 --> 00:27:57,429
it<font color="#CCCCCC"> and see</font><font color="#E5E5E5"> yes one of them are already</font>

546
00:27:55,039 --> 00:27:57,429
running

547
00:28:00,230 --> 00:28:06,980
and see that<font color="#CCCCCC"> there's a service</font><font color="#E5E5E5"> where you</font>

548
00:28:01,909 --> 00:28:08,450
<font color="#CCCCCC">can reach cats and it's order</font><font color="#E5E5E5"> then they</font>

549
00:28:06,980 --> 00:28:09,740
have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> bash</font><font color="#CCCCCC"> cause</font><font color="#E5E5E5"> you think</font><font color="#CCCCCC"> that'd</font>

550
00:28:08,450 --> 00:28:12,809
be crazy and

551
00:28:09,740 --> 00:28:12,809
[Music]

552
00:28:20,400 --> 00:28:29,260
this cathode-ray program is<font color="#E5E5E5"> implemented</font>

553
00:28:23,530 --> 00:28:36,820
<font color="#E5E5E5">in this main</font><font color="#CCCCCC"> go file</font><font color="#E5E5E5"> and yes it</font><font color="#CCCCCC"> has cats</font>

554
00:28:29,260 --> 00:28:39,360
and whatever interested in is<font color="#CCCCCC"> getting</font>

555
00:28:36,820 --> 00:28:42,189
out the value of this counter value

556
00:28:39,360 --> 00:28:45,549
<font color="#E5E5E5">counter value is called we we</font><font color="#CCCCCC"> seen</font><font color="#E5E5E5"> the</font>

557
00:28:42,190 --> 00:28:49,660
<font color="#CCCCCC">cats now</font><font color="#E5E5E5"> it's called every time someone</font>

558
00:28:45,549 --> 00:28:51,760
called<font color="#E5E5E5"> endpoints</font><font color="#CCCCCC"> I chose cats</font><font color="#E5E5E5"> if it's</font>

559
00:28:49,660 --> 00:28:54,400
for their normal<font color="#CCCCCC"> in pointer for the</font>

560
00:28:51,760 --> 00:28:56,169
<font color="#E5E5E5">royal point</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> we see one two</font>

561
00:28:54,400 --> 00:28:58,210
<font color="#E5E5E5">three times it's an atomic counter so</font>

562
00:28:56,169 --> 00:29:01,780
you know<font color="#E5E5E5"> many</font><font color="#CCCCCC"> times the cats are being</font>

563
00:28:58,210 --> 00:29:04,110
showed up and I<font color="#E5E5E5"> just want to be able to</font>

564
00:29:01,780 --> 00:29:09,010
<font color="#E5E5E5">extract that information without having</font>

565
00:29:04,110 --> 00:29:11,110
like well you can monitor this like

566
00:29:09,010 --> 00:29:12,309
adding a pro me to send point or adding

567
00:29:11,110 --> 00:29:14,559
an influx<font color="#CCCCCC"> science and send</font><font color="#E5E5E5"> information</font>

568
00:29:12,309 --> 00:29:16,629
out or log into a file and<font color="#E5E5E5"> send them</font>

569
00:29:14,559 --> 00:29:19,660
<font color="#E5E5E5">somewhere or you can extract information</font>

570
00:29:16,630 --> 00:29:25,080
<font color="#E5E5E5">using any media and this would want to</font>

571
00:29:19,660 --> 00:29:25,080
do so<font color="#CCCCCC"> I have the cats here</font>

572
00:29:31,990 --> 00:29:40,510
and what I want<font color="#E5E5E5"> to do is this</font><font color="#CCCCCC"> one-liner</font>

573
00:29:34,480 --> 00:29:43,870
here so it's big enough<font color="#CCCCCC"> and I want to do</font>

574
00:29:40,510 --> 00:29:46,390
<font color="#CCCCCC">QC tell tracer on</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> read probe you</font>

575
00:29:43,870 --> 00:29:48,250
frog doesn't<font color="#CCCCCC"> give you the return value</font>

576
00:29:46,390 --> 00:29:50,830
of the function<font color="#E5E5E5"> you</font><font color="#CCCCCC"> retro gives you the</font>

577
00:29:48,250 --> 00:29:54,460
return<font color="#E5E5E5"> value key probe and key</font>

578
00:29:50,830 --> 00:29:57,730
<font color="#CCCCCC">read-through same thing</font><font color="#E5E5E5"> so I attach</font>

579
00:29:54,460 --> 00:29:59,050
these<font color="#E5E5E5"> you read probe to my I don't</font>

580
00:29:57,730 --> 00:30:01,180
really know<font color="#CCCCCC"> where the binaries in</font><font color="#E5E5E5"> the</font>

581
00:29:59,050 --> 00:30:04,990
container so<font color="#CCCCCC"> I just use</font><font color="#E5E5E5"> its process ID</font>

582
00:30:01,180 --> 00:30:08,530
and get the<font color="#E5E5E5"> binary</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> Excel and they</font>

583
00:30:04,990 --> 00:30:10,240
want<font color="#E5E5E5"> to print the counter and they will</font>

584
00:30:08,530 --> 00:30:16,680
get the value from<font color="#E5E5E5"> this main counter</font>

585
00:30:10,240 --> 00:30:16,680
<font color="#E5E5E5">value and the pod is this one so</font>

586
00:30:23,000 --> 00:30:38,210
one of them<font color="#CCCCCC"> this</font><font color="#E5E5E5"> one and they just use</font>

587
00:30:28,370 --> 00:30:44,379
<font color="#CCCCCC">it here I start asleep when I started I</font>

588
00:30:38,210 --> 00:30:44,380
can do crystal<font color="#CCCCCC"> trace get o a</font><font color="#E5E5E5"> sport or</font>

589
00:30:44,410 --> 00:30:48,910
<font color="#CCCCCC">maybe it's better</font><font color="#E5E5E5"> sake here</font>

590
00:30:54,400 --> 00:30:57,120
<font color="#E5E5E5">okay</font>

591
00:30:57,440 --> 00:31:02,059
I didn't have the<font color="#E5E5E5"> Marlboro for</font><font color="#CCCCCC"> crisis</font>

592
00:30:59,600 --> 00:31:04,939
and<font color="#E5E5E5"> okay</font>

593
00:31:02,059 --> 00:31:08,149
they started and saying<font color="#E5E5E5"> hey I'm waiting</font>

594
00:31:04,940 --> 00:31:11,870
for<font color="#E5E5E5"> you to</font><font color="#CCCCCC"> sign</font><font color="#E5E5E5"> ctrl C because controls</font>

595
00:31:08,150 --> 00:31:15,740
that signal is used<font color="#E5E5E5"> to tell the problem</font>

596
00:31:11,870 --> 00:31:17,139
<font color="#E5E5E5">to dump out</font><font color="#CCCCCC"> the maps can be</font><font color="#E5E5E5"> bf trace and</font>

597
00:31:15,740 --> 00:31:22,059
[Music]

598
00:31:17,140 --> 00:31:22,059
so I can do<font color="#CCCCCC"> trace get</font>

599
00:31:25,789 --> 00:31:34,220
oh no my<font color="#E5E5E5"> Hebron in</font><font color="#CCCCCC"> the namespace so the</font>

600
00:31:32,600 --> 00:31:37,998
experience is<font color="#CCCCCC"> very similar</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> normal</font>

601
00:31:34,220 --> 00:31:40,789
QC t ell programs and I say that I<font color="#E5E5E5"> have</font>

602
00:31:37,999 --> 00:31:45,220
this<font color="#E5E5E5"> procedural trace here and they see</font>

603
00:31:40,789 --> 00:31:45,220
that it's<font color="#E5E5E5"> attached now</font>

604
00:31:57,960 --> 00:32:06,659
I just want to like do a<font color="#CCCCCC"> call</font><font color="#E5E5E5"> to goes to</font>

605
00:32:02,309 --> 00:32:12,840
the cat some point it is in the natural

606
00:32:06,659 --> 00:32:14,909
namespace and<font color="#E5E5E5"> okay this is the HTML one</font>

607
00:32:12,840 --> 00:32:17,189
point and I just<font color="#CCCCCC"> want the Rowan but the</font>

608
00:32:14,909 --> 00:32:19,919
<font color="#E5E5E5">raw</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> point so you see that I have</font>

609
00:32:17,190 --> 00:32:23,669
<font color="#CCCCCC">this counter with three cats</font><font color="#E5E5E5"> here</font>

610
00:32:19,919 --> 00:32:30,990
showing<font color="#CCCCCC"> for five and I have this number</font>

611
00:32:23,669 --> 00:32:33,510
<font color="#E5E5E5">year</font><font color="#CCCCCC"> two so every</font><font color="#E5E5E5"> time I called the cat</font>

612
00:32:30,990 --> 00:32:37,020
it gives me kiss me the country

613
00:32:33,510 --> 00:32:39,539
increasing in from the<font color="#CCCCCC"> vpf extracted</font>

614
00:32:37,020 --> 00:32:42,629
from my<font color="#CCCCCC"> VBF</font><font color="#E5E5E5"> trace program started from</font>

615
00:32:39,539 --> 00:32:45,809
<font color="#CCCCCC">my laptop</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> cluster might be</font>

616
00:32:42,630 --> 00:32:48,480
anywhere<font color="#CCCCCC"> so it's a very</font><font color="#E5E5E5"> good Alpert</font>

617
00:32:45,809 --> 00:32:52,970
extract information<font color="#E5E5E5"> this way and other</font>

618
00:32:48,480 --> 00:32:52,970
one-liners<font color="#E5E5E5"> I prepared for these are</font>

619
00:32:58,950 --> 00:33:02,370
like this one

620
00:33:03,030 --> 00:33:07,110
same note in<font color="#CCCCCC"> this case in this case you</font>

621
00:33:05,430 --> 00:33:10,020
<font color="#E5E5E5">know they want to see how many time the</font>

622
00:33:07,110 --> 00:33:13,350
<font color="#CCCCCC">see center while Carl Siskel has been</font>

623
00:33:10,020 --> 00:33:17,460
called<font color="#E5E5E5"> and I'm creating your map called</font>

624
00:33:13,350 --> 00:33:20,909
probe at and<font color="#E5E5E5"> parentheses is create a map</font>

625
00:33:17,460 --> 00:33:23,460
and the cam function lets you see<font color="#CCCCCC"> how</font>

626
00:33:20,910 --> 00:33:29,090
<font color="#E5E5E5">many times is that things be called and</font>

627
00:33:23,460 --> 00:33:29,090
same thing<font color="#CCCCCC"> I will wait for it to run oh</font>

628
00:33:31,940 --> 00:33:35,420
I didn't do that

629
00:33:43,200 --> 00:33:45,830
<font color="#E5E5E5">touch</font>

630
00:33:48,620 --> 00:33:56,120
attaching 300 probes<font color="#E5E5E5"> because see</font><font color="#CCCCCC"> Center</font>

631
00:33:51,919 --> 00:33:58,400
<font color="#CCCCCC">Cisco Lala and</font><font color="#E5E5E5"> then they just plot the</font>

632
00:33:56,120 --> 00:34:02,389
resource so see center piece of<font color="#E5E5E5"> ass</font>

633
00:33:58,400 --> 00:34:07,000
<font color="#CCCCCC">isn't our socket 435 times in one second</font>

634
00:34:02,390 --> 00:34:07,000
right<font color="#E5E5E5"> but another interesting one is</font>

635
00:34:07,300 --> 00:34:16,489
counting<font color="#E5E5E5"> BFS</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so this is what I</font>

636
00:34:13,429 --> 00:34:18,560
<font color="#E5E5E5">said</font><font color="#CCCCCC"> before every time a file is written</font>

637
00:34:16,489 --> 00:34:24,618
<font color="#E5E5E5">in the news</font><font color="#CCCCCC"> Colonel it goes through the</font>

638
00:34:18,560 --> 00:34:28,070
<font color="#CCCCCC">VF s VF s right here I just</font><font color="#E5E5E5"> well this is</font>

639
00:34:24,619 --> 00:34:30,080
<font color="#E5E5E5">not see I can import Linux headers in</font>

640
00:34:28,070 --> 00:34:31,790
<font color="#CCCCCC">vpf trace using the same notation I can</font>

641
00:34:30,080 --> 00:34:34,369
<font color="#E5E5E5">create structures using the same</font>

642
00:34:31,790 --> 00:34:38,540
notation<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> it's easier for</font><font color="#E5E5E5"> one to</font>

643
00:34:34,369 --> 00:34:41,270
start informations but so I extract<font color="#E5E5E5"> the</font>

644
00:34:38,540 --> 00:34:43,719
file information<font color="#CCCCCC"> from the file</font>

645
00:34:41,270 --> 00:34:48,619
descriptor<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> I create a map that</font>

646
00:34:43,719 --> 00:35:05,149
<font color="#CCCCCC">has file</font><font color="#E5E5E5"> name and the sum of bytes that</font>

647
00:34:48,619 --> 00:35:07,609
<font color="#E5E5E5">have been written</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then I just go</font><font color="#CCCCCC"> to</font>

648
00:35:05,150 --> 00:35:10,310
the<font color="#CCCCCC"> Internet and do some things just</font>

649
00:35:07,609 --> 00:35:11,598
<font color="#CCCCCC">because it creates some well this</font><font color="#E5E5E5"> for it</font>

650
00:35:10,310 --> 00:35:15,710
<font color="#E5E5E5">is fast I was running on this</font><font color="#CCCCCC"> machine</font>

651
00:35:11,599 --> 00:35:17,570
and this machine<font color="#E5E5E5"> is under is under</font>

652
00:35:15,710 --> 00:35:20,780
<font color="#E5E5E5">control so and this is not my get up</font>

653
00:35:17,570 --> 00:35:26,390
<font color="#E5E5E5">because it Leonardo's get up and I just</font>

654
00:35:20,780 --> 00:35:30,349
control see here and I say<font color="#E5E5E5"> I see that</font>

655
00:35:26,390 --> 00:35:33,230
there's some stuff<font color="#E5E5E5"> running</font><font color="#CCCCCC"> I see that</font>

656
00:35:30,349 --> 00:35:38,119
TCP v6 because the<font color="#E5E5E5"> folsome Internet is</font>

657
00:35:33,230 --> 00:35:40,280
doomed<font color="#CCCCCC"> ipv6 so it's not ECP and I see</font>

658
00:35:38,119 --> 00:35:42,950
that<font color="#E5E5E5"> Firefox is doing a lot</font><font color="#CCCCCC"> of things</font>

659
00:35:40,280 --> 00:35:44,410
with sequel<font color="#E5E5E5"> ID and everything</font><font color="#CCCCCC"> and</font>

660
00:35:42,950 --> 00:35:47,270
[Music]

661
00:35:44,410 --> 00:35:50,560
another interesting<font color="#CCCCCC"> thing is seeing</font><font color="#E5E5E5"> the</font>

662
00:35:47,270 --> 00:35:50,560
<font color="#E5E5E5">same thing with the histogram</font>

663
00:35:52,020 --> 00:36:00,540
so let's<font color="#E5E5E5"> stick around</font><font color="#CCCCCC"> Saturday whatever</font>

664
00:35:56,250 --> 00:36:03,840
and control<font color="#E5E5E5"> seed in this case I'm seeing</font>

665
00:36:00,540 --> 00:36:06,150
not<font color="#CCCCCC"> justify bites return but also the</font>

666
00:36:03,840 --> 00:36:09,600
<font color="#CCCCCC">distribution of the bites return per</font>

667
00:36:06,150 --> 00:36:12,570
<font color="#CCCCCC">chance so like for this cookie c.coli 12</font>

668
00:36:09,600 --> 00:36:17,640
<font color="#CCCCCC">i see that it's between 16 and 32 bytes</font>

669
00:36:12,570 --> 00:36:20,820
or between 32 and 64 kilobytes<font color="#E5E5E5"> well if I</font>

670
00:36:17,640 --> 00:36:24,569
go to TCP<font color="#E5E5E5"> it becomes creamy clear clear</font>

671
00:36:20,820 --> 00:36:27,120
that the<font color="#CCCCCC"> TCP RFC has been</font><font color="#E5E5E5"> implemented</font>

672
00:36:24,570 --> 00:36:31,350
correctly because it ranges<font color="#CCCCCC"> from 16</font>

673
00:36:27,120 --> 00:36:33,060
bytes to a kilobyte<font color="#E5E5E5"> right so if</font><font color="#CCCCCC"> you're</font>

674
00:36:31,350 --> 00:36:35,460
implementing your own<font color="#E5E5E5"> TCP you handy</font>

675
00:36:33,060 --> 00:36:42,690
bugger through this<font color="#E5E5E5"> who doesn't</font><font color="#CCCCCC"> do that</font>

676
00:36:35,460 --> 00:36:46,200
<font color="#E5E5E5">and turns out the resources for a PDF</font>

677
00:36:42,690 --> 00:36:49,590
are starting to pop out from<font color="#CCCCCC"> the</font>

678
00:36:46,200 --> 00:36:50,700
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> but there's not</font><font color="#CCCCCC"> really yet a</font>

679
00:36:49,590 --> 00:36:53,550
book for it

680
00:36:50,700 --> 00:36:56,910
so the width caliber and just your

681
00:36:53,550 --> 00:37:00,150
writing<font color="#CCCCCC"> 1 and this book</font><font color="#E5E5E5"> is coming out</font>

682
00:36:56,910 --> 00:37:02,279
from<font color="#E5E5E5"> real need some</font><font color="#CCCCCC"> sometimes this year</font>

683
00:37:00,150 --> 00:37:07,190
<font color="#CCCCCC">and next year</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> note it's not really</font>

684
00:37:02,280 --> 00:37:10,290
not public yet<font color="#CCCCCC"> but a</font><font color="#E5E5E5"> book is coming and</font>

685
00:37:07,190 --> 00:37:13,860
as I said there's<font color="#CCCCCC"> they're they're being</font>

686
00:37:10,290 --> 00:37:16,830
contribution from my<font color="#CCCCCC"> adviser</font><font color="#E5E5E5"> see Liam</font>

687
00:37:13,860 --> 00:37:19,140
and other entities<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> security</font>

688
00:37:16,830 --> 00:37:22,020
models<font color="#E5E5E5"> use these we have</font><font color="#CCCCCC"> seen and</font>

689
00:37:19,140 --> 00:37:24,180
there's a slightly references for you so

690
00:37:22,020 --> 00:37:27,300
if you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> take a photo check this</font>

691
00:37:24,180 --> 00:37:30,589
for yourself<font color="#E5E5E5"> and it's everything I</font>

692
00:37:27,300 --> 00:37:36,540
bought<font color="#E5E5E5"> a nice domain it's called BBF Sh</font>

693
00:37:30,590 --> 00:37:38,160
<font color="#E5E5E5">nice if anyone wants an alias just write</font>

694
00:37:36,540 --> 00:37:41,850
me an email and we'll be<font color="#E5E5E5"> happy</font><font color="#CCCCCC"> to give</font>

695
00:37:38,160 --> 00:37:43,920
it<font color="#E5E5E5"> to</font><font color="#CCCCCC"> you just because this</font><font color="#E5E5E5"> community</font>

696
00:37:41,850 --> 00:37:46,500
want to have more<font color="#CCCCCC"> people looking</font><font color="#E5E5E5"> at the</font>

697
00:37:43,920 --> 00:37:48,360
<font color="#E5E5E5">BPF and having a nice email puts you in</font>

698
00:37:46,500 --> 00:37:50,070
<font color="#E5E5E5">the situation so that you have to do</font>

699
00:37:48,360 --> 00:37:54,630
that<font color="#E5E5E5"> because you</font><font color="#CCCCCC"> are the email address</font>

700
00:37:50,070 --> 00:37:57,050
<font color="#CCCCCC">right I'm joking and if there are any</font>

701
00:37:54,630 --> 00:37:57,050
<font color="#CCCCCC">questions</font>

702
00:38:02,650 --> 00:38:38,930
thank you it's<font color="#E5E5E5"> shut down</font><font color="#CCCCCC"> you want to</font><font color="#E5E5E5"> use</font>

703
00:38:06,349 --> 00:38:41,530
<font color="#E5E5E5">mine if understanding I don't you you</font>

704
00:38:38,930 --> 00:38:48,009
want<font color="#E5E5E5"> you what you can come if you I</font>

705
00:38:41,530 --> 00:38:48,010
don't<font color="#E5E5E5"> mind showing me my thing here</font><font color="#CCCCCC"> I</font>

706
00:38:55,480 --> 00:38:58,480
don't

707
00:39:02,570 --> 00:39:11,150
probably I have no working<font color="#E5E5E5"> years but</font>

708
00:39:07,890 --> 00:39:11,150
it's<font color="#E5E5E5"> not working</font>

709
00:39:12,140 --> 00:39:23,040
tell me well<font color="#E5E5E5"> you know the question right</font>

710
00:39:17,610 --> 00:39:25,920
now nice<font color="#CCCCCC"> when you unclip control</font><font color="#E5E5E5"> a</font>

711
00:39:23,040 --> 00:39:27,360
<font color="#CCCCCC">través you target a node</font><font color="#E5E5E5"> right well it's</font>

712
00:39:25,920 --> 00:39:30,450
also possible to filter for<font color="#E5E5E5"> specific</font>

713
00:39:27,360 --> 00:39:31,790
containers or for specific yeah I did

714
00:39:30,450 --> 00:39:34,230
that

715
00:39:31,790 --> 00:39:41,370
<font color="#E5E5E5">yeah yeah I would</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> me much wasn't</font>

716
00:39:34,230 --> 00:39:43,980
<font color="#E5E5E5">clear I can show you that so the</font>

717
00:39:41,370 --> 00:39:46,290
<font color="#E5E5E5">question was it's possible to target a</font>

718
00:39:43,980 --> 00:39:55,170
<font color="#CCCCCC">specific public usage our</font><font color="#E5E5E5"> trace</font><font color="#CCCCCC"> yes it</font>

719
00:39:46,290 --> 00:39:58,050
is like in<font color="#E5E5E5"> this case here</font><font color="#CCCCCC"> I was using</font>

720
00:39:55,170 --> 00:40:03,450
both<font color="#E5E5E5"> slash means the published</font><font color="#CCCCCC"> adopt</font>

721
00:39:58,050 --> 00:40:05,430
what is<font color="#E5E5E5"> happening</font><font color="#CCCCCC"> instead</font><font color="#E5E5E5"> of the node</font><font color="#CCCCCC"> it</font>

722
00:40:03,450 --> 00:40:08,730
turns out<font color="#E5E5E5"> that this report is</font><font color="#CCCCCC"> not very</font>

723
00:40:05,430 --> 00:40:11,569
well done yet because<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> to do some</font>

724
00:40:08,730 --> 00:40:15,180
changes<font color="#CCCCCC"> to detect</font><font color="#E5E5E5"> trace to support</font>

725
00:40:11,570 --> 00:40:17,670
prosper hidden in spaces<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> kinda</font>

726
00:40:15,180 --> 00:40:20,460
<font color="#E5E5E5">works but they're worse to make it</font>

727
00:40:17,670 --> 00:40:23,250
better<font color="#E5E5E5"> and there's actually support for</font>

728
00:40:20,460 --> 00:40:26,310
<font color="#E5E5E5">C group which will</font><font color="#CCCCCC"> be PS</font><font color="#E5E5E5"> trace that you</font>

729
00:40:23,250 --> 00:40:27,990
can use with you<font color="#CCCCCC"> seated face but</font><font color="#E5E5E5"> C group</font>

730
00:40:26,310 --> 00:40:31,410
which<font color="#E5E5E5"> you are not the default infinity</font>

731
00:40:27,990 --> 00:40:35,580
so I didn't make<font color="#E5E5E5"> an</font><font color="#CCCCCC"> example just because</font>

732
00:40:31,410 --> 00:40:37,920
no<font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> doing the call this</font>

733
00:40:35,580 --> 00:40:44,370
afternoon<font color="#CCCCCC"> that</font><font color="#E5E5E5"> showed the C group</font>

734
00:40:37,920 --> 00:40:48,150
support<font color="#E5E5E5"> very well so so yeah we found</font>

735
00:40:44,370 --> 00:40:51,319
<font color="#CCCCCC">back so</font><font color="#E5E5E5"> I really I talking</font><font color="#CCCCCC"> about</font>

736
00:40:48,150 --> 00:40:55,109
software<font color="#E5E5E5"> anyway</font><font color="#CCCCCC"> any other question</font><font color="#E5E5E5"> oh</font>

737
00:40:51,320 --> 00:41:00,059
yeah we<font color="#CCCCCC"> can</font>

738
00:40:55,109 --> 00:41:02,098
I think<font color="#E5E5E5"> her presentation</font><font color="#CCCCCC"> really nice I'm</font>

739
00:41:00,059 --> 00:41:03,959
really interested in<font color="#E5E5E5"> this but I'm also</font>

740
00:41:02,099 --> 00:41:05,069
secured<font color="#E5E5E5"> is there any chance I can shoot</font>

741
00:41:03,959 --> 00:41:07,919
myself in the foot

742
00:41:05,069 --> 00:41:10,890
I want to test this on<font color="#E5E5E5"> a server and</font><font color="#CCCCCC"> then</font>

743
00:41:07,920 --> 00:41:12,390
<font color="#CCCCCC">I do something stupid I ran out of that</font>

744
00:41:10,890 --> 00:41:14,368
without<font color="#E5E5E5"> of city or something and I</font>

745
00:41:12,390 --> 00:41:16,709
cannot connect to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Box anymore it's</font>

746
00:41:14,369 --> 00:41:21,930
possible<font color="#E5E5E5"> for me it's</font><font color="#CCCCCC"> possible with BB a</font>

747
00:41:16,709 --> 00:41:23,578
finger<font color="#E5E5E5"> like for example</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> the only</font>

748
00:41:21,930 --> 00:41:26,759
<font color="#CCCCCC">Yosuke</font><font color="#E5E5E5"> that happened to me that</font><font color="#CCCCCC"> time</font>

749
00:41:23,579 --> 00:41:29,160
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> lock it</font><font color="#CCCCCC"> up itself or the</font>

750
00:41:26,759 --> 00:41:31,609
machine has been with<font color="#CCCCCC"> XDP because it was</font>

751
00:41:29,160 --> 00:41:34,618
<font color="#CCCCCC">mending with</font><font color="#E5E5E5"> packets so I just basically</font>

752
00:41:31,609 --> 00:41:37,828
drop it all<font color="#E5E5E5"> the packets and myself</font>

753
00:41:34,619 --> 00:41:41,489
attracted to like the same<font color="#CCCCCC"> things we do</font>

754
00:41:37,829 --> 00:41:44,369
<font color="#E5E5E5">with the Iowa die today and that happens</font>

755
00:41:41,489 --> 00:41:46,229
or like<font color="#E5E5E5"> that you create a loop with</font>

756
00:41:44,369 --> 00:41:50,239
<font color="#CCCCCC">Batistuta you go into</font><font color="#E5E5E5"> the same interface</font>

757
00:41:46,229 --> 00:41:52,828
and<font color="#E5E5E5"> you basically lock yourself out but</font>

758
00:41:50,239 --> 00:41:54,479
the<font color="#E5E5E5"> pair programs are not persistent in</font>

759
00:41:52,829 --> 00:41:57,239
that way you<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> log them again</font>

760
00:41:54,479 --> 00:41:59,009
so you just restart<font color="#CCCCCC"> the machine and with</font>

761
00:41:57,239 --> 00:42:01,650
<font color="#CCCCCC">if your face doesn't</font><font color="#E5E5E5"> allow you to do</font>

762
00:41:59,009 --> 00:42:06,809
this kind<font color="#CCCCCC"> of thing</font><font color="#E5E5E5"> so now we live your</font>

763
00:42:01,650 --> 00:42:07,589
trade<font color="#E5E5E5"> but</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be the</font><font color="#CCCCCC"> original yes next</font>

764
00:42:06,809 --> 00:42:10,999
<font color="#CCCCCC">question</font>

765
00:42:07,589 --> 00:42:10,999
oh we have<font color="#E5E5E5"> to</font>

766
00:42:14,200 --> 00:42:19,640
thanks for great presentation

767
00:42:16,700 --> 00:42:22,460
I think it's very useful<font color="#E5E5E5"> tools</font><font color="#CCCCCC"> for my</font>

768
00:42:19,640 --> 00:42:25,819
mostly kubernetes<font color="#E5E5E5"> administrators so I</font>

769
00:42:22,460 --> 00:42:30,410
will<font color="#CCCCCC"> use some of</font><font color="#E5E5E5"> your tips but my</font>

770
00:42:25,820 --> 00:42:32,210
question is happy<font color="#CCCCCC"> Oh Josi cystic or and</font>

771
00:42:30,410 --> 00:42:38,170
could you<font color="#E5E5E5"> compare your dissolution of</font>

772
00:42:32,210 --> 00:42:43,100
cystic<font color="#E5E5E5"> well yes</font><font color="#CCCCCC"> I used to stick to</font><font color="#E5E5E5"> a</font>

773
00:42:38,170 --> 00:42:44,360
<font color="#CCCCCC">stinky run to the kernel module that's</font>

774
00:42:43,100 --> 00:42:49,850
one<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> one avoid</font>

775
00:42:44,360 --> 00:42:52,910
personally so I was<font color="#E5E5E5"> starting in</font>

776
00:42:49,850 --> 00:42:54,740
exploring honesty<font color="#CCCCCC"> I think that physics</font>

777
00:42:52,910 --> 00:42:56,930
<font color="#CCCCCC">does</font><font color="#E5E5E5"> very well the presentation of the</font>

778
00:42:54,740 --> 00:42:58,490
day<font color="#CCCCCC"> for the extract but I</font><font color="#E5E5E5"> think that</font>

779
00:42:56,930 --> 00:43:01,040
<font color="#E5E5E5">those data can be extracted those who</font>

780
00:42:58,490 --> 00:43:04,180
will be there for<font color="#CCCCCC"> them so like it would</font>

781
00:43:01,040 --> 00:43:06,560
be<font color="#E5E5E5"> cool if there was and if you have to</font>

782
00:43:04,180 --> 00:43:08,779
that extract the same information

783
00:43:06,560 --> 00:43:12,259
<font color="#CCCCCC">artistic this microphone is in the drive</font>

784
00:43:08,780 --> 00:43:14,740
me crazy<font color="#E5E5E5"> and but that</font><font color="#CCCCCC"> has a nice</font>

785
00:43:12,260 --> 00:43:16,820
interface<font color="#E5E5E5"> that's what we means like</font>

786
00:43:14,740 --> 00:43:18,350
that's the same<font color="#CCCCCC"> reason I did this</font>

787
00:43:16,820 --> 00:43:20,840
because I just<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> have something</font>

788
00:43:18,350 --> 00:43:23,710
<font color="#E5E5E5">that just</font><font color="#CCCCCC"> let</font><font color="#E5E5E5"> me do stuff like without</font>

789
00:43:20,840 --> 00:43:25,730
<font color="#E5E5E5">having to</font><font color="#CCCCCC"> SSH in know my machines and</font>

790
00:43:23,710 --> 00:43:31,720
it's also<font color="#E5E5E5"> because I don't really know</font>

791
00:43:25,730 --> 00:43:34,390
where the things<font color="#E5E5E5"> are right - yes - see</font>

792
00:43:31,720 --> 00:43:37,629
the circles<font color="#E5E5E5"> much interference</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font>

793
00:43:34,390 --> 00:43:39,629
have a question<font color="#E5E5E5"> over here</font><font color="#CCCCCC"> thank you for</font>

794
00:43:37,630 --> 00:43:43,839
<font color="#CCCCCC">the presentation</font>

795
00:43:39,630 --> 00:43:47,470
<font color="#E5E5E5">PSICOM still using classic</font><font color="#CCCCCC"> PPF are not</font>

796
00:43:43,839 --> 00:43:50,230
<font color="#CCCCCC">EPP f</font><font color="#E5E5E5"> yeah if you do do you not know if</font>

797
00:43:47,470 --> 00:43:59,848
and<font color="#E5E5E5"> when the EPP f support will be</font>

798
00:43:50,230 --> 00:44:07,000
extended to succumb to<font color="#CCCCCC"> tough question</font><font color="#E5E5E5"> i</font>

799
00:43:59,849 --> 00:44:09,579
<font color="#E5E5E5">i've been</font><font color="#CCCCCC"> reading recently that it's</font>

800
00:44:07,000 --> 00:44:11,680
<font color="#E5E5E5">arriving</font><font color="#CCCCCC"> I don't think it's coming</font><font color="#E5E5E5"> this</font>

801
00:44:09,579 --> 00:44:13,210
year<font color="#E5E5E5"> so honestly I don't</font><font color="#CCCCCC"> think that's</font>

802
00:44:11,680 --> 00:44:15,788
<font color="#CCCCCC">any</font><font color="#E5E5E5"> progress</font>

803
00:44:13,210 --> 00:44:19,109
that's like immeasurable in a way that

804
00:44:15,789 --> 00:44:21,579
you can say a injured it's<font color="#CCCCCC"> arriving</font>

805
00:44:19,109 --> 00:44:29,038
<font color="#E5E5E5">that's all</font><font color="#CCCCCC"> that selenium</font><font color="#E5E5E5"> I'm not</font>

806
00:44:21,579 --> 00:44:32,829
involved<font color="#E5E5E5"> in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so any further question</font>

807
00:44:29,039 --> 00:44:36,869
<font color="#E5E5E5">okay answer question and thanks for</font>

808
00:44:32,829 --> 00:44:36,869
<font color="#E5E5E5">qualifying that class Olivia</font><font color="#CCCCCC"> Olivia</font>

809
00:44:43,039 --> 00:44:47,910
so can<font color="#E5E5E5"> you aggregate data from a crowd</font>

810
00:44:45,900 --> 00:44:49,469
<font color="#CCCCCC">for around</font><font color="#E5E5E5"> the cluster or they need to</font>

811
00:44:47,910 --> 00:44:55,170
target<font color="#CCCCCC"> a specific know that a specific</font>

812
00:44:49,469 --> 00:44:57,809
container<font color="#E5E5E5"> nice question</font><font color="#CCCCCC"> and not</font><font color="#E5E5E5"> yet</font>

813
00:44:55,170 --> 00:45:00,539
because<font color="#CCCCCC"> VPS faces with the QC Tetris</font>

814
00:44:57,809 --> 00:45:02,430
right<font color="#E5E5E5"> there asking order with digital</font>

815
00:45:00,539 --> 00:45:04,410
trace<font color="#CCCCCC"> no yeah</font><font color="#E5E5E5"> because big your face</font><font color="#CCCCCC"> has</font>

816
00:45:02,430 --> 00:45:09,719
<font color="#CCCCCC">been created specifically for single</font>

817
00:45:04,410 --> 00:45:11,489
<font color="#CCCCCC">node so</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> cannot but it can be done</font>

818
00:45:09,719 --> 00:45:14,779
well we are working<font color="#E5E5E5"> on that</font><font color="#CCCCCC"> like we are</font>

819
00:45:11,489 --> 00:45:17,249
working on like<font color="#E5E5E5"> having visual trace</font>

820
00:45:14,779 --> 00:45:20,940
expose a different format to aggregate

821
00:45:17,249 --> 00:45:24,629
from multiple not<font color="#CCCCCC"> one</font><font color="#E5E5E5"> not yet but</font><font color="#CCCCCC"> that</font>

822
00:45:20,940 --> 00:45:26,819
in my personal<font color="#CCCCCC"> plans at least</font><font color="#E5E5E5"> because</font>

823
00:45:24,630 --> 00:45:28,049
I'm<font color="#E5E5E5"> probably doing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if anyone</font><font color="#CCCCCC"> wants</font>

824
00:45:26,819 --> 00:45:32,339
to contribute<font color="#CCCCCC"> that and will be</font><font color="#E5E5E5"> super</font>

825
00:45:28,049 --> 00:45:35,339
happy<font color="#E5E5E5"> it's mostly keeping VP of trades</font>

826
00:45:32,339 --> 00:45:37,200
because<font color="#CCCCCC"> UCL</font><font color="#E5E5E5"> trades just</font><font color="#CCCCCC"> runs that</font><font color="#E5E5E5"> I can</font>

827
00:45:35,339 --> 00:45:41,670
run<font color="#E5E5E5"> the</font><font color="#CCCCCC"> program in multiple</font><font color="#E5E5E5"> machines so</font>

828
00:45:37,200 --> 00:45:43,169
it will<font color="#CCCCCC"> work right</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> with trees</font><font color="#E5E5E5"> but it</font>

829
00:45:41,670 --> 00:45:45,809
doesn't work<font color="#E5E5E5"> with application because</font>

830
00:45:43,170 --> 00:45:52,130
aggregations are<font color="#CCCCCC"> are basically done that</font>

831
00:45:45,809 --> 00:45:55,619
machines are an answer<font color="#CCCCCC"> question hi</font>

832
00:45:52,130 --> 00:45:58,049
<font color="#E5E5E5">thanks for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> nice presentation</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> of a</font>

833
00:45:55,619 --> 00:46:00,660
general<font color="#CCCCCC"> PPF</font><font color="#E5E5E5"> EVP have a question but</font><font color="#CCCCCC"> also</font>

834
00:45:58,049 --> 00:46:06,559
<font color="#CCCCCC">maybe can</font><font color="#E5E5E5"> be applied to bananas as well</font>

835
00:46:00,660 --> 00:46:11,190
as<font color="#E5E5E5"> how safe is it</font><font color="#CCCCCC"> to run at racing</font>

836
00:46:06,559 --> 00:46:15,029
program<font color="#E5E5E5"> on a high load production server</font>

837
00:46:11,190 --> 00:46:17,670
to do real analysis of what's happening

838
00:46:15,029 --> 00:46:20,069
<font color="#E5E5E5">is it gonna affect performance and if</font>

839
00:46:17,670 --> 00:46:21,779
yes is there any numbers<font color="#CCCCCC"> of what you can</font>

840
00:46:20,069 --> 00:46:23,940
<font color="#E5E5E5">expect of course it's really probably</font>

841
00:46:21,779 --> 00:46:26,249
<font color="#CCCCCC">difficult to answer depending on what</font>

842
00:46:23,940 --> 00:46:28,170
the program<font color="#E5E5E5"> is doing but yes yeah the</font>

843
00:46:26,249 --> 00:46:29,759
question<font color="#CCCCCC"> is how safe is it and</font><font color="#E5E5E5"> can you</font>

844
00:46:28,170 --> 00:46:32,130
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> run this in</font><font color="#CCCCCC"> production to see</font>

845
00:46:29,759 --> 00:46:34,049
how it how it<font color="#E5E5E5"> works thanks for</font><font color="#CCCCCC"> the</font>

846
00:46:32,130 --> 00:46:38,489
<font color="#E5E5E5">question it's a ticking at every single</font>

847
00:46:34,049 --> 00:46:40,210
<font color="#CCCCCC">call so thanks</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> what you</font>

848
00:46:38,489 --> 00:46:42,190
usually do to know what

849
00:46:40,210 --> 00:46:45,400
your program are doing<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> in general</font>

850
00:46:42,190 --> 00:46:48,490
is<font color="#E5E5E5"> like</font><font color="#CCCCCC"> to use a debugger</font><font color="#E5E5E5"> or use as</font>

851
00:46:45,400 --> 00:46:52,930
trace<font color="#CCCCCC"> these kind of</font><font color="#E5E5E5"> tools</font><font color="#CCCCCC"> those tools</font>

852
00:46:48,490 --> 00:46:54,848
<font color="#CCCCCC">actually put interrupts or dwarf symbols</font>

853
00:46:52,930 --> 00:46:56,609
or whatever in your<font color="#E5E5E5"> program</font><font color="#CCCCCC"> so they need</font>

854
00:46:54,849 --> 00:46:59,740
<font color="#E5E5E5">to</font><font color="#CCCCCC"> interact with their program in a way</font>

855
00:46:56,609 --> 00:47:02,170
while BPF<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> BPF goes to the kernel</font>

856
00:46:59,740 --> 00:47:04,479
<font color="#E5E5E5">the kernel receives all the information</font>

857
00:47:02,170 --> 00:47:08,200
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the program already and you just</font>

858
00:47:04,480 --> 00:47:10,450
attach yourself<font color="#E5E5E5"> on the side and get</font>

859
00:47:08,200 --> 00:47:14,049
information the kernel radius so the

860
00:47:10,450 --> 00:47:17,080
<font color="#CCCCCC">performances impact is not it</font><font color="#E5E5E5"> it's</font>

861
00:47:14,050 --> 00:47:18,640
always<font color="#E5E5E5"> not in the program itself it's</font>

862
00:47:17,080 --> 00:47:21,690
more in<font color="#E5E5E5"> the kernel</font><font color="#CCCCCC"> because you have no</font>

863
00:47:18,640 --> 00:47:25,390
<font color="#CCCCCC">need</font><font color="#E5E5E5"> to process your code but it's very</font>

864
00:47:21,690 --> 00:47:29,170
it's very low like you will not you<font color="#E5E5E5"> will</font>

865
00:47:25,390 --> 00:47:30,910
<font color="#E5E5E5">never well you can do that but you will</font>

866
00:47:29,170 --> 00:47:33,880
never attach like a stray sheep in one

867
00:47:30,910 --> 00:47:39,430
<font color="#E5E5E5">right</font><font color="#CCCCCC"> while you</font><font color="#E5E5E5"> can do that</font><font color="#CCCCCC"> safely with</font>

868
00:47:33,880 --> 00:47:40,869
an MEP<font color="#E5E5E5"> a program okay thanks for a</font>

869
00:47:39,430 --> 00:47:44,500
<font color="#E5E5E5">question that was a team</font><font color="#CCCCCC"> guy he means</font>

870
00:47:40,869 --> 00:47:46,650
<font color="#E5E5E5">the same we</font><font color="#CCCCCC"> have another</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> over</font>

871
00:47:44,500 --> 00:47:46,650
here

872
00:47:48,000 --> 00:47:51,660
any other question

873
00:47:53,670 --> 00:47:59,450
<font color="#E5E5E5">okay then thanks</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the talk</font>

874
00:48:03,450 --> 00:48:05,509
<font color="#E5E5E5">you</font>

