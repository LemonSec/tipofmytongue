1
00:00:16,190 --> 00:00:19,560
cool

2
00:00:17,369 --> 00:00:26,600
so it's 2:30 so a<font color="#E5E5E5"> round of applause</font><font color="#CCCCCC"> for</font>

3
00:00:19,560 --> 00:00:28,860
<font color="#CCCCCC">shield ass and his talk about AI hi</font>

4
00:00:26,600 --> 00:00:31,710
<font color="#E5E5E5">thank you all for coming</font>

5
00:00:28,860 --> 00:00:34,200
I'm very<font color="#E5E5E5"> excited</font><font color="#CCCCCC"> to talk to</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> today I</font>

6
00:00:31,710 --> 00:00:36,239
would<font color="#E5E5E5"> say</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> would like to thank Marty</font>

7
00:00:34,200 --> 00:00:38,730
and Francis for getting such a big<font color="#CCCCCC"> room</font>

8
00:00:36,239 --> 00:00:46,440
<font color="#CCCCCC">it's amazing so please give them a big</font>

9
00:00:38,730 --> 00:00:50,309
round of applause<font color="#CCCCCC"> to so I'm Gilda I</font>

10
00:00:46,440 --> 00:00:53,430
<font color="#E5E5E5">talked here last</font><font color="#CCCCCC"> year and I'm coming</font>

11
00:00:50,310 --> 00:00:55,440
<font color="#CCCCCC">back this year</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I work at Logan Quine</font>

12
00:00:53,430 --> 00:00:58,820
<font color="#E5E5E5">Paris and today I'm going to talk about</font>

13
00:00:55,440 --> 00:01:02,579
<font color="#CCCCCC">AI search with</font><font color="#E5E5E5"> go and tensorflow</font>

14
00:00:58,820 --> 00:01:04,199
so spoiler<font color="#CCCCCC"> AI is</font><font color="#E5E5E5"> really not about</font>

15
00:01:02,579 --> 00:01:06,390
<font color="#E5E5E5">intelligence</font><font color="#CCCCCC"> at all it's just about</font>

16
00:01:04,199 --> 00:01:07,710
small<font color="#CCCCCC"> about magic tricks doing things</font>

17
00:01:06,390 --> 00:01:11,370
that you wouldn't<font color="#CCCCCC"> wouldn't expect a</font>

18
00:01:07,710 --> 00:01:14,580
computer to do<font color="#E5E5E5"> but nonetheless it can do</font>

19
00:01:11,370 --> 00:01:16,950
a<font color="#E5E5E5"> lot of different</font><font color="#CCCCCC"> thing can it can make</font>

20
00:01:14,580 --> 00:01:19,740
of your phone call for you

21
00:01:16,950 --> 00:01:20,520
it can beat<font color="#CCCCCC"> multiple pro-gamer at</font>

22
00:01:19,740 --> 00:01:23,970
<font color="#CCCCCC">Starcraft</font>

23
00:01:20,520 --> 00:01:27,149
at the same time<font color="#E5E5E5"> it can make up invent</font>

24
00:01:23,970 --> 00:01:29,400
some new some<font color="#CCCCCC"> false celebrities</font><font color="#E5E5E5"> or it</font>

25
00:01:27,150 --> 00:01:32,940
can swap faces in the in a very

26
00:01:29,400 --> 00:01:35,100
realistic manner<font color="#CCCCCC"> so today I will</font><font color="#E5E5E5"> show</font>

27
00:01:32,940 --> 00:01:37,380
<font color="#E5E5E5">you how you could use this kind of</font>

28
00:01:35,100 --> 00:01:42,479
<font color="#E5E5E5">state-of-the-art model into your</font><font color="#CCCCCC"> go</font>

29
00:01:37,380 --> 00:01:44,699
application all right so the plan<font color="#CCCCCC"> for</font>

30
00:01:42,479 --> 00:01:47,610
today<font color="#E5E5E5"> first of all</font><font color="#CCCCCC"> will review</font><font color="#E5E5E5"> a bit</font>

31
00:01:44,700 --> 00:01:49,200
some<font color="#E5E5E5"> of the basic of AI and machine and</font>

32
00:01:47,610 --> 00:01:52,380
deep learning<font color="#E5E5E5"> and machine learning</font><font color="#CCCCCC"> and</font>

33
00:01:49,200 --> 00:01:54,600
we'll see how<font color="#E5E5E5"> tensorflow and go</font><font color="#CCCCCC"> work</font>

34
00:01:52,380 --> 00:01:57,060
<font color="#E5E5E5">together then we'll see a first concrete</font>

35
00:01:54,600 --> 00:02:00,298
example with image classification<font color="#E5E5E5"> and</font>

36
00:01:57,060 --> 00:02:01,950
then we'll see<font color="#CCCCCC"> how face recognition can</font>

37
00:02:00,299 --> 00:02:04,200
work<font color="#E5E5E5"> to you and then we'll see how we</font>

38
00:02:01,950 --> 00:02:06,509
<font color="#E5E5E5">can wrap</font><font color="#CCCCCC"> this up too to make an image</font>

39
00:02:04,200 --> 00:02:11,579
search<font color="#CCCCCC"> and then this</font><font color="#E5E5E5"> will be</font><font color="#CCCCCC"> the</font>

40
00:02:06,509 --> 00:02:14,330
conclusion so AI and<font color="#CCCCCC"> tensorflow</font><font color="#E5E5E5"> so it's</font>

41
00:02:11,579 --> 00:02:17,310
a very good time for<font color="#CCCCCC"> a forest developer</font>

42
00:02:14,330 --> 00:02:17,819
<font color="#E5E5E5">regarding AI because all the big players</font>

43
00:02:17,310 --> 00:02:21,689
right

44
00:02:17,819 --> 00:02:23,250
<font color="#CCCCCC">our have a huge focus on a on</font><font color="#E5E5E5"> AI they</font>

45
00:02:21,689 --> 00:02:25,469
are all<font color="#E5E5E5"> competing to get as much</font>

46
00:02:23,250 --> 00:02:29,280
traction as possible<font color="#E5E5E5"> into the</font><font color="#CCCCCC"> al product</font>

47
00:02:25,469 --> 00:02:31,290
and what what the<font color="#CCCCCC"> result is is a lot of</font>

48
00:02:29,280 --> 00:02:33,689
different frameworks<font color="#CCCCCC"> that we can use and</font>

49
00:02:31,290 --> 00:02:36,209
that<font color="#CCCCCC"> we can do very</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> scene with so</font>

50
00:02:33,689 --> 00:02:38,750
Google released<font color="#CCCCCC"> tensorflow</font><font color="#E5E5E5"> which can be</font>

51
00:02:36,209 --> 00:02:41,760
used<font color="#E5E5E5"> with</font><font color="#CCCCCC"> Cara's</font><font color="#E5E5E5"> Facebook a spy touch</font>

52
00:02:38,750 --> 00:02:44,519
<font color="#CCCCCC">Microsoft as the cognitive</font><font color="#E5E5E5"> toolkit and</font>

53
00:02:41,760 --> 00:02:47,939
<font color="#E5E5E5">Amazon developed a mix net which</font><font color="#CCCCCC"> is used</font>

54
00:02:44,519 --> 00:02:49,139
<font color="#E5E5E5">by other companies too and you can also</font>

55
00:02:47,939 --> 00:02:52,920
find<font color="#E5E5E5"> very</font><font color="#CCCCCC"> easily</font>

56
00:02:49,139 --> 00:02:55,019
some models online<font color="#E5E5E5"> so the same Google</font>

57
00:02:52,920 --> 00:02:57,500
<font color="#E5E5E5">Facebook Microsoft are giving</font><font color="#CCCCCC"> away a lot</font>

58
00:02:55,019 --> 00:03:01,470
<font color="#CCCCCC">of</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of models that</font><font color="#E5E5E5"> are ready to</font><font color="#CCCCCC"> use</font>

59
00:02:57,500 --> 00:03:05,609
<font color="#CCCCCC">for you so let's see what are the basic</font>

60
00:03:01,470 --> 00:03:08,549
of AI<font color="#E5E5E5"> so it all</font><font color="#CCCCCC"> start with</font><font color="#E5E5E5"> one of one of</font>

61
00:03:05,609 --> 00:03:10,980
<font color="#CCCCCC">these little buddy so this</font><font color="#E5E5E5"> guy this is</font><font color="#CCCCCC"> a</font>

62
00:03:08,549 --> 00:03:13,829
<font color="#E5E5E5">cell and is is getting some in some</font>

63
00:03:10,980 --> 00:03:17,399
<font color="#E5E5E5">floats as an input and releasing back a</font>

64
00:03:13,829 --> 00:03:19,049
different<font color="#E5E5E5"> fluid</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it has an output so</font>

65
00:03:17,400 --> 00:03:21,659
the function<font color="#CCCCCC"> usually looks like</font>

66
00:03:19,049 --> 00:03:24,120
<font color="#E5E5E5">something like that but we</font><font color="#CCCCCC"> don't really</font>

67
00:03:21,659 --> 00:03:26,220
need<font color="#E5E5E5"> to get into details so that's</font>

68
00:03:24,120 --> 00:03:29,250
that's the<font color="#CCCCCC"> shape of the Sigma function</font>

69
00:03:26,220 --> 00:03:32,040
most of the time<font color="#E5E5E5"> but what is important</font>

70
00:03:29,250 --> 00:03:35,310
is<font color="#CCCCCC"> that these guys can combine with some</font>

71
00:03:32,040 --> 00:03:39,090
other ones<font color="#CCCCCC"> and start to make</font><font color="#E5E5E5"> interesting</font>

72
00:03:35,310 --> 00:03:41,400
thing so after a while<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can have some</font>

73
00:03:39,090 --> 00:03:45,150
some nice thing happening for<font color="#E5E5E5"> example</font>

74
00:03:41,400 --> 00:03:47,489
for from a non<font color="#E5E5E5"> amused picture you can</font>

75
00:03:45,150 --> 00:03:51,139
you can guess the breed<font color="#E5E5E5"> of the of the</font>

76
00:03:47,489 --> 00:03:56,760
dog<font color="#E5E5E5"> maybe you can fail in some other</font>

77
00:03:51,139 --> 00:03:59,400
example<font color="#E5E5E5"> it can it can turn</font><font color="#CCCCCC"> Nikolai's a</font>

78
00:03:56,760 --> 00:04:01,948
recent thought into Nicolas Cage or it

79
00:03:59,400 --> 00:04:07,769
can<font color="#CCCCCC"> protect you from non safe for work</font>

80
00:04:01,949 --> 00:04:10,139
<font color="#CCCCCC">representation so I want just to</font><font color="#E5E5E5"> clarify</font>

81
00:04:07,769 --> 00:04:11,310
a few<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> terms that will certainly</font>

82
00:04:10,139 --> 00:04:14,609
pop up<font color="#E5E5E5"> later</font>

83
00:04:11,310 --> 00:04:16,680
so our<font color="#CCCCCC"> selector</font><font color="#E5E5E5"> is the shape of a</font>

84
00:04:14,609 --> 00:04:22,019
network so that's<font color="#E5E5E5"> a very important</font>

85
00:04:16,680 --> 00:04:25,370
factor<font color="#CCCCCC"> in a network yeah and the next</font>

86
00:04:22,019 --> 00:04:27,350
<font color="#CCCCCC">one</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> one I will use the most is the</font>

87
00:04:25,370 --> 00:04:29,780
so a<font color="#E5E5E5"> model is</font><font color="#CCCCCC"> basically an architecture</font>

88
00:04:27,350 --> 00:04:33,230
<font color="#E5E5E5">with all the the weight and buyers</font>

89
00:04:29,780 --> 00:04:36,799
define so that's here<font color="#E5E5E5"> we see the</font><font color="#CCCCCC"> the</font>

90
00:04:33,230 --> 00:04:40,250
<font color="#E5E5E5">function we've seen just before and and</font>

91
00:04:36,800 --> 00:04:42,680
the<font color="#CCCCCC"> pre train model is the kind of model</font>

92
00:04:40,250 --> 00:04:48,080
that<font color="#E5E5E5"> you can get from Facebook or Google</font>

93
00:04:42,680 --> 00:04:52,040
that already do<font color="#CCCCCC"> a function well</font><font color="#E5E5E5"> and then</font>

94
00:04:48,080 --> 00:04:54,080
a state model<font color="#E5E5E5"> is a format</font><font color="#CCCCCC"> to export this</font>

95
00:04:52,040 --> 00:04:55,780
model and to share it with with some

96
00:04:54,080 --> 00:04:58,789
other people

97
00:04:55,780 --> 00:05:02,059
so now<font color="#E5E5E5"> tensorflow is a framework</font><font color="#CCCCCC"> for</font>

98
00:04:58,790 --> 00:05:05,300
creating<font color="#E5E5E5"> training predicting exporting</font>

99
00:05:02,060 --> 00:05:10,010
and importing<font color="#E5E5E5"> neural networks so it's</font>

100
00:05:05,300 --> 00:05:13,610
it's a<font color="#CCCCCC"> C++ core most of the time</font><font color="#E5E5E5"> for the</font>

101
00:05:10,010 --> 00:05:18,260
training<font color="#E5E5E5"> part it's used using its Python</font>

102
00:05:13,610 --> 00:05:20,600
binding to the<font color="#CCCCCC"> to its</font><font color="#E5E5E5"> C API and so</font>

103
00:05:18,260 --> 00:05:24,020
that's using<font color="#E5E5E5"> Python you will do the</font><font color="#CCCCCC"> the</font>

104
00:05:20,600 --> 00:05:25,670
you will do you<font color="#E5E5E5"> will create the</font><font color="#CCCCCC"> network</font>

105
00:05:24,020 --> 00:05:29,000
you will train it<font color="#E5E5E5"> and then you can</font>

106
00:05:25,670 --> 00:05:31,100
<font color="#CCCCCC">export it</font><font color="#E5E5E5"> to a</font><font color="#CCCCCC"> saved model and the part</font>

107
00:05:29,000 --> 00:05:33,170
<font color="#E5E5E5">that interests us is the on the</font><font color="#CCCCCC"> other</font>

108
00:05:31,100 --> 00:05:37,190
<font color="#E5E5E5">side once a model is trained you can</font>

109
00:05:33,170 --> 00:05:40,280
import it into into into go and you can

110
00:05:37,190 --> 00:05:42,560
run<font color="#E5E5E5"> the prediction using the go API so</font>

111
00:05:40,280 --> 00:05:46,880
in that talk<font color="#CCCCCC"> we'll really just</font><font color="#E5E5E5"> focus on</font>

112
00:05:42,560 --> 00:05:50,450
the go part so<font color="#E5E5E5"> now let's see how the</font>

113
00:05:46,880 --> 00:05:53,120
code looks like so here is<font color="#E5E5E5"> all the code</font>

114
00:05:50,450 --> 00:05:53,780
<font color="#CCCCCC">you</font><font color="#E5E5E5"> need this is all the specific</font>

115
00:05:53,120 --> 00:05:58,010
tensorflow

116
00:05:53,780 --> 00:06:00,380
code so it's it's split in two in<font color="#E5E5E5"> two</font>

117
00:05:58,010 --> 00:06:02,930
<font color="#E5E5E5">different parts</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> firstly you load the</font>

118
00:06:00,380 --> 00:06:05,120
model<font color="#E5E5E5"> and you prepare the input that you</font>

119
00:06:02,930 --> 00:06:07,280
want to give into that<font color="#E5E5E5"> Network</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

120
00:06:05,120 --> 00:06:11,270
the second<font color="#E5E5E5"> part is actually running the</font>

121
00:06:07,280 --> 00:06:13,460
session<font color="#E5E5E5"> giving the feeds and getting the</font>

122
00:06:11,270 --> 00:06:16,669
the fetches at the other path<font color="#E5E5E5"> so we can</font>

123
00:06:13,460 --> 00:06:19,039
split this into three parts<font color="#E5E5E5"> first one is</font>

124
00:06:16,670 --> 00:06:21,980
<font color="#CCCCCC">getting the model</font><font color="#E5E5E5"> get getting the model</font>

125
00:06:19,040 --> 00:06:25,700
<font color="#E5E5E5">and loading it into tensorflow the</font>

126
00:06:21,980 --> 00:06:30,290
second part<font color="#E5E5E5"> is building an input and</font>

127
00:06:25,700 --> 00:06:33,979
then filling it into the<font color="#CCCCCC"> input of the of</font>

128
00:06:30,290 --> 00:06:37,770
the network and<font color="#E5E5E5"> then the last part is</font><font color="#CCCCCC"> to</font>

129
00:06:33,980 --> 00:06:41,280
fetch the the result and<font color="#CCCCCC"> to</font><font color="#E5E5E5"> interpret</font>

130
00:06:37,770 --> 00:06:43,889
it so let's see a concrete<font color="#E5E5E5"> example with</font>

131
00:06:41,280 --> 00:06:46,128
image classification<font color="#E5E5E5"> so image</font>

132
00:06:43,889 --> 00:06:46,129
classification

133
00:06:51,289 --> 00:06:56,610
all right<font color="#E5E5E5"> well image classification is</font>

134
00:06:54,360 --> 00:06:59,759
basically taking an image and extracting

135
00:06:56,610 --> 00:07:02,669
<font color="#E5E5E5">some labels so there was a beautiful cat</font>

136
00:06:59,759 --> 00:07:07,919
<font color="#CCCCCC">CME's cat there with some with some</font>

137
00:07:02,669 --> 00:07:10,549
scores about about the fact that it's<font color="#E5E5E5"> a</font>

138
00:07:07,919 --> 00:07:17,159
<font color="#E5E5E5">Miss cat all right</font>

139
00:07:10,550 --> 00:07:30,180
so one of<font color="#E5E5E5"> the most common database for</font>

140
00:07:17,159 --> 00:07:35,039
<font color="#E5E5E5">this is a image net well well some of</font>

141
00:07:30,180 --> 00:07:37,940
them are loaded<font color="#E5E5E5"> but not all of them well</font>

142
00:07:35,039 --> 00:07:45,830
just to second<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> move on to</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> mobile</font>

143
00:07:37,940 --> 00:07:45,830
<font color="#CCCCCC">thing</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> all right</font>

144
00:07:53,880 --> 00:07:58,100
is it better<font color="#CCCCCC"> no not really</font>

145
00:08:04,660 --> 00:08:13,100
yeah yeah<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> well anyway so basically</font>

146
00:08:10,040 --> 00:08:15,680
<font color="#CCCCCC">you have an image of</font><font color="#E5E5E5"> a cat a Dean at the</font>

147
00:08:13,100 --> 00:08:22,540
as an input<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then you get some some</font>

148
00:08:15,680 --> 00:08:26,210
labels<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> need to add three more</font>

149
00:08:22,540 --> 00:08:29,270
<font color="#CCCCCC">steps before</font><font color="#E5E5E5"> before actually running it</font>

150
00:08:26,210 --> 00:08:34,340
into<font color="#E5E5E5"> into go the first one is to find</font>

151
00:08:29,270 --> 00:08:36,260
the the model the<font color="#E5E5E5"> next is</font><font color="#CCCCCC"> to run it into</font>

152
00:08:34,340 --> 00:08:40,390
<font color="#CCCCCC">python and then saving the model</font><font color="#E5E5E5"> and</font>

153
00:08:36,260 --> 00:08:40,390
then<font color="#CCCCCC"> the two other</font><font color="#E5E5E5"> ones we know about</font>

154
00:08:48,530 --> 00:08:51,220
I mean

155
00:08:56,450 --> 00:09:02,269
yeah it's better all right so to find a

156
00:09:00,740 --> 00:09:04,100
<font color="#E5E5E5">model there is</font><font color="#CCCCCC"> a there is</font><font color="#E5E5E5"> a website I</font>

157
00:09:02,269 --> 00:09:06,740
like a lot it's called model Depot

158
00:09:04,100 --> 00:09:09,110
there's not too many models there<font color="#E5E5E5"> but</font>

159
00:09:06,740 --> 00:09:12,680
they<font color="#E5E5E5"> are very</font><font color="#CCCCCC"> well-documented another</font>

160
00:09:09,110 --> 00:09:16,070
another good resource for<font color="#E5E5E5"> this is a is</font>

161
00:09:12,680 --> 00:09:19,250
the the one from Google<font color="#E5E5E5"> makers Facebook</font>

162
00:09:16,070 --> 00:09:22,220
and Microsoft<font color="#CCCCCC"> most of these models are</font>

163
00:09:19,250 --> 00:09:24,410
<font color="#CCCCCC">on github - so you'll</font><font color="#E5E5E5"> find a lot of</font>

164
00:09:22,220 --> 00:09:27,199
<font color="#CCCCCC">interesting thing and please don't be</font>

165
00:09:24,410 --> 00:09:30,430
afraid<font color="#E5E5E5"> to look at some research</font><font color="#CCCCCC"> - they</font>

166
00:09:27,199 --> 00:09:34,880
<font color="#CCCCCC">often</font><font color="#E5E5E5"> come with some pre</font><font color="#CCCCCC"> trained models</font>

167
00:09:30,430 --> 00:09:37,430
so I choose<font color="#E5E5E5"> that one which is a quite</font>

168
00:09:34,880 --> 00:09:39,050
<font color="#CCCCCC">simple one and quite light one</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> now I</font>

169
00:09:37,430 --> 00:09:41,810
have a model I<font color="#CCCCCC"> can download it from it</font>

170
00:09:39,050 --> 00:09:45,769
<font color="#E5E5E5">it's actually</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> mighty license so it's</font>

171
00:09:41,810 --> 00:09:47,839
nice so we'll run it<font color="#CCCCCC"> into</font><font color="#E5E5E5"> Python first</font>

172
00:09:45,769 --> 00:09:50,000
of all we need<font color="#CCCCCC"> a few import so this is</font>

173
00:09:47,839 --> 00:09:53,240
based on<font color="#CCCCCC"> Kira's so it's mostly Kira's in</font>

174
00:09:50,000 --> 00:09:56,300
<font color="#CCCCCC">Port and now he's here</font><font color="#E5E5E5"> is the the Python</font>

175
00:09:53,240 --> 00:09:58,190
code<font color="#E5E5E5"> so it's quite simple</font><font color="#CCCCCC"> a bit like in</font>

176
00:09:56,300 --> 00:10:00,439
the<font color="#E5E5E5"> go code the first part is loading</font>

177
00:09:58,190 --> 00:10:04,670
the model then we format<font color="#E5E5E5"> the input and</font>

178
00:10:00,440 --> 00:10:07,370
then<font color="#CCCCCC"> we</font><font color="#E5E5E5"> run the prediction all right so</font>

179
00:10:04,670 --> 00:10:09,620
now we<font color="#E5E5E5"> have we can run it into</font><font color="#CCCCCC"> python</font>

180
00:10:07,370 --> 00:10:13,910
and<font color="#E5E5E5"> we can actually have the</font><font color="#CCCCCC"> the correct</font>

181
00:10:09,620 --> 00:10:17,449
labels so the next step is to save<font color="#E5E5E5"> it</font>

182
00:10:13,910 --> 00:10:20,860
into into an export model<font color="#E5E5E5"> so we'll add a</font>

183
00:10:17,449 --> 00:10:23,300
few<font color="#CCCCCC"> a couple of</font><font color="#E5E5E5"> more import and</font>

184
00:10:20,860 --> 00:10:25,070
basically the<font color="#E5E5E5"> only thing you do you need</font>

185
00:10:23,300 --> 00:10:29,240
<font color="#E5E5E5">to do is just to surround your</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> with</font>

186
00:10:25,070 --> 00:10:30,980
a few more<font color="#E5E5E5"> lines to connect your session</font>

187
00:10:29,240 --> 00:10:35,269
to<font color="#CCCCCC"> tensorflow</font><font color="#E5E5E5"> and then to export</font><font color="#CCCCCC"> it to</font>

188
00:10:30,980 --> 00:10:38,300
into a saved model so now we have<font color="#CCCCCC"> a we</font>

189
00:10:35,269 --> 00:10:41,510
have<font color="#CCCCCC"> a folder with with</font><font color="#E5E5E5"> all with</font>

190
00:10:38,300 --> 00:10:44,439
everything we need to use our<font color="#E5E5E5"> save model</font>

191
00:10:41,510 --> 00:10:44,439
so

192
00:10:45,690 --> 00:10:52,830
so now<font color="#E5E5E5"> one step</font><font color="#CCCCCC"> that is usually</font><font color="#E5E5E5"> simple</font>

193
00:10:50,100 --> 00:10:56,160
is<font color="#E5E5E5"> to find the input and output layer</font>

194
00:10:52,830 --> 00:10:58,260
names<font color="#E5E5E5"> so if we here with using</font><font color="#CCCCCC"> Kira's</font><font color="#E5E5E5"> so</font>

195
00:10:56,160 --> 00:11:00,569
we can just print<font color="#CCCCCC"> them</font><font color="#E5E5E5"> straight</font><font color="#CCCCCC"> out of</font>

196
00:10:58,260 --> 00:11:04,200
the of the<font color="#CCCCCC"> model</font><font color="#E5E5E5"> it's one of the</font>

197
00:11:00,570 --> 00:11:05,760
function<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the model if you're not</font>

198
00:11:04,200 --> 00:11:07,830
using<font color="#CCCCCC"> carrot and if it's not documented</font>

199
00:11:05,760 --> 00:11:10,860
maybe you need to<font color="#E5E5E5"> print all</font><font color="#CCCCCC"> the</font>

200
00:11:07,830 --> 00:11:13,550
operations and to just look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> all the</font>

201
00:11:10,860 --> 00:11:17,610
names and find which one looks the most

202
00:11:13,550 --> 00:11:19,650
the<font color="#CCCCCC"> the most promising one</font><font color="#E5E5E5"> all the the</font>

203
00:11:17,610 --> 00:11:22,710
last part the<font color="#CCCCCC"> last solution is to debug</font>

204
00:11:19,650 --> 00:11:25,890
the the Python code<font color="#E5E5E5"> so in our case</font><font color="#CCCCCC"> we're</font>

205
00:11:22,710 --> 00:11:28,680
<font color="#E5E5E5">using the first the first option</font><font color="#CCCCCC"> and our</font>

206
00:11:25,890 --> 00:11:33,360
<font color="#E5E5E5">input model is input underscore one and</font>

207
00:11:28,680 --> 00:11:36,689
the<font color="#CCCCCC"> output</font><font color="#E5E5E5"> is predictions of max now we</font>

208
00:11:33,360 --> 00:11:39,570
<font color="#E5E5E5">need to to format the input image so</font>

209
00:11:36,690 --> 00:11:44,210
here we can see the shape of the<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

210
00:11:39,570 --> 00:11:49,890
input layer so it's a<font color="#CCCCCC"> 20 it's a 20</font>

211
00:11:44,210 --> 00:11:52,470
it's a 224 times<font color="#CCCCCC"> 213 for image width</font>

212
00:11:49,890 --> 00:11:54,780
with<font color="#CCCCCC"> three channel as LGB so there is</font>

213
00:11:52,470 --> 00:11:57,930
<font color="#E5E5E5">just one more function we need</font><font color="#CCCCCC"> to apply</font>

214
00:11:54,780 --> 00:12:01,709
<font color="#E5E5E5">it to to this label</font><font color="#CCCCCC"> through these</font>

215
00:11:57,930 --> 00:12:04,109
channels<font color="#CCCCCC"> just it's just</font><font color="#E5E5E5"> a simple</font>

216
00:12:01,710 --> 00:12:11,160
function actually<font color="#E5E5E5"> just a mapping between</font>

217
00:12:04,110 --> 00:12:13,530
between a smaller<font color="#E5E5E5"> float range so so this</font>

218
00:12:11,160 --> 00:12:16,469
<font color="#E5E5E5">is where this</font><font color="#CCCCCC"> is what we have and we we</font>

219
00:12:13,530 --> 00:12:19,079
do it for every pixel so this is how the

220
00:12:16,470 --> 00:12:23,340
go code looks for that<font color="#E5E5E5"> so it's only</font>

221
00:12:19,080 --> 00:12:25,050
<font color="#E5E5E5">using the the standard library</font><font color="#CCCCCC"> the</font>

222
00:12:23,340 --> 00:12:30,330
standard<font color="#E5E5E5"> image library and then creating</font>

223
00:12:25,050 --> 00:12:32,579
a tensor flow<font color="#E5E5E5"> tensor</font><font color="#CCCCCC"> alright so now we</font>

224
00:12:30,330 --> 00:12:35,610
have<font color="#E5E5E5"> we have our tensor that we can fit</font>

225
00:12:32,580 --> 00:12:38,670
into our into<font color="#E5E5E5"> our network now the last</font>

226
00:12:35,610 --> 00:12:40,770
part<font color="#E5E5E5"> is</font><font color="#CCCCCC"> to interpret the</font><font color="#E5E5E5"> result so the</font>

227
00:12:38,670 --> 00:12:45,540
shape of the result is a slice<font color="#CCCCCC"> of a</font>

228
00:12:40,770 --> 00:12:47,310
thousand float and this is actually this

229
00:12:45,540 --> 00:12:51,300
is<font color="#E5E5E5"> this</font><font color="#CCCCCC"> actually corresponds to the</font>

230
00:12:47,310 --> 00:12:55,130
thousand classes<font color="#E5E5E5"> there is in an image</font>

231
00:12:51,300 --> 00:12:58,359
net<font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> basically all the all the</font>

232
00:12:55,130 --> 00:13:00,699
<font color="#CCCCCC">all the kind of objects that we have</font>

233
00:12:58,360 --> 00:13:02,499
they are linked<font color="#E5E5E5"> to</font><font color="#CCCCCC"> his</font><font color="#E5E5E5"> core so usually</font>

234
00:13:00,699 --> 00:13:07,689
what you'll do is to keep<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 10 best</font>

235
00:13:02,499 --> 00:13:10,149
results may<font color="#CCCCCC"> be so perfect</font><font color="#E5E5E5"> now we now we</font>

236
00:13:07,689 --> 00:13:12,488
<font color="#E5E5E5">can get the output and we can find out</font>

237
00:13:10,149 --> 00:13:16,589
<font color="#E5E5E5">it's the</font><font color="#CCCCCC"> same is</font><font color="#E5E5E5"> cat just the same way</font>

238
00:13:12,489 --> 00:13:16,589
<font color="#E5E5E5">as we did with</font><font color="#CCCCCC"> the with the Python code</font>

239
00:13:17,069 --> 00:13:22,660
so to wrap<font color="#CCCCCC"> it up yes</font>

240
00:13:19,809 --> 00:13:24,549
so now you can give any image from<font color="#E5E5E5"> any</font>

241
00:13:22,660 --> 00:13:30,429
source you<font color="#E5E5E5"> want from your go program and</font>

242
00:13:24,549 --> 00:13:33,189
we can<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> get the 10 best labels so</font>

243
00:13:30,429 --> 00:13:35,139
face recognition<font color="#E5E5E5"> I won't go into the</font>

244
00:13:33,189 --> 00:13:37,449
into the code for face recognition<font color="#E5E5E5"> but I</font>

245
00:13:35,139 --> 00:13:39,730
just want to give<font color="#CCCCCC"> you the basic</font><font color="#E5E5E5"> of how</font>

246
00:13:37,449 --> 00:13:44,979
it's working<font color="#CCCCCC"> so the first step is to</font>

247
00:13:39,730 --> 00:13:47,350
detect the faces<font color="#E5E5E5"> so it takes it takes a</font>

248
00:13:44,980 --> 00:13:50,079
picture<font color="#E5E5E5"> of any sizes and as an input and</font>

249
00:13:47,350 --> 00:13:53,319
it will give you back some some boxes

250
00:13:50,079 --> 00:13:56,019
and<font color="#E5E5E5"> scores about the detection so in the</font>

251
00:13:53,319 --> 00:13:58,748
<font color="#CCCCCC">act example we</font><font color="#E5E5E5"> we can extract</font><font color="#CCCCCC"> five</font>

252
00:13:56,019 --> 00:14:03,850
different faces the next part is

253
00:13:58,749 --> 00:14:06,939
landmark extraction so so the the the

254
00:14:03,850 --> 00:14:11,410
<font color="#E5E5E5">shape of the into shape is also</font><font color="#CCCCCC"> a square</font>

255
00:14:06,939 --> 00:14:16,029
<font color="#E5E5E5">image of 112 pixel white and the output</font>

256
00:14:11,410 --> 00:14:19,959
are 68<font color="#CCCCCC"> landmark points and the maps to</font>

257
00:14:16,029 --> 00:14:21,819
some peculiar<font color="#E5E5E5"> landmarks into the into</font>

258
00:14:19,959 --> 00:14:26,248
the face and you can use it<font color="#E5E5E5"> to</font>

259
00:14:21,819 --> 00:14:30,910
straighten<font color="#E5E5E5"> the the face to improve the</font>

260
00:14:26,249 --> 00:14:34,499
performance<font color="#E5E5E5"> greatly and then the</font><font color="#CCCCCC"> the</font>

261
00:14:30,910 --> 00:14:38,110
<font color="#E5E5E5">last part is</font><font color="#CCCCCC"> the descriptor extraction</font>

262
00:14:34,499 --> 00:14:45,360
so again it takes an input<font color="#E5E5E5"> and images</font>

263
00:14:38,110 --> 00:14:45,360
<font color="#CCCCCC">and input and the output is a is a 128</font>

264
00:14:46,439 --> 00:14:54,929
<font color="#CCCCCC">size slice of float which actually</font>

265
00:14:50,350 --> 00:14:58,480
represent a<font color="#CCCCCC"> coordinate in a 128</font>

266
00:14:54,929 --> 00:15:01,509
<font color="#CCCCCC">dimension</font><font color="#E5E5E5"> space and what is good about</font>

267
00:14:58,480 --> 00:15:05,919
that<font color="#E5E5E5"> is that</font><font color="#CCCCCC"> you can you can</font><font color="#E5E5E5"> apply</font><font color="#CCCCCC"> some</font>

268
00:15:01,509 --> 00:15:08,829
equity and distance with it so so the

269
00:15:05,919 --> 00:15:09,949
equation distance is the the<font color="#E5E5E5"> most common</font>

270
00:15:08,829 --> 00:15:13,699
distance

271
00:15:09,950 --> 00:15:16,339
and so this<font color="#E5E5E5"> this define some distance</font>

272
00:15:13,700 --> 00:15:18,920
between<font color="#CCCCCC"> faces so</font><font color="#E5E5E5"> there's the smaller the</font>

273
00:15:16,339 --> 00:15:20,779
score the<font color="#CCCCCC"> the distance between the faces</font>

274
00:15:18,920 --> 00:15:21,620
<font color="#E5E5E5">the more likely it is that it's the same</font>

275
00:15:20,779 --> 00:15:25,730
person

276
00:15:21,620 --> 00:15:27,470
and<font color="#E5E5E5"> it's especially</font><font color="#CCCCCC"> nice</font><font color="#E5E5E5"> nice for us</font>

277
00:15:25,730 --> 00:15:29,990
because it's it's a<font color="#E5E5E5"> very lightweight</font>

278
00:15:27,470 --> 00:15:35,570
representation it's very fast<font color="#CCCCCC"> so it's</font>

279
00:15:29,990 --> 00:15:38,959
good for<font color="#E5E5E5"> search the the models I've used</font>

280
00:15:35,570 --> 00:15:41,480
from face<font color="#CCCCCC"> API Jas which</font><font color="#E5E5E5"> is using</font>

281
00:15:38,959 --> 00:15:44,268
<font color="#E5E5E5">tensorflow Diaz it's</font><font color="#CCCCCC"> a very nice one</font>

282
00:15:41,480 --> 00:15:46,430
because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> only using</font><font color="#E5E5E5"> tensorflow as a</font>

283
00:15:44,269 --> 00:15:49,699
dependency<font color="#E5E5E5"> and I really wanted to keep</font>

284
00:15:46,430 --> 00:15:54,079
it<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> tensor flow and not not using</font>

285
00:15:49,699 --> 00:15:56,329
<font color="#CCCCCC">OpenCV or deliver so I had to do some</font>

286
00:15:54,079 --> 00:15:58,939
bit of<font color="#E5E5E5"> extra work on this one because</font>

287
00:15:56,329 --> 00:16:01,849
<font color="#E5E5E5">the code was in</font><font color="#CCCCCC"> GS so I had to</font><font color="#E5E5E5"> translate</font>

288
00:15:58,940 --> 00:16:04,519
all the code from Jas to Python which

289
00:16:01,850 --> 00:16:06,920
was quite simple<font color="#E5E5E5"> because it's</font><font color="#CCCCCC"> almost the</font>

290
00:16:04,519 --> 00:16:10,279
same function and then I was able<font color="#CCCCCC"> to</font>

291
00:16:06,920 --> 00:16:15,589
save<font color="#E5E5E5"> the model and to load it into</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> go</font>

292
00:16:10,279 --> 00:16:20,899
application so<font color="#CCCCCC"> Search Search is left and</font>

293
00:16:15,589 --> 00:16:23,120
as an<font color="#E5E5E5"> exercise to the reader but it's</font>

294
00:16:20,899 --> 00:16:25,790
it's<font color="#E5E5E5"> actually quite simple now now that</font>

295
00:16:23,120 --> 00:16:30,350
we can label<font color="#E5E5E5"> our our photos it's quite</font>

296
00:16:25,790 --> 00:16:35,209
easy<font color="#E5E5E5"> to just return we turn the matching</font>

297
00:16:30,350 --> 00:16:39,680
photos<font color="#CCCCCC"> when the user is</font><font color="#E5E5E5"> is querying with</font>

298
00:16:35,209 --> 00:16:41,510
a<font color="#E5E5E5"> keyword and and about the faces once</font>

299
00:16:39,680 --> 00:16:44,449
you have some distance between some of

300
00:16:41,510 --> 00:16:48,279
<font color="#E5E5E5">the</font><font color="#CCCCCC"> faces in</font><font color="#E5E5E5"> your database</font><font color="#CCCCCC"> when a new</font>

301
00:16:44,449 --> 00:16:50,599
faces is found you<font color="#E5E5E5"> can you can</font><font color="#CCCCCC"> just</font>

302
00:16:48,279 --> 00:16:54,199
calculate<font color="#E5E5E5"> the distance with all the</font>

303
00:16:50,600 --> 00:16:56,089
other faces and when you when you find<font color="#E5E5E5"> a</font>

304
00:16:54,199 --> 00:17:02,349
face that is close<font color="#CCCCCC"> enough</font><font color="#E5E5E5"> then you can</font>

305
00:16:56,089 --> 00:17:06,559
tell it's the<font color="#E5E5E5"> same people</font><font color="#CCCCCC"> all right</font><font color="#E5E5E5"> so</font>

306
00:17:02,350 --> 00:17:10,189
the conclusion<font color="#CCCCCC"> yeah first of</font><font color="#E5E5E5"> all I want</font>

307
00:17:06,559 --> 00:17:12,470
<font color="#E5E5E5">to I</font><font color="#CCCCCC"> want to point you out to my to</font><font color="#E5E5E5"> my</font>

308
00:17:10,189 --> 00:17:18,350
<font color="#E5E5E5">repo</font><font color="#CCCCCC"> where you can</font><font color="#E5E5E5"> find all the models</font>

309
00:17:12,470 --> 00:17:21,919
I've talked<font color="#CCCCCC"> about yeah you you can find</font>

310
00:17:18,349 --> 00:17:23,369
it quite easily I think what I want you

311
00:17:21,919 --> 00:17:26,640
<font color="#E5E5E5">to know to</font><font color="#CCCCCC"> do is yes</font>

312
00:17:23,369 --> 00:17:29,790
just to try<font color="#CCCCCC"> it I I made a nice a nice</font>

313
00:17:26,640 --> 00:17:32,270
<font color="#E5E5E5">docker image it can run just to try out</font>

314
00:17:29,790 --> 00:17:36,950
<font color="#CCCCCC">to see</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> performance of this algorithm</font>

315
00:17:32,270 --> 00:17:40,800
<font color="#E5E5E5">oh</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can use it as a either library</font>

316
00:17:36,950 --> 00:17:44,550
<font color="#CCCCCC">it's hopefully</font><font color="#E5E5E5"> simple and ready to use</font>

317
00:17:40,800 --> 00:17:46,290
<font color="#CCCCCC">but please feel free to to contact me if</font>

318
00:17:44,550 --> 00:17:50,790
it's not<font color="#CCCCCC"> working</font><font color="#E5E5E5"> or if you would like</font>

319
00:17:46,290 --> 00:17:53,550
something<font color="#E5E5E5"> different</font><font color="#CCCCCC"> and and</font><font color="#E5E5E5"> also I would</font>

320
00:17:50,790 --> 00:17:58,020
<font color="#CCCCCC">like to encourage you</font><font color="#E5E5E5"> to to try new</font>

321
00:17:53,550 --> 00:18:01,649
models<font color="#CCCCCC"> so as we've seen the tensorflow</font>

322
00:17:58,020 --> 00:18:05,370
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Kara's models are very easy</font><font color="#E5E5E5"> to</font>

323
00:18:01,650 --> 00:18:08,790
integrate<font color="#E5E5E5"> into your application and yeah</font>

324
00:18:05,370 --> 00:18:11,969
you should try<font color="#E5E5E5"> it's nice other models</font>

325
00:18:08,790 --> 00:18:14,310
<font color="#E5E5E5">other other frameworks will most most</font>

326
00:18:11,970 --> 00:18:18,000
likely<font color="#CCCCCC"> require some conversion which is</font>

327
00:18:14,310 --> 00:18:20,970
still<font color="#E5E5E5"> experimental</font><font color="#CCCCCC"> and it will result in</font>

328
00:18:18,000 --> 00:18:24,810
<font color="#E5E5E5">some significant extra work</font>

329
00:18:20,970 --> 00:18:28,820
and so yeah remember<font color="#E5E5E5"> the</font><font color="#CCCCCC"> five steps to</font>

330
00:18:24,810 --> 00:18:32,100
use a new model finding the model

331
00:18:28,820 --> 00:18:34,169
<font color="#CCCCCC">finding the</font><font color="#E5E5E5"> model is just searching on</font>

332
00:18:32,100 --> 00:18:36,899
on<font color="#CCCCCC"> Google so that's the kind of thing</font>

333
00:18:34,170 --> 00:18:38,390
that you're already doing<font color="#E5E5E5"> running into</font>

334
00:18:36,900 --> 00:18:41,370
<font color="#E5E5E5">Python usually it is</font><font color="#CCCCCC"> not a problem</font>

335
00:18:38,390 --> 00:18:44,790
because<font color="#E5E5E5"> most of</font><font color="#CCCCCC"> these models are</font><font color="#E5E5E5"> well</font>

336
00:18:41,370 --> 00:18:48,209
<font color="#E5E5E5">documented</font><font color="#CCCCCC"> saving the model is</font><font color="#E5E5E5"> just a</font>

337
00:18:44,790 --> 00:18:50,040
few lines<font color="#E5E5E5"> that's simple maybe most of</font>

338
00:18:48,210 --> 00:18:54,030
the time you'll you'll have some

339
00:18:50,040 --> 00:18:56,730
troubles<font color="#E5E5E5"> formatting the input if the</font>

340
00:18:54,030 --> 00:19:00,570
input<font color="#CCCCCC"> is an image it's almost always the</font>

341
00:18:56,730 --> 00:19:02,070
<font color="#CCCCCC">same kind of formatting so so it</font>

342
00:19:00,570 --> 00:19:04,260
shouldn't be<font color="#E5E5E5"> too</font><font color="#CCCCCC"> too</font><font color="#E5E5E5"> much of a problem</font>

343
00:19:02,070 --> 00:19:04,980
<font color="#E5E5E5">but</font><font color="#CCCCCC"> if you start to play with sound or</font>

344
00:19:04,260 --> 00:19:07,020
this kind<font color="#CCCCCC"> of thing</font>

345
00:19:04,980 --> 00:19:10,440
maybe you'll spend<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> because</font>

346
00:19:07,020 --> 00:19:13,560
there is not much<font color="#CCCCCC"> go code</font><font color="#E5E5E5"> and doing that</font>

347
00:19:10,440 --> 00:19:16,260
<font color="#E5E5E5">and interpreting the result can be can</font>

348
00:19:13,560 --> 00:19:20,970
be very simple<font color="#CCCCCC"> for</font><font color="#E5E5E5"> some time and a bit</font>

349
00:19:16,260 --> 00:19:23,010
harder<font color="#CCCCCC"> at some other points</font><font color="#E5E5E5"> but yet the</font>

350
00:19:20,970 --> 00:19:25,860
last<font color="#CCCCCC"> result</font><font color="#E5E5E5"> is always true</font><font color="#CCCCCC"> to just</font>

351
00:19:23,010 --> 00:19:28,440
render<font color="#E5E5E5"> the Python code step by step and</font>

352
00:19:25,860 --> 00:19:32,550
to see how<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is do how it's done in in</font>

353
00:19:28,440 --> 00:19:35,970
<font color="#E5E5E5">Python so it's not impossible</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> you</font>

354
00:19:32,550 --> 00:19:36,270
should definitely try it<font color="#E5E5E5"> all right thank</font>

355
00:19:35,970 --> 00:19:38,600
you

356
00:19:36,270 --> 00:19:42,170
was<font color="#E5E5E5"> allowed to show you today</font>

357
00:19:38,600 --> 00:19:42,169
[Music]

358
00:19:44,289 --> 00:19:49,700
if you have some question yeah we have

359
00:19:47,480 --> 00:19:51,289
<font color="#CCCCCC">some time for Q&A so if you have</font>

360
00:19:49,700 --> 00:19:53,149
<font color="#E5E5E5">questions raise</font><font color="#CCCCCC"> your hand and if you</font>

361
00:19:51,289 --> 00:20:01,009
want to leave please do so silently

362
00:19:53,149 --> 00:20:02,570
<font color="#CCCCCC">thank you any questions</font><font color="#E5E5E5"> okay</font>

363
00:20:01,009 --> 00:20:04,300
so just run<font color="#E5E5E5"> the</font><font color="#CCCCCC"> blasts thank you very</font>

364
00:20:02,570 --> 00:20:11,010
much

365
00:20:04,300 --> 00:20:11,010
[Applause]

