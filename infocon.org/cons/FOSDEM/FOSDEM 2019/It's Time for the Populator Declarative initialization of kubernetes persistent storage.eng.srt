1
00:00:04,650 --> 00:00:10,080
<font color="#E5E5E5">all right thanks everybody for coming</font><font color="#CCCCCC"> to</font>

2
00:00:07,529 --> 00:00:13,170
my talk today<font color="#E5E5E5"> my name's Adam</font><font color="#CCCCCC"> lidtke I'm</font>

3
00:00:10,080 --> 00:00:15,139
a software<font color="#E5E5E5"> engineer</font><font color="#CCCCCC"> at Red Hat today I'm</font>

4
00:00:13,170 --> 00:00:17,070
here<font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> about declarative</font>

5
00:00:15,139 --> 00:00:19,380
pre-population of your kubernetes

6
00:00:17,070 --> 00:00:23,099
persistent volumes<font color="#E5E5E5"> to help make your</font>

7
00:00:19,380 --> 00:00:24,390
<font color="#E5E5E5">apps happier so it's a kubernetes talk I</font>

8
00:00:23,099 --> 00:00:27,660
<font color="#E5E5E5">don't have enough time to talk about</font>

9
00:00:24,390 --> 00:00:29,369
<font color="#CCCCCC">that subject on its own but it's let's</font>

10
00:00:27,660 --> 00:00:31,919
just say it's<font color="#CCCCCC"> the de-facto</font><font color="#E5E5E5"> way to run</font>

11
00:00:29,369 --> 00:00:33,570
containers at scale a couple things that

12
00:00:31,919 --> 00:00:35,969
I like the<font color="#CCCCCC"> most about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

13
00:00:33,570 --> 00:00:37,440
<font color="#CCCCCC">declarative nature</font><font color="#E5E5E5"> of the system and how</font>

14
00:00:35,969 --> 00:00:39,780
<font color="#E5E5E5">that's implemented with</font><font color="#CCCCCC"> the controller</font>

15
00:00:37,440 --> 00:00:42,379
pattern<font color="#E5E5E5"> we'll get into more details on</font>

16
00:00:39,780 --> 00:00:44,609
how we're going<font color="#CCCCCC"> to leverage that today</font>

17
00:00:42,379 --> 00:00:46,559
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> by the next point</font><font color="#CCCCCC"> here which</font>

18
00:00:44,609 --> 00:00:49,559
<font color="#CCCCCC">is</font><font color="#E5E5E5"> that the</font><font color="#CCCCCC"> cluster itself is very</font>

19
00:00:46,559 --> 00:00:52,140
<font color="#E5E5E5">extensible</font><font color="#CCCCCC"> you can add new features to</font>

20
00:00:49,559 --> 00:00:55,050
<font color="#E5E5E5">the base functionality by creating your</font>

21
00:00:52,140 --> 00:00:59,519
<font color="#E5E5E5">own</font><font color="#CCCCCC"> custom</font><font color="#E5E5E5"> resources and your own custom</font>

22
00:00:55,050 --> 00:01:01,050
controllers<font color="#E5E5E5"> a couple of the objects in</font>

23
00:00:59,519 --> 00:01:03,390
kubernetes<font color="#E5E5E5"> that will be relevant to</font>

24
00:01:01,050 --> 00:01:07,500
today's talk are nodes which are

25
00:01:03,390 --> 00:01:09,590
kubernetes worker machines<font color="#CCCCCC"> they have</font>

26
00:01:07,500 --> 00:01:11,820
everything<font color="#E5E5E5"> that's needed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> run pods</font>

27
00:01:09,590 --> 00:01:14,130
<font color="#E5E5E5">which I'll tell</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> about in a second</font>

28
00:01:11,820 --> 00:01:15,089
<font color="#CCCCCC">that includes the container</font><font color="#E5E5E5"> runtime like</font>

29
00:01:14,130 --> 00:01:17,310
docker or cryo

30
00:01:15,090 --> 00:01:20,460
as well as all the kubernetes bits like

31
00:01:17,310 --> 00:01:22,290
<font color="#E5E5E5">the couplet</font><font color="#CCCCCC"> cube proxy</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> CD</font><font color="#E5E5E5"> all that</font>

32
00:01:20,460 --> 00:01:24,869
stuff and of course the nodes are

33
00:01:22,290 --> 00:01:27,600
managed by<font color="#E5E5E5"> the master</font><font color="#CCCCCC"> of the cluster</font><font color="#E5E5E5"> to</font>

34
00:01:24,870 --> 00:01:30,030
do all the<font color="#E5E5E5"> fun work so what are pods</font>

35
00:01:27,600 --> 00:01:32,330
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> basically a logical application</font>

36
00:01:30,030 --> 00:01:35,460
unit that consists of one<font color="#CCCCCC"> or more</font>

37
00:01:32,330 --> 00:01:38,030
<font color="#E5E5E5">containers they all get scheduled</font>

38
00:01:35,460 --> 00:01:40,169
together and run on the<font color="#CCCCCC"> same node and</font>

39
00:01:38,030 --> 00:01:42,900
because they're a logical unit<font color="#CCCCCC"> they have</font>

40
00:01:40,170 --> 00:01:45,060
<font color="#E5E5E5">the access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the same storage and</font>

41
00:01:42,900 --> 00:01:49,950
networking<font color="#CCCCCC"> that's been given to</font><font color="#E5E5E5"> the pod</font>

42
00:01:45,060 --> 00:01:52,200
they live in so the way that<font color="#E5E5E5"> storage</font>

43
00:01:49,950 --> 00:01:54,750
<font color="#E5E5E5">gets managed in kubernetes in a nutshell</font>

44
00:01:52,200 --> 00:01:56,490
here is through<font color="#CCCCCC"> two custom resources we</font>

45
00:01:54,750 --> 00:01:59,220
have a<font color="#E5E5E5"> persistent volume and a</font>

46
00:01:56,490 --> 00:02:01,470
persistent<font color="#E5E5E5"> volume claim persistent</font>

47
00:01:59,220 --> 00:02:03,330
volumes essentially represent<font color="#E5E5E5"> a piece of</font>

48
00:02:01,470 --> 00:02:05,610
storage that was provisioned by<font color="#E5E5E5"> the</font>

49
00:02:03,330 --> 00:02:07,890
storage administrator<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> available</font><font color="#E5E5E5"> to</font>

50
00:02:05,610 --> 00:02:10,318
the cluster for use that can<font color="#E5E5E5"> either</font>

51
00:02:07,890 --> 00:02:13,969
happen statically by an<font color="#CCCCCC"> Edmund directly</font>

52
00:02:10,318 --> 00:02:16,140
or via<font color="#E5E5E5"> dynamic provisioning all storage</font>

53
00:02:13,969 --> 00:02:17,920
<font color="#E5E5E5">persistent volumes have a type there's</font>

54
00:02:16,140 --> 00:02:19,450
different kinds you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> have if</font>

55
00:02:17,920 --> 00:02:22,869
<font color="#E5E5E5">running in a cloud</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> have cloud</font>

56
00:02:19,450 --> 00:02:24,609
volumes from Amazon or Azure or Google

57
00:02:22,870 --> 00:02:26,470
for<font color="#CCCCCC"> example you can have</font>

58
00:02:24,610 --> 00:02:28,930
software-defined storage like<font color="#CCCCCC"> Stepford</font>

59
00:02:26,470 --> 00:02:31,359
Gluster<font color="#CCCCCC"> you can even have local storage</font>

60
00:02:28,930 --> 00:02:34,470
or host<font color="#E5E5E5"> path storage lots of different</font>

61
00:02:31,360 --> 00:02:37,390
options there<font color="#CCCCCC"> it doesn't really</font><font color="#E5E5E5"> matter</font><font color="#CCCCCC"> -</font>

62
00:02:34,470 --> 00:02:40,060
to me at my level<font color="#E5E5E5"> what the storage is</font>

63
00:02:37,390 --> 00:02:43,119
this will work everywhere<font color="#CCCCCC"> a</font><font color="#E5E5E5"> persistent</font>

64
00:02:40,060 --> 00:02:45,250
volume claim is when a<font color="#E5E5E5"> user makes a</font>

65
00:02:43,120 --> 00:02:48,040
request<font color="#E5E5E5"> for a piece of storage so this</font>

66
00:02:45,250 --> 00:02:50,230
is just<font color="#CCCCCC"> saying I need 10 gigabytes of</font>

67
00:02:48,040 --> 00:02:52,870
storage<font color="#E5E5E5"> and I might want</font><font color="#CCCCCC"> to choose a</font>

68
00:02:50,230 --> 00:02:54,940
storage class to pull it from<font color="#CCCCCC"> it just</font>

69
00:02:52,870 --> 00:02:57,010
depends and what will<font color="#E5E5E5"> happen is</font>

70
00:02:54,940 --> 00:03:00,069
kubernetes will satisfy the<font color="#CCCCCC"> users</font>

71
00:02:57,010 --> 00:03:04,000
<font color="#CCCCCC">request by binding the claim to a volume</font>

72
00:03:00,069 --> 00:03:06,250
<font color="#E5E5E5">and then the user has</font><font color="#CCCCCC"> available to them</font>

73
00:03:04,000 --> 00:03:08,590
an empty volume to<font color="#E5E5E5"> associate with a pod</font>

74
00:03:06,250 --> 00:03:11,049
<font color="#CCCCCC">and so I'll just</font><font color="#E5E5E5"> repeat again that this</font>

75
00:03:08,590 --> 00:03:13,780
kubernetes<font color="#E5E5E5"> is always provisioning empty</font>

76
00:03:11,049 --> 00:03:16,780
volumes<font color="#E5E5E5"> that generally has worked for</font>

77
00:03:13,780 --> 00:03:19,660
<font color="#E5E5E5">most applications but sometimes it's not</font>

78
00:03:16,780 --> 00:03:21,370
always going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be the best plan so</font>

79
00:03:19,660 --> 00:03:25,359
sometimes you're going<font color="#E5E5E5"> to want to have</font>

80
00:03:21,370 --> 00:03:27,609
<font color="#E5E5E5">your volumes pre initialized and here's</font>

81
00:03:25,359 --> 00:03:29,950
a couple<font color="#CCCCCC"> of examples for that so</font>

82
00:03:27,609 --> 00:03:33,190
database<font color="#E5E5E5"> databases as they come</font><font color="#CCCCCC"> into</font>

83
00:03:29,950 --> 00:03:35,500
<font color="#E5E5E5">containerized environments</font><font color="#CCCCCC"> oftentimes</font>

84
00:03:33,190 --> 00:03:37,299
know how to<font color="#CCCCCC"> populate an empty database</font>

85
00:03:35,500 --> 00:03:39,519
<font color="#E5E5E5">when they're starting for</font><font color="#CCCCCC"> the first time</font>

86
00:03:37,299 --> 00:03:41,560
<font color="#E5E5E5">that's going to happen once</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> that</font>

87
00:03:39,519 --> 00:03:44,650
point<font color="#E5E5E5"> you</font><font color="#CCCCCC"> probably have data that</font><font color="#E5E5E5"> you</font>

88
00:03:41,560 --> 00:03:48,340
want<font color="#E5E5E5"> to resume from and if you're for</font>

89
00:03:44,650 --> 00:03:51,010
example<font color="#E5E5E5"> standing up this database on a</font>

90
00:03:48,340 --> 00:03:52,450
<font color="#E5E5E5">volume from a new storage class or a</font>

91
00:03:51,010 --> 00:03:54,310
larger<font color="#CCCCCC"> volume or something you're going</font>

92
00:03:52,450 --> 00:03:55,570
<font color="#E5E5E5">to want to import that data in and it</font>

93
00:03:54,310 --> 00:03:58,720
should be there<font color="#E5E5E5"> before the database</font>

94
00:03:55,570 --> 00:04:00,819
tries to start if you<font color="#CCCCCC"> have a big data</font>

95
00:03:58,720 --> 00:04:03,910
<font color="#E5E5E5">application and you're processing multi</font>

96
00:04:00,819 --> 00:04:05,619
<font color="#E5E5E5">gigabyte data sets</font><font color="#CCCCCC"> probably better to</font>

97
00:04:03,910 --> 00:04:08,380
<font color="#E5E5E5">have that data available</font><font color="#CCCCCC"> when the pod</font>

98
00:04:05,620 --> 00:04:11,049
comes up<font color="#E5E5E5"> rather than having the pod</font><font color="#CCCCCC"> have</font>

99
00:04:08,380 --> 00:04:13,900
to try to<font color="#E5E5E5"> acquire it in real time as</font>

100
00:04:11,049 --> 00:04:16,418
<font color="#E5E5E5">it's running another case would be</font>

101
00:04:13,900 --> 00:04:17,798
restoring from backup I don't know how

102
00:04:16,418 --> 00:04:19,120
many<font color="#E5E5E5"> people are actually backing</font><font color="#CCCCCC"> up</font>

103
00:04:17,798 --> 00:04:21,130
their persistent<font color="#E5E5E5"> data and their</font>

104
00:04:19,120 --> 00:04:22,810
kubernetes clusters these days<font color="#E5E5E5"> but more</font>

105
00:04:21,130 --> 00:04:24,700
should be<font color="#CCCCCC"> and more will be as this</font>

106
00:04:22,810 --> 00:04:27,400
continues<font color="#CCCCCC"> to mature so this is going to</font>

107
00:04:24,700 --> 00:04:30,300
be another case where you have your

108
00:04:27,400 --> 00:04:33,508
backup<font color="#E5E5E5"> and it's time</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> restore</font>

109
00:04:30,300 --> 00:04:35,819
then the<font color="#E5E5E5"> last category mutable</font>

110
00:04:33,509 --> 00:04:37,409
persistent data this really comes as an

111
00:04:35,819 --> 00:04:39,210
inspiration from a<font color="#CCCCCC"> project I work on</font>

112
00:04:37,409 --> 00:04:40,770
called<font color="#E5E5E5"> Qbert which allows you to</font><font color="#CCCCCC"> run</font>

113
00:04:39,210 --> 00:04:43,049
<font color="#E5E5E5">virtual machines on top of your</font>

114
00:04:40,770 --> 00:04:45,150
kubernetes cluster<font color="#E5E5E5"> that's way beyond the</font>

115
00:04:43,050 --> 00:04:47,580
<font color="#CCCCCC">scope of today's talk but</font><font color="#E5E5E5"> definitely</font>

116
00:04:45,150 --> 00:04:49,770
check<font color="#CCCCCC"> it out</font><font color="#E5E5E5"> but in that case you</font><font color="#CCCCCC"> have</font>

117
00:04:47,580 --> 00:04:52,469
virtual machine<font color="#CCCCCC"> discs that</font><font color="#E5E5E5"> are on the</font>

118
00:04:49,770 --> 00:04:54,330
persistent volume claims<font color="#E5E5E5"> and everyone</font>

119
00:04:52,469 --> 00:04:56,279
knows that VMs don't boot very<font color="#E5E5E5"> well off</font>

120
00:04:54,330 --> 00:04:58,669
of empty data<font color="#CCCCCC"> so you have to have the</font>

121
00:04:56,279 --> 00:05:01,139
data<font color="#E5E5E5"> in place for that case</font>

122
00:04:58,669 --> 00:05:04,169
so kubernetes provides a couple<font color="#CCCCCC"> of</font>

123
00:05:01,139 --> 00:05:05,360
<font color="#CCCCCC">options for</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> to populate data into</font>

124
00:05:04,169 --> 00:05:07,889
your<font color="#E5E5E5"> PVS</font>

125
00:05:05,360 --> 00:05:09,900
<font color="#E5E5E5">the first one I'll mention</font><font color="#CCCCCC"> just because</font>

126
00:05:07,889 --> 00:05:13,110
it comes up<font color="#CCCCCC"> so often but it's really</font><font color="#E5E5E5"> not</font>

127
00:05:09,900 --> 00:05:15,628
an option<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's cube</font><font color="#CCCCCC"> CTL CP this</font>

128
00:05:13,110 --> 00:05:19,379
allows you<font color="#E5E5E5"> to copy from your laptop to</font>

129
00:05:15,629 --> 00:05:22,349
the<font color="#E5E5E5"> filesystem</font><font color="#CCCCCC"> of a running container</font><font color="#E5E5E5"> or</font>

130
00:05:19,379 --> 00:05:24,810
a running pod<font color="#CCCCCC"> the reason that's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> a</font>

131
00:05:22,349 --> 00:05:28,370
good<font color="#E5E5E5"> idea is several cases the the apps</font>

132
00:05:24,810 --> 00:05:31,169
<font color="#E5E5E5">already running so you're too late also</font>

133
00:05:28,370 --> 00:05:33,300
you<font color="#CCCCCC"> are using</font><font color="#E5E5E5"> the kubernetes api server</font>

134
00:05:31,169 --> 00:05:34,830
to proxy your data which is<font color="#E5E5E5"> not really</font>

135
00:05:33,300 --> 00:05:37,589
<font color="#CCCCCC">production-grade</font><font color="#E5E5E5"> and it's also very</font>

136
00:05:34,830 --> 00:05:40,229
imperative<font color="#CCCCCC"> I have to decide</font><font color="#E5E5E5"> sit down at</font>

137
00:05:37,589 --> 00:05:42,029
<font color="#CCCCCC">my laptop do some typing</font><font color="#E5E5E5"> put the data in</font>

138
00:05:40,229 --> 00:05:44,099
there that's<font color="#E5E5E5"> not really automatable or</font>

139
00:05:42,029 --> 00:05:47,460
in the spirit of kubernetes so let's

140
00:05:44,099 --> 00:05:50,279
throw<font color="#CCCCCC"> that one</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> the next one is I can</font>

141
00:05:47,460 --> 00:05:53,250
<font color="#E5E5E5">run a special pod ahead of time that</font>

142
00:05:50,279 --> 00:05:54,029
knows how<font color="#E5E5E5"> to populate</font><font color="#CCCCCC"> the the PVC so</font>

143
00:05:53,250 --> 00:05:56,729
that's better

144
00:05:54,029 --> 00:05:58,500
I create a docker container<font color="#CCCCCC"> maybe has W</font>

145
00:05:56,729 --> 00:06:00,029
get in it and<font color="#CCCCCC"> some</font><font color="#E5E5E5"> steps to do the</font>

146
00:05:58,500 --> 00:06:01,020
<font color="#CCCCCC">download or whatever you might</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font>

147
00:06:00,029 --> 00:06:04,139
do<font color="#CCCCCC"> however</font><font color="#E5E5E5"> you're going to pull that</font>

148
00:06:01,020 --> 00:06:06,060
<font color="#E5E5E5">data in so this is</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> it's</font>

149
00:06:04,139 --> 00:06:08,819
better except you still have to make

150
00:06:06,060 --> 00:06:11,550
sure<font color="#CCCCCC"> that you run that before</font><font color="#E5E5E5"> your</font>

151
00:06:08,819 --> 00:06:13,560
<font color="#E5E5E5">actual application</font><font color="#CCCCCC"> and if you have</font>

152
00:06:11,550 --> 00:06:15,089
<font color="#E5E5E5">multiple PVCs that you're managing this</font>

153
00:06:13,560 --> 00:06:16,860
way<font color="#CCCCCC"> you're again in charge of managing</font>

154
00:06:15,089 --> 00:06:18,689
<font color="#E5E5E5">all</font><font color="#CCCCCC"> that so it sounds like</font><font color="#E5E5E5"> that's</font>

155
00:06:16,860 --> 00:06:22,319
something<font color="#E5E5E5"> that kubernetes was supposed</font>

156
00:06:18,689 --> 00:06:23,969
<font color="#CCCCCC">to</font><font color="#E5E5E5"> help us solve the third one is</font><font color="#CCCCCC"> using</font>

157
00:06:22,319 --> 00:06:27,180
<font color="#CCCCCC">an init container</font><font color="#E5E5E5"> so we're</font><font color="#CCCCCC"> getting a</font>

158
00:06:23,969 --> 00:06:29,099
<font color="#E5E5E5">little bit closer kubernetes pod specs</font>

159
00:06:27,180 --> 00:06:31,979
allow you to have<font color="#E5E5E5"> containers which are</font>

160
00:06:29,099 --> 00:06:34,520
<font color="#E5E5E5">your</font><font color="#CCCCCC"> main application</font><font color="#E5E5E5"> and init</font>

161
00:06:31,979 --> 00:06:36,628
containers which are<font color="#CCCCCC"> guaranteed to run</font>

162
00:06:34,520 --> 00:06:39,169
successfully before kubernetes will

163
00:06:36,629 --> 00:06:41,849
allow the actual containers to start

164
00:06:39,169 --> 00:06:42,930
this is what one of<font color="#E5E5E5"> those specs looks</font>

165
00:06:41,849 --> 00:06:46,440
like in a pod

166
00:06:42,930 --> 00:06:50,009
so in this particular<font color="#E5E5E5"> example we have an</font>

167
00:06:46,440 --> 00:06:52,380
engine X contains and then<font color="#CCCCCC"> we have a</font>

168
00:06:50,009 --> 00:06:56,220
container that's running busybox that

169
00:06:52,380 --> 00:06:58,139
just does a<font color="#E5E5E5"> W get somewhere so this is</font>

170
00:06:56,220 --> 00:07:01,050
<font color="#E5E5E5">getting a little bit closer we're almost</font>

171
00:06:58,139 --> 00:07:03,740
<font color="#E5E5E5">there</font><font color="#CCCCCC"> but in kubernetes it's important</font>

172
00:07:01,050 --> 00:07:06,360
to note that the<font color="#E5E5E5"> life cycle of</font>

173
00:07:03,740 --> 00:07:08,699
persistent volumes was deliberately kept

174
00:07:06,360 --> 00:07:11,610
separate from<font color="#E5E5E5"> the life cycle</font><font color="#CCCCCC"> of pods and</font>

175
00:07:08,699 --> 00:07:14,330
the reason for<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is because pods can</font>

176
00:07:11,610 --> 00:07:16,380
can<font color="#E5E5E5"> be short-lived</font><font color="#CCCCCC"> going up and down</font>

177
00:07:14,330 --> 00:07:18,060
iterating over the<font color="#E5E5E5"> same piece of</font>

178
00:07:16,380 --> 00:07:21,479
persistent storage which is<font color="#E5E5E5"> there for a</font>

179
00:07:18,060 --> 00:07:23,430
long<font color="#CCCCCC"> time</font><font color="#E5E5E5"> so I'm not sure</font><font color="#CCCCCC"> that it makes</font>

180
00:07:21,479 --> 00:07:26,099
sense<font color="#CCCCCC"> to always tie the</font><font color="#E5E5E5"> life cycle</font>

181
00:07:23,430 --> 00:07:30,740
together<font color="#E5E5E5"> by having population occurring</font>

182
00:07:26,100 --> 00:07:33,270
in the context of<font color="#E5E5E5"> an init container so a</font>

183
00:07:30,740 --> 00:07:34,590
couple<font color="#E5E5E5"> of other points</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> already</font>

184
00:07:33,270 --> 00:07:37,859
mentioned<font color="#E5E5E5"> some of the caveats of the</font>

185
00:07:34,590 --> 00:07:39,119
existing options<font color="#CCCCCC"> the</font><font color="#E5E5E5"> a couple other</font>

186
00:07:37,860 --> 00:07:40,650
points<font color="#E5E5E5"> I want to bring up is</font><font color="#CCCCCC"> that you're</font>

187
00:07:39,120 --> 00:07:42,030
always going to want<font color="#E5E5E5"> more features with</font>

188
00:07:40,650 --> 00:07:45,030
something like this

189
00:07:42,030 --> 00:07:47,489
what<font color="#CCCCCC"> about error handling with even that</font>

190
00:07:45,030 --> 00:07:51,419
<font color="#E5E5E5">init container example do you want the</font>

191
00:07:47,490 --> 00:07:54,389
an it contained you want the logic<font color="#E5E5E5"> of</font>

192
00:07:51,419 --> 00:07:56,909
the populate<font color="#CCCCCC"> err to retry itself</font><font color="#E5E5E5"> or do</font>

193
00:07:54,389 --> 00:07:59,970
you want kubernetes to restart the pod

194
00:07:56,910 --> 00:08:02,310
<font color="#CCCCCC">over and over until it succeeds that's a</font>

195
00:07:59,970 --> 00:08:04,470
<font color="#E5E5E5">choice you'd have to make if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want</font>

196
00:08:02,310 --> 00:08:06,750
for example to<font color="#CCCCCC"> access data that is</font>

197
00:08:04,470 --> 00:08:08,159
privileged<font color="#CCCCCC"> or you need credentials</font><font color="#E5E5E5"> to</font>

198
00:08:06,750 --> 00:08:11,729
access<font color="#CCCCCC"> that you may want to integrate</font>

199
00:08:08,159 --> 00:08:13,500
<font color="#E5E5E5">with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> kubernetes secrets API</font><font color="#CCCCCC"> in terms</font>

200
00:08:11,729 --> 00:08:15,539
of if you're<font color="#E5E5E5"> using this a lot</font><font color="#CCCCCC"> and with</font>

201
00:08:13,500 --> 00:08:17,039
lots of data<font color="#E5E5E5"> you're probably going to</font>

202
00:08:15,539 --> 00:08:19,590
<font color="#E5E5E5">want some discoverability or</font>

203
00:08:17,039 --> 00:08:20,610
observability<font color="#CCCCCC"> into what's the process so</font>

204
00:08:19,590 --> 00:08:21,150
you're going<font color="#E5E5E5"> to need some kind of</font>

205
00:08:20,610 --> 00:08:23,580
logging

206
00:08:21,150 --> 00:08:27,960
<font color="#CCCCCC">maybe Prometheus endpoints where</font><font color="#E5E5E5"> you can</font>

207
00:08:23,580 --> 00:08:30,240
monitor<font color="#E5E5E5"> the</font><font color="#CCCCCC"> process so those are</font>

208
00:08:27,960 --> 00:08:31,739
features<font color="#E5E5E5"> and then the management</font><font color="#CCCCCC"> aspect</font>

209
00:08:30,240 --> 00:08:34,740
again<font color="#E5E5E5"> so I've kind of alluded to</font><font color="#CCCCCC"> this</font>

210
00:08:31,740 --> 00:08:36,450
already<font color="#E5E5E5"> but making sure</font><font color="#CCCCCC"> that it's order</font>

211
00:08:34,740 --> 00:08:40,320
it's not<font color="#E5E5E5"> pre-population if it doesn't</font>

212
00:08:36,450 --> 00:08:42,659
happen before<font color="#E5E5E5"> so it must always if you</font>

213
00:08:40,320 --> 00:08:44,339
have<font color="#E5E5E5"> replica sets or stateful sets in</font>

214
00:08:42,659 --> 00:08:44,970
your application which are actually

215
00:08:44,339 --> 00:08:47,570
<font color="#E5E5E5">doing</font>

216
00:08:44,970 --> 00:08:49,950
<font color="#E5E5E5">maybe spawning additional pods</font>

217
00:08:47,570 --> 00:08:53,880
<font color="#E5E5E5">potentially dynamically creating new</font>

218
00:08:49,950 --> 00:08:54,630
PVCs to host the<font color="#CCCCCC"> application how are you</font>

219
00:08:53,880 --> 00:08:56,160
going<font color="#E5E5E5"> to make sure</font><font color="#CCCCCC"> that those</font>

220
00:08:54,630 --> 00:08:58,920
dynamically created<font color="#CCCCCC"> pea</font>

221
00:08:56,160 --> 00:09:00,560
these are<font color="#E5E5E5"> getting populated and then</font>

222
00:08:58,920 --> 00:09:02,930
<font color="#E5E5E5">error-handling comes up here again</font>

223
00:09:00,560 --> 00:09:05,670
<font color="#E5E5E5">because you don't want to introduce</font>

224
00:09:02,930 --> 00:09:10,319
<font color="#E5E5E5">instability</font><font color="#CCCCCC"> or random behavior into your</font>

225
00:09:05,670 --> 00:09:13,199
cluster when you start doing this so I'd

226
00:09:10,319 --> 00:09:14,910
like<font color="#CCCCCC"> to suggest a better approach and I</font>

227
00:09:13,199 --> 00:09:16,920
would just<font color="#E5E5E5"> take inspiration from the</font>

228
00:09:14,910 --> 00:09:19,350
design<font color="#E5E5E5"> that kubernetes started with that</font>

229
00:09:16,920 --> 00:09:22,199
<font color="#E5E5E5">made it so successful which</font><font color="#CCCCCC"> is let's</font>

230
00:09:19,350 --> 00:09:24,930
take<font color="#E5E5E5"> a declarative based approach that's</font>

231
00:09:22,199 --> 00:09:28,349
using custom resources and controllers

232
00:09:24,930 --> 00:09:30,420
to accomplish what we need<font color="#E5E5E5"> so the way</font>

233
00:09:28,350 --> 00:09:33,089
that<font color="#E5E5E5"> this works is you define custom</font>

234
00:09:30,420 --> 00:09:36,209
resources and post them to<font color="#E5E5E5"> your</font><font color="#CCCCCC"> cluster</font>

235
00:09:33,089 --> 00:09:38,639
that describe a population strategy<font color="#E5E5E5"> so</font>

236
00:09:36,209 --> 00:09:41,550
this<font color="#E5E5E5"> could be anything like please check</font>

237
00:09:38,639 --> 00:09:44,000
out this git repository this branch and

238
00:09:41,550 --> 00:09:47,550
<font color="#E5E5E5">tag and store it in this directory or</font>

239
00:09:44,000 --> 00:09:49,350
download from this web URL and provide

240
00:09:47,550 --> 00:09:51,479
credentials<font color="#E5E5E5"> found in this kubernetes</font>

241
00:09:49,350 --> 00:09:54,029
secret<font color="#E5E5E5"> it can be really anything that</font>

242
00:09:51,480 --> 00:09:58,800
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> think of along those lines then</font>

243
00:09:54,029 --> 00:10:02,069
what you have<font color="#E5E5E5"> is a PVC</font><font color="#CCCCCC"> that wants to be</font>

244
00:09:58,800 --> 00:10:04,529
<font color="#E5E5E5">populated the creator of that PVC is</font>

245
00:10:02,069 --> 00:10:06,870
going to reference<font color="#E5E5E5"> one of the custom</font>

246
00:10:04,529 --> 00:10:10,079
resource objects in a field called the

247
00:10:06,870 --> 00:10:12,630
<font color="#E5E5E5">data source and all it is is</font><font color="#CCCCCC"> a local</font>

248
00:10:10,079 --> 00:10:14,790
object<font color="#E5E5E5"> reference and that's it then the</font>

249
00:10:12,630 --> 00:10:16,860
user posts that to the cluster<font color="#CCCCCC"> you then</font>

250
00:10:14,790 --> 00:10:18,360
have a populate or controller which<font color="#CCCCCC"> is</font>

251
00:10:16,860 --> 00:10:20,490
sitting<font color="#E5E5E5"> there just like all the other</font>

252
00:10:18,360 --> 00:10:23,490
controllers watching for objects it

253
00:10:20,490 --> 00:10:26,100
discovers the PVC being created<font color="#E5E5E5"> and it</font>

254
00:10:23,490 --> 00:10:29,610
looks determines that the type of<font color="#E5E5E5"> the</font>

255
00:10:26,100 --> 00:10:32,069
<font color="#E5E5E5">data source reference</font><font color="#CCCCCC"> is one that it can</font>

256
00:10:29,610 --> 00:10:33,990
<font color="#CCCCCC">handle so then it takes charge kicks off</font>

257
00:10:32,069 --> 00:10:35,939
the process which is<font color="#CCCCCC"> really just</font>

258
00:10:33,990 --> 00:10:37,829
spawning a pod like<font color="#CCCCCC"> we kind of talked</font>

259
00:10:35,939 --> 00:10:40,019
about<font color="#E5E5E5"> was I guess that was</font><font color="#CCCCCC"> option 2</font>

260
00:10:37,829 --> 00:10:43,019
spawning<font color="#E5E5E5"> a pod that</font><font color="#CCCCCC"> it knows how to</font>

261
00:10:40,019 --> 00:10:46,949
<font color="#E5E5E5">spawn</font><font color="#CCCCCC"> attaching</font><font color="#E5E5E5"> the PVC where the</font>

262
00:10:43,019 --> 00:10:48,809
population gets performed<font color="#E5E5E5"> so if we stick</font>

263
00:10:46,949 --> 00:10:49,800
<font color="#CCCCCC">with a standard approach</font><font color="#E5E5E5"> like this it's</font>

264
00:10:48,809 --> 00:10:52,680
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> give us a really great</font>

265
00:10:49,800 --> 00:10:55,410
opportunity<font color="#E5E5E5"> to</font><font color="#CCCCCC"> collaborate as a</font>

266
00:10:52,680 --> 00:10:57,000
community<font color="#CCCCCC"> add those features we were</font>

267
00:10:55,410 --> 00:10:59,129
talking about<font color="#E5E5E5"> where we're</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> sharing</font>

268
00:10:57,000 --> 00:11:02,189
all that<font color="#E5E5E5"> good stuff in terms of having a</font>

269
00:10:59,129 --> 00:11:05,160
robust solution<font color="#E5E5E5"> that has the features</font>

270
00:11:02,189 --> 00:11:07,709
everybody wants so that's kind of what

271
00:11:05,160 --> 00:11:09,600
the idea<font color="#E5E5E5"> is I'm going</font><font color="#CCCCCC"> to try now to show</font>

272
00:11:07,709 --> 00:11:13,349
you a demonstration of it

273
00:11:09,600 --> 00:11:16,110
so what I have<font color="#CCCCCC"> here on screen it's a</font>

274
00:11:13,350 --> 00:11:17,850
little bit off<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's a kubernetes</font>

275
00:11:16,110 --> 00:11:21,270
cluster running here in a VM<font color="#E5E5E5"> on my</font>

276
00:11:17,850 --> 00:11:23,520
laptop<font color="#CCCCCC"> and so the next</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> I'm going</font>

277
00:11:21,270 --> 00:11:27,449
to do is<font color="#E5E5E5"> prepare the cluster a little</font>

278
00:11:23,520 --> 00:11:29,250
bit<font color="#CCCCCC"> and so we're</font><font color="#E5E5E5"> making sure the</font>

279
00:11:27,450 --> 00:11:31,950
clusters up and then we're<font color="#E5E5E5"> going to add</font>

280
00:11:29,250 --> 00:11:37,410
some persistent storage to it using

281
00:11:31,950 --> 00:11:43,820
<font color="#E5E5E5">local storage</font><font color="#CCCCCC"> yeah give me just one</font>

282
00:11:37,410 --> 00:11:43,819
<font color="#E5E5E5">second yeah I can try that</font>

283
00:11:49,260 --> 00:11:51,830
yeah

284
00:11:52,720 --> 00:12:01,370
<font color="#E5E5E5">okay I'm terrible with these trackpads</font>

285
00:11:56,570 --> 00:12:04,970
<font color="#CCCCCC">how is that</font><font color="#E5E5E5"> are we getting okay</font><font color="#CCCCCC"> alright</font>

286
00:12:01,370 --> 00:12:06,710
<font color="#CCCCCC">so this did a few</font><font color="#E5E5E5"> things we created some</font>

287
00:12:04,970 --> 00:12:08,990
persistent storage<font color="#E5E5E5"> and then because I</font>

288
00:12:06,710 --> 00:12:12,140
didn't want to rely on<font color="#E5E5E5"> the FOSDEM famous</font>

289
00:12:08,990 --> 00:12:14,120
wireless network<font color="#CCCCCC"> I created</font><font color="#E5E5E5"> my own get</font>

290
00:12:12,140 --> 00:12:18,740
server inside of the cluster<font color="#E5E5E5"> so that</font>

291
00:12:14,120 --> 00:12:20,600
this<font color="#E5E5E5"> my laptops in airplane</font><font color="#CCCCCC"> mode so we</font>

292
00:12:18,740 --> 00:12:22,100
<font color="#E5E5E5">pushed some data to that git repository</font>

293
00:12:20,600 --> 00:12:24,380
and then<font color="#E5E5E5"> I started up a popular</font>

294
00:12:22,100 --> 00:12:28,370
controller which<font color="#CCCCCC"> is now</font><font color="#E5E5E5"> running at the</font>

295
00:12:24,380 --> 00:12:30,350
<font color="#E5E5E5">bottom here so that's kind of the the</font>

296
00:12:28,370 --> 00:12:35,840
cluster<font color="#CCCCCC"> setup now let's go kind of</font><font color="#E5E5E5"> to</font>

297
00:12:30,350 --> 00:12:38,480
<font color="#E5E5E5">the persona of the user and what we're</font>

298
00:12:35,840 --> 00:12:43,820
gonna do is add<font color="#CCCCCC"> some objects to the</font>

299
00:12:38,480 --> 00:12:45,770
cluster so the first thing is the

300
00:12:43,820 --> 00:12:47,900
populate objects so you<font color="#E5E5E5"> can see what</font>

301
00:12:45,770 --> 00:12:49,819
<font color="#E5E5E5">these</font><font color="#CCCCCC"> look like</font><font color="#E5E5E5"> these are to get</font>

302
00:12:47,900 --> 00:12:52,880
<font color="#E5E5E5">populated they're almost the same</font><font color="#CCCCCC"> the</font>

303
00:12:49,820 --> 00:12:54,560
first<font color="#E5E5E5"> one is requesting a</font><font color="#CCCCCC"> checkout of</font>

304
00:12:52,880 --> 00:12:56,960
the master<font color="#E5E5E5"> branch and the second one is</font>

305
00:12:54,560 --> 00:13:00,250
requesting a check<font color="#E5E5E5"> out of the v10 branch</font>

306
00:12:56,960 --> 00:13:00,250
<font color="#E5E5E5">so let's add those</font>

307
00:13:05,089 --> 00:13:09,739
<font color="#E5E5E5">okay so those have been added to the</font>

308
00:13:06,799 --> 00:13:15,858
cluster<font color="#CCCCCC"> now let's take a look at a PV C</font>

309
00:13:09,739 --> 00:13:20,569
so we can<font color="#CCCCCC"> start</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> populate okay so</font><font color="#E5E5E5"> this</font>

310
00:13:15,859 --> 00:13:22,849
is a pretty basic looking<font color="#CCCCCC"> PV C</font><font color="#E5E5E5"> there is</font>

311
00:13:20,569 --> 00:13:24,769
the data<font color="#CCCCCC"> source</font><font color="#E5E5E5"> field and we're just</font>

312
00:13:22,849 --> 00:13:26,719
referencing the master populate<font color="#CCCCCC"> er and</font>

313
00:13:24,769 --> 00:13:28,579
it has a<font color="#E5E5E5"> kind and an API group so that's</font>

314
00:13:26,719 --> 00:13:30,649
<font color="#E5E5E5">just how a local</font><font color="#CCCCCC"> object reference works</font>

315
00:13:28,579 --> 00:13:34,279
in kubernetes<font color="#E5E5E5"> and we're just asking</font><font color="#CCCCCC"> for</font>

316
00:13:30,649 --> 00:13:43,629
a hundred megabytes of storage so I am

317
00:13:34,279 --> 00:13:45,829
going<font color="#CCCCCC"> to create that okay so now let's</font>

318
00:13:43,629 --> 00:13:53,079
see how<font color="#E5E5E5"> that's going</font>

319
00:13:45,829 --> 00:13:53,079
<font color="#CCCCCC">woops so we have a we have a bound</font><font color="#E5E5E5"> PVC</font>

320
00:13:54,879 --> 00:14:01,099
and we have a job that<font color="#CCCCCC"> has already</font><font color="#E5E5E5"> run</font>

321
00:13:57,589 --> 00:14:03,589
by the popular controller<font color="#CCCCCC"> to to do the</font>

322
00:14:01,099 --> 00:14:04,879
population according<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> request</font><font color="#CCCCCC"> so</font>

323
00:14:03,589 --> 00:14:06,949
now I'm just<font color="#E5E5E5"> going to show you this</font>

324
00:14:04,879 --> 00:14:08,569
<font color="#CCCCCC">little app that we have it's going to</font>

325
00:14:06,949 --> 00:14:11,718
<font color="#E5E5E5">bounce off the screen a little</font><font color="#CCCCCC"> bit but</font>

326
00:14:08,569 --> 00:14:14,748
we have an engine X container<font color="#CCCCCC"> it's using</font>

327
00:14:11,719 --> 00:14:16,699
the PVC<font color="#E5E5E5"> being mounted at the place where</font>

328
00:14:14,749 --> 00:14:19,579
<font color="#CCCCCC">nginx by default looks for web content</font>

329
00:14:16,699 --> 00:14:22,488
<font color="#CCCCCC">and then a service so that</font><font color="#E5E5E5"> we can see it</font>

330
00:14:19,579 --> 00:14:25,429
<font color="#E5E5E5">on a browser so let's just create</font><font color="#CCCCCC"> that</font>

331
00:14:22,489 --> 00:14:27,859
app notice how the app doesn't<font color="#E5E5E5"> know</font>

332
00:14:25,429 --> 00:14:31,309
<font color="#E5E5E5">anything about any kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> population</font>

333
00:14:27,859 --> 00:14:35,509
<font color="#CCCCCC">it's just expecting to</font><font color="#E5E5E5"> have a PVC okay</font>

334
00:14:31,309 --> 00:14:40,129
so let's go we've created that<font color="#E5E5E5"> app let's</font>

335
00:14:35,509 --> 00:14:42,969
see if we can take<font color="#E5E5E5"> a look at it okay</font><font color="#CCCCCC"> so</font>

336
00:14:40,129 --> 00:14:47,179
it's<font color="#E5E5E5"> just a basic super exciting</font><font color="#CCCCCC"> website</font>

337
00:14:42,969 --> 00:14:49,819
that has some content in it let's see

338
00:14:47,179 --> 00:14:51,409
what<font color="#CCCCCC"> happens if</font><font color="#E5E5E5"> we adopt the 100 branch</font>

339
00:14:49,819 --> 00:14:57,919
so first I'm going<font color="#E5E5E5"> to clean up</font><font color="#CCCCCC"> that</font>

340
00:14:51,409 --> 00:15:01,479
instance of<font color="#CCCCCC"> the app ok and then that's</font>

341
00:14:57,919 --> 00:15:01,478
going<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> just a second here</font>

342
00:15:05,870 --> 00:15:15,860
<font color="#E5E5E5">okay and then</font><font color="#CCCCCC"> and there's just a</font><font color="#E5E5E5"> little</font>

343
00:15:14,090 --> 00:15:20,240
<font color="#E5E5E5">bit of aggressive cleanup and now let's</font>

344
00:15:15,860 --> 00:15:22,700
take<font color="#CCCCCC"> a look at the v10</font><font color="#E5E5E5"> PVC it's exactly</font>

345
00:15:20,240 --> 00:15:24,260
the same except for<font color="#E5E5E5"> the local object</font>

346
00:15:22,700 --> 00:15:27,590
<font color="#E5E5E5">reference here I'll bump it up a little</font>

347
00:15:24,260 --> 00:15:30,130
<font color="#E5E5E5">higher is now the v1 populate</font><font color="#CCCCCC"> er so</font>

348
00:15:27,590 --> 00:15:38,810
let's do that

349
00:15:30,130 --> 00:15:40,760
-<font color="#CCCCCC"> F PVC v1</font><font color="#E5E5E5"> and let's get the PVC to make</font>

350
00:15:38,810 --> 00:15:46,550
sure it's<font color="#E5E5E5"> bound and I did the same type</font>

351
00:15:40,760 --> 00:15:50,960
of again<font color="#E5E5E5"> and get the job</font><font color="#CCCCCC"> okay so we have</font>

352
00:15:46,550 --> 00:15:54,260
a completed<font color="#E5E5E5"> job again for the different</font>

353
00:15:50,960 --> 00:15:59,570
type of populate<font color="#CCCCCC"> er</font><font color="#E5E5E5"> and now let's create</font>

354
00:15:54,260 --> 00:16:07,189
the<font color="#E5E5E5"> app and let's see</font><font color="#CCCCCC"> if anything</font>

355
00:15:59,570 --> 00:16:10,190
<font color="#CCCCCC">changed</font><font color="#E5E5E5"> much better</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so so we have</font>

356
00:16:07,190 --> 00:16:14,840
<font color="#CCCCCC">alright ten minutes so we basically</font><font color="#E5E5E5"> what</font>

357
00:16:10,190 --> 00:16:19,580
I've shown<font color="#CCCCCC"> here is that in a way that is</font>

358
00:16:14,840 --> 00:16:22,430
completely and unknown to<font color="#CCCCCC"> the app itself</font>

359
00:16:19,580 --> 00:16:25,100
and<font color="#E5E5E5"> its configuration done population</font>

360
00:16:22,430 --> 00:16:27,319
behind the scenes<font color="#CCCCCC"> I will note it's</font>

361
00:16:25,100 --> 00:16:29,180
obvious when<font color="#E5E5E5"> you're shipping web content</font>

362
00:16:27,320 --> 00:16:31,160
<font color="#CCCCCC">in kubernetes</font><font color="#E5E5E5"> it's typically</font><font color="#CCCCCC"> in the</font>

363
00:16:29,180 --> 00:16:32,900
docker container<font color="#CCCCCC"> so this is a bit of a</font>

364
00:16:31,160 --> 00:16:35,270
contrived<font color="#E5E5E5"> example but one that's pretty</font>

365
00:16:32,900 --> 00:16:39,079
<font color="#E5E5E5">visible on screen for you guys to look</font>

366
00:16:35,270 --> 00:16:41,600
<font color="#E5E5E5">at so that's why I did</font><font color="#CCCCCC"> it that way so</font>

367
00:16:39,080 --> 00:16:43,220
let's talk about<font color="#E5E5E5"> declarative again</font>

368
00:16:41,600 --> 00:16:46,640
because what you<font color="#E5E5E5"> did not see was a</font>

369
00:16:43,220 --> 00:16:48,050
declarative API yet<font color="#E5E5E5"> and the reason</font><font color="#CCCCCC"> is is</font>

370
00:16:46,640 --> 00:16:50,120
that<font color="#CCCCCC"> there's a promise that you make</font>

371
00:16:48,050 --> 00:16:54,949
when<font color="#E5E5E5"> you're doing something declarative</font>

372
00:16:50,120 --> 00:16:58,270
which is if the object<font color="#E5E5E5"> has a state on it</font>

373
00:16:54,950 --> 00:17:00,950
let PVC is<font color="#E5E5E5"> a has a data source reference</font>

374
00:16:58,270 --> 00:17:03,829
<font color="#E5E5E5">kubernetes must promise as I say here</font>

375
00:17:00,950 --> 00:17:06,830
<font color="#CCCCCC">that a pod won't be allowed to run with</font>

376
00:17:03,830 --> 00:17:08,420
<font color="#CCCCCC">that PVC until it's in fact populated</font>

377
00:17:06,829 --> 00:17:09,679
otherwise somebody's not<font color="#CCCCCC"> telling the</font>

378
00:17:08,420 --> 00:17:12,290
<font color="#CCCCCC">truth and things aren't working</font>

379
00:17:09,680 --> 00:17:14,600
correctly<font color="#CCCCCC"> so how are we</font><font color="#E5E5E5"> gonna actually</font>

380
00:17:12,290 --> 00:17:17,480
make that<font color="#CCCCCC"> happen</font><font color="#E5E5E5"> you notice that I kind</font>

381
00:17:14,599 --> 00:17:19,730
of populated the PVC<font color="#E5E5E5"> and I said let's</font>

382
00:17:17,480 --> 00:17:22,490
spawn the app but typically<font color="#E5E5E5"> you would</font>

383
00:17:19,730 --> 00:17:24,650
have the<font color="#CCCCCC"> pvc declared with its data</font>

384
00:17:22,490 --> 00:17:28,160
source<font color="#CCCCCC"> and the app all put together and</font>

385
00:17:24,650 --> 00:17:30,740
<font color="#E5E5E5">one</font><font color="#CCCCCC"> deployment</font><font color="#E5E5E5"> so in</font><font color="#CCCCCC"> order</font><font color="#E5E5E5"> to make that</font>

386
00:17:28,160 --> 00:17:33,530
work<font color="#CCCCCC"> we're gonna</font><font color="#E5E5E5"> reuse</font><font color="#CCCCCC"> a concept</font><font color="#E5E5E5"> that's</font>

387
00:17:30,740 --> 00:17:34,190
already employed in kubernetes<font color="#E5E5E5"> today</font>

388
00:17:33,530 --> 00:17:36,799
called

389
00:17:34,190 --> 00:17:40,790
taints and toleration<font color="#CCCCCC"> x' and this is</font>

390
00:17:36,799 --> 00:17:42,860
actually<font color="#E5E5E5"> invented to for use with nodes</font>

391
00:17:40,790 --> 00:17:44,870
and pods or you could taint<font color="#E5E5E5"> a node so</font>

392
00:17:42,860 --> 00:17:47,629
that pods wouldn't necessarily run on

393
00:17:44,870 --> 00:17:49,549
that node unless you wanted them to<font color="#E5E5E5"> but</font>

394
00:17:47,630 --> 00:17:52,940
<font color="#E5E5E5">we are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to instead</font><font color="#CCCCCC"> of apply it to</font>

395
00:17:49,549 --> 00:17:55,639
<font color="#E5E5E5">PVCs and pods</font><font color="#CCCCCC"> and so what happens is a</font>

396
00:17:52,940 --> 00:17:58,520
<font color="#CCCCCC">taint gets applied to</font><font color="#E5E5E5"> the PVC when it's</font>

397
00:17:55,640 --> 00:18:00,260
<font color="#E5E5E5">posted to the cluster if it has a data</font>

398
00:17:58,520 --> 00:18:02,179
source reference<font color="#E5E5E5"> so that's all done by</font>

399
00:18:00,260 --> 00:18:05,120
an admission controller<font color="#E5E5E5"> as part of</font>

400
00:18:02,179 --> 00:18:07,640
kubernetes<font color="#E5E5E5"> the effect of that are what</font>

401
00:18:05,120 --> 00:18:09,678
it actually means is that this PVC needs

402
00:18:07,640 --> 00:18:11,480
to be populated<font color="#CCCCCC"> before it's generally</font>

403
00:18:09,679 --> 00:18:15,650
<font color="#E5E5E5">usable so there's kind of a problem with</font>

404
00:18:11,480 --> 00:18:17,780
it<font color="#CCCCCC"> if you will what happens is regular</font>

405
00:18:15,650 --> 00:18:19,880
pods now that are referencing it like

406
00:18:17,780 --> 00:18:22,549
that nginx<font color="#E5E5E5"> app you saw would not be able</font>

407
00:18:19,880 --> 00:18:25,309
<font color="#E5E5E5">to start what with</font><font color="#CCCCCC"> that taint on it so</font>

408
00:18:22,549 --> 00:18:27,950
they would<font color="#E5E5E5"> just wait</font><font color="#CCCCCC"> but then the</font>

409
00:18:25,309 --> 00:18:31,190
<font color="#CCCCCC">popular</font><font color="#E5E5E5"> controller is still detecting</font>

410
00:18:27,950 --> 00:18:33,200
the PVC and it wants<font color="#CCCCCC"> to populate it so</font>

411
00:18:31,190 --> 00:18:35,450
it's going to<font color="#E5E5E5"> spawn a pod that</font><font color="#CCCCCC"> has a</font>

412
00:18:33,200 --> 00:18:37,820
<font color="#CCCCCC">Toleration which says</font><font color="#E5E5E5"> I'm gonna tolerate</font>

413
00:18:35,450 --> 00:18:40,910
<font color="#E5E5E5">the empty PVC because I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> fill it</font>

414
00:18:37,820 --> 00:18:43,129
<font color="#E5E5E5">in</font><font color="#CCCCCC"> and then that will schedule find the</font>

415
00:18:40,910 --> 00:18:45,620
population<font color="#CCCCCC"> hopefully completes correctly</font>

416
00:18:43,130 --> 00:18:49,700
then<font color="#CCCCCC"> the populated controller removes</font>

417
00:18:45,620 --> 00:18:51,770
the taint from<font color="#E5E5E5"> the PVC and everything's</font>

418
00:18:49,700 --> 00:18:56,450
ready<font color="#CCCCCC"> to go</font><font color="#E5E5E5"> so it's all orchestrated</font><font color="#CCCCCC"> and</font>

419
00:18:51,770 --> 00:18:59,120
managed by kubernetes itself so the<font color="#E5E5E5"> next</font>

420
00:18:56,450 --> 00:19:03,169
steps for<font color="#CCCCCC"> us along the lines of this</font>

421
00:18:59,120 --> 00:19:06,559
idea are first to allow custom resources

422
00:19:03,169 --> 00:19:08,090
in the PVC data source field<font color="#CCCCCC"> they're not</font>

423
00:19:06,559 --> 00:19:10,040
allowed yet because<font color="#E5E5E5"> that feature was</font>

424
00:19:08,090 --> 00:19:12,139
actually<font color="#CCCCCC"> designed to create volumes from</font>

425
00:19:10,040 --> 00:19:15,799
snapshots and to create volumes from

426
00:19:12,140 --> 00:19:18,860
other volumes so clones<font color="#E5E5E5"> so we're going</font>

427
00:19:15,799 --> 00:19:20,929
<font color="#CCCCCC">to extend it we need</font><font color="#E5E5E5"> to do the PVC taint</font>

428
00:19:18,860 --> 00:19:22,820
<font color="#CCCCCC">sin</font><font color="#E5E5E5"> toleration</font><font color="#CCCCCC"> x'</font><font color="#E5E5E5"> that's already been</font>

429
00:19:20,929 --> 00:19:25,460
the under discussion<font color="#E5E5E5"> in the community</font>

430
00:19:22,820 --> 00:19:26,860
<font color="#CCCCCC">and in progress and then the last thing</font>

431
00:19:25,460 --> 00:19:29,450
<font color="#E5E5E5">that we want</font><font color="#CCCCCC"> to do is create</font><font color="#E5E5E5"> a</font>

432
00:19:26,860 --> 00:19:31,919
repository where<font color="#CCCCCC"> we can have an example</font>

433
00:19:29,450 --> 00:19:34,110
populate<font color="#CCCCCC"> ur</font><font color="#E5E5E5"> and</font>

434
00:19:31,920 --> 00:19:37,110
example see ours<font color="#E5E5E5"> may be like with this</font>

435
00:19:34,110 --> 00:19:39,209
<font color="#E5E5E5">get repo one and some others</font><font color="#CCCCCC"> to begin</font>

436
00:19:37,110 --> 00:19:41,010
the<font color="#E5E5E5"> process of collaborating with</font><font color="#CCCCCC"> people</font>

437
00:19:39,210 --> 00:19:45,510
so<font color="#E5E5E5"> that we can get get a library of</font>

438
00:19:41,010 --> 00:19:47,400
these going<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> the other examples</font>

439
00:19:45,510 --> 00:19:47,850
of<font color="#CCCCCC"> things</font><font color="#E5E5E5"> you can do you've seen the git</font>

440
00:19:47,400 --> 00:19:50,850
repo

441
00:19:47,850 --> 00:19:53,879
<font color="#CCCCCC">I've talked several times about</font><font color="#E5E5E5"> HTTP</font>

442
00:19:50,850 --> 00:19:55,469
import using kubernetes secrets<font color="#CCCCCC"> you</font>

443
00:19:53,880 --> 00:19:57,840
could really do something<font color="#E5E5E5"> cool with</font><font color="#CCCCCC"> this</font>

444
00:19:55,470 --> 00:20:00,000
which<font color="#CCCCCC"> is to clone an existing</font><font color="#E5E5E5"> PVC if</font>

445
00:19:57,840 --> 00:20:02,100
<font color="#CCCCCC">your if</font><font color="#E5E5E5"> your storage can't do it behind</font>

446
00:20:00,000 --> 00:20:04,770
<font color="#E5E5E5">the scenes</font><font color="#CCCCCC"> you can do a host assisted</font>

447
00:20:02,100 --> 00:20:06,270
clone<font color="#E5E5E5"> how that would</font><font color="#CCCCCC"> work is a populated</font>

448
00:20:04,770 --> 00:20:09,059
<font color="#E5E5E5">controller would spawn a pod</font><font color="#CCCCCC"> that</font>

449
00:20:06,270 --> 00:20:12,418
actually<font color="#CCCCCC"> attaches to both</font><font color="#E5E5E5"> PVCs and then</font>

450
00:20:09,059 --> 00:20:14,879
just copies<font color="#E5E5E5"> from one to another</font><font color="#CCCCCC"> upload</font>

451
00:20:12,419 --> 00:20:17,820
is even more<font color="#E5E5E5"> kind of crazy and</font>

452
00:20:14,880 --> 00:20:20,669
interesting but rather than<font color="#E5E5E5"> using cube</font>

453
00:20:17,820 --> 00:20:22,860
<font color="#E5E5E5">CTL CP to put data into the cluster</font><font color="#CCCCCC"> you</font>

454
00:20:20,669 --> 00:20:26,250
<font color="#CCCCCC">can have an upload proxy server that</font>

455
00:20:22,860 --> 00:20:28,229
<font color="#E5E5E5">listens and when an authenticated</font>

456
00:20:26,250 --> 00:20:31,049
request comes in via<font color="#CCCCCC"> the kubernetes api</font>

457
00:20:28,230 --> 00:20:33,270
to that it<font color="#E5E5E5"> can actually forward the data</font>

458
00:20:31,049 --> 00:20:36,030
to a pod that's running<font color="#E5E5E5"> that happens to</font>

459
00:20:33,270 --> 00:20:37,889
<font color="#E5E5E5">be attached to a PVC and then proxy the</font>

460
00:20:36,030 --> 00:20:41,100
data in so you could support<font color="#E5E5E5"> direct</font>

461
00:20:37,890 --> 00:20:42,720
<font color="#E5E5E5">uploads to your cluster</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

462
00:20:41,100 --> 00:20:44,399
something we're actually already<font color="#E5E5E5"> doing</font>

463
00:20:42,720 --> 00:20:46,919
in a project<font color="#CCCCCC"> called the</font><font color="#E5E5E5"> containerized</font>

464
00:20:44,400 --> 00:20:49,500
data importer which I'll link to in a

465
00:20:46,919 --> 00:20:53,700
<font color="#E5E5E5">minute here</font><font color="#CCCCCC"> so you can actually</font><font color="#E5E5E5"> try that</font>

466
00:20:49,500 --> 00:20:55,200
out<font color="#E5E5E5"> in its current form</font><font color="#CCCCCC"> and then</font><font color="#E5E5E5"> restore</font>

467
00:20:53,700 --> 00:20:57,780
from backup is here<font color="#CCCCCC"> again if you're a</font>

468
00:20:55,200 --> 00:21:00,169
backup vendor and<font color="#E5E5E5"> you have specific</font>

469
00:20:57,780 --> 00:21:02,820
logic<font color="#E5E5E5"> on how to pull data out of your</font>

470
00:21:00,169 --> 00:21:04,890
backup<font color="#E5E5E5"> back-end</font><font color="#CCCCCC"> you could write a</font>

471
00:21:02,820 --> 00:21:09,840
populate earth at then puts<font color="#E5E5E5"> that into</font>

472
00:21:04,890 --> 00:21:11,669
the PVC<font color="#E5E5E5"> so that's all I have</font>

473
00:21:09,840 --> 00:21:13,889
here's the link<font color="#E5E5E5"> to the containerized</font>

474
00:21:11,669 --> 00:21:16,410
data importer it's part<font color="#E5E5E5"> of the Qbert</font>

475
00:21:13,890 --> 00:21:18,360
project as well so this<font color="#E5E5E5"> is kind of the</font>

476
00:21:16,410 --> 00:21:20,429
<font color="#CCCCCC">grandfather to</font><font color="#E5E5E5"> these ideas that were</font>

477
00:21:18,360 --> 00:21:21,899
pushing<font color="#CCCCCC"> up into the community of</font>

478
00:21:20,429 --> 00:21:25,350
kubernetes trying to get some

479
00:21:21,900 --> 00:21:28,710
generalized traction on it<font color="#CCCCCC"> so I think</font><font color="#E5E5E5"> I</font>

480
00:21:25,350 --> 00:21:29,459
have a few<font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> for questions yeah go</font>

481
00:21:28,710 --> 00:21:32,549
ahead

482
00:21:29,460 --> 00:21:32,549
[Music]

483
00:21:33,860 --> 00:21:39,330
so the question is is when would we

484
00:21:36,120 --> 00:21:41,790
<font color="#E5E5E5">expect taints and</font><font color="#CCCCCC"> toleration x'</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> pvcs</font>

485
00:21:39,330 --> 00:21:43,710
to hit upstream<font color="#E5E5E5"> so I guess we're</font>

486
00:21:41,790 --> 00:21:48,389
designing it now

487
00:21:43,710 --> 00:21:50,910
I would hope by like kubernetes<font color="#E5E5E5"> 114</font><font color="#CCCCCC"> it's</font>

488
00:21:48,390 --> 00:21:53,040
it's not super<font color="#E5E5E5"> complex and it's an</font>

489
00:21:50,910 --> 00:21:55,260
existing<font color="#CCCCCC"> concept that everyone gets so</font>

490
00:21:53,040 --> 00:21:57,120
it should<font color="#CCCCCC"> be pretty easy to get</font><font color="#E5E5E5"> going</font>

491
00:21:55,260 --> 00:21:58,950
through but that's a<font color="#E5E5E5"> dangerous thing to</font>

492
00:21:57,120 --> 00:22:06,770
say<font color="#E5E5E5"> with the kubernetes community so</font>

493
00:21:58,950 --> 00:22:06,770
we'll see anything else yeah go ahead

494
00:22:19,690 --> 00:22:26,630
so the question is<font color="#E5E5E5"> are we leveraging</font><font color="#CCCCCC"> a</font>

495
00:22:22,640 --> 00:22:29,390
<font color="#E5E5E5">pre-existing field in the PVC in order</font>

496
00:22:26,630 --> 00:22:32,810
to make this<font color="#E5E5E5"> work and the</font><font color="#CCCCCC"> answer to that</font>

497
00:22:29,390 --> 00:22:34,580
is yes in fact<font color="#E5E5E5"> we were part of the group</font>

498
00:22:32,810 --> 00:22:39,530
participating in the snapshots and

499
00:22:34,580 --> 00:22:41,270
cloning<font color="#E5E5E5"> features and so we this has been</font>

500
00:22:39,530 --> 00:22:43,100
kind<font color="#CCCCCC"> of a long time coming and</font><font color="#E5E5E5"> we chose</font>

501
00:22:41,270 --> 00:22:45,920
this<font color="#E5E5E5"> general purposed way of describing</font>

502
00:22:43,100 --> 00:22:47,719
<font color="#E5E5E5">this concept of this PVC should have</font>

503
00:22:45,920 --> 00:22:54,670
something<font color="#E5E5E5"> in it and we want to describe</font>

504
00:22:47,720 --> 00:22:54,670
<font color="#E5E5E5">that declaratively any other questions</font>

505
00:22:56,440 --> 00:23:01,440
am I missing anyone<font color="#E5E5E5"> all right I guess</font>

506
00:22:59,150 --> 00:23:09,199
not<font color="#E5E5E5"> so thanks a</font><font color="#CCCCCC"> lot</font><font color="#E5E5E5"> guys</font>

507
00:23:01,440 --> 00:23:09,199
[Applause]

