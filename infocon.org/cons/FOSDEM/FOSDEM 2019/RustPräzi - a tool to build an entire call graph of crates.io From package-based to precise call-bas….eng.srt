1
00:00:04,640 --> 00:00:10,670
and so we<font color="#E5E5E5"> are gonna</font><font color="#CCCCCC"> start this is like</font>

2
00:00:07,550 --> 00:00:13,309
our third<font color="#CCCCCC"> poll</font><font color="#E5E5E5"> cover today</font><font color="#CCCCCC"> Joseph is</font>

3
00:00:10,670 --> 00:00:17,090
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to introduce himself first</font><font color="#E5E5E5"> and</font>

4
00:00:13,309 --> 00:00:25,250
then is to call<font color="#E5E5E5"> us crazy so a large</font>

5
00:00:17,090 --> 00:00:26,900
<font color="#E5E5E5">Plaza Warren applause - all right so</font>

6
00:00:25,250 --> 00:00:29,689
<font color="#CCCCCC">today I'm going to talk about how</font><font color="#E5E5E5"> to</font>

7
00:00:26,900 --> 00:00:32,150
actually be like gigantic<font color="#E5E5E5"> global cool</font>

8
00:00:29,689 --> 00:00:33,800
<font color="#E5E5E5">drop of Chris Rio</font><font color="#CCCCCC"> so my name is</font><font color="#E5E5E5"> Joseph</font>

9
00:00:32,150 --> 00:00:36,470
<font color="#CCCCCC">hey drew</font><font color="#E5E5E5"> and this is work that</font><font color="#CCCCCC"> I've done</font>

10
00:00:33,800 --> 00:00:38,059
together with<font color="#CCCCCC"> George's buzios and more</font>

11
00:00:36,470 --> 00:00:40,040
speller<font color="#E5E5E5"> so they are also sitting here in</font>

12
00:00:38,059 --> 00:00:42,280
the audience<font color="#E5E5E5"> you can identify them by</font>

13
00:00:40,040 --> 00:00:44,239
the shirt<font color="#E5E5E5"> that I'm wearing</font>

14
00:00:42,280 --> 00:00:46,790
so<font color="#E5E5E5"> well</font><font color="#CCCCCC"> just wondering what does</font>

15
00:00:44,239 --> 00:00:49,519
actually<font color="#CCCCCC"> rust-red C stand for it comes</font>

16
00:00:46,790 --> 00:00:52,250
from the word<font color="#CCCCCC"> classy only</font><font color="#E5E5E5"> in German</font>

17
00:00:49,519 --> 00:00:54,440
which<font color="#CCCCCC"> is in English precision and I</font>

18
00:00:52,250 --> 00:00:56,629
myself know German<font color="#E5E5E5"> but more</font><font color="#CCCCCC"> Systrom so</font>

19
00:00:54,440 --> 00:01:01,339
when he helped<font color="#E5E5E5"> me get you'd be supported</font>

20
00:00:56,629 --> 00:01:03,379
the wonderful name so<font color="#CCCCCC"> - totally by</font>

21
00:01:01,339 --> 00:01:06,650
myself<font color="#E5E5E5"> so I'm when I'm not here</font><font color="#CCCCCC"> actually</font>

22
00:01:03,379 --> 00:01:08,660
had forced them I'm a PhD student at<font color="#E5E5E5"> tu</font>

23
00:01:06,650 --> 00:01:10,910
<font color="#E5E5E5">Delft which is a Technical University at</font>

24
00:01:08,660 --> 00:01:14,509
in Netherlands<font color="#E5E5E5"> it's actually in a small</font>

25
00:01:10,910 --> 00:01:16,340
town and and what I<font color="#E5E5E5"> actually do day to</font>

26
00:01:14,510 --> 00:01:18,980
<font color="#E5E5E5">day basis</font><font color="#CCCCCC"> that I work on dependency</font>

27
00:01:16,340 --> 00:01:21,740
management problems<font color="#E5E5E5"> so I so one of the</font>

28
00:01:18,980 --> 00:01:23,660
products<font color="#CCCCCC"> of</font><font color="#E5E5E5"> course is</font><font color="#CCCCCC"> raw</font><font color="#E5E5E5"> spritzee but</font><font color="#CCCCCC"> I</font>

29
00:01:21,740 --> 00:01:25,789
<font color="#CCCCCC">mostly</font><font color="#E5E5E5"> into under siding practices and</font>

30
00:01:23,660 --> 00:01:29,200
where we can actually do the Paris<font color="#E5E5E5"> event</font>

31
00:01:25,790 --> 00:01:31,850
more pleasant than better for developers

32
00:01:29,200 --> 00:01:34,520
<font color="#E5E5E5">and if I was a PhD student I actually</font>

33
00:01:31,850 --> 00:01:37,220
worked on<font color="#E5E5E5"> pull</font><font color="#CCCCCC"> request fertilization and</font>

34
00:01:34,520 --> 00:01:40,640
that was a<font color="#CCCCCC"> Lee developer</font><font color="#E5E5E5"> startup don't</font>

35
00:01:37,220 --> 00:01:42,770
conduct<font color="#E5E5E5"> so before we dive into actually</font>

36
00:01:40,640 --> 00:01:44,480
the idea of building a gigantic

37
00:01:42,770 --> 00:01:47,360
<font color="#E5E5E5">autograph</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> thinking we can actually</font>

38
00:01:44,480 --> 00:01:49,760
<font color="#CCCCCC">revisit a bit</font><font color="#E5E5E5"> what dependency checkers</font>

39
00:01:47,360 --> 00:01:52,220
or<font color="#CCCCCC"> dependency</font><font color="#E5E5E5"> man is or how defense the</font>

40
00:01:49,760 --> 00:01:54,080
checker works<font color="#E5E5E5"> as just a question how</font>

41
00:01:52,220 --> 00:01:57,830
many<font color="#E5E5E5"> of you do use a dependency checker</font>

42
00:01:54,080 --> 00:02:00,200
<font color="#E5E5E5">in general any hats okay so there are</font>

43
00:01:57,830 --> 00:02:02,390
quite<font color="#CCCCCC"> a few but I just gave up its</font>

44
00:02:00,200 --> 00:02:05,900
introduction<font color="#E5E5E5"> on how it actually works so</font>

45
00:02:02,390 --> 00:02:07,989
over here I<font color="#E5E5E5"> have</font><font color="#CCCCCC"> a cargo</font><font color="#E5E5E5"> dot</font><font color="#CCCCCC"> Tamil file</font>

46
00:02:05,900 --> 00:02:10,099
with some<font color="#E5E5E5"> dependencies specified and</font>

47
00:02:07,989 --> 00:02:12,260
over here you<font color="#E5E5E5"> can see that some</font><font color="#CCCCCC"> of them</font>

48
00:02:10,098 --> 00:02:15,769
actually<font color="#E5E5E5"> have a version range to it by</font>

49
00:02:12,260 --> 00:02:17,829
the tilde or<font color="#CCCCCC"> caret symbol</font><font color="#E5E5E5"> and when we</font>

50
00:02:15,770 --> 00:02:19,750
let's say<font color="#E5E5E5"> like want to</font>

51
00:02:17,830 --> 00:02:22,060
do some type of security checking or

52
00:02:19,750 --> 00:02:25,600
find out whether dependencies were<font color="#CCCCCC"> noble</font>

53
00:02:22,060 --> 00:02:29,200
<font color="#E5E5E5">or has some license conflict we first</font>

54
00:02:25,600 --> 00:02:32,940
<font color="#E5E5E5">resolve this diversion and after that we</font>

55
00:02:29,200 --> 00:02:34,989
<font color="#CCCCCC">actually build a dependency tree and</font>

56
00:02:32,940 --> 00:02:37,780
this<font color="#CCCCCC"> is basically like the top level</font>

57
00:02:34,990 --> 00:02:39,730
<font color="#E5E5E5">dependencies but actually we do have</font>

58
00:02:37,780 --> 00:02:41,740
<font color="#CCCCCC">more dependencies that</font><font color="#E5E5E5"> actually depend</font>

59
00:02:39,730 --> 00:02:45,399
on those<font color="#E5E5E5"> packages that are specified in</font>

60
00:02:41,740 --> 00:02:47,770
the<font color="#E5E5E5"> cargo door table file and as you can</font>

61
00:02:45,400 --> 00:02:49,450
<font color="#E5E5E5">see</font><font color="#CCCCCC"> I didn't go further but this is</font>

62
00:02:47,770 --> 00:02:53,380
<font color="#E5E5E5">generally how our dependency tree looked</font>

63
00:02:49,450 --> 00:02:56,890
like and in let's say like academia<font color="#E5E5E5"> we</font>

64
00:02:53,380 --> 00:03:00,040
usually will<font color="#CCCCCC"> depends in that</font><font color="#E5E5E5"> to actually</font>

65
00:02:56,890 --> 00:03:01,869
understand how package repositories work

66
00:03:00,040 --> 00:03:04,359
like and maybe also understand problems

67
00:03:01,870 --> 00:03:07,240
<font color="#E5E5E5">like the</font><font color="#CCCCCC"> left</font><font color="#E5E5E5"> had incident so over here</font>

68
00:03:04,360 --> 00:03:10,840
I<font color="#CCCCCC"> have three packages</font><font color="#E5E5E5"> so one is package</font>

69
00:03:07,240 --> 00:03:14,350
a B and C and what we do is<font color="#CCCCCC"> that we join</font>

70
00:03:10,840 --> 00:03:16,030
them<font color="#CCCCCC"> based on the same package version</font>

71
00:03:14,350 --> 00:03:18,459
<font color="#CCCCCC">name and this way for instance you</font><font color="#E5E5E5"> can</font>

72
00:03:16,030 --> 00:03:19,870
ask like for those who depend<font color="#E5E5E5"> on left</font>

73
00:03:18,459 --> 00:03:23,730
package how many of them would be

74
00:03:19,870 --> 00:03:26,530
affected if that one will be removed and

75
00:03:23,730 --> 00:03:31,799
as I said<font color="#CCCCCC"> we will bring those</font><font color="#E5E5E5"> basically</font>

76
00:03:26,530 --> 00:03:31,800
version together into a single<font color="#CCCCCC"> Network</font>

77
00:03:32,100 --> 00:03:40,690
and then we have<font color="#CCCCCC"> coal graphs and here I</font>

78
00:03:36,820 --> 00:03:42,970
have a sample code probably<font color="#CCCCCC"> pseudo not</font>

79
00:03:40,690 --> 00:03:46,420
exactly<font color="#CCCCCC"> versatile</font><font color="#E5E5E5"> maybe and that</font>

80
00:03:42,970 --> 00:03:50,080
<font color="#E5E5E5">actually looks into what is sorry that</font>

81
00:03:46,420 --> 00:03:52,320
<font color="#E5E5E5">actually takes it receives notifications</font>

82
00:03:50,080 --> 00:03:54,760
but we don't actually do nothing with it

83
00:03:52,320 --> 00:03:57,370
so how do<font color="#E5E5E5"> we build a coal graph</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this</font>

84
00:03:54,760 --> 00:03:59,560
code well the first thing<font color="#CCCCCC"> that we do is</font>

85
00:03:57,370 --> 00:04:01,720
we<font color="#CCCCCC"> identify all the function calls</font><font color="#E5E5E5"> and</font>

86
00:03:59,560 --> 00:04:06,010
also the function<font color="#CCCCCC"> definitions so we have</font>

87
00:04:01,720 --> 00:04:09,370
like is like the main function<font color="#CCCCCC"> and also</font>

88
00:04:06,010 --> 00:04:13,750
<font color="#E5E5E5">like</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> ready</font><font color="#CCCCCC"> and from this we look at</font>

89
00:04:09,370 --> 00:04:17,590
who calls each other<font color="#E5E5E5"> and then we get a</font>

90
00:04:13,750 --> 00:04:19,930
call<font color="#E5E5E5"> graph like this and in rust we can</font>

91
00:04:17,589 --> 00:04:22,960
actually<font color="#E5E5E5"> do this using for instance</font><font color="#CCCCCC"> like</font>

92
00:04:19,930 --> 00:04:25,900
the LLVM<font color="#CCCCCC"> iron core which was mentioned</font>

93
00:04:22,960 --> 00:04:28,030
<font color="#CCCCCC">in the previous talk and so you can</font>

94
00:04:25,900 --> 00:04:32,370
first use<font color="#E5E5E5"> the LLVM opt opt</font>

95
00:04:28,030 --> 00:04:32,369
<font color="#CCCCCC">tool to actually generate</font><font color="#E5E5E5"> a whole graph</font>

96
00:04:33,129 --> 00:04:36,970
but then<font color="#CCCCCC"> all right least</font><font color="#E5E5E5"> likely so when</font>

97
00:04:35,560 --> 00:04:39,220
the so one<font color="#E5E5E5"> problem is that</font><font color="#CCCCCC"> when you</font>

98
00:04:36,970 --> 00:04:41,439
<font color="#E5E5E5">analyze programs you only get partial of</font>

99
00:04:39,220 --> 00:04:42,909
<font color="#E5E5E5">it and no idea is to actually go beyond</font>

100
00:04:41,439 --> 00:04:45,340
a<font color="#CCCCCC"> single program actually into the</font>

101
00:04:42,909 --> 00:04:47,340
dependencies and get the full picture<font color="#E5E5E5"> of</font>

102
00:04:45,340 --> 00:04:50,919
actually how<font color="#CCCCCC"> all functions</font><font color="#E5E5E5"> are called</font>

103
00:04:47,340 --> 00:04:53,020
so air of course<font color="#E5E5E5"> we have example with</font>

104
00:04:50,919 --> 00:04:55,359
the connection<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your own app but</font><font color="#E5E5E5"> we</font>

105
00:04:53,020 --> 00:04:57,370
can also look at what<font color="#CCCCCC"> - what functions</font>

106
00:04:55,360 --> 00:04:59,909
do they also call there a connection

107
00:04:57,370 --> 00:05:02,199
<font color="#E5E5E5">function so we see every like it goes</font>

108
00:04:59,909 --> 00:05:07,810
something like<font color="#CCCCCC"> request and</font><font color="#E5E5E5"> that one is</font>

109
00:05:02,199 --> 00:05:10,270
like<font color="#CCCCCC"> Network link freezes and yeah and</font>

110
00:05:07,810 --> 00:05:12,639
then the second<font color="#E5E5E5"> part that we do</font><font color="#CCCCCC"> it these</font>

111
00:05:10,270 --> 00:05:14,669
<font color="#CCCCCC">days that not only</font><font color="#E5E5E5"> do we</font><font color="#CCCCCC"> only capture</font>

112
00:05:12,639 --> 00:05:19,000
the functions of<font color="#E5E5E5"> it but we also</font>

113
00:05:14,669 --> 00:05:21,490
annotated 50 versions<font color="#E5E5E5"> and by doing so</font><font color="#CCCCCC"> we</font>

114
00:05:19,000 --> 00:05:24,699
can<font color="#E5E5E5"> merge two concepts together</font><font color="#CCCCCC"> which is</font>

115
00:05:21,490 --> 00:05:26,500
the<font color="#E5E5E5"> dependency network and the</font>

116
00:05:24,699 --> 00:05:28,870
colegrove's<font color="#E5E5E5"> and together we get</font>

117
00:05:26,500 --> 00:05:33,490
<font color="#E5E5E5">something called a coal-based dependency</font>

118
00:05:28,870 --> 00:05:36,219
<font color="#CCCCCC">network so you</font><font color="#E5E5E5"> might wondering why</font>

119
00:05:33,490 --> 00:05:40,629
should<font color="#CCCCCC"> we do all of this in the</font>

120
00:05:36,219 --> 00:05:42,490
<font color="#E5E5E5">beginning well as library maintainer or</font>

121
00:05:40,629 --> 00:05:44,159
even if you own something like<font color="#CCCCCC"> crazy</font>

122
00:05:42,490 --> 00:05:47,500
<font color="#CCCCCC">diode you might be interested to know</font>

123
00:05:44,159 --> 00:05:52,330
sort<font color="#CCCCCC"> of things what's happening in the</font>

124
00:05:47,500 --> 00:05:53,889
community<font color="#E5E5E5"> and so for</font><font color="#CCCCCC"> instance like this</font>

125
00:05:52,330 --> 00:05:57,370
is of course<font color="#E5E5E5"> this doesn't really exist</font>

126
00:05:53,889 --> 00:05:58,990
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just a vision</font><font color="#E5E5E5"> so you might let's</font>

127
00:05:57,370 --> 00:06:00,580
say like<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> - lets see</font><font color="#E5E5E5"> and then</font>

128
00:05:58,990 --> 00:06:02,949
everyone might want<font color="#CCCCCC"> to publish a new</font>

129
00:06:00,580 --> 00:06:08,318
version but then when you<font color="#E5E5E5"> run it you get</font>

130
00:06:02,949 --> 00:06:09,789
<font color="#E5E5E5">the faint and yeah so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I gotta</font>

131
00:06:08,319 --> 00:06:11,409
forget would<font color="#E5E5E5"> you remove the deprecated</font>

132
00:06:09,789 --> 00:06:15,009
function but then when we<font color="#CCCCCC"> look</font><font color="#E5E5E5"> at it why</font>

133
00:06:11,409 --> 00:06:17,589
did it get failed<font color="#E5E5E5"> well it's because you</font>

134
00:06:15,009 --> 00:06:20,440
wanted to publish something that will

135
00:06:17,589 --> 00:06:22,690
affect 15% of<font color="#CCCCCC"> personnel and a good</font><font color="#E5E5E5"> idea</font>

136
00:06:20,440 --> 00:06:24,669
here could<font color="#CCCCCC"> be that</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of making</font>

137
00:06:22,690 --> 00:06:27,099
this as a problem photos would depend on

138
00:06:24,669 --> 00:06:28,870
<font color="#E5E5E5">your library it can be put</font><font color="#CCCCCC"> on a let's</font>

139
00:06:27,099 --> 00:06:31,960
say like<font color="#E5E5E5"> on hold</font><font color="#CCCCCC"> and maybe some further</font>

140
00:06:28,870 --> 00:06:33,129
analysis can be made<font color="#E5E5E5"> on this and then as</font>

141
00:06:31,960 --> 00:06:35,289
an ex-officer like there may be

142
00:06:33,129 --> 00:06:39,520
<font color="#E5E5E5">delimited threshold is</font><font color="#CCCCCC"> 2% that you're</font>

143
00:06:35,289 --> 00:06:40,810
allowed to<font color="#E5E5E5"> break in</font><font color="#CCCCCC"> Chris that IO and I</font>

144
00:06:39,520 --> 00:06:43,000
free so you can<font color="#E5E5E5"> also like analyze</font>

145
00:06:40,810 --> 00:06:44,740
adoption<font color="#E5E5E5"> so here I had like two versions</font>

146
00:06:43,000 --> 00:06:47,740
so<font color="#E5E5E5"> you can see for</font><font color="#CCCCCC"> instance when you</font>

147
00:06:44,740 --> 00:06:49,720
<font color="#E5E5E5">your new version</font><font color="#CCCCCC"> that from</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> and</font>

148
00:06:47,740 --> 00:06:53,020
looking<font color="#E5E5E5"> back one week you can see that</font>

149
00:06:49,720 --> 00:06:56,680
there are my<font color="#CCCCCC"> 5% less that are using your</font>

150
00:06:53,020 --> 00:07:02,740
version of<font color="#CCCCCC"> Xero 5.0 and there are 12%</font>

151
00:06:56,680 --> 00:07:04,810
model to using 0.18<font color="#CCCCCC"> and they also</font><font color="#E5E5E5"> many</font>

152
00:07:02,740 --> 00:07:07,110
more applications<font color="#E5E5E5"> like for</font><font color="#CCCCCC"> you select</font>

153
00:07:04,810 --> 00:07:09,190
health aspects<font color="#CCCCCC"> maybe also licensing</font>

154
00:07:07,110 --> 00:07:11,320
security<font color="#E5E5E5"> and also maybe we can learn</font>

155
00:07:09,190 --> 00:07:17,290
<font color="#CCCCCC">coal</font><font color="#E5E5E5"> patents in general that can be for</font>

156
00:07:11,320 --> 00:07:19,420
education<font color="#CCCCCC"> purposes</font><font color="#E5E5E5"> or other aspects so</font>

157
00:07:17,290 --> 00:07:20,980
the other<font color="#E5E5E5"> question is like okay</font><font color="#CCCCCC"> this may</font>

158
00:07:19,420 --> 00:07:24,220
<font color="#CCCCCC">be looks really cool but how do we</font>

159
00:07:20,980 --> 00:07:27,220
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> turn</font><font color="#CCCCCC"> crazy oil into a gigantic</font>

160
00:07:24,220 --> 00:07:29,020
<font color="#CCCCCC">goal graph</font><font color="#E5E5E5"> it might</font><font color="#CCCCCC"> sound simple on</font>

161
00:07:27,220 --> 00:07:32,160
<font color="#CCCCCC">paper but actually is much more</font>

162
00:07:29,020 --> 00:07:35,859
difficult<font color="#E5E5E5"> than that</font><font color="#CCCCCC"> so the first thing</font>

163
00:07:32,160 --> 00:07:38,620
how do<font color="#CCCCCC"> we actually first compile</font><font color="#E5E5E5"> 22,000</font>

164
00:07:35,860 --> 00:07:41,050
packages because in the corridor

165
00:07:38,620 --> 00:07:43,060
zombified you don't really<font color="#E5E5E5"> know what</font>

166
00:07:41,050 --> 00:07:45,010
compiler version is compatible<font color="#E5E5E5"> but also</font>

167
00:07:43,060 --> 00:07:47,260
which architecture freezes<font color="#E5E5E5"> because some</font>

168
00:07:45,010 --> 00:07:50,260
packages of<font color="#CCCCCC"> Windows some are for OSX</font>

169
00:07:47,260 --> 00:07:52,659
<font color="#E5E5E5">somewhere for embedded devices so it's</font>

170
00:07:50,260 --> 00:07:54,070
not all a trivial<font color="#E5E5E5"> and then also the</font>

171
00:07:52,660 --> 00:07:56,410
other<font color="#E5E5E5"> part</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> what is</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> their</font>

172
00:07:54,070 --> 00:07:58,440
entry point what is what<font color="#CCCCCC"> represents a</font>

173
00:07:56,410 --> 00:08:00,550
package<font color="#E5E5E5"> should it</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> the library</font>

174
00:07:58,440 --> 00:08:05,490
<font color="#E5E5E5">component should it also be the binary</font>

175
00:08:00,550 --> 00:08:08,710
etc so<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not that simple</font><font color="#CCCCCC"> and the other</font>

176
00:08:05,490 --> 00:08:10,540
aspect is the<font color="#E5E5E5"> version resolution as you</font>

177
00:08:08,710 --> 00:08:14,109
can see with the version range there are

178
00:08:10,540 --> 00:08:16,840
time dependent<font color="#CCCCCC"> if you solve a package</font>

179
00:08:14,110 --> 00:08:19,090
today<font color="#E5E5E5"> and you do it one week later it</font>

180
00:08:16,840 --> 00:08:21,099
might be<font color="#E5E5E5"> completely different</font><font color="#CCCCCC"> and this</font>

181
00:08:19,090 --> 00:08:25,000
<font color="#CCCCCC">is not</font><font color="#E5E5E5"> an this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> also a</font><font color="#CCCCCC"> problem that</font>

182
00:08:21,100 --> 00:08:27,550
<font color="#E5E5E5">affects how the the complete graph looks</font>

183
00:08:25,000 --> 00:08:29,440
<font color="#CCCCCC">like in the end</font><font color="#E5E5E5"> and then with coal per</font>

184
00:08:27,550 --> 00:08:33,270
week<font color="#CCCCCC"> all graphs</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> congress or an</font>

185
00:08:29,440 --> 00:08:35,890
approximation<font color="#CCCCCC"> of how</font><font color="#E5E5E5"> a program is called</font>

186
00:08:33,270 --> 00:08:38,679
<font color="#E5E5E5">but there are two important aspect a 1</font>

187
00:08:35,890 --> 00:08:40,990
is<font color="#E5E5E5"> to 1 is to be related to precision so</font>

188
00:08:38,679 --> 00:08:42,849
<font color="#CCCCCC">if precision is that you want</font><font color="#E5E5E5"> to be sure</font>

189
00:08:40,990 --> 00:08:44,730
that<font color="#E5E5E5"> the call graph that you</font><font color="#CCCCCC"> derived</font>

190
00:08:42,850 --> 00:08:47,770
<font color="#CCCCCC">from the source code is exact and</font>

191
00:08:44,730 --> 00:08:49,480
complete<font color="#E5E5E5"> and the other one is to do</font><font color="#CCCCCC"> with</font>

192
00:08:47,770 --> 00:08:51,880
<font color="#CCCCCC">sadness because there are aspects</font><font color="#E5E5E5"> for</font>

193
00:08:49,480 --> 00:08:56,440
<font color="#CCCCCC">uses like dynamic dispatch</font><font color="#E5E5E5"> it's not easy</font>

194
00:08:51,880 --> 00:08:58,030
to<font color="#CCCCCC"> handle and to sort of give an</font>

195
00:08:56,440 --> 00:08:59,560
approximation of

196
00:08:58,030 --> 00:09:01,569
how<font color="#E5E5E5"> with this weekend</font><font color="#CCCCCC"> princess-like ad</font>

197
00:08:59,560 --> 00:09:05,109
unlikely calls<font color="#CCCCCC"> for you</font><font color="#E5E5E5"> like you might</font>

198
00:09:01,570 --> 00:09:07,000
have multiple implications of a<font color="#CCCCCC"> call</font><font color="#E5E5E5"> you</font>

199
00:09:05,110 --> 00:09:08,770
<font color="#E5E5E5">basically create edges to all of them</font>

200
00:09:07,000 --> 00:09:14,170
<font color="#E5E5E5">money not</font><font color="#CCCCCC"> sure exactly which one it will</font>

201
00:09:08,770 --> 00:09:17,560
do at runtime so<font color="#CCCCCC"> spiders</font><font color="#E5E5E5"> aspects I still</font>

202
00:09:14,170 --> 00:09:19,990
went ahead and did this<font color="#E5E5E5"> and to give an</font>

203
00:09:17,560 --> 00:09:22,989
<font color="#CCCCCC">aura</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the port so the</font><font color="#E5E5E5"> first thing that</font>

204
00:09:19,990 --> 00:09:25,660
I do is to retrieve and build the

205
00:09:22,990 --> 00:09:28,110
packages<font color="#CCCCCC"> so that means like</font><font color="#E5E5E5"> downloaded</font>

206
00:09:25,660 --> 00:09:30,160
packages and then I need also some like

207
00:09:28,110 --> 00:09:32,080
cleaning in the<font color="#E5E5E5"> core normal files</font>

208
00:09:30,160 --> 00:09:34,900
because in some<font color="#E5E5E5"> of the versions you</font>

209
00:09:32,080 --> 00:09:37,090
actually<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Twitter</font><font color="#E5E5E5"> you actually specify</font>

210
00:09:34,900 --> 00:09:40,350
path dependencies which does not exist

211
00:09:37,090 --> 00:09:44,920
when you<font color="#E5E5E5"> use it then I</font><font color="#CCCCCC"> validate them</font><font color="#E5E5E5"> and</font>

212
00:09:40,350 --> 00:09:46,930
build it in the<font color="#E5E5E5"> second step</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> generated</font>

213
00:09:44,920 --> 00:09:49,060
Colegrove and as I mentioned earlier<font color="#CCCCCC"> I</font>

214
00:09:46,930 --> 00:09:52,000
actually did this<font color="#E5E5E5"> with using</font><font color="#CCCCCC"> the 1100</font>

215
00:09:49,060 --> 00:09:53,109
graph generator<font color="#CCCCCC"> I know from discussions</font>

216
00:09:52,000 --> 00:09:55,030
<font color="#CCCCCC">on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> restaurants that there are</font>

217
00:09:53,110 --> 00:09:58,420
different<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to do it but this was</font><font color="#E5E5E5"> the</font>

218
00:09:55,030 --> 00:10:01,600
way<font color="#E5E5E5"> that I saw</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> initially so the first</font>

219
00:09:58,420 --> 00:10:04,510
thing is that<font color="#CCCCCC"> you get the call graph</font><font color="#E5E5E5"> you</font>

220
00:10:01,600 --> 00:10:05,830
get<font color="#E5E5E5"> like this very mystic function</font><font color="#CCCCCC"> call</font>

221
00:10:04,510 --> 00:10:09,430
<font color="#CCCCCC">identifier that's</font><font color="#E5E5E5"> not really realistic</font>

222
00:10:05,830 --> 00:10:11,680
but that's Ross mangled<font color="#CCCCCC"> function and</font>

223
00:10:09,430 --> 00:10:13,150
fires<font color="#E5E5E5"> and then you d mangle it in this</font>

224
00:10:11,680 --> 00:10:18,699
case<font color="#CCCCCC"> I actually</font><font color="#E5E5E5"> use the Ross field</font>

225
00:10:13,150 --> 00:10:22,030
<font color="#E5E5E5">tool to do it and then in the</font><font color="#CCCCCC"> third step</font>

226
00:10:18,700 --> 00:10:23,950
<font color="#E5E5E5">I build unique identifiers which are so</font>

227
00:10:22,030 --> 00:10:26,380
like in the earlier call graph with the

228
00:10:23,950 --> 00:10:31,020
<font color="#E5E5E5">versioning and then similar to</font>

229
00:10:26,380 --> 00:10:34,360
dependency<font color="#E5E5E5"> Network I merge them together</font>

230
00:10:31,020 --> 00:10:36,699
<font color="#CCCCCC">and then finally</font><font color="#E5E5E5"> once you have annotated</font>

231
00:10:34,360 --> 00:10:38,800
and given all functional files<font color="#E5E5E5"> they're a</font>

232
00:10:36,700 --> 00:10:41,050
unique name you can merge<font color="#E5E5E5"> them together</font>

233
00:10:38,800 --> 00:10:45,240
and<font color="#CCCCCC"> then you have</font><font color="#E5E5E5"> your code base</font>

234
00:10:41,050 --> 00:10:48,280
dependency<font color="#E5E5E5"> Network so the first step is</font>

235
00:10:45,240 --> 00:10:49,450
<font color="#E5E5E5">also I gonna talk to</font><font color="#CCCCCC"> mines</font><font color="#E5E5E5"> challenging</font>

236
00:10:48,280 --> 00:10:51,730
<font color="#CCCCCC">search</font><font color="#E5E5E5"> the one is of course</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

237
00:10:49,450 --> 00:10:53,980
compiling and then the other one is with

238
00:10:51,730 --> 00:10:55,780
the function at the<font color="#CCCCCC"> virus they of course</font>

239
00:10:53,980 --> 00:11:01,630
<font color="#E5E5E5">mean other challenges but I won't have</font>

240
00:10:55,780 --> 00:11:04,030
time to<font color="#E5E5E5"> do that so I did this</font><font color="#CCCCCC"> packet 16</font>

241
00:11:01,630 --> 00:11:07,810
February 2018 so<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> almost one year</font>

242
00:11:04,030 --> 00:11:10,150
ago<font color="#E5E5E5"> since I did that</font><font color="#CCCCCC"> and when I first</font>

243
00:11:07,810 --> 00:11:11,650
<font color="#E5E5E5">tried</font><font color="#CCCCCC"> to attempt building it</font><font color="#E5E5E5"> I got</font>

244
00:11:10,150 --> 00:11:14,740
quite a few<font color="#E5E5E5"> errors which is of course</font>

245
00:11:11,650 --> 00:11:15,910
<font color="#E5E5E5">expected and didn't make me so happy</font><font color="#CCCCCC"> so</font>

246
00:11:14,740 --> 00:11:19,080
one of them was for<font color="#CCCCCC"> instance like</font>

247
00:11:15,910 --> 00:11:21,280
<font color="#E5E5E5">couldn't load like the source dependency</font>

248
00:11:19,080 --> 00:11:24,040
another one was for instance<font color="#CCCCCC"> like</font><font color="#E5E5E5"> it</font>

249
00:11:21,280 --> 00:11:26,020
could not run<font color="#E5E5E5"> nightly features and then</font>

250
00:11:24,040 --> 00:11:27,459
there was also cases<font color="#E5E5E5"> where there's a</font>

251
00:11:26,020 --> 00:11:30,579
<font color="#CCCCCC">custom-built commas that I could</font><font color="#E5E5E5"> not</font>

252
00:11:27,460 --> 00:11:32,620
execute and<font color="#E5E5E5"> I was</font><font color="#CCCCCC"> able to mitigate</font><font color="#E5E5E5"> some</font>

253
00:11:30,580 --> 00:11:35,830
<font color="#CCCCCC">of</font><font color="#E5E5E5"> them so free</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> like the first case</font>

254
00:11:32,620 --> 00:11:39,670
that I show over<font color="#CCCCCC"> here is MIDI basically</font>

255
00:11:35,830 --> 00:11:41,620
by using<font color="#CCCCCC"> a rewrite command in cargo that</font>

256
00:11:39,670 --> 00:11:44,380
<font color="#E5E5E5">basically gets the published</font><font color="#CCCCCC"> version of</font>

257
00:11:41,620 --> 00:11:45,540
the<font color="#E5E5E5"> cargo terminal and not the one that</font>

258
00:11:44,380 --> 00:11:47,860
<font color="#CCCCCC">you actually</font><font color="#E5E5E5"> download from the API</font>

259
00:11:45,540 --> 00:11:49,300
because sometimes I have<font color="#CCCCCC"> half</font><font color="#E5E5E5"> dependency</font>

260
00:11:47,860 --> 00:11:51,640
say you don't I mean they shouldn't

261
00:11:49,300 --> 00:11:54,130
<font color="#E5E5E5">really be there but yeah so that was an</font>

262
00:11:51,640 --> 00:11:56,110
<font color="#E5E5E5">issue and then with nightly features</font>

263
00:11:54,130 --> 00:11:59,439
what I did is that I run<font color="#E5E5E5"> a couple of</font>

264
00:11:56,110 --> 00:12:01,180
nightly compilers<font color="#E5E5E5"> to get it working but</font>

265
00:11:59,440 --> 00:12:03,040
then that the problem is that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't</font>

266
00:12:01,180 --> 00:12:05,469
always<font color="#E5E5E5"> know what this</font><font color="#CCCCCC"> again exactly is</font>

267
00:12:03,040 --> 00:12:09,370
the right nightly version to run<font color="#E5E5E5"> for our</font>

268
00:12:05,470 --> 00:12:11,230
<font color="#E5E5E5">trait</font><font color="#CCCCCC"> and then the last we've</font><font color="#E5E5E5"> custom</font>

269
00:12:09,370 --> 00:12:13,930
<font color="#E5E5E5">build scripts so one way we mitigate</font>

270
00:12:11,230 --> 00:12:16,360
that<font color="#E5E5E5"> is by installing a lot of system</font>

271
00:12:13,930 --> 00:12:18,339
packages<font color="#CCCCCC"> I learned recently there is</font>

272
00:12:16,360 --> 00:12:20,830
actually one docker file that actually

273
00:12:18,340 --> 00:12:23,170
<font color="#E5E5E5">does have always system dependencies I</font>

274
00:12:20,830 --> 00:12:26,470
haven't tried<font color="#CCCCCC"> that</font><font color="#E5E5E5"> myself but there is a</font>

275
00:12:23,170 --> 00:12:27,969
solution<font color="#E5E5E5"> to</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and I</font><font color="#CCCCCC"> think one upon</font><font color="#E5E5E5"> a</font>

276
00:12:26,470 --> 00:12:30,250
<font color="#E5E5E5">finger which I would like to see in</font>

277
00:12:27,970 --> 00:12:32,740
<font color="#CCCCCC">coral is that you can actually actually</font>

278
00:12:30,250 --> 00:12:35,170
evaluate that<font color="#CCCCCC"> the package can</font><font color="#E5E5E5"> compile</font>

279
00:12:32,740 --> 00:12:37,210
but also that there<font color="#E5E5E5"> are features</font><font color="#CCCCCC"> that</font>

280
00:12:35,170 --> 00:12:38,890
check whether you know which<font color="#CCCCCC"> version of</font>

281
00:12:37,210 --> 00:12:44,800
the compiler you<font color="#E5E5E5"> use what and why I</font>

282
00:12:38,890 --> 00:12:46,870
meant etc being taken into<font color="#E5E5E5"> account yet</font>

283
00:12:44,800 --> 00:12:48,790
it's one of<font color="#CCCCCC"> uh skip</font><font color="#E5E5E5"> out there some other</font>

284
00:12:46,870 --> 00:12:51,460
errors related to it which is<font color="#CCCCCC"> races like</font>

285
00:12:48,790 --> 00:12:57,099
when I was<font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> build that many of</font>

286
00:12:51,460 --> 00:12:59,830
the packages<font color="#E5E5E5"> actually use a trait but</font>

287
00:12:57,100 --> 00:13:02,140
incorrectly<font color="#E5E5E5"> so there's a lot of</font><font color="#CCCCCC"> of this</font>

288
00:12:59,830 --> 00:13:06,220
type of error<font color="#CCCCCC"> so I find quite a</font><font color="#E5E5E5"> few of</font>

289
00:13:02,140 --> 00:13:08,949
them and what was<font color="#E5E5E5"> like the final</font>

290
00:13:06,220 --> 00:13:11,560
<font color="#E5E5E5">compilation statistics so after removing</font>

291
00:13:08,950 --> 00:13:13,300
<font color="#E5E5E5">invalid manifests that</font><font color="#CCCCCC"> exists over there</font>

292
00:13:11,560 --> 00:13:16,119
I had<font color="#E5E5E5"> until</font><font color="#CCCCCC"> two twelve thousand</font><font color="#E5E5E5"> packages</font>

293
00:13:13,300 --> 00:13:20,770
and then that went<font color="#CCCCCC"> down to 72,000</font>

294
00:13:16,120 --> 00:13:21,970
releases in total<font color="#CCCCCC"> of those packages and</font>

295
00:13:20,770 --> 00:13:26,560
then

296
00:13:21,970 --> 00:13:30,360
out of those I managed<font color="#CCCCCC"> to build 40 9800</font>

297
00:13:26,560 --> 00:13:33,910
<font color="#CCCCCC">for coal graphs which is in total 11,000</font>

298
00:13:30,360 --> 00:13:34,780
packages or<font color="#E5E5E5"> crates it took me six to</font>

299
00:13:33,910 --> 00:13:36,339
<font color="#E5E5E5">nine hours to do it</font>

300
00:13:34,780 --> 00:13:38,140
of course I didn't do in<font color="#E5E5E5"> the MacBook</font><font color="#CCCCCC"> we</font>

301
00:13:36,340 --> 00:13:42,280
actually<font color="#E5E5E5"> use the cluster at the</font>

302
00:13:38,140 --> 00:13:44,410
<font color="#CCCCCC">University for it</font><font color="#E5E5E5"> and in total I could</font>

303
00:13:42,280 --> 00:13:47,020
build<font color="#CCCCCC"> at that point of time 70% of</font>

304
00:13:44,410 --> 00:13:48,760
<font color="#CCCCCC">crazier</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we chose that there</font><font color="#E5E5E5"> are some</font>

305
00:13:47,020 --> 00:13:50,530
actually<font color="#CCCCCC"> really good guarantees with</font>

306
00:13:48,760 --> 00:13:55,720
cargo and<font color="#CCCCCC"> creaser</font><font color="#E5E5E5"> to actually build</font>

307
00:13:50,530 --> 00:13:59,050
packages<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right then the other part</font>

308
00:13:55,720 --> 00:14:01,540
is with the rust<font color="#E5E5E5"> symbols so I wanted to</font>

309
00:13:59,050 --> 00:14:03,040
annotate version numbers to it<font color="#E5E5E5"> but then</font>

310
00:14:01,540 --> 00:14:06,339
<font color="#E5E5E5">a problem here is that I cannot use</font>

311
00:14:03,040 --> 00:14:10,569
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> radix to do it</font><font color="#E5E5E5"> unfortunately so I</font>

312
00:14:06,340 --> 00:14:13,660
had to actually build a parser on top<font color="#E5E5E5"> of</font>

313
00:14:10,570 --> 00:14:16,510
it<font color="#CCCCCC"> so luckily sorry so you can see for</font>

314
00:14:13,660 --> 00:14:18,670
<font color="#CCCCCC">instance</font><font color="#E5E5E5"> like it has this assembler as</font>

315
00:14:16,510 --> 00:14:20,380
<font color="#E5E5E5">cool and</font><font color="#CCCCCC"> here's</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> like the</font>

316
00:14:18,670 --> 00:14:24,430
server version<font color="#E5E5E5"> rec implementing the</font>

317
00:14:20,380 --> 00:14:27,189
trait partial ordering and the<font color="#E5E5E5"> soleus I</font>

318
00:14:24,430 --> 00:14:29,410
used let's say like<font color="#E5E5E5"> a build on top of</font>

319
00:14:27,190 --> 00:14:33,390
scene which actually parses<font color="#E5E5E5"> rusts code</font>

320
00:14:29,410 --> 00:14:36,819
and added this specific<font color="#CCCCCC"> Russy LLVM</font>

321
00:14:33,390 --> 00:14:41,319
symbols to do it and by doing<font color="#E5E5E5"> this I was</font>

322
00:14:36,820 --> 00:14:42,820
able to annotate version numbers and you

323
00:14:41,320 --> 00:14:46,810
know<font color="#E5E5E5"> me to add</font><font color="#CCCCCC"> append the</font><font color="#E5E5E5"> version</font>

324
00:14:42,820 --> 00:14:48,370
numbers<font color="#E5E5E5"> I basically let's look at the</font>

325
00:14:46,810 --> 00:14:51,489
<font color="#E5E5E5">card log file of the package of</font><font color="#CCCCCC"> the</font>

326
00:14:48,370 --> 00:14:54,610
building it<font color="#E5E5E5"> extracting the information</font>

327
00:14:51,490 --> 00:14:56,890
and then appending it to it so at first

328
00:14:54,610 --> 00:14:58,840
<font color="#E5E5E5">like the ecosystem that I use in the</font>

329
00:14:56,890 --> 00:15:00,490
<font color="#CCCCCC">library version</font><font color="#E5E5E5"> the module and the</font>

330
00:14:58,840 --> 00:15:05,500
function ma this is the way I create<font color="#E5E5E5"> the</font>

331
00:15:00,490 --> 00:15:07,240
unique function<font color="#E5E5E5"> identifier so I'm not</font>

332
00:15:05,500 --> 00:15:09,870
going<font color="#E5E5E5"> to a live demo but I gonna show a</font>

333
00:15:07,240 --> 00:15:12,670
<font color="#E5E5E5">little bit what you can do with it and</font>

334
00:15:09,870 --> 00:15:15,130
the I did<font color="#CCCCCC"> actually two applications with</font>

335
00:15:12,670 --> 00:15:21,099
it one is of course the<font color="#CCCCCC"> popular</font><font color="#E5E5E5"> security</font>

336
00:15:15,130 --> 00:15:22,689
and I also did one with deprecation I

337
00:15:21,100 --> 00:15:24,970
think many<font color="#E5E5E5"> of you probably</font><font color="#CCCCCC"> have seen</font>

338
00:15:22,690 --> 00:15:28,030
this of course<font color="#E5E5E5"> not with Rosco but</font>

339
00:15:24,970 --> 00:15:31,230
probably with JavaScript and I think

340
00:15:28,030 --> 00:15:31,230
<font color="#E5E5E5">also probably</font><font color="#CCCCCC"> rubygems</font>

341
00:15:31,290 --> 00:15:39,509
<font color="#CCCCCC">rubygems</font><font color="#E5E5E5"> code so I tried this using the</font>

342
00:15:35,699 --> 00:15:42,180
rust<font color="#CCCCCC"> shake database so at that</font><font color="#E5E5E5"> point of</font>

343
00:15:39,509 --> 00:15:44,399
<font color="#CCCCCC">time they had</font><font color="#E5E5E5"> six advisories from those</font>

344
00:15:42,180 --> 00:15:46,649
<font color="#CCCCCC">advices I could extract 13 functions</font>

345
00:15:44,399 --> 00:15:51,269
that were affected by some form of

346
00:15:46,649 --> 00:15:53,699
vulnerability<font color="#E5E5E5"> and I did this using both</font>

347
00:15:51,269 --> 00:15:55,589
a regular dependency checker<font color="#E5E5E5"> that means</font>

348
00:15:53,699 --> 00:15:57,719
a look just<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the package informations</font>

349
00:15:55,589 --> 00:16:00,360
which I showed before with dependency<font color="#E5E5E5"> to</font>

350
00:15:57,720 --> 00:16:01,440
<font color="#E5E5E5">a checker and then I used with my raw</font>

351
00:16:00,360 --> 00:16:03,839
spreadsheet to see the number of

352
00:16:01,440 --> 00:16:06,540
packages<font color="#E5E5E5"> and here we can clearly see the</font>

353
00:16:03,839 --> 00:16:08,190
advantage of having doing it on the

354
00:16:06,540 --> 00:16:10,860
<font color="#E5E5E5">corporate level because we get more</font>

355
00:16:08,190 --> 00:16:12,870
precision<font color="#E5E5E5"> and avoid false positives and</font>

356
00:16:10,860 --> 00:16:15,990
<font color="#E5E5E5">as you can</font><font color="#CCCCCC"> see like the numbers are much</font>

357
00:16:12,870 --> 00:16:17,639
less which<font color="#E5E5E5"> means that I as a</font><font color="#CCCCCC"> developer</font>

358
00:16:15,990 --> 00:16:21,690
don't<font color="#E5E5E5"> have to actually</font><font color="#CCCCCC"> really go through</font>

359
00:16:17,639 --> 00:16:25,019
<font color="#E5E5E5">too many packages when I have to see</font>

360
00:16:21,690 --> 00:16:27,930
what we<font color="#E5E5E5"> were false</font><font color="#CCCCCC"> positives and</font><font color="#E5E5E5"> to see</font>

361
00:16:25,019 --> 00:16:30,120
it like<font color="#CCCCCC"> this</font><font color="#E5E5E5"> result actually accurate at</font>

362
00:16:27,930 --> 00:16:32,790
some point<font color="#CCCCCC"> resistors lot of false</font>

363
00:16:30,120 --> 00:16:35,819
positives<font color="#CCCCCC"> so I looked only at the direct</font>

364
00:16:32,790 --> 00:16:38,579
dependencies and analyze<font color="#CCCCCC"> that and I</font>

365
00:16:35,819 --> 00:16:40,680
<font color="#E5E5E5">found that using raw</font><font color="#CCCCCC"> spread see that</font>

366
00:16:38,579 --> 00:16:43,439
it's actually<font color="#E5E5E5"> three times more accurate</font>

367
00:16:40,680 --> 00:16:46,050
<font color="#E5E5E5">than</font><font color="#CCCCCC"> using the regular dependency based</font>

368
00:16:43,440 --> 00:16:48,149
approach<font color="#E5E5E5"> something that I didn't mention</font>

369
00:16:46,050 --> 00:16:49,649
here slide is that there<font color="#E5E5E5"> are some</font>

370
00:16:48,149 --> 00:16:52,500
<font color="#E5E5E5">problems</font><font color="#CCCCCC"> with respect to the</font>

371
00:16:49,649 --> 00:16:55,170
<font color="#E5E5E5">completeness of reciprocity because I do</font>

372
00:16:52,500 --> 00:16:57,420
not get freezes like dynamically display

373
00:16:55,170 --> 00:17:00,689
functions also<font color="#CCCCCC"> there's some</font><font color="#E5E5E5"> problems</font>

374
00:16:57,420 --> 00:17:03,329
with conditional compilation etc but in

375
00:17:00,690 --> 00:17:05,909
principle by doing it on the<font color="#CCCCCC"> culture</font>

376
00:17:03,329 --> 00:17:08,790
that<font color="#CCCCCC"> way we can</font><font color="#E5E5E5"> actually have</font><font color="#CCCCCC"> high</font>

377
00:17:05,909 --> 00:17:13,470
precision we do such type of analysis

378
00:17:08,790 --> 00:17:14,908
and also<font color="#E5E5E5"> really cool thing is</font><font color="#CCCCCC"> that I was</font>

379
00:17:13,470 --> 00:17:18,140
of course posting this on the<font color="#CCCCCC"> russ</font>

380
00:17:14,909 --> 00:17:22,409
forums<font color="#E5E5E5"> i'm sure if you have seen it but</font>

381
00:17:18,140 --> 00:17:25,079
yeah<font color="#E5E5E5"> so</font><font color="#CCCCCC"> tony from the rust</font><font color="#E5E5E5"> sake a</font>

382
00:17:22,409 --> 00:17:26,880
community he added<font color="#E5E5E5"> this feature with</font>

383
00:17:25,079 --> 00:17:28,379
effective function so that's<font color="#E5E5E5"> very nice</font>

384
00:17:26,880 --> 00:17:31,200
thing for<font color="#E5E5E5"> me later on</font><font color="#CCCCCC"> that i</font><font color="#E5E5E5"> can</font>

385
00:17:28,380 --> 00:17:33,330
actually easily just import data from

386
00:17:31,200 --> 00:17:35,659
<font color="#E5E5E5">the raw security database get the</font>

387
00:17:33,330 --> 00:17:39,840
function to fire<font color="#CCCCCC"> a dank query on the</font>

388
00:17:35,659 --> 00:17:42,210
<font color="#E5E5E5">respite</font><font color="#CCCCCC"> c</font><font color="#E5E5E5"> graph so the other case i</font>

389
00:17:39,840 --> 00:17:44,500
looked at was<font color="#CCCCCC"> add application</font><font color="#E5E5E5"> so did a</font>

390
00:17:42,210 --> 00:17:46,179
very<font color="#E5E5E5"> small study</font>

391
00:17:44,500 --> 00:17:47,950
so I looked at<font color="#CCCCCC"> their so for instance</font>

392
00:17:46,179 --> 00:17:50,740
like the the questionnaires<font color="#CCCCCC"> like how</font>

393
00:17:47,950 --> 00:17:52,929
many<font color="#CCCCCC"> will be affected</font><font color="#E5E5E5"> by a removal of a</font>

394
00:17:50,740 --> 00:17:56,950
deprecated function<font color="#E5E5E5"> so this was the main</font>

395
00:17:52,929 --> 00:17:59,770
<font color="#CCCCCC">reason</font><font color="#E5E5E5"> why I wanted to do this and so I</font>

396
00:17:56,950 --> 00:18:02,110
looked at functions like<font color="#E5E5E5"> using</font><font color="#CCCCCC"> my data</font>

397
00:17:59,770 --> 00:18:04,629
set<font color="#CCCCCC"> of all packages</font><font color="#E5E5E5"> I looked at how</font><font color="#CCCCCC"> many</font>

398
00:18:02,110 --> 00:18:10,330
of<font color="#E5E5E5"> them</font><font color="#CCCCCC"> actually had a deprecated</font>

399
00:18:04,630 --> 00:18:12,340
function by using<font color="#E5E5E5"> this annotation and I</font>

400
00:18:10,330 --> 00:18:14,500
didn't<font color="#E5E5E5"> find too many of them</font><font color="#CCCCCC"> I found</font>

401
00:18:12,340 --> 00:18:17,408
<font color="#E5E5E5">from</font><font color="#CCCCCC"> eleven releases through six</font>

402
00:18:14,500 --> 00:18:18,760
packages so with<font color="#E5E5E5"> this one so</font><font color="#CCCCCC"> basically</font>

403
00:18:17,409 --> 00:18:23,440
once they were actually used by<font color="#E5E5E5"> other</font>

404
00:18:18,760 --> 00:18:25,780
<font color="#E5E5E5">people there of course many more and I</font>

405
00:18:23,440 --> 00:18:27,669
found out in total those were actually

406
00:18:25,780 --> 00:18:32,168
<font color="#CCCCCC">using those eleven functions</font><font color="#E5E5E5"> were 300</font>

407
00:18:27,669 --> 00:18:34,390
level and they<font color="#E5E5E5"> say packages and those</font>

408
00:18:32,169 --> 00:18:39,250
are not<font color="#E5E5E5"> only</font><font color="#CCCCCC"> top-level packages but also</font>

409
00:18:34,390 --> 00:18:41,950
transitive<font color="#E5E5E5"> packages and if I would try</font>

410
00:18:39,250 --> 00:18:45,490
to remove those functions<font color="#E5E5E5"> 52 of them</font>

411
00:18:41,950 --> 00:18:46,630
would actually<font color="#E5E5E5"> be affected of course</font>

412
00:18:45,490 --> 00:18:48,580
where they're actually removed or<font color="#E5E5E5"> not</font>

413
00:18:46,630 --> 00:18:50,470
<font color="#CCCCCC">that's a</font><font color="#E5E5E5"> different discussion</font><font color="#CCCCCC"> but this</font>

414
00:18:48,580 --> 00:18:57,158
is some form<font color="#E5E5E5"> of analysis that you can do</font>

415
00:18:50,470 --> 00:19:01,030
with respect<font color="#E5E5E5"> C and yeah</font><font color="#CCCCCC"> so I really want</font>

416
00:18:57,159 --> 00:19:04,240
this to<font color="#CCCCCC"> be a</font><font color="#E5E5E5"> community effort</font><font color="#CCCCCC"> so the way</font>

417
00:19:01,030 --> 00:19:06,428
I envisioned with raw spritzy is that<font color="#E5E5E5"> I</font>

418
00:19:04,240 --> 00:19:09,370
would like<font color="#E5E5E5"> to do analysis and do</font>

419
00:19:06,429 --> 00:19:12,760
<font color="#CCCCCC">data-driven decisions for Princeton</font><font color="#E5E5E5"> they</font>

420
00:19:09,370 --> 00:19:16,539
a crater project which runs like a

421
00:19:12,760 --> 00:19:18,700
regression<font color="#E5E5E5"> on Chris at i/o using the</font>

422
00:19:16,539 --> 00:19:20,020
compiler<font color="#E5E5E5"> but also for</font><font color="#CCCCCC"> instance like the</font>

423
00:19:18,700 --> 00:19:23,740
ecosystem work group where they actually

424
00:19:20,020 --> 00:19:25,299
<font color="#E5E5E5">try</font><font color="#CCCCCC"> to find a crates that</font><font color="#E5E5E5"> have phrases</font>

425
00:19:23,740 --> 00:19:27,370
<font color="#CCCCCC">like in not been maintained for a long</font>

426
00:19:25,299 --> 00:19:30,250
time or some other problems in<font color="#E5E5E5"> which</font><font color="#CCCCCC"> it</font>

427
00:19:27,370 --> 00:19:32,439
actually<font color="#CCCCCC"> needs some attention</font><font color="#E5E5E5"> and also</font>

428
00:19:30,250 --> 00:19:36,760
<font color="#E5E5E5">their security</font><font color="#CCCCCC"> work repressor show</font><font color="#E5E5E5"> me</font>

429
00:19:32,440 --> 00:19:39,340
one slide and yeah this<font color="#CCCCCC"> is a bit like</font>

430
00:19:36,760 --> 00:19:42,490
<font color="#CCCCCC">maybe what I really</font><font color="#E5E5E5"> would like to serve</font>

431
00:19:39,340 --> 00:19:44,980
this is real what what I want to go

432
00:19:42,490 --> 00:19:47,710
forward<font color="#CCCCCC"> with and there are of course</font>

433
00:19:44,980 --> 00:19:49,990
many open problems so this<font color="#E5E5E5"> is actually a</font>

434
00:19:47,710 --> 00:19:51,159
<font color="#CCCCCC">prototype and as a researcher is of</font>

435
00:19:49,990 --> 00:19:52,899
course<font color="#E5E5E5"> difficult to find</font><font color="#CCCCCC"> time with</font>

436
00:19:51,159 --> 00:19:56,679
<font color="#CCCCCC">researcher doing development but I</font>

437
00:19:52,899 --> 00:19:57,549
really<font color="#E5E5E5"> hope</font><font color="#CCCCCC"> to make this something</font><font color="#E5E5E5"> that</font>

438
00:19:56,679 --> 00:20:00,879
<font color="#E5E5E5">actual</font>

439
00:19:57,549 --> 00:20:07,149
<font color="#CCCCCC">we can benefit the community as a</font>

440
00:20:00,879 --> 00:20:08,678
divided community and yeah so as<font color="#CCCCCC"> you</font>

441
00:20:07,149 --> 00:20:10,479
<font color="#CCCCCC">probably</font><font color="#E5E5E5"> seen on t-shirt and also many</font>

442
00:20:08,679 --> 00:20:13,360
posters

443
00:20:10,480 --> 00:20:15,730
<font color="#E5E5E5">one way to</font><font color="#CCCCCC"> actually help me to do was</font>

444
00:20:13,360 --> 00:20:20,498
press the battery<font color="#E5E5E5"> is to actually take my</font>

445
00:20:15,730 --> 00:20:21,700
survey so<font color="#CCCCCC"> a for</font><font color="#E5E5E5"> this time is long but I</font>

446
00:20:20,499 --> 00:20:23,409
<font color="#E5E5E5">would really appreciate if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could</font>

447
00:20:21,700 --> 00:20:25,619
fill<font color="#E5E5E5"> out some problems</font><font color="#CCCCCC"> that you</font>

448
00:20:23,409 --> 00:20:28,360
<font color="#CCCCCC">experienced with dependency management</font>

449
00:20:25,619 --> 00:20:30,039
or<font color="#E5E5E5"> other things a lot of point of</font>

450
00:20:28,360 --> 00:20:33,100
suggestions you<font color="#CCCCCC"> have with dependency</font>

451
00:20:30,039 --> 00:20:36,390
management in<font color="#CCCCCC"> general so thank you very</font>

452
00:20:33,100 --> 00:20:39,458
<font color="#E5E5E5">much I'm ready for questions</font>

453
00:20:36,390 --> 00:20:39,459
[Applause]

454
00:20:41,550 --> 00:20:48,030
[Applause]

455
00:20:45,030 --> 00:20:48,030
yes

456
00:21:07,929 --> 00:21:13,249
<font color="#CCCCCC">that's so your question</font><font color="#E5E5E5"> is about what is</font>

457
00:21:10,940 --> 00:21:16,220
the number<font color="#CCCCCC"> of false positives in general</font>

458
00:21:13,249 --> 00:21:18,049
with using raw spritzee but also like

459
00:21:16,220 --> 00:21:22,580
with control flow graphs why<font color="#CCCCCC"> I don't</font>

460
00:21:18,049 --> 00:21:24,918
include that<font color="#CCCCCC"> so with</font><font color="#E5E5E5"> respect to control</font>

461
00:21:22,580 --> 00:21:27,769
flow graph<font color="#CCCCCC"> so because I wanted</font><font color="#E5E5E5"> to build</font>

462
00:21:24,919 --> 00:21:29,570
<font color="#CCCCCC">this one</font><font color="#E5E5E5"> ecosystem and the first level</font>

463
00:21:27,769 --> 00:21:30,919
<font color="#E5E5E5">of granularity that I wanted to look is</font>

464
00:21:29,570 --> 00:21:34,309
at at the Colegrove

465
00:21:30,919 --> 00:21:36,259
level<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> days that reasons I can</font>

466
00:21:34,309 --> 00:21:38,119
like slice part of the Colegrove

467
00:21:36,259 --> 00:21:40,519
<font color="#E5E5E5">I mean let's say like all</font><font color="#CCCCCC"> those affected</font>

468
00:21:38,119 --> 00:21:42,830
<font color="#CCCCCC">paths throughout the ecosystem and do</font>

469
00:21:40,519 --> 00:21:44,480
more<font color="#CCCCCC"> fine-grained analysis by actually</font>

470
00:21:42,830 --> 00:21:47,330
extracting the called control flow graph

471
00:21:44,480 --> 00:21:49,850
for<font color="#CCCCCC"> that part of functions of</font><font color="#E5E5E5"> going one</font>

472
00:21:47,330 --> 00:21:52,759
step level level down<font color="#E5E5E5"> and with respect</font>

473
00:21:49,850 --> 00:21:55,309
<font color="#E5E5E5">to false positives</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> because I'm using</font>

474
00:21:52,759 --> 00:21:59,059
the LLVM<font color="#E5E5E5"> Cole go via narrator it is</font>

475
00:21:55,309 --> 00:22:02,600
<font color="#E5E5E5">precise but</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is not sound so it is</font>

476
00:21:59,059 --> 00:22:04,279
missing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> dynamic function invocations</font>

477
00:22:02,600 --> 00:22:07,639
<font color="#E5E5E5">it cannot handle for instance like</font>

478
00:22:04,279 --> 00:22:10,389
generic functions<font color="#E5E5E5"> so this is a big</font>

479
00:22:07,639 --> 00:22:12,949
problem<font color="#E5E5E5"> in</font><font color="#CCCCCC"> using this and of course I'm</font>

480
00:22:10,389 --> 00:22:15,199
trying<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> for but the Colegrove</font>

481
00:22:12,950 --> 00:22:18,139
alternative so I would really like some

482
00:22:15,200 --> 00:22:19,580
<font color="#E5E5E5">help here and actually</font><font color="#CCCCCC"> how to do it</font>

483
00:22:18,139 --> 00:22:22,758
better<font color="#E5E5E5"> but also do something that is</font>

484
00:22:19,580 --> 00:22:25,220
more<font color="#CCCCCC"> Rossella</font><font color="#E5E5E5"> complete a</font><font color="#CCCCCC"> phrase</font><font color="#E5E5E5"> like in</font>

485
00:22:22,759 --> 00:22:27,259
Java you have suit of Allah<font color="#E5E5E5"> which covers</font>

486
00:22:25,220 --> 00:22:29,649
a lot of<font color="#CCCCCC"> features it would also be very</font>

487
00:22:27,259 --> 00:22:38,200
nice<font color="#CCCCCC"> if</font><font color="#E5E5E5"> there is something similar for</font>

488
00:22:29,649 --> 00:22:38,199
rust as well any more questions

489
00:22:43,040 --> 00:22:46,610
yeah I guess

490
00:22:47,300 --> 00:22:50,450
[Applause]

