1
00:00:05,939 --> 00:00:12,580
yeah<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> hot welcome hello again there</font>

2
00:00:09,969 --> 00:00:13,809
everyone<font color="#CCCCCC"> I just I just spoken</font><font color="#E5E5E5"> an hour</font>

3
00:00:12,580 --> 00:00:18,310
ago<font color="#E5E5E5"> realize didn't actually introduce</font>

4
00:00:13,809 --> 00:00:20,740
myself so my name<font color="#E5E5E5"> is Martin</font><font color="#CCCCCC"> I work for a</font>

5
00:00:18,310 --> 00:00:22,830
<font color="#E5E5E5">company called it is research</font><font color="#CCCCCC"> and I also</font>

6
00:00:20,740 --> 00:00:26,860
<font color="#CCCCCC">am also involved</font><font color="#E5E5E5"> in the Canadian project</font>

7
00:00:22,830 --> 00:00:30,189
and today<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will be talking about gr FEC</font>

8
00:00:26,860 --> 00:00:32,378
and<font color="#E5E5E5"> you know as a as a German living</font>

9
00:00:30,190 --> 00:00:34,239
abroad I'm trying to get to<font color="#CCCCCC"> grips with</font>

10
00:00:32,378 --> 00:00:38,800
this<font color="#E5E5E5"> concept of humor so I try and</font><font color="#CCCCCC"> come</font>

11
00:00:34,239 --> 00:00:40,718
up<font color="#CCCCCC"> with with a funny title but actually</font>

12
00:00:38,800 --> 00:00:42,909
if I do this<font color="#CCCCCC"> hawk</font><font color="#E5E5E5"> again I will call it</font>

13
00:00:40,719 --> 00:00:44,890
shocking tales of redundancy it's an

14
00:00:42,909 --> 00:00:46,390
even better title if you<font color="#E5E5E5"> don't if you</font>

15
00:00:44,890 --> 00:00:48,460
<font color="#CCCCCC">don't get if you</font><font color="#E5E5E5"> don't understand why</font>

16
00:00:46,390 --> 00:00:51,280
you<font color="#E5E5E5"> might at the end of my talk I just</font><font color="#CCCCCC"> I</font>

17
00:00:48,460 --> 00:00:54,659
just love this<font color="#CCCCCC"> picture too so um yeah</font>

18
00:00:51,280 --> 00:00:57,729
I'm gonna<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> grf you see you</font>

19
00:00:54,659 --> 00:00:58,989
first before I go into this so<font color="#CCCCCC"> grf you</font>

20
00:00:57,729 --> 00:01:01,019
see is<font color="#E5E5E5"> about forward error correction</font>

21
00:00:58,989 --> 00:01:05,770
this is a part of a<font color="#E5E5E5"> community</font>

22
00:01:01,019 --> 00:01:07,810
<font color="#E5E5E5">communication link however it's a very</font>

23
00:01:05,770 --> 00:01:09,219
very dense topic<font color="#E5E5E5"> so this is something</font>

24
00:01:07,810 --> 00:01:11,020
where typically<font color="#E5E5E5"> you</font><font color="#CCCCCC"> would have like two</font>

25
00:01:09,219 --> 00:01:13,119
semesters worth<font color="#E5E5E5"> of classes</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> on the</font>

26
00:01:11,020 --> 00:01:14,950
theory but<font color="#E5E5E5"> I actually also want to show</font>

27
00:01:13,119 --> 00:01:18,070
<font color="#E5E5E5">you how to use it in can radio in 20</font>

28
00:01:14,950 --> 00:01:20,289
minutes<font color="#E5E5E5"> so um I'm gonna have to</font><font color="#CCCCCC"> sort of</font>

29
00:01:18,070 --> 00:01:23,559
<font color="#E5E5E5">gloss over things very quickly and</font>

30
00:01:20,289 --> 00:01:25,119
really this<font color="#E5E5E5"> is designed for</font><font color="#CCCCCC"> people who</font>

31
00:01:23,560 --> 00:01:26,859
don't<font color="#E5E5E5"> actually know a lot about</font><font color="#CCCCCC"> grf you</font>

32
00:01:25,119 --> 00:01:28,630
see all<font color="#E5E5E5"> people who don't know how to use</font>

33
00:01:26,859 --> 00:01:30,460
it in a radio but<font color="#E5E5E5"> I just want to</font><font color="#CCCCCC"> sort of</font>

34
00:01:28,630 --> 00:01:31,539
tease<font color="#E5E5E5"> keys the topic for you I don't</font>

35
00:01:30,460 --> 00:01:32,619
<font color="#E5E5E5">want to</font><font color="#CCCCCC"> actually give you the</font>

36
00:01:31,539 --> 00:01:38,049
introduction<font color="#E5E5E5"> because I just don't have</font>

37
00:01:32,619 --> 00:01:40,240
the time to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> that okay so</font><font color="#CCCCCC"> let's</font><font color="#E5E5E5"> start</font>

38
00:01:38,049 --> 00:01:43,179
<font color="#E5E5E5">at the beginning</font><font color="#CCCCCC"> so one of my personal</font>

39
00:01:40,240 --> 00:01:45,460
<font color="#E5E5E5">heroes</font><font color="#CCCCCC"> Claude</font><font color="#E5E5E5"> Shannon and came up with</font>

40
00:01:43,179 --> 00:01:49,630
<font color="#E5E5E5">most of information theory in the 1940s</font>

41
00:01:45,460 --> 00:01:52,538
so I<font color="#E5E5E5"> I think like I</font><font color="#CCCCCC"> personally like as</font>

42
00:01:49,630 --> 00:01:55,509
you know as<font color="#CCCCCC"> a scientist</font><font color="#E5E5E5"> like I</font><font color="#CCCCCC"> I look up</font>

43
00:01:52,539 --> 00:01:58,679
<font color="#CCCCCC">to</font><font color="#E5E5E5"> him</font><font color="#CCCCCC"> for various reasons you know he</font>

44
00:01:55,509 --> 00:02:01,179
was<font color="#E5E5E5"> very smart</font><font color="#CCCCCC"> obviously he was not</font>

45
00:01:58,679 --> 00:02:02,920
fixated on theory or practice he could

46
00:02:01,179 --> 00:02:04,899
he could<font color="#CCCCCC"> do both like it was you know</font><font color="#E5E5E5"> he</font>

47
00:02:02,920 --> 00:02:07,210
built<font color="#E5E5E5"> computers and whatnot like he</font>

48
00:02:04,899 --> 00:02:08,530
built like this<font color="#E5E5E5"> one of the things</font><font color="#CCCCCC"> that</font>

49
00:02:07,210 --> 00:02:10,600
people<font color="#E5E5E5"> might</font><font color="#CCCCCC"> have seen is like</font><font color="#E5E5E5"> this</font>

50
00:02:08,530 --> 00:02:12,160
mission machine<font color="#E5E5E5"> learning little mouse</font>

51
00:02:10,600 --> 00:02:15,220
<font color="#CCCCCC">that</font><font color="#E5E5E5"> goes through a labyrinth</font><font color="#CCCCCC"> there's</font>

52
00:02:12,160 --> 00:02:17,200
like<font color="#CCCCCC"> he's</font><font color="#E5E5E5"> crazy like but what I think</font>

53
00:02:15,220 --> 00:02:18,370
<font color="#CCCCCC">the</font><font color="#E5E5E5"> most interesting contribution is</font>

54
00:02:17,200 --> 00:02:20,920
like this whole<font color="#CCCCCC"> concept</font>

55
00:02:18,370 --> 00:02:23,409
information theory is so like in the I

56
00:02:20,920 --> 00:02:25,119
don't<font color="#CCCCCC"> know</font><font color="#E5E5E5"> before he started working I</font>

57
00:02:23,409 --> 00:02:26,590
could have asked<font color="#CCCCCC"> you like how much how</font>

58
00:02:25,120 --> 00:02:29,709
much information<font color="#CCCCCC"> fits on this whiteboard</font>

59
00:02:26,590 --> 00:02:30,909
<font color="#CCCCCC">and people would</font><font color="#E5E5E5"> have said what</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> what</font>

60
00:02:29,709 --> 00:02:33,459
<font color="#E5E5E5">are you talking about it makes</font><font color="#CCCCCC"> notes the</font>

61
00:02:30,909 --> 00:02:35,349
<font color="#E5E5E5">question makes no sense</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> not only did</font>

62
00:02:33,459 --> 00:02:36,579
Shannon<font color="#E5E5E5"> come up with with the framework</font>

63
00:02:35,349 --> 00:02:40,480
to understand and<font color="#CCCCCC"> answer that question</font>

64
00:02:36,579 --> 00:02:42,430
he also came up with fundamental things

65
00:02:40,480 --> 00:02:44,260
like theories that are still<font color="#E5E5E5"> valid today</font>

66
00:02:42,430 --> 00:02:46,299
and have<font color="#E5E5E5"> not and they will never go away</font>

67
00:02:44,260 --> 00:02:48,190
they will they<font color="#CCCCCC"> will remain</font><font color="#E5E5E5"> and the most</font>

68
00:02:46,299 --> 00:02:50,950
important one is<font color="#E5E5E5"> the so-called</font><font color="#CCCCCC"> Shannon</font>

69
00:02:48,190 --> 00:02:55,060
<font color="#CCCCCC">women the</font><font color="#E5E5E5"> Shannon theorem which states</font>

70
00:02:50,950 --> 00:02:57,730
that given basically<font color="#CCCCCC"> a</font><font color="#E5E5E5"> signal to noise</font>

71
00:02:55,060 --> 00:02:59,620
ratio and a bandwidth<font color="#CCCCCC"> like there's a</font>

72
00:02:57,730 --> 00:03:04,840
certain<font color="#CCCCCC"> amount of</font><font color="#E5E5E5"> data you can carry</font>

73
00:02:59,620 --> 00:03:06,250
across<font color="#E5E5E5"> that channel and but the</font>

74
00:03:04,840 --> 00:03:08,079
interesting<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> about this he did this</font>

75
00:03:06,250 --> 00:03:09,909
<font color="#E5E5E5">first this was like basically the first</font>

76
00:03:08,079 --> 00:03:11,980
thing<font color="#E5E5E5"> in digital communication he just</font>

77
00:03:09,909 --> 00:03:13,870
lay the entire groundwork<font color="#CCCCCC"> and</font><font color="#E5E5E5"> he said</font>

78
00:03:11,980 --> 00:03:16,929
now everyone else can<font color="#E5E5E5"> go figure</font><font color="#CCCCCC"> out how</font>

79
00:03:13,870 --> 00:03:18,579
to<font color="#CCCCCC"> actually do that</font><font color="#E5E5E5"> that's and it but I</font>

80
00:03:16,930 --> 00:03:22,989
mean that is amazing<font color="#CCCCCC"> that that</font><font color="#E5E5E5"> is like</font>

81
00:03:18,579 --> 00:03:27,419
even I find<font color="#E5E5E5"> even more amazing</font><font color="#CCCCCC"> they're</font>

82
00:03:22,989 --> 00:03:27,419
doing<font color="#E5E5E5"> that the other</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> around</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> um</font>

83
00:03:27,510 --> 00:03:31,750
yeah beep so this is like the<font color="#E5E5E5"> single</font>

84
00:03:30,519 --> 00:03:33,180
equation<font color="#E5E5E5"> that I left all the other</font>

85
00:03:31,750 --> 00:03:35,769
equations out of the solid<font color="#E5E5E5"> out of this</font>

86
00:03:33,180 --> 00:03:38,440
presentation<font color="#CCCCCC"> very simple to understand</font>

87
00:03:35,769 --> 00:03:40,840
<font color="#E5E5E5">so you</font><font color="#CCCCCC"> know P plus n over N you can also</font>

88
00:03:38,440 --> 00:03:43,480
change it to 1 plus P<font color="#CCCCCC"> over N so P over N</font>

89
00:03:40,840 --> 00:03:45,760
being your<font color="#CCCCCC"> SNR if your</font><font color="#E5E5E5"> SNR is zero in</font>

90
00:03:43,480 --> 00:03:47,649
linear so minus<font color="#CCCCCC"> infinity DB which means</font>

91
00:03:45,760 --> 00:03:49,120
you don't<font color="#E5E5E5"> get anything across this term</font>

92
00:03:47,650 --> 00:03:52,269
becomes<font color="#CCCCCC"> zero so</font><font color="#E5E5E5"> obviously you can't</font>

93
00:03:49,120 --> 00:03:54,940
transmit<font color="#E5E5E5"> anything if it if</font><font color="#CCCCCC"> the DB SNR is</font>

94
00:03:52,269 --> 00:03:57,639
0 DB R equals to<font color="#E5E5E5"> 1 you</font><font color="#CCCCCC"> have 1 plus 1</font>

95
00:03:54,940 --> 00:03:59,620
equals<font color="#E5E5E5"> to log 2 of 2 is 1 which means</font>

96
00:03:57,639 --> 00:04:01,000
your channel rate is equal to the

97
00:03:59,620 --> 00:04:03,489
<font color="#CCCCCC">bandwidth so you have</font><font color="#E5E5E5"> 1 megahertz you</font>

98
00:04:01,000 --> 00:04:05,230
get<font color="#CCCCCC"> one megabit very simple</font><font color="#E5E5E5"> and it's</font>

99
00:04:03,489 --> 00:04:06,239
true<font color="#E5E5E5"> and it's not like this is never</font>

100
00:04:05,230 --> 00:04:12,399
<font color="#E5E5E5">gonna change</font>

101
00:04:06,239 --> 00:04:15,519
amazing so oh yeah quick quick interlude

102
00:04:12,400 --> 00:04:17,139
so I have some GRC examples at<font color="#CCCCCC"> the end</font>

103
00:04:15,519 --> 00:04:19,120
<font color="#E5E5E5">like my final version I</font><font color="#CCCCCC"> have exactly one</font>

104
00:04:17,139 --> 00:04:21,310
<font color="#CCCCCC">GRC example which is</font><font color="#E5E5E5"> not already in</font>

105
00:04:19,120 --> 00:04:24,729
green radio and I will<font color="#E5E5E5"> upload it to the</font>

106
00:04:21,310 --> 00:04:27,159
<font color="#E5E5E5">Fossum website afterwards but disclaimer</font>

107
00:04:24,729 --> 00:04:28,840
<font color="#E5E5E5">I used main</font><font color="#CCCCCC"> 3/7 for this branch so we</font>

108
00:04:27,159 --> 00:04:31,450
are currently<font color="#E5E5E5"> working on</font><font color="#CCCCCC"> Kuna radio of</font>

109
00:04:28,840 --> 00:04:31,900
3.8 it still has too many<font color="#E5E5E5"> bugs for me to</font>

110
00:04:31,450 --> 00:04:35,259
<font color="#E5E5E5">actually</font>

111
00:04:31,900 --> 00:04:36,520
<font color="#CCCCCC">you run this stuff so there's a feature</font>

112
00:04:35,259 --> 00:04:42,100
called<font color="#CCCCCC"> passports which</font><font color="#E5E5E5"> is currently</font>

113
00:04:36,520 --> 00:04:43,840
broken<font color="#E5E5E5"> I'm sorry the point is</font><font color="#CCCCCC"> GSC files</font>

114
00:04:42,100 --> 00:04:45,430
don't have a I am no question they have

115
00:04:43,840 --> 00:04:47,258
a version detection field so if you try

116
00:04:45,430 --> 00:04:48,060
<font color="#E5E5E5">and run this with master branch it won't</font>

117
00:04:47,259 --> 00:04:53,320
work

118
00:04:48,060 --> 00:04:55,539
<font color="#CCCCCC">alright so here's I'm not good at</font>

119
00:04:53,320 --> 00:04:59,050
computer graphics<font color="#E5E5E5"> so this is how I make</font>

120
00:04:55,539 --> 00:05:00,669
pictures<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is just a very very like</font>

121
00:04:59,050 --> 00:05:02,590
hypothetical setup so we<font color="#CCCCCC"> have a</font>

122
00:05:00,669 --> 00:05:04,570
<font color="#CCCCCC">transmitter antenna receiver antenna I</font>

123
00:05:02,590 --> 00:05:08,320
use the number 10 a<font color="#E5E5E5"> lot because in DB</font>

124
00:05:04,570 --> 00:05:10,599
that that works out<font color="#CCCCCC"> I have a transmit</font>

125
00:05:08,320 --> 00:05:13,180
gain of 10 DB<font color="#E5E5E5"> receive gain of 10 DB a</font>

126
00:05:10,600 --> 00:05:16,990
noise figure of 10 DB<font color="#E5E5E5"> 10 kilometers</font>

127
00:05:13,180 --> 00:05:21,610
distance<font color="#CCCCCC"> and like these are all</font><font color="#E5E5E5"> like</font>

128
00:05:16,990 --> 00:05:24,490
very<font color="#E5E5E5"> even numbers</font><font color="#CCCCCC"> I transmit I excuse</font>

129
00:05:21,610 --> 00:05:27,639
free space equations to just estimate my

130
00:05:24,490 --> 00:05:29,800
<font color="#E5E5E5">receive power</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> the precise numbers</font>

131
00:05:27,639 --> 00:05:33,639
don't don't really<font color="#E5E5E5"> matter the the</font><font color="#CCCCCC"> point</font>

132
00:05:29,800 --> 00:05:35,500
is I'm going to<font color="#E5E5E5"> exclude all effects</font>

133
00:05:33,639 --> 00:05:38,650
other<font color="#E5E5E5"> than thermal noise which</font><font color="#CCCCCC"> is a very</font>

134
00:05:35,500 --> 00:05:41,530
<font color="#E5E5E5">very strong assumption like you</font>

135
00:05:38,650 --> 00:05:42,760
typically you do worse than<font color="#CCCCCC"> that</font><font color="#E5E5E5"> then I</font>

136
00:05:41,530 --> 00:05:45,429
say<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> like I put in like sort of the</font>

137
00:05:42,760 --> 00:05:47,229
basic like first<font color="#E5E5E5"> yeah electrical</font>

138
00:05:45,430 --> 00:05:50,530
<font color="#E5E5E5">engineering equations and I find that</font><font color="#CCCCCC"> I</font>

139
00:05:47,229 --> 00:05:53,199
<font color="#E5E5E5">have a thermal noise of minus 1 or 3 DBM</font>

140
00:05:50,530 --> 00:05:55,659
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> approximately 10 DB above that</font>

141
00:05:53,199 --> 00:05:56,979
<font color="#E5E5E5">I have my noise power and I'm</font><font color="#CCCCCC"> going to</font>

142
00:05:55,659 --> 00:05:58,750
do some other simplifications which

143
00:05:56,979 --> 00:06:02,260
<font color="#E5E5E5">aren't</font><font color="#CCCCCC"> quite accurate but hey I've</font>

144
00:05:58,750 --> 00:06:03,940
<font color="#CCCCCC">already graduated</font><font color="#E5E5E5"> so people</font><font color="#CCCCCC"> can't people</font>

145
00:06:02,260 --> 00:06:06,669
can<font color="#E5E5E5"> take that away</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> me turns out</font>

146
00:06:03,940 --> 00:06:08,229
that that<font color="#CCCCCC"> the that the equation earlier</font>

147
00:06:06,669 --> 00:06:12,609
<font color="#CCCCCC">States we should be able to</font><font color="#E5E5E5"> achieve</font>

148
00:06:08,229 --> 00:06:15,159
about<font color="#CCCCCC"> three megabits</font><font color="#E5E5E5"> worth of a bit rate</font>

149
00:06:12,610 --> 00:06:17,289
<font color="#E5E5E5">with an arbitrarily low ever right</font><font color="#CCCCCC"> now</font>

150
00:06:15,159 --> 00:06:19,000
I'm like<font color="#E5E5E5"> okay you know arbitrarily low</font>

151
00:06:17,289 --> 00:06:21,729
<font color="#E5E5E5">okay I want one bit error in like 10</font>

152
00:06:19,000 --> 00:06:24,039
billion<font color="#E5E5E5"> years like can we do that</font><font color="#CCCCCC"> so</font>

153
00:06:21,729 --> 00:06:27,430
wait wait a minute<font color="#CCCCCC"> oh yeah</font><font color="#E5E5E5"> uncoated</font><font color="#CCCCCC"> at</font>

154
00:06:24,039 --> 00:06:31,180
GRC<font color="#E5E5E5"> is</font><font color="#CCCCCC"> yep</font><font color="#E5E5E5"> so this is like stripped</font>

155
00:06:27,430 --> 00:06:33,370
everything<font color="#CCCCCC"> that is this is super super</font>

156
00:06:31,180 --> 00:06:35,620
like<font color="#E5E5E5"> simplified there's no</font>

157
00:06:33,370 --> 00:06:38,020
synchronization here there's not even a

158
00:06:35,620 --> 00:06:40,120
channel<font color="#E5E5E5"> basically I'm just creating</font><font color="#CCCCCC"> BPSK</font>

159
00:06:38,020 --> 00:06:44,430
symbols and I do that because I can

160
00:06:40,120 --> 00:06:47,270
equate<font color="#E5E5E5"> SNR and EB over n0</font>

161
00:06:44,430 --> 00:06:49,350
and add<font color="#E5E5E5"> some noise and then I then I</font>

162
00:06:47,270 --> 00:06:52,909
turn<font color="#E5E5E5"> them back to bits and then I</font>

163
00:06:49,350 --> 00:06:57,990
measure the bit error rate so<font color="#CCCCCC"> um and</font>

164
00:06:52,910 --> 00:06:59,190
what you care<font color="#E5E5E5"> about which for some</font>

165
00:06:57,990 --> 00:07:01,080
reason is failing me right now

166
00:06:59,190 --> 00:07:02,430
it's the<font color="#CCCCCC"> bitter</font><font color="#E5E5E5"> rate is it's actually</font>

167
00:07:01,080 --> 00:07:05,698
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> and that's not supposed to happen</font>

168
00:07:02,430 --> 00:07:08,100
<font color="#CCCCCC">so</font><font color="#E5E5E5"> this number should be higher</font><font color="#CCCCCC"> than</font>

169
00:07:05,699 --> 00:07:11,300
that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> should be about ten to the</font><font color="#E5E5E5"> minus</font>

170
00:07:08,100 --> 00:07:13,949
<font color="#CCCCCC">six</font><font color="#E5E5E5"> or minus</font><font color="#CCCCCC"> four or something like</font><font color="#E5E5E5"> that</font>

171
00:07:11,300 --> 00:07:16,320
<font color="#E5E5E5">like this is</font><font color="#CCCCCC"> what I get for doing demos</font>

172
00:07:13,949 --> 00:07:18,990
<font color="#E5E5E5">oh I was playing around with the</font>

173
00:07:16,320 --> 00:07:26,099
amplitude<font color="#E5E5E5"> I'm just gonna crank it up for</font>

174
00:07:18,990 --> 00:07:28,680
now<font color="#E5E5E5"> where's my slide oh this is like the</font>

175
00:07:26,100 --> 00:07:31,289
<font color="#E5E5E5">simplest possible I'm just gonna change</font>

176
00:07:28,680 --> 00:07:33,539
<font color="#E5E5E5">this to some other random number whoops</font>

177
00:07:31,289 --> 00:07:35,190
that's a bit much yeah whatever<font color="#CCCCCC"> it</font>

178
00:07:33,539 --> 00:07:41,310
doesn't matter<font color="#E5E5E5"> the point is I'm gonna</font>

179
00:07:35,190 --> 00:07:44,160
add some<font color="#E5E5E5"> noise and you will see it yeah</font>

180
00:07:41,310 --> 00:07:46,710
I<font color="#E5E5E5"> mean I kind of gave</font><font color="#CCCCCC"> it a sim no one</font>

181
00:07:44,160 --> 00:07:48,539
else would expect that<font color="#E5E5E5"> if you let me</font>

182
00:07:46,710 --> 00:07:51,900
just stop that for<font color="#E5E5E5"> a sec</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then</font>

183
00:07:48,539 --> 00:07:54,750
<font color="#CCCCCC">Superman so I have</font><font color="#E5E5E5"> like plus one minus</font>

184
00:07:51,900 --> 00:07:59,159
<font color="#CCCCCC">one symbols but</font><font color="#E5E5E5"> I've added so much noise</font>

185
00:07:54,750 --> 00:08:00,630
<font color="#CCCCCC">that it</font><font color="#E5E5E5"> looks like this and then like a</font>

186
00:07:59,160 --> 00:08:05,370
whole<font color="#E5E5E5"> bunch of these bits come out wrong</font>

187
00:08:00,630 --> 00:08:07,020
okay so um<font color="#E5E5E5"> now I fetched the the the</font>

188
00:08:05,370 --> 00:08:08,550
noise amplitude just now so I don't

189
00:08:07,020 --> 00:08:10,740
<font color="#CCCCCC">actually have</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> SNR that I mentioned</font>

190
00:08:08,550 --> 00:08:14,669
earlier<font color="#CCCCCC"> but if I had the SN</font><font color="#E5E5E5"> I would it</font>

191
00:08:10,740 --> 00:08:16,620
would still be<font color="#E5E5E5"> like that so if</font><font color="#CCCCCC"> Chanin</font>

192
00:08:14,669 --> 00:08:19,320
says well I<font color="#E5E5E5"> can transmit like</font><font color="#CCCCCC"> a whole</font>

193
00:08:16,620 --> 00:08:20,940
bunch<font color="#CCCCCC"> of bits</font><font color="#E5E5E5"> like three</font><font color="#CCCCCC"> mega bits like</font>

194
00:08:19,320 --> 00:08:22,770
without<font color="#E5E5E5"> error</font><font color="#CCCCCC"> and I'm transmitting</font><font color="#E5E5E5"> one</font>

195
00:08:20,940 --> 00:08:22,979
megabit<font color="#E5E5E5"> with errors like what am I</font><font color="#CCCCCC"> doing</font>

196
00:08:22,770 --> 00:08:26,250
wrong

197
00:08:22,979 --> 00:08:27,630
and the answer is well my guess my

198
00:08:26,250 --> 00:08:29,250
transceiver<font color="#E5E5E5"> is not sufficiently</font>

199
00:08:27,630 --> 00:08:31,199
complicated because<font color="#E5E5E5"> that's the beauty of</font>

200
00:08:29,250 --> 00:08:33,539
the original paper by Shannon he says<font color="#E5E5E5"> a</font>

201
00:08:31,199 --> 00:08:35,789
sufficiently complicated encoding system

202
00:08:33,539 --> 00:08:38,390
will achieve<font color="#CCCCCC"> that now you go find out</font>

203
00:08:35,789 --> 00:08:41,279
<font color="#E5E5E5">that what that encoding system my time</font>

204
00:08:38,390 --> 00:08:44,279
now if you look at<font color="#E5E5E5"> this</font><font color="#CCCCCC"> set up</font><font color="#E5E5E5"> that I</font>

205
00:08:41,279 --> 00:08:47,100
used like I'm transmitting plus one

206
00:08:44,279 --> 00:08:48,390
minus<font color="#CCCCCC"> one bits but I add noise</font><font color="#E5E5E5"> so I</font>

207
00:08:47,100 --> 00:08:51,570
actually get<font color="#E5E5E5"> this probability</font>

208
00:08:48,390 --> 00:08:53,520
<font color="#E5E5E5">distribution of</font><font color="#CCCCCC"> receive symbols</font><font color="#E5E5E5"> and as</font>

209
00:08:51,570 --> 00:08:55,920
soon as<font color="#E5E5E5"> they sort of move over here</font><font color="#CCCCCC"> I</font>

210
00:08:53,520 --> 00:08:58,050
will<font color="#CCCCCC"> interpret the plus</font><font color="#E5E5E5"> one symbol</font><font color="#CCCCCC"> as</font>

211
00:08:55,920 --> 00:08:59,939
minus one<font color="#E5E5E5"> symbol which is</font><font color="#CCCCCC"> a bit error</font>

212
00:08:58,050 --> 00:09:02,579
this<font color="#CCCCCC"> here</font><font color="#E5E5E5"> is something</font><font color="#CCCCCC"> I can actually</font>

213
00:08:59,940 --> 00:09:05,190
trivially calculate for simple schemes

214
00:09:02,580 --> 00:09:06,690
like mine using like<font color="#E5E5E5"> the arrow function</font>

215
00:09:05,190 --> 00:09:09,180
like the<font color="#E5E5E5"> Gaussian area</font><font color="#CCCCCC"> arrow function so</font>

216
00:09:06,690 --> 00:09:11,640
I can<font color="#CCCCCC"> actually predict accurately</font><font color="#E5E5E5"> my bit</font>

217
00:09:09,180 --> 00:09:13,439
error rate but that<font color="#E5E5E5"> doesn't help me</font>

218
00:09:11,640 --> 00:09:17,819
<font color="#CCCCCC">because I wanted to transmit without any</font>

219
00:09:13,440 --> 00:09:21,390
bit errors<font color="#CCCCCC"> and that's where we need for</font>

220
00:09:17,820 --> 00:09:22,800
<font color="#CCCCCC">it error correction</font><font color="#E5E5E5"> and what forward</font>

221
00:09:21,390 --> 00:09:25,980
error correction does in a nutshell is

222
00:09:22,800 --> 00:09:27,510
it adds redundancy<font color="#E5E5E5"> now this is where</font>

223
00:09:25,980 --> 00:09:29,730
like the<font color="#E5E5E5"> next few slides is where I skip</font>

224
00:09:27,510 --> 00:09:31,620
<font color="#E5E5E5">over two</font><font color="#CCCCCC"> semesters of classes in one</font>

225
00:09:29,730 --> 00:09:35,279
<font color="#CCCCCC">minute so there's no way I can</font><font color="#E5E5E5"> actually</font>

226
00:09:31,620 --> 00:09:38,160
<font color="#E5E5E5">sort of relay the the full information</font>

227
00:09:35,279 --> 00:09:39,839
<font color="#E5E5E5">on there but consider this case here I</font>

228
00:09:38,160 --> 00:09:42,270
want to<font color="#E5E5E5"> transmit</font><font color="#CCCCCC"> four bits one one zero</font>

229
00:09:39,839 --> 00:09:44,279
<font color="#CCCCCC">one</font><font color="#E5E5E5"> and you might say okay well I'm</font>

230
00:09:42,270 --> 00:09:47,579
<font color="#E5E5E5">going to just put them on to plus minus</font>

231
00:09:44,279 --> 00:09:50,279
<font color="#CCCCCC">one</font><font color="#E5E5E5"> symbol so I can you know this could</font>

232
00:09:47,580 --> 00:09:52,260
<font color="#CCCCCC">be</font><font color="#E5E5E5"> on a wire or this could be</font>

233
00:09:50,279 --> 00:09:55,860
over-the-air<font color="#CCCCCC"> through some other kind</font><font color="#E5E5E5"> of</font>

234
00:09:52,260 --> 00:09:58,020
modulation so here's my bits 1 1 0 1 4

235
00:09:55,860 --> 00:09:59,459
bits but like who says that I have<font color="#CCCCCC"> to do</font>

236
00:09:58,020 --> 00:10:02,040
<font color="#E5E5E5">that like no one like I can do whatever</font>

237
00:09:59,459 --> 00:10:05,640
<font color="#E5E5E5">I want as long as my receiver knows how</font>

238
00:10:02,040 --> 00:10:08,670
I like<font color="#CCCCCC"> put this</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> some physically</font>

239
00:10:05,640 --> 00:10:13,829
physically<font color="#CCCCCC"> presentin I could do this</font><font color="#E5E5E5"> 1 0</font>

240
00:10:08,670 --> 00:10:14,219
1 0<font color="#CCCCCC"> 1 0 1 0 1 and you'd say well wait a</font>

241
00:10:13,829 --> 00:10:15,599
minute

242
00:10:14,220 --> 00:10:17,370
that makes no sense like this bit

243
00:10:15,600 --> 00:10:20,459
sequence is not in<font color="#E5E5E5"> in</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this bit</font>

244
00:10:17,370 --> 00:10:22,500
sequence<font color="#E5E5E5"> and I said so what like I'm</font>

245
00:10:20,459 --> 00:10:25,050
making<font color="#E5E5E5"> up my</font><font color="#CCCCCC"> encoder here so like as</font>

246
00:10:22,500 --> 00:10:31,950
long as<font color="#E5E5E5"> my receiver knows that 1</font><font color="#CCCCCC"> 0 1</font><font color="#E5E5E5"> 0</font><font color="#CCCCCC"> 1</font>

247
00:10:25,050 --> 00:10:34,680
<font color="#E5E5E5">0</font><font color="#CCCCCC"> 1 0 equals 1 0 1 1 0 1</font><font color="#E5E5E5"> I'm done</font><font color="#CCCCCC"> and</font>

248
00:10:31,950 --> 00:10:37,140
you say<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> well fine so what do we have</font>

249
00:10:34,680 --> 00:10:39,180
here<font color="#E5E5E5"> first</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> all like I said</font><font color="#CCCCCC"> we don't</font>

250
00:10:37,140 --> 00:10:40,949
have<font color="#CCCCCC"> the original bits in</font><font color="#E5E5E5"> this code word</font>

251
00:10:39,180 --> 00:10:42,540
which<font color="#E5E5E5"> is not necessary</font><font color="#CCCCCC"> like a lot of</font>

252
00:10:40,950 --> 00:10:44,610
forward<font color="#E5E5E5"> error correction codes actually</font>

253
00:10:42,540 --> 00:10:46,649
do keep the original bits but it's not a

254
00:10:44,610 --> 00:10:52,350
requirement<font color="#E5E5E5"> but</font><font color="#CCCCCC"> what's more interesting</font>

255
00:10:46,649 --> 00:10:53,640
is<font color="#E5E5E5"> that I have more bits now and I have</font>

256
00:10:52,350 --> 00:10:55,680
to<font color="#E5E5E5"> transfer them in the same amount of</font>

257
00:10:53,640 --> 00:10:58,319
time if I<font color="#E5E5E5"> want to sort of like not</font>

258
00:10:55,680 --> 00:11:01,500
change my actual<font color="#E5E5E5"> setup which which has</font>

259
00:10:58,320 --> 00:11:04,079
some<font color="#CCCCCC"> interesting implications</font><font color="#E5E5E5"> because if</font>

260
00:11:01,500 --> 00:11:06,870
I<font color="#E5E5E5"> just transmit these slower than I</font>

261
00:11:04,079 --> 00:11:08,250
might also you know keep the original<font color="#CCCCCC"> 1</font>

262
00:11:06,870 --> 00:11:09,810
<font color="#E5E5E5">transmitted that a bit slower which</font>

263
00:11:08,250 --> 00:11:11,579
means I have a<font color="#E5E5E5"> little bit more power and</font>

264
00:11:09,810 --> 00:11:11,910
<font color="#E5E5E5">that will also increase my bit error</font>

265
00:11:11,579 --> 00:11:14,280
rate

266
00:11:11,910 --> 00:11:15,660
so<font color="#CCCCCC"> net</font><font color="#E5E5E5"> this is where it gets really</font>

267
00:11:14,280 --> 00:11:17,520
really<font color="#CCCCCC"> difficult and this</font><font color="#E5E5E5"> is where I'm</font>

268
00:11:15,660 --> 00:11:19,290
<font color="#CCCCCC">just gonna</font><font color="#E5E5E5"> have to jump</font><font color="#CCCCCC"> over it</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> say</font>

269
00:11:17,520 --> 00:11:21,720
you have<font color="#E5E5E5"> to become up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> this</font>

270
00:11:19,290 --> 00:11:24,689
<font color="#CCCCCC">listen</font><font color="#E5E5E5"> coding such that sending more</font>

271
00:11:21,720 --> 00:11:26,310
bits<font color="#E5E5E5"> in the same amount of time which</font>

272
00:11:24,690 --> 00:11:29,610
increases the bit error rate of<font color="#CCCCCC"> the</font>

273
00:11:26,310 --> 00:11:33,650
<font color="#CCCCCC">individual symbol is still better</font><font color="#E5E5E5"> than</font>

274
00:11:29,610 --> 00:11:36,660
doing<font color="#CCCCCC"> this</font><font color="#E5E5E5"> and that's what people have</font>

275
00:11:33,650 --> 00:11:39,689
you<font color="#CCCCCC"> know many PhD theses have been</font>

276
00:11:36,660 --> 00:11:41,610
written on<font color="#E5E5E5"> this</font><font color="#CCCCCC"> topic</font><font color="#E5E5E5"> there's a couple</font>

277
00:11:39,690 --> 00:11:43,140
<font color="#E5E5E5">of words that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> were I just want to</font>

278
00:11:41,610 --> 00:11:45,180
say the words<font color="#E5E5E5"> out loud you've heard them</font>

279
00:11:43,140 --> 00:11:46,560
once if you<font color="#CCCCCC"> know forward</font><font color="#E5E5E5"> error</font>

280
00:11:45,180 --> 00:11:49,079
correction and this make<font color="#E5E5E5"> sense otherwise</font>

281
00:11:46,560 --> 00:11:50,729
<font color="#E5E5E5">just keep this sort</font><font color="#CCCCCC"> of like basically</font>

282
00:11:49,080 --> 00:11:51,660
<font color="#E5E5E5">say I okay I heard it in Martin Salk I</font>

283
00:11:50,730 --> 00:11:53,940
don't know what it means<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it doesn't</font>

284
00:11:51,660 --> 00:11:57,270
<font color="#E5E5E5">matter so we talked</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> a systematic</font>

285
00:11:53,940 --> 00:12:02,460
code if the<font color="#E5E5E5"> uncoded data is included</font><font color="#CCCCCC"> in</font>

286
00:11:57,270 --> 00:12:04,230
the encoding encoding increases latency

287
00:12:02,460 --> 00:12:08,760
<font color="#CCCCCC">yeah it's a</font><font color="#E5E5E5"> problem we have to deal with</font>

288
00:12:04,230 --> 00:12:10,830
<font color="#E5E5E5">it somehow</font><font color="#CCCCCC"> we can we can</font><font color="#E5E5E5"> have multiple</font>

289
00:12:08,760 --> 00:12:12,600
codes and we can combine<font color="#E5E5E5"> them</font><font color="#CCCCCC"> and then</font>

290
00:12:10,830 --> 00:12:15,510
we that<font color="#E5E5E5"> we could typically you know we</font>

291
00:12:12,600 --> 00:12:17,670
call our concatenation we like I<font color="#E5E5E5"> said</font>

292
00:12:15,510 --> 00:12:21,270
earlier you<font color="#CCCCCC"> have to have a code</font><font color="#E5E5E5"> that is</font>

293
00:12:17,670 --> 00:12:23,400
<font color="#E5E5E5">better with more shorter bits than the</font>

294
00:12:21,270 --> 00:12:24,900
other than the uncoated one and if it is

295
00:12:23,400 --> 00:12:28,199
better than we we say we have a<font color="#E5E5E5"> coding</font>

296
00:12:24,900 --> 00:12:29,579
gain and this<font color="#E5E5E5"> is really this is also a</font>

297
00:12:28,200 --> 00:12:31,080
concept that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> two or three</font>

298
00:12:29,580 --> 00:12:33,270
slides and I think you'd get it but I'm

299
00:12:31,080 --> 00:12:35,670
just<font color="#E5E5E5"> gonna skip</font><font color="#CCCCCC"> over that puncturing is</font>

300
00:12:33,270 --> 00:12:37,860
an<font color="#E5E5E5"> interesting feature that</font><font color="#CCCCCC"> we can</font>

301
00:12:35,670 --> 00:12:41,670
employ<font color="#E5E5E5"> you know when we add redundancy</font>

302
00:12:37,860 --> 00:12:43,530
we send more bits so but I can just I

303
00:12:41,670 --> 00:12:45,900
can<font color="#E5E5E5"> just also leave</font><font color="#CCCCCC"> some of those bits</font>

304
00:12:43,530 --> 00:12:48,030
<font color="#E5E5E5">out again so we first add bits we take</font>

305
00:12:45,900 --> 00:12:50,010
out other bids<font color="#E5E5E5"> what does that make sense</font>

306
00:12:48,030 --> 00:12:53,819
<font color="#CCCCCC">yes it does make sense because</font><font color="#E5E5E5"> it allows</font>

307
00:12:50,010 --> 00:12:55,950
us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change the the rate at which we</font>

308
00:12:53,820 --> 00:12:58,950
encode<font color="#E5E5E5"> just like I said this is just</font><font color="#CCCCCC"> a</font>

309
00:12:55,950 --> 00:12:59,930
word that<font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> you to have heard I'm</font>

310
00:12:58,950 --> 00:13:03,810
just<font color="#E5E5E5"> gonna give you a couple of examples</font>

311
00:12:59,930 --> 00:13:06,300
<font color="#CCCCCC">so how like like you would think like</font>

312
00:13:03,810 --> 00:13:07,680
<font color="#E5E5E5">someone can figure figure out the way</font><font color="#CCCCCC"> to</font>

313
00:13:06,300 --> 00:13:10,319
do forward error correction but that is

314
00:13:07,680 --> 00:13:13,680
not<font color="#E5E5E5"> correct because all applications are</font>

315
00:13:10,320 --> 00:13:15,420
different<font color="#E5E5E5"> consider a satellite talking</font>

316
00:13:13,680 --> 00:13:17,069
to a ground<font color="#CCCCCC"> station like there</font><font color="#E5E5E5"> is</font>

317
00:13:15,420 --> 00:13:18,479
<font color="#E5E5E5">nothing between the satellite and the</font>

318
00:13:17,070 --> 00:13:21,510
ground station<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a point-to-point</font>

319
00:13:18,480 --> 00:13:23,680
link<font color="#E5E5E5"> like I mean sure maybe like a plane</font>

320
00:13:21,510 --> 00:13:26,710
or something<font color="#E5E5E5"> will fly through</font><font color="#CCCCCC"> the</font>

321
00:13:23,680 --> 00:13:28,420
briefly but it's not a big deal<font color="#CCCCCC"> the</font><font color="#E5E5E5"> only</font>

322
00:13:26,710 --> 00:13:30,460
thing that matters is that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> satellite</font>

323
00:13:28,420 --> 00:13:32,229
is<font color="#CCCCCC"> moving around</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit like</font>

324
00:13:30,460 --> 00:13:34,180
relative<font color="#E5E5E5"> if it's like a</font><font color="#CCCCCC"> Geo satellite</font>

325
00:13:32,230 --> 00:13:35,670
<font color="#E5E5E5">for example if it's like any other</font>

326
00:13:34,180 --> 00:13:37,930
satellite<font color="#E5E5E5"> it will move around</font><font color="#CCCCCC"> a lot</font>

327
00:13:35,670 --> 00:13:40,500
<font color="#CCCCCC">which means</font><font color="#E5E5E5"> like the distance here</font>

328
00:13:37,930 --> 00:13:43,180
changes so we have changes<font color="#E5E5E5"> in</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> SNR</font>

329
00:13:40,500 --> 00:13:44,280
<font color="#CCCCCC">but they are usually predictable so if</font>

330
00:13:43,180 --> 00:13:46,390
we want<font color="#CCCCCC"> to have a code</font>

331
00:13:44,280 --> 00:13:48,880
<font color="#E5E5E5">for this kind of link it'll be different</font>

332
00:13:46,390 --> 00:13:51,160
<font color="#E5E5E5">than what</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> CD player does so if you</font>

333
00:13:48,880 --> 00:13:53,470
consider a CD player<font color="#E5E5E5"> like you have a</font>

334
00:13:51,160 --> 00:13:55,240
scratch on<font color="#E5E5E5"> a CD</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> means like all of</font>

335
00:13:53,470 --> 00:13:57,280
these bits are fine<font color="#E5E5E5"> and then like poof</font>

336
00:13:55,240 --> 00:13:59,320
like a whole<font color="#E5E5E5"> bunch of bits are gone and</font>

337
00:13:57,280 --> 00:14:01,240
then<font color="#E5E5E5"> you continue here with like good</font>

338
00:13:59,320 --> 00:14:02,380
bits<font color="#E5E5E5"> like this is of a</font><font color="#CCCCCC"> different kind</font><font color="#E5E5E5"> of</font>

339
00:14:01,240 --> 00:14:06,070
error<font color="#CCCCCC"> that you obviously need a</font>

340
00:14:02,380 --> 00:14:07,900
different kind<font color="#E5E5E5"> of code to work out and</font>

341
00:14:06,070 --> 00:14:09,490
<font color="#E5E5E5">then mobile phones have like the worst</font>

342
00:14:07,900 --> 00:14:11,170
constraints of all like literally

343
00:14:09,490 --> 00:14:12,940
everything medicine<font color="#E5E5E5"> a mobile phone you</font>

344
00:14:11,170 --> 00:14:14,740
have<font color="#CCCCCC"> Batterson are typically you have</font>

345
00:14:12,940 --> 00:14:17,080
Doppler<font color="#E5E5E5"> shift you have all kinds of like</font>

346
00:14:14,740 --> 00:14:18,610
channels<font color="#CCCCCC"> that look</font><font color="#E5E5E5"> like this but also</font>

347
00:14:17,080 --> 00:14:20,050
people want to watch huge hoop

348
00:14:18,610 --> 00:14:21,370
immediately and they want to<font color="#E5E5E5"> be on the</font>

349
00:14:20,050 --> 00:14:23,229
phone so they have to do everything

350
00:14:21,370 --> 00:14:26,680
quickly<font color="#E5E5E5"> so this is where it gets really</font>

351
00:14:23,230 --> 00:14:28,210
interesting and<font color="#E5E5E5"> these are just a couple</font>

352
00:14:26,680 --> 00:14:31,660
<font color="#CCCCCC">of other</font><font color="#E5E5E5"> names of codes that you should</font>

353
00:14:28,210 --> 00:14:33,790
have<font color="#E5E5E5"> heard before so if you if you go to</font>

354
00:14:31,660 --> 00:14:35,290
<font color="#E5E5E5">school and learn about codes often they</font>

355
00:14:33,790 --> 00:14:37,719
like the first code they<font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> a</font>

356
00:14:35,290 --> 00:14:40,199
<font color="#E5E5E5">hemming codes they're not really that</font>

357
00:14:37,720 --> 00:14:42,490
<font color="#E5E5E5">relevant in in mobile communications and</font>

358
00:14:40,200 --> 00:14:45,160
convolutional codes which are used a<font color="#E5E5E5"> lot</font>

359
00:14:42,490 --> 00:14:47,230
like Wi-Fi for example<font color="#CCCCCC"> turbo codes and</font>

360
00:14:45,160 --> 00:14:48,939
polar codes are just names<font color="#E5E5E5"> of codes that</font>

361
00:14:47,230 --> 00:14:51,000
<font color="#CCCCCC">I used in</font><font color="#E5E5E5"> wireless communications and</font>

362
00:14:48,940 --> 00:14:53,170
<font color="#E5E5E5">then it's a whole</font><font color="#CCCCCC"> bunch of other codes</font>

363
00:14:51,000 --> 00:14:55,120
<font color="#CCCCCC">you can see like people have thought</font>

364
00:14:53,170 --> 00:14:57,910
<font color="#CCCCCC">about this a lot</font><font color="#E5E5E5"> all right what's my</font>

365
00:14:55,120 --> 00:14:59,350
<font color="#E5E5E5">time okay</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> was this was basically</font>

366
00:14:57,910 --> 00:15:01,959
the<font color="#E5E5E5"> theory thank you</font>

367
00:14:59,350 --> 00:15:05,920
this was<font color="#E5E5E5"> the theory except I left out</font>

368
00:15:01,960 --> 00:15:08,740
all the theory<font color="#CCCCCC"> but we have most of</font><font color="#E5E5E5"> this</font>

369
00:15:05,920 --> 00:15:10,660
angular radio in a modular<font color="#E5E5E5"> fashion which</font>

370
00:15:08,740 --> 00:15:12,970
<font color="#CCCCCC">is useful</font><font color="#E5E5E5"> because you don't actually</font>

371
00:15:10,660 --> 00:15:15,579
<font color="#E5E5E5">have</font><font color="#CCCCCC"> to understand all of</font><font color="#E5E5E5"> the theory and</font>

372
00:15:12,970 --> 00:15:17,350
trust me most people<font color="#CCCCCC"> who do work in</font>

373
00:15:15,580 --> 00:15:19,180
<font color="#E5E5E5">wireless communications don't understand</font>

374
00:15:17,350 --> 00:15:21,400
all of<font color="#E5E5E5"> the theory not because they're</font>

375
00:15:19,180 --> 00:15:22,479
lazy it's just a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff to put</font>

376
00:15:21,400 --> 00:15:23,500
<font color="#E5E5E5">inside your head</font><font color="#CCCCCC"> and if you're building</font>

377
00:15:22,480 --> 00:15:25,690
<font color="#E5E5E5">like a point-to-point wireless</font>

378
00:15:23,500 --> 00:15:27,400
communication link<font color="#E5E5E5"> like you have so many</font>

379
00:15:25,690 --> 00:15:30,390
things<font color="#CCCCCC"> to worry about</font><font color="#E5E5E5"> like understanding</font>

380
00:15:27,400 --> 00:15:33,370
every little nuance of the equations of

381
00:15:30,390 --> 00:15:37,189
forward error correction is is a lot to

382
00:15:33,370 --> 00:15:39,139
ask<font color="#CCCCCC"> so that is also true</font><font color="#E5E5E5"> for equalized</font>

383
00:15:37,190 --> 00:15:41,420
<font color="#CCCCCC">synchronises etc which we all have</font><font color="#E5E5E5"> in</font>

384
00:15:39,139 --> 00:15:45,319
<font color="#CCCCCC">Ghana radio so gia</font><font color="#E5E5E5"> if you see it fits</font>

385
00:15:41,420 --> 00:15:47,120
well into<font color="#CCCCCC"> that category</font><font color="#E5E5E5"> okay so you</font>

386
00:15:45,319 --> 00:15:49,009
<font color="#E5E5E5">built in radio you make sure</font><font color="#CCCCCC"> the gif you</font>

387
00:15:47,120 --> 00:15:54,589
see is enabled<font color="#CCCCCC"> there's usually no reason</font>

388
00:15:49,009 --> 00:15:57,589
to disable<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and and then</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have FEC</font>

389
00:15:54,589 --> 00:15:59,060
blocks available<font color="#CCCCCC"> and it also has a bunch</font>

390
00:15:57,589 --> 00:16:00,800
<font color="#E5E5E5">of examples</font><font color="#CCCCCC"> and I will show some of</font>

391
00:15:59,060 --> 00:16:03,290
those<font color="#E5E5E5"> so the first example that I'm</font>

392
00:16:00,800 --> 00:16:05,420
going<font color="#CCCCCC"> to show</font><font color="#E5E5E5"> you is called FEC api</font>

393
00:16:03,290 --> 00:16:08,420
<font color="#E5E5E5">decoders of GRC</font><font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> actually part</font>

394
00:16:05,420 --> 00:16:10,040
of the source for you<font color="#E5E5E5"> hi this is</font>

395
00:16:08,420 --> 00:16:12,889
<font color="#E5E5E5">squashed up a little bit unfortunately</font>

396
00:16:10,040 --> 00:16:15,889
even<font color="#E5E5E5"> on the newer HD screens we don't</font>

397
00:16:12,889 --> 00:16:20,149
have that much space available<font color="#E5E5E5"> I'll try</font>

398
00:16:15,889 --> 00:16:22,730
and I'll try and untangle it a little

399
00:16:20,149 --> 00:16:25,250
bit<font color="#E5E5E5"> so what do we do here this is</font>

400
00:16:22,730 --> 00:16:26,720
effectively the<font color="#CCCCCC"> same example that I</font>

401
00:16:25,250 --> 00:16:29,029
showed<font color="#CCCCCC"> you</font><font color="#E5E5E5"> earlier</font><font color="#CCCCCC"> except we</font><font color="#E5E5E5"> don't have</font>

402
00:16:26,720 --> 00:16:31,399
any noise anymore<font color="#CCCCCC"> and what we do is we</font>

403
00:16:29,029 --> 00:16:34,040
generate bits in this block and then we

404
00:16:31,399 --> 00:16:35,449
send them<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the receiver on</font><font color="#CCCCCC"> four</font>

405
00:16:34,040 --> 00:16:39,040
different paths<font color="#E5E5E5"> and like I said</font><font color="#CCCCCC"> this is</font>

406
00:16:35,449 --> 00:16:42,920
just<font color="#E5E5E5"> an example this is</font><font color="#CCCCCC"> not actually a</font>

407
00:16:39,040 --> 00:16:45,620
like a useful<font color="#CCCCCC"> communication link</font><font color="#E5E5E5"> so we</font>

408
00:16:42,920 --> 00:16:48,199
take bits we<font color="#E5E5E5"> encode them we turn them</font>

409
00:16:45,620 --> 00:16:49,880
into<font color="#CCCCCC"> BPSK symbols like</font><font color="#E5E5E5"> this was the plus</font>

410
00:16:48,199 --> 00:16:55,008
one minus one<font color="#E5E5E5"> representations of our</font>

411
00:16:49,880 --> 00:16:56,750
bits<font color="#CCCCCC"> and then we decode those and then</font>

412
00:16:55,009 --> 00:17:02,839
we<font color="#E5E5E5"> just look at the the result and we</font>

413
00:16:56,750 --> 00:17:04,699
have three different<font color="#CCCCCC"> codes</font><font color="#E5E5E5"> here so and</font>

414
00:17:02,839 --> 00:17:06,049
you will notice<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the block is</font><font color="#CCCCCC"> always</font>

415
00:17:04,699 --> 00:17:07,850
the same even though we have different

416
00:17:06,049 --> 00:17:10,629
<font color="#E5E5E5">different codes</font><font color="#CCCCCC"> so let me just</font><font color="#E5E5E5"> run</font><font color="#CCCCCC"> this</font>

417
00:17:07,849 --> 00:17:14,119
<font color="#E5E5E5">real quick it's not the most</font>

418
00:17:10,630 --> 00:17:16,579
enlightening<font color="#CCCCCC"> like visualization here but</font>

419
00:17:14,119 --> 00:17:18,739
it is just<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> that things</font><font color="#E5E5E5"> are</font>

420
00:17:16,579 --> 00:17:21,918
obviously<font color="#CCCCCC"> working out so the ran</font><font color="#E5E5E5"> oopsie</font>

421
00:17:18,740 --> 00:17:23,750
sorry<font color="#E5E5E5"> about that the the random bits</font>

422
00:17:21,919 --> 00:17:25,520
that<font color="#E5E5E5"> I'm generating are coming out</font>

423
00:17:23,750 --> 00:17:28,580
identically in<font color="#E5E5E5"> all four cases you can</font>

424
00:17:25,520 --> 00:17:30,408
<font color="#E5E5E5">see I have my my</font><font color="#CCCCCC"> uncoated</font><font color="#E5E5E5"> bits and they</font>

425
00:17:28,580 --> 00:17:32,120
have<font color="#E5E5E5"> a thing called a dummy encoder</font><font color="#CCCCCC"> a</font>

426
00:17:30,409 --> 00:17:35,750
repetition encoder and a convolutional

427
00:17:32,120 --> 00:17:37,280
encoder<font color="#E5E5E5"> and it's maybe not obvious but</font>

428
00:17:35,750 --> 00:17:39,049
basically this<font color="#E5E5E5"> is just like a</font>

429
00:17:37,280 --> 00:17:40,668
representation of the bits<font color="#E5E5E5"> and they're</font>

430
00:17:39,049 --> 00:17:42,889
all the same so<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> why you can only</font>

431
00:17:40,669 --> 00:17:44,750
see<font color="#E5E5E5"> one line here which</font><font color="#CCCCCC"> is black which</font>

432
00:17:42,890 --> 00:17:48,230
means<font color="#E5E5E5"> our encoding decoding is doing</font>

433
00:17:44,750 --> 00:17:49,610
something<font color="#E5E5E5"> correctly but the key concept</font>

434
00:17:48,230 --> 00:17:50,920
that<font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to show you this</font><font color="#CCCCCC"> example</font>

435
00:17:49,610 --> 00:17:52,959
is not<font color="#E5E5E5"> like</font>

436
00:17:50,920 --> 00:17:55,600
the<font color="#CCCCCC"> visualization rather it's like how</font>

437
00:17:52,960 --> 00:17:57,640
the encoders are<font color="#E5E5E5"> set up so like I said</font>

438
00:17:55,600 --> 00:17:59,590
<font color="#E5E5E5">we have bits generated here and they go</font>

439
00:17:57,640 --> 00:18:02,350
into this block called the FEC extended

440
00:17:59,590 --> 00:18:04,179
encoder<font color="#E5E5E5"> if you look at its parameters it</font>

441
00:18:02,350 --> 00:18:09,909
has this thing<font color="#CCCCCC"> called an encoder object</font>

442
00:18:04,180 --> 00:18:12,670
here<font color="#CCCCCC"> and if I scroll down a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> I</font>

443
00:18:09,910 --> 00:18:15,340
have<font color="#CCCCCC"> different</font><font color="#E5E5E5"> encoder definitions so I</font>

444
00:18:12,670 --> 00:18:16,960
have a CC<font color="#E5E5E5"> SDS encoder dummy encoder I'll</font>

445
00:18:15,340 --> 00:18:20,770
talk about<font color="#E5E5E5"> that in a sec and a</font>

446
00:18:16,960 --> 00:18:22,540
repetition encoder and all the<font color="#CCCCCC"> code</font>

447
00:18:20,770 --> 00:18:25,360
specific details are hidden away in<font color="#E5E5E5"> that</font>

448
00:18:22,540 --> 00:18:27,010
block<font color="#E5E5E5"> so I'll open this for a sec and</font>

449
00:18:25,360 --> 00:18:28,899
<font color="#CCCCCC">I'll you'll see there's like a frame</font>

450
00:18:27,010 --> 00:18:30,280
size a streaming<font color="#CCCCCC"> behavior</font><font color="#E5E5E5"> these are all</font>

451
00:18:28,900 --> 00:18:35,440
<font color="#CCCCCC">parameters that</font><font color="#E5E5E5"> other codes don't</font>

452
00:18:30,280 --> 00:18:38,970
necessarily have and then there's<font color="#E5E5E5"> a like</font>

453
00:18:35,440 --> 00:18:41,110
there's an equivalent<font color="#E5E5E5"> decoder object</font>

454
00:18:38,970 --> 00:18:44,470
that has you know<font color="#E5E5E5"> a bunch of other</font>

455
00:18:41,110 --> 00:18:47,169
settings<font color="#CCCCCC"> but the thing</font><font color="#E5E5E5"> to keep in mind</font>

456
00:18:44,470 --> 00:18:49,360
<font color="#CCCCCC">is we have these guys here these are the</font>

457
00:18:47,170 --> 00:18:51,250
actual encoders<font color="#CCCCCC"> and</font><font color="#E5E5E5"> these are the blocks</font>

458
00:18:49,360 --> 00:18:57,669
that capture those encoders<font color="#CCCCCC"> and actually</font>

459
00:18:51,250 --> 00:18:59,440
run them so the distinction that<font color="#CCCCCC"> we make</font>

460
00:18:57,670 --> 00:19:00,700
here is blocks<font color="#E5E5E5"> versus kernels I need to</font>

461
00:18:59,440 --> 00:19:02,440
hurry<font color="#E5E5E5"> up a little</font><font color="#CCCCCC"> bit so yeah we have</font>

462
00:19:00,700 --> 00:19:04,870
this guy it's the block and then<font color="#CCCCCC"> you</font>

463
00:19:02,440 --> 00:19:07,540
<font color="#E5E5E5">pull in the encoder and this thing we</font>

464
00:19:04,870 --> 00:19:09,429
call<font color="#CCCCCC"> a kernel and these are exchangeable</font>

465
00:19:07,540 --> 00:19:10,570
and you can<font color="#E5E5E5"> reload your own and write</font>

466
00:19:09,430 --> 00:19:11,800
them very quickly<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't have to</font>

467
00:19:10,570 --> 00:19:13,300
worry about<font color="#CCCCCC"> Keene radios much which</font>

468
00:19:11,800 --> 00:19:16,930
<font color="#E5E5E5">makes it easy to integrate it with other</font>

469
00:19:13,300 --> 00:19:20,020
<font color="#CCCCCC">libraries and our sim D extensions so</font>

470
00:19:16,930 --> 00:19:21,910
there's three types of blocks actually

471
00:19:20,020 --> 00:19:23,950
<font color="#CCCCCC">there are</font><font color="#E5E5E5"> six types of blocks and every</font>

472
00:19:21,910 --> 00:19:26,560
block has<font color="#CCCCCC"> an extended and a non extended</font>

473
00:19:23,950 --> 00:19:28,000
version and the extended version for<font color="#E5E5E5"> all</font>

474
00:19:26,560 --> 00:19:29,800
like for<font color="#E5E5E5"> everyone who's starting is the</font>

475
00:19:28,000 --> 00:19:31,810
<font color="#CCCCCC">only</font><font color="#E5E5E5"> one that you need because it's the</font>

476
00:19:29,800 --> 00:19:33,790
one<font color="#E5E5E5"> that adds like a whole bunch of</font>

477
00:19:31,810 --> 00:19:35,830
sugar<font color="#E5E5E5"> and like adds like some</font><font color="#CCCCCC"> Python to</font>

478
00:19:33,790 --> 00:19:37,540
make it easier<font color="#CCCCCC"> to use and then really</font>

479
00:19:35,830 --> 00:19:39,010
<font color="#CCCCCC">you just have</font><font color="#E5E5E5"> to ask yourself</font><font color="#CCCCCC"> you</font>

480
00:19:37,540 --> 00:19:40,870
weren't like sort of this continuous

481
00:19:39,010 --> 00:19:43,180
streaming model<font color="#CCCCCC"> then use this guy I</font>

482
00:19:40,870 --> 00:19:45,639
using ASIC<font color="#CCCCCC"> messages then you use</font><font color="#E5E5E5"> this</font>

483
00:19:43,180 --> 00:19:49,180
guy<font color="#E5E5E5"> or I using</font><font color="#CCCCCC"> tag</font><font color="#E5E5E5"> screen blocks which</font>

484
00:19:45,640 --> 00:19:50,950
are streams with<font color="#CCCCCC"> boundaries then you use</font>

485
00:19:49,180 --> 00:19:57,160
this block<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you could pull in the</font>

486
00:19:50,950 --> 00:19:58,900
same kernel<font color="#E5E5E5"> in all cases</font><font color="#CCCCCC"> so as you can</font>

487
00:19:57,160 --> 00:20:01,450
<font color="#CCCCCC">tell by</font><font color="#E5E5E5"> the signatures here the purple</font>

488
00:19:58,900 --> 00:20:03,460
versus the orange the encoder<font color="#CCCCCC"> takes</font>

489
00:20:01,450 --> 00:20:04,750
actual<font color="#E5E5E5"> bits and outputs actual bits and</font>

490
00:20:03,460 --> 00:20:08,679
then you modulate

491
00:20:04,750 --> 00:20:10,830
whereas the<font color="#CCCCCC"> decoder takes soft bits so</font>

492
00:20:08,679 --> 00:20:16,799
this is a<font color="#CCCCCC"> floating-point</font><font color="#E5E5E5"> representation</font>

493
00:20:10,830 --> 00:20:20,199
of your bit that includes<font color="#E5E5E5"> uncertainty so</font>

494
00:20:16,799 --> 00:20:22,570
<font color="#E5E5E5">if you were so we differentiate between</font>

495
00:20:20,200 --> 00:20:23,950
soft and hard decision decoding<font color="#E5E5E5"> but like</font>

496
00:20:22,570 --> 00:20:26,289
no one does hard decision decoding them

497
00:20:23,950 --> 00:20:28,030
<font color="#E5E5E5">and in a soft decision decoder you don't</font>

498
00:20:26,289 --> 00:20:30,460
<font color="#E5E5E5">just give it a plus 1 or a minus 1 or a</font>

499
00:20:28,030 --> 00:20:35,320
1 or a<font color="#E5E5E5"> 0</font><font color="#CCCCCC"> rather you give it a spectrum</font>

500
00:20:30,460 --> 00:20:37,059
of values where the absolute<font color="#E5E5E5"> value sort</font>

501
00:20:35,320 --> 00:20:38,678
of determines<font color="#E5E5E5"> your certainty you can</font>

502
00:20:37,059 --> 00:20:40,990
also give it<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 0 which is neither a plus</font>

503
00:20:38,679 --> 00:20:42,250
1 or a minus 1 to<font color="#E5E5E5"> indicate that you</font><font color="#CCCCCC"> have</font>

504
00:20:40,990 --> 00:20:44,140
no<font color="#E5E5E5"> idea what the bid should have been</font>

505
00:20:42,250 --> 00:20:46,450
and then the decoder<font color="#E5E5E5"> can handle them</font><font color="#CCCCCC"> the</font>

506
00:20:44,140 --> 00:20:49,360
<font color="#CCCCCC">other options that are interesting are</font>

507
00:20:46,450 --> 00:20:50,919
the threading model<font color="#E5E5E5"> if you have lots of</font>

508
00:20:49,360 --> 00:20:53,189
stuff<font color="#CCCCCC"> going on</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> plenty of course</font>

509
00:20:50,919 --> 00:20:54,940
there<font color="#E5E5E5"> might be some process</font>

510
00:20:53,190 --> 00:20:57,250
<font color="#CCCCCC">optimizations that you</font><font color="#E5E5E5"> can get and</font>

511
00:20:54,940 --> 00:20:58,780
puncturing is handled by<font color="#CCCCCC"> the</font><font color="#E5E5E5"> blocks and</font>

512
00:20:57,250 --> 00:21:01,780
<font color="#CCCCCC">not by the kernels</font><font color="#E5E5E5"> because that's an</font>

513
00:20:58,780 --> 00:21:04,510
identical process the available kernels

514
00:21:01,780 --> 00:21:06,879
<font color="#CCCCCC">that we have</font><font color="#E5E5E5"> I mentioned these guys</font>

515
00:21:04,510 --> 00:21:10,179
polar and turbo codes<font color="#E5E5E5"> LDPC codes so</font>

516
00:21:06,880 --> 00:21:15,610
these<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> codes are important for wireless</font>

517
00:21:10,179 --> 00:21:20,320
communications so polar codes will<font color="#CCCCCC"> be in</font>

518
00:21:15,610 --> 00:21:23,168
<font color="#E5E5E5">5g new radio turbo codes and LDPC sorry</font>

519
00:21:20,320 --> 00:21:25,658
<font color="#E5E5E5">LDPC codes and polar</font><font color="#CCCCCC"> cosign 5g new radio</font>

520
00:21:23,169 --> 00:21:28,659
turbo codes are<font color="#E5E5E5"> used in LTE for example</font>

521
00:21:25,659 --> 00:21:31,120
convolutional codes in Wi-Fi and in<font color="#E5E5E5"> GSM</font>

522
00:21:28,659 --> 00:21:32,740
the dummy<font color="#E5E5E5"> encoder is actually not an</font>

523
00:21:31,120 --> 00:21:35,770
encoder it's more of a<font color="#E5E5E5"> debugging block</font>

524
00:21:32,740 --> 00:21:38,620
it doesn't<font color="#E5E5E5"> actually do anything</font><font color="#CCCCCC"> and the</font>

525
00:21:35,770 --> 00:21:40,900
repetition encoder is an encoder<font color="#CCCCCC"> that is</font>

526
00:21:38,620 --> 00:21:43,270
often comes up in like classes where you

527
00:21:40,900 --> 00:21:44,970
<font color="#E5E5E5">the</font><font color="#CCCCCC"> the what you do in a prepetition</font>

528
00:21:43,270 --> 00:21:46,658
<font color="#E5E5E5">code if you send the bit multiple times</font>

529
00:21:44,970 --> 00:21:50,190
<font color="#E5E5E5">turns out that's actually</font><font color="#CCCCCC"> not very</font>

530
00:21:46,659 --> 00:21:53,620
<font color="#CCCCCC">useful and</font><font color="#E5E5E5"> I'll show</font><font color="#CCCCCC"> you why</font><font color="#E5E5E5"> in a sec so</font>

531
00:21:50,190 --> 00:21:55,840
<font color="#E5E5E5">now my first example was very very brief</font>

532
00:21:53,620 --> 00:22:00,580
and there's another one<font color="#CCCCCC"> that I picked</font>

533
00:21:55,840 --> 00:22:05,110
<font color="#E5E5E5">out as a more useful example which is</font>

534
00:22:00,580 --> 00:22:08,939
<font color="#E5E5E5">the polar encoder so the polar encoder</font>

535
00:22:05,110 --> 00:22:11,320
once again has a comparison between what

536
00:22:08,940 --> 00:22:13,480
<font color="#CCCCCC">happens when you encode and when you</font>

537
00:22:11,320 --> 00:22:15,399
don't<font color="#E5E5E5"> encode so the</font><font color="#CCCCCC"> right-hand side is</font>

538
00:22:13,480 --> 00:22:17,590
what I showed<font color="#CCCCCC"> earlier it's the exact</font>

539
00:22:15,399 --> 00:22:18,219
<font color="#E5E5E5">same thing</font><font color="#CCCCCC"> I have like noise and bits</font>

540
00:22:17,590 --> 00:22:20,649
and I<font color="#CCCCCC"> don't</font>

541
00:22:18,220 --> 00:22:24,549
do anything<font color="#E5E5E5"> smart</font><font color="#CCCCCC"> and I end</font><font color="#E5E5E5"> up with bit</font>

542
00:22:20,650 --> 00:22:27,190
errors<font color="#E5E5E5"> 10 to the minus 3 so every every</font>

543
00:22:24,549 --> 00:22:30,340
<font color="#E5E5E5">thousandth bit is wrong whereas if I add</font>

544
00:22:27,190 --> 00:22:33,179
polar encoding and decoding<font color="#CCCCCC"> fine</font><font color="#E5E5E5"> why is</font>

545
00:22:30,340 --> 00:22:35,559
that<font color="#E5E5E5"> because Shannon says it's fine</font>

546
00:22:33,179 --> 00:22:37,570
<font color="#CCCCCC">within the parameters</font><font color="#E5E5E5"> that I said and</font>

547
00:22:35,559 --> 00:22:39,280
polar codes actually<font color="#CCCCCC"> achieves the</font>

548
00:22:37,570 --> 00:22:41,439
Shannon<font color="#E5E5E5"> rate at sufficiently long block</font>

549
00:22:39,280 --> 00:22:45,178
<font color="#CCCCCC">links</font><font color="#E5E5E5"> that means long latency but it</font>

550
00:22:41,440 --> 00:22:47,620
also<font color="#E5E5E5"> means no bit errors yes</font><font color="#CCCCCC"> ok</font>

551
00:22:45,179 --> 00:22:51,909
<font color="#CCCCCC">eventually even the polar codes give out</font>

552
00:22:47,620 --> 00:22:56,678
advice<font color="#CCCCCC"> you know I can I think</font><font color="#E5E5E5"> yeah there</font>

553
00:22:51,909 --> 00:22:57,880
we go<font color="#CCCCCC"> eventually they they also start</font>

554
00:22:56,679 --> 00:22:59,140
having bit errors and<font color="#E5E5E5"> that's because my</font>

555
00:22:57,880 --> 00:23:01,780
block lengths aren't actually<font color="#E5E5E5"> that long</font>

556
00:22:59,140 --> 00:23:04,120
<font color="#E5E5E5">and maybe I'm also leaving</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> Shannon</font>

557
00:23:01,780 --> 00:23:06,178
<font color="#E5E5E5">limit but</font><font color="#CCCCCC"> I have much more space</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> work</font>

558
00:23:04,120 --> 00:23:06,178
with

559
00:23:06,730 --> 00:23:10,750
yeah the<font color="#CCCCCC"> the flow</font><font color="#E5E5E5"> graph is pretty much</font>

560
00:23:09,100 --> 00:23:12,070
the same as<font color="#E5E5E5"> before so</font><font color="#CCCCCC"> I'm just gonna</font>

561
00:23:10,750 --> 00:23:14,590
hurry up because I'm running out<font color="#CCCCCC"> of time</font>

562
00:23:12,070 --> 00:23:17,379
here<font color="#CCCCCC"> the other thing that you can</font><font color="#E5E5E5"> do</font>

563
00:23:14,590 --> 00:23:18,820
with<font color="#CCCCCC"> keen</font><font color="#E5E5E5"> radio is BER simulations but</font>

564
00:23:17,380 --> 00:23:21,549
it's questionable<font color="#E5E5E5"> whether or not that is</font>

565
00:23:18,820 --> 00:23:22,899
actually the<font color="#E5E5E5"> right tool</font><font color="#CCCCCC"> to do that</font>

566
00:23:21,549 --> 00:23:25,240
the way you do<font color="#E5E5E5"> that it's a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

567
00:23:22,900 --> 00:23:27,760
<font color="#CCCCCC">different than you would in your typical</font>

568
00:23:25,240 --> 00:23:30,309
<font color="#E5E5E5">scripted application because what it'll</font>

569
00:23:27,760 --> 00:23:31,960
do is it'll run all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these in at once</font>

570
00:23:30,309 --> 00:23:33,370
<font color="#E5E5E5">and then sort of continuously update</font>

571
00:23:31,960 --> 00:23:35,799
this why is this useful

572
00:23:33,370 --> 00:23:38,168
<font color="#E5E5E5">well because you know radio is sort of</font><font color="#CCCCCC"> a</font>

573
00:23:35,799 --> 00:23:42,460
continuous streaming model<font color="#CCCCCC"> and you would</font>

574
00:23:38,169 --> 00:23:44,559
<font color="#CCCCCC">really</font><font color="#E5E5E5"> only use this to basically test</font>

575
00:23:42,460 --> 00:23:46,900
<font color="#E5E5E5">there the various encoders versus one</font>

576
00:23:44,559 --> 00:23:49,990
another now I also want<font color="#E5E5E5"> to caution</font>

577
00:23:46,900 --> 00:23:51,760
people<font color="#CCCCCC"> to interpret this</font><font color="#E5E5E5"> correctly I</font>

578
00:23:49,990 --> 00:23:53,049
thought this is<font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> if we have</font>

579
00:23:51,760 --> 00:23:56,710
it in<font color="#CCCCCC"> our tree because it's a</font><font color="#E5E5E5"> little bit</font>

580
00:23:53,049 --> 00:23:59,770
of a dangerous graph why is that the

581
00:23:56,710 --> 00:24:02,890
lowest bit error rate<font color="#E5E5E5"> is related to the</font>

582
00:23:59,770 --> 00:24:05,770
convolutional code<font color="#CCCCCC"> so LEP CNT pocos</font><font color="#E5E5E5"> that</font>

583
00:24:02,890 --> 00:24:06,970
<font color="#E5E5E5">worse</font><font color="#CCCCCC"> and also we have like this red</font>

584
00:24:05,770 --> 00:24:08,049
line<font color="#CCCCCC"> versus this blue line like this</font>

585
00:24:06,970 --> 00:24:10,150
kind<font color="#E5E5E5"> of doesn't make sense like</font>

586
00:24:08,049 --> 00:24:12,400
something is<font color="#E5E5E5"> not correct</font><font color="#CCCCCC"> like how on</font>

587
00:24:10,150 --> 00:24:15,370
earth can<font color="#CCCCCC"> I transmit</font><font color="#E5E5E5"> more data if I</font>

588
00:24:12,400 --> 00:24:18,270
repeat bits and how why is this better

589
00:24:15,370 --> 00:24:23,559
<font color="#E5E5E5">than this reason is I'm not actually</font>

590
00:24:18,270 --> 00:24:24,970
comparing apples to apples<font color="#E5E5E5"> here in the</font>

591
00:24:23,559 --> 00:24:27,190
red case I'm<font color="#CCCCCC"> actually transmitting less</font>

592
00:24:24,970 --> 00:24:29,470
data like<font color="#E5E5E5"> one third the amount of data</font>

593
00:24:27,190 --> 00:24:31,629
<font color="#E5E5E5">per second and the same is true for the</font>

594
00:24:29,470 --> 00:24:36,109
<font color="#CCCCCC">rest I haven't basically</font>

595
00:24:31,629 --> 00:24:38,238
corrected for the<font color="#E5E5E5"> different rates that</font>

596
00:24:36,109 --> 00:24:40,849
I've achieved<font color="#E5E5E5"> so okay</font>

597
00:24:38,239 --> 00:24:42,769
like I said<font color="#E5E5E5"> running out of time</font><font color="#CCCCCC"> so this</font>

598
00:24:40,849 --> 00:24:44,570
<font color="#E5E5E5">is basically more</font><font color="#CCCCCC"> of a debugging tool if</font>

599
00:24:42,769 --> 00:24:46,729
you want to do a theoretical research<font color="#CCCCCC"> I</font>

600
00:24:44,570 --> 00:24:48,349
like this is one of<font color="#CCCCCC"> the rare cases would</font>

601
00:24:46,729 --> 00:24:50,629
I would probably<font color="#CCCCCC"> not recommend</font><font color="#E5E5E5"> in a</font>

602
00:24:48,349 --> 00:24:52,399
radio but the fact that<font color="#E5E5E5"> our kernels are</font>

603
00:24:50,629 --> 00:24:54,369
separate from<font color="#E5E5E5"> our block model means you</font>

604
00:24:52,399 --> 00:24:56,389
can still share code very easily

605
00:24:54,369 --> 00:25:00,978
<font color="#E5E5E5">all right okay that was the</font><font color="#CCCCCC"> example I</font>

606
00:24:56,389 --> 00:25:02,718
just<font color="#CCCCCC"> wanted to show you and before I</font>

607
00:25:00,979 --> 00:25:04,899
conclude I just wanted to name a couple

608
00:25:02,719 --> 00:25:07,580
<font color="#CCCCCC">of</font><font color="#E5E5E5"> people that worked very hard on this</font>

609
00:25:04,899 --> 00:25:10,158
<font color="#E5E5E5">so Nick McCarthy I think came</font><font color="#CCCCCC"> up the</font>

610
00:25:07,580 --> 00:25:12,710
original<font color="#CCCCCC"> FCC API</font><font color="#E5E5E5"> Tim was probably</font>

611
00:25:10,159 --> 00:25:14,929
involved<font color="#CCCCCC"> but then there's a couple</font><font color="#E5E5E5"> of</font>

612
00:25:12,710 --> 00:25:18,739
people who contributed like the like

613
00:25:14,929 --> 00:25:22,570
really relevant codes<font color="#E5E5E5"> Johannes Amano and</font>

614
00:25:18,739 --> 00:25:24,950
Tracy were actually<font color="#E5E5E5"> G</font><font color="#CCCCCC"> Salk students and</font>

615
00:25:22,570 --> 00:25:26,718
<font color="#E5E5E5">Johannes spoke about his codes his polo</font>

616
00:25:24,950 --> 00:25:28,489
code implementation<font color="#E5E5E5"> Jack</font><font color="#CCCCCC"> 1:16 this is a</font>

617
00:25:26,719 --> 00:25:30,679
link to<font color="#E5E5E5"> the actual talk there was</font>

618
00:25:28,489 --> 00:25:32,210
another talk<font color="#CCCCCC"> too about polar codes at</font>

619
00:25:30,679 --> 00:25:37,549
the same<font color="#E5E5E5"> conference but they were not up</font>

620
00:25:32,210 --> 00:25:39,649
streamed into<font color="#CCCCCC"> grsec okay so</font><font color="#E5E5E5"> some</font>

621
00:25:37,549 --> 00:25:41,929
redundancies good some is bad if<font color="#E5E5E5"> he sees</font>

622
00:25:39,649 --> 00:25:44,748
definitely on the good variety I like

623
00:25:41,929 --> 00:25:48,710
the modular approach it fits very<font color="#E5E5E5"> well</font>

624
00:25:44,749 --> 00:25:50,989
<font color="#CCCCCC">into goona radio we do need help you</font>

625
00:25:48,710 --> 00:25:52,639
know making<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> those and we have a lot</font>

626
00:25:50,989 --> 00:25:54,739
of<font color="#E5E5E5"> really good codes in there</font><font color="#CCCCCC"> but we can</font>

627
00:25:52,639 --> 00:25:57,408
<font color="#E5E5E5">always increase their speed that's</font>

628
00:25:54,739 --> 00:26:00,529
<font color="#E5E5E5">something that is</font><font color="#CCCCCC"> very difficult and as</font>

629
00:25:57,409 --> 00:26:03,109
sort of new<font color="#E5E5E5"> wireless protocols</font>

630
00:26:00,529 --> 00:26:04,669
you know appear in the wild we also need

631
00:26:03,109 --> 00:26:07,639
<font color="#CCCCCC">more you know different types of</font>

632
00:26:04,669 --> 00:26:10,849
<font color="#E5E5E5">encoders anyway so yeah I hope people</font>

633
00:26:07,639 --> 00:26:13,959
consider taking a<font color="#CCCCCC"> look at G RF EC and</font>

634
00:26:10,849 --> 00:26:13,960
you<font color="#E5E5E5"> know thank</font><font color="#CCCCCC"> you very much</font>

635
00:26:17,170 --> 00:26:19,230
you

