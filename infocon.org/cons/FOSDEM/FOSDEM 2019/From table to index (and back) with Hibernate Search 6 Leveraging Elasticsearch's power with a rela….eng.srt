1
00:00:04,720 --> 00:00:22,099
<font color="#CCCCCC">okay so hello everyone I'm Melea</font>

2
00:00:19,010 --> 00:00:25,130
<font color="#E5E5E5">I'm work at Red Hat as part of the</font>

3
00:00:22,099 --> 00:00:29,689
<font color="#CCCCCC">hibernate team</font><font color="#E5E5E5"> and I worked work in</font>

4
00:00:25,130 --> 00:00:32,780
<font color="#E5E5E5">particular on hybrid search</font><font color="#CCCCCC"> what I'm</font>

5
00:00:29,689 --> 00:00:37,090
going to talk to you about today<font color="#E5E5E5"> is not</font>

6
00:00:32,780 --> 00:00:41,230
<font color="#CCCCCC">really</font><font color="#E5E5E5"> search itself it's more how to</font>

7
00:00:37,090 --> 00:00:45,260
integrate search into an application<font color="#CCCCCC"> and</font>

8
00:00:41,230 --> 00:00:47,148
more specifically<font color="#E5E5E5"> it's about integrating</font>

9
00:00:45,260 --> 00:00:50,539
<font color="#E5E5E5">search in through an application</font><font color="#CCCCCC"> using</font>

10
00:00:47,149 --> 00:00:55,879
<font color="#CCCCCC">Java 8 and above</font><font color="#E5E5E5"> using the</font><font color="#CCCCCC"> higher minute</font>

11
00:00:50,539 --> 00:00:59,539
<font color="#CCCCCC">or and to store data in</font><font color="#E5E5E5"> a relational</font>

12
00:00:55,879 --> 00:01:03,289
database<font color="#CCCCCC"> it could be any framework</font>

13
00:00:59,539 --> 00:01:07,510
spring boot<font color="#CCCCCC"> Jakarta EE</font><font color="#E5E5E5"> whatever really</font>

14
00:01:03,289 --> 00:01:11,600
so it's really about adding search to<font color="#E5E5E5"> a</font>

15
00:01:07,510 --> 00:01:17,630
<font color="#E5E5E5">business application that you</font><font color="#CCCCCC"> might find</font>

16
00:01:11,600 --> 00:01:21,500
in a lot of shops today<font color="#CCCCCC"> an</font><font color="#E5E5E5"> application</font>

17
00:01:17,630 --> 00:01:24,320
that<font color="#E5E5E5"> uses the ORM to create update and</font>

18
00:01:21,500 --> 00:01:28,369
retrieve data<font color="#CCCCCC"> from the relational</font>

19
00:01:24,320 --> 00:01:34,460
database<font color="#E5E5E5"> what we want to add is some way</font>

20
00:01:28,369 --> 00:01:39,759
to query this data in a<font color="#CCCCCC"> full-text way</font>

21
00:01:34,460 --> 00:01:47,030
not just star comparisons but really

22
00:01:39,759 --> 00:01:52,009
more fuzzy search and more more precise

23
00:01:47,030 --> 00:01:54,200
more yeah more textual search so one way

24
00:01:52,009 --> 00:01:57,920
to do that when your data isn't in your

25
00:01:54,200 --> 00:02:01,689
database<font color="#E5E5E5"> would be to use elastic search</font>

26
00:01:57,920 --> 00:02:04,939
<font color="#E5E5E5">this just next to your database but then</font>

27
00:02:01,689 --> 00:02:07,939
you have a problem<font color="#CCCCCC"> you will need to</font>

28
00:02:04,939 --> 00:02:10,038
store your<font color="#E5E5E5"> data both in the database and</font>

29
00:02:07,939 --> 00:02:11,959
<font color="#E5E5E5">elastic search every time you write to</font>

30
00:02:10,038 --> 00:02:15,349
the database<font color="#CCCCCC"> you will need to write</font><font color="#E5E5E5"> to</font>

31
00:02:11,960 --> 00:02:18,630
elastic search<font color="#CCCCCC"> too so ideally</font><font color="#E5E5E5"> you'd like</font>

32
00:02:15,349 --> 00:02:21,060
<font color="#E5E5E5">some kind of automatic synchronization</font>

33
00:02:18,630 --> 00:02:24,570
some kind some tool that would allow<font color="#CCCCCC"> you</font>

34
00:02:21,060 --> 00:02:28,920
to<font color="#E5E5E5"> not really care about synchronizing</font>

35
00:02:24,570 --> 00:02:33,359
<font color="#E5E5E5">the two sources of truth but we have it</font>

36
00:02:28,920 --> 00:02:35,760
done behind the scenes<font color="#E5E5E5"> the question then</font>

37
00:02:33,360 --> 00:02:38,460
becomes how to trigger<font color="#E5E5E5"> the</font>

38
00:02:35,760 --> 00:02:41,570
<font color="#E5E5E5">synchronization and how to map the</font>

39
00:02:38,460 --> 00:02:44,430
relational world<font color="#E5E5E5"> to the document world</font>

40
00:02:41,570 --> 00:02:47,760
<font color="#CCCCCC">in the relational world you may have</font>

41
00:02:44,430 --> 00:02:51,150
data which is spread<font color="#CCCCCC"> out over several</font>

42
00:02:47,760 --> 00:02:52,500
<font color="#E5E5E5">tables whereas in the document world you</font>

43
00:02:51,150 --> 00:02:55,050
would want to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> as much as possible</font>

44
00:02:52,500 --> 00:02:59,040
in a single<font color="#CCCCCC"> document</font><font color="#E5E5E5"> to minimize the</font>

45
00:02:55,050 --> 00:03:05,610
need to<font color="#E5E5E5"> the joins and ideally to</font><font color="#CCCCCC"> not do</font>

46
00:02:59,040 --> 00:03:07,859
<font color="#E5E5E5">joints at all the solution then the one</font>

47
00:03:05,610 --> 00:03:11,850
I am proposing<font color="#E5E5E5"> is high minute search</font>

48
00:03:07,860 --> 00:03:16,290
which<font color="#E5E5E5"> is a library which integrates into</font>

49
00:03:11,850 --> 00:03:21,390
high minute or M<font color="#E5E5E5"> so it's two</font>

50
00:03:16,290 --> 00:03:23,820
dependencies<font color="#E5E5E5"> if you want to map or M</font>

51
00:03:21,390 --> 00:03:28,290
entities to<font color="#CCCCCC"> elasticsearch you have to</font>

52
00:03:23,820 --> 00:03:31,560
add a mapper which<font color="#CCCCCC"> turns high minotaur</font>

53
00:03:28,290 --> 00:03:34,109
entities into documents<font color="#E5E5E5"> and the back end</font>

54
00:03:31,560 --> 00:03:36,600
which will index those documents and

55
00:03:34,110 --> 00:03:45,990
allow you<font color="#E5E5E5"> to query the the elasticsearch</font>

56
00:03:36,600 --> 00:03:48,209
cluster the configuration first the

57
00:03:45,990 --> 00:03:50,640
configuration option the properties will

58
00:03:48,210 --> 00:03:53,700
have to go<font color="#E5E5E5"> wherever you would configure</font>

59
00:03:50,640 --> 00:03:56,549
<font color="#CCCCCC">Hamlet or M it could be a persistent dot</font>

60
00:03:53,700 --> 00:03:58,829
<font color="#CCCCCC">XML having a lot properties</font><font color="#E5E5E5"> or if you're</font>

61
00:03:56,550 --> 00:04:01,140
familiar with<font color="#CCCCCC"> spring it</font><font color="#E5E5E5"> would be in the</font>

62
00:03:58,830 --> 00:04:04,080
application that<font color="#E5E5E5"> UML or application that</font>

63
00:04:01,140 --> 00:04:06,029
properties<font color="#E5E5E5"> wherever you push settings to</font>

64
00:04:04,080 --> 00:04:08,910
<font color="#CCCCCC">haven't or are M you can</font><font color="#E5E5E5"> push settings</font>

65
00:04:06,030 --> 00:04:11,340
to home and search<font color="#E5E5E5"> so in search first</font>

66
00:04:08,910 --> 00:04:15,120
you'll define<font color="#E5E5E5"> a back end you'd give</font><font color="#CCCCCC"> it a</font>

67
00:04:11,340 --> 00:04:16,858
name here it's back<font color="#E5E5E5"> in one you say your</font>

68
00:04:15,120 --> 00:04:20,880
back end will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> the default back end</font>

69
00:04:16,858 --> 00:04:23,159
<font color="#E5E5E5">for all your entities then you say that</font>

70
00:04:20,880 --> 00:04:25,710
<font color="#E5E5E5">you're back</font><font color="#CCCCCC"> in type is elastic search we</font>

71
00:04:23,160 --> 00:04:27,450
support elastic search but<font color="#E5E5E5"> also embedded</font>

72
00:04:25,710 --> 00:04:31,650
<font color="#CCCCCC">loosing mode</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> choose</font>

73
00:04:27,450 --> 00:04:32,490
something then of<font color="#E5E5E5"> course you have to</font>

74
00:04:31,650 --> 00:04:34,530
tell us

75
00:04:32,490 --> 00:04:37,530
where to find your<font color="#E5E5E5"> elasticsearch cluster</font>

76
00:04:34,530 --> 00:04:39,330
<font color="#E5E5E5">and optionally if you have</font>

77
00:04:37,530 --> 00:04:45,750
authentication enabled<font color="#E5E5E5"> how to</font>

78
00:04:39,330 --> 00:04:48,150
authenticate once<font color="#E5E5E5"> this is done you still</font>

79
00:04:45,750 --> 00:04:51,930
have to tell<font color="#E5E5E5"> us to tell</font><font color="#CCCCCC"> hybrid search</font>

80
00:04:48,150 --> 00:04:54,299
how to map the<font color="#CCCCCC"> Java entity to an elastic</font>

81
00:04:51,930 --> 00:04:57,330
search document so here on the left<font color="#E5E5E5"> you</font>

82
00:04:54,300 --> 00:05:00,479
have the<font color="#E5E5E5"> model for Java entity at JPL</font>

83
00:04:57,330 --> 00:05:03,568
<font color="#E5E5E5">annotated entity on the right you have</font>

84
00:05:00,479 --> 00:05:07,020
<font color="#E5E5E5">the elastic</font><font color="#CCCCCC"> search mapping in this stage</font>

85
00:05:03,569 --> 00:05:09,960
there's nothing to map the true document

86
00:05:07,020 --> 00:05:12,990
in hibernate search<font color="#E5E5E5"> if you had this</font>

87
00:05:09,960 --> 00:05:15,210
annotation<font color="#E5E5E5"> then automatically</font><font color="#CCCCCC"> how many</font>

88
00:05:12,990 --> 00:05:19,919
search will know that you map the book

89
00:05:15,210 --> 00:05:22,440
entity to a book<font color="#E5E5E5"> index on the elastic</font>

90
00:05:19,919 --> 00:05:25,049
search side if you only add that<font color="#CCCCCC"> though</font>

91
00:05:22,440 --> 00:05:26,969
well the document will be<font color="#E5E5E5"> empty because</font>

92
00:05:25,050 --> 00:05:30,000
<font color="#CCCCCC">we</font><font color="#E5E5E5"> don't know what to put in the</font>

93
00:05:26,970 --> 00:05:33,690
document yet<font color="#E5E5E5"> so you add other</font>

94
00:05:30,000 --> 00:05:36,780
<font color="#E5E5E5">annotations here we have a title field</font>

95
00:05:33,690 --> 00:05:40,080
<font color="#E5E5E5">we say that this title</font><font color="#CCCCCC"> field is a full</font>

96
00:05:36,780 --> 00:05:44,520
text<font color="#E5E5E5"> field analyzed with</font><font color="#CCCCCC"> the clean text</font>

97
00:05:40,080 --> 00:05:47,240
analyzer<font color="#E5E5E5"> and automatically</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> search</font>

98
00:05:44,520 --> 00:05:52,400
is able to translate<font color="#E5E5E5"> that into</font><font color="#CCCCCC"> a</font>

99
00:05:47,240 --> 00:05:52,400
ridiculous mapping where you have this

100
00:05:52,849 --> 00:05:58,320
and of<font color="#CCCCCC"> course you add new fields as</font>

101
00:05:56,219 --> 00:05:59,820
<font color="#CCCCCC">necessary but</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> surely on different</font>

102
00:05:58,320 --> 00:06:02,759
properties<font color="#CCCCCC"> potentially on the</font><font color="#E5E5E5"> same</font>

103
00:05:59,820 --> 00:06:05,250
property<font color="#E5E5E5"> if you need to do different</font>

104
00:06:02,759 --> 00:06:07,590
things with with the same data<font color="#E5E5E5"> like</font>

105
00:06:05,250 --> 00:06:09,659
searching on the title but<font color="#CCCCCC"> also sorting</font>

106
00:06:07,590 --> 00:06:11,549
on the title<font color="#E5E5E5"> if you sort on the title</font>

107
00:06:09,659 --> 00:06:14,550
you<font color="#CCCCCC"> don't want to use an analyzer that</font>

108
00:06:11,550 --> 00:06:17,729
will break<font color="#CCCCCC"> down your title in multiple</font>

109
00:06:14,550 --> 00:06:20,570
words because sorting on multiple tokens

110
00:06:17,729 --> 00:06:23,909
<font color="#E5E5E5">is not really something</font><font color="#CCCCCC"> you want to</font><font color="#E5E5E5"> do</font>

111
00:06:20,570 --> 00:06:27,479
so<font color="#E5E5E5"> you can create a different field for</font>

112
00:06:23,909 --> 00:06:33,659
the same data and<font color="#E5E5E5"> my mentor will just</font>

113
00:06:27,479 --> 00:06:36,330
pull the same data to both<font color="#E5E5E5"> fields</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> took</font>

114
00:06:33,659 --> 00:06:39,150
really about<font color="#E5E5E5"> analyzer</font><font color="#CCCCCC"> so the last part</font>

115
00:06:36,330 --> 00:06:41,430
<font color="#E5E5E5">of the configuration would be to define</font>

116
00:06:39,150 --> 00:06:43,679
these analyzers<font color="#E5E5E5"> which</font><font color="#CCCCCC"> are which are</font>

117
00:06:41,430 --> 00:06:45,330
<font color="#E5E5E5">after</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> core</font><font color="#CCCCCC"> of what you</font><font color="#E5E5E5"> do when</font>

118
00:06:43,680 --> 00:06:47,849
<font color="#E5E5E5">you do</font><font color="#CCCCCC"> full-text</font><font color="#E5E5E5"> search</font>

119
00:06:45,330 --> 00:06:49,680
so you could do that<font color="#E5E5E5"> directly in the</font>

120
00:06:47,849 --> 00:06:52,440
<font color="#E5E5E5">elasticsearch server but since it's</font><font color="#CCCCCC"> a</font>

121
00:06:49,680 --> 00:06:53,849
such a common need<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are api's</font><font color="#E5E5E5"> in</font>

122
00:06:52,440 --> 00:06:57,330
harmony<font color="#CCCCCC"> search to do that</font><font color="#E5E5E5"> too</font>

123
00:06:53,849 --> 00:07:00,830
<font color="#E5E5E5">you would implement an interface you</font>

124
00:06:57,330 --> 00:07:03,919
will<font color="#E5E5E5"> create an analysis configure and</font>

125
00:07:00,830 --> 00:07:07,590
you will<font color="#CCCCCC"> reference it in your</font>

126
00:07:03,919 --> 00:07:09,659
configuration<font color="#E5E5E5"> here I'm using</font><font color="#CCCCCC"> Sprint so I</font>

127
00:07:07,590 --> 00:07:11,940
<font color="#CCCCCC">annotated with add component and I</font>

128
00:07:09,659 --> 00:07:13,830
<font color="#CCCCCC">reference the</font><font color="#E5E5E5"> component name but you</font>

129
00:07:11,940 --> 00:07:17,819
could do<font color="#E5E5E5"> that using reflection without</font>

130
00:07:13,830 --> 00:07:19,609
any any framework and just put the fully

131
00:07:17,819 --> 00:07:23,340
<font color="#E5E5E5">qualified class name</font>

132
00:07:19,610 --> 00:07:26,129
now this<font color="#E5E5E5"> configure is not very useful</font><font color="#CCCCCC"> it</font>

133
00:07:23,340 --> 00:07:29,549
doesn't do anything what<font color="#E5E5E5"> you will do is</font>

134
00:07:26,129 --> 00:07:32,699
<font color="#CCCCCC">just use a DSL to create the analyzer</font>

135
00:07:29,550 --> 00:07:34,889
<font color="#E5E5E5">and tell us which tokenizer you want to</font>

136
00:07:32,699 --> 00:07:40,500
use which traffic<font color="#CCCCCC"> to talking pictures</font>

137
00:07:34,889 --> 00:07:45,840
and so on and<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> all set once we've</font>

138
00:07:40,500 --> 00:07:49,110
<font color="#E5E5E5">done this</font><font color="#CCCCCC"> I mean search can work so this</font>

139
00:07:45,840 --> 00:07:52,770
code which is usually we're used to

140
00:07:49,110 --> 00:07:56,370
persist entities with hibernate or<font color="#E5E5E5"> M can</font>

141
00:07:52,770 --> 00:07:58,560
be<font color="#E5E5E5"> adapted to also work with realistic</font>

142
00:07:56,370 --> 00:08:01,349
search<font color="#CCCCCC"> too also</font><font color="#E5E5E5"> when you persist the</font>

143
00:07:58,560 --> 00:08:03,620
entity you<font color="#CCCCCC"> will also index it and to</font>

144
00:08:01,349 --> 00:08:05,759
adapt it you will do this nothing

145
00:08:03,620 --> 00:08:09,990
<font color="#E5E5E5">because it's all automatic</font><font color="#CCCCCC"> it's all</font>

146
00:08:05,759 --> 00:08:12,599
behind<font color="#CCCCCC"> the scenes so as soon</font><font color="#E5E5E5"> as you do</font>

147
00:08:09,990 --> 00:08:16,319
changes to an entity<font color="#CCCCCC"> you commit a</font>

148
00:08:12,599 --> 00:08:17,580
transaction<font color="#CCCCCC"> hymen search will after</font>

149
00:08:16,319 --> 00:08:19,500
trend in the Committee<font color="#E5E5E5"> of the</font>

150
00:08:17,580 --> 00:08:24,240
transaction<font color="#E5E5E5"> send everything to elastic</font>

151
00:08:19,500 --> 00:08:27,779
<font color="#E5E5E5">search and of course it also works for</font>

152
00:08:24,240 --> 00:08:30,960
dates and deletes not just for ads like

153
00:08:27,779 --> 00:08:34,919
<font color="#E5E5E5">I'm showing here how it works is that</font>

154
00:08:30,960 --> 00:08:38,399
when your application sends asks the ORM

155
00:08:34,919 --> 00:08:41,429
to perform entity changes the<font color="#E5E5E5"> OM will</font>

156
00:08:38,399 --> 00:08:45,149
send in certain updates<font color="#E5E5E5"> to the database</font>

157
00:08:41,429 --> 00:08:47,579
<font color="#E5E5E5">but it will also publish change events</font>

158
00:08:45,149 --> 00:08:52,290
which are<font color="#E5E5E5"> captured by having it</font><font color="#CCCCCC"> search</font>

159
00:08:47,579 --> 00:08:54,329
<font color="#E5E5E5">and then when the ORM will commit</font><font color="#CCCCCC"> the</font>

160
00:08:52,290 --> 00:08:58,319
transaction there is a commit<font color="#E5E5E5"> event</font>

161
00:08:54,329 --> 00:09:00,349
which how in search will<font color="#E5E5E5"> also capture</font>

162
00:08:58,320 --> 00:09:03,180
and when the<font color="#E5E5E5"> committee events happens</font>

163
00:09:00,350 --> 00:09:08,160
then hybrid search<font color="#E5E5E5"> sends everything to</font>

164
00:09:03,180 --> 00:09:14,489
<font color="#CCCCCC">elasticsearch there are a few features</font>

165
00:09:08,160 --> 00:09:16,920
that make<font color="#CCCCCC"> it a bit less</font><font color="#E5E5E5"> naive like</font>

166
00:09:14,490 --> 00:09:19,440
automatic<font color="#CCCCCC"> bulking of search requests we</font>

167
00:09:16,920 --> 00:09:21,060
don't want to send one request at a<font color="#CCCCCC"> time</font>

168
00:09:19,440 --> 00:09:23,310
for<font color="#CCCCCC"> each document</font><font color="#E5E5E5"> you in that we</font>

169
00:09:21,060 --> 00:09:26,030
<font color="#E5E5E5">actually want to put it all</font><font color="#CCCCCC"> in a single</font>

170
00:09:23,310 --> 00:09:28,979
<font color="#E5E5E5">request to minimize latency and to</font>

171
00:09:26,030 --> 00:09:35,030
<font color="#E5E5E5">optimize the flow of information between</font>

172
00:09:28,980 --> 00:09:35,030
our application<font color="#CCCCCC"> and</font><font color="#E5E5E5"> elastic search so</font>

173
00:09:35,510 --> 00:09:41,520
<font color="#E5E5E5">that was nice</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> have to do</font>

174
00:09:38,850 --> 00:09:45,570
anything<font color="#E5E5E5"> once it's configured but the</font>

175
00:09:41,520 --> 00:09:48,420
example I gave is really simple to

176
00:09:45,570 --> 00:09:50,610
simple<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> in the real</font><font color="#E5E5E5"> world</font><font color="#CCCCCC"> you</font>

177
00:09:48,420 --> 00:09:53,430
don't<font color="#CCCCCC"> want to map one entity to one</font>

178
00:09:50,610 --> 00:09:56,580
document you really want to not a tree

179
00:09:53,430 --> 00:10:00,329
<font color="#E5E5E5">of entities to a document you want to de</font>

180
00:09:56,580 --> 00:10:01,890
normalize<font color="#CCCCCC"> your schema</font><font color="#E5E5E5"> and to include for</font>

181
00:10:00,330 --> 00:10:04,230
example<font color="#CCCCCC"> if you have a</font><font color="#E5E5E5"> book entity with a</font>

182
00:10:01,890 --> 00:10:06,330
few chapters<font color="#E5E5E5"> when you search on the book</font>

183
00:10:04,230 --> 00:10:09,000
you<font color="#CCCCCC"> would want to</font><font color="#E5E5E5"> search also on the</font>

184
00:10:06,330 --> 00:10:11,660
contents<font color="#CCCCCC"> of the chapters that's what</font>

185
00:10:09,000 --> 00:10:15,290
really is interesting<font color="#E5E5E5"> when you map your</font>

186
00:10:11,660 --> 00:10:21,630
your database data to an elastic search

187
00:10:15,290 --> 00:10:26,760
model<font color="#E5E5E5"> so in order to do this</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> how many</font>

188
00:10:21,630 --> 00:10:30,680
<font color="#E5E5E5">search also offer the feature here we</font>

189
00:10:26,760 --> 00:10:34,230
have a book<font color="#CCCCCC"> and</font><font color="#E5E5E5"> tea a chapter entity and</font>

190
00:10:30,680 --> 00:10:39,390
here is the elastic search<font color="#E5E5E5"> schema for</font>

191
00:10:34,230 --> 00:10:42,630
<font color="#E5E5E5">the book so you</font><font color="#CCCCCC"> have a list of chapters</font>

192
00:10:39,390 --> 00:10:44,550
<font color="#E5E5E5">here you want to embed these chapters</font>

193
00:10:42,630 --> 00:10:47,790
into your book document<font color="#E5E5E5"> you will just</font>

194
00:10:44,550 --> 00:10:49,290
add an annotation to<font color="#E5E5E5"> tap that and how</font>

195
00:10:47,790 --> 00:10:52,530
<font color="#E5E5E5">many search will be able to add a</font>

196
00:10:49,290 --> 00:10:56,300
chapter<font color="#CCCCCC"> as object now what chapters list</font>

197
00:10:52,530 --> 00:10:59,100
of objects in your schema now as before

198
00:10:56,300 --> 00:11:01,199
<font color="#E5E5E5">the chapters are initially</font><font color="#CCCCCC"> empty because</font>

199
00:10:59,100 --> 00:11:04,620
<font color="#E5E5E5">you didn't tell</font><font color="#CCCCCC"> hyman</font><font color="#E5E5E5"> search what to put</font>

200
00:11:01,200 --> 00:11:07,620
to add to index from your chapters so

201
00:11:04,620 --> 00:11:10,410
you also<font color="#E5E5E5"> need to add annotations on your</font>

202
00:11:07,620 --> 00:11:12,120
field<font color="#E5E5E5"> in your chapter to tell us what</font>

203
00:11:10,410 --> 00:11:15,810
you<font color="#E5E5E5"> want to index</font><font color="#CCCCCC"> Agnes</font>

204
00:11:12,120 --> 00:11:19,800
and how to index it<font color="#E5E5E5"> once you've done</font>

205
00:11:15,810 --> 00:11:25,800
that then everything<font color="#E5E5E5"> is indexed as part</font>

206
00:11:19,800 --> 00:11:28,859
of the of the book and there are several

207
00:11:25,800 --> 00:11:30,290
options<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> you can do more</font>

208
00:11:28,860 --> 00:11:32,670
complicated<font color="#E5E5E5"> things</font>

209
00:11:30,290 --> 00:11:34,589
imagine your chapters are not only

210
00:11:32,670 --> 00:11:37,680
<font color="#E5E5E5">reference from</font><font color="#CCCCCC"> your book but also from</font>

211
00:11:34,589 --> 00:11:41,160
<font color="#CCCCCC">another table</font><font color="#E5E5E5"> of contents entity in your</font>

212
00:11:37,680 --> 00:11:43,739
<font color="#E5E5E5">table of contents index you need the</font>

213
00:11:41,160 --> 00:11:46,680
page count<font color="#E5E5E5"> but not in your book you will</font>

214
00:11:43,740 --> 00:11:48,300
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to tell us when I embed the</font>

215
00:11:46,680 --> 00:11:50,489
chapters in the<font color="#CCCCCC"> book I only want the</font>

216
00:11:48,300 --> 00:11:54,660
<font color="#CCCCCC">title</font><font color="#E5E5E5"> and the text not the page</font><font color="#CCCCCC"> covers I</font>

217
00:11:50,490 --> 00:11:57,990
don't care about that there are several

218
00:11:54,660 --> 00:12:03,000
options<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> also use nested storage</font>

219
00:11:57,990 --> 00:12:05,580
to net to not just put the data as is in

220
00:12:03,000 --> 00:12:09,210
the<font color="#E5E5E5"> document</font><font color="#CCCCCC"> but really a Scholastic</font>

221
00:12:05,580 --> 00:12:10,680
search to store the chapters as nested

222
00:12:09,210 --> 00:12:12,540
documents so that<font color="#CCCCCC"> the structure is</font>

223
00:12:10,680 --> 00:12:15,479
preserved<font color="#E5E5E5"> and you keep the information</font>

224
00:12:12,540 --> 00:12:18,870
<font color="#CCCCCC">about which title is for which text</font>

225
00:12:15,480 --> 00:12:22,170
which<font color="#CCCCCC"> can be useful when</font><font color="#E5E5E5"> you sorry when</font>

226
00:12:18,870 --> 00:12:25,650
you<font color="#E5E5E5"> combine with queries</font><font color="#CCCCCC"> you do a query</font>

227
00:12:22,170 --> 00:12:30,599
query on both the title<font color="#E5E5E5"> and the in the</font>

228
00:12:25,650 --> 00:12:33,990
content of<font color="#CCCCCC"> a chapter</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> like I</font>

229
00:12:30,600 --> 00:12:38,400
want a title<font color="#CCCCCC"> chapter with a John</font><font color="#E5E5E5"> in the</font>

230
00:12:33,990 --> 00:12:40,230
title and Smith in the<font color="#CCCCCC"> content</font><font color="#E5E5E5"> you need</font>

231
00:12:38,400 --> 00:12:42,180
<font color="#E5E5E5">to preserve the structure to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

232
00:12:40,230 --> 00:12:44,820
do<font color="#E5E5E5"> that kind of queries otherwise you</font>

233
00:12:42,180 --> 00:12:47,069
<font color="#E5E5E5">will get a book which has in Chapter</font><font color="#CCCCCC"> one</font>

234
00:12:44,820 --> 00:12:49,589
<font color="#E5E5E5">run in the title and in chapter do two</font>

235
00:12:47,070 --> 00:12:53,970
Smith in the content<font color="#E5E5E5"> and that's not</font>

236
00:12:49,589 --> 00:12:56,130
<font color="#E5E5E5">exactly what you want so there are many</font>

237
00:12:53,970 --> 00:13:00,810
options<font color="#E5E5E5"> here and you can really</font>

238
00:12:56,130 --> 00:13:05,520
customize how you map your your book to

239
00:13:00,810 --> 00:13:08,579
a document once<font color="#E5E5E5"> again</font><font color="#CCCCCC"> indexing</font><font color="#E5E5E5"> is</font>

240
00:13:05,520 --> 00:13:11,760
automatic<font color="#E5E5E5"> now if you have a piece</font><font color="#CCCCCC"> of</font>

241
00:13:08,580 --> 00:13:15,390
code that changes the chapter where the

242
00:13:11,760 --> 00:13:17,730
<font color="#E5E5E5">book is never never involved</font><font color="#CCCCCC"> remain</font>

243
00:13:15,390 --> 00:13:20,010
<font color="#E5E5E5">search will know that when a chapter</font>

244
00:13:17,730 --> 00:13:22,250
changes you need to reindex<font color="#CCCCCC"> the</font>

245
00:13:20,010 --> 00:13:25,630
corresponding book<font color="#E5E5E5"> and it will do that</font>

246
00:13:22,250 --> 00:13:32,890
<font color="#CCCCCC">you</font><font color="#E5E5E5"> don't need to tell us</font>

247
00:13:25,630 --> 00:13:36,120
do that<font color="#E5E5E5"> we know it</font><font color="#CCCCCC"> that was nice</font>

248
00:13:32,890 --> 00:13:40,840
we are able<font color="#E5E5E5"> to index everything in</font>

249
00:13:36,120 --> 00:13:43,000
<font color="#CCCCCC">elasticsearch but then you index to</font>

250
00:13:40,840 --> 00:13:45,550
search at some point<font color="#E5E5E5"> so we need</font><font color="#CCCCCC"> search</font>

251
00:13:43,000 --> 00:13:48,370
<font color="#CCCCCC">api and there's also that in harmony</font>

252
00:13:45,550 --> 00:13:52,270
search you can<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course just use the</font>

253
00:13:48,370 --> 00:13:55,960
native<font color="#E5E5E5"> elasticsearch api's you can craft</font>

254
00:13:52,270 --> 00:13:58,960
your JSON<font color="#E5E5E5"> queries send them to elastic</font>

255
00:13:55,960 --> 00:14:01,300
<font color="#E5E5E5">search receiver days and responses past</font>

256
00:13:58,960 --> 00:14:06,390
that and do whatever<font color="#E5E5E5"> you want in your</font>

257
00:14:01,300 --> 00:14:10,660
application but it's also nice to have<font color="#CCCCCC"> a</font>

258
00:14:06,390 --> 00:14:16,330
Java<font color="#CCCCCC"> type safe</font><font color="#E5E5E5"> API so that's what we we</font>

259
00:14:10,660 --> 00:14:18,760
offer here by taking<font color="#E5E5E5"> the user input</font><font color="#CCCCCC"> and</font>

260
00:14:16,330 --> 00:14:21,820
<font color="#CCCCCC">the entity manager which is the entry</font>

261
00:14:18,760 --> 00:14:25,030
points to<font color="#CCCCCC"> the hymens or</font><font color="#E5E5E5"> API you can</font>

262
00:14:21,820 --> 00:14:27,420
extract<font color="#CCCCCC"> the high minute Search API so</font>

263
00:14:25,030 --> 00:14:31,900
<font color="#E5E5E5">you create a</font><font color="#CCCCCC"> full-text entitymanager</font>

264
00:14:27,420 --> 00:14:34,030
from there you<font color="#E5E5E5"> can create</font><font color="#CCCCCC"> a query you</font>

265
00:14:31,900 --> 00:14:35,860
<font color="#CCCCCC">will you will</font><font color="#E5E5E5"> say I want to search on</font>

266
00:14:34,030 --> 00:14:41,260
the book class and I want to create a

267
00:14:35,860 --> 00:14:44,020
query<font color="#E5E5E5"> a search query then you</font><font color="#CCCCCC"> will say I</font>

268
00:14:41,260 --> 00:14:50,280
<font color="#E5E5E5">want the results</font><font color="#CCCCCC"> as entities</font><font color="#E5E5E5"> and that's</font>

269
00:14:44,020 --> 00:14:53,800
where it<font color="#E5E5E5"> gets interesting you give a few</font>

270
00:14:50,280 --> 00:14:56,110
<font color="#E5E5E5">predicate or multiple predicates saying</font>

271
00:14:53,800 --> 00:15:00,099
you want<font color="#E5E5E5"> the</font><font color="#CCCCCC"> title of the book to match</font>

272
00:14:56,110 --> 00:15:03,310
the user input<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you build</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> pray</font>

273
00:15:00,100 --> 00:15:08,680
<font color="#E5E5E5">and then when you in</font><font color="#CCCCCC"> secrete your query</font>

274
00:15:03,310 --> 00:15:13,869
<font color="#E5E5E5">you</font><font color="#CCCCCC"> receive books which are managed</font>

275
00:15:08,680 --> 00:15:17,650
entities entities that are bound to<font color="#CCCCCC"> the</font>

276
00:15:13,870 --> 00:15:19,780
database<font color="#E5E5E5"> but you made the search in</font>

277
00:15:17,650 --> 00:15:23,620
<font color="#CCCCCC">elastic search so</font><font color="#E5E5E5"> you exported</font><font color="#CCCCCC"> a</font>

278
00:15:19,780 --> 00:15:26,949
successful search capabilities but as<font color="#E5E5E5"> to</font>

279
00:15:23,620 --> 00:15:33,190
data and<font color="#E5E5E5"> to to retrieve in data</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> call</font>

280
00:15:26,950 --> 00:15:36,089
it all comes from<font color="#CCCCCC"> the database and I</font>

281
00:15:33,190 --> 00:15:38,260
<font color="#E5E5E5">search you can exploit some you can</font>

282
00:15:36,089 --> 00:15:39,100
benefit from<font color="#E5E5E5"> some features from</font><font color="#CCCCCC"> hi</font>

283
00:15:38,260 --> 00:15:43,600
<font color="#CCCCCC">Minotaur I'm</font>

284
00:15:39,100 --> 00:15:46,840
lazy loading<font color="#CCCCCC"> in your book maybe not</font>

285
00:15:43,600 --> 00:15:48,790
everything was<font color="#E5E5E5"> loaded right away but if</font>

286
00:15:46,840 --> 00:15:51,520
at some<font color="#E5E5E5"> point later in your code you</font>

287
00:15:48,790 --> 00:15:55,829
will you access a<font color="#CCCCCC"> gator of your book</font><font color="#E5E5E5"> the</font>

288
00:15:51,520 --> 00:16:00,220
data can be loaded<font color="#E5E5E5"> lazily as needed and</font>

289
00:15:55,830 --> 00:16:02,650
you could also use<font color="#CCCCCC"> the book to go make</font>

290
00:16:00,220 --> 00:16:06,820
<font color="#E5E5E5">some changes and persist it but that's</font>

291
00:16:02,650 --> 00:16:09,790
not<font color="#CCCCCC"> usually what</font><font color="#E5E5E5"> you need here so how it</font>

292
00:16:06,820 --> 00:16:12,010
works is whenever having a search<font color="#E5E5E5"> sends</font>

293
00:16:09,790 --> 00:16:15,459
<font color="#E5E5E5">the</font><font color="#CCCCCC"> LS the query to elasticsearch it</font>

294
00:16:12,010 --> 00:16:18,730
retrieves the heat it retrieves the<font color="#CCCCCC"> IDS</font>

295
00:16:15,460 --> 00:16:20,800
<font color="#CCCCCC">of</font><font color="#E5E5E5"> each document and then if</font><font color="#CCCCCC"> we ask our</font>

296
00:16:18,730 --> 00:16:23,920
<font color="#CCCCCC">M to retrieve the</font><font color="#E5E5E5"> manage entities</font>

297
00:16:20,800 --> 00:16:31,089
corresponding<font color="#E5E5E5"> to this it hits and just</font>

298
00:16:23,920 --> 00:16:33,310
<font color="#E5E5E5">return that</font><font color="#CCCCCC"> to the user now</font><font color="#E5E5E5"> you may not</font>

299
00:16:31,090 --> 00:16:36,550
want<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you might just want the data</font>

300
00:16:33,310 --> 00:16:38,589
from<font color="#E5E5E5"> elasticsearch and that's fine too</font>

301
00:16:36,550 --> 00:16:40,120
you can do projections<font color="#E5E5E5"> what is called</font>

302
00:16:38,590 --> 00:16:42,310
projections which is basically

303
00:16:40,120 --> 00:16:46,350
retrieving the data from elasticsearch

304
00:16:42,310 --> 00:16:48,790
instead of the database and you<font color="#CCCCCC"> can do</font>

305
00:16:46,350 --> 00:16:53,080
<font color="#E5E5E5">there are lots of other features you can</font>

306
00:16:48,790 --> 00:16:54,849
do<font color="#E5E5E5"> sort each time you need</font><font color="#CCCCCC"> to tell us</font><font color="#E5E5E5"> in</font>

307
00:16:53,080 --> 00:16:57,040
<font color="#CCCCCC">your mapping</font><font color="#E5E5E5"> what you want to do with</font>

308
00:16:54,850 --> 00:16:59,800
each field<font color="#E5E5E5"> and then you'll be able when</font>

309
00:16:57,040 --> 00:17:02,800
<font color="#CCCCCC">you perform a query to create a project</font>

310
00:16:59,800 --> 00:17:05,319
projection using<font color="#CCCCCC"> a</font><font color="#E5E5E5"> DSL you describe your</font>

311
00:17:02,800 --> 00:17:07,060
projection<font color="#CCCCCC"> I want to project on</font><font color="#E5E5E5"> the on</font>

312
00:17:05,319 --> 00:17:14,859
the title<font color="#E5E5E5"> field and I expect it as a</font>

313
00:17:07,060 --> 00:17:18,639
string you use predicates<font color="#E5E5E5"> you can define</font>

314
00:17:14,859 --> 00:17:20,439
a sort<font color="#CCCCCC"> - on the category field and then</font>

315
00:17:18,640 --> 00:17:22,510
by score when the category is the same

316
00:17:20,440 --> 00:17:25,080
for two<font color="#E5E5E5"> documents you build your query</font>

317
00:17:22,510 --> 00:17:27,879
<font color="#E5E5E5">and you retrieve</font><font color="#CCCCCC"> the results as strings</font>

318
00:17:25,079 --> 00:17:34,990
since you mentioned you wanted the title

319
00:17:27,880 --> 00:17:38,500
<font color="#E5E5E5">other string there are many other</font>

320
00:17:34,990 --> 00:17:40,240
features<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> of course of all sorts</font>

321
00:17:38,500 --> 00:17:42,460
of predicates you can have boolean

322
00:17:40,240 --> 00:17:47,100
<font color="#E5E5E5">junctions that allow you</font><font color="#CCCCCC"> to combine the</font>

323
00:17:42,460 --> 00:17:51,340
<font color="#CCCCCC">predicates</font><font color="#E5E5E5"> you can do spatial spatial</font>

324
00:17:47,100 --> 00:17:52,550
predicates you can do more complex

325
00:17:51,340 --> 00:17:55,280
projections

326
00:17:52,550 --> 00:17:57,230
you will project<font color="#CCCCCC"> on multiple fields and</font>

327
00:17:55,280 --> 00:17:59,750
combine them in a<font color="#CCCCCC"> single beam that we</font>

328
00:17:57,230 --> 00:18:01,670
will retrieve<font color="#E5E5E5"> from your query for</font>

329
00:17:59,750 --> 00:18:03,320
example<font color="#CCCCCC"> if you want both the title</font><font color="#E5E5E5"> and</font>

330
00:18:01,670 --> 00:18:06,980
<font color="#E5E5E5">the score of the document</font><font color="#CCCCCC"> you can do</font>

331
00:18:03,320 --> 00:18:11,419
that<font color="#E5E5E5"> you put them in a pair and you</font><font color="#CCCCCC"> just</font>

332
00:18:06,980 --> 00:18:14,330
retrieve that from your query so there

333
00:18:11,420 --> 00:18:19,340
<font color="#E5E5E5">are a few</font><font color="#CCCCCC"> features like</font><font color="#E5E5E5"> that which are</font>

334
00:18:14,330 --> 00:18:24,070
made to make your life simple

335
00:18:19,340 --> 00:18:31,250
do we have<font color="#E5E5E5"> yeah we</font><font color="#CCCCCC"> do have a</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of time</font>

336
00:18:24,070 --> 00:18:35,620
<font color="#E5E5E5">so a few details</font><font color="#CCCCCC"> about the a</font><font color="#E5E5E5"> succession</font>

337
00:18:31,250 --> 00:18:37,730
<font color="#E5E5E5">plate integration the schema I mentioned</font>

338
00:18:35,620 --> 00:18:40,330
<font color="#CCCCCC">Hammond search I</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> push it</font>

339
00:18:37,730 --> 00:18:42,770
<font color="#E5E5E5">automatically to elastic search for you</font>

340
00:18:40,330 --> 00:18:46,840
<font color="#CCCCCC">there are several strategies to</font><font color="#E5E5E5"> manage</font>

341
00:18:42,770 --> 00:18:50,540
the what is called<font color="#CCCCCC"> the</font><font color="#E5E5E5"> index lifecycle</font>

342
00:18:46,840 --> 00:18:52,370
you could do nothing<font color="#CCCCCC"> you tell I'm in</font>

343
00:18:50,540 --> 00:18:55,490
<font color="#E5E5E5">search I want to manage the schema</font>

344
00:18:52,370 --> 00:18:58,280
<font color="#E5E5E5">myself</font><font color="#CCCCCC"> I know what I'm doing I'm putting</font>

345
00:18:55,490 --> 00:19:00,620
lots of particular settings in the

346
00:18:58,280 --> 00:19:02,210
schema and<font color="#E5E5E5"> I don't want to make and we</font>

347
00:19:00,620 --> 00:19:04,729
don't want how<font color="#CCCCCC"> many search to</font><font color="#E5E5E5"> mess mess</font>

348
00:19:02,210 --> 00:19:07,160
with that<font color="#E5E5E5"> that's possible</font><font color="#CCCCCC"> you can tell</font>

349
00:19:04,730 --> 00:19:11,240
how many<font color="#E5E5E5"> search to create it and if it</font>

350
00:19:07,160 --> 00:19:13,790
already exists<font color="#CCCCCC"> just do</font><font color="#E5E5E5"> nothing you can</font>

351
00:19:11,240 --> 00:19:17,060
experiment<font color="#E5E5E5"> search to expect it to exist</font>

352
00:19:13,790 --> 00:19:18,170
and to<font color="#CCCCCC"> validate it if it matches the</font>

353
00:19:17,060 --> 00:19:21,669
configuration<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have in your</font>

354
00:19:18,170 --> 00:19:24,890
application<font color="#CCCCCC"> you can tell it to</font><font color="#E5E5E5"> update</font>

355
00:19:21,670 --> 00:19:27,830
automatically the schema which is a bit

356
00:19:24,890 --> 00:19:30,830
more<font color="#CCCCCC"> dangerous because updates</font><font color="#E5E5E5"> can fail</font>

357
00:19:27,830 --> 00:19:34,760
of course<font color="#CCCCCC"> if your data</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> your mapping</font>

358
00:19:30,830 --> 00:19:38,000
changing<font color="#E5E5E5"> child in a way that data needs</font>

359
00:19:34,760 --> 00:19:41,090
to be reindex<font color="#E5E5E5"> this kind of strategy will</font>

360
00:19:38,000 --> 00:19:46,670
fail<font color="#E5E5E5"> but still it's useful in develop</font>

361
00:19:41,090 --> 00:19:49,490
development environments<font color="#CCCCCC"> these ones are</font>

362
00:19:46,670 --> 00:19:51,440
also<font color="#E5E5E5"> useful for tests mainly you can</font>

363
00:19:49,490 --> 00:19:53,510
turn<font color="#E5E5E5"> home and</font><font color="#CCCCCC"> switch to</font><font color="#E5E5E5"> just drop the</font>

364
00:19:51,440 --> 00:19:59,600
current index<font color="#E5E5E5"> create a new one and drop</font>

365
00:19:53,510 --> 00:20:02,090
it when it shuts down and of course I

366
00:19:59,600 --> 00:20:04,129
talked<font color="#CCCCCC"> about</font><font color="#E5E5E5"> on-the-fly indexing</font>

367
00:20:02,090 --> 00:20:05,840
whenever you<font color="#E5E5E5"> pass this persist your</font>

368
00:20:04,130 --> 00:20:08,240
entities<font color="#E5E5E5"> but</font>

369
00:20:05,840 --> 00:20:10,370
you might have an application<font color="#E5E5E5"> with data</font>

370
00:20:08,240 --> 00:20:13,100
already<font color="#CCCCCC"> in the database and you want to</font>

371
00:20:10,370 --> 00:20:15,409
index all<font color="#E5E5E5"> of it so that everything is</font>

372
00:20:13,100 --> 00:20:17,480
<font color="#E5E5E5">available</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> elasticsearch you can do</font>

373
00:20:15,410 --> 00:20:21,200
that<font color="#E5E5E5"> with what is called</font><font color="#CCCCCC"> in mass index</font>

374
00:20:17,480 --> 00:20:25,420
<font color="#CCCCCC">er</font><font color="#E5E5E5"> where you just tell us what entity to</font>

375
00:20:21,200 --> 00:20:29,720
index<font color="#E5E5E5"> and you tell</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> to do its work</font>

376
00:20:25,420 --> 00:20:33,200
<font color="#E5E5E5">obviously it's a heavy process to take</font>

377
00:20:29,720 --> 00:20:37,070
some time<font color="#E5E5E5"> so you will need</font><font color="#CCCCCC"> to tune it if</font>

378
00:20:33,200 --> 00:20:39,440
you want to<font color="#CCCCCC"> it to perform perform well</font>

379
00:20:37,070 --> 00:20:41,980
so you<font color="#E5E5E5"> have several options to tune</font>

380
00:20:39,440 --> 00:20:44,540
that's that process which is will spawn

381
00:20:41,980 --> 00:20:46,540
several threads<font color="#E5E5E5"> load the data from</font><font color="#CCCCCC"> the</font>

382
00:20:44,540 --> 00:20:52,760
<font color="#CCCCCC">database</font><font color="#E5E5E5"> and push it to elasticsearch</font>

383
00:20:46,540 --> 00:20:55,490
and if you want to give it a try I've

384
00:20:52,760 --> 00:20:58,790
been in church<font color="#CCCCCC"> six is still in alpha so</font>

385
00:20:55,490 --> 00:21:01,520
there are some serious limitations<font color="#CCCCCC"> still</font>

386
00:20:58,790 --> 00:21:03,710
you don't<font color="#E5E5E5"> have all field types there are</font>

387
00:21:01,520 --> 00:21:07,389
<font color="#E5E5E5">some missing features the api's are</font>

388
00:21:03,710 --> 00:21:11,210
still unstable<font color="#CCCCCC"> so we're getting closer</font>

389
00:21:07,390 --> 00:21:13,340
<font color="#E5E5E5">but you can try it reports and</font>

390
00:21:11,210 --> 00:21:16,460
contributions are welcome<font color="#E5E5E5"> there's a demo</font>

391
00:21:13,340 --> 00:21:18,889
at this address<font color="#CCCCCC"> and if you want to use</font>

392
00:21:16,460 --> 00:21:21,230
<font color="#CCCCCC">have insertion production you should</font>

393
00:21:18,890 --> 00:21:24,590
<font color="#CCCCCC">rather have a look at search five</font><font color="#E5E5E5"> for</font>

394
00:21:21,230 --> 00:21:26,900
now which has different<font color="#CCCCCC"> API</font><font color="#E5E5E5"> and is</font>

395
00:21:24,590 --> 00:21:29,090
focused on embedded<font color="#CCCCCC"> Lucene mode</font><font color="#E5E5E5"> so it</font>

396
00:21:26,900 --> 00:21:31,940
also has experimental support<font color="#E5E5E5"> for</font>

397
00:21:29,090 --> 00:21:34,730
elastic search<font color="#E5E5E5"> but since the API are the</font>

398
00:21:31,940 --> 00:21:37,490
areas are<font color="#CCCCCC"> tonight's for Racine it's not</font>

399
00:21:34,730 --> 00:21:43,510
the best<font color="#E5E5E5"> fit that's why we're doing a</font>

400
00:21:37,490 --> 00:21:51,880
<font color="#E5E5E5">Hammond</font><font color="#CCCCCC"> sir six and that's all thank</font><font color="#E5E5E5"> you</font>

401
00:21:43,510 --> 00:21:51,879
[Applause]

402
00:22:09,740 --> 00:22:16,730
so that's a problem<font color="#E5E5E5"> we don't</font><font color="#CCCCCC"> tackle the</font>

403
00:22:14,880 --> 00:22:19,890
question was how do<font color="#E5E5E5"> you deal with</font><font color="#CCCCCC"> a</font>

404
00:22:16,730 --> 00:22:21,960
update<font color="#E5E5E5"> intensive application where</font>

405
00:22:19,890 --> 00:22:25,919
usually<font color="#CCCCCC"> you would drop the index and</font>

406
00:22:21,960 --> 00:22:28,169
reindex everything<font color="#CCCCCC"> Hut updates are not</font>

407
00:22:25,919 --> 00:22:30,570
<font color="#CCCCCC">something we support</font><font color="#E5E5E5"> right now but we</font>

408
00:22:28,169 --> 00:22:33,960
know we have to update it<font color="#E5E5E5"> we're thinking</font>

409
00:22:30,570 --> 00:22:38,039
about<font color="#E5E5E5"> solutions</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> in order to do that</font>

410
00:22:33,960 --> 00:22:40,950
we<font color="#CCCCCC"> first need</font><font color="#E5E5E5"> to implement some sort</font><font color="#CCCCCC"> of</font>

411
00:22:38,039 --> 00:22:43,559
synchronization<font color="#CCCCCC"> between</font><font color="#E5E5E5"> our nodes how</font>

412
00:22:40,950 --> 00:22:45,090
many search nodes<font color="#E5E5E5"> currently we just we</font>

413
00:22:43,559 --> 00:22:47,730
don't<font color="#E5E5E5"> synchronize between the nodes and</font>

414
00:22:45,090 --> 00:22:50,850
<font color="#E5E5E5">we need to add some some sort of</font>

415
00:22:47,730 --> 00:22:53,100
communication<font color="#CCCCCC"> we plan to do that but</font>

416
00:22:50,850 --> 00:23:20,299
that will<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> be four six not</font>

417
00:22:53,100 --> 00:23:23,449
one so the question is is the projection

418
00:23:20,299 --> 00:23:26,399
<font color="#E5E5E5">in a</font><font color="#CCCCCC"> success document</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> travel picked</font>

419
00:23:23,450 --> 00:23:26,970
<font color="#E5E5E5">it's a Java object</font><font color="#CCCCCC"> it's the type size</font>

420
00:23:26,399 --> 00:23:29,100
<font color="#CCCCCC">actually</font>

421
00:23:26,970 --> 00:23:32,299
<font color="#E5E5E5">hi my search does all the</font><font color="#CCCCCC"> work to</font>

422
00:23:29,100 --> 00:23:36,629
convert the data<font color="#E5E5E5"> like if you have a</font>

423
00:23:32,299 --> 00:23:39,809
local date field<font color="#CCCCCC"> its sense to receive</font>

424
00:23:36,630 --> 00:23:41,880
such as<font color="#E5E5E5"> JSON and it's also received as</font>

425
00:23:39,809 --> 00:23:44,250
JSON<font color="#CCCCCC"> it</font><font color="#E5E5E5"> will it will be</font><font color="#CCCCCC"> a string</font><font color="#E5E5E5"> in the</font>

426
00:23:41,880 --> 00:23:47,990
document we will<font color="#E5E5E5"> convert it back to a</font>

427
00:23:44,250 --> 00:23:47,990
<font color="#E5E5E5">local date and give that</font><font color="#CCCCCC"> to you</font>

428
00:24:14,260 --> 00:24:42,370
[Music]

429
00:24:15,659 --> 00:24:45,100
you want to there's the<font color="#CCCCCC"> question yes so</font>

430
00:24:42,370 --> 00:24:46,750
the<font color="#CCCCCC"> question is if you if the</font>

431
00:24:45,100 --> 00:24:51,219
<font color="#E5E5E5">application</font><font color="#CCCCCC"> retrieves the elasticsearch</font>

432
00:24:46,750 --> 00:24:53,620
documents is<font color="#CCCCCC"> hyman search able to use</font>

433
00:24:51,220 --> 00:24:58,029
these documents<font color="#E5E5E5"> later to retrieve the</font>

434
00:24:53,620 --> 00:25:00,459
<font color="#E5E5E5">entities right</font><font color="#CCCCCC"> you can there's the</font>

435
00:24:58,029 --> 00:25:02,409
information inside<font color="#CCCCCC"> the document yes</font><font color="#E5E5E5"> -</font>

436
00:25:00,460 --> 00:25:05,049
<font color="#E5E5E5">there's enough information to retrieve</font>

437
00:25:02,409 --> 00:25:07,600
the entity we actually have a specific

438
00:25:05,049 --> 00:25:10,149
projection for that which is<font color="#E5E5E5"> called the</font>

439
00:25:07,600 --> 00:25:11,860
<font color="#E5E5E5">reference production you</font><font color="#CCCCCC"> can just</font>

440
00:25:10,149 --> 00:25:15,039
retrieve an object that represents<font color="#E5E5E5"> your</font>

441
00:25:11,860 --> 00:25:17,260
entity and it's it's<font color="#E5E5E5"> basically just the</font>

442
00:25:15,039 --> 00:25:21,220
<font color="#E5E5E5">class and the ID and then you can just</font>

443
00:25:17,260 --> 00:25:24,690
use a dihybrid<font color="#E5E5E5"> or multi load operation</font>

444
00:25:21,220 --> 00:25:24,690
to retrieve the entities

445
00:25:30,760 --> 00:25:38,390
[Applause]

