1
00:00:04,620 --> 00:00:09,270
<font color="#E5E5E5">Thanks so this time I would like to</font>

2
00:00:07,110 --> 00:00:11,370
<font color="#E5E5E5">present</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> second tool there is the</font>

3
00:00:09,270 --> 00:00:13,829
<font color="#CCCCCC">Remy's coming</font><font color="#E5E5E5"> that also we have</font>

4
00:00:11,370 --> 00:00:18,710
developed with<font color="#CCCCCC"> Martin</font><font color="#E5E5E5"> ma Peru's there is</font>

5
00:00:13,830 --> 00:00:22,110
for mining instances of code changes<font color="#CCCCCC"> ok</font>

6
00:00:18,710 --> 00:00:27,779
so what is coming coming came from

7
00:00:22,110 --> 00:00:31,080
<font color="#CCCCCC">common mining so in fact</font><font color="#E5E5E5"> two main users</font>

8
00:00:27,779 --> 00:00:34,140
<font color="#E5E5E5">the third one is to compute fine-grained</font>

9
00:00:31,080 --> 00:00:37,010
changes between two conjugates<font color="#E5E5E5"> revisions</font>

10
00:00:34,140 --> 00:00:42,800
and the second and goal is<font color="#CCCCCC"> to mine</font>

11
00:00:37,010 --> 00:00:45,300
<font color="#E5E5E5">instances of code change for instance I</font>

12
00:00:42,800 --> 00:00:51,809
want to get all the commits that

13
00:00:45,300 --> 00:00:54,059
<font color="#E5E5E5">introduced and if I return</font><font color="#CCCCCC"> ok each</font>

14
00:00:51,809 --> 00:00:59,510
commit will be an instance or we have an

15
00:00:54,059 --> 00:01:02,370
instance of this change pattern and also

16
00:00:59,510 --> 00:01:05,128
one thing that common<font color="#CCCCCC"> also provides is</font>

17
00:01:02,370 --> 00:01:08,429
to<font color="#E5E5E5"> compute the frequencies of code</font>

18
00:01:05,129 --> 00:01:11,280
changes<font color="#CCCCCC"> ok for instance it returned the</font>

19
00:01:08,430 --> 00:01:16,709
<font color="#CCCCCC">number</font><font color="#E5E5E5"> of commits that add for instance</font>

20
00:01:11,280 --> 00:01:22,410
<font color="#CCCCCC">our return needed ok these are go</font><font color="#E5E5E5"> so why</font>

21
00:01:16,709 --> 00:01:24,720
we create<font color="#CCCCCC"> coming so with tools</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> third</font>

22
00:01:22,410 --> 00:01:27,660
one we want to<font color="#E5E5E5"> study super revolution</font>

23
00:01:24,720 --> 00:01:31,020
and the second<font color="#CCCCCC"> one was to support</font><font color="#E5E5E5"> our</font>

24
00:01:27,660 --> 00:01:34,819
research<font color="#E5E5E5"> about automatic stove repair</font>

25
00:01:31,020 --> 00:01:37,979
<font color="#CCCCCC">order</font><font color="#E5E5E5"> I present during the morning so</font>

26
00:01:34,819 --> 00:01:40,700
the study<font color="#E5E5E5"> disappear evolution we wanted</font>

27
00:01:37,979 --> 00:01:44,849
to know how<font color="#E5E5E5"> an applications evolve</font>

28
00:01:40,700 --> 00:01:47,670
during the<font color="#CCCCCC"> life time it's a life cycle</font>

29
00:01:44,849 --> 00:01:51,479
in particular we wanted to know how

30
00:01:47,670 --> 00:01:53,970
developers<font color="#E5E5E5"> prepare bugs for instance the</font>

31
00:01:51,479 --> 00:01:55,830
probability of changes which are the

32
00:01:53,970 --> 00:01:59,239
committee introduced<font color="#CCCCCC"> bug fixes with</font>

33
00:01:55,830 --> 00:02:03,630
which probability are true for instance

34
00:01:59,239 --> 00:02:07,020
doing<font color="#E5E5E5"> some kind of changes it's done and</font>

35
00:02:03,630 --> 00:02:09,720
the second one so the<font color="#CCCCCC"> state-of-the-art</font>

36
00:02:07,020 --> 00:02:12,510
<font color="#CCCCCC">about this software evolution studies of</font>

37
00:02:09,720 --> 00:02:18,300
revolution was when we start doing

38
00:02:12,510 --> 00:02:21,269
coming there were one tool that

39
00:02:18,300 --> 00:02:25,920
was ever I<font color="#E5E5E5"> heard that was basically was</font>

40
00:02:21,270 --> 00:02:30,690
it that database that store<font color="#E5E5E5"> all the</font>

41
00:02:25,920 --> 00:02:33,920
changes from<font color="#CCCCCC"> leads repository was a</font>

42
00:02:30,690 --> 00:02:37,109
<font color="#E5E5E5">relational database and all the changes</font>

43
00:02:33,920 --> 00:02:40,760
were<font color="#E5E5E5"> computed with an algorithm and also</font>

44
00:02:37,110 --> 00:02:43,290
was<font color="#CCCCCC"> the tool that the name is Chancellor</font>

45
00:02:40,760 --> 00:02:46,820
but<font color="#E5E5E5"> the problem that we found in that</font>

46
00:02:43,290 --> 00:02:51,000
time was<font color="#CCCCCC"> that the code change that</font>

47
00:02:46,820 --> 00:02:54,570
change<font color="#E5E5E5"> Silla provides was to coarse</font>

48
00:02:51,000 --> 00:02:57,960
<font color="#CCCCCC">grain level</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> instance one of the</font>

49
00:02:54,570 --> 00:03:00,000
output of<font color="#CCCCCC"> change stealer was</font><font color="#E5E5E5"> update</font><font color="#CCCCCC"> of</font>

50
00:02:57,960 --> 00:03:03,270
method<font color="#E5E5E5"> invocation imagine that you have</font>

51
00:03:00,000 --> 00:03:04,920
<font color="#CCCCCC">this change and CDT</font><font color="#E5E5E5"> let's say okay here</font>

52
00:03:03,270 --> 00:03:06,180
you have an update of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> metal</font>

53
00:03:04,920 --> 00:03:09,780
<font color="#E5E5E5">invocation that is right</font>

54
00:03:06,180 --> 00:03:12,840
electronic the change was it<font color="#E5E5E5"> changed the</font>

55
00:03:09,780 --> 00:03:15,060
<font color="#E5E5E5">arguments the parameter so it's</font><font color="#CCCCCC"> too</font>

56
00:03:12,840 --> 00:03:20,910
<font color="#CCCCCC">constrained so actually we wanted to say</font>

57
00:03:15,060 --> 00:03:22,980
<font color="#CCCCCC">okay here we</font><font color="#E5E5E5"> have an update of the</font><font color="#CCCCCC"> first</font>

58
00:03:20,910 --> 00:03:28,079
argument in a<font color="#E5E5E5"> written invocation that</font>

59
00:03:22,980 --> 00:03:31,350
this is<font color="#E5E5E5"> final rain change so the second</font>

60
00:03:28,080 --> 00:03:36,620
part<font color="#E5E5E5"> of our research</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> to supporting</font>

61
00:03:31,350 --> 00:03:40,079
our<font color="#CCCCCC"> search about automatic on repair so</font>

62
00:03:36,620 --> 00:03:44,730
we need bugs<font color="#E5E5E5"> and we need bags for</font>

63
00:03:40,080 --> 00:03:48,360
repairing for testing our tools<font color="#E5E5E5"> as after</font>

64
00:03:44,730 --> 00:03:51,090
that one right percent<font color="#E5E5E5"> before so to</font>

65
00:03:48,360 --> 00:03:55,320
evaluate automotive repair tools we need

66
00:03:51,090 --> 00:03:59,630
<font color="#E5E5E5">major revisions to apply over repair</font>

67
00:03:55,320 --> 00:04:02,280
approaches and the<font color="#E5E5E5"> patcher version</font><font color="#CCCCCC"> okay</font>

68
00:03:59,630 --> 00:04:05,910
why we need<font color="#E5E5E5"> a petrol version because we</font>

69
00:04:02,280 --> 00:04:08,400
need to<font color="#E5E5E5"> know which</font><font color="#CCCCCC"> is the patch</font><font color="#E5E5E5"> that</font>

70
00:04:05,910 --> 00:04:11,010
developer have written to repair the

71
00:04:08,400 --> 00:04:14,730
back<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and then with this patch</font>

72
00:04:11,010 --> 00:04:17,039
version we<font color="#CCCCCC"> can compare our result that</font>

73
00:04:14,730 --> 00:04:19,858
that<font color="#E5E5E5"> means our patches that were</font>

74
00:04:17,040 --> 00:04:24,600
automatically generated<font color="#E5E5E5"> we don't want</font>

75
00:04:19,858 --> 00:04:29,490
that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> developer</font><font color="#E5E5E5"> have create so the</font>

76
00:04:24,600 --> 00:04:33,770
goal is we wanted to mine<font color="#CCCCCC"> by additional</font>

77
00:04:29,490 --> 00:04:33,770
<font color="#E5E5E5">party revisions with our tool coming</font>

78
00:04:34,010 --> 00:04:41,159
for instance at<font color="#CCCCCC"> that time we</font><font color="#E5E5E5"> present an</font>

79
00:04:38,300 --> 00:04:44,480
automatic repair system that the name<font color="#E5E5E5"> is</font>

80
00:04:41,160 --> 00:04:47,370
Nepal the<font color="#CCCCCC"> daddy of Nepal is was to</font>

81
00:04:44,480 --> 00:04:51,980
repair if conditions<font color="#E5E5E5"> emotional you have</font>

82
00:04:47,370 --> 00:04:55,110
a back in one condition inside the<font color="#CCCCCC"> if</font>

83
00:04:51,980 --> 00:04:56,190
and also to add missing preconditions

84
00:04:55,110 --> 00:04:58,740
<font color="#CCCCCC">okay</font>

85
00:04:56,190 --> 00:05:00,900
this were are the diff there are<font color="#CCCCCC"> galore</font>

86
00:04:58,740 --> 00:05:06,360
the kind of<font color="#E5E5E5"> patch is that Nepal system</font>

87
00:05:00,900 --> 00:05:11,940
are able to<font color="#E5E5E5"> repair to generate so when</font>

88
00:05:06,360 --> 00:05:15,210
we wanted<font color="#E5E5E5"> to evaluate Nepal we wanted to</font>

89
00:05:11,940 --> 00:05:19,290
mine<font color="#CCCCCC"> real problems</font><font color="#E5E5E5"> real calm real</font>

90
00:05:15,210 --> 00:05:27,120
instances<font color="#CCCCCC"> of programs that</font><font color="#E5E5E5"> caused this</font>

91
00:05:19,290 --> 00:05:31,320
kind of bugs<font color="#E5E5E5"> so we use money to finding</font>

92
00:05:27,120 --> 00:05:34,920
<font color="#CCCCCC">commit</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> introduced a</font><font color="#E5E5E5"> change inside</font>

93
00:05:31,320 --> 00:05:38,730
and if conditions or to add and if<font color="#CCCCCC"> per</font>

94
00:05:34,920 --> 00:05:43,250
<font color="#E5E5E5">condition we also wanted that they</font>

95
00:05:38,730 --> 00:05:45,750
commit was the<font color="#E5E5E5"> commitments our story</font>

96
00:05:43,250 --> 00:05:53,210
<font color="#CCCCCC">includes</font><font color="#E5E5E5"> some keywords for instance a</font>

97
00:05:45,750 --> 00:05:56,750
link to a report<font color="#CCCCCC"> and also also wanted to</font>

98
00:05:53,210 --> 00:06:00,180
get those commits<font color="#CCCCCC"> that</font><font color="#E5E5E5"> introduced</font>

99
00:05:56,750 --> 00:06:02,780
obviously the<font color="#CCCCCC"> if condition change turn</font>

100
00:06:00,180 --> 00:06:07,640
<font color="#E5E5E5">in the patch or the</font><font color="#CCCCCC"> precondition to</font>

101
00:06:02,780 --> 00:06:11,219
<font color="#CCCCCC">change the the message and also</font><font color="#E5E5E5"> that</font>

102
00:06:07,640 --> 00:06:14,820
<font color="#CCCCCC">introduce a change in the test cases</font><font color="#E5E5E5"> why</font>

103
00:06:11,220 --> 00:06:17,100
this because we wanted to to know

104
00:06:14,820 --> 00:06:19,620
whether the test cases were updated

105
00:06:17,100 --> 00:06:28,220
<font color="#E5E5E5">according when the patch is introduced</font>

106
00:06:19,620 --> 00:06:34,020
so<font color="#CCCCCC"> welcoming works so the input are</font><font color="#E5E5E5"> to</font>

107
00:06:28,220 --> 00:06:36,860
one can be they get repository<font color="#E5E5E5"> that we</font>

108
00:06:34,020 --> 00:06:40,080
want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> main</font><font color="#E5E5E5"> to mine okay to analyze and</font>

109
00:06:36,860 --> 00:06:43,620
optionally we we have another format

110
00:06:40,080 --> 00:06:45,930
<font color="#E5E5E5">that is that to include one folder with</font>

111
00:06:43,620 --> 00:06:47,669
pairs of files<font color="#CCCCCC"> ok for in</font>

112
00:06:45,930 --> 00:06:49,680
and one<font color="#CCCCCC"> of the one of the</font><font color="#E5E5E5"> file of</font><font color="#CCCCCC"> the</font>

113
00:06:47,669 --> 00:06:51,960
pair is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> baggy version and the other</font>

114
00:06:49,680 --> 00:06:53,729
is the patch that<font color="#CCCCCC"> mean</font><font color="#E5E5E5"> if you want you</font>

115
00:06:51,960 --> 00:06:58,430
don't<font color="#CCCCCC"> have the information to analyze in</font>

116
00:06:53,729 --> 00:07:03,508
a git repository<font color="#E5E5E5"> repository you can and</font>

117
00:06:58,430 --> 00:07:09,840
come in<font color="#CCCCCC"> is</font><font color="#E5E5E5"> able to</font><font color="#CCCCCC"> analyze pack a pairs</font>

118
00:07:03,509 --> 00:07:15,270
of files in<font color="#E5E5E5"> this talk I will suppose</font>

119
00:07:09,840 --> 00:07:17,869
that we<font color="#E5E5E5"> analyze git</font><font color="#CCCCCC"> commit</font><font color="#E5E5E5"> so this is</font>

120
00:07:15,270 --> 00:07:23,460
the workflow<font color="#E5E5E5"> for each commit</font>

121
00:07:17,870 --> 00:07:26,580
first we<font color="#CCCCCC"> applied some filters according</font>

122
00:07:23,460 --> 00:07:29,430
for instance to<font color="#E5E5E5"> the number of</font><font color="#CCCCCC"> 5 modifier</font>

123
00:07:26,580 --> 00:07:31,620
<font color="#E5E5E5">the number of</font><font color="#CCCCCC"> chunks that</font><font color="#E5E5E5"> each file</font>

124
00:07:29,430 --> 00:07:34,380
introduced the size of the<font color="#CCCCCC"> hands in</font>

125
00:07:31,620 --> 00:07:37,740
number of<font color="#E5E5E5"> line of</font><font color="#CCCCCC"> codes</font><font color="#E5E5E5"> the presence of</font>

126
00:07:34,380 --> 00:07:40,520
keywords in the commit etc so we apply

127
00:07:37,740 --> 00:07:45,509
the<font color="#E5E5E5"> filters and then we decide whether</font>

128
00:07:40,520 --> 00:07:48,469
we<font color="#E5E5E5"> accept the commit or not if we</font>

129
00:07:45,509 --> 00:07:53,159
accepted<font color="#E5E5E5"> commit then we analyze each</font>

130
00:07:48,470 --> 00:07:57,360
<font color="#E5E5E5">file that</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> modified</font><font color="#CCCCCC"> by the commit ok</font>

131
00:07:53,159 --> 00:08:00,810
we call it<font color="#E5E5E5"> file commit and then for</font><font color="#CCCCCC"> each</font>

132
00:07:57,360 --> 00:08:04,139
file we generate the<font color="#CCCCCC"> ast representation</font>

133
00:08:00,810 --> 00:08:09,599
of the modifier file that we call F and

134
00:08:04,139 --> 00:08:14,010
the previous<font color="#CCCCCC"> version okay so given</font><font color="#E5E5E5"> a</font>

135
00:08:09,599 --> 00:08:17,310
file we compute the ast and<font color="#E5E5E5"> here we</font><font color="#CCCCCC"> note</font>

136
00:08:14,010 --> 00:08:20,880
<font color="#E5E5E5">that there are</font><font color="#CCCCCC"> different ways to create</font>

137
00:08:17,310 --> 00:08:22,349
this tilde means that each node can

138
00:08:20,880 --> 00:08:25,650
correspond to different granularities

139
00:08:22,349 --> 00:08:30,479
<font color="#CCCCCC">for instance the I got information</font>

140
00:08:25,650 --> 00:08:33,240
before<font color="#E5E5E5"> 20</font><font color="#CCCCCC"> steerer use a steed are the</font>

141
00:08:30,479 --> 00:08:37,439
nodes are very coarse level that means

142
00:08:33,240 --> 00:08:40,440
that for<font color="#CCCCCC"> instance the invocation they</font>

143
00:08:37,440 --> 00:08:44,760
have all<font color="#CCCCCC"> information about the method</font>

144
00:08:40,440 --> 00:08:48,270
invocation<font color="#E5E5E5"> inside one</font><font color="#CCCCCC"> node okay and</font>

145
00:08:44,760 --> 00:08:51,450
another representation of<font color="#CCCCCC"> a tea for</font>

146
00:08:48,270 --> 00:08:54,569
<font color="#E5E5E5">instance</font><font color="#CCCCCC"> Eclipse CDT was</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> ferrell</font><font color="#E5E5E5"> fine</font>

147
00:08:51,450 --> 00:08:58,440
<font color="#E5E5E5">- fine grain level</font><font color="#CCCCCC"> there were a lot of</font>

148
00:08:54,570 --> 00:08:59,640
<font color="#CCCCCC">nodes with not much information so</font><font color="#E5E5E5"> we</font>

149
00:08:58,440 --> 00:09:02,400
<font color="#CCCCCC">decide to work</font>

150
00:08:59,640 --> 00:09:04,770
the level of the metamodel<font color="#CCCCCC"> of spoon</font>

151
00:09:02,400 --> 00:09:11,280
spooning it's a tool with with a library

152
00:09:04,770 --> 00:09:14,010
for<font color="#E5E5E5"> analyze transform</font><font color="#CCCCCC"> write code in</font><font color="#E5E5E5"> Java</font>

153
00:09:11,280 --> 00:09:17,180
this is the metamodel<font color="#E5E5E5"> so we wanted to</font>

154
00:09:14,010 --> 00:09:20,400
<font color="#CCCCCC">create AST with that level of</font>

155
00:09:17,180 --> 00:09:23,910
<font color="#E5E5E5">granularity</font><font color="#CCCCCC"> does</font><font color="#E5E5E5"> that mean that given a</font>

156
00:09:20,400 --> 00:09:28,319
file<font color="#CCCCCC"> we use the spoon to create an AST</font>

157
00:09:23,910 --> 00:09:34,829
where each node is an element from the

158
00:09:28,320 --> 00:09:38,640
spoon<font color="#CCCCCC"> metamodel so once that</font><font color="#E5E5E5"> so the</font>

159
00:09:34,830 --> 00:09:43,380
difference is that the spoon granularity

160
00:09:38,640 --> 00:09:47,939
is much finer<font color="#E5E5E5"> that the chain stealer but</font>

161
00:09:43,380 --> 00:09:50,610
is a bit<font color="#E5E5E5"> more coarse level</font><font color="#CCCCCC"> than the</font>

162
00:09:47,940 --> 00:09:56,030
charity that<font color="#E5E5E5"> allows us to have more</font>

163
00:09:50,610 --> 00:09:59,430
compact<font color="#CCCCCC"> AST so one that</font><font color="#E5E5E5"> we have the qu</font>

164
00:09:56,030 --> 00:10:01,800
est one from the<font color="#E5E5E5"> previous version of the</font>

165
00:09:59,430 --> 00:10:03,900
file modify<font color="#E5E5E5"> or I'll commit and the file</font>

166
00:10:01,800 --> 00:10:09,300
from the<font color="#E5E5E5"> commit we compute the</font>

167
00:10:03,900 --> 00:10:12,600
differences between these<font color="#E5E5E5"> two</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> T so</font>

168
00:10:09,300 --> 00:10:16,140
for computing the the<font color="#E5E5E5"> differences so</font><font color="#CCCCCC"> we</font>

169
00:10:12,600 --> 00:10:19,530
we have the qu est and we apply an

170
00:10:16,140 --> 00:10:23,970
<font color="#E5E5E5">algorithm that compare the two</font><font color="#CCCCCC"> highest e</font>

171
00:10:19,530 --> 00:10:28,860
and marks the change<font color="#E5E5E5"> that they</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> have</font>

172
00:10:23,970 --> 00:10:31,110
<font color="#E5E5E5">coming change remove update or move we</font>

173
00:10:28,860 --> 00:10:35,430
use during<font color="#CCCCCC"> the</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> developed</font><font color="#E5E5E5"> that is</font>

174
00:10:31,110 --> 00:10:40,020
the<font color="#CCCCCC"> Ramos</font><font color="#E5E5E5"> country damn tree has two</font>

175
00:10:35,430 --> 00:10:43,770
inputs<font color="#E5E5E5"> laser as input</font><font color="#CCCCCC"> 2 3</font><font color="#E5E5E5"> ok</font><font color="#CCCCCC"> and the</font>

176
00:10:40,020 --> 00:10:46,170
<font color="#CCCCCC">output</font><font color="#E5E5E5"> is a list of operations and each</font>

177
00:10:43,770 --> 00:10:48,720
operation<font color="#E5E5E5"> is associated to one node</font><font color="#CCCCCC"> ok</font>

178
00:10:46,170 --> 00:10:56,699
the operation available<font color="#CCCCCC"> are</font>

179
00:10:48,720 --> 00:11:00,120
insert/remove update<font color="#E5E5E5"> and move</font><font color="#CCCCCC"> ok once</font>

180
00:10:56,700 --> 00:11:01,560
<font color="#E5E5E5">that we have the result given by</font><font color="#CCCCCC"> xx</font>

181
00:11:00,120 --> 00:11:05,100
<font color="#CCCCCC">tiller</font><font color="#E5E5E5"> that means the differences</font>

182
00:11:01,560 --> 00:11:08,670
between the<font color="#E5E5E5"> two HT we want to know</font>

183
00:11:05,100 --> 00:11:12,930
whether these changes<font color="#E5E5E5"> has an instance of</font>

184
00:11:08,670 --> 00:11:17,770
a code pattern<font color="#E5E5E5"> ok</font>

185
00:11:12,930 --> 00:11:20,560
so<font color="#CCCCCC"> incoming we have defined the concept</font>

186
00:11:17,770 --> 00:11:22,990
<font color="#E5E5E5">of change pattern that change patterns</font>

187
00:11:20,560 --> 00:11:29,280
define a set<font color="#E5E5E5"> of changes between two</font>

188
00:11:22,990 --> 00:11:31,810
files so a change<font color="#E5E5E5"> matter has one or more</font>

189
00:11:29,280 --> 00:11:34,209
<font color="#E5E5E5">pattern option that means that a pattern</font>

190
00:11:31,810 --> 00:11:37,869
<font color="#E5E5E5">action describe one particular change</font>

191
00:11:34,210 --> 00:11:42,610
for instance<font color="#E5E5E5"> one</font><font color="#CCCCCC"> inserts</font><font color="#E5E5E5"> one remove okay</font>

192
00:11:37,870 --> 00:11:47,460
and one pattern action<font color="#E5E5E5"> casts the type of</font>

193
00:11:42,610 --> 00:11:54,120
<font color="#E5E5E5">options that</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> those that came from</font>

194
00:11:47,460 --> 00:11:54,120
Gumtree insert move removal<font color="#CCCCCC"> date</font><font color="#E5E5E5"> a</font>

195
00:11:54,810 --> 00:12:00,400
<font color="#E5E5E5">patron entity that is the</font><font color="#CCCCCC"> description</font><font color="#E5E5E5"> of</font>

196
00:11:58,330 --> 00:12:06,970
<font color="#CCCCCC">the code element that is effectively</font>

197
00:12:00,400 --> 00:12:09,490
change this pattern<font color="#E5E5E5"> entity has three</font>

198
00:12:06,970 --> 00:12:12,850
properties<font color="#E5E5E5"> one</font><font color="#CCCCCC"> is the type for instance</font>

199
00:12:09,490 --> 00:12:16,780
the type of element is a return<font color="#E5E5E5"> and an</font>

200
00:12:12,850 --> 00:12:19,900
if and why an expression<font color="#E5E5E5"> a parameter</font>

201
00:12:16,780 --> 00:12:22,870
<font color="#E5E5E5">let's draw the value okay for instance a</font>

202
00:12:19,900 --> 00:12:27,250
parameter<font color="#CCCCCC"> that the name</font><font color="#E5E5E5"> is my parameter</font>

203
00:12:22,870 --> 00:12:29,020
or my metal cold etc<font color="#CCCCCC"> return noodle</font><font color="#E5E5E5"> and</font>

204
00:12:27,250 --> 00:12:32,980
<font color="#E5E5E5">the</font><font color="#CCCCCC"> parent there is a reference to</font>

205
00:12:29,020 --> 00:12:35,980
<font color="#CCCCCC">another parent entity</font><font color="#E5E5E5"> okay for instance</font>

206
00:12:32,980 --> 00:12:39,700
here with with this parent<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can say</font>

207
00:12:35,980 --> 00:12:41,740
okay I want<font color="#E5E5E5"> to detect all</font><font color="#CCCCCC"> the changes</font>

208
00:12:39,700 --> 00:12:47,440
all<font color="#E5E5E5"> the method invocations that are</font>

209
00:12:41,740 --> 00:12:51,100
inside any condition okay<font color="#E5E5E5"> here we say</font>

210
00:12:47,440 --> 00:12:55,260
that<font color="#CCCCCC"> the parent alone to express the</font>

211
00:12:51,100 --> 00:12:59,620
entity that<font color="#CCCCCC"> is affect and the parent so</font>

212
00:12:55,260 --> 00:13:03,970
coming<font color="#CCCCCC"> provides an option</font><font color="#E5E5E5"> to create</font><font color="#CCCCCC"> this</font>

213
00:12:59,620 --> 00:13:12,490
change pattern that is using<font color="#E5E5E5"> XML here we</font>

214
00:13:03,970 --> 00:13:15,310
have<font color="#E5E5E5"> a small</font><font color="#CCCCCC"> example of this XML</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> I</font>

215
00:13:12,490 --> 00:13:18,790
want I want to<font color="#E5E5E5"> detect using</font><font color="#CCCCCC"> this pattern</font>

216
00:13:15,310 --> 00:13:24,339
<font color="#E5E5E5">all the changes or</font><font color="#CCCCCC"> the commits</font><font color="#E5E5E5"> that</font>

217
00:13:18,790 --> 00:13:31,810
introduce one if and inside the if

218
00:13:24,340 --> 00:13:35,500
<font color="#CCCCCC">Warburton</font><font color="#E5E5E5"> okay so the first part of the</font>

219
00:13:31,810 --> 00:13:38,589
<font color="#CCCCCC">XML represent has one tag</font><font color="#E5E5E5"> there is</font>

220
00:13:35,500 --> 00:13:42,300
entity that represent<font color="#E5E5E5"> to the return and</font>

221
00:13:38,590 --> 00:13:46,210
the idea of these entities<font color="#CCCCCC"> the ideal one</font>

222
00:13:42,300 --> 00:13:51,370
then we represent another entity that<font color="#CCCCCC"> is</font>

223
00:13:46,210 --> 00:13:54,930
ID<font color="#CCCCCC"> 2 that is the</font><font color="#E5E5E5"> if they will represent</font>

224
00:13:51,370 --> 00:13:58,600
the parent and we say that the return

225
00:13:54,930 --> 00:14:02,109
has a parent that is leave and we here

226
00:13:58,600 --> 00:14:05,410
will relate with the ID and then we say

227
00:14:02,110 --> 00:14:08,980
<font color="#CCCCCC">ok I want</font><font color="#E5E5E5"> that one</font><font color="#CCCCCC"> action that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> one</font>

228
00:14:05,410 --> 00:14:12,100
insert that effect to the entity ID<font color="#CCCCCC"> 1</font>

229
00:14:08,980 --> 00:14:17,650
that is the return<font color="#E5E5E5"> and another insert</font>

230
00:14:12,100 --> 00:14:22,140
that effect to the ID<font color="#E5E5E5"> 2 that is the</font>

231
00:14:17,650 --> 00:14:29,470
return so this<font color="#E5E5E5"> way is how we represent a</font>

232
00:14:22,140 --> 00:14:32,710
change pattern so once that we have a

233
00:14:29,470 --> 00:14:36,310
<font color="#E5E5E5">change pattern specification in XML and</font>

234
00:14:32,710 --> 00:14:40,450
we have the change between<font color="#CCCCCC"> shoe ice tea</font>

235
00:14:36,310 --> 00:14:44,650
produced<font color="#E5E5E5"> by gum tree we will match vote</font>

236
00:14:40,450 --> 00:14:48,690
to get<font color="#E5E5E5"> the instances so imagine that</font><font color="#CCCCCC"> we</font>

237
00:14:44,650 --> 00:14:52,360
<font color="#E5E5E5">have the previous</font><font color="#CCCCCC"> changes specification</font>

238
00:14:48,690 --> 00:14:58,750
imagine that<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> this deep ok that</font>

239
00:14:52,360 --> 00:15:03,310
it<font color="#E5E5E5"> has a precondition so the est changes</font>

240
00:14:58,750 --> 00:15:06,270
of this snippet<font color="#E5E5E5"> are insert</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> if in a</font>

241
00:15:03,310 --> 00:15:09,300
metal body<font color="#CCCCCC"> in its machine that and a</font>

242
00:15:06,270 --> 00:15:13,569
move operation of the

243
00:15:09,300 --> 00:15:16,990
of the<font color="#CCCCCC"> call</font><font color="#E5E5E5"> here because we change the</font>

244
00:15:13,570 --> 00:15:19,540
parent of the metal<font color="#E5E5E5"> invocation call so</font>

245
00:15:16,990 --> 00:15:24,300
change the<font color="#E5E5E5"> country say</font><font color="#CCCCCC"> ok there is a</font>

246
00:15:19,540 --> 00:15:28,300
move of this method invocation here

247
00:15:24,300 --> 00:15:32,949
<font color="#CCCCCC">common is able to match the first action</font>

248
00:15:28,300 --> 00:15:34,540
<font color="#CCCCCC">that</font><font color="#E5E5E5"> means the insert of the Eve but we</font>

249
00:15:32,950 --> 00:15:38,260
are not able<font color="#CCCCCC"> to detect the move okay</font>

250
00:15:34,540 --> 00:15:43,300
<font color="#CCCCCC">because here the the pattern say okay</font>

251
00:15:38,260 --> 00:15:46,890
I need an insert of a<font color="#E5E5E5"> return so here is</font>

252
00:15:43,300 --> 00:15:49,959
the case that<font color="#E5E5E5"> there is not a matching</font>

253
00:15:46,890 --> 00:15:55,780
however you have<font color="#E5E5E5"> another</font><font color="#CCCCCC"> snipper</font>

254
00:15:49,960 --> 00:16:00,850
for instance here and add if an inside

255
00:15:55,780 --> 00:16:03,970
the other return here<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> able to get</font>

256
00:16:00,850 --> 00:16:08,650
<font color="#E5E5E5">from this</font><font color="#CCCCCC"> HT changes</font><font color="#E5E5E5"> that means one in</font>

257
00:16:03,970 --> 00:16:12,430
<font color="#E5E5E5">st changes is the if metal insert a</font>

258
00:16:08,650 --> 00:16:15,130
return inside<font color="#E5E5E5"> the if</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> have we were</font>

259
00:16:12,430 --> 00:16:17,800
able<font color="#E5E5E5"> to match these instances so that</font>

260
00:16:15,130 --> 00:16:19,960
means that<font color="#CCCCCC"> coming will present this</font>

261
00:16:17,800 --> 00:16:24,160
<font color="#CCCCCC">nipper this change</font><font color="#E5E5E5"> as an instance of</font>

262
00:16:19,960 --> 00:16:28,570
this<font color="#E5E5E5"> pattern</font><font color="#CCCCCC"> okay here</font><font color="#E5E5E5"> I present some</font>

263
00:16:24,160 --> 00:16:31,180
<font color="#CCCCCC">examples of other specifications</font><font color="#E5E5E5"> for</font>

264
00:16:28,570 --> 00:16:33,940
instance here we<font color="#CCCCCC"> will use</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> that</font>

265
00:16:31,180 --> 00:16:36,579
means that they we want<font color="#E5E5E5"> to match a</font><font color="#CCCCCC"> note</font>

266
00:16:33,940 --> 00:16:39,130
which value is<font color="#E5E5E5"> written rule for instance</font>

267
00:16:36,580 --> 00:16:42,070
we<font color="#E5E5E5"> can we can match the value of one</font>

268
00:16:39,130 --> 00:16:44,650
<font color="#CCCCCC">variable one method invocation etc here</font>

269
00:16:42,070 --> 00:16:47,080
are<font color="#CCCCCC"> another example with more than two</font>

270
00:16:44,650 --> 00:16:51,220
entities<font color="#CCCCCC"> we want to to match three</font>

271
00:16:47,080 --> 00:16:55,210
entities that change<font color="#E5E5E5"> okay and they'll</font>

272
00:16:51,220 --> 00:16:58,240
put<font color="#CCCCCC"> it straight on file with the</font>

273
00:16:55,210 --> 00:17:00,190
revision that has<font color="#CCCCCC"> n distance</font><font color="#E5E5E5"> the name of</font>

274
00:16:58,240 --> 00:17:04,589
the pattern<font color="#E5E5E5"> are more information for</font>

275
00:17:00,190 --> 00:17:11,190
<font color="#E5E5E5">instant</font><font color="#CCCCCC"> where is</font><font color="#E5E5E5"> the instance inside the</font>

276
00:17:04,589 --> 00:17:13,540
they commit<font color="#E5E5E5"> okay how to use come in so</font>

277
00:17:11,190 --> 00:17:17,320
we have the location in<font color="#E5E5E5"> this</font><font color="#CCCCCC"> case the</font>

278
00:17:13,540 --> 00:17:19,899
<font color="#E5E5E5">location of the get project okay then we</font>

279
00:17:17,319 --> 00:17:24,240
specify<font color="#E5E5E5"> the mode the</font><font color="#CCCCCC"> secretion mode</font><font color="#E5E5E5"> here</font>

280
00:17:19,900 --> 00:17:27,820
my instances there's an<font color="#CCCCCC"> argument for</font>

281
00:17:24,240 --> 00:17:32,200
mining a single change pattern for

282
00:17:27,819 --> 00:17:36,270
instance we can<font color="#CCCCCC"> use the</font><font color="#E5E5E5"> the argument</font>

283
00:17:32,200 --> 00:17:40,030
action to say okay I<font color="#E5E5E5"> want insert and the</font>

284
00:17:36,270 --> 00:17:43,450
action and<font color="#E5E5E5"> argument entity type to say</font>

285
00:17:40,030 --> 00:17:44,680
<font color="#E5E5E5">okay the name of the entity type that we</font>

286
00:17:43,450 --> 00:17:46,990
<font color="#CCCCCC">want to to match</font>

287
00:17:44,680 --> 00:17:50,530
for instance<font color="#CCCCCC"> if method invocation or</font>

288
00:17:46,990 --> 00:17:52,150
return<font color="#E5E5E5"> etc and here the</font><font color="#CCCCCC"> output</font><font color="#E5E5E5"> we're</font>

289
00:17:50,530 --> 00:17:59,950
coming will

290
00:17:52,150 --> 00:18:02,530
right<font color="#E5E5E5"> do</font><font color="#CCCCCC"> put another</font><font color="#E5E5E5"> news for instance</font>

291
00:17:59,950 --> 00:18:05,770
here I have an example<font color="#E5E5E5"> we say</font><font color="#CCCCCC"> okay give</font>

292
00:18:02,530 --> 00:18:08,559
<font color="#CCCCCC">me all the commits that</font><font color="#E5E5E5"> in that has an</font>

293
00:18:05,770 --> 00:18:11,379
update<font color="#E5E5E5"> of a literal we don't care about</font>

294
00:18:08,559 --> 00:18:15,399
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is a literal we want</font><font color="#E5E5E5"> to change we</font>

295
00:18:11,380 --> 00:18:18,309
<font color="#CCCCCC">only</font><font color="#E5E5E5"> specify the type and here we can</font>

296
00:18:15,400 --> 00:18:23,020
<font color="#E5E5E5">also specify some filters for instance</font>

297
00:18:18,309 --> 00:18:25,210
the number<font color="#E5E5E5"> of counts the max number of</font>

298
00:18:23,020 --> 00:18:28,900
<font color="#CCCCCC">revision that we want the south of the</font>

299
00:18:25,210 --> 00:18:31,360
honks then<font color="#CCCCCC"> um the max</font><font color="#E5E5E5"> number of</font><font color="#CCCCCC"> fights</font>

300
00:18:28,900 --> 00:18:35,260
per<font color="#CCCCCC"> commit</font><font color="#E5E5E5"> etc there are we</font><font color="#CCCCCC"> have a lot</font>

301
00:18:31,360 --> 00:18:40,959
of filters<font color="#E5E5E5"> are are documented in in our</font>

302
00:18:35,260 --> 00:18:44,429
get space<font color="#E5E5E5"> I'm finally another example</font>

303
00:18:40,960 --> 00:18:48,040
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we can specify</font><font color="#CCCCCC"> it specifies the</font>

304
00:18:44,429 --> 00:18:49,470
file of<font color="#E5E5E5"> the pattern the</font><font color="#CCCCCC"> the file</font><font color="#E5E5E5"> that</font>

305
00:18:48,040 --> 00:18:51,639
<font color="#CCCCCC">contains the pattern that we want to</font>

306
00:18:49,470 --> 00:18:52,510
<font color="#E5E5E5">mine for</font><font color="#CCCCCC"> instance</font><font color="#E5E5E5"> the pattern that we</font>

307
00:18:51,640 --> 00:19:00,820
have seen<font color="#CCCCCC"> before</font>

308
00:18:52,510 --> 00:19:08,250
<font color="#CCCCCC">okay so the second option</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to is the</font>

309
00:19:00,820 --> 00:19:12,780
<font color="#E5E5E5">motif that produce also put all the so</font>

310
00:19:08,250 --> 00:19:15,700
in computer<font color="#CCCCCC"> shades on that compute the</font>

311
00:19:12,780 --> 00:19:19,540
frequency of the changes<font color="#E5E5E5"> okay for</font>

312
00:19:15,700 --> 00:19:24,160
instance say<font color="#E5E5E5"> okay here you have linear</font>

313
00:19:19,540 --> 00:19:26,889
operator<font color="#E5E5E5"> that we found six changes that</font>

314
00:19:24,160 --> 00:19:29,710
affect to be<font color="#CCCCCC"> narrow operators we have</font>

315
00:19:26,890 --> 00:19:33,640
found two changes that affect invocation

316
00:19:29,710 --> 00:19:35,770
etc<font color="#CCCCCC"> can produce this information at</font>

317
00:19:33,640 --> 00:19:38,860
<font color="#CCCCCC">different level of regularities</font><font color="#E5E5E5"> for</font>

318
00:19:35,770 --> 00:19:43,410
instance here in say okay we found two

319
00:19:38,860 --> 00:19:47,770
instance of invocation<font color="#E5E5E5"> insert of</font>

320
00:19:43,410 --> 00:19:51,850
<font color="#CCCCCC">invocation in solid</font><font color="#E5E5E5"> block we find two</font>

321
00:19:47,770 --> 00:19:55,179
instance of update of a binary operator

322
00:19:51,850 --> 00:19:56,919
<font color="#E5E5E5">insulative etc so they they showed the</font>

323
00:19:55,179 --> 00:20:01,120
information at<font color="#CCCCCC"> the different level of</font>

324
00:19:56,920 --> 00:20:05,049
<font color="#E5E5E5">granularity so</font><font color="#CCCCCC"> coming also provide</font>

325
00:20:01,120 --> 00:20:10,629
extension<font color="#E5E5E5"> point so</font>

326
00:20:05,049 --> 00:20:13,570
extend the the behavior<font color="#E5E5E5"> in</font><font color="#CCCCCC"> particular</font><font color="#E5E5E5"> we</font>

327
00:20:10,630 --> 00:20:18,070
can<font color="#E5E5E5"> specify the input right now we have</font>

328
00:20:13,570 --> 00:20:22,270
<font color="#CCCCCC">two kind of input git repository</font><font color="#E5E5E5"> or file</font>

329
00:20:18,070 --> 00:20:27,730
systems that<font color="#E5E5E5"> means pairs of files we can</font>

330
00:20:22,270 --> 00:20:30,039
<font color="#E5E5E5">add new revision filters hmm with the</font>

331
00:20:27,730 --> 00:20:31,870
federal we have right now are<font color="#E5E5E5"> related</font>

332
00:20:30,039 --> 00:20:36,419
with the commit message<font color="#CCCCCC"> the side of the</font>

333
00:20:31,870 --> 00:20:44,889
committee etc<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> add new analyzers</font>

334
00:20:36,419 --> 00:20:47,799
for instance another<font color="#CCCCCC"> AST algorithm a new</font>

335
00:20:44,890 --> 00:20:50,710
granular a new<font color="#CCCCCC"> AST with different</font>

336
00:20:47,799 --> 00:20:55,270
granularity<font color="#CCCCCC"> a new technique for</font><font color="#E5E5E5"> patter</font>

337
00:20:50,710 --> 00:20:58,860
deductions<font color="#E5E5E5"> and we can also add new</font>

338
00:20:55,270 --> 00:21:02,799
output processor right now the output is

339
00:20:58,860 --> 00:21:06,490
present in the standard<font color="#E5E5E5"> output or</font><font color="#CCCCCC"> in</font>

340
00:21:02,799 --> 00:21:12,418
JSON files but<font color="#CCCCCC"> we can generate another</font>

341
00:21:06,490 --> 00:21:16,330
kind of output for evolution so we have

342
00:21:12,419 --> 00:21:19,990
<font color="#E5E5E5">analyzed different commits from the data</font>

343
00:21:16,330 --> 00:21:22,539
set<font color="#CCCCCC"> differ for each shape and we</font>

344
00:21:19,990 --> 00:21:26,380
evaluate whether<font color="#E5E5E5"> coming was able to</font>

345
00:21:22,539 --> 00:21:33,039
<font color="#E5E5E5">detect different instances of change</font>

346
00:21:26,380 --> 00:21:37,840
pattern<font color="#CCCCCC"> relative</font><font color="#E5E5E5"> good if so most of them</font>

347
00:21:33,039 --> 00:21:40,779
were detected<font color="#E5E5E5"> we have two</font><font color="#CCCCCC"> cases of false</font>

348
00:21:37,840 --> 00:21:46,260
<font color="#E5E5E5">negatives then actually was</font><font color="#CCCCCC"> created with</font>

349
00:21:40,779 --> 00:21:50,100
<font color="#CCCCCC">the output of the AST if I were him</font>

350
00:21:46,260 --> 00:21:55,029
sometimes it does<font color="#CCCCCC"> happen that</font><font color="#E5E5E5"> the DIF</font>

351
00:21:50,100 --> 00:21:57,549
<font color="#CCCCCC">produced by Gumtree was too complex</font><font color="#E5E5E5"> with</font>

352
00:21:55,029 --> 00:22:01,659
a lot<font color="#CCCCCC"> of changes</font><font color="#E5E5E5"> and the changes were</font>

353
00:21:57,549 --> 00:22:04,379
not as we expect<font color="#E5E5E5"> so that's why we</font><font color="#CCCCCC"> are</font>

354
00:22:01,659 --> 00:22:11,320
<font color="#E5E5E5">not</font><font color="#CCCCCC"> able to</font><font color="#E5E5E5"> detect the pattern given</font>

355
00:22:04,380 --> 00:22:16,750
such output from country so<font color="#E5E5E5"> to sum up we</font>

356
00:22:11,320 --> 00:22:18,809
found 26<font color="#E5E5E5"> out of 28 pattern instances</font>

357
00:22:16,750 --> 00:22:23,080
that all were to<font color="#E5E5E5"> post</font>

358
00:22:18,809 --> 00:22:26,620
<font color="#CCCCCC">and actually</font><font color="#E5E5E5"> for some cases coming was</font>

359
00:22:23,080 --> 00:22:30,790
able to find more<font color="#CCCCCC"> than one instance of</font>

360
00:22:26,620 --> 00:22:33,370
<font color="#CCCCCC">the</font><font color="#E5E5E5"> same pattern inside the same file so</font>

361
00:22:30,790 --> 00:22:37,889
future work we are<font color="#CCCCCC"> working right now</font><font color="#E5E5E5"> in</font>

362
00:22:33,370 --> 00:22:40,419
<font color="#E5E5E5">adding new different</font><font color="#CCCCCC"> input</font><font color="#E5E5E5"> on filters</font>

363
00:22:37,890 --> 00:22:42,550
improving the specification<font color="#E5E5E5"> the</font><font color="#CCCCCC"> right</font>

364
00:22:40,420 --> 00:22:45,550
now is<font color="#E5E5E5"> quite simple</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> they want to</font><font color="#CCCCCC"> to</font>

365
00:22:42,550 --> 00:22:49,360
<font color="#CCCCCC">know more features inside are improving</font>

366
00:22:45,550 --> 00:22:53,830
the the output it's available on github

367
00:22:49,360 --> 00:22:55,990
<font color="#CCCCCC">so we want to to use it so we</font><font color="#E5E5E5"> have the</font>

368
00:22:53,830 --> 00:23:02,020
earliest<font color="#CCCCCC"> Rouge on how to obtain it</font><font color="#E5E5E5"> some</font>

369
00:22:55,990 --> 00:23:04,150
examples also so conclusions<font color="#E5E5E5"> coming is a</font>

370
00:23:02,020 --> 00:23:09,730
tool<font color="#CCCCCC"> for analyzing fine grained changes</font>

371
00:23:04,150 --> 00:23:13,270
between two revisions<font color="#E5E5E5"> so it</font><font color="#CCCCCC"> allows to</font>

372
00:23:09,730 --> 00:23:19,179
mine instances of code changes that were

373
00:23:13,270 --> 00:23:23,889
specified<font color="#CCCCCC"> in XML languages it exports</font>

374
00:23:19,179 --> 00:23:28,030
the resulting in JSON format the code<font color="#E5E5E5"> is</font>

375
00:23:23,890 --> 00:23:32,500
<font color="#CCCCCC">pull along so well we welcome to prepare</font>

376
00:23:28,030 --> 00:23:33,660
comment<font color="#CCCCCC"> it's okay</font><font color="#E5E5E5"> that's all thanks a</font>

377
00:23:32,500 --> 00:23:40,829
<font color="#CCCCCC">lot</font>

378
00:23:33,660 --> 00:23:40,829
[Applause]

379
00:24:04,400 --> 00:24:14,070
so his question<font color="#CCCCCC"> was we remind the source</font>

380
00:24:09,870 --> 00:24:19,350
code or the<font color="#CCCCCC"> by</font><font color="#E5E5E5"> code so we</font><font color="#CCCCCC"> mined the</font>

381
00:24:14,070 --> 00:24:22,590
source code<font color="#E5E5E5"> so we take a version from</font><font color="#CCCCCC"> Ed</font>

382
00:24:19,350 --> 00:24:26,070
<font color="#E5E5E5">from a commit we take the source</font><font color="#CCCCCC"> code</font>

383
00:24:22,590 --> 00:24:28,590
<font color="#E5E5E5">and then we mind the changes between the</font>

384
00:24:26,070 --> 00:24:31,189
<font color="#E5E5E5">version of the committee and the</font>

385
00:24:28,590 --> 00:24:31,189
<font color="#E5E5E5">previous one</font>

386
00:24:51,650 --> 00:24:59,520
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> key concern was whether we use some</font>

387
00:24:58,020 --> 00:25:01,680
machine<font color="#CCCCCC"> learning technique for</font>

388
00:24:59,520 --> 00:25:04,139
generating the part the<font color="#E5E5E5"> patterns</font><font color="#CCCCCC"> it's a</font>

389
00:25:01,680 --> 00:25:07,590
nice question<font color="#E5E5E5"> we haven't do that</font><font color="#CCCCCC"> for</font>

390
00:25:04,140 --> 00:25:11,310
because<font color="#E5E5E5"> for the moment we only wanted to</font>

391
00:25:07,590 --> 00:25:15,240
get instances for particular patterns

392
00:25:11,310 --> 00:25:19,649
for instance the patterns that<font color="#E5E5E5"> I show</font>

393
00:25:15,240 --> 00:25:22,260
<font color="#E5E5E5">add an if and</font><font color="#CCCCCC"> an it precondition or</font>

394
00:25:19,650 --> 00:25:24,600
rather if return<font color="#E5E5E5"> because we need it for</font>

395
00:25:22,260 --> 00:25:27,690
the<font color="#CCCCCC"> evaluation</font><font color="#E5E5E5"> of repair approaches but</font>

396
00:25:24,600 --> 00:25:31,219
we<font color="#CCCCCC"> can plug the idea to plug machine</font>

397
00:25:27,690 --> 00:25:35,810
learning techniques to get<font color="#E5E5E5"> these</font>

398
00:25:31,220 --> 00:25:35,810
patterns<font color="#E5E5E5"> automatically</font>

399
00:25:44,930 --> 00:25:56,180
apply to<font color="#E5E5E5"> another language</font><font color="#CCCCCC"> kiss</font><font color="#E5E5E5"> know so I</font>

400
00:25:49,950 --> 00:25:59,810
know all the so his question<font color="#E5E5E5"> was if</font>

401
00:25:56,180 --> 00:26:02,010
there is some<font color="#E5E5E5"> research related with</font>

402
00:25:59,810 --> 00:26:07,770
similar research with with another

403
00:26:02,010 --> 00:26:11,370
languages from my knowledge<font color="#CCCCCC"> I I don't</font>

404
00:26:07,770 --> 00:26:14,040
<font color="#CCCCCC">know when he told</font><font color="#E5E5E5"> that dictate instances</font>

405
00:26:11,370 --> 00:26:18,239
of change pattern for another languages

406
00:26:14,040 --> 00:26:24,080
<font color="#E5E5E5">but actually it would come in</font><font color="#CCCCCC"> it could</font>

407
00:26:18,240 --> 00:26:26,790
<font color="#E5E5E5">be easily done but changing the a steep</font>

408
00:26:24,080 --> 00:26:29,429
generator<font color="#E5E5E5"> so that means the</font><font color="#CCCCCC"> parser</font><font color="#E5E5E5"> you</font>

409
00:26:26,790 --> 00:26:33,870
<font color="#E5E5E5">can parse another file in another</font>

410
00:26:29,430 --> 00:26:37,200
language and<font color="#CCCCCC"> it self generating so we</font>

411
00:26:33,870 --> 00:26:39,899
generate the same<font color="#E5E5E5"> a steep but using</font>

412
00:26:37,200 --> 00:26:42,210
another part and then<font color="#CCCCCC"> it will be the</font>

413
00:26:39,900 --> 00:26:46,070
same so the the<font color="#E5E5E5"> matching part will the</font>

414
00:26:42,210 --> 00:26:46,070
same so it would be similar

415
00:26:52,310 --> 00:26:58,139
[Applause]

