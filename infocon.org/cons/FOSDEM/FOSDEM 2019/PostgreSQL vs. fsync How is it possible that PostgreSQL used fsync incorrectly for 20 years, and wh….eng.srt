1
00:00:06,430 --> 00:00:15,369
please welcome<font color="#CCCCCC"> max Peter Thomas Wonder</font>

2
00:00:10,550 --> 00:00:15,369
[Applause]

3
00:00:15,910 --> 00:00:25,009
right so<font color="#E5E5E5"> hi my name is Tomas</font><font color="#CCCCCC"> and I'm</font>

4
00:00:20,810 --> 00:00:26,840
here to talk<font color="#CCCCCC"> about F sink and how it's</font>

5
00:00:25,009 --> 00:00:28,610
actually used<font color="#E5E5E5"> in Postgres and how we</font>

6
00:00:26,840 --> 00:00:33,290
<font color="#CCCCCC">fail to</font><font color="#E5E5E5"> actually use it</font><font color="#CCCCCC"> correctly for</font>

7
00:00:28,610 --> 00:00:37,339
<font color="#E5E5E5">like 20 years so how many of you</font>

8
00:00:33,290 --> 00:00:40,879
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> are using Postgres right okay</font>

9
00:00:37,339 --> 00:00:47,440
<font color="#E5E5E5">so and how many kernel developers are</font>

10
00:00:40,879 --> 00:00:47,440
here okay<font color="#CCCCCC"> so don't worry</font><font color="#E5E5E5"> I'll</font><font color="#CCCCCC"> be careful</font>

11
00:00:48,160 --> 00:00:54,468
<font color="#CCCCCC">this is really a</font><font color="#E5E5E5"> very different kind</font><font color="#CCCCCC"> of</font>

12
00:00:51,289 --> 00:00:57,079
talk so well<font color="#E5E5E5"> very little</font><font color="#CCCCCC"> about me I'm a</font>

13
00:00:54,469 --> 00:00:59,899
<font color="#CCCCCC">long-term was</font><font color="#E5E5E5"> best contributor</font><font color="#CCCCCC"> and</font>

14
00:00:57,079 --> 00:01:01,460
nowadays<font color="#E5E5E5"> I'm also a committer and I've</font>

15
00:00:59,899 --> 00:01:04,220
been<font color="#E5E5E5"> working with most best for like 20</font>

16
00:01:01,460 --> 00:01:07,399
<font color="#CCCCCC">years</font><font color="#E5E5E5"> and I didn't know about how broken</font>

17
00:01:04,220 --> 00:01:09,679
it<font color="#E5E5E5"> is in this sense and this is really</font>

18
00:01:07,399 --> 00:01:12,229
<font color="#E5E5E5">different kind of talk compared to the</font>

19
00:01:09,680 --> 00:01:16,399
other talks right because<font color="#CCCCCC"> usually talks</font>

20
00:01:12,229 --> 00:01:18,950
are success stories<font color="#E5E5E5"> people want to share</font>

21
00:01:16,399 --> 00:01:21,560
with you<font color="#E5E5E5"> like how they implemented</font>

22
00:01:18,950 --> 00:01:23,750
<font color="#E5E5E5">something new how it works</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> amazing</font>

23
00:01:21,560 --> 00:01:25,939
that is<font color="#E5E5E5"> this is like a slightly</font>

24
00:01:23,750 --> 00:01:28,189
different<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of talk</font>

25
00:01:25,939 --> 00:01:31,789
usually<font color="#E5E5E5"> these</font><font color="#CCCCCC"> folks have happy endings</font>

26
00:01:28,189 --> 00:01:35,600
<font color="#E5E5E5">right they will present like this is how</font>

27
00:01:31,790 --> 00:01:38,990
it<font color="#CCCCCC"> works</font><font color="#E5E5E5"> and that's it</font><font color="#CCCCCC"> I don't really</font>

28
00:01:35,600 --> 00:01:41,740
<font color="#E5E5E5">have a happy ending here</font><font color="#CCCCCC"> also there is</font>

29
00:01:38,990 --> 00:01:45,919
light at the end of the<font color="#E5E5E5"> tunnel</font>

30
00:01:41,740 --> 00:01:49,100
hopefully right<font color="#E5E5E5"> so this is the usual</font>

31
00:01:45,920 --> 00:01:54,649
<font color="#E5E5E5">kind of talk this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the talk I'm</font><font color="#CCCCCC"> going</font>

32
00:01:49,100 --> 00:01:56,780
<font color="#CCCCCC">to present</font><font color="#E5E5E5"> here by the way I know my</font>

33
00:01:54,649 --> 00:02:00,290
<font color="#CCCCCC">accent is kind of funny so if you don't</font>

34
00:01:56,780 --> 00:02:02,659
understand something let me<font color="#CCCCCC"> know</font><font color="#E5E5E5"> I will</font>

35
00:02:00,290 --> 00:02:04,460
repeat that with exactly the<font color="#CCCCCC"> same kind</font>

36
00:02:02,659 --> 00:02:08,060
of accent so<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> misunderstand it</font>

37
00:02:04,460 --> 00:02:10,130
for the second<font color="#E5E5E5"> time but I usually give</font>

38
00:02:08,060 --> 00:02:12,350
talks that<font color="#E5E5E5"> are kind</font><font color="#CCCCCC"> of practical right</font>

39
00:02:10,130 --> 00:02:15,829
they will show you how to<font color="#E5E5E5"> do stuff this</font>

40
00:02:12,350 --> 00:02:18,620
is not the kind<font color="#E5E5E5"> of talk I usually talk</font>

41
00:02:15,829 --> 00:02:20,420
<font color="#E5E5E5">about was great stuff about implementing</font>

42
00:02:18,620 --> 00:02:23,359
<font color="#CCCCCC">features in photographs or using</font>

43
00:02:20,420 --> 00:02:27,849
features in Postgres this talk includes

44
00:02:23,359 --> 00:02:31,629
<font color="#E5E5E5">a little bit about like</font><font color="#CCCCCC"> kernel</font>

45
00:02:27,849 --> 00:02:33,790
and so on<font color="#E5E5E5"> and finally it's really about</font>

46
00:02:31,629 --> 00:02:36,129
mistakes<font color="#E5E5E5"> that have been made or</font>

47
00:02:33,790 --> 00:02:38,560
assumptions<font color="#E5E5E5"> incorrect assumptions that</font>

48
00:02:36,129 --> 00:02:42,099
have been made<font color="#E5E5E5"> like in the past</font><font color="#CCCCCC"> a long</font>

49
00:02:38,560 --> 00:02:45,970
<font color="#E5E5E5">time ago</font><font color="#CCCCCC"> if you have any questions by</font>

50
00:02:42,099 --> 00:02:49,530
the<font color="#CCCCCC"> way please</font><font color="#E5E5E5"> shout don't wait until</font>

51
00:02:45,970 --> 00:02:53,799
<font color="#E5E5E5">the end of the talk</font><font color="#CCCCCC"> I find it kind of</font>

52
00:02:49,530 --> 00:02:56,290
difficult<font color="#E5E5E5"> to answer questions</font><font color="#CCCCCC"> a long</font>

53
00:02:53,799 --> 00:03:00,180
time<font color="#E5E5E5"> about topic which was presented</font>

54
00:02:56,290 --> 00:03:05,349
like half an hour<font color="#CCCCCC"> ago so</font><font color="#E5E5E5"> ask right</font><font color="#CCCCCC"> away</font>

55
00:03:00,180 --> 00:03:08,049
<font color="#E5E5E5">right so if you are using Postgres you</font>

56
00:03:05,349 --> 00:03:11,980
probably are familiar with the concept

57
00:03:08,049 --> 00:03:15,280
<font color="#CCCCCC">of a check point so a very</font><font color="#E5E5E5"> quick</font>

58
00:03:11,980 --> 00:03:18,250
introduction into<font color="#CCCCCC"> how</font><font color="#E5E5E5"> Postgres handles</font>

59
00:03:15,280 --> 00:03:21,370
durability right so if you<font color="#E5E5E5"> look at the</font>

60
00:03:18,250 --> 00:03:23,769
at the system<font color="#E5E5E5"> you might see something</font>

61
00:03:21,370 --> 00:03:26,829
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this right there</font><font color="#E5E5E5"> at the bottom here</font>

62
00:03:23,769 --> 00:03:28,750
there<font color="#CCCCCC"> is like a</font><font color="#E5E5E5"> storage device on the</font>

63
00:03:26,829 --> 00:03:32,470
<font color="#E5E5E5">storage device we have two kinds of</font>

64
00:03:28,750 --> 00:03:38,410
files<font color="#E5E5E5"> Britain by Postgres that's data</font>

65
00:03:32,470 --> 00:03:42,430
files<font color="#E5E5E5"> and the transaction log the</font>

66
00:03:38,410 --> 00:03:45,400
transaction log is accessed<font color="#E5E5E5"> and mostly</font>

67
00:03:42,430 --> 00:03:47,500
<font color="#E5E5E5">just</font><font color="#CCCCCC"> written using</font><font color="#E5E5E5"> direct IO right so it</font>

68
00:03:45,400 --> 00:03:50,489
it's<font color="#E5E5E5"> not accessed through page cache</font>

69
00:03:47,500 --> 00:03:52,690
which<font color="#E5E5E5"> is managed by the</font><font color="#CCCCCC"> operating system</font>

70
00:03:50,489 --> 00:03:55,299
<font color="#CCCCCC">the page guest is like a</font><font color="#E5E5E5"> general-purpose</font>

71
00:03:52,690 --> 00:03:58,000
cache for the<font color="#E5E5E5"> whole system but Postgres</font>

72
00:03:55,299 --> 00:04:01,269
also has like a smaller<font color="#CCCCCC"> amount</font><font color="#E5E5E5"> of memory</font>

73
00:03:58,000 --> 00:04:05,590
which<font color="#CCCCCC"> is used for specific</font><font color="#E5E5E5"> database</font>

74
00:04:01,269 --> 00:04:07,480
caching managed by the<font color="#E5E5E5"> database the</font><font color="#CCCCCC"> curl</font>

75
00:04:05,590 --> 00:04:10,780
<font color="#E5E5E5">the page cache is managed by the kernel</font>

76
00:04:07,480 --> 00:04:15,209
<font color="#CCCCCC">the</font><font color="#E5E5E5"> shared buffers is managed by by the</font>

77
00:04:10,780 --> 00:04:18,339
<font color="#E5E5E5">database it's usually like much smaller</font>

78
00:04:15,209 --> 00:04:22,960
<font color="#CCCCCC">Postgres relies on the page cache</font>

79
00:04:18,339 --> 00:04:25,599
<font color="#E5E5E5">buffered i/o</font><font color="#CCCCCC"> quite a bit right so when</font>

80
00:04:22,960 --> 00:04:27,960
you do like some<font color="#CCCCCC"> modification to the</font>

81
00:04:25,599 --> 00:04:27,960
<font color="#CCCCCC">database</font>

82
00:04:28,410 --> 00:04:34,360
what happens is the<font color="#E5E5E5"> database will first</font>

83
00:04:32,380 --> 00:04:37,770
<font color="#E5E5E5">bright all the changes and descriptions</font>

84
00:04:34,360 --> 00:04:40,150
<font color="#E5E5E5">of the changes into the transaction log</font>

85
00:04:37,770 --> 00:04:45,490
<font color="#E5E5E5">using like a very small buffer</font>

86
00:04:40,150 --> 00:04:48,698
but it's going<font color="#E5E5E5"> to direct</font><font color="#CCCCCC"> IO not not by</font>

87
00:04:45,490 --> 00:04:54,360
buffering<font color="#CCCCCC"> IO and then we do the changes</font>

88
00:04:48,699 --> 00:04:58,030
in the shed buffers when you do a comet

89
00:04:54,360 --> 00:05:01,860
we only flush<font color="#CCCCCC"> you know we only flash B</font>

90
00:04:58,030 --> 00:05:04,650
the transaction lock<font color="#E5E5E5"> right so that's</font><font color="#CCCCCC"> it</font>

91
00:05:01,860 --> 00:05:07,270
<font color="#E5E5E5">so at the end of the transaction</font><font color="#CCCCCC"> you</font>

92
00:05:04,650 --> 00:05:08,830
<font color="#CCCCCC">will be in a state like this</font><font color="#E5E5E5"> right so</font>

93
00:05:07,270 --> 00:05:11,560
you will have some dirty data in the

94
00:05:08,830 --> 00:05:14,139
<font color="#E5E5E5">share buffers like modified contents of</font>

95
00:05:11,560 --> 00:05:15,970
the data files but it's not on durable

96
00:05:14,139 --> 00:05:19,590
<font color="#E5E5E5">storage right so when the database</font>

97
00:05:15,970 --> 00:05:21,789
<font color="#CCCCCC">crashes at this point the Postgres will</font>

98
00:05:19,590 --> 00:05:24,760
essentially read the changes<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the</font>

99
00:05:21,789 --> 00:05:27,760
transaction<font color="#E5E5E5"> log and apply them again</font>

100
00:05:24,760 --> 00:05:30,849
right<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> the whole idea of</font>

101
00:05:27,760 --> 00:05:31,270
transaction<font color="#E5E5E5"> log how it's used in</font>

102
00:05:30,850 --> 00:05:36,039
Postgres

103
00:05:31,270 --> 00:05:39,310
and in other<font color="#CCCCCC"> databases</font><font color="#E5E5E5"> but if we only</font>

104
00:05:36,039 --> 00:05:43,120
did this<font color="#CCCCCC"> the</font><font color="#E5E5E5"> transaction log would</font>

105
00:05:39,310 --> 00:05:44,710
pretty much<font color="#E5E5E5"> just grew over time into</font>

106
00:05:43,120 --> 00:05:47,620
like terabytes petabytes or whatever

107
00:05:44,710 --> 00:05:49,330
right so what we need<font color="#CCCCCC"> to do and also we</font>

108
00:05:47,620 --> 00:05:50,770
would have to<font color="#CCCCCC"> always apply all the</font>

109
00:05:49,330 --> 00:05:53,320
changes<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the beginning</font><font color="#CCCCCC"> right so</font>

110
00:05:50,770 --> 00:05:56,020
after<font color="#CCCCCC"> a year</font><font color="#E5E5E5"> if the</font><font color="#CCCCCC"> database precious</font>

111
00:05:53,320 --> 00:05:57,940
you would have to reply all<font color="#E5E5E5"> the year</font>

112
00:05:56,020 --> 00:06:02,289
<font color="#E5E5E5">worth of changes which</font><font color="#CCCCCC"> is like not very</font>

113
00:05:57,940 --> 00:06:03,639
<font color="#CCCCCC">practical</font><font color="#E5E5E5"> so what the</font><font color="#CCCCCC"> database does it</font>

114
00:06:02,289 --> 00:06:07,240
does something<font color="#CCCCCC"> called</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> check point</font>

115
00:06:03,639 --> 00:06:09,669
<font color="#E5E5E5">right it looks at the current position</font>

116
00:06:07,240 --> 00:06:11,590
<font color="#E5E5E5">in the wall in the essentially a</font>

117
00:06:09,669 --> 00:06:16,870
sequence of changes<font color="#E5E5E5"> it looks at the</font>

118
00:06:11,590 --> 00:06:19,359
position<font color="#E5E5E5"> it flushes all the data from</font>

119
00:06:16,870 --> 00:06:23,349
<font color="#E5E5E5">the from the share buffers all the</font>

120
00:06:19,360 --> 00:06:27,190
changes<font color="#E5E5E5"> it writes them into the page</font>

121
00:06:23,349 --> 00:06:30,789
cache and then calls<font color="#E5E5E5"> F sync on all the</font>

122
00:06:27,190 --> 00:06:35,889
modified files and ultimately when this

123
00:06:30,789 --> 00:06:38,139
succeeds it<font color="#E5E5E5"> delete the unnecessary part</font>

124
00:06:35,889 --> 00:06:41,710
of the transaction<font color="#CCCCCC"> lock and remembers</font>

125
00:06:38,139 --> 00:06:45,610
that if it crashes<font color="#E5E5E5"> it only needs to do a</font>

126
00:06:41,710 --> 00:06:49,539
recovery<font color="#E5E5E5"> from</font><font color="#CCCCCC"> that position</font><font color="#E5E5E5"> right so</font>

127
00:06:45,610 --> 00:06:50,920
this happens regularly like every half

128
00:06:49,539 --> 00:06:54,340
an hour

129
00:06:50,920 --> 00:06:59,620
fifteen<font color="#E5E5E5"> minutes something like that in</font>

130
00:06:54,340 --> 00:07:03,159
most cases<font color="#E5E5E5"> and that works</font><font color="#CCCCCC"> as long as</font>

131
00:06:59,620 --> 00:07:06,460
<font color="#E5E5E5">nothing fails right which is kind of the</font>

132
00:07:03,160 --> 00:07:08,230
rainbows and unicorns<font color="#E5E5E5"> land</font><font color="#CCCCCC"> we know that</font>

133
00:07:06,460 --> 00:07:12,520
in production<font color="#CCCCCC"> systems that's not the</font>

134
00:07:08,230 --> 00:07:15,820
case<font color="#CCCCCC"> so what if there is an error</font><font color="#E5E5E5"> right</font>

135
00:07:12,520 --> 00:07:16,180
<font color="#E5E5E5">what if something fails</font><font color="#CCCCCC"> during the Check</font>

136
00:07:15,820 --> 00:07:21,040
<font color="#CCCCCC">Point</font>

137
00:07:16,180 --> 00:07:23,560
<font color="#E5E5E5">well it's critical it's really really</font>

138
00:07:21,040 --> 00:07:25,450
important<font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> detect the</font><font color="#CCCCCC"> error</font>

139
00:07:23,560 --> 00:07:30,070
like<font color="#CCCCCC"> did you learn that something found</font>

140
00:07:25,450 --> 00:07:31,990
<font color="#E5E5E5">because at that point</font><font color="#CCCCCC"> what we can do we</font>

141
00:07:30,070 --> 00:07:34,630
can<font color="#CCCCCC"> crash the</font><font color="#E5E5E5"> database and force a</font>

142
00:07:31,990 --> 00:07:39,130
recovery<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right it's kind of annoying</font>

143
00:07:34,630 --> 00:07:41,110
because the the user user connections

144
00:07:39,130 --> 00:07:43,540
will fail they will disconnect<font color="#E5E5E5"> the</font>

145
00:07:41,110 --> 00:07:48,040
database will do something<font color="#E5E5E5"> for</font><font color="#CCCCCC"> five</font>

146
00:07:43,540 --> 00:07:51,340
minutes<font color="#E5E5E5"> and then it will restart but you</font>

147
00:07:48,040 --> 00:07:57,660
will not lose any<font color="#CCCCCC"> data you will not lose</font>

148
00:07:51,340 --> 00:08:00,849
any community changes<font color="#E5E5E5"> it must not</font>

149
00:07:57,660 --> 00:08:02,620
complete the checkpoint as<font color="#CCCCCC"> what</font>

150
00:08:00,850 --> 00:08:04,390
<font color="#E5E5E5">successful and delete the old</font>

151
00:08:02,620 --> 00:08:10,030
transaction<font color="#E5E5E5"> log because at that point</font>

152
00:08:04,390 --> 00:08:11,950
you have lost data so when you do when

153
00:08:10,030 --> 00:08:15,429
the error happens<font color="#E5E5E5"> doing the right phase</font>

154
00:08:11,950 --> 00:08:17,349
right<font color="#E5E5E5"> if I go</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> in this</font><font color="#CCCCCC"> phase</font><font color="#E5E5E5"> when we</font>

155
00:08:15,430 --> 00:08:20,110
are writing<font color="#E5E5E5"> the data into</font><font color="#CCCCCC"> the page cache</font>

156
00:08:17,350 --> 00:08:23,170
that's kind of<font color="#CCCCCC"> okay because</font><font color="#E5E5E5"> we can</font>

157
00:08:20,110 --> 00:08:25,210
<font color="#E5E5E5">detect the error we still have the</font>

158
00:08:23,170 --> 00:08:28,900
changes in the<font color="#E5E5E5"> shared buffers which is</font>

159
00:08:25,210 --> 00:08:34,120
managed by<font color="#E5E5E5"> the database and we could</font>

160
00:08:28,900 --> 00:08:36,549
retry right so that's<font color="#E5E5E5"> okay but we don't</font>

161
00:08:34,120 --> 00:08:39,100
<font color="#CCCCCC">really see this very often in production</font>

162
00:08:36,549 --> 00:08:41,439
because those are like<font color="#E5E5E5"> a copy from</font><font color="#CCCCCC"> one</font>

163
00:08:39,100 --> 00:08:43,930
part of<font color="#E5E5E5"> the memory to</font><font color="#CCCCCC"> another part of</font>

164
00:08:41,440 --> 00:08:47,110
<font color="#E5E5E5">the memory</font><font color="#CCCCCC"> it's it doesn't</font><font color="#E5E5E5"> involve any</font>

165
00:08:43,929 --> 00:08:50,579
<font color="#CCCCCC">i/o storage systems or</font><font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> so</font>

166
00:08:47,110 --> 00:08:55,300
that's mostly a theoretical problem

167
00:08:50,580 --> 00:08:58,030
<font color="#E5E5E5">what's worse is that when we call the F</font>

168
00:08:55,300 --> 00:09:02,290
sync the data<font color="#E5E5E5"> is supposed</font><font color="#CCCCCC"> to be written</font>

169
00:08:58,030 --> 00:09:04,020
onto like a durable storage<font color="#CCCCCC"> either local</font>

170
00:09:02,290 --> 00:09:08,140
disks or<font color="#E5E5E5"> like</font>

171
00:09:04,020 --> 00:09:11,590
storage<font color="#E5E5E5"> connected</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> network or</font>

172
00:09:08,140 --> 00:09:14,590
<font color="#E5E5E5">something like that and that's</font>

173
00:09:11,590 --> 00:09:17,080
<font color="#E5E5E5">completely managed we only initiate the</font>

174
00:09:14,590 --> 00:09:19,480
<font color="#E5E5E5">Xing mother otherwise</font><font color="#CCCCCC"> it's completely</font>

175
00:09:17,080 --> 00:09:22,780
managed by the by the<font color="#E5E5E5"> kernel the</font>

176
00:09:19,480 --> 00:09:25,390
<font color="#E5E5E5">database</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> no say</font><font color="#CCCCCC"> in to how</font><font color="#E5E5E5"> that works</font>

177
00:09:22,780 --> 00:09:29,110
<font color="#E5E5E5">how the recovery how the errors are</font>

178
00:09:25,390 --> 00:09:34,510
reported and<font color="#E5E5E5"> so on and that's where the</font>

179
00:09:29,110 --> 00:09:37,120
problems lie<font color="#E5E5E5"> right because we can't from</font>

180
00:09:34,510 --> 00:09:40,240
the database side<font color="#E5E5E5"> we can't easily retry</font>

181
00:09:37,120 --> 00:09:43,680
the<font color="#E5E5E5"> eff</font><font color="#CCCCCC"> sync because the page cache is</font>

182
00:09:40,240 --> 00:09:49,390
managed by<font color="#E5E5E5"> the kernel</font><font color="#CCCCCC"> so we don't know</font>

183
00:09:43,680 --> 00:09:54,370
whether they<font color="#CCCCCC"> still will be</font><font color="#E5E5E5"> there or what</font>

184
00:09:49,390 --> 00:09:57,069
happens right<font color="#E5E5E5"> so what were the</font>

185
00:09:54,370 --> 00:09:59,650
expectations<font color="#E5E5E5"> when this was designed or</font>

186
00:09:57,070 --> 00:10:00,570
implemented like 20<font color="#E5E5E5"> 25 years</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> in</font>

187
00:09:59,650 --> 00:10:04,540
Postgres

188
00:10:00,570 --> 00:10:10,090
so the first expectation was so if there

189
00:10:04,540 --> 00:10:15,250
<font color="#CCCCCC">is an error during the F sink the next</font><font color="#E5E5E5"> I</font>

190
00:10:10,090 --> 00:10:17,500
<font color="#E5E5E5">think we'll actually retry</font><font color="#CCCCCC"> will try to</font>

191
00:10:15,250 --> 00:10:21,070
<font color="#E5E5E5">flush the data again right so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> we have</font>

192
00:10:17,500 --> 00:10:24,790
like<font color="#CCCCCC"> 4 kilobyte page modified in the</font>

193
00:10:21,070 --> 00:10:27,970
page cache the<font color="#E5E5E5"> F</font><font color="#CCCCCC"> thing for some reason</font>

194
00:10:24,790 --> 00:10:30,430
can't write that<font color="#E5E5E5"> onto</font><font color="#CCCCCC"> onto the storage</font>

195
00:10:27,970 --> 00:10:32,470
because maybe it's like<font color="#E5E5E5"> a network</font>

196
00:10:30,430 --> 00:10:34,319
attached storage and there is like an it

197
00:10:32,470 --> 00:10:39,610
<font color="#E5E5E5">network hiccup or something</font>

198
00:10:34,320 --> 00:10:42,190
the next<font color="#CCCCCC"> F sink will retry well the</font>

199
00:10:39,610 --> 00:10:45,370
reality is<font color="#CCCCCC"> that the first</font><font color="#E5E5E5"> F thing will</font>

200
00:10:42,190 --> 00:10:49,210
failed it an error but<font color="#E5E5E5"> the data is like</font>

201
00:10:45,370 --> 00:10:52,090
a discarded<font color="#E5E5E5"> from the page cache right so</font>

202
00:10:49,210 --> 00:10:54,400
it will<font color="#CCCCCC"> just throw it away and the next</font>

203
00:10:52,090 --> 00:10:55,930
<font color="#CCCCCC">step</font><font color="#E5E5E5"> thing obviously will succeed</font>

204
00:10:54,400 --> 00:11:02,860
because<font color="#CCCCCC"> there's no</font><font color="#E5E5E5"> data to be written</font>

205
00:10:55,930 --> 00:11:04,569
again so that's kind of annoying<font color="#CCCCCC"> and it</font>

206
00:11:02,860 --> 00:11:08,410
means we<font color="#CCCCCC"> can't</font><font color="#E5E5E5"> actually retire sink</font>

207
00:11:04,570 --> 00:11:10,960
right<font color="#CCCCCC"> and this is not like a</font><font color="#E5E5E5"> problem</font>

208
00:11:08,410 --> 00:11:14,189
only<font color="#CCCCCC"> for pause-press</font><font color="#E5E5E5"> this is problem for</font>

209
00:11:10,960 --> 00:11:17,820
all applications that use<font color="#CCCCCC"> F</font><font color="#E5E5E5"> Singh</font>

210
00:11:14,190 --> 00:11:20,670
<font color="#E5E5E5">is I've seen especially in like</font><font color="#CCCCCC"> non</font>

211
00:11:17,820 --> 00:11:28,580
<font color="#E5E5E5">civil cases because it's getting worse</font>

212
00:11:20,670 --> 00:11:31,770
right<font color="#CCCCCC"> furthermore we kind of expect that</font>

213
00:11:28,580 --> 00:11:35,520
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is universal behavior</font><font color="#CCCCCC"> but it's not</font>

214
00:11:31,770 --> 00:11:37,199
right<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example the file systems</font>

215
00:11:35,520 --> 00:11:43,410
will behave in<font color="#E5E5E5"> slightly different ways</font>

216
00:11:37,200 --> 00:11:47,940
<font color="#E5E5E5">so ext4 will leave the data in in the</font>

217
00:11:43,410 --> 00:11:50,400
page cache<font color="#CCCCCC"> but it will simply mark</font><font color="#E5E5E5"> the</font>

218
00:11:47,940 --> 00:11:53,820
page as<font color="#E5E5E5"> a</font><font color="#CCCCCC"> cream right so you have the</font>

219
00:11:50,400 --> 00:11:56,100
<font color="#E5E5E5">modified data there but unless you</font>

220
00:11:53,820 --> 00:12:00,690
modify it<font color="#E5E5E5"> again it will</font><font color="#CCCCCC"> not be written</font>

221
00:11:56,100 --> 00:12:03,360
<font color="#CCCCCC">again which is annoying</font><font color="#E5E5E5"> right because it</font>

222
00:12:00,690 --> 00:12:06,120
makes the<font color="#E5E5E5"> the failures kind of</font>

223
00:12:03,360 --> 00:12:07,590
unpredictable<font color="#E5E5E5"> right in some cases you</font>

224
00:12:06,120 --> 00:12:11,310
will<font color="#E5E5E5"> lose the data in some cases you</font>

225
00:12:07,590 --> 00:12:14,190
<font color="#E5E5E5">will not lose the data and so on except</font>

226
00:12:11,310 --> 00:12:18,209
<font color="#E5E5E5">as an btrfs will simply throw away the</font>

227
00:12:14,190 --> 00:12:21,750
data and until mark the page as not<font color="#E5E5E5"> up</font>

228
00:12:18,210 --> 00:12:26,160
<font color="#E5E5E5">to date right like style page which is</font>

229
00:12:21,750 --> 00:12:28,620
not really POSIX compliant<font color="#CCCCCC"> but then</font>

230
00:12:26,160 --> 00:12:30,689
again<font color="#E5E5E5"> it's maybe better behavior than</font>

231
00:12:28,620 --> 00:12:32,520
what ext4 does right because we at<font color="#E5E5E5"> least</font>

232
00:12:30,690 --> 00:12:36,450
know that<font color="#E5E5E5"> the page is</font><font color="#CCCCCC"> like obsolete or</font>

233
00:12:32,520 --> 00:12:38,550
something but neither of<font color="#E5E5E5"> those file</font>

234
00:12:36,450 --> 00:12:42,390
systems actually retry the data<font color="#E5E5E5"> retry</font>

235
00:12:38,550 --> 00:12:44,520
the<font color="#CCCCCC"> debride so you lose the changes in</font>

236
00:12:42,390 --> 00:12:46,110
some cases you<font color="#CCCCCC"> will learn about it in</font>

237
00:12:44,520 --> 00:12:49,890
some<font color="#CCCCCC"> cases you will not learn</font><font color="#E5E5E5"> about it</font>

238
00:12:46,110 --> 00:12:52,260
<font color="#CCCCCC">and so on so that was the first</font>

239
00:12:49,890 --> 00:12:58,130
expectation the other expectation is

240
00:12:52,260 --> 00:13:01,560
about behavior<font color="#CCCCCC"> in multiprocessor system</font>

241
00:12:58,130 --> 00:13:04,770
so if you have a application which is

242
00:13:01,560 --> 00:13:06,810
using multiple<font color="#E5E5E5"> file descriptors multiple</font>

243
00:13:04,770 --> 00:13:10,590
processes and those processes<font color="#E5E5E5"> might</font>

244
00:13:06,810 --> 00:13:14,069
<font color="#E5E5E5">access the same</font><font color="#CCCCCC"> data file then what</font>

245
00:13:10,590 --> 00:13:17,790
happens if you invoke the<font color="#E5E5E5"> eff same from</font>

246
00:13:14,070 --> 00:13:20,730
one process but you also have a file

247
00:13:17,790 --> 00:13:23,000
descriptor<font color="#E5E5E5"> to the same file from</font><font color="#CCCCCC"> another</font>

248
00:13:20,730 --> 00:13:25,699
process

249
00:13:23,000 --> 00:13:29,269
which can easily<font color="#CCCCCC"> happen if you have like</font>

250
00:13:25,699 --> 00:13:32,750
a a running database and someone

251
00:13:29,269 --> 00:13:35,750
<font color="#CCCCCC">connects over the over console and says</font>

252
00:13:32,750 --> 00:13:39,410
sync<font color="#CCCCCC"> ID which is like a way to run</font>

253
00:13:35,750 --> 00:13:43,189
everything from from the console so

254
00:13:39,410 --> 00:13:49,160
<font color="#CCCCCC">we'll be other processes</font><font color="#E5E5E5"> learn about the</font>

255
00:13:43,189 --> 00:13:51,500
error<font color="#E5E5E5"> well it depends</font><font color="#CCCCCC"> like the through</font>

256
00:13:49,160 --> 00:13:55,040
this<font color="#E5E5E5"> only the first process they</font>

257
00:13:51,500 --> 00:14:00,699
actually initialize is the the<font color="#CCCCCC"> F sing</font>

258
00:13:55,040 --> 00:14:05,509
<font color="#CCCCCC">we'll probably</font><font color="#E5E5E5"> learn about the error but</font>

259
00:14:00,699 --> 00:14:12,949
there are cases<font color="#CCCCCC"> but it may not be</font>

260
00:14:05,509 --> 00:14:16,399
<font color="#E5E5E5">actually true</font><font color="#CCCCCC"> so it also depends</font><font color="#E5E5E5"> on the</font>

261
00:14:12,949 --> 00:14:21,680
kernel version essentially<font color="#E5E5E5"> alter</font><font color="#CCCCCC"> knurl</font>

262
00:14:16,399 --> 00:14:25,009
versions up to<font color="#CCCCCC"> four thirteen are kind</font><font color="#E5E5E5"> of</font>

263
00:14:21,680 --> 00:14:31,128
doomed<font color="#E5E5E5"> right like we can't really detect</font>

264
00:14:25,009 --> 00:14:37,939
the<font color="#CCCCCC"> F seeing</font><font color="#E5E5E5"> failures at all because it</font>

265
00:14:31,129 --> 00:14:39,949
depends<font color="#E5E5E5"> the the representation of the of</font>

266
00:14:37,939 --> 00:14:44,360
the file in kernel is kind<font color="#CCCCCC"> of transient</font>

267
00:14:39,949 --> 00:14:47,839
<font color="#E5E5E5">right if you open a file you get</font><font color="#CCCCCC"> a file</font>

268
00:14:44,360 --> 00:14:51,459
descriptor<font color="#CCCCCC"> but the the the kernel has no</font>

269
00:14:47,839 --> 00:14:54,139
idea which process<font color="#E5E5E5"> which file descriptor</font>

270
00:14:51,459 --> 00:14:58,699
has written<font color="#CCCCCC"> which page so it doesn't it</font>

271
00:14:54,139 --> 00:15:00,350
can't easily map the failure<font color="#CCCCCC"> to the to</font>

272
00:14:58,699 --> 00:15:04,180
the process<font color="#E5E5E5"> to the file</font><font color="#CCCCCC"> descriptor</font><font color="#E5E5E5"> that</font>

273
00:15:00,350 --> 00:15:06,649
<font color="#E5E5E5">actually involved with variety and</font>

274
00:15:04,180 --> 00:15:10,069
similar<font color="#E5E5E5"> issues right and then it can</font>

275
00:15:06,649 --> 00:15:13,790
<font color="#CCCCCC">actually evict the inode from from the</font>

276
00:15:10,069 --> 00:15:16,610
page from from memory which which means

277
00:15:13,790 --> 00:15:18,980
it will also forget about the error and

278
00:15:16,610 --> 00:15:23,980
things like<font color="#E5E5E5"> that there have been</font>

279
00:15:18,980 --> 00:15:29,689
improvements over the<font color="#E5E5E5"> over</font><font color="#CCCCCC"> the years in</font>

280
00:15:23,980 --> 00:15:31,579
in the error reporting but<font color="#E5E5E5"> unfortunately</font>

281
00:15:29,689 --> 00:15:33,949
it got<font color="#E5E5E5"> fixed then it got broken again</font>

282
00:15:31,579 --> 00:15:35,310
then it got<font color="#CCCCCC"> fixed and broken again and</font>

283
00:15:33,949 --> 00:15:39,599
<font color="#E5E5E5">things like that</font>

284
00:15:35,310 --> 00:15:44,279
so what we really don't have well at

285
00:15:39,600 --> 00:15:46,589
this<font color="#CCCCCC"> point we have a</font><font color="#E5E5E5"> reliable way to get</font>

286
00:15:44,279 --> 00:15:50,819
the error<font color="#CCCCCC"> as long as we keep the oldest</font>

287
00:15:46,589 --> 00:15:52,920
file descriptor<font color="#E5E5E5"> around right which</font><font color="#CCCCCC"> pose</font>

288
00:15:50,819 --> 00:15:56,639
best didn't do so far<font color="#CCCCCC"> we have like a</font>

289
00:15:52,920 --> 00:15:58,259
small<font color="#CCCCCC"> cache of file descriptors so when</font>

290
00:15:56,639 --> 00:16:03,089
one process closes the file descriptor

291
00:15:58,259 --> 00:16:05,309
<font color="#E5E5E5">or file and another process needs to</font>

292
00:16:03,089 --> 00:16:06,930
<font color="#E5E5E5">open the file it will</font><font color="#CCCCCC"> get the file</font>

293
00:16:05,309 --> 00:16:12,180
descriptor from the cache<font color="#CCCCCC"> so we don't do</font>

294
00:16:06,930 --> 00:16:15,359
<font color="#E5E5E5">like system calls</font><font color="#CCCCCC"> over and</font><font color="#E5E5E5"> over and</font><font color="#CCCCCC"> we</font>

295
00:16:12,180 --> 00:16:18,449
can modify that<font color="#E5E5E5"> to actually keep around</font>

296
00:16:15,360 --> 00:16:22,050
<font color="#CCCCCC">the oldest file descriptor around so we</font>

297
00:16:18,449 --> 00:16:26,609
will always<font color="#CCCCCC"> learn reliably about the</font>

298
00:16:22,050 --> 00:16:31,019
failures<font color="#E5E5E5"> on the newest kernel so this is</font>

299
00:16:26,610 --> 00:16:38,430
like expectation number<font color="#E5E5E5"> two so wonderful</font>

300
00:16:31,019 --> 00:16:42,899
right so so<font color="#E5E5E5"> far I've been talking</font><font color="#CCCCCC"> mostly</font>

301
00:16:38,430 --> 00:16:45,500
about kernel when I said kernel I meant

302
00:16:42,899 --> 00:16:50,550
<font color="#E5E5E5">like Linux right but it's not really</font>

303
00:16:45,500 --> 00:16:52,529
<font color="#E5E5E5">limited to</font><font color="#CCCCCC"> to Linux</font><font color="#E5E5E5"> it's a kind of</font>

304
00:16:50,550 --> 00:16:55,410
universal problem<font color="#CCCCCC"> like what happens with</font>

305
00:16:52,529 --> 00:16:57,899
<font color="#E5E5E5">the memory when the when you fail to</font>

306
00:16:55,410 --> 00:17:00,509
write it to the<font color="#E5E5E5"> storage like you have to</font>

307
00:16:57,899 --> 00:17:05,520
do<font color="#E5E5E5"> choices</font><font color="#CCCCCC"> like you can either</font><font color="#E5E5E5"> keep that</font>

308
00:17:00,509 --> 00:17:08,069
around so<font color="#CCCCCC"> you can retry later or you can</font>

309
00:17:05,520 --> 00:17:11,970
discard the memory<font color="#E5E5E5"> and most systems</font>

310
00:17:08,069 --> 00:17:15,510
<font color="#E5E5E5">including like BSD systems actually just</font>

311
00:17:11,970 --> 00:17:19,799
discard the memory because otherwise it

312
00:17:15,510 --> 00:17:25,140
would<font color="#CCCCCC"> be a potential memory</font><font color="#E5E5E5"> right one of</font>

313
00:17:19,799 --> 00:17:27,000
the reasons<font color="#E5E5E5"> which is used as a to</font>

314
00:17:25,140 --> 00:17:30,419
demonstrate the issue<font color="#E5E5E5"> it's like when you</font>

315
00:17:27,000 --> 00:17:31,350
just pull the USB stick<font color="#E5E5E5"> out of the out</font>

316
00:17:30,419 --> 00:17:33,720
of the<font color="#E5E5E5"> port</font>

317
00:17:31,350 --> 00:17:35,939
I'll do the<font color="#CCCCCC"> machine and</font><font color="#E5E5E5"> you still have</font>

318
00:17:33,720 --> 00:17:39,260
like<font color="#E5E5E5"> dirty data to be written</font><font color="#CCCCCC"> to the to</font>

319
00:17:35,940 --> 00:17:42,390
the storage it's never going<font color="#E5E5E5"> to be</font>

320
00:17:39,260 --> 00:17:44,908
successful<font color="#CCCCCC"> written after that so you</font>

321
00:17:42,390 --> 00:17:48,590
would it doesn't make sense<font color="#E5E5E5"> to actually</font>

322
00:17:44,909 --> 00:17:48,590
<font color="#E5E5E5">keep it in the memory</font>

323
00:17:49,340 --> 00:17:55,980
so it kind of makes sense<font color="#E5E5E5"> from the</font>

324
00:17:51,960 --> 00:17:57,900
<font color="#E5E5E5">kernel development</font><font color="#CCCCCC"> point of view for us</font>

325
00:17:55,980 --> 00:18:01,830
it's<font color="#CCCCCC"> kind of unfortunate</font><font color="#E5E5E5"> because it</font>

326
00:17:57,900 --> 00:18:04,680
<font color="#E5E5E5">means we have</font><font color="#CCCCCC"> to do much more work to</font>

327
00:18:01,830 --> 00:18:12,740
actually reliably detect<font color="#E5E5E5"> and handle</font>

328
00:18:04,680 --> 00:18:16,050
errors it it's not really<font color="#E5E5E5"> against POSIX</font>

329
00:18:12,740 --> 00:18:18,900
<font color="#E5E5E5">I've been trying to read the POSIX</font>

330
00:18:16,050 --> 00:18:21,270
specification<font color="#E5E5E5"> I don't know how many of</font>

331
00:18:18,900 --> 00:18:25,530
you try to do<font color="#E5E5E5"> something like that</font>

332
00:18:21,270 --> 00:18:28,020
don't do that<font color="#CCCCCC"> how's my advice it's not</font>

333
00:18:25,530 --> 00:18:35,389
really<font color="#E5E5E5"> simple to decide like what POSIX</font>

334
00:18:28,020 --> 00:18:38,639
actually requires right it's certainly

335
00:18:35,390 --> 00:18:43,710
in many<font color="#E5E5E5"> cases the kind of ambiguous</font><font color="#CCCCCC"> I'd</font>

336
00:18:38,640 --> 00:18:45,510
it says like very general requirements

337
00:18:43,710 --> 00:18:48,570
but<font color="#E5E5E5"> it doesn't say how exactly that</font>

338
00:18:45,510 --> 00:18:50,940
should be implemented<font color="#E5E5E5"> so that's one</font>

339
00:18:48,570 --> 00:18:52,520
<font color="#CCCCCC">reason</font><font color="#E5E5E5"> the other reason is it doesn't</font>

340
00:18:50,940 --> 00:18:55,260
<font color="#E5E5E5">really matter what the POSIX</font>

341
00:18:52,520 --> 00:18:57,500
<font color="#E5E5E5">specification says when the system's</font>

342
00:18:55,260 --> 00:19:00,810
already behave in a certain way<font color="#CCCCCC"> right</font>

343
00:18:57,500 --> 00:19:04,140
<font color="#E5E5E5">because you can't really implement stuff</font>

344
00:19:00,810 --> 00:19:06,389
for like ideal POSIX compliant system

345
00:19:04,140 --> 00:19:12,300
when you don't have such systems in

346
00:19:06,390 --> 00:19:13,980
production<font color="#E5E5E5"> right so this ship kind of</font>

347
00:19:12,300 --> 00:19:16,790
already<font color="#CCCCCC"> sail I mean like the systems</font>

348
00:19:13,980 --> 00:19:22,590
behave in a way we have to<font color="#E5E5E5"> handle that</font>

349
00:19:16,790 --> 00:19:26,340
<font color="#E5E5E5">we want to</font><font color="#CCCCCC"> handle</font><font color="#E5E5E5"> that reliably and now</font>

350
00:19:22,590 --> 00:19:28,679
that's question like why did it take

351
00:19:26,340 --> 00:19:35,189
like 20<font color="#CCCCCC"> to</font><font color="#E5E5E5"> 25</font><font color="#CCCCCC"> years to actually notice</font>

352
00:19:28,680 --> 00:19:37,920
this well<font color="#E5E5E5"> in the past the storage was</font>

353
00:19:35,190 --> 00:19:39,540
<font color="#E5E5E5">usually designed for like database</font>

354
00:19:37,920 --> 00:19:40,200
<font color="#CCCCCC">service</font><font color="#E5E5E5"> right so it was designed for</font>

355
00:19:39,540 --> 00:19:46,530
reliability

356
00:19:40,200 --> 00:19:49,980
you got like<font color="#E5E5E5"> locally connected drives</font>

357
00:19:46,530 --> 00:19:52,760
connected<font color="#E5E5E5"> to a RAID controller with</font>

358
00:19:49,980 --> 00:19:56,880
<font color="#E5E5E5">right cache with with a small battery</font>

359
00:19:52,760 --> 00:19:59,129
<font color="#CCCCCC">and it was really reliable a</font><font color="#E5E5E5"> resident</font>

360
00:19:56,880 --> 00:20:01,950
<font color="#CCCCCC">and</font><font color="#E5E5E5"> when it failed it failed</font><font color="#CCCCCC"> spectacular</font>

361
00:19:59,130 --> 00:20:07,020
like it failed and<font color="#E5E5E5"> it never came again</font>

362
00:20:01,950 --> 00:20:13,380
<font color="#CCCCCC">came</font><font color="#E5E5E5"> back again so like it was obvious</font>

363
00:20:07,020 --> 00:20:16,799
that<font color="#E5E5E5"> it got</font><font color="#CCCCCC"> broken and</font><font color="#E5E5E5"> those errors were</font>

364
00:20:13,380 --> 00:20:20,039
kind of more permanent<font color="#E5E5E5"> right it's not</font>

365
00:20:16,799 --> 00:20:23,750
<font color="#CCCCCC">like the</font><font color="#E5E5E5"> the thing</font><font color="#CCCCCC"> that on one attempt</font>

366
00:20:20,039 --> 00:20:26,879
fails<font color="#E5E5E5"> and then it actually succeeds</font><font color="#CCCCCC"> so</font>

367
00:20:23,750 --> 00:20:31,350
<font color="#CCCCCC">why is it problem now and by now I mean</font>

368
00:20:26,880 --> 00:20:37,770
like a couple years back<font color="#CCCCCC"> well</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

369
00:20:31,350 --> 00:20:40,379
much more systems with<font color="#CCCCCC"> network-attached</font>

370
00:20:37,770 --> 00:20:41,340
storage<font color="#CCCCCC"> right so it might</font><font color="#E5E5E5"> be different</font>

371
00:20:40,380 --> 00:20:43,860
<font color="#CCCCCC">types of Sam</font>

372
00:20:41,340 --> 00:20:47,850
it might be EBS on Amazon it might be

373
00:20:43,860 --> 00:20:51,590
NFS we also have things like thin

374
00:20:47,850 --> 00:20:54,240
provisioning<font color="#E5E5E5"> which also lead to</font>

375
00:20:51,590 --> 00:20:57,629
<font color="#E5E5E5">temporary errors right so you have</font><font color="#CCCCCC"> a</font>

376
00:20:54,240 --> 00:21:01,260
thin provisioning with the quota<font color="#E5E5E5"> you run</font>

377
00:20:57,630 --> 00:21:05,640
<font color="#E5E5E5">out</font><font color="#CCCCCC"> of out of</font><font color="#E5E5E5"> disk space on on the on</font>

378
00:21:01,260 --> 00:21:09,000
the storage device after<font color="#E5E5E5"> like a few</font>

379
00:21:05,640 --> 00:21:11,370
seconds<font color="#CCCCCC"> the system will notice that like</font>

380
00:21:09,000 --> 00:21:13,860
there's a lack<font color="#CCCCCC"> of</font><font color="#E5E5E5"> space you will delete</font>

381
00:21:11,370 --> 00:21:22,199
something<font color="#E5E5E5"> and suddenly it succeeds again</font>

382
00:21:13,860 --> 00:21:27,570
right it's completely transient<font color="#CCCCCC"> and we</font>

383
00:21:22,200 --> 00:21:30,570
also have<font color="#E5E5E5"> fixed so many data durability</font>

384
00:21:27,570 --> 00:21:35,820
and data corruption issues in the system

385
00:21:30,570 --> 00:21:39,629
not<font color="#CCCCCC"> just</font><font color="#E5E5E5"> in Postgres but also in the in</font>

386
00:21:35,820 --> 00:21:42,870
<font color="#CCCCCC">the kernel</font><font color="#E5E5E5"> that this actually starts</font><font color="#CCCCCC"> to</font>

387
00:21:39,630 --> 00:21:48,289
matter<font color="#CCCCCC"> now right I mean</font><font color="#E5E5E5"> this these</font>

388
00:21:42,870 --> 00:21:51,360
errors are kind of quite rare in<font color="#CCCCCC"> general</font>

389
00:21:48,289 --> 00:21:54,419
they are<font color="#CCCCCC"> becoming</font><font color="#E5E5E5"> more common and they</font>

390
00:21:51,360 --> 00:21:59,010
are also<font color="#CCCCCC"> becoming more common</font><font color="#E5E5E5"> with</font>

391
00:21:54,419 --> 00:22:02,309
<font color="#CCCCCC">respect</font><font color="#E5E5E5"> to the other earth</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> not</font>

392
00:21:59,010 --> 00:22:07,309
the<font color="#CCCCCC"> the noise anymore</font><font color="#E5E5E5"> it's something we</font>

393
00:22:02,309 --> 00:22:10,639
can<font color="#CCCCCC"> actually investigate and reproduce</font>

394
00:22:07,309 --> 00:22:13,490
<font color="#CCCCCC">which leads</font><font color="#E5E5E5"> me of course to</font>

395
00:22:10,640 --> 00:22:16,929
<font color="#E5E5E5">to the problem of</font><font color="#CCCCCC"> actually causing the</font>

396
00:22:13,490 --> 00:22:22,730
<font color="#E5E5E5">problems like do invoking such issues</font>

397
00:22:16,929 --> 00:22:24,290
<font color="#CCCCCC">while</font><font color="#E5E5E5"> developing the database and we for</font>

398
00:22:22,730 --> 00:22:26,990
a long time like how<font color="#CCCCCC"> would</font><font color="#E5E5E5"> you cause</font>

399
00:22:24,290 --> 00:22:32,450
<font color="#CCCCCC">that we didn't really have like a way</font><font color="#E5E5E5"> to</font>

400
00:22:26,990 --> 00:22:36,880
course easily such transient<font color="#E5E5E5"> errors</font><font color="#CCCCCC"> a</font>

401
00:22:32,450 --> 00:22:41,420
couple of<font color="#E5E5E5"> years ago we</font><font color="#CCCCCC"> got the DM</font><font color="#E5E5E5"> error</font>

402
00:22:36,880 --> 00:22:43,850
<font color="#CCCCCC">part of the data device mapper in kernel</font>

403
00:22:41,420 --> 00:22:47,240
which is like a great tool to<font color="#E5E5E5"> actually</font>

404
00:22:43,850 --> 00:22:50,090
<font color="#E5E5E5">do this and that's one</font><font color="#CCCCCC"> of the ways how</font>

405
00:22:47,240 --> 00:22:53,059
we actually<font color="#E5E5E5"> have</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> able to reproduce</font>

406
00:22:50,090 --> 00:22:57,949
<font color="#CCCCCC">a scenario where we actually lost data</font>

407
00:22:53,059 --> 00:23:01,730
<font color="#E5E5E5">this way and I can say</font><font color="#CCCCCC"> that this</font>

408
00:22:57,950 --> 00:23:04,790
explains<font color="#CCCCCC"> so</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> in the past like we've</font>

409
00:23:01,730 --> 00:23:06,790
been observing<font color="#E5E5E5"> of course data corruption</font>

410
00:23:04,790 --> 00:23:12,379
issues in production systems<font color="#CCCCCC"> and</font>

411
00:23:06,790 --> 00:23:16,220
<font color="#E5E5E5">whenever we saw like NFS we sell NFS</font><font color="#CCCCCC"> is</font>

412
00:23:12,380 --> 00:23:17,330
known<font color="#E5E5E5"> so it's definitely that right</font>

413
00:23:16,220 --> 00:23:20,840
I mean like we don't<font color="#E5E5E5"> have any other</font>

414
00:23:17,330 --> 00:23:26,059
<font color="#CCCCCC">explanation it's</font><font color="#E5E5E5"> definitely because of</font>

415
00:23:20,840 --> 00:23:29,870
<font color="#CCCCCC">NFS I'm pretty sure if</font><font color="#E5E5E5"> we went</font><font color="#CCCCCC"> back and</font>

416
00:23:26,059 --> 00:23:33,379
<font color="#E5E5E5">actually investigated all those reports</font>

417
00:23:29,870 --> 00:23:38,239
<font color="#CCCCCC">a significant part of that was probably</font>

418
00:23:33,380 --> 00:23:40,130
<font color="#CCCCCC">because</font><font color="#E5E5E5"> of these issues</font><font color="#CCCCCC"> the other</font>

419
00:23:38,240 --> 00:23:42,919
question is why is possible is actually

420
00:23:40,130 --> 00:23:44,530
using buffered i/o at all right when

421
00:23:42,919 --> 00:23:49,190
there<font color="#E5E5E5"> are databases</font><font color="#CCCCCC"> they're actually</font>

422
00:23:44,530 --> 00:23:51,410
<font color="#E5E5E5">adopted the direct I all doing all the</font>

423
00:23:49,190 --> 00:23:55,850
caching not using the page cache at all

424
00:23:51,410 --> 00:23:58,340
but doing everything<font color="#E5E5E5"> internally like</font>

425
00:23:55,850 --> 00:24:02,120
<font color="#E5E5E5">Oracle for example as far as I know is</font>

426
00:23:58,340 --> 00:24:07,879
not<font color="#E5E5E5"> using buffered i/o other databases</font>

427
00:24:02,120 --> 00:24:09,678
probably are<font color="#CCCCCC"> doing the same well that's</font>

428
00:24:07,880 --> 00:24:11,929
really about<font color="#E5E5E5"> the history of the</font><font color="#CCCCCC"> project</font>

429
00:24:09,679 --> 00:24:16,460
like<font color="#E5E5E5"> Postgres started as a research</font>

430
00:24:11,929 --> 00:24:19,220
project at<font color="#CCCCCC"> berkeley and the focus of</font>

431
00:24:16,460 --> 00:24:21,020
<font color="#E5E5E5">that research project was not to develop</font>

432
00:24:19,220 --> 00:24:24,260
<font color="#E5E5E5">a director</font>

433
00:24:21,020 --> 00:24:26,720
based<font color="#CCCCCC"> database right</font><font color="#E5E5E5"> the the goal is</font><font color="#CCCCCC"> to</font>

434
00:24:24,260 --> 00:24:30,700
develop a database<font color="#E5E5E5"> which was extensible</font>

435
00:24:26,720 --> 00:24:36,350
was<font color="#CCCCCC"> adapting some object</font><font color="#E5E5E5"> ideas</font>

436
00:24:30,700 --> 00:24:38,030
<font color="#E5E5E5">object-oriented database</font><font color="#CCCCCC"> ideas and stuff</font>

437
00:24:36,350 --> 00:24:41,530
like that<font color="#E5E5E5"> right so</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> was focused on</font>

438
00:24:38,030 --> 00:24:46,580
very<font color="#E5E5E5"> different parts of the database and</font>

439
00:24:41,530 --> 00:24:53,480
it was very<font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to just adopt the</font><font color="#E5E5E5"> the</font>

440
00:24:46,580 --> 00:24:55,250
buffer<font color="#CCCCCC"> tile</font><font color="#E5E5E5"> it's also it was</font><font color="#CCCCCC"> also the</font>

441
00:24:53,480 --> 00:24:56,800
acceptance of the complexity of the

442
00:24:55,250 --> 00:24:59,240
aisle stacks right<font color="#E5E5E5"> we're like</font>

443
00:24:56,800 --> 00:25:04,970
implementing<font color="#CCCCCC"> io stack is not a trivial</font>

444
00:24:59,240 --> 00:25:09,170
thing<font color="#CCCCCC"> and we are database engineers</font><font color="#E5E5E5"> we</font>

445
00:25:04,970 --> 00:25:13,820
are not<font color="#E5E5E5"> IO engineers so we don't really</font>

446
00:25:09,170 --> 00:25:16,490
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that part of work we don't</font>

447
00:25:13,820 --> 00:25:19,600
want to waste<font color="#E5E5E5"> work on that we want to</font>

448
00:25:16,490 --> 00:25:23,210
<font color="#E5E5E5">benefit from the work of the kernel</font>

449
00:25:19,600 --> 00:25:28,809
<font color="#CCCCCC">community and I think it</font><font color="#E5E5E5"> over the years</font>

450
00:25:23,210 --> 00:25:32,540
it<font color="#CCCCCC"> actually went by</font><font color="#E5E5E5"> 12</font><font color="#CCCCCC"> like 20 years</font><font color="#E5E5E5"> ago</font>

451
00:25:28,809 --> 00:25:35,420
<font color="#CCCCCC">the development team behind Postgres was</font>

452
00:25:32,540 --> 00:25:37,670
much<font color="#CCCCCC"> much smaller</font><font color="#E5E5E5"> right nowadays we</font><font color="#CCCCCC"> have</font>

453
00:25:35,420 --> 00:25:40,550
like hundreds of people submitting

454
00:25:37,670 --> 00:25:44,170
patches and<font color="#CCCCCC"> reviewing patches but</font><font color="#E5E5E5"> 20</font>

455
00:25:40,550 --> 00:25:44,169
<font color="#CCCCCC">years</font><font color="#E5E5E5"> ago it was maybe five people right</font>

456
00:25:45,760 --> 00:25:52,760
<font color="#CCCCCC">so</font><font color="#E5E5E5"> we know what the problem is</font><font color="#CCCCCC"> kind of</font>

457
00:25:50,800 --> 00:25:56,570
so how do we<font color="#E5E5E5"> fix the issue</font>

458
00:25:52,760 --> 00:25:58,670
<font color="#E5E5E5">well option</font><font color="#CCCCCC"> number one is like modifying</font>

459
00:25:56,570 --> 00:26:02,360
the kernel right<font color="#E5E5E5"> making</font><font color="#CCCCCC"> it to actually</font>

460
00:25:58,670 --> 00:26:05,650
<font color="#E5E5E5">keep the the memory the modified data</font>

461
00:26:02,360 --> 00:26:09,350
around<font color="#E5E5E5"> and</font><font color="#CCCCCC"> actually doing the retry</font>

462
00:26:05,650 --> 00:26:11,059
properly<font color="#E5E5E5"> well that's something that</font>

463
00:26:09,350 --> 00:26:13,010
would<font color="#E5E5E5"> work</font><font color="#CCCCCC"> perfectly for the</font><font color="#E5E5E5"> database</font>

464
00:26:11,059 --> 00:26:15,889
but it's<font color="#CCCCCC"> something that can't really be</font>

465
00:26:13,010 --> 00:26:18,350
done<font color="#E5E5E5"> first we would have</font><font color="#CCCCCC"> to convince</font><font color="#E5E5E5"> the</font>

466
00:26:15,890 --> 00:26:20,830
kernel developers that it's the right

467
00:26:18,350 --> 00:26:20,830
<font color="#CCCCCC">thing to do</font>

468
00:26:21,170 --> 00:26:27,679
as I explained from<font color="#E5E5E5"> while it might</font>

469
00:26:26,000 --> 00:26:30,080
<font color="#E5E5E5">actually work for the database it</font>

470
00:26:27,679 --> 00:26:31,190
probably wouldn't<font color="#E5E5E5"> work for other use</font>

471
00:26:30,080 --> 00:26:35,210
cases

472
00:26:31,190 --> 00:26:37,160
and it's not something<font color="#CCCCCC"> that can actually</font>

473
00:26:35,210 --> 00:26:40,370
fix existing issues<font color="#CCCCCC"> after existing</font>

474
00:26:37,160 --> 00:26:42,170
problems existing systems<font color="#E5E5E5"> right</font><font color="#CCCCCC"> we</font>

475
00:26:40,370 --> 00:26:45,429
<font color="#E5E5E5">already have like a hundreds of</font>

476
00:26:42,170 --> 00:26:49,250
thousands<font color="#E5E5E5"> of servers in production and</font>

477
00:26:45,430 --> 00:26:51,950
the likelihood<font color="#CCCCCC"> of this getting to them</font>

478
00:26:49,250 --> 00:26:54,080
to those systems<font color="#E5E5E5"> anytime soon it's like</font>

479
00:26:51,950 --> 00:26:56,650
<font color="#E5E5E5">zero right</font>

480
00:26:54,080 --> 00:27:02,030
we still have systems that<font color="#E5E5E5"> are running</font>

481
00:26:56,650 --> 00:27:06,890
kernel 2.6 something on large on old

482
00:27:02,030 --> 00:27:10,010
CentOS systems right so that's not

483
00:27:06,890 --> 00:27:18,170
really<font color="#E5E5E5"> something we can use</font><font color="#CCCCCC"> for existing</font>

484
00:27:10,010 --> 00:27:23,210
systems<font color="#CCCCCC"> so that's not really a solution</font>

485
00:27:18,170 --> 00:27:25,100
we can we can<font color="#E5E5E5"> use so we have to solve</font>

486
00:27:23,210 --> 00:27:28,400
this<font color="#E5E5E5"> in Postgres</font>

487
00:27:25,100 --> 00:27:32,659
with minimal help from the kernel right

488
00:27:28,400 --> 00:27:36,230
<font color="#E5E5E5">so what we have since kernel</font><font color="#CCCCCC"> 413 is a</font>

489
00:27:32,660 --> 00:27:40,460
way to actually kind<font color="#E5E5E5"> of reliably detect</font>

490
00:27:36,230 --> 00:27:42,650
the the errors during<font color="#CCCCCC"> F sync which is by</font>

491
00:27:40,460 --> 00:27:47,060
<font color="#CCCCCC">keeping the the</font><font color="#E5E5E5"> oldest file descriptor</font>

492
00:27:42,650 --> 00:27:52,220
around and<font color="#E5E5E5"> actually looking at that</font>

493
00:27:47,060 --> 00:27:57,139
<font color="#E5E5E5">particle file descriptor</font><font color="#CCCCCC"> we can make</font>

494
00:27:52,220 --> 00:28:01,970
<font color="#CCCCCC">sure that in those cases</font><font color="#E5E5E5"> we reliably</font>

495
00:27:57,140 --> 00:28:03,890
detect the<font color="#E5E5E5"> error and we can trigger a</font>

496
00:28:01,970 --> 00:28:07,610
panic<font color="#CCCCCC"> which is essentially a database</font>

497
00:28:03,890 --> 00:28:09,860
<font color="#E5E5E5">crash a recovery and you don't lose any</font>

498
00:28:07,610 --> 00:28:12,439
data<font color="#E5E5E5"> it's of course the disruption of</font>

499
00:28:09,860 --> 00:28:14,449
<font color="#E5E5E5">the service but if you if you really</font>

500
00:28:12,440 --> 00:28:16,760
<font color="#E5E5E5">care about like high availability if it</font>

501
00:28:14,450 --> 00:28:21,620
was grass you should already have<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a</font>

502
00:28:16,760 --> 00:28:24,879
<font color="#CCCCCC">stand by with a failover and</font><font color="#E5E5E5"> that will</font>

503
00:28:21,620 --> 00:28:24,879
<font color="#CCCCCC">also work here</font>

504
00:28:25,340 --> 00:28:31,070
it requires modifications to how we

505
00:28:27,590 --> 00:28:33,199
cache<font color="#E5E5E5"> the file descriptors because in</font>

506
00:28:31,070 --> 00:28:35,360
all the versions of<font color="#E5E5E5"> terminal of Postgres</font>

507
00:28:33,200 --> 00:28:37,580
we haven't actually considered like

508
00:28:35,360 --> 00:28:42,320
which file descriptor is older stuff

509
00:28:37,580 --> 00:28:44,570
like that<font color="#E5E5E5"> we can do that</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> there is a</font>

510
00:28:42,320 --> 00:28:47,178
patch which will likely get into

511
00:28:44,570 --> 00:28:53,840
rs.12<font color="#E5E5E5"> which is supposed to be released</font>

512
00:28:47,179 --> 00:28:57,470
<font color="#E5E5E5">sometime in September October 2019</font><font color="#CCCCCC"> it</font>

513
00:28:53,840 --> 00:28:59,029
will require<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Nuba kernel but we</font>

514
00:28:57,470 --> 00:29:01,940
can't really do anything<font color="#CCCCCC"> about</font><font color="#E5E5E5"> older</font>

515
00:28:59,029 --> 00:29:03,889
ones<font color="#E5E5E5"> I'm not sure</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> my about back</font>

516
00:29:01,940 --> 00:29:07,639
<font color="#E5E5E5">patching</font><font color="#CCCCCC"> two older most best versions</font>

517
00:29:03,889 --> 00:29:12,850
but chances are it will be back<font color="#CCCCCC"> patch to</font>

518
00:29:07,639 --> 00:29:12,850
<font color="#CCCCCC">existing</font><font color="#E5E5E5"> progress</font><font color="#CCCCCC"> possibly releases</font>

519
00:29:13,929 --> 00:29:21,559
right and right and<font color="#E5E5E5"> there should be</font>

520
00:29:19,399 --> 00:29:23,360
actually<font color="#E5E5E5"> another slide which says</font><font color="#CCCCCC"> like a</font>

521
00:29:21,559 --> 00:29:28,809
<font color="#CCCCCC">long-term solution in</font><font color="#E5E5E5"> progress and</font>

522
00:29:23,360 --> 00:29:31,939
that's maybe over the past few years

523
00:29:28,809 --> 00:29:36,080
essentially<font color="#CCCCCC"> adopting the direct</font><font color="#E5E5E5"> IO</font>

524
00:29:31,940 --> 00:29:39,919
approach<font color="#E5E5E5"> like</font><font color="#CCCCCC"> not raw devices we would</font>

525
00:29:36,080 --> 00:29:43,428
still use the<font color="#E5E5E5"> file systems available</font><font color="#CCCCCC"> in</font>

526
00:29:39,919 --> 00:29:48,289
<font color="#E5E5E5">control</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> using the page</font>

527
00:29:43,429 --> 00:29:50,990
cache we would do all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> all the F</font>

528
00:29:48,289 --> 00:29:54,259
<font color="#E5E5E5">thing essentially from</font><font color="#CCCCCC"> the database</font>

529
00:29:50,990 --> 00:29:58,820
right so there<font color="#E5E5E5"> are some</font><font color="#CCCCCC"> proposals how to</font>

530
00:29:54,259 --> 00:30:02,059
do that but<font color="#E5E5E5"> it's while reworking the the</font>

531
00:29:58,820 --> 00:30:04,939
file descriptor handling is let's say

532
00:30:02,059 --> 00:30:08,570
trivial<font color="#E5E5E5"> this is going to be like over</font>

533
00:30:04,940 --> 00:30:11,960
<font color="#E5E5E5">maybe two or three</font><font color="#CCCCCC"> years</font><font color="#E5E5E5"> effort to</font>

534
00:30:08,570 --> 00:30:14,178
<font color="#CCCCCC">actually get it working</font><font color="#E5E5E5"> without</font>

535
00:30:11,960 --> 00:30:16,669
significant<font color="#CCCCCC"> performance regressions and</font>

536
00:30:14,179 --> 00:30:21,799
stuff like<font color="#E5E5E5"> that so that's</font><font color="#CCCCCC"> like a long</font>

537
00:30:16,669 --> 00:30:25,870
<font color="#CCCCCC">term plan which i think was</font><font color="#E5E5E5"> like already</font>

538
00:30:21,799 --> 00:30:31,039
discussed on the mailing lists and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> on</font>

539
00:30:25,870 --> 00:30:36,289
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> mostly what I have here</font>

540
00:30:31,039 --> 00:30:38,269
<font color="#E5E5E5">I do have</font><font color="#CCCCCC"> a bunch of</font><font color="#E5E5E5"> links here which if</font>

541
00:30:36,289 --> 00:30:41,179
you need more or<font color="#CCCCCC"> are interested in the</font>

542
00:30:38,269 --> 00:30:45,559
topic<font color="#E5E5E5"> first there</font><font color="#CCCCCC"> are some discussions</font>

543
00:30:41,179 --> 00:30:50,029
<font color="#E5E5E5">on</font><font color="#CCCCCC"> PG SQL hikers</font><font color="#E5E5E5"> where you can actually</font>

544
00:30:45,559 --> 00:30:54,230
see how we discover the issue<font color="#E5E5E5"> right</font>

545
00:30:50,029 --> 00:30:57,240
<font color="#E5E5E5">which as I don't know if you have ever</font>

546
00:30:54,230 --> 00:30:59,700
seen<font color="#CCCCCC"> such issues</font>

547
00:30:57,240 --> 00:31:01,679
investigations in in<font color="#E5E5E5"> practice it starts</font>

548
00:30:59,700 --> 00:31:04,620
with like<font color="#CCCCCC"> a minor issue which you</font>

549
00:31:01,679 --> 00:31:06,779
investigate and then it's like a rabbit

550
00:31:04,620 --> 00:31:09,000
<font color="#CCCCCC">hole right</font><font color="#E5E5E5"> you get into the the small</font>

551
00:31:06,779 --> 00:31:11,429
issue then<font color="#E5E5E5"> you discover</font><font color="#CCCCCC"> it's like much</font>

552
00:31:09,000 --> 00:31:15,120
<font color="#E5E5E5">more broken than you thought then you</font>

553
00:31:11,429 --> 00:31:17,970
<font color="#E5E5E5">get</font><font color="#CCCCCC"> into another rabbit hole into</font><font color="#E5E5E5"> like</font>

554
00:31:15,120 --> 00:31:22,469
much more<font color="#E5E5E5"> significant issue and</font><font color="#CCCCCC"> so on so</font>

555
00:31:17,970 --> 00:31:24,510
that's the first two discussions and

556
00:31:22,470 --> 00:31:31,760
then these issues were actually

557
00:31:24,510 --> 00:31:34,110
discussed on lwn in like three<font color="#CCCCCC"> different</font>

558
00:31:31,760 --> 00:31:35,970
articles

559
00:31:34,110 --> 00:31:40,770
the first one is<font color="#E5E5E5"> specifically about</font><font color="#CCCCCC"> paws</font>

560
00:31:35,970 --> 00:31:44,520
<font color="#E5E5E5">grass</font><font color="#CCCCCC"> explaining like</font><font color="#E5E5E5"> why we were so</font>

561
00:31:40,770 --> 00:31:47,309
surprised about that<font color="#CCCCCC"> and then there</font><font color="#E5E5E5"> are</font>

562
00:31:44,520 --> 00:31:50,668
two different<font color="#CCCCCC"> articles explaining</font><font color="#E5E5E5"> like</font>

563
00:31:47,309 --> 00:31:53,990
<font color="#CCCCCC">how the error reporting in the kernel</font>

564
00:31:50,669 --> 00:31:59,520
got broken and<font color="#E5E5E5"> fixed and broken again</font>

565
00:31:53,990 --> 00:32:03,210
<font color="#CCCCCC">and so</font><font color="#E5E5E5"> on and and finally there's a very</font>

566
00:31:59,520 --> 00:32:06,779
nice talk<font color="#E5E5E5"> by</font><font color="#CCCCCC"> McKee Wilcox from</font><font color="#E5E5E5"> I think</font>

567
00:32:03,210 --> 00:32:11,669
<font color="#CCCCCC">Microsoft but who works on kernel</font>

568
00:32:06,779 --> 00:32:14,250
nowadays and he had a very<font color="#E5E5E5"> nice talk @pg</font>

569
00:32:11,669 --> 00:32:16,799
<font color="#E5E5E5">Khan in</font><font color="#CCCCCC"> October</font><font color="#E5E5E5"> this year</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> like</font>

570
00:32:14,250 --> 00:32:22,200
the<font color="#E5E5E5"> main post press conference for</font>

571
00:32:16,799 --> 00:32:24,658
<font color="#E5E5E5">developers in the world</font><font color="#CCCCCC"> and he was</font>

572
00:32:22,200 --> 00:32:28,559
exactly<font color="#E5E5E5"> explaining like what are the</font>

573
00:32:24,659 --> 00:32:31,080
issues with tracing the errors<font color="#E5E5E5"> and</font>

574
00:32:28,559 --> 00:32:32,850
tracking the errors in<font color="#CCCCCC"> the kernel</font><font color="#E5E5E5"> for</font>

575
00:32:31,080 --> 00:32:36,260
different file descriptors<font color="#CCCCCC"> and how it</font>

576
00:32:32,850 --> 00:32:40,709
<font color="#E5E5E5">got broken in different versions</font><font color="#CCCCCC"> of of</font>

577
00:32:36,260 --> 00:32:43,830
kernel and there is actually now now

578
00:32:40,710 --> 00:32:46,980
there is a video<font color="#E5E5E5"> on YouTube with the</font>

579
00:32:43,830 --> 00:32:51,480
<font color="#CCCCCC">talk so if you want to know the</font><font color="#E5E5E5"> details</font>

580
00:32:46,980 --> 00:32:54,149
from like much<font color="#CCCCCC"> more knowledgeable person</font>

581
00:32:51,480 --> 00:32:59,130
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> probably the recording you</font>

582
00:32:54,149 --> 00:33:02,789
<font color="#CCCCCC">should</font><font color="#E5E5E5"> be looking</font><font color="#CCCCCC"> at right so</font><font color="#E5E5E5"> um that's</font>

583
00:32:59,130 --> 00:33:08,299
<font color="#E5E5E5">all I have here I think so</font>

584
00:33:02,789 --> 00:33:08,299
other any questions yeah

585
00:33:18,679 --> 00:33:23,489
my question was how do you<font color="#E5E5E5"> go about</font>

586
00:33:21,119 --> 00:33:25,619
testing<font color="#E5E5E5"> that your solutions are correct</font>

587
00:33:23,489 --> 00:33:27,299
<font color="#CCCCCC">and how</font><font color="#E5E5E5"> you're testing the</font><font color="#CCCCCC"> F sync</font>

588
00:33:25,619 --> 00:33:29,070
behavior on different file systems<font color="#CCCCCC"> are</font>

589
00:33:27,299 --> 00:33:33,119
you reading the<font color="#E5E5E5"> code or are you you</font>

590
00:33:29,070 --> 00:33:35,789
applying tests to it somehow<font color="#E5E5E5"> so some</font>

591
00:33:33,119 --> 00:33:43,619
<font color="#E5E5E5">sort</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the question do we have</font><font color="#CCCCCC"> a</font>

592
00:33:35,789 --> 00:33:47,669
testing for for the correct behavior<font color="#CCCCCC"> yes</font>

593
00:33:43,619 --> 00:33:52,220
my<font color="#E5E5E5"> colleague was actually has a script</font>

594
00:33:47,669 --> 00:33:54,989
<font color="#E5E5E5">which actually uses DM error to</font>

595
00:33:52,220 --> 00:33:59,970
reproduce the errors<font color="#E5E5E5"> of it and without</font>

596
00:33:54,989 --> 00:34:01,320
<font color="#E5E5E5">the without the patches and we know it's</font>

597
00:33:59,970 --> 00:34:04,049
really<font color="#E5E5E5"> difficult</font><font color="#CCCCCC"> to say that it's like</font>

598
00:34:01,320 --> 00:34:06,720
<font color="#E5E5E5">perfectly correct but we see that with</font>

599
00:34:04,049 --> 00:34:10,230
these changes<font color="#E5E5E5"> with the new kernels</font><font color="#CCCCCC"> it</font>

600
00:34:06,720 --> 00:34:19,199
<font color="#E5E5E5">actually behaves correctly</font><font color="#CCCCCC"> we don't lose</font>

601
00:34:10,230 --> 00:34:21,780
the data<font color="#E5E5E5"> anymore I'm I'm pretty sure he</font>

602
00:34:19,199 --> 00:34:23,609
actually<font color="#E5E5E5"> he shared that on the Postgres</font>

603
00:34:21,780 --> 00:34:29,280
mailing lists

604
00:34:23,609 --> 00:34:35,000
<font color="#E5E5E5">just</font><font color="#CCCCCC"> look for Craig</font><font color="#E5E5E5"> ringer in in the</font>

605
00:34:29,280 --> 00:34:35,000
<font color="#E5E5E5">mailing lists and that's that's him yep</font>

606
00:34:36,719 --> 00:34:46,808
what inspired you to<font color="#CCCCCC"> do this research</font>

607
00:34:40,440 --> 00:34:48,759
<font color="#E5E5E5">sorry what inspired you so well we have</font>

608
00:34:46,809 --> 00:34:52,089
customers running or Postgres and they

609
00:34:48,759 --> 00:34:54,759
actually<font color="#E5E5E5"> lost data</font><font color="#CCCCCC"> they run into data</font>

610
00:34:52,089 --> 00:34:57,279
corruption<font color="#E5E5E5"> issue because of this right</font>

611
00:34:54,759 --> 00:34:59,049
so we've<font color="#E5E5E5"> been investigating like why</font>

612
00:34:57,279 --> 00:35:03,400
there is like a broken<font color="#E5E5E5"> index or</font>

613
00:34:59,049 --> 00:35:06,279
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that and in</font><font color="#E5E5E5"> that particle</font>

614
00:35:03,400 --> 00:35:07,630
<font color="#E5E5E5">case it was kind of more complicated</font>

615
00:35:06,279 --> 00:35:12,039
because they've been<font color="#CCCCCC"> running on like</font>

616
00:35:07,630 --> 00:35:14,710
<font color="#CCCCCC">multi path with multiple paths to</font><font color="#E5E5E5"> the</font>

617
00:35:12,039 --> 00:35:16,690
devices<font color="#E5E5E5"> and so on so we have discovered</font>

618
00:35:14,710 --> 00:35:19,119
like various issues in<font color="#CCCCCC"> that but</font>

619
00:35:16,690 --> 00:35:23,799
ultimately<font color="#E5E5E5"> it turned out to be because</font>

620
00:35:19,119 --> 00:35:27,130
<font color="#E5E5E5">of this is</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> actually you need to</font>

621
00:35:23,799 --> 00:35:31,259
<font color="#E5E5E5">fix the problem by the Postgres project</font>

622
00:35:27,130 --> 00:35:34,599
itself<font color="#E5E5E5"> couldn't be rather leveraged</font>

623
00:35:31,259 --> 00:35:37,079
pluggable based system like this stunt

624
00:35:34,599 --> 00:35:42,130
for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> for the table engine for example</font>

625
00:35:37,079 --> 00:35:44,109
<font color="#E5E5E5">right so this is really there is an</font>

626
00:35:42,130 --> 00:35:46,839
effort to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> pluggable storage in</font>

627
00:35:44,109 --> 00:35:48,819
Postgres<font color="#E5E5E5"> it might actually get into</font>

628
00:35:46,839 --> 00:35:51,190
<font color="#E5E5E5">Postgres 12 but it's like mostly</font>

629
00:35:48,819 --> 00:35:55,509
independent<font color="#CCCCCC"> thing because even the the</font>

630
00:35:51,190 --> 00:35:57,990
pluggable storage<font color="#CCCCCC"> will use the buffered</font>

631
00:35:55,509 --> 00:36:03,170
i/o and once you<font color="#E5E5E5"> use</font><font color="#CCCCCC"> the buffered i/o</font>

632
00:35:57,990 --> 00:36:04,709
you are<font color="#E5E5E5"> subject</font><font color="#CCCCCC"> to this</font><font color="#E5E5E5"> issue right so</font>

633
00:36:03,170 --> 00:36:07,539
[Music]

634
00:36:04,710 --> 00:36:12,150
yes I<font color="#E5E5E5"> mean we still need to fix the</font>

635
00:36:07,539 --> 00:36:16,960
issue<font color="#CCCCCC"> even if you use different IO</font>

636
00:36:12,150 --> 00:36:18,819
storage engines yes<font color="#CCCCCC"> are already</font>

637
00:36:16,960 --> 00:36:20,859
recommendations of what<font color="#E5E5E5"> we can do right</font>

638
00:36:18,819 --> 00:36:28,210
<font color="#CCCCCC">now with our existing deployments such</font>

639
00:36:20,859 --> 00:36:30,190
as<font color="#CCCCCC"> useless filesystem right</font><font color="#E5E5E5"> so if you</font>

640
00:36:28,210 --> 00:36:32,440
are<font color="#CCCCCC"> using things</font><font color="#E5E5E5"> like thin provisioning</font>

641
00:36:30,190 --> 00:36:37,960
you need to be carefully monitoring for

642
00:36:32,440 --> 00:36:41,259
like like this space<font color="#E5E5E5"> and so on you might</font>

643
00:36:37,960 --> 00:36:44,980
actually use<font color="#CCCCCC"> multi path too because</font><font color="#E5E5E5"> that</font>

644
00:36:41,259 --> 00:36:47,630
can<font color="#CCCCCC"> actually stack the errors and put</font>

645
00:36:44,980 --> 00:36:49,969
them into queue when there is like the

646
00:36:47,630 --> 00:36:54,979
when the brighter the<font color="#E5E5E5"> device actually</font>

647
00:36:49,969 --> 00:36:57,619
fails so it kind of can replace the the

648
00:36:54,979 --> 00:36:59,689
<font color="#CCCCCC">cueing or keeping</font><font color="#E5E5E5"> the data in in the</font>

649
00:36:57,619 --> 00:37:04,749
page cache<font color="#E5E5E5"> it can do that at the</font>

650
00:36:59,690 --> 00:37:08,930
<font color="#CCCCCC">multi-part level</font><font color="#E5E5E5"> and otherwise not</font>

651
00:37:04,749 --> 00:37:11,118
<font color="#CCCCCC">really I</font><font color="#E5E5E5"> mean it's really like a problem</font>

652
00:37:08,930 --> 00:37:14,690
<font color="#CCCCCC">between</font><font color="#E5E5E5"> like a disagreement about the</font>

653
00:37:11,119 --> 00:37:19,729
<font color="#CCCCCC">kernel API</font><font color="#E5E5E5"> between</font><font color="#CCCCCC"> both brass and the</font>

654
00:37:14,690 --> 00:37:22,219
kernel yes and we have lots of prospects

655
00:37:19,729 --> 00:37:28,640
databases and we recently have started

656
00:37:22,219 --> 00:37:31,430
<font color="#CCCCCC">seeing</font><font color="#E5E5E5"> F data</font><font color="#CCCCCC"> sunk errors when we</font><font color="#E5E5E5"> are</font>

657
00:37:28,640 --> 00:37:34,999
hot plugging CPUs to<font color="#CCCCCC"> our lipfird</font>

658
00:37:31,430 --> 00:37:37,339
machines how do you go about actually

659
00:37:34,999 --> 00:37:38,779
<font color="#E5E5E5">debugging errors like this because we</font>

660
00:37:37,339 --> 00:37:44,900
<font color="#E5E5E5">see these errors but I don't really know</font>

661
00:37:38,779 --> 00:37:46,160
how to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> into this</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> not sure I</font>

662
00:37:44,900 --> 00:37:50,599
<font color="#E5E5E5">have a</font><font color="#CCCCCC"> good answer to that</font>

663
00:37:46,160 --> 00:37:52,459
<font color="#CCCCCC">I mean</font><font color="#E5E5E5"> virtualization it's like very</font>

664
00:37:50,599 --> 00:37:53,650
complicated topic I don't have an ass

665
00:37:52,459 --> 00:37:57,910
with design

666
00:37:53,650 --> 00:38:00,709
<font color="#CCCCCC">but essentially if</font><font color="#E5E5E5"> F</font><font color="#CCCCCC"> data sync fails</font>

667
00:37:57,910 --> 00:38:03,920
<font color="#E5E5E5">there is something wrong in the system</font>

668
00:38:00,709 --> 00:38:06,709
like misconfigured I don't know which

669
00:38:03,920 --> 00:38:10,009
<font color="#E5E5E5">kind of</font><font color="#CCCCCC"> virtualization you use how its</font>

670
00:38:06,709 --> 00:38:11,919
configured but I don't<font color="#E5E5E5"> recall like F</font>

671
00:38:10,009 --> 00:38:14,299
data<font color="#E5E5E5"> sync errors</font>

672
00:38:11,920 --> 00:38:20,859
unless there is<font color="#E5E5E5"> actually a problem in</font>

673
00:38:14,299 --> 00:38:20,859
the at the device<font color="#CCCCCC"> okay I don't know</font>

674
00:38:22,959 --> 00:38:26,649
other<font color="#E5E5E5"> any more questions</font>

675
00:38:28,240 --> 00:38:33,410
is there some operating<font color="#E5E5E5"> system kernel</font>

676
00:38:31,430 --> 00:38:38,149
that behaves correctly<font color="#E5E5E5"> according</font><font color="#CCCCCC"> to the</font>

677
00:38:33,410 --> 00:38:41,660
Oscars<font color="#E5E5E5"> requirements so as far</font><font color="#CCCCCC"> as I know</font>

678
00:38:38,150 --> 00:38:44,380
<font color="#CCCCCC">the</font><font color="#E5E5E5"> POSIX doesn't really say what should</font>

679
00:38:41,660 --> 00:38:48,618
happen in this case at least<font color="#E5E5E5"> I've been</font>

680
00:38:44,380 --> 00:38:56,170
unable to deduce that from the POSIX

681
00:38:48,619 --> 00:38:59,119
specification and I haven't seen a clear

682
00:38:56,170 --> 00:39:02,119
explanation<font color="#E5E5E5"> why it should be against</font>

683
00:38:59,119 --> 00:39:06,710
mistakes<font color="#E5E5E5"> like which like a quote like</font>

684
00:39:02,119 --> 00:39:09,920
from the POSIX saying this is wrong<font color="#CCCCCC"> so I</font>

685
00:39:06,710 --> 00:39:12,890
think it's acceptable<font color="#E5E5E5"> POSIX doesn't</font>

686
00:39:09,920 --> 00:39:15,069
really say it shouldn't<font color="#E5E5E5"> behave like this</font>

687
00:39:12,890 --> 00:39:18,140
<font color="#E5E5E5">that's my understanding</font>

688
00:39:15,069 --> 00:39:20,990
<font color="#E5E5E5">okay one question you had the line</font>

689
00:39:18,140 --> 00:39:28,098
illumise<font color="#CCCCCC"> and FreeBSD behaves differently</font>

690
00:39:20,990 --> 00:39:32,348
<font color="#E5E5E5">is it known what kind of right so thanks</font>

691
00:39:28,099 --> 00:39:35,829
<font color="#E5E5E5">for reminding me I said that</font><font color="#CCCCCC"> BSD</font>

692
00:39:32,349 --> 00:39:39,800
generally behaves just like Linux kernel

693
00:39:35,829 --> 00:39:42,619
ZFS and<font color="#E5E5E5"> the systems based on Solaris</font>

694
00:39:39,800 --> 00:39:45,260
<font color="#E5E5E5">illumos and so on actually</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> will</font>

695
00:39:42,619 --> 00:39:49,220
keep<font color="#E5E5E5"> the data in memory as far as I know</font>

696
00:39:45,260 --> 00:39:52,099
so like ZFS when using the<font color="#CCCCCC"> device so</font>

697
00:39:49,220 --> 00:39:54,200
that<font color="#E5E5E5"> FS is like an exception to this it</font>

698
00:39:52,099 --> 00:39:59,480
<font color="#E5E5E5">should be wrestling and to this kind of</font>

699
00:39:54,200 --> 00:40:02,598
errors which<font color="#CCCCCC"> Posterous versions are</font>

700
00:39:59,480 --> 00:40:06,200
going to crash now<font color="#E5E5E5"> so where is this back</font>

701
00:40:02,599 --> 00:40:08,180
ported<font color="#CCCCCC"> so it's not committed yet right</font>

702
00:40:06,200 --> 00:40:11,118
so<font color="#CCCCCC"> all production versions of Progress</font>

703
00:40:08,180 --> 00:40:13,970
<font color="#CCCCCC">actually have this problem</font><font color="#E5E5E5"> but as I</font><font color="#CCCCCC"> said</font>

704
00:40:11,119 --> 00:40:17,170
<font color="#E5E5E5">before it's not like something that</font>

705
00:40:13,970 --> 00:40:21,980
would suddenly<font color="#E5E5E5"> make the Postgres</font>

706
00:40:17,170 --> 00:40:24,020
unreliable<font color="#E5E5E5"> than before</font><font color="#CCCCCC"> it's the</font>

707
00:40:21,980 --> 00:40:27,319
likelihood of the error is still<font color="#E5E5E5"> the</font>

708
00:40:24,020 --> 00:40:32,839
same<font color="#CCCCCC"> it's just we now know</font><font color="#E5E5E5"> about it and</font>

709
00:40:27,319 --> 00:40:34,759
<font color="#CCCCCC">be</font><font color="#E5E5E5"> are fixing it yes I I would assume</font>

710
00:40:32,839 --> 00:40:36,680
that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> filesystem will report an error</font>

711
00:40:34,760 --> 00:40:41,089
<font color="#E5E5E5">if</font><font color="#CCCCCC"> an have in</font><font color="#E5E5E5"> affair</font><font color="#CCCCCC"> sync</font>

712
00:40:36,680 --> 00:40:42,710
right<font color="#CCCCCC"> you could read</font><font color="#E5E5E5"> right so I don't</font>

713
00:40:41,089 --> 00:40:45,770
know if I understand the question

714
00:40:42,710 --> 00:40:49,130
<font color="#E5E5E5">exactly</font><font color="#CCCCCC"> but there is actually an issue</font>

715
00:40:45,770 --> 00:40:54,140
that the<font color="#CCCCCC"> f thing the the right back</font>

716
00:40:49,130 --> 00:40:56,150
happens<font color="#E5E5E5"> in the background</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> so when you</font>

717
00:40:54,140 --> 00:40:58,368
are writing the data<font color="#CCCCCC"> even</font><font color="#E5E5E5"> if you don't</font>

718
00:40:56,150 --> 00:41:03,319
invoke<font color="#CCCCCC"> F sync</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually have IO</font>

719
00:40:58,369 --> 00:41:05,180
IO errors losing data and then<font color="#CCCCCC"> we</font><font color="#E5E5E5"> then</font>

720
00:41:03,319 --> 00:41:08,210
<font color="#E5E5E5">the error is actually reported on like</font>

721
00:41:05,180 --> 00:41:10,640
<font color="#E5E5E5">clothes or another bride or things like</font>

722
00:41:08,210 --> 00:41:13,339
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> exactly the same problems</font>

723
00:41:10,640 --> 00:41:15,950
all over<font color="#E5E5E5"> again I'm talking about the</font>

724
00:41:13,339 --> 00:41:18,619
<font color="#E5E5E5">kernel directly it will you will get the</font>

725
00:41:15,950 --> 00:41:21,348
file system itself<font color="#E5E5E5"> we have an error in</font>

726
00:41:18,619 --> 00:41:23,599
the file system<font color="#CCCCCC"> elope no in the file</font>

727
00:41:21,349 --> 00:41:26,180
system error look<font color="#E5E5E5"> there is a system call</font>

728
00:41:23,599 --> 00:41:27,980
if if I'm not totally<font color="#E5E5E5"> wrong so so the</font>

729
00:41:26,180 --> 00:41:32,210
error is<font color="#CCCCCC"> not really about file system</font>

730
00:41:27,980 --> 00:41:36,559
right it's like you fail to write a

731
00:41:32,210 --> 00:41:38,720
<font color="#E5E5E5">block to disk for some reason which is</font>

732
00:41:36,559 --> 00:41:40,579
like independent of the file<font color="#CCCCCC"> system it</font>

733
00:41:38,720 --> 00:41:42,410
gets reported to the file system<font color="#CCCCCC"> and the</font>

734
00:41:40,579 --> 00:41:47,200
<font color="#E5E5E5">file system can respond to that in some</font>

735
00:41:42,410 --> 00:41:47,200
<font color="#CCCCCC">way</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so so that's</font><font color="#E5E5E5"> the problem</font>

736
00:41:51,880 --> 00:42:00,049
<font color="#E5E5E5">Thanks you mentioned FreeBSD</font><font color="#CCCCCC"> illumos</font>

737
00:41:57,219 --> 00:42:01,249
<font color="#CCCCCC">behaved differently</font><font color="#E5E5E5"> because of the FS</font>

738
00:42:00,049 --> 00:42:05,989
yes

739
00:42:01,249 --> 00:42:10,279
how about<font color="#CCCCCC"> Linux ZFS a good question</font><font color="#E5E5E5"> I</font>

740
00:42:05,989 --> 00:42:12,799
<font color="#E5E5E5">don't know and</font><font color="#CCCCCC"> but it's a good</font><font color="#E5E5E5"> question</font>

741
00:42:10,279 --> 00:42:16,160
because I think FreeBSD is going to

742
00:42:12,799 --> 00:42:19,130
adapt ZFS on<font color="#E5E5E5"> Linux right but my</font>

743
00:42:16,160 --> 00:42:24,140
understanding<font color="#E5E5E5"> is that the different</font>

744
00:42:19,130 --> 00:42:25,999
behavior will be on ZFS on little stew

745
00:42:24,140 --> 00:42:30,859
because<font color="#E5E5E5"> it's not using the page cache</font>

746
00:42:25,999 --> 00:42:34,999
<font color="#E5E5E5">right it's using the AARC so I think</font>

747
00:42:30,859 --> 00:42:37,999
<font color="#CCCCCC">it's going to</font><font color="#E5E5E5"> behave</font><font color="#CCCCCC"> just like just like</font>

748
00:42:34,999 --> 00:42:40,609
<font color="#CCCCCC">FreeBSD in this case that was my second</font>

749
00:42:37,999 --> 00:42:43,359
<font color="#CCCCCC">question is there any file system known</font>

750
00:42:40,609 --> 00:42:47,209
on Linux which behaves correctly

751
00:42:43,359 --> 00:42:50,209
regarding to the requirement number<font color="#E5E5E5"> one</font>

752
00:42:47,209 --> 00:42:55,489
you mentioned<font color="#E5E5E5"> because then you have a</font>

753
00:42:50,209 --> 00:42:59,989
lot<font color="#E5E5E5"> of problems</font><font color="#CCCCCC"> out of</font><font color="#E5E5E5"> the way for</font>

754
00:42:55,489 --> 00:43:02,739
existing installations by putting the

755
00:42:59,989 --> 00:43:05,839
database files on such a file system

756
00:43:02,739 --> 00:43:08,959
<font color="#E5E5E5">right so not a solution but it makes</font>

757
00:43:05,839 --> 00:43:17,558
it's a<font color="#E5E5E5"> hotfix right so good question</font><font color="#CCCCCC"> I</font>

758
00:43:08,959 --> 00:43:17,558
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> know any</font><font color="#E5E5E5"> more questions</font>

759
00:43:18,759 --> 00:43:24,920
<font color="#E5E5E5">okay so if they</font><font color="#CCCCCC"> are no more questions I</font>

760
00:43:23,059 --> 00:43:27,380
<font color="#CCCCCC">will be still around so if you need</font><font color="#E5E5E5"> to</font>

761
00:43:24,920 --> 00:43:32,829
if<font color="#E5E5E5"> you want to ask personally I will be</font>

762
00:43:27,380 --> 00:43:32,829
here but<font color="#E5E5E5"> I think that's it</font>

763
00:43:37,750 --> 00:43:41,269
<font color="#E5E5E5">you</font>

764
00:43:38,050 --> 00:43:41,269
[Applause]

