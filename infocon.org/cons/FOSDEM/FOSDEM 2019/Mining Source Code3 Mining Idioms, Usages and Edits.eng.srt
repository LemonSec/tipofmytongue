1
00:00:13,420 --> 00:00:22,730
<font color="#E5E5E5">okay cool so next</font><font color="#CCCCCC"> our top so thank you</font>

2
00:00:22,160 --> 00:00:25,370
everyone

3
00:00:22,730 --> 00:00:27,140
thank you<font color="#E5E5E5"> for being here so I'm glad you</font>

4
00:00:25,370 --> 00:00:28,820
didn't<font color="#CCCCCC"> you</font><font color="#E5E5E5"> cheap I'm a research fellow</font>

5
00:00:27,140 --> 00:00:32,180
<font color="#E5E5E5">here in Brussels</font>

6
00:00:28,820 --> 00:00:34,579
<font color="#E5E5E5">so I actually</font><font color="#CCCCCC"> again work a lot to arrive</font>

7
00:00:32,180 --> 00:00:36,680
here but<font color="#E5E5E5"> I working in the sister</font>

8
00:00:34,579 --> 00:00:39,410
<font color="#CCCCCC">university or</font><font color="#E5E5E5"> will be so I work in</font><font color="#CCCCCC"> the</font>

9
00:00:36,680 --> 00:00:41,300
free university of brussels if you've

10
00:00:39,410 --> 00:00:43,309
<font color="#E5E5E5">been in brussels</font><font color="#CCCCCC"> for a couple of</font><font color="#E5E5E5"> days</font>

11
00:00:41,300 --> 00:00:46,819
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> some stories</font><font color="#CCCCCC"> about Brussels</font>

12
00:00:43,310 --> 00:00:49,250
from<font color="#E5E5E5"> I never been inside</font><font color="#CCCCCC"> Bosch</font><font color="#E5E5E5"> so today</font>

13
00:00:46,820 --> 00:00:52,520
I'm going to<font color="#E5E5E5"> talk with</font><font color="#CCCCCC"> you about mining</font>

14
00:00:49,250 --> 00:00:55,989
<font color="#E5E5E5">source code about mining idiom usages</font>

15
00:00:52,520 --> 00:00:59,420
<font color="#E5E5E5">and edits actually I will</font><font color="#CCCCCC"> show you that</font>

16
00:00:55,989 --> 00:01:02,419
<font color="#E5E5E5">this different aspects in the reality</font>

17
00:00:59,420 --> 00:01:04,820
have<font color="#CCCCCC"> a lot in common and I will try to</font>

18
00:01:02,420 --> 00:01:06,619
show<font color="#E5E5E5"> you the limitation that we have</font>

19
00:01:04,819 --> 00:01:10,220
been<font color="#E5E5E5"> applying this kind of techniques</font>

20
00:01:06,619 --> 00:01:13,370
but<font color="#CCCCCC"> also the novelty of applying this</font>

21
00:01:10,220 --> 00:01:15,830
kind<font color="#E5E5E5"> of techniques and the advantages</font>

22
00:01:13,370 --> 00:01:20,390
that<font color="#E5E5E5"> we could</font><font color="#CCCCCC"> gather in a few</font><font color="#E5E5E5"> years of</font>

23
00:01:15,830 --> 00:01:22,340
research so actually<font color="#E5E5E5"> I'm a</font><font color="#CCCCCC"> thunder</font>

24
00:01:20,390 --> 00:01:23,930
<font color="#CCCCCC">researcher</font><font color="#E5E5E5"> Europe so I moved a bit</font>

25
00:01:22,340 --> 00:01:26,869
during<font color="#E5E5E5"> my life</font>

26
00:01:23,930 --> 00:01:30,470
I'm not Belgian I'm I'm Italian<font color="#CCCCCC"> I'm an</font>

27
00:01:26,869 --> 00:01:33,979
Italian from<font color="#E5E5E5"> the south but then during</font>

28
00:01:30,470 --> 00:01:39,259
<font color="#E5E5E5">the</font><font color="#CCCCCC"> last years I was in a working left</font>

29
00:01:33,979 --> 00:01:40,908
and after a<font color="#E5E5E5"> while</font><font color="#CCCCCC"> I moved to Brussels so</font>

30
00:01:39,260 --> 00:01:44,750
today I'm going<font color="#CCCCCC"> to talk</font><font color="#E5E5E5"> with you about</font>

31
00:01:40,909 --> 00:01:47,000
mining software repositories<font color="#CCCCCC"> we could</font>

32
00:01:44,750 --> 00:01:52,280
think<font color="#CCCCCC"> about that</font><font color="#E5E5E5"> a software repository</font>

33
00:01:47,000 --> 00:01:55,009
is just a git repository<font color="#E5E5E5"> or maybe an</font>

34
00:01:52,280 --> 00:01:57,229
<font color="#E5E5E5">issue tracker but actually when</font><font color="#CCCCCC"> we talk</font>

35
00:01:55,009 --> 00:02:00,500
about<font color="#E5E5E5"> software repositories we talk</font>

36
00:01:57,229 --> 00:02:01,340
about not<font color="#CCCCCC"> only worsening systems and the</font>

37
00:02:00,500 --> 00:02:05,259
issue drinker

38
00:02:01,340 --> 00:02:07,909
but also about marketplaces or about

39
00:02:05,259 --> 00:02:09,560
communication in which in<font color="#CCCCCC"> which you</font>

40
00:02:07,909 --> 00:02:12,049
developers you store all<font color="#E5E5E5"> your</font>

41
00:02:09,560 --> 00:02:14,709
<font color="#CCCCCC">information</font><font color="#E5E5E5"> so actually what we would</font>

42
00:02:12,049 --> 00:02:18,260
like<font color="#CCCCCC"> to do is to gather this information</font>

43
00:02:14,709 --> 00:02:21,560
to mine<font color="#CCCCCC"> these</font><font color="#E5E5E5"> repositories</font>

44
00:02:18,260 --> 00:02:23,690
just to extract<font color="#E5E5E5"> this data and to</font><font color="#CCCCCC"> create</font>

45
00:02:21,560 --> 00:02:26,659
a common history<font color="#E5E5E5"> for</font><font color="#CCCCCC"> our software</font>

46
00:02:23,690 --> 00:02:28,909
project<font color="#E5E5E5"> so after having the oldest</font>

47
00:02:26,659 --> 00:02:30,590
information<font color="#E5E5E5"> what we can do is that</font><font color="#CCCCCC"> we</font>

48
00:02:28,909 --> 00:02:33,109
can for<font color="#CCCCCC"> example apply machine learning</font>

49
00:02:30,590 --> 00:02:36,530
techniques and today<font color="#E5E5E5"> you're the a lot</font>

50
00:02:33,110 --> 00:02:39,410
about this<font color="#E5E5E5"> but why we need this user</font>

51
00:02:36,530 --> 00:02:42,230
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> if you think about you</font><font color="#E5E5E5"> are</font>

52
00:02:39,410 --> 00:02:44,750
providing a<font color="#CCCCCC"> lot of data to public</font>

53
00:02:42,230 --> 00:02:46,970
repositories<font color="#CCCCCC"> but there is something that</font>

54
00:02:44,750 --> 00:02:49,819
these repositories<font color="#CCCCCC"> can do for you</font><font color="#E5E5E5"> and</font>

55
00:02:46,970 --> 00:02:52,730
actually<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what we are</font><font color="#E5E5E5"> trying to</font>

56
00:02:49,819 --> 00:02:55,940
<font color="#E5E5E5">do so actually we are trying to get all</font>

57
00:02:52,730 --> 00:02:58,369
your information<font color="#E5E5E5"> but just to help you so</font>

58
00:02:55,940 --> 00:03:01,190
to provide you some<font color="#CCCCCC"> information that you</font>

59
00:02:58,370 --> 00:03:03,829
can you<font color="#CCCCCC"> can you can</font><font color="#E5E5E5"> use so that you can</font>

60
00:03:01,190 --> 00:03:06,980
reduce<font color="#E5E5E5"> the time</font><font color="#CCCCCC"> that you you spend the</font>

61
00:03:03,829 --> 00:03:11,150
coding or your your projects actually

62
00:03:06,980 --> 00:03:16,879
<font color="#E5E5E5">because no one likes to debug the</font><font color="#CCCCCC"> silly</font>

63
00:03:11,150 --> 00:03:19,190
mistakes<font color="#CCCCCC"> so last</font><font color="#E5E5E5"> year</font><font color="#CCCCCC"> in Brussels we</font>

64
00:03:16,879 --> 00:03:21,260
started our collaboration with our with

65
00:03:19,190 --> 00:03:26,150
a company that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> called</font><font color="#E5E5E5"> the raincoat</font>

66
00:03:21,260 --> 00:03:28,940
and is based in Brussels<font color="#CCCCCC"> so the the goal</font>

67
00:03:26,150 --> 00:03:32,569
actually<font color="#CCCCCC"> Rinku diese is a company that</font>

68
00:03:28,940 --> 00:03:36,130
<font color="#E5E5E5">is</font><font color="#CCCCCC"> working on compilers so they are very</font>

69
00:03:32,569 --> 00:03:40,819
<font color="#E5E5E5">good in modern is a modern</font><font color="#CCCCCC"> advise</font>

70
00:03:36,130 --> 00:03:43,760
software languages<font color="#E5E5E5"> and maybe it seems to</font>

71
00:03:40,819 --> 00:03:46,010
be a bit strange but even if<font color="#CCCCCC"> today we</font>

72
00:03:43,760 --> 00:03:48,019
have a really<font color="#E5E5E5"> modern languages we have</font>

73
00:03:46,010 --> 00:03:51,230
<font color="#E5E5E5">really a lot</font><font color="#CCCCCC"> of code they</font><font color="#E5E5E5"> are actually</font>

74
00:03:48,019 --> 00:03:54,500
<font color="#CCCCCC">still in a legacy code so actually we</font>

75
00:03:51,230 --> 00:03:58,730
are<font color="#E5E5E5"> trying to help train code people to</font>

76
00:03:54,500 --> 00:04:02,530
modernize<font color="#E5E5E5"> languages because actually</font>

77
00:03:58,730 --> 00:04:06,429
this is<font color="#CCCCCC"> an important market</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a</font>

78
00:04:02,530 --> 00:04:09,230
<font color="#E5E5E5">growing needed to</font><font color="#CCCCCC"> to have this kind of</font>

79
00:04:06,430 --> 00:04:12,079
techniques<font color="#E5E5E5"> but one of the problem is</font>

80
00:04:09,230 --> 00:04:15,379
<font color="#CCCCCC">that</font><font color="#E5E5E5"> today what</font><font color="#CCCCCC"> trinket the</font><font color="#E5E5E5"> people are</font>

81
00:04:12,079 --> 00:04:18,108
doing<font color="#E5E5E5"> is pretty much manually so they</font>

82
00:04:15,379 --> 00:04:23,719
are doing everything manually<font color="#E5E5E5"> without</font>

83
00:04:18,108 --> 00:04:25,280
any any<font color="#E5E5E5"> IDE or any to support and for</font>

84
00:04:23,720 --> 00:04:27,740
example<font color="#CCCCCC"> just to understand the</font>

85
00:04:25,280 --> 00:04:29,780
complexity of<font color="#E5E5E5"> what they are</font><font color="#CCCCCC"> doing in</font>

86
00:04:27,740 --> 00:04:32,150
some cases<font color="#E5E5E5"> they are trying to replicate</font>

87
00:04:29,780 --> 00:04:35,090
the<font color="#CCCCCC"> behavior</font><font color="#E5E5E5"> our compiler</font>

88
00:04:32,150 --> 00:04:39,320
<font color="#E5E5E5">outrunning the compiler so you have some</font>

89
00:04:35,090 --> 00:04:41,900
code<font color="#E5E5E5"> you</font><font color="#CCCCCC"> try to understand how</font><font color="#E5E5E5"> this</font>

90
00:04:39,320 --> 00:04:44,300
<font color="#CCCCCC">works</font><font color="#E5E5E5"> this code really works and we are</font>

91
00:04:41,900 --> 00:04:47,359
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> COBOL or something that is</font>

92
00:04:44,300 --> 00:04:49,970
a stranger than COBOL<font color="#CCCCCC"> and then you have</font>

93
00:04:47,360 --> 00:04:53,480
to to modernize this code to something

94
00:04:49,970 --> 00:04:56,000
<font color="#E5E5E5">that you can run on as you</font><font color="#CCCCCC"> run</font><font color="#E5E5E5"> on your</font>

95
00:04:53,480 --> 00:04:57,500
<font color="#CCCCCC">cloud or something like this I'm talking</font>

96
00:04:56,000 --> 00:05:01,850
about<font color="#E5E5E5"> as you'll be</font><font color="#CCCCCC"> reading code the</font>

97
00:04:57,500 --> 00:05:04,580
works with Microsoft<font color="#CCCCCC"> so goal of this</font>

98
00:05:01,850 --> 00:05:07,930
project is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> 12 to meet the</font>

99
00:05:04,580 --> 00:05:11,330
<font color="#E5E5E5">immigration that requires patent</font>

100
00:05:07,930 --> 00:05:14,660
discovery but for doing<font color="#CCCCCC"> this we actually</font>

101
00:05:11,330 --> 00:05:17,140
<font color="#CCCCCC">we have</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are trying</font><font color="#E5E5E5"> to mine</font><font color="#CCCCCC"> three</font>

102
00:05:14,660 --> 00:05:21,740
<font color="#E5E5E5">different use cases for three different</font>

103
00:05:17,140 --> 00:05:24,979
objectives<font color="#E5E5E5"> so going in details</font><font color="#CCCCCC"> I will</font>

104
00:05:21,740 --> 00:05:27,890
<font color="#CCCCCC">show you that artfully mining code</font>

105
00:05:24,980 --> 00:05:30,770
idioms<font color="#E5E5E5"> or mining library usages or</font>

106
00:05:27,890 --> 00:05:33,680
mining<font color="#E5E5E5"> systematic edits now I will tell</font>

107
00:05:30,770 --> 00:05:37,250
you<font color="#CCCCCC"> what I'm talking about is not very</font>

108
00:05:33,680 --> 00:05:39,290
<font color="#CCCCCC">different but why</font><font color="#E5E5E5"> we are trying to do</font>

109
00:05:37,250 --> 00:05:42,050
this<font color="#E5E5E5"> so first of all we would like to</font>

110
00:05:39,290 --> 00:05:44,090
comprehend these<font color="#E5E5E5"> these programs there's</font>

111
00:05:42,050 --> 00:05:46,370
a the first issue that<font color="#E5E5E5"> you have when you</font>

112
00:05:44,090 --> 00:05:50,270
work<font color="#CCCCCC"> with the</font><font color="#E5E5E5"> legacy code is just to</font>

113
00:05:46,370 --> 00:05:52,760
understand what<font color="#E5E5E5"> the code is doing then</font>

114
00:05:50,270 --> 00:05:55,460
what we would<font color="#E5E5E5"> like to do is to do</font><font color="#CCCCCC"> some</font>

115
00:05:52,760 --> 00:05:58,760
anomaly detection<font color="#E5E5E5"> so actually</font><font color="#CCCCCC"> favor</font><font color="#E5E5E5"> a</font>

116
00:05:55,460 --> 00:06:00,890
large code base<font color="#E5E5E5"> maybe starting from a</font>

117
00:05:58,760 --> 00:06:03,340
new piece of code<font color="#E5E5E5"> you can understand if</font>

118
00:06:00,890 --> 00:06:07,130
you're adding you are making<font color="#E5E5E5"> a mistake</font>

119
00:06:03,340 --> 00:06:09,710
but what is very our final goal is to

120
00:06:07,130 --> 00:06:12,860
build a<font color="#E5E5E5"> full modernisation assistance</font>

121
00:06:09,710 --> 00:06:17,169
<font color="#E5E5E5">that</font><font color="#CCCCCC"> actually is able to tell you which</font>

122
00:06:12,860 --> 00:06:19,850
mistakes you<font color="#CCCCCC"> are making and to to to</font>

123
00:06:17,170 --> 00:06:23,990
<font color="#CCCCCC">create</font><font color="#E5E5E5"> a better languages a better</font>

124
00:06:19,850 --> 00:06:26,390
language<font color="#E5E5E5"> without a lot of effort</font><font color="#CCCCCC"> so to</font>

125
00:06:23,990 --> 00:06:32,330
transpose your code from<font color="#CCCCCC"> a</font><font color="#E5E5E5"> language to</font>

126
00:06:26,390 --> 00:06:35,000
another so our approach is<font color="#CCCCCC"> actually</font>

127
00:06:32,330 --> 00:06:36,979
divided<font color="#E5E5E5"> in three different steps the</font>

128
00:06:35,000 --> 00:06:39,530
first step<font color="#E5E5E5"> is actually only to import</font>

129
00:06:36,980 --> 00:06:42,440
the<font color="#CCCCCC"> the code</font><font color="#E5E5E5"> because our idea is that</font>

130
00:06:39,530 --> 00:06:45,979
these are<font color="#E5E5E5"> still assistance assistance</font>

131
00:06:42,440 --> 00:06:48,200
<font color="#E5E5E5">should be a language parameter so</font>

132
00:06:45,980 --> 00:06:51,110
<font color="#E5E5E5">parametric so what we would</font><font color="#CCCCCC"> like to</font><font color="#E5E5E5"> do</font>

133
00:06:48,200 --> 00:06:53,659
is try<font color="#E5E5E5"> a common framework</font><font color="#CCCCCC"> that is able</font>

134
00:06:51,110 --> 00:06:56,030
<font color="#CCCCCC">to work with the different</font><font color="#E5E5E5"> languages not</font>

135
00:06:53,660 --> 00:06:59,210
<font color="#CCCCCC">only COBOL not only</font><font color="#E5E5E5"> Java</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> vital</font>

136
00:06:56,030 --> 00:07:01,669
but<font color="#E5E5E5"> 12 a common framework for doing this</font>

137
00:06:59,210 --> 00:07:05,150
we need the<font color="#CCCCCC"> amateur model</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> it is</font>

138
00:07:01,670 --> 00:07:07,190
made a model should<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to gather</font>

139
00:07:05,150 --> 00:07:10,099
the<font color="#CCCCCC"> information and</font><font color="#E5E5E5"> to provide them</font><font color="#CCCCCC"> with</font>

140
00:07:07,190 --> 00:07:12,980
<font color="#E5E5E5">this information to our algorithm our</font>

141
00:07:10,100 --> 00:07:15,500
<font color="#E5E5E5">pattern mining algorithm but first of</font>

142
00:07:12,980 --> 00:07:18,590
all we have to work on importing this

143
00:07:15,500 --> 00:07:21,320
data to important<font color="#CCCCCC"> this data actually</font><font color="#E5E5E5"> at</font>

144
00:07:18,590 --> 00:07:23,119
this point of our project we have

145
00:07:21,320 --> 00:07:26,300
different importers for example we are

146
00:07:23,120 --> 00:07:28,580
able<font color="#CCCCCC"> to import Java code from</font><font color="#E5E5E5"> open</font>

147
00:07:26,300 --> 00:07:31,310
<font color="#E5E5E5">source projects but we are also able to</font>

148
00:07:28,580 --> 00:07:34,240
<font color="#E5E5E5">import legacies legacy systems for</font>

149
00:07:31,310 --> 00:07:36,980
example<font color="#CCCCCC"> we</font><font color="#E5E5E5"> are able</font><font color="#CCCCCC"> to import</font><font color="#E5E5E5"> COBOL code</font>

150
00:07:34,240 --> 00:07:42,620
<font color="#CCCCCC">the second step</font><font color="#E5E5E5"> after having</font><font color="#CCCCCC"> this this</font>

151
00:07:36,980 --> 00:07:47,890
<font color="#CCCCCC">common metal model is to run our pattern</font>

152
00:07:42,620 --> 00:07:47,890
mining algorithm I will<font color="#CCCCCC"> show you briefly</font>

153
00:07:48,100 --> 00:07:53,330
in theory it<font color="#E5E5E5"> seems that everything</font><font color="#CCCCCC"> is</font>

154
00:07:50,960 --> 00:07:55,609
<font color="#E5E5E5">easy that we have everything</font><font color="#CCCCCC"> that is</font>

155
00:07:53,330 --> 00:07:58,250
needed<font color="#CCCCCC"> to deal with this</font><font color="#E5E5E5"> kind of issue</font>

156
00:07:55,610 --> 00:08:01,940
<font color="#CCCCCC">but in</font><font color="#E5E5E5"> practice I will show you that is</font>

157
00:07:58,250 --> 00:08:05,750
not so<font color="#CCCCCC"> easy and maybe we</font><font color="#E5E5E5"> have to work</font>

158
00:08:01,940 --> 00:08:08,780
several<font color="#E5E5E5"> years</font><font color="#CCCCCC"> on this then the third</font>

159
00:08:05,750 --> 00:08:11,570
part is<font color="#CCCCCC"> actually to</font><font color="#E5E5E5"> provide the patterns</font>

160
00:08:08,780 --> 00:08:13,460
that<font color="#CCCCCC"> we were able to</font><font color="#E5E5E5"> mine to developers</font>

161
00:08:11,570 --> 00:08:16,190
so that<font color="#CCCCCC"> the developers can I really</font>

162
00:08:13,460 --> 00:08:18,859
understand<font color="#E5E5E5"> if there are some common</font>

163
00:08:16,190 --> 00:08:21,680
usages of<font color="#CCCCCC"> Arad</font><font color="#E5E5E5"> for our library or</font>

164
00:08:18,860 --> 00:08:26,180
whether there are some syntactic items

165
00:08:21,680 --> 00:08:30,790
or for example<font color="#E5E5E5"> whether some comets are</font>

166
00:08:26,180 --> 00:08:32,750
repetitive so first of all<font color="#E5E5E5"> I will just</font>

167
00:08:30,790 --> 00:08:38,720
provide you some information<font color="#CCCCCC"> about</font>

168
00:08:32,750 --> 00:08:43,549
<font color="#E5E5E5">idioms actually this</font><font color="#CCCCCC"> morning mr. so was</font>

169
00:08:38,720 --> 00:08:46,490
talking about idioms an idiom is just a

170
00:08:43,549 --> 00:08:48,109
syntactic<font color="#CCCCCC"> Freedman fragment that</font><font color="#E5E5E5"> records</font>

171
00:08:46,490 --> 00:08:50,780
across the software projects and

172
00:08:48,110 --> 00:08:54,350
deserves a single semantic purpose

173
00:08:50,780 --> 00:08:57,050
actually<font color="#E5E5E5"> this definition is a bit bug</font>

174
00:08:54,350 --> 00:08:59,130
<font color="#E5E5E5">because it's it's a bit hard</font><font color="#CCCCCC"> to</font>

175
00:08:57,050 --> 00:09:02,969
understand what is really

176
00:08:59,130 --> 00:09:07,050
but let's let's try<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just find a</font>

177
00:09:02,970 --> 00:09:09,540
simple example so in this case we have

178
00:09:07,050 --> 00:09:12,359
three different<font color="#E5E5E5"> piece of code you see</font>

179
00:09:09,540 --> 00:09:17,910
that in all this piece of code

180
00:09:12,360 --> 00:09:20,160
<font color="#CCCCCC">grab</font><font color="#E5E5E5"> a try then you have a condition</font><font color="#CCCCCC"> and</font>

181
00:09:17,910 --> 00:09:23,219
in this condition<font color="#CCCCCC"> you</font><font color="#E5E5E5"> are invoking the</font>

182
00:09:20,160 --> 00:09:26,069
limit of the move<font color="#E5E5E5"> to first then we have</font>

183
00:09:23,220 --> 00:09:29,010
a body which we<font color="#E5E5E5"> are doing something and</font>

184
00:09:26,070 --> 00:09:32,220
then finally you<font color="#E5E5E5"> have the you have the</font>

185
00:09:29,010 --> 00:09:37,680
finally<font color="#E5E5E5"> for the exception and then you</font>

186
00:09:32,220 --> 00:09:40,470
close<font color="#E5E5E5"> this</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> so as you can</font><font color="#CCCCCC"> see in</font>

187
00:09:37,680 --> 00:09:44,810
the end the<font color="#CCCCCC"> these three piece of code</font>

188
00:09:40,470 --> 00:09:47,790
they are doing<font color="#CCCCCC"> actually the same so and</font>

189
00:09:44,810 --> 00:09:52,380
you can<font color="#E5E5E5"> generalize</font><font color="#CCCCCC"> these three piece of</font>

190
00:09:47,790 --> 00:09:55,349
code with the with this idiom<font color="#CCCCCC"> and maybe</font>

191
00:09:52,380 --> 00:09:58,589
when you<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> modernize ice and to</font>

192
00:09:55,350 --> 00:10:00,120
move from<font color="#E5E5E5"> version of your system to</font>

193
00:09:58,589 --> 00:10:04,760
<font color="#E5E5E5">another you can</font><font color="#CCCCCC"> use this kind of</font>

194
00:10:00,120 --> 00:10:07,980
information<font color="#E5E5E5"> now the</font><font color="#CCCCCC"> promise that</font>

195
00:10:04,760 --> 00:10:11,850
actually we<font color="#E5E5E5"> are talking</font><font color="#CCCCCC"> about only three</font>

196
00:10:07,980 --> 00:10:14,190
piece pieces<font color="#E5E5E5"> of code and</font><font color="#CCCCCC"> actually it's</font>

197
00:10:11,850 --> 00:10:16,950
<font color="#E5E5E5">pretty straightforward straightforward</font>

198
00:10:14,190 --> 00:10:21,270
to understand that these three piece of

199
00:10:16,950 --> 00:10:25,080
code are something<font color="#E5E5E5"> in common but when we</font>

200
00:10:21,270 --> 00:10:28,560
talk about<font color="#E5E5E5"> ecosystems or when we talk</font>

201
00:10:25,080 --> 00:10:30,870
about huge software repositories<font color="#E5E5E5"> then we</font>

202
00:10:28,560 --> 00:10:32,280
<font color="#E5E5E5">found out that is not so easy</font><font color="#CCCCCC"> and of</font>

203
00:10:30,870 --> 00:10:36,990
course<font color="#CCCCCC"> a</font><font color="#E5E5E5"> developer could not do</font>

204
00:10:32,280 --> 00:10:38,400
<font color="#CCCCCC">something</font><font color="#E5E5E5"> like this so the idea if we</font>

205
00:10:36,990 --> 00:10:41,430
would like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> apply a really original</font>

206
00:10:38,400 --> 00:10:44,550
approach<font color="#E5E5E5"> is just</font><font color="#CCCCCC"> to run our frequent</font>

207
00:10:41,430 --> 00:10:45,900
<font color="#CCCCCC">itemsets algorithm</font><font color="#E5E5E5"> so in theory this</font>

208
00:10:44,550 --> 00:10:48,569
<font color="#E5E5E5">probably is not very hard to solve</font>

209
00:10:45,900 --> 00:10:50,490
<font color="#E5E5E5">there's what we can do</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> from a</font>

210
00:10:48,570 --> 00:10:53,550
piece of code<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> create a</font>

211
00:10:50,490 --> 00:10:57,270
representation<font color="#E5E5E5"> with a tree because based</font>

212
00:10:53,550 --> 00:11:00,689
on<font color="#E5E5E5"> the based on</font><font color="#CCCCCC"> the code you can just</font>

213
00:10:57,270 --> 00:11:03,000
create an<font color="#CCCCCC"> abstract</font><font color="#E5E5E5"> syntax tree</font><font color="#CCCCCC"> and then</font>

214
00:11:00,690 --> 00:11:05,490
you<font color="#CCCCCC"> can run your your algorithm maybe</font>

215
00:11:03,000 --> 00:11:08,640
without<font color="#E5E5E5"> any problem</font><font color="#CCCCCC"> but in practice when</font>

216
00:11:05,490 --> 00:11:11,330
you run it you<font color="#CCCCCC"> discover that most of the</font>

217
00:11:08,640 --> 00:11:14,089
mediums<font color="#E5E5E5"> that you find out</font>

218
00:11:11,330 --> 00:11:16,310
in the end<font color="#CCCCCC"> our not so interesting in the</font>

219
00:11:14,089 --> 00:11:19,250
end they<font color="#CCCCCC"> are boring</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> boring</font><font color="#E5E5E5"> we</font>

220
00:11:16,310 --> 00:11:22,609
<font color="#E5E5E5">mean that</font><font color="#CCCCCC"> ok if I if I tell you</font><font color="#E5E5E5"> that</font>

221
00:11:19,250 --> 00:11:25,670
given<font color="#E5E5E5"> a</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> class</font><font color="#CCCCCC"> a Java class is</font>

222
00:11:22,610 --> 00:11:28,279
composed by attributes and<font color="#E5E5E5"> may a minutes</font>

223
00:11:25,670 --> 00:11:31,490
<font color="#E5E5E5">then you say that chocolate is not so so</font>

224
00:11:28,279 --> 00:11:34,250
interesting<font color="#E5E5E5"> it's it's not something that</font>

225
00:11:31,490 --> 00:11:39,110
<font color="#E5E5E5">is new we know about</font><font color="#CCCCCC"> it but to the</font>

226
00:11:34,250 --> 00:11:41,959
problem<font color="#CCCCCC"> that actually it's it's like</font>

227
00:11:39,110 --> 00:11:43,519
<font color="#E5E5E5">that you ever turn off I mean from our</font>

228
00:11:41,959 --> 00:11:48,380
point of view you<font color="#CCCCCC"> would like to discover</font>

229
00:11:43,519 --> 00:11:50,540
very particular very tricky idioms<font color="#E5E5E5"> but</font>

230
00:11:48,380 --> 00:11:53,510
from the<font color="#CCCCCC"> other point</font><font color="#E5E5E5"> of view you</font><font color="#CCCCCC"> have</font>

231
00:11:50,540 --> 00:11:55,640
that after<font color="#CCCCCC"> a</font><font color="#E5E5E5"> while your your search just</font>

232
00:11:53,510 --> 00:11:58,100
explode<font color="#CCCCCC"> so in the end you</font><font color="#E5E5E5"> are not able</font>

233
00:11:55,640 --> 00:12:01,850
<font color="#E5E5E5">to gather patterns and most of the cases</font>

234
00:11:58,100 --> 00:12:06,589
we have<font color="#E5E5E5"> only</font><font color="#CCCCCC"> Auto</font><font color="#E5E5E5"> memory</font><font color="#CCCCCC"> issues so it's</font>

235
00:12:01,850 --> 00:12:09,230
you cannot really do anything<font color="#E5E5E5"> so what we</font>

236
00:12:06,589 --> 00:12:12,350
have time to do its<font color="#E5E5E5"> to explore normal</font>

237
00:12:09,230 --> 00:12:17,390
pattern mining algorithm for source code

238
00:12:12,350 --> 00:12:21,529
and then we are<font color="#E5E5E5"> going to incorporate</font>

239
00:12:17,390 --> 00:12:23,149
these<font color="#CCCCCC"> this information</font><font color="#E5E5E5"> in in our tool so</font>

240
00:12:21,529 --> 00:12:26,600
actually there are various application

241
00:12:23,149 --> 00:12:28,339
that you can<font color="#CCCCCC"> use for remaining</font><font color="#E5E5E5"> when you</font>

242
00:12:26,600 --> 00:12:30,440
mind could idioms

243
00:12:28,339 --> 00:12:32,740
<font color="#E5E5E5">first of all you could discover new</font>

244
00:12:30,440 --> 00:12:36,529
synthetic pattern then you<font color="#E5E5E5"> could</font>

245
00:12:32,740 --> 00:12:39,890
discover but<font color="#CCCCCC"> code that is deviated from</font>

246
00:12:36,529 --> 00:12:43,790
a pattern and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you can you propose</font>

247
00:12:39,890 --> 00:12:46,550
new actions<font color="#E5E5E5"> to developers so this is the</font>

248
00:12:43,790 --> 00:12:49,880
overview<font color="#E5E5E5"> our framework so as I was</font>

249
00:12:46,550 --> 00:12:54,349
telling you in<font color="#E5E5E5"> the general view we have</font>

250
00:12:49,880 --> 00:12:57,260
<font color="#E5E5E5">a source code importer</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> able to</font>

251
00:12:54,350 --> 00:13:00,170
gather<font color="#E5E5E5"> this information in in a common</font>

252
00:12:57,260 --> 00:13:04,209
representation<font color="#E5E5E5"> now we have some mining</font>

253
00:13:00,170 --> 00:13:06,800
processors that<font color="#E5E5E5"> helps us to clean up the</font>

254
00:13:04,209 --> 00:13:09,109
representations and then we have the

255
00:13:06,800 --> 00:13:11,540
<font color="#E5E5E5">pattern mining miner actually is</font>

256
00:13:09,110 --> 00:13:13,940
important to say that now we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> running</font>

257
00:13:11,540 --> 00:13:17,480
<font color="#E5E5E5">a pretty simple algorithm</font><font color="#CCCCCC"> init is a</font>

258
00:13:13,940 --> 00:13:23,199
frequent<font color="#CCCCCC"> III mine frequently mining</font><font color="#E5E5E5"> but</font>

259
00:13:17,480 --> 00:13:24,910
we are<font color="#E5E5E5"> trying to to explore all the</font>

260
00:13:23,199 --> 00:13:27,660
the possibilities that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have with</font>

261
00:13:24,910 --> 00:13:31,118
this kind of algorithm<font color="#CCCCCC"> so in the end</font>

262
00:13:27,660 --> 00:13:35,170
using the algorithm<font color="#E5E5E5"> per se is</font><font color="#CCCCCC"> not very</font>

263
00:13:31,119 --> 00:13:38,709
hard but<font color="#E5E5E5"> adopt this kind of algorithm to</font>

264
00:13:35,170 --> 00:13:41,709
our<font color="#CCCCCC"> to to</font><font color="#E5E5E5"> our case study is not so easy</font>

265
00:13:38,709 --> 00:13:44,829
<font color="#CCCCCC">also</font><font color="#E5E5E5"> because you have to remember that</font>

266
00:13:41,709 --> 00:13:47,049
is true that we are<font color="#CCCCCC"> talking about</font><font color="#E5E5E5"> at</font>

267
00:13:44,829 --> 00:13:50,229
least now for the first<font color="#E5E5E5"> year</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> project</font>

268
00:13:47,049 --> 00:13:51,759
<font color="#CCCCCC">were talking about Java projects but in</font>

269
00:13:50,230 --> 00:13:55,619
<font color="#CCCCCC">theory we</font><font color="#E5E5E5"> would like to apply this</font>

270
00:13:51,759 --> 00:13:58,809
knowledge<font color="#E5E5E5"> to</font><font color="#CCCCCC"> all the languages</font><font color="#E5E5E5"> so it's</font>

271
00:13:55,619 --> 00:14:01,119
one<font color="#E5E5E5"> of the problem is that after</font><font color="#CCCCCC"> that</font>

272
00:13:58,809 --> 00:14:03,160
<font color="#E5E5E5">you set</font><font color="#CCCCCC"> up your algorithm</font><font color="#E5E5E5"> maybe your</font>

273
00:14:01,119 --> 00:14:05,319
algorithm will work<font color="#CCCCCC"> just for</font><font color="#E5E5E5"> your case</font>

274
00:14:03,160 --> 00:14:10,809
study<font color="#CCCCCC"> are really small case study and we</font>

275
00:14:05,319 --> 00:14:13,779
not generalize it all so after having

276
00:14:10,809 --> 00:14:18,459
our<font color="#CCCCCC"> factor miner naturally we</font><font color="#E5E5E5"> are</font>

277
00:14:13,779 --> 00:14:20,949
exploring different<font color="#E5E5E5"> kinds of angles the</font>

278
00:14:18,459 --> 00:14:24,429
second step the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> step is the</font>

279
00:14:20,949 --> 00:14:27,519
pattern matcher<font color="#CCCCCC"> so after mining a lot of</font>

280
00:14:24,429 --> 00:14:29,290
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> patterns what you can do is</font>

281
00:14:27,519 --> 00:14:32,139
that<font color="#CCCCCC"> you apply your make sure</font><font color="#E5E5E5"> to</font>

282
00:14:29,290 --> 00:14:34,868
discover<font color="#E5E5E5"> if in another piece of code you</font>

283
00:14:32,139 --> 00:14:37,839
<font color="#E5E5E5">have</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> patterns and only after these</font>

284
00:14:34,869 --> 00:14:40,529
you<font color="#E5E5E5"> can provide this information to the</font>

285
00:14:37,839 --> 00:14:44,199
developers so<font color="#CCCCCC"> that actually developers</font>

286
00:14:40,529 --> 00:14:48,249
the developers will<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to to</font>

287
00:14:44,199 --> 00:14:53,258
improve<font color="#E5E5E5"> with their code base</font><font color="#CCCCCC"> so the</font>

288
00:14:48,249 --> 00:14:55,540
first<font color="#CCCCCC"> problem of this kind of this kind</font>

289
00:14:53,259 --> 00:14:59,019
of application is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> easily</font>

290
00:14:55,540 --> 00:15:00,849
<font color="#CCCCCC">time-consuming</font><font color="#E5E5E5"> and clicking the</font>

291
00:14:59,019 --> 00:15:04,989
algorithm is<font color="#E5E5E5"> not so easy</font>

292
00:15:00,850 --> 00:15:07,360
I really something<font color="#E5E5E5"> that is a maybe in</font>

293
00:15:04,989 --> 00:15:09,819
some cases<font color="#CCCCCC"> very people don't consider</font>

294
00:15:07,360 --> 00:15:13,600
<font color="#E5E5E5">about too</font><font color="#CCCCCC"> much learning</font><font color="#E5E5E5"> is that really</font>

295
00:15:09,819 --> 00:15:16,118
every every every small detail<font color="#E5E5E5"> matter</font>

296
00:15:13,600 --> 00:15:17,799
and changing a<font color="#E5E5E5"> bit to the</font><font color="#CCCCCC"> configuration</font>

297
00:15:16,119 --> 00:15:22,439
means that in the end<font color="#CCCCCC"> we are going</font><font color="#E5E5E5"> to</font>

298
00:15:17,799 --> 00:15:25,269
spend a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> execution time and maybe</font>

299
00:15:22,439 --> 00:15:28,118
after spending all this time<font color="#E5E5E5"> there is</font>

300
00:15:25,269 --> 00:15:32,589
such<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you will ever are not not very</font>

301
00:15:28,119 --> 00:15:36,249
<font color="#CCCCCC">useful so the another</font><font color="#E5E5E5"> problem that to</font>

302
00:15:32,589 --> 00:15:37,030
ever is that<font color="#E5E5E5"> in some cases were</font><font color="#CCCCCC"> able to</font>

303
00:15:36,249 --> 00:15:40,270
<font color="#E5E5E5">journey</font>

304
00:15:37,030 --> 00:15:43,350
really<font color="#E5E5E5"> a large amount</font><font color="#CCCCCC"> a large amount of</font>

305
00:15:40,270 --> 00:15:46,900
patterns as<font color="#CCCCCC"> well as redundant patterns</font>

306
00:15:43,350 --> 00:15:50,740
some patterns are<font color="#CCCCCC"> more related to</font><font color="#E5E5E5"> the</font>

307
00:15:46,900 --> 00:15:54,400
<font color="#CCCCCC">drama</font><font color="#E5E5E5"> of two of the language and not</font>

308
00:15:50,740 --> 00:15:57,480
about the<font color="#CCCCCC"> user of the</font><font color="#E5E5E5"> other of the</font>

309
00:15:54,400 --> 00:16:00,730
language so what<font color="#E5E5E5"> we are trying to do is</font>

310
00:15:57,480 --> 00:16:03,280
that<font color="#CCCCCC"> to</font><font color="#E5E5E5"> solve these issues</font><font color="#CCCCCC"> we're trying</font>

311
00:16:00,730 --> 00:16:05,470
<font color="#E5E5E5">to put some constraints that help to</font>

312
00:16:03,280 --> 00:16:07,660
reduce<font color="#CCCCCC"> the search space</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> the</font>

313
00:16:05,470 --> 00:16:11,440
search space in<font color="#E5E5E5"> our case is very very</font>

314
00:16:07,660 --> 00:16:13,630
<font color="#E5E5E5">large but we are trying</font><font color="#CCCCCC"> to fix these</font>

315
00:16:11,440 --> 00:16:17,410
kind of issues<font color="#CCCCCC"> another problem is that</font>

316
00:16:13,630 --> 00:16:19,390
<font color="#E5E5E5">the setting constraints is that setting</font>

317
00:16:17,410 --> 00:16:21,370
the<font color="#CCCCCC"> Costa</font><font color="#E5E5E5"> answer is not so</font>

318
00:16:19,390 --> 00:16:23,800
straightforward<font color="#CCCCCC"> I mean really</font><font color="#E5E5E5"> every</font>

319
00:16:21,370 --> 00:16:27,340
details matter<font color="#E5E5E5"> and setting</font><font color="#CCCCCC"> these details</font>

320
00:16:23,800 --> 00:16:31,209
is<font color="#E5E5E5"> not so easy and another issue the</font>

321
00:16:27,340 --> 00:16:33,130
<font color="#E5E5E5">last one is that evaluating may be the</font>

322
00:16:31,210 --> 00:16:35,620
most important issues that evaluating

323
00:16:33,130 --> 00:16:37,900
the patterns<font color="#E5E5E5"> is not easy at all I mean</font>

324
00:16:35,620 --> 00:16:40,210
one of<font color="#E5E5E5"> the issues that we have we had in</font>

325
00:16:37,900 --> 00:16:43,300
the first<font color="#E5E5E5"> year that we were able</font><font color="#CCCCCC"> to mine</font>

326
00:16:40,210 --> 00:16:45,940
patterns but in the end even saying what

327
00:16:43,300 --> 00:16:48,910
is<font color="#E5E5E5"> boring and what is interesting is not</font>

328
00:16:45,940 --> 00:16:51,070
so easy<font color="#E5E5E5"> so it means</font><font color="#CCCCCC"> that maybe</font><font color="#E5E5E5"> after</font>

329
00:16:48,910 --> 00:16:53,260
hours<font color="#CCCCCC"> of computation we are going to</font>

330
00:16:51,070 --> 00:16:55,540
have a lot<font color="#CCCCCC"> of patterns</font><font color="#E5E5E5"> but you don't</font>

331
00:16:53,260 --> 00:16:57,490
know whether they are<font color="#CCCCCC"> useful or not and</font>

332
00:16:55,540 --> 00:17:01,360
if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't know this it means that you</font>

333
00:16:57,490 --> 00:17:03,220
are<font color="#CCCCCC"> not able to</font><font color="#E5E5E5"> tweet your algorri so in</font>

334
00:17:01,360 --> 00:17:05,740
summary we developed our language

335
00:17:03,220 --> 00:17:07,990
<font color="#CCCCCC">parametric framework to mine coal idioms</font>

336
00:17:05,740 --> 00:17:11,620
now we are running this kind of

337
00:17:07,990 --> 00:17:13,620
algorithm<font color="#E5E5E5"> and we are doing some work</font><font color="#CCCCCC"> in</font>

338
00:17:11,619 --> 00:17:17,800
progress<font color="#E5E5E5"> to reduce the search space</font>

339
00:17:13,619 --> 00:17:21,208
<font color="#E5E5E5">applying</font><font color="#CCCCCC"> ud6 and constraints</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> are</font>

340
00:17:17,800 --> 00:17:24,609
<font color="#E5E5E5">trying to understand the</font><font color="#CCCCCC"> real value of</font>

341
00:17:21,209 --> 00:17:28,329
idioms<font color="#E5E5E5"> to</font><font color="#CCCCCC"> improve the mining mining the</font>

342
00:17:24,609 --> 00:17:31,120
process the second part of<font color="#E5E5E5"> my</font>

343
00:17:28,329 --> 00:17:32,490
presentation<font color="#CCCCCC"> is about mining usages now</font>

344
00:17:31,120 --> 00:17:35,739
you know the difference between

345
00:17:32,490 --> 00:17:37,960
libraries<font color="#E5E5E5"> and frameworks</font><font color="#CCCCCC"> so libraries</font>

346
00:17:35,740 --> 00:17:40,180
are different by frameworks because<font color="#E5E5E5"> if</font>

347
00:17:37,960 --> 00:17:43,660
you would<font color="#CCCCCC"> like</font><font color="#E5E5E5"> to use a library you just</font>

348
00:17:40,180 --> 00:17:45,970
need to<font color="#CCCCCC"> execute to understand the API</font>

349
00:17:43,660 --> 00:17:47,890
<font color="#E5E5E5">and to use the api's</font><font color="#CCCCCC"> while if you would</font>

350
00:17:45,970 --> 00:17:49,179
like to<font color="#CCCCCC"> use a framework</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> what</font>

351
00:17:47,890 --> 00:17:50,920
<font color="#E5E5E5">you have to do is that you have to</font>

352
00:17:49,179 --> 00:17:55,240
implemental to extend some

353
00:17:50,920 --> 00:17:57,280
parts of the of the framework now one of

354
00:17:55,240 --> 00:17:59,680
<font color="#E5E5E5">the issues that you have</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> with</font>

355
00:17:57,280 --> 00:18:02,320
<font color="#E5E5E5">framework is that from the point of view</font>

356
00:17:59,680 --> 00:18:06,720
of the developer actually<font color="#E5E5E5"> you don't know</font>

357
00:18:02,320 --> 00:18:10,419
how actually<font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't know how to use a</font>

358
00:18:06,720 --> 00:18:15,000
framework and the outer core<font color="#E5E5E5"> correctly</font>

359
00:18:10,420 --> 00:18:18,940
extend a framework<font color="#CCCCCC"> given our</font>

360
00:18:15,000 --> 00:18:21,460
<font color="#E5E5E5">functionality so actually what you do</font>

361
00:18:18,940 --> 00:18:23,470
today<font color="#CCCCCC"> is that you just take your frame</font>

362
00:18:21,460 --> 00:18:25,480
<font color="#CCCCCC">worker</font><font color="#E5E5E5"> and you start analyzing the</font>

363
00:18:23,470 --> 00:18:29,550
different<font color="#CCCCCC"> way in which this framework</font>

364
00:18:25,480 --> 00:18:32,530
could<font color="#E5E5E5"> fit to your your case study</font><font color="#CCCCCC"> so</font>

365
00:18:29,550 --> 00:18:34,810
<font color="#CCCCCC">first of all from the developer front of</font>

366
00:18:32,530 --> 00:18:37,899
you<font color="#CCCCCC"> we would like to understand how</font><font color="#E5E5E5"> you</font>

367
00:18:34,810 --> 00:18:39,550
should extend<font color="#E5E5E5"> a given framework but also</font>

368
00:18:37,900 --> 00:18:43,710
another problem<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you have in this</font>

369
00:18:39,550 --> 00:18:48,190
<font color="#E5E5E5">case when you try to mind mining</font>

370
00:18:43,710 --> 00:18:51,430
libraries is<font color="#E5E5E5"> that from the maintainer of</font>

371
00:18:48,190 --> 00:18:53,710
the<font color="#E5E5E5"> framework point of view actually the</font>

372
00:18:51,430 --> 00:18:56,950
the maintainer doesn't know anything

373
00:18:53,710 --> 00:18:59,620
<font color="#E5E5E5">about how people are using its life is</font>

374
00:18:56,950 --> 00:19:01,510
library<font color="#CCCCCC"> so in the</font><font color="#E5E5E5"> end</font><font color="#CCCCCC"> is possibility if</font>

375
00:18:59,620 --> 00:19:02,770
<font color="#E5E5E5">you are a mountain or a library you</font>

376
00:19:01,510 --> 00:19:06,430
would<font color="#E5E5E5"> like to remove a functionality</font>

377
00:19:02,770 --> 00:19:09,070
<font color="#E5E5E5">that maybe no one is using in general</font>

378
00:19:06,430 --> 00:19:12,670
you you don't know this I mean you based

379
00:19:09,070 --> 00:19:15,730
on comments or based on what is your

380
00:19:12,670 --> 00:19:19,380
<font color="#CCCCCC">opinion</font><font color="#E5E5E5"> you are going to add or remove</font>

381
00:19:15,730 --> 00:19:22,690
<font color="#E5E5E5">api's</font><font color="#CCCCCC"> but in the end 'you don't know if</font>

382
00:19:19,380 --> 00:19:27,220
if really<font color="#CCCCCC"> you are me</font><font color="#E5E5E5"> you are what what</font>

383
00:19:22,690 --> 00:19:28,690
will be the impact of your change so

384
00:19:27,220 --> 00:19:31,210
when you would<font color="#E5E5E5"> like to extend a</font>

385
00:19:28,690 --> 00:19:33,520
<font color="#CCCCCC">framework up what you ever and this</font><font color="#E5E5E5"> is a</font>

386
00:19:31,210 --> 00:19:36,610
<font color="#E5E5E5">definition that is a form</font><font color="#CCCCCC"> are from</font><font color="#E5E5E5"> our</font>

387
00:19:33,520 --> 00:19:39,370
<font color="#E5E5E5">paper over a few years ago is that you</font>

388
00:19:36,610 --> 00:19:42,310
have an extension point<font color="#E5E5E5"> that is a the</font>

389
00:19:39,370 --> 00:19:46,110
part that you like you should extend and

390
00:19:42,310 --> 00:19:50,080
then<font color="#CCCCCC"> you have a new search that</font><font color="#E5E5E5"> actually</font>

391
00:19:46,110 --> 00:19:53,379
define how you are going<font color="#E5E5E5"> to to extend</font>

392
00:19:50,080 --> 00:19:56,889
your your framework<font color="#E5E5E5"> but there are</font>

393
00:19:53,380 --> 00:19:59,110
different kind of<font color="#E5E5E5"> extension point for</font>

394
00:19:56,890 --> 00:20:01,360
example<font color="#CCCCCC"> a really</font><font color="#E5E5E5"> simple extension point</font>

395
00:19:59,110 --> 00:20:03,490
is the one<font color="#E5E5E5"> in which actually in your</font>

396
00:20:01,360 --> 00:20:04,020
your could be<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> just using</font><font color="#CCCCCC"> the</font>

397
00:20:03,490 --> 00:20:06,090
<font color="#E5E5E5">method</font>

398
00:20:04,020 --> 00:20:08,430
this is the easiest<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> and actually</font>

399
00:20:06,090 --> 00:20:10,649
if you<font color="#E5E5E5"> think</font><font color="#CCCCCC"> about this you standing</font><font color="#E5E5E5"> a</font>

400
00:20:08,430 --> 00:20:14,640
framework<font color="#E5E5E5"> in this way is not</font><font color="#CCCCCC"> very</font>

401
00:20:10,650 --> 00:20:17,490
different<font color="#E5E5E5"> to use a library the second</font>

402
00:20:14,640 --> 00:20:20,640
thing that<font color="#CCCCCC"> you will do is that you not</font>

403
00:20:17,490 --> 00:20:24,120
only use a method<font color="#E5E5E5"> Matthew also customize</font>

404
00:20:20,640 --> 00:20:27,410
this method before using it<font color="#CCCCCC"> the third</font>

405
00:20:24,120 --> 00:20:31,919
way is that you actually extend a class

406
00:20:27,410 --> 00:20:34,020
providing new functionalities now<font color="#E5E5E5"> if you</font>

407
00:20:31,920 --> 00:20:37,590
have a look to this<font color="#E5E5E5"> this</font><font color="#CCCCCC"> picture</font><font color="#E5E5E5"> this is</font>

408
00:20:34,020 --> 00:20:39,900
<font color="#E5E5E5">another work</font><font color="#CCCCCC"> that we and another part of</font>

409
00:20:37,590 --> 00:20:41,760
intimates on which we are<font color="#E5E5E5"> working on and</font>

410
00:20:39,900 --> 00:20:43,740
then it seems that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> framework is</font>

411
00:20:41,760 --> 00:20:46,430
different to be with<font color="#CCCCCC"> respect</font><font color="#E5E5E5"> to the</font>

412
00:20:43,740 --> 00:20:48,960
previous<font color="#E5E5E5"> version that I'll show you but</font>

413
00:20:46,430 --> 00:20:51,000
if you think<font color="#CCCCCC"> about it is</font><font color="#E5E5E5"> not very</font>

414
00:20:48,960 --> 00:20:52,920
different<font color="#CCCCCC"> because</font><font color="#E5E5E5"> in every case we need</font>

415
00:20:51,000 --> 00:20:54,890
an importer<font color="#E5E5E5"> and then we need the</font><font color="#CCCCCC"> miner</font>

416
00:20:52,920 --> 00:20:57,590
<font color="#E5E5E5">and then we need a mature and then</font>

417
00:20:54,890 --> 00:21:01,710
afterwards<font color="#E5E5E5"> we need a visualization</font><font color="#CCCCCC"> tool</font>

418
00:20:57,590 --> 00:21:05,100
<font color="#E5E5E5">so this for telling you that</font><font color="#CCCCCC"> in the end</font>

419
00:21:01,710 --> 00:21:08,490
<font color="#E5E5E5">when you try to mind different different</font>

420
00:21:05,100 --> 00:21:11,490
aspects of<font color="#CCCCCC"> the source code in most of</font>

421
00:21:08,490 --> 00:21:14,400
the cases there<font color="#CCCCCC"> are not so</font><font color="#E5E5E5"> many</font>

422
00:21:11,490 --> 00:21:19,590
<font color="#CCCCCC">difference</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> least from a really high</font>

423
00:21:14,400 --> 00:21:23,730
point of view now<font color="#CCCCCC"> we performed</font><font color="#E5E5E5"> our case</font>

424
00:21:19,590 --> 00:21:27,449
study in which<font color="#CCCCCC"> we developed an importer</font>

425
00:21:23,730 --> 00:21:30,300
for<font color="#E5E5E5"> Scala so first of all we are able to</font>

426
00:21:27,450 --> 00:21:32,910
<font color="#E5E5E5">mine the the source code we are able to</font>

427
00:21:30,300 --> 00:21:37,169
<font color="#E5E5E5">tag each part of the</font><font color="#CCCCCC"> Sousou god</font>

428
00:21:32,910 --> 00:21:39,270
and based on this tag<font color="#E5E5E5"> in</font><font color="#CCCCCC"> here what</font>

429
00:21:37,170 --> 00:21:41,190
variable is that<font color="#E5E5E5"> first of all we</font><font color="#CCCCCC"> are</font>

430
00:21:39,270 --> 00:21:45,870
able<font color="#E5E5E5"> to extract all the data</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

431
00:21:41,190 --> 00:21:48,600
need so<font color="#CCCCCC"> we are going</font><font color="#E5E5E5"> we we</font><font color="#CCCCCC"> can clone the</font>

432
00:21:45,870 --> 00:21:49,800
projects then we compile the projects we

433
00:21:48,600 --> 00:21:52,490
do tap<font color="#E5E5E5"> resolution'</font>

434
00:21:49,800 --> 00:21:54,750
and just after<font color="#CCCCCC"> this we</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> able to</font>

435
00:21:52,490 --> 00:21:59,220
<font color="#E5E5E5">understand which</font><font color="#CCCCCC"> are the extension</font>

436
00:21:54,750 --> 00:22:01,020
points after<font color="#CCCCCC"> this part we not run</font><font color="#E5E5E5"> our</font>

437
00:21:59,220 --> 00:22:04,080
minor<font color="#E5E5E5"> we respected to the previous</font>

438
00:22:01,020 --> 00:22:07,700
approach in this<font color="#E5E5E5"> case we ran a subgraph</font>

439
00:22:04,080 --> 00:22:11,879
mining algorithm that is a<font color="#CCCCCC"> priori</font><font color="#E5E5E5"> and</font>

440
00:22:07,700 --> 00:22:15,150
then we<font color="#E5E5E5"> missile</font><font color="#CCCCCC"> allies the data but what</font>

441
00:22:11,880 --> 00:22:17,820
is important is<font color="#CCCCCC"> that also</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> this case</font>

442
00:22:15,150 --> 00:22:22,289
<font color="#CCCCCC">we try to evaluate</font><font color="#E5E5E5"> our approach</font>

443
00:22:17,820 --> 00:22:24,470
<font color="#E5E5E5">Mining several projects from Scala</font><font color="#CCCCCC"> we</font>

444
00:22:22,289 --> 00:22:27,710
<font color="#CCCCCC">mind five different frameworks so</font>

445
00:22:24,470 --> 00:22:30,720
<font color="#CCCCCC">spartak a mojito a dupe</font><font color="#E5E5E5"> and play</font>

446
00:22:27,710 --> 00:22:33,509
<font color="#E5E5E5">naturally we saw something</font><font color="#CCCCCC"> that is a was</font>

447
00:22:30,720 --> 00:22:37,139
pretty<font color="#E5E5E5"> much interesting first of all we</font>

448
00:22:33,509 --> 00:22:40,409
saw<font color="#E5E5E5"> that mining this kind of patterns is</font>

449
00:22:37,139 --> 00:22:43,709
not very<font color="#CCCCCC"> art</font><font color="#E5E5E5"> but also</font><font color="#CCCCCC"> the accuracy of</font>

450
00:22:40,409 --> 00:22:45,539
<font color="#E5E5E5">these patterns</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> is very</font><font color="#CCCCCC"> I I mean</font>

451
00:22:43,710 --> 00:22:51,330
most<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> cases</font><font color="#E5E5E5"> where that the</font>

452
00:22:45,539 --> 00:22:53,399
<font color="#CCCCCC">accuracy</font><font color="#E5E5E5"> was about</font><font color="#CCCCCC"> 97%</font><font color="#E5E5E5"> but one thing</font>

453
00:22:51,330 --> 00:22:57,599
that<font color="#CCCCCC"> for example we are not expecting is</font>

454
00:22:53,399 --> 00:22:59,969
that<font color="#E5E5E5"> most of the</font><font color="#CCCCCC"> cases to extend a given</font>

455
00:22:57,599 --> 00:23:02,428
class<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> ever you don't have a</font>

456
00:22:59,970 --> 00:23:05,909
lot of<font color="#E5E5E5"> extension points so most of the</font>

457
00:23:02,429 --> 00:23:10,919
cases<font color="#E5E5E5"> given a class we have at at most</font>

458
00:23:05,909 --> 00:23:13,409
<font color="#CCCCCC">four extension points and</font><font color="#E5E5E5"> also we</font>

459
00:23:10,919 --> 00:23:15,749
discovered<font color="#CCCCCC"> that applying our minor</font><font color="#E5E5E5"> rough</font>

460
00:23:13,409 --> 00:23:19,789
very most<font color="#E5E5E5"> of the patterns that we were</font>

461
00:23:15,749 --> 00:23:21,629
able<font color="#E5E5E5"> to find were pretty much</font><font color="#CCCCCC"> simple so</font>

462
00:23:19,789 --> 00:23:24,119
from this point of<font color="#CCCCCC"> view you can</font>

463
00:23:21,629 --> 00:23:25,859
<font color="#E5E5E5">understand that as I told you before you</font>

464
00:23:24,119 --> 00:23:32,789
<font color="#E5E5E5">have a trade off the trade off is that</font>

465
00:23:25,859 --> 00:23:36,989
<font color="#E5E5E5">on the one end you have that your your</font>

466
00:23:32,789 --> 00:23:38,820
<font color="#CCCCCC">potential</font><font color="#E5E5E5"> your patterns could be simple</font>

467
00:23:36,989 --> 00:23:42,690
on the other<font color="#E5E5E5"> end you have the</font>

468
00:23:38,820 --> 00:23:46,019
opportunity so the<font color="#CCCCCC"> ire the accuracy</font><font color="#E5E5E5"> the</font>

469
00:23:42,690 --> 00:23:48,090
<font color="#CCCCCC">simpler the</font><font color="#E5E5E5"> patterns but it's also this</font>

470
00:23:46,019 --> 00:23:50,759
<font color="#E5E5E5">means that what you have to do in the</font>

471
00:23:48,090 --> 00:23:53,999
<font color="#E5E5E5">future is that</font><font color="#CCCCCC"> we have to try</font><font color="#E5E5E5"> to gather</font>

472
00:23:50,759 --> 00:23:57,299
most some patterns that<font color="#E5E5E5"> are more</font>

473
00:23:53,999 --> 00:24:00,720
<font color="#CCCCCC">complicated this means that maybe</font><font color="#E5E5E5"> our</font>

474
00:23:57,299 --> 00:24:03,080
<font color="#CCCCCC">courtesy</font><font color="#E5E5E5"> will will start</font><font color="#CCCCCC"> failing is also</font>

475
00:24:00,720 --> 00:24:06,659
true that as a<font color="#CCCCCC"> developer you care about</font>

476
00:24:03,080 --> 00:24:08,489
<font color="#E5E5E5">complex patterns because if you are</font>

477
00:24:06,659 --> 00:24:11,039
<font color="#E5E5E5">going to use a library</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need</font>

478
00:24:08,489 --> 00:24:16,919
you don't<font color="#E5E5E5"> need this kind</font><font color="#CCCCCC"> of technology</font>

479
00:24:11,039 --> 00:24:22,229
<font color="#E5E5E5">if your extension is easy last I will</font>

480
00:24:16,919 --> 00:24:24,659
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> to you about mining edits so until</font>

481
00:24:22,229 --> 00:24:27,359
this point<font color="#E5E5E5"> until this pointer will talk</font>

482
00:24:24,659 --> 00:24:29,609
about the snapshots<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you have a your</font>

483
00:24:27,359 --> 00:24:31,360
snapshot<font color="#CCCCCC"> you analyze your</font><font color="#E5E5E5"> snapshot from</font>

484
00:24:29,609 --> 00:24:33,909
<font color="#E5E5E5">your snapshot to your own eyes</font>

485
00:24:31,360 --> 00:24:35,530
I mean you analyze your<font color="#CCCCCC"> a snapshot -</font>

486
00:24:33,910 --> 00:24:37,870
<font color="#E5E5E5">from a syntactic point of view or from</font>

487
00:24:35,530 --> 00:24:42,220
the point of<font color="#CCCCCC"> view of</font><font color="#E5E5E5"> our given library</font>

488
00:24:37,870 --> 00:24:45,270
or<font color="#E5E5E5"> a given framework now when we talk</font>

489
00:24:42,220 --> 00:24:48,040
about<font color="#CCCCCC"> systemic</font><font color="#E5E5E5"> edits we're talking about</font>

490
00:24:45,270 --> 00:24:51,160
<font color="#E5E5E5">comments so what do we would like to</font><font color="#CCCCCC"> do</font>

491
00:24:48,040 --> 00:24:53,440
is that we will let's consider a

492
00:24:51,160 --> 00:24:56,080
repository<font color="#E5E5E5"> and in this repository</font><font color="#CCCCCC"> we</font>

493
00:24:53,440 --> 00:25:00,400
have<font color="#E5E5E5"> these changes</font><font color="#CCCCCC"> and then</font><font color="#E5E5E5"> these</font>

494
00:24:56,080 --> 00:25:03,580
changes and then these changes so we

495
00:25:00,400 --> 00:25:05,560
have<font color="#E5E5E5"> three instances of a change</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> in</font>

496
00:25:03,580 --> 00:25:09,429
the end we have only one<font color="#E5E5E5"> systematically</font>

497
00:25:05,560 --> 00:25:12,129
edit so actually it could<font color="#E5E5E5"> be interesting</font>

498
00:25:09,430 --> 00:25:15,310
<font color="#CCCCCC">to know about</font><font color="#E5E5E5"> these changes because what</font>

499
00:25:12,130 --> 00:25:17,350
we will do is<font color="#CCCCCC"> that we will if we have</font><font color="#E5E5E5"> a</font>

500
00:25:15,310 --> 00:25:20,280
new<font color="#CCCCCC"> change and this change is different</font>

501
00:25:17,350 --> 00:25:23,379
<font color="#E5E5E5">with</font><font color="#CCCCCC"> respect to the the systemic changes</font>

502
00:25:20,280 --> 00:25:28,260
it's it's more it's probable that

503
00:25:23,380 --> 00:25:31,630
actually we<font color="#E5E5E5"> are going to add a bulk so</font>

504
00:25:28,260 --> 00:25:36,400
<font color="#CCCCCC">systematic edits can</font><font color="#E5E5E5"> be tedious and of</font>

505
00:25:31,630 --> 00:25:38,980
course they<font color="#E5E5E5"> are manually mining</font><font color="#CCCCCC"> IDs this</font>

506
00:25:36,400 --> 00:25:42,520
data is<font color="#E5E5E5"> very hard usually you can just</font>

507
00:25:38,980 --> 00:25:45,370
others<font color="#E5E5E5"> now what we did is</font><font color="#CCCCCC"> that we</font>

508
00:25:42,520 --> 00:25:48,700
<font color="#E5E5E5">proposed the Akula they actually based</font>

509
00:25:45,370 --> 00:25:51,820
on a software<font color="#E5E5E5"> project in Java is able to</font>

510
00:25:48,700 --> 00:25:54,940
mine all the<font color="#E5E5E5"> story of a project and is</font>

511
00:25:51,820 --> 00:25:58,060
able to it represents the source code

512
00:25:54,940 --> 00:26:01,120
changes as<font color="#E5E5E5"> st nodes and is</font><font color="#CCCCCC"> able to apply</font>

513
00:25:58,060 --> 00:26:03,250
<font color="#E5E5E5">our frequent itemsets mining that is a</font>

514
00:26:01,120 --> 00:26:06,870
<font color="#CCCCCC">bit</font><font color="#E5E5E5"> different with</font><font color="#CCCCCC"> respect to the first</font>

515
00:26:03,250 --> 00:26:11,260
letter<font color="#CCCCCC"> I show you in the previous</font><font color="#E5E5E5"> slides</font>

516
00:26:06,870 --> 00:26:13,479
<font color="#E5E5E5">now the application</font><font color="#CCCCCC"> are similar to the</font>

517
00:26:11,260 --> 00:26:15,370
one<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I showed you before so first of</font>

518
00:26:13,480 --> 00:26:16,780
all<font color="#E5E5E5"> you would like to detect error from</font>

519
00:26:15,370 --> 00:26:20,439
code then<font color="#CCCCCC"> you would like to assist</font>

520
00:26:16,780 --> 00:26:22,210
<font color="#E5E5E5">developers and the best thing</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be to</font>

521
00:26:20,440 --> 00:26:24,850
generate automatically some

522
00:26:22,210 --> 00:26:30,310
transformation based on existing

523
00:26:24,850 --> 00:26:32,139
instances so in this case the the

524
00:26:30,310 --> 00:26:35,139
<font color="#E5E5E5">approach is a</font><font color="#CCCCCC"> bit different</font><font color="#E5E5E5"> because we</font>

525
00:26:32,140 --> 00:26:38,200
<font color="#E5E5E5">don't start</font><font color="#CCCCCC"> from a snapshot but we start</font>

526
00:26:35,140 --> 00:26:41,380
from a git repository<font color="#E5E5E5"> with different</font>

527
00:26:38,200 --> 00:26:42,430
code revisions<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then we apply a</font>

528
00:26:41,380 --> 00:26:44,539
change distiller

529
00:26:42,430 --> 00:26:47,089
so we are able<font color="#CCCCCC"> to gather all the</font>

530
00:26:44,539 --> 00:26:50,570
Eddie scripts<font color="#E5E5E5"> then what we do</font><font color="#CCCCCC"> is that</font>

531
00:26:47,089 --> 00:26:53,178
<font color="#E5E5E5">for so</font><font color="#CCCCCC"> all we group these scripts then</font>

532
00:26:50,570 --> 00:26:56,779
we apply an equal inscribed criteria and

533
00:26:53,179 --> 00:27:00,259
all in<font color="#E5E5E5"> the end</font><font color="#CCCCCC"> we apply our frequent</font>

534
00:26:56,779 --> 00:27:01,969
itemsets mining algorithm now let's

535
00:27:00,259 --> 00:27:04,399
consider an example because<font color="#E5E5E5"> it's much</font>

536
00:27:01,969 --> 00:27:06,469
easier<font color="#CCCCCC"> to understand</font><font color="#E5E5E5"> let's consider that</font>

537
00:27:04,399 --> 00:27:10,928
we have<font color="#E5E5E5"> this commit so in this commit</font>

538
00:27:06,469 --> 00:27:13,969
<font color="#CCCCCC">whoever we</font><font color="#E5E5E5"> are adding two lines of code</font>

539
00:27:10,929 --> 00:27:16,219
<font color="#E5E5E5">actually the students of code are more</font>

540
00:27:13,969 --> 00:27:21,499
or less<font color="#CCCCCC"> the same there</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> a our</font>

541
00:27:16,219 --> 00:27:23,659
deal is<font color="#E5E5E5"> more change now so</font><font color="#CCCCCC"> what we are</font>

542
00:27:21,499 --> 00:27:27,859
doing<font color="#E5E5E5"> first of all we are</font><font color="#CCCCCC"> inserting an</font>

543
00:27:23,659 --> 00:27:30,469
if statement then<font color="#E5E5E5"> we are inserting the</font>

544
00:27:27,859 --> 00:27:33,379
method invocation<font color="#E5E5E5"> afterwards</font><font color="#CCCCCC"> we are</font>

545
00:27:30,469 --> 00:27:38,569
adding at this<font color="#E5E5E5"> expression and then</font><font color="#CCCCCC"> we</font>

546
00:27:33,379 --> 00:27:42,589
are computing the equals on the on the

547
00:27:38,569 --> 00:27:47,469
argument to<font color="#E5E5E5"> the TSP afterwards</font><font color="#CCCCCC"> we are</font>

548
00:27:42,589 --> 00:27:47,469
<font color="#E5E5E5">returning we are returning an integer</font>

549
00:27:49,029 --> 00:27:57,559
now we can say<font color="#E5E5E5"> that we have two</font>

550
00:27:54,199 --> 00:28:00,949
<font color="#E5E5E5">different groups</font><font color="#CCCCCC"> of changes</font><font color="#E5E5E5"> this one and</font>

551
00:27:57,559 --> 00:28:04,729
this<font color="#E5E5E5"> other one but in the end these two</font>

552
00:28:00,949 --> 00:28:07,249
groups are doing<font color="#E5E5E5"> the same</font><font color="#CCCCCC"> now what is</font>

553
00:28:04,729 --> 00:28:09,789
the grouping criteria first<font color="#E5E5E5"> of all what</font>

554
00:28:07,249 --> 00:28:14,269
we are<font color="#E5E5E5"> going to do is to group the</font>

555
00:28:09,789 --> 00:28:17,179
<font color="#CCCCCC">changes into transaction actually what</font>

556
00:28:14,269 --> 00:28:19,759
we do is<font color="#E5E5E5"> that we can we group the</font>

557
00:28:17,179 --> 00:28:28,309
changes based<font color="#E5E5E5"> on the method in</font><font color="#CCCCCC"> which</font>

558
00:28:19,759 --> 00:28:31,159
they are so we are going<font color="#E5E5E5"> to have these</font>

559
00:28:28,309 --> 00:28:33,949
<font color="#CCCCCC">two groups of course there are some</font>

560
00:28:31,159 --> 00:28:36,679
limitation in this approach because<font color="#E5E5E5"> our</font>

561
00:28:33,949 --> 00:28:38,839
approach could<font color="#E5E5E5"> be a bit naive</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> in</font>

562
00:28:36,679 --> 00:28:43,369
some cases<font color="#E5E5E5"> for example because we are</font>

563
00:28:38,839 --> 00:28:48,039
<font color="#E5E5E5">excluding changes that occur across the</font>

564
00:28:43,369 --> 00:28:50,389
across methods across different methods

565
00:28:48,039 --> 00:28:52,999
<font color="#CCCCCC">the second thing is to</font><font color="#E5E5E5"> understand</font><font color="#CCCCCC"> the</font>

566
00:28:50,389 --> 00:28:54,199
given<font color="#CCCCCC"> two different</font><font color="#E5E5E5"> group of changes is</font>

567
00:28:52,999 --> 00:28:58,670
<font color="#CCCCCC">to</font><font color="#E5E5E5"> understand if they are the same</font>

568
00:28:54,200 --> 00:29:03,090
<font color="#E5E5E5">otherwise we cannot compute to the</font><font color="#CCCCCC"> idea</font>

569
00:28:58,670 --> 00:29:05,520
now<font color="#E5E5E5"> the change</font><font color="#CCCCCC"> equivalents criteria is</font>

570
00:29:03,090 --> 00:29:08,429
<font color="#CCCCCC">based on the change type the subject and</font>

571
00:29:05,520 --> 00:29:10,290
the contest<font color="#E5E5E5"> the change type is pretty</font>

572
00:29:08,430 --> 00:29:12,510
much easy<font color="#E5E5E5"> to understand because for</font>

573
00:29:10,290 --> 00:29:15,629
example<font color="#CCCCCC"> in the case before</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are adding</font>

574
00:29:12,510 --> 00:29:23,760
a lines of code<font color="#E5E5E5"> so in the end this</font><font color="#CCCCCC"> is an</font>

575
00:29:15,630 --> 00:29:28,070
insert so given these these<font color="#E5E5E5"> decide</font><font color="#CCCCCC"> it in</font>

576
00:29:23,760 --> 00:29:28,070
the end we know that this is the subject

577
00:29:29,120 --> 00:29:35,850
naturally<font color="#E5E5E5"> what we do is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font>

578
00:29:31,860 --> 00:29:40,110
anonymously<font color="#E5E5E5"> identifiers just because</font>

579
00:29:35,850 --> 00:29:45,780
otherwise it's it's hard<font color="#CCCCCC"> to gather</font>

580
00:29:40,110 --> 00:29:48,899
<font color="#E5E5E5">together the the patterns and</font><font color="#CCCCCC"> then</font>

581
00:29:45,780 --> 00:29:51,540
finally we define the contest but the

582
00:29:48,900 --> 00:29:57,470
context<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> think about is just</font><font color="#E5E5E5"> the</font>

583
00:29:51,540 --> 00:30:03,720
place in which<font color="#E5E5E5"> the subject occur so</font>

584
00:29:57,470 --> 00:30:07,350
given these two group of changes we

585
00:30:03,720 --> 00:30:16,970
transform the<font color="#E5E5E5"> edits in this kind of</font>

586
00:30:07,350 --> 00:30:16,969
representation what we did one minute

587
00:30:17,750 --> 00:30:24,480
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so what we did is</font><font color="#CCCCCC"> that we evaluate</font>

588
00:30:21,690 --> 00:30:28,080
the correctness of the tool<font color="#E5E5E5"> and actually</font>

589
00:30:24,480 --> 00:30:31,320
we applied it<font color="#CCCCCC"> to our could</font><font color="#E5E5E5"> be over</font><font color="#CCCCCC"> a</font>

590
00:30:28,080 --> 00:30:33,899
company that is in Belgium remind

591
00:30:31,320 --> 00:30:37,320
different repositories from Android

592
00:30:33,900 --> 00:30:40,230
projects<font color="#E5E5E5"> actually and</font><font color="#CCCCCC"> it's important</font><font color="#E5E5E5"> to</font>

593
00:30:37,320 --> 00:30:43,950
say that<font color="#E5E5E5"> for really understand if our</font>

594
00:30:40,230 --> 00:30:47,490
<font color="#CCCCCC">ready scripts were correct or not we had</font>

595
00:30:43,950 --> 00:30:48,930
to manually<font color="#E5E5E5"> evaluate the scripts and as</font>

596
00:30:47,490 --> 00:30:52,500
I told<font color="#CCCCCC"> you</font><font color="#E5E5E5"> before this something</font><font color="#CCCCCC"> that</font>

597
00:30:48,930 --> 00:30:54,840
you always have<font color="#E5E5E5"> to do I mean one of the</font>

598
00:30:52,500 --> 00:30:56,730
problem in<font color="#E5E5E5"> doing research in academia</font>

599
00:30:54,840 --> 00:31:00,030
<font color="#E5E5E5">they actually sometimes we don't have</font>

600
00:30:56,730 --> 00:31:03,000
real developers and so it's it's a bit

601
00:31:00,030 --> 00:31:06,180
tricky but<font color="#CCCCCC"> Indian we we try to be</font>

602
00:31:03,000 --> 00:31:08,010
developers so what we we say different

603
00:31:06,180 --> 00:31:10,920
we we under understand from where this

604
00:31:08,010 --> 00:31:13,770
study is that first<font color="#E5E5E5"> of all</font>

605
00:31:10,920 --> 00:31:16,890
in most<font color="#E5E5E5"> of the cases you</font><font color="#CCCCCC"> have that the</font>

606
00:31:13,770 --> 00:31:20,129
majority of<font color="#CCCCCC"> systemic edits have a few</font>

607
00:31:16,890 --> 00:31:23,000
instances so in the end you see that<font color="#E5E5E5"> and</font>

608
00:31:20,130 --> 00:31:26,700
that is one<font color="#E5E5E5"> of the problems of applying</font>

609
00:31:23,000 --> 00:31:30,120
our mining<font color="#E5E5E5"> algorithm because</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> having</font>

610
00:31:26,700 --> 00:31:33,600
<font color="#E5E5E5">a few instances it means that you have</font>

611
00:31:30,120 --> 00:31:38,729
to you have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> spend more computational</font>

612
00:31:33,600 --> 00:31:40,919
effort then another problem<font color="#CCCCCC"> because you</font>

613
00:31:38,730 --> 00:31:44,490
you cannot cut the search then another

614
00:31:40,920 --> 00:31:49,559
<font color="#E5E5E5">problem is that in most of the cases you</font>

615
00:31:44,490 --> 00:31:52,860
<font color="#CCCCCC">see that</font><font color="#E5E5E5"> on average</font><font color="#CCCCCC"> three or four st</font>

616
00:31:49,559 --> 00:31:56,850
level changes disregards the number of

617
00:31:52,860 --> 00:31:59,428
instances<font color="#E5E5E5"> so that you have that larger</font>

618
00:31:56,850 --> 00:32:04,678
<font color="#E5E5E5">eastern</font><font color="#CCCCCC"> side</font><font color="#E5E5E5"> cannot</font><font color="#CCCCCC"> water</font><font color="#E5E5E5"> with the small</font>

619
00:31:59,429 --> 00:32:06,450
number of instances<font color="#E5E5E5"> so in summary we are</font>

620
00:32:04,679 --> 00:32:10,980
we have our technique that is able<font color="#E5E5E5"> to</font>

621
00:32:06,450 --> 00:32:16,950
<font color="#CCCCCC">identify systemic edits we in most of</font>

622
00:32:10,980 --> 00:32:19,559
the cases we see<font color="#CCCCCC"> that in 12.5 percent of</font>

623
00:32:16,950 --> 00:32:24,179
comets<font color="#E5E5E5"> they contain a</font><font color="#CCCCCC"> systematic edits</font>

624
00:32:19,559 --> 00:32:27,870
and mostly of these<font color="#E5E5E5"> instances are pretty</font>

625
00:32:24,179 --> 00:32:30,840
pretty<font color="#E5E5E5"> much smooth and but they can</font><font color="#CCCCCC"> ever</font>

626
00:32:27,870 --> 00:32:32,870
<font color="#E5E5E5">large sides as a future</font><font color="#CCCCCC"> what we</font><font color="#E5E5E5"> are</font>

627
00:32:30,840 --> 00:32:35,490
trying<font color="#E5E5E5"> to explore the different</font>

628
00:32:32,870 --> 00:32:38,549
configuration<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> trying to mine</font>

629
00:32:35,490 --> 00:32:40,530
<font color="#E5E5E5">for the specific type or</font><font color="#CCCCCC"> systematic</font>

630
00:32:38,549 --> 00:32:42,990
edits and also we are<font color="#E5E5E5"> trying to mine</font>

631
00:32:40,530 --> 00:32:45,149
across comets because one of<font color="#CCCCCC"> the Brahman</font>

632
00:32:42,990 --> 00:32:47,100
that we have today<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that we mined a</font>

633
00:32:45,150 --> 00:32:50,400
single<font color="#E5E5E5"> commit to first time so if we</font>

634
00:32:47,100 --> 00:32:52,469
have a changes that are across<font color="#CCCCCC"> comets we</font>

635
00:32:50,400 --> 00:32:55,020
are not able to<font color="#E5E5E5"> to minor this kind of</font>

636
00:32:52,470 --> 00:33:02,730
information<font color="#CCCCCC"> thank you</font>

637
00:32:55,020 --> 00:33:02,730
[Applause]

638
00:33:27,799 --> 00:33:34,860
yeah the<font color="#CCCCCC"> question</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> when we were</font>

639
00:33:31,500 --> 00:33:49,230
studying<font color="#CCCCCC"> systematic edits if we see if</font>

640
00:33:34,860 --> 00:33:51,479
<font color="#E5E5E5">people yeah okay so the the question</font><font color="#CCCCCC"> is</font>

641
00:33:49,230 --> 00:33:54,350
that<font color="#E5E5E5"> if we were able to</font><font color="#CCCCCC"> mine some best</font>

642
00:33:51,480 --> 00:33:56,520
practice across the<font color="#E5E5E5"> systematic edits</font>

643
00:33:54,350 --> 00:33:58,439
actually these<font color="#E5E5E5"> are nice question and</font>

644
00:33:56,520 --> 00:34:00,510
<font color="#E5E5E5">actually this is what we would like it's</font>

645
00:33:58,440 --> 00:34:03,149
the final goal<font color="#CCCCCC"> of this kind of study</font><font color="#E5E5E5"> I</font>

646
00:34:00,510 --> 00:34:06,480
mean the the<font color="#CCCCCC"> final goal is to understand</font>

647
00:34:03,149 --> 00:34:08,429
if there<font color="#E5E5E5"> are some best practice</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

648
00:34:06,480 --> 00:34:10,379
<font color="#CCCCCC">can apply everywhere</font><font color="#E5E5E5"> but what do</font><font color="#CCCCCC"> you</font>

649
00:34:08,429 --> 00:34:12,540
have to understand is that most<font color="#CCCCCC"> of the</font>

650
00:34:10,379 --> 00:34:15,690
cases<font color="#E5E5E5"> for</font><font color="#CCCCCC"> systemic edits you have are</font>

651
00:34:12,540 --> 00:34:18,210
<font color="#E5E5E5">really as small number</font><font color="#CCCCCC"> of instances it</font>

652
00:34:15,690 --> 00:34:20,520
means that if you<font color="#E5E5E5"> - of credibility</font><font color="#CCCCCC"> you</font>

653
00:34:18,210 --> 00:34:22,800
<font color="#E5E5E5">have for</font><font color="#CCCCCC"> example for a systematic</font><font color="#E5E5E5"> edit</font>

654
00:34:20,520 --> 00:34:26,668
<font color="#E5E5E5">you have three instances for example</font><font color="#CCCCCC"> in</font>

655
00:34:22,800 --> 00:34:28,500
this<font color="#E5E5E5"> case we</font><font color="#CCCCCC"> saw that for</font><font color="#E5E5E5"> two thousand</font>

656
00:34:26,668 --> 00:34:30,750
<font color="#E5E5E5">five hundred those</font><font color="#CCCCCC"> systematic edits</font><font color="#E5E5E5"> you</font>

657
00:34:28,500 --> 00:34:33,270
have only three instances<font color="#E5E5E5"> so this cannot</font>

658
00:34:30,750 --> 00:34:36,089
be<font color="#CCCCCC"> a best practice</font><font color="#E5E5E5"> but one of the</font>

659
00:34:33,270 --> 00:34:37,530
<font color="#E5E5E5">problem is</font><font color="#CCCCCC"> that one of the problem</font>

660
00:34:36,089 --> 00:34:39,480
applying<font color="#E5E5E5"> this kind of technique is</font>

661
00:34:37,530 --> 00:34:41,730
scalability<font color="#E5E5E5"> because what we were doing</font>

662
00:34:39,480 --> 00:34:42,960
is<font color="#E5E5E5"> that for each project we are</font><font color="#CCCCCC"> going</font>

663
00:34:41,730 --> 00:34:45,570
<font color="#CCCCCC">through the history and we were</font>

664
00:34:42,960 --> 00:34:47,849
analyzing all the the<font color="#E5E5E5"> history of just</font>

665
00:34:45,570 --> 00:34:50,190
one project<font color="#E5E5E5"> first time now what do you</font>

666
00:34:47,849 --> 00:34:51,839
<font color="#E5E5E5">like you you should do for having an</font>

667
00:34:50,190 --> 00:34:53,879
<font color="#CCCCCC">information like that</font><font color="#E5E5E5"> is that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> should</font>

668
00:34:51,839 --> 00:34:55,589
mind our complete ecosystem<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that you</font>

669
00:34:53,879 --> 00:34:59,430
should<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to understand whether</font>

670
00:34:55,589 --> 00:35:01,320
there are some some best practice that

671
00:34:59,430 --> 00:35:03,990
<font color="#E5E5E5">different developers are applying</font>

672
00:35:01,320 --> 00:35:06,170
<font color="#E5E5E5">because in our case most of the the</font>

673
00:35:03,990 --> 00:35:08,870
repository sir

674
00:35:06,170 --> 00:35:11,990
I mean most of<font color="#E5E5E5"> the people that work on</font>

675
00:35:08,870 --> 00:35:14,299
our<font color="#E5E5E5"> repository are not a lot I mean most</font>

676
00:35:11,990 --> 00:35:16,629
<font color="#E5E5E5">of the cases you don't have thousands of</font>

677
00:35:14,300 --> 00:35:19,280
developers<font color="#E5E5E5"> so it's it's really</font><font color="#CCCCCC"> hard to</font>

678
00:35:16,630 --> 00:35:24,880
to mine<font color="#E5E5E5"> a best practice that you</font><font color="#CCCCCC"> hold</font>

679
00:35:19,280 --> 00:35:24,880
<font color="#E5E5E5">apply everywhere no one</font>

680
00:35:31,290 --> 00:35:46,750
did you find out<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> the okay</font>

681
00:35:42,309 --> 00:35:50,309
so the<font color="#CCCCCC"> question</font><font color="#E5E5E5"> is that if when mining a</font>

682
00:35:46,750 --> 00:35:54,520
different different<font color="#E5E5E5"> projects we found</font>

683
00:35:50,309 --> 00:35:57,280
similar similar idioms<font color="#E5E5E5"> actually this is</font>

684
00:35:54,520 --> 00:36:00,009
a<font color="#E5E5E5"> nice question and it's it depends</font><font color="#CCCCCC"> what</font>

685
00:35:57,280 --> 00:36:02,670
it still depends what is an idiom for

686
00:36:00,010 --> 00:36:07,059
<font color="#E5E5E5">you because for</font><font color="#CCCCCC"> example I could say that</font>

687
00:36:02,670 --> 00:36:08,440
when you one of the example for an idiom

688
00:36:07,059 --> 00:36:10,869
is<font color="#E5E5E5"> that let's say that you have our</font>

689
00:36:08,440 --> 00:36:14,589
project<font color="#CCCCCC"> in July 8 if you like to go in</font>

690
00:36:10,869 --> 00:36:17,410
to a new<font color="#E5E5E5"> future that you have in Java 9</font>

691
00:36:14,589 --> 00:36:19,420
that what you can say is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> ok I will</font>

692
00:36:17,410 --> 00:36:21,879
<font color="#E5E5E5">if I mine the projects that</font><font color="#CCCCCC"> are are</font>

693
00:36:19,420 --> 00:36:24,130
<font color="#E5E5E5">moving from one version to another I</font>

694
00:36:21,880 --> 00:36:26,349
will find<font color="#CCCCCC"> the decision so if you think</font>

695
00:36:24,130 --> 00:36:28,869
that<font color="#CCCCCC"> that is an idiom</font><font color="#E5E5E5"> then you will find</font>

696
00:36:26,349 --> 00:36:30,609
<font color="#E5E5E5">this kind of</font><font color="#CCCCCC"> video across</font><font color="#E5E5E5"> projects but</font>

697
00:36:28,869 --> 00:36:32,950
there are some idioms that are<font color="#CCCCCC"> very</font>

698
00:36:30,609 --> 00:36:35,140
peculiar<font color="#E5E5E5"> about and they are really about</font>

699
00:36:32,950 --> 00:36:37,540
<font color="#CCCCCC">the developers that are</font><font color="#E5E5E5"> implementing the</font>

700
00:36:35,140 --> 00:36:39,960
project<font color="#E5E5E5"> so in this case is you will not</font>

701
00:36:37,540 --> 00:36:39,960
find them

702
00:36:42,460 --> 00:36:49,050
[Applause]

703
00:37:26,010 --> 00:37:31,920
<font color="#CCCCCC">so you have water</font><font color="#E5E5E5"> gonna throw it on your</font>

704
00:37:29,770 --> 00:37:31,920
laptop

705
00:37:38,300 --> 00:37:41,389
[Music]

706
00:39:09,470 --> 00:39:20,990
family I want to<font color="#CCCCCC"> eat I will finish the</font>

707
00:39:17,280 --> 00:39:20,990
presentation<font color="#E5E5E5"> I there were to take a song</font>

708
00:39:27,040 --> 00:39:30,320
[Music]

