1
00:00:08,379 --> 00:00:12,610
<font color="#E5E5E5">okay hi everybody</font><font color="#CCCCCC"> my name is Thomas</font>

2
00:00:11,059 --> 00:00:13,928
Monroe I'm gonna be talking about

3
00:00:12,610 --> 00:00:16,480
<font color="#CCCCCC">Postgres</font>

4
00:00:13,929 --> 00:00:19,480
and<font color="#E5E5E5"> FreeBSD together and I gotta stay</font><font color="#CCCCCC"> on</font>

5
00:00:16,480 --> 00:00:21,699
this side<font color="#CCCCCC"> of the line the strange</font><font color="#E5E5E5"> title</font>

6
00:00:19,480 --> 00:00:23,950
of my talk is some kind<font color="#E5E5E5"> of attempt</font><font color="#CCCCCC"> to</font>

7
00:00:21,699 --> 00:00:25,210
capture what it felt like<font color="#E5E5E5"> when I</font>

8
00:00:23,950 --> 00:00:26,948
realized that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> could actually hack</font>

9
00:00:25,210 --> 00:00:28,509
the kernel and<font color="#E5E5E5"> make useful changes to it</font>

10
00:00:26,949 --> 00:00:31,689
<font color="#E5E5E5">and you know</font><font color="#CCCCCC"> after spending</font><font color="#E5E5E5"> a lot of</font>

11
00:00:28,509 --> 00:00:33,790
time writing<font color="#CCCCCC"> userspace</font><font color="#E5E5E5"> code</font>

12
00:00:31,689 --> 00:00:35,410
realizing that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> kernel was actually</font>

13
00:00:33,790 --> 00:00:41,920
just more<font color="#CCCCCC"> C code and you can</font><font color="#E5E5E5"> hack that</font>

14
00:00:35,410 --> 00:00:44,410
<font color="#E5E5E5">too</font><font color="#CCCCCC"> so just a little bit of background</font>

15
00:00:41,920 --> 00:00:48,790
<font color="#E5E5E5">about myself</font><font color="#CCCCCC"> I'm pretty new to freebsd</font>

16
00:00:44,410 --> 00:00:53,709
hacking and<font color="#CCCCCC"> mateos guzik</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Alan Judah</font>

17
00:00:48,790 --> 00:00:56,080
<font color="#E5E5E5">my mentors I've spent about 20 years</font>

18
00:00:53,710 --> 00:00:58,869
<font color="#E5E5E5">working on all kinds</font><font color="#CCCCCC"> of C and C++ stuff</font>

19
00:00:56,080 --> 00:01:00,900
on many different<font color="#CCCCCC"> kinds of Unix so I'm</font>

20
00:00:58,869 --> 00:01:02,949
not all new to<font color="#E5E5E5"> UNIX packing but</font>

21
00:01:00,900 --> 00:01:07,390
previously<font color="#E5E5E5"> is something I took up about</font>

22
00:01:02,949 --> 00:01:09,189
three years ago<font color="#CCCCCC"> and my main work is</font>

23
00:01:07,390 --> 00:01:11,890
actually<font color="#CCCCCC"> Postgres and</font><font color="#E5E5E5"> I work for a</font>

24
00:01:09,189 --> 00:01:15,298
<font color="#E5E5E5">company called Enterprise TV where I</font>

25
00:01:11,890 --> 00:01:17,560
work on query<font color="#CCCCCC"> parallelization</font><font color="#E5E5E5"> and</font>

26
00:01:15,299 --> 00:01:19,810
transaction machinery and all kinds of

27
00:01:17,560 --> 00:01:21,880
stuff<font color="#CCCCCC"> so well my personal goals is to</font>

28
00:01:19,810 --> 00:01:26,800
<font color="#E5E5E5">try</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> FreeBSD and Postgres a</font>

29
00:01:21,880 --> 00:01:29,890
really good<font color="#CCCCCC"> combination</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> just a quick</font>

30
00:01:26,800 --> 00:01:31,570
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> of background about</font><font color="#E5E5E5"> the way that</font><font color="#CCCCCC"> BSD</font>

31
00:01:29,890 --> 00:01:33,430
<font color="#CCCCCC">and Postgres are interlinked and their</font>

32
00:01:31,570 --> 00:01:35,289
common history at<font color="#E5E5E5"> Berkeley which</font><font color="#CCCCCC"> i think</font>

33
00:01:33,430 --> 00:01:36,610
<font color="#CCCCCC">is really interesting</font><font color="#E5E5E5"> Michael</font>

34
00:01:35,290 --> 00:01:38,290
Stonebraker started the post quest

35
00:01:36,610 --> 00:01:40,540
<font color="#CCCCCC">projects</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> that he did ingress and</font>

36
00:01:38,290 --> 00:01:44,020
<font color="#E5E5E5">ingress was a database</font><font color="#CCCCCC"> that was</font>

37
00:01:40,540 --> 00:01:47,680
developed at<font color="#E5E5E5"> Berkeley around the time</font>

38
00:01:44,020 --> 00:01:49,210
that BSD was being born just as<font color="#E5E5E5"> um</font><font color="#CCCCCC"> ken</font>

39
00:01:47,680 --> 00:01:51,430
<font color="#CCCCCC">Thompson came to Berkeley University</font>

40
00:01:49,210 --> 00:01:54,789
with a suitcase<font color="#E5E5E5"> full of tapes I assume</font>

41
00:01:51,430 --> 00:01:58,270
with AT&T<font color="#E5E5E5"> UNIX on them and the whole bsd</font>

42
00:01:54,790 --> 00:02:01,210
thing kicked off these<font color="#CCCCCC"> darius guys were</font>

43
00:01:58,270 --> 00:02:03,520
taking<font color="#E5E5E5"> the ideas from IBM system our</font>

44
00:02:01,210 --> 00:02:05,710
<font color="#E5E5E5">project relational databases and so on</font>

45
00:02:03,520 --> 00:02:07,420
which<font color="#E5E5E5"> ran on mainframes</font><font color="#CCCCCC"> and try to do</font>

46
00:02:05,710 --> 00:02:08,649
the same<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> stuff on</font><font color="#CCCCCC"> unix</font><font color="#E5E5E5"> systems</font>

47
00:02:07,420 --> 00:02:10,869
these new<font color="#CCCCCC"> UNIX systems that were</font>

48
00:02:08,649 --> 00:02:13,930
suddenly everywhere at Berkeley

49
00:02:10,869 --> 00:02:15,700
so I mentioned ingress because it has

50
00:02:13,930 --> 00:02:16,900
the strange<font color="#CCCCCC"> honor of being the</font><font color="#E5E5E5"> first</font>

51
00:02:15,700 --> 00:02:19,780
<font color="#E5E5E5">software that we've ever released</font>

52
00:02:16,900 --> 00:02:22,719
<font color="#E5E5E5">entirely under a BSD license because BSD</font>

53
00:02:19,780 --> 00:02:24,760
itself was<font color="#E5E5E5"> you needed to buy an AT&T</font>

54
00:02:22,719 --> 00:02:27,019
license for part<font color="#E5E5E5"> of it which cost like</font>

55
00:02:24,760 --> 00:02:29,720
loads and loads of<font color="#E5E5E5"> money but um</font>

56
00:02:27,020 --> 00:02:31,459
<font color="#CCCCCC">Stonebraker</font><font color="#E5E5E5"> and his collaborators were</font>

57
00:02:29,720 --> 00:02:33,770
trying to get the<font color="#E5E5E5"> software they</font>

58
00:02:31,459 --> 00:02:35,150
developed out of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> university</font><font color="#E5E5E5"> so that</font>

59
00:02:33,770 --> 00:02:37,400
<font color="#E5E5E5">they could commercialize</font><font color="#CCCCCC"> it on the site</font>

60
00:02:35,150 --> 00:02:39,680
and they use the<font color="#E5E5E5"> bsd license to do that</font>

61
00:02:37,400 --> 00:02:41,450
and then<font color="#E5E5E5"> Postgres finished up with it</font>

62
00:02:39,680 --> 00:02:43,970
was a completely new<font color="#E5E5E5"> database which also</font>

63
00:02:41,450 --> 00:02:48,170
<font color="#CCCCCC">used to be a C license and ran on and</font>

64
00:02:43,970 --> 00:02:50,209
was developed<font color="#CCCCCC"> on BSD systems yeah</font><font color="#E5E5E5"> I</font>

65
00:02:48,170 --> 00:02:52,280
think<font color="#E5E5E5"> it's kind of</font><font color="#CCCCCC"> interesting</font>

66
00:02:50,209 --> 00:02:54,560
modern<font color="#E5E5E5"> Postgres runs on all kinds of</font>

67
00:02:52,280 --> 00:02:57,430
<font color="#CCCCCC">Unix the funny</font><font color="#E5E5E5"> thing is there aren't</font>

68
00:02:54,560 --> 00:03:01,250
<font color="#E5E5E5">that many kinds</font><font color="#CCCCCC"> of Unix left</font><font color="#E5E5E5"> because</font>

69
00:02:57,430 --> 00:03:02,750
like I<font color="#CCCCCC"> I can think of three</font><font color="#E5E5E5"> UNIX is that</font>

70
00:03:01,250 --> 00:03:05,120
I worked on<font color="#CCCCCC"> for years</font><font color="#E5E5E5"> that are just gone</font>

71
00:03:02,750 --> 00:03:07,340
<font color="#CCCCCC">it's it's crazy but anyway and that was</font>

72
00:03:05,120 --> 00:03:10,010
one of the reasons that I became

73
00:03:07,340 --> 00:03:11,930
interested<font color="#E5E5E5"> in FreeBSD</font><font color="#CCCCCC"> I don't really</font>

74
00:03:10,010 --> 00:03:16,269
want there to be<font color="#E5E5E5"> one monoculture</font><font color="#CCCCCC"> of</font>

75
00:03:11,930 --> 00:03:19,010
computers<font color="#E5E5E5"> remaining on earth</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so</font>

76
00:03:16,269 --> 00:03:20,150
<font color="#CCCCCC">if you work on any kind</font><font color="#E5E5E5"> of software that</font>

77
00:03:19,010 --> 00:03:22,099
has to run on<font color="#E5E5E5"> many different operating</font>

78
00:03:20,150 --> 00:03:25,610
systems operating systems look to you

79
00:03:22,099 --> 00:03:27,579
like this they're a bunch<font color="#E5E5E5"> of man pages</font>

80
00:03:25,610 --> 00:03:30,200
that are<font color="#CCCCCC"> essentially chiseled in stone</font>

81
00:03:27,580 --> 00:03:31,670
<font color="#CCCCCC">and you know that's the way the system</font>

82
00:03:30,200 --> 00:03:36,768
<font color="#CCCCCC">works and you've got to work within</font><font color="#E5E5E5"> it</font>

83
00:03:31,670 --> 00:03:37,970
and things<font color="#E5E5E5"> get much purchasing once you</font>

84
00:03:36,769 --> 00:03:39,049
realized that<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> change</font>

85
00:03:37,970 --> 00:03:41,150
the<font color="#E5E5E5"> operating system to</font><font color="#CCCCCC"> make it better</font>

86
00:03:39,049 --> 00:03:42,590
<font color="#E5E5E5">and that's the case</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> FreeBSD I think</font>

87
00:03:41,150 --> 00:03:43,700
probably<font color="#E5E5E5"> more so than than other</font>

88
00:03:42,590 --> 00:03:46,069
operating<font color="#E5E5E5"> systems certainly than</font>

89
00:03:43,700 --> 00:03:47,679
<font color="#CCCCCC">commercial ones and possibly more so in</font>

90
00:03:46,069 --> 00:03:51,649
<font color="#E5E5E5">Linux</font>

91
00:03:47,680 --> 00:03:54,560
so some of the dilemmas<font color="#E5E5E5"> that we database</font>

92
00:03:51,650 --> 00:03:56,870
hackers face<font color="#E5E5E5"> boiled</font><font color="#CCCCCC"> down to variations</font>

93
00:03:54,560 --> 00:03:58,100
of this sort of general theme should the

94
00:03:56,870 --> 00:03:59,750
operating system do something for<font color="#E5E5E5"> us or</font>

95
00:03:58,100 --> 00:04:02,829
should<font color="#E5E5E5"> we do it ourselves</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that</font>

96
00:03:59,750 --> 00:04:05,090
there's all kinds of scheduling problems

97
00:04:02,829 --> 00:04:06,470
<font color="#E5E5E5">buffering page caches all that kind of</font>

98
00:04:05,090 --> 00:04:09,980
stuff should we do<font color="#E5E5E5"> our own system like</font>

99
00:04:06,470 --> 00:04:12,319
<font color="#CCCCCC">that and so some of the</font><font color="#E5E5E5"> things I'm just</font>

100
00:04:09,980 --> 00:04:13,700
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to go</font><font color="#E5E5E5"> through a whole to make</font>

101
00:04:12,319 --> 00:04:15,290
<font color="#E5E5E5">Postgres</font><font color="#CCCCCC"> in previously we</font><font color="#E5E5E5"> work together</font>

102
00:04:13,700 --> 00:04:17,149
really<font color="#CCCCCC"> well</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> there's a lot of</font>

103
00:04:15,290 --> 00:04:19,760
<font color="#E5E5E5">really small things so I'm just</font><font color="#CCCCCC"> going to</font>

104
00:04:17,149 --> 00:04:21,138
go through<font color="#CCCCCC"> kind of like a whole jumble</font>

105
00:04:19,760 --> 00:04:23,500
of different small topics<font color="#E5E5E5"> things that</font>

106
00:04:21,139 --> 00:04:25,250
<font color="#E5E5E5">I've run into</font><font color="#CCCCCC"> in my three</font><font color="#E5E5E5"> years of using</font>

107
00:04:23,500 --> 00:04:29,630
previously as my main<font color="#E5E5E5"> development</font>

108
00:04:25,250 --> 00:04:32,450
environment one thing that I think<font color="#E5E5E5"> is</font>

109
00:04:29,630 --> 00:04:35,750
really<font color="#E5E5E5"> interesting to look at is the</font>

110
00:04:32,450 --> 00:04:37,669
question<font color="#CCCCCC"> of buffered i/o Postgres is</font>

111
00:04:35,750 --> 00:04:40,850
basically the<font color="#E5E5E5"> last major relational</font>

112
00:04:37,669 --> 00:04:43,520
database to do buffered i/o and the

113
00:04:40,850 --> 00:04:47,510
most of the operating systems developed

114
00:04:43,520 --> 00:04:51,409
some<font color="#E5E5E5"> kind of direct</font><font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> over the past</font>

115
00:04:47,510 --> 00:04:52,849
sort<font color="#E5E5E5"> of 15 years or</font><font color="#CCCCCC"> so and then a stall</font>

116
00:04:51,410 --> 00:04:54,170
<font color="#E5E5E5">else was really against it and this was</font>

117
00:04:52,850 --> 00:04:55,520
<font color="#CCCCCC">happening around</font><font color="#E5E5E5"> about the time that db2</font>

118
00:04:54,170 --> 00:04:58,070
and Oracle was<font color="#CCCCCC"> switching to direct eye</font>

119
00:04:55,520 --> 00:05:00,469
<font color="#E5E5E5">on Linux and that's that quote from</font><font color="#CCCCCC"> the</font>

120
00:04:58,070 --> 00:05:01,610
top there<font color="#E5E5E5"> is from from the open man page</font>

121
00:05:00,470 --> 00:05:06,260
on<font color="#E5E5E5"> Linux I think they've changed it now</font>

122
00:05:01,610 --> 00:05:07,880
but this<font color="#CCCCCC"> is sort of tension</font><font color="#E5E5E5"> between the</font>

123
00:05:06,260 --> 00:05:09,140
operating system<font color="#E5E5E5"> people and the database</font>

124
00:05:07,880 --> 00:05:12,170
people<font color="#E5E5E5"> both</font><font color="#CCCCCC"> of whom want to</font><font color="#E5E5E5"> have</font>

125
00:05:09,140 --> 00:05:13,520
<font color="#E5E5E5">complete control</font><font color="#CCCCCC"> of buffering</font><font color="#E5E5E5"> which i</font>

126
00:05:12,170 --> 00:05:18,200
<font color="#E5E5E5">think is really</font><font color="#CCCCCC"> interesting</font><font color="#E5E5E5"> and we'll</font>

127
00:05:13,520 --> 00:05:21,710
come<font color="#E5E5E5"> back to this so to an operating</font>

128
00:05:18,200 --> 00:05:25,909
<font color="#E5E5E5">system</font><font color="#CCCCCC"> Postgres looks in very you know</font>

129
00:05:21,710 --> 00:05:28,370
<font color="#E5E5E5">simple cartoon form we use a tiny bit of</font>

130
00:05:25,910 --> 00:05:32,030
system<font color="#CCCCCC"> five shared memory a big chunk</font><font color="#E5E5E5"> of</font>

131
00:05:28,370 --> 00:05:33,950
<font color="#CCCCCC">em map anonymous shared memory that all</font>

132
00:05:32,030 --> 00:05:37,210
the processes<font color="#CCCCCC"> involved in the database</font>

133
00:05:33,950 --> 00:05:42,110
cluster<font color="#CCCCCC"> inherit and we also use POSIX</font>

134
00:05:37,210 --> 00:05:43,940
shared memory to run parallel queries so

135
00:05:42,110 --> 00:05:45,350
I think<font color="#E5E5E5"> that's quite strange</font><font color="#CCCCCC"> to begin</font>

136
00:05:43,940 --> 00:05:48,320
with we're using all<font color="#E5E5E5"> three different</font>

137
00:05:45,350 --> 00:05:51,140
<font color="#CCCCCC">mechanisms for getting</font><font color="#E5E5E5"> shared memory we</font>

138
00:05:48,320 --> 00:05:53,810
have a cluster of processes<font color="#E5E5E5"> running</font>

139
00:05:51,140 --> 00:05:57,469
together<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> um in the traditional</font>

140
00:05:53,810 --> 00:05:59,480
unix form you<font color="#CCCCCC"> have some kind</font><font color="#E5E5E5"> of parent</font>

141
00:05:57,470 --> 00:06:01,130
process<font color="#E5E5E5"> we call the postmaster which is</font>

142
00:05:59,480 --> 00:06:02,600
<font color="#E5E5E5">walking fork and children so this is</font>

143
00:06:01,130 --> 00:06:04,909
very classic old-school UNIX software

144
00:06:02,600 --> 00:06:07,460
<font color="#E5E5E5">server software and then we have a bunch</font>

145
00:06:04,910 --> 00:06:10,790
of<font color="#E5E5E5"> files on disk representing tables or</font>

146
00:06:07,460 --> 00:06:13,070
relations and representing segments of

147
00:06:10,790 --> 00:06:17,360
the writer head log that<font color="#E5E5E5"> we use to do</font>

148
00:06:13,070 --> 00:06:21,950
things<font color="#E5E5E5"> efficiently the process is</font>

149
00:06:17,360 --> 00:06:24,320
<font color="#E5E5E5">involved in running Postgres have file</font>

150
00:06:21,950 --> 00:06:25,430
descriptor pool obviously there's a

151
00:06:24,320 --> 00:06:27,680
limit on<font color="#E5E5E5"> how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> files scripts you can</font>

152
00:06:25,430 --> 00:06:30,740
<font color="#CCCCCC">have open</font><font color="#E5E5E5"> at once so and then they have</font>

153
00:06:27,680 --> 00:06:32,870
this<font color="#E5E5E5"> pipe that runs connects to the</font>

154
00:06:30,740 --> 00:06:34,220
postmaster so that they can shut down

155
00:06:32,870 --> 00:06:35,570
quickly<font color="#E5E5E5"> if they detect that the</font>

156
00:06:34,220 --> 00:06:36,860
postmaster<font color="#E5E5E5"> has died if anything has gone</font>

157
00:06:35,570 --> 00:06:39,080
<font color="#E5E5E5">wrong and all versions of post</font><font color="#CCCCCC"> Chris</font>

158
00:06:36,860 --> 00:06:40,370
used to have ways of crashing that would

159
00:06:39,080 --> 00:06:41,750
leave all kinds<font color="#E5E5E5"> of funny processes you'd</font>

160
00:06:40,370 --> 00:06:44,990
have to kill<font color="#E5E5E5"> if things went wrong so</font>

161
00:06:41,750 --> 00:06:46,070
this<font color="#E5E5E5"> new system keeps things tidy</font><font color="#CCCCCC"> so</font>

162
00:06:44,990 --> 00:06:47,810
that's a<font color="#E5E5E5"> very simple sort</font><font color="#CCCCCC"> of cartoon</font>

163
00:06:46,070 --> 00:06:50,840
view of the operating system level

164
00:06:47,810 --> 00:06:52,760
<font color="#E5E5E5">objects involved</font><font color="#CCCCCC"> one interesting thing</font>

165
00:06:50,840 --> 00:06:54,710
is that<font color="#CCCCCC"> we're still using processes</font><font color="#E5E5E5"> and</font>

166
00:06:52,760 --> 00:06:55,990
if you go back<font color="#E5E5E5"> to 1989</font>

167
00:06:54,710 --> 00:06:59,630
she's close<font color="#CCCCCC"> to the beginning</font><font color="#E5E5E5"> of</font>

168
00:06:55,990 --> 00:07:01,100
<font color="#CCCCCC">post-crisis creation was originally</font>

169
00:06:59,630 --> 00:07:03,409
greater than 86<font color="#CCCCCC"> own</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> now is pretty</font>

170
00:07:01,100 --> 00:07:07,130
<font color="#E5E5E5">close</font><font color="#CCCCCC"> to that they were saying that</font><font color="#E5E5E5"> they</font>

171
00:07:03,410 --> 00:07:07,850
used processes<font color="#E5E5E5"> instead of threads</font>

172
00:07:07,130 --> 00:07:08,930
because<font color="#E5E5E5"> they were trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get</font>

173
00:07:07,850 --> 00:07:10,400
something<font color="#E5E5E5"> going quickly</font><font color="#CCCCCC"> and back in</font>

174
00:07:08,930 --> 00:07:11,540
those<font color="#CCCCCC"> days of</font><font color="#E5E5E5"> course threads worked</font>

175
00:07:10,400 --> 00:07:15,080
rather differently on each operating

176
00:07:11,540 --> 00:07:16,310
<font color="#CCCCCC">system so they hadn't quite somehow 30</font>

177
00:07:15,080 --> 00:07:21,409
years<font color="#CCCCCC"> later</font><font color="#E5E5E5"> we still haven't quite got</font>

178
00:07:16,310 --> 00:07:23,090
around to<font color="#CCCCCC"> doing the threads</font><font color="#E5E5E5"> so from a</font>

179
00:07:21,410 --> 00:07:27,080
system call point<font color="#E5E5E5"> of view what you see</font>

180
00:07:23,090 --> 00:07:33,739
when you run<font color="#E5E5E5"> Postgres is idle backends</font>

181
00:07:27,080 --> 00:07:36,979
sit in<font color="#CCCCCC"> poll and when you run as when you</font>

182
00:07:33,740 --> 00:07:39,170
run very<font color="#E5E5E5"> simple queries that don't have</font>

183
00:07:36,980 --> 00:07:43,700
to<font color="#E5E5E5"> where all the data that</font><font color="#CCCCCC"> they want to</font>

184
00:07:39,170 --> 00:07:45,740
<font color="#E5E5E5">use is in the Postgres page cache sorry</font>

185
00:07:43,700 --> 00:07:48,080
buffer pool you really just see a bunch

186
00:07:45,740 --> 00:07:51,040
<font color="#E5E5E5">of network operations and when we need</font>

187
00:07:48,080 --> 00:07:53,750
<font color="#E5E5E5">to pull things into our own buffer pool</font>

188
00:07:51,040 --> 00:07:55,040
<font color="#CCCCCC">so we have this buffer</font><font color="#E5E5E5"> pool of our own</font>

189
00:07:53,750 --> 00:07:56,120
and then<font color="#E5E5E5"> there's the operating system</font>

190
00:07:55,040 --> 00:07:58,850
page cache so you've got this<font color="#CCCCCC"> kind of</font>

191
00:07:56,120 --> 00:08:01,420
<font color="#E5E5E5">two level of buffering</font><font color="#CCCCCC"> and you can see</font>

192
00:07:58,850 --> 00:08:03,320
that<font color="#E5E5E5"> you can see data moving from the</font>

193
00:08:01,420 --> 00:08:06,560
operating<font color="#E5E5E5"> system page cache into</font>

194
00:08:03,320 --> 00:08:09,500
<font color="#CCCCCC">post-crisis page cache with</font><font color="#E5E5E5"> reading</font><font color="#CCCCCC"> rip</font>

195
00:08:06,560 --> 00:08:14,570
with read operations<font color="#CCCCCC"> now one</font><font color="#E5E5E5"> interesting</font>

196
00:08:09,500 --> 00:08:17,510
<font color="#E5E5E5">thing is</font><font color="#CCCCCC"> that the when we when we</font><font color="#E5E5E5"> do</font>

197
00:08:14,570 --> 00:08:19,190
write operations hopefully we<font color="#CCCCCC"> just write</font>

198
00:08:17,510 --> 00:08:20,870
sequential data into the writer head log

199
00:08:19,190 --> 00:08:23,420
so<font color="#CCCCCC"> you see a</font><font color="#E5E5E5"> whole lot of writing and</font>

200
00:08:20,870 --> 00:08:25,190
<font color="#E5E5E5">syncing going on in these in these</font><font color="#CCCCCC"> war</font>

201
00:08:23,420 --> 00:08:27,200
files<font color="#E5E5E5"> but not on the actual data files</font>

202
00:08:25,190 --> 00:08:28,400
themselves<font color="#E5E5E5"> that represent tables and</font>

203
00:08:27,200 --> 00:08:32,419
this<font color="#E5E5E5"> is one</font><font color="#CCCCCC"> of the tricks that database</font>

204
00:08:28,400 --> 00:08:34,220
<font color="#E5E5E5">is used to go fast and then we have this</font>

205
00:08:32,419 --> 00:08:36,140
<font color="#CCCCCC">checkpointing thing which happens from</font>

206
00:08:34,220 --> 00:08:37,640
time to time<font color="#CCCCCC"> where data gets flushed out</font>

207
00:08:36,140 --> 00:08:39,319
and<font color="#E5E5E5"> written to disk and that's where</font>

208
00:08:37,640 --> 00:08:40,400
things get<font color="#CCCCCC"> F synced I mention all</font><font color="#E5E5E5"> this</font>

209
00:08:39,320 --> 00:08:41,450
because I'm<font color="#E5E5E5"> going to be going to be</font>

210
00:08:40,400 --> 00:08:43,280
talking<font color="#CCCCCC"> about some of</font><font color="#E5E5E5"> these individual</font>

211
00:08:41,450 --> 00:08:44,600
<font color="#CCCCCC">points a bit later</font><font color="#E5E5E5"> I just wanted to give</font>

212
00:08:43,280 --> 00:08:48,829
a<font color="#E5E5E5"> very</font><font color="#CCCCCC"> quick overview of how that</font><font color="#E5E5E5"> looks</font>

213
00:08:44,600 --> 00:08:50,090
to the<font color="#E5E5E5"> operating system okay so kid</font>

214
00:08:48,830 --> 00:08:53,600
<font color="#CCCCCC">constantine belousov</font>

215
00:08:50,090 --> 00:08:56,600
wrote<font color="#E5E5E5"> the paper a descriptive sort of a</font>

216
00:08:53,600 --> 00:08:59,840
report<font color="#CCCCCC"> on a bunch of work that he did</font><font color="#E5E5E5"> in</font>

217
00:08:56,600 --> 00:09:02,450
2014<font color="#E5E5E5"> when it</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> reported that Postgres</font>

218
00:08:59,840 --> 00:09:04,370
was running really slowly on<font color="#E5E5E5"> big</font><font color="#CCCCCC"> freebsd</font>

219
00:09:02,450 --> 00:09:05,480
systems and that's a<font color="#E5E5E5"> really</font><font color="#CCCCCC"> interesting</font>

220
00:09:04,370 --> 00:09:07,640
thing<font color="#E5E5E5"> to read and</font><font color="#CCCCCC"> that's one of</font><font color="#E5E5E5"> the</font>

221
00:09:05,480 --> 00:09:08,450
first<font color="#E5E5E5"> things I read when I started using</font>

222
00:09:07,640 --> 00:09:11,780
<font color="#E5E5E5">fricassee</font>

223
00:09:08,450 --> 00:09:14,630
for my daily development<font color="#CCCCCC"> the main story</font>

224
00:09:11,780 --> 00:09:16,790
there was that<font color="#E5E5E5"> in Postgres 9.3 we</font>

225
00:09:14,630 --> 00:09:18,400
stopped using one gigantic<font color="#E5E5E5"> system</font><font color="#CCCCCC"> five</font>

226
00:09:16,790 --> 00:09:21,530
shared memory<font color="#E5E5E5"> region and started using</font>

227
00:09:18,400 --> 00:09:23,600
an inherited anonymous shared<font color="#CCCCCC"> m-matt</font>

228
00:09:21,530 --> 00:09:25,060
region<font color="#E5E5E5"> and for some reason that took a</font>

229
00:09:23,600 --> 00:09:27,440
while<font color="#CCCCCC"> for people</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> figure out</font>

230
00:09:25,060 --> 00:09:29,930
performance just<font color="#E5E5E5"> completely tanked and</font>

231
00:09:27,440 --> 00:09:35,000
it turned out<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> because that</font><font color="#E5E5E5"> there's</font>

232
00:09:29,930 --> 00:09:37,339
this<font color="#E5E5E5"> sis CTL where you can tell it to</font>

233
00:09:35,000 --> 00:09:39,020
use<font color="#E5E5E5"> physical memory for system</font><font color="#CCCCCC"> five</font>

234
00:09:37,340 --> 00:09:40,520
shared memory which turns off a whole

235
00:09:39,020 --> 00:09:42,110
<font color="#E5E5E5">bunch of which turns off</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> ability</font><font color="#CCCCCC"> to</font>

236
00:09:40,520 --> 00:09:44,600
swap it out it<font color="#E5E5E5"> becomes physical memory</font>

237
00:09:42,110 --> 00:09:46,760
<font color="#E5E5E5">and for reasons that I</font><font color="#CCCCCC"> don't personally</font>

238
00:09:44,600 --> 00:09:51,290
understand very<font color="#CCCCCC"> well because they've</font>

239
00:09:46,760 --> 00:09:53,450
mostly been fixed<font color="#CCCCCC"> now if you didn't use</font>

240
00:09:51,290 --> 00:09:55,520
this option<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you get all these PV</font>

241
00:09:53,450 --> 00:09:57,260
entries<font color="#CCCCCC"> and</font><font color="#E5E5E5"> apparently</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> lot of</font>

242
00:09:55,520 --> 00:10:02,120
contention on those so systems that had

243
00:09:57,260 --> 00:10:03,680
lots of<font color="#CCCCCC"> cores</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> were</font><font color="#E5E5E5"> very busy would</font>

244
00:10:02,120 --> 00:10:05,630
contend and things<font color="#E5E5E5"> would go very slowly</font>

245
00:10:03,680 --> 00:10:07,489
<font color="#E5E5E5">so lots of funds have been lots of</font>

246
00:10:05,630 --> 00:10:09,320
improvements have<font color="#CCCCCC"> you made since then to</font>

247
00:10:07,490 --> 00:10:10,370
improve those problems and<font color="#E5E5E5"> I haven't</font>

248
00:10:09,320 --> 00:10:13,490
quite figured out<font color="#E5E5E5"> whether they've been</font>

249
00:10:10,370 --> 00:10:15,920
entirely<font color="#E5E5E5"> fixed or not</font><font color="#CCCCCC"> I tried to do some</font>

250
00:10:13,490 --> 00:10:18,260
testing<font color="#E5E5E5"> and I found that it was still</font>

251
00:10:15,920 --> 00:10:20,810
<font color="#CCCCCC">possible if you tell</font><font color="#E5E5E5"> Postgres to use the</font>

252
00:10:18,260 --> 00:10:23,330
old system<font color="#CCCCCC"> 5 shared memory region you</font>

253
00:10:20,810 --> 00:10:25,640
can<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that there's a</font><font color="#E5E5E5"> light blue line</font>

254
00:10:23,330 --> 00:10:28,580
there<font color="#E5E5E5"> which corresponds to using system</font>

255
00:10:25,640 --> 00:10:29,990
<font color="#E5E5E5">5 shared memory and using this</font><font color="#CCCCCC"> sissie</font><font color="#E5E5E5"> TL</font>

256
00:10:28,580 --> 00:10:32,720
to tell it to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> physical memory for</font>

257
00:10:29,990 --> 00:10:36,380
<font color="#E5E5E5">that so it can't</font><font color="#CCCCCC"> be can't be paged out I</font>

258
00:10:32,720 --> 00:10:42,020
could get<font color="#E5E5E5"> it to go on</font><font color="#CCCCCC"> a this</font><font color="#E5E5E5"> is on a 40</font>

259
00:10:36,380 --> 00:10:44,510
CPU<font color="#E5E5E5"> Amazon image</font><font color="#CCCCCC"> m4 x10 large you could</font>

260
00:10:42,020 --> 00:10:46,189
<font color="#E5E5E5">see that I could get it a little bit</font>

261
00:10:44,510 --> 00:10:47,450
more what<font color="#E5E5E5"> is that like</font><font color="#CCCCCC"> 5% more</font><font color="#E5E5E5"> or</font>

262
00:10:46,190 --> 00:10:49,400
something<font color="#E5E5E5"> performance out of the system</font>

263
00:10:47,450 --> 00:10:51,650
<font color="#CCCCCC">I think that's kind of interesting I</font>

264
00:10:49,400 --> 00:10:54,050
haven't I need to do a bit more<font color="#CCCCCC"> digging</font>

265
00:10:51,650 --> 00:10:56,930
and find out<font color="#E5E5E5"> find out if that</font><font color="#CCCCCC"> was you</font>

266
00:10:54,050 --> 00:10:58,219
know a real phenomenon<font color="#E5E5E5"> or not so for</font>

267
00:10:56,930 --> 00:11:02,140
<font color="#CCCCCC">that reason I'm actually</font><font color="#E5E5E5"> we're actually</font>

268
00:10:58,220 --> 00:11:04,580
going to<font color="#E5E5E5"> put the ability to put system</font><font color="#CCCCCC"> 5</font>

269
00:11:02,140 --> 00:11:06,260
<font color="#E5E5E5">shared memory back into</font><font color="#CCCCCC"> Postgres we took</font>

270
00:11:04,580 --> 00:11:08,270
it out<font color="#CCCCCC"> in 9.3</font><font color="#E5E5E5"> I think we're</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> put</font>

271
00:11:06,260 --> 00:11:09,530
it<font color="#E5E5E5"> back in quite soon because it seems</font>

272
00:11:08,270 --> 00:11:11,569
<font color="#E5E5E5">that there's something still here</font>

273
00:11:09,530 --> 00:11:12,890
we should probably dig into<font color="#CCCCCC"> freebsd and</font>

274
00:11:11,570 --> 00:11:19,100
fighter as well and find out if that can

275
00:11:12,890 --> 00:11:21,650
be<font color="#E5E5E5"> fixed</font><font color="#CCCCCC"> ok so the first</font><font color="#E5E5E5"> thing that</font><font color="#CCCCCC"> i</font>

276
00:11:19,100 --> 00:11:22,279
tried<font color="#E5E5E5"> to do when</font><font color="#CCCCCC"> i first when</font><font color="#E5E5E5"> i was</font>

277
00:11:21,650 --> 00:11:24,230
looking<font color="#CCCCCC"> for things</font>

278
00:11:22,279 --> 00:11:26,089
do<font color="#E5E5E5"> and on on</font><font color="#CCCCCC"> FreeBSD that would make</font>

279
00:11:24,230 --> 00:11:28,939
<font color="#CCCCCC">Postgres work better there was no</font><font color="#E5E5E5"> F Data</font>

280
00:11:26,089 --> 00:11:30,439
Sync<font color="#E5E5E5"> and I tried to get this working and</font>

281
00:11:28,939 --> 00:11:32,449
<font color="#CCCCCC">I was had something what's working for</font>

282
00:11:30,439 --> 00:11:34,969
you<font color="#E5E5E5"> FS this is if they distinct means</font>

283
00:11:32,449 --> 00:11:37,310
<font color="#E5E5E5">flush the written data but not the file</font>

284
00:11:34,970 --> 00:11:38,240
metadata<font color="#E5E5E5"> so things like modified time</font>

285
00:11:37,310 --> 00:11:40,248
and so on

286
00:11:38,240 --> 00:11:41,990
which if you're writing a whole bunch of

287
00:11:40,249 --> 00:11:44,499
stuff to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> right ahead log and and</font>

288
00:11:41,990 --> 00:11:46,999
calling F<font color="#CCCCCC"> Data Sync</font><font color="#E5E5E5"> if they leasing</font>

289
00:11:44,499 --> 00:11:48,620
requires one random i/o instead of<font color="#E5E5E5"> two</font>

290
00:11:46,999 --> 00:11:49,699
<font color="#E5E5E5">because you don't have to you know go</font>

291
00:11:48,620 --> 00:11:52,399
and<font color="#E5E5E5"> change the</font><font color="#CCCCCC"> motor flight time and so</font>

292
00:11:49,699 --> 00:11:55,459
<font color="#E5E5E5">on and I was I had something kind</font><font color="#CCCCCC"> of</font>

293
00:11:52,399 --> 00:12:00,949
working but one day I updated my<font color="#E5E5E5"> source</font>

294
00:11:55,459 --> 00:12:03,199
<font color="#E5E5E5">tree and</font><font color="#CCCCCC"> curved music and others head</font>

295
00:12:00,949 --> 00:12:04,819
suddenly implemented that<font color="#E5E5E5"> and there it</font>

296
00:12:03,199 --> 00:12:06,079
was and it<font color="#CCCCCC"> was working so and that was</font>

297
00:12:04,819 --> 00:12:09,469
probably<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit too hard to start</font>

298
00:12:06,079 --> 00:12:12,378
with anyway probably<font color="#E5E5E5"> modifying the</font>

299
00:12:09,470 --> 00:12:15,980
<font color="#CCCCCC">fascism is probably not a good first</font>

300
00:12:12,379 --> 00:12:17,329
project<font color="#E5E5E5"> for learning kernel hacking</font><font color="#CCCCCC"> but</font>

301
00:12:15,980 --> 00:12:20,509
that's something<font color="#E5E5E5"> that came along in</font>

302
00:12:17,329 --> 00:12:24,649
<font color="#CCCCCC">freebsd</font><font color="#E5E5E5"> 11 and made Postgres faster on</font>

303
00:12:20,509 --> 00:12:27,439
<font color="#E5E5E5">you FS at committing transactions which</font>

304
00:12:24,649 --> 00:12:32,480
was good<font color="#CCCCCC"> so then the next thing i tried</font>

305
00:12:27,439 --> 00:12:33,920
<font color="#E5E5E5">to improve was set prop titles so one</font><font color="#CCCCCC"> of</font>

306
00:12:32,480 --> 00:12:37,639
the things that kid wrote<font color="#E5E5E5"> about and that</font>

307
00:12:33,920 --> 00:12:41,899
report was if you look at<font color="#CCCCCC"> Postgres in</font>

308
00:12:37,639 --> 00:12:43,430
top or in you<font color="#E5E5E5"> know any</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> age top or</font>

309
00:12:41,899 --> 00:12:47,540
anything<font color="#E5E5E5"> that shows the process titles</font>

310
00:12:43,430 --> 00:12:48,829
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can see see the words update and</font>

311
00:12:47,540 --> 00:12:50,209
select<font color="#CCCCCC"> there you can see what</font><font color="#E5E5E5"> each</font>

312
00:12:48,829 --> 00:12:53,300
process<font color="#CCCCCC"> is doing and it's got these</font>

313
00:12:50,209 --> 00:12:55,099
little<font color="#E5E5E5"> tags that it shows there but if</font>

314
00:12:53,300 --> 00:12:56,599
you're doing<font color="#E5E5E5"> loads and loads of</font><font color="#CCCCCC"> super</font>

315
00:12:55,100 --> 00:12:58,639
<font color="#CCCCCC">fast transactions it turns out we call</font>

316
00:12:56,600 --> 00:12:59,779
that you<font color="#E5E5E5"> know possibly tens of thousands</font>

317
00:12:58,639 --> 00:13:01,250
<font color="#CCCCCC">or hundreds of thousands</font><font color="#E5E5E5"> of times</font><font color="#CCCCCC"> per</font>

318
00:12:59,779 --> 00:13:04,040
second or even<font color="#E5E5E5"> a million times per</font>

319
00:13:01,250 --> 00:13:05,959
second on some<font color="#E5E5E5"> systems and turned out</font>

320
00:13:04,040 --> 00:13:08,300
that<font color="#E5E5E5"> freebsd was the only system that</font>

321
00:13:05,959 --> 00:13:09,349
was using system calls to do that every

322
00:13:08,300 --> 00:13:11,740
<font color="#CCCCCC">other operating system</font><font color="#E5E5E5"> that I looked at</font>

323
00:13:09,350 --> 00:13:14,149
including the<font color="#E5E5E5"> other BS DS and then Linux</font>

324
00:13:11,740 --> 00:13:15,319
<font color="#CCCCCC">just had a piece</font><font color="#E5E5E5"> of memory and you can</font>

325
00:13:14,149 --> 00:13:17,360
update the<font color="#CCCCCC"> processor</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> by writing</font>

326
00:13:15,319 --> 00:13:18,679
into that memory<font color="#CCCCCC"> so I thought well that</font>

327
00:13:17,360 --> 00:13:20,629
looks like<font color="#E5E5E5"> something I could handle so I</font>

328
00:13:18,679 --> 00:13:22,370
dug into that<font color="#CCCCCC"> a bit and I</font><font color="#E5E5E5"> found that</font>

329
00:13:20,629 --> 00:13:24,740
actually<font color="#E5E5E5"> the code to do it that</font><font color="#CCCCCC"> way was</font>

330
00:13:22,370 --> 00:13:26,329
still there in<font color="#CCCCCC"> FreeBSD at some point</font>

331
00:13:24,740 --> 00:13:28,370
somebody<font color="#E5E5E5"> had added the system call type</font>

332
00:13:26,329 --> 00:13:30,439
<font color="#E5E5E5">interface which has</font><font color="#CCCCCC"> some advantages and</font>

333
00:13:28,370 --> 00:13:31,670
<font color="#E5E5E5">some disadvantages but it didn't work so</font>

334
00:13:30,439 --> 00:13:36,020
well<font color="#E5E5E5"> when you call</font><font color="#CCCCCC"> it a million</font><font color="#E5E5E5"> times a</font>

335
00:13:31,670 --> 00:13:39,199
second or<font color="#CCCCCC"> 100,000</font><font color="#E5E5E5"> times a second so</font><font color="#CCCCCC"> I</font>

336
00:13:36,020 --> 00:13:40,939
introduced a new mode<font color="#CCCCCC"> that would do it</font>

337
00:13:39,200 --> 00:13:42,290
the old way<font color="#E5E5E5"> just update some some piece</font>

338
00:13:40,940 --> 00:13:43,880
<font color="#E5E5E5">of memory and that has some different</font>

339
00:13:42,290 --> 00:13:46,490
problems like in theory<font color="#E5E5E5"> you could see a</font>

340
00:13:43,880 --> 00:13:47,840
torn torn version<font color="#E5E5E5"> half one string and</font>

341
00:13:46,490 --> 00:13:50,150
half the<font color="#E5E5E5"> other string that never really</font>

342
00:13:47,840 --> 00:13:51,290
happens<font color="#CCCCCC"> I mean you don't normally</font><font color="#E5E5E5"> write</font>

343
00:13:50,150 --> 00:13:55,100
messages that are bigger<font color="#E5E5E5"> than a cache</font>

344
00:13:51,290 --> 00:13:56,719
line or<font color="#E5E5E5"> anything anyway so</font><font color="#CCCCCC"> kid convinced</font>

345
00:13:55,100 --> 00:13:58,610
me<font color="#CCCCCC"> to give it a different name so you've</font>

346
00:13:56,720 --> 00:14:02,620
got set<font color="#E5E5E5"> proc title and just</font><font color="#CCCCCC"> go fast and</font>

347
00:13:58,610 --> 00:14:05,900
the result of<font color="#E5E5E5"> that was</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> on a 40 core</font>

348
00:14:02,620 --> 00:14:07,310
machine<font color="#E5E5E5"> I could get</font><font color="#CCCCCC"> 10% more</font>

349
00:14:05,900 --> 00:14:09,470
transactions per second which I was

350
00:14:07,310 --> 00:14:11,660
pretty pleased with for a very<font color="#CCCCCC"> small</font>

351
00:14:09,470 --> 00:14:15,260
patch and<font color="#E5E5E5"> that was the first thing I got</font>

352
00:14:11,660 --> 00:14:16,939
into<font color="#CCCCCC"> FreeBSD I think there's a question</font>

353
00:14:15,260 --> 00:14:18,410
of whether we<font color="#E5E5E5"> should just only have that</font>

354
00:14:16,940 --> 00:14:20,000
kind of<font color="#E5E5E5"> set proper title like do we</font>

355
00:14:18,410 --> 00:14:22,069
<font color="#E5E5E5">really need the other one</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> know</font>

356
00:14:20,000 --> 00:14:31,340
but I'm new here I'm not<font color="#E5E5E5"> gonna argue</font>

357
00:14:22,070 --> 00:14:32,270
that<font color="#E5E5E5"> mmm well well it's it's I think</font>

358
00:14:31,340 --> 00:14:34,100
it's nice to go<font color="#E5E5E5"> to see what the system</font>

359
00:14:32,270 --> 00:14:36,770
<font color="#CCCCCC">is doing</font><font color="#E5E5E5"> you don't need to and you can</font>

360
00:14:34,100 --> 00:14:41,330
turn<font color="#E5E5E5"> that off and in fact the Postgres</font>

361
00:14:36,770 --> 00:14:42,740
port<font color="#CCCCCC"> turns it off by default</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

362
00:14:41,330 --> 00:14:44,270
that makes the<font color="#CCCCCC"> experience not quite as</font>

363
00:14:42,740 --> 00:14:46,070
nice as using it<font color="#E5E5E5"> on other operating</font>

364
00:14:44,270 --> 00:14:48,199
systems so that's<font color="#E5E5E5"> why I wanted to fix it</font>

365
00:14:46,070 --> 00:14:50,600
it's a very nice simple<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to see what</font>

366
00:14:48,200 --> 00:14:53,270
the system<font color="#CCCCCC"> is doing</font><font color="#E5E5E5"> I like it so if I</font>

367
00:14:50,600 --> 00:14:58,040
<font color="#E5E5E5">don't like to turn it off so yeah</font><font color="#CCCCCC"> okay</font>

368
00:14:53,270 --> 00:15:01,100
so the next<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> I worked</font><font color="#E5E5E5"> on was so on</font>

369
00:14:58,040 --> 00:15:03,550
<font color="#CCCCCC">Eric's originally they were the first</font><font color="#E5E5E5"> to</font>

370
00:15:01,100 --> 00:15:05,720
do<font color="#CCCCCC"> this there's a way</font><font color="#E5E5E5"> to ask for a</font>

371
00:15:03,550 --> 00:15:07,339
signal when your parent dies of course

372
00:15:05,720 --> 00:15:11,570
normally<font color="#E5E5E5"> in on a UNIX system you can get</font>

373
00:15:07,340 --> 00:15:12,890
a signal<font color="#CCCCCC"> when a child dies</font><font color="#E5E5E5"> but in</font>

374
00:15:11,570 --> 00:15:14,630
traditional<font color="#CCCCCC"> UNIX systems there was never</font>

375
00:15:12,890 --> 00:15:16,220
a signal when your parent dies<font color="#CCCCCC"> I don't</font>

376
00:15:14,630 --> 00:15:19,010
<font color="#CCCCCC">know why it seems incredibly useful to</font>

377
00:15:16,220 --> 00:15:23,740
me but the<font color="#CCCCCC"> irx</font><font color="#E5E5E5"> people did that and then</font>

378
00:15:19,010 --> 00:15:25,850
the the<font color="#CCCCCC"> Linux guys copied that</font><font color="#E5E5E5"> so I</font>

379
00:15:23,740 --> 00:15:28,660
didn't<font color="#E5E5E5"> just</font><font color="#CCCCCC"> copy</font><font color="#E5E5E5"> this from Linux I</font>

380
00:15:25,850 --> 00:15:33,040
copied it<font color="#E5E5E5"> from iris</font>

381
00:15:28,660 --> 00:15:35,290
that's what I'm trying to say<font color="#CCCCCC"> so this</font>

382
00:15:33,040 --> 00:15:38,349
was useful<font color="#E5E5E5"> because I mentioned that we</font>

383
00:15:35,290 --> 00:15:40,510
have this this pipe<font color="#E5E5E5"> between every child</font>

384
00:15:38,350 --> 00:15:42,640
process and the postmaster the parent of

385
00:15:40,510 --> 00:15:43,930
<font color="#CCCCCC">all</font><font color="#E5E5E5"> these processes because we want the</font>

386
00:15:42,640 --> 00:15:45,880
<font color="#CCCCCC">whole system to</font><font color="#E5E5E5"> shut</font><font color="#CCCCCC"> down cleanly if</font>

387
00:15:43,930 --> 00:15:49,000
somehow<font color="#CCCCCC"> that something bad happens to</font>

388
00:15:45,880 --> 00:15:51,610
<font color="#E5E5E5">the to the parent process and that means</font>

389
00:15:49,000 --> 00:15:55,300
that<font color="#E5E5E5"> we any time we're doing any</font><font color="#CCCCCC"> waiting</font>

390
00:15:51,610 --> 00:15:58,390
we we with like<font color="#E5E5E5"> Paul</font><font color="#CCCCCC"> or select or</font>

391
00:15:55,300 --> 00:15:59,859
whatever we<font color="#E5E5E5"> have that</font><font color="#CCCCCC"> pipe there but it</font>

392
00:15:58,390 --> 00:16:01,810
also<font color="#E5E5E5"> means if we're doing some some kind</font>

393
00:15:59,860 --> 00:16:07,660
<font color="#E5E5E5">of busy loop and this happens mostly</font>

394
00:16:01,810 --> 00:16:09,609
when you've got a replication<font color="#E5E5E5"> streaming</font>

395
00:16:07,660 --> 00:16:11,680
<font color="#CCCCCC">replicator</font><font color="#E5E5E5"> which is just slavishly</font>

396
00:16:09,610 --> 00:16:13,450
following along<font color="#CCCCCC"> applying everything</font>

397
00:16:11,680 --> 00:16:15,219
<font color="#E5E5E5">that's happening on the master</font><font color="#CCCCCC"> server</font>

398
00:16:13,450 --> 00:16:18,280
that's<font color="#E5E5E5"> like like that can be</font><font color="#CCCCCC"> a really</font>

399
00:16:15,220 --> 00:16:20,380
busy loop and if you're never waiting

400
00:16:18,280 --> 00:16:22,240
there's no efficient way to find<font color="#CCCCCC"> out if</font>

401
00:16:20,380 --> 00:16:23,380
the parent has<font color="#E5E5E5"> died so we finished up</font>

402
00:16:22,240 --> 00:16:24,970
putting<font color="#E5E5E5"> this thing where we were track</font>

403
00:16:23,380 --> 00:16:27,340
we<font color="#E5E5E5"> will try and read one byte from there</font>

404
00:16:24,970 --> 00:16:29,800
from<font color="#E5E5E5"> this pipe from the parent process</font>

405
00:16:27,340 --> 00:16:31,300
<font color="#E5E5E5">every</font><font color="#CCCCCC"> time through a busy loop which</font>

406
00:16:29,800 --> 00:16:34,089
turns<font color="#E5E5E5"> out</font><font color="#CCCCCC"> to really suck</font>

407
00:16:31,300 --> 00:16:35,620
so I mean<font color="#E5E5E5"> performance wise somebody</font>

408
00:16:34,090 --> 00:16:37,420
figured out that was that<font color="#E5E5E5"> that some</font>

409
00:16:35,620 --> 00:16:38,710
<font color="#E5E5E5">ripple streaming replica servers were</font>

410
00:16:37,420 --> 00:16:39,790
spending up<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 20</font><font color="#E5E5E5"> percent</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> their time</font>

411
00:16:38,710 --> 00:16:43,480
<font color="#E5E5E5">doing that which is completely insane</font>

412
00:16:39,790 --> 00:16:46,870
<font color="#CCCCCC">and so we got on</font><font color="#E5E5E5"> Linux first of all we</font>

413
00:16:43,480 --> 00:16:48,040
used set<font color="#CCCCCC"> P death sig to get a signal</font>

414
00:16:46,870 --> 00:16:49,030
<font color="#CCCCCC">instead we just</font><font color="#E5E5E5"> don't need to do that if</font>

415
00:16:48,040 --> 00:16:52,180
you can<font color="#E5E5E5"> get a signal instead you just</font>

416
00:16:49,030 --> 00:16:54,189
<font color="#E5E5E5">never need</font><font color="#CCCCCC"> to pull this pipe all the</font>

417
00:16:52,180 --> 00:16:57,430
<font color="#E5E5E5">time so that seemed like</font><font color="#CCCCCC"> a reasonable</font>

418
00:16:54,190 --> 00:16:58,600
thing<font color="#E5E5E5"> to try and do in FreeBSD and it</font>

419
00:16:57,430 --> 00:17:00,880
was relatively<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> I mean it's just a</font>

420
00:16:58,600 --> 00:17:02,800
<font color="#CCCCCC">matter of recording in the proc</font><font color="#E5E5E5"> stripes</font>

421
00:17:00,880 --> 00:17:06,130
<font color="#E5E5E5">then you would like</font><font color="#CCCCCC"> a signal and</font>

422
00:17:02,800 --> 00:17:07,510
whenever<font color="#E5E5E5"> a process is exits anyway you</font>

423
00:17:06,130 --> 00:17:10,390
always have<font color="#CCCCCC"> to scan</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> all the</font>

424
00:17:07,510 --> 00:17:11,709
<font color="#E5E5E5">children to reparent them right so there</font>

425
00:17:10,390 --> 00:17:13,120
was already a loop there so I just<font color="#CCCCCC"> had</font>

426
00:17:11,709 --> 00:17:14,020
<font color="#E5E5E5">to make it deliver a signal if you asked</font>

427
00:17:13,119 --> 00:17:17,290
one so that was<font color="#E5E5E5"> a relatively simple</font>

428
00:17:14,020 --> 00:17:22,389
piece of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> and that made recovery and</font>

429
00:17:17,290 --> 00:17:25,810
replication immeasurably faster<font color="#E5E5E5"> cool</font><font color="#CCCCCC"> a</font>

430
00:17:22,390 --> 00:17:27,459
<font color="#E5E5E5">lesson previously</font><font color="#CCCCCC"> twelve</font><font color="#E5E5E5"> another thing</font>

431
00:17:25,810 --> 00:17:30,879
<font color="#CCCCCC">that was fixed</font><font color="#E5E5E5"> recently</font><font color="#CCCCCC"> not not by me</font>

432
00:17:27,459 --> 00:17:35,350
<font color="#CCCCCC">but this was a long-standing</font><font color="#E5E5E5"> problem in</font>

433
00:17:30,880 --> 00:17:36,760
<font color="#CCCCCC">FreeBSD jails was that um system five</font>

434
00:17:35,350 --> 00:17:38,889
<font color="#CCCCCC">shared memory wasn't jailed properly</font>

435
00:17:36,760 --> 00:17:41,320
which I found kind<font color="#E5E5E5"> of scary and strange</font>

436
00:17:38,890 --> 00:17:42,100
I mean<font color="#E5E5E5"> how it was like that for years</font>

437
00:17:41,320 --> 00:17:45,399
apparently until

438
00:17:42,100 --> 00:17:48,189
previously<font color="#CCCCCC"> 11 so</font><font color="#E5E5E5"> you had to if you</font><font color="#CCCCCC"> were</font>

439
00:17:45,400 --> 00:17:50,110
running<font color="#E5E5E5"> multiple</font><font color="#CCCCCC"> Postgres servers in</font>

440
00:17:48,190 --> 00:17:51,340
different jails<font color="#CCCCCC"> you had to do some</font>

441
00:17:50,110 --> 00:17:52,540
<font color="#E5E5E5">strange tricks like it to make sure they</font>

442
00:17:51,340 --> 00:17:57,090
were using<font color="#CCCCCC"> different ports or different</font>

443
00:17:52,540 --> 00:17:59,530
uses<font color="#E5E5E5"> because the user UID and</font><font color="#CCCCCC"> the port</font>

444
00:17:57,090 --> 00:18:00,459
appeared in shared memory in a place<font color="#E5E5E5"> and</font>

445
00:17:59,530 --> 00:18:02,379
they could see<font color="#E5E5E5"> each</font><font color="#CCCCCC"> other's shared</font>

446
00:18:00,460 --> 00:18:03,970
memory which is<font color="#E5E5E5"> like not what jails are</font>

447
00:18:02,380 --> 00:18:05,980
supposed<font color="#CCCCCC"> to do right so</font><font color="#E5E5E5"> that was fixed</font>

448
00:18:03,970 --> 00:18:08,320
<font color="#E5E5E5">and so that was a good thing</font><font color="#CCCCCC"> and</font>

449
00:18:05,980 --> 00:18:09,640
probably probably<font color="#E5E5E5"> probably has good</font>

450
00:18:08,320 --> 00:18:13,720
security implications for<font color="#E5E5E5"> other software</font>

451
00:18:09,640 --> 00:18:17,350
as well<font color="#CCCCCC"> but I don't know</font><font color="#E5E5E5"> another</font>

452
00:18:13,720 --> 00:18:20,770
improvement in a recent<font color="#CCCCCC"> version of</font>

453
00:18:17,350 --> 00:18:25,389
<font color="#E5E5E5">Postgres we we switched to using a</font><font color="#CCCCCC"> poll</font>

454
00:18:20,770 --> 00:18:27,850
on<font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> and so that should</font><font color="#E5E5E5"> imply that</font>

455
00:18:25,390 --> 00:18:32,200
<font color="#E5E5E5">we should be using KQ on</font><font color="#CCCCCC"> FreeBSD and so</font>

456
00:18:27,850 --> 00:18:35,649
on so I wrote a patch to actually get

457
00:18:32,200 --> 00:18:37,780
<font color="#E5E5E5">Postgres to use K Q and K event to wait</font>

458
00:18:35,650 --> 00:18:40,390
for things to<font color="#CCCCCC"> happen because quite often</font>

459
00:18:37,780 --> 00:18:42,790
we're waiting on<font color="#E5E5E5"> three three</font><font color="#CCCCCC"> FDS who are</font>

460
00:18:40,390 --> 00:18:44,560
<font color="#E5E5E5">waiting on a like waiting for</font><font color="#CCCCCC"> the client</font>

461
00:18:42,790 --> 00:18:46,810
to<font color="#E5E5E5"> send us a query we're also</font><font color="#CCCCCC"> waiting on</font>

462
00:18:44,560 --> 00:18:48,639
<font color="#E5E5E5">that that pipe that tells us if the</font>

463
00:18:46,810 --> 00:18:50,500
parent process<font color="#E5E5E5"> has died and we also have</font>

464
00:18:48,640 --> 00:18:52,180
a self pipe that we need to deal with

465
00:18:50,500 --> 00:18:53,680
<font color="#E5E5E5">signals coming in so we're quite</font><font color="#CCCCCC"> have</font>

466
00:18:52,180 --> 00:18:54,580
<font color="#CCCCCC">been waiting for three file descriptors</font>

467
00:18:53,680 --> 00:18:56,980
and<font color="#E5E5E5"> if you're doing</font><font color="#CCCCCC"> though over time</font>

468
00:18:54,580 --> 00:19:00,040
with Paul you need to<font color="#E5E5E5"> acquire locks on</font>

469
00:18:56,980 --> 00:19:02,350
<font color="#E5E5E5">all those files on</font><font color="#CCCCCC"> all those objects</font><font color="#E5E5E5"> and</font>

470
00:19:00,040 --> 00:19:05,620
in the<font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> so it stands to reason</font>

471
00:19:02,350 --> 00:19:06,820
<font color="#E5E5E5">that if</font><font color="#CCCCCC"> you had</font><font color="#E5E5E5"> your own</font><font color="#CCCCCC"> KQ file</font>

472
00:19:05,620 --> 00:19:09,040
descriptor<font color="#E5E5E5"> it should be much more</font>

473
00:19:06,820 --> 00:19:11,050
efficient<font color="#CCCCCC"> right and I found that it was</font>

474
00:19:09,040 --> 00:19:14,379
much<font color="#E5E5E5"> faster</font><font color="#CCCCCC"> in some cases but in some</font>

475
00:19:11,050 --> 00:19:16,090
cases it<font color="#E5E5E5"> was slower and furthermore net</font>

476
00:19:14,380 --> 00:19:19,240
<font color="#CCCCCC">BST users reported that</font><font color="#E5E5E5"> was terribly</font>

477
00:19:16,090 --> 00:19:20,470
<font color="#E5E5E5">like it was much slower and I don't</font><font color="#CCCCCC"> I</font>

478
00:19:19,240 --> 00:19:22,450
don't<font color="#E5E5E5"> know anything</font><font color="#CCCCCC"> about net BST so I</font>

479
00:19:20,470 --> 00:19:24,070
and I didn't try<font color="#E5E5E5"> to analyze that myself</font>

480
00:19:22,450 --> 00:19:26,740
<font color="#E5E5E5">then I thought well if we if</font><font color="#CCCCCC"> we just</font>

481
00:19:24,070 --> 00:19:28,780
<font color="#E5E5E5">have this patch in in Postgres that uses</font>

482
00:19:26,740 --> 00:19:30,580
KQ we don't we could<font color="#E5E5E5"> disable if a net</font>

483
00:19:28,780 --> 00:19:32,830
BST until that can be fixed<font color="#E5E5E5"> and just</font><font color="#CCCCCC"> use</font>

484
00:19:30,580 --> 00:19:34,570
it<font color="#CCCCCC"> on freebsd or something like that it</font>

485
00:19:32,830 --> 00:19:36,820
also goes a lot faster on<font color="#CCCCCC"> mackintoshes</font>

486
00:19:34,570 --> 00:19:38,530
not that anyone runs database servers on

487
00:19:36,820 --> 00:19:40,240
<font color="#E5E5E5">back</font><font color="#CCCCCC"> in Taj's but it was</font><font color="#E5E5E5"> interesting to</font>

488
00:19:38,530 --> 00:19:42,250
have<font color="#E5E5E5"> another implementation of KQ and</font>

489
00:19:40,240 --> 00:19:47,310
see that it went better but<font color="#E5E5E5"> for some</font>

490
00:19:42,250 --> 00:19:49,600
<font color="#E5E5E5">reason some workloads became slower on</font>

491
00:19:47,310 --> 00:19:51,520
<font color="#E5E5E5">freebsd</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we still need to figure</font><font color="#CCCCCC"> out</font>

492
00:19:49,600 --> 00:19:54,250
why exactly<font color="#E5E5E5"> it seems to be something to</font>

493
00:19:51,520 --> 00:19:55,379
do<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> wakeup</font><font color="#E5E5E5"> logic and the</font>

494
00:19:54,250 --> 00:19:56,310
scheduler

495
00:19:55,380 --> 00:19:59,100
we<font color="#E5E5E5"> need to get</font><font color="#CCCCCC"> to the bottom of</font><font color="#E5E5E5"> that</font>

496
00:19:56,310 --> 00:20:00,330
because in most cases it<font color="#E5E5E5"> makes things go</font>

497
00:19:59,100 --> 00:20:04,250
better<font color="#E5E5E5"> so that's something that we</font>

498
00:20:00,330 --> 00:20:08,250
<font color="#E5E5E5">haven't managed to get in there yet okay</font>

499
00:20:04,250 --> 00:20:11,010
another thing which would<font color="#E5E5E5"> be good</font><font color="#CCCCCC"> to</font>

500
00:20:08,250 --> 00:20:13,380
have in<font color="#CCCCCC"> FreeBSD</font><font color="#E5E5E5"> is sync file range</font>

501
00:20:11,010 --> 00:20:15,930
that's<font color="#CCCCCC"> a</font><font color="#E5E5E5"> system call on Linux which is</font>

502
00:20:13,380 --> 00:20:18,660
it's sort<font color="#E5E5E5"> of a hint it's not like</font><font color="#CCCCCC"> eff</font>

503
00:20:15,930 --> 00:20:20,520
sync exactly it's more like please start

504
00:20:18,660 --> 00:20:21,480
writing back this range of the fire well

505
00:20:20,520 --> 00:20:23,400
it's got a few<font color="#CCCCCC"> different modes actually</font>

506
00:20:21,480 --> 00:20:27,180
<font color="#E5E5E5">but the basic feature that we</font><font color="#CCCCCC"> want is</font>

507
00:20:23,400 --> 00:20:28,800
more<font color="#CCCCCC"> fine-grained control over F syncing</font>

508
00:20:27,180 --> 00:20:30,540
because we actually have a pretty<font color="#E5E5E5"> good</font>

509
00:20:28,800 --> 00:20:31,950
<font color="#CCCCCC">idea of</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> our next checkpoint is</font>

510
00:20:30,540 --> 00:20:33,600
coming up and<font color="#CCCCCC"> that we have better</font>

511
00:20:31,950 --> 00:20:35,430
<font color="#E5E5E5">information and the kernel does about</font>

512
00:20:33,600 --> 00:20:38,399
when to<font color="#E5E5E5"> write data back</font><font color="#CCCCCC"> so we'd like to</font>

513
00:20:35,430 --> 00:20:41,340
tell it to<font color="#E5E5E5"> start syncing ranges of a</font>

514
00:20:38,400 --> 00:20:42,690
file that contained early<font color="#E5E5E5"> data</font><font color="#CCCCCC"> that's a</font>

515
00:20:41,340 --> 00:20:45,449
<font color="#E5E5E5">feature that's used by loads of</font>

516
00:20:42,690 --> 00:20:47,340
different<font color="#E5E5E5"> databases so it's not</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> us</font>

517
00:20:45,450 --> 00:20:51,690
it would<font color="#E5E5E5"> be probably</font><font color="#CCCCCC"> quite a good idea</font>

518
00:20:47,340 --> 00:20:54,090
<font color="#E5E5E5">to have that there is a PR for it seems</font>

519
00:20:51,690 --> 00:20:55,440
like it should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> easy but I'm still</font>

520
00:20:54,090 --> 00:21:01,080
slightly frightened of hacking on file

521
00:20:55,440 --> 00:21:02,220
system codes so yeah<font color="#CCCCCC"> something that</font>

522
00:21:01,080 --> 00:21:04,800
happened last<font color="#E5E5E5"> year</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> Postgres</font>

523
00:21:02,220 --> 00:21:07,410
community was what we jokingly referred

524
00:21:04,800 --> 00:21:11,580
to<font color="#E5E5E5"> as</font><font color="#CCCCCC"> eff sync gate somebody</font><font color="#E5E5E5"> figured out</font>

525
00:21:07,410 --> 00:21:17,100
that a very<font color="#E5E5E5"> popular operating system</font>

526
00:21:11,580 --> 00:21:19,350
that isn't<font color="#E5E5E5"> FreeBSD had strange semantics</font>

527
00:21:17,100 --> 00:21:21,449
for<font color="#E5E5E5"> F sync in particularly around error</font>

528
00:21:19,350 --> 00:21:22,919
handling<font color="#E5E5E5"> that as far as I know almost</font>

529
00:21:21,450 --> 00:21:24,570
<font color="#CCCCCC">nobody knew about I mean people</font>

530
00:21:22,920 --> 00:21:29,310
obviously Linux kernel hackers knew

531
00:21:24,570 --> 00:21:32,879
about this<font color="#E5E5E5"> but the most surprising</font><font color="#CCCCCC"> thing</font>

532
00:21:29,310 --> 00:21:35,580
<font color="#CCCCCC">was if you call F sync and it says 'hey</font>

533
00:21:32,880 --> 00:21:38,430
i oh<font color="#E5E5E5"> there</font><font color="#CCCCCC"> was some</font><font color="#E5E5E5"> kind of error in the</font>

534
00:21:35,580 --> 00:21:40,159
<font color="#E5E5E5">Iola it doesn't keep your dirty buffers</font>

535
00:21:38,430 --> 00:21:42,270
around<font color="#E5E5E5"> anymore it just throws them away</font>

536
00:21:40,160 --> 00:21:44,070
<font color="#CCCCCC">which is kind of</font><font color="#E5E5E5"> strange because that</font>

537
00:21:42,270 --> 00:21:47,520
seems<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be as job right and to not do</font>

538
00:21:44,070 --> 00:21:49,889
<font color="#CCCCCC">that so that has the strange consequence</font>

539
00:21:47,520 --> 00:21:52,800
<font color="#CCCCCC">that if you call</font><font color="#E5E5E5"> F sync again on that</font>

540
00:21:49,890 --> 00:21:54,120
<font color="#E5E5E5">operating system it can say okay because</font>

541
00:21:52,800 --> 00:21:57,080
<font color="#E5E5E5">now</font><font color="#CCCCCC"> there are no dirty buffers because</font>

542
00:21:54,120 --> 00:21:57,080
<font color="#E5E5E5">last time</font><font color="#CCCCCC"> it threw them away</font>

543
00:21:57,320 --> 00:22:04,669
so and Postgres<font color="#E5E5E5"> as well well it's not</font>

544
00:22:00,800 --> 00:22:07,909
<font color="#E5E5E5">just Postgres also</font><font color="#CCCCCC"> MySQL and</font><font color="#E5E5E5"> MongoDB and</font>

545
00:22:04,670 --> 00:22:09,410
<font color="#E5E5E5">a bunch of other software</font><font color="#CCCCCC"> that was</font>

546
00:22:07,910 --> 00:22:11,570
<font color="#E5E5E5">trying to be reliable would be prepared</font>

547
00:22:09,410 --> 00:22:13,760
<font color="#E5E5E5">to retry the way that Postgres works it</font>

548
00:22:11,570 --> 00:22:16,189
<font color="#E5E5E5">has these periodic check points and the</font>

549
00:22:13,760 --> 00:22:17,930
check point would fail it would<font color="#E5E5E5"> log lots</font>

550
00:22:16,190 --> 00:22:19,130
of nasty<font color="#E5E5E5"> error messages but the bit</font>

551
00:22:17,930 --> 00:22:20,360
later the next<font color="#E5E5E5"> checkpoint would come</font>

552
00:22:19,130 --> 00:22:21,350
<font color="#CCCCCC">around and maybe after a few seconds</font>

553
00:22:20,360 --> 00:22:23,689
<font color="#E5E5E5">we'll try</font><font color="#CCCCCC"> again or something</font><font color="#E5E5E5"> like that</font>

554
00:22:21,350 --> 00:22:25,010
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then it would say success</font><font color="#CCCCCC"> so if</font>

555
00:22:23,690 --> 00:22:28,040
you're trying<font color="#CCCCCC"> to shut your database down</font>

556
00:22:25,010 --> 00:22:30,110
and when checkpoint succeeds because<font color="#E5E5E5"> it</font>

557
00:22:28,040 --> 00:22:32,330
managed<font color="#CCCCCC"> to F sync all the data</font><font color="#E5E5E5"> it then</font>

558
00:22:30,110 --> 00:22:33,709
throws away the<font color="#E5E5E5"> war the the log that it</font>

559
00:22:32,330 --> 00:22:35,389
could<font color="#E5E5E5"> use to rescue</font><font color="#CCCCCC"> that you know that</font>

560
00:22:33,710 --> 00:22:36,680
it's<font color="#CCCCCC"> throwing away now all copies of</font><font color="#E5E5E5"> the</font>

561
00:22:35,390 --> 00:22:39,410
data you know it's this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a complete</font>

562
00:22:36,680 --> 00:22:41,240
<font color="#CCCCCC">disaster right so one question</font><font color="#E5E5E5"> is are</font>

563
00:22:39,410 --> 00:22:45,440
there<font color="#E5E5E5"> any</font><font color="#CCCCCC"> cases where</font><font color="#E5E5E5"> there's an i/o</font>

564
00:22:41,240 --> 00:22:46,900
error<font color="#E5E5E5"> but then it fixes itself so does</font>

565
00:22:45,440 --> 00:22:49,190
retrying actually make<font color="#E5E5E5"> sense at all</font>

566
00:22:46,900 --> 00:22:51,620
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> kind of an open question probably</font>

567
00:22:49,190 --> 00:22:53,210
probably<font color="#E5E5E5"> for a long time there weren't</font>

568
00:22:51,620 --> 00:22:54,439
such cases<font color="#CCCCCC"> probably when your</font><font color="#E5E5E5"> disk fried</font>

569
00:22:53,210 --> 00:22:56,420
<font color="#E5E5E5">at least back in</font><font color="#CCCCCC"> the old days it</font>

570
00:22:54,440 --> 00:22:57,440
probably didn't<font color="#E5E5E5"> fix itself again that</font>

571
00:22:56,420 --> 00:23:00,140
might have been<font color="#E5E5E5"> unlikely I don't know</font>

572
00:22:57,440 --> 00:23:03,340
<font color="#E5E5E5">but now in the modern</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> we've got all</font>

573
00:23:00,140 --> 00:23:06,410
<font color="#CCCCCC">kinds of thin provisioning and remote</font>

574
00:23:03,340 --> 00:23:09,590
storage systems and there are transient

575
00:23:06,410 --> 00:23:11,750
failures<font color="#E5E5E5"> so this is a real real</font><font color="#CCCCCC"> problem</font>

576
00:23:09,590 --> 00:23:13,459
<font color="#CCCCCC">so we did the only thing we</font><font color="#E5E5E5"> could we</font>

577
00:23:11,750 --> 00:23:14,870
could really do which is if you see any

578
00:23:13,460 --> 00:23:16,190
error from<font color="#E5E5E5"> F</font><font color="#CCCCCC"> Singh you just have to</font>

579
00:23:14,870 --> 00:23:18,290
panic<font color="#E5E5E5"> and just completely shut down</font>

580
00:23:16,190 --> 00:23:20,690
<font color="#E5E5E5">because the whole world is insane after</font>

581
00:23:18,290 --> 00:23:21,530
<font color="#E5E5E5">that point we don't we have no way</font><font color="#CCCCCC"> to</font>

582
00:23:20,690 --> 00:23:23,120
<font color="#CCCCCC">know what you know I mean if people</font>

583
00:23:21,530 --> 00:23:25,220
<font color="#E5E5E5">start throwing</font><font color="#CCCCCC"> away dirty data from the</font>

584
00:23:23,120 --> 00:23:27,080
kernel buffers<font color="#CCCCCC"> it's kind</font><font color="#E5E5E5"> of game</font><font color="#CCCCCC"> over</font>

585
00:23:25,220 --> 00:23:29,540
right<font color="#CCCCCC"> so that's what we did</font><font color="#E5E5E5"> and I know</font>

586
00:23:27,080 --> 00:23:31,429
that the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> I know that MySQL in</font>

587
00:23:29,540 --> 00:23:35,090
MongoDB made the same choice they they

588
00:23:31,430 --> 00:23:36,620
now panic if this an<font color="#CCCCCC"> i/o era</font><font color="#E5E5E5"> actually I</font>

589
00:23:35,090 --> 00:23:38,570
actually put a setting<font color="#CCCCCC"> into</font><font color="#E5E5E5"> Postgres</font>

590
00:23:36,620 --> 00:23:40,550
<font color="#CCCCCC">said you can turn</font><font color="#E5E5E5"> that off because BBC</font>

591
00:23:38,570 --> 00:23:43,850
doesn't have this problem<font color="#CCCCCC"> and there's a</font>

592
00:23:40,550 --> 00:23:46,550
commit from 1999 where you can see this

593
00:23:43,850 --> 00:23:53,510
problem<font color="#E5E5E5"> was discussed and and BBC</font>

594
00:23:46,550 --> 00:23:56,510
doesn't throw away<font color="#CCCCCC"> pages in the page</font>

595
00:23:53,510 --> 00:23:57,530
cache the kernels buffer<font color="#E5E5E5"> if it couldn't</font>

596
00:23:56,510 --> 00:23:59,090
write<font color="#CCCCCC"> it back which</font><font color="#E5E5E5"> makes sense I mean</font>

597
00:23:57,530 --> 00:24:00,920
<font color="#CCCCCC">it makes</font><font color="#E5E5E5"> intuitive sense the data is</font>

598
00:23:59,090 --> 00:24:03,050
still<font color="#E5E5E5"> dirty until</font><font color="#CCCCCC"> it's been written on</font>

599
00:24:00,920 --> 00:24:05,570
the<font color="#E5E5E5"> disk it's dirty right I should add</font>

600
00:24:03,050 --> 00:24:08,120
that none of<font color="#E5E5E5"> this applies to ZFS which</font>

601
00:24:05,570 --> 00:24:10,580
has<font color="#E5E5E5"> his own</font><font color="#CCCCCC"> completely</font><font color="#E5E5E5"> independent</font>

602
00:24:08,120 --> 00:24:10,969
caching<font color="#E5E5E5"> and so forth and it never throw</font>

603
00:24:10,580 --> 00:24:12,168
it<font color="#CCCCCC"> never</font>

604
00:24:10,970 --> 00:24:14,380
throws away dirty<font color="#E5E5E5"> data that doesn't</font>

605
00:24:12,169 --> 00:24:17,960
render<font color="#CCCCCC"> diskin has an option to panic or</font>

606
00:24:14,380 --> 00:24:19,880
retry<font color="#E5E5E5"> and so on</font><font color="#CCCCCC"> yeah so that</font><font color="#E5E5E5"> was an</font>

607
00:24:17,960 --> 00:24:21,350
<font color="#CCCCCC">interesting case</font><font color="#E5E5E5"> where previously did</font>

608
00:24:19,880 --> 00:24:23,510
very well and came out looking<font color="#E5E5E5"> quite</font>

609
00:24:21,350 --> 00:24:25,039
good<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> it's also interesting to</font>

610
00:24:23,510 --> 00:24:26,720
<font color="#E5E5E5">note</font><font color="#CCCCCC"> that that</font><font color="#E5E5E5"> choice to throw away</font>

611
00:24:25,039 --> 00:24:30,230
dirty data buffers when you couldn't

612
00:24:26,720 --> 00:24:31,520
<font color="#E5E5E5">write them back</font><font color="#CCCCCC"> was in ancient UNIX so</font>

613
00:24:30,230 --> 00:24:33,110
it was<font color="#CCCCCC"> probably sort</font><font color="#E5E5E5"> of inherited by</font>

614
00:24:31,520 --> 00:24:37,429
everybody without much analysis I think

615
00:24:33,110 --> 00:24:41,149
<font color="#E5E5E5">until</font><font color="#CCCCCC"> FreeBSD changed their mind on how</font>

616
00:24:37,429 --> 00:24:44,809
that<font color="#CCCCCC"> should work okay</font><font color="#E5E5E5"> so um before</font>

617
00:24:41,150 --> 00:24:48,980
<font color="#CCCCCC">FreeBSD</font><font color="#E5E5E5"> 11 there were there was no</font>

618
00:24:44,809 --> 00:24:50,418
support for collating<font color="#CCCCCC"> Unicode in FreeBSD</font>

619
00:24:48,980 --> 00:24:51,799
it would be I think<font color="#E5E5E5"> it was if you</font><font color="#CCCCCC"> try to</font>

620
00:24:50,419 --> 00:24:54,320
do it it<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be created in binary</font>

621
00:24:51,799 --> 00:24:55,730
order or<font color="#E5E5E5"> something like that but in</font>

622
00:24:54,320 --> 00:24:58,399
fricassee living<font color="#E5E5E5"> there's a new there was</font>

623
00:24:55,730 --> 00:25:00,289
a new collation implementation which is

624
00:24:58,400 --> 00:25:01,760
<font color="#E5E5E5">shared with I think the code came from</font>

625
00:25:00,289 --> 00:25:02,990
maybe a Lumos

626
00:25:01,760 --> 00:25:04,610
or maybe<font color="#CCCCCC"> dragonfly B you see one</font><font color="#E5E5E5"> of the</font>

627
00:25:02,990 --> 00:25:05,870
other<font color="#CCCCCC"> but somehow those people</font><font color="#E5E5E5"> working</font>

628
00:25:04,610 --> 00:25:09,289
on those three<font color="#E5E5E5"> projects work together</font>

629
00:25:05,870 --> 00:25:10,340
anyone here involved<font color="#E5E5E5"> in that yeah you</font>

630
00:25:09,289 --> 00:25:13,340
want to<font color="#CCCCCC"> be preaching to people</font><font color="#E5E5E5"> who know</font>

631
00:25:10,340 --> 00:25:20,570
vastly more about it than me<font color="#CCCCCC"> so</font>

632
00:25:13,340 --> 00:25:23,480
so as<font color="#CCCCCC"> of Ruby C 11 year you can actually</font>

633
00:25:20,570 --> 00:25:25,370
<font color="#E5E5E5">do collations probably properly in with</font>

634
00:25:23,480 --> 00:25:28,010
with<font color="#E5E5E5"> Unicode</font><font color="#CCCCCC"> by which I</font><font color="#E5E5E5"> mean that</font><font color="#CCCCCC"> the</font>

635
00:25:25,370 --> 00:25:31,580
<font color="#CCCCCC">stur</font><font color="#E5E5E5"> call function in Lib C can compare</font>

636
00:25:28,010 --> 00:25:33,710
two strings<font color="#E5E5E5"> of Unicode</font><font color="#CCCCCC"> and compare them</font>

637
00:25:31,580 --> 00:25:35,780
correctly<font color="#E5E5E5"> using the right rules for for</font>

638
00:25:33,710 --> 00:25:39,049
a given locale certain language or

639
00:25:35,780 --> 00:25:40,639
something<font color="#E5E5E5"> and Postgres uses that a lot</font>

640
00:25:39,049 --> 00:25:43,010
we're really big on<font color="#E5E5E5"> using collations</font>

641
00:25:40,640 --> 00:25:45,169
because people use text in indexes and

642
00:25:43,010 --> 00:25:48,049
indexes<font color="#CCCCCC"> Billy speech free indexes are</font>

643
00:25:45,169 --> 00:25:51,950
entirely<font color="#E5E5E5"> based on comparisons right now</font>

644
00:25:48,049 --> 00:25:54,590
<font color="#E5E5E5">because before that BBC didn't support</font>

645
00:25:51,950 --> 00:25:59,990
<font color="#E5E5E5">collating Unicode</font><font color="#CCCCCC"> there was</font><font color="#E5E5E5"> actually a</font>

646
00:25:54,590 --> 00:26:02,658
patch in the in the port of<font color="#E5E5E5"> Postgres for</font>

647
00:25:59,990 --> 00:26:03,980
<font color="#CCCCCC">FreeBSD which made it use ICU instead of</font>

648
00:26:02,659 --> 00:26:06,409
Lib C which was<font color="#CCCCCC"> really interesting</font>

649
00:26:03,980 --> 00:26:08,990
<font color="#E5E5E5">Postgres itself is now slowly gaining</font>

650
00:26:06,409 --> 00:26:12,470
ICU support as an option<font color="#E5E5E5"> and I'll come</font>

651
00:26:08,990 --> 00:26:14,840
<font color="#CCCCCC">back</font><font color="#E5E5E5"> to that in just a moment</font><font color="#CCCCCC"> so one of</font>

652
00:26:12,470 --> 00:26:17,570
the problems<font color="#CCCCCC"> we have with Postgres one</font>

653
00:26:14,840 --> 00:26:19,760
of the ways that<font color="#E5E5E5"> we get corruption is</font>

654
00:26:17,570 --> 00:26:21,230
when the collation rules<font color="#E5E5E5"> change so if</font>

655
00:26:19,760 --> 00:26:23,779
you<font color="#E5E5E5"> build a b-tree which is an index</font>

656
00:26:21,230 --> 00:26:25,969
<font color="#CCCCCC">it's entirely dependent on the</font>

657
00:26:23,779 --> 00:26:28,429
the rules<font color="#E5E5E5"> not changing the sort order</font>

658
00:26:25,969 --> 00:26:30,229
for independent keys not<font color="#E5E5E5"> changing but of</font>

659
00:26:28,429 --> 00:26:32,210
<font color="#E5E5E5">course they do change they change</font>

660
00:26:30,229 --> 00:26:34,519
<font color="#CCCCCC">because</font><font color="#E5E5E5"> there were mistakes and they</font>

661
00:26:32,210 --> 00:26:37,070
change because<font color="#CCCCCC"> all sorts of reasons</font><font color="#E5E5E5"> I</font>

662
00:26:34,519 --> 00:26:39,349
mean they change<font color="#E5E5E5"> because are those of</font>

663
00:26:37,070 --> 00:26:42,289
case about two years<font color="#E5E5E5"> ago where the G Lib</font>

664
00:26:39,349 --> 00:26:43,668
<font color="#E5E5E5">C guys rolled out a new version</font><font color="#CCCCCC"> that</font>

665
00:26:42,289 --> 00:26:45,739
changed the order of a lot<font color="#E5E5E5"> of German</font>

666
00:26:43,669 --> 00:26:49,669
words<font color="#E5E5E5"> and all kinds of databases in</font>

667
00:26:45,739 --> 00:26:51,289
Germany<font color="#E5E5E5"> using</font><font color="#CCCCCC"> the German blue cow head</font>

668
00:26:49,669 --> 00:26:53,359
<font color="#CCCCCC">corrupted indexes and what that</font><font color="#E5E5E5"> meant is</font>

669
00:26:51,289 --> 00:26:54,739
they couldn't<font color="#E5E5E5"> see like their query</font>

670
00:26:53,359 --> 00:26:57,710
<font color="#E5E5E5">started giving strange answers because</font>

671
00:26:54,739 --> 00:26:58,759
<font color="#E5E5E5">they couldn't find</font><font color="#CCCCCC"> keys</font><font color="#E5E5E5"> because you know</font>

672
00:26:57,710 --> 00:26:59,839
something<font color="#E5E5E5"> that should be</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> here was</font>

673
00:26:58,759 --> 00:27:03,950
now<font color="#E5E5E5"> over here and</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> in the tree</font>

674
00:26:59,839 --> 00:27:05,570
whatever<font color="#E5E5E5"> and it's a complicated it's a</font>

675
00:27:03,950 --> 00:27:07,369
complicated<font color="#E5E5E5"> business</font><font color="#CCCCCC"> it's not exactly</font>

676
00:27:05,570 --> 00:27:09,468
<font color="#CCCCCC">clear what</font><font color="#E5E5E5"> you should do about it</font><font color="#CCCCCC"> I mean</font>

677
00:27:07,369 --> 00:27:10,639
<font color="#E5E5E5">what what a lot of commercial databases</font>

678
00:27:09,469 --> 00:27:11,899
do about<font color="#E5E5E5"> this is just don't use</font>

679
00:27:10,639 --> 00:27:13,849
operating systems to do that they have

680
00:27:11,899 --> 00:27:15,199
their own<font color="#CCCCCC"> information system and that</font>

681
00:27:13,849 --> 00:27:16,700
would<font color="#E5E5E5"> be equivalent to us deciding to</font>

682
00:27:15,200 --> 00:27:19,219
<font color="#CCCCCC">use we're not going to</font><font color="#E5E5E5"> write our</font><font color="#CCCCCC"> own one</font>

683
00:27:16,700 --> 00:27:22,190
that's too hard but we might use<font color="#E5E5E5"> ICU for</font>

684
00:27:19,219 --> 00:27:26,059
my VM to do this<font color="#E5E5E5"> but then why should you</font>

685
00:27:22,190 --> 00:27:29,089
<font color="#E5E5E5">have then I mean with my FreeBSD hat on</font>

686
00:27:26,059 --> 00:27:30,799
<font color="#CCCCCC">I I</font><font color="#E5E5E5"> don't want every application to make</font>

687
00:27:29,089 --> 00:27:31,908
its own<font color="#E5E5E5"> solution to collating text</font>

688
00:27:30,799 --> 00:27:34,729
because now<font color="#E5E5E5"> they will disagree with</font><font color="#CCCCCC"> each</font>

689
00:27:31,909 --> 00:27:36,019
other which is not<font color="#E5E5E5"> good</font><font color="#CCCCCC"> I also don't</font>

690
00:27:34,729 --> 00:27:38,029
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just give up on the problem</font>

691
00:27:36,019 --> 00:27:40,849
because it's too hard that's stupid

692
00:27:38,029 --> 00:27:43,339
<font color="#CCCCCC">right I mean the Lib C provides still</font>

693
00:27:40,849 --> 00:27:45,979
<font color="#CCCCCC">Cole</font><font color="#E5E5E5"> it should work in a usable way so</font>

694
00:27:43,339 --> 00:27:47,779
what I think<font color="#CCCCCC"> we</font><font color="#E5E5E5"> should do is provide a</font>

695
00:27:45,979 --> 00:27:50,349
<font color="#CCCCCC">Lib</font><font color="#E5E5E5"> C interface to ask for a</font><font color="#CCCCCC"> version</font>

696
00:27:47,779 --> 00:27:52,519
string for the collation definition<font color="#E5E5E5"> and</font>

697
00:27:50,349 --> 00:27:54,200
guarantee that<font color="#CCCCCC"> we will change that</font>

698
00:27:52,519 --> 00:27:56,479
version<font color="#E5E5E5"> string so you can compare it</font><font color="#CCCCCC"> and</font>

699
00:27:54,200 --> 00:27:57,799
if it's<font color="#CCCCCC"> not equal</font><font color="#E5E5E5"> then you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> that the</font>

700
00:27:56,479 --> 00:27:59,479
rules<font color="#E5E5E5"> have changed in some</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> so that</font>

701
00:27:57,799 --> 00:28:01,460
<font color="#E5E5E5">then at least post quest could say hey</font>

702
00:27:59,479 --> 00:28:03,999
this index is<font color="#E5E5E5"> now</font><font color="#CCCCCC"> corrupted I can't use</font>

703
00:28:01,460 --> 00:28:07,070
<font color="#CCCCCC">it because</font><font color="#E5E5E5"> the collations have changed</font>

704
00:28:03,999 --> 00:28:12,589
<font color="#E5E5E5">so that's something I've I'm proposing</font>

705
00:28:07,070 --> 00:28:16,580
right<font color="#E5E5E5"> now for FreeBSD 13 and I mean</font>

706
00:28:12,589 --> 00:28:19,879
<font color="#E5E5E5">ideally I'd</font><font color="#CCCCCC"> like to propose that</font><font color="#E5E5E5"> to</font>

707
00:28:16,580 --> 00:28:22,849
<font color="#E5E5E5">POSIX actually and doing that</font><font color="#CCCCCC"> requires</font>

708
00:28:19,879 --> 00:28:24,789
having<font color="#E5E5E5"> an implementation so getting</font>

709
00:28:22,849 --> 00:28:28,039
something<font color="#E5E5E5"> like that into Lib C</font><font color="#CCCCCC"> 4</font>

710
00:28:24,789 --> 00:28:29,440
previously would be a start to trying to

711
00:28:28,039 --> 00:28:33,200
<font color="#E5E5E5">convince others to accept it as well</font>

712
00:28:29,440 --> 00:28:35,059
<font color="#E5E5E5">very simple just a</font><font color="#CCCCCC"> version string</font><font color="#E5E5E5"> on</font>

713
00:28:33,200 --> 00:28:36,619
<font color="#E5E5E5">collations that's all I really want just</font>

714
00:28:35,059 --> 00:28:37,490
solve that<font color="#E5E5E5"> problem I mean you could go</font>

715
00:28:36,619 --> 00:28:39,530
much further<font color="#E5E5E5"> and you</font>

716
00:28:37,490 --> 00:28:42,470
make it so that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> could access the</font>

717
00:28:39,530 --> 00:28:53,510
older version and and you know make it

718
00:28:42,470 --> 00:28:56,870
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that you could</font><font color="#E5E5E5"> do that you can ask</font>

719
00:28:53,510 --> 00:29:00,320
<font color="#E5E5E5">julep</font><font color="#CCCCCC"> C for its version on on</font><font color="#E5E5E5"> Linux but</font>

720
00:28:56,870 --> 00:29:01,699
then whenever<font color="#E5E5E5"> that changes that might be</font>

721
00:29:00,320 --> 00:29:03,740
a little<font color="#CCCCCC"> bit too pessimistic every</font><font color="#E5E5E5"> time</font>

722
00:29:01,700 --> 00:29:05,150
<font color="#CCCCCC">live</font><font color="#E5E5E5"> C changes you the database would</font>

723
00:29:03,740 --> 00:29:09,080
<font color="#E5E5E5">have to assume that every index is now</font>

724
00:29:05,150 --> 00:29:11,330
corrupted which would<font color="#E5E5E5"> be logically valid</font>

725
00:29:09,080 --> 00:29:13,220
but quite a<font color="#CCCCCC"> hassle you know you'd have</font>

726
00:29:11,330 --> 00:29:28,129
<font color="#CCCCCC">to so</font><font color="#E5E5E5"> you'd what I'd like</font><font color="#CCCCCC"> to get</font>

727
00:29:13,220 --> 00:29:29,480
<font color="#CCCCCC">something that's</font><font color="#E5E5E5"> quite fine-grained yeah</font>

728
00:29:28,130 --> 00:29:31,070
<font color="#E5E5E5">okay so there's all kinds of ways</font><font color="#CCCCCC"> that</font>

729
00:29:29,480 --> 00:29:33,620
<font color="#E5E5E5">could go wrong</font><font color="#CCCCCC"> so that's why I'd like to</font>

730
00:29:31,070 --> 00:29:36,730
make a formalized way to to make<font color="#CCCCCC"> it</font><font color="#E5E5E5"> work</font>

731
00:29:33,620 --> 00:29:39,110
<font color="#CCCCCC">the problem with this scheme though</font><font color="#E5E5E5"> well</font>

732
00:29:36,730 --> 00:29:42,110
I've got a patch<font color="#CCCCCC"> that I proposed in the</font>

733
00:29:39,110 --> 00:29:45,889
review site where where there's a

734
00:29:42,110 --> 00:29:48,949
<font color="#CCCCCC">version that gets</font><font color="#E5E5E5"> the the</font><font color="#CCCCCC"> Unicode data</font>

735
00:29:45,890 --> 00:29:50,179
that's used<font color="#E5E5E5"> behind the collations</font><font color="#CCCCCC"> it has</font>

736
00:29:48,950 --> 00:29:51,590
a version number so<font color="#E5E5E5"> if we just exposed</font>

737
00:29:50,179 --> 00:29:53,120
that<font color="#E5E5E5"> right the problem</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that if</font>

738
00:29:51,590 --> 00:29:55,100
there's a bug<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the C code that reads</font>

739
00:29:53,120 --> 00:29:56,870
that<font color="#E5E5E5"> stuff when we change the C code it</font>

740
00:29:55,100 --> 00:29:58,730
might<font color="#E5E5E5"> change</font><font color="#CCCCCC"> the behavior as</font><font color="#E5E5E5"> well and</font>

741
00:29:56,870 --> 00:30:00,199
that wouldn't be captured by that<font color="#E5E5E5"> so you</font>

742
00:29:58,730 --> 00:30:03,860
kind of<font color="#E5E5E5"> need a combination of the</font>

743
00:30:00,200 --> 00:30:05,870
library version<font color="#CCCCCC"> and the data</font><font color="#E5E5E5"> version I</font>

744
00:30:03,860 --> 00:30:07,370
I'm not too sure that's that's a

745
00:30:05,870 --> 00:30:11,300
something<font color="#E5E5E5"> to consider</font>

746
00:30:07,370 --> 00:30:14,659
yeah<font color="#E5E5E5"> okay another problem is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

747
00:30:11,300 --> 00:30:17,720
<font color="#E5E5E5">current</font><font color="#CCCCCC"> stir hole implementation always</font>

748
00:30:14,660 --> 00:30:20,059
always expands<font color="#E5E5E5"> the strings to a wide</font>

749
00:30:17,720 --> 00:30:22,960
format<font color="#E5E5E5"> wide character format which</font>

750
00:30:20,059 --> 00:30:25,760
involves<font color="#CCCCCC"> some eleking allocating memory</font>

751
00:30:22,960 --> 00:30:28,130
expanding the whole string and then

752
00:30:25,760 --> 00:30:31,400
comparing them<font color="#E5E5E5"> and then freeing them</font>

753
00:30:28,130 --> 00:30:32,540
which seems to<font color="#E5E5E5"> be quite wasteful it</font><font color="#CCCCCC"> seem</font>

754
00:30:31,400 --> 00:30:34,250
it seems like it'd be<font color="#E5E5E5"> quite nice to be</font>

755
00:30:32,540 --> 00:30:35,780
able<font color="#E5E5E5"> to do it just</font><font color="#CCCCCC"> using the utf-8</font>

756
00:30:34,250 --> 00:30:37,580
without<font color="#E5E5E5"> having to decode the whole</font>

757
00:30:35,780 --> 00:30:38,809
string for<font color="#CCCCCC"> example you</font><font color="#E5E5E5"> might know the</font>

758
00:30:37,580 --> 00:30:41,240
<font color="#CCCCCC">answer after comparing only the first</font>

759
00:30:38,809 --> 00:30:43,790
two<font color="#CCCCCC"> characters so</font><font color="#E5E5E5"> that you don't have to</font>

760
00:30:41,240 --> 00:30:45,740
do any any malloc or free and you<font color="#CCCCCC"> can</font>

761
00:30:43,790 --> 00:30:48,020
exit<font color="#E5E5E5"> early then</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can save a lot</font><font color="#CCCCCC"> of</font>

762
00:30:45,740 --> 00:30:49,700
<font color="#E5E5E5">time so that's something I know</font><font color="#CCCCCC"> that</font>

763
00:30:48,020 --> 00:30:50,930
this implementation<font color="#E5E5E5"> of circle is brand</font>

764
00:30:49,700 --> 00:30:52,550
<font color="#CCCCCC">new</font><font color="#E5E5E5"> so I shouldn't be like</font>

765
00:30:50,930 --> 00:30:54,650
beating it up it's<font color="#E5E5E5"> like really cool that</font>

766
00:30:52,550 --> 00:30:56,780
<font color="#CCCCCC">we have that now but yeah</font><font color="#E5E5E5"> this is</font>

767
00:30:54,650 --> 00:30:59,360
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that probably</font><font color="#E5E5E5"> not not much</font>

768
00:30:56,780 --> 00:31:01,310
software hammers as much as post post

769
00:30:59,360 --> 00:31:02,540
does because we use this for<font color="#CCCCCC"> anytime you</font>

770
00:31:01,310 --> 00:31:05,540
<font color="#CCCCCC">have an index on text we're going to be</font>

771
00:31:02,540 --> 00:31:09,230
<font color="#CCCCCC">using still call like that another thing</font>

772
00:31:05,540 --> 00:31:11,840
<font color="#E5E5E5">is that we have text</font><font color="#CCCCCC"> that's not null</font>

773
00:31:09,230 --> 00:31:13,610
terminated<font color="#E5E5E5"> and stuck all like all the</font>

774
00:31:11,840 --> 00:31:15,800
loop<font color="#CCCCCC"> C functions</font><font color="#E5E5E5"> works with null</font>

775
00:31:13,610 --> 00:31:19,250
terminated strings<font color="#E5E5E5"> there's a couple of</font>

776
00:31:15,800 --> 00:31:20,659
problems<font color="#E5E5E5"> what number one usually</font><font color="#CCCCCC"> a zero</font>

777
00:31:19,250 --> 00:31:23,330
is actually<font color="#E5E5E5"> a valid code point in</font>

778
00:31:20,660 --> 00:31:24,800
<font color="#E5E5E5">Unicode but we just can't we just can't</font>

779
00:31:23,330 --> 00:31:26,090
<font color="#CCCCCC">support it in Postgres so that's</font><font color="#E5E5E5"> like</font>

780
00:31:24,800 --> 00:31:27,409
one kind of<font color="#CCCCCC"> unicode string we can't</font>

781
00:31:26,090 --> 00:31:28,459
<font color="#E5E5E5">support which people complain</font><font color="#CCCCCC"> about</font>

782
00:31:27,410 --> 00:31:31,210
every now and then<font color="#E5E5E5"> it would</font><font color="#CCCCCC"> be nice to</font>

783
00:31:28,460 --> 00:31:33,740
fix that but we probably<font color="#E5E5E5"> can't fix that</font>

784
00:31:31,210 --> 00:31:36,200
on the other<font color="#E5E5E5"> hand we have to copy</font>

785
00:31:33,740 --> 00:31:38,840
strings<font color="#E5E5E5"> just to put a note that we have</font>

786
00:31:36,200 --> 00:31:40,790
in some<font color="#E5E5E5"> places on disk</font><font color="#CCCCCC"> to put an OLE in</font>

787
00:31:38,840 --> 00:31:42,560
the end so we can<font color="#E5E5E5"> call stack</font><font color="#CCCCCC"> or which</font>

788
00:31:40,790 --> 00:31:43,879
kind of sucks<font color="#CCCCCC"> so now we're copying the</font>

789
00:31:42,560 --> 00:31:45,500
string<font color="#E5E5E5"> and then we call stir call and</font>

790
00:31:43,880 --> 00:31:47,690
<font color="#CCCCCC">FreeBSD circles then copying the string</font>

791
00:31:45,500 --> 00:31:49,460
again<font color="#E5E5E5"> and then freeing it and then</font>

792
00:31:47,690 --> 00:31:51,020
freeing<font color="#E5E5E5"> you know it's it's</font><font color="#CCCCCC"> crazy like</font><font color="#E5E5E5"> we</font>

793
00:31:49,460 --> 00:31:53,170
need to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> rid of all that stuff so one</font>

794
00:31:51,020 --> 00:31:56,480
idea<font color="#E5E5E5"> I had is to have a version of</font>

795
00:31:53,170 --> 00:31:57,650
circle which<font color="#CCCCCC"> has an end in the middle</font>

796
00:31:56,480 --> 00:31:59,360
and you<font color="#CCCCCC"> can give</font><font color="#E5E5E5"> it the length and it</font>

797
00:31:57,650 --> 00:32:01,250
will stop<font color="#E5E5E5"> looking at bytes</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> or</font>

798
00:31:59,360 --> 00:32:02,030
characters after that character<font color="#E5E5E5"> I don't</font>

799
00:32:01,250 --> 00:32:05,060
know whether it'll be bytes or

800
00:32:02,030 --> 00:32:07,370
characters I'm not sure<font color="#CCCCCC"> and actually</font>

801
00:32:05,060 --> 00:32:08,510
when I thought<font color="#CCCCCC"> about that name I tried</font>

802
00:32:07,370 --> 00:32:10,370
googling<font color="#E5E5E5"> that name I just</font><font color="#CCCCCC"> thought you</font>

803
00:32:08,510 --> 00:32:11,980
<font color="#E5E5E5">know with a could be astir in</font><font color="#CCCCCC"> call and I</font>

804
00:32:10,370 --> 00:32:14,000
googled<font color="#CCCCCC"> that and I found</font><font color="#E5E5E5"> that</font>

805
00:32:11,980 --> 00:32:15,350
<font color="#CCCCCC">Microsoft's lips he has that I thought</font>

806
00:32:14,000 --> 00:32:16,490
well that's<font color="#E5E5E5"> kind of funny so then I did</font>

807
00:32:15,350 --> 00:32:18,679
<font color="#CCCCCC">some more</font><font color="#E5E5E5"> googling and I found that it</font>

808
00:32:16,490 --> 00:32:20,870
was<font color="#CCCCCC"> actually in</font><font color="#E5E5E5"> the proposal for c99 and</font>

809
00:32:18,680 --> 00:32:22,910
there was ripped out<font color="#CCCCCC"> with the rationale</font>

810
00:32:20,870 --> 00:32:24,590
<font color="#CCCCCC">that it it's</font><font color="#E5E5E5"> not clear what it means</font>

811
00:32:22,910 --> 00:32:26,630
<font color="#CCCCCC">like what if</font><font color="#E5E5E5"> you compare two</font><font color="#CCCCCC"> strings and</font>

812
00:32:24,590 --> 00:32:29,300
you only if you<font color="#CCCCCC"> only compare half of the</font>

813
00:32:26,630 --> 00:32:31,100
strings<font color="#E5E5E5"> that wouldn't be consistent with</font>

814
00:32:29,300 --> 00:32:32,750
<font color="#CCCCCC">it with the</font><font color="#E5E5E5"> longer</font><font color="#CCCCCC"> strings order because</font>

815
00:32:31,100 --> 00:32:35,600
sometimes the rules<font color="#CCCCCC"> for comparisons are</font>

816
00:32:32,750 --> 00:32:36,980
hairy like that so I<font color="#E5E5E5"> don't know maybe</font>

817
00:32:35,600 --> 00:32:38,629
<font color="#E5E5E5">there's some other kind of function name</font>

818
00:32:36,980 --> 00:32:45,650
you could use to not have to null

819
00:32:38,630 --> 00:32:48,140
terminate things<font color="#CCCCCC"> all right and finally</font>

820
00:32:45,650 --> 00:32:52,220
<font color="#E5E5E5">there's a thing called</font><font color="#CCCCCC"> Stewart transform</font>

821
00:32:48,140 --> 00:32:58,160
or<font color="#CCCCCC"> if it's written</font><font color="#E5E5E5"> X form</font><font color="#CCCCCC"> which gives</font>

822
00:32:52,220 --> 00:33:00,950
you a short binary string it<font color="#CCCCCC"> mangles</font>

823
00:32:58,160 --> 00:33:04,140
your input string in such a way that<font color="#E5E5E5"> the</font>

824
00:33:00,950 --> 00:33:06,450
result can be<font color="#E5E5E5"> compared as binary</font>

825
00:33:04,140 --> 00:33:09,690
you know<font color="#CCCCCC"> bitwise compared with it with</font>

826
00:33:06,450 --> 00:33:11,250
it with Asterix formed string from some

827
00:33:09,690 --> 00:33:13,080
other<font color="#E5E5E5"> string and it's guaranteed</font><font color="#CCCCCC"> to have</font>

828
00:33:11,250 --> 00:33:14,790
the same results<font color="#CCCCCC"> as circle would have on</font>

829
00:33:13,080 --> 00:33:16,980
the original strings<font color="#E5E5E5"> that's useful</font>

830
00:33:14,790 --> 00:33:18,750
<font color="#E5E5E5">because you</font><font color="#CCCCCC"> can take</font><font color="#E5E5E5"> it any</font><font color="#CCCCCC"> sized prefix</font>

831
00:33:16,980 --> 00:33:20,130
of those and there are some situations

832
00:33:18,750 --> 00:33:22,710
<font color="#CCCCCC">where you going to do many comparisons</font>

833
00:33:20,130 --> 00:33:23,970
<font color="#E5E5E5">of the same string</font><font color="#CCCCCC"> so he can convert it</font>

834
00:33:22,710 --> 00:33:25,920
to this form first you can then do

835
00:33:23,970 --> 00:33:27,690
integer comparisons on the first<font color="#E5E5E5"> 32 bits</font>

836
00:33:25,920 --> 00:33:29,549
or something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so that enables a</font>

837
00:33:27,690 --> 00:33:30,990
bunch of optimizations<font color="#E5E5E5"> however however</font>

838
00:33:29,549 --> 00:33:35,100
<font color="#E5E5E5">we found when we tried</font><font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> do</font>

839
00:33:30,990 --> 00:33:36,990
this that the<font color="#CCCCCC"> stur x form doesn't meet</font>

840
00:33:35,100 --> 00:33:40,260
the<font color="#E5E5E5"> guarantee in pretty much any</font><font color="#CCCCCC"> lip see</font>

841
00:33:36,990 --> 00:33:41,490
they're all<font color="#CCCCCC"> broken</font><font color="#E5E5E5"> at least</font><font color="#CCCCCC"> I mean and</font>

842
00:33:40,260 --> 00:33:42,480
that<font color="#E5E5E5"> leads to corruption so we had to</font>

843
00:33:41,490 --> 00:33:46,380
<font color="#E5E5E5">turn that off which was disappointing</font>

844
00:33:42,480 --> 00:33:47,640
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it went really</font><font color="#E5E5E5"> fast</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font>

845
00:33:46,380 --> 00:33:49,230
that's<font color="#CCCCCC"> something that if we could get</font><font color="#E5E5E5"> it</font>

846
00:33:47,640 --> 00:33:52,620
if we<font color="#E5E5E5"> could get a reliable</font><font color="#CCCCCC"> Starex form</font>

847
00:33:49,230 --> 00:33:56,580
that<font color="#E5E5E5"> would be cool okay</font>

848
00:33:52,620 --> 00:33:58,530
some more ideas<font color="#CCCCCC"> on AIX they have</font><font color="#E5E5E5"> this</font>

849
00:33:56,580 --> 00:34:01,168
wonderfully named signal<font color="#CCCCCC"> cig danger</font><font color="#E5E5E5"> I</font>

850
00:33:58,530 --> 00:34:02,879
<font color="#E5E5E5">love it you receive</font><font color="#CCCCCC"> sig danger because</font>

851
00:34:01,169 --> 00:34:04,500
<font color="#E5E5E5">AIX I think was the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> operating</font>

852
00:34:02,880 --> 00:34:05,400
system to have over<font color="#E5E5E5"> commit I'm not sure</font>

853
00:34:04,500 --> 00:34:07,080
if it was<font color="#CCCCCC"> it was at least</font><font color="#E5E5E5"> it was an</font>

854
00:34:05,400 --> 00:34:10,530
early<font color="#E5E5E5"> operating Siddhant have over</font>

855
00:34:07,080 --> 00:34:12,119
<font color="#E5E5E5">commit so the first time you your</font>

856
00:34:10,530 --> 00:34:14,520
<font color="#E5E5E5">program can</font><font color="#CCCCCC"> be killed because there's</font>

857
00:34:12,119 --> 00:34:16,679
not enough<font color="#E5E5E5"> memory to satisfy</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> to</font>

858
00:34:14,520 --> 00:34:18,719
<font color="#E5E5E5">write you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> to to catch all the</font>

859
00:34:16,679 --> 00:34:20,639
checks that<font color="#E5E5E5"> have been written in in some</font>

860
00:34:18,719 --> 00:34:23,969
<font color="#CCCCCC">sense and before it starts killing</font>

861
00:34:20,639 --> 00:34:27,090
people<font color="#CCCCCC"> it will signal</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> signal</font>

862
00:34:23,969 --> 00:34:28,560
everybody<font color="#CCCCCC"> and that gives you a small</font>

863
00:34:27,090 --> 00:34:30,330
amount<font color="#CCCCCC"> of</font><font color="#E5E5E5"> time to do something about it</font>

864
00:34:28,560 --> 00:34:31,710
<font color="#E5E5E5">and Postgres for example could do</font>

865
00:34:30,330 --> 00:34:34,168
something if it gets<font color="#CCCCCC"> sig day for</font><font color="#E5E5E5"> sig</font>

866
00:34:31,710 --> 00:34:35,699
danger<font color="#E5E5E5"> it could throw away some</font><font color="#CCCCCC"> cache</font>

867
00:34:34,168 --> 00:34:37,080
data for<font color="#CCCCCC"> example and then the system</font>

868
00:34:35,699 --> 00:34:38,850
could survive<font color="#E5E5E5"> now it's an interesting</font>

869
00:34:37,080 --> 00:34:41,879
<font color="#E5E5E5">question whether you want the system to</font>

870
00:34:38,850 --> 00:34:43,319
<font color="#E5E5E5">survive all the system to die because if</font>

871
00:34:41,879 --> 00:34:44,730
<font color="#E5E5E5">you are getting sig danger on a regular</font>

872
00:34:43,320 --> 00:34:46,020
basis it's probably not<font color="#E5E5E5"> really</font>

873
00:34:44,730 --> 00:34:48,090
<font color="#CCCCCC">sustainable something's probably wrong</font>

874
00:34:46,020 --> 00:34:48,840
<font color="#CCCCCC">and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to fix something</font><font color="#CCCCCC"> so I'm not</font>

875
00:34:48,090 --> 00:34:50,070
<font color="#E5E5E5">really question I'm not</font><font color="#CCCCCC"> really</font>

876
00:34:48,840 --> 00:34:51,780
questioning whether it's a<font color="#E5E5E5"> good</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> or</font>

877
00:34:50,070 --> 00:34:54,270
a bad idea to implement sig danger on

878
00:34:51,780 --> 00:34:55,740
<font color="#CCCCCC">FreeBSD</font><font color="#E5E5E5"> in order to be able to use that</font>

879
00:34:54,270 --> 00:34:59,580
but<font color="#CCCCCC"> I do know that they have the same</font>

880
00:34:55,739 --> 00:35:02,279
kind of concept on iOS<font color="#E5E5E5"> on Apple phones</font>

881
00:34:59,580 --> 00:35:03,630
they<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> slot</font><font color="#E5E5E5"> exactly a signal</font>

882
00:35:02,280 --> 00:35:05,520
there's something like<font color="#E5E5E5"> that where</font>

883
00:35:03,630 --> 00:35:07,710
programs can clean up their caches<font color="#CCCCCC"> and</font>

884
00:35:05,520 --> 00:35:09,390
so on to reduce memory<font color="#CCCCCC"> and I know that</font>

885
00:35:07,710 --> 00:35:10,859
<font color="#E5E5E5">the</font><font color="#CCCCCC"> people at Facebook</font><font color="#E5E5E5"> who do all their</font>

886
00:35:09,390 --> 00:35:14,040
stuff<font color="#E5E5E5"> on lots of Linux servers they have</font>

887
00:35:10,859 --> 00:35:17,170
a<font color="#CCCCCC"> youth they have a user</font><font color="#E5E5E5"> space out of</font>

888
00:35:14,040 --> 00:35:19,000
memory<font color="#CCCCCC"> killer instead</font><font color="#E5E5E5"> of the usual one</font>

889
00:35:17,170 --> 00:35:20,020
and they have that just so<font color="#E5E5E5"> that it can</font>

890
00:35:19,000 --> 00:35:23,950
tell you when it's<font color="#E5E5E5"> going to kill you and</font>

891
00:35:20,020 --> 00:35:25,090
you can avoid death<font color="#E5E5E5"> should</font><font color="#CCCCCC"> FreeBSD have</font>

892
00:35:23,950 --> 00:35:26,169
a thing like that<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know I think</font>

893
00:35:25,090 --> 00:35:27,580
<font color="#E5E5E5">it would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> interesting it wouldn't be</font>

894
00:35:26,170 --> 00:35:32,470
very<font color="#E5E5E5"> hard to him</font><font color="#CCCCCC"> Furman</font><font color="#E5E5E5"> but would it</font>

895
00:35:27,580 --> 00:35:34,240
would enable useful<font color="#CCCCCC"> would it actually be</font>

896
00:35:32,470 --> 00:35:38,379
good for<font color="#E5E5E5"> a database to do that for</font>

897
00:35:34,240 --> 00:35:41,439
example<font color="#CCCCCC"> I'm not quite sure we're</font><font color="#E5E5E5"> not</font>

898
00:35:38,380 --> 00:35:43,570
moving on<font color="#E5E5E5"> for the ports so on most Linux</font>

899
00:35:41,440 --> 00:35:46,720
distributions<font color="#CCCCCC"> the packages for</font><font color="#E5E5E5"> Postgres</font>

900
00:35:43,570 --> 00:35:49,030
allow parallel installation of different

901
00:35:46,720 --> 00:35:50,529
major versions the<font color="#E5E5E5"> the major versioning</font>

902
00:35:49,030 --> 00:35:52,540
scheme in Postgres<font color="#E5E5E5"> corresponds to</font>

903
00:35:50,530 --> 00:35:54,100
<font color="#CCCCCC">different</font><font color="#E5E5E5"> disk formats for the data so</font>

904
00:35:52,540 --> 00:35:55,470
changing from one<font color="#E5E5E5"> major version to</font>

905
00:35:54,100 --> 00:35:57,870
another<font color="#E5E5E5"> is a big deal because it means</font>

906
00:35:55,470 --> 00:36:03,549
you have<font color="#E5E5E5"> to go through a step that will</font>

907
00:35:57,870 --> 00:36:04,960
<font color="#E5E5E5">modify the data on disk and so firstly</font>

908
00:36:03,550 --> 00:36:06,460
<font color="#E5E5E5">you might not want you might want to</font>

909
00:36:04,960 --> 00:36:07,690
have two<font color="#CCCCCC"> versions of two major versions</font>

910
00:36:06,460 --> 00:36:09,520
<font color="#E5E5E5">running at the same time for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same</font>

911
00:36:07,690 --> 00:36:11,860
<font color="#E5E5E5">reason</font><font color="#CCCCCC"> that you can install Perl 5 and</font>

912
00:36:09,520 --> 00:36:14,020
Perl 6<font color="#CCCCCC"> or there's certain classes of</font>

913
00:36:11,860 --> 00:36:19,030
software<font color="#E5E5E5"> where it's useful</font><font color="#CCCCCC"> to have major</font>

914
00:36:14,020 --> 00:36:20,950
versions install at the same time so we

915
00:36:19,030 --> 00:36:23,710
<font color="#CCCCCC">should fix that in the</font><font color="#E5E5E5"> port so you</font><font color="#CCCCCC"> can</font>

916
00:36:20,950 --> 00:36:25,870
do that and then<font color="#CCCCCC"> another thing is that</font>

917
00:36:23,710 --> 00:36:28,150
<font color="#E5E5E5">on my personal opinion</font><font color="#CCCCCC"> this is a matter</font>

918
00:36:25,870 --> 00:36:29,799
of<font color="#E5E5E5"> taste in my personal opinion the</font>

919
00:36:28,150 --> 00:36:31,270
<font color="#CCCCCC">Debian maintainence have got</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> I</font>

920
00:36:29,800 --> 00:36:34,540
think<font color="#CCCCCC"> the best approach to</font><font color="#E5E5E5"> actually</font>

921
00:36:31,270 --> 00:36:36,130
managing<font color="#E5E5E5"> Postgres instances running</font><font color="#CCCCCC"> on a</font>

922
00:36:34,540 --> 00:36:38,050
<font color="#E5E5E5">server they have a package called</font>

923
00:36:36,130 --> 00:36:40,870
<font color="#E5E5E5">Postgres common was actually written</font><font color="#CCCCCC"> by</font>

924
00:36:38,050 --> 00:36:42,280
<font color="#E5E5E5">the Debian</font><font color="#CCCCCC"> maintained errs and</font><font color="#E5E5E5"> they but</font>

925
00:36:40,870 --> 00:36:43,900
it's now<font color="#E5E5E5"> been</font><font color="#CCCCCC"> taken up by</font><font color="#E5E5E5"> various other</font>

926
00:36:42,280 --> 00:36:46,600
distributions including<font color="#E5E5E5"> non Linux things</font>

927
00:36:43,900 --> 00:36:48,040
and I<font color="#E5E5E5"> think maybe we should become one</font>

928
00:36:46,600 --> 00:36:50,230
of<font color="#E5E5E5"> those non Linux things that takes it</font>

929
00:36:48,040 --> 00:36:51,880
up<font color="#E5E5E5"> to it lets you do it you know the way</font>

930
00:36:50,230 --> 00:36:55,540
<font color="#CCCCCC">IO</font><font color="#E5E5E5"> cage and things</font><font color="#CCCCCC"> like that have a nice</font>

931
00:36:51,880 --> 00:36:56,950
way to list<font color="#E5E5E5"> jails or whatever it just</font>

932
00:36:55,540 --> 00:36:59,320
<font color="#CCCCCC">lets you list you've got commands</font><font color="#E5E5E5"> like</font>

933
00:36:56,950 --> 00:37:01,060
<font color="#CCCCCC">PG underscore LS clusters cluster</font>

934
00:36:59,320 --> 00:37:02,470
meaning an instance of<font color="#E5E5E5"> the Postgres</font><font color="#CCCCCC"> you</font>

935
00:37:01,060 --> 00:37:03,880
can see them running<font color="#E5E5E5"> and you can start</font>

936
00:37:02,470 --> 00:37:04,270
them and stop<font color="#CCCCCC"> them and create them and</font>

937
00:37:03,880 --> 00:37:06,850
so on

938
00:37:04,270 --> 00:37:08,620
I think if we took that<font color="#E5E5E5"> code and allowed</font>

939
00:37:06,850 --> 00:37:10,240
you to install<font color="#CCCCCC"> multiple major versions</font>

940
00:37:08,620 --> 00:37:11,380
at the same time had<font color="#E5E5E5"> this thing that</font>

941
00:37:10,240 --> 00:37:13,089
could deal with<font color="#E5E5E5"> them like you can create</font>

942
00:37:11,380 --> 00:37:15,250
<font color="#CCCCCC">clusters of different versions and</font><font color="#E5E5E5"> and</font>

943
00:37:13,090 --> 00:37:17,830
then we made<font color="#CCCCCC"> it even better by adding</font>

944
00:37:15,250 --> 00:37:19,180
ZFS knowledge and jail knowledge to it

945
00:37:17,830 --> 00:37:23,319
so that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> could create clusters in</font>

946
00:37:19,180 --> 00:37:25,779
jails and you could<font color="#E5E5E5"> snapshot databases</font>

947
00:37:23,320 --> 00:37:28,510
and back them up and<font color="#E5E5E5"> all kinds of stuff</font>

948
00:37:25,780 --> 00:37:30,280
like<font color="#E5E5E5"> that using ZFS magic or integration</font>

949
00:37:28,510 --> 00:37:31,150
I think<font color="#CCCCCC"> that would be</font><font color="#E5E5E5"> really cool and</font>

950
00:37:30,280 --> 00:37:33,040
that would kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> take it</font><font color="#CCCCCC"> to the point</font>

951
00:37:31,150 --> 00:37:34,870
<font color="#CCCCCC">where</font><font color="#E5E5E5"> you know maybe it would</font><font color="#CCCCCC"> be in a</font>

952
00:37:33,040 --> 00:37:37,690
<font color="#CCCCCC">cup you know the way people</font><font color="#E5E5E5"> take up</font>

953
00:37:34,870 --> 00:37:40,359
<font color="#CCCCCC">freebsd because they want</font><font color="#E5E5E5"> to get it ZFS</font>

954
00:37:37,690 --> 00:37:42,310
<font color="#E5E5E5">you know we could make it that good and</font>

955
00:37:40,360 --> 00:37:44,500
like take advantage of the ZFS magic and

956
00:37:42,310 --> 00:37:46,529
so on with really nice tooling<font color="#E5E5E5"> it might</font>

957
00:37:44,500 --> 00:37:48,700
be something<font color="#CCCCCC"> that attracts people to</font>

958
00:37:46,530 --> 00:37:50,890
<font color="#CCCCCC">freebsd because they want to</font><font color="#E5E5E5"> run a</font>

959
00:37:48,700 --> 00:37:54,460
database on it<font color="#CCCCCC"> maybe a</font><font color="#E5E5E5"> couple minutes</font>

960
00:37:50,890 --> 00:37:56,799
<font color="#E5E5E5">left so I'm gonna faster</font><font color="#CCCCCC"> one thing that</font>

961
00:37:54,460 --> 00:37:58,180
I<font color="#CCCCCC"> run into</font><font color="#E5E5E5"> is that when we use POSIX</font>

962
00:37:56,800 --> 00:37:59,890
share memory<font color="#CCCCCC"> I discovered that</font><font color="#E5E5E5"> on</font>

963
00:37:58,180 --> 00:38:03,970
<font color="#E5E5E5">freebsd there's no way to see which</font>

964
00:37:59,890 --> 00:38:05,680
freebsd so which POSIX shared<font color="#E5E5E5"> ram memory</font>

965
00:38:03,970 --> 00:38:08,100
segments exists there's no way to list

966
00:38:05,680 --> 00:38:10,060
them which is kind<font color="#CCCCCC"> of weird</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> like</font>

967
00:38:08,100 --> 00:38:11,380
someone never got around to adding<font color="#CCCCCC"> the</font>

968
00:38:10,060 --> 00:38:13,750
facility I don't know what maybe it

969
00:38:11,380 --> 00:38:16,120
would<font color="#E5E5E5"> be I pcs or some new command would</font>

970
00:38:13,750 --> 00:38:18,640
show you the shared memory segments<font color="#CCCCCC"> that</font>

971
00:38:16,120 --> 00:38:23,350
exist on other up<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> Linux</font>

972
00:38:18,640 --> 00:38:25,900
<font color="#CCCCCC">their</font><font color="#E5E5E5"> their shared memory open just uses</font>

973
00:38:23,350 --> 00:38:29,200
actual<font color="#E5E5E5"> files and on slash dev slash yes</font>

974
00:38:25,900 --> 00:38:30,700
a temp file system or<font color="#E5E5E5"> something but on</font>

975
00:38:29,200 --> 00:38:32,439
<font color="#CCCCCC">freebsd it sits in a hash table on the</font>

976
00:38:30,700 --> 00:38:34,210
kernel<font color="#E5E5E5"> that you cannot see</font>

977
00:38:32,440 --> 00:38:35,560
we should really<font color="#E5E5E5"> fix</font><font color="#CCCCCC"> that because</font><font color="#E5E5E5"> it</font>

978
00:38:34,210 --> 00:38:37,330
makes<font color="#E5E5E5"> it</font><font color="#CCCCCC"> quite difficult</font><font color="#E5E5E5"> to develop with</font>

979
00:38:35,560 --> 00:38:40,779
these things<font color="#E5E5E5"> you also can't see with</font>

980
00:38:37,330 --> 00:38:42,009
proc stat<font color="#E5E5E5"> minus</font><font color="#CCCCCC"> V the names of any</font>

981
00:38:40,780 --> 00:38:46,690
segments that<font color="#CCCCCC"> are mapped in in that</font><font color="#E5E5E5"> way</font>

982
00:38:42,010 --> 00:38:47,920
<font color="#E5E5E5">that's something we</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> fix a couple</font>

983
00:38:46,690 --> 00:38:48,910
of other development hurdles<font color="#CCCCCC"> around</font><font color="#E5E5E5"> to</font>

984
00:38:47,920 --> 00:38:52,030
valgrind

985
00:38:48,910 --> 00:38:53,200
doesn't work for<font color="#E5E5E5"> Postgres I'm not quite</font>

986
00:38:52,030 --> 00:38:56,940
sure the<font color="#E5E5E5"> status of</font><font color="#CCCCCC"> valgrind</font>

987
00:38:53,200 --> 00:38:59,290
the grinned is in<font color="#E5E5E5"> the in the port it</font>

988
00:38:56,940 --> 00:39:00,790
aborts<font color="#CCCCCC"> it does not like run in Postgres</font>

989
00:38:59,290 --> 00:39:04,000
and that's<font color="#E5E5E5"> something that I would</font><font color="#CCCCCC"> really</font>

990
00:39:00,790 --> 00:39:05,950
like<font color="#E5E5E5"> to it's probably quite complicated</font>

991
00:39:04,000 --> 00:39:07,330
to fix I don't really know<font color="#E5E5E5"> but yeah</font>

992
00:39:05,950 --> 00:39:08,950
<font color="#E5E5E5">another thing problem in</font><font color="#CCCCCC"> round 2 is that</font>

993
00:39:07,330 --> 00:39:10,420
<font color="#CCCCCC">dtrace you stack was just not</font><font color="#E5E5E5"> working</font>

994
00:39:08,950 --> 00:39:11,830
for<font color="#E5E5E5"> a few months but I discovered a</font>

995
00:39:10,420 --> 00:39:17,110
<font color="#E5E5E5">couple weeks ago that's been fixed so I</font>

996
00:39:11,830 --> 00:39:18,520
cross<font color="#CCCCCC"> that off ok cloud</font><font color="#E5E5E5"> ABI is a really</font>

997
00:39:17,110 --> 00:39:20,350
interesting development for running

998
00:39:18,520 --> 00:39:23,380
software<font color="#E5E5E5"> in a secure way I think it will</font>

999
00:39:20,350 --> 00:39:27,819
be possible<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> Postgres run</font><font color="#E5E5E5"> in</font>

1000
00:39:23,380 --> 00:39:29,530
cloud ABI that allows you to<font color="#E5E5E5"> run it's an</font>

1001
00:39:27,820 --> 00:39:32,680
<font color="#E5E5E5">alternative to jails and containers it</font>

1002
00:39:29,530 --> 00:39:36,040
lets you<font color="#E5E5E5"> run it it could let you run a</font>

1003
00:39:32,680 --> 00:39:38,500
<font color="#E5E5E5">database entirely inside trapped inside</font>

1004
00:39:36,040 --> 00:39:40,029
one directory so that<font color="#E5E5E5"> it can't access</font>

1005
00:39:38,500 --> 00:39:41,440
files<font color="#CCCCCC"> outside that</font><font color="#E5E5E5"> everything's based on</font>

1006
00:39:40,030 --> 00:39:43,580
a file descriptor which<font color="#E5E5E5"> is the root of</font>

1007
00:39:41,440 --> 00:39:45,020
everything it can<font color="#CCCCCC"> access</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> a</font>

1008
00:39:43,580 --> 00:39:48,310
I think that would<font color="#CCCCCC"> be quite</font><font color="#E5E5E5"> an</font>

1009
00:39:45,020 --> 00:39:55,640
interesting<font color="#CCCCCC"> thing to investigate for</font>

1010
00:39:48,310 --> 00:40:01,250
<font color="#E5E5E5">FreeBSD and Postgres since I only have</font>

1011
00:39:55,640 --> 00:40:06,230
12<font color="#E5E5E5"> seconds left</font><font color="#CCCCCC"> I'm just gonna say my</font>

1012
00:40:01,250 --> 00:40:08,330
talk<font color="#E5E5E5"> is too long</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this session</font><font color="#CCCCCC"> yeah</font>

1013
00:40:06,230 --> 00:40:10,970
I'm gonna have<font color="#CCCCCC"> to yeah well I mean</font>

1014
00:40:08,330 --> 00:40:12,830
recording<font color="#E5E5E5"> stops so I'm gonna like okay a</font>

1015
00:40:10,970 --> 00:40:14,120
couple<font color="#CCCCCC"> of minutes okay</font><font color="#E5E5E5"> so a couple</font><font color="#CCCCCC"> of</font>

1016
00:40:12,830 --> 00:40:16,160
<font color="#E5E5E5">problems that I ran into</font><font color="#CCCCCC"> that are things</font>

1017
00:40:14,120 --> 00:40:17,960
we could fix one<font color="#E5E5E5"> of them is that there's</font>

1018
00:40:16,160 --> 00:40:20,240
this<font color="#E5E5E5"> reader head and right behind thing</font>

1019
00:40:17,960 --> 00:40:22,400
Postgres<font color="#E5E5E5"> quite often if you act if</font><font color="#CCCCCC"> you</font>

1020
00:40:20,240 --> 00:40:24,259
modify<font color="#E5E5E5"> a lot of rows in a table</font><font color="#CCCCCC"> its</font>

1021
00:40:22,400 --> 00:40:25,960
reading them at one end and writing them

1022
00:40:24,260 --> 00:40:28,640
at the other<font color="#E5E5E5"> end as they fall out of its</font>

1023
00:40:25,960 --> 00:40:31,850
buffer which means that you've got<font color="#CCCCCC"> these</font>

1024
00:40:28,640 --> 00:40:36,950
these<font color="#CCCCCC"> two heads moving</font><font color="#E5E5E5"> sequentially but</font>

1025
00:40:31,850 --> 00:40:39,380
you<font color="#E5E5E5"> FS and VFS has this single way of</font>

1026
00:40:36,950 --> 00:40:40,730
<font color="#E5E5E5">detecting sequential access and it</font>

1027
00:40:39,380 --> 00:40:42,020
doesn't work<font color="#E5E5E5"> because it's doing an</font><font color="#CCCCCC"> it's</font>

1028
00:40:40,730 --> 00:40:44,300
alternating<font color="#CCCCCC"> between reading</font><font color="#E5E5E5"> and writing</font>

1029
00:40:42,020 --> 00:40:45,860
in two different places<font color="#E5E5E5"> that's that's</font>

1030
00:40:44,300 --> 00:40:47,750
something<font color="#E5E5E5"> that actually makes things go</font>

1031
00:40:45,860 --> 00:40:50,240
a<font color="#E5E5E5"> lot slower on FreeBSD</font><font color="#CCCCCC"> than then on</font>

1032
00:40:47,750 --> 00:40:53,090
Linux so we could<font color="#E5E5E5"> probably fix that by</font>

1033
00:40:50,240 --> 00:40:55,339
<font color="#CCCCCC">teaching by increasing the smarts</font><font color="#E5E5E5"> of the</font>

1034
00:40:53,090 --> 00:40:57,440
sequential access<font color="#E5E5E5"> detection</font><font color="#CCCCCC"> all the</font>

1035
00:40:55,340 --> 00:40:59,210
heuristics used for that that is<font color="#CCCCCC"> not a</font>

1036
00:40:57,440 --> 00:41:00,980
problem<font color="#E5E5E5"> on ZFS because</font><font color="#CCCCCC"> NFS I should say</font>

1037
00:40:59,210 --> 00:41:02,750
<font color="#CCCCCC">because NFS has its own completely</font>

1038
00:41:00,980 --> 00:41:05,270
separate<font color="#E5E5E5"> read ahead and right hand</font>

1039
00:41:02,750 --> 00:41:07,280
<font color="#E5E5E5">probably most people using Postgres on</font>

1040
00:41:05,270 --> 00:41:08,570
<font color="#CCCCCC">BBC are doing it on zenefits</font><font color="#E5E5E5"> but</font>

1041
00:41:07,280 --> 00:41:11,210
certainly some use your face as<font color="#CCCCCC"> well</font>

1042
00:41:08,570 --> 00:41:13,550
<font color="#E5E5E5">that's something</font><font color="#CCCCCC"> we should fix I'm gonna</font>

1043
00:41:11,210 --> 00:41:14,660
<font color="#E5E5E5">skip that and we're gonna skip that</font><font color="#CCCCCC"> and</font>

1044
00:41:13,550 --> 00:41:17,110
I'm<font color="#E5E5E5"> gonna say thank you</font><font color="#CCCCCC"> very much for</font>

1045
00:41:14,660 --> 00:41:17,109
<font color="#CCCCCC">coming to</font><font color="#E5E5E5"> my talk</font>

1046
00:41:18,310 --> 00:41:21,369
[Applause]

