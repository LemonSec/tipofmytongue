1
00:00:05,470 --> 00:00:15,259
<font color="#E5E5E5">okay and welcome to the second boost</font>

2
00:00:11,570 --> 00:00:19,280
geometry talk today I'm Adam I work at

3
00:00:15,260 --> 00:00:21,890
MySQL and I'd like<font color="#E5E5E5"> to talk about</font><font color="#CCCCCC"> special</font>

4
00:00:19,280 --> 00:00:26,530
<font color="#E5E5E5">reference systems and how to transform</font>

5
00:00:21,890 --> 00:00:26,530
<font color="#CCCCCC">between them in C++ with</font><font color="#E5E5E5"> boost geometry</font>

6
00:00:26,980 --> 00:00:33,200
so when we are<font color="#E5E5E5"> dealing with coordinates</font>

7
00:00:30,410 --> 00:00:35,809
we have to know the context<font color="#E5E5E5"> for them how</font>

8
00:00:33,200 --> 00:00:40,400
<font color="#E5E5E5">to interpret them they may be on the</font>

9
00:00:35,809 --> 00:00:42,559
surface<font color="#E5E5E5"> of spheroid or on the sphere we</font>

10
00:00:40,400 --> 00:00:44,870
have to know the parameters<font color="#E5E5E5"> of this</font>

11
00:00:42,560 --> 00:00:47,180
<font color="#CCCCCC">thyroids</font><font color="#E5E5E5"> or maybe these coordinates are</font>

12
00:00:44,870 --> 00:00:51,649
on a map<font color="#E5E5E5"> so they are Cartesian</font>

13
00:00:47,180 --> 00:00:54,440
coordinates<font color="#E5E5E5"> in this in this case we have</font>

14
00:00:51,649 --> 00:00:57,559
to know how this map was created<font color="#CCCCCC"> to</font>

15
00:00:54,440 --> 00:01:05,719
interpret them properly the the most

16
00:00:57,559 --> 00:01:08,270
simple the most simple thing that could

17
00:01:05,719 --> 00:01:10,820
go wrong is<font color="#CCCCCC"> the missing of units for</font>

18
00:01:08,270 --> 00:01:13,490
instance we could we could have

19
00:01:10,820 --> 00:01:22,298
<font color="#CCCCCC">coordinate system using</font><font color="#E5E5E5"> meters or feet</font>

20
00:01:13,490 --> 00:01:25,940
and<font color="#CCCCCC"> typically right and so this is what</font>

21
00:01:22,299 --> 00:01:28,270
<font color="#E5E5E5">space reference system defines so</font>

22
00:01:25,940 --> 00:01:30,770
basically it defines<font color="#E5E5E5"> the context of</font>

23
00:01:28,270 --> 00:01:32,479
coordinates<font color="#CCCCCC"> were</font><font color="#E5E5E5"> using and typically</font>

24
00:01:30,770 --> 00:01:40,009
they they call this space reference

25
00:01:32,479 --> 00:01:43,990
system is is<font color="#E5E5E5"> it's referred</font><font color="#CCCCCC"> to with a</font>

26
00:01:40,010 --> 00:01:47,509
number<font color="#E5E5E5"> and there are some multinational</font>

27
00:01:43,990 --> 00:01:53,630
<font color="#E5E5E5">organizations defining such numbers the</font>

28
00:01:47,509 --> 00:01:56,570
<font color="#E5E5E5">most the most known one is the epsg</font>

29
00:01:53,630 --> 00:01:59,960
<font color="#E5E5E5">which is now a part of the</font><font color="#CCCCCC"> National</font>

30
00:01:56,570 --> 00:02:03,770
Association of oil and gas producers<font color="#E5E5E5"> but</font>

31
00:01:59,960 --> 00:02:07,479
<font color="#E5E5E5">there are others like ESRI and there are</font>

32
00:02:03,770 --> 00:02:10,459
also<font color="#E5E5E5"> numbers of space reference system</font>

33
00:02:07,479 --> 00:02:13,870
specifying systems for objects in<font color="#CCCCCC"> space</font>

34
00:02:10,459 --> 00:02:13,870
like<font color="#E5E5E5"> moon or</font>

35
00:02:14,020 --> 00:02:21,850
or<font color="#CCCCCC"> and other planets</font><font color="#E5E5E5"> and this is the</font>

36
00:02:17,050 --> 00:02:24,760
last one<font color="#CCCCCC"> I mentioned on the slide here</font>

37
00:02:21,850 --> 00:02:26,980
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can find various coordinate system</font>

38
00:02:24,760 --> 00:02:32,850
defined<font color="#E5E5E5"> so the first two ones are</font>

39
00:02:26,980 --> 00:02:35,829
defined by<font color="#CCCCCC"> resources for AP PSG</font>

40
00:02:32,850 --> 00:02:42,390
reference systems and the the third one

41
00:02:35,830 --> 00:02:47,110
contains<font color="#E5E5E5"> also yes or I and</font><font color="#CCCCCC"> II they the</font>

42
00:02:42,390 --> 00:02:51,010
astronomical ones when you<font color="#E5E5E5"> go to one</font><font color="#CCCCCC"> of</font>

43
00:02:47,110 --> 00:02:53,980
these sites<font color="#CCCCCC"> you'll have</font><font color="#E5E5E5"> you'll see</font>

44
00:02:51,010 --> 00:02:57,149
basically two definitions<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font>

45
00:02:53,980 --> 00:02:59,859
first one so<font color="#CCCCCC"> this is the</font><font color="#E5E5E5"> WPT format</font>

46
00:02:57,150 --> 00:03:03,400
<font color="#CCCCCC">well-known</font><font color="#E5E5E5"> text was defined by</font><font color="#CCCCCC"> the</font>

47
00:02:59,860 --> 00:03:09,660
<font color="#CCCCCC">opengl consortium so this is basically</font>

48
00:03:03,400 --> 00:03:17,920
the standard one this particular one

49
00:03:09,660 --> 00:03:20,920
defines the standard wgs84<font color="#E5E5E5"> coordinate</font>

50
00:03:17,920 --> 00:03:24,700
system so longitude and latitude on

51
00:03:20,920 --> 00:03:29,589
steroids<font color="#E5E5E5"> in degrees so basically the</font>

52
00:03:24,700 --> 00:03:35,890
<font color="#CCCCCC">data you are</font><font color="#E5E5E5"> seeing for</font><font color="#CCCCCC"> instance in in</font>

53
00:03:29,590 --> 00:03:39,940
some GPS to returns the coordinates in

54
00:03:35,890 --> 00:03:45,160
this system<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> same</font>

55
00:03:39,940 --> 00:03:49,000
coordinate<font color="#CCCCCC"> system defined in in approach</font>

56
00:03:45,160 --> 00:03:53,590
for string approach for is<font color="#CCCCCC"> well-known</font>

57
00:03:49,000 --> 00:03:56,040
<font color="#E5E5E5">library written in</font><font color="#CCCCCC"> c with</font><font color="#E5E5E5"> rappers to</font>

58
00:03:53,590 --> 00:04:01,740
many languages and this is how

59
00:03:56,040 --> 00:04:04,480
productions are defined in<font color="#E5E5E5"> this library</font>

60
00:04:01,740 --> 00:04:07,150
<font color="#E5E5E5">so during this talk I bought talking</font>

61
00:04:04,480 --> 00:04:09,160
about<font color="#E5E5E5"> brought for or actually I'll be</font>

62
00:04:07,150 --> 00:04:10,480
<font color="#E5E5E5">talking about boost geometry but with</font>

63
00:04:09,160 --> 00:04:15,180
relation to approach for because this<font color="#E5E5E5"> is</font>

64
00:04:10,480 --> 00:04:20,019
the state-of-the-art<font color="#E5E5E5"> library</font>

65
00:04:15,180 --> 00:04:24,070
<font color="#CCCCCC">the most recent version is 5.2</font><font color="#E5E5E5"> and here</font>

66
00:04:20,019 --> 00:04:26,799
the addresses and<font color="#CCCCCC"> booth geometry</font>

67
00:04:24,070 --> 00:04:29,469
represent I automatically implementation

68
00:04:26,800 --> 00:04:34,180
is based on port for it was started some

69
00:04:29,470 --> 00:04:38,410
time ago<font color="#E5E5E5"> by bérenger Harris when perch</font>

70
00:04:34,180 --> 00:04:43,720
for was in version<font color="#CCCCCC"> 403 or something like</font>

71
00:04:38,410 --> 00:04:47,169
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and I finished it</font><font color="#CCCCCC"> and most</font><font color="#E5E5E5"> of the</font>

72
00:04:43,720 --> 00:04:52,390
things<font color="#E5E5E5"> you'll see are already released</font>

73
00:04:47,169 --> 00:05:00,760
in both 169<font color="#E5E5E5"> and so of them will be in</font>

74
00:04:52,390 --> 00:05:04,210
170 this presentation will be example

75
00:05:00,760 --> 00:05:06,400
driven so this is my data<font color="#CCCCCC"> I took the</font>

76
00:05:04,210 --> 00:05:10,239
data from<font color="#E5E5E5"> Eurostat</font>

77
00:05:06,400 --> 00:05:16,539
<font color="#E5E5E5">so basically boundaries of countries</font><font color="#CCCCCC"> of</font>

78
00:05:10,240 --> 00:05:20,160
the world represented as polylines<font color="#E5E5E5"> so</font>

79
00:05:16,540 --> 00:05:24,750
here is the<font color="#CCCCCC"> the address at the top</font><font color="#E5E5E5"> and</font>

80
00:05:20,160 --> 00:05:27,340
you have<font color="#E5E5E5"> to navigate</font><font color="#CCCCCC"> to find</font><font color="#E5E5E5"> the file</font>

81
00:05:24,750 --> 00:05:29,080
<font color="#E5E5E5">and I'm using as you can see at the end</font>

82
00:05:27,340 --> 00:05:33,810
of<font color="#E5E5E5"> the phylum is like a pie shape file</font>

83
00:05:29,080 --> 00:05:39,700
and these<font color="#CCCCCC"> are coordinates</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> WSI 84</font>

84
00:05:33,810 --> 00:05:41,800
which is epsg for<font color="#E5E5E5"> three to six this is</font>

85
00:05:39,700 --> 00:05:44,110
how it looks<font color="#CCCCCC"> like and what I would</font><font color="#E5E5E5"> like</font>

86
00:05:41,800 --> 00:05:47,440
to<font color="#E5E5E5"> do basically is I would like to</font>

87
00:05:44,110 --> 00:05:49,570
create<font color="#E5E5E5"> three</font><font color="#CCCCCC"> Maps so this</font><font color="#E5E5E5"> are geographic</font>

88
00:05:47,440 --> 00:05:53,020
coordinates<font color="#E5E5E5"> I'll be creating three</font><font color="#CCCCCC"> maps</font>

89
00:05:49,570 --> 00:05:56,409
one of<font color="#E5E5E5"> Poland</font><font color="#CCCCCC"> one of Belgium in one of</font>

90
00:05:53,020 --> 00:06:01,450
<font color="#E5E5E5">New Jersey and I will say why New Jersey</font>

91
00:05:56,410 --> 00:06:04,060
later<font color="#E5E5E5"> so these are row geographic</font>

92
00:06:01,450 --> 00:06:11,050
coordinates of boundaries<font color="#E5E5E5"> of Poland and</font>

93
00:06:04,060 --> 00:06:13,000
neighboring countries so I know if you

94
00:06:11,050 --> 00:06:16,630
know how<font color="#E5E5E5"> what's the shape of Poland but</font>

95
00:06:13,000 --> 00:06:19,450
this is distorted<font color="#E5E5E5"> and what I'd like</font><font color="#CCCCCC"> to</font>

96
00:06:16,630 --> 00:06:23,140
do is to create<font color="#E5E5E5"> a map representing the</font>

97
00:06:19,450 --> 00:06:25,450
<font color="#E5E5E5">reality more closely more more</font>

98
00:06:23,140 --> 00:06:29,349
accurately<font color="#E5E5E5"> and for this purpose</font>

99
00:06:25,450 --> 00:06:36,580
this<font color="#CCCCCC"> area</font><font color="#E5E5E5"> is used so a PSD to 180</font>

100
00:06:29,350 --> 00:06:40,800
oh it's used for for maps of scales

101
00:06:36,580 --> 00:06:44,318
<font color="#E5E5E5">one to ten thousand I think because for</font>

102
00:06:40,800 --> 00:06:49,569
for closer<font color="#E5E5E5"> scales you have to use</font>

103
00:06:44,319 --> 00:06:53,590
<font color="#E5E5E5">another one</font><font color="#CCCCCC"> and the DSR</font><font color="#E5E5E5"> ID is called</font>

104
00:06:49,569 --> 00:06:56,490
<font color="#E5E5E5">there are two two other names behind the</font>

105
00:06:53,590 --> 00:06:59,318
<font color="#E5E5E5">a PSD code and the first one is the</font>

106
00:06:56,490 --> 00:07:01,930
European one<font color="#E5E5E5"> and the last one is</font><font color="#CCCCCC"> Polish</font>

107
00:06:59,319 --> 00:07:07,449
name for this transfer for this

108
00:07:01,930 --> 00:07:10,139
projection so how<font color="#CCCCCC"> its defined this is</font>

109
00:07:07,449 --> 00:07:14,020
<font color="#CCCCCC">the definition in</font><font color="#E5E5E5"> wkt</font>

110
00:07:10,139 --> 00:07:15,819
<font color="#E5E5E5">as you can see it's a on a different</font>

111
00:07:14,020 --> 00:07:27,400
spheroid<font color="#E5E5E5"> than wgs84</font>

112
00:07:15,819 --> 00:07:29,590
it's false line<font color="#CCCCCC"> in degrees</font><font color="#E5E5E5"> and this this</font>

113
00:07:27,400 --> 00:07:33,128
coordinate<font color="#E5E5E5"> are projected using</font>

114
00:07:29,590 --> 00:07:36,128
transverse Mercator projection which<font color="#CCCCCC"> is</font>

115
00:07:33,129 --> 00:07:41,590
something<font color="#E5E5E5"> like this if</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> project the</font>

116
00:07:36,129 --> 00:07:46,509
whole world and<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> how it's</font><font color="#CCCCCC"> done in</font>

117
00:07:41,590 --> 00:07:50,489
C well C++<font color="#E5E5E5"> because I'm using factor in</font>

118
00:07:46,509 --> 00:07:57,370
row<font color="#CCCCCC"> ROG for so we are creating two</font>

119
00:07:50,490 --> 00:08:00,610
projections<font color="#CCCCCC"> PJ in it plus dykes approach</font>

120
00:07:57,370 --> 00:08:03,190
for string so this different kind<font color="#E5E5E5"> of</font>

121
00:08:00,610 --> 00:08:08,379
defining a<font color="#E5E5E5"> projection and wkt</font><font color="#CCCCCC"> I've shown</font>

122
00:08:03,190 --> 00:08:13,319
at the<font color="#CCCCCC"> beginning</font><font color="#E5E5E5"> then I have some array</font>

123
00:08:08,379 --> 00:08:18,909
of coordinates<font color="#E5E5E5"> which here is a vector</font>

124
00:08:13,319 --> 00:08:23,680
and I'm calling<font color="#E5E5E5"> PJ transform function</font>

125
00:08:18,909 --> 00:08:27,419
passing the coordinates and I have to

126
00:08:23,680 --> 00:08:31,400
free the deep reductions<font color="#E5E5E5"> because</font>

127
00:08:27,419 --> 00:08:35,210
essentially these are pointers

128
00:08:31,400 --> 00:08:38,150
and now how it looks like in booster<font color="#E5E5E5"> Oh</font>

129
00:08:35,210 --> 00:08:43,430
<font color="#E5E5E5">before</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> booth geometry we can</font>

130
00:08:38,150 --> 00:08:46,850
<font color="#E5E5E5">express the abstractions</font><font color="#CCCCCC"> directly in the</font>

131
00:08:43,429 --> 00:08:50,510
code<font color="#E5E5E5"> so here I am expressing Geographic</font>

132
00:08:46,850 --> 00:08:52,790
points lines drinks and creating

133
00:08:50,510 --> 00:08:55,490
multi-line strings and doing the same

134
00:08:52,790 --> 00:08:57,110
for<font color="#E5E5E5"> a Cartesian because my input will be</font>

135
00:08:55,490 --> 00:09:01,880
<font color="#E5E5E5">Geographic and the output will</font><font color="#CCCCCC"> be</font>

136
00:08:57,110 --> 00:09:04,880
<font color="#E5E5E5">Cartesian of curious how it</font><font color="#CCCCCC"> looked how</font>

137
00:09:01,880 --> 00:09:07,640
it<font color="#E5E5E5"> looks like in</font><font color="#CCCCCC"> blue geometry this is</font>

138
00:09:04,880 --> 00:09:12,439
one possibility<font color="#E5E5E5"> later show other ones</font>

139
00:09:07,640 --> 00:09:15,800
but<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the basic</font><font color="#E5E5E5"> one most into the</font>

140
00:09:12,440 --> 00:09:19,279
<font color="#E5E5E5">closest approach for so we are just</font>

141
00:09:15,800 --> 00:09:22,670
<font color="#E5E5E5">passing the same rod for Strings the</font>

142
00:09:19,279 --> 00:09:25,510
<font color="#E5E5E5">only difference is that in C++ the</font>

143
00:09:22,670 --> 00:09:28,849
creation and destruction is is handled

144
00:09:25,510 --> 00:09:31,250
automatically and I'm passing<font color="#CCCCCC"> input</font>

145
00:09:28,850 --> 00:09:33,470
multi-line string which is<font color="#E5E5E5"> Geographic</font>

146
00:09:31,250 --> 00:09:37,100
and and as output<font color="#E5E5E5"> multi nice you could</font>

147
00:09:33,470 --> 00:09:41,900
use Cartesian<font color="#CCCCCC"> I get the</font><font color="#E5E5E5"> the</font>

148
00:09:37,100 --> 00:09:45,070
<font color="#E5E5E5">transformation you you seen before right</font>

149
00:09:41,900 --> 00:09:49,250
so another example<font color="#E5E5E5"> the same story</font>

150
00:09:45,070 --> 00:09:53,709
<font color="#CCCCCC">Belgium</font><font color="#E5E5E5"> row geographic coordinates and</font>

151
00:09:49,250 --> 00:09:59,930
this<font color="#E5E5E5"> is how it</font><font color="#CCCCCC"> should look like again</font>

152
00:09:53,709 --> 00:10:11,569
standard<font color="#E5E5E5"> standard space reference system</font>

153
00:09:59,930 --> 00:10:16,459
for<font color="#E5E5E5"> Belgium number epsg</font><font color="#CCCCCC"> 32</font><font color="#E5E5E5"> 1033 370 so</font>

154
00:10:11,570 --> 00:10:22,580
this is the<font color="#E5E5E5"> definition from yet</font><font color="#CCCCCC"> another</font>

155
00:10:16,459 --> 00:10:24,589
<font color="#E5E5E5">spheroid using degrees and using</font>

156
00:10:22,580 --> 00:10:26,870
<font color="#E5E5E5">different kind of production so</font><font color="#CCCCCC"> there</font>

157
00:10:24,589 --> 00:10:30,670
there before there was a transverse

158
00:10:26,870 --> 00:10:30,670
<font color="#E5E5E5">mercator</font><font color="#CCCCCC"> argue here we have</font>

159
00:10:30,889 --> 00:10:45,500
<font color="#CCCCCC">Lamport conic so this is the the way</font>

160
00:10:39,779 --> 00:10:48,449
<font color="#E5E5E5">you've already seen how to create the</font>

161
00:10:45,500 --> 00:10:52,320
transformation in<font color="#E5E5E5"> booth geometry so the</font>

162
00:10:48,449 --> 00:10:55,290
<font color="#E5E5E5">first one the first projection is from</font>

163
00:10:52,320 --> 00:10:57,810
which we are transforming and the the

164
00:10:55,290 --> 00:11:00,449
second one is<font color="#E5E5E5"> projection to which we are</font>

165
00:10:57,810 --> 00:11:05,989
transforming right so we're transforming

166
00:11:00,449 --> 00:11:12,240
from wgs84<font color="#E5E5E5"> to this map projection with</font>

167
00:11:05,990 --> 00:11:15,410
high number<font color="#CCCCCC"> of</font><font color="#E5E5E5"> power parameters so this</font>

168
00:11:12,240 --> 00:11:19,790
is the first<font color="#E5E5E5"> possibility</font>

169
00:11:15,410 --> 00:11:23,029
so obviously the string has to be parsed

170
00:11:19,790 --> 00:11:26,310
parameters extracted which takes time

171
00:11:23,029 --> 00:11:28,769
but there is a better<font color="#CCCCCC"> way</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> looks</font>

172
00:11:26,310 --> 00:11:32,579
like<font color="#E5E5E5"> this it's very</font><font color="#CCCCCC"> similar</font><font color="#E5E5E5"> the names of</font>

173
00:11:28,769 --> 00:11:34,470
parameters are the same however<font color="#E5E5E5"> it's the</font>

174
00:11:32,579 --> 00:11:37,859
numbers are expressed dialect directly

175
00:11:34,470 --> 00:11:42,839
in the code<font color="#E5E5E5"> which means that they</font>

176
00:11:37,860 --> 00:11:46,620
<font color="#E5E5E5">doesn't have to be parsed obviously this</font>

177
00:11:42,839 --> 00:11:50,130
<font color="#CCCCCC">should be faster here you can see the</font>

178
00:11:46,620 --> 00:11:52,940
two wgs84 parameter which is which are

179
00:11:50,130 --> 00:11:58,910
parameters used in conversion between

180
00:11:52,940 --> 00:12:02,069
ellipsoids<font color="#CCCCCC"> and I'm</font><font color="#E5E5E5"> passing C++ 11</font>

181
00:11:58,910 --> 00:12:05,910
initializer list<font color="#E5E5E5"> as range but you can</font>

182
00:12:02,069 --> 00:12:11,099
pass any range like but there is yet

183
00:12:05,910 --> 00:12:14,579
another way because here parameters are

184
00:12:11,100 --> 00:12:17,160
added to the list<font color="#E5E5E5"> in in runtime</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you</font>

185
00:12:14,579 --> 00:12:20,239
can create<font color="#E5E5E5"> a list in</font><font color="#CCCCCC"> compiled time</font><font color="#E5E5E5"> it</font>

186
00:12:17,160 --> 00:12:23,699
should<font color="#E5E5E5"> be even faster when you pass a</font>

187
00:12:20,240 --> 00:12:27,300
type<font color="#CCCCCC"> or</font><font color="#E5E5E5"> to two types representing</font>

188
00:12:23,699 --> 00:12:30,180
projections<font color="#E5E5E5"> into transformation as</font>

189
00:12:27,300 --> 00:12:32,849
template parameters and the projection

190
00:12:30,180 --> 00:12:38,069
exactly knows what you<font color="#E5E5E5"> will pass in the</font>

191
00:12:32,850 --> 00:12:41,650
constructor<font color="#CCCCCC"> and again it</font><font color="#E5E5E5"> expects exactly</font>

192
00:12:38,069 --> 00:12:44,709
what you defined in the type

193
00:12:41,650 --> 00:12:47,640
so this should be<font color="#E5E5E5"> even faster</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that</font>

194
00:12:44,710 --> 00:12:53,910
was<font color="#CCCCCC"> Hobart benchmark that it is really</font>

195
00:12:47,640 --> 00:12:58,210
but there is another way<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you</font>

196
00:12:53,910 --> 00:13:00,939
include<font color="#CCCCCC"> this optional header which</font>

197
00:12:58,210 --> 00:13:03,220
contains a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> EPs nickels</font>

198
00:13:00,940 --> 00:13:05,050
there is a<font color="#E5E5E5"> seven thousand or something</font>

199
00:13:03,220 --> 00:13:07,210
<font color="#CCCCCC">like that which increases the</font>

200
00:13:05,050 --> 00:13:09,310
compilation<font color="#E5E5E5"> time greatly but if you</font>

201
00:13:07,210 --> 00:13:14,230
enable if you include it then you can

202
00:13:09,310 --> 00:13:19,329
simply<font color="#E5E5E5"> pass the numbers so the the upper</font>

203
00:13:14,230 --> 00:13:24,660
one is is the runtime version and the

204
00:13:19,330 --> 00:13:27,790
lower one<font color="#CCCCCC"> is</font><font color="#E5E5E5"> compile time</font><font color="#CCCCCC"> version which</font>

205
00:13:24,660 --> 00:13:30,930
below this the surface<font color="#E5E5E5"> is the the</font>

206
00:13:27,790 --> 00:13:35,319
interfaces<font color="#CCCCCC"> I've shown on previous slides</font>

207
00:13:30,930 --> 00:13:39,099
<font color="#E5E5E5">and</font><font color="#CCCCCC"> here are the benchmarks for for the</font>

208
00:13:35,320 --> 00:13:44,670
<font color="#E5E5E5">Belgium set it contains</font><font color="#CCCCCC"> 7,000 points</font>

209
00:13:39,100 --> 00:13:50,260
<font color="#E5E5E5">roughly so in the table above their</font>

210
00:13:44,670 --> 00:13:52,000
creation times<font color="#E5E5E5"> and in the table</font><font color="#CCCCCC"> below</font>

211
00:13:50,260 --> 00:13:56,500
there are transformation times

212
00:13:52,000 --> 00:14:02,890
so if<font color="#E5E5E5"> 5,000 creations of transformation</font>

213
00:13:56,500 --> 00:14:07,930
object and adequate<font color="#CCCCCC"> rod for projections</font>

214
00:14:02,890 --> 00:14:14,470
and below<font color="#E5E5E5"> the transformation of the of</font>

215
00:14:07,930 --> 00:14:16,270
the coordinates and as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see right</font>

216
00:14:14,470 --> 00:14:19,120
and in the first<font color="#E5E5E5"> column you</font><font color="#CCCCCC"> have</font>

217
00:14:16,270 --> 00:14:21,970
production<font color="#E5E5E5"> platform the second column</font>

218
00:14:19,120 --> 00:14:28,330
there<font color="#E5E5E5"> is</font><font color="#CCCCCC"> boost geometry using</font><font color="#E5E5E5"> plot for</font>

219
00:14:21,970 --> 00:14:31,990
Strings the third one is it's<font color="#E5E5E5"> both the</font>

220
00:14:28,330 --> 00:14:34,330
geometry using<font color="#E5E5E5"> the runtime parameters</font>

221
00:14:31,990 --> 00:14:39,060
directly expressed in the code and<font color="#E5E5E5"> the</font>

222
00:14:34,330 --> 00:14:47,610
last one is static<font color="#CCCCCC"> our static parameters</font>

223
00:14:39,060 --> 00:14:50,359
so as I said the creation is<font color="#CCCCCC"> is</font><font color="#E5E5E5"> faster</font>

224
00:14:47,610 --> 00:14:53,610
and with both<font color="#E5E5E5"> geometry in all cases</font>

225
00:14:50,360 --> 00:14:57,959
<font color="#CCCCCC">we're past parsing the strings</font>

226
00:14:53,610 --> 00:15:01,620
<font color="#E5E5E5">differently too so this is why this why</font>

227
00:14:57,959 --> 00:15:06,979
were faster than<font color="#E5E5E5"> even in case of prod</font>

228
00:15:01,620 --> 00:15:12,260
<font color="#E5E5E5">for Strings</font><font color="#CCCCCC"> and we are slightly faster</font>

229
00:15:06,980 --> 00:15:15,180
<font color="#CCCCCC">in case of transformation</font><font color="#E5E5E5"> itself because</font>

230
00:15:12,260 --> 00:15:20,089
internally<font color="#CCCCCC"> oh we are doing</font><font color="#E5E5E5"> things</font>

231
00:15:15,180 --> 00:15:25,140
differently<font color="#CCCCCC"> - and this</font><font color="#E5E5E5"> is the last</font>

232
00:15:20,089 --> 00:15:30,240
example<font color="#CCCCCC"> New Jersey I'm showing you does</font>

233
00:15:25,140 --> 00:15:33,300
<font color="#E5E5E5">it because as you'll see it</font><font color="#CCCCCC"> uses</font><font color="#E5E5E5"> North</font>

234
00:15:30,240 --> 00:15:36,050
American datum<font color="#E5E5E5"> 27 which requires to use</font>

235
00:15:33,300 --> 00:15:38,540
grid shifting so instead of

236
00:15:36,050 --> 00:15:44,430
transformation<font color="#E5E5E5"> between Alex ellipsoid</font>

237
00:15:38,540 --> 00:15:46,769
<font color="#E5E5E5">using</font><font color="#CCCCCC"> Oh a set of numbers</font><font color="#E5E5E5"> or an RI we</font>

238
00:15:44,430 --> 00:15:52,219
are transforming between<font color="#E5E5E5"> ellipsoid using</font>

239
00:15:46,769 --> 00:15:52,220
grid so look<font color="#E5E5E5"> look out</font><font color="#CCCCCC"> table basically</font>

240
00:15:53,779 --> 00:16:02,189
<font color="#E5E5E5">and this is the first sir ID I found on</font>

241
00:15:57,870 --> 00:16:08,089
the in the<font color="#CCCCCC"> US because it basically</font><font color="#E5E5E5"> is</font>

242
00:16:02,190 --> 00:16:11,760
used in the by the US and Canada<font color="#E5E5E5"> areas</font>

243
00:16:08,089 --> 00:16:16,430
which isn't<font color="#CCCCCC"> yet deprecated and was on</font>

244
00:16:11,760 --> 00:16:22,110
<font color="#E5E5E5">the near the sea so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> could see the the</font>

245
00:16:16,430 --> 00:16:28,969
<font color="#CCCCCC">boundaries so this is the definition in</font>

246
00:16:22,110 --> 00:16:33,510
<font color="#CCCCCC">WPT the</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> here is that</font>

247
00:16:28,970 --> 00:16:37,769
previous<font color="#CCCCCC"> videos productions use used</font>

248
00:16:33,510 --> 00:16:38,810
meters<font color="#E5E5E5"> but here we have feet it's a</font>

249
00:16:37,769 --> 00:16:42,680
theft

250
00:16:38,810 --> 00:16:42,680
<font color="#E5E5E5">line from the bottom</font>

251
00:16:44,900 --> 00:16:55,319
so this this way you've seen already

252
00:16:49,110 --> 00:16:58,800
right from wgs84 to this another kind of

253
00:16:55,320 --> 00:17:02,070
projection but if you do this in booth

254
00:16:58,800 --> 00:17:05,159
geometry the grids want to be used so in

255
00:17:02,070 --> 00:17:08,459
booth geometry unlike<font color="#CCCCCC"> encroach</font><font color="#E5E5E5"> for you</font>

256
00:17:05,160 --> 00:17:12,030
have to explicitly define<font color="#E5E5E5"> where</font><font color="#CCCCCC"> the grid</font>

257
00:17:08,459 --> 00:17:16,620
storage will be where<font color="#E5E5E5"> the grid will be</font>

258
00:17:12,030 --> 00:17:19,170
storage is to start and<font color="#E5E5E5"> and you have to</font>

259
00:17:16,619 --> 00:17:21,989
initialize them<font color="#E5E5E5"> explicitly and pass it's</font>

260
00:17:19,170 --> 00:17:26,610
because Rochford

261
00:17:21,990 --> 00:17:29,570
<font color="#E5E5E5">does it under the hood looks for grades</font>

262
00:17:26,609 --> 00:17:33,179
which are basically huge text<font color="#E5E5E5"> files</font><font color="#CCCCCC"> oh</font>

263
00:17:29,570 --> 00:17:37,590
maybe not<font color="#CCCCCC"> texts</font><font color="#E5E5E5"> probably it depends</font><font color="#CCCCCC"> a</font>

264
00:17:33,180 --> 00:17:40,320
huge files<font color="#E5E5E5"> somewhere</font><font color="#CCCCCC"> on a disk approach</font>

265
00:17:37,590 --> 00:17:41,939
for you looks in some standard

266
00:17:40,320 --> 00:17:49,110
directories like the directory of

267
00:17:41,940 --> 00:17:53,010
program or a user directory<font color="#E5E5E5"> but so this</font>

268
00:17:49,110 --> 00:17:58,969
is<font color="#E5E5E5"> not acceptable I think so here you</font>

269
00:17:53,010 --> 00:18:03,290
have to do it manually<font color="#E5E5E5"> and here is the</font>

270
00:17:58,970 --> 00:18:07,730
let's say one thread one thread example

271
00:18:03,290 --> 00:18:11,100
so your crew I'm<font color="#E5E5E5"> creating good storage</font>

272
00:18:07,730 --> 00:18:14,250
<font color="#CCCCCC">I'm passing stream policy and grid so</font>

273
00:18:11,100 --> 00:18:18,270
the first parameter tells how<font color="#E5E5E5"> to</font><font color="#CCCCCC"> access</font>

274
00:18:14,250 --> 00:18:21,810
the file so it defines what kind<font color="#E5E5E5"> of</font>

275
00:18:18,270 --> 00:18:25,620
stream and<font color="#E5E5E5"> how to open it because you</font>

276
00:18:21,810 --> 00:18:29,129
can<font color="#E5E5E5"> have great inner in a string already</font>

277
00:18:25,620 --> 00:18:34,290
<font color="#E5E5E5">loaded whatever you like so the</font><font color="#CCCCCC"> definite</font>

278
00:18:29,130 --> 00:18:36,870
this default one<font color="#E5E5E5"> searches for a file in</font>

279
00:18:34,290 --> 00:18:41,370
the program directory and uses if stream

280
00:18:36,870 --> 00:18:43,800
and the second parameter<font color="#E5E5E5"> grid is</font>

281
00:18:41,370 --> 00:18:48,780
is the way to tell the library to use

282
00:18:43,800 --> 00:18:51,889
<font color="#E5E5E5">single threading hmm and then we are</font>

283
00:18:48,780 --> 00:18:54,270
creating the transformation and

284
00:18:51,890 --> 00:18:59,700
initializing grid which then there are

285
00:18:54,270 --> 00:19:02,639
<font color="#CCCCCC">passed to</font><font color="#E5E5E5"> forward methods so the only</font>

286
00:18:59,700 --> 00:19:04,920
difference<font color="#E5E5E5"> if you want multi-threading</font>

287
00:19:02,640 --> 00:19:07,980
<font color="#E5E5E5">the only difference is that instead of a</font>

288
00:19:04,920 --> 00:19:13,620
<font color="#E5E5E5">service grids</font><font color="#CCCCCC"> you are passing</font><font color="#E5E5E5"> you have</font>

289
00:19:07,980 --> 00:19:18,990
to pass<font color="#E5E5E5"> shared grids and currently</font>

290
00:19:13,620 --> 00:19:21,600
shared grids<font color="#E5E5E5"> use boost</font><font color="#CCCCCC"> thread so you</font>

291
00:19:18,990 --> 00:19:26,100
have to link<font color="#E5E5E5"> this library if you want to</font>

292
00:19:21,600 --> 00:19:29,629
use them I think<font color="#CCCCCC"> in the future it will</font>

293
00:19:26,100 --> 00:19:33,389
be possible to to use<font color="#CCCCCC"> STD threads</font>

294
00:19:29,630 --> 00:19:37,110
<font color="#E5E5E5">however as far as I remember internally</font>

295
00:19:33,390 --> 00:19:39,150
I used unique<font color="#E5E5E5"> lock and hard lock and I'm</font>

296
00:19:37,110 --> 00:19:41,580
not sure when they were added to<font color="#CCCCCC"> the</font>

297
00:19:39,150 --> 00:19:43,800
standard<font color="#E5E5E5"> it's possible that means C++ 17</font>

298
00:19:41,580 --> 00:19:48,689
and this is why I<font color="#CCCCCC"> used boost thread</font><font color="#E5E5E5"> but</font>

299
00:19:43,800 --> 00:19:52,169
<font color="#E5E5E5">I would have to check it</font><font color="#CCCCCC"> and so the same</font>

300
00:19:48,690 --> 00:19:56,250
<font color="#E5E5E5">story</font><font color="#CCCCCC"> storage which may be defined</font>

301
00:19:52,170 --> 00:20:00,750
<font color="#E5E5E5">anywhere and basically should be shared</font>

302
00:19:56,250 --> 00:20:04,320
between<font color="#E5E5E5"> all transformations because it's</font>

303
00:20:00,750 --> 00:20:08,040
more or less global thing<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> want</font>

304
00:20:04,320 --> 00:20:11,639
to load the<font color="#E5E5E5"> same file multiple times but</font>

305
00:20:08,040 --> 00:20:13,110
<font color="#E5E5E5">this way you have</font><font color="#CCCCCC"> control on when it</font>

306
00:20:11,640 --> 00:20:16,470
<font color="#E5E5E5">will be created when will be destroyed</font>

307
00:20:13,110 --> 00:20:21,360
you can destroy it or keep it<font color="#E5E5E5"> unlike in</font>

308
00:20:16,470 --> 00:20:24,930
<font color="#CCCCCC">prod for I think</font><font color="#E5E5E5"> then transformation</font><font color="#CCCCCC"> is</font>

309
00:20:21,360 --> 00:20:31,740
a initialization of<font color="#CCCCCC"> grids</font><font color="#E5E5E5"> and to thread</font>

310
00:20:24,930 --> 00:20:34,530
performing transformation<font color="#CCCCCC"> now what the</font>

311
00:20:31,740 --> 00:20:36,840
what<font color="#CCCCCC"> the difference between grid</font>

312
00:20:34,530 --> 00:20:40,340
shifting and without grid shifting<font color="#E5E5E5"> so we</font>

313
00:20:36,840 --> 00:20:40,340
are going<font color="#CCCCCC"> to Atlantic City</font>

314
00:20:41,120 --> 00:20:49,729
and the red one<font color="#E5E5E5"> is</font><font color="#CCCCCC"> without and blue one</font>

315
00:20:45,920 --> 00:20:54,230
is with shifting<font color="#E5E5E5"> so the difference is</font>

316
00:20:49,730 --> 00:20:58,340
<font color="#CCCCCC">100 and</font><font color="#E5E5E5"> of it and you see these little</font>

317
00:20:54,230 --> 00:21:03,410
<font color="#E5E5E5">numbers it's more or less 100 feet so</font>

318
00:20:58,340 --> 00:21:05,240
it's around 30 meters<font color="#E5E5E5"> error if you don't</font>

319
00:21:03,410 --> 00:21:08,380
use it<font color="#CCCCCC"> but if you are</font><font color="#E5E5E5"> fine</font><font color="#CCCCCC"> with it then</font>

320
00:21:05,240 --> 00:21:08,380
it will<font color="#E5E5E5"> be faster</font>

321
00:21:09,040 --> 00:21:17,920
so again boost<font color="#CCCCCC"> whose geometry is faster</font>

322
00:21:12,380 --> 00:21:21,770
<font color="#E5E5E5">and this time the difference is bigger</font>

323
00:21:17,920 --> 00:21:24,710
because<font color="#E5E5E5"> there are basically the the</font>

324
00:21:21,770 --> 00:21:30,230
great shifting code was rewritten<font color="#E5E5E5"> and we</font>

325
00:21:24,710 --> 00:21:33,830
are<font color="#CCCCCC"> using modern in case of</font><font color="#E5E5E5"> shared</font><font color="#CCCCCC"> grids</font>

326
00:21:30,230 --> 00:21:35,600
<font color="#CCCCCC">you are using modern</font><font color="#E5E5E5"> locking</font><font color="#CCCCCC"> mechanisms</font>

327
00:21:33,830 --> 00:21:38,060
like unique lock and hard lock and

328
00:21:35,600 --> 00:21:43,010
<font color="#CCCCCC">unlike approach for which I</font><font color="#E5E5E5"> think use</font>

329
00:21:38,060 --> 00:21:45,820
simple<font color="#CCCCCC"> mo Texas</font><font color="#E5E5E5"> as far as I remember and</font>

330
00:21:43,010 --> 00:21:52,010
in case of<font color="#CCCCCC"> boost geometry you can</font>

331
00:21:45,820 --> 00:21:55,460
<font color="#E5E5E5">explicitly don't use grids which makes</font>

332
00:21:52,010 --> 00:22:01,870
you it's<font color="#CCCCCC"> very fast compared to using</font>

333
00:21:55,460 --> 00:22:01,870
grids but but you don't<font color="#CCCCCC"> get</font><font color="#E5E5E5"> the accuracy</font>

334
00:22:05,290 --> 00:22:21,290
so so<font color="#E5E5E5"> boost geometry is flexible fast</font>

335
00:22:16,870 --> 00:22:26,270
<font color="#CCCCCC">it's it's easy to achieve thread safety</font>

336
00:22:21,290 --> 00:22:28,070
because we've<font color="#CCCCCC"> rushed for you with</font>

337
00:22:26,270 --> 00:22:31,280
previous<font color="#CCCCCC"> version approach for it was not</font>

338
00:22:28,070 --> 00:22:35,179
<font color="#E5E5E5">possible to be thread safe</font><font color="#CCCCCC"> and because</font>

339
00:22:31,280 --> 00:22:38,149
they were using global<font color="#E5E5E5"> error reporting</font>

340
00:22:35,180 --> 00:22:40,250
mechanism like this I<font color="#E5E5E5"> don't know system</font>

341
00:22:38,150 --> 00:22:42,350
<font color="#CCCCCC">2</font>

342
00:22:40,250 --> 00:22:44,570
now it is<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> but you have to</font>

343
00:22:42,350 --> 00:22:48,580
create production<font color="#E5E5E5"> context one per each</font>

344
00:22:44,570 --> 00:22:51,918
<font color="#E5E5E5">thread and use a different</font><font color="#CCCCCC"> function</font><font color="#E5E5E5"> so</font>

345
00:22:48,580 --> 00:22:55,070
additional code<font color="#E5E5E5"> and we're both geometry</font>

346
00:22:51,919 --> 00:22:58,010
<font color="#E5E5E5">because they after you create the</font>

347
00:22:55,070 --> 00:23:00,500
<font color="#E5E5E5">transformation it's constant</font><font color="#CCCCCC"> you can</font>

348
00:22:58,010 --> 00:23:02,900
just use it<font color="#CCCCCC"> with multiple threads you</font>

349
00:23:00,500 --> 00:23:06,620
have<font color="#CCCCCC"> to be you you don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to do</font>

350
00:23:02,900 --> 00:23:08,720
anything else<font color="#CCCCCC"> unfortunately there</font><font color="#E5E5E5"> are</font>

351
00:23:06,620 --> 00:23:15,530
less features<font color="#E5E5E5"> in both geometry so if you</font>

352
00:23:08,720 --> 00:23:20,780
need some<font color="#E5E5E5"> less common stuff like geo</font>

353
00:23:15,530 --> 00:23:24,500
grids or 3d transformations or<font color="#E5E5E5"> pipeline</font>

354
00:23:20,780 --> 00:23:27,320
operator<font color="#E5E5E5"> then you would have to use</font>

355
00:23:24,500 --> 00:23:30,080
watch for an imposed geometry there's

356
00:23:27,320 --> 00:23:32,590
also no init parameter and no<font color="#CCCCCC"> access</font>

357
00:23:30,080 --> 00:23:38,990
parameter I mean<font color="#E5E5E5"> they are not supported</font>

358
00:23:32,590 --> 00:23:40,549
because<font color="#E5E5E5"> in</font><font color="#CCCCCC"> both geometry the</font><font color="#E5E5E5"> the order</font>

359
00:23:38,990 --> 00:23:47,140
of parameter<font color="#E5E5E5"> the other order of</font>

360
00:23:40,549 --> 00:23:51,470
coordinates is<font color="#E5E5E5"> is defined a</font><font color="#CCCCCC"> compile-time</font>

361
00:23:47,140 --> 00:23:55,490
<font color="#CCCCCC">and</font><font color="#E5E5E5"> but I think this might be changed</font>

362
00:23:51,470 --> 00:23:57,919
because it might be<font color="#CCCCCC"> may be would be</font>

363
00:23:55,490 --> 00:23:59,990
<font color="#E5E5E5">needed in some cases but there is no in</font>

364
00:23:57,919 --> 00:24:04,730
it because in<font color="#CCCCCC"> prod for in it you also</font>

365
00:23:59,990 --> 00:24:07,970
loads<font color="#E5E5E5"> epsg for instance various things</font>

366
00:24:04,730 --> 00:24:12,140
from<font color="#E5E5E5"> files and this is something</font><font color="#CCCCCC"> we</font>

367
00:24:07,970 --> 00:24:14,450
<font color="#E5E5E5">would like</font><font color="#CCCCCC"> to avoid</font><font color="#E5E5E5"> right and if you are</font>

368
00:24:12,140 --> 00:24:21,130
<font color="#CCCCCC">wondering how</font><font color="#E5E5E5"> these pictures were</font>

369
00:24:14,450 --> 00:24:21,130
creative with<font color="#E5E5E5"> this extension thank you</font>

370
00:24:21,340 --> 00:24:26,639
[Applause]

371
00:24:43,620 --> 00:24:51,120
[Music]

372
00:24:45,870 --> 00:24:51,120
right before robust<font color="#CCCCCC"> West for robots</font><font color="#E5E5E5"> here</font>

373
00:24:51,179 --> 00:24:56,350
<font color="#CCCCCC">you're talking about</font><font color="#E5E5E5"> for instance robot</font>

374
00:24:53,860 --> 00:24:59,340
arm right and right so this<font color="#E5E5E5"> would</font>

375
00:24:56,350 --> 00:25:02,649
<font color="#CCCCCC">probably be different</font><font color="#E5E5E5"> kinds of</font>

376
00:24:59,340 --> 00:25:04,649
transformations right<font color="#E5E5E5"> which should</font>

377
00:25:02,649 --> 00:25:07,080
probably be<font color="#CCCCCC"> faster than what I've shown</font>

378
00:25:04,649 --> 00:25:09,758
so maybe boost

379
00:25:07,080 --> 00:25:13,178
<font color="#CCCCCC">qvm would be for you</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> they're</font>

380
00:25:09,759 --> 00:25:14,769
they<font color="#E5E5E5"> have mattresses and quaternions so</font>

381
00:25:13,179 --> 00:25:18,629
maybe<font color="#E5E5E5"> something you'd like</font><font color="#CCCCCC"> to use</font>

382
00:25:14,769 --> 00:25:22,870
instead<font color="#CCCCCC"> oh there is in boost there is</font>

383
00:25:18,629 --> 00:25:27,340
there is<font color="#E5E5E5"> the there is function called</font>

384
00:25:22,870 --> 00:25:30,158
transform<font color="#E5E5E5"> where you can pass a matrix</font>

385
00:25:27,340 --> 00:25:32,709
defining the transformation and<font color="#E5E5E5"> and this</font>

386
00:25:30,159 --> 00:25:36,429
way transform<font color="#E5E5E5"> anything any geometry you</font>

387
00:25:32,710 --> 00:25:41,710
like<font color="#E5E5E5"> so this is also what you'd like you</font>

388
00:25:36,429 --> 00:25:42,879
<font color="#CCCCCC">could use so either this or or qvm but</font>

389
00:25:41,710 --> 00:25:46,049
probably not

390
00:25:42,879 --> 00:25:46,049
<font color="#CCCCCC">SRS transformations</font>

391
00:25:51,049 --> 00:25:59,649
it's in the<font color="#CCCCCC"> future plan right so yeah we</font>

392
00:25:54,919 --> 00:26:02,539
plan to add 3d and actually 4d because

393
00:25:59,649 --> 00:26:06,168
<font color="#CCCCCC">they're also additional data which can</font>

394
00:26:02,539 --> 00:26:15,350
be possible points<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's not there</font>

395
00:26:06,169 --> 00:26:26,260
<font color="#E5E5E5">yet</font><font color="#CCCCCC"> but yeah we</font><font color="#E5E5E5"> are planning it which</font>

396
00:26:15,350 --> 00:26:26,260
ellipsoidal transformation<font color="#CCCCCC"> methods right</font>

397
00:26:29,050 --> 00:26:36,560
yes it's under the hood there<font color="#CCCCCC"> is it's</font>

398
00:26:32,990 --> 00:26:42,590
the same basically the same<font color="#CCCCCC"> cold just</font>

399
00:26:36,560 --> 00:26:45,770
<font color="#CCCCCC">approach form</font><font color="#E5E5E5"> because it started as well</font>

400
00:26:42,590 --> 00:26:49,030
not a<font color="#CCCCCC"> port</font><font color="#E5E5E5"> but it was heavily tinkered</font>

401
00:26:45,770 --> 00:26:54,710
with but it<font color="#E5E5E5"> was basically</font><font color="#CCCCCC"> approached</font><font color="#E5E5E5"> for</font>

402
00:26:49,030 --> 00:26:55,100
and it<font color="#E5E5E5"> was started mainly</font><font color="#CCCCCC"> because this</font>

403
00:26:54,710 --> 00:26:57,080
way

404
00:26:55,100 --> 00:26:59,030
mainly because approach for<font color="#E5E5E5"> only</font><font color="#CCCCCC"> used</font>

405
00:26:57,080 --> 00:27:02,179
doubles and boost geometry allows<font color="#E5E5E5"> to</font>

406
00:26:59,030 --> 00:27:07,760
define<font color="#E5E5E5"> any coordinate type but yeah we</font>

407
00:27:02,180 --> 00:27:10,460
<font color="#CCCCCC">are using the same design method and yes</font>

408
00:27:07,760 --> 00:27:14,240
between between ellipsoid<font color="#E5E5E5"> to WGS</font><font color="#CCCCCC"> is used</font>

409
00:27:10,460 --> 00:27:17,060
or an<font color="#E5E5E5"> ID grid</font><font color="#CCCCCC"> I because</font><font color="#E5E5E5"> it depends</font><font color="#CCCCCC"> on</font>

410
00:27:14,240 --> 00:27:19,220
<font color="#E5E5E5">the item so in this rare case</font><font color="#CCCCCC"> of North</font>

411
00:27:17,060 --> 00:27:30,169
American datum grids are used instead of

412
00:27:19,220 --> 00:27:34,370
<font color="#E5E5E5">to WGS and in some cases actually I was</font>

413
00:27:30,170 --> 00:27:38,800
<font color="#CCCCCC">not entirely honest with</font><font color="#E5E5E5"> you because</font>

414
00:27:34,370 --> 00:27:41,780
<font color="#CCCCCC">there is a rare case of 3d</font>

415
00:27:38,800 --> 00:27:45,740
representation of<font color="#CCCCCC"> the coordinates which</font>

416
00:27:41,780 --> 00:27:52,310
is Earth centered<font color="#E5E5E5"> are fixed which</font><font color="#CCCCCC"> is</font>

417
00:27:45,740 --> 00:27:54,100
also supported<font color="#E5E5E5"> but but yeah I'm I'm not</font>

418
00:27:52,310 --> 00:27:57,399
talking about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> right now</font><font color="#E5E5E5"> because</font>

419
00:27:54,100 --> 00:28:00,860
it's a<font color="#E5E5E5"> different story</font>

420
00:27:57,400 --> 00:28:04,090
yeah so we<font color="#E5E5E5"> are we are</font><font color="#CCCCCC"> using the same</font>

421
00:28:00,860 --> 00:28:04,090
method as<font color="#E5E5E5"> protocol</font>

422
00:28:17,559 --> 00:28:39,799
<font color="#E5E5E5">mmm I don't understand the question</font>

423
00:28:21,320 --> 00:28:49,689
entirely<font color="#E5E5E5"> all right something like cs2</font>

424
00:28:39,799 --> 00:28:49,690
cs3 about calling at<font color="#E5E5E5"> all from</font><font color="#CCCCCC"> Linux</font>

425
00:28:50,919 --> 00:29:00,460
command line<font color="#E5E5E5"> right now there is there</font>

426
00:29:10,560 --> 00:29:39,639
but there is there<font color="#CCCCCC"> is approach for based</font>

427
00:29:14,140 --> 00:29:43,450
<font color="#E5E5E5">one it's called cs2 cs3</font><font color="#CCCCCC"> 169 and but</font>

428
00:29:39,640 --> 00:29:48,000
without with all of the things I showed

429
00:29:43,450 --> 00:29:51,910
here compiling without problems 170

430
00:29:48,000 --> 00:29:56,710
which is not there yet<font color="#CCCCCC"> but most</font><font color="#E5E5E5"> of the</font>

431
00:29:51,910 --> 00:30:02,240
<font color="#E5E5E5">things will work</font><font color="#CCCCCC"> okay thank you</font>

432
00:29:56,710 --> 00:30:02,240
[Applause]

