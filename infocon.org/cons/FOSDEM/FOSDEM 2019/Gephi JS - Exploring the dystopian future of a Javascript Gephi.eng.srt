1
00:00:04,630 --> 00:00:13,010
thank you very<font color="#E5E5E5"> much</font><font color="#CCCCCC"> hello</font><font color="#E5E5E5"> everyone</font>

2
00:00:08,660 --> 00:00:15,769
so a giffy doesn't exist<font color="#CCCCCC"> in web world</font><font color="#E5E5E5"> in</font>

3
00:00:13,010 --> 00:00:20,960
JavaScript<font color="#E5E5E5"> right but what if it existed</font>

4
00:00:15,769 --> 00:00:22,430
<font color="#CCCCCC">in</font><font color="#E5E5E5"> this different world</font><font color="#CCCCCC"> so we are so let</font>

5
00:00:20,960 --> 00:00:24,470
<font color="#E5E5E5">us present ourselves</font><font color="#CCCCCC"> so I met you</font>

6
00:00:22,430 --> 00:00:26,090
<font color="#E5E5E5">tackling me I'm the the original author</font>

7
00:00:24,470 --> 00:00:28,610
of Goethe and<font color="#E5E5E5"> I'm a researcher and</font>

8
00:00:26,090 --> 00:00:31,130
Eduardo here is the lead developer of

9
00:00:28,610 --> 00:00:32,238
Goethe<font color="#E5E5E5"> since quite recently and if you</font>

10
00:00:31,130 --> 00:00:37,039
<font color="#CCCCCC">know give you</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little he has been</font>

11
00:00:32,238 --> 00:00:40,160
developing the the data laboratory<font color="#E5E5E5"> view</font>

12
00:00:37,039 --> 00:00:42,710
<font color="#E5E5E5">right among other things and we've</font>

13
00:00:40,160 --> 00:00:45,620
teamed up with<font color="#CCCCCC"> JavaScript experts that</font>

14
00:00:42,710 --> 00:00:48,890
know very well<font color="#CCCCCC"> to do the web world for</font>

15
00:00:45,620 --> 00:00:51,410
network visualizations<font color="#CCCCCC"> Alex Sirica me</font>

16
00:00:48,890 --> 00:00:53,660
who is<font color="#CCCCCC"> also my brother and</font><font color="#E5E5E5"> geo who is in</font>

17
00:00:51,410 --> 00:00:58,279
the Olympic who is in the in the room so

18
00:00:53,660 --> 00:01:02,510
<font color="#CCCCCC">that hat has us</font><font color="#E5E5E5"> see what it would look</font>

19
00:00:58,280 --> 00:01:04,940
<font color="#CCCCCC">like right see if</font><font color="#E5E5E5"> you want so but I need</font>

20
00:01:02,510 --> 00:01:08,259
to talk about the context<font color="#CCCCCC"> on why we are</font>

21
00:01:04,940 --> 00:01:12,429
in this<font color="#CCCCCC"> situation right now so basically</font>

22
00:01:08,260 --> 00:01:15,350
<font color="#E5E5E5">the multi platform is moving from</font><font color="#CCCCCC"> java</font>

23
00:01:12,430 --> 00:01:17,270
<font color="#E5E5E5">to web technology right so the browser</font>

24
00:01:15,350 --> 00:01:19,699
is now the new<font color="#CCCCCC"> movie platform if you</font>

25
00:01:17,270 --> 00:01:22,250
prefer<font color="#E5E5E5"> and this is an</font><font color="#CCCCCC"> effect</font><font color="#E5E5E5"> for</font>

26
00:01:19,700 --> 00:01:23,750
instance of some multiple factors but

27
00:01:22,250 --> 00:01:26,600
one<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> is the the policies of</font>

28
00:01:23,750 --> 00:01:29,090
<font color="#CCCCCC">oracle</font><font color="#E5E5E5"> right so they want Java to be</font>

29
00:01:26,600 --> 00:01:31,520
more<font color="#E5E5E5"> back-end thing and less</font><font color="#CCCCCC"> affront and</font>

30
00:01:29,090 --> 00:01:34,670
<font color="#E5E5E5">things so there are less</font><font color="#CCCCCC"> and less user</font>

31
00:01:31,520 --> 00:01:36,920
interface features in Java<font color="#E5E5E5"> they are less</font>

32
00:01:34,670 --> 00:01:39,650
maintained and<font color="#E5E5E5"> we are kind of stuck</font><font color="#CCCCCC"> in</font>

33
00:01:36,920 --> 00:01:42,200
this general movement<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and for</font>

34
00:01:39,650 --> 00:01:44,960
<font color="#E5E5E5">instance a very technical real practical</font>

35
00:01:42,200 --> 00:01:47,060
<font color="#E5E5E5">consequence for Givi that's the the</font>

36
00:01:44,960 --> 00:01:49,639
library<font color="#E5E5E5"> the</font><font color="#CCCCCC"> opengl library we currently</font>

37
00:01:47,060 --> 00:01:51,530
use<font color="#E5E5E5"> is not maintained anymore right and</font>

38
00:01:49,640 --> 00:01:53,630
it<font color="#E5E5E5"> will not be better in the</font><font color="#CCCCCC"> future</font>

39
00:01:51,530 --> 00:01:56,780
because<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> general movement right of</font>

40
00:01:53,630 --> 00:02:00,440
having<font color="#E5E5E5"> less UI stuff in Java generally</font>

41
00:01:56,780 --> 00:02:02,780
so at the<font color="#E5E5E5"> same time the</font><font color="#CCCCCC"> Java Script is</font>

42
00:02:00,440 --> 00:02:05,570
more powerful right we have crazy

43
00:02:02,780 --> 00:02:07,580
<font color="#E5E5E5">efficient applications now it's more</font>

44
00:02:05,570 --> 00:02:09,169
mature than what it was before we are

45
00:02:07,580 --> 00:02:11,950
switching<font color="#CCCCCC"> from a web of documents to</font><font color="#E5E5E5"> web</font>

46
00:02:09,169 --> 00:02:16,220
<font color="#CCCCCC">of applications so should we consider</font>

47
00:02:11,950 --> 00:02:18,670
moving<font color="#E5E5E5"> Jeffie from the</font><font color="#CCCCCC"> java world to the</font>

48
00:02:16,220 --> 00:02:21,109
web world<font color="#CCCCCC"> right</font>

49
00:02:18,670 --> 00:02:24,230
in this talk that<font color="#E5E5E5"> we will split in</font>

50
00:02:21,110 --> 00:02:26,600
<font color="#CCCCCC">different parts we will see first how</font><font color="#E5E5E5"> to</font>

51
00:02:24,230 --> 00:02:28,609
fix<font color="#E5E5E5"> a fee and how to deal</font><font color="#CCCCCC"> with these</font>

52
00:02:26,600 --> 00:02:31,100
issues<font color="#E5E5E5"> of duplication</font><font color="#CCCCCC"> of OpenGL</font>

53
00:02:28,610 --> 00:02:35,230
libraries in Java<font color="#CCCCCC"> currently and</font>

54
00:02:31,100 --> 00:02:39,500
basically<font color="#E5E5E5"> Eduardo we developed a new</font>

55
00:02:35,230 --> 00:02:42,470
OpenGL engine for<font color="#CCCCCC"> Jeffie</font><font color="#E5E5E5"> and then into</font>

56
00:02:39,500 --> 00:02:45,650
<font color="#E5E5E5">the J's world what would we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to do</font>

57
00:02:42,470 --> 00:02:47,780
to transition to<font color="#E5E5E5"> Jas what</font><font color="#CCCCCC"> it takes what</font>

58
00:02:45,650 --> 00:02:50,450
<font color="#E5E5E5">it costs and what we would gain</font><font color="#CCCCCC"> and</font>

59
00:02:47,780 --> 00:02:52,430
<font color="#CCCCCC">alexei will</font><font color="#E5E5E5"> present that and then we</font>

60
00:02:50,450 --> 00:02:55,959
have<font color="#CCCCCC"> a small benchmark that</font><font color="#E5E5E5"> shows if</font>

61
00:02:52,430 --> 00:03:00,940
<font color="#E5E5E5">javascript can really be as efficient as</font>

62
00:02:55,960 --> 00:03:03,740
<font color="#E5E5E5">java for craft visualizations</font><font color="#CCCCCC"> and</font>

63
00:03:00,940 --> 00:03:07,790
without<font color="#CCCCCC"> the further ado I'm</font><font color="#E5E5E5"> gonna pass</font>

64
00:03:03,740 --> 00:03:10,250
the mic to Eduardo<font color="#E5E5E5"> thank you so before</font>

65
00:03:07,790 --> 00:03:13,700
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> JavaScript we will</font><font color="#E5E5E5"> first</font>

66
00:03:10,250 --> 00:03:15,740
<font color="#E5E5E5">stay in the Java world</font><font color="#CCCCCC"> and I want to</font>

67
00:03:13,700 --> 00:03:18,109
present you<font color="#E5E5E5"> some problems</font><font color="#CCCCCC"> that we found</font>

68
00:03:15,740 --> 00:03:20,560
<font color="#E5E5E5">over the years</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the the heart of</font>

69
00:03:18,110 --> 00:03:24,200
<font color="#E5E5E5">caffeine which</font><font color="#CCCCCC"> is the rendering engine</font>

70
00:03:20,560 --> 00:03:28,370
<font color="#CCCCCC">and</font><font color="#E5E5E5"> there are a few</font><font color="#CCCCCC"> problems first it</font>

71
00:03:24,200 --> 00:03:31,070
uses<font color="#CCCCCC"> a</font><font color="#E5E5E5"> deprecated</font><font color="#CCCCCC"> OpenGL functions</font><font color="#E5E5E5"> very</font>

72
00:03:28,370 --> 00:03:33,950
<font color="#E5E5E5">very old so they don't even work in some</font>

73
00:03:31,070 --> 00:03:37,790
older or incomplete drivers and can

74
00:03:33,950 --> 00:03:42,709
<font color="#E5E5E5">crash many computers especially online</font>

75
00:03:37,790 --> 00:03:46,220
nooks and<font color="#CCCCCC"> no sex</font><font color="#E5E5E5"> also it has a problem</font>

76
00:03:42,709 --> 00:03:49,640
of scale it cannot scale with<font color="#E5E5E5"> modern</font>

77
00:03:46,220 --> 00:03:53,660
GPUs<font color="#E5E5E5"> that you can buy nowadays because</font>

78
00:03:49,640 --> 00:03:55,880
it has a lot of CPU<font color="#CCCCCC"> overhead and that's</font>

79
00:03:53,660 --> 00:04:01,989
because of calling a lot of functions of

80
00:03:55,880 --> 00:04:05,630
OpenGL<font color="#E5E5E5"> on the CPU which is just too much</font>

81
00:04:01,989 --> 00:04:09,440
<font color="#E5E5E5">too much cause every frame of of the</font>

82
00:04:05,630 --> 00:04:13,540
<font color="#E5E5E5">rendering and also we have listened to</font>

83
00:04:09,440 --> 00:04:17,060
our users<font color="#E5E5E5"> and they they want to use</font>

84
00:04:13,540 --> 00:04:19,070
<font color="#CCCCCC">Gaffey rendering engine as a library</font>

85
00:04:17,060 --> 00:04:21,709
they would like to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> it on their own</font>

86
00:04:19,070 --> 00:04:25,130
<font color="#E5E5E5">programs but that's not possible at</font><font color="#CCCCCC"> all</font>

87
00:04:21,709 --> 00:04:29,150
because it's not<font color="#E5E5E5"> modular and it's not</font>

88
00:04:25,130 --> 00:04:31,589
clean and it's just not portable<font color="#E5E5E5"> and</font>

89
00:04:29,150 --> 00:04:35,328
also at the same<font color="#E5E5E5"> time we are going to</font>

90
00:04:31,589 --> 00:04:37,949
all of this we say we also want<font color="#E5E5E5"> it to be</font>

91
00:04:35,329 --> 00:04:40,799
<font color="#E5E5E5">extensible with plugins</font><font color="#CCCCCC"> so it's not just</font>

92
00:04:37,949 --> 00:04:43,049
what it<font color="#E5E5E5"> is but it can be changed by any</font>

93
00:04:40,799 --> 00:04:44,719
developer and of course we can improve

94
00:04:43,049 --> 00:04:49,638
it

95
00:04:44,719 --> 00:04:54,869
so before<font color="#E5E5E5"> creating a new engine</font><font color="#CCCCCC"> I found</font>

96
00:04:49,639 --> 00:05:00,449
very<font color="#E5E5E5"> few difficult choices to</font><font color="#CCCCCC"> make</font>

97
00:04:54,869 --> 00:05:03,869
mainly<font color="#CCCCCC"> two one is</font><font color="#E5E5E5"> to a Java library</font><font color="#CCCCCC"> for</font>

98
00:05:00,449 --> 00:05:07,469
dealing<font color="#E5E5E5"> with OpenGL</font><font color="#CCCCCC"> enjoy so get</font>

99
00:05:03,869 --> 00:05:10,079
<font color="#CCCCCC">fishings always has been using the GOL</font>

100
00:05:07,469 --> 00:05:15,149
library<font color="#CCCCCC"> but the problem with it</font><font color="#E5E5E5"> is that</font>

101
00:05:10,079 --> 00:05:19,169
<font color="#E5E5E5">is not</font><font color="#CCCCCC"> maintained</font><font color="#E5E5E5"> anymore</font><font color="#CCCCCC"> we also want</font>

102
00:05:15,149 --> 00:05:23,249
to<font color="#E5E5E5"> thank the</font><font color="#CCCCCC"> GOL developers for the work</font>

103
00:05:19,169 --> 00:05:27,239
<font color="#E5E5E5">during the years videos homework but</font>

104
00:05:23,249 --> 00:05:30,569
nowadays we have<font color="#CCCCCC"> to make the switch to</font>

105
00:05:27,239 --> 00:05:34,248
another<font color="#E5E5E5"> library</font><font color="#CCCCCC"> and that's a the like</font>

106
00:05:30,569 --> 00:05:37,289
why like<font color="#E5E5E5"> why gaming Java library</font>

107
00:05:34,249 --> 00:05:39,569
<font color="#CCCCCC">and it's great if</font><font color="#E5E5E5"> it's grated it works</font>

108
00:05:37,289 --> 00:05:42,389
very well it has many<font color="#E5E5E5"> many functionality</font>

109
00:05:39,569 --> 00:05:46,769
but it has a small problem<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's that</font>

110
00:05:42,389 --> 00:05:49,709
it doesn't officially support<font color="#CCCCCC"> a solution</font>

111
00:05:46,769 --> 00:05:53,099
for building a graphic user<font color="#CCCCCC"> interface</font>

112
00:05:49,709 --> 00:05:55,289
which for<font color="#E5E5E5"> goofy</font><font color="#CCCCCC"> as you saw before it is</font>

113
00:05:53,099 --> 00:05:58,769
a<font color="#E5E5E5"> deal-breaker because we don't want to</font>

114
00:05:55,289 --> 00:06:03,269
build a game we want<font color="#E5E5E5"> to build a desktop</font>

115
00:05:58,769 --> 00:06:06,499
application or web the integrates a

116
00:06:03,269 --> 00:06:11,549
graph<font color="#E5E5E5"> button the graph is not everything</font>

117
00:06:06,499 --> 00:06:13,949
and also last year<font color="#E5E5E5"> we found that the</font>

118
00:06:11,549 --> 00:06:17,628
future<font color="#E5E5E5"> for OpenGL in Java or the desktop</font>

119
00:06:13,949 --> 00:06:21,119
is kind<font color="#E5E5E5"> of uncertain that's because</font>

120
00:06:17,629 --> 00:06:24,019
first<font color="#CCCCCC"> bulkin is the supposed to be the</font>

121
00:06:21,119 --> 00:06:26,909
successor of<font color="#CCCCCC"> opengl</font><font color="#E5E5E5"> but still is</font>

122
00:06:24,019 --> 00:06:30,689
<font color="#E5E5E5">unsupported by other drivers of the GPUs</font>

123
00:06:26,909 --> 00:06:35,699
or or other systems<font color="#E5E5E5"> and at the same time</font>

124
00:06:30,689 --> 00:06:38,939
<font color="#E5E5E5">Apple decided to duplicate OpenGL in OS</font>

125
00:06:35,699 --> 00:06:42,220
<font color="#E5E5E5">X and they also said they want super</font>

126
00:06:38,939 --> 00:06:44,950
<font color="#CCCCCC">Buchan which makes them</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> only ones</font>

127
00:06:42,220 --> 00:06:46,660
not doing<font color="#E5E5E5"> it and it seems they</font><font color="#CCCCCC"> are</font>

128
00:06:44,950 --> 00:06:50,080
trying<font color="#E5E5E5"> to inform metal which is the</font>

129
00:06:46,660 --> 00:06:55,450
their<font color="#E5E5E5"> own graphics API which is only for</font>

130
00:06:50,080 --> 00:06:56,620
OS<font color="#E5E5E5"> X and iOS</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> is that too bad</font><font color="#CCCCCC"> I don't</font>

131
00:06:55,450 --> 00:06:59,680
<font color="#CCCCCC">think so</font>

132
00:06:56,620 --> 00:07:03,520
OpenGL still works in no<font color="#CCCCCC"> 6 it will</font>

133
00:06:59,680 --> 00:07:05,530
<font color="#CCCCCC">continue</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> work and</font><font color="#E5E5E5"> also they are</font>

134
00:07:03,520 --> 00:07:08,080
starting<font color="#CCCCCC"> to appear solutions to fix this</font>

135
00:07:05,530 --> 00:07:10,690
<font color="#E5E5E5">problem in the future so you</font><font color="#CCCCCC"> can write</font>

136
00:07:08,080 --> 00:07:13,719
OpenGL programs that work on top of

137
00:07:10,690 --> 00:07:17,560
<font color="#CCCCCC">metals</font><font color="#E5E5E5"> so it will become a pseudo</font>

138
00:07:13,720 --> 00:07:20,200
<font color="#E5E5E5">continue working for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> future and also</font>

139
00:07:17,560 --> 00:07:23,440
<font color="#E5E5E5">this software being created in OpenGL</font>

140
00:07:20,200 --> 00:07:26,590
nowadays so I don't<font color="#E5E5E5"> think we should move</font>

141
00:07:23,440 --> 00:07:28,890
<font color="#E5E5E5">that so now I will</font><font color="#CCCCCC"> talk about the new</font>

142
00:07:26,590 --> 00:07:32,169
engine<font color="#CCCCCC"> that I have been developing to</font>

143
00:07:28,890 --> 00:07:36,340
<font color="#E5E5E5">replace completely replace the</font><font color="#CCCCCC"> current</font>

144
00:07:32,170 --> 00:07:38,919
engine<font color="#E5E5E5"> of goofy so you will see that it</font>

145
00:07:36,340 --> 00:07:42,489
looks<font color="#E5E5E5"> exactly the same but fixes of you</font>

146
00:07:38,919 --> 00:07:45,010
know glitches<font color="#E5E5E5"> or glitches</font><font color="#CCCCCC"> it's also</font>

147
00:07:42,490 --> 00:07:48,970
<font color="#E5E5E5">written from scratch</font><font color="#CCCCCC"> only depending</font><font color="#E5E5E5"> on</font>

148
00:07:45,010 --> 00:07:51,610
the graph API the<font color="#E5E5E5"> core so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> that should</font>

149
00:07:48,970 --> 00:07:57,669
make it<font color="#E5E5E5"> very very</font><font color="#CCCCCC"> easy to integrate both</font>

150
00:07:51,610 --> 00:07:59,590
in<font color="#E5E5E5"> goofy and other applications also it</font>

151
00:07:57,669 --> 00:08:03,580
<font color="#E5E5E5">offers extension mechanism so you can</font>

152
00:07:59,590 --> 00:08:07,750
<font color="#E5E5E5">plug in some components to draw anything</font>

153
00:08:03,580 --> 00:08:11,590
for<font color="#E5E5E5"> example a background map or a legend</font>

154
00:08:07,750 --> 00:08:15,490
<font color="#E5E5E5">whatever and you can</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> extend the the</font>

155
00:08:11,590 --> 00:08:18,310
input so you<font color="#E5E5E5"> can write</font><font color="#CCCCCC"> plugins to deal</font>

156
00:08:15,490 --> 00:08:22,540
with the user in<font color="#E5E5E5"> user interaction for</font>

157
00:08:18,310 --> 00:08:26,979
example<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> I wanted</font><font color="#CCCCCC"> to make it</font>

158
00:08:22,540 --> 00:08:30,580
work with other other<font color="#E5E5E5"> persons of OpenGL</font>

159
00:08:26,979 --> 00:08:33,338
<font color="#CCCCCC">which</font><font color="#E5E5E5"> some older machines might support</font>

160
00:08:30,580 --> 00:08:38,848
but<font color="#CCCCCC"> not the new the new shiny things of</font>

161
00:08:33,339 --> 00:08:41,650
OpenGL<font color="#CCCCCC"> 4 for</font><font color="#E5E5E5"> example so this engine</font>

162
00:08:38,849 --> 00:08:43,990
<font color="#E5E5E5">tries to reduce what whichever</font>

163
00:08:41,650 --> 00:08:48,220
functionality is available<font color="#E5E5E5"> going for</font>

164
00:08:43,990 --> 00:08:52,839
from best to to older which affects

165
00:08:48,220 --> 00:08:54,480
performance<font color="#CCCCCC"> map</font><font color="#E5E5E5"> if the new version</font><font color="#CCCCCC"> of</font>

166
00:08:52,839 --> 00:08:57,570
OpenGL is available<font color="#CCCCCC"> its</font>

167
00:08:54,480 --> 00:09:01,880
work really fast<font color="#E5E5E5"> and much better than</font>

168
00:08:57,570 --> 00:09:07,290
<font color="#CCCCCC">the nowadays</font><font color="#E5E5E5"> and the other aspect of</font>

169
00:09:01,880 --> 00:09:09,240
designing this new<font color="#E5E5E5"> engine is that is it</font>

170
00:09:07,290 --> 00:09:12,469
<font color="#E5E5E5">changes from the fixed pipeline of</font>

171
00:09:09,240 --> 00:09:18,180
OpenGL<font color="#E5E5E5"> to</font><font color="#CCCCCC"> s shader based modern OpenGL</font>

172
00:09:12,470 --> 00:09:21,660
<font color="#CCCCCC">which makes it easier to to write some</font>

173
00:09:18,180 --> 00:09:24,569
plugins<font color="#E5E5E5"> to to render anything and also</font>

174
00:09:21,660 --> 00:09:28,650
it tries to<font color="#E5E5E5"> be high performance by</font><font color="#CCCCCC"> using</font>

175
00:09:24,570 --> 00:09:31,020
the following<font color="#E5E5E5"> the approaching driver</font>

176
00:09:28,650 --> 00:09:36,569
<font color="#CCCCCC">over health design principles which in</font>

177
00:09:31,020 --> 00:09:39,329
summary means that due to all the the

178
00:09:36,570 --> 00:09:41,970
data preparation work on the<font color="#E5E5E5"> CPU in a</font>

179
00:09:39,330 --> 00:09:44,400
buffer in a low-level buffer you don't

180
00:09:41,970 --> 00:09:46,860
call<font color="#E5E5E5"> opengl functions at</font><font color="#CCCCCC"> all and what</font>

181
00:09:44,400 --> 00:09:51,090
you have all the data<font color="#E5E5E5"> already you call</font>

182
00:09:46,860 --> 00:09:53,190
the opengl function once to tell it<font color="#E5E5E5"> to</font>

183
00:09:51,090 --> 00:09:58,230
draw<font color="#E5E5E5"> everything in a single</font><font color="#CCCCCC"> batch or two</font>

184
00:09:53,190 --> 00:10:02,160
boxes<font color="#CCCCCC"> or whatever so</font><font color="#E5E5E5"> that makes it goofy</font>

185
00:09:58,230 --> 00:10:06,690
use correctly<font color="#E5E5E5"> the powerful GPUs that</font>

186
00:10:02,160 --> 00:10:10,620
nowadays<font color="#E5E5E5"> are available and also the</font>

187
00:10:06,690 --> 00:10:13,020
geometry<font color="#CCCCCC"> of nodes and</font><font color="#E5E5E5"> edges</font><font color="#CCCCCC"> before it</font>

188
00:10:10,620 --> 00:10:15,270
was being repeated and<font color="#E5E5E5"> then again and</font>

189
00:10:13,020 --> 00:10:17,790
<font color="#CCCCCC">again now we have one instance of the</font>

190
00:10:15,270 --> 00:10:20,220
<font color="#CCCCCC">know geometry and we transform</font><font color="#E5E5E5"> it on the</font>

191
00:10:17,790 --> 00:10:24,949
sailors<font color="#E5E5E5"> so that saves memory for the</font>

192
00:10:20,220 --> 00:10:29,880
graphics card and<font color="#E5E5E5"> that saves that</font>

193
00:10:24,950 --> 00:10:32,850
<font color="#E5E5E5">interchange and about the previous</font>

194
00:10:29,880 --> 00:10:36,360
problem that I<font color="#CCCCCC"> talked about</font><font color="#E5E5E5"> geo DL or</font>

195
00:10:32,850 --> 00:10:38,370
the<font color="#E5E5E5"> like</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> Java</font><font color="#CCCCCC"> Grameen Liberty I</font>

196
00:10:36,360 --> 00:10:42,420
think the correct choice is this<font color="#E5E5E5"> one</font>

197
00:10:38,370 --> 00:10:46,260
first because<font color="#E5E5E5"> it's maintained nowadays</font>

198
00:10:42,420 --> 00:10:49,670
<font color="#E5E5E5">it also offers spoken support so in the</font>

199
00:10:46,260 --> 00:10:54,540
<font color="#E5E5E5">future if we needed we just can use it</font>

200
00:10:49,670 --> 00:10:58,560
but the<font color="#E5E5E5"> IE WT problem why what can we do</font>

201
00:10:54,540 --> 00:11:01,349
to build<font color="#E5E5E5"> user interface well there is</font>

202
00:10:58,560 --> 00:11:04,430
one small project in github<font color="#CCCCCC"> an official</font>

203
00:11:01,350 --> 00:11:06,810
that offers<font color="#E5E5E5"> that it works quite well</font>

204
00:11:04,430 --> 00:11:07,510
<font color="#E5E5E5">only for Windows and Linux at the moment</font>

205
00:11:06,810 --> 00:11:12,250
<font color="#E5E5E5">by</font>

206
00:11:07,510 --> 00:11:17,230
we would like<font color="#CCCCCC"> to import implement it for</font>

207
00:11:12,250 --> 00:11:34,209
<font color="#CCCCCC">OS X - and make it better</font><font color="#E5E5E5"> and contribute</font>

208
00:11:17,230 --> 00:11:36,760
that let's do a small<font color="#CCCCCC"> demo</font><font color="#E5E5E5"> okay so we</font>

209
00:11:34,209 --> 00:11:40,388
<font color="#CCCCCC">close goofy with the same graph and we</font>

210
00:11:36,760 --> 00:11:43,300
are using the<font color="#CCCCCC"> the new engine we are</font>

211
00:11:40,389 --> 00:11:46,930
using<font color="#E5E5E5"> it with a very simple</font><font color="#CCCCCC"> car which is</font>

212
00:11:43,300 --> 00:11:49,540
<font color="#CCCCCC">the integrative intro card</font><font color="#E5E5E5"> it was much</font>

213
00:11:46,930 --> 00:11:52,569
<font color="#E5E5E5">better if you if you use a powerful</font><font color="#CCCCCC"> card</font>

214
00:11:49,540 --> 00:11:55,870
<font color="#CCCCCC">card</font><font color="#E5E5E5"> but as you can</font><font color="#CCCCCC"> see this is a this</font>

215
00:11:52,570 --> 00:12:04,060
<font color="#CCCCCC">is</font><font color="#E5E5E5"> a window</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is completely out of</font>

216
00:11:55,870 --> 00:12:09,670
<font color="#CCCCCC">coffee</font><font color="#E5E5E5"> so you can you</font><font color="#CCCCCC"> can use it in your</font>

217
00:12:04,060 --> 00:12:13,180
<font color="#CCCCCC">own programs it's also tested on on</font>

218
00:12:09,670 --> 00:12:15,569
different drivers for example if we

219
00:12:13,180 --> 00:12:18,550
currently crashes on my Linux

220
00:12:15,569 --> 00:12:21,969
installation but this engine<font color="#E5E5E5"> doesn't</font>

221
00:12:18,550 --> 00:12:25,240
grass and will work fine<font color="#E5E5E5"> and this is a</font>

222
00:12:21,970 --> 00:12:28,110
smaller graph but<font color="#CCCCCC"> we have seen it</font><font color="#E5E5E5"> work</font>

223
00:12:25,240 --> 00:12:30,550
with millions and<font color="#E5E5E5"> millions of edges</font>

224
00:12:28,110 --> 00:12:33,130
which is<font color="#E5E5E5"> not possible with current Goofy</font>

225
00:12:30,550 --> 00:12:33,609
and<font color="#CCCCCC"> Matthew will tell us about that</font>

226
00:12:33,130 --> 00:12:44,800
later

227
00:12:33,610 --> 00:12:47,470
so now<font color="#CCCCCC"> thank you so</font><font color="#E5E5E5"> know that we've seen</font>

228
00:12:44,800 --> 00:12:51,670
the whole<font color="#CCCCCC"> part about</font><font color="#E5E5E5"> how fixing jaffe in</font>

229
00:12:47,470 --> 00:12:53,440
the<font color="#CCCCCC"> java world i'm gonna try to explore</font>

230
00:12:51,670 --> 00:12:55,769
what it could make possible<font color="#E5E5E5"> or</font>

231
00:12:53,440 --> 00:12:58,060
impossible to<font color="#E5E5E5"> write</font><font color="#CCCCCC"> Jaffee for the web</font>

232
00:12:55,769 --> 00:13:01,000
<font color="#E5E5E5">first</font><font color="#CCCCCC"> I think the</font><font color="#E5E5E5"> most important thing</font>

233
00:12:58,060 --> 00:13:05,138
is to describe what I think is

234
00:13:01,000 --> 00:13:08,050
<font color="#CCCCCC">challenging is in writing Jeffie I've</font>

235
00:13:05,139 --> 00:13:11,550
been using it<font color="#E5E5E5"> years ago and I think</font>

236
00:13:08,050 --> 00:13:13,930
<font color="#CCCCCC">those</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> three main qualities of jaffe</font>

237
00:13:11,550 --> 00:13:16,120
the first thing is that<font color="#E5E5E5"> it must</font><font color="#CCCCCC"> be able</font>

238
00:13:13,930 --> 00:13:18,599
<font color="#E5E5E5">to render hundreds of thousands of items</font>

239
00:13:16,120 --> 00:13:21,569
<font color="#E5E5E5">or millions of items</font>

240
00:13:18,600 --> 00:13:23,430
really smoothly<font color="#E5E5E5"> like as often as</font>

241
00:13:21,569 --> 00:13:25,620
possible if possible like 30 times<font color="#CCCCCC"> per</font>

242
00:13:23,430 --> 00:13:29,569
second<font color="#E5E5E5"> without freezing the whole</font>

243
00:13:25,620 --> 00:13:33,449
computer or<font color="#CCCCCC"> even just software itself</font>

244
00:13:29,569 --> 00:13:36,000
also<font color="#CCCCCC"> it needs</font><font color="#E5E5E5"> to have a performant graph</font>

245
00:13:33,449 --> 00:13:38,069
model we need to be<font color="#CCCCCC"> able to at the</font><font color="#E5E5E5"> same</font>

246
00:13:36,000 --> 00:13:41,930
time that we're drawing<font color="#E5E5E5"> this whole graph</font>

247
00:13:38,069 --> 00:13:44,189
30 times per second compute like

248
00:13:41,930 --> 00:13:46,680
community detection<font color="#E5E5E5"> algorithms or</font>

249
00:13:44,190 --> 00:13:49,500
<font color="#E5E5E5">ranking legal reasons</font><font color="#CCCCCC"> all of this still</font>

250
00:13:46,680 --> 00:13:52,319
smoothly and without freezing the whole

251
00:13:49,500 --> 00:13:54,389
computer also<font color="#E5E5E5"> software itself and</font>

252
00:13:52,319 --> 00:13:57,599
<font color="#E5E5E5">finally one of the main</font><font color="#CCCCCC"> qualities of the</font>

253
00:13:54,389 --> 00:14:00,389
<font color="#E5E5E5">fees</font><font color="#CCCCCC"> it's plug-in capabilities you have</font>

254
00:13:57,600 --> 00:14:01,949
<font color="#CCCCCC">to be able if for your needs</font><font color="#E5E5E5"> your</font>

255
00:14:00,389 --> 00:14:04,709
business<font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> implement a specific</font>

256
00:14:01,949 --> 00:14:06,689
ranking<font color="#E5E5E5"> algorithm or</font><font color="#CCCCCC"> something to</font>

257
00:14:04,709 --> 00:14:09,359
<font color="#E5E5E5">integrate it inside</font><font color="#CCCCCC"> Rafi</font><font color="#E5E5E5"> without having</font>

258
00:14:06,690 --> 00:14:11,790
to rebuild the whole thing<font color="#E5E5E5"> also</font><font color="#CCCCCC"> this</font>

259
00:14:09,360 --> 00:14:13,290
<font color="#CCCCCC">allows</font><font color="#E5E5E5"> like the current marketplace of</font>

260
00:14:11,790 --> 00:14:15,810
<font color="#CCCCCC">jaffe</font><font color="#E5E5E5"> you can download a lot of</font>

261
00:14:13,290 --> 00:14:18,870
different features<font color="#E5E5E5"> that</font><font color="#CCCCCC"> make defeat</font>

262
00:14:15,810 --> 00:14:21,899
around Rafi and that makes it solve your

263
00:14:18,870 --> 00:14:26,449
business needs<font color="#E5E5E5"> so</font><font color="#CCCCCC"> those two free things</font>

264
00:14:21,899 --> 00:14:26,449
are I<font color="#CCCCCC"> think the three main challenges</font>

265
00:14:26,870 --> 00:14:31,589
about web development versus some

266
00:14:29,430 --> 00:14:34,500
obvious<font color="#E5E5E5"> trade-off when you come from the</font>

267
00:14:31,589 --> 00:14:38,519
Java world<font color="#CCCCCC"> go into the JavaScript world</font>

268
00:14:34,500 --> 00:14:40,439
<font color="#CCCCCC">let's see</font><font color="#E5E5E5"> like this first the most web</font>

269
00:14:38,519 --> 00:14:44,339
technologies have been mainly designed

270
00:14:40,439 --> 00:14:46,829
<font color="#E5E5E5">for writing interfaces so this whole</font>

271
00:14:44,339 --> 00:14:51,839
block management<font color="#E5E5E5"> styling forms inputs</font>

272
00:14:46,829 --> 00:14:54,000
<font color="#E5E5E5">this is so easy in</font><font color="#CCCCCC"> the web</font><font color="#E5E5E5"> this is made</font>

273
00:14:51,839 --> 00:14:58,170
for<font color="#E5E5E5"> it I I don't know exactly how it</font><font color="#CCCCCC"> is</font>

274
00:14:54,000 --> 00:15:02,519
<font color="#E5E5E5">in Java but I think it's okay thank you</font>

275
00:14:58,170 --> 00:15:04,949
<font color="#CCCCCC">and also if we successfully</font><font color="#E5E5E5"> bring defeat</font>

276
00:15:02,519 --> 00:15:09,000
to<font color="#E5E5E5"> the web we will still have it work in</font>

277
00:15:04,949 --> 00:15:11,219
every OS and also on mobiles

278
00:15:09,000 --> 00:15:13,680
<font color="#CCCCCC">I don't see that a</font><font color="#E5E5E5"> scientist working on</font>

279
00:15:11,220 --> 00:15:16,560
<font color="#CCCCCC">Rafi on mobile right</font><font color="#E5E5E5"> now but this</font><font color="#CCCCCC"> is</font>

280
00:15:13,680 --> 00:15:18,000
quite imaginable but<font color="#E5E5E5"> tablets I can</font>

281
00:15:16,560 --> 00:15:21,180
<font color="#CCCCCC">imagine a lot of people want to work</font>

282
00:15:18,000 --> 00:15:23,100
with Rafi on tablets<font color="#E5E5E5"> and you know</font><font color="#CCCCCC"> your</font>

283
00:15:21,180 --> 00:15:25,800
<font color="#E5E5E5">report effect to move the graph with</font>

284
00:15:23,100 --> 00:15:27,569
your fingers<font color="#CCCCCC"> things</font><font color="#E5E5E5"> like this this will</font>

285
00:15:25,800 --> 00:15:29,810
become possible<font color="#CCCCCC"> if we move to</font><font color="#E5E5E5"> the web</font>

286
00:15:27,569 --> 00:15:32,569
<font color="#E5E5E5">and without any effort</font>

287
00:15:29,810 --> 00:15:37,128
but at the same time<font color="#E5E5E5"> was big losses that</font>

288
00:15:32,569 --> 00:15:39,529
we will meet instantly<font color="#E5E5E5"> memory kind of</font>

289
00:15:37,129 --> 00:15:41,810
doesn't<font color="#E5E5E5"> exist in JavaScript we never</font>

290
00:15:39,529 --> 00:15:43,850
know how<font color="#E5E5E5"> much</font><font color="#CCCCCC"> memory we are</font><font color="#E5E5E5"> using we do</font>

291
00:15:41,810 --> 00:15:46,638
<font color="#E5E5E5">not know how much memory we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> use and</font>

292
00:15:43,850 --> 00:15:50,149
this boundary<font color="#E5E5E5"> is actually intact even in</font>

293
00:15:46,639 --> 00:15:52,670
depends of<font color="#CCCCCC"> the user's</font><font color="#E5E5E5"> computer</font><font color="#CCCCCC"> his</font>

294
00:15:50,149 --> 00:15:55,040
browser<font color="#E5E5E5"> if the browser are how the tabs</font>

295
00:15:52,670 --> 00:15:56,240
opened etc so we know at some<font color="#E5E5E5"> point it</font>

296
00:15:55,040 --> 00:15:59,089
might crash and make the whole thing

297
00:15:56,240 --> 00:16:03,019
<font color="#CCCCCC">stop working but we never know when this</font>

298
00:15:59,089 --> 00:16:04,759
is quite uncomfortable to work with also

299
00:16:03,019 --> 00:16:08,800
<font color="#E5E5E5">we do not have multi-threading in the</font>

300
00:16:04,759 --> 00:16:12,430
web about<font color="#CCCCCC"> it later but we do not</font><font color="#E5E5E5"> have</font>

301
00:16:08,800 --> 00:16:15,469
<font color="#CCCCCC">very much usable multi-threading and</font>

302
00:16:12,430 --> 00:16:16,758
<font color="#E5E5E5">finally one minor point that is not</font>

303
00:16:15,470 --> 00:16:19,100
written<font color="#E5E5E5"> here</font><font color="#CCCCCC"> I will not speak</font><font color="#E5E5E5"> about</font>

304
00:16:16,759 --> 00:16:21,920
canvas and<font color="#CCCCCC"> SVG</font><font color="#E5E5E5"> etc because</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is all</font>

305
00:16:19,100 --> 00:16:24,649
CPU based and this doesn't scale so we

306
00:16:21,920 --> 00:16:26,059
will already<font color="#CCCCCC"> accept that if def you</font>

307
00:16:24,649 --> 00:16:28,939
moves to the web<font color="#E5E5E5"> it's gonna be with</font>

308
00:16:26,059 --> 00:16:30,800
WebGL<font color="#CCCCCC"> but WebGL which is our</font><font color="#E5E5E5"> best</font>

309
00:16:28,939 --> 00:16:33,379
solution is<font color="#CCCCCC"> just a subset of a Pangea</font>

310
00:16:30,800 --> 00:16:35,779
<font color="#CCCCCC">it's based on V OpenGL ES specifications</font>

311
00:16:33,379 --> 00:16:37,730
that<font color="#CCCCCC"> is a portable OpenGL and it lacks</font>

312
00:16:35,779 --> 00:16:41,559
some features<font color="#CCCCCC"> of it and other features</font>

313
00:16:37,730 --> 00:16:44,660
<font color="#E5E5E5">are actually badly implemented so that's</font>

314
00:16:41,559 --> 00:16:48,589
<font color="#E5E5E5">something we will</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to work with so</font>

315
00:16:44,660 --> 00:16:51,139
let's talk<font color="#CCCCCC"> about web performances I</font>

316
00:16:48,589 --> 00:16:53,240
think one way<font color="#E5E5E5"> to synthesize</font>

317
00:16:51,139 --> 00:16:55,100
<font color="#E5E5E5">all the research these improvements that</font>

318
00:16:53,240 --> 00:16:57,170
have<font color="#E5E5E5"> been</font><font color="#CCCCCC"> brought</font><font color="#E5E5E5"> to this community in</font>

319
00:16:55,100 --> 00:16:58,879
the last<font color="#E5E5E5"> few</font><font color="#CCCCCC"> years there's a</font><font color="#E5E5E5"> lot of</font>

320
00:16:57,170 --> 00:17:01,189
people<font color="#CCCCCC"> who have been working</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> make the</font>

321
00:16:58,879 --> 00:17:03,620
web more performant<font color="#CCCCCC"> by</font><font color="#E5E5E5"> improving the</font>

322
00:17:01,189 --> 00:17:08,178
<font color="#E5E5E5">JavaScript engines themselves</font><font color="#CCCCCC"> making the</font>

323
00:17:03,620 --> 00:17:12,109
most famous success of this part of<font color="#E5E5E5"> this</font>

324
00:17:08,179 --> 00:17:16,809
field is a v8<font color="#E5E5E5"> from</font><font color="#CCCCCC"> Chrome it's maybe one</font>

325
00:17:12,109 --> 00:17:19,639
of if not the best<font color="#E5E5E5"> interpreting the</font>

326
00:17:16,809 --> 00:17:22,510
interpreted language<font color="#E5E5E5"> and shine that we</font>

327
00:17:19,640 --> 00:17:25,339
have now you<font color="#CCCCCC"> can write JavaScript</font><font color="#E5E5E5"> play</font>

328
00:17:22,510 --> 00:17:28,309
without<font color="#E5E5E5"> caring about performances and v8</font>

329
00:17:25,339 --> 00:17:30,350
will make it like perfect that's very

330
00:17:28,309 --> 00:17:32,450
very nice and<font color="#E5E5E5"> on the other hand</font><font color="#CCCCCC"> those</font>

331
00:17:30,350 --> 00:17:34,730
people who are<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make the web a</font>

332
00:17:32,450 --> 00:17:37,220
performant platform to<font color="#CCCCCC"> allow people to</font>

333
00:17:34,730 --> 00:17:39,320
<font color="#E5E5E5">actually run byte coordinate so you will</font>

334
00:17:37,220 --> 00:17:41,720
develop<font color="#CCCCCC"> low level applications with C++</font>

335
00:17:39,320 --> 00:17:42,658
<font color="#CCCCCC">or</font><font color="#E5E5E5"> rest and compile it and put it in a</font>

336
00:17:41,720 --> 00:17:45,840
browser<font color="#E5E5E5"> and</font>

337
00:17:42,659 --> 00:17:48,149
the brother becomes<font color="#E5E5E5"> kind of a new JVM or</font>

338
00:17:45,840 --> 00:17:50,580
something that will<font color="#CCCCCC"> make people able</font><font color="#E5E5E5"> to</font>

339
00:17:48,149 --> 00:17:54,689
just run fast code in it<font color="#E5E5E5"> but it's no</font>

340
00:17:50,580 --> 00:17:58,039
more JavaScript<font color="#E5E5E5"> so the JavaScript part</font>

341
00:17:54,690 --> 00:18:02,369
let's say it's all<font color="#E5E5E5"> the web development</font>

342
00:17:58,039 --> 00:18:04,919
<font color="#E5E5E5">that is modern now like react</font>

343
00:18:02,369 --> 00:18:07,199
application<font color="#CCCCCC"> angular always frameworks</font>

344
00:18:04,919 --> 00:18:09,929
and<font color="#CCCCCC"> Nagma 6ik massive</font><font color="#E5E5E5"> and the new</font>

345
00:18:07,200 --> 00:18:12,330
debugging tools<font color="#E5E5E5"> all this part that is</font>

346
00:18:09,929 --> 00:18:14,879
what<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think is yeah web development</font>

347
00:18:12,330 --> 00:18:16,649
<font color="#E5E5E5">today it's really great because as I</font>

348
00:18:14,879 --> 00:18:20,789
<font color="#E5E5E5">said you can just write any kind of</font>

349
00:18:16,649 --> 00:18:23,988
JavaScript and<font color="#CCCCCC"> it will be fast but we</font>

350
00:18:20,789 --> 00:18:26,820
have kind of<font color="#CCCCCC"> a</font><font color="#E5E5E5"> specific use case here</font>

351
00:18:23,989 --> 00:18:30,720
<font color="#E5E5E5">writing thousands of Dom nodes and</font>

352
00:18:26,820 --> 00:18:33,210
having run<font color="#E5E5E5"> smoothly is something drawing</font>

353
00:18:30,720 --> 00:18:35,879
millions of items<font color="#E5E5E5"> is really</font><font color="#CCCCCC"> different so</font>

354
00:18:33,210 --> 00:18:38,970
<font color="#E5E5E5">I think all this web development</font>

355
00:18:35,879 --> 00:18:44,158
ecosystem<font color="#E5E5E5"> doesn't actually solve all our</font>

356
00:18:38,970 --> 00:18:45,659
<font color="#CCCCCC">issues and on the other hand writing a</font>

357
00:18:44,159 --> 00:18:48,989
low-level<font color="#E5E5E5"> code and running it in the</font>

358
00:18:45,659 --> 00:18:53,729
browser as<font color="#E5E5E5"> a as if it was a virtual</font>

359
00:18:48,989 --> 00:18:56,249
machine<font color="#CCCCCC"> only is not what</font><font color="#E5E5E5"> I'm web</font>

360
00:18:53,729 --> 00:19:00,080
developer and<font color="#E5E5E5"> I want to keep beneficiate</font>

361
00:18:56,249 --> 00:19:02,549
from all those nice things<font color="#E5E5E5"> the debuggers</font>

362
00:19:00,080 --> 00:19:05,129
the new specifications of the<font color="#E5E5E5"> derived</font>

363
00:19:02,549 --> 00:19:08,249
<font color="#E5E5E5">cubes that are brought every year</font>

364
00:19:05,129 --> 00:19:13,399
etcetera<font color="#E5E5E5"> so what I don't like in this</font>

365
00:19:08,249 --> 00:19:16,769
pot is<font color="#CCCCCC"> that it's no more</font><font color="#E5E5E5"> web development</font>

366
00:19:13,399 --> 00:19:18,658
<font color="#CCCCCC">we were writing the slides</font><font color="#E5E5E5"> no not in the</font>

367
00:19:16,769 --> 00:19:20,429
web culture so many times that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just</font>

368
00:19:18,659 --> 00:19:23,369
created a label<font color="#E5E5E5"> for</font><font color="#CCCCCC"> it that's gonna</font><font color="#E5E5E5"> make</font>

369
00:19:20,429 --> 00:19:25,559
<font color="#CCCCCC">it easier to identify</font><font color="#E5E5E5"> so to wrap</font><font color="#CCCCCC"> up this</font>

370
00:19:23,369 --> 00:19:28,080
<font color="#CCCCCC">pot</font><font color="#E5E5E5"> we don't have the same needs as</font>

371
00:19:25,559 --> 00:19:30,529
classic web apps<font color="#E5E5E5"> WebGL is the best we</font>

372
00:19:28,080 --> 00:19:33,178
have<font color="#CCCCCC"> and we</font><font color="#E5E5E5"> want if we move to the web</font>

373
00:19:30,529 --> 00:19:35,190
to create<font color="#CCCCCC"> something that is web we want</font>

374
00:19:33,179 --> 00:19:37,080
<font color="#E5E5E5">to</font><font color="#CCCCCC"> benefit from all those nice things</font>

375
00:19:35,190 --> 00:19:40,919
<font color="#E5E5E5">that are that have</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> brought</font><font color="#CCCCCC"> in web</font>

376
00:19:37,080 --> 00:19:42,779
<font color="#E5E5E5">development</font><font color="#CCCCCC"> bills</font><font color="#E5E5E5"> last few years now yum</font>

377
00:19:40,919 --> 00:19:45,359
<font color="#E5E5E5">and I have been developing</font><font color="#CCCCCC"> Sigma draya's</font>

378
00:19:42,779 --> 00:19:47,009
<font color="#E5E5E5">for some years and we have some</font>

379
00:19:45,359 --> 00:19:52,199
feedbacks about<font color="#E5E5E5"> what is doable and what</font>

380
00:19:47,009 --> 00:19:54,800
is<font color="#E5E5E5"> hard and yeah about writing web web</font>

381
00:19:52,200 --> 00:19:56,870
<font color="#E5E5E5">based graph visualization library</font>

382
00:19:54,800 --> 00:20:00,409
so first let's speak<font color="#CCCCCC"> about a bit about</font>

383
00:19:56,870 --> 00:20:02,209
WebGL<font color="#E5E5E5"> for a web developer working with</font>

384
00:20:00,410 --> 00:20:05,510
WebGL means working<font color="#E5E5E5"> with</font><font color="#CCCCCC"> low-level data</font>

385
00:20:02,210 --> 00:20:08,420
structures which is not very in the<font color="#CCCCCC"> Web</font>

386
00:20:05,510 --> 00:20:10,820
<font color="#CCCCCC">Filter</font><font color="#E5E5E5"> to say quickly you work with byte</font>

387
00:20:08,420 --> 00:20:12,760
arrays<font color="#E5E5E5"> that's nice but</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> didn't have</font>

388
00:20:10,820 --> 00:20:15,439
<font color="#E5E5E5">the API to actually do what you want</font>

389
00:20:12,760 --> 00:20:17,060
you cannot allocate or<font color="#E5E5E5"> an allocate</font>

390
00:20:15,440 --> 00:20:17,900
memory as you<font color="#E5E5E5"> want because this is not</font>

391
00:20:17,060 --> 00:20:20,300
<font color="#E5E5E5">JavaScript</font>

392
00:20:17,900 --> 00:20:23,150
this is not what<font color="#E5E5E5"> JavaScript does and so</font>

393
00:20:20,300 --> 00:20:26,300
this is get enough painful to work with

394
00:20:23,150 --> 00:20:29,050
WebGL for a web developer also rendering

395
00:20:26,300 --> 00:20:31,250
efficiently custom shapes is hot I<font color="#E5E5E5"> mean</font>

396
00:20:29,050 --> 00:20:32,960
the first<font color="#E5E5E5"> time I started working with</font>

397
00:20:31,250 --> 00:20:35,630
WebGL<font color="#CCCCCC"> I spent more than</font><font color="#E5E5E5"> a week</font><font color="#CCCCCC"> to just</font>

398
00:20:32,960 --> 00:20:37,490
draw a<font color="#CCCCCC"> plane</font><font color="#E5E5E5"> disk and another week</font><font color="#CCCCCC"> to</font>

399
00:20:35,630 --> 00:20:40,550
draw a plane disk in front of another

400
00:20:37,490 --> 00:20:43,310
<font color="#CCCCCC">disc that</font><font color="#E5E5E5"> was kind of awful and it</font>

401
00:20:40,550 --> 00:20:45,860
requires lots of tweaks and every<font color="#CCCCCC"> site</font>

402
00:20:43,310 --> 00:20:47,419
<font color="#CCCCCC">and</font><font color="#E5E5E5"> DOMA has been working</font><font color="#CCCCCC"> just to draw</font>

403
00:20:45,860 --> 00:20:50,090
<font color="#E5E5E5">curves efficiently and he could speak</font>

404
00:20:47,420 --> 00:20:53,900
<font color="#CCCCCC">two</font><font color="#E5E5E5"> hours about it and this</font><font color="#CCCCCC"> is quite</font>

405
00:20:50,090 --> 00:20:55,429
painful<font color="#CCCCCC"> also it is not</font><font color="#E5E5E5"> 100% stable</font><font color="#CCCCCC"> if</font>

406
00:20:53,900 --> 00:20:57,650
you work<font color="#CCCCCC"> with WebGL you have to accept</font>

407
00:20:55,430 --> 00:21:00,140
<font color="#E5E5E5">that at some point it will break and</font>

408
00:20:57,650 --> 00:21:02,810
stop working<font color="#CCCCCC"> and you will not find out</font>

409
00:21:00,140 --> 00:21:07,550
why and also<font color="#CCCCCC"> you will see a lot of weird</font>

410
00:21:02,810 --> 00:21:10,370
artifacts<font color="#E5E5E5"> really a lot of them again but</font>

411
00:21:07,550 --> 00:21:12,080
it's the best<font color="#E5E5E5"> we have about the graph</font>

412
00:21:10,370 --> 00:21:15,739
model we have kind of a dilemma here

413
00:21:12,080 --> 00:21:18,020
<font color="#E5E5E5">because working with efficient dynamic</font>

414
00:21:15,740 --> 00:21:20,390
JavaScript structures such<font color="#E5E5E5"> as objects</font>

415
00:21:18,020 --> 00:21:22,610
and<font color="#E5E5E5"> arrays etc is really nice because</font>

416
00:21:20,390 --> 00:21:24,830
<font color="#E5E5E5">the ideas are nice and it's all fast</font>

417
00:21:22,610 --> 00:21:28,310
because the<font color="#E5E5E5"> eight is awesome which takes</font>

418
00:21:24,830 --> 00:21:30,139
a lot of space<font color="#CCCCCC"> in run it takes so</font><font color="#E5E5E5"> much</font>

419
00:21:28,310 --> 00:21:32,360
space in run that<font color="#E5E5E5"> we expect that at some</font>

420
00:21:30,140 --> 00:21:36,680
<font color="#CCCCCC">point we might cross this imaginary</font>

421
00:21:32,360 --> 00:21:39,560
boundary that we cannot identify so this

422
00:21:36,680 --> 00:21:42,290
is<font color="#E5E5E5"> not</font><font color="#CCCCCC"> our solution we cannot base our</font>

423
00:21:39,560 --> 00:21:44,240
own<font color="#CCCCCC"> graph</font><font color="#E5E5E5"> model on these data structures</font>

424
00:21:42,290 --> 00:21:46,100
<font color="#E5E5E5">we also indices with one because at some</font>

425
00:21:44,240 --> 00:21:47,690
point<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> going to be the issue</font><font color="#E5E5E5"> and</font>

426
00:21:46,100 --> 00:21:50,570
at the same time we could<font color="#E5E5E5"> work</font><font color="#CCCCCC"> with by</font>

427
00:21:47,690 --> 00:21:51,050
the res<font color="#CCCCCC"> but it's not in the web</font><font color="#E5E5E5"> culture</font>

428
00:21:50,570 --> 00:21:52,610
<font color="#CCCCCC">style</font>

429
00:21:51,050 --> 00:21:54,800
there's lots of things<font color="#CCCCCC"> that are very</font>

430
00:21:52,610 --> 00:21:58,580
<font color="#CCCCCC">hard to</font><font color="#E5E5E5"> do and the code will</font><font color="#CCCCCC"> be hard to</font>

431
00:21:54,800 --> 00:22:00,110
maintain and<font color="#CCCCCC"> ought</font><font color="#E5E5E5"> to test so we</font><font color="#CCCCCC"> think</font>

432
00:21:58,580 --> 00:22:02,840
the best<font color="#E5E5E5"> solution would be to have a</font>

433
00:22:00,110 --> 00:22:04,760
<font color="#CCCCCC">hybrid solution but still this is B this</font>

434
00:22:02,840 --> 00:22:06,649
<font color="#E5E5E5">is going</font><font color="#CCCCCC"> to be something challenging</font>

435
00:22:04,760 --> 00:22:10,429
finally I want to<font color="#E5E5E5"> speak a</font><font color="#CCCCCC"> bit about</font>

436
00:22:06,650 --> 00:22:12,110
threading<font color="#E5E5E5"> so we have no</font><font color="#CCCCCC"> military means</font>

437
00:22:10,429 --> 00:22:14,090
<font color="#E5E5E5">of a script but this is how it works</font><font color="#CCCCCC"> you</font>

438
00:22:12,110 --> 00:22:16,340
<font color="#CCCCCC">open a</font><font color="#E5E5E5"> web page and you</font><font color="#CCCCCC"> have one thread</font>

439
00:22:14,090 --> 00:22:18,649
<font color="#CCCCCC">that will be shared between</font><font color="#E5E5E5"> the</font>

440
00:22:16,340 --> 00:22:20,720
JavaScript engine<font color="#CCCCCC"> so as</font><font color="#E5E5E5"> long as</font><font color="#CCCCCC"> you have</font>

441
00:22:18,650 --> 00:22:22,450
the last crip training<font color="#E5E5E5"> nothing</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> runs</font>

442
00:22:20,720 --> 00:22:25,100
in the thread<font color="#E5E5E5"> and the rendering</font><font color="#CCCCCC"> engine</font>

443
00:22:22,450 --> 00:22:26,929
<font color="#CCCCCC">so this is called the event</font><font color="#E5E5E5"> loop if you</font>

444
00:22:25,100 --> 00:22:29,449
have a synchronous<font color="#E5E5E5"> task running into the</font>

445
00:22:26,929 --> 00:22:31,250
main thread the event<font color="#E5E5E5"> loop will be</font>

446
00:22:29,450 --> 00:22:33,860
blocked and<font color="#E5E5E5"> you won't be able to scroll</font>

447
00:22:31,250 --> 00:22:36,260
the page or hover simple buttons

448
00:22:33,860 --> 00:22:38,809
elements of this kind<font color="#E5E5E5"> of things but</font>

449
00:22:36,260 --> 00:22:40,910
first<font color="#E5E5E5"> of</font><font color="#CCCCCC"> all if we stop if we stop</font>

450
00:22:38,809 --> 00:22:42,710
working<font color="#E5E5E5"> with canvas</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> SVG or</font><font color="#CCCCCC"> DOM and</font>

451
00:22:40,910 --> 00:22:44,840
<font color="#CCCCCC">we</font><font color="#E5E5E5"> start working with work via the</font>

452
00:22:42,710 --> 00:22:47,179
rendering will not freeze<font color="#CCCCCC"> event loop</font>

453
00:22:44,840 --> 00:22:49,309
which is kind of<font color="#E5E5E5"> a good</font><font color="#CCCCCC"> thing even if</font>

454
00:22:47,179 --> 00:22:51,860
the<font color="#E5E5E5"> GPU takes time to render the image</font>

455
00:22:49,309 --> 00:22:54,530
so even<font color="#CCCCCC"> clip will still be properly</font>

456
00:22:51,860 --> 00:22:57,409
running and finally we have web workers

457
00:22:54,530 --> 00:23:00,260
that allow us<font color="#CCCCCC"> to actually run heavy</font>

458
00:22:57,410 --> 00:23:03,590
computations aside<font color="#E5E5E5"> from the main thread</font>

459
00:23:00,260 --> 00:23:05,660
<font color="#E5E5E5">so without blocking the event loop but</font>

460
00:23:03,590 --> 00:23:07,610
you have to share<font color="#E5E5E5"> your</font><font color="#CCCCCC"> data and actually</font>

461
00:23:05,660 --> 00:23:09,049
transfer it so as long as<font color="#E5E5E5"> the web worker</font>

462
00:23:07,610 --> 00:23:11,330
is running is working with your

463
00:23:09,049 --> 00:23:14,690
<font color="#E5E5E5">low-level structures you cannot access</font>

464
00:23:11,330 --> 00:23:17,000
it<font color="#CCCCCC"> any</font><font color="#E5E5E5"> more from the JavaScript</font><font color="#CCCCCC"> main</font>

465
00:23:14,690 --> 00:23:19,370
thread which is<font color="#CCCCCC"> very weird</font><font color="#E5E5E5"> it's like all</font>

466
00:23:17,000 --> 00:23:20,780
your<font color="#CCCCCC"> references are broken and you</font>

467
00:23:19,370 --> 00:23:23,750
cannot do<font color="#E5E5E5"> anything so you cannot render</font>

468
00:23:20,780 --> 00:23:26,418
it<font color="#CCCCCC"> any more</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> know that there's a new</font>

469
00:23:23,750 --> 00:23:28,549
API that's named offline canvas API that

470
00:23:26,419 --> 00:23:30,679
might allow us<font color="#CCCCCC"> to actually trigger</font>

471
00:23:28,549 --> 00:23:32,510
rendering from<font color="#E5E5E5"> the web worker so we</font>

472
00:23:30,679 --> 00:23:34,460
might<font color="#CCCCCC"> have actually the whole rendering</font>

473
00:23:32,510 --> 00:23:36,610
and computation<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Ryan working on the</font>

474
00:23:34,460 --> 00:23:40,760
web<font color="#E5E5E5"> worker and keep leaving group</font>

475
00:23:36,610 --> 00:23:42,590
<font color="#E5E5E5">running smoothly and safe so it's</font>

476
00:23:40,760 --> 00:23:44,750
actually not that bad

477
00:23:42,590 --> 00:23:48,199
we might be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do something working</font>

478
00:23:44,750 --> 00:23:51,559
<font color="#E5E5E5">nice so how to actually</font><font color="#CCCCCC"> move Jaffee to</font>

479
00:23:48,200 --> 00:23:53,090
the web we do think those two main

480
00:23:51,559 --> 00:23:54,799
solutions the<font color="#CCCCCC"> first one would be to</font>

481
00:23:53,090 --> 00:23:56,870
actually<font color="#E5E5E5"> recreate everything in</font>

482
00:23:54,799 --> 00:23:59,840
JavaScript<font color="#E5E5E5"> with all these modern tools</font>

483
00:23:56,870 --> 00:24:01,639
<font color="#CCCCCC">etc we already have graphology that</font>

484
00:23:59,840 --> 00:24:04,189
<font color="#E5E5E5">we've been presented here by</font><font color="#CCCCCC"> Guillaume</font>

485
00:24:01,640 --> 00:24:06,950
one or two years<font color="#CCCCCC"> ago so it's a graph</font>

486
00:24:04,190 --> 00:24:10,309
<font color="#CCCCCC">model but it's</font><font color="#E5E5E5"> mainly an API so</font><font color="#CCCCCC"> you can</font>

487
00:24:06,950 --> 00:24:12,860
reemployment it<font color="#E5E5E5"> while been officiating</font>

488
00:24:10,309 --> 00:24:14,590
by well benefiting from all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> plugins</font>

489
00:24:12,860 --> 00:24:18,740
that<font color="#CCCCCC"> have been already developed so</font>

490
00:24:14,590 --> 00:24:20,658
algorithms implementation mainly<font color="#CCCCCC"> Simba's</font>

491
00:24:18,740 --> 00:24:23,210
rendering angina<font color="#E5E5E5"> in the new version that</font>

492
00:24:20,659 --> 00:24:25,789
<font color="#CCCCCC">Siam's we've been working on is becoming</font>

493
00:24:23,210 --> 00:24:28,640
<font color="#E5E5E5">faster and faster so we</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> have</font>

494
00:24:25,789 --> 00:24:31,220
<font color="#CCCCCC">some code</font><font color="#E5E5E5"> we might actually wrap it up</font>

495
00:24:28,640 --> 00:24:34,549
and create<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that works</font><font color="#E5E5E5"> and also</font>

496
00:24:31,220 --> 00:24:36,350
it's working on<font color="#CCCCCC"> the web with the web</font>

497
00:24:34,549 --> 00:24:39,080
development spirit and tools so this is

498
00:24:36,350 --> 00:24:41,689
something<font color="#CCCCCC"> that I quite</font><font color="#E5E5E5"> like we could</font>

499
00:24:39,080 --> 00:24:43,520
also go to the<font color="#CCCCCC"> dropping everything in</font>

500
00:24:41,690 --> 00:24:49,039
C++<font color="#CCCCCC"> all</font><font color="#E5E5E5"> rest and compile it to bytecode</font>

501
00:24:43,520 --> 00:24:50,480
<font color="#CCCCCC">and</font><font color="#E5E5E5"> having a faster in software but this</font>

502
00:24:49,039 --> 00:24:52,850
<font color="#E5E5E5">won't be a black box because we need</font>

503
00:24:50,480 --> 00:24:55,850
actually<font color="#CCCCCC"> API so that we'll be able to</font>

504
00:24:52,850 --> 00:24:57,219
<font color="#CCCCCC">communicate</font><font color="#E5E5E5"> with JavaScript and I think</font>

505
00:24:55,850 --> 00:25:00,289
that's the main issue<font color="#E5E5E5"> with this solution</font>

506
00:24:57,220 --> 00:25:03,950
<font color="#E5E5E5">having</font><font color="#CCCCCC"> a low-level code that will open</font>

507
00:25:00,289 --> 00:25:06,530
<font color="#E5E5E5">the API that will work with simple</font>

508
00:25:03,950 --> 00:25:09,049
JavaScript<font color="#E5E5E5"> without having to work only</font>

509
00:25:06,530 --> 00:25:12,710
<font color="#E5E5E5">with low-level structures I mean in for</font>

510
00:25:09,049 --> 00:25:15,139
<font color="#E5E5E5">plugins developers could be painful and</font>

511
00:25:12,710 --> 00:25:17,240
I think it's better to<font color="#E5E5E5"> actually not do</font>

512
00:25:15,140 --> 00:25:19,340
this without this<font color="#CCCCCC"> plug-in constraints I</font>

513
00:25:17,240 --> 00:25:23,690
think the black box<font color="#E5E5E5"> would have been</font>

514
00:25:19,340 --> 00:25:26,030
something<font color="#E5E5E5"> acceptable but quite not so</font>

515
00:25:23,690 --> 00:25:28,100
our recommendation finally would be to

516
00:25:26,030 --> 00:25:30,799
<font color="#E5E5E5">actually embrace web culture and if we</font>

517
00:25:28,100 --> 00:25:34,668
want to<font color="#E5E5E5"> develop</font><font color="#CCCCCC"> Jeffie for the web not</font>

518
00:25:30,799 --> 00:25:36,889
<font color="#E5E5E5">trying to use a brother as a virtual</font>

519
00:25:34,669 --> 00:25:38,360
<font color="#E5E5E5">machine thing but more developing</font>

520
00:25:36,890 --> 00:25:41,000
<font color="#E5E5E5">something with JavaScript and all those</font>

521
00:25:38,360 --> 00:25:43,280
tools we have more solutions that we

522
00:25:41,000 --> 00:25:44,900
expected starting working with this talk

523
00:25:43,280 --> 00:25:46,280
we actually didn't expect to<font color="#E5E5E5"> say this</font><font color="#CCCCCC"> at</font>

524
00:25:44,900 --> 00:25:48,169
<font color="#CCCCCC">VN</font>

525
00:25:46,280 --> 00:25:50,450
<font color="#E5E5E5">especially you will see benchmarks but</font>

526
00:25:48,169 --> 00:25:52,070
the situation is<font color="#E5E5E5"> not</font><font color="#CCCCCC"> that bad for their</font>

527
00:25:50,450 --> 00:25:55,640
welfare implementation<font color="#E5E5E5"> without having</font>

528
00:25:52,070 --> 00:25:59,030
actually tried to<font color="#E5E5E5"> do</font><font color="#CCCCCC"> anything special</font>

529
00:25:55,640 --> 00:26:00,650
<font color="#CCCCCC">for this talk</font><font color="#E5E5E5"> and I think developing</font>

530
00:25:59,030 --> 00:26:03,110
<font color="#CCCCCC">jaffe for the web is something</font><font color="#E5E5E5"> that</font>

531
00:26:00,650 --> 00:26:05,600
<font color="#E5E5E5">would be totally possible with we have</font>

532
00:26:03,110 --> 00:26:07,280
<font color="#E5E5E5">to</font><font color="#CCCCCC"> rethink it with the capabilities of</font>

533
00:26:05,600 --> 00:26:09,980
<font color="#E5E5E5">the web and then we might</font><font color="#CCCCCC"> be able to</font>

534
00:26:07,280 --> 00:26:13,840
solve the<font color="#CCCCCC"> actual same problems which is</font>

535
00:26:09,980 --> 00:26:13,840
<font color="#E5E5E5">our go-to</font><font color="#CCCCCC"> that's nice</font>

536
00:26:15,090 --> 00:26:19,959
<font color="#E5E5E5">Thanks</font>

537
00:26:16,600 --> 00:26:22,889
so let's talk<font color="#E5E5E5"> about the speed right on</font>

538
00:26:19,960 --> 00:26:26,680
the web world<font color="#E5E5E5"> so we've done a benchmark</font>

539
00:26:22,890 --> 00:26:28,900
<font color="#E5E5E5">right so I'm going to show a few charts</font>

540
00:26:26,680 --> 00:26:31,810
and they have the frames per second on

541
00:26:28,900 --> 00:26:37,420
the y-axis<font color="#CCCCCC"> and</font><font color="#E5E5E5"> pay</font><font color="#CCCCCC"> attention that</font><font color="#E5E5E5"> is log</font>

542
00:26:31,810 --> 00:26:40,540
scales<font color="#E5E5E5"> so right it goes 10 100 1000</font>

543
00:26:37,420 --> 00:26:43,570
frames per second<font color="#E5E5E5"> right and so here we</font>

544
00:26:40,540 --> 00:26:46,780
test on different<font color="#E5E5E5"> networks</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> engines</font><font color="#CCCCCC"> the</font>

545
00:26:43,570 --> 00:26:48,970
current<font color="#E5E5E5"> deviant in OpenGL in orange in</font>

546
00:26:46,780 --> 00:26:50,770
blue in the<font color="#CCCCCC"> middle</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have the new</font>

547
00:26:48,970 --> 00:26:53,830
OpenGL engine that has just been

548
00:26:50,770 --> 00:26:56,650
<font color="#CCCCCC">presented by Eduardo and in gray we have</font>

549
00:26:53,830 --> 00:26:59,050
the WebGL engine<font color="#E5E5E5"> in JavaScript so</font>

550
00:26:56,650 --> 00:27:01,570
basically it's a<font color="#E5E5E5"> Sigma we just did not</font>

551
00:26:59,050 --> 00:27:04,510
try<font color="#E5E5E5"> to display the labels in this</font>

552
00:27:01,570 --> 00:27:05,830
benchmark<font color="#E5E5E5"> and it has been done on this</font>

553
00:27:04,510 --> 00:27:09,520
same computer which is a kind<font color="#CCCCCC"> of</font>

554
00:27:05,830 --> 00:27:12,159
researchers computer and this box<font color="#E5E5E5"> have</font>

555
00:27:09,520 --> 00:27:14,050
<font color="#CCCCCC">we</font><font color="#E5E5E5"> done with the Nvidia chip</font><font color="#CCCCCC"> I mean it's</font>

556
00:27:12,160 --> 00:27:16,930
not it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> the powerhouse right</font><font color="#E5E5E5"> and</font>

557
00:27:14,050 --> 00:27:19,030
the resolution is like<font color="#E5E5E5"> two thousand and</font>

558
00:27:16,930 --> 00:27:21,910
a few hundreds by one<font color="#E5E5E5"> hundred one</font>

559
00:27:19,030 --> 00:27:24,580
thousand and four<font color="#CCCCCC"> hundred</font><font color="#E5E5E5"> so quite a big</font>

560
00:27:21,910 --> 00:27:27,640
resolution and as you can<font color="#E5E5E5"> see on these</font>

561
00:27:24,580 --> 00:27:29,770
big networks<font color="#CCCCCC"> let's talk about the size</font>

562
00:27:27,640 --> 00:27:31,210
of just the end after the end you have

563
00:27:29,770 --> 00:27:32,650
the number<font color="#E5E5E5"> of nodes and after the e you</font>

564
00:27:31,210 --> 00:27:35,020
<font color="#E5E5E5">have the number of edges so</font><font color="#CCCCCC"> that this</font>

565
00:27:32,650 --> 00:27:37,750
one and<font color="#CCCCCC"> Marvel superheroes network has</font>

566
00:27:35,020 --> 00:27:39,790
<font color="#CCCCCC">ten thousand</font><font color="#E5E5E5"> nodes and one hundred</font>

567
00:27:37,750 --> 00:27:42,850
almost<font color="#CCCCCC"> two hundred thousand edges and</font>

568
00:27:39,790 --> 00:27:44,920
it's rendered<font color="#E5E5E5"> quite comfortably</font><font color="#CCCCCC"> with the</font>

569
00:27:42,850 --> 00:27:47,860
new engines above<font color="#CCCCCC"> fifty frames</font><font color="#E5E5E5"> per</font>

570
00:27:44,920 --> 00:27:50,380
second and<font color="#E5E5E5"> what you can see that the</font>

571
00:27:47,860 --> 00:27:54,250
<font color="#E5E5E5">JavaScript is already quite largely</font><font color="#CCCCCC"> over</font>

572
00:27:50,380 --> 00:27:56,200
<font color="#E5E5E5">performing existing</font><font color="#CCCCCC"> giphy right so Sigma</font>

573
00:27:54,250 --> 00:27:59,650
J<font color="#E5E5E5"> yes on the full screen resolution is</font>

574
00:27:56,200 --> 00:28:03,970
<font color="#CCCCCC">much</font><font color="#E5E5E5"> better and the new OpenGL engine is</font>

575
00:27:59,650 --> 00:28:06,100
also even little better<font color="#E5E5E5"> and the new</font>

576
00:28:03,970 --> 00:28:08,020
OpenGL engine allows to display huge

577
00:28:06,100 --> 00:28:10,360
graphs that we are not<font color="#CCCCCC"> currently</font><font color="#E5E5E5"> able to</font>

578
00:28:08,020 --> 00:28:12,940
visualize in<font color="#CCCCCC"> Jeffie right so like the</font>

579
00:28:10,360 --> 00:28:17,820
<font color="#E5E5E5">Google graph this one has eight hundred</font>

580
00:28:12,940 --> 00:28:17,820
<font color="#E5E5E5">thousand nodes and five million edges</font>

581
00:28:17,910 --> 00:28:24,940
so we have<font color="#CCCCCC"> different</font><font color="#E5E5E5"> options for the</font>

582
00:28:21,640 --> 00:28:28,180
<font color="#CCCCCC">open GL the new open GL engine</font><font color="#E5E5E5"> so we</font>

583
00:28:24,940 --> 00:28:29,950
have juggle and LW<font color="#CCCCCC"> jgl</font><font color="#E5E5E5"> the two libraries</font>

584
00:28:28,180 --> 00:28:32,530
<font color="#E5E5E5">and we have different</font><font color="#CCCCCC"> options</font><font color="#E5E5E5"> in terms</font>

585
00:28:29,950 --> 00:28:34,030
of when do you swap the buffers<font color="#E5E5E5"> do you</font>

586
00:28:32,530 --> 00:28:36,250
wait for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> full rendering</font><font color="#CCCCCC"> and do you</font>

587
00:28:34,030 --> 00:28:37,750
give more reactivity to the users by

588
00:28:36,250 --> 00:28:41,260
allowing the buffers to<font color="#E5E5E5"> swap at any</font>

589
00:28:37,750 --> 00:28:44,680
moment<font color="#E5E5E5"> whatever</font><font color="#CCCCCC"> these things produce</font>

590
00:28:41,260 --> 00:28:46,240
<font color="#CCCCCC">kind of the same range of performance</font><font color="#E5E5E5"> so</font>

591
00:28:44,680 --> 00:28:48,730
<font color="#E5E5E5">they don't matter</font><font color="#CCCCCC"> so much for</font>

592
00:28:46,240 --> 00:28:50,980
performance<font color="#E5E5E5"> we can pick whatever is good</font>

593
00:28:48,730 --> 00:28:54,630
<font color="#E5E5E5">for us in terms of design</font><font color="#CCCCCC"> and user</font>

594
00:28:50,980 --> 00:28:57,850
<font color="#CCCCCC">experience so it's</font><font color="#E5E5E5"> just good to</font><font color="#CCCCCC"> know and</font>

595
00:28:54,630 --> 00:28:59,950
now let's talk about<font color="#E5E5E5"> scalability so here</font>

596
00:28:57,850 --> 00:29:03,040
it's different networks<font color="#E5E5E5"> that have an</font>

597
00:28:59,950 --> 00:29:05,920
increasingly large amount of nodes so an

598
00:29:03,040 --> 00:29:07,960
order of magnitude<font color="#CCCCCC"> each time up to 10</font>

599
00:29:05,920 --> 00:29:12,670
million nodes they have this<font color="#E5E5E5"> network</font><font color="#CCCCCC"> has</font>

600
00:29:07,960 --> 00:29:14,740
<font color="#E5E5E5">no edge and so first of all you see that</font>

601
00:29:12,670 --> 00:29:16,150
<font color="#CCCCCC">we have this kind of plateau in</font><font color="#E5E5E5"> the</font>

602
00:29:14,740 --> 00:29:18,130
beginning<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is just due to</font><font color="#E5E5E5"> the fact</font>

603
00:29:16,150 --> 00:29:20,500
<font color="#CCCCCC">that you have a cap in the number</font><font color="#E5E5E5"> of</font>

604
00:29:18,130 --> 00:29:22,840
<font color="#E5E5E5">frames per second we don't see</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> human</font>

605
00:29:20,500 --> 00:29:25,660
more than maybe 100<font color="#E5E5E5"> frames per second</font><font color="#CCCCCC"> so</font>

606
00:29:22,840 --> 00:29:27,280
<font color="#E5E5E5">whether you cap it at 30 or 60 or</font>

607
00:29:25,660 --> 00:29:29,350
<font color="#E5E5E5">whatever actually</font><font color="#CCCCCC"> all these engines</font>

608
00:29:27,280 --> 00:29:30,790
could could<font color="#CCCCCC"> go much beyond we just don't</font>

609
00:29:29,350 --> 00:29:32,919
do<font color="#CCCCCC"> it because it's useless</font>

610
00:29:30,790 --> 00:29:35,139
so the plateau here<font color="#E5E5E5"> is not really</font>

611
00:29:32,920 --> 00:29:38,950
<font color="#E5E5E5">representative but then it starts to</font>

612
00:29:35,140 --> 00:29:41,470
<font color="#E5E5E5">drop</font><font color="#CCCCCC"> and it starts to drop</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> there</font>

613
00:29:38,950 --> 00:29:44,500
are too many nodes for the<font color="#CCCCCC"> GPU basically</font>

614
00:29:41,470 --> 00:29:46,300
<font color="#E5E5E5">or the</font><font color="#CCCCCC"> CPU depending and what you can</font>

615
00:29:44,500 --> 00:29:48,460
see<font color="#CCCCCC"> first is that all</font><font color="#E5E5E5"> of them start to</font>

616
00:29:46,300 --> 00:29:54,000
<font color="#E5E5E5">drop at kind of the same moment right</font>

617
00:29:48,460 --> 00:29:57,730
<font color="#E5E5E5">between 10,000 and 100,000 nodes and</font>

618
00:29:54,000 --> 00:30:01,210
then so they don't drop necessarily at

619
00:29:57,730 --> 00:30:05,860
the same<font color="#CCCCCC"> rate but you</font><font color="#E5E5E5"> can see that for</font>

620
00:30:01,210 --> 00:30:09,010
<font color="#CCCCCC">instance the we can reach 10 million</font>

621
00:30:05,860 --> 00:30:12,399
nodes with<font color="#E5E5E5"> the new OpenGL engine also</font><font color="#CCCCCC"> we</font>

622
00:30:09,010 --> 00:30:14,980
couldn't load such huge networks with

623
00:30:12,400 --> 00:30:16,150
the<font color="#E5E5E5"> WebGL engine and so I must talk a</font>

624
00:30:14,980 --> 00:30:20,290
little bit about that because<font color="#E5E5E5"> you've</font>

625
00:30:16,150 --> 00:30:22,780
seen a<font color="#E5E5E5"> lot the issues</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> arise with</font>

626
00:30:20,290 --> 00:30:26,500
<font color="#E5E5E5">web</font><font color="#CCCCCC"> technology so here</font><font color="#E5E5E5"> the file was too</font>

627
00:30:22,780 --> 00:30:28,660
big and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can actually find the</font>

628
00:30:26,500 --> 00:30:29,720
<font color="#E5E5E5">turnaround to be able</font><font color="#CCCCCC"> to load it so we</font>

629
00:30:28,660 --> 00:30:31,279
didn't take the time

630
00:30:29,720 --> 00:30:32,990
<font color="#E5E5E5">develop that</font><font color="#CCCCCC"> in addition to do</font><font color="#E5E5E5"> this big</font>

631
00:30:31,279 --> 00:30:36,919
benchmark<font color="#E5E5E5"> liquid we didn't have the time</font>

632
00:30:32,990 --> 00:30:38,539
but<font color="#E5E5E5"> basically web technologies are not</font>

633
00:30:36,919 --> 00:30:40,700
used<font color="#E5E5E5"> to load huge file and that's why</font>

634
00:30:38,539 --> 00:30:42,440
it's<font color="#E5E5E5"> break so solutions exist so we</font>

635
00:30:40,700 --> 00:30:45,019
could we will be able we would be able

636
00:30:42,440 --> 00:30:47,330
<font color="#E5E5E5">to</font><font color="#CCCCCC"> find turnarounds</font><font color="#E5E5E5"> to you to load huge</font>

637
00:30:45,019 --> 00:30:48,860
files<font color="#E5E5E5"> but currently it's kind of not</font>

638
00:30:47,330 --> 00:30:51,500
available because<font color="#E5E5E5"> that's not in</font><font color="#CCCCCC"> the</font>

639
00:30:48,860 --> 00:30:54,019
practices<font color="#E5E5E5"> of these people so we don't</font>

640
00:30:51,500 --> 00:30:56,090
<font color="#CCCCCC">have the</font><font color="#E5E5E5"> figures so let's look at the</font>

641
00:30:54,019 --> 00:30:57,860
edges<font color="#E5E5E5"> now that we have seen for the</font>

642
00:30:56,090 --> 00:31:00,799
<font color="#E5E5E5">nodes and basically it's kind</font><font color="#CCCCCC"> of the</font>

643
00:30:57,860 --> 00:31:03,049
same<font color="#CCCCCC"> picture so it drops at the</font><font color="#E5E5E5"> same</font>

644
00:31:00,799 --> 00:31:07,580
point<font color="#E5E5E5"> so in it means first that in terms</font>

645
00:31:03,049 --> 00:31:09,529
of scalability<font color="#CCCCCC"> one node</font><font color="#E5E5E5"> and one edge are</font>

646
00:31:07,580 --> 00:31:11,120
kind of worth the same right<font color="#E5E5E5"> so you</font>

647
00:31:09,529 --> 00:31:13,490
could estimate the<font color="#E5E5E5"> size of your</font><font color="#CCCCCC"> network</font>

648
00:31:11,120 --> 00:31:16,340
in<font color="#CCCCCC"> terms of nodes</font><font color="#E5E5E5"> plus edges right</font><font color="#CCCCCC"> and</font>

649
00:31:13,490 --> 00:31:16,789
it gives you how you how far you would

650
00:31:16,340 --> 00:31:20,740
go

651
00:31:16,789 --> 00:31:24,259
so<font color="#E5E5E5"> basically to have an</font><font color="#CCCCCC"> idea things are</font>

652
00:31:20,740 --> 00:31:27,320
usable with your in<font color="#E5E5E5"> your interactions</font>

653
00:31:24,259 --> 00:31:29,149
with<font color="#CCCCCC"> your</font><font color="#E5E5E5"> with the software above</font><font color="#CCCCCC"> ten</font>

654
00:31:27,320 --> 00:31:32,269
frames<font color="#E5E5E5"> per second or around ten frames</font>

655
00:31:29,149 --> 00:31:35,508
per second on above below<font color="#CCCCCC"> that it</font>

656
00:31:32,269 --> 00:31:37,250
becomes so laggy that you cannot<font color="#CCCCCC"> really</font>

657
00:31:35,509 --> 00:31:40,279
interact with<font color="#CCCCCC"> the network it's caiied</font>

658
00:31:37,250 --> 00:31:42,919
works kind of a static thing<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and</font>

659
00:31:40,279 --> 00:31:45,620
you can see<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> can almost go to 1</font>

660
00:31:42,919 --> 00:31:48,710
million edges with<font color="#E5E5E5"> the new OpenGL engine</font>

661
00:31:45,620 --> 00:31:52,059
<font color="#E5E5E5">and we could also achieve quite decent</font>

662
00:31:48,710 --> 00:31:52,059
performances with<font color="#CCCCCC"> the WebGL</font>

663
00:31:55,950 --> 00:32:01,140
we also tried<font color="#E5E5E5"> to do it looks like a</font>

664
00:31:58,290 --> 00:32:03,600
stupid<font color="#CCCCCC"> idea - to see what what it looks</font>

665
00:32:01,140 --> 00:32:06,060
like if<font color="#CCCCCC"> we have networks with</font><font color="#E5E5E5"> a huge</font>

666
00:32:03,600 --> 00:32:08,340
<font color="#E5E5E5">amount of metadata let's say notes have</font>

667
00:32:06,060 --> 00:32:10,530
many many many attributes like full text

668
00:32:08,340 --> 00:32:12,540
stuff or<font color="#E5E5E5"> whatever well it shouldn't</font>

669
00:32:10,530 --> 00:32:14,160
<font color="#E5E5E5">change the rendering right the next it</font>

670
00:32:12,540 --> 00:32:15,930
doesn't change the rendering for the

671
00:32:14,160 --> 00:32:18,570
OpenGL engine<font color="#E5E5E5"> but it turns out that it</font>

672
00:32:15,930 --> 00:32:21,000
actually<font color="#CCCCCC"> takes a toll on</font><font color="#E5E5E5"> the and the</font>

673
00:32:18,570 --> 00:32:23,310
performance of<font color="#E5E5E5"> the WebGL engine even</font>

674
00:32:21,000 --> 00:32:25,440
<font color="#CCCCCC">though</font><font color="#E5E5E5"> the metadata</font><font color="#CCCCCC"> doesn't matter to</font>

675
00:32:23,310 --> 00:32:28,800
the rendering<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the reason is the</font>

676
00:32:25,440 --> 00:32:30,720
crazy magic optimizations done by v8 are

677
00:32:28,800 --> 00:32:32,730
different with objects that have a lot

678
00:32:30,720 --> 00:32:34,620
<font color="#E5E5E5">of keys and lot of stuff so it makes</font>

679
00:32:32,730 --> 00:32:37,200
different optimizations and then the

680
00:32:34,620 --> 00:32:41,159
performance<font color="#E5E5E5"> drops so this would</font><font color="#CCCCCC"> mean</font>

681
00:32:37,200 --> 00:32:44,580
also we<font color="#E5E5E5"> require this would lead us</font><font color="#CCCCCC"> to</font>

682
00:32:41,160 --> 00:32:46,440
develop<font color="#CCCCCC"> read</font><font color="#E5E5E5"> engine where we would split</font>

683
00:32:44,580 --> 00:32:48,919
<font color="#E5E5E5">the rendering part and the metadata</font>

684
00:32:46,440 --> 00:32:54,150
<font color="#CCCCCC">about for instance or such strategies</font>

685
00:32:48,920 --> 00:32:56,850
and let's talk<font color="#CCCCCC"> about the screen</font>

686
00:32:54,150 --> 00:32:59,760
<font color="#E5E5E5">resolution</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> left you have on</font>

687
00:32:56,850 --> 00:33:01,770
different<font color="#CCCCCC"> networks the frames per second</font>

688
00:32:59,760 --> 00:33:03,870
on a<font color="#CCCCCC"> smaller screen and on the</font><font color="#E5E5E5"> right on</font>

689
00:33:01,770 --> 00:33:06,030
a huge screen<font color="#CCCCCC"> test screen and insight</font>

690
00:33:03,870 --> 00:33:08,129
really quite flat in<font color="#CCCCCC"> miss that</font>

691
00:33:06,030 --> 00:33:09,960
it depends much much more on the size of

692
00:33:08,130 --> 00:33:11,430
<font color="#CCCCCC">your network</font><font color="#E5E5E5"> than the size of your</font>

693
00:33:09,960 --> 00:33:14,010
screen<font color="#E5E5E5"> and this is quite specific</font><font color="#CCCCCC"> to</font>

694
00:33:11,430 --> 00:33:16,500
OpenGL WebGL I think canvas is not<font color="#CCCCCC"> the</font>

695
00:33:14,010 --> 00:33:18,720
same<font color="#E5E5E5"> so it means that we could have a</font>

696
00:33:16,500 --> 00:33:20,220
<font color="#E5E5E5">much bigger screens even</font><font color="#CCCCCC"> on small</font><font color="#E5E5E5"> chips</font>

697
00:33:18,720 --> 00:33:23,400
it will still work<font color="#E5E5E5"> and that's a</font><font color="#CCCCCC"> really</font>

698
00:33:20,220 --> 00:33:25,410
<font color="#E5E5E5">great news including</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the WebGL so</font>

699
00:33:23,400 --> 00:33:28,680
this is just<font color="#E5E5E5"> the</font><font color="#CCCCCC"> OpenGL but it's also</font>

700
00:33:25,410 --> 00:33:31,110
the cam<font color="#E5E5E5"> the case for WebGL and let's</font>

701
00:33:28,680 --> 00:33:33,330
<font color="#E5E5E5">look at the influence of the GPU right</font>

702
00:33:31,110 --> 00:33:36,419
if you use a huge graphic card so we've

703
00:33:33,330 --> 00:33:41,159
tried<font color="#E5E5E5"> with the on the right the GeForce</font>

704
00:33:36,420 --> 00:33:44,360
<font color="#E5E5E5">GTX 970 which scores like 8000 on G</font>

705
00:33:41,160 --> 00:33:50,160
<font color="#E5E5E5">3dmark while the left one scores</font><font color="#CCCCCC"> only</font>

706
00:33:44,360 --> 00:33:51,689
<font color="#CCCCCC">1300</font><font color="#E5E5E5"> and basically WebGL in yellow and</font>

707
00:33:50,160 --> 00:33:55,170
the new opponent<font color="#CCCCCC"> jail</font>

708
00:33:51,690 --> 00:33:57,480
engine in red<font color="#CCCCCC"> gained</font><font color="#E5E5E5"> performance but</font>

709
00:33:55,170 --> 00:33:58,980
currently engine doesn't so it<font color="#E5E5E5"> seems to</font>

710
00:33:57,480 --> 00:34:00,420
go<font color="#CCCCCC"> down but actually it's like</font><font color="#E5E5E5"> one or</font>

711
00:33:58,980 --> 00:34:01,980
<font color="#CCCCCC">two frames per</font><font color="#E5E5E5"> seconds</font><font color="#CCCCCC"> basically you</font>

712
00:34:00,420 --> 00:34:04,500
<font color="#CCCCCC">just should just consider it's kind of</font>

713
00:34:01,980 --> 00:34:07,320
the<font color="#E5E5E5"> same but the thing is we</font><font color="#CCCCCC"> have a CPU</font>

714
00:34:04,500 --> 00:34:08,969
overhead which caps<font color="#CCCCCC"> the</font><font color="#E5E5E5"> gain we have</font>

715
00:34:07,320 --> 00:34:11,310
<font color="#CCCCCC">with a huge</font>

716
00:34:08,969 --> 00:34:14,279
GPU so we would gain more performance in

717
00:34:11,310 --> 00:34:17,940
the<font color="#E5E5E5"> future so let</font><font color="#CCCCCC"> me wrap up</font><font color="#E5E5E5"> that very</font>

718
00:34:14,280 --> 00:34:20,370
quickly<font color="#CCCCCC"> if</font><font color="#E5E5E5"> your developer</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> takes</font>

719
00:34:17,940 --> 00:34:22,440
<font color="#CCCCCC">away</font><font color="#E5E5E5"> the takeaways</font><font color="#CCCCCC"> here are that web</font>

720
00:34:20,370 --> 00:34:25,409
technologies we think<font color="#CCCCCC"> out a</font><font color="#E5E5E5"> new multi</font>

721
00:34:22,440 --> 00:34:27,960
<font color="#E5E5E5">platform for graph visualization a WebGL</font>

722
00:34:25,409 --> 00:34:30,320
allows you to visualize<font color="#E5E5E5"> 10 to 100,000 of</font>

723
00:34:27,960 --> 00:34:33,120
nodes<font color="#E5E5E5"> plus edges on</font><font color="#CCCCCC"> your browser</font><font color="#E5E5E5"> today</font>

724
00:34:30,320 --> 00:34:35,610
<font color="#E5E5E5">with a normal computer with no</font><font color="#CCCCCC"> special</font>

725
00:34:33,120 --> 00:34:36,779
graphic card<font color="#E5E5E5"> so this is great news but</font>

726
00:34:35,610 --> 00:34:38,490
the challenges are different

727
00:34:36,780 --> 00:34:41,040
<font color="#CCCCCC">I will not dig into that again but</font>

728
00:34:38,489 --> 00:34:43,199
you've seen<font color="#E5E5E5"> that and we just have a few</font>

729
00:34:41,040 --> 00:34:45,360
<font color="#E5E5E5">things</font><font color="#CCCCCC"> to know if we go that</font><font color="#E5E5E5"> way which</font>

730
00:34:43,199 --> 00:34:47,549
<font color="#CCCCCC">is</font><font color="#E5E5E5"> that the libraries are mature for</font>

731
00:34:45,360 --> 00:34:49,020
data science so we<font color="#E5E5E5"> have to develop stuff</font>

732
00:34:47,550 --> 00:34:51,179
in JavaScript<font color="#E5E5E5"> that is more compliant</font>

733
00:34:49,020 --> 00:34:53,759
with data same practices and this<font color="#E5E5E5"> will</font>

734
00:34:51,179 --> 00:34:56,370
come and these practices<font color="#CCCCCC"> are not in the</font>

735
00:34:53,760 --> 00:34:57,780
web culture<font color="#CCCCCC"> as you've</font><font color="#E5E5E5"> seen and also for</font>

736
00:34:56,370 --> 00:34:59,370
<font color="#E5E5E5">plugins development stuff like that the</font>

737
00:34:57,780 --> 00:35:01,380
researchers or the users would<font color="#E5E5E5"> have to</font>

738
00:34:59,370 --> 00:35:03,779
learn<font color="#E5E5E5"> a new culture that is different</font>

739
00:35:01,380 --> 00:35:06,900
from<font color="#E5E5E5"> the Java world and if you</font><font color="#CCCCCC"> are deaf</font>

740
00:35:03,780 --> 00:35:09,330
<font color="#E5E5E5">a user know that we will transition</font><font color="#CCCCCC"> from</font>

741
00:35:06,900 --> 00:35:11,730
a software<font color="#CCCCCC"> to a project</font><font color="#E5E5E5"> with maybe</font>

742
00:35:09,330 --> 00:35:13,950
different tools and that the web will be

743
00:35:11,730 --> 00:35:16,020
part of the<font color="#CCCCCC"> future of TV but this</font>

744
00:35:13,950 --> 00:35:18,450
doesn't mean<font color="#E5E5E5"> that we will drop the</font><font color="#CCCCCC"> Java</font>

745
00:35:16,020 --> 00:35:22,590
<font color="#E5E5E5">Jeffie and especially not in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> moment</font>

746
00:35:18,450 --> 00:35:24,330
but if things go even worse with<font color="#CCCCCC"> Oregon</font>

747
00:35:22,590 --> 00:35:25,860
<font color="#E5E5E5">stuff like that and they really want to</font>

748
00:35:24,330 --> 00:35:27,779
I don't<font color="#CCCCCC"> know for instance</font><font color="#E5E5E5"> completely</font>

749
00:35:25,860 --> 00:35:29,940
<font color="#E5E5E5">stop</font><font color="#CCCCCC"> the OpenGL</font><font color="#E5E5E5"> support or whatever</font><font color="#CCCCCC"> I</font>

750
00:35:27,780 --> 00:35:32,670
know we have a fallback which will be

751
00:35:29,940 --> 00:35:35,760
the web technologies<font color="#CCCCCC"> but right now we</font>

752
00:35:32,670 --> 00:35:38,490
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> plan to drop a Java and this might</font>

753
00:35:35,760 --> 00:35:43,050
finally lead us to get a decent<font color="#E5E5E5"> user</font>

754
00:35:38,490 --> 00:35:45,330
experience for<font color="#E5E5E5"> a</font><font color="#CCCCCC"> giffy thank you very</font>

755
00:35:43,050 --> 00:35:52,179
much for your<font color="#CCCCCC"> attention</font>

756
00:35:45,330 --> 00:35:52,179
[Applause]

757
00:35:56,260 --> 00:35:59,260
yeah

758
00:36:06,460 --> 00:36:13,039
in JavaScript<font color="#CCCCCC"> so does the</font><font color="#E5E5E5"> does the</font>

759
00:36:11,479 --> 00:36:15,529
running<font color="#E5E5E5"> of the faucet last impact the</font>

760
00:36:13,039 --> 00:36:17,390
performances for<font color="#E5E5E5"> the rendering and I</font>

761
00:36:15,529 --> 00:36:19,700
<font color="#E5E5E5">think that considering</font><font color="#CCCCCC"> that the</font>

762
00:36:17,390 --> 00:36:21,828
<font color="#E5E5E5">rendering is almost only on the GPU in</font>

763
00:36:19,700 --> 00:36:23,839
the ideal world<font color="#E5E5E5"> which means with the new</font>

764
00:36:21,829 --> 00:36:27,319
engine and the<font color="#E5E5E5"> faucet</font><font color="#CCCCCC"> last is only on</font>

765
00:36:23,839 --> 00:36:31,180
the CPU<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it we wouldn't lose too much</font>

766
00:36:27,319 --> 00:36:31,180
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the performance right yeah</font>

767
00:36:53,160 --> 00:36:57,328
so do we plan to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> clustering</font>

768
00:36:55,140 --> 00:36:59,009
algorithms to<font color="#CCCCCC"> only show</font><font color="#E5E5E5"> the edges that</font>

769
00:36:57,329 --> 00:37:00,269
<font color="#CCCCCC">are</font><font color="#E5E5E5"> relevant to</font><font color="#CCCCCC"> Internet the analysis</font>

770
00:36:59,009 --> 00:37:02,700
<font color="#CCCCCC">and</font><font color="#E5E5E5"> not all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> them because it</font><font color="#CCCCCC"> is too</font>

771
00:37:00,269 --> 00:37:05,129
much<font color="#CCCCCC"> and their answer I mean</font><font color="#E5E5E5"> I will want</font>

772
00:37:02,700 --> 00:37:06,629
to say<font color="#E5E5E5"> Joker here so this is a</font>

773
00:37:05,130 --> 00:37:08,009
methodological<font color="#E5E5E5"> question there is</font><font color="#CCCCCC"> no</font>

774
00:37:06,630 --> 00:37:10,980
problem<font color="#CCCCCC"> for implementing these search</font>

775
00:37:08,009 --> 00:37:13,500
algorithms right but because we<font color="#CCCCCC"> are so</font>

776
00:37:10,980 --> 00:37:15,420
few<font color="#E5E5E5"> of</font><font color="#CCCCCC"> us we focus more</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> the</font>

777
00:37:13,500 --> 00:37:17,009
basics of<font color="#CCCCCC"> Caffey like the quarantine</font><font color="#E5E5E5"> and</font>

778
00:37:15,420 --> 00:37:18,990
stuff like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and this can be</font><font color="#E5E5E5"> done as</font>

779
00:37:17,009 --> 00:37:21,000
a<font color="#CCCCCC"> plugin</font><font color="#E5E5E5"> and like for instance the</font>

780
00:37:18,990 --> 00:37:23,038
<font color="#CCCCCC">lighten algorithm</font><font color="#E5E5E5"> that is a kind of</font>

781
00:37:21,000 --> 00:37:25,200
another version<font color="#E5E5E5"> of the new algorithm for</font>

782
00:37:23,039 --> 00:37:26,519
modularity clustering the guys who

783
00:37:25,200 --> 00:37:28,470
<font color="#E5E5E5">published the paper with the help of</font>

784
00:37:26,519 --> 00:37:31,140
<font color="#E5E5E5">Eduardo just published a plug-in for</font>

785
00:37:28,470 --> 00:37:32,549
<font color="#E5E5E5">Givi and this is the right path so if</font>

786
00:37:31,140 --> 00:37:34,769
these things<font color="#CCCCCC"> comes we</font><font color="#E5E5E5"> will we will</font>

787
00:37:32,549 --> 00:37:36,779
create the plugins host them and might

788
00:37:34,769 --> 00:37:38,819
we<font color="#E5E5E5"> might even include them in</font><font color="#CCCCCC"> giphy and</font>

789
00:37:36,779 --> 00:37:41,789
the same applies to<font color="#E5E5E5"> the Java Script</font>

790
00:37:38,819 --> 00:37:44,038
world where graphology is an engine that

791
00:37:41,789 --> 00:37:45,839
<font color="#CCCCCC">can host this kind</font><font color="#E5E5E5"> of algorithms and</font>

792
00:37:44,039 --> 00:37:48,650
it's also<font color="#CCCCCC"> possible to</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> a pull</font>

793
00:37:45,839 --> 00:37:48,650
request in<font color="#E5E5E5"> that direction</font>

794
00:37:49,549 --> 00:37:53,059
another question<font color="#CCCCCC"> may be</font>

795
00:38:07,670 --> 00:38:11,190
did we consider WebGL frameworks like

796
00:38:10,260 --> 00:38:14,820
<font color="#CCCCCC">three.js</font>

797
00:38:11,190 --> 00:38:16,380
made this<font color="#E5E5E5"> equation for you</font><font color="#CCCCCC"> yes at</font><font color="#E5E5E5"> the</font>

798
00:38:14,820 --> 00:38:19,260
<font color="#CCCCCC">beginning we thought about it</font><font color="#E5E5E5"> but the</font>

799
00:38:16,380 --> 00:38:22,350
<font color="#CCCCCC">thing is it brings us far from</font><font color="#E5E5E5"> the metal</font>

800
00:38:19,260 --> 00:38:24,840
as GM says so basically it brings like<font color="#E5E5E5"> 1</font>

801
00:38:22,350 --> 00:38:27,870
megabyte<font color="#E5E5E5"> JavaScript just to draw disks</font>

802
00:38:24,840 --> 00:38:32,070
and lines which seems overkill<font color="#E5E5E5"> we prefer</font>

803
00:38:27,870 --> 00:38:33,810
to<font color="#E5E5E5"> go trying to actually work with WebGL</font>

804
00:38:32,070 --> 00:38:37,110
directly especially since we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> only</font>

805
00:38:33,810 --> 00:38:39,990
2d needs and there's no except<font color="#E5E5E5"> for</font><font color="#CCCCCC"> pics</font>

806
00:38:37,110 --> 00:38:43,530
<font color="#E5E5E5">ejs which is actually something we can</font>

807
00:38:39,990 --> 00:38:52,189
<font color="#CCCCCC">think about most</font><font color="#E5E5E5"> WebGL engines are more</font>

808
00:38:43,530 --> 00:38:59,270
<font color="#E5E5E5">free do anted which one</font>

809
00:38:52,190 --> 00:38:59,270
<font color="#E5E5E5">Reagle</font><font color="#CCCCCC"> okay I'll take a look at it</font>

810
00:39:26,290 --> 00:39:30,140
so this is an<font color="#CCCCCC"> excellent question I would</font>

811
00:39:28,550 --> 00:39:32,960
just say that doing<font color="#CCCCCC"> this kind of stuff</font>

812
00:39:30,140 --> 00:39:34,580
<font color="#CCCCCC">is a uux</font><font color="#E5E5E5"> issue so we will be able to</font>

813
00:39:32,960 --> 00:39:36,080
<font color="#CCCCCC">address this kind of issues in the web</font>

814
00:39:34,580 --> 00:39:37,520
world and not<font color="#CCCCCC"> in the java world because</font>

815
00:39:36,080 --> 00:39:42,950
it's so costly<font color="#CCCCCC"> right now to develop</font>

816
00:39:37,520 --> 00:39:45,020
<font color="#E5E5E5">advanced</font><font color="#CCCCCC"> uux stuff in java it is</font>

817
00:39:42,950 --> 00:39:46,310
<font color="#CCCCCC">something interesting I think we all we</font>

818
00:39:45,020 --> 00:39:49,450
already<font color="#CCCCCC"> have a few initiative in this</font>

819
00:39:46,310 --> 00:39:49,450
and we can discuss<font color="#CCCCCC"> about that later</font>

820
00:39:49,810 --> 00:39:55,139
thank you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font>

821
00:39:51,710 --> 00:39:55,139
[Applause]

