1
00:00:05,790 --> 00:00:13,920
so<font color="#E5E5E5"> welcome everyone</font><font color="#CCCCCC"> my name is Joe</font>

2
00:00:08,820 --> 00:00:15,900
<font color="#CCCCCC">Martin</font><font color="#E5E5E5"> and a developer at OVH</font><font color="#CCCCCC"> it's a big</font>

3
00:00:13,920 --> 00:00:19,140
cloud company international cloud

4
00:00:15,900 --> 00:00:22,919
company must<font color="#E5E5E5"> be famous in Europe and I</font>

5
00:00:19,140 --> 00:00:26,189
was<font color="#E5E5E5"> developer at ubisoft before and</font>

6
00:00:22,919 --> 00:00:29,520
<font color="#E5E5E5">today</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> to talk about an experience</font>

7
00:00:26,189 --> 00:00:32,940
I had<font color="#E5E5E5"> while I was a developer about</font>

8
00:00:29,520 --> 00:00:37,399
managing data and how that<font color="#CCCCCC"> I used to</font>

9
00:00:32,940 --> 00:00:40,410
usually<font color="#E5E5E5"> it grows out of</font><font color="#CCCCCC"> control</font><font color="#E5E5E5"> and so</font>

10
00:00:37,399 --> 00:00:42,780
<font color="#CCCCCC">I'm going to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> JSON</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it</font>

11
00:00:40,410 --> 00:00:45,959
could be about any data structure

12
00:00:42,780 --> 00:00:50,480
<font color="#CCCCCC">language</font><font color="#E5E5E5"> what we</font><font color="#CCCCCC"> usually expect</font><font color="#E5E5E5"> from</font>

13
00:00:45,960 --> 00:00:54,839
<font color="#CCCCCC">J'son is well to present structured data</font>

14
00:00:50,480 --> 00:00:58,050
<font color="#CCCCCC">here's a bunch of jason</font><font color="#E5E5E5"> and you usually</font>

15
00:00:54,839 --> 00:01:01,769
know it it has strings<font color="#E5E5E5"> as numbers as</font>

16
00:00:58,050 --> 00:01:05,908
arrays dictionaries<font color="#CCCCCC"> maybe Julian's</font><font color="#E5E5E5"> and</font>

17
00:01:01,769 --> 00:01:08,970
that's it<font color="#CCCCCC"> any time</font><font color="#E5E5E5"> you want to make you</font>

18
00:01:05,909 --> 00:01:11,040
want to save some<font color="#E5E5E5"> data</font><font color="#CCCCCC"> that is not in</font>

19
00:01:08,970 --> 00:01:12,900
booth types<font color="#E5E5E5"> you need to put them</font><font color="#CCCCCC"> usually</font>

20
00:01:11,040 --> 00:01:15,780
you put them in strings<font color="#E5E5E5"> and then you</font>

21
00:01:12,900 --> 00:01:17,330
have some program to<font color="#CCCCCC"> transform them</font>

22
00:01:15,780 --> 00:01:20,730
later

23
00:01:17,330 --> 00:01:24,390
the issue with that is<font color="#E5E5E5"> for example well</font>

24
00:01:20,730 --> 00:01:29,940
if we want<font color="#E5E5E5"> set references</font><font color="#CCCCCC"> usually it's</font>

25
00:01:24,390 --> 00:01:32,280
done<font color="#E5E5E5"> with IDs</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> here I have</font><font color="#CCCCCC"> a I want my</font>

26
00:01:29,940 --> 00:01:34,980
owner to be from a list of owners so I

27
00:01:32,280 --> 00:01:38,070
create<font color="#E5E5E5"> owners with IDs and then I put an</font>

28
00:01:34,980 --> 00:01:41,130
ID in the owner section<font color="#E5E5E5"> and good luck to</font>

29
00:01:38,070 --> 00:01:44,820
keep them in sync<font color="#CCCCCC"> if you've worked</font><font color="#E5E5E5"> with</font>

30
00:01:41,130 --> 00:01:48,089
<font color="#E5E5E5">MongoDB for example</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not made for</font>

31
00:01:44,820 --> 00:01:50,729
relational stuff and when you start

32
00:01:48,090 --> 00:01:52,320
<font color="#E5E5E5">doing relational stuff because</font><font color="#CCCCCC"> anytime</font>

33
00:01:50,730 --> 00:01:56,630
<font color="#CCCCCC">you</font><font color="#E5E5E5"> want to do something usually you</font>

34
00:01:52,320 --> 00:01:56,630
<font color="#E5E5E5">have a relation sometimes that appears</font>

35
00:02:02,510 --> 00:02:04,570
you

36
00:02:08,020 --> 00:02:15,700
me so I guess it's data<font color="#E5E5E5"> to the number</font><font color="#CCCCCC"> of</font>

37
00:02:12,880 --> 00:02:20,560
<font color="#CCCCCC">max</font><font color="#E5E5E5"> level</font><font color="#CCCCCC"> ponies is is not something</font>

38
00:02:15,700 --> 00:02:22,599
<font color="#CCCCCC">complicated but it's data</font><font color="#E5E5E5"> and Jason</font>

39
00:02:20,560 --> 00:02:27,250
actually<font color="#E5E5E5"> cannot compute that we need a</font>

40
00:02:22,599 --> 00:02:30,399
<font color="#E5E5E5">program to compute</font><font color="#CCCCCC"> to fetch the number</font>

41
00:02:27,250 --> 00:02:32,830
of ponies and see which are max level

42
00:02:30,400 --> 00:02:36,250
<font color="#E5E5E5">but the number of max level but it</font>

43
00:02:32,830 --> 00:02:40,269
shouldn't<font color="#E5E5E5"> be something</font><font color="#CCCCCC"> that you need to</font>

44
00:02:36,250 --> 00:02:42,430
compute<font color="#E5E5E5"> it just simple data so</font><font color="#CCCCCC"> Jason is</font>

45
00:02:40,269 --> 00:02:47,950
<font color="#E5E5E5">not enough and any data structures is</font>

46
00:02:42,430 --> 00:02:49,360
not enough for any complex system<font color="#CCCCCC"> we</font>

47
00:02:47,950 --> 00:02:51,250
fail at<font color="#E5E5E5"> self referencing we fail at</font>

48
00:02:49,360 --> 00:02:58,900
representing processes and computations

49
00:02:51,250 --> 00:03:03,459
so it's 2019<font color="#E5E5E5"> what</font><font color="#CCCCCC"> everyone does</font><font color="#E5E5E5"> let's</font>

50
00:02:58,900 --> 00:03:05,650
add<font color="#E5E5E5"> JavaScript to it so this is some</font><font color="#CCCCCC"> run</font>

51
00:03:03,459 --> 00:03:07,630
file<font color="#CCCCCC"> I took from a random project on</font>

52
00:03:05,650 --> 00:03:11,250
github<font color="#E5E5E5"> but</font><font color="#CCCCCC"> must</font><font color="#E5E5E5"> grant files look like</font>

53
00:03:07,630 --> 00:03:13,510
<font color="#E5E5E5">this it's it's supposed to be</font><font color="#CCCCCC"> a</font>

54
00:03:11,250 --> 00:03:15,040
configuration file but<font color="#E5E5E5"> you use</font>

55
00:03:13,510 --> 00:03:17,260
<font color="#E5E5E5">JavaScript because you need some</font>

56
00:03:15,040 --> 00:03:21,820
computation<font color="#E5E5E5"> at some points and the</font><font color="#CCCCCC"> fight</font>

57
00:03:17,260 --> 00:03:25,019
<font color="#CCCCCC">grows up into this big monster and you</font>

58
00:03:21,820 --> 00:03:28,090
you don't<font color="#E5E5E5"> end on</font><font color="#CCCCCC"> it anymore and it</font>

59
00:03:25,019 --> 00:03:31,329
<font color="#CCCCCC">happens to</font><font color="#E5E5E5"> be the case with JavaScript</font>

60
00:03:28,090 --> 00:03:33,760
but I would worked with Lua files for

61
00:03:31,329 --> 00:03:36,459
configuration I've worked with Python

62
00:03:33,760 --> 00:03:40,120
files<font color="#E5E5E5"> and most of the time they start</font>

63
00:03:36,459 --> 00:03:44,260
doing<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> which shouldn't do and grow</font>

64
00:03:40,120 --> 00:03:47,590
out of<font color="#CCCCCC"> control</font><font color="#E5E5E5"> so why is that I'm gonna</font>

65
00:03:44,260 --> 00:03:52,030
quote<font color="#CCCCCC"> bilko's</font><font color="#E5E5E5"> per here data structure is</font>

66
00:03:47,590 --> 00:03:55,180
<font color="#CCCCCC">just stupid programming language JSON</font>

67
00:03:52,030 --> 00:03:58,180
XML HTML CSS<font color="#CCCCCC"> rules are all stupid</font>

68
00:03:55,180 --> 00:04:00,730
programming languages when you try

69
00:03:58,180 --> 00:04:03,220
representing concepts with them the

70
00:04:00,730 --> 00:04:06,160
abstraction<font color="#CCCCCC"> leak and we end up writing</font>

71
00:04:03,220 --> 00:04:09,370
some abstraction<font color="#E5E5E5"> layer behind to end all</font>

72
00:04:06,160 --> 00:04:13,090
<font color="#CCCCCC">this</font><font color="#E5E5E5"> data so we should be able to use</font>

73
00:04:09,370 --> 00:04:15,579
data structures<font color="#CCCCCC"> that are smart</font><font color="#E5E5E5"> this is</font>

74
00:04:13,090 --> 00:04:16,510
an<font color="#E5E5E5"> example of something we do to make</font>

75
00:04:15,579 --> 00:04:18,639
them less stupid

76
00:04:16,510 --> 00:04:21,570
for example CSS has no variable so we

77
00:04:18,639 --> 00:04:26,070
create less<font color="#CCCCCC"> JavaScript cannot</font>

78
00:04:21,570 --> 00:04:28,469
handle itself it has no<font color="#CCCCCC"> Metta system so</font>

79
00:04:26,070 --> 00:04:32,040
we create<font color="#E5E5E5"> bable bable</font><font color="#CCCCCC"> is an awesome</font>

80
00:04:28,470 --> 00:04:35,340
project<font color="#E5E5E5"> value</font><font color="#CCCCCC"> away HTML</font><font color="#E5E5E5"> we have this</font>

81
00:04:32,040 --> 00:04:39,480
kind of mustache templates<font color="#CCCCCC"> but old</font>

82
00:04:35,340 --> 00:04:42,450
languages also<font color="#E5E5E5"> have their system to end</font>

83
00:04:39,480 --> 00:04:43,200
all this limitation<font color="#CCCCCC"> he has the</font>

84
00:04:42,450 --> 00:04:46,680
preprocessor

85
00:04:43,200 --> 00:04:48,870
<font color="#E5E5E5">C++ templates - as metaclasses nobody</font>

86
00:04:46,680 --> 00:04:53,940
uses them but we<font color="#E5E5E5"> are here we're here</font>

87
00:04:48,870 --> 00:04:56,070
<font color="#CCCCCC">see Shabbos reflection what if I told</font>

88
00:04:53,940 --> 00:04:59,270
you was a simpler way<font color="#CCCCCC"> there's a more</font>

89
00:04:56,070 --> 00:05:03,300
personal way that adapts to your domain

90
00:04:59,270 --> 00:05:07,490
<font color="#E5E5E5">it's called the DSL so we saw DSL just</font>

91
00:05:03,300 --> 00:05:11,070
<font color="#E5E5E5">before my talk</font><font color="#CCCCCC"> domain-specific languages</font>

92
00:05:07,490 --> 00:05:16,320
<font color="#E5E5E5">there</font><font color="#CCCCCC"> they're an abstraction that</font>

93
00:05:11,070 --> 00:05:18,120
becomes a language and you used<font color="#CCCCCC"> ESL's</font>

94
00:05:16,320 --> 00:05:21,090
all the time without knowing<font color="#E5E5E5"> where</font><font color="#CCCCCC"> DSL</font>

95
00:05:18,120 --> 00:05:24,480
for example<font color="#CCCCCC"> Magpies</font><font color="#E5E5E5"> audiences regular</font>

96
00:05:21,090 --> 00:05:27,989
expressions<font color="#E5E5E5"> say cool the</font><font color="#CCCCCC"> QT UI language</font>

97
00:05:24,480 --> 00:05:30,660
<font color="#CCCCCC">any game engine language booths are</font>

98
00:05:27,990 --> 00:05:32,550
languages<font color="#E5E5E5"> that</font><font color="#CCCCCC"> represent data structures</font>

99
00:05:30,660 --> 00:05:36,150
complex data structures<font color="#E5E5E5"> I don't know a</font>

100
00:05:32,550 --> 00:05:39,240
monster<font color="#CCCCCC"> in the game</font><font color="#E5E5E5"> quest something but</font>

101
00:05:36,150 --> 00:05:41,190
they're not<font color="#E5E5E5"> simply data they're a bit</font>

102
00:05:39,240 --> 00:05:46,500
<font color="#E5E5E5">more data and so we</font><font color="#CCCCCC"> need a language</font><font color="#E5E5E5"> for</font>

103
00:05:41,190 --> 00:05:47,940
that because structure data will always

104
00:05:46,500 --> 00:05:50,040
<font color="#E5E5E5">be better expressed with a specific</font>

105
00:05:47,940 --> 00:05:53,280
<font color="#CCCCCC">language for that</font><font color="#E5E5E5"> domain than a generic</font>

106
00:05:50,040 --> 00:05:54,720
data structure so banking data you need

107
00:05:53,280 --> 00:05:56,280
a banking language game that I you need

108
00:05:54,720 --> 00:06:00,780
<font color="#CCCCCC">a game language medical data in the</font>

109
00:05:56,280 --> 00:06:02,700
medical language<font color="#E5E5E5"> but I hear you say</font>

110
00:06:00,780 --> 00:06:07,940
<font color="#E5E5E5">isn't writing full language</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> bit</font>

111
00:06:02,700 --> 00:06:10,979
excessive<font color="#E5E5E5"> and I need to remember the</font>

112
00:06:07,940 --> 00:06:16,020
<font color="#E5E5E5">first rule of computing the first rule</font>

113
00:06:10,980 --> 00:06:19,140
of programming abstraction leaks<font color="#CCCCCC"> it's</font>

114
00:06:16,020 --> 00:06:22,560
what I call<font color="#E5E5E5"> natural glow for organic</font>

115
00:06:19,140 --> 00:06:26,130
growth<font color="#CCCCCC"> it's whatever</font><font color="#E5E5E5"> you do your data</font>

116
00:06:22,560 --> 00:06:31,530
will always evolve and leak through the

117
00:06:26,130 --> 00:06:33,599
abstractions you create<font color="#E5E5E5"> usually what we</font>

118
00:06:31,530 --> 00:06:37,020
do to prevent this

119
00:06:33,599 --> 00:06:39,808
is we call this Middle where it's the

120
00:06:37,020 --> 00:06:45,709
kind<font color="#E5E5E5"> of software that</font><font color="#CCCCCC"> we write</font><font color="#E5E5E5"> to pipe</font>

121
00:06:39,809 --> 00:06:49,709
<font color="#E5E5E5">data into something so</font><font color="#CCCCCC"> that it works but</font>

122
00:06:45,709 --> 00:06:53,639
Lisp programmers usually know<font color="#E5E5E5"> how it</font>

123
00:06:49,709 --> 00:06:53,999
goes<font color="#CCCCCC"> where</font><font color="#E5E5E5"> most of the time with</font><font color="#CCCCCC"> middle</font>

124
00:06:53,639 --> 00:06:57,270
<font color="#CCCCCC">waves</font>

125
00:06:53,999 --> 00:06:59,580
they actually<font color="#CCCCCC"> are badly written half</font>

126
00:06:57,270 --> 00:07:05,180
implementation of Lisp<font color="#E5E5E5"> deep inside</font>

127
00:06:59,580 --> 00:07:07,619
somewhere there's<font color="#E5E5E5"> this Lisp hiding</font><font color="#CCCCCC"> so I</font>

128
00:07:05,180 --> 00:07:13,199
thought why not using<font color="#E5E5E5"> Lisp in the first</font>

129
00:07:07,619 --> 00:07:15,539
place and so I'm here<font color="#E5E5E5"> to talk about my</font>

130
00:07:13,199 --> 00:07:18,629
favorite list which is actually<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font>

131
00:07:15,539 --> 00:07:20,509
scheme family<font color="#CCCCCC"> it's racket and</font><font color="#E5E5E5"> it's a</font>

132
00:07:18,629 --> 00:07:24,089
language oriented programming language

133
00:07:20,509 --> 00:07:27,689
so you<font color="#CCCCCC"> can check</font><font color="#E5E5E5"> it out at racket</font>

134
00:07:24,089 --> 00:07:29,399
language<font color="#CCCCCC"> work and so as it's a lisp</font>

135
00:07:27,689 --> 00:07:31,649
language it allows writing itself<font color="#E5E5E5"> by</font>

136
00:07:29,399 --> 00:07:35,219
design it understands itself<font color="#E5E5E5"> you can</font>

137
00:07:31,649 --> 00:07:38,009
modify the compiler<font color="#E5E5E5"> by by using the</font>

138
00:07:35,219 --> 00:07:41,610
language<font color="#E5E5E5"> and so it's really good at</font>

139
00:07:38,009 --> 00:07:46,979
writing<font color="#CCCCCC"> geocells with our examples of</font>

140
00:07:41,610 --> 00:07:49,259
<font color="#E5E5E5">DSL that ship with racket there's</font>

141
00:07:46,979 --> 00:07:50,729
<font color="#CCCCCC">language for slide shows you which is</font>

142
00:07:49,259 --> 00:07:54,930
the one I'm using right<font color="#CCCCCC"> now for these</font>

143
00:07:50,729 --> 00:07:56,998
slides<font color="#CCCCCC"> there's a racket for doing UI</font>

144
00:07:54,930 --> 00:08:00,180
interfaces scribble is for documentation

145
00:07:56,999 --> 00:08:03,529
<font color="#CCCCCC">there's a language</font><font color="#E5E5E5"> for editing</font><font color="#CCCCCC"> videos</font>

146
00:08:00,180 --> 00:08:07,619
and there's a<font color="#CCCCCC"> webserver language</font>

147
00:08:03,529 --> 00:08:10,979
anything you like because making a<font color="#E5E5E5"> DSL</font>

148
00:08:07,619 --> 00:08:14,969
in racket is like five lines without<font color="#E5E5E5"> the</font>

149
00:08:10,979 --> 00:08:17,369
five lines<font color="#E5E5E5"> that generates a parser in</font>

150
00:08:14,969 --> 00:08:20,519
racket very bit intimidating at first

151
00:08:17,369 --> 00:08:23,849
but with just<font color="#E5E5E5"> a</font><font color="#CCCCCC"> small combination of</font>

152
00:08:20,519 --> 00:08:25,829
racket features and you just put<font color="#E5E5E5"> good</font>

153
00:08:23,849 --> 00:08:27,628
lines into a file<font color="#E5E5E5"> with the name of the</font>

154
00:08:25,829 --> 00:08:30,029
<font color="#E5E5E5">language you want to create and you got</font>

155
00:08:27,629 --> 00:08:32,250
<font color="#E5E5E5">yourself a full reader parser expander</font>

156
00:08:30,029 --> 00:08:36,269
with all the standard functions from

157
00:08:32,250 --> 00:08:39,509
racket<font color="#E5E5E5"> which allows you to</font><font color="#CCCCCC"> create a lot</font>

158
00:08:36,269 --> 00:08:41,519
<font color="#E5E5E5">of a lot</font><font color="#CCCCCC"> of languages which is one of</font>

159
00:08:39,509 --> 00:08:44,188
<font color="#CCCCCC">the languages I'm working on it's</font><font color="#E5E5E5"> called</font>

160
00:08:41,519 --> 00:08:49,170
web<font color="#E5E5E5"> galaxy it's based on the web server</font>

161
00:08:44,188 --> 00:08:51,839
system and as you can see you kind of

162
00:08:49,170 --> 00:08:55,910
blur the frontier between what is code

163
00:08:51,839 --> 00:09:01,910
and what is data in<font color="#CCCCCC"> this</font><font color="#E5E5E5"> case we got</font><font color="#CCCCCC"> a</font>

164
00:08:55,910 --> 00:09:03,510
response for from the API<font color="#CCCCCC"> the the API</font>

165
00:09:01,910 --> 00:09:06,389
endpoint is Pawnee

166
00:09:03,510 --> 00:09:09,000
it takes an ID and it gets the pony from

167
00:09:06,389 --> 00:09:12,149
the database and<font color="#CCCCCC"> then it</font><font color="#E5E5E5"> returns HTML so</font>

168
00:09:09,000 --> 00:09:16,019
now we're writing HTML and then a bit

169
00:09:12,149 --> 00:09:19,079
<font color="#CCCCCC">later writing CSS</font><font color="#E5E5E5"> then a bit</font><font color="#CCCCCC"> later</font>

170
00:09:16,019 --> 00:09:24,600
<font color="#E5E5E5">rewriting JavaScript and so we don't</font>

171
00:09:19,079 --> 00:09:27,089
care<font color="#CCCCCC"> it's just using this list syntax</font>

172
00:09:24,600 --> 00:09:31,319
called<font color="#CCCCCC"> s</font><font color="#E5E5E5"> expressions you can write any</font>

173
00:09:27,089 --> 00:09:33,540
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> language in the same flow in the</font>

174
00:09:31,319 --> 00:09:35,000
<font color="#E5E5E5">same code you could easier data you that</font>

175
00:09:33,540 --> 00:09:37,680
I do<font color="#CCCCCC"> code you don't</font><font color="#E5E5E5"> care</font>

176
00:09:35,000 --> 00:09:43,290
this<font color="#E5E5E5"> is another example of a project</font><font color="#CCCCCC"> I</font>

177
00:09:37,680 --> 00:09:48,500
worked<font color="#CCCCCC"> on</font><font color="#E5E5E5"> it's a simple file that you</font>

178
00:09:43,290 --> 00:09:51,740
write your you write your emulator for

179
00:09:48,500 --> 00:09:55,170
you<font color="#E5E5E5"> write the description for processor</font>

180
00:09:51,740 --> 00:09:59,040
and it generates a full and you<font color="#E5E5E5"> later</font>

181
00:09:55,170 --> 00:10:02,729
<font color="#CCCCCC">from</font><font color="#E5E5E5"> that distribution so this file is</font>

182
00:09:59,040 --> 00:10:04,829
about 500 lines<font color="#E5E5E5"> I think and it generates</font>

183
00:10:02,730 --> 00:10:06,300
a full emulator for that processor<font color="#E5E5E5"> you</font>

184
00:10:04,829 --> 00:10:08,579
just<font color="#E5E5E5"> described the registers you just</font>

185
00:10:06,300 --> 00:10:11,370
described it the<font color="#E5E5E5"> status register</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> it</font>

186
00:10:08,579 --> 00:10:14,250
<font color="#E5E5E5">what the means to</font><font color="#CCCCCC"> interrupts then all</font>

187
00:10:11,370 --> 00:10:16,769
the operations and you got yourself<font color="#CCCCCC"> an</font>

188
00:10:14,250 --> 00:10:17,850
emulator<font color="#E5E5E5"> without writing any code</font><font color="#CCCCCC"> you</font>

189
00:10:16,769 --> 00:10:21,829
<font color="#CCCCCC">just have the data</font>

190
00:10:17,850 --> 00:10:24,959
<font color="#E5E5E5">presenting what the emulator is doing</font>

191
00:10:21,829 --> 00:10:26,609
<font color="#CCCCCC">this is another example used everywhere</font>

192
00:10:24,959 --> 00:10:29,518
in<font color="#E5E5E5"> the racket environment</font>

193
00:10:26,610 --> 00:10:33,410
it's called scribble it's documentation

194
00:10:29,519 --> 00:10:38,399
language it's kind of like markdown or

195
00:10:33,410 --> 00:10:43,649
latech<font color="#E5E5E5"> it's really useful when you want</font>

196
00:10:38,399 --> 00:10:46,439
<font color="#CCCCCC">to write more textual documentation and</font>

197
00:10:43,649 --> 00:10:47,759
you you can add the best like functions

198
00:10:46,439 --> 00:10:49,980
you can open the function<font color="#E5E5E5"> without</font>

199
00:10:47,759 --> 00:10:52,649
<font color="#CCCCCC">defining a function and it generates</font>

200
00:10:49,980 --> 00:10:55,140
some paragraphs<font color="#E5E5E5"> and in generates links</font>

201
00:10:52,649 --> 00:10:57,319
to over part<font color="#E5E5E5"> of the documentation and</font>

202
00:10:55,140 --> 00:10:57,319
stuff

203
00:10:58,310 --> 00:11:06,449
so what I really want<font color="#CCCCCC"> to focus on</font><font color="#E5E5E5"> is</font>

204
00:11:03,860 --> 00:11:09,030
usually your data structures are not

205
00:11:06,450 --> 00:11:12,960
enough<font color="#E5E5E5"> for the problem you're trying to</font>

206
00:11:09,030 --> 00:11:17,819
to map<font color="#CCCCCC"> so in those times we seek more</font>

207
00:11:12,960 --> 00:11:20,430
abstraction<font color="#E5E5E5"> and for my from my point of</font>

208
00:11:17,820 --> 00:11:23,880
view I think<font color="#CCCCCC"> DSS are a very good way to</font>

209
00:11:20,430 --> 00:11:26,579
express<font color="#E5E5E5"> abstractions as languages and</font>

210
00:11:23,880 --> 00:11:30,510
it's it happens that<font color="#CCCCCC"> racket is a really</font>

211
00:11:26,580 --> 00:11:32,880
good language<font color="#E5E5E5"> for</font><font color="#CCCCCC"> writing languages by</font>

212
00:11:30,510 --> 00:11:36,420
<font color="#E5E5E5">putting this middleware logic into a</font>

213
00:11:32,880 --> 00:11:39,060
<font color="#E5E5E5">language</font><font color="#CCCCCC"> you can make it evolve and fit</font>

214
00:11:36,420 --> 00:11:40,439
<font color="#E5E5E5">your domain you care about your</font><font color="#CCCCCC"> language</font>

215
00:11:39,060 --> 00:11:44,939
<font color="#CCCCCC">more than you care</font><font color="#E5E5E5"> about</font>

216
00:11:40,440 --> 00:11:47,790
<font color="#E5E5E5">shada script</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> in some part of</font><font color="#CCCCCC"> your</font>

217
00:11:44,940 --> 00:11:49,950
system<font color="#CCCCCC"> you don't have</font><font color="#E5E5E5"> to write ugly data</font>

218
00:11:47,790 --> 00:11:52,140
transformation scripts<font color="#CCCCCC"> ever again it's</font>

219
00:11:49,950 --> 00:11:53,970
just<font color="#CCCCCC"> the language</font><font color="#E5E5E5"> is where to help you</font>

220
00:11:52,140 --> 00:11:57,210
make the transformations<font color="#CCCCCC"> you don't have</font>

221
00:11:53,970 --> 00:12:00,620
to write some one-shot scripts to

222
00:11:57,210 --> 00:12:04,730
transform data<font color="#E5E5E5"> into</font><font color="#CCCCCC"> something else and</font>

223
00:12:00,620 --> 00:12:06,810
<font color="#CCCCCC">when you work in a</font><font color="#E5E5E5"> team the</font>

224
00:12:04,730 --> 00:12:11,970
<font color="#E5E5E5">documentation that describes you usually</font>

225
00:12:06,810 --> 00:12:14,939
<font color="#E5E5E5">a script</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> script</font><font color="#CCCCCC"> that modifies some</font>

226
00:12:11,970 --> 00:12:18,780
data is has been written<font color="#E5E5E5"> like for one</font>

227
00:12:14,940 --> 00:12:21,360
<font color="#CCCCCC">short</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> it has no</font><font color="#E5E5E5"> documentation but</font>

228
00:12:18,780 --> 00:12:23,160
<font color="#E5E5E5">if you write the language you have the</font>

229
00:12:21,360 --> 00:12:25,560
language<font color="#CCCCCC"> specification you have the the</font>

230
00:12:23,160 --> 00:12:26,579
<font color="#CCCCCC">language description and so you can</font>

231
00:12:25,560 --> 00:12:30,930
provide you thing with that

232
00:12:26,580 --> 00:12:35,210
documentation<font color="#E5E5E5"> and make them learn</font><font color="#CCCCCC"> how</font>

233
00:12:30,930 --> 00:12:42,150
the language is working and so they can

234
00:12:35,210 --> 00:12:45,870
directly use it use<font color="#CCCCCC"> it this afternoon at</font>

235
00:12:42,150 --> 00:12:47,790
<font color="#E5E5E5">5:00</font><font color="#CCCCCC"> p.m. if you are interested in</font>

236
00:12:45,870 --> 00:12:51,480
making languages I'll be having a

237
00:12:47,790 --> 00:12:57,240
workshop in an hour<font color="#E5E5E5"> about</font><font color="#CCCCCC"> an hour you</font>

238
00:12:51,480 --> 00:12:59,580
can<font color="#CCCCCC"> come and create your language and in</font>

239
00:12:57,240 --> 00:13:01,290
an<font color="#E5E5E5"> hour you you get back home with your</font>

240
00:12:59,580 --> 00:13:04,620
<font color="#CCCCCC">own language you</font><font color="#E5E5E5"> can you can use for</font>

241
00:13:01,290 --> 00:13:08,810
<font color="#E5E5E5">whatever you you want so if</font><font color="#CCCCCC"> you like</font>

242
00:13:04,620 --> 00:13:08,810
making languages of them feel<font color="#E5E5E5"> there</font>

243
00:13:08,920 --> 00:13:17,930
[Applause]

244
00:13:15,829 --> 00:13:31,310
I think we got some<font color="#E5E5E5"> time so if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have</font>

245
00:13:17,930 --> 00:13:34,729
an equation yeah you can

246
00:13:31,310 --> 00:13:36,768
by default<font color="#E5E5E5"> the easiest way to make this</font>

247
00:13:34,730 --> 00:13:39,860
<font color="#E5E5E5">kind of languages is using s expressions</font>

248
00:13:36,769 --> 00:13:43,610
but if you want you<font color="#E5E5E5"> can create a custom</font>

249
00:13:39,860 --> 00:13:47,089
reader<font color="#E5E5E5"> and then for example scribble is</font>

250
00:13:43,610 --> 00:13:59,740
not made with s expressions you<font color="#E5E5E5"> can have</font>

251
00:13:47,089 --> 00:13:59,740
the<font color="#E5E5E5"> yet the syntax you want sorry</font>

252
00:14:01,190 --> 00:14:04,060
nope

253
00:14:13,860 --> 00:14:19,080
and so I don't<font color="#E5E5E5"> have a difference</font>

254
00:14:25,670 --> 00:15:19,969
<font color="#E5E5E5">okay do we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> repeat the question</font>

255
00:14:28,970 --> 00:15:28,310
<font color="#CCCCCC">for the yeah</font>

256
00:15:19,970 --> 00:15:30,290
yeah obviously maybe I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> I don't</font>

257
00:15:28,310 --> 00:15:36,349
<font color="#E5E5E5">have a lot of experience with having to</font>

258
00:15:30,290 --> 00:15:40,219
really crunch data<font color="#E5E5E5"> files</font><font color="#CCCCCC"> at high speed</font>

259
00:15:36,350 --> 00:15:49,730
usually<font color="#CCCCCC"> I use</font><font color="#E5E5E5"> data fight for nothing to</font>

260
00:15:40,220 --> 00:15:54,610
a specific domain but<font color="#E5E5E5"> racket is really</font>

261
00:15:49,730 --> 00:15:54,610
good at being<font color="#E5E5E5"> reactive like that mostly</font>

262
00:15:55,600 --> 00:16:02,900
there's an<font color="#E5E5E5"> IDE that comes with racket</font>

263
00:15:58,400 --> 00:16:06,790
that<font color="#E5E5E5"> is doctor racket and it's it has a</font>

264
00:16:02,900 --> 00:16:10,280
load language we evolved a lot into

265
00:16:06,790 --> 00:16:12,439
interactivity<font color="#E5E5E5"> so for example if you</font>

266
00:16:10,280 --> 00:16:17,510
write<font color="#E5E5E5"> a custom language</font><font color="#CCCCCC"> using racket</font>

267
00:16:12,440 --> 00:16:20,780
it's automatically auto-completed<font color="#E5E5E5"> inside</font>

268
00:16:17,510 --> 00:16:23,420
<font color="#CCCCCC">doctor racket and the highlights the</font>

269
00:16:20,780 --> 00:16:27,740
color I like<font color="#E5E5E5"> ting is there and stuff</font>

270
00:16:23,420 --> 00:16:31,370
<font color="#E5E5E5">like that so for example I didn't</font>

271
00:16:27,740 --> 00:16:34,190
<font color="#CCCCCC">ordered</font><font color="#E5E5E5"> the presentation using doctor</font>

272
00:16:31,370 --> 00:16:38,610
racket but if you do you have<font color="#E5E5E5"> some kind</font>

273
00:16:34,190 --> 00:16:41,760
of interactive thing like<font color="#E5E5E5"> WYSIWYG system</font>

274
00:16:38,610 --> 00:16:47,040
you can create<font color="#CCCCCC"> your your slides by</font>

275
00:16:41,760 --> 00:16:49,050
<font color="#CCCCCC">clicking on it and so by using</font><font color="#E5E5E5"> a</font>

276
00:16:47,040 --> 00:16:51,959
language<font color="#E5E5E5"> that allows itself to that</font>

277
00:16:49,050 --> 00:16:54,719
understands<font color="#CCCCCC"> itself you can usually make</font>

278
00:16:51,959 --> 00:17:04,649
some interactivity<font color="#CCCCCC"> easier than using</font>

279
00:16:54,720 --> 00:17:07,949
<font color="#E5E5E5">another language yeah so racket is very</font>

280
00:17:04,650 --> 00:17:10,500
interesting<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that because the</font><font color="#E5E5E5"> the</font>

281
00:17:07,949 --> 00:17:15,540
typed version<font color="#E5E5E5"> of racket is actually a</font>

282
00:17:10,500 --> 00:17:19,020
language<font color="#CCCCCC"> made with racket so when you</font>

283
00:17:15,540 --> 00:17:22,859
want types<font color="#E5E5E5"> you use typed racket and when</font>

284
00:17:19,020 --> 00:17:26,459
you want you can write<font color="#E5E5E5"> a program using</font>

285
00:17:22,859 --> 00:17:29,520
just the simple<font color="#E5E5E5"> racket</font><font color="#CCCCCC"> and then ad types</font>

286
00:17:26,459 --> 00:17:32,429
later<font color="#E5E5E5"> for example and you just have to</font>

287
00:17:29,520 --> 00:17:36,510
change on the first line of the file and

288
00:17:32,429 --> 00:17:39,360
say now it's typed and that's it<font color="#E5E5E5"> so any</font>

289
00:17:36,510 --> 00:17:44,629
any language can<font color="#E5E5E5"> become typed using</font>

290
00:17:39,360 --> 00:17:44,629
racket<font color="#CCCCCC"> thanks</font>

