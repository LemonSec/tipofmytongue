1
00:00:04,670 --> 00:00:10,280
hi good<font color="#E5E5E5"> morning</font><font color="#CCCCCC"> my name is Luca dairy</font>

2
00:00:07,790 --> 00:00:10,920
and my colleague Sam<font color="#E5E5E5"> Walla will be</font>

3
00:00:10,280 --> 00:00:15,090
talking<font color="#E5E5E5"> to</font>

4
00:00:10,920 --> 00:00:17,009
about<font color="#CCCCCC"> a DPF in the context of network</font>

5
00:00:15,090 --> 00:00:19,800
traffic monitoring<font color="#E5E5E5"> so the idea is</font><font color="#CCCCCC"> to use</font>

6
00:00:17,010 --> 00:00:21,210
and to show you an application<font color="#E5E5E5"> of a BPF</font>

7
00:00:19,800 --> 00:00:23,550
to something<font color="#E5E5E5"> meaningful we are not</font>

8
00:00:21,210 --> 00:00:26,250
talking<font color="#E5E5E5"> about a BPF per se but to use it</font>

9
00:00:23,550 --> 00:00:29,190
<font color="#E5E5E5">in in a word so let's start with a few</font>

10
00:00:26,250 --> 00:00:30,930
few notes<font color="#E5E5E5"> about us I'm the founder of</font>

11
00:00:29,190 --> 00:00:33,180
the<font color="#CCCCCC"> on top</font><font color="#E5E5E5"> project</font><font color="#CCCCCC"> we've heard this</font>

12
00:00:30,930 --> 00:00:34,650
<font color="#E5E5E5">before when we talk</font><font color="#CCCCCC"> about peer</font><font color="#E5E5E5"> free I'm</font>

13
00:00:33,180 --> 00:00:37,860
also a<font color="#CCCCCC"> lecturer at</font><font color="#E5E5E5"> the University of</font>

14
00:00:34,650 --> 00:00:40,949
Pisa<font color="#CCCCCC"> somewhere a</font><font color="#E5E5E5"> is a former</font><font color="#CCCCCC"> student of</font>

15
00:00:37,860 --> 00:00:42,870
mine<font color="#E5E5E5"> and working with us</font><font color="#CCCCCC"> at M top and</font>

16
00:00:40,949 --> 00:00:46,260
top is an<font color="#E5E5E5"> open source project we started</font>

17
00:00:42,870 --> 00:00:48,720
<font color="#CCCCCC">I started in 1998 so very long time</font><font color="#E5E5E5"> ago</font>

18
00:00:46,260 --> 00:00:51,089
it was<font color="#CCCCCC"> about monitoring a network</font>

19
00:00:48,720 --> 00:00:53,519
traffic in our in a simple way<font color="#E5E5E5"> don't</font>

20
00:00:51,089 --> 00:00:55,890
<font color="#E5E5E5">think about the</font><font color="#CCCCCC"> internet ok the internet</font>

21
00:00:53,519 --> 00:00:58,379
did not really exist<font color="#CCCCCC"> as it is today but</font>

22
00:00:55,890 --> 00:01:00,030
<font color="#CCCCCC">it</font><font color="#E5E5E5"> was a totally different</font><font color="#CCCCCC"> world so over</font>

23
00:00:58,379 --> 00:01:02,400
the time we started from analyzing

24
00:01:00,030 --> 00:01:04,530
pockets okay just to display<font color="#E5E5E5"> two people</font>

25
00:01:02,400 --> 00:01:07,020
to accelerate in packet capture so

26
00:01:04,530 --> 00:01:09,390
<font color="#E5E5E5">differing we have done many</font><font color="#CCCCCC"> other things</font>

27
00:01:07,020 --> 00:01:12,149
<font color="#E5E5E5">another thing and good</font><font color="#CCCCCC"> contribution I</font>

28
00:01:09,390 --> 00:01:14,670
<font color="#CCCCCC">think to the open source community</font><font color="#E5E5E5"> is a</font>

29
00:01:12,150 --> 00:01:18,210
library called<font color="#CCCCCC"> n dpi that allows you</font><font color="#E5E5E5"> to</font>

30
00:01:14,670 --> 00:01:20,490
<font color="#E5E5E5">analyze and dissect a packet payload so</font>

31
00:01:18,210 --> 00:01:22,350
it allows you for Institute to tell you

32
00:01:20,490 --> 00:01:24,390
what is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> application protocol of a</font>

33
00:01:22,350 --> 00:01:27,149
certain communication so this is called

34
00:01:24,390 --> 00:01:30,270
n<font color="#CCCCCC"> dpi</font><font color="#E5E5E5"> you can find all our open source</font>

35
00:01:27,149 --> 00:01:34,049
code in on github so<font color="#E5E5E5"> github.com slash n</font>

36
00:01:30,270 --> 00:01:36,710
top and so this is the place where you

37
00:01:34,049 --> 00:01:39,479
<font color="#E5E5E5">will find our activities let's start</font>

38
00:01:36,710 --> 00:01:39,869
from<font color="#E5E5E5"> the very beginning</font><font color="#CCCCCC"> so why why we're</font>

39
00:01:39,479 --> 00:01:42,600
here

40
00:01:39,869 --> 00:01:44,429
<font color="#E5E5E5">talking</font><font color="#CCCCCC"> about network</font><font color="#E5E5E5"> monitoring so when</font>

41
00:01:42,600 --> 00:01:47,178
we talk about network monitoring<font color="#E5E5E5"> so this</font>

42
00:01:44,429 --> 00:01:50,969
is a definition<font color="#CCCCCC"> coming from techo pedia</font>

43
00:01:47,179 --> 00:01:53,700
so we are<font color="#E5E5E5"> talking about the</font><font color="#CCCCCC"> ability in</font>

44
00:01:50,969 --> 00:01:55,469
<font color="#CCCCCC">essence to monitor a computer network</font><font color="#E5E5E5"> to</font>

45
00:01:53,700 --> 00:01:57,329
see what is happening<font color="#CCCCCC"> ok so if there is</font>

46
00:01:55,469 --> 00:01:58,559
<font color="#CCCCCC">something</font><font color="#E5E5E5"> wrong</font><font color="#CCCCCC"> and expected so from the</font>

47
00:01:57,329 --> 00:02:00,449
security standpoint from<font color="#E5E5E5"> the</font>

48
00:01:58,560 --> 00:02:03,780
<font color="#CCCCCC">configuration</font><font color="#E5E5E5"> miss configuration these</font>

49
00:02:00,450 --> 00:02:07,049
type of things<font color="#CCCCCC"> and</font><font color="#E5E5E5"> usually the way to do</font>

50
00:02:03,780 --> 00:02:09,660
that is through packet capture<font color="#E5E5E5"> so in</font>

51
00:02:07,049 --> 00:02:11,790
essence we capture packets we<font color="#CCCCCC"> analyze</font>

52
00:02:09,660 --> 00:02:15,210
pockets<font color="#CCCCCC"> and we report</font><font color="#E5E5E5"> users what is</font>

53
00:02:11,790 --> 00:02:18,060
happening this<font color="#E5E5E5"> is why for instance</font><font color="#CCCCCC"> I I</font>

54
00:02:15,210 --> 00:02:20,220
started<font color="#E5E5E5"> appearing because it was a way</font>

55
00:02:18,060 --> 00:02:22,290
<font color="#CCCCCC">to accelerate packet capture packet</font>

56
00:02:20,220 --> 00:02:23,480
capture<font color="#E5E5E5"> has always been you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> the</font>

57
00:02:22,290 --> 00:02:25,459
main problem

58
00:02:23,480 --> 00:02:29,988
we have to receive this data so they

59
00:02:25,459 --> 00:02:32,300
input<font color="#E5E5E5"> our pockets so if you talk</font><font color="#CCCCCC"> about</font>

60
00:02:29,989 --> 00:02:34,610
<font color="#E5E5E5">that so look at this picture 2009 so</font><font color="#CCCCCC"> ten</font>

61
00:02:32,300 --> 00:02:38,720
years<font color="#CCCCCC"> ago okay</font><font color="#E5E5E5"> this was the</font><font color="#CCCCCC"> picture of</font>

62
00:02:34,610 --> 00:02:40,190
<font color="#E5E5E5">the</font><font color="#CCCCCC"> N</font><font color="#E5E5E5"> top world many years ago so</font><font color="#CCCCCC"> P</font><font color="#E5E5E5"> ring</font>

63
00:02:38,720 --> 00:02:42,349
was there so we had a<font color="#CCCCCC"> different way of</font>

64
00:02:40,190 --> 00:02:44,750
<font color="#CCCCCC">polling pockets</font><font color="#E5E5E5"> up by the pocket polar</font>

65
00:02:42,349 --> 00:02:47,660
<font color="#E5E5E5">teen</font><font color="#CCCCCC"> R P and then we have</font><font color="#E5E5E5"> all our</font>

66
00:02:44,750 --> 00:02:49,340
<font color="#E5E5E5">application on top of it</font><font color="#CCCCCC"> okay so here we</font>

67
00:02:47,660 --> 00:02:51,109
<font color="#CCCCCC">are talking about pockets we are</font><font color="#E5E5E5"> talking</font>

68
00:02:49,340 --> 00:02:55,670
<font color="#CCCCCC">about network</font><font color="#E5E5E5"> adapters we are talking</font>

69
00:02:51,110 --> 00:02:58,580
<font color="#CCCCCC">about</font><font color="#E5E5E5"> way to accelerate pocket up and</font>

70
00:02:55,670 --> 00:03:04,099
that we have<font color="#CCCCCC"> packet analysis</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> ten</font>

71
00:02:58,580 --> 00:03:08,090
years ago<font color="#E5E5E5"> if you're talking about 2019</font>

72
00:03:04,099 --> 00:03:10,910
able to<font color="#CCCCCC"> beat</font><font color="#E5E5E5"> hub you download and</font><font color="#CCCCCC"> open G</font>

73
00:03:08,090 --> 00:03:13,040
so that that is the successor of n<font color="#E5E5E5"> top</font>

74
00:03:10,910 --> 00:03:14,420
so the next generation<font color="#CCCCCC"> you'll</font><font color="#E5E5E5"> see graph</font>

75
00:03:13,040 --> 00:03:16,190
like this you would see that there is<font color="#E5E5E5"> a</font>

76
00:03:14,420 --> 00:03:18,880
peak<font color="#E5E5E5"> you</font><font color="#CCCCCC"> would see</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> there's program</font>

77
00:03:16,190 --> 00:03:21,200
<font color="#CCCCCC">normally here now you</font><font color="#E5E5E5"> will see that</font>

78
00:03:18,880 --> 00:03:23,560
pockets are still for citizen this

79
00:03:21,200 --> 00:03:26,630
morning<font color="#CCCCCC"> until now we talked about pocket</font>

80
00:03:23,560 --> 00:03:31,760
<font color="#CCCCCC">xt p d pd k and so on</font><font color="#E5E5E5"> pockets pockets</font>

81
00:03:26,630 --> 00:03:33,500
pockets<font color="#E5E5E5"> because pockets are too many so</font>

82
00:03:31,760 --> 00:03:35,209
it's not possible<font color="#CCCCCC"> if you handle pockets</font>

83
00:03:33,500 --> 00:03:37,940
<font color="#E5E5E5">easily so you have to put them in</font><font color="#CCCCCC"> a</font>

84
00:03:35,209 --> 00:03:40,100
<font color="#CCCCCC">meaningful fashion so in a</font><font color="#E5E5E5"> ways that you</font>

85
00:03:37,940 --> 00:03:41,810
can understand<font color="#E5E5E5"> what is happening usually</font>

86
00:03:40,100 --> 00:03:44,480
the way of<font color="#E5E5E5"> doing that is through the</font>

87
00:03:41,810 --> 00:03:47,299
<font color="#CCCCCC">concept of flows so you put together one</font>

88
00:03:44,480 --> 00:03:52,010
<font color="#CCCCCC">after the other</font><font color="#E5E5E5"> pockets with the</font><font color="#CCCCCC"> five</font>

89
00:03:47,299 --> 00:03:55,970
toppled so same protocol<font color="#E5E5E5"> same</font><font color="#CCCCCC"> ip source</font>

90
00:03:52,010 --> 00:03:58,280
destination port<font color="#E5E5E5"> and so on so this is</font>

91
00:03:55,970 --> 00:04:00,200
<font color="#CCCCCC">the uncompressed</font><font color="#E5E5E5"> version so you with</font>

92
00:03:58,280 --> 00:04:02,780
three pockets<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the compressed</font>

93
00:04:00,200 --> 00:04:05,000
version<font color="#CCCCCC"> flow</font><font color="#E5E5E5"> so you see my PC</font><font color="#CCCCCC"> is talking</font>

94
00:04:02,780 --> 00:04:06,500
with<font color="#CCCCCC"> that PC</font><font color="#E5E5E5"> over port 80 and all the</font>

95
00:04:05,000 --> 00:04:11,780
pockets<font color="#E5E5E5"> of the same</font><font color="#CCCCCC"> command action will</font>

96
00:04:06,500 --> 00:04:14,599
<font color="#CCCCCC">be put together and again</font><font color="#E5E5E5"> people like to</font>

97
00:04:11,780 --> 00:04:16,220
see a<font color="#E5E5E5"> peek again there was a pig here</font>

98
00:04:14,599 --> 00:04:18,108
you want<font color="#E5E5E5"> to say what's happening you can</font>

99
00:04:16,220 --> 00:04:20,359
<font color="#E5E5E5">see the flow but if you don't trust</font>

100
00:04:18,108 --> 00:04:22,070
flows so you want to go down<font color="#CCCCCC"> to pockets</font>

101
00:04:20,358 --> 00:04:24,888
in a top engine you can click<font color="#CCCCCC"> it</font><font color="#E5E5E5"> say</font>

102
00:04:22,070 --> 00:04:29,090
give me<font color="#CCCCCC"> the pockets so again we're</font>

103
00:04:24,889 --> 00:04:31,070
<font color="#CCCCCC">talking</font><font color="#E5E5E5"> about pocket what's wrong with</font>

104
00:04:29,090 --> 00:04:34,250
pockets I'm not<font color="#E5E5E5"> against pocket</font><font color="#CCCCCC"> I for</font><font color="#E5E5E5"> all</font>

105
00:04:31,070 --> 00:04:36,290
my life<font color="#CCCCCC"> had done pocket ology so it is</font>

106
00:04:34,250 --> 00:04:38,150
good<font color="#CCCCCC"> ok</font>

107
00:04:36,290 --> 00:04:40,310
in particular it is good if you<font color="#E5E5E5"> want to</font>

108
00:04:38,150 --> 00:04:42,469
be outside<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the cistern you're</font>

109
00:04:40,310 --> 00:04:44,150
monitoring<font color="#E5E5E5"> so we are here today at force</font>

110
00:04:42,470 --> 00:04:45,620
them so if I want to<font color="#E5E5E5"> see what is</font>

111
00:04:44,150 --> 00:04:47,900
happening<font color="#CCCCCC"> in this room</font><font color="#E5E5E5"> I cannot put an</font>

112
00:04:45,620 --> 00:04:49,790
<font color="#E5E5E5">eejit on every single laptop</font><font color="#CCCCCC"> first of</font>

113
00:04:47,900 --> 00:04:51,380
<font color="#E5E5E5">all because it is impossible</font><font color="#CCCCCC"> they have</font>

114
00:04:49,790 --> 00:04:52,970
you have<font color="#CCCCCC"> a smartphone you</font><font color="#E5E5E5"> have tablets</font>

115
00:04:51,380 --> 00:04:55,690
you have many<font color="#E5E5E5"> things so it's very easy</font>

116
00:04:52,970 --> 00:04:57,560
<font color="#E5E5E5">to look at pocket so</font><font color="#CCCCCC"> capture</font><font color="#E5E5E5"> packets</font>

117
00:04:55,690 --> 00:04:59,930
classify them put them on a web

118
00:04:57,560 --> 00:05:00,770
interface<font color="#E5E5E5"> very good</font><font color="#CCCCCC"> and wherever there</font>

119
00:04:59,930 --> 00:05:03,170
are some challenges

120
00:05:00,770 --> 00:05:05,120
what is the wireless encryption<font color="#E5E5E5"> in</font><font color="#CCCCCC"> n DPI</font>

121
00:05:03,170 --> 00:05:07,370
we had to<font color="#E5E5E5"> struggle fighting against that</font>

122
00:05:05,120 --> 00:05:09,650
<font color="#E5E5E5">not that we have to</font><font color="#CCCCCC"> decode the packet</font>

123
00:05:07,370 --> 00:05:11,360
<font color="#E5E5E5">again deep pocket dispatcher is not</font>

124
00:05:09,650 --> 00:05:13,460
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> coding</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the cert in the</font>

125
00:05:11,360 --> 00:05:15,920
<font color="#CCCCCC">packet and</font><font color="#E5E5E5"> extracting you know your data</font>

126
00:05:13,460 --> 00:05:17,630
<font color="#CCCCCC">it</font><font color="#E5E5E5"> is about understanding if you are</font>

127
00:05:15,920 --> 00:05:20,050
<font color="#E5E5E5">talking about Gmail or if you are</font>

128
00:05:17,630 --> 00:05:23,210
connected<font color="#CCCCCC"> to</font><font color="#E5E5E5"> your own home application</font>

129
00:05:20,050 --> 00:05:27,080
<font color="#CCCCCC">so we had to press it to decrypt</font><font color="#E5E5E5"> they</font>

130
00:05:23,210 --> 00:05:28,789
did initially you know<font color="#E5E5E5"> certificate</font>

131
00:05:27,080 --> 00:05:29,120
exchange to understand what is<font color="#E5E5E5"> that</font>

132
00:05:28,790 --> 00:05:32,900
about

133
00:05:29,120 --> 00:05:33,640
however the<font color="#CCCCCC"> revitalisation so in the</font>

134
00:05:32,900 --> 00:05:36,289
past

135
00:05:33,640 --> 00:05:37,760
computers were you know connected to the

136
00:05:36,290 --> 00:05:40,460
<font color="#CCCCCC">italy but these days you have</font><font color="#E5E5E5"> seen</font>

137
00:05:37,760 --> 00:05:42,320
<font color="#CCCCCC">psyllium before you will see a big</font>

138
00:05:40,460 --> 00:05:44,419
machine<font color="#CCCCCC"> with several containers</font><font color="#E5E5E5"> all</font>

139
00:05:42,320 --> 00:05:47,570
providing a service<font color="#CCCCCC"> actually a micro</font>

140
00:05:44,420 --> 00:05:49,580
service and only interacting sometimes

141
00:05:47,570 --> 00:05:51,560
the container moves on another place and

142
00:05:49,580 --> 00:05:54,320
so<font color="#E5E5E5"> on so if you look at the pockets</font>

143
00:05:51,560 --> 00:05:56,300
entering or leaving a machine at the end

144
00:05:54,320 --> 00:05:58,070
<font color="#E5E5E5">you will</font><font color="#CCCCCC"> see the</font><font color="#E5E5E5"> same result</font><font color="#CCCCCC"> so you will</font>

145
00:05:56,300 --> 00:06:00,200
see<font color="#E5E5E5"> that you're connected</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> second</font>

146
00:05:58,070 --> 00:06:02,719
<font color="#CCCCCC">website but you</font><font color="#E5E5E5"> don't understand the</font>

147
00:06:00,200 --> 00:06:04,550
<font color="#E5E5E5">interaction of things happening inside</font>

148
00:06:02,720 --> 00:06:08,120
the same computer<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the main</font>

149
00:06:04,550 --> 00:06:10,550
problem and also<font color="#E5E5E5"> when you deal with</font>

150
00:06:08,120 --> 00:06:13,430
<font color="#CCCCCC">pockets you have to handle fragmentation</font>

151
00:06:10,550 --> 00:06:16,100
packet loss retransmission<font color="#E5E5E5"> so the pocket</font>

152
00:06:13,430 --> 00:06:17,960
<font color="#CCCCCC">is not</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> native</font><font color="#E5E5E5"> way of communicating</font>

153
00:06:16,100 --> 00:06:19,970
<font color="#E5E5E5">when you open a socket you say I want to</font>

154
00:06:17,960 --> 00:06:22,400
connect to<font color="#E5E5E5"> this part I</font><font color="#CCCCCC"> want to send data</font>

155
00:06:19,970 --> 00:06:24,650
<font color="#CCCCCC">/ whatever</font><font color="#E5E5E5"> you don't know anything</font><font color="#CCCCCC"> about</font>

156
00:06:22,400 --> 00:06:26,900
pockets<font color="#CCCCCC"> okay so you don't</font><font color="#E5E5E5"> have to pay</font>

157
00:06:24,650 --> 00:06:29,030
attention<font color="#E5E5E5"> to IP artists nothing zero is</font>

158
00:06:26,900 --> 00:06:31,039
the<font color="#E5E5E5"> car</font><font color="#CCCCCC"> that is doing</font><font color="#E5E5E5"> for you if you</font>

159
00:06:29,030 --> 00:06:32,929
there<font color="#E5E5E5"> is a long time</font><font color="#CCCCCC"> queue</font><font color="#E5E5E5"> it will split</font>

160
00:06:31,040 --> 00:06:35,030
the<font color="#E5E5E5"> packet into you know segments and so</font>

161
00:06:32,930 --> 00:06:36,800
on so anyway<font color="#E5E5E5"> pockets are nice but they</font>

162
00:06:35,030 --> 00:06:39,200
<font color="#E5E5E5">are not</font><font color="#CCCCCC"> native people don't understand</font>

163
00:06:36,800 --> 00:06:39,710
<font color="#CCCCCC">pockets I mean expert know what they are</font>

164
00:06:39,200 --> 00:06:43,039
about

165
00:06:39,710 --> 00:06:46,250
so years ago<font color="#E5E5E5"> I wanted to extend that and</font>

166
00:06:43,040 --> 00:06:49,010
give more<font color="#CCCCCC"> information about the system</font>

167
00:06:46,250 --> 00:06:49,850
system<font color="#E5E5E5"> introspection</font><font color="#CCCCCC"> I wanted hand the</font>

168
00:06:49,010 --> 00:06:53,599
visualization

169
00:06:49,850 --> 00:06:56,840
I wanted<font color="#E5E5E5"> to have also an ability of have</font>

170
00:06:53,600 --> 00:06:59,420
a continuous drill down from a problem

171
00:06:56,840 --> 00:07:02,030
<font color="#E5E5E5">let's say</font><font color="#CCCCCC"> a peak I</font><font color="#E5E5E5"> say what is</font><font color="#CCCCCC"> happening</font>

172
00:06:59,420 --> 00:07:04,880
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> my web server a stock with</font><font color="#E5E5E5"> MySQL</font>

173
00:07:02,030 --> 00:07:06,770
and this was the reason and<font color="#E5E5E5"> then you go</font>

174
00:07:04,880 --> 00:07:08,570
to floors we go to<font color="#E5E5E5"> pocket so at the end</font>

175
00:07:06,770 --> 00:07:11,240
<font color="#E5E5E5">we</font><font color="#CCCCCC"> are still using the same floor in</font>

176
00:07:08,570 --> 00:07:12,890
paradigm in<font color="#CCCCCC"> Pocket paradigm but I want</font>

177
00:07:11,240 --> 00:07:14,960
to see what is happening<font color="#CCCCCC"> inside the</font>

178
00:07:12,890 --> 00:07:17,810
system<font color="#CCCCCC"> if there is a security issue</font>

179
00:07:14,960 --> 00:07:20,090
<font color="#CCCCCC">today you can see oh I've seen this</font><font color="#E5E5E5"> this</font>

180
00:07:17,810 --> 00:07:21,710
very nasty payload<font color="#E5E5E5"> inside my pocket</font><font color="#CCCCCC"> but</font>

181
00:07:20,090 --> 00:07:24,109
<font color="#E5E5E5">you don't know the</font><font color="#CCCCCC"> application</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> has</font>

182
00:07:21,710 --> 00:07:26,150
sent that payload<font color="#CCCCCC"> you don't know who has</font>

183
00:07:24,110 --> 00:07:28,040
to receive the payload<font color="#E5E5E5"> you simply</font><font color="#CCCCCC"> have</font>

184
00:07:26,150 --> 00:07:30,620
you know an IDs on<font color="#CCCCCC"> IPs</font><font color="#E5E5E5"> that is is</font>

185
00:07:28,040 --> 00:07:32,570
reporting that but you are blind with

186
00:07:30,620 --> 00:07:35,330
respect to what<font color="#CCCCCC"> is happening</font><font color="#E5E5E5"> inside the</font>

187
00:07:32,570 --> 00:07:37,870
system<font color="#E5E5E5"> so we want to fix this problem</font><font color="#CCCCCC"> so</font>

188
00:07:35,330 --> 00:07:40,900
this<font color="#E5E5E5"> is what we are going to</font><font color="#CCCCCC"> talk today</font>

189
00:07:37,870 --> 00:07:43,970
<font color="#E5E5E5">so in 2014</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> was very excited</font><font color="#CCCCCC"> because</font>

190
00:07:40,900 --> 00:07:45,919
I'm a<font color="#CCCCCC"> good friend of</font><font color="#E5E5E5"> the creative system</font>

191
00:07:43,970 --> 00:07:48,470
about this thing I don't<font color="#E5E5E5"> know if you are</font>

192
00:07:45,920 --> 00:07:50,870
familiar<font color="#E5E5E5"> with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> system was it is</font>

193
00:07:48,470 --> 00:07:55,220
still a kernel<font color="#CCCCCC"> module that</font><font color="#E5E5E5"> you can</font>

194
00:07:50,870 --> 00:07:58,400
install on on Linux it looks like a TCP

195
00:07:55,220 --> 00:08:00,020
dump for system<font color="#CCCCCC"> events so in essence</font><font color="#E5E5E5"> you</font>

196
00:07:58,400 --> 00:08:04,130
can<font color="#E5E5E5"> look at system</font><font color="#CCCCCC"> events</font><font color="#E5E5E5"> you can see</font>

197
00:08:00,020 --> 00:08:07,280
connect<font color="#CCCCCC"> closed</font><font color="#E5E5E5"> and received so the idea</font>

198
00:08:04,130 --> 00:08:10,280
was<font color="#CCCCCC"> to give an idea so when we have you</font>

199
00:08:07,280 --> 00:08:14,719
know application of containers talking

200
00:08:10,280 --> 00:08:17,809
each other<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> my HTTP our talk</font>

201
00:08:14,720 --> 00:08:20,150
with MySQL and this is the amount of

202
00:08:17,810 --> 00:08:22,970
<font color="#E5E5E5">data but as a chain it</font>

203
00:08:20,150 --> 00:08:25,849
however this<font color="#E5E5E5"> software</font><font color="#CCCCCC"> that again 2014</font>

204
00:08:22,970 --> 00:08:28,670
war was very very nice was designed by

205
00:08:25,850 --> 00:08:31,240
somebody<font color="#CCCCCC"> that had pockets in mind pocket</font>

206
00:08:28,670 --> 00:08:37,130
<font color="#CCCCCC">ok this was the</font><font color="#E5E5E5"> idea so use TCP dump</font>

207
00:08:31,240 --> 00:08:39,289
over<font color="#E5E5E5"> system this was the problem</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

208
00:08:37,130 --> 00:08:41,390
had<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this code</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> still</font><font color="#CCCCCC"> still still</font>

209
00:08:39,289 --> 00:08:43,669
<font color="#E5E5E5">available we had we integrate</font><font color="#CCCCCC"> that with</font>

210
00:08:41,390 --> 00:08:45,830
you know<font color="#CCCCCC"> elasticsearch you can see you</font>

211
00:08:43,669 --> 00:08:47,900
know the nice graph you<font color="#CCCCCC"> know top one is</font>

212
00:08:45,830 --> 00:08:50,630
the top<font color="#CCCCCC"> processes top top-of-t</font>

213
00:08:47,900 --> 00:08:53,060
<font color="#CCCCCC">ok very nice</font><font color="#E5E5E5"> so I spent a lot of time on</font>

214
00:08:50,630 --> 00:08:55,939
that<font color="#E5E5E5"> but it was a fail a failure</font><font color="#CCCCCC"> it was</font>

215
00:08:53,060 --> 00:08:58,729
a very big failure<font color="#E5E5E5"> for many reason first</font>

216
00:08:55,940 --> 00:09:01,700
of all it was<font color="#E5E5E5"> using too much</font><font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> so if</font>

217
00:08:58,730 --> 00:09:03,410
you have our process<font color="#CCCCCC"> that using 10 to</font><font color="#E5E5E5"> 20</font>

218
00:09:01,700 --> 00:09:06,829
<font color="#E5E5E5">percent of the CPU on your box</font>

219
00:09:03,410 --> 00:09:08,779
simply because<font color="#CCCCCC"> sis dig was</font><font color="#E5E5E5"> decided with</font>

220
00:09:06,829 --> 00:09:10,219
the pockets in mind<font color="#CCCCCC"> so if there is a</font>

221
00:09:08,779 --> 00:09:12,979
<font color="#E5E5E5">system that receives a</font><font color="#CCCCCC"> lot of traffic</font>

222
00:09:10,220 --> 00:09:15,199
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have to analyze a lot</font><font color="#E5E5E5"> of packets</font><font color="#CCCCCC"> and</font>

223
00:09:12,979 --> 00:09:16,549
that is wrong first<font color="#E5E5E5"> of all because you</font>

224
00:09:15,199 --> 00:09:18,258
<font color="#E5E5E5">are not in the machine with the pockets</font>

225
00:09:16,549 --> 00:09:21,739
<font color="#E5E5E5">anyway because you know there is a lot</font>

226
00:09:18,259 --> 00:09:25,099
<font color="#CCCCCC">of things to do and second because</font><font color="#E5E5E5"> are</font>

227
00:09:21,739 --> 00:09:28,009
<font color="#E5E5E5">the</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> monetary feature add extra load</font>

228
00:09:25,099 --> 00:09:30,319
<font color="#CCCCCC">on the system second</font><font color="#E5E5E5"> people don't really</font>

229
00:09:28,009 --> 00:09:32,269
<font color="#E5E5E5">like</font><font color="#CCCCCC"> to install agents okay it's not</font>

230
00:09:30,319 --> 00:09:34,309
it's not<font color="#E5E5E5"> always possible like I've said</font>

231
00:09:32,269 --> 00:09:35,809
<font color="#E5E5E5">but again this is still doable but the</font>

232
00:09:34,309 --> 00:09:38,209
main problems that<font color="#CCCCCC"> Cystic requires a</font>

233
00:09:35,809 --> 00:09:40,669
carry module and you know many<font color="#CCCCCC"> people</font>

234
00:09:38,209 --> 00:09:43,758
<font color="#CCCCCC">buy you know commercial supported by you</font>

235
00:09:40,669 --> 00:09:45,978
<font color="#CCCCCC">knows read</font><font color="#E5E5E5"> add</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> whatever and these</font>

236
00:09:43,759 --> 00:09:48,229
<font color="#E5E5E5">people say if he stole a</font><font color="#CCCCCC"> camera</font><font color="#E5E5E5"> module</font>

237
00:09:45,979 --> 00:09:50,359
that<font color="#E5E5E5"> you are on your own people</font><font color="#CCCCCC"> pseudo</font>

238
00:09:48,229 --> 00:09:52,729
<font color="#E5E5E5">like that it also continues</font><font color="#CCCCCC"> were not</font>

239
00:09:50,359 --> 00:09:54,919
that<font color="#E5E5E5"> popular 2014 did you know doc has</font>

240
00:09:52,729 --> 00:09:56,899
started to exist<font color="#E5E5E5"> but was not just not a</font>

241
00:09:54,919 --> 00:09:59,029
<font color="#E5E5E5">big problem the time so we were a little</font>

242
00:09:56,899 --> 00:10:01,189
<font color="#E5E5E5">bit ahead of time but the main problem</font>

243
00:09:59,029 --> 00:10:03,259
was the<font color="#E5E5E5"> CPU I mean monitoring was too</font>

244
00:10:01,189 --> 00:10:07,998
expensive<font color="#E5E5E5"> and this was this was the</font>

245
00:10:03,259 --> 00:10:09,589
<font color="#E5E5E5">problem in essence</font><font color="#CCCCCC"> the Cystic outwards</font>

246
00:10:07,999 --> 00:10:11,089
just<font color="#E5E5E5"> to give an</font><font color="#CCCCCC"> example so you suppose</font>

247
00:10:09,589 --> 00:10:13,669
that<font color="#E5E5E5"> you want to monitor</font><font color="#CCCCCC"> a TCP</font>

248
00:10:11,089 --> 00:10:15,470
<font color="#CCCCCC">connection</font><font color="#E5E5E5"> you have to track socket</font><font color="#CCCCCC"> you</font>

249
00:10:13,669 --> 00:10:17,809
have to track<font color="#CCCCCC"> Santa send receive receive</font>

250
00:10:15,470 --> 00:10:20,269
<font color="#CCCCCC">yeah you</font><font color="#E5E5E5"> have to put them together in</font>

251
00:10:17,809 --> 00:10:22,249
<font color="#E5E5E5">flow similar to flows and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to</font>

252
00:10:20,269 --> 00:10:24,199
report<font color="#E5E5E5"> the information</font><font color="#CCCCCC"> and this is very</font>

253
00:10:22,249 --> 00:10:26,359
<font color="#E5E5E5">CPU expensive because</font><font color="#CCCCCC"> you have to see</font>

254
00:10:24,199 --> 00:10:27,978
analyze every<font color="#CCCCCC"> single packet</font><font color="#E5E5E5"> not it not</font>

255
00:10:26,359 --> 00:10:31,249
is<font color="#E5E5E5"> there that is the problem so cystic</font>

256
00:10:27,979 --> 00:10:33,439
is too much<font color="#E5E5E5"> pocket oriented now I'm</font>

257
00:10:31,249 --> 00:10:35,589
<font color="#E5E5E5">going to need the microphone to do some</font>

258
00:10:33,439 --> 00:10:35,589
<font color="#E5E5E5">work</font>

259
00:10:45,770 --> 00:10:50,760
hi<font color="#E5E5E5"> everyone and Somalia and I studied</font>

260
00:10:48,600 --> 00:10:52,020
the<font color="#CCCCCC"> application of the PPF</font><font color="#E5E5E5"> to traffic</font>

261
00:10:50,760 --> 00:10:54,209
monitoring with<font color="#E5E5E5"> Luca</font>

262
00:10:52,020 --> 00:10:56,399
so<font color="#CCCCCC"> I BPF is a very great tool that</font>

263
00:10:54,209 --> 00:10:59,130
<font color="#E5E5E5">enabled us to inject</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> inside the</font>

264
00:10:56,399 --> 00:11:01,470
<font color="#CCCCCC">kernel and</font><font color="#E5E5E5"> and and</font><font color="#CCCCCC"> have it executed when</font>

265
00:10:59,130 --> 00:11:08,160
a specific<font color="#E5E5E5"> target kernel function is</font>

266
00:11:01,470 --> 00:11:09,750
invoked and so these are<font color="#E5E5E5"> by attaching IP</font>

267
00:11:08,160 --> 00:11:12,689
<font color="#CCCCCC">difficult to network functionalities we</font>

268
00:11:09,750 --> 00:11:15,270
are<font color="#CCCCCC"> able to avoid</font><font color="#E5E5E5"> inspecting the</font>

269
00:11:12,690 --> 00:11:18,390
capturing<font color="#CCCCCC"> and analyzing the single</font>

270
00:11:15,270 --> 00:11:24,660
packet but focusing only on the<font color="#E5E5E5"> events</font>

271
00:11:18,390 --> 00:11:27,199
we are interested in<font color="#CCCCCC"> furthermore because</font>

272
00:11:24,660 --> 00:11:32,100
<font color="#CCCCCC">the code is executed inside the kernel</font>

273
00:11:27,200 --> 00:11:34,260
<font color="#E5E5E5">we can compute matrix and Anna sent it</font>

274
00:11:32,100 --> 00:11:36,029
to<font color="#E5E5E5"> user space only</font><font color="#CCCCCC"> they are things that</font>

275
00:11:34,260 --> 00:11:39,350
are needed<font color="#CCCCCC"> and</font><font color="#E5E5E5"> avoid sending all the</font>

276
00:11:36,029 --> 00:11:44,420
information can away we can collect the

277
00:11:39,350 --> 00:11:47,850
<font color="#CCCCCC">book and both these feature gives as a</font>

278
00:11:44,420 --> 00:11:50,430
great savings in terms of CPU<font color="#E5E5E5"> of CPU</font>

279
00:11:47,850 --> 00:11:53,209
<font color="#CCCCCC">usage</font><font color="#E5E5E5"> furthermore btfo as another key</font>

280
00:11:50,430 --> 00:11:56,399
feature<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is that it doesn't need</font>

281
00:11:53,209 --> 00:11:58,140
<font color="#CCCCCC">distillation of</font><font color="#E5E5E5"> another kernel model</font>

282
00:11:56,399 --> 00:12:00,720
<font color="#CCCCCC">that becomes embedded in the modern</font>

283
00:11:58,140 --> 00:12:04,829
linux kernel dashan's<font color="#E5E5E5"> so this is very</font>

284
00:12:00,720 --> 00:12:08,820
great things what we had done is inject

285
00:12:04,829 --> 00:12:12,120
the code inside<font color="#E5E5E5"> the kernel I set up an</font>

286
00:12:08,820 --> 00:12:14,339
insert<font color="#CCCCCC"> a kernel</font><font color="#E5E5E5"> and generate to answer</font>

287
00:12:12,120 --> 00:12:17,100
<font color="#E5E5E5">and send it to user space through a</font>

288
00:12:14,339 --> 00:12:20,130
circle buffer provided by<font color="#CCCCCC"> btf so the</font>

289
00:12:17,100 --> 00:12:22,740
structure of events is very<font color="#E5E5E5"> simple you</font>

290
00:12:20,130 --> 00:12:25,170
have to<font color="#E5E5E5"> Clayton in different in</font>

291
00:12:22,740 --> 00:12:27,329
<font color="#CCCCCC">different</font><font color="#E5E5E5"> ways but provide very simple</font>

292
00:12:25,170 --> 00:12:29,520
<font color="#CCCCCC">information such as the</font><font color="#E5E5E5"> destination</font><font color="#CCCCCC"> or</font>

293
00:12:27,329 --> 00:12:31,680
source port and IP address the protocol

294
00:12:29,520 --> 00:12:34,170
<font color="#E5E5E5">or for</font><font color="#CCCCCC"> example the latency calculated</font>

295
00:12:31,680 --> 00:12:36,029
from inside the kernel<font color="#CCCCCC"> so is from the</font>

296
00:12:34,170 --> 00:12:38,490
perspective<font color="#CCCCCC"> of the kernel</font><font color="#E5E5E5"> or the</font>

297
00:12:36,029 --> 00:12:40,709
application and<font color="#CCCCCC"> not</font><font color="#E5E5E5"> from not from the</font>

298
00:12:38,490 --> 00:12:44,459
<font color="#E5E5E5">external point of view of who captured</font>

299
00:12:40,709 --> 00:12:46,589
their packet<font color="#CCCCCC"> another things</font><font color="#E5E5E5"> that we are</font>

300
00:12:44,459 --> 00:12:50,760
providing is their<font color="#CCCCCC"> Pido the user ID or</font>

301
00:12:46,589 --> 00:12:52,290
for example<font color="#CCCCCC"> the the full path of the</font><font color="#E5E5E5"> of</font>

302
00:12:50,760 --> 00:12:55,769
the executable

303
00:12:52,290 --> 00:12:59,728
or the task name or the occipital<font color="#E5E5E5"> or the</font>

304
00:12:55,769 --> 00:13:04,139
process name<font color="#CCCCCC"> or for example the time in</font>

305
00:12:59,729 --> 00:13:06,629
which the packet the the event has been

306
00:13:04,139 --> 00:13:12,239
<font color="#CCCCCC">triggered and things</font><font color="#E5E5E5"> like this</font>

307
00:13:06,629 --> 00:13:18,379
so to do this we attach<font color="#E5E5E5"> a</font><font color="#CCCCCC"> d--</font><font color="#E5E5E5"> different</font>

308
00:13:12,239 --> 00:13:20,729
probes<font color="#CCCCCC"> diff different</font><font color="#E5E5E5"> we inject code</font><font color="#CCCCCC"> to</font>

309
00:13:18,379 --> 00:13:23,069
we are we attach code to<font color="#E5E5E5"> two different</font>

310
00:13:20,729 --> 00:13:26,549
kernel function that<font color="#E5E5E5"> are for example</font><font color="#CCCCCC"> the</font>

311
00:13:23,069 --> 00:13:30,899
<font color="#E5E5E5">tcp connector which is figured when the</font>

312
00:13:26,549 --> 00:13:33,989
kernel connects to a remote or local

313
00:13:30,899 --> 00:13:38,220
Austin<font color="#E5E5E5"> for example to intercept would</font>

314
00:13:33,989 --> 00:13:40,049
appear events concerning the<font color="#E5E5E5"> change in</font>

315
00:13:38,220 --> 00:13:45,169
the state<font color="#CCCCCC"> of a socket for</font><font color="#E5E5E5"> example we can</font>

316
00:13:40,049 --> 00:13:48,509
track when<font color="#CCCCCC"> a socket</font><font color="#E5E5E5"> is closed and and</font>

317
00:13:45,169 --> 00:13:51,600
and analyze how much bites<font color="#E5E5E5"> has been</font>

318
00:13:48,509 --> 00:13:53,009
received or<font color="#E5E5E5"> sent through that socket and</font>

319
00:13:51,600 --> 00:13:54,869
<font color="#E5E5E5">other things that we can capture is the</font>

320
00:13:53,009 --> 00:13:58,970
retransmissions<font color="#E5E5E5"> events regarding their</font>

321
00:13:54,869 --> 00:14:03,660
representations and<font color="#E5E5E5"> and this is it</font>

322
00:13:58,970 --> 00:14:05,939
so<font color="#E5E5E5"> together</font><font color="#CCCCCC"> this kind of form</font><font color="#E5E5E5"> of</font>

323
00:14:03,660 --> 00:14:08,669
<font color="#CCCCCC">information what we've done is</font><font color="#E5E5E5"> using a</font>

324
00:14:05,939 --> 00:14:10,379
DPF filter function that is<font color="#CCCCCC"> BPA</font><font color="#E5E5E5"> forget</font>

325
00:14:08,669 --> 00:14:13,039
current<font color="#CCCCCC"> task</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> attain the</font><font color="#E5E5E5"> craft the</font>

326
00:14:10,379 --> 00:14:16,350
<font color="#E5E5E5">task the struct associated to each</font>

327
00:14:13,039 --> 00:14:19,739
<font color="#CCCCCC">thread and process and by navigating</font>

328
00:14:16,350 --> 00:14:21,329
<font color="#CCCCCC">through the</font><font color="#E5E5E5"> Constructors we can collect</font>

329
00:14:19,739 --> 00:14:25,279
<font color="#E5E5E5">this</font><font color="#CCCCCC"> kind of information</font><font color="#E5E5E5"> such as the</font>

330
00:14:21,329 --> 00:14:29,189
user or<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> desi group and</font>

331
00:14:25,279 --> 00:14:31,769
<font color="#CCCCCC">furthermore</font><font color="#E5E5E5"> by using the</font><font color="#CCCCCC"> the socket</font><font color="#E5E5E5"> that</font>

332
00:14:29,189 --> 00:14:35,399
<font color="#E5E5E5">is provided with the function call for</font>

333
00:14:31,769 --> 00:14:37,589
<font color="#E5E5E5">example when we connect we use the TCP</font>

334
00:14:35,399 --> 00:14:40,309
connect we will provide<font color="#E5E5E5"> this argument</font>

335
00:14:37,589 --> 00:14:43,559
<font color="#CCCCCC">the socket that we</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> want to use</font>

336
00:14:40,309 --> 00:14:46,738
penalizing<font color="#E5E5E5"> the socket we can extract</font>

337
00:14:43,559 --> 00:14:51,149
<font color="#E5E5E5">information regarding the protocol there</font>

338
00:14:46,739 --> 00:14:53,309
or the destination<font color="#E5E5E5"> address so to provide</font>

339
00:14:51,149 --> 00:14:55,259
to provide visibility<font color="#E5E5E5"> concerning</font>

340
00:14:53,309 --> 00:15:02,759
continuous what we have done is using

341
00:14:55,259 --> 00:15:05,189
<font color="#CCCCCC">the C group that we the the we collected</font>

342
00:15:02,759 --> 00:15:06,210
from inside the<font color="#CCCCCC"> kernel to interactive</font>

343
00:15:05,189 --> 00:15:12,079
the doctor<font color="#E5E5E5"> demon</font>

344
00:15:06,210 --> 00:15:14,130
<font color="#E5E5E5">with the doctor API and and the other</font>

345
00:15:12,080 --> 00:15:16,320
<font color="#E5E5E5">information concerning the container</font>

346
00:15:14,130 --> 00:15:18,570
<font color="#E5E5E5">this can be done because the C group</font>

347
00:15:16,320 --> 00:15:20,700
<font color="#CCCCCC">identifier that we we found</font><font color="#E5E5E5"> that this</font>

348
00:15:18,570 --> 00:15:23,460
<font color="#CCCCCC">group</font><font color="#E5E5E5"> identifier that we have extracted</font>

349
00:15:20,700 --> 00:15:25,460
<font color="#E5E5E5">from the constructor and sent to your</font>

350
00:15:23,460 --> 00:15:30,450
search base is the same<font color="#E5E5E5"> identifier that</font>

351
00:15:25,460 --> 00:15:33,120
<font color="#E5E5E5">doctor used to track containers</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> once</font>

352
00:15:30,450 --> 00:15:35,340
you<font color="#E5E5E5"> have now what we have</font><font color="#CCCCCC"> basically done</font>

353
00:15:33,120 --> 00:15:36,900
is<font color="#E5E5E5"> a collective</font><font color="#CCCCCC"> information collected</font>

354
00:15:35,340 --> 00:15:39,980
the C group<font color="#E5E5E5"> identifier send it to user</font>

355
00:15:36,900 --> 00:15:45,209
space and accuser space little

356
00:15:39,980 --> 00:15:47,790
interrupted the doctor<font color="#E5E5E5"> daemon to collect</font>

357
00:15:45,210 --> 00:15:52,140
information<font color="#E5E5E5"> a story and store them</font><font color="#CCCCCC"> in a</font>

358
00:15:47,790 --> 00:15:55,980
cache<font color="#CCCCCC"> so we can we have information like</font>

359
00:15:52,140 --> 00:15:57,510
for<font color="#CCCCCC"> example the container name or for</font>

360
00:15:55,980 --> 00:15:58,920
how much time has been<font color="#E5E5E5"> the container</font>

361
00:15:57,510 --> 00:16:02,730
alive

362
00:15:58,920 --> 00:16:07,670
furthermore we have found that from from

363
00:16:02,730 --> 00:16:10,830
the<font color="#CCCCCC"> dirty result of the query we can</font>

364
00:16:07,670 --> 00:16:15,180
obtain information from from kubernetes

365
00:16:10,830 --> 00:16:17,820
<font color="#E5E5E5">such as the port</font><font color="#CCCCCC"> just the pod or</font><font color="#E5E5E5"> the or</font>

366
00:16:15,180 --> 00:16:22,349
the<font color="#E5E5E5"> classroom</font><font color="#CCCCCC"> where the container is is</font>

367
00:16:17,820 --> 00:16:25,110
easy<font color="#E5E5E5"> and so we have a greater view about</font>

368
00:16:22,350 --> 00:16:27,600
what is<font color="#E5E5E5"> going on on the machine you know</font>

369
00:16:25,110 --> 00:16:32,010
in a bigger way concerning kubernetes

370
00:16:27,600 --> 00:16:34,140
kubernetes view so under the<font color="#E5E5E5"> hood</font>

371
00:16:32,010 --> 00:16:37,200
these<font color="#E5E5E5"> TCP</font><font color="#CCCCCC"> accept has been implemented</font>

372
00:16:34,140 --> 00:16:39,810
<font color="#CCCCCC">very very ray</font><font color="#E5E5E5"> has been implemented very</font>

373
00:16:37,200 --> 00:16:43,560
simply<font color="#CCCCCC"> because we</font><font color="#E5E5E5"> have attached a probe</font>

374
00:16:39,810 --> 00:16:45,420
<font color="#CCCCCC">to the to the to</font><font color="#E5E5E5"> the food to</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

375
00:16:43,560 --> 00:16:47,520
return of the<font color="#E5E5E5"> function call</font><font color="#CCCCCC"> so when the</font>

376
00:16:45,420 --> 00:16:51,150
function<font color="#CCCCCC"> restaurants</font><font color="#E5E5E5"> our code is</font>

377
00:16:47,520 --> 00:16:53,730
executed when our code is executed we

378
00:16:51,150 --> 00:16:57,150
<font color="#CCCCCC">use the</font><font color="#E5E5E5"> socket that is</font><font color="#CCCCCC"> returned</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> body</font>

379
00:16:53,730 --> 00:17:00,480
<font color="#E5E5E5">function to collect</font><font color="#CCCCCC"> Nana to to to to</font>

380
00:16:57,150 --> 00:17:04,020
collect<font color="#E5E5E5"> network information</font><font color="#CCCCCC"> and use the</font>

381
00:17:00,480 --> 00:17:08,099
desta the task structure<font color="#E5E5E5"> to to collect</font>

382
00:17:04,020 --> 00:17:10,950
information of the user and<font color="#CCCCCC"> concerning</font>

383
00:17:08,099 --> 00:17:13,649
<font color="#E5E5E5">the process so in a very few in a very</font>

384
00:17:10,950 --> 00:17:15,810
similar way<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to actually</font><font color="#E5E5E5"> a</font>

385
00:17:13,650 --> 00:17:19,380
transmission<font color="#E5E5E5"> and events concerning so</font><font color="#CCCCCC"> it</font>

386
00:17:15,810 --> 00:17:21,958
<font color="#CCCCCC">closed when when the socket is closed</font>

387
00:17:19,380 --> 00:17:23,670
but for for for the connector it has

388
00:17:21,959 --> 00:17:26,490
been more<font color="#E5E5E5"> difficult indeed we have to</font>

389
00:17:23,670 --> 00:17:31,670
use a hash table because<font color="#CCCCCC"> this because we</font>

390
00:17:26,490 --> 00:17:31,670
want<font color="#CCCCCC"> not only to return information</font>

391
00:17:32,210 --> 00:17:37,410
about the user or the<font color="#CCCCCC"> network what we</font>

392
00:17:35,010 --> 00:17:40,710
want to return<font color="#E5E5E5"> also</font><font color="#CCCCCC"> the return code of</font>

393
00:17:37,410 --> 00:17:43,650
the function to check if it has failed

394
00:17:40,710 --> 00:17:46,560
<font color="#E5E5E5">or it has been successful so what we</font>

395
00:17:43,650 --> 00:17:49,320
have done is<font color="#CCCCCC"> attach a probe when the</font>

396
00:17:46,560 --> 00:17:51,629
function is invoked when<font color="#E5E5E5"> the tip when</font>

397
00:17:49,320 --> 00:17:54,540
the TCP connect is invoked<font color="#E5E5E5"> collect the</font>

398
00:17:51,630 --> 00:17:57,240
socket<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is passed as argument then</font>

399
00:17:54,540 --> 00:17:59,730
the function<font color="#E5E5E5"> is executed the controller</font>

400
00:17:57,240 --> 00:18:03,270
a reference to the function<font color="#E5E5E5"> and when a</font>

401
00:17:59,730 --> 00:18:06,570
<font color="#E5E5E5">function returns the</font><font color="#CCCCCC"> return code</font><font color="#E5E5E5"> our</font>

402
00:18:03,270 --> 00:18:10,680
could is executed again<font color="#CCCCCC"> we check</font><font color="#E5E5E5"> in the</font>

403
00:18:06,570 --> 00:18:11,460
stable where we put the<font color="#E5E5E5"> socket and is in</font>

404
00:18:10,680 --> 00:18:17,850
the access

405
00:18:11,460 --> 00:18:20,490
that read<font color="#E5E5E5"> identifier</font><font color="#CCCCCC"> we-we-we we</font><font color="#E5E5E5"> get to</font>

406
00:18:17,850 --> 00:18:23,280
this the socket and<font color="#CCCCCC"> and track neural</font>

407
00:18:20,490 --> 00:18:26,910
network information<font color="#E5E5E5"> beside the return</font>

408
00:18:23,280 --> 00:18:29,790
<font color="#E5E5E5">code and in this way we by putting also</font>

409
00:18:26,910 --> 00:18:33,320
the kernel time we were able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to</font>

410
00:18:29,790 --> 00:18:41,460
measure<font color="#E5E5E5"> the latency of the connection</font>

411
00:18:33,320 --> 00:18:45,360
<font color="#E5E5E5">okay so in essence we</font><font color="#CCCCCC"> have integrated a</font>

412
00:18:41,460 --> 00:18:49,680
<font color="#CCCCCC">BPF so with</font><font color="#E5E5E5"> an open G to library called</font>

413
00:18:45,360 --> 00:18:53,100
<font color="#CCCCCC">Leiby BPF</font><font color="#E5E5E5"> flow such that allows us to</font>

414
00:18:49,680 --> 00:18:55,680
<font color="#E5E5E5">avoid you</font><font color="#CCCCCC"> know seeing all these dis</font>

415
00:18:53,100 --> 00:18:56,810
internals of EB PF and just to report to

416
00:18:55,680 --> 00:18:59,280
the port event just<font color="#E5E5E5"> to give</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> idea</font>

417
00:18:56,810 --> 00:19:02,179
these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> a typical example so</font>

418
00:18:59,280 --> 00:19:04,350
<font color="#E5E5E5">you start</font><font color="#CCCCCC"> EVP</font><font color="#E5E5E5"> a flow this</font><font color="#CCCCCC"> is a helper</font>

419
00:19:02,180 --> 00:19:06,360
allows you to see you know the<font color="#E5E5E5"> current</font>

420
00:19:04,350 --> 00:19:08,129
<font color="#CCCCCC">time the process ID what is happening</font>

421
00:19:06,360 --> 00:19:10,110
who's talking to who what is<font color="#CCCCCC"> the process</font>

422
00:19:08,130 --> 00:19:12,030
<font color="#E5E5E5">what is the command something like that</font>

423
00:19:10,110 --> 00:19:14,310
<font color="#E5E5E5">so the idea</font><font color="#CCCCCC"> is that we</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to make this</font>

424
00:19:12,030 --> 00:19:16,230
library<font color="#CCCCCC"> available to - also to everyone</font>

425
00:19:14,310 --> 00:19:18,270
<font color="#CCCCCC">so</font><font color="#E5E5E5"> that you can put your application on</font>

426
00:19:16,230 --> 00:19:21,000
top of it<font color="#E5E5E5"> and forget it</font><font color="#CCCCCC"> PF so for you it</font>

427
00:19:18,270 --> 00:19:23,520
will<font color="#E5E5E5"> be a source of information so</font>

428
00:19:21,000 --> 00:19:25,890
currently in<font color="#CCCCCC"> anent open</font><font color="#E5E5E5"> G this is a</font>

429
00:19:23,520 --> 00:19:28,350
preview<font color="#CCCCCC"> of what we have allows you to</font>

430
00:19:25,890 --> 00:19:30,900
see next<font color="#E5E5E5"> to the communication</font><font color="#CCCCCC"> also the</font>

431
00:19:28,350 --> 00:19:32,939
user and in the process<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

432
00:19:30,900 --> 00:19:34,830
executing that<font color="#E5E5E5"> so you will see this</font><font color="#CCCCCC"> this</font>

433
00:19:32,940 --> 00:19:36,659
this pocket is<font color="#E5E5E5"> going to Apache</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> oh</font>

434
00:19:34,830 --> 00:19:39,029
this pocket<font color="#E5E5E5"> is coming from a chrome</font>

435
00:19:36,659 --> 00:19:40,679
thread and this is for the source<font color="#CCCCCC"> and</font>

436
00:19:39,029 --> 00:19:42,840
for the<font color="#E5E5E5"> destination of course thanks to</font>

437
00:19:40,679 --> 00:19:45,539
<font color="#E5E5E5">the deposit inspection we</font><font color="#CCCCCC"> can analyze</font>

438
00:19:42,840 --> 00:19:47,908
that<font color="#E5E5E5"> this is very important because it</font>

439
00:19:45,539 --> 00:19:49,440
<font color="#CCCCCC">allows us to augment</font><font color="#E5E5E5"> the information so</font>

440
00:19:47,909 --> 00:19:52,139
we have an idea<font color="#E5E5E5"> of what users are doing</font>

441
00:19:49,440 --> 00:19:54,539
so what am i<font color="#E5E5E5"> doing okay</font><font color="#CCCCCC"> I already turned</font>

442
00:19:52,139 --> 00:19:57,059
<font color="#CCCCCC">a bit so I'm using Dropbox so these are</font>

443
00:19:54,539 --> 00:19:58,889
<font color="#E5E5E5">use my network so not just analyze</font>

444
00:19:57,059 --> 00:20:00,899
pocket but also<font color="#CCCCCC"> analyze you know</font>

445
00:19:58,889 --> 00:20:02,699
activities<font color="#CCCCCC"> so what what is a certain</font>

446
00:20:00,899 --> 00:20:05,008
user<font color="#E5E5E5"> is doing and I</font><font color="#CCCCCC"> don't know if you</font>

447
00:20:02,700 --> 00:20:06,960
have noticed when we have the food part

448
00:20:05,009 --> 00:20:09,029
of the application<font color="#CCCCCC"> so in case you</font><font color="#E5E5E5"> you</font>

449
00:20:06,960 --> 00:20:10,529
<font color="#E5E5E5">would have let's say a</font><font color="#CCCCCC"> security</font>

450
00:20:09,029 --> 00:20:12,720
violation<font color="#CCCCCC"> you will see any other a</font>

451
00:20:10,529 --> 00:20:16,080
certain pocket is very<font color="#E5E5E5"> bad so you know</font>

452
00:20:12,720 --> 00:20:18,029
<font color="#CCCCCC">exactly the</font><font color="#E5E5E5"> process that</font><font color="#CCCCCC"> has created</font>

453
00:20:16,080 --> 00:20:21,059
<font color="#E5E5E5">that pocket and the user in the</font>

454
00:20:18,029 --> 00:20:24,059
<font color="#E5E5E5">container eventually so this is this is</font>

455
00:20:21,059 --> 00:20:25,950
important<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> also the ability of</font>

456
00:20:24,059 --> 00:20:28,229
putting all these things together<font color="#E5E5E5"> so you</font>

457
00:20:25,950 --> 00:20:30,149
see<font color="#E5E5E5"> I know what what a certain</font><font color="#CCCCCC"> process</font>

458
00:20:28,229 --> 00:20:32,940
<font color="#E5E5E5">is doing what what are</font><font color="#CCCCCC"> the process</font>

459
00:20:30,149 --> 00:20:35,998
activities<font color="#E5E5E5"> and what are the users doing</font>

460
00:20:32,940 --> 00:20:38,159
inside<font color="#E5E5E5"> the container but you know this</font>

461
00:20:35,999 --> 00:20:41,460
is very<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> ok we just</font><font color="#E5E5E5"> track you know</font>

462
00:20:38,159 --> 00:20:43,379
some some some events very simple so if

463
00:20:41,460 --> 00:20:45,570
you have a you<font color="#E5E5E5"> know gigabit of traffic</font>

464
00:20:43,379 --> 00:20:47,428
we<font color="#E5E5E5"> simply see connect the response and</font>

465
00:20:45,570 --> 00:20:51,389
<font color="#E5E5E5">predict update</font><font color="#CCCCCC"> I will have a problem</font>

466
00:20:47,429 --> 00:20:53,190
<font color="#CCCCCC">with UDP inside UDP every</font><font color="#E5E5E5"> packet is</font>

467
00:20:51,389 --> 00:20:56,849
independent<font color="#E5E5E5"> so you can hop in a socket</font>

468
00:20:53,190 --> 00:20:59,190
send<font color="#E5E5E5"> a packet to to each of those of you</font>

469
00:20:56,849 --> 00:21:01,080
so how do we avoid playing with pockets

470
00:20:59,190 --> 00:21:03,090
<font color="#CCCCCC">again how do we avoid sand to use a</font>

471
00:21:01,080 --> 00:21:05,249
space<font color="#CCCCCC"> an event for every single</font><font color="#E5E5E5"> pocket</font>

472
00:21:03,090 --> 00:21:09,449
<font color="#CCCCCC">so at the moment we</font><font color="#E5E5E5"> have user</font><font color="#CCCCCC"> Danny</font>

473
00:21:05,249 --> 00:21:11,609
<font color="#CCCCCC">kernel</font><font color="#E5E5E5"> LRU so that whenever we see Park</font>

474
00:21:09,450 --> 00:21:13,590
at similar pockets from from the same to

475
00:21:11,609 --> 00:21:16,259
the source<font color="#E5E5E5"> to the same destination</font><font color="#CCCCCC"> we</font>

476
00:21:13,590 --> 00:21:18,509
just send the event once<font color="#CCCCCC"> ok every every</font>

477
00:21:16,259 --> 00:21:20,279
time<font color="#E5E5E5"> so let's say for</font><font color="#CCCCCC"> every for every</font>

478
00:21:18,509 --> 00:21:21,929
second for<font color="#E5E5E5"> everything circle we see</font>

479
00:21:20,279 --> 00:21:24,149
<font color="#E5E5E5">several pockets so especially if you</font>

480
00:21:21,929 --> 00:21:26,039
have a VPN<font color="#CCCCCC"> it say before somebody</font>

481
00:21:24,149 --> 00:21:28,199
<font color="#E5E5E5">mention Open VPN</font><font color="#CCCCCC"> so these are typical</font>

482
00:21:26,039 --> 00:21:30,899
example so we send an event<font color="#E5E5E5"> every every</font>

483
00:21:28,200 --> 00:21:32,369
few set and so<font color="#CCCCCC"> without</font><font color="#E5E5E5"> doing that so</font>

484
00:21:30,899 --> 00:21:35,668
this<font color="#E5E5E5"> is one of the problems that we</font><font color="#CCCCCC"> are</font>

485
00:21:32,369 --> 00:21:37,379
still<font color="#CCCCCC"> trying to put</font><font color="#E5E5E5"> algo unfortunately</font>

486
00:21:35,669 --> 00:21:38,940
everybody is talking<font color="#E5E5E5"> about EBP</font><font color="#CCCCCC"> having</font>

487
00:21:37,379 --> 00:21:40,859
very positive terms but<font color="#E5E5E5"> there are also</font>

488
00:21:38,940 --> 00:21:43,379
some<font color="#CCCCCC"> compromise with it</font><font color="#E5E5E5"> the first</font>

489
00:21:40,859 --> 00:21:45,720
<font color="#E5E5E5">problem is that BCC is not what what I</font>

490
00:21:43,379 --> 00:21:47,669
consider<font color="#E5E5E5"> are stable you</font><font color="#CCCCCC"> know too</font>

491
00:21:45,720 --> 00:21:49,350
first of all<font color="#E5E5E5"> there are some limitation</font>

492
00:21:47,670 --> 00:21:49,770
<font color="#CCCCCC">term of memory loops</font><font color="#E5E5E5"> at these type of</font>

493
00:21:49,350 --> 00:21:51,959
things

494
00:21:49,770 --> 00:21:53,610
<font color="#E5E5E5">you might say so why why is it</font><font color="#CCCCCC"> a problem</font>

495
00:21:51,960 --> 00:21:55,530
<font color="#E5E5E5">it is</font><font color="#CCCCCC"> a problem because whenever you</font>

496
00:21:53,610 --> 00:21:57,419
<font color="#E5E5E5">have to decode the pocket you have</font><font color="#CCCCCC"> to</font>

497
00:21:55,530 --> 00:21:59,340
know you<font color="#E5E5E5"> have to go through certain</font>

498
00:21:57,420 --> 00:22:02,400
<font color="#E5E5E5">layers so in fact before</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> the</font>

499
00:21:59,340 --> 00:22:04,260
<font color="#E5E5E5">presentation of</font><font color="#CCCCCC"> xdp people put a lot of</font>

500
00:22:02,400 --> 00:22:05,700
emphasis about<font color="#CCCCCC"> the</font><font color="#E5E5E5"> speed say I'll give</font>

501
00:22:04,260 --> 00:22:06,870
you<font color="#E5E5E5"> this</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> give me this pocket but if</font>

502
00:22:05,700 --> 00:22:08,640
you have to look<font color="#E5E5E5"> at the pocket before</font>

503
00:22:06,870 --> 00:22:10,320
<font color="#E5E5E5">making your decision</font><font color="#CCCCCC"> so you have to</font>

504
00:22:08,640 --> 00:22:12,060
<font color="#E5E5E5">decode it</font><font color="#CCCCCC"> if you want to decode it</font>

505
00:22:10,320 --> 00:22:14,220
inside the<font color="#E5E5E5"> corner with</font><font color="#CCCCCC"> EBP F you have to</font>

506
00:22:12,060 --> 00:22:18,030
deal<font color="#E5E5E5"> with the problem and the limitation</font>

507
00:22:14,220 --> 00:22:20,820
<font color="#E5E5E5">of this type</font><font color="#CCCCCC"> of tools another</font><font color="#E5E5E5"> point for</font>

508
00:22:18,030 --> 00:22:23,160
this<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know the bcc</font><font color="#E5E5E5"> rules are</font>

509
00:22:20,820 --> 00:22:24,540
changing<font color="#CCCCCC"> very often ok</font><font color="#E5E5E5"> so you see people</font>

510
00:22:23,160 --> 00:22:26,190
<font color="#CCCCCC">that are</font><font color="#E5E5E5"> playing with</font><font color="#CCCCCC"> python</font><font color="#E5E5E5"> and they</font>

511
00:22:24,540 --> 00:22:28,530
are happy<font color="#E5E5E5"> but if you play with the C API</font>

512
00:22:26,190 --> 00:22:30,150
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> sometime</font><font color="#E5E5E5"> this might change we</font>

513
00:22:28,530 --> 00:22:32,220
have although also<font color="#E5E5E5"> some some other</font>

514
00:22:30,150 --> 00:22:34,980
little<font color="#E5E5E5"> limitation that I hope that will</font>

515
00:22:32,220 --> 00:22:38,970
be<font color="#E5E5E5"> solved in the future so just to wrap</font>

516
00:22:34,980 --> 00:22:41,790
up<font color="#E5E5E5"> it is not possible</font><font color="#CCCCCC"> to see the full</font>

517
00:22:38,970 --> 00:22:43,560
<font color="#CCCCCC">path from pockets to activities</font><font color="#E5E5E5"> if there</font>

518
00:22:41,790 --> 00:22:45,420
is<font color="#CCCCCC"> something bad happening</font><font color="#E5E5E5"> I will not</font>

519
00:22:43,560 --> 00:22:47,730
say this pocket<font color="#E5E5E5"> is bad but</font><font color="#CCCCCC"> I would say</font>

520
00:22:45,420 --> 00:22:50,460
this user with this process has created

521
00:22:47,730 --> 00:22:52,590
the problem that's<font color="#E5E5E5"> it thanks to</font><font color="#CCCCCC"> the you</font>

522
00:22:50,460 --> 00:22:54,150
know<font color="#CCCCCC"> the container paradigm a</font><font color="#E5E5E5"> thanks to</font>

523
00:22:52,590 --> 00:22:56,580
the fight at our library<font color="#CCCCCC"> Quran on the</font>

524
00:22:54,150 --> 00:22:57,810
<font color="#E5E5E5">host</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> on each container so we have</font>

525
00:22:56,580 --> 00:23:00,750
the ability of monitoring<font color="#E5E5E5"> all the</font>

526
00:22:57,810 --> 00:23:03,480
contents of a system and to collect<font color="#CCCCCC"> this</font>

527
00:23:00,750 --> 00:23:05,310
metadata<font color="#E5E5E5"> and attacked is to do</font><font color="#CCCCCC"> pocket</font>

528
00:23:03,480 --> 00:23:07,560
the load is very little you<font color="#E5E5E5"> know with</font>

529
00:23:05,310 --> 00:23:10,260
our tool the load is less<font color="#E5E5E5"> than</font><font color="#CCCCCC"> 1% so</font>

530
00:23:07,560 --> 00:23:12,600
it's almost unnoticeable<font color="#E5E5E5"> and we have</font>

531
00:23:10,260 --> 00:23:14,400
this<font color="#E5E5E5"> information</font><font color="#CCCCCC"> this one</font><font color="#E5E5E5"> showed this</font>

532
00:23:12,600 --> 00:23:18,179
preview you know it will<font color="#E5E5E5"> be part of the</font>

533
00:23:14,400 --> 00:23:20,490
next and top<font color="#CCCCCC"> ng version version</font><font color="#E5E5E5"> 4 but</font><font color="#CCCCCC"> we</font>

534
00:23:18,180 --> 00:23:22,860
<font color="#E5E5E5">plan to have this</font><font color="#CCCCCC"> dis</font><font color="#E5E5E5"> library available</font>

535
00:23:20,490 --> 00:23:24,510
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that there might be other tools</font>

536
00:23:22,860 --> 00:23:26,610
willing to use it<font color="#CCCCCC"> so that</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> instance</font>

537
00:23:24,510 --> 00:23:29,070
<font color="#E5E5E5">imagine</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> network probe or an IDs that</font>

538
00:23:26,610 --> 00:23:30,689
want to add this information<font color="#CCCCCC"> next to</font>

539
00:23:29,070 --> 00:23:32,899
their to<font color="#CCCCCC"> their problems</font><font color="#E5E5E5"> their reporting</font>

540
00:23:30,690 --> 00:23:40,909
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font>

541
00:23:32,900 --> 00:23:40,909
[Applause]

