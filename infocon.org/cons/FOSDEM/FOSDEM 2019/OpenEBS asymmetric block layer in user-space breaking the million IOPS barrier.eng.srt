1
00:00:05,000 --> 00:00:09,830
thanks everyone<font color="#CCCCCC"> thanks for joining my</font>

2
00:00:07,700 --> 00:00:11,360
name is<font color="#E5E5E5"> Jeffrey I work for the open</font>

3
00:00:09,830 --> 00:00:14,150
ideas project and as was already

4
00:00:11,360 --> 00:00:15,829
mentioned<font color="#E5E5E5"> I was</font><font color="#CCCCCC"> a little bit of Oracle</font>

5
00:00:14,150 --> 00:00:17,750
at this stage because<font color="#E5E5E5"> you know was</font>

6
00:00:15,830 --> 00:00:20,509
working on something and finally<font color="#E5E5E5"> worked</font>

7
00:00:17,750 --> 00:00:22,689
so I you know submitted this title<font color="#CCCCCC"> to a</font>

8
00:00:20,510 --> 00:00:25,130
<font color="#CCCCCC">call for papers</font><font color="#E5E5E5"> that had</font><font color="#CCCCCC"> Faust them</font><font color="#E5E5E5"> and</font>

9
00:00:22,689 --> 00:00:27,109
we'll<font color="#CCCCCC"> see if we can actually achieve</font>

10
00:00:25,130 --> 00:00:29,720
that<font color="#CCCCCC"> hopefully I can show to you</font><font color="#E5E5E5"> a</font>

11
00:00:27,109 --> 00:00:31,249
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> later today</font><font color="#E5E5E5"> but to my</font><font color="#CCCCCC"> defense</font>

12
00:00:29,720 --> 00:00:34,129
storage is not deterministic right

13
00:00:31,249 --> 00:00:36,230
sometimes<font color="#CCCCCC"> it has oddities there so a</font>

14
00:00:34,130 --> 00:00:38,270
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of a recap so open EBS last</font>

15
00:00:36,230 --> 00:00:40,010
year I was<font color="#CCCCCC"> here actually</font><font color="#E5E5E5"> I forgot to</font>

16
00:00:38,270 --> 00:00:41,810
turn on<font color="#E5E5E5"> the mic so I hope this year</font><font color="#CCCCCC"> is</font>

17
00:00:40,010 --> 00:00:43,730
better<font color="#E5E5E5"> touch briefly a little</font><font color="#CCCCCC"> bit on how</font>

18
00:00:41,810 --> 00:00:45,620
the San and as infrastructure came to be

19
00:00:43,730 --> 00:00:48,470
and mostly<font color="#E5E5E5"> to set the context around</font>

20
00:00:45,620 --> 00:00:50,120
this concept<font color="#CCCCCC"> that we came</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> with in its</font>

21
00:00:48,470 --> 00:00:52,250
container<font color="#E5E5E5"> attached storage and and what</font>

22
00:00:50,120 --> 00:00:54,440
it<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> is and</font><font color="#CCCCCC"> what the purpose is</font>

23
00:00:52,250 --> 00:00:56,210
and<font color="#E5E5E5"> today we'll talk a little bit</font><font color="#CCCCCC"> more</font>

24
00:00:54,440 --> 00:00:58,610
about the progress<font color="#E5E5E5"> we've made in</font><font color="#CCCCCC"> our</font>

25
00:00:56,210 --> 00:01:02,210
maiden<font color="#E5E5E5"> voyage</font><font color="#CCCCCC"> with rust which was a very</font>

26
00:00:58,610 --> 00:01:03,680
<font color="#E5E5E5">exciting journey</font><font color="#CCCCCC"> and we'll go over of</font>

27
00:01:02,210 --> 00:01:05,049
the<font color="#CCCCCC"> concept</font><font color="#E5E5E5"> that we've implemented why</font>

28
00:01:03,680 --> 00:01:07,369
we've implemented them and why I

29
00:01:05,049 --> 00:01:10,610
<font color="#CCCCCC">personally</font><font color="#E5E5E5"> believe</font><font color="#CCCCCC"> that they make</font><font color="#E5E5E5"> sense</font>

30
00:01:07,369 --> 00:01:12,170
<font color="#E5E5E5">as I mentioned a quick demo</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if you</font>

31
00:01:10,610 --> 00:01:14,270
hear something today<font color="#CCCCCC"> that excites you</font>

32
00:01:12,170 --> 00:01:15,860
<font color="#E5E5E5">and you</font><font color="#CCCCCC"> will actually would</font><font color="#E5E5E5"> like to join</font>

33
00:01:14,270 --> 00:01:19,179
on the project<font color="#E5E5E5"> it's open source</font>

34
00:01:15,860 --> 00:01:22,280
<font color="#E5E5E5">obviously but we're also hiring so a</font>

35
00:01:19,180 --> 00:01:23,780
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> opening BS it's an open</font>

36
00:01:22,280 --> 00:01:26,090
source<font color="#E5E5E5"> project started roughly</font><font color="#CCCCCC"> two years</font>

37
00:01:23,780 --> 00:01:28,670
<font color="#E5E5E5">ago it's sponsored by my employer</font>

38
00:01:26,090 --> 00:01:31,130
employee<font color="#CCCCCC"> Maya data</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> actually paid</font>

39
00:01:28,670 --> 00:01:32,870
to<font color="#E5E5E5"> work on this and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> idea is is that</font>

40
00:01:31,130 --> 00:01:36,170
<font color="#CCCCCC">we want to provide a a cloud native</font>

41
00:01:32,870 --> 00:01:38,299
abstraction for<font color="#E5E5E5"> cloud native workloads</font>

42
00:01:36,170 --> 00:01:40,880
<font color="#E5E5E5">in particular for persistent volumes</font>

43
00:01:38,299 --> 00:01:42,710
<font color="#CCCCCC">right so how do you do these persistent</font>

44
00:01:40,880 --> 00:01:44,270
volumes in<font color="#E5E5E5"> the system that's</font>

45
00:01:42,710 --> 00:01:47,179
orchestrated in the cloud in<font color="#CCCCCC"> cuber</font>

46
00:01:44,270 --> 00:01:50,090
Nettie's in particular<font color="#E5E5E5"> so as mentioned</font>

47
00:01:47,180 --> 00:01:51,860
<font color="#E5E5E5">it's built on kubernetes</font><font color="#CCCCCC"> and one thing</font>

48
00:01:50,090 --> 00:01:54,530
that kubernetes has proven over time<font color="#CCCCCC"> i</font>

49
00:01:51,860 --> 00:01:56,390
<font color="#CCCCCC">suppose is that</font><font color="#E5E5E5"> it provides through the</font>

50
00:01:54,530 --> 00:01:57,860
abstractions it allows the developer to

51
00:01:56,390 --> 00:01:59,600
actually<font color="#CCCCCC"> focus on</font><font color="#E5E5E5"> deploying the</font>

52
00:01:57,860 --> 00:02:01,460
application<font color="#CCCCCC"> and</font><font color="#E5E5E5"> not so much worried</font>

53
00:01:59,600 --> 00:02:03,530
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> underlying infrastructure</font><font color="#E5E5E5"> so</font>

54
00:02:01,460 --> 00:02:05,330
<font color="#E5E5E5">we inspired to do basically what</font>

55
00:02:03,530 --> 00:02:08,479
kubernetes does for apps we try to do

56
00:02:05,330 --> 00:02:11,870
<font color="#CCCCCC">for storage in in a meaningful way so to</font>

57
00:02:08,479 --> 00:02:14,930
give a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit a vision about</font><font color="#CCCCCC"> how we</font>

58
00:02:11,870 --> 00:02:17,660
see this all happening<font color="#CCCCCC"> so imagine that</font>

59
00:02:14,930 --> 00:02:18,830
<font color="#E5E5E5">you have several cloud vendors could be</font>

60
00:02:17,660 --> 00:02:21,440
<font color="#E5E5E5">on</font><font color="#CCCCCC"> prem could be</font>

61
00:02:18,830 --> 00:02:22,849
different type of vendors<font color="#CCCCCC"> you all run</font>

62
00:02:21,440 --> 00:02:24,530
through kubernetes and<font color="#E5E5E5"> what we want to</font>

63
00:02:22,849 --> 00:02:26,420
<font color="#E5E5E5">build and what we want to provide is</font>

64
00:02:24,530 --> 00:02:27,920
this declarative data<font color="#E5E5E5"> plane that allows</font>

65
00:02:26,420 --> 00:02:29,599
you<font color="#E5E5E5"> to abstract away the differences</font>

66
00:02:27,920 --> 00:02:31,369
<font color="#E5E5E5">between them not just from a</font>

67
00:02:29,599 --> 00:02:33,410
configuration aspect but<font color="#E5E5E5"> also</font><font color="#CCCCCC"> from a</font>

68
00:02:31,370 --> 00:02:34,970
data plane aspect right<font color="#CCCCCC"> and we'll go</font>

69
00:02:33,410 --> 00:02:38,359
<font color="#E5E5E5">over how we do that</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> obviously</font>

70
00:02:34,970 --> 00:02:40,489
that's non-trivial<font color="#E5E5E5"> so based on that we</font>

71
00:02:38,360 --> 00:02:42,290
we capture a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> information and</font><font color="#E5E5E5"> the</font>

72
00:02:40,489 --> 00:02:45,110
idea is then based<font color="#E5E5E5"> on the information</font><font color="#CCCCCC"> we</font>

73
00:02:42,290 --> 00:02:47,120
provide various technologies that

74
00:02:45,110 --> 00:02:49,940
provide<font color="#E5E5E5"> give you some insight visibility</font>

75
00:02:47,120 --> 00:02:51,739
advice in terms<font color="#E5E5E5"> of how you</font><font color="#CCCCCC"> should move</font>

76
00:02:49,940 --> 00:02:54,400
<font color="#CCCCCC">your data and things like that policies</font>

77
00:02:51,739 --> 00:02:58,280
and<font color="#CCCCCC"> what-have-you</font><font color="#E5E5E5"> so the motivation that</font>

78
00:02:54,400 --> 00:02:59,780
<font color="#E5E5E5">this project has to</font><font color="#CCCCCC"> begin with is</font><font color="#E5E5E5"> okay</font>

79
00:02:58,280 --> 00:03:01,489
so why<font color="#E5E5E5"> are we doing</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and one of</font><font color="#CCCCCC"> the</font>

80
00:02:59,780 --> 00:03:03,200
things that we we saw is that

81
00:03:01,489 --> 00:03:05,450
applications have changed and somebody

82
00:03:03,200 --> 00:03:07,129
<font color="#E5E5E5">forgot to tell storage and what I mean</font>

83
00:03:05,450 --> 00:03:09,470
<font color="#CCCCCC">with that is if you look</font><font color="#E5E5E5"> at cloud</font><font color="#CCCCCC"> native</font>

84
00:03:07,129 --> 00:03:11,209
applications<font color="#E5E5E5"> these</font><font color="#CCCCCC"> days they they have</font>

85
00:03:09,470 --> 00:03:13,700
the scalability batteries and

86
00:03:11,209 --> 00:03:15,349
availability batteries included<font color="#CCCCCC"> right so</font>

87
00:03:13,700 --> 00:03:18,109
if you<font color="#E5E5E5"> look at these new type</font>

88
00:03:15,349 --> 00:03:20,839
applications<font color="#E5E5E5"> they are built with with</font>

89
00:03:18,110 --> 00:03:22,940
<font color="#E5E5E5">failure in mind right across nodes</font>

90
00:03:20,840 --> 00:03:24,560
across<font color="#CCCCCC"> DC's across regions and</font><font color="#E5E5E5"> even</font>

91
00:03:22,940 --> 00:03:26,930
cloud providers on

92
00:03:24,560 --> 00:03:29,000
<font color="#E5E5E5">similarly for performance they all kind</font>

93
00:03:26,930 --> 00:03:31,130
of<font color="#E5E5E5"> have this native scalability through</font>

94
00:03:29,000 --> 00:03:34,269
<font color="#CCCCCC">eh a proxy envoy or what</font><font color="#E5E5E5"> have you</font>

95
00:03:31,130 --> 00:03:37,010
<font color="#E5E5E5">so that leaves some room let's say for</font>

96
00:03:34,269 --> 00:03:38,810
rethinking<font color="#E5E5E5"> how you can do certain</font><font color="#CCCCCC"> things</font>

97
00:03:37,010 --> 00:03:41,328
<font color="#E5E5E5">in storage because not everything is</font>

98
00:03:38,810 --> 00:03:42,560
tied to this you know storage system<font color="#E5E5E5"> and</font>

99
00:03:41,329 --> 00:03:45,109
then if the storage<font color="#E5E5E5"> system goes out</font>

100
00:03:42,560 --> 00:03:47,690
everybody has a problem<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> other</font>

101
00:03:45,109 --> 00:03:49,609
aspect is<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> people a very</font>

102
00:03:47,690 --> 00:03:51,470
important aspect<font color="#E5E5E5"> to DevOps persona</font><font color="#CCCCCC"> right</font>

103
00:03:49,609 --> 00:03:53,989
<font color="#CCCCCC">they need to deliver fast and frequently</font>

104
00:03:51,470 --> 00:03:55,099
<font color="#CCCCCC">I just had a hilarious</font><font color="#E5E5E5"> laugh last night</font>

105
00:03:53,989 --> 00:03:58,400
because there was a<font color="#E5E5E5"> very interesting</font>

106
00:03:55,099 --> 00:04:00,230
<font color="#CCCCCC">video on on</font><font color="#E5E5E5"> Twitter about fast and</font>

107
00:03:58,400 --> 00:04:02,540
frequently<font color="#E5E5E5"> but that's besides the point</font>

108
00:04:00,230 --> 00:04:04,399
<font color="#E5E5E5">the the</font><font color="#CCCCCC"> point here is is that these</font>

109
00:04:02,540 --> 00:04:06,290
applications<font color="#CCCCCC"> are born</font><font color="#E5E5E5"> into the cloud so</font>

110
00:04:04,400 --> 00:04:07,700
they adopt<font color="#E5E5E5"> these cloud native patterns</font>

111
00:04:06,290 --> 00:04:09,410
and now they want<font color="#E5E5E5"> to move it back on</font>

112
00:04:07,700 --> 00:04:10,880
friend because you know they need<font color="#CCCCCC"> to</font>

113
00:04:09,410 --> 00:04:12,230
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> take it</font><font color="#CCCCCC"> in production and</font>

114
00:04:10,880 --> 00:04:14,180
<font color="#E5E5E5">that's when the problems start</font><font color="#CCCCCC"> to come</font>

115
00:04:12,230 --> 00:04:15,440
right because those abstractions<font color="#E5E5E5"> that</font>

116
00:04:14,180 --> 00:04:17,269
<font color="#CCCCCC">are true in the cloud are not</font>

117
00:04:15,440 --> 00:04:19,940
necessarily<font color="#E5E5E5"> true in</font><font color="#CCCCCC"> their own</font>

118
00:04:17,269 --> 00:04:21,680
environment<font color="#E5E5E5"> another important aspect is</font>

119
00:04:19,940 --> 00:04:23,090
hardware<font color="#E5E5E5"> hardware trends</font><font color="#CCCCCC"> enforced a</font>

120
00:04:21,680 --> 00:04:25,940
<font color="#CCCCCC">change in a</font><font color="#E5E5E5"> way that we do things</font><font color="#CCCCCC"> we'll</font>

121
00:04:23,090 --> 00:04:27,919
go over<font color="#CCCCCC"> those as well but</font><font color="#E5E5E5"> you can see</font>

122
00:04:25,940 --> 00:04:30,320
these<font color="#E5E5E5"> trends you know propagate in all</font>

123
00:04:27,919 --> 00:04:30,990
areas right so in in in the languages

124
00:04:30,320 --> 00:04:32,640
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we use</font>

125
00:04:30,990 --> 00:04:34,140
we have the concurrency primitives build

126
00:04:32,640 --> 00:04:36,000
in and what I<font color="#E5E5E5"> mean with that in</font>

127
00:04:34,140 --> 00:04:38,310
<font color="#CCCCCC">particular example is is go let's say</font>

128
00:04:36,000 --> 00:04:39,930
where you just go<font color="#E5E5E5"> whatever and you don't</font>

129
00:04:38,310 --> 00:04:42,450
need<font color="#E5E5E5"> to create P threads or whatever you</font>

130
00:04:39,930 --> 00:04:44,700
just<font color="#E5E5E5"> it's locked into the language there</font>

131
00:04:42,450 --> 00:04:46,800
are<font color="#E5E5E5"> even languages that</font><font color="#CCCCCC"> are even higher</font>

132
00:04:44,700 --> 00:04:48,810
<font color="#E5E5E5">than</font><font color="#CCCCCC"> that native languages like meta</font>

133
00:04:46,800 --> 00:04:52,080
particle<font color="#E5E5E5"> ballerina</font><font color="#CCCCCC"> where you just you</font>

134
00:04:48,810 --> 00:04:53,820
<font color="#CCCCCC">know provide basically</font><font color="#E5E5E5"> describe the</font>

135
00:04:52,080 --> 00:04:56,520
communication between these individual

136
00:04:53,820 --> 00:04:58,980
components<font color="#CCCCCC"> and and there's that I'm so</font>

137
00:04:56,520 --> 00:05:00,750
the hardware<font color="#E5E5E5"> and then obviously</font>

138
00:04:58,980 --> 00:05:03,180
kubernetes as a universal control

139
00:05:00,750 --> 00:05:04,920
<font color="#E5E5E5">playing to deploy these things but the</font>

140
00:05:03,180 --> 00:05:06,480
interesting<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> is very recently and</font>

141
00:05:04,920 --> 00:05:08,160
this is as fuel a lot<font color="#E5E5E5"> of the work that</font>

142
00:05:06,480 --> 00:05:10,560
<font color="#E5E5E5">I've</font><font color="#CCCCCC"> been doing the last couple of</font>

143
00:05:08,160 --> 00:05:12,120
<font color="#CCCCCC">months is that</font><font color="#E5E5E5"> the if you're not</font><font color="#CCCCCC"> going</font>

144
00:05:10,560 --> 00:05:13,920
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the cloud</font><font color="#CCCCCC"> the cloud will come for you</font>

145
00:05:12,120 --> 00:05:16,230
<font color="#E5E5E5">and</font><font color="#CCCCCC"> what I mean</font><font color="#E5E5E5"> with that is is that you</font>

146
00:05:13,920 --> 00:05:19,170
can actually it's not<font color="#E5E5E5"> publicly</font><font color="#CCCCCC"> available</font>

147
00:05:16,230 --> 00:05:22,050
yet<font color="#CCCCCC"> but things</font><font color="#E5E5E5"> like gke</font><font color="#CCCCCC"> on prem where</font>

148
00:05:19,170 --> 00:05:24,240
you get<font color="#E5E5E5"> the g ke look and feel on</font><font color="#CCCCCC"> prem</font>

149
00:05:22,050 --> 00:05:27,030
<font color="#E5E5E5">and the same goes for amazon outpost</font><font color="#CCCCCC"> so</font>

150
00:05:24,240 --> 00:05:30,660
people can<font color="#CCCCCC"> actually buy point solutions</font>

151
00:05:27,030 --> 00:05:33,090
from<font color="#E5E5E5"> google and amazon to run these type</font>

152
00:05:30,660 --> 00:05:35,430
<font color="#CCCCCC">of applications</font><font color="#E5E5E5"> as they</font><font color="#CCCCCC"> were as they did</font>

153
00:05:33,090 --> 00:05:36,810
in<font color="#CCCCCC"> the cloud and</font><font color="#E5E5E5"> the other thing is is</font>

154
00:05:35,430 --> 00:05:40,560
<font color="#CCCCCC">that kubernetes</font><font color="#E5E5E5"> is starting to move</font>

155
00:05:36,810 --> 00:05:42,810
towards also managing<font color="#E5E5E5"> VMs right and we</font>

156
00:05:40,560 --> 00:05:44,880
can argue<font color="#E5E5E5"> if that's a good thing</font><font color="#CCCCCC"> but the</font>

157
00:05:42,810 --> 00:05:46,920
the<font color="#CCCCCC"> other side is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we we see</font>

158
00:05:44,880 --> 00:05:49,260
different type of<font color="#CCCCCC"> VMS</font><font color="#E5E5E5"> there was a talk</font>

159
00:05:46,920 --> 00:05:50,700
yesterday<font color="#CCCCCC"> Rusted</font><font color="#E5E5E5"> EMM which is a perfect</font>

160
00:05:49,260 --> 00:05:52,530
example<font color="#CCCCCC"> where we basically stripped down</font>

161
00:05:50,700 --> 00:05:54,539
<font color="#CCCCCC">a hypervisor to the bare minimum just</font><font color="#E5E5E5"> to</font>

162
00:05:52,530 --> 00:05:56,250
get the isolation features such that we

163
00:05:54,540 --> 00:05:58,290
can run containers in production safely

164
00:05:56,250 --> 00:06:02,780
because<font color="#E5E5E5"> security is still not a very</font>

165
00:05:58,290 --> 00:06:05,430
<font color="#CCCCCC">good salt problem in this space</font><font color="#E5E5E5"> so</font>

166
00:06:02,780 --> 00:06:07,859
<font color="#CCCCCC">Peavey's and PVCs in a nutshell there</font>

167
00:06:05,430 --> 00:06:09,240
was a talk before<font color="#E5E5E5"> this around CSI and</font>

168
00:06:07,860 --> 00:06:12,390
all that so<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> just you'll just go</font>

169
00:06:09,240 --> 00:06:14,460
<font color="#CCCCCC">over this but</font><font color="#E5E5E5"> I basically you know sum</font>

170
00:06:12,390 --> 00:06:16,260
it up as a<font color="#E5E5E5"> PV is a mountable thing that</font>

171
00:06:14,460 --> 00:06:18,210
you register<font color="#CCCCCC"> to your cluster</font><font color="#E5E5E5"> then you</font>

172
00:06:16,260 --> 00:06:19,710
have a PVC<font color="#E5E5E5"> which which you claim this</font>

173
00:06:18,210 --> 00:06:22,020
mountable thing in your cluster<font color="#E5E5E5"> and you</font>

174
00:06:19,710 --> 00:06:26,729
<font color="#E5E5E5">need to reference it in your application</font>

175
00:06:22,020 --> 00:06:28,950
and<font color="#E5E5E5"> then there are some some some other</font>

176
00:06:26,730 --> 00:06:30,300
<font color="#E5E5E5">things around that in terms of dynamic</font>

177
00:06:28,950 --> 00:06:32,430
provisioning so you do not<font color="#E5E5E5"> have to</font>

178
00:06:30,300 --> 00:06:34,290
register<font color="#E5E5E5"> all these things manually</font>

179
00:06:32,430 --> 00:06:36,090
<font color="#CCCCCC">because that would be a tedious task</font><font color="#E5E5E5"> and</font>

180
00:06:34,290 --> 00:06:37,980
that's a good<font color="#E5E5E5"> thing but it</font><font color="#CCCCCC"> also has some</font>

181
00:06:36,090 --> 00:06:39,539
implications<font color="#E5E5E5"> because your storage is</font>

182
00:06:37,980 --> 00:06:41,490
like the mother<font color="#E5E5E5"> of all snowflakes it's</font>

183
00:06:39,540 --> 00:06:43,830
very special<font color="#E5E5E5"> that's very purposely built</font>

184
00:06:41,490 --> 00:06:44,580
and they have all<font color="#E5E5E5"> kinds</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> limitations</font>

185
00:06:43,830 --> 00:06:46,080
in various time

186
00:06:44,580 --> 00:06:47,609
<font color="#E5E5E5">that you need to consider when you are</font>

187
00:06:46,080 --> 00:06:50,068
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> running kubernetes on top of</font>

188
00:06:47,610 --> 00:06:52,319
your storage<font color="#E5E5E5"> system but it is a lot</font>

189
00:06:50,069 --> 00:06:53,909
better<font color="#E5E5E5"> and then you have the CSI</font>

190
00:06:52,319 --> 00:06:58,379
interface container storage native

191
00:06:53,909 --> 00:07:00,330
interface<font color="#E5E5E5"> that basically hides the the</font>

192
00:06:58,379 --> 00:07:01,860
vendor<font color="#CCCCCC"> specific implementation of</font>

193
00:07:00,330 --> 00:07:04,080
actually mounting the volumes<font color="#E5E5E5"> and</font>

194
00:07:01,860 --> 00:07:07,080
propagating<font color="#E5E5E5"> the mount points into</font><font color="#CCCCCC"> your</font>

195
00:07:04,080 --> 00:07:08,909
containers<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> so how'd this look in</font>

196
00:07:07,080 --> 00:07:10,560
<font color="#E5E5E5">yamo</font><font color="#CCCCCC"> how does this</font><font color="#E5E5E5"> look in yam</font><font color="#CCCCCC"> also this</font>

197
00:07:08,909 --> 00:07:12,479
<font color="#E5E5E5">is something that you probably should</font>

198
00:07:10,560 --> 00:07:15,629
<font color="#E5E5E5">not do because what I'm doing</font><font color="#CCCCCC"> here is</font>

199
00:07:12,479 --> 00:07:19,650
I'm<font color="#E5E5E5"> mounting the local mount point of a</font>

200
00:07:15,629 --> 00:07:21,240
of a node into<font color="#E5E5E5"> the container spec and as</font>

201
00:07:19,650 --> 00:07:22,469
I mentioned you should<font color="#E5E5E5"> really shouldn't</font>

202
00:07:21,240 --> 00:07:23,669
do this<font color="#E5E5E5"> unless you really</font><font color="#CCCCCC"> really know</font>

203
00:07:22,469 --> 00:07:25,590
what you're<font color="#E5E5E5"> doing because the problem is</font>

204
00:07:23,669 --> 00:07:27,960
is<font color="#E5E5E5"> when the</font><font color="#CCCCCC"> workload</font><font color="#E5E5E5"> moves</font><font color="#CCCCCC"> away</font><font color="#E5E5E5"> your</font>

205
00:07:25,590 --> 00:07:29,609
data is gone<font color="#E5E5E5"> right and that seems like</font>

206
00:07:27,960 --> 00:07:31,138
like a no-brainer<font color="#CCCCCC"> we'll just</font><font color="#E5E5E5"> don't</font>

207
00:07:29,610 --> 00:07:33,300
<font color="#E5E5E5">delete the data but the point is</font><font color="#CCCCCC"> that</font>

208
00:07:31,139 --> 00:07:36,659
your data<font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> need to move</font><font color="#E5E5E5"> needs to</font>

209
00:07:33,300 --> 00:07:38,009
<font color="#CCCCCC">move with</font><font color="#E5E5E5"> your application right so the</font>

210
00:07:36,659 --> 00:07:40,009
<font color="#E5E5E5">canonical way of doing that then is</font>

211
00:07:38,009 --> 00:07:41,849
through PVS and<font color="#E5E5E5"> PVCs and and</font>

212
00:07:40,009 --> 00:07:44,669
<font color="#E5E5E5">unfortunately it's a</font><font color="#CCCCCC"> little bit more</font>

213
00:07:41,849 --> 00:07:46,620
<font color="#CCCCCC">llamó</font><font color="#E5E5E5"> on and so we basically first</font>

214
00:07:44,669 --> 00:07:48,840
create<font color="#E5E5E5"> this persistent volume and while</font>

215
00:07:46,620 --> 00:07:50,159
<font color="#E5E5E5">I don't go over the details here</font><font color="#CCCCCC"> and</font>

216
00:07:48,840 --> 00:07:51,690
what all<font color="#E5E5E5"> this fields mean that they're</font>

217
00:07:50,159 --> 00:07:54,300
they're described on the documentation

218
00:07:51,690 --> 00:07:56,250
<font color="#E5E5E5">website of kubernetes itself and then</font>

219
00:07:54,300 --> 00:07:58,379
<font color="#E5E5E5">you create the claim right so now I have</font>

220
00:07:56,250 --> 00:07:59,879
a claim<font color="#E5E5E5"> on this</font><font color="#CCCCCC"> volume</font><font color="#E5E5E5"> and the final</font>

221
00:07:58,379 --> 00:08:01,319
piece then is that<font color="#E5E5E5"> I need to</font><font color="#CCCCCC"> actually</font>

222
00:07:59,879 --> 00:08:03,300
refer<font color="#CCCCCC"> to that</font><font color="#E5E5E5"> claim within my</font>

223
00:08:01,319 --> 00:08:05,009
<font color="#CCCCCC">application so</font><font color="#E5E5E5"> that's so there's a whole</font>

224
00:08:03,300 --> 00:08:06,479
<font color="#CCCCCC">lot of Yambol for a simple mount</font><font color="#E5E5E5"> command</font>

225
00:08:05,009 --> 00:08:08,490
<font color="#E5E5E5">but you know it is what it is it's</font><font color="#CCCCCC"> the</font>

226
00:08:06,479 --> 00:08:10,680
cost of abstraction I suppose but it

227
00:08:08,490 --> 00:08:12,900
does make sense if you run this at scale

228
00:08:10,680 --> 00:08:14,759
<font color="#E5E5E5">and just</font><font color="#CCCCCC"> for a</font><font color="#E5E5E5"> single container you're</font>

229
00:08:12,900 --> 00:08:18,299
like well<font color="#E5E5E5"> man that's way too much but at</font>

230
00:08:14,759 --> 00:08:20,550
scale<font color="#CCCCCC"> that actually makes sense so I</font>

231
00:08:18,300 --> 00:08:22,199
think that<font color="#E5E5E5"> picture says more than</font><font color="#CCCCCC"> a</font>

232
00:08:20,550 --> 00:08:24,150
thousand<font color="#E5E5E5"> words so so you know imagine</font>

233
00:08:22,199 --> 00:08:26,639
<font color="#CCCCCC">you have a two node system you have your</font>

234
00:08:24,150 --> 00:08:28,138
PVC<font color="#CCCCCC"> that is somewhere on a storage</font>

235
00:08:26,639 --> 00:08:30,419
system<font color="#CCCCCC"> and it's not important right now</font>

236
00:08:28,139 --> 00:08:31,589
<font color="#E5E5E5">and then you have your pod</font><font color="#CCCCCC"> and then you</font>

237
00:08:30,419 --> 00:08:34,198
need<font color="#E5E5E5"> to mount this</font><font color="#CCCCCC"> thing and this is</font>

238
00:08:31,589 --> 00:08:36,149
what CSI helps for<font color="#E5E5E5"> you it does that</font>

239
00:08:34,198 --> 00:08:37,649
automatically in the<font color="#E5E5E5"> sense that it first</font>

240
00:08:36,149 --> 00:08:39,799
connects it<font color="#CCCCCC"> to the right host where your</font>

241
00:08:37,649 --> 00:08:42,240
workload is<font color="#CCCCCC"> in it knows this because it</font>

242
00:08:39,799 --> 00:08:44,430
works<font color="#E5E5E5"> together with kubernetes to figure</font>

243
00:08:42,240 --> 00:08:47,160
that<font color="#E5E5E5"> out</font><font color="#CCCCCC"> and then there's this final</font>

244
00:08:44,430 --> 00:08:49,439
piece let's say that the blinking arrow

245
00:08:47,160 --> 00:08:51,510
is the actual<font color="#CCCCCC"> mount propagation because</font>

246
00:08:49,440 --> 00:08:52,649
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> it's containers namespaces so</font>

247
00:08:51,510 --> 00:08:55,020
<font color="#E5E5E5">we actually need</font><font color="#CCCCCC"> to do some additional</font>

248
00:08:52,649 --> 00:08:57,029
<font color="#CCCCCC">work</font><font color="#E5E5E5"> and then the trick is obviously</font>

249
00:08:55,020 --> 00:08:57,689
<font color="#E5E5E5">when when the pod moves then we need to</font>

250
00:08:57,029 --> 00:08:59,250
do the same

251
00:08:57,690 --> 00:09:01,650
again and there is an actual<font color="#E5E5E5"> certain</font>

252
00:08:59,250 --> 00:09:03,930
order in<font color="#E5E5E5"> this right you cannot start the</font>

253
00:09:01,650 --> 00:09:05,819
app before<font color="#E5E5E5"> the</font><font color="#CCCCCC"> PV is there so</font><font color="#E5E5E5"> you know</font>

254
00:09:03,930 --> 00:09:07,500
it sounds<font color="#E5E5E5"> trivial but you know there's a</font>

255
00:09:05,820 --> 00:09:10,860
<font color="#CCCCCC">little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more to it then</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know then</font>

256
00:09:07,500 --> 00:09:12,450
meets<font color="#E5E5E5"> the eye in general um so the other</font>

257
00:09:10,860 --> 00:09:14,220
thing is is<font color="#E5E5E5"> that I don't know if you saw</font>

258
00:09:12,450 --> 00:09:16,710
it<font color="#E5E5E5"> blink it should have linked but the</font>

259
00:09:14,220 --> 00:09:19,350
<font color="#E5E5E5">PVC becomes a very important thing here</font>

260
00:09:16,710 --> 00:09:21,480
right<font color="#CCCCCC"> because as I mentioned it doesn't</font>

261
00:09:19,350 --> 00:09:23,310
work without it<font color="#E5E5E5"> for sure</font><font color="#CCCCCC"> but you also</font>

262
00:09:21,480 --> 00:09:25,920
need to<font color="#CCCCCC"> manage that data</font><font color="#E5E5E5"> how do you do</font>

263
00:09:23,310 --> 00:09:28,890
that<font color="#E5E5E5"> right so that's a some of the</font>

264
00:09:25,920 --> 00:09:30,900
things that<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> looked into and so you</font>

265
00:09:28,890 --> 00:09:33,060
know is the problem solved with this PV

266
00:09:30,900 --> 00:09:35,010
PVC abstraction and<font color="#E5E5E5"> I can just plug in</font>

267
00:09:33,060 --> 00:09:40,260
any<font color="#E5E5E5"> storage system in there and you know</font>

268
00:09:35,010 --> 00:09:41,910
<font color="#E5E5E5">be</font><font color="#CCCCCC"> happy</font><font color="#E5E5E5"> but there are some more things</font>

269
00:09:40,260 --> 00:09:43,950
<font color="#CCCCCC">to it than that I or at least we believe</font>

270
00:09:41,910 --> 00:09:46,140
and that<font color="#E5E5E5"> is how does it</font><font color="#CCCCCC"> develop or</font>

271
00:09:43,950 --> 00:09:48,660
compose volume<font color="#CCCCCC"> specific to its needs so</font>

272
00:09:46,140 --> 00:09:50,730
what I mean with that is<font color="#CCCCCC"> that if you</font><font color="#E5E5E5"> for</font>

273
00:09:48,660 --> 00:09:52,319
<font color="#CCCCCC">example run MongoDB and you're using</font>

274
00:09:50,730 --> 00:09:54,090
sharding you don't need all these fancy

275
00:09:52,320 --> 00:09:55,860
<font color="#CCCCCC">features under your storage</font><font color="#E5E5E5"> and in fact</font>

276
00:09:54,090 --> 00:09:58,890
they might actually get in the way<font color="#CCCCCC"> if</font>

277
00:09:55,860 --> 00:10:00,420
your storage system has a fixed end

278
00:09:58,890 --> 00:10:02,040
point<font color="#E5E5E5"> where it replicates to it</font>

279
00:10:00,420 --> 00:10:03,630
<font color="#E5E5E5">basically nails you down to either that</font>

280
00:10:02,040 --> 00:10:05,459
storage<font color="#E5E5E5"> system or that storage system</font>

281
00:10:03,630 --> 00:10:06,630
<font color="#E5E5E5">and thus in the network and all these</font>

282
00:10:05,460 --> 00:10:08,760
<font color="#E5E5E5">type of things so you want some</font>

283
00:10:06,630 --> 00:10:10,950
flexibility<font color="#E5E5E5"> in certain cases maybe not</font>

284
00:10:08,760 --> 00:10:12,540
all um<font color="#E5E5E5"> the other thing is how do you</font>

285
00:10:10,950 --> 00:10:14,580
<font color="#E5E5E5">unify the differences between the</font>

286
00:10:12,540 --> 00:10:17,099
storage subsystems<font color="#CCCCCC"> that you might have</font>

287
00:10:14,580 --> 00:10:20,280
so which<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> dc1 you have a vendor</font>

288
00:10:17,100 --> 00:10:21,870
<font color="#E5E5E5">ADC -</font><font color="#CCCCCC"> you have vendor B ok now I want to</font>

289
00:10:20,280 --> 00:10:23,520
<font color="#E5E5E5">have a PV and I want to</font><font color="#CCCCCC"> replicate this</font>

290
00:10:21,870 --> 00:10:24,720
stuff<font color="#E5E5E5"> how do I actually do that and</font>

291
00:10:23,520 --> 00:10:27,180
<font color="#E5E5E5">these vendors go out of their way to</font>

292
00:10:24,720 --> 00:10:28,770
make<font color="#CCCCCC"> that you know</font><font color="#E5E5E5"> as incompatible as</font>

293
00:10:27,180 --> 00:10:30,060
possible right so<font color="#CCCCCC"> that's that's</font><font color="#E5E5E5"> the</font>

294
00:10:28,770 --> 00:10:32,520
thing<font color="#CCCCCC"> that you need to</font><font color="#E5E5E5"> consider as well</font>

295
00:10:30,060 --> 00:10:34,859
<font color="#E5E5E5">so what can</font><font color="#CCCCCC"> we do to actually make that</font>

296
00:10:32,520 --> 00:10:36,780
<font color="#E5E5E5">a</font><font color="#CCCCCC"> little bit better and the</font><font color="#E5E5E5"> other thing</font>

297
00:10:34,860 --> 00:10:39,000
is<font color="#E5E5E5"> is when you when you when you go</font><font color="#CCCCCC"> in</font>

298
00:10:36,780 --> 00:10:41,400
<font color="#CCCCCC">to</font><font color="#E5E5E5"> Amazon or</font><font color="#CCCCCC"> GK or</font><font color="#E5E5E5"> whatever and whatever</font>

299
00:10:39,000 --> 00:10:42,870
you like it or not<font color="#E5E5E5"> what</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind of easy</font>

300
00:10:41,400 --> 00:10:44,640
you don't<font color="#E5E5E5"> have to worry about anything</font>

301
00:10:42,870 --> 00:10:46,710
right you<font color="#E5E5E5"> just create a volume</font><font color="#CCCCCC"> it's</font>

302
00:10:44,640 --> 00:10:48,660
there<font color="#E5E5E5"> you use it you write it and</font>

303
00:10:46,710 --> 00:10:50,610
<font color="#E5E5E5">something crashes and sure</font><font color="#CCCCCC"> enough there</font>

304
00:10:48,660 --> 00:10:53,040
is your volume<font color="#CCCCCC"> again so this is this</font>

305
00:10:50,610 --> 00:10:55,230
<font color="#CCCCCC">expectation in terms of how people use</font>

306
00:10:53,040 --> 00:10:57,650
<font color="#CCCCCC">it how they operate with it that is</font>

307
00:10:55,230 --> 00:11:00,480
something<font color="#E5E5E5"> that we would like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> bring to</font>

308
00:10:57,650 --> 00:11:03,930
<font color="#E5E5E5">you know on-prem situations or</font><font color="#CCCCCC"> cloud</font>

309
00:11:00,480 --> 00:11:05,910
independent at least so<font color="#E5E5E5"> the gist</font><font color="#CCCCCC"> of it</font>

310
00:11:03,930 --> 00:11:08,699
is make your storage as agile<font color="#E5E5E5"> as</font><font color="#CCCCCC"> the</font>

311
00:11:05,910 --> 00:11:11,490
applications<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they serve now there</font>

312
00:11:08,700 --> 00:11:13,949
is a snake<font color="#CCCCCC"> in the grass for</font>

313
00:11:11,490 --> 00:11:15,720
of a better word and that<font color="#CCCCCC"> is if you as</font>

314
00:11:13,949 --> 00:11:17,998
you create<font color="#E5E5E5"> all these</font><font color="#CCCCCC"> PVS on your storage</font>

315
00:11:15,720 --> 00:11:19,199
systems what you end up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> depending</font>

316
00:11:17,999 --> 00:11:21,149
on<font color="#E5E5E5"> your storage system</font><font color="#CCCCCC"> is this thing</font>

317
00:11:19,199 --> 00:11:22,679
called data gravity<font color="#E5E5E5"> and whenever</font>

318
00:11:21,149 --> 00:11:24,839
whatever<font color="#E5E5E5"> your storage</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> is this</font>

319
00:11:22,679 --> 00:11:26,790
happens by definition<font color="#E5E5E5"> right</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> look</font>

320
00:11:24,839 --> 00:11:29,399
up the<font color="#E5E5E5"> term</font><font color="#CCCCCC"> on the internet there are a</font>

321
00:11:26,790 --> 00:11:31,199
lot of<font color="#E5E5E5"> articles talking about this but</font>

322
00:11:29,399 --> 00:11:33,629
everything<font color="#E5E5E5"> evolves around your storage</font>

323
00:11:31,199 --> 00:11:35,339
system<font color="#CCCCCC"> and the more data you store</font><font color="#E5E5E5"> the</font>

324
00:11:33,629 --> 00:11:37,110
more application become dependent on

325
00:11:35,339 --> 00:11:39,929
that data so it's like you know<font color="#CCCCCC"> there's</font>

326
00:11:37,110 --> 00:11:42,569
<font color="#E5E5E5">never-ending</font><font color="#CCCCCC"> look so how can you break</font>

327
00:11:39,929 --> 00:11:44,399
out of<font color="#CCCCCC"> that data gravity aspect and why</font>

328
00:11:42,569 --> 00:11:46,229
would<font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually want to do that and</font>

329
00:11:44,399 --> 00:11:47,759
<font color="#E5E5E5">one of</font><font color="#CCCCCC"> the reasons is is that all these</font>

330
00:11:46,230 --> 00:11:48,779
<font color="#E5E5E5">storage systems they have limits they</font>

331
00:11:47,759 --> 00:11:50,819
have limits in terms<font color="#E5E5E5"> of latency</font>

332
00:11:48,779 --> 00:11:53,069
throughput the<font color="#E5E5E5"> i/o blender type like</font>

333
00:11:50,819 --> 00:11:54,868
thing and if<font color="#CCCCCC"> if it collapses the whole</font>

334
00:11:53,069 --> 00:11:57,420
<font color="#E5E5E5">universe</font><font color="#CCCCCC"> is gone or</font><font color="#E5E5E5"> at least that solar</font>

335
00:11:54,869 --> 00:11:59,519
system so the other thing<font color="#E5E5E5"> is the</font>

336
00:11:57,420 --> 00:12:02,040
dimensions as I mentioned already<font color="#E5E5E5"> those</font>

337
00:11:59,519 --> 00:12:04,439
volumes typically have a limit in terms

338
00:12:02,040 --> 00:12:07,019
of numbers how many<font color="#E5E5E5"> you can create and</font>

339
00:12:04,439 --> 00:12:09,569
so a typical<font color="#CCCCCC"> solution is you know let's</font>

340
00:12:07,019 --> 00:12:12,839
replicate<font color="#E5E5E5"> the Sun to another dimension</font>

341
00:12:09,569 --> 00:12:14,128
<font color="#E5E5E5">and you know you could argue</font><font color="#CCCCCC"> ok so that</font>

342
00:12:12,839 --> 00:12:15,740
works<font color="#E5E5E5"> and it works</font><font color="#CCCCCC"> great because</font><font color="#E5E5E5"> we've</font>

343
00:12:14,129 --> 00:12:18,420
been<font color="#E5E5E5"> doing that for</font><font color="#CCCCCC"> many many years and</font>

344
00:12:15,740 --> 00:12:20,970
but you<font color="#E5E5E5"> know it might actually make</font><font color="#CCCCCC"> the</font>

345
00:12:18,420 --> 00:12:22,229
<font color="#E5E5E5">problem worse</font><font color="#CCCCCC"> so and when</font><font color="#E5E5E5"> you talk to</font>

346
00:12:20,970 --> 00:12:23,759
peak art about that he's not really

347
00:12:22,230 --> 00:12:25,410
<font color="#CCCCCC">happy</font><font color="#E5E5E5"> because he believes that you</font><font color="#CCCCCC"> know</font>

348
00:12:23,759 --> 00:12:26,910
<font color="#E5E5E5">fighting</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Borg and abort is a</font>

349
00:12:25,410 --> 00:12:29,309
reference to kubernetes which is the

350
00:12:26,910 --> 00:12:31,769
original<font color="#CCCCCC"> paper which you I would suggest</font>

351
00:12:29,309 --> 00:12:34,259
you read so therefore there's some Star

352
00:12:31,769 --> 00:12:37,799
Trek here anyway so the open EBS

353
00:12:34,259 --> 00:12:39,749
approach we we thought<font color="#E5E5E5"> about this we all</font>

354
00:12:37,799 --> 00:12:42,569
<font color="#CCCCCC">have a storage background so we're</font><font color="#E5E5E5"> not</font>

355
00:12:39,749 --> 00:12:44,429
like new to this but<font color="#E5E5E5"> we didn't feel like</font>

356
00:12:42,569 --> 00:12:45,868
<font color="#CCCCCC">ok let's</font><font color="#E5E5E5"> build another distributed</font>

357
00:12:44,429 --> 00:12:46,980
system that's even<font color="#E5E5E5"> better than all the</font>

358
00:12:45,869 --> 00:12:49,920
other distributed systems out there

359
00:12:46,980 --> 00:12:51,299
<font color="#E5E5E5">right so we really try to look</font><font color="#CCCCCC"> into what</font>

360
00:12:49,920 --> 00:12:52,639
is the<font color="#CCCCCC"> problem that we're trying to</font>

361
00:12:51,299 --> 00:12:54,660
solve and one of the things is that

362
00:12:52,639 --> 00:12:56,699
instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> having these dynamic</font>

363
00:12:54,660 --> 00:12:58,679
distributed algorithms dynamically

364
00:12:56,699 --> 00:13:00,420
figure out or calculate where<font color="#CCCCCC"> the data</font>

365
00:12:58,679 --> 00:13:02,129
should<font color="#E5E5E5"> go we actually allow data</font>

366
00:13:00,420 --> 00:13:04,829
<font color="#E5E5E5">placement to be defined in that way and</font>

367
00:13:02,129 --> 00:13:06,990
again<font color="#CCCCCC"> we can do this because kubernetes</font>

368
00:13:04,829 --> 00:13:09,179
<font color="#E5E5E5">is here which has topology awareness and</font>

369
00:13:06,990 --> 00:13:10,709
all<font color="#E5E5E5"> these type of things the other</font><font color="#CCCCCC"> thing</font>

370
00:13:09,179 --> 00:13:12,179
is we want<font color="#E5E5E5"> to have it composable just</font>

371
00:13:10,709 --> 00:13:13,888
like you compose<font color="#E5E5E5"> your containers we</font>

372
00:13:12,179 --> 00:13:15,809
would like be able<font color="#CCCCCC"> for you to</font><font color="#E5E5E5"> compose</font>

373
00:13:13,889 --> 00:13:18,449
<font color="#CCCCCC">your volume</font><font color="#E5E5E5"> and in turn</font><font color="#CCCCCC"> aren't certain</font>

374
00:13:15,809 --> 00:13:21,600
features are off<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you don't need and</font>

375
00:13:18,449 --> 00:13:24,109
as you decompose those monolithic apps

376
00:13:21,600 --> 00:13:26,000
<font color="#E5E5E5">certain things become possible</font>

377
00:13:24,110 --> 00:13:28,940
because we're<font color="#E5E5E5"> dealing with volumes that</font>

378
00:13:26,000 --> 00:13:30,620
are<font color="#CCCCCC"> a</font><font color="#E5E5E5"> 20 gig or 200 gig in size and not</font>

379
00:13:28,940 --> 00:13:32,870
with petabytes of volumes<font color="#E5E5E5"> that I need to</font>

380
00:13:30,620 --> 00:13:35,630
<font color="#CCCCCC">replicate so the</font><font color="#E5E5E5"> inertia</font>

381
00:13:32,870 --> 00:13:38,420
you know<font color="#E5E5E5"> decreases a lot runs in</font>

382
00:13:35,630 --> 00:13:40,370
containers for containers and therefore

383
00:13:38,420 --> 00:13:42,439
in user space<font color="#E5E5E5"> and the primary reason</font><font color="#CCCCCC"> for</font>

384
00:13:40,370 --> 00:13:44,240
this is is<font color="#CCCCCC"> that if you look at</font><font color="#E5E5E5"> these</font>

385
00:13:42,440 --> 00:13:46,100
different<font color="#E5E5E5"> cloud vendors they all have</font>

386
00:13:44,240 --> 00:13:48,980
their own<font color="#E5E5E5"> operating systems right and</font>

387
00:13:46,100 --> 00:13:51,260
you cannot just<font color="#E5E5E5"> load a kernel module</font><font color="#CCCCCC"> in</font>

388
00:13:48,980 --> 00:13:52,459
them because<font color="#CCCCCC"> a it's</font><font color="#E5E5E5"> not available</font><font color="#CCCCCC"> and B</font>

389
00:13:51,260 --> 00:13:53,990
if you would do<font color="#E5E5E5"> that it would actually</font>

390
00:13:52,459 --> 00:13:56,660
<font color="#E5E5E5">not support you when you have an issue</font>

391
00:13:53,990 --> 00:13:58,399
<font color="#CCCCCC">so doing this in user</font><font color="#E5E5E5"> space</font><font color="#CCCCCC"> seem to be</font>

392
00:13:56,660 --> 00:14:00,760
the most<font color="#CCCCCC"> logical approach here which is</font>

393
00:13:58,399 --> 00:14:03,740
which requires a certain<font color="#E5E5E5"> amount of</font>

394
00:14:00,760 --> 00:14:06,290
tricks to<font color="#E5E5E5"> make it perform and which will</font>

395
00:14:03,740 --> 00:14:08,839
go<font color="#E5E5E5"> over as well so instead</font><font color="#CCCCCC"> of having a</font>

396
00:14:06,290 --> 00:14:11,899
big<font color="#E5E5E5"> Sun we have a lot of stars and you</font>

397
00:14:08,839 --> 00:14:14,390
know in in you know<font color="#CCCCCC"> peak art makes that</font>

398
00:14:11,899 --> 00:14:16,640
you know think that's a lot<font color="#E5E5E5"> better so we</font>

399
00:14:14,390 --> 00:14:19,640
try<font color="#E5E5E5"> to do this so to give you a little</font>

400
00:14:16,640 --> 00:14:20,750
bit of<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so whatever man</font><font color="#CCCCCC"> what does</font><font color="#E5E5E5"> it</font>

401
00:14:19,640 --> 00:14:23,480
mean<font color="#CCCCCC"> right</font><font color="#E5E5E5"> okay</font>

402
00:14:20,750 --> 00:14:25,550
so date<font color="#E5E5E5"> availability so</font><font color="#CCCCCC"> so let's assume</font>

403
00:14:23,480 --> 00:14:28,670
you're you're a developer<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you're</font>

404
00:14:25,550 --> 00:14:30,019
<font color="#E5E5E5">tasked with building an application</font><font color="#CCCCCC"> and</font>

405
00:14:28,670 --> 00:14:32,390
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have two data</font><font color="#E5E5E5"> centers and your</font>

406
00:14:30,019 --> 00:14:34,040
storage administrator says you know you

407
00:14:32,390 --> 00:14:36,260
go<font color="#E5E5E5"> figure it out because you're a</font><font color="#CCCCCC"> smart</font>

408
00:14:34,040 --> 00:14:43,579
engineer how to get the data<font color="#E5E5E5"> there right</font>

409
00:14:36,260 --> 00:14:46,910
that<font color="#E5E5E5"> could be one of the things that you</font>

410
00:14:43,579 --> 00:14:48,529
would<font color="#E5E5E5"> need to do so like I mentioned the</font>

411
00:14:46,910 --> 00:14:50,180
replication<font color="#CCCCCC"> between the vendors is not</font>

412
00:14:48,529 --> 00:14:51,800
efficiently<font color="#E5E5E5"> maybe it's not</font><font color="#CCCCCC"> even possible</font>

413
00:14:50,180 --> 00:14:53,750
<font color="#E5E5E5">at all so you could you know spin up</font>

414
00:14:51,800 --> 00:14:55,430
your container<font color="#E5E5E5"> and configure our sink</font>

415
00:14:53,750 --> 00:14:57,350
<font color="#E5E5E5">and then say where it needs to go</font><font color="#CCCCCC"> and</font>

416
00:14:55,430 --> 00:14:59,209
<font color="#CCCCCC">you know but</font><font color="#E5E5E5"> that's all very static it's</font>

417
00:14:57,350 --> 00:15:01,160
not very dynamic so that<font color="#E5E5E5"> probably isn't</font>

418
00:14:59,209 --> 00:15:02,479
<font color="#CCCCCC">very good</font><font color="#E5E5E5"> thing so what what we allow</font>

419
00:15:01,160 --> 00:15:04,010
<font color="#CCCCCC">you to do is you can</font><font color="#E5E5E5"> abstract away the</font>

420
00:15:02,480 --> 00:15:06,170
<font color="#E5E5E5">differences between them and we can</font>

421
00:15:04,010 --> 00:15:08,329
insert<font color="#CCCCCC"> ourselves within</font><font color="#E5E5E5"> the data plane</font>

422
00:15:06,170 --> 00:15:10,370
and do that for you and<font color="#CCCCCC"> you just specify</font>

423
00:15:08,329 --> 00:15:14,029
what you<font color="#CCCCCC"> want by declarative intent</font>

424
00:15:10,370 --> 00:15:16,160
through<font color="#CCCCCC"> llamó and so how does this</font><font color="#E5E5E5"> look</font>

425
00:15:14,029 --> 00:15:17,959
so you have<font color="#E5E5E5"> your PV then you have your</font>

426
00:15:16,160 --> 00:15:20,360
container attached storage system<font color="#E5E5E5"> and</font>

427
00:15:17,959 --> 00:15:22,670
then you have the<font color="#CCCCCC"> Box one the box two of</font>

428
00:15:20,360 --> 00:15:24,890
<font color="#E5E5E5">the box 3 and this could be you</font><font color="#CCCCCC"> know any</font>

429
00:15:22,670 --> 00:15:26,959
box<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is actually a reference to the</font>

430
00:15:24,890 --> 00:15:28,130
comedy show Silicon Valley<font color="#CCCCCC"> I don't know</font>

431
00:15:26,959 --> 00:15:31,040
if you've seen<font color="#CCCCCC"> it</font><font color="#E5E5E5"> it's quite</font>

432
00:15:28,130 --> 00:15:32,779
<font color="#E5E5E5">entertaining</font><font color="#CCCCCC"> on but we basically you</font>

433
00:15:31,040 --> 00:15:34,520
know as you put the i/o in there we<font color="#CCCCCC"> just</font>

434
00:15:32,779 --> 00:15:35,660
you<font color="#CCCCCC"> know fan it out through the</font><font color="#E5E5E5"> three</font>

435
00:15:34,520 --> 00:15:37,699
<font color="#CCCCCC">different subsystems and</font><font color="#E5E5E5"> what is</font>

436
00:15:35,660 --> 00:15:39,259
important to note here<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the</font>

437
00:15:37,699 --> 00:15:41,149
container<font color="#CCCCCC"> the cast container does the</font>

438
00:15:39,259 --> 00:15:42,799
logging in and and<font color="#E5E5E5"> you know the actual</font>

439
00:15:41,149 --> 00:15:44,779
<font color="#E5E5E5">replication so it talks all these</font>

440
00:15:42,799 --> 00:15:47,209
<font color="#E5E5E5">protocols</font><font color="#CCCCCC"> to do the work</font><font color="#E5E5E5"> for you so</font><font color="#CCCCCC"> you</font>

441
00:15:44,779 --> 00:15:49,309
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> have to do</font><font color="#CCCCCC"> all that work for</font>

442
00:15:47,209 --> 00:15:50,508
yourself<font color="#CCCCCC"> you open it open it</font><font color="#E5E5E5"> yes</font>

443
00:15:49,309 --> 00:15:52,730
<font color="#E5E5E5">operator</font><font color="#CCCCCC"> which is not</font><font color="#E5E5E5"> shown here</font>

444
00:15:50,509 --> 00:15:55,189
<font color="#CCCCCC">obviously plays a crucial role in making</font>

445
00:15:52,730 --> 00:15:57,290
<font color="#E5E5E5">this all possible it actually consumes</font>

446
00:15:55,189 --> 00:15:58,939
the specific<font color="#E5E5E5"> yamo components that you</font>

447
00:15:57,290 --> 00:16:04,009
impose upon it when<font color="#E5E5E5"> you create the PV</font>

448
00:15:58,939 --> 00:16:06,469
<font color="#CCCCCC">and a</font><font color="#E5E5E5"> PVC so another example</font><font color="#CCCCCC"> so let's</font>

449
00:16:04,009 --> 00:16:07,879
imagine that<font color="#E5E5E5"> you have similar situation</font>

450
00:16:06,470 --> 00:16:09,829
<font color="#CCCCCC">but now you'll</font><font color="#E5E5E5"> have different protocols</font>

451
00:16:07,879 --> 00:16:11,239
<font color="#E5E5E5">and these protocols can be the</font>

452
00:16:09,829 --> 00:16:12,888
<font color="#E5E5E5">underlying protocols as well</font><font color="#CCCCCC"> as the</font>

453
00:16:11,239 --> 00:16:14,929
protocols at top so what<font color="#CCCCCC"> I mean what</font>

454
00:16:12,889 --> 00:16:18,470
<font color="#CCCCCC">that is is that</font><font color="#E5E5E5"> you're running on host</font><font color="#CCCCCC"> a</font>

455
00:16:14,929 --> 00:16:20,600
and it<font color="#E5E5E5"> has a nvme card with our</font><font color="#CCCCCC"> DMA and</font>

456
00:16:18,470 --> 00:16:22,730
<font color="#E5E5E5">now it moves to host B but it has no</font>

457
00:16:20,600 --> 00:16:24,709
<font color="#E5E5E5">Envy</font><font color="#CCCCCC"> mean</font><font color="#E5E5E5"> so how do I switch dynamically</font>

458
00:16:22,730 --> 00:16:27,769
between<font color="#CCCCCC"> env</font><font color="#E5E5E5"> me and I scuzzy let's say</font>

459
00:16:24,709 --> 00:16:28,910
right at the at the<font color="#E5E5E5"> other end and I'll</font>

460
00:16:27,769 --> 00:16:30,290
explain this a little<font color="#E5E5E5"> bit better later</font>

461
00:16:28,910 --> 00:16:32,419
at the other end<font color="#CCCCCC"> you have the same</font>

462
00:16:30,290 --> 00:16:35,358
problem so<font color="#CCCCCC"> you might connect to a local</font>

463
00:16:32,419 --> 00:16:37,609
device<font color="#CCCCCC"> that's physically locally in</font><font color="#E5E5E5"> the</font>

464
00:16:35,359 --> 00:16:40,489
machine or<font color="#E5E5E5"> a nice</font><font color="#CCCCCC"> cozy device or a</font>

465
00:16:37,609 --> 00:16:43,189
network block device right<font color="#E5E5E5"> so abstract</font>

466
00:16:40,489 --> 00:16:45,379
<font color="#E5E5E5">away these differences is key here</font><font color="#CCCCCC"> or at</font>

467
00:16:43,189 --> 00:16:47,660
least we think<font color="#CCCCCC"> it's key so to give you</font>

468
00:16:45,379 --> 00:16:48,679
<font color="#E5E5E5">an</font><font color="#CCCCCC"> example again so asymmetrical</font><font color="#E5E5E5"> back</font>

469
00:16:47,660 --> 00:16:50,689
<font color="#E5E5E5">ends that's where that comes</font><font color="#CCCCCC"> from</font>

470
00:16:48,679 --> 00:16:52,160
<font color="#CCCCCC">because all</font><font color="#E5E5E5"> these different protocols</font>

471
00:16:50,689 --> 00:16:56,719
<font color="#E5E5E5">have different envelopes in the way that</font>

472
00:16:52,160 --> 00:16:58,459
they perform so you have this this

473
00:16:56,720 --> 00:17:00,079
<font color="#CCCCCC">problem then let's say where you want to</font>

474
00:16:58,459 --> 00:17:01,849
get rid of this<font color="#E5E5E5"> NBD device because it's</font>

475
00:17:00,079 --> 00:17:03,799
slower<font color="#E5E5E5"> than nice</font><font color="#CCCCCC"> cozy</font><font color="#E5E5E5"> and therefore it</font>

476
00:17:01,850 --> 00:17:05,809
you know it dictates performance

477
00:17:03,799 --> 00:17:08,209
<font color="#E5E5E5">depending on the replication model so</font>

478
00:17:05,809 --> 00:17:09,799
async<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> speaks for itself semi</font>

479
00:17:08,209 --> 00:17:11,209
<font color="#E5E5E5">sync is basically where you say</font><font color="#CCCCCC"> ok I</font>

480
00:17:09,799 --> 00:17:13,490
want<font color="#E5E5E5"> the</font><font color="#CCCCCC"> two I scuzzy</font><font color="#E5E5E5"> lunch to</font>

481
00:17:11,209 --> 00:17:15,350
acknowledge and then a lot of<font color="#E5E5E5"> the the</font>

482
00:17:13,490 --> 00:17:17,299
<font color="#CCCCCC">third</font><font color="#E5E5E5"> replica you can do that a little</font>

483
00:17:15,349 --> 00:17:20,208
<font color="#E5E5E5">bit later between a</font><font color="#CCCCCC"> certain amount</font><font color="#E5E5E5"> of</font>

484
00:17:17,299 --> 00:17:22,459
rules<font color="#E5E5E5"> and</font><font color="#CCCCCC"> sync I think that also speaks</font>

485
00:17:20,209 --> 00:17:25,010
for itself<font color="#CCCCCC"> so</font><font color="#E5E5E5"> imagine that you want to</font>

486
00:17:22,459 --> 00:17:27,529
attach this new<font color="#E5E5E5"> I scuzzy</font><font color="#CCCCCC"> lawn</font><font color="#E5E5E5"> and then</font>

487
00:17:25,010 --> 00:17:29,090
<font color="#E5E5E5">you basically want to rebuild or hydrate</font>

488
00:17:27,529 --> 00:17:30,830
they call it hydrate in the cloud native

489
00:17:29,090 --> 00:17:33,139
<font color="#E5E5E5">world</font><font color="#CCCCCC"> probably</font><font color="#E5E5E5"> sounds a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

490
00:17:30,830 --> 00:17:35,840
cooler than mirroring<font color="#E5E5E5"> on and then once</font>

491
00:17:33,139 --> 00:17:37,309
the<font color="#E5E5E5"> once the hydration or mirroring is</font>

492
00:17:35,840 --> 00:17:39,559
complete<font color="#E5E5E5"> it basically becomes a full</font>

493
00:17:37,309 --> 00:17:41,720
replica of<font color="#E5E5E5"> this whole set and then you</font>

494
00:17:39,559 --> 00:17:43,428
can just<font color="#E5E5E5"> phase out the the existing and</font>

495
00:17:41,720 --> 00:17:45,740
<font color="#E5E5E5">BD volume and there you go your nice</font>

496
00:17:43,429 --> 00:17:46,549
<font color="#E5E5E5">cozy and this is not just this</font><font color="#CCCCCC"> is a</font>

497
00:17:45,740 --> 00:17:48,919
little bit of contrived example

498
00:17:46,549 --> 00:17:50,960
<font color="#CCCCCC">obviously but there are</font><font color="#E5E5E5"> actual data</font>

499
00:17:48,919 --> 00:17:52,220
migration paths that<font color="#E5E5E5"> you need to do</font>

500
00:17:50,960 --> 00:17:55,130
data centers because your storage system

501
00:17:52,220 --> 00:17:56,630
have storage systems have a particular

502
00:17:55,130 --> 00:17:58,279
<font color="#E5E5E5">life span attached to them right there</font>

503
00:17:56,630 --> 00:17:59,870
are they only operate for let's say

504
00:17:58,279 --> 00:18:02,480
<font color="#E5E5E5">three years so you need to do this</font><font color="#CCCCCC"> any</font>

505
00:17:59,870 --> 00:18:06,439
<font color="#E5E5E5">late right and it's always been a big</font>

506
00:18:02,480 --> 00:18:08,929
problem<font color="#CCCCCC"> in general to do so a little bit</font>

507
00:18:06,440 --> 00:18:10,309
about<font color="#E5E5E5"> this rebuilding so these as I</font>

508
00:18:08,929 --> 00:18:13,760
mentioned those volumes are relatively

509
00:18:10,309 --> 00:18:15,350
<font color="#CCCCCC">small right so although</font><font color="#E5E5E5"> small you don't</font>

510
00:18:13,760 --> 00:18:17,000
<font color="#E5E5E5">want to rebuild stuff that doesn't</font>

511
00:18:15,350 --> 00:18:18,459
require a rebuild and so unused blocks

512
00:18:17,000 --> 00:18:21,289
you don't want to<font color="#E5E5E5"> rebuild and and</font>

513
00:18:18,460 --> 00:18:23,419
<font color="#E5E5E5">decepticon</font><font color="#CCCCCC"> I'm ention this as well</font><font color="#E5E5E5"> and</font>

514
00:18:21,289 --> 00:18:25,279
<font color="#E5E5E5">that is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep a bitmap</font><font color="#CCCCCC"> right so these</font>

515
00:18:23,419 --> 00:18:27,559
these<font color="#CCCCCC"> are not new thanks man this has</font>

516
00:18:25,279 --> 00:18:29,029
been people<font color="#E5E5E5"> have been doing</font><font color="#CCCCCC"> this for</font>

517
00:18:27,559 --> 00:18:30,379
<font color="#CCCCCC">years right</font><font color="#E5E5E5"> so I'm</font><font color="#CCCCCC"> not gonna</font><font color="#E5E5E5"> pretend</font>

518
00:18:29,029 --> 00:18:31,309
<font color="#E5E5E5">that I've invented the light here I'm</font>

519
00:18:30,380 --> 00:18:33,140
<font color="#E5E5E5">just reapply</font>

520
00:18:31,309 --> 00:18:34,970
what has been there and the cool<font color="#CCCCCC"> thing</font>

521
00:18:33,140 --> 00:18:40,549
is is<font color="#E5E5E5"> that I actually have to</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> it on a</font>

522
00:18:34,970 --> 00:18:42,440
far smaller size<font color="#E5E5E5"> right and so bitmaps</font>

523
00:18:40,549 --> 00:18:46,129
<font color="#E5E5E5">keep track of dirty segments</font><font color="#CCCCCC"> these</font>

524
00:18:42,440 --> 00:18:47,960
<font color="#E5E5E5">segments represent a region on the disk</font>

525
00:18:46,130 --> 00:18:49,880
<font color="#E5E5E5">and then you</font><font color="#CCCCCC"> only copy</font><font color="#E5E5E5"> the dirty</font>

526
00:18:47,960 --> 00:18:52,130
segments<font color="#E5E5E5"> off</font><font color="#CCCCCC"> the disk to the other one</font>

527
00:18:49,880 --> 00:18:54,049
there is some some things that you need

528
00:18:52,130 --> 00:18:56,149
to<font color="#E5E5E5"> do because while you're rebuilding</font>

529
00:18:54,049 --> 00:18:58,668
<font color="#CCCCCC">another dirty segment gets created but</font>

530
00:18:56,149 --> 00:19:00,049
again these things<font color="#E5E5E5"> are this is not</font>

531
00:18:58,669 --> 00:19:03,110
rocket<font color="#E5E5E5"> science we've been doing that for</font>

532
00:19:00,049 --> 00:19:05,059
for<font color="#E5E5E5"> many years on so small so if you</font>

533
00:19:03,110 --> 00:19:07,070
look<font color="#E5E5E5"> at if you</font><font color="#CCCCCC"> look up Google bond</font>

534
00:19:05,059 --> 00:19:09,110
<font color="#CCCCCC">weight</font><font color="#E5E5E5"> space maps you'll you'll see what</font>

535
00:19:07,070 --> 00:19:11,990
I<font color="#E5E5E5"> mean was small because</font><font color="#CCCCCC"> the space maps</font>

536
00:19:09,110 --> 00:19:14,059
are a way that is e<font color="#CCCCCC"> of S which you</font>

537
00:19:11,990 --> 00:19:15,830
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> heard</font><font color="#E5E5E5"> of it can do petabytes</font>

538
00:19:14,059 --> 00:19:17,658
because if you have a bitmap<font color="#E5E5E5"> for</font>

539
00:19:15,830 --> 00:19:19,129
petabytes the bitmap is huge<font color="#E5E5E5"> right so</font>

540
00:19:17,659 --> 00:19:22,730
but in our<font color="#E5E5E5"> case the bitmap is small</font>

541
00:19:19,130 --> 00:19:24,649
<font color="#E5E5E5">right so that's that's very key</font><font color="#CCCCCC"> thin</font>

542
00:19:22,730 --> 00:19:27,169
<font color="#CCCCCC">provisioning snapshot clones</font><font color="#E5E5E5"> obviously</font>

543
00:19:24,649 --> 00:19:31,100
you want to<font color="#E5E5E5"> have that I won't be talking</font>

544
00:19:27,169 --> 00:19:33,679
<font color="#E5E5E5">about that now maybe next year</font><font color="#CCCCCC"> but as I</font>

545
00:19:31,100 --> 00:19:38,600
mentioned<font color="#E5E5E5"> this is nothing new</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not</font>

546
00:19:33,679 --> 00:19:39,860
all that interesting<font color="#CCCCCC"> so composable</font>

547
00:19:38,600 --> 00:19:42,049
stories<font color="#CCCCCC"> okay what</font><font color="#E5E5E5"> was what does that</font>

548
00:19:39,860 --> 00:19:42,379
mean right sounds cool but what can I do

549
00:19:42,049 --> 00:19:45,049
with it

550
00:19:42,380 --> 00:19:46,970
so you have these<font color="#E5E5E5"> again in kubernetes</font>

551
00:19:45,049 --> 00:19:48,260
they they they<font color="#E5E5E5"> they don't</font><font color="#CCCCCC"> really talk</font>

552
00:19:46,970 --> 00:19:50,750
<font color="#E5E5E5">about</font><font color="#CCCCCC"> input/output they talk about</font>

553
00:19:48,260 --> 00:19:53,960
<font color="#E5E5E5">ingress</font><font color="#CCCCCC"> egress</font><font color="#E5E5E5"> okay so whatever I will</font>

554
00:19:50,750 --> 00:19:55,340
use that<font color="#CCCCCC"> and then you have your so you</font>

555
00:19:53,960 --> 00:19:58,250
have your<font color="#CCCCCC"> input</font><font color="#E5E5E5"> and then you have your</font>

556
00:19:55,340 --> 00:19:59,990
output which points to a device<font color="#E5E5E5"> whatever</font>

557
00:19:58,250 --> 00:20:02,000
<font color="#CCCCCC">it</font><font color="#E5E5E5"> is we'll get to what type of</font><font color="#CCCCCC"> devices</font>

558
00:19:59,990 --> 00:20:04,220
later<font color="#E5E5E5"> but then you can add these</font>

559
00:20:02,000 --> 00:20:06,740
translation layers in between

560
00:20:04,220 --> 00:20:08,810
based on what you need like for example

561
00:20:06,740 --> 00:20:11,180
compression encryption and<font color="#E5E5E5"> mirroring in</font>

562
00:20:08,810 --> 00:20:13,129
this particular case<font color="#E5E5E5"> right and your</font>

563
00:20:11,180 --> 00:20:17,390
there<font color="#CCCCCC"> is important here so don't encrypt</font>

564
00:20:13,130 --> 00:20:20,180
and then compress but yeah<font color="#E5E5E5"> so in order</font>

565
00:20:17,390 --> 00:20:23,480
<font color="#E5E5E5">to build this stuff as I mentioned we we</font>

566
00:20:20,180 --> 00:20:25,040
we<font color="#E5E5E5"> we needed a language that actually</font>

567
00:20:23,480 --> 00:20:27,890
allows us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> accelerate</font><font color="#CCCCCC"> a little bit so</font>

568
00:20:25,040 --> 00:20:31,790
we we opted for rust<font color="#E5E5E5"> which was an</font>

569
00:20:27,890 --> 00:20:33,830
interesting<font color="#E5E5E5"> journey</font><font color="#CCCCCC"> the the thing there</font>

570
00:20:31,790 --> 00:20:36,200
the unsafe actually disables

571
00:20:33,830 --> 00:20:39,770
optimization for the<font color="#E5E5E5"> compiler it doesn't</font>

572
00:20:36,200 --> 00:20:41,810
have certain on<font color="#E5E5E5"> constructor attributes</font>

573
00:20:39,770 --> 00:20:43,490
that<font color="#CCCCCC"> you would be used to in</font><font color="#E5E5E5"> C so it's a</font>

574
00:20:41,810 --> 00:20:46,370
<font color="#CCCCCC">little bit of a</font><font color="#E5E5E5"> sidestep here but it was</font>

575
00:20:43,490 --> 00:20:47,870
quite<font color="#CCCCCC"> an</font><font color="#E5E5E5"> interesting so let's let's</font><font color="#CCCCCC"> look</font>

576
00:20:46,370 --> 00:20:49,879
a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> in the mirror device</font><font color="#E5E5E5"> a very</font>

577
00:20:47,870 --> 00:20:51,110
<font color="#E5E5E5">high level</font><font color="#CCCCCC"> I actually had to remove a</font>

578
00:20:49,880 --> 00:20:53,780
lot of<font color="#E5E5E5"> code and you can't actually see</font>

579
00:20:51,110 --> 00:20:55,939
<font color="#CCCCCC">the</font><font color="#E5E5E5"> comments which</font><font color="#CCCCCC"> is unfortunate</font><font color="#E5E5E5"> on but</font>

580
00:20:53,780 --> 00:20:59,180
basically<font color="#CCCCCC"> this is a structure of</font><font color="#E5E5E5"> a</font>

581
00:20:55,940 --> 00:21:01,880
mirror device based on<font color="#E5E5E5"> the ammo</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font>

582
00:20:59,180 --> 00:21:03,500
actually<font color="#E5E5E5"> you numerate over the</font><font color="#CCCCCC"> llamo</font>

583
00:21:01,880 --> 00:21:06,410
let's say and<font color="#E5E5E5"> then we open all those sub</font>

584
00:21:03,500 --> 00:21:09,410
devices for you and then every<font color="#E5E5E5"> i/o goes</font>

585
00:21:06,410 --> 00:21:12,890
through the<font color="#CCCCCC"> child's which which you can</font>

586
00:21:09,410 --> 00:21:17,240
see<font color="#E5E5E5"> again</font><font color="#CCCCCC"> i removed a lot of</font><font color="#E5E5E5"> stuff here</font>

587
00:21:12,890 --> 00:21:19,280
<font color="#CCCCCC">so at the</font><font color="#E5E5E5"> very end here we match at the</font>

588
00:21:17,240 --> 00:21:21,020
<font color="#CCCCCC">io type if it's a read</font><font color="#E5E5E5"> will do the read</font>

589
00:21:19,280 --> 00:21:22,940
if it's right<font color="#E5E5E5"> will do the right but the</font>

590
00:21:21,020 --> 00:21:26,030
most important thing is here<font color="#CCCCCC"> this is for</font>

591
00:21:22,940 --> 00:21:27,950
<font color="#CCCCCC">obd that stands for</font><font color="#E5E5E5"> online block</font><font color="#CCCCCC"> devices</font>

592
00:21:26,030 --> 00:21:30,590
<font color="#E5E5E5">we basically iterate over all of them</font>

593
00:21:27,950 --> 00:21:33,200
and the policy<font color="#E5E5E5"> that we apply here that's</font>

594
00:21:30,590 --> 00:21:35,149
what we determined<font color="#E5E5E5"> before we</font><font color="#CCCCCC"> actually go</font>

595
00:21:33,200 --> 00:21:36,800
to the<font color="#CCCCCC"> i/o if there's</font><font color="#E5E5E5"> an error then we</font>

596
00:21:35,150 --> 00:21:39,140
<font color="#E5E5E5">basically said</font><font color="#CCCCCC"> that it was an error</font><font color="#E5E5E5"> on</font>

597
00:21:36,800 --> 00:21:40,940
the on the i/o and then in the

598
00:21:39,140 --> 00:21:42,440
completion handler again based<font color="#E5E5E5"> on the</font>

599
00:21:40,940 --> 00:21:44,180
policy<font color="#CCCCCC"> we'll figure</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> if the i/o</font>

600
00:21:42,440 --> 00:21:46,910
failure is critical or not<font color="#E5E5E5"> or</font><font color="#CCCCCC"> already</font>

601
00:21:44,180 --> 00:21:49,400
<font color="#CCCCCC">Jesus</font><font color="#E5E5E5"> to say okay</font><font color="#CCCCCC"> I had three</font><font color="#E5E5E5"> of the</font>

602
00:21:46,910 --> 00:21:52,460
replicas replied<font color="#E5E5E5"> my policy says</font><font color="#CCCCCC"> two is</font>

603
00:21:49,400 --> 00:21:54,920
enough so I'll just continue so

604
00:21:52,460 --> 00:21:59,780
declarative what does that mean in in in

605
00:21:54,920 --> 00:22:03,200
in<font color="#E5E5E5"> gamble mmm kind</font><font color="#CCCCCC"> of looks like this</font>

606
00:21:59,780 --> 00:22:05,420
so you basically define what type<font color="#CCCCCC"> of</font>

607
00:22:03,200 --> 00:22:07,310
volumes you want where they are if you

608
00:22:05,420 --> 00:22:09,050
need to because we can<font color="#CCCCCC"> actually do the</font>

609
00:22:07,310 --> 00:22:10,460
<font color="#E5E5E5">Tim provisioning on bigger volume</font><font color="#CCCCCC"> so you</font>

610
00:22:09,050 --> 00:22:10,940
set this up once that's no problem

611
00:22:10,460 --> 00:22:12,800
either

612
00:22:10,940 --> 00:22:14,780
<font color="#E5E5E5">I'm the properties that you</font><font color="#CCCCCC"> want so you</font>

613
00:22:12,800 --> 00:22:17,360
<font color="#CCCCCC">can actually compose your storage the</font>

614
00:22:14,780 --> 00:22:19,399
way you want it

615
00:22:17,360 --> 00:22:21,409
a little bit more about these protocols

616
00:22:19,400 --> 00:22:24,080
<font color="#E5E5E5">right so I have my PV and then I have my</font>

617
00:22:21,410 --> 00:22:26,330
container<font color="#E5E5E5"> normally you talk to a storage</font>

618
00:22:24,080 --> 00:22:30,649
<font color="#E5E5E5">system</font><font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> how do I connect right on</font>

619
00:22:26,330 --> 00:22:32,090
and this was really<font color="#E5E5E5"> key</font><font color="#CCCCCC"> because one of</font>

620
00:22:30,650 --> 00:22:34,610
<font color="#E5E5E5">the things that we don't want</font><font color="#CCCCCC"> to do is</font>

621
00:22:32,090 --> 00:22:36,470
is it impose a cost that<font color="#E5E5E5"> is unacceptable</font>

622
00:22:34,610 --> 00:22:39,110
<font color="#E5E5E5">in terms of performance</font><font color="#CCCCCC"> right because</font>

623
00:22:36,470 --> 00:22:41,000
you know<font color="#E5E5E5"> at the end of the day it's all</font>

624
00:22:39,110 --> 00:22:44,360
nice<font color="#CCCCCC"> but if it doesn't perform</font><font color="#E5E5E5"> you know</font>

625
00:22:41,000 --> 00:22:46,760
<font color="#E5E5E5">doesn't</font><font color="#CCCCCC"> really work so what we we do</font>

626
00:22:44,360 --> 00:22:49,729
here is we we basically<font color="#E5E5E5"> have a set of</font>

627
00:22:46,760 --> 00:22:52,910
protocols that<font color="#E5E5E5"> we support on the</font>

628
00:22:49,730 --> 00:22:56,150
vertically<font color="#E5E5E5"> is very important again</font><font color="#CCCCCC"> for</font>

629
00:22:52,910 --> 00:22:58,430
these new type like hypervisors<font color="#E5E5E5"> that you</font>

630
00:22:56,150 --> 00:23:00,560
know or to strip<font color="#CCCCCC"> down</font><font color="#E5E5E5"> once they</font>

631
00:22:58,430 --> 00:23:03,020
typically use<font color="#E5E5E5"> vert I do il very</font>

632
00:23:00,560 --> 00:23:06,560
efficiently<font color="#E5E5E5"> because those</font><font color="#CCCCCC"> kernels know</font>

633
00:23:03,020 --> 00:23:08,930
how to work with virtualized<font color="#E5E5E5"> IO and then</font>

634
00:23:06,560 --> 00:23:11,060
we have<font color="#E5E5E5"> basically the</font><font color="#CCCCCC"> input path and</font>

635
00:23:08,930 --> 00:23:13,940
then there is the output<font color="#E5E5E5"> path which can</font>

636
00:23:11,060 --> 00:23:17,510
<font color="#CCCCCC">be well I won't say everything but a lot</font>

637
00:23:13,940 --> 00:23:19,460
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so bluster is one of them</font><font color="#E5E5E5"> we can</font>

638
00:23:17,510 --> 00:23:22,750
<font color="#CCCCCC">just write to that</font><font color="#E5E5E5"> or another I scuzzy</font>

639
00:23:19,460 --> 00:23:26,780
LAN or a local block device which we

640
00:23:22,750 --> 00:23:28,640
access through a<font color="#CCCCCC"> IO and and so forth</font><font color="#E5E5E5"> so</font>

641
00:23:26,780 --> 00:23:30,470
and then when you construct a<font color="#CCCCCC"> volume</font>

642
00:23:28,640 --> 00:23:32,060
with this<font color="#CCCCCC"> ya mole it basically just</font><font color="#E5E5E5"> fans</font>

643
00:23:30,470 --> 00:23:35,000
out and you know could<font color="#E5E5E5"> do a</font>

644
00:23:32,060 --> 00:23:36,409
transformation<font color="#E5E5E5"> or not right</font><font color="#CCCCCC"> okay so</font>

645
00:23:35,000 --> 00:23:38,030
let's talk a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about this</font>

646
00:23:36,410 --> 00:23:40,490
performance<font color="#E5E5E5"> aspect of it because</font>

647
00:23:38,030 --> 00:23:41,870
performance<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> particularly doing i/o</font>

648
00:23:40,490 --> 00:23:44,420
and user space there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> some challenges</font>

649
00:23:41,870 --> 00:23:46,879
<font color="#CCCCCC">to that and what can we do to mitigate</font>

650
00:23:44,420 --> 00:23:48,920
that<font color="#CCCCCC"> and so one of the things is when</font>

651
00:23:46,880 --> 00:23:51,800
you look at CPUs these days they have

652
00:23:48,920 --> 00:23:56,110
<font color="#CCCCCC">these mm use in the i/o mmm use and</font>

653
00:23:51,800 --> 00:23:58,760
these are very important in<font color="#E5E5E5"> terms of the</font>

654
00:23:56,110 --> 00:24:00,530
the misses that<font color="#E5E5E5"> you can get and the</font>

655
00:23:58,760 --> 00:24:03,020
impact they have on performance so a

656
00:24:00,530 --> 00:24:05,360
<font color="#E5E5E5">solution to that is to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> huge</font><font color="#CCCCCC"> pages</font>

657
00:24:03,020 --> 00:24:08,240
and they're not<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> that huge</font>

658
00:24:05,360 --> 00:24:11,360
they're<font color="#E5E5E5"> only</font><font color="#CCCCCC"> 2 Meg's but I don't know if</font>

659
00:24:08,240 --> 00:24:14,630
you can see it but the<font color="#E5E5E5"> 4 K pages we have</font>

660
00:24:11,360 --> 00:24:17,479
<font color="#E5E5E5">22 million misses and in the lower</font><font color="#CCCCCC"> end</font>

661
00:24:14,630 --> 00:24:19,460
we have<font color="#CCCCCC"> zero misses right so and</font><font color="#E5E5E5"> this is</font>

662
00:24:17,480 --> 00:24:22,280
<font color="#E5E5E5">really</font><font color="#CCCCCC"> beneficiary for for performance</font>

663
00:24:19,460 --> 00:24:24,920
<font color="#CCCCCC">and the other thing is is</font><font color="#E5E5E5"> that once we</font>

664
00:24:22,280 --> 00:24:29,360
<font color="#CCCCCC">start up the</font><font color="#E5E5E5"> allocation is static right</font>

665
00:24:24,920 --> 00:24:31,340
we we don't need more capacity<font color="#E5E5E5"> or memory</font>

666
00:24:29,360 --> 00:24:32,659
as we plow through performance

667
00:24:31,340 --> 00:24:34,790
because we just passed the<font color="#E5E5E5"> performance</font>

668
00:24:32,660 --> 00:24:37,510
<font color="#E5E5E5">unless you do compression but we</font>

669
00:24:34,790 --> 00:24:41,030
basically allocate these things<font color="#E5E5E5"> upfront</font>

670
00:24:37,510 --> 00:24:42,740
<font color="#CCCCCC">so</font><font color="#E5E5E5"> Lord of the Rings one of the things</font>

671
00:24:41,030 --> 00:24:44,210
that as I<font color="#CCCCCC"> mentioned the hardware has</font>

672
00:24:42,740 --> 00:24:45,500
changed and<font color="#E5E5E5"> so what can we</font><font color="#CCCCCC"> learn from</font>

673
00:24:44,210 --> 00:24:48,860
<font color="#E5E5E5">these hardware changes and how do we</font>

674
00:24:45,500 --> 00:24:51,470
make sure<font color="#CCCCCC"> that we use them optimally in</font>

675
00:24:48,860 --> 00:24:53,600
the software stack so it's kind<font color="#CCCCCC"> of</font>

676
00:24:51,470 --> 00:24:55,970
<font color="#CCCCCC">interesting to see</font><font color="#E5E5E5"> it with the lines</font>

677
00:24:53,600 --> 00:24:58,459
that<font color="#E5E5E5"> I tried to put on</font><font color="#CCCCCC"> top of</font><font color="#E5E5E5"> that is</font>

678
00:24:55,970 --> 00:25:00,740
that the<font color="#E5E5E5"> the number of logical ports has</font>

679
00:24:58,460 --> 00:25:03,560
been increasing and the frequency in

680
00:25:00,740 --> 00:25:06,530
Hertz<font color="#E5E5E5"> basically stagnated back in 2000</font>

681
00:25:03,560 --> 00:25:09,110
has you know and a<font color="#CCCCCC"> dead stop</font>

682
00:25:06,530 --> 00:25:10,730
so more<font color="#E5E5E5"> coarse and that means that if</font>

683
00:25:09,110 --> 00:25:12,889
you<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> utilize these cores you need</font>

684
00:25:10,730 --> 00:25:15,650
to change<font color="#E5E5E5"> your software approach to that</font>

685
00:25:12,890 --> 00:25:17,750
<font color="#E5E5E5">and this is exactly also what the</font><font color="#CCCCCC"> nvme</font>

686
00:25:15,650 --> 00:25:19,970
spec does is that they use all these

687
00:25:17,750 --> 00:25:22,880
types of rings<font color="#E5E5E5"> and each ring refers to a</font>

688
00:25:19,970 --> 00:25:25,310
particular<font color="#CCCCCC"> device and each core has its</font>

689
00:25:22,880 --> 00:25:28,190
own ring so each core<font color="#CCCCCC"> can talk to any</font>

690
00:25:25,310 --> 00:25:31,909
nvme device without<font color="#E5E5E5"> you know any locks</font>

691
00:25:28,190 --> 00:25:33,410
in between and whatsoever<font color="#E5E5E5"> and there is</font>

692
00:25:31,910 --> 00:25:35,480
some<font color="#E5E5E5"> other interesting things</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is</font>

693
00:25:33,410 --> 00:25:37,100
<font color="#CCCCCC">a yen's</font><font color="#E5E5E5"> he's the you guys probably know</font>

694
00:25:35,480 --> 00:25:38,420
<font color="#E5E5E5">him as</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Linux kernel block maintainer</font>

695
00:25:37,100 --> 00:25:40,639
he's the author of<font color="#E5E5E5"> the block and cue</font>

696
00:25:38,420 --> 00:25:43,220
layer so a very smart guy and<font color="#E5E5E5"> he's</font>

697
00:25:40,640 --> 00:25:45,350
actually<font color="#E5E5E5"> been implementing this ring</font>

698
00:25:43,220 --> 00:25:47,090
approach in the a i/o subsystem and and

699
00:25:45,350 --> 00:25:49,550
you know<font color="#E5E5E5"> I've highlighted the word ring</font>

700
00:25:47,090 --> 00:25:52,220
<font color="#CCCCCC">this is just one of his bullets</font><font color="#E5E5E5"> actually</font>

701
00:25:49,550 --> 00:25:53,600
<font color="#CCCCCC">on and so you can really</font><font color="#E5E5E5"> see this</font>

702
00:25:52,220 --> 00:25:55,400
pattern of submission<font color="#CCCCCC"> cues and</font>

703
00:25:53,600 --> 00:25:59,540
completion cues and rings come back in

704
00:25:55,400 --> 00:26:00,980
you<font color="#CCCCCC"> know in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> whole</font><font color="#E5E5E5"> IO stack and the</font>

705
00:25:59,540 --> 00:26:03,230
reason<font color="#E5E5E5"> that he's working on this in</font>

706
00:26:00,980 --> 00:26:05,300
particular<font color="#E5E5E5"> as he wants to mitigate the</font>

707
00:26:03,230 --> 00:26:08,060
<font color="#E5E5E5">specter and</font><font color="#CCCCCC"> meltdown patches so with</font>

708
00:26:05,300 --> 00:26:10,460
this code<font color="#E5E5E5"> when you do</font><font color="#CCCCCC"> i oh you don't</font>

709
00:26:08,060 --> 00:26:12,050
<font color="#E5E5E5">even</font><font color="#CCCCCC"> go to kernel space</font><font color="#E5E5E5"> at all right so</font>

710
00:26:10,460 --> 00:26:13,520
you write<font color="#CCCCCC"> it in a ring</font><font color="#E5E5E5"> buffer and the</font>

711
00:26:12,050 --> 00:26:16,879
kernel does the submission for you and

712
00:26:13,520 --> 00:26:18,560
you<font color="#CCCCCC"> just pull for completion</font><font color="#E5E5E5"> right so we</font>

713
00:26:16,880 --> 00:26:22,640
use the<font color="#E5E5E5"> same thing in container attached</font>

714
00:26:18,560 --> 00:26:25,610
storage based leveraging code from from

715
00:26:22,640 --> 00:26:27,500
<font color="#CCCCCC">SP DK there so there is this this puller</font>

716
00:26:25,610 --> 00:26:29,209
<font color="#E5E5E5">which basically so we have a nice</font><font color="#CCCCCC"> cozy</font>

717
00:26:27,500 --> 00:26:32,630
<font color="#E5E5E5">socket right so we're listening</font><font color="#CCCCCC"> for ice</font>

718
00:26:29,210 --> 00:26:34,660
cozy and we're constantly<font color="#E5E5E5"> reading on the</font>

719
00:26:32,630 --> 00:26:37,190
socket<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a read call and basically</font>

720
00:26:34,660 --> 00:26:38,630
we're<font color="#E5E5E5"> doing this non blocking so most of</font>

721
00:26:37,190 --> 00:26:40,100
we do the read<font color="#CCCCCC"> and you know say he would</font>

722
00:26:38,630 --> 00:26:41,720
<font color="#E5E5E5">block and we just continue to the</font><font color="#CCCCCC"> next</font>

723
00:26:40,100 --> 00:26:43,580
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> and just</font><font color="#E5E5E5"> keep spinning like a</font>

724
00:26:41,720 --> 00:26:45,080
madman in order to see if<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> work</font>

725
00:26:43,580 --> 00:26:48,260
if there

726
00:26:45,080 --> 00:26:50,780
his<font color="#E5E5E5"> work</font><font color="#CCCCCC"> however we get</font><font color="#E5E5E5"> this whatever</font>

727
00:26:48,260 --> 00:26:53,450
the job<font color="#CCCCCC"> is let's say read or write or an</font>

728
00:26:50,780 --> 00:26:56,030
<font color="#E5E5E5">inquiry command whatever</font><font color="#CCCCCC"> there is a</font>

729
00:26:53,450 --> 00:26:58,520
message placed into this ring which then

730
00:26:56,030 --> 00:27:00,860
gets read by the reactor and this is

731
00:26:58,520 --> 00:27:02,750
typically a<font color="#E5E5E5"> function argument one</font>

732
00:27:00,860 --> 00:27:04,429
argument<font color="#CCCCCC"> to but this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> abstracted away</font>

733
00:27:02,750 --> 00:27:05,840
in<font color="#E5E5E5"> terms of</font><font color="#CCCCCC"> IO</font><font color="#E5E5E5"> channel so you don't</font>

734
00:27:04,430 --> 00:27:07,460
actually have<font color="#E5E5E5"> to send the message but</font>

735
00:27:05,840 --> 00:27:11,060
you<font color="#E5E5E5"> work with</font><font color="#CCCCCC"> il channels so to make it</font>

736
00:27:07,460 --> 00:27:12,710
a little bit easier<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then the</font><font color="#E5E5E5"> there's</font>

737
00:27:11,060 --> 00:27:15,440
also a<font color="#E5E5E5"> management interface obviously</font>

738
00:27:12,710 --> 00:27:17,660
because it pulls the<font color="#E5E5E5"> same way and then</font>

739
00:27:15,440 --> 00:27:19,640
<font color="#E5E5E5">there's actually the devices that you</font>

740
00:27:17,660 --> 00:27:20,990
<font color="#E5E5E5">need to pull as well in terms</font><font color="#CCCCCC"> of ok hey</font>

741
00:27:19,640 --> 00:27:25,760
there's an interrupt or I'm ready or

742
00:27:20,990 --> 00:27:27,590
<font color="#E5E5E5">whatever</font><font color="#CCCCCC"> I'm so efficiency so people ask</font>

743
00:27:25,760 --> 00:27:29,600
<font color="#CCCCCC">hey but you're pulling</font><font color="#E5E5E5"> constantly what</font>

744
00:27:27,590 --> 00:27:33,199
does<font color="#CCCCCC"> that do for performance so this</font><font color="#E5E5E5"> is</font>

745
00:27:29,600 --> 00:27:37,669
the same machine<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> top level here</font>

746
00:27:33,200 --> 00:27:40,670
<font color="#CCCCCC">you can actually</font><font color="#E5E5E5"> see that the this CPU</font>

747
00:27:37,670 --> 00:27:42,320
<font color="#E5E5E5">idle is the right column so the more</font>

748
00:27:40,670 --> 00:27:43,790
idle the better<font color="#E5E5E5"> right and you can see</font>

749
00:27:42,320 --> 00:27:45,530
that the load<font color="#CCCCCC"> is actually divided</font>

750
00:27:43,790 --> 00:27:47,149
<font color="#CCCCCC">between</font><font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> space and user space as</font>

751
00:27:45,530 --> 00:27:49,940
you would<font color="#CCCCCC"> suspect with running</font><font color="#E5E5E5"> this</font>

752
00:27:47,150 --> 00:27:51,920
thing<font color="#CCCCCC"> the traditional way</font><font color="#E5E5E5"> and the thing</font>

753
00:27:49,940 --> 00:27:54,620
here below is where we run<font color="#E5E5E5"> completely in</font>

754
00:27:51,920 --> 00:27:56,210
user space<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and the thing</font><font color="#CCCCCC"> that you</font>

755
00:27:54,620 --> 00:27:57,620
don't<font color="#E5E5E5"> see normally is that what the</font>

756
00:27:56,210 --> 00:27:59,090
kernel in the background does when you

757
00:27:57,620 --> 00:28:00,919
actually<font color="#E5E5E5"> do the</font><font color="#CCCCCC"> i/o so you would think</font>

758
00:27:59,090 --> 00:28:02,360
<font color="#E5E5E5">hey this is not efficient but it turns</font>

759
00:28:00,920 --> 00:28:04,460
out<font color="#E5E5E5"> and the numbers speak for themselves</font>

760
00:28:02,360 --> 00:28:08,990
<font color="#CCCCCC">although very small but nonetheless</font>

761
00:28:04,460 --> 00:28:11,750
<font color="#E5E5E5">right and we have a very low or we</font>

762
00:28:08,990 --> 00:28:14,510
<font color="#E5E5E5">actually are</font><font color="#CCCCCC"> more efficient right but</font>

763
00:28:11,750 --> 00:28:17,180
that's<font color="#E5E5E5"> just not the goal to show here</font>

764
00:28:14,510 --> 00:28:19,490
the goal here is is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> pulling is not</font>

765
00:28:17,180 --> 00:28:21,230
a problem<font color="#E5E5E5"> and in fact kernels actually</font>

766
00:28:19,490 --> 00:28:23,120
in the<font color="#E5E5E5"> background dynamically start</font>

767
00:28:21,230 --> 00:28:23,740
pulling anyway<font color="#E5E5E5"> right you just don't know</font>

768
00:28:23,120 --> 00:28:28,040
about<font color="#E5E5E5"> it</font>

769
00:28:23,740 --> 00:28:30,710
<font color="#E5E5E5">so this gentleman</font><font color="#CCCCCC"> avi he was the author</font>

770
00:28:28,040 --> 00:28:32,570
<font color="#E5E5E5">of</font><font color="#CCCCCC"> KVM he's working on a</font><font color="#E5E5E5"> database</font><font color="#CCCCCC"> they</font>

771
00:28:30,710 --> 00:28:34,460
used similar constructs from DP DK in

772
00:28:32,570 --> 00:28:36,260
their software<font color="#CCCCCC"> and he sums it up pretty</font>

773
00:28:34,460 --> 00:28:38,150
<font color="#E5E5E5">nicely you</font><font color="#CCCCCC"> know if there's</font><font color="#E5E5E5"> no load yeah</font>

774
00:28:36,260 --> 00:28:40,160
we're<font color="#E5E5E5"> probably a little bit more</font>

775
00:28:38,150 --> 00:28:42,080
<font color="#E5E5E5">inefficient but if there's high load we</font>

776
00:28:40,160 --> 00:28:43,570
<font color="#CCCCCC">have are more efficient so the same</font>

777
00:28:42,080 --> 00:28:46,850
holds true<font color="#CCCCCC"> here as well</font>

778
00:28:43,570 --> 00:28:49,790
so nvme<font color="#CCCCCC"> tcp has been ratified</font><font color="#E5E5E5"> somewhere</font>

779
00:28:46,850 --> 00:28:51,620
in<font color="#CCCCCC"> November so I was trying to make that</font>

780
00:28:49,790 --> 00:28:54,440
<font color="#E5E5E5">work</font><font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> go very well as you could</font>

781
00:28:51,620 --> 00:28:55,879
<font color="#E5E5E5">see but I figured it out eventually and</font>

782
00:28:54,440 --> 00:28:58,290
the point here<font color="#CCCCCC"> is it that protocols</font>

783
00:28:55,880 --> 00:29:01,770
matter so I have this<font color="#E5E5E5"> mic</font>

784
00:28:58,290 --> 00:29:05,760
1.9 terabyte nvme SSD<font color="#CCCCCC"> who on spec can</font><font color="#E5E5E5"> do</font>

785
00:29:01,770 --> 00:29:07,350
840 ki up so<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> just a huge</font>

786
00:29:05,760 --> 00:29:10,950
<font color="#E5E5E5">amount of</font><font color="#CCCCCC"> I UPS right I mean come on</font>

787
00:29:07,350 --> 00:29:12,389
<font color="#CCCCCC">it's just insane</font><font color="#E5E5E5"> but anyway so we we run</font>

788
00:29:10,950 --> 00:29:14,340
the<font color="#CCCCCC"> software using you IO so we</font>

789
00:29:12,390 --> 00:29:16,530
basically mapped the PCI registers<font color="#E5E5E5"> into</font>

790
00:29:14,340 --> 00:29:18,540
user space and we write<font color="#E5E5E5"> directly into</font>

791
00:29:16,530 --> 00:29:20,430
user space into these registers and<font color="#E5E5E5"> we</font>

792
00:29:18,540 --> 00:29:24,030
get<font color="#E5E5E5"> nine close to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> nine hundred sixty</font>

793
00:29:20,430 --> 00:29:25,110
<font color="#E5E5E5">thousand I ups a second and it's very</font>

794
00:29:24,030 --> 00:29:26,550
likely this performance will degrade

795
00:29:25,110 --> 00:29:28,020
over time because<font color="#E5E5E5"> that's the nature of</font>

796
00:29:26,550 --> 00:29:31,320
SSDs but you know it will<font color="#E5E5E5"> probably</font>

797
00:29:28,020 --> 00:29:32,970
<font color="#E5E5E5">steady-state</font><font color="#CCCCCC"> around this 840 spec then I</font>

798
00:29:31,320 --> 00:29:34,980
did the same thing<font color="#CCCCCC"> export that device</font>

799
00:29:32,970 --> 00:29:37,440
through a network block device protocol

800
00:29:34,980 --> 00:29:39,300
and it could only<font color="#E5E5E5"> do</font><font color="#CCCCCC"> 100,000</font><font color="#E5E5E5"> I ops and</font>

801
00:29:37,440 --> 00:29:41,040
and<font color="#E5E5E5"> and the problem here is that the</font><font color="#CCCCCC"> sis</font>

802
00:29:39,300 --> 00:29:42,840
<font color="#CCCCCC">call rate dominates performance here and</font>

803
00:29:41,040 --> 00:29:45,480
that's due to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> fact that how NBD is</font>

804
00:29:42,840 --> 00:29:49,439
is is is<font color="#E5E5E5"> is designed</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> each i/o is a</font>

805
00:29:45,480 --> 00:29:53,730
<font color="#CCCCCC">Cisco</font><font color="#E5E5E5"> I scuzzy does a better job you</font><font color="#CCCCCC"> can</font>

806
00:29:49,440 --> 00:29:56,280
<font color="#CCCCCC">login</font><font color="#E5E5E5"> multiple times and</font><font color="#CCCCCC"> then you know</font>

807
00:29:53,730 --> 00:29:57,750
you get close<font color="#CCCCCC"> to 500,000 I out but</font>

808
00:29:56,280 --> 00:30:00,629
that's where it<font color="#CCCCCC"> basically starts to</font>

809
00:29:57,750 --> 00:30:02,190
become a problem<font color="#CCCCCC"> as</font><font color="#E5E5E5"> well and so the</font>

810
00:30:00,630 --> 00:30:06,720
solution to<font color="#E5E5E5"> that obviously then is I</font>

811
00:30:02,190 --> 00:30:08,940
<font color="#E5E5E5">scuzzy over TCP or I scuzzy not use I</font>

812
00:30:06,720 --> 00:30:10,680
scuzzy but use<font color="#CCCCCC"> envy me over TCP our DMA</font>

813
00:30:08,940 --> 00:30:12,450
goes a lot faster but through<font color="#CCCCCC"> our DMA</font>

814
00:30:10,680 --> 00:30:13,860
you actually need special<font color="#E5E5E5"> hardware you</font>

815
00:30:12,450 --> 00:30:15,240
need<font color="#E5E5E5"> special switches and that's you</font>

816
00:30:13,860 --> 00:30:16,979
know<font color="#E5E5E5"> probably a big tax on your</font>

817
00:30:15,240 --> 00:30:21,570
infrastructure<font color="#E5E5E5"> so how</font><font color="#CCCCCC"> can you leverage</font>

818
00:30:16,980 --> 00:30:24,030
<font color="#E5E5E5">nvme and your existing infrared and</font><font color="#CCCCCC"> nvme</font>

819
00:30:21,570 --> 00:30:26,280
<font color="#CCCCCC">tcp</font><font color="#E5E5E5"> is the solution</font><font color="#CCCCCC"> for that it's it's</font>

820
00:30:24,030 --> 00:30:29,600
<font color="#E5E5E5">not you know rock-solid stable so this</font>

821
00:30:26,280 --> 00:30:33,500
is only available<font color="#CCCCCC"> the RC</font><font color="#E5E5E5"> kernels 5.0 on</font>

822
00:30:29,600 --> 00:30:36,750
but I did a very you<font color="#E5E5E5"> know I wouldn't say</font>

823
00:30:33,500 --> 00:30:39,150
scientific<font color="#E5E5E5"> test but nonetheless</font><font color="#CCCCCC"> I did a</font>

824
00:30:36,750 --> 00:30:41,790
test on my laptop<font color="#CCCCCC"> and just by</font><font color="#E5E5E5"> the same</font>

825
00:30:39,150 --> 00:30:43,800
device same<font color="#CCCCCC"> setup</font><font color="#E5E5E5"> same laptop same</font><font color="#CCCCCC"> vm or</font>

826
00:30:41,790 --> 00:30:46,200
whatever<font color="#E5E5E5"> just switching protocol</font><font color="#CCCCCC"> just</font>

827
00:30:43,800 --> 00:30:50,190
gave me a<font color="#E5E5E5"> 30% increase and the reason</font>

828
00:30:46,200 --> 00:30:52,530
for<font color="#CCCCCC"> that is not</font><font color="#E5E5E5"> because nvme tcp is</font><font color="#CCCCCC"> so</font>

829
00:30:50,190 --> 00:30:53,970
much smarter in<font color="#CCCCCC"> the sense</font><font color="#E5E5E5"> but the reason</font>

830
00:30:52,530 --> 00:30:57,180
<font color="#E5E5E5">for that is that the things that it</font><font color="#CCCCCC"> does</font>

831
00:30:53,970 --> 00:30:58,980
not have to do right so<font color="#E5E5E5"> less is</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> and</font>

832
00:30:57,180 --> 00:31:01,440
you get<font color="#E5E5E5"> that through performance because</font>

833
00:30:58,980 --> 00:31:03,660
this whole block layer<font color="#E5E5E5"> request discuss</font>

834
00:31:01,440 --> 00:31:05,640
layer the<font color="#CCCCCC"> HBA and all these types of</font>

835
00:31:03,660 --> 00:31:09,120
<font color="#E5E5E5">things that's completely gone</font><font color="#CCCCCC"> in the</font>

836
00:31:05,640 --> 00:31:11,040
<font color="#CCCCCC">nvme space and therefore</font><font color="#E5E5E5"> it allows you</font>

837
00:31:09,120 --> 00:31:11,669
<font color="#E5E5E5">to do some better performance so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> want</font>

838
00:31:11,040 --> 00:31:17,970
<font color="#E5E5E5">a</font>

839
00:31:11,670 --> 00:31:21,440
show you<font color="#E5E5E5"> guys real quick how that I hope</font>

840
00:31:17,970 --> 00:31:27,120
at least<font color="#E5E5E5"> I can</font><font color="#CCCCCC"> show it</font><font color="#E5E5E5"> real quick</font>

841
00:31:21,440 --> 00:31:32,270
yeah<font color="#E5E5E5"> okay so okay this I have</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> okay</font>

842
00:31:27,120 --> 00:31:40,560
anyway<font color="#E5E5E5"> so I I have this a tool here that</font>

843
00:31:32,270 --> 00:31:42,480
<font color="#E5E5E5">if I can type so I have this tool here I</font>

844
00:31:40,560 --> 00:31:44,070
had these these these egress things

845
00:31:42,480 --> 00:31:46,260
right<font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> skipping all of that and</font>

846
00:31:44,070 --> 00:31:48,000
I'm immediately<font color="#E5E5E5"> writing into the the</font>

847
00:31:46,260 --> 00:31:49,890
<font color="#E5E5E5">underlying layer and the reason that</font><font color="#CCCCCC"> I</font>

848
00:31:48,000 --> 00:31:51,450
do that<font color="#CCCCCC"> is that I want to measure the</font>

849
00:31:49,890 --> 00:31:53,160
incurred performance when you for

850
00:31:51,450 --> 00:31:54,870
<font color="#E5E5E5">example add encryption or when you add</font>

851
00:31:53,160 --> 00:31:57,000
encryption with compression<font color="#E5E5E5"> what does</font>

852
00:31:54,870 --> 00:31:58,530
that do for performance because<font color="#CCCCCC"> you need</font>

853
00:31:57,000 --> 00:32:01,590
to figure out<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know how these things</font>

854
00:31:58,530 --> 00:32:06,450
behave<font color="#E5E5E5"> so to give you</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit of an</font>

855
00:32:01,590 --> 00:32:10,290
example<font color="#E5E5E5"> on the what's the file name so</font>

856
00:32:06,450 --> 00:32:16,610
yeah so the configuration<font color="#CCCCCC"> file here ah</font>

857
00:32:10,290 --> 00:32:16,610
shoot let me<font color="#E5E5E5"> see if I can</font>

858
00:32:21,080 --> 00:32:29,918
<font color="#E5E5E5">oh</font><font color="#CCCCCC"> darn it okay that's unfortunate you</font>

859
00:32:26,539 --> 00:32:39,980
can't see that<font color="#E5E5E5"> right</font><font color="#CCCCCC"> uh-huh</font>

860
00:32:29,919 --> 00:32:43,360
okay so wait<font color="#CCCCCC"> maybe I should have known</font>

861
00:32:39,980 --> 00:32:46,009
better<font color="#E5E5E5"> not to do demos okay so</font><font color="#CCCCCC"> so DV</font>

862
00:32:43,360 --> 00:32:47,600
<font color="#E5E5E5">this is a Pandora device it's a null</font>

863
00:32:46,009 --> 00:32:48,080
device so basically what it does<font color="#E5E5E5"> is it</font>

864
00:32:47,600 --> 00:32:50,178
grabs<font color="#CCCCCC"> the ow</font>

865
00:32:48,080 --> 00:32:51,168
<font color="#CCCCCC">throws it on the floor okay what what</font>

866
00:32:50,179 --> 00:32:53,239
good<font color="#E5E5E5"> does that do</font>

867
00:32:51,169 --> 00:32:55,850
well actually the kernel<font color="#CCCCCC"> has a thing a</font>

868
00:32:53,239 --> 00:32:58,190
<font color="#E5E5E5">similar call</font><font color="#CCCCCC"> null block</font><font color="#E5E5E5"> right and it's</font>

869
00:32:55,850 --> 00:32:59,658
just<font color="#CCCCCC"> it's common thing to do right how</font>

870
00:32:58,190 --> 00:33:01,609
do you<font color="#E5E5E5"> measure overhead in</font><font color="#CCCCCC"> the block</font>

871
00:32:59,659 --> 00:33:03,379
stack by having a<font color="#CCCCCC"> lock</font><font color="#E5E5E5"> device that's</font>

872
00:33:01,609 --> 00:33:05,689
infinitely<font color="#E5E5E5"> fast right how do you do that</font>

873
00:33:03,379 --> 00:33:07,959
<font color="#E5E5E5">don't do the i/o so it's a little</font><font color="#CCCCCC"> bit of</font>

874
00:33:05,690 --> 00:33:10,519
cheating<font color="#CCCCCC"> and so let</font><font color="#E5E5E5"> me actually move my</font>

875
00:33:07,960 --> 00:33:12,019
<font color="#E5E5E5">terminal back to my laptop so I can</font>

876
00:33:10,519 --> 00:33:19,100
actually see<font color="#CCCCCC"> what I'm doing</font><font color="#E5E5E5"> for a sec</font>

877
00:33:12,019 --> 00:33:20,960
and<font color="#CCCCCC"> it's actually I'm going to I'll show</font>

878
00:33:19,100 --> 00:33:23,330
you what I've done<font color="#E5E5E5"> because I</font><font color="#CCCCCC"> want to set</font>

879
00:33:20,960 --> 00:33:28,929
<font color="#E5E5E5">it up real quick so that you can see</font>

880
00:33:23,330 --> 00:33:35,509
that<font color="#E5E5E5"> it composes several devices out of</font>

881
00:33:28,929 --> 00:33:41,200
multiple typing under pressure is never

882
00:33:35,509 --> 00:33:44,350
good okay

883
00:33:41,200 --> 00:33:44,350
there we are

884
00:33:45,000 --> 00:33:54,150
so what I've<font color="#E5E5E5"> done</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> I yeah so I hope it</font>

885
00:33:52,560 --> 00:33:55,740
won't mind that<font color="#E5E5E5"> that</font><font color="#CCCCCC"> thing's still</font><font color="#E5E5E5"> there</font>

886
00:33:54,150 --> 00:33:57,930
so I'm going<font color="#CCCCCC"> to create three of these</font>

887
00:33:55,740 --> 00:34:00,000
devices<font color="#E5E5E5"> and then I'm going to you know</font>

888
00:33:57,930 --> 00:34:01,980
<font color="#E5E5E5">at this layer of mirroring where I grab</font>

889
00:34:00,000 --> 00:34:04,860
these three devices and then do I owe<font color="#E5E5E5"> to</font>

890
00:34:01,980 --> 00:34:06,870
<font color="#CCCCCC">it right not all that interesting but</font>

891
00:34:04,860 --> 00:34:10,409
the thing here is<font color="#CCCCCC"> K</font><font color="#E5E5E5"> so how fast is it</font>

892
00:34:06,870 --> 00:34:13,259
right because<font color="#E5E5E5"> if this is slow</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> never</font>

893
00:34:10,409 --> 00:34:19,129
go go fast<font color="#CCCCCC"> where's my mouse oh</font><font color="#E5E5E5"> this is</font>

894
00:34:13,260 --> 00:34:21,570
I'm<font color="#E5E5E5"> never gonna do this again okay</font><font color="#CCCCCC"> so</font>

895
00:34:19,130 --> 00:34:24,510
<font color="#CCCCCC">I'm</font><font color="#E5E5E5"> going to start the thing I have to</font>

896
00:34:21,570 --> 00:34:28,290
<font color="#E5E5E5">give it the configuration file and I'm</font>

897
00:34:24,510 --> 00:34:30,060
going<font color="#CCCCCC"> to give it a queue depth of of</font><font color="#E5E5E5"> one</font>

898
00:34:28,290 --> 00:34:33,300
<font color="#E5E5E5">because that's what devices don't like</font>

899
00:34:30,060 --> 00:34:35,759
because<font color="#CCCCCC"> it shows how slow they are and I</font>

900
00:34:33,300 --> 00:34:37,920
need to specify<font color="#E5E5E5"> a block size so we'll do</font>

901
00:34:35,760 --> 00:34:39,120
<font color="#E5E5E5">this a time as well</font>

902
00:34:37,920 --> 00:34:42,030
<font color="#E5E5E5">because otherwise it will just</font><font color="#CCCCCC"> run</font>

903
00:34:39,120 --> 00:34:45,830
forever<font color="#E5E5E5"> and I think</font><font color="#CCCCCC"> that's oh yeah what</font>

904
00:34:42,030 --> 00:34:51,570
we want<font color="#E5E5E5"> to do some random</font><font color="#CCCCCC"> rights look</font>

905
00:34:45,830 --> 00:34:53,400
and so<font color="#E5E5E5"> you see some</font><font color="#CCCCCC"> of the huge pages it</font>

906
00:34:51,570 --> 00:34:55,830
constructs the the mirror device based

907
00:34:53,400 --> 00:34:59,760
on<font color="#E5E5E5"> this thing and that's a little bit</font>

908
00:34:55,830 --> 00:35:02,250
over 3.5 million<font color="#E5E5E5"> so</font><font color="#CCCCCC"> three devices we're</font>

909
00:34:59,760 --> 00:35:06,420
mirroring and we have we're doing three

910
00:35:02,250 --> 00:35:09,000
<font color="#CCCCCC">and a half million so we</font><font color="#E5E5E5"> actually broke</font>

911
00:35:06,420 --> 00:35:11,640
that barrier<font color="#E5E5E5"> and just to show you</font><font color="#CCCCCC"> that</font>

912
00:35:09,000 --> 00:35:20,060
there<font color="#CCCCCC"> is obviously one last thing and</font>

913
00:35:11,640 --> 00:35:23,900
<font color="#CCCCCC">then I'll be done nevermind</font><font color="#E5E5E5"> just</font>

914
00:35:20,060 --> 00:35:23,900
questions<font color="#CCCCCC"> yes</font>

915
00:35:26,869 --> 00:35:38,699
yes sir no I have not that's<font color="#CCCCCC"> oh sorry so</font>

916
00:35:35,880 --> 00:35:40,559
<font color="#CCCCCC">your yes so I did</font><font color="#E5E5E5"> not turn on multi</font><font color="#CCCCCC"> Khan</font>

917
00:35:38,699 --> 00:35:42,869
support for<font color="#CCCCCC"> NBD that is very true</font>

918
00:35:40,559 --> 00:35:45,089
<font color="#E5E5E5">that is very true and my point</font><font color="#CCCCCC"> was not</font>

919
00:35:42,869 --> 00:35:46,920
<font color="#CCCCCC">to find the absolute numbers of I scuzzy</font>

920
00:35:45,089 --> 00:35:48,959
verses in<font color="#E5E5E5"> BD what I wanted to show was</font>

921
00:35:46,920 --> 00:35:50,430
that<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a difference between the</font>

922
00:35:48,959 --> 00:35:54,989
protocol<font color="#CCCCCC"> that you select what the</font>

923
00:35:50,430 --> 00:36:01,558
performance envelope is yeah any other

924
00:35:54,989 --> 00:36:05,959
questions<font color="#CCCCCC"> okay well thank you very</font><font color="#E5E5E5"> much</font>

925
00:36:01,559 --> 00:36:05,959
and<font color="#CCCCCC"> next time</font><font color="#E5E5E5"> thank</font><font color="#CCCCCC"> you</font>

