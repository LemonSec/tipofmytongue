1
00:03:54,920 --> 00:04:02,640
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I hope you can hear me now so as I</font>

2
00:03:59,580 --> 00:04:05,100
<font color="#E5E5E5">was saying</font><font color="#CCCCCC"> declarations just defines the</font>

3
00:04:02,640 --> 00:04:07,859
properties and<font color="#E5E5E5"> methods</font><font color="#CCCCCC"> that's why when</font>

4
00:04:05,100 --> 00:04:08,910
<font color="#CCCCCC">we access an object in typescript and we</font>

5
00:04:07,860 --> 00:04:11,580
are<font color="#CCCCCC"> using a library written in</font>

6
00:04:08,910 --> 00:04:13,590
<font color="#E5E5E5">JavaScript we are all the methods and</font>

7
00:04:11,580 --> 00:04:17,520
<font color="#E5E5E5">properties of that libraries because of</font>

8
00:04:13,590 --> 00:04:19,769
the declaration files developer

9
00:04:17,519 --> 00:04:21,799
experience<font color="#E5E5E5"> one reason to use typescript</font>

10
00:04:19,769 --> 00:04:26,640
<font color="#E5E5E5">is because of the developer experience</font>

11
00:04:21,800 --> 00:04:29,010
<font color="#E5E5E5">so types prevent bugs</font><font color="#CCCCCC"> first of</font><font color="#E5E5E5"> all if</font><font color="#CCCCCC"> we</font>

12
00:04:26,640 --> 00:04:32,610
for some reason we misspelled writing

13
00:04:29,010 --> 00:04:35,940
method or we are passing an wrong<font color="#E5E5E5"> type</font>

14
00:04:32,610 --> 00:04:39,870
to a function if we<font color="#E5E5E5"> compile this code we</font>

15
00:04:35,940 --> 00:04:42,660
always we automatically get<font color="#E5E5E5"> the</font><font color="#CCCCCC"> errors</font>

16
00:04:39,870 --> 00:04:46,650
by<font color="#E5E5E5"> the compiler so we don't</font><font color="#CCCCCC"> have this</font>

17
00:04:42,660 --> 00:04:48,800
<font color="#E5E5E5">kind of errors in</font><font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> which is nice</font>

18
00:04:46,650 --> 00:04:51,960
and it can save<font color="#E5E5E5"> us a lot of time</font>

19
00:04:48,800 --> 00:04:54,600
refactoring code<font color="#E5E5E5"> it's much easier</font><font color="#CCCCCC"> using</font>

20
00:04:51,960 --> 00:04:56,549
typescript<font color="#CCCCCC"> to refactor code</font><font color="#E5E5E5"> basically we</font>

21
00:04:54,600 --> 00:04:59,640
are<font color="#E5E5E5"> refracted we are renaming a property</font>

22
00:04:56,550 --> 00:05:01,320
in an interface<font color="#E5E5E5"> so it will find all</font>

23
00:04:59,640 --> 00:05:03,240
reference to<font color="#E5E5E5"> that type and it</font><font color="#CCCCCC"> will</font>

24
00:05:01,320 --> 00:05:06,290
change in all places where we<font color="#E5E5E5"> are</font><font color="#CCCCCC"> using</font>

25
00:05:03,240 --> 00:05:09,780
that<font color="#E5E5E5"> property pretty nice</font>

26
00:05:06,290 --> 00:05:12,870
intellisense<font color="#CCCCCC"> so as</font><font color="#E5E5E5"> I said before when we</font>

27
00:05:09,780 --> 00:05:16,950
access<font color="#E5E5E5"> an</font><font color="#CCCCCC"> object we get all properties</font>

28
00:05:12,870 --> 00:05:19,560
and methods of that<font color="#E5E5E5"> object using</font><font color="#CCCCCC"> the</font>

29
00:05:16,950 --> 00:05:22,580
declarations so it's pretty<font color="#CCCCCC"> useful and</font>

30
00:05:19,560 --> 00:05:25,230
it increases<font color="#E5E5E5"> the developer productivity</font>

31
00:05:22,580 --> 00:05:27,270
<font color="#E5E5E5">okay now let's talk about migration</font><font color="#CCCCCC"> so</font>

32
00:05:25,230 --> 00:05:29,610
now that we<font color="#CCCCCC"> know the basics</font><font color="#E5E5E5"> of</font>

33
00:05:27,270 --> 00:05:34,590
JavaScript<font color="#E5E5E5"> and the advantages</font><font color="#CCCCCC"> lets</font>

34
00:05:29,610 --> 00:05:37,560
migrate from JavaScript to typescript so

35
00:05:34,590 --> 00:05:40,440
our migration goal basically<font color="#E5E5E5"> we have a</font>

36
00:05:37,560 --> 00:05:43,100
really<font color="#CCCCCC"> simple API</font><font color="#E5E5E5"> written in JavaScript</font>

37
00:05:40,440 --> 00:05:47,390
it's using epi as a web framework<font color="#E5E5E5"> and</font>

38
00:05:43,100 --> 00:05:49,980
our goal<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> migrate to typescript</font>

39
00:05:47,390 --> 00:05:53,969
here is the is a<font color="#E5E5E5"> project if</font><font color="#CCCCCC"> you can</font>

40
00:05:49,980 --> 00:05:56,490
check later so what<font color="#E5E5E5"> is our migration</font>

41
00:05:53,970 --> 00:06:00,710
plan so first we<font color="#CCCCCC"> start by installing</font>

42
00:05:56,490 --> 00:06:02,810
typescript we install<font color="#CCCCCC"> a dev dependency</font>

43
00:06:00,710 --> 00:06:05,299
then we install declarations<font color="#E5E5E5"> in this</font>

44
00:06:02,810 --> 00:06:08,210
case we install the note declarations

45
00:06:05,300 --> 00:06:09,830
and the<font color="#CCCCCC"> EPI</font><font color="#E5E5E5"> so since we are</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> the we</font>

46
00:06:08,210 --> 00:06:12,469
are in the<font color="#E5E5E5"> note environment we need</font><font color="#CCCCCC"> to</font>

47
00:06:09,830 --> 00:06:15,590
use to<font color="#CCCCCC"> install the declarations</font><font color="#E5E5E5"> for note</font>

48
00:06:12,470 --> 00:06:20,090
and also declarations for<font color="#CCCCCC"> epi that is a</font>

49
00:06:15,590 --> 00:06:23,900
web framework<font color="#CCCCCC"> written in JavaScript then</font>

50
00:06:20,090 --> 00:06:27,440
we<font color="#E5E5E5"> set up our TS config Jason</font><font color="#CCCCCC"> so instead</font>

51
00:06:23,900 --> 00:06:30,560
of passing<font color="#CCCCCC"> all compiler options via</font>

52
00:06:27,440 --> 00:06:32,900
argument we can initialize<font color="#CCCCCC"> these TS</font>

53
00:06:30,560 --> 00:06:37,460
config<font color="#E5E5E5"> dot Jason and we can specify all</font>

54
00:06:32,900 --> 00:06:41,120
<font color="#CCCCCC">the compiler options</font><font color="#E5E5E5"> much easier then we</font>

55
00:06:37,460 --> 00:06:42,198
enable this option allows<font color="#CCCCCC"> us</font><font color="#E5E5E5"> that</font>

56
00:06:41,120 --> 00:06:44,449
<font color="#CCCCCC">basically says to</font><font color="#E5E5E5"> the typescript</font>

57
00:06:42,199 --> 00:06:46,550
<font color="#E5E5E5">compiler</font><font color="#CCCCCC"> well you compile</font><font color="#E5E5E5"> type script</font>

58
00:06:44,449 --> 00:06:50,660
<font color="#E5E5E5">and now you will also compile JavaScript</font>

59
00:06:46,550 --> 00:06:53,690
code and<font color="#CCCCCC"> then optionally</font><font color="#E5E5E5"> we can enable</font>

60
00:06:50,660 --> 00:06:55,880
this properties<font color="#E5E5E5"> option check GS so</font>

61
00:06:53,690 --> 00:06:57,530
instead of just copying the JavaScript

62
00:06:55,880 --> 00:06:59,780
code<font color="#CCCCCC"> if you'll also analyze the</font>

63
00:06:57,530 --> 00:07:03,460
JavaScript and report some errors how

64
00:06:59,780 --> 00:07:06,260
using<font color="#CCCCCC"> Jess Docs</font><font color="#E5E5E5"> and declaration files</font><font color="#CCCCCC"> I</font>

65
00:07:03,460 --> 00:07:10,099
will show<font color="#E5E5E5"> you then we just start by</font>

66
00:07:06,260 --> 00:07:13,310
naming our<font color="#E5E5E5"> J's files to</font><font color="#CCCCCC"> typescript</font><font color="#E5E5E5"> fix</font>

67
00:07:10,099 --> 00:07:17,000
errors and then go back to<font color="#E5E5E5"> step four</font>

68
00:07:13,310 --> 00:07:23,840
until<font color="#CCCCCC"> we my great deal application now</font>

69
00:07:17,000 --> 00:07:29,479
let's do a simple<font color="#E5E5E5"> demo so can you see my</font>

70
00:07:23,840 --> 00:07:32,659
screen<font color="#CCCCCC"> so here is the</font><font color="#E5E5E5"> package Jason and</font>

71
00:07:29,479 --> 00:07:34,520
as you can<font color="#CCCCCC"> see we just have a P as a</font>

72
00:07:32,659 --> 00:07:38,659
<font color="#E5E5E5">dependency and as dev dependencies I</font>

73
00:07:34,520 --> 00:07:41,840
have a<font color="#CCCCCC"> P know that</font><font color="#E5E5E5"> declarations</font><font color="#CCCCCC"> n type</font>

74
00:07:38,659 --> 00:07:46,310
<font color="#CCCCCC">strip then I just created a few scripts</font>

75
00:07:41,840 --> 00:07:49,580
to help me<font color="#E5E5E5"> building the code so let's</font>

76
00:07:46,310 --> 00:07:55,030
migrate our first file that's<font color="#E5E5E5"> my write</font>

77
00:07:49,580 --> 00:07:55,030
our server<font color="#E5E5E5"> so we just go here</font>

78
00:07:56,080 --> 00:08:08,378
just rename the file to<font color="#CCCCCC"> typescript and</font>

79
00:07:58,330 --> 00:08:10,180
<font color="#CCCCCC">let's</font><font color="#E5E5E5"> it let's compile this okay it's</font>

80
00:08:08,379 --> 00:08:13,000
running<font color="#E5E5E5"> the</font><font color="#CCCCCC"> TSC</font><font color="#E5E5E5"> comment the typescript</font>

81
00:08:10,180 --> 00:08:18,460
compiler<font color="#E5E5E5"> and as you can see it</font><font color="#CCCCCC"> generates</font>

82
00:08:13,000 --> 00:08:20,349
<font color="#E5E5E5">to our output directory the</font><font color="#CCCCCC"> JavaScript</font>

83
00:08:18,460 --> 00:08:22,930
code<font color="#E5E5E5"> but and you can</font><font color="#CCCCCC"> see it's missing</font>

84
00:08:20,349 --> 00:08:25,300
the<font color="#CCCCCC"> other</font><font color="#E5E5E5"> JavaScript files so this is</font>

85
00:08:22,930 --> 00:08:30,460
the<font color="#E5E5E5"> the typescript file that was</font>

86
00:08:25,300 --> 00:08:32,829
compiled so let's also instead of

87
00:08:30,460 --> 00:08:40,659
exporters<font color="#E5E5E5"> a large JavaScript we are</font>

88
00:08:32,828 --> 00:08:43,149
using export<font color="#E5E5E5"> a lot a lot</font><font color="#CCCCCC"> of script so to</font>

89
00:08:40,659 --> 00:08:45,700
enable<font color="#CCCCCC"> compel compiling the</font><font color="#E5E5E5"> JavaScript</font>

90
00:08:43,149 --> 00:08:47,350
code<font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to enable this option so</font>

91
00:08:45,700 --> 00:08:50,730
there is<font color="#E5E5E5"> like a bunch of compiler</font>

92
00:08:47,350 --> 00:08:55,110
options<font color="#E5E5E5"> and we are enabling this one</font>

93
00:08:50,730 --> 00:08:58,480
allows yes<font color="#E5E5E5"> so when we enable this option</font>

94
00:08:55,110 --> 00:09:00,100
<font color="#CCCCCC">now the compiler it looks at the</font>

95
00:08:58,480 --> 00:09:04,450
<font color="#E5E5E5">typescript files and also to the</font>

96
00:09:00,100 --> 00:09:08,170
JavaScript so here we have<font color="#E5E5E5"> our</font>

97
00:09:04,450 --> 00:09:10,390
JavaScript code<font color="#CCCCCC"> also so we have our time</font>

98
00:09:08,170 --> 00:09:12,910
script<font color="#E5E5E5"> that was compiled in</font><font color="#CCCCCC"> our</font>

99
00:09:10,390 --> 00:09:15,810
JavaScript<font color="#CCCCCC"> and it basically just copied</font>

100
00:09:12,910 --> 00:09:22,270
the file into<font color="#E5E5E5"> some kind of even</font><font color="#CCCCCC"> tation</font>

101
00:09:15,810 --> 00:09:28,109
so nothing special<font color="#CCCCCC"> so let's try to</font><font color="#E5E5E5"> run</font>

102
00:09:22,270 --> 00:09:31,870
this and start so our server is running

103
00:09:28,110 --> 00:09:38,140
then<font color="#E5E5E5"> call our server</font><font color="#CCCCCC"> and it's returning</font>

104
00:09:31,870 --> 00:09:41,740
<font color="#CCCCCC">some stuff</font><font color="#E5E5E5"> so it's working so in as you</font>

105
00:09:38,140 --> 00:09:45,370
can see we have well some typescript

106
00:09:41,740 --> 00:09:49,029
code<font color="#CCCCCC"> in</font><font color="#E5E5E5"> some JavaScript but let's make</font>

107
00:09:45,370 --> 00:09:50,170
things more<font color="#E5E5E5"> interesting so now</font><font color="#CCCCCC"> I'm now</font>

108
00:09:49,029 --> 00:09:52,060
that we are using the typescript

109
00:09:50,170 --> 00:09:54,430
<font color="#E5E5E5">compiler</font><font color="#CCCCCC"> I want to take the full</font>

110
00:09:52,060 --> 00:09:58,349
advantages<font color="#E5E5E5"> and I'm going to</font><font color="#CCCCCC"> enable this</font>

111
00:09:54,430 --> 00:10:00,640
option<font color="#CCCCCC"> checked yes so we</font><font color="#E5E5E5"> set of just</font>

112
00:09:58,350 --> 00:10:03,190
compile the JavaScript<font color="#CCCCCC"> it will also</font>

113
00:10:00,640 --> 00:10:05,449
analyze the<font color="#E5E5E5"> JavaScript code</font><font color="#CCCCCC"> and report</font>

114
00:10:03,190 --> 00:10:10,570
some errors

115
00:10:05,450 --> 00:10:10,570
<font color="#CCCCCC">let's just</font><font color="#E5E5E5"> clear these and pile</font>

116
00:10:12,100 --> 00:10:19,790
okay<font color="#E5E5E5"> yeah</font>

117
00:10:13,490 --> 00:10:22,250
we have errors<font color="#E5E5E5"> so if you can see it but</font>

118
00:10:19,790 --> 00:10:24,829
<font color="#E5E5E5">basically it's saying that</font><font color="#CCCCCC"> type</font><font color="#E5E5E5"> number</font>

119
00:10:22,250 --> 00:10:30,320
is not assignable to boolean in a

120
00:10:24,830 --> 00:10:32,120
<font color="#E5E5E5">JavaScript file so if we go here it's</font>

121
00:10:30,320 --> 00:10:34,670
complaining<font color="#E5E5E5"> that it's expecting a</font>

122
00:10:32,120 --> 00:10:38,210
boolean and we are passing a<font color="#E5E5E5"> number and</font>

123
00:10:34,670 --> 00:10:41,829
how typescript knows this because<font color="#CCCCCC"> of the</font>

124
00:10:38,210 --> 00:10:45,080
GS<font color="#CCCCCC"> talks if we go to the GS Doc's</font><font color="#E5E5E5"> here</font>

125
00:10:41,830 --> 00:10:48,200
it says that<font color="#CCCCCC"> instead</font><font color="#E5E5E5"> is expecting a task</font>

126
00:10:45,080 --> 00:10:50,240
and the task the done property is a

127
00:10:48,200 --> 00:10:53,600
boolean<font color="#E5E5E5"> and we are passing a number so</font>

128
00:10:50,240 --> 00:10:58,580
we can define types in<font color="#CCCCCC"> J's</font><font color="#E5E5E5"> doc using</font>

129
00:10:53,600 --> 00:11:07,810
this notation<font color="#E5E5E5"> and it's pretty useful</font><font color="#CCCCCC"> so</font>

130
00:10:58,580 --> 00:11:07,810
<font color="#E5E5E5">let's fix this so now we pass a boolean</font>

131
00:11:08,050 --> 00:11:18,349
so<font color="#E5E5E5"> Amit was reporting another</font><font color="#CCCCCC"> Herer here</font>

132
00:11:11,570 --> 00:11:21,950
in this file saying that we are<font color="#E5E5E5"> passing</font>

133
00:11:18,350 --> 00:11:24,140
a<font color="#CCCCCC"> string and we expect a</font><font color="#E5E5E5"> number and this</font>

134
00:11:21,950 --> 00:11:27,890
code at first it looks that<font color="#E5E5E5"> is correct</font>

135
00:11:24,140 --> 00:11:30,199
well we<font color="#E5E5E5"> just receive a</font><font color="#CCCCCC"> request we get</font>

136
00:11:27,890 --> 00:11:33,980
the<font color="#E5E5E5"> the param ID and then we access the</font>

137
00:11:30,200 --> 00:11:36,470
database the thing is if<font color="#CCCCCC"> we</font><font color="#E5E5E5"> go to the</font>

138
00:11:33,980 --> 00:11:39,080
get method<font color="#E5E5E5"> in the GS</font><font color="#CCCCCC"> Doc's</font><font color="#E5E5E5"> it says that</font>

139
00:11:36,470 --> 00:11:41,050
we are expecting a<font color="#E5E5E5"> number and you are</font>

140
00:11:39,080 --> 00:11:43,610
<font color="#E5E5E5">passing a</font><font color="#CCCCCC"> string and</font><font color="#E5E5E5"> how it knows that</font>

141
00:11:41,050 --> 00:11:46,010
params<font color="#E5E5E5"> is a string because of the</font>

142
00:11:43,610 --> 00:11:48,170
declarations so the<font color="#E5E5E5"> typescript uses the</font>

143
00:11:46,010 --> 00:11:53,630
declaration the happy declarations<font color="#E5E5E5"> and</font>

144
00:11:48,170 --> 00:11:57,050
it knows that params<font color="#E5E5E5"> is a dictionary</font><font color="#CCCCCC"> of</font>

145
00:11:53,630 --> 00:11:59,750
strings that's why<font color="#CCCCCC"> ID is a string and</font>

146
00:11:57,050 --> 00:12:04,010
here you we can see<font color="#CCCCCC"> the definitions of</font>

147
00:11:59,750 --> 00:12:07,690
<font color="#E5E5E5">the request object in</font><font color="#CCCCCC"> Epogen</font><font color="#E5E5E5"> so let's</font>

148
00:12:04,010 --> 00:12:07,689
just convert

149
00:12:08,920 --> 00:12:14,319
our variable<font color="#CCCCCC"> to number and if we try</font><font color="#E5E5E5"> to</font>

150
00:12:12,950 --> 00:12:17,839
compile this

151
00:12:14,320 --> 00:12:20,149
well no errors<font color="#CCCCCC"> whoo</font><font color="#E5E5E5"> we just fix two</font>

152
00:12:17,839 --> 00:12:24,579
errors in<font color="#E5E5E5"> our JavaScript using</font>

153
00:12:20,149 --> 00:12:29,930
<font color="#E5E5E5">typescript</font><font color="#CCCCCC"> which is great</font><font color="#E5E5E5"> so let's just</font>

154
00:12:24,579 --> 00:12:32,420
migrate another file<font color="#CCCCCC"> well now we are</font>

155
00:12:29,930 --> 00:12:36,170
receiving<font color="#E5E5E5"> an error so as you can</font><font color="#CCCCCC"> see we</font>

156
00:12:32,420 --> 00:12:38,839
don't have<font color="#E5E5E5"> intelligence here so</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> if</font>

157
00:12:36,170 --> 00:12:45,589
we had types we are saying that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font>

158
00:12:38,839 --> 00:12:48,560
receiving<font color="#E5E5E5"> an error now we have all</font>

159
00:12:45,589 --> 00:12:53,120
properties of<font color="#CCCCCC"> the error</font><font color="#E5E5E5"> method error</font>

160
00:12:48,560 --> 00:12:55,189
<font color="#E5E5E5">object so let's just print</font><font color="#CCCCCC"> a message</font><font color="#E5E5E5"> and</font>

161
00:12:53,120 --> 00:13:01,550
let's make<font color="#E5E5E5"> things even more</font><font color="#CCCCCC"> interesting</font>

162
00:12:55,190 --> 00:13:05,089
so let's enable more options in our

163
00:13:01,550 --> 00:13:07,519
compiler so there is a bunch<font color="#E5E5E5"> of type</font>

164
00:13:05,089 --> 00:13:15,709
checking options here we are<font color="#E5E5E5"> going to</font>

165
00:13:07,519 --> 00:13:18,620
enable<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> them so if we enable this</font>

166
00:13:15,709 --> 00:13:21,290
now we are saying to<font color="#E5E5E5"> the compiler so if</font>

167
00:13:18,620 --> 00:13:23,390
we have like<font color="#CCCCCC"> and use a lot</font><font color="#E5E5E5"> of variables</font>

168
00:13:21,290 --> 00:13:25,730
or in user parameters please<font color="#E5E5E5"> report</font>

169
00:13:23,390 --> 00:13:27,470
<font color="#CCCCCC">errors and this is true</font><font color="#E5E5E5"> for our</font>

170
00:13:25,730 --> 00:13:31,399
JavaScript code and<font color="#E5E5E5"> also for our</font>

171
00:13:27,470 --> 00:13:38,660
typescript code so let's try to compile

172
00:13:31,399 --> 00:13:40,430
this again<font color="#E5E5E5"> okay found some errors so</font>

173
00:13:38,660 --> 00:13:44,630
here it's saying<font color="#E5E5E5"> that object is possibly</font>

174
00:13:40,430 --> 00:13:48,560
undefined<font color="#E5E5E5"> well this one is</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> so</font>

175
00:13:44,630 --> 00:13:51,920
why because<font color="#E5E5E5"> tasks can be of type tasks</font>

176
00:13:48,560 --> 00:13:56,479
and or undefined<font color="#E5E5E5"> why because here in the</font>

177
00:13:51,920 --> 00:13:59,360
get method<font color="#E5E5E5"> in the GS Docs</font><font color="#CCCCCC"> it says that</font>

178
00:13:56,480 --> 00:14:03,170
it can return a task<font color="#E5E5E5"> or an undefined</font><font color="#CCCCCC"> and</font>

179
00:13:59,360 --> 00:14:06,230
since we enabled this option here<font color="#CCCCCC"> treat</font>

180
00:14:03,170 --> 00:14:08,120
<font color="#CCCCCC">null checks</font><font color="#E5E5E5"> it says that well tasks</font><font color="#CCCCCC"> can</font>

181
00:14:06,230 --> 00:14:11,630
be<font color="#E5E5E5"> new so we can have a problem here</font>

182
00:14:08,120 --> 00:14:17,589
<font color="#E5E5E5">let's</font><font color="#CCCCCC"> protect against this</font><font color="#E5E5E5"> problem so we</font>

183
00:14:11,630 --> 00:14:17,589
<font color="#CCCCCC">need to</font><font color="#E5E5E5"> just check if task is new</font>

184
00:14:21,040 --> 00:14:27,589
well cool we catch another problem<font color="#E5E5E5"> and</font>

185
00:14:24,550 --> 00:14:29,750
we can<font color="#E5E5E5"> just slowly like migrate the</font>

186
00:14:27,590 --> 00:14:32,720
<font color="#E5E5E5">whole application from JavaScript to</font>

187
00:14:29,750 --> 00:14:34,430
typescript<font color="#CCCCCC"> and so we can left F people</font>

188
00:14:32,720 --> 00:14:36,440
<font color="#CCCCCC">in our team</font><font color="#E5E5E5"> implementing new feature in</font>

189
00:14:34,430 --> 00:14:38,959
typescript<font color="#CCCCCC"> and still fixing some</font>

190
00:14:36,440 --> 00:14:41,480
problems in JavaScript<font color="#E5E5E5"> we don't need to</font>

191
00:14:38,960 --> 00:14:45,640
migrate like<font color="#CCCCCC"> add at once</font><font color="#E5E5E5"> we can just</font>

192
00:14:41,480 --> 00:14:50,570
like smoothly<font color="#E5E5E5"> migrate our applications</font>

193
00:14:45,640 --> 00:14:55,100
<font color="#CCCCCC">let's back to the slides so</font><font color="#E5E5E5"> let's just</font>

194
00:14:50,570 --> 00:14:57,350
<font color="#E5E5E5">recap so convert javascript files to</font>

195
00:14:55,100 --> 00:15:02,090
typescript<font color="#E5E5E5"> and enable allows us to also</font>

196
00:14:57,350 --> 00:15:04,850
<font color="#E5E5E5">compile the JavaScript code optionally</font>

197
00:15:02,090 --> 00:15:08,180
<font color="#CCCCCC">we can</font><font color="#E5E5E5"> enable this option checked yes</font>

198
00:15:04,850 --> 00:15:10,940
it's very<font color="#E5E5E5"> useful and</font><font color="#CCCCCC"> take advantages of</font>

199
00:15:08,180 --> 00:15:14,569
the GS<font color="#CCCCCC"> doc and declarations</font><font color="#E5E5E5"> to also</font>

200
00:15:10,940 --> 00:15:17,540
report<font color="#CCCCCC"> errors in our JavaScript code so</font>

201
00:15:14,570 --> 00:15:19,610
<font color="#CCCCCC">in</font><font color="#E5E5E5"> these allow us to use typescript</font><font color="#CCCCCC"> but</font>

202
00:15:17,540 --> 00:15:21,500
not write typescript<font color="#CCCCCC"> we can just have a</font>

203
00:15:19,610 --> 00:15:24,080
whole application<font color="#E5E5E5"> written in JavaScript</font>

204
00:15:21,500 --> 00:15:26,050
<font color="#E5E5E5">and having type checking if we enable</font>

205
00:15:24,080 --> 00:15:30,170
this option<font color="#E5E5E5"> and if we saw the</font>

206
00:15:26,050 --> 00:15:35,060
declarations so we can write<font color="#E5E5E5"> JavaScript</font>

207
00:15:30,170 --> 00:15:37,400
with types then if we want<font color="#CCCCCC"> to catch even</font>

208
00:15:35,060 --> 00:15:40,459
more errors<font color="#E5E5E5"> in our code we can enable</font>

209
00:15:37,400 --> 00:15:44,540
<font color="#CCCCCC">the three type checking options to</font>

210
00:15:40,460 --> 00:15:45,580
detect<font color="#CCCCCC"> even more problems</font><font color="#E5E5E5"> so and that's</font>

211
00:15:44,540 --> 00:15:48,699
it

212
00:15:45,580 --> 00:15:48,700
thank you

213
00:15:50,870 --> 00:16:03,890
I don't know if we have time for

214
00:15:54,860 --> 00:16:07,190
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> they are</font><font color="#E5E5E5"> not enabled</font><font color="#CCCCCC"> by</font>

215
00:16:03,890 --> 00:16:09,470
default<font color="#E5E5E5"> well it's like a</font><font color="#CCCCCC"> typescript</font>

216
00:16:07,190 --> 00:16:11,510
decision when<font color="#E5E5E5"> we</font><font color="#CCCCCC"> generate the TS config</font>

217
00:16:09,470 --> 00:16:13,340
file<font color="#CCCCCC"> it</font><font color="#E5E5E5"> basically you have like all</font>

218
00:16:11,510 --> 00:16:15,740
options<font color="#E5E5E5"> and all of them are</font><font color="#CCCCCC"> basically</font>

219
00:16:13,340 --> 00:16:19,850
commented so you just need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> incumbent</font>

220
00:16:15,740 --> 00:16:22,970
<font color="#CCCCCC">all options there are</font><font color="#E5E5E5"> some rules</font><font color="#CCCCCC"> that we</font>

221
00:16:19,850 --> 00:16:26,710
can catch with linters but if we have if

222
00:16:22,970 --> 00:16:26,710
we<font color="#CCCCCC"> just use typescript it's much easier</font>

