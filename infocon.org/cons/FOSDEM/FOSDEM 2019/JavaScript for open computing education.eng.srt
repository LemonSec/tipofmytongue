1
00:00:04,680 --> 00:00:08,850
<font color="#CCCCCC">i adapter</font><font color="#E5E5E5"> because that's what we have</font>

2
00:00:06,480 --> 00:00:12,059
<font color="#E5E5E5">you don't</font><font color="#CCCCCC"> even need</font><font color="#E5E5E5"> the laptop</font><font color="#CCCCCC"> so yeah</font>

3
00:00:08,850 --> 00:00:14,759
<font color="#E5E5E5">come come</font><font color="#CCCCCC"> actually close your eyes</font>

4
00:00:12,059 --> 00:00:16,500
everybody close your<font color="#CCCCCC"> eyes</font><font color="#E5E5E5"> like this do</font>

5
00:00:14,759 --> 00:00:18,150
you<font color="#CCCCCC"> think you have a talk if you do then</font>

6
00:00:16,500 --> 00:00:19,290
<font color="#CCCCCC">just raise</font><font color="#E5E5E5"> your hand I can see when</font>

7
00:00:18,150 --> 00:00:22,259
<font color="#CCCCCC">you're not</font><font color="#E5E5E5"> closing your eyes so</font>

8
00:00:19,290 --> 00:00:24,329
everybody close their eyes I'm not

9
00:00:22,259 --> 00:00:26,340
paying<font color="#CCCCCC"> attention if</font><font color="#E5E5E5"> you think you</font><font color="#CCCCCC"> have</font>

10
00:00:24,329 --> 00:00:28,649
it close<font color="#E5E5E5"> your eyes close your eyes</font>

11
00:00:26,340 --> 00:00:30,239
raise<font color="#E5E5E5"> your hand if you have potentially</font>

12
00:00:28,649 --> 00:00:35,550
you talk<font color="#E5E5E5"> nobody else need to know just</font>

13
00:00:30,239 --> 00:00:37,980
<font color="#E5E5E5">me okay you're pretty shy</font><font color="#CCCCCC"> I will find a</font>

14
00:00:35,550 --> 00:00:39,959
<font color="#CCCCCC">solution</font><font color="#E5E5E5"> if you don't if nobody</font><font color="#CCCCCC"> shows up</font>

15
00:00:37,980 --> 00:00:43,019
<font color="#E5E5E5">that will be me again so we</font><font color="#CCCCCC"> don't want</font>

16
00:00:39,960 --> 00:00:47,789
to go there<font color="#E5E5E5"> please</font><font color="#CCCCCC"> find a finer talk at</font>

17
00:00:43,019 --> 00:00:50,248
about 4:00 4:30<font color="#E5E5E5"> so we start about</font><font color="#CCCCCC"> now as</font>

18
00:00:47,789 --> 00:00:53,159
soon as<font color="#CCCCCC"> everybody's</font><font color="#E5E5E5"> sitting</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> was spots</font>

19
00:00:50,249 --> 00:00:54,929
<font color="#CCCCCC">there if everyone has their computers</font>

20
00:00:53,159 --> 00:00:57,839
pull them<font color="#E5E5E5"> out because</font><font color="#CCCCCC"> there are</font>

21
00:00:54,929 --> 00:01:00,149
exercises<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can follow along with and</font>

22
00:00:57,839 --> 00:01:03,179
<font color="#CCCCCC">you now</font><font color="#E5E5E5"> be pausing in between to see if</font>

23
00:01:00,149 --> 00:01:04,800
anyone has questions along the way<font color="#E5E5E5"> so</font>

24
00:01:03,179 --> 00:01:07,290
take<font color="#CCCCCC"> a moment if you can</font><font color="#E5E5E5"> go to the</font>

25
00:01:04,800 --> 00:01:09,240
FOSDEM page for<font color="#E5E5E5"> this presentation</font><font color="#CCCCCC"> go to</font>

26
00:01:07,290 --> 00:01:10,710
the presentation link at the bottom<font color="#E5E5E5"> and</font>

27
00:01:09,240 --> 00:01:15,839
you can<font color="#E5E5E5"> get to all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> examples from the</font>

28
00:01:10,710 --> 00:01:18,000
<font color="#E5E5E5">slides</font><font color="#CCCCCC"> now is the</font><font color="#E5E5E5"> moment to make noise</font>

29
00:01:15,840 --> 00:01:20,790
<font color="#E5E5E5">with</font><font color="#CCCCCC"> your laptop take your laptop out</font>

30
00:01:18,000 --> 00:01:24,510
now you don't learn if you just listen

31
00:01:20,790 --> 00:01:28,890
<font color="#CCCCCC">plus it's</font><font color="#E5E5E5"> not fun so it's mandatory if</font>

32
00:01:24,510 --> 00:01:31,640
<font color="#E5E5E5">you have a laptop take it out</font><font color="#CCCCCC"> they're</font>

33
00:01:28,890 --> 00:01:31,640
going<font color="#E5E5E5"> to hate me</font>

34
00:01:35,290 --> 00:01:38,190
that's fine

35
00:01:43,770 --> 00:01:46,770
nope

36
00:01:58,510 --> 00:02:03,010
<font color="#E5E5E5">Oh</font><font color="#CCCCCC"> javascript</font><font color="#E5E5E5"> is not funny if you do it</font>

37
00:02:01,210 --> 00:02:04,839
<font color="#E5E5E5">alone</font><font color="#CCCCCC"> so you need to help others to get</font>

38
00:02:03,010 --> 00:02:07,270
it for<font color="#E5E5E5"> this all right</font>

39
00:02:04,840 --> 00:02:08,950
this talk is<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> less technical and</font>

40
00:02:07,270 --> 00:02:12,040
it's actually<font color="#E5E5E5"> about how do we make the</font>

41
00:02:08,949 --> 00:02:13,390
technical approachable<font color="#CCCCCC"> so I would</font><font color="#E5E5E5"> like</font>

42
00:02:12,040 --> 00:02:15,730
<font color="#E5E5E5">to show you some ways that</font><font color="#CCCCCC"> we can use</font>

43
00:02:13,390 --> 00:02:18,940
JavaScript<font color="#CCCCCC"> as maybe possibly the</font><font color="#E5E5E5"> best</font>

44
00:02:15,730 --> 00:02:20,799
language for effective learning<font color="#E5E5E5"> so how</font>

45
00:02:18,940 --> 00:02:21,880
not only<font color="#CCCCCC"> then can you teach with</font>

46
00:02:20,800 --> 00:02:24,190
<font color="#E5E5E5">JavaScript but how do you teach</font>

47
00:02:21,880 --> 00:02:25,570
programming<font color="#E5E5E5"> at all what are</font><font color="#CCCCCC"> the best</font>

48
00:02:24,190 --> 00:02:28,060
<font color="#E5E5E5">practices</font><font color="#CCCCCC"> for that and how can</font>

49
00:02:25,570 --> 00:02:31,239
<font color="#CCCCCC">JavaScript</font><font color="#E5E5E5"> fit very well with</font><font color="#CCCCCC"> those</font><font color="#E5E5E5"> best</font>

50
00:02:28,060 --> 00:02:33,250
<font color="#CCCCCC">practices how does JavaScript</font><font color="#E5E5E5"> fit very</font>

51
00:02:31,240 --> 00:02:35,530
well with open education and we're gonna

52
00:02:33,250 --> 00:02:37,450
look at open education as a slightly

53
00:02:35,530 --> 00:02:38,740
different<font color="#E5E5E5"> thing from open source and see</font>

54
00:02:37,450 --> 00:02:40,600
that javascript is<font color="#CCCCCC"> really the best</font>

55
00:02:38,740 --> 00:02:43,210
<font color="#CCCCCC">option for fully open computing</font>

56
00:02:40,600 --> 00:02:44,950
education<font color="#CCCCCC"> and finally we're going to</font>

57
00:02:43,210 --> 00:02:47,580
<font color="#E5E5E5">look at what is computing literacy how</font>

58
00:02:44,950 --> 00:02:49,660
can we<font color="#E5E5E5"> teach it and how does the</font>

59
00:02:47,580 --> 00:02:51,730
<font color="#E5E5E5">single-pane nature of the JavaScript</font>

60
00:02:49,660 --> 00:02:53,440
browser where you can<font color="#E5E5E5"> inspect have the</font>

61
00:02:51,730 --> 00:02:56,260
UI and all of<font color="#E5E5E5"> this sort of back-end</font>

62
00:02:53,440 --> 00:02:58,240
front-end together at the same time make

63
00:02:56,260 --> 00:03:01,510
it<font color="#CCCCCC"> the best language for computing</font>

64
00:02:58,240 --> 00:03:03,700
literacy so<font color="#CCCCCC"> each one there's a little</font>

65
00:03:01,510 --> 00:03:05,769
link of exercises within<font color="#E5E5E5"> each slide I'll</font>

66
00:03:03,700 --> 00:03:07,510
talk over them I'll give you guys<font color="#E5E5E5"> a</font>

67
00:03:05,770 --> 00:03:09,550
minute<font color="#E5E5E5"> or two to look at them and then</font>

68
00:03:07,510 --> 00:03:13,299
questions so we'll<font color="#E5E5E5"> be</font><font color="#CCCCCC"> pausing</font><font color="#E5E5E5"> three</font>

69
00:03:09,550 --> 00:03:15,040
times for<font color="#CCCCCC"> questions and answers</font><font color="#E5E5E5"> first</font>

70
00:03:13,300 --> 00:03:16,870
we're<font color="#E5E5E5"> gonna think instructional design</font>

71
00:03:15,040 --> 00:03:20,200
how do you teach programming

72
00:03:16,870 --> 00:03:22,150
I think the first sort of not

73
00:03:20,200 --> 00:03:23,738
<font color="#CCCCCC">necessarily intuitive</font><font color="#E5E5E5"> thing is that you</font>

74
00:03:22,150 --> 00:03:26,830
need<font color="#CCCCCC"> to explicitly</font><font color="#E5E5E5"> teach the implicit</font>

75
00:03:23,739 --> 00:03:28,420
<font color="#E5E5E5">the general knowledge you here is to</font><font color="#CCCCCC"> get</font>

76
00:03:26,830 --> 00:03:29,590
people<font color="#E5E5E5"> to</font><font color="#CCCCCC"> think like a programmer tell</font>

77
00:03:28,420 --> 00:03:31,359
<font color="#E5E5E5">people what you're thinking get the</font>

78
00:03:29,590 --> 00:03:34,060
students to<font color="#CCCCCC"> think along the same</font>

79
00:03:31,360 --> 00:03:36,310
<font color="#E5E5E5">processes as you that is of course the</font>

80
00:03:34,060 --> 00:03:38,620
end goal but<font color="#CCCCCC"> between the beginning</font><font color="#E5E5E5"> and</font>

81
00:03:36,310 --> 00:03:40,090
<font color="#CCCCCC">that phase</font><font color="#E5E5E5"> there's a lot of implicit</font>

82
00:03:38,620 --> 00:03:42,430
knowledge<font color="#E5E5E5"> that you as a programmer</font>

83
00:03:40,090 --> 00:03:43,720
already have when there's an<font color="#E5E5E5"> error why</font>

84
00:03:42,430 --> 00:03:45,280
do you look at the line that<font color="#CCCCCC"> you looked</font>

85
00:03:43,720 --> 00:03:47,200
at<font color="#E5E5E5"> why did you move your mouse to</font><font color="#CCCCCC"> the</font>

86
00:03:45,280 --> 00:03:48,910
file you<font color="#CCCCCC"> move the - why did you scroll</font>

87
00:03:47,200 --> 00:03:50,170
where you did<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these little</font><font color="#CCCCCC"> tiny</font>

88
00:03:48,910 --> 00:03:52,630
<font color="#CCCCCC">things that</font><font color="#E5E5E5"> you don't even</font><font color="#CCCCCC"> think about</font>

89
00:03:50,170 --> 00:03:54,190
or<font color="#E5E5E5"> actually what a student needs to</font>

90
00:03:52,630 --> 00:03:55,900
<font color="#E5E5E5">learn before they can get</font><font color="#CCCCCC"> to the</font>

91
00:03:54,190 --> 00:03:58,000
interesting<font color="#CCCCCC"> the strategy stuff that you</font>

92
00:03:55,900 --> 00:04:00,580
would like<font color="#E5E5E5"> to teach so find ways to</font>

93
00:03:58,000 --> 00:04:03,520
teach people<font color="#E5E5E5"> what you're doing not</font><font color="#CCCCCC"> what</font>

94
00:04:00,580 --> 00:04:05,560
you're thinking<font color="#E5E5E5"> the second is to</font>

95
00:04:03,520 --> 00:04:08,079
<font color="#CCCCCC">emphasize</font><font color="#E5E5E5"> the process over</font><font color="#CCCCCC"> the product</font>

96
00:04:05,560 --> 00:04:08,859
so<font color="#E5E5E5"> this is along the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> lines but</font><font color="#CCCCCC"> now</font>

97
00:04:08,079 --> 00:04:10,600
we're going<font color="#E5E5E5"> to think how do you</font>

98
00:04:08,859 --> 00:04:11,730
explicitly structure a series<font color="#CCCCCC"> of</font>

99
00:04:10,600 --> 00:04:13,500
<font color="#E5E5E5">exercises to</font>

100
00:04:11,730 --> 00:04:15,750
emphasize<font color="#E5E5E5"> the process over the product</font>

101
00:04:13,500 --> 00:04:17,779
<font color="#E5E5E5">it's one thing to</font><font color="#CCCCCC"> just say all right</font>

102
00:04:15,750 --> 00:04:19,798
build me a recursive<font color="#CCCCCC"> merge sort</font><font color="#E5E5E5"> and</font>

103
00:04:17,779 --> 00:04:22,169
while you're at<font color="#CCCCCC"> it think about what</font>

104
00:04:19,798 --> 00:04:24,900
you're<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> the focus of that exercise</font>

105
00:04:22,169 --> 00:04:27,330
<font color="#E5E5E5">is still the finished working code the</font>

106
00:04:24,900 --> 00:04:29,489
tests pass<font color="#CCCCCC"> or they don't and it's really</font>

107
00:04:27,330 --> 00:04:31,409
<font color="#E5E5E5">up</font><font color="#CCCCCC"> to the students personal</font><font color="#E5E5E5"> discipline</font>

108
00:04:29,490 --> 00:04:33,660
and experience<font color="#E5E5E5"> whether or not they</font><font color="#CCCCCC"> can</font>

109
00:04:31,410 --> 00:04:36,180
document<font color="#E5E5E5"> and keep track</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> what they</font>

110
00:04:33,660 --> 00:04:38,010
learned along the<font color="#E5E5E5"> way so the type of</font>

111
00:04:36,180 --> 00:04:40,440
<font color="#E5E5E5">solution</font><font color="#CCCCCC"> for this would be to assign</font>

112
00:04:38,010 --> 00:04:42,419
steps instead<font color="#CCCCCC"> of a final product say I</font>

113
00:04:40,440 --> 00:04:44,370
don't<font color="#E5E5E5"> care</font><font color="#CCCCCC"> if your code works</font><font color="#E5E5E5"> but I want</font>

114
00:04:42,419 --> 00:04:46,590
your<font color="#E5E5E5"> best attempt at these eight steps</font>

115
00:04:44,370 --> 00:04:50,789
on the<font color="#E5E5E5"> law along the way to a recursive</font>

116
00:04:46,590 --> 00:04:52,349
solution<font color="#CCCCCC"> context</font><font color="#E5E5E5"> is content this one is</font>

117
00:04:50,789 --> 00:04:54,599
something<font color="#CCCCCC"> that's often overlooked</font>

118
00:04:52,350 --> 00:04:56,400
<font color="#E5E5E5">usually with things like free code camp</font>

119
00:04:54,600 --> 00:04:58,740
or Khan Academy<font color="#E5E5E5"> the thought is let's</font>

120
00:04:56,400 --> 00:05:01,620
simplify the programming environment<font color="#CCCCCC"> so</font>

121
00:04:58,740 --> 00:05:03,630
students can focus on code<font color="#E5E5E5"> but that is</font>

122
00:05:01,620 --> 00:05:06,000
<font color="#CCCCCC">absolutely unhelpful I believe in the</font>

123
00:05:03,630 --> 00:05:08,969
long run because coding does not happen

124
00:05:06,000 --> 00:05:10,620
in a protective<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> coding</font>

125
00:05:08,970 --> 00:05:12,120
happens in a real<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> it happens</font>

126
00:05:10,620 --> 00:05:13,830
with real browsers it happens with real

127
00:05:12,120 --> 00:05:17,280
errors it happens with other<font color="#E5E5E5"> people's</font>

128
00:05:13,830 --> 00:05:19,530
code so context<font color="#E5E5E5"> is content when wherever</font>

129
00:05:17,280 --> 00:05:21,090
you place<font color="#E5E5E5"> an exercise</font><font color="#CCCCCC"> the student is</font>

130
00:05:19,530 --> 00:05:22,888
explicitly learning what you told<font color="#E5E5E5"> them</font>

131
00:05:21,090 --> 00:05:24,780
to<font color="#E5E5E5"> and implicitly learning how to</font>

132
00:05:22,889 --> 00:05:26,639
navigate<font color="#E5E5E5"> that environment if they're</font>

133
00:05:24,780 --> 00:05:28,679
spending<font color="#E5E5E5"> six months</font><font color="#CCCCCC"> on free code camp</font>

134
00:05:26,639 --> 00:05:31,470
that's six<font color="#E5E5E5"> months that they not only</font>

135
00:05:28,680 --> 00:05:33,479
didn't<font color="#CCCCCC"> learn how to use the browser but</font>

136
00:05:31,470 --> 00:05:36,240
<font color="#E5E5E5">didn't learn how to integrate JavaScript</font>

137
00:05:33,479 --> 00:05:37,860
into their use<font color="#CCCCCC"> of the browser so when</font>

138
00:05:36,240 --> 00:05:39,599
you're designing exercises or projects

139
00:05:37,860 --> 00:05:41,820
think<font color="#E5E5E5"> very carefully about what's the</font>

140
00:05:39,599 --> 00:05:43,800
level<font color="#E5E5E5"> of my student where would they be</font>

141
00:05:41,820 --> 00:05:47,310
<font color="#E5E5E5">using the skills I'm trying to teach</font>

142
00:05:43,800 --> 00:05:50,270
<font color="#E5E5E5">them and how do</font><font color="#CCCCCC"> I embed the the skills I</font>

143
00:05:47,310 --> 00:05:53,490
want in a simple<font color="#CCCCCC"> example in context</font>

144
00:05:50,270 --> 00:05:56,280
which brings to the last point<font color="#E5E5E5"> full</font>

145
00:05:53,490 --> 00:05:57,960
complexity<font color="#E5E5E5"> max simplicity when you're</font>

146
00:05:56,280 --> 00:05:59,039
<font color="#CCCCCC">designing an exercise you're helping</font>

147
00:05:57,960 --> 00:06:01,799
<font color="#CCCCCC">someone you're coming up with a little</font>

148
00:05:59,039 --> 00:06:03,870
<font color="#E5E5E5">snippet think what is the entire</font>

149
00:06:01,800 --> 00:06:06,150
complete task that the student will<font color="#CCCCCC"> have</font>

150
00:06:03,870 --> 00:06:09,120
to deal<font color="#CCCCCC"> with and how do I reduce that to</font>

151
00:06:06,150 --> 00:06:10,650
its absolute<font color="#E5E5E5"> most simplest form</font><font color="#CCCCCC"> so I</font>

152
00:06:09,120 --> 00:06:14,760
have an<font color="#CCCCCC"> example for</font><font color="#E5E5E5"> this we'll go</font><font color="#CCCCCC"> over</font>

153
00:06:10,650 --> 00:06:18,239
together quickly<font color="#E5E5E5"> and it is an example</font>

154
00:06:14,760 --> 00:06:19,919
<font color="#CCCCCC">that</font><font color="#E5E5E5"> helps teach this and binding so</font>

155
00:06:18,240 --> 00:06:22,620
what I have<font color="#E5E5E5"> here is an</font><font color="#CCCCCC"> example of an</font>

156
00:06:19,919 --> 00:06:24,380
embedded<font color="#CCCCCC"> resource it's what I call it I</font>

157
00:06:22,620 --> 00:06:26,810
don't<font color="#CCCCCC"> know what</font><font color="#E5E5E5"> they're</font><font color="#CCCCCC"> actually called</font>

158
00:06:24,380 --> 00:06:29,750
the idea here<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that the context is the</font>

159
00:06:26,810 --> 00:06:32,270
content not only<font color="#CCCCCC"> did I write</font><font color="#E5E5E5"> a series of</font>

160
00:06:29,750 --> 00:06:34,940
explanations on<font color="#CCCCCC"> how this works and how</font>

161
00:06:32,270 --> 00:06:37,190
binding works and how<font color="#E5E5E5"> events work</font><font color="#CCCCCC"> my</font>

162
00:06:34,940 --> 00:06:38,719
<font color="#E5E5E5">example is written in code and it runs</font>

163
00:06:37,190 --> 00:06:40,580
and the student is<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be</font>

164
00:06:38,720 --> 00:06:45,020
interacting with<font color="#E5E5E5"> that the same way</font><font color="#CCCCCC"> oh</font>

165
00:06:40,580 --> 00:06:46,820
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> weird in presentation mode</font><font color="#E5E5E5"> yeah</font>

166
00:06:45,020 --> 00:06:48,169
<font color="#E5E5E5">the students going to be interacting</font>

167
00:06:46,820 --> 00:06:52,210
with<font color="#E5E5E5"> this in the same way</font><font color="#CCCCCC"> that they</font>

168
00:06:48,170 --> 00:06:52,210
<font color="#E5E5E5">would generally interact with real code</font>

169
00:06:53,080 --> 00:06:58,280
so<font color="#E5E5E5"> let's say that</font><font color="#CCCCCC"> that you're interested</font>

170
00:06:55,730 --> 00:07:00,350
in<font color="#E5E5E5"> what happens when we</font><font color="#CCCCCC"> use a free</font>

171
00:06:58,280 --> 00:07:02,750
variable<font color="#CCCCCC"> vary of free variable</font><font color="#E5E5E5"> by</font>

172
00:07:00,350 --> 00:07:04,820
context so<font color="#E5E5E5"> we have a callback function</font>

173
00:07:02,750 --> 00:07:07,720
for an event<font color="#E5E5E5"> inside that callback</font>

174
00:07:04,820 --> 00:07:11,540
function is a free variable<font color="#E5E5E5"> using this I</font>

175
00:07:07,720 --> 00:07:14,530
want<font color="#E5E5E5"> to set that by doing vine so we can</font>

176
00:07:11,540 --> 00:07:17,830
use this little<font color="#CCCCCC"> helper function load</font>

177
00:07:14,530 --> 00:07:17,830
that's<font color="#CCCCCC"> too</font>

178
00:07:27,009 --> 00:07:29,009
Oh

179
00:07:32,439 --> 00:07:43,749
a<font color="#E5E5E5"> binding so the student</font><font color="#CCCCCC"> has now loaded</font>

180
00:07:41,919 --> 00:07:46,448
<font color="#E5E5E5">just the lesson they wanted but that</font>

181
00:07:43,749 --> 00:07:48,999
lesson is actually written in code<font color="#E5E5E5"> but</font>

182
00:07:46,449 --> 00:07:51,309
it also has a<font color="#E5E5E5"> helpful log that explains</font>

183
00:07:48,999 --> 00:07:53,619
in English<font color="#E5E5E5"> what happened as the code</font>

184
00:07:51,309 --> 00:07:57,039
executed so the student<font color="#CCCCCC"> can study the</font>

185
00:07:53,619 --> 00:07:59,589
code itself they can additionally study

186
00:07:57,039 --> 00:08:00,998
<font color="#E5E5E5">how did it log itself so can see not</font>

187
00:07:59,589 --> 00:08:03,339
<font color="#E5E5E5">only what happened what was the source</font>

188
00:08:00,999 --> 00:08:05,619
code<font color="#E5E5E5"> but how did the code write its own</font>

189
00:08:03,339 --> 00:08:09,849
<font color="#E5E5E5">description what was the outcome</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

190
00:08:05,619 --> 00:08:13,779
screen and what is happening<font color="#CCCCCC"> inside of</font>

191
00:08:09,849 --> 00:08:17,789
all<font color="#CCCCCC"> of this every</font><font color="#E5E5E5"> time they click the</font>

192
00:08:13,779 --> 00:08:19,899
button<font color="#E5E5E5"> its clicking bound a Dom element</font>

193
00:08:17,789 --> 00:08:30,878
<font color="#CCCCCC">but</font><font color="#E5E5E5"> we can see that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> button</font><font color="#CCCCCC"> they're</font>

194
00:08:19,899 --> 00:08:33,370
actually clicking is host Dom element so

195
00:08:30,879 --> 00:08:36,519
when I click<font color="#E5E5E5"> it</font><font color="#CCCCCC"> it prints</font><font color="#E5E5E5"> the</font>

196
00:08:33,370 --> 00:08:38,919
information from my bound function so

197
00:08:36,519 --> 00:08:40,509
the bound callback<font color="#E5E5E5"> on the host element</font>

198
00:08:38,919 --> 00:08:42,399
<font color="#CCCCCC">if you want to see how exactly that was</font>

199
00:08:40,509 --> 00:08:44,620
<font color="#E5E5E5">implemented you're not reading an</font>

200
00:08:42,399 --> 00:08:46,209
unmarked down looking<font color="#E5E5E5"> at code back and</font>

201
00:08:44,620 --> 00:08:48,100
forth<font color="#E5E5E5"> trying to string it together</font><font color="#CCCCCC"> you</font>

202
00:08:46,209 --> 00:08:49,630
are in context seeing the simplest

203
00:08:48,100 --> 00:08:53,439
possible<font color="#CCCCCC"> example</font><font color="#E5E5E5"> that will teach this</font>

204
00:08:49,630 --> 00:08:55,180
<font color="#CCCCCC">concept the first step here is</font><font color="#E5E5E5"> even to</font>

205
00:08:53,439 --> 00:08:57,459
make<font color="#E5E5E5"> it simpler and demonstrate the</font>

206
00:08:55,180 --> 00:09:00,489
exact same mechanism taking place with a

207
00:08:57,459 --> 00:09:02,829
simple plain<font color="#E5E5E5"> JavaScript object so that</font>

208
00:09:00,490 --> 00:09:04,990
is the first<font color="#E5E5E5"> bit how can we make good</font>

209
00:09:02,829 --> 00:09:07,769
exercises<font color="#E5E5E5"> for teaching programming and</font>

210
00:09:04,990 --> 00:09:10,389
how<font color="#CCCCCC"> is JavaScript very useful for that</font>

211
00:09:07,769 --> 00:09:12,939
<font color="#E5E5E5">we had to explicitly teach the implicit</font>

212
00:09:10,389 --> 00:09:14,649
<font color="#E5E5E5">it's not only</font><font color="#CCCCCC"> about teaching</font><font color="#E5E5E5"> the thought</font>

213
00:09:12,939 --> 00:09:16,599
process<font color="#E5E5E5"> it's about teaching the implicit</font>

214
00:09:14,649 --> 00:09:18,990
skills that<font color="#CCCCCC"> allow you to focus</font><font color="#E5E5E5"> on the</font>

215
00:09:16,600 --> 00:09:21,250
thought process and<font color="#E5E5E5"> not every single bug</font>

216
00:09:18,990 --> 00:09:24,009
<font color="#E5E5E5">focus on the process over the product</font>

217
00:09:21,250 --> 00:09:26,139
you have<font color="#E5E5E5"> exercises you</font><font color="#CCCCCC"> have words you</font>

218
00:09:24,009 --> 00:09:28,180
have projects where the<font color="#E5E5E5"> explicit goals</font>

219
00:09:26,139 --> 00:09:30,519
are to complete<font color="#E5E5E5"> a series of steps rather</font>

220
00:09:28,180 --> 00:09:33,099
than<font color="#E5E5E5"> produce working code you have</font>

221
00:09:30,519 --> 00:09:35,800
<font color="#CCCCCC">contexts as content</font><font color="#E5E5E5"> carefully</font><font color="#CCCCCC"> pairing</font>

222
00:09:33,100 --> 00:09:38,079
exercises and projects with a specific

223
00:09:35,800 --> 00:09:39,729
<font color="#CCCCCC">learning environment so that where they</font>

224
00:09:38,079 --> 00:09:42,519
<font color="#E5E5E5">are studying the code becomes part of</font>

225
00:09:39,730 --> 00:09:44,319
the learning objective<font color="#E5E5E5"> and finally put</font>

226
00:09:42,519 --> 00:09:45,490
all<font color="#E5E5E5"> that together and you</font><font color="#CCCCCC"> have full</font>

227
00:09:44,319 --> 00:09:48,939
complexity<font color="#CCCCCC"> Max and</font>

228
00:09:45,490 --> 00:09:53,740
<font color="#CCCCCC">city teach the full complex task</font><font color="#E5E5E5"> in the</font>

229
00:09:48,940 --> 00:09:58,990
simplest possible<font color="#CCCCCC"> way</font><font color="#E5E5E5"> questions now I</font>

230
00:09:53,740 --> 00:10:00,580
can<font color="#E5E5E5"> just go</font><font color="#CCCCCC"> on we can</font><font color="#E5E5E5"> look at a</font><font color="#CCCCCC"> couple</font>

231
00:09:58,990 --> 00:10:04,260
more<font color="#E5E5E5"> examples of each step if</font><font color="#CCCCCC"> you like</font>

232
00:10:00,580 --> 00:10:06,459
yes so explicitly<font color="#E5E5E5"> teaching the implicit</font>

233
00:10:04,260 --> 00:10:09,640
<font color="#E5E5E5">for that</font><font color="#CCCCCC"> I have an example of what I</font>

234
00:10:06,459 --> 00:10:12,550
call expanding one of the most important

235
00:10:09,640 --> 00:10:14,649
<font color="#E5E5E5">skills that we experienced programmers</font>

236
00:10:12,550 --> 00:10:16,449
have is the<font color="#E5E5E5"> ability to step through code</font>

237
00:10:14,649 --> 00:10:17,860
in<font color="#E5E5E5"> our head know which line</font><font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to</font>

238
00:10:16,450 --> 00:10:19,870
<font color="#E5E5E5">be executed where did each value</font>

239
00:10:17,860 --> 00:10:22,000
variable get its value<font color="#E5E5E5"> how is that</font>

240
00:10:19,870 --> 00:10:24,100
<font color="#E5E5E5">changing</font><font color="#CCCCCC"> over time that</font><font color="#E5E5E5"> is extremely</font>

241
00:10:22,000 --> 00:10:25,899
<font color="#E5E5E5">difficult to teach especially because</font>

242
00:10:24,100 --> 00:10:27,610
it's not usually explicitly taught

243
00:10:25,899 --> 00:10:29,080
<font color="#E5E5E5">people just say read the code</font><font color="#CCCCCC"> and figure</font>

244
00:10:27,610 --> 00:10:31,720
<font color="#E5E5E5">out what's</font><font color="#CCCCCC"> happening</font><font color="#E5E5E5"> and then people</font>

245
00:10:29,080 --> 00:10:33,940
<font color="#E5E5E5">don't and what</font><font color="#CCCCCC"> javascript has</font><font color="#E5E5E5"> it so</font>

246
00:10:31,720 --> 00:10:36,670
<font color="#CCCCCC">special is the</font><font color="#E5E5E5"> flexibility of how many</font>

247
00:10:33,940 --> 00:10:39,730
ways you<font color="#CCCCCC"> can write the same</font><font color="#E5E5E5"> code so this</font>

248
00:10:36,670 --> 00:10:42,490
expanding is a form of refactoring<font color="#E5E5E5"> that</font>

249
00:10:39,730 --> 00:10:44,830
<font color="#CCCCCC">follows very strict rules so students</font>

250
00:10:42,490 --> 00:10:46,690
don't<font color="#E5E5E5"> have to</font><font color="#CCCCCC"> focus on</font><font color="#E5E5E5"> how they're going</font>

251
00:10:44,830 --> 00:10:49,570
<font color="#CCCCCC">to</font><font color="#E5E5E5"> do it they know exactly what's the</font>

252
00:10:46,690 --> 00:10:51,670
next step<font color="#E5E5E5"> in the process the first thing</font>

253
00:10:49,570 --> 00:10:54,450
<font color="#E5E5E5">you expand any control flow statements</font>

254
00:10:51,670 --> 00:10:57,219
<font color="#CCCCCC">so you're going</font><font color="#E5E5E5"> to remove the</font><font color="#CCCCCC"> conditions</font>

255
00:10:54,450 --> 00:10:59,740
from directly<font color="#E5E5E5"> within</font><font color="#CCCCCC"> the ifs</font><font color="#E5E5E5"> so that you</font>

256
00:10:57,220 --> 00:11:01,209
can later assert them there's an example

257
00:10:59,740 --> 00:11:03,130
<font color="#E5E5E5">of a while</font><font color="#CCCCCC"> loop below</font><font color="#E5E5E5"> it's a very</font>

258
00:11:01,209 --> 00:11:05,819
<font color="#E5E5E5">similar process then you're going to</font>

259
00:11:03,130 --> 00:11:09,640
expand the expressions<font color="#E5E5E5"> using block scope</font>

260
00:11:05,820 --> 00:11:12,430
you split a<font color="#E5E5E5"> one-line expression into a</font>

261
00:11:09,640 --> 00:11:16,540
series of proper order of operation

262
00:11:12,430 --> 00:11:18,069
<font color="#E5E5E5">single operation on one line so your</font>

263
00:11:16,540 --> 00:11:20,370
code is becoming a lot longer and

264
00:11:18,070 --> 00:11:22,420
<font color="#E5E5E5">possibly more difficult to reason with</font>

265
00:11:20,370 --> 00:11:23,440
until you<font color="#E5E5E5"> get used to it then you see</font>

266
00:11:22,420 --> 00:11:25,630
that<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> actually an incredibly</font>

267
00:11:23,440 --> 00:11:28,420
powerful<font color="#E5E5E5"> tool because</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can start to</font>

268
00:11:25,630 --> 00:11:29,950
build exercises and even you<font color="#E5E5E5"> are not</font>

269
00:11:28,420 --> 00:11:31,750
<font color="#CCCCCC">building exercises</font><font color="#E5E5E5"> the student</font>

270
00:11:29,950 --> 00:11:34,180
themselves<font color="#E5E5E5"> can build their own feedback</font>

271
00:11:31,750 --> 00:11:37,720
mechanisms just<font color="#CCCCCC"> by simply putting on the</font>

272
00:11:34,180 --> 00:11:39,219
same line a little log push<font color="#E5E5E5"> so now what</font>

273
00:11:37,720 --> 00:11:41,140
the student has<font color="#E5E5E5"> is a step by step</font>

274
00:11:39,220 --> 00:11:44,649
<font color="#CCCCCC">process</font><font color="#E5E5E5"> of what happened as this code</font>

275
00:11:41,140 --> 00:11:45,220
executed because<font color="#CCCCCC"> it's all JavaScript in</font>

276
00:11:44,649 --> 00:11:47,410
the browser

277
00:11:45,220 --> 00:11:53,079
they can just<font color="#E5E5E5"> simply copy paste it from</font>

278
00:11:47,410 --> 00:11:55,180
the<font color="#E5E5E5"> markdown into the console they fill</font>

279
00:11:53,079 --> 00:12:02,489
in some<font color="#CCCCCC"> values</font>

280
00:11:55,180 --> 00:12:06,339
and they expect it to be false<font color="#CCCCCC"> oh yeah</font>

281
00:12:02,490 --> 00:12:11,530
where was<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this is an error I forgot</font>

282
00:12:06,340 --> 00:12:18,520
to fix in the push version that one

283
00:12:11,530 --> 00:12:21,040
<font color="#E5E5E5">let's go to the while loop</font><font color="#CCCCCC"> it works so</font>

284
00:12:18,520 --> 00:12:24,430
for<font color="#E5E5E5"> the looping it's a very similar</font>

285
00:12:21,040 --> 00:12:27,189
<font color="#E5E5E5">process</font><font color="#CCCCCC"> you start with a loop</font><font color="#E5E5E5"> a for loop</font>

286
00:12:24,430 --> 00:12:30,699
but<font color="#E5E5E5"> for loops can always be expanded</font>

287
00:12:27,190 --> 00:12:32,980
into<font color="#CCCCCC"> a while loop you put it</font><font color="#E5E5E5"> inside of a</font>

288
00:12:30,700 --> 00:12:35,380
block<font color="#E5E5E5"> to preserve the</font><font color="#CCCCCC"> integrity of the</font>

289
00:12:32,980 --> 00:12:37,860
<font color="#CCCCCC">let or the the block scope variable in</font>

290
00:12:35,380 --> 00:12:40,900
<font color="#E5E5E5">your for loop block the whole while</font>

291
00:12:37,860 --> 00:12:43,030
check the condition I'm sorry<font color="#E5E5E5"> set the</font>

292
00:12:40,900 --> 00:12:45,250
initial value<font color="#E5E5E5"> check the condition at</font>

293
00:12:43,030 --> 00:12:50,550
every loop update according to the same

294
00:12:45,250 --> 00:12:53,880
rule<font color="#E5E5E5"> expand all the expressions</font><font color="#CCCCCC"> and</font>

295
00:12:50,550 --> 00:12:53,880
finally log it

296
00:13:01,190 --> 00:13:05,110
we'll<font color="#E5E5E5"> just set some expected values</font>

297
00:13:11,910 --> 00:13:16,800
so we failed<font color="#CCCCCC"> we did</font><font color="#E5E5E5"> not have the correct</font>

298
00:13:14,220 --> 00:13:19,050
<font color="#E5E5E5">prediction so here you are</font><font color="#CCCCCC"> emphasizing</font>

299
00:13:16,800 --> 00:13:20,939
<font color="#E5E5E5">what is the</font><font color="#CCCCCC"> behavior of the code versus</font>

300
00:13:19,050 --> 00:13:23,550
the implementation what did you expect

301
00:13:20,940 --> 00:13:26,940
the code to return and how<font color="#CCCCCC"> exactly did</font>

302
00:13:23,550 --> 00:13:29,310
it<font color="#E5E5E5"> get there so now what a student has</font>

303
00:13:26,940 --> 00:13:32,760
<font color="#CCCCCC">oh yeah</font><font color="#E5E5E5"> Firefox isn't always the</font><font color="#CCCCCC"> best</font>

304
00:13:29,310 --> 00:13:35,400
for<font color="#CCCCCC"> this they can</font><font color="#E5E5E5"> step through the</font><font color="#CCCCCC"> code</font>

305
00:13:32,760 --> 00:13:37,380
what value did<font color="#E5E5E5"> every line of code have</font>

306
00:13:35,400 --> 00:13:39,060
at every step<font color="#E5E5E5"> and this allows you to</font>

307
00:13:37,380 --> 00:13:43,290
<font color="#CCCCCC">make very good</font><font color="#E5E5E5"> sense of</font><font color="#CCCCCC"> what is</font>

308
00:13:39,060 --> 00:13:46,020
<font color="#E5E5E5">otherwise rather opaque code so that is</font>

309
00:13:43,290 --> 00:13:49,349
making<font color="#E5E5E5"> the explicit making the implicit</font>

310
00:13:46,020 --> 00:13:52,380
explicit<font color="#E5E5E5"> an example of</font><font color="#CCCCCC"> teaching process</font>

311
00:13:49,350 --> 00:13:54,540
over a<font color="#E5E5E5"> product I have a recursion here</font>

312
00:13:52,380 --> 00:13:56,760
<font color="#E5E5E5">so rather than saying recursion works</font>

313
00:13:54,540 --> 00:13:59,040
<font color="#E5E5E5">like this draw some diagrams expect them</font>

314
00:13:56,760 --> 00:14:01,590
to write working code say no<font color="#E5E5E5"> recursion</font>

315
00:13:59,040 --> 00:14:03,420
is built up of<font color="#E5E5E5"> these steps these pieces</font>

316
00:14:01,590 --> 00:14:05,460
every recursive<font color="#E5E5E5"> solution has the same</font>

317
00:14:03,420 --> 00:14:07,979
<font color="#CCCCCC">pieces and when you're planning a</font>

318
00:14:05,460 --> 00:14:09,450
recursive solution<font color="#E5E5E5"> build the pieces in</font>

319
00:14:07,980 --> 00:14:11,550
<font color="#E5E5E5">this order</font><font color="#CCCCCC"> and you can later assemble</font>

320
00:14:09,450 --> 00:14:13,530
them back together<font color="#CCCCCC"> to a solid solution</font>

321
00:14:11,550 --> 00:14:14,550
<font color="#E5E5E5">this gives students something that they</font>

322
00:14:13,530 --> 00:14:17,730
can work<font color="#E5E5E5"> on small manageable</font>

323
00:14:14,550 --> 00:14:20,370
<font color="#E5E5E5">understandable pieces so I've given an</font>

324
00:14:17,730 --> 00:14:24,720
<font color="#CCCCCC">open</font><font color="#E5E5E5"> end test an open end strategy a</font>

325
00:14:20,370 --> 00:14:27,330
challenge but then the steps first<font color="#E5E5E5"> test</font>

326
00:14:24,720 --> 00:14:31,020
<font color="#CCCCCC">cases without even</font><font color="#E5E5E5"> running the code how</font>

327
00:14:27,330 --> 00:14:32,460
do you expect<font color="#CCCCCC"> that it will behave</font><font color="#E5E5E5"> you</font>

328
00:14:31,020 --> 00:14:34,829
could also provide<font color="#E5E5E5"> those as part of the</font>

329
00:14:32,460 --> 00:14:36,630
exercise<font color="#E5E5E5"> base case write a function that</font>

330
00:14:34,830 --> 00:14:40,560
determines if<font color="#CCCCCC"> the argument</font><font color="#E5E5E5"> is a base</font>

331
00:14:36,630 --> 00:14:42,180
case focusing<font color="#E5E5E5"> on one piece only what do</font>

332
00:14:40,560 --> 00:14:45,510
I do if it<font color="#E5E5E5"> is a base case what do I do</font>

333
00:14:42,180 --> 00:14:48,180
to the operation or to the argument so I

334
00:14:45,510 --> 00:14:50,460
came<font color="#CCCCCC"> to build back up</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> breakdown if</font>

335
00:14:48,180 --> 00:14:52,589
it's not a base case<font color="#E5E5E5"> how do I move the</font>

336
00:14:50,460 --> 00:14:54,240
argument closer to a base case<font color="#E5E5E5"> write a</font>

337
00:14:52,590 --> 00:14:56,580
function<font color="#CCCCCC"> that</font><font color="#E5E5E5"> does that you'll notice</font>

338
00:14:54,240 --> 00:14:57,960
<font color="#CCCCCC">that each point there</font><font color="#E5E5E5"> are tests along</font>

339
00:14:56,580 --> 00:15:01,800
<font color="#E5E5E5">I'll get to the helper function at the</font>

340
00:14:57,960 --> 00:15:04,080
bottom build up I have to recurse

341
00:15:01,800 --> 00:15:07,099
partial solutions what do<font color="#E5E5E5"> I do to get</font>

342
00:15:04,080 --> 00:15:10,500
them closer to a full<font color="#CCCCCC"> solution finally</font>

343
00:15:07,100 --> 00:15:13,590
<font color="#E5E5E5">simply call them in a scaffold it's a</font>

344
00:15:10,500 --> 00:15:16,230
recursive<font color="#CCCCCC"> solution</font><font color="#E5E5E5"> if it's a base case</font>

345
00:15:13,590 --> 00:15:19,230
<font color="#CCCCCC">turn around if not we're</font><font color="#E5E5E5"> going to break</font>

346
00:15:16,230 --> 00:15:23,670
<font color="#E5E5E5">it</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> we will recurse and we'll build</font>

347
00:15:19,230 --> 00:15:25,740
back up<font color="#E5E5E5"> and return students can now then</font>

348
00:15:23,670 --> 00:15:27,360
factor<font color="#CCCCCC"> out their functions</font>

349
00:15:25,740 --> 00:15:29,720
just copy<font color="#CCCCCC"> pacing the body of</font><font color="#E5E5E5"> their</font>

350
00:15:27,360 --> 00:15:32,990
functions<font color="#E5E5E5"> where the function call was</font>

351
00:15:29,720 --> 00:15:35,190
they can collapse it<font color="#E5E5E5"> if they</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> and</font>

352
00:15:32,990 --> 00:15:37,350
convert it<font color="#E5E5E5"> into a formal recursive</font>

353
00:15:35,190 --> 00:15:39,690
definition and the step<font color="#E5E5E5"> from</font><font color="#CCCCCC"> here to</font>

354
00:15:37,350 --> 00:15:41,190
here is actually relatively<font color="#E5E5E5"> simple so</font>

355
00:15:39,690 --> 00:15:42,570
what you have<font color="#CCCCCC"> also is not</font><font color="#E5E5E5"> only a good</font>

356
00:15:41,190 --> 00:15:45,300
way to teach students the process of

357
00:15:42,570 --> 00:15:47,790
solving<font color="#E5E5E5"> a problem but you're making a</font>

358
00:15:45,300 --> 00:15:49,349
manageable step from the practice to the

359
00:15:47,790 --> 00:15:50,699
<font color="#E5E5E5">theory and the mathematical theory is</font>

360
00:15:49,350 --> 00:15:53,820
often<font color="#CCCCCC"> very difficult to get students</font>

361
00:15:50,700 --> 00:15:55,170
<font color="#CCCCCC">interested in</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> to even understand</font><font color="#E5E5E5"> if</font>

362
00:15:53,820 --> 00:15:58,620
you want a nice<font color="#E5E5E5"> little challenge step</font>

363
00:15:55,170 --> 00:16:01,709
you can see how to compose<font color="#E5E5E5"> those</font>

364
00:15:58,620 --> 00:16:02,210
solutions so I'm actually taking longer

365
00:16:01,710 --> 00:16:04,650
than<font color="#E5E5E5"> I thought</font>

366
00:16:02,210 --> 00:16:07,740
context is<font color="#E5E5E5"> context look at these on</font>

367
00:16:04,650 --> 00:16:09,990
yourself<font color="#CCCCCC"> I</font><font color="#E5E5E5"> took a simple exercise from</font>

368
00:16:07,740 --> 00:16:10,650
free code camp<font color="#E5E5E5"> and just set it</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> in a</font>

369
00:16:09,990 --> 00:16:14,700
whole<font color="#E5E5E5"> bunch of</font><font color="#CCCCCC"> different learning</font>

370
00:16:10,650 --> 00:16:18,000
environments<font color="#E5E5E5"> open source does</font><font color="#CCCCCC"> not equal</font>

371
00:16:14,700 --> 00:16:20,340
open<font color="#E5E5E5"> education open source is open</font>

372
00:16:18,000 --> 00:16:23,820
access<font color="#E5E5E5"> to source</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> open education is</font>

373
00:16:20,340 --> 00:16:25,980
open access<font color="#E5E5E5"> to education open source</font>

374
00:16:23,820 --> 00:16:27,690
educational resources<font color="#E5E5E5"> is anything built</font>

375
00:16:25,980 --> 00:16:30,450
for education<font color="#E5E5E5"> that</font><font color="#CCCCCC"> has an</font><font color="#E5E5E5"> open source</font>

376
00:16:27,690 --> 00:16:32,580
license but that doesn't mean<font color="#E5E5E5"> that it's</font>

377
00:16:30,450 --> 00:16:34,650
easily adaptable<font color="#E5E5E5"> by the people who will</font>

378
00:16:32,580 --> 00:16:39,300
<font color="#CCCCCC">be using it to learn</font><font color="#E5E5E5"> so for a simple</font>

379
00:16:34,650 --> 00:16:41,760
<font color="#CCCCCC">example I made here's a j/s parsons</font><font color="#E5E5E5"> it</font>

380
00:16:39,300 --> 00:16:43,800
builds parsons problems for students<font color="#CCCCCC"> and</font>

381
00:16:41,760 --> 00:16:45,360
it's actually the teacher that<font color="#E5E5E5"> has to</font>

382
00:16:43,800 --> 00:16:47,459
build<font color="#E5E5E5"> it there's full documentation on</font>

383
00:16:45,360 --> 00:16:49,020
how<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> it and it's not</font><font color="#E5E5E5"> immediately</font>

384
00:16:47,460 --> 00:16:50,790
obvious<font color="#E5E5E5"> how a student</font><font color="#CCCCCC"> would be</font><font color="#E5E5E5"> able to</font>

385
00:16:49,020 --> 00:16:52,620
<font color="#E5E5E5">build their own</font><font color="#CCCCCC"> parsons problem</font><font color="#E5E5E5"> so this</font>

386
00:16:50,790 --> 00:16:54,569
is an<font color="#E5E5E5"> open source educational resource</font>

387
00:16:52,620 --> 00:16:57,150
<font color="#E5E5E5">that I would claim is</font><font color="#CCCCCC"> not fully open</font>

388
00:16:54,570 --> 00:16:59,910
<font color="#E5E5E5">education however with a little</font><font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of</font>

389
00:16:57,150 --> 00:17:02,250
reworking<font color="#E5E5E5"> you can end up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the parson</font>

390
00:16:59,910 --> 00:17:04,379
<font color="#CCCCCC">Iser where a student simply types in</font>

391
00:17:02,250 --> 00:17:07,410
<font color="#E5E5E5">whatever they can copy</font><font color="#CCCCCC"> paste the code</font>

392
00:17:04,380 --> 00:17:09,630
from whatever exercises they're looking

393
00:17:07,410 --> 00:17:11,580
<font color="#E5E5E5">on and all of a sudden they build their</font>

394
00:17:09,630 --> 00:17:13,320
own<font color="#CCCCCC"> Parsons project so the difference</font>

395
00:17:11,579 --> 00:17:15,750
now<font color="#CCCCCC"> between open education and open</font>

396
00:17:13,319 --> 00:17:17,939
source is how readily can the students

397
00:17:15,750 --> 00:17:22,200
and teachers who<font color="#E5E5E5"> are actually learning</font>

398
00:17:17,940 --> 00:17:24,510
<font color="#CCCCCC">adapt their content for themselves so</font>

399
00:17:22,200 --> 00:17:26,730
open<font color="#CCCCCC"> source is</font><font color="#E5E5E5"> not open education we had</font>

400
00:17:24,510 --> 00:17:30,180
an<font color="#E5E5E5"> example there the Parsons library</font>

401
00:17:26,730 --> 00:17:31,500
versus the<font color="#E5E5E5"> copy/paste parson</font><font color="#CCCCCC"> Iser</font><font color="#E5E5E5"> so</font>

402
00:17:30,180 --> 00:17:33,300
what<font color="#E5E5E5"> does example something that's open</font>

403
00:17:31,500 --> 00:17:35,880
<font color="#CCCCCC">source but not open education I would</font>

404
00:17:33,300 --> 00:17:39,600
<font color="#E5E5E5">say free code camp yes the source code</font>

405
00:17:35,880 --> 00:17:41,550
is open anyone can in principle rebuild

406
00:17:39,600 --> 00:17:43,260
their<font color="#CCCCCC"> own free code camp and run</font><font color="#E5E5E5"> it but</font>

407
00:17:41,550 --> 00:17:45,510
practically<font color="#E5E5E5"> speaking</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not only</font>

408
00:17:43,260 --> 00:17:47,310
<font color="#E5E5E5">completely out of range</font><font color="#CCCCCC"> for any student</font>

409
00:17:45,510 --> 00:17:48,960
<font color="#CCCCCC">but most teachers</font><font color="#E5E5E5"> probably don't even</font>

410
00:17:47,310 --> 00:17:51,600
<font color="#CCCCCC">have the</font><font color="#E5E5E5"> technical knowledge or the time</font>

411
00:17:48,960 --> 00:17:53,580
to fit and adjust free code camp<font color="#E5E5E5"> to</font>

412
00:17:51,600 --> 00:17:55,469
match their<font color="#CCCCCC"> own needs</font><font color="#E5E5E5"> so it is open</font>

413
00:17:53,580 --> 00:17:57,449
<font color="#CCCCCC">source great open source educational</font>

414
00:17:55,470 --> 00:18:00,510
resource<font color="#E5E5E5"> it is great free education but</font>

415
00:17:57,450 --> 00:18:03,450
it's not<font color="#E5E5E5"> open education not open source</font>

416
00:18:00,510 --> 00:18:05,610
but open education is repli'd<font color="#CCCCCC"> repli'd</font>

417
00:18:03,450 --> 00:18:06,630
does not open<font color="#E5E5E5"> source it's code but the</font>

418
00:18:05,610 --> 00:18:08,520
tools that<font color="#E5E5E5"> they have for teachers</font>

419
00:18:06,630 --> 00:18:10,260
<font color="#E5E5E5">classroom management exercise creation</font>

420
00:18:08,520 --> 00:18:13,590
<font color="#CCCCCC">running code in a zero install</font>

421
00:18:10,260 --> 00:18:15,660
environment is outstanding so<font color="#E5E5E5"> repla is</font>

422
00:18:13,590 --> 00:18:20,129
an example of closed source<font color="#E5E5E5"> open</font>

423
00:18:15,660 --> 00:18:22,290
<font color="#E5E5E5">education resource the perhaps best one</font>

424
00:18:20,130 --> 00:18:24,480
I<font color="#CCCCCC"> believe that is both open source and</font>

425
00:18:22,290 --> 00:18:26,310
open<font color="#E5E5E5"> education is a tool called Python</font>

426
00:18:24,480 --> 00:18:28,230
<font color="#E5E5E5">tutor that you can also use to study</font>

427
00:18:26,310 --> 00:18:29,760
<font color="#E5E5E5">JavaScript that teaches the notional</font>

428
00:18:28,230 --> 00:18:32,460
machine<font color="#E5E5E5"> I'll talk about that in the next</font>

429
00:18:29,760 --> 00:18:35,460
<font color="#E5E5E5">step so what is a quick example of</font>

430
00:18:32,460 --> 00:18:38,070
something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> both open source open</font>

431
00:18:35,460 --> 00:18:43,530
<font color="#E5E5E5">education and realistically accessible</font>

432
00:18:38,070 --> 00:18:46,530
to a<font color="#CCCCCC"> student it is this</font><font color="#E5E5E5"> a student</font><font color="#CCCCCC"> can</font>

433
00:18:43,530 --> 00:18:47,879
inspect they want to study<font color="#E5E5E5"> coercion</font>

434
00:18:46,530 --> 00:18:49,920
because<font color="#CCCCCC"> that's difficult</font>

435
00:18:47,880 --> 00:18:56,580
<font color="#E5E5E5">so let's what happens if we take a</font>

436
00:18:49,920 --> 00:18:58,410
string<font color="#E5E5E5"> negative for a number for we add</font>

437
00:18:56,580 --> 00:19:05,520
them I expect the result of this

438
00:18:58,410 --> 00:19:10,890
<font color="#E5E5E5">operation to be boolean true</font><font color="#CCCCCC"> I got</font><font color="#E5E5E5"> it</font>

439
00:19:05,520 --> 00:19:12,840
right what if I<font color="#E5E5E5"> said false</font><font color="#CCCCCC"> I would get</font>

440
00:19:10,890 --> 00:19:16,980
it wrong<font color="#CCCCCC"> and what if that's</font><font color="#E5E5E5"> not a</font>

441
00:19:12,840 --> 00:19:18,330
<font color="#E5E5E5">boolean it would tell me so I'm</font>

442
00:19:16,980 --> 00:19:20,130
constantly<font color="#E5E5E5"> getting</font><font color="#CCCCCC"> feedback in the</font>

443
00:19:18,330 --> 00:19:22,169
console<font color="#E5E5E5"> students are learning how to</font>

444
00:19:20,130 --> 00:19:24,540
read the dev console<font color="#E5E5E5"> look at the code</font>

445
00:19:22,170 --> 00:19:27,060
they're learning how to in their heads

446
00:19:24,540 --> 00:19:29,399
break down<font color="#E5E5E5"> long expressions to debug</font>

447
00:19:27,060 --> 00:19:32,389
them<font color="#E5E5E5"> and furthermore the source code</font>

448
00:19:29,400 --> 00:19:35,250
itself<font color="#E5E5E5"> is very accessible to</font><font color="#CCCCCC"> a student</font>

449
00:19:32,390 --> 00:19:39,540
<font color="#E5E5E5">there's a simple function</font><font color="#CCCCCC"> that casts</font><font color="#E5E5E5"> two</font>

450
00:19:35,250 --> 00:19:41,790
types there's a simple clear func table

451
00:19:39,540 --> 00:19:44,100
and a slightly more complicated handler

452
00:19:41,790 --> 00:19:46,470
function that's long but has<font color="#E5E5E5"> nothing</font>

453
00:19:44,100 --> 00:19:48,750
extremely difficult in it and this over

454
00:19:46,470 --> 00:19:50,520
<font color="#CCCCCC">here</font><font color="#E5E5E5"> is simply an HTML</font><font color="#CCCCCC"> table</font><font color="#E5E5E5"> so this is</font>

455
00:19:48,750 --> 00:19:51,160
an example of a very powerful open

456
00:19:50,520 --> 00:19:53,710
<font color="#E5E5E5">education</font>

457
00:19:51,160 --> 00:19:55,750
resource<font color="#E5E5E5"> tool that is</font><font color="#CCCCCC"> also realistically</font>

458
00:19:53,710 --> 00:19:57,190
<font color="#CCCCCC">open-source to students you can imagine</font>

459
00:19:55,750 --> 00:19:59,260
a student<font color="#CCCCCC"> after a couple months</font><font color="#E5E5E5"> getting</font>

460
00:19:57,190 --> 00:20:00,880
the confidence<font color="#CCCCCC"> to build their own tables</font>

461
00:19:59,260 --> 00:20:02,920
for expressions that<font color="#E5E5E5"> are troubling them</font>

462
00:20:00,880 --> 00:20:05,770
<font color="#E5E5E5">or to make their own little courses and</font>

463
00:20:02,920 --> 00:20:08,260
remix and<font color="#CCCCCC"> share between themselves so</font>

464
00:20:05,770 --> 00:20:12,280
<font color="#E5E5E5">open source</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> strictly</font><font color="#CCCCCC"> equal to</font>

465
00:20:08,260 --> 00:20:14,410
open<font color="#E5E5E5"> education finally computing</font>

466
00:20:12,280 --> 00:20:17,050
literacy what is this<font color="#E5E5E5"> how do we teach it</font>

467
00:20:14,410 --> 00:20:18,640
so I'm<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> skip</font><font color="#CCCCCC"> defining exactly what</font>

468
00:20:17,050 --> 00:20:21,520
it<font color="#CCCCCC"> is I'll do</font><font color="#E5E5E5"> that in a second by</font>

469
00:20:18,640 --> 00:20:23,620
showing<font color="#E5E5E5"> not a sentence but a project</font>

470
00:20:21,520 --> 00:20:25,420
that<font color="#E5E5E5"> a computationally literate student</font>

471
00:20:23,620 --> 00:20:28,510
should be<font color="#CCCCCC"> able to</font><font color="#E5E5E5"> build realistically</font>

472
00:20:25,420 --> 00:20:30,400
after maybe a year of study first<font color="#E5E5E5"> step</font>

473
00:20:28,510 --> 00:20:32,400
though is honesty<font color="#CCCCCC"> this is intellectual</font>

474
00:20:30,400 --> 00:20:34,570
honesty<font color="#CCCCCC"> if you want to truly</font><font color="#E5E5E5"> teach</font>

475
00:20:32,400 --> 00:20:37,390
computational literacy<font color="#E5E5E5"> you need to teach</font>

476
00:20:34,570 --> 00:20:39,280
students<font color="#CCCCCC"> that of what is</font><font color="#E5E5E5"> actually</font>

477
00:20:37,390 --> 00:20:41,500
<font color="#CCCCCC">happening</font><font color="#E5E5E5"> do not put it in any other</font>

478
00:20:39,280 --> 00:20:44,050
words do<font color="#CCCCCC"> not use analogies teach what is</font>

479
00:20:41,500 --> 00:20:45,550
<font color="#E5E5E5">and expect that students can learn it so</font>

480
00:20:44,050 --> 00:20:46,960
this goes<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Python tutor teaching</font>

481
00:20:45,550 --> 00:20:49,270
<font color="#E5E5E5">programming first from a notional</font>

482
00:20:46,960 --> 00:20:51,460
machine not using analogies<font color="#E5E5E5"> not using</font>

483
00:20:49,270 --> 00:20:55,770
custom environments let's teach students

484
00:20:51,460 --> 00:20:57,730
in place using<font color="#E5E5E5"> clever methods agency</font>

485
00:20:55,770 --> 00:20:59,830
students should learn<font color="#E5E5E5"> that they have</font>

486
00:20:57,730 --> 00:21:02,320
agency over the digital tools<font color="#E5E5E5"> that they</font>

487
00:20:59,830 --> 00:21:03,490
use of course you're<font color="#E5E5E5"> not going to have</font>

488
00:21:02,320 --> 00:21:05,470
<font color="#CCCCCC">it over everything</font><font color="#E5E5E5"> but they should learn</font>

489
00:21:03,490 --> 00:21:07,060
<font color="#CCCCCC">that is possible and</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's why in</font>

490
00:21:05,470 --> 00:21:10,390
the previous<font color="#E5E5E5"> slide I was</font><font color="#CCCCCC"> advocating for</font>

491
00:21:07,060 --> 00:21:12,040
<font color="#E5E5E5">open source resources that are also open</font>

492
00:21:10,390 --> 00:21:14,130
education students can modify them

493
00:21:12,040 --> 00:21:17,110
themselves<font color="#E5E5E5"> adapt their own courses</font>

494
00:21:14,130 --> 00:21:18,880
<font color="#E5E5E5">ownership so this is now beyond the</font>

495
00:21:17,110 --> 00:21:20,889
student to<font color="#E5E5E5"> the whole community the</font>

496
00:21:18,880 --> 00:21:23,650
school's the teachers they should all be

497
00:21:20,890 --> 00:21:25,300
<font color="#CCCCCC">able to</font><font color="#E5E5E5"> easily adapt whatever content</font>

498
00:21:23,650 --> 00:21:27,190
whatever courses to their own needs<font color="#CCCCCC"> so</font>

499
00:21:25,300 --> 00:21:29,590
<font color="#CCCCCC">this is again</font><font color="#E5E5E5"> where free code camp is an</font>

500
00:21:27,190 --> 00:21:31,330
ideally open education it is a very good

501
00:21:29,590 --> 00:21:33,399
course<font color="#CCCCCC"> but is very long</font><font color="#E5E5E5"> and it's very</font>

502
00:21:31,330 --> 00:21:34,720
prescribed<font color="#E5E5E5"> it be difficult to</font><font color="#CCCCCC"> adjust</font>

503
00:21:33,400 --> 00:21:37,350
that<font color="#E5E5E5"> to</font><font color="#CCCCCC"> different lengths to slightly</font>

504
00:21:34,720 --> 00:21:39,880
<font color="#E5E5E5">different</font><font color="#CCCCCC"> needs different levels</font>

505
00:21:37,350 --> 00:21:42,219
integration students can't just learn

506
00:21:39,880 --> 00:21:44,800
<font color="#E5E5E5">programming they need to learn</font><font color="#CCCCCC"> how the</font>

507
00:21:42,220 --> 00:21:47,020
user how the computer itself how the

508
00:21:44,800 --> 00:21:48,850
source code<font color="#E5E5E5"> how the developer how</font>

509
00:21:47,020 --> 00:21:50,950
there's an entire sort of space a

510
00:21:48,850 --> 00:21:52,689
communication space<font color="#E5E5E5"> built around a</font>

511
00:21:50,950 --> 00:21:55,750
running application<font color="#CCCCCC"> that has real-world</font>

512
00:21:52,690 --> 00:21:57,610
impacts<font color="#CCCCCC"> javascript is exceptionally good</font>

513
00:21:55,750 --> 00:21:59,320
at<font color="#E5E5E5"> teaching this through what I'll show</font>

514
00:21:57,610 --> 00:22:01,240
<font color="#E5E5E5">you in the final project</font><font color="#CCCCCC"> the ability to</font>

515
00:21:59,320 --> 00:22:03,939
<font color="#E5E5E5">have a working application in the Dom</font>

516
00:22:01,240 --> 00:22:04,780
the dev inspector tools<font color="#E5E5E5"> source code</font>

517
00:22:03,940 --> 00:22:06,910
<font color="#CCCCCC">printout</font>

518
00:22:04,780 --> 00:22:09,850
<font color="#CCCCCC">all simply live on an open-source</font>

519
00:22:06,910 --> 00:22:12,820
hosting like this github do finally

520
00:22:09,850 --> 00:22:14,500
<font color="#E5E5E5">preparation the goal of computational</font>

521
00:22:12,820 --> 00:22:17,260
literacy isn't<font color="#CCCCCC"> to</font><font color="#E5E5E5"> create professional</font>

522
00:22:14,500 --> 00:22:18,760
ready students<font color="#E5E5E5"> it's to create students</font>

523
00:22:17,260 --> 00:22:20,800
who are prepared to<font color="#E5E5E5"> go</font><font color="#CCCCCC"> on and learn</font>

524
00:22:18,760 --> 00:22:22,300
whichever path bill later need whether

525
00:22:20,800 --> 00:22:26,020
that is to be a developer<font color="#CCCCCC"> whether it's</font>

526
00:22:22,300 --> 00:22:27,790
to simply be an artist<font color="#E5E5E5"> anything but to</font>

527
00:22:26,020 --> 00:22:29,770
be living<font color="#E5E5E5"> in the world with a basic</font>

528
00:22:27,790 --> 00:22:32,530
<font color="#CCCCCC">understanding of what</font><font color="#E5E5E5"> is computational</font>

529
00:22:29,770 --> 00:22:34,030
literacy and how does<font color="#E5E5E5"> it work</font><font color="#CCCCCC"> why why</font>

530
00:22:32,530 --> 00:22:38,050
<font color="#E5E5E5">does that relevant and that</font><font color="#CCCCCC"> they do have</font>

531
00:22:34,030 --> 00:22:39,490
<font color="#E5E5E5">some say here is an example of a final</font>

532
00:22:38,050 --> 00:22:43,600
<font color="#CCCCCC">project that</font><font color="#E5E5E5"> I believe a student could</font>

533
00:22:39,490 --> 00:22:48,070
be<font color="#E5E5E5"> able to build after</font><font color="#CCCCCC"> one year it</font>

534
00:22:43,600 --> 00:22:50,590
contains dynamic documentation automated

535
00:22:48,070 --> 00:22:52,870
<font color="#E5E5E5">testing and feedback through a simple</font>

536
00:22:50,590 --> 00:22:55,090
<font color="#E5E5E5">run tests function that can easily be</font>

537
00:22:52,870 --> 00:22:56,649
<font color="#CCCCCC">understood by them this is the only</font>

538
00:22:55,090 --> 00:22:59,590
<font color="#E5E5E5">source code that they also didn't write</font>

539
00:22:56,650 --> 00:23:01,180
for the whole project<font color="#CCCCCC"> it just reads</font><font color="#E5E5E5"> it</font>

540
00:22:59,590 --> 00:23:03,070
just takes in a function arguments

541
00:23:01,180 --> 00:23:08,500
passes them through compares them and

542
00:23:03,070 --> 00:23:10,540
logs<font color="#E5E5E5"> a student can see which</font><font color="#CCCCCC"> one's</font>

543
00:23:08,500 --> 00:23:14,170
failed which test<font color="#E5E5E5"> cases failed what are</font>

544
00:23:10,540 --> 00:23:17,710
all the functions available<font color="#E5E5E5"> let's see I</font>

545
00:23:14,170 --> 00:23:20,340
want<font color="#E5E5E5"> to cheat we can now check our log</font>

546
00:23:17,710 --> 00:23:23,650
and we can see<font color="#E5E5E5"> that someone cheated</font>

547
00:23:20,340 --> 00:23:26,590
cheating<font color="#CCCCCC"> input</font><font color="#E5E5E5"> one scheduled blah blah</font>

548
00:23:23,650 --> 00:23:28,300
blah what is also super super<font color="#E5E5E5"> important</font>

549
00:23:26,590 --> 00:23:30,490
as far as computational literacy goes is

550
00:23:28,300 --> 00:23:32,230
the idea of applied computing and<font color="#CCCCCC"> how do</font>

551
00:23:30,490 --> 00:23:35,440
you embed a problem from<font color="#E5E5E5"> the real world</font>

552
00:23:32,230 --> 00:23:37,300
<font color="#CCCCCC">into the computational space and here we</font>

553
00:23:35,440 --> 00:23:41,620
see that<font color="#CCCCCC"> with embedding and</font><font color="#E5E5E5"> D betting if</font>

554
00:23:37,300 --> 00:23:45,629
we look at the model we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see this</font>

555
00:23:41,620 --> 00:23:45,629
here the challenges

556
00:23:49,490 --> 00:23:53,059
we can look<font color="#E5E5E5"> at the way students have</font>

557
00:23:51,080 --> 00:23:56,600
organized their database<font color="#E5E5E5"> they have two</font>

558
00:23:53,059 --> 00:23:59,149
<font color="#E5E5E5">functions embed and Abed that map from</font>

559
00:23:56,600 --> 00:24:01,250
strings<font color="#E5E5E5"> to array of char codes they</font>

560
00:23:59,149 --> 00:24:03,590
perform<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of their sorting</font><font color="#E5E5E5"> and all of</font>

561
00:24:01,250 --> 00:24:05,630
their removing extra elements on the

562
00:24:03,590 --> 00:24:07,459
array<font color="#CCCCCC"> of numbers</font><font color="#E5E5E5"> and map it</font><font color="#CCCCCC"> back to a</font>

563
00:24:05,630 --> 00:24:09,470
string when the user<font color="#E5E5E5"> wants to see what's</font>

564
00:24:07,460 --> 00:24:11,750
stored in memory<font color="#E5E5E5"> so it's super simple</font>

565
00:24:09,470 --> 00:24:13,850
<font color="#CCCCCC">it's things that</font><font color="#E5E5E5"> can easily be</font><font color="#CCCCCC"> done</font>

566
00:24:11,750 --> 00:24:15,080
<font color="#E5E5E5">right</font><font color="#CCCCCC"> within the first</font><font color="#E5E5E5"> couple months but</font>

567
00:24:13,850 --> 00:24:17,389
it's the fact that you're having<font color="#E5E5E5"> people</font>

568
00:24:15,080 --> 00:24:18,199
do this<font color="#CCCCCC"> instead of something</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> that</font>

569
00:24:17,390 --> 00:24:20,120
sets<font color="#E5E5E5"> them</font><font color="#CCCCCC"> up</font>

570
00:24:18,200 --> 00:24:21,470
none of these concepts are<font color="#CCCCCC"> impossible</font><font color="#E5E5E5"> to</font>

571
00:24:20,120 --> 00:24:27,129
understand but<font color="#E5E5E5"> they need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

572
00:24:21,470 --> 00:24:37,330
simplified<font color="#E5E5E5"> and explicitly top questions</font>

573
00:24:27,130 --> 00:24:37,330
<font color="#E5E5E5">or is it time one question</font>

574
00:24:45,970 --> 00:24:50,830
thank you<font color="#E5E5E5"> I are using</font><font color="#CCCCCC"> a debugger in one</font>

575
00:24:49,120 --> 00:24:52,689
of your teaching examples<font color="#E5E5E5"> because</font><font color="#CCCCCC"> every</font>

576
00:24:50,830 --> 00:24:53,980
<font color="#E5E5E5">everything it's always the built-in</font>

577
00:24:52,690 --> 00:24:56,559
debugger<font color="#CCCCCC"> and so that's one of</font><font color="#E5E5E5"> the whole</font>

578
00:24:53,980 --> 00:24:58,330
things is you have zero install openly

579
00:24:56,559 --> 00:25:01,330
available<font color="#E5E5E5"> tools</font><font color="#CCCCCC"> so all</font><font color="#E5E5E5"> of the exercises</font>

580
00:24:58,330 --> 00:25:02,860
are built in<font color="#E5E5E5"> just the Chrome or Firefox</font>

581
00:25:01,330 --> 00:25:06,899
<font color="#E5E5E5">okay sorry then I meant specifically</font>

582
00:25:02,860 --> 00:25:06,899
<font color="#E5E5E5">pausing on a specific</font><font color="#CCCCCC"> line</font>

