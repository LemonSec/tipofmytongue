1
00:00:04,620 --> 00:00:09,330
hello<font color="#CCCCCC"> everybody I'm Albert Thomas</font>

2
00:00:06,660 --> 00:00:12,480
<font color="#E5E5E5">Sydenham</font><font color="#CCCCCC"> and today we are going</font><font color="#E5E5E5"> to talk</font>

3
00:00:09,330 --> 00:00:15,780
about<font color="#E5E5E5"> the teaching machines to read code</font>

4
00:00:12,480 --> 00:00:19,380
changes and<font color="#E5E5E5"> I try</font><font color="#CCCCCC"> to pretty</font><font color="#E5E5E5"> to tell what</font>

5
00:00:15,780 --> 00:00:23,970
<font color="#E5E5E5">happened so predicting</font><font color="#CCCCCC"> commit</font><font color="#E5E5E5"> message we</font>

6
00:00:19,380 --> 00:00:25,799
narrow metrics<font color="#E5E5E5"> just</font><font color="#CCCCCC"> word I were well to</font>

7
00:00:23,970 --> 00:00:27,990
thank my company who sent me here

8
00:00:25,800 --> 00:00:29,580
provided the older hardware for the

9
00:00:27,990 --> 00:00:31,439
training<font color="#E5E5E5"> for</font><font color="#CCCCCC"> a new experiments</font>

10
00:00:29,580 --> 00:00:33,570
<font color="#E5E5E5">throughout</font><font color="#CCCCCC"> in time for me to run the</font>

11
00:00:31,439 --> 00:00:35,519
experiments and we basically<font color="#E5E5E5"> our</font>

12
00:00:33,570 --> 00:00:37,410
consulting company completely<font color="#E5E5E5"> devoted to</font>

13
00:00:35,519 --> 00:00:40,769
<font color="#E5E5E5">open source which is pretty cool and we</font>

14
00:00:37,410 --> 00:00:42,328
<font color="#CCCCCC">only</font><font color="#E5E5E5"> use open source technology and we</font>

15
00:00:40,770 --> 00:00:46,320
are an Italian based company we do

16
00:00:42,329 --> 00:00:50,700
<font color="#CCCCCC">devops</font><font color="#E5E5E5"> cloud ml big data and lots of</font>

17
00:00:46,320 --> 00:00:57,090
other interesting<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> so why we want</font>

18
00:00:50,700 --> 00:01:01,559
<font color="#E5E5E5">to come in message suggestion and is</font>

19
00:00:57,090 --> 00:01:03,329
this presentation<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> okay</font>

20
00:01:01,559 --> 00:01:05,640
what do<font color="#E5E5E5"> you want a</font><font color="#CCCCCC"> coming message</font>

21
00:01:03,329 --> 00:01:08,160
<font color="#CCCCCC">suggestion for</font><font color="#E5E5E5"> example but because we</font>

22
00:01:05,640 --> 00:01:11,490
want to just help the developer for

23
00:01:08,160 --> 00:01:14,459
<font color="#E5E5E5">example so we want to gain given</font><font color="#CCCCCC"> had to</font>

24
00:01:11,490 --> 00:01:17,399
the to the developer<font color="#CCCCCC"> for</font><font color="#E5E5E5"> example we want</font>

25
00:01:14,459 --> 00:01:19,679
<font color="#E5E5E5">to catch bad commit messages just</font>

26
00:01:17,399 --> 00:01:22,380
imagine if your<font color="#E5E5E5"> Jenkins pipeline was</font>

27
00:01:19,679 --> 00:01:24,390
able to<font color="#E5E5E5"> reject pool requests</font><font color="#CCCCCC"> phaser or</font>

28
00:01:22,380 --> 00:01:26,580
<font color="#E5E5E5">the lousy commit message that was</font>

29
00:01:24,390 --> 00:01:29,039
attached I think we all been<font color="#CCCCCC"> there</font><font color="#E5E5E5"> right</font>

30
00:01:26,580 --> 00:01:33,119
<font color="#CCCCCC">so</font><font color="#E5E5E5"> it would be nice if we</font><font color="#CCCCCC"> had a</font>

31
00:01:29,039 --> 00:01:35,130
automated way<font color="#E5E5E5"> to generate stuff to use</font>

32
00:01:33,119 --> 00:01:38,729
it<font color="#CCCCCC"> as</font><font color="#E5E5E5"> similarity</font><font color="#CCCCCC"> metrics and how good</font><font color="#E5E5E5"> it</font>

33
00:01:35,130 --> 00:01:41,970
<font color="#E5E5E5">come is messages what we don't want</font>

34
00:01:38,729 --> 00:01:44,940
<font color="#E5E5E5">anyway is a message based on templates</font>

35
00:01:41,970 --> 00:01:48,179
because message based on<font color="#CCCCCC"> templates</font><font color="#E5E5E5"> just</font>

36
00:01:44,940 --> 00:01:52,259
<font color="#E5E5E5">suck</font><font color="#CCCCCC"> they can just tell you a very</font><font color="#E5E5E5"> very</font>

37
00:01:48,179 --> 00:01:55,380
narrow<font color="#E5E5E5"> cases and we don't want just a</font>

38
00:01:52,259 --> 00:01:57,450
nice crafted message<font color="#CCCCCC"> where you feel just</font>

39
00:01:55,380 --> 00:02:00,149
names<font color="#CCCCCC"> you say what really I generate the</font>

40
00:01:57,450 --> 00:02:03,509
message which pertains the very specific

41
00:02:00,149 --> 00:02:05,700
case you're tackling and we don't want

42
00:02:03,509 --> 00:02:08,310
also<font color="#E5E5E5"> a message the summarize what has</font>

43
00:02:05,700 --> 00:02:11,520
changed<font color="#CCCCCC"> because what has changed</font><font color="#E5E5E5"> stream</font>

44
00:02:08,310 --> 00:02:14,370
<font color="#E5E5E5">this file changing this way</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> the</font>

45
00:02:11,520 --> 00:02:16,560
point of the get patch the<font color="#CCCCCC"> give message</font>

46
00:02:14,370 --> 00:02:18,670
itself<font color="#E5E5E5"> we instead we want message</font><font color="#CCCCCC"> to</font>

47
00:02:16,560 --> 00:02:21,070
capture<font color="#CCCCCC"> the hi</font>

48
00:02:18,670 --> 00:02:25,380
at least the<font color="#CCCCCC"> medium-level intents of</font>

49
00:02:21,070 --> 00:02:28,000
decoder<font color="#E5E5E5"> and why it changed okay</font>

50
00:02:25,380 --> 00:02:30,730
so<font color="#E5E5E5"> turns out the generating a message</font>

51
00:02:28,000 --> 00:02:34,360
for<font color="#E5E5E5"> a comedy for a code</font><font color="#CCCCCC"> change is a</font>

52
00:02:30,730 --> 00:02:36,070
<font color="#E5E5E5">problem of summarization</font><font color="#CCCCCC"> and we want to</font>

53
00:02:34,360 --> 00:02:39,070
<font color="#E5E5E5">generalize what was the intent of</font>

54
00:02:36,070 --> 00:02:43,180
<font color="#CCCCCC">decoder live</font><font color="#E5E5E5"> a low-level why you did</font>

55
00:02:39,070 --> 00:02:45,100
that<font color="#CCCCCC"> and maybe we are not</font><font color="#E5E5E5"> exposed to</font><font color="#CCCCCC"> the</font>

56
00:02:43,180 --> 00:02:46,570
high level<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> project</font><font color="#CCCCCC"> because you</font>

57
00:02:45,100 --> 00:02:48,700
cannot even tell it by<font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> the</font>

58
00:02:46,570 --> 00:02:50,859
<font color="#E5E5E5">comedy story but we want to know what is</font>

59
00:02:48,700 --> 00:02:52,899
changing<font color="#CCCCCC"> that particular context</font><font color="#E5E5E5"> a</font>

60
00:02:50,860 --> 00:02:55,150
change of code is always<font color="#E5E5E5"> comes with a</font>

61
00:02:52,900 --> 00:02:55,630
commit message<font color="#CCCCCC"> which describes the</font><font color="#E5E5E5"> full</font>

62
00:02:55,150 --> 00:02:58,810
change

63
00:02:55,630 --> 00:03:01,720
so in essence right when developer

64
00:02:58,810 --> 00:03:04,570
writes a comment message<font color="#E5E5E5"> it's generating</font>

65
00:03:01,720 --> 00:03:08,560
a summary<font color="#CCCCCC"> of the changes</font><font color="#E5E5E5"> and we won't</font>

66
00:03:04,570 --> 00:03:11,530
exploit particularly this thing<font color="#E5E5E5"> dispatch</font>

67
00:03:08,560 --> 00:03:13,810
provides a really focused source<font color="#E5E5E5"> of code</font>

68
00:03:11,530 --> 00:03:15,910
<font color="#E5E5E5">to summary mapping so in this case we</font>

69
00:03:13,810 --> 00:03:17,860
<font color="#E5E5E5">change</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> only this line and we</font><font color="#CCCCCC"> replace</font>

70
00:03:15,910 --> 00:03:19,270
with this<font color="#E5E5E5"> and this one is being covered</font>

71
00:03:17,860 --> 00:03:23,890
<font color="#E5E5E5">because I want to generalize for</font>

72
00:03:19,270 --> 00:03:26,530
multiple<font color="#E5E5E5"> items and so the point of the</font>

73
00:03:23,890 --> 00:03:29,440
learning in<font color="#E5E5E5"> this case is learning a code</font>

74
00:03:26,530 --> 00:03:32,860
<font color="#CCCCCC">to summary mapping what can we use for</font>

75
00:03:29,440 --> 00:03:34,390
<font color="#E5E5E5">that neural networks</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> networks are</font>

76
00:03:32,860 --> 00:03:37,660
particularly good<font color="#E5E5E5"> that general</font>

77
00:03:34,390 --> 00:03:40,540
<font color="#E5E5E5">generalizing mapping from source to</font>

78
00:03:37,660 --> 00:03:42,670
target<font color="#E5E5E5"> and machine translation can</font>

79
00:03:40,540 --> 00:03:44,560
actually help<font color="#E5E5E5"> a lot because the whole</font>

80
00:03:42,670 --> 00:03:47,260
point of the statistical<font color="#E5E5E5"> machine</font>

81
00:03:44,560 --> 00:03:50,560
translation<font color="#E5E5E5"> and later on</font><font color="#CCCCCC"> niro machine</font>

82
00:03:47,260 --> 00:03:53,950
translation nowadays is<font color="#E5E5E5"> to infer mapping</font>

83
00:03:50,560 --> 00:03:56,320
<font color="#E5E5E5">between languages and by means of</font>

84
00:03:53,950 --> 00:03:59,100
counting the co-occurrences of words

85
00:03:56,320 --> 00:04:02,590
between<font color="#E5E5E5"> two different parallel corpora</font>

86
00:03:59,100 --> 00:04:05,079
<font color="#E5E5E5">or vector embedding manipulation what I</font>

87
00:04:02,590 --> 00:04:09,640
mean is<font color="#CCCCCC"> that if we</font><font color="#E5E5E5"> take a sentence and</font>

88
00:04:05,080 --> 00:04:13,330
we like a map it<font color="#E5E5E5"> into a dance vector of</font>

89
00:04:09,640 --> 00:04:15,880
full<font color="#E5E5E5"> numbers right much like we do with</font>

90
00:04:13,330 --> 00:04:18,430
<font color="#CCCCCC">the tf-idf</font><font color="#E5E5E5"> in information to your thing</font>

91
00:04:15,880 --> 00:04:21,149
and we put it into a<font color="#E5E5E5"> multi-dimensional</font>

92
00:04:18,430 --> 00:04:24,669
<font color="#E5E5E5">space in a high dimensional space like</font>

93
00:04:21,149 --> 00:04:27,849
256 dimensions<font color="#E5E5E5"> concepts</font><font color="#CCCCCC"> that will be</font>

94
00:04:24,669 --> 00:04:30,210
<font color="#E5E5E5">very really near will be near in this</font>

95
00:04:27,849 --> 00:04:33,150
space and this<font color="#E5E5E5"> holds true</font>

96
00:04:30,210 --> 00:04:35,758
across different languages<font color="#E5E5E5"> so we can map</font>

97
00:04:33,150 --> 00:04:38,489
from<font color="#E5E5E5"> a language to another by looking at</font>

98
00:04:35,759 --> 00:04:43,830
vectors at concepts<font color="#E5E5E5"> that sits near in</font>

99
00:04:38,490 --> 00:04:45,300
<font color="#CCCCCC">the</font><font color="#E5E5E5"> language so in order to do a machine</font>

100
00:04:43,830 --> 00:04:49,560
translation we need in architecture

101
00:04:45,300 --> 00:04:51,539
first and a data set<font color="#E5E5E5"> the architecture</font>

102
00:04:49,560 --> 00:04:53,310
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> picked in this case is the</font>

103
00:04:51,539 --> 00:04:54,539
<font color="#E5E5E5">Google narrow machine translation</font>

104
00:04:53,310 --> 00:04:56,460
architecture which is<font color="#E5E5E5"> the</font>

105
00:04:54,539 --> 00:04:58,800
<font color="#E5E5E5">state-of-the-art</font><font color="#CCCCCC"> for the machine</font>

106
00:04:56,460 --> 00:05:01,590
translation<font color="#CCCCCC"> basically this</font><font color="#E5E5E5"> is a sequence</font>

107
00:04:58,800 --> 00:05:04,650
<font color="#E5E5E5">to sequence model with attention we have</font>

108
00:05:01,590 --> 00:05:07,109
here the<font color="#E5E5E5"> input and are fed into a</font>

109
00:05:04,650 --> 00:05:10,560
bi-directional<font color="#E5E5E5"> recurrent neural network</font>

110
00:05:07,110 --> 00:05:14,370
with the lsdm cell in<font color="#E5E5E5"> order to prevent</font>

111
00:05:10,560 --> 00:05:16,199
<font color="#E5E5E5">the vanishing gradient problem which is</font>

112
00:05:14,370 --> 00:05:18,509
the phenomenon by which<font color="#E5E5E5"> the narrow</font>

113
00:05:16,199 --> 00:05:22,259
networks tends<font color="#E5E5E5"> to</font><font color="#CCCCCC"> forget what has seen</font>

114
00:05:18,509 --> 00:05:23,880
<font color="#E5E5E5">in a state which is far into the</font>

115
00:05:22,259 --> 00:05:27,389
computation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so it's not</font><font color="#CCCCCC"> able to</font>

116
00:05:23,880 --> 00:05:29,580
learn then we feed these double paths

117
00:05:27,389 --> 00:05:33,210
forward and backward paths to a stack<font color="#CCCCCC"> of</font>

118
00:05:29,580 --> 00:05:34,680
eight layers which have also<font color="#E5E5E5"> residual</font>

119
00:05:33,210 --> 00:05:37,440
connection or zero connection<font color="#E5E5E5"> is</font><font color="#CCCCCC"> when</font>

120
00:05:34,680 --> 00:05:39,900
<font color="#CCCCCC">you</font><font color="#E5E5E5"> just you not only feed the input</font><font color="#CCCCCC"> of</font>

121
00:05:37,440 --> 00:05:42,300
previous layers into new one but you

122
00:05:39,900 --> 00:05:44,669
also<font color="#E5E5E5"> feed the original</font><font color="#CCCCCC"> inputs and you</font>

123
00:05:42,300 --> 00:05:46,199
can<font color="#E5E5E5"> carry it together this</font><font color="#CCCCCC"> because it</font>

124
00:05:44,669 --> 00:05:47,969
was observed<font color="#E5E5E5"> that producing the</font>

125
00:05:46,199 --> 00:05:50,610
intermediate representation of a result

126
00:05:47,970 --> 00:05:53,130
<font color="#E5E5E5">along with the input helps generalizing</font>

127
00:05:50,610 --> 00:05:55,979
better because the gradient sir when you

128
00:05:53,130 --> 00:05:59,789
are back propagating flows<font color="#E5E5E5"> again across</font>

129
00:05:55,979 --> 00:06:03,180
<font color="#CCCCCC">the the residual connections</font><font color="#E5E5E5"> and are not</font>

130
00:05:59,789 --> 00:06:05,310
hampered basically then<font color="#E5E5E5"> you feed</font>

131
00:06:03,180 --> 00:06:07,889
everything<font color="#E5E5E5"> to a tension model which is a</font>

132
00:06:05,310 --> 00:06:11,400
nice<font color="#CCCCCC"> machine that sits in between</font><font color="#E5E5E5"> and</font>

133
00:06:07,889 --> 00:06:14,070
helps<font color="#E5E5E5"> understanding what is the part of</font>

134
00:06:11,400 --> 00:06:16,320
the<font color="#CCCCCC"> input that</font><font color="#E5E5E5"> should be used across all</font>

135
00:06:14,070 --> 00:06:18,960
the multiple<font color="#E5E5E5"> words that you have been</font>

136
00:06:16,320 --> 00:06:21,900
filling<font color="#E5E5E5"> in to generate the current state</font>

137
00:06:18,960 --> 00:06:24,239
in a decoder the decoder is<font color="#CCCCCC"> the network</font>

138
00:06:21,900 --> 00:06:26,130
on the right which is there on which is

139
00:06:24,240 --> 00:06:28,470
the one which<font color="#CCCCCC"> is currently</font><font color="#E5E5E5"> is really</font>

140
00:06:26,130 --> 00:06:30,719
generating the sentences<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so this</font>

141
00:06:28,470 --> 00:06:33,630
one is<font color="#CCCCCC"> getting the context of the</font>

142
00:06:30,720 --> 00:06:35,550
<font color="#CCCCCC">dispatch everything has changed the</font>

143
00:06:33,630 --> 00:06:39,990
<font color="#CCCCCC">filenames</font><font color="#E5E5E5"> changes the code</font><font color="#CCCCCC"> changing</font>

144
00:06:35,550 --> 00:06:42,300
feeds into<font color="#E5E5E5"> a decoder which generates by</font>

145
00:06:39,990 --> 00:06:44,070
means of<font color="#E5E5E5"> our current neural network it</font>

146
00:06:42,300 --> 00:06:46,050
generates the real words

147
00:06:44,070 --> 00:06:48,540
that will be fed<font color="#E5E5E5"> and also this one is a</font>

148
00:06:46,050 --> 00:06:51,780
stack<font color="#E5E5E5"> at the Eightfold return</font><font color="#CCCCCC"> your</font>

149
00:06:48,540 --> 00:06:54,540
network<font color="#E5E5E5"> with the is monotonic is not</font>

150
00:06:51,780 --> 00:06:58,650
bi-directional with the<font color="#CCCCCC"> critical</font>

151
00:06:54,540 --> 00:07:01,230
connections and then we<font color="#CCCCCC"> needed</font><font color="#E5E5E5"> that data</font>

152
00:06:58,650 --> 00:07:03,479
set<font color="#E5E5E5"> so we used the comic data set</font>

153
00:07:01,230 --> 00:07:05,850
provided by the<font color="#CCCCCC"> giong and Macmillan</font>

154
00:07:03,480 --> 00:07:08,970
experiment which this presentation<font color="#E5E5E5"> takes</font>

155
00:07:05,850 --> 00:07:13,580
inspiration from which was<font color="#CCCCCC"> a research</font>

156
00:07:08,970 --> 00:07:13,580
down<font color="#E5E5E5"> two years ago about how</font><font color="#CCCCCC"> to extract</font>

157
00:07:14,240 --> 00:07:18,630
<font color="#CCCCCC">common messages from dispatches</font><font color="#E5E5E5"> they</font>

158
00:07:17,310 --> 00:07:21,480
used a totally different technology

159
00:07:18,630 --> 00:07:24,719
because they didn't<font color="#E5E5E5"> have this at the</font>

160
00:07:21,480 --> 00:07:27,660
time so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> using better weapons</font>

161
00:07:24,720 --> 00:07:31,370
to take<font color="#CCCCCC"> the same problem it's two</font>

162
00:07:27,660 --> 00:07:34,830
million<font color="#E5E5E5"> commits from the top</font><font color="#CCCCCC"> 1,000</font><font color="#E5E5E5"> Java</font>

163
00:07:31,370 --> 00:07:37,980
repositories on github<font color="#E5E5E5"> we extracted only</font>

164
00:07:34,830 --> 00:07:41,370
<font color="#E5E5E5">the first sentences from each commit</font>

165
00:07:37,980 --> 00:07:43,740
<font color="#CCCCCC">messaging so</font><font color="#E5E5E5"> then we basically stripped</font>

166
00:07:41,370 --> 00:07:46,050
away the<font color="#E5E5E5"> issuer the commit hash which</font>

167
00:07:43,740 --> 00:07:48,300
organized everything for with<font color="#CCCCCC"> whitespace</font>

168
00:07:46,050 --> 00:07:50,750
<font color="#CCCCCC">giving the camel casing and filtration</font>

169
00:07:48,300 --> 00:07:53,730
because<font color="#E5E5E5"> it's part of the</font><font color="#CCCCCC"> language and</font>

170
00:07:50,750 --> 00:07:56,520
then we<font color="#CCCCCC"> basically had to</font><font color="#E5E5E5"> cut out</font>

171
00:07:53,730 --> 00:07:59,340
<font color="#E5E5E5">everything which was longer than 100</font>

172
00:07:56,520 --> 00:08:02,219
words being<font color="#CCCCCC"> dispatched shall be in the</font>

173
00:07:59,340 --> 00:08:05,460
commit commit message and<font color="#CCCCCC"> this left</font><font color="#E5E5E5"> us</font>

174
00:08:02,220 --> 00:08:08,070
with 75 commits<font color="#E5E5E5"> and then we apply</font>

175
00:08:05,460 --> 00:08:10,289
<font color="#E5E5E5">another filter which was described in</font>

176
00:08:08,070 --> 00:08:12,780
<font color="#E5E5E5">that experimental of three years ago by</font>

177
00:08:10,290 --> 00:08:14,940
John<font color="#CCCCCC"> Macmillan which was a try only</font>

178
00:08:12,780 --> 00:08:18,840
<font color="#E5E5E5">keeping the verb object</font>

179
00:08:14,940 --> 00:08:22,290
messages so if I take a bad<font color="#CCCCCC"> commit</font>

180
00:08:18,840 --> 00:08:24,780
message like blobs<font color="#CCCCCC"> are coded</font><font color="#E5E5E5"> and fix</font><font color="#CCCCCC"> I</font>

181
00:08:22,290 --> 00:08:29,100
cannot<font color="#E5E5E5"> release and there's lots of them</font>

182
00:08:24,780 --> 00:08:31,650
<font color="#CCCCCC">I cannot feed it to the as a</font><font color="#E5E5E5"> training</font>

183
00:08:29,100 --> 00:08:34,409
sample because<font color="#E5E5E5"> it will make my model</font>

184
00:08:31,650 --> 00:08:36,449
produce garbage<font color="#E5E5E5"> so the best commit</font>

185
00:08:34,409 --> 00:08:40,650
messages are those which begin<font color="#CCCCCC"> with a</font>

186
00:08:36,450 --> 00:08:45,030
verb<font color="#E5E5E5"> added this file updated the</font>

187
00:08:40,650 --> 00:08:48,329
changelog<font color="#CCCCCC"> you know removed</font><font color="#E5E5E5"> this kind of</font>

188
00:08:45,030 --> 00:08:50,910
<font color="#CCCCCC">import</font><font color="#E5E5E5"> and then there is a dark object</font>

189
00:08:48,330 --> 00:08:53,010
<font color="#CCCCCC">after that so</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> is a good</font>

190
00:08:50,910 --> 00:08:55,819
<font color="#E5E5E5">message of summarizes it was a very</font>

191
00:08:53,010 --> 00:08:58,250
<font color="#E5E5E5">eristic well</font>

192
00:08:55,820 --> 00:09:01,520
<font color="#CCCCCC">coming messages</font><font color="#E5E5E5"> from Goodwin and try to</font>

193
00:08:58,250 --> 00:09:04,730
have a kind of unsupervised way to

194
00:09:01,520 --> 00:09:08,060
separate<font color="#E5E5E5"> bad messages</font><font color="#CCCCCC"> which should never</font>

195
00:09:04,730 --> 00:09:11,420
be fed as a training<font color="#E5E5E5"> samples and so we</font>

196
00:09:08,060 --> 00:09:15,920
left with<font color="#E5E5E5"> the turkey down 32,000</font><font color="#CCCCCC"> commits</font>

197
00:09:11,420 --> 00:09:17,930
<font color="#CCCCCC">split in three different</font><font color="#E5E5E5"> sets</font><font color="#CCCCCC"> the</font>

198
00:09:15,920 --> 00:09:19,969
biggest for training than one for

199
00:09:17,930 --> 00:09:22,339
validation<font color="#E5E5E5"> during the one for testing</font>

200
00:09:19,970 --> 00:09:24,470
<font color="#CCCCCC">during the training</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> won</font><font color="#E5E5E5"> for violation</font>

201
00:09:22,340 --> 00:09:29,290
<font color="#CCCCCC">after training was done to</font><font color="#E5E5E5"> prevent</font>

202
00:09:24,470 --> 00:09:32,270
picking you with the<font color="#CCCCCC"> sakai</font><font color="#E5E5E5"> which is a</font>

203
00:09:29,290 --> 00:09:35,260
deep learning framework for sequence<font color="#CCCCCC"> to</font>

204
00:09:32,270 --> 00:09:38,180
sequencer much alike<font color="#CCCCCC"> a dancer - dancer</font>

205
00:09:35,260 --> 00:09:40,100
<font color="#CCCCCC">based</font><font color="#E5E5E5"> on AWS MX</font><font color="#CCCCCC"> network which is a</font>

206
00:09:38,180 --> 00:09:42,079
really<font color="#CCCCCC"> cool framework by the way even</font>

207
00:09:40,100 --> 00:09:44,690
<font color="#E5E5E5">though</font><font color="#CCCCCC"> it's a</font><font color="#E5E5E5"> really an underdog of the</font>

208
00:09:42,080 --> 00:09:46,730
field<font color="#CCCCCC"> everybody is</font><font color="#E5E5E5"> just in love with PI</font>

209
00:09:44,690 --> 00:09:47,870
torch<font color="#CCCCCC"> intensive flow I like MX net</font>

210
00:09:46,730 --> 00:09:50,630
because it's really<font color="#E5E5E5"> polished they're</font>

211
00:09:47,870 --> 00:09:55,610
really well designed<font color="#CCCCCC"> from from ground</font><font color="#E5E5E5"> up</font>

212
00:09:50,630 --> 00:09:59,330
<font color="#E5E5E5">and the training happened AWS itself</font>

213
00:09:55,610 --> 00:10:01,370
over a<font color="#CCCCCC"> Tesla K 18</font><font color="#E5E5E5"> and a Tesla V 100 and</font>

214
00:09:59,330 --> 00:10:03,530
I want to spend a few words about the

215
00:10:01,370 --> 00:10:06,980
fact that the new the new GPU<font color="#E5E5E5"> that media</font>

216
00:10:03,530 --> 00:10:09,770
released is a total beast<font color="#E5E5E5"> and it costs</font>

217
00:10:06,980 --> 00:10:13,190
four times as much but it's four<font color="#E5E5E5"> times</font>

218
00:10:09,770 --> 00:10:15,650
the faster so they say that the<font color="#E5E5E5"> only</font>

219
00:10:13,190 --> 00:10:18,080
thing<font color="#CCCCCC"> the money can't buy</font><font color="#E5E5E5"> is time well</font>

220
00:10:15,650 --> 00:10:22,040
in deep learning<font color="#CCCCCC"> this buys you a lot of</font>

221
00:10:18,080 --> 00:10:26,300
<font color="#E5E5E5">time and I the original experimenter was</font>

222
00:10:22,040 --> 00:10:26,930
<font color="#E5E5E5">38 hours training</font><font color="#CCCCCC"> length I ended up in</font>

223
00:10:26,300 --> 00:10:31,430
five<font color="#CCCCCC"> hours</font>

224
00:10:26,930 --> 00:10:34,130
so it really let me iterate a lot and

225
00:10:31,430 --> 00:10:36,290
you can<font color="#CCCCCC"> see that from the</font><font color="#E5E5E5"> perplexity</font><font color="#CCCCCC"> of</font>

226
00:10:34,130 --> 00:10:37,850
the output generated<font color="#CCCCCC"> during</font><font color="#E5E5E5"> the training</font>

227
00:10:36,290 --> 00:10:40,010
you can see the model really<font color="#E5E5E5"> picked up</font>

228
00:10:37,850 --> 00:10:41,930
instantaneously<font color="#CCCCCC"> and there was nowhere</font>

229
00:10:40,010 --> 00:10:43,760
<font color="#E5E5E5">fitting this is the same graph over</font>

230
00:10:41,930 --> 00:10:46,400
logarithmic scale so<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see the</font>

231
00:10:43,760 --> 00:10:52,280
model<font color="#CCCCCC"> fillers a long way in this</font>

232
00:10:46,400 --> 00:10:55,220
apparently flat field here and it's

233
00:10:52,280 --> 00:10:59,120
<font color="#E5E5E5">Theory really picking up</font><font color="#CCCCCC"> and it stopped</font>

234
00:10:55,220 --> 00:11:01,450
by itself<font color="#E5E5E5"> after</font><font color="#CCCCCC"> entering the plateau</font><font color="#E5E5E5"> so</font>

235
00:10:59,120 --> 00:11:05,000
the results<font color="#CCCCCC"> five hours later which is</font>

236
00:11:01,450 --> 00:11:08,510
<font color="#CCCCCC">242 a box and 43,000</font><font color="#E5E5E5"> mini-batches</font>

237
00:11:05,000 --> 00:11:10,300
are these and this<font color="#E5E5E5"> is actual actual</font>

238
00:11:08,510 --> 00:11:13,520
<font color="#E5E5E5">figures</font>

239
00:11:10,300 --> 00:11:16,670
ripped out<font color="#CCCCCC"> from</font><font color="#E5E5E5"> yesterday</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> in July</font>

240
00:11:13,520 --> 00:11:19,819
<font color="#E5E5E5">was a</font><font color="#CCCCCC"> work frantically scrubbing through</font>

241
00:11:16,670 --> 00:11:21,439
<font color="#E5E5E5">my presentation to trick it so I removed</font>

242
00:11:19,820 --> 00:11:24,140
<font color="#CCCCCC">these two lines then these the human</font>

243
00:11:21,440 --> 00:11:26,960
their original<font color="#CCCCCC"> comet on the</font><font color="#E5E5E5"> validation</font>

244
00:11:24,140 --> 00:11:28,160
<font color="#CCCCCC">sets on no</font><font color="#E5E5E5"> peeking here so removed no</font>

245
00:11:26,960 --> 00:11:31,820
neither<font color="#E5E5E5"> imports the machine translation</font>

246
00:11:28,160 --> 00:11:33,529
said remove unused<font color="#E5E5E5"> import so the machine</font>

247
00:11:31,820 --> 00:11:37,790
<font color="#E5E5E5">really general generated that this</font>

248
00:11:33,529 --> 00:11:39,500
<font color="#E5E5E5">message</font><font color="#CCCCCC"> just looking at this</font><font color="#E5E5E5"> one and in</font>

249
00:11:37,790 --> 00:11:42,349
this case the messages are actually

250
00:11:39,500 --> 00:11:44,570
equal so at the table of contents in

251
00:11:42,350 --> 00:11:47,210
Python read me<font color="#E5E5E5"> and the Machine said</font>

252
00:11:44,570 --> 00:11:49,279
really<font color="#E5E5E5"> the same so this makes me</font><font color="#CCCCCC"> faint</font>

253
00:11:47,210 --> 00:11:52,730
there's a kind of a<font color="#CCCCCC"> repetition pattern</font>

254
00:11:49,279 --> 00:11:56,180
<font color="#E5E5E5">in the training</font><font color="#CCCCCC"> data the train</font><font color="#E5E5E5"> that was</font>

255
00:11:52,730 --> 00:11:58,820
shuffled<font color="#E5E5E5"> and was divided</font><font color="#CCCCCC"> so it should be</font>

256
00:11:56,180 --> 00:12:01,040
<font color="#E5E5E5">really I was</font><font color="#CCCCCC"> really cannot believe it</font>

257
00:11:58,820 --> 00:12:05,330
like<font color="#E5E5E5"> this because I thought the</font><font color="#CCCCCC"> machine</font>

258
00:12:01,040 --> 00:12:08,480
would<font color="#E5E5E5"> have tweaked it a little and this</font>

259
00:12:05,330 --> 00:12:11,570
one is nice<font color="#E5E5E5"> here we</font><font color="#CCCCCC"> are updating the</font>

260
00:12:08,480 --> 00:12:13,670
version of Gradle<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so update Gradle</font>

261
00:12:11,570 --> 00:12:17,270
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> said update a build</font>

262
00:12:13,670 --> 00:12:20,209
tools version so great<font color="#CCCCCC"> so he knows the</font>

263
00:12:17,270 --> 00:12:23,470
<font color="#CCCCCC">greater</font><font color="#E5E5E5"> is a build tool and yesterday I</font>

264
00:12:20,209 --> 00:12:23,469
was<font color="#E5E5E5"> updating the version actually</font>

265
00:12:24,830 --> 00:12:32,690
this is my favorite<font color="#E5E5E5"> so version 1 2 2 3</font>

266
00:12:29,380 --> 00:12:35,390
<font color="#E5E5E5">in the palm file of me I'm playing</font><font color="#CCCCCC"> him</font>

267
00:12:32,690 --> 00:12:37,430
<font color="#E5E5E5">update</font><font color="#CCCCCC"> the OS maven plug-in</font><font color="#E5E5E5"> to fix an</font>

268
00:12:35,390 --> 00:12:39,800
issue<font color="#E5E5E5"> with IntelliJ IDEA on</font><font color="#CCCCCC"> Windows</font>

269
00:12:37,430 --> 00:12:42,739
<font color="#CCCCCC">there was no way the machine</font><font color="#E5E5E5"> could</font>

270
00:12:39,800 --> 00:12:45,109
actually know that<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Windows the</font>

271
00:12:42,740 --> 00:12:47,060
developer had a problem<font color="#CCCCCC"> and so the</font>

272
00:12:45,110 --> 00:12:50,300
Machine<font color="#E5E5E5"> said upgrade the OS</font><font color="#CCCCCC"> Malan</font>

273
00:12:47,060 --> 00:12:52,339
<font color="#E5E5E5">plug-in to fix the build issue because</font>

274
00:12:50,300 --> 00:12:59,449
if you are fixing the<font color="#CCCCCC"> pond fire</font><font color="#E5E5E5"> you miss</font>

275
00:12:52,339 --> 00:13:02,600
the yellow-billed issue and this is the

276
00:12:59,450 --> 00:13:04,820
actual<font color="#CCCCCC"> plot of the neurons</font><font color="#E5E5E5"> in the</font>

277
00:13:02,600 --> 00:13:08,330
<font color="#CCCCCC">attentional model so ok let me just go</font>

278
00:13:04,820 --> 00:13:10,700
<font color="#CCCCCC">through these</font><font color="#E5E5E5"> here you can see the patch</font>

279
00:13:08,330 --> 00:13:14,089
<font color="#E5E5E5">the coming message so is everything like</font>

280
00:13:10,700 --> 00:13:16,370
these remedies in just one line<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> and</font>

281
00:13:14,089 --> 00:13:19,430
you<font color="#E5E5E5"> can see here the messager that was</font>

282
00:13:16,370 --> 00:13:21,800
output upgrade OS mom and plug in<font color="#E5E5E5"> to fix</font>

283
00:13:19,430 --> 00:13:23,630
the Builder issue<font color="#CCCCCC"> it's really</font><font color="#E5E5E5"> cramped</font>

284
00:13:21,800 --> 00:13:26,390
<font color="#CCCCCC">because these are fix at</font><font color="#E5E5E5"> the</font>

285
00:13:23,630 --> 00:13:28,430
representation<font color="#E5E5E5"> graph and so the labels</font>

286
00:13:26,390 --> 00:13:31,640
will jump one another and here you can

287
00:13:28,430 --> 00:13:34,279
see that by<font color="#CCCCCC"> Luke these Armenians who got</font>

288
00:13:31,640 --> 00:13:38,360
<font color="#E5E5E5">activated so whenever you see blank</font>

289
00:13:34,279 --> 00:13:40,820
space you<font color="#E5E5E5"> actually are seeing</font><font color="#CCCCCC"> Nero's the</font>

290
00:13:38,360 --> 00:13:43,070
<font color="#CCCCCC">dealer fire</font><font color="#E5E5E5"> up so you it's a</font><font color="#CCCCCC"> magic</font>

291
00:13:40,820 --> 00:13:45,649
<font color="#E5E5E5">matrix</font><font color="#CCCCCC"> multiplication so if you multiply</font>

292
00:13:43,070 --> 00:13:49,279
your input in a<font color="#CCCCCC"> matrix</font><font color="#E5E5E5"> you obtain other</font>

293
00:13:45,649 --> 00:13:53,570
matrix as an output or<font color="#CCCCCC"> obtain</font><font color="#E5E5E5"> how to</font>

294
00:13:49,279 --> 00:13:56,510
feel and so the neurons<font color="#CCCCCC"> actually have</font>

295
00:13:53,570 --> 00:13:59,240
the highest<font color="#E5E5E5"> score they are activated</font><font color="#CCCCCC"> ok</font>

296
00:13:56,510 --> 00:14:00,740
<font color="#E5E5E5">like standard neural network stuff and</font>

297
00:13:59,240 --> 00:14:02,540
the<font color="#E5E5E5"> needles who have a low score</font>

298
00:14:00,740 --> 00:14:04,430
actually<font color="#E5E5E5"> didn't fire up this because</font>

299
00:14:02,540 --> 00:14:06,800
there was no matching<font color="#E5E5E5"> like a template</font>

300
00:14:04,430 --> 00:14:08,870
<font color="#E5E5E5">between the input and the output</font><font color="#CCCCCC"> like</font>

301
00:14:06,800 --> 00:14:11,870
the input<font color="#E5E5E5"> vector running over them over</font>

302
00:14:08,870 --> 00:14:17,240
the matrix<font color="#CCCCCC"> ok so here we are plotting</font>

303
00:14:11,870 --> 00:14:19,160
<font color="#CCCCCC">the real</font><font color="#E5E5E5"> slot numbers as a grayscale so</font>

304
00:14:17,240 --> 00:14:22,370
<font color="#E5E5E5">the high is the numbers</font><font color="#CCCCCC"> the high is the</font>

305
00:14:19,160 --> 00:14:25,399
correlation<font color="#E5E5E5"> between</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> input and this</font>

306
00:14:22,370 --> 00:14:28,790
output<font color="#CCCCCC"> here</font><font color="#E5E5E5"> so you can see the upgrade</font>

307
00:14:25,399 --> 00:14:33,199
OS<font color="#CCCCCC"> melon actually triggered when is so</font>

308
00:14:28,790 --> 00:14:34,839
artifact ID words and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Mahlon</font><font color="#E5E5E5"> and here</font>

309
00:14:33,199 --> 00:14:38,120
to fix<font color="#E5E5E5"> the bill</font><font color="#CCCCCC"> issue</font>

310
00:14:34,839 --> 00:14:44,600
<font color="#E5E5E5">triggered a lot when it's a when is</font>

311
00:14:38,120 --> 00:14:46,730
so<font color="#E5E5E5"> melon so melon is a synonym</font><font color="#CCCCCC"> for build</font>

312
00:14:44,600 --> 00:14:48,170
issue because if you're changing<font color="#CCCCCC"> your</font>

313
00:14:46,730 --> 00:14:50,210
pom file<font color="#CCCCCC"> it means that you have a</font>

314
00:14:48,170 --> 00:14:52,699
serious problem building up<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> where</font>

315
00:14:50,210 --> 00:14:54,950
<font color="#E5E5E5">the</font><font color="#CCCCCC"> machine learn a</font><font color="#E5E5E5"> CLE and the graph</font>

316
00:14:52,700 --> 00:14:58,160
goes this way<font color="#E5E5E5"> because</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> start from the</font>

317
00:14:54,950 --> 00:15:03,890
first word which<font color="#CCCCCC"> are the top D</font><font color="#E5E5E5"> and here</font>

318
00:14:58,160 --> 00:15:09,020
so the gradients<font color="#CCCCCC"> Falls like this so was</font>

319
00:15:03,890 --> 00:15:10,460
everything<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> success well</font><font color="#E5E5E5"> for</font>

320
00:15:09,020 --> 00:15:14,810
<font color="#E5E5E5">those who are not acquainted with</font>

321
00:15:10,460 --> 00:15:16,130
machine translation<font color="#CCCCCC"> Linko lingo the the</font>

322
00:15:14,810 --> 00:15:18,140
metric that<font color="#E5E5E5"> we use the machine</font>

323
00:15:16,130 --> 00:15:22,010
translation<font color="#CCCCCC"> is a called blue which is a</font>

324
00:15:18,140 --> 00:15:24,650
<font color="#E5E5E5">bilingual evaluation URL remember</font><font color="#CCCCCC"> it is</font>

325
00:15:22,010 --> 00:15:27,589
but the fact<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that we actually compare</font>

326
00:15:24,650 --> 00:15:29,839
<font color="#CCCCCC">the output of a machine translation and</font>

327
00:15:27,589 --> 00:15:32,750
a human translation and we count the

328
00:15:29,839 --> 00:15:36,020
<font color="#CCCCCC">Angra the words in</font><font color="#E5E5E5"> common between the</font>

329
00:15:32,750 --> 00:15:39,050
original<font color="#E5E5E5"> and</font><font color="#CCCCCC"> this one it's</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> scaled</font>

330
00:15:36,020 --> 00:15:41,060
<font color="#E5E5E5">between 0 and 100 it's actually</font>

331
00:15:39,050 --> 00:15:42,260
impossible to get 100 even<font color="#E5E5E5"> for a human</font>

332
00:15:41,060 --> 00:15:43,819
because it means that<font color="#E5E5E5"> you should</font><font color="#CCCCCC"> have</font>

333
00:15:42,260 --> 00:15:46,400
written exact the same<font color="#E5E5E5"> thing</font>

334
00:15:43,820 --> 00:15:48,380
so this metric<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not very good by the</font>

335
00:15:46,400 --> 00:15:52,040
<font color="#CCCCCC">standard and it tells you if you</font><font color="#E5E5E5"> have a</font>

336
00:15:48,380 --> 00:15:57,380
very low<font color="#E5E5E5"> BLISK or a low blood score is</font>

337
00:15:52,040 --> 00:16:00,279
<font color="#E5E5E5">actually 15 10 your model sucks</font><font color="#CCCCCC"> if you</font>

338
00:15:57,380 --> 00:16:06,890
have a high blue score and the fluency

339
00:16:00,279 --> 00:16:10,130
starts to popping in at 18 20 so for

340
00:16:06,890 --> 00:16:12,230
example 26 is a nice<font color="#CCCCCC"> blue score and</font>

341
00:16:10,130 --> 00:16:15,890
state of the art which<font color="#E5E5E5"> is google</font>

342
00:16:12,230 --> 00:16:17,839
translator on fluent language is<font color="#CCCCCC"> 34</font><font color="#E5E5E5"> the</font>

343
00:16:15,890 --> 00:16:20,360
experiment original experiments of the

344
00:16:17,839 --> 00:16:22,190
jungle<font color="#CCCCCC"> macmillan was 33 we obtain 37</font>

345
00:16:20,360 --> 00:16:22,920
because we were armed with<font color="#E5E5E5"> a better</font>

346
00:16:22,190 --> 00:16:26,179
architecture

347
00:16:22,920 --> 00:16:26,179
[Applause]

348
00:16:26,180 --> 00:16:33,109
and<font color="#CCCCCC"> these the character and graham F</font>

349
00:16:30,860 --> 00:16:36,170
score of 40 which is stellar

350
00:16:33,110 --> 00:16:38,990
so precision recall<font color="#E5E5E5"> is</font><font color="#CCCCCC"> 40% which</font><font color="#E5E5E5"> is</font>

351
00:16:36,170 --> 00:16:41,899
really really<font color="#E5E5E5"> high</font><font color="#CCCCCC"> watch out if you get</font>

352
00:16:38,990 --> 00:16:43,100
a<font color="#E5E5E5"> too high blur score like 70 it means</font>

353
00:16:41,899 --> 00:16:45,140
that<font color="#E5E5E5"> something is</font><font color="#CCCCCC"> totally wrong</font><font color="#E5E5E5"> because</font>

354
00:16:43,100 --> 00:16:46,700
you're<font color="#CCCCCC"> just</font><font color="#E5E5E5"> copying you're just feeding</font>

355
00:16:45,140 --> 00:16:48,589
<font color="#E5E5E5">the validation input as a training</font>

356
00:16:46,700 --> 00:16:50,630
sequence so you<font color="#E5E5E5"> cannot just learn</font><font color="#CCCCCC"> that</font>

357
00:16:48,589 --> 00:16:53,450
<font color="#E5E5E5">so the model has learned that fluent</font>

358
00:16:50,630 --> 00:16:56,959
English it outputs perfect<font color="#E5E5E5"> English</font>

359
00:16:53,450 --> 00:16:59,810
<font color="#CCCCCC">phrase and it spotted very interesting</font>

360
00:16:56,959 --> 00:17:04,040
correlations in short<font color="#CCCCCC"> commit</font><font color="#E5E5E5"> pad and</font>

361
00:16:59,810 --> 00:17:07,250
patches so<font color="#E5E5E5"> okay you talked briefly about</font>

362
00:17:04,040 --> 00:17:09,770
history<font color="#E5E5E5"> of success why do you talk about</font>

363
00:17:07,250 --> 00:17:12,349
<font color="#E5E5E5">failure well because then I said okay we</font>

364
00:17:09,770 --> 00:17:14,689
are really<font color="#CCCCCC"> using a very constrained</font><font color="#E5E5E5"> data</font>

365
00:17:12,349 --> 00:17:16,750
set<font color="#E5E5E5"> let's just try to remove a lot of</font>

366
00:17:14,689 --> 00:17:21,949
constraint<font color="#E5E5E5"> and see how it performs of</font>

367
00:17:16,750 --> 00:17:23,750
<font color="#CCCCCC">widely Komets well actually I</font><font color="#E5E5E5"> didn't get</font>

368
00:17:21,949 --> 00:17:27,439
<font color="#E5E5E5">the very good results because</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> hurried</font>

369
00:17:23,750 --> 00:17:30,860
for long patches is embarrassing a lot

370
00:17:27,439 --> 00:17:33,200
<font color="#E5E5E5">of sentences</font><font color="#CCCCCC"> also are good English are</font>

371
00:17:30,860 --> 00:17:35,780
truly in current with their<font color="#CCCCCC"> inputs</font><font color="#E5E5E5"> and</font>

372
00:17:33,200 --> 00:17:38,390
that's why the data set is so picky so

373
00:17:35,780 --> 00:17:41,450
well<font color="#CCCCCC"> chosen</font><font color="#E5E5E5"> for example and I have a lot</font>

374
00:17:38,390 --> 00:17:42,650
of these the human I won't show you<font color="#CCCCCC"> the</font>

375
00:17:41,450 --> 00:17:45,170
patch because<font color="#E5E5E5"> doesn't matter but the</font>

376
00:17:42,650 --> 00:17:49,040
human coming was<font color="#CCCCCC"> to change default FBO</font>

377
00:17:45,170 --> 00:17:50,300
<font color="#CCCCCC">cache size to 0 machine add the news and</font>

378
00:17:49,040 --> 00:17:53,270
import for no pass

379
00:17:50,300 --> 00:17:54,770
there was no no pasa<font color="#E5E5E5"> thing anywhere</font>

380
00:17:53,270 --> 00:17:57,920
<font color="#CCCCCC">there was no</font><font color="#E5E5E5"> imports</font>

381
00:17:54,770 --> 00:17:59,990
there was nothing related to<font color="#E5E5E5"> that so</font>

382
00:17:57,920 --> 00:18:02,570
<font color="#E5E5E5">wide the reason and these are the things</font>

383
00:17:59,990 --> 00:18:04,400
that<font color="#E5E5E5"> God gets interesting so you learned</font>

384
00:18:02,570 --> 00:18:06,860
the most<font color="#E5E5E5"> of the technology when you</font>

385
00:18:04,400 --> 00:18:08,120
<font color="#E5E5E5">watch it</font><font color="#CCCCCC"> fail</font><font color="#E5E5E5"> you know you look at stuck</font>

386
00:18:06,860 --> 00:18:10,669
<font color="#E5E5E5">a trace and</font><font color="#CCCCCC"> you know how the</font>

387
00:18:08,120 --> 00:18:14,510
dependencies are doing<font color="#CCCCCC"> you see an edge</font>

388
00:18:10,670 --> 00:18:16,820
case and you<font color="#E5E5E5"> know better your model</font><font color="#CCCCCC"> so</font>

389
00:18:14,510 --> 00:18:20,360
this turns out<font color="#CCCCCC"> to be an</font><font color="#E5E5E5"> extremely</font>

390
00:18:16,820 --> 00:18:22,909
difficult<font color="#E5E5E5"> task in practice because</font><font color="#CCCCCC"> Vania</font>

391
00:18:20,360 --> 00:18:26,389
<font color="#E5E5E5">machine translation architecture is not</font>

392
00:18:22,910 --> 00:18:28,340
<font color="#CCCCCC">the tuned for this particular task</font><font color="#E5E5E5"> so</font>

393
00:18:26,390 --> 00:18:30,380
for<font color="#E5E5E5"> example we have when you're</font>

394
00:18:28,340 --> 00:18:33,889
translating<font color="#E5E5E5"> English to French you</font><font color="#CCCCCC"> have</font>

395
00:18:30,380 --> 00:18:37,309
sentences which are kind same<font color="#CCCCCC"> lines</font>

396
00:18:33,890 --> 00:18:40,070
<font color="#CCCCCC">approx see actually translating English</font>

397
00:18:37,309 --> 00:18:43,090
to French is so easy that<font color="#E5E5E5"> is busy</font>

398
00:18:40,070 --> 00:18:45,320
not taken<font color="#E5E5E5"> even into account because</font><font color="#CCCCCC"> it's</font>

399
00:18:43,090 --> 00:18:47,629
too much<font color="#CCCCCC"> of a easy task</font>

400
00:18:45,320 --> 00:18:51,950
instead we shifted towards English to

401
00:18:47,629 --> 00:18:53,988
German<font color="#E5E5E5"> because the the formation</font><font color="#CCCCCC"> process</font>

402
00:18:51,950 --> 00:18:55,970
of the<font color="#E5E5E5"> sentence is it's much is very</font>

403
00:18:53,989 --> 00:18:58,700
<font color="#E5E5E5">difficult in German which you are</font>

404
00:18:55,970 --> 00:19:02,739
<font color="#E5E5E5">concatenated stuff respect to English</font>

405
00:18:58,700 --> 00:19:05,600
and but you have<font color="#CCCCCC"> the kind</font><font color="#E5E5E5"> of a growing</font>

406
00:19:02,739 --> 00:19:07,759
ratio which makes the<font color="#E5E5E5"> percent on this</font>

407
00:19:05,600 --> 00:19:10,908
not too much in bands and<font color="#E5E5E5"> so 32 words</font>

408
00:19:07,759 --> 00:19:14,149
against 40<font color="#E5E5E5"> words maybe or 20 because you</font>

409
00:19:10,909 --> 00:19:16,609
concatenate<font color="#E5E5E5"> instead here with dispatches</font>

410
00:19:14,149 --> 00:19:18,789
<font color="#E5E5E5">and a pitiful commit message you have an</font>

411
00:19:16,609 --> 00:19:21,710
<font color="#CCCCCC">imbalance of which is stand fold and</font>

412
00:19:18,789 --> 00:19:24,590
this what leads us to the fact<font color="#E5E5E5"> that the</font>

413
00:19:21,710 --> 00:19:27,109
decoder is fluent<font color="#E5E5E5"> because the</font><font color="#CCCCCC"> output</font><font color="#E5E5E5"> is</font>

414
00:19:24,590 --> 00:19:31,519
always<font color="#E5E5E5"> within 10 tokens on average 10</font>

415
00:19:27,109 --> 00:19:33,978
words so<font color="#E5E5E5"> you actually have recurrent</font>

416
00:19:31,519 --> 00:19:36,320
neural networks with<font color="#E5E5E5"> unfolds</font><font color="#CCCCCC"> 10 times</font>

417
00:19:33,979 --> 00:19:39,049
<font color="#E5E5E5">he's able to generalize well and to</font>

418
00:19:36,320 --> 00:19:41,599
output fluent English but then you have

419
00:19:39,049 --> 00:19:44,090
very poor context performance<font color="#E5E5E5"> so if you</font>

420
00:19:41,599 --> 00:19:45,918
output<font color="#E5E5E5"> very fluent English sentence</font>

421
00:19:44,090 --> 00:19:48,080
which is totally in current with

422
00:19:45,919 --> 00:19:52,999
<font color="#E5E5E5">dispatch</font><font color="#CCCCCC"> it means that the encoder</font>

423
00:19:48,080 --> 00:19:56,509
<font color="#E5E5E5">network this one remember</font><font color="#CCCCCC"> is not able to</font>

424
00:19:52,999 --> 00:19:58,159
condition<font color="#CCCCCC"> appropriately</font><font color="#E5E5E5"> the decoder so</font>

425
00:19:56,509 --> 00:20:00,769
you are not<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to capture any</font>

426
00:19:58,159 --> 00:20:03,799
meaningful context<font color="#E5E5E5"> to fit with the coder</font>

427
00:20:00,769 --> 00:20:06,169
<font color="#E5E5E5">in order to instruct it</font><font color="#CCCCCC"> while what</font>

428
00:20:03,799 --> 00:20:10,129
should be generating so it generates

429
00:20:06,169 --> 00:20:13,519
random<font color="#E5E5E5"> fluent words so totally get rich</font>

430
00:20:10,129 --> 00:20:17,658
which looks<font color="#E5E5E5"> like very nice English but</font>

431
00:20:13,519 --> 00:20:20,330
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> not conditioning and not even a</font>

432
00:20:17,659 --> 00:20:22,729
human can remember<font color="#E5E5E5"> of 500 words context</font>

433
00:20:20,330 --> 00:20:25,519
and this is not about a vanishing

434
00:20:22,729 --> 00:20:28,999
gradient<font color="#E5E5E5"> a problem because the LSD</font><font color="#CCCCCC"> emma</font>

435
00:20:25,519 --> 00:20:29,389
<font color="#E5E5E5">is able to prevent that by way of 500</font>

436
00:20:28,999 --> 00:20:31,820
<font color="#CCCCCC">lines</font>

437
00:20:29,389 --> 00:20:34,820
<font color="#E5E5E5">it cannot</font><font color="#CCCCCC"> just carry</font><font color="#E5E5E5"> out enough context</font>

438
00:20:31,820 --> 00:20:38,029
and the attention<font color="#E5E5E5"> model who just is</font>

439
00:20:34,820 --> 00:20:40,879
supposed to link the<font color="#E5E5E5"> exactly input word</font>

440
00:20:38,029 --> 00:20:45,679
to the exact<font color="#E5E5E5"> up word cannot keep up with</font>

441
00:20:40,879 --> 00:20:48,498
<font color="#E5E5E5">such</font><font color="#CCCCCC"> a lengthy inputs</font><font color="#E5E5E5"> and this is our</font>

442
00:20:45,679 --> 00:20:50,389
fault actually<font color="#CCCCCC"> because the dispatcher</font>

443
00:20:48,499 --> 00:20:53,790
<font color="#E5E5E5">can't it's</font><font color="#CCCCCC"> too complex</font>

444
00:20:50,389 --> 00:20:57,659
it contains<font color="#E5E5E5"> insertions</font><font color="#CCCCCC"> ablations</font>

445
00:20:53,790 --> 00:21:00,540
<font color="#CCCCCC">contacts things</font><font color="#E5E5E5"> and so we are just the</font>

446
00:20:57,660 --> 00:21:03,330
cramming together<font color="#E5E5E5"> too much stuff so this</font>

447
00:21:00,540 --> 00:21:07,080
approach with this<font color="#E5E5E5"> current</font><font color="#CCCCCC"> architecture</font>

448
00:21:03,330 --> 00:21:09,449
is<font color="#CCCCCC"> just doomed to take so much further</font>

449
00:21:07,080 --> 00:21:11,580
<font color="#CCCCCC">also there</font><font color="#E5E5E5"> are memory problems because</font>

450
00:21:09,450 --> 00:21:12,900
if you are unfolding<font color="#E5E5E5"> 500 the times are</font>

451
00:21:11,580 --> 00:21:14,879
<font color="#CCCCCC">occur in</font><font color="#E5E5E5"> your network your memory will</font>

452
00:21:12,900 --> 00:21:17,370
explode<font color="#E5E5E5"> so a good mirror</font><font color="#CCCCCC"> machine</font>

453
00:21:14,880 --> 00:21:19,620
translation works well<font color="#E5E5E5"> the transformer</font>

454
00:21:17,370 --> 00:21:21,840
which is the<font color="#E5E5E5"> state</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the art in</font>

455
00:21:19,620 --> 00:21:24,209
sequence with<font color="#E5E5E5"> English model goes out of</font>

456
00:21:21,840 --> 00:21:28,080
<font color="#E5E5E5">memory instantaneously as as soon as the</font>

457
00:21:24,210 --> 00:21:31,140
training<font color="#E5E5E5"> just begins so I'm proposing</font>

458
00:21:28,080 --> 00:21:33,840
<font color="#CCCCCC">here a better architecture so the main</font>

459
00:21:31,140 --> 00:21:35,610
source<font color="#E5E5E5"> of chaos stems from the input</font>

460
00:21:33,840 --> 00:21:37,620
length and a<font color="#E5E5E5"> complexity because we are</font>

461
00:21:35,610 --> 00:21:40,439
cramming<font color="#E5E5E5"> together insertions so new</font>

462
00:21:37,620 --> 00:21:42,750
lines of coding green ablations<font color="#E5E5E5"> the red</font>

463
00:21:40,440 --> 00:21:44,370
lines we<font color="#CCCCCC"> were</font><font color="#E5E5E5"> moving and the context the</font>

464
00:21:42,750 --> 00:21:46,770
white lines that's just telling<font color="#CCCCCC"> you</font>

465
00:21:44,370 --> 00:21:49,770
where you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> it will make much more</font>

466
00:21:46,770 --> 00:21:51,360
sense to<font color="#E5E5E5"> adopt a multi-encoder</font><font color="#CCCCCC"> network</font>

467
00:21:49,770 --> 00:21:53,670
in which we use an encoder for in

468
00:21:51,360 --> 00:21:56,250
session<font color="#E5E5E5"> one for ablation one for context</font>

469
00:21:53,670 --> 00:22:00,270
<font color="#E5E5E5">and then a hierarchical attention</font>

470
00:21:56,250 --> 00:22:01,740
<font color="#CCCCCC">network to tell what is the encoder</font>

471
00:22:00,270 --> 00:22:03,570
which is not<font color="#CCCCCC"> influenced should be</font>

472
00:22:01,740 --> 00:22:05,310
actually disregarded them and then<font color="#E5E5E5"> just</font>

473
00:22:03,570 --> 00:22:08,070
<font color="#E5E5E5">want the go to funnel</font><font color="#CCCCCC"> out everything</font>

474
00:22:05,310 --> 00:22:09,720
outside<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> much in the</font><font color="#E5E5E5"> spirit of</font>

475
00:22:08,070 --> 00:22:11,639
the transform actually because the

476
00:22:09,720 --> 00:22:13,950
transformer is a sequence to sequence

477
00:22:11,640 --> 00:22:16,410
<font color="#CCCCCC">network which don't use any recurrent</font>

478
00:22:13,950 --> 00:22:19,530
neural networks and just uses attention

479
00:22:16,410 --> 00:22:22,320
machines with multi attention heads

480
00:22:19,530 --> 00:22:24,270
<font color="#E5E5E5">eight of them actually looking at ending</font>

481
00:22:22,320 --> 00:22:26,550
at different parts<font color="#CCCCCC"> of the code</font><font color="#E5E5E5"> and so</font>

482
00:22:24,270 --> 00:22:29,100
you have<font color="#E5E5E5"> different</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> that different</font>

483
00:22:26,550 --> 00:22:31,020
moving parts are tending<font color="#E5E5E5"> to different</font>

484
00:22:29,100 --> 00:22:33,270
parts of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> input and</font><font color="#E5E5E5"> the output and</font>

485
00:22:31,020 --> 00:22:36,900
<font color="#E5E5E5">let's give gives it a lot</font><font color="#CCCCCC"> of nice</font>

486
00:22:33,270 --> 00:22:39,300
performances<font color="#E5E5E5"> so remember</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> which you</font>

487
00:22:36,900 --> 00:22:40,890
have a very<font color="#E5E5E5"> natural way to separate</font>

488
00:22:39,300 --> 00:22:42,740
context because you know<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

489
00:22:40,890 --> 00:22:45,180
ablation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this the insertion and</font>

490
00:22:42,740 --> 00:22:48,510
everything which doesn't have<font color="#E5E5E5"> a minus or</font>

491
00:22:45,180 --> 00:22:50,790
plus<font color="#CCCCCC"> is just the context</font><font color="#E5E5E5"> so what I</font>

492
00:22:48,510 --> 00:22:54,600
propose<font color="#E5E5E5"> is that we get this very same</font>

493
00:22:50,790 --> 00:22:57,060
<font color="#CCCCCC">thing blurred out and we stash the lines</font>

494
00:22:54,600 --> 00:22:59,510
<font color="#E5E5E5">pertaining to a context no matter where</font>

495
00:22:57,060 --> 00:23:02,970
they are<font color="#CCCCCC"> internet several encoder and</font>

496
00:22:59,510 --> 00:23:05,970
the same holds<font color="#CCCCCC"> for ablation insertion we</font>

497
00:23:02,970 --> 00:23:07,620
in<font color="#CCCCCC"> an attention model in between</font><font color="#E5E5E5"> just to</font>

498
00:23:05,970 --> 00:23:09,299
<font color="#E5E5E5">that watch are the relevant parts</font>

499
00:23:07,620 --> 00:23:11,189
and then we feed<font color="#CCCCCC"> all these three</font>

500
00:23:09,299 --> 00:23:15,539
attentions<font color="#CCCCCC"> throughout a global attention</font>

501
00:23:11,190 --> 00:23:17,549
<font color="#E5E5E5">and that goes into a decoder the input</font>

502
00:23:15,539 --> 00:23:21,179
complexity<font color="#CCCCCC"> the advantage</font><font color="#E5E5E5"> is that it's</font>

503
00:23:17,549 --> 00:23:22,980
factored<font color="#CCCCCC"> in two</font><font color="#E5E5E5"> subparts the speed is</font>

504
00:23:21,179 --> 00:23:25,679
unimpacted because you have the same

505
00:23:22,980 --> 00:23:29,970
<font color="#E5E5E5">number of the matrix multiplication plus</font>

506
00:23:25,679 --> 00:23:32,130
<font color="#E5E5E5">three and same number I mean one for</font>

507
00:23:29,970 --> 00:23:36,539
each time<font color="#E5E5E5"> you unfold so if you have a</font>

508
00:23:32,130 --> 00:23:38,880
500<font color="#E5E5E5"> longer input you do 500 at least the</font>

509
00:23:36,539 --> 00:23:41,129
matrix multiplication<font color="#CCCCCC"> inria</font><font color="#E5E5E5"> you write</font>

510
00:23:38,880 --> 00:23:43,289
<font color="#CCCCCC">either</font><font color="#E5E5E5"> many more because you</font><font color="#CCCCCC"> much more</font>

511
00:23:41,130 --> 00:23:45,510
for the input<font color="#E5E5E5"> you much more each</font><font color="#CCCCCC"> time</font>

512
00:23:43,289 --> 00:23:48,090
you compute a new step and you much more

513
00:23:45,510 --> 00:23:51,149
for the output so<font color="#E5E5E5"> three times instead</font>

514
00:23:48,090 --> 00:23:56,250
<font color="#E5E5E5">since you are factorizing the 500 in 100</font>

515
00:23:51,149 --> 00:23:58,770
100 100<font color="#E5E5E5"> it 300</font><font color="#CCCCCC"> li you have</font><font color="#E5E5E5"> the same</font>

516
00:23:56,250 --> 00:24:00,630
number<font color="#E5E5E5"> you only have</font><font color="#CCCCCC"> three and the</font>

517
00:23:58,770 --> 00:24:03,179
<font color="#E5E5E5">precision is expected to</font><font color="#CCCCCC"> actually</font>

518
00:24:00,630 --> 00:24:04,890
improve a lot better<font color="#E5E5E5"> so instead of a</font>

519
00:24:03,179 --> 00:24:07,950
<font color="#E5E5E5">traditional attention where you actually</font>

520
00:24:04,890 --> 00:24:10,640
<font color="#E5E5E5">take a short stage you do a dot product</font>

521
00:24:07,950 --> 00:24:13,590
<font color="#E5E5E5">tension between all of these then you</font>

522
00:24:10,640 --> 00:24:18,179
scored them between<font color="#CCCCCC"> zero and one to say</font>

523
00:24:13,590 --> 00:24:20,250
what is<font color="#E5E5E5"> the state which is actually most</font>

524
00:24:18,179 --> 00:24:22,890
pertaining to that<font color="#E5E5E5"> current</font><font color="#CCCCCC"> state and</font>

525
00:24:20,250 --> 00:24:26,659
then you move some together<font color="#E5E5E5"> all these</font>

526
00:24:22,890 --> 00:24:29,340
faded<font color="#CCCCCC"> states except for the one which is</font>

527
00:24:26,659 --> 00:24:34,200
the most<font color="#E5E5E5"> pertaining and you feel it to</font>

528
00:24:29,340 --> 00:24:37,500
decoder<font color="#E5E5E5"> I'm proposing to doing this so</font>

529
00:24:34,200 --> 00:24:39,510
you take the hidden<font color="#E5E5E5"> state h0 you feed</font>

530
00:24:37,500 --> 00:24:41,669
into<font color="#CCCCCC"> the ablation attention and to</font>

531
00:24:39,510 --> 00:24:43,950
insertion attention for example<font color="#CCCCCC"> you</font>

532
00:24:41,669 --> 00:24:47,880
<font color="#E5E5E5">compute the weight against the ablation</font>

533
00:24:43,950 --> 00:24:51,210
so what are we<font color="#E5E5E5"> supposed to get out of</font>

534
00:24:47,880 --> 00:24:53,039
the ablation lines<font color="#E5E5E5"> okay how the current</font>

535
00:24:51,210 --> 00:24:57,059
state how the probability of<font color="#CCCCCC"> generating</font>

536
00:24:53,039 --> 00:25:00,658
the next<font color="#E5E5E5"> English word correlates with</font>

537
00:24:57,059 --> 00:25:02,340
the<font color="#E5E5E5"> lines that were actually deleted you</font>

538
00:25:00,659 --> 00:25:05,850
do the<font color="#E5E5E5"> same for the lines that were</font>

539
00:25:02,340 --> 00:25:07,500
inserted<font color="#E5E5E5"> and then you feed</font><font color="#CCCCCC"> get the two</font>

540
00:25:05,850 --> 00:25:08,939
attentions into a global<font color="#CCCCCC"> attention</font>

541
00:25:07,500 --> 00:25:13,140
<font color="#E5E5E5">vector in which the inputs are not</font>

542
00:25:08,940 --> 00:25:16,080
<font color="#CCCCCC">engine</font><font color="#E5E5E5"> states but are the summation the</font>

543
00:25:13,140 --> 00:25:19,559
attention output in<font color="#CCCCCC"> that global tension</font>

544
00:25:16,080 --> 00:25:20,699
you decide which is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> next word</font><font color="#CCCCCC"> that</font>

545
00:25:19,559 --> 00:25:23,710
you<font color="#CCCCCC"> should be</font>

546
00:25:20,700 --> 00:25:28,179
generating<font color="#E5E5E5"> based on the fact that you</font>

547
00:25:23,710 --> 00:25:30,400
are<font color="#E5E5E5"> seeing these ablation context</font><font color="#CCCCCC"> and</font>

548
00:25:28,179 --> 00:25:34,929
this insertion context<font color="#E5E5E5"> so know more</font>

549
00:25:30,400 --> 00:25:37,450
about current just one single flat<font color="#CCCCCC"> to</font>

550
00:25:34,929 --> 00:25:40,150
space<font color="#E5E5E5"> no matter if it's ablation or</font>

551
00:25:37,450 --> 00:25:41,710
insertion<font color="#E5E5E5"> but you just factor</font><font color="#CCCCCC"> out by</font>

552
00:25:40,150 --> 00:25:44,650
hierarchically distributing the

553
00:25:41,710 --> 00:25:47,289
complexity<font color="#E5E5E5"> this is to be coded of course</font>

554
00:25:44,650 --> 00:25:49,539
because it's a proposal<font color="#E5E5E5"> and it's a thing</font>

555
00:25:47,289 --> 00:25:51,789
<font color="#CCCCCC">that I'm I like to</font><font color="#E5E5E5"> actually realize it's</font>

556
00:25:49,539 --> 00:25:55,240
<font color="#E5E5E5">not</font><font color="#CCCCCC"> that technically the</font><font color="#E5E5E5"> field actually</font>

557
00:25:51,789 --> 00:25:57,070
<font color="#CCCCCC">it's just a novel architecture</font><font color="#E5E5E5"> and this</font>

558
00:25:55,240 --> 00:25:58,539
basically<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the Android presentation</font>

559
00:25:57,070 --> 00:26:00,850
you find everything<font color="#E5E5E5"> in my</font><font color="#CCCCCC"> github</font>

560
00:25:58,539 --> 00:26:02,649
<font color="#E5E5E5">repository</font><font color="#CCCCCC"> agent</font><font color="#E5E5E5"> I vanilla</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> never</font>

561
00:26:00,850 --> 00:26:03,939
<font color="#CCCCCC">commits</font><font color="#E5E5E5"> gesture everything is on the</font>

562
00:26:02,649 --> 00:26:22,270
slides you can<font color="#E5E5E5"> download the website</font>

563
00:26:03,940 --> 00:26:24,039
thanks everybody for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> attention if</font>

564
00:26:22,270 --> 00:26:32,820
<font color="#E5E5E5">you don't do any question I</font><font color="#CCCCCC"> will keep</font>

565
00:26:24,039 --> 00:26:32,820
telling jokes no questions here<font color="#E5E5E5"> please</font>

566
00:26:38,990 --> 00:26:46,980
<font color="#E5E5E5">okay so the question was why if it was</font>

567
00:26:43,920 --> 00:26:50,280
feasible to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> generative adversarial</font>

568
00:26:46,980 --> 00:26:52,580
networks of which are kind of<font color="#E5E5E5"> the neural</font>

569
00:26:50,280 --> 00:26:55,770
<font color="#CCCCCC">enteric detector</font><font color="#E5E5E5"> in which you have two</font>

570
00:26:52,580 --> 00:26:59,270
networks which play a game<font color="#E5E5E5"> one against</font>

571
00:26:55,770 --> 00:27:02,670
<font color="#E5E5E5">each other one tries</font><font color="#CCCCCC"> to generate a nice</font>

572
00:26:59,270 --> 00:27:05,150
sentence<font color="#CCCCCC"> and the other one has to detect</font>

573
00:27:02,670 --> 00:27:08,310
if we was generated by<font color="#CCCCCC"> human</font><font color="#E5E5E5"> or by</font>

574
00:27:05,150 --> 00:27:10,110
<font color="#E5E5E5">machine and so you have a generator and</font>

575
00:27:08,310 --> 00:27:11,909
<font color="#CCCCCC">a discriminator which tries not to get</font>

576
00:27:10,110 --> 00:27:14,729
fooled<font color="#E5E5E5"> by the other and in the training</font>

577
00:27:11,910 --> 00:27:16,620
<font color="#CCCCCC">they compete to be to be better</font><font color="#E5E5E5"> and in</font>

578
00:27:14,730 --> 00:27:20,610
the end you<font color="#E5E5E5"> have yes this is perfectly</font>

579
00:27:16,620 --> 00:27:23,669
doable because<font color="#CCCCCC"> Ganz</font><font color="#E5E5E5"> can be</font><font color="#CCCCCC"> actually used</font>

580
00:27:20,610 --> 00:27:25,560
for<font color="#E5E5E5"> natural language</font><font color="#CCCCCC"> processing it will</font>

581
00:27:23,670 --> 00:27:30,120
<font color="#CCCCCC">be a novel approach which will</font><font color="#E5E5E5"> make</font>

582
00:27:25,560 --> 00:27:31,919
totally sense to try<font color="#CCCCCC"> they actually have</font>

583
00:27:30,120 --> 00:27:34,139
a<font color="#CCCCCC"> very different training scheme because</font>

584
00:27:31,920 --> 00:27:36,840
they use<font color="#CCCCCC"> reinforcement learning instead</font>

585
00:27:34,140 --> 00:27:40,860
of<font color="#CCCCCC"> vanilla</font><font color="#E5E5E5"> back propagation but yeah</font>

586
00:27:36,840 --> 00:27:43,580
it'd<font color="#E5E5E5"> be totally nice thing please do and</font>

587
00:27:40,860 --> 00:27:47,689
come here<font color="#CCCCCC"> next</font><font color="#E5E5E5"> year to</font><font color="#CCCCCC"> tell us</font><font color="#E5E5E5"> it's gone</font>

588
00:27:43,580 --> 00:27:47,689
<font color="#E5E5E5">Thanks</font><font color="#CCCCCC"> not a</font><font color="#E5E5E5"> question</font>

589
00:27:48,360 --> 00:27:51,409
[Music]

590
00:27:58,070 --> 00:28:05,310
so question is is there any publicly

591
00:28:01,380 --> 00:28:09,330
available<font color="#E5E5E5"> study which tells if there is</font>

592
00:28:05,310 --> 00:28:14,330
a computer programming language which is

593
00:28:09,330 --> 00:28:18,179
<font color="#E5E5E5">translated handles best there was</font><font color="#CCCCCC"> a</font>

594
00:28:14,330 --> 00:28:21,990
<font color="#E5E5E5">multi-language corpus in a study was</font>

595
00:28:18,180 --> 00:28:25,830
<font color="#CCCCCC">actually about generating comments</font><font color="#E5E5E5"> and</font>

596
00:28:21,990 --> 00:28:30,780
they gather together<font color="#E5E5E5"> different purposes</font>

597
00:28:25,830 --> 00:28:34,860
of of code this old they<font color="#CCCCCC"> were Python</font>

598
00:28:30,780 --> 00:28:40,830
they were<font color="#CCCCCC"> JavaScript</font><font color="#E5E5E5"> and actually the</font>

599
00:28:34,860 --> 00:28:42,659
performance was<font color="#CCCCCC"> not too different and in</font>

600
00:28:40,830 --> 00:28:45,590
that case they admit it makes<font color="#E5E5E5"> the</font>

601
00:28:42,660 --> 00:28:47,850
difference<font color="#CCCCCC"> having a very rich corpus</font>

602
00:28:45,590 --> 00:28:52,110
<font color="#E5E5E5">high-quality corpus so for example I</font>

603
00:28:47,850 --> 00:28:55,379
expect C code<font color="#E5E5E5"> to be a very high quality</font>

604
00:28:52,110 --> 00:28:58,889
<font color="#CCCCCC">because the kernel messages the curve</font>

605
00:28:55,380 --> 00:29:01,110
the commits<font color="#E5E5E5"> in the kernel Linux kernel</font>

606
00:28:58,890 --> 00:29:01,680
repository<font color="#E5E5E5"> if you do a bad</font><font color="#CCCCCC"> commit</font>

607
00:29:01,110 --> 00:29:04,139
<font color="#E5E5E5">message</font>

608
00:29:01,680 --> 00:29:06,360
<font color="#E5E5E5">Ning</font><font color="#CCCCCC"> star walls is going to bang your</font>

609
00:29:04,140 --> 00:29:09,090
<font color="#E5E5E5">door in person and actually kick you</font>

610
00:29:06,360 --> 00:29:10,830
very roughly<font color="#CCCCCC"> and so there is a</font><font color="#E5E5E5"> kind of</font>

611
00:29:09,090 --> 00:29:14,090
reign of terror<font color="#E5E5E5"> which ensures that</font>

612
00:29:10,830 --> 00:29:17,580
<font color="#CCCCCC">people</font><font color="#E5E5E5"> stays in line and don't commit</font>

613
00:29:14,090 --> 00:29:21,270
 into the repository<font color="#E5E5E5"> so I just</font>

614
00:29:17,580 --> 00:29:23,220
expect that<font color="#E5E5E5"> if the</font><font color="#CCCCCC"> project's serious you</font>

615
00:29:21,270 --> 00:29:25,350
will<font color="#E5E5E5"> have a nice training data and you</font>

616
00:29:23,220 --> 00:29:31,280
will be<font color="#E5E5E5"> able to generalize by the</font>

617
00:29:25,350 --> 00:29:31,280
prediction question

618
00:29:36,420 --> 00:29:47,220
if<font color="#CCCCCC"> i if i check it if the commit</font>

619
00:29:39,540 --> 00:29:49,139
messages fit please<font color="#E5E5E5"> okay can you please</font>

620
00:29:47,220 --> 00:30:02,400
talk louder because<font color="#E5E5E5"> it's very faint from</font>

621
00:29:49,140 --> 00:30:05,010
<font color="#E5E5E5">here yeah sure here the blue score</font>

622
00:30:02,400 --> 00:30:07,890
actually<font color="#E5E5E5"> was</font><font color="#CCCCCC"> compare</font><font color="#E5E5E5"> it</font>

623
00:30:05,010 --> 00:30:09,270
okay sorry sorry<font color="#CCCCCC"> so the question is that</font>

624
00:30:07,890 --> 00:30:11,820
we tried verifying if the common

625
00:30:09,270 --> 00:30:17,540
messages<font color="#CCCCCC"> produced by</font><font color="#E5E5E5"> the human caused by</font>

626
00:30:11,820 --> 00:30:17,540
machine<font color="#CCCCCC"> actually match those reverse the</font>

627
00:30:23,000 --> 00:30:31,380
<font color="#E5E5E5">hey</font><font color="#CCCCCC"> so okay okay</font><font color="#E5E5E5"> the question</font><font color="#CCCCCC"> is really</font>

628
00:30:28,590 --> 00:30:33,149
tricky so if I looked at the commit

629
00:30:31,380 --> 00:30:43,890
message by human and how they correlate

630
00:30:33,150 --> 00:30:48,270
with the actual code changes well<font color="#CCCCCC"> I can</font>

631
00:30:43,890 --> 00:30:52,080
use<font color="#CCCCCC"> these as a</font><font color="#E5E5E5"> way to try</font><font color="#CCCCCC"> to score the</font>

632
00:30:48,270 --> 00:30:54,840
messages computed by humans<font color="#E5E5E5"> but there's</font>

633
00:30:52,080 --> 00:30:57,149
the<font color="#CCCCCC"> problem that I could get if I use</font>

634
00:30:54,840 --> 00:31:01,790
this kind<font color="#E5E5E5"> of metric for example which is</font>

635
00:30:57,150 --> 00:31:04,320
count<font color="#E5E5E5"> the engrams in Commons</font><font color="#CCCCCC"> so the</font>

636
00:31:01,790 --> 00:31:09,139
subsection of<font color="#CCCCCC"> care continues characters</font>

637
00:31:04,320 --> 00:31:12,090
in common of the sentences so these two

638
00:31:09,140 --> 00:31:14,310
are<font color="#E5E5E5"> very different so these will get a</font>

639
00:31:12,090 --> 00:31:17,580
low<font color="#CCCCCC"> score but actually they are</font><font color="#E5E5E5"> pretty</font>

640
00:31:14,310 --> 00:31:22,669
<font color="#E5E5E5">good so it's really difficult to</font>

641
00:31:17,580 --> 00:31:24,689
<font color="#E5E5E5">establish a metric to evaluate if the</font>

642
00:31:22,670 --> 00:31:27,000
the<font color="#E5E5E5"> mass of the</font><font color="#CCCCCC"> original message</font>

643
00:31:24,690 --> 00:31:30,420
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> correlates</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> to the</font>

644
00:31:27,000 --> 00:31:32,700
<font color="#CCCCCC">comic changel</font><font color="#E5E5E5"> you did the same for</font><font color="#CCCCCC"> this</font>

645
00:31:30,420 --> 00:31:35,070
one<font color="#CCCCCC"> up the gradle</font><font color="#E5E5E5"> this will get a very</font>

646
00:31:32,700 --> 00:31:39,180
<font color="#E5E5E5">shitty</font><font color="#CCCCCC"> blood score also</font><font color="#E5E5E5"> because of the</font>

647
00:31:35,070 --> 00:31:41,460
capitalization the which is different<font color="#CCCCCC"> so</font>

648
00:31:39,180 --> 00:31:43,500
<font color="#E5E5E5">the Engram will not fit there was</font>

649
00:31:41,460 --> 00:31:45,840
another message<font color="#CCCCCC"> in</font><font color="#E5E5E5"> which there was</font><font color="#CCCCCC"> a</font>

650
00:31:43,500 --> 00:31:49,470
typo<font color="#E5E5E5"> in the original</font><font color="#CCCCCC"> comic</font><font color="#E5E5E5"> message so</font>

651
00:31:45,840 --> 00:31:50,250
update changelog<font color="#E5E5E5"> without the</font><font color="#CCCCCC"> N and the</font>

652
00:31:49,470 --> 00:31:53,310
<font color="#CCCCCC">Machine</font>

653
00:31:50,250 --> 00:31:54,630
put update changelog<font color="#E5E5E5"> so actually was</font>

654
00:31:53,310 --> 00:31:57,419
<font color="#CCCCCC">able to generalize</font><font color="#E5E5E5"> the correct spelling</font>

655
00:31:54,630 --> 00:32:00,300
<font color="#E5E5E5">that will get another low score</font><font color="#CCCCCC"> so it's</font>

656
00:31:57,420 --> 00:32:01,770
really difficult to correlate the

657
00:32:00,300 --> 00:32:03,840
quality of the message<font color="#E5E5E5"> because the</font>

658
00:32:01,770 --> 00:32:05,430
messenger usually is a low quality<font color="#E5E5E5"> and</font>

659
00:32:03,840 --> 00:32:08,459
that's the whole<font color="#E5E5E5"> point of coming out</font>

660
00:32:05,430 --> 00:32:29,520
with<font color="#CCCCCC"> this kind</font><font color="#E5E5E5"> of Rube Goldberg</font>

661
00:32:08,460 --> 00:32:32,220
contraption<font color="#CCCCCC"> yep okay</font><font color="#E5E5E5"> so question was</font>

662
00:32:29,520 --> 00:32:34,530
since you are actually<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to learn</font>

663
00:32:32,220 --> 00:32:36,840
<font color="#E5E5E5">in to translate between something</font><font color="#CCCCCC"> that</font>

664
00:32:34,530 --> 00:32:38,730
you've seen<font color="#E5E5E5"> right how can</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> actually</font>

665
00:32:36,840 --> 00:32:40,709
cope with things<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> haven't seen</font>

666
00:32:38,730 --> 00:32:42,510
well that's the problem<font color="#CCCCCC"> of out</font><font color="#E5E5E5"> of</font>

667
00:32:40,710 --> 00:32:44,280
<font color="#CCCCCC">vocabulary words and neural</font><font color="#E5E5E5"> machine</font>

668
00:32:42,510 --> 00:32:45,750
translation suffers a loss from the user

669
00:32:44,280 --> 00:32:49,440
because it's not<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to generate to</font>

670
00:32:45,750 --> 00:32:51,810
generate a fault vector of something

671
00:32:49,440 --> 00:32:55,020
hasn't<font color="#E5E5E5"> seen so there are there is an</font>

672
00:32:51,810 --> 00:32:58,110
effort is factorizing the<font color="#E5E5E5"> words into sub</font>

673
00:32:55,020 --> 00:33:03,870
words and so that<font color="#CCCCCC"> tu can cope with</font>

674
00:32:58,110 --> 00:33:05,790
engrams but<font color="#E5E5E5"> general generally it does a</font>

675
00:33:03,870 --> 00:33:07,800
good job<font color="#CCCCCC"> because you use we use</font>

676
00:33:05,790 --> 00:33:09,960
frameworks<font color="#E5E5E5"> so there's a lot of stuff</font>

677
00:33:07,800 --> 00:33:12,270
which<font color="#E5E5E5"> is in common different projects</font>

678
00:33:09,960 --> 00:33:13,980
and<font color="#E5E5E5"> this tells us</font><font color="#CCCCCC"> about the</font><font color="#E5E5E5"> nature of</font>

679
00:33:12,270 --> 00:33:16,139
<font color="#E5E5E5">software development in which most of</font>

680
00:33:13,980 --> 00:33:18,810
<font color="#E5E5E5">the code is</font><font color="#CCCCCC"> not ours bytes of</font><font color="#E5E5E5"> the</font>

681
00:33:16,140 --> 00:33:21,270
framework and there are conventions

682
00:33:18,810 --> 00:33:25,500
<font color="#CCCCCC">naming conventions which helps</font><font color="#E5E5E5"> lie a</font>

683
00:33:21,270 --> 00:33:27,570
<font color="#CCCCCC">little and otherwise</font><font color="#E5E5E5"> you get a rubbish</font>

684
00:33:25,500 --> 00:33:30,480
thing which is not able<font color="#CCCCCC"> to compute</font><font color="#E5E5E5"> but</font>

685
00:33:27,570 --> 00:33:32,460
most<font color="#CCCCCC"> of times it</font><font color="#E5E5E5"> goes well and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> bloat</font>

686
00:33:30,480 --> 00:33:34,880
the very high<font color="#CCCCCC"> blue score is a very</font>

687
00:33:32,460 --> 00:33:34,880
<font color="#CCCCCC">encouraging</font>

688
00:33:40,999 --> 00:33:43,059
<font color="#E5E5E5">you</font>

