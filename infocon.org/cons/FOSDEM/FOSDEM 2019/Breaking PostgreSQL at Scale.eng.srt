1
00:00:06,070 --> 00:00:11,690
tell me what you<font color="#CCCCCC"> already start introduce</font>

2
00:00:08,390 --> 00:00:13,760
you to the<font color="#CCCCCC"> next speaker if you've</font><font color="#E5E5E5"> been</font>

3
00:00:11,690 --> 00:00:15,200
already<font color="#E5E5E5"> to deaf room in both SQL and</font>

4
00:00:13,760 --> 00:00:16,970
<font color="#E5E5E5">forced them before you have seen one of</font>

5
00:00:15,200 --> 00:00:18,439
<font color="#E5E5E5">his talk it doesn't matter because he's</font>

6
00:00:16,970 --> 00:00:21,020
always talking about<font color="#E5E5E5"> different stuff</font>

7
00:00:18,440 --> 00:00:22,610
<font color="#E5E5E5">I've been to like five or took from</font>

8
00:00:21,020 --> 00:00:24,650
Christopher<font color="#E5E5E5"> before and I always learn</font>

9
00:00:22,610 --> 00:00:27,110
<font color="#CCCCCC">something new</font><font color="#E5E5E5"> so I'm really happy to</font><font color="#CCCCCC"> be</font>

10
00:00:24,650 --> 00:00:30,080
hosting<font color="#E5E5E5"> this session</font><font color="#CCCCCC"> here is one of the</font>

11
00:00:27,110 --> 00:00:32,570
VI users as<font color="#E5E5E5"> you know VI is the Roman</font>

12
00:00:30,080 --> 00:00:34,550
number<font color="#CCCCCC"> four number</font><font color="#E5E5E5"> six and this is his</font>

13
00:00:32,570 --> 00:00:42,110
sixth person<font color="#E5E5E5"> station actually</font><font color="#CCCCCC"> in fosston</font>

14
00:00:34,550 --> 00:00:45,410
<font color="#E5E5E5">so please welcome</font><font color="#CCCCCC"> Christoph</font><font color="#E5E5E5"> pedis so</font>

15
00:00:42,110 --> 00:00:49,250
thank you<font color="#CCCCCC"> very much</font><font color="#E5E5E5"> um I don't</font><font color="#CCCCCC"> want to</font>

16
00:00:45,410 --> 00:00:51,559
get into<font color="#CCCCCC"> a VI versus Emacs war here</font><font color="#E5E5E5"> so</font>

17
00:00:49,250 --> 00:00:53,840
<font color="#E5E5E5">um let's see yes I'm Christoph Pettis</font>

18
00:00:51,560 --> 00:00:58,070
<font color="#CCCCCC">I'm the CEO PostgreSQL experts we're a</font>

19
00:00:53,840 --> 00:01:00,800
small<font color="#E5E5E5"> Postgres consultancy in well from</font>

20
00:00:58,070 --> 00:01:02,059
from the from European perspective<font color="#E5E5E5"> San</font>

21
00:01:00,800 --> 00:01:05,869
Francisco we're actually at Alameda

22
00:01:02,059 --> 00:01:09,590
across the bay<font color="#CCCCCC"> and there's my email</font>

23
00:01:05,869 --> 00:01:11,030
address there by Twitter<font color="#CCCCCC"> so just a quick</font>

24
00:01:09,590 --> 00:01:13,970
<font color="#CCCCCC">overview of what we're</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> to talk</font>

25
00:01:11,030 --> 00:01:19,220
<font color="#CCCCCC">about here posters can handle a database</font>

26
00:01:13,970 --> 00:01:20,990
<font color="#E5E5E5">of</font><font color="#CCCCCC"> Eddy</font><font color="#E5E5E5"> size I the the largest Community</font>

27
00:01:19,220 --> 00:01:22,970
Edition Postgres database that<font color="#E5E5E5"> I</font>

28
00:01:20,990 --> 00:01:25,940
personally<font color="#CCCCCC"> worked on was multiple</font>

29
00:01:22,970 --> 00:01:27,500
petabytes<font color="#E5E5E5"> so when people say well I</font>

30
00:01:25,940 --> 00:01:30,490
<font color="#CCCCCC">don't know if Postgres can handle that</font>

31
00:01:27,500 --> 00:01:34,700
it's like yeah it can't let<font color="#CCCCCC"> it's fine</font>

32
00:01:30,490 --> 00:01:36,649
<font color="#CCCCCC">but post</font><font color="#E5E5E5"> Chris how you use Postgres</font>

33
00:01:34,700 --> 00:01:38,689
operationally changes as the database

34
00:01:36,650 --> 00:01:42,020
<font color="#E5E5E5">grows and that's what we're going</font><font color="#CCCCCC"> to</font>

35
00:01:38,689 --> 00:01:43,970
<font color="#E5E5E5">talk about so because what works for a</font>

36
00:01:42,020 --> 00:01:46,490
one gigabyte database you know<font color="#E5E5E5"> does not</font>

37
00:01:43,970 --> 00:01:49,689
<font color="#CCCCCC">work</font><font color="#E5E5E5"> for a</font><font color="#CCCCCC"> 10 terabyte abase or a multi</font>

38
00:01:46,490 --> 00:01:52,070
petabyte database so let's talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it</font>

39
00:01:49,689 --> 00:01:53,570
<font color="#CCCCCC">the number one</font><font color="#E5E5E5"> question I always get or</font>

40
00:01:52,070 --> 00:01:56,029
where the slides going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> they're</font>

41
00:01:53,570 --> 00:02:00,548
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> be at my website</font><font color="#E5E5E5"> my personal</font>

42
00:01:56,030 --> 00:02:03,409
website which is this<font color="#E5E5E5"> V build</font><font color="#CCCCCC"> comm and</font>

43
00:02:00,549 --> 00:02:04,939
<font color="#E5E5E5">the the structure</font><font color="#CCCCCC"> e</font><font color="#E5E5E5"> the structure of</font>

44
00:02:03,409 --> 00:02:08,299
<font color="#E5E5E5">this presentation is around database</font>

45
00:02:04,939 --> 00:02:11,959
sizes<font color="#E5E5E5"> and how this how</font><font color="#CCCCCC"> Postgres changes</font>

46
00:02:08,299 --> 00:02:13,880
as the<font color="#E5E5E5"> database size grows so we're</font>

47
00:02:11,959 --> 00:02:16,730
going<font color="#E5E5E5"> to start with a 10 gigabyte</font>

48
00:02:13,880 --> 00:02:19,340
database which is kind of you<font color="#E5E5E5"> know your</font>

49
00:02:16,730 --> 00:02:21,440
first<font color="#E5E5E5"> database</font><font color="#CCCCCC"> you know to up</font><font color="#E5E5E5"> to tend to</font>

50
00:02:19,340 --> 00:02:24,230
<font color="#E5E5E5">take gigabytes is like a nice small</font>

51
00:02:21,440 --> 00:02:26,270
a<font color="#E5E5E5"> really manageable database and it's</font>

52
00:02:24,230 --> 00:02:27,410
<font color="#E5E5E5">really hard to you it's hard to do</font>

53
00:02:26,270 --> 00:02:29,180
anything<font color="#E5E5E5"> wrong</font>

54
00:02:27,410 --> 00:02:32,480
and<font color="#CCCCCC"> Ted gigabytes you can pretty much</font>

55
00:02:29,180 --> 00:02:35,120
get away<font color="#CCCCCC"> with anything pretty all</font><font color="#E5E5E5"> pretty</font>

56
00:02:32,480 --> 00:02:36,500
much<font color="#E5E5E5"> anything will run fast even you</font>

57
00:02:35,120 --> 00:02:38,390
know<font color="#E5E5E5"> just</font><font color="#CCCCCC"> even if you do sequential</font>

58
00:02:36,500 --> 00:02:42,380
scans for all your<font color="#CCCCCC"> queries all the time</font>

59
00:02:38,390 --> 00:02:44,959
<font color="#E5E5E5">you know it'll zoom right along</font><font color="#CCCCCC"> even</font>

60
00:02:42,380 --> 00:02:47,060
<font color="#CCCCCC">these pathological joins where you have</font>

61
00:02:44,960 --> 00:02:48,170
multiple<font color="#E5E5E5"> joint arms and this and</font><font color="#CCCCCC"> that</font>

62
00:02:47,060 --> 00:02:49,640
<font color="#E5E5E5">and all this stuff</font><font color="#CCCCCC"> but unless you're</font>

63
00:02:48,170 --> 00:02:51,679
doing<font color="#CCCCCC"> across droid across the entire</font>

64
00:02:49,640 --> 00:02:53,920
database so you're<font color="#E5E5E5"> doing N squared</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> to</font>

65
00:02:51,680 --> 00:02:57,230
say<font color="#E5E5E5"> I'm on a few million rows</font>

66
00:02:53,920 --> 00:02:59,329
<font color="#E5E5E5">everything's going to run fast the stock</font>

67
00:02:57,230 --> 00:03:01,010
<font color="#CCCCCC">Postgres</font><font color="#E5E5E5"> feel calm will work fine</font><font color="#CCCCCC"> you</font>

68
00:02:59,330 --> 00:03:03,200
don't actually have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> change anything</font>

69
00:03:01,010 --> 00:03:07,370
in it<font color="#E5E5E5"> you may want</font><font color="#CCCCCC"> to but you don't have</font>

70
00:03:03,200 --> 00:03:08,989
to<font color="#CCCCCC"> so how much memory</font><font color="#E5E5E5"> do you need I mean</font>

71
00:03:07,370 --> 00:03:10,460
<font color="#CCCCCC">one of the questions that's</font><font color="#E5E5E5"> always the</font>

72
00:03:08,990 --> 00:03:12,860
<font color="#E5E5E5">first questions I get asked as a</font>

73
00:03:10,460 --> 00:03:14,750
consultant is so how much memory does a

74
00:03:12,860 --> 00:03:16,400
Postgres database<font color="#CCCCCC"> da time een we're you</font>

75
00:03:14,750 --> 00:03:17,750
know we have<font color="#E5E5E5"> this 10 gigabyte database</font>

76
00:03:16,400 --> 00:03:21,230
and we're a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> concerned about</font>

77
00:03:17,750 --> 00:03:24,950
<font color="#CCCCCC">performance and</font><font color="#E5E5E5"> I try to make</font>

78
00:03:21,230 --> 00:03:26,840
sympathetic noises on the<font color="#E5E5E5"> phone if you</font>

79
00:03:24,950 --> 00:03:28,940
can't fit your<font color="#E5E5E5"> 10 gigabyte database of</font>

80
00:03:26,840 --> 00:03:31,220
memory reconsider your life choices<font color="#CCCCCC"> that</font>

81
00:03:28,940 --> 00:03:33,350
got you to<font color="#CCCCCC"> this point</font><font color="#E5E5E5"> I mean 10</font>

82
00:03:31,220 --> 00:03:35,270
gigabytes you know it's like I have it

83
00:03:33,350 --> 00:03:38,750
here<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know I have a flash</font><font color="#E5E5E5"> drive</font>

84
00:03:35,270 --> 00:03:40,520
<font color="#CCCCCC">that'll handle</font><font color="#E5E5E5"> that even little micro</font>

85
00:03:38,750 --> 00:03:42,950
instances on cloud hosting services will

86
00:03:40,520 --> 00:03:45,110
handle this just fine the entire

87
00:03:42,950 --> 00:03:49,609
database can probably fit<font color="#CCCCCC"> in memory</font><font color="#E5E5E5"> and</font>

88
00:03:45,110 --> 00:03:51,019
probably should<font color="#CCCCCC"> and</font><font color="#E5E5E5"> in fact one of the</font>

89
00:03:49,610 --> 00:03:54,050
biggest<font color="#E5E5E5"> problems of course that people</font>

90
00:03:51,019 --> 00:03:57,650
<font color="#E5E5E5">run into is they that everything works</font>

91
00:03:54,050 --> 00:03:59,060
just<font color="#CCCCCC"> great at this size and then as the</font>

92
00:03:57,650 --> 00:04:00,440
<font color="#CCCCCC">database</font><font color="#E5E5E5"> gets bigger and bigger and</font>

93
00:03:59,060 --> 00:04:02,000
bigger things<font color="#E5E5E5"> start falling</font><font color="#CCCCCC"> apart</font><font color="#E5E5E5"> and</font>

94
00:04:00,440 --> 00:04:04,489
they wonder what horrible thing they did

95
00:04:02,000 --> 00:04:06,050
wrong<font color="#E5E5E5"> that</font><font color="#CCCCCC"> that the universe is</font>

96
00:04:04,489 --> 00:04:07,760
punishing them by their database falling

97
00:04:06,050 --> 00:04:09,980
apart<font color="#E5E5E5"> and the answer is nothing it just</font>

98
00:04:07,760 --> 00:04:11,690
<font color="#CCCCCC">got bigger</font>

99
00:04:09,980 --> 00:04:14,630
<font color="#E5E5E5">but even sequential scans will just zip</font>

100
00:04:11,690 --> 00:04:16,790
right<font color="#E5E5E5"> along on a 10 gigabyte database so</font>

101
00:04:14,630 --> 00:04:18,380
how do you<font color="#CCCCCC"> backup a 10 gigabyte database</font>

102
00:04:16,790 --> 00:04:20,600
I mean backups are important we all have

103
00:04:18,380 --> 00:04:24,560
to want<font color="#E5E5E5"> to have backups and the answer</font>

104
00:04:20,600 --> 00:04:25,730
is<font color="#E5E5E5"> just use PG dump is</font><font color="#CCCCCC"> this is not the</font>

105
00:04:24,560 --> 00:04:27,800
<font color="#E5E5E5">point that you need to start</font><font color="#CCCCCC"> thinking</font>

106
00:04:25,730 --> 00:04:30,440
really really hard about<font color="#E5E5E5"> your detailed</font>

107
00:04:27,800 --> 00:04:31,910
backup strategy you know just run PG

108
00:04:30,440 --> 00:04:34,590
dump for the command line you<font color="#CCCCCC"> know cron</font>

109
00:04:31,910 --> 00:04:37,200
job<font color="#E5E5E5"> every</font><font color="#CCCCCC"> six hours</font>

110
00:04:34,590 --> 00:04:42,750
it takes 90 seconds<font color="#CCCCCC"> on this laptop to</font>

111
00:04:37,200 --> 00:04:45,510
<font color="#E5E5E5">back up a</font><font color="#CCCCCC"> five gigabyte of database</font><font color="#E5E5E5"> PG</font>

112
00:04:42,750 --> 00:04:47,280
dumps fine<font color="#E5E5E5"> for on this size</font><font color="#CCCCCC"> so just</font>

113
00:04:45,510 --> 00:04:50,909
start<font color="#E5E5E5"> the important thing is do the</font>

114
00:04:47,280 --> 00:04:52,169
<font color="#E5E5E5">backup because if you because you</font>

115
00:04:50,910 --> 00:04:55,100
probably<font color="#E5E5E5"> don't want to type a</font><font color="#CCCCCC"> five</font>

116
00:04:52,170 --> 00:04:56,760
gigabyte database back into your system

117
00:04:55,100 --> 00:04:59,310
<font color="#CCCCCC">you don't need anything more</font>

118
00:04:56,760 --> 00:05:01,020
sophisticated<font color="#E5E5E5"> at this point just let it</font>

119
00:04:59,310 --> 00:05:02,550
happen

120
00:05:01,020 --> 00:05:05,430
<font color="#CCCCCC">SiC</font><font color="#E5E5E5"> the backup files in cloud storage</font>

121
00:05:02,550 --> 00:05:07,950
<font color="#CCCCCC">you</font><font color="#E5E5E5"> know use</font><font color="#CCCCCC"> s3 or Backblaze b2 I like B</font>

122
00:05:05,430 --> 00:05:13,200
<font color="#CCCCCC">to a lot and you're done problem solved</font>

123
00:05:07,950 --> 00:05:17,789
<font color="#CCCCCC">so high availability on a database</font><font color="#E5E5E5"> of</font>

124
00:05:13,200 --> 00:05:24,090
<font color="#E5E5E5">this size</font><font color="#CCCCCC"> you have a primary</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> a</font>

125
00:05:17,790 --> 00:05:25,530
secondary<font color="#CCCCCC"> you can um you</font><font color="#E5E5E5"> can either use</font>

126
00:05:24,090 --> 00:05:27,840
direct streaming<font color="#E5E5E5"> just standard streaming</font>

127
00:05:25,530 --> 00:05:30,440
replication or wall archiving<font color="#E5E5E5"> depending</font>

128
00:05:27,840 --> 00:05:32,400
on how<font color="#E5E5E5"> these two systems are connected</font>

129
00:05:30,440 --> 00:05:35,160
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> maybe at this point</font><font color="#CCCCCC"> just to</font>

130
00:05:32,400 --> 00:05:40,320
manual failover<font color="#E5E5E5"> don't worry about like</font>

131
00:05:35,160 --> 00:05:42,390
super sophisticated<font color="#E5E5E5"> failover</font><font color="#CCCCCC"> one thing</font>

132
00:05:40,320 --> 00:05:45,150
to<font color="#CCCCCC"> note is I'm in throughout this talk</font>

133
00:05:42,390 --> 00:05:47,130
I'm using database<font color="#E5E5E5"> sizes kind of a proxy</font>

134
00:05:45,150 --> 00:05:48,539
<font color="#E5E5E5">for a lot of</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> like how</font><font color="#CCCCCC"> many reads</font>

135
00:05:47,130 --> 00:05:50,610
you're doing and how<font color="#E5E5E5"> much what your</font>

136
00:05:48,540 --> 00:05:53,070
right activity is like and how many

137
00:05:50,610 --> 00:05:54,840
customers<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have now you could</font>

138
00:05:53,070 --> 00:05:56,310
reasonably object<font color="#E5E5E5"> that well you know I</font>

139
00:05:54,840 --> 00:05:58,260
have a small<font color="#E5E5E5"> database but it's super</font>

140
00:05:56,310 --> 00:06:00,450
mission-critical and really important

141
00:05:58,260 --> 00:06:03,060
<font color="#E5E5E5">and I can't and I don't want to carry a</font>

142
00:06:00,450 --> 00:06:05,130
pager<font color="#CCCCCC"> I don't like to carry</font><font color="#E5E5E5"> a pager</font><font color="#CCCCCC"> so I</font>

143
00:06:03,060 --> 00:06:07,320
need something<font color="#CCCCCC"> more sophisticated the</font>

144
00:06:05,130 --> 00:06:09,719
answer is read ahead in<font color="#CCCCCC"> the book to that</font>

145
00:06:07,320 --> 00:06:13,650
point you know start adopting things

146
00:06:09,720 --> 00:06:15,930
earlier that so<font color="#E5E5E5"> because every</font><font color="#CCCCCC"> day -</font>

147
00:06:13,650 --> 00:06:18,000
buddies operational system is just<font color="#CCCCCC"> a</font>

148
00:06:15,930 --> 00:06:22,830
little bit unique<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> okay you</font>

149
00:06:18,000 --> 00:06:24,390
know except<font color="#CCCCCC"> that so tuning you say well</font>

150
00:06:22,830 --> 00:06:25,680
yeah you said<font color="#CCCCCC"> you just</font><font color="#E5E5E5"> use a post course</font>

151
00:06:24,390 --> 00:06:28,260
go<font color="#CCCCCC"> lock off</font><font color="#E5E5E5"> but I</font><font color="#CCCCCC"> wanted to do something</font>

152
00:06:25,680 --> 00:06:31,560
<font color="#CCCCCC">a</font><font color="#E5E5E5"> little</font><font color="#CCCCCC"> more interesting than that</font><font color="#E5E5E5"> okay</font>

153
00:06:28,260 --> 00:06:36,030
if you must<font color="#CCCCCC"> the first thing is the usual</font>

154
00:06:31,560 --> 00:06:37,560
memory<font color="#CCCCCC"> related parameters</font><font color="#E5E5E5"> and I will say</font>

155
00:06:36,030 --> 00:06:40,590
if your database fits all in memory

156
00:06:37,560 --> 00:06:43,229
there's a<font color="#CCCCCC"> cut I do like to tune some</font>

157
00:06:40,590 --> 00:06:45,450
query parameters<font color="#E5E5E5"> specifically for all in</font>

158
00:06:43,229 --> 00:06:46,669
memory<font color="#E5E5E5"> databases you know but this stage</font>

159
00:06:45,450 --> 00:06:49,010
<font color="#E5E5E5">just keep it simple don't</font><font color="#CCCCCC"> go</font>

160
00:06:46,670 --> 00:06:51,140
crazy<font color="#E5E5E5"> with it you pull pop</font><font color="#CCCCCC"> open</font>

161
00:06:49,010 --> 00:06:52,400
<font color="#CCCCCC">PostgreSQL</font><font color="#E5E5E5"> coffin there are</font><font color="#CCCCCC"> 300 and blah</font>

162
00:06:51,140 --> 00:06:53,900
<font color="#CCCCCC">blah blah I forget how many</font><font color="#E5E5E5"> parameters</font>

163
00:06:52,400 --> 00:06:56,179
you think oh my<font color="#E5E5E5"> god we're all going to</font>

164
00:06:53,900 --> 00:06:58,909
die if I don't<font color="#E5E5E5"> set every one of those to</font>

165
00:06:56,180 --> 00:07:00,770
a value that took me hours<font color="#E5E5E5"> of agony to</font>

166
00:06:58,910 --> 00:07:03,370
do and the<font color="#CCCCCC"> answer is no there's</font><font color="#E5E5E5"> like</font>

167
00:07:00,770 --> 00:07:07,789
<font color="#E5E5E5">four that you need to tune at this point</font>

168
00:07:03,370 --> 00:07:09,170
<font color="#CCCCCC">I like to</font><font color="#E5E5E5"> set this for small for</font>

169
00:07:07,790 --> 00:07:10,790
databases<font color="#E5E5E5"> that can fit entirely in</font>

170
00:07:09,170 --> 00:07:12,290
memory and<font color="#E5E5E5"> this is also true even if</font>

171
00:07:10,790 --> 00:07:17,330
it's a giant<font color="#E5E5E5"> database but you just have</font>

172
00:07:12,290 --> 00:07:19,250
a giant server to<font color="#E5E5E5"> run it on you can we</font>

173
00:07:17,330 --> 00:07:21,289
<font color="#E5E5E5">can talk endlessly about why</font><font color="#CCCCCC"> this is</font>

174
00:07:19,250 --> 00:07:22,820
exactly<font color="#E5E5E5"> exactly so</font><font color="#CCCCCC"> this test but</font><font color="#E5E5E5"> this</font>

175
00:07:21,290 --> 00:07:25,040
works out<font color="#E5E5E5"> for me</font>

176
00:07:22,820 --> 00:07:29,360
<font color="#E5E5E5">shared buffers</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> 25% of system memory</font>

177
00:07:25,040 --> 00:07:33,680
<font color="#CCCCCC">work them 16</font><font color="#E5E5E5"> 16 megabytes</font><font color="#CCCCCC"> why sixteen</font>

178
00:07:29,360 --> 00:07:36,380
megabytes<font color="#CCCCCC"> why not and maintenance</font><font color="#E5E5E5"> work</font>

179
00:07:33,680 --> 00:07:37,760
them to a 128 megabytes<font color="#CCCCCC"> a your add</font><font color="#E5E5E5"> these</font>

180
00:07:36,380 --> 00:07:38,780
are basically a you're<font color="#E5E5E5"> probably not</font>

181
00:07:37,760 --> 00:07:47,150
going<font color="#E5E5E5"> to run yourself out of memory</font>

182
00:07:38,780 --> 00:07:50,239
unexpectedly<font color="#E5E5E5"> settings</font><font color="#CCCCCC"> let's see</font><font color="#E5E5E5"> log</font>

183
00:07:47,150 --> 00:07:51,890
destination do to do to do<font color="#CCCCCC"> I one of</font><font color="#E5E5E5"> the</font>

184
00:07:50,240 --> 00:07:54,890
<font color="#CCCCCC">things that the one of the</font><font color="#E5E5E5"> few things</font>

185
00:07:51,890 --> 00:07:57,140
<font color="#E5E5E5">that's not great in my opinion about the</font>

186
00:07:54,890 --> 00:07:59,690
stock<font color="#CCCCCC"> Postgres configuration is the</font>

187
00:07:57,140 --> 00:08:02,240
logging<font color="#E5E5E5"> stock post</font><font color="#CCCCCC"> gross configuration</font>

188
00:07:59,690 --> 00:08:04,190
is fairly fairly terse lot<font color="#CCCCCC"> its</font><font color="#E5E5E5"> logging</font>

189
00:08:02,240 --> 00:08:05,510
and there's a lot<font color="#E5E5E5"> of really useful</font>

190
00:08:04,190 --> 00:08:07,820
information<font color="#E5E5E5"> at this stage you should</font>

191
00:08:05,510 --> 00:08:09,560
<font color="#E5E5E5">just get it's a small database</font><font color="#CCCCCC"> you're</font>

192
00:08:07,820 --> 00:08:12,830
not gonna choke yourself with log volume

193
00:08:09,560 --> 00:08:16,000
so turn on CSV logging unless of course

194
00:08:12,830 --> 00:08:19,340
you're on RDS where it won't<font color="#E5E5E5"> let</font><font color="#CCCCCC"> you and</font>

195
00:08:16,000 --> 00:08:23,060
<font color="#E5E5E5">I like I</font><font color="#CCCCCC"> just like to keep you know</font>

196
00:08:19,340 --> 00:08:26,239
daily logs and that log<font color="#E5E5E5"> min statement</font>

197
00:08:23,060 --> 00:08:29,570
duration of 250 milliseconds<font color="#E5E5E5"> that's kind</font>

198
00:08:26,240 --> 00:08:31,940
of like<font color="#E5E5E5"> a standard good number for</font><font color="#CCCCCC"> OLTP</font>

199
00:08:29,570 --> 00:08:33,950
web front-end systems<font color="#E5E5E5"> set it</font>

200
00:08:31,940 --> 00:08:35,360
<font color="#E5E5E5">appropriately</font><font color="#CCCCCC"> if you can set it to zero</font>

201
00:08:33,950 --> 00:08:38,060
and<font color="#E5E5E5"> log every single query without</font>

202
00:08:35,360 --> 00:08:40,250
choking<font color="#E5E5E5"> yourself</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> do that because</font>

203
00:08:38,059 --> 00:08:41,630
<font color="#E5E5E5">you want</font><font color="#CCCCCC"> that information</font><font color="#E5E5E5"> but you can</font>

204
00:08:40,250 --> 00:08:45,260
kind of play<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this number</font><font color="#CCCCCC"> until</font><font color="#E5E5E5"> you</font>

205
00:08:41,630 --> 00:08:46,610
get the log volume you like do log all

206
00:08:45,260 --> 00:08:48,520
<font color="#E5E5E5">checkpoints all connections all</font>

207
00:08:46,610 --> 00:08:51,590
disconnections unless you have a really

208
00:08:48,520 --> 00:08:54,920
really really really<font color="#E5E5E5"> noisy connect in</font>

209
00:08:51,590 --> 00:08:56,450
and out kind of<font color="#CCCCCC"> thing and you know and</font>

210
00:08:54,920 --> 00:08:57,890
that<font color="#E5E5E5"> creates a huge log volume but you</font>

211
00:08:56,450 --> 00:09:00,149
should<font color="#CCCCCC"> probably fix</font><font color="#E5E5E5"> that problem rather</font>

212
00:08:57,890 --> 00:09:01,800
than<font color="#CCCCCC"> turn the logging off</font>

213
00:09:00,149 --> 00:09:03,390
yeah otherwise you're kind<font color="#E5E5E5"> of sticking</font>

214
00:09:01,800 --> 00:09:05,630
<font color="#CCCCCC">your fingers in your ears a la Lala I</font>

215
00:09:03,390 --> 00:09:08,520
don't have a<font color="#CCCCCC"> connection problem um</font>

216
00:09:05,630 --> 00:09:10,290
<font color="#CCCCCC">lock weights again</font><font color="#E5E5E5"> if your logs are</font>

217
00:09:08,520 --> 00:09:12,630
<font color="#E5E5E5">being choked by a huge volume</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> lock</font>

218
00:09:10,290 --> 00:09:16,250
weights<font color="#E5E5E5"> fix the lock weights</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> turn</font>

219
00:09:12,630 --> 00:09:19,529
off logging<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> and same for</font><font color="#CCCCCC"> temp files</font>

220
00:09:16,250 --> 00:09:24,570
<font color="#CCCCCC">and auto vacuum so just you know cut and</font>

221
00:09:19,529 --> 00:09:26,310
paste this<font color="#CCCCCC"> you want to upgrade do a</font>

222
00:09:24,570 --> 00:09:27,930
major version<font color="#E5E5E5"> upgrade you know</font><font color="#CCCCCC"> minor</font>

223
00:09:26,310 --> 00:09:29,219
version upgrades<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Postgres are you</font>

224
00:09:27,930 --> 00:09:30,630
shut<font color="#CCCCCC"> it down you</font><font color="#E5E5E5"> install new binaries</font>

225
00:09:29,220 --> 00:09:32,190
you bring it back<font color="#E5E5E5"> up you're done you do</font>

226
00:09:30,630 --> 00:09:34,980
any maintenance activities<font color="#CCCCCC"> the release</font>

227
00:09:32,190 --> 00:09:36,360
notes<font color="#E5E5E5"> says you go home that's fine but</font>

228
00:09:34,980 --> 00:09:40,310
<font color="#E5E5E5">for a major version upgrade you have</font><font color="#CCCCCC"> to</font>

229
00:09:36,360 --> 00:09:42,720
do<font color="#E5E5E5"> something a little</font><font color="#CCCCCC"> more sophisticated</font>

230
00:09:40,310 --> 00:09:45,390
<font color="#CCCCCC">on the databases sighs just do a dump</font>

231
00:09:42,720 --> 00:09:47,100
<font color="#CCCCCC">restore you know you'll spend more time</font>

232
00:09:45,390 --> 00:09:51,510
fooling around with almost anything<font color="#CCCCCC"> else</font>

233
00:09:47,100 --> 00:09:53,940
<font color="#E5E5E5">and you're done but do it one of the</font>

234
00:09:51,510 --> 00:09:56,819
<font color="#E5E5E5">things the the major version upgrades</font><font color="#CCCCCC"> B</font>

235
00:09:53,940 --> 00:09:58,080
<font color="#E5E5E5">um</font><font color="#CCCCCC"> it is easy to push off major version</font>

236
00:09:56,820 --> 00:10:00,390
upgrades because<font color="#E5E5E5"> they seem like</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> pain</font>

237
00:09:58,080 --> 00:10:02,610
in the<font color="#E5E5E5"> neck</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> Postgres the problem is</font>

238
00:10:00,390 --> 00:10:06,209
the longer<font color="#E5E5E5"> you wait the bigger the pain</font>

239
00:10:02,610 --> 00:10:08,190
will get so just do it<font color="#E5E5E5"> accept the fact</font>

240
00:10:06,209 --> 00:10:09,839
that you will probably that you have to

241
00:10:08,190 --> 00:10:14,430
do major version upgrades on<font color="#E5E5E5"> Postgres</font>

242
00:10:09,839 --> 00:10:15,779
and<font color="#E5E5E5"> preceded this way and just get into</font>

243
00:10:14,430 --> 00:10:17,760
the<font color="#E5E5E5"> habit of planning your upgrade</font>

244
00:10:15,779 --> 00:10:24,000
strategy<font color="#E5E5E5"> don't think well we'll wait</font>

245
00:10:17,760 --> 00:10:25,980
<font color="#E5E5E5">some time just don't do that okay so you</font>

246
00:10:24,000 --> 00:10:28,529
you've achieved great success and now

247
00:10:25,980 --> 00:10:29,459
you have a<font color="#E5E5E5"> 100 gigabyte database well</font>

248
00:10:28,529 --> 00:10:32,250
that's nice

249
00:10:29,459 --> 00:10:35,339
<font color="#CCCCCC">that's not huge you know</font><font color="#E5E5E5"> that's not</font><font color="#CCCCCC"> like</font>

250
00:10:32,250 --> 00:10:36,329
what I think<font color="#CCCCCC"> of is huge but but it's</font>

251
00:10:35,339 --> 00:10:39,209
starting<font color="#CCCCCC"> to get bigger than will fit</font>

252
00:10:36,329 --> 00:10:41,040
<font color="#CCCCCC">into memory on most standard</font><font color="#E5E5E5"> instances</font>

253
00:10:39,209 --> 00:10:42,329
<font color="#E5E5E5">you know you can certainly get instances</font>

254
00:10:41,040 --> 00:10:44,730
<font color="#E5E5E5">that</font><font color="#CCCCCC"> have that it'll fit into memory</font>

255
00:10:42,329 --> 00:10:47,010
<font color="#E5E5E5">completely but you</font><font color="#CCCCCC"> know you're</font><font color="#E5E5E5"> starting</font>

256
00:10:44,730 --> 00:10:50,250
<font color="#E5E5E5">to but in this order of magnitude</font><font color="#CCCCCC"> is</font>

257
00:10:47,010 --> 00:10:52,140
where you start<font color="#E5E5E5"> exceeding that and your</font>

258
00:10:50,250 --> 00:10:56,250
queries<font color="#E5E5E5"> might start getting</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit</font>

259
00:10:52,140 --> 00:10:58,740
wonky at this point<font color="#CCCCCC"> mpg dumps take too</font>

260
00:10:56,250 --> 00:11:00,510
long to<font color="#E5E5E5"> take a restore so you're so</font>

261
00:10:58,740 --> 00:11:02,910
using PG dump as a backup<font color="#CCCCCC"> strategy is</font>

262
00:11:00,510 --> 00:11:05,399
starting to become<font color="#E5E5E5"> less less attractive</font>

263
00:11:02,910 --> 00:11:08,640
<font color="#CCCCCC">especially on the restore side because</font>

264
00:11:05,399 --> 00:11:10,410
the<font color="#E5E5E5"> the system fails and you you want it</font>

265
00:11:08,640 --> 00:11:11,550
your greatest<font color="#CCCCCC"> bins</font><font color="#E5E5E5"> you know a couple</font><font color="#CCCCCC"> of</font>

266
00:11:10,410 --> 00:11:13,860
hours maybe<font color="#E5E5E5"> you know the</font>

267
00:11:11,550 --> 00:11:18,180
the overall throughput of the system<font color="#E5E5E5"> and</font>

268
00:11:13,860 --> 00:11:19,560
that's not fun<font color="#CCCCCC"> so how much</font><font color="#E5E5E5"> memory so how</font>

269
00:11:18,180 --> 00:11:21,449
much<font color="#E5E5E5"> memory does a post or Stata base</font>

270
00:11:19,560 --> 00:11:24,660
need this is like the question<font color="#E5E5E5"> people</font>

271
00:11:21,450 --> 00:11:26,519
ask me<font color="#E5E5E5"> and the answer is I don't know</font><font color="#CCCCCC"> it</font>

272
00:11:24,660 --> 00:11:28,199
depends<font color="#CCCCCC"> and it depends on</font><font color="#E5E5E5"> a lot of</font>

273
00:11:26,519 --> 00:11:29,579
<font color="#CCCCCC">different factors so I'm going to</font><font color="#E5E5E5"> give</font>

274
00:11:28,200 --> 00:11:32,000
you a rule<font color="#E5E5E5"> that's completely</font>

275
00:11:29,579 --> 00:11:34,469
unjustifiable<font color="#CCCCCC"> but it seems to work</font><font color="#E5E5E5"> out</font>

276
00:11:32,000 --> 00:11:35,910
<font color="#E5E5E5">so if you fit the</font><font color="#CCCCCC"> hole if</font><font color="#E5E5E5"> you can fit</font>

277
00:11:34,470 --> 00:11:38,310
<font color="#CCCCCC">the whole thing in memory great</font><font color="#E5E5E5"> you know</font>

278
00:11:35,910 --> 00:11:40,170
<font color="#E5E5E5">obviously no Postgres databases</font><font color="#CCCCCC"> thing</font>

279
00:11:38,310 --> 00:11:41,790
<font color="#E5E5E5">you never think wow I just gave that</font>

280
00:11:40,170 --> 00:11:46,019
post course database too much memory<font color="#E5E5E5"> and</font>

281
00:11:41,790 --> 00:11:47,670
performance<font color="#CCCCCC"> it's horrible doubt a good</font>

282
00:11:46,019 --> 00:11:51,870
rule of thumb<font color="#CCCCCC"> is can you fit</font><font color="#E5E5E5"> the largest</font>

283
00:11:47,670 --> 00:11:53,790
one to<font color="#E5E5E5"> three indexes</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> memory</font><font color="#CCCCCC"> there's</font>

284
00:11:51,870 --> 00:11:56,220
a post questioning parameter<font color="#E5E5E5"> affective</font>

285
00:11:53,790 --> 00:11:57,899
cache size<font color="#E5E5E5"> it's not it's a hint to the</font>

286
00:11:56,220 --> 00:11:59,490
planner it's not a memory allocation it

287
00:11:57,899 --> 00:12:01,230
never the post<font color="#CCCCCC"> Chris</font><font color="#E5E5E5"> never goes out and</font>

288
00:11:59,490 --> 00:12:04,649
<font color="#E5E5E5">tries to allocate</font><font color="#CCCCCC"> affective cache size</font>

289
00:12:01,230 --> 00:12:07,920
worth of memory it is<font color="#E5E5E5"> it is an estimate</font>

290
00:12:04,649 --> 00:12:10,380
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> total amount of memory available</font>

291
00:12:07,920 --> 00:12:12,269
for post<font color="#E5E5E5"> Chris as a cache it includes</font>

292
00:12:10,380 --> 00:12:14,430
the shared buffer setting and it

293
00:12:12,269 --> 00:12:17,790
includes the file system cache in the<font color="#E5E5E5"> on</font>

294
00:12:14,430 --> 00:12:20,310
them on the machine<font color="#E5E5E5"> generally you want</font>

295
00:12:17,790 --> 00:12:23,730
<font color="#E5E5E5">to get an instance where</font><font color="#CCCCCC"> you can set</font>

296
00:12:20,310 --> 00:12:27,239
<font color="#E5E5E5">that number being honest</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> larger than</font>

297
00:12:23,730 --> 00:12:29,160
the largest index<font color="#E5E5E5"> that seems to</font><font color="#CCCCCC"> be that</font>

298
00:12:27,240 --> 00:12:34,410
will<font color="#CCCCCC"> seems to work that well certainly</font>

299
00:12:29,160 --> 00:12:35,880
the planner<font color="#E5E5E5"> likes to see that you can't</font>

300
00:12:34,410 --> 00:12:38,250
more memory is<font color="#E5E5E5"> always better</font>

301
00:12:35,880 --> 00:12:40,079
but just remember also<font color="#E5E5E5"> if your problem</font>

302
00:12:38,250 --> 00:12:41,190
<font color="#E5E5E5">is right</font><font color="#CCCCCC"> performance</font><font color="#E5E5E5"> all the memory in</font>

303
00:12:40,079 --> 00:12:43,380
the<font color="#CCCCCC"> world will</font><font color="#E5E5E5"> not help your</font><font color="#CCCCCC"> write</font>

304
00:12:41,190 --> 00:12:45,570
<font color="#CCCCCC">performance</font><font color="#E5E5E5"> that's not the right</font>

305
00:12:43,380 --> 00:12:50,820
performance<font color="#E5E5E5"> is not assisted by throwing</font>

306
00:12:45,570 --> 00:12:52,770
<font color="#E5E5E5">more memory at the box okay well we</font>

307
00:12:50,820 --> 00:12:54,570
can't we wave farewell<font color="#E5E5E5"> to our good</font>

308
00:12:52,770 --> 00:12:56,760
friend PG<font color="#CCCCCC"> dumped</font><font color="#E5E5E5"> because we can't it's</font>

309
00:12:54,570 --> 00:13:00,149
just<font color="#CCCCCC"> not taking it's just not being</font><font color="#E5E5E5"> very</font>

310
00:12:56,760 --> 00:13:02,720
<font color="#E5E5E5">fast anymore</font><font color="#CCCCCC"> so it's time for</font><font color="#E5E5E5"> P</font><font color="#CCCCCC"> ITR</font>

311
00:13:00,149 --> 00:13:05,699
backups point in time recovery backups

312
00:13:02,720 --> 00:13:07,470
<font color="#CCCCCC">the as a quick</font><font color="#E5E5E5"> overview</font><font color="#CCCCCC"> four people are</font>

313
00:13:05,699 --> 00:13:09,959
not<font color="#E5E5E5"> familiar with them in a P I TR</font>

314
00:13:07,470 --> 00:13:12,329
backup<font color="#E5E5E5"> you take a file system level copy</font>

315
00:13:09,959 --> 00:13:15,180
of the whole database<font color="#E5E5E5"> once in a while</font>

316
00:13:12,329 --> 00:13:17,849
<font color="#CCCCCC">which can</font><font color="#E5E5E5"> be from daily</font><font color="#CCCCCC"> to weekly to</font>

317
00:13:15,180 --> 00:13:19,140
<font color="#E5E5E5">however</font><font color="#CCCCCC"> long and then save all of the</font>

318
00:13:17,850 --> 00:13:21,209
right ahead log segments that are

319
00:13:19,140 --> 00:13:24,130
generated after<font color="#E5E5E5"> that complete from when</font>

320
00:13:21,209 --> 00:13:25,630
that's that file<font color="#E5E5E5"> system copy started</font><font color="#CCCCCC"> and</font>

321
00:13:24,130 --> 00:13:28,390
those two things together are your

322
00:13:25,630 --> 00:13:30,100
backup<font color="#E5E5E5"> you still have to copy the whole</font>

323
00:13:28,390 --> 00:13:31,810
database somewhere<font color="#E5E5E5"> so you are in fact</font>

324
00:13:30,100 --> 00:13:34,990
copying<font color="#E5E5E5"> everything but you don't have</font><font color="#CCCCCC"> to</font>

325
00:13:31,810 --> 00:13:37,599
do<font color="#CCCCCC"> it as frequently and you can recover</font>

326
00:13:34,990 --> 00:13:39,010
right to the<font color="#E5E5E5"> point to the</font><font color="#CCCCCC"> LAT the end of</font>

327
00:13:37,600 --> 00:13:42,580
the last right ahead log segment that

328
00:13:39,010 --> 00:13:43,750
got saved<font color="#E5E5E5"> so you the</font><font color="#CCCCCC"> advantages first</font><font color="#E5E5E5"> of</font>

329
00:13:42,580 --> 00:13:46,810
all<font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't have to do one of these</font>

330
00:13:43,750 --> 00:13:52,090
<font color="#E5E5E5">giant copies nearly as often and you can</font>

331
00:13:46,810 --> 00:13:52,660
recover to<font color="#E5E5E5"> the current point</font><font color="#CCCCCC"> ie</font><font color="#E5E5E5"> what for</font>

332
00:13:52,090 --> 00:13:56,890
doing this

333
00:13:52,660 --> 00:13:59,350
I<font color="#E5E5E5"> like PG backrest</font><font color="#CCCCCC"> it's a product it's</font>

334
00:13:56,890 --> 00:14:01,500
from mostly<font color="#E5E5E5"> written by crunchy data</font>

335
00:13:59,350 --> 00:14:05,770
systems it<font color="#E5E5E5"> has a lot</font><font color="#CCCCCC"> of nice features</font>

336
00:14:01,500 --> 00:14:07,030
<font color="#CCCCCC">wally</font><font color="#E5E5E5"> was kind of was wally kind of</font>

337
00:14:05,770 --> 00:14:08,439
revolutionized<font color="#E5E5E5"> this whole thing by</font>

338
00:14:07,030 --> 00:14:11,560
making<font color="#CCCCCC"> it easy to</font><font color="#E5E5E5"> do this into cloud</font>

339
00:14:08,440 --> 00:14:13,360
<font color="#CCCCCC">storage you can</font><font color="#E5E5E5"> roll</font><font color="#CCCCCC"> your own I mean the</font>

340
00:14:11,560 --> 00:14:16,390
<font color="#CCCCCC">the number of the</font><font color="#E5E5E5"> steps and people did</font>

341
00:14:13,360 --> 00:14:16,810
<font color="#CCCCCC">for</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> you know but at this</font>

342
00:14:16,390 --> 00:14:18,550
point

343
00:14:16,810 --> 00:14:20,469
don't bother rolling your own<font color="#E5E5E5"> unless you</font>

344
00:14:18,550 --> 00:14:22,180
have really<font color="#E5E5E5"> specialized needs because</font>

345
00:14:20,470 --> 00:14:24,700
<font color="#E5E5E5">these have a lot</font><font color="#CCCCCC"> of package features</font>

346
00:14:22,180 --> 00:14:28,329
that will<font color="#E5E5E5"> help you</font>

347
00:14:24,700 --> 00:14:29,680
so take again<font color="#CCCCCC"> P</font><font color="#E5E5E5"> ITR backups takes an</font>

348
00:14:28,330 --> 00:14:31,330
entire<font color="#E5E5E5"> copy of the file system plus</font>

349
00:14:29,680 --> 00:14:34,959
archiving the wall segments that are

350
00:14:31,330 --> 00:14:37,120
<font color="#E5E5E5">generated the more often</font><font color="#CCCCCC"> you do the</font><font color="#E5E5E5"> the</font>

351
00:14:34,960 --> 00:14:38,410
<font color="#E5E5E5">file system copies your restores faster</font>

352
00:14:37,120 --> 00:14:39,970
because it has to process few of the

353
00:14:38,410 --> 00:14:42,520
fewer<font color="#E5E5E5"> of these right ahead log segments</font>

354
00:14:39,970 --> 00:14:44,590
<font color="#CCCCCC">are restore but you still it means you</font>

355
00:14:42,520 --> 00:14:46,810
have to<font color="#E5E5E5"> do this large copy if it's 100</font>

356
00:14:44,590 --> 00:14:50,800
gigabytes<font color="#E5E5E5"> or 500 gigabytes that's</font>

357
00:14:46,810 --> 00:14:56,079
probably acceptable but you<font color="#E5E5E5"> this does</font>

358
00:14:50,800 --> 00:14:57,339
take<font color="#E5E5E5"> a</font><font color="#CCCCCC"> while the other benefits are</font><font color="#E5E5E5"> just</font>

359
00:14:56,080 --> 00:14:59,200
<font color="#E5E5E5">said you can restore to a particular</font>

360
00:14:57,340 --> 00:15:00,790
point<font color="#E5E5E5"> in</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can also use this</font>

361
00:14:59,200 --> 00:15:02,770
to prime secondary instances for

362
00:15:00,790 --> 00:15:08,230
streaming replication<font color="#CCCCCC"> so you get an edge</font>

363
00:15:02,770 --> 00:15:09,610
<font color="#E5E5E5">out of that generally you know you want</font>

364
00:15:08,230 --> 00:15:12,540
at this<font color="#CCCCCC"> point you</font><font color="#E5E5E5"> want to let</font><font color="#CCCCCC"> go of</font>

365
00:15:09,610 --> 00:15:14,980
<font color="#E5E5E5">those old tuning parameters</font><font color="#CCCCCC"> generally</font>

366
00:15:12,540 --> 00:15:18,670
sequential page to us back to like 0.5

367
00:15:14,980 --> 00:15:21,550
to<font color="#E5E5E5"> one random page cost more in the one</font>

368
00:15:18,670 --> 00:15:23,439
point<font color="#E5E5E5"> one to two range depending on your</font>

369
00:15:21,550 --> 00:15:25,660
underlying storage<font color="#CCCCCC"> share buffers you</font>

370
00:15:23,440 --> 00:15:26,920
<font color="#E5E5E5">don't have to change and but you can</font>

371
00:15:25,660 --> 00:15:30,370
throw more maintenance memory at the

372
00:15:26,920 --> 00:15:31,689
problem<font color="#CCCCCC"> meanness work mem is the</font><font color="#E5E5E5"> amount</font>

373
00:15:30,370 --> 00:15:36,370
<font color="#CCCCCC">of memory that's available for things</font>

374
00:15:31,690 --> 00:15:37,990
like<font color="#E5E5E5"> index recreation and vacuuming at</font>

375
00:15:36,370 --> 00:15:39,490
this point<font color="#E5E5E5"> you</font>

376
00:15:37,990 --> 00:15:41,410
<font color="#CCCCCC">you want to get a little</font><font color="#E5E5E5"> more analytic</font>

377
00:15:39,490 --> 00:15:43,149
about how you set work<font color="#CCCCCC"> mem rather than</font>

378
00:15:41,410 --> 00:15:46,569
<font color="#E5E5E5">just accept it saying</font><font color="#CCCCCC"> as 16 gigabytes</font>

379
00:15:43,149 --> 00:15:50,110
<font color="#E5E5E5">we're done</font><font color="#CCCCCC"> because you were clever and</font>

380
00:15:46,570 --> 00:15:52,089
<font color="#E5E5E5">turned on temp file logging you can see</font>

381
00:15:50,110 --> 00:15:54,820
if there are<font color="#E5E5E5"> temporary files being</font>

382
00:15:52,089 --> 00:15:57,250
created by queries and then<font color="#E5E5E5"> you have an</font>

383
00:15:54,820 --> 00:15:59,020
idea<font color="#CCCCCC"> of</font><font color="#E5E5E5"> how much if there are you know</font>

384
00:15:57,250 --> 00:16:01,089
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you need more work mem and can bump</font>

385
00:15:59,020 --> 00:16:03,579
up work now<font color="#CCCCCC"> you can sense alike two or</font>

386
00:16:01,089 --> 00:16:06,100
<font color="#CCCCCC">three times largest file that generally</font>

387
00:16:03,580 --> 00:16:07,660
gets<font color="#CCCCCC"> rid of them now of</font><font color="#E5E5E5"> course but what</font>

388
00:16:06,100 --> 00:16:11,770
if it's saying well I needed<font color="#E5E5E5"> an 18</font>

389
00:16:07,660 --> 00:16:13,689
gigabyte work<font color="#CCCCCC"> temporary file</font><font color="#E5E5E5"> then find</font>

390
00:16:11,770 --> 00:16:15,640
and<font color="#E5E5E5"> fix that query</font><font color="#CCCCCC"> you know do and</font>

391
00:16:13,690 --> 00:16:18,700
<font color="#E5E5E5">explain analyze on it find the sort node</font>

392
00:16:15,640 --> 00:16:23,170
that's creating a<font color="#E5E5E5"> 16 gigabyte file now</font>

393
00:16:18,700 --> 00:16:25,750
in some of<font color="#CCCCCC"> these</font><font color="#E5E5E5"> things in a</font><font color="#CCCCCC"> moment I</font><font color="#E5E5E5"> am</font>

394
00:16:23,170 --> 00:16:27,630
depriving<font color="#E5E5E5"> the system of its notification</font>

395
00:16:25,750 --> 00:16:31,080
privileges while I'm talking there we go

396
00:16:27,630 --> 00:16:31,080
that's enough of<font color="#E5E5E5"> that</font>

397
00:16:31,260 --> 00:16:37,990
<font color="#E5E5E5">if you now sometimes you just accept</font>

398
00:16:36,640 --> 00:16:40,330
this<font color="#CCCCCC"> you know if it's a big</font><font color="#E5E5E5"> analytic</font>

399
00:16:37,990 --> 00:16:42,040
query that doesn't run<font color="#E5E5E5"> very often maybe</font>

400
00:16:40,330 --> 00:16:44,320
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that it uses</font><font color="#CCCCCC"> a burn up a lot</font>

401
00:16:42,040 --> 00:16:46,209
<font color="#CCCCCC">of</font><font color="#E5E5E5"> this or start thinking about more</font>

402
00:16:44,320 --> 00:16:47,890
memory if this is a data analytic system

403
00:16:46,209 --> 00:16:49,930
<font color="#E5E5E5">you probably want to have more than 16</font>

404
00:16:47,890 --> 00:16:55,569
gigabytes of main memory<font color="#CCCCCC"> to do your</font>

405
00:16:49,930 --> 00:16:57,279
giant queries also at this<font color="#E5E5E5"> point maybe</font>

406
00:16:55,570 --> 00:16:58,930
your read capacity is getting to the

407
00:16:57,279 --> 00:17:01,149
point<font color="#E5E5E5"> that you don't</font><font color="#CCCCCC"> want all the reads</font>

408
00:16:58,930 --> 00:17:05,438
directed at the primary<font color="#E5E5E5"> node that's</font>

409
00:17:01,149 --> 00:17:06,550
taking all the<font color="#E5E5E5"> rights</font><font color="#CCCCCC"> to so you consider</font>

410
00:17:05,439 --> 00:17:10,510
moving<font color="#E5E5E5"> read traffic to streaming</font>

411
00:17:06,550 --> 00:17:12,520
<font color="#CCCCCC">secondary's be aware that</font><font color="#E5E5E5"> replication</font>

412
00:17:10,510 --> 00:17:14,170
lag is nonzero<font color="#CCCCCC"> this is actually</font>

413
00:17:12,520 --> 00:17:15,639
something that is<font color="#E5E5E5"> worth thinking about</font>

414
00:17:14,170 --> 00:17:18,280
very early<font color="#CCCCCC"> in the design of your</font>

415
00:17:15,640 --> 00:17:21,069
<font color="#E5E5E5">application because if your application</font>

416
00:17:18,280 --> 00:17:24,010
really<font color="#CCCCCC"> heavily relies on read after</font>

417
00:17:21,069 --> 00:17:28,209
write being<font color="#E5E5E5"> instantly available your</font>

418
00:17:24,010 --> 00:17:30,910
options are<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the understand that the</font>

419
00:17:28,209 --> 00:17:32,710
the<font color="#CCCCCC"> the read may not pick up the data</font>

420
00:17:30,910 --> 00:17:34,510
<font color="#E5E5E5">that was immediately written or you have</font>

421
00:17:32,710 --> 00:17:35,920
to move<font color="#E5E5E5"> to synchronous replication which</font>

422
00:17:34,510 --> 00:17:38,290
you<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> don't want to do</font><font color="#CCCCCC"> because</font>

423
00:17:35,920 --> 00:17:39,550
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a huge performance sink</font><font color="#E5E5E5"> you</font>

424
00:17:38,290 --> 00:17:42,070
usually<font color="#E5E5E5"> only want to use synchronous</font>

425
00:17:39,550 --> 00:17:43,540
<font color="#CCCCCC">replication for data safety not Solia</font>

426
00:17:42,070 --> 00:17:49,210
<font color="#E5E5E5">that your reads after writes work</font>

427
00:17:43,540 --> 00:17:51,220
correctly if<font color="#E5E5E5"> you can it's nice to have</font>

428
00:17:49,210 --> 00:17:51,779
in the app stack that it knows whether

429
00:17:51,220 --> 00:17:53,489
or<font color="#E5E5E5"> not this</font>

430
00:17:51,779 --> 00:17:55,769
a read or write<font color="#CCCCCC"> operation directs</font><font color="#E5E5E5"> it</font>

431
00:17:53,489 --> 00:17:58,679
properly<font color="#E5E5E5"> some apps apps like Django make</font>

432
00:17:55,769 --> 00:18:01,710
this<font color="#E5E5E5"> fairly straightforward to do</font><font color="#CCCCCC"> if not</font>

433
00:17:58,679 --> 00:18:05,219
you<font color="#E5E5E5"> can look for you can you deploy</font><font color="#CCCCCC"> a PG</font>

434
00:18:01,710 --> 00:18:07,879
pool which does<font color="#E5E5E5"> this in the open source</font>

435
00:18:05,219 --> 00:18:12,090
world<font color="#E5E5E5"> PG pool</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> handles this</font>

436
00:18:07,879 --> 00:18:13,738
redirection<font color="#CCCCCC"> it's kind of quirky so be</font>

437
00:18:12,090 --> 00:18:17,158
<font color="#E5E5E5">aware that you're going to invest some</font>

438
00:18:13,739 --> 00:18:19,019
time into setting this<font color="#E5E5E5"> up properly</font><font color="#CCCCCC"> one</font>

439
00:18:17,159 --> 00:18:20,700
<font color="#E5E5E5">other thing about this is this</font><font color="#CCCCCC"> is also</font>

440
00:18:19,019 --> 00:18:22,289
<font color="#E5E5E5">the point that you may want to look and</font>

441
00:18:20,700 --> 00:18:24,570
start thinking about connection pooling

442
00:18:22,289 --> 00:18:27,210
<font color="#CCCCCC">a lot of apps</font><font color="#E5E5E5"> acts</font><font color="#CCCCCC"> especially those that</font>

443
00:18:24,570 --> 00:18:28,769
are container deployed<font color="#E5E5E5"> you fire up</font><font color="#CCCCCC"> 5000</font>

444
00:18:27,210 --> 00:18:30,299
<font color="#E5E5E5">containers each one of which opens</font><font color="#CCCCCC"> 10</font>

445
00:18:28,769 --> 00:18:31,830
connections to the database<font color="#E5E5E5"> and so</font>

446
00:18:30,299 --> 00:18:36,570
<font color="#CCCCCC">you're starting to set backs connections</font>

447
00:18:31,830 --> 00:18:39,989
to<font color="#CCCCCC"> 7,000</font><font color="#E5E5E5"> and of these</font><font color="#CCCCCC"> 8 are active at</font>

448
00:18:36,570 --> 00:18:43,200
any<font color="#E5E5E5"> one time</font><font color="#CCCCCC"> this is a very very</font><font color="#E5E5E5"> common</font>

449
00:18:39,989 --> 00:18:44,989
you<font color="#E5E5E5"> if that that is not that is</font><font color="#CCCCCC"> an</font>

450
00:18:43,200 --> 00:18:47,429
actual<font color="#CCCCCC"> real-world thing I've seen is</font>

451
00:18:44,989 --> 00:18:50,820
<font color="#CCCCCC">5000 open connections of which the peak</font>

452
00:18:47,429 --> 00:18:54,710
was 16 active<font color="#CCCCCC"> you</font><font color="#E5E5E5"> probably want to look</font>

453
00:18:50,820 --> 00:18:57,149
<font color="#E5E5E5">at PG bouncer or for those situations</font>

454
00:18:54,710 --> 00:18:58,589
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is also</font><font color="#E5E5E5"> kind of the time you want</font>

455
00:18:57,149 --> 00:19:00,539
<font color="#E5E5E5">to kind of get real about monitoring</font>

456
00:18:58,589 --> 00:19:02,820
<font color="#E5E5E5">this database you know you don't want</font>

457
00:19:00,539 --> 00:19:04,379
the you know you want the monitoring to

458
00:19:02,820 --> 00:19:08,070
be other than<font color="#E5E5E5"> somebody's adding you on</font>

459
00:19:04,379 --> 00:19:11,580
Twitter saying your<font color="#E5E5E5"> site's down</font><font color="#CCCCCC"> you know</font>

460
00:19:08,070 --> 00:19:13,229
that works pretty well<font color="#E5E5E5"> these days but I</font>

461
00:19:11,580 --> 00:19:16,580
have<font color="#CCCCCC"> in fact learned sites were down</font>

462
00:19:13,229 --> 00:19:21,779
from<font color="#E5E5E5"> Twitter</font><font color="#CCCCCC"> before my monitoring fired</font>

463
00:19:16,580 --> 00:19:23,968
<font color="#CCCCCC">so time</font><font color="#E5E5E5"> so at a</font><font color="#CCCCCC"> minimum you know this is</font>

464
00:19:21,779 --> 00:19:26,159
not this I be I'm cheating<font color="#CCCCCC"> here I don't</font>

465
00:19:23,969 --> 00:19:28,019
processing log through PG<font color="#E5E5E5"> Badgers not</font>

466
00:19:26,159 --> 00:19:29,639
monitoring I think of<font color="#E5E5E5"> Audry's</font><font color="#CCCCCC"> real-time</font>

467
00:19:28,019 --> 00:19:32,009
thing<font color="#E5E5E5"> but you</font><font color="#CCCCCC"> know I didn't want this</font>

468
00:19:29,639 --> 00:19:33,209
talk to go on forever<font color="#E5E5E5"> so</font><font color="#CCCCCC"> at the minimum</font>

469
00:19:32,009 --> 00:19:34,830
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> the point that you should think</font>

470
00:19:33,210 --> 00:19:38,249
<font color="#E5E5E5">about processing along through PG</font><font color="#CCCCCC"> Badger</font>

471
00:19:34,830 --> 00:19:40,139
<font color="#E5E5E5">PG Badgers a Perl tool that ingest</font><font color="#CCCCCC"> logs</font>

472
00:19:38,249 --> 00:19:44,339
<font color="#CCCCCC">and produces these nice HTML very</font>

473
00:19:40,139 --> 00:19:46,168
management friendly reports<font color="#CCCCCC"> install PG</font>

474
00:19:44,339 --> 00:19:48,599
stat statements which gives you<font color="#E5E5E5"> more</font>

475
00:19:46,169 --> 00:19:51,299
<font color="#E5E5E5">real-time statistics about query</font>

476
00:19:48,599 --> 00:19:53,639
performance<font color="#CCCCCC"> and if you don't mind</font>

477
00:19:51,299 --> 00:19:55,830
picking<font color="#CCCCCC"> up an</font><font color="#E5E5E5"> external tool PG analyze</font>

478
00:19:53,639 --> 00:19:57,809
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the kind of cool hosted tool that</font>

479
00:19:55,830 --> 00:20:00,418
samples from PG stat activity and other

480
00:19:57,809 --> 00:20:02,520
things and produces a web web-based

481
00:20:00,419 --> 00:20:04,800
front-end

482
00:20:02,520 --> 00:20:06,510
and you know the usual<font color="#CCCCCC"> suspects</font><font color="#E5E5E5"> New</font>

483
00:20:04,800 --> 00:20:09,240
<font color="#E5E5E5">Relic data dog visual cortex blah blah</font>

484
00:20:06,510 --> 00:20:10,710
blah<font color="#CCCCCC"> Vivint cortex these all have post</font>

485
00:20:09,240 --> 00:20:13,770
<font color="#CCCCCC">chris plugins you know use your</font>

486
00:20:10,710 --> 00:20:16,440
<font color="#CCCCCC">favorites you want basic health is the</font>

487
00:20:13,770 --> 00:20:17,910
database<font color="#E5E5E5"> up is you know our system</font>

488
00:20:16,440 --> 00:20:25,290
resources<font color="#E5E5E5"> being consumed are you paying</font>

489
00:20:17,910 --> 00:20:27,570
<font color="#CCCCCC">io</font><font color="#E5E5E5"> or CPU that kind of stuff</font><font color="#CCCCCC"> check</font><font color="#E5E5E5"> these</font>

490
00:20:25,290 --> 00:20:29,700
for slower queries<font color="#E5E5E5"> assuming that you</font>

491
00:20:27,570 --> 00:20:32,689
need you aren't seeing this directly in

492
00:20:29,700 --> 00:20:34,740
your<font color="#E5E5E5"> app metrics like slow response time</font>

493
00:20:32,690 --> 00:20:37,130
<font color="#CCCCCC">this is the point that you're</font><font color="#E5E5E5"> good to</font>

494
00:20:34,740 --> 00:20:39,960
<font color="#E5E5E5">start really missing indexes as a</font>

495
00:20:37,130 --> 00:20:41,520
philosophy<font color="#CCCCCC"> I don't like to pre create a</font>

496
00:20:39,960 --> 00:20:43,320
lot of indexes unless they're necessary

497
00:20:41,520 --> 00:20:44,940
to enforce constraints because

498
00:20:43,320 --> 00:20:48,570
especially<font color="#CCCCCC"> if you're using things like</font>

499
00:20:44,940 --> 00:20:50,760
<font color="#E5E5E5">arms or other kinds of front-end tools</font>

500
00:20:48,570 --> 00:20:52,470
<font color="#E5E5E5">that</font><font color="#CCCCCC"> yet to generate schemas it's really</font>

501
00:20:50,760 --> 00:20:54,390
easy to<font color="#CCCCCC"> just say DB</font><font color="#E5E5E5"> index true on</font>

502
00:20:52,470 --> 00:20:57,540
everything on<font color="#E5E5E5"> like well I might query on</font>

503
00:20:54,390 --> 00:21:00,090
that at some point<font color="#E5E5E5"> don't do that indexes</font>

504
00:20:57,540 --> 00:21:01,980
<font color="#E5E5E5">are not free they take up disk</font><font color="#CCCCCC"> space</font>

505
00:21:00,090 --> 00:21:05,730
they take up<font color="#E5E5E5"> significant amount of</font>

506
00:21:01,980 --> 00:21:07,230
insert time and they<font color="#CCCCCC"> tend in they do</font>

507
00:21:05,730 --> 00:21:09,330
they add to planning time although

508
00:21:07,230 --> 00:21:12,210
<font color="#CCCCCC">usually that's not the big bottleneck</font><font color="#E5E5E5"> so</font>

509
00:21:09,330 --> 00:21:13,590
add indexes in response to actual query

510
00:21:12,210 --> 00:21:15,180
patterns not just<font color="#E5E5E5"> because you think it</font>

511
00:21:13,590 --> 00:21:16,679
might<font color="#E5E5E5"> be useful eventually there are</font>

512
00:21:15,180 --> 00:21:18,450
<font color="#E5E5E5">some indexes that you will</font><font color="#CCCCCC"> always need</font>

513
00:21:16,680 --> 00:21:21,120
like to enforce constraints like<font color="#E5E5E5"> primary</font>

514
00:21:18,450 --> 00:21:23,190
key indexes and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but</font>

515
00:21:21,120 --> 00:21:27,810
don't but don't<font color="#E5E5E5"> create other indexes</font>

516
00:21:23,190 --> 00:21:31,520
just cuz<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> just don't slap slapping</font>

517
00:21:27,810 --> 00:21:35,520
indexes on anything<font color="#CCCCCC"> as for example</font>

518
00:21:31,520 --> 00:21:37,860
<font color="#E5E5E5">adding</font><font color="#CCCCCC"> seven indexes to a table will</font>

519
00:21:35,520 --> 00:21:41,610
slow down insert time by about<font color="#CCCCCC"> a factor</font>

520
00:21:37,860 --> 00:21:46,409
of 15 so<font color="#E5E5E5"> you may not want to do</font><font color="#CCCCCC"> that</font>

521
00:21:41,610 --> 00:21:47,729
unless you<font color="#CCCCCC"> really</font><font color="#E5E5E5"> need them</font><font color="#CCCCCC"> you probably</font>

522
00:21:46,410 --> 00:21:49,110
<font color="#E5E5E5">also</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> get a little more serious</font>

523
00:21:47,730 --> 00:21:52,080
about high availability at this point

524
00:21:49,110 --> 00:21:55,100
<font color="#E5E5E5">because just the you know</font><font color="#CCCCCC"> text getting a</font>

525
00:21:52,080 --> 00:21:57,360
page isn't<font color="#E5E5E5"> gonna be fun</font><font color="#CCCCCC"> anymore</font>

526
00:21:55,100 --> 00:21:58,860
<font color="#CCCCCC">even at this</font><font color="#E5E5E5"> is the point you start</font>

527
00:21:57,360 --> 00:22:01,080
looking<font color="#CCCCCC"> at some kind of tooling</font><font color="#E5E5E5"> for</font>

528
00:21:58,860 --> 00:22:04,050
failover<font color="#CCCCCC"> PG pool</font><font color="#E5E5E5"> to does have tooling</font>

529
00:22:01,080 --> 00:22:05,520
<font color="#CCCCCC">for failover you will spend a fair</font>

530
00:22:04,050 --> 00:22:08,970
amount of time<font color="#E5E5E5"> getting it right but it</font>

531
00:22:05,520 --> 00:22:10,680
does work Patroni is pretty good

532
00:22:08,970 --> 00:22:12,660
especially<font color="#E5E5E5"> if you're in a cloud</font>

533
00:22:10,680 --> 00:22:14,670
container environment for<font color="#E5E5E5"> doing this</font>

534
00:22:12,660 --> 00:22:15,720
<font color="#CCCCCC">kind of thing it uses</font><font color="#E5E5E5"> ultimate it uses</font><font color="#CCCCCC"> H</font>

535
00:22:14,670 --> 00:22:18,600
<font color="#E5E5E5">a proxy as as Friday</font>

536
00:22:15,720 --> 00:22:20,730
but<font color="#E5E5E5"> four things one downside of</font><font color="#CCCCCC"> Patroni</font>

537
00:22:18,600 --> 00:22:22,168
<font color="#CCCCCC">versus PG pool too is you have to</font>

538
00:22:20,730 --> 00:22:24,030
separate<font color="#E5E5E5"> the read and</font><font color="#CCCCCC"> write traffic for</font>

539
00:22:22,169 --> 00:22:27,030
<font color="#CCCCCC">Patroni PG pool</font><font color="#E5E5E5"> - does it</font><font color="#CCCCCC"> semi</font>

540
00:22:24,030 --> 00:22:29,760
<font color="#CCCCCC">automatically and of course there</font><font color="#E5E5E5"> are</font>

541
00:22:27,030 --> 00:22:33,149
hosted solutions like RDS and<font color="#E5E5E5"> those guys</font>

542
00:22:29,760 --> 00:22:35,908
that handle failover for you<font color="#E5E5E5"> honestly</font>

543
00:22:33,150 --> 00:22:37,740
the failover<font color="#CCCCCC"> high availability situation</font>

544
00:22:35,909 --> 00:22:40,169
is<font color="#E5E5E5"> probably the big unique selling point</font>

545
00:22:37,740 --> 00:22:41,520
of RDS and<font color="#E5E5E5"> these kinds of things because</font>

546
00:22:40,169 --> 00:22:44,039
<font color="#E5E5E5">getting this right on the Community</font>

547
00:22:41,520 --> 00:22:46,350
<font color="#E5E5E5">Edition is a little bit is not perfect</font>

548
00:22:44,039 --> 00:22:48,419
<font color="#E5E5E5">these days you know you do it require</font>

549
00:22:46,350 --> 00:22:51,510
some<font color="#CCCCCC"> work</font><font color="#E5E5E5"> RDS it just drops it it works</font>

550
00:22:48,419 --> 00:22:56,070
but be prepared<font color="#E5E5E5"> to pay a really big RDS</font>

551
00:22:51,510 --> 00:22:57,720
tax on your<font color="#E5E5E5"> monthly bill</font><font color="#CCCCCC"> okay upgrades</font>

552
00:22:56,070 --> 00:22:59,100
well we couldn't do PG<font color="#CCCCCC"> dumped in PG</font>

553
00:22:57,720 --> 00:23:00,539
restore for<font color="#CCCCCC"> backups</font><font color="#E5E5E5"> so maybe we don't</font>

554
00:22:59,100 --> 00:23:04,500
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to do this for upgrades anymore</font>

555
00:23:00,539 --> 00:23:05,700
also so<font color="#E5E5E5"> now we use PG upgrade</font><font color="#CCCCCC"> I never</font>

556
00:23:04,500 --> 00:23:08,669
<font color="#E5E5E5">remember if there's an underscore</font><font color="#CCCCCC"> in</font>

557
00:23:05,700 --> 00:23:13,140
this or not<font color="#CCCCCC"> we</font>

558
00:23:08,669 --> 00:23:16,919
there is thank you there's an underscore

559
00:23:13,140 --> 00:23:19,100
I'm a shirt<font color="#CCCCCC"> so it's it's a it's a nice</font>

560
00:23:16,919 --> 00:23:24,570
tool ships as part<font color="#CCCCCC"> of the distribution</font>

561
00:23:19,100 --> 00:23:27,000
<font color="#CCCCCC">it it can make a copy</font><font color="#E5E5E5"> and upgrade</font><font color="#CCCCCC"> to a</font>

562
00:23:24,570 --> 00:23:28,740
copy<font color="#E5E5E5"> no one ever does</font><font color="#CCCCCC"> that they always</font>

563
00:23:27,000 --> 00:23:30,929
<font color="#CCCCCC">use in link mode which doesn't in place</font>

564
00:23:28,740 --> 00:23:34,950
what a bounce to<font color="#E5E5E5"> an in-place</font><font color="#CCCCCC"> upgrade by</font>

565
00:23:30,929 --> 00:23:40,919
playing with hard links very nice very

566
00:23:34,950 --> 00:23:42,720
reliable<font color="#CCCCCC"> it's the only real caveat is</font>

567
00:23:40,919 --> 00:23:44,970
especially<font color="#E5E5E5"> if you're doing large jumps</font>

568
00:23:42,720 --> 00:23:46,679
extensions can<font color="#CCCCCC"> be a problem if they're</font>

569
00:23:44,970 --> 00:23:49,640
the if<font color="#CCCCCC"> they're the extensions that</font><font color="#E5E5E5"> come</font>

570
00:23:46,679 --> 00:23:54,330
<font color="#E5E5E5">in the contribs objectory you're fine</font>

571
00:23:49,640 --> 00:23:56,100
but some<font color="#CCCCCC"> third-party extensions you you</font>

572
00:23:54,330 --> 00:23:59,580
need to<font color="#CCCCCC"> be a little</font><font color="#E5E5E5"> bit careful about</font>

573
00:23:56,100 --> 00:24:01,699
doing<font color="#E5E5E5"> them post just is the general is</font>

574
00:23:59,580 --> 00:24:04,470
the biggest<font color="#E5E5E5"> example of this because the</font>

575
00:24:01,700 --> 00:24:06,780
if you're doing<font color="#E5E5E5"> a big a big range</font>

576
00:24:04,470 --> 00:24:10,590
upgrade<font color="#E5E5E5"> like a you're jumping from like</font>

577
00:24:06,780 --> 00:24:12,090
<font color="#CCCCCC">nine</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> two nine</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> ten or 11</font><font color="#E5E5E5"> you have</font>

578
00:24:10,590 --> 00:24:17,030
<font color="#CCCCCC">to be careful</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure the</font><font color="#E5E5E5"> post just</font>

579
00:24:12,090 --> 00:24:17,030
versions are compatible<font color="#CCCCCC"> okay</font>

580
00:24:19,760 --> 00:24:24,870
no<font color="#E5E5E5"> reason you can</font><font color="#CCCCCC"> it says</font><font color="#E5E5E5"> it's just you</font>

581
00:24:23,250 --> 00:24:26,130
know for<font color="#E5E5E5"> the amount of time I spend</font>

582
00:24:24,870 --> 00:24:27,689
fiddling the command-line<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get it</font>

583
00:24:26,130 --> 00:24:29,580
exactly right<font color="#CCCCCC"> I could have done a PG</font>

584
00:24:27,690 --> 00:24:37,980
<font color="#E5E5E5">dump in PG restore and</font><font color="#CCCCCC"> God to lodge so</font>

585
00:24:29,580 --> 00:24:39,720
you know<font color="#E5E5E5"> it works just fine you know</font><font color="#CCCCCC"> so</font>

586
00:24:37,980 --> 00:24:41,880
your database has grown to one terabyte

587
00:24:39,720 --> 00:24:44,040
<font color="#E5E5E5">you've had an order of magnitude</font><font color="#CCCCCC"> this is</font>

588
00:24:41,880 --> 00:24:48,930
<font color="#CCCCCC">where a lot of discontinuities happen</font>

589
00:24:44,040 --> 00:24:51,270
<font color="#E5E5E5">just observational e</font><font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> this the</font>

590
00:24:48,930 --> 00:24:55,130
database starts feeling different<font color="#CCCCCC"> at</font><font color="#E5E5E5"> one</font>

591
00:24:51,270 --> 00:24:55,129
terabyte<font color="#E5E5E5"> now you have a real database</font>

592
00:24:55,580 --> 00:24:58,439
<font color="#CCCCCC">and you just can't get enough memory</font>

593
00:24:58,020 --> 00:24:59,820
<font color="#E5E5E5">anymore</font>

594
00:24:58,440 --> 00:25:02,460
you're<font color="#E5E5E5"> not going to throw you're not you</font>

595
00:24:59,820 --> 00:25:04,710
know if you want to<font color="#E5E5E5"> you know have a</font>

596
00:25:02,460 --> 00:25:06,000
<font color="#CCCCCC">sixteen terabyte</font><font color="#E5E5E5"> and I've seen these you</font>

597
00:25:04,710 --> 00:25:08,280
know<font color="#CCCCCC"> sixty terabyte thing with the you</font>

598
00:25:06,000 --> 00:25:10,320
know<font color="#E5E5E5"> the octave the the</font><font color="#CCCCCC"> octo cards lined</font>

599
00:25:08,280 --> 00:25:12,180
up at all the nvme cards lined up that's

600
00:25:10,320 --> 00:25:13,919
great most people<font color="#E5E5E5"> don't you</font><font color="#CCCCCC"> know have a</font>

601
00:25:12,180 --> 00:25:16,710
quarter million dollars to drop on a

602
00:25:13,920 --> 00:25:19,050
single machine<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you're you have</font><font color="#E5E5E5"> to</font>

603
00:25:16,710 --> 00:25:20,040
start<font color="#E5E5E5"> making some choices</font><font color="#CCCCCC"> the queries</font>

604
00:25:19,050 --> 00:25:23,340
<font color="#E5E5E5">are starting to fall apart more</font>

605
00:25:20,040 --> 00:25:24,990
regularly<font color="#E5E5E5"> here's the their queries that</font>

606
00:25:23,340 --> 00:25:27,959
previously performed well are starting

607
00:25:24,990 --> 00:25:30,990
to just not just suddenly go go crazy

608
00:25:27,960 --> 00:25:32,460
and run very slowly<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the point</font>

609
00:25:30,990 --> 00:25:35,670
<font color="#CCCCCC">you'd start you may start running out of</font>

610
00:25:32,460 --> 00:25:36,720
read capacity on a single machine<font color="#CCCCCC"> that</font>

611
00:25:35,670 --> 00:25:41,460
you're starting<font color="#E5E5E5"> to peg</font><font color="#CCCCCC"> IO</font>

612
00:25:36,720 --> 00:25:42,870
and<font color="#CCCCCC"> doing a full P ITR backup is taking</font>

613
00:25:41,460 --> 00:25:45,090
a long<font color="#E5E5E5"> time because you're having to</font>

614
00:25:42,870 --> 00:25:49,590
<font color="#E5E5E5">copy an entire terabyte worth of data on</font>

615
00:25:45,090 --> 00:25:52,320
to cloud storage<font color="#CCCCCC"> so get as much memory</font>

616
00:25:49,590 --> 00:25:55,800
<font color="#CCCCCC">as you can</font><font color="#E5E5E5"> afford more memory will be</font>

617
00:25:52,320 --> 00:25:58,409
<font color="#E5E5E5">better</font><font color="#CCCCCC"> if you're running a data</font>

618
00:25:55,800 --> 00:25:59,940
warehouse kind of situation you probably

619
00:25:58,410 --> 00:26:01,680
<font color="#CCCCCC">you will need more</font><font color="#E5E5E5"> memory to get</font>

620
00:25:59,940 --> 00:26:02,940
acceptable performance because the<font color="#E5E5E5"> kind</font>

621
00:26:01,680 --> 00:26:07,520
<font color="#E5E5E5">of queries you do then if you're running</font>

622
00:26:02,940 --> 00:26:11,100
a transactional<font color="#E5E5E5"> OLTP type database so if</font>

623
00:26:07,520 --> 00:26:12,960
if management<font color="#E5E5E5"> says well it's okay we</font>

624
00:26:11,100 --> 00:26:14,699
want<font color="#E5E5E5"> to consolidate</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> our 23</font>

625
00:26:12,960 --> 00:26:16,830
transactional systems so this one giant

626
00:26:14,700 --> 00:26:18,270
data warehouse<font color="#E5E5E5"> just kind of prepare them</font>

627
00:26:16,830 --> 00:26:20,550
for<font color="#E5E5E5"> how much the check they're going to</font>

628
00:26:18,270 --> 00:26:22,139
write at that point wonder how many

629
00:26:20,550 --> 00:26:23,610
generations before<font color="#E5E5E5"> the term check</font>

630
00:26:22,140 --> 00:26:28,050
they're going to write people<font color="#E5E5E5"> like that</font>

631
00:26:23,610 --> 00:26:29,399
huh and<font color="#E5E5E5"> IO throughput becomes much more</font>

632
00:26:28,050 --> 00:26:32,340
important here

633
00:26:29,399 --> 00:26:34,979
the because again<font color="#E5E5E5"> the working set is</font>

634
00:26:32,340 --> 00:26:36,360
going<font color="#E5E5E5"> to fit in memory</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> may very well</font>

635
00:26:34,980 --> 00:26:37,679
<font color="#E5E5E5">not fit in memory anymore so it's just</font>

636
00:26:36,360 --> 00:26:41,250
going to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> out to secondary</font>

637
00:26:37,679 --> 00:26:44,010
storage a lot<font color="#E5E5E5"> more this is</font><font color="#CCCCCC"> a place where</font>

638
00:26:41,250 --> 00:26:45,600
<font color="#E5E5E5">where you might consider moving too fast</font>

639
00:26:44,010 --> 00:26:48,510
local stores from slower sand based

640
00:26:45,600 --> 00:26:49,889
storage<font color="#E5E5E5"> like you know like</font><font color="#CCCCCC"> eb especially</font>

641
00:26:48,510 --> 00:26:51,980
if you're on<font color="#CCCCCC"> amazon how many people are</font>

642
00:26:49,889 --> 00:26:54,840
running<font color="#E5E5E5"> post</font><font color="#CCCCCC"> chris on amazon</font><font color="#E5E5E5"> right now</font>

643
00:26:51,980 --> 00:26:56,309
<font color="#CCCCCC">well that's gone way up in europe i</font>

644
00:26:54,840 --> 00:26:58,049
remember when<font color="#CCCCCC"> i first started</font><font color="#E5E5E5"> to ask you</font>

645
00:26:56,309 --> 00:27:02,850
that question europe<font color="#E5E5E5"> like one hand went</font>

646
00:26:58,049 --> 00:27:05,639
<font color="#E5E5E5">up the because first of all</font><font color="#CCCCCC"> abs is not</font>

647
00:27:02,850 --> 00:27:07,678
very fast<font color="#E5E5E5"> second of all even with p i</font>

648
00:27:05,639 --> 00:27:10,830
ops<font color="#E5E5E5"> it's not as predictable as one could</font>

649
00:27:07,679 --> 00:27:14,549
hope<font color="#E5E5E5"> and you pay for every</font><font color="#CCCCCC"> i</font><font color="#E5E5E5"> op on EBS</font>

650
00:27:10,830 --> 00:27:16,199
and<font color="#E5E5E5"> that can get</font><font color="#CCCCCC"> very expensive</font><font color="#E5E5E5"> so you</font>

651
00:27:14,549 --> 00:27:17,970
might start<font color="#E5E5E5"> considering instances that</font>

652
00:27:16,200 --> 00:27:19,710
use primarily<font color="#E5E5E5"> local storage</font><font color="#CCCCCC"> precisely</font>

653
00:27:17,970 --> 00:27:24,899
<font color="#CCCCCC">that is really</font><font color="#E5E5E5"> super fast compared</font><font color="#CCCCCC"> to</font>

654
00:27:19,710 --> 00:27:26,820
<font color="#E5E5E5">EBS so backups</font><font color="#CCCCCC"> you can start</font><font color="#E5E5E5"> doing</font>

655
00:27:24,899 --> 00:27:29,580
increment at this this<font color="#E5E5E5"> point incremental</font>

656
00:27:26,820 --> 00:27:31,230
backups are getting more important<font color="#CCCCCC"> PG</font>

657
00:27:29,580 --> 00:27:33,658
<font color="#CCCCCC">backrest does do incremental</font><font color="#E5E5E5"> backups out</font>

658
00:27:31,230 --> 00:27:36,269
of the out of<font color="#E5E5E5"> the box</font><font color="#CCCCCC"> they're not there</font>

659
00:27:33,659 --> 00:27:38,610
<font color="#E5E5E5">on a file level basis so if you were if</font>

660
00:27:36,269 --> 00:27:42,210
you<font color="#CCCCCC"> are routinely touching every page on</font>

661
00:27:38,610 --> 00:27:44,010
<font color="#E5E5E5">you know three rows across every</font><font color="#CCCCCC"> table</font>

662
00:27:42,210 --> 00:27:45,480
you're still going to be doing copying

663
00:27:44,010 --> 00:27:47,190
fairly large file the<font color="#E5E5E5"> one gigabyte</font>

664
00:27:45,480 --> 00:27:48,450
segments<font color="#E5E5E5"> but it's still</font><font color="#CCCCCC"> better than</font><font color="#E5E5E5"> it</font>

665
00:27:47,190 --> 00:27:50,429
was

666
00:27:48,450 --> 00:27:52,559
again you can roll your<font color="#CCCCCC"> own with our</font>

667
00:27:50,429 --> 00:27:54,389
<font color="#E5E5E5">sink but this is extra for experts be</font>

668
00:27:52,559 --> 00:27:56,908
<font color="#E5E5E5">careful about this</font><font color="#CCCCCC"> because it's very</font>

669
00:27:54,389 --> 00:28:02,279
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> to get this wrong</font><font color="#CCCCCC"> backing up</font><font color="#E5E5E5"> a post</font>

670
00:27:56,909 --> 00:28:03,870
course database using<font color="#CCCCCC"> our</font><font color="#E5E5E5"> sink at this</font>

671
00:28:02,279 --> 00:28:07,350
point you probably<font color="#E5E5E5"> want to bump up these</font>

672
00:28:03,870 --> 00:28:09,000
guys and<font color="#CCCCCC"> checkpoint time because you're</font>

673
00:28:07,350 --> 00:28:10,740
with with the amount of data<font color="#E5E5E5"> that's</font>

674
00:28:09,000 --> 00:28:11,850
<font color="#E5E5E5">being changed on a regular</font><font color="#CCCCCC"> basis these</font>

675
00:28:10,740 --> 00:28:14,820
checkpoints<font color="#E5E5E5"> are</font><font color="#CCCCCC"> start ready</font><font color="#E5E5E5"> to start</font>

676
00:28:11,850 --> 00:28:16,620
<font color="#E5E5E5">getting</font><font color="#CCCCCC"> pretty big and when post chris</font>

677
00:28:14,820 --> 00:28:18,389
<font color="#E5E5E5">is a</font><font color="#CCCCCC"> checkpoint which is this periodic</font>

678
00:28:16,620 --> 00:28:23,760
point that it flushes<font color="#E5E5E5"> all of dirty</font>

679
00:28:18,389 --> 00:28:26,699
buffers out<font color="#E5E5E5"> out to out to disk</font><font color="#CCCCCC"> it can be</font>

680
00:28:23,760 --> 00:28:31,580
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the high i/o point for</font><font color="#E5E5E5"> Postgres</font>

681
00:28:26,700 --> 00:28:31,580
<font color="#E5E5E5">so it's very helpful to tune it a bit</font>

682
00:28:32,059 --> 00:28:37,260
<font color="#E5E5E5">don't bump up</font><font color="#CCCCCC"> shared buffers now this is</font>

683
00:28:34,889 --> 00:28:38,519
a very controversial point<font color="#E5E5E5"> everybody has</font>

684
00:28:37,260 --> 00:28:40,050
a very strong opinion<font color="#CCCCCC"> about</font><font color="#E5E5E5"> what share</font>

685
00:28:38,519 --> 00:28:41,640
buffers will be set to<font color="#CCCCCC"> i</font>

686
00:28:40,050 --> 00:28:44,129
never measured a significant improvement

687
00:28:41,640 --> 00:28:46,980
<font color="#E5E5E5">on any system on any</font><font color="#CCCCCC"> workload about</font><font color="#E5E5E5"> 32</font>

688
00:28:44,130 --> 00:28:49,500
gigabytes and<font color="#CCCCCC"> also that's</font><font color="#E5E5E5"> my experience</font>

689
00:28:46,980 --> 00:28:50,850
<font color="#CCCCCC">every time I say this more</font><font color="#E5E5E5"> people much</font>

690
00:28:49,500 --> 00:28:56,450
<font color="#E5E5E5">more experience about</font><font color="#CCCCCC"> Postgres that I</font>

691
00:28:50,850 --> 00:28:58,290
are going but<font color="#E5E5E5"> as soon as I see numbers I</font>

692
00:28:56,450 --> 00:29:00,930
numbers that show a performance

693
00:28:58,290 --> 00:29:04,139
<font color="#E5E5E5">improvement</font><font color="#CCCCCC"> at that point I</font><font color="#E5E5E5"> will change</font>

694
00:29:00,930 --> 00:29:06,690
<font color="#CCCCCC">this</font><font color="#E5E5E5"> slide in a heartbeat</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> my</font>

695
00:29:04,140 --> 00:29:08,820
<font color="#E5E5E5">experience has</font><font color="#CCCCCC"> been that increasing this</font>

696
00:29:06,690 --> 00:29:10,140
slows down checkpoint<font color="#E5E5E5"> performance but</font>

697
00:29:08,820 --> 00:29:14,879
doesn't increase query performance

698
00:29:10,140 --> 00:29:16,440
significantly<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is now this</font>

699
00:29:14,880 --> 00:29:19,020
<font color="#E5E5E5">maintenance work</font><font color="#CCCCCC"> mem is an interesting</font>

700
00:29:16,440 --> 00:29:22,380
<font color="#E5E5E5">thing this is</font><font color="#CCCCCC"> just cross my field of</font>

701
00:29:19,020 --> 00:29:24,330
vision<font color="#E5E5E5"> a lot lately</font><font color="#CCCCCC"> there's a</font><font color="#E5E5E5"> tendency</font>

702
00:29:22,380 --> 00:29:26,400
<font color="#E5E5E5">that about we have this giant system</font>

703
00:29:24,330 --> 00:29:28,439
<font color="#E5E5E5">that in this case it was like 512</font>

704
00:29:26,400 --> 00:29:29,850
gigabytes of<font color="#E5E5E5"> main memory</font><font color="#CCCCCC"> we'll just sit</font>

705
00:29:28,440 --> 00:29:31,470
and we have some big<font color="#E5E5E5"> tables</font><font color="#CCCCCC"> we'll set</font>

706
00:29:29,850 --> 00:29:33,090
maintenance work<font color="#E5E5E5"> them to a really big</font>

707
00:29:31,470 --> 00:29:36,600
<font color="#CCCCCC">number like I</font><font color="#E5E5E5"> think was set to 20</font>

708
00:29:33,090 --> 00:29:39,750
gigabytes<font color="#E5E5E5"> and auto vacuum was like never</font>

709
00:29:36,600 --> 00:29:41,550
finishing and interestingly enough<font color="#E5E5E5"> we</font>

710
00:29:39,750 --> 00:29:43,200
then turned it back down<font color="#CCCCCC"> to 512</font>

711
00:29:41,550 --> 00:29:47,159
gigabytes and<font color="#E5E5E5"> auto</font><font color="#CCCCCC"> vacuum</font><font color="#E5E5E5"> finish much</font>

712
00:29:43,200 --> 00:29:49,710
faster the reason and this is<font color="#CCCCCC"> country</font>

713
00:29:47,160 --> 00:29:51,690
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> counterintuitive but really high</font>

714
00:29:49,710 --> 00:29:53,760
values of<font color="#CCCCCC"> work mem do not improve</font>

715
00:29:51,690 --> 00:29:57,960
performance<font color="#CCCCCC"> significantly compared to</font>

716
00:29:53,760 --> 00:29:59,460
more modest ones<font color="#CCCCCC"> because it's it it's</font>

717
00:29:57,960 --> 00:30:04,140
filling them and spilling them on a

718
00:29:59,460 --> 00:30:06,390
regular<font color="#E5E5E5"> basis so in again purely</font>

719
00:30:04,140 --> 00:30:07,680
experientially if if the most of your

720
00:30:06,390 --> 00:30:09,930
indexes are larger<font color="#E5E5E5"> than a couple</font><font color="#CCCCCC"> of</font>

721
00:30:07,680 --> 00:30:14,730
gigabytes<font color="#E5E5E5"> it's actually improves</font>

722
00:30:09,930 --> 00:30:17,010
performance to decrease it to<font color="#CCCCCC"> like 256</font>

723
00:30:14,730 --> 00:30:21,510
or 512 so these the cycles<font color="#CCCCCC"> on auto</font>

724
00:30:17,010 --> 00:30:25,350
vacuum or faster so<font color="#E5E5E5"> read replicas at</font>

725
00:30:21,510 --> 00:30:27,450
this size become very very important<font color="#CCCCCC"> and</font>

726
00:30:25,350 --> 00:30:28,679
at this point<font color="#E5E5E5"> operationally it's very</font>

727
00:30:27,450 --> 00:30:31,140
helpful to<font color="#E5E5E5"> distinguish between the</font>

728
00:30:28,680 --> 00:30:33,090
<font color="#E5E5E5">failover candidate which is one that</font>

729
00:30:31,140 --> 00:30:35,640
which is one a designated<font color="#E5E5E5"> instance</font><font color="#CCCCCC"> that</font>

730
00:30:33,090 --> 00:30:38,040
<font color="#CCCCCC">stays</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> close to the primary</font><font color="#E5E5E5"> doesn't</font>

731
00:30:35,640 --> 00:30:39,810
take queries and it's only<font color="#E5E5E5"> job is to</font>

732
00:30:38,040 --> 00:30:44,340
<font color="#E5E5E5">failover to take over from the primary</font>

733
00:30:39,810 --> 00:30:46,649
and read replicas<font color="#E5E5E5"> because on streaming</font>

734
00:30:44,340 --> 00:30:49,290
<font color="#CCCCCC">replication there is a trade-off you</font>

735
00:30:46,650 --> 00:30:51,210
<font color="#CCCCCC">have to make between</font><font color="#E5E5E5"> the query load that</font>

736
00:30:49,290 --> 00:30:52,680
it<font color="#E5E5E5"> accepts and how close it will stay to</font>

737
00:30:51,210 --> 00:30:54,870
<font color="#E5E5E5">the primary</font>

738
00:30:52,680 --> 00:30:57,120
and at<font color="#E5E5E5"> this size database went on</font>

739
00:30:54,870 --> 00:31:00,060
smaller databases<font color="#E5E5E5"> having one that does</font>

740
00:30:57,120 --> 00:31:01,439
both is probably<font color="#E5E5E5"> okay but at this point</font>

741
00:31:00,060 --> 00:31:02,909
<font color="#E5E5E5">your read load is probably getting to</font>

742
00:31:01,440 --> 00:31:04,320
the<font color="#E5E5E5"> point that the second the read</font>

743
00:31:02,910 --> 00:31:06,360
secondaries will start experiencing

744
00:31:04,320 --> 00:31:08,490
significant delay enough that you<font color="#E5E5E5"> don't</font>

745
00:31:06,360 --> 00:31:11,520
want to<font color="#E5E5E5"> lose that</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> in the case of</font>

746
00:31:08,490 --> 00:31:14,250
primary<font color="#E5E5E5"> failure and this is also the</font>

747
00:31:11,520 --> 00:31:16,980
point<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> probably want to switch</font>

748
00:31:14,250 --> 00:31:18,810
to some kind of<font color="#CCCCCC"> configures code you know</font>

749
00:31:16,980 --> 00:31:20,910
whatever your your your favorite<font color="#E5E5E5"> hotness</font>

750
00:31:18,810 --> 00:31:22,860
is for spinning up and tearing<font color="#CCCCCC"> down</font>

751
00:31:20,910 --> 00:31:24,330
these secondaries so you can spin<font color="#CCCCCC"> up</font>

752
00:31:22,860 --> 00:31:26,669
secondaries without having to go through

753
00:31:24,330 --> 00:31:28,230
<font color="#CCCCCC">a lot of</font><font color="#E5E5E5"> steps ideally you just push a</font>

754
00:31:26,670 --> 00:31:30,930
button<font color="#E5E5E5"> and bang you get a new secondary</font>

755
00:31:28,230 --> 00:31:33,030
<font color="#E5E5E5">after a while you know</font><font color="#CCCCCC"> won't be instant</font>

756
00:31:30,930 --> 00:31:36,300
but<font color="#E5E5E5"> but you don't have to do this you</font>

757
00:31:33,030 --> 00:31:38,160
can you can configure these manually<font color="#CCCCCC"> if</font>

758
00:31:36,300 --> 00:31:39,570
you do this earlier you'll<font color="#CCCCCC"> sit you'll</font>

759
00:31:38,160 --> 00:31:43,230
have saved<font color="#CCCCCC"> yourself trouble but</font><font color="#E5E5E5"> this is</font>

760
00:31:39,570 --> 00:31:45,510
the point<font color="#CCCCCC"> that becomes important this</font><font color="#E5E5E5"> is</font>

761
00:31:43,230 --> 00:31:46,740
also the point where for a lot of<font color="#E5E5E5"> sites</font>

762
00:31:45,510 --> 00:31:49,770
you<font color="#E5E5E5"> might want to start offloading</font>

763
00:31:46,740 --> 00:31:52,320
services like you move on analytic

764
00:31:49,770 --> 00:31:55,260
queries off of the primary<font color="#CCCCCC"> database even</font>

765
00:31:52,320 --> 00:31:58,889
<font color="#CCCCCC">if it because so that</font><font color="#E5E5E5"> you're not</font>

766
00:31:55,260 --> 00:32:01,050
crunching<font color="#E5E5E5"> the primary database</font><font color="#CCCCCC"> this is</font>

767
00:31:58,890 --> 00:32:02,550
<font color="#CCCCCC">not a big point this is</font><font color="#E5E5E5"> often a point</font>

768
00:32:01,050 --> 00:32:04,409
where you might<font color="#CCCCCC"> consider doing Rodrik</font>

769
00:32:02,550 --> 00:32:06,720
will replicate or data warehousing<font color="#E5E5E5"> and</font>

770
00:32:04,410 --> 00:32:08,400
for analytic queries<font color="#E5E5E5"> so you have a</font>

771
00:32:06,720 --> 00:32:11,340
system<font color="#CCCCCC"> that's specifically intended for</font>

772
00:32:08,400 --> 00:32:12,930
that this<font color="#E5E5E5"> is also the</font><font color="#CCCCCC"> point</font><font color="#E5E5E5"> that maybe</font>

773
00:32:11,340 --> 00:32:17,459
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start moving things like job</font>

774
00:32:12,930 --> 00:32:19,320
queues and other<font color="#CCCCCC"> non-mo</font><font color="#E5E5E5"> retention period</font>

775
00:32:17,460 --> 00:32:22,080
items out of<font color="#E5E5E5"> the primary</font><font color="#CCCCCC"> database and</font>

776
00:32:19,320 --> 00:32:23,520
<font color="#CCCCCC">onto dedicated</font><font color="#E5E5E5"> dedicated systems use</font>

777
00:32:22,080 --> 00:32:25,649
Redis or something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> for these</font>

778
00:32:23,520 --> 00:32:27,450
<font color="#E5E5E5">rather than keep them in the database</font><font color="#CCCCCC"> to</font>

779
00:32:25,650 --> 00:32:31,110
reduce the amount of load<font color="#E5E5E5"> the database</font>

780
00:32:27,450 --> 00:32:32,280
is taking and this<font color="#E5E5E5"> is usually the point</font>

781
00:32:31,110 --> 00:32:35,939
<font color="#E5E5E5">that</font><font color="#CCCCCC"> people start having problems with</font>

782
00:32:32,280 --> 00:32:39,360
<font color="#CCCCCC">vacuum so vacuum can start taking a long</font>

783
00:32:35,940 --> 00:32:41,700
time here on big tables<font color="#CCCCCC"> the first thing</font>

784
00:32:39,360 --> 00:32:44,610
is don't increase<font color="#CCCCCC"> the number of auto</font>

785
00:32:41,700 --> 00:32:47,460
vacuum workers<font color="#CCCCCC"> unless you have a lot of</font>

786
00:32:44,610 --> 00:32:50,760
<font color="#E5E5E5">database let you unless your schema is</font>

787
00:32:47,460 --> 00:32:53,520
big this<font color="#E5E5E5"> each worker can only work on</font>

788
00:32:50,760 --> 00:32:54,930
<font color="#CCCCCC">one table</font><font color="#E5E5E5"> at a time so even if the</font>

789
00:32:53,520 --> 00:32:56,879
tables are big throwing<font color="#E5E5E5"> more workers</font>

790
00:32:54,930 --> 00:32:58,650
isn't going to<font color="#E5E5E5"> solve the problem</font><font color="#CCCCCC"> now if</font>

791
00:32:56,880 --> 00:33:01,220
<font color="#E5E5E5">you're now if</font><font color="#CCCCCC"> for example you have a</font>

792
00:32:58,650 --> 00:33:03,720
scheme<font color="#CCCCCC"> system that's like client base</font>

793
00:33:01,220 --> 00:33:05,389
like sharding<font color="#E5E5E5"> and you're creating a new</font>

794
00:33:03,720 --> 00:33:07,909
schema for every<font color="#E5E5E5"> tenant</font>

795
00:33:05,389 --> 00:33:10,339
and so you<font color="#CCCCCC"> end up with</font><font color="#E5E5E5"> 25,000 tables</font>

796
00:33:07,909 --> 00:33:15,249
then yeah<font color="#CCCCCC"> for sure increase Auto vacuum</font>

797
00:33:10,339 --> 00:33:19,158
workers let<font color="#CCCCCC"> Auto</font><font color="#E5E5E5"> vacuum jobs complete</font>

798
00:33:15,249 --> 00:33:20,570
the<font color="#CCCCCC"> I you know I'm</font><font color="#E5E5E5"> not sure my company</font>

799
00:33:19,159 --> 00:33:23,049
would<font color="#E5E5E5"> be in</font><font color="#CCCCCC"> business if people would</font>

800
00:33:20,570 --> 00:33:25,639
<font color="#CCCCCC">just let their auto vacuum jobs complete</font>

801
00:33:23,049 --> 00:33:27,499
because<font color="#E5E5E5"> will come in and they'll say oh</font>

802
00:33:25,639 --> 00:33:29,029
my God we're getting<font color="#CCCCCC"> wraparound</font><font color="#E5E5E5"> warnings</font>

803
00:33:27,499 --> 00:33:30,709
in the<font color="#CCCCCC"> and they say well okay</font><font color="#E5E5E5"> what</font>

804
00:33:29,029 --> 00:33:33,469
happens well<font color="#CCCCCC"> yeah these auto vacuum jobs</font>

805
00:33:30,709 --> 00:33:35,659
keep coming<font color="#E5E5E5"> up we keep</font><font color="#CCCCCC"> killing them</font><font color="#E5E5E5"> well</font>

806
00:33:33,469 --> 00:33:37,339
you know you<font color="#E5E5E5"> just paid us several</font>

807
00:33:35,659 --> 00:33:44,239
thousand dollars to<font color="#E5E5E5"> tell you to not</font><font color="#CCCCCC"> do</font>

808
00:33:37,339 --> 00:33:46,129
that<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> happy to help</font><font color="#CCCCCC"> so the the</font>

809
00:33:44,239 --> 00:33:47,419
me the the number<font color="#E5E5E5"> one thing is these</font>

810
00:33:46,129 --> 00:33:51,619
<font color="#E5E5E5">jobs will take a long time</font><font color="#CCCCCC"> especially</font>

811
00:33:47,419 --> 00:33:54,320
<font color="#CCCCCC">the</font><font color="#E5E5E5"> very first</font><font color="#CCCCCC"> auto vacuum to complete</font>

812
00:33:51,619 --> 00:33:56,168
auto vacuum<font color="#E5E5E5"> to prevent</font><font color="#CCCCCC"> xid wrap around</font>

813
00:33:54,320 --> 00:33:58,639
everyone's seen this in PG<font color="#E5E5E5"> sad activity</font>

814
00:33:56,169 --> 00:34:00,289
<font color="#CCCCCC">the very first one of those jobs on a</font>

815
00:33:58,639 --> 00:34:01,758
large<font color="#CCCCCC"> table will take a long time</font>

816
00:34:00,289 --> 00:34:03,589
<font color="#CCCCCC">because</font><font color="#E5E5E5"> it's having</font><font color="#CCCCCC"> to pick up and shake</font>

817
00:34:01,759 --> 00:34:05,779
every single page<font color="#E5E5E5"> I'd probably write it</font>

818
00:34:03,589 --> 00:34:07,070
back<font color="#E5E5E5"> decked out the subsequent ones</font>

819
00:34:05,779 --> 00:34:11,329
assuming you're on nine six and<font color="#E5E5E5"> higher</font>

820
00:34:07,070 --> 00:34:13,009
will take much less<font color="#CCCCCC"> time so just</font><font color="#E5E5E5"> plan</font>

821
00:34:11,329 --> 00:34:16,159
for this<font color="#E5E5E5"> understand that these will</font>

822
00:34:13,009 --> 00:34:18,829
these will have<font color="#E5E5E5"> to run</font><font color="#CCCCCC"> be careful with</font>

823
00:34:16,159 --> 00:34:20,569
<font color="#E5E5E5">long running transactions</font><font color="#CCCCCC"> if you're</font>

824
00:34:18,829 --> 00:34:21,589
using to Kate and<font color="#E5E5E5"> face if you're using</font>

825
00:34:20,569 --> 00:34:24,889
<font color="#E5E5E5">two-phase commit</font>

826
00:34:21,589 --> 00:34:27,259
stop right now<font color="#E5E5E5"> don't do that it's bad</font>

827
00:34:24,889 --> 00:34:28,759
well<font color="#E5E5E5"> alright</font><font color="#CCCCCC"> but if you're using</font>

828
00:34:27,259 --> 00:34:29,809
two-phase commit and you're you<font color="#CCCCCC"> and you</font>

829
00:34:28,759 --> 00:34:32,299
<font color="#E5E5E5">don't have an external transaction</font>

830
00:34:29,809 --> 00:34:34,009
manager that<font color="#E5E5E5"> was written specifically to</font>

831
00:34:32,299 --> 00:34:36,379
<font color="#CCCCCC">handle this situation don't</font><font color="#E5E5E5"> do that</font>

832
00:34:34,009 --> 00:34:37,819
<font color="#CCCCCC">because</font><font color="#E5E5E5"> these could really these</font><font color="#CCCCCC"> are</font>

833
00:34:36,379 --> 00:34:39,018
these can persist in the database<font color="#E5E5E5"> for a</font>

834
00:34:37,819 --> 00:34:43,308
long time and<font color="#E5E5E5"> really screw up your</font>

835
00:34:39,018 --> 00:34:46,008
vacuuming<font color="#CCCCCC"> and other other</font><font color="#E5E5E5"> things like</font>

836
00:34:43,309 --> 00:34:47,359
manual<font color="#E5E5E5"> table locking another one reason</font>

837
00:34:46,009 --> 00:34:49,219
I like<font color="#CCCCCC"> to encourage</font><font color="#E5E5E5"> people to move</font>

838
00:34:47,359 --> 00:34:50,538
<font color="#CCCCCC">queues and things like</font><font color="#E5E5E5"> that out is very</font>

839
00:34:49,219 --> 00:34:52,219
frequently the code<font color="#E5E5E5"> that's written for</font>

840
00:34:50,539 --> 00:34:54,619
that locks tables manually and really

841
00:34:52,219 --> 00:34:56,178
screws<font color="#CCCCCC"> up vacuum especially on job</font>

842
00:34:54,619 --> 00:34:57,289
queues which really need vacuuming a lot

843
00:34:56,179 --> 00:35:02,059
because there's a lot of<font color="#E5E5E5"> insert and</font>

844
00:34:57,289 --> 00:35:05,119
delete activity don't turn off auto

845
00:35:02,059 --> 00:35:08,839
vacuum ever<font color="#E5E5E5"> just pull stop</font><font color="#CCCCCC"> auto vac you</font>

846
00:35:05,119 --> 00:35:10,730
always leave<font color="#CCCCCC"> out</font><font color="#E5E5E5"> a vacuum on but it is</font>

847
00:35:08,839 --> 00:35:13,549
<font color="#E5E5E5">possible to create workloads where</font><font color="#CCCCCC"> auto</font>

848
00:35:10,730 --> 00:35:16,869
vacuum has trouble keeping<font color="#CCCCCC"> up very very</font>

849
00:35:13,549 --> 00:35:19,660
<font color="#E5E5E5">very high update rate tables for example</font>

850
00:35:16,869 --> 00:35:22,329
or hot<font color="#E5E5E5"> or again job</font><font color="#CCCCCC"> queues with lots of</font>

851
00:35:19,660 --> 00:35:24,819
inserts and lots of deletes for those

852
00:35:22,329 --> 00:35:27,849
it's sometimes and<font color="#E5E5E5"> especially at this</font>

853
00:35:24,819 --> 00:35:33,489
size of scale of database thank you<font color="#CCCCCC"> it</font>

854
00:35:27,849 --> 00:35:36,489
makes<font color="#E5E5E5"> sense to get to start</font><font color="#CCCCCC"> off manually</font>

855
00:35:33,489 --> 00:35:38,380
vacuuming<font color="#E5E5E5"> those tables but don't do that</font>

856
00:35:36,489 --> 00:35:41,410
<font color="#E5E5E5">in lieu of</font><font color="#CCCCCC"> auto vacuum do</font><font color="#E5E5E5"> that in</font>

857
00:35:38,380 --> 00:35:43,809
<font color="#E5E5E5">addition to auto vacuum</font><font color="#CCCCCC"> there's a script</font>

858
00:35:41,410 --> 00:35:46,029
<font color="#CCCCCC">if you go to PG experts.com</font>

859
00:35:43,809 --> 00:35:48,279
or go to PG experts on github<font color="#CCCCCC"> we have a</font>

860
00:35:46,029 --> 00:35:50,829
script<font color="#E5E5E5"> that does opportunistic freezing</font>

861
00:35:48,279 --> 00:35:55,869
of big tables<font color="#E5E5E5"> you might take a look at</font>

862
00:35:50,829 --> 00:35:58,479
that<font color="#CCCCCC"> my favorite first way of adjusting</font>

863
00:35:55,869 --> 00:36:01,779
<font color="#CCCCCC">auto vacuum is using</font><font color="#E5E5E5"> auto vacuum cost</font>

864
00:35:58,479 --> 00:36:03,549
delay<font color="#CCCCCC"> if it's taking too long you can</font>

865
00:36:01,779 --> 00:36:04,779
<font color="#E5E5E5">consider making it more aggressive so</font>

866
00:36:03,549 --> 00:36:05,979
you make<font color="#CCCCCC"> it</font><font color="#E5E5E5"> really super aggressive and</font>

867
00:36:04,779 --> 00:36:07,660
<font color="#E5E5E5">then discover it's destroying your</font>

868
00:36:05,979 --> 00:36:09,430
system and<font color="#E5E5E5"> you say oops</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you</font>

869
00:36:07,660 --> 00:36:10,569
make it less aggressive by turning the

870
00:36:09,430 --> 00:36:12,729
dial<font color="#CCCCCC"> the other way but that's</font><font color="#E5E5E5"> the first</font>

871
00:36:10,569 --> 00:36:14,170
<font color="#E5E5E5">style to turn there's a lot more to be</font>

872
00:36:12,729 --> 00:36:18,759
said about tuning vacuum but this is

873
00:36:14,170 --> 00:36:20,979
kind of a breezy overview talk<font color="#E5E5E5"> again let</font>

874
00:36:18,759 --> 00:36:23,039
<font color="#E5E5E5">it run you can get yourself</font><font color="#CCCCCC"> into real</font>

875
00:36:20,979 --> 00:36:25,779
<font color="#E5E5E5">trouble if you don't</font>

876
00:36:23,039 --> 00:36:28,180
indexes and<font color="#CCCCCC"> the indexes are getting</font>

877
00:36:25,779 --> 00:36:30,130
really<font color="#E5E5E5"> huge now this is a good point</font>

878
00:36:28,180 --> 00:36:32,799
<font color="#E5E5E5">also</font><font color="#CCCCCC"> to consider partial indexes</font><font color="#E5E5E5"> for</font>

879
00:36:30,130 --> 00:36:34,989
specific<font color="#CCCCCC"> queries</font><font color="#E5E5E5"> before you set of very</font>

880
00:36:32,799 --> 00:36:37,930
<font color="#CCCCCC">commons cases you have like an</font>

881
00:36:34,989 --> 00:36:41,440
e-commerce<font color="#E5E5E5"> system there's orders you</font>

882
00:36:37,930 --> 00:36:43,149
have<font color="#E5E5E5"> a bagillion orders of which one one</font>

883
00:36:41,440 --> 00:36:45,789
percent of which are<font color="#E5E5E5"> actually active at</font>

884
00:36:43,150 --> 00:36:47,950
<font color="#E5E5E5">any one time</font><font color="#CCCCCC"> throw an active flag on a</font>

885
00:36:45,789 --> 00:36:50,079
boolean active<font color="#E5E5E5"> flag on the table you'll</font>

886
00:36:47,950 --> 00:36:51,700
create partial indexes on that so the

887
00:36:50,079 --> 00:36:53,259
when you're doing<font color="#E5E5E5"> queries you only have</font>

888
00:36:51,700 --> 00:36:58,390
to consider<font color="#E5E5E5"> the ones with active equals</font>

889
00:36:53,259 --> 00:36:59,769
true<font color="#CCCCCC"> analog this is a good place</font><font color="#E5E5E5"> also to</font>

890
00:36:58,390 --> 00:37:01,538
go back<font color="#E5E5E5"> and analyze which ones are</font>

891
00:36:59,769 --> 00:37:03,939
<font color="#E5E5E5">really being</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> and dropped the ones</font>

892
00:37:01,539 --> 00:37:05,650
that aren't<font color="#CCCCCC"> PG stat user indexes</font><font color="#E5E5E5"> is a</font>

893
00:37:03,940 --> 00:37:07,239
very good friend here<font color="#E5E5E5"> because they'll</font>

894
00:37:05,650 --> 00:37:08,680
<font color="#E5E5E5">show you how many times indexes are</font>

895
00:37:07,239 --> 00:37:10,900
actually being used<font color="#CCCCCC"> for queries and</font>

896
00:37:08,680 --> 00:37:12,160
it'll be it's often<font color="#CCCCCC"> very illustrative to</font>

897
00:37:10,900 --> 00:37:13,329
go back and see<font color="#CCCCCC"> that there are lots and</font>

898
00:37:12,160 --> 00:37:16,660
<font color="#CCCCCC">lots of indexes none of which are</font>

899
00:37:13,329 --> 00:37:18,180
actually being used<font color="#CCCCCC"> queries</font><font color="#E5E5E5"> can start</font>

900
00:37:16,660 --> 00:37:21,009
becoming really problematic<font color="#E5E5E5"> on these</font>

901
00:37:18,180 --> 00:37:22,419
<font color="#E5E5E5">even</font><font color="#CCCCCC"> the best queries can</font><font color="#E5E5E5"> start take a</font>

902
00:37:21,009 --> 00:37:26,920
long time to<font color="#E5E5E5"> run against a much larger</font>

903
00:37:22,420 --> 00:37:28,809
<font color="#CCCCCC">data</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> like these</font><font color="#E5E5E5"> and they're one big</font>

904
00:37:26,920 --> 00:37:30,140
discontinuity is a query<font color="#CCCCCC"> that used</font><font color="#E5E5E5"> to be</font>

905
00:37:28,809 --> 00:37:31,940
doing an index scan

906
00:37:30,140 --> 00:37:35,118
suddenly is doing a bitmap<font color="#E5E5E5"> index</font><font color="#CCCCCC"> scan</font>

907
00:37:31,940 --> 00:37:38,509
<font color="#E5E5E5">bit bitmap</font><font color="#CCCCCC"> heaps</font><font color="#E5E5E5"> can and taking much</font>

908
00:37:35,119 --> 00:37:40,460
much longer<font color="#CCCCCC"> because suddenly</font><font color="#E5E5E5"> it's the</font>

909
00:37:38,509 --> 00:37:42,650
number<font color="#E5E5E5"> of rows</font><font color="#CCCCCC"> that they'll be coming</font>

910
00:37:40,460 --> 00:37:45,470
back crosses<font color="#CCCCCC"> a threshold</font><font color="#E5E5E5"> a mysterious</font>

911
00:37:42,650 --> 00:37:47,269
inner planner threshold<font color="#E5E5E5"> and it thinks</font>

912
00:37:45,470 --> 00:37:49,578
well I'm gonna<font color="#E5E5E5"> rewrite this will be</font>

913
00:37:47,269 --> 00:37:52,879
faster and maybe it's right<font color="#E5E5E5"> but the</font>

914
00:37:49,579 --> 00:37:54,259
overall query gets<font color="#E5E5E5"> much slower one way</font>

915
00:37:52,880 --> 00:37:55,549
this<font color="#CCCCCC"> is about the time you</font><font color="#E5E5E5"> should</font>

916
00:37:54,259 --> 00:37:59,029
consider<font color="#E5E5E5"> might want to consider</font>

917
00:37:55,549 --> 00:38:00,470
partitioning tables look for tables that

918
00:37:59,029 --> 00:38:04,130
can benefit from partitioning sorry

919
00:38:00,470 --> 00:38:06,799
about that<font color="#CCCCCC"> for example things that are</font>

920
00:38:04,130 --> 00:38:08,749
time series<font color="#E5E5E5"> data where things were being</font>

921
00:38:06,799 --> 00:38:10,309
accumulative<font color="#E5E5E5"> events and things</font><font color="#CCCCCC"> sensor</font>

922
00:38:08,749 --> 00:38:12,589
events you know things like<font color="#CCCCCC"> that if</font>

923
00:38:10,309 --> 00:38:16,279
you're<font color="#E5E5E5"> not using a dedicated</font><font color="#CCCCCC"> x time</font>

924
00:38:12,589 --> 00:38:18,109
series type database<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> these giant</font>

925
00:38:16,279 --> 00:38:20,630
you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> multi billion row tables can be</font>

926
00:38:18,109 --> 00:38:24,049
divided into much much smaller<font color="#E5E5E5"> more</font>

927
00:38:20,630 --> 00:38:26,059
manageable<font color="#E5E5E5"> chunks</font><font color="#CCCCCC"> if you're using 10 or</font>

928
00:38:24,049 --> 00:38:28,190
greater<font color="#CCCCCC"> by all means use the new</font>

929
00:38:26,059 --> 00:38:31,369
partitioning mechanism that is so much

930
00:38:28,190 --> 00:38:33,529
nicer<font color="#CCCCCC"> than old-style partitioning the</font>

931
00:38:31,369 --> 00:38:35,119
the big rule on partitioning is just

932
00:38:33,529 --> 00:38:36,680
<font color="#E5E5E5">making sure it has a strong partitioning</font>

933
00:38:35,119 --> 00:38:42,200
the data has a strong partitioning key

934
00:38:36,680 --> 00:38:43,609
which is<font color="#E5E5E5"> a relatively invariant key not</font>

935
00:38:42,200 --> 00:38:47,149
<font color="#E5E5E5">the primary doesn't have to be the</font>

936
00:38:43,609 --> 00:38:49,038
primary key usually<font color="#CCCCCC"> isn't that is set</font>

937
00:38:47,150 --> 00:38:52,539
when the rows created almost<font color="#E5E5E5"> never</font>

938
00:38:49,039 --> 00:38:55,430
changes it is used and is used as<font color="#E5E5E5"> either</font>

939
00:38:52,539 --> 00:38:57,619
direct a single equality or a small

940
00:38:55,430 --> 00:39:01,460
range on every query<font color="#E5E5E5"> that's what makes</font>

941
00:38:57,619 --> 00:39:03,650
<font color="#E5E5E5">good a good partitioning key</font><font color="#CCCCCC"> if you're</font>

942
00:39:01,460 --> 00:39:05,029
<font color="#E5E5E5">not using query parallel query parallel</font>

943
00:39:03,650 --> 00:39:07,549
execution now there's a good time turn

944
00:39:05,029 --> 00:39:09,440
it on because bump up the number of

945
00:39:07,549 --> 00:39:12,650
query workers and the per query

946
00:39:09,440 --> 00:39:14,420
parallelism<font color="#CCCCCC"> if you're handling a large</font>

947
00:39:12,650 --> 00:39:15,859
<font color="#E5E5E5">result set that's doing large sequential</font>

948
00:39:14,420 --> 00:39:17,839
scans and similar things this<font color="#E5E5E5"> can be</font>

949
00:39:15,859 --> 00:39:20,058
really really<font color="#CCCCCC"> powerful you can get a lot</font>

950
00:39:17,839 --> 00:39:21,890
<font color="#E5E5E5">of benefit</font><font color="#CCCCCC"> out of it</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> sure the</font>

951
00:39:20,059 --> 00:39:23,599
i/o capacity<font color="#E5E5E5"> can keep up you know</font><font color="#CCCCCC"> maybe</font>

952
00:39:21,890 --> 00:39:25,549
<font color="#E5E5E5">because that you're gonna have multiple</font>

953
00:39:23,599 --> 00:39:30,019
<font color="#E5E5E5">jobs all</font><font color="#CCCCCC"> of them doing doing a lot of</font>

954
00:39:25,549 --> 00:39:31,819
i/o this is<font color="#E5E5E5"> also a place to start</font>

955
00:39:30,019 --> 00:39:34,569
thinking about adjusting<font color="#E5E5E5"> this the</font>

956
00:39:31,819 --> 00:39:36,829
statistics target on particular tables

957
00:39:34,569 --> 00:39:38,930
<font color="#CCCCCC">one of the reasons</font><font color="#E5E5E5"> these queries can</font>

958
00:39:36,829 --> 00:39:40,120
start falling<font color="#E5E5E5"> apart</font><font color="#CCCCCC"> is because the</font>

959
00:39:38,930 --> 00:39:42,129
<font color="#E5E5E5">number the</font>

960
00:39:40,120 --> 00:39:44,740
the visibility the<font color="#E5E5E5"> planner has into the</font>

961
00:39:42,130 --> 00:39:46,810
data can start becoming kind of obscured

962
00:39:44,740 --> 00:39:48,669
<font color="#E5E5E5">because</font><font color="#CCCCCC"> as these tables get much much</font>

963
00:39:46,810 --> 00:39:51,100
bigger<font color="#CCCCCC"> you're still</font><font color="#E5E5E5"> really dividing it</font>

964
00:39:48,670 --> 00:39:53,620
<font color="#E5E5E5">into the</font><font color="#CCCCCC"> the statistics on it</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> a</font>

965
00:39:51,100 --> 00:39:56,110
hundred buckets<font color="#E5E5E5"> and something you're</font>

966
00:39:53,620 --> 00:39:57,670
starting to lose resolution<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very</font>

967
00:39:56,110 --> 00:40:00,730
<font color="#E5E5E5">this is very common if you have foreign</font>

968
00:39:57,670 --> 00:40:05,890
keys on long values like<font color="#CCCCCC"> uu IDs or</font>

969
00:40:00,730 --> 00:40:07,660
strings<font color="#CCCCCC"> so look for queries for a highly</font>

970
00:40:05,890 --> 00:40:09,819
specific query as<font color="#E5E5E5"> plans</font><font color="#CCCCCC"> returns a large</font>

971
00:40:07,660 --> 00:40:11,500
number<font color="#CCCCCC"> of rows for example you're doing</font>

972
00:40:09,820 --> 00:40:14,050
<font color="#E5E5E5">your querying against a field that's a</font>

973
00:40:11,500 --> 00:40:16,270
UUID<font color="#CCCCCC"> it's not a unique field</font><font color="#E5E5E5"> but you're</font>

974
00:40:14,050 --> 00:40:18,070
querying a specific<font color="#CCCCCC"> UUID and</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> the</font>

975
00:40:16,270 --> 00:40:19,720
and you know<font color="#CCCCCC"> that only like</font><font color="#E5E5E5"> seven or</font>

976
00:40:18,070 --> 00:40:21,040
<font color="#E5E5E5">eight rows will come back</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> planner</font>

977
00:40:19,720 --> 00:40:23,230
thinks I don't<font color="#CCCCCC"> know I think twenty-five</font>

978
00:40:21,040 --> 00:40:25,660
<font color="#E5E5E5">thousand rows will come back that's</font>

979
00:40:23,230 --> 00:40:30,550
usually<font color="#CCCCCC"> because the statistics on that</font>

980
00:40:25,660 --> 00:40:33,399
field<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> bumped up just don't go</font>

981
00:40:30,550 --> 00:40:35,170
crazy<font color="#E5E5E5"> though just don't you</font><font color="#CCCCCC"> know set</font>

982
00:40:33,400 --> 00:40:37,120
don't set your<font color="#E5E5E5"> default statistics target</font>

983
00:40:35,170 --> 00:40:39,400
to<font color="#CCCCCC"> ten thousand in Postgres kill cough</font>

984
00:40:37,120 --> 00:40:43,630
because<font color="#E5E5E5"> you will we will all be dead</font>

985
00:40:39,400 --> 00:40:46,810
<font color="#E5E5E5">before your</font><font color="#CCCCCC"> analyse completes also</font>

986
00:40:43,630 --> 00:40:48,040
consider alternative indexes like<font color="#CCCCCC"> some</font>

987
00:40:46,810 --> 00:40:50,110
fields are really not good matches for

988
00:40:48,040 --> 00:40:52,450
<font color="#CCCCCC">b-tree indexes</font><font color="#E5E5E5"> like long strings and</font>

989
00:40:50,110 --> 00:40:53,920
range types and things<font color="#E5E5E5"> like that</font><font color="#CCCCCC"> use</font>

990
00:40:52,450 --> 00:40:56,859
indexes<font color="#E5E5E5"> that are appropriate for the</font>

991
00:40:53,920 --> 00:41:00,250
type for<font color="#CCCCCC"> example if you're starting auuu</font>

992
00:40:56,860 --> 00:41:01,870
a<font color="#E5E5E5"> URL which has like</font><font color="#CCCCCC"> lot has lots of</font>

993
00:41:00,250 --> 00:41:04,210
entropy<font color="#E5E5E5"> at the end and not a whole lot</font>

994
00:41:01,870 --> 00:41:05,770
at the beginning<font color="#E5E5E5"> hash indexes</font><font color="#CCCCCC"> can be</font>

995
00:41:04,210 --> 00:41:07,060
really good<font color="#E5E5E5"> for that because and also</font>

996
00:41:05,770 --> 00:41:08,980
<font color="#E5E5E5">why would you ever you know you don't</font>

997
00:41:07,060 --> 00:41:10,299
get range queries with<font color="#E5E5E5"> a hash index but</font>

998
00:41:08,980 --> 00:41:12,310
why are you doing<font color="#CCCCCC"> a range query</font><font color="#E5E5E5"> on you</font>

999
00:41:10,300 --> 00:41:16,230
URL you know that's one<font color="#E5E5E5"> kind of free</font>

1000
00:41:12,310 --> 00:41:20,500
cars is<font color="#CCCCCC"> that okay</font>

1001
00:41:16,230 --> 00:41:22,270
upgrading a really a bigger database<font color="#CCCCCC"> PG</font>

1002
00:41:20,500 --> 00:41:26,380
upgrade with as long as you put in the

1003
00:41:22,270 --> 00:41:28,180
underscore still works fine because<font color="#E5E5E5"> PG</font>

1004
00:41:26,380 --> 00:41:29,410
upgrade the time that is<font color="#E5E5E5"> the trans</font>

1005
00:41:28,180 --> 00:41:31,060
proportional to the number of database

1006
00:41:29,410 --> 00:41:34,000
objects not<font color="#E5E5E5"> the database size if you're</font>

1007
00:41:31,060 --> 00:41:35,350
<font color="#CCCCCC">running in length</font><font color="#E5E5E5"> mode so now just be</font>

1008
00:41:34,000 --> 00:41:36,610
prepared<font color="#E5E5E5"> for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> though if you have one</font>

1009
00:41:35,350 --> 00:41:38,970
<font color="#E5E5E5">of these twenty five thousand table</font>

1010
00:41:36,610 --> 00:41:40,930
schemas that<font color="#E5E5E5"> will still take a while if</font>

1011
00:41:38,970 --> 00:41:42,879
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> not acceptable</font>

1012
00:41:40,930 --> 00:41:44,680
consider a logical replication based

1013
00:41:42,880 --> 00:41:46,990
upgrade where you fire up the do a new

1014
00:41:44,680 --> 00:41:50,350
instance<font color="#E5E5E5"> do logical replication hit and</font>

1015
00:41:46,990 --> 00:41:53,348
then do a<font color="#E5E5E5"> quick cut over at the end</font><font color="#CCCCCC"> just</font>

1016
00:41:50,350 --> 00:41:56,019
<font color="#CCCCCC">be</font><font color="#E5E5E5"> sure to</font><font color="#CCCCCC"> plan</font><font color="#E5E5E5"> for major</font><font color="#CCCCCC"> operator</font>

1017
00:41:53,349 --> 00:41:58,119
<font color="#E5E5E5">like one of our clients which has a 1</font>

1018
00:41:56,019 --> 00:41:59,319
petabyte database still on<font color="#CCCCCC"> 8/3 because</font>

1019
00:41:58,119 --> 00:42:02,069
they're<font color="#E5E5E5"> trying to figure out how to do</font>

1020
00:41:59,319 --> 00:42:02,069
the upgrade<font color="#CCCCCC"> ooh</font>

1021
00:42:02,349 --> 00:42:08,769
10 terabytes<font color="#E5E5E5"> big so yeah this is you you</font>

1022
00:42:07,299 --> 00:42:10,269
have bragging rights<font color="#E5E5E5"> now this is a good</font>

1023
00:42:08,769 --> 00:42:14,078
database<font color="#CCCCCC"> you'll have to make</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> hard</font>

1024
00:42:10,269 --> 00:42:16,029
<font color="#CCCCCC">decisions though backups</font><font color="#E5E5E5"> you know at</font>

1025
00:42:14,079 --> 00:42:17,859
<font color="#E5E5E5">this point anything that's good anything</font>

1026
00:42:16,029 --> 00:42:19,539
that involves<font color="#E5E5E5"> I am going to copy the</font>

1027
00:42:17,859 --> 00:42:22,259
<font color="#E5E5E5">entire database into a cloud storage</font>

1028
00:42:19,539 --> 00:42:24,369
<font color="#CCCCCC">system is getting</font><font color="#E5E5E5"> a little impractical</font>

1029
00:42:22,259 --> 00:42:26,979
<font color="#CCCCCC">you might consider</font><font color="#E5E5E5"> moving to file system</font>

1030
00:42:24,369 --> 00:42:29,079
<font color="#E5E5E5">snapshots like ZFS or</font><font color="#CCCCCC"> san-based</font>

1031
00:42:26,979 --> 00:42:30,430
<font color="#E5E5E5">snapshots</font><font color="#CCCCCC"> you have to copy it somewhere</font>

1032
00:42:29,079 --> 00:42:32,410
because<font color="#E5E5E5"> obviously if you leave it on the</font>

1033
00:42:30,430 --> 00:42:33,940
same set spinning<font color="#E5E5E5"> disks that's good to</font>

1034
00:42:32,410 --> 00:42:36,249
be problematic<font color="#CCCCCC"> but</font><font color="#E5E5E5"> at least you don't</font>

1035
00:42:33,940 --> 00:42:41,049
<font color="#CCCCCC">have</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> right it</font><font color="#CCCCCC"> you know you</font><font color="#E5E5E5"> can</font>

1036
00:42:36,249 --> 00:42:42,879
space it<font color="#CCCCCC"> out a little bit just to note</font>

1037
00:42:41,049 --> 00:42:45,970
<font color="#E5E5E5">table spaces</font><font color="#CCCCCC"> are a pain please don't use</font>

1038
00:42:42,880 --> 00:42:48,220
them all<font color="#E5E5E5"> right use them if you have to</font>

1039
00:42:45,970 --> 00:42:51,129
there's this thing<font color="#E5E5E5"> about I can always</font>

1040
00:42:48,220 --> 00:42:53,049
tell<font color="#E5E5E5"> when</font><font color="#CCCCCC"> some post Christian</font><font color="#E5E5E5"> base was</font>

1041
00:42:51,130 --> 00:42:55,029
set up by an Oracle<font color="#E5E5E5"> DBA because they're</font>

1042
00:42:53,049 --> 00:42:57,489
like 23 table spaces all pointing at the

1043
00:42:55,029 --> 00:42:59,729
same spinning<font color="#E5E5E5"> disk because on Oracle you</font>

1044
00:42:57,489 --> 00:43:02,529
that was people<font color="#CCCCCC"> just</font><font color="#E5E5E5"> told you do that</font>

1045
00:42:59,729 --> 00:43:04,058
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> ask why</font><font color="#CCCCCC"> just do it</font><font color="#E5E5E5"> and there's</font>

1046
00:43:02,529 --> 00:43:06,309
almost<font color="#E5E5E5"> no reason to set up a table</font>

1047
00:43:04,059 --> 00:43:07,450
spaces<font color="#CCCCCC"> especially now in Postgres you</font>

1048
00:43:06,309 --> 00:43:10,239
know in the old days<font color="#CCCCCC"> where you would</font>

1049
00:43:07,450 --> 00:43:11,799
have like<font color="#CCCCCC"> essa you know SS SSDs for the</font>

1050
00:43:10,239 --> 00:43:13,450
indexes<font color="#CCCCCC"> of</font><font color="#E5E5E5"> spinning just for the the</font>

1051
00:43:11,799 --> 00:43:15,038
main storage<font color="#E5E5E5"> and stuff like that but</font>

1052
00:43:13,450 --> 00:43:16,509
<font color="#CCCCCC">generally everything is</font><font color="#E5E5E5"> running on some</font>

1053
00:43:15,039 --> 00:43:19,749
<font color="#E5E5E5">Sam where you have no control</font><font color="#CCCCCC"> over the</font>

1054
00:43:16,509 --> 00:43:22,180
performance<font color="#CCCCCC"> of what the hell</font><font color="#E5E5E5"> you know</font>

1055
00:43:19,749 --> 00:43:23,709
it's there there's there<font color="#CCCCCC"> are some</font>

1056
00:43:22,180 --> 00:43:25,210
specific<font color="#CCCCCC"> reasons you can do this</font><font color="#E5E5E5"> like</font>

1057
00:43:23,710 --> 00:43:26,799
<font color="#CCCCCC">fast slow storage you're reaching the</font>

1058
00:43:25,210 --> 00:43:28,749
limits of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> single</font><font color="#E5E5E5"> volume things like</font>

1059
00:43:26,799 --> 00:43:31,829
that<font color="#E5E5E5"> but just understand that they'll</font>

1060
00:43:28,749 --> 00:43:33,910
complicate backups<font color="#E5E5E5"> of replication yeah</font>

1061
00:43:31,829 --> 00:43:36,549
<font color="#CCCCCC">index mode can be a significant</font><font color="#E5E5E5"> problem</font>

1062
00:43:33,910 --> 00:43:38,979
<font color="#E5E5E5">at this size because</font><font color="#CCCCCC"> it's harder to</font>

1063
00:43:36,549 --> 00:43:43,630
reclaim space<font color="#E5E5E5"> on indexes from</font><font color="#CCCCCC"> an index</font>

1064
00:43:38,979 --> 00:43:45,339
<font color="#E5E5E5">than then from the heap so sometimes you</font>

1065
00:43:43,630 --> 00:43:47,440
want<font color="#E5E5E5"> to write scripts that will create</font>

1066
00:43:45,339 --> 00:43:50,049
it recreate an index and then drop the

1067
00:43:47,440 --> 00:43:51,609
old one to compact them but do this on

1068
00:43:50,049 --> 00:43:53,710
the basis<font color="#E5E5E5"> of rely on oolitic see how</font>

1069
00:43:51,609 --> 00:43:56,739
bloated your indexes are getting but

1070
00:43:53,710 --> 00:44:00,759
this can<font color="#E5E5E5"> also change query plans having</font>

1071
00:43:56,739 --> 00:44:02,499
a badly bloated index<font color="#E5E5E5"> at these really</font>

1072
00:44:00,759 --> 00:44:04,599
you know you got to this database by

1073
00:44:02,499 --> 00:44:05,680
writing to it so you frequently have

1074
00:44:04,599 --> 00:44:07,180
really high update rate

1075
00:44:05,680 --> 00:44:08,770
against a unique index and these can

1076
00:44:07,180 --> 00:44:10,779
create locking issues if you have<font color="#CCCCCC"> a lot</font>

1077
00:44:08,770 --> 00:44:13,450
<font color="#CCCCCC">of parallelism you know if you like</font><font color="#E5E5E5"> 50</font>

1078
00:44:10,780 --> 00:44:15,040
workers<font color="#E5E5E5"> all writing to this IOT style</font>

1079
00:44:13,450 --> 00:44:18,129
applications which a recording sensor

1080
00:44:15,040 --> 00:44:20,230
data<font color="#E5E5E5"> it can have this problem</font><font color="#CCCCCC"> if you</font>

1081
00:44:18,130 --> 00:44:22,090
have<font color="#CCCCCC"> especially close to clustered</font><font color="#E5E5E5"> keys</font>

1082
00:44:20,230 --> 00:44:26,020
like<font color="#E5E5E5"> serial which tend to all be hitting</font>

1083
00:44:22,090 --> 00:44:27,640
the same index pages<font color="#CCCCCC"> one thing</font><font color="#E5E5E5"> that we</font>

1084
00:44:26,020 --> 00:44:30,100
have gotten great performance out<font color="#CCCCCC"> of is</font>

1085
00:44:27,640 --> 00:44:31,839
if these<font color="#CCCCCC"> are if your keys are guaranteed</font>

1086
00:44:30,100 --> 00:44:33,040
to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> unique like</font><font color="#E5E5E5"> serial or something</font>

1087
00:44:31,840 --> 00:44:34,660
like that<font color="#E5E5E5"> you know it's gonna be</font><font color="#CCCCCC"> unique</font>

1088
00:44:33,040 --> 00:44:37,750
because or snowflake or one of<font color="#E5E5E5"> these</font>

1089
00:44:34,660 --> 00:44:39,430
<font color="#E5E5E5">guys or</font><font color="#CCCCCC"> EU</font><font color="#E5E5E5"> IDs</font><font color="#CCCCCC"> you might consider</font><font color="#E5E5E5"> just</font>

1090
00:44:37,750 --> 00:44:42,340
dropping the unique constraint<font color="#E5E5E5"> get some</font>

1091
00:44:39,430 --> 00:44:44,980
<font color="#CCCCCC">performance benefit out of</font><font color="#E5E5E5"> that or</font>

1092
00:44:42,340 --> 00:44:46,210
<font color="#E5E5E5">switch</font><font color="#CCCCCC"> euu</font><font color="#E5E5E5"> ideas if you don't mind of</font>

1093
00:44:44,980 --> 00:44:47,230
course<font color="#CCCCCC"> if you're generating</font><font color="#E5E5E5"> a huge</font>

1094
00:44:46,210 --> 00:44:49,390
number<font color="#E5E5E5"> you might start</font><font color="#CCCCCC"> running out of</font>

1095
00:44:47,230 --> 00:44:52,210
<font color="#E5E5E5">entropy from the</font><font color="#CCCCCC"> U the</font><font color="#E5E5E5"> contention may be</font>

1096
00:44:49,390 --> 00:44:53,890
on the random<font color="#E5E5E5"> number generator</font><font color="#CCCCCC"> your</font>

1097
00:44:52,210 --> 00:44:55,930
right capacity at<font color="#E5E5E5"> this point my cert</font>

1098
00:44:53,890 --> 00:44:57,759
<font color="#CCCCCC">beacons say</font><font color="#E5E5E5"> strain this is the plate</font>

1099
00:44:55,930 --> 00:45:00,430
<font color="#CCCCCC">that sharding starts becoming important</font>

1100
00:44:57,760 --> 00:45:01,540
<font color="#E5E5E5">there are all sorts of</font><font color="#CCCCCC"> options I like</font>

1101
00:45:00,430 --> 00:45:03,700
situs<font color="#CCCCCC"> TB a lot</font>

1102
00:45:01,540 --> 00:45:05,730
there's<font color="#CCCCCC"> post-course excel if you want to</font>

1103
00:45:03,700 --> 00:45:07,720
become<font color="#CCCCCC"> part of a</font><font color="#E5E5E5"> development community</font>

1104
00:45:05,730 --> 00:45:09,640
<font color="#CCCCCC">you could do your</font><font color="#E5E5E5"> own custom</font><font color="#CCCCCC"> base</font>

1105
00:45:07,720 --> 00:45:13,660
<font color="#CCCCCC">charting</font><font color="#E5E5E5"> you know so</font><font color="#CCCCCC"> you regional or</font>

1106
00:45:09,640 --> 00:45:15,129
application based sharding<font color="#CCCCCC"> the nice</font><font color="#E5E5E5"> part</font>

1107
00:45:13,660 --> 00:45:16,720
about<font color="#CCCCCC"> charting is done right it'll</font><font color="#E5E5E5"> also</font>

1108
00:45:15,130 --> 00:45:19,030
significantly accelerate your<font color="#E5E5E5"> reads</font>

1109
00:45:16,720 --> 00:45:21,520
because<font color="#E5E5E5"> it can farm the query large</font>

1110
00:45:19,030 --> 00:45:24,280
queries out over multiple<font color="#CCCCCC"> shards just</font>

1111
00:45:21,520 --> 00:45:25,270
you know<font color="#E5E5E5"> understand that</font><font color="#CCCCCC"> your admin</font>

1112
00:45:24,280 --> 00:45:27,250
complexity is going to go up

1113
00:45:25,270 --> 00:45:29,070
significantly<font color="#E5E5E5"> here so just</font><font color="#CCCCCC"> take a</font><font color="#E5E5E5"> deep</font>

1114
00:45:27,250 --> 00:45:31,930
<font color="#CCCCCC">breath</font><font color="#E5E5E5"> in and be ready</font><font color="#CCCCCC"> for it</font>

1115
00:45:29,070 --> 00:45:34,120
<font color="#CCCCCC">okay huge databases</font>

1116
00:45:31,930 --> 00:45:35,350
<font color="#E5E5E5">you know just post groups can</font><font color="#CCCCCC"> have a</font>

1117
00:45:34,120 --> 00:45:36,819
little<font color="#E5E5E5"> really really big</font><font color="#CCCCCC"> databases</font>

1118
00:45:35,350 --> 00:45:40,569
<font color="#CCCCCC">straight</font><font color="#E5E5E5"> out of a box</font><font color="#CCCCCC"> community edition</font>

1119
00:45:36,820 --> 00:45:42,370
<font color="#CCCCCC">note no extensions just</font><font color="#E5E5E5"> drop it in just</font>

1120
00:45:40,570 --> 00:45:44,620
you have<font color="#E5E5E5"> to make some choices you know</font>

1121
00:45:42,370 --> 00:45:46,960
the<font color="#CCCCCC"> thing is</font><font color="#E5E5E5"> and eat at this stage each</font>

1122
00:45:44,620 --> 00:45:47,890
<font color="#CCCCCC">everything's</font><font color="#E5E5E5"> a unique animal so your</font>

1123
00:45:46,960 --> 00:45:49,630
questions are<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be things like</font>

1124
00:45:47,890 --> 00:45:51,220
<font color="#E5E5E5">what's the working set if most of the</font>

1125
00:45:49,630 --> 00:45:53,260
data is archival performance will be

1126
00:45:51,220 --> 00:45:54,970
more manageable<font color="#CCCCCC"> but if it's but if</font><font color="#E5E5E5"> it's</font>

1127
00:45:53,260 --> 00:45:58,300
archival why didn't you archive it<font color="#E5E5E5"> get</font>

1128
00:45:54,970 --> 00:45:59,799
it out of<font color="#CCCCCC"> the database separate the data</font>

1129
00:45:58,300 --> 00:46:00,970
into a transactional system<font color="#CCCCCC"> add</font><font color="#E5E5E5"> a</font>

1130
00:45:59,800 --> 00:46:01,930
<font color="#E5E5E5">warehouse you probably wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

1131
00:46:00,970 --> 00:46:06,250
done this<font color="#E5E5E5"> like two orders</font><font color="#CCCCCC"> of magnitude</font>

1132
00:46:01,930 --> 00:46:07,930
before<font color="#E5E5E5"> but really do that now and this</font>

1133
00:46:06,250 --> 00:46:10,270
is logical replications great for that

1134
00:46:07,930 --> 00:46:12,879
<font color="#E5E5E5">and now is the time</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you start doing</font>

1135
00:46:10,270 --> 00:46:15,490
<font color="#E5E5E5">really fun stuff like large-scale</font>

1136
00:46:12,880 --> 00:46:17,170
sharding<font color="#CCCCCC"> you know instead of having just</font>

1137
00:46:15,490 --> 00:46:18,069
<font color="#CCCCCC">one giant</font><font color="#E5E5E5"> database or closely connected</font>

1138
00:46:17,170 --> 00:46:19,660
nodes

1139
00:46:18,070 --> 00:46:21,880
you can do Geographic or<font color="#CCCCCC"> Enterprise</font>

1140
00:46:19,660 --> 00:46:23,859
sharding<font color="#E5E5E5"> you know of splitting your</font>

1141
00:46:21,880 --> 00:46:25,870
<font color="#E5E5E5">databases up based on geography on</font>

1142
00:46:23,860 --> 00:46:29,140
<font color="#E5E5E5">enterprise functionality things like</font>

1143
00:46:25,870 --> 00:46:30,580
that<font color="#CCCCCC"> if you want to get really</font><font color="#E5E5E5"> advanced</font>

1144
00:46:29,140 --> 00:46:33,730
you can<font color="#E5E5E5"> start doing</font><font color="#CCCCCC"> multi master</font><font color="#E5E5E5"> tools</font>

1145
00:46:30,580 --> 00:46:36,130
<font color="#E5E5E5">you know you can use bucardo</font><font color="#CCCCCC"> or second</font>

1146
00:46:33,730 --> 00:46:39,040
quadrants<font color="#CCCCCC"> PDR</font><font color="#E5E5E5"> for doing multi</font><font color="#CCCCCC"> master</font><font color="#E5E5E5"> on</font>

1147
00:46:36,130 --> 00:46:40,480
posters or you start thinking<font color="#CCCCCC"> about data</font>

1148
00:46:39,040 --> 00:46:42,430
<font color="#E5E5E5">Federation like moving our title</font>

1149
00:46:40,480 --> 00:46:43,780
databases to all other<font color="#E5E5E5"> data stores move</font>

1150
00:46:42,430 --> 00:46:47,589
it to<font color="#E5E5E5"> redshift being plumb one of those</font>

1151
00:46:43,780 --> 00:46:51,100
guys<font color="#E5E5E5"> or even</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> coal</font><font color="#CCCCCC"> storage you know</font>

1152
00:46:47,590 --> 00:46:52,780
<font color="#E5E5E5">big old s3 buckets</font><font color="#CCCCCC"> or if you want to get</font>

1153
00:46:51,100 --> 00:46:54,970
<font color="#E5E5E5">really</font><font color="#CCCCCC"> fancy you</font><font color="#E5E5E5"> can start using foreign</font>

1154
00:46:52,780 --> 00:46:58,600
data<font color="#E5E5E5"> wrappers to</font><font color="#CCCCCC"> federate databases with</font>

1155
00:46:54,970 --> 00:47:00,520
a single API<font color="#E5E5E5"> that's that's fine you know</font>

1156
00:46:58,600 --> 00:47:03,759
or<font color="#CCCCCC"> just run big small databases inside</font>

1157
00:47:00,520 --> 00:47:04,660
the same<font color="#CCCCCC"> Postgres instance well so in</font>

1158
00:47:03,760 --> 00:47:08,380
conclusion

1159
00:47:04,660 --> 00:47:11,049
<font color="#E5E5E5">Postgres is amazing thank you thank you</font>

1160
00:47:08,380 --> 00:47:13,630
<font color="#E5E5E5">for</font><font color="#CCCCCC"> coming to my TED talk it can</font><font color="#E5E5E5"> handle</font>

1161
00:47:11,050 --> 00:47:15,700
everything<font color="#E5E5E5"> you know it can well the it</font>

1162
00:47:13,630 --> 00:47:17,410
is amazing that<font color="#E5E5E5"> one product</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> the</font>

1163
00:47:15,700 --> 00:47:20,290
same binaries can handle<font color="#E5E5E5"> this range of</font>

1164
00:47:17,410 --> 00:47:23,710
<font color="#E5E5E5">data that is pretty astonishing</font><font color="#CCCCCC"> the nice</font>

1165
00:47:20,290 --> 00:47:25,090
part is<font color="#CCCCCC"> it'll grow</font><font color="#E5E5E5"> with you and you know</font>

1166
00:47:23,710 --> 00:47:26,560
it's important not<font color="#E5E5E5"> to over tool your</font>

1167
00:47:25,090 --> 00:47:29,290
installation and go crazy<font color="#E5E5E5"> at a very</font>

1168
00:47:26,560 --> 00:47:30,850
<font color="#CCCCCC">early</font><font color="#E5E5E5"> stage because</font><font color="#CCCCCC"> you want to in part</font>

1169
00:47:29,290 --> 00:47:34,720
you<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> want to implement me more than</font>

1170
00:47:30,850 --> 00:47:36,790
you understand<font color="#E5E5E5"> but always keep an eye</font>

1171
00:47:34,720 --> 00:47:38,020
out<font color="#CCCCCC"> for when we when</font><font color="#E5E5E5"> we hit</font><font color="#CCCCCC"> that next</font>

1172
00:47:36,790 --> 00:47:38,259
order<font color="#E5E5E5"> of magnitude what are we going to</font>

1173
00:47:38,020 --> 00:47:39,850
do

1174
00:47:38,260 --> 00:47:41,440
what's our roadmap for going<font color="#CCCCCC"> down this</font>

1175
00:47:39,850 --> 00:47:42,850
you don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to go much farther than</font>

1176
00:47:41,440 --> 00:47:44,760
one order of magnitude but keep that

1177
00:47:42,850 --> 00:47:48,150
<font color="#E5E5E5">next order of magnitude in mind and</font>

1178
00:47:44,760 --> 00:47:48,150
thank you very<font color="#E5E5E5"> much</font>

1179
00:47:55,630 --> 00:47:59,390
<font color="#E5E5E5">okay thanks to yourself</font><font color="#CCCCCC"> we do have time</font>

1180
00:47:58,100 --> 00:48:00,560
<font color="#E5E5E5">for a couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> questions so</font><font color="#CCCCCC"> please</font>

1181
00:47:59,390 --> 00:48:02,629
raise<font color="#CCCCCC"> your hand</font><font color="#E5E5E5"> and wait for the</font>

1182
00:48:00,560 --> 00:48:09,009
<font color="#E5E5E5">microphone so that we get</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> on on tape</font>

1183
00:48:02,630 --> 00:48:12,320
<font color="#E5E5E5">this or hello thanks for your talk</font>

1184
00:48:09,010 --> 00:48:15,610
<font color="#CCCCCC">what's your</font><font color="#E5E5E5"> strategy for estimating</font><font color="#CCCCCC"> the</font>

1185
00:48:12,320 --> 00:48:15,610
size of the working set

1186
00:48:19,660 --> 00:48:24,618
I've been busted<font color="#E5E5E5"> that the answer the</font>

1187
00:48:23,119 --> 00:48:27,859
<font color="#E5E5E5">answer is I don't</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> consistent one</font>

1188
00:48:24,619 --> 00:48:29,900
it's it's you know it's<font color="#E5E5E5"> usually I like</font>

1189
00:48:27,859 --> 00:48:31,848
like<font color="#CCCCCC"> particular slow queries I can look</font>

1190
00:48:29,900 --> 00:48:34,549
<font color="#E5E5E5">at how many what what they're doing or</font>

1191
00:48:31,849 --> 00:48:36,500
how much or page<font color="#CCCCCC"> what page replacement</font>

1192
00:48:34,549 --> 00:48:38,869
on them<font color="#CCCCCC"> I wish I had a tool</font><font color="#E5E5E5"> that would</font>

1193
00:48:36,500 --> 00:48:40,670
say you know the PG @ PG working said

1194
00:48:38,869 --> 00:48:43,609
and I read it for<font color="#E5E5E5"> a while it says</font><font color="#CCCCCC"> 83</font>

1195
00:48:40,670 --> 00:48:44,839
gigabytes have a nice day<font color="#E5E5E5"> so but but</font>

1196
00:48:43,609 --> 00:48:46,460
it's it's one of these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> that I</font>

1197
00:48:44,839 --> 00:48:51,680
kind<font color="#CCCCCC"> of have to reinvent for each each</font>

1198
00:48:46,460 --> 00:48:59,180
time<font color="#E5E5E5"> I wish I had a better answer okay</font>

1199
00:48:51,680 --> 00:49:01,700
do<font color="#E5E5E5"> you have other questions yes when you</font>

1200
00:48:59,180 --> 00:49:04,520
talked about partitioning tables

1201
00:49:01,700 --> 00:49:07,520
I didn't acoustically understand what

1202
00:49:04,520 --> 00:49:09,980
you said the second criterion for the

1203
00:49:07,520 --> 00:49:12,140
<font color="#CCCCCC">column that</font><font color="#E5E5E5"> you choose right I was a</font>

1204
00:49:09,980 --> 00:49:14,000
partition<font color="#E5E5E5"> key</font><font color="#CCCCCC"> who said it should</font><font color="#E5E5E5"> be a</font>

1205
00:49:12,140 --> 00:49:16,250
column that<font color="#CCCCCC"> would</font><font color="#E5E5E5"> that is set when the</font>

1206
00:49:14,000 --> 00:49:18,770
row is created and there's something

1207
00:49:16,250 --> 00:49:21,559
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you said about arranged around the</font>

1208
00:49:18,770 --> 00:49:25,309
the rule a good set of<font color="#E5E5E5"> rules for</font>

1209
00:49:21,559 --> 00:49:26,960
partition key are<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> relatively</font>

1210
00:49:25,309 --> 00:49:29,299
invariant it doesn't have to be<font color="#E5E5E5"> 100%</font>

1211
00:49:26,960 --> 00:49:31,400
immutable<font color="#E5E5E5"> but it should not</font><font color="#CCCCCC"> change all</font>

1212
00:49:29,299 --> 00:49:33,529
the time<font color="#CCCCCC"> because then you might have to</font>

1213
00:49:31,400 --> 00:49:35,599
move rows between partitions that's<font color="#CCCCCC"> it</font>

1214
00:49:33,529 --> 00:49:41,660
that used to<font color="#E5E5E5"> be hard now it's just</font>

1215
00:49:35,599 --> 00:49:44,569
expensive<font color="#CCCCCC"> it should it should divide the</font>

1216
00:49:41,660 --> 00:49:46,879
divide the the data into relatively even

1217
00:49:44,569 --> 00:49:48,259
partitions you know if one if it divides

1218
00:49:46,880 --> 00:49:49,609
it into two partitions one of which is

1219
00:49:48,260 --> 00:49:51,799
this<font color="#E5E5E5"> and one of which is that that's a</font>

1220
00:49:49,609 --> 00:49:53,660
bad partition key<font color="#E5E5E5"> but the most the the</font>

1221
00:49:51,799 --> 00:49:55,849
<font color="#CCCCCC">plate</font><font color="#E5E5E5"> and usually people can get that</font>

1222
00:49:53,660 --> 00:49:57,950
fine<font color="#E5E5E5"> the hardest part is it needs to be</font>

1223
00:49:55,849 --> 00:50:00,589
used<font color="#CCCCCC"> at essentially</font><font color="#E5E5E5"> every query either</font>

1224
00:49:57,950 --> 00:50:02,328
in equality or as a narrow range so<font color="#CCCCCC"> that</font>

1225
00:50:00,589 --> 00:50:04,880
very few partitions are selected by the

1226
00:50:02,329 --> 00:50:06,980
query<font color="#E5E5E5"> because</font><font color="#CCCCCC"> if you don't</font><font color="#E5E5E5"> do that it</font>

1227
00:50:04,880 --> 00:50:08,779
has<font color="#E5E5E5"> to scan every partition and unify</font>

1228
00:50:06,980 --> 00:50:12,349
the results and that's worse<font color="#CCCCCC"> than just</font>

1229
00:50:08,779 --> 00:50:14,150
<font color="#E5E5E5">one big table</font><font color="#CCCCCC"> that way says then one</font>

1230
00:50:12,349 --> 00:50:16,549
<font color="#E5E5E5">last question here somewhere that</font><font color="#CCCCCC"> race</font>

1231
00:50:14,150 --> 00:50:19,390
<font color="#CCCCCC">to here maybe</font><font color="#E5E5E5"> or not</font><font color="#CCCCCC"> yeah</font>

1232
00:50:16,549 --> 00:50:19,390
yes that one

1233
00:50:22,720 --> 00:50:27,109
and again when I could I have a chance

1234
00:50:25,340 --> 00:50:30,370
the slides will be uploaded<font color="#CCCCCC"> to that</font>

1235
00:50:27,110 --> 00:50:35,180
thank you for<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> you see that</font>

1236
00:50:30,370 --> 00:50:39,560
<font color="#E5E5E5">complexity or</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> for big data for huge</font>

1237
00:50:35,180 --> 00:50:46,430
data that<font color="#E5E5E5"> complexity to use Postgres is</font>

1238
00:50:39,560 --> 00:50:51,620
much bigger than<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use metadata on</font>

1239
00:50:46,430 --> 00:50:55,629
top of your storage to build some system

1240
00:50:51,620 --> 00:50:58,790
which how to handle<font color="#E5E5E5"> this data on top of</font>

1241
00:50:55,630 --> 00:51:02,360
standard<font color="#CCCCCC"> Postgres let's say</font><font color="#E5E5E5"> I don't</font>

1242
00:50:58,790 --> 00:51:05,029
<font color="#CCCCCC">think I quite a got the</font><font color="#E5E5E5"> question and</font><font color="#CCCCCC"> was</font>

1243
00:51:02,360 --> 00:51:09,110
it was a<font color="#CCCCCC"> request or</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> comment</font><font color="#E5E5E5"> it was a</font>

1244
00:51:05,030 --> 00:51:12,530
<font color="#E5E5E5">question</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if you need to handle with</font>

1245
00:51:09,110 --> 00:51:16,130
<font color="#CCCCCC">the really big data</font><font color="#E5E5E5"> mm-hmm you should</font>

1246
00:51:12,530 --> 00:51:20,570
build<font color="#E5E5E5"> the system with the metadata on</font>

1247
00:51:16,130 --> 00:51:22,100
top of on top of<font color="#E5E5E5"> Postgres</font><font color="#CCCCCC"> well I'll</font>

1248
00:51:20,570 --> 00:51:24,470
<font color="#E5E5E5">search the question is if you are you</font>

1249
00:51:22,100 --> 00:51:26,210
<font color="#CCCCCC">head like handling huge data</font><font color="#E5E5E5"> should you</font>

1250
00:51:24,470 --> 00:51:28,790
build<font color="#CCCCCC"> the</font><font color="#E5E5E5"> system using metadata on top</font>

1251
00:51:26,210 --> 00:51:30,710
of<font color="#E5E5E5"> Postgres and the answer is sure</font><font color="#CCCCCC"> I</font>

1252
00:51:28,790 --> 00:51:32,810
there's no inherent<font color="#E5E5E5"> problem with that</font>

1253
00:51:30,710 --> 00:51:34,640
<font color="#CCCCCC">you know it depends</font><font color="#E5E5E5"> on I think that</font>

1254
00:51:32,810 --> 00:51:36,680
depends<font color="#CCCCCC"> a little bit on what kind if</font>

1255
00:51:34,640 --> 00:51:38,690
<font color="#CCCCCC">you're if you're if</font><font color="#E5E5E5"> your data if this is</font>

1256
00:51:36,680 --> 00:51:41,560
a consolidated<font color="#E5E5E5"> database against a lot of</font>

1257
00:51:38,690 --> 00:51:44,750
very<font color="#E5E5E5"> large number of data sources and</font>

1258
00:51:41,560 --> 00:51:46,250
source schemas<font color="#E5E5E5"> then building a mad at</font>

1259
00:51:44,750 --> 00:51:48,770
metadata system will be much more

1260
00:51:46,250 --> 00:51:50,930
<font color="#CCCCCC">valuable</font><font color="#E5E5E5"> than if it's you know sensor</font>

1261
00:51:48,770 --> 00:51:52,610
data from<font color="#E5E5E5"> one kind of sensor you know if</font>

1262
00:51:50,930 --> 00:51:54,259
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example if</font><font color="#E5E5E5"> all you're</font><font color="#CCCCCC"> doing is</font>

1263
00:51:52,610 --> 00:51:56,330
sensor data from<font color="#E5E5E5"> one brand of wind</font>

1264
00:51:54,260 --> 00:51:58,640
turbine<font color="#E5E5E5"> that's to use a</font><font color="#CCCCCC"> real-life</font>

1265
00:51:56,330 --> 00:52:01,130
example<font color="#E5E5E5"> there's not a lot of metadata</font>

1266
00:51:58,640 --> 00:52:03,710
there because you know it's<font color="#E5E5E5"> like one</font>

1267
00:52:01,130 --> 00:52:05,870
table one schema<font color="#E5E5E5"> just that one table</font>

1268
00:52:03,710 --> 00:52:07,940
<font color="#E5E5E5">happens to have you know have 83 billion</font>

1269
00:52:05,870 --> 00:52:09,410
rows in it<font color="#CCCCCC"> so at</font><font color="#E5E5E5"> that point it would</font>

1270
00:52:07,940 --> 00:52:11,840
just be<font color="#E5E5E5"> more work than it was worth to</font>

1271
00:52:09,410 --> 00:52:13,790
build some metadata system<font color="#E5E5E5"> but if your</font>

1272
00:52:11,840 --> 00:52:16,580
system is consolidating say voting

1273
00:52:13,790 --> 00:52:18,830
records against you know<font color="#E5E5E5"> across the</font>

1274
00:52:16,580 --> 00:52:20,360
whole EU<font color="#E5E5E5"> you know where everybody</font><font color="#CCCCCC"> has</font>

1275
00:52:18,830 --> 00:52:21,770
their own systems and complications<font color="#E5E5E5"> and</font>

1276
00:52:20,360 --> 00:52:23,780
things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> then a minute eya</font>

1277
00:52:21,770 --> 00:52:26,420
system would probably<font color="#E5E5E5"> not just</font><font color="#CCCCCC"> be useful</font>

1278
00:52:23,780 --> 00:52:27,140
<font color="#E5E5E5">or probably necessary</font><font color="#CCCCCC"> so thank you very</font>

1279
00:52:26,420 --> 00:52:29,680
<font color="#E5E5E5">much Gustav</font>

1280
00:52:27,140 --> 00:52:29,680
<font color="#CCCCCC">will</font><font color="#E5E5E5"> the end please</font>

1281
00:52:32,660 --> 00:52:34,720
<font color="#E5E5E5">you</font>

