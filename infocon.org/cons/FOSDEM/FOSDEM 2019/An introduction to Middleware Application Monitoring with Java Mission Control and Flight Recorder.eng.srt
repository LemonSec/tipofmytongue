1
00:00:05,799 --> 00:00:11,559
yeah welcome everybody<font color="#E5E5E5"> I am</font><font color="#CCCCCC"> Mario</font>

2
00:00:08,650 --> 00:00:14,879
daughter and his Marco<font color="#CCCCCC"> Steel we</font><font color="#E5E5E5"> are here</font>

3
00:00:11,559 --> 00:00:18,600
today to introduce a little<font color="#CCCCCC"> bit about</font>

4
00:00:14,879 --> 00:00:22,869
<font color="#E5E5E5">Mission Control if I record and explain</font>

5
00:00:18,600 --> 00:00:25,510
what what it is how<font color="#E5E5E5"> it can be usable and</font>

6
00:00:22,870 --> 00:00:30,940
our<font color="#E5E5E5"> economy is over especially</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> a</font>

7
00:00:25,510 --> 00:00:34,210
<font color="#E5E5E5">production system</font><font color="#CCCCCC"> that's the agenda</font><font color="#E5E5E5"> for</font>

8
00:00:30,940 --> 00:00:36,579
today<font color="#CCCCCC"> as I said</font><font color="#E5E5E5"> a short introduction and</font>

9
00:00:34,210 --> 00:00:38,710
then<font color="#E5E5E5"> we will see one specific use case</font>

10
00:00:36,579 --> 00:00:41,769
but<font color="#CCCCCC"> that's that</font><font color="#E5E5E5"> should be taken as an</font>

11
00:00:38,710 --> 00:00:44,979
<font color="#CCCCCC">example what you can do with with</font><font color="#E5E5E5"> the</font>

12
00:00:41,769 --> 00:00:48,190
framework<font color="#E5E5E5"> obviously the example is about</font>

13
00:00:44,979 --> 00:00:49,629
<font color="#E5E5E5">open tracing and we will see how</font><font color="#CCCCCC"> to to</font>

14
00:00:48,190 --> 00:00:54,599
do<font color="#E5E5E5"> analysis or</font><font color="#CCCCCC"> a distributed application</font>

15
00:00:49,629 --> 00:00:54,599
<font color="#CCCCCC">with load balancing and</font><font color="#E5E5E5"> and everything</font>

16
00:00:55,289 --> 00:01:01,210
<font color="#E5E5E5">the first code drops from I would</font><font color="#CCCCCC"> say</font>

17
00:00:59,260 --> 00:01:03,280
<font color="#CCCCCC">Mission</font><font color="#E5E5E5"> Control area code that can</font><font color="#CCCCCC"> be</font>

18
00:01:01,210 --> 00:01:05,650
seen as some kind<font color="#E5E5E5"> of a framework or a</font>

19
00:01:03,280 --> 00:01:09,610
<font color="#CCCCCC">platform</font><font color="#E5E5E5"> it's actually two big pieces</font>

20
00:01:05,650 --> 00:01:11,710
one is his living in in the JDK and

21
00:01:09,610 --> 00:01:13,719
<font color="#E5E5E5">that's flight recorder and the other</font>

22
00:01:11,710 --> 00:01:15,689
part is a standalone application<font color="#CCCCCC"> with a</font>

23
00:01:13,719 --> 00:01:17,860
very comprehensive<font color="#E5E5E5"> set of API so that is</font>

24
00:01:15,689 --> 00:01:20,229
Mission<font color="#CCCCCC"> Control</font>

25
00:01:17,860 --> 00:01:24,280
<font color="#CCCCCC">Jeff Larry got there</font><font color="#E5E5E5"> was open source</font>

26
00:01:20,229 --> 00:01:26,649
<font color="#CCCCCC">last year with open JDK 11y Mission</font>

27
00:01:24,280 --> 00:01:30,609
Control<font color="#E5E5E5"> it was their father practically</font>

28
00:01:26,649 --> 00:01:33,820
soon after<font color="#CCCCCC"> sometime it may I believe and</font>

29
00:01:30,609 --> 00:01:37,288
they<font color="#E5E5E5"> both residing us as official</font>

30
00:01:33,820 --> 00:01:39,788
projects in under the open JDK umbrella

31
00:01:37,289 --> 00:01:43,060
<font color="#CCCCCC">since then it's</font><font color="#E5E5E5"> been less than a year</font>

32
00:01:39,789 --> 00:01:45,219
<font color="#E5E5E5">basically there's a really very awesome</font>

33
00:01:43,060 --> 00:01:48,310
number of contribution so this has been

34
00:01:45,219 --> 00:01:49,869
a very very<font color="#E5E5E5"> good project from the</font>

35
00:01:48,310 --> 00:01:52,240
beginning<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> want to take this</font>

36
00:01:49,869 --> 00:01:56,140
<font color="#CCCCCC">opportunity to</font><font color="#E5E5E5"> thank Marcus because he's</font>

37
00:01:52,240 --> 00:01:59,320
running<font color="#E5E5E5"> it is really really open on the</font>

38
00:01:56,140 --> 00:02:01,299
project<font color="#E5E5E5"> and of course why Oregon her</font>

39
00:01:59,320 --> 00:02:03,130
daughter the main contributor at this

40
00:02:01,299 --> 00:02:04,689
point there's<font color="#CCCCCC"> been a lot of discussion</font>

41
00:02:03,130 --> 00:02:06,158
and contribution from the rest of<font color="#CCCCCC"> the</font>

42
00:02:04,689 --> 00:02:09,699
community<font color="#CCCCCC"> so the very healthy</font>

43
00:02:06,159 --> 00:02:13,300
<font color="#CCCCCC">open-source project</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> Jenny</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> my</font>

44
00:02:09,699 --> 00:02:16,359
recorder the good analogy for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

45
00:02:13,300 --> 00:02:19,110
<font color="#E5E5E5">actually from the name itself when you</font>

46
00:02:16,360 --> 00:02:22,120
<font color="#E5E5E5">think about the flight recorder</font>

47
00:02:19,110 --> 00:02:24,460
<font color="#E5E5E5">data</font><font color="#CCCCCC"> recorded in</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> knife plane</font><font color="#E5E5E5"> it's</font>

48
00:02:22,120 --> 00:02:26,830
something that starts gathering

49
00:02:24,460 --> 00:02:30,660
<font color="#E5E5E5">information of events happened during</font>

50
00:02:26,830 --> 00:02:33,550
the flight<font color="#CCCCCC"> sometimes also</font><font color="#E5E5E5"> in case of</font>

51
00:02:30,660 --> 00:02:37,660
<font color="#E5E5E5">catastrophic events keeps recording and</font>

52
00:02:33,550 --> 00:02:40,540
then there is a way to store this all

53
00:02:37,660 --> 00:02:42,910
those<font color="#E5E5E5"> events and at some point with a</font>

54
00:02:40,540 --> 00:02:44,980
<font color="#E5E5E5">forensic tool afterward</font><font color="#CCCCCC"> analyze that</font>

55
00:02:42,910 --> 00:02:47,020
that this<font color="#E5E5E5"> is what happens with between</font>

56
00:02:44,980 --> 00:02:49,209
Mishimoto a fairy godmother is this

57
00:02:47,020 --> 00:02:52,090
<font color="#E5E5E5">forensic tool</font><font color="#CCCCCC"> while fairy God is the</font>

58
00:02:49,210 --> 00:02:56,500
actual<font color="#E5E5E5"> value itself again open source</font><font color="#CCCCCC"> in</font>

59
00:02:52,090 --> 00:02:58,930
JDK<font color="#E5E5E5"> 11 is very actively develop it</font><font color="#CCCCCC"> so</font>

60
00:02:56,500 --> 00:03:04,960
the gospel<font color="#CCCCCC"> team is still adding features</font>

61
00:02:58,930 --> 00:03:07,930
<font color="#CCCCCC">and every release an example of how you</font>

62
00:03:04,960 --> 00:03:11,260
can use<font color="#CCCCCC"> that so in addition to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> usual</font>

63
00:03:07,930 --> 00:03:14,080
<font color="#E5E5E5">matrix</font><font color="#CCCCCC"> there therefore</font><font color="#E5E5E5"> for the actual</font>

64
00:03:11,260 --> 00:03:16,570
JVM<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> also a very nice and neat</font>

65
00:03:14,080 --> 00:03:18,340
API that you can use<font color="#E5E5E5"> to extend your own</font>

66
00:03:16,570 --> 00:03:20,320
application so it's possible<font color="#E5E5E5"> to</font>

67
00:03:18,340 --> 00:03:22,660
instrument your<font color="#E5E5E5"> application adding</font>

68
00:03:20,320 --> 00:03:25,299
events<font color="#CCCCCC"> and then those events will</font>

69
00:03:22,660 --> 00:03:28,570
basically<font color="#E5E5E5"> use everything</font><font color="#CCCCCC"> that is the</font>

70
00:03:25,300 --> 00:03:30,730
same infrastructure that<font color="#E5E5E5"> the core flag</font>

71
00:03:28,570 --> 00:03:34,030
or the events<font color="#E5E5E5"> use and then they can then</font>

72
00:03:30,730 --> 00:03:35,649
<font color="#E5E5E5">be analyzed by Mission Control</font><font color="#CCCCCC"> we see</font>

73
00:03:34,030 --> 00:03:39,280
here so it's very<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to add</font><font color="#CCCCCC"> events</font>

74
00:03:35,650 --> 00:03:41,620
<font color="#CCCCCC">this is</font><font color="#E5E5E5"> the most trivial example</font><font color="#CCCCCC"> it's</font>

75
00:03:39,280 --> 00:03:44,170
basically creating<font color="#E5E5E5"> a class that needs to</font>

76
00:03:41,620 --> 00:03:46,360
extend<font color="#E5E5E5"> event and then you</font><font color="#CCCCCC"> can start</font>

77
00:03:44,170 --> 00:03:49,030
adding<font color="#E5E5E5"> some information about what it</font><font color="#CCCCCC"> is</font>

78
00:03:46,360 --> 00:03:52,090
<font color="#E5E5E5">that you are logging in this case the</font>

79
00:03:49,030 --> 00:03:54,130
<font color="#E5E5E5">tree example is just adding labels but</font>

80
00:03:52,090 --> 00:03:57,880
you are all sort of<font color="#E5E5E5"> different method</font><font color="#CCCCCC"> odd</font>

81
00:03:54,130 --> 00:04:01,120
<font color="#E5E5E5">that can be useful to analyze and</font>

82
00:03:57,880 --> 00:04:03,310
structure the event things like the

83
00:04:01,120 --> 00:04:08,860
frequency<font color="#CCCCCC"> for instance or giving meaning</font>

84
00:04:03,310 --> 00:04:11,110
to specific fields and yeah and<font color="#E5E5E5"> that</font>

85
00:04:08,860 --> 00:04:14,230
that is<font color="#E5E5E5"> basically everything</font><font color="#CCCCCC"> you do to</font>

86
00:04:11,110 --> 00:04:16,930
define<font color="#E5E5E5"> those then whenever is necessary</font>

87
00:04:14,230 --> 00:04:19,930
<font color="#E5E5E5">you decide whatever them event should be</font>

88
00:04:16,930 --> 00:04:21,430
committed at that point some magic

89
00:04:19,930 --> 00:04:24,640
happens and<font color="#E5E5E5"> then it ends up in</font><font color="#CCCCCC"> the in</font>

90
00:04:21,430 --> 00:04:29,830
the<font color="#E5E5E5"> flight record file</font><font color="#CCCCCC"> unless</font><font color="#E5E5E5"> you see</font>

91
00:04:24,640 --> 00:04:32,080
<font color="#E5E5E5">this is extremely easy the next step the</font>

92
00:04:29,830 --> 00:04:32,438
next part of<font color="#E5E5E5"> the picture is Mission</font>

93
00:04:32,080 --> 00:04:35,019
<font color="#CCCCCC">Control</font>

94
00:04:32,439 --> 00:04:39,249
Mission Control<font color="#E5E5E5"> is an application so</font>

95
00:04:35,019 --> 00:04:40,989
it's mostly<font color="#E5E5E5"> clips so you run as a</font>

96
00:04:39,249 --> 00:04:45,580
standalone<font color="#CCCCCC"> app desktop application</font>

97
00:04:40,989 --> 00:04:48,219
<font color="#E5E5E5">however</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> also has an API that you can</font>

98
00:04:45,580 --> 00:04:51,039
use to build<font color="#E5E5E5"> your own application using</font>

99
00:04:48,219 --> 00:04:53,259
<font color="#E5E5E5">the</font><font color="#CCCCCC"> the power</font><font color="#E5E5E5"> of this framework</font><font color="#CCCCCC"> it's an</font>

100
00:04:51,039 --> 00:04:56,469
API<font color="#CCCCCC"> we will see</font><font color="#E5E5E5"> that in the next</font><font color="#CCCCCC"> slide</font>

101
00:04:53,259 --> 00:04:59,229
<font color="#CCCCCC">there is very similar I would say to the</font>

102
00:04:56,469 --> 00:05:04,839
streams<font color="#E5E5E5"> so you don't actually go and do</font>

103
00:04:59,229 --> 00:05:07,419
some one by one even processing<font color="#E5E5E5"> on the</font>

104
00:05:04,839 --> 00:05:09,639
<font color="#E5E5E5">data in studio ask Mission Control to</font>

105
00:05:07,419 --> 00:05:13,389
give you some statistical analysis<font color="#E5E5E5"> for</font>

106
00:05:09,639 --> 00:05:16,749
<font color="#E5E5E5">you and this is very powerful that's an</font>

107
00:05:13,389 --> 00:05:19,959
example<font color="#E5E5E5"> for instance this is basically a</font>

108
00:05:16,749 --> 00:05:22,239
method<font color="#E5E5E5"> that is using the API without the</font>

109
00:05:19,959 --> 00:05:26,709
full application<font color="#E5E5E5"> but only the API to</font>

110
00:05:22,239 --> 00:05:29,799
<font color="#CCCCCC">create an HTML report out of</font><font color="#E5E5E5"> the other</font>

111
00:05:26,709 --> 00:05:31,419
<font color="#E5E5E5">rules</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> load</font><font color="#E5E5E5"> the events</font>

112
00:05:29,800 --> 00:05:35,050
this<font color="#CCCCCC"> is the heaven</font><font color="#E5E5E5"> file that's been</font>

113
00:05:31,419 --> 00:05:37,869
created by by the JVM when when<font color="#E5E5E5"> dump</font>

114
00:05:35,050 --> 00:05:39,519
ended the<font color="#E5E5E5"> flyer got the file another</font>

115
00:05:37,869 --> 00:05:42,279
example here<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a little bit more</font>

116
00:05:39,519 --> 00:05:44,559
<font color="#E5E5E5">complex and</font><font color="#CCCCCC"> complexity I</font><font color="#E5E5E5"> really mean</font>

117
00:05:42,279 --> 00:05:46,689
just<font color="#E5E5E5"> five lines of code more and this is</font>

118
00:05:44,559 --> 00:05:49,599
<font color="#E5E5E5">explain you how</font><font color="#CCCCCC"> powerful is there</font><font color="#E5E5E5"> were</font>

119
00:05:46,689 --> 00:05:51,279
<font color="#E5E5E5">API so basically</font><font color="#CCCCCC"> you're still</font><font color="#E5E5E5"> yeah you</font>

120
00:05:49,599 --> 00:05:53,019
still collecting events to still

121
00:05:51,279 --> 00:05:55,869
analyzing them<font color="#CCCCCC"> and there at some point</font>

122
00:05:53,019 --> 00:05:59,469
<font color="#CCCCCC">you get account and average and those</font>

123
00:05:55,869 --> 00:06:01,419
are as you see those are basically you

124
00:05:59,469 --> 00:06:03,579
never deal<font color="#CCCCCC"> with the single events you</font>

125
00:06:01,419 --> 00:06:05,349
basically<font color="#CCCCCC"> ask for to the framework to</font>

126
00:06:03,579 --> 00:06:07,209
give you an<font color="#CCCCCC"> average and the standard</font>

127
00:06:05,349 --> 00:06:09,279
deviation and then you can<font color="#E5E5E5"> print the</font>

128
00:06:07,209 --> 00:06:10,719
result<font color="#E5E5E5"> and so few lines of</font><font color="#CCCCCC"> code is</font>

129
00:06:09,279 --> 00:06:13,619
possible to get a lot of<font color="#E5E5E5"> information</font>

130
00:06:10,719 --> 00:06:16,769
<font color="#CCCCCC">although it some of this information</font>

131
00:06:13,619 --> 00:06:20,189
well actually<font color="#E5E5E5"> another example that we</font>

132
00:06:16,769 --> 00:06:22,329
were creating some example for this

133
00:06:20,189 --> 00:06:24,099
<font color="#E5E5E5">demonstration and we went for a more</font>

134
00:06:22,329 --> 00:06:25,749
complex one<font color="#CCCCCC"> that the Marco's</font><font color="#E5E5E5"> is going to</font>

135
00:06:24,099 --> 00:06:27,489
show you that's an example you<font color="#E5E5E5"> can</font>

136
00:06:25,749 --> 00:06:30,879
download<font color="#E5E5E5"> this is very nice</font><font color="#CCCCCC"> because this</font>

137
00:06:27,489 --> 00:06:32,948
<font color="#E5E5E5">is basically</font><font color="#CCCCCC"> two java application.run</font><font color="#E5E5E5"> in</font>

138
00:06:30,879 --> 00:06:34,959
<font color="#E5E5E5">two separate containers</font><font color="#CCCCCC"> they're talking</font>

139
00:06:32,949 --> 00:06:37,539
each other one is<font color="#E5E5E5"> controlling flight</font>

140
00:06:34,959 --> 00:06:39,879
recorder<font color="#E5E5E5"> and the other is actually the</font>

141
00:06:37,539 --> 00:06:43,329
<font color="#CCCCCC">IBM that</font><font color="#E5E5E5"> is being targeted to be</font>

142
00:06:39,879 --> 00:06:45,900
<font color="#E5E5E5">analyzed and then this is dumping events</font>

143
00:06:43,329 --> 00:06:49,110
<font color="#E5E5E5">that they forgot the</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> then the first</font>

144
00:06:45,900 --> 00:06:53,370
and analyzes using the<font color="#CCCCCC"> mission control</font>

145
00:06:49,110 --> 00:06:58,470
API gives<font color="#E5E5E5"> you another use case open</font>

146
00:06:53,370 --> 00:07:01,350
<font color="#CCCCCC">tracing this one us</font><font color="#E5E5E5"> right yes</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> yes</font>

147
00:06:58,470 --> 00:07:03,300
<font color="#E5E5E5">so I actually have a fever</font><font color="#CCCCCC"> so I might be</font>

148
00:07:01,350 --> 00:07:06,410
delirious<font color="#CCCCCC"> yeah we'll see what happens</font>

149
00:07:03,300 --> 00:07:09,690
<font color="#E5E5E5">anyways I'm gonna press</font><font color="#CCCCCC"> that I'm on so</font>

150
00:07:06,410 --> 00:07:11,750
open tracing yeah so<font color="#E5E5E5"> I'm I have an</font>

151
00:07:09,690 --> 00:07:16,320
example<font color="#E5E5E5"> here</font><font color="#CCCCCC"> consisting of a few</font>

152
00:07:11,750 --> 00:07:21,750
<font color="#CCCCCC">micro-services it's a robot ordering and</font>

153
00:07:16,320 --> 00:07:23,130
building application so this these<font color="#CCCCCC"> are</font>

154
00:07:21,750 --> 00:07:25,440
the<font color="#CCCCCC"> three micro</font><font color="#E5E5E5"> services we have</font><font color="#CCCCCC"> an</font>

155
00:07:23,130 --> 00:07:27,990
order service<font color="#E5E5E5"> that just takes the orders</font>

156
00:07:25,440 --> 00:07:29,639
and<font color="#E5E5E5"> when we get an order</font><font color="#CCCCCC"> we'll verify</font>

157
00:07:27,990 --> 00:07:31,830
<font color="#CCCCCC">that the customer is an actual</font><font color="#E5E5E5"> customer</font>

158
00:07:29,639 --> 00:07:34,680
<font color="#E5E5E5">in the system</font><font color="#CCCCCC"> and then we're</font><font color="#E5E5E5"> going to</font>

159
00:07:31,830 --> 00:07:38,190
talk to a factory for for building

160
00:07:34,680 --> 00:07:40,289
robots<font color="#E5E5E5"> and and yeah that's pretty much</font>

161
00:07:38,190 --> 00:07:43,590
<font color="#E5E5E5">it</font><font color="#CCCCCC"> we also have a low generator that we</font>

162
00:07:40,289 --> 00:07:47,990
can use to to to get do this<font color="#E5E5E5"> full system</font>

163
00:07:43,590 --> 00:07:51,539
testing so this is how it<font color="#E5E5E5"> might look</font>

164
00:07:47,990 --> 00:07:54,780
<font color="#CCCCCC">we're getting a request we're talking to</font>

165
00:07:51,539 --> 00:07:57,030
the say order system<font color="#E5E5E5"> and the order</font>

166
00:07:54,780 --> 00:07:59,099
system in turn is<font color="#E5E5E5"> going to verify</font><font color="#CCCCCC"> that</font>

167
00:07:57,030 --> 00:08:02,219
<font color="#E5E5E5">the customer exists by talking</font><font color="#CCCCCC"> to the</font>

168
00:07:59,099 --> 00:08:04,199
customer service<font color="#E5E5E5"> and then we're going to</font>

169
00:08:02,220 --> 00:08:06,690
<font color="#E5E5E5">maybe talk to a few factories to start</font>

170
00:08:04,199 --> 00:08:08,760
building<font color="#CCCCCC"> these robots</font><font color="#E5E5E5"> but what if</font>

171
00:08:06,690 --> 00:08:10,380
something<font color="#CCCCCC"> goes wrong</font><font color="#E5E5E5"> this is where</font><font color="#CCCCCC"> open</font>

172
00:08:08,760 --> 00:08:14,550
<font color="#CCCCCC">you know open tracing or distributed</font>

173
00:08:10,380 --> 00:08:17,729
tracing systems come in so Google

174
00:08:14,550 --> 00:08:19,169
released a<font color="#E5E5E5"> paper called dapper but many</font>

175
00:08:17,729 --> 00:08:21,030
of you<font color="#E5E5E5"> probably already know about and</font>

176
00:08:19,169 --> 00:08:22,740
about their infrastructure<font color="#CCCCCC"> they're</font>

177
00:08:21,030 --> 00:08:25,320
distributed infra ray<font color="#CCCCCC"> singh</font>

178
00:08:22,740 --> 00:08:28,349
infrastructure in 2010 and that<font color="#E5E5E5"> has</font>

179
00:08:25,320 --> 00:08:31,289
<font color="#E5E5E5">inspired a host of other systems</font><font color="#CCCCCC"> like</font>

180
00:08:28,349 --> 00:08:34,348
Zipkin and jagger you how many<font color="#E5E5E5"> here</font>

181
00:08:31,289 --> 00:08:37,500
knows about Zipkin<font color="#E5E5E5"> that's like almost</font>

182
00:08:34,349 --> 00:08:40,709
everybody<font color="#CCCCCC"> so you know it's a very</font>

183
00:08:37,500 --> 00:08:41,279
commonly used<font color="#E5E5E5"> tool of course this is</font>

184
00:08:40,708 --> 00:08:42,929
<font color="#E5E5E5">nothing new</font>

185
00:08:41,279 --> 00:08:44,219
distributed tracing is something that

186
00:08:42,929 --> 00:08:44,400
people have<font color="#CCCCCC"> been doing for quite some</font>

187
00:08:44,219 --> 00:08:46,790
time

188
00:08:44,400 --> 00:08:49,730
all the APM vendors are doing<font color="#E5E5E5"> this in</font>

189
00:08:46,790 --> 00:08:51,680
way or another<font color="#E5E5E5"> so and they are all doing</font>

190
00:08:49,730 --> 00:08:53,480
<font color="#CCCCCC">pretty much</font><font color="#E5E5E5"> the same thing if we talk</font>

191
00:08:51,680 --> 00:08:56,030
<font color="#E5E5E5">about</font><font color="#CCCCCC"> Javal and everybody's using</font>

192
00:08:53,480 --> 00:08:59,240
bytecode instrumentation<font color="#E5E5E5"> to get data</font>

193
00:08:56,030 --> 00:09:00,770
<font color="#E5E5E5">from</font><font color="#CCCCCC"> various different systems</font><font color="#E5E5E5"> so the</font>

194
00:08:59,240 --> 00:09:03,650
differentiation<font color="#E5E5E5"> here is really about</font>

195
00:09:00,770 --> 00:09:06,110
<font color="#E5E5E5">what to instrument what data to get and</font>

196
00:09:03,650 --> 00:09:07,760
then also the other<font color="#CCCCCC"> part of</font><font color="#E5E5E5"> the</font>

197
00:09:06,110 --> 00:09:10,760
<font color="#CCCCCC">differentiation is really how they</font>

198
00:09:07,760 --> 00:09:12,230
<font color="#CCCCCC">present the data to the user so the</font>

199
00:09:10,760 --> 00:09:13,730
value<font color="#E5E5E5"> out</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> knowing what</font><font color="#CCCCCC"> you</font>

200
00:09:12,230 --> 00:09:18,530
actually do with<font color="#CCCCCC"> the data</font><font color="#E5E5E5"> once you have</font>

201
00:09:13,730 --> 00:09:20,990
it so previously if<font color="#CCCCCC"> you wanted to add</font>

202
00:09:18,530 --> 00:09:22,459
some contextual information<font color="#E5E5E5"> so you have</font>

203
00:09:20,990 --> 00:09:24,380
your own<font color="#E5E5E5"> application and you would</font>

204
00:09:22,460 --> 00:09:25,880
really like<font color="#CCCCCC"> to put</font><font color="#E5E5E5"> some pieces</font><font color="#CCCCCC"> of</font>

205
00:09:24,380 --> 00:09:28,250
<font color="#E5E5E5">information into this distributed</font>

206
00:09:25,880 --> 00:09:32,180
tracing well<font color="#E5E5E5"> you would need to</font><font color="#CCCCCC"> work with</font>

207
00:09:28,250 --> 00:09:33,860
<font color="#E5E5E5">vendor specific</font><font color="#CCCCCC"> proprietary api or if</font>

208
00:09:32,180 --> 00:09:36,170
you as a library vendor wanted to add

209
00:09:33,860 --> 00:09:38,450
some special<font color="#E5E5E5"> information there again you</font>

210
00:09:36,170 --> 00:09:43,459
you pretty<font color="#E5E5E5"> much had to to work with one</font>

211
00:09:38,450 --> 00:09:46,490
of<font color="#CCCCCC"> the tracer implementations</font><font color="#E5E5E5"> so then</font>

212
00:09:43,460 --> 00:09:49,700
came open tracing which is an vendor

213
00:09:46,490 --> 00:09:53,720
independent<font color="#CCCCCC"> API</font><font color="#E5E5E5"> so that you can support</font>

214
00:09:49,700 --> 00:09:55,610
<font color="#CCCCCC">multiple tracers with one API and you</font>

215
00:09:53,720 --> 00:09:58,840
can add contextual<font color="#E5E5E5"> information without</font>

216
00:09:55,610 --> 00:10:04,520
worrying about some vendor looking and

217
00:09:58,840 --> 00:10:06,470
and yeah<font color="#E5E5E5"> there is a spec on github</font><font color="#CCCCCC"> if</font>

218
00:10:04,520 --> 00:10:09,740
you're interested in in in<font color="#CCCCCC"> looking at</font>

219
00:10:06,470 --> 00:10:14,000
<font color="#CCCCCC">the space spec so I'm quickly just going</font>

220
00:10:09,740 --> 00:10:15,890
to go<font color="#E5E5E5"> through some basic parts of the</font>

221
00:10:14,000 --> 00:10:18,790
API<font color="#CCCCCC"> because you will need to know this</font>

222
00:10:15,890 --> 00:10:21,020
one when I do the<font color="#E5E5E5"> demo so the core API</font>

223
00:10:18,790 --> 00:10:23,839
<font color="#E5E5E5">well this is not actually part</font><font color="#CCCCCC"> of the</font>

224
00:10:21,020 --> 00:10:26,510
API<font color="#E5E5E5"> but the core concept is a</font>

225
00:10:23,840 --> 00:10:29,810
distributed<font color="#E5E5E5"> trace so this is something</font>

226
00:10:26,510 --> 00:10:33,890
that<font color="#CCCCCC"> will span multiple processes or can</font>

227
00:10:29,810 --> 00:10:38,839
span multiple processes<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> really</font>

228
00:10:33,890 --> 00:10:44,270
directed acyclic graph of spans so we'll

229
00:10:38,840 --> 00:10:46,550
get<font color="#CCCCCC"> disbands and a span</font><font color="#E5E5E5"> itself has an</font>

230
00:10:44,270 --> 00:10:50,090
operation name and some some data<font color="#E5E5E5"> so</font>

231
00:10:46,550 --> 00:10:52,430
there<font color="#E5E5E5"> are key value</font><font color="#CCCCCC"> stores sort of it</font>

232
00:10:50,090 --> 00:10:54,050
has a start time<font color="#E5E5E5"> and an end time that's</font>

233
00:10:52,430 --> 00:10:56,060
<font color="#E5E5E5">really the key key piece of</font><font color="#CCCCCC"> information</font>

234
00:10:54,050 --> 00:10:59,000
you you want<font color="#E5E5E5"> to know how long these</font>

235
00:10:56,060 --> 00:11:00,619
bands took because that's<font color="#E5E5E5"> probably one</font>

236
00:10:59,000 --> 00:11:01,040
of the key pieces of<font color="#CCCCCC"> information you're</font>

237
00:11:00,620 --> 00:11:03,220
going<font color="#E5E5E5"> to</font>

238
00:11:01,040 --> 00:11:05,719
<font color="#E5E5E5">to find out that</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> is going bad</font>

239
00:11:03,220 --> 00:11:07,730
<font color="#E5E5E5">okay and then there's</font><font color="#CCCCCC"> the spam context</font>

240
00:11:05,720 --> 00:11:12,110
and that<font color="#E5E5E5"> is propagated across these post</font>

241
00:11:07,730 --> 00:11:14,839
would cross<font color="#CCCCCC"> the process boundaries yeah</font>

242
00:11:12,110 --> 00:11:17,600
<font color="#E5E5E5">so I'm just</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> skip the head</font>

243
00:11:14,839 --> 00:11:20,329
so in<font color="#E5E5E5"> our robot shop this is what this</font>

244
00:11:17,600 --> 00:11:22,279
graph could look like<font color="#E5E5E5"> so we have the</font>

245
00:11:20,329 --> 00:11:23,479
<font color="#CCCCCC">load generator which does a full system</font>

246
00:11:22,279 --> 00:11:25,970
test<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going to create a sauce</font>

247
00:11:23,480 --> 00:11:27,589
customer a random<font color="#CCCCCC"> customer then we're</font>

248
00:11:25,970 --> 00:11:30,079
going to<font color="#E5E5E5"> post an order which might be</font>

249
00:11:27,589 --> 00:11:32,089
multiple<font color="#E5E5E5"> robots that want to create</font>

250
00:11:30,079 --> 00:11:34,219
<font color="#CCCCCC">we're going to start by validating the</font>

251
00:11:32,089 --> 00:11:35,389
customer then create whatever many

252
00:11:34,220 --> 00:11:38,300
robots we want to create

253
00:11:35,389 --> 00:11:40,519
pick up the robot<font color="#E5E5E5"> and you know fulfill</font>

254
00:11:38,300 --> 00:11:44,709
the order<font color="#E5E5E5"> and at the very end delete our</font>

255
00:11:40,519 --> 00:11:48,380
customer so<font color="#E5E5E5"> I'm gonna do a quick demo of</font>

256
00:11:44,709 --> 00:11:53,779
<font color="#E5E5E5">what this might</font><font color="#CCCCCC"> look like so I'm gonna</font>

257
00:11:48,380 --> 00:11:55,759
start bunch of services<font color="#CCCCCC"> you're gonna</font><font color="#E5E5E5"> see</font>

258
00:11:53,779 --> 00:11:58,899
an exception<font color="#CCCCCC"> because there is I'm</font>

259
00:11:55,759 --> 00:12:01,870
running<font color="#CCCCCC"> JDK 11 from</font><font color="#E5E5E5"> the scanner is what</font>

260
00:11:58,899 --> 00:12:05,240
you don't see anything

261
00:12:01,870 --> 00:12:11,139
<font color="#E5E5E5">this can help do I need to do something</font>

262
00:12:05,240 --> 00:12:11,139
<font color="#E5E5E5">else do I need to exit here me</font>

263
00:12:18,670 --> 00:12:25,689
<font color="#E5E5E5">okay I'm here where do I do that</font>

264
00:12:34,400 --> 00:12:37,180
<font color="#E5E5E5">okay</font>

265
00:12:39,180 --> 00:12:43,779
so

266
00:12:41,000 --> 00:12:43,779
display

267
00:12:46,980 --> 00:12:54,550
<font color="#E5E5E5">go yes okay so</font><font color="#CCCCCC"> you're seeing</font><font color="#E5E5E5"> something</font>

268
00:12:52,150 --> 00:12:57,189
at least okay

269
00:12:54,550 --> 00:13:01,329
so I've<font color="#E5E5E5"> started a bunch of services and</font>

270
00:12:57,190 --> 00:13:07,270
now I'm<font color="#E5E5E5"> going to start a little load</font>

271
00:13:01,330 --> 00:13:10,620
generator single increment<font color="#E5E5E5"> load</font>

272
00:13:07,270 --> 00:13:13,480
generator so it's now creating this

273
00:13:10,620 --> 00:13:16,570
customer<font color="#E5E5E5"> and it's going to</font><font color="#CCCCCC"> fulfill</font><font color="#E5E5E5"> an</font>

274
00:13:13,480 --> 00:13:18,460
order<font color="#CCCCCC"> and after a little while we're</font>

275
00:13:16,570 --> 00:13:25,360
going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> done there and I'm</font><font color="#E5E5E5"> just</font>

276
00:13:18,460 --> 00:13:28,120
gonna start<font color="#CCCCCC"> a</font><font color="#E5E5E5"> start the JK UI so that we</font>

277
00:13:25,360 --> 00:13:31,480
<font color="#E5E5E5">can look at our traces here and here we</font>

278
00:13:28,120 --> 00:13:35,710
go<font color="#E5E5E5"> so this is basically the the full</font>

279
00:13:31,480 --> 00:13:38,680
cycle<font color="#CCCCCC"> of us creating a customer</font><font color="#E5E5E5"> you can</font>

280
00:13:35,710 --> 00:13:42,490
<font color="#CCCCCC">see that we first check what</font><font color="#E5E5E5"> whatever</font>

281
00:13:38,680 --> 00:13:44,469
types the factory can build and then

282
00:13:42,490 --> 00:13:47,830
we're checking what<font color="#E5E5E5"> paints are available</font>

283
00:13:44,470 --> 00:13:49,300
and then we<font color="#E5E5E5"> create a random user</font><font color="#CCCCCC"> and at</font>

284
00:13:47,830 --> 00:13:52,540
some<font color="#E5E5E5"> point here we're going to start</font>

285
00:13:49,300 --> 00:13:54,219
building robots in a factory what we can

286
00:13:52,540 --> 00:13:58,089
see when we<font color="#E5E5E5"> start</font><font color="#CCCCCC"> building these robots</font>

287
00:13:54,220 --> 00:14:00,640
<font color="#E5E5E5">is that creating a chasis actually takes</font>

288
00:13:58,089 --> 00:14:03,010
<font color="#CCCCCC">there's a lot of variance in how long it</font>

289
00:14:00,640 --> 00:14:06,310
takes<font color="#E5E5E5"> to create the chasis so here we're</font>

290
00:14:03,010 --> 00:14:10,630
creating<font color="#E5E5E5"> an EVA robot then we're</font>

291
00:14:06,310 --> 00:14:14,319
painting it red<font color="#E5E5E5"> here we're creating some</font>

292
00:14:10,630 --> 00:14:16,689
other type of<font color="#E5E5E5"> robot and you can see that</font>

293
00:14:14,320 --> 00:14:18,700
the variance in how<font color="#E5E5E5"> long</font><font color="#CCCCCC"> it takes</font>

294
00:14:16,690 --> 00:14:20,110
actually<font color="#CCCCCC"> create those</font><font color="#E5E5E5"> robots</font><font color="#CCCCCC"> I mean it</font>

295
00:14:18,700 --> 00:14:22,029
would be<font color="#E5E5E5"> an amazing factory that can</font>

296
00:14:20,110 --> 00:14:24,580
create robots in seconds but still<font color="#E5E5E5"> you</font>

297
00:14:22,029 --> 00:14:27,550
know it's a lot of<font color="#E5E5E5"> variance and why is</font>

298
00:14:24,580 --> 00:14:29,410
that<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is typically where these</font>

299
00:14:27,550 --> 00:14:30,670
<font color="#E5E5E5">distributed tracers break down you don't</font>

300
00:14:29,410 --> 00:14:32,079
<font color="#E5E5E5">get the information that you</font><font color="#CCCCCC"> need to</font>

301
00:14:30,670 --> 00:14:34,750
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> be able to do something about</font>

302
00:14:32,080 --> 00:14:37,000
this so you know that<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is a problem</font>

303
00:14:34,750 --> 00:14:39,270
probably<font color="#E5E5E5"> in the factory but you you</font>

304
00:14:37,000 --> 00:14:44,970
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> not know what to do about</font><font color="#E5E5E5"> it</font>

305
00:14:39,270 --> 00:14:44,970
so what if we

306
00:14:51,300 --> 00:15:02,279
<font color="#E5E5E5">okay so I'm gonna just do it like this</font>

307
00:14:55,010 --> 00:15:09,000
<font color="#E5E5E5">so exit here</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> I've got a</font>

308
00:15:02,279 --> 00:15:10,920
fever<font color="#E5E5E5"> so here we go</font><font color="#CCCCCC"> so the idea then</font><font color="#E5E5E5"> is</font>

309
00:15:09,000 --> 00:15:13,019
what happens if you<font color="#CCCCCC"> start</font><font color="#E5E5E5"> marrying</font>

310
00:15:10,920 --> 00:15:16,170
<font color="#E5E5E5">flight recorder with the</font><font color="#CCCCCC"> distributed</font>

311
00:15:13,019 --> 00:15:18,570
tracer so what if you<font color="#E5E5E5"> could be at the</font>

312
00:15:16,170 --> 00:15:20,279
<font color="#E5E5E5">low level</font><font color="#CCCCCC"> information that you require</font>

313
00:15:18,570 --> 00:15:22,410
to<font color="#CCCCCC"> be able</font><font color="#E5E5E5"> to solve these kind</font><font color="#CCCCCC"> of</font>

314
00:15:20,279 --> 00:15:25,260
<font color="#CCCCCC">problems</font><font color="#E5E5E5"> and you can marry</font><font color="#CCCCCC"> that with the</font>

315
00:15:22,410 --> 00:15:27,240
tracer so basically what you<font color="#E5E5E5"> would need</font>

316
00:15:25,260 --> 00:15:28,949
is some way to<font color="#E5E5E5"> take the contextual</font>

317
00:15:27,240 --> 00:15:31,170
information that you have from the

318
00:15:28,949 --> 00:15:32,609
<font color="#E5E5E5">tracer and push that into the flight</font>

319
00:15:31,170 --> 00:15:34,769
recorder so you can start correlating

320
00:15:32,610 --> 00:15:39,029
them<font color="#E5E5E5"> right you would be able</font><font color="#CCCCCC"> to need to</font>

321
00:15:34,769 --> 00:15:42,660
get record the trace ID span ID<font color="#E5E5E5"> all</font>

322
00:15:39,029 --> 00:15:45,510
these kind of identities<font color="#E5E5E5"> that allow you</font>

323
00:15:42,660 --> 00:15:49,680
to to to properly<font color="#E5E5E5"> go find what was</font>

324
00:15:45,510 --> 00:15:51,510
actually going<font color="#E5E5E5"> down</font><font color="#CCCCCC"> so one way to do</font>

325
00:15:49,680 --> 00:15:52,920
that is to create<font color="#E5E5E5"> an open tracing tracer</font>

326
00:15:51,510 --> 00:15:55,380
<font color="#E5E5E5">and start emitting flight recorder</font>

327
00:15:52,920 --> 00:15:57,510
events using<font color="#CCCCCC"> the tracer</font><font color="#E5E5E5"> and there is a</font>

328
00:15:55,380 --> 00:15:59,670
concept that<font color="#E5E5E5"> I didn't talk about which</font>

329
00:15:57,510 --> 00:16:04,199
<font color="#E5E5E5">is</font><font color="#CCCCCC"> called scope</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> that is a</font><font color="#E5E5E5"> thread</font>

330
00:15:59,670 --> 00:16:05,490
<font color="#E5E5E5">local activation of spam so that rhymes</font>

331
00:16:04,199 --> 00:16:07,920
very well with<font color="#E5E5E5"> the thread local</font>

332
00:16:05,490 --> 00:16:10,380
<font color="#E5E5E5">recording of events in in in in</font><font color="#CCCCCC"> its</font>

333
00:16:07,920 --> 00:16:12,329
flight recorder<font color="#E5E5E5"> right so what if we</font>

334
00:16:10,380 --> 00:16:13,680
could do that what if we could could

335
00:16:12,329 --> 00:16:17,430
start recording this<font color="#E5E5E5"> contextual</font>

336
00:16:13,680 --> 00:16:19,469
information<font color="#E5E5E5"> then we could probably do</font>

337
00:16:17,430 --> 00:16:26,609
<font color="#CCCCCC">something</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> so I've built</font><font color="#E5E5E5"> a prototype</font>

338
00:16:19,470 --> 00:16:28,140
<font color="#E5E5E5">I've donated it to rent racing there are</font>

339
00:16:26,610 --> 00:16:30,750
still some<font color="#E5E5E5"> things in open tracing that</font>

340
00:16:28,140 --> 00:16:34,920
should be<font color="#E5E5E5"> fixed to minimize the object</font>

341
00:16:30,750 --> 00:16:37,319
allocations but it's it<font color="#E5E5E5"> works and and</font>

342
00:16:34,920 --> 00:16:43,290
it's built as an mr jar so it will work

343
00:16:37,319 --> 00:16:45,839
<font color="#CCCCCC">on Oracle JDK 7 and open JDK 11</font><font color="#E5E5E5"> plus and</font>

344
00:16:43,290 --> 00:16:48,740
there is you know<font color="#CCCCCC"> we're selling tourists</font>

345
00:16:45,839 --> 00:16:53,819
and I think the link might be to my

346
00:16:48,740 --> 00:16:57,400
github repo pre donating<font color="#E5E5E5"> itself anyways</font>

347
00:16:53,819 --> 00:17:03,160
<font color="#E5E5E5">so I'm going</font><font color="#CCCCCC"> to do a quick demo</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> what</font>

348
00:16:57,400 --> 00:17:07,329
like<font color="#E5E5E5"> my</font><font color="#CCCCCC"> tech mutt might happen if we get</font>

349
00:17:03,160 --> 00:17:10,839
away<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so I'm</font><font color="#E5E5E5"> just gonna go ahead and</font>

350
00:17:07,329 --> 00:17:16,240
and you know push push push some more

351
00:17:10,839 --> 00:17:17,980
<font color="#CCCCCC">data into into the tracer</font><font color="#E5E5E5"> and the thing</font>

352
00:17:16,240 --> 00:17:21,900
<font color="#E5E5E5">is I am</font><font color="#CCCCCC"> actually running with flight</font>

353
00:17:17,980 --> 00:17:25,870
recorder already so let's take a look<font color="#E5E5E5"> at</font>

354
00:17:21,900 --> 00:17:30,160
Jake<font color="#CCCCCC"> our UI</font><font color="#E5E5E5"> now we should have another</font>

355
00:17:25,869 --> 00:17:31,570
trace right so what do we<font color="#E5E5E5"> want to do now</font>

356
00:17:30,160 --> 00:17:34,600
we want to check out what the factory

357
00:17:31,570 --> 00:17:37,149
was actually<font color="#E5E5E5"> doing so let's go</font><font color="#CCCCCC"> back to</font>

358
00:17:34,600 --> 00:17:40,629
my Eclipse and let's look<font color="#E5E5E5"> at flight</font>

359
00:17:37,150 --> 00:17:42,910
recorder so all<font color="#E5E5E5"> these guys actually have</font>

360
00:17:40,630 --> 00:17:45,580
a flight recording running and it's the

361
00:17:42,910 --> 00:17:47,230
factory<font color="#CCCCCC"> that I'm interested in oops</font><font color="#E5E5E5"> so</font>

362
00:17:45,580 --> 00:17:53,260
I'm just gonna go ahead<font color="#E5E5E5"> and dump that</font>

363
00:17:47,230 --> 00:17:54,550
<font color="#E5E5E5">whole recording so I've dumped the</font>

364
00:17:53,260 --> 00:17:59,110
recording and<font color="#E5E5E5"> I've actually done a</font>

365
00:17:54,550 --> 00:18:00,370
<font color="#E5E5E5">little special UI here for for traces so</font>

366
00:17:59,110 --> 00:18:04,389
we can see that there is<font color="#CCCCCC"> a bunch of</font>

367
00:18:00,370 --> 00:18:07,149
traces here low resolution<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we can</font>

368
00:18:04,390 --> 00:18:09,160
see<font color="#E5E5E5"> that we have one trace that took 1.3</font>

369
00:18:07,150 --> 00:18:14,260
seconds so maybe look at what was

370
00:18:09,160 --> 00:18:17,200
actually going on there and let's go to

371
00:18:14,260 --> 00:18:22,890
the job<font color="#CCCCCC"> application well</font><font color="#E5E5E5"> Java threads</font>

372
00:18:17,200 --> 00:18:27,580
actually and I want to see all<font color="#CCCCCC"> of them</font>

373
00:18:22,890 --> 00:18:29,710
and I only want<font color="#E5E5E5"> to see stuff that</font><font color="#CCCCCC"> was</font>

374
00:18:27,580 --> 00:18:32,080
<font color="#CCCCCC">happening in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same thread during the</font>

375
00:18:29,710 --> 00:18:34,120
same time<font color="#E5E5E5"> so here we can see what was</font>

376
00:18:32,080 --> 00:18:36,699
actually going on here<font color="#E5E5E5"> I'm gonna zoom in</font>

377
00:18:34,120 --> 00:18:40,360
a little bit<font color="#E5E5E5"> so we see our thread local</font>

378
00:18:36,700 --> 00:18:42,070
activations<font color="#E5E5E5"> of the spans so we can see</font>

379
00:18:40,360 --> 00:18:43,899
<font color="#E5E5E5">that there are scope events</font><font color="#CCCCCC"> associated</font>

380
00:18:42,070 --> 00:18:47,169
that span ID and you know you would get

381
00:18:43,900 --> 00:18:47,620
<font color="#E5E5E5">that ID from jeager if you really</font><font color="#CCCCCC"> wanted</font>

382
00:18:47,170 --> 00:18:50,380
<font color="#CCCCCC">to</font><font color="#E5E5E5"> homie</font>

383
00:18:47,620 --> 00:18:52,750
only<font color="#CCCCCC"> this</font><font color="#E5E5E5"> specific one</font><font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> see</font>

384
00:18:50,380 --> 00:18:54,520
<font color="#E5E5E5">that what's happening</font><font color="#CCCCCC"> here is that we're</font>

385
00:18:52,750 --> 00:18:56,890
actually blocked on entering a<font color="#CCCCCC"> Java</font>

386
00:18:54,520 --> 00:18:59,710
monitor here so we have a

387
00:18:56,890 --> 00:19:01,210
synchronization problem here<font color="#E5E5E5"> and well we</font>

388
00:18:59,710 --> 00:19:03,700
can<font color="#CCCCCC"> either go look at the actual</font><font color="#E5E5E5"> lock</font>

389
00:19:01,210 --> 00:19:05,590
instances here<font color="#E5E5E5"> and very specifically and</font>

390
00:19:03,700 --> 00:19:06,580
we see that it's<font color="#E5E5E5"> this monitor and this</font>

391
00:19:05,590 --> 00:19:08,350
<font color="#E5E5E5">is the stack trace</font>

392
00:19:06,580 --> 00:19:10,629
so it's this log area that is<font color="#E5E5E5"> being used</font>

393
00:19:08,350 --> 00:19:12,610
and this logger

394
00:19:10,630 --> 00:19:14,259
is the thing<font color="#CCCCCC"> that we're all</font>

395
00:19:12,610 --> 00:19:18,668
synchronizing on all<font color="#E5E5E5"> these threads and</font>

396
00:19:14,259 --> 00:19:20,169
that's why we have<font color="#E5E5E5"> this skew</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> variance</font>

397
00:19:18,669 --> 00:19:23,110
in the time it takes to<font color="#CCCCCC"> invoke this</font>

398
00:19:20,169 --> 00:19:25,570
problem so<font color="#E5E5E5"> we now have stack traces we</font>

399
00:19:23,110 --> 00:19:28,299
have<font color="#CCCCCC"> low-level events like Java monitor</font>

400
00:19:25,570 --> 00:19:30,129
<font color="#CCCCCC">enter.we</font><font color="#E5E5E5"> it's not just don't want to</font>

401
00:19:28,299 --> 00:19:32,679
<font color="#CCCCCC">enter we have parks we have all these</font>

402
00:19:30,130 --> 00:19:34,149
<font color="#E5E5E5">wonderful this very rich</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you haven't</font>

403
00:19:32,679 --> 00:19:37,080
looked at<font color="#E5E5E5"> the flight recorder you'll see</font>

404
00:19:34,149 --> 00:19:39,850
that<font color="#E5E5E5"> there's a very rich set of events</font>

405
00:19:37,080 --> 00:19:42,250
<font color="#E5E5E5">so there's a method profiler it's or</font>

406
00:19:39,850 --> 00:19:45,309
allocation profiling in this case it's<font color="#E5E5E5"> a</font>

407
00:19:42,250 --> 00:19:49,090
thread<font color="#E5E5E5"> Holtz so what is actually</font><font color="#CCCCCC"> going</font>

408
00:19:45,309 --> 00:19:50,710
on when<font color="#E5E5E5"> we aren't executing so what hold</font>

409
00:19:49,090 --> 00:19:53,139
is<font color="#E5E5E5"> the thread and in this case it was</font>

410
00:19:50,710 --> 00:20:00,360
Java monitor enter and that's why we're

411
00:19:53,139 --> 00:20:00,360
not<font color="#E5E5E5"> executing so how are we timewise</font>

412
00:20:02,129 --> 00:20:12,129
<font color="#E5E5E5">okay so I just</font><font color="#CCCCCC"> go</font><font color="#E5E5E5"> back to okay</font><font color="#CCCCCC"> so that</font>

413
00:20:10,330 --> 00:20:15,100
we can have some<font color="#CCCCCC"> questions I'm</font><font color="#E5E5E5"> going to</font>

414
00:20:12,129 --> 00:20:15,939
sum this up<font color="#E5E5E5"> JDK fight recorder has been</font>

415
00:20:15,100 --> 00:20:17,889
open sourced

416
00:20:15,940 --> 00:20:21,610
since JDK 11 so it's<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> you</font>

417
00:20:17,889 --> 00:20:23,918
can already<font color="#CCCCCC"> use</font><font color="#E5E5E5"> and there are even</font><font color="#CCCCCC"> arm</font>

418
00:20:21,610 --> 00:20:26,199
<font color="#E5E5E5">you know built with flight recorder</font>

419
00:20:23,919 --> 00:20:28,539
working<font color="#CCCCCC"> on</font><font color="#E5E5E5"> open JDK</font><font color="#CCCCCC"> so those of you who</font>

420
00:20:26,200 --> 00:20:30,190
are doing<font color="#E5E5E5"> embedded systems might find</font>

421
00:20:28,539 --> 00:20:33,490
that very<font color="#CCCCCC"> useful to record sensor data</font>

422
00:20:30,190 --> 00:20:35,440
<font color="#E5E5E5">and I have an example with using laser</font>

423
00:20:33,490 --> 00:20:36,909
rangefinders<font color="#E5E5E5"> and recording the laser</font>

424
00:20:35,440 --> 00:20:39,610
rangefinder information<font color="#CCCCCC"> and you seek</font>

425
00:20:36,909 --> 00:20:43,259
<font color="#CCCCCC">admission control</font><font color="#E5E5E5"> to render what we're</font>

426
00:20:39,610 --> 00:20:45,729
actually seeing so that's kind of cool

427
00:20:43,259 --> 00:20:47,019
it's<font color="#E5E5E5"> Mission Control has been open</font>

428
00:20:45,730 --> 00:20:50,830
sourced I'm sorry it hasn't<font color="#CCCCCC"> been</font>

429
00:20:47,019 --> 00:20:52,629
<font color="#E5E5E5">released yet it's process stuff</font><font color="#CCCCCC"> so it</font>

430
00:20:50,830 --> 00:20:58,178
should<font color="#CCCCCC"> be released within I don't know</font>

431
00:20:52,629 --> 00:20:59,980
maybe a<font color="#CCCCCC"> couple of</font><font color="#E5E5E5"> weeks we'll see</font><font color="#CCCCCC"> open</font>

432
00:20:58,179 --> 00:21:02,139
tracing is open source<font color="#E5E5E5"> has always been</font>

433
00:20:59,980 --> 00:21:04,590
<font color="#CCCCCC">it's and that's the</font><font color="#E5E5E5"> vendor neutral</font>

434
00:21:02,139 --> 00:21:10,600
<font color="#E5E5E5">initiative for doing distributed tracing</font>

435
00:21:04,590 --> 00:21:12,279
and since<font color="#E5E5E5"> I'm Oracle</font><font color="#CCCCCC"> uh and since I</font>

436
00:21:10,600 --> 00:21:15,039
actually said something<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> future</font>

437
00:21:12,279 --> 00:21:17,919
<font color="#CCCCCC">and this feels like a shyly</font><font color="#E5E5E5"> regarding</font>

438
00:21:15,039 --> 00:21:20,649
the release this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> especially</font><font color="#E5E5E5"> regarding</font>

439
00:21:17,919 --> 00:21:24,039
the release<font color="#E5E5E5"> that might change at the</font>

440
00:21:20,649 --> 00:21:24,510
sole discretion of Oracle<font color="#E5E5E5"> so here are</font>

441
00:21:24,039 --> 00:21:26,640
<font color="#E5E5E5">some</font>

442
00:21:24,510 --> 00:21:29,940
<font color="#E5E5E5">resources so the project for Mission</font>

443
00:21:26,640 --> 00:21:32,460
<font color="#E5E5E5">Control that's up there my blog here</font><font color="#CCCCCC"> so</font>

444
00:21:29,940 --> 00:21:35,310
I'm talking<font color="#E5E5E5"> about cool</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> you could</font>

445
00:21:32,460 --> 00:21:37,620
do with<font color="#CCCCCC"> the flight recorder</font><font color="#E5E5E5"> usually and</font>

446
00:21:35,310 --> 00:21:40,440
then my github<font color="#E5E5E5"> if you want to look at</font>

447
00:21:37,620 --> 00:21:43,169
some<font color="#E5E5E5"> of the examples</font><font color="#CCCCCC"> or you know the</font>

448
00:21:40,440 --> 00:21:45,450
tracer<font color="#CCCCCC"> or whatever they're also some</font>

449
00:21:43,170 --> 00:21:54,270
service abilities examples for the Java

450
00:21:45,450 --> 00:21:56,940
<font color="#E5E5E5">serviceability api's and yeah</font><font color="#CCCCCC"> okay so</font>

451
00:21:54,270 --> 00:22:12,360
I'm<font color="#E5E5E5"> gonna sit</font><font color="#CCCCCC"> down I think</font><font color="#E5E5E5"> yeah question</font>

452
00:21:56,940 --> 00:22:15,030
<font color="#E5E5E5">for us yeah so I've been doing similar</font>

453
00:22:12,360 --> 00:22:17,040
kind<font color="#E5E5E5"> of event supply inserting event</font>

454
00:22:15,030 --> 00:22:18,510
into my application<font color="#CCCCCC"> and</font><font color="#E5E5E5"> at the moment</font>

455
00:22:17,040 --> 00:22:21,540
<font color="#E5E5E5">I'm actually using something called</font>

456
00:22:18,510 --> 00:22:24,990
<font color="#E5E5E5">micro meter from</font><font color="#CCCCCC"> spraying so how is that</font>

457
00:22:21,540 --> 00:22:26,520
<font color="#CCCCCC">metrics so our event differs from open</font>

458
00:22:24,990 --> 00:22:28,470
tracing or can they<font color="#CCCCCC"> actually be</font>

459
00:22:26,520 --> 00:22:32,300
basically<font color="#E5E5E5"> are just instrumented ones and</font>

460
00:22:28,470 --> 00:22:35,010
then basically I'll get all the<font color="#CCCCCC"> events</font>

461
00:22:32,300 --> 00:22:39,510
what you mean is how this<font color="#E5E5E5"> is different</font>

462
00:22:35,010 --> 00:22:42,210
from<font color="#CCCCCC"> open</font><font color="#E5E5E5"> tracing oh okay so open</font>

463
00:22:39,510 --> 00:22:44,400
tracing is just an API for for for<font color="#CCCCCC"> for a</font>

464
00:22:42,210 --> 00:22:47,520
vendor-neutral API<font color="#E5E5E5"> to to push things</font>

465
00:22:44,400 --> 00:22:49,380
into the tracers right so you can use<font color="#E5E5E5"> it</font>

466
00:22:47,520 --> 00:22:51,450
with Zipkin<font color="#E5E5E5"> you can use it with jagger</font>

467
00:22:49,380 --> 00:22:55,650
you can use it with a lot of<font color="#E5E5E5"> different</font>

468
00:22:51,450 --> 00:22:58,620
tracers so the thing<font color="#E5E5E5"> you get with open</font>

469
00:22:55,650 --> 00:23:01,710
tracing is the ability<font color="#E5E5E5"> to to just use</font>

470
00:22:58,620 --> 00:23:03,780
one<font color="#E5E5E5"> API and then the</font><font color="#CCCCCC"> end-user</font><font color="#E5E5E5"> can choose</font>

471
00:23:01,710 --> 00:23:05,430
which tracer you wants to<font color="#E5E5E5"> use I'm not</font>

472
00:23:03,780 --> 00:23:06,960
sure about<font color="#E5E5E5"> micrometer or how</font><font color="#CCCCCC"> its</font>

473
00:23:05,430 --> 00:23:10,020
implemented<font color="#CCCCCC"> if you're talking</font><font color="#E5E5E5"> about</font>

474
00:23:06,960 --> 00:23:12,720
<font color="#E5E5E5">flight recorder and stuffing things at</font>

475
00:23:10,020 --> 00:23:15,420
the flight recorder well flight<font color="#CCCCCC"> recorder</font>

476
00:23:12,720 --> 00:23:17,460
is a very highly efficient recording

477
00:23:15,420 --> 00:23:18,660
engine built into the JVM<font color="#CCCCCC"> so the</font>

478
00:23:17,460 --> 00:23:20,070
overhead when you're using fright

479
00:23:18,660 --> 00:23:21,990
recorder and<font color="#E5E5E5"> there is a ton of cool</font>

480
00:23:20,070 --> 00:23:24,330
things we're doing<font color="#E5E5E5"> like some platforms</font>

481
00:23:21,990 --> 00:23:26,670
we're using<font color="#CCCCCC"> in variant TC for 4/4 time</font>

482
00:23:24,330 --> 00:23:29,360
<font color="#E5E5E5">stamping getting</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> really fast time</font>

483
00:23:26,670 --> 00:23:33,060
sniping<font color="#E5E5E5"> it's a binary format we're using</font>

484
00:23:29,360 --> 00:23:35,550
integer compression to make sure that

485
00:23:33,060 --> 00:23:38,428
we're not<font color="#CCCCCC"> using more more memory than we</font>

486
00:23:35,550 --> 00:23:40,590
want<font color="#E5E5E5"> to or as little as</font><font color="#CCCCCC"> possible</font>

487
00:23:38,429 --> 00:23:42,450
and<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> a whole host of cool things</font>

488
00:23:40,590 --> 00:23:45,928
we're doing<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> of the JVM</font><font color="#E5E5E5"> to just</font>

489
00:23:42,450 --> 00:23:50,039
make<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> that it's really really fast</font>

490
00:23:45,929 --> 00:23:52,320
<font color="#CCCCCC">and if you turn off</font><font color="#E5E5E5"> an event and it's on</font>

491
00:23:50,039 --> 00:23:54,149
the hot path<font color="#E5E5E5"> it's you can be pretty</font><font color="#CCCCCC"> sure</font>

492
00:23:52,320 --> 00:23:56,039
that<font color="#CCCCCC"> it's going to be be optimized away</font>

493
00:23:54,149 --> 00:23:58,350
you're<font color="#CCCCCC"> not going to see in there if you</font>

494
00:23:56,039 --> 00:24:00,480
disassemble<font color="#E5E5E5"> the assembly for</font><font color="#CCCCCC"> the method</font>

495
00:23:58,350 --> 00:24:02,158
<font color="#E5E5E5">you're basically not</font><font color="#CCCCCC"> going to see to see</font>

496
00:24:00,480 --> 00:24:05,909
a trace of<font color="#CCCCCC"> anything that</font><font color="#E5E5E5"> has to do with</font>

497
00:24:02,159 --> 00:24:07,970
with<font color="#CCCCCC"> events I think also one point</font>

498
00:24:05,909 --> 00:24:12,509
important<font color="#E5E5E5"> is that it's the knowledge of</font>

499
00:24:07,970 --> 00:24:15,600
oops<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> the knowledge of everything all</font>

500
00:24:12,509 --> 00:24:17,340
those events have because it's all tied

501
00:24:15,600 --> 00:24:19,740
to the<font color="#E5E5E5"> runtime</font><font color="#CCCCCC"> on the JVM</font>

502
00:24:17,340 --> 00:24:21,299
so when you are adding<font color="#E5E5E5"> some events there</font>

503
00:24:19,740 --> 00:24:25,559
are custom events for your application

504
00:24:21,299 --> 00:24:27,570
<font color="#CCCCCC">you still have some way</font><font color="#E5E5E5"> of contextualize</font>

505
00:24:25,559 --> 00:24:30,149
<font color="#CCCCCC">that with the rest</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> environment</font>

506
00:24:27,570 --> 00:24:32,158
<font color="#CCCCCC">and that's where the example</font><font color="#E5E5E5"> Marcus did</font>

507
00:24:30,149 --> 00:24:34,258
before is important<font color="#E5E5E5"> and critical it's</font>

508
00:24:32,159 --> 00:24:38,669
not at<font color="#CCCCCC"> all been tracing cannot tell you</font>

509
00:24:34,259 --> 00:24:40,110
because some specific reason but it's

510
00:24:38,669 --> 00:24:42,119
only because<font color="#E5E5E5"> it doesn't have the</font>

511
00:24:40,110 --> 00:24:44,459
knowledge of the<font color="#E5E5E5"> runtime</font><font color="#CCCCCC"> is running on</font>

512
00:24:42,119 --> 00:24:46,408
<font color="#CCCCCC">when the victim machine</font><font color="#E5E5E5"> does</font><font color="#CCCCCC"> have this</font>

513
00:24:44,460 --> 00:24:48,330
knowledge so<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> easy for you to</font>

514
00:24:46,409 --> 00:24:50,429
correlate<font color="#E5E5E5"> the various events in the same</font>

515
00:24:48,330 --> 00:24:53,129
<font color="#E5E5E5">application and this is the power of</font>

516
00:24:50,429 --> 00:24:53,639
flag<font color="#E5E5E5"> or lighting I think another good</font>

517
00:24:53,129 --> 00:24:57,269
<font color="#E5E5E5">point</font>

518
00:24:53,639 --> 00:24:58,559
Oh<font color="#CCCCCC"> long</font><font color="#E5E5E5"> answer to your question our</font>

519
00:24:57,269 --> 00:25:01,470
going down<font color="#E5E5E5"> the rabbit</font><font color="#CCCCCC"> hole</font>

520
00:24:58,559 --> 00:25:06,149
but another good good good point is<font color="#E5E5E5"> that</font>

521
00:25:01,470 --> 00:25:07,889
it's built into<font color="#E5E5E5"> the JVM right so there</font>

522
00:25:06,149 --> 00:25:11,279
is certain<font color="#E5E5E5"> information that we can get</font>

523
00:25:07,889 --> 00:25:13,619
from<font color="#E5E5E5"> the JVM so</font><font color="#CCCCCC"> for heap composition for</font>

524
00:25:11,279 --> 00:25:17,039
<font color="#E5E5E5">example</font><font color="#CCCCCC"> when we garbage clicked</font><font color="#E5E5E5"> we can</font>

525
00:25:13,619 --> 00:25:19,019
start<font color="#E5E5E5"> gathering data as part of you know</font>

526
00:25:17,039 --> 00:25:20,759
<font color="#CCCCCC">say the mark face of the garbage</font>

527
00:25:19,019 --> 00:25:23,850
collector so you don't need to

528
00:25:20,759 --> 00:25:26,490
explicitly go say<font color="#CCCCCC"> to you</font><font color="#E5E5E5"> know now I want</font>

529
00:25:23,850 --> 00:25:29,309
<font color="#CCCCCC">to you know go through</font><font color="#E5E5E5"> the heap to see</font>

530
00:25:26,490 --> 00:25:32,249
what's there we can piggyback on<font color="#E5E5E5"> already</font>

531
00:25:29,309 --> 00:25:35,460
<font color="#CCCCCC">existing systems to get</font><font color="#E5E5E5"> the data so some</font>

532
00:25:32,249 --> 00:25:41,149
data we pretty much get for free just<font color="#E5E5E5"> as</font>

533
00:25:35,460 --> 00:25:41,149
<font color="#E5E5E5">part of running the the</font><font color="#CCCCCC"> promise</font>

534
00:25:45,800 --> 00:25:52,980
well<font color="#CCCCCC"> that's a good</font><font color="#E5E5E5"> question</font><font color="#CCCCCC"> I don't</font>

535
00:25:49,650 --> 00:25:54,540
<font color="#CCCCCC">think</font><font color="#E5E5E5"> you want to do that well you can</font>

536
00:25:52,980 --> 00:25:57,240
because the<font color="#E5E5E5"> program</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> premiere this</font>

537
00:25:54,540 --> 00:26:00,480
is that<font color="#E5E5E5"> parameters is very much about</font>

538
00:25:57,240 --> 00:26:03,690
our<font color="#CCCCCC"> vesting the data</font><font color="#E5E5E5"> you will end up</font>

539
00:26:00,480 --> 00:26:06,120
<font color="#CCCCCC">getting one and one event at a time so</font>

540
00:26:03,690 --> 00:26:08,730
<font color="#CCCCCC">you can absolutely do that with</font><font color="#E5E5E5"> with the</font>

541
00:26:06,120 --> 00:26:12,090
<font color="#E5E5E5">perm in use and they have some some way</font>

542
00:26:08,730 --> 00:26:14,460
of telling so I don't know if<font color="#E5E5E5"> you write</font>

543
00:26:12,090 --> 00:26:16,139
<font color="#E5E5E5">a simple application that makes the</font>

544
00:26:14,460 --> 00:26:18,809
reads the<font color="#CCCCCC"> friedrich</font><font color="#E5E5E5"> or the events and</font>

545
00:26:16,140 --> 00:26:21,030
then one by<font color="#CCCCCC"> one made them available to</font>

546
00:26:18,809 --> 00:26:23,879
<font color="#CCCCCC">Prometheus</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I think this</font><font color="#E5E5E5"> this will</font>

547
00:26:21,030 --> 00:26:25,950
kind<font color="#E5E5E5"> of invited at the point</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

548
00:26:23,880 --> 00:26:29,400
have<font color="#E5E5E5"> access</font><font color="#CCCCCC"> to all the statistical</font>

549
00:26:25,950 --> 00:26:34,170
<font color="#CCCCCC">Meadows in the first place and so to</font>

550
00:26:29,400 --> 00:26:36,090
take an<font color="#CCCCCC"> example</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> a random example if</font>

551
00:26:34,170 --> 00:26:38,010
you take<font color="#E5E5E5"> a flight recording file which</font>

552
00:26:36,090 --> 00:26:40,139
is a binary recording which has constant

553
00:26:38,010 --> 00:26:41,990
<font color="#E5E5E5">pools for the stack traces I mean stack</font>

554
00:26:40,140 --> 00:26:44,100
traces are literally sets of<font color="#CCCCCC"> integers</font>

555
00:26:41,990 --> 00:26:47,040
pointing into the<font color="#E5E5E5"> constant pool if you</font>

556
00:26:44,100 --> 00:26:50,428
<font color="#CCCCCC">take that thing</font><font color="#E5E5E5"> and you transform it to</font>

557
00:26:47,040 --> 00:26:53,010
<font color="#CCCCCC">Jason that thing is going to</font><font color="#E5E5E5"> blow</font><font color="#CCCCCC"> up by</font>

558
00:26:50,429 --> 00:26:56,040
several<font color="#CCCCCC"> orders of magnitude it's like</font>

559
00:26:53,010 --> 00:26:58,110
and then<font color="#E5E5E5"> if you take all</font><font color="#CCCCCC"> that data</font><font color="#E5E5E5"> and</font>

560
00:26:56,040 --> 00:27:00,149
<font color="#E5E5E5">you try to push it into an immense</font>

561
00:26:58,110 --> 00:27:04,020
system that event system<font color="#E5E5E5"> is going to be</font>

562
00:27:00,150 --> 00:27:06,929
unhappy<font color="#CCCCCC"> so it's better to get</font><font color="#E5E5E5"> the data</font>

563
00:27:04,020 --> 00:27:09,540
when you need it so<font color="#E5E5E5"> for example a the</font>

564
00:27:06,929 --> 00:27:10,890
example that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> did with the tracer</font><font color="#E5E5E5"> so</font>

565
00:27:09,540 --> 00:27:12,659
when you know<font color="#E5E5E5"> that there is</font><font color="#CCCCCC"> something</font>

566
00:27:10,890 --> 00:27:14,130
suspicious<font color="#E5E5E5"> going on you can leave the</font>

567
00:27:12,660 --> 00:27:15,929
flight recorder<font color="#CCCCCC"> running</font><font color="#E5E5E5"> because you're</font>

568
00:27:14,130 --> 00:27:17,429
<font color="#E5E5E5">not going to see more than say a percent</font>

569
00:27:15,929 --> 00:27:19,800
of overhead you can<font color="#E5E5E5"> actually have</font><font color="#CCCCCC"> it</font>

570
00:27:17,429 --> 00:27:21,570
running<font color="#E5E5E5"> all the time</font><font color="#CCCCCC"> so when you see</font>

571
00:27:19,800 --> 00:27:23,639
something<font color="#CCCCCC"> that actually is interesting</font>

572
00:27:21,570 --> 00:27:25,590
to you from the contextual data that you

573
00:27:23,640 --> 00:27:28,230
get<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the tracer</font><font color="#E5E5E5"> that's when you can</font>

574
00:27:25,590 --> 00:27:31,290
dump it and and<font color="#E5E5E5"> and look at the data</font><font color="#CCCCCC"> you</font>

575
00:27:28,230 --> 00:27:33,809
<font color="#CCCCCC">know the detailed data and as mario was</font>

576
00:27:31,290 --> 00:27:37,200
talking about<font color="#E5E5E5"> do</font><font color="#CCCCCC"> you have in Mission</font>

577
00:27:33,809 --> 00:27:38,910
Control<font color="#CCCCCC"> a bunch of well there is there</font>

578
00:27:37,200 --> 00:27:41,580
<font color="#E5E5E5">is the core API</font><font color="#CCCCCC"> from Mission Control</font>

579
00:27:38,910 --> 00:27:44,040
<font color="#E5E5E5">which is basically a set of bundles</font><font color="#CCCCCC"> that</font>

580
00:27:41,580 --> 00:27:47,610
you can use to do<font color="#E5E5E5"> automated analysis of</font>

581
00:27:44,040 --> 00:27:49,230
<font color="#CCCCCC">write recordings so then you can push</font>

582
00:27:47,610 --> 00:27:51,510
that through<font color="#E5E5E5"> that pipeline if you want</font>

583
00:27:49,230 --> 00:27:53,220
to exactly<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is what I was</font><font color="#CCCCCC"> was</font>

584
00:27:51,510 --> 00:27:54,390
when the door so the best the<font color="#E5E5E5"> best</font>

585
00:27:53,220 --> 00:27:57,990
approach in this case<font color="#CCCCCC"> would</font>

586
00:27:54,390 --> 00:27:59,580
to have some kind<font color="#E5E5E5"> of embedding</font>

587
00:27:57,990 --> 00:28:02,670
application that does the processing

588
00:27:59,580 --> 00:28:05,490
using the API and then output<font color="#CCCCCC"> the</font>

589
00:28:02,670 --> 00:28:12,930
results to<font color="#CCCCCC"> parameters</font><font color="#E5E5E5"> if you want to in</font>

590
00:28:05,490 --> 00:28:17,540
some<font color="#E5E5E5"> already a automatic</font><font color="#CCCCCC"> form yes it's</font>

591
00:28:12,930 --> 00:28:20,540
solar it's over<font color="#CCCCCC"> so yeah thank you thank</font>

592
00:28:17,540 --> 00:28:20,540
<font color="#E5E5E5">you</font>

593
00:28:21,330 --> 00:28:25,540
[Applause]

