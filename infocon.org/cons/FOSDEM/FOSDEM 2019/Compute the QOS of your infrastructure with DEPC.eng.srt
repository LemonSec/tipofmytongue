1
00:00:05,009 --> 00:00:10,980
let's start<font color="#E5E5E5"> hello everybody</font><font color="#CCCCCC"> so we're</font>

2
00:00:08,250 --> 00:00:13,740
here to<font color="#E5E5E5"> talk about the FC which is a</font>

3
00:00:10,980 --> 00:00:17,970
tool made in OVH to compute the<font color="#CCCCCC"> qsr of</font>

4
00:00:13,740 --> 00:00:20,520
<font color="#E5E5E5">our customers and our architecture so</font>

5
00:00:17,970 --> 00:00:23,279
I'm Nicola<font color="#E5E5E5"> quark fair I present</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> area</font>

6
00:00:20,520 --> 00:00:27,419
we are<font color="#CCCCCC"> two Python developers in Hawaii</font>

7
00:00:23,279 --> 00:00:30,029
and<font color="#E5E5E5"> we built the Epson first of all the</font>

8
00:00:27,419 --> 00:00:33,120
good<font color="#E5E5E5"> news the project has been released</font>

9
00:00:30,029 --> 00:00:35,280
this week<font color="#CCCCCC"> hungee</font><font color="#E5E5E5"> table for the</font><font color="#CCCCCC"> first</font>

10
00:00:33,120 --> 00:00:38,160
<font color="#E5E5E5">them so you can retrieve it</font><font color="#CCCCCC"> using this</font>

11
00:00:35,280 --> 00:00:41,040
URL and you have a<font color="#CCCCCC"> checkpoint don't</font>

12
00:00:38,160 --> 00:00:43,919
<font color="#CCCCCC">hesitate to take</font><font color="#E5E5E5"> a look and give us</font><font color="#CCCCCC"> your</font>

13
00:00:41,040 --> 00:00:48,030
<font color="#E5E5E5">feedback and if you want to we we can</font>

14
00:00:43,920 --> 00:00:51,030
improve it<font color="#E5E5E5"> using it so during the the</font>

15
00:00:48,030 --> 00:00:53,520
next 25 minutes<font color="#E5E5E5"> we are going to explain</font>

16
00:00:51,030 --> 00:00:56,730
you the objectives<font color="#E5E5E5"> of the project why we</font>

17
00:00:53,520 --> 00:00:59,100
<font color="#E5E5E5">decided to build</font><font color="#CCCCCC"> the depth then we will</font>

18
00:00:56,730 --> 00:01:01,230
talk<font color="#CCCCCC"> about why we need a graph</font>

19
00:00:59,100 --> 00:01:05,790
dependency in this project<font color="#E5E5E5"> and what is</font>

20
00:01:01,230 --> 00:01:08,130
the<font color="#E5E5E5"> link between computing us then most</font>

21
00:01:05,790 --> 00:01:11,700
<font color="#E5E5E5">the most interesting part for you</font><font color="#CCCCCC"> has</font>

22
00:01:08,130 --> 00:01:15,089
<font color="#E5E5E5">Python developer will be will be how can</font>

23
00:01:11,700 --> 00:01:17,909
we compute the<font color="#CCCCCC"> qsr are our customers</font>

24
00:01:15,090 --> 00:01:21,060
<font color="#E5E5E5">using different methods like the work us</font>

25
00:01:17,909 --> 00:01:24,329
the<font color="#CCCCCC"> operation us and the aggregation qsr</font>

26
00:01:21,060 --> 00:01:27,479
and to finish we<font color="#E5E5E5"> will see how we</font><font color="#CCCCCC"> can use</font>

27
00:01:24,329 --> 00:01:29,038
<font color="#CCCCCC">half flow</font><font color="#E5E5E5"> to schedule tasks every night</font>

28
00:01:27,479 --> 00:01:33,539
and compute the<font color="#CCCCCC"> queue as for</font><font color="#E5E5E5"> our</font>

29
00:01:29,039 --> 00:01:34,729
customers<font color="#E5E5E5"> each day so first about the</font>

30
00:01:33,539 --> 00:01:38,399
<font color="#E5E5E5">objectives</font>

31
00:01:34,729 --> 00:01:40,560
Antonian<font color="#CCCCCC"> high</font><font color="#E5E5E5"> Python developers in the</font>

32
00:01:38,399 --> 00:01:43,859
web hosting team<font color="#CCCCCC"> half a batch a French</font>

33
00:01:40,560 --> 00:01:46,549
cloud provider and women and around<font color="#E5E5E5"> our</font>

34
00:01:43,859 --> 00:01:49,458
<font color="#CCCCCC">team manager</font><font color="#E5E5E5"> one five million websites</font>

35
00:01:46,549 --> 00:01:52,740
which<font color="#E5E5E5"> are distributing between around</font>

36
00:01:49,459 --> 00:01:55,590
<font color="#CCCCCC">14000 severals</font><font color="#E5E5E5"> most of the case</font>

37
00:01:52,740 --> 00:01:58,259
everything<font color="#E5E5E5"> is</font><font color="#CCCCCC"> ok of course but sometimes</font>

38
00:01:55,590 --> 00:02:02,399
<font color="#E5E5E5">we can have a crash of one or more</font>

39
00:01:58,259 --> 00:02:06,779
services and<font color="#E5E5E5"> even if we have some</font>

40
00:02:02,399 --> 00:02:10,530
<font color="#CCCCCC">lebanon systems maybe sometimes some</font>

41
00:02:06,779 --> 00:02:12,569
users can be impacted<font color="#E5E5E5"> so the objective</font>

42
00:02:10,530 --> 00:02:15,239
of<font color="#E5E5E5"> the project is simple we need to</font>

43
00:02:12,569 --> 00:02:18,100
<font color="#E5E5E5">compute the</font><font color="#CCCCCC"> Q s so the quality</font><font color="#E5E5E5"> of</font>

44
00:02:15,239 --> 00:02:21,970
service of every<font color="#E5E5E5"> website of</font>

45
00:02:18,100 --> 00:02:25,750
<font color="#E5E5E5">have the five million websites</font><font color="#CCCCCC"> the</font>

46
00:02:21,970 --> 00:02:29,140
quality<font color="#E5E5E5"> of service is a</font><font color="#CCCCCC"> qsr is a simple</font>

47
00:02:25,750 --> 00:02:31,180
percentage which saying<font color="#E5E5E5"> if 100 persons</font>

48
00:02:29,140 --> 00:02:35,049
<font color="#E5E5E5">everything is</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> the case</font>

49
00:02:31,180 --> 00:02:37,630
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> not quickly it's not</font><font color="#E5E5E5"> Anna's in case</font>

50
00:02:35,050 --> 00:02:39,880
of back<font color="#E5E5E5"> us for particular day we heard</font>

51
00:02:37,630 --> 00:02:42,340
so need to<font color="#CCCCCC"> find the root causes of</font><font color="#E5E5E5"> the</font>

52
00:02:39,880 --> 00:02:47,170
<font color="#CCCCCC">word case so we need to find what</font>

53
00:02:42,340 --> 00:02:52,570
servers between this<font color="#CCCCCC"> 14,000</font><font color="#E5E5E5"> servers have</font>

54
00:02:47,170 --> 00:02:55,480
impacted my customers<font color="#CCCCCC"> and why so hits</font>

55
00:02:52,570 --> 00:02:58,239
the objective<font color="#E5E5E5"> and the next part wasn't</font>

56
00:02:55,480 --> 00:03:00,780
by<font color="#CCCCCC"> Hon</font><font color="#E5E5E5"> Tony will present it will be</font>

57
00:02:58,240 --> 00:03:06,820
around the graph part of the<font color="#E5E5E5"> product</font>

58
00:03:00,780 --> 00:03:11,650
<font color="#E5E5E5">okay so the first thought photo project</font>

59
00:03:06,820 --> 00:03:16,000
was to get the HTTP status code of<font color="#E5E5E5"> every</font>

60
00:03:11,650 --> 00:03:19,890
<font color="#E5E5E5">website</font><font color="#CCCCCC"> hosted by OVH</font><font color="#E5E5E5"> but it's a bit</font>

61
00:03:16,000 --> 00:03:23,620
complicated<font color="#E5E5E5"> it's not really Angie and</font>

62
00:03:19,890 --> 00:03:26,739
<font color="#CCCCCC">sometime</font><font color="#E5E5E5"> it's even the customers code</font>

63
00:03:23,620 --> 00:03:28,990
which is<font color="#E5E5E5"> not working</font><font color="#CCCCCC"> so it's not the</font>

64
00:03:26,740 --> 00:03:33,670
structure<font color="#E5E5E5"> and of course in depth see as</font>

65
00:03:28,990 --> 00:03:38,380
<font color="#CCCCCC">I Nicholas</font><font color="#E5E5E5"> told we want to know the root</font>

66
00:03:33,670 --> 00:03:40,920
causes<font color="#E5E5E5"> so the idea of that seeds to use</font>

67
00:03:38,380 --> 00:03:46,359
<font color="#E5E5E5">dependency graph to find the root causes</font>

68
00:03:40,920 --> 00:03:51,220
for example.com<font color="#E5E5E5"> we can imagine this kind</font>

69
00:03:46,360 --> 00:03:55,030
<font color="#E5E5E5">of architecture when all nodes are</font>

70
00:03:51,220 --> 00:03:58,000
working fine<font color="#E5E5E5"> the website is up but if a</font>

71
00:03:55,030 --> 00:03:58,780
<font color="#E5E5E5">website if the DBS is not working</font>

72
00:03:58,000 --> 00:04:01,600
anymore

73
00:03:58,780 --> 00:04:04,870
the device is not working<font color="#E5E5E5"> and the</font>

74
00:04:01,600 --> 00:04:07,570
website will<font color="#CCCCCC"> be done</font><font color="#E5E5E5"> so we can both find</font>

75
00:04:04,870 --> 00:04:12,280
the root causes<font color="#E5E5E5"> and also get a</font><font color="#CCCCCC"> queue as</font>

76
00:04:07,570 --> 00:04:15,160
<font color="#CCCCCC">for example.com</font><font color="#E5E5E5"> in order to to get a</font>

77
00:04:12,280 --> 00:04:19,060
graph in<font color="#E5E5E5"> depth see we are using no 4G</font>

78
00:04:15,160 --> 00:04:21,730
which is a<font color="#E5E5E5"> graphic on</font><font color="#CCCCCC"> T database and we</font>

79
00:04:19,060 --> 00:04:23,830
are using Kafka which is a queue in

80
00:04:21,730 --> 00:04:26,400
order to under the messages especially

81
00:04:23,830 --> 00:04:29,380
<font color="#E5E5E5">for the web of thing Tim we are</font>

82
00:04:26,400 --> 00:04:32,318
<font color="#E5E5E5">populating a graph in real time we have</font>

83
00:04:29,380 --> 00:04:35,529
<font color="#E5E5E5">others constantly and</font>

84
00:04:32,319 --> 00:04:38,110
infrastructure is is<font color="#E5E5E5"> moving so we have a</font>

85
00:04:35,529 --> 00:04:40,589
Python<font color="#E5E5E5"> consumer which is are currently</font>

86
00:04:38,110 --> 00:04:43,239
handling messages and when she's

87
00:04:40,589 --> 00:04:46,379
validate and we from at the message in

88
00:04:43,239 --> 00:04:49,989
order<font color="#CCCCCC"> to populate the new 4G database</font>

89
00:04:46,379 --> 00:04:50,949
with this kind of graph we have

90
00:04:49,989 --> 00:04:54,008
currently

91
00:04:50,949 --> 00:04:58,869
<font color="#E5E5E5">Myron's of</font><font color="#CCCCCC"> nerds and relationships in</font>

92
00:04:54,009 --> 00:05:01,949
depth see and this is<font color="#E5E5E5"> going so this time</font>

93
00:04:58,869 --> 00:05:05,469
it's<font color="#E5E5E5"> about the route</font>

94
00:05:01,949 --> 00:05:08,139
<font color="#E5E5E5">okay so home Tony explain why we need a</font>

95
00:05:05,469 --> 00:05:11,349
graph dependency in the<font color="#E5E5E5"> deficit project</font>

96
00:05:08,139 --> 00:05:14,589
and how we can handle<font color="#E5E5E5"> the messages and</font>

97
00:05:11,349 --> 00:05:18,789
transform it<font color="#CCCCCC"> between</font><font color="#E5E5E5"> in nerds in</font><font color="#CCCCCC"> neo4j</font>

98
00:05:14,589 --> 00:05:21,699
<font color="#E5E5E5">now you can ask us why what is the link</font>

99
00:05:18,789 --> 00:05:24,009
between a graph dependency and the<font color="#CCCCCC"> qsr</font>

100
00:05:21,699 --> 00:05:28,329
how<font color="#E5E5E5"> to compute a curious from some</font><font color="#CCCCCC"> nut</font>

101
00:05:24,009 --> 00:05:31,779
<font color="#E5E5E5">in our new project database in fact</font>

102
00:05:28,329 --> 00:05:35,199
there<font color="#CCCCCC"> is a two case we have lots of</font>

103
00:05:31,779 --> 00:05:35,589
<font color="#CCCCCC">nodes</font><font color="#E5E5E5"> in our new 4G and for certain</font>

104
00:05:35,199 --> 00:05:39,610
nerds

105
00:05:35,589 --> 00:05:42,489
<font color="#E5E5E5">we have</font><font color="#CCCCCC"> probs up running and checking</font>

106
00:05:39,610 --> 00:05:45,009
<font color="#CCCCCC">something like the CPU like the RAM like</font>

107
00:05:42,489 --> 00:05:48,549
the<font color="#CCCCCC"> pings</font><font color="#E5E5E5"> a respond time from the ping</font>

108
00:05:45,009 --> 00:05:52,179
<font color="#CCCCCC">file lots of things to check and to see</font>

109
00:05:48,550 --> 00:05:54,839
if server so the nut is<font color="#E5E5E5"> okay these</font>

110
00:05:52,179 --> 00:05:57,578
things<font color="#E5E5E5"> are sent to time series database</font>

111
00:05:54,839 --> 00:06:00,429
<font color="#CCCCCC">so we</font><font color="#E5E5E5"> are graph like it</font>

112
00:05:57,579 --> 00:06:02,860
I<font color="#E5E5E5"> present</font><font color="#CCCCCC"> it later so so you already</font>

113
00:06:00,429 --> 00:06:04,899
know<font color="#CCCCCC"> what is the time</font><font color="#E5E5E5"> shows databases we</font>

114
00:06:02,860 --> 00:06:08,459
can have some information about<font color="#E5E5E5"> metrics</font>

115
00:06:04,899 --> 00:06:11,589
to see<font color="#E5E5E5"> if our sorrows our</font><font color="#CCCCCC"> okay or</font><font color="#E5E5E5"> not</font>

116
00:06:08,459 --> 00:06:14,129
<font color="#E5E5E5">it's the first case and we will see</font>

117
00:06:11,589 --> 00:06:17,889
together how we can use a work us for it

118
00:06:14,129 --> 00:06:21,309
another case is the web the not cannot

119
00:06:17,889 --> 00:06:24,610
<font color="#CCCCCC">be monitor</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example a website</font><font color="#E5E5E5"> cannot</font>

120
00:06:21,309 --> 00:06:27,369
be monitored by a probe saying checking

121
00:06:24,610 --> 00:06:30,039
the HTTP static<font color="#CCCCCC"> odd</font><font color="#E5E5E5"> because we cannot</font>

122
00:06:27,369 --> 00:06:32,589
<font color="#CCCCCC">guarantee the the crud maybe the user</font>

123
00:06:30,039 --> 00:06:34,959
itself<font color="#E5E5E5"> can raise an error so in this</font>

124
00:06:32,589 --> 00:06:38,619
case we will<font color="#CCCCCC"> not choose time</font><font color="#E5E5E5"> series</font><font color="#CCCCCC"> that</font>

125
00:06:34,959 --> 00:06:41,559
arise but will use its<font color="#E5E5E5"> own parent</font><font color="#CCCCCC"> QSR to</font>

126
00:06:38,619 --> 00:06:43,419
build<font color="#CCCCCC"> it's us in this case we are</font>

127
00:06:41,559 --> 00:06:45,490
<font color="#CCCCCC">talking about operation</font><font color="#E5E5E5"> Q</font><font color="#CCCCCC"> s and</font>

128
00:06:43,419 --> 00:06:49,719
aggregation<font color="#E5E5E5"> Q s</font>

129
00:06:45,490 --> 00:06:52,610
so let's start<font color="#E5E5E5"> with the work us and</font>

130
00:06:49,720 --> 00:06:54,830
using<font color="#E5E5E5"> this simple schema we want to</font>

131
00:06:52,610 --> 00:06:57,800
<font color="#E5E5E5">compute the Q s of the website here</font>

132
00:06:54,830 --> 00:07:00,800
which depends<font color="#E5E5E5"> on just two dependencies</font>

133
00:06:57,800 --> 00:07:03,800
which have a storage<font color="#E5E5E5"> server and</font><font color="#CCCCCC"> a web</font>

134
00:07:00,800 --> 00:07:06,770
server<font color="#CCCCCC"> next we'll see that we also want</font>

135
00:07:03,800 --> 00:07:11,090
<font color="#CCCCCC">to compute the Q s of a group of website</font>

136
00:07:06,770 --> 00:07:14,419
using a labelled name<font color="#CCCCCC"> offer we are</font>

137
00:07:11,090 --> 00:07:15,049
<font color="#CCCCCC">talking</font><font color="#E5E5E5"> about the filer part using</font><font color="#CCCCCC"> a</font>

138
00:07:14,419 --> 00:07:17,419
work us

139
00:07:15,050 --> 00:07:21,200
it's the graph<font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to show you</font>

140
00:07:17,419 --> 00:07:23,930
before<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> it it's a graph</font><font color="#E5E5E5"> and a</font>

141
00:07:21,200 --> 00:07:26,900
picture<font color="#E5E5E5"> showing some dashboard taking</font>

142
00:07:23,930 --> 00:07:30,380
<font color="#E5E5E5">from the official website</font><font color="#CCCCCC"> hen the</font><font color="#E5E5E5"> high</font><font color="#CCCCCC"> G</font>

143
00:07:26,900 --> 00:07:32,989
of the wood<font color="#E5E5E5"> Q s is already simple we</font>

144
00:07:30,380 --> 00:07:35,780
need to<font color="#CCCCCC"> Hannah lies some data points</font><font color="#E5E5E5"> and</font>

145
00:07:32,990 --> 00:07:38,690
for<font color="#CCCCCC"> example if this</font><font color="#E5E5E5"> data points are</font>

146
00:07:35,780 --> 00:07:41,419
above<font color="#E5E5E5"> a given treasured we can say</font>

147
00:07:38,690 --> 00:07:43,520
<font color="#E5E5E5">during this moment the Q s is not given</font>

148
00:07:41,419 --> 00:07:48,349
<font color="#E5E5E5">for her user so we are going to decrease</font>

149
00:07:43,520 --> 00:07:51,349
<font color="#E5E5E5">the Q s here is a sovereign name file</font>

150
00:07:48,350 --> 00:07:53,210
<font color="#CCCCCC">other one it's the response time</font><font color="#E5E5E5"> your</font>

151
00:07:51,350 --> 00:07:57,140
father<font color="#E5E5E5"> ping and we can see there is two</font>

152
00:07:53,210 --> 00:07:59,479
<font color="#E5E5E5">problems here</font><font color="#CCCCCC"> it's a representation of</font>

153
00:07:57,140 --> 00:08:01,969
<font color="#E5E5E5">some data</font><font color="#CCCCCC"> points of course</font><font color="#E5E5E5"> we are</font>

154
00:07:59,479 --> 00:08:07,969
computing<font color="#E5E5E5"> the Q s every day so there is</font>

155
00:08:01,970 --> 00:08:10,910
just small fuel<font color="#CCCCCC"> 10 data points but there</font>

156
00:08:07,970 --> 00:08:15,169
is lots of data<font color="#E5E5E5"> points in one day hen we</font>

157
00:08:10,910 --> 00:08:17,300
can see from six data points the<font color="#E5E5E5"> the Q</font>

158
00:08:15,169 --> 00:08:20,299
<font color="#E5E5E5">as far the response time</font><font color="#CCCCCC"> is above a</font>

159
00:08:17,300 --> 00:08:23,539
certain threshold<font color="#E5E5E5"> so the quest must</font>

160
00:08:20,300 --> 00:08:26,510
decrease<font color="#CCCCCC"> during this time we can have</font>

161
00:08:23,539 --> 00:08:29,090
another<font color="#E5E5E5"> type of check which Indian</font>

162
00:08:26,510 --> 00:08:33,770
interval and it's the same<font color="#E5E5E5"> ammeter but</font>

163
00:08:29,090 --> 00:08:37,039
we have to analyze a button threshold so

164
00:08:33,770 --> 00:08:39,650
the<font color="#CCCCCC"> high-g will see some Python code</font><font color="#E5E5E5"> the</font>

165
00:08:37,039 --> 00:08:42,650
<font color="#E5E5E5">high D is to convert the previous</font>

166
00:08:39,650 --> 00:08:45,680
picture which is<font color="#E5E5E5"> time series containing</font>

167
00:08:42,650 --> 00:08:48,620
values into a time series containing

168
00:08:45,680 --> 00:08:52,670
<font color="#E5E5E5">boolean value so just</font><font color="#CCCCCC"> two values through</font>

169
00:08:48,620 --> 00:08:55,330
force and I don't<font color="#E5E5E5"> know if yes here when</font>

170
00:08:52,670 --> 00:08:57,389
I have a<font color="#E5E5E5"> program I transform it into</font>

171
00:08:55,330 --> 00:09:00,929
false values

172
00:08:57,389 --> 00:09:02,790
how to do hit it's a table

173
00:09:00,929 --> 00:09:05,279
representation not very interesting<font color="#E5E5E5"> but</font>

174
00:09:02,790 --> 00:09:09,199
you can see we we<font color="#CCCCCC"> transformed some</font>

175
00:09:05,279 --> 00:09:13,170
values<font color="#E5E5E5"> into boolean representation and</font>

176
00:09:09,199 --> 00:09:15,359
it's the module we use you you certainly

177
00:09:13,170 --> 00:09:17,549
<font color="#CCCCCC">you</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> panda</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> amateur it's a</font>

178
00:09:15,360 --> 00:09:20,249
module<font color="#E5E5E5"> to analyze and manipulate some</font>

179
00:09:17,549 --> 00:09:23,699
data using some data structures<font color="#E5E5E5"> like</font>

180
00:09:20,249 --> 00:09:25,709
<font color="#CCCCCC">series and data frames Han</font><font color="#E5E5E5"> here we can</font>

181
00:09:23,699 --> 00:09:28,290
<font color="#E5E5E5">use it to simply transform it's the</font>

182
00:09:25,709 --> 00:09:30,899
first step<font color="#E5E5E5"> we also show you some other</font>

183
00:09:28,290 --> 00:09:33,569
steps later<font color="#E5E5E5"> the first step is to</font>

184
00:09:30,899 --> 00:09:37,379
transform<font color="#CCCCCC"> you can see whether a</font>

185
00:09:33,569 --> 00:09:39,959
dictionary of<font color="#CCCCCC"> x term</font><font color="#E5E5E5"> values in the keys</font>

186
00:09:37,379 --> 00:09:42,600
it's time-stamped<font color="#CCCCCC"> in values it's the</font>

187
00:09:39,959 --> 00:09:46,559
response time of<font color="#E5E5E5"> the ping we transform</font>

188
00:09:42,600 --> 00:09:49,079
it in boolean values just<font color="#E5E5E5"> by here</font>

189
00:09:46,559 --> 00:09:51,868
transforming transforming the data

190
00:09:49,079 --> 00:09:56,878
points into<font color="#E5E5E5"> service upon the service and</font>

191
00:09:51,869 --> 00:09:59,220
then we apply for each each data<font color="#E5E5E5"> we</font>

192
00:09:56,879 --> 00:10:01,619
apply a simple<font color="#CCCCCC"> function here</font><font color="#E5E5E5"> is just a</font>

193
00:09:59,220 --> 00:10:05,399
<font color="#CCCCCC">lumbar saying everything that is above</font>

194
00:10:01,619 --> 00:10:08,399
the given threshold is<font color="#E5E5E5"> 20 will be</font>

195
00:10:05,399 --> 00:10:11,459
<font color="#E5E5E5">converted</font><font color="#CCCCCC"> into false values so we</font>

196
00:10:08,399 --> 00:10:17,369
<font color="#E5E5E5">transform billions time service values</font>

197
00:10:11,459 --> 00:10:19,979
into boolean values<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and it is the</font>

198
00:10:17,369 --> 00:10:24,119
<font color="#E5E5E5">result</font><font color="#CCCCCC"> you can see in the picture</font><font color="#E5E5E5"> of the</font>

199
00:10:19,980 --> 00:10:26,220
tree<font color="#E5E5E5"> we analyzed up we</font><font color="#CCCCCC"> analyzed the</font>

200
00:10:24,119 --> 00:10:29,610
metric in time series<font color="#CCCCCC"> data base and</font>

201
00:10:26,220 --> 00:10:32,910
corrupt it into a<font color="#CCCCCC"> cue</font><font color="#E5E5E5"> s so here you can</font>

202
00:10:29,610 --> 00:10:34,980
say me<font color="#E5E5E5"> I just have blends data and it's</font>

203
00:10:32,910 --> 00:10:37,919
not a<font color="#E5E5E5"> curious it's not a lot number</font><font color="#CCCCCC"> and</font>

204
00:10:34,980 --> 00:10:41,369
how<font color="#CCCCCC"> can we transform</font><font color="#E5E5E5"> it in in this kind</font>

205
00:10:37,919 --> 00:10:48,449
of<font color="#E5E5E5"> number Anthony will just show you how</font>

206
00:10:41,369 --> 00:10:51,779
<font color="#CCCCCC">to do it can</font><font color="#E5E5E5"> fix so in order to get Q s</font>

207
00:10:48,449 --> 00:10:54,059
we have<font color="#E5E5E5"> several steps first of all just</font>

208
00:10:51,779 --> 00:10:57,269
imagine the website we don't have

209
00:10:54,059 --> 00:10:59,999
<font color="#CCCCCC">metrics actually</font><font color="#E5E5E5"> we have metrics for</font><font color="#CCCCCC"> Phi</font>

210
00:10:57,269 --> 00:11:02,610
<font color="#CCCCCC">Rho a path but we</font><font color="#E5E5E5"> don't have metrics for</font>

211
00:10:59,999 --> 00:11:07,529
<font color="#E5E5E5">our website but we we want the curious</font>

212
00:11:02,610 --> 00:11:09,940
<font color="#E5E5E5">because these customer websites so the</font>

213
00:11:07,529 --> 00:11:13,310
quest of<font color="#CCCCCC"> the website is</font>

214
00:11:09,940 --> 00:11:17,570
the combined between the<font color="#CCCCCC"> requests under</font>

215
00:11:13,310 --> 00:11:20,930
fader and - yeah<font color="#E5E5E5"> is the end operation</font>

216
00:11:17,570 --> 00:11:24,200
between<font color="#E5E5E5"> both of them so when the defense</font>

217
00:11:20,930 --> 00:11:26,719
is<font color="#CCCCCC"> not walking went on the one of them</font>

218
00:11:24,200 --> 00:11:31,040
story is not<font color="#CCCCCC"> walking the website will be</font>

219
00:11:26,720 --> 00:11:35,839
done<font color="#CCCCCC"> we have the bullion's</font><font color="#E5E5E5"> for the</font><font color="#CCCCCC"> files</font>

220
00:11:31,040 --> 00:11:40,130
<font color="#CCCCCC">attached</font><font color="#E5E5E5"> but we can compute the billions</font>

221
00:11:35,839 --> 00:11:43,279
for the<font color="#CCCCCC"> example.com</font><font color="#E5E5E5"> like that so in</font>

222
00:11:40,130 --> 00:11:45,620
<font color="#CCCCCC">pound</font><font color="#E5E5E5"> us we have the two series for the</font>

223
00:11:43,279 --> 00:11:48,670
fighter<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the Bosch and we want to</font>

224
00:11:45,620 --> 00:11:52,850
merge the two series<font color="#E5E5E5"> into a data frame</font>

225
00:11:48,670 --> 00:11:57,079
<font color="#CCCCCC">just</font><font color="#E5E5E5"> consider this subset of data we</font>

226
00:11:52,850 --> 00:11:59,899
don't have the same time stamps for<font color="#CCCCCC"> the</font>

227
00:11:57,079 --> 00:12:07,099
values<font color="#E5E5E5"> so when we match to the bath</font>

228
00:11:59,899 --> 00:12:11,149
<font color="#E5E5E5">series see there are some gaps</font><font color="#CCCCCC"> yep yeah</font>

229
00:12:07,100 --> 00:12:14,420
<font color="#E5E5E5">now with an N</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> so because the</font>

230
00:12:11,149 --> 00:12:19,130
products<font color="#CCCCCC"> are not sending the matrix in</font>

231
00:12:14,420 --> 00:12:24,260
<font color="#E5E5E5">the same time so it's really a</font><font color="#CCCCCC"> real-life</font>

232
00:12:19,130 --> 00:12:26,060
example actually<font color="#E5E5E5"> we don't want gaps in</font>

233
00:12:24,260 --> 00:12:27,770
depth see we are applying<font color="#E5E5E5"> a forward</font>

234
00:12:26,060 --> 00:12:34,069
<font color="#E5E5E5">feeling and back</font><font color="#CCCCCC"> feeling</font><font color="#E5E5E5"> operation</font>

235
00:12:27,770 --> 00:12:35,930
between<font color="#E5E5E5"> the</font><font color="#CCCCCC"> rows and as you can see in</font>

236
00:12:34,070 --> 00:12:39,589
the previous<font color="#CCCCCC"> table you have</font><font color="#E5E5E5"> an N value</font>

237
00:12:35,930 --> 00:12:42,949
<font color="#CCCCCC">and here</font><font color="#E5E5E5"> we just put the force into the</font>

238
00:12:39,589 --> 00:12:45,709
next rows and when we have nine in the

239
00:12:42,950 --> 00:12:48,890
first rows we can put with a<font color="#CCCCCC"> back fill</font>

240
00:12:45,709 --> 00:12:53,300
operation the<font color="#E5E5E5"> true here then we don't</font>

241
00:12:48,890 --> 00:12:56,240
<font color="#E5E5E5">have any more gaps it's good and we</font><font color="#CCCCCC"> can</font>

242
00:12:53,300 --> 00:12:59,300
<font color="#CCCCCC">apply the end operation between</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> new</font>

243
00:12:56,240 --> 00:13:02,839
columns and we can<font color="#E5E5E5"> observe it for</font>

244
00:12:59,300 --> 00:13:05,959
example.com<font color="#E5E5E5"> so</font><font color="#CCCCCC"> encounters</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have data</font>

245
00:13:02,839 --> 00:13:11,029
frame with full rows with no gaps and

246
00:13:05,959 --> 00:13:15,439
the operation no we want<font color="#E5E5E5"> to just keep</font>

247
00:13:11,029 --> 00:13:17,920
the changing state actually because this

248
00:13:15,440 --> 00:13:20,740
is just true<font color="#CCCCCC"> and false</font><font color="#E5E5E5"> so we can</font>

249
00:13:17,920 --> 00:13:24,639
just reduce the amount of data

250
00:13:20,740 --> 00:13:28,420
especially<font color="#CCCCCC"> for next computation I will</font>

251
00:13:24,639 --> 00:13:31,029
speak with that later<font color="#CCCCCC"> and in order</font><font color="#E5E5E5"> to</font>

252
00:13:28,420 --> 00:13:34,060
compute<font color="#CCCCCC"> acquiesce we want the duration</font>

253
00:13:31,029 --> 00:13:36,870
so we<font color="#E5E5E5"> apply it group by</font><font color="#CCCCCC"> oppression and</font>

254
00:13:34,060 --> 00:13:40,599
the Sun and we<font color="#CCCCCC"> can go and we can get</font>

255
00:13:36,870 --> 00:13:43,990
<font color="#E5E5E5">duration for both false and true it's a</font>

256
00:13:40,600 --> 00:13:49,510
very small<font color="#E5E5E5"> subset yeah but in the epsy</font>

257
00:13:43,990 --> 00:13:53,790
we must be compute<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 20 awell so know</font>

258
00:13:49,510 --> 00:13:57,130
with the true period and then with the

259
00:13:53,790 --> 00:14:05,199
<font color="#E5E5E5">total of the periods we can compute the</font>

260
00:13:57,130 --> 00:14:07,930
Q s<font color="#E5E5E5"> the real the real deal and just just</font>

261
00:14:05,199 --> 00:14:11,019
<font color="#E5E5E5">to not before just a few minutes ago I</font>

262
00:14:07,930 --> 00:14:14,469
talked about the world QoS<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we just</font>

263
00:14:11,019 --> 00:14:17,019
<font color="#CCCCCC">finished showing a boolean time</font><font color="#E5E5E5"> series</font>

264
00:14:14,470 --> 00:14:20,110
and what is the link<font color="#E5E5E5"> between a boolean</font>

265
00:14:17,019 --> 00:14:24,070
<font color="#CCCCCC">terms same time series and a real</font><font color="#E5E5E5"> Q s on</font>

266
00:14:20,110 --> 00:14:28,089
<font color="#E5E5E5">Tony just show it in fact when you want</font>

267
00:14:24,070 --> 00:14:32,529
<font color="#E5E5E5">to check the Q s of a server you don't</font>

268
00:14:28,089 --> 00:14:34,959
<font color="#CCCCCC">just check the ping</font><font color="#E5E5E5"> like we show you</font>

269
00:14:32,529 --> 00:14:37,630
have<font color="#E5E5E5"> so check lots of other</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> and</font>

270
00:14:34,959 --> 00:14:40,479
in this case you can have lots<font color="#CCCCCC"> of</font>

271
00:14:37,630 --> 00:14:43,360
metrics you<font color="#CCCCCC"> can transform all of these</font>

272
00:14:40,480 --> 00:14:46,029
<font color="#E5E5E5">metrics between in billions</font><font color="#CCCCCC"> metric</font>

273
00:14:43,360 --> 00:14:49,000
metric<font color="#E5E5E5"> and then apply your hand for</font>

274
00:14:46,029 --> 00:14:52,300
example<font color="#E5E5E5"> on it and in this case</font><font color="#CCCCCC"> it's the</font>

275
00:14:49,000 --> 00:15:00,670
exact same algorithm we apply to<font color="#CCCCCC"> compute</font>

276
00:14:52,300 --> 00:15:05,469
<font color="#CCCCCC">the quest for a walk us sorry</font><font color="#E5E5E5"> okay so we</font>

277
00:15:00,670 --> 00:15:08,319
have also the<font color="#E5E5E5"> all operation available</font><font color="#CCCCCC"> in</font>

278
00:15:05,470 --> 00:15:13,720
<font color="#CCCCCC">deep sea and the ratio</font><font color="#E5E5E5"> and the at least</font>

279
00:15:08,319 --> 00:15:18,910
version<font color="#CCCCCC"> no the aggregation Q</font><font color="#E5E5E5"> s is photo</font>

280
00:15:13,720 --> 00:15:22,029
of because<font color="#CCCCCC"> sometime we don't want the</font>

281
00:15:18,910 --> 00:15:25,540
end<font color="#E5E5E5"> other or at least and also</font>

282
00:15:22,029 --> 00:15:28,589
passionate<font color="#E5E5E5"> should you we we want average</font>

283
00:15:25,540 --> 00:15:30,259
operation for example we there is no

284
00:15:28,589 --> 00:15:32,929
<font color="#E5E5E5">value</font>

285
00:15:30,259 --> 00:15:35,269
<font color="#CCCCCC">a website for</font><font color="#E5E5E5"> the premium</font><font color="#CCCCCC"> alpha is done</font>

286
00:15:32,929 --> 00:15:38,889
all the<font color="#CCCCCC"> website for the premiere a</font>

287
00:15:35,269 --> 00:15:42,079
premium<font color="#E5E5E5"> offer forbidden is not really</font>

288
00:15:38,889 --> 00:15:44,899
<font color="#E5E5E5">revenge so we can compute the average</font>

289
00:15:42,079 --> 00:15:49,519
for the<font color="#CCCCCC"> notes and</font><font color="#E5E5E5"> also the min and the</font>

290
00:15:44,899 --> 00:15:53,959
max for the<font color="#E5E5E5"> note that's for first very</font>

291
00:15:49,519 --> 00:15:58,489
useful<font color="#CCCCCC"> no I will let Nicolas to talk</font>

292
00:15:53,959 --> 00:16:01,160
about<font color="#CCCCCC"> their flow okay so we sing</font>

293
00:15:58,489 --> 00:16:04,549
together<font color="#E5E5E5"> how we can prove data into a</font>

294
00:16:01,160 --> 00:16:08,089
graph databases and how<font color="#CCCCCC"> we can compute</font>

295
00:16:04,549 --> 00:16:12,589
the qs4 hitch of the nerd depending

296
00:16:08,089 --> 00:16:14,929
depending of if the nadas<font color="#E5E5E5"> data data to</font>

297
00:16:12,589 --> 00:16:16,729
analyze in time series<font color="#CCCCCC"> data base or not</font>

298
00:16:14,929 --> 00:16:20,179
<font color="#CCCCCC">and in</font><font color="#E5E5E5"> this case we</font><font color="#CCCCCC"> Hannah lies its</font>

299
00:16:16,729 --> 00:16:24,079
parent<font color="#CCCCCC"> Q s now it's time to</font><font color="#E5E5E5"> assemble</font>

300
00:16:20,179 --> 00:16:27,049
have a hull of it and use a scheduler to

301
00:16:24,079 --> 00:16:29,809
compute the Q s of our customers<font color="#E5E5E5"> every</font>

302
00:16:27,049 --> 00:16:32,329
<font color="#E5E5E5">night because in Hawaii and in the web</font>

303
00:16:29,809 --> 00:16:38,539
hosting team we compute the Q s for each

304
00:16:32,329 --> 00:16:41,508
<font color="#E5E5E5">day hen</font><font color="#CCCCCC"> so we use 1/2 flow has the</font>

305
00:16:38,539 --> 00:16:44,629
scheduler<font color="#E5E5E5"> half flow is a task scheduler</font>

306
00:16:41,509 --> 00:16:50,720
it's like a fun<font color="#E5E5E5"> place</font><font color="#CCCCCC"> please whiten in</font>

307
00:16:44,629 --> 00:16:54,199
Python and made by happy NB it's now in

308
00:16:50,720 --> 00:16:57,470
<font color="#CCCCCC">the Apache foundation and it's a</font>

309
00:16:54,199 --> 00:17:00,949
workflow<font color="#CCCCCC"> a</font><font color="#E5E5E5"> pipeline</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> prefer it</font>

310
00:16:57,470 --> 00:17:03,049
managed some dependencies<font color="#E5E5E5"> so you can you</font>

311
00:17:00,949 --> 00:17:05,628
<font color="#CCCCCC">can view to the right of the screen</font><font color="#E5E5E5"> here</font>

312
00:17:03,049 --> 00:17:08,418
<font color="#E5E5E5">we</font><font color="#CCCCCC"> have some tasks</font><font color="#E5E5E5"> to be done before</font>

313
00:17:05,628 --> 00:17:11,990
<font color="#CCCCCC">some other tasks</font><font color="#E5E5E5"> and we can also have</font>

314
00:17:08,419 --> 00:17:15,829
some tasks running in parallel and this

315
00:17:11,990 --> 00:17:20,659
task is waiting<font color="#CCCCCC"> the result of the hosel</font>

316
00:17:15,829 --> 00:17:24,709
<font color="#E5E5E5">task</font><font color="#CCCCCC"> the best practice is to have hid</font>

317
00:17:20,659 --> 00:17:28,399
important<font color="#E5E5E5"> tasks so yeah it's a</font><font color="#CCCCCC"> webserver</font>

318
00:17:24,709 --> 00:17:31,309
<font color="#E5E5E5">of a flow why we decided</font><font color="#CCCCCC"> to use a</font><font color="#E5E5E5"> flow</font>

319
00:17:28,398 --> 00:17:35,449
to build<font color="#CCCCCC"> our Q s is for many reasons and</font>

320
00:17:31,309 --> 00:17:38,480
the futures<font color="#E5E5E5"> of a flow which is if any</font>

321
00:17:35,450 --> 00:17:42,049
<font color="#CCCCCC">task failed for a reason or</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> we</font>

322
00:17:38,480 --> 00:17:43,270
<font color="#CCCCCC">can fix the problem and retry it</font><font color="#E5E5E5"> using a</font>

323
00:17:42,049 --> 00:17:47,590
<font color="#E5E5E5">CLE</font>

324
00:17:43,270 --> 00:17:50,560
using the<font color="#CCCCCC"> web server</font><font color="#E5E5E5"> we can also have</font>

325
00:17:47,590 --> 00:17:53,919
access<font color="#CCCCCC"> to this</font><font color="#E5E5E5"> grid we bi web UI can</font>

326
00:17:50,560 --> 00:17:58,200
have the logs<font color="#E5E5E5"> of everything because</font>

327
00:17:53,920 --> 00:17:58,200
<font color="#E5E5E5">during the night we sleep of course</font>

328
00:18:00,240 --> 00:18:03,390
excuse me

329
00:18:03,450 --> 00:18:08,140
<font color="#E5E5E5">no not yet</font>

330
00:18:05,200 --> 00:18:13,410
we do not have a<font color="#E5E5E5"> uncurled but if you</font>

331
00:18:08,140 --> 00:18:22,150
have to<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have it excuse me</font>

332
00:18:13,410 --> 00:18:27,790
yeah of<font color="#E5E5E5"> course</font><font color="#CCCCCC"> I not sleep so okay</font><font color="#E5E5E5"> how a</font>

333
00:18:22,150 --> 00:18:31,000
flow can know the<font color="#E5E5E5"> task to lunch and if</font>

334
00:18:27,790 --> 00:18:33,010
sometimes<font color="#CCCCCC"> immersed to lunch</font><font color="#E5E5E5"> work us of</font>

335
00:18:31,000 --> 00:18:35,860
sometimes immersed to lunch operation

336
00:18:33,010 --> 00:18:38,860
chaos or aggregation<font color="#E5E5E5"> in fact it's the</font>

337
00:18:35,860 --> 00:18:41,310
user which tell to<font color="#E5E5E5"> depth see how to do</font>

338
00:18:38,860 --> 00:18:43,959
<font color="#CCCCCC">heat using</font><font color="#E5E5E5"> this simple JSON</font>

339
00:18:41,310 --> 00:18:48,520
configuration so in the end<font color="#CCCCCC"> chavez</font><font color="#E5E5E5"> of</font>

340
00:18:43,960 --> 00:18:51,760
web<font color="#CCCCCC"> hawaii using the happy IP</font><font color="#E5E5E5"> hi the</font>

341
00:18:48,520 --> 00:18:54,840
user of telling us in need to use a

342
00:18:51,760 --> 00:18:57,460
world saw a<font color="#CCCCCC"> work us for hibachi</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> fire</font>

343
00:18:54,840 --> 00:18:59,949
<font color="#CCCCCC">no an aggregation for the offer and</font><font color="#E5E5E5"> an</font>

344
00:18:57,460 --> 00:19:02,890
operation for the<font color="#CCCCCC"> website using the fire</font>

345
00:18:59,950 --> 00:19:06,610
and<font color="#CCCCCC"> a partnered either</font><font color="#E5E5E5"> web UI</font>

346
00:19:02,890 --> 00:19:09,910
representation and to<font color="#E5E5E5"> finish just a few</font>

347
00:19:06,610 --> 00:19:12,729
notes<font color="#E5E5E5"> about how</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> create a dag in half</font>

348
00:19:09,910 --> 00:19:15,690
<font color="#E5E5E5">flow the dag is a group of tasks which</font>

349
00:19:12,730 --> 00:19:19,270
will be done the one<font color="#CCCCCC"> after</font><font color="#E5E5E5"> the other</font>

350
00:19:15,690 --> 00:19:21,250
here it's<font color="#E5E5E5"> ready a simple dag</font><font color="#CCCCCC"> if you want</font>

351
00:19:19,270 --> 00:19:24,580
to have the complete card of<font color="#CCCCCC"> course you</font>

352
00:19:21,250 --> 00:19:30,190
can go<font color="#E5E5E5"> to the github repository and see</font>

353
00:19:24,580 --> 00:19:33,879
the /schedule<font color="#E5E5E5"> aw Faldo here we just</font>

354
00:19:30,190 --> 00:19:36,520
declare<font color="#E5E5E5"> a drag the owner is</font><font color="#CCCCCC"> deb see</font>

355
00:19:33,880 --> 00:19:40,230
<font color="#E5E5E5">hence the start date is first of the</font>

356
00:19:36,520 --> 00:19:43,780
year<font color="#E5E5E5"> so if i lunch are floated a</font>

357
00:19:40,230 --> 00:19:46,930
<font color="#CCCCCC">high-flow will will will fill back</font><font color="#E5E5E5"> every</font>

358
00:19:43,780 --> 00:19:51,430
task for every day until the<font color="#E5E5E5"> first</font>

359
00:19:46,930 --> 00:19:54,820
January then<font color="#CCCCCC"> Hydra I declare my</font><font color="#E5E5E5"> drag</font>

360
00:19:51,430 --> 00:19:57,150
here naming<font color="#CCCCCC"> computer can make us ten</font>

361
00:19:54,820 --> 00:20:03,450
here<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> your work</font>

362
00:19:57,150 --> 00:20:06,330
<font color="#CCCCCC">it's a Quan Quan a former to say my dog</font>

363
00:20:03,450 --> 00:20:09,930
<font color="#E5E5E5">must be lunch every night at this hour</font>

364
00:20:06,330 --> 00:20:13,020
<font color="#E5E5E5">one hour and 15 minutes here it's not</font>

365
00:20:09,930 --> 00:20:16,410
<font color="#CCCCCC">very important</font><font color="#E5E5E5"> it's just an example of</font>

366
00:20:13,020 --> 00:20:18,170
some<font color="#E5E5E5"> tasks but in the repository of</font>

367
00:20:16,410 --> 00:20:21,630
github<font color="#E5E5E5"> you can see the complete code</font>

368
00:20:18,170 --> 00:20:28,080
<font color="#E5E5E5">it's for a computer rule</font><font color="#CCCCCC"> Q s operation</font><font color="#E5E5E5"> Q</font>

369
00:20:21,630 --> 00:20:33,120
s<font color="#E5E5E5"> and aggregation Q s and here if it's</font>

370
00:20:28,080 --> 00:20:35,879
<font color="#E5E5E5">okay yeah here it's the the interesting</font>

371
00:20:33,120 --> 00:20:40,620
part of<font color="#E5E5E5"> out to create a</font><font color="#CCCCCC"> Jag using</font><font color="#E5E5E5"> her</font>

372
00:20:35,880 --> 00:20:45,530
flow<font color="#E5E5E5"> over there a lot here</font><font color="#CCCCCC"> I create</font><font color="#E5E5E5"> for</font>

373
00:20:40,620 --> 00:20:50,000
<font color="#E5E5E5">tasks for my my fault level so hibachi</font>

374
00:20:45,530 --> 00:20:54,389
hibachi<font color="#E5E5E5"> fellow website and offer and</font>

375
00:20:50,000 --> 00:20:58,320
over the I create a patron operator<font color="#CCCCCC"> in</font>

376
00:20:54,390 --> 00:21:01,920
fact when you use<font color="#E5E5E5"> air flow</font><font color="#CCCCCC"> you can want</font>

377
00:20:58,320 --> 00:21:04,139
to<font color="#E5E5E5"> lunch</font><font color="#CCCCCC"> tasks</font><font color="#E5E5E5"> doing some jobs for</font>

378
00:21:01,920 --> 00:21:07,710
<font color="#CCCCCC">example you can want to lunch a bash</font>

379
00:21:04,140 --> 00:21:10,679
script<font color="#E5E5E5"> you can want to do to lunch to</font>

380
00:21:07,710 --> 00:21:13,890
send the mail to happen<font color="#E5E5E5"> a row in the</font>

381
00:21:10,679 --> 00:21:17,700
database and for each kind<font color="#E5E5E5"> of need have</font>

382
00:21:13,890 --> 00:21:21,390
<font color="#CCCCCC">flow provide us an operator in our case</font>

383
00:21:17,700 --> 00:21:23,220
in<font color="#E5E5E5"> depth</font><font color="#CCCCCC"> C we just use the</font><font color="#E5E5E5"> Python</font>

384
00:21:21,390 --> 00:21:26,070
<font color="#E5E5E5">operator you can see over there</font>

385
00:21:23,220 --> 00:21:29,309
I create my task here using the Python

386
00:21:26,070 --> 00:21:32,100
reporter and by teleporter provide me an

387
00:21:29,309 --> 00:21:34,980
attribute<font color="#CCCCCC"> named Python clever in this</font>

388
00:21:32,100 --> 00:21:38,159
case the Python incredible here is

389
00:21:34,980 --> 00:21:42,590
computer world computer all operation

390
00:21:38,160 --> 00:21:42,590
and aggregation<font color="#CCCCCC"> okay</font>

391
00:21:43,140 --> 00:21:48,600
the cool feature of<font color="#E5E5E5"> a flow is that dag</font>

392
00:21:46,260 --> 00:21:49,050
can be created dynamically using Python

393
00:21:48,600 --> 00:21:52,350
code

394
00:21:49,050 --> 00:21:55,559
so here it's<font color="#E5E5E5"> it's sort of static because</font>

395
00:21:52,350 --> 00:21:57,689
<font color="#E5E5E5">I I created the Python cabal computer</font>

396
00:21:55,559 --> 00:22:02,940
the computer<font color="#CCCCCC"> except I mean let's imagine</font>

397
00:21:57,690 --> 00:22:06,000
that hello Percy<font color="#E5E5E5"> parse the occurred our</font>

398
00:22:02,940 --> 00:22:08,340
Deb's occurred<font color="#CCCCCC"> using a flow pass</font><font color="#E5E5E5"> the</font>

399
00:22:06,000 --> 00:22:11,049
user configuration and created

400
00:22:08,340 --> 00:22:15,059
dynamically this code

401
00:22:11,049 --> 00:22:19,389
and to<font color="#E5E5E5"> finish here it's how we can say</font>

402
00:22:15,059 --> 00:22:22,360
to have flow<font color="#E5E5E5"> the order of the</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> we</font>

403
00:22:19,389 --> 00:22:25,779
<font color="#E5E5E5">can see here this two tasks will be</font>

404
00:22:22,360 --> 00:22:29,709
lunched together<font color="#E5E5E5"> so in parallel using</font>

405
00:22:25,779 --> 00:22:32,080
some rocker for example hen<font color="#E5E5E5"> and they</font>

406
00:22:29,710 --> 00:22:35,019
will done they will be done<font color="#E5E5E5"> the website</font>

407
00:22:32,080 --> 00:22:38,369
tasks can be lunch<font color="#E5E5E5"> and then after the</font>

408
00:22:35,019 --> 00:22:41,169
website<font color="#CCCCCC"> tasks</font><font color="#E5E5E5"> it will be the affair task</font>

409
00:22:38,369 --> 00:22:42,850
<font color="#CCCCCC">here we use some bitwise operators now</font>

410
00:22:41,169 --> 00:22:47,529
but<font color="#E5E5E5"> you can also use some meters like</font>

411
00:22:42,850 --> 00:22:49,899
<font color="#E5E5E5">set</font><font color="#CCCCCC"> upstream</font><font color="#E5E5E5"> our set downstream and the</font>

412
00:22:47,529 --> 00:22:53,259
result in<font color="#E5E5E5"> depth see is the following</font><font color="#CCCCCC"> you</font>

413
00:22:49,899 --> 00:22:57,609
<font color="#CCCCCC">can see over the over</font><font color="#E5E5E5"> there it's the</font>

414
00:22:53,259 --> 00:23:01,059
half<font color="#E5E5E5"> loop interface and here we see our</font>

415
00:22:57,609 --> 00:23:04,840
<font color="#E5E5E5">dagger using</font><font color="#CCCCCC"> four tasks Apache</font><font color="#E5E5E5"> file our</font>

416
00:23:01,059 --> 00:23:08,019
website and offer and the dag is<font color="#CCCCCC"> lunch</font>

417
00:23:04,840 --> 00:23:09,539
heavy night for every team here is just

418
00:23:08,019 --> 00:23:13,570
for

419
00:23:09,539 --> 00:23:15,460
<font color="#E5E5E5">the hack</font><font color="#CCCCCC"> Mishima</font><font color="#E5E5E5"> but we have the the web</font>

420
00:23:13,570 --> 00:23:18,700
<font color="#CCCCCC">hosting</font><font color="#E5E5E5"> team we have the storage team</font>

421
00:23:15,460 --> 00:23:22,239
etc<font color="#E5E5E5"> in</font><font color="#CCCCCC"> Hawaii and each of the team has</font>

422
00:23:18,700 --> 00:23:24,669
its own dag and here it's a result<font color="#E5E5E5"> of</font>

423
00:23:22,239 --> 00:23:27,820
the<font color="#CCCCCC"> DEP see himself as displaying</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Q</font>

424
00:23:24,669 --> 00:23:32,169
<font color="#CCCCCC">s</font><font color="#E5E5E5"> the evolution of the</font><font color="#CCCCCC"> q s of the</font>

425
00:23:27,820 --> 00:23:34,809
failure of<font color="#E5E5E5"> the a page etc so we are done</font>

426
00:23:32,169 --> 00:23:37,169
we are<font color="#CCCCCC"> DEP C and if you have any</font>

427
00:23:34,809 --> 00:23:40,200
question I will<font color="#CCCCCC"> answer it with pleasure</font>

428
00:23:37,169 --> 00:23:40,200
thank you

429
00:23:41,340 --> 00:23:43,399
<font color="#E5E5E5">you</font>

