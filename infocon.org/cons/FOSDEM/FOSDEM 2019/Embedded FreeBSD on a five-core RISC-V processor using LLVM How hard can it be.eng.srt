1
00:00:07,509 --> 00:00:11,320
and away<font color="#E5E5E5"> we go</font><font color="#CCCCCC"> okay</font>

2
00:00:09,639 --> 00:00:13,899
thank<font color="#E5E5E5"> you all very much for coming along</font>

3
00:00:11,320 --> 00:00:16,779
<font color="#CCCCCC">um my name</font><font color="#E5E5E5"> is Jeremy Bennett</font><font color="#CCCCCC"> I work</font><font color="#E5E5E5"> for</font>

4
00:00:13,900 --> 00:00:19,119
a<font color="#E5E5E5"> company called</font><font color="#CCCCCC"> ember Kazem you may</font>

5
00:00:16,779 --> 00:00:21,910
well<font color="#CCCCCC"> know us as a compiler company more</font>

6
00:00:19,119 --> 00:00:24,780
recently we've<font color="#E5E5E5"> started to move into the</font>

7
00:00:21,910 --> 00:00:27,009
development<font color="#E5E5E5"> of operating system software</font>

8
00:00:24,780 --> 00:00:28,960
for embedded<font color="#CCCCCC"> systems which is our</font>

9
00:00:27,010 --> 00:00:31,480
speciality<font color="#E5E5E5"> I'm joined in the audience by</font>

10
00:00:28,960 --> 00:00:34,270
my colleague<font color="#CCCCCC"> mark Corbin who heads</font><font color="#E5E5E5"> up</font>

11
00:00:31,480 --> 00:00:37,960
that initiative<font color="#CCCCCC"> and this is the first</font>

12
00:00:34,270 --> 00:00:41,379
time we've actually dipped into<font color="#E5E5E5"> freebsd</font>

13
00:00:37,960 --> 00:00:44,769
we're more linux free artists space and

14
00:00:41,379 --> 00:00:50,679
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> with a project managers hat</font>

15
00:00:44,769 --> 00:00:52,600
<font color="#E5E5E5">talking about our experience</font><font color="#CCCCCC"> so this is</font>

16
00:00:50,679 --> 00:00:57,069
the platform<font color="#E5E5E5"> we're looking at it's a</font>

17
00:00:52,600 --> 00:00:58,179
quad 64-bit RISC<font color="#E5E5E5"> 5 processor</font><font color="#CCCCCC"> no</font>

18
00:00:57,069 --> 00:01:01,719
<font color="#E5E5E5">floating-point that's an interesting</font>

19
00:00:58,179 --> 00:01:06,580
platform<font color="#CCCCCC"> and sitting alongside</font><font color="#E5E5E5"> it's got</font>

20
00:01:01,719 --> 00:01:10,990
a 32-bit integer<font color="#CCCCCC"> s5 platform providing</font>

21
00:01:06,580 --> 00:01:13,479
some general housekeeping functions<font color="#CCCCCC"> this</font>

22
00:01:10,990 --> 00:01:16,750
<font color="#CCCCCC">is</font><font color="#E5E5E5"> proprietary hardware the hardware is</font>

23
00:01:13,479 --> 00:01:19,960
<font color="#E5E5E5">not yet available</font><font color="#CCCCCC"> so we've started work</font>

24
00:01:16,750 --> 00:01:25,619
<font color="#CCCCCC">with the high five</font><font color="#E5E5E5"> Unleashed board which</font>

25
00:01:19,960 --> 00:01:27,750
is a quad<font color="#E5E5E5"> website a five core risk</font><font color="#CCCCCC"> five</font>

26
00:01:25,619 --> 00:01:32,829
board that you can<font color="#E5E5E5"> get from sci-fi</font>

27
00:01:27,750 --> 00:01:35,890
<font color="#CCCCCC">corporation and there's it's schematic</font>

28
00:01:32,829 --> 00:01:38,529
<font color="#E5E5E5">it has essentially</font><font color="#CCCCCC"> four cause the you</font>

29
00:01:35,890 --> 00:01:42,030
<font color="#CCCCCC">54s and it's got</font><font color="#E5E5E5"> our housekeeping call</font>

30
00:01:38,530 --> 00:01:45,039
the e51<font color="#CCCCCC"> then in this</font><font color="#E5E5E5"> case it's a 64-bit</font>

31
00:01:42,030 --> 00:01:48,399
core it's also got<font color="#CCCCCC"> floating-point</font><font color="#E5E5E5"> on the</font>

32
00:01:45,039 --> 00:01:50,380
core which we're<font color="#CCCCCC"> not going to</font><font color="#E5E5E5"> use so</font>

33
00:01:48,399 --> 00:01:53,350
<font color="#E5E5E5">that's our hardware for prototyping</font><font color="#CCCCCC"> this</font>

34
00:01:50,380 --> 00:01:55,929
<font color="#CCCCCC">work and before we even</font><font color="#E5E5E5"> get to hardware</font>

35
00:01:53,350 --> 00:01:58,270
<font color="#E5E5E5">we're using</font><font color="#CCCCCC"> qemu which supports risk 5</font>

36
00:01:55,929 --> 00:02:00,100
so we've got a soft environment<font color="#E5E5E5"> and</font>

37
00:01:58,270 --> 00:02:02,229
that's quite<font color="#CCCCCC"> good the high 5 boards cost</font>

38
00:02:00,100 --> 00:02:04,270
about<font color="#CCCCCC"> $1,000 each</font><font color="#E5E5E5"> they're scarce other</font>

39
00:02:02,229 --> 00:02:06,850
than hen's teeth so we've got one of

40
00:02:04,270 --> 00:02:08,500
them and mark<font color="#CCCCCC"> there operates with full</font>

41
00:02:06,850 --> 00:02:11,728
anti-static wrist bands<font color="#E5E5E5"> when he's within</font>

42
00:02:08,500 --> 00:02:11,729
25 meters of it

43
00:02:13,680 --> 00:02:18,670
so this is only a<font color="#CCCCCC"> short talk I'm</font><font color="#E5E5E5"> going</font>

44
00:02:17,469 --> 00:02:21,930
<font color="#E5E5E5">to whistle through things we'll take</font>

45
00:02:18,670 --> 00:02:21,929
questions<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the end</font>

46
00:02:22,049 --> 00:02:28,299
broadly<font color="#CCCCCC"> if you want to build</font><font color="#E5E5E5"> FreeBSD you</font>

47
00:02:25,659 --> 00:02:29,319
build your user world<font color="#E5E5E5"> and from that</font>

48
00:02:28,299 --> 00:02:31,780
<font color="#CCCCCC">creator ramdisk</font>

49
00:02:29,319 --> 00:02:33,220
you then build<font color="#E5E5E5"> the kernel and tell it</font>

50
00:02:31,780 --> 00:02:36,640
where to<font color="#E5E5E5"> find the RAM disk</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> it knows</font>

51
00:02:33,220 --> 00:02:38,620
where<font color="#CCCCCC"> to jump</font><font color="#E5E5E5"> to and then in the</font><font color="#CCCCCC"> RISC 5</font>

52
00:02:36,640 --> 00:02:40,750
world we use the<font color="#E5E5E5"> berkeley bootloader</font><font color="#CCCCCC"> a</font>

53
00:02:38,620 --> 00:02:42,579
wrapper<font color="#CCCCCC"> which adds in</font><font color="#E5E5E5"> the device tree</font>

54
00:02:40,750 --> 00:02:44,469
<font color="#E5E5E5">and the result is you have an image</font><font color="#CCCCCC"> to</font>

55
00:02:42,579 --> 00:02:46,629
load and you can then put that<font color="#E5E5E5"> on</font><font color="#CCCCCC"> your</font>

56
00:02:44,469 --> 00:02:48,430
<font color="#CCCCCC">sdcard plug it in to your</font><font color="#E5E5E5"> high</font><font color="#CCCCCC"> v</font>

57
00:02:46,629 --> 00:02:51,668
<font color="#E5E5E5">unleashed and in</font><font color="#CCCCCC"> principle it all works</font>

58
00:02:48,430 --> 00:02:54,159
<font color="#E5E5E5">and</font><font color="#CCCCCC"> to build that</font><font color="#E5E5E5"> we have a compiler</font>

59
00:02:51,669 --> 00:02:58,799
tool chain<font color="#E5E5E5"> clang LOV</font><font color="#CCCCCC"> m which is the</font>

60
00:02:54,159 --> 00:03:01,418
default compiler usually for<font color="#CCCCCC"> FreeBSD</font>

61
00:02:58,799 --> 00:03:03,639
typically sitting on ganoub in utils and

62
00:03:01,419 --> 00:03:05,079
the canoe debugger<font color="#E5E5E5"> and if you're a</font>

63
00:03:03,639 --> 00:03:07,090
<font color="#E5E5E5">deeply embedded you really want it</font><font color="#CCCCCC"> to</font>

64
00:03:05,079 --> 00:03:11,379
use it as a remote debugger running gdb

65
00:03:07,090 --> 00:03:13,450
server and you need at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> very least</font><font color="#E5E5E5"> C</font>

66
00:03:11,379 --> 00:03:15,989
libraries probably C++ but certainly C

67
00:03:13,450 --> 00:03:18,459
libraries those come from<font color="#E5E5E5"> FreeBSD and</font>

68
00:03:15,989 --> 00:03:23,079
we'll see why there are some issues

69
00:03:18,459 --> 00:03:25,690
<font color="#E5E5E5">around that in a minute and we took this</font>

70
00:03:23,079 --> 00:03:28,000
project<font color="#CCCCCC"> in incremental stages the</font><font color="#E5E5E5"> first</font>

71
00:03:25,690 --> 00:03:29,978
thing was<font color="#CCCCCC"> to make sure we can reproduce</font>

72
00:03:28,000 --> 00:03:32,019
what the suppliers do with the board so

73
00:03:29,979 --> 00:03:34,419
if you get the<font color="#CCCCCC"> high-five unleashed</font><font color="#E5E5E5"> it</font>

74
00:03:32,019 --> 00:03:38,560
comes with a canoe Linux system on it

75
00:03:34,419 --> 00:03:40,870
and built with GCC<font color="#CCCCCC"> and the first thing</font>

76
00:03:38,560 --> 00:03:42,159
is to<font color="#CCCCCC"> make sure</font><font color="#E5E5E5"> you can rebuild that and</font>

77
00:03:40,870 --> 00:03:44,409
do<font color="#E5E5E5"> that that's nothing</font><font color="#CCCCCC"> to do with</font>

78
00:03:42,159 --> 00:03:45,638
FreeBSD that's just checking that what

79
00:03:44,409 --> 00:03:47,500
you've got on the board works and

80
00:03:45,639 --> 00:03:49,209
there's a<font color="#E5E5E5"> certain amount of</font><font color="#CCCCCC"> hoo-ha</font><font color="#E5E5E5"> just</font>

81
00:03:47,500 --> 00:03:50,769
getting that to<font color="#E5E5E5"> work but we found fairly</font>

82
00:03:49,209 --> 00:03:53,019
<font color="#E5E5E5">straightforward</font><font color="#CCCCCC"> did the first day we</font>

83
00:03:50,769 --> 00:03:54,849
<font color="#CCCCCC">were able</font><font color="#E5E5E5"> to get</font><font color="#CCCCCC"> linux built from source</font>

84
00:03:53,019 --> 00:03:57,459
<font color="#E5E5E5">and put back on</font><font color="#CCCCCC"> the board</font><font color="#E5E5E5"> and it's still</font>

85
00:03:54,849 --> 00:03:59,668
behaved<font color="#E5E5E5"> like when it arrived with us the</font>

86
00:03:57,459 --> 00:04:03,159
<font color="#E5E5E5">next stage then is to try</font><font color="#CCCCCC"> to bring up</font>

87
00:03:59,669 --> 00:04:05,439
<font color="#CCCCCC">FreeBSD</font><font color="#E5E5E5"> but we did that with GCC and the</font>

88
00:04:03,159 --> 00:04:08,769
reason<font color="#E5E5E5"> for that is</font><font color="#CCCCCC"> that the LLVM</font><font color="#E5E5E5"> for</font>

89
00:04:05,439 --> 00:04:10,299
<font color="#CCCCCC">RISC five</font><font color="#E5E5E5"> 64-bit is very very new and we</font>

90
00:04:08,769 --> 00:04:12,040
didn't want<font color="#CCCCCC"> to be fighting</font><font color="#E5E5E5"> compiler</font>

91
00:04:10,299 --> 00:04:16,570
issues<font color="#E5E5E5"> while we're trying to bring up</font>

92
00:04:12,040 --> 00:04:18,250
the kernel<font color="#E5E5E5"> and so we</font><font color="#CCCCCC"> stole all</font><font color="#E5E5E5"> started</font>

93
00:04:16,570 --> 00:04:20,680
with<font color="#E5E5E5"> GCC and once we brought the kernel</font>

94
00:04:18,250 --> 00:04:23,139
working at least<font color="#E5E5E5"> on</font><font color="#CCCCCC"> QEMU then we could</font>

95
00:04:20,680 --> 00:04:25,389
switch<font color="#E5E5E5"> over to LLVM</font><font color="#CCCCCC"> and check it all</font>

96
00:04:23,139 --> 00:04:26,740
works<font color="#E5E5E5"> and so that's the loop we did for</font>

97
00:04:25,389 --> 00:04:29,289
64-bit

98
00:04:26,740 --> 00:04:31,900
five<font color="#E5E5E5"> and then when we're going around it</font>

99
00:04:29,289 --> 00:04:37,180
all again for<font color="#CCCCCC"> 32-bit so we're on 32-bit</font>

100
00:04:31,900 --> 00:04:38,318
<font color="#E5E5E5">risc five LLVM and</font><font color="#CCCCCC"> so forth so what</font>

101
00:04:37,180 --> 00:04:41,280
<font color="#E5E5E5">could possibly go</font><font color="#CCCCCC"> wrong</font>

102
00:04:38,319 --> 00:04:44,380
<font color="#E5E5E5">FreeBSD</font><font color="#CCCCCC"> has already been ported to the</font>

103
00:04:41,280 --> 00:04:45,909
64-bit RISC<font color="#E5E5E5"> five thank you to Ruslan</font>

104
00:04:44,380 --> 00:04:47,440
<font color="#CCCCCC">Buchan who kicked off the project at</font>

105
00:04:45,910 --> 00:04:50,590
<font color="#E5E5E5">Cambridge</font><font color="#CCCCCC"> University and others who</font>

106
00:04:47,440 --> 00:04:53,949
since contributed and clang<font color="#CCCCCC"> LVM is the</font>

107
00:04:50,590 --> 00:04:55,448
FreeBSD default chain so<font color="#CCCCCC"> that ought to</font>

108
00:04:53,949 --> 00:05:00,550
<font color="#E5E5E5">be fine and thank you to people who've</font>

109
00:04:55,449 --> 00:05:03,490
worked on that<font color="#CCCCCC"> for risk 5 but what could</font>

110
00:05:00,550 --> 00:05:05,620
possibly<font color="#CCCCCC"> go wrong well like all things</font>

111
00:05:03,490 --> 00:05:07,270
you develop something<font color="#E5E5E5"> you document it</font>

112
00:05:05,620 --> 00:05:09,099
<font color="#CCCCCC">roost and did a good job and then</font>

113
00:05:07,270 --> 00:05:12,159
someone picks that up and finds all the

114
00:05:09,099 --> 00:05:14,469
<font color="#E5E5E5">things you didn't quite right in the</font>

115
00:05:12,159 --> 00:05:15,909
documentation<font color="#E5E5E5"> the documentation as you'd</font>

116
00:05:14,470 --> 00:05:18,130
expect<font color="#E5E5E5"> for something that's developing</font>

117
00:05:15,909 --> 00:05:20,110
works with<font color="#CCCCCC"> heads but quite often head</font>

118
00:05:18,130 --> 00:05:22,270
isn't<font color="#CCCCCC"> gonna work straightaway so</font>

119
00:05:20,110 --> 00:05:24,240
actually if you can start<font color="#E5E5E5"> my first</font>

120
00:05:22,270 --> 00:05:26,979
sketch start from a stable<font color="#E5E5E5"> point um</font>

121
00:05:24,240 --> 00:05:28,690
<font color="#E5E5E5">there was no things it validated the</font>

122
00:05:26,979 --> 00:05:29,949
users against the build machine and<font color="#E5E5E5"> our</font>

123
00:05:28,690 --> 00:05:31,479
build machine and the actual machine

124
00:05:29,949 --> 00:05:34,599
<font color="#CCCCCC">we're building</font><font color="#E5E5E5"> for our different and</font>

125
00:05:31,479 --> 00:05:36,669
<font color="#E5E5E5">that didn't work</font><font color="#CCCCCC"> and and it used the</font>

126
00:05:34,599 --> 00:05:38,169
<font color="#E5E5E5">machine user</font><font color="#CCCCCC"> based</font><font color="#E5E5E5"> database rather than</font>

127
00:05:36,669 --> 00:05:40,570
the<font color="#E5E5E5"> target</font><font color="#CCCCCC"> database to build the file</font>

128
00:05:38,169 --> 00:05:41,830
image<font color="#E5E5E5"> and those when it those were</font>

129
00:05:40,570 --> 00:05:46,030
corrected and those are fairly<font color="#CCCCCC"> trivial</font>

130
00:05:41,830 --> 00:05:48,159
things fires up runs multi-core<font color="#E5E5E5"> FreeBSD</font>

131
00:05:46,030 --> 00:05:50,590
on<font color="#CCCCCC"> qmu and that was early station an</font>

132
00:05:48,159 --> 00:05:56,229
early win we've got<font color="#CCCCCC"> FreeBSD running on</font>

133
00:05:50,590 --> 00:05:59,020
risk<font color="#CCCCCC"> five on QEMU but then we put</font><font color="#E5E5E5"> it on</font>

134
00:05:56,229 --> 00:06:00,520
the high<font color="#E5E5E5"> five</font><font color="#CCCCCC"> Unleashed board and it</font>

135
00:05:59,020 --> 00:06:03,159
didn't work<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the reason</font><font color="#CCCCCC"> it's those</font>

136
00:06:00,520 --> 00:06:06,750
<font color="#E5E5E5">five cause the</font><font color="#CCCCCC"> cpu zero is this funny</font>

137
00:06:03,159 --> 00:06:09,699
<font color="#E5E5E5">controller core the e51 not the u54 and</font>

138
00:06:06,750 --> 00:06:12,069
that starts<font color="#E5E5E5"> up the system then goes and</font>

139
00:06:09,699 --> 00:06:14,259
masks it sells<font color="#E5E5E5"> out and goes away</font><font color="#CCCCCC"> so we</font>

140
00:06:12,069 --> 00:06:16,900
had to modify<font color="#CCCCCC"> the</font><font color="#E5E5E5"> freebsd systems to not</font>

141
00:06:14,259 --> 00:06:20,020
assume it was running<font color="#E5E5E5"> on</font><font color="#CCCCCC"> CP</font><font color="#E5E5E5"> u zero and</font>

142
00:06:16,900 --> 00:06:25,840
with that fixed<font color="#CCCCCC"> up the high five on this</font>

143
00:06:20,020 --> 00:06:27,580
<font color="#E5E5E5">board</font><font color="#CCCCCC"> came and it booted single core so</font>

144
00:06:25,840 --> 00:06:31,270
now we've got<font color="#CCCCCC"> our prototype system</font>

145
00:06:27,580 --> 00:06:33,370
working<font color="#E5E5E5"> but then we</font><font color="#CCCCCC"> ran into</font><font color="#E5E5E5"> problems</font>

146
00:06:31,270 --> 00:06:35,770
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is where we're still working on</font>

147
00:06:33,370 --> 00:06:39,250
multi-core boot<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> work when we try</font>

148
00:06:35,770 --> 00:06:40,870
<font color="#E5E5E5">and bring up for cause it usually</font>

149
00:06:39,250 --> 00:06:44,589
<font color="#E5E5E5">doesn't work except sometimes it does</font>

150
00:06:40,870 --> 00:06:49,150
sometimes<font color="#E5E5E5"> it boots</font><font color="#CCCCCC"> and it works and the</font>

151
00:06:44,589 --> 00:06:51,430
reason<font color="#CCCCCC"> is there are four cores on the PI</font>

152
00:06:49,150 --> 00:06:54,279
<font color="#CCCCCC">5</font><font color="#E5E5E5"> unleashed and the</font><font color="#CCCCCC"> order in which they</font>

153
00:06:51,430 --> 00:06:56,199
decide to come up is random<font color="#E5E5E5"> and it's</font>

154
00:06:54,279 --> 00:06:58,419
only if they<font color="#E5E5E5"> come up in one particular</font>

155
00:06:56,199 --> 00:07:00,400
<font color="#E5E5E5">order does it seem to work that seems to</font>

156
00:06:58,419 --> 00:07:06,460
be<font color="#E5E5E5"> best if</font><font color="#CCCCCC"> you left the Machine switched</font>

157
00:07:00,400 --> 00:07:08,109
off for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> while and then it starts so we</font>

158
00:07:06,460 --> 00:07:10,419
need to insert<font color="#CCCCCC"> we're in the process of</font>

159
00:07:08,110 --> 00:07:12,009
<font color="#E5E5E5">working on an abstraction layer to try</font>

160
00:07:10,419 --> 00:07:13,810
and map the<font color="#E5E5E5"> CPUs to</font><font color="#CCCCCC"> come up in a</font>

161
00:07:12,009 --> 00:07:17,680
consistent order at least<font color="#CCCCCC"> as far as</font><font color="#E5E5E5"> the</font>

162
00:07:13,810 --> 00:07:19,180
operating<font color="#E5E5E5"> system sees them</font><font color="#CCCCCC"> and as far as</font>

163
00:07:17,680 --> 00:07:20,800
we've done<font color="#E5E5E5"> the</font><font color="#CCCCCC"> debugging and this is</font>

164
00:07:19,180 --> 00:07:22,930
where it becomes clear this is<font color="#CCCCCC"> the first</font>

165
00:07:20,800 --> 00:07:25,419
time we've tried<font color="#CCCCCC"> to do free as FreeBSD</font>

166
00:07:22,930 --> 00:07:27,009
this seems to be<font color="#CCCCCC"> a problem</font><font color="#E5E5E5"> with the</font>

167
00:07:25,419 --> 00:07:28,719
enabling of interrupts<font color="#E5E5E5"> and</font><font color="#CCCCCC"> its</font>

168
00:07:27,009 --> 00:07:30,130
connection when the interrupts come live

169
00:07:28,719 --> 00:07:32,320
that's when things go horribly wrong

170
00:07:30,130 --> 00:07:34,149
<font color="#E5E5E5">that's a work in progress</font><font color="#CCCCCC"> I had hoped</font>

171
00:07:32,320 --> 00:07:35,440
that I will be<font color="#CCCCCC"> announcing it's all</font>

172
00:07:34,149 --> 00:07:37,800
working<font color="#CCCCCC"> by the time we</font><font color="#E5E5E5"> got here today</font>

173
00:07:35,440 --> 00:07:40,779
<font color="#E5E5E5">but we haven't</font><font color="#CCCCCC"> quite</font><font color="#E5E5E5"> got there yet</font>

174
00:07:37,800 --> 00:07:42,039
but we've<font color="#CCCCCC"> still got a prototype</font><font color="#E5E5E5"> Hardware</font>

175
00:07:40,779 --> 00:07:45,310
working on a single core and<font color="#CCCCCC"> that's</font>

176
00:07:42,039 --> 00:07:46,930
quite good<font color="#E5E5E5"> for a lot of</font><font color="#CCCCCC"> things but the</font>

177
00:07:45,310 --> 00:07:47,949
actual bigger thing was and why we

178
00:07:46,930 --> 00:07:49,149
originally<font color="#CCCCCC"> got involved</font><font color="#E5E5E5"> with this</font>

179
00:07:47,949 --> 00:07:53,409
<font color="#E5E5E5">project because our</font><font color="#CCCCCC"> reputation as a</font>

180
00:07:49,149 --> 00:07:56,139
compiler company for clang<font color="#E5E5E5"> LLVM and we</font>

181
00:07:53,409 --> 00:07:57,940
do GCC as well we didn't both and the

182
00:07:56,139 --> 00:07:59,649
problem we had is<font color="#CCCCCC"> that we were</font><font color="#E5E5E5"> asked</font><font color="#CCCCCC"> to</font>

183
00:07:57,940 --> 00:08:01,990
start on this project<font color="#E5E5E5"> at the end of</font>

184
00:07:59,649 --> 00:08:04,960
October which was when<font color="#E5E5E5"> the first patches</font>

185
00:08:01,990 --> 00:08:08,620
<font color="#E5E5E5">for clang</font><font color="#CCCCCC"> LLVM for 64-bit RISC 5 were</font>

186
00:08:04,960 --> 00:08:10,570
actually published<font color="#E5E5E5"> um</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> were trying</font>

187
00:08:08,620 --> 00:08:13,509
<font color="#CCCCCC">to not just work with a clang that</font>

188
00:08:10,570 --> 00:08:15,310
wasn't ready<font color="#E5E5E5"> it was</font><font color="#CCCCCC"> brand-new and</font><font color="#E5E5E5"> we</font>

189
00:08:13,509 --> 00:08:16,870
<font color="#E5E5E5">actually had</font><font color="#CCCCCC"> to submit</font><font color="#E5E5E5"> seven patches</font>

190
00:08:15,310 --> 00:08:20,440
<font color="#CCCCCC">just to get a clang that</font><font color="#E5E5E5"> would actually</font>

191
00:08:16,870 --> 00:08:22,690
build<font color="#E5E5E5"> freebsd a</font><font color="#CCCCCC"> pc-relative</font><font color="#E5E5E5"> addressing</font>

192
00:08:20,440 --> 00:08:25,120
wasn't working position<font color="#E5E5E5"> independent code</font>

193
00:08:22,690 --> 00:08:27,789
<font color="#E5E5E5">wasn't working thread local storage</font>

194
00:08:25,120 --> 00:08:30,490
<font color="#E5E5E5">wasn't working so</font><font color="#CCCCCC"> that got us to the</font>

195
00:08:27,789 --> 00:08:31,870
stage<font color="#E5E5E5"> 'we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> build since then my</font>

196
00:08:30,490 --> 00:08:33,490
colleague<font color="#CCCCCC"> luis revel who's actually</font>

197
00:08:31,870 --> 00:08:35,110
sitting<font color="#E5E5E5"> in the risk</font><font color="#CCCCCC"> 5 dev room at the</font>

198
00:08:33,490 --> 00:08:37,000
moment<font color="#CCCCCC"> who's not</font><font color="#E5E5E5"> here because</font><font color="#CCCCCC"> this</font>

199
00:08:35,110 --> 00:08:38,500
relates to<font color="#E5E5E5"> risk 5 as well has submitted</font>

200
00:08:37,000 --> 00:08:41,860
another<font color="#E5E5E5"> nine patches so we've had to put</font>

201
00:08:38,500 --> 00:08:43,539
<font color="#CCCCCC">16 patches up there</font><font color="#E5E5E5"> we think there's one</font>

202
00:08:41,860 --> 00:08:45,010
bug left well there's one thing<font color="#CCCCCC"> we</font><font color="#E5E5E5"> think</font>

203
00:08:43,539 --> 00:08:48,160
that's<font color="#E5E5E5"> not working</font><font color="#CCCCCC"> we hope it's just one</font>

204
00:08:45,010 --> 00:08:49,780
bug but<font color="#E5E5E5"> actually this has been a great</font>

205
00:08:48,160 --> 00:08:51,939
driver and thank you to the customer

206
00:08:49,780 --> 00:08:52,689
who's paid for this work because these

207
00:08:51,939 --> 00:08:53,980
open<font color="#CCCCCC"> source port</font>

208
00:08:52,690 --> 00:08:56,110
it's<font color="#E5E5E5"> often rely on people actually</font>

209
00:08:53,980 --> 00:08:58,750
<font color="#E5E5E5">paying us to do the work um</font>

210
00:08:56,110 --> 00:09:05,740
64-bit<font color="#E5E5E5"> RISC</font><font color="#CCCCCC"> five LLVM has actually</font>

211
00:08:58,750 --> 00:09:07,960
progressed incredibly fast<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we've got</font>

212
00:09:05,740 --> 00:09:10,330
it all<font color="#E5E5E5"> compiling the compiler seemed to</font>

213
00:09:07,960 --> 00:09:12,640
be<font color="#E5E5E5"> pretty much good and it still would</font>

214
00:09:10,330 --> 00:09:14,770
<font color="#CCCCCC">not run and the reason came down to</font>

215
00:09:12,640 --> 00:09:16,750
compiler RT<font color="#CCCCCC"> now for</font><font color="#E5E5E5"> those of you don't</font>

216
00:09:14,770 --> 00:09:20,680
know compiler RT is the<font color="#CCCCCC"> low-level</font>

217
00:09:16,750 --> 00:09:22,090
emulation library for<font color="#CCCCCC"> LLVM okay</font><font color="#E5E5E5"> so if</font>

218
00:09:20,680 --> 00:09:24,370
you don't have hardware floating-point

219
00:09:22,090 --> 00:09:26,590
<font color="#E5E5E5">you do it in emulation and you do it in</font>

220
00:09:24,370 --> 00:09:28,810
compiler RT and<font color="#E5E5E5"> RISC fires quite clever</font>

221
00:09:26,590 --> 00:09:30,700
<font color="#E5E5E5">if you've got a machine that</font><font color="#CCCCCC"> doesn't</font>

222
00:09:28,810 --> 00:09:32,260
have<font color="#CCCCCC"> hardware floating-point</font><font color="#E5E5E5"> what it</font>

223
00:09:30,700 --> 00:09:35,080
generates<font color="#CCCCCC"> is</font><font color="#E5E5E5"> hardware floating-point</font>

224
00:09:32,260 --> 00:09:36,939
instructions<font color="#CCCCCC"> and they</font><font color="#E5E5E5"> cause a trap which</font>

225
00:09:35,080 --> 00:09:39,280
goes into capital R T and then<font color="#E5E5E5"> you</font>

226
00:09:36,940 --> 00:09:41,890
<font color="#CCCCCC">emulate them the problem was that</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of</font>

227
00:09:39,280 --> 00:09:43,150
the compiler<font color="#CCCCCC"> RT programs</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> doing</font>

228
00:09:41,890 --> 00:09:45,400
the emulation had hardware

229
00:09:43,150 --> 00:09:47,020
floating-point instructions in it<font color="#E5E5E5"> so</font>

230
00:09:45,400 --> 00:09:50,560
promptly trapped and called itself<font color="#E5E5E5"> again</font>

231
00:09:47,020 --> 00:09:51,550
<font color="#CCCCCC">and shortly</font><font color="#E5E5E5"> after this blew up once we'd</font>

232
00:09:50,560 --> 00:09:52,510
<font color="#CCCCCC">realized what</font><font color="#E5E5E5"> the bond with it was</font>

233
00:09:51,550 --> 00:09:56,349
fairly easy<font color="#E5E5E5"> to fix</font>

234
00:09:52,510 --> 00:09:59,290
<font color="#CCCCCC">ok and when we get that</font><font color="#E5E5E5"> there</font>

235
00:09:56,350 --> 00:10:01,060
then<font color="#CCCCCC"> freebsd runs quite far quite well</font>

236
00:09:59,290 --> 00:10:04,300
<font color="#CCCCCC">you can fire it</font><font color="#E5E5E5"> up it boots up and it</font>

237
00:10:01,060 --> 00:10:06,520
all works nicely but<font color="#E5E5E5"> after about 10</font>

238
00:10:04,300 --> 00:10:08,859
<font color="#CCCCCC">minutes</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> it tends to lock up and</font>

239
00:10:06,520 --> 00:10:10,180
it's a kernel issue<font color="#E5E5E5"> there's something</font>

240
00:10:08,860 --> 00:10:11,380
with the<font color="#E5E5E5"> compiler and the kernel doesn't</font>

241
00:10:10,180 --> 00:10:13,150
<font color="#E5E5E5">work because you can build the kernel</font>

242
00:10:11,380 --> 00:10:16,510
with GCC and everything else with<font color="#E5E5E5"> LLVM</font>

243
00:10:13,150 --> 00:10:17,650
and<font color="#CCCCCC"> it all works just fine ok</font><font color="#E5E5E5"> so there's</font>

244
00:10:16,510 --> 00:10:20,590
an error we think there's no<font color="#CCCCCC"> LLVM</font>

245
00:10:17,650 --> 00:10:23,670
compiler bug<font color="#E5E5E5"> possibly it's a kernel bug</font>

246
00:10:20,590 --> 00:10:26,620
that<font color="#CCCCCC"> LLVM is</font><font color="#E5E5E5"> technically correct but</font>

247
00:10:23,670 --> 00:10:28,959
only<font color="#CCCCCC"> LLVM expose so we're still</font><font color="#E5E5E5"> trying</font>

248
00:10:26,620 --> 00:10:31,690
to<font color="#E5E5E5"> track</font><font color="#CCCCCC"> that down</font><font color="#E5E5E5"> three to five</font><font color="#CCCCCC"> days</font>

249
00:10:28,960 --> 00:10:33,640
more work we think now those those

250
00:10:31,690 --> 00:10:35,400
awkward compiler bugs can<font color="#E5E5E5"> take a bit of</font>

251
00:10:33,640 --> 00:10:39,430
<font color="#E5E5E5">tracking so we've got to fix that</font>

252
00:10:35,400 --> 00:10:42,040
<font color="#CCCCCC">ok so so</font><font color="#E5E5E5"> far</font><font color="#CCCCCC"> so good we've got a</font>

253
00:10:39,430 --> 00:10:43,510
compiler<font color="#CCCCCC"> it more</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> less</font><font color="#E5E5E5"> works with</font><font color="#CCCCCC"> LLVM</font>

254
00:10:42,040 --> 00:10:45,310
but we've got a bug to fix but

255
00:10:43,510 --> 00:10:48,610
everything else outside<font color="#E5E5E5"> the kernel works</font>

256
00:10:45,310 --> 00:10:53,219
with<font color="#CCCCCC"> LLVM</font><font color="#E5E5E5"> and it runs</font><font color="#CCCCCC"> ok one core on a</font>

257
00:10:48,610 --> 00:10:53,220
<font color="#CCCCCC">free bond</font><font color="#E5E5E5"> on a particular hardware board</font>

258
00:10:53,400 --> 00:10:57,730
but we're<font color="#E5E5E5"> not in the business of hey it</font>

259
00:10:56,500 --> 00:10:59,230
sort of works we're actually<font color="#CCCCCC"> into</font>

260
00:10:57,730 --> 00:11:01,120
serious professional development<font color="#E5E5E5"> that's</font>

261
00:10:59,230 --> 00:11:04,390
what<font color="#CCCCCC"> we're paid for so we want to test</font>

262
00:11:01,120 --> 00:11:06,190
and cure is<font color="#E5E5E5"> the FreeBSD test system and</font>

263
00:11:04,390 --> 00:11:08,590
one thing we found with cure it really

264
00:11:06,190 --> 00:11:12,040
doesn't build<font color="#CCCCCC"> cross-compile build</font><font color="#E5E5E5"> it</font>

265
00:11:08,590 --> 00:11:15,250
expects to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> built native so we had to</font>

266
00:11:12,040 --> 00:11:17,709
<font color="#E5E5E5">create a compiler tool chain to run on</font>

267
00:11:15,250 --> 00:11:19,120
the actual<font color="#CCCCCC"> qemu so we had to build</font><font color="#E5E5E5"> it so</font>

268
00:11:17,710 --> 00:11:21,700
we can cross compile to compile the tool

269
00:11:19,120 --> 00:11:24,700
chain and then we had to run that<font color="#E5E5E5"> GCC</font>

270
00:11:21,700 --> 00:11:27,070
compiler on<font color="#E5E5E5"> qmu emulating</font><font color="#CCCCCC"> RISC 5 to</font>

271
00:11:24,700 --> 00:11:29,950
build cure now cure is quite big<font color="#E5E5E5"> the</font>

272
00:11:27,070 --> 00:11:31,870
<font color="#CCCCCC">RISC 5 emulation is quite slow and so we</font>

273
00:11:29,950 --> 00:11:35,440
had<font color="#E5E5E5"> to leave it several days that binary</font>

274
00:11:31,870 --> 00:11:37,330
<font color="#E5E5E5">is now built it is many copies</font><font color="#CCCCCC"> it is</font>

275
00:11:35,440 --> 00:11:39,010
locked<font color="#E5E5E5"> away in a</font><font color="#CCCCCC"> vault in one copy so we</font>

276
00:11:37,330 --> 00:11:40,870
<font color="#CCCCCC">don't lose that binary we do not want to</font>

277
00:11:39,010 --> 00:11:43,900
have to build<font color="#E5E5E5"> it again but the great</font>

278
00:11:40,870 --> 00:11:46,300
<font color="#CCCCCC">thing is we now have cure running and we</font>

279
00:11:43,900 --> 00:11:48,220
can do nightly testing<font color="#E5E5E5"> and it takes</font>

280
00:11:46,300 --> 00:11:50,560
about five and<font color="#E5E5E5"> a half hours in emulation</font>

281
00:11:48,220 --> 00:11:52,360
<font color="#E5E5E5">on a</font><font color="#CCCCCC"> twenty cause Eon server</font><font color="#E5E5E5"> but that</font>

282
00:11:50,560 --> 00:11:54,400
doesn't<font color="#E5E5E5"> matter because we're asleep at</font>

283
00:11:52,360 --> 00:11:56,820
that time it can go away warming up the

284
00:11:54,400 --> 00:11:59,949
<font color="#CCCCCC">Machine room and we can nightly test and</font>

285
00:11:56,820 --> 00:12:05,710
that's<font color="#E5E5E5"> good</font><font color="#CCCCCC"> there are bugs to fix but</font>

286
00:11:59,950 --> 00:12:10,830
broadly<font color="#E5E5E5"> freebsd is working ok so what</font>

287
00:12:05,710 --> 00:12:14,230
else could go<font color="#CCCCCC"> wrong and the answer is</font>

288
00:12:10,830 --> 00:12:17,110
debug<font color="#E5E5E5"> so at the moment</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> to debug</font>

289
00:12:14,230 --> 00:12:18,250
by putting gdb<font color="#E5E5E5"> on the target and gdb</font>

290
00:12:17,110 --> 00:12:21,040
works fine on<font color="#E5E5E5"> for you</font>

291
00:12:18,250 --> 00:12:22,690
<font color="#E5E5E5">freebsd but that does presume on a</font>

292
00:12:21,040 --> 00:12:24,730
deeply<font color="#E5E5E5"> embedded target one we have a</font>

293
00:12:22,690 --> 00:12:26,890
<font color="#E5E5E5">fairly fully featured</font><font color="#CCCCCC"> freebsd and</font>

294
00:12:24,730 --> 00:12:28,720
secondly<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> have the sort of</font>

295
00:12:26,890 --> 00:12:30,819
console where<font color="#CCCCCC"> I can sit there and</font><font color="#E5E5E5"> it'll</font>

296
00:12:28,720 --> 00:12:35,530
<font color="#E5E5E5">put up a something I can browse on and</font>

297
00:12:30,820 --> 00:12:36,970
<font color="#E5E5E5">and so forth and for</font><font color="#CCCCCC"> a deeply</font><font color="#E5E5E5"> embedded</font>

298
00:12:35,530 --> 00:12:39,040
system particularly in a secure

299
00:12:36,970 --> 00:12:40,900
application which<font color="#E5E5E5"> this is you tend to</font>

300
00:12:39,040 --> 00:12:45,099
<font color="#E5E5E5">not want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have more on there than</font><font color="#CCCCCC"> you</font>

301
00:12:40,900 --> 00:12:46,510
actually need<font color="#E5E5E5"> and that's why for</font>

302
00:12:45,100 --> 00:12:49,360
embedded systems<font color="#CCCCCC"> you have a</font><font color="#E5E5E5"> program</font>

303
00:12:46,510 --> 00:12:50,950
called gdb server and gdb server runs on

304
00:12:49,360 --> 00:12:52,930
Linux and<font color="#E5E5E5"> it runs on link sauce and it</font>

305
00:12:50,950 --> 00:12:55,960
<font color="#E5E5E5">runs on one or two other things and it</font>

306
00:12:52,930 --> 00:12:59,859
used to<font color="#CCCCCC"> run</font><font color="#E5E5E5"> on FreeBSD but no one's run</font>

307
00:12:55,960 --> 00:13:02,140
gdb server on<font color="#CCCCCC"> FreeBSD for a long time</font>

308
00:12:59,860 --> 00:13:03,760
and when you run gdb server then that

309
00:13:02,140 --> 00:13:05,199
small<font color="#CCCCCC"> little program which doesn't</font><font color="#E5E5E5"> need</font>

310
00:13:03,760 --> 00:13:07,210
much operating system resource runs on

311
00:13:05,200 --> 00:13:10,810
your<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> and you connect via a serial</font>

312
00:13:07,210 --> 00:13:12,700
line or a<font color="#E5E5E5"> tcp/ip so gdb proper running</font>

313
00:13:10,810 --> 00:13:14,410
on a<font color="#E5E5E5"> workstation somewhere else and</font>

314
00:13:12,700 --> 00:13:20,020
<font color="#E5E5E5">that's the standard way to</font><font color="#CCCCCC"> debug</font><font color="#E5E5E5"> an</font>

315
00:13:14,410 --> 00:13:22,390
embedded system and the codes been taken

316
00:13:20,020 --> 00:13:24,310
so actually we're in the process<font color="#CCCCCC"> of</font>

317
00:13:22,390 --> 00:13:26,949
rebuilding<font color="#E5E5E5"> gdb server</font>

318
00:13:24,310 --> 00:13:28,839
reconstructing<font color="#E5E5E5"> it for gdb it will be a</font>

319
00:13:26,950 --> 00:13:32,940
new better gdb server because it will

320
00:13:28,840 --> 00:13:35,500
reuse all the<font color="#E5E5E5"> FreeBSD from native gdb</font>

321
00:13:32,940 --> 00:13:38,860
<font color="#E5E5E5">and there's two parts that one is to get</font>

322
00:13:35,500 --> 00:13:41,980
it working<font color="#E5E5E5"> for x86</font><font color="#CCCCCC"> and then we will pour</font>

323
00:13:38,860 --> 00:13:44,920
that to risk<font color="#CCCCCC"> 5</font><font color="#E5E5E5"> that's a few weeks work</font>

324
00:13:41,980 --> 00:13:46,060
<font color="#E5E5E5">and because it's not critical to bring</font>

325
00:13:44,920 --> 00:13:47,890
up<font color="#CCCCCC"> this</font><font color="#E5E5E5"> project which is</font><font color="#CCCCCC"> on quite a</font>

326
00:13:46,060 --> 00:13:49,180
<font color="#E5E5E5">tight timescale it won't happen till</font>

327
00:13:47,890 --> 00:13:51,490
later<font color="#E5E5E5"> in the year we do need it</font>

328
00:13:49,180 --> 00:13:54,280
<font color="#CCCCCC">eventually</font><font color="#E5E5E5"> we can live with native gdb</font>

329
00:13:51,490 --> 00:13:59,200
<font color="#E5E5E5">for the short term</font><font color="#CCCCCC"> so that's the</font><font color="#E5E5E5"> last</font>

330
00:13:54,280 --> 00:14:01,839
thing that we had<font color="#E5E5E5"> to fix so where are we</font>

331
00:13:59,200 --> 00:14:04,480
the answer is we can run embedded

332
00:14:01,840 --> 00:14:06,550
<font color="#CCCCCC">freebsd for our v 64 built with LLVM</font>

333
00:14:04,480 --> 00:14:09,310
there's a reference implementation<font color="#E5E5E5"> for</font>

334
00:14:06,550 --> 00:14:11,500
<font color="#E5E5E5">the high</font><font color="#CCCCCC"> 5 unleashed</font><font color="#E5E5E5"> but it has some</font>

335
00:14:09,310 --> 00:14:12,939
limitations<font color="#CCCCCC"> it only works on a</font><font color="#E5E5E5"> single</font>

336
00:14:11,500 --> 00:14:14,830
core on<font color="#E5E5E5"> the high</font><font color="#CCCCCC"> v</font><font color="#E5E5E5"> unleashed and with</font>

337
00:14:12,940 --> 00:14:17,110
<font color="#CCCCCC">Jill still</font><font color="#E5E5E5"> trying to nail that</font><font color="#CCCCCC"> down</font><font color="#E5E5E5"> and</font>

338
00:14:14,830 --> 00:14:19,300
if you're an<font color="#E5E5E5"> expert or want to help us</font>

339
00:14:17,110 --> 00:14:20,830
we're very happy we've got money we can

340
00:14:19,300 --> 00:14:22,689
hire<font color="#CCCCCC"> people to</font><font color="#E5E5E5"> do that so for people</font>

341
00:14:20,830 --> 00:14:24,220
<font color="#CCCCCC">like you know who need to be paid to do</font>

342
00:14:22,690 --> 00:14:25,930
stuff we understand that it's a

343
00:14:24,220 --> 00:14:28,390
perfectly reasonable requirement we<font color="#CCCCCC"> can</font>

344
00:14:25,930 --> 00:14:31,599
do that<font color="#E5E5E5"> um so come and talk to me and</font>

345
00:14:28,390 --> 00:14:33,670
it's unstable<font color="#E5E5E5"> with LLVM and we should</font>

346
00:14:31,600 --> 00:14:34,030
not compile a bug out<font color="#E5E5E5"> in the next week</font>

347
00:14:33,670 --> 00:14:36,790
or two

348
00:14:34,030 --> 00:14:37,750
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to have been</font><font color="#CCCCCC"> able to</font>

349
00:14:36,790 --> 00:14:39,520
say that<font color="#CCCCCC"> the reference implementation</font>

350
00:14:37,750 --> 00:14:41,530
would be available<font color="#E5E5E5"> there I'm afraid</font><font color="#CCCCCC"> I've</font>

351
00:14:39,520 --> 00:14:43,660
been<font color="#E5E5E5"> traveling and it's sitting</font><font color="#CCCCCC"> there</font>

352
00:14:41,530 --> 00:14:45,459
<font color="#E5E5E5">and I haven't actually got it onto</font>

353
00:14:43,660 --> 00:14:48,250
github<font color="#E5E5E5"> where people can help them it</font>

354
00:14:45,460 --> 00:14:50,020
<font color="#E5E5E5">will appear in</font><font color="#CCCCCC"> the next</font><font color="#E5E5E5"> day or</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> if</font>

355
00:14:48,250 --> 00:14:51,790
you<font color="#CCCCCC"> need it please shout at me and</font>

356
00:14:50,020 --> 00:14:53,710
because that will be a motivation<font color="#CCCCCC"> to</font>

357
00:14:51,790 --> 00:14:57,189
make sure we don't<font color="#CCCCCC"> forget to do that ok</font>

358
00:14:53,710 --> 00:15:01,830
<font color="#E5E5E5">so where are we</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> FreeBSD for 32-bit</font>

359
00:14:57,190 --> 00:15:07,960
<font color="#E5E5E5">risc 5 there</font><font color="#CCCCCC"> are a number of issues here</font>

360
00:15:01,830 --> 00:15:09,550
one is that it we have we can't pick up

361
00:15:07,960 --> 00:15:11,230
someone<font color="#E5E5E5"> else's work who's done the hard</font>

362
00:15:09,550 --> 00:15:12,849
bits for us so we're<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> marks</font>

363
00:15:11,230 --> 00:15:15,100
having being plowing through making<font color="#CCCCCC"> sure</font>

364
00:15:12,850 --> 00:15:18,790
<font color="#E5E5E5">all the bits are needed to run on the</font>

365
00:15:15,100 --> 00:15:20,440
the<font color="#E5E5E5"> 32-bit risc 5 and because of the</font>

366
00:15:18,790 --> 00:15:23,490
bunk with<font color="#CCCCCC"> LLVM we thought we'd go with</font>

367
00:15:20,440 --> 00:15:26,080
GCC<font color="#E5E5E5"> and GCC doesn't work because 32-bit</font>

368
00:15:23,490 --> 00:15:28,020
GCC doesn't have an int<font color="#CCCCCC"> one to eight</font>

369
00:15:26,080 --> 00:15:30,310
type and<font color="#CCCCCC"> that's rather baked into</font>

370
00:15:28,020 --> 00:15:32,319
compiler<font color="#E5E5E5"> RT</font>

371
00:15:30,310 --> 00:15:34,449
and GCC doesn't believe it should<font color="#E5E5E5"> be</font>

372
00:15:32,320 --> 00:15:36,250
<font color="#E5E5E5">there and GCC unlike</font><font color="#CCCCCC"> LLVM doesn't have</font>

373
00:15:34,450 --> 00:15:41,380
<font color="#E5E5E5">quite such a fluid view of what types</font>

374
00:15:36,250 --> 00:15:43,720
are<font color="#E5E5E5"> we're working around do we make that</font>

375
00:15:41,380 --> 00:15:45,970
conditional inside compiler RT or do we

376
00:15:43,720 --> 00:15:49,930
<font color="#CCCCCC">just say let's go with</font><font color="#E5E5E5"> LLVM and</font><font color="#CCCCCC"> hope</font><font color="#E5E5E5"> we</font>

377
00:15:45,970 --> 00:15:52,720
fix the bug soon<font color="#CCCCCC"> and the other thing is</font>

378
00:15:49,930 --> 00:15:54,969
we don't actually<font color="#E5E5E5"> have a suitable RV</font><font color="#CCCCCC"> 32</font>

379
00:15:52,720 --> 00:15:57,970
hardware platform we've got a<font color="#E5E5E5"> a software</font>

380
00:15:54,970 --> 00:15:59,470
platform obviously<font color="#CCCCCC"> in QEMU and we're not</font>

381
00:15:57,970 --> 00:16:01,720
quite<font color="#CCCCCC"> sure if anyone's got</font><font color="#E5E5E5"> a good</font>

382
00:15:59,470 --> 00:16:04,390
suggestion of a 32-bit risc<font color="#E5E5E5"> 5 platform</font>

383
00:16:01,720 --> 00:16:06,430
that has an<font color="#E5E5E5"> eye an MMU on it that will</font>

384
00:16:04,390 --> 00:16:09,100
be<font color="#E5E5E5"> good so that's work in progress</font><font color="#CCCCCC"> watch</font>

385
00:16:06,430 --> 00:16:14,650
this space<font color="#E5E5E5"> but we will bring freebsd up</font>

386
00:16:09,100 --> 00:16:21,270
for 32-bit risc<font color="#E5E5E5"> 5 and so that is my</font><font color="#CCCCCC"> talk</font>

387
00:16:14,650 --> 00:16:21,270
it's a whistle-stop tour<font color="#E5E5E5"> questions yes</font>

388
00:16:33,630 --> 00:16:37,960
so the answer is<font color="#E5E5E5"> we certainly have</font>

389
00:16:36,339 --> 00:17:05,650
panics<font color="#CCCCCC"> have you</font><font color="#E5E5E5"> been looking</font><font color="#CCCCCC"> at them</font>

390
00:16:37,960 --> 00:17:08,380
with gdb mark so the question was can<font color="#CCCCCC"> we</font>

391
00:17:05,650 --> 00:17:10,420
for the record<font color="#E5E5E5"> is can we use gdb</font><font color="#CCCCCC"> to look</font>

392
00:17:08,380 --> 00:17:13,179
at core dumps this<font color="#E5E5E5"> has been a problem</font>

393
00:17:10,420 --> 00:17:14,800
with<font color="#E5E5E5"> that on AMD and the answer is we</font>

394
00:17:13,179 --> 00:17:17,860
<font color="#E5E5E5">haven't had to use that yet</font><font color="#CCCCCC"> so we don't</font>

395
00:17:14,800 --> 00:17:21,540
know if<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a problem other</font>

396
00:17:17,859 --> 00:17:21,540
<font color="#E5E5E5">questions yes</font>

397
00:17:25,300 --> 00:17:29,720
so the question is do<font color="#CCCCCC"> we see commercial</font>

398
00:17:27,770 --> 00:17:31,580
<font color="#E5E5E5">interest in a 32-bit version</font><font color="#CCCCCC"> of RISC 5</font>

399
00:17:29,720 --> 00:17:33,500
and the answer is<font color="#E5E5E5"> yes because we're</font>

400
00:17:31,580 --> 00:17:36,949
being paid to<font color="#E5E5E5"> do this work and</font><font color="#CCCCCC"> this</font>

401
00:17:33,500 --> 00:17:39,530
product<font color="#E5E5E5"> and the product</font><font color="#CCCCCC"> we're doing and</font>

402
00:17:36,950 --> 00:17:41,390
it's very<font color="#E5E5E5"> similar to many other risk 5</font>

403
00:17:39,530 --> 00:17:45,110
architectures which is where your core

404
00:17:41,390 --> 00:17:48,470
engine<font color="#E5E5E5"> is are the set of risk 5 64 bits</font>

405
00:17:45,110 --> 00:17:50,899
<font color="#E5E5E5">and sitting alongside you have a 32 bit</font>

406
00:17:48,470 --> 00:17:53,240
<font color="#E5E5E5">sometimes engine doing housekeeping</font><font color="#CCCCCC"> and</font>

407
00:17:50,900 --> 00:17:55,190
<font color="#E5E5E5">maybe doing slow speed networking it may</font>

408
00:17:53,240 --> 00:17:58,160
be doing<font color="#E5E5E5"> time as watchdogs and so forth</font>

409
00:17:55,190 --> 00:18:01,150
like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and that's our set up for</font>

410
00:17:58,160 --> 00:18:03,110
example<font color="#CCCCCC"> used</font><font color="#E5E5E5"> in the low risk project and</font>

411
00:18:01,150 --> 00:18:04,970
commercially<font color="#CCCCCC"> you're probably</font><font color="#E5E5E5"> using</font>

412
00:18:03,110 --> 00:18:07,879
<font color="#CCCCCC">freebsd because you're</font><font color="#E5E5E5"> concerned about</font>

413
00:18:04,970 --> 00:18:09,740
<font color="#CCCCCC">security network performance and if</font>

414
00:18:07,880 --> 00:18:11,720
you're going<font color="#E5E5E5"> to have freebsd on your</font>

415
00:18:09,740 --> 00:18:13,940
main cause you don't<font color="#E5E5E5"> want a different</font>

416
00:18:11,720 --> 00:18:17,000
<font color="#E5E5E5">operating</font><font color="#CCCCCC"> system on your</font><font color="#E5E5E5"> housekeeping</font>

417
00:18:13,940 --> 00:18:18,380
core so you<font color="#E5E5E5"> want freebsd everywhere so</font>

418
00:18:17,000 --> 00:18:21,230
since that's quite a common<font color="#E5E5E5"> architecture</font>

419
00:18:18,380 --> 00:18:24,470
<font color="#E5E5E5">set up I would expect that to</font><font color="#CCCCCC"> be a</font>

420
00:18:21,230 --> 00:18:25,730
requirement<font color="#E5E5E5"> and actually though there</font>

421
00:18:24,470 --> 00:18:29,020
has<font color="#E5E5E5"> been a focus on the risk 5</font>

422
00:18:25,730 --> 00:18:31,670
<font color="#E5E5E5">foundation on 64-bit operating systems</font>

423
00:18:29,020 --> 00:18:33,680
<font color="#E5E5E5">the feedback we get from</font><font color="#CCCCCC"> customers is if</font>

424
00:18:31,670 --> 00:18:36,010
<font color="#CCCCCC">your embedded actually there's still a</font>

425
00:18:33,680 --> 00:18:40,630
lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> use 32-bit there</font>

426
00:18:36,010 --> 00:18:40,629
<font color="#E5E5E5">yeah any more questions</font>

427
00:18:41,410 --> 00:18:44,410
yes

428
00:18:50,670 --> 00:18:54,730
good question the question is is there

429
00:18:53,080 --> 00:18:57,070
an equivalent of gdb server in the<font color="#CCCCCC"> LLVM</font>

430
00:18:54,730 --> 00:19:00,040
<font color="#E5E5E5">project the equivalent to gdb and L of M</font>

431
00:18:57,070 --> 00:19:02,800
is<font color="#E5E5E5"> L LD B and we get asked about it the</font>

432
00:19:00,040 --> 00:19:04,960
<font color="#E5E5E5">whole time there are things that LD</font><font color="#CCCCCC"> B</font>

433
00:19:02,800 --> 00:19:08,139
does quite well like native debugging on

434
00:19:04,960 --> 00:19:11,170
<font color="#CCCCCC">x86 and to some extent on arm for apple</font>

435
00:19:08,140 --> 00:19:14,620
core you can<font color="#CCCCCC"> do remote</font><font color="#E5E5E5"> dougie debugging</font>

436
00:19:11,170 --> 00:19:16,179
with<font color="#CCCCCC"> L LD be we keep on looking at it</font>

437
00:19:14,620 --> 00:19:19,090
<font color="#CCCCCC">because we'd really like to</font><font color="#E5E5E5"> be able to</font>

438
00:19:16,179 --> 00:19:21,400
do it<font color="#E5E5E5"> and offer it to</font><font color="#CCCCCC"> people my feeling</font>

439
00:19:19,090 --> 00:19:25,959
still is that<font color="#CCCCCC"> it's quite a long</font><font color="#E5E5E5"> way</font>

440
00:19:21,400 --> 00:19:28,300
behind<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the whole gdb servers come in</font>

441
00:19:25,960 --> 00:19:30,910
all sorts<font color="#CCCCCC"> of flavors</font><font color="#E5E5E5"> gdb talks a very</font>

442
00:19:28,300 --> 00:19:32,379
simple serial protocol to say read

443
00:19:30,910 --> 00:19:33,820
memory<font color="#E5E5E5"> write memory start</font><font color="#CCCCCC"> to program</font>

444
00:19:32,380 --> 00:19:35,980
<font color="#E5E5E5">stop</font><font color="#CCCCCC"> a program read registers write</font>

445
00:19:33,820 --> 00:19:37,720
registers and that's basically a gdb

446
00:19:35,980 --> 00:19:42,070
service it's<font color="#CCCCCC"> they're processing</font><font color="#E5E5E5"> those</font>

447
00:19:37,720 --> 00:19:44,260
and the gdb server application is a

448
00:19:42,070 --> 00:19:46,059
Linux application that's been ported the

449
00:19:44,260 --> 00:19:48,429
link<font color="#E5E5E5"> sauce and used to run on</font><font color="#CCCCCC"> FreeBSD</font>

450
00:19:46,059 --> 00:19:51,309
that provides<font color="#E5E5E5"> that functionality there</font>

451
00:19:48,429 --> 00:19:52,960
are lots of other gdb servers open<font color="#E5E5E5"> OCD</font>

452
00:19:51,309 --> 00:19:54,520
<font color="#E5E5E5">is an example for embedded systems</font><font color="#CCCCCC"> we</font>

453
00:19:52,960 --> 00:19:57,490
have our own one for embedded<font color="#CCCCCC"> systems</font>

454
00:19:54,520 --> 00:20:00,429
when you're running<font color="#E5E5E5"> bare metal or with</font>

455
00:19:57,490 --> 00:20:02,500
<font color="#CCCCCC">real-time operating systems so I think</font>

456
00:20:00,429 --> 00:20:05,050
that boils down to<font color="#E5E5E5"> there isn't really</font>

457
00:20:02,500 --> 00:20:06,309
but Apple sort of have<font color="#CCCCCC"> one that does</font>

458
00:20:05,050 --> 00:20:08,500
<font color="#CCCCCC">that</font><font color="#E5E5E5"> sort of thing and there are other</font>

459
00:20:06,309 --> 00:20:11,440
<font color="#E5E5E5">ones out there but</font><font color="#CCCCCC"> it doesn't</font><font color="#E5E5E5"> really</font>

460
00:20:08,500 --> 00:20:13,000
help us<font color="#E5E5E5"> that the solution is to get gdb</font>

461
00:20:11,440 --> 00:20:16,620
server running<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it should actually</font>

462
00:20:13,000 --> 00:20:21,870
compile with<font color="#E5E5E5"> a low VM in the end anyway</font>

463
00:20:16,620 --> 00:20:21,870
and we're out of time<font color="#CCCCCC"> thank you</font>

464
00:20:25,309 --> 00:20:29,670
<font color="#E5E5E5">you</font>

465
00:20:26,510 --> 00:20:29,670
[Applause]

