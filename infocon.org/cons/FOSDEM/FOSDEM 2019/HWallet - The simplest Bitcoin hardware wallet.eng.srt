1
00:00:15,259 --> 00:00:24,660
<font color="#E5E5E5">all right so next talk is from</font><font color="#CCCCCC"> pneumonia</font>

2
00:00:19,259 --> 00:00:26,520
<font color="#CCCCCC">Nico de vich sorry famous</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> about</font>

3
00:00:24,660 --> 00:00:34,019
<font color="#E5E5E5">H wallet was simply a Bitcoin how about</font>

4
00:00:26,520 --> 00:00:36,149
it thank<font color="#E5E5E5"> you yeah okay</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> contrary</font><font color="#CCCCCC"> to</font>

5
00:00:34,020 --> 00:00:38,160
what you<font color="#E5E5E5"> expect it's probably not going</font>

6
00:00:36,149 --> 00:00:39,989
<font color="#CCCCCC">to be a</font><font color="#E5E5E5"> talk about blockchain it's more</font>

7
00:00:38,160 --> 00:00:53,699
<font color="#E5E5E5">going to be talk about secure</font><font color="#CCCCCC"> hardware</font>

8
00:00:39,989 --> 00:00:56,309
<font color="#E5E5E5">so okay yeah so</font><font color="#CCCCCC"> it's gonna be</font><font color="#E5E5E5"> talk about</font>

9
00:00:53,699 --> 00:00:57,960
<font color="#E5E5E5">secure</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> and I already since I</font>

10
00:00:56,309 --> 00:00:59,940
<font color="#CCCCCC">already gave</font><font color="#E5E5E5"> a talk with the same slides</font>

11
00:00:57,960 --> 00:01:01,379
I didn't change the<font color="#CCCCCC"> rap</font><font color="#E5E5E5"> these slides you</font>

12
00:00:59,940 --> 00:01:05,069
can<font color="#E5E5E5"> already find this</font><font color="#CCCCCC"> talk on youtube so</font>

13
00:01:01,379 --> 00:01:06,690
I want to to move it a bit<font color="#E5E5E5"> to to in a</font>

14
00:01:05,069 --> 00:01:10,050
bit other direction I will<font color="#E5E5E5"> go through</font>

15
00:01:06,690 --> 00:01:12,750
slides of course but first I want to say

16
00:01:10,050 --> 00:01:14,460
that from all<font color="#CCCCCC"> the promises</font><font color="#E5E5E5"> that we got</font>

17
00:01:12,750 --> 00:01:16,470
from blockchain<font color="#E5E5E5"> I know some people are</font>

18
00:01:14,460 --> 00:01:19,289
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> throw tomatoes at me but save</font><font color="#CCCCCC"> it</font>

19
00:01:16,470 --> 00:01:21,090
please for later<font color="#E5E5E5"> from all the promises</font>

20
00:01:19,290 --> 00:01:22,440
we we heard about what<font color="#E5E5E5"> chain if it's</font>

21
00:01:21,090 --> 00:01:24,780
going<font color="#E5E5E5"> to save the</font><font color="#CCCCCC"> world it's got a pure</font>

22
00:01:22,440 --> 00:01:28,800
cancer<font color="#E5E5E5"> and everything</font><font color="#CCCCCC"> I believe that</font>

23
00:01:24,780 --> 00:01:31,170
there are<font color="#E5E5E5"> only two visible</font><font color="#CCCCCC"> benefits for</font>

24
00:01:28,800 --> 00:01:32,399
the whole<font color="#CCCCCC"> community for</font><font color="#E5E5E5"> the for the</font>

25
00:01:31,170 --> 00:01:35,850
general public

26
00:01:32,400 --> 00:01:39,930
<font color="#CCCCCC">first of all mining hardware can be</font>

27
00:01:35,850 --> 00:01:42,240
reused<font color="#E5E5E5"> for AI and second advancement in</font>

28
00:01:39,930 --> 00:01:48,000
<font color="#E5E5E5">open source secure</font><font color="#CCCCCC"> hardware will</font>

29
00:01:42,240 --> 00:01:51,780
probably lead to<font color="#E5E5E5"> growth in usage of</font><font color="#CCCCCC"> u2f</font>

30
00:01:48,000 --> 00:01:55,140
tokens which will increase security<font color="#E5E5E5"> of</font>

31
00:01:51,780 --> 00:01:58,860
your accounts on various online services

32
00:01:55,140 --> 00:02:02,070
but let's<font color="#E5E5E5"> move on with the talk and then</font>

33
00:01:58,860 --> 00:02:04,500
later<font color="#CCCCCC"> I would also</font><font color="#E5E5E5"> like to hear your</font>

34
00:02:02,070 --> 00:02:07,410
opinion about<font color="#CCCCCC"> what is a Hardware wallet</font>

35
00:02:04,500 --> 00:02:09,090
because when I gave this talk at<font color="#E5E5E5"> other</font>

36
00:02:07,410 --> 00:02:11,519
places some people approached me later

37
00:02:09,090 --> 00:02:13,379
asking me telling me actually<font color="#E5E5E5"> they did</font>

38
00:02:11,519 --> 00:02:16,409
they disagree with<font color="#E5E5E5"> me</font><font color="#CCCCCC"> and then Hardware</font>

39
00:02:13,379 --> 00:02:17,969
wallet is not the<font color="#E5E5E5"> just something</font><font color="#CCCCCC"> that I</font>

40
00:02:16,409 --> 00:02:18,510
believe the<font color="#CCCCCC"> hard wallet is some people</font>

41
00:02:17,969 --> 00:02:20,700
told me<font color="#E5E5E5"> why</font>

42
00:02:18,510 --> 00:02:22,500
yeah but it's also you know<font color="#E5E5E5"> saying</font>

43
00:02:20,700 --> 00:02:26,369
harder<font color="#E5E5E5"> wallet is kind of for pleonasm</font>

44
00:02:22,500 --> 00:02:30,360
because wallet itself is<font color="#CCCCCC"> hardware right</font>

45
00:02:26,370 --> 00:02:31,800
<font color="#E5E5E5">so they say yeah also</font><font color="#CCCCCC"> like using a smart</font>

46
00:02:30,360 --> 00:02:34,680
card would be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> harder wallet for</font>

47
00:02:31,800 --> 00:02:37,050
bitcoins and so yeah true<font color="#CCCCCC"> but you don't</font>

48
00:02:34,680 --> 00:02:39,480
<font color="#CCCCCC">have</font><font color="#E5E5E5"> a screen so you don't have you are</font>

49
00:02:37,050 --> 00:02:43,170
not<font color="#E5E5E5"> sure what is actually being signed</font>

50
00:02:39,480 --> 00:02:44,548
<font color="#E5E5E5">on that</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> and I would I would</font>

51
00:02:43,170 --> 00:02:46,649
really like<font color="#CCCCCC"> to hear later if anyone else</font>

52
00:02:44,549 --> 00:02:48,360
has has other opinions what actually

53
00:02:46,650 --> 00:02:52,319
<font color="#E5E5E5">hardware wallet is and what it should be</font>

54
00:02:48,360 --> 00:02:55,760
<font color="#E5E5E5">but let's move on with with five</font><font color="#CCCCCC"> noun so</font>

55
00:02:52,319 --> 00:02:59,190
there were vulnerabilities in almost all

56
00:02:55,760 --> 00:03:02,099
widely used hardware wallets<font color="#CCCCCC"> so there</font>

57
00:02:59,190 --> 00:03:06,750
was a really<font color="#CCCCCC"> interesting talk at the</font>

58
00:03:02,099 --> 00:03:10,649
last<font color="#CCCCCC"> ccc the</font><font color="#E5E5E5"> where security researchers</font>

59
00:03:06,750 --> 00:03:13,170
gave really broad array of<font color="#E5E5E5"> attacks</font>

60
00:03:10,650 --> 00:03:15,930
showed a really<font color="#E5E5E5"> broad array of attacks</font>

61
00:03:13,170 --> 00:03:17,429
on these horrible<font color="#CCCCCC"> it's so that for</font>

62
00:03:15,930 --> 00:03:21,660
<font color="#CCCCCC">example</font><font color="#E5E5E5"> that everyone with</font><font color="#CCCCCC"> the physical</font>

63
00:03:17,430 --> 00:03:23,609
<font color="#E5E5E5">access to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> hardware can run any can</font>

64
00:03:21,660 --> 00:03:29,280
execute<font color="#E5E5E5"> any arbitrary code because due</font>

65
00:03:23,609 --> 00:03:34,500
to<font color="#E5E5E5"> the flaw in the in the in the</font><font color="#CCCCCC"> in the</font>

66
00:03:29,280 --> 00:03:35,819
bootloader<font color="#E5E5E5"> so that's that's the kind of</font>

67
00:03:34,500 --> 00:03:38,269
the construction<font color="#E5E5E5"> of</font><font color="#CCCCCC"> a fletcher</font>

68
00:03:35,819 --> 00:03:40,470
so there is an<font color="#CCCCCC"> oled</font><font color="#E5E5E5"> there is a</font>

69
00:03:38,269 --> 00:03:42,060
<font color="#E5E5E5">microcontroller which is an insecure</font>

70
00:03:40,470 --> 00:03:45,359
microcontroller and just<font color="#E5E5E5"> off-the-shelf</font>

71
00:03:42,060 --> 00:03:47,700
stm32 and there is a secure MCU so

72
00:03:45,359 --> 00:03:50,549
secure and<font color="#CCCCCC"> see you does he tours all the</font>

73
00:03:47,700 --> 00:03:53,010
keys<font color="#CCCCCC"> and does all</font><font color="#E5E5E5"> the signing but if you</font>

74
00:03:50,549 --> 00:03:55,590
in fact<font color="#E5E5E5"> the this microcontroller it</font>

75
00:03:53,010 --> 00:03:58,679
actually shows on the<font color="#CCCCCC"> OLED what you are</font>

76
00:03:55,590 --> 00:04:01,260
<font color="#E5E5E5">signing then this is kind of pointless</font>

77
00:03:58,680 --> 00:04:03,030
scenario and<font color="#E5E5E5"> this converges to some to</font>

78
00:04:01,260 --> 00:04:05,760
the security<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> you can have for</font>

79
00:04:03,030 --> 00:04:08,220
example on a smart card so you<font color="#CCCCCC"> don't</font>

80
00:04:05,760 --> 00:04:10,170
<font color="#E5E5E5">need the wallet for this on the other</font>

81
00:04:08,220 --> 00:04:14,370
hand<font color="#E5E5E5"> yeah there was also an</font><font color="#CCCCCC"> interesting</font>

82
00:04:10,170 --> 00:04:16,500
<font color="#E5E5E5">blog post from roughly a</font><font color="#CCCCCC"> year ago which</font>

83
00:04:14,370 --> 00:04:19,829
basically<font color="#CCCCCC"> came come</font><font color="#E5E5E5"> to the same</font>

84
00:04:16,500 --> 00:04:23,430
conclusion<font color="#E5E5E5"> with with physical access you</font>

85
00:04:19,829 --> 00:04:25,229
can<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> have access you</font><font color="#E5E5E5"> can have a</font>

86
00:04:23,430 --> 00:04:27,599
supply chain attack on these on these

87
00:04:25,229 --> 00:04:30,240
<font color="#E5E5E5">wallets where you can</font><font color="#CCCCCC"> actually replace</font>

88
00:04:27,599 --> 00:04:31,620
the<font color="#CCCCCC"> firmer</font><font color="#E5E5E5"> even though but but</font><font color="#CCCCCC"> firmer is</font>

89
00:04:30,240 --> 00:04:32,020
actually<font color="#E5E5E5"> supposed to be verified by the</font>

90
00:04:31,620 --> 00:04:33,580
secure

91
00:04:32,020 --> 00:04:36,340
<font color="#E5E5E5">microcontroller but if you have some</font>

92
00:04:33,580 --> 00:04:38,830
redundant parts of the<font color="#E5E5E5"> firmware on</font><font color="#CCCCCC"> the</font>

93
00:04:36,340 --> 00:04:41,560
on the<font color="#E5E5E5"> general-purpose microcontroller</font>

94
00:04:38,830 --> 00:04:43,810
<font color="#E5E5E5">this can actually you can</font><font color="#CCCCCC"> just resend</font>

95
00:04:41,560 --> 00:04:46,060
the same part and then put your

96
00:04:43,810 --> 00:04:49,539
malicious code in the redundant<font color="#E5E5E5"> parts of</font>

97
00:04:46,060 --> 00:04:51,009
the code for treasurer<font color="#E5E5E5"> there was there</font>

98
00:04:49,539 --> 00:04:54,250
<font color="#E5E5E5">were actually because I believe</font><font color="#CCCCCC"> that</font>

99
00:04:51,009 --> 00:04:57,370
<font color="#E5E5E5">harder wallet should be actually should</font>

100
00:04:54,250 --> 00:05:01,030
be resistant to remote attacks<font color="#CCCCCC"> so it</font>

101
00:04:57,370 --> 00:05:02,620
<font color="#E5E5E5">means that no nobody like even if we</font>

102
00:05:01,030 --> 00:05:07,150
<font color="#E5E5E5">consider a threat model that your</font>

103
00:05:02,620 --> 00:05:11,409
computer your laptop is compromised<font color="#E5E5E5"> your</font>

104
00:05:07,150 --> 00:05:13,810
cold storage<font color="#E5E5E5"> should be should be safe</font>

105
00:05:11,409 --> 00:05:16,270
well that wasn't<font color="#E5E5E5"> let's say that that's</font>

106
00:05:13,810 --> 00:05:17,889
<font color="#E5E5E5">not 100% the case with</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> treasurer</font>

107
00:05:16,270 --> 00:05:19,870
<font color="#CCCCCC">because they had actually wrote a</font><font color="#E5E5E5"> really</font>

108
00:05:17,889 --> 00:05:22,180
nice blog post<font color="#E5E5E5"> about it</font><font color="#CCCCCC"> they have they</font>

109
00:05:19,870 --> 00:05:28,000
<font color="#E5E5E5">have a really good security blog for</font>

110
00:05:22,180 --> 00:05:30,550
that<font color="#E5E5E5"> for these purposes but yeah so this</font>

111
00:05:28,000 --> 00:05:34,389
in<font color="#E5E5E5"> in in this theoretical attack because</font>

112
00:05:30,550 --> 00:05:36,750
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> for in the USB software stack</font>

113
00:05:34,389 --> 00:05:40,750
which was which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> third-party code</font>

114
00:05:36,750 --> 00:05:43,509
<font color="#CCCCCC">actually that that can lead to if you</font><font color="#E5E5E5"> if</font>

115
00:05:40,750 --> 00:05:46,150
your<font color="#CCCCCC"> computer's</font><font color="#E5E5E5"> compromised you can send</font>

116
00:05:43,509 --> 00:05:48,759
malicious packet to to the wallet and

117
00:05:46,150 --> 00:05:50,440
then you can write up to<font color="#E5E5E5"> 60 bytes of</font>

118
00:05:48,759 --> 00:05:54,159
data into the protected part of the

119
00:05:50,440 --> 00:05:56,080
memory<font color="#CCCCCC"> which is definitely</font><font color="#E5E5E5"> not good and</font>

120
00:05:54,159 --> 00:05:59,400
also<font color="#E5E5E5"> of course like with physical access</font>

121
00:05:56,080 --> 00:06:02,469
<font color="#CCCCCC">bla bla you can do the same thing so</font>

122
00:05:59,400 --> 00:06:05,799
<font color="#CCCCCC">let's see how are they constructed which</font>

123
00:06:02,469 --> 00:06:07,960
<font color="#CCCCCC">hardware is used there so for treasurer</font>

124
00:06:05,800 --> 00:06:10,750
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Philippe key which is kind of a</font>

125
00:06:07,960 --> 00:06:14,289
ripoff<font color="#CCCCCC"> of Tresor they use the</font><font color="#E5E5E5"> same</font>

126
00:06:10,750 --> 00:06:15,719
microcontroller stm32 f2<font color="#E5E5E5"> 0 5 which</font><font color="#CCCCCC"> is as</font>

127
00:06:14,289 --> 00:06:18,818
I said<font color="#CCCCCC"> general-purpose</font><font color="#E5E5E5"> microcontroller</font>

128
00:06:15,719 --> 00:06:20,770
<font color="#CCCCCC">it doesn't have any</font><font color="#E5E5E5"> true random number</font>

129
00:06:18,819 --> 00:06:24,430
generator it doesn't have any

130
00:06:20,770 --> 00:06:27,490
acceleration<font color="#E5E5E5"> for for any cryptographic</font>

131
00:06:24,430 --> 00:06:30,719
primitives<font color="#E5E5E5"> but because you don't need to</font>

132
00:06:27,490 --> 00:06:32,979
sign an NDA<font color="#E5E5E5"> to to publish this software</font>

133
00:06:30,719 --> 00:06:37,120
<font color="#E5E5E5">it's completely open source which is</font>

134
00:06:32,979 --> 00:06:39,159
awesome<font color="#CCCCCC"> on the other hand ledger has</font>

135
00:06:37,120 --> 00:06:41,320
<font color="#E5E5E5">this secure mark controller which is</font>

136
00:06:39,159 --> 00:06:44,259
<font color="#E5E5E5">under an NDA so that that's why I</font>

137
00:06:41,320 --> 00:06:45,969
couldn't conclude whether it has<font color="#E5E5E5"> or it</font>

138
00:06:44,259 --> 00:06:49,120
doesn't<font color="#E5E5E5"> have</font>

139
00:06:45,970 --> 00:06:49,980
the support<font color="#E5E5E5"> hardware support hardware</font>

140
00:06:49,120 --> 00:06:52,900
acceleration for

141
00:06:49,980 --> 00:06:57,120
<font color="#E5E5E5">sha-256 but it</font><font color="#CCCCCC"> definitely cannot be</font>

142
00:06:52,900 --> 00:06:59,320
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> though</font><font color="#CCCCCC"> the software for</font><font color="#E5E5E5"> the</font>

143
00:06:57,120 --> 00:07:06,370
<font color="#E5E5E5">for the</font><font color="#CCCCCC"> general purpose microcontroller</font>

144
00:06:59,320 --> 00:07:09,370
can<font color="#CCCCCC"> be open sourced</font><font color="#E5E5E5"> and there is also</font>

145
00:07:06,370 --> 00:07:11,950
<font color="#E5E5E5">another</font><font color="#CCCCCC"> harder</font><font color="#E5E5E5"> wallet called a cold card</font>

146
00:07:09,370 --> 00:07:14,610
which has an<font color="#E5E5E5"> interesting construction so</font>

147
00:07:11,950 --> 00:07:17,530
it has this secure<font color="#CCCCCC"> element which is</font>

148
00:07:14,610 --> 00:07:20,470
<font color="#CCCCCC">supposed to</font><font color="#E5E5E5"> store keys</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> on the other</font>

149
00:07:17,530 --> 00:07:21,820
<font color="#E5E5E5">hand even though it's a Tec see even</font>

150
00:07:20,470 --> 00:07:24,850
<font color="#E5E5E5">though we will assume that it</font><font color="#CCCCCC"> has</font>

151
00:07:21,820 --> 00:07:27,250
support<font color="#E5E5E5"> it does support elliptic curve</font>

152
00:07:24,850 --> 00:07:28,360
cryptography<font color="#CCCCCC"> but it doesn't support</font><font color="#E5E5E5"> the</font>

153
00:07:27,250 --> 00:07:31,450
elliptic curve that is needed for

154
00:07:28,360 --> 00:07:33,100
signing<font color="#E5E5E5"> Bitcoin transactions</font><font color="#CCCCCC"> so the</font>

155
00:07:31,450 --> 00:07:35,020
<font color="#E5E5E5">actual signing has to be done on the</font>

156
00:07:33,100 --> 00:07:38,920
insecure microcontroller<font color="#E5E5E5"> but of course</font>

157
00:07:35,020 --> 00:07:42,400
<font color="#CCCCCC">this can</font><font color="#E5E5E5"> be also open source</font><font color="#CCCCCC"> and the</font>

158
00:07:38,920 --> 00:07:44,350
construction that that I<font color="#E5E5E5"> just hope</font>

159
00:07:42,400 --> 00:07:48,609
because I wasn't<font color="#E5E5E5"> I wasn't happy really</font>

160
00:07:44,350 --> 00:07:52,210
with<font color="#E5E5E5"> with the existing approach was that</font>

161
00:07:48,610 --> 00:07:55,360
<font color="#E5E5E5">I</font><font color="#CCCCCC"> si to move the OLED</font><font color="#E5E5E5"> and then put the</font>

162
00:07:52,210 --> 00:07:56,650
<font color="#E5E5E5">microcontroller in between the</font><font color="#CCCCCC"> computer</font>

163
00:07:55,360 --> 00:07:59,260
like<font color="#E5E5E5"> the communication micro neutral</font>

164
00:07:56,650 --> 00:08:02,770
because you usually<font color="#E5E5E5"> USB software stack</font>

165
00:07:59,260 --> 00:08:04,270
is really heavy<font color="#E5E5E5"> and you know going</font>

166
00:08:02,770 --> 00:08:07,120
<font color="#CCCCCC">through and</font><font color="#E5E5E5"> and it's also</font><font color="#CCCCCC"> dependent and</font>

167
00:08:04,270 --> 00:08:10,390
interrupts more in most<font color="#E5E5E5"> cases</font><font color="#CCCCCC"> and that</font>

168
00:08:07,120 --> 00:08:14,580
leads to<font color="#CCCCCC"> two</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> can lead to too many</font>

169
00:08:10,390 --> 00:08:17,590
<font color="#E5E5E5">different cases where you can actually</font>

170
00:08:14,580 --> 00:08:20,919
<font color="#E5E5E5">compromise the</font><font color="#CCCCCC"> so the whole so this way</font>

171
00:08:17,590 --> 00:08:24,849
you maintain the same threat model<font color="#E5E5E5"> as if</font>

172
00:08:20,919 --> 00:08:26,979
your laptop was compromised<font color="#E5E5E5"> but you you</font>

173
00:08:24,850 --> 00:08:31,270
minimize you close the door close<font color="#CCCCCC"> the</font>

174
00:08:26,980 --> 00:08:34,120
gap<font color="#E5E5E5"> by only using like simple you are</font>

175
00:08:31,270 --> 00:08:35,740
stupid<font color="#E5E5E5"> UART communication with the my</font>

176
00:08:34,120 --> 00:08:40,289
controller that<font color="#E5E5E5"> is actually kind of</font>

177
00:08:35,740 --> 00:08:45,010
secure<font color="#E5E5E5"> and it's available without an NDA</font>

178
00:08:40,289 --> 00:08:47,170
<font color="#E5E5E5">so and it has hardware acceleration for</font>

179
00:08:45,010 --> 00:08:49,470
<font color="#CCCCCC">two it has like to run</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> arm generator</font>

180
00:08:47,170 --> 00:08:53,380
hardware acceleration for<font color="#E5E5E5"> sha-256 and</font>

181
00:08:49,470 --> 00:08:55,870
also supports in<font color="#CCCCCC"> Hardware</font><font color="#E5E5E5"> elliptic curve</font>

182
00:08:53,380 --> 00:08:58,660
<font color="#E5E5E5">sack</font><font color="#CCCCCC"> be 256k one which is needed for</font>

183
00:08:55,870 --> 00:09:02,230
signing<font color="#CCCCCC"> Bitcoin transactions and</font>

184
00:08:58,660 --> 00:09:04,329
<font color="#E5E5E5">theorem also and that thus it can be</font>

185
00:09:02,230 --> 00:09:06,730
<font color="#E5E5E5">completed the whole setup can</font><font color="#CCCCCC"> be</font>

186
00:09:04,329 --> 00:09:10,959
completely open<font color="#E5E5E5"> sourced so checking the</font>

187
00:09:06,730 --> 00:09:12,430
library<font color="#CCCCCC"> dependencies well</font><font color="#E5E5E5"> I tried to be</font>

188
00:09:10,959 --> 00:09:15,279
independent completely from from<font color="#E5E5E5"> from</font>

189
00:09:12,430 --> 00:09:17,529
<font color="#CCCCCC">any library in</font><font color="#E5E5E5"> H wallet</font><font color="#CCCCCC"> so I didn't even</font>

190
00:09:15,279 --> 00:09:22,329
<font color="#CCCCCC">use the</font><font color="#E5E5E5"> standard c library that</font>

191
00:09:17,529 --> 00:09:26,199
<font color="#CCCCCC">therefore i</font><font color="#E5E5E5"> actually had to do some some</font>

192
00:09:22,329 --> 00:09:29,279
tricks to do even division with like big

193
00:09:26,199 --> 00:09:30,699
<font color="#E5E5E5">numbers but we will see that</font><font color="#CCCCCC"> later so</font>

194
00:09:29,279 --> 00:09:32,670
for<font color="#CCCCCC"> treasure</font>

195
00:09:30,699 --> 00:09:36,729
basically<font color="#E5E5E5"> it's completely</font><font color="#CCCCCC"> open source</font>

196
00:09:32,670 --> 00:09:38,560
<font color="#E5E5E5">well whereas ledger is using these has</font>

197
00:09:36,730 --> 00:09:42,130
<font color="#CCCCCC">these like closed source components that</font>

198
00:09:38,560 --> 00:09:46,268
were that<font color="#E5E5E5"> they were unable to to publish</font>

199
00:09:42,130 --> 00:09:48,430
<font color="#E5E5E5">because of the</font><font color="#CCCCCC"> NBA with with SD so if</font>

200
00:09:46,269 --> 00:09:50,949
and if you see<font color="#E5E5E5"> treasure and both</font><font color="#CCCCCC"> Reznor</font>

201
00:09:48,430 --> 00:09:53,888
and<font color="#CCCCCC"> lighter they depend also on lots of</font>

202
00:09:50,949 --> 00:09:57,430
<font color="#E5E5E5">third party libs so that that's how</font>

203
00:09:53,889 --> 00:09:59,259
<font color="#CCCCCC">actually this</font><font color="#E5E5E5"> the this buffer overflow</font>

204
00:09:57,430 --> 00:10:01,930
happened<font color="#E5E5E5"> in in in treasure because it</font>

205
00:09:59,259 --> 00:10:04,959
was part<font color="#CCCCCC"> of these third-party libraries</font>

206
00:10:01,930 --> 00:10:06,279
that were actually<font color="#E5E5E5"> just used as they are</font>

207
00:10:04,959 --> 00:10:09,219
they were never actually meant to<font color="#CCCCCC"> be</font>

208
00:10:06,279 --> 00:10:11,910
used in<font color="#E5E5E5"> secure devices they thought that</font>

209
00:10:09,220 --> 00:10:13,800
there was<font color="#E5E5E5"> a proper security all it</font>

210
00:10:11,910 --> 00:10:16,930
carried out on them

211
00:10:13,800 --> 00:10:20,709
so keep key as a<font color="#CCCCCC"> report as</font><font color="#E5E5E5"> I said it</font>

212
00:10:16,930 --> 00:10:24,849
<font color="#CCCCCC">just adds some some code on that and</font>

213
00:10:20,709 --> 00:10:26,290
called card issues is like it has<font color="#E5E5E5"> has</font>

214
00:10:24,850 --> 00:10:29,649
common code with all of these projects

215
00:10:26,290 --> 00:10:32,620
<font color="#CCCCCC">and it's it</font><font color="#E5E5E5"> has huge code base because</font>

216
00:10:29,649 --> 00:10:34,060
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the usage of micro Python</font><font color="#CCCCCC"> I know what</font>

217
00:10:32,620 --> 00:10:36,670
you're saying like you probably think

218
00:10:34,060 --> 00:10:39,550
I'm crazy<font color="#E5E5E5"> I'm rolling my own crypto well</font>

219
00:10:36,670 --> 00:10:42,250
<font color="#E5E5E5">I would disagree</font><font color="#CCCCCC"> because I'm actually</font>

220
00:10:39,550 --> 00:10:45,370
just interfacing<font color="#CCCCCC"> Hardware primitives</font><font color="#E5E5E5"> in</font>

221
00:10:42,250 --> 00:10:47,589
the microcontroller<font color="#CCCCCC"> so that's why my</font>

222
00:10:45,370 --> 00:10:50,259
code base<font color="#E5E5E5"> can actually be really small</font>

223
00:10:47,589 --> 00:10:54,670
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> why that's why the eighth wallet</font>

224
00:10:50,259 --> 00:10:58,060
has really really<font color="#CCCCCC"> really small code base</font>

225
00:10:54,670 --> 00:11:01,599
compared to so I actually pulled each of

226
00:10:58,060 --> 00:11:03,449
these projects<font color="#E5E5E5"> from from github and also</font>

227
00:11:01,600 --> 00:11:07,510
including their sub modules and then

228
00:11:03,449 --> 00:11:10,889
counted the<font color="#E5E5E5"> number of lines of code in C</font>

229
00:11:07,510 --> 00:11:10,889
and got<font color="#E5E5E5"> eight files</font>

230
00:11:11,480 --> 00:11:15,500
and as you can see<font color="#E5E5E5"> 2.5 million lines of</font>

231
00:11:13,670 --> 00:11:18,349
code<font color="#CCCCCC"> for a coal card because of micro</font>

232
00:11:15,500 --> 00:11:20,120
Python<font color="#E5E5E5"> like it actually</font><font color="#CCCCCC"> pulls the code</font>

233
00:11:18,350 --> 00:11:22,310
for<font color="#CCCCCC"> different platforms for different</font>

234
00:11:20,120 --> 00:11:23,690
microcontrollers it's just a bunch<font color="#E5E5E5"> of</font>

235
00:11:22,310 --> 00:11:26,449
everything

236
00:11:23,690 --> 00:11:29,060
whereas ledger has around the three

237
00:11:26,450 --> 00:11:30,620
hundred forty six thousand lines of<font color="#CCCCCC"> code</font>

238
00:11:29,060 --> 00:11:33,319
which is<font color="#E5E5E5"> the only</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the open source</font>

239
00:11:30,620 --> 00:11:35,600
part and<font color="#CCCCCC"> treasuring</font><font color="#E5E5E5"> keep key expectedly</font>

240
00:11:33,320 --> 00:11:38,390
they have around the same number<font color="#CCCCCC"> of</font>

241
00:11:35,600 --> 00:11:40,190
lines<font color="#E5E5E5"> of code whereas</font><font color="#CCCCCC"> the v8 wallet it</font>

242
00:11:38,390 --> 00:11:41,930
was written from scratch<font color="#CCCCCC"> only has</font><font color="#E5E5E5"> like</font>

243
00:11:40,190 --> 00:11:44,290
around<font color="#E5E5E5"> four thousand lines of code and</font>

244
00:11:41,930 --> 00:11:46,729
of these lines of<font color="#CCCCCC"> code like only</font>

245
00:11:44,290 --> 00:11:49,670
slightly above<font color="#E5E5E5"> two thousand lines of</font>

246
00:11:46,730 --> 00:11:51,680
code<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the actual</font><font color="#CCCCCC"> meet</font><font color="#E5E5E5"> the rest is the</font>

247
00:11:49,670 --> 00:11:55,130
<font color="#E5E5E5">deformed for displaying like you don't</font>

248
00:11:51,680 --> 00:11:58,930
even<font color="#CCCCCC"> have to order</font><font color="#E5E5E5"> that code and license</font>

249
00:11:55,130 --> 00:12:01,010
headers which don't even<font color="#E5E5E5"> get compiled so</font>

250
00:11:58,930 --> 00:12:04,939
regarding code lace yeah you can find<font color="#E5E5E5"> it</font>

251
00:12:01,010 --> 00:12:07,220
find<font color="#E5E5E5"> the code on this link</font><font color="#CCCCCC"> it hasn't</font>

252
00:12:04,940 --> 00:12:09,220
been<font color="#E5E5E5"> updated for a while but yeah I</font>

253
00:12:07,220 --> 00:12:13,130
<font color="#E5E5E5">don't have enough time to work on that</font>

254
00:12:09,220 --> 00:12:14,690
at the<font color="#E5E5E5"> moment but if you see this is the</font>

255
00:12:13,130 --> 00:12:17,240
basic<font color="#CCCCCC"> layer these are the basic the</font>

256
00:12:14,690 --> 00:12:20,840
drivers<font color="#CCCCCC"> that the call it</font><font color="#E5E5E5"> actually</font>

257
00:12:17,240 --> 00:12:23,960
interfaces<font color="#E5E5E5"> the hardware then the methyl</font>

258
00:12:20,840 --> 00:12:26,420
so if the<font color="#E5E5E5"> construction looks like this</font>

259
00:12:23,960 --> 00:12:28,070
there<font color="#E5E5E5"> isn't this microcontroller</font><font color="#CCCCCC"> that</font>

260
00:12:26,420 --> 00:12:30,760
communicates to another communication

261
00:12:28,070 --> 00:12:33,770
microcontroller<font color="#E5E5E5"> and talks with the OLED</font>

262
00:12:30,760 --> 00:12:37,880
<font color="#CCCCCC">so this part is I actually</font><font color="#E5E5E5"> fixed the</font>

263
00:12:33,770 --> 00:12:41,390
speed to 215 point<font color="#E5E5E5"> to kill</font><font color="#CCCCCC"> the board</font>

264
00:12:37,880 --> 00:12:43,250
<font color="#E5E5E5">because that</font><font color="#CCCCCC"> helped me optimize the</font>

265
00:12:41,390 --> 00:12:45,560
whole code<font color="#E5E5E5"> I didn't have to calculate</font>

266
00:12:43,250 --> 00:12:47,840
<font color="#E5E5E5">values for certain registers that</font>

267
00:12:45,560 --> 00:12:49,579
<font color="#E5E5E5">therefore I made the code much easier</font>

268
00:12:47,840 --> 00:12:51,800
<font color="#CCCCCC">told it like</font><font color="#E5E5E5"> you can audit it in in a</font>

269
00:12:49,580 --> 00:12:54,260
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> days for like you can perform</font>

270
00:12:51,800 --> 00:12:59,300
proper security<font color="#E5E5E5"> on it on the source code</font>

271
00:12:54,260 --> 00:13:01,730
<font color="#E5E5E5">and also yeah spi bus is caught</font><font color="#CCCCCC"> and one</font>

272
00:12:59,300 --> 00:13:06,069
<font color="#CCCCCC">many</font><font color="#E5E5E5"> heard the same actually</font><font color="#CCCCCC"> applied the</font>

273
00:13:01,730 --> 00:13:09,080
same<font color="#E5E5E5"> approach as with as with you</font><font color="#CCCCCC"> earth</font>

274
00:13:06,070 --> 00:13:12,860
<font color="#E5E5E5">and the other part the crypto part over</font>

275
00:13:09,080 --> 00:13:14,780
there so<font color="#E5E5E5"> basically I have the building</font>

276
00:13:12,860 --> 00:13:18,440
block building blocks for for all<font color="#E5E5E5"> of</font>

277
00:13:14,780 --> 00:13:20,329
these so LTC is making sure that that

278
00:13:18,440 --> 00:13:23,200
part<font color="#E5E5E5"> that peripheral is making sure that</font>

279
00:13:20,330 --> 00:13:27,730
<font color="#E5E5E5">I can sign the transaction</font>

280
00:13:23,200 --> 00:13:34,770
<font color="#CCCCCC">mm cau gives me the hash</font><font color="#E5E5E5"> and I got</font><font color="#CCCCCC"> a</font>

281
00:13:27,730 --> 00:13:38,260
<font color="#E5E5E5">nonce from</font><font color="#CCCCCC"> trng</font><font color="#E5E5E5"> and LTC supports 256-bit</font>

282
00:13:34,770 --> 00:13:41,050
<font color="#E5E5E5">operation arithmetic for for this</font>

283
00:13:38,260 --> 00:13:43,420
elliptical and also for generating the

284
00:13:41,050 --> 00:13:47,520
signature<font color="#E5E5E5"> these are some operations that</font>

285
00:13:43,420 --> 00:13:52,800
that I used to implement<font color="#CCCCCC"> the ECDSA</font>

286
00:13:47,520 --> 00:13:57,790
<font color="#E5E5E5">algorithm here and the upper layer is</font>

287
00:13:52,800 --> 00:14:02,170
kind<font color="#E5E5E5"> of split in</font><font color="#CCCCCC"> 3 parts so there is the</font>

288
00:13:57,790 --> 00:14:06,280
this packet part<font color="#E5E5E5"> where which</font><font color="#CCCCCC"> is used for</font>

289
00:14:02,170 --> 00:14:08,829
communication<font color="#CCCCCC"> let's say like upstream</font><font color="#E5E5E5"> to</font>

290
00:14:06,280 --> 00:14:11,410
to the communication and<font color="#E5E5E5"> see you and</font>

291
00:14:08,830 --> 00:14:14,320
further to<font color="#E5E5E5"> the computer into the network</font>

292
00:14:11,410 --> 00:14:17,380
<font color="#E5E5E5">to the</font><font color="#CCCCCC"> OLED which is basically interface</font>

293
00:14:14,320 --> 00:14:18,790
that you get<font color="#CCCCCC"> ok it includes</font><font color="#E5E5E5"> also GPIO</font>

294
00:14:17,380 --> 00:14:21,600
that is used<font color="#E5E5E5"> for buttons but I didn't</font>

295
00:14:18,790 --> 00:14:25,089
<font color="#CCCCCC">have to show it here it's obvious</font><font color="#E5E5E5"> and</font>

296
00:14:21,600 --> 00:14:26,560
<font color="#E5E5E5">critical part which</font><font color="#CCCCCC"> is covering these</font>

297
00:14:25,090 --> 00:14:30,730
<font color="#E5E5E5">three peripherals that I already</font>

298
00:14:26,560 --> 00:14:32,489
<font color="#E5E5E5">mentioned so yeah packet there</font><font color="#CCCCCC"> is really</font>

299
00:14:30,730 --> 00:14:37,780
simple interface<font color="#E5E5E5"> we'd send and receive</font>

300
00:14:32,490 --> 00:14:40,930
<font color="#CCCCCC">packet structure is like TLB NCRC super</font>

301
00:14:37,780 --> 00:14:44,319
simple not complicated<font color="#CCCCCC"> easy to audit all</font>

302
00:14:40,930 --> 00:14:47,949
<font color="#CCCCCC">a part</font><font color="#E5E5E5"> basically just cleared you all</font>

303
00:14:44,320 --> 00:14:53,610
read<font color="#CCCCCC"> and write the row with</font><font color="#E5E5E5"> with certain</font>

304
00:14:47,950 --> 00:14:56,140
certain string by<font color="#CCCCCC"> SPI and this is a bit</font>

305
00:14:53,610 --> 00:14:59,200
more complicated part where<font color="#E5E5E5"> we're</font>

306
00:14:56,140 --> 00:15:02,590
actually<font color="#CCCCCC"> actual signing takes place and</font>

307
00:14:59,200 --> 00:15:06,310
hashing<font color="#CCCCCC"> and it's the trickiest part was</font>

308
00:15:02,590 --> 00:15:10,420
to<font color="#E5E5E5"> actually implement the division</font>

309
00:15:06,310 --> 00:15:14,319
<font color="#E5E5E5">because</font><font color="#CCCCCC"> does anyone know why I would</font>

310
00:15:10,420 --> 00:15:18,280
need big number division<font color="#E5E5E5"> for signing</font>

311
00:15:14,320 --> 00:15:19,930
Bitcoin transactions<font color="#E5E5E5"> anyone</font><font color="#CCCCCC"> ok it's</font>

312
00:15:18,280 --> 00:15:23,319
because when you when you want to

313
00:15:19,930 --> 00:15:25,000
<font color="#CCCCCC">populate the the the the string for some</font>

314
00:15:23,320 --> 00:15:28,570
<font color="#CCCCCC">one of the the foreign address you need</font>

315
00:15:25,000 --> 00:15:30,670
<font color="#E5E5E5">to to use base 58 and in order to get</font>

316
00:15:28,570 --> 00:15:33,650
base 58 you need to divide<font color="#E5E5E5"> that number</font>

317
00:15:30,670 --> 00:15:37,420
with<font color="#E5E5E5"> you need to divide the</font>

318
00:15:33,650 --> 00:15:39,949
<font color="#CCCCCC">address</font><font color="#E5E5E5"> with with 58 and then get these</font>

319
00:15:37,420 --> 00:15:42,380
human readable characters<font color="#E5E5E5"> and in order</font>

320
00:15:39,950 --> 00:15:44,750
to<font color="#E5E5E5"> do that I had to implement this</font>

321
00:15:42,380 --> 00:15:46,520
division which was<font color="#E5E5E5"> not supported in</font>

322
00:15:44,750 --> 00:15:53,680
hardware<font color="#E5E5E5"> so the way I did actually</font>

323
00:15:46,520 --> 00:15:58,819
abused<font color="#E5E5E5"> the existing stuff so I first</font>

324
00:15:53,680 --> 00:16:02,239
used the inversion so<font color="#E5E5E5"> modular</font>

325
00:15:58,820 --> 00:16:07,250
<font color="#E5E5E5">multiplicative inverse modulo number B</font>

326
00:16:02,240 --> 00:16:11,330
so<font color="#CCCCCC"> I get a B Prime and</font><font color="#E5E5E5"> then I deduct the</font>

327
00:16:07,250 --> 00:16:15,080
the module a module B from from a to get

328
00:16:11,330 --> 00:16:18,710
the the round number<font color="#CCCCCC"> for for the result</font>

329
00:16:15,080 --> 00:16:21,320
<font color="#E5E5E5">and what I do then is I</font><font color="#CCCCCC"> basically</font>

330
00:16:18,710 --> 00:16:23,600
multiply these two numbers<font color="#CCCCCC"> and in order</font>

331
00:16:21,320 --> 00:16:27,130
<font color="#CCCCCC">for this to work I have</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure</font>

332
00:16:23,600 --> 00:16:30,890
that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> can get the multiple module</font>

333
00:16:27,130 --> 00:16:33,410
multiplicative inverse modulo<font color="#CCCCCC"> N and for</font>

334
00:16:30,890 --> 00:16:36,439
that to work<font color="#E5E5E5"> and has to</font><font color="#CCCCCC"> be a large prime</font>

335
00:16:33,410 --> 00:16:38,480
and larger than any a and<font color="#CCCCCC"> B so I looked</font>

336
00:16:36,440 --> 00:16:42,080
at the code<font color="#CCCCCC"> that I already had and I</font>

337
00:16:38,480 --> 00:16:43,700
found<font color="#E5E5E5"> yeah there is a P from SEC P 256 K</font>

338
00:16:42,080 --> 00:16:46,959
1 which is a large prime number<font color="#E5E5E5"> and</font>

339
00:16:43,700 --> 00:16:50,110
that's how it this was<font color="#E5E5E5"> implemented in</font>

340
00:16:46,959 --> 00:16:53,750
<font color="#E5E5E5">these number of lines of code</font><font color="#CCCCCC"> possible</font>

341
00:16:50,110 --> 00:16:57,140
<font color="#CCCCCC">main loop is a stupid main loop that</font>

342
00:16:53,750 --> 00:16:59,360
just<font color="#E5E5E5"> reads packets via via you are so no</font>

343
00:16:57,140 --> 00:17:02,060
<font color="#E5E5E5">interrupts it's it's just waiting for</font>

344
00:16:59,360 --> 00:17:03,709
these<font color="#E5E5E5"> packets and depending on the on</font>

345
00:17:02,060 --> 00:17:07,188
the packet<font color="#CCCCCC"> after</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> verify this here</font>

346
00:17:03,709 --> 00:17:10,069
see<font color="#E5E5E5"> it sends it further up the stack to</font>

347
00:17:07,189 --> 00:17:13,390
<font color="#E5E5E5">two different modules</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example if</font>

348
00:17:10,069 --> 00:17:18,050
it's<font color="#E5E5E5"> intended</font><font color="#CCCCCC"> to be used</font><font color="#E5E5E5"> for Bitcoin</font>

349
00:17:13,390 --> 00:17:19,730
<font color="#CCCCCC">module</font><font color="#E5E5E5"> it's just sending it to</font><font color="#CCCCCC"> to that</font>

350
00:17:18,050 --> 00:17:23,688
part<font color="#E5E5E5"> of the of the upper layer of the</font>

351
00:17:19,730 --> 00:17:26,270
code<font color="#E5E5E5"> and then so the the the type field</font>

352
00:17:23,689 --> 00:17:28,910
is actually<font color="#CCCCCC"> divided into so packet</font><font color="#E5E5E5"> type</font>

353
00:17:26,270 --> 00:17:31,160
can<font color="#E5E5E5"> be either module or actually can be</font>

354
00:17:28,910 --> 00:17:32,630
like the module part defines the module

355
00:17:31,160 --> 00:17:34,850
and function defines<font color="#E5E5E5"> a function within</font>

356
00:17:32,630 --> 00:17:38,260
<font color="#E5E5E5">that module</font><font color="#CCCCCC"> on the upper</font><font color="#E5E5E5"> layer so far I</font>

357
00:17:34,850 --> 00:17:40,699
<font color="#CCCCCC">only implemented the</font><font color="#E5E5E5"> Bitcoin module and</font>

358
00:17:38,260 --> 00:17:43,070
this is how the process<font color="#E5E5E5"> function looks</font>

359
00:17:40,700 --> 00:17:46,280
<font color="#CCCCCC">like basically</font><font color="#E5E5E5"> it just</font><font color="#CCCCCC"> has a switch case</font>

360
00:17:43,070 --> 00:17:48,290
for<font color="#E5E5E5"> for the function and then if it's</font>

361
00:17:46,280 --> 00:17:49,760
like if the<font color="#E5E5E5"> computer says yeah if the</font>

362
00:17:48,290 --> 00:17:52,370
communication chip actually<font color="#E5E5E5"> sounds</font><font color="#CCCCCC"> like</font>

363
00:17:49,760 --> 00:17:54,580
now initialize the transaction<font color="#CCCCCC"> these are</font>

364
00:17:52,370 --> 00:17:57,679
<font color="#E5E5E5">the this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> that the</font>

365
00:17:54,580 --> 00:18:01,730
<font color="#E5E5E5">transaction is consisted of and then</font>

366
00:17:57,680 --> 00:18:03,710
<font color="#E5E5E5">okay now ask the user</font><font color="#CCCCCC"> to sign it and</font>

367
00:18:01,730 --> 00:18:07,130
then<font color="#E5E5E5"> something like this shows up on the</font>

368
00:18:03,710 --> 00:18:10,100
screen<font color="#E5E5E5"> and if you say yes you're gonna</font>

369
00:18:07,130 --> 00:18:16,610
send point zero zero one<font color="#CCCCCC"> bitcoins to</font>

370
00:18:10,100 --> 00:18:19,879
this address so<font color="#CCCCCC"> what next</font><font color="#E5E5E5"> I don't</font>

371
00:18:16,610 --> 00:18:22,070
actually plan<font color="#CCCCCC"> to build it because this</font>

372
00:18:19,880 --> 00:18:23,570
<font color="#E5E5E5">microcontroller has</font><font color="#CCCCCC"> a super crazy lead</font>

373
00:18:22,070 --> 00:18:26,090
time like last<font color="#E5E5E5"> time I checked it was</font>

374
00:18:23,570 --> 00:18:31,129
almost a<font color="#CCCCCC"> year so it's it's kind of I</font>

375
00:18:26,090 --> 00:18:34,189
guess pointless to start but if<font color="#CCCCCC"> you if</font>

376
00:18:31,130 --> 00:18:36,290
you want to to test it yourself<font color="#CCCCCC"> you can</font>

377
00:18:34,190 --> 00:18:39,730
<font color="#CCCCCC">buy these boards are easily available</font>

378
00:18:36,290 --> 00:18:40,879
online from from various<font color="#E5E5E5"> websites so</font>

379
00:18:39,730 --> 00:18:42,620
yeah

380
00:18:40,880 --> 00:18:45,890
I plan to<font color="#CCCCCC"> - probably at some point</font>

381
00:18:42,620 --> 00:18:49,399
implement<font color="#CCCCCC"> or anyone of</font><font color="#E5E5E5"> you welcome</font><font color="#CCCCCC"> to</font>

382
00:18:45,890 --> 00:18:54,230
commit the code it's<font color="#CCCCCC"> completely released</font>

383
00:18:49,400 --> 00:18:59,960
under<font color="#E5E5E5"> GPL v3</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> for some future plans</font>

384
00:18:54,230 --> 00:19:03,770
<font color="#CCCCCC">maybe implementing the u2f and also yeah</font>

385
00:18:59,960 --> 00:19:06,320
there is another microcontroller in in

386
00:19:03,770 --> 00:19:08,720
these<font color="#CCCCCC"> series which is if you want to go</font>

387
00:19:06,320 --> 00:19:11,000
and be a more<font color="#E5E5E5"> secure</font><font color="#CCCCCC"> anti-tamper</font>

388
00:19:08,720 --> 00:19:13,910
<font color="#E5E5E5">you can use that one and reuse the same</font>

389
00:19:11,000 --> 00:19:16,850
code but that<font color="#E5E5E5"> yeah then you need to sign</font>

390
00:19:13,910 --> 00:19:20,240
an NDA with with this<font color="#E5E5E5"> chip vendor which</font>

391
00:19:16,850 --> 00:19:23,060
is not really friendly for a<font color="#CCCCCC"> foreign</font>

392
00:19:20,240 --> 00:19:25,070
event like for them<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and you can</font>

393
00:19:23,060 --> 00:19:26,870
also put some<font color="#E5E5E5"> other communication</font><font color="#CCCCCC"> by</font>

394
00:19:25,070 --> 00:19:28,669
control the<font color="#E5E5E5"> one that I that I used was</font>

395
00:19:26,870 --> 00:19:30,560
already on the<font color="#CCCCCC"> board</font><font color="#E5E5E5"> which it was used</font>

396
00:19:28,670 --> 00:19:35,000
actually for<font color="#E5E5E5"> debugging purposes but</font><font color="#CCCCCC"> I</font>

397
00:19:30,560 --> 00:19:37,700
kind of abused it<font color="#CCCCCC"> too to</font><font color="#E5E5E5"> communicate</font><font color="#CCCCCC"> but</font>

398
00:19:35,000 --> 00:19:41,180
<font color="#E5E5E5">if you put some other for example one</font><font color="#CCCCCC"> of</font>

399
00:19:37,700 --> 00:19:45,020
these<font color="#CCCCCC"> Nordic</font><font color="#E5E5E5"> kids that they support also</font>

400
00:19:41,180 --> 00:19:47,840
<font color="#E5E5E5">like Bluetooth NFC and USB so</font><font color="#CCCCCC"> you can</font>

401
00:19:45,020 --> 00:19:50,750
actually connect your your<font color="#E5E5E5"> wallet to</font>

402
00:19:47,840 --> 00:19:53,300
anything and you<font color="#E5E5E5"> don't you don't care if</font>

403
00:19:50,750 --> 00:19:55,220
there is a vulnerability<font color="#E5E5E5"> in that</font>

404
00:19:53,300 --> 00:19:59,180
communication<font color="#CCCCCC"> stack because all you care</font>

405
00:19:55,220 --> 00:20:01,880
about is that this software<font color="#E5E5E5"> runs as</font>

406
00:19:59,180 --> 00:20:04,310
intended<font color="#E5E5E5"> because</font><font color="#CCCCCC"> in again you are</font><font color="#E5E5E5"> the</font>

407
00:20:01,880 --> 00:20:06,980
one who has the<font color="#E5E5E5"> the last</font><font color="#CCCCCC"> word</font>

408
00:20:04,310 --> 00:20:09,560
<font color="#CCCCCC">she wants</font><font color="#E5E5E5"> to sign a transaction maybe</font>

409
00:20:06,980 --> 00:20:12,170
one of<font color="#E5E5E5"> the next things to implement</font>

410
00:20:09,560 --> 00:20:14,149
would be also the recovery seed<font color="#CCCCCC"> - to</font>

411
00:20:12,170 --> 00:20:16,100
<font color="#E5E5E5">implement these three bit coding</font>

412
00:20:14,150 --> 00:20:17,780
fermentation proposals and<font color="#E5E5E5"> any more</font>

413
00:20:16,100 --> 00:20:22,280
cryptocurrencies but yeah<font color="#E5E5E5"> you're welcome</font>

414
00:20:17,780 --> 00:20:41,990
<font color="#E5E5E5">to commit codes for that and any</font>

415
00:20:22,280 --> 00:20:45,770
questions any<font color="#CCCCCC"> questions yeah very nice</font>

416
00:20:41,990 --> 00:20:47,390
<font color="#CCCCCC">so there KL 82 chip and there's</font><font color="#E5E5E5"> 81 and</font>

417
00:20:45,770 --> 00:20:50,540
anti tampering I believe there are<font color="#CCCCCC"> two</font>

418
00:20:47,390 --> 00:20:53,320
<font color="#E5E5E5">separate chips how do they differ</font><font color="#CCCCCC"> do</font>

419
00:20:50,540 --> 00:20:57,290
they require<font color="#CCCCCC"> NDA's and do they support</font>

420
00:20:53,320 --> 00:20:59,899
other than<font color="#CCCCCC"> the SEC k2</font><font color="#E5E5E5"> fifty sixty one</font>

421
00:20:57,290 --> 00:21:02,180
yeah so first yeah I didn't sorry I

422
00:20:59,900 --> 00:21:05,720
didn't I didn't elaborate that further

423
00:21:02,180 --> 00:21:10,190
there is K 82 and there is KL 82 so<font color="#E5E5E5"> okay</font>

424
00:21:05,720 --> 00:21:12,920
82 is based on cortex m4<font color="#E5E5E5"> and KL 82 is</font>

425
00:21:10,190 --> 00:21:15,800
based on cortex m0 and it's I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> the</font>

426
00:21:12,920 --> 00:21:18,800
board price is like twice two times

427
00:21:15,800 --> 00:21:21,080
smaller<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's it's 50%</font><font color="#E5E5E5"> cheaper and</font>

428
00:21:18,800 --> 00:21:23,960
therefore<font color="#E5E5E5"> it's maybe better if you want</font>

429
00:21:21,080 --> 00:21:26,419
to if you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> us to give it a shot to</font>

430
00:21:23,960 --> 00:21:30,320
try<font color="#CCCCCC"> this code yourself but the only</font>

431
00:21:26,420 --> 00:21:35,900
difference<font color="#E5E5E5"> between these K 80/20 KL 82</font>

432
00:21:30,320 --> 00:21:37,939
is and<font color="#CCCCCC"> k & KL 81 is because they have</font>

433
00:21:35,900 --> 00:21:40,670
another peripheral<font color="#E5E5E5"> that is responsible</font>

434
00:21:37,940 --> 00:21:43,280
<font color="#CCCCCC">for like if we need</font><font color="#E5E5E5"> to write the code</font>

435
00:21:40,670 --> 00:21:45,860
for<font color="#E5E5E5"> for like anti-tamper</font><font color="#CCCCCC"> for probable</font>

436
00:21:43,280 --> 00:21:48,320
<font color="#CCCCCC">activity they support I think</font><font color="#E5E5E5"> mesh</font>

437
00:21:45,860 --> 00:21:49,939
protection and stuff like<font color="#E5E5E5"> that but</font><font color="#CCCCCC"> you</font>

438
00:21:48,320 --> 00:21:51,830
need<font color="#E5E5E5"> to sign an NDA for</font><font color="#CCCCCC"> that I didn't</font>

439
00:21:49,940 --> 00:21:55,250
sign an NDA<font color="#CCCCCC"> I didn't even get in get in</font>

440
00:21:51,830 --> 00:21:58,070
touch<font color="#CCCCCC"> with the chip vendor so yeah I am</font>

441
00:21:55,250 --> 00:21:59,720
just<font color="#E5E5E5"> expressing my opinion here or are</font>

442
00:21:58,070 --> 00:22:01,879
<font color="#E5E5E5">they useful at all without an NDA do</font>

443
00:21:59,720 --> 00:22:04,130
they support<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Copeland's curves</font><font color="#CCCCCC"> do</font>

444
00:22:01,880 --> 00:22:04,610
they support exactly editors yeah

445
00:22:04,130 --> 00:22:06,410
exactly

446
00:22:04,610 --> 00:22:08,929
everything is supported except for this

447
00:22:06,410 --> 00:22:11,510
<font color="#E5E5E5">anti-tamper part</font><font color="#CCCCCC"> yeah I use them for</font><font color="#E5E5E5"> a</font>

448
00:22:08,930 --> 00:22:12,830
<font color="#E5E5E5">further for this purpose and they have</font>

449
00:22:11,510 --> 00:22:14,240
<font color="#E5E5E5">Edwards and Montgomery curves</font>

450
00:22:12,830 --> 00:22:15,649
as well thank you five five one nine<font color="#CCCCCC"> oh</font>

451
00:22:14,240 --> 00:22:16,850
that's very nice<font color="#E5E5E5"> yeah yeah it's like</font>

452
00:22:15,649 --> 00:22:20,418
that<font color="#CCCCCC"> that's why I use this one because</font>

453
00:22:16,850 --> 00:22:23,899
<font color="#E5E5E5">I've actually checked many different</font>

454
00:22:20,419 --> 00:22:28,789
microcontrollers and this one was by far

455
00:22:23,899 --> 00:22:34,129
<font color="#CCCCCC">the</font><font color="#E5E5E5"> most advanced I could find so thank</font>

456
00:22:28,789 --> 00:22:35,160
you any<font color="#E5E5E5"> other questions</font><font color="#CCCCCC"> okay thank you</font>

457
00:22:34,130 --> 00:22:42,189
<font color="#E5E5E5">very much</font>

458
00:22:35,160 --> 00:22:42,189
[Applause]

459
00:23:02,590 --> 00:23:05,590
<font color="#E5E5E5">well</font>

460
00:25:38,070 --> 00:25:41,070
wait

461
00:28:29,710 --> 00:28:32,839
[Music]

