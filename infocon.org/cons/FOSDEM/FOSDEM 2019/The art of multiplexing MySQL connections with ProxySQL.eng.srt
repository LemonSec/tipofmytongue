1
00:00:05,350 --> 00:00:11,000
welcome<font color="#E5E5E5"> everybody</font><font color="#CCCCCC"> this presentation is</font>

2
00:00:08,180 --> 00:00:13,519
about<font color="#E5E5E5"> proxy sequent mirroring so what we</font>

3
00:00:11,000 --> 00:00:15,920
do we do basically support but we'll

4
00:00:13,519 --> 00:00:18,710
just<font color="#CCCCCC"> skip here Who</font><font color="#E5E5E5"> am I and Veronica now</font>

5
00:00:15,920 --> 00:00:20,720
and the other proxy sequel founder of

6
00:00:18,710 --> 00:00:22,900
the same company and<font color="#E5E5E5"> my background is</font>

7
00:00:20,720 --> 00:00:26,960
<font color="#CCCCCC">I'm a sequin BBA for quite a long time</font>

8
00:00:22,900 --> 00:00:28,430
<font color="#E5E5E5">so quick overview what what is proxy</font>

9
00:00:26,960 --> 00:00:32,390
<font color="#CCCCCC">sequel how many of you</font><font color="#E5E5E5"> are familiar with</font>

10
00:00:28,430 --> 00:00:37,309
<font color="#E5E5E5">it or know it today how many</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> you are</font>

11
00:00:32,390 --> 00:00:39,019
using<font color="#E5E5E5"> it</font><font color="#CCCCCC"> ok ok so basically you know</font>

12
00:00:37,309 --> 00:00:41,570
actually what it is is<font color="#CCCCCC"> a proxy that is</font>

13
00:00:39,019 --> 00:00:44,299
protocol aware and that sits between the

14
00:00:41,570 --> 00:00:44,809
application and the<font color="#CCCCCC"> back-end</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Masuka</font>

15
00:00:44,299 --> 00:00:46,909
server

16
00:00:44,809 --> 00:00:48,860
it<font color="#E5E5E5"> kept</font><font color="#CCCCCC"> requests from</font><font color="#E5E5E5"> the application it</font>

17
00:00:46,909 --> 00:00:51,350
<font color="#E5E5E5">process them decide what to do with them</font>

18
00:00:48,860 --> 00:00:53,570
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> performance action based on</font>

19
00:00:51,350 --> 00:00:57,680
internal some internal logic it is<font color="#E5E5E5"> all</font>

20
00:00:53,570 --> 00:00:59,360
programmable<font color="#CCCCCC"> ok so there is a</font><font color="#E5E5E5"> bunch of</font>

21
00:00:57,680 --> 00:01:01,640
features<font color="#E5E5E5"> that I'm not going to go on</font>

22
00:00:59,360 --> 00:01:03,350
this<font color="#E5E5E5"> presentation but the most important</font>

23
00:01:01,640 --> 00:01:05,930
features<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> are going to discuss is</font>

24
00:01:03,350 --> 00:01:10,370
about multiplexing<font color="#CCCCCC"> and the reason behind</font>

25
00:01:05,930 --> 00:01:12,200
this is is to try<font color="#CCCCCC"> to solve</font><font color="#E5E5E5"> one specific</font>

26
00:01:10,370 --> 00:01:14,690
<font color="#E5E5E5">problem that is quite common</font><font color="#CCCCCC"> in my</font>

27
00:01:12,200 --> 00:01:17,000
sequel in my sequel server<font color="#CCCCCC"> when you have</font>

28
00:01:14,690 --> 00:01:19,160
a lot<font color="#CCCCCC"> of connection out</font><font color="#E5E5E5"> of kind</font>

29
00:01:17,000 --> 00:01:22,370
connection performance tends to degrade

30
00:01:19,160 --> 00:01:24,320
<font color="#E5E5E5">very badly the higher the number of</font>

31
00:01:22,370 --> 00:01:26,930
connection like thousand connection or

32
00:01:24,320 --> 00:01:31,580
<font color="#E5E5E5">10,000 for connection performance drops</font>

33
00:01:26,930 --> 00:01:34,040
drastically<font color="#E5E5E5"> here we have a graphs about</font>

34
00:01:31,580 --> 00:01:37,850
one specific use case in which

35
00:01:34,040 --> 00:01:39,680
replication was lagging<font color="#E5E5E5"> and the only</font>

36
00:01:37,850 --> 00:01:42,169
<font color="#CCCCCC">reason why replication was lagging was</font>

37
00:01:39,680 --> 00:01:43,730
because they were too many<font color="#E5E5E5"> connection to</font>

38
00:01:42,170 --> 00:01:45,800
that server<font color="#E5E5E5"> those connection were</font>

39
00:01:43,730 --> 00:01:48,530
absolutely idle they were not<font color="#E5E5E5"> processing</font>

40
00:01:45,800 --> 00:01:50,539
<font color="#E5E5E5">any</font><font color="#CCCCCC"> requests</font><font color="#E5E5E5"> the only thread that was</font>

41
00:01:48,530 --> 00:01:53,600
running<font color="#E5E5E5"> and doing some</font><font color="#CCCCCC"> work on this</font>

42
00:01:50,540 --> 00:01:55,729
server was replication and<font color="#E5E5E5"> replication</font>

43
00:01:53,600 --> 00:01:58,039
was just lagging as soon as they killed

44
00:01:55,729 --> 00:01:59,659
<font color="#E5E5E5">all the of the auto connection</font>

45
00:01:58,040 --> 00:02:02,630
<font color="#E5E5E5">replication was able to catch</font><font color="#CCCCCC"> on and</font>

46
00:01:59,659 --> 00:02:04,640
<font color="#CCCCCC">they</font><font color="#E5E5E5"> identified this one because they</font>

47
00:02:02,630 --> 00:02:07,789
had two different server with same specs

48
00:02:04,640 --> 00:02:09,709
one with connection connected to to the

49
00:02:07,790 --> 00:02:11,930
server one without the and the one

50
00:02:09,709 --> 00:02:13,610
<font color="#E5E5E5">without connection was not</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> so</font>

51
00:02:11,930 --> 00:02:15,920
the only<font color="#E5E5E5"> reason why one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the two slave</font>

52
00:02:13,610 --> 00:02:20,480
was lagging was because it has tens of

53
00:02:15,920 --> 00:02:22,280
thousands<font color="#E5E5E5"> of connection so a quick</font>

54
00:02:20,480 --> 00:02:24,709
overview<font color="#CCCCCC"> of what are the BIOS</font><font color="#E5E5E5"> leading</font>

55
00:02:22,280 --> 00:02:27,319
models that this can apply on any sort

56
00:02:24,709 --> 00:02:29,540
<font color="#E5E5E5">of software so you can have either one</font>

57
00:02:27,319 --> 00:02:31,310
thread<font color="#CCCCCC"> per connection or in some other</font>

58
00:02:29,540 --> 00:02:33,650
system you can<font color="#E5E5E5"> have</font><font color="#CCCCCC"> having one process</font>

59
00:02:31,310 --> 00:02:36,530
per connection<font color="#E5E5E5"> like in Postgres</font><font color="#CCCCCC"> or you</font>

60
00:02:33,650 --> 00:02:37,220
have some thread<font color="#CCCCCC"> pool pros and cons</font><font color="#E5E5E5"> of</font>

61
00:02:36,530 --> 00:02:40,310
both of them

62
00:02:37,220 --> 00:02:42,050
well<font color="#E5E5E5"> the process of one tooth per</font>

63
00:02:40,310 --> 00:02:45,230
connection is that<font color="#E5E5E5"> is easy to</font><font color="#CCCCCC"> develop</font>

64
00:02:42,050 --> 00:02:47,390
because<font color="#E5E5E5"> you know every every thread is</font>

65
00:02:45,230 --> 00:02:49,880
<font color="#E5E5E5">just</font><font color="#CCCCCC"> handling one</font><font color="#E5E5E5"> collection on the</font>

66
00:02:47,390 --> 00:02:52,250
other hands<font color="#CCCCCC"> one of the problem</font><font color="#E5E5E5"> is this</font>

67
00:02:49,880 --> 00:02:55,220
working<font color="#E5E5E5"> on you so that that specific</font>

68
00:02:52,250 --> 00:02:57,230
thread has to handle all the<font color="#E5E5E5"> connect</font><font color="#CCCCCC"> or</font>

69
00:02:55,220 --> 00:02:58,790
the specific connection at the guys on

70
00:02:57,230 --> 00:03:01,190
the other hand if you<font color="#CCCCCC"> were using thread</font>

71
00:02:58,790 --> 00:03:02,720
pool<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> way more</font><font color="#E5E5E5"> difficult to</font>

72
00:03:01,190 --> 00:03:04,220
<font color="#CCCCCC">implement because</font><font color="#E5E5E5"> you have one single</font>

73
00:03:02,720 --> 00:03:06,709
<font color="#E5E5E5">thread it has to manage multiple</font>

74
00:03:04,220 --> 00:03:08,480
connection<font color="#E5E5E5"> by the same time is way more</font>

75
00:03:06,709 --> 00:03:11,239
scalable because<font color="#CCCCCC"> you don't have so many</font>

76
00:03:08,480 --> 00:03:15,049
connection so you don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> so many</font>

77
00:03:11,239 --> 00:03:18,260
threads so my sequel by default<font color="#E5E5E5"> it</font><font color="#CCCCCC"> has</font>

78
00:03:15,050 --> 00:03:22,099
one thread<font color="#CCCCCC"> per connection</font><font color="#E5E5E5"> and of course</font>

79
00:03:18,260 --> 00:03:23,599
this has some cost the cost again is not

80
00:03:22,099 --> 00:03:25,519
specific to<font color="#E5E5E5"> my sequel but any</font>

81
00:03:23,599 --> 00:03:27,880
application<font color="#CCCCCC"> that use this model</font><font color="#E5E5E5"> of</font>

82
00:03:25,520 --> 00:03:31,160
having<font color="#E5E5E5"> one thread per</font><font color="#CCCCCC"> connection</font>

83
00:03:27,880 --> 00:03:32,900
<font color="#E5E5E5">basically in short we have a lot of</font>

84
00:03:31,160 --> 00:03:35,270
software thread while the number of this

85
00:03:32,900 --> 00:03:37,340
<font color="#E5E5E5">path read that are in the CPU are way</font>

86
00:03:35,270 --> 00:03:39,890
less so you have a lot of<font color="#CCCCCC"> context which</font>

87
00:03:37,340 --> 00:03:41,629
because the CPU every time has a switch

88
00:03:39,890 --> 00:03:44,450
from<font color="#E5E5E5"> one of the thread to another one</font>

89
00:03:41,629 --> 00:03:47,030
the<font color="#E5E5E5"> number of registry has to do all the</font>

90
00:03:44,450 --> 00:03:49,429
context switching and you know you have

91
00:03:47,030 --> 00:03:51,230
<font color="#E5E5E5">mutex and contention between all those</font>

92
00:03:49,430 --> 00:03:52,780
<font color="#E5E5E5">threads</font><font color="#CCCCCC"> and at the same time</font><font color="#E5E5E5"> the CPU</font>

93
00:03:51,230 --> 00:03:55,640
<font color="#CCCCCC">cache most of the time is absolutely</font>

94
00:03:52,780 --> 00:03:58,810
<font color="#E5E5E5">useless because all the context has been</font>

95
00:03:55,640 --> 00:04:01,160
moved in and out from<font color="#E5E5E5"> the CPU cache and</font>

96
00:03:58,810 --> 00:04:03,560
for the same reason<font color="#CCCCCC"> you have to access</font>

97
00:04:01,160 --> 00:04:06,410
memory<font color="#E5E5E5"> so a physical memory is way more</font>

98
00:04:03,560 --> 00:04:11,540
expensive<font color="#E5E5E5"> than accessing the cache in</font>

99
00:04:06,410 --> 00:04:14,269
the<font color="#E5E5E5"> CPU so what about implementation</font><font color="#CCCCCC"> of</font>

100
00:04:11,540 --> 00:04:15,890
<font color="#E5E5E5">pool of thread pool so normally what you</font>

101
00:04:14,269 --> 00:04:17,569
have is one<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> accepting of the</font>

102
00:04:15,890 --> 00:04:19,699
connection<font color="#E5E5E5"> and then these threads</font>

103
00:04:17,569 --> 00:04:22,430
normally passing the connection to to a

104
00:04:19,699 --> 00:04:27,919
set of threads pool that is that they

105
00:04:22,430 --> 00:04:29,770
want processing the request<font color="#CCCCCC"> in my sequel</font>

106
00:04:27,919 --> 00:04:31,690
<font color="#E5E5E5">the this is not the</font>

107
00:04:29,770 --> 00:04:34,448
<font color="#CCCCCC">forth</font><font color="#E5E5E5"> but if you're using my sequel</font>

108
00:04:31,690 --> 00:04:36,759
<font color="#CCCCCC">enterprise you have a thread pool maya</font>

109
00:04:34,449 --> 00:04:39,669
DB and then<font color="#CCCCCC"> Percona implemented their</font>

110
00:04:36,759 --> 00:04:42,400
own version of thread pool<font color="#E5E5E5"> the way it</font>

111
00:04:39,669 --> 00:04:44,289
works is that all the new<font color="#CCCCCC"> connection</font><font color="#E5E5E5"> are</font>

112
00:04:42,400 --> 00:04:45,849
<font color="#E5E5E5">being accepted</font><font color="#CCCCCC"> by one listener</font><font color="#E5E5E5"> and then</font>

113
00:04:44,289 --> 00:04:48,909
this listener is passing the connection

114
00:04:45,849 --> 00:04:50,560
to thread pool and that specific<font color="#E5E5E5"> that</font>

115
00:04:48,909 --> 00:04:51,819
<font color="#CCCCCC">police the water is going</font><font color="#E5E5E5"> to handle</font><font color="#CCCCCC"> this</font>

116
00:04:50,560 --> 00:04:54,400
connection until interconnection

117
00:04:51,819 --> 00:04:56,259
<font color="#E5E5E5">disconnect</font><font color="#CCCCCC"> and of course because of</font>

118
00:04:54,400 --> 00:04:59,138
<font color="#E5E5E5">using of the use of the thread</font><font color="#CCCCCC"> pool</font>

119
00:04:56,259 --> 00:05:03,639
performance<font color="#E5E5E5"> a lot better if you use in</font>

120
00:04:59,139 --> 00:05:05,380
<font color="#E5E5E5">this great what</font><font color="#CCCCCC"> about the proxy sequel</font>

121
00:05:03,639 --> 00:05:07,419
implementation of thread pooling<font color="#E5E5E5"> proxy</font>

122
00:05:05,380 --> 00:05:09,580
<font color="#E5E5E5">cyclists</font><font color="#CCCCCC"> slightly</font><font color="#E5E5E5"> different</font>

123
00:05:07,419 --> 00:05:11,469
instead of having one listener<font color="#E5E5E5"> or what</font>

124
00:05:09,580 --> 00:05:13,359
<font color="#E5E5E5">we have</font><font color="#CCCCCC"> is that all the threads in</font>

125
00:05:11,470 --> 00:05:15,880
<font color="#E5E5E5">proxies equal they</font><font color="#CCCCCC"> are all</font><font color="#E5E5E5"> listening on</font>

126
00:05:13,360 --> 00:05:17,169
the same port so one of the thread<font color="#E5E5E5"> is</font>

127
00:05:15,880 --> 00:05:19,479
<font color="#CCCCCC">the</font><font color="#E5E5E5"> wire is going to get</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> connection</font>

128
00:05:17,169 --> 00:05:24,789
<font color="#E5E5E5">and it will be handling the connection</font>

129
00:05:19,479 --> 00:05:27,130
until<font color="#E5E5E5"> the client</font><font color="#CCCCCC"> that is connect so it</font>

130
00:05:24,789 --> 00:05:29,199
has some process that<font color="#CCCCCC"> basically there is</font>

131
00:05:27,130 --> 00:05:30,909
no context switching between the thread

132
00:05:29,199 --> 00:05:34,690
because all the<font color="#E5E5E5"> information are always</font>

133
00:05:30,909 --> 00:05:36,669
stays locally specific<font color="#E5E5E5"> thread of course</font>

134
00:05:34,690 --> 00:05:38,590
it has also some cons because<font color="#E5E5E5"> you can be</font>

135
00:05:36,669 --> 00:05:42,549
<font color="#E5E5E5">happened that the threads are unbalanced</font>

136
00:05:38,590 --> 00:05:45,549
<font color="#E5E5E5">but this is</font><font color="#CCCCCC"> a quite a rare case okay so</font>

137
00:05:42,550 --> 00:05:47,979
we have proxy sequel fast isn't it<font color="#E5E5E5"> cool</font>

138
00:05:45,550 --> 00:05:50,229
does this solve the problem of my secret

139
00:05:47,979 --> 00:05:51,580
having a lot<font color="#E5E5E5"> of connection</font><font color="#CCCCCC"> in reality</font>

140
00:05:50,229 --> 00:05:53,680
this by itself does not<font color="#E5E5E5"> solve the</font>

141
00:05:51,580 --> 00:05:55,900
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> the reason why it doesn't solve</font>

142
00:05:53,680 --> 00:05:58,389
the problem is that of<font color="#E5E5E5"> course having</font>

143
00:05:55,900 --> 00:06:00,370
proxy sequel is on thread<font color="#CCCCCC"> bullet you to</font>

144
00:05:58,389 --> 00:06:02,889
improve<font color="#E5E5E5"> the</font><font color="#CCCCCC"> performance of the proxy</font><font color="#E5E5E5"> but</font>

145
00:06:00,370 --> 00:06:04,569
<font color="#CCCCCC">it does not solve the</font><font color="#E5E5E5"> problem that you</font>

146
00:06:02,889 --> 00:06:07,840
may have<font color="#E5E5E5"> a</font><font color="#CCCCCC"> still a lot of</font><font color="#E5E5E5"> connection to</font>

147
00:06:04,569 --> 00:06:11,650
<font color="#E5E5E5">the wave server</font><font color="#CCCCCC"> the reason</font><font color="#E5E5E5"> being is that</font>

148
00:06:07,840 --> 00:06:13,900
<font color="#CCCCCC">then</font><font color="#E5E5E5"> a lot of proxies if they are</font>

149
00:06:11,650 --> 00:06:15,969
<font color="#E5E5E5">layered for proxy but</font><font color="#CCCCCC"> also layer</font><font color="#E5E5E5"> seven</font>

150
00:06:13,900 --> 00:06:18,130
proxy what they normally<font color="#E5E5E5"> do is that for</font>

151
00:06:15,969 --> 00:06:19,360
<font color="#CCCCCC">every client connection they create one</font>

152
00:06:18,130 --> 00:06:21,940
back-end connection so there is a

153
00:06:19,360 --> 00:06:23,620
<font color="#E5E5E5">one-to-one mapping and of course this of</font>

154
00:06:21,940 --> 00:06:25,120
course does<font color="#CCCCCC"> not scale because if you</font>

155
00:06:23,620 --> 00:06:26,860
have tens of<font color="#CCCCCC"> thousands of evaluation</font><font color="#E5E5E5"> on</font>

156
00:06:25,120 --> 00:06:28,960
<font color="#E5E5E5">the proxy sequence you will have</font><font color="#CCCCCC"> tens of</font>

157
00:06:26,860 --> 00:06:34,210
<font color="#CCCCCC">thousands of connection to the database</font>

158
00:06:28,960 --> 00:06:36,310
<font color="#E5E5E5">server so</font><font color="#CCCCCC"> proxy sequel has his own</font>

159
00:06:34,210 --> 00:06:38,580
different implementation what it does is

160
00:06:36,310 --> 00:06:42,279
that<font color="#E5E5E5"> it has its</font><font color="#CCCCCC"> own connection pool and</font>

161
00:06:38,580 --> 00:06:43,490
when a<font color="#CCCCCC"> connection</font><font color="#E5E5E5"> is being used after it</font>

162
00:06:42,279 --> 00:06:45,169
executes a query

163
00:06:43,490 --> 00:06:47,300
my disconnection goes<font color="#E5E5E5"> back immediately</font>

164
00:06:45,169 --> 00:06:49,549
<font color="#E5E5E5">to the connection pool assuming</font><font color="#CCCCCC"> that the</font>

165
00:06:47,300 --> 00:06:51,560
connection is safe to be<font color="#CCCCCC"> shared one</font>

166
00:06:49,550 --> 00:06:53,240
connection<font color="#E5E5E5"> is safe to be shared means it</font>

167
00:06:51,560 --> 00:06:54,979
is no<font color="#E5E5E5"> transaction running in the</font>

168
00:06:53,240 --> 00:06:56,870
connection<font color="#E5E5E5"> there are no temperate</font><font color="#CCCCCC"> able</font>

169
00:06:54,979 --> 00:06:58,340
<font color="#E5E5E5">there are no user defined by the</font><font color="#CCCCCC"> boil</font>

170
00:06:56,870 --> 00:07:00,889
<font color="#CCCCCC">accessor so there are a certain number</font>

171
00:06:58,340 --> 00:07:03,109
<font color="#E5E5E5">of criteria that define whatever the</font>

172
00:07:00,889 --> 00:07:06,229
connection<font color="#CCCCCC"> is safe to be shared or</font><font color="#E5E5E5"> not</font>

173
00:07:03,110 --> 00:07:08,120
<font color="#CCCCCC">and if it is safe just be compact to the</font>

174
00:07:06,229 --> 00:07:10,550
connection pool so<font color="#E5E5E5"> the next client</font>

175
00:07:08,120 --> 00:07:15,710
<font color="#CCCCCC">request can be you can be executed</font><font color="#E5E5E5"> in</font>

176
00:07:10,550 --> 00:07:17,660
<font color="#E5E5E5">that</font><font color="#CCCCCC"> specific client connection and well</font>

177
00:07:15,710 --> 00:07:20,539
<font color="#E5E5E5">so basically</font><font color="#CCCCCC"> what we can have is that we</font>

178
00:07:17,660 --> 00:07:23,810
can have 10,000<font color="#E5E5E5"> of frontal connection</font>

179
00:07:20,539 --> 00:07:28,580
that go<font color="#CCCCCC"> funneled into very few back-end</font>

180
00:07:23,810 --> 00:07:31,400
connection so basically this<font color="#CCCCCC"> is how Cox</font>

181
00:07:28,580 --> 00:07:33,320
is equal performs multiplexing<font color="#E5E5E5"> so again</font>

182
00:07:31,400 --> 00:07:35,330
you can define the number of<font color="#CCCCCC"> packin</font>

183
00:07:33,320 --> 00:07:37,250
connection and the number of<font color="#CCCCCC"> fronting</font>

184
00:07:35,330 --> 00:07:41,419
connection can<font color="#CCCCCC"> be extremely slimming</font>

185
00:07:37,250 --> 00:07:44,060
higher of course<font color="#CCCCCC"> there</font><font color="#E5E5E5"> are certain</font>

186
00:07:41,419 --> 00:07:46,370
<font color="#E5E5E5">criteria that automatically disable</font>

187
00:07:44,060 --> 00:07:47,900
multiplexing<font color="#E5E5E5"> they are listed here</font><font color="#CCCCCC"> like</font>

188
00:07:46,370 --> 00:07:50,030
for<font color="#E5E5E5"> example if there is</font><font color="#CCCCCC"> a an active</font>

189
00:07:47,900 --> 00:07:51,620
transaction the connection cannot be

190
00:07:50,030 --> 00:07:54,320
shared until the transaction<font color="#E5E5E5"> is</font>

191
00:07:51,620 --> 00:07:56,300
completed<font color="#E5E5E5"> or if you for example</font><font color="#CCCCCC"> if there</font>

192
00:07:54,320 --> 00:07:58,789
<font color="#CCCCCC">is some cable lock</font><font color="#E5E5E5"> so if you have</font>

193
00:07:56,300 --> 00:08:00,650
executed<font color="#E5E5E5"> a log table or</font><font color="#CCCCCC"> flush table with</font>

194
00:07:58,789 --> 00:08:02,449
read lock and that specific connection

195
00:08:00,650 --> 00:08:06,590
that<font color="#E5E5E5"> connection cannot be shared again</font>

196
00:08:02,449 --> 00:08:08,900
until<font color="#CCCCCC"> unlock table is executed same</font>

197
00:08:06,590 --> 00:08:10,580
thing happened with gate lock if you

198
00:08:08,900 --> 00:08:12,739
execute<font color="#E5E5E5"> gate lock that connection cannot</font>

199
00:08:10,580 --> 00:08:16,060
be shared<font color="#E5E5E5"> any more surprises there are</font>

200
00:08:12,740 --> 00:08:16,060
<font color="#E5E5E5">still a lot of application it use it</font>

201
00:08:17,800 --> 00:08:24,349
other<font color="#E5E5E5"> criteria for disabling being log</font>

202
00:08:20,570 --> 00:08:26,509
is that if you execute set SQL or SQL

203
00:08:24,349 --> 00:08:27,979
log being equal to<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> after you</font>

204
00:08:26,509 --> 00:08:29,740
execute<font color="#CCCCCC"> this</font><font color="#E5E5E5"> of course that connection</font>

205
00:08:27,979 --> 00:08:31,849
<font color="#E5E5E5">cannot be shared anymore because</font>

206
00:08:29,740 --> 00:08:34,219
<font color="#E5E5E5">otherwise this means that other</font>

207
00:08:31,849 --> 00:08:35,779
connection<font color="#E5E5E5"> would have</font><font color="#CCCCCC"> one log disabled</font>

208
00:08:34,219 --> 00:08:38,810
and of course<font color="#CCCCCC"> it is not something good</font>

209
00:08:35,779 --> 00:08:41,659
sorry<font color="#E5E5E5"> and multiplexing is automatically</font>

210
00:08:38,809 --> 00:08:43,789
<font color="#CCCCCC">enabled</font><font color="#E5E5E5"> when you issue a set s ql log</font>

211
00:08:41,659 --> 00:08:45,649
being equal<font color="#E5E5E5"> one so as soon as you enable</font>

212
00:08:43,789 --> 00:08:48,890
it<font color="#E5E5E5"> the multiplexing is automatically</font>

213
00:08:45,649 --> 00:08:50,630
enabled<font color="#E5E5E5"> it</font><font color="#CCCCCC"> another reason why</font>

214
00:08:48,890 --> 00:08:53,140
multiplexing is disabled<font color="#E5E5E5"> is when you</font>

215
00:08:50,630 --> 00:08:56,889
execute<font color="#E5E5E5"> a temporary table or if you use</font>

216
00:08:53,140 --> 00:08:59,750
SQL called found rows or prepare

217
00:08:56,889 --> 00:09:04,550
prepare is the text<font color="#E5E5E5"> protocol version of</font>

218
00:08:59,750 --> 00:09:07,220
the<font color="#CCCCCC"> purpose statement</font><font color="#E5E5E5"> other reason there</font>

219
00:09:04,550 --> 00:09:09,258
are a lot<font color="#CCCCCC"> of session variables that when</font>

220
00:09:07,220 --> 00:09:11,089
they<font color="#E5E5E5"> are enabled</font><font color="#CCCCCC"> proxy</font><font color="#E5E5E5"> sequel</font>

221
00:09:09,259 --> 00:09:13,399
automatically disable multiplexing<font color="#E5E5E5"> here</font>

222
00:09:11,089 --> 00:09:15,470
<font color="#CCCCCC">I listed some of them like set unique</font>

223
00:09:13,399 --> 00:09:18,290
check or set out increment increment

224
00:09:15,470 --> 00:09:21,189
<font color="#CCCCCC">foreign key</font><font color="#E5E5E5"> check and so on if the</font>

225
00:09:18,290 --> 00:09:25,810
client<font color="#E5E5E5"> executes one of those</font>

226
00:09:21,189 --> 00:09:25,810
multiplexing is automatically disabled

227
00:09:26,410 --> 00:09:32,990
now by default<font color="#E5E5E5"> is also</font><font color="#CCCCCC"> disable</font>

228
00:09:29,569 --> 00:09:35,360
multiplexing<font color="#E5E5E5"> for every query that has</font>

229
00:09:32,990 --> 00:09:40,069
<font color="#E5E5E5">the app that is normally useful user</font>

230
00:09:35,360 --> 00:09:41,689
<font color="#E5E5E5">variable or system variable and no</font>

231
00:09:40,069 --> 00:09:43,759
matter if you<font color="#E5E5E5"> are setting</font><font color="#CCCCCC"> it or if you</font>

232
00:09:41,689 --> 00:09:46,399
are reading it<font color="#CCCCCC"> and this of course can be</font>

233
00:09:43,759 --> 00:09:49,699
problematic if you are using<font color="#E5E5E5"> some more</font>

234
00:09:46,399 --> 00:09:51,649
<font color="#E5E5E5">RAM or some</font><font color="#CCCCCC"> do DBC driver that is</font>

235
00:09:49,699 --> 00:09:53,449
actually it<font color="#CCCCCC"> won't to read all the</font>

236
00:09:51,649 --> 00:09:55,579
session variables so it<font color="#E5E5E5"> performs some</font>

237
00:09:53,449 --> 00:09:58,250
sex<font color="#E5E5E5"> that</font><font color="#CCCCCC"> maintain which specify this act</font>

238
00:09:55,579 --> 00:09:59,959
and so for those specific query<font color="#E5E5E5"> you are</font>

239
00:09:58,250 --> 00:10:03,680
also able to<font color="#E5E5E5"> create rules</font><font color="#CCCCCC"> that</font>

240
00:09:59,959 --> 00:10:07,369
automatically reenable multiplexing<font color="#CCCCCC"> if</font>

241
00:10:03,680 --> 00:10:13,550
there are such queries<font color="#CCCCCC"> ok questions so</font>

242
00:10:07,370 --> 00:10:15,529
<font color="#E5E5E5">far</font><font color="#CCCCCC"> ok one important thing to</font><font color="#E5E5E5"> remember</font>

243
00:10:13,550 --> 00:10:18,378
is that<font color="#E5E5E5"> multiplexing does not</font>

244
00:10:15,529 --> 00:10:20,029
automatically disable routing it those

245
00:10:18,379 --> 00:10:22,910
are two different<font color="#CCCCCC"> concepts</font><font color="#E5E5E5"> so you can</font>

246
00:10:20,029 --> 00:10:25,550
have multiplexing<font color="#E5E5E5"> to be disabled on a</font>

247
00:10:22,910 --> 00:10:27,139
<font color="#E5E5E5">specific connection but still you can</font>

248
00:10:25,550 --> 00:10:29,540
say you<font color="#CCCCCC"> can have declined the same</font>

249
00:10:27,139 --> 00:10:30,709
traffic<font color="#E5E5E5"> into multiple connections so one</font>

250
00:10:29,540 --> 00:10:32,420
connection<font color="#CCCCCC"> to the right and one</font>

251
00:10:30,709 --> 00:10:35,508
<font color="#E5E5E5">connection to the reader</font><font color="#CCCCCC"> or if you have</font>

252
00:10:32,420 --> 00:10:36,920
<font color="#E5E5E5">sharding you can have one connection to</font>

253
00:10:35,509 --> 00:10:39,800
one<font color="#CCCCCC"> short and other connection</font><font color="#E5E5E5"> rather</font>

254
00:10:36,920 --> 00:10:44,660
whose chart<font color="#E5E5E5"> and traffic is being</font><font color="#CCCCCC"> load</font>

255
00:10:39,800 --> 00:10:47,089
<font color="#CCCCCC">balanced based on certain criteria now</font>

256
00:10:44,660 --> 00:10:49,509
let's show some example<font color="#E5E5E5"> of how it</font>

257
00:10:47,089 --> 00:10:52,399
actually<font color="#CCCCCC"> proxy sequel help with</font>

258
00:10:49,509 --> 00:10:56,529
improving performance using<font color="#E5E5E5"> multiplexing</font>

259
00:10:52,399 --> 00:10:59,180
<font color="#E5E5E5">and what would follow is some example of</font>

260
00:10:56,529 --> 00:11:00,430
performance improvement<font color="#E5E5E5"> that we got at</font>

261
00:10:59,180 --> 00:11:04,219
Shopify

262
00:11:00,430 --> 00:11:05,630
that they are using<font color="#CCCCCC"> proxy</font><font color="#E5E5E5"> sequel on all</font>

263
00:11:04,220 --> 00:11:09,380
<font color="#CCCCCC">their infrastructure</font>

264
00:11:05,630 --> 00:11:10,250
<font color="#E5E5E5">so those are initial testing they were</font>

265
00:11:09,380 --> 00:11:12,650
doing

266
00:11:10,250 --> 00:11:17,360
so basically those are benchmark they

267
00:11:12,650 --> 00:11:21,020
were running the same<font color="#E5E5E5"> traffic directly</font>

268
00:11:17,360 --> 00:11:23,000
<font color="#E5E5E5">on my sequel and through proxy sequel so</font>

269
00:11:21,020 --> 00:11:24,500
you can easily<font color="#E5E5E5"> see the</font><font color="#CCCCCC"> difference I</font>

270
00:11:23,000 --> 00:11:28,070
don't<font color="#CCCCCC"> know if you can see the numbers</font>

271
00:11:24,500 --> 00:11:32,090
<font color="#CCCCCC">but here we are close</font><font color="#E5E5E5"> to 15,000 while</font>

272
00:11:28,070 --> 00:11:34,910
here we<font color="#CCCCCC"> are barely</font><font color="#E5E5E5"> around 700 so the</font>

273
00:11:32,090 --> 00:11:37,340
number of connection was<font color="#CCCCCC"> 5%</font><font color="#E5E5E5"> of the</font>

274
00:11:34,910 --> 00:11:41,230
<font color="#CCCCCC">original so</font><font color="#E5E5E5"> they drastically</font><font color="#CCCCCC"> reduce the</font>

275
00:11:37,340 --> 00:11:45,950
<font color="#E5E5E5">number of connection and during the same</font>

276
00:11:41,230 --> 00:11:49,520
<font color="#E5E5E5">benchmark they</font><font color="#CCCCCC"> noticed that</font><font color="#E5E5E5"> basically</font>

277
00:11:45,950 --> 00:11:51,860
<font color="#E5E5E5">the number of</font><font color="#CCCCCC"> thread running this with</font>

278
00:11:49,520 --> 00:11:53,900
my<font color="#CCCCCC"> sequel and this with proxy sequel</font><font color="#E5E5E5"> so</font>

279
00:11:51,860 --> 00:11:57,350
<font color="#CCCCCC">tread running with what my sequel was</font>

280
00:11:53,900 --> 00:11:59,150
spiking<font color="#E5E5E5"> up to to 100 while when they</font>

281
00:11:57,350 --> 00:12:00,230
were doing what they<font color="#CCCCCC"> were using proxy</font>

282
00:11:59,150 --> 00:12:04,010
see what the number of thread running

283
00:12:00,230 --> 00:12:07,430
was spiking<font color="#E5E5E5"> up to 25 this was the</font>

284
00:12:04,010 --> 00:12:10,160
maximum<font color="#E5E5E5"> thread inside you know DB before</font>

285
00:12:07,430 --> 00:12:14,510
they had<font color="#E5E5E5"> 80</font><font color="#CCCCCC"> why</font><font color="#E5E5E5"> with proxy sequel they</font>

286
00:12:10,160 --> 00:12:16,969
have some few spike<font color="#E5E5E5"> to 15 and more</font>

287
00:12:14,510 --> 00:12:19,819
interesting is that the<font color="#CCCCCC"> queue the thread</font>

288
00:12:16,970 --> 00:12:22,040
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> InnoDB queue with straight</font>

289
00:12:19,820 --> 00:12:24,280
<font color="#E5E5E5">connecting to my sequel was again</font><font color="#CCCCCC"> spiky</font>

290
00:12:22,040 --> 00:12:31,969
to 100 while with proxy<font color="#CCCCCC"> Sequoia was</font>

291
00:12:24,280 --> 00:12:35,569
<font color="#E5E5E5">threatened</font><font color="#CCCCCC"> zero next so those are other</font>

292
00:12:31,970 --> 00:12:37,910
<font color="#E5E5E5">graph graphs of some benchmark</font><font color="#CCCCCC"> and let's</font>

293
00:12:35,570 --> 00:12:39,860
<font color="#E5E5E5">start from down actually so here my</font>

294
00:12:37,910 --> 00:12:43,310
secret traffic traffic passing through

295
00:12:39,860 --> 00:12:45,800
proxies equal the number of QPS<font color="#E5E5E5"> is the</font>

296
00:12:43,310 --> 00:12:47,869
same<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> with proxy sequel is</font>

297
00:12:45,800 --> 00:12:51,800
slightly higher<font color="#E5E5E5"> so in proxy what they</font>

298
00:12:47,870 --> 00:12:54,950
were having more throughput<font color="#E5E5E5"> and the</font>

299
00:12:51,800 --> 00:12:58,790
number of the execution query time of

300
00:12:54,950 --> 00:13:01,370
the query<font color="#E5E5E5"> before was around 25,000 while</font>

301
00:12:58,790 --> 00:13:03,949
when the pass to proxy sequel was<font color="#CCCCCC"> 6000</font>

302
00:13:01,370 --> 00:13:06,320
<font color="#E5E5E5">so the execution time</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the query was</font>

303
00:13:03,950 --> 00:13:08,660
less<font color="#CCCCCC"> when passing through</font><font color="#E5E5E5"> proxy sequel</font>

304
00:13:06,320 --> 00:13:11,000
and proxy ball was not<font color="#E5E5E5"> filtering any</font>

305
00:13:08,660 --> 00:13:13,010
traffic<font color="#E5E5E5"> was not cashing anything it was</font>

306
00:13:11,000 --> 00:13:14,600
just<font color="#E5E5E5"> ordering the execution of the</font>

307
00:13:13,010 --> 00:13:17,270
community<font color="#CCCCCC"> before that before sending</font>

308
00:13:14,600 --> 00:13:19,250
them to the server so it was basically

309
00:13:17,270 --> 00:13:23,660
reducing the number of connection<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

310
00:13:19,250 --> 00:13:25,670
server it also<font color="#CCCCCC"> the response time was</font>

311
00:13:23,660 --> 00:13:27,949
<font color="#E5E5E5">drastically reduce here before the</font>

312
00:13:25,670 --> 00:13:30,469
response time was averaging<font color="#CCCCCC"> at around</font>

313
00:13:27,950 --> 00:13:32,900
<font color="#CCCCCC">1000 I think this will be millisecond</font>

314
00:13:30,470 --> 00:13:37,400
and when<font color="#CCCCCC"> the</font><font color="#E5E5E5"> switch the proxy sequel</font>

315
00:13:32,900 --> 00:13:42,920
it was around 0.3 or<font color="#E5E5E5"> 0.4 so huge</font>

316
00:13:37,400 --> 00:13:45,020
<font color="#E5E5E5">performance improvement again those are</font>

317
00:13:42,920 --> 00:13:49,219
the graph<font color="#E5E5E5"> does this actually production</font>

318
00:13:45,020 --> 00:13:50,840
production<font color="#CCCCCC"> traffic so before when they</font>

319
00:13:49,220 --> 00:13:54,800
are<font color="#E5E5E5"> connected to my sequel and when the</font>

320
00:13:50,840 --> 00:13:58,490
switch to proxy way so it passed from

321
00:13:54,800 --> 00:14:00,890
<font color="#CCCCCC">one 15,000 connection to probably hardly</font>

322
00:13:58,490 --> 00:14:03,830
<font color="#CCCCCC">hundred or something like this thread</font>

323
00:14:00,890 --> 00:14:06,949
running in my sequel again<font color="#E5E5E5"> before the</font>

324
00:14:03,830 --> 00:14:08,900
<font color="#E5E5E5">word having around</font><font color="#CCCCCC"> 20</font><font color="#E5E5E5"> spiked up to 35</font>

325
00:14:06,950 --> 00:14:11,540
<font color="#E5E5E5">when the switch to proxy seek what the</font>

326
00:14:08,900 --> 00:14:14,540
number of thread running<font color="#E5E5E5"> was around</font><font color="#CCCCCC"> 8</font>

327
00:14:11,540 --> 00:14:18,110
around<font color="#E5E5E5"> 8 less than 10 for sure</font>

328
00:14:14,540 --> 00:14:20,000
and again they got huge improve

329
00:14:18,110 --> 00:14:22,160
performance improvement in the<font color="#E5E5E5"> total</font>

330
00:14:20,000 --> 00:14:26,720
execution time that passed<font color="#E5E5E5"> from an</font>

331
00:14:22,160 --> 00:14:30,290
<font color="#CCCCCC">average of 10,000</font><font color="#E5E5E5"> up to 20,000 down to</font>

332
00:14:26,720 --> 00:14:34,880
<font color="#E5E5E5">thing less than</font><font color="#CCCCCC"> 4 something like this</font><font color="#E5E5E5"> so</font>

333
00:14:30,290 --> 00:14:37,520
huge<font color="#E5E5E5"> performance improvement</font><font color="#CCCCCC"> this is</font>

334
00:14:34,880 --> 00:14:41,360
<font color="#E5E5E5">another graphs about to some spike</font>

335
00:14:37,520 --> 00:14:43,910
traffic so when they had<font color="#E5E5E5"> those spike</font>

336
00:14:41,360 --> 00:14:48,100
traffic with my sequel the number of

337
00:14:43,910 --> 00:14:51,620
thread running spiked to 439 huge number

338
00:14:48,100 --> 00:14:55,220
and the number of<font color="#CCCCCC"> GPS on my</font><font color="#E5E5E5"> sequel was</font>

339
00:14:51,620 --> 00:14:56,570
around 35,000 but this spike<font color="#E5E5E5"> when the</font>

340
00:14:55,220 --> 00:14:59,750
switch to proxy<font color="#CCCCCC"> sequel and they had a</font>

341
00:14:56,570 --> 00:15:04,610
similar<font color="#E5E5E5"> spike</font><font color="#CCCCCC"> the number of QPS was</font>

342
00:14:59,750 --> 00:15:08,330
around 70,000 so nearly<font color="#CCCCCC"> double then this</font>

343
00:15:04,610 --> 00:15:10,490
truth put but proxy sequel<font color="#CCCCCC"> I limited the</font>

344
00:15:08,330 --> 00:15:13,580
number of<font color="#E5E5E5"> connections</font><font color="#CCCCCC"> whereby server so</font>

345
00:15:10,490 --> 00:15:16,660
it spiked thread running<font color="#CCCCCC"> spiked to a bit</font>

346
00:15:13,580 --> 00:15:16,660
higher than 100

347
00:15:21,270 --> 00:15:27,970
<font color="#E5E5E5">okay one of them</font><font color="#CCCCCC"> miss concept that</font>

348
00:15:25,600 --> 00:15:32,110
people<font color="#E5E5E5"> normally do when configuring</font>

349
00:15:27,970 --> 00:15:34,120
proxy sequel is that they they configure

350
00:15:32,110 --> 00:15:36,820
the<font color="#E5E5E5"> number of buckland connection to be</font>

351
00:15:34,120 --> 00:15:38,170
as high<font color="#CCCCCC"> as</font><font color="#E5E5E5"> the number of client</font>

352
00:15:36,820 --> 00:15:40,000
connections so if the<font color="#CCCCCC"> class</font><font color="#E5E5E5"> if they</font>

353
00:15:38,170 --> 00:15:42,550
expect the client will open<font color="#CCCCCC"> 1,000</font>

354
00:15:40,000 --> 00:15:44,410
connection they<font color="#E5E5E5"> configure that the proxy</font>

355
00:15:42,550 --> 00:15:46,120
<font color="#CCCCCC">code to open up to 1,000 connection to</font>

356
00:15:44,410 --> 00:15:48,219
the base server<font color="#E5E5E5"> you guys did this is</font>

357
00:15:46,120 --> 00:15:49,930
something<font color="#CCCCCC"> that you should</font><font color="#E5E5E5"> not do if you</font>

358
00:15:48,220 --> 00:15:51,910
always<font color="#CCCCCC"> try to configure proxy support</font><font color="#E5E5E5"> to</font>

359
00:15:49,930 --> 00:15:55,300
open way less connection to the<font color="#CCCCCC"> other</font>

360
00:15:51,910 --> 00:15:57,339
<font color="#CCCCCC">base server</font><font color="#E5E5E5"> and what happen if both the</font>

361
00:15:55,300 --> 00:16:01,300
client<font color="#E5E5E5"> executes some query at the same</font>

362
00:15:57,340 --> 00:16:03,910
time<font color="#E5E5E5"> and if you have 100 client and you</font>

363
00:16:01,300 --> 00:16:05,469
don't have enough back-end connection

364
00:16:03,910 --> 00:16:09,100
what happened that proxy sequel will

365
00:16:05,470 --> 00:16:13,540
internally sort the<font color="#CCCCCC"> DOS</font><font color="#E5E5E5"> theory</font><font color="#CCCCCC"> and based</font>

366
00:16:09,100 --> 00:16:16,090
on the start time and will basically

367
00:16:13,540 --> 00:16:18,099
<font color="#E5E5E5">queue them internally and execute them</font>

368
00:16:16,090 --> 00:16:21,070
serialized so based on<font color="#E5E5E5"> the number of</font>

369
00:16:18,100 --> 00:16:22,240
<font color="#CCCCCC">connections that are open and as I</font><font color="#E5E5E5"> was</font>

370
00:16:21,070 --> 00:16:25,810
showing in the<font color="#CCCCCC"> previous slide is</font>

371
00:16:22,240 --> 00:16:28,690
actually improved performance and<font color="#E5E5E5"> that</font>

372
00:16:25,810 --> 00:16:31,810
this is even<font color="#CCCCCC"> more easy to understand</font><font color="#E5E5E5"> on</font>

373
00:16:28,690 --> 00:16:35,590
the next slide<font color="#E5E5E5"> so</font><font color="#CCCCCC"> basically this was a</font>

374
00:16:31,810 --> 00:16:38,829
benchmark done<font color="#E5E5E5"> in 2016 so almost three</font>

375
00:16:35,590 --> 00:16:42,040
years ago<font color="#E5E5E5"> done by</font><font color="#CCCCCC"> per</font><font color="#E5E5E5"> quorum so this is</font>

376
00:16:38,830 --> 00:16:46,690
some<font color="#CCCCCC"> readwrite workload using my sequel</font>

377
00:16:42,040 --> 00:16:48,730
<font color="#CCCCCC">five seven</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> Percona</font><font color="#E5E5E5"> server five seven</font>

378
00:16:46,690 --> 00:16:50,200
with<font color="#CCCCCC"> thread pool and proxy sequel</font>

379
00:16:48,730 --> 00:16:53,320
limiting the number of back-end

380
00:16:50,200 --> 00:16:56,410
connection to 200<font color="#E5E5E5"> at low number of</font>

381
00:16:53,320 --> 00:16:59,710
connection<font color="#E5E5E5"> the performance of what my</font>

382
00:16:56,410 --> 00:17:01,300
sequel server and<font color="#E5E5E5"> Turkana server were</font>

383
00:16:59,710 --> 00:17:03,520
higher than proxy sequel and that's

384
00:17:01,300 --> 00:17:04,780
expected because<font color="#E5E5E5"> the physical house has</font>

385
00:17:03,520 --> 00:17:07,690
to<font color="#CCCCCC"> analyze all the traffic before</font>

386
00:17:04,780 --> 00:17:12,010
<font color="#E5E5E5">executing it but then as the number of</font>

387
00:17:07,690 --> 00:17:15,180
connection<font color="#E5E5E5"> increased at around around</font>

388
00:17:12,010 --> 00:17:18,099
<font color="#CCCCCC">300 or</font><font color="#E5E5E5"> something like this</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> 200</font>

389
00:17:15,180 --> 00:17:21,070
<font color="#CCCCCC">then not the the</font><font color="#E5E5E5"> performance with my</font>

390
00:17:18,099 --> 00:17:23,079
sequel server<font color="#CCCCCC"> dropped drastically</font><font color="#E5E5E5"> the</font>

391
00:17:21,069 --> 00:17:25,899
performance with<font color="#CCCCCC"> Percona server</font>

392
00:17:23,079 --> 00:17:28,569
dropped as well<font color="#CCCCCC"> but</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> they had</font>

393
00:17:25,900 --> 00:17:30,670
triple enabled didn't<font color="#E5E5E5"> drop so much when</font>

394
00:17:28,569 --> 00:17:33,070
I<font color="#E5E5E5"> sent proxy sequel was tapping the</font>

395
00:17:30,670 --> 00:17:36,250
number of connection<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the server</font><font color="#CCCCCC"> to</font>

396
00:17:33,070 --> 00:17:39,129
and the<font color="#CCCCCC"> forum escaped stable no matter</font>

397
00:17:36,250 --> 00:17:43,000
how many<font color="#E5E5E5"> nuclear how many connection</font>

398
00:17:39,130 --> 00:17:45,040
were<font color="#E5E5E5"> on</font><font color="#CCCCCC"> protocol</font><font color="#E5E5E5"> so of course if he did</font>

399
00:17:43,000 --> 00:17:46,480
we were adding more connection again the

400
00:17:45,040 --> 00:17:48,010
<font color="#E5E5E5">performance in proxy see what was going</font>

401
00:17:46,480 --> 00:17:50,230
<font color="#E5E5E5">to be quite linear</font>

402
00:17:48,010 --> 00:18:16,780
while my secret<font color="#CCCCCC"> third corner</font><font color="#E5E5E5"> were</font>

403
00:17:50,230 --> 00:18:18,640
somehow<font color="#E5E5E5"> dropping question yes okay it</font>

404
00:18:16,780 --> 00:18:21,370
doesn't<font color="#E5E5E5"> duplicate so it will only</font>

405
00:18:18,640 --> 00:18:24,040
execute it you<font color="#E5E5E5"> today to them to the</font>

406
00:18:21,370 --> 00:18:25,360
<font color="#E5E5E5">bridle to the master depending on</font>

407
00:18:24,040 --> 00:18:27,430
cording to the<font color="#E5E5E5"> queries you have</font>

408
00:18:25,360 --> 00:18:30,010
configured and of course if you<font color="#CCCCCC"> are</font>

409
00:18:27,430 --> 00:18:31,810
executing<font color="#E5E5E5"> a select statement the</font><font color="#CCCCCC"> Select</font>

410
00:18:30,010 --> 00:18:33,520
<font color="#CCCCCC">element has to be executed on the same</font>

411
00:18:31,810 --> 00:18:35,649
connection<font color="#E5E5E5"> proxy</font><font color="#CCCCCC"> secret does not</font>

412
00:18:33,520 --> 00:18:38,320
guarantee this<font color="#E5E5E5"> that will depend how you</font>

413
00:18:35,650 --> 00:18:40,330
configure your<font color="#CCCCCC"> quills this is why</font>

414
00:18:38,320 --> 00:18:42,790
<font color="#CCCCCC">normally saying do not</font><font color="#E5E5E5"> send all the</font>

415
00:18:40,330 --> 00:18:45,460
<font color="#CCCCCC">Select to the reader</font><font color="#E5E5E5"> because this is</font>

416
00:18:42,790 --> 00:18:46,930
wrong<font color="#E5E5E5"> because your example is a very</font>

417
00:18:45,460 --> 00:18:49,330
<font color="#E5E5E5">clear example of when</font><font color="#CCCCCC"> you should not</font>

418
00:18:46,930 --> 00:18:52,240
<font color="#E5E5E5">send all the selected a to the reader</font>

419
00:18:49,330 --> 00:18:57,370
and actually what<font color="#CCCCCC"> is that what</font><font color="#E5E5E5"> you ask</font>

420
00:18:52,240 --> 00:18:58,990
is basically I am highlighting this year

421
00:18:57,370 --> 00:19:01,330
that multiplexing does not disable

422
00:18:58,990 --> 00:19:03,850
routing so it can still have different

423
00:19:01,330 --> 00:19:06,699
type of routing<font color="#E5E5E5"> so I like to write this</font>

424
00:19:03,850 --> 00:19:08,379
statement goes to the master and the

425
00:19:06,700 --> 00:19:11,380
<font color="#CCCCCC">Select statement across to the slave and</font>

426
00:19:08,380 --> 00:19:13,420
if you are sending<font color="#E5E5E5"> an act to</font><font color="#CCCCCC"> the master</font>

427
00:19:11,380 --> 00:19:15,430
<font color="#E5E5E5">you should not send</font><font color="#CCCCCC"> the Select to the</font>

428
00:19:13,420 --> 00:19:19,780
slave because it is this wrong you

429
00:19:15,430 --> 00:19:21,910
should send will swell to<font color="#CCCCCC"> the master yes</font>

430
00:19:19,780 --> 00:19:23,770
but this<font color="#E5E5E5"> is what I normally</font><font color="#CCCCCC"> recommend is</font>

431
00:19:21,910 --> 00:19:25,540
that you<font color="#CCCCCC"> dint if I which are</font><font color="#E5E5E5"> the</font>

432
00:19:23,770 --> 00:19:27,400
selected<font color="#E5E5E5"> are safe to be sent to the</font>

433
00:19:25,540 --> 00:19:37,080
slave<font color="#E5E5E5"> you don't send all the selflessly</font>

434
00:19:27,400 --> 00:19:41,290
<font color="#CCCCCC">I mean you need to understand oh yes</font><font color="#E5E5E5"> so</font>

435
00:19:37,080 --> 00:19:43,030
the question<font color="#CCCCCC"> is about what happened if</font>

436
00:19:41,290 --> 00:19:46,060
you<font color="#CCCCCC"> have a query</font><font color="#E5E5E5"> that has</font><font color="#CCCCCC"> a session</font>

437
00:19:43,030 --> 00:19:46,450
variables who so specify<font color="#CCCCCC"> and</font><font color="#E5E5E5"> act and it</font>

438
00:19:46,060 --> 00:19:48,250
is

439
00:19:46,450 --> 00:19:51,160
<font color="#E5E5E5">the immense</font><font color="#CCCCCC"> Edmonton goes on the</font>

440
00:19:48,250 --> 00:19:52,750
<font color="#CCCCCC">brighter and then the</font><font color="#E5E5E5"> sex statement you</font>

441
00:19:51,160 --> 00:19:54,760
have<font color="#E5E5E5"> configured proxy</font><font color="#CCCCCC"> bow to send us a</font>

442
00:19:52,750 --> 00:19:56,830
statement<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the reader if you send in</font>

443
00:19:54,760 --> 00:19:59,110
the sediment<font color="#E5E5E5"> that use the same session</font>

444
00:19:56,830 --> 00:20:01,960
variables to the reader<font color="#E5E5E5"> the reader won't</font>

445
00:19:59,110 --> 00:20:05,379
have<font color="#CCCCCC"> that session variables because you</font>

446
00:20:01,960 --> 00:20:07,480
haven't<font color="#CCCCCC"> executed</font><font color="#E5E5E5"> the end mail there so</font>

447
00:20:05,380 --> 00:20:09,310
what I'm suggesting is<font color="#E5E5E5"> that you don't</font>

448
00:20:07,480 --> 00:20:11,770
<font color="#E5E5E5">send all the select to the reader but</font>

449
00:20:09,310 --> 00:20:13,389
you only<font color="#CCCCCC"> send to the reader the Select</font>

450
00:20:11,770 --> 00:20:15,700
statement<font color="#CCCCCC"> it</font><font color="#E5E5E5"> are okay to be sent to the</font>

451
00:20:13,390 --> 00:20:17,920
reader<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> order</font><font color="#CCCCCC"> in proxy sequel</font>

452
00:20:15,700 --> 00:20:20,050
you check from South Pacific<font color="#CCCCCC"> we</font><font color="#E5E5E5"> adjust</font>

453
00:20:17,920 --> 00:20:21,550
which are the query<font color="#CCCCCC"> that are safe to be</font>

454
00:20:20,050 --> 00:20:35,919
sent<font color="#E5E5E5"> to the reader and you only send</font>

455
00:20:21,550 --> 00:20:41,560
those instead<font color="#E5E5E5"> of happening yes yes so</font>

456
00:20:35,920 --> 00:20:43,780
the<font color="#CCCCCC"> question was if here the</font><font color="#E5E5E5"> the time</font>

457
00:20:41,560 --> 00:20:46,510
not<font color="#E5E5E5"> not this one actually</font><font color="#CCCCCC"> this one so</font>

458
00:20:43,780 --> 00:20:49,690
the query time in those graphs<font color="#E5E5E5"> they were</font>

459
00:20:46,510 --> 00:20:51,370
about<font color="#E5E5E5"> establish connection or they were</font>

460
00:20:49,690 --> 00:20:51,820
counting also the time to<font color="#CCCCCC"> establish the</font>

461
00:20:51,370 --> 00:20:54,429
connection

462
00:20:51,820 --> 00:20:57,850
those are about<font color="#E5E5E5"> establish connection so</font>

463
00:20:54,430 --> 00:20:59,770
there is so in those Bluffs you don't

464
00:20:57,850 --> 00:21:01,409
haven't see the benefit of having<font color="#CCCCCC"> proxy</font>

465
00:20:59,770 --> 00:21:03,580
sequel and its own<font color="#CCCCCC"> connection pool</font>

466
00:21:01,410 --> 00:21:10,830
because those those were<font color="#E5E5E5"> already</font>

467
00:21:03,580 --> 00:21:10,830
persistent connection in your question

468
00:21:12,890 --> 00:21:20,409
[Applause]

