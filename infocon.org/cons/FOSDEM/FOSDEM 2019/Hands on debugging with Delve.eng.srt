1
00:00:04,799 --> 00:00:10,990
hello<font color="#E5E5E5"> everybody thank you</font>

2
00:00:07,870 --> 00:00:14,020
so as was<font color="#CCCCCC"> mentioned</font><font color="#E5E5E5"> this talk is</font><font color="#CCCCCC"> going</font>

3
00:00:10,990 --> 00:00:18,400
<font color="#E5E5E5">to be the state</font><font color="#CCCCCC"> of delve</font><font color="#E5E5E5"> kind of</font>

4
00:00:14,020 --> 00:00:19,840
piggybacking on state<font color="#E5E5E5"> of go</font><font color="#CCCCCC"> I thought</font>

5
00:00:18,400 --> 00:00:22,659
<font color="#CCCCCC">it'd be an interesting</font><font color="#E5E5E5"> interesting</font>

6
00:00:19,840 --> 00:00:25,000
concept<font color="#E5E5E5"> since I've I spoken about delve</font>

7
00:00:22,660 --> 00:00:26,860
the past few<font color="#E5E5E5"> years at FOSDEM so it's</font>

8
00:00:25,000 --> 00:00:28,360
<font color="#E5E5E5">always nice to</font><font color="#CCCCCC"> come and kind</font><font color="#E5E5E5"> of give an</font>

9
00:00:26,860 --> 00:00:32,469
update<font color="#E5E5E5"> on what's going</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> with the</font>

10
00:00:28,360 --> 00:00:34,120
project<font color="#E5E5E5"> which changed</font><font color="#CCCCCC"> one thing that I</font>

11
00:00:32,469 --> 00:00:36,550
feel the need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> address right off the</font>

12
00:00:34,120 --> 00:00:39,248
bat is if you look at the schedule<font color="#CCCCCC"> you</font>

13
00:00:36,550 --> 00:00:41,428
might read some nonsense about<font color="#CCCCCC"> hands-on</font>

14
00:00:39,249 --> 00:00:43,989
<font color="#E5E5E5">debugging session and this this and that</font>

15
00:00:41,429 --> 00:00:46,449
<font color="#CCCCCC">so those are the original plan for this</font>

16
00:00:43,989 --> 00:00:48,399
<font color="#E5E5E5">talk but trying to trying to get</font>

17
00:00:46,449 --> 00:00:51,218
<font color="#E5E5E5">basically a workshop into a micro</font>

18
00:00:48,399 --> 00:00:53,260
workshop<font color="#E5E5E5"> format was kind of difficult</font>

19
00:00:51,219 --> 00:00:57,219
<font color="#CCCCCC">and</font><font color="#E5E5E5"> so I decided</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> go with</font><font color="#CCCCCC"> a more</font>

20
00:00:53,260 --> 00:00:58,690
<font color="#E5E5E5">traditional talk instead and after</font>

21
00:00:57,219 --> 00:01:00,159
watching some<font color="#CCCCCC"> of the talks this morning</font>

22
00:00:58,690 --> 00:01:02,649
<font color="#CCCCCC">it actually works out</font><font color="#E5E5E5"> quite nicely</font>

23
00:01:00,159 --> 00:01:04,839
<font color="#E5E5E5">because making Francesca act as a</font>

24
00:01:02,649 --> 00:01:07,260
microphone stand for<font color="#CCCCCC"> 25 minutes I just I</font>

25
00:01:04,839 --> 00:01:10,539
<font color="#CCCCCC">just</font><font color="#E5E5E5"> can't I</font><font color="#CCCCCC"> couldn't do it to him so</font>

26
00:01:07,260 --> 00:01:13,960
I'll save him some<font color="#CCCCCC"> of the trouble</font>

27
00:01:10,539 --> 00:01:16,509
so regardless<font color="#CCCCCC"> we'll have a good talk and</font>

28
00:01:13,960 --> 00:01:18,038
I'd like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go over some of the some</font><font color="#CCCCCC"> of</font>

29
00:01:16,509 --> 00:01:19,780
the<font color="#E5E5E5"> things that have</font><font color="#CCCCCC"> changed since in</font>

30
00:01:18,039 --> 00:01:21,219
the<font color="#CCCCCC"> last year</font><font color="#E5E5E5"> some of the things that</font>

31
00:01:19,780 --> 00:01:22,359
we'll be<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> forward to in the next</font>

32
00:01:21,219 --> 00:01:25,630
year as far as<font color="#E5E5E5"> new features</font><font color="#CCCCCC"> and</font>

33
00:01:22,359 --> 00:01:29,408
developments<font color="#E5E5E5"> and I also would like to</font>

34
00:01:25,630 --> 00:01:31,298
take a deep<font color="#CCCCCC"> dive into</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> funk</font><font color="#E5E5E5"> feature</font>

35
00:01:29,409 --> 00:01:33,390
that<font color="#E5E5E5"> was implemented within</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> last</font>

36
00:01:31,299 --> 00:01:35,740
year that<font color="#E5E5E5"> I think is really interesting</font>

37
00:01:33,390 --> 00:01:37,810
<font color="#E5E5E5">and so we'll get into some</font><font color="#CCCCCC"> more</font>

38
00:01:35,740 --> 00:01:39,158
technical<font color="#CCCCCC"> things there which is</font><font color="#E5E5E5"> nice</font>

39
00:01:37,810 --> 00:01:41,500
because<font color="#E5E5E5"> I kind of like</font><font color="#CCCCCC"> to use this</font>

40
00:01:39,159 --> 00:01:43,509
<font color="#E5E5E5">effort as an opportunity as well to to</font>

41
00:01:41,500 --> 00:01:46,000
encourage contribution<font color="#CCCCCC"> you know this is</font>

42
00:01:43,509 --> 00:01:49,600
a very<font color="#CCCCCC"> open source comfort conference</font>

43
00:01:46,000 --> 00:01:51,189
and a lot of<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> really good smart</font>

44
00:01:49,600 --> 00:01:52,928
<font color="#CCCCCC">people here so</font><font color="#E5E5E5"> always looking for new</font>

45
00:01:51,189 --> 00:01:56,969
<font color="#E5E5E5">contributors and deep dives into this</font>

46
00:01:52,929 --> 00:01:56,969
kind of<font color="#E5E5E5"> stuff I feel like encourages it</font>

47
00:01:58,259 --> 00:02:04,270
<font color="#CCCCCC">so just to introduce</font><font color="#E5E5E5"> myself after that</font>

48
00:02:01,270 --> 00:02:06,039
long-winded introduction<font color="#CCCCCC"> my</font><font color="#E5E5E5"> name is</font>

49
00:02:04,270 --> 00:02:10,508
<font color="#CCCCCC">Derrick Parker I'm a senior software</font>

50
00:02:06,039 --> 00:02:12,370
engineer at Red Hat<font color="#CCCCCC"> I maintained the go</font>

51
00:02:10,508 --> 00:02:13,750
package for rel internally at Red Hat

52
00:02:12,370 --> 00:02:16,420
support all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our internal</font><font color="#CCCCCC"> customers</font>

53
00:02:13,750 --> 00:02:17,980
and external customers<font color="#CCCCCC"> and also do some</font>

54
00:02:16,420 --> 00:02:19,929
upstream contributions and

55
00:02:17,980 --> 00:02:23,440
tribution to the<font color="#CCCCCC"> runtime and some other</font>

56
00:02:19,930 --> 00:02:28,620
things aside<font color="#CCCCCC"> from that</font><font color="#E5E5E5"> I'm also the</font>

57
00:02:23,440 --> 00:02:31,840
<font color="#CCCCCC">author original creator of delve and</font>

58
00:02:28,620 --> 00:02:33,519
maintainer<font color="#CCCCCC"> I also have a another co</font>

59
00:02:31,840 --> 00:02:35,680
maintainer<font color="#CCCCCC"> alessandro who I just like to</font>

60
00:02:33,519 --> 00:02:38,500
give a<font color="#E5E5E5"> shout out to because he's been a</font>

61
00:02:35,680 --> 00:02:46,209
huge<font color="#E5E5E5"> help with the project</font><font color="#CCCCCC"> especially</font>

62
00:02:38,500 --> 00:02:49,420
<font color="#E5E5E5">over the</font><font color="#CCCCCC"> last couple</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> so state of</font>

63
00:02:46,209 --> 00:02:51,910
<font color="#E5E5E5">Delft</font><font color="#CCCCCC"> like a like I said I I'd</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to</font>

64
00:02:49,420 --> 00:02:54,700
go over<font color="#E5E5E5"> what's changed in the last year</font>

65
00:02:51,910 --> 00:02:56,500
what new features<font color="#CCCCCC"> have</font><font color="#E5E5E5"> we added how what</font>

66
00:02:54,700 --> 00:03:00,399
have we done to keep up with<font color="#E5E5E5"> changes</font><font color="#CCCCCC"> and</font>

67
00:02:56,500 --> 00:03:02,950
go and they go<font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> and additionally</font>

68
00:03:00,400 --> 00:03:06,030
after<font color="#E5E5E5"> that what what can you expect what</font>

69
00:03:02,950 --> 00:03:08,379
new features<font color="#CCCCCC"> are</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> the roadmap and and</font>

70
00:03:06,030 --> 00:03:10,269
what would<font color="#E5E5E5"> be if you would like to</font>

71
00:03:08,379 --> 00:03:11,828
contribute some of<font color="#CCCCCC"> the highest</font><font color="#E5E5E5"> impact</font>

72
00:03:10,269 --> 00:03:17,470
areas where you might<font color="#CCCCCC"> be able to</font>

73
00:03:11,829 --> 00:03:21,430
contribute<font color="#E5E5E5"> in the future so just</font><font color="#CCCCCC"> to do</font>

74
00:03:17,470 --> 00:03:23,169
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> like a little recap and and give</font>

75
00:03:21,430 --> 00:03:26,319
a little<font color="#E5E5E5"> bit more back backstory to the</font>

76
00:03:23,169 --> 00:03:27,880
project<font color="#E5E5E5"> the project is actually about</font>

77
00:03:26,319 --> 00:03:30,040
four and<font color="#E5E5E5"> a half years old now</font>

78
00:03:27,880 --> 00:03:33,130
which which for me is is kind of

79
00:03:30,040 --> 00:03:35,798
surprising looking back on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> but it's</font>

80
00:03:33,130 --> 00:03:37,168
grown it's grown a lot and tons of

81
00:03:35,799 --> 00:03:39,250
<font color="#E5E5E5">people are using it</font><font color="#CCCCCC"> now which is</font><font color="#E5E5E5"> great</font>

82
00:03:37,169 --> 00:03:40,959
<font color="#CCCCCC">we've we've gotten a lot of</font><font color="#E5E5E5"> support from</font>

83
00:03:39,250 --> 00:03:43,269
the community<font color="#CCCCCC"> and</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of support from</font>

84
00:03:40,959 --> 00:03:44,980
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the core team</font><font color="#CCCCCC"> members and</font>

85
00:03:43,269 --> 00:03:47,530
<font color="#E5E5E5">things like that which</font><font color="#CCCCCC"> is which has been</font>

86
00:03:44,980 --> 00:03:49,750
great<font color="#E5E5E5"> and building these maintain these</font>

87
00:03:47,530 --> 00:03:52,359
these relationships with the community

88
00:03:49,750 --> 00:03:54,220
and<font color="#CCCCCC"> especially the core team is is very</font>

89
00:03:52,359 --> 00:03:56,079
<font color="#E5E5E5">beneficial and also in this necessary</font>

90
00:03:54,220 --> 00:03:58,180
for implementing<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the features</font>

91
00:03:56,079 --> 00:04:00,130
that we<font color="#CCCCCC"> need to implement</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Delft that</font>

92
00:03:58,180 --> 00:04:01,959
might involve coordination with the

93
00:04:00,130 --> 00:04:06,760
runtime and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and I'll</font>

94
00:04:01,959 --> 00:04:08,260
explain<font color="#CCCCCC"> that a little bit more later the</font>

95
00:04:06,760 --> 00:04:11,530
for the first commit of this project was

96
00:04:08,260 --> 00:04:13,899
actually<font color="#E5E5E5"> in May 3rd of 2014 which was a</font>

97
00:04:11,530 --> 00:04:16,988
little bit<font color="#CCCCCC"> after the first Gopher</font><font color="#E5E5E5"> con</font>

98
00:04:13,900 --> 00:04:18,668
which was<font color="#E5E5E5"> there was a panel there that</font>

99
00:04:16,988 --> 00:04:21,820
was actually the<font color="#E5E5E5"> the inspiration for the</font>

100
00:04:18,668 --> 00:04:24,159
project<font color="#E5E5E5"> as a whole</font><font color="#CCCCCC"> total we've had 88</font>

101
00:04:21,820 --> 00:04:26,200
contributors which is<font color="#E5E5E5"> pretty good for</font>

102
00:04:24,160 --> 00:04:29,719
<font color="#CCCCCC">kind of</font><font color="#E5E5E5"> a weird esoteric project not a</font>

103
00:04:26,200 --> 00:04:31,339
lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> hack on debuggers so</font>

104
00:04:29,719 --> 00:04:34,189
having this many contributors has been

105
00:04:31,339 --> 00:04:38,289
great<font color="#E5E5E5"> again always looking for for more</font>

106
00:04:34,189 --> 00:04:38,289
<font color="#E5E5E5">people to come help</font><font color="#CCCCCC"> back on</font><font color="#E5E5E5"> the project</font>

107
00:04:38,409 --> 00:04:45,019
<font color="#E5E5E5">so without</font><font color="#CCCCCC"> further ado I'd like</font><font color="#E5E5E5"> to dive</font>

108
00:04:42,019 --> 00:04:47,239
into some<font color="#CCCCCC"> of the the</font><font color="#E5E5E5"> interesting changes</font>

109
00:04:45,019 --> 00:04:49,399
that we've had since<font color="#CCCCCC"> last year and some</font>

110
00:04:47,239 --> 00:04:50,808
<font color="#E5E5E5">of</font><font color="#CCCCCC"> the give a shout</font><font color="#E5E5E5"> out to</font><font color="#CCCCCC"> some of the</font>

111
00:04:49,399 --> 00:04:57,619
bigger<font color="#CCCCCC"> features that we've implemented</font>

112
00:04:50,809 --> 00:04:59,239
recently so one of<font color="#E5E5E5"> the one of the</font>

113
00:04:57,619 --> 00:05:03,800
biggest<font color="#E5E5E5"> and most exciting things for us</font>

114
00:04:59,239 --> 00:05:08,058
<font color="#E5E5E5">just as maintainer</font><font color="#CCCCCC"> x' was the release of</font>

115
00:05:03,800 --> 00:05:13,099
<font color="#CCCCCC">v 1.0 so that happened</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> i</font>

116
00:05:08,059 --> 00:05:15,679
believe<font color="#E5E5E5"> pretty shortly after FOSDEM last</font>

117
00:05:13,099 --> 00:05:18,889
year<font color="#E5E5E5"> so before that we</font><font color="#CCCCCC"> were considering</font>

118
00:05:15,679 --> 00:05:21,378
<font color="#E5E5E5">the project pre 1.0</font><font color="#CCCCCC"> a lot of people a</font>

119
00:05:18,889 --> 00:05:22,849
<font color="#CCCCCC">lot of</font><font color="#E5E5E5"> folks were</font><font color="#CCCCCC"> still using</font><font color="#E5E5E5"> it still</font>

120
00:05:21,379 --> 00:05:25,939
using the project<font color="#E5E5E5"> still using it very</font>

121
00:05:22,849 --> 00:05:28,659
<font color="#CCCCCC">successfully we we actually</font><font color="#E5E5E5"> considered</font>

122
00:05:25,939 --> 00:05:31,309
it<font color="#E5E5E5"> pretty stable and ready for use</font><font color="#CCCCCC"> even</font>

123
00:05:28,659 --> 00:05:32,839
<font color="#CCCCCC">though for</font><font color="#E5E5E5"> awhile</font><font color="#CCCCCC"> we had like a scary</font>

124
00:05:31,309 --> 00:05:36,489
message on the repo you know saying it

125
00:05:32,839 --> 00:05:39,889
was pretty 1.0 and<font color="#E5E5E5"> all that stuff</font><font color="#CCCCCC"> but</font>

126
00:05:36,489 --> 00:05:43,399
earlier this this<font color="#E5E5E5"> year we are last year</font>

127
00:05:39,889 --> 00:05:46,369
<font color="#E5E5E5">I guess we we finally released the the</font>

128
00:05:43,399 --> 00:05:50,539
<font color="#E5E5E5">1.0 version and subsequently we've</font>

129
00:05:46,369 --> 00:05:54,939
released 1.1<font color="#E5E5E5"> so the version scheming</font>

130
00:05:50,539 --> 00:05:59,860
kind of follows the upstream versions so

131
00:05:54,939 --> 00:06:04,249
<font color="#CCCCCC">one</font><font color="#E5E5E5"> 1.0 was around the time of go</font><font color="#CCCCCC"> 1/10</font>

132
00:05:59,860 --> 00:06:07,159
1.1 is around the<font color="#E5E5E5"> time of go</font><font color="#CCCCCC"> 111 so</font>

133
00:06:04,249 --> 00:06:11,779
<font color="#E5E5E5">subsequently as</font><font color="#CCCCCC"> we're we're gearing up</font>

134
00:06:07,159 --> 00:06:15,558
for 112 113 so on and so forth<font color="#E5E5E5"> our</font>

135
00:06:11,779 --> 00:06:18,429
versions our release cadence will<font color="#E5E5E5"> for</font>

136
00:06:15,559 --> 00:06:24,289
for the minor versions will will map to

137
00:06:18,429 --> 00:06:26,979
<font color="#E5E5E5">go version so</font><font color="#CCCCCC"> 1.2 for for 112</font><font color="#E5E5E5"> and and so</font>

138
00:06:24,289 --> 00:06:26,979
<font color="#E5E5E5">on and so forth</font>

139
00:06:28,929 --> 00:06:34,128
this this release marked a bunch<font color="#CCCCCC"> of new</font>

140
00:06:31,339 --> 00:06:37,509
features<font color="#E5E5E5"> and more</font><font color="#CCCCCC"> importantly just kind</font>

141
00:06:34,129 --> 00:06:41,119
of<font color="#E5E5E5"> a feeling of stability API stability</font>

142
00:06:37,509 --> 00:06:43,340
compatibility for anybody who does ID an

143
00:06:41,119 --> 00:06:54,010
IDE integration or uses

144
00:06:43,340 --> 00:06:58,340
the<font color="#CCCCCC"> API to interact with</font><font color="#E5E5E5"> the debugger so</font>

145
00:06:54,010 --> 00:07:00,310
over<font color="#CCCCCC"> the over that time period we we</font>

146
00:06:58,340 --> 00:07:03,619
ended<font color="#E5E5E5"> up adding a bunch of new features</font>

147
00:07:00,310 --> 00:07:06,230
<font color="#E5E5E5">so I'd like to</font><font color="#CCCCCC"> kind of take</font><font color="#E5E5E5"> some time</font>

148
00:07:03,620 --> 00:07:07,520
and go through<font color="#CCCCCC"> shout out some</font><font color="#E5E5E5"> of the</font>

149
00:07:06,230 --> 00:07:09,650
some of<font color="#E5E5E5"> the bigger features that we've</font>

150
00:07:07,520 --> 00:07:12,830
<font color="#E5E5E5">added certainly there's been tons of new</font>

151
00:07:09,650 --> 00:07:15,020
<font color="#E5E5E5">other features improvements performance</font>

152
00:07:12,830 --> 00:07:18,140
improvements fixes things<font color="#E5E5E5"> like that that</font>

153
00:07:15,020 --> 00:07:20,659
have<font color="#E5E5E5"> gone in and this doesn't also cover</font>

154
00:07:18,140 --> 00:07:24,500
a lot<font color="#E5E5E5"> of the work that we do upstream</font>

155
00:07:20,660 --> 00:07:26,090
with helping helping improve debug

156
00:07:24,500 --> 00:07:29,630
<font color="#CCCCCC">information that's generated</font><font color="#E5E5E5"> in go</font>

157
00:07:26,090 --> 00:07:32,510
binaries and things like<font color="#CCCCCC"> that but</font><font color="#E5E5E5"> just</font>

158
00:07:29,630 --> 00:07:34,219
as far<font color="#CCCCCC"> as the the delft side over over</font>

159
00:07:32,510 --> 00:07:38,630
the last year we've we've added<font color="#E5E5E5"> support</font>

160
00:07:34,220 --> 00:07:41,180
for 110 111<font color="#E5E5E5"> and also 112 so with that</font>

161
00:07:38,630 --> 00:07:43,669
with every<font color="#CCCCCC"> new go release what we try to</font>

162
00:07:41,180 --> 00:07:45,530
do is improve the<font color="#E5E5E5"> quality of debug</font>

163
00:07:43,669 --> 00:07:50,120
<font color="#E5E5E5">information that's found in</font><font color="#CCCCCC"> the go</font>

164
00:07:45,530 --> 00:07:54,950
binaries<font color="#E5E5E5"> so myself</font><font color="#CCCCCC"> alessandro other</font>

165
00:07:50,120 --> 00:07:57,010
folks who do IDE integrations<font color="#E5E5E5"> we we we</font>

166
00:07:54,950 --> 00:08:01,760
<font color="#E5E5E5">try to communicate with the runtime team</font>

167
00:07:57,010 --> 00:08:04,460
<font color="#CCCCCC">the</font><font color="#E5E5E5"> compiler team and suggest fixes and</font>

168
00:08:01,760 --> 00:08:07,719
in contribute code<font color="#E5E5E5"> where</font><font color="#CCCCCC"> necessary</font><font color="#E5E5E5"> to</font>

169
00:08:04,460 --> 00:08:11,539
ensure that when you<font color="#CCCCCC"> type go build it</font>

170
00:08:07,720 --> 00:08:13,760
produces a binary<font color="#E5E5E5"> that is that has as</font>

171
00:08:11,539 --> 00:08:16,460
much information<font color="#E5E5E5"> as</font><font color="#CCCCCC"> we can possibly get</font>

172
00:08:13,760 --> 00:08:19,700
<font color="#CCCCCC">to</font><font color="#E5E5E5"> create the best debugging</font><font color="#CCCCCC"> experience</font>

173
00:08:16,460 --> 00:08:21,469
for you<font color="#E5E5E5"> and when delve builds the</font>

174
00:08:19,700 --> 00:08:23,860
binaries it builds them without

175
00:08:21,470 --> 00:08:29,930
optimizations and things like<font color="#E5E5E5"> that</font>

176
00:08:23,860 --> 00:08:31,700
<font color="#CCCCCC">we we also want to make sure that you</font>

177
00:08:29,930 --> 00:08:33,979
know you have<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the best</font>

178
00:08:31,700 --> 00:08:36,110
<font color="#E5E5E5">chance to debug your binaries and have</font>

179
00:08:33,979 --> 00:08:38,800
all<font color="#E5E5E5"> of the information that you need so</font>

180
00:08:36,110 --> 00:08:42,770
as new<font color="#CCCCCC"> versions come out we support new</font>

181
00:08:38,799 --> 00:08:44,209
<font color="#E5E5E5">new missing features that are in like</font>

182
00:08:42,770 --> 00:08:47,540
the<font color="#CCCCCC"> door for information and things like</font>

183
00:08:44,210 --> 00:08:52,040
that<font color="#E5E5E5"> that are present in the in the the</font>

184
00:08:47,540 --> 00:08:53,599
binary<font color="#CCCCCC"> so with that one of the one of</font>

185
00:08:52,040 --> 00:08:56,069
<font color="#E5E5E5">the improvements</font><font color="#CCCCCC"> that we've</font><font color="#E5E5E5"> been able to</font>

186
00:08:53,600 --> 00:08:59,070
make is when you're debugging<font color="#E5E5E5"> optimized</font>

187
00:08:56,070 --> 00:09:01,470
so when<font color="#E5E5E5"> delve builds a binary for you if</font>

188
00:08:59,070 --> 00:09:03,360
you<font color="#E5E5E5"> just type</font><font color="#CCCCCC"> dlv debug it it</font><font color="#E5E5E5"> builds the</font>

189
00:09:01,470 --> 00:09:04,709
binary in such a way that<font color="#E5E5E5"> it disables</font>

190
00:09:03,360 --> 00:09:07,699
<font color="#E5E5E5">all of the optimizations that are</font>

191
00:09:04,709 --> 00:09:10,939
enabled by<font color="#CCCCCC"> default so function inlining</font>

192
00:09:07,699 --> 00:09:13,469
<font color="#E5E5E5">variable registration things like that</font>

193
00:09:10,940 --> 00:09:18,870
<font color="#CCCCCC">and this this just makes it a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> easier</font>

194
00:09:13,470 --> 00:09:20,790
<font color="#CCCCCC">to be able to debug your binary but what</font>

195
00:09:18,870 --> 00:09:24,240
we what<font color="#CCCCCC"> we also</font><font color="#E5E5E5"> ultimately want to do is</font>

196
00:09:20,790 --> 00:09:25,889
is let it<font color="#CCCCCC"> ensure that you can</font><font color="#E5E5E5"> debug any</font>

197
00:09:24,240 --> 00:09:28,170
kind<font color="#E5E5E5"> of go binary and you'll have</font>

198
00:09:25,889 --> 00:09:33,149
success so even<font color="#E5E5E5"> production-ready</font>

199
00:09:28,170 --> 00:09:35,250
more<font color="#E5E5E5"> optimized binaries</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> part</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> what</font>

200
00:09:33,149 --> 00:09:37,019
we we've done<font color="#E5E5E5"> is added added more</font>

201
00:09:35,250 --> 00:09:42,240
support for<font color="#E5E5E5"> debugging inline functions</font>

202
00:09:37,019 --> 00:09:46,259
so that<font color="#CCCCCC"> you can debug</font><font color="#E5E5E5"> optimized binaries</font>

203
00:09:42,240 --> 00:09:49,620
a lot better another another feature

204
00:09:46,259 --> 00:09:55,940
that we've added<font color="#E5E5E5"> is support for dwz</font>

205
00:09:49,620 --> 00:09:58,350
compressed dwarf info<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is useful for</font>

206
00:09:55,940 --> 00:09:59,819
<font color="#E5E5E5">so</font><font color="#CCCCCC"> Dorf information for</font><font color="#E5E5E5"> those who are</font>

207
00:09:58,350 --> 00:10:02,120
unaware this is the information<font color="#E5E5E5"> that's</font>

208
00:09:59,819 --> 00:10:04,889
<font color="#CCCCCC">stored in the binary that that kind of</font>

209
00:10:02,120 --> 00:10:07,860
has<font color="#CCCCCC"> a bunch of information about about</font>

210
00:10:04,889 --> 00:10:09,209
the process and in the<font color="#CCCCCC"> the program that</font>

211
00:10:07,860 --> 00:10:11,459
you're<font color="#E5E5E5"> that you're</font><font color="#CCCCCC"> debugging which kind</font>

212
00:10:09,209 --> 00:10:13,260
<font color="#E5E5E5">of tells</font><font color="#CCCCCC"> you information</font><font color="#E5E5E5"> about what the</font>

213
00:10:11,459 --> 00:10:15,180
stack looks<font color="#E5E5E5"> like where variables are in</font>

214
00:10:13,260 --> 00:10:17,130
<font color="#E5E5E5">memory and things like that how to how</font>

215
00:10:15,180 --> 00:10:19,109
<font color="#E5E5E5">to how to</font><font color="#CCCCCC"> access all of the things and</font>

216
00:10:17,130 --> 00:10:21,060
and do<font color="#CCCCCC"> all get all the information</font><font color="#E5E5E5"> that</font>

217
00:10:19,110 --> 00:10:26,190
the debugger is able to<font color="#E5E5E5"> then</font><font color="#CCCCCC"> ultimately</font>

218
00:10:21,060 --> 00:10:27,869
<font color="#CCCCCC">present to you so allowing</font><font color="#E5E5E5"> for</font>

219
00:10:26,190 --> 00:10:33,600
supporting compressed compressed<font color="#CCCCCC"> Dorf</font>

220
00:10:27,870 --> 00:10:36,420
info is kind<font color="#E5E5E5"> of allows for for folks to</font>

221
00:10:33,600 --> 00:10:38,850
still build binaries with the door for

222
00:10:36,420 --> 00:10:40,740
information enabled<font color="#E5E5E5"> but also get smaller</font>

223
00:10:38,850 --> 00:10:42,990
binary sizes because dwarf information

224
00:10:40,740 --> 00:10:45,209
can can<font color="#CCCCCC"> take up a lot of space so as we</font>

225
00:10:42,990 --> 00:10:50,000
as we<font color="#CCCCCC"> improve debugging production</font>

226
00:10:45,209 --> 00:10:51,989
<font color="#CCCCCC">optimize binaries adding support for</font>

227
00:10:50,000 --> 00:10:54,649
<font color="#E5E5E5">compressed debug</font><font color="#CCCCCC"> information is</font>

228
00:10:51,990 --> 00:10:54,649
important as well

229
00:10:55,019 --> 00:11:02,040
additionally we've we've added support

230
00:10:57,089 --> 00:11:04,829
<font color="#CCCCCC">for being able</font><font color="#E5E5E5"> to specify separate debug</font>

231
00:11:02,040 --> 00:11:06,810
information<font color="#CCCCCC"> so with a lot of</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font>

232
00:11:04,829 --> 00:11:09,229
binaries<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> distributed by package</font>

233
00:11:06,810 --> 00:11:09,229
managers

234
00:11:09,450 --> 00:11:14,580
a lot<font color="#E5E5E5"> of times there's a separate</font>

235
00:11:11,070 --> 00:11:17,250
<font color="#E5E5E5">there's a separate package for the debug</font>

236
00:11:14,580 --> 00:11:18,920
<font color="#CCCCCC">information from the binary package and</font>

237
00:11:17,250 --> 00:11:21,900
so if you install something<font color="#E5E5E5"> like this</font>

238
00:11:18,920 --> 00:11:24,900
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> you can use delve to specify an</font>

239
00:11:21,900 --> 00:11:26,400
alternate debug information<font color="#E5E5E5"> file so that</font>

240
00:11:24,900 --> 00:11:28,410
<font color="#CCCCCC">you</font><font color="#E5E5E5"> can still debug these programs that</font>

241
00:11:26,400 --> 00:11:30,209
<font color="#CCCCCC">have the debug information</font><font color="#E5E5E5"> stripped out</font>

242
00:11:28,410 --> 00:11:35,250
<font color="#E5E5E5">of it but still available elsewhere on</font>

243
00:11:30,210 --> 00:11:38,400
the system<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> also we've also made</font>

244
00:11:35,250 --> 00:11:39,720
<font color="#CCCCCC">improvements to</font><font color="#E5E5E5"> the debug server</font><font color="#CCCCCC"> being</font>

245
00:11:38,400 --> 00:11:41,370
<font color="#CCCCCC">able to</font><font color="#E5E5E5"> run a headless without a</font>

246
00:11:39,720 --> 00:11:43,050
<font color="#E5E5E5">connection</font><font color="#CCCCCC"> this is more of an</font>

247
00:11:41,370 --> 00:11:44,880
implementation<font color="#E5E5E5"> detail but it's nice to</font>

248
00:11:43,050 --> 00:11:46,199
<font color="#CCCCCC">have maybe like a headless server</font>

249
00:11:44,880 --> 00:11:48,960
<font color="#E5E5E5">running that you can connect to and</font>

250
00:11:46,200 --> 00:11:50,760
disconnect to say<font color="#E5E5E5"> if you want to run</font>

251
00:11:48,960 --> 00:11:52,410
<font color="#E5E5E5">delve within a container or something</font>

252
00:11:50,760 --> 00:11:55,290
<font color="#CCCCCC">like that and</font><font color="#E5E5E5"> run the client outside of</font>

253
00:11:52,410 --> 00:11:58,829
it<font color="#CCCCCC"> it makes it a lot</font><font color="#E5E5E5"> it makes it a lot</font>

254
00:11:55,290 --> 00:12:00,300
<font color="#E5E5E5">easier</font><font color="#CCCCCC"> to do kind</font><font color="#E5E5E5"> of ad hoc debugging</font><font color="#CCCCCC"> if</font>

255
00:11:58,830 --> 00:12:01,790
you want to connect and<font color="#CCCCCC"> disconnect</font><font color="#E5E5E5"> and</font>

256
00:12:00,300 --> 00:12:06,359
and not<font color="#E5E5E5"> have a session running</font>

257
00:12:01,790 --> 00:12:08,099
<font color="#E5E5E5">constantly another another big</font>

258
00:12:06,360 --> 00:12:10,050
improvement<font color="#E5E5E5"> is the ability</font><font color="#CCCCCC"> to call</font>

259
00:12:08,100 --> 00:12:11,220
functions<font color="#CCCCCC"> in the target program now this</font>

260
00:12:10,050 --> 00:12:13,130
is something<font color="#CCCCCC"> that I was very excited</font>

261
00:12:11,220 --> 00:12:15,420
<font color="#CCCCCC">about</font><font color="#E5E5E5"> in and this is something</font><font color="#CCCCCC"> that I'd</font>

262
00:12:13,130 --> 00:12:18,210
like<font color="#CCCCCC"> to take</font><font color="#E5E5E5"> a deep dive</font><font color="#CCCCCC"> into in a</font>

263
00:12:15,420 --> 00:12:20,010
<font color="#CCCCCC">little bit but this was a long time</font>

264
00:12:18,210 --> 00:12:22,770
<font color="#E5E5E5">coming</font><font color="#CCCCCC"> it was a very complicated feature</font>

265
00:12:20,010 --> 00:12:24,689
to implement and as you'll see<font color="#CCCCCC"> later it</font>

266
00:12:22,770 --> 00:12:26,490
involves a lot of coordination<font color="#CCCCCC"> with the</font>

267
00:12:24,690 --> 00:12:28,560
go runtime just because it goes memory

268
00:12:26,490 --> 00:12:30,360
model garbage collector there's a lot<font color="#E5E5E5"> of</font>

269
00:12:28,560 --> 00:12:33,689
really<font color="#CCCCCC"> complicated things when it</font><font color="#E5E5E5"> comes</font>

270
00:12:30,360 --> 00:12:37,140
to<font color="#E5E5E5"> calling a function</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> a target go</font>

271
00:12:33,690 --> 00:12:40,560
program that we had to overcome<font color="#E5E5E5"> so this</font>

272
00:12:37,140 --> 00:12:43,199
was a big collaboration between<font color="#E5E5E5"> us and</font>

273
00:12:40,560 --> 00:12:46,109
the Delft team and a<font color="#E5E5E5"> couple folks from</font>

274
00:12:43,200 --> 00:12:49,020
<font color="#CCCCCC">the go runtime team so I really I'm</font>

275
00:12:46,110 --> 00:12:50,460
really<font color="#CCCCCC"> excited about it and it's</font>

276
00:12:49,020 --> 00:12:54,870
something<font color="#E5E5E5"> that we've</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> looking</font><font color="#CCCCCC"> to add</font>

277
00:12:50,460 --> 00:12:58,920
for a really<font color="#E5E5E5"> long time</font><font color="#CCCCCC"> some other some</font>

278
00:12:54,870 --> 00:13:01,020
other niceties<font color="#CCCCCC"> we have added just an</font>

279
00:12:58,920 --> 00:13:02,640
edit command so similar to<font color="#E5E5E5"> if you're</font>

280
00:13:01,020 --> 00:13:03,810
used to any other debugger<font color="#CCCCCC"> wherever</font>

281
00:13:02,640 --> 00:13:05,819
you're stopping your program you can

282
00:13:03,810 --> 00:13:09,780
type edit<font color="#E5E5E5"> it'll open it up in you know</font>

283
00:13:05,820 --> 00:13:11,250
<font color="#CCCCCC">Buc editor and you can</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> start you</font>

284
00:13:09,780 --> 00:13:14,040
know<font color="#E5E5E5"> editing your program or viewing</font>

285
00:13:11,250 --> 00:13:18,300
<font color="#E5E5E5">your program that way from wherever</font>

286
00:13:14,040 --> 00:13:19,949
you're<font color="#E5E5E5"> stopped at in the debugger</font><font color="#CCCCCC"> we've</font>

287
00:13:18,300 --> 00:13:20,729
<font color="#E5E5E5">added</font><font color="#CCCCCC"> support for a position</font><font color="#E5E5E5"> independent</font>

288
00:13:19,950 --> 00:13:23,340
executive<font color="#CCCCCC"> O's</font>

289
00:13:20,730 --> 00:13:23,700
this is just another nicety if<font color="#CCCCCC"> you're if</font>

290
00:13:23,340 --> 00:13:26,940
<font color="#CCCCCC">you're bill</font>

291
00:13:23,700 --> 00:13:29,190
<font color="#CCCCCC">pie binaries through your build system</font>

292
00:13:26,940 --> 00:13:31,110
<font color="#E5E5E5">or for production reasons security</font>

293
00:13:29,190 --> 00:13:37,140
<font color="#E5E5E5">reasons anything like that</font><font color="#CCCCCC"> you can now</font>

294
00:13:31,110 --> 00:13:40,950
<font color="#E5E5E5">do bug those binaries with delve</font><font color="#CCCCCC"> another</font>

295
00:13:37,140 --> 00:13:42,930
feature<font color="#E5E5E5"> is we finally got the</font>

296
00:13:40,950 --> 00:13:44,730
information<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we needed</font><font color="#E5E5E5"> from the the</font>

297
00:13:42,930 --> 00:13:47,339
the debugging<font color="#CCCCCC"> from information in the</font>

298
00:13:44,730 --> 00:13:50,550
<font color="#CCCCCC">binary</font><font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show return values</font>

299
00:13:47,340 --> 00:13:54,540
when you're doing CLI tracing so similar

300
00:13:50,550 --> 00:13:56,160
to doing<font color="#CCCCCC"> like</font><font color="#E5E5E5"> s trace or something like</font>

301
00:13:54,540 --> 00:13:57,599
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you can trace your go program from</font>

302
00:13:56,160 --> 00:14:00,630
<font color="#E5E5E5">delve without having to start up like a</font>

303
00:13:57,600 --> 00:14:02,190
full debug session<font color="#CCCCCC"> and with this feature</font>

304
00:14:00,630 --> 00:14:04,380
<font color="#CCCCCC">you don't</font><font color="#E5E5E5"> need to do print line</font>

305
00:14:02,190 --> 00:14:06,060
debugging<font color="#E5E5E5"> so you can just trace</font><font color="#CCCCCC"> your</font>

306
00:14:04,380 --> 00:14:07,170
program from<font color="#E5E5E5"> the outside print out any</font>

307
00:14:06,060 --> 00:14:09,329
information<font color="#CCCCCC"> that you need about</font>

308
00:14:07,170 --> 00:14:10,740
<font color="#E5E5E5">variables or you can even</font><font color="#CCCCCC"> generate a</font>

309
00:14:09,330 --> 00:14:14,100
stack trace and do all<font color="#E5E5E5"> kinds of</font>

310
00:14:10,740 --> 00:14:17,010
interesting<font color="#CCCCCC"> stuff without having to do a</font>

311
00:14:14,100 --> 00:14:18,420
full debug session and litter your code

312
00:14:17,010 --> 00:14:22,560
with a bunch of print lines and all

313
00:14:18,420 --> 00:14:23,790
kinds of<font color="#E5E5E5"> other stuff</font><font color="#CCCCCC"> additionally</font>

314
00:14:22,560 --> 00:14:26,459
there's been just<font color="#E5E5E5"> performance</font>

315
00:14:23,790 --> 00:14:27,860
improvements this<font color="#E5E5E5"> is mostly for like IDE</font>

316
00:14:26,460 --> 00:14:30,990
integration and stuff like that but

317
00:14:27,860 --> 00:14:32,070
we've done<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of memory caching so</font>

318
00:14:30,990 --> 00:14:35,070
we're not<font color="#E5E5E5"> reading from the process</font>

319
00:14:32,070 --> 00:14:38,220
memory<font color="#E5E5E5"> so much and some improvements</font>

320
00:14:35,070 --> 00:14:40,860
<font color="#CCCCCC">regarding being able</font><font color="#E5E5E5"> to list like go</font>

321
00:14:38,220 --> 00:14:42,720
routines and<font color="#E5E5E5"> stuff like that another</font>

322
00:14:40,860 --> 00:14:45,630
<font color="#E5E5E5">small thing is the the repo has been</font>

323
00:14:42,720 --> 00:14:48,240
moved<font color="#E5E5E5"> from my personal github account to</font>

324
00:14:45,630 --> 00:14:50,070
the go delve<font color="#E5E5E5"> organization nothing's</font>

325
00:14:48,240 --> 00:14:52,230
really changed<font color="#E5E5E5"> just the location of the</font>

326
00:14:50,070 --> 00:14:57,690
repo<font color="#E5E5E5"> but something worth</font><font color="#CCCCCC"> mentioning I</font>

327
00:14:52,230 --> 00:15:00,660
suppose so another thing<font color="#CCCCCC"> I want to talk</font>

328
00:14:57,690 --> 00:15:02,610
about is<font color="#E5E5E5"> upcoming features so things</font>

329
00:15:00,660 --> 00:15:05,730
that<font color="#E5E5E5"> we'd</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> to do within the</font><font color="#CCCCCC"> next</font>

330
00:15:02,610 --> 00:15:07,050
year<font color="#CCCCCC"> that hopefully</font><font color="#E5E5E5"> maybe I can tell you</font>

331
00:15:05,730 --> 00:15:10,160
all<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> things have</font><font color="#CCCCCC"> been</font><font color="#E5E5E5"> done next</font>

332
00:15:07,050 --> 00:15:10,160
<font color="#E5E5E5">time next year at FOSDEM</font>

333
00:15:12,290 --> 00:15:18,769
so some of the big things<font color="#CCCCCC"> support for</font>

334
00:15:16,119 --> 00:15:23,989
<font color="#E5E5E5">113 of course which we should be coming</font>

335
00:15:18,769 --> 00:15:26,119
<font color="#CCCCCC">out</font><font color="#E5E5E5"> next year</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> just improving the</font>

336
00:15:23,989 --> 00:15:29,720
the debug<font color="#E5E5E5"> information upstream improving</font>

337
00:15:26,119 --> 00:15:33,139
how we how we parse<font color="#CCCCCC"> it and use that</font>

338
00:15:29,720 --> 00:15:34,459
<font color="#E5E5E5">information and so on and so forth so if</font>

339
00:15:33,139 --> 00:15:36,109
you're ever interested in some<font color="#E5E5E5"> of the</font>

340
00:15:34,459 --> 00:15:38,059
upstream debugging changes that are

341
00:15:36,109 --> 00:15:39,859
happening or<font color="#CCCCCC"> are currently</font><font color="#E5E5E5"> in flight if</font>

342
00:15:38,059 --> 00:15:41,929
you go to github<font color="#E5E5E5"> and look at the go</font>

343
00:15:39,859 --> 00:15:43,279
issue tracker<font color="#E5E5E5"> there's a debugging label</font>

344
00:15:41,929 --> 00:15:45,049
so<font color="#E5E5E5"> you can always take a look at that if</font>

345
00:15:43,279 --> 00:15:50,089
<font color="#E5E5E5">you're ever interested in the state</font><font color="#CCCCCC"> of</font>

346
00:15:45,049 --> 00:15:52,699
upstream debug<font color="#CCCCCC"> support we want to</font>

347
00:15:50,089 --> 00:15:56,299
<font color="#E5E5E5">continue adding support for debugging</font>

348
00:15:52,699 --> 00:15:58,248
<font color="#E5E5E5">optimized binaries a big one is adding</font>

349
00:15:56,299 --> 00:16:04,339
support<font color="#CCCCCC"> for more architectures right now</font>

350
00:15:58,249 --> 00:16:06,709
<font color="#E5E5E5">our support matrix is x86 64 and so we</font>

351
00:16:04,339 --> 00:16:08,929
want to add you<font color="#E5E5E5"> know arm 32-bit</font>

352
00:16:06,709 --> 00:16:10,669
architectures things like that<font color="#CCCCCC"> and this</font>

353
00:16:08,929 --> 00:16:13,249
is a place where<font color="#CCCCCC"> community contributions</font>

354
00:16:10,669 --> 00:16:15,350
can really shine

355
00:16:13,249 --> 00:16:16,910
another huge feature that we're looking

356
00:16:15,350 --> 00:16:21,139
<font color="#E5E5E5">to add is supporting a scripting</font>

357
00:16:16,910 --> 00:16:24,079
language<font color="#CCCCCC"> so instead of</font><font color="#E5E5E5"> just interacting</font>

358
00:16:21,139 --> 00:16:26,600
with Dell through the API<font color="#CCCCCC"> where we're</font>

359
00:16:24,079 --> 00:16:27,649
<font color="#E5E5E5">looking at adding a integration with a</font>

360
00:16:26,600 --> 00:16:32,029
scripting language right<font color="#CCCCCC"> now we're</font>

361
00:16:27,649 --> 00:16:35,629
<font color="#CCCCCC">looking at a star</font><font color="#E5E5E5"> lark which is the</font>

362
00:16:32,029 --> 00:16:37,929
programming language<font color="#CCCCCC"> used for</font><font color="#E5E5E5"> I forget</font>

363
00:16:35,629 --> 00:16:41,660
the name of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> build system</font>

364
00:16:37,929 --> 00:16:43,100
yeah basil basil<font color="#E5E5E5"> it's the the it's it's</font>

365
00:16:41,660 --> 00:16:46,429
used for<font color="#E5E5E5"> that so we've been talking</font><font color="#CCCCCC"> with</font>

366
00:16:43,100 --> 00:16:48,559
<font color="#E5E5E5">Alan Donovan and trying to trying to see</font>

367
00:16:46,429 --> 00:16:49,699
what we can do to<font color="#CCCCCC"> integrate that</font><font color="#E5E5E5"> but</font>

368
00:16:48,559 --> 00:16:51,469
you'll be<font color="#E5E5E5"> able to define your</font><font color="#CCCCCC"> own</font>

369
00:16:49,699 --> 00:16:55,118
functions<font color="#CCCCCC"> and it'll really</font><font color="#E5E5E5"> make the</font>

370
00:16:51,470 --> 00:16:55,119
experience seem a lot<font color="#E5E5E5"> more interactive</font>

371
00:16:55,179 --> 00:17:00,529
<font color="#E5E5E5">we want to improve goroutine inspections</font>

372
00:16:57,889 --> 00:17:02,419
so just show you more<font color="#E5E5E5"> information about</font>

373
00:17:00,529 --> 00:17:04,669
<font color="#E5E5E5">go routine more information about like</font>

374
00:17:02,419 --> 00:17:06,378
the<font color="#CCCCCC"> goroutine stack where like where</font>

375
00:17:04,669 --> 00:17:09,769
it's located the size of the<font color="#CCCCCC"> goroutine</font>

376
00:17:06,378 --> 00:17:13,250
stack things<font color="#E5E5E5"> like that</font><font color="#CCCCCC"> improve process</font>

377
00:17:09,769 --> 00:17:14,839
inspections so just making<font color="#CCCCCC"> like /proc</font>

378
00:17:13,250 --> 00:17:17,929
information available showing page

379
00:17:14,839 --> 00:17:21,619
mappings and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> improve</font>

380
00:17:17,929 --> 00:17:23,959
<font color="#E5E5E5">stack frame inspection</font><font color="#CCCCCC"> improve and</font>

381
00:17:21,619 --> 00:17:25,339
<font color="#E5E5E5">improve function calling so there's some</font>

382
00:17:23,959 --> 00:17:25,700
limitations<font color="#CCCCCC"> to function</font><font color="#E5E5E5"> calling which</font>

383
00:17:25,339 --> 00:17:29,120
<font color="#E5E5E5">I'll get</font>

384
00:17:25,700 --> 00:17:30,410
- but I'm getting short on<font color="#E5E5E5"> time</font><font color="#CCCCCC"> so let</font>

385
00:17:29,120 --> 00:17:32,209
me<font color="#E5E5E5"> just jump into that so we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> get</font>

386
00:17:30,410 --> 00:17:36,680
that the deep<font color="#CCCCCC"> dive deep dive into the</font>

387
00:17:32,210 --> 00:17:38,720
function<font color="#E5E5E5"> calling so as I said this was a</font>

388
00:17:36,680 --> 00:17:41,090
<font color="#CCCCCC">really</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> feature and it</font><font color="#E5E5E5"> took a</font>

389
00:17:38,720 --> 00:17:44,240
lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> coordination so I kind of wanted</font>

390
00:17:41,090 --> 00:17:46,939
<font color="#E5E5E5">to just dig into it and show everybody</font>

391
00:17:44,240 --> 00:17:48,290
<font color="#E5E5E5">how it works and and just share</font>

392
00:17:46,940 --> 00:17:49,460
<font color="#E5E5E5">something that</font><font color="#CCCCCC"> I thought</font><font color="#E5E5E5"> was pretty</font>

393
00:17:48,290 --> 00:17:56,600
exciting<font color="#E5E5E5"> and a really cool</font>

394
00:17:49,460 --> 00:18:00,280
implementation so the<font color="#E5E5E5"> syntax for calling</font>

395
00:17:56,600 --> 00:18:02,719
<font color="#E5E5E5">a function is just</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> so you call</font>

396
00:18:00,280 --> 00:18:04,340
whatever your function is you can pass

397
00:18:02,720 --> 00:18:07,700
it arguments<font color="#CCCCCC"> there's some limitations</font><font color="#E5E5E5"> on</font>

398
00:18:04,340 --> 00:18:09,320
<font color="#E5E5E5">which arguments you can pass but I'll</font>

399
00:18:07,700 --> 00:18:12,350
get into<font color="#CCCCCC"> that a little</font><font color="#E5E5E5"> bit a little</font><font color="#CCCCCC"> bit</font>

400
00:18:09,320 --> 00:18:14,929
later<font color="#CCCCCC"> you can also call methods</font><font color="#E5E5E5"> there's</font>

401
00:18:12,350 --> 00:18:17,959
limitations<font color="#E5E5E5"> there just because in</font>

402
00:18:14,930 --> 00:18:19,220
reality<font color="#E5E5E5"> what's happening is the method</font>

403
00:18:17,960 --> 00:18:22,370
receiver is being passed as an argument

404
00:18:19,220 --> 00:18:25,660
so same argument limitations apply but

405
00:18:22,370 --> 00:18:25,659
again I'll get I'll get into<font color="#CCCCCC"> that</font><font color="#E5E5E5"> later</font>

406
00:18:28,690 --> 00:18:34,490
<font color="#E5E5E5">so in order to in</font><font color="#CCCCCC"> order for the for</font>

407
00:18:32,630 --> 00:18:35,930
delve to make a function call<font color="#E5E5E5"> in the</font>

408
00:18:34,490 --> 00:18:38,090
target program there's a procedure<font color="#CCCCCC"> that</font>

409
00:18:35,930 --> 00:18:38,780
must be followed<font color="#CCCCCC"> so I want to talk</font>

410
00:18:38,090 --> 00:18:41,810
<font color="#CCCCCC">through</font><font color="#E5E5E5"> that right now</font>

411
00:18:38,780 --> 00:18:43,960
<font color="#E5E5E5">so when you type call myfunc what</font>

412
00:18:41,810 --> 00:18:46,250
<font color="#E5E5E5">actually happens underneath the hood is</font>

413
00:18:43,960 --> 00:18:48,710
<font color="#E5E5E5">delve does a bunch of stuff</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> it checks</font>

414
00:18:46,250 --> 00:18:51,020
go<font color="#E5E5E5"> routine state and make sure that the</font>

415
00:18:48,710 --> 00:18:52,370
go routine is in is is<font color="#E5E5E5"> actually running</font>

416
00:18:51,020 --> 00:18:55,490
<font color="#E5E5E5">so that's a</font><font color="#CCCCCC"> limitation that</font><font color="#E5E5E5"> we have</font>

417
00:18:52,370 --> 00:18:57,979
right now<font color="#E5E5E5"> the girl routine has to be</font>

418
00:18:55,490 --> 00:19:01,940
<font color="#E5E5E5">running it pushes the current PC on</font><font color="#CCCCCC"> the</font>

419
00:18:57,980 --> 00:19:06,920
stack<font color="#E5E5E5"> it's it writes the argument frame</font>

420
00:19:01,940 --> 00:19:08,720
size<font color="#E5E5E5"> and and it writes this on the stack</font>

421
00:19:06,920 --> 00:19:11,900
as<font color="#CCCCCC"> well and this is</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> communicate with</font>

422
00:19:08,720 --> 00:19:13,940
<font color="#E5E5E5">the go runtime so the go runtime needs</font>

423
00:19:11,900 --> 00:19:16,250
to know how much<font color="#E5E5E5"> space we need for a</font>

424
00:19:13,940 --> 00:19:19,040
stack to to call whatever function that

425
00:19:16,250 --> 00:19:21,230
we're trying to call we save machine

426
00:19:19,040 --> 00:19:22,879
registers<font color="#CCCCCC"> this is just because if you</font>

427
00:19:21,230 --> 00:19:24,650
call<font color="#E5E5E5"> a function it's</font><font color="#CCCCCC"> going to do a bunch</font>

428
00:19:22,880 --> 00:19:26,390
<font color="#CCCCCC">of stuff it could clobber registers</font>

429
00:19:24,650 --> 00:19:28,070
things like that so once the function

430
00:19:26,390 --> 00:19:29,900
<font color="#E5E5E5">call is over and we return back</font><font color="#CCCCCC"> to</font>

431
00:19:28,070 --> 00:19:32,210
<font color="#E5E5E5">wherever we were we want to make sure</font>

432
00:19:29,900 --> 00:19:37,190
<font color="#E5E5E5">that we haven't like permanently changed</font>

433
00:19:32,210 --> 00:19:38,870
the state of the program<font color="#E5E5E5"> we set the</font><font color="#CCCCCC"> the</font>

434
00:19:37,190 --> 00:19:41,510
PC to

435
00:19:38,870 --> 00:19:43,399
<font color="#E5E5E5">runtime debug</font><font color="#CCCCCC"> call</font><font color="#E5E5E5"> so when I say PC</font>

436
00:19:41,510 --> 00:19:47,060
that's the program counter<font color="#CCCCCC"> register</font><font color="#E5E5E5"> so</font>

437
00:19:43,400 --> 00:19:49,040
we we tell the CPU when<font color="#CCCCCC"> we when we</font><font color="#E5E5E5"> tell</font>

438
00:19:47,060 --> 00:19:53,030
<font color="#CCCCCC">you to continue again</font><font color="#E5E5E5"> start executing</font>

439
00:19:49,040 --> 00:19:55,100
the code at this address<font color="#CCCCCC"> and the runtime</font>

440
00:19:53,030 --> 00:19:56,930
debug<font color="#E5E5E5"> call v1 that's the integration</font>

441
00:19:55,100 --> 00:19:59,209
with the<font color="#CCCCCC"> go</font><font color="#E5E5E5"> runtimes that we that we use</font>

442
00:19:56,930 --> 00:20:02,690
to make<font color="#E5E5E5"> this happen</font><font color="#CCCCCC"> and then following</font>

443
00:19:59,210 --> 00:20:05,870
that<font color="#CCCCCC"> we just continue</font><font color="#E5E5E5"> execution then</font>

444
00:20:02,690 --> 00:20:08,360
what happens is we<font color="#E5E5E5"> switch back to the</font>

445
00:20:05,870 --> 00:20:11,060
<font color="#E5E5E5">runtime so since we set we told the the</font>

446
00:20:08,360 --> 00:20:13,010
processor to execute this just to

447
00:20:11,060 --> 00:20:14,870
execute this runtime function it starts

448
00:20:13,010 --> 00:20:17,570
<font color="#CCCCCC">doing all of</font><font color="#E5E5E5"> its things so a copies</font>

449
00:20:14,870 --> 00:20:21,439
<font color="#E5E5E5">register contents to stack this is for</font>

450
00:20:17,570 --> 00:20:23,360
the GC to be able<font color="#CCCCCC"> to if there's any</font>

451
00:20:21,440 --> 00:20:25,910
<font color="#E5E5E5">pointers in the registers it allows the</font>

452
00:20:23,360 --> 00:20:28,129
garbage collector to still have to still

453
00:20:25,910 --> 00:20:30,620
see those it performs some some safety

454
00:20:28,130 --> 00:20:33,440
checking and it a liqu AIT's a stack

455
00:20:30,620 --> 00:20:36,320
frame<font color="#CCCCCC"> for the function call setting the</font>

456
00:20:33,440 --> 00:20:38,210
stack pointer register<font color="#E5E5E5"> appropriately and</font>

457
00:20:36,320 --> 00:20:41,899
<font color="#E5E5E5">then it communicates to delve</font><font color="#CCCCCC"> through</font>

458
00:20:38,210 --> 00:20:44,660
the ax register<font color="#E5E5E5"> so it sets the ax</font>

459
00:20:41,900 --> 00:20:48,560
register to<font color="#CCCCCC"> zero and then what it does</font>

460
00:20:44,660 --> 00:20:50,720
is it calls and<font color="#CCCCCC"> three</font><font color="#E5E5E5"> which is a which</font>

461
00:20:48,560 --> 00:20:54,620
<font color="#CCCCCC">is a it's a like breakpoint</font><font color="#E5E5E5"> interrupt</font>

462
00:20:50,720 --> 00:20:56,690
<font color="#E5E5E5">that that is that debuggers listen to</font>

463
00:20:54,620 --> 00:20:59,239
and it will switch<font color="#E5E5E5"> it will essentially</font>

464
00:20:56,690 --> 00:21:02,020
transfer control from the target process

465
00:20:59,240 --> 00:21:06,320
<font color="#E5E5E5">executing runtime code to the debugger</font>

466
00:21:02,020 --> 00:21:08,750
<font color="#E5E5E5">to do what it needs</font><font color="#CCCCCC"> to do next</font><font color="#E5E5E5"> so state</font>

467
00:21:06,320 --> 00:21:11,629
of execution transfers back<font color="#E5E5E5"> to delve</font>

468
00:21:08,750 --> 00:21:13,190
delve<font color="#E5E5E5"> will on the new stack frame that</font>

469
00:21:11,630 --> 00:21:16,970
<font color="#E5E5E5">was allocated it will write the argument</font>

470
00:21:13,190 --> 00:21:19,550
frame so when arguments are passed<font color="#E5E5E5"> to go</font>

471
00:21:16,970 --> 00:21:20,930
functions<font color="#CCCCCC"> they're passed on the stack so</font>

472
00:21:19,550 --> 00:21:23,659
it writes all the<font color="#E5E5E5"> arguments on the stack</font>

473
00:21:20,930 --> 00:21:25,880
it sets the<font color="#CCCCCC"> traps</font><font color="#E5E5E5"> PC has returned so the</font>

474
00:21:23,660 --> 00:21:28,520
<font color="#E5E5E5">traps PC in this case is where the</font>

475
00:21:25,880 --> 00:21:30,410
<font color="#E5E5E5">runtime code left off so what this does</font>

476
00:21:28,520 --> 00:21:32,450
<font color="#E5E5E5">is</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> the function that we're calling</font>

477
00:21:30,410 --> 00:21:34,850
<font color="#E5E5E5">is done executing</font><font color="#CCCCCC"> it's actually going</font><font color="#E5E5E5"> to</font>

478
00:21:32,450 --> 00:21:36,380
return<font color="#CCCCCC"> back into</font><font color="#E5E5E5"> the go runtime instead</font>

479
00:21:34,850 --> 00:21:39,620
of returning wherever else it might have

480
00:21:36,380 --> 00:21:42,380
returned and then it sets the the

481
00:21:39,620 --> 00:21:45,050
program counter<font color="#E5E5E5"> to the called function</font>

482
00:21:42,380 --> 00:21:47,450
and it<font color="#CCCCCC"> resumes execution</font><font color="#E5E5E5"> basically doing</font>

483
00:21:45,050 --> 00:21:49,190
like a jump and allowing the the

484
00:21:47,450 --> 00:21:52,190
<font color="#E5E5E5">function that you wanted a call to</font>

485
00:21:49,190 --> 00:21:55,460
execute once that happens the<font color="#CCCCCC"> the</font>

486
00:21:52,190 --> 00:21:57,559
the<font color="#CCCCCC"> function</font><font color="#E5E5E5"> executes and once it's done</font>

487
00:21:55,460 --> 00:22:01,309
executing<font color="#CCCCCC"> since we set the return value</font>

488
00:21:57,559 --> 00:22:04,220
it returns<font color="#CCCCCC"> into the run time</font><font color="#E5E5E5"> and the run</font>

489
00:22:01,309 --> 00:22:05,960
time sets the ax register appropriately

490
00:22:04,220 --> 00:22:09,740
<font color="#E5E5E5">to communicate what happened back to</font>

491
00:22:05,960 --> 00:22:12,320
Delft so it sets the register<font color="#E5E5E5"> to 1 if</font>

492
00:22:09,740 --> 00:22:13,940
the function call is successful if the

493
00:22:12,320 --> 00:22:16,879
function panics for any reason the run

494
00:22:13,940 --> 00:22:19,640
time actually<font color="#E5E5E5"> wraps that and we'll set</font>

495
00:22:16,880 --> 00:22:21,140
the register to<font color="#E5E5E5"> 2 and allow delve to</font>

496
00:22:19,640 --> 00:22:25,100
read the panic reason and report<font color="#CCCCCC"> that</font>

497
00:22:21,140 --> 00:22:26,540
<font color="#CCCCCC">back to</font><font color="#E5E5E5"> the user</font><font color="#CCCCCC"> and then it does the</font>

498
00:22:25,100 --> 00:22:29,840
same<font color="#E5E5E5"> breakpoint instruction to switch</font>

499
00:22:26,540 --> 00:22:32,168
execution context back to delve and then

500
00:22:29,840 --> 00:22:36,379
delve reads the return values on success

501
00:22:32,169 --> 00:22:42,590
<font color="#E5E5E5">from the stack and then or reads the</font>

502
00:22:36,380 --> 00:22:44,210
panic message<font color="#E5E5E5"> on failure</font><font color="#CCCCCC"> and that's</font>

503
00:22:42,590 --> 00:22:46,010
<font color="#CCCCCC">pretty much</font><font color="#E5E5E5"> the whole procedure</font><font color="#CCCCCC"> I</font>

504
00:22:44,210 --> 00:22:47,330
thought that was really<font color="#CCCCCC"> interesting so I</font>

505
00:22:46,010 --> 00:22:49,970
<font color="#CCCCCC">wanted</font><font color="#E5E5E5"> to take a deep dive</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> it so</font>

506
00:22:47,330 --> 00:22:52,090
there's there's some limitations<font color="#CCCCCC"> and</font>

507
00:22:49,970 --> 00:22:54,919
I'll go through those pretty<font color="#E5E5E5"> quickly</font><font color="#CCCCCC"> so</font>

508
00:22:52,090 --> 00:22:56,928
<font color="#CCCCCC">only pointers to stack allocated objects</font>

509
00:22:54,919 --> 00:23:00,020
can be<font color="#E5E5E5"> passed as an argument</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

510
00:22:56,929 --> 00:23:02,090
because we<font color="#E5E5E5"> don't have like escape</font>

511
00:23:00,020 --> 00:23:05,570
information present in debug info right

512
00:23:02,090 --> 00:23:09,080
now so if you if you pass a stack

513
00:23:05,570 --> 00:23:11,299
argument<font color="#CCCCCC"> and the function that you pass</font>

514
00:23:09,080 --> 00:23:13,129
it to makes that makes that escape to

515
00:23:11,299 --> 00:23:14,600
the heap<font color="#CCCCCC"> for whatever reason</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> not</font>

516
00:23:13,130 --> 00:23:15,980
able to really track that and warn you

517
00:23:14,600 --> 00:23:19,879
of that so that could cause weird memory

518
00:23:15,980 --> 00:23:21,559
<font color="#CCCCCC">can</font><font color="#E5E5E5"> corruption issues we do some</font>

519
00:23:19,880 --> 00:23:23,809
<font color="#E5E5E5">automatic type conversion for you</font><font color="#CCCCCC"> when</font>

520
00:23:21,559 --> 00:23:28,040
you when you supply arguments but<font color="#CCCCCC"> only</font>

521
00:23:23,809 --> 00:23:29,720
some are supported<font color="#CCCCCC"> they can only be</font>

522
00:23:28,040 --> 00:23:32,090
<font color="#E5E5E5">called our functions can only be called</font>

523
00:23:29,720 --> 00:23:33,260
on running<font color="#CCCCCC"> co-routines and the current</font>

524
00:23:32,090 --> 00:23:35,899
go routine that you're<font color="#E5E5E5"> calling from</font>

525
00:23:33,260 --> 00:23:40,400
needs to have at least<font color="#E5E5E5"> 256 bytes of free</font>

526
00:23:35,900 --> 00:23:42,140
space on<font color="#E5E5E5"> the stack</font><font color="#CCCCCC"> functions can only be</font>

527
00:23:40,400 --> 00:23:45,140
called<font color="#E5E5E5"> when goroutine is that stopped at</font>

528
00:23:42,140 --> 00:23:47,150
a safe point<font color="#E5E5E5"> and calling a function will</font>

529
00:23:45,140 --> 00:23:48,919
resume<font color="#E5E5E5"> execution on all go routines</font><font color="#CCCCCC"> a</font>

530
00:23:47,150 --> 00:23:51,980
feature that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> want to do is being</font><font color="#E5E5E5"> able</font>

531
00:23:48,919 --> 00:23:53,809
to<font color="#E5E5E5"> just continue one</font><font color="#CCCCCC"> go routine</font><font color="#E5E5E5"> while</font>

532
00:23:51,980 --> 00:23:56,480
this function is<font color="#E5E5E5"> being executed</font><font color="#CCCCCC"> to</font>

533
00:23:53,809 --> 00:23:58,580
minimize<font color="#CCCCCC"> side-effects but that that'll</font>

534
00:23:56,480 --> 00:24:00,320
require<font color="#E5E5E5"> more cooperation with the</font>

535
00:23:58,580 --> 00:24:03,379
runtime team and so<font color="#CCCCCC"> hopefully we'll get</font>

536
00:24:00,320 --> 00:24:05,480
that<font color="#CCCCCC"> done in the</font><font color="#E5E5E5"> next year</font><font color="#CCCCCC"> and it's only</font>

537
00:24:03,380 --> 00:24:08,350
supported on Linux<font color="#E5E5E5"> and OS X right now</font>

538
00:24:05,480 --> 00:24:11,480
so we're well we're gonna add<font color="#CCCCCC"> continue</font>

539
00:24:08,350 --> 00:24:15,580
adding<font color="#E5E5E5"> support for</font><font color="#CCCCCC"> that as well and</font>

540
00:24:11,480 --> 00:24:15,580
that's<font color="#CCCCCC"> everything</font><font color="#E5E5E5"> so thank you so much</font>

541
00:24:19,800 --> 00:24:21,860
<font color="#E5E5E5">you</font>

