1
00:00:13,900 --> 00:00:17,440
<font color="#E5E5E5">okay</font>

2
00:00:15,460 --> 00:00:20,050
last talk of the day<font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> have mass</font>

3
00:00:17,440 --> 00:00:29,790
and<font color="#CCCCCC"> took to us about writing CNI and I</font>

4
00:00:20,050 --> 00:00:29,790
use it<font color="#CCCCCC"> ice oops well</font><font color="#E5E5E5"> mister I'm sorry</font>

5
00:00:30,119 --> 00:00:52,329
sorry<font color="#CCCCCC"> I thought we had working</font>

6
00:00:48,360 --> 00:00:54,430
hello my name is<font color="#CCCCCC"> Martin</font><font color="#E5E5E5"> I'm working for</font>

7
00:00:52,329 --> 00:00:56,620
Red Hat<font color="#CCCCCC"> I'm taking care of the</font>

8
00:00:54,430 --> 00:00:59,320
networking<font color="#CCCCCC"> side of the overit and cube</font>

9
00:00:56,620 --> 00:01:03,879
<font color="#CCCCCC">URIs projects and today I</font><font color="#E5E5E5"> will tell you</font>

10
00:00:59,320 --> 00:01:08,710
about<font color="#E5E5E5"> how to write a CNI and</font><font color="#CCCCCC"> we'll</font>

11
00:01:03,880 --> 00:01:11,290
quickly implement basic<font color="#E5E5E5"> CNI plugin</font>

12
00:01:08,710 --> 00:01:13,300
<font color="#E5E5E5">I will try to make</font><font color="#CCCCCC"> it as simple as</font>

13
00:01:11,290 --> 00:01:15,250
<font color="#CCCCCC">possible so</font><font color="#E5E5E5"> please bear with any</font>

14
00:01:13,300 --> 00:01:18,310
simplifications that<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> make I'll</font>

15
00:01:15,250 --> 00:01:20,590
probably make quite a<font color="#E5E5E5"> few of them</font><font color="#CCCCCC"> okay</font>

16
00:01:18,310 --> 00:01:23,580
in the demo I'll first go

17
00:01:20,590 --> 00:01:26,710
<font color="#CCCCCC">I will first</font><font color="#E5E5E5"> have two slides about</font>

18
00:01:23,580 --> 00:01:29,679
<font color="#E5E5E5">containers and network namespaces will</font>

19
00:01:26,710 --> 00:01:33,039
briefly talk<font color="#E5E5E5"> about what a CN is and then</font>

20
00:01:29,680 --> 00:01:36,100
we'll go<font color="#CCCCCC"> over to</font><font color="#E5E5E5"> the live demo</font><font color="#CCCCCC"> Hey</font>

21
00:01:33,040 --> 00:01:38,740
what is a container<font color="#E5E5E5"> it's a combination</font>

22
00:01:36,100 --> 00:01:41,979
of some<font color="#E5E5E5"> C groups for meter metering and</font>

23
00:01:38,740 --> 00:01:44,979
limiting some storage<font color="#E5E5E5"> and a set of</font>

24
00:01:41,979 --> 00:01:47,560
namespaces the namespaces<font color="#CCCCCC"> are to keep</font>

25
00:01:44,979 --> 00:01:49,600
things private to the<font color="#E5E5E5"> container so we</font>

26
00:01:47,560 --> 00:01:53,020
<font color="#CCCCCC">have some</font><font color="#E5E5E5"> protest namespaces mount</font>

27
00:01:49,600 --> 00:01:55,750
namespaces<font color="#E5E5E5"> and what's most important to</font>

28
00:01:53,020 --> 00:01:59,310
us<font color="#E5E5E5"> in this presentation</font><font color="#CCCCCC"> the network</font>

29
00:01:55,750 --> 00:02:01,659
namespaces how many of you<font color="#CCCCCC"> are using</font>

30
00:01:59,310 --> 00:02:08,829
network names<font color="#CCCCCC"> places or are familiar</font>

31
00:02:01,659 --> 00:02:11,829
<font color="#CCCCCC">with that not everyone they stopped</font><font color="#E5E5E5"> by</font>

32
00:02:08,829 --> 00:02:14,920
default in a<font color="#E5E5E5"> Linux instance the whole</font>

33
00:02:11,829 --> 00:02:17,890
networking stack is short so you can see

34
00:02:14,920 --> 00:02:21,578
all the network interfaces<font color="#E5E5E5"> the routing</font>

35
00:02:17,890 --> 00:02:24,608
tables<font color="#E5E5E5"> all other resources</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> network</font>

36
00:02:21,579 --> 00:02:26,230
namespaces<font color="#E5E5E5"> change that a network</font>

37
00:02:24,609 --> 00:02:30,219
namespace is

38
00:02:26,230 --> 00:02:33,640
a private network stack so you have<font color="#E5E5E5"> your</font>

39
00:02:30,219 --> 00:02:36,569
<font color="#CCCCCC">own set of network</font><font color="#E5E5E5"> interfaces</font><font color="#CCCCCC"> your own</font>

40
00:02:33,640 --> 00:02:39,909
private routing tables<font color="#E5E5E5"> IP tables</font>

41
00:02:36,569 --> 00:02:44,108
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> separate</font>

42
00:02:39,909 --> 00:02:46,989
you can have you can<font color="#CCCCCC"> the network</font>

43
00:02:44,109 --> 00:02:49,900
interfaces<font color="#CCCCCC"> they are private to a network</font>

44
00:02:46,989 --> 00:02:52,299
<font color="#E5E5E5">namespace so as in this</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> you can</font>

45
00:02:49,900 --> 00:02:55,060
for example<font color="#CCCCCC"> move and network interface</font>

46
00:02:52,299 --> 00:02:58,169
to a different namespace<font color="#CCCCCC"> a very common</font>

47
00:02:55,060 --> 00:03:01,269
scenario that we will use<font color="#CCCCCC"> is to employ</font>

48
00:02:58,169 --> 00:03:04,060
virtual Ethernet Paris<font color="#E5E5E5"> to communicate</font>

49
00:03:01,269 --> 00:03:12,010
between the tonight<font color="#E5E5E5"> between any two</font>

50
00:03:04,060 --> 00:03:14,620
namespaces so let's now go<font color="#E5E5E5"> over to what</font>

51
00:03:12,010 --> 00:03:18,459
happens when a container is created in

52
00:03:14,620 --> 00:03:20,859
terms<font color="#E5E5E5"> of networking when a content</font>

53
00:03:18,459 --> 00:03:23,019
container is created the network runtime

54
00:03:20,859 --> 00:03:26,439
creates a network<font color="#CCCCCC"> named space for our</font>

55
00:03:23,019 --> 00:03:28,299
container this<font color="#E5E5E5"> is a simplification for a</font>

56
00:03:26,439 --> 00:03:32,108
kubernetes for example we have a network

57
00:03:28,299 --> 00:03:35,979
<font color="#E5E5E5">namespace for</font><font color="#CCCCCC"> a pod</font><font color="#E5E5E5"> but let's ignore it</font>

58
00:03:32,109 --> 00:03:38,650
for now<font color="#CCCCCC"> and after the network</font><font color="#E5E5E5"> is the</font>

59
00:03:35,979 --> 00:03:41,680
container is created our network

60
00:03:38,650 --> 00:03:44,169
namespace is created at this stage the

61
00:03:41,680 --> 00:03:46,870
network name network namespace is not

62
00:03:44,169 --> 00:03:49,720
yet connected<font color="#E5E5E5"> anywhere it doesn't</font><font color="#CCCCCC"> have</font>

63
00:03:46,870 --> 00:03:53,590
any network interfaces<font color="#E5E5E5"> probably besides</font>

64
00:03:49,720 --> 00:03:55,780
the loopback interface<font color="#CCCCCC"> and at</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> stage</font>

65
00:03:53,590 --> 00:04:00,040
<font color="#E5E5E5">the container runtime has to implement</font>

66
00:03:55,780 --> 00:04:02,680
<font color="#CCCCCC">the networking</font><font color="#E5E5E5"> most container interface</font>

67
00:04:00,040 --> 00:04:08,500
container runtimes<font color="#CCCCCC"> use a plug-in</font>

68
00:04:02,680 --> 00:04:12,040
<font color="#E5E5E5">architecture in rocket or kubernetes CNI</font>

69
00:04:08,500 --> 00:04:15,729
is used so CNI<font color="#E5E5E5"> is just a specification</font>

70
00:04:12,040 --> 00:04:18,519
<font color="#E5E5E5">that</font><font color="#CCCCCC"> defines the interface</font><font color="#E5E5E5"> between the</font>

71
00:04:15,729 --> 00:04:23,169
<font color="#E5E5E5">container runtime and the network</font>

72
00:04:18,519 --> 00:04:26,710
implementation CNI is short for

73
00:04:23,169 --> 00:04:29,530
<font color="#E5E5E5">container network interface it is</font><font color="#CCCCCC"> a</font>

74
00:04:26,710 --> 00:04:32,258
simple specification between the

75
00:04:29,530 --> 00:04:35,830
container runtime and the network

76
00:04:32,259 --> 00:04:37,900
implementation<font color="#E5E5E5"> the main part of course</font>

77
00:04:35,830 --> 00:04:38,680
<font color="#E5E5E5">is the specification but it's not only</font>

78
00:04:37,900 --> 00:04:44,620
<font color="#E5E5E5">this</font>

79
00:04:38,680 --> 00:04:47,080
see and<font color="#CCCCCC"> I also have a few plugins</font><font color="#E5E5E5"> basic</font>

80
00:04:44,620 --> 00:04:49,780
<font color="#CCCCCC">plug-in sub supported</font><font color="#E5E5E5"> by the community</font>

81
00:04:47,080 --> 00:04:52,630
<font color="#CCCCCC">it also has some additional libraries</font>

82
00:04:49,780 --> 00:04:55,090
that<font color="#E5E5E5"> make</font><font color="#CCCCCC"> the that make writing</font><font color="#E5E5E5"> of</font>

83
00:04:52,630 --> 00:04:57,070
plugins<font color="#E5E5E5"> easier like it has a skeleton</font>

84
00:04:55,090 --> 00:05:01,390
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> can use to just populate</font>

85
00:04:57,070 --> 00:05:03,900
<font color="#E5E5E5">important bits and it's part of</font><font color="#CCCCCC"> CNC F</font>

86
00:05:01,390 --> 00:05:09,640
which<font color="#E5E5E5"> is also</font><font color="#CCCCCC"> part</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> is also home to</font>

87
00:05:03,900 --> 00:05:11,859
kubernetes how does<font color="#E5E5E5"> it work when the</font>

88
00:05:09,640 --> 00:05:14,650
container<font color="#E5E5E5"> is created the network name</font>

89
00:05:11,860 --> 00:05:17,100
space is<font color="#CCCCCC"> created the container runtime</font>

90
00:05:14,650 --> 00:05:19,989
looks for a network<font color="#E5E5E5"> configuration file</font>

91
00:05:17,100 --> 00:05:23,800
inside<font color="#CCCCCC"> the network</font><font color="#E5E5E5"> configuration file</font><font color="#CCCCCC"> it</font>

92
00:05:19,990 --> 00:05:27,280
finds the information<font color="#CCCCCC"> on how to</font><font color="#E5E5E5"> find the</font>

93
00:05:23,800 --> 00:05:30,010
networking<font color="#CCCCCC"> plug-in using</font><font color="#E5E5E5"> this</font>

94
00:05:27,280 --> 00:05:33,669
<font color="#CCCCCC">information</font><font color="#E5E5E5"> it invokes the cni</font><font color="#CCCCCC"> plug-in</font>

95
00:05:30,010 --> 00:05:36,360
<font color="#E5E5E5">and network configuration is done let's</font>

96
00:05:33,669 --> 00:05:38,710
look at the<font color="#E5E5E5"> cni</font><font color="#CCCCCC"> plugin invocation the</font>

97
00:05:36,360 --> 00:05:40,630
<font color="#CCCCCC">plug-in receives two pieces of</font>

98
00:05:38,710 --> 00:05:43,000
information one is the<font color="#E5E5E5"> network</font>

99
00:05:40,630 --> 00:05:45,330
configuration file<font color="#E5E5E5"> this is exactly the</font>

100
00:05:43,000 --> 00:05:48,100
same<font color="#E5E5E5"> file</font><font color="#CCCCCC"> which was used by</font><font color="#E5E5E5"> the</font>

101
00:05:45,330 --> 00:05:51,190
container run time to find the cni

102
00:05:48,100 --> 00:05:53,350
<font color="#CCCCCC">plugin the other piece</font><font color="#E5E5E5"> of information is</font>

103
00:05:51,190 --> 00:05:55,719
<font color="#CCCCCC">the runtime information this is the</font>

104
00:05:53,350 --> 00:05:58,030
information about<font color="#E5E5E5"> the container which is</font>

105
00:05:55,720 --> 00:05:59,860
being<font color="#E5E5E5"> created the network configuration</font>

106
00:05:58,030 --> 00:06:04,090
at<font color="#E5E5E5"> JSON file</font>

107
00:05:59,860 --> 00:06:07,450
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> streamed into</font><font color="#E5E5E5"> the cni</font><font color="#CCCCCC"> plugin</font><font color="#E5E5E5"> in its</font>

108
00:06:04,090 --> 00:06:10,659
standard input the runtime<font color="#CCCCCC"> information</font>

109
00:06:07,450 --> 00:06:13,090
it's a set of environment variables such

110
00:06:10,660 --> 00:06:15,460
as container ID or a network namespace

111
00:06:13,090 --> 00:06:18,669
<font color="#CCCCCC">and this is</font><font color="#E5E5E5"> this is passed into</font><font color="#CCCCCC"> the</font>

112
00:06:15,460 --> 00:06:21,940
container as a set of environm

113
00:06:18,669 --> 00:06:23,919
environmentally the cni<font color="#CCCCCC"> plug-in</font>

114
00:06:21,940 --> 00:06:28,770
configures the network it has<font color="#CCCCCC"> to do</font>

115
00:06:23,919 --> 00:06:31,780
several<font color="#E5E5E5"> items one is it has to insert a</font>

116
00:06:28,770 --> 00:06:35,620
network in taste interface into the

117
00:06:31,780 --> 00:06:37,599
network name<font color="#E5E5E5"> phase second it has to do I</font>

118
00:06:35,620 --> 00:06:39,850
P address<font color="#CCCCCC"> management so it has to give</font>

119
00:06:37,600 --> 00:06:44,320
an IP<font color="#CCCCCC"> address</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> that interface</font><font color="#E5E5E5"> it has</font>

120
00:06:39,850 --> 00:06:47,730
<font color="#E5E5E5">to configure the routing it has it also</font>

121
00:06:44,320 --> 00:06:50,550
has to modify the<font color="#E5E5E5"> networking on the host</font>

122
00:06:47,730 --> 00:06:53,400
in such a manner<font color="#CCCCCC"> that the container is</font>

123
00:06:50,550 --> 00:06:55,860
<font color="#E5E5E5">reachable</font><font color="#CCCCCC"> from all other containers on</font>

124
00:06:53,400 --> 00:06:58,080
<font color="#CCCCCC">the cluster after it's</font><font color="#E5E5E5"> done</font>

125
00:06:55,860 --> 00:07:01,740
it returns<font color="#CCCCCC"> result to the container</font>

126
00:06:58,080 --> 00:07:04,050
<font color="#CCCCCC">runtime</font><font color="#E5E5E5"> the result is in the JSON format</font>

127
00:07:01,740 --> 00:07:08,930
and it's<font color="#CCCCCC"> streamed to the</font><font color="#E5E5E5"> container</font>

128
00:07:04,050 --> 00:07:12,450
runtime<font color="#E5E5E5"> in the plugins standard output</font>

129
00:07:08,930 --> 00:07:14,400
let's look at an example<font color="#E5E5E5"> of the network</font>

130
00:07:12,450 --> 00:07:17,880
configuration file there<font color="#E5E5E5"> are actually</font>

131
00:07:14,400 --> 00:07:21,870
only three mandatory parameters<font color="#E5E5E5"> CNI</font>

132
00:07:17,880 --> 00:07:25,159
version this is the version of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> cni</font>

133
00:07:21,870 --> 00:07:30,300
specification that we implement name and

134
00:07:25,160 --> 00:07:33,330
type type is important here type is it

135
00:07:30,300 --> 00:07:36,390
is<font color="#E5E5E5"> actually the name of the plug-in</font>

136
00:07:33,330 --> 00:07:39,810
binary which we will involve so if we

137
00:07:36,390 --> 00:07:43,469
are<font color="#CCCCCC"> using demo</font><font color="#E5E5E5"> our binary has to be</font><font color="#CCCCCC"> also</font>

138
00:07:39,810 --> 00:07:45,780
to be named demo<font color="#CCCCCC"> there are also some</font>

139
00:07:43,470 --> 00:07:49,590
additional<font color="#E5E5E5"> optional parameters like IBM</font>

140
00:07:45,780 --> 00:07:53,609
DNS and the file can<font color="#E5E5E5"> also contain any</font>

141
00:07:49,590 --> 00:07:55,679
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> additional parameters not</font>

142
00:07:53,610 --> 00:07:59,270
useful<font color="#E5E5E5"> for the container runtime but</font>

143
00:07:55,680 --> 00:08:01,590
<font color="#E5E5E5">it's also passed to to the plug-in</font><font color="#CCCCCC"> and</font>

144
00:07:59,270 --> 00:08:06,510
actually in the demo<font color="#E5E5E5"> we will make use of</font>

145
00:08:01,590 --> 00:08:10,560
this the runtime information<font color="#CCCCCC"> CNI comment</font>

146
00:08:06,510 --> 00:08:13,080
this<font color="#E5E5E5"> is an variable that tells us what</font>

147
00:08:10,560 --> 00:08:17,310
<font color="#E5E5E5">the container runtime wants the plug-in</font>

148
00:08:13,080 --> 00:08:20,280
<font color="#E5E5E5">to do we have four values add delete</font>

149
00:08:17,310 --> 00:08:22,770
track and version adds it obviously

150
00:08:20,280 --> 00:08:25,679
means we are adding a container<font color="#E5E5E5"> delete</font>

151
00:08:22,770 --> 00:08:29,340
<font color="#E5E5E5">we are deleting a container</font><font color="#CCCCCC"> check its</font>

152
00:08:25,680 --> 00:08:32,370
track<font color="#E5E5E5"> if the network configuration is</font>

153
00:08:29,340 --> 00:08:35,728
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> and version this just returns the</font>

154
00:08:32,370 --> 00:08:39,240
supported versions<font color="#CCCCCC"> a container ID</font><font color="#E5E5E5"> pretty</font>

155
00:08:35,729 --> 00:08:41,729
<font color="#E5E5E5">obvious</font><font color="#CCCCCC"> Network not earnest this is the</font>

156
00:08:39,240 --> 00:08:44,840
network namespace I have<font color="#E5E5E5"> named this is</font>

157
00:08:41,729 --> 00:08:48,470
the name of the network<font color="#E5E5E5"> interface which</font>

158
00:08:44,840 --> 00:08:54,200
the container runtime expects us to

159
00:08:48,470 --> 00:08:59,520
create CNI path this is the path to<font color="#CCCCCC"> the</font>

160
00:08:54,200 --> 00:09:01,480
<font color="#CCCCCC">cni plugins directory and CNI arcs</font><font color="#E5E5E5"> this</font>

161
00:08:59,520 --> 00:09:04,920
is just some<font color="#E5E5E5"> additional</font>

162
00:09:01,480 --> 00:09:08,139
information<font color="#E5E5E5"> that the container runtime</font>

163
00:09:04,920 --> 00:09:10,779
<font color="#CCCCCC">wants</font><font color="#E5E5E5"> to pass to us in kubernetes for</font>

164
00:09:08,139 --> 00:09:16,779
example you can<font color="#E5E5E5"> find the pod name that</font>

165
00:09:10,779 --> 00:09:20,740
is being created<font color="#CCCCCC"> in here CNI result</font><font color="#E5E5E5"> this</font>

166
00:09:16,779 --> 00:09:24,670
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the CNI result for adding for adding</font>

167
00:09:20,740 --> 00:09:28,870
a container<font color="#E5E5E5"> we have the</font><font color="#CCCCCC"> CNI version a</font>

168
00:09:24,670 --> 00:09:31,800
list of created interfaces<font color="#E5E5E5"> IP routes and</font>

169
00:09:28,870 --> 00:09:37,750
DNS<font color="#CCCCCC"> information</font><font color="#E5E5E5"> we'll go over that</font><font color="#CCCCCC"> in</font>

170
00:09:31,800 --> 00:09:39,490
more detail in<font color="#CCCCCC"> the demo</font><font color="#E5E5E5"> so let us now go</font>

171
00:09:37,750 --> 00:09:45,000
<font color="#CCCCCC">over</font><font color="#E5E5E5"> to the demo first</font>

172
00:09:39,490 --> 00:09:49,990
I will<font color="#E5E5E5"> briefly talk about what I will do</font>

173
00:09:45,000 --> 00:09:53,079
when<font color="#CCCCCC"> we start the demo our container</font><font color="#E5E5E5"> and</font>

174
00:09:49,990 --> 00:09:55,750
our network namespace will already be

175
00:09:53,079 --> 00:10:00,310
created first we will write a simple

176
00:09:55,750 --> 00:10:02,920
<font color="#E5E5E5">network configuration file</font><font color="#CCCCCC"> the second</font>

177
00:10:00,310 --> 00:10:06,638
step<font color="#CCCCCC"> just to</font><font color="#E5E5E5"> make it a little bit easier</font>

178
00:10:02,920 --> 00:10:08,740
<font color="#E5E5E5">we'll use named</font><font color="#CCCCCC"> network namespaces what</font>

179
00:10:06,639 --> 00:10:11,410
we will get<font color="#E5E5E5"> from kubernetes is an</font>

180
00:10:08,740 --> 00:10:15,639
unnamed<font color="#E5E5E5"> network namespace just for the</font>

181
00:10:11,410 --> 00:10:19,630
sake of making<font color="#CCCCCC"> it easier</font><font color="#E5E5E5"> we'll create a</font>

182
00:10:15,639 --> 00:10:23,760
named one next<font color="#CCCCCC"> we'll create a bridge to</font>

183
00:10:19,630 --> 00:10:27,430
which we will connect and we'll add

184
00:10:23,760 --> 00:10:31,269
we'll add an IP address<font color="#CCCCCC"> to it</font><font color="#E5E5E5"> we'll</font>

185
00:10:27,430 --> 00:10:33,790
create a virtual Ethernet<font color="#E5E5E5"> para will move</font>

186
00:10:31,269 --> 00:10:36,010
one<font color="#E5E5E5"> one end of the</font><font color="#CCCCCC"> period to</font><font color="#E5E5E5"> our bridge</font>

187
00:10:33,790 --> 00:10:39,719
<font color="#CCCCCC">and we'll move the other</font><font color="#E5E5E5"> end to</font><font color="#CCCCCC"> our</font>

188
00:10:36,010 --> 00:10:42,550
network namespace<font color="#E5E5E5"> remember that</font>

189
00:10:39,720 --> 00:10:46,269
container<font color="#E5E5E5"> run time gives us the name of</font>

190
00:10:42,550 --> 00:10:49,899
<font color="#E5E5E5">the of the interface is</font><font color="#CCCCCC"> expect</font><font color="#E5E5E5"> to be</font>

191
00:10:46,269 --> 00:10:55,899
inserted into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> so next step</font>

192
00:10:49,899 --> 00:10:58,089
we<font color="#E5E5E5"> will rename it will configure the</font>

193
00:10:55,899 --> 00:11:01,959
<font color="#E5E5E5">connection we'll add the IP will</font>

194
00:10:58,089 --> 00:11:04,510
configure routing and this is it<font color="#CCCCCC"> okay</font>

195
00:11:01,959 --> 00:11:07,829
<font color="#E5E5E5">during the live demo I will coat</font><font color="#CCCCCC"> the</font>

196
00:11:04,510 --> 00:11:11,199
<font color="#E5E5E5">plug-in and I will make some titles</font><font color="#CCCCCC"> I</font>

197
00:11:07,829 --> 00:11:15,359
don't plan<font color="#E5E5E5"> to make any but still I</font><font color="#CCCCCC"> will</font>

198
00:11:11,199 --> 00:11:18,059
make some so let's make it a<font color="#E5E5E5"> group</font>

199
00:11:15,360 --> 00:11:20,759
if you spot any<font color="#CCCCCC"> typos</font><font color="#E5E5E5"> let me know right</font>

200
00:11:18,059 --> 00:11:23,999
away<font color="#E5E5E5"> and to make it worthwhile</font><font color="#CCCCCC"> I have</font>

201
00:11:20,759 --> 00:11:26,549
some swag to give away<font color="#CCCCCC"> I have some heads</font>

202
00:11:23,999 --> 00:11:30,389
and some lighters which are also<font color="#E5E5E5"> I can</font>

203
00:11:26,549 --> 00:11:39,209
<font color="#CCCCCC">turn off I</font><font color="#E5E5E5"> mean bottle openers</font><font color="#CCCCCC"> so if you</font>

204
00:11:30,389 --> 00:11:42,839
want<font color="#CCCCCC"> to grab some spot a typo</font><font color="#E5E5E5"> okay</font>

205
00:11:39,209 --> 00:11:50,339
this is my host it's a kubernetes<font color="#E5E5E5"> setup</font>

206
00:11:42,839 --> 00:11:53,899
<font color="#CCCCCC">all-in-one</font><font color="#E5E5E5"> sure</font><font color="#CCCCCC"> I thought it's already</font>

207
00:11:50,339 --> 00:11:53,899
big<font color="#CCCCCC"> is it</font><font color="#E5E5E5"> okay now</font>

208
00:11:54,079 --> 00:12:05,699
<font color="#E5E5E5">okay let's first go to our configuration</font>

209
00:11:59,459 --> 00:12:10,378
directory it is CCNA and this is the

210
00:12:05,699 --> 00:12:13,790
directory where we<font color="#E5E5E5"> will find our network</font>

211
00:12:10,379 --> 00:12:19,739
configuration now does anybody know what

212
00:12:13,790 --> 00:12:31,139
property kubernetes uses<font color="#E5E5E5"> to identity</font>

213
00:12:19,739 --> 00:12:31,499
<font color="#CCCCCC">our</font><font color="#E5E5E5"> configuration file yes you don't</font>

214
00:12:31,139 --> 00:12:38,489
count

215
00:12:31,499 --> 00:12:40,169
<font color="#E5E5E5">okay okay I see</font><font color="#CCCCCC"> no other answers I mean</font>

216
00:12:38,489 --> 00:12:44,639
other<font color="#CCCCCC"> people knowing this and this</font><font color="#E5E5E5"> is</font>

217
00:12:40,169 --> 00:12:49,939
the correct<font color="#E5E5E5"> answer</font><font color="#CCCCCC"> no such property we</font>

218
00:12:44,639 --> 00:12:49,939
can<font color="#E5E5E5"> only specify the directory where</font>

219
00:12:54,799 --> 00:13:03,899
config<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's only yes</font><font color="#E5E5E5"> please</font>

220
00:12:59,069 --> 00:13:07,199
grab some swag<font color="#E5E5E5"> after the meeting we can</font>

221
00:13:03,899 --> 00:13:08,999
<font color="#E5E5E5">only specify the directory kubernetes</font>

222
00:13:07,199 --> 00:13:11,549
<font color="#CCCCCC">we'll look at all the files in</font>

223
00:13:08,999 --> 00:13:12,230
alphabetical order<font color="#CCCCCC"> and it will</font><font color="#E5E5E5"> pick the</font>

224
00:13:11,549 --> 00:13:17,220
<font color="#CCCCCC">first one</font>

225
00:13:12,230 --> 00:13:21,880
so let's modify the one that will

226
00:13:17,220 --> 00:13:24,250
specify our our<font color="#E5E5E5"> plugin notice is it</font>

227
00:13:21,880 --> 00:13:28,210
second one alphabetically<font color="#CCCCCC"> so it will not</font>

228
00:13:24,250 --> 00:13:35,410
<font color="#CCCCCC">be used</font><font color="#E5E5E5"> yet we have the</font><font color="#CCCCCC"> version we have</font>

229
00:13:28,210 --> 00:13:39,580
the name<font color="#E5E5E5"> my demo plug-in and we</font><font color="#CCCCCC"> have the</font>

230
00:13:35,410 --> 00:13:41,110
type let's call it demo<font color="#CCCCCC"> and</font><font color="#E5E5E5"> as I said</font><font color="#CCCCCC"> we</font>

231
00:13:39,580 --> 00:13:44,170
<font color="#CCCCCC">can have any number of additional</font>

232
00:13:41,110 --> 00:13:49,830
<font color="#E5E5E5">attributes here</font><font color="#CCCCCC"> we won't we want to</font>

233
00:13:44,170 --> 00:14:01,599
connect to a bridge<font color="#CCCCCC"> so I will add a</font>

234
00:13:49,830 --> 00:14:08,230
variable through this<font color="#E5E5E5"> let's call it demo</font>

235
00:14:01,600 --> 00:14:14,040
BR and we want to connect to it we want

236
00:14:08,230 --> 00:14:14,040
<font color="#CCCCCC">to be able to to set up the routing so</font>

237
00:14:15,090 --> 00:14:27,580
let's<font color="#E5E5E5"> also pass</font><font color="#CCCCCC"> in the Gateway and make</font>

238
00:14:18,880 --> 00:14:30,280
it an<font color="#E5E5E5"> o1 no typos okay I will not</font><font color="#CCCCCC"> rename</font>

239
00:14:27,580 --> 00:14:33,490
<font color="#E5E5E5">the second file yet or delete it we</font>

240
00:14:30,280 --> 00:14:37,360
don't<font color="#E5E5E5"> have our</font><font color="#CCCCCC"> plug-in yet so let's</font>

241
00:14:33,490 --> 00:14:40,180
first write this by the way we don't

242
00:14:37,360 --> 00:14:48,270
<font color="#E5E5E5">have the bridge either</font><font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> create</font>

243
00:14:40,180 --> 00:14:48,270
<font color="#CCCCCC">it now and let's give it</font><font color="#E5E5E5"> an IP address</font>

244
00:14:55,839 --> 00:15:03,980
<font color="#CCCCCC">all right and we'll go over to</font><font color="#E5E5E5"> the</font>

245
00:14:58,430 --> 00:15:08,349
directory or with the plugins our

246
00:15:03,980 --> 00:15:11,360
plug-in is<font color="#E5E5E5"> called demo it's slightly</font>

247
00:15:08,350 --> 00:15:14,300
pre-populated<font color="#E5E5E5"> to avoid typos</font><font color="#CCCCCC"> I will</font>

248
00:15:11,360 --> 00:15:19,760
explain the already existing items as I

249
00:15:14,300 --> 00:15:22,370
go along<font color="#E5E5E5"> so</font><font color="#CCCCCC"> what we want</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> we</font>

250
00:15:19,760 --> 00:15:27,860
want to<font color="#E5E5E5"> grab our network configuration</font>

251
00:15:22,370 --> 00:15:33,639
file<font color="#E5E5E5"> from standard input we'll do</font><font color="#CCCCCC"> that</font>

252
00:15:27,860 --> 00:15:33,639
<font color="#E5E5E5">by</font><font color="#CCCCCC"> just looking at</font><font color="#E5E5E5"> death</font><font color="#CCCCCC"> yesterday in</font>

253
00:15:34,899 --> 00:15:44,570
just to<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it a bit more readable</font><font color="#E5E5E5"> our</font>

254
00:15:39,680 --> 00:15:51,069
<font color="#CCCCCC">comments next we want to</font><font color="#E5E5E5"> rate our custom</font>

255
00:15:44,570 --> 00:15:51,070
attributes<font color="#E5E5E5"> okay</font>

256
00:15:55,980 --> 00:16:20,180
<font color="#E5E5E5">oh wait wait</font><font color="#CCCCCC"> wait and we can</font><font color="#E5E5E5"> Center it</font>

257
00:16:22,250 --> 00:16:28,560
does it work

258
00:16:25,080 --> 00:16:33,390
<font color="#E5E5E5">okay story for this I didn't see that</font>

259
00:16:28,560 --> 00:16:38,420
<font color="#E5E5E5">it's that it's not visible okay next</font>

260
00:16:33,390 --> 00:16:44,279
<font color="#E5E5E5">what we want to do is retrieve</font><font color="#CCCCCC"> our</font>

261
00:16:38,420 --> 00:16:52,969
custom variables<font color="#E5E5E5"> so what we need is our</font>

262
00:16:44,279 --> 00:16:52,970
bridge and our gateway excuse me

263
00:16:56,180 --> 00:17:05,659
comments don't<font color="#E5E5E5"> count</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> please grab</font>

264
00:17:00,750 --> 00:17:11,910
your property after<font color="#E5E5E5"> the demo anyway</font><font color="#CCCCCC"> I</font>

265
00:17:05,660 --> 00:17:15,750
will<font color="#E5E5E5"> run out of swag</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> wait so we</font>

266
00:17:11,910 --> 00:17:18,900
have our network configuration in the

267
00:17:15,750 --> 00:17:23,250
conf variable this is JSON

268
00:17:18,900 --> 00:17:26,670
so let's retrieve the bridge<font color="#CCCCCC"> parameters</font>

269
00:17:23,250 --> 00:17:30,330
<font color="#E5E5E5">so we will we will F or echo conf and</font>

270
00:17:26,670 --> 00:17:34,460
we'll<font color="#E5E5E5"> pass it to</font><font color="#CCCCCC"> J cube</font><font color="#E5E5E5"> JQ is a</font>

271
00:17:30,330 --> 00:17:39,059
<font color="#E5E5E5">command-line utility for parsing JSON</font>

272
00:17:34,460 --> 00:17:45,260
<font color="#E5E5E5">very handy if you don't know it -</font><font color="#CCCCCC"> r is</font>

273
00:17:39,059 --> 00:17:45,260
for raw values and we want to get great

274
00:17:58,480 --> 00:18:10,840
let me just repeat that<font color="#E5E5E5"> and the second</font>

275
00:18:00,970 --> 00:18:13,920
one we want<font color="#E5E5E5"> to get if Gateway</font><font color="#CCCCCC"> next step</font>

276
00:18:10,840 --> 00:18:20,530
we will as I<font color="#E5E5E5"> said we want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use a</font><font color="#CCCCCC"> named</font>

277
00:18:13,920 --> 00:18:28,900
<font color="#E5E5E5">namespace it will be easier to code</font><font color="#CCCCCC"> so</font>

278
00:18:20,530 --> 00:18:33,070
choose a name<font color="#CCCCCC"> for our namespace and this</font>

279
00:18:28,900 --> 00:18:34,180
name<font color="#CCCCCC"> obviously it should be something</font>

280
00:18:33,070 --> 00:18:37,389
unique

281
00:18:34,180 --> 00:18:44,650
so we'll just go with<font color="#E5E5E5"> the container ID</font>

282
00:18:37,390 --> 00:18:48,760
here see an icon<font color="#CCCCCC"> the inner ID CNI</font>

283
00:18:44,650 --> 00:18:54,070
container ID is the environment<font color="#E5E5E5"> variable</font>

284
00:18:48,760 --> 00:19:01,510
set by the container runtime and<font color="#E5E5E5"> next</font>

285
00:18:54,070 --> 00:19:04,120
open to save time I<font color="#E5E5E5"> will choose the</font>

286
00:19:01,510 --> 00:19:07,810
simplest<font color="#E5E5E5"> IP address management method</font>

287
00:19:04,120 --> 00:19:14,050
available<font color="#E5E5E5"> and by that I</font><font color="#CCCCCC"> mean I will</font>

288
00:19:07,810 --> 00:19:17,169
hard-coded<font color="#E5E5E5"> if you want to use it in</font>

289
00:19:14,050 --> 00:19:19,480
production<font color="#E5E5E5"> don't do</font><font color="#CCCCCC"> this it will</font><font color="#E5E5E5"> not</font>

290
00:19:17,170 --> 00:19:26,920
<font color="#CCCCCC">work I mean it will only</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> for the</font>

291
00:19:19,480 --> 00:19:31,780
<font color="#E5E5E5">first container we only have ten</font><font color="#CCCCCC"> minutes</font>

292
00:19:26,920 --> 00:19:35,620
<font color="#CCCCCC">left</font><font color="#E5E5E5"> so let's speed up now we have an if</font>

293
00:19:31,780 --> 00:19:37,750
we<font color="#E5E5E5"> inspect the</font><font color="#CCCCCC"> cni comment we want if</font>

294
00:19:35,620 --> 00:19:42,610
<font color="#E5E5E5">it's add it means we are adding a</font>

295
00:19:37,750 --> 00:19:50,650
container<font color="#E5E5E5"> so the next step should be to</font>

296
00:19:42,610 --> 00:19:53,770
create our namespace<font color="#CCCCCC"> you can create a</font>

297
00:19:50,650 --> 00:19:58,110
<font color="#CCCCCC">name network name space by creating a</font>

298
00:19:53,770 --> 00:20:02,550
link to the namespace<font color="#E5E5E5"> the namespace is</font>

299
00:19:58,110 --> 00:20:07,469
given to us<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> cni net and as</font>

300
00:20:02,550 --> 00:20:09,289
variable and we<font color="#E5E5E5"> created in vara run net</font>

301
00:20:07,470 --> 00:20:12,620
<font color="#CCCCCC">NS</font>

302
00:20:09,289 --> 00:20:14,330
and we already<font color="#CCCCCC"> have a name for</font><font color="#E5E5E5"> it that's</font>

303
00:20:12,620 --> 00:20:18,620
the NS name<font color="#E5E5E5"> variable</font>

304
00:20:14,330 --> 00:20:27,549
now usually we won't have the directory

305
00:20:18,620 --> 00:20:33,428
by default so let's just create it<font color="#CCCCCC"> too</font>

306
00:20:27,549 --> 00:20:33,429
and this should<font color="#E5E5E5"> create our namespace</font>

307
00:20:33,460 --> 00:20:45,019
<font color="#CCCCCC">next step</font><font color="#E5E5E5"> next step would be to create</font>

308
00:20:38,539 --> 00:20:52,429
<font color="#E5E5E5">our Vesper we can do that do this by IP</font>

309
00:20:45,019 --> 00:20:54,649
link<font color="#CCCCCC"> IDI</font><font color="#E5E5E5"> vas</font><font color="#CCCCCC"> we'll name the end of the</font>

310
00:20:52,429 --> 00:20:57,529
Vesper that we'll put<font color="#E5E5E5"> in our into our</font>

311
00:20:54,649 --> 00:21:11,000
<font color="#E5E5E5">root namespace</font><font color="#CCCCCC"> red fruit and the other</font>

312
00:20:57,529 --> 00:21:13,309
<font color="#E5E5E5">end</font><font color="#CCCCCC"> vas ns I type first</font><font color="#E5E5E5"> pure name</font><font color="#CCCCCC"> if you</font>

313
00:21:11,000 --> 00:21:16,669
are not familiar with<font color="#CCCCCC"> that we are it's</font>

314
00:21:13,309 --> 00:21:20,750
opening at the<font color="#CCCCCC"> name</font><font color="#E5E5E5"> of one end of the</font>

315
00:21:16,669 --> 00:21:22,490
Vesper we indicate the type and we say

316
00:21:20,750 --> 00:21:30,549
that the pure name the other end should

317
00:21:22,490 --> 00:21:30,549
<font color="#CCCCCC">be named with an</font><font color="#E5E5E5"> S</font><font color="#CCCCCC"> and now we'll handle</font>

318
00:21:33,850 --> 00:21:43,399
verse<font color="#E5E5E5"> wrote what we want to do we want</font>

319
00:21:37,700 --> 00:21:50,059
<font color="#E5E5E5">to edit to our bridge I'm feeling</font><font color="#CCCCCC"> that</font>

320
00:21:43,399 --> 00:21:56,510
first<font color="#E5E5E5"> root master and we have our bridge</font>

321
00:21:50,059 --> 00:22:03,250
name in the bridge variable what we want

322
00:21:56,510 --> 00:22:06,408
<font color="#E5E5E5">to do next we want to set</font><font color="#CCCCCC"> it to up and</font>

323
00:22:03,250 --> 00:22:18,649
let's<font color="#E5E5E5"> just set the bridge to up</font><font color="#CCCCCC"> to I</font>

324
00:22:06,409 --> 00:22:22,190
can't<font color="#E5E5E5"> remember if I did it great up next</font>

325
00:22:18,649 --> 00:22:25,370
step we<font color="#CCCCCC"> have to take care</font><font color="#E5E5E5"> of our the</font>

326
00:22:22,190 --> 00:22:28,580
other<font color="#E5E5E5"> end of the Vesper Oh we'll have to</font>

327
00:22:25,370 --> 00:22:33,158
<font color="#E5E5E5">move it to the</font><font color="#CCCCCC"> namespace</font><font color="#E5E5E5"> so we do that</font>

328
00:22:28,580 --> 00:22:36,199
<font color="#CCCCCC">by saying</font><font color="#E5E5E5"> IP link set the device name</font>

329
00:22:33,159 --> 00:22:39,320
not<font color="#CCCCCC"> an S and we</font><font color="#E5E5E5"> have our own namespace</font>

330
00:22:36,200 --> 00:22:47,450
<font color="#E5E5E5">and last name let me just check if this</font>

331
00:22:39,320 --> 00:22:53,330
<font color="#CCCCCC">is how we</font><font color="#E5E5E5"> named</font><font color="#CCCCCC"> the variable yes oh yeah</font>

332
00:22:47,450 --> 00:22:57,970
I wanted<font color="#CCCCCC"> to you can get some of this</font>

333
00:22:53,330 --> 00:22:57,970
work<font color="#CCCCCC"> even so you're a</font><font color="#E5E5E5"> CNI maintainer</font>

334
00:22:58,840 --> 00:23:05,590
<font color="#E5E5E5">I wanted</font><font color="#CCCCCC"> to write what we are doing so</font>

335
00:23:03,340 --> 00:23:11,178
<font color="#E5E5E5">move</font>

336
00:23:05,590 --> 00:23:13,789
<font color="#CCCCCC">vasin s29 space now we want to rename it</font>

337
00:23:11,179 --> 00:23:19,129
<font color="#E5E5E5">we want to rename</font><font color="#CCCCCC"> it to</font><font color="#E5E5E5"> whatever the</font>

338
00:23:13,789 --> 00:23:23,090
container<font color="#CCCCCC"> run time is expecting so we'll</font>

339
00:23:19,129 --> 00:23:29,090
do<font color="#CCCCCC"> that by saying first</font><font color="#E5E5E5"> we have to set</font>

340
00:23:23,090 --> 00:23:34,010
the<font color="#CCCCCC"> device to down IP</font><font color="#E5E5E5"> link set of NS</font>

341
00:23:29,090 --> 00:23:36,709
down note<font color="#CCCCCC"> that we have already</font><font color="#E5E5E5"> moved the</font>

342
00:23:34,010 --> 00:23:41,750
interface to our<font color="#CCCCCC"> namespace so we cannot</font>

343
00:23:36,710 --> 00:23:44,629
<font color="#E5E5E5">just do IP</font><font color="#CCCCCC"> link set because that does</font>

344
00:23:41,750 --> 00:23:48,379
<font color="#E5E5E5">things in our root namespace we have to</font>

345
00:23:44,629 --> 00:23:52,010
tell the IP tool that we are<font color="#CCCCCC"> using</font><font color="#E5E5E5"> a</font>

346
00:23:48,379 --> 00:23:57,730
different<font color="#CCCCCC"> name space</font><font color="#E5E5E5"> and we do that by</font>

347
00:23:52,010 --> 00:24:03,590
IP not<font color="#CCCCCC"> earnest</font><font color="#E5E5E5"> with the namespace name</font>

348
00:23:57,730 --> 00:24:05,659
<font color="#E5E5E5">so one once it's down we can rename it</font>

349
00:24:03,590 --> 00:24:11,500
<font color="#E5E5E5">of course we have to do it in the</font>

350
00:24:05,659 --> 00:24:16,190
<font color="#CCCCCC">namespace again that</font>

351
00:24:11,500 --> 00:24:28,910
nice name<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> rename</font><font color="#E5E5E5"> it to</font><font color="#CCCCCC"> CNI AF</font>

352
00:24:16,190 --> 00:24:39,280
<font color="#CCCCCC">name and we want to bring it up</font><font color="#E5E5E5"> again we</font>

353
00:24:28,910 --> 00:24:42,080
have to use the new name now now<font color="#CCCCCC"> IPAM</font>

354
00:24:39,280 --> 00:24:44,290
usually item is more complicated<font color="#CCCCCC"> than</font>

355
00:24:42,080 --> 00:24:44,290
this

356
00:25:03,740 --> 00:25:09,070
and let's add some routing

357
00:25:22,350 --> 00:25:30,750
fold the and we<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> gateways</font>

358
00:25:25,529 --> 00:25:36,149
variable<font color="#E5E5E5"> now we are we are almost done</font>

359
00:25:30,750 --> 00:25:38,940
<font color="#CCCCCC">now we have</font><font color="#E5E5E5"> to now we have to return the</font>

360
00:25:36,149 --> 00:25:42,928
result back<font color="#CCCCCC"> to our container</font><font color="#E5E5E5"> run time to</font>

361
00:25:38,940 --> 00:25:45,450
do this<font color="#E5E5E5"> we'll need</font><font color="#CCCCCC"> two more values will</font>

362
00:25:42,929 --> 00:25:48,830
need to retrieve<font color="#E5E5E5"> the Mac of the</font><font color="#CCCCCC"> Edit</font>

363
00:25:45,450 --> 00:25:53,669
interface and the interface index<font color="#CCCCCC"> I</font>

364
00:25:48,830 --> 00:25:57,539
pre-populated<font color="#E5E5E5"> to avoid typos</font><font color="#CCCCCC"> I couldn't</font>

365
00:25:53,669 --> 00:25:59,909
arrange<font color="#CCCCCC"> enough slack in the project this</font>

366
00:25:57,539 --> 00:26:02,370
<font color="#E5E5E5">is the template</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> output</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

367
00:25:59,909 --> 00:26:04,649
<font color="#CCCCCC">the cni version</font><font color="#E5E5E5"> we have the interfaces</font>

368
00:26:02,370 --> 00:26:08,279
we only add one<font color="#E5E5E5"> so we have the name</font><font color="#CCCCCC"> Mac</font>

369
00:26:04,649 --> 00:26:12,029
and sandbox sandbox<font color="#E5E5E5"> is just network name</font>

370
00:26:08,279 --> 00:26:14,960
<font color="#CCCCCC">face</font><font color="#E5E5E5"> so it's a repetition of the cni not</font>

371
00:26:12,029 --> 00:26:19,860
<font color="#CCCCCC">honest variable which we have received</font>

372
00:26:14,960 --> 00:26:24,870
<font color="#CCCCCC">eyepiece</font><font color="#E5E5E5"> node interface is the</font><font color="#CCCCCC"> interface</font>

373
00:26:19,860 --> 00:26:28,769
index note<font color="#E5E5E5"> that this is an integer value</font>

374
00:26:24,870 --> 00:26:32,518
so<font color="#E5E5E5"> no</font><font color="#CCCCCC"> quotes here</font><font color="#E5E5E5"> it's a little bit</font>

375
00:26:28,769 --> 00:26:34,980
misleading but the<font color="#CCCCCC"> elemental maintainer</font>

376
00:26:32,519 --> 00:26:41,850
<font color="#E5E5E5">can answer the questions</font><font color="#CCCCCC"> about this</font>

377
00:26:34,980 --> 00:26:44,879
after<font color="#E5E5E5"> the session so we use print just</font>

378
00:26:41,850 --> 00:26:48,539
<font color="#E5E5E5">to populate the values this is</font><font color="#CCCCCC"> the</font>

379
00:26:44,879 --> 00:26:50,549
interface<font color="#E5E5E5"> name the Mac network namespace</font>

380
00:26:48,539 --> 00:26:55,080
<font color="#CCCCCC">I'm trying</font><font color="#E5E5E5"> to speed up</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit</font>

381
00:26:50,549 --> 00:26:59,809
because<font color="#E5E5E5"> we are running out of time we</font>

382
00:26:55,080 --> 00:27:06,809
return the result by just<font color="#E5E5E5"> echoing it to</font>

383
00:26:59,809 --> 00:27:09,809
standard output<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we are almost done</font>

384
00:27:06,809 --> 00:27:14,970
<font color="#E5E5E5">now</font><font color="#CCCCCC"> because you haven't spotted all the</font>

385
00:27:09,809 --> 00:27:18,720
typos<font color="#E5E5E5"> because it was so quiet</font><font color="#CCCCCC"> what we</font>

386
00:27:14,970 --> 00:27:24,570
might<font color="#CCCCCC"> want to do we want to do to add</font>

387
00:27:18,720 --> 00:27:29,509
some<font color="#E5E5E5"> logging so</font><font color="#CCCCCC"> we'll just</font><font color="#E5E5E5"> redirect our</font>

388
00:27:24,570 --> 00:27:29,509
<font color="#E5E5E5">error stream to a file not to death</font>

389
00:27:30,510 --> 00:27:46,110
<font color="#CCCCCC">d</font><font color="#E5E5E5"> MODOK</font><font color="#CCCCCC"> we also might want to echo earth</font>

390
00:27:42,690 --> 00:27:46,110
to echo

391
00:27:58,160 --> 00:28:05,750
we might want to<font color="#E5E5E5"> echo</font><font color="#CCCCCC"> the action which</font>

392
00:28:01,470 --> 00:28:05,750
the<font color="#CCCCCC"> CNI wants us to perform</font><font color="#E5E5E5"> so</font>

393
00:28:08,060 --> 00:28:11,280
[Music]

394
00:28:14,210 --> 00:28:23,140
and because it will<font color="#E5E5E5"> be useful later on</font><font color="#CCCCCC"> I</font>

395
00:28:18,050 --> 00:28:23,139
will<font color="#E5E5E5"> also echo the output</font>

396
00:28:37,809 --> 00:28:44,350
below we<font color="#CCCCCC"> can find some actions that</font><font color="#E5E5E5"> we</font>

397
00:28:41,890 --> 00:28:48,840
will do<font color="#CCCCCC"> during a delete we just want to</font>

398
00:28:44,350 --> 00:28:52,840
clean up<font color="#CCCCCC"> the</font><font color="#E5E5E5"> namespaces</font><font color="#CCCCCC"> and the Wester</font>

399
00:28:48,840 --> 00:28:56,080
<font color="#CCCCCC">let's save it</font><font color="#E5E5E5"> and let's try to run it</font>

400
00:28:52,840 --> 00:28:59,740
<font color="#CCCCCC">before we run it we need</font><font color="#E5E5E5"> to swap the</font>

401
00:28:56,080 --> 00:29:05,889
configuration files so let's<font color="#CCCCCC"> just move</font>

402
00:28:59,740 --> 00:29:09,159
this<font color="#CCCCCC"> one to a</font><font color="#E5E5E5"> different name</font><font color="#CCCCCC"> so</font>

403
00:29:05,890 --> 00:29:11,010
alphabetically<font color="#CCCCCC"> our receive first</font><font color="#E5E5E5"> so</font>

404
00:29:09,159 --> 00:29:14,529
let's start a<font color="#E5E5E5"> pod</font>

405
00:29:11,010 --> 00:29:16,720
I'll create kubernetes deployment with

406
00:29:14,529 --> 00:29:23,460
local image

407
00:29:16,720 --> 00:29:29,380
I mean<font color="#E5E5E5"> local from a local repository and</font>

408
00:29:23,460 --> 00:29:31,899
the moment of truth get pod and it says

409
00:29:29,380 --> 00:29:55,080
container creating<font color="#E5E5E5"> so we probably made a</font>

410
00:29:31,899 --> 00:29:58,469
typo<font color="#CCCCCC"> we</font><font color="#E5E5E5"> already had</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I had a shebang</font>

411
00:29:55,080 --> 00:29:58,470
<font color="#E5E5E5">for a log</font>

412
00:30:02,330 --> 00:30:19,540
and<font color="#CCCCCC"> it says network is unreachable Amol</font>

413
00:30:16,070 --> 00:30:19,540
let<font color="#E5E5E5"> me just say if</font><font color="#CCCCCC"> them</font>

414
00:30:28,530 --> 00:30:37,139
let's delete the<font color="#CCCCCC"> deployment clean is</font>

415
00:30:33,540 --> 00:30:41,570
just<font color="#E5E5E5"> script that I wrote to clean the</font>

416
00:30:37,140 --> 00:30:45,450
the<font color="#E5E5E5"> environment so that we start off</font>

417
00:30:41,570 --> 00:30:57,780
with<font color="#E5E5E5"> a clean with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> clean one and</font><font color="#CCCCCC"> points</font>

418
00:30:45,450 --> 00:30:58,620
up<font color="#E5E5E5"> let's just and it's running no not</font>

419
00:30:57,780 --> 00:31:01,139
yet

420
00:30:58,620 --> 00:31:03,659
please give me one<font color="#CCCCCC"> more minute let's</font>

421
00:31:01,140 --> 00:31:16,940
just try if we<font color="#CCCCCC"> can ping it we are</font>

422
00:31:03,660 --> 00:31:16,940
<font color="#E5E5E5">offline so it's yes if we have</font>

