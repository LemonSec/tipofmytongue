1
00:00:04,610 --> 00:00:11,270
my name is Mei Chen<font color="#E5E5E5"> my team owns a dad</font>

2
00:00:08,629 --> 00:00:14,360
my language and<font color="#E5E5E5"> run tight so including</font>

3
00:00:11,270 --> 00:00:16,369
<font color="#CCCCCC">see shop VP language and compiler and I</font>

4
00:00:14,360 --> 00:00:18,050
was around<font color="#CCCCCC"> 10 team</font><font color="#E5E5E5"> yes all around time</font>

5
00:00:16,369 --> 00:00:22,430
service is that<font color="#E5E5E5"> meteorologist mission is</font>

6
00:00:18,050 --> 00:00:26,300
<font color="#CCCCCC">underneath my</font><font color="#E5E5E5"> teeth hi</font><font color="#CCCCCC"> I'm Sergey</font><font color="#E5E5E5"> I my</font>

7
00:00:22,430 --> 00:00:29,779
team is on machines team and<font color="#CCCCCC"> isleib and</font>

8
00:00:26,300 --> 00:00:33,890
my team owns various<font color="#CCCCCC"> low-level parts of</font>

9
00:00:29,779 --> 00:00:36,230
dotnet runtime and various ahead of time

10
00:00:33,890 --> 00:00:39,710
compilation<font color="#CCCCCC"> technologies</font><font color="#E5E5E5"> so gates my</font>

11
00:00:36,230 --> 00:00:44,419
<font color="#E5E5E5">performance architect</font><font color="#CCCCCC"> ok and let's start</font>

12
00:00:39,710 --> 00:00:48,140
do you might go<font color="#E5E5E5"> to the next night so</font>

13
00:00:44,420 --> 00:00:51,199
what is the<font color="#CCCCCC"> round time I think it's</font><font color="#E5E5E5"> why</font>

14
00:00:48,140 --> 00:00:53,780
<font color="#E5E5E5">we quite obvious to you guys I prepared</font>

15
00:00:51,199 --> 00:00:55,940
this slide for some like a not<font color="#E5E5E5"> sure</font>

16
00:00:53,780 --> 00:00:56,780
about the audience<font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> being</font>

17
00:00:55,940 --> 00:00:59,570
<font color="#E5E5E5">done once already</font>

18
00:00:56,780 --> 00:01:02,269
<font color="#CCCCCC">I think about</font><font color="#E5E5E5"> around time being a chance</font>

19
00:00:59,570 --> 00:01:04,309
<font color="#E5E5E5">later if you think about it you write</font>

20
00:01:02,269 --> 00:01:06,679
your shisha code once you<font color="#E5E5E5"> come party</font>

21
00:01:04,309 --> 00:01:07,610
<font color="#CCCCCC">once and yeah she runs in all the</font>

22
00:01:06,680 --> 00:01:10,580
different devices<font color="#E5E5E5"> and different</font>

23
00:01:07,610 --> 00:01:15,980
platforms<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is because the runtime is</font>

24
00:01:10,580 --> 00:01:18,500
doing a<font color="#CCCCCC"> translation for</font><font color="#E5E5E5"> you we have two</font>

25
00:01:15,980 --> 00:01:20,600
<font color="#CCCCCC">well-known platform and really popular</font>

26
00:01:18,500 --> 00:01:24,460
Windows Linux<font color="#E5E5E5"> for different</font>

27
00:01:20,600 --> 00:01:28,699
architectures x86 x64

28
00:01:24,460 --> 00:01:30,830
64<font color="#E5E5E5"> in fluid matrix is this</font><font color="#CCCCCC"> 8 different</font>

29
00:01:28,700 --> 00:01:32,840
<font color="#CCCCCC">language</font><font color="#E5E5E5"> is the wrong time speak</font><font color="#CCCCCC"> in a</font>

30
00:01:30,830 --> 00:01:34,730
<font color="#CCCCCC">linux distro depends on a different</font>

31
00:01:32,840 --> 00:01:36,680
<font color="#CCCCCC">distorted form flavor let's actually</font>

32
00:01:34,730 --> 00:01:41,540
<font color="#CCCCCC">perform dependency work that runtime has</font>

33
00:01:36,680 --> 00:01:43,610
to do as well<font color="#E5E5E5"> so</font><font color="#CCCCCC"> this talk is going</font><font color="#E5E5E5"> to</font>

34
00:01:41,540 --> 00:01:45,650
<font color="#CCCCCC">be three parts</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> part we want to</font>

35
00:01:43,610 --> 00:01:47,750
talk<font color="#E5E5E5"> about how we tune around time for</font>

36
00:01:45,650 --> 00:01:49,310
start-up<font color="#E5E5E5"> and</font><font color="#CCCCCC"> throughput</font><font color="#E5E5E5"> so let</font><font color="#CCCCCC"> all the</font>

37
00:01:47,750 --> 00:01:51,050
<font color="#E5E5E5">box installation I have from internal</font>

38
00:01:49,310 --> 00:01:53,240
core or desktop<font color="#E5E5E5"> is that you're</font>

39
00:01:51,050 --> 00:01:55,070
performing the second part<font color="#CCCCCC"> Sergei will</font>

40
00:01:53,240 --> 00:01:57,530
<font color="#E5E5E5">walk us through a</font><font color="#CCCCCC"> startup time case</font>

41
00:01:55,070 --> 00:02:03,559
study and the third part we were doing

42
00:01:57,530 --> 00:02:07,280
some<font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of take away so before</font><font color="#CCCCCC"> I</font>

43
00:02:03,560 --> 00:02:08,750
jumping into the journey<font color="#CCCCCC"> I kind of want</font>

44
00:02:07,280 --> 00:02:11,510
to break<font color="#CCCCCC"> down</font>

45
00:02:08,750 --> 00:02:14,110
<font color="#E5E5E5">co-op three different services around</font>

46
00:02:11,510 --> 00:02:16,459
time that you're related<font color="#E5E5E5"> to</font><font color="#CCCCCC"> today's talk</font>

47
00:02:14,110 --> 00:02:18,230
they are more than<font color="#CCCCCC"> this three servicing</font>

48
00:02:16,459 --> 00:02:18,500
around time but this<font color="#CCCCCC"> three Ettrick</font>

49
00:02:18,230 --> 00:02:21,890
<font color="#CCCCCC">hammer</font>

50
00:02:18,500 --> 00:02:23,840
to<font color="#E5E5E5"> today's talk I think jet and GC are</font>

51
00:02:21,890 --> 00:02:25,970
probably the<font color="#E5E5E5"> most well known components</font>

52
00:02:23,840 --> 00:02:28,850
that you are familiar<font color="#E5E5E5"> with because these</font>

53
00:02:25,970 --> 00:02:31,130
are the two parts mostly contribute to

54
00:02:28,850 --> 00:02:34,100
the<font color="#CCCCCC"> non determinism in Linnton C and</font>

55
00:02:31,130 --> 00:02:36,380
kind<font color="#E5E5E5"> of manifests itself more in the</font>

56
00:02:34,100 --> 00:02:38,450
performance on people's face<font color="#E5E5E5"> the first</font>

57
00:02:36,380 --> 00:02:40,670
one is your type system<font color="#CCCCCC"> we don't talk</font>

58
00:02:38,450 --> 00:02:41,989
about it a lot<font color="#E5E5E5"> by a triage system is the</font>

59
00:02:40,670 --> 00:02:43,730
<font color="#E5E5E5">center of the universe</font><font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to</font>

60
00:02:41,990 --> 00:02:46,010
believe<font color="#E5E5E5"> so because my first</font><font color="#CCCCCC"> feature was</font>

61
00:02:43,730 --> 00:02:48,440
type system<font color="#E5E5E5"> it was actually the one</font>

62
00:02:46,010 --> 00:02:51,380
hotel universe together<font color="#CCCCCC"> tie system</font><font color="#E5E5E5"> is</font>

63
00:02:48,440 --> 00:02:54,140
the one that if you look at<font color="#E5E5E5"> this kind of</font>

64
00:02:51,380 --> 00:02:56,870
<font color="#E5E5E5">skeleton code tie system</font><font color="#CCCCCC"> is someone</font>

65
00:02:54,140 --> 00:02:59,958
decide that when you allocate my base or

66
00:02:56,870 --> 00:03:02,000
my class<font color="#E5E5E5"> how big that Archer</font><font color="#CCCCCC"> instance</font>

67
00:02:59,959 --> 00:03:04,730
should be and when<font color="#E5E5E5"> you have B tables</font>

68
00:03:02,000 --> 00:03:06,560
<font color="#E5E5E5">what did the layout look like and when</font>

69
00:03:04,730 --> 00:03:07,130
<font color="#E5E5E5">you do castings are you doing the right</font>

70
00:03:06,560 --> 00:03:10,340
<font color="#E5E5E5">thing or not</font>

71
00:03:07,130 --> 00:03:13,640
so<font color="#CCCCCC"> JIT at your console type system in</font>

72
00:03:10,340 --> 00:03:15,830
<font color="#CCCCCC">order to generate code</font><font color="#E5E5E5"> and GC actually</font>

73
00:03:13,640 --> 00:03:18,589
comes out type system as well<font color="#E5E5E5"> when</font>

74
00:03:15,830 --> 00:03:19,810
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to walk the</font><font color="#CCCCCC"> graph</font><font color="#E5E5E5"> next</font>

75
00:03:18,590 --> 00:03:23,360
slide<font color="#E5E5E5"> please</font>

76
00:03:19,810 --> 00:03:24,890
so here comes to my first question<font color="#CCCCCC"> many</font>

77
00:03:23,360 --> 00:03:28,340
of<font color="#CCCCCC"> you</font><font color="#E5E5E5"> probably very familiar with this</font>

78
00:03:24,890 --> 00:03:29,958
hello<font color="#CCCCCC"> world Web API question</font><font color="#E5E5E5"> this</font>

79
00:03:28,340 --> 00:03:32,000
<font color="#CCCCCC">application</font><font color="#E5E5E5"> is your quite simple</font><font color="#CCCCCC"> just a</font>

80
00:03:29,959 --> 00:03:34,519
few lines pretty<font color="#E5E5E5"> much on</font><font color="#CCCCCC"> a web</font><font color="#E5E5E5"> page</font>

81
00:03:32,000 --> 00:03:37,010
<font color="#CCCCCC">Papa hollow world</font><font color="#E5E5E5"> and waiting way to</font>

82
00:03:34,519 --> 00:03:39,170
type<font color="#CCCCCC"> string in and display on</font><font color="#E5E5E5"> that page</font>

83
00:03:37,010 --> 00:03:41,209
<font color="#E5E5E5">do you guys want to guess how many</font>

84
00:03:39,170 --> 00:03:44,750
<font color="#E5E5E5">messages need to be jetted</font><font color="#CCCCCC"> in order to</font>

85
00:03:41,209 --> 00:03:47,350
run<font color="#E5E5E5"> this code Miguel since nobody</font>

86
00:03:44,750 --> 00:03:47,350
volunteer

87
00:03:48,440 --> 00:03:57,530
it's a yep<font color="#E5E5E5"> okay Miguel is very</font>

88
00:03:54,980 --> 00:03:58,970
pessimistic<font color="#E5E5E5"> and I must clarify this out</font>

89
00:03:57,530 --> 00:04:00,380
down<font color="#E5E5E5"> at core because</font><font color="#CCCCCC"> the desktop</font>

90
00:03:58,970 --> 00:04:05,840
<font color="#CCCCCC">Internet course is different</font>

91
00:04:00,380 --> 00:04:08,600
<font color="#CCCCCC">next slide please it's</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> 4000 not too</font>

92
00:04:05,840 --> 00:04:11,380
many but<font color="#CCCCCC"> faster he is greater than what</font>

93
00:04:08,600 --> 00:04:14,720
you have<font color="#E5E5E5"> expected</font><font color="#CCCCCC"> Mackay was</font><font color="#E5E5E5"> pessimistic</font>

94
00:04:11,380 --> 00:04:17,060
<font color="#CCCCCC">but</font><font color="#E5E5E5"> if you look at the time the startup</font>

95
00:04:14,720 --> 00:04:19,220
is actually hostile<font color="#CCCCCC"> which year one point</font>

96
00:04:17,060 --> 00:04:20,630
three<font color="#CCCCCC"> eight seconds</font><font color="#E5E5E5"> and this is you</font>

97
00:04:19,220 --> 00:04:21,530
<font color="#E5E5E5">should measure on the machine that</font><font color="#CCCCCC"> is</font>

98
00:04:20,630 --> 00:04:26,690
actually<font color="#CCCCCC"> a</font>

99
00:04:21,529 --> 00:04:28,820
i7<font color="#CCCCCC"> Intel i7 3.4 gigahertz essential</font>

100
00:04:26,690 --> 00:04:32,120
<font color="#E5E5E5">quite a</font><font color="#CCCCCC"> pity</font><font color="#E5E5E5"> machine so think about that</font>

101
00:04:28,820 --> 00:04:32,330
if you go<font color="#E5E5E5"> into a low-end devices or you</font>

102
00:04:32,120 --> 00:04:34,580
know

103
00:04:32,330 --> 00:04:39,859
the last capable machine is how long<font color="#E5E5E5"> you</font>

104
00:04:34,580 --> 00:04:42,830
<font color="#CCCCCC">would take and we actually spend 1.49</font>

105
00:04:39,860 --> 00:04:44,659
second in JIT<font color="#E5E5E5"> which</font><font color="#CCCCCC"> kind of surprises</font><font color="#E5E5E5"> to</font>

106
00:04:42,830 --> 00:04:46,940
you because how can<font color="#CCCCCC"> a timed great L in</font>

107
00:04:44,659 --> 00:04:53,690
the startup time because my decor<font color="#E5E5E5"> and</font>

108
00:04:46,940 --> 00:04:55,750
that was<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> a summer together so</font>

109
00:04:53,690 --> 00:04:59,810
we have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> problem here</font>

110
00:04:55,750 --> 00:05:02,870
hello world take<font color="#CCCCCC"> 1.3 a second</font><font color="#E5E5E5"> to start</font>

111
00:04:59,810 --> 00:05:04,879
<font color="#CCCCCC">up this</font><font color="#E5E5E5"> is not okay because real real</font>

112
00:05:02,870 --> 00:05:07,190
<font color="#E5E5E5">world application is going to use a lot</font>

113
00:05:04,879 --> 00:05:10,520
more function than<font color="#E5E5E5"> what</font><font color="#CCCCCC"> your agency</font>

114
00:05:07,190 --> 00:05:12,879
right so who is<font color="#E5E5E5"> liable for this it's</font>

115
00:05:10,520 --> 00:05:15,650
actually<font color="#E5E5E5"> in between</font><font color="#CCCCCC"> JIT and type system</font>

116
00:05:12,879 --> 00:05:18,620
<font color="#CCCCCC">we believe</font><font color="#E5E5E5"> that this out of one that</font>

117
00:05:15,650 --> 00:05:20,299
took about<font color="#CCCCCC"> 60% of the</font><font color="#E5E5E5"> time in the</font>

118
00:05:18,620 --> 00:05:22,370
startup doing all the work trying to

119
00:05:20,300 --> 00:05:24,229
prepare<font color="#E5E5E5"> all those</font><font color="#CCCCCC"> 4,000 method to be</font>

120
00:05:22,370 --> 00:05:26,719
treated and some may<font color="#E5E5E5"> be wrong and some</font>

121
00:05:24,229 --> 00:05:28,699
may not<font color="#CCCCCC"> be around</font><font color="#E5E5E5"> and interesting</font><font color="#CCCCCC"> enough</font>

122
00:05:26,719 --> 00:05:31,580
<font color="#E5E5E5">this my first job being a type system</font>

123
00:05:28,699 --> 00:05:33,949
beat<font color="#E5E5E5"> I wouldn't have system guy I trade</font>

124
00:05:31,580 --> 00:05:36,680
no my first job was a JIT<font color="#CCCCCC"> I have three</font>

125
00:05:33,949 --> 00:05:39,169
<font color="#E5E5E5">dev I went to the chat and say J we are</font>

126
00:05:36,680 --> 00:05:41,810
slow<font color="#E5E5E5"> and we are the reason why Dinoco</font>

127
00:05:39,169 --> 00:05:44,029
doesn't run fast<font color="#CCCCCC"> just say</font><font color="#E5E5E5"> nah it's not</font>

128
00:05:41,810 --> 00:05:46,699
<font color="#E5E5E5">our fault it's type system my second job</font>

129
00:05:44,029 --> 00:05:50,960
<font color="#CCCCCC">I was tie system lead I went to a type</font>

130
00:05:46,699 --> 00:05:52,940
system Timothy hey David we are<font color="#CCCCCC"> so what</font>

131
00:05:50,960 --> 00:05:54,859
<font color="#E5E5E5">should we do here</font><font color="#CCCCCC"> and David told me</font><font color="#E5E5E5"> nah</font>

132
00:05:52,940 --> 00:05:55,490
it was JIT<font color="#E5E5E5"> but does that make sense</font>

133
00:05:54,860 --> 00:05:58,419
<font color="#E5E5E5">right</font>

134
00:05:55,490 --> 00:06:02,120
somebody must be<font color="#CCCCCC"> F fault it's an A to B</font>

135
00:05:58,419 --> 00:06:04,609
type system owning at 30% 33%<font color="#CCCCCC"> 1/3 of it</font>

136
00:06:02,120 --> 00:06:06,379
<font color="#E5E5E5">just</font><font color="#CCCCCC"> as 1/3 of it now then</font><font color="#E5E5E5"> believe that</font>

137
00:06:04,610 --> 00:06:08,900
they<font color="#CCCCCC"> are the majority</font><font color="#E5E5E5"> of the fault in</font>

138
00:06:06,379 --> 00:06:11,569
<font color="#CCCCCC">yellow wunderland in that g jet</font>

139
00:06:08,900 --> 00:06:13,279
interface because<font color="#E5E5E5"> remember early on that</font>

140
00:06:11,569 --> 00:06:15,770
we talked<font color="#CCCCCC"> about when G generate curves</font>

141
00:06:13,279 --> 00:06:17,419
it comes out<font color="#E5E5E5"> high system it has many</font>

142
00:06:15,770 --> 00:06:20,000
many<font color="#CCCCCC"> questions</font><font color="#E5E5E5"> on the type</font><font color="#CCCCCC"> system and</font>

143
00:06:17,419 --> 00:06:21,979
then so<font color="#CCCCCC"> so touch doesn't hold your team</font>

144
00:06:20,000 --> 00:06:24,319
say if you ask the last question<font color="#CCCCCC"> we</font>

145
00:06:21,979 --> 00:06:25,789
would not<font color="#CCCCCC"> be so slow and then JIT and</font>

146
00:06:24,319 --> 00:06:27,650
you come back to type system<font color="#CCCCCC"> and say if</font>

147
00:06:25,789 --> 00:06:30,490
he answer your question faster<font color="#E5E5E5"> we</font>

148
00:06:27,650 --> 00:06:30,489
wouldn't be that slow

149
00:06:30,759 --> 00:06:35,840
regardless<font color="#E5E5E5"> somebody ever solve the</font>

150
00:06:33,199 --> 00:06:37,819
problem right<font color="#CCCCCC"> so I'm going</font><font color="#E5E5E5"> to ask Sergey</font>

151
00:06:35,840 --> 00:06:40,399
to solve this problem<font color="#CCCCCC"> to me otherwise</font><font color="#E5E5E5"> we</font>

152
00:06:37,819 --> 00:06:42,639
cannot ship<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right thank you that's</font>

153
00:06:40,399 --> 00:06:42,639
right

154
00:06:44,080 --> 00:06:49,099
<font color="#E5E5E5">okay as the</font><font color="#CCCCCC"> machine know that the main</font>

155
00:06:46,790 --> 00:06:51,950
<font color="#CCCCCC">problem here</font><font color="#E5E5E5"> that I need to solve is the</font>

156
00:06:49,100 --> 00:06:55,310
time we<font color="#E5E5E5"> spend didn't the code didn't</font>

157
00:06:51,950 --> 00:06:58,190
application startup<font color="#E5E5E5"> if we kind</font><font color="#CCCCCC"> of step</font>

158
00:06:55,310 --> 00:07:00,710
<font color="#CCCCCC">back</font><font color="#E5E5E5"> we think about if I think</font><font color="#CCCCCC"> about it</font>

159
00:06:58,190 --> 00:07:03,050
what we do<font color="#CCCCCC"> actually we cheat the same</font>

160
00:07:00,710 --> 00:07:06,430
code<font color="#E5E5E5"> every single time they are on the</font>

161
00:07:03,050 --> 00:07:10,700
app we load the same libraries we

162
00:07:06,430 --> 00:07:13,430
<font color="#E5E5E5">compare some config files and</font><font color="#CCCCCC"> JIT</font><font color="#E5E5E5"> and</font>

163
00:07:10,700 --> 00:07:15,920
end result<font color="#E5E5E5"> the code the bit code</font>

164
00:07:13,430 --> 00:07:18,440
<font color="#CCCCCC">actually produces is exactly the same on</font>

165
00:07:15,920 --> 00:07:22,010
<font color="#E5E5E5">every single invocation seems like</font>

166
00:07:18,440 --> 00:07:23,440
Facebook<font color="#E5E5E5"> so how about we just</font><font color="#CCCCCC"> cash it</font>

167
00:07:22,010 --> 00:07:27,680
and we just later

168
00:07:23,440 --> 00:07:30,380
so engine is a tool<font color="#CCCCCC"> that we built for</font>

169
00:07:27,680 --> 00:07:32,420
<font color="#CCCCCC">the.net</font><font color="#E5E5E5"> framework to solve this problem</font>

170
00:07:30,380 --> 00:07:35,860
what it does especially<font color="#CCCCCC"> much just load</font>

171
00:07:32,420 --> 00:07:39,740
an application<font color="#CCCCCC"> or</font><font color="#E5E5E5"> a library and then it</font>

172
00:07:35,860 --> 00:07:43,370
compiles<font color="#E5E5E5"> every single method it is there</font>

173
00:07:39,740 --> 00:07:45,530
and stores the result in the<font color="#E5E5E5"> system-wide</font>

174
00:07:43,370 --> 00:07:48,040
<font color="#E5E5E5">cache next time when application</font>

175
00:07:45,530 --> 00:07:52,429
launches or lowest one<font color="#E5E5E5"> its libraries</font>

176
00:07:48,040 --> 00:07:57,850
runtime finds the<font color="#CCCCCC"> precompiled code and</font>

177
00:07:52,430 --> 00:08:03,710
loads it instead<font color="#CCCCCC"> of giving it again</font>

178
00:07:57,850 --> 00:08:06,260
so let's look at<font color="#E5E5E5"> all of the results as</font>

179
00:08:03,710 --> 00:08:09,140
you<font color="#CCCCCC"> can see the startup time has changed</font>

180
00:08:06,260 --> 00:08:13,670
drastically<font color="#CCCCCC"> right we improved by 2.3</font>

181
00:08:09,140 --> 00:08:17,030
percent<font color="#E5E5E5"> at</font><font color="#CCCCCC"> - we</font><font color="#E5E5E5"> it's now it 2/3 of what</font>

182
00:08:13,670 --> 00:08:19,900
<font color="#E5E5E5">it was before looks impressive right</font>

183
00:08:17,030 --> 00:08:19,900
<font color="#E5E5E5">ok we are done here</font>

184
00:08:29,689 --> 00:08:38,209
acceptable<font color="#E5E5E5"> one developer got for you say</font>

185
00:08:32,969 --> 00:08:38,209
<font color="#E5E5E5">you</font><font color="#CCCCCC"> got a problem mr. Xiang this is</font>

186
00:08:39,500 --> 00:08:44,219
right one thing<font color="#E5E5E5"> I want to</font><font color="#CCCCCC"> talk of</font>

187
00:08:42,599 --> 00:08:46,769
mention<font color="#E5E5E5"> about engine and its</font>

188
00:08:44,219 --> 00:08:48,990
characteristic as a fragility so the

189
00:08:46,769 --> 00:08:52,740
<font color="#E5E5E5">cola generates is really just cheat code</font>

190
00:08:48,990 --> 00:08:56,690
and it contains a<font color="#E5E5E5"> lot of assumptions</font>

191
00:08:52,740 --> 00:09:00,420
<font color="#E5E5E5">that make it very fragile for example</font>

192
00:08:56,690 --> 00:09:02,850
type layout<font color="#E5E5E5"> right the JIT makes</font>

193
00:09:00,420 --> 00:09:05,069
assumptions about a twitch of that is

194
00:09:02,850 --> 00:09:07,079
each field or<font color="#E5E5E5"> when it makes a virtual</font>

195
00:09:05,070 --> 00:09:08,970
call it needs to know the location in

196
00:09:07,079 --> 00:09:11,130
the table<font color="#E5E5E5"> where to find the actual</font>

197
00:09:08,970 --> 00:09:15,540
<font color="#E5E5E5">address of the method to invoke all this</font>

198
00:09:11,130 --> 00:09:17,310
is makes it<font color="#E5E5E5"> very fragile and then even</font>

199
00:09:15,540 --> 00:09:19,290
the data structures<font color="#CCCCCC"> that</font><font color="#E5E5E5"> live in CLR</font>

200
00:09:17,310 --> 00:09:24,750
<font color="#E5E5E5">they can change from version to version</font>

201
00:09:19,290 --> 00:09:27,420
<font color="#E5E5E5">and they do influence the GT code</font><font color="#CCCCCC"> so</font>

202
00:09:24,750 --> 00:09:30,089
what it<font color="#CCCCCC"> means is well you pre compile</font>

203
00:09:27,420 --> 00:09:31,800
your code and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you decided to copy a</font>

204
00:09:30,089 --> 00:09:33,240
new version<font color="#E5E5E5"> of your application or a new</font>

205
00:09:31,800 --> 00:09:36,149
lab version<font color="#E5E5E5"> of the library</font><font color="#CCCCCC"> that</font>

206
00:09:33,240 --> 00:09:38,160
application uses or maybe just<font color="#CCCCCC"> Windows</font>

207
00:09:36,149 --> 00:09:40,649
<font color="#CCCCCC">Update</font><font color="#E5E5E5"> installs the new version of</font>

208
00:09:38,160 --> 00:09:43,079
framework what happens then<font color="#CCCCCC"> that the</font>

209
00:09:40,649 --> 00:09:46,019
cache you<font color="#E5E5E5"> had is pretty much invalidated</font>

210
00:09:43,079 --> 00:09:48,390
so just to be clear<font color="#CCCCCC"> there is not gonna</font>

211
00:09:46,019 --> 00:09:51,269
<font color="#E5E5E5">be any correctness issue because runtime</font>

212
00:09:48,390 --> 00:09:54,089
by itself has knowledge about<font color="#E5E5E5"> that and</font>

213
00:09:51,269 --> 00:09:55,920
it has means<font color="#CCCCCC"> built-in in the cache to</font>

214
00:09:54,089 --> 00:09:58,860
<font color="#CCCCCC">resolve those issues so what will happen</font>

215
00:09:55,920 --> 00:10:02,219
<font color="#E5E5E5">is we</font><font color="#CCCCCC"> will just throw away that pretty</font>

216
00:09:58,860 --> 00:10:05,820
code and we will fall back<font color="#E5E5E5"> to G it again</font>

217
00:10:02,220 --> 00:10:08,910
and so yes the code will run<font color="#CCCCCC"> slower but</font>

218
00:10:05,820 --> 00:10:10,709
<font color="#E5E5E5">will still be correct</font><font color="#CCCCCC"> well yes this is</font>

219
00:10:08,910 --> 00:10:13,050
problem but how often<font color="#CCCCCC"> does it happen</font>

220
00:10:10,709 --> 00:10:18,959
<font color="#CCCCCC">like how</font><font color="#E5E5E5"> often for example Windows</font>

221
00:10:13,050 --> 00:10:20,790
updates<font color="#E5E5E5"> don't I</font><font color="#CCCCCC"> prin work</font><font color="#E5E5E5"> right anyway</font>

222
00:10:18,959 --> 00:10:22,529
<font color="#E5E5E5">in this case what</font><font color="#CCCCCC"> happens when the</font>

223
00:10:20,790 --> 00:10:24,959
<font color="#CCCCCC">caches gets invalidated</font><font color="#E5E5E5"> engine service</font>

224
00:10:22,529 --> 00:10:27,959
service kicks in<font color="#CCCCCC"> it will compile the</font>

225
00:10:24,959 --> 00:10:32,729
<font color="#CCCCCC">apps are Betty cash and the app starts</font>

226
00:10:27,959 --> 00:10:35,000
<font color="#E5E5E5">running again fast as before so seems</font>

227
00:10:32,730 --> 00:10:36,480
like<font color="#E5E5E5"> it</font><font color="#CCCCCC"> just an engineering detail and</font>

228
00:10:35,000 --> 00:10:42,480
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> is good</font>

229
00:10:36,480 --> 00:10:43,820
I can tell my boss you can keep your

230
00:10:42,480 --> 00:10:47,520
finger

231
00:10:43,820 --> 00:10:49,320
so<font color="#CCCCCC"> Sergei was happy for a while remember</font>

232
00:10:47,520 --> 00:10:51,840
<font color="#CCCCCC">we talked about</font><font color="#E5E5E5"> when engine got</font>

233
00:10:49,320 --> 00:10:53,760
delivered was done at one point<font color="#CCCCCC"> oh do</font>

234
00:10:51,840 --> 00:10:56,280
<font color="#E5E5E5">you remember at that time that you</font><font color="#CCCCCC"> come</font>

235
00:10:53,760 --> 00:10:58,710
to me<font color="#E5E5E5"> said</font><font color="#CCCCCC"> disc</font><font color="#E5E5E5"> it's nice you're not</font>

236
00:10:56,280 --> 00:11:01,199
Windows Update<font color="#E5E5E5"> USA</font><font color="#CCCCCC"> she later on it</font>

237
00:10:58,710 --> 00:11:03,960
become<font color="#E5E5E5"> Windows Update can you do the</font>

238
00:11:01,200 --> 00:11:05,930
<font color="#E5E5E5">next slide he was happy for a</font><font color="#CCCCCC"> while but</font>

239
00:11:03,960 --> 00:11:08,880
his happiness<font color="#E5E5E5"> did not last forever</font>

240
00:11:05,930 --> 00:11:11,670
<font color="#CCCCCC">actually world is</font><font color="#E5E5E5"> changing on him and he</font>

241
00:11:08,880 --> 00:11:16,320
<font color="#CCCCCC">just didn't know we were asked about</font>

242
00:11:11,670 --> 00:11:18,060
devices<font color="#E5E5E5"> that</font><font color="#CCCCCC"> HP is had to be sensitive</font>

243
00:11:16,320 --> 00:11:21,390
to<font color="#E5E5E5"> battery life at</font><font color="#CCCCCC"> that time it was</font>

244
00:11:18,060 --> 00:11:24,660
Windows<font color="#E5E5E5"> Phone and then wearables and as</font>

245
00:11:21,390 --> 00:11:26,699
you even laptop<font color="#CCCCCC"> let's say 15 years ago</font>

246
00:11:24,660 --> 00:11:29,430
<font color="#E5E5E5">laptop lifetime</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> probably what battery</font>

247
00:11:26,700 --> 00:11:31,200
life times<font color="#CCCCCC"> 2 hours today nobody is going</font>

248
00:11:29,430 --> 00:11:34,160
to buy a laptop<font color="#E5E5E5"> isn't battery</font><font color="#CCCCCC"> life is 2</font>

249
00:11:31,200 --> 00:11:38,070
hours<font color="#E5E5E5"> actually expectation changed and</font>

250
00:11:34,160 --> 00:11:40,230
wearables hololens think about hololens

251
00:11:38,070 --> 00:11:43,590
<font color="#CCCCCC">and spending 30 minutes</font><font color="#E5E5E5"> getting the code</font>

252
00:11:40,230 --> 00:11:46,460
<font color="#E5E5E5">especially</font><font color="#CCCCCC"> not acceptable and the second</font>

253
00:11:43,590 --> 00:11:50,280
one is<font color="#E5E5E5"> areata workloads also changing</font>

254
00:11:46,460 --> 00:11:52,830
think about servers when<font color="#E5E5E5"> you provision a</font>

255
00:11:50,280 --> 00:11:54,780
server<font color="#E5E5E5"> images you build it once you will</font>

256
00:11:52,830 --> 00:11:57,089
want<font color="#CCCCCC"> to deploy</font><font color="#E5E5E5"> it into millions</font><font color="#CCCCCC"> of</font>

257
00:11:54,780 --> 00:11:59,250
<font color="#CCCCCC">servers</font><font color="#E5E5E5"> and those server instances you</font>

258
00:11:57,089 --> 00:12:01,260
expel them to be responsive immediately

259
00:11:59,250 --> 00:12:03,839
<font color="#E5E5E5">rather than those servers had to spend</font>

260
00:12:01,260 --> 00:12:07,500
what 10 minutes 30 minutes generating

261
00:12:03,839 --> 00:12:11,460
engine images it's not<font color="#CCCCCC"> ok the third one</font>

262
00:12:07,500 --> 00:12:14,700
is also<font color="#E5E5E5"> a killer</font><font color="#CCCCCC"> securities</font><font color="#E5E5E5"> we</font>

263
00:12:11,460 --> 00:12:17,880
<font color="#E5E5E5">generating</font><font color="#CCCCCC"> images sound device how do we</font>

264
00:12:14,700 --> 00:12:20,040
know it's not<font color="#E5E5E5"> tempered and we our engine</font>

265
00:12:17,880 --> 00:12:22,230
services actually<font color="#E5E5E5"> elevator services how</font>

266
00:12:20,040 --> 00:12:24,689
do we know that<font color="#E5E5E5"> we won't be hijacked in</font>

267
00:12:22,230 --> 00:12:26,430
fact window<font color="#E5E5E5"> actually require all images</font>

268
00:12:24,690 --> 00:12:28,320
<font color="#E5E5E5">as a curable images to</font><font color="#CCCCCC"> be signed</font>

269
00:12:26,430 --> 00:12:32,160
otherwise<font color="#E5E5E5"> cannot be trusted</font>

270
00:12:28,320 --> 00:12:34,470
<font color="#E5E5E5">the last one as we go to the neck or we</font>

271
00:12:32,160 --> 00:12:36,569
go into<font color="#E5E5E5"> Linux</font><font color="#CCCCCC"> where are</font><font color="#E5E5E5"> we going to do</font>

272
00:12:34,470 --> 00:12:39,450
elevator services in<font color="#E5E5E5"> Linux operating</font>

273
00:12:36,570 --> 00:12:42,410
system<font color="#E5E5E5"> it is just not</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> work</font><font color="#CCCCCC"> so</font>

274
00:12:39,450 --> 00:12:44,880
<font color="#CCCCCC">here I am going</font><font color="#E5E5E5"> to tell Sergey back</font>

275
00:12:42,410 --> 00:12:46,910
sorry your solution<font color="#CCCCCC"> did not last too</font>

276
00:12:44,880 --> 00:12:46,910
long

277
00:12:48,240 --> 00:12:54,360
well I guess that engineering detail was

278
00:12:51,209 --> 00:12:56,040
a real problem<font color="#E5E5E5"> after all so what we need</font>

279
00:12:54,360 --> 00:12:59,819
we<font color="#CCCCCC"> need we need a</font><font color="#E5E5E5"> new code generation</font>

280
00:12:56,040 --> 00:13:02,399
strategy<font color="#CCCCCC"> what we need to do we need to</font>

281
00:12:59,819 --> 00:13:05,189
<font color="#E5E5E5">scale back on those optimizations that</font>

282
00:13:02,399 --> 00:13:08,009
we do in G that<font color="#CCCCCC"> make</font><font color="#E5E5E5"> a real bad</font>

283
00:13:05,189 --> 00:13:11,009
assumptions<font color="#E5E5E5"> the good thing</font><font color="#CCCCCC"> that those</font>

284
00:13:08,009 --> 00:13:14,129
assumptions are real just used for

285
00:13:11,009 --> 00:13:18,059
<font color="#E5E5E5">optimization</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> like I said and they are</font>

286
00:13:14,129 --> 00:13:20,519
not fundamental to ahead<font color="#E5E5E5"> of time code</font>

287
00:13:18,059 --> 00:13:22,980
generation<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> live without them so</font>

288
00:13:20,519 --> 00:13:26,779
for<font color="#E5E5E5"> example instead of a hard coding</font>

289
00:13:22,980 --> 00:13:29,999
offset into the table we<font color="#E5E5E5"> can just ask</font>

290
00:13:26,779 --> 00:13:33,929
<font color="#CCCCCC">runtime to give us a data and then call</font>

291
00:13:29,999 --> 00:13:37,259
that<font color="#CCCCCC"> soak origin is a new tool that we</font>

292
00:13:33,929 --> 00:13:41,160
wrote<font color="#CCCCCC"> that generate the code is</font>

293
00:13:37,259 --> 00:13:43,559
repulsion resilient and it's just one

294
00:13:41,160 --> 00:13:46,379
library<font color="#CCCCCC"> it doesn't know anything outside</font>

295
00:13:43,559 --> 00:13:48,839
<font color="#E5E5E5">of it</font><font color="#CCCCCC"> so you can replace libraries</font><font color="#E5E5E5"> as</font>

296
00:13:46,379 --> 00:13:52,619
much as you want<font color="#CCCCCC"> you the code in other</font>

297
00:13:48,839 --> 00:13:54,389
places will not get invalidated<font color="#E5E5E5"> as I</font>

298
00:13:52,619 --> 00:13:55,860
said is gonna get generate less

299
00:13:54,389 --> 00:13:58,019
<font color="#CCCCCC">performant code because</font><font color="#E5E5E5"> not</font>

300
00:13:55,860 --> 00:14:00,899
optimizations are going to be allowed in

301
00:13:58,019 --> 00:14:04,259
this mode<font color="#E5E5E5"> the</font><font color="#CCCCCC"> other nice thing about</font>

302
00:14:00,899 --> 00:14:05,999
this tool<font color="#E5E5E5"> that it can run anywhere let's</font>

303
00:14:04,259 --> 00:14:08,730
<font color="#CCCCCC">kid</font><font color="#E5E5E5"> run on the target</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> that were</font>

304
00:14:05,999 --> 00:14:10,949
the application will run or it<font color="#E5E5E5"> can</font>

305
00:14:08,730 --> 00:14:12,899
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> run in the build lab where the</font>

306
00:14:10,949 --> 00:14:15,299
library<font color="#CCCCCC"> or the</font><font color="#E5E5E5"> application in BRE is</font>

307
00:14:12,899 --> 00:14:18,329
being produced in<font color="#E5E5E5"> the first place what</font>

308
00:14:15,299 --> 00:14:20,160
it allows to do is that the<font color="#CCCCCC"> companies</font>

309
00:14:18,329 --> 00:14:23,118
now commercially sign<font color="#CCCCCC"> their binaries on</font>

310
00:14:20,160 --> 00:14:25,799
their<font color="#CCCCCC"> production servers</font><font color="#E5E5E5"> and deployed</font>

311
00:14:23,119 --> 00:14:33,629
<font color="#CCCCCC">dll that have been verified and never</font>

312
00:14:25,799 --> 00:14:37,170
can be verified<font color="#E5E5E5"> right so let's take an</font>

313
00:14:33,629 --> 00:14:41,910
example<font color="#E5E5E5"> look at the example of the</font><font color="#CCCCCC"> code</font>

314
00:14:37,170 --> 00:14:44,160
<font color="#E5E5E5">Jam in both cases as we said we talked</font>

315
00:14:41,910 --> 00:14:48,749
about<font color="#CCCCCC"> virtual calls and kotas</font><font color="#E5E5E5"> -</font>

316
00:14:44,160 --> 00:14:51,990
<font color="#E5E5E5">stuttering is a good example on the my</font>

317
00:14:48,749 --> 00:14:54,509
right side you can<font color="#CCCCCC"> see code produced by</font>

318
00:14:51,990 --> 00:14:56,699
angel<font color="#E5E5E5"> you can see the fragility I was</font>

319
00:14:54,509 --> 00:15:00,310
talking<font color="#CCCCCC"> about here the</font><font color="#E5E5E5"> offset into the</font>

320
00:14:56,699 --> 00:15:03,219
tables<font color="#CCCCCC"> this was V</font><font color="#E5E5E5"> table this is</font>

321
00:15:00,310 --> 00:15:06,160
pointer to<font color="#CCCCCC"> the table chunk that is used</font>

322
00:15:03,220 --> 00:15:07,839
<font color="#CCCCCC">or in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> table stores Iverson is</font>

323
00:15:06,160 --> 00:15:11,350
hard-coded<font color="#E5E5E5"> in the image what this means</font>

324
00:15:07,839 --> 00:15:13,930
is if you add or remove a method virtual

325
00:15:11,350 --> 00:15:15,999
method<font color="#E5E5E5"> from that class or one of these</font>

326
00:15:13,930 --> 00:15:21,239
base classes<font color="#E5E5E5"> this code will become</font>

327
00:15:15,999 --> 00:15:23,639
invalid<font color="#CCCCCC"> and go crash now on this side is</font>

328
00:15:21,240 --> 00:15:26,499
<font color="#CCCCCC">courage during Petrosian</font>

329
00:15:23,639 --> 00:15:28,809
there are no more<font color="#CCCCCC"> hard-coded</font><font color="#E5E5E5"> offsets</font>

330
00:15:26,499 --> 00:15:31,660
what we do<font color="#E5E5E5"> instead we just go into</font>

331
00:15:28,809 --> 00:15:35,949
<font color="#E5E5E5">runtime to get an introduction cell and</font>

332
00:15:31,660 --> 00:15:39,850
then we<font color="#E5E5E5"> invoke virtual</font><font color="#CCCCCC"> stop dispatch on</font>

333
00:15:35,949 --> 00:15:41,889
it which will run<font color="#E5E5E5"> little slower but to</font>

334
00:15:39,850 --> 00:15:43,269
do the right thing and it doesn't<font color="#CCCCCC"> matter</font>

335
00:15:41,889 --> 00:15:45,100
<font color="#E5E5E5">what</font><font color="#CCCCCC"> happens to the object</font>

336
00:15:43,269 --> 00:15:49,499
how many methods we add to it<font color="#E5E5E5"> how much</font>

337
00:15:45,100 --> 00:15:49,499
we change it<font color="#E5E5E5"> the code will will or work</font>

338
00:15:50,399 --> 00:15:59,529
now let's measure again<font color="#CCCCCC"> one thing I</font><font color="#E5E5E5"> want</font>

339
00:15:56,079 --> 00:16:01,269
to<font color="#CCCCCC"> mention about this</font><font color="#E5E5E5"> slide is that</font><font color="#CCCCCC"> this</font>

340
00:15:59,529 --> 00:16:05,110
contains data for two different runtimes

341
00:16:01,269 --> 00:16:07,600
<font color="#E5E5E5">for dotnet framework and core CLR the</font>

342
00:16:05,110 --> 00:16:11,199
reason is that<font color="#E5E5E5"> engine by itself</font><font color="#CCCCCC"> it works</font>

343
00:16:07,600 --> 00:16:13,259
well<font color="#E5E5E5"> on that net framework and it's it</font>

344
00:16:11,199 --> 00:16:17,019
doesn't<font color="#E5E5E5"> exist for the</font><font color="#CCCCCC"> core course</font>

345
00:16:13,259 --> 00:16:19,540
<font color="#E5E5E5">corrosion on</font><font color="#CCCCCC"> the other hand was built</font>

346
00:16:17,019 --> 00:16:21,910
for core CLR most procore CLR

347
00:16:19,540 --> 00:16:24,069
so what we need to<font color="#CCCCCC"> do we need</font><font color="#E5E5E5"> to compare</font>

348
00:16:21,910 --> 00:16:26,559
highs and lows for each run type

349
00:16:24,069 --> 00:16:32,079
separately<font color="#E5E5E5"> yeah this data you saw before</font>

350
00:16:26,559 --> 00:16:35,170
for dotnet framework<font color="#E5E5E5"> and this is for</font>

351
00:16:32,079 --> 00:16:38,378
core CLR<font color="#E5E5E5"> what what it means in each role</font>

352
00:16:35,170 --> 00:16:40,449
again<font color="#E5E5E5"> first row is every single</font><font color="#CCCCCC"> method</font>

353
00:16:38,379 --> 00:16:43,779
has been cheated at runtime

354
00:16:40,449 --> 00:16:46,569
this is when we<font color="#E5E5E5"> precompiled our core lip</font>

355
00:16:43,779 --> 00:16:48,160
sister<font color="#CCCCCC"> parkour lip we used kind</font><font color="#E5E5E5"> of</font>

356
00:16:46,569 --> 00:16:51,099
fragile compilation for<font color="#E5E5E5"> you to get</font>

357
00:16:48,160 --> 00:16:54,339
better performance results and then this

358
00:16:51,100 --> 00:16:56,259
is our<font color="#E5E5E5"> shipping configuration is all our</font>

359
00:16:54,339 --> 00:16:57,790
effects libraries framework libraries

360
00:16:56,259 --> 00:17:00,970
are corrosion<font color="#E5E5E5"> today to improve the</font>

361
00:16:57,790 --> 00:17:03,910
<font color="#E5E5E5">startup and now what I did here is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> run</font>

362
00:17:00,970 --> 00:17:06,250
corrosion on every single<font color="#CCCCCC"> dll that was</font>

363
00:17:03,910 --> 00:17:09,609
an<font color="#CCCCCC"> application and this is the end</font>

364
00:17:06,250 --> 00:17:11,949
<font color="#CCCCCC">result as</font><font color="#E5E5E5"> you can see we got 2/3</font>

365
00:17:09,609 --> 00:17:14,260
<font color="#E5E5E5">productions here after the engine and</font>

366
00:17:11,949 --> 00:17:17,320
now<font color="#E5E5E5"> whiskers gem</font>

367
00:17:14,260 --> 00:17:19,569
we have even<font color="#CCCCCC"> buried</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> I don't know</font>

368
00:17:17,319 --> 00:17:21,159
how my boss<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what my</font><font color="#CCCCCC"> boss says</font>

369
00:17:19,569 --> 00:17:24,119
<font color="#E5E5E5">about this data but</font><font color="#CCCCCC"> to me it looks</font><font color="#E5E5E5"> great</font>

370
00:17:21,160 --> 00:17:29,350
<font color="#CCCCCC">I think we</font><font color="#E5E5E5"> are done</font>

371
00:17:24,119 --> 00:17:31,659
<font color="#CCCCCC">he's always optimistic so if you go back</font>

372
00:17:29,350 --> 00:17:35,409
to last<font color="#E5E5E5"> slide a little bit this</font><font color="#CCCCCC"> Steiger</font>

373
00:17:31,660 --> 00:17:37,300
<font color="#E5E5E5">contains many</font><font color="#CCCCCC"> different things when we</font>

374
00:17:35,410 --> 00:17:40,240
first<font color="#CCCCCC"> shipped</font><font color="#E5E5E5"> cause you're the</font><font color="#CCCCCC"> technical</font>

375
00:17:37,300 --> 00:17:42,580
one<font color="#E5E5E5"> oh we actually very unhappy because</font>

376
00:17:40,240 --> 00:17:45,190
<font color="#CCCCCC">we're performance team</font><font color="#E5E5E5"> tonic or one</font><font color="#CCCCCC"> know</font>

377
00:17:42,580 --> 00:17:47,080
is actually<font color="#E5E5E5"> slower than desktop because</font>

378
00:17:45,190 --> 00:17:51,550
there's no<font color="#E5E5E5"> engine and we only pre</font>

379
00:17:47,080 --> 00:17:53,889
<font color="#CCCCCC">compile the core lab classroom for</font><font color="#E5E5E5"> firm</font>

380
00:17:51,550 --> 00:17:55,570
<font color="#E5E5E5">work was actually enabling - oh that is</font>

381
00:17:53,890 --> 00:17:57,030
<font color="#E5E5E5">why some of the performance game that</font>

382
00:17:55,570 --> 00:17:59,530
<font color="#E5E5E5">you're seeing in the previous</font>

383
00:17:57,030 --> 00:18:04,570
presentation that a tree was<font color="#CCCCCC"> manifests</font>

384
00:17:59,530 --> 00:18:07,050
some<font color="#CCCCCC"> part of</font><font color="#E5E5E5"> startup there as well so</font><font color="#CCCCCC"> as</font>

385
00:18:04,570 --> 00:18:09,760
I say<font color="#E5E5E5"> engineer is always optimistic</font>

386
00:18:07,050 --> 00:18:13,050
<font color="#CCCCCC">didn't he</font><font color="#E5E5E5"> just mention the optimization</font>

387
00:18:09,760 --> 00:18:15,910
didn't you<font color="#E5E5E5"> just go to</font><font color="#CCCCCC"> a stop helper and</font>

388
00:18:13,050 --> 00:18:18,580
<font color="#CCCCCC">startup is not impact is that the</font><font color="#E5E5E5"> only</font>

389
00:18:15,910 --> 00:18:20,200
metrics that we measure why don't you go

390
00:18:18,580 --> 00:18:26,230
back the<font color="#E5E5E5"> perfe lab check out all the</font>

391
00:18:20,200 --> 00:18:28,600
<font color="#E5E5E5">metrics that we major yes right</font><font color="#CCCCCC"> startup</font>

392
00:18:26,230 --> 00:18:31,660
is not the only<font color="#E5E5E5"> metrics there is another</font>

393
00:18:28,600 --> 00:18:35,110
thing that<font color="#CCCCCC"> cause called throughput so</font>

394
00:18:31,660 --> 00:18:37,870
let's look<font color="#E5E5E5"> at throughput net data here</font>

395
00:18:35,110 --> 00:18:40,090
we have data from Jason<font color="#E5E5E5"> sterilization</font>

396
00:18:37,870 --> 00:18:43,300
benchmark<font color="#E5E5E5"> this actually</font><font color="#CCCCCC"> a benchmark that</font>

397
00:18:40,090 --> 00:18:47,470
is used by asp.net team and by taking

398
00:18:43,300 --> 00:18:50,139
<font color="#E5E5E5">power C so what we can see here is again</font>

399
00:18:47,470 --> 00:18:53,410
a quest requests per second for<font color="#E5E5E5"> each</font>

400
00:18:50,140 --> 00:18:56,230
configuration<font color="#E5E5E5"> first line is</font><font color="#CCCCCC"> audited</font>

401
00:18:53,410 --> 00:18:57,820
<font color="#E5E5E5">our G that all code is perfectly</font>

402
00:18:56,230 --> 00:19:00,910
generated with every<font color="#E5E5E5"> possible</font>

403
00:18:57,820 --> 00:19:03,570
optimizations<font color="#E5E5E5"> edge it supports this is</font>

404
00:19:00,910 --> 00:19:07,210
our kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> shipping configuration and</font>

405
00:19:03,570 --> 00:19:10,540
this<font color="#E5E5E5"> is if I cross J and Everest</font><font color="#CCCCCC"> in</font>

406
00:19:07,210 --> 00:19:13,720
India well yeah we do have<font color="#E5E5E5"> a problem</font>

407
00:19:10,540 --> 00:19:18,340
here<font color="#E5E5E5"> we are about seven percent slower</font>

408
00:19:13,720 --> 00:19:19,960
than in audited configuration so yeah<font color="#CCCCCC"> I</font>

409
00:19:18,340 --> 00:19:21,370
guess we<font color="#CCCCCC"> just</font><font color="#E5E5E5"> pushed the problem</font>

410
00:19:19,960 --> 00:19:25,560
somewhere else from<font color="#E5E5E5"> start of the</font>

411
00:19:21,370 --> 00:19:25,560
throughput<font color="#E5E5E5"> so we need to think about it</font>

412
00:19:26,480 --> 00:19:37,559
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> okay I'm gonna think about it so</font>

413
00:19:34,890 --> 00:19:40,100
let's take<font color="#CCCCCC"> a look at the cogeneration</font>

414
00:19:37,559 --> 00:19:42,899
<font color="#E5E5E5">technologists we actually have today</font>

415
00:19:40,100 --> 00:19:43,860
<font color="#CCCCCC">head of town question</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> talked a</font><font color="#E5E5E5"> lot</font>

416
00:19:42,900 --> 00:19:48,150
about<font color="#E5E5E5"> it today</font>

417
00:19:43,860 --> 00:19:50,399
a generate fast code is it quote fast

418
00:19:48,150 --> 00:19:52,530
for<font color="#E5E5E5"> faster talk right but the quality of</font>

419
00:19:50,400 --> 00:19:55,290
the code is<font color="#CCCCCC"> not optimal</font>

420
00:19:52,530 --> 00:19:57,629
let me help did that<font color="#E5E5E5"> actually has two</font>

421
00:19:55,290 --> 00:20:01,230
cogeneration modes one is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> minimum</font>

422
00:19:57,630 --> 00:20:03,660
<font color="#E5E5E5">Tamizh ations and full optimizations the</font>

423
00:20:01,230 --> 00:20:06,419
first mode<font color="#E5E5E5"> minimum optimizations</font><font color="#CCCCCC"> is</font>

424
00:20:03,660 --> 00:20:08,400
actually the mode<font color="#E5E5E5"> that is used when you</font>

425
00:20:06,419 --> 00:20:11,970
hit f5 in<font color="#E5E5E5"> two years for debugging</font>

426
00:20:08,400 --> 00:20:13,980
scenarios<font color="#CCCCCC"> its proper purpose again</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> JIT</font>

427
00:20:11,970 --> 00:20:16,799
<font color="#CCCCCC">decode as part as fast as possible</font>

428
00:20:13,980 --> 00:20:18,990
minimum<font color="#E5E5E5"> Tamizh ations which makes also</font>

429
00:20:16,799 --> 00:20:21,240
<font color="#CCCCCC">your code very debuggable and provides</font>

430
00:20:18,990 --> 00:20:24,090
great<font color="#E5E5E5"> Diagnostics capabilities in the</font>

431
00:20:21,240 --> 00:20:27,150
<font color="#CCCCCC">years</font><font color="#E5E5E5"> and optimizations is what we</font>

432
00:20:24,090 --> 00:20:31,260
haven't<font color="#E5E5E5"> released right everyone knows</font>

433
00:20:27,150 --> 00:20:33,450
this interpreter<font color="#E5E5E5"> well we have people</font><font color="#CCCCCC"> are</font>

434
00:20:31,260 --> 00:20:38,520
types of that<font color="#E5E5E5"> but none of them actually</font>

435
00:20:33,450 --> 00:20:42,500
works well and it requires a lot of work

436
00:20:38,520 --> 00:20:45,629
<font color="#E5E5E5">on the diagnostic stack to support it</font><font color="#CCCCCC"> so</font>

437
00:20:42,500 --> 00:20:50,760
<font color="#E5E5E5">I'm sure none</font><font color="#CCCCCC"> of these technologies kind</font>

438
00:20:45,630 --> 00:20:57,000
of work by itself<font color="#CCCCCC"> I guess what we can do</font>

439
00:20:50,760 --> 00:20:59,490
is combine some of<font color="#E5E5E5"> them together this is</font>

440
00:20:57,000 --> 00:21:02,580
what<font color="#E5E5E5"> we've</font><font color="#CCCCCC"> done been working in a cup of</font>

441
00:20:59,490 --> 00:21:05,160
the last<font color="#E5E5E5"> couple years this is what Steve</font>

442
00:21:02,580 --> 00:21:07,350
mentioned in his talk<font color="#CCCCCC"> tea regime that</font>

443
00:21:05,160 --> 00:21:12,179
<font color="#E5E5E5">was shaped into one as a preview feature</font>

444
00:21:07,350 --> 00:21:18,059
<font color="#E5E5E5">and it's supposed to</font><font color="#CCCCCC"> be on by default in</font>

445
00:21:12,179 --> 00:21:22,280
that<font color="#CCCCCC"> core trio</font><font color="#E5E5E5"> so before we had</font><font color="#CCCCCC"> kirigiri</font>

446
00:21:18,059 --> 00:21:25,379
enabled or available<font color="#CCCCCC"> to us we added time</font>

447
00:21:22,280 --> 00:21:27,928
<font color="#E5E5E5">could compile an i/o or</font><font color="#CCCCCC"> a method only</font>

448
00:21:25,380 --> 00:21:28,710
once and only once we could<font color="#E5E5E5"> decide what</font>

449
00:21:27,929 --> 00:21:31,740
do we do with<font color="#CCCCCC"> it</font>

450
00:21:28,710 --> 00:21:35,250
do we optimize for<font color="#CCCCCC"> fast reading for</font>

451
00:21:31,740 --> 00:21:38,520
<font color="#CCCCCC">start-up for throughput</font><font color="#E5E5E5"> or maybe for</font>

452
00:21:35,250 --> 00:21:39,040
portability<font color="#E5E5E5"> now we still</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> didn't we</font>

453
00:21:38,520 --> 00:21:41,230
actually

454
00:21:39,040 --> 00:21:43,990
and do<font color="#E5E5E5"> it multiple times or at least</font>

455
00:21:41,230 --> 00:21:47,950
<font color="#E5E5E5">twice so what we can do</font><font color="#CCCCCC"> on start</font><font color="#E5E5E5"> are we</font>

456
00:21:43,990 --> 00:21:52,870
use<font color="#E5E5E5"> min</font><font color="#CCCCCC"> ops</font><font color="#E5E5E5"> or we can reduce corrosion</font>

457
00:21:47,950 --> 00:21:54,910
code to run<font color="#E5E5E5"> the code fast and then once</font>

458
00:21:52,870 --> 00:21:58,449
we reach the steady state we can

459
00:21:54,910 --> 00:22:02,250
recompile the recompile the same code

460
00:21:58,450 --> 00:22:04,810
and enable all available optimizations

461
00:22:02,250 --> 00:22:08,530
<font color="#E5E5E5">the other part about corrosion what we</font>

462
00:22:04,810 --> 00:22:11,950
can do is well here is actually we<font color="#E5E5E5"> can</font>

463
00:22:08,530 --> 00:22:14,470
embed in our images<font color="#E5E5E5"> like some hints for</font>

464
00:22:11,950 --> 00:22:19,180
<font color="#E5E5E5">JIT or for</font><font color="#CCCCCC"> tearing system</font><font color="#E5E5E5"> to do better</font>

465
00:22:14,470 --> 00:22:24,340
optimization or generate code more

466
00:22:19,180 --> 00:22:27,070
efficiently<font color="#E5E5E5"> so one thing</font><font color="#CCCCCC"> that we can</font>

467
00:22:24,340 --> 00:22:32,679
still experimenting with is heuristic

468
00:22:27,070 --> 00:22:34,179
for sheer editing as<font color="#CCCCCC"> flight says steady</font>

469
00:22:32,680 --> 00:22:34,810
state<font color="#E5E5E5"> versus startup</font><font color="#CCCCCC"> it's kind of</font><font color="#E5E5E5"> a</font>

470
00:22:34,180 --> 00:22:36,760
great<font color="#E5E5E5"> area</font>

471
00:22:34,810 --> 00:22:38,440
every<font color="#E5E5E5"> single application is</font><font color="#CCCCCC"> very</font>

472
00:22:36,760 --> 00:22:41,980
different we<font color="#E5E5E5"> don't have yet an API</font>

473
00:22:38,440 --> 00:22:44,650
<font color="#CCCCCC">called</font><font color="#E5E5E5"> start steady state we don't know</font>

474
00:22:41,980 --> 00:22:48,460
yet<font color="#CCCCCC"> so we kind of</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to guess and</font>

475
00:22:44,650 --> 00:22:52,330
there are various<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> one is</font>

476
00:22:48,460 --> 00:22:53,800
a simple<font color="#CCCCCC"> one</font><font color="#E5E5E5"> is just calculate how how</font>

477
00:22:52,330 --> 00:22:55,689
many<font color="#E5E5E5"> times the matter has</font><font color="#CCCCCC"> been called</font>

478
00:22:53,800 --> 00:23:00,070
that<font color="#E5E5E5"> hit count and then at some point</font>

479
00:22:55,690 --> 00:23:01,630
start<font color="#E5E5E5"> recompiling it then we can use</font>

480
00:23:00,070 --> 00:23:05,230
<font color="#E5E5E5">more advanced techniques like a sample</font>

481
00:23:01,630 --> 00:23:06,640
profiling or performance counters<font color="#E5E5E5"> for</font>

482
00:23:05,230 --> 00:23:10,090
now we decide to start<font color="#E5E5E5"> with a very</font>

483
00:23:06,640 --> 00:23:12,730
<font color="#E5E5E5">simple approach and what we do is as</font>

484
00:23:10,090 --> 00:23:15,429
<font color="#CCCCCC">soon</font><font color="#E5E5E5"> as the method is called 30 times we</font>

485
00:23:12,730 --> 00:23:20,670
invoke the cheering system and it will

486
00:23:15,430 --> 00:23:26,110
replace<font color="#E5E5E5"> the method with by the code yes</font>

487
00:23:20,670 --> 00:23:30,450
so measure again<font color="#CCCCCC"> and</font><font color="#E5E5E5"> what we see</font><font color="#CCCCCC"> hey we</font>

488
00:23:26,110 --> 00:23:33,129
<font color="#CCCCCC">are</font><font color="#E5E5E5"> back so the throughput is good the</font>

489
00:23:30,450 --> 00:23:34,390
startup is good as<font color="#E5E5E5"> well we haven't</font>

490
00:23:33,130 --> 00:23:37,060
regress that because the<font color="#E5E5E5"> runtime</font>

491
00:23:34,390 --> 00:23:41,910
actually picks cross-gen code at first

492
00:23:37,060 --> 00:23:41,909
time so<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> good back to you</font>

493
00:23:42,220 --> 00:23:48,250
so if you think<font color="#CCCCCC"> about this this is a</font>

494
00:23:44,830 --> 00:23:51,129
very<font color="#E5E5E5"> similar to Java hotspot mechanism</font>

495
00:23:48,250 --> 00:23:53,559
right<font color="#E5E5E5"> when you if you are not sure if</font>

496
00:23:51,129 --> 00:23:55,980
<font color="#E5E5E5">your code is</font><font color="#CCCCCC"> going to be</font><font color="#E5E5E5"> executed many</font>

497
00:23:53,559 --> 00:23:58,990
many times<font color="#E5E5E5"> instead of spending time</font>

498
00:23:55,980 --> 00:24:01,779
optimization<font color="#CCCCCC"> all the code we actually</font>

499
00:23:58,990 --> 00:24:04,000
<font color="#E5E5E5">took the upper</font><font color="#CCCCCC"> heuristic that you know</font>

500
00:24:01,779 --> 00:24:07,059
generating code as fast as possible<font color="#CCCCCC"> and</font>

501
00:24:04,000 --> 00:24:08,830
<font color="#CCCCCC">as</font><font color="#E5E5E5"> method that identified to be executed</font>

502
00:24:07,059 --> 00:24:11,649
more frequently than<font color="#E5E5E5"> we're trying to</font>

503
00:24:08,830 --> 00:24:13,600
optimize those method and that as<font color="#E5E5E5"> you</font>

504
00:24:11,649 --> 00:24:17,139
give you a very<font color="#E5E5E5"> good blend of startup</font>

505
00:24:13,600 --> 00:24:20,019
and also true put so this is<font color="#E5E5E5"> alko ginger</font>

506
00:24:17,139 --> 00:24:22,740
journey we started with pure jet<font color="#E5E5E5"> and we</font>

507
00:24:20,019 --> 00:24:25,779
never ship in<font color="#CCCCCC"> that configuration because</font>

508
00:24:22,740 --> 00:24:28,509
it's just not<font color="#E5E5E5"> fast enough</font><font color="#CCCCCC"> and we feel</font>

509
00:24:25,779 --> 00:24:32,379
engine<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> desktop and that did</font><font color="#CCCCCC"> not</font>

510
00:24:28,509 --> 00:24:34,690
get us across to the cloud scenario<font color="#E5E5E5"> nor</font>

511
00:24:32,379 --> 00:24:37,178
go to<font color="#E5E5E5"> Linux so that's why we get a</font>

512
00:24:34,690 --> 00:24:39,220
<font color="#CCCCCC">question here</font><font color="#E5E5E5"> right and then further</font>

513
00:24:37,179 --> 00:24:41,830
<font color="#E5E5E5">down trying to repair the questions</font>

514
00:24:39,220 --> 00:24:43,210
integration<font color="#E5E5E5"> we built chill jetting what</font>

515
00:24:41,830 --> 00:24:45,850
<font color="#CCCCCC">tear</font><font color="#E5E5E5"> jetting can really give you is</font>

516
00:24:43,210 --> 00:24:47,679
<font color="#E5E5E5">actually captured the freedom JIT never</font>

517
00:24:45,850 --> 00:24:52,570
have the freedom<font color="#E5E5E5"> just had to do the work</font>

518
00:24:47,679 --> 00:24:55,179
<font color="#E5E5E5">but had must use the most</font><font color="#CCCCCC"> me to use as</font>

519
00:24:52,570 --> 00:24:57,820
little<font color="#E5E5E5"> as possible resource but yet had</font>

520
00:24:55,179 --> 00:25:00,009
to<font color="#E5E5E5"> generate the best code for you and if</font>

521
00:24:57,820 --> 00:25:02,678
that that<font color="#E5E5E5"> is a she's</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> not going</font><font color="#CCCCCC"> to</font>

522
00:25:00,009 --> 00:25:05,100
<font color="#E5E5E5">jail together so with</font><font color="#CCCCCC"> tio</font><font color="#E5E5E5"> JIT acquire</font>

523
00:25:02,679 --> 00:25:07,629
opens up initiate more optimization and

524
00:25:05,100 --> 00:25:10,389
<font color="#E5E5E5">optimize only in</font><font color="#CCCCCC"> a code</font><font color="#E5E5E5"> that matters so</font>

525
00:25:07,629 --> 00:25:13,240
<font color="#CCCCCC">it's just</font><font color="#E5E5E5"> a starting of the journey</font><font color="#CCCCCC"> not</font>

526
00:25:10,389 --> 00:25:15,850
<font color="#E5E5E5">really the end and this</font><font color="#CCCCCC"> is a classroom</font>

527
00:25:13,240 --> 00:25:18,960
and<font color="#E5E5E5"> teaching</font><font color="#CCCCCC"> other things is</font><font color="#E5E5E5"> going to</font>

528
00:25:15,850 --> 00:25:18,959
ship in down across Rio

529
00:25:21,720 --> 00:25:30,519
<font color="#CCCCCC">so this go back</font><font color="#E5E5E5"> to Sergei so we talked</font><font color="#CCCCCC"> a</font>

530
00:25:28,029 --> 00:25:31,659
lot<font color="#CCCCCC"> about what</font><font color="#E5E5E5"> we done so far</font>

531
00:25:30,519 --> 00:25:34,629
let's spend a couple minutes talking

532
00:25:31,659 --> 00:25:38,919
about what<font color="#E5E5E5"> we'll do in the near future</font>

533
00:25:34,629 --> 00:25:41,879
<font color="#CCCCCC">so everyone knows</font><font color="#E5E5E5"> that docker containers</font>

534
00:25:38,919 --> 00:25:44,019
are stupid popular right now<font color="#E5E5E5"> in general</font>

535
00:25:41,879 --> 00:25:46,779
<font color="#E5E5E5">dotnet applications that</font><font color="#CCCCCC"> meant Corp</font>

536
00:25:44,019 --> 00:25:49,600
locations<font color="#E5E5E5"> run just fine in that in those</font>

537
00:25:46,779 --> 00:25:51,669
environments<font color="#E5E5E5"> but we did get a few</font>

538
00:25:49,600 --> 00:25:54,070
<font color="#E5E5E5">reports</font><font color="#CCCCCC"> from customers including the</font>

539
00:25:51,669 --> 00:25:55,030
presentation<font color="#E5E5E5"> from Steve a few hours ago</font>

540
00:25:54,070 --> 00:25:57,879
<font color="#E5E5E5">the</font>

541
00:25:55,030 --> 00:26:02,080
if a container is configured in with low

542
00:25:57,880 --> 00:26:04,480
memory then applications can<font color="#CCCCCC"> no</font><font color="#E5E5E5"> need</font>

543
00:26:02,080 --> 00:26:05,980
<font color="#CCCCCC">some issues so we are</font><font color="#E5E5E5"> working on</font>

544
00:26:04,480 --> 00:26:07,570
<font color="#E5E5E5">addressing that we are going</font><font color="#CCCCCC"> to change</font>

545
00:26:05,980 --> 00:26:09,159
<font color="#E5E5E5">some GC heuristic</font><font color="#CCCCCC"> the consume less</font>

546
00:26:07,570 --> 00:26:12,100
memory and<font color="#E5E5E5"> be going to add more</font>

547
00:26:09,159 --> 00:26:15,210
configuration options to configure a

548
00:26:12,100 --> 00:26:17,379
long time for those environment<font color="#E5E5E5"> if our</font>

549
00:26:15,210 --> 00:26:20,440
automatic<font color="#CCCCCC"> aroostook</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> don't Kiki</font>

550
00:26:17,380 --> 00:26:22,360
<font color="#CCCCCC">don't kick in</font><font color="#E5E5E5"> the other part that</font><font color="#CCCCCC"> is</font>

551
00:26:20,440 --> 00:26:25,000
important for docker containers is the

552
00:26:22,360 --> 00:26:27,129
size of the base images when we

553
00:26:25,000 --> 00:26:30,240
<font color="#CCCCCC">pre-compile assemblies which cross-gen</font>

554
00:26:27,130 --> 00:26:32,460
<font color="#E5E5E5">we store the pre</font><font color="#CCCCCC"> compile code in</font>

555
00:26:30,240 --> 00:26:36,039
assemblies themselves which means

556
00:26:32,460 --> 00:26:37,809
<font color="#E5E5E5">biggest size of those libraries</font><font color="#CCCCCC"> right so</font>

557
00:26:36,039 --> 00:26:40,960
what we want<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> four or</font><font color="#E5E5E5"> three all be</font>

558
00:26:37,809 --> 00:26:44,230
looking<font color="#E5E5E5"> at using partial temple ation to</font>

559
00:26:40,960 --> 00:26:47,080
reduce the size<font color="#E5E5E5"> of the core effects</font>

560
00:26:44,230 --> 00:26:52,470
frameworks that we shape and at the<font color="#E5E5E5"> same</font>

561
00:26:47,080 --> 00:26:55,840
time<font color="#E5E5E5"> not</font><font color="#CCCCCC"> to regress startup times right</font>

562
00:26:52,470 --> 00:26:59,409
<font color="#CCCCCC">then as you probably saw in</font><font color="#E5E5E5"> the open</font>

563
00:26:55,840 --> 00:27:02,408
<font color="#E5E5E5">court review blog post</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> gonna ship a</font>

564
00:26:59,409 --> 00:27:05,530
<font color="#E5E5E5">new UI stack</font><font color="#CCCCCC"> WinForms and it WPF</font><font color="#E5E5E5"> right</font>

565
00:27:02,409 --> 00:27:08,110
and UI<font color="#E5E5E5"> apps</font><font color="#CCCCCC"> what they do what do they</font>

566
00:27:05,530 --> 00:27:10,000
require<font color="#E5E5E5"> faster top quick response times</font>

567
00:27:08,110 --> 00:27:11,740
right so when you able<font color="#E5E5E5"> to spend</font><font color="#CCCCCC"> some</font>

568
00:27:10,000 --> 00:27:14,710
time<font color="#CCCCCC"> actually optimize those those</font>

569
00:27:11,740 --> 00:27:17,169
libraries and pre compiling them and

570
00:27:14,710 --> 00:27:19,990
last but not least we want to<font color="#CCCCCC"> ship and</font>

571
00:27:17,169 --> 00:27:21,940
make our<font color="#CCCCCC"> crushin compiler</font><font color="#E5E5E5"> publicly</font>

572
00:27:19,990 --> 00:27:27,340
available<font color="#E5E5E5"> so every developer can</font>

573
00:27:21,940 --> 00:27:32,320
optimize<font color="#CCCCCC"> the applications</font><font color="#E5E5E5"> I want to</font>

574
00:27:27,340 --> 00:27:35,320
quickly show<font color="#CCCCCC"> you like one minute</font><font color="#E5E5E5"> what</font>

575
00:27:32,320 --> 00:27:36,730
what is the right time to<font color="#CCCCCC"> use a key as</font>

576
00:27:35,320 --> 00:27:39,158
you<font color="#CCCCCC"> saw there's always a trade-off right</font>

577
00:27:36,730 --> 00:27:45,880
<font color="#CCCCCC">so how do you</font><font color="#E5E5E5"> know where the person</font><font color="#CCCCCC"> is</font>

578
00:27:39,159 --> 00:27:49,000
right for you in this case<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> perfu is</font>

579
00:27:45,880 --> 00:27:54,010
<font color="#E5E5E5">it performance</font><font color="#CCCCCC"> - is your friend there</font>

580
00:27:49,000 --> 00:27:56,919
are a lot of<font color="#CCCCCC"> tutorials and how on the</font>

581
00:27:54,010 --> 00:27:58,658
github and this<font color="#CCCCCC"> - is super</font><font color="#E5E5E5"> powerful it</font>

582
00:27:56,919 --> 00:28:00,520
can show you<font color="#E5E5E5"> everything your application</font>

583
00:27:58,659 --> 00:28:02,320
is doing<font color="#E5E5E5"> we're gonna use the new code</font>

584
00:28:00,520 --> 00:28:03,820
package<font color="#E5E5E5"> Explorer it's actually a real</font>

585
00:28:02,320 --> 00:28:06,870
<font color="#E5E5E5">world application that has been ported</font>

586
00:28:03,820 --> 00:28:08,918
to 300 and uses the brand new UI stack

587
00:28:06,870 --> 00:28:12,399
so what do<font color="#E5E5E5"> we do</font>

588
00:28:08,919 --> 00:28:14,710
<font color="#CCCCCC">you start perfu obviously we use collect</font>

589
00:28:12,399 --> 00:28:16,689
options to start data collection<font color="#E5E5E5"> we</font>

590
00:28:14,710 --> 00:28:18,970
<font color="#E5E5E5">launched our application once</font>

591
00:28:16,690 --> 00:28:22,179
application started we<font color="#CCCCCC"> start collection</font>

592
00:28:18,970 --> 00:28:25,659
<font color="#CCCCCC">and the perfu will generate an ETL file</font>

593
00:28:22,179 --> 00:28:27,010
<font color="#E5E5E5">as you can see but if</font><font color="#CCCCCC"> you can do lots of</font>

594
00:28:25,659 --> 00:28:31,539
stuff<font color="#CCCCCC"> generates of lots of different</font>

595
00:28:27,010 --> 00:28:33,730
<font color="#CCCCCC">data sampling profiling and memory</font><font color="#E5E5E5"> GC</font>

596
00:28:31,539 --> 00:28:36,610
information<font color="#E5E5E5"> but what we are interested</font>

597
00:28:33,730 --> 00:28:37,960
<font color="#E5E5E5">in right</font><font color="#CCCCCC"> now are just get stats</font><font color="#E5E5E5"> if you</font>

598
00:28:36,610 --> 00:28:40,510
click on<font color="#CCCCCC"> that it will</font><font color="#E5E5E5"> open a new window</font>

599
00:28:37,960 --> 00:28:42,850
<font color="#CCCCCC">and contains lots of information about</font>

600
00:28:40,510 --> 00:28:44,620
<font color="#E5E5E5">the every single method</font><font color="#CCCCCC"> that has been</font>

601
00:28:42,850 --> 00:28:47,379
<font color="#CCCCCC">treated</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I just</font><font color="#E5E5E5"> showed</font><font color="#CCCCCC"> you the</font>

602
00:28:44,620 --> 00:28:51,459
summary<font color="#E5E5E5"> so what you see is we</font><font color="#CCCCCC"> spent</font><font color="#E5E5E5"> two</font>

603
00:28:47,380 --> 00:28:54,519
seconds<font color="#E5E5E5"> or</font><font color="#CCCCCC"> 60% of CPU time getting the</font>

604
00:28:51,460 --> 00:28:56,919
code<font color="#E5E5E5"> not good</font><font color="#CCCCCC"> so again this numbers a</font>

605
00:28:54,519 --> 00:29:00,190
<font color="#E5E5E5">point in time when we ship the</font><font color="#CCCCCC"> 10303</font><font color="#E5E5E5"> oh</font>

606
00:28:56,919 --> 00:29:03,820
<font color="#CCCCCC">the final rule is bits these numbers are</font>

607
00:29:00,190 --> 00:29:06,610
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be much lower next slide</font><font color="#CCCCCC"> i pre</font>

608
00:29:03,820 --> 00:29:09,070
<font color="#CCCCCC">compile the app run it again you can see</font>

609
00:29:06,610 --> 00:29:10,840
the G time has disappeared pretty much

610
00:29:09,070 --> 00:29:11,350
<font color="#E5E5E5">more always like it used to be two</font>

611
00:29:10,840 --> 00:29:14,439
seconds

612
00:29:11,350 --> 00:29:16,418
now it's 200 300 milliseconds<font color="#E5E5E5"> start top</font>

613
00:29:14,440 --> 00:29:29,730
of the application<font color="#CCCCCC"> is about one second</font>

614
00:29:16,419 --> 00:29:29,730
right so that's<font color="#E5E5E5"> it how are you thank you</font>

615
00:29:35,149 --> 00:29:43,889
about the jobs<font color="#E5E5E5"> yes right this wise are</font>

616
00:29:42,149 --> 00:29:46,109
and then talk<font color="#E5E5E5"> for guys if you have any</font>

617
00:29:43,889 --> 00:29:49,129
questions please send emails<font color="#E5E5E5"> talk to us</font>

618
00:29:46,109 --> 00:29:49,129
<font color="#E5E5E5">thank you</font><font color="#CCCCCC"> very much</font>

619
00:29:51,450 --> 00:29:56,289
[Applause]

