1
00:00:04,590 --> 00:00:17,369
<font color="#E5E5E5">oh</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so hello everyone</font><font color="#CCCCCC"> let me</font><font color="#E5E5E5"> welcome</font>

2
00:00:15,809 --> 00:00:19,890
you<font color="#E5E5E5"> to post them and to our</font>

3
00:00:17,369 --> 00:00:22,830
virtualization<font color="#E5E5E5"> and it reflected the</font>

4
00:00:19,890 --> 00:00:24,920
<font color="#E5E5E5">server's dev room and I'm the first</font>

5
00:00:22,830 --> 00:00:27,089
<font color="#CCCCCC">speaker of</font><font color="#E5E5E5"> the day and in my</font>

6
00:00:24,920 --> 00:00:29,570
presentation I'm gonna talk<font color="#CCCCCC"> about how</font>

7
00:00:27,090 --> 00:00:34,470
<font color="#E5E5E5">you can run Windows guests on</font><font color="#CCCCCC"> KVM</font>

8
00:00:29,570 --> 00:00:36,600
efficiently so in your infrastructure

9
00:00:34,470 --> 00:00:39,180
<font color="#E5E5E5">you are running virtual machines and</font>

10
00:00:36,600 --> 00:00:41,700
some<font color="#E5E5E5"> of these virtual machines</font><font color="#CCCCCC"> are Linux</font>

11
00:00:39,180 --> 00:00:42,450
VMs<font color="#E5E5E5"> some of them are probably</font><font color="#CCCCCC"> Windows</font>

12
00:00:41,700 --> 00:00:45,899
VMs

13
00:00:42,450 --> 00:00:47,969
so does make any difference from as a

14
00:00:45,899 --> 00:00:49,800
virtualization to<font color="#E5E5E5"> stack point of view</font>

15
00:00:47,969 --> 00:00:52,800
like which operating system<font color="#E5E5E5"> you are</font>

16
00:00:49,800 --> 00:00:55,769
running<font color="#E5E5E5"> in your</font><font color="#CCCCCC"> guest and dancer well it</font>

17
00:00:52,800 --> 00:00:58,260
depends so<font color="#CCCCCC"> in theory it doesn't because</font>

18
00:00:55,770 --> 00:01:00,870
with ki-moon and KB and<font color="#E5E5E5"> we are actually</font>

19
00:00:58,260 --> 00:01:03,180
<font color="#E5E5E5">trying to emulate</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> existing</font><font color="#CCCCCC"> physical</font>

20
00:01:00,870 --> 00:01:05,940
<font color="#E5E5E5">hardware by building</font><font color="#CCCCCC"> the virtual</font><font color="#E5E5E5"> machine</font>

21
00:01:03,180 --> 00:01:08,160
right<font color="#E5E5E5"> but then</font><font color="#CCCCCC"> our if you boot your</font>

22
00:01:05,940 --> 00:01:09,899
<font color="#CCCCCC">innards</font><font color="#E5E5E5"> get on</font><font color="#CCCCCC"> k vm and take a look in</font>

23
00:01:08,160 --> 00:01:13,289
the log you will see something<font color="#E5E5E5"> like this</font>

24
00:01:09,899 --> 00:01:17,970
right and you will<font color="#E5E5E5"> realize that your</font>

25
00:01:13,289 --> 00:01:19,619
guest knows pretty like much everything

26
00:01:17,970 --> 00:01:22,259
about<font color="#E5E5E5"> the fact that it's running</font>

27
00:01:19,619 --> 00:01:24,390
<font color="#E5E5E5">virtualized</font><font color="#CCCCCC"> it knows that it's</font><font color="#E5E5E5"> running</font>

28
00:01:22,259 --> 00:01:29,340
on<font color="#E5E5E5"> k vm and it's actually using</font><font color="#CCCCCC"> some</font>

29
00:01:24,390 --> 00:01:32,310
features<font color="#E5E5E5"> so why do we do that well the</font>

30
00:01:29,340 --> 00:01:34,920
thing is<font color="#E5E5E5"> that when we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> trying to</font>

31
00:01:32,310 --> 00:01:37,679
emulate physical<font color="#CCCCCC"> Hardware in</font><font color="#E5E5E5"> software</font>

32
00:01:34,920 --> 00:01:40,860
<font color="#E5E5E5">that some interfaces were not</font><font color="#CCCCCC"> designed</font>

33
00:01:37,679 --> 00:01:44,190
for<font color="#E5E5E5"> that and it can actually be slow in</font>

34
00:01:40,860 --> 00:01:46,110
some cases<font color="#E5E5E5"> so how do we solve</font><font color="#CCCCCC"> these</font>

35
00:01:44,190 --> 00:01:48,390
problems usually<font color="#E5E5E5"> well if the hardware</font>

36
00:01:46,110 --> 00:01:50,610
<font color="#E5E5E5">interface we need to emulate is slow and</font>

37
00:01:48,390 --> 00:01:53,000
we cannot make<font color="#CCCCCC"> it fast we come up</font><font color="#E5E5E5"> with</font>

38
00:01:50,610 --> 00:01:54,239
<font color="#CCCCCC">our own solution and we invent</font><font color="#E5E5E5"> so called</font>

39
00:01:53,000 --> 00:01:57,360
<font color="#E5E5E5">paravirtualized</font>

40
00:01:54,239 --> 00:02:00,239
interface which is<font color="#E5E5E5"> fast and which is</font>

41
00:01:57,360 --> 00:02:03,330
software friendly<font color="#E5E5E5"> right but then when we</font>

42
00:02:00,239 --> 00:02:05,489
<font color="#E5E5E5">have our</font><font color="#CCCCCC"> own</font><font color="#E5E5E5"> interface we</font><font color="#CCCCCC"> have to put</font>

43
00:02:03,330 --> 00:02:07,770
support for<font color="#E5E5E5"> this interface in the guest</font>

44
00:02:05,489 --> 00:02:10,470
operating<font color="#CCCCCC"> system right</font><font color="#E5E5E5"> because it does</font>

45
00:02:07,770 --> 00:02:13,260
not<font color="#E5E5E5"> anything about it but the question</font>

46
00:02:10,470 --> 00:02:15,510
is what do<font color="#E5E5E5"> we do about proprietary</font>

47
00:02:13,260 --> 00:02:17,489
operating<font color="#E5E5E5"> systems like Windows</font><font color="#CCCCCC"> how do we</font>

48
00:02:15,510 --> 00:02:20,519
put these<font color="#E5E5E5"> interfaces there right</font>

49
00:02:17,489 --> 00:02:23,219
we don't have the source code<font color="#CCCCCC"> and</font><font color="#E5E5E5"> well</font>

50
00:02:20,519 --> 00:02:24,989
we can probably<font color="#CCCCCC"> write try writing</font>

51
00:02:23,219 --> 00:02:27,680
drivers and that's<font color="#E5E5E5"> actually what we do</font>

52
00:02:24,989 --> 00:02:31,680
for<font color="#CCCCCC"> example with rear tire devices right</font>

53
00:02:27,680 --> 00:02:33,689
but the<font color="#E5E5E5"> thing is that not everything is</font>

54
00:02:31,680 --> 00:02:36,090
a device from<font color="#E5E5E5"> like</font><font color="#CCCCCC"> windows point of view</font>

55
00:02:33,689 --> 00:02:38,670
and somewhere it core features with like

56
00:02:36,090 --> 00:02:41,250
interrupt handling or<font color="#E5E5E5"> clock</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> are</font>

57
00:02:38,670 --> 00:02:43,469
actually not<font color="#E5E5E5"> device is not driver</font><font color="#CCCCCC"> there</font>

58
00:02:41,250 --> 00:02:46,739
in the core of<font color="#E5E5E5"> the operating system so</font>

59
00:02:43,469 --> 00:02:48,358
you may have hard times<font color="#CCCCCC"> right in this</font>

60
00:02:46,739 --> 00:02:51,120
driver for your proprietary<font color="#CCCCCC"> operating</font>

61
00:02:48,359 --> 00:02:52,560
systems and moreover<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are multiple</font>

62
00:02:51,120 --> 00:02:54,299
<font color="#E5E5E5">different</font><font color="#CCCCCC"> Windows versions and</font><font color="#E5E5E5"> you</font>

63
00:02:52,560 --> 00:02:57,709
<font color="#E5E5E5">basically have to check that this</font>

64
00:02:54,299 --> 00:03:01,169
<font color="#E5E5E5">solution works for every of these so</font>

65
00:02:57,709 --> 00:03:03,469
what else<font color="#E5E5E5"> can we do well we know that</font>

66
00:03:01,169 --> 00:03:06,120
<font color="#CCCCCC">KBM is not the only hypervisor out there</font>

67
00:03:03,469 --> 00:03:08,489
there are<font color="#E5E5E5"> other like proprietary</font>

68
00:03:06,120 --> 00:03:11,280
hypervisors and the thing is that<font color="#CCCCCC"> these</font>

69
00:03:08,489 --> 00:03:14,280
hypervisors have to solve the exact same

70
00:03:11,280 --> 00:03:16,139
issues because well for them this

71
00:03:14,280 --> 00:03:18,480
<font color="#CCCCCC">hardware interfaces are also</font><font color="#E5E5E5"> slow and</font>

72
00:03:16,139 --> 00:03:21,359
they also have to come up<font color="#CCCCCC"> with their own</font>

73
00:03:18,480 --> 00:03:25,858
<font color="#E5E5E5">interface so in Windows world this</font>

74
00:03:21,359 --> 00:03:29,400
hypervisor<font color="#E5E5E5"> is called hyper-v and we do</font>

75
00:03:25,859 --> 00:03:33,209
emulate hyper-v in both like<font color="#CCCCCC"> KVM and</font>

76
00:03:29,400 --> 00:03:37,650
<font color="#E5E5E5">ki-moon and this that are basically like</font>

77
00:03:33,209 --> 00:03:40,560
<font color="#E5E5E5">two different types of emulation there</font>

78
00:03:37,650 --> 00:03:42,180
we emulate<font color="#E5E5E5"> these core</font><font color="#CCCCCC"> features which in</font>

79
00:03:40,560 --> 00:03:43,889
hyper-v world<font color="#E5E5E5"> are</font><font color="#CCCCCC"> --court</font>

80
00:03:42,180 --> 00:03:46,109
<font color="#CCCCCC">Enlightenment's and that's why</font><font color="#E5E5E5"> my talk</font>

81
00:03:43,889 --> 00:03:48,659
is called<font color="#CCCCCC"> enlightening</font><font color="#E5E5E5"> hyper-v I'm</font><font color="#CCCCCC"> going</font>

82
00:03:46,109 --> 00:03:52,889
<font color="#CCCCCC">to talk about the first</font><font color="#E5E5E5"> part device</font>

83
00:03:48,659 --> 00:03:54,870
drivers is something which would make it

84
00:03:52,889 --> 00:03:57,239
possible<font color="#E5E5E5"> to replace for example</font><font color="#CCCCCC"> ver tayo</font>

85
00:03:54,870 --> 00:03:59,669
<font color="#CCCCCC">so if we write V ambass device drivers</font>

86
00:03:57,239 --> 00:04:02,099
<font color="#E5E5E5">then we won't</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> volatile drivers for</font>

87
00:03:59,669 --> 00:04:04,109
<font color="#CCCCCC">windows and</font><font color="#E5E5E5"> the research effort and</font>

88
00:04:02,099 --> 00:04:06,090
<font color="#E5E5E5">worth of the companies currently working</font>

89
00:04:04,109 --> 00:04:08,250
on it but it's<font color="#E5E5E5"> not currently upstream</font>

90
00:04:06,090 --> 00:04:14,879
and I'm not going to talk much<font color="#CCCCCC"> about it</font>

91
00:04:08,250 --> 00:04:18,418
in my<font color="#E5E5E5"> presentation so hyper-v features</font>

92
00:04:14,879 --> 00:04:20,759
which we<font color="#CCCCCC"> emulate where can you read some</font>

93
00:04:18,418 --> 00:04:25,740
documentation<font color="#E5E5E5"> about that there is no in</font>

94
00:04:20,759 --> 00:04:29,319
<font color="#E5E5E5">kimu and KVM for you as a user and in</font>

95
00:04:25,740 --> 00:04:33,149
libvirt<font color="#E5E5E5"> you get this that's basically it</font>

96
00:04:29,319 --> 00:04:36,369
probably not<font color="#E5E5E5"> much you may or may</font><font color="#CCCCCC"> not</font>

97
00:04:33,149 --> 00:04:40,869
understand what these features<font color="#E5E5E5"> are and</font>

98
00:04:36,369 --> 00:04:42,729
if you want to know more you<font color="#E5E5E5"> can go and</font>

99
00:04:40,869 --> 00:04:44,979
<font color="#E5E5E5">basically read the specification</font>

100
00:04:42,729 --> 00:04:47,438
<font color="#CCCCCC">hyper-real folks were generous enough</font><font color="#E5E5E5"> to</font>

101
00:04:44,979 --> 00:04:50,860
<font color="#CCCCCC">publish their spec it there on</font>

102
00:04:47,439 --> 00:04:55,749
<font color="#CCCCCC">Microsoft's website or you</font><font color="#E5E5E5"> can listen to</font>

103
00:04:50,860 --> 00:05:01,059
me now<font color="#E5E5E5"> so what features do we have in</font>

104
00:04:55,749 --> 00:05:03,009
<font color="#CCCCCC">KVM and what are they needed for so I'll</font>

105
00:05:01,059 --> 00:05:04,779
be showing you<font color="#E5E5E5"> both like human syntax</font>

106
00:05:03,009 --> 00:05:06,669
and<font color="#CCCCCC"> liberal syntax how you can enable</font>

107
00:05:04,779 --> 00:05:09,819
the feature<font color="#E5E5E5"> and I will tell you</font><font color="#CCCCCC"> a few</font>

108
00:05:06,669 --> 00:05:11,438
<font color="#CCCCCC">words what</font><font color="#E5E5E5"> this feature does so let's</font>

109
00:05:09,819 --> 00:05:13,899
<font color="#E5E5E5">start with this one</font><font color="#CCCCCC"> it's called like</font>

110
00:05:11,439 --> 00:05:16,659
<font color="#E5E5E5">relaxed timing it's enabled by like</font><font color="#CCCCCC"> HP</font>

111
00:05:13,899 --> 00:05:19,020
relaxed in chemo and like these features

112
00:05:16,659 --> 00:05:22,149
hyper<font color="#E5E5E5"> resumption in live bird and mostly</font>

113
00:05:19,020 --> 00:05:24,580
these<font color="#CCCCCC"> hyper V Enlightenment's</font><font color="#E5E5E5"> in Liberty</font>

114
00:05:22,149 --> 00:05:26,110
<font color="#E5E5E5">I enabled like that in features but</font>

115
00:05:24,580 --> 00:05:30,219
there<font color="#E5E5E5"> are some notable exceptions</font><font color="#CCCCCC"> I will</font>

116
00:05:26,110 --> 00:05:32,169
show you them and this<font color="#CCCCCC"> feature basically</font>

117
00:05:30,219 --> 00:05:34,330
<font color="#E5E5E5">tells your</font><font color="#CCCCCC"> windows that it's running</font>

118
00:05:32,169 --> 00:05:38,498
virtualized<font color="#CCCCCC"> so it should disable all</font>

119
00:05:34,330 --> 00:05:41,859
card<font color="#E5E5E5"> watchdogs on different events</font>

120
00:05:38,499 --> 00:05:42,999
because different<font color="#E5E5E5"> operations can take</font>

121
00:05:41,860 --> 00:05:45,339
different time when you're running

122
00:05:42,999 --> 00:05:47,259
virtualized<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so if you put some</font>

123
00:05:45,339 --> 00:05:48,969
hard watchdog there your windows can

124
00:05:47,259 --> 00:05:51,279
crash and actually more than<font color="#E5E5E5"> Windows</font>

125
00:05:48,969 --> 00:05:54,039
versions they don't require these they

126
00:05:51,279 --> 00:05:56,499
will detect<font color="#E5E5E5"> a hypervisor CPU flag and</font>

127
00:05:54,039 --> 00:05:58,149
enable<font color="#CCCCCC"> this automatically</font><font color="#E5E5E5"> but for all</font>

128
00:05:56,499 --> 00:06:03,969
the<font color="#CCCCCC"> Windows versions it makes sense to</font>

129
00:05:58,149 --> 00:06:09,309
enable it<font color="#CCCCCC"> Barbarella's I paravirtualized</font>

130
00:06:03,969 --> 00:06:11,469
<font color="#E5E5E5">epic so it's enabled by HP epic and it</font>

131
00:06:09,309 --> 00:06:16,229
basically<font color="#E5E5E5"> provides a third page for each</font>

132
00:06:11,469 --> 00:06:21,998
CPU<font color="#E5E5E5"> to assist dealing with a peak and</font>

133
00:06:16,229 --> 00:06:24,758
the notable feature here is per

134
00:06:21,999 --> 00:06:27,490
virtualized and<font color="#E5E5E5"> of interrupt</font><font color="#CCCCCC"> so here is</font>

135
00:06:24,759 --> 00:06:29,559
a<font color="#E5E5E5"> good</font><font color="#CCCCCC"> example when like emulating</font>

136
00:06:27,490 --> 00:06:31,659
<font color="#CCCCCC">Hardware</font><font color="#E5E5E5"> interface is slow when you</font>

137
00:06:29,559 --> 00:06:33,729
haven't<font color="#CCCCCC"> interrupts</font><font color="#E5E5E5"> right and like a</font>

138
00:06:31,659 --> 00:06:36,248
level triggered<font color="#CCCCCC"> interrupts are pending</font>

139
00:06:33,729 --> 00:06:38,860
your hypervisor will stop your<font color="#CCCCCC"> guest</font>

140
00:06:36,249 --> 00:06:40,569
<font color="#E5E5E5">inject interrupt there and resume your</font>

141
00:06:38,860 --> 00:06:43,090
<font color="#E5E5E5">guests your guests will notice the</font>

142
00:06:40,569 --> 00:06:45,130
interrupt<font color="#CCCCCC"> and probably will start doing</font>

143
00:06:43,090 --> 00:06:47,229
<font color="#CCCCCC">and about it like launch like an</font>

144
00:06:45,130 --> 00:06:49,570
interrupt<font color="#CCCCCC"> service</font><font color="#E5E5E5"> routine but when it's</font>

145
00:06:47,230 --> 00:06:51,190
done it needs to<font color="#E5E5E5"> somehow signal the fact</font>

146
00:06:49,570 --> 00:06:53,139
<font color="#CCCCCC">that it's done with the interrupt</font><font color="#E5E5E5"> and</font>

147
00:06:51,190 --> 00:06:56,590
it's ready<font color="#E5E5E5"> to receive the</font><font color="#CCCCCC"> next one</font><font color="#E5E5E5"> right</font>

148
00:06:53,139 --> 00:06:58,990
<font color="#E5E5E5">and in hardware like in physical epic</font>

149
00:06:56,590 --> 00:07:01,989
you basically<font color="#E5E5E5"> write to a register</font><font color="#CCCCCC"> and</font>

150
00:06:58,990 --> 00:07:03,880
<font color="#E5E5E5">it's separation is like</font><font color="#CCCCCC"> put you fast</font>

151
00:07:01,990 --> 00:07:05,800
right<font color="#CCCCCC"> so you write to the register it</font>

152
00:07:03,880 --> 00:07:07,870
receives a bit and then<font color="#CCCCCC"> you can receive</font>

153
00:07:05,800 --> 00:07:10,360
<font color="#E5E5E5">a next interrupt but if you do it under</font>

154
00:07:07,870 --> 00:07:12,010
the hypervisor<font color="#CCCCCC"> you will get a VM exit</font>

155
00:07:10,360 --> 00:07:13,449
right so your guest will<font color="#CCCCCC"> be stopped you</font>

156
00:07:12,010 --> 00:07:17,469
will drop in the hypervisor and

157
00:07:13,449 --> 00:07:19,750
hypervisor rule<font color="#E5E5E5"> basically mark that the</font>

158
00:07:17,470 --> 00:07:22,410
<font color="#CCCCCC">interrupts is not painting anymore</font><font color="#E5E5E5"> and</font>

159
00:07:19,750 --> 00:07:27,880
resume where<font color="#CCCCCC"> guest it takes time</font><font color="#E5E5E5"> so</font>

160
00:07:22,410 --> 00:07:30,310
<font color="#CCCCCC">so-called pv end of interrupts was</font>

161
00:07:27,880 --> 00:07:32,950
invented<font color="#E5E5E5"> it's basically like the guest</font>

162
00:07:30,310 --> 00:07:35,200
is just clearing<font color="#E5E5E5"> one bit in the third</font>

163
00:07:32,950 --> 00:07:38,080
page and the<font color="#E5E5E5"> hypervisor will</font>

164
00:07:35,200 --> 00:07:39,610
periodically look at this bit and when

165
00:07:38,080 --> 00:07:41,500
it's not<font color="#CCCCCC"> pending anymore</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are ready to</font>

166
00:07:39,610 --> 00:07:45,180
inject next<font color="#E5E5E5"> interrupt</font><font color="#CCCCCC"> we don't need to</font>

167
00:07:41,500 --> 00:07:47,680
do synchronously most of the time and

168
00:07:45,180 --> 00:07:50,800
there is<font color="#E5E5E5"> a side effect that this feature</font>

169
00:07:47,680 --> 00:07:52,120
is also required<font color="#E5E5E5"> for enlightened</font><font color="#CCCCCC"> vm CS</font>

170
00:07:50,800 --> 00:07:57,070
feature<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> tell you about this</font>

171
00:07:52,120 --> 00:07:59,229
feature later<font color="#E5E5E5"> paravirtualized spin locks</font>

172
00:07:57,070 --> 00:08:02,800
<font color="#E5E5E5">labeled by</font><font color="#CCCCCC"> SV spin locks and you can</font>

173
00:07:59,229 --> 00:08:05,530
take<font color="#E5E5E5"> tell it like</font><font color="#CCCCCC"> T mu how many attempts</font>

174
00:08:02,800 --> 00:08:08,979
to do before like giving<font color="#E5E5E5"> up the thing is</font>

175
00:08:05,530 --> 00:08:11,320
like there is<font color="#CCCCCC"> the core concept of a spin</font>

176
00:08:08,979 --> 00:08:13,360
lock right<font color="#E5E5E5"> when</font><font color="#CCCCCC"> two CPUs are trying to</font>

177
00:08:11,320 --> 00:08:15,250
get<font color="#E5E5E5"> the same resource they may do this</font>

178
00:08:13,360 --> 00:08:16,690
like cheapest possible lock units

179
00:08:15,250 --> 00:08:19,300
basically<font color="#E5E5E5"> they're checking a variable in</font>

180
00:08:16,690 --> 00:08:21,039
<font color="#CCCCCC">memory and seeing if somebody else</font><font color="#E5E5E5"> is</font>

181
00:08:19,300 --> 00:08:23,229
<font color="#E5E5E5">doing something with the shared resource</font>

182
00:08:21,039 --> 00:08:24,820
<font color="#E5E5E5">and you said like but if you want</font><font color="#CCCCCC"> their</font>

183
00:08:23,229 --> 00:08:26,050
you do something you reset it try the

184
00:08:24,820 --> 00:08:28,690
other CPU<font color="#E5E5E5"> looks at it</font>

185
00:08:26,050 --> 00:08:30,430
oh it's busy by someone else is doing

186
00:08:28,690 --> 00:08:32,409
<font color="#CCCCCC">the job</font><font color="#E5E5E5"> and it just just spins it</font>

187
00:08:30,430 --> 00:08:35,830
doesn't<font color="#E5E5E5"> Janus it constantly check the</font>

188
00:08:32,409 --> 00:08:38,559
state<font color="#E5E5E5"> of this indicator to see if it can</font>

189
00:08:35,830 --> 00:08:40,570
do<font color="#E5E5E5"> something in virtualized world</font><font color="#CCCCCC"> it can</font>

190
00:08:38,559 --> 00:08:42,369
take significantly longer because your

191
00:08:40,570 --> 00:08:45,010
virtual CPU which actually took the

192
00:08:42,370 --> 00:08:46,870
<font color="#CCCCCC">resuit resource may not be</font><font color="#E5E5E5"> running at</font>

193
00:08:45,010 --> 00:08:49,510
this moment<font color="#E5E5E5"> right it can happen that it</font>

194
00:08:46,870 --> 00:08:51,190
took the resource<font color="#E5E5E5"> and then it was out of</font>

195
00:08:49,510 --> 00:08:53,530
<font color="#E5E5E5">loaded right and some other guest is</font>

196
00:08:51,190 --> 00:08:56,050
<font color="#E5E5E5">running there so your CPU which is</font>

197
00:08:53,530 --> 00:08:56,889
trying<font color="#E5E5E5"> to get the look will have to wait</font>

198
00:08:56,050 --> 00:09:00,128
for<font color="#E5E5E5"> quite</font>

199
00:08:56,889 --> 00:09:03,249
<font color="#CCCCCC">sometimes</font><font color="#E5E5E5"> instead we can basically give</font>

200
00:09:00,129 --> 00:09:04,989
up and give a chance<font color="#E5E5E5"> for other recipes</font>

201
00:09:03,249 --> 00:09:08,439
or other guests on the same<font color="#E5E5E5"> physical</font>

202
00:09:04,989 --> 00:09:10,660
CPUs to<font color="#CCCCCC"> run right</font><font color="#E5E5E5"> and that's what the</font>

203
00:09:08,439 --> 00:09:13,660
feature does we also have a counterpart

204
00:09:10,660 --> 00:09:16,059
<font color="#E5E5E5">in</font><font color="#CCCCCC"> KVM but windows cannot</font><font color="#E5E5E5"> use this</font><font color="#CCCCCC"> KVM</font>

205
00:09:13,660 --> 00:09:20,108
feature so<font color="#CCCCCC"> we can enable</font><font color="#E5E5E5"> this hyper we</font>

206
00:09:16,059 --> 00:09:22,118
feature next one is a simple<font color="#CCCCCC"> one</font><font color="#E5E5E5"> it's</font>

207
00:09:20,109 --> 00:09:24,999
like<font color="#E5E5E5"> whipping</font><font color="#CCCCCC"> a virtual processor index</font>

208
00:09:22,119 --> 00:09:27,910
<font color="#E5E5E5">it basically tells creates a virtual</font>

209
00:09:24,999 --> 00:09:30,189
model specific register where each CPU

210
00:09:27,910 --> 00:09:34,149
<font color="#E5E5E5">can read its own number and in chemo</font>

211
00:09:30,189 --> 00:09:35,858
<font color="#E5E5E5">they almost always match like the order</font>

212
00:09:34,149 --> 00:09:37,779
in<font color="#CCCCCC"> which they were created</font><font color="#E5E5E5"> CPU one will</font>

213
00:09:35,859 --> 00:09:39,489
get once if<font color="#CCCCCC"> you two will</font><font color="#E5E5E5"> get two but the</font>

214
00:09:37,779 --> 00:09:41,949
thing is<font color="#E5E5E5"> that we need this model</font>

215
00:09:39,489 --> 00:09:45,279
specific register for some features I'm

216
00:09:41,949 --> 00:09:47,829
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> tell you about and</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> if it</font>

217
00:09:45,279 --> 00:09:49,929
won't see<font color="#E5E5E5"> this feature it won't use the</font>

218
00:09:47,829 --> 00:09:52,809
spiritual be flush and<font color="#CCCCCC"> P</font><font color="#E5E5E5"> VIP is for</font>

219
00:09:49,929 --> 00:09:54,879
example<font color="#CCCCCC"> because in</font><font color="#E5E5E5"> this hyper calls CPUs</font>

220
00:09:52,809 --> 00:10:00,879
are actually specified<font color="#E5E5E5"> and this VP index</font>

221
00:09:54,879 --> 00:10:03,489
terms runtime information<font color="#CCCCCC"> right so you</font>

222
00:10:00,879 --> 00:10:05,649
have a virtual CPU<font color="#E5E5E5"> and sometimes it runs</font>

223
00:10:03,489 --> 00:10:07,929
<font color="#E5E5E5">sometimes it doesn't and some other</font>

224
00:10:05,649 --> 00:10:10,629
virtual CPU or<font color="#CCCCCC"> the host is doing</font>

225
00:10:07,929 --> 00:10:12,249
something on<font color="#E5E5E5"> this</font><font color="#CCCCCC"> physical CPU and if</font>

226
00:10:10,629 --> 00:10:15,309
you want to do some like<font color="#E5E5E5"> fair scheduling</font>

227
00:10:12,249 --> 00:10:19,149
for example you may<font color="#E5E5E5"> want to give your</font>

228
00:10:15,309 --> 00:10:21,549
tasks same<font color="#E5E5E5"> slices of time to run but the</font>

229
00:10:19,149 --> 00:10:23,919
thing is<font color="#E5E5E5"> you think</font><font color="#CCCCCC"> that your task is</font>

230
00:10:21,549 --> 00:10:27,429
running<font color="#E5E5E5"> but actually it's not</font><font color="#CCCCCC"> and</font>

231
00:10:23,919 --> 00:10:28,509
something<font color="#CCCCCC"> else is running there</font><font color="#E5E5E5"> and how</font>

232
00:10:27,429 --> 00:10:31,029
<font color="#E5E5E5">can you know that</font><font color="#CCCCCC"> right</font>

233
00:10:28,509 --> 00:10:33,610
so<font color="#CCCCCC"> there's the protocol basically again</font>

234
00:10:31,029 --> 00:10:36,129
like a shared like a register<font color="#CCCCCC"> model</font>

235
00:10:33,610 --> 00:10:39,759
specific register where<font color="#E5E5E5"> Windows can read</font>

236
00:10:36,129 --> 00:10:41,799
the<font color="#E5E5E5"> information for how long the</font><font color="#CCCCCC"> vcp was</font>

237
00:10:39,759 --> 00:10:44,169
running and for how long<font color="#CCCCCC"> something else</font>

238
00:10:41,799 --> 00:10:46,419
was running there<font color="#E5E5E5"> but the thing is how</font>

239
00:10:44,169 --> 00:10:47,949
it's done<font color="#E5E5E5"> in hyper-v it's done through a</font>

240
00:10:46,419 --> 00:10:50,470
model specific register<font color="#E5E5E5"> it's not a</font>

241
00:10:47,949 --> 00:10:52,389
shared memory page<font color="#E5E5E5"> so reading it will</font>

242
00:10:50,470 --> 00:10:54,489
trap in the<font color="#E5E5E5"> hypervisor so it's kind of</font>

243
00:10:52,389 --> 00:10:57,249
slow and<font color="#E5E5E5"> Windows as far as I know</font>

244
00:10:54,489 --> 00:10:58,899
doesn't do that for<font color="#E5E5E5"> scheduling by</font>

245
00:10:57,249 --> 00:11:01,449
default<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it would be really slow</font>

246
00:10:58,899 --> 00:11:03,459
to switch between tasks<font color="#E5E5E5"> and I'm not</font>

247
00:11:01,449 --> 00:11:07,859
exactly sure when it actually does<font color="#CCCCCC"> use</font>

248
00:11:03,459 --> 00:11:10,270
the<font color="#E5E5E5"> feature but maybe sometimes it does</font>

249
00:11:07,860 --> 00:11:13,000
<font color="#CCCCCC">Kersh information that's quite in</font>

250
00:11:10,270 --> 00:11:15,370
<font color="#E5E5E5">Tristan so your windows crashes</font>

251
00:11:13,000 --> 00:11:17,050
<font color="#E5E5E5">everybody knows that right so you will</font>

252
00:11:15,370 --> 00:11:20,770
<font color="#E5E5E5">get a blue</font><font color="#CCCCCC"> screen of death but the thing</font>

253
00:11:17,050 --> 00:11:22,420
is<font color="#E5E5E5"> that not all</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> them are the same</font>

254
00:11:20,770 --> 00:11:24,340
right<font color="#CCCCCC"> so you may want to</font><font color="#E5E5E5"> know especially</font>

255
00:11:22,420 --> 00:11:27,189
<font color="#CCCCCC">if you are</font><font color="#E5E5E5"> running VMs on a larger scale</font>

256
00:11:24,340 --> 00:11:29,560
<font color="#CCCCCC">you may want to</font><font color="#E5E5E5"> know like if you're</font>

257
00:11:27,190 --> 00:11:31,000
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> seen saying</font><font color="#E5E5E5"> crashes on like</font>

258
00:11:29,560 --> 00:11:32,589
different<font color="#CCCCCC"> hosts or these are like</font>

259
00:11:31,000 --> 00:11:34,840
<font color="#CCCCCC">different crashes</font><font color="#E5E5E5"> or like how many</font>

260
00:11:32,590 --> 00:11:37,030
<font color="#CCCCCC">different</font><font color="#E5E5E5"> crashes do</font><font color="#CCCCCC"> you have so</font><font color="#E5E5E5"> you can</font>

261
00:11:34,840 --> 00:11:40,740
<font color="#E5E5E5">analyze them</font><font color="#CCCCCC"> and windows can provide</font>

262
00:11:37,030 --> 00:11:43,420
some information<font color="#E5E5E5"> basically like</font><font color="#CCCCCC"> five</font>

263
00:11:40,740 --> 00:11:46,870
registers or<font color="#E5E5E5"> I don't know yeah I</font><font color="#CCCCCC"> think</font>

264
00:11:43,420 --> 00:11:48,610
it's five<font color="#CCCCCC"> on crash and you can get this</font>

265
00:11:46,870 --> 00:11:50,590
information<font color="#CCCCCC"> if you enable</font><font color="#E5E5E5"> the feature</font>

266
00:11:48,610 --> 00:11:52,600
then in<font color="#CCCCCC"> labert log if you are</font><font color="#E5E5E5"> running</font>

267
00:11:50,590 --> 00:11:54,220
<font color="#E5E5E5">through live birth in</font><font color="#CCCCCC"> chemo you can get</font>

268
00:11:52,600 --> 00:11:56,640
this information<font color="#CCCCCC"> too but I think you</font>

269
00:11:54,220 --> 00:11:59,740
need to<font color="#E5E5E5"> do like a</font><font color="#CCCCCC"> dream peak</font><font color="#E5E5E5"> common so</font>

270
00:11:56,640 --> 00:12:02,050
not easy<font color="#E5E5E5"> to get to this information</font><font color="#CCCCCC"> from</font>

271
00:11:59,740 --> 00:12:05,170
<font color="#CCCCCC">libvirt you will get it by default in</font>

272
00:12:02,050 --> 00:12:07,030
<font color="#E5E5E5">the log I think</font><font color="#CCCCCC"> Windows will tell you</font>

273
00:12:05,170 --> 00:12:09,670
<font color="#E5E5E5">basically where it crashed and some</font>

274
00:12:07,030 --> 00:12:13,060
<font color="#E5E5E5">parameters like registers so by</font>

275
00:12:09,670 --> 00:12:14,770
comparing these in the logs<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see</font>

276
00:12:13,060 --> 00:12:16,810
like if you are seeing same crashes or

277
00:12:14,770 --> 00:12:21,819
different crashes it can come handy in

278
00:12:16,810 --> 00:12:23,500
<font color="#E5E5E5">some situations clock source it's</font>

279
00:12:21,820 --> 00:12:28,240
actually one of the<font color="#E5E5E5"> most important</font>

280
00:12:23,500 --> 00:12:32,740
entitlements<font color="#E5E5E5"> and the thing is</font><font color="#CCCCCC"> that in</font>

281
00:12:28,240 --> 00:12:36,760
some workloads<font color="#CCCCCC"> we need to get time</font>

282
00:12:32,740 --> 00:12:38,410
<font color="#CCCCCC">stamps</font><font color="#E5E5E5"> or pretty frequently you know for</font>

283
00:12:36,760 --> 00:12:40,990
example<font color="#CCCCCC"> they are</font><font color="#E5E5E5"> trying to</font><font color="#CCCCCC"> timestamp</font>

284
00:12:38,410 --> 00:12:43,630
records in the database or network

285
00:12:40,990 --> 00:12:45,070
packets so your operating system will

286
00:12:43,630 --> 00:12:47,260
constantly be written from<font color="#CCCCCC"> the clock</font>

287
00:12:45,070 --> 00:12:49,540
source<font color="#E5E5E5"> it has right but the thing</font><font color="#CCCCCC"> is</font>

288
00:12:47,260 --> 00:12:52,420
what is<font color="#E5E5E5"> the clock source it's trying to</font>

289
00:12:49,540 --> 00:12:55,510
<font color="#CCCCCC">access and on physical hardware it's</font>

290
00:12:52,420 --> 00:12:58,270
usually nowadays<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> TSC it's a</font>

291
00:12:55,510 --> 00:13:01,990
register in your<font color="#E5E5E5"> CPU which is usually</font>

292
00:12:58,270 --> 00:13:03,850
good but in virtualized environment you

293
00:13:01,990 --> 00:13:05,710
cannot do that<font color="#CCCCCC"> because your VM can</font>

294
00:13:03,850 --> 00:13:07,930
actually for<font color="#E5E5E5"> example migrate and there</font>

295
00:13:05,710 --> 00:13:10,770
is<font color="#E5E5E5"> gonna be like a jump in TC value and</font>

296
00:13:07,930 --> 00:13:15,400
the jump can actually be backwards<font color="#CCCCCC"> so</font>

297
00:13:10,770 --> 00:13:17,770
not nice<font color="#E5E5E5"> and virtual machines came with</font>

298
00:13:15,400 --> 00:13:21,069
this concept of a<font color="#E5E5E5"> paralyzed clock source</font>

299
00:13:17,770 --> 00:13:22,750
<font color="#E5E5E5">and in</font><font color="#CCCCCC"> t vm world it's called</font><font color="#E5E5E5"> k vm clock</font>

300
00:13:21,070 --> 00:13:23,950
<font color="#CCCCCC">but windows is not going</font><font color="#E5E5E5"> to use your k</font>

301
00:13:22,750 --> 00:13:26,800
vm clock<font color="#E5E5E5"> right</font><font color="#CCCCCC"> bye</font>

302
00:13:23,950 --> 00:13:28,990
itself<font color="#E5E5E5"> so we ambulate hyper-v clock</font>

303
00:13:26,800 --> 00:13:32,290
which is<font color="#E5E5E5"> basically the same concept</font><font color="#CCCCCC"> it's</font>

304
00:13:28,990 --> 00:13:34,870
a shared memory page with two<font color="#CCCCCC"> values and</font>

305
00:13:32,290 --> 00:13:37,810
to get the timestamp<font color="#E5E5E5"> it reads the TC</font>

306
00:13:34,870 --> 00:13:40,149
<font color="#E5E5E5">creditor from processor x like scale and</font>

307
00:13:37,810 --> 00:13:42,339
adsorption<font color="#E5E5E5"> if you're wearing my grades</font>

308
00:13:40,149 --> 00:13:45,010
hypervisor<font color="#E5E5E5"> will update</font><font color="#CCCCCC"> these values and</font>

309
00:13:42,339 --> 00:13:48,160
the region will stay like<font color="#E5E5E5"> persistent so</font>

310
00:13:45,010 --> 00:13:50,620
it won't jump anywhere so it's quite

311
00:13:48,160 --> 00:13:52,389
<font color="#E5E5E5">useful</font><font color="#CCCCCC"> and it speeds up windows a lot so</font>

312
00:13:50,620 --> 00:13:54,010
we'll<font color="#E5E5E5"> have some time I will show you</font>

313
00:13:52,389 --> 00:13:58,750
some benchmark at the very end of the

314
00:13:54,010 --> 00:14:02,709
talk so synthetic interrupt controller

315
00:13:58,750 --> 00:14:06,610
so that's the core component<font color="#E5E5E5"> of building</font>

316
00:14:02,709 --> 00:14:11,040
<font color="#CCCCCC">V emboss we emboss as a comp is the key</font>

317
00:14:06,610 --> 00:14:13,120
component<font color="#E5E5E5"> how you can create these</font><font color="#CCCCCC"> PV</font>

318
00:14:11,040 --> 00:14:15,579
devices which I'm<font color="#E5E5E5"> not going to talk</font>

319
00:14:13,120 --> 00:14:20,199
<font color="#CCCCCC">about</font><font color="#E5E5E5"> but let's</font><font color="#CCCCCC"> go how you can create PV</font>

320
00:14:15,579 --> 00:14:22,120
devices in hyper-v so it allows you

321
00:14:20,199 --> 00:14:23,829
basically to<font color="#CCCCCC"> it's somewhere like a</font>

322
00:14:22,120 --> 00:14:26,139
communication protocol<font color="#E5E5E5"> between the guest</font>

323
00:14:23,829 --> 00:14:30,279
and<font color="#E5E5E5"> the host</font><font color="#CCCCCC"> you can like basically</font><font color="#E5E5E5"> post</font>

324
00:14:26,139 --> 00:14:32,529
messages and signal events and<font color="#E5E5E5"> it's not</font>

325
00:14:30,279 --> 00:14:33,970
interesting by itself<font color="#CCCCCC"> unless you have</font>

326
00:14:32,529 --> 00:14:37,060
some<font color="#CCCCCC"> viewing bus devices which</font><font color="#E5E5E5"> are not</font>

327
00:14:33,970 --> 00:14:39,040
yet implemented<font color="#E5E5E5"> but this enlightenment</font>

328
00:14:37,060 --> 00:14:47,969
<font color="#E5E5E5">is required for Windows to</font><font color="#CCCCCC"> use synthetic</font>

329
00:14:39,040 --> 00:14:50,349
timers<font color="#E5E5E5"> and synthetic timers yeah so</font>

330
00:14:47,970 --> 00:14:52,420
synthetic timers is something like<font color="#E5E5E5"> a</font>

331
00:14:50,350 --> 00:14:54,880
like an alarm<font color="#E5E5E5"> clock right you want to</font>

332
00:14:52,420 --> 00:14:56,740
<font color="#CCCCCC">get</font><font color="#E5E5E5"> in event in like one second say</font>

333
00:14:54,880 --> 00:15:00,459
right so you set a<font color="#CCCCCC"> timer you</font><font color="#E5E5E5"> get an</font>

334
00:14:56,740 --> 00:15:03,490
<font color="#E5E5E5">event and windows does is pretty</font>

335
00:15:00,459 --> 00:15:06,369
frequently<font color="#CCCCCC"> so again in</font><font color="#E5E5E5"> hardware world</font>

336
00:15:03,490 --> 00:15:09,250
<font color="#E5E5E5">you can use something like TC</font><font color="#CCCCCC"> deadline</font>

337
00:15:06,370 --> 00:15:10,839
<font color="#E5E5E5">timer now right so you see set next TC</font>

338
00:15:09,250 --> 00:15:13,540
<font color="#E5E5E5">value and you will get an interrupt when</font>

339
00:15:10,839 --> 00:15:16,480
it happens<font color="#E5E5E5"> it's gonna be quite slow</font>

340
00:15:13,540 --> 00:15:21,639
because<font color="#CCCCCC"> you will have to</font><font color="#E5E5E5"> program this or</font>

341
00:15:16,480 --> 00:15:23,139
every time there is<font color="#CCCCCC"> an event</font><font color="#E5E5E5"> and again</font>

342
00:15:21,639 --> 00:15:26,740
it means<font color="#E5E5E5"> that he will be exiting to the</font>

343
00:15:23,139 --> 00:15:29,829
hypervisor for each<font color="#E5E5E5"> event you can set a</font>

344
00:15:26,740 --> 00:15:31,930
periodic timer<font color="#E5E5E5"> with this enlightenment</font>

345
00:15:29,829 --> 00:15:34,870
<font color="#CCCCCC">and actually there</font><font color="#E5E5E5"> was an update of</font>

346
00:15:31,930 --> 00:15:37,329
Windows 10 and<font color="#CCCCCC"> window 2016 last year</font>

347
00:15:34,870 --> 00:15:39,400
when they change<font color="#E5E5E5"> the frequency of</font>

348
00:15:37,330 --> 00:15:41,830
<font color="#E5E5E5">basically setting up these timers and</font>

349
00:15:39,400 --> 00:15:44,340
there was like a huge performance

350
00:15:41,830 --> 00:15:47,610
regression for<font color="#CCCCCC"> Windows guests under KVM</font>

351
00:15:44,340 --> 00:15:49,600
users were seeing their guests

352
00:15:47,610 --> 00:15:51,730
<font color="#E5E5E5">constantly spinning like assuming</font>

353
00:15:49,600 --> 00:15:54,370
consuming<font color="#CCCCCC"> 30% of the CPU even when</font>

354
00:15:51,730 --> 00:15:55,960
<font color="#CCCCCC">they're idle you enable this and</font><font color="#E5E5E5"> this</font>

355
00:15:54,370 --> 00:15:57,820
goes away<font color="#CCCCCC"> because Windows says this</font>

356
00:15:55,960 --> 00:16:01,870
<font color="#CCCCCC">timer</font><font color="#E5E5E5"> once and get this even when it</font>

357
00:15:57,820 --> 00:16:06,370
needs it without any hassle<font color="#CCCCCC"> he'll be</font>

358
00:16:01,870 --> 00:16:08,350
shut down<font color="#E5E5E5"> again if you know like when</font>

359
00:16:06,370 --> 00:16:11,770
you<font color="#E5E5E5"> map something in</font><font color="#CCCCCC"> memory you</font><font color="#E5E5E5"> may want</font>

360
00:16:08,350 --> 00:16:13,240
to<font color="#E5E5E5"> flash a teal buffer which is like a</font>

361
00:16:11,770 --> 00:16:15,220
fast translation from<font color="#CCCCCC"> one to another</font>

362
00:16:13,240 --> 00:16:19,120
from physical from<font color="#E5E5E5"> will</font><font color="#CCCCCC"> filter physical</font>

363
00:16:15,220 --> 00:16:21,550
and in x86 world<font color="#E5E5E5"> if you want to flash</font>

364
00:16:19,120 --> 00:16:23,440
this buffer on other<font color="#E5E5E5"> CPUs you send IP is</font>

365
00:16:21,550 --> 00:16:25,180
there so it's basically interrupts<font color="#E5E5E5"> and</font>

366
00:16:23,440 --> 00:16:27,850
you wait<font color="#E5E5E5"> for them</font><font color="#CCCCCC"> to perform the</font><font color="#E5E5E5"> session</font>

367
00:16:25,180 --> 00:16:29,979
<font color="#E5E5E5">down in virtualized world</font><font color="#CCCCCC"> it may happen</font>

368
00:16:27,850 --> 00:16:32,170
that<font color="#E5E5E5"> this beast</font><font color="#CCCCCC"> OCP usually want</font><font color="#E5E5E5"> to</font>

369
00:16:29,980 --> 00:16:34,450
<font color="#CCCCCC">flush are not actually running so it's</font>

370
00:16:32,170 --> 00:16:36,010
kind<font color="#E5E5E5"> of pointless to</font><font color="#CCCCCC"> flush buffers there</font>

371
00:16:34,450 --> 00:16:39,180
on the<font color="#CCCCCC"> Pearl in the first place and</font>

372
00:16:36,010 --> 00:16:43,930
second you will spend quite some time

373
00:16:39,180 --> 00:16:46,000
<font color="#E5E5E5">waiting</font><font color="#CCCCCC"> for this to happen so they came</font>

374
00:16:43,930 --> 00:16:47,709
up<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this concept of Perpetual a</font>

375
00:16:46,000 --> 00:16:49,540
shutdown so you tell the<font color="#E5E5E5"> hypervisor to</font>

376
00:16:47,710 --> 00:16:52,060
<font color="#E5E5E5">position the operation on your behalf</font>

377
00:16:49,540 --> 00:16:54,099
and hypervisor<font color="#E5E5E5"> actually knows which we</font>

378
00:16:52,060 --> 00:16:55,449
<font color="#CCCCCC">should use it needs to flush</font><font color="#E5E5E5"> and which</font>

379
00:16:54,100 --> 00:16:58,540
are not<font color="#CCCCCC"> running and they don't require</font>

380
00:16:55,450 --> 00:17:00,280
flushing so this<font color="#E5E5E5"> speeds up some</font>

381
00:16:58,540 --> 00:17:01,810
overcommitted environment significantly

382
00:17:00,280 --> 00:17:06,099
when<font color="#E5E5E5"> you have like more virtual</font><font color="#CCCCCC"> CPUs</font>

383
00:17:01,810 --> 00:17:08,879
than your physical CPUs<font color="#E5E5E5"> pretty similar</font>

384
00:17:06,099 --> 00:17:12,359
concept<font color="#CCCCCC"> with para virtualized IP I but</font>

385
00:17:08,880 --> 00:17:15,130
it cannot just drop<font color="#E5E5E5"> the IP I because</font>

386
00:17:12,359 --> 00:17:18,189
this interpreter<font color="#CCCCCC"> interrupts they have to</font>

387
00:17:15,130 --> 00:17:20,650
happen<font color="#E5E5E5"> the</font><font color="#CCCCCC"> only thing that we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> flush</font>

388
00:17:18,190 --> 00:17:24,610
<font color="#E5E5E5">first and IP is to for example</font><font color="#CCCCCC"> more than</font>

389
00:17:20,650 --> 00:17:27,400
64 CPUs at a time with this and in

390
00:17:24,609 --> 00:17:30,610
<font color="#E5E5E5">hardware you'll have to do a VM exit for</font>

391
00:17:27,400 --> 00:17:34,810
every 64 cpus<font color="#E5E5E5"> you want to send so it</font>

392
00:17:30,610 --> 00:17:38,709
becomes like cheaper yeah a couple<font color="#CCCCCC"> of</font>

393
00:17:34,810 --> 00:17:42,220
like useless things you can do like<font color="#CCCCCC"> you</font>

394
00:17:38,710 --> 00:17:43,660
can set<font color="#CCCCCC"> hyper-v</font><font color="#E5E5E5"> vendor ID Microsoft</font>

395
00:17:42,220 --> 00:17:46,300
Windows<font color="#E5E5E5"> doesn't care about what you put</font>

396
00:17:43,660 --> 00:17:48,160
there<font color="#CCCCCC"> you can put a hyper-v TV here</font>

397
00:17:46,300 --> 00:17:49,770
Microsoft hyper-v<font color="#E5E5E5"> it doesn't really</font>

398
00:17:48,160 --> 00:17:52,640
matter

399
00:17:49,770 --> 00:17:55,408
the other one is<font color="#CCCCCC"> paravirtualized</font><font color="#E5E5E5"> reset</font>

400
00:17:52,640 --> 00:17:57,299
<font color="#CCCCCC">say another model specific register</font>

401
00:17:55,409 --> 00:17:59,399
which allows your guests<font color="#E5E5E5"> to reset itself</font>

402
00:17:57,299 --> 00:18:01,500
<font color="#E5E5E5">and the thing is that even genuine</font>

403
00:17:59,399 --> 00:18:04,320
hyper-v doesn't<font color="#E5E5E5"> recommend using it so</font>

404
00:18:01,500 --> 00:18:06,270
the future is<font color="#E5E5E5"> there but for no</font>

405
00:18:04,320 --> 00:18:08,730
particular<font color="#E5E5E5"> reason at this moment</font><font color="#CCCCCC"> but</font>

406
00:18:06,270 --> 00:18:11,039
<font color="#CCCCCC">maybe for some very</font><font color="#E5E5E5"> old</font><font color="#CCCCCC"> windows guests</font>

407
00:18:08,730 --> 00:18:14,250
<font color="#E5E5E5">it was required for modern guests is not</font>

408
00:18:11,039 --> 00:18:16,230
required so there<font color="#E5E5E5"> are also a</font><font color="#CCCCCC"> couple</font>

409
00:18:14,250 --> 00:18:18,120
features<font color="#E5E5E5"> which are required if you are</font>

410
00:18:16,230 --> 00:18:20,850
running<font color="#E5E5E5"> nested guests if you are running</font>

411
00:18:18,120 --> 00:18:22,949
<font color="#E5E5E5">like hyper beam on TEM or if you are</font>

412
00:18:20,850 --> 00:18:25,110
<font color="#CCCCCC">enabling some security features in</font>

413
00:18:22,950 --> 00:18:26,490
Windows which actually enable hyper-v

414
00:18:25,110 --> 00:18:30,600
and<font color="#E5E5E5"> granese there are such</font><font color="#CCCCCC"> features</font>

415
00:18:26,490 --> 00:18:32,460
there<font color="#E5E5E5"> and first is if you want to get</font>

416
00:18:30,600 --> 00:18:34,799
stable<font color="#E5E5E5"> clock</font><font color="#CCCCCC"> souls and</font><font color="#E5E5E5"> I just told you</font>

417
00:18:32,460 --> 00:18:36,659
how important is to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> a stable clock</font>

418
00:18:34,799 --> 00:18:37,918
<font color="#E5E5E5">source if you are running nested you</font>

419
00:18:36,659 --> 00:18:41,480
will need a couple<font color="#E5E5E5"> of</font><font color="#CCCCCC"> additional</font>

420
00:18:37,919 --> 00:18:44,190
Enlightenment's one of them tells your

421
00:18:41,480 --> 00:18:46,830
level 1 hypervisor<font color="#E5E5E5"> about your epic</font>

422
00:18:44,190 --> 00:18:48,510
frequency<font color="#E5E5E5"> the other one tells it when it</font>

423
00:18:46,830 --> 00:18:50,610
changes<font color="#CCCCCC"> for example when you migrate</font>

424
00:18:48,510 --> 00:18:51,510
your level<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> guest with all its guests</font>

425
00:18:50,610 --> 00:18:53,459
somewhere else

426
00:18:51,510 --> 00:18:55,590
so it actually<font color="#E5E5E5"> needs to know</font><font color="#CCCCCC"> that the</font>

427
00:18:53,460 --> 00:18:58,080
frequency changed and that's<font color="#E5E5E5"> how you do</font>

428
00:18:55,590 --> 00:19:00,980
that<font color="#E5E5E5"> it's not currently fully support in</font>

429
00:18:58,080 --> 00:19:04,230
<font color="#CCCCCC">KVM so actually it doesn't</font><font color="#E5E5E5"> send these</font>

430
00:19:00,980 --> 00:19:05,789
<font color="#CCCCCC">rain lightning</font><font color="#E5E5E5"> events so if your</font><font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> is</font>

431
00:19:04,230 --> 00:19:07,740
more than<font color="#CCCCCC"> enough and you have to see</font>

432
00:19:05,789 --> 00:19:10,620
scaling it's not an issue<font color="#E5E5E5"> but if you're</font>

433
00:19:07,740 --> 00:19:12,809
<font color="#E5E5E5">running on older CPUs your clock may</font>

434
00:19:10,620 --> 00:19:16,139
start ticking at the wrong frequency it

435
00:19:12,809 --> 00:19:21,418
can happen<font color="#E5E5E5"> so we know about it enlighten</font>

436
00:19:16,140 --> 00:19:24,809
<font color="#CCCCCC">3</font><font color="#E5E5E5"> MCS I was telling ya</font><font color="#CCCCCC"> giving a talk</font>

437
00:19:21,419 --> 00:19:27,000
<font color="#CCCCCC">about it like last year it's that pretty</font>

438
00:19:24,809 --> 00:19:30,178
complex feature but the thing is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> to</font>

439
00:19:27,000 --> 00:19:33,330
run virtualized<font color="#E5E5E5"> guests you're dealing</font>

440
00:19:30,179 --> 00:19:36,419
with such such called<font color="#CCCCCC"> VM CS state on</font>

441
00:19:33,330 --> 00:19:38,490
<font color="#E5E5E5">Intel and you're using specific CPU</font>

442
00:19:36,419 --> 00:19:42,299
common specific instructions which are

443
00:19:38,490 --> 00:19:44,130
first not very<font color="#E5E5E5"> fast and second I mean if</font>

444
00:19:42,299 --> 00:19:46,889
<font color="#E5E5E5">your level 1 guest is built in this</font>

445
00:19:44,130 --> 00:19:48,480
<font color="#E5E5E5">state for</font><font color="#CCCCCC"> its level 2 guest you don't</font>

446
00:19:46,890 --> 00:19:51,000
know what it's actually doing there

447
00:19:48,480 --> 00:19:52,500
<font color="#E5E5E5">because it runs on the</font><font color="#CCCCCC"> CPU natively so</font>

448
00:19:51,000 --> 00:19:54,960
you'll basically<font color="#CCCCCC"> have to read the</font><font color="#E5E5E5"> whole</font>

449
00:19:52,500 --> 00:20:00,360
state<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a PV protocol for that</font>

450
00:19:54,960 --> 00:20:03,120
which speeds things up<font color="#E5E5E5"> for that so we</font>

451
00:20:00,360 --> 00:20:04,050
have more<font color="#CCCCCC"> features</font><font color="#E5E5E5"> and works and this</font>

452
00:20:03,120 --> 00:20:06,479
one is already on

453
00:20:04,050 --> 00:20:09,510
mailing<font color="#E5E5E5"> list and that's why I put</font><font color="#CCCCCC"> it on</font>

454
00:20:06,480 --> 00:20:13,230
the slides<font color="#CCCCCC"> if you are running hyper-v</font><font color="#E5E5E5"> on</font>

455
00:20:09,510 --> 00:20:16,770
<font color="#CCCCCC">KBM it will also</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> it would also like</font>

456
00:20:13,230 --> 00:20:20,280
<font color="#CCCCCC">to see</font><font color="#E5E5E5"> synthetic timers there but it</font>

457
00:20:16,770 --> 00:20:23,370
cannot use<font color="#CCCCCC"> synthetic timers in their</font>

458
00:20:20,280 --> 00:20:26,550
current shape in the<font color="#E5E5E5"> shape we in which</font>

459
00:20:23,370 --> 00:20:29,790
<font color="#CCCCCC">Windows uses them</font><font color="#E5E5E5"> so because it doesn't</font>

460
00:20:26,550 --> 00:20:31,500
set up like full this infrastructure the

461
00:20:29,790 --> 00:20:34,379
hyper-v<font color="#E5E5E5"> is like a very minimal</font>

462
00:20:31,500 --> 00:20:36,690
hypervisor there it<font color="#E5E5E5"> once like a</font>

463
00:20:34,380 --> 00:20:38,790
simplified modern simplified node is

464
00:20:36,690 --> 00:20:43,160
getting an interrupt<font color="#E5E5E5"> instead of a</font><font color="#CCCCCC"> VM bus</font>

465
00:20:38,790 --> 00:20:46,530
<font color="#E5E5E5">message and for that there is a</font><font color="#CCCCCC"> dimer</font>

466
00:20:43,160 --> 00:20:49,200
direct enlightenment which is already

467
00:20:46,530 --> 00:20:54,060
<font color="#E5E5E5">implemented</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> KVM in which will land</font>

468
00:20:49,200 --> 00:20:55,980
in<font color="#CCCCCC"> ki-moon shortly I believe so as I</font>

469
00:20:54,060 --> 00:20:58,139
promised some<font color="#CCCCCC"> benchmark</font><font color="#E5E5E5"> so you</font>

470
00:20:55,980 --> 00:21:01,350
understand<font color="#E5E5E5"> how important these are</font>

471
00:20:58,140 --> 00:21:03,930
Enlightenment's are so this<font color="#E5E5E5"> is hyper-v</font>

472
00:21:01,350 --> 00:21:06,990
clock source<font color="#E5E5E5"> what we do in the test will</font>

473
00:21:03,930 --> 00:21:09,240
basically<font color="#E5E5E5"> spin and we do</font><font color="#CCCCCC"> clog at times</font>

474
00:21:06,990 --> 00:21:11,310
like basically<font color="#CCCCCC"> what's what's</font><font color="#E5E5E5"> the time</font>

475
00:21:09,240 --> 00:21:14,070
right<font color="#E5E5E5"> now right in the operating system</font>

476
00:21:11,310 --> 00:21:15,570
<font color="#CCCCCC">so if you run</font><font color="#E5E5E5"> it with</font><font color="#CCCCCC"> and without</font><font color="#E5E5E5"> HP</font>

477
00:21:14,070 --> 00:21:18,600
time<font color="#E5E5E5"> you will see the tremendous</font>

478
00:21:15,570 --> 00:21:20,700
<font color="#CCCCCC">difference between because with HP time</font>

479
00:21:18,600 --> 00:21:22,949
is<font color="#E5E5E5"> basically written from memory so it's</font>

480
00:21:20,700 --> 00:21:25,140
not very<font color="#E5E5E5"> very different from</font><font color="#CCCCCC"> are</font>

481
00:21:22,950 --> 00:21:28,320
actually like reading like<font color="#CCCCCC"> TC register</font>

482
00:21:25,140 --> 00:21:30,480
from processor on bare<font color="#E5E5E5"> hardware without</font>

483
00:21:28,320 --> 00:21:34,490
extra time it means<font color="#CCCCCC"> wium exit to the</font>

484
00:21:30,480 --> 00:21:39,360
hypervisor<font color="#E5E5E5"> every time so the speed-up is</font>

485
00:21:34,490 --> 00:21:41,640
great here<font color="#CCCCCC"> enlightened</font><font color="#E5E5E5"> vm CS if you're</font>

486
00:21:39,360 --> 00:21:43,740
running nested guest<font color="#E5E5E5"> and you will do</font>

487
00:21:41,640 --> 00:21:46,980
some operation which actually traps in

488
00:21:43,740 --> 00:21:49,080
the hypervisor and<font color="#CCCCCC"> cpuid</font><font color="#E5E5E5"> is as you know</font>

489
00:21:46,980 --> 00:21:51,120
<font color="#E5E5E5">like gives you this like</font><font color="#CCCCCC"> cpu features</font>

490
00:21:49,080 --> 00:21:55,370
you have<font color="#E5E5E5"> but it always needs to trap on</font>

491
00:21:51,120 --> 00:22:01,219
the hypervisor<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you will see that with</font>

492
00:21:55,370 --> 00:22:04,139
<font color="#CCCCCC">HTV MCS we</font><font color="#E5E5E5"> see like</font><font color="#CCCCCC"> 10%</font><font color="#E5E5E5"> difference here</font>

493
00:22:01,220 --> 00:22:07,020
we still be<font color="#E5E5E5"> shut down the test case is</font>

494
00:22:04,140 --> 00:22:09,210
quite complex here and this one is<font color="#CCCCCC"> like</font>

495
00:22:07,020 --> 00:22:12,389
part<font color="#E5E5E5"> of it but I think is we are doing</font><font color="#CCCCCC"> M</font>

496
00:22:09,210 --> 00:22:15,180
map and<font color="#CCCCCC"> M on map of</font><font color="#E5E5E5"> some like big file</font>

497
00:22:12,390 --> 00:22:17,280
in chunks<font color="#E5E5E5"> and this operation is known to</font>

498
00:22:15,180 --> 00:22:20,850
cause TLB<font color="#CCCCCC"> flushes on other</font>

499
00:22:17,280 --> 00:22:23,309
<font color="#CCCCCC">and then what we do we are</font><font color="#E5E5E5"> running the</font>

500
00:22:20,850 --> 00:22:25,559
<font color="#E5E5E5">same test on the same host but we are</font>

501
00:22:23,309 --> 00:22:28,168
just<font color="#CCCCCC"> edging more and more weird</font><font color="#E5E5E5"> so CPUs</font>

502
00:22:25,559 --> 00:22:31,049
<font color="#E5E5E5">to our guests</font><font color="#CCCCCC"> and as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see when</font>

503
00:22:28,169 --> 00:22:33,419
the number<font color="#CCCCCC"> of like virtual CPUs matches</font>

504
00:22:31,049 --> 00:22:35,220
there is almost no benefit<font color="#CCCCCC"> in the</font>

505
00:22:33,419 --> 00:22:37,950
feature<font color="#CCCCCC"> it's the same right as</font><font color="#E5E5E5"> sending</font>

506
00:22:35,220 --> 00:22:40,169
this<font color="#E5E5E5"> IP I isn't doing flash natively but</font>

507
00:22:37,950 --> 00:22:42,929
as we go<font color="#CCCCCC"> overcome it it's like more and</font>

508
00:22:40,169 --> 00:22:45,150
more CPUs we have this<font color="#E5E5E5"> PV T will be</font>

509
00:22:42,929 --> 00:22:47,250
<font color="#CCCCCC">flash on</font><font color="#E5E5E5"> the right the number stays more</font>

510
00:22:45,150 --> 00:22:49,260
<font color="#CCCCCC">or less the same</font><font color="#E5E5E5"> because we don't really</font>

511
00:22:47,250 --> 00:22:50,820
need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> flash this V CPUs which are not</font>

512
00:22:49,260 --> 00:22:53,669
running<font color="#E5E5E5"> and they cannot be</font><font color="#CCCCCC"> running</font><font color="#E5E5E5"> at</font>

513
00:22:50,820 --> 00:22:56,639
<font color="#CCCCCC">the same</font><font color="#E5E5E5"> time and but with physical</font>

514
00:22:53,669 --> 00:22:59,460
pivot<font color="#CCCCCC"> will be flash you will see the</font>

515
00:22:56,640 --> 00:23:03,480
slowdown<font color="#E5E5E5"> of the same test case on the</font>

516
00:22:59,460 --> 00:23:08,809
same<font color="#E5E5E5"> physical host so that was it from</font>

517
00:23:03,480 --> 00:23:08,809
me<font color="#CCCCCC"> thank you for listening</font><font color="#E5E5E5"> any questions</font>

518
00:23:20,870 --> 00:23:28,408
<font color="#CCCCCC">the question is on which versions</font><font color="#E5E5E5"> we</font>

519
00:23:24,750 --> 00:23:30,120
expect<font color="#E5E5E5"> to see these features</font><font color="#CCCCCC"> I guessing</font>

520
00:23:28,409 --> 00:23:32,340
that you're asking about both like<font color="#CCCCCC"> KVM</font>

521
00:23:30,120 --> 00:23:34,860
<font color="#E5E5E5">versions and</font><font color="#CCCCCC"> chemo versions Yeah right</font>

522
00:23:32,340 --> 00:23:37,918
so everything I was telling you about

523
00:23:34,860 --> 00:23:40,649
today is already<font color="#E5E5E5"> upstream in</font><font color="#CCCCCC"> KVM</font>

524
00:23:37,919 --> 00:23:46,289
including the synthetic<font color="#E5E5E5"> timers direct</font>

525
00:23:40,650 --> 00:23:50,419
mode in<font color="#CCCCCC"> kimu I don't actually remember</font>

526
00:23:46,289 --> 00:23:53,879
like a top of my head but I<font color="#CCCCCC"> think that</font>

527
00:23:50,419 --> 00:23:57,750
<font color="#CCCCCC">everson except for like PvE Tilby floppy</font>

528
00:23:53,880 --> 00:24:01,110
VIP<font color="#CCCCCC"> eye and enlightenment</font><font color="#E5E5E5"> we MCS is</font>

529
00:23:57,750 --> 00:24:04,860
there in like<font color="#CCCCCC"> 2 dot like 12 or something</font>

530
00:24:01,110 --> 00:24:09,000
<font color="#E5E5E5">in 3.0 we were editing</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> Pvt lb flash</font>

531
00:24:04,860 --> 00:24:11,399
and through and enlightened<font color="#E5E5E5"> v mcs</font>

532
00:24:09,000 --> 00:24:13,860
something like that<font color="#E5E5E5"> so if you grab</font>

533
00:24:11,400 --> 00:24:15,750
current<font color="#CCCCCC"> ki-moon</font><font color="#E5E5E5"> it has ever seen but</font>

534
00:24:13,860 --> 00:24:18,360
this synthetic time<font color="#E5E5E5"> with direct mode</font>

535
00:24:15,750 --> 00:24:20,929
there are<font color="#CCCCCC"> see is on the mailing list I'm</font>

536
00:24:18,360 --> 00:24:22,678
also trying to<font color="#E5E5E5"> come</font><font color="#CCCCCC"> up with a</font>

537
00:24:20,929 --> 00:24:25,710
<font color="#E5E5E5">simplification which would be called</font>

538
00:24:22,679 --> 00:24:27,690
like<font color="#CCCCCC"> HV all which will enable all hyper</font>

539
00:24:25,710 --> 00:24:29,760
<font color="#CCCCCC">rate features for you</font><font color="#E5E5E5"> it's like a little</font>

540
00:24:27,690 --> 00:24:31,050
<font color="#E5E5E5">bit controversial because the question</font>

541
00:24:29,760 --> 00:24:33,690
is what happens when you<font color="#CCCCCC"> Mike</font>

542
00:24:31,050 --> 00:24:35,460
CVM<font color="#E5E5E5"> right your other host may have</font>

543
00:24:33,690 --> 00:24:37,050
different<font color="#E5E5E5"> hyper</font><font color="#CCCCCC"> enlightenment support</font>

544
00:24:35,460 --> 00:24:40,320
like<font color="#CCCCCC"> you have different Aryan</font><font color="#E5E5E5"> versions</font>

545
00:24:37,050 --> 00:24:42,450
so like<font color="#CCCCCC"> liberal folks</font><font color="#E5E5E5"> prefer to have all</font>

546
00:24:40,320 --> 00:24:44,760
<font color="#E5E5E5">these Enlightenment's listed there so</font>

547
00:24:42,450 --> 00:24:48,330
<font color="#E5E5E5">prefer to keep them like fine-grained</font>

548
00:24:44,760 --> 00:24:50,670
<font color="#E5E5E5">and they may not support it but in chemo</font>

549
00:24:48,330 --> 00:24:53,220
it may actually come handy for like

550
00:24:50,670 --> 00:24:56,490
development test cases<font color="#E5E5E5"> for a single host</font>

551
00:24:53,220 --> 00:25:00,170
you suggest stuff like that<font color="#E5E5E5"> so expect</font><font color="#CCCCCC"> to</font>

552
00:24:56,490 --> 00:25:05,070
<font color="#CCCCCC">see this feature in near</font><font color="#E5E5E5"> future</font>

553
00:25:00,170 --> 00:25:06,690
more questions<font color="#CCCCCC"> yes</font><font color="#E5E5E5"> oh so many at the</font>

554
00:25:05,070 --> 00:25:09,800
back you were the first to raise<font color="#E5E5E5"> your</font>

555
00:25:06,690 --> 00:25:09,800
hand so please go ahead

556
00:25:22,040 --> 00:25:26,879
yeah the question<font color="#CCCCCC"> is</font><font color="#E5E5E5"> why are these</font>

557
00:25:24,630 --> 00:25:29,370
features<font color="#E5E5E5"> not enabling not enabled by</font>

558
00:25:26,880 --> 00:25:31,490
default and<font color="#E5E5E5"> what's the cost for enabling</font>

559
00:25:29,370 --> 00:25:35,820
them<font color="#CCCCCC"> or for the guest operating system</font>

560
00:25:31,490 --> 00:25:37,920
so the cost is basically<font color="#E5E5E5"> zero except the</font>

561
00:25:35,820 --> 00:25:40,139
notable exception<font color="#E5E5E5"> is enlightened</font><font color="#CCCCCC"> VMC s</font>

562
00:25:37,920 --> 00:25:42,360
because enlightened<font color="#CCCCCC"> three MCS comes with</font>

563
00:25:40,140 --> 00:25:45,390
a penalty<font color="#CCCCCC"> for example you will</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> your</font>

564
00:25:42,360 --> 00:25:47,879
posting<font color="#CCCCCC"> drugs disabled and for some</font>

565
00:25:45,390 --> 00:25:49,680
workloads when you have for<font color="#CCCCCC"> example some</font>

566
00:25:47,880 --> 00:25:51,360
physical hardware which is<font color="#E5E5E5"> actually able</font>

567
00:25:49,680 --> 00:25:53,430
<font color="#E5E5E5">to deliver posted interrupts that's</font>

568
00:25:51,360 --> 00:25:55,199
going to be a<font color="#CCCCCC"> slowdown in</font><font color="#E5E5E5"> other cases</font>

569
00:25:53,430 --> 00:25:57,810
when you don't have such<font color="#E5E5E5"> hardware it</font>

570
00:25:55,200 --> 00:26:00,780
will be a<font color="#E5E5E5"> speed-up so this feature we</font>

571
00:25:57,810 --> 00:26:02,040
cannot enable<font color="#E5E5E5"> by default the rest the</font>

572
00:26:00,780 --> 00:26:03,899
cost is zero

573
00:26:02,040 --> 00:26:06,000
<font color="#E5E5E5">even if</font><font color="#CCCCCC"> you're guest operating system is</font>

574
00:26:03,900 --> 00:26:07,920
<font color="#E5E5E5">not using them you</font><font color="#CCCCCC"> can enable</font><font color="#E5E5E5"> them for a</font>

575
00:26:06,000 --> 00:26:11,270
<font color="#CCCCCC">KVM guest and you won't notice anything</font>

576
00:26:07,920 --> 00:26:14,730
why we don't enable<font color="#E5E5E5"> them by default</font>

577
00:26:11,270 --> 00:26:16,889
<font color="#CCCCCC">probably because of how the</font>

578
00:26:14,730 --> 00:26:18,750
virtualization stack is designed and<font color="#E5E5E5"> the</font>

579
00:26:16,890 --> 00:26:21,240
<font color="#E5E5E5">most important thing there is migration</font>

580
00:26:18,750 --> 00:26:24,120
<font color="#E5E5E5">right so if you don't need</font><font color="#CCCCCC"> these</font>

581
00:26:21,240 --> 00:26:24,630
features but<font color="#E5E5E5"> you enable all them that</font>

582
00:26:24,120 --> 00:26:26,669
later

583
00:26:24,630 --> 00:26:28,440
you cannot migrate this VM to some host

584
00:26:26,670 --> 00:26:30,390
which doesn't have this<font color="#CCCCCC"> feature</font><font color="#E5E5E5"> because</font>

585
00:26:28,440 --> 00:26:32,070
<font color="#CCCCCC">from the hypervisor point of view we</font>

586
00:26:30,390 --> 00:26:34,290
don't know if the guest is using the

587
00:26:32,070 --> 00:26:36,120
feature or not<font color="#E5E5E5"> or we will have</font><font color="#CCCCCC"> to come</font>

588
00:26:34,290 --> 00:26:38,159
up<font color="#CCCCCC"> with an interface Oh what</font><font color="#E5E5E5"> the guest</font>

589
00:26:36,120 --> 00:26:40,919
using this feature or not can we disable

590
00:26:38,160 --> 00:26:44,580
it we don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> this in either cream or</font>

591
00:26:40,920 --> 00:26:45,000
team<font color="#CCCCCC"> TM so yeah so thank you guys very</font>

592
00:26:44,580 --> 00:26:48,090
much

593
00:26:45,000 --> 00:26:52,520
we're out of time<font color="#CCCCCC"> so I will</font><font color="#E5E5E5"> take your</font>

594
00:26:48,090 --> 00:26:52,520
<font color="#E5E5E5">questions here in the corridor</font>

595
00:26:54,360 --> 00:26:56,419
you

