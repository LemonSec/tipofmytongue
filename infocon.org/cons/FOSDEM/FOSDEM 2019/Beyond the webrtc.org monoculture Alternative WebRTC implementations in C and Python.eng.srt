1
00:00:04,750 --> 00:00:12,110
<font color="#E5E5E5">all right hello hello everyone today</font>

2
00:00:08,710 --> 00:00:14,870
<font color="#CCCCCC">Leonard and I will be Leonard</font><font color="#E5E5E5"> and I will</font>

3
00:00:12,110 --> 00:00:18,080
be speaking<font color="#E5E5E5"> about how</font><font color="#CCCCCC"> we can get a bit</font>

4
00:00:14,870 --> 00:00:20,630
more diversity<font color="#E5E5E5"> in the WebRTC ecosystem</font>

5
00:00:18,080 --> 00:00:23,150
and how alternative WebRTC

6
00:00:20,630 --> 00:00:25,538
implementations will help us to achieve

7
00:00:23,150 --> 00:00:25,538
this goal

8
00:00:25,779 --> 00:00:31,490
so I'm Jeremy I'm the CTO of<font color="#E5E5E5"> special Nev</font>

9
00:00:29,330 --> 00:00:35,269
I've been<font color="#E5E5E5"> involved in free software</font>

10
00:00:31,490 --> 00:00:39,830
since 2000<font color="#E5E5E5"> and actively using Python</font>

11
00:00:35,269 --> 00:00:42,379
since 2007<font color="#E5E5E5"> and today my</font><font color="#CCCCCC"> I'd say my</font>

12
00:00:39,830 --> 00:00:45,769
perspective<font color="#CCCCCC"> on this is as the author of</font>

13
00:00:42,379 --> 00:00:50,599
<font color="#CCCCCC">AI</font><font color="#E5E5E5"> o</font><font color="#CCCCCC"> RTC Python implementation of web</font>

14
00:00:45,769 --> 00:00:52,640
<font color="#E5E5E5">RTC so hi everyone for me as well</font><font color="#CCCCCC"> I'm</font>

15
00:00:50,600 --> 00:01:04,849
<font color="#CCCCCC">Leonard God I do enjoy net for</font>

16
00:00:52,640 --> 00:01:06,909
programming so<font color="#CCCCCC"> so yeah I'm there crowd</font>

17
00:01:04,849 --> 00:01:10,130
as I said I do enjoy<font color="#CCCCCC"> it we're probing</font>

18
00:01:06,909 --> 00:01:12,710
programming<font color="#E5E5E5"> I am the author of raw</font><font color="#CCCCCC"> RTC</font>

19
00:01:10,130 --> 00:01:14,780
which is a well partial web<font color="#E5E5E5"> Odyssey</font>

20
00:01:12,710 --> 00:01:17,389
implementation and of salty Odyssey

21
00:01:14,780 --> 00:01:21,860
which is an ant<font color="#CCCCCC"> ant encrypted signal</font><font color="#E5E5E5"> and</font>

22
00:01:17,390 --> 00:01:25,130
solution I am apparently<font color="#E5E5E5"> a w3c web</font><font color="#CCCCCC"> RTC</font>

23
00:01:21,860 --> 00:01:26,539
<font color="#CCCCCC">invited experts</font><font color="#E5E5E5"> and I do work</font><font color="#CCCCCC"> for three</font>

24
00:01:25,130 --> 00:01:37,310
<font color="#CCCCCC">male when I don't work on my</font><font color="#E5E5E5"> personal</font>

25
00:01:26,540 --> 00:01:39,500
<font color="#CCCCCC">project so WebRTC</font><font color="#E5E5E5"> in in short is is</font>

26
00:01:37,310 --> 00:01:41,840
<font color="#E5E5E5">about secure peer-to-peer communications</font>

27
00:01:39,500 --> 00:01:45,200
whether<font color="#E5E5E5"> you're exchanging audio video or</font>

28
00:01:41,840 --> 00:01:47,600
data and if you've<font color="#E5E5E5"> made use of well of</font>

29
00:01:45,200 --> 00:01:50,470
WebRTC<font color="#CCCCCC"> you most likely</font><font color="#E5E5E5"> have made use of</font>

30
00:01:47,600 --> 00:01:53,240
<font color="#E5E5E5">the webrtc.org</font><font color="#CCCCCC"> code base which is a</font>

31
00:01:50,470 --> 00:01:55,880
project<font color="#E5E5E5"> which is driven by Google and</font>

32
00:01:53,240 --> 00:02:00,050
which serves as the<font color="#E5E5E5"> de facto reference</font>

33
00:01:55,880 --> 00:02:01,729
implementation<font color="#CCCCCC"> for WebRTC it is it's a</font>

34
00:02:00,050 --> 00:02:05,320
code base which is widely used by

35
00:02:01,729 --> 00:02:08,449
browsers<font color="#CCCCCC"> chrome uses it extensively</font>

36
00:02:05,320 --> 00:02:11,480
Firefox<font color="#E5E5E5"> also uses it at least for the</font>

37
00:02:08,449 --> 00:02:14,390
the media part less so for<font color="#CCCCCC"> four data</font>

38
00:02:11,480 --> 00:02:17,090
channels and with edge converging

39
00:02:14,390 --> 00:02:18,040
towards chromium well<font color="#E5E5E5"> you know you know</font>

40
00:02:17,090 --> 00:02:22,000
<font color="#E5E5E5">it's edge</font>

41
00:02:18,040 --> 00:02:24,159
using the the same stack<font color="#E5E5E5"> to Weber the</font>

42
00:02:22,000 --> 00:02:26,620
webrtc.org<font color="#CCCCCC"> codebase deserves a lot of</font>

43
00:02:24,159 --> 00:02:30,099
credit because<font color="#E5E5E5"> it has put WebRTC into</font>

44
00:02:26,620 --> 00:02:31,269
the hands of<font color="#E5E5E5"> millions of people</font><font color="#CCCCCC"> so we</font>

45
00:02:30,099 --> 00:02:33,189
probably wouldn't<font color="#E5E5E5"> be</font><font color="#CCCCCC"> talking about</font>

46
00:02:31,269 --> 00:02:36,400
WebRTC today if there wasn't the

47
00:02:33,189 --> 00:02:38,980
webrtc.org<font color="#CCCCCC"> codebase</font><font color="#E5E5E5"> nevertheless if</font>

48
00:02:36,400 --> 00:02:41,290
you've tried to integrate this<font color="#CCCCCC"> codebase</font>

49
00:02:38,980 --> 00:02:42,700
into your own custom project so we're

50
00:02:41,290 --> 00:02:46,269
probably<font color="#E5E5E5"> speaking</font><font color="#CCCCCC"> outside the the</font>

51
00:02:42,700 --> 00:02:48,220
<font color="#CCCCCC">browser space you will</font><font color="#E5E5E5"> probably have</font>

52
00:02:46,269 --> 00:02:51,879
noticed<font color="#E5E5E5"> that this is a massive project</font>

53
00:02:48,220 --> 00:02:54,730
<font color="#CCCCCC">and integrating it is hard tracking</font>

54
00:02:51,879 --> 00:02:58,030
releases is also quite quite a challenge

55
00:02:54,730 --> 00:03:02,078
<font color="#E5E5E5">and to</font><font color="#CCCCCC"> give you</font><font color="#E5E5E5"> a ballpark figure about</font>

56
00:02:58,030 --> 00:03:05,379
what I mean<font color="#CCCCCC"> by a large project here is a</font>

57
00:03:02,079 --> 00:03:08,200
<font color="#E5E5E5">recent tweet by someone who should know</font>

58
00:03:05,379 --> 00:03:10,179
so Justin said it's weighing in at<font color="#CCCCCC"> 1.2</font>

59
00:03:08,200 --> 00:03:11,440
<font color="#E5E5E5">million lines of code</font><font color="#CCCCCC"> so I don't know</font>

60
00:03:10,180 --> 00:03:15,819
how<font color="#CCCCCC"> many of you have written</font><font color="#E5E5E5"> that kind</font>

61
00:03:11,440 --> 00:03:17,530
of code but<font color="#E5E5E5"> I have not and so what can</font>

62
00:03:15,819 --> 00:03:19,899
we<font color="#E5E5E5"> do start starting from here do you</font>

63
00:03:17,530 --> 00:03:23,079
have any other choices if you want to if

64
00:03:19,900 --> 00:03:25,989
you<font color="#E5E5E5"> want a library which supports WebRTC</font>

65
00:03:23,079 --> 00:03:28,780
for<font color="#CCCCCC"> your own project the answer is</font>

66
00:03:25,989 --> 00:03:34,410
luckily yes<font color="#E5E5E5"> so we're going to talk</font><font color="#CCCCCC"> about</font>

67
00:03:28,780 --> 00:03:34,410
two<font color="#CCCCCC"> different to two</font><font color="#E5E5E5"> different libraries</font>

68
00:03:34,829 --> 00:03:38,980
<font color="#CCCCCC">for my part I'm</font><font color="#E5E5E5"> going to talk about</font><font color="#CCCCCC"> AI</font>

69
00:03:38,049 --> 00:03:41,859
<font color="#CCCCCC">ortc</font>

70
00:03:38,980 --> 00:03:45,069
it is a WebRTC implementation which<font color="#CCCCCC"> is</font>

71
00:03:41,859 --> 00:03:48,489
written in Python<font color="#E5E5E5"> it leverages</font><font color="#CCCCCC"> the</font>

72
00:03:45,069 --> 00:03:50,980
modern Python support for a<font color="#CCCCCC"> sync</font><font color="#E5E5E5"> i/o it</font>

73
00:03:48,489 --> 00:03:53,129
supports<font color="#E5E5E5"> audio video and data channels</font>

74
00:03:50,980 --> 00:03:56,168
so it's got you pretty<font color="#E5E5E5"> well covered and</font>

75
00:03:53,129 --> 00:03:56,739
weighing in at<font color="#CCCCCC"> around</font><font color="#E5E5E5"> 6,000 lines of</font>

76
00:03:56,169 --> 00:03:59,799
code

77
00:03:56,739 --> 00:04:04,000
it is<font color="#CCCCCC"> a much</font><font color="#E5E5E5"> more pleasurable to hack on</font>

78
00:03:59,799 --> 00:04:06,579
and we're lucky enough<font color="#CCCCCC"> to reach the full</font>

79
00:04:04,000 --> 00:04:09,790
test coverage on it it would it start a

80
00:04:06,579 --> 00:04:13,930
i/o RTC started its life as<font color="#CCCCCC"> a testing</font>

81
00:04:09,790 --> 00:04:16,449
tool for the<font color="#E5E5E5"> to test availability of my</font>

82
00:04:13,930 --> 00:04:19,690
company's web RTC<font color="#E5E5E5"> endpoints and it has</font>

83
00:04:16,449 --> 00:04:23,710
grown significantly<font color="#E5E5E5"> since there as a</font>

84
00:04:19,690 --> 00:04:25,870
Python<font color="#CCCCCC"> project</font><font color="#E5E5E5"> one of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the key</font>

85
00:04:23,710 --> 00:04:29,530
selling points is<font color="#CCCCCC"> that you can tap into</font>

86
00:04:25,870 --> 00:04:31,420
<font color="#CCCCCC">the</font><font color="#E5E5E5"> broad Python ecosystem for</font><font color="#CCCCCC"> the for</font>

87
00:04:29,530 --> 00:04:36,400
its audio and video frames<font color="#E5E5E5"> a</font>

88
00:04:31,420 --> 00:04:39,160
RTC relies on the<font color="#E5E5E5"> PI AV</font><font color="#CCCCCC"> project</font><font color="#E5E5E5"> audio</font>

89
00:04:36,400 --> 00:04:41,650
<font color="#E5E5E5">and video frames</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a binding to</font>

90
00:04:39,160 --> 00:04:44,530
ffmpeg so this gives you a<font color="#E5E5E5"> lot of power</font>

91
00:04:41,650 --> 00:04:46,810
<font color="#E5E5E5">whether it's in terms</font><font color="#CCCCCC"> of reading media</font>

92
00:04:44,530 --> 00:04:51,849
from various sources whether these are

93
00:04:46,810 --> 00:04:54,430
mp4 files or<font color="#CCCCCC"> RTSP stream it's got you</font>

94
00:04:51,850 --> 00:04:57,670
covered<font color="#CCCCCC"> and it also gives you a lot of</font>

95
00:04:54,430 --> 00:05:02,380
<font color="#E5E5E5">possibilities and how you output this</font>

96
00:04:57,670 --> 00:05:03,820
<font color="#E5E5E5">these media streams the Python ecosystem</font>

97
00:05:02,380 --> 00:05:07,020
also gives you lots of<font color="#CCCCCC"> options when it</font>

98
00:05:03,820 --> 00:05:09,909
<font color="#CCCCCC">comes to building</font><font color="#E5E5E5"> to building the</font>

99
00:05:07,020 --> 00:05:13,150
signaling solutions you have<font color="#E5E5E5"> modules</font>

100
00:05:09,910 --> 00:05:15,520
<font color="#E5E5E5">such as a</font><font color="#CCCCCC"> IOH DP and WebSockets</font><font color="#E5E5E5"> which</font>

101
00:05:13,150 --> 00:05:17,229
are<font color="#E5E5E5"> very handy and you also have lots of</font>

102
00:05:15,520 --> 00:05:20,620
options<font color="#CCCCCC"> if you want to do things like</font>

103
00:05:17,230 --> 00:05:22,720
image processing<font color="#CCCCCC"> or even machine</font>

104
00:05:20,620 --> 00:05:25,390
learning with projects such<font color="#CCCCCC"> as open CV</font>

105
00:05:22,720 --> 00:05:27,700
<font color="#E5E5E5">and</font><font color="#CCCCCC"> tensorflow</font><font color="#E5E5E5"> it's easy to feed these</font>

106
00:05:25,390 --> 00:05:29,710
media streams<font color="#E5E5E5"> or the frames of these</font>

107
00:05:27,700 --> 00:05:33,479
<font color="#CCCCCC">media's media streams into these</font>

108
00:05:29,710 --> 00:05:36,669
projects<font color="#CCCCCC"> okay</font>

109
00:05:33,480 --> 00:05:40,570
a<font color="#E5E5E5"> i/o RTC comes with a growing</font>

110
00:05:36,670 --> 00:05:42,190
<font color="#E5E5E5">collection of examples built right into</font>

111
00:05:40,570 --> 00:05:44,740
it<font color="#E5E5E5"> so on the left here what we have is</font>

112
00:05:42,190 --> 00:05:48,990
streaming<font color="#E5E5E5"> big back bunny from an mp4</font>

113
00:05:44,740 --> 00:05:51,430
file into the<font color="#CCCCCC"> apart ec demo demo website</font>

114
00:05:48,990 --> 00:05:53,170
<font color="#E5E5E5">so this is something</font><font color="#CCCCCC"> you can do with 0</font>

115
00:05:51,430 --> 00:05:55,720
lines of code is an<font color="#E5E5E5"> example for that</font>

116
00:05:53,170 --> 00:05:59,200
<font color="#E5E5E5">built in and on the</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> hand</font><font color="#CCCCCC"> side is</font>

117
00:05:55,720 --> 00:06:03,220
an<font color="#CCCCCC"> example where the browser is talking</font>

118
00:05:59,200 --> 00:06:05,740
to a<font color="#CCCCCC"> Python based server which handles</font>

119
00:06:03,220 --> 00:06:08,470
both signaling and media which applies

120
00:06:05,740 --> 00:06:10,270
some<font color="#E5E5E5"> real-time processing on the video</font>

121
00:06:08,470 --> 00:06:14,580
frames and sends them<font color="#CCCCCC"> back to you</font><font color="#E5E5E5"> in</font>

122
00:06:10,270 --> 00:06:17,500
this<font color="#E5E5E5"> case with a cartoon kind of effect</font>

123
00:06:14,580 --> 00:06:21,430
what are<font color="#E5E5E5"> some of the use cases for ia IO</font>

124
00:06:17,500 --> 00:06:24,010
<font color="#E5E5E5">RTC on the data channel side you can you</font>

125
00:06:21,430 --> 00:06:26,890
can use data<font color="#E5E5E5"> channels for example to</font>

126
00:06:24,010 --> 00:06:29,140
communicate with embedded devices<font color="#E5E5E5"> or you</font>

127
00:06:26,890 --> 00:06:32,080
can have some<font color="#E5E5E5"> more esoteric use</font><font color="#CCCCCC"> cases</font>

128
00:06:29,140 --> 00:06:34,599
such as<font color="#E5E5E5"> running a VPN over data channels</font>

129
00:06:32,080 --> 00:06:37,870
and so benefiting from the firewall

130
00:06:34,600 --> 00:06:41,440
punching features of WebRTC<font color="#CCCCCC"> there's an</font>

131
00:06:37,870 --> 00:06:43,900
<font color="#E5E5E5">example for that on github</font><font color="#CCCCCC"> there's also</font>

132
00:06:41,440 --> 00:06:44,860
quite a wide range of applications which

133
00:06:43,900 --> 00:06:47,620
involve<font color="#E5E5E5"> media</font>

134
00:06:44,860 --> 00:06:49,990
processing or maybe<font color="#E5E5E5"> machine learning you</font>

135
00:06:47,620 --> 00:06:53,110
can do things like<font color="#CCCCCC"> real-time feature</font>

136
00:06:49,990 --> 00:06:56,680
extraction on the<font color="#E5E5E5"> recognition on video</font>

137
00:06:53,110 --> 00:06:59,800
streams<font color="#E5E5E5"> we had I've had some users</font>

138
00:06:56,680 --> 00:07:02,530
report they wanted to use a<font color="#CCCCCC"> IO</font><font color="#E5E5E5"> RTC for a</font>

139
00:06:59,800 --> 00:07:05,469
central server which would record video

140
00:07:02,530 --> 00:07:07,539
streams coming<font color="#E5E5E5"> from mobile devices</font><font color="#CCCCCC"> or if</font>

141
00:07:05,469 --> 00:07:10,169
you want you can also build your<font color="#E5E5E5"> own</font>

142
00:07:07,539 --> 00:07:13,150
<font color="#E5E5E5">solution to</font><font color="#CCCCCC"> securely</font><font color="#E5E5E5"> access your home</font>

143
00:07:10,169 --> 00:07:16,049
your home surveillance<font color="#CCCCCC"> cameras on the go</font>

144
00:07:13,150 --> 00:07:18,580
from your from<font color="#CCCCCC"> your mobile device and</font>

145
00:07:16,050 --> 00:07:20,439
obviously this is pythons<font color="#E5E5E5"> one of the</font>

146
00:07:18,580 --> 00:07:22,479
strengths of Python<font color="#E5E5E5"> is how expressive</font>

147
00:07:20,439 --> 00:07:25,150
the language is and how quickly<font color="#E5E5E5"> you can</font>

148
00:07:22,479 --> 00:07:30,520
<font color="#E5E5E5">prototype you can prototype solutions</font>

149
00:07:25,150 --> 00:07:32,888
<font color="#E5E5E5">using Python the syntax will be very</font>

150
00:07:30,520 --> 00:07:35,219
familiar<font color="#E5E5E5"> for anyone who has</font><font color="#CCCCCC"> used WebRTC</font>

151
00:07:32,889 --> 00:07:38,289
<font color="#CCCCCC">you're going to find your usual rtcp</font>

152
00:07:35,219 --> 00:07:40,930
rtcpeerconnection<font color="#CCCCCC"> and thanks to</font><font color="#E5E5E5"> pythons</font>

153
00:07:38,289 --> 00:07:43,539
support for<font color="#CCCCCC"> I think a</font><font color="#E5E5E5"> weight well you</font>

154
00:07:40,930 --> 00:07:45,879
just<font color="#E5E5E5"> you just do your create offers and</font>

155
00:07:43,539 --> 00:07:47,050
set local descriptions as usual<font color="#E5E5E5"> what's</font>

156
00:07:45,879 --> 00:07:47,710
unusual<font color="#E5E5E5"> is that you have some</font>

157
00:07:47,050 --> 00:07:49,629
<font color="#CCCCCC">higher-level</font>

158
00:07:47,710 --> 00:07:51,609
<font color="#E5E5E5">higher-level</font><font color="#CCCCCC"> objects such as a media</font>

159
00:07:49,629 --> 00:07:54,729
player and<font color="#E5E5E5"> a media recorder which allow</font>

160
00:07:51,610 --> 00:07:58,180
you to<font color="#CCCCCC"> either read or write your media</font>

161
00:07:54,729 --> 00:08:00,300
streams now<font color="#E5E5E5"> what if you're operating in</font>

162
00:07:58,180 --> 00:08:02,650
<font color="#E5E5E5">a really constrained environment and</font>

163
00:08:00,300 --> 00:08:04,500
pythons not even an option<font color="#CCCCCC"> for you do</font>

164
00:08:02,650 --> 00:08:07,989
you<font color="#CCCCCC"> have any good solutions for that</font>

165
00:08:04,500 --> 00:08:11,349
perhaps<font color="#CCCCCC"> I do so wrong</font><font color="#E5E5E5"> to see is another</font>

166
00:08:07,990 --> 00:08:13,089
<font color="#E5E5E5">alternative implementation but it's it</font>

167
00:08:11,349 --> 00:08:15,759
only supports<font color="#CCCCCC"> data channels so it's a</font>

168
00:08:13,089 --> 00:08:18,039
little bit specialized it is intended<font color="#E5E5E5"> to</font>

169
00:08:15,759 --> 00:08:21,219
<font color="#E5E5E5">be resource friendly so you can use it</font>

170
00:08:18,039 --> 00:08:23,860
in<font color="#E5E5E5"> better devices as well it does use to</font>

171
00:08:21,219 --> 00:08:27,960
libraries underneath which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> re and to</font>

172
00:08:23,860 --> 00:08:33,459
user<font color="#CCCCCC"> SCTP</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I originally created it in</font>

173
00:08:27,960 --> 00:08:36,218
2016<font color="#E5E5E5"> for testing purposes as well so my</font>

174
00:08:33,458 --> 00:08:38,338
former professor here<font color="#CCCCCC"> Dixon wanted to</font>

175
00:08:36,219 --> 00:08:41,649
have a tool<font color="#CCCCCC"> to showcase</font>

176
00:08:38,339 --> 00:08:44,350
well data channels and test and improve

177
00:08:41,649 --> 00:08:46,720
<font color="#CCCCCC">of</font><font color="#E5E5E5"> data channel implementations without</font>

178
00:08:44,350 --> 00:08:49,959
<font color="#E5E5E5">having to work with or untangle all the</font>

179
00:08:46,720 --> 00:08:54,949
existing browsers<font color="#E5E5E5"> implementations such</font>

180
00:08:49,959 --> 00:08:59,179
as the one used<font color="#E5E5E5"> by Chrome</font><font color="#CCCCCC"> or Firefox so</font>

181
00:08:54,949 --> 00:09:03,779
<font color="#E5E5E5">okay sure</font><font color="#CCCCCC"> see was a requirement so I</font>

182
00:08:59,179 --> 00:09:05,819
wrote<font color="#CCCCCC"> it</font><font color="#E5E5E5"> in C and well yeah as we as I</font>

183
00:09:03,779 --> 00:09:07,410
said<font color="#E5E5E5"> we</font><font color="#CCCCCC"> use it to test a couple of</font>

184
00:09:05,819 --> 00:09:11,040
things<font color="#CCCCCC"> in the dev channel and</font>

185
00:09:07,410 --> 00:09:14,399
implementations and it was being used<font color="#E5E5E5"> to</font>

186
00:09:11,040 --> 00:09:18,899
patch the<font color="#CCCCCC"> er problem which is also</font><font color="#E5E5E5"> known</font>

187
00:09:14,399 --> 00:09:20,970
as message integrity violation and then

188
00:09:18,899 --> 00:09:21,959
we back ported<font color="#CCCCCC"> app to Firefox</font><font color="#E5E5E5"> and there</font>

189
00:09:20,970 --> 00:09:24,889
were a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other improvements</font>

190
00:09:21,959 --> 00:09:27,540
<font color="#E5E5E5">where we did the same</font><font color="#CCCCCC"> thing so we also</font>

191
00:09:24,889 --> 00:09:29,910
tested throughput<font color="#E5E5E5"> of the data channels</font>

192
00:09:27,540 --> 00:09:38,969
and then back ported the necessary

193
00:09:29,910 --> 00:09:41,009
changes to<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Firefox so of course you</font>

194
00:09:38,970 --> 00:09:42,929
can<font color="#E5E5E5"> since it's now an existing</font>

195
00:09:41,009 --> 00:09:45,839
implementation you can<font color="#E5E5E5"> also use it</font><font color="#CCCCCC"> for</font>

196
00:09:42,929 --> 00:09:49,199
your<font color="#E5E5E5"> own</font><font color="#CCCCCC"> use cases such as applications</font>

197
00:09:45,839 --> 00:09:53,600
and services<font color="#E5E5E5"> so one of the things that I</font>

198
00:09:49,199 --> 00:09:56,819
have seen<font color="#E5E5E5"> that seem to be of</font><font color="#CCCCCC"> interest is</font>

199
00:09:53,600 --> 00:10:00,929
integrating it into an existing<font color="#E5E5E5"> torrent</font>

200
00:09:56,819 --> 00:10:04,559
library to implement<font color="#E5E5E5"> web torrent another</font>

201
00:10:00,929 --> 00:10:07,110
example I've<font color="#E5E5E5"> seen is</font><font color="#CCCCCC"> some people seem to</font>

202
00:10:04,559 --> 00:10:09,660
be interested<font color="#E5E5E5"> in doing</font><font color="#CCCCCC"> pee assisted CDNs</font>

203
00:10:07,110 --> 00:10:13,079
which are just<font color="#E5E5E5"> see the ends which are</font>

204
00:10:09,660 --> 00:10:17,429
being well<font color="#E5E5E5"> where you would use the peak</font>

205
00:10:13,079 --> 00:10:22,738
load by sending data<font color="#CCCCCC"> why appears appear</font>

206
00:10:17,429 --> 00:10:24,509
<font color="#E5E5E5">and you could use</font><font color="#CCCCCC"> royalty C for</font><font color="#E5E5E5"> that but</font>

207
00:10:22,739 --> 00:10:27,360
then they of course are solely embedded

208
00:10:24,509 --> 00:10:29,839
use<font color="#CCCCCC"> cases such as</font><font color="#E5E5E5"> using it for while</font>

209
00:10:27,360 --> 00:10:32,579
we've used it for<font color="#CCCCCC"> our</font><font color="#E5E5E5"> C toy so we've</font>

210
00:10:29,839 --> 00:10:35,309
made an<font color="#E5E5E5"> example of where you can control</font>

211
00:10:32,579 --> 00:10:38,189
the Lego Mindstorms<font color="#E5E5E5"> robot with it and it</font>

212
00:10:35,309 --> 00:10:40,649
worked fine but<font color="#CCCCCC"> also IOT use cases</font><font color="#E5E5E5"> are</font>

213
00:10:38,189 --> 00:10:43,049
in it as well<font color="#CCCCCC"> if there</font><font color="#E5E5E5"> is a little bit</font>

214
00:10:40,649 --> 00:10:44,970
of power on<font color="#CCCCCC"> the device so yeah</font>

215
00:10:43,049 --> 00:10:49,259
for example exterior interior

216
00:10:44,970 --> 00:10:51,540
illumination<font color="#E5E5E5"> and yeah furthermore you</font>

217
00:10:49,259 --> 00:10:52,949
can<font color="#E5E5E5"> integrate it into an</font><font color="#CCCCCC"> existing</font><font color="#E5E5E5"> web</font>

218
00:10:51,540 --> 00:10:55,139
<font color="#E5E5E5">are the same</font><font color="#CCCCCC"> computation if you don't</font>

219
00:10:52,949 --> 00:10:58,049
have a data stack yet this<font color="#E5E5E5"> might be</font>

220
00:10:55,139 --> 00:11:00,149
<font color="#CCCCCC">interesting so if you have ice and DTLS</font>

221
00:10:58,049 --> 00:11:02,220
for example in a<font color="#E5E5E5"> selective forwarding</font>

222
00:11:00,149 --> 00:11:04,319
unit then you<font color="#E5E5E5"> can integrate royalty C</font>

223
00:11:02,220 --> 00:11:06,379
into it so<font color="#E5E5E5"> you can use data channels as</font>

224
00:11:04,319 --> 00:11:06,378
well

225
00:11:09,870 --> 00:11:15,100
this is one of<font color="#E5E5E5"> the the demos</font><font color="#CCCCCC"> we wrote so</font>

226
00:11:12,910 --> 00:11:17,890
this is on the right<font color="#E5E5E5"> side we we see a</font>

227
00:11:15,100 --> 00:11:21,310
browser<font color="#CCCCCC"> that just opens multiple</font>

228
00:11:17,890 --> 00:11:24,850
terminals<font color="#CCCCCC"> and yet just accesses the the</font>

229
00:11:21,310 --> 00:11:27,579
<font color="#E5E5E5">local terminal on on that device</font><font color="#CCCCCC"> usually</font>

230
00:11:24,850 --> 00:11:30,280
<font color="#E5E5E5">by using royalty C which is kind of fun</font>

231
00:11:27,580 --> 00:11:33,640
since you can punch<font color="#CCCCCC"> through the banette</font>

232
00:11:30,280 --> 00:11:41,980
and<font color="#E5E5E5"> yeah just access your your device</font>

233
00:11:33,640 --> 00:11:44,830
without<font color="#E5E5E5"> having</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> forward any ports so</font>

234
00:11:41,980 --> 00:11:47,850
in the in the<font color="#CCCCCC"> process of producing</font><font color="#E5E5E5"> these</font>

235
00:11:44,830 --> 00:11:51,040
two alternative<font color="#CCCCCC"> WebRTC implementations</font>

236
00:11:47,850 --> 00:11:53,350
<font color="#CCCCCC">we</font><font color="#E5E5E5"> encountered a number</font><font color="#CCCCCC"> of common</font>

237
00:11:51,040 --> 00:11:55,839
problems or had some thoughts thoughts

238
00:11:53,350 --> 00:11:57,940
about this and which we wanted to share

239
00:11:55,840 --> 00:11:59,860
<font color="#E5E5E5">with</font><font color="#CCCCCC"> you first</font><font color="#E5E5E5"> of all what</font><font color="#CCCCCC"> are the</font>

240
00:11:57,940 --> 00:12:02,340
challenges<font color="#CCCCCC"> if</font><font color="#E5E5E5"> your if you decide that</font>

241
00:11:59,860 --> 00:12:05,470
you want<font color="#E5E5E5"> to spin your own web RTC</font>

242
00:12:02,340 --> 00:12:07,330
implementation personally the first<font color="#E5E5E5"> the</font>

243
00:12:05,470 --> 00:12:09,850
first problem<font color="#CCCCCC"> was finding</font><font color="#E5E5E5"> the relevant</font>

244
00:12:07,330 --> 00:12:11,830
documentation because documentation is

245
00:12:09,850 --> 00:12:14,740
spread<font color="#CCCCCC"> out across let's say two</font>

246
00:12:11,830 --> 00:12:18,160
different<font color="#CCCCCC"> worlds the</font><font color="#E5E5E5"> IETF world and a</font>

247
00:12:14,740 --> 00:12:22,180
w3c<font color="#CCCCCC"> world</font><font color="#E5E5E5"> and so you have to hunt down</font>

248
00:12:18,160 --> 00:12:25,920
all the the<font color="#CCCCCC"> RFC s or possibly even draft</font>

249
00:12:22,180 --> 00:12:27,880
<font color="#E5E5E5">RFC's and then refer back to the w3c</font>

250
00:12:25,920 --> 00:12:30,280
<font color="#E5E5E5">specs for WebRTC</font>

251
00:12:27,880 --> 00:12:32,470
and try and wrap<font color="#CCCCCC"> your mind trying</font><font color="#E5E5E5"> to</font>

252
00:12:30,280 --> 00:12:34,750
<font color="#E5E5E5">wrap your mind</font><font color="#CCCCCC"> around all this is quite</font>

253
00:12:32,470 --> 00:12:38,980
<font color="#E5E5E5">challenging so</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> we may be missing</font>

254
00:12:34,750 --> 00:12:41,200
<font color="#CCCCCC">a sort of single</font><font color="#E5E5E5"> entry point which would</font>

255
00:12:38,980 --> 00:12:44,620
refer to<font color="#CCCCCC"> these different documents</font><font color="#E5E5E5"> and</font>

256
00:12:41,200 --> 00:12:48,160
give us a better overview<font color="#E5E5E5"> of the you</font>

257
00:12:44,620 --> 00:12:50,470
<font color="#E5E5E5">know all the relevant specifications the</font>

258
00:12:48,160 --> 00:12:53,020
second<font color="#E5E5E5"> challenge is that when</font>

259
00:12:50,470 --> 00:12:56,650
implementing a WebRTC stack<font color="#E5E5E5"> is that this</font>

260
00:12:53,020 --> 00:12:58,840
is a deep stack<font color="#E5E5E5"> which involves a</font><font color="#CCCCCC"> number</font>

261
00:12:56,650 --> 00:13:02,260
<font color="#CCCCCC">of layers and</font><font color="#E5E5E5"> it's only getting bigger</font>

262
00:12:58,840 --> 00:13:03,520
<font color="#E5E5E5">you already have to you already</font><font color="#CCCCCC"> need to</font>

263
00:13:02,260 --> 00:13:06,040
deal<font color="#E5E5E5"> with things like network</font>

264
00:13:03,520 --> 00:13:09,430
connectivity<font color="#CCCCCC"> at the ice</font><font color="#E5E5E5"> level then</font>

265
00:13:06,040 --> 00:13:14,709
through encryption<font color="#E5E5E5"> using encryption key</font>

266
00:13:09,430 --> 00:13:17,829
derivation<font color="#E5E5E5"> with using DTLS RTP and s RTP</font>

267
00:13:14,710 --> 00:13:19,080
and rtcp for the for the media streams

268
00:13:17,830 --> 00:13:21,360
and

269
00:13:19,080 --> 00:13:25,620
on the data<font color="#E5E5E5"> channel side well you need</font>

270
00:13:21,360 --> 00:13:27,330
an sctp stack now unfortunately<font color="#E5E5E5"> for</font><font color="#CCCCCC"> me</font>

271
00:13:25,620 --> 00:13:31,080
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> much none of these building</font>

272
00:13:27,330 --> 00:13:36,690
blocks existed in<font color="#E5E5E5"> Python they do now</font><font color="#CCCCCC"> you</font>

273
00:13:31,080 --> 00:13:38,490
can and you we we agree<font color="#CCCCCC"> that it's it's a</font>

274
00:13:36,690 --> 00:13:40,800
good idea to spin these out into

275
00:13:38,490 --> 00:13:42,690
<font color="#CCCCCC">reusable modules so that if</font><font color="#E5E5E5"> someone else</font>

276
00:13:40,800 --> 00:13:45,060
wants to take<font color="#E5E5E5"> a different approach on</font>

277
00:13:42,690 --> 00:13:46,950
implementing<font color="#E5E5E5"> this WebRTC stack</font>

278
00:13:45,060 --> 00:13:52,589
well at least they have some<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> the</font>

279
00:13:46,950 --> 00:13:54,750
<font color="#E5E5E5">basic building blocks</font><font color="#CCCCCC"> to go on a similar</font>

280
00:13:52,589 --> 00:13:58,200
point<font color="#E5E5E5"> is how to structure your your code</font>

281
00:13:54,750 --> 00:13:59,850
if you if you've<font color="#CCCCCC"> manipulated WebRTC</font>

282
00:13:58,200 --> 00:14:01,520
let's say with a browser perspective

283
00:13:59,850 --> 00:14:05,700
you're used to<font color="#CCCCCC"> this</font><font color="#E5E5E5"> very central</font>

284
00:14:01,520 --> 00:14:07,319
rtcpeerconnection<font color="#CCCCCC"> object and from there</font>

285
00:14:05,700 --> 00:14:10,589
it's kind of not<font color="#CCCCCC"> very clear</font><font color="#E5E5E5"> how you</font>

286
00:14:07,320 --> 00:14:12,750
should structure<font color="#E5E5E5"> your code luckily ortc</font>

287
00:14:10,589 --> 00:14:15,839
<font color="#E5E5E5">object RTC which is a sort of different</font>

288
00:14:12,750 --> 00:14:18,540
<font color="#E5E5E5">approach on the same project does break</font>

289
00:14:15,839 --> 00:14:21,899
<font color="#CCCCCC">down this kind of monolithic monolithic</font>

290
00:14:18,540 --> 00:14:24,149
stack into some discrete objects and it

291
00:14:21,899 --> 00:14:25,860
provides some<font color="#E5E5E5"> some interesting guidance</font>

292
00:14:24,149 --> 00:14:26,550
in<font color="#CCCCCC"> how to structure your</font><font color="#E5E5E5"> code this was</font>

293
00:14:25,860 --> 00:14:28,529
one of<font color="#CCCCCC"> Leonard's</font>

294
00:14:26,550 --> 00:14:30,479
tips<font color="#E5E5E5"> early on when I when I</font><font color="#CCCCCC"> started</font>

295
00:14:28,529 --> 00:14:35,520
implementing a<font color="#CCCCCC"> IO RTC and I'm very</font>

296
00:14:30,480 --> 00:14:38,820
<font color="#E5E5E5">grateful for</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> another</font><font color="#CCCCCC"> issue you</font><font color="#E5E5E5"> may</font>

297
00:14:35,520 --> 00:14:41,130
<font color="#E5E5E5">run</font><font color="#CCCCCC"> into is that you</font><font color="#E5E5E5"> you may run into</font>

298
00:14:38,820 --> 00:14:44,760
<font color="#E5E5E5">parts of the specs which are ambiguous</font>

299
00:14:41,130 --> 00:14:48,899
<font color="#CCCCCC">or maybe downright downright wrong</font><font color="#E5E5E5"> and</font>

300
00:14:44,760 --> 00:14:51,689
so it may it's challenging to contribute

301
00:14:48,899 --> 00:14:53,399
back to<font color="#CCCCCC"> the w3c</font><font color="#E5E5E5"> as substantial</font>

302
00:14:51,690 --> 00:14:57,329
contributions are only<font color="#E5E5E5"> allowed for</font>

303
00:14:53,399 --> 00:14:59,610
members now there are a number<font color="#E5E5E5"> of</font>

304
00:14:57,329 --> 00:15:01,349
<font color="#CCCCCC">benefits to having</font><font color="#E5E5E5"> alternative WebRTC</font>

305
00:14:59,610 --> 00:15:03,270
implementations the most obvious for me

306
00:15:01,350 --> 00:15:05,910
<font color="#E5E5E5">is that a standard only lives up to its</font>

307
00:15:03,270 --> 00:15:08,130
<font color="#CCCCCC">name if it has</font><font color="#E5E5E5"> multiple implementers so</font>

308
00:15:05,910 --> 00:15:12,360
in this sense diversity is really a good

309
00:15:08,130 --> 00:15:14,189
thing<font color="#E5E5E5"> also well this web RTC</font>

310
00:15:12,360 --> 00:15:17,010
implementations are a lot smaller<font color="#CCCCCC"> than</font>

311
00:15:14,190 --> 00:15:18,660
<font color="#E5E5E5">the webrtc.org one and personally I find</font>

312
00:15:17,010 --> 00:15:20,880
that<font color="#E5E5E5"> a lot more fun to hack on and</font>

313
00:15:18,660 --> 00:15:22,529
easier to<font color="#CCCCCC"> integrate into</font><font color="#E5E5E5"> custom projects</font>

314
00:15:20,880 --> 00:15:25,890
<font color="#E5E5E5">in the process of developing these</font>

315
00:15:22,529 --> 00:15:28,730
WebRTC stacks we<font color="#E5E5E5"> shook out a number</font><font color="#CCCCCC"> of</font>

316
00:15:25,890 --> 00:15:31,170
bugs in the in the in<font color="#E5E5E5"> the browsers and</font>

317
00:15:28,730 --> 00:15:32,769
<font color="#E5E5E5">what for the friendlier browsers such as</font>

318
00:15:31,170 --> 00:15:36,569
Firefox it's been a pleasure to

319
00:15:32,769 --> 00:15:39,279
tribute<font color="#E5E5E5"> to the development</font><font color="#CCCCCC"> effort</font><font color="#E5E5E5"> and</font>

320
00:15:36,569 --> 00:15:42,069
having alternative<font color="#CCCCCC"> WebRTC implementation</font>

321
00:15:39,279 --> 00:15:43,899
<font color="#E5E5E5">also helps give valuable feedback to the</font>

322
00:15:42,069 --> 00:15:46,779
<font color="#E5E5E5">standardization</font><font color="#CCCCCC"> process that you're able</font>

323
00:15:43,899 --> 00:15:48,790
to<font color="#E5E5E5"> prototype new features or possibly</font>

324
00:15:46,779 --> 00:15:54,720
explore<font color="#E5E5E5"> areas which were not originally</font>

325
00:15:48,790 --> 00:15:54,719
envisioned in<font color="#CCCCCC"> the in</font><font color="#E5E5E5"> in the WebRTC scope</font>

326
00:15:55,470 --> 00:16:01,059
<font color="#CCCCCC">okay so now</font><font color="#E5E5E5"> that we've heard</font><font color="#CCCCCC"> about the</font>

327
00:15:59,199 --> 00:16:03,128
benefits of alternative<font color="#E5E5E5"> implementations</font>

328
00:16:01,059 --> 00:16:06,910
so maybe they<font color="#E5E5E5"> are there</font><font color="#CCCCCC"> areas where we</font>

329
00:16:03,129 --> 00:16:09,629
<font color="#CCCCCC">can</font><font color="#E5E5E5"> improve and I think they are so one</font>

330
00:16:06,910 --> 00:16:13,809
of<font color="#E5E5E5"> the things is</font><font color="#CCCCCC"> that browsers</font><font color="#E5E5E5"> are still</font>

331
00:16:09,629 --> 00:16:16,749
surprisingly far away from spec well

332
00:16:13,809 --> 00:16:18,309
compliance so if you want to get this

333
00:16:16,749 --> 00:16:21,309
<font color="#CCCCCC">change</font><font color="#E5E5E5"> maybe it is the time to</font><font color="#CCCCCC"> get</font>

334
00:16:18,309 --> 00:16:23,649
<font color="#CCCCCC">involved</font><font color="#E5E5E5"> there's another problem</font><font color="#CCCCCC"> that is</font>

335
00:16:21,309 --> 00:16:26,499
<font color="#CCCCCC">the data channel</font><font color="#E5E5E5"> lobby I think is</font>

336
00:16:23,649 --> 00:16:30,129
underrepresented<font color="#E5E5E5"> in the specification</font>

337
00:16:26,499 --> 00:16:33,160
process<font color="#CCCCCC"> so which which also</font><font color="#E5E5E5"> brings me to</font>

338
00:16:30,129 --> 00:16:35,129
the next point which<font color="#CCCCCC"> is how can we</font><font color="#E5E5E5"> make</font>

339
00:16:33,160 --> 00:16:39,549
<font color="#CCCCCC">the specification process</font><font color="#E5E5E5"> may be more</font>

340
00:16:35,129 --> 00:16:41,980
transparent<font color="#E5E5E5"> maybe more visible</font><font color="#CCCCCC"> so we can</font>

341
00:16:39,549 --> 00:16:44,049
involve developers and users to provide

342
00:16:41,980 --> 00:16:46,959
<font color="#E5E5E5">direct feedback instead of you know</font>

343
00:16:44,049 --> 00:16:49,629
posting posting it on Stack Overflow and

344
00:16:46,959 --> 00:16:52,929
<font color="#E5E5E5">then be done with it</font>

345
00:16:49,629 --> 00:16:56,529
last but<font color="#E5E5E5"> not least from the feedback</font>

346
00:16:52,929 --> 00:16:59,350
<font color="#CCCCCC">that we get is that</font><font color="#E5E5E5"> web policy is still</font>

347
00:16:56,529 --> 00:17:01,600
misunderstood by developers so some of

348
00:16:59,350 --> 00:17:03,850
<font color="#E5E5E5">them think it's mainly used for</font>

349
00:17:01,600 --> 00:17:07,029
<font color="#CCCCCC">client-to-server</font><font color="#E5E5E5"> while there's actually</font>

350
00:17:03,850 --> 00:17:08,409
mostly<font color="#CCCCCC"> peer to peer they of</font><font color="#E5E5E5"> course use</font>

351
00:17:07,029 --> 00:17:10,569
<font color="#CCCCCC">cases</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> you can use it for</font><font color="#E5E5E5"> client</font>

352
00:17:08,409 --> 00:17:13,419
<font color="#E5E5E5">server balance it tend to be peer to</font>

353
00:17:10,569 --> 00:17:16,059
peer<font color="#E5E5E5"> and the purpose of the whole</font>

354
00:17:13,419 --> 00:17:18,730
signaling process and how<font color="#E5E5E5"> it</font><font color="#CCCCCC"> works are</font>

355
00:17:16,059 --> 00:17:22,750
the mechanics work in the web RTC stack

356
00:17:18,730 --> 00:17:24,819
they are widely misunderstood<font color="#E5E5E5"> so we</font>

357
00:17:22,750 --> 00:17:26,949
think the documentation could maybe be

358
00:17:24,819 --> 00:17:28,119
improved<font color="#CCCCCC"> for example in the Mozilla</font>

359
00:17:26,949 --> 00:17:30,820
developer Network

360
00:17:28,119 --> 00:17:34,059
but maybe you should<font color="#CCCCCC"> also</font><font color="#E5E5E5"> post new blog</font>

361
00:17:30,820 --> 00:17:35,260
posts that<font color="#E5E5E5"> update the existing</font><font color="#CCCCCC"> ones</font>

362
00:17:34,059 --> 00:17:38,520
because<font color="#E5E5E5"> they're quite</font><font color="#CCCCCC"> a lot of work</font>

363
00:17:35,260 --> 00:17:41,379
quite a lot that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> well outdated and</font>

364
00:17:38,520 --> 00:17:43,870
yeah

365
00:17:41,380 --> 00:17:46,880
so with that we<font color="#E5E5E5"> thank you for listening</font>

366
00:17:43,870 --> 00:17:49,129
<font color="#E5E5E5">we have listed some further alternative</font>

367
00:17:46,880 --> 00:17:53,120
<font color="#CCCCCC">WebRTC implementations there if you want</font>

368
00:17:49,130 --> 00:18:01,130
to<font color="#E5E5E5"> look at them</font><font color="#CCCCCC"> yeah do</font><font color="#E5E5E5"> you have any</font>

369
00:17:53,120 --> 00:18:02,689
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> had some time left in</font>

370
00:18:01,130 --> 00:18:05,390
the meantime I'm going to we're<font color="#CCCCCC"> going to</font>

371
00:18:02,690 --> 00:18:08,000
<font color="#E5E5E5">let this figure sink in which is kind of</font>

372
00:18:05,390 --> 00:18:11,120
the ratio<font color="#E5E5E5"> between the the the number of</font>

373
00:18:08,000 --> 00:18:12,730
lines<font color="#E5E5E5"> of</font><font color="#CCCCCC"> code in webrtc.org and in</font><font color="#E5E5E5"> AI</font>

374
00:18:11,120 --> 00:18:22,729
ortc

375
00:18:12,730 --> 00:18:24,410
yeah so<font color="#CCCCCC"> um for AI ortc</font>

376
00:18:22,730 --> 00:18:28,640
<font color="#CCCCCC">what are you using for</font><font color="#E5E5E5"> congestion</font>

377
00:18:24,410 --> 00:18:30,050
control for the media side at congestion

378
00:18:28,640 --> 00:18:30,830
control on the media<font color="#CCCCCC"> side at the moment</font>

379
00:18:30,050 --> 00:18:33,700
<font color="#CCCCCC">weather</font>

380
00:18:30,830 --> 00:18:35,659
I mean congestion control is is

381
00:18:33,700 --> 00:18:36,980
implemented for<font color="#CCCCCC"> data channels that's</font>

382
00:18:35,660 --> 00:18:41,600
part<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> SCTP</font>

383
00:18:36,980 --> 00:18:44,170
spec the there is no congestion<font color="#E5E5E5"> control</font>

384
00:18:41,600 --> 00:18:47,709
per se<font color="#E5E5E5"> on the media side there is</font>

385
00:18:44,170 --> 00:18:51,500
<font color="#E5E5E5">receiver estimated maximum bandwidth and</font>

386
00:18:47,710 --> 00:18:55,640
so the the video<font color="#E5E5E5"> codec the video codec</font>

387
00:18:51,500 --> 00:18:58,970
<font color="#CCCCCC">do the</font><font color="#E5E5E5"> vp8 codec does respond to</font><font color="#CCCCCC"> - to</font>

388
00:18:55,640 --> 00:19:00,980
this and will adjust its its bandwidth

389
00:18:58,970 --> 00:19:02,390
<font color="#E5E5E5">but I mean for audio for instance</font>

390
00:19:00,980 --> 00:19:03,860
there's absolutely no provision for<font color="#E5E5E5"> this</font>

391
00:19:02,390 --> 00:19:05,600
either you have<font color="#E5E5E5"> the bandwidth or you</font>

392
00:19:03,860 --> 00:19:09,379
don't and communication breaks down<font color="#CCCCCC"> I</font>

393
00:19:05,600 --> 00:19:11,840
hope I answered the question last

394
00:19:09,380 --> 00:19:20,630
<font color="#CCCCCC">question a quick one otherwise you can</font>

395
00:19:11,840 --> 00:19:23,090
meet<font color="#E5E5E5"> the guys around here so I I</font>

396
00:19:20,630 --> 00:19:25,550
completely agree on documentation<font color="#CCCCCC"> it</font>

397
00:19:23,090 --> 00:19:28,639
sucks<font color="#CCCCCC"> and the Mozilla developer Network</font>

398
00:19:25,550 --> 00:19:33,080
is just wrong 99%<font color="#E5E5E5"> of the time</font><font color="#CCCCCC"> when it</font>

399
00:19:28,640 --> 00:19:35,240
comes<font color="#E5E5E5"> to WebRTC which is a real shame so</font>

400
00:19:33,080 --> 00:19:37,100
yeah we should all it's not really a

401
00:19:35,240 --> 00:19:40,670
<font color="#E5E5E5">question until I'm completely agreeing</font>

402
00:19:37,100 --> 00:19:43,909
with you<font color="#E5E5E5"> on that front</font><font color="#CCCCCC"> I just want to</font>

403
00:19:40,670 --> 00:19:46,730
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that no point</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> number you</font>

404
00:19:43,910 --> 00:19:50,990
guys there's an awful lot<font color="#CCCCCC"> of AV stuff in</font>

405
00:19:46,730 --> 00:19:54,110
that SDK<font color="#CCCCCC"> codebase and it's it's</font>

406
00:19:50,990 --> 00:19:56,840
difficult<font color="#E5E5E5"> to</font><font color="#CCCCCC"> talk about</font><font color="#E5E5E5"> a total number</font>

407
00:19:54,110 --> 00:20:01,939
of lines<font color="#E5E5E5"> when we're talking about</font>

408
00:19:56,840 --> 00:20:05,419
transport and and encryption and<font color="#E5E5E5"> AV and</font>

409
00:20:01,940 --> 00:20:07,520
I<font color="#CCCCCC"> don't want people</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> think that</font><font color="#E5E5E5"> oh why</font>

410
00:20:05,420 --> 00:20:08,929
is the Google<font color="#E5E5E5"> one really really big and</font>

411
00:20:07,520 --> 00:20:10,940
yours is really really small

412
00:20:08,929 --> 00:20:12,500
there they<font color="#CCCCCC"> are definitely this</font><font color="#E5E5E5"> is just</font>

413
00:20:10,940 --> 00:20:16,520
obvious this<font color="#E5E5E5"> is kind of being a bit</font>

414
00:20:12,500 --> 00:20:19,100
cheeky<font color="#E5E5E5"> but still within the the 6k the</font>

415
00:20:16,520 --> 00:20:22,549
<font color="#E5E5E5">6k lines of code that</font><font color="#CCCCCC"> I mentioned you do</font>

416
00:20:19,100 --> 00:20:25,280
have a full ice implementation support

417
00:20:22,549 --> 00:20:27,799
for the<font color="#CCCCCC"> d-4d TLS and all the way up to</font>

418
00:20:25,280 --> 00:20:30,230
<font color="#CCCCCC">two</font><font color="#E5E5E5"> receiver estimated maximum maximum</font>

419
00:20:27,799 --> 00:20:33,440
<font color="#E5E5E5">bandwidth but still I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that</font>

420
00:20:30,230 --> 00:20:36,290
somewhere<font color="#E5E5E5"> for sure for sure</font><font color="#CCCCCC"> AOR</font><font color="#E5E5E5"> to see</font>

421
00:20:33,440 --> 00:20:37,910
does more<font color="#CCCCCC"> than 0.5</font><font color="#E5E5E5"> percent of the of the</font>

422
00:20:36,290 --> 00:20:40,220
features I'm not<font color="#E5E5E5"> claiming full feature</font>

423
00:20:37,910 --> 00:20:42,530
parity but still there's a massive

424
00:20:40,220 --> 00:20:47,030
Perito effect going on here

425
00:20:42,530 --> 00:20:48,918
and concerning documentation on<font color="#CCCCCC"> mdn you</font>

426
00:20:47,030 --> 00:20:52,910
can you can contribute things such as

427
00:20:48,919 --> 00:20:55,669
such<font color="#CCCCCC"> as you know</font><font color="#E5E5E5"> what browsers support</font>

428
00:20:52,910 --> 00:20:58,100
which features<font color="#CCCCCC"> i've already</font><font color="#E5E5E5"> we've both</font>

429
00:20:55,669 --> 00:20:59,630
<font color="#E5E5E5">done some some contributions and to this</font>

430
00:20:58,100 --> 00:21:02,939
<font color="#E5E5E5">effect and</font><font color="#CCCCCC"> i encourage you to do the</font>

431
00:20:59,630 --> 00:21:10,569
same<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> thank you</font>

432
00:21:02,940 --> 00:21:10,569
[Applause]

