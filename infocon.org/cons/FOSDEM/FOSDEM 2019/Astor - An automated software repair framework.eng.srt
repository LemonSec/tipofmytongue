1
00:00:04,670 --> 00:00:09,240
<font color="#CCCCCC">okay it</font><font color="#E5E5E5"> turns to</font><font color="#CCCCCC"> a lot for</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> mutation</font>

2
00:00:07,260 --> 00:00:11,790
<font color="#CCCCCC">my name is Matthias Martinez I work in</font>

3
00:00:09,240 --> 00:00:14,190
the<font color="#CCCCCC"> University of the France</font>

4
00:00:11,790 --> 00:00:22,020
that's quite near from here<font color="#CCCCCC"> from Belgium</font>

5
00:00:14,190 --> 00:00:25,650
<font color="#E5E5E5">and I will present to collaborate yes so</font>

6
00:00:22,020 --> 00:00:28,890
and I would<font color="#CCCCCC"> present a</font><font color="#E5E5E5"> collaboration that</font>

7
00:00:25,650 --> 00:00:30,330
we<font color="#CCCCCC"> have done with multi mum Bruges maybe</font>

8
00:00:28,890 --> 00:00:32,279
you know<font color="#E5E5E5"> Martina produce</font>

9
00:00:30,330 --> 00:00:34,800
she's working around the mattress<font color="#E5E5E5"> over</font>

10
00:00:32,279 --> 00:00:38,880
repair<font color="#CCCCCC"> ask me he was working with</font><font color="#E5E5E5"> me</font><font color="#CCCCCC"> at</font>

11
00:00:34,800 --> 00:00:41,209
the University of Lille so today the

12
00:00:38,880 --> 00:00:44,300
goal is to<font color="#E5E5E5"> present</font><font color="#CCCCCC"> after after</font><font color="#E5E5E5"> research</font>

13
00:00:41,210 --> 00:00:48,320
library or framework for building

14
00:00:44,300 --> 00:00:51,949
automated<font color="#E5E5E5"> silver repair approaches okay</font>

15
00:00:48,320 --> 00:00:55,230
so<font color="#CCCCCC"> the role of this talk is to introduce</font>

16
00:00:51,950 --> 00:00:58,890
automatic<font color="#CCCCCC"> software</font><font color="#E5E5E5"> repair and also</font>

17
00:00:55,230 --> 00:01:00,930
percent<font color="#E5E5E5"> Astro so what is a stir utter is</font>

18
00:00:58,890 --> 00:01:04,199
a framework for building<font color="#E5E5E5"> automatic</font>

19
00:01:00,930 --> 00:01:06,780
several repair approaches<font color="#E5E5E5"> actually it it</font>

20
00:01:04,199 --> 00:01:10,200
<font color="#E5E5E5">provides some routines that developer</font>

21
00:01:06,780 --> 00:01:13,080
can't reduce and also<font color="#E5E5E5"> provides the</font>

22
00:01:10,200 --> 00:01:15,119
implementation<font color="#E5E5E5"> of five repair approach</font>

23
00:01:13,080 --> 00:01:17,959
<font color="#E5E5E5">there are already implemented and are</font>

24
00:01:15,119 --> 00:01:27,240
already ready<font color="#E5E5E5"> for use</font>

25
00:01:17,959 --> 00:01:30,899
so how can we<font color="#CCCCCC"> use after so afterwards</font>

26
00:01:27,240 --> 00:01:35,399
<font color="#CCCCCC">use optional for let's say the world</font>

27
00:01:30,899 --> 00:01:37,619
<font color="#CCCCCC">Academical</font><font color="#E5E5E5"> world researchers from</font>

28
00:01:35,399 --> 00:01:39,060
different universities that<font color="#E5E5E5"> the news</font>

29
00:01:37,619 --> 00:01:42,360
<font color="#CCCCCC">doctor for creating new</font><font color="#E5E5E5"> repair</font>

30
00:01:39,060 --> 00:01:46,259
approaches or for extending<font color="#E5E5E5"> those that</font>

31
00:01:42,360 --> 00:01:50,780
are already<font color="#CCCCCC"> provided but</font><font color="#E5E5E5"> also was used</font>

32
00:01:46,259 --> 00:01:54,300
<font color="#CCCCCC">for some</font><font color="#E5E5E5"> super partition practitioners</font>

33
00:01:50,780 --> 00:01:57,179
which use<font color="#CCCCCC"> doctor for instance for</font>

34
00:01:54,300 --> 00:02:02,069
creating software<font color="#CCCCCC"> boots one of those</font>

35
00:01:57,179 --> 00:02:04,770
example is<font color="#E5E5E5"> reppin later is here the</font>

36
00:02:02,069 --> 00:02:09,810
<font color="#CCCCCC">reference that was created for</font><font color="#E5E5E5"> our</font>

37
00:02:04,770 --> 00:02:12,840
<font color="#E5E5E5">similar</font><font color="#CCCCCC"> brain that was here in for them</font>

38
00:02:09,810 --> 00:02:18,000
so<font color="#E5E5E5"> you can discuss with him that was a</font>

39
00:02:12,840 --> 00:02:21,960
<font color="#CCCCCC">server</font><font color="#E5E5E5"> would that</font><font color="#CCCCCC"> propose</font><font color="#E5E5E5"> pull request</font>

40
00:02:18,000 --> 00:02:25,380
with bug<font color="#CCCCCC"> fixes so that's enough for</font>

41
00:02:21,960 --> 00:02:28,290
<font color="#E5E5E5">today is</font><font color="#CCCCCC"> to introduce automatic cell</font>

42
00:02:25,380 --> 00:02:31,670
repair the domain then<font color="#E5E5E5"> to try to reduce</font>

43
00:02:28,290 --> 00:02:36,420
<font color="#E5E5E5">after the extensions that can be done</font>

44
00:02:31,670 --> 00:02:41,130
<font color="#E5E5E5">I'm done experiments so what is automata</font>

45
00:02:36,420 --> 00:02:43,230
<font color="#E5E5E5">stove repair so basically is and so</font>

46
00:02:41,130 --> 00:02:47,160
imagine<font color="#CCCCCC"> that we have a program there is</font>

47
00:02:43,230 --> 00:02:51,750
here I call<font color="#E5E5E5"> P that has a bug so the idea</font>

48
00:02:47,160 --> 00:02:55,079
<font color="#E5E5E5">is to</font><font color="#CCCCCC"> take our approach let's say right</font>

49
00:02:51,750 --> 00:02:58,470
<font color="#CCCCCC">now abort I will not mention</font><font color="#E5E5E5"> details of</font>

50
00:02:55,080 --> 00:03:01,070
what is this approach that<font color="#CCCCCC"> takes added</font>

51
00:02:58,470 --> 00:03:04,280
specification of the program

52
00:03:01,070 --> 00:03:07,769
specification<font color="#E5E5E5"> of P also we can call it</font>

53
00:03:04,280 --> 00:03:15,870
<font color="#CCCCCC">Coronets Oracle</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> idea is to</font>

54
00:03:07,770 --> 00:03:18,870
<font color="#CCCCCC">create a verb from P that is that his</font>

55
00:03:15,870 --> 00:03:21,090
behavior is<font color="#CCCCCC"> hospitable</font><font color="#E5E5E5"> with respect with</font>

56
00:03:18,870 --> 00:03:25,950
<font color="#E5E5E5">the with the specification or with</font>

57
00:03:21,090 --> 00:03:31,110
<font color="#CCCCCC">oracle coroners oracle</font><font color="#E5E5E5"> additionally this</font>

58
00:03:25,950 --> 00:03:33,959
<font color="#E5E5E5">approach can consume in addition to the</font>

59
00:03:31,110 --> 00:03:35,790
source code under<font color="#E5E5E5"> the specification</font><font color="#CCCCCC"> some</font>

60
00:03:33,959 --> 00:03:36,900
artifacts for instance back<font color="#E5E5E5"> up our</font>

61
00:03:35,790 --> 00:03:41,670
report

62
00:03:36,900 --> 00:03:45,269
<font color="#E5E5E5">Tracie's etc so in this table</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will</font>

63
00:03:41,670 --> 00:03:49,649
discuss or I will mention<font color="#CCCCCC"> two kind of</font>

64
00:03:45,269 --> 00:03:55,380
approaches<font color="#CCCCCC"> for automotive repair</font><font color="#E5E5E5"> the</font>

65
00:03:49,650 --> 00:03:59,780
first<font color="#E5E5E5"> of them are the test suite repair</font>

66
00:03:55,380 --> 00:04:03,420
approaches that they use test cases as

67
00:03:59,780 --> 00:04:03,959
<font color="#CCCCCC">Oracle as</font><font color="#E5E5E5"> specification so what is the</font>

68
00:04:03,420 --> 00:04:08,160
idea

69
00:04:03,959 --> 00:04:10,290
imagine I will<font color="#E5E5E5"> cup the param</font><font color="#CCCCCC"> P the</font>

70
00:04:08,160 --> 00:04:13,200
specification will be the test case<font color="#E5E5E5"> so</font>

71
00:04:10,290 --> 00:04:15,540
that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that we we have one fill in</font>

72
00:04:13,200 --> 00:04:20,070
this case that<font color="#CCCCCC"> means that the program</font><font color="#E5E5E5"> is</font>

73
00:04:15,540 --> 00:04:22,530
buggy<font color="#CCCCCC"> okay however it will</font><font color="#E5E5E5"> cup all the</font>

74
00:04:20,070 --> 00:04:26,190
test cases<font color="#CCCCCC"> there past that means that</font>

75
00:04:22,530 --> 00:04:27,900
the program<font color="#E5E5E5"> is</font><font color="#CCCCCC"> okay is valid is valid</font><font color="#E5E5E5"> we</font>

76
00:04:26,190 --> 00:04:29,490
respect with<font color="#E5E5E5"> the specification</font><font color="#CCCCCC"> that</font>

77
00:04:27,900 --> 00:04:31,700
means we will respect with the<font color="#E5E5E5"> test</font>

78
00:04:29,490 --> 00:04:31,700
cases

79
00:04:31,740 --> 00:04:39,760
so that's the idea so the idea of this

80
00:04:34,630 --> 00:04:41,469
approach is<font color="#CCCCCC"> to turn the behavior of</font><font color="#E5E5E5"> to</font>

81
00:04:39,760 --> 00:04:46,570
change the behavior<font color="#CCCCCC"> of the poem</font><font color="#E5E5E5"> with the</font>

82
00:04:41,470 --> 00:04:48,790
goal<font color="#CCCCCC"> of passing on the test case okay so</font>

83
00:04:46,570 --> 00:04:52,540
and the<font color="#E5E5E5"> second</font><font color="#CCCCCC"> family of repair approach</font>

84
00:04:48,790 --> 00:04:54,850
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> mentioned</font><font color="#CCCCCC"> today is the family</font><font color="#E5E5E5"> of</font>

85
00:04:52,540 --> 00:04:58,210
generate<font color="#CCCCCC"> invalidate approach so the idea</font>

86
00:04:54,850 --> 00:05:00,310
is to<font color="#CCCCCC"> generate</font><font color="#E5E5E5"> a candidate patch to</font>

87
00:04:58,210 --> 00:05:02,469
validate and to see and<font color="#CCCCCC"> to see</font><font color="#E5E5E5"> the</font>

88
00:05:00,310 --> 00:05:06,580
result<font color="#E5E5E5"> that means in this case whether</font>

89
00:05:02,470 --> 00:05:09,190
<font color="#E5E5E5">it pass all the test cases if the result</font>

90
00:05:06,580 --> 00:05:12,580
is<font color="#E5E5E5"> not so says so</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> generate another</font>

91
00:05:09,190 --> 00:05:17,620
patch until it find a candidate patch

92
00:05:12,580 --> 00:05:21,250
that pass all the test cases<font color="#E5E5E5"> so</font><font color="#CCCCCC"> they</font>

93
00:05:17,620 --> 00:05:23,410
were<font color="#E5E5E5"> percent a lot of approaches from</font>

94
00:05:21,250 --> 00:05:25,389
<font color="#E5E5E5">this</font><font color="#CCCCCC"> family the suite</font><font color="#E5E5E5"> base repair</font>

95
00:05:23,410 --> 00:05:28,660
approaches during the last<font color="#CCCCCC"> 10 years but</font>

96
00:05:25,389 --> 00:05:32,789
<font color="#CCCCCC">the problem was</font><font color="#E5E5E5"> that those approach was</font>

97
00:05:28,660 --> 00:05:36,760
present in academia so<font color="#CCCCCC"> and</font><font color="#E5E5E5"> the</font>

98
00:05:32,789 --> 00:05:39,760
prototypes the<font color="#E5E5E5"> consoles were not always</font>

99
00:05:36,760 --> 00:05:44,669
available<font color="#CCCCCC"> or in</font><font color="#E5E5E5"> some cases they were</font>

100
00:05:39,760 --> 00:05:49,860
available but<font color="#CCCCCC"> for living languages okay</font>

101
00:05:44,669 --> 00:05:54,430
so<font color="#E5E5E5"> our idea was to create a platform for</font>

102
00:05:49,860 --> 00:05:57,180
<font color="#CCCCCC">Shaba that means</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> Rishabha</font><font color="#E5E5E5"> and for</font>

103
00:05:54,430 --> 00:06:00,760
repair<font color="#CCCCCC"> Shaba code</font>

104
00:05:57,180 --> 00:06:03,060
our idea was<font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> the</font>

105
00:06:00,760 --> 00:06:05,680
<font color="#CCCCCC">state-of-the-art</font><font color="#E5E5E5"> with their approach and</font>

106
00:06:03,060 --> 00:06:11,590
<font color="#CCCCCC">also to provide some extension points to</font>

107
00:06:05,680 --> 00:06:14,770
create<font color="#E5E5E5"> new repair approaches so we</font>

108
00:06:11,590 --> 00:06:16,929
create after that the name came from

109
00:06:14,770 --> 00:06:22,090
<font color="#E5E5E5">automatic server transformation for</font>

110
00:06:16,930 --> 00:06:27,580
repair<font color="#CCCCCC"> ok</font>

111
00:06:22,090 --> 00:06:32,590
<font color="#CCCCCC">other is available in github is quite</font>

112
00:06:27,580 --> 00:06:35,650
easy to<font color="#CCCCCC"> use so basically here</font><font color="#E5E5E5"> I put an</font>

113
00:06:32,590 --> 00:06:38,020
<font color="#CCCCCC">example of the command here we have an</font>

114
00:06:35,650 --> 00:06:40,030
<font color="#CCCCCC">argument that is</font><font color="#E5E5E5"> mode and here we</font>

115
00:06:38,020 --> 00:06:44,380
specify the name of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> repair approach</font>

116
00:06:40,030 --> 00:06:44,950
that we want to<font color="#E5E5E5"> execute</font><font color="#CCCCCC"> for instance</font>

117
00:06:44,380 --> 00:06:47,890
here

118
00:06:44,950 --> 00:06:51,580
we<font color="#E5E5E5"> present three</font><font color="#CCCCCC"> shell jump rope shake</font>

119
00:06:47,890 --> 00:06:56,219
<font color="#CCCCCC">kalyan shame which I will explain</font><font color="#E5E5E5"> our do</font>

120
00:06:51,580 --> 00:06:59,729
a small<font color="#E5E5E5"> summary of them</font><font color="#CCCCCC"> for up to four</font>

121
00:06:56,220 --> 00:07:01,870
then we say<font color="#CCCCCC"> ok mode here the repair</font>

122
00:06:59,730 --> 00:07:03,760
<font color="#E5E5E5">approach that we want to run the</font>

123
00:07:01,870 --> 00:07:05,320
location of the of<font color="#E5E5E5"> the application that</font>

124
00:07:03,760 --> 00:07:08,680
we want<font color="#CCCCCC"> to repair what is the source</font>

125
00:07:05,320 --> 00:07:17,490
code the dependencies of these projects

126
00:07:08,680 --> 00:07:19,840
that<font color="#E5E5E5"> we want to repair and output so</font>

127
00:07:17,490 --> 00:07:22,570
which other the repair approaches that

128
00:07:19,840 --> 00:07:25,020
we have implemented<font color="#E5E5E5"> so the front</font><font color="#CCCCCC"> one is</font>

129
00:07:22,570 --> 00:07:27,700
shrimp rope which is<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the most</font>

130
00:07:25,020 --> 00:07:31,710
cited<font color="#E5E5E5"> paper in the field of</font><font color="#CCCCCC"> automotive</font>

131
00:07:27,700 --> 00:07:36,310
<font color="#CCCCCC">repair the idea is that shrimp</font><font color="#E5E5E5"> rocks</font>

132
00:07:31,710 --> 00:07:39,460
create patches by inserting replacing

133
00:07:36,310 --> 00:07:44,980
our remove<font color="#CCCCCC"> statement</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> worked a level</font>

134
00:07:39,460 --> 00:07:46,750
level of statement then another<font color="#CCCCCC"> River</font>

135
00:07:44,980 --> 00:07:48,960
approach that we<font color="#E5E5E5"> have implemented</font><font color="#CCCCCC"> same</font>

136
00:07:46,750 --> 00:07:52,660
<font color="#CCCCCC">with</font><font color="#E5E5E5"> repair is a very simple approach</font>

137
00:07:48,960 --> 00:07:55,719
that<font color="#E5E5E5"> basically it mutates operators for</font>

138
00:07:52,660 --> 00:07:59,470
instance from here from<font color="#E5E5E5"> a greater than</font><font color="#CCCCCC"> B</font>

139
00:07:55,720 --> 00:08:03,090
<font color="#CCCCCC">imitates to a</font><font color="#E5E5E5"> grating unequals to be</font>

140
00:07:59,470 --> 00:08:05,470
very easy<font color="#CCCCCC"> very simple</font><font color="#E5E5E5"> repair operators</font>

141
00:08:03,090 --> 00:08:09,729
and<font color="#CCCCCC"> shaykh ali</font><font color="#E5E5E5"> that the goal is</font><font color="#CCCCCC"> to</font>

142
00:08:05,470 --> 00:08:13,270
<font color="#CCCCCC">remove code</font><font color="#E5E5E5"> okay remove statement</font>

143
00:08:09,730 --> 00:08:17,080
it adds written statement to<font color="#CCCCCC"> replace</font>

144
00:08:13,270 --> 00:08:18,909
introspection etc this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the summary of</font>

145
00:08:17,080 --> 00:08:23,010
some of<font color="#CCCCCC"> the approaches that we have</font>

146
00:08:18,910 --> 00:08:23,010
implemented<font color="#E5E5E5"> are already</font><font color="#CCCCCC"> include</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> astro</font>

147
00:08:23,370 --> 00:08:28,720
<font color="#E5E5E5">we have developed</font><font color="#CCCCCC"> also new repair</font>

148
00:08:26,920 --> 00:08:32,670
approaches for instance<font color="#CCCCCC"> condiment</font><font color="#E5E5E5"> that</font>

149
00:08:28,720 --> 00:08:37,900
<font color="#CCCCCC">here the goal is to replace expressions</font>

150
00:08:32,669 --> 00:08:40,750
that by managing plate that we create by

151
00:08:37,900 --> 00:08:44,350
by analyzing the<font color="#E5E5E5"> shortcode are creating</font>

152
00:08:40,750 --> 00:08:46,930
new instances and repair there is an

153
00:08:44,350 --> 00:08:49,780
extension of<font color="#E5E5E5"> utter that for example</font>

154
00:08:46,930 --> 00:08:52,650
sorry that use similarity of<font color="#E5E5E5"> code for</font>

155
00:08:49,780 --> 00:08:52,650
creating<font color="#CCCCCC"> new</font><font color="#E5E5E5"> patches</font>

156
00:08:54,240 --> 00:09:04,490
so here we have the URL to<font color="#CCCCCC"> plumb after</font>

157
00:09:01,369 --> 00:09:08,369
here<font color="#E5E5E5"> one example</font><font color="#CCCCCC"> as I mentioned before</font>

158
00:09:04,490 --> 00:09:10,889
the mall<font color="#CCCCCC"> the location</font><font color="#E5E5E5"> the dependencies</font>

159
00:09:08,369 --> 00:09:13,499
you<font color="#CCCCCC"> can also specify the file in this</font>

160
00:09:10,889 --> 00:09:18,269
<font color="#E5E5E5">case we did at least one file in this</font>

161
00:09:13,499 --> 00:09:21,209
<font color="#CCCCCC">case the idea after is to confirm the</font>

162
00:09:18,269 --> 00:09:26,149
<font color="#E5E5E5">behavior</font><font color="#CCCCCC"> of the program with</font><font color="#E5E5E5"> the goal of</font>

163
00:09:21,209 --> 00:09:29,638
<font color="#CCCCCC">that list element case</font><font color="#E5E5E5"> pass but also it</font>

164
00:09:26,149 --> 00:09:30,629
<font color="#E5E5E5">tried to</font><font color="#CCCCCC"> keep the behavior</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

165
00:09:29,639 --> 00:09:32,279
correct

166
00:09:30,629 --> 00:09:37,199
that means the test cases are not

167
00:09:32,279 --> 00:09:39,929
failing that continues passing all the

168
00:09:37,199 --> 00:09:42,300
test cases<font color="#E5E5E5"> and there are a lot of</font>

169
00:09:39,929 --> 00:09:46,679
arguments<font color="#CCCCCC"> for</font><font color="#E5E5E5"> instance max time there is</font>

170
00:09:42,300 --> 00:09:55,529
a<font color="#E5E5E5"> time that we</font><font color="#CCCCCC"> give up to find to search</font>

171
00:09:46,679 --> 00:09:59,279
a solution<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so what is the output</font><font color="#CCCCCC"> we</font>

172
00:09:55,529 --> 00:10:01,559
provide<font color="#E5E5E5"> three outputs the first one the</font>

173
00:09:59,279 --> 00:10:04,529
standard output<font color="#E5E5E5"> that show here a lot</font><font color="#CCCCCC"> of</font>

174
00:10:01,559 --> 00:10:08,299
<font color="#CCCCCC">information for</font><font color="#E5E5E5"> instance here is one in</font>

175
00:10:04,529 --> 00:10:14,519
<font color="#E5E5E5">a</font><font color="#CCCCCC"> defier of the solution and the patch</font>

176
00:10:08,299 --> 00:10:16,879
then we<font color="#E5E5E5"> provide a stand an output in</font>

177
00:10:14,519 --> 00:10:21,329
JSON<font color="#CCCCCC"> format okay the same</font><font color="#E5E5E5"> information</font>

178
00:10:16,879 --> 00:10:23,850
<font color="#E5E5E5">and also in the file</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> we write the</font>

179
00:10:21,329 --> 00:10:25,319
<font color="#CCCCCC">Patchett format the Patchett</font><font color="#E5E5E5"> version of</font>

180
00:10:23,850 --> 00:10:28,350
the<font color="#E5E5E5"> program</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the fight</font><font color="#CCCCCC"> that was</font>

181
00:10:25,319 --> 00:10:34,170
modifier and<font color="#E5E5E5"> the patch that</font><font color="#CCCCCC"> you can</font>

182
00:10:28,350 --> 00:10:38,699
<font color="#E5E5E5">apply them into in your problem so how</font>

183
00:10:34,170 --> 00:10:41,699
does it<font color="#E5E5E5"> work so the inputs of aster are</font>

184
00:10:38,699 --> 00:10:43,859
the<font color="#CCCCCC"> buggy</font><font color="#E5E5E5"> program and the oracle</font>

185
00:10:41,699 --> 00:10:47,248
directly in this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> e are</font><font color="#E5E5E5"> the test</font>

186
00:10:43,860 --> 00:10:50,850
cases so<font color="#CCCCCC"> the first thing that</font><font color="#E5E5E5"> actually</font>

187
00:10:47,249 --> 00:10:53,429
<font color="#E5E5E5">does is to compete the suspicion is of</font>

188
00:10:50,850 --> 00:10:56,670
components that<font color="#CCCCCC"> means that for each</font>

189
00:10:53,429 --> 00:10:59,699
statement of the program it<font color="#E5E5E5"> compute</font>

190
00:10:56,670 --> 00:11:04,110
<font color="#CCCCCC">where we put the probability that</font><font color="#E5E5E5"> this</font>

191
00:10:59,699 --> 00:11:08,199
<font color="#CCCCCC">daemon is a classified oh</font><font color="#E5E5E5"> okay it's a</font>

192
00:11:04,110 --> 00:11:11,050
number from 0 to<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and it's</font>

193
00:11:08,200 --> 00:11:16,899
it<font color="#E5E5E5"> computes the probability by running</font>

194
00:11:11,050 --> 00:11:20,019
<font color="#E5E5E5">the test cases and measuring whether how</font>

195
00:11:16,899 --> 00:11:25,029
many of them<font color="#E5E5E5"> company or failing test</font>

196
00:11:20,019 --> 00:11:28,120
case cover the<font color="#CCCCCC"> the line then integrates</font>

197
00:11:25,029 --> 00:11:29,920
<font color="#E5E5E5">a broad representation that means here</font>

198
00:11:28,120 --> 00:11:32,230
<font color="#E5E5E5">we call</font><font color="#CCCCCC"> two poor emollient a</font>

199
00:11:29,920 --> 00:11:36,969
modification point<font color="#E5E5E5"> we'll see later</font>

200
00:11:32,230 --> 00:11:39,550
so while they're given amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> time he</font>

201
00:11:36,970 --> 00:11:41,190
selects one<font color="#E5E5E5"> suspicious one sufficient</font>

202
00:11:39,550 --> 00:11:45,130
line<font color="#CCCCCC"> okay</font>

203
00:11:41,190 --> 00:11:47,829
we call it modification point then we

204
00:11:45,130 --> 00:11:51,820
select an operator we applied the

205
00:11:47,829 --> 00:11:56,079
generate to apply the repair operator to

206
00:11:51,820 --> 00:11:59,050
<font color="#E5E5E5">the statement to generate a patch and</font>

207
00:11:56,079 --> 00:12:04,089
<font color="#E5E5E5">then we validate the patch that means to</font>

208
00:11:59,050 --> 00:12:08,170
execute<font color="#CCCCCC"> all the</font><font color="#E5E5E5"> test</font><font color="#CCCCCC"> cases so after we</font>

209
00:12:04,089 --> 00:12:10,810
end this loop if we find some solutions

210
00:12:08,170 --> 00:12:16,660
we<font color="#CCCCCC"> solve the solutions</font><font color="#E5E5E5"> according</font><font color="#CCCCCC"> to some</font>

211
00:12:10,810 --> 00:12:19,719
criteria<font color="#E5E5E5"> so every step can be customized</font>

212
00:12:16,660 --> 00:12:22,029
and<font color="#E5E5E5"> missa we can overwrite the behavior</font>

213
00:12:19,720 --> 00:12:26,949
the default behavior<font color="#CCCCCC"> of one repair</font>

214
00:12:22,029 --> 00:12:31,930
approach so this is the list<font color="#E5E5E5"> of</font>

215
00:12:26,949 --> 00:12:35,229
<font color="#CCCCCC">extension points you can see that here</font>

216
00:12:31,930 --> 00:12:37,180
each extension<font color="#E5E5E5"> point can be execute in</font>

217
00:12:35,230 --> 00:12:39,130
one<font color="#CCCCCC"> stabler workflow</font><font color="#E5E5E5"> for instance here</font>

218
00:12:37,180 --> 00:12:42,719
the for localization we can plug in<font color="#CCCCCC"> a</font>

219
00:12:39,130 --> 00:12:45,040
new<font color="#E5E5E5"> implementation or for localization</font>

220
00:12:42,720 --> 00:12:46,510
here in the parameter presentation you

221
00:12:45,040 --> 00:12:49,870
can say<font color="#E5E5E5"> okay instead of working at the</font>

222
00:12:46,510 --> 00:12:54,579
level<font color="#CCCCCC"> of statements we can</font><font color="#E5E5E5"> work at the</font>

223
00:12:49,870 --> 00:12:57,010
level<font color="#E5E5E5"> of expressions thank here we can</font>

224
00:12:54,579 --> 00:13:02,140
say<font color="#E5E5E5"> okay we have</font><font color="#CCCCCC"> these new repair</font>

225
00:12:57,010 --> 00:13:04,870
operators so this is the list of

226
00:13:02,140 --> 00:13:06,040
extensions<font color="#CCCCCC"> that we provide</font><font color="#E5E5E5"> for instance</font>

227
00:13:04,870 --> 00:13:10,690
for localization we have two

228
00:13:06,040 --> 00:13:17,120
implementations<font color="#E5E5E5"> the list of operators</font>

229
00:13:10,690 --> 00:13:21,529
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> provide etc so</font>

230
00:13:17,120 --> 00:13:24,769
how how we use the extension points so

231
00:13:21,529 --> 00:13:27,050
it's quite<font color="#CCCCCC"> easy so imagine that</font><font color="#E5E5E5"> we have</font>

232
00:13:24,769 --> 00:13:30,139
this<font color="#E5E5E5"> extension</font><font color="#CCCCCC"> Bank that</font><font color="#E5E5E5"> it's for</font>

233
00:13:27,050 --> 00:13:33,109
localization<font color="#CCCCCC"> the for localization</font><font color="#E5E5E5"> what</font>

234
00:13:30,139 --> 00:13:35,600
it does is to<font color="#CCCCCC"> fit the</font><font color="#E5E5E5"> probability of</font>

235
00:13:33,110 --> 00:13:38,779
<font color="#CCCCCC">suspiciousness on each multiplication</font>

236
00:13:35,600 --> 00:13:41,629
point in each segment of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> program so</font>

237
00:13:38,779 --> 00:13:44,089
they<font color="#CCCCCC"> da</font><font color="#E5E5E5"> - we have an argument</font><font color="#CCCCCC"> that is</font>

238
00:13:41,629 --> 00:13:46,100
for<font color="#CCCCCC"> localization</font><font color="#E5E5E5"> and here we put the</font>

239
00:13:44,089 --> 00:13:48,139
value<font color="#CCCCCC"> in the inner we have two</font>

240
00:13:46,100 --> 00:13:52,160
approaches for for localization one is

241
00:13:48,139 --> 00:13:55,249
<font color="#CCCCCC">shorter the other is kikuna spoon we</font>

242
00:13:52,160 --> 00:13:56,569
simply choose<font color="#CCCCCC"> the value but</font><font color="#E5E5E5"> what happen</font>

243
00:13:55,249 --> 00:14:01,730
if you want to create a new folio

244
00:13:56,569 --> 00:14:03,498
collation approach so imagine that<font color="#CCCCCC"> we</font>

245
00:14:01,730 --> 00:14:07,819
create a new<font color="#E5E5E5"> fuller collation approach</font>

246
00:14:03,499 --> 00:14:10,730
that<font color="#CCCCCC"> that new code must implement an</font>

247
00:14:07,819 --> 00:14:12,649
interface that<font color="#E5E5E5"> we provide and then we</font>

248
00:14:10,730 --> 00:14:17,480
pass the<font color="#CCCCCC"> name of the class that</font>

249
00:14:12,649 --> 00:14:19,550
<font color="#E5E5E5">implement this interface that we have so</font>

250
00:14:17,480 --> 00:14:21,970
in the documentation<font color="#CCCCCC"> on</font><font color="#E5E5E5"> photo we provide</font>

251
00:14:19,550 --> 00:14:24,889
for<font color="#CCCCCC"> each modification point which is the</font>

252
00:14:21,970 --> 00:14:27,350
<font color="#E5E5E5">argument to use in the command line</font><font color="#CCCCCC"> and</font>

253
00:14:24,889 --> 00:14:29,749
the interface to implement<font color="#E5E5E5"> or after</font>

254
00:14:27,350 --> 00:14:43,660
class<font color="#CCCCCC"> that should we implement for each</font>

255
00:14:29,749 --> 00:14:48,410
modification point<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so I will take</font>

256
00:14:43,660 --> 00:14:50,980
three<font color="#E5E5E5"> modification points one is</font><font color="#CCCCCC"> the</font>

257
00:14:48,410 --> 00:14:53,480
granularity<font color="#CCCCCC"> of</font><font color="#E5E5E5"> modification points so</font>

258
00:14:50,980 --> 00:14:57,769
the<font color="#E5E5E5"> metrication point are all the places</font>

259
00:14:53,480 --> 00:14:59,600
<font color="#E5E5E5">that repair approach all this let's say</font>

260
00:14:57,769 --> 00:15:06,679
or the place that<font color="#CCCCCC"> the repair approach</font>

261
00:14:59,600 --> 00:15:09,829
can modify<font color="#E5E5E5"> okay imagine</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> have</font>

262
00:15:06,679 --> 00:15:11,149
<font color="#CCCCCC">this code that has a bug</font><font color="#E5E5E5"> there are some</font>

263
00:15:09,829 --> 00:15:14,359
approaches that<font color="#E5E5E5"> work at the level</font><font color="#CCCCCC"> of</font>

264
00:15:11,149 --> 00:15:16,459
statements<font color="#E5E5E5"> that means that each</font>

265
00:15:14,360 --> 00:15:20,029
modification<font color="#E5E5E5"> point will be one</font>

266
00:15:16,459 --> 00:15:24,679
statements<font color="#E5E5E5"> okay then the repair approach</font>

267
00:15:20,029 --> 00:15:26,929
will transform each modification<font color="#CCCCCC"> but</font>

268
00:15:24,679 --> 00:15:30,709
that means in the case<font color="#CCCCCC"> of statement you</font>

269
00:15:26,929 --> 00:15:32,030
will replace remove or<font color="#E5E5E5"> add and</font>

270
00:15:30,710 --> 00:15:35,300
other statements tell me that the

271
00:15:32,030 --> 00:15:39,949
granularity of the that works<font color="#CCCCCC"> a repair</font>

272
00:15:35,300 --> 00:15:43,880
approach is a segment<font color="#E5E5E5"> however we can't</font>

273
00:15:39,950 --> 00:15:47,120
change this granularity to<font color="#CCCCCC"> work at the</font>

274
00:15:43,880 --> 00:15:49,790
final grain level for instance to work

275
00:15:47,120 --> 00:15:52,310
at the<font color="#CCCCCC"> level of expression that</font><font color="#E5E5E5"> means</font>

276
00:15:49,790 --> 00:15:56,150
that in this<font color="#E5E5E5"> case modification points</font>

277
00:15:52,310 --> 00:15:59,150
<font color="#CCCCCC">our expression that means that instead</font>

278
00:15:56,150 --> 00:16:02,390
of<font color="#E5E5E5"> replacing one statement</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can work</font>

279
00:15:59,150 --> 00:16:04,130
and we place a particular<font color="#CCCCCC"> expression for</font>

280
00:16:02,390 --> 00:16:05,300
instance in this case<font color="#E5E5E5"> this method</font>

281
00:16:04,130 --> 00:16:10,390
invocation there is an expression

282
00:16:05,300 --> 00:16:14,750
<font color="#CCCCCC">express expression solid or dissipator</font>

283
00:16:10,390 --> 00:16:16,400
so see another example<font color="#CCCCCC"> then say okay</font>

284
00:16:14,750 --> 00:16:18,680
instead<font color="#CCCCCC"> of working at a lower expression</font>

285
00:16:16,400 --> 00:16:21,610
<font color="#E5E5E5">we want</font><font color="#CCCCCC"> to work at the level</font><font color="#E5E5E5"> of boolean</font>

286
00:16:18,680 --> 00:16:24,319
expression okay<font color="#E5E5E5"> we want to modify only</font>

287
00:16:21,610 --> 00:16:28,340
<font color="#E5E5E5">expression there which evolution is</font>

288
00:16:24,320 --> 00:16:31,060
boolean so that means that<font color="#CCCCCC"> with</font><font color="#E5E5E5"> this</font>

289
00:16:28,340 --> 00:16:38,450
<font color="#E5E5E5">exchange point we can work or we can</font>

290
00:16:31,060 --> 00:16:41,329
choose which granularity we want to to

291
00:16:38,450 --> 00:16:48,190
work<font color="#CCCCCC"> to meet - which one</font><font color="#E5E5E5"> rarity we want</font>

292
00:16:41,330 --> 00:16:51,440
to<font color="#E5E5E5"> generate</font><font color="#CCCCCC"> the patch here we provide</font>

293
00:16:48,190 --> 00:16:57,080
three or four different implementation

294
00:16:51,440 --> 00:16:59,620
<font color="#E5E5E5">but you can create more so then</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> that</font>

295
00:16:57,080 --> 00:17:04,010
we have choose the granularity<font color="#E5E5E5"> that</font>

296
00:16:59,620 --> 00:17:08,560
<font color="#CCCCCC">after does is to create from the program</font>

297
00:17:04,010 --> 00:17:14,470
<font color="#E5E5E5">under repair DST we use a spoon for that</font>

298
00:17:08,560 --> 00:17:17,720
then we compute the<font color="#CCCCCC"> suspicions</font><font color="#E5E5E5"> of each</font>

299
00:17:14,470 --> 00:17:19,550
line<font color="#CCCCCC"> so actually the deployment ation</font><font color="#E5E5E5"> of</font>

300
00:17:17,720 --> 00:17:22,490
<font color="#E5E5E5">polarization</font><font color="#CCCCCC"> I will</font><font color="#E5E5E5"> use work at the</font>

301
00:17:19,550 --> 00:17:24,200
<font color="#E5E5E5">level of</font><font color="#CCCCCC"> study</font><font color="#E5E5E5"> of lines so</font><font color="#CCCCCC"> we put for</font>

302
00:17:22,490 --> 00:17:30,680
each line of<font color="#CCCCCC"> the code it suspiciousness</font>

303
00:17:24,200 --> 00:17:33,860
values then we'd say<font color="#E5E5E5"> okay given an</font><font color="#CCCCCC"> MST</font>

304
00:17:30,680 --> 00:17:37,010
<font color="#CCCCCC">we</font><font color="#E5E5E5"> are interesting of some only some</font>

305
00:17:33,860 --> 00:17:39,620
subset of ast node<font color="#E5E5E5"> okay</font>

306
00:17:37,010 --> 00:17:41,450
that is according with the granularity

307
00:17:39,620 --> 00:17:44,449
of<font color="#CCCCCC"> a going</font><font color="#E5E5E5"> to consume point that we want</font>

308
00:17:41,450 --> 00:17:46,249
<font color="#E5E5E5">imagine that we want to</font>

309
00:17:44,450 --> 00:17:48,259
cut the level of statements we only

310
00:17:46,249 --> 00:17:49,789
choose they know there are statements<font color="#E5E5E5"> or</font>

311
00:17:48,259 --> 00:17:52,999
if you want<font color="#E5E5E5"> to work</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> level of</font>

312
00:17:49,789 --> 00:17:56,080
boolean expression we only choose they

313
00:17:52,999 --> 00:17:58,369
they know there are boolean expressions

314
00:17:56,080 --> 00:18:01,779
<font color="#E5E5E5">and then we create the modification</font>

315
00:17:58,369 --> 00:18:08,029
point<font color="#CCCCCC"> by combining the information form</font>

316
00:18:01,779 --> 00:18:11,330
granularity and solutions<font color="#E5E5E5"> so finally</font>

317
00:18:08,029 --> 00:18:13,419
once that we have the<font color="#CCCCCC"> auto</font><font color="#E5E5E5"> modification</font>

318
00:18:11,330 --> 00:18:17,480
<font color="#CCCCCC">point</font><font color="#E5E5E5"> sorry</font>

319
00:18:13,419 --> 00:18:20,059
we need to the repair<font color="#CCCCCC"> operator that</font>

320
00:18:17,480 --> 00:18:26,149
needs the operator<font color="#E5E5E5"> that we apply on each</font>

321
00:18:20,059 --> 00:18:27,739
location<font color="#E5E5E5"> so for that Ethel has an</font>

322
00:18:26,149 --> 00:18:31,459
<font color="#CCCCCC">extension</font><font color="#E5E5E5"> point to say okay</font><font color="#CCCCCC"> which are</font>

323
00:18:27,739 --> 00:18:34,129
<font color="#E5E5E5">the</font><font color="#CCCCCC"> operators</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> provide we can</font>

324
00:18:31,460 --> 00:18:37,809
reduce the operator<font color="#CCCCCC"> that we have already</font>

325
00:18:34,129 --> 00:18:42,949
in implement<font color="#E5E5E5"> or we can create new ones</font>

326
00:18:37,809 --> 00:18:47,178
so here also we<font color="#CCCCCC"> have an an argument that</font>

327
00:18:42,950 --> 00:18:50,600
is operator space that we can put the

328
00:18:47,179 --> 00:18:52,690
value<font color="#CCCCCC"> of the operators in this case</font>

329
00:18:50,600 --> 00:18:58,509
<font color="#CCCCCC">suppression means all the operator that</font>

330
00:18:52,690 --> 00:19:01,669
<font color="#CCCCCC">removes code but</font><font color="#E5E5E5"> also we can create new</font>

331
00:18:58,509 --> 00:19:05,080
operators by here we have the interface

332
00:19:01,669 --> 00:19:10,009
<font color="#E5E5E5">or solid</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> cloud</font><font color="#E5E5E5"> with some method</font>

333
00:19:05,080 --> 00:19:12,889
<font color="#E5E5E5">one of them is it can be</font><font color="#CCCCCC"> applied to</font>

334
00:19:10,009 --> 00:19:15,049
point if you receive a modification

335
00:19:12,889 --> 00:19:18,590
point<font color="#CCCCCC"> on me for instance I statement and</font>

336
00:19:15,049 --> 00:19:21,340
<font color="#CCCCCC">were tuned to a</font><font color="#E5E5E5"> force whether this</font>

337
00:19:18,590 --> 00:19:25,428
operator can<font color="#CCCCCC"> be applied to this point</font>

338
00:19:21,340 --> 00:19:27,158
and another method<font color="#CCCCCC"> with that must be</font>

339
00:19:25,429 --> 00:19:30,230
<font color="#CCCCCC">implemented by your own operator is</font>

340
00:19:27,159 --> 00:19:34,489
given<font color="#E5E5E5"> a modification point to create an</font>

341
00:19:30,230 --> 00:19:38,119
instance of a list of operator instance

342
00:19:34,489 --> 00:19:42,879
<font color="#E5E5E5">that means at least with possible</font>

343
00:19:38,119 --> 00:19:42,879
changes that can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> done</font><font color="#E5E5E5"> in this point</font>

344
00:19:44,470 --> 00:19:51,320
here the same if<font color="#E5E5E5"> we have new operators</font>

345
00:19:47,299 --> 00:19:55,840
<font color="#CCCCCC">in new</font><font color="#E5E5E5"> classes we can</font><font color="#CCCCCC"> pass in the</font><font color="#E5E5E5"> repair</font>

346
00:19:51,320 --> 00:19:55,840
operator<font color="#E5E5E5"> argument</font>

347
00:19:57,039 --> 00:20:05,870
<font color="#E5E5E5">okay finally we have some extension</font>

348
00:20:02,570 --> 00:20:08,360
point there are<font color="#E5E5E5"> related with ingredients</font>

349
00:20:05,870 --> 00:20:10,760
<font color="#CCCCCC">so in that case for instance</font><font color="#E5E5E5"> here</font>

350
00:20:08,360 --> 00:20:12,709
<font color="#E5E5E5">ingredient pull definition selection of</font>

351
00:20:10,760 --> 00:20:17,210
ingredients<font color="#E5E5E5"> so what is ingredient in</font>

352
00:20:12,710 --> 00:20:20,780
this context<font color="#E5E5E5"> so articles to kind of</font>

353
00:20:17,210 --> 00:20:24,470
operators<font color="#E5E5E5"> one is what we call autonomous</font>

354
00:20:20,780 --> 00:20:27,110
operator<font color="#E5E5E5"> they are used for instance for</font>

355
00:20:24,470 --> 00:20:29,380
<font color="#E5E5E5">sure mutation repair their operators</font>

356
00:20:27,110 --> 00:20:34,840
<font color="#E5E5E5">that don't need any information okay</font>

357
00:20:29,380 --> 00:20:41,260
imagine<font color="#CCCCCC"> that this if so we can apply a</font>

358
00:20:34,840 --> 00:20:46,270
mutation in this operator in the greater

359
00:20:41,260 --> 00:20:49,879
and we have here different candidate

360
00:20:46,270 --> 00:20:53,059
however<font color="#E5E5E5"> we have another</font><font color="#CCCCCC"> category that is</font>

361
00:20:49,880 --> 00:20:56,320
ingredient base operator<font color="#CCCCCC"> that means that</font>

362
00:20:53,059 --> 00:21:00,289
this operator to synthesize the patch

363
00:20:56,320 --> 00:21:03,530
need some information<font color="#E5E5E5"> this information</font>

364
00:21:00,289 --> 00:21:05,980
<font color="#E5E5E5">can be another piece of piece of code</font><font color="#CCCCCC"> a</font>

365
00:21:03,530 --> 00:21:08,870
template whatever

366
00:21:05,980 --> 00:21:13,490
for instance<font color="#E5E5E5"> a jump rope has two</font>

367
00:21:08,870 --> 00:21:15,860
ingredient base operators<font color="#E5E5E5"> out</font><font color="#CCCCCC"> and</font>

368
00:21:13,490 --> 00:21:17,000
replace<font color="#E5E5E5"> that</font><font color="#CCCCCC"> means we marginally we have</font>

369
00:21:15,860 --> 00:21:21,080
<font color="#CCCCCC">an ax</font><font color="#E5E5E5"> statement that we</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> replace</font>

370
00:21:17,000 --> 00:21:25,789
<font color="#E5E5E5">one statement we need another statement</font>

371
00:21:21,080 --> 00:21:28,309
to be the replacement so imagine this

372
00:21:25,789 --> 00:21:32,658
case that<font color="#E5E5E5"> we have this suspicious</font>

373
00:21:28,309 --> 00:21:35,809
statement<font color="#E5E5E5"> this assignment and we have an</font>

374
00:21:32,659 --> 00:21:39,080
operator<font color="#E5E5E5"> that from simple that say add a</font>

375
00:21:35,809 --> 00:21:42,260
new<font color="#CCCCCC"> statement after these suspicious</font><font color="#E5E5E5"> so</font>

376
00:21:39,080 --> 00:21:46,120
here the question<font color="#E5E5E5"> is</font><font color="#CCCCCC"> okay what determine</font>

377
00:21:42,260 --> 00:21:50,440
we should add so after has an ingredient

378
00:21:46,120 --> 00:21:55,250
pool which has all the candidate

379
00:21:50,440 --> 00:21:58,240
<font color="#E5E5E5">statement that can be inserted</font><font color="#CCCCCC"> here then</font>

380
00:21:55,250 --> 00:22:03,650
<font color="#CCCCCC">it will select</font><font color="#E5E5E5"> one let's say random</font>

381
00:21:58,240 --> 00:22:07,650
let's say return<font color="#CCCCCC"> m and</font><font color="#E5E5E5"> create the new</font>

382
00:22:03,650 --> 00:22:10,910
<font color="#E5E5E5">patch so this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> point</font>

383
00:22:07,650 --> 00:22:13,740
to create<font color="#E5E5E5"> different strategies for</font>

384
00:22:10,910 --> 00:22:16,680
<font color="#E5E5E5">creating the</font><font color="#CCCCCC"> ingredient pool so that</font>

385
00:22:13,740 --> 00:22:20,220
<font color="#CCCCCC">means to create</font><font color="#E5E5E5"> in this database</font><font color="#CCCCCC"> of</font>

386
00:22:16,680 --> 00:22:22,800
possible<font color="#E5E5E5"> ingredients possible that we</font>

387
00:22:20,220 --> 00:22:26,280
<font color="#E5E5E5">will use to</font><font color="#CCCCCC"> create the patch for</font>

388
00:22:22,800 --> 00:22:29,460
selecting one<font color="#CCCCCC"> of them and</font><font color="#E5E5E5"> for</font>

389
00:22:26,280 --> 00:22:31,620
transforming this ingredient for

390
00:22:29,460 --> 00:22:36,020
<font color="#CCCCCC">Institue replace the variables there are</font>

391
00:22:31,620 --> 00:22:42,449
not on the scope here<font color="#E5E5E5"> we have</font><font color="#CCCCCC"> implement</font>

392
00:22:36,020 --> 00:22:45,780
for this extension<font color="#CCCCCC"> point strategies that</font>

393
00:22:42,450 --> 00:22:49,460
are materialized in the<font color="#CCCCCC"> developer</font>

394
00:22:45,780 --> 00:22:52,440
approach<font color="#E5E5E5"> basically here we have</font>

395
00:22:49,460 --> 00:22:54,240
<font color="#CCCCCC">implement one strategy to select</font>

396
00:22:52,440 --> 00:22:58,440
ingredients<font color="#E5E5E5"> according to</font><font color="#CCCCCC"> the similarity</font>

397
00:22:54,240 --> 00:23:00,480
and another tradition for adapt<font color="#E5E5E5"> and</font>

398
00:22:58,440 --> 00:23:04,710
Englander has<font color="#CCCCCC"> but every auto</font><font color="#E5E5E5"> stop</font>

399
00:23:00,480 --> 00:23:10,490
according<font color="#E5E5E5"> to the semantic meaning of the</font>

400
00:23:04,710 --> 00:23:13,500
identifiers<font color="#E5E5E5"> so we have done several</font>

401
00:23:10,490 --> 00:23:18,679
evaluation of<font color="#CCCCCC"> vaster or the approach</font>

402
00:23:13,500 --> 00:23:18,679
<font color="#CCCCCC">they are built of aster one of them was</font>

403
00:23:19,040 --> 00:23:26,870
<font color="#CCCCCC">it's based on</font><font color="#E5E5E5"> one data set</font><font color="#CCCCCC"> of bugs</font><font color="#E5E5E5"> that</font>

404
00:23:22,290 --> 00:23:30,470
the name is<font color="#CCCCCC"> different for shape that has</font>

405
00:23:26,870 --> 00:23:35,189
different<font color="#CCCCCC"> open-source implement</font>

406
00:23:30,470 --> 00:23:37,710
approaches<font color="#CCCCCC"> and sorry m</font><font color="#E5E5E5"> bugs</font><font color="#CCCCCC"> imagine that</font>

407
00:23:35,190 --> 00:23:43,080
here<font color="#E5E5E5"> each box or for</font><font color="#CCCCCC"> instance</font><font color="#E5E5E5"> for common</font>

408
00:23:37,710 --> 00:23:49,530
lands<font color="#E5E5E5"> the data set has 65 bugs and on</font>

409
00:23:43,080 --> 00:23:52,189
average they have 2000<font color="#E5E5E5"> test cases</font><font color="#CCCCCC"> that</font>

410
00:23:49,530 --> 00:23:57,899
means that there<font color="#CCCCCC"> are large applications</font>

411
00:23:52,190 --> 00:24:01,320
and here<font color="#CCCCCC"> our approach will pair for</font>

412
00:23:57,900 --> 00:24:09,720
<font color="#CCCCCC">instance</font><font color="#E5E5E5"> in this experiment repair 33</font>

413
00:24:01,320 --> 00:24:14,700
bags out of 224 that means<font color="#E5E5E5"> a 40%</font><font color="#CCCCCC"> 14%</font>

414
00:24:09,720 --> 00:24:16,770
<font color="#CCCCCC">story tell</font><font color="#E5E5E5"> me that this repair</font><font color="#CCCCCC"> this</font>

415
00:24:14,700 --> 00:24:19,650
dispatches that we are that we<font color="#CCCCCC"> are able</font>

416
00:24:16,770 --> 00:24:20,790
<font color="#CCCCCC">to generate produce that all the test</font>

417
00:24:19,650 --> 00:24:24,840
cases

418
00:24:20,790 --> 00:24:29,610
<font color="#CCCCCC">Pass</font><font color="#E5E5E5"> okay but it doesn't</font><font color="#CCCCCC"> mean</font><font color="#E5E5E5"> that the</font>

419
00:24:24,840 --> 00:24:33,990
repair are correct<font color="#E5E5E5"> why because there are</font>

420
00:24:29,610 --> 00:24:37,439
some changes<font color="#E5E5E5"> that produce that the all</font>

421
00:24:33,990 --> 00:24:39,450
<font color="#E5E5E5">the</font><font color="#CCCCCC"> failing test case pass bar</font><font color="#E5E5E5"> are not</font>

422
00:24:37,440 --> 00:24:42,240
correct<font color="#CCCCCC"> and while you</font><font color="#E5E5E5"> are not right</font>

423
00:24:39,450 --> 00:24:46,470
because<font color="#E5E5E5"> the specification is weak</font><font color="#CCCCCC"> that</font>

424
00:24:42,240 --> 00:24:53,190
<font color="#CCCCCC">means that is missing some input for</font>

425
00:24:46,470 --> 00:24:54,600
validate that<font color="#E5E5E5"> is the candidate patch so</font>

426
00:24:53,190 --> 00:25:00,030
the thing<font color="#CCCCCC"> that we are working right now</font>

427
00:24:54,600 --> 00:25:04,379
<font color="#E5E5E5">is to try</font><font color="#CCCCCC"> to create new test cases to</font>

428
00:25:00,030 --> 00:25:12,960
have more test cases<font color="#E5E5E5"> for validating our</font>

429
00:25:04,380 --> 00:25:17,130
patches so conclusions<font color="#E5E5E5"> so I have</font><font color="#CCCCCC"> percent</font>

430
00:25:12,960 --> 00:25:19,790
<font color="#E5E5E5">I repaired framework for for repair our</font>

431
00:25:17,130 --> 00:25:25,470
code<font color="#E5E5E5"> and</font><font color="#CCCCCC"> its implementation Java</font>

432
00:25:19,790 --> 00:25:30,200
includes<font color="#E5E5E5"> three repairs</font><font color="#CCCCCC"> algorithm that</font>

433
00:25:25,470 --> 00:25:33,690
were presented<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the research community</font>

434
00:25:30,200 --> 00:25:37,680
<font color="#E5E5E5">we also provide some extension points</font>

435
00:25:33,690 --> 00:25:39,390
for creating new<font color="#E5E5E5"> approaches so the so</font>

436
00:25:37,680 --> 00:25:42,360
called is available so if you have any

437
00:25:39,390 --> 00:25:44,610
questions or bug fix or improvement

438
00:25:42,360 --> 00:25:49,610
elaborations<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> hesitate to to</font>

439
00:25:44,610 --> 00:25:56,520
contact us<font color="#CCCCCC"> okay okay thank you notes</font>

440
00:25:49,610 --> 00:25:56,520
[Applause]

441
00:26:15,950 --> 00:26:42,000
so the question does yes yes<font color="#E5E5E5"> actually</font>

442
00:26:37,370 --> 00:26:46,139
<font color="#E5E5E5">yes</font><font color="#CCCCCC"> so conventional is that our approach</font>

443
00:26:42,000 --> 00:26:50,280
<font color="#CCCCCC">is of line</font><font color="#E5E5E5"> we cover with me then we</font>

444
00:26:46,140 --> 00:26:54,030
instrumented code<font color="#E5E5E5"> okay we run all the</font>

445
00:26:50,280 --> 00:26:57,420
test cases<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> that we have all these</font>

446
00:26:54,030 --> 00:27:00,540
tremendous<font color="#CCCCCC"> program</font><font color="#E5E5E5"> and using this</font>

447
00:26:57,420 --> 00:27:04,290
<font color="#CCCCCC">information</font><font color="#E5E5E5"> we compute the suspicions of</font>

448
00:27:00,540 --> 00:27:07,649
each line of the<font color="#E5E5E5"> program that is based</font>

449
00:27:04,290 --> 00:27:10,050
<font color="#E5E5E5">on the coverage of</font><font color="#CCCCCC"> the test cases and</font>

450
00:27:07,650 --> 00:27:15,630
based on this<font color="#E5E5E5"> information of suspicion</font>

451
00:27:10,050 --> 00:27:18,000
is we<font color="#CCCCCC"> compute some suspicions</font><font color="#E5E5E5"> matrix to</font>

452
00:27:15,630 --> 00:27:21,960
know to have an order<font color="#E5E5E5"> of the list of</font>

453
00:27:18,000 --> 00:27:24,390
suspicions and then we apply<font color="#E5E5E5"> prepare</font>

454
00:27:21,960 --> 00:27:29,570
operators over<font color="#E5E5E5"> these</font><font color="#CCCCCC"> suspicionless</font>

455
00:27:24,390 --> 00:27:29,570
statements yes

456
00:27:32,690 --> 00:27:49,039
so which sort<font color="#CCCCCC"> of which a function okay</font>

457
00:27:45,710 --> 00:27:52,909
<font color="#CCCCCC">so</font><font color="#E5E5E5"> he</font><font color="#CCCCCC"> question the question is</font><font color="#E5E5E5"> about the</font>

458
00:27:49,039 --> 00:27:56,859
speed<font color="#CCCCCC"> of patching</font><font color="#E5E5E5"> so the time that that</font>

459
00:27:52,909 --> 00:27:59,359
the<font color="#E5E5E5"> approach is</font><font color="#CCCCCC"> takes to find a patch so</font>

460
00:27:56,859 --> 00:28:02,720
it<font color="#E5E5E5"> will depend of</font><font color="#CCCCCC"> the surface space of</font>

461
00:27:59,359 --> 00:28:07,309
the of the program for some patches the

462
00:28:02,720 --> 00:28:10,639
search<font color="#E5E5E5"> space is quite small because the</font>

463
00:28:07,309 --> 00:28:13,549
suspicion is<font color="#E5E5E5"> it says super space is a</font>

464
00:28:10,639 --> 00:28:19,449
small so for<font color="#E5E5E5"> that it will take</font><font color="#CCCCCC"> some</font>

465
00:28:13,549 --> 00:28:24,168
minute for others it<font color="#CCCCCC"> takes around hours</font>

466
00:28:19,450 --> 00:28:27,200
hours so so it actually will run the

467
00:28:24,169 --> 00:28:29,679
experiments<font color="#E5E5E5"> for two three</font><font color="#CCCCCC"> four hours</font><font color="#E5E5E5"> no</font>

468
00:28:27,200 --> 00:28:29,679
more than that

469
00:28:40,279 --> 00:28:50,100
<font color="#CCCCCC">no-no-no so the question if you</font><font color="#E5E5E5"> have</font>

470
00:28:42,539 --> 00:28:54,049
applied the<font color="#CCCCCC"> question in zebra Flass we</font>

471
00:28:50,100 --> 00:28:57,480
haven't<font color="#CCCCCC"> true we haven't</font><font color="#E5E5E5"> try with another</font>

472
00:28:54,049 --> 00:28:59,789
with another prominent wish so to

473
00:28:57,480 --> 00:29:01,529
prepare<font color="#CCCCCC"> another prominent language</font><font color="#E5E5E5"> but</font>

474
00:28:59,789 --> 00:29:03,990
<font color="#E5E5E5">for instance for the approach that</font><font color="#CCCCCC"> we</font>

475
00:29:01,529 --> 00:29:08,639
have<font color="#CCCCCC"> implements a sham probe the</font>

476
00:29:03,990 --> 00:29:12,840
original implementation<font color="#E5E5E5"> is for repairing</font>

477
00:29:08,639 --> 00:29:17,269
<font color="#E5E5E5">C code so that means that this approach</font>

478
00:29:12,840 --> 00:29:17,269
is already implemented<font color="#CCCCCC"> incision C code</font>

479
00:29:19,580 --> 00:29:25,889
[Applause]

