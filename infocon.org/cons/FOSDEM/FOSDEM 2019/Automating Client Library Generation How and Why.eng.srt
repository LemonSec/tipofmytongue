1
00:00:04,779 --> 00:00:11,840
so directly<font color="#CCCCCC"> four floors above my office</font>

2
00:00:09,320 --> 00:00:14,450
<font color="#E5E5E5">in Kaltura tel-aviv sits a developer</font>

3
00:00:11,840 --> 00:00:16,820
named Omri<font color="#E5E5E5"> he has one of</font><font color="#CCCCCC"> those</font>

4
00:00:14,450 --> 00:00:18,380
obnoxiously loud red backlit keyboards

5
00:00:16,820 --> 00:00:20,210
you know those and when I came in to

6
00:00:18,380 --> 00:00:22,250
interview<font color="#CCCCCC"> him from my talk I actually</font>

7
00:00:20,210 --> 00:00:24,439
challenged him to a typing speed test

8
00:00:22,250 --> 00:00:26,390
now<font color="#E5E5E5"> I won and it's probably only because</font>

9
00:00:24,439 --> 00:00:28,640
<font color="#E5E5E5">his first language</font><font color="#CCCCCC"> is Hebrew because</font>

10
00:00:26,390 --> 00:00:30,650
he's<font color="#CCCCCC"> very fast</font><font color="#E5E5E5"> and he asked me if I came</font>

11
00:00:28,640 --> 00:00:34,129
<font color="#E5E5E5">upstairs to throw him under the bus and</font>

12
00:00:30,650 --> 00:00:35,870
my first lines of my talk he's actually

13
00:00:34,129 --> 00:00:37,519
<font color="#CCCCCC">a very interesting</font><font color="#E5E5E5"> developer he doesn't</font>

14
00:00:35,870 --> 00:00:40,010
like coffee which I found out<font color="#E5E5E5"> in our</font>

15
00:00:37,519 --> 00:00:43,580
recent hackathon<font color="#E5E5E5"> lately he's been</font>

16
00:00:40,010 --> 00:00:45,320
<font color="#CCCCCC">listening to the Ok Computer</font><font color="#E5E5E5"> album by</font>

17
00:00:43,580 --> 00:00:48,920
Radiohead<font color="#E5E5E5"> and playing Red Dead</font>

18
00:00:45,320 --> 00:00:50,839
Redemption<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Omri is my JavaScript guru</font>

19
00:00:48,920 --> 00:00:53,690
says it's probably<font color="#CCCCCC"> his favorite</font><font color="#E5E5E5"> language</font>

20
00:00:50,839 --> 00:00:55,430
<font color="#E5E5E5">I'm not</font><font color="#CCCCCC"> very good at</font><font color="#E5E5E5"> JavaScript but at</font>

21
00:00:53,690 --> 00:00:58,400
Kaltura he's actually a PHP<font color="#E5E5E5"> developer</font>

22
00:00:55,430 --> 00:01:00,470
<font color="#CCCCCC">working on our</font><font color="#E5E5E5"> media space or private</font>

23
00:00:58,400 --> 00:01:02,170
<font color="#CCCCCC">YouTube if you may now what am I</font><font color="#E5E5E5"> telling</font>

24
00:01:00,470 --> 00:01:06,200
you<font color="#E5E5E5"> all this why do you care</font><font color="#CCCCCC"> about Omri</font>

25
00:01:02,170 --> 00:01:08,210
because client libraries<font color="#E5E5E5"> that's why in</font>

26
00:01:06,200 --> 00:01:10,730
order<font color="#E5E5E5"> to work on our media space when we</font>

27
00:01:08,210 --> 00:01:13,130
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> uses the PHP client library</font>

28
00:01:10,730 --> 00:01:15,680
<font color="#E5E5E5">that we built specifically for media</font>

29
00:01:13,130 --> 00:01:18,920
space he says that he can't imagine<font color="#E5E5E5"> life</font>

30
00:01:15,680 --> 00:01:21,050
without it<font color="#E5E5E5"> so I said</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> what would you</font>

31
00:01:18,920 --> 00:01:23,330
do if you didn't<font color="#CCCCCC"> have the client library</font>

32
00:01:21,050 --> 00:01:26,570
and<font color="#E5E5E5"> he said probably build my own mini</font>

33
00:01:23,330 --> 00:01:28,759
<font color="#CCCCCC">library that would have all the API</font>

34
00:01:26,570 --> 00:01:30,320
calls that<font color="#CCCCCC"> I use on a daily basis</font><font color="#E5E5E5"> I said</font>

35
00:01:28,760 --> 00:01:32,150
great that sounds<font color="#E5E5E5"> really cool</font><font color="#CCCCCC"> what</font>

36
00:01:30,320 --> 00:01:34,158
happens when we<font color="#CCCCCC"> change the API which we</font>

37
00:01:32,150 --> 00:01:35,930
do very<font color="#CCCCCC"> often</font><font color="#E5E5E5"> and your library</font><font color="#CCCCCC"> breaks</font>

38
00:01:34,159 --> 00:01:37,700
and he says well this is just<font color="#CCCCCC"> a</font>

39
00:01:35,930 --> 00:01:40,340
hypothetical situation right don't<font color="#E5E5E5"> take</font>

40
00:01:37,700 --> 00:01:43,010
away<font color="#CCCCCC"> my library but I guess every time</font>

41
00:01:40,340 --> 00:01:45,100
we<font color="#E5E5E5"> change the</font><font color="#CCCCCC"> API and my</font><font color="#E5E5E5"> library broke I</font>

42
00:01:43,010 --> 00:01:48,229
would fix<font color="#E5E5E5"> it accordingly</font>

43
00:01:45,100 --> 00:01:50,330
now how many<font color="#E5E5E5"> of you are familiar with</font>

44
00:01:48,229 --> 00:01:51,380
<font color="#CCCCCC">this kind of annoying situation chasing</font>

45
00:01:50,330 --> 00:01:55,940
your tail to fix something that

46
00:01:51,380 --> 00:01:58,130
constantly breaks yeah thank you<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm</font>

47
00:01:55,940 --> 00:01:59,810
glad<font color="#E5E5E5"> you came</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> on a totally separate</font>

48
00:01:58,130 --> 00:02:03,710
note how many of you<font color="#CCCCCC"> are familiar with</font>

49
00:01:59,810 --> 00:02:05,750
<font color="#E5E5E5">this line you've seen this if you go to</font>

50
00:02:03,710 --> 00:02:08,149
a lot<font color="#CCCCCC"> of developer conferences</font><font color="#E5E5E5"> which I</font>

51
00:02:05,750 --> 00:02:09,470
do<font color="#CCCCCC"> you see this a lot now I used to</font>

52
00:02:08,149 --> 00:02:13,790
<font color="#E5E5E5">think it's condescending do you think</font>

53
00:02:09,470 --> 00:02:15,530
it's condescending<font color="#E5E5E5"> kind of well I'm a</font>

54
00:02:13,790 --> 00:02:17,120
developer evangelist and<font color="#E5E5E5"> I've been</font>

55
00:02:15,530 --> 00:02:17,760
<font color="#E5E5E5">working on our developer portal for</font>

56
00:02:17,120 --> 00:02:18,900
about a year

57
00:02:17,760 --> 00:02:21,209
I've come to see this<font color="#E5E5E5"> a little bit</font>

58
00:02:18,900 --> 00:02:23,849
differently<font color="#CCCCCC"> I think that in</font><font color="#E5E5E5"> this context</font>

59
00:02:21,209 --> 00:02:26,760
<font color="#CCCCCC">people just means those who deserve to</font>

60
00:02:23,849 --> 00:02:28,439
<font color="#E5E5E5">have life made easier for them right and</font>

61
00:02:26,760 --> 00:02:30,179
developers in<font color="#E5E5E5"> this context or in every</font>

62
00:02:28,439 --> 00:02:31,828
context means those who are<font color="#E5E5E5"> supposedly</font>

63
00:02:30,180 --> 00:02:33,599
smarter than the rest<font color="#CCCCCC"> of the world and</font>

64
00:02:31,829 --> 00:02:37,829
<font color="#E5E5E5">can handle the hard things better than</font>

65
00:02:33,599 --> 00:02:40,290
most<font color="#E5E5E5"> put this all together</font><font color="#CCCCCC"> and you and</font>

66
00:02:37,829 --> 00:02:42,840
<font color="#CCCCCC">me</font><font color="#E5E5E5"> and developers we're all just regular</font>

67
00:02:40,290 --> 00:02:44,548
fascinating people<font color="#E5E5E5"> who have favorite</font>

68
00:02:42,840 --> 00:02:46,680
afternoon snacks and opinions<font color="#CCCCCC"> about</font>

69
00:02:44,549 --> 00:02:48,720
coffee<font color="#E5E5E5"> and keyboards and operating</font>

70
00:02:46,680 --> 00:02:50,760
systems and programming languages<font color="#CCCCCC"> and</font>

71
00:02:48,720 --> 00:02:52,200
all of the methodologies<font color="#CCCCCC"> and tools</font><font color="#E5E5E5"> that</font>

72
00:02:50,760 --> 00:02:53,310
come<font color="#E5E5E5"> with</font><font color="#CCCCCC"> those programming languages</font>

73
00:02:52,200 --> 00:02:57,119
<font color="#E5E5E5">and where am I going with this</font>

74
00:02:53,310 --> 00:02:58,560
<font color="#E5E5E5">again client libraries my name is</font><font color="#CCCCCC"> Ravi</font>

75
00:02:57,120 --> 00:03:00,690
<font color="#CCCCCC">tall sue belly</font><font color="#E5E5E5"> and today I'm here to</font>

76
00:02:58,560 --> 00:03:02,129
<font color="#E5E5E5">speak to you about automating client</font>

77
00:03:00,690 --> 00:03:04,079
library generation not for the fact

78
00:03:02,129 --> 00:03:06,149
itself<font color="#E5E5E5"> although</font><font color="#CCCCCC"> it is a pretty</font><font color="#E5E5E5"> cool</font>

79
00:03:04,079 --> 00:03:09,090
thing<font color="#E5E5E5"> but as a powerful</font><font color="#CCCCCC"> tool for making</font>

80
00:03:06,150 --> 00:03:10,590
<font color="#E5E5E5">the lives of developers exponentially</font>

81
00:03:09,090 --> 00:03:12,299
<font color="#CCCCCC">easier and I'm talking internal</font>

82
00:03:10,590 --> 00:03:14,579
developers external developers I'm

83
00:03:12,299 --> 00:03:16,829
talking those building the API and those

84
00:03:14,579 --> 00:03:18,720
<font color="#E5E5E5">using</font><font color="#CCCCCC"> the API</font><font color="#E5E5E5"> I'll tell you about how</font>

85
00:03:16,829 --> 00:03:21,900
Kaltura ended up with over<font color="#E5E5E5"> 35 client</font>

86
00:03:18,720 --> 00:03:23,160
libraries with our homemade solution and

87
00:03:21,900 --> 00:03:24,660
how you can do so yourself<font color="#E5E5E5"> with a</font>

88
00:03:23,160 --> 00:03:26,459
<font color="#E5E5E5">generic solution that's super easy to</font>

89
00:03:24,660 --> 00:03:28,620
implement<font color="#E5E5E5"> because we all have better</font>

90
00:03:26,459 --> 00:03:30,030
<font color="#CCCCCC">things to worry</font><font color="#E5E5E5"> about than fixing client</font>

91
00:03:28,620 --> 00:03:32,280
libraries that<font color="#CCCCCC"> are constantly breaking</font>

92
00:03:30,030 --> 00:03:34,769
<font color="#E5E5E5">right so let's back up a little it's</font>

93
00:03:32,280 --> 00:03:36,919
2007<font color="#CCCCCC"> I'm in high school</font>

94
00:03:34,769 --> 00:03:40,500
Kaltura is an open source<font color="#E5E5E5"> video platform</font>

95
00:03:36,919 --> 00:03:43,650
<font color="#E5E5E5">we have the player the widgets for</font>

96
00:03:40,500 --> 00:03:45,870
uploading videos to<font color="#E5E5E5"> the KMC</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> camp</font>

97
00:03:43,650 --> 00:03:48,000
<font color="#CCCCCC">C which</font><font color="#E5E5E5"> is the UI</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> these are</font>

98
00:03:45,870 --> 00:03:49,889
talking<font color="#CCCCCC"> to the API with the Flex library</font>

99
00:03:48,000 --> 00:03:51,870
<font color="#E5E5E5">now we knew a few things</font><font color="#CCCCCC"> at the time we</font>

100
00:03:49,889 --> 00:03:53,489
<font color="#E5E5E5">knew that all of</font><font color="#CCCCCC"> the all of</font><font color="#E5E5E5"> the Kaltura</font>

101
00:03:51,870 --> 00:03:56,970
products are going<font color="#E5E5E5"> to be built on</font><font color="#CCCCCC"> our</font>

102
00:03:53,489 --> 00:03:58,739
API<font color="#CCCCCC"> we knew</font><font color="#E5E5E5"> that the API would get</font>

103
00:03:56,970 --> 00:04:00,930
<font color="#E5E5E5">really big</font><font color="#CCCCCC"> there would be</font><font color="#E5E5E5"> lots of</font>

104
00:03:58,739 --> 00:04:03,209
objects being<font color="#CCCCCC"> thrown around 758 to be</font>

105
00:04:00,930 --> 00:04:05,480
exact but who's counting and that string

106
00:04:03,209 --> 00:04:07,980
requests<font color="#E5E5E5"> would become a pain in the butt</font>

107
00:04:05,480 --> 00:04:10,440
we also knew that<font color="#E5E5E5"> if you write</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> client</font>

108
00:04:07,980 --> 00:04:12,840
library<font color="#CCCCCC"> to access the API and you change</font>

109
00:04:10,440 --> 00:04:14,609
<font color="#CCCCCC">the API</font><font color="#E5E5E5"> and break the library 40% of</font>

110
00:04:12,840 --> 00:04:16,829
your developers are spending their<font color="#CCCCCC"> time</font>

111
00:04:14,609 --> 00:04:18,478
fixing<font color="#E5E5E5"> that library sounds</font>

112
00:04:16,829 --> 00:04:21,510
<font color="#E5E5E5">time-consuming right so what did we do</font>

113
00:04:18,478 --> 00:04:23,460
we wrote an<font color="#E5E5E5"> XML schema that completely</font>

114
00:04:21,510 --> 00:04:26,580
<font color="#CCCCCC">describes the API complete with objects</font>

115
00:04:23,460 --> 00:04:29,070
classes services and then an<font color="#CCCCCC"> XML</font>

116
00:04:26,580 --> 00:04:31,109
generator<font color="#E5E5E5"> that automatically creates</font>

117
00:04:29,070 --> 00:04:33,900
that<font color="#E5E5E5"> XML from the API</font>

118
00:04:31,110 --> 00:04:35,520
lastly<font color="#E5E5E5"> for every language</font><font color="#CCCCCC"> or function</font>

119
00:04:33,900 --> 00:04:37,770
that<font color="#CCCCCC"> we wanted a library we just wrote a</font>

120
00:04:35,520 --> 00:04:40,289
generator<font color="#E5E5E5"> that would parse that XML</font><font color="#CCCCCC"> and</font>

121
00:04:37,770 --> 00:04:42,710
create that library<font color="#E5E5E5"> basically code that</font>

122
00:04:40,290 --> 00:04:44,940
writes code<font color="#E5E5E5"> who doesn't love that</font>

123
00:04:42,710 --> 00:04:46,979
what<font color="#E5E5E5"> doesn't that was that it was super</font>

124
00:04:44,940 --> 00:04:48,630
<font color="#CCCCCC">easy then in 2008 to write a batch</font>

125
00:04:46,980 --> 00:04:50,790
client library that<font color="#CCCCCC"> handles all of the</font>

126
00:04:48,630 --> 00:04:52,290
hard stuff all of the slow stuff<font color="#E5E5E5"> that</font>

127
00:04:50,790 --> 00:04:54,420
happens behind the scenes transcoding

128
00:04:52,290 --> 00:04:55,950
ingestion<font color="#E5E5E5"> and then a PHP</font><font color="#CCCCCC"> for library</font>

129
00:04:54,420 --> 00:04:59,250
obviously because the API<font color="#E5E5E5"> is written in</font>

130
00:04:55,950 --> 00:05:01,140
PHP then we were<font color="#CCCCCC"> able to write a testing</font>

131
00:04:59,250 --> 00:05:03,210
library super<font color="#CCCCCC"> easily that makes calls</font>

132
00:05:01,140 --> 00:05:05,310
against the<font color="#CCCCCC"> API and the community</font>

133
00:05:03,210 --> 00:05:09,180
started asking for<font color="#E5E5E5"> access</font><font color="#CCCCCC"> so we gave the</font>

134
00:05:05,310 --> 00:05:11,730
PHP<font color="#CCCCCC"> 5 because it was easy and we could</font>

135
00:05:09,180 --> 00:05:14,190
we didn't anticipate they would and then

136
00:05:11,730 --> 00:05:15,560
in 2012 we were smaller<font color="#CCCCCC"> Zen libraries</font>

137
00:05:14,190 --> 00:05:17,880
<font color="#E5E5E5">for all of our smaller applications</font>

138
00:05:15,560 --> 00:05:19,080
<font color="#E5E5E5">community asked for more access</font><font color="#CCCCCC"> so we</font>

139
00:05:17,880 --> 00:05:22,950
were able<font color="#CCCCCC"> to give them a Python Ruby</font>

140
00:05:19,080 --> 00:05:27,150
<font color="#E5E5E5">Java and c-sharp 2017 was a really big</font>

141
00:05:22,950 --> 00:05:28,710
year at<font color="#CCCCCC"> counteroffer client libraries we</font>

142
00:05:27,150 --> 00:05:30,570
wrote an<font color="#CCCCCC"> AJAX library to replace our</font>

143
00:05:28,710 --> 00:05:34,620
awful<font color="#CCCCCC"> Jas library came the time</font><font color="#E5E5E5"> for</font>

144
00:05:30,570 --> 00:05:36,390
<font color="#CCCCCC">async so we wrote all new node Java and</font>

145
00:05:34,620 --> 00:05:37,740
mobile libraries with multi-threading

146
00:05:36,390 --> 00:05:40,260
<font color="#CCCCCC">support and then this past year we</font>

147
00:05:37,740 --> 00:05:41,760
<font color="#E5E5E5">rewrote our</font><font color="#CCCCCC"> KMC our Kaltura management</font>

148
00:05:40,260 --> 00:05:43,740
console which was awful we decided to do

149
00:05:41,760 --> 00:05:45,750
it an Engel<font color="#CCCCCC"> and why not also create a</font>

150
00:05:43,740 --> 00:05:47,280
typescript library along the way now

151
00:05:45,750 --> 00:05:50,480
making this<font color="#E5E5E5"> sounds super easy because</font>

152
00:05:47,280 --> 00:05:53,460
relatively it was why is that<font color="#E5E5E5"> automation</font>

153
00:05:50,480 --> 00:05:55,410
<font color="#E5E5E5">2019 and we're</font><font color="#CCCCCC"> able to have 11</font><font color="#E5E5E5"> client</font>

154
00:05:53,460 --> 00:05:57,570
<font color="#E5E5E5">facing libraries and over 20 libraries</font>

155
00:05:55,410 --> 00:05:59,580
<font color="#E5E5E5">that you use internally and thanks to</font>

156
00:05:57,570 --> 00:06:01,740
automation<font color="#E5E5E5"> we only need to write the</font>

157
00:05:59,580 --> 00:06:03,780
library<font color="#E5E5E5"> that we need once and with the</font>

158
00:06:01,740 --> 00:06:05,460
updated<font color="#CCCCCC"> XML in place that generator</font>

159
00:06:03,780 --> 00:06:08,340
library is<font color="#E5E5E5"> always using the latest</font>

160
00:06:05,460 --> 00:06:09,750
<font color="#CCCCCC">version of the API now in my</font><font color="#E5E5E5"> previous</font>

161
00:06:08,340 --> 00:06:12,330
life<font color="#E5E5E5"> as a back-end developer actually</font>

162
00:06:09,750 --> 00:06:14,460
spent<font color="#CCCCCC"> in your implementing over</font><font color="#E5E5E5"> 75 api's</font>

163
00:06:12,330 --> 00:06:16,740
to our platform<font color="#CCCCCC"> and what I can</font><font color="#E5E5E5"> tell you</font>

164
00:06:14,460 --> 00:06:18,659
is that<font color="#E5E5E5"> when an API breaks or when</font>

165
00:06:16,740 --> 00:06:20,100
whatever you're doing breaks and the<font color="#E5E5E5"> API</font>

166
00:06:18,660 --> 00:06:21,840
<font color="#E5E5E5">has been updated six months ago</font>

167
00:06:20,100 --> 00:06:24,630
that's the bane of everyone's existence

168
00:06:21,840 --> 00:06:26,669
so I'm really<font color="#CCCCCC"> excited about this</font><font color="#E5E5E5"> so if</font>

169
00:06:24,630 --> 00:06:28,620
you look at<font color="#E5E5E5"> this diagram this Kaltura</font>

170
00:06:26,670 --> 00:06:30,300
<font color="#CCCCCC">louver logo here that's our server logic</font>

171
00:06:28,620 --> 00:06:32,400
or the<font color="#E5E5E5"> API after that is where the</font>

172
00:06:30,300 --> 00:06:34,380
introspection happens where the<font color="#CCCCCC"> XML is</font>

173
00:06:32,400 --> 00:06:36,030
created<font color="#E5E5E5"> then we</font><font color="#CCCCCC"> generate the</font><font color="#E5E5E5"> client</font>

174
00:06:34,380 --> 00:06:37,530
libraries the<font color="#CCCCCC"> I puts them in github</font>

175
00:06:36,030 --> 00:06:40,109
<font color="#E5E5E5">where they're tested and all the passing</font>

176
00:06:37,530 --> 00:06:41,880
libraries get put in<font color="#E5E5E5"> the public repo as</font>

177
00:06:40,110 --> 00:06:44,140
well as package managers for Ruby Java

178
00:06:41,880 --> 00:06:48,390
Python<font color="#CCCCCC"> and PHP</font>

179
00:06:44,140 --> 00:06:51,789
and the most<font color="#E5E5E5"> important very simple part</font>

180
00:06:48,390 --> 00:06:54,190
is that<font color="#E5E5E5"> a script runs every night that</font>

181
00:06:51,790 --> 00:06:56,080
generates the<font color="#E5E5E5"> XML from the API and the</font>

182
00:06:54,190 --> 00:06:57,450
client libraries<font color="#E5E5E5"> from the XML which</font>

183
00:06:56,080 --> 00:06:59,620
means that internal and external

184
00:06:57,450 --> 00:07:02,830
developers are always getting<font color="#CCCCCC"> the</font><font color="#E5E5E5"> latest</font>

185
00:06:59,620 --> 00:07:04,560
<font color="#E5E5E5">and</font><font color="#CCCCCC"> greatest version of the API</font><font color="#E5E5E5"> and no</font>

186
00:07:02,830 --> 00:07:07,960
click<font color="#E5E5E5"> whatsoever</font>

187
00:07:04,560 --> 00:07:10,900
so the other most important part is<font color="#CCCCCC"> that</font>

188
00:07:07,960 --> 00:07:12,729
this is<font color="#E5E5E5"> an open</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> library hosted by</font>

189
00:07:10,900 --> 00:07:15,429
Kaltura that you can use to generate

190
00:07:12,730 --> 00:07:17,350
<font color="#E5E5E5">your own XML to parse your own XML write</font>

191
00:07:15,430 --> 00:07:18,990
your own XML<font color="#CCCCCC"> and create your own client</font>

192
00:07:17,350 --> 00:07:21,040
libraries<font color="#CCCCCC"> now if you</font><font color="#E5E5E5"> click on that link</font>

193
00:07:18,990 --> 00:07:23,470
<font color="#E5E5E5">these links will</font><font color="#CCCCCC"> all be available</font><font color="#E5E5E5"> later</font>

194
00:07:21,040 --> 00:07:26,290
<font color="#E5E5E5">I guess if you click</font><font color="#CCCCCC"> on that link</font><font color="#E5E5E5"> this</font>

195
00:07:23,470 --> 00:07:28,450
is what<font color="#CCCCCC"> our XML looks like not doing</font><font color="#E5E5E5"> a</font>

196
00:07:26,290 --> 00:07:30,220
demo<font color="#E5E5E5"> because I have 15 minutes</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> you</font>

197
00:07:28,450 --> 00:07:32,620
can see it contains<font color="#E5E5E5"> the enums the</font>

198
00:07:30,220 --> 00:07:34,930
classes<font color="#E5E5E5"> with all the</font><font color="#CCCCCC"> information and the</font>

199
00:07:32,620 --> 00:07:37,990
properties that<font color="#E5E5E5"> they include the plugins</font>

200
00:07:34,930 --> 00:07:39,790
the errors<font color="#E5E5E5"> now in that same file at the</font>

201
00:07:37,990 --> 00:07:41,770
<font color="#CCCCCC">Knowledge Center you</font><font color="#E5E5E5"> can also download</font>

202
00:07:39,790 --> 00:07:43,180
the<font color="#CCCCCC"> project files for creating your</font>

203
00:07:41,770 --> 00:07:44,770
client<font color="#CCCCCC"> libraries</font><font color="#E5E5E5"> what you end up is</font>

204
00:07:43,180 --> 00:07:46,210
<font color="#E5E5E5">three files that look like this they're</font>

205
00:07:44,770 --> 00:07:48,969
<font color="#CCCCCC">all in PHP</font><font color="#E5E5E5"> sorry about that</font>

206
00:07:46,210 --> 00:07:51,669
oh you can't see that but the first

207
00:07:48,970 --> 00:07:53,650
<font color="#E5E5E5">class is an abstract class that is</font>

208
00:07:51,670 --> 00:07:55,210
extended by<font color="#CCCCCC"> the meat of your project</font>

209
00:07:53,650 --> 00:07:57,310
which we'll get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> and that provides</font>

210
00:07:55,210 --> 00:07:59,739
<font color="#CCCCCC">base helper functions for generating</font>

211
00:07:57,310 --> 00:08:01,870
next is a script that<font color="#E5E5E5"> tests the library</font>

212
00:07:59,740 --> 00:08:04,780
creation<font color="#E5E5E5"> this class is what saves the</font>

213
00:08:01,870 --> 00:08:06,850
files to disk<font color="#E5E5E5"> and then thirdly the meat</font>

214
00:08:04,780 --> 00:08:09,130
of your generator<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the class</font><font color="#E5E5E5"> that</font>

215
00:08:06,850 --> 00:08:11,110
parses your XML<font color="#CCCCCC"> or your spec or your</font>

216
00:08:09,130 --> 00:08:14,250
schema whatever it is and<font color="#E5E5E5"> actually</font>

217
00:08:11,110 --> 00:08:17,110
creates the file<font color="#CCCCCC"> content</font><font color="#E5E5E5"> and this is</font>

218
00:08:14,250 --> 00:08:19,690
what our client generator repo looks

219
00:08:17,110 --> 00:08:20,920
like here you<font color="#E5E5E5"> can find all of the client</font>

220
00:08:19,690 --> 00:08:22,710
generators that<font color="#E5E5E5"> we have you're curious</font>

221
00:08:20,920 --> 00:08:25,360
<font color="#E5E5E5">what that looks like</font>

222
00:08:22,710 --> 00:08:27,729
<font color="#CCCCCC">pythons</font><font color="#E5E5E5"> my favorite language</font><font color="#CCCCCC"> this is</font>

223
00:08:25,360 --> 00:08:29,590
<font color="#CCCCCC">what it looks</font><font color="#E5E5E5"> like to generate from the</font>

224
00:08:27,730 --> 00:08:31,300
API and create these<font color="#E5E5E5"> file contents</font>

225
00:08:29,590 --> 00:08:33,490
contacts that actually create your

226
00:08:31,300 --> 00:08:34,930
library<font color="#E5E5E5"> but that means that our external</font>

227
00:08:33,490 --> 00:08:38,409
<font color="#E5E5E5">developers can just go ahead and</font>

228
00:08:34,929 --> 00:08:40,569
download<font color="#CCCCCC"> that file and do file handling</font>

229
00:08:38,409 --> 00:08:43,809
which is<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the most known in the</font>

230
00:08:40,570 --> 00:08:46,360
language<font color="#CCCCCC"> that they like I'm actually</font>

231
00:08:43,809 --> 00:08:47,709
working on a go<font color="#CCCCCC"> project myself</font><font color="#E5E5E5"> because</font>

232
00:08:46,360 --> 00:08:49,240
we've had some demand for go and<font color="#E5E5E5"> we</font>

233
00:08:47,710 --> 00:08:50,770
don't have a go client library<font color="#CCCCCC"> and I'm</font>

234
00:08:49,240 --> 00:08:52,210
about<font color="#E5E5E5"> to embark</font><font color="#CCCCCC"> on that mission and see</font>

235
00:08:50,770 --> 00:08:54,010
where it takes me<font color="#E5E5E5"> the guy who's been</font>

236
00:08:52,210 --> 00:08:56,110
writing<font color="#CCCCCC"> this develop the</font><font color="#E5E5E5"> the client</font>

237
00:08:54,010 --> 00:08:57,790
<font color="#CCCCCC">libraries</font><font color="#E5E5E5"> since 2007 says it takes him</font>

238
00:08:56,110 --> 00:08:59,350
about<font color="#E5E5E5"> a week</font>

239
00:08:57,790 --> 00:09:00,939
a month to<font color="#CCCCCC"> read each library so you can</font>

240
00:08:59,350 --> 00:09:04,750
<font color="#E5E5E5">check in with me in three months and see</font>

241
00:09:00,940 --> 00:09:06,580
how I'm<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> thing is you're probably</font>

242
00:09:04,750 --> 00:09:07,930
thinking<font color="#E5E5E5"> well yeah I'd love to</font><font color="#CCCCCC"> have 15</font>

243
00:09:06,580 --> 00:09:09,820
client libraries<font color="#CCCCCC"> in various languages</font>

244
00:09:07,930 --> 00:09:11,709
<font color="#E5E5E5">but I don't have two months</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> write</font>

245
00:09:09,820 --> 00:09:13,330
each one<font color="#CCCCCC"> well here's</font><font color="#E5E5E5"> the good</font><font color="#CCCCCC"> news as</font>

246
00:09:11,710 --> 00:09:14,590
excited I was<font color="#CCCCCC"> to show you</font><font color="#E5E5E5"> this open</font>

247
00:09:13,330 --> 00:09:17,640
source project the good news is that

248
00:09:14,590 --> 00:09:20,440
plenty<font color="#CCCCCC"> of</font><font color="#E5E5E5"> out-of-the-box solutions exist</font>

249
00:09:17,640 --> 00:09:22,060
<font color="#E5E5E5">to help you spec out your API one being</font>

250
00:09:20,440 --> 00:09:24,460
<font color="#E5E5E5">swagger which you've probably heard of</font>

251
00:09:22,060 --> 00:09:26,859
tons of open<font color="#CCCCCC"> source</font><font color="#E5E5E5"> tools that take your</font>

252
00:09:24,460 --> 00:09:28,900
<font color="#CCCCCC">API whether it calls all of</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> API</font>

253
00:09:26,860 --> 00:09:31,330
endpoints for<font color="#E5E5E5"> example and creates this</font>

254
00:09:28,900 --> 00:09:33,670
open API spec which is the standard for

255
00:09:31,330 --> 00:09:35,080
<font color="#E5E5E5">describing an API</font><font color="#CCCCCC"> you end up with</font>

256
00:09:33,670 --> 00:09:38,560
something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> this in JSON</font>

257
00:09:35,080 --> 00:09:40,180
<font color="#E5E5E5">or this in the</font><font color="#CCCCCC"> amel how many of you</font><font color="#E5E5E5"> are</font>

258
00:09:38,560 --> 00:09:47,010
working actively<font color="#E5E5E5"> on an API</font><font color="#CCCCCC"> that's</font>

259
00:09:40,180 --> 00:09:49,569
already got<font color="#CCCCCC"> a spec okay so do that</font><font color="#E5E5E5"> and</font>

260
00:09:47,010 --> 00:09:51,460
once you<font color="#E5E5E5"> have a spec or a schema</font>

261
00:09:49,570 --> 00:09:52,600
whatever<font color="#CCCCCC"> version you choose</font><font color="#E5E5E5"> the next</font>

262
00:09:51,460 --> 00:09:54,040
step is this<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> either generate</font>

263
00:09:52,600 --> 00:09:56,230
<font color="#E5E5E5">your client libraries alone you've</font>

264
00:09:54,040 --> 00:09:58,510
already made half the<font color="#E5E5E5"> process easier or</font>

265
00:09:56,230 --> 00:10:00,730
same<font color="#CCCCCC"> thing swagger and other tools have</font>

266
00:09:58,510 --> 00:10:02,350
<font color="#E5E5E5">plenty</font><font color="#CCCCCC"> of open source</font><font color="#E5E5E5"> tools that will</font>

267
00:10:00,730 --> 00:10:04,870
help<font color="#E5E5E5"> you</font><font color="#CCCCCC"> generate client libraries among</font>

268
00:10:02,350 --> 00:10:07,390
other things<font color="#E5E5E5"> from those schemas</font><font color="#CCCCCC"> and what</font>

269
00:10:04,870 --> 00:10:09,460
you end<font color="#E5E5E5"> up with is a client library</font><font color="#CCCCCC"> that</font>

270
00:10:07,390 --> 00:10:13,620
is always accurate<font color="#CCCCCC"> up-to-date and</font>

271
00:10:09,460 --> 00:10:15,760
properly versioned<font color="#E5E5E5"> the thing is auto</font>

272
00:10:13,620 --> 00:10:17,290
<font color="#E5E5E5">generated code is not always the best</font>

273
00:10:15,760 --> 00:10:18,670
experience for culture I mean swagger

274
00:10:17,290 --> 00:10:20,530
didn't exist at the<font color="#CCCCCC"> time this</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> 10</font>

275
00:10:18,670 --> 00:10:22,300
years<font color="#E5E5E5"> ago but it wouldn't have been</font>

276
00:10:20,530 --> 00:10:25,660
<font color="#E5E5E5">greatest solution</font><font color="#CCCCCC"> either because so many</font>

277
00:10:22,300 --> 00:10:28,240
<font color="#E5E5E5">of operations</font><font color="#CCCCCC"> have need</font><font color="#E5E5E5"> so many steps</font>

278
00:10:25,660 --> 00:10:29,860
with the API<font color="#CCCCCC"> in order to work and so we</font>

279
00:10:28,240 --> 00:10:32,740
<font color="#E5E5E5">did it by</font><font color="#CCCCCC"> hand but</font><font color="#E5E5E5"> for smaller</font>

280
00:10:29,860 --> 00:10:34,510
operations<font color="#E5E5E5"> it's actually a pretty good</font>

281
00:10:32,740 --> 00:10:35,770
<font color="#CCCCCC">solution and the truth is that API as a</font>

282
00:10:34,510 --> 00:10:37,600
product is becoming more<font color="#E5E5E5"> and</font><font color="#CCCCCC"> more</font>

283
00:10:35,770 --> 00:10:39,640
popular<font color="#CCCCCC"> and so these tools are becoming</font>

284
00:10:37,600 --> 00:10:42,340
more<font color="#CCCCCC"> powerful</font><font color="#E5E5E5"> and the truth is that we</font>

285
00:10:39,640 --> 00:10:43,689
<font color="#CCCCCC">actually at Kaltura use swagger for part</font>

286
00:10:42,340 --> 00:10:45,340
<font color="#CCCCCC">of our process</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> you remember this</font>

287
00:10:43,690 --> 00:10:47,890
diagram<font color="#CCCCCC"> well we</font><font color="#E5E5E5"> actually use something</font>

288
00:10:45,340 --> 00:10:50,110
<font color="#CCCCCC">called Luci</font><font color="#E5E5E5"> ba to create our entire</font>

289
00:10:47,890 --> 00:10:51,699
documentation portal so the main

290
00:10:50,110 --> 00:10:54,940
developer at Lucy bot actually wrote us

291
00:10:51,700 --> 00:10:57,460
<font color="#E5E5E5">with this handy little tool which</font>

292
00:10:54,940 --> 00:10:59,980
converts our<font color="#E5E5E5"> XML to an open API spec and</font>

293
00:10:57,460 --> 00:11:02,980
then we're able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> Lucy bot which is</font>

294
00:10:59,980 --> 00:11:05,050
a project<font color="#E5E5E5"> that takes that takes that</font>

295
00:11:02,980 --> 00:11:06,970
entire schema<font color="#E5E5E5"> and puts the contents into</font>

296
00:11:05,050 --> 00:11:08,979
a pretty HTML page to<font color="#CCCCCC"> create your</font>

297
00:11:06,970 --> 00:11:10,840
developer portal<font color="#E5E5E5"> complete with a console</font>

298
00:11:08,980 --> 00:11:13,870
workflows<font color="#E5E5E5"> interactive</font>

299
00:11:10,840 --> 00:11:17,560
mutation which I'll show you<font color="#E5E5E5"> so this is</font>

300
00:11:13,870 --> 00:11:19,480
our API<font color="#E5E5E5"> portal</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> my baby</font><font color="#CCCCCC"> go to the</font>

301
00:11:17,560 --> 00:11:21,550
console<font color="#E5E5E5"> I mean you've seen developer</font>

302
00:11:19,480 --> 00:11:22,660
portals before so with Lucy<font color="#CCCCCC"> bot we're</font>

303
00:11:21,550 --> 00:11:26,260
able<font color="#CCCCCC"> to show you all of</font><font color="#E5E5E5"> the next</font>

304
00:11:22,660 --> 00:11:29,319
externally facing<font color="#E5E5E5"> API endpoints let you</font>

305
00:11:26,260 --> 00:11:31,810
play<font color="#CCCCCC"> around with them</font><font color="#E5E5E5"> choose any</font>

306
00:11:29,320 --> 00:11:33,700
parameters and of course<font color="#E5E5E5"> change</font>

307
00:11:31,810 --> 00:11:38,170
languages based on the client libraries

308
00:11:33,700 --> 00:11:41,770
<font color="#CCCCCC">that we have which is</font><font color="#E5E5E5"> really fun</font><font color="#CCCCCC"> because</font>

309
00:11:38,170 --> 00:11:43,240
<font color="#CCCCCC">who doesn't like copy pasting code the</font>

310
00:11:41,770 --> 00:11:46,060
more powerful thing though is our

311
00:11:43,240 --> 00:11:47,830
<font color="#E5E5E5">workflows because in Kaltura a lot of</font>

312
00:11:46,060 --> 00:11:49,150
our operations<font color="#E5E5E5"> require many steps like I</font>

313
00:11:47,830 --> 00:11:51,730
mentioned so for example with video

314
00:11:49,150 --> 00:11:54,040
ingestion<font color="#E5E5E5"> first you need</font><font color="#CCCCCC"> to download or</font>

315
00:11:51,730 --> 00:11:56,560
create and upload token then actually

316
00:11:54,040 --> 00:11:58,990
upload the file<font color="#E5E5E5"> then create a media</font>

317
00:11:56,560 --> 00:12:01,630
<font color="#E5E5E5">entry with all of that file data</font><font color="#CCCCCC"> then</font>

318
00:11:58,990 --> 00:12:03,820
connect<font color="#E5E5E5"> the upload token with that media</font>

319
00:12:01,630 --> 00:12:07,360
entry<font color="#E5E5E5"> and lastly see what your video</font>

320
00:12:03,820 --> 00:12:09,250
looks like in our Kaltura player and the

321
00:12:07,360 --> 00:12:11,880
thing is<font color="#E5E5E5"> that it's super</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> to create</font>

322
00:12:09,250 --> 00:12:14,170
<font color="#E5E5E5">these workflows</font><font color="#CCCCCC"> all you need to do is</font>

323
00:12:11,880 --> 00:12:17,290
click<font color="#E5E5E5"> on this button</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then select</font>

324
00:12:14,170 --> 00:12:19,870
which API endpoints<font color="#CCCCCC"> you want in your</font>

325
00:12:17,290 --> 00:12:22,270
workflow<font color="#E5E5E5"> which parameters you want for</font>

326
00:12:19,870 --> 00:12:23,830
<font color="#E5E5E5">those API endpoints and which values to</font>

327
00:12:22,270 --> 00:12:25,630
carry over<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the next step actually</font>

328
00:12:23,830 --> 00:12:28,150
<font color="#CCCCCC">gets so excited when I talk about this</font>

329
00:12:25,630 --> 00:12:32,230
because<font color="#E5E5E5"> I think it's so easy</font><font color="#CCCCCC"> and so</font>

330
00:12:28,150 --> 00:12:35,890
awesome how powerful it is<font color="#CCCCCC"> and the thing</font>

331
00:12:32,230 --> 00:12:38,970
is that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> all just want to quickly and</font>

332
00:12:35,890 --> 00:12:41,500
easily move our<font color="#CCCCCC"> task</font><font color="#E5E5E5"> to the done column</font>

333
00:12:38,970 --> 00:12:43,150
<font color="#E5E5E5">so being able to do things</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> and</font>

334
00:12:41,500 --> 00:12:44,710
being<font color="#E5E5E5"> able to refer</font><font color="#CCCCCC"> back to workflows</font>

335
00:12:43,150 --> 00:12:46,569
and being able<font color="#CCCCCC"> to copy</font><font color="#E5E5E5"> put copy/paste</font>

336
00:12:44,710 --> 00:12:47,830
code that's awesome because developers

337
00:12:46,570 --> 00:12:50,110
who aren't writing<font color="#E5E5E5"> the API</font>

338
00:12:47,830 --> 00:12:52,420
don't need<font color="#E5E5E5"> to know about the intricacies</font>

339
00:12:50,110 --> 00:12:54,820
of your<font color="#CCCCCC"> API</font><font color="#E5E5E5"> and so if there's one thing</font>

340
00:12:52,420 --> 00:12:58,240
you take<font color="#CCCCCC"> away from</font><font color="#E5E5E5"> this talk</font><font color="#CCCCCC"> okay one</font>

341
00:12:54,820 --> 00:13:00,150
<font color="#E5E5E5">thing define your API create that spec</font>

342
00:12:58,240 --> 00:13:02,320
if you are about<font color="#E5E5E5"> to</font><font color="#CCCCCC"> create an API</font>

343
00:13:00,150 --> 00:13:03,370
consider<font color="#E5E5E5"> doing its spec first if you</font>

344
00:13:02,320 --> 00:13:05,470
already have an API

345
00:13:03,370 --> 00:13:07,150
see what the best way to now look back

346
00:13:05,470 --> 00:13:08,620
<font color="#CCCCCC">take some</font><font color="#E5E5E5"> time and define</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> because</font>

347
00:13:07,150 --> 00:13:11,079
<font color="#CCCCCC">you'll be</font><font color="#E5E5E5"> able to do so much with that</font>

348
00:13:08,620 --> 00:13:13,090
spec with that<font color="#E5E5E5"> definition</font><font color="#CCCCCC"> and you'll be</font>

349
00:13:11,080 --> 00:13:15,700
able to use it for so many<font color="#E5E5E5"> different</font>

350
00:13:13,090 --> 00:13:17,290
<font color="#CCCCCC">things for</font><font color="#E5E5E5"> example it'll now be the</font>

351
00:13:15,700 --> 00:13:18,460
source of<font color="#E5E5E5"> truth between you between your</font>

352
00:13:17,290 --> 00:13:22,000
internal developers you'll be able<font color="#E5E5E5"> to</font>

353
00:13:18,460 --> 00:13:24,160
look at it<font color="#E5E5E5"> and spot spot design patterns</font>

354
00:13:22,000 --> 00:13:25,990
<font color="#E5E5E5">spot possible flaws this is</font>

355
00:13:24,160 --> 00:13:27,519
always now this is what your<font color="#E5E5E5"> API looks</font>

356
00:13:25,990 --> 00:13:29,259
<font color="#E5E5E5">like you'll</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to create</font><font color="#CCCCCC"> those</font>

357
00:13:27,519 --> 00:13:30,759
internal libraries that include all<font color="#E5E5E5"> the</font>

358
00:13:29,259 --> 00:13:32,620
<font color="#E5E5E5">requirements that you might need</font><font color="#CCCCCC"> for one</font>

359
00:13:30,759 --> 00:13:34,600
application<font color="#CCCCCC"> but not for</font><font color="#E5E5E5"> another and</font>

360
00:13:32,620 --> 00:13:37,360
developers working internally have a

361
00:13:34,600 --> 00:13:40,689
much<font color="#CCCCCC"> easier time</font><font color="#E5E5E5"> you can join API</font>

362
00:13:37,360 --> 00:13:42,879
marketplaces<font color="#E5E5E5"> or other</font><font color="#CCCCCC"> you know places</font>

363
00:13:40,689 --> 00:13:44,860
where developers can<font color="#E5E5E5"> be exposed to your</font>

364
00:13:42,879 --> 00:13:47,259
<font color="#E5E5E5">API and play</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> with it so that you</font>

365
00:13:44,860 --> 00:13:49,899
<font color="#CCCCCC">know you can get people to</font><font color="#E5E5E5"> start</font><font color="#CCCCCC"> using</font>

366
00:13:47,259 --> 00:13:51,939
it<font color="#E5E5E5"> and lastly because client libraries</font>

367
00:13:49,899 --> 00:13:54,399
are your relationship with<font color="#E5E5E5"> your external</font>

368
00:13:51,939 --> 00:13:56,920
developers<font color="#E5E5E5"> give them the languages they</font>

369
00:13:54,399 --> 00:13:58,629
love give them real code snippets they

370
00:13:56,920 --> 00:14:00,189
can<font color="#E5E5E5"> copy give them a sandbox they can</font>

371
00:13:58,629 --> 00:14:01,930
play around with let them fall in love

372
00:14:00,189 --> 00:14:04,930
with your<font color="#CCCCCC"> platform while they're still</font>

373
00:14:01,930 --> 00:14:06,699
in their developer portal have an API

374
00:14:04,930 --> 00:14:08,949
spec automate everything<font color="#CCCCCC"> so we can all</font>

375
00:14:06,699 --> 00:14:11,719
go home<font color="#CCCCCC"> and</font><font color="#E5E5E5"> listen</font><font color="#CCCCCC"> to our</font><font color="#E5E5E5"> favorite music</font>

376
00:14:08,949 --> 00:14:15,729
albums<font color="#E5E5E5"> thank you</font>

377
00:14:11,720 --> 00:14:19,570
[Applause]

378
00:14:15,730 --> 00:14:25,540
we have 37 seconds for<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> many</font>

379
00:14:19,570 --> 00:14:27,310
<font color="#E5E5E5">questions so one of your motivations</font>

380
00:14:25,540 --> 00:14:29,589
<font color="#E5E5E5">that you mentioned for doing this was if</font>

381
00:14:27,310 --> 00:14:32,829
the<font color="#E5E5E5"> API</font><font color="#CCCCCC"> breaks of the</font><font color="#E5E5E5"> API changes</font><font color="#CCCCCC"> if</font>

382
00:14:29,590 --> 00:14:34,240
that happens doesn't<font color="#E5E5E5"> the API client to</font>

383
00:14:32,830 --> 00:14:36,850
change and therefore<font color="#CCCCCC"> the code that is</font>

384
00:14:34,240 --> 00:14:38,290
using the client<font color="#E5E5E5"> library</font><font color="#CCCCCC"> I mean we know</font>

385
00:14:36,850 --> 00:14:39,670
if the API<font color="#E5E5E5"> is changing so we're not</font>

386
00:14:38,290 --> 00:14:41,050
going to<font color="#E5E5E5"> release client I mean you know</font>

387
00:14:39,670 --> 00:14:45,640
if the<font color="#CCCCCC"> API is</font><font color="#E5E5E5"> broken we're not</font><font color="#CCCCCC"> gonna</font>

388
00:14:41,050 --> 00:14:47,979
<font color="#E5E5E5">release client libraries if API changes</font>

389
00:14:45,640 --> 00:14:50,319
<font color="#E5E5E5">are good broken API is not good breaking</font>

390
00:14:47,980 --> 00:14:52,480
changes are not good<font color="#E5E5E5"> so was your</font>

391
00:14:50,320 --> 00:14:59,680
<font color="#E5E5E5">question about broken API or changing</font>

392
00:14:52,480 --> 00:15:01,000
API<font color="#E5E5E5"> we get to decide obviously when</font>

393
00:14:59,680 --> 00:15:02,709
we're putting<font color="#E5E5E5"> out client libraries and</font>

394
00:15:01,000 --> 00:15:03,970
with which version of<font color="#E5E5E5"> the API but</font><font color="#CCCCCC"> the</font>

395
00:15:02,710 --> 00:15:06,480
idea<font color="#CCCCCC"> is they're always</font><font color="#E5E5E5"> using the latest</font>

396
00:15:03,970 --> 00:15:06,480
<font color="#E5E5E5">version</font>

