1
00:00:05,859 --> 00:00:15,620
oh right talk yes<font color="#E5E5E5"> welcome</font><font color="#CCCCCC"> I'm going to</font>

2
00:00:13,940 --> 00:00:18,470
be talking<font color="#CCCCCC"> to you about automated</font>

3
00:00:15,620 --> 00:00:20,810
firewall testing<font color="#E5E5E5"> and to give you the</font>

4
00:00:18,470 --> 00:00:23,538
entire<font color="#E5E5E5"> point of the talk right up front</font>

5
00:00:20,810 --> 00:00:28,779
as a spoiler<font color="#E5E5E5"> testing is good</font><font color="#CCCCCC"> you should</font>

6
00:00:23,539 --> 00:00:33,290
all do more testing<font color="#E5E5E5"> any questions</font>

7
00:00:28,779 --> 00:00:35,210
excellent<font color="#CCCCCC"> okay we can we can go now now</font>

8
00:00:33,290 --> 00:00:37,370
to do the typical shameless

9
00:00:35,210 --> 00:00:41,360
self-promotion<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> Christoph I'm a</font>

10
00:00:37,370 --> 00:00:44,989
FreeBSD developer in FreeBSD I mostly

11
00:00:41,360 --> 00:00:46,580
try<font color="#CCCCCC"> to maintain PF PF is is one of the</font>

12
00:00:44,989 --> 00:00:48,220
many firewalls<font color="#CCCCCC"> it well one of the</font><font color="#E5E5E5"> three</font>

13
00:00:46,580 --> 00:00:53,030
firewalls in freebsd

14
00:00:48,220 --> 00:00:55,129
<font color="#E5E5E5">PF we stole from borrowed from</font><font color="#CCCCCC"> openbsd</font>

15
00:00:53,030 --> 00:01:00,769
<font color="#E5E5E5">and</font><font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> return it to them you know any</font>

16
00:00:55,129 --> 00:01:03,500
day<font color="#E5E5E5"> now</font><font color="#CCCCCC"> professionally I tend to do a</font>

17
00:01:00,769 --> 00:01:05,630
lot of<font color="#E5E5E5"> embedded projects</font><font color="#CCCCCC"> quite a lot</font><font color="#E5E5E5"> of</font>

18
00:01:03,500 --> 00:01:08,470
<font color="#CCCCCC">them all</font><font color="#E5E5E5"> on you know that</font><font color="#CCCCCC"> literally</font><font color="#E5E5E5"> UNIX</font>

19
00:01:05,630 --> 00:01:11,390
operating system nobody's ever heard of

20
00:01:08,470 --> 00:01:14,960
<font color="#CCCCCC">I want to make it very clear that</font><font color="#E5E5E5"> I'm</font>

21
00:01:11,390 --> 00:01:18,760
<font color="#E5E5E5">not for sale but I am for rent at very</font>

22
00:01:14,960 --> 00:01:21,500
<font color="#E5E5E5">reasonable rates you know send me email</font>

23
00:01:18,760 --> 00:01:23,480
on to<font color="#CCCCCC"> more</font><font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> things PF is a</font>

24
00:01:21,500 --> 00:01:26,810
packet filter<font color="#CCCCCC"> I trust we all have a</font>

25
00:01:23,480 --> 00:01:29,360
vague idea<font color="#CCCCCC"> of what firewalls do stay you</font>

26
00:01:26,810 --> 00:01:30,980
know they look<font color="#E5E5E5"> at your packets clock</font>

27
00:01:29,360 --> 00:01:33,950
their tongues disapprovingly and then

28
00:01:30,980 --> 00:01:36,320
throw<font color="#CCCCCC"> some of them</font><font color="#E5E5E5"> away</font><font color="#CCCCCC"> sometimes they</font>

29
00:01:33,950 --> 00:01:37,970
let packets<font color="#E5E5E5"> through I mostly think</font>

30
00:01:36,320 --> 00:01:44,149
that's<font color="#CCCCCC"> okay that's that's usually a</font>

31
00:01:37,970 --> 00:01:47,180
mistake we imported it<font color="#CCCCCC"> from OpenBSD we</font>

32
00:01:44,150 --> 00:01:49,340
did that a while<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> I actually forgot</font>

33
00:01:47,180 --> 00:01:50,990
to look up when but it's been many<font color="#CCCCCC"> years</font>

34
00:01:49,340 --> 00:01:54,470
since we did the last<font color="#CCCCCC"> import which means</font>

35
00:01:50,990 --> 00:01:56,210
that there have<font color="#CCCCCC"> been differences you</font>

36
00:01:54,470 --> 00:01:57,710
<font color="#E5E5E5">know the OpenBSD people keep changing</font>

37
00:01:56,210 --> 00:02:01,119
their mind about<font color="#E5E5E5"> what the syntax</font><font color="#CCCCCC"> should</font>

38
00:01:57,710 --> 00:02:04,490
be and we haven't<font color="#E5E5E5"> taken any of those</font>

39
00:02:01,120 --> 00:02:06,740
changes in yet<font color="#E5E5E5"> we do take occasional bug</font>

40
00:02:04,490 --> 00:02:08,959
fixes<font color="#CCCCCC"> there's even one</font><font color="#E5E5E5"> or two commits</font>

41
00:02:06,740 --> 00:02:10,699
with my name<font color="#E5E5E5"> on it in</font><font color="#CCCCCC"> open BSD which</font>

42
00:02:08,959 --> 00:02:14,959
should<font color="#E5E5E5"> scare</font><font color="#CCCCCC"> you off that</font><font color="#E5E5E5"> particular</font>

43
00:02:10,699 --> 00:02:17,000
operating<font color="#E5E5E5"> system now that</font><font color="#CCCCCC"> I've said you</font>

44
00:02:14,959 --> 00:02:17,720
know<font color="#E5E5E5"> what we don't have in FreeBSD what</font>

45
00:02:17,000 --> 00:02:20,930
some of<font color="#E5E5E5"> the</font>

46
00:02:17,720 --> 00:02:24,260
we do have is<font color="#CCCCCC"> v nuts and I'll talk more</font>

47
00:02:20,930 --> 00:02:28,280
about<font color="#CCCCCC"> Vina</font><font color="#E5E5E5"> later and we also have is</font>

48
00:02:24,260 --> 00:02:30,980
<font color="#E5E5E5">multi-core capability so</font><font color="#CCCCCC"> PF in freebsd</font>

49
00:02:28,280 --> 00:02:34,520
<font color="#E5E5E5">tends to be quite</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good bit faster than</font>

50
00:02:30,980 --> 00:02:36,410
<font color="#E5E5E5">the one in</font><font color="#CCCCCC"> OpenBSD</font><font color="#E5E5E5"> the OpenBSD people</font>

51
00:02:34,520 --> 00:02:40,130
are working<font color="#E5E5E5"> hard on unlocking their</font>

52
00:02:36,410 --> 00:02:43,370
<font color="#E5E5E5">kernel</font><font color="#CCCCCC"> they are I think discovering as</font>

53
00:02:40,130 --> 00:02:45,799
<font color="#E5E5E5">FreeBSD did in</font><font color="#CCCCCC"> FreeBSD</font><font color="#E5E5E5"> 5 that this is</font>

54
00:02:43,370 --> 00:02:49,850
more easy<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to take</font><font color="#E5E5E5"> a while</font>

55
00:02:45,800 --> 00:02:52,250
but though they'll get<font color="#E5E5E5"> there</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> to the</font>

56
00:02:49,850 --> 00:02:53,989
<font color="#CCCCCC">inner</font><font color="#E5E5E5"> the actual topic testing why do we</font>

57
00:02:52,250 --> 00:02:58,220
want automated<font color="#E5E5E5"> testing</font><font color="#CCCCCC"> well obviously</font>

58
00:02:53,990 --> 00:02:59,870
<font color="#E5E5E5">because I'm really really really lazy so</font>

59
00:02:58,220 --> 00:03:03,910
if I can get the<font color="#E5E5E5"> computer to do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> I</font>

60
00:02:59,870 --> 00:03:07,220
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to do it that's clearly a win</font>

61
00:03:03,910 --> 00:03:08,930
<font color="#CCCCCC">testing is a good idea because our</font><font color="#E5E5E5"> users</font>

62
00:03:07,220 --> 00:03:10,310
are<font color="#CCCCCC"> very spoiled and</font><font color="#E5E5E5"> they have this</font>

63
00:03:08,930 --> 00:03:13,670
vague notion that if we give them

64
00:03:10,310 --> 00:03:16,120
software<font color="#E5E5E5"> it should actually work yeah I</font>

65
00:03:13,670 --> 00:03:19,280
know it's<font color="#E5E5E5"> there very unreasonable but</font>

66
00:03:16,120 --> 00:03:21,230
what are you<font color="#E5E5E5"> going to do</font><font color="#CCCCCC"> it's also nice</font>

67
00:03:19,280 --> 00:03:25,030
<font color="#CCCCCC">that you know when we fix the bug it</font>

68
00:03:21,230 --> 00:03:26,929
doesn't<font color="#CCCCCC"> spontaneously re-emerge</font>

69
00:03:25,030 --> 00:03:29,170
regressions are a thing<font color="#E5E5E5"> that happens</font>

70
00:03:26,930 --> 00:03:31,730
I've got<font color="#E5E5E5"> some some examples later</font><font color="#CCCCCC"> on</font>

71
00:03:29,170 --> 00:03:34,160
actually<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the next slide</font><font color="#CCCCCC"> but that's</font>

72
00:03:31,730 --> 00:03:36,320
<font color="#E5E5E5">later</font><font color="#CCCCCC"> it's also really</font><font color="#E5E5E5"> nice when you're</font>

73
00:03:34,160 --> 00:03:39,140
doing<font color="#CCCCCC"> development I recently did some</font>

74
00:03:36,320 --> 00:03:41,030
work on PF sync<font color="#E5E5E5"> and it's really nice</font>

75
00:03:39,140 --> 00:03:43,518
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> can run some tests and have an</font>

76
00:03:41,030 --> 00:03:45,200
idea<font color="#CCCCCC"> that you know I may have broken it</font>

77
00:03:43,519 --> 00:03:46,730
but at<font color="#CCCCCC"> least the breakage will be subtle</font>

78
00:03:45,200 --> 00:03:48,619
<font color="#E5E5E5">and it will take a while</font><font color="#CCCCCC"> for people</font><font color="#E5E5E5"> to</font>

79
00:03:46,730 --> 00:03:52,579
<font color="#E5E5E5">notice it doesn't explode immediately</font>

80
00:03:48,620 --> 00:03:55,280
when<font color="#E5E5E5"> you try to do this</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will confess</font>

81
00:03:52,580 --> 00:03:56,959
that<font color="#E5E5E5"> you know during development</font><font color="#CCCCCC"> I had</font>

82
00:03:55,280 --> 00:03:58,459
quite<font color="#E5E5E5"> a lot of</font><font color="#CCCCCC"> episodes</font><font color="#E5E5E5"> of you know I</font>

83
00:03:56,959 --> 00:04:02,480
think<font color="#E5E5E5"> this will work</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> you run the</font>

84
00:03:58,459 --> 00:04:05,269
<font color="#E5E5E5">test and it just massively explodes</font><font color="#CCCCCC"> but</font>

85
00:04:02,480 --> 00:04:06,798
<font color="#E5E5E5">that's you</font><font color="#CCCCCC"> know that's actually when you</font>

86
00:04:05,269 --> 00:04:08,840
want your tests to fail<font color="#CCCCCC"> as when you're</font>

87
00:04:06,799 --> 00:04:10,310
developing<font color="#E5E5E5"> rather than you know when</font>

88
00:04:08,840 --> 00:04:13,910
you've delivered it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the customer and</font>

89
00:04:10,310 --> 00:04:16,668
they're going<font color="#E5E5E5"> to start using it some</font>

90
00:04:13,910 --> 00:04:20,060
example regressions<font color="#E5E5E5"> there's a pattern</font>

91
00:04:16,668 --> 00:04:21,649
<font color="#CCCCCC">here</font><font color="#E5E5E5"> I wonder</font><font color="#CCCCCC"> if you can spot it one of</font>

92
00:04:20,060 --> 00:04:24,890
the things I did<font color="#CCCCCC"> 2pf was make it</font>

93
00:04:21,649 --> 00:04:29,810
<font color="#E5E5E5">understand v6 fragmentation and i6</font>

94
00:04:24,890 --> 00:04:31,219
fragmentation now<font color="#E5E5E5"> long long ago you know</font>

95
00:04:29,810 --> 00:04:34,280
that went in and<font color="#E5E5E5"> that worked</font>

96
00:04:31,220 --> 00:04:37,610
was wonderful<font color="#CCCCCC"> and then somebody made the</font>

97
00:04:34,280 --> 00:04:41,570
v6<font color="#E5E5E5"> for</font><font color="#CCCCCC"> rolling paths faster</font><font color="#E5E5E5"> and broke PS</font>

98
00:04:37,610 --> 00:04:45,470
fragment handling and I didn't notice

99
00:04:41,570 --> 00:04:48,290
for nine<font color="#E5E5E5"> months which</font><font color="#CCCCCC"> is you know that's</font>

100
00:04:45,470 --> 00:04:52,040
kind of painful<font color="#E5E5E5"> a painfully long</font><font color="#CCCCCC"> period</font>

101
00:04:48,290 --> 00:04:54,110
for something to be broken<font color="#CCCCCC"> and that was</font>

102
00:04:52,040 --> 00:04:55,910
before we had<font color="#E5E5E5"> any sorts of tests for</font><font color="#CCCCCC"> PF</font>

103
00:04:54,110 --> 00:04:57,860
so that would only<font color="#E5E5E5"> happen when I you</font>

104
00:04:55,910 --> 00:05:01,130
<font color="#CCCCCC">know manually built a test setup and</font>

105
00:04:57,860 --> 00:05:05,230
tried this out and you know<font color="#E5E5E5"> my weekends</font>

106
00:05:01,130 --> 00:05:05,230
are<font color="#E5E5E5"> boring</font><font color="#CCCCCC"> but they're not that</font><font color="#E5E5E5"> boring</font>

107
00:05:05,680 --> 00:05:13,130
<font color="#CCCCCC">so it did eventually end up being fixed</font>

108
00:05:09,550 --> 00:05:16,370
<font color="#E5E5E5">and a little while later</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> just</font>

109
00:05:13,130 --> 00:05:18,980
last year around<font color="#E5E5E5"> August I</font><font color="#CCCCCC"> think this</font>

110
00:05:16,370 --> 00:05:22,720
<font color="#E5E5E5">extract not handling broke again</font><font color="#CCCCCC"> this</font>

111
00:05:18,980 --> 00:05:25,010
time as<font color="#E5E5E5"> a results of</font><font color="#CCCCCC"> a security fix</font>

112
00:05:22,720 --> 00:05:27,169
<font color="#E5E5E5">there was an issue with fragment</font>

113
00:05:25,010 --> 00:05:29,000
handling<font color="#E5E5E5"> not just in three bsd but in</font>

114
00:05:27,169 --> 00:05:31,370
linux and in a bunch of other<font color="#E5E5E5"> operating</font>

115
00:05:29,000 --> 00:05:33,350
systems<font color="#E5E5E5"> where somebody you know decided</font>

116
00:05:31,370 --> 00:05:36,620
<font color="#CCCCCC">to try what would happen if i</font><font color="#E5E5E5"> generates</font>

117
00:05:33,350 --> 00:05:38,840
a evil sequence of fragmented packets

118
00:05:36,620 --> 00:05:41,330
and it turns out<font color="#CCCCCC"> that a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of operating</font>

119
00:05:38,840 --> 00:05:43,580
systems had you know<font color="#E5E5E5"> list operations and</font>

120
00:05:41,330 --> 00:05:45,890
you could exploit this<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make it take a</font>

121
00:05:43,580 --> 00:05:49,880
really really really long<font color="#CCCCCC"> time to do</font>

122
00:05:45,890 --> 00:05:53,930
fragment lookups so that was a<font color="#E5E5E5"> denial of</font>

123
00:05:49,880 --> 00:05:57,370
service vector<font color="#CCCCCC"> someone</font><font color="#E5E5E5"> fixed this I</font>

124
00:05:53,930 --> 00:06:00,290
really should have looked<font color="#E5E5E5"> up his name</font>

125
00:05:57,370 --> 00:06:03,320
<font color="#E5E5E5">but it turns out that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> fix had a bug</font>

126
00:06:00,290 --> 00:06:07,669
in it<font color="#CCCCCC"> I'll show</font><font color="#E5E5E5"> you the code and give</font>

127
00:06:03,320 --> 00:06:11,270
you a moment<font color="#CCCCCC"> to try to find the bug but</font>

128
00:06:07,669 --> 00:06:14,090
the<font color="#CCCCCC"> tests picked it up</font><font color="#E5E5E5"> immediately</font><font color="#CCCCCC"> and</font>

129
00:06:11,270 --> 00:06:16,130
it only<font color="#E5E5E5"> took</font><font color="#CCCCCC"> about two weeks between</font><font color="#E5E5E5"> the</font>

130
00:06:14,090 --> 00:06:18,830
bug actually<font color="#E5E5E5"> being introduced and the</font>

131
00:06:16,130 --> 00:06:20,330
fix going in which you know it's two

132
00:06:18,830 --> 00:06:22,099
<font color="#E5E5E5">weeks that it was broken that's not</font>

133
00:06:20,330 --> 00:06:28,430
ideal<font color="#CCCCCC"> but two weeks</font><font color="#E5E5E5"> is a lot better than</font>

134
00:06:22,100 --> 00:06:31,310
nine<font color="#E5E5E5"> months</font><font color="#CCCCCC"> it was also</font><font color="#E5E5E5"> really annoying</font>

135
00:06:28,430 --> 00:06:33,229
bug which<font color="#E5E5E5"> you know a Heisenberg</font><font color="#CCCCCC"> you try</font>

136
00:06:31,310 --> 00:06:34,669
to debug it you<font color="#CCCCCC"> attach dtrace probes to</font>

137
00:06:33,229 --> 00:06:40,940
<font color="#E5E5E5">the function and all of</font><font color="#CCCCCC"> a sudden the bug</font>

138
00:06:34,669 --> 00:06:42,620
goes away and you can't really<font color="#CCCCCC"> tell all</font>

139
00:06:40,940 --> 00:06:44,450
of<font color="#E5E5E5"> your users you know just</font><font color="#CCCCCC"> just run</font>

140
00:06:42,620 --> 00:06:47,540
this<font color="#CCCCCC"> D</font><font color="#E5E5E5"> trace probe and</font><font color="#CCCCCC"> your</font>

141
00:06:44,450 --> 00:06:50,000
your code will<font color="#CCCCCC"> work just</font><font color="#E5E5E5"> fine</font>

142
00:06:47,540 --> 00:06:52,160
also annoyingly<font color="#CCCCCC"> you know the PF tests</font>

143
00:06:50,000 --> 00:06:54,860
failed over<font color="#E5E5E5"> this so everybody thought</font>

144
00:06:52,160 --> 00:06:55,430
that's a PF bug<font color="#CCCCCC"> crystal messed it up</font>

145
00:06:54,860 --> 00:06:58,100
again

146
00:06:55,430 --> 00:06:59,930
nobody needs to<font color="#E5E5E5"> look at this so</font>

147
00:06:58,100 --> 00:07:02,420
eventually<font color="#E5E5E5"> I looks at it and discovered</font>

148
00:06:59,930 --> 00:07:05,150
you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> very confused because I had no</font>

149
00:07:02,420 --> 00:07:10,400
actually touched the v6 fragment code<font color="#CCCCCC"> in</font>

150
00:07:05,150 --> 00:07:12,739
<font color="#E5E5E5">PF in months why is this broken turns</font>

151
00:07:10,400 --> 00:07:14,090
<font color="#E5E5E5">out it wasn't</font><font color="#CCCCCC"> PF that was broken</font><font color="#E5E5E5"> it was</font>

152
00:07:12,740 --> 00:07:18,130
<font color="#E5E5E5">the rest of the</font><font color="#CCCCCC"> network stack</font><font color="#E5E5E5"> that was</font>

153
00:07:14,090 --> 00:07:20,690
broken<font color="#CCCCCC"> so here's a little bit of code</font>

154
00:07:18,130 --> 00:07:27,340
<font color="#CCCCCC">missus where fragments enter the the</font>

155
00:07:20,690 --> 00:07:27,340
<font color="#CCCCCC">stack</font><font color="#E5E5E5"> and has anyone spotted the bug yet</font>

156
00:07:28,540 --> 00:07:34,220
it is I have<font color="#E5E5E5"> actually made it slightly</font>

157
00:07:31,730 --> 00:07:36,920
obvious<font color="#E5E5E5"> so basically what it does now is</font>

158
00:07:34,220 --> 00:07:39,470
<font color="#E5E5E5">it hashes source and destination IP</font>

159
00:07:36,920 --> 00:07:41,930
address<font color="#CCCCCC"> what else does it have</font>

160
00:07:39,470 --> 00:07:44,240
<font color="#E5E5E5">presumably it hashes an ID oh yeah my</font>

161
00:07:41,930 --> 00:07:46,580
<font color="#E5E5E5">identification somewhere and it uses</font>

162
00:07:44,240 --> 00:07:48,740
this to divide up the<font color="#E5E5E5"> fragments into</font>

163
00:07:46,580 --> 00:07:52,120
buckets to make it much much<font color="#CCCCCC"> easier</font><font color="#E5E5E5"> to</font>

164
00:07:48,740 --> 00:07:56,900
find them<font color="#E5E5E5"> rather than run through lists</font>

165
00:07:52,120 --> 00:07:59,480
and it turns out<font color="#CCCCCC"> that this hash so you</font>

166
00:07:56,900 --> 00:08:03,049
know we allocate an<font color="#CCCCCC"> array and then we</font>

167
00:07:59,480 --> 00:08:08,830
hash<font color="#E5E5E5"> over the entire size of the array</font>

168
00:08:03,050 --> 00:08:13,310
the<font color="#CCCCCC"> array of four bytes you</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> 32s</font><font color="#E5E5E5"> is</font>

169
00:08:08,830 --> 00:08:15,620
four times as<font color="#CCCCCC"> big</font><font color="#E5E5E5"> as it should be so we</font>

170
00:08:13,310 --> 00:08:18,890
hash<font color="#E5E5E5"> not only the source and destination</font>

171
00:08:15,620 --> 00:08:21,290
IP address<font color="#CCCCCC"> and the ID</font><font color="#E5E5E5"> we also have</font>

172
00:08:18,890 --> 00:08:25,219
whatever<font color="#E5E5E5"> random garbage happens to be on</font>

173
00:08:21,290 --> 00:08:27,470
the<font color="#E5E5E5"> stack at that moment which makes</font>

174
00:08:25,220 --> 00:08:29,840
this hash unpredictable which means that

175
00:08:27,470 --> 00:08:31,340
you know some parts of<font color="#E5E5E5"> your fragmented</font>

176
00:08:29,840 --> 00:08:32,929
packet will end up in one<font color="#E5E5E5"> bucket some</font>

177
00:08:31,340 --> 00:08:35,539
<font color="#E5E5E5">parts will end up in another bucket and</font>

178
00:08:32,929 --> 00:08:38,449
so you never ever<font color="#CCCCCC"> managed to reassemble</font>

179
00:08:35,539 --> 00:08:40,819
<font color="#E5E5E5">them unless of course you with hash</font>

180
00:08:38,450 --> 00:08:43,290
<font color="#CCCCCC">dtrace and dtrace leaves predictable</font>

181
00:08:40,820 --> 00:08:45,030
garbage on<font color="#CCCCCC"> the stack</font>

182
00:08:43,289 --> 00:08:50,630
so they all end up in<font color="#E5E5E5"> the correct</font>

183
00:08:45,030 --> 00:08:53,220
buckets<font color="#E5E5E5"> and everything just works yeah I</font>

184
00:08:50,630 --> 00:08:54,720
there was some<font color="#E5E5E5"> amount of swearing when I</font>

185
00:08:53,220 --> 00:08:57,810
<font color="#E5E5E5">finally figured out what went</font><font color="#CCCCCC"> wrong</font>

186
00:08:54,720 --> 00:09:00,690
<font color="#E5E5E5">there</font><font color="#CCCCCC"> and it is</font><font color="#E5E5E5"> subtle enough that it's</font>

187
00:08:57,810 --> 00:09:03,209
easy<font color="#E5E5E5"> to miss so that's the patch</font><font color="#CCCCCC"> that</font>

188
00:09:00,690 --> 00:09:05,670
went in is you know<font color="#E5E5E5"> just make this array</font>

189
00:09:03,210 --> 00:09:07,590
a bit smaller<font color="#E5E5E5"> use less</font><font color="#CCCCCC"> stock</font><font color="#E5E5E5"> real estate</font>

190
00:09:05,670 --> 00:09:12,079
hash only the bits that<font color="#CCCCCC"> you actually</font>

191
00:09:07,590 --> 00:09:12,080
mean to<font color="#E5E5E5"> hash and that everything is fine</font>

192
00:09:12,530 --> 00:09:17,819
<font color="#CCCCCC">so what do we</font><font color="#E5E5E5"> want out of tests well</font>

193
00:09:16,080 --> 00:09:20,580
again we're lazy so we want them<font color="#E5E5E5"> to be</font>

194
00:09:17,820 --> 00:09:23,520
easy to<font color="#CCCCCC"> write</font><font color="#E5E5E5"> we also want other people</font>

195
00:09:20,580 --> 00:09:25,050
to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able to</font><font color="#E5E5E5"> run them not only so that</font>

196
00:09:23,520 --> 00:09:27,090
<font color="#CCCCCC">they can run them and find their own</font>

197
00:09:25,050 --> 00:09:29,459
bugs<font color="#CCCCCC"> but also so that they can write</font>

198
00:09:27,090 --> 00:09:31,380
them because you know no matter<font color="#E5E5E5"> how easy</font>

199
00:09:29,460 --> 00:09:35,400
it is to write a test<font color="#E5E5E5"> if somebody else</font>

200
00:09:31,380 --> 00:09:37,439
does it<font color="#E5E5E5"> I don't have to do the work</font><font color="#CCCCCC"> we</font>

201
00:09:35,400 --> 00:09:39,420
also wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> integrate with</font><font color="#E5E5E5"> our</font>

202
00:09:37,440 --> 00:09:42,870
existing continuous<font color="#E5E5E5"> integration</font>

203
00:09:39,420 --> 00:09:45,329
infrastructure free/busy actually has<font color="#E5E5E5"> a</font>

204
00:09:42,870 --> 00:09:48,660
fairly<font color="#CCCCCC"> large number of tests and we do</font>

205
00:09:45,330 --> 00:09:50,160
<font color="#CCCCCC">actually run them regularly so see I</font>

206
00:09:48,660 --> 00:09:53,310
don't<font color="#CCCCCC"> three BS needle org if you're</font>

207
00:09:50,160 --> 00:09:55,860
interested<font color="#E5E5E5"> so we run all of these tests</font>

208
00:09:53,310 --> 00:10:00,270
we build you<font color="#E5E5E5"> know it's always nice if</font>

209
00:09:55,860 --> 00:10:04,500
your<font color="#CCCCCC"> software actually</font><font color="#E5E5E5"> compiles and then</font>

210
00:10:00,270 --> 00:10:08,280
we<font color="#E5E5E5"> actually test this some tests failed</font>

211
00:10:04,500 --> 00:10:10,170
here<font color="#E5E5E5"> it's math related and math is</font>

212
00:10:08,280 --> 00:10:14,189
something computers do I can't<font color="#E5E5E5"> help you</font>

213
00:10:10,170 --> 00:10:17,189
with<font color="#CCCCCC"> that one about 7,300 tests and</font>

214
00:10:14,190 --> 00:10:19,650
these run<font color="#E5E5E5"> a couple</font><font color="#CCCCCC"> times a day</font><font color="#E5E5E5"> basically</font>

215
00:10:17,190 --> 00:10:20,970
<font color="#E5E5E5">you know whenever whenever it got done</font>

216
00:10:19,650 --> 00:10:24,510
doing the last<font color="#CCCCCC"> tester on</font><font color="#E5E5E5"> it there's</font>

217
00:10:20,970 --> 00:10:26,400
<font color="#CCCCCC">another one we now have</font><font color="#E5E5E5"> someone who will</font>

218
00:10:24,510 --> 00:10:30,780
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> follow up on those tests so</font>

219
00:10:26,400 --> 00:10:32,640
that's really<font color="#E5E5E5"> nice so</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> I I</font>

220
00:10:30,780 --> 00:10:34,020
maintain the firewall<font color="#CCCCCC"> so the bits</font><font color="#E5E5E5"> of</font>

221
00:10:32,640 --> 00:10:37,490
<font color="#E5E5E5">code that I would like to</font><font color="#CCCCCC"> test is</font><font color="#E5E5E5"> the</font>

222
00:10:34,020 --> 00:10:42,329
firewall<font color="#E5E5E5"> how do you go about testing</font>

223
00:10:37,490 --> 00:10:43,980
firewall<font color="#CCCCCC"> codes the typical</font><font color="#E5E5E5"> approach that</font>

224
00:10:42,330 --> 00:10:45,720
you might think first time around is

225
00:10:43,980 --> 00:10:48,240
<font color="#E5E5E5">okay we get a bunch</font><font color="#CCCCCC"> of hardware</font><font color="#E5E5E5"> we get</font>

226
00:10:45,720 --> 00:10:50,130
you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> like three machines we have</font>

227
00:10:48,240 --> 00:10:52,800
<font color="#E5E5E5">machine a machine B and then in the</font>

228
00:10:50,130 --> 00:10:54,900
<font color="#E5E5E5">middle we stick the machine where we'd</font>

229
00:10:52,800 --> 00:10:56,579
run the firewall<font color="#E5E5E5"> and we have machine</font><font color="#CCCCCC"> ace</font>

230
00:10:54,900 --> 00:10:58,410
and the packet through machine

231
00:10:56,580 --> 00:11:01,140
through the firewall machine and machine

232
00:10:58,410 --> 00:11:04,319
<font color="#CCCCCC">B</font><font color="#E5E5E5"> will go and</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> you know did this</font>

233
00:11:01,140 --> 00:11:09,779
packet make it through unmolested<font color="#CCCCCC"> that's</font>

234
00:11:04,320 --> 00:11:11,790
all fine<font color="#E5E5E5"> you know you end up with</font><font color="#CCCCCC"> having</font>

235
00:11:09,779 --> 00:11:13,980
having<font color="#E5E5E5"> to need a fair bit of hardware</font>

236
00:11:11,790 --> 00:11:16,709
<font color="#E5E5E5">and then when you want to test more</font>

237
00:11:13,980 --> 00:11:19,019
complicated setups like PF sink where

238
00:11:16,709 --> 00:11:21,689
you synchronize<font color="#CCCCCC"> states of one firewall</font>

239
00:11:19,019 --> 00:11:24,870
<font color="#E5E5E5">to another you need</font><font color="#CCCCCC"> two firewall</font>

240
00:11:21,690 --> 00:11:26,850
machines so you need<font color="#E5E5E5"> four machines and</font>

241
00:11:24,870 --> 00:11:28,800
then you might want to test<font color="#CCCCCC"> carp to do</font>

242
00:11:26,850 --> 00:11:31,470
failover so you also need<font color="#CCCCCC"> four or</font>

243
00:11:28,800 --> 00:11:34,589
possibly<font color="#E5E5E5"> even</font><font color="#CCCCCC"> more machines</font><font color="#E5E5E5"> so this gets</font>

244
00:11:31,470 --> 00:11:37,620
to be<font color="#CCCCCC"> a bit expensive I'll also</font><font color="#E5E5E5"> leave</font>

245
00:11:34,589 --> 00:11:39,390
that you<font color="#E5E5E5"> know how would you configure</font>

246
00:11:37,620 --> 00:11:41,880
this machine<font color="#E5E5E5"> well you des</font><font color="#CCCCCC"> SH into its</font>

247
00:11:39,390 --> 00:11:45,630
<font color="#CCCCCC">accept that we</font><font color="#E5E5E5"> have just configured the</font>

248
00:11:41,880 --> 00:11:47,550
firewall to drop all<font color="#CCCCCC"> traffic</font><font color="#E5E5E5"> okay fine</font>

249
00:11:45,630 --> 00:11:50,700
<font color="#CCCCCC">you can you can you know you</font><font color="#E5E5E5"> can attach</font>

250
00:11:47,550 --> 00:11:53,099
<font color="#CCCCCC">the serial ports or you can use IP mi on</font>

251
00:11:50,700 --> 00:11:55,079
a different interface<font color="#E5E5E5"> but you know your</font>

252
00:11:53,100 --> 00:11:56,899
hardware budget starts to grow<font color="#E5E5E5"> fairly</font>

253
00:11:55,079 --> 00:11:59,339
significantly if you want to do this

254
00:11:56,899 --> 00:12:00,810
then you've<font color="#E5E5E5"> got another issue that</font><font color="#CCCCCC"> you</font>

255
00:11:59,339 --> 00:12:03,270
know you<font color="#E5E5E5"> really want to be running the</font>

256
00:12:00,810 --> 00:12:06,989
latest<font color="#E5E5E5"> and greatest code so you can</font>

257
00:12:03,270 --> 00:12:08,339
possibly netboot this thing which<font color="#E5E5E5"> is</font>

258
00:12:06,990 --> 00:12:10,950
<font color="#CCCCCC">really annoying</font><font color="#E5E5E5"> if you want to test</font><font color="#CCCCCC"> a</font>

259
00:12:08,339 --> 00:12:13,290
firewall<font color="#E5E5E5"> also you know you need a server</font>

260
00:12:10,950 --> 00:12:15,270
to host<font color="#E5E5E5"> this home and</font><font color="#CCCCCC"> your setup gets to</font>

261
00:12:13,290 --> 00:12:16,890
<font color="#E5E5E5">become really really</font><font color="#CCCCCC"> complicated you</font>

262
00:12:15,270 --> 00:12:20,160
<font color="#E5E5E5">need to deal</font><font color="#CCCCCC"> with you</font><font color="#E5E5E5"> know this box</font>

263
00:12:16,890 --> 00:12:22,050
panicked<font color="#E5E5E5"> so now we need</font><font color="#CCCCCC"> to reboot it</font><font color="#E5E5E5"> and</font>

264
00:12:20,160 --> 00:12:24,240
we can't log<font color="#E5E5E5"> into it so we need to do</font>

265
00:12:22,050 --> 00:12:27,020
this<font color="#E5E5E5"> over serial but if you ever try to</font>

266
00:12:24,240 --> 00:12:29,250
do interactive scripting against

267
00:12:27,020 --> 00:12:29,939
something<font color="#CCCCCC"> that's intended to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> by</font>

268
00:12:29,250 --> 00:12:32,399
<font color="#CCCCCC">a human</font>

269
00:12:29,940 --> 00:12:34,709
<font color="#E5E5E5">that's hideously unreliable so you need</font>

270
00:12:32,399 --> 00:12:37,740
a remote power switch<font color="#CCCCCC"> its to be you know</font>

271
00:12:34,709 --> 00:12:40,199
very<font color="#E5E5E5"> complicated very expensive slow</font>

272
00:12:37,740 --> 00:12:43,260
<font color="#E5E5E5">because machines take forever to boot</font>

273
00:12:40,199 --> 00:12:45,689
<font color="#CCCCCC">and you know where would this hardware</font>

274
00:12:43,260 --> 00:12:47,220
live the FreeBSD project has some

275
00:12:45,690 --> 00:12:49,199
<font color="#E5E5E5">friends who would you know lend them</font><font color="#CCCCCC"> the</font>

276
00:12:47,220 --> 00:12:51,660
hardware and<font color="#CCCCCC"> who</font><font color="#E5E5E5"> would host it for</font><font color="#CCCCCC"> them</font>

277
00:12:49,199 --> 00:12:53,609
but then you only<font color="#E5E5E5"> have the one set up so</font>

278
00:12:51,660 --> 00:12:55,469
how do other<font color="#CCCCCC"> people write tests</font><font color="#E5E5E5"> so this</font>

279
00:12:53,610 --> 00:12:58,769
is a very unsatisfactory source of

280
00:12:55,470 --> 00:13:01,410
solution it<font color="#E5E5E5"> turns out that these days</font>

281
00:12:58,769 --> 00:13:04,579
you can have<font color="#E5E5E5"> virtual</font><font color="#CCCCCC"> machines does</font>

282
00:13:01,410 --> 00:13:04,579
anyone ever heard<font color="#CCCCCC"> of this concept</font>

283
00:13:05,089 --> 00:13:10,930
<font color="#CCCCCC">FreeBSD even has its own hypervisor</font><font color="#E5E5E5"> be</font>

284
00:13:08,670 --> 00:13:12,729
<font color="#CCCCCC">and this is the approach we've actually</font>

285
00:13:10,930 --> 00:13:15,520
<font color="#E5E5E5">taken</font><font color="#CCCCCC"> in a google Summer of Code project</font>

286
00:13:12,730 --> 00:13:17,020
<font color="#CCCCCC">and it</font><font color="#E5E5E5"> has a bunch of advantages</font><font color="#CCCCCC"> because</font>

287
00:13:15,520 --> 00:13:20,290
you don't need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> buy all of this</font>

288
00:13:17,020 --> 00:13:23,770
<font color="#E5E5E5">hardware and what more people can build</font>

289
00:13:20,290 --> 00:13:25,150
this<font color="#CCCCCC"> set up but</font><font color="#E5E5E5"> you've still got</font><font color="#CCCCCC"> you</font>

290
00:13:23,770 --> 00:13:26,590
know what<font color="#CCCCCC"> if we book</font><font color="#E5E5E5"> all the traffic</font>

291
00:13:25,150 --> 00:13:28,540
<font color="#CCCCCC">okay we</font><font color="#E5E5E5"> need to use</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> serial interface</font>

292
00:13:26,590 --> 00:13:32,260
<font color="#CCCCCC">your configuration gets to be a bit</font>

293
00:13:28,540 --> 00:13:34,060
<font color="#E5E5E5">complicated</font><font color="#CCCCCC"> another issue</font><font color="#E5E5E5"> is that the</font>

294
00:13:32,260 --> 00:13:36,189
way the tests are currently<font color="#E5E5E5"> run is they</font>

295
00:13:34,060 --> 00:13:37,540
<font color="#E5E5E5">run in a virtual machine</font><font color="#CCCCCC"> because that's</font>

296
00:13:36,190 --> 00:13:42,040
a really convenient<font color="#E5E5E5"> way to run your</font>

297
00:13:37,540 --> 00:13:43,599
<font color="#E5E5E5">tests but if we want our</font><font color="#CCCCCC"> test to start</font>

298
00:13:42,040 --> 00:13:46,209
up a virtual<font color="#E5E5E5"> machine we</font><font color="#CCCCCC"> have to have</font>

299
00:13:43,600 --> 00:13:49,930
nested virtual machines<font color="#E5E5E5"> and that becomes</font>

300
00:13:46,210 --> 00:13:51,880
a<font color="#E5E5E5"> lot more interesting</font><font color="#CCCCCC"> that's also and</font>

301
00:13:49,930 --> 00:13:53,739
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> probably more an artifact of how</font>

302
00:13:51,880 --> 00:13:55,330
we do<font color="#CCCCCC"> our builds in our</font><font color="#E5E5E5"> tests but</font><font color="#CCCCCC"> it's</font>

303
00:13:53,740 --> 00:13:57,460
really<font color="#E5E5E5"> really annoying</font>

304
00:13:55,330 --> 00:13:59,860
<font color="#CCCCCC">to build a</font><font color="#E5E5E5"> virtual machine from your</font>

305
00:13:57,460 --> 00:14:01,480
test<font color="#CCCCCC"> setup where</font><font color="#E5E5E5"> you might not have the</font>

306
00:13:59,860 --> 00:14:04,000
source code installed you might not have

307
00:14:01,480 --> 00:14:06,700
already<font color="#E5E5E5"> compiled it and building that</font>

308
00:14:04,000 --> 00:14:09,580
virtual machine<font color="#E5E5E5"> actually building it can</font>

309
00:14:06,700 --> 00:14:12,190
be slow never mind<font color="#E5E5E5"> booting it so this is</font>

310
00:14:09,580 --> 00:14:16,150
better but<font color="#E5E5E5"> it is still annoying</font><font color="#CCCCCC"> an</font>

311
00:14:12,190 --> 00:14:20,020
annoying<font color="#E5E5E5"> setup so what we finally wound</font>

312
00:14:16,150 --> 00:14:21,760
up with is<font color="#CCCCCC"> V nuts</font><font color="#E5E5E5"> and before we actually</font>

313
00:14:20,020 --> 00:14:24,430
<font color="#E5E5E5">go into that it might be useful</font><font color="#CCCCCC"> to</font>

314
00:14:21,760 --> 00:14:28,270
explain<font color="#E5E5E5"> what V net is so how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> of you</font>

315
00:14:24,430 --> 00:14:29,920
know what V nut does<font color="#E5E5E5"> Oh excellent then</font>

316
00:14:28,270 --> 00:14:34,740
you guys can<font color="#E5E5E5"> explain it and I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have</font>

317
00:14:29,920 --> 00:14:38,079
to basically<font color="#CCCCCC"> veena is virtual IP stacks</font>

318
00:14:34,740 --> 00:14:41,440
<font color="#CCCCCC">Linux</font><font color="#E5E5E5"> has jails like containers but</font>

319
00:14:38,080 --> 00:14:43,630
we've had them<font color="#CCCCCC"> for a lot longer and you</font>

320
00:14:41,440 --> 00:14:46,120
can<font color="#E5E5E5"> associate an IP</font><font color="#CCCCCC"> sock with this jail</font>

321
00:14:43,630 --> 00:14:47,890
now which means<font color="#E5E5E5"> that you can from inside</font>

322
00:14:46,120 --> 00:14:50,890
the jail<font color="#CCCCCC"> you can set an IP address you</font>

323
00:14:47,890 --> 00:14:54,100
<font color="#E5E5E5">can run a DHCP client and you can</font>

324
00:14:50,890 --> 00:14:57,100
configure a firewall<font color="#CCCCCC"> this</font><font color="#E5E5E5"> has been</font>

325
00:14:54,100 --> 00:14:58,930
enabled<font color="#CCCCCC"> by default in 12</font><font color="#E5E5E5"> the latest</font>

326
00:14:57,100 --> 00:15:03,010
release<font color="#E5E5E5"> everybody should be running 12</font>

327
00:14:58,930 --> 00:15:04,719
it's awesome<font color="#CCCCCC"> PAF supports</font><font color="#E5E5E5"> this now by</font>

328
00:15:03,010 --> 00:15:06,370
<font color="#CCCCCC">which I</font><font color="#E5E5E5"> mean I don't know of any way</font><font color="#CCCCCC"> to</font>

329
00:15:04,720 --> 00:15:08,140
make it panic<font color="#E5E5E5"> I'm sure there are some</font>

330
00:15:06,370 --> 00:15:10,600
and if you know<font color="#E5E5E5"> of any you know file</font>

331
00:15:08,140 --> 00:15:14,380
bugs and tell me about<font color="#E5E5E5"> it but it</font>

332
00:15:10,600 --> 00:15:16,960
actually<font color="#CCCCCC"> does mostly</font><font color="#E5E5E5"> work now</font><font color="#CCCCCC"> which</font>

333
00:15:14,380 --> 00:15:19,270
means<font color="#E5E5E5"> you can start up a jail and give</font>

334
00:15:16,960 --> 00:15:20,860
<font color="#E5E5E5">its own firewall which means we can</font><font color="#CCCCCC"> just</font>

335
00:15:19,270 --> 00:15:23,170
start<font color="#E5E5E5"> the jail throw some</font><font color="#CCCCCC"> traffic</font>

336
00:15:20,860 --> 00:15:25,130
<font color="#CCCCCC">outside</font><font color="#E5E5E5"> see what</font>

337
00:15:23,170 --> 00:15:26,870
<font color="#E5E5E5">so how do we do this</font>

338
00:15:25,130 --> 00:15:28,339
<font color="#E5E5E5">you know I don't know how many of</font><font color="#CCCCCC"> you</font>

339
00:15:26,870 --> 00:15:30,500
have played<font color="#CCCCCC"> with</font><font color="#E5E5E5"> Linux containers but</font>

340
00:15:28,339 --> 00:15:32,330
there's a lot of stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> goes on to</font>

341
00:15:30,500 --> 00:15:35,089
actually make that<font color="#E5E5E5"> container behave the</font>

342
00:15:32,330 --> 00:15:37,010
way you want it<font color="#CCCCCC"> to behave any number of</font>

343
00:15:35,089 --> 00:15:38,600
<font color="#CCCCCC">moving parts and any number</font><font color="#E5E5E5"> of things</font>

344
00:15:37,010 --> 00:15:40,459
that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> configured and you know</font>

345
00:15:38,600 --> 00:15:42,110
your abstraction layers like docker<font color="#E5E5E5"> will</font>

346
00:15:40,459 --> 00:15:45,290
do that<font color="#E5E5E5"> for you but there's still a lot</font>

347
00:15:42,110 --> 00:15:47,089
<font color="#CCCCCC">of moving parts on three BSD</font><font color="#E5E5E5"> you know I</font>

348
00:15:45,290 --> 00:15:50,719
bet it's it's<font color="#E5E5E5"> actually not that</font>

349
00:15:47,089 --> 00:15:54,560
<font color="#E5E5E5">difficult that's it that's a jail with</font>

350
00:15:50,720 --> 00:15:56,360
<font color="#E5E5E5">its own IP stack yeah you start to jail</font>

351
00:15:54,560 --> 00:15:58,399
<font color="#E5E5E5">you give it a</font><font color="#CCCCCC"> name</font><font color="#E5E5E5"> I've named it</font>

352
00:15:56,360 --> 00:16:01,040
Alcatraz<font color="#E5E5E5"> because I think that sort of</font>

353
00:15:58,399 --> 00:16:02,810
thing is funny<font color="#E5E5E5"> and then you tell it that</font>

354
00:16:01,040 --> 00:16:05,689
<font color="#CCCCCC">you want it to have its own</font><font color="#E5E5E5"> IP stack so</font>

355
00:16:02,810 --> 00:16:07,518
<font color="#CCCCCC">V nuts</font><font color="#E5E5E5"> and you want the jail to stay to</font>

356
00:16:05,690 --> 00:16:12,470
remain running<font color="#CCCCCC"> even</font><font color="#E5E5E5"> if no processes are</font>

357
00:16:07,519 --> 00:16:14,029
<font color="#CCCCCC">running in it</font><font color="#E5E5E5"> so persist that's it of</font>

358
00:16:12,470 --> 00:16:15,920
course I've lied to<font color="#CCCCCC"> you</font><font color="#E5E5E5"> slightly because</font>

359
00:16:14,029 --> 00:16:18,079
<font color="#E5E5E5">that's not quite everything that there</font>

360
00:16:15,920 --> 00:16:20,209
<font color="#CCCCCC">is to it because while this</font><font color="#E5E5E5"> jail now has</font>

361
00:16:18,079 --> 00:16:22,300
its own IP stack it doesn't have any

362
00:16:20,209 --> 00:16:28,040
network interfaces

363
00:16:22,300 --> 00:16:30,260
it has loopback<font color="#E5E5E5"> but yeah you know</font>

364
00:16:28,040 --> 00:16:31,910
firewalling loopback is is perhaps<font color="#E5E5E5"> not</font>

365
00:16:30,260 --> 00:16:34,520
<font color="#E5E5E5">the</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> productive thing you could be</font>

366
00:16:31,910 --> 00:16:35,839
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> with yourself I'm not going I'm</font>

367
00:16:34,520 --> 00:16:38,779
<font color="#CCCCCC">not going</font><font color="#E5E5E5"> to tell you how to spend</font><font color="#CCCCCC"> your</font>

368
00:16:35,839 --> 00:16:42,980
Saturday<font color="#E5E5E5"> but yeah consider picking up a</font>

369
00:16:38,779 --> 00:16:46,010
different hobby<font color="#CCCCCC"> so what you need</font><font color="#E5E5E5"> to do</font>

370
00:16:42,980 --> 00:16:48,589
is we need to<font color="#CCCCCC"> create well what we we do</font>

371
00:16:46,010 --> 00:16:51,319
in the tests<font color="#CCCCCC"> is we create an e pair and</font>

372
00:16:48,589 --> 00:16:53,839
an<font color="#E5E5E5"> e pair is</font><font color="#CCCCCC"> basically two network cards</font>

373
00:16:51,320 --> 00:16:55,160
<font color="#E5E5E5">with a cable between them virtual</font>

374
00:16:53,839 --> 00:16:56,899
network cards you can't actually use

375
00:16:55,160 --> 00:16:59,240
<font color="#E5E5E5">them to link up to different</font><font color="#CCCCCC"> machines</font>

376
00:16:56,899 --> 00:17:01,399
but<font color="#E5E5E5"> within one machine you can link up</font>

377
00:16:59,240 --> 00:17:04,370
virtual machines<font color="#CCCCCC"> or jails</font><font color="#E5E5E5"> or stuff with</font>

378
00:17:01,399 --> 00:17:07,459
them so we create one<font color="#CCCCCC"> we assign an IP</font>

379
00:17:04,369 --> 00:17:09,139
address<font color="#E5E5E5"> to it and then we tell the jail</font>

380
00:17:07,459 --> 00:17:12,020
that<font color="#CCCCCC"> you know you can have</font><font color="#E5E5E5"> this network</font>

381
00:17:09,140 --> 00:17:13,640
interface and an additional really fun

382
00:17:12,020 --> 00:17:16,160
thing about jails is they make it really

383
00:17:13,640 --> 00:17:18,709
<font color="#CCCCCC">easy to execute things inside the jail</font>

384
00:17:16,160 --> 00:17:22,100
so here we go<font color="#E5E5E5"> yeah execute in the jail</font>

385
00:17:18,709 --> 00:17:24,980
ifconfig<font color="#CCCCCC"> a pair 0b set this IP address</font>

386
00:17:22,099 --> 00:17:28,159
and up<font color="#E5E5E5"> the jail and after we've them up</font>

387
00:17:24,980 --> 00:17:30,770
now we have one<font color="#E5E5E5"> external interface on</font>

388
00:17:28,160 --> 00:17:34,600
the host host system we have one

389
00:17:30,770 --> 00:17:34,600
internal inside jail and

390
00:17:34,690 --> 00:17:39,770
should<font color="#E5E5E5"> actually include the</font><font color="#CCCCCC"> name of</font><font color="#E5E5E5"> jail</font>

391
00:17:37,730 --> 00:17:42,380
here so there's a typo in<font color="#E5E5E5"> the slides and</font>

392
00:17:39,770 --> 00:17:43,879
then you can ping the<font color="#E5E5E5"> jail there you go</font>

393
00:17:42,380 --> 00:17:44,890
<font color="#CCCCCC">what testing that the network stack</font>

394
00:17:43,880 --> 00:17:47,779
works

395
00:17:44,890 --> 00:17:49,429
ICMP echoes are not very exciting but

396
00:17:47,779 --> 00:17:53,840
<font color="#E5E5E5">they do actually exercise a fair bit of</font>

397
00:17:49,429 --> 00:17:59,299
your<font color="#E5E5E5"> functionality</font><font color="#CCCCCC"> so why</font><font color="#E5E5E5"> don't we take</font>

398
00:17:53,840 --> 00:18:01,189
a look at the basic<font color="#E5E5E5"> test</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not the</font>

399
00:17:59,299 --> 00:18:05,110
entire<font color="#E5E5E5"> test that's basically</font><font color="#CCCCCC"> just that's</font>

400
00:18:01,190 --> 00:18:08,630
<font color="#E5E5E5">just</font><font color="#CCCCCC"> the header</font><font color="#E5E5E5"> we use a TF that we have</font>

401
00:18:05,110 --> 00:18:10,760
you know we we noticed<font color="#CCCCCC"> that net</font><font color="#E5E5E5"> bsd had</font>

402
00:18:08,630 --> 00:18:13,039
left their front door unlocked<font color="#E5E5E5"> one night</font>

403
00:18:10,760 --> 00:18:18,529
<font color="#E5E5E5">so we went in and took their testing</font>

404
00:18:13,039 --> 00:18:20,480
framework<font color="#CCCCCC"> didn't quite entirely possible</font>

405
00:18:18,529 --> 00:18:22,159
<font color="#CCCCCC">I I haven't</font><font color="#E5E5E5"> actually looked at the new</font>

406
00:18:20,480 --> 00:18:28,039
one<font color="#E5E5E5"> yet because they keep locking their</font>

407
00:18:22,159 --> 00:18:31,490
door now so what do we<font color="#E5E5E5"> do</font><font color="#CCCCCC"> you know we we</font>

408
00:18:28,039 --> 00:18:32,870
declare a test<font color="#E5E5E5"> case for v4 it's got a</font>

409
00:18:31,490 --> 00:18:34,520
<font color="#CCCCCC">cleanup</font><font color="#E5E5E5"> function will see the</font><font color="#CCCCCC"> cleanup</font>

410
00:18:32,870 --> 00:18:36,408
<font color="#E5E5E5">function after we've</font><font color="#CCCCCC"> done the really</font>

411
00:18:34,520 --> 00:18:38,480
interesting<font color="#E5E5E5"> things you can set a</font>

412
00:18:36,409 --> 00:18:42,049
<font color="#E5E5E5">description and you know this test</font>

413
00:18:38,480 --> 00:18:44,210
actually<font color="#E5E5E5"> wants to</font><font color="#CCCCCC"> run as root</font><font color="#E5E5E5"> the nanny</font>

414
00:18:42,049 --> 00:18:45,649
<font color="#E5E5E5">state</font><font color="#CCCCCC"> of FreeBSD has decided that</font><font color="#E5E5E5"> you</font>

415
00:18:44,210 --> 00:18:47,690
know if you want<font color="#E5E5E5"> to create network</font>

416
00:18:45,649 --> 00:18:48,918
interfaces<font color="#E5E5E5"> and start jails and and</font>

417
00:18:47,690 --> 00:18:51,169
configure the firewall

418
00:18:48,919 --> 00:18:56,110
maybe we<font color="#E5E5E5"> shouldn't let every single user</font>

419
00:18:51,169 --> 00:18:59,740
on the system<font color="#E5E5E5"> do this</font><font color="#CCCCCC"> that's how it</font><font color="#E5E5E5"> is</font>

420
00:18:56,110 --> 00:19:03,799
<font color="#CCCCCC">so that's</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> set up code you can</font>

421
00:18:59,740 --> 00:19:06,740
forget this<font color="#E5E5E5"> that it's not important</font><font color="#CCCCCC"> this</font>

422
00:19:03,799 --> 00:19:08,539
<font color="#E5E5E5">is the actual test and this is it's a</font>

423
00:19:06,740 --> 00:19:10,909
<font color="#E5E5E5">very basic test but it is</font><font color="#CCCCCC"> already a</font>

424
00:19:08,539 --> 00:19:14,690
useful test<font color="#E5E5E5"> it tests that the firewall</font>

425
00:19:10,909 --> 00:19:17,990
works and blocks packets<font color="#CCCCCC"> so what do we</font>

426
00:19:14,690 --> 00:19:19,760
<font color="#E5E5E5">do some initialization codes everything</font>

427
00:19:17,990 --> 00:19:21,200
<font color="#CCCCCC">the</font><font color="#E5E5E5"> initialization code does is make</font>

428
00:19:19,760 --> 00:19:24,140
sure<font color="#CCCCCC"> that you know you've actually</font>

429
00:19:21,200 --> 00:19:26,120
loaded the<font color="#CCCCCC"> bf module</font><font color="#E5E5E5"> it is very hard</font><font color="#CCCCCC"> to</font>

430
00:19:24,140 --> 00:19:29,240
test a firewall if the codes not not in

431
00:19:26,120 --> 00:19:33,379
the kernel<font color="#CCCCCC"> so if it's not loaded</font><font color="#E5E5E5"> this</font>

432
00:19:29,240 --> 00:19:36,590
test will just be skipped<font color="#E5E5E5"> next step</font>

433
00:19:33,380 --> 00:19:38,450
<font color="#E5E5E5">create an e pair set up an IP address</font>

434
00:19:36,590 --> 00:19:40,549
<font color="#E5E5E5">only pair so basically what we saw</font>

435
00:19:38,450 --> 00:19:42,500
<font color="#E5E5E5">before is we want an interface in the</font>

436
00:19:40,549 --> 00:19:45,940
<font color="#CCCCCC">host we want an interface in the jail so</font>

437
00:19:42,500 --> 00:19:47,730
<font color="#E5E5E5">that we can send traffic back and forth</font>

438
00:19:45,940 --> 00:19:50,160
make a jail

439
00:19:47,730 --> 00:19:53,610
there's a wrapper around<font color="#E5E5E5"> this just to</font>

440
00:19:50,160 --> 00:19:55,590
make it<font color="#E5E5E5"> slightly</font><font color="#CCCCCC"> easier to type</font><font color="#E5E5E5"> what it</font>

441
00:19:53,610 --> 00:19:57,719
also does is<font color="#CCCCCC"> it</font><font color="#E5E5E5"> keeps track of the list</font>

442
00:19:55,590 --> 00:19:59,550
of<font color="#CCCCCC"> gels you've created so that</font><font color="#E5E5E5"> in the</font>

443
00:19:57,720 --> 00:20:02,820
cleaner it will automatically destroy

444
00:19:59,550 --> 00:20:06,060
all<font color="#CCCCCC"> of these gels quite nice to actually</font>

445
00:20:02,820 --> 00:20:08,280
<font color="#CCCCCC">clean up after yourself certain IP</font>

446
00:20:06,060 --> 00:20:11,280
<font color="#E5E5E5">address in</font><font color="#CCCCCC"> the jail and then a sanity</font>

447
00:20:08,280 --> 00:20:15,360
<font color="#CCCCCC">test</font><font color="#E5E5E5"> check can we actually ping this</font>

448
00:20:11,280 --> 00:20:18,690
jail now<font color="#E5E5E5"> so if if things fail here it's</font>

449
00:20:15,360 --> 00:20:22,649
not actually a PF bug because<font color="#E5E5E5"> PF is not</font>

450
00:20:18,690 --> 00:20:25,200
enabled<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> but we might as well test</font>

451
00:20:22,650 --> 00:20:27,120
that this works<font color="#CCCCCC"> so</font><font color="#E5E5E5"> ATF check you know</font>

452
00:20:25,200 --> 00:20:28,740
<font color="#E5E5E5">run this command then check that</font><font color="#CCCCCC"> the</font>

453
00:20:27,120 --> 00:20:31,080
exit<font color="#E5E5E5"> status is</font><font color="#CCCCCC"> zero</font>

454
00:20:28,740 --> 00:20:35,340
ignore the output and then run a ping

455
00:20:31,080 --> 00:20:37,830
commands you know one<font color="#CCCCCC"> ping only</font><font color="#E5E5E5"> with a</font>

456
00:20:35,340 --> 00:20:40,679
<font color="#E5E5E5">timeout of one seconds</font><font color="#CCCCCC"> because if your</font>

457
00:20:37,830 --> 00:20:42,389
echo<font color="#CCCCCC"> request</font><font color="#E5E5E5"> hasn't made it to</font><font color="#CCCCCC"> a jail</font>

458
00:20:40,680 --> 00:20:47,760
running on the same host<font color="#E5E5E5"> within a second</font>

459
00:20:42,390 --> 00:20:50,520
something's probably<font color="#CCCCCC"> wrong next up is we</font>

460
00:20:47,760 --> 00:20:54,060
enable PF + PF defaults to<font color="#E5E5E5"> allowing all</font>

461
00:20:50,520 --> 00:20:57,000
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> traffic to go through and then</font><font color="#E5E5E5"> we</font>

462
00:20:54,060 --> 00:20:58,919
can<font color="#E5E5E5"> still ping and then when we tell PF</font>

463
00:20:57,000 --> 00:21:02,070
to block all<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> traffic</font>

464
00:20:58,920 --> 00:21:06,300
we can't ping<font color="#E5E5E5"> anymore hence the you know</font>

465
00:21:02,070 --> 00:21:08,939
exit status<font color="#CCCCCC"> - it won't work anymore and</font>

466
00:21:06,300 --> 00:21:11,040
<font color="#CCCCCC">that's that's a very</font><font color="#E5E5E5"> basic test of</font>

467
00:21:08,940 --> 00:21:15,000
course you know the firewall should be

468
00:21:11,040 --> 00:21:16,740
able<font color="#CCCCCC"> to make more fine-grained decisions</font>

469
00:21:15,000 --> 00:21:18,920
on<font color="#E5E5E5"> your packet let's say then you know</font>

470
00:21:16,740 --> 00:21:22,260
allow all packets or deny all<font color="#E5E5E5"> packets</font>

471
00:21:18,920 --> 00:21:23,670
but it's basic functionality test the

472
00:21:22,260 --> 00:21:25,440
<font color="#E5E5E5">rest of this test actually does a little</font>

473
00:21:23,670 --> 00:21:28,410
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> more but this is</font><font color="#E5E5E5"> all I could fit on</font>

474
00:21:25,440 --> 00:21:31,860
the slide<font color="#CCCCCC"> but you</font><font color="#E5E5E5"> can see how you can</font>

475
00:21:28,410 --> 00:21:34,740
fairly trivially<font color="#CCCCCC"> test</font><font color="#E5E5E5"> that I can filter</font>

476
00:21:31,860 --> 00:21:38,389
<font color="#E5E5E5">out only ICMP echoes and then I can</font>

477
00:21:34,740 --> 00:21:38,390
still tell<font color="#CCCCCC"> that into it</font><font color="#E5E5E5"> or whatever</font>

478
00:21:39,410 --> 00:21:46,830
<font color="#E5E5E5">cleanup codes clean up and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> add the</font>

479
00:21:43,380 --> 00:21:50,220
test<font color="#E5E5E5"> case to</font><font color="#CCCCCC"> the list of test cases so</font>

480
00:21:46,830 --> 00:21:52,949
if you run<font color="#E5E5E5"> this using QR which is</font>

481
00:21:50,220 --> 00:21:55,500
another tool that we<font color="#E5E5E5"> happen</font><font color="#CCCCCC"> to spot</font>

482
00:21:52,950 --> 00:21:59,430
lying in an<font color="#E5E5E5"> unlocked garage from that</font>

483
00:21:55,500 --> 00:22:01,380
<font color="#CCCCCC">VSD you can tell queue</font><font color="#E5E5E5"> out you know run</font>

484
00:21:59,430 --> 00:22:03,809
this one<font color="#E5E5E5"> particular test</font>

485
00:22:01,380 --> 00:22:05,309
and it will<font color="#E5E5E5"> run</font><font color="#CCCCCC"> the test</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> will</font>

486
00:22:03,809 --> 00:22:09,418
see that the test took<font color="#E5E5E5"> one point two</font>

487
00:22:05,309 --> 00:22:11,580
seconds one point two seconds<font color="#E5E5E5"> of which</font>

488
00:22:09,419 --> 00:22:13,740
had spent an entire seconds<font color="#E5E5E5"> waiting for</font>

489
00:22:11,580 --> 00:22:17,580
an ICMP reply that we knew would<font color="#E5E5E5"> never</font>

490
00:22:13,740 --> 00:22:20,640
turn<font color="#E5E5E5"> up so 0.2 seconds to start up a</font>

491
00:22:17,580 --> 00:22:22,678
<font color="#CCCCCC">machine a jail</font><font color="#E5E5E5"> configure the networking</font>

492
00:22:20,640 --> 00:22:25,140
<font color="#E5E5E5">on it configure the firewall and tear it</font>

493
00:22:22,679 --> 00:22:27,799
all down again<font color="#CCCCCC"> I think we've satisfied</font>

494
00:22:25,140 --> 00:22:30,780
<font color="#E5E5E5">the you know these tests are quick</font>

495
00:22:27,799 --> 00:22:33,030
we've also satisfied that everyone can

496
00:22:30,780 --> 00:22:35,760
run this<font color="#E5E5E5"> because you don't need anything</font>

497
00:22:33,030 --> 00:22:39,928
<font color="#E5E5E5">if you've got a</font><font color="#CCCCCC"> freebsd system running</font>

498
00:22:35,760 --> 00:22:43,260
<font color="#E5E5E5">three</font><font color="#CCCCCC"> bearsy 12 system or currents or or</font>

499
00:22:39,929 --> 00:22:45,299
even<font color="#CCCCCC"> an 11 system although there</font><font color="#E5E5E5"> are</font>

500
00:22:43,260 --> 00:22:47,460
running number of bugs still<font color="#E5E5E5"> in the</font>

501
00:22:45,299 --> 00:22:49,110
image in<font color="#E5E5E5"> 11 so it's</font><font color="#CCCCCC"> most enabled</font><font color="#E5E5E5"> by</font>

502
00:22:47,460 --> 00:22:51,299
default<font color="#E5E5E5"> there you could build your own</font>

503
00:22:49,110 --> 00:22:54,719
but if you want the<font color="#E5E5E5"> image you really</font>

504
00:22:51,299 --> 00:22:57,120
want to be<font color="#CCCCCC"> running 12 it also stores the</font>

505
00:22:54,720 --> 00:22:58,980
<font color="#CCCCCC">test results so you</font><font color="#E5E5E5"> can later on go and</font>

506
00:22:57,120 --> 00:23:01,080
have a look at what was the<font color="#CCCCCC"> output what</font>

507
00:22:58,980 --> 00:23:02,610
environment<font color="#E5E5E5"> variables were set what was</font>

508
00:23:01,080 --> 00:23:07,350
the timing<font color="#CCCCCC"> are all sorts of things like</font>

509
00:23:02,610 --> 00:23:09,570
<font color="#CCCCCC">that</font><font color="#E5E5E5"> this was a very simple test I've</font>

510
00:23:07,350 --> 00:23:13,020
mentioned PF<font color="#CCCCCC"> sync</font><font color="#E5E5E5"> before so let's take a</font>

511
00:23:09,570 --> 00:23:15,418
look at a really complicated test<font color="#CCCCCC"> this</font>

512
00:23:13,020 --> 00:23:17,309
is just half of<font color="#CCCCCC"> the test</font><font color="#E5E5E5"> but this is a</font>

513
00:23:15,419 --> 00:23:19,380
very basic test for PF sync it

514
00:23:17,309 --> 00:23:22,289
synchronizes States from one firewall<font color="#E5E5E5"> to</font>

515
00:23:19,380 --> 00:23:24,330
another so what do<font color="#CCCCCC"> we need well we need</font>

516
00:23:22,289 --> 00:23:27,059
an interface<font color="#E5E5E5"> over which they can</font><font color="#CCCCCC"> sync we</font>

517
00:23:24,330 --> 00:23:29,070
need<font color="#E5E5E5"> two jails that will have</font><font color="#CCCCCC"> States</font><font color="#E5E5E5"> and</font>

518
00:23:27,059 --> 00:23:31,830
we will<font color="#E5E5E5"> just send our traffic from the</font>

519
00:23:29,070 --> 00:23:35,039
<font color="#CCCCCC">host so we create jail</font><font color="#E5E5E5"> one in jail -</font>

520
00:23:31,830 --> 00:23:36,870
yeah the jail<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> naming the jails</font>

521
00:23:35,039 --> 00:23:40,289
after<font color="#E5E5E5"> real life jails joke</font><font color="#CCCCCC"> call a bit</font>

522
00:23:36,870 --> 00:23:42,120
old so<font color="#CCCCCC"> there one</font><font color="#E5E5E5"> and two here</font><font color="#CCCCCC"> so what do</font>

523
00:23:40,289 --> 00:23:43,740
we<font color="#CCCCCC"> do we set up IP addresses for the</font>

524
00:23:42,120 --> 00:23:47,158
external interface<font color="#E5E5E5"> for the sync</font>

525
00:23:43,740 --> 00:23:48,450
interface we<font color="#E5E5E5"> can figure PF sync so we</font>

526
00:23:47,159 --> 00:23:52,200
tell it what device it<font color="#CCCCCC"> should</font>

527
00:23:48,450 --> 00:23:54,150
synchronize over all this does is<font color="#E5E5E5"> if you</font>

528
00:23:52,200 --> 00:23:58,549
don't configure IP<font color="#E5E5E5"> addresses</font><font color="#CCCCCC"> npf sync it</font>

529
00:23:54,150 --> 00:24:02,490
will just multicast<font color="#CCCCCC"> so if you have two</font>

530
00:23:58,549 --> 00:24:04,889
<font color="#E5E5E5">two machines connected over</font><font color="#CCCCCC"> a over a</font>

531
00:24:02,490 --> 00:24:06,390
<font color="#E5E5E5">straight up link cable it will just</font>

532
00:24:04,890 --> 00:24:08,850
magically<font color="#CCCCCC"> work you don't</font><font color="#E5E5E5"> need to worry</font>

533
00:24:06,390 --> 00:24:11,520
<font color="#CCCCCC">about it set that up do the same thing</font>

534
00:24:08,850 --> 00:24:14,969
on the other<font color="#E5E5E5"> interface so that's all</font>

535
00:24:11,520 --> 00:24:17,610
just<font color="#E5E5E5"> set up what do we do next well we</font>

536
00:24:14,970 --> 00:24:21,870
turn on PF we set some rules on both

537
00:24:17,610 --> 00:24:24,928
hosts<font color="#CCCCCC"> we</font><font color="#E5E5E5"> set up the interfaces and then</font>

538
00:24:21,870 --> 00:24:26,668
we send a ping to<font color="#E5E5E5"> it select the correct</font>

539
00:24:24,929 --> 00:24:29,880
<font color="#E5E5E5">source interface just in case that would</font>

540
00:24:26,669 --> 00:24:31,620
go wrong<font color="#E5E5E5"> give PF sync some time to</font>

541
00:24:29,880 --> 00:24:34,470
actually synchronize the states because

542
00:24:31,620 --> 00:24:38,580
this is not an instant process and then

543
00:24:34,470 --> 00:24:41,400
we go and<font color="#E5E5E5"> look not at the jail that saw</font>

544
00:24:38,580 --> 00:24:44,820
the traffic<font color="#CCCCCC"> but at the other one do you</font>

545
00:24:41,400 --> 00:24:46,590
have the corresponding state for this so

546
00:24:44,820 --> 00:24:48,389
we<font color="#E5E5E5"> just grab and go</font><font color="#CCCCCC"> look Union does this</font>

547
00:24:46,590 --> 00:24:50,070
state<font color="#E5E5E5"> exist</font><font color="#CCCCCC"> if it does</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> exist we</font>

548
00:24:48,390 --> 00:24:54,990
<font color="#CCCCCC">error</font><font color="#E5E5E5"> out if it does exist everything</font>

549
00:24:50,070 --> 00:25:04,200
<font color="#CCCCCC">worked</font><font color="#E5E5E5"> and it's awesome yeah you had a</font>

550
00:24:54,990 --> 00:25:06,299
question<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> question is have I try</font>

551
00:25:04,200 --> 00:25:10,190
to use TCP dump to see if it's arriving

552
00:25:06,299 --> 00:25:12,809
<font color="#CCCCCC">if the the</font><font color="#E5E5E5"> traffic arrives</font><font color="#CCCCCC"> I have not</font>

553
00:25:10,190 --> 00:25:14,790
<font color="#CCCCCC">mostly what I've</font><font color="#E5E5E5"> tried</font><font color="#CCCCCC"> to do is make it</font>

554
00:25:12,809 --> 00:25:18,149
<font color="#CCCCCC">really easy on myself to actually</font><font color="#E5E5E5"> test</font>

555
00:25:14,790 --> 00:25:21,000
this<font color="#CCCCCC"> so rather than look at do I</font>

556
00:25:18,150 --> 00:25:22,950
actually get this packet we check<font color="#E5E5E5"> do we</font>

557
00:25:21,000 --> 00:25:25,080
get the effects<font color="#E5E5E5"> of this packet having</font>

558
00:25:22,950 --> 00:25:28,110
been delivered<font color="#E5E5E5"> so typically things like</font>

559
00:25:25,080 --> 00:25:30,240
ICMP echoes<font color="#E5E5E5"> I don't check that the reply</font>

560
00:25:28,110 --> 00:25:33,059
arrives I check is ping happy that the

561
00:25:30,240 --> 00:25:39,299
reply arrived<font color="#E5E5E5"> so theoretically that does</font>

562
00:25:33,059 --> 00:25:42,030
mean that you could have bugs like the

563
00:25:39,299 --> 00:25:45,510
firewall corrupts the payload of an ICMP

564
00:25:42,030 --> 00:25:48,240
echo reply packets<font color="#E5E5E5"> and</font><font color="#CCCCCC"> pans ping doesn't</font>

565
00:25:45,510 --> 00:25:51,000
check for this corruption<font color="#E5E5E5"> or expects</font>

566
00:25:48,240 --> 00:25:55,590
this<font color="#CCCCCC"> corruption that</font><font color="#E5E5E5"> is a bug that you</font>

567
00:25:51,000 --> 00:25:57,960
wouldn't notice in this<font color="#E5E5E5"> setup so</font><font color="#CCCCCC"> that is</font>

568
00:25:55,590 --> 00:26:00,559
that<font color="#E5E5E5"> is arguably a weakness of this</font>

569
00:25:57,960 --> 00:26:04,530
<font color="#CCCCCC">setup</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> that you're not actually</font><font color="#E5E5E5"> doing</font>

570
00:26:00,559 --> 00:26:07,020
<font color="#E5E5E5">formal testing that is the</font><font color="#CCCCCC"> TCP or IP</font>

571
00:26:04,530 --> 00:26:10,889
output actually standards compliance<font color="#E5E5E5"> all</font>

572
00:26:07,020 --> 00:26:14,429
we're testing is is<font color="#CCCCCC"> freebsd itself happy</font>

573
00:26:10,890 --> 00:26:15,899
with the<font color="#E5E5E5"> packet</font><font color="#CCCCCC"> it's packets it sees I</font>

574
00:26:14,429 --> 00:26:18,030
think that's a price worth paying

575
00:26:15,899 --> 00:26:21,510
<font color="#CCCCCC">because doing the full formal</font>

576
00:26:18,030 --> 00:26:24,120
verification is much<font color="#E5E5E5"> much harder</font><font color="#CCCCCC"> and it</font>

577
00:26:21,510 --> 00:26:24,870
turns out<font color="#E5E5E5"> that you know freebsd does</font><font color="#CCCCCC"> tcp</font>

578
00:26:24,120 --> 00:26:30,090
wrong

579
00:26:24,870 --> 00:26:33,689
we're going to notice<font color="#CCCCCC"> if</font><font color="#E5E5E5"> nothing else</font>

580
00:26:30,090 --> 00:26:35,070
the Netflix people will shout<font color="#CCCCCC"> at</font><font color="#E5E5E5"> us well</font>

581
00:26:33,690 --> 00:26:38,419
they won't shout they're actually nice

582
00:26:35,070 --> 00:26:41,189
<font color="#CCCCCC">people but you know</font><font color="#E5E5E5"> they will tell us</font>

583
00:26:38,419 --> 00:26:43,220
<font color="#CCCCCC">now</font><font color="#E5E5E5"> that I've all got you all fired up</font>

584
00:26:41,190 --> 00:26:46,970
<font color="#E5E5E5">for these tests where can you find them</font>

585
00:26:43,220 --> 00:26:49,620
<font color="#E5E5E5">the source code for these tests lives in</font>

586
00:26:46,970 --> 00:26:52,740
user source assuming you've installed

587
00:26:49,620 --> 00:26:54,959
<font color="#E5E5E5">your source</font><font color="#CCCCCC"> to user source tests s net</font><font color="#E5E5E5"> P</font>

588
00:26:52,740 --> 00:26:58,080
fill PF<font color="#E5E5E5"> which mirrors</font><font color="#CCCCCC"> the structure of</font>

589
00:26:54,960 --> 00:27:01,020
<font color="#E5E5E5">where the the code</font><font color="#CCCCCC"> 4pf lives they get</font>

590
00:26:58,080 --> 00:27:03,178
installed to<font color="#E5E5E5"> users tests</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> pflp</font>

591
00:27:01,020 --> 00:27:06,240
<font color="#E5E5E5">F which</font><font color="#CCCCCC"> can mirrors the structure of</font>

592
00:27:03,179 --> 00:27:08,370
where they're installed<font color="#E5E5E5"> so you can if</font>

593
00:27:06,240 --> 00:27:10,529
you want<font color="#E5E5E5"> to run them yourself</font><font color="#CCCCCC"> you might</font>

594
00:27:08,370 --> 00:27:13,709
want to<font color="#E5E5E5"> run some white want to install</font>

595
00:27:10,529 --> 00:27:17,059
<font color="#CCCCCC">some tools QR to actually run</font><font color="#E5E5E5"> the tests</font>

596
00:27:13,710 --> 00:27:20,760
and I never know how to<font color="#CCCCCC"> pronounce this</font>

597
00:27:17,059 --> 00:27:23,070
scape<font color="#CCCCCC"> e</font><font color="#E5E5E5"> it's Python tool that lets you</font>

598
00:27:20,760 --> 00:27:24,299
generate<font color="#E5E5E5"> and analyze packets so there</font>

599
00:27:23,070 --> 00:27:28,139
<font color="#E5E5E5">are some tests where I actually</font>

600
00:27:24,299 --> 00:27:31,139
<font color="#E5E5E5">deliberately creates very specifically</font>

601
00:27:28,140 --> 00:27:32,510
formatted packets<font color="#E5E5E5"> and actually go look</font>

602
00:27:31,140 --> 00:27:35,730
<font color="#E5E5E5">at them some</font><font color="#CCCCCC"> of the fragment</font>

603
00:27:32,510 --> 00:27:37,440
fragmentation<font color="#CCCCCC"> tests do this where</font><font color="#E5E5E5"> you</font>

604
00:27:35,730 --> 00:27:40,080
can deliberately create corrupted

605
00:27:37,440 --> 00:27:44,820
packets for<font color="#E5E5E5"> instance which might also be</font>

606
00:27:40,080 --> 00:27:46,620
<font color="#CCCCCC">a really interesting to</font><font color="#E5E5E5"> us to do if I</font>

607
00:27:44,820 --> 00:27:48,600
knew<font color="#CCCCCC"> of</font><font color="#E5E5E5"> any you know malformed packets</font>

608
00:27:46,620 --> 00:27:50,309
that<font color="#CCCCCC"> cause</font><font color="#E5E5E5"> panics for instance that is</font>

609
00:27:48,600 --> 00:27:52,469
something<font color="#E5E5E5"> I</font><font color="#CCCCCC"> would definitely</font><font color="#E5E5E5"> do is</font>

610
00:27:50,309 --> 00:27:56,639
create this packet<font color="#CCCCCC"> to attempt to</font><font color="#E5E5E5"> provoke</font>

611
00:27:52,470 --> 00:27:58,799
<font color="#E5E5E5">this panic</font><font color="#CCCCCC"> you want to load well PF sync</font>

612
00:27:56,640 --> 00:28:01,860
because<font color="#CCCCCC"> a PF</font><font color="#E5E5E5"> sync module depends on</font><font color="#CCCCCC"> PF</font>

613
00:27:58,799 --> 00:28:04,260
so it will implicitly load that one<font color="#E5E5E5"> and</font>

614
00:28:01,860 --> 00:28:06,928
then you<font color="#CCCCCC"> can go</font><font color="#E5E5E5"> to that directory</font><font color="#CCCCCC"> and as</font>

615
00:28:04,260 --> 00:28:09,120
a<font color="#CCCCCC"> root run QR test and it will run</font>

616
00:28:06,929 --> 00:28:12,899
through all<font color="#CCCCCC"> of the tests</font><font color="#E5E5E5"> for PF takes</font>

617
00:28:09,120 --> 00:28:15,570
but<font color="#CCCCCC"> I forget about</font><font color="#E5E5E5"> 30 seconds we don't</font>

618
00:28:12,899 --> 00:28:17,279
have that many<font color="#E5E5E5"> of them yet but it turns</font>

619
00:28:15,570 --> 00:28:20,070
<font color="#E5E5E5">out that having</font><font color="#CCCCCC"> a couple of tests</font>

620
00:28:17,279 --> 00:28:22,620
already gives you a lot of<font color="#E5E5E5"> value so you</font>

621
00:28:20,070 --> 00:28:24,510
don't need to<font color="#E5E5E5"> think that you know it's a</font>

622
00:28:22,620 --> 00:28:27,809
firewall with hundreds of feature so I

623
00:28:24,510 --> 00:28:30,240
need to write thousands<font color="#E5E5E5"> of tests ideally</font>

624
00:28:27,809 --> 00:28:31,740
you want to<font color="#CCCCCC"> have thousands</font><font color="#E5E5E5"> of tests but</font>

625
00:28:30,240 --> 00:28:34,380
it turns out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> just having you know</font>

626
00:28:31,740 --> 00:28:38,070
five of<font color="#CCCCCC"> them already tests a lot of the</font>

627
00:28:34,380 --> 00:28:38,600
<font color="#E5E5E5">functionality of PF and youyou can get a</font>

628
00:28:38,070 --> 00:28:40,820
lot of

629
00:28:38,600 --> 00:28:43,639
you know<font color="#CCCCCC"> fallout accidental tests along</font>

630
00:28:40,820 --> 00:28:45,559
the way for instance this ipv6

631
00:28:43,639 --> 00:28:49,158
fragmentation bug<font color="#CCCCCC"> while</font><font color="#E5E5E5"> the reassembly</font>

632
00:28:45,559 --> 00:28:52,000
<font color="#E5E5E5">bug we didn't have code to specifically</font>

633
00:28:49,159 --> 00:28:54,769
test<font color="#E5E5E5"> reassembly PF just tested this</font>

634
00:28:52,000 --> 00:28:56,929
accidentally while it was testing some

635
00:28:54,769 --> 00:29:00,620
well something related but not<font color="#E5E5E5"> quite</font>

636
00:28:56,929 --> 00:29:02,840
<font color="#CCCCCC">that code</font><font color="#E5E5E5"> so you you get a lot of value</font>

637
00:29:00,620 --> 00:29:06,889
<font color="#CCCCCC">out of relatively little investment</font><font color="#E5E5E5"> for</font>

638
00:29:02,840 --> 00:29:09,320
tests at this point you know<font color="#CCCCCC"> I would</font>

639
00:29:06,889 --> 00:29:11,389
appeal to<font color="#E5E5E5"> Authority</font><font color="#CCCCCC"> and get some</font><font color="#E5E5E5"> sort of</font>

640
00:29:09,320 --> 00:29:14,389
really profound<font color="#CCCCCC"> quotes from</font><font color="#E5E5E5"> someone to</font>

641
00:29:11,389 --> 00:29:16,399
to reinforce<font color="#CCCCCC"> my point I didn't find one</font>

642
00:29:14,389 --> 00:29:18,469
<font color="#E5E5E5">because I was lazy and I didn't look for</font>

643
00:29:16,399 --> 00:29:20,090
<font color="#CCCCCC">one</font><font color="#E5E5E5"> so the quote that you're getting is</font>

644
00:29:18,470 --> 00:29:22,909
you know the tests are<font color="#E5E5E5"> good and you</font>

645
00:29:20,090 --> 00:29:26,600
<font color="#CCCCCC">should write more tests and and and it's</font>

646
00:29:22,909 --> 00:29:32,899
from me<font color="#CCCCCC"> just now so you know it is a</font>

647
00:29:26,600 --> 00:29:35,059
very well sourced quote<font color="#CCCCCC"> I hope you know</font>

648
00:29:32,899 --> 00:29:37,189
to continue<font color="#CCCCCC"> to try to persuade you that</font>

649
00:29:35,059 --> 00:29:39,678
tests are a good<font color="#E5E5E5"> idea and</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

650
00:29:37,190 --> 00:29:41,990
should try<font color="#E5E5E5"> to write more</font><font color="#CCCCCC"> of them what is</font>

651
00:29:39,679 --> 00:29:43,850
in it for you well<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> prototype</font>

652
00:29:41,990 --> 00:29:46,639
<font color="#E5E5E5">your own set ups you know if you want to</font>

653
00:29:43,850 --> 00:29:48,559
play with with<font color="#E5E5E5"> carp or</font><font color="#CCCCCC"> 4pf same core or</font>

654
00:29:46,639 --> 00:29:51,258
PF and and you don't happen to<font color="#CCCCCC"> have a</font>

655
00:29:48,559 --> 00:29:54,559
box lying around<font color="#E5E5E5"> to run this on just</font>

656
00:29:51,259 --> 00:29:58,100
spool up a jail and and test<font color="#E5E5E5"> this and if</font>

657
00:29:54,559 --> 00:29:59,809
you write them as a test you<font color="#E5E5E5"> can keep</font>

658
00:29:58,100 --> 00:30:05,269
running<font color="#CCCCCC"> this and you can</font><font color="#E5E5E5"> be sure</font><font color="#CCCCCC"> that</font>

659
00:29:59,809 --> 00:30:07,039
<font color="#E5E5E5">this won't actually break</font><font color="#CCCCCC"> so if you have</font>

660
00:30:05,269 --> 00:30:08,570
a very<font color="#CCCCCC"> specific use case that</font><font color="#E5E5E5"> relies on</font>

661
00:30:07,039 --> 00:30:10,519
the feature<font color="#E5E5E5"> that you're not sure other</font>

662
00:30:08,570 --> 00:30:12,889
<font color="#CCCCCC">people are using</font><font color="#E5E5E5"> you know send me a test</font>

663
00:30:10,519 --> 00:30:15,590
case<font color="#CCCCCC"> will</font><font color="#E5E5E5"> include it and you can be sure</font>

664
00:30:12,889 --> 00:30:18,439
<font color="#CCCCCC">that the next</font><font color="#E5E5E5"> time somebody breaks it it</font>

665
00:30:15,590 --> 00:30:20,029
will get fixed<font color="#E5E5E5"> rather than you noticing</font>

666
00:30:18,440 --> 00:30:22,730
you know when you try to<font color="#CCCCCC"> upgrade to a</font>

667
00:30:20,029 --> 00:30:26,750
release two years after somebody broke

668
00:30:22,730 --> 00:30:28,340
<font color="#E5E5E5">the feature for you</font><font color="#CCCCCC"> another case and</font><font color="#E5E5E5"> and</font>

669
00:30:26,750 --> 00:30:32,750
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is what I</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to focus on</font>

670
00:30:28,340 --> 00:30:35,299
is when you report a bug<font color="#CCCCCC"> to PF I have to</font>

671
00:30:32,750 --> 00:30:38,139
try to reproduce it<font color="#E5E5E5"> I have to try to</font>

672
00:30:35,299 --> 00:30:42,110
<font color="#E5E5E5">work out</font><font color="#CCCCCC"> what your test setup is and</font>

673
00:30:38,139 --> 00:30:44,330
quite often<font color="#E5E5E5"> in most cases in fact I</font>

674
00:30:42,110 --> 00:30:47,269
spend more time<font color="#E5E5E5"> trying to</font><font color="#CCCCCC"> work out what</font>

675
00:30:44,330 --> 00:30:49,908
your setup<font color="#E5E5E5"> is how it breaks then</font>

676
00:30:47,269 --> 00:30:51,700
actually debugging the problem so if<font color="#E5E5E5"> you</font>

677
00:30:49,909 --> 00:30:54,380
give<font color="#E5E5E5"> me a test case</font>

678
00:30:51,700 --> 00:30:57,050
you've already done more<font color="#CCCCCC"> than half of</font>

679
00:30:54,380 --> 00:30:59,690
the work not<font color="#CCCCCC"> only up if you give me the</font>

680
00:30:57,050 --> 00:31:01,250
<font color="#E5E5E5">test case when I</font><font color="#CCCCCC"> fix the bug I would</font>

681
00:30:59,690 --> 00:31:03,890
like<font color="#E5E5E5"> to have a test for it</font><font color="#CCCCCC"> well you've</font>

682
00:31:01,250 --> 00:31:06,590
given<font color="#E5E5E5"> me a test case most of the work is</font>

683
00:31:03,890 --> 00:31:08,630
already done<font color="#CCCCCC"> so if you have a pet bug</font>

684
00:31:06,590 --> 00:31:11,480
<font color="#E5E5E5">that's been really really been annoying</font>

685
00:31:08,630 --> 00:31:14,420
<font color="#CCCCCC">you and you want it fixed</font><font color="#E5E5E5"> that's the</font>

686
00:31:11,480 --> 00:31:16,790
best way<font color="#E5E5E5"> actually that's not true</font>

687
00:31:14,420 --> 00:31:21,950
that's the second<font color="#E5E5E5"> best way the best</font><font color="#CCCCCC"> way</font>

688
00:31:16,790 --> 00:31:24,379
is to<font color="#E5E5E5"> pay me no</font><font color="#CCCCCC"> no that's not</font><font color="#E5E5E5"> a joke</font><font color="#CCCCCC"> you</font>

689
00:31:21,950 --> 00:31:26,420
<font color="#E5E5E5">know I'm very money motivated if you pay</font>

690
00:31:24,380 --> 00:31:30,130
me<font color="#CCCCCC"> to do work for you I will do work for</font>

691
00:31:26,420 --> 00:31:32,360
<font color="#E5E5E5">you but if you don't want to pay me</font><font color="#CCCCCC"> you</font>

692
00:31:30,130 --> 00:31:35,840
<font color="#CCCCCC">should but if you don't want to pay me</font>

693
00:31:32,360 --> 00:31:37,490
right the<font color="#CCCCCC"> test</font><font color="#E5E5E5"> and I promise you well</font>

694
00:31:35,840 --> 00:31:39,439
I'm not going to promise you<font color="#CCCCCC"> that I will</font>

695
00:31:37,490 --> 00:31:41,270
<font color="#E5E5E5">absolutely fix your work for you but it</font>

696
00:31:39,440 --> 00:31:45,290
does vastly increase the<font color="#E5E5E5"> chances of it</font>

697
00:31:41,270 --> 00:31:47,750
<font color="#E5E5E5">getting fixed</font><font color="#CCCCCC"> I've had someone report a</font>

698
00:31:45,290 --> 00:31:50,659
<font color="#E5E5E5">bug to me in in the NAT system and it</font>

699
00:31:47,750 --> 00:31:52,760
<font color="#E5E5E5">was a very strange bug and I had no idea</font>

700
00:31:50,660 --> 00:31:55,010
<font color="#CCCCCC">of where it was or how to fix</font><font color="#E5E5E5"> it right</font>

701
00:31:52,760 --> 00:31:56,780
<font color="#CCCCCC">up to</font><font color="#E5E5E5"> the point where he gave me a</font>

702
00:31:55,010 --> 00:31:59,360
trivial test case<font color="#CCCCCC"> for it</font>

703
00:31:56,780 --> 00:32:01,160
<font color="#CCCCCC">nope quite</font><font color="#E5E5E5"> in this format yet but he</font>

704
00:31:59,360 --> 00:32:02,810
gave me<font color="#E5E5E5"> a configuration file and a</font>

705
00:32:01,160 --> 00:32:05,960
little shell script and you know you do

706
00:32:02,810 --> 00:32:07,610
this and I see<font color="#E5E5E5"> these problems</font><font color="#CCCCCC"> and then I</font>

707
00:32:05,960 --> 00:32:11,660
could suddenly reproduce the problem<font color="#CCCCCC"> and</font>

708
00:32:07,610 --> 00:32:14,120
it only took a<font color="#CCCCCC"> day or two to fix for a</font>

709
00:32:11,660 --> 00:32:16,520
you<font color="#E5E5E5"> know a problem that started out</font><font color="#CCCCCC"> as a</font>

710
00:32:14,120 --> 00:32:19,639
description<font color="#E5E5E5"> of you know I have this very</font>

711
00:32:16,520 --> 00:32:22,040
large not<font color="#CCCCCC"> set up</font><font color="#E5E5E5"> you know very large I</font>

712
00:32:19,640 --> 00:32:23,810
<font color="#CCCCCC">have you know I run a university so a</font>

713
00:32:22,040 --> 00:32:26,450
lot of<font color="#E5E5E5"> students</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of traffic flowing</font>

714
00:32:23,810 --> 00:32:29,000
through this<font color="#E5E5E5"> and every once in a while</font>

715
00:32:26,450 --> 00:32:32,230
<font color="#CCCCCC">without any obvious calls the machine</font>

716
00:32:29,000 --> 00:32:34,670
will just stop<font color="#CCCCCC"> forwarding packets and</font>

717
00:32:32,230 --> 00:32:36,470
<font color="#E5E5E5">then it will sit in that state</font><font color="#CCCCCC"> for a few</font>

718
00:32:34,670 --> 00:32:41,600
minutes and then<font color="#E5E5E5"> it will start</font>

719
00:32:36,470 --> 00:32:43,430
forwarding<font color="#CCCCCC"> packets</font><font color="#E5E5E5"> again until we have</font>

720
00:32:41,600 --> 00:32:45,230
the you know<font color="#CCCCCC"> the active description of</font>

721
00:32:43,430 --> 00:32:48,470
this is how you trigger<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> then it</font>

722
00:32:45,230 --> 00:32:49,910
only took a<font color="#CCCCCC"> day to well it took barely</font>

723
00:32:48,470 --> 00:32:53,360
any<font color="#CCCCCC"> time at</font><font color="#E5E5E5"> all to figure out where the</font>

724
00:32:49,910 --> 00:32:57,320
<font color="#CCCCCC">problem was</font><font color="#E5E5E5"> and fix it</font><font color="#CCCCCC"> so write tests</font>

725
00:32:53,360 --> 00:32:59,449
illustrate your your problem make it

726
00:32:57,320 --> 00:33:01,939
easy for<font color="#CCCCCC"> other people to fix</font><font color="#E5E5E5"> the bug for</font>

727
00:32:59,450 --> 00:33:04,220
<font color="#E5E5E5">you or you know</font>

728
00:33:01,940 --> 00:33:06,260
you can also fix the bug yourself and

729
00:33:04,220 --> 00:33:07,760
that's<font color="#E5E5E5"> awesome but it turns out that the</font>

730
00:33:06,260 --> 00:33:09,710
<font color="#E5E5E5">reviewing code means that I need</font><font color="#CCCCCC"> to</font>

731
00:33:07,760 --> 00:33:10,760
<font color="#E5E5E5">understand what the problem is which</font>

732
00:33:09,710 --> 00:33:13,220
means that I<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> know what your</font>

733
00:33:10,760 --> 00:33:16,460
<font color="#E5E5E5">setup is and what the bug is which is</font>

734
00:33:13,220 --> 00:33:17,780
<font color="#E5E5E5">also accomplished by a test case if you</font>

735
00:33:16,460 --> 00:33:19,790
will to<font color="#E5E5E5"> make it even</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> likely that</font>

736
00:33:17,780 --> 00:33:24,110
your bug gets fixed right<font color="#E5E5E5"> the test case</font>

737
00:33:19,790 --> 00:33:29,659
<font color="#E5E5E5">right the patch and submit that but you</font>

738
00:33:24,110 --> 00:33:31,010
know whatever<font color="#E5E5E5"> you do test case if you</font>

739
00:33:29,660 --> 00:33:35,030
don't want to be the first<font color="#E5E5E5"> one to</font><font color="#CCCCCC"> do</font>

740
00:33:31,010 --> 00:33:37,850
<font color="#CCCCCC">this you</font><font color="#E5E5E5"> won't be</font><font color="#CCCCCC"> Olivier Crowe Sharla</font>

741
00:33:35,030 --> 00:33:40,250
<font color="#CCCCCC">Bey was as one of our one of the</font>

742
00:33:37,850 --> 00:33:41,959
contributors<font color="#CCCCCC"> Suton 3bz project and he's</font>

743
00:33:40,250 --> 00:33:44,540
really<font color="#CCCCCC"> really good</font><font color="#E5E5E5"> at benchmarking</font>

744
00:33:41,960 --> 00:33:47,840
things and for his<font color="#E5E5E5"> previous employer he</font>

745
00:33:44,540 --> 00:33:50,080
really cared about<font color="#CCCCCC"> IPSec</font><font color="#E5E5E5"> and it kept</font>

746
00:33:47,840 --> 00:33:54,379
breaking<font color="#E5E5E5"> and he was really</font><font color="#CCCCCC"> sick of this</font>

747
00:33:50,080 --> 00:33:58,129
<font color="#E5E5E5">so he wrote tests for it and now there</font>

748
00:33:54,380 --> 00:34:00,530
are<font color="#E5E5E5"> tests an IPSec isn't broken and if</font>

749
00:33:58,130 --> 00:34:03,440
somebody does break it<font color="#CCCCCC"> lee hwon</font><font color="#E5E5E5"> will</font>

750
00:34:00,530 --> 00:34:04,970
shout at them well<font color="#E5E5E5"> that's a wily</font><font color="#CCCCCC"> ones a</font>

751
00:34:03,440 --> 00:34:06,440
really nice guy he won't shout but<font color="#E5E5E5"> he</font>

752
00:34:04,970 --> 00:34:08,750
will tell people<font color="#CCCCCC"> that it's broken</font><font color="#E5E5E5"> and</font>

753
00:34:06,440 --> 00:34:10,550
<font color="#CCCCCC">that they should fix</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and this also</font>

754
00:34:08,750 --> 00:34:12,770
<font color="#E5E5E5">means that</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> because we run these</font>

755
00:34:10,550 --> 00:34:15,910
tests a couple of times a<font color="#CCCCCC"> day</font><font color="#E5E5E5"> if you</font>

756
00:34:12,770 --> 00:34:19,219
<font color="#E5E5E5">commit something that breaks IPSec today</font>

757
00:34:15,909 --> 00:34:21,199
<font color="#E5E5E5">we're going to notice tomorrow or on</font>

758
00:34:19,219 --> 00:34:23,870
<font color="#CCCCCC">Monday and you're going to</font><font color="#E5E5E5"> have a bug</font>

759
00:34:21,199 --> 00:34:27,790
assigned to you<font color="#CCCCCC"> on Monday or on Tuesday</font>

760
00:34:23,870 --> 00:34:27,790
so<font color="#E5E5E5"> it will be very fresh in your memory</font>

761
00:34:28,719 --> 00:34:35,230
you know before<font color="#CCCCCC"> I belabor to the point</font>

762
00:34:31,580 --> 00:34:35,230
anymore<font color="#CCCCCC"> does</font><font color="#E5E5E5"> anyone have any questions</font>

763
00:34:36,370 --> 00:34:40,210
have I been that clear

764
00:34:43,090 --> 00:35:09,880
oh uh<font color="#CCCCCC"> yes go ahead I mean not</font><font color="#E5E5E5"> as you</font>

765
00:35:04,690 --> 00:35:12,550
mentioned before<font color="#CCCCCC"> that yes so the</font>

766
00:35:09,880 --> 00:35:15,100
question<font color="#CCCCCC"> is you know when</font><font color="#E5E5E5"> we test</font><font color="#CCCCCC"> pf'</font>

767
00:35:12,550 --> 00:35:17,700
based on the ping tool<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

768
00:35:15,100 --> 00:35:19,839
codes<font color="#E5E5E5"> that needs to run so why don't we</font>

769
00:35:17,700 --> 00:35:23,589
simplify this<font color="#CCCCCC"> down so that we're only</font>

770
00:35:19,840 --> 00:35:28,870
testing<font color="#CCCCCC"> P F that is a valid approach</font><font color="#E5E5E5"> to</font>

771
00:35:23,590 --> 00:35:31,450
take in testing<font color="#CCCCCC"> I think</font><font color="#E5E5E5"> the advantage of</font>

772
00:35:28,870 --> 00:35:33,009
not doing<font color="#E5E5E5"> it</font><font color="#CCCCCC"> that way</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> doing the you</font>

773
00:35:31,450 --> 00:35:35,200
know we<font color="#E5E5E5"> just</font><font color="#CCCCCC"> use the ping tool to send</font>

774
00:35:33,010 --> 00:35:37,300
the packet is<font color="#E5E5E5"> twofold</font>

775
00:35:35,200 --> 00:35:38,770
the first is<font color="#E5E5E5"> that it's much easier we</font>

776
00:35:37,300 --> 00:35:40,900
don't have to write any<font color="#CCCCCC"> code to send</font>

777
00:35:38,770 --> 00:35:42,640
ping messages we<font color="#CCCCCC"> don't have to write any</font>

778
00:35:40,900 --> 00:35:44,830
<font color="#CCCCCC">code to</font><font color="#E5E5E5"> receive them to validate</font><font color="#CCCCCC"> them</font>

779
00:35:42,640 --> 00:35:47,020
that code is<font color="#E5E5E5"> already there so</font><font color="#CCCCCC"> we can</font>

780
00:35:44,830 --> 00:35:50,140
<font color="#E5E5E5">just use it makes it much easier to</font>

781
00:35:47,020 --> 00:35:51,759
<font color="#E5E5E5">write the test another side effect</font><font color="#CCCCCC"> of</font>

782
00:35:50,140 --> 00:35:56,140
this and you can argue if that's good or

783
00:35:51,760 --> 00:35:57,850
<font color="#CCCCCC">bad is that you test much more code so</font>

784
00:35:56,140 --> 00:35:59,799
that's the incidental testing I was

785
00:35:57,850 --> 00:36:03,490
talking about<font color="#E5E5E5"> like we had with the the</font>

786
00:35:59,800 --> 00:36:05,710
v6 reassembly code you are<font color="#CCCCCC"> incidental to</font>

787
00:36:03,490 --> 00:36:08,560
this test<font color="#E5E5E5"> you are also testing ping and</font>

788
00:36:05,710 --> 00:36:10,510
that's an upside because<font color="#E5E5E5"> you test more</font>

789
00:36:08,560 --> 00:36:13,120
of the the code and<font color="#E5E5E5"> the functionality of</font>

790
00:36:10,510 --> 00:36:15,370
the<font color="#CCCCCC"> system</font><font color="#E5E5E5"> it's also a downside because</font>

791
00:36:13,120 --> 00:36:18,339
<font color="#E5E5E5">when it breaks it's not immediately</font>

792
00:36:15,370 --> 00:36:20,830
obvious where the breakage is so if

793
00:36:18,340 --> 00:36:25,330
somebody<font color="#E5E5E5"> breaks the ping tool changes</font>

794
00:36:20,830 --> 00:36:27,880
<font color="#CCCCCC">the return</font><font color="#E5E5E5"> code me</font><font color="#CCCCCC"> changes it so sorry</font>

795
00:36:25,330 --> 00:36:30,370
so that it no longer sends ICMP echo

796
00:36:27,880 --> 00:36:31,630
requests or or it thinks that<font color="#E5E5E5"> they're</font>

797
00:36:30,370 --> 00:36:33,460
corrupted when<font color="#E5E5E5"> they're not corrupted</font>

798
00:36:31,630 --> 00:36:37,150
this test is going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> fail and is</font><font color="#E5E5E5"> going</font>

799
00:36:33,460 --> 00:36:39,160
<font color="#E5E5E5">to look like PF broke that's arguably a</font>

800
00:36:37,150 --> 00:36:42,520
<font color="#E5E5E5">downsides but hey at least we know</font><font color="#CCCCCC"> that</font>

801
00:36:39,160 --> 00:36:43,990
something's broken<font color="#E5E5E5"> and especially if you</font>

802
00:36:42,520 --> 00:36:46,600
run<font color="#E5E5E5"> them fairly</font><font color="#CCCCCC"> free stuff fairly</font>

803
00:36:43,990 --> 00:36:49,209
frequently you will typically not be

804
00:36:46,600 --> 00:36:50,380
looking at thousands upon thousands<font color="#E5E5E5"> of</font>

805
00:36:49,210 --> 00:36:52,690
commits that<font color="#E5E5E5"> could have caused the</font>

806
00:36:50,380 --> 00:36:54,340
<font color="#CCCCCC">problem so if you look and</font><font color="#E5E5E5"> you see you</font>

807
00:36:52,690 --> 00:36:56,290
know today it was working tomorrow<font color="#E5E5E5"> it</font>

808
00:36:54,340 --> 00:36:56,710
was broken<font color="#E5E5E5"> in this time span we</font><font color="#CCCCCC"> had</font>

809
00:36:56,290 --> 00:37:01,000
<font color="#CCCCCC">fifth</font>

810
00:36:56,710 --> 00:37:03,880
he commits<font color="#CCCCCC"> 40 of them touched</font><font color="#E5E5E5"> unrelated</font>

811
00:37:01,000 --> 00:37:05,589
driver<font color="#CCCCCC"> code</font><font color="#E5E5E5"> five of them touched the IP</font>

812
00:37:03,880 --> 00:37:07,960
stack in some way one of<font color="#E5E5E5"> them</font><font color="#CCCCCC"> touched</font>

813
00:37:05,589 --> 00:37:09,580
the ping tool<font color="#E5E5E5"> there's not too many</font>

814
00:37:07,960 --> 00:37:13,930
<font color="#E5E5E5">things that could have caused the</font>

815
00:37:09,580 --> 00:37:29,080
breakage it's a valid<font color="#CCCCCC"> point</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you can</font>

816
00:37:13,930 --> 00:37:30,640
argue<font color="#E5E5E5"> with both ways</font><font color="#CCCCCC"> yes yes so the</font>

817
00:37:29,080 --> 00:37:32,650
<font color="#CCCCCC">question is do we have</font><font color="#E5E5E5"> test cases for</font>

818
00:37:30,640 --> 00:37:34,900
<font color="#E5E5E5">the other firewalls in FreeBSD so</font>

819
00:37:32,650 --> 00:37:39,790
<font color="#CCCCCC">FreeBSD ships</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> of the box with</font><font color="#E5E5E5"> three</font>

820
00:37:34,900 --> 00:37:41,320
firewalls<font color="#CCCCCC"> IPF IPFW and PF won't</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

821
00:37:39,790 --> 00:37:43,240
<font color="#CCCCCC">go into the</font><font color="#E5E5E5"> reasons for this because all</font>

822
00:37:41,320 --> 00:37:44,950
mostly<font color="#CCCCCC"> I don't know if I understand them</font>

823
00:37:43,240 --> 00:37:47,259
and agree with<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> them but the fact</font>

824
00:37:44,950 --> 00:37:51,399
<font color="#E5E5E5">is we</font><font color="#CCCCCC"> have three firewalls</font><font color="#E5E5E5"> we currently</font>

825
00:37:47,260 --> 00:37:53,890
<font color="#CCCCCC">don't have tests for</font><font color="#E5E5E5"> the other firewalls</font>

826
00:37:51,400 --> 00:37:57,910
<font color="#E5E5E5">right now PF is the only one</font><font color="#CCCCCC"> that has</font>

827
00:37:53,890 --> 00:38:00,279
these tests it would be<font color="#CCCCCC"> trivial</font><font color="#E5E5E5"> to look</font>

828
00:37:57,910 --> 00:38:02,560
at the PF tests and go<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> now I'm</font>

829
00:38:00,280 --> 00:38:05,200
<font color="#E5E5E5">going to</font><font color="#CCCCCC"> rewrite them or I'm going to</font>

830
00:38:02,560 --> 00:38:07,900
write similar tests for<font color="#E5E5E5"> IPFW or</font><font color="#CCCCCC"> IPF I</font>

831
00:38:05,200 --> 00:38:10,629
believe both<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> also support</font><font color="#CCCCCC"> v-net</font>

832
00:38:07,900 --> 00:38:12,910
<font color="#E5E5E5">it does actually take</font><font color="#CCCCCC"> some changes to</font>

833
00:38:10,630 --> 00:38:14,770
the firewall<font color="#E5E5E5"> to make this work but to</font>

834
00:38:12,910 --> 00:38:17,170
make<font color="#E5E5E5"> V</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> not to make the tests</font>

835
00:38:14,770 --> 00:38:20,470
work the<font color="#E5E5E5"> tests do assume</font><font color="#CCCCCC"> that you have</font><font color="#E5E5E5"> V</font>

836
00:38:17,170 --> 00:38:22,570
net so<font color="#CCCCCC"> we don't have them right</font><font color="#E5E5E5"> now</font>

837
00:38:20,470 --> 00:38:24,970
I actually just<font color="#E5E5E5"> this morning posted an</font>

838
00:38:22,570 --> 00:38:26,859
idea for a google Summer of Code project

839
00:38:24,970 --> 00:38:28,629
<font color="#CCCCCC">so if there are any students who are</font>

840
00:38:26,859 --> 00:38:31,180
interested<font color="#CCCCCC"> in working</font><font color="#E5E5E5"> on firewalls and</font>

841
00:38:28,630 --> 00:38:33,940
<font color="#E5E5E5">testing there</font><font color="#CCCCCC"> is a project write more</font>

842
00:38:31,180 --> 00:38:36,669
tests ideally it should be possible to

843
00:38:33,940 --> 00:38:39,070
write a test so<font color="#CCCCCC"> that it works on</font><font color="#E5E5E5"> all</font>

844
00:38:36,670 --> 00:38:41,790
three firewalls there is some

845
00:38:39,070 --> 00:38:45,520
functionality like PF sync that<font color="#E5E5E5"> is</font>

846
00:38:41,790 --> 00:38:46,450
common<font color="#E5E5E5"> that is sorry is unique to PF so</font>

847
00:38:45,520 --> 00:38:48,759
you would have<font color="#E5E5E5"> to write</font><font color="#CCCCCC"> a test</font>

848
00:38:46,450 --> 00:38:50,710
specifically<font color="#E5E5E5"> for PF but for things like</font>

849
00:38:48,760 --> 00:38:53,230
<font color="#E5E5E5">you know drop this packet allow this</font>

850
00:38:50,710 --> 00:38:55,270
packets<font color="#E5E5E5"> keep</font><font color="#CCCCCC"> state</font><font color="#E5E5E5"> you could write tests</font>

851
00:38:53,230 --> 00:38:56,980
<font color="#E5E5E5">that would work on all three we don't</font>

852
00:38:55,270 --> 00:39:03,000
have them<font color="#CCCCCC"> right now it would be</font><font color="#E5E5E5"> awesome</font>

853
00:38:56,980 --> 00:39:03,000
<font color="#E5E5E5">to</font><font color="#CCCCCC"> have them any other questions okay</font>

854
00:39:03,720 --> 00:39:16,908
<font color="#CCCCCC">thank you</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> much for</font><font color="#E5E5E5"> your attention</font>

855
00:39:06,560 --> 00:39:16,909
[Applause]

856
00:39:17,859 --> 00:39:23,009
so the question is do the<font color="#E5E5E5"> tests include</font>

857
00:39:19,390 --> 00:39:25,779
any randomness right now they do<font color="#E5E5E5"> not</font>

858
00:39:23,009 --> 00:39:27,159
again randomness<font color="#CCCCCC"> in tests is</font><font color="#E5E5E5"> something</font>

859
00:39:25,779 --> 00:39:29,109
you can argue<font color="#E5E5E5"> both ways</font>

860
00:39:27,159 --> 00:39:30,309
so it's good because<font color="#CCCCCC"> first testing is</font>

861
00:39:29,109 --> 00:39:33,399
great because<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can trip over</font>

862
00:39:30,309 --> 00:39:35,289
unexpected bugs<font color="#E5E5E5"> it's bad because you</font>

863
00:39:33,399 --> 00:39:37,719
<font color="#E5E5E5">can't necessarily reproduce your results</font>

864
00:39:35,289 --> 00:39:42,119
right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> there is no randomness in it</font>

865
00:39:37,719 --> 00:39:42,119
or no deliberate randomness<font color="#E5E5E5"> anyway</font>

