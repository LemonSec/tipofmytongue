1
00:00:10,469 --> 00:00:19,720
so hello<font color="#E5E5E5"> everyone</font><font color="#CCCCCC"> I am Eric I work at</font>

2
00:00:15,879 --> 00:00:22,570
kelabra<font color="#E5E5E5"> the graphics team and I</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> be</font>

3
00:00:19,720 --> 00:00:27,099
talking<font color="#E5E5E5"> about a not really</font><font color="#CCCCCC"> hardware</font>

4
00:00:22,570 --> 00:00:30,490
enablement project<font color="#CCCCCC"> I had an</font><font color="#E5E5E5"> accident</font>

5
00:00:27,100 --> 00:00:34,660
yesterday and or<font color="#E5E5E5"> not</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> hit my head</font><font color="#CCCCCC"> so</font>

6
00:00:30,490 --> 00:00:37,390
<font color="#E5E5E5">I've moved</font><font color="#CCCCCC"> mr.</font><font color="#E5E5E5"> and I will as a</font>

7
00:00:34,660 --> 00:00:40,209
<font color="#E5E5E5">result probably go a little bit slow and</font>

8
00:00:37,390 --> 00:00:46,979
might we might<font color="#E5E5E5"> not</font><font color="#CCCCCC"> make it</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the end of</font>

9
00:00:40,210 --> 00:00:51,399
<font color="#CCCCCC">this presentation but</font><font color="#E5E5E5"> yeah so that's me</font>

10
00:00:46,979 --> 00:00:54,729
so yeah<font color="#CCCCCC"> the goal the goal here in</font>

11
00:00:51,399 --> 00:00:59,649
<font color="#CCCCCC">general is</font><font color="#E5E5E5"> to implement OpenGL on top of</font>

12
00:00:54,729 --> 00:01:04,030
Vulcan<font color="#CCCCCC"> to make a simpler graphics touch</font>

13
00:00:59,649 --> 00:01:07,120
in the future of the Linux system so

14
00:01:04,030 --> 00:01:10,509
there's a few other attempts<font color="#CCCCCC"> at this out</font>

15
00:01:07,120 --> 00:01:12,610
there that<font color="#E5E5E5"> already exists</font><font color="#CCCCCC"> I think</font>

16
00:01:10,509 --> 00:01:18,210
silicon has made something<font color="#CCCCCC"> called</font><font color="#E5E5E5"> glove</font>

17
00:01:12,610 --> 00:01:20,950
it only implements OpenGL ES 2.0 and the

18
00:01:18,210 --> 00:01:22,630
CLA requires a<font color="#E5E5E5"> copyright assignment</font>

19
00:01:20,950 --> 00:01:25,960
there so which can<font color="#E5E5E5"> be tricky</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> some</font>

20
00:01:22,630 --> 00:01:28,780
companies to work with Google has angle

21
00:01:25,960 --> 00:01:32,589
they again also<font color="#CCCCCC"> implement</font><font color="#E5E5E5"> only OpenGL ES</font>

22
00:01:28,780 --> 00:01:35,590
<font color="#CCCCCC">and there's</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> called VK GL which</font>

23
00:01:32,590 --> 00:01:36,659
targets<font color="#E5E5E5"> opengl 3 core profile so it's</font>

24
00:01:35,590 --> 00:01:40,179
<font color="#E5E5E5">not gonna do</font>

25
00:01:36,659 --> 00:01:42,909
legacy<font color="#CCCCCC"> opengl versions</font><font color="#E5E5E5"> no fixed function</font>

26
00:01:40,179 --> 00:01:45,070
<font color="#E5E5E5">or anything like that and this is</font><font color="#CCCCCC"> a</font>

27
00:01:42,909 --> 00:01:47,259
pretty<font color="#E5E5E5"> slow-moving project it's</font>

28
00:01:45,070 --> 00:01:50,320
<font color="#CCCCCC">sparetime</font><font color="#E5E5E5"> project for a single developer</font>

29
00:01:47,259 --> 00:01:54,310
<font color="#E5E5E5">and it has a really long way to go</font>

30
00:01:50,320 --> 00:01:56,229
before it can be very useful<font color="#E5E5E5"> so for</font>

31
00:01:54,310 --> 00:02:01,710
solving<font color="#E5E5E5"> this there's nothing really out</font>

32
00:01:56,229 --> 00:02:01,710
<font color="#E5E5E5">there that fits</font><font color="#CCCCCC"> as well so</font>

33
00:02:04,950 --> 00:02:07,970
<font color="#CCCCCC">- the wrong</font><font color="#E5E5E5"> way</font>

34
00:02:08,508 --> 00:02:14,390
<font color="#E5E5E5">No yeah so I guess</font><font color="#CCCCCC"> that's what these</font>

35
00:02:11,510 --> 00:02:16,790
slides I'm sorry for that<font color="#E5E5E5"> yeah so why we</font>

36
00:02:14,390 --> 00:02:19,518
want to<font color="#E5E5E5"> solve this is that OpenGL is a</font>

37
00:02:16,790 --> 00:02:24,500
requirement for supporting desktop

38
00:02:19,519 --> 00:02:27,620
applications<font color="#CCCCCC"> it's it's a pretty pretty</font>

39
00:02:24,500 --> 00:02:30,500
<font color="#E5E5E5">dated</font><font color="#CCCCCC"> API it's been around since 1992</font>

40
00:02:27,620 --> 00:02:33,739
<font color="#E5E5E5">and the hardware has changed a lot since</font>

41
00:02:30,500 --> 00:02:35,450
then and so has<font color="#CCCCCC"> the software</font><font color="#E5E5E5"> world so</font>

42
00:02:33,739 --> 00:02:39,560
there's a lot<font color="#E5E5E5"> of things that's OpenGL</font>

43
00:02:35,450 --> 00:02:41,929
isn't so well suited<font color="#CCCCCC"> for my work</font><font color="#E5E5E5"> came</font>

44
00:02:39,560 --> 00:02:46,510
out of virtualization<font color="#CCCCCC"> so be able being</font>

45
00:02:41,930 --> 00:02:50,659
able to<font color="#E5E5E5"> use GPUs in virtual</font><font color="#CCCCCC"> environments</font>

46
00:02:46,510 --> 00:02:53,569
I'm working up Virgil<font color="#E5E5E5"> and Mesa for this</font>

47
00:02:50,659 --> 00:02:57,099
and<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> some problems with</font><font color="#CCCCCC"> that but</font>

48
00:02:53,569 --> 00:03:02,480
that<font color="#CCCCCC"> were trying</font><font color="#E5E5E5"> to circumvent but I am</font>

49
00:02:57,099 --> 00:03:05,388
seeing if this vendor works or not<font color="#CCCCCC"> yeah</font>

50
00:03:02,480 --> 00:03:07,340
<font color="#CCCCCC">Volken is also kind</font><font color="#E5E5E5"> of becoming more and</font>

51
00:03:05,389 --> 00:03:09,980
more proven<font color="#CCCCCC"> in technology and and it's</font>

52
00:03:07,340 --> 00:03:14,019
pretty clear that it's becoming<font color="#E5E5E5"> the</font>

53
00:03:09,980 --> 00:03:18,230
dominant<font color="#E5E5E5"> graphics API</font><font color="#CCCCCC"> going forward</font>

54
00:03:14,019 --> 00:03:24,230
<font color="#CCCCCC">which means that</font><font color="#E5E5E5"> OpenGL has a little bit</font>

55
00:03:18,230 --> 00:03:26,060
<font color="#CCCCCC">of a less bright future</font><font color="#E5E5E5"> and it's better</font>

56
00:03:24,230 --> 00:03:28,698
<font color="#E5E5E5">for</font><font color="#CCCCCC"> the graphics community if we can all</font>

57
00:03:26,060 --> 00:03:31,579
kind of work on one API rather than

58
00:03:28,699 --> 00:03:33,549
multiple<font color="#E5E5E5"> ones but as I</font><font color="#CCCCCC"> said we still</font>

59
00:03:31,579 --> 00:03:38,540
need to<font color="#E5E5E5"> support all applications that</font>

60
00:03:33,549 --> 00:03:41,230
that use OpenGL<font color="#E5E5E5"> currently yeah and</font>

61
00:03:38,540 --> 00:03:44,150
there's some other use cases<font color="#E5E5E5"> that can</font><font color="#CCCCCC"> be</font>

62
00:03:41,230 --> 00:03:45,888
enabled<font color="#E5E5E5"> by this work for instance mobile</font>

63
00:03:44,150 --> 00:03:47,569
platforms that support<font color="#E5E5E5"> Vulcan can get</font>

64
00:03:45,889 --> 00:03:51,980
full OpenGL support which they don't

65
00:03:47,569 --> 00:03:59,238
<font color="#E5E5E5">currently have so my solution to</font><font color="#CCCCCC"> this is</font>

66
00:03:51,980 --> 00:04:02,418
called zinc<font color="#CCCCCC"> it's an it's a</font><font color="#E5E5E5"> NASA</font><font color="#CCCCCC"> gallium</font>

67
00:03:59,239 --> 00:04:05,139
driver that takes the<font color="#CCCCCC"> gallium API calls</font>

68
00:04:02,419 --> 00:04:07,370
and translate them into Vulcan it's

69
00:04:05,139 --> 00:04:11,419
currently<font color="#E5E5E5"> what I would call an early</font>

70
00:04:07,370 --> 00:04:14,510
kind<font color="#E5E5E5"> of out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> tree prototypes stage the</font>

71
00:04:11,419 --> 00:04:17,359
driver works reasonably well<font color="#E5E5E5"> it supports</font>

72
00:04:14,510 --> 00:04:22,069
opengl 3.0 on both<font color="#E5E5E5"> rad</font>

73
00:04:17,358 --> 00:04:26,870
and envy so the open source in<font color="#CCCCCC"> Mesa</font><font color="#E5E5E5"> MD</font>

74
00:04:22,069 --> 00:04:29,210
and Intel drivers we haven't tested much

75
00:04:26,870 --> 00:04:30,439
on<font color="#E5E5E5"> anything else</font><font color="#CCCCCC"> some people try to get</font>

76
00:04:29,210 --> 00:04:32,628
<font color="#E5E5E5">it working on and they</font><font color="#CCCCCC"> die but</font><font color="#E5E5E5"> there</font>

77
00:04:30,439 --> 00:04:38,629
<font color="#CCCCCC">were some difficulties with the lack of</font>

78
00:04:32,629 --> 00:04:40,550
<font color="#E5E5E5">DRI</font><font color="#CCCCCC"> to they've</font><font color="#E5E5E5"> early has jumped on this</font>

79
00:04:38,629 --> 00:04:45,680
and started contributing a lot<font color="#E5E5E5"> of really</font>

80
00:04:40,550 --> 00:04:46,819
cool features<font color="#CCCCCC"> the driver is written and</font>

81
00:04:45,680 --> 00:04:48,770
<font color="#CCCCCC">uh pretty kind</font><font color="#E5E5E5"> of like naive</font>

82
00:04:46,819 --> 00:04:50,650
happy-go-lucky approach to kind<font color="#CCCCCC"> of see</font>

83
00:04:48,770 --> 00:04:53,900
what could possibly<font color="#E5E5E5"> go wrong and</font><font color="#CCCCCC"> uh</font>

84
00:04:50,650 --> 00:04:54,878
turns out<font color="#E5E5E5"> it works a lot better</font><font color="#CCCCCC"> than I</font>

85
00:04:53,900 --> 00:04:58,659
feared

86
00:04:54,879 --> 00:05:02,930
and yeah I can run a lot<font color="#CCCCCC"> of games and</font>

87
00:04:58,659 --> 00:05:05,120
other demos applications<font color="#E5E5E5"> with a pretty</font>

88
00:05:02,930 --> 00:05:06,199
usable performance and I'm not going to

89
00:05:05,120 --> 00:05:07,729
talk<font color="#E5E5E5"> much about performance because</font>

90
00:05:06,199 --> 00:05:09,979
<font color="#E5E5E5">we're haven't focused that much about</font>

91
00:05:07,729 --> 00:05:11,810
<font color="#E5E5E5">that and that but for some simple</font>

92
00:05:09,979 --> 00:05:17,620
benchmarks<font color="#CCCCCC"> I get roughly half</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> I</font>

93
00:05:11,810 --> 00:05:21,680
965 provides and that's with some pretty

94
00:05:17,620 --> 00:05:26,089
<font color="#E5E5E5">not great stalls</font><font color="#CCCCCC"> that we're doing kind</font>

95
00:05:21,680 --> 00:05:28,039
of to place the<font color="#CCCCCC"> windows</font><font color="#E5E5E5"> system yes</font><font color="#CCCCCC"> ok</font>

96
00:05:26,089 --> 00:05:31,039
currently I'm taking a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of a</font>

97
00:05:28,039 --> 00:05:32,300
step<font color="#CCCCCC"> back and kind</font><font color="#E5E5E5"> of re-engineering it</font>

98
00:05:31,039 --> 00:05:34,599
<font color="#E5E5E5">a little bit because a</font><font color="#CCCCCC"> bunch of the</font>

99
00:05:32,300 --> 00:05:38,900
early<font color="#CCCCCC"> assigned decisions I've made were</font>

100
00:05:34,599 --> 00:05:41,240
turned out to be mistakes and so I'm

101
00:05:38,900 --> 00:05:43,580
trying<font color="#CCCCCC"> to like build a smaller feature</font>

102
00:05:41,240 --> 00:05:47,000
<font color="#E5E5E5">version of it that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can upstream in my</font>

103
00:05:43,580 --> 00:05:50,448
sound and<font color="#E5E5E5"> kind of build the more of the</font>

104
00:05:47,000 --> 00:05:52,039
<font color="#E5E5E5">features on</font><font color="#CCCCCC"> top of that again</font><font color="#E5E5E5"> yeah so</font>

105
00:05:50,449 --> 00:05:53,839
it's a it's a<font color="#E5E5E5"> galvan driver for those</font>

106
00:05:52,039 --> 00:05:57,020
who don't know my<font color="#CCCCCC"> son guy Loomis on</font>

107
00:05:53,839 --> 00:05:59,270
opened it's a system<font color="#CCCCCC"> that takes OpenGL</font>

108
00:05:57,020 --> 00:06:05,330
calls and kind of<font color="#E5E5E5"> translate lets them</font>

109
00:05:59,270 --> 00:06:08,210
into a more low-level<font color="#E5E5E5"> API and yeah</font>

110
00:06:05,330 --> 00:06:12,710
sync will kind of take<font color="#CCCCCC"> that and</font>

111
00:06:08,210 --> 00:06:15,318
translate that<font color="#E5E5E5"> to Vulcan and communicate</font>

112
00:06:12,710 --> 00:06:17,719
what's on<font color="#CCCCCC"> Window System is this this</font><font color="#E5E5E5"> is</font>

113
00:06:15,319 --> 00:06:19,969
the<font color="#E5E5E5"> software windows system which is not</font>

114
00:06:17,719 --> 00:06:21,140
good<font color="#CCCCCC"> where they have a hardware like</font>

115
00:06:19,969 --> 00:06:24,680
<font color="#E5E5E5">yeah</font>

116
00:06:21,140 --> 00:06:29,120
the<font color="#CCCCCC"> amoeba</font><font color="#E5E5E5"> bastes thing as well and</font>

117
00:06:24,680 --> 00:06:32,480
there's a rough overview of how<font color="#CCCCCC"> I draw</font>

118
00:06:29,120 --> 00:06:35,630
<font color="#CCCCCC">calls</font><font color="#E5E5E5"> kind of or the data flow of the</font>

119
00:06:32,480 --> 00:06:38,210
driver<font color="#CCCCCC"> so there's for instance a</font>

120
00:06:35,630 --> 00:06:40,130
compiler<font color="#CCCCCC"> that feeds a</font><font color="#E5E5E5"> program cache and</font>

121
00:06:38,210 --> 00:06:42,979
there's a pipeline cache that takes in

122
00:06:40,130 --> 00:06:49,280
render passes and creates frame buffers

123
00:06:42,980 --> 00:06:53,690
and<font color="#CCCCCC"> feeds that into command buffers yeah</font>

124
00:06:49,280 --> 00:06:59,929
<font color="#CCCCCC">so we're doing the shader worked with a</font>

125
00:06:53,690 --> 00:07:03,380
<font color="#CCCCCC">neuro</font><font color="#E5E5E5"> which is an</font><font color="#CCCCCC"> SSA bastes compiler I</font>

126
00:06:59,930 --> 00:07:09,740
<font color="#CCCCCC">are</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Mesa</font><font color="#E5E5E5"> I translate</font><font color="#CCCCCC"> that into super</font>

127
00:07:03,380 --> 00:07:10,909
V which is<font color="#E5E5E5"> the Vulcan shader</font><font color="#CCCCCC"> IR I chose</font>

128
00:07:09,740 --> 00:07:13,520
to go<font color="#CCCCCC"> that direction rather than</font>

129
00:07:10,910 --> 00:07:18,290
<font color="#E5E5E5">something like</font><font color="#CCCCCC"> TJ's I mostly because SSH</font>

130
00:07:13,520 --> 00:07:19,520
SSI is<font color="#E5E5E5"> or</font><font color="#CCCCCC"> seem</font><font color="#E5E5E5"> to be a great fit it</font>

131
00:07:18,290 --> 00:07:22,520
turns out to<font color="#CCCCCC"> be a</font><font color="#E5E5E5"> little bit harder</font><font color="#CCCCCC"> than</font>

132
00:07:19,520 --> 00:07:24,830
I thought<font color="#E5E5E5"> because of some annoying</font>

133
00:07:22,520 --> 00:07:31,370
differences in how they treat some of

134
00:07:24,830 --> 00:07:34,070
<font color="#E5E5E5">the fundamental SSA constructs it's</font>

135
00:07:31,370 --> 00:07:36,340
written as a reusable module hopefully

136
00:07:34,070 --> 00:07:39,580
like similar<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that we currently have a</font>

137
00:07:36,340 --> 00:07:43,070
spur<font color="#CCCCCC"> v2 no so it's kind of written</font><font color="#E5E5E5"> in a</font>

138
00:07:39,580 --> 00:07:44,300
somewhat<font color="#CCCCCC"> similar fashion and I'm hoping</font>

139
00:07:43,070 --> 00:07:47,390
that<font color="#CCCCCC"> well that</font><font color="#E5E5E5"> maybe we can make an</font>

140
00:07:44,300 --> 00:07:50,480
entry<font color="#CCCCCC"> GLSL</font><font color="#E5E5E5"> all the way to spur</font><font color="#CCCCCC"> V</font>

141
00:07:47,390 --> 00:07:52,610
compiler<font color="#CCCCCC"> and that's it's this</font><font color="#E5E5E5"> isn't the</font>

142
00:07:50,480 --> 00:07:54,530
<font color="#E5E5E5">high like an important goal but there's</font>

143
00:07:52,610 --> 00:07:56,660
it seems neat to be able<font color="#E5E5E5"> to do that</font>

144
00:07:54,530 --> 00:07:58,489
without pulling in other compilers for

145
00:07:56,660 --> 00:08:01,700
<font color="#E5E5E5">maybe we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> pre compile from</font>

146
00:07:58,490 --> 00:08:05,800
<font color="#E5E5E5">traders for instance it does not</font>

147
00:08:01,700 --> 00:08:08,240
generate<font color="#E5E5E5"> awesome codes</font><font color="#CCCCCC"> seems to the</font>

148
00:08:05,800 --> 00:08:09,860
Vulcan drivers and<font color="#E5E5E5"> desktop kind of make</font>

149
00:08:08,240 --> 00:08:13,250
<font color="#E5E5E5">up</font><font color="#CCCCCC"> for the bad code</font><font color="#E5E5E5"> regenerate</font><font color="#CCCCCC"> by</font>

150
00:08:09,860 --> 00:08:16,130
<font color="#CCCCCC">optimizing it afterwards but I fear that</font>

151
00:08:13,250 --> 00:08:18,440
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is not gonna fly</font><font color="#E5E5E5"> on mobile</font><font color="#CCCCCC"> mobile</font>

152
00:08:16,130 --> 00:08:21,800
drivers are probably less eager to spend

153
00:08:18,440 --> 00:08:24,050
<font color="#E5E5E5">CPU time on</font><font color="#CCCCCC"> icing the code first</font>

154
00:08:21,800 --> 00:08:26,870
yeah so I'm gonna talk<font color="#CCCCCC"> a little bit now</font>

155
00:08:24,050 --> 00:08:29,330
<font color="#CCCCCC">about the different difficulties we met</font>

156
00:08:26,870 --> 00:08:35,120
<font color="#CCCCCC">some</font><font color="#E5E5E5"> of these have solutions some of</font>

157
00:08:29,330 --> 00:08:39,319
them have ugly hacks and yeah<font color="#CCCCCC"> yeah so</font>

158
00:08:35,120 --> 00:08:44,120
control flow<font color="#E5E5E5"> we don't support</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> pretty</font>

159
00:08:39,320 --> 00:08:45,589
pretty<font color="#CCCCCC"> bad this</font><font color="#E5E5E5"> is one of the kind of</font>

160
00:08:44,120 --> 00:08:48,010
like big ticket things that needs to be

161
00:08:45,589 --> 00:08:52,700
<font color="#E5E5E5">fixed I think</font><font color="#CCCCCC"> before I can</font><font color="#E5E5E5"> upstream it</font>

162
00:08:48,010 --> 00:08:55,450
<font color="#E5E5E5">it's yeah I have some prototype but that</font>

163
00:08:52,700 --> 00:08:58,160
kind of crashes<font color="#E5E5E5"> and burns in some cases</font>

164
00:08:55,450 --> 00:09:00,649
<font color="#E5E5E5">it's trickier than it</font><font color="#CCCCCC"> sounds and</font><font color="#E5E5E5"> the</font>

165
00:08:58,160 --> 00:09:05,240
reason<font color="#E5E5E5"> for this is these</font><font color="#CCCCCC"> SSA differences</font>

166
00:09:00,649 --> 00:09:07,670
<font color="#E5E5E5">that I talked about in our jumps can</font>

167
00:09:05,240 --> 00:09:10,579
appear<font color="#E5E5E5"> from anywhere inside</font><font color="#CCCCCC"> a basic</font><font color="#E5E5E5"> book</font>

168
00:09:07,670 --> 00:09:16,189
which is a very creative way<font color="#CCCCCC"> of defining</font>

169
00:09:10,579 --> 00:09:18,620
a basic block<font color="#E5E5E5"> I think so so for instance</font>

170
00:09:16,190 --> 00:09:22,370
I am<font color="#CCCCCC"> err jumpin return</font><font color="#E5E5E5"> break continue</font>

171
00:09:18,620 --> 00:09:25,880
<font color="#E5E5E5">this can all bit and some intrinsics</font>

172
00:09:22,370 --> 00:09:30,320
also have implied control flow

173
00:09:25,880 --> 00:09:33,020
modifications<font color="#CCCCCC"> like this card in an</font>

174
00:09:30,320 --> 00:09:35,390
interview<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> this terminate the</font>

175
00:09:33,020 --> 00:09:41,660
basic block<font color="#E5E5E5"> and that means that</font>

176
00:09:35,390 --> 00:09:45,470
addressing finals<font color="#E5E5E5"> gets pretty hairy it's</font>

177
00:09:41,660 --> 00:09:47,589
probably not super duper hard to to

178
00:09:45,470 --> 00:09:50,420
solve but<font color="#E5E5E5"> I think I'm gonna have to like</font>

179
00:09:47,589 --> 00:09:52,339
<font color="#E5E5E5">except not a direct translation here</font>

180
00:09:50,420 --> 00:09:55,849
first I'd like<font color="#CCCCCC"> to do something</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font>

181
00:09:52,339 --> 00:09:57,980
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> favor I haven't haven't really spent</font>

182
00:09:55,850 --> 00:10:00,620
much thought about<font color="#CCCCCC"> this effort</font><font color="#E5E5E5"> kind of</font>

183
00:09:57,980 --> 00:10:02,780
<font color="#E5E5E5">hitting this wall</font>

184
00:10:00,620 --> 00:10:07,310
yeah another<font color="#E5E5E5"> problem is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the SSA</font>

185
00:10:02,780 --> 00:10:10,310
values of<font color="#CCCCCC"> NARAS</font><font color="#E5E5E5"> type</font><font color="#CCCCCC"> ty plus they're</font>

186
00:10:07,310 --> 00:10:13,939
basically just a<font color="#E5E5E5"> bucket of bits which</font>

187
00:10:10,310 --> 00:10:17,839
means that we currently just bit<font color="#E5E5E5"> cast</font>

188
00:10:13,940 --> 00:10:20,150
everything<font color="#E5E5E5"> into if I'm from you and this</font>

189
00:10:17,840 --> 00:10:25,310
creates a<font color="#CCCCCC"> lot of needless instructions</font>

190
00:10:20,150 --> 00:10:29,360
in a lot of<font color="#E5E5E5"> cases and yeah it's not not</font>

191
00:10:25,310 --> 00:10:31,849
great<font color="#CCCCCC"> there's some externus event o has</font>

192
00:10:29,360 --> 00:10:34,490
been nice enough<font color="#CCCCCC"> to create a</font><font color="#E5E5E5"> prototype</font>

193
00:10:31,850 --> 00:10:38,120
for looking kind of scanning<font color="#E5E5E5"> past that</font>

194
00:10:34,490 --> 00:10:40,130
<font color="#E5E5E5">finds out which cast can be removed and</font>

195
00:10:38,120 --> 00:10:43,730
kind<font color="#E5E5E5"> of replaced the different SSA</font>

196
00:10:40,130 --> 00:10:45,800
values with typed versions it doesn't

197
00:10:43,730 --> 00:10:48,260
work<font color="#CCCCCC"> for all of</font><font color="#E5E5E5"> the stuff but it's it</font>

198
00:10:45,800 --> 00:10:51,280
doesn't<font color="#CCCCCC"> meet its kind of</font><font color="#E5E5E5"> problem needs</font>

199
00:10:48,260 --> 00:10:54,500
<font color="#E5E5E5">to do better than nothing</font>

200
00:10:51,280 --> 00:10:56,660
<font color="#CCCCCC">they're still</font><font color="#E5E5E5"> yeah some constants are</font>

201
00:10:54,500 --> 00:11:00,380
still problematic with that but<font color="#E5E5E5"> you</font>

202
00:10:56,660 --> 00:11:04,510
probably probably<font color="#E5E5E5"> extend it I haven't</font>

203
00:11:00,380 --> 00:11:08,300
tested this pass yet of time

204
00:11:04,510 --> 00:11:10,460
restrictions yeah<font color="#E5E5E5"> then another thing</font>

205
00:11:08,300 --> 00:11:13,910
<font color="#CCCCCC">that needs to be solved but we're not</font>

206
00:11:10,460 --> 00:11:17,270
doing of<font color="#E5E5E5"> Awesomeness</font>

207
00:11:13,910 --> 00:11:20,600
how to bind a<font color="#E5E5E5"> shaded resources to to the</font>

208
00:11:17,270 --> 00:11:24,949
shaders and<font color="#E5E5E5"> and for those who don't know</font>

209
00:11:20,600 --> 00:11:27,320
Vulcan<font color="#E5E5E5"> the the way you</font><font color="#CCCCCC"> address</font><font color="#E5E5E5"> resources</font>

210
00:11:24,950 --> 00:11:31,510
or<font color="#E5E5E5"> bind them is through descriptor sets</font>

211
00:11:27,320 --> 00:11:33,800
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we have a set of</font><font color="#E5E5E5"> like you can have</font><font color="#CCCCCC"> an</font>

212
00:11:31,510 --> 00:11:36,890
descriptor sets and they have kind of

213
00:11:33,800 --> 00:11:39,949
indexed resources in side<font color="#E5E5E5"> of them we</font>

214
00:11:36,890 --> 00:11:44,870
currently<font color="#CCCCCC"> just push all of this into one</font>

215
00:11:39,950 --> 00:11:48,380
big descriptor set which is a pretty

216
00:11:44,870 --> 00:11:50,830
easy<font color="#E5E5E5"> approach but it's might not be</font>

217
00:11:48,380 --> 00:11:54,590
<font color="#CCCCCC">great from performance</font><font color="#E5E5E5"> point of view</font>

218
00:11:50,830 --> 00:11:55,990
<font color="#E5E5E5">especially the Vulcan spec suggests that</font>

219
00:11:54,590 --> 00:11:59,420
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not a good idea</font>

220
00:11:55,990 --> 00:12:02,810
<font color="#E5E5E5">we stole</font><font color="#CCCCCC"> that idea from the xvk and it</font>

221
00:11:59,420 --> 00:12:04,670
seems<font color="#E5E5E5"> to work</font><font color="#CCCCCC"> okay but some</font><font color="#E5E5E5"> points we</font>

222
00:12:02,810 --> 00:12:06,709
<font color="#CCCCCC">should probably look into doing this a</font>

223
00:12:04,670 --> 00:12:09,589
bit more<font color="#E5E5E5"> properly</font>

224
00:12:06,710 --> 00:12:11,050
and I<font color="#CCCCCC"> think making a</font><font color="#E5E5E5"> descriptive per</font>

225
00:12:09,590 --> 00:12:16,130
stage

226
00:12:11,050 --> 00:12:18,109
<font color="#CCCCCC">appreciated stage</font><font color="#E5E5E5"> makes this easier and</font>

227
00:12:16,130 --> 00:12:24,080
we will<font color="#E5E5E5"> get much smaller indices there</font>

228
00:12:18,110 --> 00:12:26,570
and that seems seems<font color="#E5E5E5"> good yeah and</font><font color="#CCCCCC"> then</font>

229
00:12:24,080 --> 00:12:28,010
we also<font color="#E5E5E5"> need to have as you draw in it</font>

230
00:12:26,570 --> 00:12:29,870
we need to<font color="#E5E5E5"> deal</font><font color="#CCCCCC"> with the descriptor sets</font>

231
00:12:28,010 --> 00:12:33,230
<font color="#CCCCCC">currently watch what we do is we create</font>

232
00:12:29,870 --> 00:12:36,410
a huge<font color="#E5E5E5"> descriptor set pool and just</font>

233
00:12:33,230 --> 00:12:40,280
allocate<font color="#E5E5E5"> from there until the allocation</font>

234
00:12:36,410 --> 00:12:43,280
fails then<font color="#CCCCCC"> we flush the the GPU and wait</font>

235
00:12:40,280 --> 00:12:46,730
for the<font color="#E5E5E5"> GPU to finish and reset the pool</font>

236
00:12:43,280 --> 00:12:49,339
that's<font color="#E5E5E5"> all obviously</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> not a great</font>

237
00:12:46,730 --> 00:12:52,550
idea<font color="#CCCCCC"> and it causes</font><font color="#E5E5E5"> some validation</font>

238
00:12:49,340 --> 00:12:56,300
errors and some framerate<font color="#E5E5E5"> hiccups so</font>

239
00:12:52,550 --> 00:12:58,900
it's<font color="#E5E5E5"> probably better to have</font><font color="#CCCCCC"> multiple</font>

240
00:12:56,300 --> 00:13:02,060
smaller pools and keep track<font color="#E5E5E5"> of</font><font color="#CCCCCC"> how many</font>

241
00:12:58,900 --> 00:13:04,819
how many descriptors we've used from

242
00:13:02,060 --> 00:13:07,119
there and you know<font color="#CCCCCC"> use some</font><font color="#E5E5E5"> fences to</font>

243
00:13:04,820 --> 00:13:11,290
automatically wait if the next<font color="#E5E5E5"> thing</font>

244
00:13:07,120 --> 00:13:11,290
wasn't<font color="#E5E5E5"> finished yet</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> on the GPU</font>

245
00:13:11,820 --> 00:13:17,220
yeah we for those<font color="#E5E5E5"> who don't know what</font>

246
00:13:14,400 --> 00:13:19,590
<font color="#E5E5E5">pipeline objects are there an object</font><font color="#CCCCCC"> in</font>

247
00:13:17,220 --> 00:13:23,220
<font color="#E5E5E5">Vulcan that encapsulate frame</font><font color="#CCCCCC"> pretty</font>

248
00:13:19,590 --> 00:13:28,050
much all the<font color="#CCCCCC"> draw States these</font><font color="#E5E5E5"> are</font>

249
00:13:23,220 --> 00:13:30,750
<font color="#E5E5E5">relatively expensive to create so so we</font>

250
00:13:28,050 --> 00:13:33,150
try<font color="#CCCCCC"> to catch them and keep them around</font>

251
00:13:30,750 --> 00:13:39,270
<font color="#E5E5E5">for the next time try to use the same</font>

252
00:13:33,150 --> 00:13:40,470
dress<font color="#CCCCCC"> that we currently just do that</font>

253
00:13:39,270 --> 00:13:41,329
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of naive</font><font color="#E5E5E5"> length put them in the</font>

254
00:13:40,470 --> 00:13:44,750
<font color="#CCCCCC">hashmap</font>

255
00:13:41,330 --> 00:13:47,430
<font color="#E5E5E5">but in the future we want to move to</font>

256
00:13:44,750 --> 00:13:49,290
<font color="#E5E5E5">doing in</font><font color="#CCCCCC"> building an</font><font color="#E5E5E5"> optimized</font><font color="#CCCCCC"> version</font>

257
00:13:47,430 --> 00:13:51,650
of this eagerly and then kind<font color="#CCCCCC"> of a</font>

258
00:13:49,290 --> 00:13:55,439
background<font color="#CCCCCC"> thread that creates of most</font>

259
00:13:51,650 --> 00:13:57,860
pipelines instead<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> what dxv care</font>

260
00:13:55,440 --> 00:14:01,350
does and it seems<font color="#E5E5E5"> to</font><font color="#CCCCCC"> work well</font><font color="#E5E5E5"> for them</font>

261
00:13:57,860 --> 00:14:03,000
<font color="#E5E5E5">if I know that Intel driver people is</font>

262
00:14:01,350 --> 00:14:05,220
listening it would be great if you<font color="#E5E5E5"> guys</font>

263
00:14:03,000 --> 00:14:09,750
started respecting the disabled<font color="#CCCCCC"> my</font>

264
00:14:05,220 --> 00:14:11,760
session<font color="#CCCCCC"> but this plan</font><font color="#E5E5E5"> yeah anyway so</font>

265
00:14:09,750 --> 00:14:17,760
<font color="#CCCCCC">this is this</font><font color="#E5E5E5"> whole</font><font color="#CCCCCC"> thing is similar to</font>

266
00:14:11,760 --> 00:14:20,580
variant caching and it's yeah it's it's

267
00:14:17,760 --> 00:14:21,920
not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> a big</font><font color="#E5E5E5"> question what to do</font>

268
00:14:20,580 --> 00:14:25,740
here

269
00:14:21,920 --> 00:14:27,360
yeah and we<font color="#E5E5E5"> need to also deal with image</font>

270
00:14:25,740 --> 00:14:31,020
layouts which is one of<font color="#CCCCCC"> the big</font>

271
00:14:27,360 --> 00:14:32,430
differences with<font color="#E5E5E5"> OpenGL for those who</font>

272
00:14:31,020 --> 00:14:35,040
doesn't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> quite what that is that</font>

273
00:14:32,430 --> 00:14:37,770
it's kind of<font color="#E5E5E5"> like a it's a hint to the</font>

274
00:14:35,040 --> 00:14:39,750
driver what or what<font color="#E5E5E5"> you're gonna do with</font>

275
00:14:37,770 --> 00:14:42,150
<font color="#CCCCCC">a with an image so you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> for instance</font>

276
00:14:39,750 --> 00:14:43,590
be<font color="#E5E5E5"> set in</font><font color="#CCCCCC"> a state where you can only do</font>

277
00:14:42,150 --> 00:14:45,959
rendering to it or you can only do

278
00:14:43,590 --> 00:14:47,850
texture infer from it and generally

279
00:14:45,960 --> 00:14:49,260
<font color="#E5E5E5">speaking these optimizations or this</font>

280
00:14:47,850 --> 00:14:51,870
might have some of<font color="#E5E5E5"> my sessions on the</font>

281
00:14:49,260 --> 00:14:54,660
<font color="#CCCCCC">other</font><font color="#E5E5E5"> level where they're faster</font><font color="#CCCCCC"> at</font>

282
00:14:51,870 --> 00:14:57,450
being exists we just<font color="#CCCCCC"> use</font><font color="#E5E5E5"> the big hammer</font>

283
00:14:54,660 --> 00:14:58,890
called layout<font color="#E5E5E5"> general and translate to</font>

284
00:14:57,450 --> 00:15:01,170
that<font color="#E5E5E5"> as</font><font color="#CCCCCC"> early</font><font color="#E5E5E5"> as we can and just keep</font>

285
00:14:58,890 --> 00:15:03,390
<font color="#E5E5E5">them there</font><font color="#CCCCCC"> there every operation</font><font color="#E5E5E5"> is</font>

286
00:15:01,170 --> 00:15:07,380
allowed but<font color="#E5E5E5"> that performance isn't</font>

287
00:15:03,390 --> 00:15:11,490
necessarily great<font color="#E5E5E5"> it's this is not a big</font>

288
00:15:07,380 --> 00:15:13,710
<font color="#E5E5E5">problem for us yet mainly because we're</font>

289
00:15:11,490 --> 00:15:17,250
mostly CPU limited rather than GPU

290
00:15:13,710 --> 00:15:21,590
limited of course<font color="#E5E5E5"> depends on the</font>

291
00:15:17,250 --> 00:15:23,430
<font color="#CCCCCC">application but it has some nasty</font>

292
00:15:21,590 --> 00:15:26,250
<font color="#E5E5E5">implications with</font>

293
00:15:23,430 --> 00:15:28,349
with<font color="#CCCCCC"> rice in</font><font color="#E5E5E5"> us with multiple</font><font color="#CCCCCC"> complexed</font>

294
00:15:26,250 --> 00:15:35,460
where the problem<font color="#E5E5E5"> is that the resource</font>

295
00:15:28,350 --> 00:15:37,830
has has different like the resources can

296
00:15:35,460 --> 00:15:39,480
<font color="#CCCCCC">be shared and</font><font color="#E5E5E5"> the context is the only</font>

297
00:15:37,830 --> 00:15:41,640
<font color="#E5E5E5">one</font><font color="#CCCCCC"> who kind</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> sees when the</font><font color="#E5E5E5"> transition</font>

298
00:15:39,480 --> 00:15:43,050
happens<font color="#E5E5E5"> so we need to insert some</font>

299
00:15:41,640 --> 00:15:44,640
fencing or something there to make that

300
00:15:43,050 --> 00:15:45,810
sure we're not<font color="#E5E5E5"> doing that I haven't</font>

301
00:15:44,640 --> 00:15:50,930
<font color="#E5E5E5">tried anything that does multiple</font>

302
00:15:45,810 --> 00:15:53,310
<font color="#E5E5E5">contexts this in context yet yeah</font>

303
00:15:50,930 --> 00:15:55,380
in addition this angle is doing some

304
00:15:53,310 --> 00:15:56,790
<font color="#CCCCCC">really cool work of building something</font>

305
00:15:55,380 --> 00:15:58,980
<font color="#E5E5E5">called a frame graph which is like a</font>

306
00:15:56,790 --> 00:16:00,540
kind<font color="#CCCCCC"> of build a timeline of what's</font>

307
00:15:58,980 --> 00:16:04,410
happening with things and then<font color="#CCCCCC"> measuring</font>

308
00:16:00,540 --> 00:16:06,150
<font color="#E5E5E5">things so you can do move your image</font>

309
00:16:04,410 --> 00:16:09,660
transversus<font color="#E5E5E5"> early as possible</font><font color="#CCCCCC"> which is</font>

310
00:16:06,150 --> 00:16:11,819
supposedly<font color="#E5E5E5"> better for performance</font><font color="#CCCCCC"> I can</font>

311
00:16:09,660 --> 00:16:16,050
<font color="#CCCCCC">imagine we can do like just steal their</font>

312
00:16:11,820 --> 00:16:18,029
ideas there and something<font color="#E5E5E5"> but this I</font>

313
00:16:16,050 --> 00:16:22,410
<font color="#CCCCCC">think comes down the line a bit from</font>

314
00:16:18,029 --> 00:16:24,210
whether or not<font color="#CCCCCC"> no yeah</font><font color="#E5E5E5"> and so uniforms</font>

315
00:16:22,410 --> 00:16:26,969
is also kind of a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> different</font>

316
00:16:24,210 --> 00:16:32,550
<font color="#CCCCCC">in OpenGL</font><font color="#E5E5E5"> you can have like freestanding</font>

317
00:16:26,970 --> 00:16:34,800
like default default uniforms<font color="#E5E5E5"> that</font><font color="#CCCCCC"> or a</font>

318
00:16:32,550 --> 00:16:39,000
default uniform block and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> gallium</font>

319
00:16:34,800 --> 00:16:43,050
this<font color="#E5E5E5"> is a little bit yeah it's the they</font>

320
00:16:39,000 --> 00:16:45,120
<font color="#E5E5E5">look different from the IR and stuff</font>

321
00:16:43,050 --> 00:16:48,060
like that we<font color="#E5E5E5"> basically just do a shader</font>

322
00:16:45,120 --> 00:16:51,450
<font color="#CCCCCC">a compiler pass that transforms them</font>

323
00:16:48,060 --> 00:16:54,420
into into<font color="#CCCCCC"> a uniform book there's already</font>

324
00:16:51,450 --> 00:16:56,370
some stuff<font color="#E5E5E5"> and</font><font color="#CCCCCC"> gallant to do this by</font>

325
00:16:54,420 --> 00:16:59,779
default<font color="#E5E5E5"> but</font><font color="#CCCCCC"> we can't</font><font color="#E5E5E5"> use that for some</font>

326
00:16:56,370 --> 00:16:59,779
technical<font color="#E5E5E5"> reasons yep</font>

327
00:17:00,320 --> 00:17:04,980
there's some difficulties here it's not

328
00:17:02,670 --> 00:17:09,780
really<font color="#E5E5E5"> but</font><font color="#CCCCCC"> interesting I'm</font><font color="#E5E5E5"> gonna just</font>

329
00:17:04,980 --> 00:17:12,199
<font color="#CCCCCC">prefer yeah</font><font color="#E5E5E5"> and then one other issue is</font>

330
00:17:09,780 --> 00:17:15,030
that<font color="#E5E5E5"> we're we're depending for some</font>

331
00:17:12,199 --> 00:17:19,350
opengl 3.0 features to<font color="#CCCCCC"> fly</font><font color="#E5E5E5"> that will</font>

332
00:17:15,030 --> 00:17:22,579
depend<font color="#CCCCCC"> on some ext extensions and stuff</font>

333
00:17:19,349 --> 00:17:26,089
like VK ext transform transform feedback

334
00:17:22,579 --> 00:17:29,850
I'm not so sure<font color="#E5E5E5"> we can rely on that</font>

335
00:17:26,089 --> 00:17:31,360
forever<font color="#CCCCCC"> and probably not at all</font>

336
00:17:29,850 --> 00:17:34,719
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> well</font>

337
00:17:31,360 --> 00:17:38,408
so we need to rethink<font color="#E5E5E5"> some of these</font>

338
00:17:34,720 --> 00:17:39,760
solutions<font color="#CCCCCC"> I kind of can envision some of</font>

339
00:17:38,409 --> 00:17:42,460
<font color="#CCCCCC">this stuff</font><font color="#E5E5E5"> being</font><font color="#CCCCCC"> done with a giant</font>

340
00:17:39,760 --> 00:17:43,870
<font color="#E5E5E5">computer that</font><font color="#CCCCCC"> inline all different sizes</font>

341
00:17:42,460 --> 00:17:46,950
<font color="#CCCCCC">that is apart</font><font color="#E5E5E5"> from the fragment shader</font>

342
00:17:43,870 --> 00:17:48,969
<font color="#E5E5E5">into and kind</font><font color="#CCCCCC"> of build some queues</font>

343
00:17:46,950 --> 00:17:51,610
<font color="#E5E5E5">basically every implement the GPU</font>

344
00:17:48,970 --> 00:17:53,590
pipeline<font color="#CCCCCC"> compute shader people some</font>

345
00:17:51,610 --> 00:17:58,449
people<font color="#E5E5E5"> have done this before with CUDA</font>

346
00:17:53,590 --> 00:18:00,970
and<font color="#E5E5E5"> it's pretty successful so so it is</font>

347
00:17:58,450 --> 00:18:02,919
some option but there's maybe it's

348
00:18:00,970 --> 00:18:04,929
better to<font color="#CCCCCC"> do some more</font><font color="#E5E5E5"> targeted smaller</font>

349
00:18:02,919 --> 00:18:08,789
things for simple features<font color="#CCCCCC"> where we</font>

350
00:18:04,929 --> 00:18:13,690
maybe not fully support the spec but or

351
00:18:08,789 --> 00:18:15,820
get applications<font color="#CCCCCC"> running we'll see ya</font>

352
00:18:13,690 --> 00:18:18,820
<font color="#E5E5E5">this other extensions</font><font color="#CCCCCC"> been back</font><font color="#E5E5E5"> that has</font>

353
00:18:15,820 --> 00:18:21,070
the same same problem<font color="#E5E5E5"> so yeah we're</font>

354
00:18:18,820 --> 00:18:23,529
currently supporting<font color="#E5E5E5"> opengl 3.0 but</font>

355
00:18:21,070 --> 00:18:25,090
there's a little<font color="#CCCCCC"> bit of</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> Asterix</font><font color="#E5E5E5"> there</font>

356
00:18:23,529 --> 00:18:30,520
there are some features we're not

357
00:18:25,090 --> 00:18:34,178
missing most of<font color="#E5E5E5"> these are fixed</font><font color="#CCCCCC"> function</font>

358
00:18:30,520 --> 00:18:36,370
kind<font color="#E5E5E5"> of details</font><font color="#CCCCCC"> polygons world is</font>

359
00:18:34,179 --> 00:18:38,860
different<font color="#CCCCCC"> in Vulcan</font><font color="#E5E5E5"> and OpenGL</font><font color="#CCCCCC"> where</font><font color="#E5E5E5"> and</font>

360
00:18:36,370 --> 00:18:41,080
OpenGL<font color="#CCCCCC"> you can specify different</font><font color="#E5E5E5"> polygon</font>

361
00:18:38,860 --> 00:18:43,539
mode for front and<font color="#E5E5E5"> back faces and on</font>

362
00:18:41,080 --> 00:18:47,350
Vulcan<font color="#E5E5E5"> you can only support one suppose</font>

363
00:18:43,539 --> 00:18:50,289
for one so we<font color="#E5E5E5"> just currently issue a</font>

364
00:18:47,350 --> 00:18:53,309
warning if if they're different<font color="#E5E5E5"> and use</font>

365
00:18:50,289 --> 00:18:55,840
the<font color="#CCCCCC"> font from</font><font color="#E5E5E5"> face</font><font color="#CCCCCC"> state for that I</font>

366
00:18:53,309 --> 00:18:57,850
haven't seen any applications failed

367
00:18:55,840 --> 00:18:59,289
with it<font color="#E5E5E5"> this but as</font><font color="#CCCCCC"> we test more</font>

368
00:18:57,850 --> 00:19:01,330
applications I'm sure there's some CAD

369
00:18:59,289 --> 00:19:05,740
applications that aren't gonna render

370
00:19:01,330 --> 00:19:08,189
correctly<font color="#CCCCCC"> there's several emulation</font>

371
00:19:05,740 --> 00:19:10,480
<font color="#E5E5E5">paths we can try something like drawing</font>

372
00:19:08,190 --> 00:19:12,880
all the back faces first and then all

373
00:19:10,480 --> 00:19:16,929
the front faces kind of assume they're

374
00:19:12,880 --> 00:19:19,210
ordering isn't important<font color="#CCCCCC"> we can write</font>

375
00:19:16,929 --> 00:19:21,460
out the primitives to buffer and like to

376
00:19:19,210 --> 00:19:24,580
stream it out and yes<font color="#E5E5E5"> a geometry shader</font>

377
00:19:21,460 --> 00:19:31,529
<font color="#CCCCCC">- yeah</font><font color="#E5E5E5"> construct triangles afterwards</font>

378
00:19:24,580 --> 00:19:35,168
<font color="#CCCCCC">maybe I don't</font><font color="#E5E5E5"> know it's a pretty low low</font>

379
00:19:31,529 --> 00:19:37,029
priority<font color="#CCCCCC"> they should fix texture borders</font>

380
00:19:35,169 --> 00:19:39,340
are a little bit<font color="#E5E5E5"> different in OpenGL you</font>

381
00:19:37,029 --> 00:19:41,530
<font color="#E5E5E5">can have arbitrary texture</font><font color="#CCCCCC"> borders</font><font color="#E5E5E5"> and</font>

382
00:19:39,340 --> 00:19:43,209
colors<font color="#E5E5E5"> and in Vulcan there's three</font>

383
00:19:41,530 --> 00:19:46,029
different<font color="#CCCCCC"> ones you</font><font color="#E5E5E5"> can have transparent</font>

384
00:19:43,210 --> 00:19:48,370
<font color="#E5E5E5">black opaque black and opaque</font>

385
00:19:46,029 --> 00:19:51,070
we just hard coded<font color="#E5E5E5"> as transparent black</font>

386
00:19:48,370 --> 00:19:55,570
all the<font color="#E5E5E5"> time and I have only seen</font>

387
00:19:51,070 --> 00:19:58,178
synthetic tests give any problems but

388
00:19:55,570 --> 00:20:03,480
it's totally<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> to do this by</font>

389
00:19:58,179 --> 00:20:08,169
injecting some shader<font color="#E5E5E5"> codes it's not</font>

390
00:20:03,480 --> 00:20:11,529
actually<font color="#CCCCCC"> that bad to do that but not</font>

391
00:20:08,169 --> 00:20:13,539
awesome yeah<font color="#E5E5E5"> if needed we could</font>

392
00:20:11,529 --> 00:20:16,000
implement<font color="#E5E5E5"> like</font><font color="#CCCCCC"> a some extension to</font>

393
00:20:13,539 --> 00:20:20,710
support<font color="#E5E5E5"> more modes but I doubt it's</font>

394
00:20:16,000 --> 00:20:24,429
going<font color="#E5E5E5"> to be important yeah</font><font color="#CCCCCC"> point size</font>

395
00:20:20,710 --> 00:20:28,899
<font color="#E5E5E5">was you you can either</font><font color="#CCCCCC"> OpenGL you</font><font color="#E5E5E5"> can</font>

396
00:20:24,429 --> 00:20:32,230
either write the GL<font color="#E5E5E5"> point size outputs</font>

397
00:20:28,899 --> 00:20:35,049
and the vertex<font color="#CCCCCC"> shader or you can set fix</font>

398
00:20:32,230 --> 00:20:38,799
the front plate size for the whole<font color="#CCCCCC"> joke</font>

399
00:20:35,049 --> 00:20:40,330
<font color="#CCCCCC">all we need to</font><font color="#E5E5E5"> like have some in Vulcan</font>

400
00:20:38,799 --> 00:20:43,389
you can only write<font color="#CCCCCC"> the</font><font color="#E5E5E5"> vertex</font><font color="#CCCCCC"> shader we</font>

401
00:20:40,330 --> 00:20:46,840
haven't done any forwarding<font color="#E5E5E5"> there if</font>

402
00:20:43,390 --> 00:20:50,950
<font color="#E5E5E5">that's state it's kind of boring code to</font>

403
00:20:46,840 --> 00:20:53,139
write<font color="#E5E5E5"> but it's relatively</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> and I</font>

404
00:20:50,950 --> 00:20:55,240
think<font color="#CCCCCC"> also</font><font color="#E5E5E5"> some of the</font><font color="#CCCCCC"> other drivers</font>

405
00:20:53,140 --> 00:20:57,250
<font color="#CCCCCC">that are working to be</font><font color="#E5E5E5"> up streams</font><font color="#CCCCCC"> gonna</font>

406
00:20:55,240 --> 00:21:02,860
<font color="#CCCCCC">need</font><font color="#E5E5E5"> something similar</font><font color="#CCCCCC"> so maybe we can</font>

407
00:20:57,250 --> 00:21:07,570
work<font color="#E5E5E5"> with them on a shared solution yeah</font>

408
00:21:02,860 --> 00:21:10,979
alpha testing<font color="#CCCCCC"> it's this in theory</font><font color="#E5E5E5"> very</font>

409
00:21:07,570 --> 00:21:13,330
simple to<font color="#E5E5E5"> implement but it requires</font>

410
00:21:10,980 --> 00:21:22,480
<font color="#E5E5E5">requires control flow which we don't</font>

411
00:21:13,330 --> 00:21:26,580
<font color="#E5E5E5">support yeah so it's a difficult role</font>

412
00:21:22,480 --> 00:21:32,110
for it should<font color="#E5E5E5"> this will go very quickly</font>

413
00:21:26,580 --> 00:21:34,870
so currently<font color="#E5E5E5"> mr.</font><font color="#CCCCCC"> put opengl 2.1 like</font>

414
00:21:32,110 --> 00:21:38,110
it's the lowest sets of features we

415
00:21:34,870 --> 00:21:40,629
<font color="#CCCCCC">kinship support requires vulcan 1.0 and</font>

416
00:21:38,110 --> 00:21:44,668
a bunch of different<font color="#E5E5E5"> physical device</font>

417
00:21:40,630 --> 00:21:47,020
features which we don't<font color="#E5E5E5"> test</font><font color="#CCCCCC"> first so</font>

418
00:21:44,669 --> 00:21:49,630
probably well before we land<font color="#E5E5E5"> this</font><font color="#CCCCCC"> driver</font>

419
00:21:47,020 --> 00:21:52,190
<font color="#E5E5E5">but maybe with an override or something</font>

420
00:21:49,630 --> 00:21:55,850
so you can run things<font color="#E5E5E5"> even if</font>

421
00:21:52,190 --> 00:21:58,550
if it's not<font color="#E5E5E5"> perfect</font><font color="#CCCCCC"> yeah</font>

422
00:21:55,850 --> 00:21:59,629
opengl 3.0 requires two more<font color="#CCCCCC"> xt</font>

423
00:21:58,550 --> 00:22:03,159
extensions

424
00:21:59,630 --> 00:22:07,550
those are both enabled in<font color="#CCCCCC"> red V and V so</font>

425
00:22:03,160 --> 00:22:10,640
on both<font color="#E5E5E5"> of those drivers we get 3.0</font><font color="#CCCCCC"> I</font>

426
00:22:07,550 --> 00:22:12,889
had some slides about about future

427
00:22:10,640 --> 00:22:14,240
versions<font color="#E5E5E5"> but I decided to cut them there</font>

428
00:22:12,890 --> 00:22:15,860
in<font color="#E5E5E5"> the slide deck if someone wants</font><font color="#CCCCCC"> to</font>

429
00:22:14,240 --> 00:22:17,930
download<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and read some more it</font>

430
00:22:15,860 --> 00:22:20,449
basically goes<font color="#E5E5E5"> through which</font><font color="#CCCCCC"> Vulcan</font>

431
00:22:17,930 --> 00:22:27,160
features<font color="#E5E5E5"> we're going to require</font><font color="#CCCCCC"> four all</font>

432
00:22:20,450 --> 00:22:30,550
the<font color="#CCCCCC"> way up to 4.6 yeah so in the future</font>

433
00:22:27,160 --> 00:22:33,800
<font color="#CCCCCC">there's a bunch of more stuff to be done</font>

434
00:22:30,550 --> 00:22:37,190
the biggest problem is that<font color="#CCCCCC"> the compiler</font>

435
00:22:33,800 --> 00:22:41,899
<font color="#E5E5E5">is</font><font color="#CCCCCC"> not as great</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> it could</font><font color="#E5E5E5"> be I'm not</font>

436
00:22:37,190 --> 00:22:43,370
really a compiler guy so if someone who

437
00:22:41,900 --> 00:22:47,390
knows compilers would like to help<font color="#E5E5E5"> out</font>

438
00:22:43,370 --> 00:22:49,070
that<font color="#E5E5E5"> would be awesome yeah and then it's</font>

439
00:22:47,390 --> 00:22:51,440
like<font color="#E5E5E5"> fixing rendering issues and</font>

440
00:22:49,070 --> 00:22:54,320
applications and<font color="#CCCCCC"> upstream</font><font color="#E5E5E5"> meaning there</font>

441
00:22:51,440 --> 00:22:56,600
<font color="#E5E5E5">so yeah and after</font><font color="#CCCCCC"> that it's like</font>

442
00:22:54,320 --> 00:22:59,210
<font color="#CCCCCC">correcting</font><font color="#E5E5E5"> away on the your OpenGL</font>

443
00:22:56,600 --> 00:23:01,490
versions currently I'm kind of the

444
00:22:59,210 --> 00:23:03,590
bottleneck<font color="#CCCCCC"> here and I'm really really</font>

445
00:23:01,490 --> 00:23:07,430
<font color="#CCCCCC">sorry about that</font><font color="#E5E5E5"> for anyone who wants to</font>

446
00:23:03,590 --> 00:23:09,320
contribute<font color="#E5E5E5"> and I would be very willing</font>

447
00:23:07,430 --> 00:23:11,800
<font color="#E5E5E5">to have a discussion</font><font color="#CCCCCC"> on fixing</font><font color="#E5E5E5"> that</font>

448
00:23:09,320 --> 00:23:11,800
<font color="#E5E5E5">somehow</font>

449
00:23:11,870 --> 00:23:21,340
so yeah<font color="#E5E5E5"> any questions two minutes so one</font>

450
00:23:18,500 --> 00:23:21,340
or<font color="#E5E5E5"> two questions</font><font color="#CCCCCC"> I guess</font>

451
00:23:54,530 --> 00:24:01,200
so I think I think if I were to<font color="#E5E5E5"> to have</font>

452
00:23:59,549 --> 00:24:02,370
a crack at this myself<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> I would</font>

453
00:24:01,200 --> 00:24:04,890
<font color="#E5E5E5">have gone the other way around and</font>

454
00:24:02,370 --> 00:24:07,559
gotten<font color="#E5E5E5"> mess</font><font color="#CCCCCC"> out there on that cause I</font>

455
00:24:04,890 --> 00:24:09,000
think there<font color="#CCCCCC"> are like</font><font color="#E5E5E5"> builds like to see</font>

456
00:24:07,559 --> 00:24:13,678
I should check some<font color="#CCCCCC"> stuff in my so for</font>

457
00:24:09,000 --> 00:24:15,270
now<font color="#CCCCCC"> cause I think</font><font color="#E5E5E5"> it works</font><font color="#CCCCCC"> and something</font>

458
00:24:13,679 --> 00:24:17,610
very<font color="#E5E5E5"> similar to think I think</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> be</font>

459
00:24:15,270 --> 00:24:23,850
needed but<font color="#CCCCCC"> that outfits metal instead</font>

460
00:24:17,610 --> 00:24:26,158
there are<font color="#E5E5E5"> some people have yes</font><font color="#CCCCCC"> Moulton</font>

461
00:24:23,850 --> 00:24:28,678
VK is<font color="#E5E5E5"> interesting but I think layering</font>

462
00:24:26,159 --> 00:24:33,360
<font color="#E5E5E5">emulation on top of emulation is</font><font color="#CCCCCC"> so way</font>

463
00:24:28,679 --> 00:24:36,659
<font color="#E5E5E5">to insanity</font><font color="#CCCCCC"> I like if someone will also</font>

464
00:24:33,360 --> 00:24:39,240
try it out<font color="#CCCCCC"> they're like they're free to</font>

465
00:24:36,659 --> 00:24:40,740
and you know if they report some bugs

466
00:24:39,240 --> 00:24:43,590
that's that's great<font color="#CCCCCC"> there I will you</font>

467
00:24:40,740 --> 00:24:47,150
<font color="#E5E5E5">know have a look at that but I don't</font>

468
00:24:43,590 --> 00:24:47,149
<font color="#E5E5E5">have a Mac I'm</font><font color="#CCCCCC"> not gonna give this a try</font>

469
00:24:50,570 --> 00:24:54,320
<font color="#E5E5E5">alright and more questions</font>

470
00:25:04,500 --> 00:25:07,710
<font color="#CCCCCC">we're hiring</font>

