1
00:00:04,630 --> 00:00:11,660
so my name is<font color="#CCCCCC"> Ray Kinsler and I work on</font>

2
00:00:08,690 --> 00:00:15,768
Fido<font color="#CCCCCC"> see sit and I'm a software engineer</font>

3
00:00:11,660 --> 00:00:24,019
working for Intel I'm also a Fido<font color="#CCCCCC"> TSC</font>

4
00:00:15,769 --> 00:00:25,910
member<font color="#E5E5E5"> qualified is</font><font color="#CCCCCC"> you memories</font><font color="#E5E5E5"> like</font>

5
00:00:24,019 --> 00:00:29,570
what I started<font color="#CCCCCC"> out opens doors</font><font color="#E5E5E5"> you just</font>

6
00:00:25,910 --> 00:00:32,058
<font color="#CCCCCC">flipped stuff onto sourceforge and that</font>

7
00:00:29,570 --> 00:00:35,239
was that was opens<font color="#CCCCCC"> dis as before github</font>

8
00:00:32,058 --> 00:00:36,919
and then we have oversight committees we

9
00:00:35,239 --> 00:00:38,360
have marketing committees that we have

10
00:00:36,920 --> 00:00:39,680
technical steering<font color="#E5E5E5"> committees and</font>

11
00:00:38,360 --> 00:00:43,430
there's a<font color="#E5E5E5"> technical steering committee</font>

12
00:00:39,680 --> 00:00:45,019
for<font color="#CCCCCC"> five-o let's call the the Fido</font><font color="#E5E5E5"> TSA</font>

13
00:00:43,430 --> 00:00:47,089
and I'm one of<font color="#CCCCCC"> the representatives on</font>

14
00:00:45,019 --> 00:00:50,739
the phyto CSC and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have input</font><font color="#CCCCCC"> into the</font>

15
00:00:47,089 --> 00:00:54,890
technical direction of Fido<font color="#CCCCCC"> and</font><font color="#E5E5E5"> Fido is</font>

16
00:00:50,739 --> 00:00:56,659
<font color="#CCCCCC">an collection</font><font color="#E5E5E5"> of projects if</font><font color="#CCCCCC"> I there was</font>

17
00:00:54,890 --> 00:00:59,780
<font color="#E5E5E5">really three key things</font>

18
00:00:56,659 --> 00:01:04,129
<font color="#E5E5E5">Fido is VPP which you heard about</font>

19
00:00:59,780 --> 00:01:07,400
<font color="#E5E5E5">earlier VPP is a is a</font><font color="#CCCCCC"> high-performance</font>

20
00:01:04,129 --> 00:01:10,490
Network stack<font color="#E5E5E5"> built with the same</font><font color="#CCCCCC"> kind</font>

21
00:01:07,400 --> 00:01:15,470
of optimizations as DP D K<font color="#CCCCCC"> so DP</font><font color="#E5E5E5"> DK is a</font>

22
00:01:10,490 --> 00:01:18,890
very efficient layer for IO<font color="#CCCCCC"> a Fido</font><font color="#E5E5E5"> is an</font>

23
00:01:15,470 --> 00:01:20,060
<font color="#E5E5E5">F item VPP is a series is a network</font>

24
00:01:18,890 --> 00:01:22,460
stack is a series of protocol

25
00:01:20,060 --> 00:01:25,220
implementations on top of DP D K<font color="#CCCCCC"> so</font>

26
00:01:22,460 --> 00:01:27,619
<font color="#E5E5E5">that's one part of item a second part of</font>

27
00:01:25,220 --> 00:01:30,500
Fido is<font color="#E5E5E5"> the integrations it gives you so</font>

28
00:01:27,620 --> 00:01:32,360
and you<font color="#CCCCCC"> talked you heard right to</font><font color="#E5E5E5"> Slav</font>

29
00:01:30,500 --> 00:01:33,710
<font color="#CCCCCC">talked about it earlier</font><font color="#E5E5E5"> and Giles talked</font>

30
00:01:32,360 --> 00:01:35,450
about it earlier<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> you also heard</font>

31
00:01:33,710 --> 00:01:38,210
Billy talk about the same thing which

32
00:01:35,450 --> 00:01:41,330
are all<font color="#E5E5E5"> of these integrations</font><font color="#CCCCCC"> that sit</font>

33
00:01:38,210 --> 00:01:42,679
on<font color="#CCCCCC"> top of DP D</font><font color="#E5E5E5"> K</font><font color="#CCCCCC"> so with DP</font><font color="#E5E5E5"> DK is sorry</font>

34
00:01:41,330 --> 00:01:44,300
<font color="#E5E5E5">on top of Fido</font>

35
00:01:42,680 --> 00:01:45,890
so with Fido we don't just flip a

36
00:01:44,300 --> 00:01:47,240
network stack out the door<font color="#E5E5E5"> and say you</font>

37
00:01:45,890 --> 00:01:48,830
guys<font color="#E5E5E5"> just kind of take care</font><font color="#CCCCCC"> of</font>

38
00:01:47,240 --> 00:01:51,110
yourselves<font color="#E5E5E5"> we take care</font><font color="#CCCCCC"> of the</font>

39
00:01:48,830 --> 00:01:52,429
integrations<font color="#E5E5E5"> into kubernetes</font><font color="#CCCCCC"> and we have</font>

40
00:01:51,110 --> 00:01:53,990
so many integrations<font color="#CCCCCC"> you have guys</font>

41
00:01:52,430 --> 00:01:55,550
arguing<font color="#E5E5E5"> with each other about which is</font>

42
00:01:53,990 --> 00:01:56,600
the best way to integrate Fido with

43
00:01:55,550 --> 00:01:58,399
kubernetes<font color="#CCCCCC"> Anders</font>

44
00:01:56,600 --> 00:01:59,360
I think Billy's presentation<font color="#E5E5E5"> called out</font>

45
00:01:58,400 --> 00:02:00,670
very well there's three different<font color="#E5E5E5"> ways</font>

46
00:01:59,360 --> 00:02:03,560
<font color="#CCCCCC">to achieve</font><font color="#E5E5E5"> it right</font>

47
00:02:00,670 --> 00:02:05,299
there's integrations with OpenStack I

48
00:02:03,560 --> 00:02:07,909
think Giles talked about integrations

49
00:02:05,299 --> 00:02:09,250
where it opens with strongswan was<font color="#E5E5E5"> a</font>

50
00:02:07,909 --> 00:02:12,590
<font color="#CCCCCC">Giles strongswan</font>

51
00:02:09,250 --> 00:02:14,030
<font color="#E5E5E5">and we have net company hang support so</font>

52
00:02:12,590 --> 00:02:15,670
we have all these integrations on top so

53
00:02:14,030 --> 00:02:17,410
<font color="#E5E5E5">that's the second part of Fido</font><font color="#CCCCCC"> is</font>

54
00:02:15,670 --> 00:02:19,299
<font color="#E5E5E5">integrations</font>

55
00:02:17,410 --> 00:02:21,180
and the third piece<font color="#CCCCCC"> of</font><font color="#E5E5E5"> photo is what I'm</font>

56
00:02:19,300 --> 00:02:22,390
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> today which is</font>

57
00:02:21,180 --> 00:02:27,430
<font color="#E5E5E5">benchmarking</font>

58
00:02:22,390 --> 00:02:30,399
now usually<font color="#CCCCCC"> malaika software</font>

59
00:02:27,430 --> 00:02:34,090
how many software engineers in<font color="#E5E5E5"> the room</font>

60
00:02:30,400 --> 00:02:39,280
<font color="#CCCCCC">a</font><font color="#E5E5E5"> software engineers how many test</font>

61
00:02:34,090 --> 00:02:42,160
engineers in the room one<font color="#E5E5E5"> two three four</font>

62
00:02:39,280 --> 00:02:44,200
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> so that's probably</font><font color="#E5E5E5"> like a probably</font>

63
00:02:42,160 --> 00:02:46,990
like a<font color="#CCCCCC"> twenty-two is probably like it's</font>

64
00:02:44,200 --> 00:02:52,179
<font color="#E5E5E5">probably like a ten to one</font>

65
00:02:46,990 --> 00:02:56,800
so in<font color="#CCCCCC"> c s--</font><font color="#E5E5E5"> it is hugely important and</font>

66
00:02:52,180 --> 00:03:00,340
<font color="#CCCCCC">final c sit for Fido is is is how we</font>

67
00:02:56,800 --> 00:03:03,280
maintain<font color="#E5E5E5"> and we ensure that the Fido</font>

68
00:03:00,340 --> 00:03:08,350
<font color="#CCCCCC">data</font><font color="#E5E5E5"> planes performance does not degrade</font>

69
00:03:03,280 --> 00:03:10,420
over time<font color="#E5E5E5"> so what</font><font color="#CCCCCC"> and and and</font><font color="#E5E5E5"> I'm not</font>

70
00:03:08,350 --> 00:03:13,450
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know that it's no commentary on any</font>

71
00:03:10,420 --> 00:03:16,030
other<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> project but the danger</font>

72
00:03:13,450 --> 00:03:17,920
when<font color="#CCCCCC"> you move into open</font><font color="#E5E5E5"> source is that</font>

73
00:03:16,030 --> 00:03:20,200
when you get when patches come in the

74
00:03:17,920 --> 00:03:23,739
door you need<font color="#CCCCCC"> a very very very tight and</font>

75
00:03:20,200 --> 00:03:25,480
<font color="#CCCCCC">very elaborate CI and CD infrastructure</font>

76
00:03:23,740 --> 00:03:27,850
to make sure that as you<font color="#E5E5E5"> take new</font>

77
00:03:25,480 --> 00:03:30,100
patches<font color="#E5E5E5"> that you're not trading off</font>

78
00:03:27,850 --> 00:03:32,440
performance patch by patch by patch by

79
00:03:30,100 --> 00:03:34,329
patch<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> the important role C</font>

80
00:03:32,440 --> 00:03:35,980
<font color="#CCCCCC">sit place and Fido and it's a</font>

81
00:03:34,330 --> 00:03:41,500
significant role and<font color="#E5E5E5"> that's what I'm</font>

82
00:03:35,980 --> 00:03:44,070
going<font color="#CCCCCC"> to talk through today</font><font color="#E5E5E5"> so what were</font>

83
00:03:41,500 --> 00:03:46,900
the tree keeping<font color="#CCCCCC"> tree parts of Fido</font>

84
00:03:44,070 --> 00:03:48,190
<font color="#E5E5E5">trick question question</font><font color="#CCCCCC"> I know I'm</font>

85
00:03:46,900 --> 00:03:49,330
picking<font color="#E5E5E5"> on you it's</font><font color="#CCCCCC"> like four o'clock at</font>

86
00:03:48,190 --> 00:03:50,740
everybody's like we've been to the bar

87
00:03:49,330 --> 00:03:52,840
already<font color="#CCCCCC"> regular you're asking this</font>

88
00:03:50,740 --> 00:03:55,390
questions now what do you<font color="#E5E5E5"> do</font><font color="#CCCCCC"> I said</font>

89
00:03:52,840 --> 00:03:56,890
<font color="#CCCCCC">there was</font><font color="#E5E5E5"> three parts of Fido one was</font>

90
00:03:55,390 --> 00:03:58,989
the day<font color="#E5E5E5"> to play and second piece was</font>

91
00:03:56,890 --> 00:04:00,279
<font color="#CCCCCC">though</font><font color="#E5E5E5"> up integrations third piece was</font>

92
00:03:58,990 --> 00:04:02,290
the benchmarking this is the

93
00:04:00,280 --> 00:04:05,140
benchmarking<font color="#E5E5E5"> so today I'm going to talk</font>

94
00:04:02,290 --> 00:04:06,730
about<font color="#E5E5E5"> why code is not all no longer</font>

95
00:04:05,140 --> 00:04:08,649
enough this<font color="#E5E5E5"> is essentially why</font>

96
00:04:06,730 --> 00:04:10,149
benchmarking is important<font color="#E5E5E5"> I'm going to</font>

97
00:04:08,650 --> 00:04:12,520
talk a little<font color="#E5E5E5"> bit about</font><font color="#CCCCCC"> cease</font><font color="#E5E5E5"> it what it</font>

98
00:04:10,150 --> 00:04:14,170
<font color="#E5E5E5">is and then we're gonna talk to</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> into</font>

99
00:04:12,520 --> 00:04:16,000
three interesting problem statements

100
00:04:14,170 --> 00:04:18,940
which ceases or<font color="#E5E5E5"> three new problems we're</font>

101
00:04:16,000 --> 00:04:20,890
trying to solve what<font color="#E5E5E5"> cease it and then</font>

102
00:04:18,940 --> 00:04:24,219
<font color="#E5E5E5">I'm going</font><font color="#CCCCCC"> to summary have a bit</font><font color="#E5E5E5"> of a</font>

103
00:04:20,890 --> 00:04:26,140
<font color="#CCCCCC">summary so today you heard about</font><font color="#E5E5E5"> a</font>

104
00:04:24,220 --> 00:04:29,620
<font color="#CCCCCC">number of different open source projects</font>

105
00:04:26,140 --> 00:04:31,270
<font color="#E5E5E5">you heard about snap from Luke you heard</font>

106
00:04:29,620 --> 00:04:34,690
about open V switch<font color="#E5E5E5"> for</font>

107
00:04:31,270 --> 00:04:37,060
<font color="#CCCCCC">Kirra</font><font color="#E5E5E5"> and Bruce well</font><font color="#CCCCCC"> Elsa you</font><font color="#E5E5E5"> heard</font><font color="#CCCCCC"> of</font>

108
00:04:34,690 --> 00:04:39,430
<font color="#CCCCCC">Fido from Giles Andrus lab and Billy</font>

109
00:04:37,060 --> 00:04:43,090
<font color="#CCCCCC">McFaul</font><font color="#E5E5E5"> and you heard about</font><font color="#CCCCCC"> psyllium</font><font color="#E5E5E5"> and</font>

110
00:04:39,430 --> 00:04:46,419
<font color="#E5E5E5">the who is presenting on psyllium yes</font>

111
00:04:43,090 --> 00:04:48,460
<font color="#CCCCCC">gentleman there and then we have a and</font>

112
00:04:46,419 --> 00:04:53,068
then<font color="#E5E5E5"> there's a few others</font><font color="#CCCCCC"> that you may</font>

113
00:04:48,460 --> 00:04:56,138
not have<font color="#E5E5E5"> heard of so there's a galaxy of</font>

114
00:04:53,069 --> 00:04:57,639
<font color="#E5E5E5">open-source projects</font><font color="#CCCCCC"> and if you also</font>

115
00:04:56,139 --> 00:04:59,410
learn more<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> galaxy</font><font color="#CCCCCC"> of</font>

116
00:04:57,639 --> 00:05:01,750
<font color="#CCCCCC">open-source projects</font><font color="#E5E5E5"> I'm giving a talk</font>

117
00:04:59,410 --> 00:05:03,880
at<font color="#CCCCCC"> 22:7 and if you're not</font><font color="#E5E5E5"> already</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

118
00:05:01,750 --> 00:05:06,509
pub<font color="#E5E5E5"> you can come to the lightning talk</font>

119
00:05:03,880 --> 00:05:10,719
room to learn about the open<font color="#CCCCCC"> then the</font>

120
00:05:06,509 --> 00:05:12,280
the<font color="#E5E5E5"> user space networking ecosystem I'll</font>

121
00:05:10,720 --> 00:05:14,440
probably<font color="#E5E5E5"> just be presenting to</font><font color="#CCCCCC"> myself</font>

122
00:05:12,280 --> 00:05:16,270
but there's a galaxy<font color="#E5E5E5"> of</font><font color="#CCCCCC"> open-source</font>

123
00:05:14,440 --> 00:05:19,949
<font color="#E5E5E5">projects in userspace</font>

124
00:05:16,270 --> 00:05:24,060
today there's never been<font color="#E5E5E5"> more choice</font>

125
00:05:19,949 --> 00:05:26,770
<font color="#E5E5E5">well how will it perform for me you know</font>

126
00:05:24,060 --> 00:05:29,620
<font color="#E5E5E5">you know there's a whole</font><font color="#CCCCCC"> bunch of</font>

127
00:05:26,770 --> 00:05:32,830
typically vendor reports from<font color="#E5E5E5"> Charles</font>

128
00:05:29,620 --> 00:05:35,080
<font color="#E5E5E5">Intel Mellanox Purdue system there's a</font>

129
00:05:32,830 --> 00:05:37,630
lot<font color="#E5E5E5"> arm producers as well</font><font color="#CCCCCC"> the series of</font>

130
00:05:35,080 --> 00:05:39,789
academic papers<font color="#CCCCCC"> as blog posters</font><font color="#E5E5E5"> youtubes</font>

131
00:05:37,630 --> 00:05:40,509
<font color="#E5E5E5">but you always come</font><font color="#CCCCCC"> back to</font><font color="#E5E5E5"> the same set</font>

132
00:05:39,789 --> 00:05:43,000
of<font color="#CCCCCC"> questions</font>

133
00:05:40,509 --> 00:05:46,030
how are the benchmarking are the

134
00:05:43,000 --> 00:05:48,430
benchmarks repeatable<font color="#CCCCCC"> our tests quite</font>

135
00:05:46,030 --> 00:05:51,130
applicable to my use case<font color="#E5E5E5"> and if I had a</font>

136
00:05:48,430 --> 00:05:54,639
dollar or a euro for every time somebody

137
00:05:51,130 --> 00:05:56,800
<font color="#CCCCCC">said is</font><font color="#E5E5E5"> it a real world use case</font><font color="#CCCCCC"> I'd be</font>

138
00:05:54,639 --> 00:05:59,139
a<font color="#E5E5E5"> very rich man</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know and the</font>

139
00:05:56,800 --> 00:06:01,870
difference<font color="#CCCCCC"> between synthetic benchmarks</font>

140
00:05:59,139 --> 00:06:05,169
versus real world<font color="#E5E5E5"> is IC Xavier smiling</font>

141
00:06:01,870 --> 00:06:07,000
<font color="#CCCCCC">there our test platform and</font>

142
00:06:05,169 --> 00:06:09,159
<font color="#CCCCCC">vendor-neutral</font><font color="#E5E5E5"> and that's kind of an</font>

143
00:06:07,000 --> 00:06:13,389
important one<font color="#CCCCCC"> to what extent are is</font>

144
00:06:09,159 --> 00:06:16,270
vendors you know skewing the<font color="#CCCCCC"> skewing the</font>

145
00:06:13,389 --> 00:06:19,030
the game to their own<font color="#E5E5E5"> interest so these</font>

146
00:06:16,270 --> 00:06:20,729
are all important questions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Arenal</font>

147
00:06:19,030 --> 00:06:23,830
come back to how do you evaluate

148
00:06:20,729 --> 00:06:28,500
<font color="#E5E5E5">software data planes how do you test and</font>

149
00:06:23,830 --> 00:06:31,659
<font color="#E5E5E5">how do you</font><font color="#CCCCCC"> ensure</font><font color="#E5E5E5"> neutrality well</font>

150
00:06:28,500 --> 00:06:33,130
without data and whatever the consistent

151
00:06:31,659 --> 00:06:34,690
benchmark<font color="#E5E5E5"> you know without data you're</font>

152
00:06:33,130 --> 00:06:37,419
just another pen a person with<font color="#E5E5E5"> an</font>

153
00:06:34,690 --> 00:06:40,240
opinion<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you know this</font><font color="#E5E5E5"> is from Edward</font>

154
00:06:37,419 --> 00:06:42,130
<font color="#E5E5E5">Deming and myself</font><font color="#CCCCCC"> and magic</font><font color="#E5E5E5"> shows this</font>

155
00:06:40,240 --> 00:06:44,589
<font color="#E5E5E5">because I think a kind of illustrates</font>

156
00:06:42,130 --> 00:06:45,100
very well<font color="#E5E5E5"> our sentiments towards CSUN</font>

157
00:06:44,589 --> 00:06:46,780
and

158
00:06:45,100 --> 00:06:48,760
that's not a<font color="#E5E5E5"> criticism of anybody else</font>

159
00:06:46,780 --> 00:06:51,190
but it's<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is more of a statement of</font>

160
00:06:48,760 --> 00:06:53,740
<font color="#E5E5E5">our intention the intention of phyto</font>

161
00:06:51,190 --> 00:06:57,219
cease it is to bring volumes of data

162
00:06:53,740 --> 00:06:58,530
<font color="#E5E5E5">that reflect the kind of</font><font color="#CCCCCC"> performance</font>

163
00:06:57,220 --> 00:07:02,440
you're gonna get<font color="#E5E5E5"> from the phyto</font>

164
00:06:58,530 --> 00:07:04,659
deployment<font color="#E5E5E5"> in real-world use cases so to</font>

165
00:07:02,440 --> 00:07:06,160
bring significant to bring that<font color="#E5E5E5"> kind of</font>

166
00:07:04,660 --> 00:07:08,560
<font color="#E5E5E5">clarity so that</font><font color="#CCCCCC"> when you're asking the</font>

167
00:07:06,160 --> 00:07:10,150
question<font color="#CCCCCC"> about how will it work for me</font>

168
00:07:08,560 --> 00:07:14,440
that<font color="#CCCCCC"> you'll have the</font><font color="#E5E5E5"> kind of data that</font>

169
00:07:10,150 --> 00:07:17,729
<font color="#E5E5E5">you</font><font color="#CCCCCC"> need to answer those</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> when</font>

170
00:07:14,440 --> 00:07:21,190
we doing for time<font color="#CCCCCC"> alone doing okay</font><font color="#E5E5E5"> so</font>

171
00:07:17,730 --> 00:07:23,590
<font color="#CCCCCC">phyto cease it is a sub-project</font><font color="#E5E5E5"> inside</font>

172
00:07:21,190 --> 00:07:26,950
<font color="#E5E5E5">Fido</font><font color="#CCCCCC"> so if you go to the</font><font color="#E5E5E5"> fibre website</font>

173
00:07:23,590 --> 00:07:28,810
and you you navigate through there is a

174
00:07:26,950 --> 00:07:31,210
whole<font color="#E5E5E5"> bunch of sub projects and there's</font>

175
00:07:28,810 --> 00:07:33,460
one<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> called a seasick</font><font color="#CCCCCC"> CPSC said</font>

176
00:07:31,210 --> 00:07:36,219
<font color="#E5E5E5">Cpl</font><font color="#CCCCCC"> since it stands for</font><font color="#E5E5E5"> a continuance</font>

177
00:07:33,460 --> 00:07:40,120
system<font color="#E5E5E5"> test system and integration</font>

178
00:07:36,220 --> 00:07:44,470
testing<font color="#CCCCCC"> I think that's right now that's</font>

179
00:07:40,120 --> 00:07:47,160
my first fail of<font color="#E5E5E5"> the day so what is Fido</font>

180
00:07:44,470 --> 00:07:50,800
<font color="#E5E5E5">sees them</font><font color="#CCCCCC"> Fido</font><font color="#E5E5E5"> ceecee it uses standard</font>

181
00:07:47,160 --> 00:07:53,260
<font color="#E5E5E5">industry benchmarks and tools so we</font>

182
00:07:50,800 --> 00:07:55,810
everybody's heard of RFC<font color="#CCCCCC"> two five four</font>

183
00:07:53,260 --> 00:08:00,030
four I think<font color="#CCCCCC"> that or</font><font color="#E5E5E5"> C 254 four will be</font>

184
00:07:55,810 --> 00:08:03,430
written on<font color="#CCCCCC"> my epitaph when I die</font><font color="#E5E5E5"> okay</font>

185
00:08:00,030 --> 00:08:07,030
<font color="#E5E5E5">and the Metro Ethernet</font><font color="#CCCCCC"> forum standards</font>

186
00:08:03,430 --> 00:08:10,210
we test ranges of packets we test<font color="#E5E5E5"> 64</font>

187
00:08:07,030 --> 00:08:14,020
<font color="#CCCCCC">byte packets we test</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> all the packet</font>

188
00:08:10,210 --> 00:08:18,000
sizes up<font color="#CCCCCC"> to 50 and 18 we test I mix we</font>

189
00:08:14,020 --> 00:08:20,500
test a jumbo frames so we test a large

190
00:08:18,000 --> 00:08:21,790
<font color="#CCCCCC">not just one or two different sizes</font><font color="#E5E5E5"> we</font>

191
00:08:20,500 --> 00:08:24,100
test all the<font color="#CCCCCC"> different sizes you might</font>

192
00:08:21,790 --> 00:08:28,600
possibly use including<font color="#CCCCCC"> jumper frames we</font>

193
00:08:24,100 --> 00:08:31,840
use only<font color="#E5E5E5"> open source tools we use</font><font color="#CCCCCC"> only</font>

194
00:08:28,600 --> 00:08:33,340
open source tools<font color="#E5E5E5"> our traffic generators</font>

195
00:08:31,840 --> 00:08:35,559
t-rex which just happens to<font color="#E5E5E5"> be another</font>

196
00:08:33,340 --> 00:08:37,570
Fido project we used<font color="#E5E5E5"> everything's</font>

197
00:08:35,559 --> 00:08:40,390
orchestrated and run by the test robot

198
00:08:37,570 --> 00:08:43,240
the robot<font color="#E5E5E5"> test framework and then we use</font>

199
00:08:40,390 --> 00:08:45,069
Jenkins as the CI so Jenkins takes care

200
00:08:43,240 --> 00:08:48,370
of running a nightly builds and running

201
00:08:45,070 --> 00:08:52,030
<font color="#E5E5E5">the tests and those kind of things we</font>

202
00:08:48,370 --> 00:08:54,730
test multi-core scaling so you know we

203
00:08:52,030 --> 00:08:57,040
test with<font color="#E5E5E5"> a single</font><font color="#CCCCCC"> core</font><font color="#E5E5E5"> we test with</font><font color="#CCCCCC"> two</font>

204
00:08:54,730 --> 00:08:58,840
course and we test with four cores<font color="#CCCCCC"> and</font>

205
00:08:57,040 --> 00:09:01,660
sometimes we test with even

206
00:08:58,840 --> 00:09:03,730
more and<font color="#E5E5E5"> I'll talk with that later we</font>

207
00:09:01,660 --> 00:09:06,459
test there's a typo here<font color="#CCCCCC"> we test nd or</font>

208
00:09:03,730 --> 00:09:08,830
<font color="#CCCCCC">it's just nan Drac right nan</font><font color="#E5E5E5"> drop right</font>

209
00:09:06,460 --> 00:09:10,690
and<font color="#E5E5E5"> sorry</font>

210
00:09:08,830 --> 00:09:13,060
when<font color="#CCCCCC"> Dendi</font><font color="#E5E5E5"> or is when you don't drop</font>

211
00:09:10,690 --> 00:09:14,980
packets<font color="#CCCCCC"> PDR which</font><font color="#E5E5E5"> is partial drop rate I</font>

212
00:09:13,060 --> 00:09:18,339
think<font color="#CCCCCC"> we we have a tolerance of</font><font color="#E5E5E5"> 0.5%</font>

213
00:09:14,980 --> 00:09:21,580
packet drop and we test em or or who

214
00:09:18,340 --> 00:09:22,990
knows what<font color="#CCCCCC"> mr or is maximum receive</font>

215
00:09:21,580 --> 00:09:25,240
<font color="#E5E5E5">right is where you throw the kitchen</font>

216
00:09:22,990 --> 00:09:29,530
<font color="#CCCCCC">sink</font><font color="#E5E5E5"> and you see how much actually gets</font>

217
00:09:25,240 --> 00:09:31,390
true we test the whole range of

218
00:09:29,530 --> 00:09:33,370
different network<font color="#CCCCCC"> from the whole range</font>

219
00:09:31,390 --> 00:09:35,319
of different network functions things

220
00:09:33,370 --> 00:09:39,550
<font color="#E5E5E5">you might be likely to do l to switching</font>

221
00:09:35,320 --> 00:09:41,410
ipv4<font color="#CCCCCC"> ipv6 routing ACL security groups /</font>

222
00:09:39,550 --> 00:09:43,920
relays and we have a slew of<font color="#E5E5E5"> unit</font>

223
00:09:41,410 --> 00:09:46,540
functional and<font color="#CCCCCC"> performance testing</font>

224
00:09:43,920 --> 00:09:49,150
<font color="#CCCCCC">everything is open and fully documented</font>

225
00:09:46,540 --> 00:09:50,860
test environment<font color="#CCCCCC"> I want to say that</font>

226
00:09:49,150 --> 00:09:52,780
again<font color="#CCCCCC"> open them fully document</font><font color="#E5E5E5"> test</font>

227
00:09:50,860 --> 00:09:54,490
environment that means that and we have

228
00:09:52,780 --> 00:09:56,500
lots of people<font color="#CCCCCC"> who do</font><font color="#E5E5E5"> this we have lots</font>

229
00:09:54,490 --> 00:09:58,210
of people<font color="#CCCCCC"> who are</font><font color="#E5E5E5"> involved in the</font>

230
00:09:56,500 --> 00:10:01,390
fighter community will actually go and

231
00:09:58,210 --> 00:10:02,950
clone everything and reproduce it

232
00:10:01,390 --> 00:10:05,350
internally<font color="#E5E5E5"> because it's all open source</font>

233
00:10:02,950 --> 00:10:07,420
<font color="#E5E5E5">all the test cases are open source all</font>

234
00:10:05,350 --> 00:10:09,130
the<font color="#CCCCCC"> tools are open source you don't need</font>

235
00:10:07,420 --> 00:10:11,770
any proprietary<font color="#CCCCCC"> tools so you can</font>

236
00:10:09,130 --> 00:10:14,890
<font color="#E5E5E5">reproduce the whole thing internally it</font>

237
00:10:11,770 --> 00:10:18,430
supports<font color="#E5E5E5"> Intel and ARM architecture arm</font>

238
00:10:14,890 --> 00:10:20,770
architectures so what do what<font color="#E5E5E5"> does</font><font color="#CCCCCC"> that</font>

239
00:10:18,430 --> 00:10:23,140
mean we<font color="#CCCCCC"> actually have an open lab that's</font>

240
00:10:20,770 --> 00:10:24,790
hosted by the<font color="#E5E5E5"> Linux Foundation that gets</font>

241
00:10:23,140 --> 00:10:27,010
<font color="#CCCCCC">Hardware contributions from people like</font>

242
00:10:24,790 --> 00:10:29,890
Intel for people like Mel Knox from the

243
00:10:27,010 --> 00:10:31,390
<font color="#E5E5E5">DRM ecosystem and we have a very sizable</font>

244
00:10:29,890 --> 00:10:33,550
lab that's run inside<font color="#E5E5E5"> the Linux</font>

245
00:10:31,390 --> 00:10:36,100
Foundation<font color="#E5E5E5"> that's free for anyone</font>

246
00:10:33,550 --> 00:10:38,920
involved in CC to use<font color="#E5E5E5"> where all this</font>

247
00:10:36,100 --> 00:10:40,660
stuff gets tested<font color="#CCCCCC"> and then that</font><font color="#E5E5E5"> allows</font>

248
00:10:38,920 --> 00:10:43,810
<font color="#CCCCCC">us to do lots of different permutations</font>

249
00:10:40,660 --> 00:10:45,280
<font color="#CCCCCC">of tests</font><font color="#E5E5E5"> we can do at the same test on</font>

250
00:10:43,810 --> 00:10:46,449
different<font color="#E5E5E5"> generations of Intel hardware</font>

251
00:10:45,280 --> 00:10:48,550
I'll talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that later</font>

252
00:10:46,450 --> 00:10:51,250
<font color="#E5E5E5">different same tests with different</font><font color="#CCCCCC"> NICs</font>

253
00:10:48,550 --> 00:10:53,050
<font color="#E5E5E5">same tests on different platforms same</font>

254
00:10:51,250 --> 00:10:54,940
<font color="#E5E5E5">tests with an arm platform same</font><font color="#CCCCCC"> tests</font>

255
00:10:53,050 --> 00:10:58,810
with an Intel platform<font color="#E5E5E5"> it's the same</font>

256
00:10:54,940 --> 00:11:00,120
<font color="#E5E5E5">test very rigorous the same tests run</font>

257
00:10:58,810 --> 00:11:03,069
<font color="#E5E5E5">through the same set of permutations</font>

258
00:11:00,120 --> 00:11:04,900
<font color="#CCCCCC">different packet sizes different numbers</font>

259
00:11:03,070 --> 00:11:07,750
of cores different platforms different

260
00:11:04,900 --> 00:11:10,840
<font color="#CCCCCC">NICs</font><font color="#E5E5E5"> to give you a very very</font><font color="#CCCCCC"> large</font>

261
00:11:07,750 --> 00:11:12,230
corpus of data about<font color="#E5E5E5"> how this thing for</font>

262
00:11:10,840 --> 00:11:15,680
in forever

263
00:11:12,230 --> 00:11:17,930
runs in<font color="#E5E5E5"> the real world it's</font>

264
00:11:15,680 --> 00:11:22,599
multi-platform multi-vendor so we have

265
00:11:17,930 --> 00:11:25,790
<font color="#CCCCCC">it</font><font color="#E5E5E5"> runs today on top of</font><font color="#CCCCCC"> sant</font><font color="#E5E5E5"> OS suzay</font>

266
00:11:22,600 --> 00:11:27,170
upon<font color="#CCCCCC"> - i think i'm not</font><font color="#E5E5E5"> sure</font><font color="#CCCCCC"> of a fedora</font>

267
00:11:25,790 --> 00:11:30,230
<font color="#CCCCCC">I think that might be going many way</font><font color="#E5E5E5"> and</font>

268
00:11:27,170 --> 00:11:31,790
then we also support cloud native<font color="#E5E5E5"> you've</font>

269
00:11:30,230 --> 00:11:33,920
heard extensively about<font color="#E5E5E5"> cloud they will</font>

270
00:11:31,790 --> 00:11:36,079
<font color="#CCCCCC">opens and also an clothe a there's the</font>

271
00:11:33,920 --> 00:11:39,040
<font color="#CCCCCC">hotness at the moment I know</font><font color="#E5E5E5"> but it also</font>

272
00:11:36,080 --> 00:11:41,810
<font color="#E5E5E5">supports OpenStack environments as</font><font color="#CCCCCC"> well</font>

273
00:11:39,040 --> 00:11:45,620
and we<font color="#E5E5E5"> also have a support for some</font>

274
00:11:41,810 --> 00:11:47,930
accelerators like crypto accelerators so

275
00:11:45,620 --> 00:11:49,850
we have an<font color="#E5E5E5"> open lab where everything</font>

276
00:11:47,930 --> 00:11:51,650
gets<font color="#E5E5E5"> tested in the open where patches</font>

277
00:11:49,850 --> 00:11:54,170
get tested where nightly<font color="#E5E5E5"> bills get</font>

278
00:11:51,650 --> 00:11:55,760
tested where release reports<font color="#E5E5E5"> get tested</font>

279
00:11:54,170 --> 00:11:58,910
all in an open lab in this<font color="#E5E5E5"> Linux</font>

280
00:11:55,760 --> 00:12:01,310
<font color="#CCCCCC">Foundation</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> don't use only</font><font color="#E5E5E5"> open</font>

281
00:11:58,910 --> 00:12:02,810
source tools an open source<font color="#CCCCCC"> test so if</font>

282
00:12:01,310 --> 00:12:05,089
you don't<font color="#CCCCCC"> believe the numbers that</font><font color="#E5E5E5"> are</font>

283
00:12:02,810 --> 00:12:06,560
produced by<font color="#CCCCCC"> the open lab</font><font color="#E5E5E5"> they can cope</font>

284
00:12:05,090 --> 00:12:08,090
reproduce the whole damn thing yourself

285
00:12:06,560 --> 00:12:13,640
<font color="#CCCCCC">and satisfy yourself that</font><font color="#E5E5E5"> it's</font>

286
00:12:08,090 --> 00:12:15,950
completely authentic and that's the idea

287
00:12:13,640 --> 00:12:17,780
is<font color="#CCCCCC"> that we want to drive good practice</font>

288
00:12:15,950 --> 00:12:19,910
<font color="#CCCCCC">and engineering disciplines that defied</font>

289
00:12:17,780 --> 00:12:23,060
<font color="#CCCCCC">our dev community</font><font color="#E5E5E5"> so if you submit</font><font color="#CCCCCC"> a</font>

290
00:12:19,910 --> 00:12:24,589
patch to Fido<font color="#CCCCCC"> and it causes a</font>

291
00:12:23,060 --> 00:12:26,300
performance degradation and<font color="#CCCCCC"> we'll come</font>

292
00:12:24,590 --> 00:12:28,250
on we'll show the adult later causes the

293
00:12:26,300 --> 00:12:30,530
performance degradation and the<font color="#E5E5E5"> Larrin</font>

294
00:12:28,250 --> 00:12:33,020
bell goes<font color="#CCCCCC"> off somewhere</font><font color="#E5E5E5"> and somebody</font>

295
00:12:30,530 --> 00:12:35,689
<font color="#E5E5E5">sees</font><font color="#CCCCCC"> that and we can take action so the</font>

296
00:12:33,020 --> 00:12:38,540
idea is that by having<font color="#CCCCCC"> this elaborate</font><font color="#E5E5E5"> CI</font>

297
00:12:35,690 --> 00:12:40,760
<font color="#E5E5E5">CD environment that we catch those kind</font>

298
00:12:38,540 --> 00:12:42,920
of regressions early on I'll talk<font color="#CCCCCC"> more</font>

299
00:12:40,760 --> 00:12:46,520
<font color="#CCCCCC">about that more in</font><font color="#E5E5E5"> depth later that we</font>

300
00:12:42,920 --> 00:12:48,589
also you know<font color="#E5E5E5"> when so much a Fido</font><font color="#CCCCCC"> and so</font>

301
00:12:46,520 --> 00:12:51,260
much about user space networking is

302
00:12:48,590 --> 00:12:52,820
<font color="#E5E5E5">about performance</font><font color="#CCCCCC"> or you</font><font color="#E5E5E5"> know achieving</font>

303
00:12:51,260 --> 00:12:53,900
the best possible<font color="#CCCCCC"> performance that you</font>

304
00:12:52,820 --> 00:12:57,110
can through software

305
00:12:53,900 --> 00:12:59,329
well again<font color="#CCCCCC"> Faial</font><font color="#E5E5E5"> fight OCC provides you</font>

306
00:12:57,110 --> 00:13:01,910
the kind of<font color="#E5E5E5"> tool chains that you need to</font>

307
00:12:59,330 --> 00:13:03,560
measure the<font color="#CCCCCC"> performance</font><font color="#E5E5E5"> and then it also</font>

308
00:13:01,910 --> 00:13:06,110
can prevent things<font color="#CCCCCC"> like performance</font>

309
00:13:03,560 --> 00:13:08,589
<font color="#E5E5E5">regressions</font><font color="#CCCCCC"> so it's all fully automated</font>

310
00:13:06,110 --> 00:13:10,850
as integrated into<font color="#E5E5E5"> G</font><font color="#CCCCCC"> it's in terment</font>

311
00:13:08,590 --> 00:13:13,160
integrated into<font color="#CCCCCC"> Jarett so that when you</font>

312
00:13:10,850 --> 00:13:15,680
submit<font color="#CCCCCC"> a patch</font><font color="#E5E5E5"> at all tests get kicked</font>

313
00:13:13,160 --> 00:13:18,050
off where we runs functional<font color="#CCCCCC"> tests</font>

314
00:13:15,680 --> 00:13:20,329
performance tests we have use case

315
00:13:18,050 --> 00:13:21,890
driven<font color="#CCCCCC"> test definition so if you want</font><font color="#E5E5E5"> to</font>

316
00:13:20,330 --> 00:13:23,630
do things like testings like the

317
00:13:21,890 --> 00:13:25,939
excellent termination those<font color="#E5E5E5"> kind of</font>

318
00:13:23,630 --> 00:13:28,220
<font color="#E5E5E5">things we have test cases for</font><font color="#CCCCCC"> that</font>

319
00:13:25,940 --> 00:13:29,210
and<font color="#CCCCCC"> it's all get</font><font color="#E5E5E5"> executed in the open</font>

320
00:13:28,220 --> 00:13:30,680
apartment I've said all this an

321
00:13:29,210 --> 00:13:34,790
integrated<font color="#E5E5E5"> see I have said all this</font>

322
00:13:30,680 --> 00:13:40,189
that's fine so what does this<font color="#E5E5E5"> look like</font>

323
00:13:34,790 --> 00:13:43,310
in practice<font color="#CCCCCC"> now clearly you know I did</font><font color="#E5E5E5"> a</font>

324
00:13:40,190 --> 00:13:46,940
<font color="#E5E5E5">count last week to see how many test</font>

325
00:13:43,310 --> 00:13:50,150
cases<font color="#CCCCCC"> in total I could I could find and</font>

326
00:13:46,940 --> 00:13:52,040
I counted<font color="#CCCCCC"> 998 test cases that</font><font color="#E5E5E5"> are</font>

327
00:13:50,150 --> 00:13:54,140
currently<font color="#E5E5E5"> these are these</font><font color="#CCCCCC"> are</font>

328
00:13:52,040 --> 00:13:56,810
performance benchmarks that are

329
00:13:54,140 --> 00:13:59,390
<font color="#E5E5E5">currently being run in</font><font color="#CCCCCC"> phyto sees it</font><font color="#E5E5E5"> on</font>

330
00:13:56,810 --> 00:14:01,280
<font color="#CCCCCC">a</font><font color="#E5E5E5"> regular basis now that's if you go</font>

331
00:13:59,390 --> 00:14:04,340
through every permutation<font color="#CCCCCC"> the packet</font>

332
00:14:01,280 --> 00:14:06,439
size across every platform across every

333
00:14:04,340 --> 00:14:10,730
<font color="#CCCCCC">naica</font><font color="#E5E5E5"> course every microprocessor</font>

334
00:14:06,440 --> 00:14:12,470
generation across every use case<font color="#E5E5E5"> and you</font>

335
00:14:10,730 --> 00:14:15,320
can<font color="#E5E5E5"> see here that</font><font color="#CCCCCC"> you know we actually</font>

336
00:14:12,470 --> 00:14:19,250
<font color="#E5E5E5">break it out is 144 layer</font><font color="#CCCCCC"> 2 tests for</font>

337
00:14:15,320 --> 00:14:21,380
216 layer<font color="#E5E5E5"> 3 tests 300 you know very very</font>

338
00:14:19,250 --> 00:14:23,300
<font color="#E5E5E5">significant number</font><font color="#CCCCCC"> of test cases</font><font color="#E5E5E5"> in each</font>

339
00:14:21,380 --> 00:14:24,680
area<font color="#E5E5E5"> so when you go</font><font color="#CCCCCC"> through all the</font>

340
00:14:23,300 --> 00:14:26,510
different<font color="#CCCCCC"> permutations the test cases</font>

341
00:14:24,680 --> 00:14:27,469
across<font color="#E5E5E5"> you can come up with</font><font color="#CCCCCC"> a very very</font>

342
00:14:26,510 --> 00:14:29,510
<font color="#E5E5E5">large number</font>

343
00:14:27,470 --> 00:14:32,240
I clearly<font color="#E5E5E5"> check and show the result of a</font>

344
00:14:29,510 --> 00:14:33,740
thousand test cases and<font color="#E5E5E5"> I</font><font color="#CCCCCC"> want you</font><font color="#E5E5E5"> know</font>

345
00:14:32,240 --> 00:14:35,780
at the same time so I just<font color="#CCCCCC"> picked one</font>

346
00:14:33,740 --> 00:14:39,670
<font color="#CCCCCC">and one or two in particular</font><font color="#E5E5E5"> that I</font>

347
00:14:35,780 --> 00:14:43,819
quite<font color="#E5E5E5"> like so I quite like the ipv4</font>

348
00:14:39,670 --> 00:14:46,699
<font color="#CCCCCC">teske its IP 4 for routing test cases</font>

349
00:14:43,820 --> 00:14:50,470
so and we have<font color="#CCCCCC"> two test cases</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we</font>

350
00:14:46,700 --> 00:14:53,480
run once called<font color="#E5E5E5"> ipv4 base that runs</font><font color="#CCCCCC"> Fido</font>

351
00:14:50,470 --> 00:14:56,840
<font color="#E5E5E5">that runs a performance test of ipv4</font>

352
00:14:53,480 --> 00:14:58,640
routing<font color="#E5E5E5"> with one route so you've</font><font color="#CCCCCC"> only</font>

353
00:14:56,840 --> 00:15:03,110
got one route in your<font color="#E5E5E5"> lookup table and</font>

354
00:14:58,640 --> 00:15:05,990
then we have ipv4 scale and ipv4 scale

355
00:15:03,110 --> 00:15:08,120
runs with two<font color="#E5E5E5"> million routes in your</font>

356
00:15:05,990 --> 00:15:11,080
<font color="#E5E5E5">test in</font><font color="#CCCCCC"> your in your in your</font><font color="#E5E5E5"> routing</font>

357
00:15:08,120 --> 00:15:13,580
table<font color="#E5E5E5"> and you can see this this is a</font>

358
00:15:11,080 --> 00:15:15,440
<font color="#CCCCCC">Haswell generation microprocessor we</font>

359
00:15:13,580 --> 00:15:17,900
have two Intel platforms in the<font color="#E5E5E5"> lab</font>

360
00:15:15,440 --> 00:15:21,500
we've<font color="#CCCCCC"> got as well and we've got skylake</font>

361
00:15:17,900 --> 00:15:23,540
<font color="#E5E5E5">and you can see the ipv4 base with one</font>

362
00:15:21,500 --> 00:15:25,550
<font color="#E5E5E5">route gets around 11 million packets per</font>

363
00:15:23,540 --> 00:15:27,949
second on<font color="#E5E5E5"> how as well and then it</font><font color="#CCCCCC"> gets</font>

364
00:15:25,550 --> 00:15:29,599
with the<font color="#E5E5E5"> two million routes it gets what</font>

365
00:15:27,950 --> 00:15:32,510
about<font color="#CCCCCC"> nine million packets per second on</font>

366
00:15:29,600 --> 00:15:35,990
the<font color="#E5E5E5"> house well</font><font color="#CCCCCC"> okay so then we went to</font>

367
00:15:32,510 --> 00:15:39,530
Fido<font color="#CCCCCC"> VP peace 80 that was weird 1804 we</font>

368
00:15:35,990 --> 00:15:42,530
then went<font color="#E5E5E5"> to 1807 on house well and we</font>

369
00:15:39,530 --> 00:15:44,750
did some software optimizations<font color="#E5E5E5"> and came</font>

370
00:15:42,530 --> 00:15:48,410
along and we also introduced a second

371
00:15:44,750 --> 00:15:50,540
<font color="#E5E5E5">NIC so the software optimizations</font><font color="#CCCCCC"> caused</font>

372
00:15:48,410 --> 00:15:52,189
a<font color="#E5E5E5"> small performance boom from about 11</font>

373
00:15:50,540 --> 00:15:53,569
million<font color="#CCCCCC"> pakka seconds to about 12</font>

374
00:15:52,190 --> 00:15:55,550
million packets a seconds for the

375
00:15:53,570 --> 00:15:57,740
million packets a second for<font color="#E5E5E5"> this single</font>

376
00:15:55,550 --> 00:15:59,660
<font color="#CCCCCC">row</font><font color="#E5E5E5"> test case and</font><font color="#CCCCCC"> there's another small</font>

377
00:15:57,740 --> 00:16:00,950
performance<font color="#CCCCCC"> boom from about</font><font color="#E5E5E5"> nine to nine</font>

378
00:15:59,660 --> 00:16:03,770
<font color="#E5E5E5">and a half or</font><font color="#CCCCCC"> something like that for</font>

379
00:16:00,950 --> 00:16:05,600
<font color="#CCCCCC">the two million route</font><font color="#E5E5E5"> test case but then</font>

380
00:16:03,770 --> 00:16:07,520
we were also at that<font color="#CCCCCC"> was these test</font>

381
00:16:05,600 --> 00:16:09,530
<font color="#CCCCCC">cases here where were 10 gig</font><font color="#E5E5E5"> NIC were</font>

382
00:16:07,520 --> 00:16:14,180
able to<font color="#E5E5E5"> do the same test case now with</font>

383
00:16:09,530 --> 00:16:16,400
<font color="#CCCCCC">the dx7</font><font color="#E5E5E5"> 10 and the x7 10 again is a 10</font>

384
00:16:14,180 --> 00:16:20,120
gig NIC but it's<font color="#E5E5E5"> 4 by 10 gig so it's a</font>

385
00:16:16,400 --> 00:16:23,180
40 gig NIC that's it's a 40 gig<font color="#E5E5E5"> Ethernet</font>

386
00:16:20,120 --> 00:16:27,590
controller that<font color="#CCCCCC"> has 10 4 by 10 gig</font>

387
00:16:23,180 --> 00:16:29,030
physical interfaces and you can see here

388
00:16:27,590 --> 00:16:30,950
<font color="#E5E5E5">that you know the performance</font><font color="#CCCCCC"> is much</font>

389
00:16:29,030 --> 00:16:32,569
the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> as it is with</font><font color="#E5E5E5"> the 10</font><font color="#CCCCCC"> gate</font><font color="#E5E5E5"> and</font>

390
00:16:30,950 --> 00:16:34,010
as with<font color="#CCCCCC"> the 10 gig NIC but</font><font color="#E5E5E5"> now we have</font>

391
00:16:32,570 --> 00:16:35,540
the satisfaction<font color="#E5E5E5"> that we're know that</font>

392
00:16:34,010 --> 00:16:36,920
we're getting roughly<font color="#CCCCCC"> we're getting</font>

393
00:16:35,540 --> 00:16:40,430
<font color="#E5E5E5">pretty much the same</font><font color="#CCCCCC"> performance across</font>

394
00:16:36,920 --> 00:16:43,270
<font color="#E5E5E5">the 10 gig NIC I'm a 40 gig Nick</font><font color="#CCCCCC"> and</font>

395
00:16:40,430 --> 00:16:46,520
then we introduced the<font color="#E5E5E5"> Intel skylake</font>

396
00:16:43,270 --> 00:16:49,100
microarchitecture in Fido 18.7 as well

397
00:16:46,520 --> 00:16:51,530
and you can<font color="#CCCCCC"> see that</font><font color="#E5E5E5"> performance again</font>

398
00:16:49,100 --> 00:16:53,390
is roughly the same on skylake so we've

399
00:16:51,530 --> 00:16:55,480
also introduced a new microprocessor

400
00:16:53,390 --> 00:16:57,410
architecture we've introduced a new

401
00:16:55,480 --> 00:17:00,260
introduced a new NIC

402
00:16:57,410 --> 00:17:03,350
and we have that warm fuzzy feeling<font color="#CCCCCC"> that</font>

403
00:17:00,260 --> 00:17:07,250
performances<font color="#E5E5E5"> more or less the same and</font>

404
00:17:03,350 --> 00:17:11,150
then fight old VPP<font color="#E5E5E5"> 1818</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> came along</font>

405
00:17:07,250 --> 00:17:17,690
<font color="#CCCCCC">and Fido VPP 18 10 made very liberal use</font>

406
00:17:11,150 --> 00:17:19,730
of avx-512 instructions now avx-512

407
00:17:17,690 --> 00:17:21,290
instructions so I presume everybody<font color="#E5E5E5"> in</font>

408
00:17:19,730 --> 00:17:23,210
<font color="#E5E5E5">those in the room knows what vector</font>

409
00:17:21,290 --> 00:17:25,700
instructions are everybody<font color="#E5E5E5"> knows vector</font>

410
00:17:23,210 --> 00:17:26,600
instructions I see nodding heads and I

411
00:17:25,700 --> 00:17:31,820
see hands<font color="#E5E5E5"> up</font>

412
00:17:26,599 --> 00:17:34,610
so avx-512 is the latest is<font color="#CCCCCC"> that is</font>

413
00:17:31,820 --> 00:17:36,710
<font color="#E5E5E5">laces improvement in vector</font><font color="#CCCCCC"> instructions</font>

414
00:17:34,610 --> 00:17:39,199
so before this was<font color="#E5E5E5"> avx2</font><font color="#CCCCCC"> which can thing</font>

415
00:17:36,710 --> 00:17:43,100
<font color="#E5E5E5">came</font><font color="#CCCCCC"> out and has well was it</font><font color="#E5E5E5"> a fix to</font>

416
00:17:39,200 --> 00:17:45,440
<font color="#CCCCCC">his house well</font><font color="#E5E5E5"> AVX 512 is on</font><font color="#CCCCCC"> skylake</font>

417
00:17:43,100 --> 00:17:48,740
which basically allows you to<font color="#E5E5E5"> process</font>

418
00:17:45,440 --> 00:17:50,540
<font color="#E5E5E5">even more packets simultaneously is the</font>

419
00:17:48,740 --> 00:17:52,310
idea<font color="#E5E5E5"> so vector what</font><font color="#CCCCCC"> vector instructions</font>

420
00:17:50,540 --> 00:17:54,620
typically do or how we typically use

421
00:17:52,310 --> 00:17:57,740
vector instructions in both<font color="#CCCCCC"> DP DK</font><font color="#E5E5E5"> and</font>

422
00:17:54,620 --> 00:18:01,010
Fido VPP is we use them<font color="#CCCCCC"> to process</font>

423
00:17:57,740 --> 00:18:02,990
packets in parallel<font color="#E5E5E5"> so if you're using</font>

424
00:18:01,010 --> 00:18:05,360
let's say scholar instructions you

425
00:18:02,990 --> 00:18:07,070
<font color="#E5E5E5">typically do a one packet at a time if</font>

426
00:18:05,360 --> 00:18:09,080
<font color="#E5E5E5">you use vector instructions you</font>

427
00:18:07,070 --> 00:18:12,350
typically do<font color="#E5E5E5"> four packets at the time</font>

428
00:18:09,080 --> 00:18:14,750
with a VX avx2 we<font color="#E5E5E5"> typically did four</font>

429
00:18:12,350 --> 00:18:18,020
packets at the time with avx-512 we

430
00:18:14,750 --> 00:18:20,030
typically do eight packets<font color="#E5E5E5"> at</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> time if</font>

431
00:18:18,020 --> 00:18:22,730
memory serves me correctly<font color="#CCCCCC"> and I hope</font>

432
00:18:20,030 --> 00:18:25,700
I'm<font color="#CCCCCC"> not wrong but what happened when we</font>

433
00:18:22,730 --> 00:18:28,760
introduced<font color="#E5E5E5"> all the avx-512 optimizations</font>

434
00:18:25,700 --> 00:18:29,810
into Fido VPP<font color="#E5E5E5"> on skylake you can see</font>

435
00:18:28,760 --> 00:18:32,960
what happened to the baseline

436
00:18:29,810 --> 00:18:36,470
performance<font color="#E5E5E5"> there we went from</font><font color="#CCCCCC"> about</font>

437
00:18:32,960 --> 00:18:38,930
<font color="#CCCCCC">about</font><font color="#E5E5E5"> 12 million packets a second</font><font color="#CCCCCC"> eighty</font>

438
00:18:36,470 --> 00:18:41,750
and about<font color="#CCCCCC"> twelve minutes a second</font><font color="#E5E5E5"> up to</font>

439
00:18:38,930 --> 00:18:45,260
<font color="#E5E5E5">something</font><font color="#CCCCCC"> like 19 million packets a</font>

440
00:18:41,750 --> 00:18:47,870
second just<font color="#E5E5E5"> simply by</font><font color="#CCCCCC"> using this and by</font>

441
00:18:45,260 --> 00:18:50,230
using<font color="#E5E5E5"> this</font><font color="#CCCCCC"> part inherent parallelism the</font>

442
00:18:47,870 --> 00:18:52,610
<font color="#E5E5E5">microprocessor that AVX gives you</font>

443
00:18:50,230 --> 00:18:54,530
similarly at the scale test case with

444
00:18:52,610 --> 00:18:56,179
the<font color="#E5E5E5"> two million routes went up from</font>

445
00:18:54,530 --> 00:18:59,870
<font color="#E5E5E5">something like</font><font color="#CCCCCC"> nine million packets a</font>

446
00:18:56,180 --> 00:19:02,149
second to something like over<font color="#E5E5E5"> it is you</font>

447
00:18:59,870 --> 00:19:05,238
know<font color="#CCCCCC"> two over</font>

448
00:19:02,149 --> 00:19:07,789
<font color="#CCCCCC">to over 16 million to around</font><font color="#E5E5E5"> 16 million</font>

449
00:19:05,239 --> 00:19:09,379
packets a second so you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see here the</font>

450
00:19:07,789 --> 00:19:11,029
<font color="#E5E5E5">general point and the probably</font><font color="#CCCCCC"> labor</font>

451
00:19:09,379 --> 00:19:13,309
that<font color="#CCCCCC"> know at this</font><font color="#E5E5E5"> stage but the general</font>

452
00:19:11,029 --> 00:19:15,859
point<font color="#E5E5E5"> is you know you can look at the</font>

453
00:19:13,309 --> 00:19:18,319
same test case across<font color="#CCCCCC"> a series of Nicks</font>

454
00:19:15,859 --> 00:19:20,539
and<font color="#E5E5E5"> across a series of microprocessor</font>

455
00:19:18,319 --> 00:19:23,149
revisions and see what the impact of

456
00:19:20,539 --> 00:19:25,129
both of you know what the impact is

457
00:19:23,149 --> 00:19:26,839
without<font color="#E5E5E5"> optimization the impact of it is</font>

458
00:19:25,129 --> 00:19:30,279
with<font color="#E5E5E5"> optimization across a whole range</font>

459
00:19:26,839 --> 00:19:33,579
<font color="#CCCCCC">of 90</font><font color="#E5E5E5"> not nearly</font><font color="#CCCCCC"> a thousand test cases</font>

460
00:19:30,279 --> 00:19:37,249
<font color="#CCCCCC">so this</font><font color="#E5E5E5"> is how we bring a real breadth</font>

461
00:19:33,579 --> 00:19:39,229
depth and predictability<font color="#CCCCCC"> what I mean by</font>

462
00:19:37,249 --> 00:19:40,759
breadth is a breadth of test cases when

463
00:19:39,229 --> 00:19:42,019
we depth of measurement and<font color="#E5E5E5"> I mean</font>

464
00:19:40,759 --> 00:19:43,789
<font color="#CCCCCC">predictability we do this for every</font>

465
00:19:42,019 --> 00:19:45,679
patch we do this<font color="#E5E5E5"> nightly we do this for</font>

466
00:19:43,789 --> 00:19:50,419
every release and we generate a huge

467
00:19:45,679 --> 00:19:52,909
corpus of data<font color="#E5E5E5"> as a result so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think</font>

468
00:19:50,419 --> 00:19:57,859
<font color="#CCCCCC">I've got 10 minutes left so I'm gonna</font>

469
00:19:52,909 --> 00:19:59,599
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> very briefly about down area let me</font>

470
00:19:57,859 --> 00:20:01,339
draw<font color="#CCCCCC"> a</font><font color="#E5E5E5"> draw back for a minute any</font>

471
00:19:59,599 --> 00:20:03,428
questions on<font color="#CCCCCC"> what I've just</font><font color="#E5E5E5"> said go</font>

472
00:20:01,339 --> 00:20:03,428
ahead

473
00:20:04,820 --> 00:20:09,080
funny you<font color="#E5E5E5"> should ask let me come answer</font>

474
00:20:09,230 --> 00:20:14,450
any other questions go<font color="#E5E5E5"> ahead</font>

475
00:20:17,840 --> 00:20:24,169
so not actually<font color="#E5E5E5"> Oh Knightly Knightly</font>

476
00:20:21,380 --> 00:20:26,060
Knightly<font color="#E5E5E5"> not every patch</font><font color="#CCCCCC"> because that</font>

477
00:20:24,170 --> 00:20:33,470
<font color="#E5E5E5">just becomes insane</font><font color="#CCCCCC"> to your point right</font>

478
00:20:26,060 --> 00:20:36,800
you can do<font color="#CCCCCC"> it every back okay sorry I'm</font>

479
00:20:33,470 --> 00:20:38,000
just<font color="#E5E5E5"> I've been told so</font><font color="#CCCCCC"> and you're asked</font>

480
00:20:36,800 --> 00:20:40,129
the<font color="#E5E5E5"> question you're asking</font><font color="#CCCCCC"> is how</font>

481
00:20:38,000 --> 00:20:44,800
frequently<font color="#CCCCCC"> we do run</font><font color="#E5E5E5"> the entire test</font>

482
00:20:40,130 --> 00:20:44,800
<font color="#CCCCCC">kick yes</font>

483
00:20:49,440 --> 00:20:55,110
so<font color="#CCCCCC"> I come on side and a</font><font color="#E5E5E5"> bit of depth</font><font color="#CCCCCC"> so</font>

484
00:20:52,050 --> 00:20:58,050
let<font color="#E5E5E5"> me let me come to it so and we</font>

485
00:20:55,110 --> 00:20:59,639
talked about<font color="#E5E5E5"> this and previously which</font>

486
00:20:58,050 --> 00:21:02,310
is the continuously problem which is

487
00:20:59,640 --> 00:21:04,470
<font color="#CCCCCC">that if</font><font color="#E5E5E5"> you find performance regressions</font>

488
00:21:02,310 --> 00:21:06,600
<font color="#CCCCCC">that release time it's typically very</font>

489
00:21:04,470 --> 00:21:08,460
expensive anybody here and there's lots

490
00:21:06,600 --> 00:21:10,320
of software<font color="#E5E5E5"> engineers in the</font><font color="#CCCCCC"> room if you</font>

491
00:21:08,460 --> 00:21:13,320
have<font color="#E5E5E5"> measure performance regression in</font>

492
00:21:10,320 --> 00:21:17,159
the release time<font color="#E5E5E5"> suddenly</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> git bisect</font>

493
00:21:13,320 --> 00:21:18,720
phone<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so you're typically really</font>

494
00:21:17,160 --> 00:21:20,700
get bisect and you're running the same

495
00:21:18,720 --> 00:21:24,060
test case and<font color="#CCCCCC"> it's typically</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> very</font>

496
00:21:20,700 --> 00:21:26,430
painful<font color="#E5E5E5"> particularly</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> read the</font>

497
00:21:24,060 --> 00:21:28,889
velocity<font color="#CCCCCC"> of communities like</font><font color="#E5E5E5"> DP DK on</font>

498
00:21:26,430 --> 00:21:30,750
Fido VPP<font color="#E5E5E5"> the rate of loss these huge</font>

499
00:21:28,890 --> 00:21:32,850
means that we have a<font color="#E5E5E5"> huge import of</font>

500
00:21:30,750 --> 00:21:35,340
patches<font color="#E5E5E5"> which means you really</font><font color="#CCCCCC"> need a</font>

501
00:21:32,850 --> 00:21:38,280
<font color="#E5E5E5">very</font><font color="#CCCCCC"> strong safety net to catch</font>

502
00:21:35,340 --> 00:21:40,199
performance regressions<font color="#CCCCCC"> so how do you</font>

503
00:21:38,280 --> 00:21:42,389
maintain best-in-class performance<font color="#E5E5E5"> and</font>

504
00:21:40,200 --> 00:21:44,280
how would you<font color="#E5E5E5"> address the danger</font>

505
00:21:42,390 --> 00:21:45,810
creeping normality and I think the more

506
00:21:44,280 --> 00:21:48,000
common name of creeping normality is

507
00:21:45,810 --> 00:21:50,520
boiled frog syndrome<font color="#E5E5E5"> where you're just</font>

508
00:21:48,000 --> 00:21:53,190
things slowly degrade over time and you

509
00:21:50,520 --> 00:21:55,430
<font color="#E5E5E5">don't notice well I have a pretty</font>

510
00:21:53,190 --> 00:21:58,770
<font color="#E5E5E5">picture for you so this is our</font>

511
00:21:55,430 --> 00:22:00,720
<font color="#E5E5E5">performance trending time line</font><font color="#CCCCCC"> so we</font>

512
00:21:58,770 --> 00:22:02,970
<font color="#CCCCCC">published this</font><font color="#E5E5E5"> and all the developers</font>

513
00:22:00,720 --> 00:22:05,460
have access<font color="#E5E5E5"> to this and you</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> this</font>

514
00:22:02,970 --> 00:22:06,990
is a whole bunch<font color="#CCCCCC"> of l2 test cases here</font>

515
00:22:05,460 --> 00:22:10,710
you<font color="#E5E5E5"> won't be able to read this but</font><font color="#CCCCCC"> I can</font>

516
00:22:06,990 --> 00:22:13,310
show l2<font color="#E5E5E5"> bridge domains</font><font color="#CCCCCC"> with one</font><font color="#E5E5E5"> Mac one</font>

517
00:22:10,710 --> 00:22:15,840
with more<font color="#E5E5E5"> mac address up to wouldn't</font>

518
00:22:13,310 --> 00:22:17,100
<font color="#E5E5E5">100,000</font><font color="#CCCCCC"> MAC addresses I think we</font>

519
00:22:15,840 --> 00:22:19,080
<font color="#CCCCCC">actually might do an even a million</font><font color="#E5E5E5"> MAC</font>

520
00:22:17,100 --> 00:22:20,550
<font color="#E5E5E5">addresses</font><font color="#CCCCCC"> you know it</font><font color="#E5E5E5"> doesn't matter but</font>

521
00:22:19,080 --> 00:22:22,770
<font color="#E5E5E5">you</font><font color="#CCCCCC"> get the idea that</font><font color="#E5E5E5"> we have a whole</font>

522
00:22:20,550 --> 00:22:24,659
series of l2 bridge the main test cases

523
00:22:22,770 --> 00:22:27,840
here from a single while scaling the

524
00:22:24,660 --> 00:22:29,610
whole way down<font color="#E5E5E5"> to 100,000 Mac MAC</font>

525
00:22:27,840 --> 00:22:31,980
addresses as a single bridge<font color="#CCCCCC"> and we can</font>

526
00:22:29,610 --> 00:22:34,229
see how<font color="#CCCCCC"> that test case performs over</font>

527
00:22:31,980 --> 00:22:36,360
<font color="#E5E5E5">time another only</font><font color="#CCCCCC"> dab where you're</font>

528
00:22:34,230 --> 00:22:38,220
actually<font color="#CCCCCC"> able to run it against what we</font>

529
00:22:36,360 --> 00:22:40,229
know are you<font color="#E5E5E5"> know are good numbers and</font>

530
00:22:38,220 --> 00:22:41,640
bad numbers so we<font color="#CCCCCC"> can say okay well</font>

531
00:22:40,230 --> 00:22:43,770
what's in<font color="#E5E5E5"> the green</font><font color="#CCCCCC"> and what's in the</font>

532
00:22:41,640 --> 00:22:46,260
red and<font color="#E5E5E5"> we can make</font><font color="#CCCCCC"> judgments</font><font color="#E5E5E5"> and you</font>

533
00:22:43,770 --> 00:22:47,700
can see here the red circles are

534
00:22:46,260 --> 00:22:49,470
regression where regressions have

535
00:22:47,700 --> 00:22:51,300
happened<font color="#E5E5E5"> and green circles are where</font>

536
00:22:49,470 --> 00:22:53,280
<font color="#E5E5E5">performance improvements have happened</font>

537
00:22:51,300 --> 00:22:54,990
<font color="#E5E5E5">and this is a dashboard that the entire</font>

538
00:22:53,280 --> 00:22:56,790
community<font color="#E5E5E5"> has on</font><font color="#CCCCCC"> the regular basis this</font>

539
00:22:54,990 --> 00:22:58,050
<font color="#E5E5E5">is</font><font color="#CCCCCC"> how you generate</font><font color="#E5E5E5"> a warm fuzzy feeling</font>

540
00:22:56,790 --> 00:23:01,530
that you're<font color="#E5E5E5"> not losing</font><font color="#CCCCCC"> performance over</font>

541
00:22:58,050 --> 00:23:03,210
time<font color="#E5E5E5"> and because I said earlier that we</font>

542
00:23:01,530 --> 00:23:05,250
have<font color="#CCCCCC"> a very</font><font color="#E5E5E5"> very large number</font><font color="#CCCCCC"> of</font>

543
00:23:03,210 --> 00:23:07,260
cases we have a very nice dashboard<font color="#E5E5E5"> in</font>

544
00:23:05,250 --> 00:23:09,299
which people can just log on and<font color="#CCCCCC"> see</font>

545
00:23:07,260 --> 00:23:10,980
whether performance is increasing what's

546
00:23:09,299 --> 00:23:12,840
the short-term percentage change what's

547
00:23:10,980 --> 00:23:14,909
the<font color="#E5E5E5"> long-term</font><font color="#CCCCCC"> presenting check change</font>

548
00:23:12,840 --> 00:23:16,740
<font color="#E5E5E5">what's the trending number of millions</font>

549
00:23:14,909 --> 00:23:18,059
packets per second<font color="#E5E5E5"> and is there how many</font>

550
00:23:16,740 --> 00:23:22,049
regressions<font color="#E5E5E5"> you're getting a</font><font color="#CCCCCC"> how many</font>

551
00:23:18,059 --> 00:23:24,299
<font color="#CCCCCC">low</font><font color="#E5E5E5"> outliers and that kind of thing so</font>

552
00:23:22,049 --> 00:23:26,668
what are the challenges here and I<font color="#E5E5E5"> think</font>

553
00:23:24,299 --> 00:23:28,649
<font color="#E5E5E5">the two questions before outline the</font>

554
00:23:26,669 --> 00:23:31,679
challenge is very<font color="#CCCCCC"> well we</font><font color="#E5E5E5"> have a lot of</font>

555
00:23:28,649 --> 00:23:33,779
tests<font color="#E5E5E5"> and we have a limited number of</font>

556
00:23:31,679 --> 00:23:35,940
physical platforms and so you're<font color="#E5E5E5"> very</font>

557
00:23:33,779 --> 00:23:38,100
<font color="#E5E5E5">neatly very judicious</font><font color="#CCCCCC"> about when you run</font>

558
00:23:35,940 --> 00:23:40,020
so the entire<font color="#E5E5E5"> test week definitely gets</font>

559
00:23:38,100 --> 00:23:42,600
run every release and we typically run

560
00:23:40,020 --> 00:23:45,750
the entire<font color="#E5E5E5"> test suite on a nightly basis</font>

561
00:23:42,600 --> 00:23:47,939
but that consumes consumes a<font color="#E5E5E5"> it consumes</font>

562
00:23:45,750 --> 00:23:50,490
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> systems when you submit a patch</font>

563
00:23:47,940 --> 00:23:52,740
we tend to be<font color="#E5E5E5"> more judicious</font><font color="#CCCCCC"> about how</font>

564
00:23:50,490 --> 00:23:55,020
many test<font color="#CCCCCC"> cases you we run against any</font>

565
00:23:52,740 --> 00:23:57,360
individual patch<font color="#E5E5E5"> because that you know</font>

566
00:23:55,020 --> 00:23:59,399
<font color="#CCCCCC">consume</font><font color="#E5E5E5"> that can really snarl up number</font>

567
00:23:57,360 --> 00:24:00,990
<font color="#CCCCCC">attacks resort sources you know this is</font>

568
00:23:59,399 --> 00:24:02,699
not an unlimited we<font color="#CCCCCC"> have lab we have</font>

569
00:24:00,990 --> 00:24:04,860
<font color="#CCCCCC">we're not an</font><font color="#E5E5E5"> open source project with</font>

570
00:24:02,700 --> 00:24:06,299
unlimited<font color="#E5E5E5"> funds far from it so we need</font>

571
00:24:04,860 --> 00:24:11,370
<font color="#CCCCCC">to be very judicious</font><font color="#E5E5E5"> about what we run</font>

572
00:24:06,299 --> 00:24:13,110
and when yeah and one<font color="#E5E5E5"> of the challenges</font>

573
00:24:11,370 --> 00:24:14,309
is how<font color="#E5E5E5"> you get how you can ensure you</font>

574
00:24:13,110 --> 00:24:15,809
<font color="#E5E5E5">get coverage so how do you know that</font>

575
00:24:14,309 --> 00:24:18,000
<font color="#CCCCCC">every patch is getting the kind</font><font color="#E5E5E5"> of</font>

576
00:24:15,809 --> 00:24:21,600
<font color="#CCCCCC">coverage</font><font color="#E5E5E5"> test case coverage it needs</font>

577
00:24:18,000 --> 00:24:26,580
<font color="#CCCCCC">okay I'm gonna</font><font color="#E5E5E5"> keep going deeper diving</font>

578
00:24:21,600 --> 00:24:31,939
so moving beyond the<font color="#E5E5E5"> symptom so I'm</font>

579
00:24:26,580 --> 00:24:36,000
gonna move<font color="#CCCCCC"> past this</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> on to</font>

580
00:24:31,940 --> 00:24:37,770
<font color="#E5E5E5">yeah probably on to this slide so you</font>

581
00:24:36,000 --> 00:24:40,049
know<font color="#E5E5E5"> I kind of labor the point at this</font>

582
00:24:37,770 --> 00:24:41,370
<font color="#CCCCCC">stage and</font><font color="#E5E5E5"> you know if you forgive them</font>

583
00:24:40,049 --> 00:24:43,580
<font color="#E5E5E5">for trolling</font><font color="#CCCCCC"> rotten through</font><font color="#E5E5E5"> to me at</font>

584
00:24:41,370 --> 00:24:46,979
this stage<font color="#E5E5E5"> but a label at</font><font color="#CCCCCC"> the point at</font>

585
00:24:43,580 --> 00:24:49,289
<font color="#E5E5E5">about you know how many benchmarks we</font>

586
00:24:46,980 --> 00:24:51,029
have but at a certain<font color="#CCCCCC"> point you need</font><font color="#E5E5E5"> to</font>

587
00:24:49,289 --> 00:24:54,510
<font color="#E5E5E5">move beyond just benchmarking</font><font color="#CCCCCC"> the</font>

588
00:24:51,029 --> 00:24:58,140
problem you<font color="#E5E5E5"> know it at a certain point</font>

589
00:24:54,510 --> 00:25:00,600
you need more data<font color="#CCCCCC"> to try and and the</font>

590
00:24:58,140 --> 00:25:02,640
<font color="#E5E5E5">train route cause the problem it's it's</font>

591
00:25:00,600 --> 00:25:04,110
one thing<font color="#E5E5E5"> telling in again but number</font>

592
00:25:02,640 --> 00:25:05,940
software engineers<font color="#CCCCCC"> in this room you know</font>

593
00:25:04,110 --> 00:25:08,580
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it's one thing telling me there's a</font>

594
00:25:05,940 --> 00:25:11,130
performance regression or there's a bug

595
00:25:08,580 --> 00:25:13,439
somewhere but give<font color="#E5E5E5"> me a clue give me</font>

596
00:25:11,130 --> 00:25:15,809
some sort of an idea<font color="#E5E5E5"> as to what the</font>

597
00:25:13,440 --> 00:25:18,059
actual<font color="#CCCCCC"> underlying problem is</font>

598
00:25:15,809 --> 00:25:20,070
and you know it's well known today<font color="#CCCCCC"> that</font>

599
00:25:18,059 --> 00:25:22,918
<font color="#E5E5E5">Linux ships with a whole bunch of tools</font>

600
00:25:20,070 --> 00:25:24,509
that<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> use for next-level</font><font color="#E5E5E5"> analysis</font>

601
00:25:22,919 --> 00:25:26,759
of where performance regressions are

602
00:25:24,509 --> 00:25:28,859
coming from you know tools like Linux

603
00:25:26,759 --> 00:25:31,679
perf<font color="#CCCCCC"> we also have things like pmu tools</font>

604
00:25:28,859 --> 00:25:33,330
for<font color="#CCCCCC"> okay for pulling pmu stats from the</font>

605
00:25:31,679 --> 00:25:35,279
microprocessor<font color="#E5E5E5"> that tells you where</font>

606
00:25:33,330 --> 00:25:38,269
cycles are being<font color="#E5E5E5"> born and we actually</font>

607
00:25:35,279 --> 00:25:40,769
also<font color="#E5E5E5"> have very good introspection actual</font>

608
00:25:38,269 --> 00:25:42,440
instrumentation<font color="#CCCCCC"> and Fido</font><font color="#E5E5E5"> VPP itself to</font>

609
00:25:40,769 --> 00:25:45,029
tell you where cycles are being for

610
00:25:42,440 --> 00:25:47,070
<font color="#CCCCCC">portent so what we're starting</font><font color="#E5E5E5"> to do now</font>

611
00:25:45,029 --> 00:25:48,479
<font color="#E5E5E5">is we're</font><font color="#CCCCCC"> starting to</font><font color="#E5E5E5"> use these tools and</font>

612
00:25:47,070 --> 00:25:50,549
again they're all free<font color="#E5E5E5"> and open source</font>

613
00:25:48,479 --> 00:25:52,649
tools to start to generate<font color="#CCCCCC"> the next</font>

614
00:25:50,549 --> 00:25:54,179
<font color="#E5E5E5">level of information so when you go in</font>

615
00:25:52,649 --> 00:25:56,728
and you see a performance regression now

616
00:25:54,179 --> 00:25:58,859
you can actually drill down<font color="#E5E5E5"> and get the</font>

617
00:25:56,729 --> 00:26:01,919
<font color="#CCCCCC">next level of detail and look at the</font>

618
00:25:58,859 --> 00:26:03,839
graph pipeline in VPP<font color="#E5E5E5"> whether</font><font color="#CCCCCC"> they think</font>

619
00:26:01,919 --> 00:26:05,909
<font color="#E5E5E5">Giles</font><font color="#CCCCCC"> there earlier talked about the</font><font color="#E5E5E5"> PvP</font>

620
00:26:03,839 --> 00:26:08,099
graph hierarchy<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you can see in the</font>

621
00:26:05,909 --> 00:26:10,320
<font color="#CCCCCC">next level where cycles are being burned</font>

622
00:26:08,099 --> 00:26:12,509
and that interface<font color="#CCCCCC"> and that</font><font color="#E5E5E5"> data again</font>

623
00:26:10,320 --> 00:26:13,859
is being generated<font color="#CCCCCC"> and it's there</font><font color="#E5E5E5"> so</font>

624
00:26:12,509 --> 00:26:15,179
when<font color="#E5E5E5"> we get a performance regression we</font>

625
00:26:13,859 --> 00:26:16,619
don't just<font color="#E5E5E5"> leave you hanging</font><font color="#CCCCCC"> and say hey</font>

626
00:26:15,179 --> 00:26:18,749
guys there's a performance regression

627
00:26:16,619 --> 00:26:20,158
sorry<font color="#E5E5E5"> we give you the next level of data</font>

628
00:26:18,749 --> 00:26:22,469
<font color="#CCCCCC">say</font><font color="#E5E5E5"> actually just a performance</font>

629
00:26:20,159 --> 00:26:24,719
regression in this graph node as a

630
00:26:22,469 --> 00:26:29,099
perform as a posed to a performance<font color="#CCCCCC"> a</font>

631
00:26:24,719 --> 00:26:31,200
system-wide<font color="#E5E5E5"> performance regression okay</font>

632
00:26:29,099 --> 00:26:33,629
<font color="#E5E5E5">and then what lastly we'll talk about</font>

633
00:26:31,200 --> 00:26:35,669
<font color="#E5E5E5">service density and this is you know</font>

634
00:26:33,629 --> 00:26:37,559
<font color="#E5E5E5">when like we</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> about</font><font color="#CCCCCC"> real-world</font><font color="#E5E5E5"> use</font>

635
00:26:35,669 --> 00:26:41,669
<font color="#CCCCCC">cases so you</font><font color="#E5E5E5"> know there's a lot being a</font>

636
00:26:37,559 --> 00:26:44,279
lot<font color="#E5E5E5"> of discussion today</font><font color="#CCCCCC"> about the cloud</font>

637
00:26:41,669 --> 00:26:46,769
and cloud<font color="#E5E5E5"> night cloud native deployments</font>

638
00:26:44,279 --> 00:26:51,929
but there<font color="#CCCCCC"> isn't</font><font color="#E5E5E5"> really a whole</font><font color="#CCCCCC"> lot of</font>

639
00:26:46,769 --> 00:26:53,580
data<font color="#E5E5E5"> around how data planes react</font><font color="#CCCCCC"> to</font>

640
00:26:51,929 --> 00:26:56,219
cloud native deployments<font color="#E5E5E5"> are certainly</font>

641
00:26:53,580 --> 00:26:58,228
<font color="#E5E5E5">not enough data around how cloud and how</font>

642
00:26:56,219 --> 00:27:00,479
they dam deployments react to cloud

643
00:26:58,229 --> 00:27:02,729
native environments<font color="#CCCCCC"> so we've</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> doing</font>

644
00:27:00,479 --> 00:27:04,109
<font color="#E5E5E5">some work to</font><font color="#CCCCCC"> try and</font><font color="#E5E5E5"> understand that</font>

645
00:27:02,729 --> 00:27:06,210
<font color="#E5E5E5">better and we've been comparing</font>

646
00:27:04,109 --> 00:27:08,218
comparing service densities for<font color="#E5E5E5"> virtual</font>

647
00:27:06,210 --> 00:27:10,859
machines<font color="#E5E5E5"> as compared to containers</font>

648
00:27:08,219 --> 00:27:12,690
<font color="#E5E5E5">there's a lot of industry discussion at</font>

649
00:27:10,859 --> 00:27:15,029
the moment<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> Oaks</font><font color="#E5E5E5"> discussion in</font>

650
00:27:12,690 --> 00:27:16,889
the<font color="#E5E5E5"> community around hey containers are</font>

651
00:27:15,029 --> 00:27:18,389
more efficient than virtual machines

652
00:27:16,889 --> 00:27:20,309
<font color="#CCCCCC">Hansel proves here at that statement</font>

653
00:27:18,389 --> 00:27:23,969
containers are more efficient virtual

654
00:27:20,309 --> 00:27:25,918
<font color="#E5E5E5">machines</font><font color="#CCCCCC"> okay lots of hands what they're</font>

655
00:27:23,970 --> 00:27:27,359
<font color="#E5E5E5">not well there is that as well</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> there</font>

656
00:27:25,919 --> 00:27:29,460
is<font color="#CCCCCC"> own that's a there's a lot of talk</font>

657
00:27:27,359 --> 00:27:31,800
around that but my experience<font color="#E5E5E5"> tourism</font>

658
00:27:29,460 --> 00:27:34,410
I haven't<font color="#E5E5E5"> seen a whole</font><font color="#CCCCCC"> lot of data to</font>

659
00:27:31,800 --> 00:27:36,809
substantiate that<font color="#E5E5E5"> so what we've</font><font color="#CCCCCC"> been</font>

660
00:27:34,410 --> 00:27:39,930
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> Fido again is trying</font><font color="#CCCCCC"> to put</font>

661
00:27:36,809 --> 00:27:41,580
data<font color="#CCCCCC"> behind</font><font color="#E5E5E5"> that to understand what that</font>

662
00:27:39,930 --> 00:27:44,400
looks like and<font color="#E5E5E5"> then where the inflection</font>

663
00:27:41,580 --> 00:27:46,860
<font color="#CCCCCC">point is so we're we have we're</font>

664
00:27:44,400 --> 00:27:48,720
benchmarking today is we're benchmarking

665
00:27:46,860 --> 00:27:50,490
<font color="#CCCCCC">at V&F service chain where you have a</font>

666
00:27:48,720 --> 00:27:54,030
whole<font color="#E5E5E5"> books or a whole</font><font color="#CCCCCC"> bunch of virtual</font>

667
00:27:50,490 --> 00:27:56,580
machines in a chain<font color="#E5E5E5"> all connected by a V</font>

668
00:27:54,030 --> 00:27:58,800
switch and then<font color="#E5E5E5"> we also have the same</font>

669
00:27:56,580 --> 00:28:00,620
setup<font color="#CCCCCC"> where as a container service chain</font>

670
00:27:58,800 --> 00:28:03,690
again<font color="#CCCCCC"> a whole bunch</font><font color="#E5E5E5"> of containers</font>

671
00:28:00,620 --> 00:28:05,879
connected<font color="#E5E5E5"> by a V switch and then we</font><font color="#CCCCCC"> also</font>

672
00:28:03,690 --> 00:28:07,920
have a container pipeline<font color="#E5E5E5"> where the</font>

673
00:28:05,880 --> 00:28:09,120
container where<font color="#CCCCCC"> you you</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> inject pack</font>

674
00:28:07,920 --> 00:28:10,620
it into<font color="#E5E5E5"> the first container and then</font>

675
00:28:09,120 --> 00:28:12,330
they just pass it<font color="#E5E5E5"> each other</font><font color="#CCCCCC"> also to</font>

676
00:28:10,620 --> 00:28:15,449
understand what they<font color="#E5E5E5"> a</font><font color="#CCCCCC"> point-to-point</font>

677
00:28:12,330 --> 00:28:18,710
<font color="#E5E5E5">performance looks</font><font color="#CCCCCC"> like so and in that</font>

678
00:28:15,450 --> 00:28:21,090
way what we do<font color="#E5E5E5"> again is we test with one</font>

679
00:28:18,710 --> 00:28:23,250
<font color="#CCCCCC">sorry one virtual machine on the switch</font>

680
00:28:21,090 --> 00:28:25,080
we test with<font color="#E5E5E5"> two virtual machines for</font>

681
00:28:23,250 --> 00:28:26,580
virtual machines<font color="#CCCCCC"> eight virtual machines</font>

682
00:28:25,080 --> 00:28:28,949
we test with<font color="#E5E5E5"> one container or two</font>

683
00:28:26,580 --> 00:28:31,439
<font color="#CCCCCC">containers for containers</font><font color="#E5E5E5"> a containers</font>

684
00:28:28,950 --> 00:28:33,150
and then we you know<font color="#E5E5E5"> we typically test</font>

685
00:28:31,440 --> 00:28:35,220
again<font color="#CCCCCC"> you get the idea of labor at</font><font color="#E5E5E5"> the</font>

686
00:28:33,150 --> 00:28:37,590
<font color="#E5E5E5">point across all the packet sizes and we</font>

687
00:28:35,220 --> 00:28:39,809
produce this kind<font color="#E5E5E5"> of data</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can</font>

688
00:28:37,590 --> 00:28:42,149
see here<font color="#E5E5E5"> that again that illustrates</font>

689
00:28:39,809 --> 00:28:44,790
very<font color="#E5E5E5"> well where the inflection</font><font color="#CCCCCC"> point is</font>

690
00:28:42,150 --> 00:28:46,590
for you know where when you start

691
00:28:44,790 --> 00:28:48,540
together<font color="#CCCCCC"> a</font><font color="#E5E5E5"> switch over cost in</font>

692
00:28:46,590 --> 00:28:50,820
performance from containers versus

693
00:28:48,540 --> 00:28:54,300
virtual machines<font color="#E5E5E5"> I've got one minute</font>

694
00:28:50,820 --> 00:28:56,129
<font color="#CCCCCC">left to go so tree</font><font color="#E5E5E5"> problem statements</font>

695
00:28:54,300 --> 00:28:58,620
that<font color="#CCCCCC"> were</font><font color="#E5E5E5"> working on ensuring that you</font>

696
00:28:56,130 --> 00:29:02,940
don't lose your performance

697
00:28:58,620 --> 00:29:04,500
as your<font color="#E5E5E5"> as your data plane evolves also</font>

698
00:29:02,940 --> 00:29:06,059
understanding where performance

699
00:29:04,500 --> 00:29:09,360
regressions are coming<font color="#CCCCCC"> from</font><font color="#E5E5E5"> are the next</font>

700
00:29:06,059 --> 00:29:12,090
<font color="#CCCCCC">level of information and then also how</font>

701
00:29:09,360 --> 00:29:15,030
cloud<font color="#E5E5E5"> how data planes perform in a cloud</font>

702
00:29:12,090 --> 00:29:17,550
native<font color="#E5E5E5"> environment so that's the</font><font color="#CCCCCC"> fight</font>

703
00:29:15,030 --> 00:29:20,910
<font color="#E5E5E5">OCC project it's an open and</font><font color="#CCCCCC"> welcoming</font>

704
00:29:17,550 --> 00:29:23,399
project and same as every other open

705
00:29:20,910 --> 00:29:26,040
<font color="#E5E5E5">source project there's always there's</font>

706
00:29:23,400 --> 00:29:29,270
<font color="#E5E5E5">always plenty to do so we'd love</font><font color="#CCCCCC"> to love</font>

707
00:29:26,040 --> 00:29:29,270
<font color="#CCCCCC">to see you turn</font><font color="#E5E5E5"> up any</font><font color="#CCCCCC"> questions</font>

708
00:29:32,299 --> 00:29:42,099
<font color="#E5E5E5">okay thank you very much</font>

709
00:29:34,310 --> 00:29:42,099
[Applause]

