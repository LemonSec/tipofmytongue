1
00:00:07,930 --> 00:00:17,869
<font color="#CCCCCC">infrastructure and services thanks right</font>

2
00:00:14,420 --> 00:00:20,090
and I'm<font color="#E5E5E5"> not talking just about testing</font>

3
00:00:17,869 --> 00:00:22,189
your<font color="#E5E5E5"> infrastructure</font><font color="#CCCCCC"> and services in OPN</font>

4
00:00:20,090 --> 00:00:24,380
<font color="#CCCCCC">Fe</font><font color="#E5E5E5"> actually the point of this talk is</font><font color="#CCCCCC"> to</font>

5
00:00:22,189 --> 00:00:25,610
show you how<font color="#CCCCCC"> you can use the</font><font color="#E5E5E5"> OPN if you</font>

6
00:00:24,380 --> 00:00:27,500
test tools to test your own

7
00:00:25,610 --> 00:00:30,399
infrastructure<font color="#CCCCCC"> regardless of whether</font>

8
00:00:27,500 --> 00:00:32,689
you're already<font color="#E5E5E5"> a user or</font><font color="#CCCCCC"> whether you</font>

9
00:00:30,399 --> 00:00:34,579
deploy it in really<font color="#E5E5E5"> large environments</font>

10
00:00:32,689 --> 00:00:39,469
or are<font color="#CCCCCC"> just</font><font color="#E5E5E5"> interested in benchmarking</font>

11
00:00:34,579 --> 00:00:41,780
small components so there's typically

12
00:00:39,469 --> 00:00:44,079
two goals<font color="#CCCCCC"> this</font><font color="#E5E5E5"> talk first to create</font>

13
00:00:41,780 --> 00:00:47,089
awareness of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> OPN</font><font color="#E5E5E5"> if you test tools</font>

14
00:00:44,079 --> 00:00:49,160
we want<font color="#E5E5E5"> to target</font><font color="#CCCCCC"> users who are already</font>

15
00:00:47,089 --> 00:00:52,730
<font color="#E5E5E5">looking at</font><font color="#CCCCCC"> nfe deployments but also</font>

16
00:00:49,160 --> 00:00:55,339
users<font color="#E5E5E5"> are interested in other kind of</font>

17
00:00:52,730 --> 00:00:57,319
<font color="#E5E5E5">use cases outside</font><font color="#CCCCCC"> the nfe domain because</font>

18
00:00:55,339 --> 00:01:01,219
<font color="#E5E5E5">we think these tools are actually quite</font>

19
00:00:57,320 --> 00:01:03,260
useful<font color="#E5E5E5"> even outside</font><font color="#CCCCCC"> nfe and the point of</font>

20
00:01:01,219 --> 00:01:06,740
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> to try and trigger discussion</font>

21
00:01:03,260 --> 00:01:10,579
about the evolution of<font color="#E5E5E5"> these test tools</font>

22
00:01:06,740 --> 00:01:15,048
<font color="#E5E5E5">and find out how they</font><font color="#CCCCCC"> can evolve and how</font>

23
00:01:10,579 --> 00:01:17,240
<font color="#CCCCCC">they can be modified</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> meet existing</font>

24
00:01:15,049 --> 00:01:20,570
<font color="#E5E5E5">use cases and</font><font color="#CCCCCC"> also to address some</font>

25
00:01:17,240 --> 00:01:23,360
emerging ones like for<font color="#E5E5E5"> example native h</font>

26
00:01:20,570 --> 00:01:26,600
computing<font color="#CCCCCC"> perhaps things like enterprise</font>

27
00:01:23,360 --> 00:01:28,899
or<font color="#CCCCCC"> IOT and definitely</font><font color="#E5E5E5"> a lot in the Sdn</font>

28
00:01:26,600 --> 00:01:28,899
domain

29
00:01:31,940 --> 00:01:36,440
so for anyone<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> not familiar with</font>

30
00:01:34,250 --> 00:01:38,810
<font color="#E5E5E5">OPN</font><font color="#CCCCCC"> efi it's the open platform for</font>

31
00:01:36,440 --> 00:01:41,899
network function virtualization<font color="#CCCCCC"> it's a</font>

32
00:01:38,810 --> 00:01:44,619
<font color="#E5E5E5">linux foundation</font><font color="#CCCCCC"> Network project and it</font>

33
00:01:41,900 --> 00:01:47,900
provides<font color="#E5E5E5"> system level integration</font>

34
00:01:44,619 --> 00:01:49,400
<font color="#E5E5E5">deployment and testing so basically what</font>

35
00:01:47,900 --> 00:01:54,020
we do is<font color="#E5E5E5"> produce a reference platform</font>

36
00:01:49,400 --> 00:01:56,720
<font color="#E5E5E5">for</font><font color="#CCCCCC"> nfe</font><font color="#E5E5E5"> and also</font><font color="#CCCCCC"> produce requirements</font>

37
00:01:54,020 --> 00:01:59,090
for other upstream projects for

38
00:01:56,720 --> 00:02:04,220
extending those<font color="#E5E5E5"> with features - make</font>

39
00:01:59,090 --> 00:02:05,390
them more<font color="#CCCCCC"> nfe friendly so something like</font>

40
00:02:04,220 --> 00:02:08,840
this

41
00:02:05,390 --> 00:02:11,090
we provide requirements and features

42
00:02:08,840 --> 00:02:15,620
<font color="#E5E5E5">into the upstream other upstream</font>

43
00:02:11,090 --> 00:02:20,170
projects like OpenStack or OBS and then

44
00:02:15,620 --> 00:02:23,180
we implement<font color="#CCCCCC"> those features and update</font>

45
00:02:20,170 --> 00:02:26,390
installation tools to actually be able

46
00:02:23,180 --> 00:02:29,380
to<font color="#E5E5E5"> configure and deploy these features</font>

47
00:02:26,390 --> 00:02:35,839
<font color="#E5E5E5">and then once we have that deployment</font>

48
00:02:29,380 --> 00:02:38,269
<font color="#E5E5E5">created and poised we we take our tools</font>

49
00:02:35,840 --> 00:02:39,950
<font color="#E5E5E5">and we run various functional and</font>

50
00:02:38,269 --> 00:02:45,560
non-functional tests against these

51
00:02:39,950 --> 00:02:48,380
deployments so typically the tests will

52
00:02:45,560 --> 00:02:52,870
cover all kinds<font color="#E5E5E5"> of resources in the</font>

53
00:02:48,380 --> 00:02:56,180
stack so<font color="#CCCCCC"> we</font><font color="#E5E5E5"> talked about the NFS</font>

54
00:02:52,870 --> 00:02:59,750
monolayers<font color="#CCCCCC"> vim there is also</font><font color="#E5E5E5"> a data</font>

55
00:02:56,180 --> 00:03:03,290
plane and as part of<font color="#CCCCCC"> the OPF you</font>

56
00:02:59,750 --> 00:03:05,299
community lab there is<font color="#E5E5E5"> some a lot of</font>

57
00:03:03,290 --> 00:03:08,679
donated<font color="#CCCCCC"> hardware in different Pharos</font>

58
00:03:05,299 --> 00:03:12,860
labs around the<font color="#CCCCCC"> world that allow you to</font>

59
00:03:08,680 --> 00:03:14,239
reserve some<font color="#E5E5E5"> time and actually use some</font>

60
00:03:12,860 --> 00:03:18,290
community<font color="#E5E5E5"> hardware to test these</font>

61
00:03:14,239 --> 00:03:22,570
features<font color="#CCCCCC"> or to help develop</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> newer</font>

62
00:03:18,290 --> 00:03:22,570
<font color="#E5E5E5">features in upstream projects</font>

63
00:03:25,180 --> 00:03:31,420
<font color="#E5E5E5">okay so in</font><font color="#CCCCCC"> terms of test tools</font><font color="#E5E5E5"> our test</font>

64
00:03:29,780 --> 00:03:34,280
ecosystem looks<font color="#E5E5E5"> a little bit like this</font>

65
00:03:31,420 --> 00:03:37,839
<font color="#CCCCCC">we have functional testing in the form</font>

66
00:03:34,280 --> 00:03:43,510
of<font color="#E5E5E5"> func</font><font color="#CCCCCC"> test</font><font color="#E5E5E5"> and then a bunch of</font>

67
00:03:37,840 --> 00:03:43,510
<font color="#E5E5E5">performance and benchmarking testing</font><font color="#CCCCCC"> a</font>

68
00:03:44,140 --> 00:03:51,589
<font color="#E5E5E5">spread up like so with these other</font>

69
00:03:47,360 --> 00:03:53,420
<font color="#E5E5E5">projects and one use case for these is</font>

70
00:03:51,590 --> 00:03:56,000
actually<font color="#CCCCCC"> in the open fe compliance</font>

71
00:03:53,420 --> 00:03:58,458
verification<font color="#E5E5E5"> program known as dovetail</font>

72
00:03:56,000 --> 00:04:02,120
which consumes<font color="#E5E5E5"> tests from all of these</font>

73
00:03:58,459 --> 00:04:03,680
<font color="#E5E5E5">components and lets you run this test</font>

74
00:04:02,120 --> 00:04:04,880
suite against<font color="#E5E5E5"> your deployment to know</font>

75
00:04:03,680 --> 00:04:09,680
whether<font color="#E5E5E5"> or</font><font color="#CCCCCC"> not you actually meet the</font>

76
00:04:04,880 --> 00:04:12,709
requirements to<font color="#E5E5E5"> run certain and a few</font>

77
00:04:09,680 --> 00:04:17,690
workloads<font color="#E5E5E5"> okay</font>

78
00:04:12,709 --> 00:04:21,738
so you start off with<font color="#E5E5E5"> func test this is</font>

79
00:04:17,690 --> 00:04:26,979
our functional testing tool and func

80
00:04:21,738 --> 00:04:26,979
test does is it allows<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to run</font>

81
00:04:28,479 --> 00:04:34,280
<font color="#E5E5E5">functional tests against your VIN so</font>

82
00:04:32,870 --> 00:04:37,550
that<font color="#E5E5E5"> may be kubernetes or</font><font color="#CCCCCC"> maybe</font>

83
00:04:34,280 --> 00:04:40,789
OpenStack and<font color="#E5E5E5"> functors doesn't actually</font>

84
00:04:37,550 --> 00:04:45,500
provide<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot new what it does it gives</font>

85
00:04:40,789 --> 00:04:49,010
<font color="#E5E5E5">you one one tool</font><font color="#CCCCCC"> to use to</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to</font>

86
00:04:45,500 --> 00:04:51,080
<font color="#CCCCCC">run tests</font><font color="#E5E5E5"> across multiple standard</font>

87
00:04:49,010 --> 00:04:52,909
OpenStack tools or multiple<font color="#E5E5E5"> standard</font>

88
00:04:51,080 --> 00:04:57,979
communities tools that<font color="#CCCCCC"> are used so for</font>

89
00:04:52,910 --> 00:05:02,539
example in OpenStack<font color="#CCCCCC"> the</font><font color="#E5E5E5"> func test test</font>

90
00:04:57,979 --> 00:05:05,270
suite<font color="#CCCCCC"> would consist of</font><font color="#E5E5E5"> a lot of tempest</font>

91
00:05:02,539 --> 00:05:07,510
<font color="#E5E5E5">rally shaker tests and a bunch of others</font>

92
00:05:05,270 --> 00:05:11,930
as well<font color="#E5E5E5"> so it just</font><font color="#CCCCCC"> gives</font><font color="#E5E5E5"> you one source</font>

93
00:05:07,510 --> 00:05:17,419
<font color="#CCCCCC">one point or one interface to use</font><font color="#E5E5E5"> to</font>

94
00:05:11,930 --> 00:05:20,060
actually<font color="#E5E5E5"> test these these systems there</font>

95
00:05:17,419 --> 00:05:23,479
is also some vnf testing in there as

96
00:05:20,060 --> 00:05:27,710
well and in terms of kubernetes<font color="#E5E5E5"> it's at</font>

97
00:05:23,479 --> 00:05:31,669
the moment just supports<font color="#E5E5E5"> I think one or</font>

98
00:05:27,710 --> 00:05:35,400
two standard<font color="#E5E5E5"> set of tests but upstream</font>

99
00:05:31,669 --> 00:05:39,539
in the OPN<font color="#CCCCCC"> FEI this is run</font>

100
00:05:35,400 --> 00:05:41,489
you know this is run against our daily

101
00:05:39,540 --> 00:05:44,940
<font color="#E5E5E5">bills and it can be run in your</font>

102
00:05:41,490 --> 00:05:47,360
deployment from patch the verification

103
00:05:44,940 --> 00:05:52,889
all the way up to nightly<font color="#CCCCCC"> bills and</font>

104
00:05:47,360 --> 00:05:54,870
release gauging<font color="#E5E5E5"> in terms of how</font><font color="#CCCCCC"> its</font>

105
00:05:52,889 --> 00:05:57,600
packaged<font color="#CCCCCC"> if you want to use</font><font color="#E5E5E5"> func</font><font color="#CCCCCC"> test</font>

106
00:05:54,870 --> 00:05:59,669
<font color="#E5E5E5">you can pull</font><font color="#CCCCCC"> down a docker container and</font>

107
00:05:57,600 --> 00:06:01,520
get<font color="#E5E5E5"> started</font><font color="#CCCCCC"> immediately and there is</font>

108
00:05:59,669 --> 00:06:05,750
some very<font color="#CCCCCC"> very comprehensive</font>

109
00:06:01,520 --> 00:06:13,320
documentation<font color="#E5E5E5"> available on the wiki</font>

110
00:06:05,750 --> 00:06:14,940
<font color="#E5E5E5">let's see if I got everything and does</font>

111
00:06:13,320 --> 00:06:24,080
anybody have any<font color="#E5E5E5"> questions at</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> stage</font>

112
00:06:14,940 --> 00:06:27,330
<font color="#CCCCCC">about func test comments nope okay</font><font color="#E5E5E5"> well</font>

113
00:06:24,080 --> 00:06:31,889
next<font color="#CCCCCC"> up is your</font><font color="#E5E5E5"> stick and yeah stick is</font>

114
00:06:27,330 --> 00:06:37,139
<font color="#E5E5E5">the infrastructure</font><font color="#CCCCCC"> verification project</font>

115
00:06:31,889 --> 00:06:40,530
within<font color="#E5E5E5"> OPN</font><font color="#CCCCCC"> Fe and justic consists of two</font>

116
00:06:37,139 --> 00:06:43,530
parts<font color="#E5E5E5"> there is a set of test</font><font color="#CCCCCC"> cases that</font>

117
00:06:40,530 --> 00:06:45,479
<font color="#E5E5E5">it</font><font color="#CCCCCC"> actually runs</font><font color="#E5E5E5"> and also this yardstick</font>

118
00:06:43,530 --> 00:06:48,960
<font color="#E5E5E5">is the framework which is the</font><font color="#CCCCCC"> part that</font>

119
00:06:45,479 --> 00:06:52,349
<font color="#CCCCCC">you can extend to to meet your own</font><font color="#E5E5E5"> use</font>

120
00:06:48,960 --> 00:06:54,900
cases<font color="#E5E5E5"> so in terms of framework</font>

121
00:06:52,349 --> 00:06:58,050
meowstic provides a bunch of test

122
00:06:54,900 --> 00:07:00,900
functions such as scenarios<font color="#E5E5E5"> that let you</font>

123
00:06:58,050 --> 00:07:03,180
customize your test steps and also if

124
00:07:00,900 --> 00:07:05,010
you want<font color="#E5E5E5"> to integrate some additional</font>

125
00:07:03,180 --> 00:07:08,039
test tools into it this<font color="#E5E5E5"> is a point of</font>

126
00:07:05,010 --> 00:07:09,780
extension it supports running tests in

127
00:07:08,039 --> 00:07:12,000
multiple different contexts<font color="#CCCCCC"> so you can</font>

128
00:07:09,780 --> 00:07:13,940
run<font color="#E5E5E5"> it against a kubernetes or an</font><font color="#CCCCCC"> open</font>

129
00:07:12,000 --> 00:07:16,169
<font color="#CCCCCC">stack deployment and have those</font>

130
00:07:13,940 --> 00:07:18,750
provision<font color="#E5E5E5"> in your</font><font color="#CCCCCC"> environment for you or</font>

131
00:07:16,169 --> 00:07:20,549
you can<font color="#E5E5E5"> say</font><font color="#CCCCCC"> hey yardstick I have some</font>

132
00:07:18,750 --> 00:07:26,400
<font color="#CCCCCC">Hardware over</font><font color="#E5E5E5"> here this</font><font color="#CCCCCC"> is where you run</font>

133
00:07:20,550 --> 00:07:28,260
the tests there's also a number<font color="#E5E5E5"> of test</font>

134
00:07:26,400 --> 00:07:30,810
runners that let you<font color="#CCCCCC"> define how the test</font>

135
00:07:28,260 --> 00:07:36,090
<font color="#E5E5E5">is actually run and when metric</font><font color="#CCCCCC"> want to</font>

136
00:07:30,810 --> 00:07:39,720
collect<font color="#E5E5E5"> the metrics during the test</font><font color="#CCCCCC"> yo</font>

137
00:07:36,090 --> 00:07:42,359
stick is a benchmarking<font color="#CCCCCC"> tool but it can</font>

138
00:07:39,720 --> 00:07:45,840
<font color="#CCCCCC">also be</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> to do some functional</font>

139
00:07:42,360 --> 00:07:47,169
testing as well and<font color="#E5E5E5"> also provides the</font>

140
00:07:45,840 --> 00:07:49,388
<font color="#CCCCCC">ability to define</font>

141
00:07:47,169 --> 00:07:52,270
certain service level agreements or SLA

142
00:07:49,389 --> 00:07:55,689
s<font color="#E5E5E5"> to determine whether or not your</font>

143
00:07:52,270 --> 00:08:00,219
<font color="#E5E5E5">system passes or fails and it also</font>

144
00:07:55,689 --> 00:08:04,990
supports<font color="#E5E5E5"> reporting of</font><font color="#CCCCCC"> results through in</font>

145
00:08:00,219 --> 00:08:08,349
vaak siddhi or as JSON format into a

146
00:08:04,990 --> 00:08:10,740
file and also reporting<font color="#CCCCCC"> over HTTP if you</font>

147
00:08:08,349 --> 00:08:14,620
want to<font color="#E5E5E5"> integrate it into</font><font color="#CCCCCC"> your own</font>

148
00:08:10,740 --> 00:08:17,409
systems<font color="#E5E5E5"> the second part of yardstick is</font>

149
00:08:14,620 --> 00:08:19,749
the test cases<font color="#E5E5E5"> and these are already</font>

150
00:08:17,409 --> 00:08:22,449
<font color="#E5E5E5">existing test cases they're defined in</font>

151
00:08:19,749 --> 00:08:25,150
<font color="#CCCCCC">llamo and we make use of the ginger</font>

152
00:08:22,449 --> 00:08:27,550
templating<font color="#E5E5E5"> format so</font><font color="#CCCCCC"> that you can</font>

153
00:08:25,150 --> 00:08:29,948
actually take<font color="#E5E5E5"> existing test cases and</font>

154
00:08:27,550 --> 00:08:32,079
modify<font color="#E5E5E5"> those instead and</font><font color="#CCCCCC"> it's parameters</font>

155
00:08:29,949 --> 00:08:36,820
<font color="#E5E5E5">to actually meet your testing</font>

156
00:08:32,078 --> 00:08:39,189
requirements and the same<font color="#E5E5E5"> as Fung test</font>

157
00:08:36,820 --> 00:08:44,320
<font color="#CCCCCC">it is packaged in a docker container so</font>

158
00:08:39,190 --> 00:08:47,290
<font color="#CCCCCC">you can pull that down and</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> it and we</font>

159
00:08:44,320 --> 00:08:50,560
do collect performance metrics using

160
00:08:47,290 --> 00:08:55,199
yardstick<font color="#E5E5E5"> and there's also the ability</font>

161
00:08:50,560 --> 00:08:57,670
to<font color="#CCCCCC"> use something like</font><font color="#E5E5E5"> collecti or</font>

162
00:08:55,199 --> 00:09:01,540
<font color="#E5E5E5">barometer which is a OPN</font><font color="#CCCCCC"> EFI's</font>

163
00:08:57,670 --> 00:09:05,040
extensions<font color="#E5E5E5"> to collect in FBI metrics</font>

164
00:09:01,540 --> 00:09:10,510
while you're actually<font color="#CCCCCC"> doing testing and</font>

165
00:09:05,040 --> 00:09:12,550
<font color="#E5E5E5">different parts of your system</font><font color="#CCCCCC"> and there</font>

166
00:09:10,510 --> 00:09:16,300
<font color="#E5E5E5">are some already existing use cases and</font>

167
00:09:12,550 --> 00:09:18,550
already different scenarios that<font color="#E5E5E5"> we</font>

168
00:09:16,300 --> 00:09:20,170
already test<font color="#E5E5E5"> so if you wanted to pull</font>

169
00:09:18,550 --> 00:09:23,649
<font color="#E5E5E5">down your</font><font color="#CCCCCC"> eye stick now and use it out</font>

170
00:09:20,170 --> 00:09:25,540
of the box<font color="#E5E5E5"> you can do things like high</font>

171
00:09:23,649 --> 00:09:29,709
availability<font color="#E5E5E5"> how</font><font color="#CCCCCC"> I availability test</font>

172
00:09:25,540 --> 00:09:31,630
cases<font color="#E5E5E5"> which basically says you can start</font>

173
00:09:29,709 --> 00:09:35,050
taking<font color="#CCCCCC"> down services I</font><font color="#E5E5E5"> want to see how</font>

174
00:09:31,630 --> 00:09:37,480
long it<font color="#CCCCCC"> takes</font><font color="#E5E5E5"> to recover it also</font>

175
00:09:35,050 --> 00:09:40,060
<font color="#E5E5E5">integrates a number of the other test</font>

176
00:09:37,480 --> 00:09:42,100
tools<font color="#CCCCCC"> in OPN Fe so Store proof and bs</font>

177
00:09:40,060 --> 00:09:45,760
perf have some integration in there so

178
00:09:42,100 --> 00:09:50,470
you<font color="#E5E5E5"> can use yardstick</font><font color="#CCCCCC"> to run those tools</font>

179
00:09:45,760 --> 00:09:54,310
as<font color="#E5E5E5"> well and it also supports</font><font color="#CCCCCC"> NF</font><font color="#E5E5E5"> e I and</font>

180
00:09:50,470 --> 00:09:57,340
<font color="#CCCCCC">v NF characterization as well which</font><font color="#E5E5E5"> also</font>

181
00:09:54,310 --> 00:10:00,310
which provides you automations on top of

182
00:09:57,340 --> 00:10:03,460
of traffic generators<font color="#E5E5E5"> and also</font><font color="#CCCCCC"> sports</font><font color="#E5E5E5"> a</font>

183
00:10:00,310 --> 00:10:04,869
bunch of reference vnfs and also

184
00:10:03,460 --> 00:10:09,000
commercial<font color="#CCCCCC"> vnfs if you want to do</font>

185
00:10:04,870 --> 00:10:11,350
characterization of those that's

186
00:10:09,000 --> 00:10:19,330
yardstick<font color="#E5E5E5"> does anybody have any</font>

187
00:10:11,350 --> 00:10:21,370
questions<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> stage ok</font><font color="#E5E5E5"> so next up is</font>

188
00:10:19,330 --> 00:10:28,240
<font color="#E5E5E5">the bottlenecks project which does</font>

189
00:10:21,370 --> 00:10:31,360
system limit testing and bottlenecks

190
00:10:28,240 --> 00:10:35,230
<font color="#E5E5E5">aims to identify bottlenecks in your</font>

191
00:10:31,360 --> 00:10:38,290
performance<font color="#CCCCCC"> it does this</font><font color="#E5E5E5"> by consuming</font>

192
00:10:35,230 --> 00:10:40,030
test cases<font color="#CCCCCC"> from some of the other test</font>

193
00:10:38,290 --> 00:10:42,280
tools so it'll consume some funk<font color="#E5E5E5"> tests</font>

194
00:10:40,030 --> 00:10:47,740
test cases yardstick test cases and also

195
00:10:42,280 --> 00:10:50,020
<font color="#CCCCCC">some nfe bench test cases and we'll</font>

196
00:10:47,740 --> 00:10:53,680
adjust the parameters of<font color="#E5E5E5"> those to design</font>

197
00:10:50,020 --> 00:10:55,270
some very<font color="#E5E5E5"> stressful tests and then you</font>

198
00:10:53,680 --> 00:10:57,520
can think<font color="#CCCCCC"> of bottlenecks as a scheduler</font>

199
00:10:55,270 --> 00:11:00,400
because<font color="#E5E5E5"> it'll run those tests multiple</font>

200
00:10:57,520 --> 00:11:02,500
times<font color="#E5E5E5"> either lapping or over a long long</font>

201
00:11:00,400 --> 00:11:04,240
periods of time<font color="#E5E5E5"> there's a lot of</font>

202
00:11:02,500 --> 00:11:09,340
flexibility<font color="#E5E5E5"> there and it will collect</font>

203
00:11:04,240 --> 00:11:12,910
<font color="#E5E5E5">metrics</font><font color="#CCCCCC"> while</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> doing this from</font>

204
00:11:09,340 --> 00:11:14,950
barometer and<font color="#CCCCCC"> Prometheus so if you use</font>

205
00:11:12,910 --> 00:11:17,020
<font color="#E5E5E5">it for example OpenStack you can also</font>

206
00:11:14,950 --> 00:11:18,940
pull a bunch of<font color="#CCCCCC"> metrics about</font><font color="#E5E5E5"> how the</font>

207
00:11:17,020 --> 00:11:20,800
OpenStack<font color="#E5E5E5"> services are doing</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> well as</font>

208
00:11:18,940 --> 00:11:23,920
seeing what's<font color="#CCCCCC"> happening with</font><font color="#E5E5E5"> your</font>

209
00:11:20,800 --> 00:11:28,290
infrastructure<font color="#E5E5E5"> and</font><font color="#CCCCCC"> getting metrics</font><font color="#E5E5E5"> from</font>

210
00:11:23,920 --> 00:11:31,000
things like<font color="#CCCCCC"> you deep decay or OBS or</font>

211
00:11:28,290 --> 00:11:33,790
memory CPU and<font color="#E5E5E5"> other system resources</font>

212
00:11:31,000 --> 00:11:38,350
<font color="#CCCCCC">and bottom excellent integrates this</font>

213
00:11:33,790 --> 00:11:41,230
into the founder based<font color="#E5E5E5"> dashboard</font><font color="#CCCCCC"> that</font>

214
00:11:38,350 --> 00:11:46,240
<font color="#CCCCCC">you can actually use to quickly</font><font color="#E5E5E5"> pinpoint</font>

215
00:11:41,230 --> 00:11:53,850
<font color="#E5E5E5">the pinch points in your system</font>

216
00:11:46,240 --> 00:11:59,440
and see<font color="#CCCCCC"> its collects Patrick's and</font>

217
00:11:53,850 --> 00:12:01,240
produces a<font color="#E5E5E5"> also a</font><font color="#CCCCCC"> pass-fail</font><font color="#E5E5E5"> out push you</font>

218
00:11:59,440 --> 00:12:04,270
can use this from<font color="#E5E5E5"> a darker container as</font>

219
00:12:01,240 --> 00:12:06,520
<font color="#CCCCCC">well this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a way that</font><font color="#E5E5E5"> most of the test</font>

220
00:12:04,270 --> 00:12:13,060
tools are actually packaged at the

221
00:12:06,520 --> 00:12:15,579
<font color="#E5E5E5">moment and in terms of extensibility you</font>

222
00:12:13,060 --> 00:12:18,010
can<font color="#E5E5E5"> add more test</font><font color="#CCCCCC"> cases to it or you can</font>

223
00:12:15,580 --> 00:12:20,890
<font color="#E5E5E5">modify the test cases that are there to</font>

224
00:12:18,010 --> 00:12:23,439
<font color="#E5E5E5">meet your own</font><font color="#CCCCCC"> requirements</font><font color="#E5E5E5"> and if you</font>

225
00:12:20,890 --> 00:12:25,029
have other test tools it's a fairly

226
00:12:23,440 --> 00:12:28,149
<font color="#CCCCCC">straightforward process to actually</font>

227
00:12:25,029 --> 00:12:31,839
integrate<font color="#E5E5E5"> those into bottlenecks to use</font>

228
00:12:28,149 --> 00:12:33,670
it for the system<font color="#CCCCCC"> it's testing does</font>

229
00:12:31,839 --> 00:12:39,550
anyone have any<font color="#E5E5E5"> questions about</font>

230
00:12:33,670 --> 00:12:46,000
bottlenecks moving on<font color="#CCCCCC"> Oh Chris there's a</font>

231
00:12:39,550 --> 00:12:51,430
question there<font color="#CCCCCC"> is a dashboard</font><font color="#E5E5E5"> we cannot</font>

232
00:12:46,000 --> 00:12:53,829
go look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> it now but if you go to the</font>

233
00:12:51,430 --> 00:12:57,010
bottlenecks wiki on<font color="#CCCCCC"> the it's part of</font><font color="#E5E5E5"> the</font>

234
00:12:53,829 --> 00:12:58,630
<font color="#E5E5E5">au prfd</font><font color="#CCCCCC"> wiki they provide lists of</font>

235
00:12:57,010 --> 00:13:00,189
instructions and<font color="#CCCCCC"> also how to use the</font>

236
00:12:58,630 --> 00:13:06,939
dashboard as well<font color="#E5E5E5"> and I believe</font><font color="#CCCCCC"> there</font>

237
00:13:00,190 --> 00:13:10,779
<font color="#CCCCCC">are a few general</font><font color="#E5E5E5"> videos as well so</font><font color="#CCCCCC"> next</font>

238
00:13:06,940 --> 00:13:13,360
up is vs perf which is one<font color="#E5E5E5"> of the two</font>

239
00:13:10,779 --> 00:13:19,990
<font color="#E5E5E5">tools we have for</font><font color="#CCCCCC"> n Fei data</font><font color="#E5E5E5"> plane</font>

240
00:13:13,360 --> 00:13:21,730
performance and vs perf is what it's

241
00:13:19,990 --> 00:13:28,360
used for optimizing<font color="#CCCCCC"> the performance of</font>

242
00:13:21,730 --> 00:13:30,010
your<font color="#E5E5E5"> V switch it's let's do and lets you</font>

243
00:13:28,360 --> 00:13:32,980
test out<font color="#E5E5E5"> different configurations in</font>

244
00:13:30,010 --> 00:13:36,160
your environment<font color="#CCCCCC"> to</font><font color="#E5E5E5"> determine what's the</font>

245
00:13:32,980 --> 00:13:38,050
best<font color="#CCCCCC"> configuration for your V switch</font>

246
00:13:36,160 --> 00:13:40,449
this is<font color="#E5E5E5"> done before you start deploying</font>

247
00:13:38,050 --> 00:13:42,699
any kind of them on<font color="#E5E5E5"> top of it this</font><font color="#CCCCCC"> is</font>

248
00:13:40,450 --> 00:13:47,020
base level performance<font color="#E5E5E5"> tuning for V</font>

249
00:13:42,700 --> 00:13:50,490
switches and there's a<font color="#E5E5E5"> number of these</font>

250
00:13:47,020 --> 00:13:53,920
switches supporters but<font color="#E5E5E5"> also you can run</font>

251
00:13:50,490 --> 00:13:55,480
you can<font color="#E5E5E5"> use vs / which a number of</font>

252
00:13:53,920 --> 00:14:00,689
different traffic<font color="#E5E5E5"> generators to actually</font>

253
00:13:55,480 --> 00:14:00,690
do the<font color="#E5E5E5"> load testing on the piece</font>

254
00:14:01,970 --> 00:14:07,380
it's generally run<font color="#E5E5E5"> in a pre-production</font>

255
00:14:04,620 --> 00:14:10,440
<font color="#CCCCCC">environment and</font><font color="#E5E5E5"> actually has been</font>

256
00:14:07,380 --> 00:14:16,530
<font color="#CCCCCC">responsible for the development of two</font>

257
00:14:10,440 --> 00:14:20,520
new<font color="#E5E5E5"> standards that that came from sexual</font>

258
00:14:16,530 --> 00:14:23,339
implementation so there is<font color="#CCCCCC"> these which</font>

259
00:14:20,520 --> 00:14:28,050
performance benchmarking it's an

260
00:14:23,340 --> 00:14:31,320
informational RFC<font color="#E5E5E5"> and is also a new one</font>

261
00:14:28,050 --> 00:14:33,620
that's<font color="#CCCCCC"> under review</font><font color="#E5E5E5"> at the moment</font><font color="#CCCCCC"> TST</font>

262
00:14:31,320 --> 00:14:37,530
<font color="#E5E5E5">0:09 which takes into account</font>

263
00:14:33,620 --> 00:14:39,510
benchmarking<font color="#CCCCCC"> your</font><font color="#E5E5E5"> V switch but also</font>

264
00:14:37,530 --> 00:14:41,660
<font color="#E5E5E5">taking into account intermittent</font>

265
00:14:39,510 --> 00:14:46,490
failures that may happen<font color="#E5E5E5"> in your system</font>

266
00:14:41,660 --> 00:14:46,490
<font color="#CCCCCC">like those are</font><font color="#E5E5E5"> not constantly there</font>

267
00:14:46,970 --> 00:14:50,940
excuse me

268
00:14:49,050 --> 00:14:53,849
in terms<font color="#E5E5E5"> of traffic</font><font color="#CCCCCC"> generator</font><font color="#E5E5E5"> support</font>

269
00:14:50,940 --> 00:14:59,250
you can run<font color="#E5E5E5"> your test cases with</font><font color="#CCCCCC"> Ixia</font>

270
00:14:53,850 --> 00:15:01,470
<font color="#CCCCCC">Spirent t gen</font><font color="#E5E5E5"> moon</font><font color="#CCCCCC"> gen Xena and I think</font>

271
00:14:59,250 --> 00:15:04,050
<font color="#CCCCCC">two more but it has a very comprehensive</font>

272
00:15:01,470 --> 00:15:09,690
support so<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can use whatever traffic</font>

273
00:15:04,050 --> 00:15:14,910
generator that you want with<font color="#CCCCCC"> us in terms</font>

274
00:15:09,690 --> 00:15:16,830
<font color="#E5E5E5">of usage</font><font color="#CCCCCC"> B as per flex you choose your B</font>

275
00:15:14,910 --> 00:15:18,270
switch<font color="#E5E5E5"> to traffic generator and the</font>

276
00:15:16,830 --> 00:15:23,000
units that<font color="#E5E5E5"> you want to use your test</font>

277
00:15:18,270 --> 00:15:27,390
case<font color="#E5E5E5"> and the test case can</font><font color="#CCCCCC"> be simple</font>

278
00:15:23,000 --> 00:15:33,270
<font color="#CCCCCC">five</font><font color="#E5E5E5"> to five benchmarking physical to</font>

279
00:15:27,390 --> 00:15:37,160
virtual or the physical virtual<font color="#E5E5E5"> physical</font>

280
00:15:33,270 --> 00:15:41,850
the some people<font color="#CCCCCC"> call it bunny ears</font><font color="#E5E5E5"> test</font>

281
00:15:37,160 --> 00:15:43,500
<font color="#E5E5E5">routing through two VMs but if you want</font>

282
00:15:41,850 --> 00:15:46,650
to extend it<font color="#E5E5E5"> you can support</font><font color="#CCCCCC"> multiple</font>

283
00:15:43,500 --> 00:15:51,000
different deployment options in vs perf

284
00:15:46,650 --> 00:15:52,670
so you're not<font color="#E5E5E5"> limited</font><font color="#CCCCCC"> to the the set</font>

285
00:15:51,000 --> 00:15:54,720
<font color="#E5E5E5">that's there you</font><font color="#CCCCCC"> can define other</font>

286
00:15:52,670 --> 00:15:56,520
traffic<font color="#CCCCCC"> routes or service function</font>

287
00:15:54,720 --> 00:15:58,670
chaining and use different<font color="#CCCCCC"> beam Epps's</font>

288
00:15:56,520 --> 00:15:58,670
all

289
00:15:58,720 --> 00:16:06,630
see<font color="#CCCCCC"> hey does anybody have</font><font color="#E5E5E5"> any questions</font>

290
00:16:04,000 --> 00:16:06,630
at this<font color="#CCCCCC"> point</font>

291
00:16:06,990 --> 00:16:13,990
<font color="#CCCCCC">No</font>

292
00:16:08,260 --> 00:16:15,610
okay next up is in a fee bench<font color="#E5E5E5"> and this</font>

293
00:16:13,990 --> 00:16:19,060
<font color="#E5E5E5">is slightly different from the other</font>

294
00:16:15,610 --> 00:16:27,280
tools in<font color="#E5E5E5"> that it's designed to be used</font>

295
00:16:19,060 --> 00:16:29,319
<font color="#E5E5E5">closer to production sees through</font>

296
00:16:27,280 --> 00:16:31,930
<font color="#CCCCCC">OpenStack systems and</font><font color="#E5E5E5"> there's a full</font>

297
00:16:29,320 --> 00:16:34,810
<font color="#E5E5E5">stack testing of your network</font>

298
00:16:31,930 --> 00:16:38,020
performance<font color="#CCCCCC"> all the way through your</font>

299
00:16:34,810 --> 00:16:41,650
system<font color="#CCCCCC"> it's designed</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> used very</font>

300
00:16:38,020 --> 00:16:44,560
late stage pre-production<font color="#E5E5E5"> so de0</font>

301
00:16:41,650 --> 00:16:48,280
capacity testing but<font color="#E5E5E5"> also when you're</font>

302
00:16:44,560 --> 00:16:51,160
considering extending<font color="#CCCCCC"> your extending</font>

303
00:16:48,280 --> 00:16:55,500
<font color="#E5E5E5">your</font><font color="#CCCCCC"> deployments</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> capacity planning</font>

304
00:16:51,160 --> 00:16:58,500
and<font color="#E5E5E5"> if you bench is used there</font><font color="#CCCCCC"> as well</font>

305
00:16:55,500 --> 00:16:58,500
it's

306
00:17:00,340 --> 00:17:07,959
well it's distributed in a container

307
00:17:04,449 --> 00:17:12,699
which<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> which contains and if you</font>

308
00:17:07,959 --> 00:17:14,980
bench itself but also<font color="#E5E5E5"> the t-rex traffic</font>

309
00:17:12,699 --> 00:17:17,770
generator as<font color="#CCCCCC"> well so you pop this</font><font color="#E5E5E5"> on to</font>

310
00:17:14,980 --> 00:17:18,490
<font color="#E5E5E5">your</font><font color="#CCCCCC"> system and you</font><font color="#E5E5E5"> can do your</font><font color="#CCCCCC"> j0</font>

311
00:17:17,770 --> 00:17:20,770
<font color="#CCCCCC">baselining</font>

312
00:17:18,490 --> 00:17:25,030
or you can do data<font color="#CCCCCC"> plane performance</font>

313
00:17:20,770 --> 00:17:27,459
monitoring<font color="#E5E5E5"> for each deployment like when</font>

314
00:17:25,030 --> 00:17:30,250
<font color="#E5E5E5">you're verifying in your compute</font><font color="#CCCCCC"> node</font><font color="#E5E5E5"> or</font>

315
00:17:27,459 --> 00:17:36,400
you can use<font color="#CCCCCC"> this as I said for capacity</font>

316
00:17:30,250 --> 00:17:39,160
planning as well extensibility<font color="#E5E5E5"> you can</font>

317
00:17:36,400 --> 00:17:43,960
modify the parameters of your<font color="#E5E5E5"> of your</font>

318
00:17:39,160 --> 00:17:46,690
<font color="#E5E5E5">test run and I don't know if I have</font>

319
00:17:43,960 --> 00:17:48,780
anything<font color="#E5E5E5"> else on this</font><font color="#CCCCCC"> oh and because</font>

320
00:17:46,690 --> 00:17:51,520
<font color="#E5E5E5">it's designed to be</font><font color="#CCCCCC"> used for</font><font color="#E5E5E5"> production</font>

321
00:17:48,780 --> 00:17:54,550
<font color="#E5E5E5">and if you bench</font><font color="#CCCCCC"> runs something</font><font color="#E5E5E5"> that's</font>

322
00:17:51,520 --> 00:17:57,330
similar to RFC<font color="#E5E5E5"> 254 for book collects a</font>

323
00:17:54,550 --> 00:18:00,190
few<font color="#E5E5E5"> additional metrics including</font>

324
00:17:57,330 --> 00:18:01,389
collecting<font color="#E5E5E5"> your you partial drop rate</font>

325
00:18:00,190 --> 00:18:03,550
and that's<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> you can</font>

326
00:18:01,390 --> 00:18:05,050
configure during a test run as well what

327
00:18:03,550 --> 00:18:10,149
kind of loss<font color="#CCCCCC"> that you're willing to</font>

328
00:18:05,050 --> 00:18:12,280
<font color="#E5E5E5">actually tolerate so almost there</font><font color="#CCCCCC"> the</font>

329
00:18:10,150 --> 00:18:15,540
next<font color="#CCCCCC"> one is does anyone</font><font color="#E5E5E5"> have any</font>

330
00:18:12,280 --> 00:18:15,540
<font color="#E5E5E5">questions on</font><font color="#CCCCCC"> nfe bench</font>

331
00:18:23,760 --> 00:18:28,570
you can do additional configuration but

332
00:18:26,590 --> 00:18:32,320
most<font color="#E5E5E5"> of the tools they're good to go</font>

333
00:18:28,570 --> 00:18:33,970
<font color="#E5E5E5">when you install the docker container</font>

334
00:18:32,320 --> 00:18:35,710
when you pull it down<font color="#E5E5E5"> you may have to</font>

335
00:18:33,970 --> 00:18:48,970
provide<font color="#CCCCCC"> credentials and locations for</font>

336
00:18:35,710 --> 00:18:52,210
your OpenStack deployment though<font color="#E5E5E5"> okay</font>

337
00:18:48,970 --> 00:18:53,740
next up is torpor<font color="#E5E5E5"> which measures the</font>

338
00:18:52,210 --> 00:18:56,980
<font color="#CCCCCC">performance of block storage</font><font color="#E5E5E5"> and</font>

339
00:18:53,740 --> 00:19:05,830
ephemeral storage at a<font color="#E5E5E5"> VM level and this</font>

340
00:18:56,980 --> 00:19:08,799
<font color="#E5E5E5">is this is a pre-production</font><font color="#CCCCCC"> if the</font>

341
00:19:05,830 --> 00:19:10,178
purpose of store<font color="#CCCCCC"> prep is to report</font><font color="#E5E5E5"> on</font>

342
00:19:08,799 --> 00:19:11,860
storage performance<font color="#E5E5E5"> after all</font>

343
00:19:10,179 --> 00:19:14,500
virtualization areas are taken into

344
00:19:11,860 --> 00:19:18,178
<font color="#E5E5E5">account</font><font color="#CCCCCC"> so typical test run with store</font>

345
00:19:14,500 --> 00:19:23,730
perf involves spinning up a VM<font color="#E5E5E5"> and</font>

346
00:19:18,179 --> 00:19:28,360
running some very stressful<font color="#E5E5E5"> tests to</font>

347
00:19:23,730 --> 00:19:30,640
<font color="#E5E5E5">test the limits</font><font color="#CCCCCC"> of your</font><font color="#E5E5E5"> storage so it'll</font>

348
00:19:28,360 --> 00:19:34,959
<font color="#E5E5E5">take the continuous it takes your</font>

349
00:19:30,640 --> 00:19:36,700
continuous<font color="#E5E5E5"> readings of your storage over</font>

350
00:19:34,960 --> 00:19:40,720
time and it reports<font color="#E5E5E5"> once the steady</font>

351
00:19:36,700 --> 00:19:43,690
state has has been reached<font color="#CCCCCC"> in terms of</font>

352
00:19:40,720 --> 00:19:46,200
extensibility<font color="#E5E5E5"> the you can modify the</font>

353
00:19:43,690 --> 00:19:48,610
parameters<font color="#CCCCCC"> which is what you define as</font>

354
00:19:46,200 --> 00:19:50,890
<font color="#E5E5E5">steady state</font><font color="#CCCCCC"> you can find a set of</font>

355
00:19:48,610 --> 00:19:54,100
hysteresis<font color="#CCCCCC"> or how</font><font color="#E5E5E5"> long it's</font><font color="#CCCCCC"> supposed to</font>

356
00:19:50,890 --> 00:19:55,870
<font color="#CCCCCC">actually run for</font><font color="#E5E5E5"> and if you do end up</font>

357
00:19:54,100 --> 00:19:59,289
running<font color="#E5E5E5"> it and you don't reach a steady</font>

358
00:19:55,870 --> 00:20:04,570
state<font color="#CCCCCC"> that's it</font><font color="#E5E5E5"> lets you</font><font color="#CCCCCC"> know that</font><font color="#E5E5E5"> as</font>

359
00:19:59,289 --> 00:20:08,350
<font color="#E5E5E5">well</font><font color="#CCCCCC"> store</font><font color="#E5E5E5"> proof is distributed in a</font>

360
00:20:04,570 --> 00:20:10,809
container and it's currently<font color="#CCCCCC"> following a</font>

361
00:20:08,350 --> 00:20:16,350
continuous release model which is

362
00:20:10,809 --> 00:20:19,360
distinct<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> rest</font><font color="#E5E5E5"> of OPN efi</font><font color="#CCCCCC"> so</font>

363
00:20:16,350 --> 00:20:25,600
whatever hits faster is usually good to

364
00:20:19,360 --> 00:20:29,620
<font color="#E5E5E5">go we talked about extensibility</font>

365
00:20:25,600 --> 00:20:39,969
and<font color="#CCCCCC"> so yeah</font><font color="#E5E5E5"> does anyone have any</font>

366
00:20:29,620 --> 00:20:42,510
questions<font color="#CCCCCC"> on store</font><font color="#E5E5E5"> birth fantastic</font><font color="#CCCCCC"> okay</font>

367
00:20:39,970 --> 00:20:46,150
so the<font color="#CCCCCC"> last thing</font><font color="#E5E5E5"> I'll talk about is</font>

368
00:20:42,510 --> 00:20:51,700
dovetail which is the<font color="#CCCCCC"> Opie nfe</font>

369
00:20:46,150 --> 00:20:52,929
compliance verification program<font color="#CCCCCC"> it</font>

370
00:20:51,700 --> 00:20:57,190
<font color="#E5E5E5">allows you to</font><font color="#CCCCCC"> verify that</font><font color="#E5E5E5"> your</font>

371
00:20:52,929 --> 00:20:59,980
commercial<font color="#CCCCCC"> platform is actually OPN if</font>

372
00:20:57,190 --> 00:21:04,390
you verified or meets the requirements

373
00:20:59,980 --> 00:21:09,640
they've defined for<font color="#CCCCCC"> nfe readiness it is</font>

374
00:21:04,390 --> 00:21:12,340
usually released<font color="#CCCCCC"> mid-cycle so there's a</font>

375
00:21:09,640 --> 00:21:15,940
three-month delay between<font color="#CCCCCC"> Opie</font><font color="#E5E5E5"> and every</font>

376
00:21:12,340 --> 00:21:19,178
release and the dovetail release<font color="#E5E5E5"> and the</font>

377
00:21:15,940 --> 00:21:25,030
latest one was September so where would

378
00:21:19,179 --> 00:21:28,059
you<font color="#CCCCCC"> an update</font><font color="#E5E5E5"> job</font><font color="#CCCCCC"> tail will take a bunch</font>

379
00:21:25,030 --> 00:21:31,059
of up test cases that<font color="#E5E5E5"> have</font><font color="#CCCCCC"> been defined</font>

380
00:21:28,059 --> 00:21:35,440
<font color="#E5E5E5">by funk test and yardstick and perhaps a</font>

381
00:21:31,059 --> 00:21:37,678
<font color="#CCCCCC">few others and it runs these and reports</font>

382
00:21:35,440 --> 00:21:40,600
on whether or not<font color="#CCCCCC"> you platform has</font>

383
00:21:37,679 --> 00:21:43,870
passage for<font color="#CCCCCC"> the moment they're focusing</font>

384
00:21:40,600 --> 00:21:44,740
just on<font color="#E5E5E5"> functional tests because when</font>

385
00:21:43,870 --> 00:21:48,668
you're<font color="#CCCCCC"> talking about commercial</font>

386
00:21:44,740 --> 00:21:50,020
platforms<font color="#CCCCCC"> performance tester a little</font>

387
00:21:48,669 --> 00:21:58,770
bit controversial when you're trying<font color="#E5E5E5"> to</font>

388
00:21:50,020 --> 00:21:58,770
<font color="#E5E5E5">define a standard platform so that's</font>

389
00:21:59,429 --> 00:22:06,059
that's this<font color="#E5E5E5"> usually there's a addressing</font>

390
00:22:03,149 --> 00:22:09,109
originally use<font color="#CCCCCC"> cases</font><font color="#E5E5E5"> but that's not</font>

391
00:22:06,059 --> 00:22:12,239
something<font color="#E5E5E5"> we're going to cover this so</font>

392
00:22:09,109 --> 00:22:15,529
does anybody have<font color="#CCCCCC"> any questions about</font>

393
00:22:12,239 --> 00:22:15,529
the whole<font color="#E5E5E5"> loss</font>

394
00:22:22,190 --> 00:22:27,140
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> the question was what</font><font color="#CCCCCC"> are the</font>

395
00:22:24,050 --> 00:22:30,470
<font color="#CCCCCC">platforms that are already verified</font><font color="#E5E5E5"> I</font>

396
00:22:27,140 --> 00:22:35,810
don't have the answer for<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> there</font>

397
00:22:30,470 --> 00:22:39,620
is a<font color="#CCCCCC"> ovp website that you can you can go</font>

398
00:22:35,810 --> 00:22:42,560
to that's the the OPF e-verify program

399
00:22:39,620 --> 00:22:44,389
website so you can<font color="#CCCCCC"> see the results</font>

400
00:22:42,560 --> 00:22:46,520
because people will take dovetail

401
00:22:44,390 --> 00:22:47,930
they'll run it themselves<font color="#CCCCCC"> add up</font><font color="#E5E5E5"> all the</font>

402
00:22:46,520 --> 00:22:52,750
results and<font color="#E5E5E5"> it'll be reviewed by</font>

403
00:22:47,930 --> 00:22:52,750
community<font color="#CCCCCC"> members before being</font><font color="#E5E5E5"> published</font>

404
00:22:59,960 --> 00:23:03,619
[Music]

405
00:23:11,590 --> 00:23:17,959
well we're all<font color="#E5E5E5"> part of</font><font color="#CCCCCC"> lfn and as part</font>

406
00:23:16,580 --> 00:23:21,350
of<font color="#E5E5E5"> that ongoing initiative we are</font>

407
00:23:17,960 --> 00:23:23,450
<font color="#E5E5E5">looking at areas</font><font color="#CCCCCC"> that we can</font><font color="#E5E5E5"> work</font>

408
00:23:21,350 --> 00:23:27,399
<font color="#E5E5E5">together</font><font color="#CCCCCC"> and combine and consolidate</font>

409
00:23:23,450 --> 00:23:27,399
but that's an ongoing<font color="#CCCCCC"> process</font>

410
00:23:30,980 --> 00:23:38,640
yep<font color="#CCCCCC"> yardstick supports t-rex</font><font color="#E5E5E5"> I believe</font>

411
00:23:35,190 --> 00:23:51,540
and so<font color="#CCCCCC"> does em and if he bench and so</font>

412
00:23:38,640 --> 00:23:54,150
<font color="#E5E5E5">does</font><font color="#CCCCCC"> vs per</font><font color="#E5E5E5"> cc guys</font><font color="#CCCCCC"> and the NF e bench</font>

413
00:23:51,540 --> 00:23:59,840
guys<font color="#E5E5E5"> to work closely together but</font><font color="#CCCCCC"> I</font>

414
00:23:54,150 --> 00:23:59,840
think<font color="#E5E5E5"> outside of - not very much</font>

415
00:24:02,210 --> 00:24:08,379
um but thank you<font color="#E5E5E5"> everyone</font>

416
00:24:08,670 --> 00:24:13,150
[Applause]

