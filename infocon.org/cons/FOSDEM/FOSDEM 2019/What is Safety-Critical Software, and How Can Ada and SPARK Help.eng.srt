1
00:00:26,820 --> 00:00:36,579
thank you so this is somewhat<font color="#E5E5E5"> especially</font>

2
00:00:33,730 --> 00:00:41,140
<font color="#E5E5E5">just a short talk because I thought that</font>

3
00:00:36,579 --> 00:00:46,300
<font color="#CCCCCC">many people have heard the name</font><font color="#E5E5E5"> safety</font>

4
00:00:41,140 --> 00:00:51,909
critical software but she re conscious

5
00:00:46,300 --> 00:00:55,388
of what it<font color="#E5E5E5"> means and also why this is</font>

6
00:00:51,909 --> 00:00:59,379
certainly<font color="#CCCCCC"> the kind of software</font><font color="#E5E5E5"> where a</font>

7
00:00:55,389 --> 00:01:03,969
<font color="#CCCCCC">DA</font><font color="#E5E5E5"> is proportionally most used so it is</font>

8
00:00:59,379 --> 00:01:08,610
also a way to stress<font color="#CCCCCC"> some of the</font>

9
00:01:03,969 --> 00:01:12,939
benefits of<font color="#E5E5E5"> ADA so what does it mean</font>

10
00:01:08,610 --> 00:01:16,689
<font color="#E5E5E5">safety critical well in general</font><font color="#CCCCCC"> when a</font>

11
00:01:12,939 --> 00:01:20,380
fellow of<font color="#CCCCCC"> the software could cause loss</font>

12
00:01:16,689 --> 00:01:24,270
<font color="#CCCCCC">of human life so of course you have</font><font color="#E5E5E5"> all</font>

13
00:01:20,380 --> 00:01:27,520
the<font color="#CCCCCC"> transportation the planes</font><font color="#E5E5E5"> the trains</font>

14
00:01:24,270 --> 00:01:31,899
cars<font color="#CCCCCC"> which is</font><font color="#E5E5E5"> becoming more</font><font color="#CCCCCC"> and more</font>

15
00:01:27,520 --> 00:01:35,140
important not<font color="#CCCCCC"> only</font><font color="#E5E5E5"> medical devices one</font>

16
00:01:31,899 --> 00:01:37,990
of the most famous failure<font color="#E5E5E5"> of software</font>

17
00:01:35,140 --> 00:01:41,380
the one of the first software that<font color="#E5E5E5"> get</font>

18
00:01:37,990 --> 00:01:47,520
people was a medical device with a bug

19
00:01:41,380 --> 00:01:52,539
in the huger interface and also you have

20
00:01:47,520 --> 00:01:54,689
things like diving computers<font color="#E5E5E5"> if you</font>

21
00:01:52,539 --> 00:01:58,890
think<font color="#CCCCCC"> about it a</font><font color="#E5E5E5"> bug in a diving</font>

22
00:01:54,689 --> 00:02:06,669
<font color="#E5E5E5">computers can cause loss of human life</font>

23
00:01:58,890 --> 00:02:09,880
on the other hand some companies tend<font color="#CCCCCC"> to</font>

24
00:02:06,670 --> 00:02:13,570
spread the world that it's normal to

25
00:02:09,880 --> 00:02:17,049
have bugs<font color="#E5E5E5"> you know those software are so</font>

26
00:02:13,570 --> 00:02:17,989
complicated<font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> possible to avoid</font>

27
00:02:17,050 --> 00:02:21,290
having<font color="#E5E5E5"> bought</font>

28
00:02:17,990 --> 00:02:24,430
well okay if you<font color="#CCCCCC"> have a problem</font><font color="#E5E5E5"> he'd</font>

29
00:02:21,290 --> 00:02:29,660
ctrl-alt-del and then you reboot<font color="#E5E5E5"> and</font>

30
00:02:24,430 --> 00:02:33,860
everything will be<font color="#CCCCCC"> fine and</font><font color="#E5E5E5"> so on what</font>

31
00:02:29,660 --> 00:02:37,640
<font color="#E5E5E5">it's simply not acceptable for safety</font>

32
00:02:33,860 --> 00:02:41,120
critical software of<font color="#CCCCCC"> course if you</font><font color="#E5E5E5"> are</font>

33
00:02:37,640 --> 00:02:43,339
in a plane you<font color="#E5E5E5"> wouldn't like to have the</font>

34
00:02:41,120 --> 00:02:45,650
<font color="#E5E5E5">computers rebooting in the middle of the</font>

35
00:02:43,340 --> 00:02:49,340
flight<font color="#E5E5E5"> it happens sometimes</font>

36
00:02:45,650 --> 00:02:52,930
<font color="#E5E5E5">but there's also safety features</font><font color="#CCCCCC"> to make</font>

37
00:02:49,340 --> 00:02:59,150
sure that it doesn't<font color="#E5E5E5"> goes too much harm</font>

38
00:02:52,930 --> 00:03:04,090
so to<font color="#CCCCCC"> show</font><font color="#E5E5E5"> you the stakes of safety</font>

39
00:02:59,150 --> 00:03:08,030
critical software<font color="#E5E5E5"> here is an example</font>

40
00:03:04,090 --> 00:03:10,460
<font color="#E5E5E5">would you bother board a</font><font color="#CCCCCC"> car</font><font color="#E5E5E5"> knowing</font><font color="#CCCCCC"> it</font>

41
00:03:08,030 --> 00:03:15,290
has a defect that can cause an accident

42
00:03:10,460 --> 00:03:17,620
<font color="#CCCCCC">with a probability of once in every 3000</font>

43
00:03:15,290 --> 00:03:17,620
years

44
00:03:18,070 --> 00:03:25,820
presumably yes I mean each time<font color="#CCCCCC"> you</font>

45
00:03:22,430 --> 00:03:27,560
cross the street<font color="#E5E5E5"> you're likely to take</font>

46
00:03:25,820 --> 00:03:33,019
more<font color="#CCCCCC"> chances than that</font>

47
00:03:27,560 --> 00:03:36,740
okay<font color="#E5E5E5"> if you are a car maker who produced</font>

48
00:03:33,020 --> 00:03:39,950
1 million<font color="#CCCCCC"> vehicles 1</font><font color="#E5E5E5"> million vehicles</font><font color="#CCCCCC"> is</font>

49
00:03:36,740 --> 00:03:45,440
a good success is not exceptional<font color="#CCCCCC"> I</font>

50
00:03:39,950 --> 00:03:47,089
think the<font color="#CCCCCC"> most produced car was 34</font>

51
00:03:45,440 --> 00:03:51,980
million<font color="#E5E5E5"> or</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> like that</font>

52
00:03:47,090 --> 00:03:57,920
<font color="#CCCCCC">ok you make the division it means</font><font color="#E5E5E5"> one</font>

53
00:03:51,980 --> 00:04:03,560
major accident<font color="#E5E5E5"> every day that simply</font>

54
00:03:57,920 --> 00:04:09,049
unacceptable<font color="#CCCCCC"> ok so when it comes to</font>

55
00:04:03,560 --> 00:04:13,340
safety<font color="#E5E5E5"> critical</font><font color="#CCCCCC"> it's 100 percent not 99</font>

56
00:04:09,050 --> 00:04:18,070
<font color="#CCCCCC">point 99 whatever I know how many nines</font>

57
00:04:13,340 --> 00:04:24,080
you want everything must<font color="#E5E5E5"> be absolutely</font>

58
00:04:18,070 --> 00:04:28,330
safe<font color="#E5E5E5"> so how do you who</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> in the</font>

59
00:04:24,080 --> 00:04:28,330
business of safety critical software

60
00:04:29,330 --> 00:04:36,419
how do you make sure<font color="#E5E5E5"> if you bought a</font>

61
00:04:33,120 --> 00:04:42,870
train if you bought a plane that this is

62
00:04:36,419 --> 00:04:47,240
safe<font color="#E5E5E5"> this is done through a process</font>

63
00:04:42,870 --> 00:04:51,479
<font color="#E5E5E5">called certification every safety</font>

64
00:04:47,240 --> 00:04:55,969
critical software has to<font color="#CCCCCC"> be certified</font>

65
00:04:51,479 --> 00:05:00,688
what does it mean<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> that there is a</font>

66
00:04:55,969 --> 00:05:03,689
official body body the<font color="#E5E5E5"> certify it must</font>

67
00:05:00,689 --> 00:05:07,189
be an independent body of course it

68
00:05:03,689 --> 00:05:12,419
doesn't<font color="#E5E5E5"> belong to the makers of the</font>

69
00:05:07,189 --> 00:05:15,599
device<font color="#E5E5E5"> and it's in charge of verifying</font>

70
00:05:12,419 --> 00:05:19,139
the conformity<font color="#E5E5E5"> to all safety rules and</font>

71
00:05:15,599 --> 00:05:22,740
safety standards<font color="#CCCCCC"> you have some very</font>

72
00:05:19,139 --> 00:05:26,639
famous safety standards<font color="#E5E5E5"> maybe you heard</font>

73
00:05:22,740 --> 00:05:34,550
about<font color="#CCCCCC"> that or not in airplanes for</font>

74
00:05:26,639 --> 00:05:38,729
example it's called do 178<font color="#CCCCCC"> and with very</font>

75
00:05:34,550 --> 00:05:44,879
various versions<font color="#CCCCCC"> B is the older one</font><font color="#E5E5E5"> it's</font>

76
00:05:38,729 --> 00:05:48,449
now version C those kind of standard

77
00:05:44,879 --> 00:05:51,659
<font color="#E5E5E5">defines various levels of consequences</font>

78
00:05:48,449 --> 00:05:55,889
in case of probably the<font color="#CCCCCC"> most critical</font>

79
00:05:51,659 --> 00:05:58,969
<font color="#E5E5E5">one is called level a and that's if</font>

80
00:05:55,889 --> 00:06:02,699
there is a bug<font color="#CCCCCC"> you crash</font><font color="#E5E5E5"> the plane</font><font color="#CCCCCC"> okay</font>

81
00:05:58,969 --> 00:06:06,599
<font color="#E5E5E5">it goes down to level</font><font color="#CCCCCC"> E</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> like</font>

82
00:06:02,699 --> 00:06:08,669
in-flight entertainment<font color="#CCCCCC"> if it</font><font color="#E5E5E5"> breaks</font><font color="#CCCCCC"> it</font>

83
00:06:06,599 --> 00:06:11,849
has no impact of safety people<font color="#CCCCCC"> are not</font>

84
00:06:08,669 --> 00:06:16,919
<font color="#E5E5E5">happy but you have no impact on safety</font>

85
00:06:11,849 --> 00:06:19,349
<font color="#CCCCCC">those standards are intended to grade</font>

86
00:06:16,919 --> 00:06:22,109
from<font color="#CCCCCC"> the safety aspect there might be</font>

87
00:06:19,349 --> 00:06:30,659
other aspects but this one are just

88
00:06:22,110 --> 00:06:34,020
<font color="#CCCCCC">about safety</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> DS certification body</font>

89
00:06:30,659 --> 00:06:36,719
<font color="#E5E5E5">and name some</font><font color="#CCCCCC"> of them for the train in</font>

90
00:06:34,020 --> 00:06:38,590
France there is<font color="#E5E5E5"> certified ferries</font>

91
00:06:36,719 --> 00:06:42,730
<font color="#E5E5E5">railway</font>

92
00:06:38,590 --> 00:06:45,969
for<font color="#CCCCCC"> cEAT for airplanes in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> u.s. you</font>

93
00:06:42,730 --> 00:06:51,900
have<font color="#E5E5E5"> the Federal Aviation</font><font color="#CCCCCC"> Administration</font>

94
00:06:45,970 --> 00:06:56,830
and<font color="#E5E5E5"> so on and these</font><font color="#CCCCCC"> people eventually</font>

95
00:06:51,900 --> 00:07:00,719
<font color="#E5E5E5">will sign a document</font><font color="#CCCCCC"> saying</font><font color="#E5E5E5"> okay this</font>

96
00:06:56,830 --> 00:07:07,300
<font color="#E5E5E5">plane can fly with 400</font><font color="#CCCCCC"> people aboard</font>

97
00:07:00,720 --> 00:07:09,070
<font color="#E5E5E5">okay so guess what they're not easy to</font>

98
00:07:07,300 --> 00:07:13,090
<font color="#CCCCCC">convince okay</font>

99
00:07:09,070 --> 00:07:16,840
so what's important with this safety

100
00:07:13,090 --> 00:07:21,969
<font color="#CCCCCC">critical software</font><font color="#E5E5E5"> is that having the</font>

101
00:07:16,840 --> 00:07:25,270
software right is not enough<font color="#CCCCCC"> you must be</font>

102
00:07:21,970 --> 00:07:28,770
able<font color="#CCCCCC"> to prove that</font><font color="#E5E5E5"> the software is right</font>

103
00:07:25,270 --> 00:07:33,460
because<font color="#E5E5E5"> they are</font><font color="#CCCCCC"> difficult to convince</font>

104
00:07:28,770 --> 00:07:36,940
if they sign your your listing they take

105
00:07:33,460 --> 00:07:40,090
a terrible<font color="#E5E5E5"> responsibility and so they</font>

106
00:07:36,940 --> 00:07:43,210
must absolutely be certain that

107
00:07:40,090 --> 00:07:46,900
everything<font color="#E5E5E5"> is correct</font><font color="#CCCCCC"> so you have a</font>

108
00:07:43,210 --> 00:07:48,630
state<font color="#E5E5E5"> of mind where for example testing</font>

109
00:07:46,900 --> 00:07:52,299
proves nothing

110
00:07:48,630 --> 00:07:55,120
testing can<font color="#E5E5E5"> prove that there is bug the</font>

111
00:07:52,300 --> 00:07:58,540
<font color="#E5E5E5">test never</font><font color="#CCCCCC"> prove</font><font color="#E5E5E5"> that there is</font><font color="#CCCCCC"> no bug</font>

112
00:07:55,120 --> 00:08:03,460
okay so other methods<font color="#E5E5E5"> other way of doing</font>

113
00:07:58,540 --> 00:08:07,710
things are necessary when<font color="#E5E5E5"> you are</font>

114
00:08:03,460 --> 00:08:11,640
<font color="#E5E5E5">talking about safety critical systems</font>

115
00:08:07,710 --> 00:08:15,099
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have two important aspects</font><font color="#E5E5E5"> and</font>

116
00:08:11,640 --> 00:08:19,530
generally well separated<font color="#E5E5E5"> the first one</font>

117
00:08:15,100 --> 00:08:23,290
is called<font color="#CCCCCC"> the intent what</font><font color="#E5E5E5"> you want to do</font>

118
00:08:19,530 --> 00:08:26,770
so<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a high level</font><font color="#E5E5E5"> requirement</font><font color="#CCCCCC"> and</font>

119
00:08:23,290 --> 00:08:30,490
there are people<font color="#CCCCCC"> in charge of</font><font color="#E5E5E5"> making</font>

120
00:08:26,770 --> 00:08:33,490
<font color="#E5E5E5">sure that</font><font color="#CCCCCC"> the requirements are correct</font>

121
00:08:30,490 --> 00:08:37,950
<font color="#E5E5E5">that what you want to do is what should</font>

122
00:08:33,490 --> 00:08:42,299
be<font color="#CCCCCC"> done and there is a second level</font>

123
00:08:37,950 --> 00:08:48,600
which<font color="#E5E5E5"> is to make</font><font color="#CCCCCC"> sure that the code</font>

124
00:08:42,299 --> 00:08:48,599
implements the intent<font color="#E5E5E5"> correctly</font><font color="#CCCCCC"> King</font>

125
00:08:49,829 --> 00:08:57,660
this requires of<font color="#CCCCCC"> course first</font>

126
00:08:52,259 --> 00:09:00,720
traceability<font color="#E5E5E5"> of code to design but many</font>

127
00:08:57,660 --> 00:09:04,160
other aspects<font color="#E5E5E5"> so it's always about</font>

128
00:09:00,720 --> 00:09:09,360
convincing<font color="#CCCCCC"> the certifier</font><font color="#E5E5E5"> you know you</font>

129
00:09:04,160 --> 00:09:13,350
<font color="#E5E5E5">you need to show the guy that this is</font>

130
00:09:09,360 --> 00:09:16,259
<font color="#E5E5E5">exactly what was expected</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font>

131
00:09:13,350 --> 00:09:20,970
readability is very important if you

132
00:09:16,259 --> 00:09:24,269
<font color="#CCCCCC">have</font><font color="#E5E5E5"> strange not impossible</font><font color="#CCCCCC"> to</font>

133
00:09:20,970 --> 00:09:27,839
understand language<font color="#E5E5E5"> the certifier will</font>

134
00:09:24,269 --> 00:09:33,709
not really he will not try he'll say

135
00:09:27,839 --> 00:09:33,709
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> understand</font><font color="#CCCCCC"> get back okay</font>

136
00:09:34,399 --> 00:09:42,509
language feature proofs<font color="#CCCCCC"> I just invented</font>

137
00:09:39,689 --> 00:09:46,469
<font color="#E5E5E5">that terms it's not an official term but</font>

138
00:09:42,509 --> 00:09:48,689
I'll show you<font color="#E5E5E5"> another slide</font><font color="#CCCCCC"> what I mean</font>

139
00:09:46,470 --> 00:09:52,220
<font color="#E5E5E5">by that</font><font color="#CCCCCC"> when you have to prove that</font>

140
00:09:48,689 --> 00:09:57,209
<font color="#CCCCCC">something works</font><font color="#E5E5E5"> if it's a language rule</font>

141
00:09:52,220 --> 00:09:59,790
then the certifier obviously will know

142
00:09:57,209 --> 00:10:06,709
<font color="#CCCCCC">that it's true</font><font color="#E5E5E5"> so if you have in</font>

143
00:09:59,790 --> 00:10:10,199
language where you can put<font color="#CCCCCC"> mmm</font>

144
00:10:06,709 --> 00:10:16,049
<font color="#E5E5E5">requirements into the language then you</font>

145
00:10:10,199 --> 00:10:20,279
have certain that they will be met tests

146
00:10:16,049 --> 00:10:24,660
are more there are still needed of

147
00:10:20,279 --> 00:10:26,850
course<font color="#CCCCCC"> and they can be the language can</font>

148
00:10:24,660 --> 00:10:33,319
help<font color="#E5E5E5"> in writing tests by making sure</font>

149
00:10:26,850 --> 00:10:33,319
<font color="#E5E5E5">what needs to be tested</font><font color="#CCCCCC"> and what needs</font>

150
00:10:34,490 --> 00:10:43,139
what is obvious<font color="#E5E5E5"> and the best thing is if</font>

151
00:10:39,779 --> 00:10:46,429
you<font color="#E5E5E5"> can have formal proofs and of course</font>

152
00:10:43,139 --> 00:10:53,459
formal proofs<font color="#E5E5E5"> need specialized language</font>

153
00:10:46,429 --> 00:10:59,100
<font color="#E5E5E5">for that</font><font color="#CCCCCC"> kind of development</font><font color="#E5E5E5"> now I'll</font>

154
00:10:53,459 --> 00:11:00,630
<font color="#E5E5E5">show</font><font color="#CCCCCC"> you a small</font><font color="#E5E5E5"> picture to show to</font>

155
00:10:59,100 --> 00:11:03,209
explain

156
00:11:00,630 --> 00:11:06,600
the main difference<font color="#E5E5E5"> especially for</font>

157
00:11:03,209 --> 00:11:10,859
safety critical software<font color="#E5E5E5"> between the</font>

158
00:11:06,600 --> 00:11:14,160
goals of<font color="#E5E5E5"> Ada and the</font><font color="#CCCCCC"> goals of see don't</font>

159
00:11:10,860 --> 00:11:19,399
misunderstand me<font color="#E5E5E5"> see is an excellent</font>

160
00:11:14,160 --> 00:11:24,509
language it's a best<font color="#CCCCCC"> low-level</font><font color="#E5E5E5"> language</font>

161
00:11:19,399 --> 00:11:28,470
<font color="#CCCCCC">okay ADA</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> high-level</font><font color="#E5E5E5"> language</font><font color="#CCCCCC"> a good</font>

162
00:11:24,509 --> 00:11:32,579
<font color="#CCCCCC">language is a language that</font><font color="#E5E5E5"> fits its</font>

163
00:11:28,470 --> 00:11:35,220
goals<font color="#E5E5E5"> its requirements and what I want</font>

164
00:11:32,579 --> 00:11:39,569
to show you now is the<font color="#E5E5E5"> difference</font><font color="#CCCCCC"> in</font>

165
00:11:35,220 --> 00:11:43,620
requirements<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> language here I</font>

166
00:11:39,569 --> 00:11:47,009
represent<font color="#E5E5E5"> mashing</font><font color="#CCCCCC"> States so it's</font><font color="#E5E5E5"> very</font>

167
00:11:43,620 --> 00:11:49,740
<font color="#CCCCCC">well-defined squared</font><font color="#E5E5E5"> that all the states</font>

168
00:11:47,009 --> 00:11:51,870
<font color="#E5E5E5">that can be achieved</font><font color="#CCCCCC"> or the combination</font>

169
00:11:49,740 --> 00:11:57,660
of the 32<font color="#E5E5E5"> bits of the memory of</font><font color="#CCCCCC"> your</font>

170
00:11:51,870 --> 00:12:00,779
<font color="#E5E5E5">machine</font><font color="#CCCCCC"> okay somewhere</font><font color="#E5E5E5"> inside what I</font>

171
00:11:57,660 --> 00:12:03,689
call the correct<font color="#CCCCCC"> states</font><font color="#E5E5E5"> these are the</font>

172
00:12:00,779 --> 00:12:06,649
state<font color="#E5E5E5"> that can be attained through the</font>

173
00:12:03,690 --> 00:12:09,000
correct execution of your program<font color="#E5E5E5"> of</font>

174
00:12:06,649 --> 00:12:11,250
course there have to be inside the

175
00:12:09,000 --> 00:12:14,009
<font color="#CCCCCC">machine</font><font color="#E5E5E5"> states otherwise you cannot do</font>

176
00:12:11,250 --> 00:12:16,709
what<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to do somewhere in the</font>

177
00:12:14,009 --> 00:12:19,560
<font color="#E5E5E5">middle</font><font color="#CCCCCC"> you have language states these</font>

178
00:12:16,709 --> 00:12:24,239
<font color="#E5E5E5">are the state that can be reached</font>

179
00:12:19,560 --> 00:12:30,869
through<font color="#CCCCCC"> the that are allowed by language</font>

180
00:12:24,240 --> 00:12:32,939
<font color="#E5E5E5">rules okay it's like that they must</font>

181
00:12:30,870 --> 00:12:35,550
include the correct<font color="#CCCCCC"> states otherwise</font>

182
00:12:32,939 --> 00:12:38,939
<font color="#E5E5E5">your language does not allow you to</font>

183
00:12:35,550 --> 00:12:41,370
<font color="#CCCCCC">write the program and they cannot be</font>

184
00:12:38,939 --> 00:12:44,040
equal<font color="#E5E5E5"> to the correct states because it</font>

185
00:12:41,370 --> 00:12:48,149
would be equivalent to<font color="#E5E5E5"> a full formal</font>

186
00:12:44,040 --> 00:12:52,170
<font color="#E5E5E5">proofs of the program now the</font>

187
00:12:48,149 --> 00:12:56,600
requirements for<font color="#E5E5E5"> C was to be a portable</font>

188
00:12:52,170 --> 00:13:01,529
assembly language<font color="#E5E5E5"> to give access to</font>

189
00:12:56,600 --> 00:13:06,509
<font color="#E5E5E5">everything the machine can do so C tends</font>

190
00:13:01,529 --> 00:13:09,000
<font color="#E5E5E5">to in extend the language</font><font color="#CCCCCC"> States to</font>

191
00:13:06,509 --> 00:13:12,630
cover as much as possible from<font color="#E5E5E5"> machine</font>

192
00:13:09,000 --> 00:13:16,670
<font color="#E5E5E5">States ADA</font>

193
00:13:12,630 --> 00:13:22,260
to have to allow only<font color="#E5E5E5"> correct execution</font>

194
00:13:16,670 --> 00:13:25,800
<font color="#E5E5E5">to reduce the language state as tight as</font>

195
00:13:22,260 --> 00:13:27,660
possible around the correct state so

196
00:13:25,800 --> 00:13:34,620
that's<font color="#E5E5E5"> what the difference</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> the</font>

197
00:13:27,660 --> 00:13:37,500
philosophy of the two<font color="#CCCCCC"> languages so I</font>

198
00:13:34,620 --> 00:13:41,250
<font color="#E5E5E5">repeat for those who when at the this</font>

199
00:13:37,500 --> 00:13:44,480
morning's of<font color="#CCCCCC"> me</font><font color="#E5E5E5"> featured of ADA that are</font>

200
00:13:41,250 --> 00:13:47,790
important<font color="#E5E5E5"> as far as safety is concerned</font>

201
00:13:44,480 --> 00:13:51,390
readability<font color="#E5E5E5"> the very strong typing</font>

202
00:13:47,790 --> 00:13:54,060
system<font color="#E5E5E5"> that does</font><font color="#CCCCCC"> not allow you to do</font>

203
00:13:51,390 --> 00:13:57,030
some thing<font color="#CCCCCC"> that makes no sense like</font>

204
00:13:54,060 --> 00:13:59,270
<font color="#E5E5E5">assigning</font><font color="#CCCCCC"> your length to time or</font>

205
00:13:57,030 --> 00:14:03,900
<font color="#CCCCCC">something like that</font>

206
00:13:59,270 --> 00:14:05,819
<font color="#E5E5E5">very few use of pointers the many things</font>

207
00:14:03,900 --> 00:14:08,640
<font color="#E5E5E5">that</font><font color="#CCCCCC"> require pointers in another</font>

208
00:14:05,820 --> 00:14:15,180
<font color="#E5E5E5">languages that do not require a pointer</font>

209
00:14:08,640 --> 00:14:18,150
in<font color="#CCCCCC"> Ada such a relief</font><font color="#E5E5E5"> and programming by</font>

210
00:14:15,180 --> 00:14:21,540
contract that<font color="#CCCCCC"> into I'll</font><font color="#E5E5E5"> give you some</font>

211
00:14:18,150 --> 00:14:27,030
example who you can add<font color="#E5E5E5"> coalition</font><font color="#CCCCCC"> that</font>

212
00:14:21,540 --> 00:14:30,719
<font color="#E5E5E5">are checkable at</font><font color="#CCCCCC"> friend</font><font color="#E5E5E5"> time so a slide</font>

213
00:14:27,030 --> 00:14:33,900
to show you what I intended by that<font color="#E5E5E5"> term</font>

214
00:14:30,720 --> 00:14:37,860
<font color="#E5E5E5">language feature proofs imagine you have</font>

215
00:14:33,900 --> 00:14:40,949
to<font color="#E5E5E5"> come things that come in pairs</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you</font>

216
00:14:37,860 --> 00:14:47,040
know that there will<font color="#E5E5E5"> be at most</font><font color="#CCCCCC"> one</font>

217
00:14:40,950 --> 00:14:49,530
<font color="#CCCCCC">thousand</font><font color="#E5E5E5"> the count is always even and of</font>

218
00:14:47,040 --> 00:14:53,400
course since you count<font color="#E5E5E5"> it cannot be</font>

219
00:14:49,530 --> 00:14:57,270
negative<font color="#E5E5E5"> so some high-level requirement</font>

220
00:14:53,400 --> 00:15:03,900
is like that<font color="#E5E5E5"> in</font><font color="#CCCCCC"> ADA</font><font color="#E5E5E5"> you can define a</font>

221
00:14:57,270 --> 00:15:06,870
type<font color="#E5E5E5"> per counter is range</font><font color="#CCCCCC"> 0 to</font><font color="#E5E5E5"> 1000 with</font>

222
00:15:03,900 --> 00:15:11,510
a certain predicate<font color="#CCCCCC"> that ensure that</font>

223
00:15:06,870 --> 00:15:17,040
pair counter mod 2<font color="#E5E5E5"> is always equal to</font><font color="#CCCCCC"> 0</font>

224
00:15:11,510 --> 00:15:21,600
now when the certifier sees that he

225
00:15:17,040 --> 00:15:25,500
knows that<font color="#CCCCCC"> the requirement is met</font><font color="#E5E5E5"> you</font>

226
00:15:21,600 --> 00:15:26,250
don't have to check all the<font color="#CCCCCC"> uses of all</font>

227
00:15:25,500 --> 00:15:28,680
the

228
00:15:26,250 --> 00:15:31,200
of that type<font color="#E5E5E5"> to make sure that the</font>

229
00:15:28,680 --> 00:15:35,760
requirements<font color="#E5E5E5"> are met that gives</font>

230
00:15:31,200 --> 00:15:38,730
confidence<font color="#CCCCCC"> I have another classical</font>

231
00:15:35,760 --> 00:15:42,150
example<font color="#E5E5E5"> you have a point that must</font><font color="#CCCCCC"> be</font>

232
00:15:38,730 --> 00:15:44,910
within a certain<font color="#E5E5E5"> radius radius of one</font>

233
00:15:42,150 --> 00:15:47,880
<font color="#E5E5E5">this is just an example of something</font>

234
00:15:44,910 --> 00:15:50,939
that's<font color="#CCCCCC"> called a type</font><font color="#E5E5E5"> invariant where</font>

235
00:15:47,880 --> 00:15:54,570
you've guaranteed that<font color="#E5E5E5"> some properties</font>

236
00:15:50,940 --> 00:15:58,110
is always true for<font color="#E5E5E5"> an abstract data type</font>

237
00:15:54,570 --> 00:16:02,070
<font color="#CCCCCC">I define in a package</font><font color="#E5E5E5"> so you can say</font>

238
00:15:58,110 --> 00:16:06,030
<font color="#E5E5E5">that</font><font color="#CCCCCC"> a certain</font><font color="#E5E5E5"> selection is always true</font>

239
00:16:02,070 --> 00:16:08,580
<font color="#CCCCCC">for a certain type and that function</font>

240
00:16:06,030 --> 00:16:12,900
<font color="#CCCCCC">that makes sure that it is within</font><font color="#E5E5E5"> the</font>

241
00:16:08,580 --> 00:16:15,150
radius<font color="#CCCCCC"> so once again the invariant is</font>

242
00:16:12,900 --> 00:16:16,949
part<font color="#E5E5E5"> of the definition</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> type</font>

243
00:16:15,150 --> 00:16:22,980
therefore you<font color="#CCCCCC"> are certain that it will</font>

244
00:16:16,950 --> 00:16:28,350
always be<font color="#CCCCCC"> true</font><font color="#E5E5E5"> if it's not it's checked</font>

245
00:16:22,980 --> 00:16:32,940
at<font color="#CCCCCC"> run time</font><font color="#E5E5E5"> it's not exactly</font><font color="#CCCCCC"> clear like</font>

246
00:16:28,350 --> 00:16:36,030
a proof<font color="#CCCCCC"> or</font><font color="#E5E5E5"> proof you make sure it</font>

247
00:16:32,940 --> 00:16:42,260
doesn't<font color="#E5E5E5"> happen here</font><font color="#CCCCCC"> you you</font><font color="#E5E5E5"> just check</font>

248
00:16:36,030 --> 00:16:47,060
it so<font color="#CCCCCC"> SPARC is</font><font color="#E5E5E5"> formally another language</font>

249
00:16:42,260 --> 00:16:51,890
<font color="#E5E5E5">but it's practically a subset of</font><font color="#CCCCCC"> ADA</font>

250
00:16:47,060 --> 00:16:56,489
<font color="#E5E5E5">with M even</font><font color="#CCCCCC"> more possibilities</font><font color="#E5E5E5"> for</font>

251
00:16:51,890 --> 00:17:00,750
assertions<font color="#E5E5E5"> and various</font><font color="#CCCCCC"> statements and</font>

252
00:16:56,490 --> 00:17:02,940
since it's a strict subset of<font color="#E5E5E5"> ADA SPARC</font>

253
00:17:00,750 --> 00:17:05,900
is a different<font color="#CCCCCC"> language that</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

254
00:17:02,940 --> 00:17:09,950
compiled with an<font color="#E5E5E5"> ADA compiler so</font>

255
00:17:05,900 --> 00:17:13,590
<font color="#E5E5E5">formally a different</font><font color="#CCCCCC"> language</font><font color="#E5E5E5"> but still</font>

256
00:17:09,950 --> 00:17:15,540
<font color="#E5E5E5">compatible with data with restriction of</font>

257
00:17:13,589 --> 00:17:17,159
course because when you have<font color="#E5E5E5"> to do very</font>

258
00:17:15,540 --> 00:17:20,790
<font color="#E5E5E5">critical software</font>

259
00:17:17,160 --> 00:17:25,110
you cannot allow<font color="#E5E5E5"> anything so the mantra</font>

260
00:17:20,790 --> 00:17:28,020
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> Spock peak Pole is correctness by</font>

261
00:17:25,109 --> 00:17:30,120
construction<font color="#E5E5E5"> you want the thing to be</font>

262
00:17:28,020 --> 00:17:33,960
designed and correct right from the

263
00:17:30,120 --> 00:17:38,419
start<font color="#E5E5E5"> and it has mainly check that the</font>

264
00:17:33,960 --> 00:17:40,080
dynamic<font color="#CCCCCC"> checks cannot fail to prove</font>

265
00:17:38,420 --> 00:17:43,519
statically that means

266
00:17:40,080 --> 00:17:49,080
compile-time that<font color="#E5E5E5"> all</font><font color="#CCCCCC"> required feature</font>

267
00:17:43,519 --> 00:17:54,690
met so in<font color="#E5E5E5"> short if you want it a child</font>

268
00:17:49,080 --> 00:17:58,428
<font color="#E5E5E5">either</font><font color="#CCCCCC"> checks</font><font color="#E5E5E5"> spark</font><font color="#CCCCCC"> proof okay so it at</font>

269
00:17:54,690 --> 00:18:01,080
<font color="#E5E5E5">runtime make sure that it's true spark</font>

270
00:17:58,429 --> 00:18:04,019
<font color="#E5E5E5">proved that it cannot be false</font>

271
00:18:01,080 --> 00:18:06,689
however this implies many restrictions

272
00:18:04,019 --> 00:18:11,730
<font color="#E5E5E5">because not everything can be proven</font>

273
00:18:06,690 --> 00:18:14,039
<font color="#CCCCCC">easily</font><font color="#E5E5E5"> and the good news is that the</font>

274
00:18:11,730 --> 00:18:17,609
spark environment you have<font color="#E5E5E5"> a free</font>

275
00:18:14,039 --> 00:18:21,299
implementation available from<font color="#E5E5E5"> a decor</font>

276
00:18:17,609 --> 00:18:23,699
<font color="#E5E5E5">and all</font><font color="#CCCCCC"> ultra is what they're working</font>

277
00:18:21,299 --> 00:18:27,029
together for that<font color="#E5E5E5"> so you can experiment</font>

278
00:18:23,700 --> 00:18:31,799
with spark<font color="#E5E5E5"> and see how it works include</font>

279
00:18:27,029 --> 00:18:37,320
including the proof maker<font color="#E5E5E5"> there is a</font>

280
00:18:31,799 --> 00:18:41,580
<font color="#E5E5E5">famous example it's a Ironsides project</font>

281
00:18:37,320 --> 00:18:45,809
it's a DNS<font color="#CCCCCC"> server that</font><font color="#E5E5E5"> has been formally</font>

282
00:18:41,580 --> 00:18:50,070
<font color="#CCCCCC">proven invulnerable to the many</font><font color="#E5E5E5"> of</font>

283
00:18:45,809 --> 00:18:55,350
problems and say<font color="#E5E5E5"> security concern that</font>

284
00:18:50,070 --> 00:18:59,249
<font color="#E5E5E5">plagued other servers so yes there is a</font>

285
00:18:55,350 --> 00:19:02,879
safe DNS server<font color="#CCCCCC"> nice</font><font color="#E5E5E5"> isn't more</font>

286
00:18:59,249 --> 00:19:05,820
information on that link<font color="#E5E5E5"> and while you</font>

287
00:19:02,879 --> 00:19:13,189
type<font color="#E5E5E5"> our inside spark and you have all</font>

288
00:19:05,820 --> 00:19:17,399
the information one more<font color="#CCCCCC"> slide because I</font>

289
00:19:13,190 --> 00:19:23,909
think<font color="#E5E5E5"> most of you do</font><font color="#CCCCCC"> not were</font><font color="#E5E5E5"> right</font>

290
00:19:17,399 --> 00:19:28,189
safety<font color="#E5E5E5"> critical software</font><font color="#CCCCCC"> ADA spark where</font>

291
00:19:23,909 --> 00:19:32,609
designed for safety<font color="#E5E5E5"> critical software</font>

292
00:19:28,190 --> 00:19:36,659
<font color="#E5E5E5">however it's nice if casual software</font>

293
00:19:32,609 --> 00:19:39,059
does not<font color="#E5E5E5"> fail either okay if you can be</font>

294
00:19:36,659 --> 00:19:42,869
<font color="#E5E5E5">protected</font><font color="#CCCCCC"> from buffer overflows</font>

295
00:19:39,059 --> 00:19:49,590
arithmetic overflow<font color="#CCCCCC"> memory leaks</font><font color="#E5E5E5"> and all</font>

296
00:19:42,869 --> 00:19:53,030
the other trouble that's good so you

297
00:19:49,590 --> 00:19:57,510
have free tools you can use<font color="#E5E5E5"> them</font>

298
00:19:53,030 --> 00:20:02,600
with<font color="#CCCCCC"> ADA</font><font color="#E5E5E5"> your casual software can</font>

299
00:19:57,510 --> 00:20:08,370
benefit<font color="#CCCCCC"> from the same</font><font color="#E5E5E5"> level of safety</font>

300
00:20:02,600 --> 00:20:11,159
<font color="#E5E5E5">then then</font><font color="#CCCCCC"> what's Danny</font><font color="#E5E5E5"> I would say the</font>

301
00:20:08,370 --> 00:20:13,889
tools that<font color="#E5E5E5"> are available for writing</font>

302
00:20:11,160 --> 00:20:16,980
safety critical software<font color="#E5E5E5"> so you can</font>

303
00:20:13,890 --> 00:20:17,790
benefit from those high level tools just

304
00:20:16,980 --> 00:20:22,100
<font color="#E5E5E5">for yours</font>

305
00:20:17,790 --> 00:20:22,100
<font color="#E5E5E5">ah</font><font color="#CCCCCC"> nice not to have</font><font color="#E5E5E5"> too many bugs</font>

306
00:20:22,880 --> 00:20:57,840
<font color="#CCCCCC">question</font><font color="#E5E5E5"> is it costly to</font><font color="#CCCCCC"> devolve safety</font>

307
00:20:55,500 --> 00:21:02,820
critical software<font color="#CCCCCC"> we dealer</font><font color="#E5E5E5"> certainly</font>

308
00:20:57,840 --> 00:21:07,199
not because<font color="#CCCCCC"> precisely I keep my</font>

309
00:21:02,820 --> 00:21:11,010
comparison<font color="#E5E5E5"> we see the goal of</font><font color="#CCCCCC"> C is to</font>

310
00:21:07,200 --> 00:21:14,960
allow everything<font color="#E5E5E5"> therefore</font><font color="#CCCCCC"> you can prove</font>

311
00:21:11,010 --> 00:21:18,780
nothing because everything<font color="#CCCCCC"> is allowed</font>

312
00:21:14,960 --> 00:21:22,140
<font color="#E5E5E5">okay the more restrictive the language</font>

313
00:21:18,780 --> 00:21:25,770
these easier it is to prove<font color="#CCCCCC"> that it fits</font>

314
00:21:22,140 --> 00:21:26,900
<font color="#E5E5E5">the requirements</font><font color="#CCCCCC"> that that's really the</font>

315
00:21:25,770 --> 00:21:36,780
other<font color="#E5E5E5"> way around</font>

316
00:21:26,900 --> 00:21:42,270
yes that's a good<font color="#CCCCCC"> question</font>

317
00:21:36,780 --> 00:21:46,889
<font color="#E5E5E5">formally a tool used with level a</font>

318
00:21:42,270 --> 00:21:50,910
software duo and<font color="#E5E5E5"> 78 level a software is</font>

319
00:21:46,890 --> 00:21:53,880
supposed to be itself validated at level

320
00:21:50,910 --> 00:21:57,770
a so with the<font color="#CCCCCC"> constraints of revelry</font>

321
00:21:53,880 --> 00:22:03,390
that cannot<font color="#CCCCCC"> be achieved with a compiler</font>

322
00:21:57,770 --> 00:22:05,139
<font color="#E5E5E5">okay so there</font><font color="#CCCCCC"> are some other constraints</font>

323
00:22:03,390 --> 00:22:09,580
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example in a</font>

324
00:22:05,140 --> 00:22:12,400
in the generated<font color="#CCCCCC"> code is</font><font color="#E5E5E5"> right by hand</font>

325
00:22:09,580 --> 00:22:16,120
<font color="#CCCCCC">and compared line by line with</font><font color="#E5E5E5"> the</font>

326
00:22:12,400 --> 00:22:19,420
<font color="#CCCCCC">source</font><font color="#E5E5E5"> you have people who are</font><font color="#CCCCCC"> paid to</font>

327
00:22:16,120 --> 00:22:24,280
<font color="#E5E5E5">read assembly on one side and on the</font>

328
00:22:19,420 --> 00:22:29,980
<font color="#CCCCCC">other</font><font color="#E5E5E5"> side and match line by line you</font>

329
00:22:24,280 --> 00:22:34,000
can certainly<font color="#E5E5E5"> think</font><font color="#CCCCCC"> that human being is</font>

330
00:22:29,980 --> 00:22:37,300
not likely<font color="#CCCCCC"> to be more reliable</font><font color="#E5E5E5"> than an</font>

331
00:22:34,000 --> 00:22:40,000
automatic tool<font color="#E5E5E5"> that's true but</font>

332
00:22:37,300 --> 00:22:42,899
experience<font color="#CCCCCC"> show that people do not</font><font color="#E5E5E5"> make</font>

333
00:22:40,000 --> 00:22:46,570
<font color="#CCCCCC">the same kind</font><font color="#E5E5E5"> of mistake as</font>

334
00:22:42,900 --> 00:22:55,150
<font color="#E5E5E5">automatically</font><font color="#CCCCCC"> tool so having</font><font color="#E5E5E5"> a different</font>

335
00:22:46,570 --> 00:23:03,870
view can<font color="#CCCCCC"> be useful but</font><font color="#E5E5E5"> excuse me each</font>

336
00:22:55,150 --> 00:23:03,870
time<font color="#CCCCCC"> the code is generated Oh certifying</font>

337
00:23:03,990 --> 00:23:14,620
need a<font color="#E5E5E5"> compiler is much too complicated</font>

338
00:23:08,610 --> 00:23:20,189
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the requirements of level a level a</font>

339
00:23:14,620 --> 00:23:27,929
you are annoyed almost nothing well

340
00:23:20,190 --> 00:23:32,260
assignment is allowed<font color="#CCCCCC"> I mean everything</font>

341
00:23:27,930 --> 00:23:34,570
<font color="#E5E5E5">where there is a concern you just have</font>

342
00:23:32,260 --> 00:23:37,890
loops<font color="#E5E5E5"> if an assignment</font><font color="#CCCCCC"> I mean it's very</font>

343
00:23:34,570 --> 00:23:37,889
very constrained

344
00:23:44,460 --> 00:23:48,990
yes exactly

345
00:24:06,870 --> 00:24:36,810
but then the difficulties and<font color="#E5E5E5"> tops at</font><font color="#CCCCCC"> LC</font>

346
00:24:11,140 --> 00:24:39,240
yes it's something<font color="#E5E5E5"> that's being debated</font>

347
00:24:36,810 --> 00:24:45,790
<font color="#E5E5E5">okay</font>

348
00:24:39,240 --> 00:24:50,010
for safety we well I don't think<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font>

349
00:24:45,790 --> 00:24:54,970
ready yet<font color="#CCCCCC"> to give up tests</font><font color="#E5E5E5"> okay</font>

350
00:24:50,010 --> 00:25:00,420
even when<font color="#E5E5E5"> proving why we people will</font>

351
00:24:54,970 --> 00:25:00,420
feel better<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> test certainly</font><font color="#E5E5E5"> but</font>

352
00:25:01,890 --> 00:25:11,440
yes<font color="#E5E5E5"> no</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> question is no the question</font>

353
00:25:06,640 --> 00:25:16,420
is<font color="#CCCCCC"> who will sign the paper saying okay</font>

354
00:25:11,440 --> 00:25:25,770
tests are no more required<font color="#E5E5E5"> nobody will</font>

355
00:25:16,420 --> 00:25:25,770
accept to<font color="#E5E5E5"> sign that okay</font>

356
00:25:27,850 --> 00:25:30,929
[Applause]

357
00:25:31,070 --> 00:25:33,129
you

