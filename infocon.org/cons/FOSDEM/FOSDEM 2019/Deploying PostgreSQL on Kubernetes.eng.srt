1
00:00:09,920 --> 00:00:12,920
so

2
00:00:16,570 --> 00:00:23,270
so<font color="#E5E5E5"> hi</font>

3
00:00:19,730 --> 00:00:26,300
welcome back so this is the I think

4
00:00:23,270 --> 00:00:28,369
<font color="#CCCCCC">third alcohol today before I'm sorry</font>

5
00:00:26,300 --> 00:00:30,650
so<font color="#E5E5E5"> Jimmy is going to speak about</font>

6
00:00:28,370 --> 00:00:34,340
kubernetes<font color="#E5E5E5"> and deploying</font><font color="#CCCCCC"> Postgres on</font>

7
00:00:30,650 --> 00:00:48,620
kubernetes<font color="#CCCCCC"> he works for SolarWinds</font>

8
00:00:34,340 --> 00:00:49,340
and enjoy<font color="#E5E5E5"> thank you thank you I work for</font>

9
00:00:48,620 --> 00:00:52,370
<font color="#E5E5E5">SolarWinds</font>

10
00:00:49,340 --> 00:00:56,540
my name is Jimmy I work in lovely

11
00:00:52,370 --> 00:01:03,170
Edinburgh<font color="#E5E5E5"> very EU friendly Edinburgh may</font>

12
00:00:56,540 --> 00:01:07,430
I say and I'm going<font color="#CCCCCC"> to talk about how</font>

13
00:01:03,170 --> 00:01:13,940
you can get<font color="#E5E5E5"> your favorite database</font>

14
00:01:07,430 --> 00:01:14,960
deployed on kubernetes now that sounds

15
00:01:13,940 --> 00:01:19,729
<font color="#CCCCCC">simple right</font>

16
00:01:14,960 --> 00:01:21,530
it's kubernetes<font color="#E5E5E5"> dust containers first of</font>

17
00:01:19,729 --> 00:01:24,979
all how many<font color="#CCCCCC"> people here are familiar</font>

18
00:01:21,530 --> 00:01:30,920
with kubernetes<font color="#CCCCCC"> okay and who uses it on</font>

19
00:01:24,979 --> 00:01:33,050
a<font color="#E5E5E5"> daily basis oh okay so the first part</font>

20
00:01:30,920 --> 00:01:34,729
of this talk<font color="#E5E5E5"> is going</font><font color="#CCCCCC"> to be talking</font>

21
00:01:33,050 --> 00:01:36,470
<font color="#E5E5E5">about</font><font color="#CCCCCC"> Q Burnett so a few</font><font color="#E5E5E5"> of you will be</font>

22
00:01:34,729 --> 00:01:41,690
bored because<font color="#E5E5E5"> it's things you will</font>

23
00:01:36,470 --> 00:01:44,450
<font color="#E5E5E5">already know but I'm also the reason I</font>

24
00:01:41,690 --> 00:01:47,569
want to do this talk here is to<font color="#E5E5E5"> expose</font>

25
00:01:44,450 --> 00:01:51,649
the kubernetes<font color="#E5E5E5"> let's say workflow and</font>

26
00:01:47,569 --> 00:01:55,640
system<font color="#E5E5E5"> to DBAs and</font><font color="#CCCCCC"> people who play with</font>

27
00:01:51,649 --> 00:02:02,030
databases<font color="#E5E5E5"> and see how it can make their</font>

28
00:01:55,640 --> 00:02:04,729
lives<font color="#CCCCCC"> easier</font><font color="#E5E5E5"> if if at all so what's the</font>

29
00:02:02,030 --> 00:02:10,479
motivation for this talk<font color="#E5E5E5"> the motivation</font>

30
00:02:04,729 --> 00:02:10,478
is please

31
00:02:15,800 --> 00:02:24,470
<font color="#E5E5E5">okay the service-oriented architecture</font>

32
00:02:21,590 --> 00:02:26,510
and whatever that encompasses so

33
00:02:24,470 --> 00:02:29,270
everything is moving towards this

34
00:02:26,510 --> 00:02:35,030
direction<font color="#CCCCCC"> and kubernetes is no exception</font>

35
00:02:29,270 --> 00:02:38,780
SOA including<font color="#CCCCCC"> micro-services is</font><font color="#E5E5E5"> the way</font>

36
00:02:35,030 --> 00:02:41,030
forward<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it decouples your</font>

37
00:02:38,780 --> 00:02:43,820
applications from your<font color="#CCCCCC"> database</font><font color="#E5E5E5"> it</font>

38
00:02:41,030 --> 00:02:46,310
decouples<font color="#E5E5E5"> components of your system</font><font color="#CCCCCC"> from</font>

39
00:02:43,820 --> 00:02:49,040
one another<font color="#CCCCCC"> it's easier to code</font><font color="#E5E5E5"> and</font>

40
00:02:46,310 --> 00:02:51,590
<font color="#E5E5E5">parallel it's easier to replace systems</font>

41
00:02:49,040 --> 00:02:53,929
<font color="#E5E5E5">when they're decoupled</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's what</font>

42
00:02:51,590 --> 00:02:56,240
SOA is all about<font color="#E5E5E5"> and kubernetes is a</font>

43
00:02:53,930 --> 00:02:59,450
perfect example of<font color="#E5E5E5"> essa' way because</font>

44
00:02:56,240 --> 00:03:02,060
everything is abstracted you abstract

45
00:02:59,450 --> 00:03:04,730
services your abstract controllers your

46
00:03:02,060 --> 00:03:08,450
abstract deployment methods<font color="#E5E5E5"> everything</font>

47
00:03:04,730 --> 00:03:12,880
is disconnected from<font color="#E5E5E5"> the actual code in</font>

48
00:03:08,450 --> 00:03:12,880
the actual systems<font color="#E5E5E5"> that it runs on</font>

49
00:03:20,959 --> 00:03:27,079
and the second<font color="#E5E5E5"> reason is cuber nethers</font>

50
00:03:23,299 --> 00:03:29,030
is here to stay it's not<font color="#CCCCCC"> a thing like if</font>

51
00:03:27,079 --> 00:03:31,879
you<font color="#E5E5E5"> remember ganeti which was another</font>

52
00:03:29,030 --> 00:03:33,680
doomed<font color="#CCCCCC"> google project</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> a thing</font>

53
00:03:31,879 --> 00:03:36,219
<font color="#E5E5E5">that is just</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to get abandoned and</font>

54
00:03:33,680 --> 00:03:39,650
only being peddled around by one company

55
00:03:36,219 --> 00:03:42,858
kubernetes is<font color="#E5E5E5"> supported by the cloud</font>

56
00:03:39,650 --> 00:03:46,099
native computing foundation<font color="#E5E5E5"> and that's a</font>

57
00:03:42,859 --> 00:03:49,310
lot<font color="#CCCCCC"> of companies a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of people behind</font>

58
00:03:46,099 --> 00:03:51,500
<font color="#CCCCCC">this effort so it is very well adopted</font>

59
00:03:49,310 --> 00:04:00,019
by the community<font color="#CCCCCC"> by now and it isn't</font>

60
00:03:51,500 --> 00:04:03,290
<font color="#E5E5E5">going anywhere</font><font color="#CCCCCC"> and one other reason is</font>

61
00:04:00,019 --> 00:04:05,769
<font color="#E5E5E5">so we can have fewer phone calls that</font>

62
00:04:03,290 --> 00:04:08,840
wake us up<font color="#CCCCCC"> at 4</font><font color="#E5E5E5"> a.m. kubernetes</font>

63
00:04:05,769 --> 00:04:11,959
<font color="#E5E5E5">automates stuff so that you</font><font color="#CCCCCC"> don't have</font>

64
00:04:08,840 --> 00:04:13,730
to look after your systems<font color="#E5E5E5"> all day long</font>

65
00:04:11,959 --> 00:04:17,449
<font color="#E5E5E5">you don't have to be over the system's</font>

66
00:04:13,730 --> 00:04:20,750
seeing what died<font color="#E5E5E5"> the database</font><font color="#CCCCCC"> die we</font>

67
00:04:17,449 --> 00:04:23,650
need to restart<font color="#CCCCCC"> the database Q&A this</font>

68
00:04:20,750 --> 00:04:23,650
does all that for you

69
00:04:27,410 --> 00:04:33,980
kubernetes<font color="#E5E5E5"> is also free so you can play</font>

70
00:04:29,450 --> 00:04:35,659
around<font color="#E5E5E5"> at home for free or you can get</font>

71
00:04:33,980 --> 00:04:38,420
commercial<font color="#E5E5E5"> support for it it's very well</font>

72
00:04:35,660 --> 00:04:40,220
<font color="#E5E5E5">supported commercially Red Hat for</font>

73
00:04:38,420 --> 00:04:43,610
instance supports kubernetes very well

74
00:04:40,220 --> 00:04:46,790
and you're also able to<font color="#E5E5E5"> get commercial</font>

75
00:04:43,610 --> 00:04:54,320
<font color="#E5E5E5">support from you can buy kubernetes</font>

76
00:04:46,790 --> 00:04:56,800
environments from Google or Amazon and

77
00:04:54,320 --> 00:05:00,170
the reason you can do that<font color="#CCCCCC"> is because</font>

78
00:04:56,800 --> 00:05:02,060
cloud compute and storage<font color="#E5E5E5"> is turning</font>

79
00:05:00,170 --> 00:05:04,850
into a commodity<font color="#CCCCCC"> now it used to be a</font>

80
00:05:02,060 --> 00:05:06,530
luxury<font color="#E5E5E5"> when you could offload the</font>

81
00:05:04,850 --> 00:05:09,020
running<font color="#E5E5E5"> of your systems to something</font>

82
00:05:06,530 --> 00:05:11,450
else but now it's sometimes<font color="#E5E5E5"> cheaper than</font>

83
00:05:09,020 --> 00:05:14,990
actually running on bare<font color="#CCCCCC"> metal</font><font color="#E5E5E5"> so it's</font>

84
00:05:11,450 --> 00:05:17,570
becoming a commodity<font color="#CCCCCC"> and</font><font color="#E5E5E5"> why not have</font>

85
00:05:14,990 --> 00:05:22,730
your systems orchestrated by you but

86
00:05:17,570 --> 00:05:25,690
running elsewhere another reason is

87
00:05:22,730 --> 00:05:25,690
<font color="#E5E5E5">Postgres is hard</font>

88
00:05:26,200 --> 00:05:32,599
<font color="#CCCCCC">well at least industrial strength versus</font>

89
00:05:29,720 --> 00:05:35,030
<font color="#E5E5E5">card it's hard because you need to think</font>

90
00:05:32,600 --> 00:05:37,430
about<font color="#E5E5E5"> reliability you need to think</font>

91
00:05:35,030 --> 00:05:39,919
about availability<font color="#E5E5E5"> you need to think</font>

92
00:05:37,430 --> 00:05:43,130
about<font color="#E5E5E5"> resilience when</font><font color="#CCCCCC"> a cluster goes</font>

93
00:05:39,920 --> 00:05:44,660
down<font color="#E5E5E5"> which system replaces it</font>

94
00:05:43,130 --> 00:05:47,230
which<font color="#E5E5E5"> one's the master which one's the</font>

95
00:05:44,660 --> 00:05:51,140
slave<font color="#CCCCCC"> is it</font><font color="#E5E5E5"> replicated is it backed up</font>

96
00:05:47,230 --> 00:05:56,060
these are things you can automate<font color="#CCCCCC"> using</font>

97
00:05:51,140 --> 00:05:58,640
kubernetes<font color="#CCCCCC"> and the end goal is you</font><font color="#E5E5E5"> won't</font>

98
00:05:56,060 --> 00:06:01,700
<font color="#E5E5E5">Postgres to be a commodity for your</font>

99
00:05:58,640 --> 00:06:03,680
users if you're a DBA<font color="#E5E5E5"> or</font><font color="#CCCCCC"> someone who</font>

100
00:06:01,700 --> 00:06:07,940
<font color="#E5E5E5">looks after the database in your</font>

101
00:06:03,680 --> 00:06:09,650
<font color="#CCCCCC">environment or your organization you</font>

102
00:06:07,940 --> 00:06:12,140
want posters to be a<font color="#E5E5E5"> commodity you want</font>

103
00:06:09,650 --> 00:06:15,500
people<font color="#CCCCCC"> to just request the database get</font>

104
00:06:12,140 --> 00:06:17,360
it and then they should forget<font color="#CCCCCC"> about you</font>

105
00:06:15,500 --> 00:06:18,380
<font color="#E5E5E5">it should just work they shouldn't</font>

106
00:06:17,360 --> 00:06:20,390
bother you<font color="#E5E5E5"> anymore</font>

107
00:06:18,380 --> 00:06:24,530
and that's the end goal if it's a

108
00:06:20,390 --> 00:06:27,800
commodity<font color="#CCCCCC"> then you give</font><font color="#E5E5E5"> it to them it</font>

109
00:06:24,530 --> 00:06:33,559
keeps working<font color="#E5E5E5"> no administration is</font>

110
00:06:27,800 --> 00:06:35,270
necessary for as long<font color="#E5E5E5"> as</font><font color="#CCCCCC"> it works and by</font>

111
00:06:33,560 --> 00:06:37,250
no<font color="#CCCCCC"> means is this</font><font color="#E5E5E5"> presentation an</font>

112
00:06:35,270 --> 00:06:39,090
exhaustive list of the<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the plan</font>

113
00:06:37,250 --> 00:06:42,090
to deploy<font color="#E5E5E5"> possible</font>

114
00:06:39,090 --> 00:06:44,880
kubernetes<font color="#E5E5E5"> or even a good list</font><font color="#CCCCCC"> it's a</font>

115
00:06:42,090 --> 00:06:48,330
few things that I tried out<font color="#E5E5E5"> at work and</font>

116
00:06:44,880 --> 00:06:51,480
at home<font color="#CCCCCC"> and it's more an attempt to</font>

117
00:06:48,330 --> 00:06:57,740
demystify kubernetes this magical word

118
00:06:51,480 --> 00:07:06,810
for us database people so this

119
00:06:57,740 --> 00:07:08,610
presentation is<font color="#CCCCCC"> not me fiddling around</font>

120
00:07:06,810 --> 00:07:10,710
with terminals if you've been to other

121
00:07:08,610 --> 00:07:12,720
kubernetes presentations you will<font color="#E5E5E5"> have</font>

122
00:07:10,710 --> 00:07:15,870
<font color="#CCCCCC">noticed that</font><font color="#E5E5E5"> people like</font><font color="#CCCCCC"> to type</font><font color="#E5E5E5"> into</font>

123
00:07:12,720 --> 00:07:22,950
their terminal<font color="#E5E5E5"> and move terminals around</font>

124
00:07:15,870 --> 00:07:24,780
<font color="#E5E5E5">and show you how it works</font><font color="#CCCCCC"> so I won't do</font>

125
00:07:22,950 --> 00:07:27,990
that<font color="#CCCCCC"> I won't type in the commands</font><font color="#E5E5E5"> just</font>

126
00:07:24,780 --> 00:07:30,270
to show how<font color="#CCCCCC"> they're type then and then</font>

127
00:07:27,990 --> 00:07:32,570
press<font color="#CCCCCC"> Enter and</font><font color="#E5E5E5"> now it works perfectly</font>

128
00:07:30,270 --> 00:07:37,139
<font color="#CCCCCC">and you see what it does</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> it works</font>

129
00:07:32,570 --> 00:07:39,000
<font color="#E5E5E5">but sometimes it doesn't so let me</font>

130
00:07:37,139 --> 00:07:40,830
delete<font color="#CCCCCC"> the configuration</font><font color="#E5E5E5"> that I left</font>

131
00:07:39,000 --> 00:07:44,940
when I tried<font color="#E5E5E5"> it at</font><font color="#CCCCCC"> home before the demo</font>

132
00:07:40,830 --> 00:07:49,979
and restart so this presentation is<font color="#CCCCCC"> not</font>

133
00:07:44,940 --> 00:07:56,610
that but<font color="#E5E5E5"> it is going to talk about the</font>

134
00:07:49,979 --> 00:07:58,940
basics of kubernetes deploying at small

135
00:07:56,610 --> 00:07:58,940
scale

136
00:08:00,580 --> 00:08:05,560
deploying using<font color="#E5E5E5"> help charts we're gonna</font>

137
00:08:03,190 --> 00:08:07,530
talk about<font color="#E5E5E5"> that what it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> and how it</font>

138
00:08:05,560 --> 00:08:10,300
works

139
00:08:07,530 --> 00:08:15,340
deploying using the crunchy data

140
00:08:10,300 --> 00:08:18,639
Postgres operator and some observations

141
00:08:15,340 --> 00:08:28,330
on the previous methods and in general

142
00:08:18,639 --> 00:08:32,770
<font color="#E5E5E5">so let's start with the basics so what</font>

143
00:08:28,330 --> 00:08:35,260
is a container<font color="#CCCCCC"> so if you're not</font><font color="#E5E5E5"> familiar</font>

144
00:08:32,770 --> 00:08:39,399
with<font color="#E5E5E5"> the k8s thing it stands for</font><font color="#CCCCCC"> a</font>

145
00:08:35,260 --> 00:08:42,968
kubernetes<font color="#E5E5E5"> it's just a short way to</font>

146
00:08:39,399 --> 00:08:44,800
write<font color="#CCCCCC"> it it doesn't hold any meaning so</font>

147
00:08:42,969 --> 00:08:46,329
what's the container a container is a

148
00:08:44,800 --> 00:08:50,500
lightweight standalone executable

149
00:08:46,329 --> 00:08:53,949
package it's all in one it's like<font color="#CCCCCC"> a mini</font>

150
00:08:50,500 --> 00:08:56,380
system that you deploy it<font color="#E5E5E5"> has all the</font>

151
00:08:53,950 --> 00:08:58,149
bits and<font color="#E5E5E5"> bobs that it needs to work</font><font color="#CCCCCC"> it</font>

152
00:08:56,380 --> 00:09:00,070
<font color="#E5E5E5">has all the libraries</font><font color="#CCCCCC"> in it it has</font><font color="#E5E5E5"> all</font>

153
00:08:58,149 --> 00:09:02,529
your<font color="#E5E5E5"> code it</font><font color="#CCCCCC"> has the executables</font><font color="#E5E5E5"> and</font>

154
00:09:00,070 --> 00:09:04,750
it's the same everywhere no matter<font color="#E5E5E5"> where</font>

155
00:09:02,529 --> 00:09:10,660
you try to run the container<font color="#E5E5E5"> it should</font>

156
00:09:04,750 --> 00:09:13,779
behave<font color="#E5E5E5"> exactly the same so this is</font>

157
00:09:10,660 --> 00:09:17,290
obviously resource efficient<font color="#CCCCCC"> because we</font>

158
00:09:13,779 --> 00:09:20,649
used to slice new VMs<font color="#CCCCCC"> for everything</font><font color="#E5E5E5"> we</font>

159
00:09:17,290 --> 00:09:24,420
wanted<font color="#E5E5E5"> to try so maybe I should</font><font color="#CCCCCC"> try</font>

160
00:09:20,649 --> 00:09:27,520
<font color="#CCCCCC">Postgres 11 let's</font><font color="#E5E5E5"> build a new VM now</font>

161
00:09:24,420 --> 00:09:30,550
<font color="#E5E5E5">let's change this thing in the</font>

162
00:09:27,520 --> 00:09:34,300
configuration<font color="#E5E5E5"> another VM you</font><font color="#CCCCCC"> eventually</font>

163
00:09:30,550 --> 00:09:37,240
<font color="#E5E5E5">run out of resources where as containers</font>

164
00:09:34,300 --> 00:09:39,579
let you utilize the same resources

165
00:09:37,240 --> 00:09:44,380
<font color="#E5E5E5">whether it's something provided on the</font>

166
00:09:39,579 --> 00:09:46,180
cloud<font color="#E5E5E5"> or bare metal and it's also</font>

167
00:09:44,380 --> 00:09:49,990
platform<font color="#E5E5E5"> independent it solves the</font>

168
00:09:46,180 --> 00:09:52,180
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> developer going it worked in</font>

169
00:09:49,990 --> 00:09:54,339
<font color="#CCCCCC">my machine but</font><font color="#E5E5E5"> why doesn't it work on</font>

170
00:09:52,180 --> 00:09:55,750
the<font color="#E5E5E5"> server it's exactly the same if it</font>

171
00:09:54,339 --> 00:09:58,079
works in your<font color="#E5E5E5"> machine it should work on</font>

172
00:09:55,750 --> 00:09:58,079
<font color="#E5E5E5">the server</font>

173
00:09:58,620 --> 00:10:04,750
so kubernetes<font color="#E5E5E5"> is a container</font>

174
00:10:01,060 --> 00:10:06,310
<font color="#CCCCCC">Orchestrator</font><font color="#E5E5E5"> written in go</font><font color="#CCCCCC"> supported</font><font color="#E5E5E5"> by</font>

175
00:10:04,750 --> 00:10:09,070
the cloud<font color="#CCCCCC"> native</font><font color="#E5E5E5"> community foundation as</font>

176
00:10:06,310 --> 00:10:10,229
we said the things<font color="#E5E5E5"> it does automatically</font>

177
00:10:09,070 --> 00:10:13,960
<font color="#E5E5E5">is</font>

178
00:10:10,230 --> 00:10:18,250
scaling<font color="#E5E5E5"> load balancing and letting you</font>

179
00:10:13,960 --> 00:10:22,660
update your application<font color="#CCCCCC"> in a safe and</font>

180
00:10:18,250 --> 00:10:26,710
<font color="#E5E5E5">controlled manner so how it does that is</font>

181
00:10:22,660 --> 00:10:29,620
it<font color="#CCCCCC"> has the kubernetes api</font><font color="#E5E5E5"> everything is</font>

182
00:10:26,710 --> 00:10:34,290
controlled<font color="#E5E5E5"> through the</font><font color="#CCCCCC"> API</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> API</font>

183
00:10:29,620 --> 00:10:36,880
is totally<font color="#E5E5E5"> an abstraction</font><font color="#CCCCCC"> it can be</font>

184
00:10:34,290 --> 00:10:39,579
running<font color="#E5E5E5"> on bare metal it can be running</font>

185
00:10:36,880 --> 00:10:42,939
<font color="#CCCCCC">on some cloud provider</font><font color="#E5E5E5"> it can be running</font>

186
00:10:39,580 --> 00:10:46,900
<font color="#E5E5E5">on your laptop it doesn't really care it</font>

187
00:10:42,940 --> 00:10:50,440
behaves exactly the<font color="#E5E5E5"> same and the API</font>

188
00:10:46,900 --> 00:10:52,390
exposes what are called resources

189
00:10:50,440 --> 00:10:55,090
because<font color="#E5E5E5"> we don't have objects and go</font>

190
00:10:52,390 --> 00:10:58,780
<font color="#E5E5E5">they</font><font color="#CCCCCC"> call them resources</font><font color="#E5E5E5"> and they're the</font>

191
00:10:55,090 --> 00:11:03,610
<font color="#E5E5E5">things the building blocks</font><font color="#CCCCCC"> that make up</font>

192
00:10:58,780 --> 00:11:06,310
the kubernetes api also another thing<font color="#E5E5E5"> to</font>

193
00:11:03,610 --> 00:11:08,710
<font color="#E5E5E5">consider is the</font><font color="#CCCCCC"> pets versus</font><font color="#E5E5E5"> cattle</font>

194
00:11:06,310 --> 00:11:10,780
debate which means that do you treat

195
00:11:08,710 --> 00:11:15,430
your containers as pets that you

196
00:11:10,780 --> 00:11:17,500
<font color="#E5E5E5">lovingly</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> care of and you you would</font>

197
00:11:15,430 --> 00:11:20,430
really feel bad if one of them died<font color="#CCCCCC"> or</font>

198
00:11:17,500 --> 00:11:25,660
is it cattle that you<font color="#E5E5E5"> just breathe and</font>

199
00:11:20,430 --> 00:11:30,910
they're<font color="#E5E5E5"> replaceable so and we're trying</font>

200
00:11:25,660 --> 00:11:32,800
to move from world where we took

201
00:11:30,910 --> 00:11:36,370
desperate care of our system

202
00:11:32,800 --> 00:11:40,270
and<font color="#CCCCCC"> tried</font><font color="#E5E5E5"> not to let the database fail</font>

203
00:11:36,370 --> 00:11:42,910
or it should be<font color="#CCCCCC"> up</font><font color="#E5E5E5"> 24/7 what happens if</font>

204
00:11:40,270 --> 00:11:45,189
it goes<font color="#CCCCCC"> down</font><font color="#E5E5E5"> we need to not care</font><font color="#CCCCCC"> about</font>

205
00:11:42,910 --> 00:11:47,860
<font color="#CCCCCC">that because</font><font color="#E5E5E5"> we know it will go down</font><font color="#CCCCCC"> so</font>

206
00:11:45,190 --> 00:11:50,230
in this case we treat<font color="#E5E5E5"> it as</font><font color="#CCCCCC"> cattle</font><font color="#E5E5E5"> we</font>

207
00:11:47,860 --> 00:11:51,940
<font color="#E5E5E5">have many database replicas when one of</font>

208
00:11:50,230 --> 00:11:54,640
them dies<font color="#E5E5E5"> kubernetes replaces it with</font>

209
00:11:51,940 --> 00:11:57,640
<font color="#CCCCCC">something</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> it restarts the service</font>

210
00:11:54,640 --> 00:12:00,400
<font color="#E5E5E5">if you request kubernetes to run three</font>

211
00:11:57,640 --> 00:12:03,400
replicas<font color="#CCCCCC"> if one of them dies it restarts</font>

212
00:12:00,400 --> 00:12:11,350
<font color="#E5E5E5">and it moves from two to three replicas</font>

213
00:12:03,400 --> 00:12:13,650
again and so on so let's look at a few

214
00:12:11,350 --> 00:12:13,650
terms

215
00:12:14,700 --> 00:12:21,370
the cluster in kubernetes<font color="#E5E5E5"> is made up of</font>

216
00:12:18,040 --> 00:12:25,060
<font color="#E5E5E5">master node which is the thing that</font><font color="#CCCCCC"> runs</font>

217
00:12:21,370 --> 00:12:26,380
the API server which is our interface<font color="#E5E5E5"> to</font>

218
00:12:25,060 --> 00:12:29,890
the whole<font color="#E5E5E5"> of kubernetes</font>

219
00:12:26,380 --> 00:12:33,400
<font color="#E5E5E5">and the some worker nodes so worker</font>

220
00:12:29,890 --> 00:12:36,460
nodes run cubelet<font color="#CCCCCC"> in them and cubelet is</font>

221
00:12:33,400 --> 00:12:40,140
the thing that monitors<font color="#E5E5E5"> what are called</font>

222
00:12:36,460 --> 00:12:44,290
pods<font color="#E5E5E5"> and pods are the basic units of</font>

223
00:12:40,140 --> 00:12:47,730
<font color="#E5E5E5">let's say equivalent but not exactly</font>

224
00:12:44,290 --> 00:12:51,130
containers<font color="#E5E5E5"> that run in your system and</font>

225
00:12:47,730 --> 00:12:53,890
namespaces are a way to<font color="#E5E5E5"> separate your</font>

226
00:12:51,130 --> 00:12:56,230
cluster<font color="#CCCCCC"> into many virtual clusters</font><font color="#E5E5E5"> so</font>

227
00:12:53,890 --> 00:13:00,510
you can hand<font color="#E5E5E5"> them out to separate users</font>

228
00:12:56,230 --> 00:13:02,740
and you can assign resource quotas<font color="#CCCCCC"> so</font>

229
00:13:00,510 --> 00:13:04,420
<font color="#E5E5E5">you can have a namespace call to</font>

230
00:13:02,740 --> 00:13:07,150
database you can<font color="#E5E5E5"> have a namespace called</font>

231
00:13:04,420 --> 00:13:09,459
<font color="#CCCCCC">SSO and the same cluster that lets</font>

232
00:13:07,150 --> 00:13:12,790
people<font color="#E5E5E5"> log</font><font color="#CCCCCC"> in you can have</font><font color="#E5E5E5"> namespace</font>

233
00:13:09,460 --> 00:13:15,670
called web where all the web the service

234
00:13:12,790 --> 00:13:20,469
parts are running and so on and<font color="#E5E5E5"> you can</font>

235
00:13:15,670 --> 00:13:23,920
assign different<font color="#E5E5E5"> quotas on CPU or disk</font>

236
00:13:20,470 --> 00:13:31,540
usage or memory<font color="#E5E5E5"> usage</font><font color="#CCCCCC"> for each each one</font>

237
00:13:23,920 --> 00:13:34,510
of these<font color="#E5E5E5"> virtual clusters cubelet as we</font>

238
00:13:31,540 --> 00:13:37,770
said talks to the master node and<font color="#E5E5E5"> part</font>

239
00:13:34,510 --> 00:13:40,660
is a container<font color="#E5E5E5"> or group of containers</font>

240
00:13:37,770 --> 00:13:43,030
sharing the same execution<font color="#E5E5E5"> environment</font>

241
00:13:40,660 --> 00:13:45,339
<font color="#E5E5E5">what does that mean it means</font><font color="#CCCCCC"> that</font>

242
00:13:43,030 --> 00:13:47,740
effectively<font color="#CCCCCC"> they think they're running</font>

243
00:13:45,339 --> 00:13:50,110
inside<font color="#CCCCCC"> the same box whatever that box</font>

244
00:13:47,740 --> 00:13:53,110
happens to be and why would<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want</font>

245
00:13:50,110 --> 00:13:55,839
that<font color="#E5E5E5"> you would want for example</font><font color="#CCCCCC"> the</font>

246
00:13:53,110 --> 00:13:58,390
containers to<font color="#E5E5E5"> share a common volume for</font>

247
00:13:55,839 --> 00:14:07,920
storage<font color="#E5E5E5"> or you want them to have inter</font>

248
00:13:58,390 --> 00:14:07,920
process communication so more terms

249
00:14:08,380 --> 00:14:16,460
<font color="#CCCCCC">mini cube is a way to run a small-scale</font>

250
00:14:13,480 --> 00:14:17,990
kubernetes environment<font color="#E5E5E5"> on say</font><font color="#CCCCCC"> you're a</font>

251
00:14:16,460 --> 00:14:21,950
laptop or<font color="#CCCCCC"> wherever you want</font>

252
00:14:17,990 --> 00:14:23,780
<font color="#CCCCCC">it's kubernetes in a</font><font color="#E5E5E5"> VM so you just</font>

253
00:14:21,950 --> 00:14:27,320
install<font color="#E5E5E5"> virtualbox or your favorite</font>

254
00:14:23,780 --> 00:14:29,600
virtualization tool<font color="#CCCCCC"> and you just point</font>

255
00:14:27,320 --> 00:14:31,550
mini cube in its<font color="#E5E5E5"> direction creates a</font>

256
00:14:29,600 --> 00:14:34,540
cube<font color="#E5E5E5"> Renee this cluster and you're good</font>

257
00:14:31,550 --> 00:14:34,540
to<font color="#CCCCCC"> go you</font><font color="#E5E5E5"> can start</font><font color="#CCCCCC"> experimenting</font>

258
00:14:35,500 --> 00:14:40,930
<font color="#E5E5E5">Prometheus is the monitoring solution</font>

259
00:14:38,420 --> 00:14:44,089
that most people use with kubernetes

260
00:14:40,930 --> 00:14:46,760
<font color="#E5E5E5">it's described as the best fit for</font><font color="#CCCCCC"> Cuba</font>

261
00:14:44,090 --> 00:14:49,730
natives because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> also originated</font><font color="#E5E5E5"> by</font>

262
00:14:46,760 --> 00:14:51,620
a cloud native computing foundation it

263
00:14:49,730 --> 00:14:54,350
has<font color="#CCCCCC"> its limitations that</font><font color="#E5E5E5"> people are</font>

264
00:14:51,620 --> 00:14:58,550
trying to<font color="#E5E5E5"> work around</font><font color="#CCCCCC"> but let's not</font><font color="#E5E5E5"> get</font>

265
00:14:54,350 --> 00:15:02,140
<font color="#CCCCCC">into that now one</font><font color="#E5E5E5"> other thing I want to</font>

266
00:14:58,550 --> 00:15:05,990
mention<font color="#CCCCCC"> our custom resource definitions</font>

267
00:15:02,140 --> 00:15:08,120
<font color="#E5E5E5">see are these are the things you use</font><font color="#CCCCCC"> to</font>

268
00:15:05,990 --> 00:15:11,270
expand the<font color="#CCCCCC"> Cuban ADA's API there is a</font>

269
00:15:08,120 --> 00:15:13,250
custom code you write<font color="#E5E5E5"> to do the things</font>

270
00:15:11,270 --> 00:15:19,370
that<font color="#E5E5E5"> kubernetes doesn't do out of the</font>

271
00:15:13,250 --> 00:15:24,320
box<font color="#CCCCCC"> and to</font><font color="#E5E5E5"> automate your stuff so one</font>

272
00:15:19,370 --> 00:15:27,890
<font color="#E5E5E5">thing you can write with CR DS is custom</font>

273
00:15:24,320 --> 00:15:30,650
domain controllers that are called

274
00:15:27,890 --> 00:15:32,810
operators so if you want<font color="#E5E5E5"> something to</font>

275
00:15:30,650 --> 00:15:35,480
<font color="#CCCCCC">look after</font><font color="#E5E5E5"> your database</font><font color="#CCCCCC"> you write a</font>

276
00:15:32,810 --> 00:15:38,569
database operator<font color="#CCCCCC"> that specifically does</font>

277
00:15:35,480 --> 00:15:40,640
a few<font color="#E5E5E5"> things that you want you</font><font color="#CCCCCC"> coded and</font>

278
00:15:38,570 --> 00:15:41,450
go<font color="#E5E5E5"> to manage your system the way you</font>

279
00:15:40,640 --> 00:15:44,510
want it

280
00:15:41,450 --> 00:15:47,330
if<font color="#E5E5E5"> cube</font><font color="#CCCCCC"> Rene this</font><font color="#E5E5E5"> doesn't do what</font><font color="#CCCCCC"> you</font>

281
00:15:44,510 --> 00:15:50,569
need to<font color="#CCCCCC"> do out of</font><font color="#E5E5E5"> the box</font><font color="#CCCCCC"> and it manages</font>

282
00:15:47,330 --> 00:15:52,250
this application for you so this

283
00:15:50,570 --> 00:15:54,860
eliminates the<font color="#CCCCCC"> need for out-of-band</font>

284
00:15:52,250 --> 00:15:57,620
automation you don't need extra<font color="#CCCCCC"> side</font>

285
00:15:54,860 --> 00:15:59,000
<font color="#E5E5E5">cards</font><font color="#CCCCCC"> to load on your</font><font color="#E5E5E5"> containers to take</font>

286
00:15:57,620 --> 00:16:01,670
care<font color="#CCCCCC"> of things or you don't need</font>

287
00:15:59,000 --> 00:16:03,950
hypervisors that keep<font color="#E5E5E5"> track of your pods</font>

288
00:16:01,670 --> 00:16:06,469
externally from kubernetes<font color="#CCCCCC"> you can do it</font>

289
00:16:03,950 --> 00:16:12,970
all inside kubernetes and<font color="#CCCCCC"> you can script</font>

290
00:16:06,470 --> 00:16:16,760
it and go now kubernetes<font color="#E5E5E5"> is all about</font>

291
00:16:12,970 --> 00:16:20,440
<font color="#CCCCCC">defining stuff</font><font color="#E5E5E5"> and the definitions are</font>

292
00:16:16,760 --> 00:16:23,240
all in<font color="#CCCCCC"> llaman</font>

293
00:16:20,440 --> 00:16:25,579
tons of<font color="#CCCCCC"> yam so if you're</font><font color="#E5E5E5"> involved with</font>

294
00:16:23,240 --> 00:16:29,300
kubernetes you should expect to<font color="#CCCCCC"> be</font>

295
00:16:25,579 --> 00:16:31,370
seeing a<font color="#E5E5E5"> lot of llamo</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> what you put</font>

296
00:16:29,300 --> 00:16:35,560
<font color="#E5E5E5">into these llamo files which I'm not</font>

297
00:16:31,370 --> 00:16:38,300
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> show many of them is you</font>

298
00:16:35,560 --> 00:16:41,170
<font color="#CCCCCC">specify the kind of resource each</font>

299
00:16:38,300 --> 00:16:45,229
<font color="#E5E5E5">resource that you put into kubernetes</font>

300
00:16:41,170 --> 00:16:47,959
has a<font color="#CCCCCC"> llamo file that it's sourced from</font>

301
00:16:45,230 --> 00:16:52,279
<font color="#E5E5E5">and you describe the kind so you start</font>

302
00:16:47,959 --> 00:16:56,209
<font color="#E5E5E5">by</font><font color="#CCCCCC"> saying this is of kind pod and then</font>

303
00:16:52,279 --> 00:16:58,730
<font color="#E5E5E5">you put in some metadata you say this is</font>

304
00:16:56,209 --> 00:17:01,729
<font color="#E5E5E5">the name of</font><font color="#CCCCCC"> this resource</font><font color="#E5E5E5"> it's labeled</font>

305
00:16:58,730 --> 00:17:05,089
<font color="#E5E5E5">as fast</font><font color="#CCCCCC"> disk or whatever you want to</font>

306
00:17:01,730 --> 00:17:08,390
<font color="#E5E5E5">label it with to group things together</font>

307
00:17:05,089 --> 00:17:11,599
<font color="#E5E5E5">using labels and what you put inside is</font>

308
00:17:08,390 --> 00:17:15,740
the spec so the<font color="#CCCCCC"> specular definition is</font>

309
00:17:11,599 --> 00:17:19,069
the desired<font color="#E5E5E5"> state for your resource it's</font>

310
00:17:15,740 --> 00:17:22,089
something which<font color="#E5E5E5"> Cuba</font><font color="#CCCCCC"> natives should do</font>

311
00:17:19,069 --> 00:17:25,159
for you<font color="#E5E5E5"> so if you want</font><font color="#CCCCCC"> the state to be</font>

312
00:17:22,089 --> 00:17:27,290
<font color="#CCCCCC">three replicas for instance</font><font color="#E5E5E5"> you put</font><font color="#CCCCCC"> in</font>

313
00:17:25,160 --> 00:17:29,030
<font color="#E5E5E5">the spec</font><font color="#CCCCCC"> you say spec 3 replicas</font>

314
00:17:27,290 --> 00:17:33,070
<font color="#E5E5E5">criminals will try to have</font><font color="#CCCCCC"> three</font>

315
00:17:29,030 --> 00:17:33,070
replicas running at all<font color="#E5E5E5"> times</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> you</font>

316
00:17:33,309 --> 00:17:40,100
cube<font color="#E5E5E5"> CPL or cube</font><font color="#CCCCCC"> cuddlers many people</font>

317
00:17:37,370 --> 00:17:43,600
say is the<font color="#E5E5E5"> command-line tool that you</font>

318
00:17:40,100 --> 00:17:46,730
use for communicating with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> api and</font>

319
00:17:43,600 --> 00:17:49,610
<font color="#CCCCCC">the thing</font><font color="#E5E5E5"> you do is you feed the</font><font color="#CCCCCC"> gamma</font>

320
00:17:46,730 --> 00:17:51,590
file<font color="#E5E5E5"> to cube</font><font color="#CCCCCC"> cuttle create and it</font>

321
00:17:49,610 --> 00:17:54,168
creates it inside your cluster so

322
00:17:51,590 --> 00:17:56,750
immediately you<font color="#E5E5E5"> go from source from a</font>

323
00:17:54,169 --> 00:17:59,750
textual<font color="#CCCCCC"> description of what you want</font><font color="#E5E5E5"> to</font>

324
00:17:56,750 --> 00:18:02,030
an actual object<font color="#E5E5E5"> resource created in</font>

325
00:17:59,750 --> 00:18:04,700
kubernetes<font color="#E5E5E5"> and you can use it to run</font>

326
00:18:02,030 --> 00:18:09,700
commands like get pods which will show

327
00:18:04,700 --> 00:18:15,620
<font color="#E5E5E5">your pods now one</font><font color="#CCCCCC"> of the basic blocks in</font>

328
00:18:09,700 --> 00:18:20,120
<font color="#CCCCCC">queue brunet this is the service the</font>

329
00:18:15,620 --> 00:18:24,199
<font color="#CCCCCC">service is some resources that you</font>

330
00:18:20,120 --> 00:18:28,909
<font color="#CCCCCC">define that exposes your pods</font><font color="#E5E5E5"> through a</font>

331
00:18:24,200 --> 00:18:31,309
URL<font color="#CCCCCC"> so if you have a group of pods</font><font color="#E5E5E5"> that</font>

332
00:18:28,910 --> 00:18:32,840
you want to operate as a<font color="#E5E5E5"> database and</font>

333
00:18:31,309 --> 00:18:33,870
<font color="#E5E5E5">they're replicas you put them in a</font>

334
00:18:32,840 --> 00:18:37,559
service

335
00:18:33,870 --> 00:18:41,149
and the entry point for<font color="#E5E5E5"> those pods</font><font color="#CCCCCC"> is</font>

336
00:18:37,559 --> 00:18:45,270
the service<font color="#CCCCCC"> it targets the pods to be</font>

337
00:18:41,150 --> 00:18:46,620
exposed through<font color="#CCCCCC"> labels and what you put</font>

338
00:18:45,270 --> 00:18:49,559
<font color="#E5E5E5">in the definition of the service is a</font>

339
00:18:46,620 --> 00:18:52,260
selector that<font color="#CCCCCC"> says I want this one to be</font>

340
00:18:49,559 --> 00:18:56,970
<font color="#CCCCCC">the primary</font><font color="#E5E5E5"> so it selects the primary</font>

341
00:18:52,260 --> 00:19:00,059
and exposes<font color="#E5E5E5"> that types of services are a</font>

342
00:18:56,970 --> 00:19:01,920
cluster IP<font color="#E5E5E5"> something which answers on</font>

343
00:19:00,059 --> 00:19:07,740
behalf of all your<font color="#E5E5E5"> databases</font>

344
00:19:01,920 --> 00:19:10,920
it's a node port which is it exposes the

345
00:19:07,740 --> 00:19:16,710
same port<font color="#E5E5E5"> on each kubernetes node for</font>

346
00:19:10,920 --> 00:19:18,809
this service<font color="#E5E5E5"> across all nodes load</font>

347
00:19:16,710 --> 00:19:21,990
balancer<font color="#CCCCCC"> which uses an external load</font>

348
00:19:18,809 --> 00:19:24,750
balancer<font color="#CCCCCC"> to send</font><font color="#E5E5E5"> traffic to your</font>

349
00:19:21,990 --> 00:19:30,179
services<font color="#E5E5E5"> and external name which also</font>

350
00:19:24,750 --> 00:19:33,210
<font color="#E5E5E5">takes care</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> DNS so it's a way to route</font>

351
00:19:30,179 --> 00:19:39,320
traffic from outside the cluster into

352
00:19:33,210 --> 00:19:43,170
<font color="#CCCCCC">your service deployments</font><font color="#E5E5E5"> our controllers</font>

353
00:19:39,320 --> 00:19:46,710
controllers are a type of resource in

354
00:19:43,170 --> 00:19:52,050
kubernetes that takes care of your

355
00:19:46,710 --> 00:19:56,360
systems<font color="#E5E5E5"> and a deployment is the</font>

356
00:19:52,050 --> 00:19:59,520
basically the<font color="#CCCCCC"> controller that</font><font color="#E5E5E5"> automates</font>

357
00:19:56,360 --> 00:20:02,969
the running of<font color="#CCCCCC"> your application it</font><font color="#E5E5E5"> can</font>

358
00:19:59,520 --> 00:20:05,100
enable<font color="#E5E5E5"> you to perform upgrades by</font>

359
00:20:02,970 --> 00:20:07,860
sending a command<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the come to the</font>

360
00:20:05,100 --> 00:20:09,780
deployment<font color="#CCCCCC"> it enables you to roll back</font>

361
00:20:07,860 --> 00:20:12,840
<font color="#CCCCCC">to a previous state</font><font color="#E5E5E5"> or a previous</font>

362
00:20:09,780 --> 00:20:15,629
<font color="#CCCCCC">version of your application it defines</font>

363
00:20:12,840 --> 00:20:21,059
<font color="#CCCCCC">the</font><font color="#E5E5E5"> number of replicated pods you can</font>

364
00:20:15,630 --> 00:20:25,260
say that<font color="#CCCCCC"> please deploy a replica set</font><font color="#E5E5E5"> of</font>

365
00:20:21,059 --> 00:20:28,379
these<font color="#E5E5E5"> three exact replicas for me and it</font>

366
00:20:25,260 --> 00:20:31,710
also has upgrade strategies like rolling

367
00:20:28,380 --> 00:20:33,330
update<font color="#E5E5E5"> which means we turn off one part</font>

368
00:20:31,710 --> 00:20:35,610
at a time<font color="#E5E5E5"> replace it with the new</font>

369
00:20:33,330 --> 00:20:38,309
version<font color="#CCCCCC"> then we've moved to</font><font color="#E5E5E5"> the next pod</font>

370
00:20:35,610 --> 00:20:40,559
<font color="#E5E5E5">and so on or recreate when we want to</font>

371
00:20:38,309 --> 00:20:43,029
take down<font color="#E5E5E5"> the entire service and start</font>

372
00:20:40,559 --> 00:20:48,249
<font color="#E5E5E5">building new</font><font color="#CCCCCC"> pods from the beginning</font>

373
00:20:43,029 --> 00:20:51,109
now let's talk<font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> about state</font>

374
00:20:48,249 --> 00:20:55,970
<font color="#E5E5E5">deployment is mainly useful for</font>

375
00:20:51,109 --> 00:20:59,720
stateless applications so it doesn't

376
00:20:55,970 --> 00:21:05,480
matter which box<font color="#CCCCCC"> your service connects</font>

377
00:20:59,720 --> 00:21:09,649
to it's really about<font color="#E5E5E5"> all of them being</font>

378
00:21:05,480 --> 00:21:12,259
<font color="#E5E5E5">identical so it doesn't matter</font><font color="#CCCCCC"> if you</font>

379
00:21:09,649 --> 00:21:14,479
you<font color="#E5E5E5"> don't have any locally stored</font>

380
00:21:12,259 --> 00:21:16,220
<font color="#E5E5E5">differences in</font><font color="#CCCCCC"> each pod each one of them</font>

381
00:21:14,480 --> 00:21:17,929
can die and be replaced by<font color="#CCCCCC"> another</font><font color="#E5E5E5"> one</font>

382
00:21:16,220 --> 00:21:19,970
<font color="#E5E5E5">no consequences</font>

383
00:21:17,929 --> 00:21:23,059
that's basically what stateless means

384
00:21:19,970 --> 00:21:25,639
here but stateful is much closer<font color="#E5E5E5"> to our</font>

385
00:21:23,059 --> 00:21:28,220
<font color="#E5E5E5">use case when we're talking about</font>

386
00:21:25,639 --> 00:21:30,529
databases<font color="#CCCCCC"> because we need persistent</font>

387
00:21:28,220 --> 00:21:34,759
storage<font color="#CCCCCC"> we need something that can die</font>

388
00:21:30,529 --> 00:21:37,429
and<font color="#E5E5E5"> can</font><font color="#CCCCCC"> come back</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> with the original</font>

389
00:21:34,759 --> 00:21:40,100
data it had in it<font color="#E5E5E5"> because what's the</font>

390
00:21:37,429 --> 00:21:43,220
<font color="#E5E5E5">point</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> also we need</font><font color="#CCCCCC"> to differentiate</font>

391
00:21:40,100 --> 00:21:48,019
<font color="#E5E5E5">between nodes because you have different</font>

392
00:21:43,220 --> 00:21:51,470
<font color="#E5E5E5">data</font><font color="#CCCCCC"> in your master and different data</font>

393
00:21:48,019 --> 00:21:56,059
in your slave or replicas<font color="#E5E5E5"> so you need</font>

394
00:21:51,470 --> 00:21:59,119
some way to have stable tracking of<font color="#CCCCCC"> your</font>

395
00:21:56,059 --> 00:22:02,299
storage<font color="#E5E5E5"> you need to have stable</font><font color="#CCCCCC"> network</font>

396
00:21:59,119 --> 00:22:05,320
<font color="#E5E5E5">identifier for these pods</font><font color="#CCCCCC"> you need to</font>

397
00:22:02,299 --> 00:22:08,809
deploy them<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> correct order because</font>

398
00:22:05,320 --> 00:22:10,730
what if the node<font color="#CCCCCC"> doesn't know if</font><font color="#E5E5E5"> it's a</font>

399
00:22:08,809 --> 00:22:13,519
slave if it's a<font color="#CCCCCC"> replica or if it's the</font>

400
00:22:10,730 --> 00:22:17,749
master<font color="#E5E5E5"> so you need to take care of all</font>

401
00:22:13,519 --> 00:22:19,879
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and stateful set is essentially</font>

402
00:22:17,749 --> 00:22:25,340
what does this for you

403
00:22:19,879 --> 00:22:30,469
stateful set defines a set of replicas

404
00:22:25,340 --> 00:22:36,709
and pods<font color="#E5E5E5"> defines what are called</font>

405
00:22:30,470 --> 00:22:40,220
persistent volumes and what's called a

406
00:22:36,710 --> 00:22:45,759
headless service which takes care<font color="#E5E5E5"> of</font>

407
00:22:40,220 --> 00:22:45,759
your network and<font color="#CCCCCC"> dns for you</font>

408
00:22:52,010 --> 00:22:58,639
and also contains persistent volume

409
00:22:55,070 --> 00:23:01,279
claims<font color="#E5E5E5"> so a persistent volume is stars</font>

410
00:22:58,639 --> 00:23:03,850
you define which is available for usage

411
00:23:01,279 --> 00:23:06,110
<font color="#E5E5E5">and a persistent volume claim is</font>

412
00:23:03,850 --> 00:23:09,320
something which<font color="#E5E5E5"> is using that resource</font>

413
00:23:06,110 --> 00:23:12,080
<font color="#CCCCCC">so it's the same</font><font color="#E5E5E5"> as CPU</font><font color="#CCCCCC"> if you have a</font>

414
00:23:09,320 --> 00:23:14,658
CPU pods are using that<font color="#E5E5E5"> CPU and memory</font>

415
00:23:12,080 --> 00:23:17,029
<font color="#CCCCCC">if you</font><font color="#E5E5E5"> have storage then persistent</font>

416
00:23:14,659 --> 00:23:19,610
volume claims<font color="#CCCCCC"> are what are the pods</font>

417
00:23:17,029 --> 00:23:25,399
let's say in a way that are using up

418
00:23:19,610 --> 00:23:28,939
<font color="#CCCCCC">your resources</font><font color="#E5E5E5"> of storage if you delete</font>

419
00:23:25,399 --> 00:23:31,100
the<font color="#E5E5E5"> stateful set it has</font><font color="#CCCCCC"> a some</font>

420
00:23:28,940 --> 00:23:34,250
<font color="#CCCCCC">side-effects it does not remove the</font>

421
00:23:31,100 --> 00:23:36,549
<font color="#E5E5E5">persistent volumes so if you take down</font>

422
00:23:34,250 --> 00:23:40,370
the service<font color="#E5E5E5"> it doesn't delete the data</font>

423
00:23:36,549 --> 00:23:42,918
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is kind of safer and it also</font>

424
00:23:40,370 --> 00:23:44,899
doesn't guarantee that<font color="#E5E5E5"> the pods</font>

425
00:23:42,919 --> 00:23:47,720
<font color="#E5E5E5">mentioned the stateful set will</font>

426
00:23:44,899 --> 00:23:51,139
gracefully terminate<font color="#E5E5E5"> so the thing you</font>

427
00:23:47,720 --> 00:23:53,600
<font color="#CCCCCC">should do is scale the replica set scale</font>

428
00:23:51,139 --> 00:23:57,049
the stateful set to a number of<font color="#CCCCCC"> 0 pods</font>

429
00:23:53,600 --> 00:23:59,389
<font color="#E5E5E5">and that's how you delete</font><font color="#CCCCCC"> it so let's</font>

430
00:23:57,049 --> 00:24:01,700
look at deploying<font color="#CCCCCC"> Postgres in small</font>

431
00:23:59,389 --> 00:24:03,979
scale<font color="#E5E5E5"> in kubernetes the first thing you</font>

432
00:24:01,700 --> 00:24:08,090
need is<font color="#CCCCCC"> an image</font><font color="#E5E5E5"> so you can build your</font>

433
00:24:03,980 --> 00:24:14,389
<font color="#CCCCCC">own image or you can use an</font><font color="#E5E5E5"> existing</font>

434
00:24:08,090 --> 00:24:19,220
<font color="#E5E5E5">image</font><font color="#CCCCCC"> the official image is the docker</font>

435
00:24:14,389 --> 00:24:21,620
community<font color="#E5E5E5"> quotes official image that is</font>

436
00:24:19,220 --> 00:24:23,720
maintained in docker library<font color="#E5E5E5"> it's what</font>

437
00:24:21,620 --> 00:24:28,100
you get<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> perform a docker</font><font color="#CCCCCC"> port</font>

438
00:24:23,720 --> 00:24:31,190
<font color="#E5E5E5">Postgres this is the most basic image</font>

439
00:24:28,100 --> 00:24:35,240
you can pull<font color="#E5E5E5"> then there's the bitNami</font>

440
00:24:31,190 --> 00:24:37,490
<font color="#E5E5E5">docker image which has</font><font color="#CCCCCC"> a few</font><font color="#E5E5E5"> interesting</font>

441
00:24:35,240 --> 00:24:40,220
twists for example it doesn't<font color="#CCCCCC"> have root</font>

442
00:24:37,490 --> 00:24:44,990
access to the controller to the<font color="#E5E5E5"> to the</font>

443
00:24:40,220 --> 00:24:48,639
container sorry and crunchy data<font color="#E5E5E5"> also</font>

444
00:24:44,990 --> 00:24:50,960
provides containers<font color="#E5E5E5"> there are many</font>

445
00:24:48,639 --> 00:24:53,449
different container<font color="#CCCCCC"> images you can</font><font color="#E5E5E5"> find</font>

446
00:24:50,960 --> 00:24:55,970
if you<font color="#CCCCCC"> search for</font><font color="#E5E5E5"> them on github</font><font color="#CCCCCC"> that</font>

447
00:24:53,450 --> 00:25:00,350
will be really easy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> find so how do</font>

448
00:24:55,970 --> 00:25:02,899
you deploy this now<font color="#CCCCCC"> what do you do is</font>

449
00:25:00,350 --> 00:25:03,600
you<font color="#CCCCCC"> create a</font><font color="#E5E5E5"> configuration map for the</font>

450
00:25:02,899 --> 00:25:08,459
<font color="#CCCCCC">configuration</font>

451
00:25:03,600 --> 00:25:10,620
values<font color="#E5E5E5"> conflict map is like fake volume</font>

452
00:25:08,460 --> 00:25:16,500
that<font color="#E5E5E5"> you can mount on to your pods and</font>

453
00:25:10,620 --> 00:25:19,260
it only contains<font color="#CCCCCC"> configuration</font><font color="#E5E5E5"> so it</font>

454
00:25:16,500 --> 00:25:22,110
looks like<font color="#E5E5E5"> this</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> very</font>

455
00:25:19,260 --> 00:25:24,990
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> you just describe the</font><font color="#E5E5E5"> kind</font>

456
00:25:22,110 --> 00:25:27,659
the metadata labels<font color="#E5E5E5"> and then some data</font>

457
00:25:24,990 --> 00:25:31,220
that<font color="#E5E5E5"> you need like</font><font color="#CCCCCC"> I want</font><font color="#E5E5E5"> my my</font>

458
00:25:27,660 --> 00:25:39,780
containers to grab these values like

459
00:25:31,220 --> 00:25:41,970
database user password the<font color="#E5E5E5"> next step is</font>

460
00:25:39,780 --> 00:25:43,710
you need<font color="#E5E5E5"> as we said some storage so you</font>

461
00:25:41,970 --> 00:25:45,419
need to<font color="#E5E5E5"> create a persistent volume and</font>

462
00:25:43,710 --> 00:25:49,350
you need to create a persistent volume

463
00:25:45,419 --> 00:25:54,270
claim for<font color="#E5E5E5"> your</font><font color="#CCCCCC"> database</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> will use</font>

464
00:25:49,350 --> 00:25:58,428
<font color="#E5E5E5">these resources then you create a</font>

465
00:25:54,270 --> 00:26:01,710
deployment<font color="#CCCCCC"> that describes how you use</font>

466
00:25:58,429 --> 00:26:06,150
this container image and this persistent

467
00:26:01,710 --> 00:26:08,640
volume and then you<font color="#E5E5E5"> create a service to</font>

468
00:26:06,150 --> 00:26:12,210
expose it the simplest use case<font color="#E5E5E5"> is you</font>

469
00:26:08,640 --> 00:26:14,520
write a service<font color="#CCCCCC"> of type</font><font color="#E5E5E5"> node port and</font>

470
00:26:12,210 --> 00:26:22,559
<font color="#E5E5E5">that just opens</font><font color="#CCCCCC"> a port on the node which</font>

471
00:26:14,520 --> 00:26:24,750
<font color="#E5E5E5">is running kubernetes once you've done</font>

472
00:26:22,559 --> 00:26:26,428
<font color="#E5E5E5">that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm not going</font><font color="#CCCCCC"> to go</font><font color="#E5E5E5"> into the</font>

473
00:26:24,750 --> 00:26:27,780
<font color="#CCCCCC">Yamma love it because you</font><font color="#E5E5E5"> can search</font><font color="#CCCCCC"> for</font>

474
00:26:26,429 --> 00:26:29,970
<font color="#CCCCCC">it it's really easy</font><font color="#E5E5E5"> it's very</font>

475
00:26:27,780 --> 00:26:31,408
<font color="#CCCCCC">well-documented</font><font color="#E5E5E5"> kubernetes has good</font>

476
00:26:29,970 --> 00:26:33,750
<font color="#E5E5E5">documentation</font><font color="#CCCCCC"> on how</font><font color="#E5E5E5"> to write these</font>

477
00:26:31,409 --> 00:26:37,289
<font color="#E5E5E5">things and there are millions of</font>

478
00:26:33,750 --> 00:26:40,049
<font color="#CCCCCC">examples on github the last thing</font><font color="#E5E5E5"> to do</font>

479
00:26:37,289 --> 00:26:42,150
<font color="#CCCCCC">is connect your</font><font color="#E5E5E5"> database and</font><font color="#CCCCCC"> you can do</font>

480
00:26:40,049 --> 00:26:45,690
that through<font color="#E5E5E5"> the exposed port on the</font>

481
00:26:42,150 --> 00:26:49,789
node<font color="#E5E5E5"> or you can use cube cuddle to do</font>

482
00:26:45,690 --> 00:26:49,789
port<font color="#CCCCCC"> forwarding and</font><font color="#E5E5E5"> connect on localhost</font>

483
00:26:50,270 --> 00:26:56,190
another method is<font color="#CCCCCC"> helm charts what is</font>

484
00:26:55,620 --> 00:26:58,500
home

485
00:26:56,190 --> 00:27:02,460
helm<font color="#E5E5E5"> is a package manager essentially</font>

486
00:26:58,500 --> 00:27:04,110
for kubernetes<font color="#E5E5E5"> hell</font><font color="#CCCCCC"> is the client that</font>

487
00:27:02,460 --> 00:27:09,840
<font color="#E5E5E5">you run the commands with the same as</font>

488
00:27:04,110 --> 00:27:11,158
you would do with<font color="#E5E5E5"> young or apt-get so</font>

489
00:27:09,840 --> 00:27:13,590
you run<font color="#E5E5E5"> the commands</font><font color="#CCCCCC"> to install and</font>

490
00:27:11,159 --> 00:27:15,000
remove through how tiller<font color="#E5E5E5"> is the server</font>

491
00:27:13,590 --> 00:27:16,080
side component<font color="#E5E5E5"> because you need</font>

492
00:27:15,000 --> 00:27:17,789
<font color="#E5E5E5">something</font>

493
00:27:16,080 --> 00:27:19,980
to receive these commands<font color="#E5E5E5"> from within</font>

494
00:27:17,789 --> 00:27:24,350
the<font color="#CCCCCC"> Kuban a</font><font color="#E5E5E5"> this cluster and</font><font color="#CCCCCC"> you have to</font>

495
00:27:19,980 --> 00:27:28,860
have tiller running to respond and

496
00:27:24,350 --> 00:27:32,399
charts are the<font color="#E5E5E5"> descriptions of these</font>

497
00:27:28,860 --> 00:27:35,428
<font color="#CCCCCC">packages and you guessed it it's also</font>

498
00:27:32,399 --> 00:27:38,219
<font color="#CCCCCC">llamo and they</font><font color="#E5E5E5"> describe a set of related</font>

499
00:27:35,429 --> 00:27:39,630
resources<font color="#E5E5E5"> so you can group everything</font>

500
00:27:38,220 --> 00:27:42,600
<font color="#CCCCCC">that we mentioned like persistent</font>

501
00:27:39,630 --> 00:27:46,140
volumes services deployments definitions

502
00:27:42,600 --> 00:27:49,678
into one chart<font color="#E5E5E5"> and that will create all</font>

503
00:27:46,140 --> 00:27:51,840
<font color="#CCCCCC">of them at once thereby giving you an</font>

504
00:27:49,679 --> 00:27:54,210
application<font color="#CCCCCC"> package that you</font><font color="#E5E5E5"> can use in</font>

505
00:27:51,840 --> 00:27:57,510
<font color="#E5E5E5">kubernetes</font><font color="#CCCCCC"> and you can also customize</font>

506
00:27:54,210 --> 00:27:59,399
this prior<font color="#CCCCCC"> to deployment if you have a</font>

507
00:27:57,510 --> 00:28:02,669
file<font color="#CCCCCC"> called values</font><font color="#E5E5E5"> gamma which is</font>

508
00:27:59,399 --> 00:28:07,500
<font color="#CCCCCC">getting read by</font><font color="#E5E5E5"> helm as it's creating</font>

509
00:28:02,669 --> 00:28:09,630
your deployment and<font color="#E5E5E5"> you can also add</font>

510
00:28:07,500 --> 00:28:11,490
<font color="#CCCCCC">additional files</font><font color="#E5E5E5"> to your</font><font color="#CCCCCC"> charts</font><font color="#E5E5E5"> that get</font>

511
00:28:09,630 --> 00:28:18,000
loaded<font color="#CCCCCC"> into</font><font color="#E5E5E5"> your containers as they're</font>

512
00:28:11,490 --> 00:28:21,360
being<font color="#E5E5E5"> deployed on Cuba needs our use</font>

513
00:28:18,000 --> 00:28:24,899
case for helm for<font color="#E5E5E5"> Postgres is that it's</font>

514
00:28:21,360 --> 00:28:29,820
<font color="#CCCCCC">one step stop installation of a database</font>

515
00:28:24,899 --> 00:28:32,580
<font color="#E5E5E5">and</font><font color="#CCCCCC"> also you can request replicas for</font>

516
00:28:29,820 --> 00:28:36,360
this database<font color="#CCCCCC"> so in one command using</font>

517
00:28:32,580 --> 00:28:38,730
helm install this it makes sense to<font color="#E5E5E5"> be</font>

518
00:28:36,360 --> 00:28:44,549
<font color="#E5E5E5">able to deploy with only one command</font>

519
00:28:38,730 --> 00:28:47,549
without configuring anything the chart

520
00:28:44,549 --> 00:28:52,019
that<font color="#CCCCCC"> I'm going to go</font><font color="#E5E5E5"> into is contributed</font>

521
00:28:47,549 --> 00:28:54,510
by bitNami<font color="#CCCCCC"> and it uses their own image</font>

522
00:28:52,019 --> 00:28:57,389
repo but you can substitute any image

523
00:28:54,510 --> 00:28:59,190
you<font color="#CCCCCC"> want and it will</font><font color="#E5E5E5"> still deploy it the</font>

524
00:28:57,389 --> 00:29:03,289
<font color="#CCCCCC">installation</font><font color="#E5E5E5"> is dead simple</font>

525
00:28:59,190 --> 00:29:06,120
it says<font color="#E5E5E5"> helm install give it a name</font><font color="#CCCCCC"> and</font>

526
00:29:03,289 --> 00:29:09,419
give it the you can optionally give it

527
00:29:06,120 --> 00:29:11,699
some values<font color="#CCCCCC"> like</font><font color="#E5E5E5"> configuration for your</font>

528
00:29:09,419 --> 00:29:16,380
<font color="#CCCCCC">Postgres instance which</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> all</font>

529
00:29:11,700 --> 00:29:18,659
documented<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and you then specify the</font>

530
00:29:16,380 --> 00:29:20,960
<font color="#E5E5E5">name of the package and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want stable</font>

531
00:29:18,659 --> 00:29:25,559
<font color="#E5E5E5">Postgres and install stable Postgres</font>

532
00:29:20,960 --> 00:29:29,350
<font color="#E5E5E5">release in this context</font><font color="#CCCCCC"> means the the</font>

533
00:29:25,559 --> 00:29:32,950
name of your deployment<font color="#E5E5E5"> so my database</font>

534
00:29:29,350 --> 00:29:35,230
<font color="#E5E5E5">or I don't</font><font color="#CCCCCC"> know sales database or</font>

535
00:29:32,950 --> 00:29:36,789
<font color="#E5E5E5">whatever you want to name it it does</font>

536
00:29:35,230 --> 00:29:40,150
doesn't<font color="#CCCCCC"> have anything</font><font color="#E5E5E5"> to do with release</font>

537
00:29:36,789 --> 00:29:43,150
numbers and the<font color="#E5E5E5"> output of this command</font>

538
00:29:40,150 --> 00:29:45,840
will<font color="#CCCCCC"> be some magic that you</font><font color="#E5E5E5"> can run</font><font color="#CCCCCC"> to</font>

539
00:29:43,150 --> 00:29:51,250
connect to your<font color="#E5E5E5"> newly installed instance</font>

540
00:29:45,840 --> 00:29:53,770
and as we said<font color="#E5E5E5"> we can you can already</font>

541
00:29:51,250 --> 00:29:56,070
provide files that will<font color="#CCCCCC"> be fed</font><font color="#E5E5E5"> into the</font>

542
00:29:53,770 --> 00:29:59,830
<font color="#CCCCCC">installation so you can provide your</font><font color="#E5E5E5"> own</font>

543
00:29:56,070 --> 00:30:01,360
<font color="#CCCCCC">PostgreSQL conf or PGH be a</font><font color="#E5E5E5"> conf you</font>

544
00:29:59,830 --> 00:30:04,750
just put them in<font color="#CCCCCC"> the files folder</font>

545
00:30:01,360 --> 00:30:07,629
because charts are a collection<font color="#E5E5E5"> of files</font>

546
00:30:04,750 --> 00:30:10,559
in a folder<font color="#E5E5E5"> and if you put them in files</font>

547
00:30:07,630 --> 00:30:14,169
they will<font color="#E5E5E5"> be mounted as a conflict map</font>

548
00:30:10,559 --> 00:30:18,970
and will be used by<font color="#CCCCCC"> the pods that you</font>

549
00:30:14,169 --> 00:30:20,980
will deploy and this is the output<font color="#E5E5E5"> when</font>

550
00:30:18,970 --> 00:30:24,820
<font color="#CCCCCC">you run it it says I created these</font>

551
00:30:20,980 --> 00:30:28,240
resources<font color="#E5E5E5"> for you</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> services this</font><font color="#CCCCCC"> is</font>

552
00:30:24,820 --> 00:30:30,760
the IEP that<font color="#CCCCCC"> if they got it it is a</font>

553
00:30:28,240 --> 00:30:33,220
stateful set and right<font color="#E5E5E5"> now the default</font>

554
00:30:30,760 --> 00:30:37,510
<font color="#CCCCCC">configuration is it</font><font color="#E5E5E5"> only creates one pod</font>

555
00:30:33,220 --> 00:30:39,760
to connect to and at the time of<font color="#CCCCCC"> the</font>

556
00:30:37,510 --> 00:30:43,419
output you can see that it<font color="#CCCCCC"> wasn't</font><font color="#E5E5E5"> ready</font>

557
00:30:39,760 --> 00:30:47,080
<font color="#CCCCCC">yet because postgis sorry kubernetes</font>

558
00:30:43,419 --> 00:30:49,270
<font color="#E5E5E5">does eventual consistency you describe</font>

559
00:30:47,080 --> 00:30:51,129
the state<font color="#CCCCCC"> that you want</font><font color="#E5E5E5"> it doesn't</font>

560
00:30:49,270 --> 00:30:55,059
guarantee<font color="#E5E5E5"> that it will get there</font><font color="#CCCCCC"> in</font>

561
00:30:51,130 --> 00:30:57,460
<font color="#E5E5E5">milliseconds or instantly or block until</font>

562
00:30:55,059 --> 00:30:59,080
you get a response<font color="#CCCCCC"> it takes care of</font>

563
00:30:57,460 --> 00:31:01,120
things for you and is<font color="#CCCCCC"> eventually</font>

564
00:30:59,080 --> 00:31:06,549
consistent<font color="#CCCCCC"> it brings it to</font><font color="#E5E5E5"> the desired</font>

565
00:31:01,120 --> 00:31:09,428
<font color="#CCCCCC">state so it gives you some magic it says</font>

566
00:31:06,549 --> 00:31:11,760
that this is how<font color="#E5E5E5"> you</font><font color="#CCCCCC"> will access your</font>

567
00:31:09,429 --> 00:31:14,610
instance from<font color="#E5E5E5"> within the</font><font color="#CCCCCC"> cluster and</font>

568
00:31:11,760 --> 00:31:17,530
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the way you get</font><font color="#E5E5E5"> the password</font>

569
00:31:14,610 --> 00:31:23,139
this<font color="#E5E5E5"> is how you can connect</font><font color="#CCCCCC"> your</font>

570
00:31:17,530 --> 00:31:28,450
<font color="#CCCCCC">database from</font><font color="#E5E5E5"> port forwarding or through</font>

571
00:31:23,140 --> 00:31:32,799
the cluster now the internals<font color="#E5E5E5"> of home</font>

572
00:31:28,450 --> 00:31:34,450
charts<font color="#CCCCCC"> of this particular concert is it</font>

573
00:31:32,799 --> 00:31:37,090
creates as we said the stateful said

574
00:31:34,450 --> 00:31:40,299
with only<font color="#E5E5E5"> one</font><font color="#CCCCCC"> replica</font><font color="#E5E5E5"> so you have one</font>

575
00:31:37,090 --> 00:31:42,189
<font color="#CCCCCC">database it creates a headless service</font>

576
00:31:40,299 --> 00:31:42,710
in<font color="#E5E5E5"> service in a persistent volume claim</font>

577
00:31:42,190 --> 00:31:45,530
<font color="#E5E5E5">to</font>

578
00:31:42,710 --> 00:31:52,490
storage<font color="#E5E5E5"> from your server from your</font>

579
00:31:45,530 --> 00:31:56,120
storage provider you can<font color="#E5E5E5"> load you can</font>

580
00:31:52,490 --> 00:31:59,000
<font color="#E5E5E5">configure this</font><font color="#CCCCCC"> helm chart to load your</font>

581
00:31:56,120 --> 00:32:01,280
<font color="#E5E5E5">own custom scripts the things that you</font>

582
00:31:59,000 --> 00:32:03,350
<font color="#CCCCCC">always did when you install the fresh</font>

583
00:32:01,280 --> 00:32:05,240
<font color="#E5E5E5">Postgres instance</font><font color="#CCCCCC"> you can just put them</font>

584
00:32:03,350 --> 00:32:07,699
<font color="#E5E5E5">in the files folder and they will get</font>

585
00:32:05,240 --> 00:32:10,640
executed<font color="#CCCCCC"> for you as the instance comes</font>

586
00:32:07,700 --> 00:32:15,230
up and it can also start a<font color="#E5E5E5"> metrics</font>

587
00:32:10,640 --> 00:32:18,550
<font color="#CCCCCC">Explorer to Prometheus and this</font><font color="#E5E5E5"> project</font>

588
00:32:15,230 --> 00:32:21,500
here the Postgres exporter<font color="#E5E5E5"> on github is</font>

589
00:32:18,550 --> 00:32:24,860
has a few definitions<font color="#E5E5E5"> of exported</font>

590
00:32:21,500 --> 00:32:28,490
metrics that so if you install this on

591
00:32:24,860 --> 00:32:30,740
your<font color="#E5E5E5"> pod</font><font color="#CCCCCC"> then it will send these to</font><font color="#E5E5E5"> the</font>

592
00:32:28,490 --> 00:32:33,080
Prometheus instance in your cluster<font color="#CCCCCC"> and</font>

593
00:32:30,740 --> 00:32:36,350
you'll be able to get performance

594
00:32:33,080 --> 00:32:39,949
<font color="#E5E5E5">metrics and other things from your pod</font>

595
00:32:36,350 --> 00:32:42,740
<font color="#E5E5E5">for example it can output PG stat</font>

596
00:32:39,950 --> 00:32:45,320
<font color="#E5E5E5">activity replication or even custom</font>

597
00:32:42,740 --> 00:32:47,540
queries that you use the other<font color="#E5E5E5"> unit you</font>

598
00:32:45,320 --> 00:32:51,320
write yourself<font color="#E5E5E5"> to determine how your pod</font>

599
00:32:47,540 --> 00:32:53,149
or your database<font color="#E5E5E5"> is doing another chart</font>

600
00:32:51,320 --> 00:32:58,689
which I found interesting is the

601
00:32:53,150 --> 00:32:58,690
ready-made<font color="#CCCCCC"> Patroni charts you can</font><font color="#E5E5E5"> use it</font>

602
00:32:59,350 --> 00:33:06,409
directly<font color="#E5E5E5"> from the helm incubator which</font>

603
00:33:03,740 --> 00:33:10,310
is like the staging area<font color="#CCCCCC"> let's say for</font>

604
00:33:06,410 --> 00:33:14,290
helm charts<font color="#CCCCCC"> it also creates stateful</font>

605
00:33:10,310 --> 00:33:17,600
sets of a master<font color="#CCCCCC"> database with replicas</font>

606
00:33:14,290 --> 00:33:21,379
<font color="#E5E5E5">the default installation in this case is</font>

607
00:33:17,600 --> 00:33:25,459
<font color="#CCCCCC">5 nodes and it</font><font color="#E5E5E5"> uses</font><font color="#CCCCCC"> pilo which is the</font>

608
00:33:21,380 --> 00:33:29,980
combination<font color="#CCCCCC"> of posters and</font><font color="#E5E5E5"> Patroni and</font>

609
00:33:25,460 --> 00:33:29,980
they're put in<font color="#E5E5E5"> the same image by</font><font color="#CCCCCC"> solando</font>

610
00:33:32,690 --> 00:33:39,200
the way you install it is you have the

611
00:33:36,680 --> 00:33:41,900
repository to<font color="#E5E5E5"> helm and you say please</font>

612
00:33:39,200 --> 00:33:44,780
<font color="#E5E5E5">get it from here</font><font color="#CCCCCC"> you update the</font>

613
00:33:41,900 --> 00:33:47,300
dependencies<font color="#E5E5E5"> and then again helm install</font>

614
00:33:44,780 --> 00:33:50,540
this thing incubator<font color="#E5E5E5"> Patroni</font><font color="#CCCCCC"> and</font>

615
00:33:47,300 --> 00:33:53,510
similarly it creates the same type of

616
00:33:50,540 --> 00:33:55,790
cluster now let's look at<font color="#CCCCCC"> something</font>

617
00:33:53,510 --> 00:33:58,030
completely<font color="#CCCCCC"> different which is the</font>

618
00:33:55,790 --> 00:34:02,240
operator pattern the operator pattern is

619
00:33:58,030 --> 00:34:04,310
you have some go code<font color="#E5E5E5"> running your data</font>

620
00:34:02,240 --> 00:34:07,160
but administering<font color="#CCCCCC"> your database for you</font>

621
00:34:04,310 --> 00:34:09,409
<font color="#E5E5E5">so instead of fire-and-forget</font><font color="#CCCCCC"> in the</font>

622
00:34:07,160 --> 00:34:11,929
case of helm which is a package<font color="#CCCCCC"> manager</font>

623
00:34:09,409 --> 00:34:14,810
<font color="#CCCCCC">you run the command that</font><font color="#E5E5E5"> installs it you</font>

624
00:34:11,929 --> 00:34:16,700
forget about it<font color="#CCCCCC"> and the native</font><font color="#E5E5E5"> queue</font>

625
00:34:14,810 --> 00:34:18,590
<font color="#CCCCCC">brunet</font><font color="#E5E5E5"> these controllers like deployment</font>

626
00:34:16,699 --> 00:34:21,888
and stateful set<font color="#E5E5E5"> take care of the</font>

627
00:34:18,590 --> 00:34:25,129
running for<font color="#CCCCCC"> you in this case you can do</font>

628
00:34:21,889 --> 00:34:28,370
more advanced<font color="#E5E5E5"> stuff because the crunchy</font>

629
00:34:25,129 --> 00:34:32,418
operator knows about<font color="#CCCCCC"> data bases and it</font>

630
00:34:28,370 --> 00:34:35,960
knows about<font color="#E5E5E5"> Postgres and you can find it</font>

631
00:34:32,418 --> 00:34:40,489
here<font color="#E5E5E5"> it's also open source on github</font><font color="#CCCCCC"> you</font>

632
00:34:35,960 --> 00:34:43,340
can deploy<font color="#E5E5E5"> Postgres with again streaming</font>

633
00:34:40,489 --> 00:34:45,888
your<font color="#CCCCCC"> applications you can also send it</font>

634
00:34:43,340 --> 00:34:48,800
commands to scale your databases up or

635
00:34:45,889 --> 00:34:51,440
down you<font color="#CCCCCC"> can add additional features</font>

636
00:34:48,800 --> 00:34:53,840
<font color="#CCCCCC">like PG pull and PG bouncer on your</font>

637
00:34:51,440 --> 00:34:57,590
deployments you<font color="#CCCCCC"> can add metrics</font><font color="#E5E5E5"> as we</font>

638
00:34:53,840 --> 00:35:01,250
saw with<font color="#E5E5E5"> helm chart you can use the</font>

639
00:34:57,590 --> 00:35:04,990
operator to change<font color="#E5E5E5"> policies and your</font>

640
00:35:01,250 --> 00:35:08,180
<font color="#E5E5E5">cluster you can use the operator to</font>

641
00:35:04,990 --> 00:35:11,919
assign labels to<font color="#CCCCCC"> your pods to your</font>

642
00:35:08,180 --> 00:35:15,620
databases<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> also perform minor</font>

643
00:35:11,920 --> 00:35:18,560
version upgrades backups and restores

644
00:35:15,620 --> 00:35:20,450
<font color="#E5E5E5">and it also has a task scheduler so you</font>

645
00:35:18,560 --> 00:35:23,420
can schedule backups and they will be

646
00:35:20,450 --> 00:35:25,850
performed automatically and everything

647
00:35:23,420 --> 00:35:27,350
within<font color="#E5E5E5"> the cubanelles cluster you don't</font>

648
00:35:25,850 --> 00:35:29,630
need to have<font color="#E5E5E5"> anything external you don't</font>

649
00:35:27,350 --> 00:35:32,390
need to have a backup machine<font color="#E5E5E5"> that runs</font>

650
00:35:29,630 --> 00:35:35,450
<font color="#CCCCCC">a cron job that</font><font color="#E5E5E5"> does this this is all</font>

651
00:35:32,390 --> 00:35:37,790
done internally<font color="#E5E5E5"> so what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> do is you</font>

652
00:35:35,450 --> 00:35:39,980
get clone the repo<font color="#E5E5E5"> you check out</font>

653
00:35:37,790 --> 00:35:45,619
<font color="#E5E5E5">whatever version you want</font>

654
00:35:39,980 --> 00:35:49,730
the latest one is<font color="#E5E5E5"> a bit risky</font><font color="#CCCCCC"> but some</font>

655
00:35:45,619 --> 00:35:53,390
of them are quite<font color="#E5E5E5"> stable you then give</font>

656
00:35:49,730 --> 00:35:56,300
<font color="#CCCCCC">it</font><font color="#E5E5E5"> the required environment for an</font>

657
00:35:53,390 --> 00:36:01,129
example<font color="#E5E5E5"> deployment you set up an example</font>

658
00:35:56,300 --> 00:36:04,280
<font color="#E5E5E5">an example namespace called demo and you</font>

659
00:36:01,130 --> 00:36:09,410
can find the configuration<font color="#CCCCCC"> of the</font>

660
00:36:04,280 --> 00:36:11,390
operator<font color="#E5E5E5"> in this</font><font color="#CCCCCC"> yamo file here the next</font>

661
00:36:09,410 --> 00:36:14,660
<font color="#CCCCCC">step is you need to give the operator</font>

662
00:36:11,390 --> 00:36:16,609
permissions on the<font color="#CCCCCC"> cluster</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> create the</font>

663
00:36:14,660 --> 00:36:18,410
objects<font color="#CCCCCC"> that it needs to</font><font color="#E5E5E5"> the resources</font>

664
00:36:16,609 --> 00:36:21,920
<font color="#CCCCCC">that it needs</font><font color="#E5E5E5"> to and the controllers</font>

665
00:36:18,410 --> 00:36:26,960
that<font color="#CCCCCC"> it needs to</font><font color="#E5E5E5"> and then by make deploy</font>

666
00:36:21,920 --> 00:36:28,970
operator<font color="#E5E5E5"> you it's a convenience method</font>

667
00:36:26,960 --> 00:36:31,060
<font color="#E5E5E5">that runs the</font><font color="#CCCCCC"> script that actually</font>

668
00:36:28,970 --> 00:36:34,430
deploys it for you

669
00:36:31,060 --> 00:36:36,740
<font color="#E5E5E5">PG o is the client PG o is the thing</font>

670
00:36:34,430 --> 00:36:38,569
<font color="#CCCCCC">that you use to</font><font color="#E5E5E5"> interact</font><font color="#CCCCCC"> with the</font>

671
00:36:36,740 --> 00:36:42,339
operator<font color="#E5E5E5"> of</font><font color="#CCCCCC"> one it's once</font><font color="#E5E5E5"> it's been</font>

672
00:36:38,570 --> 00:36:45,619
loaded into<font color="#E5E5E5"> your cluster and it has</font>

673
00:36:42,339 --> 00:36:49,009
capabilities like<font color="#E5E5E5"> create cluster in this</font>

674
00:36:45,619 --> 00:36:52,160
case cluster<font color="#CCCCCC"> is what we call cluster</font><font color="#E5E5E5"> in</font>

675
00:36:49,010 --> 00:36:54,770
Postgres<font color="#E5E5E5"> it's a database instance and a</font>

676
00:36:52,160 --> 00:36:59,509
database<font color="#E5E5E5"> server that contains database</font>

677
00:36:54,770 --> 00:37:01,940
instances you can give it<font color="#E5E5E5"> parameters</font>

678
00:36:59,510 --> 00:37:06,260
like metrics<font color="#E5E5E5"> so that it can export</font>

679
00:37:01,940 --> 00:37:08,630
metrics immediately<font color="#E5E5E5"> from creation</font><font color="#CCCCCC"> if you</font>

680
00:37:06,260 --> 00:37:10,160
do a PG<font color="#CCCCCC"> o show cluster</font><font color="#E5E5E5"> it will show you</font>

681
00:37:08,630 --> 00:37:14,329
the state of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> cluster it will show</font>

682
00:37:10,160 --> 00:37:17,930
you how<font color="#CCCCCC"> many nodes</font><font color="#E5E5E5"> it administers and by</font>

683
00:37:14,329 --> 00:37:20,329
scale it will show you it can scale<font color="#CCCCCC"> it</font>

684
00:37:17,930 --> 00:37:24,560
up or down<font color="#E5E5E5"> so you can add replicas or</font>

685
00:37:20,329 --> 00:37:27,500
<font color="#E5E5E5">remove them it can also create PG</font>

686
00:37:24,560 --> 00:37:34,880
bouncer<font color="#CCCCCC"> and PG pool deployments across</font>

687
00:37:27,500 --> 00:37:38,440
<font color="#E5E5E5">your nodes your pods and it also knows</font>

688
00:37:34,880 --> 00:37:42,859
about<font color="#E5E5E5"> backrest which you can use to</font>

689
00:37:38,440 --> 00:37:45,859
create backups of<font color="#E5E5E5"> your cluster with a</font>

690
00:37:42,859 --> 00:37:49,250
single command<font color="#E5E5E5"> or if you don't use</font>

691
00:37:45,859 --> 00:37:51,180
backrest you can just type in PG<font color="#E5E5E5"> o</font>

692
00:37:49,250 --> 00:37:56,579
<font color="#CCCCCC">backup and that will do</font>

693
00:37:51,180 --> 00:38:00,328
<font color="#CCCCCC">PG base</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> on of your stuff restore my</font>

694
00:37:56,579 --> 00:38:02,609
cluster<font color="#E5E5E5"> does what you</font><font color="#CCCCCC"> expect it to you</font>

695
00:38:00,329 --> 00:38:05,339
can also instruct it to<font color="#E5E5E5"> perform manual</font>

696
00:38:02,609 --> 00:38:08,848
fail<font color="#E5E5E5"> overs to see what happens when</font>

697
00:38:05,339 --> 00:38:11,599
another pod takes over and the way you

698
00:38:08,849 --> 00:38:16,589
do it is<font color="#E5E5E5"> PG o fail over my</font><font color="#CCCCCC"> cluster</font><font color="#E5E5E5"> query</font>

699
00:38:11,599 --> 00:38:18,329
<font color="#CCCCCC">that should be two dashes</font><font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> that</font>

700
00:38:16,589 --> 00:38:21,359
gets to<font color="#CCCCCC"> fail over targets and then you</font>

701
00:38:18,329 --> 00:38:26,819
say my fail over<font color="#CCCCCC"> target one</font><font color="#E5E5E5"> I want to</font>

702
00:38:21,359 --> 00:38:32,969
<font color="#CCCCCC">target</font><font color="#E5E5E5"> that for</font><font color="#CCCCCC"> failover so a few</font>

703
00:38:26,819 --> 00:38:35,759
observations on deploying by hand it's

704
00:38:32,969 --> 00:38:38,670
it's easy<font color="#CCCCCC"> it's it's good for</font><font color="#E5E5E5"> getting</font>

705
00:38:35,759 --> 00:38:42,180
started<font color="#E5E5E5"> quickly you can find templates</font>

706
00:38:38,670 --> 00:38:44,119
<font color="#E5E5E5">it's that</font><font color="#CCCCCC"> easy to copy the llamo subsidy</font>

707
00:38:42,180 --> 00:38:48,749
<font color="#CCCCCC">of your own values and the configuration</font>

708
00:38:44,119 --> 00:38:51,719
<font color="#CCCCCC">just</font><font color="#E5E5E5"> fire and forget it offers decent</font>

709
00:38:48,749 --> 00:38:54,118
isolation<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> comparable to</font><font color="#CCCCCC"> the</font>

710
00:38:51,719 --> 00:38:57,359
<font color="#CCCCCC">isolation that</font><font color="#E5E5E5"> VM would give you and</font>

711
00:38:54,119 --> 00:38:58,920
it's much less trouble<font color="#CCCCCC"> than creating VMs</font>

712
00:38:57,359 --> 00:39:01,650
and<font color="#E5E5E5"> then creating drives to attach to</font>

713
00:38:58,920 --> 00:39:05,729
the<font color="#E5E5E5"> VMS and how did you share drives and</font>

714
00:39:01,650 --> 00:39:08,729
so on<font color="#CCCCCC"> it also saves resources</font><font color="#E5E5E5"> because it</font>

715
00:39:05,729 --> 00:39:12,200
can reuse the free<font color="#E5E5E5"> memory and disk and</font>

716
00:39:08,729 --> 00:39:15,689
CPU that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not used in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> cluster</font><font color="#E5E5E5"> node</font>

717
00:39:12,200 --> 00:39:18,598
<font color="#E5E5E5">but it also doesn't offer any cloud</font>

718
00:39:15,690 --> 00:39:22,049
native advantages<font color="#E5E5E5"> it's convenient but</font>

719
00:39:18,599 --> 00:39:23,759
<font color="#CCCCCC">its architectural it's really about the</font>

720
00:39:22,049 --> 00:39:25,619
same as a VM

721
00:39:23,759 --> 00:39:30,239
if you don't leverage any of the

722
00:39:25,619 --> 00:39:33,450
kubernetes controllers now for

723
00:39:30,239 --> 00:39:36,180
production usage<font color="#CCCCCC"> I think it would be a</font>

724
00:39:33,450 --> 00:39:40,439
nightmare<font color="#E5E5E5"> to have everything get</font>

725
00:39:36,180 --> 00:39:41,879
deployed by hand<font color="#E5E5E5"> because in order to</font>

726
00:39:40,440 --> 00:39:43,589
<font color="#CCCCCC">find out what's happening</font>

727
00:39:41,880 --> 00:39:46,400
you would have to dig<font color="#CCCCCC"> through all</font><font color="#E5E5E5"> these</font>

728
00:39:43,589 --> 00:39:49,979
<font color="#CCCCCC">yamo files</font><font color="#E5E5E5"> and then you</font><font color="#CCCCCC"> would have to</font>

729
00:39:46,400 --> 00:39:52,049
examine<font color="#E5E5E5"> your clusters resources and</font>

730
00:39:49,979 --> 00:39:54,390
query everything in<font color="#CCCCCC"> order to find out</font>

731
00:39:52,049 --> 00:40:00,829
what's happening<font color="#E5E5E5"> with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so it's not</font>

732
00:39:54,390 --> 00:40:04,470
ideal<font color="#E5E5E5"> and it also the the point behind</font>

733
00:40:00,829 --> 00:40:07,320
kubernetes is<font color="#E5E5E5"> to avoid having an army of</font>

734
00:40:04,470 --> 00:40:11,810
DevOps or<font color="#E5E5E5"> DBAs looking after your stuff</font>

735
00:40:07,320 --> 00:40:15,150
24/7 so it kind<font color="#E5E5E5"> of defeats the purpose</font>

736
00:40:11,810 --> 00:40:18,299
<font color="#CCCCCC">helm charts good for one-time</font>

737
00:40:15,150 --> 00:40:20,550
deployments<font color="#E5E5E5"> like I don't</font><font color="#CCCCCC"> care I</font><font color="#E5E5E5"> need to</font>

738
00:40:18,300 --> 00:40:23,869
deploy this database<font color="#E5E5E5"> and forget about it</font>

739
00:40:20,550 --> 00:40:27,390
<font color="#CCCCCC">I can scale it</font><font color="#E5E5E5"> up at will I can add</font>

740
00:40:23,869 --> 00:40:30,030
memory I<font color="#E5E5E5"> can add disk to it</font><font color="#CCCCCC"> I don't</font>

741
00:40:27,390 --> 00:40:32,368
<font color="#CCCCCC">really</font><font color="#E5E5E5"> have any requirements so it's</font>

742
00:40:30,030 --> 00:40:33,900
good to<font color="#E5E5E5"> fire and forget it's very clean</font>

743
00:40:32,369 --> 00:40:36,150
<font color="#E5E5E5">and transparent because everything is</font>

744
00:40:33,900 --> 00:40:38,970
defined<font color="#E5E5E5"> as the</font><font color="#CCCCCC"> yamo file</font><font color="#E5E5E5"> you find the</font>

745
00:40:36,150 --> 00:40:41,190
chart<font color="#E5E5E5"> you read it</font><font color="#CCCCCC"> you see</font><font color="#E5E5E5"> exactly what</font>

746
00:40:38,970 --> 00:40:43,919
<font color="#CCCCCC">it's deploying and exactly</font><font color="#E5E5E5"> what objects</font>

747
00:40:41,190 --> 00:40:46,560
it's creating in your<font color="#CCCCCC"> cluster one</font>

748
00:40:43,920 --> 00:40:49,020
sticking<font color="#CCCCCC"> point is how do you</font><font color="#E5E5E5"> do major</font>

749
00:40:46,560 --> 00:40:52,230
version upgrades<font color="#E5E5E5"> there is no way to</font>

750
00:40:49,020 --> 00:40:53,840
automate that through the<font color="#E5E5E5"> hump chart you</font>

751
00:40:52,230 --> 00:40:58,260
<font color="#E5E5E5">can perform minor upgrades by</font>

752
00:40:53,840 --> 00:41:00,119
substituting the image but when there's

753
00:40:58,260 --> 00:41:02,160
binary and compatibility like in a major

754
00:41:00,119 --> 00:41:05,720
version<font color="#CCCCCC"> change what do you do you need</font>

755
00:41:02,160 --> 00:41:09,720
<font color="#E5E5E5">to handle</font><font color="#CCCCCC"> that manually slave replicas</font>

756
00:41:05,720 --> 00:41:12,118
don't actually do failover automatically

757
00:41:09,720 --> 00:41:15,419
unless you explicitly set it up to work

758
00:41:12,119 --> 00:41:20,310
that way<font color="#CCCCCC"> so out of the</font><font color="#E5E5E5"> box you won't</font>

759
00:41:15,420 --> 00:41:22,619
have an H a cluster in a sense but it

760
00:41:20,310 --> 00:41:24,330
does give you<font color="#E5E5E5"> because it's so simple it</font>

761
00:41:22,619 --> 00:41:26,849
gives you the flexibility<font color="#CCCCCC"> to carry on</font>

762
00:41:24,330 --> 00:41:28,529
<font color="#E5E5E5">using your existing solutions it's just</font>

763
00:41:26,849 --> 00:41:31,560
that the stuff will<font color="#E5E5E5"> be running elsewhere</font>

764
00:41:28,530 --> 00:41:36,000
it will be running<font color="#E5E5E5"> as containers inside</font>

765
00:41:31,560 --> 00:41:41,040
Kuban a this cluster as opposed to<font color="#E5E5E5"> VMs</font>

766
00:41:36,000 --> 00:41:42,839
or<font color="#E5E5E5"> on bare</font><font color="#CCCCCC"> metal</font><font color="#E5E5E5"> and advantages that</font><font color="#CCCCCC"> it</font>

767
00:41:41,040 --> 00:41:45,720
can be used without really special

768
00:41:42,839 --> 00:41:47,940
permissions<font color="#CCCCCC"> if you have permissions</font>

769
00:41:45,720 --> 00:41:51,480
<font color="#E5E5E5">within a namespace</font><font color="#CCCCCC"> to create</font><font color="#E5E5E5"> resources</font>

770
00:41:47,940 --> 00:41:57,450
<font color="#E5E5E5">then you can just install tiller</font><font color="#CCCCCC"> you can</font>

771
00:41:51,480 --> 00:41:58,400
run helm<font color="#E5E5E5"> and you can deploy anything the</font>

772
00:41:57,450 --> 00:42:02,129
<font color="#CCCCCC">crunchy operator</font>

773
00:41:58,400 --> 00:42:05,040
<font color="#CCCCCC">the other hand</font><font color="#E5E5E5"> is let's say less</font>

774
00:42:02,130 --> 00:42:08,040
transparent<font color="#CCCCCC"> because unless you go</font><font color="#E5E5E5"> into</font>

775
00:42:05,040 --> 00:42:11,170
the go code of the controller<font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't</font>

776
00:42:08,040 --> 00:42:16,360
know<font color="#E5E5E5"> exactly what it's doing</font>

777
00:42:11,170 --> 00:42:20,030
but it does<font color="#E5E5E5"> let</font><font color="#CCCCCC"> you perform</font><font color="#E5E5E5"> many actions</font>

778
00:42:16,360 --> 00:42:22,300
<font color="#E5E5E5">through the CLI</font><font color="#CCCCCC"> and it also takes care</font>

779
00:42:20,030 --> 00:42:25,250
of a<font color="#CCCCCC"> lot of stuff automatically</font><font color="#E5E5E5"> a</font>

780
00:42:22,300 --> 00:42:27,860
disadvantage is that<font color="#E5E5E5"> you need to be</font>

781
00:42:25,250 --> 00:42:31,760
cluster admin<font color="#E5E5E5"> in order to use it</font><font color="#CCCCCC"> right</font>

782
00:42:27,860 --> 00:42:34,910
<font color="#CCCCCC">now you need to create</font><font color="#E5E5E5"> the role based</font>

783
00:42:31,760 --> 00:42:37,760
access control<font color="#CCCCCC"> rules and you need</font>

784
00:42:34,910 --> 00:42:40,100
cluster admin permissions to do that<font color="#E5E5E5"> and</font>

785
00:42:37,760 --> 00:42:42,860
because<font color="#CCCCCC"> see</font><font color="#E5E5E5"> are these custom resource</font>

786
00:42:40,100 --> 00:42:46,040
definitions as we said the ways you

787
00:42:42,860 --> 00:42:46,910
extend the<font color="#CCCCCC"> Kuban a this API</font><font color="#E5E5E5"> are not</font>

788
00:42:46,040 --> 00:42:49,250
<font color="#E5E5E5">namespaced</font>

789
00:42:46,910 --> 00:42:51,890
<font color="#E5E5E5">they're</font><font color="#CCCCCC"> universal for the whole</font><font color="#E5E5E5"> cluster</font>

790
00:42:49,250 --> 00:42:55,040
<font color="#E5E5E5">so you can't say I'm deploying this in</font>

791
00:42:51,890 --> 00:42:57,370
namespace<font color="#CCCCCC"> sales you need to</font><font color="#E5E5E5"> you need to</font>

792
00:42:55,040 --> 00:43:00,800
<font color="#CCCCCC">have your cluster admin created for you</font>

793
00:42:57,370 --> 00:43:02,359
<font color="#CCCCCC">which in a multi-tenant system if you</font>

794
00:43:00,800 --> 00:43:04,760
have like hundreds or thousands of

795
00:43:02,360 --> 00:43:07,160
tenants can<font color="#E5E5E5"> be get tedious</font><font color="#CCCCCC"> can get</font>

796
00:43:04,760 --> 00:43:10,630
tedious<font color="#E5E5E5"> for the administrator</font><font color="#CCCCCC"> of the</font>

797
00:43:07,160 --> 00:43:13,370
cluster<font color="#E5E5E5"> and this is the relevant thing</font>

798
00:43:10,630 --> 00:43:18,140
<font color="#E5E5E5">they were asking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this functionality</font>

799
00:43:13,370 --> 00:43:20,240
<font color="#CCCCCC">on github</font><font color="#E5E5E5"> but the the developer said</font>

800
00:43:18,140 --> 00:43:22,640
we're<font color="#E5E5E5"> not going to look into</font><font color="#CCCCCC"> namespacing</font>

801
00:43:20,240 --> 00:43:26,870
custom resource definitions for<font color="#E5E5E5"> the time</font>

802
00:43:22,640 --> 00:43:32,450
being<font color="#E5E5E5"> also crunchy operator is really</font>

803
00:43:26,870 --> 00:43:36,140
nifty<font color="#E5E5E5"> but I cannot either say use it in</font>

804
00:43:32,450 --> 00:43:37,850
development go ahead it's fine or<font color="#E5E5E5"> say</font>

805
00:43:36,140 --> 00:43:40,460
don't use it in development<font color="#CCCCCC"> it'sit's</font>

806
00:43:37,850 --> 00:43:42,710
your<font color="#E5E5E5"> own risk because it's under heavy</font>

807
00:43:40,460 --> 00:43:45,320
development<font color="#CCCCCC"> it may not</font><font color="#E5E5E5"> be ready for</font>

808
00:43:42,710 --> 00:43:47,000
<font color="#CCCCCC">production or it may do 100 percent</font><font color="#E5E5E5"> of</font>

809
00:43:45,320 --> 00:43:49,490
<font color="#CCCCCC">what do</font><font color="#E5E5E5"> you need you need to try</font><font color="#CCCCCC"> it out</font>

810
00:43:47,000 --> 00:43:52,330
on<font color="#E5E5E5"> your</font><font color="#CCCCCC"> own and test it</font><font color="#E5E5E5"> to make sure</font>

811
00:43:49,490 --> 00:43:55,520
that<font color="#CCCCCC"> it's exactly</font><font color="#E5E5E5"> what you want to get</font>

812
00:43:52,330 --> 00:43:57,140
caveat is that kubernetes<font color="#E5E5E5"> is also under</font>

813
00:43:55,520 --> 00:43:59,240
heavy development it changes from minor

814
00:43:57,140 --> 00:44:03,490
version to minor version with<font color="#E5E5E5"> breaking</font>

815
00:43:59,240 --> 00:44:03,490
changes everything<font color="#CCCCCC"> changes</font><font color="#E5E5E5"> all the time</font>

816
00:44:04,630 --> 00:44:12,020
<font color="#CCCCCC">observations continued</font><font color="#E5E5E5"> a hard problem</font>

817
00:44:10,250 --> 00:44:13,670
that<font color="#E5E5E5"> is not solved by the things that we</font>

818
00:44:12,020 --> 00:44:17,390
<font color="#CCCCCC">mentioned is how do you</font><font color="#E5E5E5"> create a</font>

819
00:44:13,670 --> 00:44:22,310
<font color="#E5E5E5">Postgres cluster that has</font><font color="#CCCCCC"> multiple write</font>

820
00:44:17,390 --> 00:44:22,890
nodes<font color="#CCCCCC"> it's not easily solvable</font><font color="#E5E5E5"> right now</font>

821
00:44:22,310 --> 00:44:25,650
on<font color="#CCCCCC"> CUBAN</font>

822
00:44:22,890 --> 00:44:27,779
these<font color="#CCCCCC"> multi-master is not always a</font>

823
00:44:25,650 --> 00:44:30,359
solution<font color="#CCCCCC"> do you</font><font color="#E5E5E5"> really want one database</font>

824
00:44:27,779 --> 00:44:32,940
<font color="#E5E5E5">where people from all over the place</font>

825
00:44:30,359 --> 00:44:34,410
<font color="#CCCCCC">write with different latencies</font><font color="#E5E5E5"> and you</font>

826
00:44:32,940 --> 00:44:38,130
need to take care<font color="#E5E5E5"> of locking for</font>

827
00:44:34,410 --> 00:44:40,410
<font color="#E5E5E5">everyone is that something you</font><font color="#CCCCCC"> really</font>

828
00:44:38,130 --> 00:44:43,170
<font color="#E5E5E5">want to deal</font><font color="#CCCCCC"> with just</font><font color="#E5E5E5"> to have people</font>

829
00:44:40,410 --> 00:44:46,940
<font color="#CCCCCC">writing into the same table</font><font color="#E5E5E5"> or set of</font>

830
00:44:43,170 --> 00:44:49,380
tables<font color="#CCCCCC"> but what you can do is use the</font>

831
00:44:46,940 --> 00:44:52,769
solutions<font color="#E5E5E5"> that we mentioned with P</font>

832
00:44:49,380 --> 00:44:55,079
geological and expose another way to

833
00:44:52,769 --> 00:44:58,410
replicate tables and write into remote

834
00:44:55,079 --> 00:45:01,230
tables<font color="#E5E5E5"> and you don't need you don't even</font>

835
00:44:58,410 --> 00:45:03,118
need<font color="#CCCCCC"> the</font><font color="#E5E5E5"> custom image for</font><font color="#CCCCCC"> that for</font>

836
00:45:01,230 --> 00:45:08,430
<font color="#E5E5E5">example</font><font color="#CCCCCC"> you can add it as a post install</font>

837
00:45:03,119 --> 00:45:11,250
hook in<font color="#E5E5E5"> helm and it will just run it for</font>

838
00:45:08,430 --> 00:45:15,990
you in your container<font color="#CCCCCC"> as soon as it</font>

839
00:45:11,250 --> 00:45:19,559
creates the pod so you can just have a

840
00:45:15,990 --> 00:45:22,200
command that<font color="#E5E5E5"> says</font><font color="#CCCCCC"> apt-get install P</font>

841
00:45:19,559 --> 00:45:26,730
geological create extension<font color="#E5E5E5"> so and so</font>

842
00:45:22,200 --> 00:45:30,618
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can start using it</font><font color="#CCCCCC"> now what</font>

843
00:45:26,730 --> 00:45:32,849
alternatives do we have you can go for

844
00:45:30,619 --> 00:45:36,170
database as a service<font color="#CCCCCC"> or a whole</font>

845
00:45:32,849 --> 00:45:40,369
platform<font color="#CCCCCC"> as a service like Heroku which</font>

846
00:45:36,170 --> 00:45:44,309
costs a lot<font color="#CCCCCC"> more</font><font color="#E5E5E5"> than what we mentioned</font>

847
00:45:40,369 --> 00:45:49,259
<font color="#E5E5E5">you can also go</font><font color="#CCCCCC"> the way of</font><font color="#E5E5E5"> managed</font>

848
00:45:44,309 --> 00:45:53,160
<font color="#E5E5E5">databases on</font><font color="#CCCCCC"> the cloud like enterprises</font>

849
00:45:49,259 --> 00:45:57,299
<font color="#E5E5E5">the</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> Postgres that it runs on AWS and</font>

850
00:45:53,160 --> 00:45:59,788
manages for<font color="#CCCCCC"> you and then there are these</font>

851
00:45:57,299 --> 00:46:03,900
<font color="#E5E5E5">solutions here that you can use that</font>

852
00:45:59,789 --> 00:46:05,789
offer more<font color="#CCCCCC"> or less</font><font color="#E5E5E5"> Postgres in some sort</font>

853
00:46:03,900 --> 00:46:11,339
of guys or<font color="#E5E5E5"> something which is compatible</font>

854
00:46:05,789 --> 00:46:15,299
with<font color="#E5E5E5"> Postgres your mileage</font><font color="#CCCCCC"> may vary it</font>

855
00:46:11,339 --> 00:46:17,788
is what it is it is<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> a commodity</font>

856
00:46:15,299 --> 00:46:21,259
<font color="#E5E5E5">it's really cheap compared to other</font>

857
00:46:17,789 --> 00:46:25,100
managed systems<font color="#E5E5E5"> but</font>

858
00:46:21,260 --> 00:46:27,560
you get what you pay for<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> define</font>

859
00:46:25,100 --> 00:46:30,009
all of<font color="#E5E5E5"> the above as a service in</font><font color="#CCCCCC"> Cuba</font>

860
00:46:27,560 --> 00:46:33,049
<font color="#CCCCCC">navies</font><font color="#E5E5E5"> and connect them</font><font color="#CCCCCC"> to end points so</font>

861
00:46:30,010 --> 00:46:36,410
<font color="#CCCCCC">Cubans can even administer things that</font>

862
00:46:33,050 --> 00:46:38,300
are<font color="#E5E5E5"> running can even orchestrate things</font>

863
00:46:36,410 --> 00:46:40,100
<font color="#E5E5E5">that are running outside it you all you</font>

864
00:46:38,300 --> 00:46:42,230
<font color="#E5E5E5">need to do is</font><font color="#CCCCCC"> define an</font><font color="#E5E5E5"> end point and</font>

865
00:46:40,100 --> 00:46:45,859
you can say that this end<font color="#CCCCCC"> points this IP</font>

866
00:46:42,230 --> 00:46:49,790
that<font color="#E5E5E5"> Heroku gave me is a database and</font>

867
00:46:45,859 --> 00:47:02,980
it's part of<font color="#E5E5E5"> this cluster so thank you</font>

868
00:46:49,790 --> 00:47:08,420
very<font color="#E5E5E5"> much yeah so the</font><font color="#CCCCCC"> first question</font>

869
00:47:02,980 --> 00:47:10,220
<font color="#E5E5E5">hard one why you didn't</font><font color="#CCCCCC"> mention the</font>

870
00:47:08,420 --> 00:47:10,970
<font color="#E5E5E5">slammd operator which is better on</font>

871
00:47:10,220 --> 00:47:13,580
<font color="#CCCCCC">patron name</font>

872
00:47:10,970 --> 00:47:17,330
I didn't have time to look<font color="#E5E5E5"> into it there</font>

873
00:47:13,580 --> 00:47:20,119
is also<font color="#E5E5E5"> as Lando operator that I haven't</font>

874
00:47:17,330 --> 00:47:25,150
had<font color="#CCCCCC"> the chance</font><font color="#E5E5E5"> to try</font><font color="#CCCCCC"> it yet</font><font color="#E5E5E5"> so okay</font>

875
00:47:20,119 --> 00:47:29,510
another interesting<font color="#E5E5E5"> question is it any</font>

876
00:47:25,150 --> 00:47:32,570
proxying level in operator<font color="#CCCCCC"> entrenched</font>

877
00:47:29,510 --> 00:47:36,170
data operator<font color="#CCCCCC"> proxxon aprox you for</font>

878
00:47:32,570 --> 00:47:39,670
Aquarius which can<font color="#E5E5E5"> handle some ingress</font>

879
00:47:36,170 --> 00:47:44,000
point which can handle<font color="#CCCCCC"> follower</font><font color="#E5E5E5"> of not</font>

880
00:47:39,670 --> 00:47:49,580
<font color="#CCCCCC">I'm not aware of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I haven't</font><font color="#E5E5E5"> really</font>

881
00:47:44,000 --> 00:47:54,740
tried it<font color="#CCCCCC"> okay another question can I use</font>

882
00:47:49,580 --> 00:47:56,869
local<font color="#E5E5E5"> storage</font><font color="#CCCCCC"> instead of</font><font color="#E5E5E5"> BBC</font><font color="#CCCCCC"> I'm in</font>

883
00:47:54,740 --> 00:47:58,939
<font color="#CCCCCC">fourth of quest orage is totally</font>

884
00:47:56,869 --> 00:48:00,560
independent<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can use any sort of</font>

885
00:47:58,940 --> 00:48:03,830
<font color="#E5E5E5">storage as long as you define</font><font color="#CCCCCC"> it and</font>

886
00:48:00,560 --> 00:48:08,090
kubernetes<font color="#E5E5E5"> as a result storage</font><font color="#CCCCCC"> class AMI</font>

887
00:48:03,830 --> 00:48:13,130
I mean MTD or for example<font color="#CCCCCC"> or host</font><font color="#E5E5E5"> path</font>

888
00:48:08,090 --> 00:48:15,320
you can use<font color="#CCCCCC"> Hospice yeah</font><font color="#E5E5E5"> part another</font>

889
00:48:13,130 --> 00:48:17,830
question what kind of replication<font color="#E5E5E5"> can I</font>

890
00:48:15,320 --> 00:48:17,830
use

891
00:48:19,779 --> 00:48:27,799
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> last question</font><font color="#CCCCCC"> above okay so</font><font color="#E5E5E5"> ask</font>

892
00:48:24,680 --> 00:48:30,950
about backups<font color="#E5E5E5"> it is good to have backups</font>

893
00:48:27,799 --> 00:48:33,170
<font color="#E5E5E5">database</font><font color="#CCCCCC"> and backups in kubernetes can I</font>

894
00:48:30,950 --> 00:48:36,740
<font color="#E5E5E5">and make backup to</font><font color="#CCCCCC"> s3 a compatible</font>

895
00:48:33,170 --> 00:48:37,970
storage<font color="#E5E5E5"> yes you can define it to go into</font>

896
00:48:36,740 --> 00:48:39,490
any sort<font color="#E5E5E5"> of storage that you have</font>

897
00:48:37,970 --> 00:48:42,439
attached<font color="#E5E5E5"> to kubernetes</font>

898
00:48:39,490 --> 00:48:44,270
<font color="#CCCCCC">because</font><font color="#E5E5E5"> your your storage is an</font>

899
00:48:42,440 --> 00:48:46,400
abstraction<font color="#E5E5E5"> and cuber natives it can be</font>

900
00:48:44,270 --> 00:48:48,380
an s3 bucket<font color="#CCCCCC"> it can be a</font><font color="#E5E5E5"> volume</font>

901
00:48:46,400 --> 00:48:50,000
somewhere<font color="#E5E5E5"> else can be EBS can be</font>

902
00:48:48,380 --> 00:48:53,420
whatever you<font color="#E5E5E5"> want</font>

903
00:48:50,000 --> 00:48:56,000
speaking of storage so storage<font color="#E5E5E5"> in mostly</font>

904
00:48:53,420 --> 00:48:58,039
<font color="#E5E5E5">and networking as suppose so is it most</font>

905
00:48:56,000 --> 00:49:01,099
accessible to the I've seen<font color="#CCCCCC"> bug sorry</font>

906
00:48:58,039 --> 00:49:04,430
<font color="#E5E5E5">the persistent</font><font color="#CCCCCC"> storage is ravine network</font>

907
00:49:01,099 --> 00:49:06,799
storage I believe and<font color="#E5E5E5"> so is it</font><font color="#CCCCCC"> most</font>

908
00:49:04,430 --> 00:49:08,390
<font color="#CCCCCC">suitable to</font><font color="#E5E5E5"> everything bug</font><font color="#CCCCCC"> it depends</font>

909
00:49:06,799 --> 00:49:10,970
where your cluster is running if you've

910
00:49:08,390 --> 00:49:12,799
defined it to use network storage that

911
00:49:10,970 --> 00:49:14,868
<font color="#E5E5E5">is somewhere else yes if you define your</font>

912
00:49:12,799 --> 00:49:18,380
node to use local storage<font color="#CCCCCC"> that is</font>

913
00:49:14,869 --> 00:49:19,700
attached<font color="#E5E5E5"> to the node then it's local it</font>

914
00:49:18,380 --> 00:49:30,200
doesn't have to be over<font color="#E5E5E5"> the network</font>

915
00:49:19,700 --> 00:49:34,549
<font color="#CCCCCC">that's what I'm saying</font><font color="#E5E5E5"> any questions any</font>

916
00:49:30,200 --> 00:49:39,250
questions<font color="#E5E5E5"> from anyone else okay just one</font>

917
00:49:34,549 --> 00:49:41,779
question<font color="#E5E5E5"> please because</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> just is</font>

918
00:49:39,250 --> 00:49:43,609
<font color="#CCCCCC">okay you have integration with</font>

919
00:49:41,779 --> 00:49:46,549
primitives but what about<font color="#E5E5E5"> query</font>

920
00:49:43,609 --> 00:49:51,319
analytics can a monitor operate<font color="#CCCCCC"> what is</font>

921
00:49:46,549 --> 00:49:54,770
going<font color="#E5E5E5"> on my cluster is any sinner in</font>

922
00:49:51,319 --> 00:49:58,130
operator with monitoring<font color="#E5E5E5"> with very</font>

923
00:49:54,770 --> 00:50:02,000
analytics<font color="#E5E5E5"> well they they mostly tend to</font>

924
00:49:58,130 --> 00:50:03,890
go<font color="#E5E5E5"> the way of</font><font color="#CCCCCC"> premises</font><font color="#E5E5E5"> but you can you</font>

925
00:50:02,000 --> 00:50:06,819
<font color="#E5E5E5">can change the go code and you can make</font>

926
00:50:03,890 --> 00:50:06,819
it<font color="#CCCCCC"> out first</font><font color="#E5E5E5"> to what</font>

