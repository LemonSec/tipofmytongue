1
00:00:21,010 --> 00:00:29,720
do we<font color="#E5E5E5"> start okay</font><font color="#CCCCCC"> so we'll do a quick</font>

2
00:00:26,510 --> 00:00:33,770
talk about why and all in<font color="#CCCCCC"> cement forms</font>

3
00:00:29,720 --> 00:00:35,780
compiled<font color="#E5E5E5"> some R into il</font><font color="#CCCCCC"> it's actually</font>

4
00:00:33,770 --> 00:00:38,920
<font color="#E5E5E5">very similar to</font><font color="#CCCCCC"> the tour</font><font color="#E5E5E5"> that Andre I</font>

5
00:00:35,780 --> 00:00:42,110
did earlier this<font color="#E5E5E5"> morning</font><font color="#CCCCCC"> where she</font>

6
00:00:38,920 --> 00:00:45,230
transpile<font color="#E5E5E5"> typescript into il will use</font>

7
00:00:42,110 --> 00:00:51,140
<font color="#CCCCCC">you a very very</font><font color="#E5E5E5"> similar pipeline very</font>

8
00:00:45,230 --> 00:00:55,099
similar account<font color="#CCCCCC"> concept</font><font color="#E5E5E5"> but it's it's</font>

9
00:00:51,140 --> 00:00:56,660
it's<font color="#E5E5E5"> in in the context of compiling exam</font>

10
00:00:55,100 --> 00:01:00,140
<font color="#E5E5E5">or exam alpha we will come back to</font><font color="#CCCCCC"> that</font>

11
00:00:56,660 --> 00:01:02,898
in into a year<font color="#E5E5E5"> we could we but but also</font>

12
00:01:00,140 --> 00:01:05,570
this concept could<font color="#E5E5E5"> be used to compile</font>

13
00:01:02,899 --> 00:01:11,000
any resource that<font color="#E5E5E5"> is that needs to be</font>

14
00:01:05,570 --> 00:01:13,100
<font color="#E5E5E5">interpreted its runtime I'm doing this</font>

15
00:01:11,000 --> 00:01:16,850
tour as well<font color="#E5E5E5"> because that's one of the</font>

16
00:01:13,100 --> 00:01:21,889
black box<font color="#E5E5E5"> of some rain forms for people</font>

17
00:01:16,850 --> 00:01:23,780
<font color="#CCCCCC">no oh this</font><font color="#E5E5E5"> works very very very few</font>

18
00:01:21,890 --> 00:01:26,840
<font color="#E5E5E5">people know or to contribute</font><font color="#CCCCCC"> to this</font>

19
00:01:23,780 --> 00:01:30,140
<font color="#CCCCCC">poem and we're</font><font color="#E5E5E5"> just scratching the</font>

20
00:01:26,840 --> 00:01:33,680
surface<font color="#CCCCCC"> but</font><font color="#E5E5E5"> that will explain you how</font><font color="#CCCCCC"> it</font>

21
00:01:30,140 --> 00:01:40,310
works<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm Stefan I</font><font color="#E5E5E5"> work in design</font>

22
00:01:33,680 --> 00:01:44,200
forms since 2013<font color="#CCCCCC"> prior to</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'm using</font>

23
00:01:40,310 --> 00:01:50,479
and contributing<font color="#CCCCCC"> to open source</font><font color="#E5E5E5"> since</font>

24
00:01:44,200 --> 00:01:52,400
before 2000 I've been a contributor and

25
00:01:50,479 --> 00:01:55,729
maintainer<font color="#E5E5E5"> on</font><font color="#CCCCCC"> life's</font><font color="#E5E5E5"> part I've been a</font>

26
00:01:52,400 --> 00:01:58,850
contributor on moonlight<font color="#CCCCCC"> on mono</font><font color="#E5E5E5"> on some</font>

27
00:01:55,729 --> 00:02:03,408
other open source<font color="#E5E5E5"> project as well</font>

28
00:01:58,850 --> 00:02:07,789
you can reach<font color="#E5E5E5"> me on Twitter or on</font><font color="#CCCCCC"> giddap</font>

29
00:02:03,409 --> 00:02:11,750
<font color="#E5E5E5">so I'm by cynic that I work on examine</font>

30
00:02:07,790 --> 00:02:15,829
from<font color="#E5E5E5"> since 13 I actually am I'm at</font>

31
00:02:11,750 --> 00:02:20,329
<font color="#CCCCCC">Microsoft for the past</font><font color="#E5E5E5"> two and</font><font color="#CCCCCC"> here when</font>

32
00:02:15,829 --> 00:02:23,900
the<font color="#E5E5E5"> marine was acquired by Microsoft so</font>

33
00:02:20,329 --> 00:02:26,860
<font color="#CCCCCC">some informs mechanism isn't</font><font color="#E5E5E5"> that</font>

34
00:02:23,900 --> 00:02:26,860
correct me so it's fine

35
00:02:26,870 --> 00:02:36,230
<font color="#CCCCCC">gerrant forms is a</font><font color="#E5E5E5"> it's a framework to</font>

36
00:02:30,650 --> 00:02:40,260
<font color="#CCCCCC">create at first mobile applications and</font>

37
00:02:36,230 --> 00:02:44,190
<font color="#CCCCCC">you build</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> application once and then</font>

38
00:02:40,260 --> 00:02:49,709
you deploy<font color="#E5E5E5"> it on any of the support</font>

39
00:02:44,190 --> 00:02:52,859
target and the the<font color="#E5E5E5"> application will be</font>

40
00:02:49,710 --> 00:02:56,150
native on that application<font color="#CCCCCC"> on</font><font color="#E5E5E5"> on that</font><font color="#CCCCCC"> on</font>

41
00:02:52,860 --> 00:03:03,150
that platform<font color="#CCCCCC"> over here you see iOS</font>

42
00:02:56,150 --> 00:03:06,390
Android and it might still<font color="#CCCCCC"> be wp7 or it</font>

43
00:03:03,150 --> 00:03:09,090
could be it could be<font color="#CCCCCC"> u WP</font><font color="#E5E5E5"> I don't</font>

44
00:03:06,390 --> 00:03:12,119
remember which at which time we took

45
00:03:09,090 --> 00:03:14,490
this this<font color="#E5E5E5"> picture so those are those</font>

46
00:03:12,120 --> 00:03:17,880
were the main targets for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> phone</font>

47
00:03:14,490 --> 00:03:22,080
<font color="#E5E5E5">at this</font><font color="#CCCCCC"> time we we support deploying</font>

48
00:03:17,880 --> 00:03:29,400
examine<font color="#E5E5E5"> from vacation to iOS Android Mac</font>

49
00:03:22,080 --> 00:03:34,440
OS<font color="#CCCCCC"> uwp do WPF gtk Tizen</font><font color="#E5E5E5"> view it at CES</font>

50
00:03:29,400 --> 00:03:39,120
<font color="#CCCCCC">so the one</font><font color="#E5E5E5"> you saw</font><font color="#CCCCCC"> earlier and probably</font>

51
00:03:34,440 --> 00:03:43,170
still a few others<font color="#CCCCCC"> so</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> examining we</font>

52
00:03:39,120 --> 00:03:48,510
maintain the<font color="#E5E5E5"> back end for iOS phone do</font>

53
00:03:43,170 --> 00:03:52,980
it for u WP<font color="#E5E5E5"> for Mac all all of the</font><font color="#CCCCCC"> other</font>

54
00:03:48,510 --> 00:03:56,220
backends WPF Tizen<font color="#CCCCCC"> gtk are contributed</font>

55
00:03:52,980 --> 00:04:01,079
<font color="#CCCCCC">by the community</font><font color="#E5E5E5"> so Titan if you don't</font>

56
00:03:56,220 --> 00:04:05,120
know Tizen Tizen<font color="#E5E5E5"> is the OS that runs in</font>

57
00:04:01,080 --> 00:04:09,170
your<font color="#E5E5E5"> Samsung TV</font><font color="#CCCCCC"> or in your Samsung</font>

58
00:04:05,120 --> 00:04:11,640
dishwasher<font color="#E5E5E5"> so if you run to brand</font>

59
00:04:09,170 --> 00:04:17,159
application you know on your<font color="#E5E5E5"> dishwasher</font>

60
00:04:11,640 --> 00:04:22,729
it will be a Tizen one it also Co Tizen

61
00:04:17,160 --> 00:04:25,320
also support some some wearable devices

62
00:04:22,730 --> 00:04:29,590
<font color="#E5E5E5">so this is general</font><font color="#CCCCCC"> informs who is using</font>

63
00:04:25,320 --> 00:04:35,230
the rain falls<font color="#CCCCCC"> great</font>

64
00:04:29,590 --> 00:04:39,250
yeah but I know I know those guys okay

65
00:04:35,230 --> 00:04:43,450
<font color="#CCCCCC">so in so examine</font><font color="#E5E5E5"> forms if you see this</font>

66
00:04:39,250 --> 00:04:48,660
all<font color="#E5E5E5"> of those controls are native</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

67
00:04:43,450 --> 00:04:53,440
platform<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> this this is a this</font>

68
00:04:48,660 --> 00:04:55,870
<font color="#CCCCCC">is an iOS map this is a big map and this</font>

69
00:04:53,440 --> 00:04:58,300
<font color="#E5E5E5">is a Google map but but the code that</font>

70
00:04:55,870 --> 00:05:02,830
run<font color="#E5E5E5"> that is exactly the same</font>

71
00:04:58,300 --> 00:05:08,380
everything is native<font color="#E5E5E5"> at the time at</font>

72
00:05:02,830 --> 00:05:13,479
<font color="#E5E5E5">rendering</font><font color="#CCCCCC"> and we create the UI</font><font color="#E5E5E5"> either in</font>

73
00:05:08,380 --> 00:05:15,850
c-sharp<font color="#CCCCCC"> in F sharp or in exam or what</font>

74
00:05:13,479 --> 00:05:18,599
what interested us at<font color="#E5E5E5"> this time is</font>

75
00:05:15,850 --> 00:05:18,600
examined

76
00:05:19,320 --> 00:05:26,139
sorry informs also open source

77
00:05:21,820 --> 00:05:32,469
it<font color="#CCCCCC"> also Don get up so it's open its</font><font color="#E5E5E5"> open</font>

78
00:05:26,139 --> 00:05:36,720
source<font color="#E5E5E5"> almost since I think we open</font>

79
00:05:32,470 --> 00:05:40,180
source it a bit before being acquired by

80
00:05:36,720 --> 00:05:41,530
by<font color="#E5E5E5"> Microsoft so it's it's it's been it's</font>

81
00:05:40,180 --> 00:05:45,520
<font color="#CCCCCC">been open source for</font><font color="#E5E5E5"> the past three</font>

82
00:05:41,530 --> 00:05:49,450
<font color="#CCCCCC">years we get a lot of external</font>

83
00:05:45,520 --> 00:05:50,469
<font color="#E5E5E5">contributors the community is create it</font>

84
00:05:49,450 --> 00:05:59,320
happens<font color="#E5E5E5"> on get up</font>

85
00:05:50,470 --> 00:06:03,580
you do get a<font color="#E5E5E5"> bad rest a bit later so</font>

86
00:05:59,320 --> 00:06:08,260
this is a very simple<font color="#E5E5E5"> example file</font><font color="#CCCCCC"> with</font>

87
00:06:03,580 --> 00:06:12,060
<font color="#E5E5E5">not familiar with examiner</font><font color="#CCCCCC"> no ok so</font>

88
00:06:08,260 --> 00:06:14,469
<font color="#CCCCCC">example is just</font><font color="#E5E5E5"> a descriptive language</font>

89
00:06:12,060 --> 00:06:18,310
<font color="#E5E5E5">it's not a</font><font color="#CCCCCC"> programming language is</font><font color="#E5E5E5"> just</font>

90
00:06:14,470 --> 00:06:22,380
a<font color="#E5E5E5"> descriptive language that can create</font>

91
00:06:18,310 --> 00:06:24,370
object and assign properties<font color="#E5E5E5"> so there is</font>

92
00:06:22,380 --> 00:06:28,479
no conditionals

93
00:06:24,370 --> 00:06:30,900
there is it's<font color="#E5E5E5"> not it's not</font><font color="#CCCCCC"> Turing</font>

94
00:06:28,479 --> 00:06:34,060
complete language<font color="#E5E5E5"> it's just</font><font color="#CCCCCC"> a decorative</font>

95
00:06:30,900 --> 00:06:39,190
language and in this case we<font color="#CCCCCC"> just</font><font color="#E5E5E5"> create</font>

96
00:06:34,060 --> 00:06:42,669
it<font color="#E5E5E5"> it's a it's a sub set of XML</font>

97
00:06:39,190 --> 00:06:43,360
<font color="#CCCCCC">I mean it's XML</font><font color="#E5E5E5"> it's example compliant</font>

98
00:06:42,669 --> 00:06:45,729
so

99
00:06:43,360 --> 00:06:48,520
<font color="#E5E5E5">examiner is just XML so it you define</font>

100
00:06:45,729 --> 00:06:50,469
the content page<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the content page we</font>

101
00:06:48,520 --> 00:06:53,979
define a stack layout and in the stack

102
00:06:50,470 --> 00:06:59,560
layout<font color="#E5E5E5"> we define a label with a text and</font>

103
00:06:53,979 --> 00:07:04,270
that text is bound to a property<font color="#E5E5E5"> of the</font>

104
00:06:59,560 --> 00:07:07,810
context<font color="#E5E5E5"> so that that</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> when see in</font>

105
00:07:04,270 --> 00:07:11,948
the when you<font color="#E5E5E5"> see this basically you've</font>

106
00:07:07,810 --> 00:07:18,780
seen most of what<font color="#CCCCCC"> summaries so it's</font><font color="#E5E5E5"> just</font>

107
00:07:11,949 --> 00:07:21,370
quite simple what we<font color="#E5E5E5"> used to do on</font>

108
00:07:18,780 --> 00:07:25,059
examine forms is taking<font color="#CCCCCC"> disks and</font>

109
00:07:21,370 --> 00:07:28,360
shipping it as an<font color="#CCCCCC"> embedded resource in</font>

110
00:07:25,060 --> 00:07:31,780
the assembly and<font color="#E5E5E5"> at runtime when the</font>

111
00:07:28,360 --> 00:07:36,599
view had to be inflated<font color="#E5E5E5"> we were</font>

112
00:07:31,780 --> 00:07:42,270
extracting<font color="#E5E5E5"> this resource parsing it at</font>

113
00:07:36,599 --> 00:07:47,020
runtime<font color="#CCCCCC"> parsing it to nestea and then</font>

114
00:07:42,270 --> 00:07:51,068
expanding<font color="#E5E5E5"> that using</font><font color="#CCCCCC"> reflection so it</font>

115
00:07:47,020 --> 00:07:53,770
becomes a full<font color="#CCCCCC"> object tree so from</font><font color="#E5E5E5"> that</font>

116
00:07:51,069 --> 00:07:56,319
we turn that to actually<font color="#CCCCCC"> an</font><font color="#E5E5E5"> object which</font>

117
00:07:53,770 --> 00:07:58,870
<font color="#CCCCCC">is a Content page that contains a stack</font>

118
00:07:56,319 --> 00:08:00,699
layout that itself<font color="#E5E5E5"> contain a label with</font>

119
00:07:58,870 --> 00:08:04,180
bindings<font color="#E5E5E5"> you could write the equivalent</font>

120
00:08:00,699 --> 00:08:11,669
<font color="#CCCCCC">of C shop code for that</font><font color="#E5E5E5"> it would take</font>

121
00:08:04,180 --> 00:08:14,889
something<font color="#E5E5E5"> like 15 lines the problem is</font>

122
00:08:11,669 --> 00:08:17,020
if you if you if<font color="#E5E5E5"> you come back to the</font>

123
00:08:14,889 --> 00:08:18,639
previous<font color="#CCCCCC"> slide on the middle there</font><font color="#E5E5E5"> was</font>

124
00:08:17,020 --> 00:08:24,299
an<font color="#CCCCCC"> android device and</font><font color="#E5E5E5"> on real devices</font>

125
00:08:18,639 --> 00:08:27,669
are quite diverse

126
00:08:24,300 --> 00:08:30,610
you have to<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> the ein that the</font>

127
00:08:27,669 --> 00:08:35,559
guys were here<font color="#CCCCCC"> having</font><font color="#E5E5E5"> in there and those</font>

128
00:08:30,610 --> 00:08:39,849
<font color="#CCCCCC">are Samsung those are LG</font><font color="#E5E5E5"> but but there</font>

129
00:08:35,559 --> 00:08:42,669
is just<font color="#E5E5E5"> a full full set of devices in</font>

130
00:08:39,849 --> 00:08:44,949
Android that<font color="#CCCCCC"> takes something like sixty</font>

131
00:08:42,669 --> 00:08:46,750
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> of the market that</font><font color="#CCCCCC"> are low-end</font>

132
00:08:44,949 --> 00:08:49,060
<font color="#E5E5E5">devices something that costs less than</font>

133
00:08:46,750 --> 00:08:50,949
<font color="#CCCCCC">hundred bucks</font><font color="#E5E5E5"> all that</font><font color="#CCCCCC"> they've been</font>

134
00:08:49,060 --> 00:08:55,540
<font color="#CCCCCC">bought more than three years ago and</font>

135
00:08:50,949 --> 00:08:58,209
those one single<font color="#CCCCCC"> code</font>

136
00:08:55,540 --> 00:09:02,170
or very<font color="#E5E5E5"> few memory and when</font><font color="#CCCCCC"> you start</font>

137
00:08:58,209 --> 00:09:06,310
doing<font color="#E5E5E5"> passing of big files on those</font>

138
00:09:02,170 --> 00:09:08,229
using reflection<font color="#CCCCCC"> on those creating tons</font>

139
00:09:06,310 --> 00:09:10,239
of object because you need interview<font color="#CCCCCC"> you</font>

140
00:09:08,230 --> 00:09:15,610
need object and then garbage collecting

141
00:09:10,240 --> 00:09:21,180
them<font color="#CCCCCC"> you</font><font color="#E5E5E5"> end up with quite bad</font>

142
00:09:15,610 --> 00:09:24,370
performances<font color="#E5E5E5"> meaning</font><font color="#CCCCCC"> that for</font><font color="#E5E5E5"> large for</font>

143
00:09:21,180 --> 00:09:26,800
for large summer file<font color="#E5E5E5"> turning that</font>

144
00:09:24,370 --> 00:09:31,870
<font color="#CCCCCC">general file into an object tree could</font>

145
00:09:26,800 --> 00:09:33,008
take a few tens of millisecond like 60

146
00:09:31,870 --> 00:09:37,899
<font color="#E5E5E5">or 70 millisecond</font>

147
00:09:33,009 --> 00:09:40,600
just to interpret the input and having

148
00:09:37,899 --> 00:09:44,740
an object tree which<font color="#CCCCCC"> is not yet at</font><font color="#E5E5E5"> this</font>

149
00:09:40,600 --> 00:09:48,579
time render on screen so that<font color="#CCCCCC"> seventy</font>

150
00:09:44,740 --> 00:09:51,250
<font color="#CCCCCC">miss again</font><font color="#E5E5E5"> that all</font><font color="#CCCCCC"> sixty or independent</font>

151
00:09:48,579 --> 00:09:54,130
on<font color="#CCCCCC"> the dependent realize that were just</font>

152
00:09:51,250 --> 00:10:01,209
<font color="#E5E5E5">lost on which that that was not come not</font>

153
00:09:54,130 --> 00:10:03,610
compressible time yeah<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> main the</font>

154
00:10:01,209 --> 00:10:06,010
main<font color="#E5E5E5"> reason for that is the the the main</font>

155
00:10:03,610 --> 00:10:07,870
program for that the<font color="#CCCCCC"> passing at</font><font color="#E5E5E5"> runtime</font>

156
00:10:06,010 --> 00:10:15,490
<font color="#E5E5E5">annotation is in reflection its</font>

157
00:10:07,870 --> 00:10:17,170
performance on Android<font color="#E5E5E5"> so as we are</font>

158
00:10:15,490 --> 00:10:19,870
mobile application mobile application

159
00:10:17,170 --> 00:10:22,599
most of the time<font color="#E5E5E5"> 99%</font><font color="#CCCCCC"> of the time</font>

160
00:10:19,870 --> 00:10:26,380
are<font color="#E5E5E5"> self-contained by self-contained I</font>

161
00:10:22,600 --> 00:10:29,980
mean that all<font color="#E5E5E5"> of the assets are already</font>

162
00:10:26,380 --> 00:10:32,980
part of the<font color="#CCCCCC"> application itself yeah it</font>

163
00:10:29,980 --> 00:10:37,589
can connect to external servers but most

164
00:10:32,980 --> 00:10:39,670
of the was of the views<font color="#CCCCCC"> you would in in</font>

165
00:10:37,589 --> 00:10:42,519
in<font color="#E5E5E5"> another application that's not</font><font color="#CCCCCC"> a</font>

166
00:10:39,670 --> 00:10:49,300
<font color="#CCCCCC">marine</font><font color="#E5E5E5"> forms you would write</font><font color="#CCCCCC"> it in XML</font>

167
00:10:42,519 --> 00:10:54,850
<font color="#E5E5E5">in in in Android</font><font color="#CCCCCC"> you write it in</font><font color="#E5E5E5"> Swift</font>

168
00:10:49,300 --> 00:10:56,800
or<font color="#CCCCCC"> objective-c in iOS</font><font color="#E5E5E5"> and so why so</font>

169
00:10:54,850 --> 00:11:00,069
everything is<font color="#E5E5E5"> known at the</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> of the</font>

170
00:10:56,800 --> 00:11:02,349
<font color="#E5E5E5">computation so we could technically it's</font>

171
00:11:00,069 --> 00:11:04,860
not<font color="#E5E5E5"> everything that we know that that</font><font color="#CCCCCC"> we</font>

172
00:11:02,350 --> 00:11:08,140
know at runtime<font color="#E5E5E5"> is also known at</font>

173
00:11:04,860 --> 00:11:12,760
compilation time so why not

174
00:11:08,140 --> 00:11:15,010
keep the capability of writing exam

175
00:11:12,760 --> 00:11:19,450
<font color="#E5E5E5">advice because summer</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> great way to</font>

176
00:11:15,010 --> 00:11:23,200
describe<font color="#CCCCCC"> UI</font><font color="#E5E5E5"> why not</font><font color="#CCCCCC"> turn</font><font color="#E5E5E5"> the keep this</font>

177
00:11:19,450 --> 00:11:25,149
capability<font color="#CCCCCC"> but turn that into something</font>

178
00:11:23,200 --> 00:11:28,660
<font color="#CCCCCC">that's it's actually</font><font color="#E5E5E5"> compiled and as</font>

179
00:11:25,149 --> 00:11:32,350
fast as if you have described<font color="#E5E5E5"> your</font>

180
00:11:28,660 --> 00:11:35,110
application using<font color="#E5E5E5"> c-sharp C++</font>

181
00:11:32,350 --> 00:11:42,970
objective-c or<font color="#E5E5E5"> whatever and we actually</font>

182
00:11:35,110 --> 00:11:45,279
<font color="#CCCCCC">compiled into the assembly so we we we</font>

183
00:11:42,970 --> 00:11:48,940
can do that<font color="#E5E5E5"> and that that that's an</font>

184
00:11:45,279 --> 00:11:50,800
advice that<font color="#E5E5E5"> you you have to use</font><font color="#CCCCCC"> for all</font>

185
00:11:48,940 --> 00:11:53,640
<font color="#E5E5E5">of your mobile mobile application if you</font>

186
00:11:50,800 --> 00:11:57,189
<font color="#E5E5E5">ever withdrawals if you can do something</font>

187
00:11:53,640 --> 00:11:59,620
at compile time<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of at runtime</font>

188
00:11:57,190 --> 00:12:04,630
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have to do it</font><font color="#E5E5E5"> if you have an</font><font color="#CCCCCC"> image</font>

189
00:11:59,620 --> 00:12:07,690
<font color="#E5E5E5">and that time</font><font color="#CCCCCC"> H need to be resized</font><font color="#E5E5E5"> it's</font>

190
00:12:04,630 --> 00:12:09,550
better to resize<font color="#CCCCCC"> it on your computer</font>

191
00:12:07,690 --> 00:12:12,040
time at<font color="#CCCCCC"> the time of</font><font color="#E5E5E5"> creating the</font>

192
00:12:09,550 --> 00:12:14,109
application<font color="#E5E5E5"> instead of resizing</font><font color="#CCCCCC"> the</font>

193
00:12:12,040 --> 00:12:16,120
application<font color="#CCCCCC"> the resizing</font><font color="#E5E5E5"> the image at</font>

194
00:12:14,110 --> 00:12:17,950
the time of rendering if you can or if

195
00:12:16,120 --> 00:12:22,540
you know the<font color="#CCCCCC"> size it could be rendered</font>

196
00:12:17,950 --> 00:12:24,700
<font color="#E5E5E5">at resize it before because everything</font>

197
00:12:22,540 --> 00:12:25,719
that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> done on the device is done a</font>

198
00:12:24,700 --> 00:12:29,290
<font color="#E5E5E5">million</font><font color="#CCCCCC"> times</font>

199
00:12:25,720 --> 00:12:33,820
instead of being done once on your

200
00:12:29,290 --> 00:12:39,969
machine<font color="#E5E5E5"> and it's done on some low-end</font>

201
00:12:33,820 --> 00:12:42,130
<font color="#E5E5E5">devices yeah I know that if you if you</font>

202
00:12:39,970 --> 00:12:44,709
have if<font color="#E5E5E5"> you have top-up if you have a</font>

203
00:12:42,130 --> 00:12:49,240
<font color="#E5E5E5">top-of-the-range iPad it's probably more</font>

204
00:12:44,709 --> 00:12:51,099
performant that this laptop<font color="#CCCCCC"> but that's</font>

205
00:12:49,240 --> 00:12:52,690
not the case<font color="#E5E5E5"> I mean it's a case for us</font>

206
00:12:51,100 --> 00:12:54,279
in this room<font color="#CCCCCC"> in the case for</font><font color="#E5E5E5"> people in</font>

207
00:12:52,690 --> 00:12:57,910
the West<font color="#CCCCCC"> but it's not the case</font><font color="#E5E5E5"> for the</font>

208
00:12:54,279 --> 00:13:00,490
for<font color="#E5E5E5"> for the rest of the world most</font><font color="#CCCCCC"> of</font>

209
00:12:57,910 --> 00:13:03,310
the world<font color="#CCCCCC"> and to target the the big</font>

210
00:13:00,490 --> 00:13:05,350
market fold for the mobile application

211
00:13:03,310 --> 00:13:09,219
right<font color="#E5E5E5"> now</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> market for expansion the</font>

212
00:13:05,350 --> 00:13:15,160
market the<font color="#E5E5E5"> people that need applications</font>

213
00:13:09,220 --> 00:13:17,830
<font color="#E5E5E5">is it it's Africa</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> Asia its</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> and</font>

214
00:13:15,160 --> 00:13:20,319
and if you<font color="#E5E5E5"> if you go there you</font>

215
00:13:17,830 --> 00:13:22,750
you don't you<font color="#CCCCCC"> don't feel developers with</font>

216
00:13:20,320 --> 00:13:27,430
the same privilege that we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> in</font>

217
00:13:22,750 --> 00:13:28,779
Europe in<font color="#E5E5E5"> the US</font><font color="#CCCCCC"> and you don't run</font><font color="#E5E5E5"> that</font>

218
00:13:27,430 --> 00:13:33,489
they don't<font color="#E5E5E5"> really run with</font><font color="#CCCCCC"> the same</font>

219
00:13:28,779 --> 00:13:35,529
constraint<font color="#E5E5E5"> so so we we need to think</font>

220
00:13:33,490 --> 00:13:39,070
<font color="#CCCCCC">about the performance</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> need we need to</font>

221
00:13:35,529 --> 00:13:41,560
test or device or application<font color="#E5E5E5"> not on our</font>

222
00:13:39,070 --> 00:13:49,269
personal devices we need<font color="#CCCCCC"> to test them on</font>

223
00:13:41,560 --> 00:13:54,279
actual<font color="#E5E5E5"> devices use on the field so what</font>

224
00:13:49,269 --> 00:13:57,100
do we<font color="#E5E5E5"> do so we we do we achieve that</font>

225
00:13:54,279 --> 00:13:58,420
compiling summer into il so we have that

226
00:13:57,100 --> 00:14:01,630
example<font color="#E5E5E5"> that's exactly the same as</font>

227
00:13:58,420 --> 00:14:04,449
<font color="#E5E5E5">before</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> passed that to an ast and</font>

228
00:14:01,630 --> 00:14:06,189
<font color="#E5E5E5">ast is just a tree it has a</font><font color="#CCCCCC"> content page</font>

229
00:14:04,450 --> 00:14:07,510
the<font color="#E5E5E5"> content pages property content which</font>

230
00:14:06,190 --> 00:14:10,810
is a stack layout which is<font color="#CCCCCC"> a property</font>

231
00:14:07,510 --> 00:14:16,870
<font color="#E5E5E5">children and the children is actually a</font>

232
00:14:10,810 --> 00:14:18,790
label which has<font color="#CCCCCC"> a name and a text this</font>

233
00:14:16,870 --> 00:14:21,790
<font color="#E5E5E5">is actually actually exactly</font><font color="#CCCCCC"> the same</font>

234
00:14:18,790 --> 00:14:24,370
<font color="#CCCCCC">password</font><font color="#E5E5E5"> as the one we used to use at</font>

235
00:14:21,790 --> 00:14:32,910
<font color="#CCCCCC">runtime is a</font><font color="#E5E5E5"> marine forms</font><font color="#CCCCCC"> its policies</font>

236
00:14:24,370 --> 00:14:36,730
<font color="#E5E5E5">to</font><font color="#CCCCCC"> - - nasty</font><font color="#E5E5E5"> and then we on</font><font color="#CCCCCC"> est we run a</font>

237
00:14:32,910 --> 00:14:39,040
few we run a few visit or visit of<font color="#E5E5E5"> Vista</font>

238
00:14:36,730 --> 00:14:44,589
so so we implement a visitor pattern<font color="#E5E5E5"> and</font>

239
00:14:39,040 --> 00:14:50,680
we go or we go on all nodes<font color="#E5E5E5"> and do some</font>

240
00:14:44,589 --> 00:14:54,790
stuff<font color="#CCCCCC"> if you for working</font><font color="#E5E5E5"> on trees</font><font color="#CCCCCC"> like</font>

241
00:14:50,680 --> 00:14:57,069
this<font color="#CCCCCC"> on</font><font color="#E5E5E5"> EST this</font><font color="#CCCCCC"> o button is is-7</font><font color="#E5E5E5"> some a</font>

242
00:14:54,790 --> 00:14:59,730
really good one<font color="#CCCCCC"> because you can walk the</font>

243
00:14:57,070 --> 00:15:02,770
tree multiple time<font color="#E5E5E5"> without modifying it</font>

244
00:14:59,730 --> 00:15:03,220
<font color="#CCCCCC">and so we we have everything</font><font color="#E5E5E5"> in node</font>

245
00:15:02,770 --> 00:15:05,439
tree

246
00:15:03,220 --> 00:15:09,459
it's<font color="#CCCCCC"> a nine node and we have some</font>

247
00:15:05,440 --> 00:15:14,620
visitor<font color="#CCCCCC"> that that's implemented</font><font color="#E5E5E5"> that</font>

248
00:15:09,459 --> 00:15:17,170
<font color="#E5E5E5">that implement</font><font color="#CCCCCC"> the node visitor so the</font>

249
00:15:14,620 --> 00:15:21,670
<font color="#E5E5E5">most important one in this case because</font>

250
00:15:17,170 --> 00:15:24,099
<font color="#CCCCCC">I told</font><font color="#E5E5E5"> you examine language for creating</font>

251
00:15:21,670 --> 00:15:28,229
<font color="#E5E5E5">object and assigning properties so we</font>

252
00:15:24,100 --> 00:15:32,190
have a create value visitor<font color="#E5E5E5"> and we have</font>

253
00:15:28,230 --> 00:15:32,190
set properties visitor

254
00:15:32,260 --> 00:15:37,370
so that that's what we do

255
00:15:34,700 --> 00:15:38,840
<font color="#E5E5E5">so we we at first create all the objects</font>

256
00:15:37,370 --> 00:15:41,000
create the<font color="#E5E5E5"> content page create a stack</font>

257
00:15:38,840 --> 00:15:43,220
layout create the label create the

258
00:15:41,000 --> 00:15:45,230
object that will be said create<font color="#E5E5E5"> binding</font>

259
00:15:43,220 --> 00:15:50,990
and then on a second pass

260
00:15:45,230 --> 00:15:54,770
what we do is setting the name of the

261
00:15:50,990 --> 00:15:58,160
label<font color="#E5E5E5"> to label setting the text to a</font>

262
00:15:54,770 --> 00:15:59,750
binding setting the content<font color="#E5E5E5"> the children</font>

263
00:15:58,160 --> 00:16:01,370
of the stack layer to the label<font color="#E5E5E5"> and</font>

264
00:15:59,750 --> 00:16:08,570
setting the content of the content<font color="#E5E5E5"> page</font>

265
00:16:01,370 --> 00:16:12,050
<font color="#E5E5E5">to the stack layout and we do that</font><font color="#CCCCCC"> using</font>

266
00:16:08,570 --> 00:16:18,280
minoxidil<font color="#CCCCCC"> Mosul</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> an awesome</font><font color="#E5E5E5"> library</font>

267
00:16:12,050 --> 00:16:24,290
that generate and generate and an

268
00:16:18,280 --> 00:16:27,829
inspect assemblies so it's used for

269
00:16:24,290 --> 00:16:30,439
<font color="#E5E5E5">example Alexandrian we use it</font><font color="#CCCCCC"> for the</font>

270
00:16:27,830 --> 00:16:33,050
linker<font color="#E5E5E5"> the Rinker is the tool that</font><font color="#CCCCCC"> you</font>

271
00:16:30,440 --> 00:16:36,350
run<font color="#E5E5E5"> on the fully build application and</font>

272
00:16:33,050 --> 00:16:39,229
that<font color="#CCCCCC"> will remove all the stuff that you</font>

273
00:16:36,350 --> 00:16:42,820
don't need and again if an application

274
00:16:39,230 --> 00:16:45,500
is fully come fully<font color="#CCCCCC"> fully</font><font color="#E5E5E5"> contained</font>

275
00:16:42,820 --> 00:16:48,080
you can follow every pass and you can

276
00:16:45,500 --> 00:16:52,130
find that this function this class this

277
00:16:48,080 --> 00:16:53,660
type<font color="#E5E5E5"> this property is never used except</font>

278
00:16:52,130 --> 00:16:55,520
if it's used by reflection in<font color="#E5E5E5"> that case</font>

279
00:16:53,660 --> 00:16:59,980
we don't<font color="#E5E5E5"> know you have to</font><font color="#CCCCCC"> markup</font><font color="#E5E5E5"> but we</font>

280
00:16:55,520 --> 00:17:04,959
can remove everything and<font color="#E5E5E5"> we can we</font><font color="#CCCCCC"> can</font>

281
00:16:59,980 --> 00:17:09,319
reduce the<font color="#E5E5E5"> size of of an</font><font color="#CCCCCC"> assembly that</font>

282
00:17:04,959 --> 00:17:12,050
<font color="#E5E5E5">you might think that you do not write</font>

283
00:17:09,319 --> 00:17:14,569
code<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> not used back when</font><font color="#E5E5E5"> you when</font>

284
00:17:12,050 --> 00:17:16,790
you write<font color="#E5E5E5"> code you depend on them</font><font color="#CCCCCC"> as</font>

285
00:17:14,569 --> 00:17:19,250
<font color="#E5E5E5">correlate but if you ride</font><font color="#CCCCCC"> a seashore</font>

286
00:17:16,790 --> 00:17:21,800
application<font color="#E5E5E5"> and you don't use every</font>

287
00:17:19,250 --> 00:17:24,890
<font color="#E5E5E5">single</font><font color="#CCCCCC"> function of that Hammarskjold</font><font color="#E5E5E5"> so</font>

288
00:17:21,800 --> 00:17:28,220
you don't have to<font color="#E5E5E5"> ship it so CC does</font>

289
00:17:24,890 --> 00:17:35,270
that the<font color="#E5E5E5"> city city has been around since</font>

290
00:17:28,220 --> 00:17:39,590
2004<font color="#CCCCCC"> and it's done by by our</font><font color="#E5E5E5"> bio fan G</font>

291
00:17:35,270 --> 00:17:42,440
big G<font color="#CCCCCC"> be yeah if he was going</font><font color="#E5E5E5"> was living</font>

292
00:17:39,590 --> 00:17:44,559
in France<font color="#E5E5E5"> so he was he was coming to</font>

293
00:17:42,440 --> 00:17:48,600
<font color="#CCCCCC">Foss them every year</font>

294
00:17:44,559 --> 00:17:51,340
Burton time or I<font color="#CCCCCC"> move to Seattle</font>

295
00:17:48,600 --> 00:17:53,529
so do we do it so I told you<font color="#E5E5E5"> that we</font>

296
00:17:51,340 --> 00:17:57,668
just<font color="#CCCCCC"> right we were generating iron this</font>

297
00:17:53,529 --> 00:18:02,139
is<font color="#CCCCCC"> GI l we generate for the example the</font>

298
00:17:57,669 --> 00:18:04,860
<font color="#E5E5E5">example I will shown you so this is this</font>

299
00:18:02,139 --> 00:18:08,769
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the il this is the equivalent</font>

300
00:18:04,860 --> 00:18:12,668
<font color="#CCCCCC">decompile</font><font color="#E5E5E5"> she shot</font><font color="#CCCCCC"> you know she shop</font><font color="#E5E5E5"> so</font>

301
00:18:08,769 --> 00:18:14,409
we create the binding extension<font color="#CCCCCC"> the</font>

302
00:18:12,669 --> 00:18:17,049
binding extension is the<font color="#E5E5E5"> markup</font>

303
00:18:14,409 --> 00:18:19,659
extension with<font color="#CCCCCC"> the curly braces binding</font>

304
00:18:17,049 --> 00:18:23,950
we create the label we create the<font color="#CCCCCC"> stag</font>

305
00:18:19,659 --> 00:18:26,889
layout and that and we store every

306
00:18:23,950 --> 00:18:29,830
<font color="#CCCCCC">single of them in a</font><font color="#E5E5E5"> variable binding</font>

307
00:18:26,889 --> 00:18:34,029
<font color="#E5E5E5">layout</font><font color="#CCCCCC"> stack LaHood we do that what time</font>

308
00:18:29,830 --> 00:18:38,168
<font color="#E5E5E5">is it okay and then we set the</font>

309
00:18:34,029 --> 00:18:40,840
properties exactly with the<font color="#E5E5E5"> d IL we so</font>

310
00:18:38,169 --> 00:18:44,289
<font color="#E5E5E5">this is the code</font><font color="#CCCCCC"> we generate from our</font>

311
00:18:40,840 --> 00:18:46,840
<font color="#E5E5E5">example to</font><font color="#CCCCCC"> our compiler</font><font color="#E5E5E5"> so and this</font><font color="#CCCCCC"> is</font>

312
00:18:44,289 --> 00:18:49,299
<font color="#E5E5E5">quite equivalent to the C shop so we set</font>

313
00:18:46,840 --> 00:18:53,199
the<font color="#CCCCCC"> text as</font><font color="#E5E5E5"> the past property of the</font>

314
00:18:49,299 --> 00:18:56,769
binding we said we said<font color="#CCCCCC"> the text to the</font>

315
00:18:53,200 --> 00:19:01,539
<font color="#E5E5E5">past property of the binding</font><font color="#CCCCCC"> it over</font>

316
00:18:56,769 --> 00:19:05,879
there we set the binding<font color="#E5E5E5"> to the label</font>

317
00:19:01,539 --> 00:19:05,879
the label is the variable<font color="#CCCCCC"> one which is</font>

318
00:19:06,059 --> 00:19:13,960
over here<font color="#E5E5E5"> we add the label as a children</font>

319
00:19:10,509 --> 00:19:16,809
of the stack layout and we then set<font color="#CCCCCC"> the</font>

320
00:19:13,960 --> 00:19:19,690
value content to the stack layout and

321
00:19:16,809 --> 00:19:22,178
then we<font color="#E5E5E5"> return if you look at the number</font>

322
00:19:19,690 --> 00:19:24,070
<font color="#CCCCCC">we are</font><font color="#E5E5E5"> quite high because there are some</font>

323
00:19:22,179 --> 00:19:27,340
other<font color="#E5E5E5"> vehicle</font><font color="#CCCCCC"> that generates stuff those</font>

324
00:19:24,070 --> 00:19:29,080
are<font color="#CCCCCC"> for the ability of names for</font><font color="#E5E5E5"> the</font>

325
00:19:27,340 --> 00:19:34,330
<font color="#E5E5E5">ability of names</font><font color="#CCCCCC"> copying so you can do</font>

326
00:19:29,080 --> 00:19:35,549
<font color="#E5E5E5">fine name</font><font color="#CCCCCC"> mentioning stay still</font><font color="#E5E5E5"> and so</font>

327
00:19:34,330 --> 00:19:38,168
on

328
00:19:35,549 --> 00:19:40,929
so it's it's a bit<font color="#E5E5E5"> more complicated</font><font color="#CCCCCC"> than</font>

329
00:19:38,169 --> 00:19:44,049
<font color="#CCCCCC">just it but this</font><font color="#E5E5E5"> is this is the this is</font>

330
00:19:40,929 --> 00:19:47,230
<font color="#E5E5E5">the gesture waitis it it's the minimum</font>

331
00:19:44,049 --> 00:19:49,360
requirement<font color="#E5E5E5"> and then yeah we we we need</font>

332
00:19:47,230 --> 00:19:53,410
to<font color="#E5E5E5"> support some more complex when you</font>

333
00:19:49,360 --> 00:19:56,290
have references<font color="#CCCCCC"> between parts and</font>

334
00:19:53,410 --> 00:20:01,360
that<font color="#CCCCCC"> that's why that's why it gets</font>

335
00:19:56,290 --> 00:20:06,580
<font color="#E5E5E5">harder on performances</font><font color="#CCCCCC"> it compiles</font>

336
00:20:01,360 --> 00:20:09,729
examine faster than the equivalent<font color="#CCCCCC"> see</font>

337
00:20:06,580 --> 00:20:12,909
<font color="#E5E5E5">shop so examine is slightly less verbose</font>

338
00:20:09,730 --> 00:20:14,500
than<font color="#CCCCCC"> see shop</font><font color="#E5E5E5"> so if you have to write</font>

339
00:20:12,910 --> 00:20:17,800
the same<font color="#E5E5E5"> code in c-sharp that you would</font>

340
00:20:14,500 --> 00:20:22,570
write<font color="#CCCCCC"> in example you would have three to</font>

341
00:20:17,800 --> 00:20:26,020
<font color="#E5E5E5">five</font><font color="#CCCCCC"> time more see shop code because all</font>

342
00:20:22,570 --> 00:20:28,300
the binding is<font color="#CCCCCC"> done automatically you we</font>

343
00:20:26,020 --> 00:20:29,650
we most of<font color="#E5E5E5"> the time create the object</font>

344
00:20:28,300 --> 00:20:32,680
and<font color="#E5E5E5"> assign the properties on the same</font>

345
00:20:29,650 --> 00:20:40,390
line<font color="#E5E5E5"> something that not done usually in</font>

346
00:20:32,680 --> 00:20:45,880
<font color="#E5E5E5">C shop so this is this is</font><font color="#CCCCCC"> a run that</font>

347
00:20:40,390 --> 00:20:48,730
just<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> just did this morning so my</font>

348
00:20:45,880 --> 00:20:53,410
<font color="#E5E5E5">laptop was on the poor reserve</font><font color="#CCCCCC"> so which</font>

349
00:20:48,730 --> 00:20:57,870
wasn't so<font color="#E5E5E5"> those number are the order of</font>

350
00:20:53,410 --> 00:21:01,300
magnitude<font color="#CCCCCC"> is</font><font color="#E5E5E5"> right the number are not</font>

351
00:20:57,870 --> 00:21:06,699
are not describing the reality but

352
00:21:01,300 --> 00:21:10,090
basically the<font color="#CCCCCC"> example C for 1200 line of</font>

353
00:21:06,700 --> 00:21:12,280
examiner took three time less than<font color="#CCCCCC"> this</font>

354
00:21:10,090 --> 00:21:15,220
number<font color="#CCCCCC"> of c-sharp</font><font color="#E5E5E5"> and if you</font><font color="#CCCCCC"> multiply</font>

355
00:21:12,280 --> 00:21:17,290
that<font color="#E5E5E5"> by three or five you you end up</font>

356
00:21:15,220 --> 00:21:19,930
seeing<font color="#E5E5E5"> that we are a bit faster than</font>

357
00:21:17,290 --> 00:21:23,050
<font color="#CCCCCC">Roslin we are on the same</font><font color="#E5E5E5"> order of</font>

358
00:21:19,930 --> 00:21:28,960
magnitude<font color="#CCCCCC"> ad as the</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Oldman occupier</font>

359
00:21:23,050 --> 00:21:34,330
I think I've missed something

360
00:21:28,960 --> 00:21:36,700
okay so the runtime performance is

361
00:21:34,330 --> 00:21:40,330
totally worth it we are inflating the

362
00:21:36,700 --> 00:21:42,300
view real fast<font color="#E5E5E5"> most of the time we</font>

363
00:21:40,330 --> 00:21:44,409
inflate the view so we<font color="#E5E5E5"> turn</font><font color="#CCCCCC"> the exam er</font>

364
00:21:42,300 --> 00:21:46,600
not the example<font color="#E5E5E5"> because</font><font color="#CCCCCC"> example isn't</font>

365
00:21:44,410 --> 00:21:53,010
ship anymore<font color="#E5E5E5"> but we just construct the</font>

366
00:21:46,600 --> 00:21:56,919
object in a few<font color="#E5E5E5"> milliseconds we</font><font color="#CCCCCC"> also I</font>

367
00:21:53,010 --> 00:22:00,460
haven't<font color="#CCCCCC"> shown you that nor explain</font><font color="#E5E5E5"> but</font>

368
00:21:56,920 --> 00:22:04,650
if you take<font color="#E5E5E5"> this this is</font><font color="#CCCCCC"> a markup</font>

369
00:22:00,460 --> 00:22:07,150
extension<font color="#E5E5E5"> it actually can get compiled</font>

370
00:22:04,650 --> 00:22:10,330
<font color="#CCCCCC">just like all of the markup extension</font>

371
00:22:07,150 --> 00:22:12,340
and we<font color="#E5E5E5"> back by</font><font color="#CCCCCC"> doing a compiled binding</font>

372
00:22:10,330 --> 00:22:16,750
<font color="#E5E5E5">if you know what a binding is it's a way</font>

373
00:22:12,340 --> 00:22:19,870
to link between your view when your view

374
00:22:16,750 --> 00:22:21,700
model<font color="#E5E5E5"> and most of the time we do that by</font>

375
00:22:19,870 --> 00:22:23,620
reflection and by connecting<font color="#CCCCCC"> via</font>

376
00:22:21,700 --> 00:22:27,130
reflection to identify property change

377
00:22:23,620 --> 00:22:30,760
but if you<font color="#E5E5E5"> that if you know</font><font color="#CCCCCC"> the type of</font>

378
00:22:27,130 --> 00:22:32,290
the<font color="#CCCCCC"> view model</font><font color="#E5E5E5"> at compile time</font><font color="#CCCCCC"> you can</font>

379
00:22:30,760 --> 00:22:37,420
<font color="#CCCCCC">actually create a function that does</font>

380
00:22:32,290 --> 00:22:41,530
that and cut the cut the reflection<font color="#CCCCCC"> from</font>

381
00:22:37,420 --> 00:22:45,460
it and so we have<font color="#CCCCCC"> a boost up to</font><font color="#E5E5E5"> 200</font>

382
00:22:41,530 --> 00:22:48,370
<font color="#CCCCCC">times</font><font color="#E5E5E5"> on binding so bindings are known</font>

383
00:22:45,460 --> 00:22:51,750
to be<font color="#E5E5E5"> not that fast and that that's the</font>

384
00:22:48,370 --> 00:22:55,419
<font color="#E5E5E5">case</font><font color="#CCCCCC"> in most languages because they are</font>

385
00:22:51,750 --> 00:22:58,540
they are syntactic sure<font color="#E5E5E5"> they are</font>

386
00:22:55,420 --> 00:23:00,429
convenient<font color="#CCCCCC"> for the photo developer but</font>

387
00:22:58,540 --> 00:23:04,149
they are not know to be fast but if you

388
00:23:00,429 --> 00:23:07,809
<font color="#E5E5E5">manage to keep the syntax of the binding</font>

389
00:23:04,150 --> 00:23:09,340
and turn that<font color="#CCCCCC"> into</font><font color="#E5E5E5"> actual actual code</font>

390
00:23:07,809 --> 00:23:11,428
<font color="#CCCCCC">that</font><font color="#E5E5E5"> computation you get the same</font>

391
00:23:09,340 --> 00:23:16,720
performance<font color="#E5E5E5"> that if you were observing</font>

392
00:23:11,429 --> 00:23:19,860
the object<font color="#E5E5E5"> yourself so if you want to</font>

393
00:23:16,720 --> 00:23:22,540
know more or contribute to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> rain form</font>

394
00:23:19,860 --> 00:23:29,610
it's<font color="#CCCCCC"> on get</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> its armor in the slash</font>

395
00:23:22,540 --> 00:23:33,240
sorry inform that's it

396
00:23:29,610 --> 00:23:33,240
do you have any question

397
00:24:03,440 --> 00:24:10,600
[Music]

398
00:24:06,960 --> 00:24:14,980
now depending<font color="#CCCCCC"> on device</font><font color="#E5E5E5"> but if you know</font>

399
00:24:10,600 --> 00:24:16,658
do it<font color="#E5E5E5"> if you don't it's pretty Betty I'm</font>

400
00:24:14,980 --> 00:24:19,659
<font color="#CCCCCC">edge is what was just an example you</font><font color="#E5E5E5"> can</font>

401
00:24:16,659 --> 00:24:22,749
you<font color="#E5E5E5"> could compile if you have huge JSON</font>

402
00:24:19,659 --> 00:24:24,700
file<font color="#E5E5E5"> that you ship just your application</font>

403
00:24:22,749 --> 00:24:27,340
<font color="#E5E5E5">you can think of</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> way to pre-process</font>

404
00:24:24,700 --> 00:24:29,049
them<font color="#E5E5E5"> because those are stuff</font><font color="#CCCCCC"> that are</font>

405
00:24:27,340 --> 00:24:35,279
<font color="#E5E5E5">expensive to process at runtime and</font>

406
00:24:29,049 --> 00:24:37,899
image was<font color="#CCCCCC"> what was one was one of the</font>

407
00:24:35,279 --> 00:24:39,970
<font color="#CCCCCC">what's one of</font><font color="#E5E5E5"> the example but yeah most</font>

408
00:24:37,899 --> 00:24:43,809
of the time<font color="#E5E5E5"> you don't know the exact</font>

409
00:24:39,970 --> 00:24:45,460
resolution<font color="#E5E5E5"> but you know if you have</font>

410
00:24:43,809 --> 00:24:49,178
telemetry<font color="#CCCCCC"> on your application you</font>

411
00:24:45,460 --> 00:24:53,889
<font color="#CCCCCC">probably know</font><font color="#E5E5E5"> what are the</font><font color="#CCCCCC"> ten most</font>

412
00:24:49,179 --> 00:24:55,629
known size<font color="#E5E5E5"> at least four icons and some</font>

413
00:24:53,889 --> 00:24:58,658
of the image not the<font color="#CCCCCC"> a measure take full</font>

414
00:24:55,629 --> 00:25:00,100
<font color="#CCCCCC">screen but most of</font><font color="#E5E5E5"> the time those those</font>

415
00:24:58,659 --> 00:25:02,259
<font color="#E5E5E5">one you don't ship them with</font><font color="#CCCCCC"> the</font>

416
00:25:00,100 --> 00:25:04,748
application<font color="#E5E5E5"> nine major take</font><font color="#CCCCCC"> fullscreen</font>

417
00:25:02,259 --> 00:25:08,019
<font color="#CCCCCC">except</font><font color="#E5E5E5"> if it's if it's a background you</font>

418
00:25:04,749 --> 00:25:10,149
<font color="#CCCCCC">don't ship it</font><font color="#E5E5E5"> it's downloaded from from</font>

419
00:25:08,019 --> 00:25:11,619
a web service installed<font color="#CCCCCC"> then it's stored</font>

420
00:25:10,149 --> 00:25:12,850
in<font color="#E5E5E5"> your local storage</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> your</font>

421
00:25:11,619 --> 00:25:13,990
application<font color="#E5E5E5"> because you're doing a photo</font>

422
00:25:12,850 --> 00:25:17,110
<font color="#CCCCCC">application you're doing a news</font>

423
00:25:13,990 --> 00:25:19,539
application<font color="#CCCCCC"> and for</font><font color="#E5E5E5"> those one there is</font>

424
00:25:17,110 --> 00:25:20,949
very little we can<font color="#E5E5E5"> do but most of the</font>

425
00:25:19,539 --> 00:25:23,769
time that's a<font color="#CCCCCC"> singly</font><font color="#E5E5E5"> I made on</font><font color="#CCCCCC"> a page</font>

426
00:25:20,950 --> 00:25:25,269
<font color="#E5E5E5">but if you have a UI</font><font color="#CCCCCC"> that you're fully</font>

427
00:25:23,769 --> 00:25:27,429
drawn with some images<font color="#E5E5E5"> because you have</font>

428
00:25:25,269 --> 00:25:29,350
a button you have a pen you have<font color="#CCCCCC"> and if</font>

429
00:25:27,429 --> 00:25:32,950
if you<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you don't pre process those</font>

430
00:25:29,350 --> 00:25:36,699
image you will pay the<font color="#E5E5E5"> price</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> if it</font>

431
00:25:32,950 --> 00:25:40,749
if the the customer experience matters

432
00:25:36,700 --> 00:25:42,039
to you and<font color="#E5E5E5"> it should so you should</font><font color="#CCCCCC"> you</font>

433
00:25:40,749 --> 00:25:43,960
should<font color="#E5E5E5"> really murder</font>

434
00:25:42,039 --> 00:25:47,169
what takes<font color="#CCCCCC"> time in your application and</font>

435
00:25:43,960 --> 00:25:50,320
<font color="#E5E5E5">see where you can that's free time</font>

436
00:25:47,169 --> 00:26:01,610
that's<font color="#E5E5E5"> really free</font>

437
00:25:50,320 --> 00:26:03,500
<font color="#E5E5E5">what a question in the in this</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> in</font>

438
00:26:01,610 --> 00:26:09,010
the case of<font color="#CCCCCC"> this sample you you we have</font>

439
00:26:03,500 --> 00:26:14,720
some blog about it<font color="#E5E5E5"> but to be able to</font>

440
00:26:09,010 --> 00:26:19,879
compile the bindings<font color="#E5E5E5"> we have to yeah</font>

441
00:26:14,720 --> 00:26:22,010
we are the<font color="#CCCCCC"> Q&A</font><font color="#E5E5E5"> thank you - for example</font>

442
00:26:19,880 --> 00:26:26,120
<font color="#CCCCCC">computer to be able</font><font color="#E5E5E5"> to compile bindings</font>

443
00:26:22,010 --> 00:26:30,170
with us in<font color="#E5E5E5"> your</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> to tell this is</font>

444
00:26:26,120 --> 00:26:35,540
the<font color="#CCCCCC"> expected type for the view model</font><font color="#E5E5E5"> and</font>

445
00:26:30,170 --> 00:26:37,640
so we know that the it<font color="#E5E5E5"> was way out</font><font color="#CCCCCC"> of</font>

446
00:26:35,540 --> 00:26:40,159
this<font color="#E5E5E5"> 30 minute introduction to compile</font>

447
00:26:37,640 --> 00:26:42,620
<font color="#E5E5E5">example</font><font color="#CCCCCC"> zoom</font><font color="#E5E5E5"> but we have some block from</font>

448
00:26:40,160 --> 00:26:44,809
<font color="#E5E5E5">David about it so you you</font><font color="#CCCCCC"> just tag it at</font>

449
00:26:42,620 --> 00:26:48,280
the eye level<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> tag it at the</font>

450
00:26:44,809 --> 00:26:51,170
<font color="#E5E5E5">ListView level so you know that</font><font color="#CCCCCC"> for your</font>

451
00:26:48,280 --> 00:26:56,540
data template it<font color="#E5E5E5"> will be this and we can</font>

452
00:26:51,170 --> 00:26:59,210
<font color="#E5E5E5">compile everything so we are we are</font>

453
00:26:56,540 --> 00:27:01,610
still this is actually<font color="#E5E5E5"> shipped for the</font>

454
00:26:59,210 --> 00:27:05,390
past two and<font color="#CCCCCC"> a half year it's been</font>

455
00:27:01,610 --> 00:27:08,419
enabled by<font color="#CCCCCC"> default for the past year and</font>

456
00:27:05,390 --> 00:27:11,210
a bit<font color="#E5E5E5"> but we're still</font><font color="#CCCCCC"> working on</font><font color="#E5E5E5"> it we</font>

457
00:27:08,420 --> 00:27:13,520
still doing more and<font color="#E5E5E5"> more computation</font>

458
00:27:11,210 --> 00:27:15,790
<font color="#E5E5E5">and less and less</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> runtime just to</font>

459
00:27:13,520 --> 00:27:15,790
save time

460
00:27:18,750 --> 00:27:41,860
question yeah for example<font color="#CCCCCC"> I don't know</font><font color="#E5E5E5"> I</font>

461
00:27:39,130 --> 00:27:44,160
would say just measure measure

462
00:27:41,860 --> 00:27:44,159
everything

463
00:27:47,330 --> 00:27:54,609
[Applause]

464
00:28:15,750 --> 00:28:20,290
oh yeah I'm types of let's get back to

465
00:28:19,990 --> 00:28:38,590
you

466
00:28:20,290 --> 00:28:42,340
but where is the<font color="#CCCCCC"> next speaker hey are</font>

467
00:28:38,590 --> 00:28:43,399
you<font color="#CCCCCC"> Michaela</font><font color="#E5E5E5"> yeah hi Gail I'm Steve nice</font>

468
00:28:42,340 --> 00:28:44,770
<font color="#E5E5E5">to meet you</font>

469
00:28:43,400 --> 00:28:47,740
[Applause]

470
00:28:44,770 --> 00:28:50,980
[Music]

471
00:28:47,740 --> 00:28:50,980
it's fixed

472
00:28:51,330 --> 00:28:54,399
[Music]

473
00:28:55,030 --> 00:29:00,220
do we<font color="#CCCCCC"> have a level somewhere</font><font color="#E5E5E5"> that we can</font>

474
00:28:56,740 --> 00:29:07,150
see if it's good or<font color="#E5E5E5"> not or okay</font>

475
00:29:00,220 --> 00:29:09,810
<font color="#E5E5E5">hopefully it's okay okay I'm trying to</font>

476
00:29:07,150 --> 00:29:09,810
have to touch anything

477
00:29:11,040 --> 00:29:24,690
<font color="#E5E5E5">all right okay it's fine</font><font color="#CCCCCC"> hopefully it'll</font>

478
00:29:21,370 --> 00:29:24,689
be get<font color="#CCCCCC"> off my</font><font color="#E5E5E5"> iPhone as well</font>

479
00:29:28,230 --> 00:29:43,040
ooh<font color="#CCCCCC"> busy okay</font>

